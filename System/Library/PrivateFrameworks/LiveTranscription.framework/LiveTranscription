|| __DATA.__objc_data _OBJC_CLASS_$_AXLTAudioInfo
|| __DATA.__objc_data _OBJC_CLASS_$_AXLTClient
|| __DATA.__objc_data _OBJC_CLASS_$_AXLTLanguageAssetManager
|| __DATA.__objc_data _OBJC_CLASS_$_AXLTLockScreenObserver
|| __DATA.__objc_data _OBJC_CLASS_$_AXLTSegmentUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_AXLTTranscribedData
|| __DATA.__objc_data _OBJC_CLASS_$_AXLTTranscribedDataReceiver
|| __DATA.__objc_data _OBJC_CLASS_$_AXLTTranscription
|| __DATA.__objc_data _OBJC_METACLASS_$_AXLTAudioInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_AXLTClient
|| __DATA.__objc_data _OBJC_METACLASS_$_AXLTLanguageAssetManager
|| __DATA.__objc_data _OBJC_METACLASS_$_AXLTLockScreenObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_AXLTSegmentUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_AXLTTranscribedData
|| __DATA.__objc_data _OBJC_METACLASS_$_AXLTTranscribedDataReceiver
|| __DATA.__objc_data _OBJC_METACLASS_$_AXLTTranscription
|| __DATA_CONST.__const _AXLTCallID
|| __DATA_CONST.__const _AXLTCoalesceCaptionsTimePreferenceKey
|| __DATA_CONST.__const _AXLTDoNotUpdatePastCaptionsPreferenceKey
|| __DATA_CONST.__const _AXLTMicID
|| __DATA_CONST.__const _AXLTPreferenceDomain
|| __DATA_CONST.__const _AXLTScreenLockedNotification
|| __DATA_CONST.__const _AXLTScreenUnlockedNotification
|| __DATA_CONST.__const _AXLTSystemID
|| __DATA_CONST.__const _AXLTTypeToSpeakID
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AXLTLiveTranscription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AXLTPhoneCallListener
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AXLTLiveTranscription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AXLTPhoneCallListener
|| __TEXT.__text _AXLCLocString
__ AVFAudio: _AVAudioEngineConfigurationChangeNotification
__ AVFAudio: _AVAudioFileTypeKey
__ AVFAudio: _AVAudioSessionCategoryPlayAndRecord
__ AVFAudio: _AVAudioSessionMediaServicesWereResetNotification
__ AVFAudio: _OBJC_CLASS_$_AVAudioEngine
__ AVFAudio: _OBJC_CLASS_$_AVAudioFile
__ AVFAudio: _OBJC_CLASS_$_AVAudioFormat
__ AVFAudio: _OBJC_CLASS_$_AVAudioMixerNode
__ AVFAudio: _OBJC_CLASS_$_AVAudioPCMBuffer
__ AVFAudio: _OBJC_CLASS_$_AVAudioSession
__ AXCoreUtilities: _AXLogLiveTranscription
__ AudioToolbox: _AudioQueueAllocateBuffer
__ AudioToolbox: _AudioQueueDispose
__ AudioToolbox: _AudioQueueEnqueueBuffer
__ AudioToolbox: _AudioQueueFreeBuffer
__ AudioToolbox: _AudioQueueGetProperty
__ AudioToolbox: _AudioQueueNewInput
__ AudioToolbox: _AudioQueueSetProperty
__ AudioToolbox: _AudioQueueStart
__ AudioToolbox: _AudioQueueStop
__ AudioToolbox: _OBJC_CLASS_$_ATAudioTap
__ AudioToolbox: _OBJC_CLASS_$_ATAudioTapDescription
__ CallKit: _OBJC_CLASS_$_CXCallObserver
__ Celestial: _AVSystemController_PlayingSessionsDescriptionAttribute
__ Celestial: _AVSystemController_PlayingSessionsDescriptionKey_ClientPID
__ Celestial: _AVSystemController_ServerConnectionDiedNotification
__ Celestial: _AVSystemController_SomeSessionIsPlayingDidChangeNotification
__ Celestial: _AVSystemController_SomeSessionIsPlayingDidChangeNotificationParameter_Sessions
__ Celestial: _AVSystemController_SubscribeToNotificationsAttribute
__ Celestial: _OBJC_CLASS_$_AVSystemController
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreServices: _OBJC_CLASS_$_LSApplicationRecord
__ Foundation: _NSDebugDescriptionErrorKey
__ Foundation: _NSTemporaryDirectory
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileHandle
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSRelativeDateTimeFormatter
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ RunningBoardServices: _OBJC_CLASS_$_RBSProcessHandle
__ RunningBoardServices: _OBJC_CLASS_$_RBSProcessIdentifier
__ Speech: _OBJC_CLASS_$_SFSpeechAssetManager
__ Speech: _OBJC_CLASS_$_SFSpeechAudioBufferRecognitionRequest
__ Speech: _OBJC_CLASS_$_SFSpeechRecognizer
__ Speech: _OBJC_CLASS_$_SFTranscription
__ Speech: _OBJC_CLASS_$_SFTranscriptionSegment
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_suspend
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _malloc_size
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_log_type_enabled
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libswiftCore.dylib: __swiftEmptyArrayStorage
__ libswiftCore.dylib: _swift_allocObject
__ libswiftCore.dylib: _swift_arrayInitWithCopy
__ libswiftCore.dylib: _swift_bridgeObjectRelease
__ libswiftCore.dylib: _swift_bridgeObjectRetain
__ libswiftCore.dylib: _swift_bridgeObjectRetain_n
__ libswiftCore.dylib: _swift_dynamicCastObjCClass
__ libswiftCore.dylib: _swift_getObjCClassMetadata
__ libswiftCore.dylib: _swift_getObjectType
__ libswiftCore.dylib: _swift_getTypeByMangledNameInContext
__ libswiftCore.dylib: _swift_getWitnessTable
__ libswiftCore.dylib: _swift_isUniquelyReferenced_nonNull_bridgeObject
__ libswiftCore.dylib: _swift_once
__ libswiftCore.dylib: _swift_retain
__ libswiftCore.dylib: _swift_unknownObjectRelease
__ libswiftCore.dylib: _swift_unknownObjectRetain
AXLTPhoneCallListener : NSObject <CXCallObserverDelegate>
 @property  CXCallObserver *callObserver
 @property  <AXLTPhoneCallListenerDelegate> *delegate
 @property  BOOL isCallActive
 @property  NSArray *activeCallIDs
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AXLTPhoneCallListener sharedInstance]

  // instance methods
  -[AXLTPhoneCallListener setCallObserver:]
  -[AXLTPhoneCallListener callObserver]
  -[AXLTPhoneCallListener setDelegate:]
  -[AXLTPhoneCallListener _startObserving]
  -[AXLTPhoneCallListener delegate]
  -[AXLTPhoneCallListener .cxx_destruct]
  -[AXLTPhoneCallListener callObserver:callChanged:]
  -[AXLTPhoneCallListener isCallActive]
  -[AXLTPhoneCallListener init]
  -[AXLTPhoneCallListener activeCallIDs]
  -[AXLTPhoneCallListener setIsCallActive:]


AXLTAudioInfo : NSObject
 @property  long long requestType
 @property  int pid
 @property  NSArray *audioHistogram

  // instance methods
  -[AXLTAudioInfo requestType]
  -[AXLTAudioInfo .cxx_destruct]
  -[AXLTAudioInfo setRequestType:]
  -[AXLTAudioInfo pid]
  -[AXLTAudioInfo setPid:]
  -[AXLTAudioInfo initWithAudioInfo:requestType:pid:]
  -[AXLTAudioInfo audioHistogram]
  -[AXLTAudioInfo setAudioHistogram:]


AXLTTranscribedDataReceiver : NSObject
 @property  long long requestType
 @property  int targetPID
 @property  @? callbackBlock
 @property  @? audioInfoBlock

  // instance methods
  -[AXLTTranscribedDataReceiver requestType]
  -[AXLTTranscribedDataReceiver .cxx_destruct]
  -[AXLTTranscribedDataReceiver callbackBlock]
  -[AXLTTranscribedDataReceiver targetPID]
  -[AXLTTranscribedDataReceiver initWithRequestType:targetPID:handler:audioInfoBlock:]
  -[AXLTTranscribedDataReceiver audioInfoBlock]


AXLTSpeechTranscriber : NSObject <SFSpeechRecognizerDelegate, SFSpeechRecognitionTaskDelegate, AXLTTranscriberProtocol>
 @property  <AXLTTranscriberDelegateProtocol> *delegate
 @property  AVAudioEngine *audioEngine
 @property  AVAudioSession *audioSession
 @property  AXLTTranscriber *transcriber
 @property  int pid
 @property  NSDate *bufferLogTime
 @property  NSDate *textLogTime
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL isTranscribing

  // instance methods
  -[AXLTSpeechTranscriber audioEngine]
  -[AXLTSpeechTranscriber isTranscribing]
  -[AXLTSpeechTranscriber setDelegate:]
  -[AXLTSpeechTranscriber delegate]
  -[AXLTSpeechTranscriber .cxx_destruct]
  -[AXLTSpeechTranscriber initWithDelegate:]
  -[AXLTSpeechTranscriber pid]
  -[AXLTSpeechTranscriber cleanUp]
  -[AXLTSpeechTranscriber setPid:]
  -[AXLTSpeechTranscriber setAudioSession:]
  -[AXLTSpeechTranscriber audioSession]
  -[AXLTSpeechTranscriber mediaServicesWereReset:]
  -[AXLTSpeechTranscriber transcriber]
  -[AXLTSpeechTranscriber setTranscriber:]
  -[AXLTSpeechTranscriber setAudioEngine:]
  -[AXLTSpeechTranscriber setupAudioSession]
  -[AXLTSpeechTranscriber audioEngineConfigurationDidChange:]
  -[AXLTSpeechTranscriber startTranscription:]
  -[AXLTSpeechTranscriber stopTranscription:]
  -[AXLTSpeechTranscriber resetTranscription]
  -[AXLTSpeechTranscriber setIsTranscribing:]
  -[AXLTSpeechTranscriber initializeAudioTap]
  -[AXLTSpeechTranscriber setupTranscriberIfNeeded]
  -[AXLTSpeechTranscriber calcHistogramForBuffer:]
  -[AXLTSpeechTranscriber bufferLogTime]
  -[AXLTSpeechTranscriber setBufferLogTime:]
  -[AXLTSpeechTranscriber textLogTime]
  -[AXLTSpeechTranscriber setTextLogTime:]


AXLTTranscription : NSObject
 @property  SFSpeechRecognitionTask *task
 @property  SFTranscription *transcription
 @property  NSArray *nonUpdatingSegments
 @property  NSString *taskIdentifier
 @property  NSString *formattedString
 @property  NSArray *segments

  // instance methods
  -[AXLTTranscription setTask:]
  -[AXLTTranscription formattedString]
  -[AXLTTranscription segments]
  -[AXLTTranscription .cxx_destruct]
  -[AXLTTranscription taskIdentifier]
  -[AXLTTranscription task]
  -[AXLTTranscription transcription]
  -[AXLTTranscription setTranscription:]
  -[AXLTTranscription _shouldUseNonUpdatingSegments]
  -[AXLTTranscription initWithRecognitionTask:transcription:previousTranscription:]
  -[AXLTTranscription nonUpdatingSegments]
  -[AXLTTranscription setNonUpdatingSegments:]


AXLTSegmentUtilities : NSObject
  // class methods
  +[AXLTSegmentUtilities mergeOldSegments:withNewSegments:]
  +[AXLTSegmentUtilities isPuncuation:]


AXLTTestTranscriber : NSObject <AXLTTranscriberProtocol>
 @property  <AXLTTranscriberDelegateProtocol> *delegate
 @property  NSObject<OS_dispatch_source> *dispatchSource
 @property  BOOL isTranscribing
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AXLTTestTranscriber isTranscribing]
  -[AXLTTestTranscriber setDelegate:]
  -[AXLTTestTranscriber delegate]
  -[AXLTTestTranscriber .cxx_destruct]
  -[AXLTTestTranscriber initWithDelegate:]
  -[AXLTTestTranscriber startTranscription:]
  -[AXLTTestTranscriber stopTranscription:]
  -[AXLTTestTranscriber resetTranscription]
  -[AXLTTestTranscriber setIsTranscribing:]
  -[AXLTTestTranscriber dispatchSource]
  -[AXLTTestTranscriber setDispatchSource:]


AXLTTranscribedData : NSObject <NSSecureCoding>
 @property  AXLTTranscription *transcription
 @property  NSArray *nonUpdatingSegments
 @property  NSString *transcribedText
 @property  long long requestType
 @property  NSDate *timestamp
 @property  int pid
 @property  NSString *appID
 @property  NSString *appName
 @property  long long downloadProgress
 @property  BOOL silence

  // class methods
  +[AXLTTranscribedData supportsSecureCoding]

  // instance methods
  -[AXLTTranscribedData appName]
  -[AXLTTranscribedData downloadProgress]
  -[AXLTTranscribedData appID]
  -[AXLTTranscribedData setDownloadProgress:]
  -[AXLTTranscribedData setTimestamp:]
  -[AXLTTranscribedData encodeWithCoder:]
  -[AXLTTranscribedData requestType]
  -[AXLTTranscribedData .cxx_destruct]
  -[AXLTTranscribedData setRequestType:]
  -[AXLTTranscribedData setAppID:]
  -[AXLTTranscribedData setAppName:]
  -[AXLTTranscribedData pid]
  -[AXLTTranscribedData timestamp]
  -[AXLTTranscribedData setPid:]
  -[AXLTTranscribedData initWithCoder:]
  -[AXLTTranscribedData transcription]
  -[AXLTTranscribedData transcribedText]
  -[AXLTTranscribedData setTranscription:]
  -[AXLTTranscribedData nonUpdatingSegments]
  -[AXLTTranscribedData setNonUpdatingSegments:]
  -[AXLTTranscribedData initWithTranscription:requestType:timestamp:pid:appID:appName:downloadProgress:silence:]
  -[AXLTTranscribedData initWithTranscribedText:requestType:timestamp:pid:appID:appName:downloadProgress:silence:]
  -[AXLTTranscribedData setTranscribedText:]
  -[AXLTTranscribedData isSilence]
  -[AXLTTranscribedData setSilence:]


AXLTLanguageAssetManager : NSObject
 @property  BOOL languageAssetAvaliable
 @property  NSLocale *locale

  // class methods
  +[AXLTLanguageAssetManager sharedInstance]

  // instance methods
  -[AXLTLanguageAssetManager locale]
  -[AXLTLanguageAssetManager languageAssetAvaliable]
  -[AXLTLanguageAssetManager downloadSpeechAsset:]
  -[AXLTLanguageAssetManager deleteSpeechAsset]


AXLTAudioOutTranscriber : NSObject
 @property  AVAudioFormat *tapFormat
 @property  int pid
 @property  NSString *appID
 @property  NSString *appName
 @property  AXLTTranscriber *transcriber
 @property  <AXLTTranscriberDelegateProtocol> *delegate
 @property  long long audioBuffersAppendedCount
 @property  long long silentSamplesTailCount
 @property  int bufferState
 @property  AVAudioFile *audioFile
 @property  NSString *textFileName
 @property  NSFileHandle *textFile
 @property  NSString *filePath
 @property  NSDate *sessionStartTime
 @property  NSObject<OS_dispatch_queue> *saveQueue
 @property  NSDate *bufferLogTime
 @property  NSDate *textLogTime
 @property  long long silentBuffersCount
 @property  ^{OpaqueAudioQueue=} audioQueue

  // instance methods
  -[AXLTAudioOutTranscriber appName]
  -[AXLTAudioOutTranscriber cleanup]
  -[AXLTAudioOutTranscriber setFilePath:]
  -[AXLTAudioOutTranscriber appID]
  -[AXLTAudioOutTranscriber setDelegate:]
  -[AXLTAudioOutTranscriber sessionStartTime]
  -[AXLTAudioOutTranscriber setSessionStartTime:]
  -[AXLTAudioOutTranscriber delegate]
  -[AXLTAudioOutTranscriber filePath]
  -[AXLTAudioOutTranscriber .cxx_destruct]
  -[AXLTAudioOutTranscriber setAppID:]
  -[AXLTAudioOutTranscriber setAppName:]
  -[AXLTAudioOutTranscriber pid]
  -[AXLTAudioOutTranscriber setPid:]
  -[AXLTAudioOutTranscriber audioFile]
  -[AXLTAudioOutTranscriber setAudioFile:]
  -[AXLTAudioOutTranscriber audioQueue]
  -[AXLTAudioOutTranscriber setAudioQueue:]
  -[AXLTAudioOutTranscriber transcriber]
  -[AXLTAudioOutTranscriber setTranscriber:]
  -[AXLTAudioOutTranscriber setupTranscriberIfNeeded]
  -[AXLTAudioOutTranscriber bufferLogTime]
  -[AXLTAudioOutTranscriber setBufferLogTime:]
  -[AXLTAudioOutTranscriber textLogTime]
  -[AXLTAudioOutTranscriber setTextLogTime:]
  -[AXLTAudioOutTranscriber initWithPID:appID:appName:delegate:]
  -[AXLTAudioOutTranscriber createAudioBuffersWithBufferByteSize:error:]
  -[AXLTAudioOutTranscriber handleAudioBuffer:audioQueue:timestamp:packetCount:packetDesc:]
  -[AXLTAudioOutTranscriber _pauseSpeechRecognition]
  -[AXLTAudioOutTranscriber _findSilencePacketOffset:packetCount:silentSamplesMin:zeroOffsetOnly:]
  -[AXLTAudioOutTranscriber _isSilenceOnlyInBuffer:packetCount:]
  -[AXLTAudioOutTranscriber _calcHistogramForBuffer:packetCount:isSilence:]
  -[AXLTAudioOutTranscriber _appendBuffer:offsetInPackets:packetCount:]
  -[AXLTAudioOutTranscriber _saveAudioBuffer:]
  -[AXLTAudioOutTranscriber _saveTranscribedText:withTimeStamp:]
  -[AXLTAudioOutTranscriber tapFormat]
  -[AXLTAudioOutTranscriber setTapFormat:]
  -[AXLTAudioOutTranscriber audioBuffersAppendedCount]
  -[AXLTAudioOutTranscriber setAudioBuffersAppendedCount:]
  -[AXLTAudioOutTranscriber silentSamplesTailCount]
  -[AXLTAudioOutTranscriber setSilentSamplesTailCount:]
  -[AXLTAudioOutTranscriber bufferState]
  -[AXLTAudioOutTranscriber setBufferState:]
  -[AXLTAudioOutTranscriber textFileName]
  -[AXLTAudioOutTranscriber setTextFileName:]
  -[AXLTAudioOutTranscriber textFile]
  -[AXLTAudioOutTranscriber setTextFile:]
  -[AXLTAudioOutTranscriber saveQueue]
  -[AXLTAudioOutTranscriber setSaveQueue:]
  -[AXLTAudioOutTranscriber silentBuffersCount]
  -[AXLTAudioOutTranscriber setSilentBuffersCount:]


AXLTTranscriber : NSObject <SFSpeechRecognizerDelegate, SFSpeechRecognitionTaskDelegate>
 @property  SFSpeechRecognizer *recognizer
 @property  SFSpeechAudioBufferRecognitionRequest *recognitionRequest
 @property  SFSpeechRecognitionTask *recognitionTask
 @property  AXLTTranscription *currentTranscription
 @property  @? transcriptionCallback
 @property  @? completionCallback
 @property  int pid
 @property  NSString *appName
 @property  BOOL isInUse
 @property  AXLTLanguageAssetManager *languageAssetManager
 @property  NSTimer *captionCoalescingTimer
 @property  long long downloadState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AXLTTranscriber sharedInstance]

  // instance methods
  -[AXLTTranscriber appName]
  -[AXLTTranscriber setDownloadState:]
  -[AXLTTranscriber dealloc]
  -[AXLTTranscriber .cxx_destruct]
  -[AXLTTranscriber setCompletionCallback:]
  -[AXLTTranscriber setAppName:]
  -[AXLTTranscriber pid]
  -[AXLTTranscriber downloadState]
  -[AXLTTranscriber setPid:]
  -[AXLTTranscriber isInUse]
  -[AXLTTranscriber init]
  -[AXLTTranscriber speechRecognitionDidDetectSpeech:]
  -[AXLTTranscriber speechRecognitionTask:didHypothesizeTranscription:]
  -[AXLTTranscriber speechRecognitionTask:didFinishRecognition:]
  -[AXLTTranscriber speechRecognitionTaskFinishedReadingAudio:]
  -[AXLTTranscriber speechRecognitionTaskWasCancelled:]
  -[AXLTTranscriber speechRecognitionTask:didFinishSuccessfully:]
  -[AXLTTranscriber completionCallback]
  -[AXLTTranscriber recognizer]
  -[AXLTTranscriber setRecognizer:]
  -[AXLTTranscriber currentTranscription]
  -[AXLTTranscriber setCurrentTranscription:]
  -[AXLTTranscriber startTranscriptionForPID:appName:callback:completionCallback:]
  -[AXLTTranscriber stopTranscriptionForPID:]
  -[AXLTTranscriber recognitionTaskHint]
  -[AXLTTranscriber resumeTranscriptionForPID:]
  -[AXLTTranscriber isTranscribingForPID:]
  -[AXLTTranscriber appendAudioPCMBuffer:forPID:]
  -[AXLTTranscriber _downloadAndInstallSpeechRecognizer]
  -[AXLTTranscriber _coalsecingTime]
  -[AXLTTranscriber recognitionRequest]
  -[AXLTTranscriber setRecognitionRequest:]
  -[AXLTTranscriber recognitionTask]
  -[AXLTTranscriber setRecognitionTask:]
  -[AXLTTranscriber transcriptionCallback]
  -[AXLTTranscriber setTranscriptionCallback:]
  -[AXLTTranscriber setIsInUse:]
  -[AXLTTranscriber languageAssetManager]
  -[AXLTTranscriber setLanguageAssetManager:]
  -[AXLTTranscriber captionCoalescingTimer]
  -[AXLTTranscriber setCaptionCoalescingTimer:]


AXLTLiveTranscription : NSObject <AXLTTranscriberDelegateProtocol>
 @property  AXLTSpeechTranscriber *speechTranscriber
 @property  AXLTTestTranscriber *testTranscriber
 @property  NSMutableDictionary *dataReceivers
 @property  AVSpeechSynthesizer *speechSynthesizer
 @property  <AXLTLiveTranscriptionDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AXLTLiveTranscription sharedInstance]

  // instance methods
  -[AXLTLiveTranscription setDelegate:]
  -[AXLTLiveTranscription delegate]
  -[AXLTLiveTranscription .cxx_destruct]
  -[AXLTLiveTranscription init]
  -[AXLTLiveTranscription speechSynthesizer]
  -[AXLTLiveTranscription setSpeechSynthesizer:]
  -[AXLTLiveTranscription stopTranscribing:targetPID:error:]
  -[AXLTLiveTranscription startTranscribing:targetPID:callbackBlock:error:]
  -[AXLTLiveTranscription transcriberOutputData:]
  -[AXLTLiveTranscription audioInfoData:]
  -[AXLTLiveTranscription startTranscribing:callbackBlock:error:]
  -[AXLTLiveTranscription startTranscribing:excludingPIDs:callbackBlock:error:]
  -[AXLTLiveTranscription startTranscribing:targetPID:callbackBlock:audioInfoBlock:error:]
  -[AXLTLiveTranscription startTranscribing:targetPID:excludingPIDs:callbackBlock:audioInfoBlock:error:]
  -[AXLTLiveTranscription stopTranscribing:error:]
  -[AXLTLiveTranscription resetTranscribing:]
  -[AXLTLiveTranscription _receiverKeyForRequestType:targetPID:]
  -[AXLTLiveTranscription _pidSupportsCoreMediaNotifications:]
  -[AXLTLiveTranscription speechTranscriber]
  -[AXLTLiveTranscription setSpeechTranscriber:]
  -[AXLTLiveTranscription testTranscriber]
  -[AXLTLiveTranscription setTestTranscriber:]
  -[AXLTLiveTranscription dataReceivers]
  -[AXLTLiveTranscription setDataReceivers:]


AXLTHistogramCalculator : NSObject
  // class methods
  +[AXLTHistogramCalculator histogramForAudioPCMBuffer:]
  +[AXLTHistogramCalculator histogramForAudioQueueBuffer:packetCount:channelsCount:format:]
  +[AXLTHistogramCalculator histogramForInt16MonoBuffer:samplesCount:]
  +[AXLTHistogramCalculator histogramForFloat32MonoBuffer:samplesCount:]


AXLTClient : NSObject <AXLTXPCClientProtocol>
 @property  NSXPCConnection *serviceConnection
 @property  NSMutableDictionary *dataReceivers
 @property  NSObject<OS_dispatch_queue> *clientQueue

  // instance methods
  -[AXLTClient setClientQueue:]
  -[AXLTClient clientQueue]
  -[AXLTClient .cxx_destruct]
  -[AXLTClient serviceConnection]
  -[AXLTClient init]
  -[AXLTClient setServiceConnection:]
  -[AXLTClient dataReceivers]
  -[AXLTClient setDataReceivers:]
  -[AXLTClient transcribedData:]
  -[AXLTClient initializeServiceConnection]
  -[AXLTClient registerForTranscriptionIfNecessary]
  -[AXLTClient startTranscribing:client:callbackBlock:error:]
  -[AXLTClient startTranscribing:targetPID:client:callbackBlock:error:]
  -[AXLTClient stopTranscribing:client:error:]
  -[AXLTClient stopTranscribing:targetPID:client:error:]
  -[AXLTClient pingServiceWithHandler:]


AXLTLockScreenObserver : NSObject
 @property  <AXLTLockScreenObserverDelegate> *delegate

  // instance methods
  -[AXLTLockScreenObserver setDelegate:]
  -[AXLTLockScreenObserver delegate]
  -[AXLTLockScreenObserver .cxx_destruct]
  -[AXLTLockScreenObserver init]
  -[AXLTLockScreenObserver _registerScreenNotification]
  -[AXLTLockScreenObserver _updateScreenLock:]


AXLTAudioOutManager : NSObject <AXLTTranscriberProtocol>
 @property  NSObject<OS_dispatch_queue> *bufferQueue
 @property  NSMapTable *processToTranscriberMap
 @property  AVSystemController *avSystemController
 @property  BOOL subscribed
 @property  <AXLTTranscriberDelegateProtocol> *delegate
 @property  BOOL isTranscribing
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AXLTAudioOutManager sharedInstance]
  +[AXLTAudioOutManager isExcludedAppID:]

  // instance methods
  -[AXLTAudioOutManager subscribed]
  -[AXLTAudioOutManager isTranscribing]
  -[AXLTAudioOutManager setDelegate:]
  -[AXLTAudioOutManager delegate]
  -[AXLTAudioOutManager dealloc]
  -[AXLTAudioOutManager .cxx_destruct]
  -[AXLTAudioOutManager _avSessionMediaServicesResetNotification:]
  -[AXLTAudioOutManager setSubscribed:]
  -[AXLTAudioOutManager init]
  -[AXLTAudioOutManager avSystemController]
  -[AXLTAudioOutManager setAvSystemController:]
  -[AXLTAudioOutManager startTranscription:]
  -[AXLTAudioOutManager stopTranscription:]
  -[AXLTAudioOutManager resetTranscription]
  -[AXLTAudioOutManager setIsTranscribing:]
  -[AXLTAudioOutManager isTranscribingForPID:]
  -[AXLTAudioOutManager _pidSupportsCoreMediaNotifications:]
  -[AXLTAudioOutManager _someSessionIsPlayingDidChangeNotification:]
  -[AXLTAudioOutManager _reportErrorWithCode:debugErrorString:cleanupForPID:]
  -[AXLTAudioOutManager _startTranscriptionForPID:error:]
  -[AXLTAudioOutManager _startTranscriptionForPID:appName:error:]
  -[AXLTAudioOutManager _startTranscriptionForPID:appName:excludingPIDs:error:]
  -[AXLTAudioOutManager _startTranscriptionForPID:appID:appName:error:]
  -[AXLTAudioOutManager _startTranscriptionForPID:appID:appName:excludingPIDs:error:]
  -[AXLTAudioOutManager _stopTranscriptionForPID:error:]
  -[AXLTAudioOutManager handleInputBufferWithContext:audioQueue:audioBuffer:timestamp:packetCount:packetDesc:]
  -[AXLTAudioOutManager _cleanupForPID:]
  -[AXLTAudioOutManager _cleanupAllPids]
  -[AXLTAudioOutManager _tapDescriptionForPID:tapFormat:excludePIDs:]
  -[AXLTAudioOutManager registerFirstTimeForAVSystemControllerNotifications]
  -[AXLTAudioOutManager registerForAVSystemContollerNotifications]
  -[AXLTAudioOutManager unregisterForAVSystemContollerNotifications]
  -[AXLTAudioOutManager _setupAVSystemNotificationSystem]
  -[AXLTAudioOutManager updateAudioSessionsInfoFromSessionsArray:]
  -[AXLTAudioOutManager appInfoFromPid:]
  -[AXLTAudioOutManager bufferQueue]
  -[AXLTAudioOutManager setBufferQueue:]
  -[AXLTAudioOutManager processToTranscriberMap]


(AXLTTimeUtilities)
	// class methods
	+[(AXLTTimeUtilities) dateToString:]
	+[(AXLTTimeUtilities) stringToDate:]
	+[(AXLTTimeUtilities) timeAgoSinceDateString:]
	+[(AXLTTimeUtilities) timeAgoSinceDate:currentDate:]
	+[(AXLTTimeUtilities) timeDifferenceDateStringOld:dateStringNew:]

01 00 0700 /System/Library/Frameworks/AudioToolbox.framework/AudioToolbox: ATAudioTap 
01 00 0700 /System/Library/Frameworks/AudioToolbox.framework/AudioToolbox: ATAudioTapDescription 
01 00 0200 /System/Library/Frameworks/AVFAudio.framework/AVFAudio: AVAudioEngine 
01 00 0200 /System/Library/Frameworks/AVFAudio.framework/AVFAudio: AVAudioFile 
01 00 0200 /System/Library/Frameworks/AVFAudio.framework/AVFAudio: AVAudioFormat 
01 00 0200 /System/Library/Frameworks/AVFAudio.framework/AVFAudio: AVAudioMixerNode 
01 00 0200 /System/Library/Frameworks/AVFAudio.framework/AVFAudio: AVAudioPCMBuffer 
01 00 0200 /System/Library/Frameworks/AVFAudio.framework/AVFAudio: AVAudioSession 
01 00 0100 /System/Library/PrivateFrameworks/Celestial.framework/Celestial: AVSystemController 
01 00 0500 /System/Library/Frameworks/CallKit.framework/CallKit: CXCallObserver 
01 00 0400 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationRecord 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileHandle 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0a00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSRelativeDateTimeFormatter 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0800 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSProcessHandle 
01 00 0800 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSProcessIdentifier 
01 00 0600 /System/Library/Frameworks/Speech.framework/Speech: SFSpeechAssetManager 
01 00 0600 /System/Library/Frameworks/Speech.framework/Speech: SFSpeechAudioBufferRecognitionRequest 
01 00 0600 /System/Library/Frameworks/Speech.framework/Speech: SFSpeechRecognizer 
01 00 0600 /System/Library/Frameworks/Speech.framework/Speech: SFTranscription 
01 00 0600 /System/Library/Frameworks/Speech.framework/Speech: SFTranscriptionSegment 
