|| __DATA.__data _TVRViewServiceDeviceIdentifierTypeNone
|| __DATA.__objc_data _OBJC_CLASS_$_LaunchApplicationIntentResponse
|| __DATA.__objc_data _OBJC_CLASS_$_LaunchRemoteIntentResponse
|| __DATA.__objc_data _OBJC_CLASS_$_LaunchScreenSaverIntentResponse
|| __DATA.__objc_data _OBJC_CLASS_$_LaunchTVAppIntentResponse
|| __DATA.__objc_data _OBJC_CLASS_$_PauseContentIntentResponse
|| __DATA.__objc_data _OBJC_CLASS_$_ReduceLoudSoundsIntentResponse
|| __DATA.__objc_data _OBJC_CLASS_$_SkipContentIntentResponse
|| __DATA.__objc_data _OBJC_CLASS_$_SkipContentSkipDurationResolutionResult
|| __DATA.__objc_data _OBJC_CLASS_$_SleepAppleTVIntentResponse
|| __DATA.__objc_data _OBJC_CLASS_$_SwitchUserAccountIntentResponse
|| __DATA.__objc_data _OBJC_CLASS_$_TVRApplication
|| __DATA.__objc_data _OBJC_CLASS_$_TVRApplicationResolutionResult
|| __DATA.__objc_data _OBJC_CLASS_$_TVRCaptionsToggleResolutionResult
|| __DATA.__objc_data _OBJC_CLASS_$_TVRDevice
|| __DATA.__objc_data _OBJC_CLASS_$_TVRDeviceResolutionResult
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMatchPointTouchProcessor
|| __DATA.__objc_data _OBJC_CLASS_$_TVRMediaCommandResolutionResult
|| __DATA.__objc_data _OBJC_CLASS_$_TVRSkipCommandResolutionResult
|| __DATA.__objc_data _OBJC_CLASS_$_TVRStandardTouchProcessor
|| __DATA.__objc_data _OBJC_CLASS_$_TVRSystemAppearanceToggleResolutionResult
|| __DATA.__objc_data _OBJC_CLASS_$_TVRTouchProcessor
|| __DATA.__objc_data _OBJC_CLASS_$_TVRUIAlertAnimationController
|| __DATA.__objc_data _OBJC_CLASS_$_TVRUIAlertFadeAnimationController
|| __DATA.__objc_data _OBJC_CLASS_$_TVRUIButtonEvent
|| __DATA.__objc_data _OBJC_CLASS_$_TVRUIControlPanelViewController
|| __DATA.__objc_data _OBJC_CLASS_$_TVRUICoreDevice
|| __DATA.__objc_data _OBJC_CLASS_$_TVRUICoreDeviceQuery
|| __DATA.__objc_data _OBJC_CLASS_$_TVRUIDarkStyleProvider
|| __DATA.__objc_data _OBJC_CLASS_$_TVRUIDevice
|| __DATA.__objc_data _OBJC_CLASS_$_TVRUIDeviceQuery
|| __DATA.__objc_data _OBJC_CLASS_$_TVRUIIntentManager
|| __DATA.__objc_data _OBJC_CLASS_$_TVRUIMediaControlsViewController
|| __DATA.__objc_data _OBJC_CLASS_$_TVRUIStandardTouchProcessor
|| __DATA.__objc_data _OBJC_CLASS_$_TVRUITouchEvent
|| __DATA.__objc_data _OBJC_CLASS_$_TVRUIUnpairedDevices
|| __DATA.__objc_data _OBJC_CLASS_$_TVRUserAccount
|| __DATA.__objc_data _OBJC_CLASS_$_TVRUserAccountResolutionResult
|| __DATA.__objc_data _OBJC_CLASS_$_TVRViewServiceConfigContext
|| __DATA.__objc_data _OBJC_CLASS_$_TVRViewServiceManager
|| __DATA.__objc_data _OBJC_CLASS_$_ToggleCaptionsIntentResponse
|| __DATA.__objc_data _OBJC_CLASS_$_ToggleSystemAppearanceIntentResponse
|| __DATA.__objc_data _OBJC_CLASS_$_WakeAppleTVIntentResponse
|| __DATA.__objc_data _OBJC_CLASS_$__TVRAlertController
|| __DATA.__objc_data _OBJC_CLASS_$__TVRAlertView
|| __DATA.__objc_data _OBJC_CLASS_$__TVRButtonHaptic
|| __DATA.__objc_data _OBJC_CLASS_$__TVRCTouchInfo
|| __DATA.__objc_data _OBJC_CLASS_$__TVRDropDownTableViewFooterView
|| __DATA.__objc_data _OBJC_CLASS_$__TVREventHaptic
|| __DATA.__objc_data _OBJC_CLASS_$__TVRKeyboardHaptic
|| __DATA.__objc_data _OBJC_CLASS_$__TVRLayoutInfo
|| __DATA.__objc_data _OBJC_CLASS_$__TVRMAlertButton
|| __DATA.__objc_data _OBJC_CLASS_$__TVRMAlertControllerTransitioning
|| __DATA.__objc_data _OBJC_CLASS_$__TVRMaterialView
|| __DATA.__objc_data _OBJC_CLASS_$__TVRMessageView
|| __DATA.__objc_data _OBJC_CLASS_$__TVRPasscodeField
|| __DATA.__objc_data _OBJC_CLASS_$__TVRPresentationController
|| __DATA.__objc_data _OBJC_CLASS_$__TVRSiriHaptic
|| __DATA.__objc_data _OBJC_CLASS_$__TVRTapToRadarManager
|| __DATA.__objc_data _OBJC_CLASS_$__TVRTextField
|| __DATA.__objc_data _OBJC_CLASS_$__TVRTransitioningDelegate
|| __DATA.__objc_data _OBJC_CLASS_$__TVRUICubicSpringAnimator
|| __DATA.__objc_data _OBJC_CLASS_$__TVRUICubicSpringTimingParameters
|| __DATA.__objc_data _OBJC_CLASS_$__TVRUIDeviceListCell
|| __DATA.__objc_data _OBJC_CLASS_$__TVRUIDevicePickerView
|| __DATA.__objc_data _OBJC_CLASS_$__TVRUIFeatures
|| __DATA.__objc_data _OBJC_CLASS_$__TVRUINetworkObserver
|| __DATA.__objc_data _OBJC_CLASS_$__TVRUITouch
|| __DATA.__objc_data _OBJC_CLASS_$__TVRemoteAlertVisualStyleProviding
|| __DATA.__objc_data _OBJC_CLASS_$__TVRemoteAlertVisualStyle_Pad
|| __DATA.__objc_data _OBJC_CLASS_$__TVRemoteAlertVisualStyle_Phone
|| __DATA.__objc_data _OBJC_METACLASS_$_LaunchApplicationIntentResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_LaunchRemoteIntentResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_LaunchScreenSaverIntentResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_LaunchTVAppIntentResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_PauseContentIntentResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_ReduceLoudSoundsIntentResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_SkipContentIntentResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_SkipContentSkipDurationResolutionResult
|| __DATA.__objc_data _OBJC_METACLASS_$_SleepAppleTVIntentResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_SwitchUserAccountIntentResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRApplication
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRApplicationResolutionResult
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRCaptionsToggleResolutionResult
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRDevice
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRDeviceResolutionResult
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMatchPointTouchProcessor
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRMediaCommandResolutionResult
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRSkipCommandResolutionResult
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRStandardTouchProcessor
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRSystemAppearanceToggleResolutionResult
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRTouchProcessor
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRUIAlertAnimationController
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRUIAlertFadeAnimationController
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRUIButtonEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRUIControlPanelViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRUICoreDevice
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRUICoreDeviceQuery
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRUIDarkStyleProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRUIDevice
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRUIDeviceQuery
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRUIIntentManager
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRUIMediaControlsViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRUIStandardTouchProcessor
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRUITouchEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRUIUnpairedDevices
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRUserAccount
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRUserAccountResolutionResult
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRViewServiceConfigContext
|| __DATA.__objc_data _OBJC_METACLASS_$_TVRViewServiceManager
|| __DATA.__objc_data _OBJC_METACLASS_$_ToggleCaptionsIntentResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_ToggleSystemAppearanceIntentResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_WakeAppleTVIntentResponse
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRAlertController
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRAlertView
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRButtonHaptic
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRCTouchInfo
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRDropDownTableViewFooterView
|| __DATA.__objc_data _OBJC_METACLASS_$__TVREventHaptic
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRKeyboardHaptic
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRLayoutInfo
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRMAlertButton
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRMAlertControllerTransitioning
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRMaterialView
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRMessageView
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRPasscodeField
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRPresentationController
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRSiriHaptic
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRTapToRadarManager
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRTextField
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRTransitioningDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRUICubicSpringAnimator
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRUICubicSpringTimingParameters
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRUIDeviceListCell
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRUIDevicePickerView
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRUIFeatures
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRUINetworkObserver
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRUITouch
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRemoteAlertVisualStyleProviding
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRemoteAlertVisualStyle_Pad
|| __DATA.__objc_data _OBJC_METACLASS_$__TVRemoteAlertVisualStyle_Phone
|| __DATA_CONST.__const _TVRViewServiceDidAppearNotificationName
|| __DATA_CONST.__const _TVRViewServiceDidDisappearNotificationName
|| __DATA_CONST.__const _TVRViewServiceWillAppearNotificationName
|| __DATA_CONST.__const _TVRViewServiceWillDisappearNotificationName
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_LaunchApplicationIntent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_LaunchRemoteIntent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_LaunchScreenSaverIntent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_LaunchTVAppIntent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PauseContentIntent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ReduceLoudSoundsIntent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SkipContentIntent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SleepAppleTVIntent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SwitchUserAccountIntent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TVRTouchpadView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TVRUIButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TVRUICaptionsButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TVRUIDevicePickerViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TVRUIRemoteViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TVRUITouchpadViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ToggleCaptionsIntent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ToggleSystemAppearanceIntent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WakeAppleTVIntent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__TVRKeyboardView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__TVRMatchPointArtworkView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__TVRUIButtonPanelView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__TVRUIDirectionalControlView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__TVRUITouchpadView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_LaunchApplicationIntent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_LaunchRemoteIntent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_LaunchScreenSaverIntent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_LaunchTVAppIntent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PauseContentIntent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ReduceLoudSoundsIntent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SkipContentIntent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SleepAppleTVIntent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SwitchUserAccountIntent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TVRTouchpadView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TVRUIButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TVRUICaptionsButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TVRUIDevicePickerViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TVRUIRemoteViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TVRUITouchpadViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ToggleCaptionsIntent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ToggleSystemAppearanceIntent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WakeAppleTVIntent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__TVRKeyboardView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__TVRMatchPointArtworkView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__TVRUIButtonPanelView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__TVRUIDirectionalControlView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__TVRUITouchpadView
|| __TEXT.__const _TVRemoteUIVersionNumber
|| __TEXT.__const _TVRemoteUIVersionString
|| __TEXT.__const __TVRAlertViewPreferredWidth
|| __TEXT.__text __TVRUIGeneralLog
|| __TEXT.__text __TVRUIInstrumentationLog
|| __TEXT.__text __TVRUINetworkObserverLog
|| __TEXT.__text __TVRUIViewServiceLog
__ AudioToolbox: _AudioServicesPlaySystemSound
__ AudioToolbox: _AudioServicesPlaySystemSoundWithOptions
__ AudioToolbox: _kAudioServicesPlaySystemSoundOptionBehaviorKey
__ AudioToolbox: _kAudioServicesPlaySystemSoundOptionFlagsKey
__ BaseBoard: _OBJC_CLASS_$_BSAction
__ BaseBoard: _OBJC_CLASS_$_BSMutableSettings
__ ControlCenterUIKit: _OBJC_CLASS_$_CCUICAPackageView
__ CoreBluetooth: _CBCentralManagerOptionShowPowerAlertKey
__ CoreBluetooth: _OBJC_CLASS_$_CBCentralManager
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFRelease
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreGraphics: _CGAffineTransformIdentity
__ CoreGraphics: _CGAffineTransformMakeRotation
__ CoreGraphics: _CGAffineTransformMakeScale
__ CoreGraphics: _CGContextFillEllipseInRect
__ CoreGraphics: _CGContextSetFillColorWithColor
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectContainsPoint
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetMidY
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectInset
__ CoreGraphics: _CGRectIntegral
__ CoreGraphics: _CGRectIntersection
__ CoreGraphics: _CGRectIsEmpty
__ CoreGraphics: _CGRectIsNull
__ CoreGraphics: _CGRectNull
__ CoreGraphics: _CGRectOffset
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ CoreServices: _OBJC_CLASS_$_LSApplicationWorkspace
__ CoreServices: _OBJC_CLASS_$__LSOpenConfiguration
__ CoreText: _kCTFontUIFontDesignMonospaced
__ CoreText: _kCTFontUIFontDesignRounded
__ CoreUtils: _OBJC_CLASS_$_CUSystemMonitor
__ Foundation: _NSLog
__ Foundation: _NSTemporaryDirectory
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSLayoutConstraint
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableAttributedString
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLQueryItem
__ Foundation: _OBJC_CLASS_$_NSValue
__ FrontBoardServices: _FBSOpenApplicationOptionKeyActivateSuspended
__ FrontBoardServices: _FBSOpenApplicationOptionKeyPromptUnlockDevice
__ FrontBoardServices: _OBJC_CLASS_$_FBSSystemService
__ Intents: _OBJC_CLASS_$_INDoubleResolutionResult
__ Intents: _OBJC_CLASS_$_INEnumResolutionResult
__ Intents: _OBJC_CLASS_$_INIntent
__ Intents: _OBJC_CLASS_$_INIntentResponse
__ Intents: _OBJC_CLASS_$_INInteraction
__ Intents: _OBJC_CLASS_$_INObject
__ Intents: _OBJC_CLASS_$_INObjectResolutionResult
__ Intents: _OBJC_METACLASS_$_INDoubleResolutionResult
__ Intents: _OBJC_METACLASS_$_INEnumResolutionResult
__ Intents: _OBJC_METACLASS_$_INIntent
__ Intents: _OBJC_METACLASS_$_INIntentResponse
__ Intents: _OBJC_METACLASS_$_INObject
__ Intents: _OBJC_METACLASS_$_INObjectResolutionResult
__ MaterialKit: _OBJC_CLASS_$_MTMaterialView
__ MaterialKit: _OBJC_CLASS_$_MTVisualStylingProvider
__ QuartzCore: _OBJC_CLASS_$_CAFilter
__ QuartzCore: _OBJC_CLASS_$_CAGradientLayer
__ QuartzCore: _OBJC_CLASS_$_CAPackage
__ QuartzCore: _kCACornerCurveContinuous
__ QuartzCore: _kCAFilterColorBurnBlendMode
__ QuartzCore: _kCAFilterPlusD
__ QuartzCore: _kCAFilterPlusL
__ QuartzCore: _kCAPackageTypeCAMLBundle
__ RemoteTextInput: _OBJC_CLASS_$_RTIInputSystemSourceSession
__ Sharing: _OBJC_CLASS_$_SFClient
__ SpringBoardServices: _OBJC_CLASS_$_SBSRemoteAlertActivationContext
__ SpringBoardServices: _OBJC_CLASS_$_SBSRemoteAlertConfigurationContext
__ SpringBoardServices: _OBJC_CLASS_$_SBSRemoteAlertDefinition
__ SpringBoardServices: _OBJC_CLASS_$_SBSRemoteAlertHandle
__ TVRemoteCore: _OBJC_CLASS_$_TVRCAnalytics
__ TVRemoteCore: _OBJC_CLASS_$_TVRCButton
__ TVRemoteCore: _OBJC_CLASS_$_TVRCButtonEvent
__ TVRemoteCore: _OBJC_CLASS_$_TVRCDevice
__ TVRemoteCore: _OBJC_CLASS_$_TVRCDeviceQuery
__ TVRemoteCore: _OBJC_CLASS_$_TVRCGameControllerEvent
__ TVRemoteCore: _OBJC_CLASS_$_TVRCKeyboardAttributes
__ TVRemoteCore: _OBJC_CLASS_$_TVRCPINEntryAttributes
__ TVRemoteCore: _OBJC_CLASS_$_TVRCSessionData
__ TVRemoteCore: _OBJC_CLASS_$_TVRCTouchEvent
__ TVRemoteCore: _OBJC_CLASS_$__TVRCFeatures
__ TVRemoteCore: _OBJC_CLASS_$__TVRCPreferredDeviceManager
__ TVRemoteCore: _TVRCButtonApplicationBundleIDKey
__ TVRemoteCore: _TVRCConnectionInvalidatedNotification
__ TVRemoteCore: _TVRCDeviceConnectionTypeDescription
__ TVRemoteCore: _TVRCDeviceModelTypeAirplaySetTopBox
__ TVRemoteCore: _TVRCDeviceModelTypeAirplayStick
__ TVRemoteCore: _TVRCDeviceModelTypeAirplayTelevision
__ TVRemoteCore: _TVRCTouchPhaseDescription
__ UIKit: _NSForegroundColorAttributeName
__ UIKit: _NSStringFromCGPoint
__ UIKit: _NSStringFromCGRect
__ UIKit: _OBJC_CLASS_$_NSTextAttachment
__ UIKit: _OBJC_CLASS_$_UIActivityIndicatorView
__ UIKit: _OBJC_CLASS_$_UIAlertAction
__ UIKit: _OBJC_CLASS_$_UIAlertController
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIBarButtonItem
__ UIKit: _OBJC_CLASS_$_UIBezierPath
__ UIKit: _OBJC_CLASS_$_UIBlurEffect
__ UIKit: _OBJC_CLASS_$_UIButton
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIContentSizeCategoryPreference
__ UIKit: _OBJC_CLASS_$_UIControl
__ UIKit: _OBJC_CLASS_$_UICubicTimingParameters
__ UIKit: _OBJC_CLASS_$_UIDevice
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIFontDescriptor
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageSymbolConfiguration
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UIImpactFeedbackGenerator
__ UIKit: _OBJC_CLASS_$_UILabel
__ UIKit: _OBJC_CLASS_$_UILongPressGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UINavigationBar
__ UIKit: _OBJC_CLASS_$_UINavigationItem
__ UIKit: _OBJC_CLASS_$_UIPointerShape
__ UIKit: _OBJC_CLASS_$_UIPointerStyle
__ UIKit: _OBJC_CLASS_$_UIPresentationController
__ UIKit: _OBJC_CLASS_$_UIPreviewParameters
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UISelectionFeedbackGenerator
__ UIKit: _OBJC_CLASS_$_UISpringTimingParameters
__ UIKit: _OBJC_CLASS_$_UITableView
__ UIKit: _OBJC_CLASS_$_UITableViewCell
__ UIKit: _OBJC_CLASS_$_UITableViewHeaderFooterView
__ UIKit: _OBJC_CLASS_$_UITapGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UITargetedPreview
__ UIKit: _OBJC_CLASS_$_UITextField
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_CLASS_$_UIViewPropertyAnimator
__ UIKit: _OBJC_CLASS_$_UIVisualEffectView
__ UIKit: _OBJC_CLASS_$__UIButtonFeedbackGenerator
__ UIKit: _OBJC_CLASS_$__UICursorHoverEffect
__ UIKit: _OBJC_CLASS_$__UICursorInteraction
__ UIKit: _OBJC_CLASS_$__UICursorLiftEffect
__ UIKit: _OBJC_CLASS_$__UICursorRegion
__ UIKit: _OBJC_CLASS_$__UICursorStyle
__ UIKit: _OBJC_CLASS_$__UIFeedbackButtonBehavior
__ UIKit: _OBJC_METACLASS_$_UIButton
__ UIKit: _OBJC_METACLASS_$_UIControl
__ UIKit: _OBJC_METACLASS_$_UIPresentationController
__ UIKit: _OBJC_METACLASS_$_UISpringTimingParameters
__ UIKit: _OBJC_METACLASS_$_UITableViewCell
__ UIKit: _OBJC_METACLASS_$_UITableViewHeaderFooterView
__ UIKit: _OBJC_METACLASS_$_UITextField
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _OBJC_METACLASS_$_UIViewPropertyAnimator
__ UIKit: _UIContentSizeCategoryAccessibilityExtraExtraExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityExtraExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityLarge
__ UIKit: _UIContentSizeCategoryIsAccessibilityCategory
__ UIKit: _UIFontTextStyleBody
__ UIKit: _UIFontTextStyleCaption2
__ UIKit: _UIFontTextStyleFootnote
__ UIKit: _UIFontTextStyleHeadline
__ UIKit: _UIFontTextStyleTitle2
__ UIKit: _UIFontWeightBold
__ UIKit: _UIFontWeightRegular
__ UIKit: _UIGraphicsBeginImageContextWithOptions
__ UIKit: _UIGraphicsEndImageContext
__ UIKit: _UIGraphicsGetCurrentContext
__ UIKit: _UIGraphicsGetImageFromCurrentImageContext
__ UIKit: _UIImagePNGRepresentation
__ UIKit: _UIImageSymbolSizeLarge
__ UIKit: _UIImageSymbolSizeMedium
__ UIKit: _UIKeyboardAnimationCurveUserInfoKey
__ UIKit: _UIKeyboardAnimationDurationUserInfoKey
__ UIKit: _UIKeyboardFrameBeginUserInfoKey
__ UIKit: _UIKeyboardFrameEndUserInfoKey
__ UIKit: _UIKeyboardWillHideNotification
__ UIKit: _UIKeyboardWillShowNotification
__ UIKit: _UIRectCenteredIntegralRect
__ UIKit: _UIRectGetCenter
__ UIKit: _UITableViewAutomaticDimension
__ UIKit: _UITransitionContextFromViewKey
__ UIKit: _UITransitionContextToViewKey
__ UIKit: __UIApplicationVolumeDownButtonDownNotification
__ UIKit: __UIApplicationVolumeDownButtonUpNotification
__ UIKit: __UIApplicationVolumeUpButtonDownNotification
__ UIKit: __UIApplicationVolumeUpButtonUpNotification
__ WiFiKit: _OBJC_CLASS_$_WFClient
__ WiFiKit: _OBJC_CLASS_$_WFWiFiStateMonitor
__ libAccessibility.dylib: __AXSAppleTVRemoteUsesSimpleGestures
__ libAccessibility.dylib: _kAXSAppleTVRemoteSimpleGesturesEnabledNotification
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _MGGetSInt32Answer
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___fpclassifyf
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _hypot
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
TVRUIAlertAnimationController : NSObject /usr/lib/libSystem.B.dylib <UIViewControllerAnimatedTransitioning>
 @property  UIVisualEffectView *foregroundVisualEffectView
 @property  double foregroundBlurRadius
 @property  {CGAffineTransform=dddddd} scaleTransform
 @property  long long animationType
 @property  <_TVRemoteAlertVisualStyleProviding> *visualStyle
 @property  _TVRMaterialView *backgroundMaterialView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TVRUIAlertAnimationController transitionDuration:]
  -[TVRUIAlertAnimationController visualStyle]
  -[TVRUIAlertAnimationController .cxx_destruct]
  -[TVRUIAlertAnimationController setScaleTransform:]
  -[TVRUIAlertAnimationController animateTransition:]
  -[TVRUIAlertAnimationController animationType]
  -[TVRUIAlertAnimationController scaleTransform]
  -[TVRUIAlertAnimationController backgroundMaterialView]
  -[TVRUIAlertAnimationController setBackgroundMaterialView:]
  -[TVRUIAlertAnimationController _runPresentationAnimationWithTransition:]
  -[TVRUIAlertAnimationController _runDismissalAnimationWithTransition:]
  -[TVRUIAlertAnimationController setForegroundVisualEffectView:]
  -[TVRUIAlertAnimationController foregroundVisualEffectView]
  -[TVRUIAlertAnimationController initWithAnimationType:visualStyle:]
  -[TVRUIAlertAnimationController foregroundBlurRadius]
  -[TVRUIAlertAnimationController setForegroundBlurRadius:]


TVRViewServiceConfigContext : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned long dismissalType
 @property  NSString *lastActiveEndpointIdentifier
 @property  NSDictionary *userInfo
 @property  NSString *deviceIdentifier
 @property  long long deviceIdentifierType
 @property  long long deviceType
 @property  long long launchContext
 @property  @? presentationAnimations
 @property  @? dismissalAnimations

  // instance methods
  -[TVRViewServiceConfigContext _commonInit]
  -[TVRViewServiceConfigContext dismissalAnimations]
  -[TVRViewServiceConfigContext init]
  -[TVRViewServiceConfigContext setDismissalAnimations:]
  -[TVRViewServiceConfigContext deviceIdentifier]
  -[TVRViewServiceConfigContext deviceType]
  -[TVRViewServiceConfigContext .cxx_destruct]
  -[TVRViewServiceConfigContext userInfo]
  -[TVRViewServiceConfigContext _initWithUserInfo:]
  -[TVRViewServiceConfigContext setDismissalType:]
  -[TVRViewServiceConfigContext dismissalType]
  -[TVRViewServiceConfigContext initWithDeviceIdentifier:identifierType:deviceType:launchContext:]
  -[TVRViewServiceConfigContext launchContext]
  -[TVRViewServiceConfigContext deviceIdentifierType]
  -[TVRViewServiceConfigContext lastActiveEndpointIdentifier]
  -[TVRViewServiceConfigContext _initWithLaunchContext:]
  -[TVRViewServiceConfigContext initWithDeviceIdentifier:type:]
  -[TVRViewServiceConfigContext presentationAnimations]
  -[TVRViewServiceConfigContext setPresentationAnimations:]
  -[TVRViewServiceConfigContext setLastActiveEndpointIdentifier:]


_TVRUIDevicePickerView : UIView /System/Library/PrivateFrameworks/WiFiKit.framework/WiFiKit
 @property  TVRUIDevicePickerViewController *viewController

  // instance methods
  -[_TVRUIDevicePickerView viewController]
  -[_TVRUIDevicePickerView .cxx_destruct]
  -[_TVRUIDevicePickerView pointInside:withEvent:]
  -[_TVRUIDevicePickerView setViewController:]
  -[_TVRUIDevicePickerView _initWithViewController:]


TVRUIDevicePickerViewController : UIViewController /System/Library/PrivateFrameworks/WiFiKit.framework/WiFiKit <UITableViewDataSource, UITableViewDelegate>
 @property  UIView *titleView
 @property  UIButton *titleButton
 @property  UITableView *tableView
 @property  UIView *tableViewWrapper
 @property  UIView *tableViewTopSeperator
 @property  UIView *tableViewBottomSeperator
 @property  double baseHeight
 @property  _TVRUICubicSpringAnimator *showAnimator
 @property  _TVRUICubicSpringAnimator *hideAnimator
 @property  _TVREventHaptic *eventHaptic
 @property  NSIndexPath *connectedDeviceIndex
 @property  NSArray *nearbyUnpairedDevices
 @property  UIView *nearbySectionTitleView
 @property  <TVRUIStyleProvider> *styleProvider
 @property  NSArray *devices
 @property  NSString *deviceTitle
 @property  BOOL devicePickerShowing
 @property  <_TVRUIDevicePickerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TVRUIDevicePickerViewController viewDidLoad]
  -[TVRUIDevicePickerViewController tableView:heightForRowAtIndexPath:]
  -[TVRUIDevicePickerViewController tableView:viewForHeaderInSection:]
  -[TVRUIDevicePickerViewController tableView:heightForHeaderInSection:]
  -[TVRUIDevicePickerViewController setDevices:]
  -[TVRUIDevicePickerViewController setTitleView:]
  -[TVRUIDevicePickerViewController setTableView:]
  -[TVRUIDevicePickerViewController titleView]
  -[TVRUIDevicePickerViewController tableView:numberOfRowsInSection:]
  -[TVRUIDevicePickerViewController tableView:didSelectRowAtIndexPath:]
  -[TVRUIDevicePickerViewController setStyleProvider:]
  -[TVRUIDevicePickerViewController _toggleState]
  -[TVRUIDevicePickerViewController tableView]
  -[TVRUIDevicePickerViewController .cxx_destruct]
  -[TVRUIDevicePickerViewController devices]
  -[TVRUIDevicePickerViewController styleProvider]
  -[TVRUIDevicePickerViewController tableView:cellForRowAtIndexPath:]
  -[TVRUIDevicePickerViewController viewWillLayoutSubviews]
  -[TVRUIDevicePickerViewController numberOfSectionsInTableView:]
  -[TVRUIDevicePickerViewController baseHeight]
  -[TVRUIDevicePickerViewController titleButton]
  -[TVRUIDevicePickerViewController _expandedContentHeight]
  -[TVRUIDevicePickerViewController _canShowWhileLocked]
  -[TVRUIDevicePickerViewController setDelegate:]
  -[TVRUIDevicePickerViewController setTitleButton:]
  -[TVRUIDevicePickerViewController delegate]
  -[TVRUIDevicePickerViewController loadView]
  -[TVRUIDevicePickerViewController setBaseHeight:]
  -[TVRUIDevicePickerViewController isDevicePickerShowing]
  -[TVRUIDevicePickerViewController _setupDeviceTitleView]
  -[TVRUIDevicePickerViewController _setupDeviceList]
  -[TVRUIDevicePickerViewController _setupAnimators]
  -[TVRUIDevicePickerViewController setEventHaptic:]
  -[TVRUIDevicePickerViewController tableViewTopSeperator]
  -[TVRUIDevicePickerViewController tableViewWrapper]
  -[TVRUIDevicePickerViewController _setupTitleButtonIfNeeded]
  -[TVRUIDevicePickerViewController setTableViewWrapper:]
  -[TVRUIDevicePickerViewController didTapWrapperView:]
  -[TVRUIDevicePickerViewController setTableViewTopSeperator:]
  -[TVRUIDevicePickerViewController _processForUnpairedDevices:]
  -[TVRUIDevicePickerViewController _sortAndReloadDevices]
  -[TVRUIDevicePickerViewController _preferredTableViewFrameWhenExpanded:]
  -[TVRUIDevicePickerViewController setNearbyUnpairedDevices:]
  -[TVRUIDevicePickerViewController setShowAnimator:]
  -[TVRUIDevicePickerViewController setHideAnimator:]
  -[TVRUIDevicePickerViewController nearbyUnpairedDevices]
  -[TVRUIDevicePickerViewController _titleViewForNearbySection]
  -[TVRUIDevicePickerViewController setConnectedDeviceIndex:]
  -[TVRUIDevicePickerViewController _accessibilityFontSizesEnabled]
  -[TVRUIDevicePickerViewController nearbySectionTitleView]
  -[TVRUIDevicePickerViewController setNearbySectionTitleView:]
  -[TVRUIDevicePickerViewController eventHaptic]
  -[TVRUIDevicePickerViewController setDevicePickerShowing:]
  -[TVRUIDevicePickerViewController showAnimator]
  -[TVRUIDevicePickerViewController hideAnimator]
  -[TVRUIDevicePickerViewController _calculatedContentHeight]
  -[TVRUIDevicePickerViewController _contentHeightForPreferredContentSizeCategory]
  -[TVRUIDevicePickerViewController _defaultCalculatedContentHeight]
  -[TVRUIDevicePickerViewController setDeviceTitle:]
  -[TVRUIDevicePickerViewController expandDeviceList]
  -[TVRUIDevicePickerViewController collapseDeviceList]
  -[TVRUIDevicePickerViewController didChangeToExpanded:]
  -[TVRUIDevicePickerViewController _updateTableFrame:]
  -[TVRUIDevicePickerViewController deviceTitle]
  -[TVRUIDevicePickerViewController tableViewBottomSeperator]
  -[TVRUIDevicePickerViewController setTableViewBottomSeperator:]
  -[TVRUIDevicePickerViewController connectedDeviceIndex]


TVRUIButtonEvent : NSObject /usr/lib/libSystem.B.dylib
 @property  NSDate *timestamp
 @property  long long buttonType
 @property  long long eventType

  // class methods
  +[TVRUIButtonEvent createButtonEvent:buttonType:]

  // instance methods
  -[TVRUIButtonEvent buttonType]
  -[TVRUIButtonEvent .cxx_destruct]
  -[TVRUIButtonEvent timestamp]
  -[TVRUIButtonEvent eventType]
  -[TVRUIButtonEvent _initWithButtonType:eventType:]


TVRUIButton : UIControl /System/Library/PrivateFrameworks/WiFiKit.framework/WiFiKit <_UICursorInteractionDelegate>
 @property  UIViewPropertyAnimator *highlightAnimator
 @property  UIViewPropertyAnimator *unhighlightAnimator
 @property  UIColor *defaultBackgroundColor
 @property  _TVRButtonHaptic *haptic
 @property  UILabel *titleLabel
 @property  UIImageView *imageView
 @property  long long buttonType
 @property  BOOL tapAction
 @property  BOOL disableHighlightEffect
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TVRUIButton isValidButtonType:]
  +[TVRUIButton buttonTypeHasTapAction:]

  // instance methods
  -[TVRUIButton cursorInteraction:styleForRegion:modifiers:]
  -[TVRUIButton cursorInteraction:regionForLocation:defaultRegion:]
  -[TVRUIButton buttonType]
  -[TVRUIButton imageView]
  -[TVRUIButton _controlEventsForActionTriggered]
  -[TVRUIButton setTitleLabel:]
  -[TVRUIButton titleLabel]
  -[TVRUIButton touchesBegan:withEvent:]
  -[TVRUIButton setImageView:]
  -[TVRUIButton .cxx_destruct]
  -[TVRUIButton setDefaultBackgroundColor:]
  -[TVRUIButton defaultBackgroundColor]
  -[TVRUIButton touchesCancelled:withEvent:]
  -[TVRUIButton haptic]
  -[TVRUIButton highlightAnimator]
  -[TVRUIButton setHighlightAnimator:]
  -[TVRUIButton touchesEnded:withEvent:]
  -[TVRUIButton layoutSubviews]
  -[TVRUIButton _touchDown:]
  -[TVRUIButton hasTapAction]
  -[TVRUIButton _touchUp:]
  -[TVRUIButton unhighlightAnimator]
  -[TVRUIButton isHighlightEffectDisabled]
  -[TVRUIButton setUnhighlightAnimator:]
  -[TVRUIButton initWithType:hasTapAction:]
  -[TVRUIButton setDisableHighlightEffect:]
  -[TVRUIButton setHaptic:]


TVRUICaptionsButton : TVRUIButton
 @property  BOOL captionsEnabled

  // instance methods
  -[TVRUICaptionsButton layoutSubviews]
  -[TVRUICaptionsButton captionsEnabled]
  -[TVRUICaptionsButton initWithCaptionsEnabled:]
  -[TVRUICaptionsButton setCaptionsEnabled:]


_TVRUIDirectionalControlView : UIView /System/Library/PrivateFrameworks/WiFiKit.framework/WiFiKit <_UICursorInteractionDelegate>
 @property  UIView *selectIndicator
 @property  UIImageView *upImageView
 @property  UIImageView *rightImageView
 @property  UIImageView *downImageView
 @property  UIImageView *leftImageView
 @property  NSArray *interactionViews
 @property  UIView *directionControlsWrapperView
 @property  UIView *tapHandlingSquareWrapperView
 @property  UIView *highlightedView
 @property  <TVRUIStyleProvider> *styleProvider
 @property  _TVRButtonHaptic *haptic
 @property  <_TVRUIEventDelegate> *eventDelegate
 @property  BOOL offsetDirectionalPad
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_TVRUIDirectionalControlView cursorInteraction:styleForRegion:modifiers:]
  -[_TVRUIDirectionalControlView cursorInteraction:regionForLocation:defaultRegion:]
  -[_TVRUIDirectionalControlView touchesBegan:withEvent:]
  -[_TVRUIDirectionalControlView setStyleProvider:]
  -[_TVRUIDirectionalControlView .cxx_destruct]
  -[_TVRUIDirectionalControlView styleProvider]
  -[_TVRUIDirectionalControlView initWithStyleProvider:]
  -[_TVRUIDirectionalControlView handleLongPress:]
  -[_TVRUIDirectionalControlView touchesCancelled:withEvent:]
  -[_TVRUIDirectionalControlView haptic]
  -[_TVRUIDirectionalControlView handleTap:]
  -[_TVRUIDirectionalControlView touchesEnded:withEvent:]
  -[_TVRUIDirectionalControlView highlightedView]
  -[_TVRUIDirectionalControlView setHighlightedView:]
  -[_TVRUIDirectionalControlView layoutSubviews]
  -[_TVRUIDirectionalControlView setRightImageView:]
  -[_TVRUIDirectionalControlView rightImageView]
  -[_TVRUIDirectionalControlView eventDelegate]
  -[_TVRUIDirectionalControlView setEventDelegate:]
  -[_TVRUIDirectionalControlView setHaptic:]
  -[_TVRUIDirectionalControlView _createDirectionalImageViewWithImageName:]
  -[_TVRUIDirectionalControlView _configureLongPressGesture:]
  -[_TVRUIDirectionalControlView _configureGesture]
  -[_TVRUIDirectionalControlView offsetDirectionalPad]
  -[_TVRUIDirectionalControlView _layoutHighlightViewForView:]
  -[_TVRUIDirectionalControlView tapHandlingSquareWrapperView]
  -[_TVRUIDirectionalControlView _directionalViewForTouchLocation:]
  -[_TVRUIDirectionalControlView _highlightView:enabled:]
  -[_TVRUIDirectionalControlView interactionViews]
  -[_TVRUIDirectionalControlView _highlightArrowView:]
  -[_TVRUIDirectionalControlView _buttonTypeForLocation:]
  -[_TVRUIDirectionalControlView _sendSelectButtonPressBegan]
  -[_TVRUIDirectionalControlView _sendSelectButtonPressEnded]
  -[_TVRUIDirectionalControlView setOffsetDirectionalPad:]
  -[_TVRUIDirectionalControlView selectIndicator]
  -[_TVRUIDirectionalControlView setSelectIndicator:]
  -[_TVRUIDirectionalControlView upImageView]
  -[_TVRUIDirectionalControlView setUpImageView:]
  -[_TVRUIDirectionalControlView downImageView]
  -[_TVRUIDirectionalControlView setDownImageView:]
  -[_TVRUIDirectionalControlView leftImageView]
  -[_TVRUIDirectionalControlView setLeftImageView:]
  -[_TVRUIDirectionalControlView setInteractionViews:]
  -[_TVRUIDirectionalControlView directionControlsWrapperView]
  -[_TVRUIDirectionalControlView setDirectionControlsWrapperView:]
  -[_TVRUIDirectionalControlView setTapHandlingSquareWrapperView:]


_TVRLayoutInfo : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[_TVRLayoutInfo needsLandscapeOrientationForCurrentDevice]


TVRUIMediaControlsViewController : UIViewController /System/Library/PrivateFrameworks/WiFiKit.framework/WiFiKit <TVRUIRemoteViewProvider>
 @property  TVRUIButton *skipForwardButton
 @property  TVRUIButton *skipBackwardButton
 @property  TVRUICaptionsButton *captionsButton
 @property  <TVRUIStyleProvider> *styleProvider
 @property  <TVRUIDevice> *device
 @property  <_TVRUIEventDelegate> *buttonActionsDelegate
 @property  BOOL showSkipControls
 @property  BOOL showCaptionControl
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TVRUIMediaControlsViewController viewDidLoad]
  -[TVRUIMediaControlsViewController device]
  -[TVRUIMediaControlsViewController setStyleProvider:]
  -[TVRUIMediaControlsViewController .cxx_destruct]
  -[TVRUIMediaControlsViewController styleProvider]
  -[TVRUIMediaControlsViewController viewWillLayoutSubviews]
  -[TVRUIMediaControlsViewController setDevice:]
  -[TVRUIMediaControlsViewController _canShowWhileLocked]
  -[TVRUIMediaControlsViewController skipForwardButton]
  -[TVRUIMediaControlsViewController _createButtons]
  -[TVRUIMediaControlsViewController setSkipForwardButton:]
  -[TVRUIMediaControlsViewController _skipForwardTapped:]
  -[TVRUIMediaControlsViewController setCaptionsButton:]
  -[TVRUIMediaControlsViewController captionsButton]
  -[TVRUIMediaControlsViewController _captionsTapped:]
  -[TVRUIMediaControlsViewController setSkipBackwardButton:]
  -[TVRUIMediaControlsViewController skipBackwardButton]
  -[TVRUIMediaControlsViewController _skipBackwardTapped:]
  -[TVRUIMediaControlsViewController _sendButtonTapped:]
  -[TVRUIMediaControlsViewController buttonActionsDelegate]
  -[TVRUIMediaControlsViewController setShowSkipControls:]
  -[TVRUIMediaControlsViewController setShowCaptionControl:]
  -[TVRUIMediaControlsViewController updateCaptionState:]
  -[TVRUIMediaControlsViewController setButtonActionsDelegate:]
  -[TVRUIMediaControlsViewController isShowingSkipControls]
  -[TVRUIMediaControlsViewController isShowingCaptionControl]


_TVRPresentationController : UIPresentationController /System/Library/PrivateFrameworks/WiFiKit.framework/WiFiKit
  // instance methods
  -[_TVRPresentationController shouldPresentInFullscreen]
  -[_TVRPresentationController _shouldRespectDefinesPresentationContext]


_TVRTapToRadarManager : NSObject /usr/lib/libSystem.B.dylib
 @property  NSURLComponents *urlComponents

  // class methods
  +[_TVRTapToRadarManager _captureScreenshot]
  +[_TVRTapToRadarManager bugImage]
  +[_TVRTapToRadarManager fileRadarWithTitle:description:]

  // instance methods
  -[_TVRTapToRadarManager .cxx_destruct]
  -[_TVRTapToRadarManager urlComponents]
  -[_TVRTapToRadarManager setUrlComponents:]
  -[_TVRTapToRadarManager fileRadar]


_TVRTextField : UITextField /System/Library/PrivateFrameworks/WiFiKit.framework/WiFiKit
 @property  RTIInputSystemSourceSession *_rtiSourceSession

  // instance methods
  -[_TVRTextField .cxx_destruct]
  -[_TVRTextField _rtiSourceSession]
  -[_TVRTextField set_rtiSourceSession:]


_TVRKeyboardView : UIView /System/Library/PrivateFrameworks/WiFiKit.framework/WiFiKit <UITextFieldDelegate, RTIInputSystemPayloadDelegate>
 @property  UINavigationBar *navigationBar
 @property  UIView *textFieldWrapper
 @property  _TVRTextField *textField
 @property  UIView *separator
 @property  UIButton *dictationButton
 @property  UIVisualEffectView *effectView
 @property  RTIInputSystemSourceSession *currentSourceSession
 @property  NSString *text
 @property  NSString *title
 @property  TVRCKeyboardAttributes *attributes
 @property  <_TVRKeyboardViewDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_TVRKeyboardView textField]
  -[_TVRKeyboardView becomeFirstResponder]
  -[_TVRKeyboardView _separatorHeight]
  -[_TVRKeyboardView resignFirstResponder]
  -[_TVRKeyboardView setEffectView:]
  -[_TVRKeyboardView effectView]
  -[_TVRKeyboardView handleTextActionPayload:]
  -[_TVRKeyboardView initWithFrame:]
  -[_TVRKeyboardView setSeparator:]
  -[_TVRKeyboardView text]
  -[_TVRKeyboardView setNavigationBar:]
  -[_TVRKeyboardView .cxx_destruct]
  -[_TVRKeyboardView setAttributes:]
  -[_TVRKeyboardView attributes]
  -[_TVRKeyboardView setTitle:]
  -[_TVRKeyboardView setTextField:]
  -[_TVRKeyboardView title]
  -[_TVRKeyboardView navigationBar]
  -[_TVRKeyboardView sizeThatFits:]
  -[_TVRKeyboardView _textDidChange:]
  -[_TVRKeyboardView textFieldShouldReturn:]
  -[_TVRKeyboardView setDelegate:]
  -[_TVRKeyboardView separator]
  -[_TVRKeyboardView delegate]
  -[_TVRKeyboardView setText:]
  -[_TVRKeyboardView layoutSubviews]
  -[_TVRKeyboardView _cancelButton:]
  -[_TVRKeyboardView _dictationButtonTapped:]
  -[_TVRKeyboardView _dictationButtonReleased:]
  -[_TVRKeyboardView enableDictationButton:]
  -[_TVRKeyboardView textFieldWrapper]
  -[_TVRKeyboardView setTextFieldWrapper:]
  -[_TVRKeyboardView dictationButton]
  -[_TVRKeyboardView setDictationButton:]
  -[_TVRKeyboardView currentSourceSession]
  -[_TVRKeyboardView setCurrentSourceSession:]


_TVRUIFeatures : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[_TVRUIFeatures _isInternalInstall]
  +[_TVRUIFeatures rapportEnabled]
  +[_TVRUIFeatures isWakeToRemoteOnLockScreenDisabled]
  +[_TVRUIFeatures isTapToRadarEnabled]


_TVRTransitioningDelegate : NSObject /usr/lib/libSystem.B.dylib <UIViewControllerTransitioningDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_TVRTransitioningDelegate presentationControllerForPresentedViewController:presentingViewController:sourceViewController:]


_TVRAlertController : UIViewController /System/Library/PrivateFrameworks/WiFiKit.framework/WiFiKit <_TVRAlertViewDelegate, _TVRKeyboardViewDelegate, UIViewControllerTransitioningDelegate>
 @property  _TVRAlertView *alertView
 @property  _TVRKeyboardView *keyboardView
 @property  UIView *dimmingView
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} previousKeyboardFrame
 @property  unsigned long type
 @property  NSString *text
 @property  TVRCKeyboardAttributes *keyboardAttributes
 @property  <_TVRAlertControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_TVRAlertController dimmingView]
  -[_TVRAlertController animationControllerForDismissedController:]
  -[_TVRAlertController animationControllerForPresentedController:presentingController:sourceController:]
  -[_TVRAlertController setType:]
  -[_TVRAlertController text]
  -[_TVRAlertController .cxx_destruct]
  -[_TVRAlertController setDimmingView:]
  -[_TVRAlertController keyboardView]
  -[_TVRAlertController _cancel]
  -[_TVRAlertController _keyboardChanged:]
  -[_TVRAlertController supportedInterfaceOrientations]
  -[_TVRAlertController type]
  -[_TVRAlertController initWithNibName:bundle:]
  -[_TVRAlertController presentationControllerForPresentedViewController:presentingViewController:sourceViewController:]
  -[_TVRAlertController setKeyboardView:]
  -[_TVRAlertController viewWillAppear:]
  -[_TVRAlertController _canShowWhileLocked]
  -[_TVRAlertController setDelegate:]
  -[_TVRAlertController viewDidLayoutSubviews]
  -[_TVRAlertController delegate]
  -[_TVRAlertController setText:]
  -[_TVRAlertController loadView]
  -[_TVRAlertController initWithCoder:]
  -[_TVRAlertController alertView]
  -[_TVRAlertController setAlertView:]
  -[_TVRAlertController keyboardViewDidHitReturnKey:]
  -[_TVRAlertController keyboardView:didUpdateText:]
  -[_TVRAlertController keyboardView:generatedTextInputPayload:]
  -[_TVRAlertController keyboardViewDidCancel:]
  -[_TVRAlertController keyboardViewPressedDictationButton:]
  -[_TVRAlertController keyboardViewReleasedDictationButton:]
  -[_TVRAlertController enableDictationButton:]
  -[_TVRAlertController initWithTitle:keyboardAttributes:]
  -[_TVRAlertController initWithTitle:PINEntryAttributes:]
  -[_TVRAlertController _observeKeyboardNotifications]
  -[_TVRAlertController initWithTitle:passcodeSize:]
  -[_TVRAlertController _layoutForKeyboardFrame:]
  -[_TVRAlertController _contentViewBasedOnType]
  -[_TVRAlertController alertView:didUpdateText:]
  -[_TVRAlertController alertViewDidCancel:]
  -[_TVRAlertController initWithKeyboardAttributes:]
  -[_TVRAlertController initForTextPasswordType:]
  -[_TVRAlertController setKeyboardAttributes:]
  -[_TVRAlertController keyboardAttributes]
  -[_TVRAlertController previousKeyboardFrame]
  -[_TVRAlertController setPreviousKeyboardFrame:]


_TVRMAlertControllerTransitioning : NSObject /usr/lib/libSystem.B.dylib <UIViewControllerAnimatedTransitioning>
 @property  BOOL isPresentation
 @property  UIView *contentView
 @property  UIView *dimmingView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_TVRMAlertControllerTransitioning dimmingView]
  -[_TVRMAlertControllerTransitioning transitionDuration:]
  -[_TVRMAlertControllerTransitioning contentView]
  -[_TVRMAlertControllerTransitioning .cxx_destruct]
  -[_TVRMAlertControllerTransitioning setDimmingView:]
  -[_TVRMAlertControllerTransitioning animateTransition:]
  -[_TVRMAlertControllerTransitioning setContentView:]
  -[_TVRMAlertControllerTransitioning isPresentation]
  -[_TVRMAlertControllerTransitioning setIsPresentation:]


_TVRPasscodeField : UIControl /System/Library/PrivateFrameworks/WiFiKit.framework/WiFiKit <UIKeyInput>
 @property  NSMutableString *mutablePasscode
 @property  TVRCPINEntryAttributes *PINEntryattributes
 @property  NSString *text
 @property  BOOL useSystemColors
 @property  BOOL hasText
 @property  long long autocapitalizationType
 @property  long long autocorrectionType
 @property  long long spellCheckingType
 @property  long long smartQuotesType
 @property  long long smartDashesType
 @property  long long smartInsertDeleteType
 @property  long long keyboardType
 @property  long long keyboardAppearance
 @property  long long returnKeyType
 @property  BOOL enablesReturnKeyAutomatically
 @property  BOOL secureTextEntry
 @property  NSString *textContentType
 @property  UITextInputPasswordRules *passwordRules
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_TVRPasscodeField enablesReturnKeyAutomatically]
  -[_TVRPasscodeField spellCheckingType]
  -[_TVRPasscodeField _contentSize]
  -[_TVRPasscodeField keyboardType]
  -[_TVRPasscodeField deleteBackward]
  -[_TVRPasscodeField insertText:]
  -[_TVRPasscodeField autocapitalizationType]
  -[_TVRPasscodeField returnKeyType]
  -[_TVRPasscodeField keyboardAppearance]
  -[_TVRPasscodeField clear]
  -[_TVRPasscodeField initWithFrame:]
  -[_TVRPasscodeField hasText]
  -[_TVRPasscodeField text]
  -[_TVRPasscodeField .cxx_destruct]
  -[_TVRPasscodeField canBecomeFirstResponder]
  -[_TVRPasscodeField drawRect:]
  -[_TVRPasscodeField acceptsSplitKeyboard]
  -[_TVRPasscodeField isSecureTextEntry]
  -[_TVRPasscodeField autocorrectionType]
  -[_TVRPasscodeField setText:]
  -[_TVRPasscodeField acceptsFloatingKeyboard]
  -[_TVRPasscodeField _contentWidthWithDotSize:entrySpacing:groupSpacing:]
  -[_TVRPasscodeField useSystemColors]
  -[_TVRPasscodeField setPINEntryattributes:]
  -[_TVRPasscodeField PINEntryattributes]
  -[_TVRPasscodeField setUseSystemColors:]
  -[_TVRPasscodeField mutablePasscode]
  -[_TVRPasscodeField setMutablePasscode:]


_TVRUIButtonPanelView : UIView /System/Library/PrivateFrameworks/WiFiKit.framework/WiFiKit
 @property  TVRUIButton *primaryButton
 @property  NSMutableArray *leftButtons
 @property  NSMutableArray *rightButtons
 @property  <_TVRUIEventDelegate> *buttonEventDelegate
 @property  <TVRUIStyleProvider> *styleProvider

  // instance methods
  -[_TVRUIButtonPanelView _buttonPressed:]
  -[_TVRUIButtonPanelView setStyleProvider:]
  -[_TVRUIButtonPanelView .cxx_destruct]
  -[_TVRUIButtonPanelView styleProvider]
  -[_TVRUIButtonPanelView _buttonTapped:]
  -[_TVRUIButtonPanelView setPrimaryButton:]
  -[_TVRUIButtonPanelView primaryButton]
  -[_TVRUIButtonPanelView layoutSubviews]
  -[_TVRUIButtonPanelView _searchButton]
  -[_TVRUIButtonPanelView _buttonReleased:]
  -[_TVRUIButtonPanelView enableSearchButton]
  -[_TVRUIButtonPanelView _sendButtonTapped:]
  -[_TVRUIButtonPanelView _configureButton:]
  -[_TVRUIButtonPanelView _processButtons:]
  -[_TVRUIButtonPanelView leftButtons]
  -[_TVRUIButtonPanelView rightButtons]
  -[_TVRUIButtonPanelView _enableButton:]
  -[_TVRUIButtonPanelView _disableButton:changeAlpha:]
  -[_TVRUIButtonPanelView _sendButtonPressed:]
  -[_TVRUIButtonPanelView _sendButtonReleased:]
  -[_TVRUIButtonPanelView buttonEventDelegate]
  -[_TVRUIButtonPanelView initWithPrimaryButtonType:secondaryLeftButtons:secondaryRightButtons:styleProvider:]
  -[_TVRUIButtonPanelView enableButtons]
  -[_TVRUIButtonPanelView disableButtons:]
  -[_TVRUIButtonPanelView disableSearchButton]
  -[_TVRUIButtonPanelView setButtonEventDelegate:]
  -[_TVRUIButtonPanelView setLeftButtons:]
  -[_TVRUIButtonPanelView setRightButtons:]


_TVRUITouch : NSObject /usr/lib/libSystem.B.dylib
 @property  double timestamp
 @property  long long phase
 @property  long long fingerIndex

  // instance methods
  -[_TVRUITouch phase]
  -[_TVRUITouch timestamp]
  -[_TVRUITouch initWithTimestamp:touchPhase:fingerIndex:]
  -[_TVRUITouch fingerIndex]


TVRUIStandardTouchProcessor : NSObject /usr/lib/libSystem.B.dylib
 @property  UIView *touchpadView
 @property  <_TVRUIEventDelegate> *eventDelegate
 @property  _TVRButtonHaptic *haptic
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} virtualBoundingBox
 @property  UIView *debugView
 @property  double previousVelocity
 @property  double previousTimestamp
 @property  NSMutableSet *startingTouches
 @property  {CGPoint=dd} startingPoint
 @property  long long startingSwipeDirection
 @property  NSMutableSet *endedTouches
 @property  long long touchCnt

  // instance methods
  -[TVRUIStandardTouchProcessor previousVelocity]
  -[TVRUIStandardTouchProcessor setPreviousVelocity:]
  -[TVRUIStandardTouchProcessor .cxx_destruct]
  -[TVRUIStandardTouchProcessor debugView]
  -[TVRUIStandardTouchProcessor handleLongPress:]
  -[TVRUIStandardTouchProcessor haptic]
  -[TVRUIStandardTouchProcessor setDebugView:]
  -[TVRUIStandardTouchProcessor handleTapGesture:]
  -[TVRUIStandardTouchProcessor eventDelegate]
  -[TVRUIStandardTouchProcessor setEventDelegate:]
  -[TVRUIStandardTouchProcessor setPreviousTimestamp:]
  -[TVRUIStandardTouchProcessor previousTimestamp]
  -[TVRUIStandardTouchProcessor setHaptic:]
  -[TVRUIStandardTouchProcessor _sendSelectButtonPressBegan]
  -[TVRUIStandardTouchProcessor _sendSelectButtonPressEnded]
  -[TVRUIStandardTouchProcessor _configureGestureRecognizersOnView]
  -[TVRUIStandardTouchProcessor touchpadView]
  -[TVRUIStandardTouchProcessor setStartingPoint:]
  -[TVRUIStandardTouchProcessor setStartingTouches:]
  -[TVRUIStandardTouchProcessor setEndedTouches:]
  -[TVRUIStandardTouchProcessor setVirtualBoundingBox:]
  -[TVRUIStandardTouchProcessor setTouchCnt:]
  -[TVRUIStandardTouchProcessor startingTouches]
  -[TVRUIStandardTouchProcessor virtualBoundingBox]
  -[TVRUIStandardTouchProcessor startingPoint]
  -[TVRUIStandardTouchProcessor endedTouches]
  -[TVRUIStandardTouchProcessor _calculateDominantSwipeDirection:toPoint:]
  -[TVRUIStandardTouchProcessor _calculateVirtualBoundingBox:sizingRatio:swipeDirection:]
  -[TVRUIStandardTouchProcessor setStartingSwipeDirection:]
  -[TVRUIStandardTouchProcessor _virtualTouchLocationForTouchPoint:]
  -[TVRUIStandardTouchProcessor _processTouches:]
  -[TVRUIStandardTouchProcessor _endAndRestartTouchesManually:]
  -[TVRUIStandardTouchProcessor _cleanupOnTouchesEnded]
  -[TVRUIStandardTouchProcessor _touchEventForTouch:]
  -[TVRUIStandardTouchProcessor initWithTouchpadView:]
  -[TVRUIStandardTouchProcessor touchesBegan:touches:withEvent:]
  -[TVRUIStandardTouchProcessor touchesMoved:touches:withEvent:]
  -[TVRUIStandardTouchProcessor touchesEnded:touches:withEvent:]
  -[TVRUIStandardTouchProcessor touchesCancelled:touches:withEvent:]
  -[TVRUIStandardTouchProcessor setTouchpadView:]
  -[TVRUIStandardTouchProcessor startingSwipeDirection]
  -[TVRUIStandardTouchProcessor touchCnt]


TVRUITouchEvent : NSObject /usr/lib/libSystem.B.dylib
 @property  {CGPoint=dd} digitizerLocation
 @property  double timestamp
 @property  long long touchPhase
 @property  long long fingerIndex

  // instance methods
  -[TVRUITouchEvent timestamp]
  -[TVRUITouchEvent digitizerLocation]
  -[TVRUITouchEvent fingerIndex]
  -[TVRUITouchEvent initWithTimestamp:touchPhase:fingerIndex:digitizerLocation:]
  -[TVRUITouchEvent touchPhase]


TVRUIRemoteViewController : UIViewController /System/Library/PrivateFrameworks/WiFiKit.framework/WiFiKit <TVRUIDeviceDelegate, TVRUIDeviceSearchDelegate, _TVRUIDevicePickerDelegate, _TVRAlertControllerDelegate, _TVRUIEventDelegate>
 @property  <TVRUIDevice> *activeDevice
 @property  NSString *activeDeviceIdentifier
 @property  <TVRUIDevice> *authenticatingDevice
 @property  <TVRUIDeviceQuery> *deviceQuery
 @property  NSString *preferredDeviceIdentifier
 @property  long long deviceIdentifierType
 @property  long long deviceType
 @property  long long launchContext
 @property  <TVRUIStyleProvider> *styleProvider
 @property  TVRUITouchpadViewController *touchpadViewController
 @property  TVRUIControlPanelViewController *controlPanelViewController
 @property  UIView *blackGradientView
 @property  TVRUIDevicePickerViewController *devicePickerViewController
 @property  TVRUIMediaControlsViewController *mediaControlsViewController
 @property  _TVRAlertController *keyboardController
 @property  _TVRAlertController *authenticationAlertController
 @property  BOOL editingSessionActive
 @property  _TVRMessageView *messageView
 @property  _TVRUINetworkObserver *networkObserver
 @property  BOOL networkReachable
 @property  _TVRSiriHaptic *siriHaptic
 @property  _TVRKeyboardHaptic *keyboardHaptic
 @property  UIView *backgroundView
 @property  SFClient *sharingClient
 @property  UIButton *tapToRadarButton
 @property  CUSystemMonitor *systemMonitor
 @property  UIView *introAnimationView
 @property  CCUICAPackageView *introAnimationPackageView
 @property  UILabel *introAnimationHintLabel
 @property  _TVRUICubicSpringAnimator *introAnimationShowLabelAnimator
 @property  _TVRUICubicSpringAnimator *introAnimationHideLabelAnimator
 @property  BOOL registeredForVolumeEvents
 @property  NSString *launchContextDesc
 @property  TVRCSessionData *sessionData
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TVRUIRemoteViewController viewDidLoad]
  -[TVRUIRemoteViewController isNetworkReachable]
  -[TVRUIRemoteViewController backgroundView]
  -[TVRUIRemoteViewController setBackgroundView:]
  -[TVRUIRemoteViewController systemMonitor]
  -[TVRUIRemoteViewController init]
  -[TVRUIRemoteViewController setDeviceType:]
  -[TVRUIRemoteViewController deviceType]
  -[TVRUIRemoteViewController setStyleProvider:]
  -[TVRUIRemoteViewController dealloc]
  -[TVRUIRemoteViewController .cxx_destruct]
  -[TVRUIRemoteViewController _tapToRadar]
  -[TVRUIRemoteViewController styleProvider]
  -[TVRUIRemoteViewController _volumeDownButtonTouchUp:]
  -[TVRUIRemoteViewController _volumeDownButtonTouchDown:]
  -[TVRUIRemoteViewController preferredContentSize]
  -[TVRUIRemoteViewController viewWillLayoutSubviews]
  -[TVRUIRemoteViewController supportedInterfaceOrientations]
  -[TVRUIRemoteViewController _volumeUpButtonTouchUp:]
  -[TVRUIRemoteViewController setSessionData:]
  -[TVRUIRemoteViewController viewDidAppear:]
  -[TVRUIRemoteViewController setNetworkObserver:]
  -[TVRUIRemoteViewController _volumeUpButtonTouchDown:]
  -[TVRUIRemoteViewController activeDevice]
  -[TVRUIRemoteViewController keyboardController]
  -[TVRUIRemoteViewController _canShowWhileLocked]
  -[TVRUIRemoteViewController sessionData]
  -[TVRUIRemoteViewController networkObserver]
  -[TVRUIRemoteViewController setSystemMonitor:]
  -[TVRUIRemoteViewController viewWillDisappear:]
  -[TVRUIRemoteViewController setNetworkReachable:]
  -[TVRUIRemoteViewController tapToRadarButton]
  -[TVRUIRemoteViewController setTapToRadarButton:]
  -[TVRUIRemoteViewController messageView]
  -[TVRUIRemoteViewController setMessageView:]
  -[TVRUIRemoteViewController _presentAlertWithTitle:message:]
  -[TVRUIRemoteViewController setActiveDevice:]
  -[TVRUIRemoteViewController _startIntroAnimation]
  -[TVRUIRemoteViewController sharingClient]
  -[TVRUIRemoteViewController setSharingClient:]
  -[TVRUIRemoteViewController configureWithDeviceIdentifier:identifierType:deviceType:launchContext:]
  -[TVRUIRemoteViewController deviceQuery]
  -[TVRUIRemoteViewController setDeviceQuery:]
  -[TVRUIRemoteViewController launchContext]
  -[TVRUIRemoteViewController setLaunchContext:]
  -[TVRUIRemoteViewController launchContextDesc]
  -[TVRUIRemoteViewController setLaunchContextDesc:]
  -[TVRUIRemoteViewController _cancelPairing]
  -[TVRUIRemoteViewController setKeyboardController:]
  -[TVRUIRemoteViewController deviceBeganConnecting:]
  -[TVRUIRemoteViewController preferredDeviceIdentifier]
  -[TVRUIRemoteViewController deviceIdentifierType]
  -[TVRUIRemoteViewController devicePicked:]
  -[TVRUIRemoteViewController devicePickerWillChangeState:animated:]
  -[TVRUIRemoteViewController generatedButtonEvent:]
  -[TVRUIRemoteViewController alertController:enteredText:]
  -[TVRUIRemoteViewController alertControllerPressedDictationButton:]
  -[TVRUIRemoteViewController alertControllerReleasedDictationButton:]
  -[TVRUIRemoteViewController alertControllerCancelled:]
  -[TVRUIRemoteViewController alertControllerHitKeyboardReturnKey:]
  -[TVRUIRemoteViewController alertController:generatedTextInputPayload:]
  -[TVRUIRemoteViewController generatedTouchEvent:]
  -[TVRUIRemoteViewController setActiveDeviceIdentifier:]
  -[TVRUIRemoteViewController stringForDeviceDeviceIdentifierType:]
  -[TVRUIRemoteViewController setDeviceIdentifierType:]
  -[TVRUIRemoteViewController touchpadViewController]
  -[TVRUIRemoteViewController controlPanelViewController]
  -[TVRUIRemoteViewController _setupDevicePickerController]
  -[TVRUIRemoteViewController _stringForLaunchContextType:]
  -[TVRUIRemoteViewController _setupChildViewControllers]
  -[TVRUIRemoteViewController _createBlackGradientView]
  -[TVRUIRemoteViewController startConnections]
  -[TVRUIRemoteViewController _installTapToRadarButton]
  -[TVRUIRemoteViewController connectionServiceDidInvalidate:]
  -[TVRUIRemoteViewController devicePickerViewController]
  -[TVRUIRemoteViewController _layoutTouchpad:]
  -[TVRUIRemoteViewController mediaControlsViewController]
  -[TVRUIRemoteViewController blackGradientView]
  -[TVRUIRemoteViewController setBlackGradientView:]
  -[TVRUIRemoteViewController _disconnectUserInitiated]
  -[TVRUIRemoteViewController _disconnectSystemInitiated]
  -[TVRUIRemoteViewController _dismissAnyPresentedContentAnimated:completion:]
  -[TVRUIRemoteViewController stopConnections]
  -[TVRUIRemoteViewController _cancelHideConnectingAndShowDevicePicker]
  -[TVRUIRemoteViewController authenticatingDevice]
  -[TVRUIRemoteViewController setDevicePickerViewController:]
  -[TVRUIRemoteViewController fetchPreferredDeviceIdentifier]
  -[TVRUIRemoteViewController _showSearchingSpinnerIfNeeded]
  -[TVRUIRemoteViewController _deviceQueryThresholdReached]
  -[TVRUIRemoteViewController _connectToDevice:]
  -[TVRUIRemoteViewController _setupNetworkObserverIfNeeded]
  -[TVRUIRemoteViewController _initSessionStatistics]
  -[TVRUIRemoteViewController _disableVolumeControl]
  -[TVRUIRemoteViewController _cleanupIntroAnimation]
  -[TVRUIRemoteViewController _logSessionStatistics]
  -[TVRUIRemoteViewController _enableSkipControls:animated:]
  -[TVRUIRemoteViewController setPreferredDeviceIdentifier:]
  -[TVRUIRemoteViewController _cancelShowConnectingSpinner]
  -[TVRUIRemoteViewController _showConnectingSpinner]
  -[TVRUIRemoteViewController setAuthenticatingDevice:]
  -[TVRUIRemoteViewController _toggleControlAvailability]
  -[TVRUIRemoteViewController _hideMessageContent]
  -[TVRUIRemoteViewController _enableVolumeControl]
  -[TVRUIRemoteViewController _disableSearch]
  -[TVRUIRemoteViewController showMessageWithTitle:message:]
  -[TVRUIRemoteViewController showMessageWithError:andDevice:]
  -[TVRUIRemoteViewController setEditingSessionActive:]
  -[TVRUIRemoteViewController _presentKeyboardWithAttributes:initialText:]
  -[TVRUIRemoteViewController _presentPairingAlert]
  -[TVRUIRemoteViewController _presentTextPasswordAlert]
  -[TVRUIRemoteViewController _presentLegacyPairingAlertWithCode:]
  -[TVRUIRemoteViewController showThrottleConnectMessage]
  -[TVRUIRemoteViewController activeDeviceIdentifier]
  -[TVRUIRemoteViewController introAnimationView]
  -[TVRUIRemoteViewController setAuthenticationAlertController:]
  -[TVRUIRemoteViewController showPairingMessageWithCode:]
  -[TVRUIRemoteViewController authenticationAlertController]
  -[TVRUIRemoteViewController _performSiriEffectsWithButtonEvent:]
  -[TVRUIRemoteViewController clearMessageContent]
  -[TVRUIRemoteViewController showNoWIFIConnectionMessage]
  -[TVRUIRemoteViewController networkReachabilityDidUpdate:]
  -[TVRUIRemoteViewController showMessageWithTitle:message:titleFont:]
  -[TVRUIRemoteViewController showNoAssociatedNetworkMessage]
  -[TVRUIRemoteViewController showLoadingSpinner]
  -[TVRUIRemoteViewController showSearchingSpinner]
  -[TVRUIRemoteViewController _hideConnectingAndShowDevicePicker]
  -[TVRUIRemoteViewController showGenericUnableToConnectMessage]
  -[TVRUIRemoteViewController keyboardRequested]
  -[TVRUIRemoteViewController _switchToDismissalState]
  -[TVRUIRemoteViewController registeredForVolumeEvents]
  -[TVRUIRemoteViewController setRegisteredForVolumeEvents:]
  -[TVRUIRemoteViewController setIntroAnimationPackageView:]
  -[TVRUIRemoteViewController setIntroAnimationHintLabel:]
  -[TVRUIRemoteViewController setIntroAnimationView:]
  -[TVRUIRemoteViewController _switchToPresentationState]
  -[TVRUIRemoteViewController introAnimationPackageView]
  -[TVRUIRemoteViewController setIntroAnimationShowLabelAnimator:]
  -[TVRUIRemoteViewController introAnimationShowLabelAnimator]
  -[TVRUIRemoteViewController setIntroAnimationHideLabelAnimator:]
  -[TVRUIRemoteViewController introAnimationHideLabelAnimator]
  -[TVRUIRemoteViewController deviceDidConnect:]
  -[TVRUIRemoteViewController deviceDidDisconnect:reason:error:]
  -[TVRUIRemoteViewController deviceDidEncounterAuthenticationChallenge:passwordType:passcode:]
  -[TVRUIRemoteViewController device:didEncounterAuthenticationThrottle:]
  -[TVRUIRemoteViewController device:beganTextEditingWithAttributes:initialText:]
  -[TVRUIRemoteViewController device:endedTextEditingWithAttributes:endingText:]
  -[TVRUIRemoteViewController device:didUpdateText:]
  -[TVRUIRemoteViewController device:didUpdateAttributes:]
  -[TVRUIRemoteViewController device:needsMediaControls:]
  -[TVRUIRemoteViewController device:hidesMediaControls:]
  -[TVRUIRemoteViewController device:hasCaptionsEnabled:]
  -[TVRUIRemoteViewController device:supportsVolumeControl:]
  -[TVRUIRemoteViewController deviceListUpdated:]
  -[TVRUIRemoteViewController willShowDirectionalControls]
  -[TVRUIRemoteViewController configureWithDeviceIdentifier:type:showPicker:]
  -[TVRUIRemoteViewController animatorForPresentationAsAlert]
  -[TVRUIRemoteViewController animatorForDismissalAsAlert]
  -[TVRUIRemoteViewController _hasPresentedContent]
  -[TVRUIRemoteViewController _enableSearch]
  -[TVRUIRemoteViewController volumeUpEventGenerated]
  -[TVRUIRemoteViewController volumeDownEventGenerated]
  -[TVRUIRemoteViewController setTouchpadViewController:]
  -[TVRUIRemoteViewController setControlPanelViewController:]
  -[TVRUIRemoteViewController setMediaControlsViewController:]
  -[TVRUIRemoteViewController isEditingSessionActive]
  -[TVRUIRemoteViewController siriHaptic]
  -[TVRUIRemoteViewController setSiriHaptic:]
  -[TVRUIRemoteViewController keyboardHaptic]
  -[TVRUIRemoteViewController setKeyboardHaptic:]
  -[TVRUIRemoteViewController introAnimationHintLabel]


TVRUICoreDevice : NSObject /usr/lib/libSystem.B.dylib <TVRCDeviceDelegate, TVRCKeyboardControllerDelegate, TVRUIDevice>
 @property  TVRCDevice *device
 @property  <TVRUIDeviceDelegate> *delegate
 @property  TVRCDeviceAuthenticationChallenge *currentChallenge
 @property  BOOL supportsVolumeControl
 @property  BOOL supportsLaunchingApplications
 @property  BOOL supportsCaptionsToggle
 @property  BOOL supportsSiri
 @property  BOOL captionsEnabled
 @property  BOOL connecting
 @property  NSMutableDictionary *coreButtons
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TVRUICoreDevice _coreButtonEventTypeForEventType:]
  +[TVRUICoreDevice _coreButtonTypeForButton:]
  +[TVRUICoreDevice _uiButtonTypeFromCore:]

  // instance methods
  -[TVRUICoreDevice isConnected]
  -[TVRUICoreDevice connect]
  -[TVRUICoreDevice device]
  -[TVRUICoreDevice isPaired]
  -[TVRUICoreDevice .cxx_destruct]
  -[TVRUICoreDevice name]
  -[TVRUICoreDevice identifier]
  -[TVRUICoreDevice setDevice:]
  -[TVRUICoreDevice currentText]
  -[TVRUICoreDevice supportsSiri]
  -[TVRUICoreDevice sendButtonEvent:]
  -[TVRUICoreDevice supportsVolumeControl]
  -[TVRUICoreDevice isConnecting]
  -[TVRUICoreDevice setDelegate:]
  -[TVRUICoreDevice model]
  -[TVRUICoreDevice deviceConnected:]
  -[TVRUICoreDevice delegate]
  -[TVRUICoreDevice isEqualToDevice:]
  -[TVRUICoreDevice sendText:]
  -[TVRUICoreDevice captionsEnabled]
  -[TVRUICoreDevice setConnecting:]
  -[TVRUICoreDevice isLegacyAppleTV]
  -[TVRUICoreDevice supportsTouchEvents]
  -[TVRUICoreDevice sendTouchEvent:]
  -[TVRUICoreDevice sendReturnKey]
  -[TVRUICoreDevice deviceBeganConnecting:]
  -[TVRUICoreDevice device:disconnectedForReason:error:]
  -[TVRUICoreDevice device:removedSupportedButtons:added:]
  -[TVRUICoreDevice device:encounteredAuthenticationChallenge:]
  -[TVRUICoreDevice keyboardController:didUpdateText:]
  -[TVRUICoreDevice keyboardController:didUpdateAttributes:]
  -[TVRUICoreDevice keyboardController:beganTextEditingWithAttributes:]
  -[TVRUICoreDevice keyboardControllerEndedTextEditing:]
  -[TVRUICoreDevice keyboardAttributes]
  -[TVRUICoreDevice disconnectUserInitiated]
  -[TVRUICoreDevice cancelAuthenitcationChallenge]
  -[TVRUICoreDevice disconnectSystemInitiated]
  -[TVRUICoreDevice supportsLaunchingApplications]
  -[TVRUICoreDevice supportsDonatingIntents]
  -[TVRUICoreDevice supportsCaptionsToggle]
  -[TVRUICoreDevice hasIdentifier:]
  -[TVRUICoreDevice sendAuthenticationCode:]
  -[TVRUICoreDevice sendTextInputPayload:]
  -[TVRUICoreDevice deviceContextInformation]
  -[TVRUICoreDevice disconnectWithTimeOut]
  -[TVRUICoreDevice startVoiceRecorder]
  -[TVRUICoreDevice stopVoiceRecorder]
  -[TVRUICoreDevice coreButtons]
  -[TVRUICoreDevice _tvrcTouchPhaseFromUITouchPhase:]
  -[TVRUICoreDevice currentChallenge]
  -[TVRUICoreDevice setCurrentChallenge:]
  -[TVRUICoreDevice _disconnectWithType:]
  -[TVRUICoreDevice setCoreButtons:]
  -[TVRUICoreDevice _processButtonsForFeatureAdditions:]
  -[TVRUICoreDevice _disconnectReasonFromCoreReason:]
  -[TVRUICoreDevice _processButtonsForFeatureRemovals:]
  -[TVRUICoreDevice _isMediaButton:]
  -[TVRUICoreDevice _isVolumeButton:]
  -[TVRUICoreDevice _isLaunchApplicationButton:]
  -[TVRUICoreDevice _isCaptionsToggleButton:]
  -[TVRUICoreDevice _initWithDeviceIdentifier:]
  -[TVRUICoreDevice _initWithCoreDevice:]


TVRUIUnpairedDevices : NSObject /usr/lib/libSystem.B.dylib <TVRUIDevice>
 @property  <TVRUIDeviceDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TVRUIUnpairedDevices isConnected]
  -[TVRUIUnpairedDevices connect]
  -[TVRUIUnpairedDevices isPaired]
  -[TVRUIUnpairedDevices name]
  -[TVRUIUnpairedDevices identifier]
  -[TVRUIUnpairedDevices isConnecting]
  -[TVRUIUnpairedDevices setDelegate:]
  -[TVRUIUnpairedDevices model]
  -[TVRUIUnpairedDevices delegate]
  -[TVRUIUnpairedDevices isEqualToDevice:]
  -[TVRUIUnpairedDevices supportsTouchEvents]
  -[TVRUIUnpairedDevices disconnectUserInitiated]
  -[TVRUIUnpairedDevices disconnectSystemInitiated]
  -[TVRUIUnpairedDevices supportsDonatingIntents]
  -[TVRUIUnpairedDevices hasIdentifier:]
  -[TVRUIUnpairedDevices disconnectWithTimeOut]


TVRUIDevice : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[TVRUIDevice deviceWithIdentifier:]


TVRUICoreDeviceQuery : NSObject /usr/lib/libSystem.B.dylib <TVRCDeviceQueryDelegate, TVRUIDeviceQuery>
 @property  <TVRUIDeviceSearchDelegate> *delegate
 @property  TVRCDeviceQuery *query
 @property  NSMutableDictionary *deviceList
 @property  BOOL nearbyDeviceAdded
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TVRUICoreDeviceQuery hasStarted]
  -[TVRUICoreDeviceQuery setQuery:]
  -[TVRUICoreDeviceQuery .cxx_destruct]
  -[TVRUICoreDeviceQuery query]
  -[TVRUICoreDeviceQuery stop]
  -[TVRUICoreDeviceQuery setDelegate:]
  -[TVRUICoreDeviceQuery delegate]
  -[TVRUICoreDeviceQuery startQuery:]
  -[TVRUICoreDeviceQuery deviceList]
  -[TVRUICoreDeviceQuery setDeviceList:]
  -[TVRUICoreDeviceQuery deviceQueryDidUpdateDevices:]
  -[TVRUICoreDeviceQuery nearbyDeviceAdded]
  -[TVRUICoreDeviceQuery setNearbyDeviceAdded:]


TVRUIDeviceQuery : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[TVRUIDeviceQuery deviceQuery]


_TVRAlertView : UIView /System/Library/PrivateFrameworks/WiFiKit.framework/WiFiKit
 @property  UIView *blendModeView
 @property  UIVisualEffectView *effectView
 @property  UIView *hairlineView
 @property  UILabel *titleLabel
 @property  _TVRPasscodeField *passcodeField
 @property  _TVRMAlertButton *cancelButton
 @property  NSString *title
 @property  NSString *text
 @property  TVRCPINEntryAttributes *PINEntryAttributes
 @property  <_TVRAlertViewDelegate> *delegate

  // instance methods
  -[_TVRAlertView becomeFirstResponder]
  -[_TVRAlertView setCancelButton:]
  -[_TVRAlertView cancelButton]
  -[_TVRAlertView resignFirstResponder]
  -[_TVRAlertView setEffectView:]
  -[_TVRAlertView setTitleLabel:]
  -[_TVRAlertView effectView]
  -[_TVRAlertView titleLabel]
  -[_TVRAlertView initWithFrame:]
  -[_TVRAlertView setPasscodeField:]
  -[_TVRAlertView passcodeField]
  -[_TVRAlertView text]
  -[_TVRAlertView .cxx_destruct]
  -[_TVRAlertView setTitle:]
  -[_TVRAlertView title]
  -[_TVRAlertView sizeThatFits:]
  -[_TVRAlertView setDelegate:]
  -[_TVRAlertView delegate]
  -[_TVRAlertView setText:]
  -[_TVRAlertView layoutSubviews]
  -[_TVRAlertView setHairlineView:]
  -[_TVRAlertView hairlineView]
  -[_TVRAlertView PINEntryAttributes]
  -[_TVRAlertView setPINEntryAttributes:]
  -[_TVRAlertView _cancelButton:]
  -[_TVRAlertView _pinTextDidChange:]
  -[_TVRAlertView _passcodeFieldTapped]
  -[_TVRAlertView blendModeView]
  -[_TVRAlertView setBlendModeView:]


_TVRMAlertButton : UIButton /System/Library/PrivateFrameworks/WiFiKit.framework/WiFiKit
 @property  BOOL showingBackgroundEffect
 @property  UIView *burnView
 @property  UIView *plusDView

  // instance methods
  -[_TVRMAlertButton touchesBegan:withEvent:]
  -[_TVRMAlertButton plusDView]
  -[_TVRMAlertButton .cxx_destruct]
  -[_TVRMAlertButton setHighlighted:]
  -[_TVRMAlertButton setPlusDView:]
  -[_TVRMAlertButton touchesCancelled:withEvent:]
  -[_TVRMAlertButton touchesMoved:withEvent:]
  -[_TVRMAlertButton touchesEnded:withEvent:]
  -[_TVRMAlertButton layoutSubviews]
  -[_TVRMAlertButton setBurnView:]
  -[_TVRMAlertButton setShowingBackgroundEffect:]
  -[_TVRMAlertButton showingBackgroundEffect]
  -[_TVRMAlertButton burnView]


_TVRDropDownTableViewFooterView : UITableViewHeaderFooterView /System/Library/PrivateFrameworks/WiFiKit.framework/WiFiKit
  // instance methods
  -[_TVRDropDownTableViewFooterView initWithReuseIdentifier:]


_TVRUINetworkObserver : NSObject /usr/lib/libSystem.B.dylib <CBCentralManagerDelegate>
 @property  WFWiFiStateMonitor *wifiStateMonitor
 @property  WFClient *wifiClient
 @property  CBCentralManager *bluetoothManager
 @property  NSObject<OS_dispatch_queue> *queue
 @property  @? reachabilityDidUpdate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_TVRUINetworkObserver init]
  -[_TVRUINetworkObserver stopObserving]
  -[_TVRUINetworkObserver dealloc]
  -[_TVRUINetworkObserver .cxx_destruct]
  -[_TVRUINetworkObserver centralManagerDidUpdateState:]
  -[_TVRUINetworkObserver setQueue:]
  -[_TVRUINetworkObserver setBluetoothManager:]
  -[_TVRUINetworkObserver startObserving]
  -[_TVRUINetworkObserver wifiClient]
  -[_TVRUINetworkObserver queue]
  -[_TVRUINetworkObserver _isNetworkReachable]
  -[_TVRUINetworkObserver bluetoothManager]
  -[_TVRUINetworkObserver setWifiClient:]
  -[_TVRUINetworkObserver setReachabilityDidUpdate:]
  -[_TVRUINetworkObserver wifiStateMonitor]
  -[_TVRUINetworkObserver _wifiStateUpdatedWithOldState:andNewState:]
  -[_TVRUINetworkObserver setWifiStateMonitor:]
  -[_TVRUINetworkObserver _updateNetworkReachability:]
  -[_TVRUINetworkObserver reachabilityDidUpdate]


TVRViewServiceManager : NSObject /usr/lib/libSystem.B.dylib <SBSRemoteAlertHandleObserver>
 @property  TVRViewServiceConfigContext *viewServiceContext
 @property  SBSRemoteAlertHandle *alertHandle
 @property  NSString *lastActiveEndpointIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TVRViewServiceManager sharedInstance]

  // instance methods
  -[TVRViewServiceManager dismiss]
  -[TVRViewServiceManager .cxx_destruct]
  -[TVRViewServiceManager prewarm]
  -[TVRViewServiceManager remoteAlertHandle:didInvalidateWithError:]
  -[TVRViewServiceManager remoteAlertHandleDidDeactivate:]
  -[TVRViewServiceManager _launchViewServiceSuspended]
  -[TVRViewServiceManager alertHandle]
  -[TVRViewServiceManager setAlertHandle:]
  -[TVRViewServiceManager presentWithContext:]
  -[TVRViewServiceManager lastActiveEndpointIdentifier]
  -[TVRViewServiceManager setLastActiveEndpointIdentifier:]
  -[TVRViewServiceManager _actionForSetting:animationBlock:]
  -[TVRViewServiceManager _prewarmWithLaunchViewService:fetchActiveEndpoint:]
  -[TVRViewServiceManager _fetchActiveEndpointUID]
  -[TVRViewServiceManager _settingNameForValue:]
  -[TVRViewServiceManager viewServiceContext]
  -[TVRViewServiceManager setViewServiceContext:]


_TVRUIDeviceListCell : UITableViewCell /System/Library/PrivateFrameworks/WiFiKit.framework/WiFiKit
 @property  UIView *separator
 @property  <TVRUIDevice> *device
 @property  BOOL showSeparator
 @property  <TVRUIStyleProvider> *styleProvider

  // instance methods
  -[_TVRUIDeviceListCell initWithStyle:reuseIdentifier:]
  -[_TVRUIDeviceListCell device]
  -[_TVRUIDeviceListCell setStyleProvider:]
  -[_TVRUIDeviceListCell setSeparator:]
  -[_TVRUIDeviceListCell .cxx_destruct]
  -[_TVRUIDeviceListCell styleProvider]
  -[_TVRUIDeviceListCell setDevice:]
  -[_TVRUIDeviceListCell separator]
  -[_TVRUIDeviceListCell setShowSeparator:]
  -[_TVRUIDeviceListCell showSeparator]
  -[_TVRUIDeviceListCell layoutSubviews]
  -[_TVRUIDeviceListCell _applyFilterForDevice:]


_TVRMessageView : UIView /System/Library/PrivateFrameworks/WiFiKit.framework/WiFiKit
 @property  UIView *currentView
 @property  unsigned long messageType
 @property  UIButton *turnOnWiFiButton
 @property  BOOL wifiConnectInProgress
 @property  <TVRUIStyleProvider> *styleProvider

  // instance methods
  -[_TVRMessageView messageType]
  -[_TVRMessageView setMessageType:]
  -[_TVRMessageView setStyleProvider:]
  -[_TVRMessageView .cxx_destruct]
  -[_TVRMessageView styleProvider]
  -[_TVRMessageView intrinsicContentSize]
  -[_TVRMessageView clearContent]
  -[_TVRMessageView pointInside:withEvent:]
  -[_TVRMessageView layoutSubviews]
  -[_TVRMessageView currentView]
  -[_TVRMessageView setCurrentView:]
  -[_TVRMessageView showMessageWithTitle:message:]
  -[_TVRMessageView showPairingMessageWithCode:]
  -[_TVRMessageView showNoWIFIConnectionMessage]
  -[_TVRMessageView showMessageWithError:device:]
  -[_TVRMessageView showMessageWithTitle:message:titleFont:]
  -[_TVRMessageView showNoAssociatedNetworkMessage]
  -[_TVRMessageView showLoadingSpinner]
  -[_TVRMessageView showSearchingSpinner]
  -[_TVRMessageView _deviceTypeString]
  -[_TVRMessageView _largeAccessibilityFontSizesEnabled]
  -[_TVRMessageView _localizedLegacyPairingMessageForDeviceModel]
  -[_TVRMessageView _convertToAttributedStringWithReplacement:imagePointSize:]
  -[_TVRMessageView isWifiConnectInProgress]
  -[_TVRMessageView setTurnOnWiFiButton:]
  -[_TVRMessageView _turnOnWireless:]
  -[_TVRMessageView _loadingViewWithTitle:forSize:]
  -[_TVRMessageView setWifiConnectInProgress:]
  -[_TVRMessageView turnOnWiFiButton]


_TVREventHaptic : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[_TVREventHaptic .cxx_destruct]
  -[_TVREventHaptic playSelectionEventHaptic]
  -[_TVREventHaptic playImpactEventHaptic]


_TVRButtonHaptic : NSObject /usr/lib/libSystem.B.dylib
 @property  <UIFeedbackGeneratorUserInteractionDriven> *behavior

  // class methods
  +[_TVRButtonHaptic hapticForView:]

  // instance methods
  -[_TVRButtonHaptic setBehavior:]
  -[_TVRButtonHaptic behavior]
  -[_TVRButtonHaptic userInteractionCancelled]
  -[_TVRButtonHaptic userInteractionEnded]
  -[_TVRButtonHaptic .cxx_destruct]
  -[_TVRButtonHaptic userInteractionBegan]


_TVRKeyboardHaptic : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[_TVRKeyboardHaptic play]


_TVRSiriHaptic : NSObject /usr/lib/libSystem.B.dylib
 @property  <UIFeedbackGeneratorUserInteractionDriven> *behavior
 @property  long long state
 @property  BOOL shouldExecuteStartCompletionBlock

  // instance methods
  -[_TVRSiriHaptic setBehavior:]
  -[_TVRSiriHaptic behavior]
  -[_TVRSiriHaptic setState:]
  -[_TVRSiriHaptic .cxx_destruct]
  -[_TVRSiriHaptic state]
  -[_TVRSiriHaptic initWithButton:]
  -[_TVRSiriHaptic performSiriStartWithCompletion:]
  -[_TVRSiriHaptic siriButtonTouchesEnded]
  -[_TVRSiriHaptic performSiriEndWithSuccess:]
  -[_TVRSiriHaptic shouldExecuteStartCompletionBlock]
  -[_TVRSiriHaptic setShouldExecuteStartCompletionBlock:]


_TVRemoteAlertVisualStyleProviding : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[_TVRemoteAlertVisualStyleProviding visualStyleForIdiom:]


_TVRemoteAlertVisualStyle_Phone : NSObject /usr/lib/libSystem.B.dylib <_TVRemoteAlertVisualStyleProviding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_TVRemoteAlertVisualStyle_Phone crossfadeDuration]
  -[_TVRemoteAlertVisualStyle_Phone backgroundMaterialView]
  -[_TVRemoteAlertVisualStyle_Phone foregroundVisualEffect]
  -[_TVRemoteAlertVisualStyle_Phone maximizedCornerRadius]
  -[_TVRemoteAlertVisualStyle_Phone remoteWidth]
  -[_TVRemoteAlertVisualStyle_Phone remoteHeight]
  -[_TVRemoteAlertVisualStyle_Phone minimizedCornerRadius]
  -[_TVRemoteAlertVisualStyle_Phone frameForParentView:]
  -[_TVRemoteAlertVisualStyle_Phone allowsTapToDismiss]
  -[_TVRemoteAlertVisualStyle_Phone allowsSwipeToDismiss]


_TVRemoteAlertVisualStyle_Pad : NSObject /usr/lib/libSystem.B.dylib <_TVRemoteAlertVisualStyleProviding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_TVRemoteAlertVisualStyle_Pad crossfadeDuration]
  -[_TVRemoteAlertVisualStyle_Pad backgroundMaterialView]
  -[_TVRemoteAlertVisualStyle_Pad foregroundVisualEffect]
  -[_TVRemoteAlertVisualStyle_Pad maximizedCornerRadius]
  -[_TVRemoteAlertVisualStyle_Pad remoteWidth]
  -[_TVRemoteAlertVisualStyle_Pad remoteHeight]
  -[_TVRemoteAlertVisualStyle_Pad minimizedCornerRadius]
  -[_TVRemoteAlertVisualStyle_Pad frameForParentView:]
  -[_TVRemoteAlertVisualStyle_Pad allowsTapToDismiss]
  -[_TVRemoteAlertVisualStyle_Pad allowsSwipeToDismiss]


TVRUIAlertFadeAnimationController : NSObject /usr/lib/libSystem.B.dylib <UIViewControllerAnimatedTransitioning>
 @property  long long animationType
 @property  <_TVRemoteAlertVisualStyleProviding> *visualStyle
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TVRUIAlertFadeAnimationController transitionDuration:]
  -[TVRUIAlertFadeAnimationController visualStyle]
  -[TVRUIAlertFadeAnimationController .cxx_destruct]
  -[TVRUIAlertFadeAnimationController animateTransition:]
  -[TVRUIAlertFadeAnimationController animationType]
  -[TVRUIAlertFadeAnimationController _runPresentationAnimationWithTransition:]
  -[TVRUIAlertFadeAnimationController _runDismissalAnimationWithTransition:]
  -[TVRUIAlertFadeAnimationController initWithAnimationType:visualStyle:]


TVRUIControlPanelViewController : UIViewController /System/Library/PrivateFrameworks/WiFiKit.framework/WiFiKit <_TVRUIEventDelegate, TVRUIRemoteViewProvider>
 @property  _TVRUIButtonPanelView *touchpadButtonPanel
 @property  _TVRUIButtonPanelView *genericButtonPanel
 @property  _TVRUIButtonPanelView *panelWithKeyboardButton
 @property  _TVRUIButtonPanelView *legacyButtonPanel
 @property  _TVRUIButtonPanelView *legacyPanelWithKeyboardButton
 @property  <TVRUIDevice> *remoteDevice
 @property  <TVRUIStyleProvider> *styleProvider
 @property  _TVRSiriHaptic *siriHaptic
 @property  UIView *backgroundView
 @property  <_TVRUIEventDelegate> *buttonActionsDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TVRUIControlPanelViewController viewDidLoad]
  -[TVRUIControlPanelViewController backgroundView]
  -[TVRUIControlPanelViewController setBackgroundView:]
  -[TVRUIControlPanelViewController setStyleProvider:]
  -[TVRUIControlPanelViewController .cxx_destruct]
  -[TVRUIControlPanelViewController styleProvider]
  -[TVRUIControlPanelViewController viewWillLayoutSubviews]
  -[TVRUIControlPanelViewController setDevice:]
  -[TVRUIControlPanelViewController remoteDevice]
  -[TVRUIControlPanelViewController setRemoteDevice:]
  -[TVRUIControlPanelViewController _canShowWhileLocked]
  -[TVRUIControlPanelViewController disableControls]
  -[TVRUIControlPanelViewController enableSearchButton]
  -[TVRUIControlPanelViewController buttonActionsDelegate]
  -[TVRUIControlPanelViewController setButtonActionsDelegate:]
  -[TVRUIControlPanelViewController disableSearchButton]
  -[TVRUIControlPanelViewController transitonToViewForDeviceType:]
  -[TVRUIControlPanelViewController enableControls]
  -[TVRUIControlPanelViewController showKeyboardButton]
  -[TVRUIControlPanelViewController hideKeyboardButton]
  -[TVRUIControlPanelViewController siriHaptic]
  -[TVRUIControlPanelViewController setSiriHaptic:]
  -[TVRUIControlPanelViewController _createTouchpadButtonPanel]
  -[TVRUIControlPanelViewController touchpadButtonPanel]
  -[TVRUIControlPanelViewController _transitionToPanelView:]
  -[TVRUIControlPanelViewController genericButtonPanel]
  -[TVRUIControlPanelViewController panelWithKeyboardButton]
  -[TVRUIControlPanelViewController legacyButtonPanel]
  -[TVRUIControlPanelViewController legacyPanelWithKeyboardButton]
  -[TVRUIControlPanelViewController _createViewWithPrimaryButtonType:leftButtonTypes:rightButtonTypes:]
  -[TVRUIControlPanelViewController setTouchpadButtonPanel:]
  -[TVRUIControlPanelViewController setGenericButtonPanel:]
  -[TVRUIControlPanelViewController setPanelWithKeyboardButton:]
  -[TVRUIControlPanelViewController setLegacyButtonPanel:]
  -[TVRUIControlPanelViewController setLegacyPanelWithKeyboardButton:]
  -[TVRUIControlPanelViewController _createLegacyPanelWithkeyboard]
  -[TVRUIControlPanelViewController _createButtonPanelWithKeyboard]
  -[TVRUIControlPanelViewController _createLegacyButtonPanel]
  -[TVRUIControlPanelViewController _transitionToButtonPanelAndCreateIfNeeded]
  -[TVRUIControlPanelViewController _transitionToTouchpadPanelAndCreateIfNeeded]
  -[TVRUIControlPanelViewController _createGenericControlButtonPanel]


_TVRUITouchpadView : UIView /System/Library/PrivateFrameworks/WiFiKit.framework/WiFiKit

TVRUIDarkStyleProvider : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[TVRUIDarkStyleProvider separatorView]
  -[TVRUIDarkStyleProvider cellBackgroundColor]
  -[TVRUIDarkStyleProvider buttonTextColor]
  -[TVRUIDarkStyleProvider buttonBackgroundView]
  -[TVRUIDarkStyleProvider buttonBackgroundColor]
  -[TVRUIDarkStyleProvider buttonFont]
  -[TVRUIDarkStyleProvider chevronImage]
  -[TVRUIDarkStyleProvider remoteSize]
  -[TVRUIDarkStyleProvider defaultDeviceTitle]
  -[TVRUIDarkStyleProvider touchpadInsets]
  -[TVRUIDarkStyleProvider fontForDeviceTitle]
  -[TVRUIDarkStyleProvider textColorForDeviceTitle]
  -[TVRUIDarkStyleProvider deviceListRowHeight]
  -[TVRUIDarkStyleProvider textForNearbyDevicesSectionTitle]
  -[TVRUIDarkStyleProvider fontForNearbyDevicesSectionTitle]
  -[TVRUIDarkStyleProvider textColorForNearbyDevicesSectionTitle]
  -[TVRUIDarkStyleProvider cellSeparatorBackgroundColor]
  -[TVRUIDarkStyleProvider touchpadHeight]
  -[TVRUIDarkStyleProvider touchpadBackgroundColor]
  -[TVRUIDarkStyleProvider directionalPadSelectButtonBorderWidth]
  -[TVRUIDarkStyleProvider directionalPadSelectButtonBorderColor]
  -[TVRUIDarkStyleProvider mediaControlsViewHeight]
  -[TVRUIDarkStyleProvider iconForButtonType:]
  -[TVRUIDarkStyleProvider mediaControlsInsets]
  -[TVRUIDarkStyleProvider mediaControlsButtonHeight]
  -[TVRUIDarkStyleProvider primaryButtonHeight]
  -[TVRUIDarkStyleProvider secondaryButtonHeight]
  -[TVRUIDarkStyleProvider textForButtonType:]
  -[TVRUIDarkStyleProvider disabledButtonAlpha]
  -[TVRUIDarkStyleProvider rootBackgroundView]
  -[TVRUIDarkStyleProvider rootBackgroundColor]
  -[TVRUIDarkStyleProvider deviceSafeAreaInsetTop]
  -[TVRUIDarkStyleProvider deviceTitleHeight]
  -[TVRUIDarkStyleProvider deviceSafeAreaInsetBottom]
  -[TVRUIDarkStyleProvider widthForMessagesView]
  -[TVRUIDarkStyleProvider touchpadCornerRadius]
  -[TVRUIDarkStyleProvider textForPairingPasswordAlert]
  -[TVRUIDarkStyleProvider textForPairingAlert]
  -[TVRUIDarkStyleProvider textForDeviceLockoutAlert]
  -[TVRUIDarkStyleProvider fontForIntroAnimationLabel]
  -[TVRUIDarkStyleProvider textColorForIntroAnimationLabel]
  -[TVRUIDarkStyleProvider isSmallDevice]
  -[TVRUIDarkStyleProvider genericTVIcon]
  -[TVRUIDarkStyleProvider airplayStickIcon]
  -[TVRUIDarkStyleProvider airplaySetTopBoxIcon]
  -[TVRUIDarkStyleProvider appleTVIcon]
  -[TVRUIDarkStyleProvider fontForDeviceListRow]
  -[TVRUIDarkStyleProvider colorForConnectedDevice]
  -[TVRUIDarkStyleProvider colorForDisconnectedDevice]
  -[TVRUIDarkStyleProvider colorForMessageLabels]
  -[TVRUIDarkStyleProvider fontForMessageViewDescription]
  -[TVRUIDarkStyleProvider fontForMessageViewTitle]
  -[TVRUIDarkStyleProvider colorForSpinner]
  -[TVRUIDarkStyleProvider fontForWiFiButton]
  -[TVRUIDarkStyleProvider fontForSpinnerTitle]
  -[TVRUIDarkStyleProvider textColorForSpinnerTitle]
  -[TVRUIDarkStyleProvider controlPanelBackgroundView]
  -[TVRUIDarkStyleProvider controlPanelBackgroundColor]
  -[TVRUIDarkStyleProvider _deviceHasHomeButton]
  -[TVRUIDarkStyleProvider _symbolImageForButtonPanelNamed:]
  -[TVRUIDarkStyleProvider _symbolImageForMediaControlsNamed:]
  -[TVRUIDarkStyleProvider touchpadBackgroundView]
  -[TVRUIDarkStyleProvider touchpadAlpha]
  -[TVRUIDarkStyleProvider touchpadCompressedCornerRadius]
  -[TVRUIDarkStyleProvider controlPanelViewHeight]
  -[TVRUIDarkStyleProvider secondaryButtonInsets]


_TVRMaterialView : UIView /System/Library/PrivateFrameworks/WiFiKit.framework/WiFiKit
 @property  double weighting

  // class methods
  +[_TVRMaterialView seperatorMaterialView]
  +[_TVRMaterialView backgroundMaterialViewWithWeighting:]
  +[_TVRMaterialView trackpadMaterialView]

  // instance methods
  -[_TVRMaterialView weighting]
  -[_TVRMaterialView .cxx_destruct]
  -[_TVRMaterialView setWeighting:]
  -[_TVRMaterialView layoutSubviews]
  -[_TVRMaterialView initWithMaterialView:]
  -[_TVRMaterialView initWithDarkMaterialView]


TVRTouchpadView : UIView /System/Library/PrivateFrameworks/WiFiKit.framework/WiFiKit
 @property  TVRTouchProcessor *touchProcessor
 @property  _TVRButtonHaptic *haptic
 @property  BOOL highlighted
 @property  @? configurationHandler
 @property  {UIEdgeInsets=dddd} contentInsets

  // instance methods
  -[TVRTouchpadView contentInsets]
  -[TVRTouchpadView setContentInsets:]
  -[TVRTouchpadView touchesBegan:withEvent:]
  -[TVRTouchpadView isHighlighted]
  -[TVRTouchpadView .cxx_destruct]
  -[TVRTouchpadView _init]
  -[TVRTouchpadView touchesCancelled:withEvent:]
  -[TVRTouchpadView haptic]
  -[TVRTouchpadView touchesMoved:withEvent:]
  -[TVRTouchpadView touchesEnded:withEvent:]
  -[TVRTouchpadView configurationHandler]
  -[TVRTouchpadView setHaptic:]
  -[TVRTouchpadView _notifyConfigurationHandler:]
  -[TVRTouchpadView setConfigurationHandler:]
  -[TVRTouchpadView touchProcessor]
  -[TVRTouchpadView setTouchProcessor:]


_TVRCTouchInfo : NSObject /usr/lib/libSystem.B.dylib
 @property  long long virtualPhase
 @property  BOOL pendingCancellation
 @property  {CGPoint=dd} initialLocation
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} boundingBox
 @property  {CGPoint=dd} initialProportionalLocation
 @property  BOOL isLikelyLongListScrollingEdgeGesture
 @property  double timestamp
 @property  double previousTimestamp

  // instance methods
  -[_TVRCTouchInfo timestamp]
  -[_TVRCTouchInfo setTimestamp:]
  -[_TVRCTouchInfo setBoundingBox:]
  -[_TVRCTouchInfo boundingBox]
  -[_TVRCTouchInfo setInitialLocation:]
  -[_TVRCTouchInfo initialLocation]
  -[_TVRCTouchInfo setPreviousTimestamp:]
  -[_TVRCTouchInfo previousTimestamp]
  -[_TVRCTouchInfo virtualPhase]
  -[_TVRCTouchInfo setVirtualPhase:]
  -[_TVRCTouchInfo pendingCancellation]
  -[_TVRCTouchInfo setPendingCancellation:]
  -[_TVRCTouchInfo initialProportionalLocation]
  -[_TVRCTouchInfo setInitialProportionalLocation:]
  -[_TVRCTouchInfo isLikelyLongListScrollingEdgeGesture]
  -[_TVRCTouchInfo setIsLikelyLongListScrollingEdgeGesture:]


TVRTouchProcessor : NSObject /usr/lib/libSystem.B.dylib
 @property  TVRTouchpadView *touchpadView
 @property  <TVRTouchProcessorDelegate> *delegate

  // class methods
  +[TVRTouchProcessor touchProcessorForDevice:]

  // instance methods
  -[TVRTouchProcessor touchesBegan:withEvent:]
  -[TVRTouchProcessor .cxx_destruct]
  -[TVRTouchProcessor _init]
  -[TVRTouchProcessor touchesCancelled:withEvent:]
  -[TVRTouchProcessor reset]
  -[TVRTouchProcessor setDelegate:]
  -[TVRTouchProcessor touchesMoved:withEvent:]
  -[TVRTouchProcessor touchesEnded:withEvent:]
  -[TVRTouchProcessor delegate]
  -[TVRTouchProcessor touchpadView]
  -[TVRTouchProcessor setTouchpadView:]
  -[TVRTouchProcessor _deviceSupportsMovableBoundingBox]
  -[TVRTouchProcessor _touchTimerExpired:]
  -[TVRTouchProcessor _defaultRelativeStartingLocation]
  -[TVRTouchProcessor _beginTrackingTouch:withRelativeLocation:]
  -[TVRTouchProcessor _dispatchGameControllerEventForTouch:event:]
  -[TVRTouchProcessor _relativeTouchLocationForDistanceTraveled:]
  -[TVRTouchProcessor _deliverTouchToDelegate:info:]
  -[TVRTouchProcessor _beginTrackingAnyTouchIfNeeded]
  -[TVRTouchProcessor _boundingBoxForTouch:relativeStartLocation:]
  -[TVRTouchProcessor _virtualTouchLocationForTouch:]
  -[TVRTouchProcessor markCurrentTouchToBeCancelled]
  -[TVRTouchProcessor sendPressBegan:]
  -[TVRTouchProcessor sendPressEnded:]


TVRStandardTouchProcessor : TVRTouchProcessor
  // instance methods
  -[TVRStandardTouchProcessor _tap:]
  -[TVRStandardTouchProcessor touchesBegan:withEvent:]
  -[TVRStandardTouchProcessor .cxx_destruct]
  -[TVRStandardTouchProcessor touchesCancelled:withEvent:]
  -[TVRStandardTouchProcessor touchesMoved:withEvent:]
  -[TVRStandardTouchProcessor touchesEnded:withEvent:]
  -[TVRStandardTouchProcessor setTouchpadView:]
  -[TVRStandardTouchProcessor _touchpadClickVirtualizerTimerFired:]


TVRMatchPointTouchProcessor : TVRTouchProcessor
 @property  _TVRMatchPointArtworkView *artworkView
 @property  UITapGestureRecognizer *tapGesture
 @property  long long highlightedButtonType

  // instance methods
  -[TVRMatchPointTouchProcessor touchesBegan:withEvent:]
  -[TVRMatchPointTouchProcessor artworkView]
  -[TVRMatchPointTouchProcessor .cxx_destruct]
  -[TVRMatchPointTouchProcessor setArtworkView:]
  -[TVRMatchPointTouchProcessor _handleTap:]
  -[TVRMatchPointTouchProcessor tapGesture]
  -[TVRMatchPointTouchProcessor setTapGesture:]
  -[TVRMatchPointTouchProcessor touchesCancelled:withEvent:]
  -[TVRMatchPointTouchProcessor _artworkView]
  -[TVRMatchPointTouchProcessor touchesMoved:withEvent:]
  -[TVRMatchPointTouchProcessor touchesEnded:withEvent:]
  -[TVRMatchPointTouchProcessor setTouchpadView:]
  -[TVRMatchPointTouchProcessor _pressTypeForLocationInTouchpadView:]
  -[TVRMatchPointTouchProcessor _sendButtonPressToDelegate:]
  -[TVRMatchPointTouchProcessor highlightedButtonType]
  -[TVRMatchPointTouchProcessor setHighlightedButtonType:]


_TVRMatchPointArtworkView : UIView /System/Library/PrivateFrameworks/WiFiKit.framework/WiFiKit
  // instance methods
  -[_TVRMatchPointArtworkView initWithFrame:]
  -[_TVRMatchPointArtworkView .cxx_destruct]
  -[_TVRMatchPointArtworkView layoutSubviews]
  -[_TVRMatchPointArtworkView highlightForButtonType:enabled:]
  -[_TVRMatchPointArtworkView touchLocationIsConsideredCenter:]


TVRUITouchpadViewController : UIViewController /System/Library/PrivateFrameworks/WiFiKit.framework/WiFiKit <_TVRUIEventDelegate, _UICursorInteractionDelegate, TVRUIRemoteViewProvider>
 @property  _TVRUITouchpadView *touchpadView
 @property  _TVRUIDirectionalControlView *directionalControlView
 @property  <TVRUIDevice> *remoteDevice
 @property  <TVRUIStyleProvider> *styleProvider
 @property  long long touchpadMode
 @property  <TVRUITouchProcessor> *touchProcessor
 @property  UIView *backgroundView
 @property  <_TVRUIEventDelegate> *eventDelegate
 @property  BOOL showControls
 @property  BOOL mediaControlsAreVisible
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TVRUITouchpadViewController viewDidLoad]
  -[TVRUITouchpadViewController cursorInteraction:styleForRegion:modifiers:]
  -[TVRUITouchpadViewController cursorInteraction:regionForLocation:defaultRegion:]
  -[TVRUITouchpadViewController backgroundView]
  -[TVRUITouchpadViewController setBackgroundView:]
  -[TVRUITouchpadViewController touchesBegan:withEvent:]
  -[TVRUITouchpadViewController setStyleProvider:]
  -[TVRUITouchpadViewController .cxx_destruct]
  -[TVRUITouchpadViewController styleProvider]
  -[TVRUITouchpadViewController viewWillLayoutSubviews]
  -[TVRUITouchpadViewController touchesCancelled:withEvent:]
  -[TVRUITouchpadViewController setDevice:]
  -[TVRUITouchpadViewController isShowingControls]
  -[TVRUITouchpadViewController remoteDevice]
  -[TVRUITouchpadViewController setRemoteDevice:]
  -[TVRUITouchpadViewController _canShowWhileLocked]
  -[TVRUITouchpadViewController viewWillDisappear:]
  -[TVRUITouchpadViewController touchesMoved:withEvent:]
  -[TVRUITouchpadViewController touchesEnded:withEvent:]
  -[TVRUITouchpadViewController cursorInteraction:willEnterRegion:]
  -[TVRUITouchpadViewController eventDelegate]
  -[TVRUITouchpadViewController setEventDelegate:]
  -[TVRUITouchpadViewController touchpadView]
  -[TVRUITouchpadViewController setTouchpadView:]
  -[TVRUITouchpadViewController transitonToViewForDeviceType:]
  -[TVRUITouchpadViewController setMediaControlsAreVisible:]
  -[TVRUITouchpadViewController setShowControls:]
  -[TVRUITouchpadViewController touchProcessor]
  -[TVRUITouchpadViewController setTouchProcessor:]
  -[TVRUITouchpadViewController _setupTouchpadView]
  -[TVRUITouchpadViewController _transitionToDirectionalControlView]
  -[TVRUITouchpadViewController _transitionToTouchpadView]
  -[TVRUITouchpadViewController _simpleRemoteGesturesEnabled:]
  -[TVRUITouchpadViewController directionalControlView]
  -[TVRUITouchpadViewController setTouchpadMode:]
  -[TVRUITouchpadViewController _setupDirectionalArrowView]
  -[TVRUITouchpadViewController _toggleControlScale]
  -[TVRUITouchpadViewController _transitionToAppropriateView]
  -[TVRUITouchpadViewController touchpadMode]
  -[TVRUITouchpadViewController areMediaControlsVisible]
  -[TVRUITouchpadViewController setDirectionalControlView:]


TVRUIIntentManager : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[TVRUIIntentManager donateIntentsForDeviceWithID:name:]


_TVRUICubicSpringTimingParameters : UISpringTimingParameters /System/Library/PrivateFrameworks/WiFiKit.framework/WiFiKit
 @property  UICubicTimingParameters *springCubicTimingParameters

  // class methods
  +[_TVRUICubicSpringTimingParameters standardTimingParameters]

  // instance methods
  -[_TVRUICubicSpringTimingParameters copyWithZone:]
  -[_TVRUICubicSpringTimingParameters springCubicTimingParameters]
  -[_TVRUICubicSpringTimingParameters setSpringCubicTimingParameters:]
  -[_TVRUICubicSpringTimingParameters .cxx_destruct]
  -[_TVRUICubicSpringTimingParameters cubicTimingParameters]


_TVRUICubicSpringAnimator : UIViewPropertyAnimator /System/Library/PrivateFrameworks/WiFiKit.framework/WiFiKit
  // class methods
  +[_TVRUICubicSpringAnimator standardSpringAnimator]

  // instance methods
  -[_TVRUICubicSpringAnimator _basicAnimationForView:withKeyPath:]


WakeAppleTVIntent : INIntent /System/Library/Frameworks/AudioToolbox.framework/AudioToolbox
 @property  TVRDevice *device


WakeAppleTVIntentResponse : INIntentResponse /System/Library/Frameworks/AudioToolbox.framework/AudioToolbox
 @property  long long code

  // instance methods
  -[WakeAppleTVIntentResponse setCode:]
  -[WakeAppleTVIntentResponse code]
  -[WakeAppleTVIntentResponse initWithCode:userActivity:]


SleepAppleTVIntent : INIntent /System/Library/Frameworks/AudioToolbox.framework/AudioToolbox
 @property  TVRDevice *device


SleepAppleTVIntentResponse : INIntentResponse /System/Library/Frameworks/AudioToolbox.framework/AudioToolbox
 @property  long long code

  // instance methods
  -[SleepAppleTVIntentResponse setCode:]
  -[SleepAppleTVIntentResponse code]
  -[SleepAppleTVIntentResponse initWithCode:userActivity:]


LaunchTVAppIntent : INIntent /System/Library/Frameworks/AudioToolbox.framework/AudioToolbox
 @property  TVRDevice *device


LaunchTVAppIntentResponse : INIntentResponse /System/Library/Frameworks/AudioToolbox.framework/AudioToolbox
 @property  long long code

  // instance methods
  -[LaunchTVAppIntentResponse setCode:]
  -[LaunchTVAppIntentResponse code]
  -[LaunchTVAppIntentResponse initWithCode:userActivity:]


LaunchRemoteIntent : INIntent /System/Library/Frameworks/AudioToolbox.framework/AudioToolbox
 @property  TVRDevice *device


LaunchRemoteIntentResponse : INIntentResponse /System/Library/Frameworks/AudioToolbox.framework/AudioToolbox
 @property  long long code

  // instance methods
  -[LaunchRemoteIntentResponse setCode:]
  -[LaunchRemoteIntentResponse code]
  -[LaunchRemoteIntentResponse initWithCode:userActivity:]


PauseContentIntent : INIntent /System/Library/Frameworks/AudioToolbox.framework/AudioToolbox
 @property  TVRDevice *device
 @property  long long mediaCommand


PauseContentIntentResponse : INIntentResponse /System/Library/Frameworks/AudioToolbox.framework/AudioToolbox
 @property  long long code

  // instance methods
  -[PauseContentIntentResponse setCode:]
  -[PauseContentIntentResponse code]
  -[PauseContentIntentResponse initWithCode:userActivity:]


LaunchApplicationIntent : INIntent /System/Library/Frameworks/AudioToolbox.framework/AudioToolbox
 @property  TVRDevice *device
 @property  TVRApplication *application


LaunchApplicationIntentResponse : INIntentResponse /System/Library/Frameworks/AudioToolbox.framework/AudioToolbox
 @property  long long code

  // instance methods
  -[LaunchApplicationIntentResponse setCode:]
  -[LaunchApplicationIntentResponse code]
  -[LaunchApplicationIntentResponse initWithCode:userActivity:]


LaunchScreenSaverIntent : INIntent /System/Library/Frameworks/AudioToolbox.framework/AudioToolbox
 @property  TVRDevice *device


LaunchScreenSaverIntentResponse : INIntentResponse /System/Library/Frameworks/AudioToolbox.framework/AudioToolbox
 @property  long long code

  // instance methods
  -[LaunchScreenSaverIntentResponse setCode:]
  -[LaunchScreenSaverIntentResponse code]
  -[LaunchScreenSaverIntentResponse initWithCode:userActivity:]


ToggleCaptionsIntent : INIntent /System/Library/Frameworks/AudioToolbox.framework/AudioToolbox
 @property  long long toggle
 @property  TVRDevice *device


ToggleCaptionsIntentResponse : INIntentResponse /System/Library/Frameworks/AudioToolbox.framework/AudioToolbox
 @property  long long code

  // instance methods
  -[ToggleCaptionsIntentResponse setCode:]
  -[ToggleCaptionsIntentResponse code]
  -[ToggleCaptionsIntentResponse initWithCode:userActivity:]


SwitchUserAccountIntent : INIntent /System/Library/Frameworks/AudioToolbox.framework/AudioToolbox
 @property  TVRDevice *device
 @property  TVRUserAccount *account


SwitchUserAccountIntentResponse : INIntentResponse /System/Library/Frameworks/AudioToolbox.framework/AudioToolbox
 @property  long long code

  // instance methods
  -[SwitchUserAccountIntentResponse setCode:]
  -[SwitchUserAccountIntentResponse code]
  -[SwitchUserAccountIntentResponse initWithCode:userActivity:]


SkipContentIntent : INIntent /System/Library/Frameworks/AudioToolbox.framework/AudioToolbox
 @property  TVRDevice *device
 @property  NSNumber *skipDuration
 @property  long long skipCommand


SkipContentIntentResponse : INIntentResponse /System/Library/Frameworks/AudioToolbox.framework/AudioToolbox
 @property  long long code

  // instance methods
  -[SkipContentIntentResponse setCode:]
  -[SkipContentIntentResponse code]
  -[SkipContentIntentResponse initWithCode:userActivity:]


SkipContentSkipDurationResolutionResult : INDoubleResolutionResult /System/Library/Frameworks/AudioToolbox.framework/AudioToolbox
  // class methods
  +[SkipContentSkipDurationResolutionResult unsupportedForReason:]


ReduceLoudSoundsIntent : INIntent /System/Library/Frameworks/AudioToolbox.framework/AudioToolbox
 @property  TVRDevice *device
 @property  NSNumber *toggle


ReduceLoudSoundsIntentResponse : INIntentResponse /System/Library/Frameworks/AudioToolbox.framework/AudioToolbox
 @property  long long code

  // instance methods
  -[ReduceLoudSoundsIntentResponse setCode:]
  -[ReduceLoudSoundsIntentResponse code]
  -[ReduceLoudSoundsIntentResponse initWithCode:userActivity:]


ToggleSystemAppearanceIntent : INIntent /System/Library/Frameworks/AudioToolbox.framework/AudioToolbox
 @property  TVRDevice *device
 @property  long long appearanceToggle


ToggleSystemAppearanceIntentResponse : INIntentResponse /System/Library/Frameworks/AudioToolbox.framework/AudioToolbox
 @property  long long code

  // instance methods
  -[ToggleSystemAppearanceIntentResponse setCode:]
  -[ToggleSystemAppearanceIntentResponse code]
  -[ToggleSystemAppearanceIntentResponse initWithCode:userActivity:]


TVRMediaCommandResolutionResult : INEnumResolutionResult /System/Library/Frameworks/AudioToolbox.framework/AudioToolbox
  // class methods
  +[TVRMediaCommandResolutionResult successWithResolvedMediaCommand:]
  +[TVRMediaCommandResolutionResult confirmationRequiredWithMediaCommandToConfirm:]


TVRCaptionsToggleResolutionResult : INEnumResolutionResult /System/Library/Frameworks/AudioToolbox.framework/AudioToolbox
  // class methods
  +[TVRCaptionsToggleResolutionResult successWithResolvedCaptionsToggle:]
  +[TVRCaptionsToggleResolutionResult confirmationRequiredWithCaptionsToggleToConfirm:]


TVRSkipCommandResolutionResult : INEnumResolutionResult /System/Library/Frameworks/AudioToolbox.framework/AudioToolbox
  // class methods
  +[TVRSkipCommandResolutionResult successWithResolvedSkipCommand:]
  +[TVRSkipCommandResolutionResult confirmationRequiredWithSkipCommandToConfirm:]


TVRSystemAppearanceToggleResolutionResult : INEnumResolutionResult /System/Library/Frameworks/AudioToolbox.framework/AudioToolbox
  // class methods
  +[TVRSystemAppearanceToggleResolutionResult successWithResolvedSystemAppearanceToggle:]
  +[TVRSystemAppearanceToggleResolutionResult confirmationRequiredWithSystemAppearanceToggleToConfirm:]


TVRDevice : INObject /System/Library/Frameworks/AudioToolbox.framework/AudioToolbox

TVRDeviceResolutionResult : INObjectResolutionResult /System/Library/Frameworks/AudioToolbox.framework/AudioToolbox
  // class methods
  +[TVRDeviceResolutionResult successWithResolvedDevice:]
  +[TVRDeviceResolutionResult disambiguationWithDevicesToDisambiguate:]
  +[TVRDeviceResolutionResult confirmationRequiredWithDeviceToConfirm:]


TVRApplication : INObject /System/Library/Frameworks/AudioToolbox.framework/AudioToolbox

TVRApplicationResolutionResult : INObjectResolutionResult /System/Library/Frameworks/AudioToolbox.framework/AudioToolbox
  // class methods
  +[TVRApplicationResolutionResult successWithResolvedApplication:]
  +[TVRApplicationResolutionResult disambiguationWithApplicationsToDisambiguate:]
  +[TVRApplicationResolutionResult confirmationRequiredWithApplicationToConfirm:]


TVRUserAccount : INObject /System/Library/Frameworks/AudioToolbox.framework/AudioToolbox

TVRUserAccountResolutionResult : INObjectResolutionResult /System/Library/Frameworks/AudioToolbox.framework/AudioToolbox
  // class methods
  +[TVRUserAccountResolutionResult successWithResolvedUserAccount:]
  +[TVRUserAccountResolutionResult disambiguationWithUserAccountsToDisambiguate:]
  +[TVRUserAccountResolutionResult confirmationRequiredWithUserAccountToConfirm:]


01 00 0400 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSAction 
01 00 0400 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSMutableSettings 
01 00 0f00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAFilter 
01 00 0f00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAGradientLayer 
01 00 0f00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAPackage 
01 00 0500 /System/Library/Frameworks/CoreBluetooth.framework/CoreBluetooth: CBCentralManager 
01 00 0700 /System/Library/PrivateFrameworks/ControlCenterUIKit.framework/ControlCenterUIKit: CCUICAPackageView 
01 00 0a00 /System/Library/PrivateFrameworks/CoreUtils.framework/CoreUtils: CUSystemMonitor 
01 00 0b00 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: FBSSystemService 
01 00 0100 /System/Library/Frameworks/Intents.framework/Intents: INDoubleResolutionResult 
01 00 0100 /System/Library/Frameworks/Intents.framework/Intents: INEnumResolutionResult 
01 00 0100 /System/Library/Frameworks/Intents.framework/Intents: INIntent 
01 00 0100 /System/Library/Frameworks/Intents.framework/Intents: INIntentResponse 
01 00 0100 /System/Library/Frameworks/Intents.framework/Intents: INInteraction 
01 00 0100 /System/Library/Frameworks/Intents.framework/Intents: INObject 
01 00 0100 /System/Library/Frameworks/Intents.framework/Intents: INObjectResolutionResult 
01 00 0600 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationWorkspace 
01 00 0e00 /System/Library/PrivateFrameworks/MaterialKit.framework/MaterialKit: MTMaterialView 
01 00 0e00 /System/Library/PrivateFrameworks/MaterialKit.framework/MaterialKit: MTVisualStylingProvider 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSLayoutConstraint 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableAttributedString 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1700 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: NSTextAttachment 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLQueryItem 
01 00 1900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 1000 /System/Library/PrivateFrameworks/RemoteTextInput.framework/RemoteTextInput: RTIInputSystemSourceSession 
01 00 1200 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSRemoteAlertActivationContext 
01 00 1200 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSRemoteAlertConfigurationContext 
01 00 1200 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSRemoteAlertDefinition 
01 00 1200 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSRemoteAlertHandle 
01 00 1100 /System/Library/PrivateFrameworks/Sharing.framework/Sharing: SFClient 
01 00 1300 /System/Library/PrivateFrameworks/TVRemoteCore.framework/TVRemoteCore: TVRCAnalytics 
01 00 1300 /System/Library/PrivateFrameworks/TVRemoteCore.framework/TVRemoteCore: TVRCButton 
01 00 1300 /System/Library/PrivateFrameworks/TVRemoteCore.framework/TVRemoteCore: TVRCButtonEvent 
01 00 1300 /System/Library/PrivateFrameworks/TVRemoteCore.framework/TVRemoteCore: TVRCDevice 
01 00 1300 /System/Library/PrivateFrameworks/TVRemoteCore.framework/TVRemoteCore: TVRCDeviceQuery 
01 00 1300 /System/Library/PrivateFrameworks/TVRemoteCore.framework/TVRemoteCore: TVRCGameControllerEvent 
01 00 1300 /System/Library/PrivateFrameworks/TVRemoteCore.framework/TVRemoteCore: TVRCKeyboardAttributes 
01 00 1300 /System/Library/PrivateFrameworks/TVRemoteCore.framework/TVRemoteCore: TVRCPINEntryAttributes 
01 00 1300 /System/Library/PrivateFrameworks/TVRemoteCore.framework/TVRemoteCore: TVRCSessionData 
01 00 1300 /System/Library/PrivateFrameworks/TVRemoteCore.framework/TVRemoteCore: TVRCTouchEvent 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivityIndicatorView 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertAction 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertController 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UIBarButtonItem 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UIBezierPath 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UIBlurEffect 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UIButton 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UIContentSizeCategoryPreference 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UIControl 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UICubicTimingParameters 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UIDevice 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UIFontDescriptor 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageSymbolConfiguration 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UIImpactFeedbackGenerator 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UILabel 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UILongPressGestureRecognizer 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationBar 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationItem 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UIPointerShape 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UIPointerStyle 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UIPresentationController 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UIPreviewParameters 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UISelectionFeedbackGenerator 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UISpringTimingParameters 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UITableView 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewCell 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewHeaderFooterView 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UITapGestureRecognizer 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UITargetedPreview 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UITextField 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewPropertyAnimator 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UIVisualEffectView 
01 00 1500 /System/Library/PrivateFrameworks/WiFiKit.framework/WiFiKit: WFClient 
01 00 1500 /System/Library/PrivateFrameworks/WiFiKit.framework/WiFiKit: WFWiFiStateMonitor 
01 00 0600 /System/Library/Frameworks/CoreServices.framework/CoreServices: _LSOpenConfiguration 
01 00 1300 /System/Library/PrivateFrameworks/TVRemoteCore.framework/TVRemoteCore: _TVRCFeatures 
01 00 1300 /System/Library/PrivateFrameworks/TVRemoteCore.framework/TVRemoteCore: _TVRCPreferredDeviceManager 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: _UIButtonFeedbackGenerator 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: _UICursorHoverEffect 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: _UICursorInteraction 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: _UICursorLiftEffect 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: _UICursorRegion 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: _UICursorStyle 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: _UIFeedbackButtonBehavior 
