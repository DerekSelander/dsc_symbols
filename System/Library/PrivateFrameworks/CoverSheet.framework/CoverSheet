|| __DATA.__data _CSPowerChangeObserverIdentifier
|| __DATA.__objc_data _OBJC_CLASS_$_CSBatteryChargingInfo
|| __DATA.__objc_data _OBJC_CLASS_$_CSBatteryChargingView
|| __DATA.__objc_data _OBJC_CLASS_$_CSBatteryFillView
|| __DATA.__objc_data _OBJC_CLASS_$_CSClippingLine
|| __DATA.__objc_data _OBJC_CLASS_$_CSDNDBedtimeGreetingViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CSEnhancedModalButton
|| __DATA.__objc_data _OBJC_CLASS_$_CSHomeButtonShowPasscodeRecognizer
|| __DATA.__objc_data _OBJC_CLASS_$_CSInterstitialTransitionSource
|| __DATA.__objc_data _OBJC_CLASS_$_CSLogoutButtonViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CSPaddingHeaderViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CSPasscodeBackgroundView
|| __DATA.__objc_data _OBJC_CLASS_$_CSRegionsDebugView
|| __DATA.__objc_data _OBJC_CLASS_$_CSRemoteContentHostViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CSRemoteContentModalView
|| __DATA.__objc_data _OBJC_CLASS_$_CSRemoteContentModalViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CSRemoteContentSession
|| __DATA.__objc_data _OBJC_CLASS_$_CSSimpleLockScreenActionProvider
|| __DATA.__objc_data _OBJC_CLASS_$_CSSlidingPresentationViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CSTestingSupportNotificationGenerator
|| __DATA.__objc_data _OBJC_CLASS_$_CSTestingSupportWidgetProvider
|| __DATA.__objc_data _OBJC_CLASS_$_CSUserPictureView
|| __DATA.__objc_data _OBJC_CLASS_$_CSVibrancyUtility
|| __DATA.__objc_data _OBJC_CLASS_$_CSVibrantWallpaperButton
|| __DATA.__objc_data _OBJC_CLASS_$_SBHorizontalScrollFailureTriangleView
|| __DATA.__objc_data _OBJC_CLASS_$__CSDoubleBatteryChargingView
|| __DATA.__objc_data _OBJC_CLASS_$__CSPaddingView
|| __DATA.__objc_data _OBJC_CLASS_$__CSScreenEdgePanGestureRecognizer
|| __DATA.__objc_data _OBJC_CLASS_$__CSSingleBatteryChargingView
|| __DATA.__objc_data _OBJC_METACLASS_$_CSBatteryChargingInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_CSBatteryChargingView
|| __DATA.__objc_data _OBJC_METACLASS_$_CSBatteryFillView
|| __DATA.__objc_data _OBJC_METACLASS_$_CSClippingLine
|| __DATA.__objc_data _OBJC_METACLASS_$_CSDNDBedtimeGreetingViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CSDashBoardRemoteContentSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_CSEnhancedModalButton
|| __DATA.__objc_data _OBJC_METACLASS_$_CSHomeButtonShowPasscodeRecognizer
|| __DATA.__objc_data _OBJC_METACLASS_$_CSInterstitialTransitionSource
|| __DATA.__objc_data _OBJC_METACLASS_$_CSLogoutButtonViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CSPaddingHeaderViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CSPasscodeBackgroundView
|| __DATA.__objc_data _OBJC_METACLASS_$_CSRegionsDebugView
|| __DATA.__objc_data _OBJC_METACLASS_$_CSRemoteContentHostViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CSRemoteContentModalView
|| __DATA.__objc_data _OBJC_METACLASS_$_CSRemoteContentModalViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CSRemoteContentSession
|| __DATA.__objc_data _OBJC_METACLASS_$_CSSimpleLockScreenActionProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_CSSlidingPresentationViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CSTestingSupportNotificationGenerator
|| __DATA.__objc_data _OBJC_METACLASS_$_CSTestingSupportWidgetProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_CSUserPictureView
|| __DATA.__objc_data _OBJC_METACLASS_$_CSVibrancyUtility
|| __DATA.__objc_data _OBJC_METACLASS_$_CSVibrantWallpaperButton
|| __DATA.__objc_data _OBJC_METACLASS_$_SBHorizontalScrollFailureTriangleView
|| __DATA.__objc_data _OBJC_METACLASS_$__CSDoubleBatteryChargingView
|| __DATA.__objc_data _OBJC_METACLASS_$__CSPaddingView
|| __DATA.__objc_data _OBJC_METACLASS_$__CSScreenEdgePanGestureRecognizer
|| __DATA.__objc_data _OBJC_METACLASS_$__CSSingleBatteryChargingView
|| __DATA.__objc_ivar _OBJC_IVAR_$_CSAdjunctListItem._actions
|| __DATA_CONST.__const _CSCoverSheetScreenOffReason
|| __DATA_CONST.__const _CSDNDBedtimeControllerIdentifier
|| __DATA_CONST.__const _CSPageViewControllerRoleCamera
|| __DATA_CONST.__const _CSPageViewControllerRoleToday
|| __DATA_CONST.__const _CSRemoteContentModalViewControllerErrorDomain
|| __DATA_CONST.__const _CSRemoteContentSessionErrorDomain
|| __DATA_CONST.__const _SBGreenTeaTestModeLockText
|| __DATA_CONST.__const _SBInternalInstallAlternativeLegalContact
|| __DATA_CONST.__const _SBInternalInstallLegalContact
|| __DATA_CONST.__const _SBInternalInstallLegalDeclaration
|| __DATA_CONST.__const _SBInternalInstallLegalInstructions
|| __DATA_CONST.__const _SBLockScreenLogoutButtonGlyphImageName
|| __DATA_CONST.__const _SBSecurityResearchDeviceLegalDeclaration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSAction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSAdjunctItemView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSAdjunctListItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSAdjunctListModel
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSAdjunctListView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSAppearance
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSBehavior
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSBounceSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSChargingViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSCombinedListViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSComponent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSContentActionInterpreter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSContentCutoutBoundsCalculator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSCoverSheetDismissGestureSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSCoverSheetFlyInSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSCoverSheetTransitionSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSCoverSheetTransitionsSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSCoverSheetView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSCoverSheetViewBase
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSCoverSheetViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSCoverSheetViewControllerBase
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSDNDBedtimeController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSDashBoardNotificationVersusPagingScrollSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSDashBoardQuickActionsButtonSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSDashBoardRemoteContentSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSDashBoardScrollModifierSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSDeviceBlockViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSDismissableModalViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSEmbeddedContentActionManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSFaceOcclusionMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSFixedFooterView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSFixedFooterViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSFullscreenNotificationView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSFullscreenNotificationViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSHomeAffordanceView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSHomeAffordanceViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSHomeButtonSuppressAfterUnlockRecognizer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSHorizontalScrollFailureRecognizer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSHorizontalScrollFailureRecognizerSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSLayoutStrategy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSLockScreenBiometricFailureSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSLockScreenDomain
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSLockScreenMesaSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSLockScreenPasscodeSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSLockScreenPearlSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSLockScreenSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSLockScreenTestPluginSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSMainPageContentViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSMainPageView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSMediaControlsView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSMediaControlsViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSModalButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSModalPresentationViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSModalView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSModalViewControllerBase
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSModalVisualEffect
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSNotificationAdjunctListViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSNotificationClearingTrigger
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSNotificationDispatcher
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSNowPlayingController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSPageControl
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSPageViewBase
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSPageViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSPasscodeViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSPoseidonViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSPowerChangeObserver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSPreciseDateProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSPresentation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSPresentationViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSProudLockViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSQuickActionsButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSQuickActionsView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSQuickActionsViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSRegion
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSRemoteContentSessionManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSResetRestoreViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSScrollGestureController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSScrollModifier
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSScrollView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSShakableView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSStatusTextView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSStatusTextViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSTeachableMomentsContainerView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSTeachableMomentsContainerViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSTemperatureWarningViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSTimerView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSTimerViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSTodayContentView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSTodayContentViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSTodayPageView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSTodayPageViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSTodayViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSUserPictureViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CSUserPresenceMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSAction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSAdjunctItemView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSAdjunctListItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSAdjunctListModel
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSAdjunctListView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSAppearance
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSBehavior
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSBounceSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSChargingViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSCombinedListViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSComponent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSContentActionInterpreter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSContentCutoutBoundsCalculator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSCoverSheetDismissGestureSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSCoverSheetFlyInSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSCoverSheetTransitionSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSCoverSheetTransitionsSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSCoverSheetView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSCoverSheetViewBase
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSCoverSheetViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSCoverSheetViewControllerBase
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSDNDBedtimeController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSDashBoardNotificationVersusPagingScrollSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSDashBoardQuickActionsButtonSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSDashBoardScrollModifierSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSDeviceBlockViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSDismissableModalViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSEmbeddedContentActionManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSFaceOcclusionMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSFixedFooterView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSFixedFooterViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSFullscreenNotificationView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSFullscreenNotificationViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSHomeAffordanceView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSHomeAffordanceViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSHomeButtonSuppressAfterUnlockRecognizer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSHorizontalScrollFailureRecognizer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSHorizontalScrollFailureRecognizerSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSLayoutStrategy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSLockScreenBiometricFailureSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSLockScreenDomain
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSLockScreenMesaSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSLockScreenPasscodeSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSLockScreenPearlSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSLockScreenSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSLockScreenTestPluginSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSMainPageContentViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSMainPageView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSMediaControlsView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSMediaControlsViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSModalButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSModalPresentationViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSModalView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSModalViewControllerBase
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSModalVisualEffect
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSNotificationAdjunctListViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSNotificationClearingTrigger
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSNotificationDispatcher
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSNowPlayingController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSPageControl
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSPageViewBase
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSPageViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSPasscodeViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSPoseidonViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSPowerChangeObserver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSPreciseDateProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSPresentation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSPresentationViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSProudLockViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSQuickActionsButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSQuickActionsView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSQuickActionsViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSRegion
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSRemoteContentSessionManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSResetRestoreViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSScrollGestureController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSScrollModifier
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSScrollView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSShakableView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSStatusTextView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSStatusTextViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSTeachableMomentsContainerView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSTeachableMomentsContainerViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSTemperatureWarningViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSTimerView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSTimerViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSTodayContentView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSTodayContentViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSTodayPageView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSTodayPageViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSTodayViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSUserPictureViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CSUserPresenceMonitor
|| __TEXT.__const _CSBoundsHeight
|| __TEXT.__const _CSBoundsWidth
|| __TEXT.__const _CSDateBaselineToListY
|| __TEXT.__const _CSDefaultPresentationTransitionDuration
|| __TEXT.__const _CSDefaultRegionUpdateTransitionDuration
|| __TEXT.__const _CSMainPageListInsetXLandscapePhone
|| __TEXT.__const _CSQuickActionButtonDiameter
|| __TEXT.__const _CSQuickActionButtonInsetX
|| __TEXT.__const _CSQuickActionButtonInsetY
|| __TEXT.__const _CSTimeLabelLandscapeBaselineY
|| __TEXT.__const _CSTimeLabelPortraitBaselineY
|| __TEXT.__const _CoverSheetVersionNumber
|| __TEXT.__const _CoverSheetVersionString
|| __TEXT.__text _CSAdjustTargetContentOffset
|| __TEXT.__text _CSChargePercentageLabelForBattery
|| __TEXT.__text _CSCoverSheetEventIsVolumeOrHeadsetButtonType
|| __TEXT.__text _CSCoverSheetTransitionContextMake
|| __TEXT.__text _CSEventIsButtonType
|| __TEXT.__text _CSEventIsStateless
|| __TEXT.__text _CSEventShouldBeLogged
|| __TEXT.__text _CSGetLegibilitySettingsForBackgroundStyle
|| __TEXT.__text _CSUpdateDateViewComponent
|| __TEXT.__text _CSUpdateStatusBarBackgroundComponent
|| __TEXT.__text _CubicAnimationControlPoints5ByScalingWithFactor
|| __TEXT.__text _NSStringFromCSTeachableMomentCallToActionLabelState
|| __TEXT.__text _NSStringFromCoverSheetActionType
|| __TEXT.__text _NSStringFromCoverSheetCapability
|| __TEXT.__text _NSStringFromCoverSheetComponentType
|| __TEXT.__text _NSStringFromCoverSheetEventType
|| __TEXT.__text _NSStringFromCoverSheetNotificationBehavior
|| __TEXT.__text _NSStringFromCoverSheetProximityDetectionMode
|| __TEXT.__text _NSStringFromCoverSheetRegionRole
|| __TEXT.__text _NSStringFromCoverSheetScrollingStrategy
|| __TEXT.__text _NSStringFromCoverSheetTransitionContext
|| __TEXT.__text _NSStringFromCoverSheetTransitionType
__ AVFoundation: _OBJC_CLASS_$_AVFlashlight
__ BackBoardServices: _BKSHIDServicesCancelTouchesOnMainDisplay
__ BackBoardServices: _OBJC_CLASS_$_BKSHIDUISensorMode
__ BackBoardServices: _OBJC_CLASS_$_BKSHIDUISensorService
__ BaseBoardUI: _BSUIConstrainValueToIntervalWithRubberBand
__ BaseBoardUI: _BSUIInvertRubberBandValueForInterval
__ BaseBoardUI: _OBJC_CLASS_$_BSUIAnimationFactory
__ BaseBoardUI: _OBJC_CLASS_$_BSUIFontProvider
__ BatteryCenter: _OBJC_CLASS_$_BCBatteryDeviceController
__ Contacts: _OBJC_CLASS_$_CNContact
__ ContactsUI: _OBJC_CLASS_$_CNMonogrammer
__ ControlCenterServices: _OBJC_CLASS_$_CCSUsageMetrics
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFRelease
__ CoreFoundation: _NSCalendarIdentifierGregorian
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreGraphics: _CGAffineTransformConcat
__ CoreGraphics: _CGAffineTransformIdentity
__ CoreGraphics: _CGAffineTransformMakeScale
__ CoreGraphics: _CGAffineTransformMakeTranslation
__ CoreGraphics: _CGAffineTransformTranslate
__ CoreGraphics: _CGContextFillRect
__ CoreGraphics: _CGContextSetFillColorWithColor
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectContainsPoint
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetMidY
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectIntersection
__ CoreGraphics: _CGRectIntersectsRect
__ CoreGraphics: _CGRectIsEmpty
__ CoreGraphics: _CGRectIsNull
__ CoreGraphics: _CGRectNull
__ CoreGraphics: _CGRectOffset
__ CoreGraphics: _CGRectUnion
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ CoreLocation: _OBJC_CLASS_$_CLInUseAssertion
__ DoNotDisturb: _OBJC_CLASS_$_DNDEventBehaviorResolutionService
__ DoNotDisturb: _OBJC_CLASS_$_DNDMutableClientEventDetails
__ DoNotDisturb: _OBJC_CLASS_$_DNDState
__ DoNotDisturb: _OBJC_CLASS_$_DNDStateService
__ Foundation: _NSClassFromString
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSStringFromBOOL
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSLayoutConstraint
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: __NSDictionaryOfVariableBindings
__ FrontBoard: _BSDispatchMain
__ FrontBoard: _BSDispatchQueueAssertMain
__ FrontBoard: _BSEqualBools
__ FrontBoard: _BSEqualObjects
__ FrontBoard: _BSEqualStrings
__ FrontBoard: _BSFloatCeilForScale
__ FrontBoard: _BSFloatEqualToFloat
__ FrontBoard: _BSFloatFloorForScale
__ FrontBoard: _BSFloatGreaterThanFloat
__ FrontBoard: _BSFloatGreaterThanOrEqualToFloat
__ FrontBoard: _BSFloatIsOne
__ FrontBoard: _BSFloatIsZero
__ FrontBoard: _BSFloatLessThanFloat
__ FrontBoard: _BSFloatLessThanOrEqualToFloat
__ FrontBoard: _BSFloatRoundForScale
__ FrontBoard: _BSInterfaceOrientationDescription
__ FrontBoard: _BSIntervalClip
__ FrontBoard: _BSIntervalFractionForValue
__ FrontBoard: _BSIntervalOrder
__ FrontBoard: _BSIntervalSubIntervalValueForValue
__ FrontBoard: _BSIntervalUnit
__ FrontBoard: _BSIntervalValueForFraction
__ FrontBoard: _BSLogAddStateCaptureBlockWithTitle
__ FrontBoard: _BSPointEqualToPoint
__ FrontBoard: _BSPointRoundForScale
__ FrontBoard: _BSRectEqualToRect
__ FrontBoard: _BSRectRoundForScale
__ FrontBoard: _BSRectWithSize
__ FrontBoard: _BSSerializeCGRectToXPCDictionaryWithKey
__ FrontBoard: _BSSettingFlagDescription
__ FrontBoard: _BSSettingFlagForBool
__ FrontBoard: _BSSettingFlagIsExplicitNo
__ FrontBoard: _BSSettingFlagIsYes
__ FrontBoard: _BSStringFromBOOL
__ FrontBoard: _FBSDisplayLayoutElementControlCenterIdentifier
__ FrontBoard: _FBSDisplayLayoutElementLockScreenIdentifier
__ FrontBoard: _FBSOpenApplicationErrorDomain
__ FrontBoard: _NSStringFromInterval
__ FrontBoard: _OBJC_CLASS_$_BSAnimationSettings
__ FrontBoard: _OBJC_CLASS_$_BSAtomicSignal
__ FrontBoard: _OBJC_CLASS_$_BSBlockSentinel
__ FrontBoard: _OBJC_CLASS_$_BSDateFormatterCache
__ FrontBoard: _OBJC_CLASS_$_BSDescriptionBuilder
__ FrontBoard: _OBJC_CLASS_$_BSTimer
__ FrontBoard: _OBJC_CLASS_$_FBDisplayLayoutElement
__ FrontBoard: _OBJC_CLASS_$_FBDisplayLayoutTransition
__ FrontBoard: _OBJC_CLASS_$_FBMainDisplayLayoutPublisher
__ FrontBoard: __BSIsInternalInstall
__ ManagedConfiguration: _MCCloudConfigurationDidChangeNotification
__ ManagedConfiguration: _MCProfileListChangedNotification
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ ManagedConfiguration: _kMCCCOrganizationNameKey
__ MaterialKit: _OBJC_CLASS_$_MTLumaDodgePillView
__ MaterialKit: _OBJC_CLASS_$_MTMaterialView
__ MaterialKit: _OBJC_CLASS_$_MTStaticColorPillView
__ MediaControls: _OBJC_CLASS_$_MRPlatterViewController
__ MobileTimer: _MTDNDSleepModeIdentifier
__ MobileTimer: _MTTimerManagerNextTimerChanged
__ MobileTimer: _OBJC_CLASS_$_MTTimer
__ MobileTimer: _OBJC_CLASS_$_MTTimerManager
__ PlatterKit: _OBJC_CLASS_$_PLPlatterView
__ PrototypeTools: _OBJC_CLASS_$_PTButtonRow
__ PrototypeTools: _OBJC_CLASS_$_PTChoiceRow
__ PrototypeTools: _OBJC_CLASS_$_PTDomain
__ PrototypeTools: _OBJC_CLASS_$_PTDrillDownRow
__ PrototypeTools: _OBJC_CLASS_$_PTEditFloatRow
__ PrototypeTools: _OBJC_CLASS_$_PTEditStringRow
__ PrototypeTools: _OBJC_CLASS_$_PTModule
__ PrototypeTools: _OBJC_CLASS_$_PTRestoreDefaultSettingsRowAction
__ PrototypeTools: _OBJC_CLASS_$_PTRowAction
__ PrototypeTools: _OBJC_CLASS_$_PTSModule
__ PrototypeTools: _OBJC_CLASS_$_PTSSwitchRow
__ PrototypeTools: _OBJC_CLASS_$_PTSettings
__ PrototypeTools: _OBJC_CLASS_$_PTSliderRow
__ PrototypeTools: _OBJC_CLASS_$_PTSwitchRow
__ PrototypeTools: _OBJC_METACLASS_$_PTDomain
__ PrototypeTools: _OBJC_METACLASS_$_PTSettings
__ QuartzCore: _CACurrentMediaTime
__ QuartzCore: _OBJC_CLASS_$_CABasicAnimation
__ QuartzCore: _OBJC_CLASS_$_CAFilter
__ QuartzCore: _OBJC_CLASS_$_CAKeyframeAnimation
__ QuartzCore: _OBJC_CLASS_$_CAMediaTimingFunction
__ QuartzCore: _OBJC_CLASS_$_CASpringAnimation
__ QuartzCore: _kCAFillModeBackwards
__ QuartzCore: _kCAFilterCurves
__ QuartzCore: _kCAFilterLightenSourceOver
__ QuartzCore: _kCAFilterPlusD
__ QuartzCore: _kCAFilterPlusL
__ QuartzCore: _kCAFilterVibrantDark
__ QuartzCore: _kCAMediaTimingFunctionDefault
__ QuartzCore: _kCAMediaTimingFunctionEaseIn
__ QuartzCore: _kCAMediaTimingFunctionEaseInEaseOut
__ QuartzCore: _kCAMediaTimingFunctionEaseOut
__ Security: _SecTaskCreateFromSelf
__ Security: _SecTaskGetCodeSignStatus
__ Sleep: _HKSPSleepModeIdentifier
__ Sleep: _OBJC_CLASS_$_HKSPSleepStore
__ SplashBoard: _XBInterfaceOrientationMaskForInterfaceOrientation
__ SpotlightUI: _OBJC_CLASS_$_SPUISearchBarController
__ SpringBoardFoundation: _NSStringFromIdleTimerDuration
__ SpringBoardFoundation: _NSStringFromIdleWarnMode
__ SpringBoardFoundation: _NSStringFromSBFIdleTimerMode
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFAnalyticsClient
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFAnimationSettings
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFDashBoardViewMetrics
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFDeviceBlockTimer
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFFluidBehaviorSettings
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFHomeGrabberDomain
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFLegibilityDomain
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFLockScreenAlternateDateLabel
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFLockScreenDateSubtitleDateView
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFLockScreenDateSubtitleView
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFLockScreenDateView
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFLockScreenDateViewController
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFLockScreenWakeAnimator
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFMotionGestureController
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFPagedScrollView
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFRemoteBasebandLoggingManager
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFStatusBarLegibilityView
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFSteppedAnimationTimingFunctionCalculator
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFTouchPassThroughView
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFWakeAnimationDomain
__ SpringBoardFoundation: _OBJC_CLASS_$_SBLockScreenDefaults
__ SpringBoardFoundation: _OBJC_CLASS_$_SBNotificationDefaults
__ SpringBoardFoundation: _OBJC_CLASS_$_SBWakeLogger
__ SpringBoardFoundation: _OBJC_CLASS_$__SBFVibrantSettings
__ SpringBoardFoundation: _OBJC_METACLASS_$_SBFLockScreenDateSubtitleView
__ SpringBoardFoundation: _OBJC_METACLASS_$_SBFPagedScrollView
__ SpringBoardFoundation: _OBJC_METACLASS_$_SBFTouchPassThroughView
__ SpringBoardFoundation: _SBFDeviceBlockStateDidChangeNotification
__ SpringBoardFoundation: _SBFEffectiveDeviceClass
__ SpringBoardFoundation: _SBFEffectiveHomeButtonType
__ SpringBoardFoundation: _SBFIrisWallpaperPlaybackStateDescription
__ SpringBoardFoundation: _SBFMainScreenScale
__ SpringBoardFoundation: _SBFRemoteBasebandLogCollectionEnabledText
__ SpringBoardFoundation: _SBFStringForAppearState
__ SpringBoardFoundation: _SBFTransformFromOrientationToOrientation
__ SpringBoardFoundation: _SBFWindowForViewControllerTransition
__ SpringBoardFoundation: __SBFLoggingMethodProem
__ SpringBoardFoundation: __SBF_Private_IsD33OrSimilarDevice
__ SpringBoardFoundation: __SBF_Private_IsN84
__ SpringBoardServices: _NSStringFromSBSRemoteContentDismissType
__ SpringBoardServices: _OBJC_CLASS_$_SBSDisplayLayoutElement
__ SpringBoardServices: _OBJC_CLASS_$_SBSLockScreenContentAction
__ SpringBoardServices: _OBJC_CLASS_$_SBSRemoteContentDefinition
__ SpringBoardServices: _OBJC_CLASS_$_SBSRemoteContentPreferences
__ SpringBoardServices: _SBDashBoardNowPlayingAssertionIdentifier
__ SpringBoardServices: _SBDashBoardSleepAssertionIdentifier
__ SpringBoardServices: _SBDisplayMetrics
__ SpringBoardServices: _SBLogCommon
__ SpringBoardServices: _SBLogCoverSheet
__ SpringBoardServices: _SBLogDashBoard
__ SpringBoardServices: _SBLogDashBoardScrollGestures
__ SpringBoardServices: _SBLogDashBoardTelemetrySignposts
__ SpringBoardServices: _SBLogDoNotDisturbBedtime
__ SpringBoardServices: _SBLogLockScreenMesaHomeButtonPasscodeRecognizer
__ SpringBoardServices: _SBLogLockScreenMesaHomeButtonSuppressAfterUnlockRecognizer
__ SpringBoardServices: _SBSBatteryUIDismissDuration
__ SpringBoardServices: _SBSCreateOpenApplicationServiceEndpoint
__ SpringBoardServices: _SBSDisplayLayoutElementPasscodeIdentifier
__ SpringBoardServices: _SBSDisplayLayoutElementTodayViewIdentifier
__ SpringBoardServices: _SBSLockScreenContentAssertionErrorDomain
__ SpringBoardServices: _SBSLockScreenContentAssertionSlotEmbedded
__ SpringBoardServices: _SBSLockScreenContentAssertionSlotPlatter
__ SpringBoardServices: _SBSRemoteContentPreferencesBackgroundStyleKey
__ SpringBoardServices: _SBSRemoteContentPreferencesSuppressesNotificationsKey
__ SpringBoardServices: ___sb__mainScreenReferenceBounds
__ SpringBoardServices: ___sb__runningInSpringBoard
__ SpringBoardUI: _NSStringFromSBUIBackgroundStyle
__ SpringBoardUI: _OBJC_CLASS_$_SBLockScreenTimerDialView
__ SpringBoardUI: _OBJC_CLASS_$_SBUIBackgroundView
__ SpringBoardUI: _OBJC_CLASS_$_SBUIFlashlightController
__ SpringBoardUI: _OBJC_CLASS_$_SBUISearchUtilities
__ SpringBoardUI: _SBBacklightChangeSourceKey
__ SpringBoardUI: _SBBacklightWillTurnOnWhileUILockedNotification
__ SpringBoardUI: _SBFeaturesShouldBeLockedForRemoteLockNotification
__ SpringBoardUI: _SBLiftToWakeGestureDetectedNotification
__ SpringBoardUI: _SBLockButtonPressedNotification
__ SpringBoardUI: _SBMenuButtonPressedNotification
__ SpringBoardUI: _SBUIConvertUnlockSourceToBacklightChangeSource
__ SpringBoardUI: _SBUIUnlockSourceIsUserAction
__ SpringBoardUI: _SBVolumeChangedNotification
__ SpringBoardUI: _kSBNotificationKeyState
__ SpringBoardUIServices: _NSStringFromSBUIBiometricEvent
__ SpringBoardUIServices: _OBJC_CLASS_$_SBUIBiometricResource
__ SpringBoardUIServices: _OBJC_CLASS_$_SBUICallToActionLabel
__ SpringBoardUIServices: _OBJC_CLASS_$_SBUILegibilityLabel
__ SpringBoardUIServices: _OBJC_CLASS_$_SBUIPasscodeLockViewFactory
__ SpringBoardUIServices: _OBJC_CLASS_$_SBUIPasscodeLockViewWithKeypad
__ SpringBoardUIServices: _OBJC_CLASS_$_SBUIPoseidonContainerViewController
__ SpringBoardUIServices: _OBJC_CLASS_$_SBUIPreciseClockTimer
__ SpringBoardUIServices: _OBJC_CLASS_$_SBUIProudLockContainerViewController
__ SpringBoardUIServices: _OBJC_CLASS_$_SBUISpotlightBarNavigationController
__ SpringBoardUIServices: _OBJC_CLASS_$_SBUIVibrantButton
__ SpringBoardUIServices: _OBJC_METACLASS_$_SBUIVibrantButton
__ SpringBoardUIServices: _SBUICurrentPasscodeStyleForUser
__ SpringBoardUIServices: _SBUIGraphicsQuality
__ SpringBoardUIServices: _SBUIProudLockContainerViewControllerConfigurationDefault
__ SpringBoardUIServices: __SBUIInterpolatedLegibilitySettings
__ UIKit: _NSFontAttributeName
__ UIKit: _NSParagraphStyleAttributeName
__ UIKit: _NSStringFromCGPoint
__ UIKit: _NSStringFromCGRect
__ UIKit: _OBJC_CLASS_$_NSParagraphStyle
__ UIKit: _OBJC_CLASS_$_UIBezierPath
__ UIKit: _OBJC_CLASS_$_UIBlurEffect
__ UIKit: _OBJC_CLASS_$_UIButton
__ UIKit: _OBJC_CLASS_$_UICollectionView
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIColorEffect
__ UIKit: _OBJC_CLASS_$_UICoverSheetButton
__ UIKit: _OBJC_CLASS_$_UIDevice
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIHoverGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageSymbolConfiguration
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UIImpactFeedbackGenerator
__ UIKit: _OBJC_CLASS_$_UILabel
__ UIKit: _OBJC_CLASS_$_UILayoutGuide
__ UIKit: _OBJC_CLASS_$_UIPageControl
__ UIKit: _OBJC_CLASS_$_UIPointerHighlightEffect
__ UIKit: _OBJC_CLASS_$_UIPointerShape
__ UIKit: _OBJC_CLASS_$_UIPointerStyle
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UIScreenEdgePanGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIScrollView
__ UIKit: _OBJC_CLASS_$_UISlider
__ UIKit: _OBJC_CLASS_$_UIStackView
__ UIKit: _OBJC_CLASS_$_UIStatusBar
__ UIKit: _OBJC_CLASS_$_UISwitch
__ UIKit: _OBJC_CLASS_$_UITapGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UITargetedPreview
__ UIKit: _OBJC_CLASS_$_UITraitCollection
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_CLASS_$_UIViewFloatAnimatableProperty
__ UIKit: _OBJC_CLASS_$_UIVisualEffect
__ UIKit: _OBJC_CLASS_$_UIVisualEffectView
__ UIKit: _OBJC_CLASS_$__UIBackdropView
__ UIKit: _OBJC_CLASS_$__UIBackdropViewSettings
__ UIKit: _OBJC_CLASS_$__UIGestureStudyInteraction
__ UIKit: _OBJC_CLASS_$__UILegibilitySettings
__ UIKit: _OBJC_CLASS_$__UILegibilityView
__ UIKit: _OBJC_CLASS_$__UIRemoteViewController
__ UIKit: _OBJC_CLASS_$__UIStatusBarData
__ UIKit: _OBJC_CLASS_$__UIStatusBarDataStringEntry
__ UIKit: _OBJC_CLASS_$__UIVisualEffectConfig
__ UIKit: _OBJC_CLASS_$__UIVisualEffectVibrantLayerConfig
__ UIKit: _OBJC_METACLASS_$_UIButton
__ UIKit: _OBJC_METACLASS_$_UICoverSheetButton
__ UIKit: _OBJC_METACLASS_$_UIGestureRecognizer
__ UIKit: _OBJC_METACLASS_$_UIPageControl
__ UIKit: _OBJC_METACLASS_$_UIScreenEdgePanGestureRecognizer
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _OBJC_METACLASS_$_UIVisualEffect
__ UIKit: _OBJC_METACLASS_$__UIRemoteViewController
__ UIKit: _UIAccessibilityDarkerSystemColorsEnabled
__ UIKit: _UIAccessibilityIsReduceMotionEnabled
__ UIKit: _UIAccessibilityIsReduceTransparencyEnabled
__ UIKit: _UIAccessibilityIsSwitchControlRunning
__ UIKit: _UIAccessibilityIsVoiceOverRunning
__ UIKit: _UIAccessibilityReduceTransparencyStatusDidChangeNotification
__ UIKit: _UIApp
__ UIKit: _UIContentSizeCategoryAccessibilityExtraExtraExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityExtraExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityLarge
__ UIKit: _UIContentSizeCategoryAccessibilityMedium
__ UIKit: _UIContentSizeCategoryDidChangeNotification
__ UIKit: _UIContentSizeCategoryExtraExtraExtraLarge
__ UIKit: _UIContentSizeCategoryExtraExtraLarge
__ UIKit: _UIContentSizeCategoryExtraLarge
__ UIKit: _UIContentSizeCategoryExtraSmall
__ UIKit: _UIContentSizeCategoryIsAccessibilityCategory
__ UIKit: _UIContentSizeCategoryLarge
__ UIKit: _UIContentSizeCategoryMedium
__ UIKit: _UIContentSizeCategorySmall
__ UIKit: _UIContentSizeCategoryUnspecified
__ UIKit: _UIEdgeInsetsZero
__ UIKit: _UIFontTextStyleBody
__ UIKit: _UIFontTextStyleCallout
__ UIKit: _UIFontTextStyleFootnote
__ UIKit: _UIFontTextStyleTitle0
__ UIKit: _UIFontTextStyleTitle2
__ UIKit: _UIFontWeightRegular
__ UIKit: _UIGraphicsBeginImageContextWithOptions
__ UIKit: _UIGraphicsEndImageContext
__ UIKit: _UIGraphicsGetCurrentContext
__ UIKit: _UIGraphicsGetImageFromCurrentImageContext
__ UIKit: _UILayoutFittingCompressedSize
__ UIKit: _UIRectCenteredAboutPoint
__ UIKit: _UIRectCenteredIntegralRectScale
__ UIKit: _UIRectCenteredXInRect
__ UIKit: _UIRectCenteredXInRectScale
__ UIKit: _UIRectFill
__ UIKit: _UIRectGetCenter
__ UIKit: __UIAccessibilityReduceWhitePoint
__ UIKit: __UIGestureStudyInteractionMetadatNotificationHistoryRevealed
__ UIKit: __UIGestureStudyInteractionMetadataAuthenticated
__ UIKit: __UIGestureStudyInteractionMetadataCoverSheetDismissed
__ UIKit: __UIGestureStudyInteractionMetadataDeviceOrientation
__ UIKit: __UIGestureStudyInteractionMetadataFaceDetected
__ UIKit: __UIGestureStudyInteractionMetadataHomeButtonDetected
__ UIKit: __UIGestureStudyInteractionMetadataLiftDetected
__ UIKit: __UIGestureStudyInteractionMetadataLockButtonDetected
__ UIKit: __UIGestureStudyInteractionMetadataPasscodeSet
__ UIKit: __UIGestureStudyInteractionMetadataProximitySensorAlwaysCovered
__ UIKit: __UIGestureStudyInteractionMetadataProximitySensorIsCovered
__ UIKit: __UIGestureStudyInteractionMetadataTimeSinceWake
__ UIKit: __UIGestureStudyInteractionMetadataWakeSource
__ UIKit: __UILegibilityStrengthAutomatic
__ UIKit: __UIStatusBarPartIdentifierFittingTrailing
__ UIKit: __UISystemGestureLocationInView
__ UIKit: __UIUpdatedVisualStyleAllowed
__ UserManagement: _OBJC_CLASS_$_UMUserManager
__ UserNotificationsKit: _NCNotificationActionEnvironmentDefault
__ UserNotificationsKit: _NCUILogClient
__ UserNotificationsKit: _NCUILogLists
__ UserNotificationsKit: _OBJC_CLASS_$_NCMutableNotificationContent
__ UserNotificationsKit: _OBJC_CLASS_$_NCMutableNotificationRequest
__ UserNotificationsUIKit: _NCBulletinDestinationCar
__ UserNotificationsUIKit: _NCBulletinDestinationCoverSheet
__ UserNotificationsUIKit: _NCBulletinDestinationLockScreen
__ UserNotificationsUIKit: _NCBulletinDestinationNotificationCenter
__ UserNotificationsUIKit: _NCNotificationDestinationIdentifier
__ UserNotificationsUIKit: _NCStringFromLongLookPresentationTrigger
__ UserNotificationsUIKit: _OBJC_CLASS_$_NCNotificationStructuredListViewController
__ Weather: _OBJC_CLASS_$_WAGreetingView
__ Widgets: _OBJC_CLASS_$_WGMajorListViewController
__ Widgets: _OBJC_CLASS_$_WGWidgetDiscoveryController
__ Widgets: _OBJC_CLASS_$_WGWidgetGroupViewController
__ Widgets: _WGWidgetListEditViewControllerDidDisappearNotification
__ Widgets: _WGWidgetListEditViewControllerWillAppearNotification
__ Widgets: _WGWidgetListEditViewControllerWillDisappearNotification
__ Widgets: _WGWidgetListSettingsFullCarousel
__ Widgets: _WGWidgetListSettingsTopCarousel
__ libAccessibility.dylib: __AXSAssistiveTouchEnabled
__ libAccessibility.dylib: __AXSAttentionAwarenessFeaturesEnabled
__ libCTGreenTeaLogger.dylib: _ct_green_tea_logging_enabled
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _MGGetProductType
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: _atan2
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _exp
__ libSystem.B.dylib: _kdebug_trace
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_variant_has_internal_content
__ libSystem.B.dylib: _pow
__ libSystem.B.dylib: _sinf
__ libSystem.B.dylib: _tan
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
CSLayoutStrategy : NSObject /usr/lib/libSystem.B.dylib
 @property  <CSPersistentContentLayoutProviding><CSDateTimeLayoutAggregating> *persistentLayout

  // instance methods
  -[CSLayoutStrategy suggestedFrameForListForPage:bounds:]
  -[CSLayoutStrategy suggestedContentInsetsForListForPage:]
  -[CSLayoutStrategy .cxx_destruct]
  -[CSLayoutStrategy _listInsetXForPage:]
  -[CSLayoutStrategy setPersistentLayout:]
  -[CSLayoutStrategy _listWidthStrategyForPage:]
  -[CSLayoutStrategy _listLayoutForPage:]
  -[CSLayoutStrategy _customListWidthForPage:startingBounds:]
  -[CSLayoutStrategy suggestedFrameForDateTimeViewInScreenCoordinates:forceCenteredX:]
  -[CSLayoutStrategy persistentLayout]


CSLockScreenDomain : PTDomain /System/Library/PrivateFrameworks/UserNotificationsUIKit.framework/UserNotificationsUIKit
  // class methods
  +[CSLockScreenDomain domainName]
  +[CSLockScreenDomain rootSettings]
  +[CSLockScreenDomain rootSettingsClass]
  +[CSLockScreenDomain domainGroupName]


CSMainPageView : CSPageViewBase <CAAnimationDelegate>
 @property  CSVibrantWallpaperButton *logoutButtonView
 @property  SBWallpaperEffectView *wallpaperEffectView
 @property  BOOL fakeWallpaperVisible
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CSMainPageView _layoutWallpaperEffectView]
  -[CSMainPageView setFakeWallpaperVisible:]
  -[CSMainPageView .cxx_destruct]
  -[CSMainPageView updateForLegibilitySettings:]
  -[CSMainPageView setWallpaperEffectView:]
  -[CSMainPageView presentationRegions]
  -[CSMainPageView setLogoutButtonView:]
  -[CSMainPageView wallpaperEffectView]
  -[CSMainPageView updateForPresentation:]
  -[CSMainPageView _layoutLogoutButtonView]
  -[CSMainPageView _updateLogoutButtonForLegibilitySettings]
  -[CSMainPageView fakeWallpaperVisible]
  -[CSMainPageView _logoutButtonInsets]
  -[CSMainPageView layoutSubviews]
  -[CSMainPageView logoutButtonView]


CSHomeAffordanceView : UIView /System/Library/Frameworks/QuartzCore.framework/QuartzCore <SBSystemPointerInteractionDelegate, SBUIOptionalLegibility>
 @property  MTStaticColorPillView *staticHomeAffordance
 @property  MTLumaDodgePillView *dynamicHomeAffordance
 @property  unsigned long style
 @property  UIColor *overrideColor
 @property  <CSCoverSheetContextProviding> *coverSheetContext
 @property  BOOL systemPointerInteractionEnabled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  _UILegibilitySettings *legibilitySettings

  // instance methods
  -[CSHomeAffordanceView shouldBeginPointerInteractionAtLocation:forView:]
  -[CSHomeAffordanceView init]
  -[CSHomeAffordanceView legibilitySettings]
  -[CSHomeAffordanceView .cxx_destruct]
  -[CSHomeAffordanceView styleForRegion:forView:]
  -[CSHomeAffordanceView setLegibilitySettings:]
  -[CSHomeAffordanceView _updateForLegibility]
  -[CSHomeAffordanceView pointInside:withEvent:]
  -[CSHomeAffordanceView pointerInteractionHitTestInsetsForView:]
  -[CSHomeAffordanceView setStyle:]
  -[CSHomeAffordanceView overrideColor]
  -[CSHomeAffordanceView setOverrideColor:]
  -[CSHomeAffordanceView layoutSubviews]
  -[CSHomeAffordanceView style]
  -[CSHomeAffordanceView suggestedEdgeSpacing]
  -[CSHomeAffordanceView suggestedSizeForContentWidth:]
  -[CSHomeAffordanceView setSystemPointerInteractionEnabled:]
  -[CSHomeAffordanceView extendedFrameForPointerAnimationSuppression]
  -[CSHomeAffordanceView setCoverSheetContext:]
  -[CSHomeAffordanceView _createStaticHomeAffordance]
  -[CSHomeAffordanceView _createDynamicHomeAffordance]
  -[CSHomeAffordanceView setStaticHomeAffordance:]
  -[CSHomeAffordanceView setDynamicHomeAffordance:]
  -[CSHomeAffordanceView _transitionToStyle:animated:]
  -[CSHomeAffordanceView staticHomeAffordance]
  -[CSHomeAffordanceView _viewForStyle:]
  -[CSHomeAffordanceView coverSheetContext]
  -[CSHomeAffordanceView isSystemPointerInteractionEnabled]
  -[CSHomeAffordanceView dynamicHomeAffordance]


CSClippingLine : UIView /System/Library/Frameworks/QuartzCore.framework/QuartzCore
 @property  double lineAlpha

  // instance methods
  -[CSClippingLine initWithFrame:]
  -[CSClippingLine .cxx_destruct]
  -[CSClippingLine setLineAlpha:]
  -[CSClippingLine lineAlpha]


CSLockScreenPearlSettings : PTSettings /System/Library/PrivateFrameworks/UserNotificationsUIKit.framework/UserNotificationsUIKit
 @property  BOOL pearlDebugUIEnabled
 @property  CSLockScreenBiometricFailureSettings *failureSettings
 @property  BOOL showScanningStateOnLockScreen
 @property  BOOL showScanningStateDuringFaceDetect
 @property  double minimumDurationBeforeShowingScanningState
 @property  double minimumDurationBetweenLeavingCoachingAndCoaching
 @property  double minimumDurationShowingCoaching
 @property  double durationOnCameraCoveredGlyphBeforeCoaching
 @property  double durationToSuppressCameraCoveredWhenWakingWithSmartCover
 @property  BOOL coachingDelaysUnlock
 @property  BOOL spinBeforeCoaching
 @property  BOOL overrideCoachingConditionEnabled
 @property  unsigned long overrideCoachingBiometricEvent

  // class methods
  +[CSLockScreenPearlSettings settingsControllerModule]

  // instance methods
  -[CSLockScreenPearlSettings setDefaultValues]
  -[CSLockScreenPearlSettings .cxx_destruct]
  -[CSLockScreenPearlSettings durationOnCameraCoveredGlyphBeforeCoaching]
  -[CSLockScreenPearlSettings setDurationOnCameraCoveredGlyphBeforeCoaching:]
  -[CSLockScreenPearlSettings failureSettings]
  -[CSLockScreenPearlSettings proudLockControllerViewControllerConfiguration]
  -[CSLockScreenPearlSettings pearlDebugUIEnabled]
  -[CSLockScreenPearlSettings setOverrideCoachingConditionEnabled:]
  -[CSLockScreenPearlSettings overrideCoachingConditionEnabled]
  -[CSLockScreenPearlSettings setOverrideCoachingBiometricEvent:]
  -[CSLockScreenPearlSettings setPearlDebugUIEnabled:]
  -[CSLockScreenPearlSettings setShowScanningStateOnLockScreen:]
  -[CSLockScreenPearlSettings setShowScanningStateDuringFaceDetect:]
  -[CSLockScreenPearlSettings setMinimumDurationBeforeShowingScanningState:]
  -[CSLockScreenPearlSettings setMinimumDurationBetweenLeavingCoachingAndCoaching:]
  -[CSLockScreenPearlSettings setMinimumDurationShowingCoaching:]
  -[CSLockScreenPearlSettings setCoachingDelaysUnlock:]
  -[CSLockScreenPearlSettings setSpinBeforeCoaching:]
  -[CSLockScreenPearlSettings setDurationToSuppressCameraCoveredWhenWakingWithSmartCover:]
  -[CSLockScreenPearlSettings showScanningStateOnLockScreen]
  -[CSLockScreenPearlSettings showScanningStateDuringFaceDetect]
  -[CSLockScreenPearlSettings minimumDurationBeforeShowingScanningState]
  -[CSLockScreenPearlSettings minimumDurationBetweenLeavingCoachingAndCoaching]
  -[CSLockScreenPearlSettings minimumDurationShowingCoaching]
  -[CSLockScreenPearlSettings coachingDelaysUnlock]
  -[CSLockScreenPearlSettings spinBeforeCoaching]
  -[CSLockScreenPearlSettings durationToSuppressCameraCoveredWhenWakingWithSmartCover]
  -[CSLockScreenPearlSettings setFailureSettings:]
  -[CSLockScreenPearlSettings overrideCoachingBiometricEvent]


CSQuickActionsViewController : CSCoverSheetViewControllerBase <CSQuickActionsDelegate, SBUIFlashlightObserver>
 @property  BOOL animatingToCamera
 @property  CSCoverSheetViewController *coverSheetViewController
 @property  <SBFLockOutStatusProvider> *lockOutController
 @property  <CSCameraPrewarming> *cameraPrewarmer
 @property  BOOL suppressingVisibleChanges
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CSQuickActionsViewController deviceSupportsButtons]
  +[CSQuickActionsViewController viewClass]

  // instance methods
  -[CSQuickActionsViewController presentationPriority]
  -[CSQuickActionsViewController _addStateCaptureHandlers]
  -[CSQuickActionsViewController setCameraPrewarmer:]
  -[CSQuickActionsViewController setCoverSheetViewController:]
  -[CSQuickActionsViewController quickActionsView]
  -[CSQuickActionsViewController allowsFlashlight]
  -[CSQuickActionsViewController quickActionsViewIfLoaded]
  -[CSQuickActionsViewController flashlightAvailabilityDidChange:]
  -[CSQuickActionsViewController presentationStyle]
  -[CSQuickActionsViewController presentationType]
  -[CSQuickActionsViewController dealloc]
  -[CSQuickActionsViewController coverSheetViewController]
  -[CSQuickActionsViewController suppressingVisibleChanges]
  -[CSQuickActionsViewController .cxx_destruct]
  -[CSQuickActionsViewController _updateFlashlightButtonAvailabilityRespectingSuppression:]
  -[CSQuickActionsViewController _supportsCamera]
  -[CSQuickActionsViewController _shouldPrewarmOnTouch]
  -[CSQuickActionsViewController touchBeganForButton:]
  -[CSQuickActionsViewController hasCamera]
  -[CSQuickActionsViewController lockOutController]
  -[CSQuickActionsViewController hasFlashlight]
  -[CSQuickActionsViewController _tearDownFlashlight]
  -[CSQuickActionsViewController flashlightLevelDidChange:]
  -[CSQuickActionsViewController touchEndedForButton:]
  -[CSQuickActionsViewController isPortrait]
  -[CSQuickActionsViewController handleEvent:]
  -[CSQuickActionsViewController setLockOutController:]
  -[CSQuickActionsViewController _deviceBlockStateDidChangeNotification:]
  -[CSQuickActionsViewController _setupFlashlight]
  -[CSQuickActionsViewController _shouldPrelaunchOnTouch]
  -[CSQuickActionsViewController _featureLockStateDidChangeNotification:]
  -[CSQuickActionsViewController allowsFlashlightInteraction]
  -[CSQuickActionsViewController fireActionForButton:]
  -[CSQuickActionsViewController viewWillAppear:]
  -[CSQuickActionsViewController setAnimatingToCamera:]
  -[CSQuickActionsViewController setSuppressingVisibleChanges:]
  -[CSQuickActionsViewController _isFlashlightOn]
  -[CSQuickActionsViewController _updateFlashlightButtonAvailability]
  -[CSQuickActionsViewController _toggleFlashlight]
  -[CSQuickActionsViewController _resetIdleTimer]
  -[CSQuickActionsViewController animatingToCamera]
  -[CSQuickActionsViewController viewDidDisappear:]
  -[CSQuickActionsViewController allowsCameraPress]
  -[CSQuickActionsViewController _tearDownFlashlightIfOff]
  -[CSQuickActionsViewController _updateFlashlightButtonState]
  -[CSQuickActionsViewController cameraPrewarmer]
  -[CSQuickActionsViewController loadView]
  -[CSQuickActionsViewController _launchCamera]


CSModalViewControllerBase : CSCoverSheetViewControllerBase <CSModalViewDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CSModalViewControllerBase viewClass]

  // instance methods
  -[CSModalViewControllerBase presentationPriority]
  -[CSModalViewControllerBase viewDidLoad]
  -[CSModalViewControllerBase presentationStyle]
  -[CSModalViewControllerBase aggregateBehavior:]
  -[CSModalViewControllerBase aggregateAppearance:]
  -[CSModalViewControllerBase presentationType]
  -[CSModalViewControllerBase view]
  -[CSModalViewControllerBase isPortrait]
  -[CSModalViewControllerBase viewIfLoaded]
  -[CSModalViewControllerBase handlePrimaryActionForView:]
  -[CSModalViewControllerBase handleSecondaryActionForView:]


CSHorizontalScrollFailureRecognizerSettings : PTSettings /System/Library/PrivateFrameworks/UserNotificationsUIKit.framework/UserNotificationsUIKit
 @property  BOOL enabled
 @property  BOOL viewDebugArea
 @property  unsigned long maxAllowableVerticalOffset
 @property  double topAngle
 @property  double bottomAngle

  // class methods
  +[CSHorizontalScrollFailureRecognizerSettings settingsControllerModule]

  // instance methods
  -[CSHorizontalScrollFailureRecognizerSettings setDefaultValues]
  -[CSHorizontalScrollFailureRecognizerSettings enabled]
  -[CSHorizontalScrollFailureRecognizerSettings maxAllowableVerticalOffset]
  -[CSHorizontalScrollFailureRecognizerSettings topAngle]
  -[CSHorizontalScrollFailureRecognizerSettings setEnabled:]
  -[CSHorizontalScrollFailureRecognizerSettings viewDebugArea]
  -[CSHorizontalScrollFailureRecognizerSettings setViewDebugArea:]
  -[CSHorizontalScrollFailureRecognizerSettings bottomAngle]
  -[CSHorizontalScrollFailureRecognizerSettings setBottomAngle:]
  -[CSHorizontalScrollFailureRecognizerSettings setTopAngle:]
  -[CSHorizontalScrollFailureRecognizerSettings setMaxAllowableVerticalOffset:]


CSLogoutButtonViewController : CSCoverSheetViewControllerBase
 @property  CSVibrantWallpaperButton *button
 @property  <CSUserSessionControlling> *userSessionController
 @property  <CSWallpaperColorProvider> *wallpaperColorProvider
 @property  <CSWallpaperViewProviding> *wallpaperViewProvider

  // instance methods
  -[CSLogoutButtonViewController userSessionController]
  -[CSLogoutButtonViewController wallpaperViewProvider]
  -[CSLogoutButtonViewController _buttonPressed:]
  -[CSLogoutButtonViewController wallpaperColorProvider]
  -[CSLogoutButtonViewController .cxx_destruct]
  -[CSLogoutButtonViewController setWallpaperColorProvider:]
  -[CSLogoutButtonViewController setUserSessionController:]
  -[CSLogoutButtonViewController setWallpaperViewProvider:]
  -[CSLogoutButtonViewController button]
  -[CSLogoutButtonViewController loadView]


_CSScreenEdgePanGestureRecognizer : UIScreenEdgePanGestureRecognizer /System/Library/Frameworks/QuartzCore.framework/QuartzCore
  // instance methods
  -[_CSScreenEdgePanGestureRecognizer _touchInterfaceOrientation]


CSDismissableModalViewController : CSPresentationViewController <CSModalHomeGestureParticipating, UIGestureRecognizerDelegate>
 @property  <CSDismissableModalViewControllerDelegate> *delegate
 @property  <CSModalHomeAffordanceControlling> *homeAffordanceController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CSDismissableModalViewController homeGestureParticipantOwningHomeGestureDidChange:]
  -[CSDismissableModalViewController _addOrRemoveGestureForCurrentSettings]
  -[CSDismissableModalViewController .cxx_destruct]
  -[CSDismissableModalViewController setHomeAffordanceController:]
  -[CSDismissableModalViewController handleEvent:]
  -[CSDismissableModalViewController viewWillAppear:]
  -[CSDismissableModalViewController setDelegate:]
  -[CSDismissableModalViewController viewDidDisappear:]
  -[CSDismissableModalViewController homeAffordanceController]
  -[CSDismissableModalViewController delegate]
  -[CSDismissableModalViewController wouldHandleButtonEvent:]
  -[CSDismissableModalViewController _handleBottomEdgeGestureBegan:]
  -[CSDismissableModalViewController _handleBottomEdgeGestureChanged:]
  -[CSDismissableModalViewController _handleBottomEdgeGestureEnded:]
  -[CSDismissableModalViewController addGrabberView:]
  -[CSDismissableModalViewController presentationCancelsTouches]
  -[CSDismissableModalViewController _handleBottomEdgeGestureRecognizer:]


CSHomeButtonSuppressAfterUnlockRecognizer : NSObject /usr/lib/libSystem.B.dylib <SBHomeButtonSuppressAfterUnlockRecognizer>
 @property  <SBHomeButtonSuppressAfterUnlockRecognizerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CSHomeButtonSuppressAfterUnlockRecognizer _invalidateTimer]
  -[CSHomeButtonSuppressAfterUnlockRecognizer init]
  -[CSHomeButtonSuppressAfterUnlockRecognizer _timerFired]
  -[CSHomeButtonSuppressAfterUnlockRecognizer dealloc]
  -[CSHomeButtonSuppressAfterUnlockRecognizer .cxx_destruct]
  -[CSHomeButtonSuppressAfterUnlockRecognizer handleBiometricEvent:]
  -[CSHomeButtonSuppressAfterUnlockRecognizer setDelegate:]
  -[CSHomeButtonSuppressAfterUnlockRecognizer _startTimer]
  -[CSHomeButtonSuppressAfterUnlockRecognizer _requestEndOfSuppression]
  -[CSHomeButtonSuppressAfterUnlockRecognizer delegate]


CSInterstitialTransitionSource : NSObject /usr/lib/libSystem.B.dylib <CSCoverSheetViewTransitionSource, CSExternalAppearanceProviding, CSExternalBehaviorProviding>
 @property  long long transitionType
 @property  CSComponent *homeAffordance
 @property  <CSInterstitialTransitionDelegate> *transitioningDelegate
 @property  BOOL transitioning
 @property  {?=d{?={?=dB}{?=dB}}q} transitionContext
 @property  NSString *coverSheetIdentifier
 @property  long long participantState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *appearanceIdentifier
 @property  long long backgroundStyle
 @property  NSSet *components
 @property  _UILegibilitySettings *legibilitySettings
 @property  UIColor *backgroundColor
 @property  long long scrollingStrategy
 @property  long long notificationBehavior
 @property  unsigned long restrictedCapabilities
 @property  long long proximityDetectionMode

  // instance methods
  -[CSInterstitialTransitionSource coverSheetIdentifier]
  -[CSInterstitialTransitionSource conformsToCSAppearanceProviding]
  -[CSInterstitialTransitionSource transitionType]
  -[CSInterstitialTransitionSource setTransitioningDelegate:]
  -[CSInterstitialTransitionSource isTransitioning]
  -[CSInterstitialTransitionSource scrollingStrategy]
  -[CSInterstitialTransitionSource cancelTransition]
  -[CSInterstitialTransitionSource notificationBehavior]
  -[CSInterstitialTransitionSource conformsToCSBehaviorProviding]
  -[CSInterstitialTransitionSource restrictedCapabilities]
  -[CSInterstitialTransitionSource legibilitySettings]
  -[CSInterstitialTransitionSource appearanceIdentifier]
  -[CSInterstitialTransitionSource proximityDetectionMode]
  -[CSInterstitialTransitionSource backgroundStyle]
  -[CSInterstitialTransitionSource components]
  -[CSInterstitialTransitionSource conformsToCSExternalBehaviorProviding]
  -[CSInterstitialTransitionSource backgroundColor]
  -[CSInterstitialTransitionSource .cxx_destruct]
  -[CSInterstitialTransitionSource homeAffordance]
  -[CSInterstitialTransitionSource transitionContext]
  -[CSInterstitialTransitionSource participantState]
  -[CSInterstitialTransitionSource transitioningDelegate]
  -[CSInterstitialTransitionSource prepareForPresentation]
  -[CSInterstitialTransitionSource setTransitionType:]
  -[CSInterstitialTransitionSource updatePresentationWithProgress:]
  -[CSInterstitialTransitionSource cleanupPresentation]
  -[CSInterstitialTransitionSource setHomeAffordance:]


CSPowerChangeObserver : NSObject /usr/lib/libSystem.B.dylib
 @property  @? block
 @property  BOOL connectedToPower
 @property  BOOL isConnectedToQiPower

  // instance methods
  -[CSPowerChangeObserver update]
  -[CSPowerChangeObserver setIsConnectedToQiPower:]
  -[CSPowerChangeObserver dealloc]
  -[CSPowerChangeObserver initWithStatusProvider:notificationName:updateBlock:]
  -[CSPowerChangeObserver .cxx_destruct]
  -[CSPowerChangeObserver block]
  -[CSPowerChangeObserver isConnectedToQiPower]
  -[CSPowerChangeObserver setBlock:]
  -[CSPowerChangeObserver setConnectedToPower:]
  -[CSPowerChangeObserver isConnectedToPower]
  -[CSPowerChangeObserver setIsConnectedToPower:]


CSMainPageContentViewController : CSPageViewController <PTSettingsKeyObserver, CSCombinedListViewControllerDelegate, CSUserPresenceMonitorObserver, CSNotificationDestination, CSPageViewControllerProtocol>
 @property  BOOL useFakeBlur
 @property  BOOL showingMediaControls
 @property  CSCombinedListViewController *combinedListViewController
 @property  CSUserPresenceMonitor *userPresenceMonitor
 @property  CSLayoutStrategy *layoutStrategy
 @property  <CSTouchEnvironmentStatusProviding> *touchEnvironmentStatusProvider
 @property  <CSUserSessionControlling> *userSessionController
 @property  <CSWallpaperColorProvider> *wallpaperColorProvider
 @property  <CSWallpaperViewProviding> *wallpaperViewProvider
 @property  <CSMainPageContentViewControllerNotificationObserver> *notificationObserver
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <CSNotificationDispatcher> *dispatcher
 @property  NSString *coverSheetIdentifier
 @property  long long participantState
 @property  <CSCoverSheetViewControllerProtocol> *coverSheetViewController
 @property  BOOL transitioning
 @property  BOOL authenticated
 @property  NSString *pageRole
 @property  CSAppearance *activeAppearance
 @property  CSBehavior *activeBehavior
 @property  CSPresentation *externalPresentation
 @property  <CSCoverSheetViewPresenting> *presenter
 @property  long long presentationStyle
 @property  long long presentationType
 @property  long long presentationTransition
 @property  long long presentationPriority
 @property  long long presentationAltitude
 @property  NSString *appearanceIdentifier
 @property  long long backgroundStyle
 @property  NSSet *components
 @property  _UILegibilitySettings *legibilitySettings
 @property  UIColor *backgroundColor
 @property  long long scrollingStrategy
 @property  long long notificationBehavior
 @property  unsigned long restrictedCapabilities
 @property  long long proximityDetectionMode
 @property  <UICoordinateSpace> *presentationCoordinateSpace
 @property  NSArray *presentationRegions
 @property  long long idleTimerDuration
 @property  long long idleTimerMode
 @property  long long idleWarnMode
 @property  double customIdleExpirationTimeout
 @property  double customIdleWarningTimeout

  // class methods
  +[CSMainPageContentViewController isAvailableForConfiguration]
  +[CSMainPageContentViewController _phoneListWidth]
  +[CSMainPageContentViewController viewClass]
  +[CSMainPageContentViewController requiredCapabilities]

  // instance methods
  -[CSMainPageContentViewController userSessionController]
  -[CSMainPageContentViewController dismissNotificationInLongLookAnimated:]
  -[CSMainPageContentViewController notificationsLoadedForSectionIdentifier:]
  -[CSMainPageContentViewController viewDidLoad]
  -[CSMainPageContentViewController dateTimeInsetX]
  -[CSMainPageContentViewController customListWidth]
  -[CSMainPageContentViewController postNotificationRequest:]
  -[CSMainPageContentViewController isPresentingNotificationInLongLook]
  -[CSMainPageContentViewController setDispatcher:]
  -[CSMainPageContentViewController dispatcher]
  -[CSMainPageContentViewController dateTimeLayout]
  -[CSMainPageContentViewController minimumDateToListSpacing]
  -[CSMainPageContentViewController isShowingMediaControls]
  -[CSMainPageContentViewController useFakeBlur]
  -[CSMainPageContentViewController isNotificationContentExtensionVisible:]
  -[CSMainPageContentViewController listLayout]
  -[CSMainPageContentViewController listInsetX]
  -[CSMainPageContentViewController _isPortrait]
  -[CSMainPageContentViewController _pagingStyleRequiresUserPresenceDetection]
  -[CSMainPageContentViewController withdrawNotificationRequest:]
  -[CSMainPageContentViewController setUseFakeBlur:]
  -[CSMainPageContentViewController userPresenceMonitor]
  -[CSMainPageContentViewController updateNotificationSectionSettings:previousSectionSettings:]
  -[CSMainPageContentViewController _listBelowDateTime]
  -[CSMainPageContentViewController settings:changedValueForKey:]
  -[CSMainPageContentViewController init]
  -[CSMainPageContentViewController notificationSectionSettingsForCombinedListViewController:]
  -[CSMainPageContentViewController _addOrRemoveViewsAsAppropriate]
  -[CSMainPageContentViewController wallpaperViewProvider]
  -[CSMainPageContentViewController setLayoutStrategy:]
  -[CSMainPageContentViewController aggregateBehavior:]
  -[CSMainPageContentViewController updateNotificationRequest:]
  -[CSMainPageContentViewController aggregateAppearance:]
  -[CSMainPageContentViewController initWithAuthenticationProvider:]
  -[CSMainPageContentViewController dealloc]
  -[CSMainPageContentViewController wallpaperColorProvider]
  -[CSMainPageContentViewController combinedListViewController]
  -[CSMainPageContentViewController _mainPageView]
  -[CSMainPageContentViewController .cxx_destruct]
  -[CSMainPageContentViewController _addOrRemoveNotificationsListIfNecessaryAnimated:]
  -[CSMainPageContentViewController userPresenceDetectedSinceWakeDidChange:]
  -[CSMainPageContentViewController setUserPresenceMonitor:]
  -[CSMainPageContentViewController layoutStrategy]
  -[CSMainPageContentViewController setWallpaperColorProvider:]
  -[CSMainPageContentViewController _addOrRemoveUserPictureViewController]
  -[CSMainPageContentViewController viewWillLayoutSubviews]
  -[CSMainPageContentViewController setUserSessionController:]
  -[CSMainPageContentViewController setTouchEnvironmentStatusProvider:]
  -[CSMainPageContentViewController updateForPresentation:]
  -[CSMainPageContentViewController handleEvent:]
  -[CSMainPageContentViewController touchEnvironmentStatusProvider]
  -[CSMainPageContentViewController setWallpaperViewProvider:]
  -[CSMainPageContentViewController _updateSmoothestPermittedPagingStrategy]
  -[CSMainPageContentViewController setNotificationObserver:]
  -[CSMainPageContentViewController listWidthStrategy]
  -[CSMainPageContentViewController combinedListViewController:hasContent:]
  -[CSMainPageContentViewController viewWillAppear:]
  -[CSMainPageContentViewController notificationObserver]
  -[CSMainPageContentViewController _addOrRemoveLogoutButtonViewController]


CSProudLockViewController : CSCoverSheetViewControllerBase <PTSettingsKeyObserver, SBUIProudLockContainerViewControllerLockStatusProvider, SBUIProudLockContainerViewControllerDelegate>
 @property  SBUIProudLockContainerViewController *proudLockContainerViewController
 @property  <SBUIBiometricResource> *biometricResource
 @property  <SBFAuthenticationStatusProvider> *authenticationStatusProvider
 @property  BOOL suspendLockUpdates
 @property  UIView *proudLockView
 @property  UIView *cameraCoveredView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL hasPasscodeSet
 @property  BOOL isBiometricLockedOut

  // instance methods
  -[CSProudLockViewController viewDidLoad]
  -[CSProudLockViewController settings:changedValueForKey:]
  -[CSProudLockViewController biometricResource]
  -[CSProudLockViewController proudLockContainerViewController:guidanceTextVisibilityDidChangeAnimated:]
  -[CSProudLockViewController setBiometricResource:]
  -[CSProudLockViewController aggregateAppearance:]
  -[CSProudLockViewController cameraCoveredView]
  -[CSProudLockViewController .cxx_destruct]
  -[CSProudLockViewController updateLockForBiometricMatchFailure]
  -[CSProudLockViewController isBiometricLockedOut]
  -[CSProudLockViewController setAuthenticationStatusProvider:]
  -[CSProudLockViewController initWithNibName:bundle:]
  -[CSProudLockViewController viewDidAppear:]
  -[CSProudLockViewController hasPasscodeSet]
  -[CSProudLockViewController handleEvent:]
  -[CSProudLockViewController viewWillAppear:]
  -[CSProudLockViewController viewDidDisappear:]
  -[CSProudLockViewController viewDidLayoutSubviews]
  -[CSProudLockViewController authenticationStatusProvider]
  -[CSProudLockViewController setProudLockContainerViewController:]
  -[CSProudLockViewController _updateProudLockViewControllerConfiguration]
  -[CSProudLockViewController _createFaceDetectAssertion]
  -[CSProudLockViewController _clearFaceDetectAssertion]
  -[CSProudLockViewController proudLockContainerViewController]
  -[CSProudLockViewController _updateForAuthenticated:]
  -[CSProudLockViewController setSuspendLockUpdates:]
  -[CSProudLockViewController proudLockView]
  -[CSProudLockViewController suspendLockUpdates]


CSFaceOcclusionMonitor : NSObject /usr/lib/libSystem.B.dylib <CSEventHandling>
 @property  unsigned long faceOcclusionsSinceScreenOn
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CSFaceOcclusionMonitor conformsToCSEventHandling]
  -[CSFaceOcclusionMonitor _handleBiometricEvent:]
  -[CSFaceOcclusionMonitor handleEvent:]
  -[CSFaceOcclusionMonitor wouldHandleButtonEvent:]
  -[CSFaceOcclusionMonitor faceOcclusionsSinceScreenOn]


CSCoverSheetTransitionsSettings : PTSettings /System/Library/PrivateFrameworks/UserNotificationsUIKit.framework/UserNotificationsUIKit
 @property  double tension
 @property  double friction
 @property  CSCoverSheetFlyInSettings *flyInSettings
 @property  CSCoverSheetTransitionSettings *sameWallpaperInitialTransitionSettings
 @property  CSCoverSheetTransitionSettings *differentWallpaperInitialTransitionSettings
 @property  CSCoverSheetTransitionSettings *sameWallpaperSubsequentTransitionSettings
 @property  CSCoverSheetTransitionSettings *differentWallpaperSubsequentTransitionSettings
 @property  CSCoverSheetTransitionSettings *overAppTransitionSettings

  // class methods
  +[CSCoverSheetTransitionsSettings settingsControllerModule]

  // instance methods
  -[CSCoverSheetTransitionsSettings setDefaultValues]
  -[CSCoverSheetTransitionsSettings friction]
  -[CSCoverSheetTransitionsSettings differentWallpaperSubsequentTransitionSettings]
  -[CSCoverSheetTransitionsSettings .cxx_destruct]
  -[CSCoverSheetTransitionsSettings setFlyInSettings:]
  -[CSCoverSheetTransitionsSettings differentWallpaperInitialTransitionSettings]
  -[CSCoverSheetTransitionsSettings setDifferentWallpaperInitialTransitionSettings:]
  -[CSCoverSheetTransitionsSettings flyInSettings]
  -[CSCoverSheetTransitionsSettings setDefaultValuesForParallaxOnly]
  -[CSCoverSheetTransitionsSettings tension]
  -[CSCoverSheetTransitionsSettings setOverAppTransitionSettings:]
  -[CSCoverSheetTransitionsSettings overAppTransitionSettings]
  -[CSCoverSheetTransitionsSettings sameWallpaperSubsequentTransitionSettings]
  -[CSCoverSheetTransitionsSettings setFriction:]
  -[CSCoverSheetTransitionsSettings setSameWallpaperSubsequentTransitionSettings:]
  -[CSCoverSheetTransitionsSettings setTension:]
  -[CSCoverSheetTransitionsSettings setDefaultValuesForBlurOnly]
  -[CSCoverSheetTransitionsSettings setDifferentWallpaperSubsequentTransitionSettings:]
  -[CSCoverSheetTransitionsSettings setDefaultValuesForParallaxAndBlur]
  -[CSCoverSheetTransitionsSettings setSameWallpaperInitialTransitionSettings:]
  -[CSCoverSheetTransitionsSettings sameWallpaperInitialTransitionSettings]


CSCoverSheetTransitionSettings : PTSettings /System/Library/PrivateFrameworks/UserNotificationsUIKit.framework/UserNotificationsUIKit <BSDescriptionProviding>
 @property  BOOL blursPanel
 @property  double blurRadius
 @property  double blurStart
 @property  double blurEnd
 @property  double blurEndReducedTransparency
 @property  BOOL fadesContent
 @property  double maxContentAlpha
 @property  double contentFadeStart
 @property  double contentFadeEnd
 @property  BOOL darkensContent
 @property  double darkeningColorWhite
 @property  double darkeningColorAlpha
 @property  double darkeningStart
 @property  double darkeningEnd
 @property  BOOL panelWallpaper
 @property  BOOL trackingWallpaper
 @property  double trackingWallpaperParallaxFactor
 @property  BOOL revealWallpaper
 @property  BOOL fadePanelWallpaper
 @property  double fadePanelWallpaperStart
 @property  double fadePanelWallpaperEnd
 @property  BOOL iconsFlyIn
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CSCoverSheetTransitionSettings settingsControllerModule]

  // instance methods
  -[CSCoverSheetTransitionSettings setDefaultValues]
  -[CSCoverSheetTransitionSettings setRevealWallpaper:]
  -[CSCoverSheetTransitionSettings setIconsFlyIn:]
  -[CSCoverSheetTransitionSettings setDarkeningEnd:]
  -[CSCoverSheetTransitionSettings trackingWallpaperParallaxFactor]
  -[CSCoverSheetTransitionSettings setTrackingWallpaper:]
  -[CSCoverSheetTransitionSettings setContentFadeEnd:]
  -[CSCoverSheetTransitionSettings darkensContent]
  -[CSCoverSheetTransitionSettings trackingWallpaper]
  -[CSCoverSheetTransitionSettings setDarkeningStart:]
  -[CSCoverSheetTransitionSettings blursPanel]
  -[CSCoverSheetTransitionSettings maxContentAlpha]
  -[CSCoverSheetTransitionSettings fadePanelWallpaper]
  -[CSCoverSheetTransitionSettings setFadePanelWallpaperEnd:]
  -[CSCoverSheetTransitionSettings darkeningColorAlpha]
  -[CSCoverSheetTransitionSettings fadePanelWallpaperStart]
  -[CSCoverSheetTransitionSettings succinctDescriptionBuilder]
  -[CSCoverSheetTransitionSettings setBlurEndReducedTransparency:]
  -[CSCoverSheetTransitionSettings revealWallpaper]
  -[CSCoverSheetTransitionSettings setFadePanelWallpaperStart:]
  -[CSCoverSheetTransitionSettings contentFadeEnd]
  -[CSCoverSheetTransitionSettings blurStart]
  -[CSCoverSheetTransitionSettings setDarkensContent:]
  -[CSCoverSheetTransitionSettings blurEnd]
  -[CSCoverSheetTransitionSettings setBlursPanel:]
  -[CSCoverSheetTransitionSettings darkeningEnd]
  -[CSCoverSheetTransitionSettings succinctDescription]
  -[CSCoverSheetTransitionSettings blurEndReducedTransparency]
  -[CSCoverSheetTransitionSettings darkeningColorWhite]
  -[CSCoverSheetTransitionSettings contentFadeStart]
  -[CSCoverSheetTransitionSettings fadesContent]
  -[CSCoverSheetTransitionSettings setMaxContentAlpha:]
  -[CSCoverSheetTransitionSettings setBlurRadius:]
  -[CSCoverSheetTransitionSettings iconsFlyIn]
  -[CSCoverSheetTransitionSettings setBlurStart:]
  -[CSCoverSheetTransitionSettings setBlurEnd:]
  -[CSCoverSheetTransitionSettings setPanelWallpaper:]
  -[CSCoverSheetTransitionSettings fadePanelWallpaperEnd]
  -[CSCoverSheetTransitionSettings setDarkeningColorAlpha:]
  -[CSCoverSheetTransitionSettings setContentFadeStart:]
  -[CSCoverSheetTransitionSettings darkeningStart]
  -[CSCoverSheetTransitionSettings setTrackingWallpaperParallaxFactor:]
  -[CSCoverSheetTransitionSettings setDarkeningColorWhite:]
  -[CSCoverSheetTransitionSettings setFadePanelWallpaper:]
  -[CSCoverSheetTransitionSettings descriptionWithMultilinePrefix:]
  -[CSCoverSheetTransitionSettings panelWallpaper]
  -[CSCoverSheetTransitionSettings descriptionBuilderWithMultilinePrefix:]
  -[CSCoverSheetTransitionSettings setFadesContent:]
  -[CSCoverSheetTransitionSettings blurRadius]


CSCoverSheetFlyInSettings : PTSettings /System/Library/PrivateFrameworks/UserNotificationsUIKit.framework/UserNotificationsUIKit
 @property  BOOL centerFollowsFinger
 @property  BOOL animateIconsOnPresentationToo
 @property  double iconsFlyInInteractiveResponseMin
 @property  double iconsFlyInInteractiveResponseMax
 @property  double iconsFlyInInteractiveDampingRatioMin
 @property  double iconsFlyInInteractiveDampingRatioMax
 @property  double iconsFlyInTension
 @property  double iconsFlyInFriction
 @property  double slomoRate
 @property  double baselineDistance
 @property  double effectMultiplier
 @property  double distanceExponent

  // class methods
  +[CSCoverSheetFlyInSettings settingsControllerModule]

  // instance methods
  -[CSCoverSheetFlyInSettings setDefaultValues]
  -[CSCoverSheetFlyInSettings setCenterFollowsFinger:]
  -[CSCoverSheetFlyInSettings centerFollowsFinger]
  -[CSCoverSheetFlyInSettings setAnimateIconsOnPresentationToo:]
  -[CSCoverSheetFlyInSettings baselineDistance]
  -[CSCoverSheetFlyInSettings animateIconsOnPresentationToo]
  -[CSCoverSheetFlyInSettings effectMultiplier]
  -[CSCoverSheetFlyInSettings distanceExponent]
  -[CSCoverSheetFlyInSettings iconsFlyInInteractiveResponseMin]
  -[CSCoverSheetFlyInSettings iconsFlyInInteractiveResponseMax]
  -[CSCoverSheetFlyInSettings iconsFlyInInteractiveDampingRatioMin]
  -[CSCoverSheetFlyInSettings iconsFlyInInteractiveDampingRatioMax]
  -[CSCoverSheetFlyInSettings iconsFlyInTension]
  -[CSCoverSheetFlyInSettings iconsFlyInFriction]
  -[CSCoverSheetFlyInSettings setIconsFlyInInteractiveResponseMin:]
  -[CSCoverSheetFlyInSettings setIconsFlyInInteractiveResponseMax:]
  -[CSCoverSheetFlyInSettings setIconsFlyInInteractiveDampingRatioMin:]
  -[CSCoverSheetFlyInSettings setIconsFlyInInteractiveDampingRatioMax:]
  -[CSCoverSheetFlyInSettings setIconsFlyInTension:]
  -[CSCoverSheetFlyInSettings setIconsFlyInFriction:]
  -[CSCoverSheetFlyInSettings setSlomoRate:]
  -[CSCoverSheetFlyInSettings setBaselineDistance:]
  -[CSCoverSheetFlyInSettings setEffectMultiplier:]
  -[CSCoverSheetFlyInSettings setDistanceExponent:]
  -[CSCoverSheetFlyInSettings slomoRate]


CSSlidingPresentationViewController : CSPresentationViewController
  // instance methods
  -[CSSlidingPresentationViewController aggregateBehavior:]
  -[CSSlidingPresentationViewController aggregateAppearance:]
  -[CSSlidingPresentationViewController handleEvent:]
  -[CSSlidingPresentationViewController wouldHandleButtonEvent:]


CSSimpleLockScreenActionProvider : NSObject /usr/lib/libSystem.B.dylib <SBLockScreenActionProvider>
 @property  SBFLockScreenActionContext *lockScreenActionContext
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CSSimpleLockScreenActionProvider lockScreenActionContext]
  -[CSSimpleLockScreenActionProvider .cxx_destruct]
  -[CSSimpleLockScreenActionProvider invalidateLockScreenActionContext]
  -[CSSimpleLockScreenActionProvider setLockScreenActionContext:]


CSTimerView : SBFLockScreenDateSubtitleView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices <PTSettingsKeyObserver>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CSTimerView settings:changedValueForKey:]
  -[CSTimerView init]
  -[CSTimerView setEndDate:]
  -[CSTimerView _updateLegibilityStrength]
  -[CSTimerView dealloc]
  -[CSTimerView .cxx_destruct]
  -[CSTimerView setLegibilitySettings:]
  -[CSTimerView interItemSpacing]
  -[CSTimerView setFont:]
  -[CSTimerView accessoryView]
  -[CSTimerView _timerFont]
  -[CSTimerView _newTimerDialForSettings:withFont:]
  -[CSTimerView updateTimerLabel]


CSModalPresentationViewController : CSPresentationViewController

CSTestingSupportWidgetProvider : NSObject /usr/lib/libSystem.B.dylib <WGWidgetDiscoveryControllerDelegate, CSWidgetGroupViewControllerProviding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CSTestingSupportWidgetProvider init]
  -[CSTestingSupportWidgetProvider newWidgetListViewControllerWithSettings:]
  -[CSTestingSupportWidgetProvider newWidgetGroupViewControllerWithSettings:]
  -[CSTestingSupportWidgetProvider .cxx_destruct]


CSMediaControlsView : CSCoverSheetViewBase

CSMediaControlsViewController : CSCoverSheetViewControllerBase <MRPlatterViewControllerDelegate, CSAdjunctItemHosting>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *requiredVisualStyleCategories

  // class methods
  +[CSMediaControlsViewController viewClass]

  // instance methods
  -[CSMediaControlsViewController presentationPriority]
  -[CSMediaControlsViewController viewDidLoad]
  -[CSMediaControlsViewController setVisualStylingProvider:forCategory:]
  -[CSMediaControlsViewController visualStylingProviderForCategory:]
  -[CSMediaControlsViewController init]
  -[CSMediaControlsViewController shouldAutomaticallyForwardAppearanceMethods]
  -[CSMediaControlsViewController _suggestedFrameForMediaControls]
  -[CSMediaControlsViewController presentationType]
  -[CSMediaControlsViewController .cxx_destruct]
  -[CSMediaControlsViewController preferredContentSize]
  -[CSMediaControlsViewController viewWillLayoutSubviews]
  -[CSMediaControlsViewController handleEvent:]
  -[CSMediaControlsViewController _updatePersistentUpdatesEnabled:]
  -[CSMediaControlsViewController platterViewController:didReceiveInteractionEvent:]
  -[CSMediaControlsViewController setContainerSize:]
  -[CSMediaControlsViewController viewDidDisappear:]
  -[CSMediaControlsViewController requiredVisualStyleCategories]
  -[CSMediaControlsViewController _layoutMediaControls]


CSFullscreenNotificationView : CSModalView
  // instance methods
  -[CSFullscreenNotificationView initWithFrame:]


CSCoverSheetViewController : UIViewController /System/Library/Frameworks/QuartzCore.framework/QuartzCore <CSPersistentContentLayoutProviding, CSDateTimeLayoutAggregating, BCBatteryDeviceObserving, CSCoverSheetViewDelegate, UIGestureRecognizerDelegate, CSLegibilityProviderDelegate, SBLockScreenActionProvider, SBFIrisWallpaperViewDelegate, CSCoverSheetViewTransitionSource, CSNotificationDestination, CSTimerViewControllerDelegate, _UISettingsKeyObserver, CSScrollGestureControllerDelegate, CSNotificationClearingTriggerDelegate, CSInterstitialTransitionDelegate, CSPasscodeViewControllerDelegate, SBFOverlayObserving, SBFOverlayDismissalDelegate, FBSDisplayLayoutPublisherObserving, CSRemoteContentSessionHostDelegate, CSEmbeddedContentActionManagerDelegate, CSMainPageContentViewControllerNotificationObserver, CSPresentationViewControllerDelegate, CAAnimationDelegate, CSCoverSheetViewControllerProtocol, BSDescriptionProviding, SBFDashBoardModalPresenterProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  CSCoverSheetView *coverSheetView
 @property  CSLayoutStrategy *layoutStrategy
 @property  NSArray *pageViewControllers
 @property  NSArray *allowedPageViewControllers
 @property  CSMainPageContentViewController *mainPageContentViewController
 @property  unsigned long lastSettledPageIndex
 @property  CSBehavior *activeBehavior
 @property  CSBehavior *localBehavior
 @property  CSBehavior *irisBehavior
 @property  double appearanceFraction
 @property  CSAppearance *activeAppearance
 @property  CSAppearance *previousAppearance
 @property  CSAppearance *localAppearance
 @property  CSPresentation *activePresentation
 @property  SBFLockScreenDateViewController *dateViewController
 @property  CSPowerChangeObserver *powerChangeObserver
 @property  CSTimerViewController *timerViewController
 @property  <CSLegibilityProviding> *legibilityProvider
 @property  UIStatusBar *fakeStatusBar
 @property  UIVisualEffectView *statusBarBackgroundView
 @property  BOOL irisPlayerIsInteracting
 @property  BOOL shouldTransitionIrisWallpaperToStillWhenPlaybackFinishes
 @property  CSModalPresentationViewController *modalPresentationController
 @property  <SBFLockOutStatusProvider> *lockOutController
 @property  <CSCoverSheetViewTransitionSource> *currentTransitionSource
 @property  CSInterstitialTransitionSource *interstitialTransitionSource
 @property  <SBFOverlayControlling><CSExternalBehaviorProviding><CSExternalEventHandling> *overlayController
 @property  <BSInvalidatable> *suspendWallpaperAnimationAssertion
 @property  double initialOverlayPresentationProgress
 @property  <SBFScreenWakeAnimationControlling> *screenWakeAnimationController
 @property  SBWallpaperAggdLogger *wallpaperAggdLogger
 @property  <CSCoverSheetViewControllerDelegate> *delegate
 @property  <SBFIrisWallpaperView> *irisWallpaperView
 @property  UIGestureRecognizer *wallpaperGestureRecognizer
 @property  <CSWallpaperColorProvider> *wallpaperColorProvider
 @property  <SBNotificationDestination> *notificationDestination
 @property  BOOL hasContentAboveCoverSheet
 @property  BOOL externalLockProvidersRequireUnlock
 @property  BOOL externalLockProvidersShowPasscode
 @property  long long effectiveInterfaceOrientation
 @property  long long effectiveInterfaceOrientationOverride
 @property  CSPresentationViewController *mainPagePresentationViewController
 @property  int wakeSource
 @property  BOOL restToOpenAvailable
 @property  <CSCameraPrewarming> *cameraPrewarmer
 @property  <CSEmergencyCalling> *emergencyCaller
 @property  <CSOrientationUpdateControlling> *orientationUpdateController
 @property  <CSIdleTimerControlling> *idleTimerController
 @property  <CSApplicationLaunching> *applicationLauncher
 @property  <CSSpotlightPresenting> *spotlightPresenter
 @property  double backlightLevel
 @property  BOOL contentOccludesBackground
 @property  SBFLockScreenActionContext *customLockScreenActionContext
 @property  BOOL authenticated
 @property  BOOL showingMediaControls
 @property  BOOL shouldShowLockStatusBarTime
 @property  <SBFScreenWakeAnimationTarget> *lockScreenWakeAnimator
 @property  NSString *coverSheetIdentifier
 @property  long long participantState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL transitioning
 @property  {?=d{?={?=dB}{?=dB}}q} transitionContext
 @property  <CSNotificationDispatcher> *dispatcher
 @property  CSPresentation *externalPresentation
 @property  <CSCoverSheetViewPresenting> *presenter
 @property  long long presentationStyle
 @property  long long presentationType
 @property  long long presentationTransition
 @property  long long presentationPriority
 @property  long long presentationAltitude
 @property  NSString *appearanceIdentifier
 @property  long long backgroundStyle
 @property  NSSet *components
 @property  _UILegibilitySettings *legibilitySettings
 @property  UIColor *backgroundColor
 @property  long long scrollingStrategy
 @property  long long notificationBehavior
 @property  unsigned long restrictedCapabilities
 @property  long long proximityDetectionMode
 @property  <UICoordinateSpace> *presentationCoordinateSpace
 @property  NSArray *presentationRegions
 @property  long long idleTimerDuration
 @property  long long idleTimerMode
 @property  long long idleWarnMode
 @property  double customIdleExpirationTimeout
 @property  double customIdleWarningTimeout

  // instance methods
  -[CSCoverSheetViewController _updateBackground]
  -[CSCoverSheetViewController noteResetRestoreStateUpdated]
  -[CSCoverSheetViewController isPasscodeLockVisible]
  -[CSCoverSheetViewController noteDeviceBlockedStatusUpdated]
  -[CSCoverSheetViewController dismissNotificationInLongLookAnimated:]
  -[CSCoverSheetViewController isShowingTodayView]
  -[CSCoverSheetViewController setInScreenOffMode:forAutoUnlock:fromUnlockSource:]
  -[CSCoverSheetViewController willUIUnlockFromSource:]
  -[CSCoverSheetViewController notificationsLoadedForSectionIdentifier:]
  -[CSCoverSheetViewController presentationPriority]
  -[CSCoverSheetViewController finishUIUnlockFromSource:]
  -[CSCoverSheetViewController _addStateCaptureHandlers]
  -[CSCoverSheetViewController isMainPageVisible]
  -[CSCoverSheetViewController shouldDisableALS]
  -[CSCoverSheetViewController viewDidLoad]
  -[CSCoverSheetViewController handleHomeButtonPress]
  -[CSCoverSheetViewController isAuthenticated]
  -[CSCoverSheetViewController setWallpaperAggdLogger:]
  -[CSCoverSheetViewController setPasscodeLockVisible:animated:]
  -[CSCoverSheetViewController wallpaperAggdLogger]
  -[CSCoverSheetViewController _updateModalPresentationControllerVisibility]
  -[CSCoverSheetViewController setSpotlightPresenter:]
  -[CSCoverSheetViewController _indexOfMainPage]
  -[CSCoverSheetViewController setCustomLockScreenActionContext:]
  -[CSCoverSheetViewController coverSheetIdentifier]
  -[CSCoverSheetViewController setCameraPrewarmer:]
  -[CSCoverSheetViewController spotlightPresenter]
  -[CSCoverSheetViewController legibilityProvider]
  -[CSCoverSheetViewController externalLockProviderStateChanged:]
  -[CSCoverSheetViewController wallpaperGestureRecognizer]
  -[CSCoverSheetViewController createHomeButtonShowPasscodeRecognizerForHomeButtonPress]
  -[CSCoverSheetViewController _scrollPanGestureChanged:]
  -[CSCoverSheetViewController isHostingAnApp]
  -[CSCoverSheetViewController setShowingMediaControls:]
  -[CSCoverSheetViewController handleHeadsetButtonPress:]
  -[CSCoverSheetViewController hostedAppSceneHandle]
  -[CSCoverSheetViewController animationDidStop:finished:]
  -[CSCoverSheetViewController suppressesControlCenter]
  -[CSCoverSheetViewController activeBehavior]
  -[CSCoverSheetViewController applicationLauncher]
  -[CSCoverSheetViewController shouldAutoUnlockForSource:]
  -[CSCoverSheetViewController postNotificationRequest:]
  -[CSCoverSheetViewController setStatusBarBackgroundView:]
  -[CSCoverSheetViewController suppressesScreenshots]
  -[CSCoverSheetViewController idleTimerWillRefresh]
  -[CSCoverSheetViewController canHostAnApp]
  -[CSCoverSheetViewController updateStatusBarForLockScreenTeardown]
  -[CSCoverSheetViewController relinquishHostingOfWallpaperOverlay]
  -[CSCoverSheetViewController prepareForUIUnlock]
  -[CSCoverSheetViewController suppressesBanners]
  -[CSCoverSheetViewController isPresentingNotificationInLongLook]
  -[CSCoverSheetViewController updateStatusBarForLockScreenComeback]
  -[CSCoverSheetViewController setDispatcher:]
  -[CSCoverSheetViewController idleTimerDuration]
  -[CSCoverSheetViewController isUnlockDisabled]
  -[CSCoverSheetViewController setInScreenOffMode:]
  -[CSCoverSheetViewController shouldUnlockUIOnKeyDownEvent]
  -[CSCoverSheetViewController startHostingWallpaperOverlay:]
  -[CSCoverSheetViewController transitionSource:willBeginWithType:]
  -[CSCoverSheetViewController canBeDeactivatedForUIUnlockFromSource:]
  -[CSCoverSheetViewController irisWallpaperView]
  -[CSCoverSheetViewController setPasscodeLockVisible:animated:completion:]
  -[CSCoverSheetViewController _customLockScreenActionContext]
  -[CSCoverSheetViewController isInScreenOffMode]
  -[CSCoverSheetViewController dispatcher]
  -[CSCoverSheetViewController handleLockButtonPress]
  -[CSCoverSheetViewController _wallpaperGestureShouldRequireUserPresence]
  -[CSCoverSheetViewController isShowingMediaControls]
  -[CSCoverSheetViewController startLockScreenFadeInAnimationForSource:]
  -[CSCoverSheetViewController conformsToCSAppearanceProviding]
  -[CSCoverSheetViewController idleTimerController]
  -[CSCoverSheetViewController isNotificationContentExtensionVisible:]
  -[CSCoverSheetViewController prepareForUILock]
  -[CSCoverSheetViewController createHomeButtonSuppressAfterUnlockRecognizerForUnlockSource:]
  -[CSCoverSheetViewController dateBaselineToListY]
  -[CSCoverSheetViewController hostedAppWillRotateToInterfaceOrientation:]
  -[CSCoverSheetViewController jiggleLockIcon]
  -[CSCoverSheetViewController handleHomeButtonLongPress]
  -[CSCoverSheetViewController _transitionChargingDateSubtitleToVisible:animated:force:]
  -[CSCoverSheetViewController hostedAppSceneHandles]
  -[CSCoverSheetViewController _updateWhitePoint]
  -[CSCoverSheetViewController setSuspendWallpaperAnimationAssertion:]
  -[CSCoverSheetViewController setPresenter:]
  -[CSCoverSheetViewController withdrawNotificationRequest:]
  -[CSCoverSheetViewController _updatePoseidon]
  -[CSCoverSheetViewController _dismissToMainPageFromPageViewController:]
  -[CSCoverSheetViewController dateTimeSubtitleMaximumWidth]
  -[CSCoverSheetViewController handleVolumeDownButtonPress]
  -[CSCoverSheetViewController isTransitioning]
  -[CSCoverSheetViewController externalLockProvidersRequireUnlock]
  -[CSCoverSheetViewController scrollingStrategy]
  -[CSCoverSheetViewController handleVolumeUpButtonPress]
  -[CSCoverSheetViewController initWithPageViewControllers:mainPageContentViewController:context:]
  -[CSCoverSheetViewController cancelTransition]
  -[CSCoverSheetViewController notificationBehavior]
  -[CSCoverSheetViewController updateNotificationSectionSettings:previousSectionSettings:]
  -[CSCoverSheetViewController handleHomeButtonDoublePress]
  -[CSCoverSheetViewController settings:changedValueForKey:]
  -[CSCoverSheetViewController shouldShowLockStatusBarTime]
  -[CSCoverSheetViewController isLockScreenShowingDefaultContent]
  -[CSCoverSheetViewController addCoverSheetObserver:]
  -[CSCoverSheetViewController setEffectiveInterfaceOrientationOverride:]
  -[CSCoverSheetViewController _isKnownTransitionConflictFrom:to:]
  -[CSCoverSheetViewController overlayController:didChangePresentationProgress:fromLeading:]
  -[CSCoverSheetViewController conformsToCSBehaviorProviding]
  -[CSCoverSheetViewController idleWarnMode]
  -[CSCoverSheetViewController idleTimerDidChange]
  -[CSCoverSheetViewController idleTimerMode]
  -[CSCoverSheetViewController presentModalViewController:withTransition:]
  -[CSCoverSheetViewController lockScreenActionContext]
  -[CSCoverSheetViewController _screenWakeAnimationController]
  -[CSCoverSheetViewController _updateLegibilitySettings]
  -[CSCoverSheetViewController setPreviousAppearance:]
  -[CSCoverSheetViewController _isMainPageShowing]
  -[CSCoverSheetViewController _displayWillAppearImplementation]
  -[CSCoverSheetViewController restrictedCapabilities]
  -[CSCoverSheetViewController dateView]
  -[CSCoverSheetViewController cleanupInterstitialPresentationToPresented:inPlace:]
  -[CSCoverSheetViewController _presentModalViewController:shouldDismissOverlays:animated:completion:]
  -[CSCoverSheetViewController _dismissRemoteViewControllerForReason:]
  -[CSCoverSheetViewController _pageForScrollPercent:]
  -[CSCoverSheetViewController suspendWallpaperAnimationAssertion]
  -[CSCoverSheetViewController pageViewControllerAtIndex:]
  -[CSCoverSheetViewController legibilitySettings]
  -[CSCoverSheetViewController _offsetForTransitionFromOffset:toOffset:timingFunction:]
  -[CSCoverSheetViewController setLayoutStrategy:]
  -[CSCoverSheetViewController unregisterExternalLockProvider:]
  -[CSCoverSheetViewController externalPresentationProviderPresentationChanged:]
  -[CSCoverSheetViewController _setScreenWakeAnimationController:]
  -[CSCoverSheetViewController _scaleForTransitionFromScale:toScale:timingFunction:]
  -[CSCoverSheetViewController _dismissModalViewControllersWithIdentifier:animated:completion:]
  -[CSCoverSheetViewController externalBehaviorProviderBehaviorChanged:]
  -[CSCoverSheetViewController presentationStyle]
  -[CSCoverSheetViewController coverSheetView]
  -[CSCoverSheetViewController preferredInterfaceOrientationForPresentation]
  -[CSCoverSheetViewController shouldAutomaticallyForwardAppearanceMethods]
  -[CSCoverSheetViewController conformsToCSEventHandling]
  -[CSCoverSheetViewController _calculateAppearanceForCurrentOrientation]
  -[CSCoverSheetViewController appearanceIdentifier]
  -[CSCoverSheetViewController _updateTintingView]
  -[CSCoverSheetViewController _allowedPageViewControllers]
  -[CSCoverSheetViewController proximityDetectionMode]
  -[CSCoverSheetViewController updateNotificationRequest:]
  -[CSCoverSheetViewController dismissOverlaysAnimated:]
  -[CSCoverSheetViewController _endAppearanceTransitionForPageViewControllersToVisible:]
  -[CSCoverSheetViewController updateQuickActionsVisibility]
  -[CSCoverSheetViewController backgroundStyle]
  -[CSCoverSheetViewController presentationType]
  -[CSCoverSheetViewController isShowingModalView]
  -[CSCoverSheetViewController _updateStatusBarGradient]
  -[CSCoverSheetViewController wakeSource]
  -[CSCoverSheetViewController _removeRemoteViewControllerForInvalidatedSession:completion:]
  -[CSCoverSheetViewController _updateActiveBehaviorsForReason:]
  -[CSCoverSheetViewController _timeLabelScrollPercentForDateTimeLayout:]
  -[CSCoverSheetViewController _addOrRemoveResetRestoreViewIfNecessaryAnimated:]
  -[CSCoverSheetViewController remoteContentSession:dismissWithReason:completion:]
  -[CSCoverSheetViewController setActivePresentation:]
  -[CSCoverSheetViewController setIdleTimerController:]
  -[CSCoverSheetViewController _setPageViewControllers:]
  -[CSCoverSheetViewController didPostNotificationRequest:]
  -[CSCoverSheetViewController remoteContentSession:presentViewController:]
  -[CSCoverSheetViewController setLocalBehavior:]
  -[CSCoverSheetViewController components]
  -[CSCoverSheetViewController shouldModifyPageScrolling]
  -[CSCoverSheetViewController setActiveAppearance:]
  -[CSCoverSheetViewController presentModalViewController:animated:completion:]
  -[CSCoverSheetViewController _prepareForViewWillAppearIfNecessary]
  -[CSCoverSheetViewController bottomContentInset]
  -[CSCoverSheetViewController wallpaperColorProvider]
  -[CSCoverSheetViewController _listenForDisplayLayoutChanges:]
  -[CSCoverSheetViewController actionManager:removedAction:]
  -[CSCoverSheetViewController shouldAutorotate]
  -[CSCoverSheetViewController coverSheetNotificationClearingTriggerDidFire:]
  -[CSCoverSheetViewController _updateScrollingBehavior]
  -[CSCoverSheetViewController backgroundColor]
  -[CSCoverSheetViewController _updateRestrictedBehavior]
  -[CSCoverSheetViewController timeLabelOffsetForScrollPercent:]
  -[CSCoverSheetViewController _startFadeInAnimationForSource:]
  -[CSCoverSheetViewController presentationViewController:didTransitionViewController:toPresented:]
  -[CSCoverSheetViewController .cxx_destruct]
  -[CSCoverSheetViewController _indexOfPageViewControllerForRole:]
  -[CSCoverSheetViewController orientationUpdateController]
  -[CSCoverSheetViewController _updateProudLockViewUpdateSuspension]
  -[CSCoverSheetViewController _passcodeViewController]
  -[CSCoverSheetViewController timeToSubtitleLabelBaselineDifferenceY]
  -[CSCoverSheetViewController _actuallyUpdateUIForIrisPlaying:]
  -[CSCoverSheetViewController _handleEventType:]
  -[CSCoverSheetViewController timerViewController]
  -[CSCoverSheetViewController emergencyCaller]
  -[CSCoverSheetViewController setInterstitialTransitionSource:]
  -[CSCoverSheetViewController _updateLocalAppearanceForRequester:animationSettings:actions:completion:]
  -[CSCoverSheetViewController appearanceFraction]
  -[CSCoverSheetViewController setFakeStatusBar:]
  -[CSCoverSheetViewController _updateProudLockView]
  -[CSCoverSheetViewController _canShowEmbeddedRemoteContent]
  -[CSCoverSheetViewController _updateForegroundView]
  -[CSCoverSheetViewController timeLabelBaselineY]
  -[CSCoverSheetViewController effectiveInterfaceOrientationOverride]
  -[CSCoverSheetViewController _appearanceForParticipant:]
  -[CSCoverSheetViewController layoutStrategy]
  -[CSCoverSheetViewController setWallpaperColorProvider:]
  -[CSCoverSheetViewController unregisterExternalAppearanceProvider:]
  -[CSCoverSheetViewController gestureRecognizerShouldBegin:]
  -[CSCoverSheetViewController setLocalAppearance:]
  -[CSCoverSheetViewController isLockScreenShowingDefaultContentExceptControlCenter]
  -[CSCoverSheetViewController externalAppearanceProviderBehaviorChanged:]
  -[CSCoverSheetViewController _updateDateTimeView]
  -[CSCoverSheetViewController _displayWillTurnOnWhileOnCoverSheet:]
  -[CSCoverSheetViewController shouldTransitionIrisWallpaperToStillWhenPlaybackFinishes]
  -[CSCoverSheetViewController _isWakeAnimationInProgress]
  -[CSCoverSheetViewController _indexOfTodayPage]
  -[CSCoverSheetViewController controllerWillCancelHorizontalScrolling:]
  -[CSCoverSheetViewController dateViewController]
  -[CSCoverSheetViewController currentTransitionSource]
  -[CSCoverSheetViewController activePresentation]
  -[CSCoverSheetViewController _transitionChargingViewToVisible:showBattery:animated:]
  -[CSCoverSheetViewController fakeStatusBar]
  -[CSCoverSheetViewController setShouldTransitionIrisWallpaperToStillWhenPlaybackFinishes:]
  -[CSCoverSheetViewController _updateHomeAffordance]
  -[CSCoverSheetViewController _updateControlCenterGrabber]
  -[CSCoverSheetViewController _isSlideableContentOffsetOnscreen:]
  -[CSCoverSheetViewController shouldActivateRemoteContentSession:]
  -[CSCoverSheetViewController succinctDescriptionBuilder]
  -[CSCoverSheetViewController remoteContentDidUpdateStyle]
  -[CSCoverSheetViewController _setHasContentAboveCoverSheet:]
  -[CSCoverSheetViewController irisBehavior]
  -[CSCoverSheetViewController activeAppearance]
  -[CSCoverSheetViewController _transitionTimerViewToVisible:animated:]
  -[CSCoverSheetViewController presentationAltitude]
  -[CSCoverSheetViewController _finalizeOffset:referenceFrame:]
  -[CSCoverSheetViewController scrollPanGestureDidUpdate:]
  -[CSCoverSheetViewController updateBehaviorForController:]
  -[CSCoverSheetViewController _updateFixedFooterView]
  -[CSCoverSheetViewController transitionContext]
  -[CSCoverSheetViewController _updateQuickActions]
  -[CSCoverSheetViewController irisWallpaperViewIsInteractingDidChange:]
  -[CSCoverSheetViewController statusBarStyle]
  -[CSCoverSheetViewController registerExternalBehaviorProvider:]
  -[CSCoverSheetViewController _whitePointReductionFilterFromValues:]
  -[CSCoverSheetViewController activateMainPageWithCompletion:]
  -[CSCoverSheetViewController _updateNotificationClearingTriggerForEvent:]
  -[CSCoverSheetViewController _updateActiveBehaviorsForReason:updatingAppearanceIfNeeded:]
  -[CSCoverSheetViewController _alphaForTransitionFromHidden:toHidden:timingFunction:]
  -[CSCoverSheetViewController interstitialTransitionSource]
  -[CSCoverSheetViewController _passcodePresentationMode]
  -[CSCoverSheetViewController setWallpaperGestureRecognizer:]
  -[CSCoverSheetViewController handleAction:fromSender:]
  -[CSCoverSheetViewController overlayController]
  -[CSCoverSheetViewController setLegibilitySettings:]
  -[CSCoverSheetViewController presentViewController:withTransition:completion:]
  -[CSCoverSheetViewController isRestToOpenAvailable]
  -[CSCoverSheetViewController externalPresentation]
  -[CSCoverSheetViewController _isTodayViewOverlayShowing]
  -[CSCoverSheetViewController _loadViewsForRestrictedPagesIfPossible]
  -[CSCoverSheetViewController pageViewControllers]
  -[CSCoverSheetViewController registerExternalLockProvider:]
  -[CSCoverSheetViewController presenter]
  -[CSCoverSheetViewController setOverlayController:]
  -[CSCoverSheetViewController _handleEvent:]
  -[CSCoverSheetViewController _fakeStatusBarSettings]
  -[CSCoverSheetViewController _setAllowedPageViewControllers:]
  -[CSCoverSheetViewController _alphaForTransitionFromHidden:toHidden:unhiddenAlpha:timingFunction:]
  -[CSCoverSheetViewController _updateScalableContent]
  -[CSCoverSheetViewController _addBedtimeGreetingBackgroundView]
  -[CSCoverSheetViewController setAppearanceFraction:]
  -[CSCoverSheetViewController _shouldReduceWhitePoint]
  -[CSCoverSheetViewController supportedInterfaceOrientations]
  -[CSCoverSheetViewController removeApplicationHoster:]
  -[CSCoverSheetViewController setDateViewController:]
  -[CSCoverSheetViewController setCurrentTransitionSource:]
  -[CSCoverSheetViewController presentationRegions]
  -[CSCoverSheetViewController _addOrRemoveRemoteContentViewIfNecessaryMaintainingState:]
  -[CSCoverSheetViewController _presentedModalViewControllerWithIdentifier:]
  -[CSCoverSheetViewController setModalPresentationController:]
  -[CSCoverSheetViewController passcodeViewController:didCompletePasscodeEntry:]
  -[CSCoverSheetViewController _addOrRemoveRemoteContentViewIfNecessary]
  -[CSCoverSheetViewController _updateIdleTimerBehavior]
  -[CSCoverSheetViewController participantState]
  -[CSCoverSheetViewController _valueForTransitionInterval:timingFunction:]
  -[CSCoverSheetViewController registerExternalEventHandler:]
  -[CSCoverSheetViewController unregisterExternalBehaviorProvider:]
  -[CSCoverSheetViewController _preferredContentSizeDidChange]
  -[CSCoverSheetViewController _windowsFromViewControllers:]
  -[CSCoverSheetViewController setApplicationLauncher:]
  -[CSCoverSheetViewController _setMainPageContentViewController:]
  -[CSCoverSheetViewController _powerStatusChangedToConnectedState:]
  -[CSCoverSheetViewController _behaviorForParticipant:]
  -[CSCoverSheetViewController setAuthenticated:]
  -[CSCoverSheetViewController _updatePageContent]
  -[CSCoverSheetViewController _pageCapabilities]
  -[CSCoverSheetViewController _dateTimeLayoutForPage:]
  -[CSCoverSheetViewController transitionSource:didUpdateTransitionWithContext:]
  -[CSCoverSheetViewController _actuallyUpdateUIForIrisNotPlaying]
  -[CSCoverSheetViewController _batteryDeviceController]
  -[CSCoverSheetViewController viewDidAppear:]
  -[CSCoverSheetViewController setInitialOverlayPresentationProgress:]
  -[CSCoverSheetViewController setPowerChangeObserver:]
  -[CSCoverSheetViewController modalPresentationController]
  -[CSCoverSheetViewController _updateVisibilityForPageViewControllersWithVisiblePageViewController:]
  -[CSCoverSheetViewController _invalidateStatusBarAssertions]
  -[CSCoverSheetViewController updateAppearanceForController:]
  -[CSCoverSheetViewController setLegibilityProvider:]
  -[CSCoverSheetViewController registerExternalPresentationProvider:]
  -[CSCoverSheetViewController _quickActionsSupported]
  -[CSCoverSheetViewController idleTimerDidExpire]
  -[CSCoverSheetViewController succinctDescription]
  -[CSCoverSheetViewController _sendAuthenticationChangedEvent]
  -[CSCoverSheetViewController presentModalViewController:fromRect:inView:animated:]
  -[CSCoverSheetViewController _minDateListSpacingForPage:]
  -[CSCoverSheetViewController setCoverSheetIsVisible:]
  -[CSCoverSheetViewController removeCoverSheetObserver:]
  -[CSCoverSheetViewController invalidateLockScreenActionContext]
  -[CSCoverSheetViewController _addOrRemoveBlockedViewIfNecessaryAnimated:]
  -[CSCoverSheetViewController _whitePointValues]
  -[CSCoverSheetViewController interceptDismissalGestureForOverlayController:]
  -[CSCoverSheetViewController publisher:didUpdateLayout:withTransition:]
  -[CSCoverSheetViewController controller:shouldAllowPanScrollingWithSystemGestureRecognizer:]
  -[CSCoverSheetViewController _filterValuesForWhitePointReduced:lighterReduction:]
  -[CSCoverSheetViewController superviewForDateViewAnimation]
  -[CSCoverSheetViewController transitionSource:didEndWithContext:]
  -[CSCoverSheetViewController passcodeViewControllerShouldHideStatusBar:]
  -[CSCoverSheetViewController listMinY]
  -[CSCoverSheetViewController lockScreenWakeAnimator]
  -[CSCoverSheetViewController addApplicationHoster:]
  -[CSCoverSheetViewController _setupQuickNoteGestureRecognizer]
  -[CSCoverSheetViewController _displayWillDisappearImplementation]
  -[CSCoverSheetViewController handleEvent:]
  -[CSCoverSheetViewController _setModalPresentationControllerVisibility:cancelTouches:]
  -[CSCoverSheetViewController _slideableContentOffset]
  -[CSCoverSheetViewController noteWillPresentForUserGesture]
  -[CSCoverSheetViewController setPasscodeLockVisible:animated:forceBiometricPresentation:completion:]
  -[CSCoverSheetViewController _dateTimeInsetXForPage:]
  -[CSCoverSheetViewController presentationTransition]
  -[CSCoverSheetViewController setLastSettledPageIndex:]
  -[CSCoverSheetViewController _wouldUpdateActiveAppearance]
  -[CSCoverSheetViewController idleTimerDidRefresh]
  -[CSCoverSheetViewController _updateStatusBar]
  -[CSCoverSheetViewController backlightLevel]
  -[CSCoverSheetViewController fillRestToOpenWithDuration:]
  -[CSCoverSheetViewController conformsToCSCoverSheetViewControlling]
  -[CSCoverSheetViewController _displayDidDisappearImplementation]
  -[CSCoverSheetViewController _shouldReduceWhitePointForAppearance:]
  -[CSCoverSheetViewController unregisterExternalPresentationProvider:]
  -[CSCoverSheetViewController __currentDesiredAppearanceWithStartIndex:targetIndex:targetAppearance:targetPresentation:modalAppearance:proudLockAppearance:poseidonAppearance:]
  -[CSCoverSheetViewController _beginAppearanceTransitionForPageViewControllersToVisible:animated:]
  -[CSCoverSheetViewController _shouldUpdateActiveAppearanceForReason:]
  -[CSCoverSheetViewController visiblePageViewController]
  -[CSCoverSheetViewController coverSheetLegibilityProviderDidUpdate:]
  -[CSCoverSheetViewController lastSettledPageIndex]
  -[CSCoverSheetViewController _updateAccessibilityContentSizesIfNeeded]
  -[CSCoverSheetViewController effectiveInterfaceOrientation]
  -[CSCoverSheetViewController irisWallpaperViewPlaybackStateDidChange:]
  -[CSCoverSheetViewController _removeAllowedPageViewController:]
  -[CSCoverSheetViewController _isSlideableContentOnscreen]
  -[CSCoverSheetViewController _eligiblePageViewControllers]
  -[CSCoverSheetViewController prepareForInterstitialPresentation]
  -[CSCoverSheetViewController setOrientationUpdateController:]
  -[CSCoverSheetViewController _animateView:toWhitePointReduced:withDispatchGroup:]
  -[CSCoverSheetViewController unregisterExternalEventHandler:]
  -[CSCoverSheetViewController dateTimeMostExtremeTrailingX]
  -[CSCoverSheetViewController _updateAppearance:forComponentType:shouldHide:]
  -[CSCoverSheetViewController irisPlayerIsInteracting]
  -[CSCoverSheetViewController presentViewController:animated:completion:]
  -[CSCoverSheetViewController updateAppearanceForController:withAnimationSettings:completion:]
  -[CSCoverSheetViewController deactivateTodayViewWithCompletion:]
  -[CSCoverSheetViewController viewWillAppear:]
  -[CSCoverSheetViewController setIrisPlayerIsInteracting:]
  -[CSCoverSheetViewController timerControllerDidStartTimer:]
  -[CSCoverSheetViewController _componentForHidingWithType:]
  -[CSCoverSheetViewController handleBiometricEvent:]
  -[CSCoverSheetViewController timerControllerDidStopTimer:]
  -[CSCoverSheetViewController dismissHomeScreenOverlay]
  -[CSCoverSheetViewController _isRemoteContentPresentedInUnlockMode]
  -[CSCoverSheetViewController actionManager:addedAction:]
  -[CSCoverSheetViewController previousAppearance]
  -[CSCoverSheetViewController overlayControllerRequestsDismissal:]
  -[CSCoverSheetViewController _actuallyUpdateUIForIrisPlaying]
  -[CSCoverSheetViewController overlayController:visibilityDidChange:]
  -[CSCoverSheetViewController _presentationForParticipant:]
  -[CSCoverSheetViewController _updateDateSubtitleAppearanceForBattery:animated:chargingVisible:]
  -[CSCoverSheetViewController _createFakeStatusBar]
  -[CSCoverSheetViewController containsCenteredDateTimeLayout]
  -[CSCoverSheetViewController mainPagePresentationViewController]
  -[CSCoverSheetViewController _createStatusBarBackgroundViewIfNeeded]
  -[CSCoverSheetViewController conformsToCSCoverSheetViewPresenting]
  -[CSCoverSheetViewController _canShowWhileLocked]
  -[CSCoverSheetViewController _setLockOutController:]
  -[CSCoverSheetViewController _isPresentingModalViewControllerWithIdentifier:]
  -[CSCoverSheetViewController _updateLocalAppearanceForPresentation]
  -[CSCoverSheetViewController setIrisBehavior:]
  -[CSCoverSheetViewController updateCallToActionForMesaMatchFailure]
  -[CSCoverSheetViewController externalLockProvidersShowPasscode]
  -[CSCoverSheetViewController _addVisiblePageViewController:]
  -[CSCoverSheetViewController isTransitioningInteractively]
  -[CSCoverSheetViewController initialOverlayPresentationProgress]
  -[CSCoverSheetViewController _updateActiveAppearanceForReason:]
  -[CSCoverSheetViewController _lockOutController]
  -[CSCoverSheetViewController _activeViewControllers]
  -[CSCoverSheetViewController setDelegate:]
  -[CSCoverSheetViewController setTimerViewController:]
  -[CSCoverSheetViewController dismissModalViewController:animated:completion:]
  -[CSCoverSheetViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[CSCoverSheetViewController viewDidDisappear:]
  -[CSCoverSheetViewController _dateViewAlphaForCurrentWakeState]
  -[CSCoverSheetViewController gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[CSCoverSheetViewController _dismissRemoteViewControllerForReason:completion:]
  -[CSCoverSheetViewController resetRestToOpen]
  -[CSCoverSheetViewController registerExternalAppearanceProvider:]
  -[CSCoverSheetViewController setIrisWallpaperView:]
  -[CSCoverSheetViewController hasContentAboveCoverSheet]
  -[CSCoverSheetViewController _updateWallpaperEffectView]
  -[CSCoverSheetViewController activateTodayViewWithCompletion:]
  -[CSCoverSheetViewController remoteContentSession:didInvalidateWithError:]
  -[CSCoverSheetViewController viewWillDisappear:]
  -[CSCoverSheetViewController contentOccludesBackground]
  -[CSCoverSheetViewController _presentModalViewController:animated:completion:]
  -[CSCoverSheetViewController _dismissModalViewController:animated:completion:]
  -[CSCoverSheetViewController notificationDestination]
  -[CSCoverSheetViewController connectedDevicesDidChange:]
  -[CSCoverSheetViewController _removeBedtimeGreetingBackgroundViewAnimated:]
  -[CSCoverSheetViewController presentationCoordinateSpace]
  -[CSCoverSheetViewController _isPageContentHidden]
  -[CSCoverSheetViewController _updateUIForPlaying:immediately:]
  -[CSCoverSheetViewController _addRemoteViewControllerForAction:]
  -[CSCoverSheetViewController activatePage:animated:withCompletion:]
  -[CSCoverSheetViewController _updateStatusBarBackground]
  -[CSCoverSheetViewController activateCameraViewAnimated:sendingActions:completion:]
  -[CSCoverSheetViewController _scrollPanGestureBegan:]
  -[CSCoverSheetViewController _setupWallpaperGesture]
  -[CSCoverSheetViewController powerChangeObserver]
  -[CSCoverSheetViewController _isSourceForHorizontalScrolling:]
  -[CSCoverSheetViewController _setFakeStatusBarEnabled:]
  -[CSCoverSheetViewController setActiveBehavior:]
  -[CSCoverSheetViewController mainPageContentViewController]
  -[CSCoverSheetViewController _averageLockScreenWallpaperColor]
  -[CSCoverSheetViewController statusBarBackgroundView]
  -[CSCoverSheetViewController dateTimeMostExtremeLeadingX]
  -[CSCoverSheetViewController _addWhitePointAnimationForKeyPath:onLayer:toValues:withDuration:dispatchGroup:]
  -[CSCoverSheetViewController irisWallpaperView:didReplaceGestureRecognizer:withGestureRecognizer:]
  -[CSCoverSheetViewController _whitePointValuesForAppearance:]
  -[CSCoverSheetViewController delegate]
  -[CSCoverSheetViewController descriptionWithMultilinePrefix:]
  -[CSCoverSheetViewController passcodeViewControllerDidBeginPasscodeEntry:]
  -[CSCoverSheetViewController idleTimerDidWarn]
  -[CSCoverSheetViewController startRestToOpenCoachingWithCompletion:]
  -[CSCoverSheetViewController _scrollPanGestureEnded:]
  -[CSCoverSheetViewController cameraPrewarmer]
  -[CSCoverSheetViewController localAppearance]
  -[CSCoverSheetViewController _activateCameraAnimated:actions:completion:]
  -[CSCoverSheetViewController _setModalPresentationControllerVisibility:]
  -[CSCoverSheetViewController setBacklightLevel:]
  -[CSCoverSheetViewController _indexOfCameraPage]
  -[CSCoverSheetViewController loadView]
  -[CSCoverSheetViewController _overSlidingControlForLocation:inView:]
  -[CSCoverSheetViewController updateInterstitialPresentationWithProgress:]
  -[CSCoverSheetViewController resetMainPageContentOffset]
  -[CSCoverSheetViewController _handleQuickNoteLaunch:]
  -[CSCoverSheetViewController descriptionBuilderWithMultilinePrefix:]
  -[CSCoverSheetViewController localBehavior]
  -[CSCoverSheetViewController passcodeViewControllerDidCancelPasscodeEntry:]
  -[CSCoverSheetViewController _removeReduceWhitePointAnimationForKeyPath:onLayer:]
  -[CSCoverSheetViewController _addOrRemoveThermalTrapViewIfNecessaryAnimated:]
  -[CSCoverSheetViewController setEmergencyCaller:]
  -[CSCoverSheetViewController _shouldSetUpWallpaperGesture]
  -[CSCoverSheetViewController overlayControllerDidBeginChangingPresentationProgress:]
  -[CSCoverSheetViewController _dateTimeAlphaForFade]
  -[CSCoverSheetViewController _gestureRecognizer:isLocatedOverHorizontalContentRegionInViewController:]
  -[CSCoverSheetViewController wouldHandleButtonEvent:]


CSUserPictureViewController : CSCoverSheetViewControllerBase <CSEventHandling>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CSUserPictureViewController viewClass]
  +[CSUserPictureViewController isUserPictureSupported]

  // instance methods
  -[CSUserPictureViewController presentationPriority]
  -[CSUserPictureViewController viewDidLoad]
  -[CSUserPictureViewController presentationStyle]
  -[CSUserPictureViewController aggregateAppearance:]
  -[CSUserPictureViewController presentationType]
  -[CSUserPictureViewController .cxx_destruct]
  -[CSUserPictureViewController view]
  -[CSUserPictureViewController initWithNibName:bundle:]
  -[CSUserPictureViewController handleEvent:]
  -[CSUserPictureViewController viewWillTransitionToSize:withTransitionCoordinator:]


CSPasscodeViewController : CSCoverSheetViewControllerBase <SBUIPasscodeLockViewDelegate, PTSettingsKeyObserver>
 @property  <CSPasscodeViewControllerDelegate> *delegate
 @property  BOOL useBiometricPresentation
 @property  BOOL biometricButtonsInitiallyVisible
 @property  BOOL showProudLock
 @property  SBUIProudLockContainerViewController *proudLockContainerViewControllerToUpdate
 @property  NSString *unlockDestination
 @property  UIColor *wallpaperAverageColorOverride
 @property  BOOL confirmedNotInPocket
 @property  <CSCoverSheetContextProviding> *coverSheetContext
 @property  <CSWallpaperColorProvider> *wallpaperColorProvider
 @property  CSFaceOcclusionMonitor *faceOcclusionMonitor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CSPasscodeViewController presentationPriority]
  -[CSPasscodeViewController viewDidLoad]
  -[CSPasscodeViewController initWithOptions:]
  -[CSPasscodeViewController displayLayoutElementIdentifier]
  -[CSPasscodeViewController settings:changedValueForKey:]
  -[CSPasscodeViewController setConfirmedNotInPocket:]
  -[CSPasscodeViewController presentationStyle]
  -[CSPasscodeViewController aggregateBehavior:]
  -[CSPasscodeViewController aggregateAppearance:]
  -[CSPasscodeViewController presentationType]
  -[CSPasscodeViewController dealloc]
  -[CSPasscodeViewController wallpaperColorProvider]
  -[CSPasscodeViewController .cxx_destruct]
  -[CSPasscodeViewController passcodeLockViewStateChange:]
  -[CSPasscodeViewController setWallpaperColorProvider:]
  -[CSPasscodeViewController passcodeLockViewPasscodeEnteredViaMesa:]
  -[CSPasscodeViewController passcodeLockViewCancelButtonPressed:]
  -[CSPasscodeViewController passcodeLockViewEmergencyCallButtonPressed:]
  -[CSPasscodeViewController viewDidAppear:]
  -[CSPasscodeViewController handleEvent:]
  -[CSPasscodeViewController presentationTransition]
  -[CSPasscodeViewController viewWillAppear:]
  -[CSPasscodeViewController setDelegate:]
  -[CSPasscodeViewController passcodeLockViewPasscodeEntered:]
  -[CSPasscodeViewController passcodeLockViewPasscodeDidChange:]
  -[CSPasscodeViewController viewDidDisappear:]
  -[CSPasscodeViewController viewWillDisappear:]
  -[CSPasscodeViewController delegate]
  -[CSPasscodeViewController loadView]
  -[CSPasscodeViewController performCustomTransitionToVisible:withAnimationSettings:completion:]
  -[CSPasscodeViewController unlockDestination]
  -[CSPasscodeViewController setUnlockDestination:]
  -[CSPasscodeViewController confirmedNotInPocket]
  -[CSPasscodeViewController _passcodeLockViewPasscodeEntered:viaMesa:]
  -[CSPasscodeViewController setUseBiometricPresentation:]
  -[CSPasscodeViewController useBiometricPresentation]
  -[CSPasscodeViewController presentationCancelsTouches]
  -[CSPasscodeViewController setCoverSheetContext:]
  -[CSPasscodeViewController coverSheetContext]
  -[CSPasscodeViewController _updateProudLockViewControllerConfiguration]
  -[CSPasscodeViewController setWallpaperAverageColorOverride:]
  -[CSPasscodeViewController setFaceOcclusionMonitor:]
  -[CSPasscodeViewController setBiometricButtonsInitiallyVisible:]
  -[CSPasscodeViewController setShowProudLock:]
  -[CSPasscodeViewController setProudLockContainerViewControllerToUpdate:]
  -[CSPasscodeViewController beginInteractivePresentationTransitionForInitialTransition:]
  -[CSPasscodeViewController updateInteractiveTransitionWithPercent:forInitialTransition:]
  -[CSPasscodeViewController endInteractiveTransitionToPresented:forInitialTransition:]
  -[CSPasscodeViewController commitingToEndTransitionToPresented:forInitialTransition:]
  -[CSPasscodeViewController _setBiometricAuthenticationEnabledForTransientAppearanceTransition:]
  -[CSPasscodeViewController _shouldUseLightStylePasscodeView]
  -[CSPasscodeViewController biometricButtonsInitiallyVisible]
  -[CSPasscodeViewController _updateReduceTransparencyBackingColor]
  -[CSPasscodeViewController proudLockContainerViewControllerToUpdate]
  -[CSPasscodeViewController showProudLock]
  -[CSPasscodeViewController _shouldEmulateInteractivePresentation]
  -[CSPasscodeViewController _emulateInteractivePresentation]
  -[CSPasscodeViewController _effectiveAverageWallpaperColor]
  -[CSPasscodeViewController wallpaperAverageColorOverride]
  -[CSPasscodeViewController faceOcclusionMonitor]


CSVibrancyUtility : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CSVibrancyUtility supportsVibrancy]
  +[CSVibrancyUtility updateVibrantView:backgroundView:colorProvider:]


CSUserPictureView : CSCoverSheetViewBase <SBUILegibility>
 @property  CNContact *contact
 @property  double diameter
 @property  double strength
 @property  _UILegibilitySettings *legibilitySettings
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CSUserPictureView _monogrammerForLegibilitySettings:diameter:]

  // instance methods
  -[CSUserPictureView setStrength:]
  -[CSUserPictureView contact]
  -[CSUserPictureView legibilitySettings]
  -[CSUserPictureView initWithFrame:]
  -[CSUserPictureView setContact:]
  -[CSUserPictureView .cxx_destruct]
  -[CSUserPictureView strength]
  -[CSUserPictureView setLegibilitySettings:]
  -[CSUserPictureView presentationRegions]
  -[CSUserPictureView diameter]
  -[CSUserPictureView setDiameter:]
  -[CSUserPictureView layoutSubviews]
  -[CSUserPictureView _regenerateImage]


CSNotificationAdjunctListViewController : CSCoverSheetViewControllerBase <CSAdjunctListModelDelegate>
 @property  UIStackView *stackView
 @property  NSMutableDictionary *identifiersToItems
 @property  NSMutableArray *dismissingItems
 @property  CSNowPlayingController *nowPlayingController
 @property  CSContentActionInterpreter *actionInterpreter
 @property  BOOL respondingToSubviewLayoutChange
 @property  BOOL presentingContent
 @property  BOOL showingMediaControls
 @property  <SBFActionProviding> *contentActionProvider
 @property  <CSNotificationAdjunctListViewControllerDelegate> *delegate
 @property  double listViewContentAnimationDuration
 @property  double listViewContentAnimationDampingRatio
 @property  {CGSize=dd} sizeToMimic
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CSNotificationAdjunctListViewController viewClass]

  // instance methods
  -[CSNotificationAdjunctListViewController viewDidLoad]
  -[CSNotificationAdjunctListViewController isShowingMediaControls]
  -[CSNotificationAdjunctListViewController _removeItem:animated:]
  -[CSNotificationAdjunctListViewController sizeToMimic]
  -[CSNotificationAdjunctListViewController setActionInterpreter:]
  -[CSNotificationAdjunctListViewController init]
  -[CSNotificationAdjunctListViewController _didUpdateDisplay]
  -[CSNotificationAdjunctListViewController stackView]
  -[CSNotificationAdjunctListViewController nowPlayingController]
  -[CSNotificationAdjunctListViewController listViewContentAnimationDuration]
  -[CSNotificationAdjunctListViewController _disappearedTransformForContentWithHeight:]
  -[CSNotificationAdjunctListViewController adjunctListModel:didAddItem:]
  -[CSNotificationAdjunctListViewController setRespondingToSubviewLayoutChange:]
  -[CSNotificationAdjunctListViewController isPresentingContent]
  -[CSNotificationAdjunctListViewController .cxx_destruct]
  -[CSNotificationAdjunctListViewController dismissingItems]
  -[CSNotificationAdjunctListViewController listViewContentAnimationDampingRatio]
  -[CSNotificationAdjunctListViewController _createPlatterForHost:recipe:]
  -[CSNotificationAdjunctListViewController _canAnimate]
  -[CSNotificationAdjunctListViewController setDismissingItems:]
  -[CSNotificationAdjunctListViewController setContentActionProvider:]
  -[CSNotificationAdjunctListViewController handleEvent:]
  -[CSNotificationAdjunctListViewController setNowPlayingController:]
  -[CSNotificationAdjunctListViewController adjunctListModel:didRemoveItem:]
  -[CSNotificationAdjunctListViewController respondingToSubviewLayoutChange]
  -[CSNotificationAdjunctListViewController _groupNameBase]
  -[CSNotificationAdjunctListViewController identifiersToItems]
  -[CSNotificationAdjunctListViewController viewWillAppear:]
  -[CSNotificationAdjunctListViewController setStackView:]
  -[CSNotificationAdjunctListViewController contentActionProvider]
  -[CSNotificationAdjunctListViewController setDelegate:]
  -[CSNotificationAdjunctListViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[CSNotificationAdjunctListViewController viewDidLayoutSubviews]
  -[CSNotificationAdjunctListViewController delegate]
  -[CSNotificationAdjunctListViewController setIdentifiersToItems:]
  -[CSNotificationAdjunctListViewController _insertItem:animated:]
  -[CSNotificationAdjunctListViewController actionInterpreter]


CSResetRestoreViewController : CSModalViewControllerBase
  // instance methods
  -[CSResetRestoreViewController presentationPriority]
  -[CSResetRestoreViewController viewDidLoad]
  -[CSResetRestoreViewController aggregateBehavior:]
  -[CSResetRestoreViewController aggregateAppearance:]
  -[CSResetRestoreViewController .cxx_destruct]
  -[CSResetRestoreViewController initWithStatusProvider:]
  -[CSResetRestoreViewController _currentTextForResetOrRestoreState]


CSScrollModifier : NSObject /usr/lib/libSystem.B.dylib <PTSettingsKeyObserver, BSUIScrollViewDelegate>
 @property  BOOL recognized
 @property  double maxScrollDistance
 @property  BOOL cancelScrollingIfTooMuchDrag
 @property  double accumulatedDragThresholdPercentage
 @property  double maxDragFromVerticalPerFrame
 @property  double powerOfVerticalDirectionSine2
 @property  double inertialMultiplierSigmoidBase
 @property  double inertialMultiplierSigmoidRange
 @property  double inertialMultiplierSigmoidPivot
 @property  double inertialMultiplierSigmoidAlpha
 @property  double minPercentageSigmoidBase
 @property  double minPercentageSigmoidRange
 @property  double minPercentageSigmoidPivot
 @property  double minPercentageSigmoidAlpha
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CSScrollModifier initWithView:]
  -[CSScrollModifier settings:changedValueForKey:]
  -[CSScrollModifier setAccumulatedDragThresholdPercentage:]
  -[CSScrollModifier setInertialMultiplierSigmoidPivot:]
  -[CSScrollModifier setMinPercentageSigmoidPivot:]
  -[CSScrollModifier powerOfVerticalDirectionSine2]
  -[CSScrollModifier setMinPercentageSigmoidRange:]
  -[CSScrollModifier inertialMultiplierSigmoidBase]
  -[CSScrollModifier dealloc]
  -[CSScrollModifier scrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[CSScrollModifier .cxx_destruct]
  -[CSScrollModifier minPercentageSigmoidPivot]
  -[CSScrollModifier setMaxDragFromVerticalPerFrame:]
  -[CSScrollModifier accumulatedDragThresholdPercentage]
  -[CSScrollModifier maxDragFromVerticalPerFrame]
  -[CSScrollModifier scrollViewWillBeginDragging:]
  -[CSScrollModifier setMinPercentageSigmoidAlpha:]
  -[CSScrollModifier inertialMultiplierSigmoidRange]
  -[CSScrollModifier maxScrollDistance]
  -[CSScrollModifier setCancelScrollingIfTooMuchDrag:]
  -[CSScrollModifier minPercentageSigmoidRange]
  -[CSScrollModifier setMinPercentageSigmoidBase:]
  -[CSScrollModifier setPowerOfVerticalDirectionSine2:]
  -[CSScrollModifier reset]
  -[CSScrollModifier cancelScrollingIfTooMuchDrag]
  -[CSScrollModifier _loadFromSettings:]
  -[CSScrollModifier inertialMultiplierSigmoidPivot]
  -[CSScrollModifier inertialMultiplierSigmoidAlpha]
  -[CSScrollModifier minPercentageSigmoidAlpha]
  -[CSScrollModifier setInertialMultiplierSigmoidRange:]
  -[CSScrollModifier minPercentageSigmoidBase]
  -[CSScrollModifier setInertialMultiplierSigmoidAlpha:]
  -[CSScrollModifier setMaxScrollDistance:]
  -[CSScrollModifier setInertialMultiplierSigmoidBase:]
  -[CSScrollModifier _horizontalProgressSubtractionFromVertical:]
  -[CSScrollModifier _updateScrollParameters]
  -[CSScrollModifier scrollFromRightToLeft]
  -[CSScrollModifier scrollView:adjustedOffsetForOffset:translation:startPoint:locationInView:horizontalVelocity:verticalVelocity:]
  -[CSScrollModifier recognized]


CSPageControl : UIPageControl /System/Library/Frameworks/QuartzCore.framework/QuartzCore
 @property  unsigned long cameraPageIndex

  // class methods
  +[CSPageControl defaultSize]
  +[CSPageControl suggestedFrameForPageBounds:]
  +[CSPageControl suggestedFrameForPageBounds:desiredSize:]

  // instance methods
  -[CSPageControl sizeForNumberOfPages:]
  -[CSPageControl _rebuildIndicators]
  -[CSPageControl initWithFrame:]
  -[CSPageControl .cxx_destruct]
  -[CSPageControl setCameraPageIndex:]
  -[CSPageControl setLegibilitySettings:]
  -[CSPageControl _currentPageIndicatorColor]
  -[CSPageControl _updateForLegibility]
  -[CSPageControl _cameraIndicator]
  -[CSPageControl cameraPageIndex]
  -[CSPageControl _pageIndicatorColor]


CSLockScreenPasscodeSettings : PTSettings /System/Library/PrivateFrameworks/UserNotificationsUIKit.framework/UserNotificationsUIKit
 @property  double lightenSourceOverColorWhite
 @property  double lightenSourceOverColorAlpha
 @property  double plusDColorWhite
 @property  double plusDColorAlpha

  // class methods
  +[CSLockScreenPasscodeSettings settingsControllerModule]

  // instance methods
  -[CSLockScreenPasscodeSettings setDefaultValues]
  -[CSLockScreenPasscodeSettings setLightenSourceOverColorWhite:]
  -[CSLockScreenPasscodeSettings setLightenSourceOverColorAlpha:]
  -[CSLockScreenPasscodeSettings setPlusDColorWhite:]
  -[CSLockScreenPasscodeSettings setPlusDColorAlpha:]
  -[CSLockScreenPasscodeSettings lightenSourceOverColorWhite]
  -[CSLockScreenPasscodeSettings lightenSourceOverColorAlpha]
  -[CSLockScreenPasscodeSettings plusDColorWhite]
  -[CSLockScreenPasscodeSettings plusDColorAlpha]


CSStatusTextViewController : CSCoverSheetViewControllerBase <SBFRemoteBasebandLoggingObserver>
 @property  <CSStatusTextViewControllerDelegate> *delegate
 @property  NSString *overrideFooterText

  // instance methods
  -[CSStatusTextViewController remoteBasebandLogCollectionStateDidChange:]
  -[CSStatusTextViewController _profileStateChangedNotification:]
  -[CSStatusTextViewController _updateTextForProfiles]
  -[CSStatusTextViewController _updateText]
  -[CSStatusTextViewController _updateTextForProvisionalEnrollment]
  -[CSStatusTextViewController init]
  -[CSStatusTextViewController statusTextView]
  -[CSStatusTextViewController dealloc]
  -[CSStatusTextViewController .cxx_destruct]
  -[CSStatusTextViewController didMoveToParentViewController:]
  -[CSStatusTextViewController _updateTextForDeviceInformation]
  -[CSStatusTextViewController _updateTextForSupervision]
  -[CSStatusTextViewController _legalContact]
  -[CSStatusTextViewController overrideFooterText]
  -[CSStatusTextViewController setOverrideFooterText:]
  -[CSStatusTextViewController viewWillAppear:]
  -[CSStatusTextViewController _isSecurityResearchDevice]
  -[CSStatusTextViewController _legalString]
  -[CSStatusTextViewController setDelegate:]
  -[CSStatusTextViewController viewDidDisappear:]
  -[CSStatusTextViewController _updateTextForLegal]
  -[CSStatusTextViewController delegate]
  -[CSStatusTextViewController loadView]


CSPresentation : NSObject /usr/lib/libSystem.B.dylib <CSPresentationProviding, UICoordinateSpace, NSCopying>
 @property  <UICoordinateSpace> *coordinateSpace
 @property  NSArray *regions
 @property  NSString *identifier
 @property  <UICoordinateSpace> *presentationCoordinateSpace
 @property  NSArray *presentationRegions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} bounds

  // class methods
  +[CSPresentation presentation]
  +[CSPresentation presentationWithCoordinateSpace:]
  +[CSPresentation presentationForProvider:]

  // instance methods
  -[CSPresentation copyWithZone:]
  -[CSPresentation firstRegionIntersectingCoordinateSpace:]
  -[CSPresentation init]
  -[CSPresentation convertRect:fromCoordinateSpace:]
  -[CSPresentation regions]
  -[CSPresentation regionsIntersectingCoordinateSpace:]
  -[CSPresentation .cxx_destruct]
  -[CSPresentation firstRegionIntersectingCoordinateSpace:excludingRegionsWithRole:]
  -[CSPresentation suggestedInsetsForPreferredContentFrame:]
  -[CSPresentation succinctDescriptionBuilder]
  -[CSPresentation setIdentifier:]
  -[CSPresentation identifier]
  -[CSPresentation convertRect:toCoordinateSpace:]
  -[CSPresentation presentationRegions]
  -[CSPresentation convertPoint:fromCoordinateSpace:]
  -[CSPresentation succinctDescription]
  -[CSPresentation bounds]
  -[CSPresentation reset]
  -[CSPresentation isEqual:]
  -[CSPresentation addRegions:]
  -[CSPresentation convertPoint:toCoordinateSpace:]
  -[CSPresentation unionPresentation:]
  -[CSPresentation presentationForRole:]
  -[CSPresentation intersectsCoordinateSpace:]
  -[CSPresentation addRegion:]
  -[CSPresentation presentationCoordinateSpace]
  -[CSPresentation descriptionWithMultilinePrefix:]
  -[CSPresentation coordinateSpace]
  -[CSPresentation descriptionBuilderWithMultilinePrefix:]
  -[CSPresentation setCoordinateSpace:]


CSPreciseDateProvider : NSObject /usr/lib/libSystem.B.dylib <SBFDateProviding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CSPreciseDateProvider init]
  -[CSPreciseDateProvider .cxx_destruct]
  -[CSPreciseDateProvider date]
  -[CSPreciseDateProvider removeMinuteUpdateHandler:]
  -[CSPreciseDateProvider observeMinuteUpdatesWithHandler:]


CSNotificationClearingTrigger : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL triggerArmed
 @property  <CSNotificationClearingTriggerDelegate> *delegate
 @property  BOOL authenticated
 @property  BOOL hadNotificationContentAtDisappearance
 @property  BOOL didDisableCarDNDUntilEndOfDrive
 @property  BOOL uiLocked
 @property  BOOL screenOff

  // instance methods
  -[CSNotificationClearingTrigger screenOff]
  -[CSNotificationClearingTrigger initWithDelegate:]
  -[CSNotificationClearingTrigger triggerArmed]
  -[CSNotificationClearingTrigger _reset]
  -[CSNotificationClearingTrigger setScreenOff:]
  -[CSNotificationClearingTrigger .cxx_destruct]
  -[CSNotificationClearingTrigger setHadNotificationContentAtDisappearance:]
  -[CSNotificationClearingTrigger _clearIfNeeded]
  -[CSNotificationClearingTrigger authenticated]
  -[CSNotificationClearingTrigger uiLocked]
  -[CSNotificationClearingTrigger setUiLocked:]
  -[CSNotificationClearingTrigger _wouldArmForDiscreteParameters]
  -[CSNotificationClearingTrigger _wouldArmIfNotForDNDAndNotificationContent]
  -[CSNotificationClearingTrigger setAuthenticated:]
  -[CSNotificationClearingTrigger _updateTriggerAndClearIfNeeded]
  -[CSNotificationClearingTrigger hadNotificationContentAtDisappearance]
  -[CSNotificationClearingTrigger didDisableCarDNDUntilEndOfDrive]
  -[CSNotificationClearingTrigger _wouldArmIfNotForDND]
  -[CSNotificationClearingTrigger _shouldFire]
  -[CSNotificationClearingTrigger setDelegate:]
  -[CSNotificationClearingTrigger setTriggerArmed:]
  -[CSNotificationClearingTrigger _shouldArm]
  -[CSNotificationClearingTrigger setDidDisableCarDNDUntilEndOfDrive:]
  -[CSNotificationClearingTrigger delegate]


CSBehavior : NSObject /usr/lib/libSystem.B.dylib <BSDescriptionProviding, CSBehaviorProviding, SBFIdleTimerBehaviorProviding, NSCopying>
 @property  long long idleTimerDuration
 @property  long long idleTimerMode
 @property  long long idleWarnMode
 @property  long long scrollingStrategy
 @property  long long notificationBehavior
 @property  unsigned long restrictedCapabilities
 @property  long long proximityDetectionMode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  double customIdleExpirationTimeout
 @property  double customIdleWarningTimeout

  // class methods
  +[CSBehavior behavior]
  +[CSBehavior behaviorForProvider:]

  // instance methods
  -[CSBehavior copyWithZone:]
  -[CSBehavior idleTimerDuration]
  -[CSBehavior scrollingStrategy]
  -[CSBehavior notificationBehavior]
  -[CSBehavior setRestrictedCapabilities:]
  -[CSBehavior conformsToCSBehaviorProviding]
  -[CSBehavior idleWarnMode]
  -[CSBehavior idleTimerMode]
  -[CSBehavior restrictedCapabilities]
  -[CSBehavior proximityDetectionMode]
  -[CSBehavior setIdleWarnMode:]
  -[CSBehavior setNotificationBehavior:]
  -[CSBehavior succinctDescriptionBuilder]
  -[CSBehavior setIdleTimerMode:]
  -[CSBehavior succinctDescription]
  -[CSBehavior setProximityDetectionMode:]
  -[CSBehavior areRestrictedCapabilities:]
  -[CSBehavior reset]
  -[CSBehavior setIdleTimerDuration:]
  -[CSBehavior isEqual:]
  -[CSBehavior unionBehavior:]
  -[CSBehavior removeRestrictedCapabilities:]
  -[CSBehavior isEqualToBehavior:]
  -[CSBehavior descriptionWithMultilinePrefix:]
  -[CSBehavior descriptionBuilderWithMultilinePrefix:]
  -[CSBehavior addRestrictedCapabilities:]
  -[CSBehavior setScrollingStrategy:]


CSStatusTextView : UIView /System/Library/Frameworks/QuartzCore.framework/QuartzCore <SBUILegibility>
 @property  NSString *internalLegalText
 @property  NSString *supervisionText
 @property  NSArray *deviceInformationText
 @property  NSString *provisionalEnrollmentText
 @property  double strength
 @property  _UILegibilitySettings *legibilitySettings
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CSStatusTextView setStrength:]
  -[CSStatusTextView _font]
  -[CSStatusTextView setSupervisionText:]
  -[CSStatusTextView legibilitySettings]
  -[CSStatusTextView _nonLegalTextParagraphSpacing]
  -[CSStatusTextView _largeFont]
  -[CSStatusTextView initWithFrame:]
  -[CSStatusTextView _updateTextViewsIfNecessary]
  -[CSStatusTextView _updateTextViews]
  -[CSStatusTextView _updateLegibilityStrength]
  -[CSStatusTextView setProvisionalEnrollmentText:]
  -[CSStatusTextView _spacingBetweenNonLegalLabels]
  -[CSStatusTextView deviceInformationText]
  -[CSStatusTextView supervisionText]
  -[CSStatusTextView setInternalLegalText:]
  -[CSStatusTextView .cxx_destruct]
  -[CSStatusTextView strength]
  -[CSStatusTextView setLegibilitySettings:]
  -[CSStatusTextView _lineHeightOfNonLegalLabels]
  -[CSStatusTextView _updateDeviceInformationLabel]
  -[CSStatusTextView _updateInternalLegalLabel]
  -[CSStatusTextView _nonLegalLabelFontLeading]
  -[CSStatusTextView _updateSupervisionLabel]
  -[CSStatusTextView sizeThatFits:]
  -[CSStatusTextView provisionalEnrollmentText]
  -[CSStatusTextView updateTextsWithBlock:]
  -[CSStatusTextView internalLegalText]
  -[CSStatusTextView setDeviceInformationText:]
  -[CSStatusTextView layoutSubviews]
  -[CSStatusTextView _updateProvisionalEnrollmentLabel]


CSTodayPageViewController : CSPageViewController <CSTodayViewControllerDelegate, SBUICoronaAnimationControllerParticipant, CSPageViewControllerProtocol, SBUISpotlightInitiating>
 @property  CSTodayContentViewController *contentViewController
 @property  CSTodayViewController *todayViewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <CSCoverSheetViewControllerProtocol> *coverSheetViewController
 @property  BOOL transitioning
 @property  BOOL authenticated
 @property  CSLayoutStrategy *layoutStrategy
 @property  NSString *pageRole
 @property  CSAppearance *activeAppearance
 @property  CSBehavior *activeBehavior
 @property  CSPresentation *externalPresentation
 @property  <CSCoverSheetViewPresenting> *presenter
 @property  long long presentationStyle
 @property  long long presentationType
 @property  long long presentationTransition
 @property  long long presentationPriority
 @property  long long presentationAltitude
 @property  NSString *appearanceIdentifier
 @property  long long backgroundStyle
 @property  NSSet *components
 @property  _UILegibilitySettings *legibilitySettings
 @property  UIColor *backgroundColor
 @property  long long scrollingStrategy
 @property  long long notificationBehavior
 @property  unsigned long restrictedCapabilities
 @property  long long proximityDetectionMode
 @property  <UICoordinateSpace> *presentationCoordinateSpace
 @property  NSArray *presentationRegions
 @property  NSString *coverSheetIdentifier
 @property  long long participantState
 @property  long long idleTimerDuration
 @property  long long idleTimerMode
 @property  long long idleWarnMode
 @property  double customIdleExpirationTimeout
 @property  double customIdleWarningTimeout
 @property  SBViewControllerTransitionContext *transitionContext

  // class methods
  +[CSTodayPageViewController isAvailableForConfiguration]
  +[CSTodayPageViewController requiredCapabilities]

  // instance methods
  -[CSTodayPageViewController viewDidLoad]
  -[CSTodayPageViewController coronaAnimationController:willAnimateCoronaTransitionWithAnimator:]
  -[CSTodayPageViewController dateTimeInsetX]
  -[CSTodayPageViewController customListWidth]
  -[CSTodayPageViewController todayViewController]
  -[CSTodayPageViewController dateTimeLayout]
  -[CSTodayPageViewController minimumDateToListSpacing]
  -[CSTodayPageViewController listLayout]
  -[CSTodayPageViewController listInsetX]
  -[CSTodayPageViewController _isPortrait]
  -[CSTodayPageViewController pageRole]
  -[CSTodayPageViewController displayLayoutElementIdentifier]
  -[CSTodayPageViewController _listBelowDateTime]
  -[CSTodayPageViewController cleanupAfterSpotlightDismissal]
  -[CSTodayPageViewController setLayoutStrategy:]
  -[CSTodayPageViewController coverSheetTodayViewController:contentViewsDidChange:]
  -[CSTodayPageViewController resetForSpotlightDismissalAnimated:]
  -[CSTodayPageViewController aggregateBehavior:]
  -[CSTodayPageViewController aggregateAppearance:]
  -[CSTodayPageViewController updateTransitionWhileRubberBandingInProgress:]
  -[CSTodayPageViewController .cxx_destruct]
  -[CSTodayPageViewController layoutStrategy]
  -[CSTodayPageViewController spotlightHeaderAcquiringViewController]
  -[CSTodayPageViewController transitionContext]
  -[CSTodayPageViewController setContentViewController:]
  -[CSTodayPageViewController setTransitionContext:]
  -[CSTodayPageViewController initWithNibName:bundle:]
  -[CSTodayPageViewController coverSheetTodayViewControllerDidFocusSearchView:]
  -[CSTodayPageViewController viewDidAppear:]
  -[CSTodayPageViewController listWidthStrategy]
  -[CSTodayPageViewController viewWillDisappear:]
  -[CSTodayPageViewController contentViewController]


CSLockScreenBiometricFailureSettings : PTSettings /System/Library/PrivateFrameworks/UserNotificationsUIKit.framework/UserNotificationsUIKit
 @property  BOOL jiggleLock
 @property  BOOL vibrate
 @property  BOOL showPasscode
 @property  BOOL waitUntilButtonUp

  // class methods
  +[CSLockScreenBiometricFailureSettings settingsControllerModule]

  // instance methods
  -[CSLockScreenBiometricFailureSettings setDefaultValues]
  -[CSLockScreenBiometricFailureSettings showPasscode]
  -[CSLockScreenBiometricFailureSettings vibrate]
  -[CSLockScreenBiometricFailureSettings setVibrate:]
  -[CSLockScreenBiometricFailureSettings jiggleLock]
  -[CSLockScreenBiometricFailureSettings waitUntilButtonUp]
  -[CSLockScreenBiometricFailureSettings setJiggleLock:]
  -[CSLockScreenBiometricFailureSettings setShowPasscode:]
  -[CSLockScreenBiometricFailureSettings setWaitUntilButtonUp:]


CSCoverSheetDismissGestureSettings : PTSettings /System/Library/PrivateFrameworks/UserNotificationsUIKit.framework/UserNotificationsUIKit
 @property  BOOL usesGrapeFlags
 @property  double edgeRegionSize
 @property  double recognizeAlongEdge
 @property  BOOL extendSwipeUpRegion
 @property  double extendedEdgeRegionSize
 @property  double extendedRegionInsetX

  // class methods
  +[CSCoverSheetDismissGestureSettings settingsControllerModule]

  // instance methods
  -[CSCoverSheetDismissGestureSettings setDefaultValues]
  -[CSCoverSheetDismissGestureSettings usesGrapeFlags]
  -[CSCoverSheetDismissGestureSettings recognizeAlongEdge]
  -[CSCoverSheetDismissGestureSettings extendedRegionInsetX]
  -[CSCoverSheetDismissGestureSettings setExtendedEdgeRegionSize:]
  -[CSCoverSheetDismissGestureSettings setUsesGrapeFlags:]
  -[CSCoverSheetDismissGestureSettings setExtendedRegionInsetX:]
  -[CSCoverSheetDismissGestureSettings edgeRegionSize]
  -[CSCoverSheetDismissGestureSettings setRecognizeAlongEdge:]
  -[CSCoverSheetDismissGestureSettings setExtendSwipeUpRegion:]
  -[CSCoverSheetDismissGestureSettings setEdgeRegionSize:]
  -[CSCoverSheetDismissGestureSettings extendSwipeUpRegion]
  -[CSCoverSheetDismissGestureSettings extendedEdgeRegionSize]


CSPoseidonViewController : CSCoverSheetViewControllerBase <SBUIPoseidonContainerViewControllerLockStatusProvider, SBUIPoseidonContainerViewControllerDelegate>
 @property  SBUIPoseidonContainerViewController *poseidonContainerViewController
 @property  <SBUIBiometricResource> *biometricResource
 @property  <SBFAuthenticationStatusProvider> *authenticationStatusProvider
 @property  UIView *poseidonView
 @property  BOOL isBiometricLockedOut
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CSPoseidonViewController viewDidLoad]
  -[CSPoseidonViewController biometricResource]
  -[CSPoseidonViewController setBiometricResource:]
  -[CSPoseidonViewController aggregateAppearance:]
  -[CSPoseidonViewController .cxx_destruct]
  -[CSPoseidonViewController isBiometricLockedOut]
  -[CSPoseidonViewController poseidonContainerViewController]
  -[CSPoseidonViewController setPoseidonContainerViewController:]
  -[CSPoseidonViewController setAuthenticationStatusProvider:]
  -[CSPoseidonViewController handleEvent:]
  -[CSPoseidonViewController poseidonContainerViewControllerCoachingStateDidChange:]
  -[CSPoseidonViewController poseidonContainerViewControllerIdleUntilShimmerDuration:]
  -[CSPoseidonViewController poseidonContainerViewControllerRestToOpenIdleDuration:]
  -[CSPoseidonViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[CSPoseidonViewController viewDidLayoutSubviews]
  -[CSPoseidonViewController authenticationStatusProvider]
  -[CSPoseidonViewController poseidonView]


CSTeachableMomentsContainerViewController : CSCoverSheetViewControllerBase <CAAnimationDelegate, UIGestureRecognizerDelegate>
 @property  NSTimer *fireOffAnimationTimer
 @property  BOOL authenticated
 @property  BOOL updateTextLabelOnNextAnimation
 @property  NSMutableDictionary *cachedLegibilityLabels
 @property  BOOL controlCenterCoachingIsHidden
 @property  UITapGestureRecognizer *homeAffordanceClickGestureRecognizer
 @property  CSTeachableMomentsContainerView *teachableMomentsContainerView
 @property  CSHomeAffordanceViewController *homeAffordanceViewController
 @property  unsigned long animationState
 @property  <SBDashBoardHomeAffordanceAnimationViewProviding> *viewProvider
 @property  <SBUIBiometricResource> *biometricResource
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CSTeachableMomentsContainerViewController _animationKeyForKeyPath:iteration:reset:]
  +[CSTeachableMomentsContainerViewController _addRepeatedAnimationWithProvider:toLayer:]

  // instance methods
  -[CSTeachableMomentsContainerViewController animationDidStop:finished:]
  -[CSTeachableMomentsContainerViewController setAnimationState:]
  -[CSTeachableMomentsContainerViewController viewProvider]
  -[CSTeachableMomentsContainerViewController setViewProvider:]
  -[CSTeachableMomentsContainerViewController homeAffordanceViewController]
  -[CSTeachableMomentsContainerViewController currentState]
  -[CSTeachableMomentsContainerViewController biometricResource]
  -[CSTeachableMomentsContainerViewController _updateLegibilitySettings]
  -[CSTeachableMomentsContainerViewController init]
  -[CSTeachableMomentsContainerViewController setBiometricResource:]
  -[CSTeachableMomentsContainerViewController aggregateAppearance:]
  -[CSTeachableMomentsContainerViewController dealloc]
  -[CSTeachableMomentsContainerViewController .cxx_destruct]
  -[CSTeachableMomentsContainerViewController _contentSizeCategoryChanged]
  -[CSTeachableMomentsContainerViewController authenticated]
  -[CSTeachableMomentsContainerViewController teachableMomentsContainerView]
  -[CSTeachableMomentsContainerViewController setAuthenticated:]
  -[CSTeachableMomentsContainerViewController handleEvent:]
  -[CSTeachableMomentsContainerViewController viewWillAppear:]
  -[CSTeachableMomentsContainerViewController viewWillDisappear:]
  -[CSTeachableMomentsContainerViewController gestureRecognizer:shouldReceiveTouch:]
  -[CSTeachableMomentsContainerViewController loadView]
  -[CSTeachableMomentsContainerViewController animationState]
  -[CSTeachableMomentsContainerViewController _setupTimer]
  -[CSTeachableMomentsContainerViewController _updateTextLabel]
  -[CSTeachableMomentsContainerViewController _updateText:]
  -[CSTeachableMomentsContainerViewController _removeResetAnimationForKeyPath:onLayer:]
  -[CSTeachableMomentsContainerViewController _homeAffordanceClickRecognized:]
  -[CSTeachableMomentsContainerViewController _setControlCenterTutorsHidden:]
  -[CSTeachableMomentsContainerViewController _moveUpTimerForFiringAfterDelay:]
  -[CSTeachableMomentsContainerViewController setUpdateTextLabelOnNextAnimation:]
  -[CSTeachableMomentsContainerViewController _cancelTimerAndResetAnimation]
  -[CSTeachableMomentsContainerViewController _setupTimerWithDelay:]
  -[CSTeachableMomentsContainerViewController _updateTextLabelIfNeeded]
  -[CSTeachableMomentsContainerViewController _addHomeAffordanceAnimation]
  -[CSTeachableMomentsContainerViewController _addTextAnimation]
  -[CSTeachableMomentsContainerViewController _shouldTeachAboutControlCenter]
  -[CSTeachableMomentsContainerViewController _addControlCenterGrabberAnimation]
  -[CSTeachableMomentsContainerViewController _addControlCenterGlyphAnimation]
  -[CSTeachableMomentsContainerViewController setFireOffAnimationTimer:]
  -[CSTeachableMomentsContainerViewController fireOffAnimationTimer]
  -[CSTeachableMomentsContainerViewController _addHomeAffordanceResetAnimation]
  -[CSTeachableMomentsContainerViewController _addTextResetAnimation]
  -[CSTeachableMomentsContainerViewController _addControlCenterGrabberResetAnimation]
  -[CSTeachableMomentsContainerViewController _addControlCenterGlyphResetAnimation]
  -[CSTeachableMomentsContainerViewController _removeNormalAnimationsForKeyPath:onLayer:]
  -[CSTeachableMomentsContainerViewController _homeAffordancePositionAnimationWithDuration:beginTime:]
  -[CSTeachableMomentsContainerViewController _addResetAnimationForKeyPath:onLayer:]
  -[CSTeachableMomentsContainerViewController _textPositionAnimationWithDuration:beginTime:]
  -[CSTeachableMomentsContainerViewController _textAlphaAnimationWithDuration:beginTime:]
  -[CSTeachableMomentsContainerViewController _controlCenterGrabberPositionAnimationWithDuration:beginTime:]
  -[CSTeachableMomentsContainerViewController _controlCenterGrabberAlphaAnimationWithDuration:beginTime:]
  -[CSTeachableMomentsContainerViewController _controlCenterGlyphAlphaAnimationWithDuration:beginTime:]
  -[CSTeachableMomentsContainerViewController updateTextLabelOnNextAnimation]
  -[CSTeachableMomentsContainerViewController cachedLegibilityLabels]
  -[CSTeachableMomentsContainerViewController setCachedLegibilityLabels:]
  -[CSTeachableMomentsContainerViewController controlCenterCoachingIsHidden]
  -[CSTeachableMomentsContainerViewController setControlCenterCoachingIsHidden:]
  -[CSTeachableMomentsContainerViewController homeAffordanceClickGestureRecognizer]
  -[CSTeachableMomentsContainerViewController setHomeAffordanceClickGestureRecognizer:]


CSBounceSettings : PTSettings /System/Library/PrivateFrameworks/UserNotificationsUIKit.framework/UserNotificationsUIKit
 @property  double gravity
 @property  double velocity
 @property  double elasticity
 @property  double friction
 @property  double resistance
 @property  double multiplier
 @property  double minVelocityToAssist
 @property  double maxVelocityToAssist
 @property  double maxVelocityAssistance

  // instance methods
  -[CSBounceSettings setDefaultValues]
  -[CSBounceSettings friction]
  -[CSBounceSettings multiplier]
  -[CSBounceSettings setVelocity:]
  -[CSBounceSettings velocity]
  -[CSBounceSettings gravity]
  -[CSBounceSettings elasticity]
  -[CSBounceSettings resistance]
  -[CSBounceSettings setFriction:]
  -[CSBounceSettings setGravity:]
  -[CSBounceSettings setMultiplier:]
  -[CSBounceSettings setElasticity:]
  -[CSBounceSettings setResistance:]
  -[CSBounceSettings setMinVelocityToAssist:]
  -[CSBounceSettings setMaxVelocityToAssist:]
  -[CSBounceSettings setMaxVelocityAssistance:]
  -[CSBounceSettings minVelocityToAssist]
  -[CSBounceSettings maxVelocityToAssist]
  -[CSBounceSettings maxVelocityAssistance]


CSEvent : NSObject /usr/lib/libSystem.B.dylib
 @property  long long type
 @property  BOOL consumable
 @property  BOOL stateless
 @property  NSNumber *value

  // class methods
  +[CSEvent eventWithType:]

  // instance methods
  -[CSEvent setType:]
  -[CSEvent .cxx_destruct]
  -[CSEvent succinctDescriptionBuilder]
  -[CSEvent type]
  -[CSEvent succinctDescription]
  -[CSEvent setValue:]
  -[CSEvent value]
  -[CSEvent descriptionWithMultilinePrefix:]
  -[CSEvent descriptionBuilderWithMultilinePrefix:]
  -[CSEvent isConsumable]
  -[CSEvent isStateless]
  -[CSEvent setConsumable:]
  -[CSEvent setStateless:]


CSDashBoardQuickActionsButtonSettings : PTSettings /System/Library/PrivateFrameworks/UserNotificationsUIKit.framework/UserNotificationsUIKit
 @property  BOOL showsButtons
 @property  BOOL colorsBackground
 @property  double topOutset
 @property  double leadingOutset
 @property  double trailingOutset
 @property  double bottomOutset

  // class methods
  +[CSDashBoardQuickActionsButtonSettings settingsControllerModule]

  // instance methods
  -[CSDashBoardQuickActionsButtonSettings topOutset]
  -[CSDashBoardQuickActionsButtonSettings setDefaultValues]
  -[CSDashBoardQuickActionsButtonSettings setShowsButtons:]
  -[CSDashBoardQuickActionsButtonSettings setColorsBackground:]
  -[CSDashBoardQuickActionsButtonSettings setTopOutset:]
  -[CSDashBoardQuickActionsButtonSettings leadingOutset]
  -[CSDashBoardQuickActionsButtonSettings trailingOutset]
  -[CSDashBoardQuickActionsButtonSettings bottomOutset]
  -[CSDashBoardQuickActionsButtonSettings setBottomOutset:]
  -[CSDashBoardQuickActionsButtonSettings showsButtons]
  -[CSDashBoardQuickActionsButtonSettings colorsBackground]
  -[CSDashBoardQuickActionsButtonSettings setLeadingOutset:]
  -[CSDashBoardQuickActionsButtonSettings setTrailingOutset:]


CSContentCutoutBoundsCalculator : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CSContentCutoutBoundsCalculator normalizedContentCutoutBoundsForOrientation:]
  +[CSContentCutoutBoundsCalculator contentCutoutBoundsForPortrait:]
  +[CSContentCutoutBoundsCalculator _screenBoundsForPortrait:]
  +[CSContentCutoutBoundsCalculator contentCutoutBoundsForOrientation:]
  +[CSContentCutoutBoundsCalculator contentCutoutBoundsForInterfaceOrientation:]


CSRemoteContentSession : NSObject /usr/lib/libSystem.B.dylib <CSRemoteContentModalViewControllerDelegate>
 @property  <CSRemoteContentSessionHostDelegate> *hostDelegate
 @property  <CSRemoteContentSessionPreferencesProvider> *preferencesProvider
 @property  SBSRemoteContentDefinition *definition
 @property  <SBFAuthenticationStatusProvider> *authenticationStatusProvider
 @property  NSString *sessionID
 @property  BOOL valid
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CSRemoteContentSession sessionID]
  -[CSRemoteContentSession activate]
  -[CSRemoteContentSession _errorWithCode:]
  -[CSRemoteContentSession .cxx_destruct]
  -[CSRemoteContentSession _activate]
  -[CSRemoteContentSession definition]
  -[CSRemoteContentSession isValid]
  -[CSRemoteContentSession _invalidateWithError:]
  -[CSRemoteContentSession hostDelegate]
  -[CSRemoteContentSession authenticationStatusProvider]
  -[CSRemoteContentSession _reactivate]
  -[CSRemoteContentSession setHostDelegate:]
  -[CSRemoteContentSession _invalidateWithErrorCode:]
  -[CSRemoteContentSession _invalidateForReason:error:completion:]
  -[CSRemoteContentSession remoteContentModalViewController:requestsDismissalForType:completion:]
  -[CSRemoteContentSession remoteContentModalViewController:didUpdateWithPreferences:]
  -[CSRemoteContentSession remoteContentModalViewController:didTerminateWithError:]
  -[CSRemoteContentSession initWithDefinition:authenticationStatusProvider:]
  -[CSRemoteContentSession preferencesProvider]
  -[CSRemoteContentSession setPreferencesProvider:]


CSLockScreenSettings : PTSettings /System/Library/PrivateFrameworks/UserNotificationsUIKit.framework/UserNotificationsUIKit
 @property  double minTouchIDDuration
 @property  double idleUntilShimmerDuration
 @property  double restToOpenDuration
 @property  double restToOpenIdleDuration
 @property  BOOL autoDismissUnlockedLockScreen
 @property  BOOL showNowPlaying
 @property  BOOL showUserPicture
 @property  BOOL showLogoutButton
 @property  BOOL showThermalTrap
 @property  BOOL showBlockedUI
 @property  BOOL showResetRestore
 @property  BOOL showEmergencyDialer
 @property  BOOL showRegionsDebugView
 @property  PTOutlet *addNotificationOutlet
 @property  CSBounceSettings *verticalBounceSettings
 @property  CSBounceSettings *horizontalBounceSettings
 @property  CSLockScreenPasscodeSettings *passcodeSettings
 @property  CSLockScreenMesaSettings *mesaSettings
 @property  CSLockScreenPearlSettings *pearlSettings
 @property  CSCoverSheetTransitionsSettings *coverSheetTransitionsSettings
 @property  CSHorizontalScrollFailureRecognizerSettings *horizontalScrollFailureRecognizerSettings
 @property  CSDashBoardScrollModifierSettings *dashBoardScrollModifierSettings
 @property  CSDashBoardNotificationVersusPagingScrollSettings *dashBoardNotificationScrollSettings
 @property  CSDashBoardQuickActionsButtonSettings *dashBoardQuickActionButtonSettings
 @property  CSDashBoardRemoteContentSettings *dashBoardRemoteContentSettings
 @property  CSCoverSheetDismissGestureSettings *coverSheetDismissGestureSettings
 @property  SBFAnimationSettings *unlockToPhoneWallpaperOutSettings
 @property  SBFAnimationSettings *unlockToPhoneWallpaperInSettings
 @property  SBFAnimationSettings *unlockWallpaperOutSettings
 @property  SBFAnimationSettings *unlockWallpaperInSettings
 @property  CSLockScreenTestPluginSettings *testPluginSettings
 @property  double nowPlayingHeight
 @property  double mainToCameraViewSlideCompletionPercentage
 @property  double mainToTodayViewSlideCompletionPercentage
 @property  double unlockSlideForIdleTimerDisabledPercentage
 @property  double unlockSlideForIdleTimerDisabledPercentageIPad
 @property  double notificationScrollForIdleTimerDisabledOffset
 @property  double notificationScrollForIdleTimerDisabledOffsetIPad
 @property  double appGrabberSlideUpVelocityThreshold
 @property  double unlockPasscodeThreshold
 @property  double unlockRubberBandThreshold
 @property  double unlockRubberBandFeedbackInterval
 @property  long long unlockRubberBandFeedbackIntensity
 @property  double lockJiggleHapticDelay
 @property  double lockJiggleAnimationDelay
 @property  double unlockSwipeWallpaperAlpha
 @property  BOOL alwaysPutPluginsBelowScrollView
 @property  BOOL killsInsecureDrawingApps
 @property  BOOL prewarmsCameraHardwareOnSwipe
 @property  BOOL prewarmsCameraHardwareOnTap
 @property  BOOL prelaunchesCameraAppOnSwipe
 @property  BOOL prelaunchesCameraAppOnTap
 @property  double cameraPrewarmThresholdOnSwipe
 @property  double cameraPrelaunchThresholdOnSwipe
 @property  double cameraPrewarmDebounceTimeInterval
 @property  double cameraPrewarmAutoCancelTimeInterval

  // class methods
  +[CSLockScreenSettings settingsControllerModule]

  // instance methods
  -[CSLockScreenSettings setDefaultValues]
  -[CSLockScreenSettings setUnlockSlideForIdleTimerDisabledPercentageIPad:]
  -[CSLockScreenSettings setTestPluginSettings:]
  -[CSLockScreenSettings unlockPasscodeThreshold]
  -[CSLockScreenSettings setIdleUntilShimmerDuration:]
  -[CSLockScreenSettings setNotificationScrollForIdleTimerDisabledOffsetIPad:]
  -[CSLockScreenSettings setCameraPrewarmAutoCancelTimeInterval:]
  -[CSLockScreenSettings setPrelaunchesCameraAppOnSwipe:]
  -[CSLockScreenSettings setShowEmergencyDialer:]
  -[CSLockScreenSettings autoDismissUnlockedLockScreen]
  -[CSLockScreenSettings cameraPrewarmThresholdOnSwipe]
  -[CSLockScreenSettings unlockRubberBandFeedbackInterval]
  -[CSLockScreenSettings setDashBoardRemoteContentSettings:]
  -[CSLockScreenSettings killsInsecureDrawingApps]
  -[CSLockScreenSettings notificationScrollForIdleTimerDisabledOffsetIPad]
  -[CSLockScreenSettings setUnlockWallpaperOutSettings:]
  -[CSLockScreenSettings setUnlockRubberBandFeedbackIntensity:]
  -[CSLockScreenSettings setMinTouchIDDuration:]
  -[CSLockScreenSettings restToOpenDuration]
  -[CSLockScreenSettings showEmergencyDialer]
  -[CSLockScreenSettings setShowLogoutButton:]
  -[CSLockScreenSettings setPrewarmsCameraHardwareOnSwipe:]
  -[CSLockScreenSettings setKillsInsecureDrawingApps:]
  -[CSLockScreenSettings setPrewarmsCameraHardwareOnTap:]
  -[CSLockScreenSettings setUnlockToPhoneWallpaperOutSettings:]
  -[CSLockScreenSettings showBlockedUI]
  -[CSLockScreenSettings setUnlockRubberBandFeedbackInterval:]
  -[CSLockScreenSettings setRestToOpenIdleDuration:]
  -[CSLockScreenSettings setCameraPrewarmThresholdOnSwipe:]
  -[CSLockScreenSettings setCoverSheetTransitionsSettings:]
  -[CSLockScreenSettings .cxx_destruct]
  -[CSLockScreenSettings setShowUserPicture:]
  -[CSLockScreenSettings setPasscodeSettings:]
  -[CSLockScreenSettings prelaunchesCameraAppOnSwipe]
  -[CSLockScreenSettings setAppGrabberSlideUpVelocityThreshold:]
  -[CSLockScreenSettings setUnlockToPhoneWallpaperInSettings:]
  -[CSLockScreenSettings showNowPlaying]
  -[CSLockScreenSettings mainToCameraViewSlideCompletionPercentage]
  -[CSLockScreenSettings notificationScrollForIdleTimerDisabledOffset]
  -[CSLockScreenSettings cameraPrewarmDebounceTimeInterval]
  -[CSLockScreenSettings prewarmsCameraHardwareOnSwipe]
  -[CSLockScreenSettings addNotificationOutlet]
  -[CSLockScreenSettings setShowResetRestore:]
  -[CSLockScreenSettings unlockToPhoneWallpaperInSettings]
  -[CSLockScreenSettings restToOpenIdleDuration]
  -[CSLockScreenSettings setMesaSettings:]
  -[CSLockScreenSettings setShowNowPlaying:]
  -[CSLockScreenSettings unlockSlideForIdleTimerDisabledPercentageIPad]
  -[CSLockScreenSettings coverSheetTransitionsSettings]
  -[CSLockScreenSettings unlockSlideForIdleTimerDisabledPercentage]
  -[CSLockScreenSettings appGrabberSlideUpVelocityThreshold]
  -[CSLockScreenSettings showResetRestore]
  -[CSLockScreenSettings setNotificationScrollForIdleTimerDisabledOffset:]
  -[CSLockScreenSettings showLogoutButton]
  -[CSLockScreenSettings mainToTodayViewSlideCompletionPercentage]
  -[CSLockScreenSettings pearlSettings]
  -[CSLockScreenSettings setDashBoardQuickActionButtonSettings:]
  -[CSLockScreenSettings cameraPrewarmAutoCancelTimeInterval]
  -[CSLockScreenSettings dashBoardQuickActionButtonSettings]
  -[CSLockScreenSettings setRestToOpenDuration:]
  -[CSLockScreenSettings setUnlockPasscodeThreshold:]
  -[CSLockScreenSettings lockJiggleAnimationDelay]
  -[CSLockScreenSettings prelaunchesCameraAppOnTap]
  -[CSLockScreenSettings unlockRubberBandFeedbackIntensity]
  -[CSLockScreenSettings setAutoDismissUnlockedLockScreen:]
  -[CSLockScreenSettings setVerticalBounceSettings:]
  -[CSLockScreenSettings verticalBounceSettings]
  -[CSLockScreenSettings setCoverSheetDismissGestureSettings:]
  -[CSLockScreenSettings setHorizontalScrollFailureRecognizerSettings:]
  -[CSLockScreenSettings coverSheetDismissGestureSettings]
  -[CSLockScreenSettings unlockWallpaperInSettings]
  -[CSLockScreenSettings setCameraPrewarmDebounceTimeInterval:]
  -[CSLockScreenSettings setUnlockSlideForIdleTimerDisabledPercentage:]
  -[CSLockScreenSettings setShowThermalTrap:]
  -[CSLockScreenSettings setPearlSettings:]
  -[CSLockScreenSettings setDashBoardScrollModifierSettings:]
  -[CSLockScreenSettings setUnlockWallpaperInSettings:]
  -[CSLockScreenSettings testPluginSettings]
  -[CSLockScreenSettings setShowRegionsDebugView:]
  -[CSLockScreenSettings passcodeSettings]
  -[CSLockScreenSettings unlockWallpaperOutSettings]
  -[CSLockScreenSettings minTouchIDDuration]
  -[CSLockScreenSettings setMainToTodayViewSlideCompletionPercentage:]
  -[CSLockScreenSettings setLockJiggleAnimationDelay:]
  -[CSLockScreenSettings cameraPrelaunchThresholdOnSwipe]
  -[CSLockScreenSettings dashBoardNotificationScrollSettings]
  -[CSLockScreenSettings setLockJiggleHapticDelay:]
  -[CSLockScreenSettings setAlwaysPutPluginsBelowScrollView:]
  -[CSLockScreenSettings dashBoardScrollModifierSettings]
  -[CSLockScreenSettings mesaSettings]
  -[CSLockScreenSettings setUnlockRubberBandThreshold:]
  -[CSLockScreenSettings dashBoardRemoteContentSettings]
  -[CSLockScreenSettings setDashBoardNotificationScrollSettings:]
  -[CSLockScreenSettings unlockRubberBandThreshold]
  -[CSLockScreenSettings lockJiggleHapticDelay]
  -[CSLockScreenSettings showUserPicture]
  -[CSLockScreenSettings setShowBlockedUI:]
  -[CSLockScreenSettings unlockToPhoneWallpaperOutSettings]
  -[CSLockScreenSettings setCameraPrelaunchThresholdOnSwipe:]
  -[CSLockScreenSettings alwaysPutPluginsBelowScrollView]
  -[CSLockScreenSettings setAddNotificationOutlet:]
  -[CSLockScreenSettings horizontalScrollFailureRecognizerSettings]
  -[CSLockScreenSettings prewarmsCameraHardwareOnTap]
  -[CSLockScreenSettings idleUntilShimmerDuration]
  -[CSLockScreenSettings setHorizontalBounceSettings:]
  -[CSLockScreenSettings showRegionsDebugView]
  -[CSLockScreenSettings unlockSwipeWallpaperAlpha]
  -[CSLockScreenSettings setNowPlayingHeight:]
  -[CSLockScreenSettings showThermalTrap]
  -[CSLockScreenSettings setPrelaunchesCameraAppOnTap:]
  -[CSLockScreenSettings nowPlayingHeight]
  -[CSLockScreenSettings setUnlockSwipeWallpaperAlpha:]
  -[CSLockScreenSettings setMainToCameraViewSlideCompletionPercentage:]
  -[CSLockScreenSettings horizontalBounceSettings]


CSComponent : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  long long type
 @property  unsigned long properties
 @property  NSString *identifier
 @property  long long priority
 @property  BOOL hidden
 @property  long long flag
 @property  {CGPoint=dd} offset
 @property  NSString *string
 @property  UIColor *color
 @property  NSNumber *value
 @property  UIView *view
 @property  _UILegibilitySettings *legibilitySettings
 @property  double alpha

  // class methods
  +[CSComponent statusBar]
  +[CSComponent quickActions]
  +[CSComponent dateView]
  +[CSComponent pageContent]
  +[CSComponent proudLock]
  +[CSComponent footerStatusLabel]
  +[CSComponent homeAffordance]
  +[CSComponent footerCallToActionLabel]
  +[CSComponent statusBarGradient]
  +[CSComponent scalableContent]
  +[CSComponent controlCenterGrabber]
  +[CSComponent tinting]
  +[CSComponent whitePoint]
  +[CSComponent poseidon]
  +[CSComponent componentWithType:]
  +[CSComponent statusBarBackground]
  +[CSComponent pageControl]
  +[CSComponent wallpaper]
  +[CSComponent slideableContent]

  // instance methods
  -[CSComponent copyWithZone:]
  -[CSComponent setView:]
  -[CSComponent string:]
  -[CSComponent value:]
  -[CSComponent init]
  -[CSComponent legibilitySettings]
  -[CSComponent setFlag:]
  -[CSComponent flag:]
  -[CSComponent setType:]
  -[CSComponent .cxx_destruct]
  -[CSComponent setProperties:]
  -[CSComponent alpha]
  -[CSComponent setOffset:]
  -[CSComponent succinctDescriptionBuilder]
  -[CSComponent setIdentifier:]
  -[CSComponent color]
  -[CSComponent identifier]
  -[CSComponent setLegibilitySettings:]
  -[CSComponent view]
  -[CSComponent type]
  -[CSComponent setString:]
  -[CSComponent succinctDescription]
  -[CSComponent priority:]
  -[CSComponent legibilitySettings:]
  -[CSComponent identifier:]
  -[CSComponent offset]
  -[CSComponent setValue:]
  -[CSComponent isEqual:]
  -[CSComponent string]
  -[CSComponent flag]
  -[CSComponent hasValueForProperty:]
  -[CSComponent setPriority:]
  -[CSComponent value]
  -[CSComponent hidden:]
  -[CSComponent setColor:]
  -[CSComponent priority]
  -[CSComponent properties]
  -[CSComponent setAlpha:]
  -[CSComponent resetProperties:]
  -[CSComponent offset:]
  -[CSComponent descriptionWithMultilinePrefix:]
  -[CSComponent setHidden:]
  -[CSComponent resetAllProperties]
  -[CSComponent descriptionBuilderWithMultilinePrefix:]
  -[CSComponent isHidden]
  -[CSComponent view:]


CSCombinedListViewController : CSCoverSheetViewControllerBase <CSNotificationAdjunctListViewControllerDelegate, SBFMotionGestureObserver, NCNotificationStructuredListContentObserver, CSStatusBarBackgroundIntersecting, PTSettingsKeyObserver, CSHomeGestureParticipating, CSDNDBedtimeControllerObserver, DNDStateUpdateListener, CSDNDBedtimeGreetingDelegate, CSApplicationInformationObserving, NCNotificationStructuredListViewControllerDelegate, SBUICoronaAnimationControllerParticipant, _UIGestureStudyInteractionDelegate, CSProximitySensorProviderObserver, CSNotificationDestination, CSDateViewScrolling, CSAppearanceProviding>
 @property  UIViewController *notificationListViewController
 @property  UIScrollView *notificationListScrollView
 @property  CSNotificationAdjunctListViewController *adjunctListViewController
 @property  NCNotificationRequest *activeRaiseToListenNotificationRequest
 @property  DNDEventBehaviorResolutionService *dndEventBehaviorResolutionService
 @property  DNDStateService *dndStateService
 @property  BOOL dndNotificationDeliveryDelayActive
 @property  BOOL dndDrivingModeActive
 @property  CSLockScreenSettings *lockScreenSettings
 @property  SBFTouchPassThroughView *debugViewLeft
 @property  SBFTouchPassThroughView *debugViewRight
 @property  BOOL hasUserInteraction
 @property  BOOL disableScrolling
 @property  BOOL disableBackgroundAnimation
 @property  BOOL footerCallToActionLabelHidden
 @property  BOOL notificationListHidden
 @property  BOOL dismissGestureDisabled
 @property  BOOL presentationDirtiedAppearance
 @property  BOOL hasContent
 @property  BOOL hasVisibleContentToReveal
 @property  BOOL showingMediaControls
 @property  NSString *listViewControllerBackgroundGroupName
 @property  CSLayoutStrategy *layoutStrategy
 @property  <CSCombinedListViewControllerDelegate> *delegate
 @property  <CSPageViewControllerProtocol> *page
 @property  <SBFActionProviding> *contentActionProvider
 @property  <CSApplicationInforming> *applicationInformer
 @property  <CSHomeAffordanceControlling> *homeAffordanceController
 @property  <CSUnlockRequesting> *unlockRequester
 @property  <CSNotificationPresenting> *notificationPresenter
 @property  <SBFAuthenticationStatusProvider> *authenticationStatusProvider
 @property  <CSProximitySensorProviding> *proximitySensorProvider
 @property  <CSDeviceOrientationProviding> *deviceOrientationProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  double distanceFromBarToContent
 @property  double topContentInset
 @property  <CSNotificationDispatcher> *dispatcher
 @property  NSString *coverSheetIdentifier
 @property  long long participantState
 @property  double clippingOffset
 @property  NSString *appearanceIdentifier
 @property  long long backgroundStyle
 @property  NSSet *components
 @property  _UILegibilitySettings *legibilitySettings
 @property  UIColor *backgroundColor

  // instance methods
  -[CSCombinedListViewController dismissNotificationInLongLookAnimated:]
  -[CSCombinedListViewController notificationsLoadedForSectionIdentifier:]
  -[CSCombinedListViewController presentationPriority]
  -[CSCombinedListViewController _addStateCaptureHandlers]
  -[CSCombinedListViewController viewDidLoad]
  -[CSCombinedListViewController coronaAnimationController:willAnimateCoronaTransitionWithAnimator:]
  -[CSCombinedListViewController page]
  -[CSCombinedListViewController setDndEventBehaviorResolutionService:]
  -[CSCombinedListViewController postNotificationRequest:]
  -[CSCombinedListViewController isPresentingNotificationInLongLook]
  -[CSCombinedListViewController setDispatcher:]
  -[CSCombinedListViewController _testingExpandCoalescedBundleForNotificationRequest:withCompletion:]
  -[CSCombinedListViewController dispatcher]
  -[CSCombinedListViewController isShowingMediaControls]
  -[CSCombinedListViewController _shouldDNDDelayDeliveryOfNotificationRequest:]
  -[CSCombinedListViewController isNotificationContentExtensionVisible:]
  -[CSCombinedListViewController _identifierForNotificationRequest:]
  -[CSCombinedListViewController defaultRestingOffsetExcludingAdjunct]
  -[CSCombinedListViewController _isClockSnoozeAlarmNotificationRequest:]
  -[CSCombinedListViewController withdrawNotificationRequest:]
  -[CSCombinedListViewController _screenTimeExpirationApplicationsDidChange:]
  -[CSCombinedListViewController hasVisibleContentToReveal]
  -[CSCombinedListViewController notificationListViewController]
  -[CSCombinedListViewController updateNotificationSectionSettings:previousSectionSettings:]
  -[CSCombinedListViewController topContentInset]
  -[CSCombinedListViewController settings:changedValueForKey:]
  -[CSCombinedListViewController notificationStructuredListViewController:requestsClearingNotificationRequests:]
  -[CSCombinedListViewController _allowNotificationsRevealPolicy]
  -[CSCombinedListViewController dndBedtimeControllerActiveStateDidChange:]
  -[CSCombinedListViewController notificationStructuredListViewController:presentingLongLook:]
  -[CSCombinedListViewController rebuildEverythingForReason:]
  -[CSCombinedListViewController isDndNotificationDeliveryDelayActive]
  -[CSCombinedListViewController setPresentationDirtiedAppearance:]
  -[CSCombinedListViewController setLayoutStrategy:]
  -[CSCombinedListViewController notificationPresenter]
  -[CSCombinedListViewController _stopScreenOnTimer]
  -[CSCombinedListViewController _minListHeightForPadding]
  -[CSCombinedListViewController setAdjunctListViewController:]
  -[CSCombinedListViewController homeGestureParticipantOwningHomeGestureDidChange:ownsHomeGesture:]
  -[CSCombinedListViewController notificationStructuredListViewController:requestPermissionToExecuteAction:forNotificationRequest:withParameters:completion:]
  -[CSCombinedListViewController aggregateBehavior:]
  -[CSCombinedListViewController shouldAutomaticallyForwardAppearanceMethods]
  -[CSCombinedListViewController _dismissDNDBedtimeGreetingViewAnimated:]
  -[CSCombinedListViewController setDebugViewLeft:]
  -[CSCombinedListViewController _setDismissGestureDisabled:forReason:]
  -[CSCombinedListViewController setLockScreenSettings:]
  -[CSCombinedListViewController adjunctListViewController:didUpdateWithSize:]
  -[CSCombinedListViewController updateNotificationRequest:]
  -[CSCombinedListViewController aggregateAppearance:]
  -[CSCombinedListViewController presentationType]
  -[CSCombinedListViewController _layoutListView]
  -[CSCombinedListViewController migrateIncomingNotificationsToNotificationCenter]
  -[CSCombinedListViewController _statusBarHeight]
  -[CSCombinedListViewController notificationStructuredListViewController:setDeliverQuietly:forSectionIdentifier:]
  -[CSCombinedListViewController dealloc]
  -[CSCombinedListViewController _setQuickActionsHidden:forReason:]
  -[CSCombinedListViewController notificationStructuredListViewController:requestsAuthenticationAndPerformBlock:]
  -[CSCombinedListViewController lockScreenSettings]
  -[CSCombinedListViewController scrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[CSCombinedListViewController notificationUsageTrackingStateForNotificationStructuredListViewController:]
  -[CSCombinedListViewController .cxx_destruct]
  -[CSCombinedListViewController structuredListContentChanged:]
  -[CSCombinedListViewController _updateFaceDetectAssertion]
  -[CSCombinedListViewController _setHasUserInteraction:]
  -[CSCombinedListViewController adjunctListViewController]
  -[CSCombinedListViewController proximitySensorProvider]
  -[CSCombinedListViewController notificationStructuredListViewControllerDidScrollToRevealNotificationHistory:]
  -[CSCombinedListViewController notificationStructuredListViewController:isClockNotificationRequest:]
  -[CSCombinedListViewController _shouldScreenTimeSuppressNotificationsForBundleIdentifier:]
  -[CSCombinedListViewController updateForLegibilitySettings:]
  -[CSCombinedListViewController _hasUserInteraction]
  -[CSCombinedListViewController _setFooterCallToActionLabelHidden:forReason:]
  -[CSCombinedListViewController layoutStrategy]
  -[CSCombinedListViewController clippingOffset]
  -[CSCombinedListViewController notificationStructuredListViewControllerShouldAllowNotificationHistoryReveal:]
  -[CSCombinedListViewController isDndDrivingModeActive]
  -[CSCombinedListViewController notificationStructuredListViewController:setAllowsCriticalAlerts:forSectionIdentifier:]
  -[CSCombinedListViewController updateAppearanceForStatusBarBackgroundHidden:]
  -[CSCombinedListViewController _threadIdentifierForNotificationRequest:]
  -[CSCombinedListViewController notificationStructuredListViewController:requestsClearingNotificationRequestsInSections:]
  -[CSCombinedListViewController notificationStructuredListViewController:didEndUserInteractionWithNotificationViewController:]
  -[CSCombinedListViewController setHomeAffordanceController:]
  -[CSCombinedListViewController viewWillLayoutSubviews]
  -[CSCombinedListViewController _updateNotificationLongPressProximitySensorAssertion]
  -[CSCombinedListViewController setActiveRaiseToListenNotificationRequest:]
  -[CSCombinedListViewController forceNotificationHistoryRevealed:animated:]
  -[CSCombinedListViewController _updateProximitySensorAssertion:wantsAssertion:forReason:]
  -[CSCombinedListViewController listViewControllerBackgroundGroupName]
  -[CSCombinedListViewController _suggestedListViewFrame]
  -[CSCombinedListViewController setPage:]
  -[CSCombinedListViewController debugViewLeft]
  -[CSCombinedListViewController disableBackgroundAnimation]
  -[CSCombinedListViewController setContentActionProvider:]
  -[CSCombinedListViewController _allowsDateViewOrProudLockScroll]
  -[CSCombinedListViewController _sanitizedContentOffset:forContentInset:]
  -[CSCombinedListViewController effectiveContentSizeForScrollView:]
  -[CSCombinedListViewController setNotificationPresenter:]
  -[CSCombinedListViewController setApplicationInformer:]
  -[CSCombinedListViewController setAuthenticationStatusProvider:]
  -[CSCombinedListViewController _updateCaptureOnlyMaterialView]
  -[CSCombinedListViewController hasPresentationDirtiedAppearance]
  -[CSCombinedListViewController _liftToWakeGestureDetected]
  -[CSCombinedListViewController setDebugViewRight:]
  -[CSCombinedListViewController initWithNibName:bundle:]
  -[CSCombinedListViewController _shouldPadBottomSpacing]
  -[CSCombinedListViewController _handleBiometricEvent:]
  -[CSCombinedListViewController scrollViewWillBeginDragging:]
  -[CSCombinedListViewController setDeviceOrientationProvider:]
  -[CSCombinedListViewController viewDidAppear:]
  -[CSCombinedListViewController _adjunctListViewSizeIncludingSpacing]
  -[CSCombinedListViewController footerCallToActionLabelHidden]
  -[CSCombinedListViewController _setDisableScrolling:]
  -[CSCombinedListViewController _disableScrolling]
  -[CSCombinedListViewController sizeToMimicForAdjunctListViewController:]
  -[CSCombinedListViewController notificationStructuredListViewController:requestsClearingFromIncomingSectionNotificationRequests:]
  -[CSCombinedListViewController groupNameBaseForAdjunctListViewController:]
  -[CSCombinedListViewController _toggleGestureStudyInteractionIfNecessary]
  -[CSCombinedListViewController dndStateService]
  -[CSCombinedListViewController handleEvent:]
  -[CSCombinedListViewController setUnlockRequester:]
  -[CSCombinedListViewController activeRaiseToListenNotificationRequest]
  -[CSCombinedListViewController presentationTransition]
  -[CSCombinedListViewController _determineMaxContentOffsetForContentInset:]
  -[CSCombinedListViewController dndEventBehaviorResolutionService]
  -[CSCombinedListViewController _testingNotificationRequestWithIdentifier:sectionIdentifier:]
  -[CSCombinedListViewController _updateDeviceWakeProximitySensorAssertion]
  -[CSCombinedListViewController setDndDrivingModeActive:]
  -[CSCombinedListViewController notificationStructuredListViewControllerDidSignificantUserInteraction:]
  -[CSCombinedListViewController _updateListViewContentInset]
  -[CSCombinedListViewController applicationInformer:updatedApplications:]
  -[CSCombinedListViewController setDndNotificationDeliveryDelayActive:]
  -[CSCombinedListViewController _startScreenOnTimer]
  -[CSCombinedListViewController hideHomeAffordanceAnimationSettingsForNotificationStructuredListViewController:]
  -[CSCombinedListViewController _lockButtonPressDetected]
  -[CSCombinedListViewController notificationStructuredListViewController:shouldFinishLongLookTransitionForNotificationRequest:trigger:withCompletionBlock:]
  -[CSCombinedListViewController notificationStructuredListViewControllerShouldAllowLongPressGesture:]
  -[CSCombinedListViewController _updatePresentation]
  -[CSCombinedListViewController scrollViewDidScroll:]
  -[CSCombinedListViewController setProximitySensorProvider:]
  -[CSCombinedListViewController _adjunctListViewSize]
  -[CSCombinedListViewController legibilitySettingsForNotificationStructuredListViewController:]
  -[CSCombinedListViewController notificationStructuredListViewController:requestsExecuteAction:forNotificationRequest:requestAuthentication:withParameters:completion:]
  -[CSCombinedListViewController viewWillAppear:]
  -[CSCombinedListViewController _setListHasContent:]
  -[CSCombinedListViewController notificationStructuredListViewController:didBeginUserInteractionWithNotificationViewController:]
  -[CSCombinedListViewController layoutListView]
  -[CSCombinedListViewController unhideHomeAffordanceAnimationSettingsForNotificationStructuredListViewController:]
  -[CSCombinedListViewController deviceOrientationProvider]
  -[CSCombinedListViewController contentActionProvider]
  -[CSCombinedListViewController dndBedtimeControllerShowGreetingStateDidChange:animated:]
  -[CSCombinedListViewController notificationListScrollView]
  -[CSCombinedListViewController updateAppearanceForHidden:offset:]
  -[CSCombinedListViewController _setDisableBackgroundAnimation:forReason:]
  -[CSCombinedListViewController unlockRequester]
  -[CSCombinedListViewController notificationListHidden]
  -[CSCombinedListViewController notificationStructuredListViewController:requestsSectionSettingsForSectionIdentifier:]
  -[CSCombinedListViewController setDelegate:]
  -[CSCombinedListViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[CSCombinedListViewController dismissGestureDisabled]
  -[CSCombinedListViewController proximitySensorProvider:objectWithinProximityDidChange:]
  -[CSCombinedListViewController _setNotificationListHidden:forReason:]
  -[CSCombinedListViewController hasContent]
  -[CSCombinedListViewController _performSelfCorrectingListViewAction:]
  -[CSCombinedListViewController notificationStructuredListViewController:shouldDelayDeliveryOfNotificationRequest:]
  -[CSCombinedListViewController settleHomeAffordanceAnimationBehaviorDescriptionForNotificationStructuredListViewController:]
  -[CSCombinedListViewController viewWillDisappear:]
  -[CSCombinedListViewController didReceiveRaiseGesture]
  -[CSCombinedListViewController _requestAuthenticationWithCompletion:]
  -[CSCombinedListViewController _listViewDefaultContentInsets]
  -[CSCombinedListViewController debugViewRight]
  -[CSCombinedListViewController _shouldFilterNotificationRequest:]
  -[CSCombinedListViewController _homeButtonPressDetected]
  -[CSCombinedListViewController notificationStructuredListViewController:keyboardAssertionForGestureWindow:]
  -[CSCombinedListViewController homeAffordanceController]
  -[CSCombinedListViewController notificationStructuredListViewController:setAllowsNotifications:forSectionIdentifier:]
  -[CSCombinedListViewController authenticationStatusProvider]
  -[CSCombinedListViewController setDndStateService:]
  -[CSCombinedListViewController applicationInformer]
  -[CSCombinedListViewController delegate]
  -[CSCombinedListViewController _updateRaiseGestureDetectionForNotificationRequest:]
  -[CSCombinedListViewController _evaluateShouldShowGreeting:animated:]
  -[CSCombinedListViewController notificationStructuredListViewController:shouldFilterNotificationRequest:]
  -[CSCombinedListViewController dismissDNDBedtimeGreetingViewController:animated:]
  -[CSCombinedListViewController metadataForTriggeredInteraction:]
  -[CSCombinedListViewController distanceFromBarToContent]
  -[CSCombinedListViewController interpretsViewAsContent:]
  -[CSCombinedListViewController interItemSpacingToMimicForAdjunctListViewController:]
  -[CSCombinedListViewController insetMarginsToMimicForAdjunctListViewController:]
  -[CSCombinedListViewController stateService:didReceiveDoNotDisturbStateUpdate:]
  -[CSCombinedListViewController performCustomTransitionToVisible:withAnimationSettings:completion:]
  -[CSCombinedListViewController _minInsetsToPushDateOffScreen]
  -[CSCombinedListViewController _testingCoalesceExpandedBundleForNotificationRequest:withCompletion:]
  -[CSCombinedListViewController resetContentOffset]
  -[CSCombinedListViewController notificationStructuredListViewController:shouldAllowInteractionsForNotificationRequest:]
  -[CSCombinedListViewController notificationStructuredListViewControllerShouldHintForDefaultAction:]
  -[CSCombinedListViewController wouldHandleButtonEvent:]


CSCoverSheetView : UIView /System/Library/Frameworks/QuartzCore.framework/QuartzCore <CSScrollViewDelegate, CSCoverSheetViewTransitionSource, CSScrollableView>
 @property  CSRegionsDebugView *regionsDebugView
 @property  <CSCoverSheetViewDelegate> *delegate
 @property  CSLayoutStrategy *layoutStrategy
 @property  SBFPagedScrollView *scrollView
 @property  NSArray *pageViews
 @property  UIView *mainPageView
 @property  BOOL ignoresOverscrollOnMainPage
 @property  SBFLockScreenDateView *dateView
 @property  CSFixedFooterView *fixedFooterView
 @property  UIView *proudLockContainerView
 @property  UIView *cameraCoveredView
 @property  UIView *poseidonContainerView
 @property  CSTeachableMomentsContainerView *teachableMomentsContainerView
 @property  CSQuickActionsView *quickActionsView
 @property  {CGPoint=dd} dateViewOffset
 @property  {CGPoint=dd} proudLockIconViewOffset
 @property  long long dateViewPageAlignment
 @property  BOOL forceDateViewCentered
 @property  BOOL dateViewIsVibrant
 @property  UIView *fakeStatusBar
 @property  unsigned long fakeStatusBarLevel
 @property  UIVisualEffectView *statusBarBackgroundView
 @property  long long statusBarBackgroundPageAlignment
 @property  UIGestureRecognizer *wallpaperGestureRecognizer
 @property  UITapGestureRecognizer *quickNoteGestureRecognizer
 @property  UIView *bottomPage
 @property  UIView *scalableContentView
 @property  UIView *slideableContentView
 @property  UIView *modalPresentationView
 @property  UIView *wakeEffectView
 @property  UIView<CSWallpaperView> *wallpaperEffectView
 @property  UIView *tintingView
 @property  SBUIBackgroundView *backgroundView
 @property  SBUIBackgroundView *bedtimeGreetingViewBackgroundView
 @property  UIColor *reduceTransparencyBackingColor
 @property  {CGPoint=dd} foregroundViewPositionOffset
 @property  UIView *referenceViewForBelowPresentationContext
 @property  _UILegibilitySettings *legibilitySettings
 @property  BOOL legibilitySettingsOverrideVibrancy
 @property  BOOL statusBarLegibilityEnabled
 @property  unsigned long targetPageIndexForDraggingEnded
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL transitioning
 @property  {?=d{?={?=dB}{?=dB}}q} transitionContext
 @property  NSString *coverSheetIdentifier
 @property  long long participantState

  // instance methods
  -[CSCoverSheetView scrollViewDidScroll:withContext:]
  -[CSCoverSheetView _indexOfMainPage]
  -[CSCoverSheetView coverSheetIdentifier]
  -[CSCoverSheetView wallpaperGestureRecognizer]
  -[CSCoverSheetView setDateView:]
  -[CSCoverSheetView setStatusBarBackgroundView:]
  -[CSCoverSheetView _orderSubviews]
  -[CSCoverSheetView resetScrollViewToMainPageAnimated:withAnimationSettings:withCompletion:]
  -[CSCoverSheetView forceDateViewCentered]
  -[CSCoverSheetView setQuickNoteGestureRecognizer:]
  -[CSCoverSheetView quickActionsView]
  -[CSCoverSheetView isTransitioning]
  -[CSCoverSheetView _layoutFullScreenViews]
  -[CSCoverSheetView fixedFooterView]
  -[CSCoverSheetView cancelTransition]
  -[CSCoverSheetView backgroundView]
  -[CSCoverSheetView setBackgroundView:]
  -[CSCoverSheetView setPoseidonContainerView:]
  -[CSCoverSheetView updateScalableContentTransformWithScale:]
  -[CSCoverSheetView modalPresentationView]
  -[CSCoverSheetView _layoutHigherSlideableContentView]
  -[CSCoverSheetView addScalableContentView]
  -[CSCoverSheetView viewControllerDidDisappear]
  -[CSCoverSheetView setBackgroundStyle:]
  -[CSCoverSheetView setFakeStatusBarLevel:]
  -[CSCoverSheetView dateView]
  -[CSCoverSheetView setWakeEffectView:]
  -[CSCoverSheetView legibilitySettings]
  -[CSCoverSheetView setLayoutStrategy:]
  -[CSCoverSheetView setMainPageView:]
  -[CSCoverSheetView initWithFrame:]
  -[CSCoverSheetView setStatusBarLegibilityEnabled:]
  -[CSCoverSheetView _currentTransitionContext]
  -[CSCoverSheetView _layoutWallpaperEffectView]
  -[CSCoverSheetView backgroundStyle]
  -[CSCoverSheetView setReferenceViewForBelowPresentationContext:]
  -[CSCoverSheetView cameraCoveredView]
  -[CSCoverSheetView _addScalableContentViewWithContentView:]
  -[CSCoverSheetView proudLockIconViewOffset]
  -[CSCoverSheetView dateViewPageAlignment]
  -[CSCoverSheetView reduceTransparencyBackingColor]
  -[CSCoverSheetView _setupWallpaperGestureOnScrollView:]
  -[CSCoverSheetView setDateViewIsVibrant:]
  -[CSCoverSheetView scrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[CSCoverSheetView .cxx_destruct]
  -[CSCoverSheetView _layoutQuickActionsView]
  -[CSCoverSheetView mainPageView]
  -[CSCoverSheetView updateUIForAuthenticated:]
  -[CSCoverSheetView setFakeStatusBar:]
  -[CSCoverSheetView _layoutAuthIndicator]
  -[CSCoverSheetView layoutStrategy]
  -[CSCoverSheetView _completedTransitionContextForPreviousTransitionContext:newTransitionContext:]
  -[CSCoverSheetView addScalableContentViewWithCustomContentView:]
  -[CSCoverSheetView scrollToPageAtIndex:animated:withCompletion:]
  -[CSCoverSheetView pageViews]
  -[CSCoverSheetView fakeStatusBar]
  -[CSCoverSheetView setWallpaperEffectView:]
  -[CSCoverSheetView scrollView]
  -[CSCoverSheetView legibilitySettingsOverrideVibrancy]
  -[CSCoverSheetView transitionContext]
  -[CSCoverSheetView setProudLockContainerView:]
  -[CSCoverSheetView setCameraCoveredView:]
  -[CSCoverSheetView updateStatusBarLegibilityForForceLegibilityGradientHidden:]
  -[CSCoverSheetView dateViewPresentationExtentForPageRelativeScrollOffset:]
  -[CSCoverSheetView setForceDateViewCentered:]
  -[CSCoverSheetView setPageViews:]
  -[CSCoverSheetView _addAuthIndicator]
  -[CSCoverSheetView teachableMomentsContainerView]
  -[CSCoverSheetView wakeEffectView]
  -[CSCoverSheetView setBottomPage:]
  -[CSCoverSheetView statusBarBackgroundPageAlignment]
  -[CSCoverSheetView setWallpaperGestureRecognizer:]
  -[CSCoverSheetView fakeStatusBarLevel]
  -[CSCoverSheetView setLegibilitySettings:]
  -[CSCoverSheetView beginTransitionToBackgroundStyle:]
  -[CSCoverSheetView scalableContentView]
  -[CSCoverSheetView scrollViewDidEndScrolling:]
  -[CSCoverSheetView _addSlideableContentView]
  -[CSCoverSheetView _layoutDateTimeViewClippingView]
  -[CSCoverSheetView statusBarLegibilityEnabled]
  -[CSCoverSheetView participantState]
  -[CSCoverSheetView setBedtimeGreetingViewBackgroundView:]
  -[CSCoverSheetView updateBackgroundStyleTransitionProgress:]
  -[CSCoverSheetView _addTintingView]
  -[CSCoverSheetView _layoutProudLockView]
  -[CSCoverSheetView scrollViewWillBeginDragging:]
  -[CSCoverSheetView _addBackgroundView]
  -[CSCoverSheetView targetPageIndexForDraggingEnded]
  -[CSCoverSheetView setScrollView:]
  -[CSCoverSheetView setFixedFooterView:]
  -[CSCoverSheetView _layoutStatusBarLegibilityView]
  -[CSCoverSheetView tintingView]
  -[CSCoverSheetView _overlayClippingFrame]
  -[CSCoverSheetView _setDateView:forTesting:]
  -[CSCoverSheetView setTintingView:]
  -[CSCoverSheetView wallpaperEffectView]
  -[CSCoverSheetView setReduceTransparencyBackingColor:]
  -[CSCoverSheetView setTargetPageIndexForDraggingEnded:]
  -[CSCoverSheetView setScalableContentView:]
  -[CSCoverSheetView dateViewIsVibrant]
  -[CSCoverSheetView _addHigherSlideableContentView]
  -[CSCoverSheetView setTeachableMomentsContainerView:]
  -[CSCoverSheetView slideableContentView]
  -[CSCoverSheetView resetScrollViewToMainPageAnimated:withCompletion:]
  -[CSCoverSheetView viewControllerWillAppear]
  -[CSCoverSheetView _layoutTeachableMomentsContainerView]
  -[CSCoverSheetView setStatusBarBackgroundPageAlignment:]
  -[CSCoverSheetView _addScalableContentView]
  -[CSCoverSheetView _layoutBottomPage]
  -[CSCoverSheetView bottomPage]
  -[CSCoverSheetView setIgnoresOverscrollOnMainPage:]
  -[CSCoverSheetView _updateLegibility]
  -[CSCoverSheetView _addStatusBarLegibilityView]
  -[CSCoverSheetView _layoutStatusBarBackgroundView]
  -[CSCoverSheetView dateViewOffset]
  -[CSCoverSheetView setForegroundViewPositionOffset:]
  -[CSCoverSheetView setQuickActionsView:]
  -[CSCoverSheetView _removeScalableContentView]
  -[CSCoverSheetView bedtimeGreetingViewBackgroundView]
  -[CSCoverSheetView _layoutFakeStatusBar]
  -[CSCoverSheetView setModalPresentationView:]
  -[CSCoverSheetView _layoutTintingView]
  -[CSCoverSheetView _setupQuickNoteGestureOnScrollView:]
  -[CSCoverSheetView proudLockContainerView]
  -[CSCoverSheetView _layoutDateView]
  -[CSCoverSheetView foregroundViewPositionOffset]
  -[CSCoverSheetView setDelegate:]
  -[CSCoverSheetView isTransitioningBackgroundStyle]
  -[CSCoverSheetView setLegibilitySettingsOverrideVibrancy:]
  -[CSCoverSheetView setRegionsDebugView:]
  -[CSCoverSheetView setDateViewOffset:]
  -[CSCoverSheetView scrollViewWillBeginScrolling:]
  -[CSCoverSheetView completeTransitionToBackgroundStyle:]
  -[CSCoverSheetView didAddSubview:]
  -[CSCoverSheetView setProudLockIconViewOffset:]
  -[CSCoverSheetView _scrollView:adjustedOffsetForOffset:translation:startPoint:locationInView:horizontalVelocity:verticalVelocity:]
  -[CSCoverSheetView statusBarBackgroundView]
  -[CSCoverSheetView delegate]
  -[CSCoverSheetView poseidonContainerView]
  -[CSCoverSheetView removeScalableContentView]
  -[CSCoverSheetView referenceViewForBelowPresentationContext]
  -[CSCoverSheetView _addDateTimeContainer]
  -[CSCoverSheetView ignoresOverscrollOnMainPage]
  -[CSCoverSheetView regionsDebugView]
  -[CSCoverSheetView layoutSubviews]
  -[CSCoverSheetView setDateViewPageAlignment:]
  -[CSCoverSheetView _dateViewFrameForPageAlignment:pageRelativeScrollOffset:outAlignmentPercent:]
  -[CSCoverSheetView coverSheetScrollView:shouldSetContentOffset:animated:]
  -[CSCoverSheetView scrollViewDidEndDragging:willDecelerate:]
  -[CSCoverSheetView quickNoteGestureRecognizer]
  -[CSCoverSheetView _addScrollView]


CSScrollView : SBFPagedScrollView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 @property  <CSScrollViewDelegate> *delegate

  // instance methods
  -[CSScrollView setContentOffset:animated:]
  -[CSScrollView setContentOffset:]


CSBatteryFillView : UIView /System/Library/Frameworks/QuartzCore.framework/QuartzCore
  // instance methods
  -[CSBatteryFillView setBatterySaverModeActive:]
  -[CSBatteryFillView drawRect:]
  -[CSBatteryFillView initWithFrame:isInternalBattery:lowBatteryLevel:]
  -[CSBatteryFillView setChargePercentage:]


CSBatteryChargingView : CSCoverSheetViewBase
 @property  BOOL batteryVisible
 @property  long long batteryCount
 @property  _UILegibilitySettings *legibilitySettings
 @property  double desiredVisibilityDuration
 @property  double horizontalGapBetweenBatteryAndPercentLabel
 @property  double alignmentPercent

  // class methods
  +[CSBatteryChargingView batteryChargingViewWithSingleBattery]
  +[CSBatteryChargingView batteryChargingViewWithDoubleBattery]
  +[CSBatteryChargingView maskImageNameForChargingBattery]
  +[CSBatteryChargingView maskImageNameForInternalChargingBattery]
  +[CSBatteryChargingView maskImageNameForExternalChargingBattery]

  // instance methods
  -[CSBatteryChargingView legibilitySettings]
  -[CSBatteryChargingView initWithFrame:]
  -[CSBatteryChargingView .cxx_destruct]
  -[CSBatteryChargingView setLegibilitySettings:]
  -[CSBatteryChargingView setAlignmentPercent:]
  -[CSBatteryChargingView alignmentPercent]
  -[CSBatteryChargingView batteryVisible]
  -[CSBatteryChargingView setBatteryVisible:]
  -[CSBatteryChargingView desiredVisibilityDuration]
  -[CSBatteryChargingView setPrimaryBatteryText:forBattery:]
  -[CSBatteryChargingView setSecondaryBatteryText:forBattery:]
  -[CSBatteryChargingView _chargePercentFont]
  -[CSBatteryChargingView batteryCount]
  -[CSBatteryChargingView performAnimation:completionHandler:]
  -[CSBatteryChargingView _updateChargeString:oldLabel:]
  -[CSBatteryChargingView horizontalGapBetweenBatteryAndPercentLabel]
  -[CSBatteryChargingView _batteryOriginYForBatteryHeight:]


_CSSingleBatteryChargingView : CSBatteryChargingView
 @property  {CGSize=dd} batterySize
 @property  BOOL horizontalLayoutNeeded

  // instance methods
  -[_CSSingleBatteryChargingView initWithFrame:]
  -[_CSSingleBatteryChargingView .cxx_destruct]
  -[_CSSingleBatteryChargingView setLegibilitySettings:]
  -[_CSSingleBatteryChargingView layoutSubviews]
  -[_CSSingleBatteryChargingView batteryVisible]
  -[_CSSingleBatteryChargingView setBatteryVisible:]
  -[_CSSingleBatteryChargingView desiredVisibilityDuration]
  -[_CSSingleBatteryChargingView setPrimaryBatteryText:forBattery:]
  -[_CSSingleBatteryChargingView _chargePercentFont]
  -[_CSSingleBatteryChargingView batteryCount]
  -[_CSSingleBatteryChargingView performAnimation:completionHandler:]
  -[_CSSingleBatteryChargingView _layoutBattery]
  -[_CSSingleBatteryChargingView _layoutChargePercentLabel]
  -[_CSSingleBatteryChargingView horizontalLayoutNeeded]
  -[_CSSingleBatteryChargingView _batteryNoseOffset]
  -[_CSSingleBatteryChargingView setBatterySize:]
  -[_CSSingleBatteryChargingView batterySize]
  -[_CSSingleBatteryChargingView setHorizontalLayoutNeeded:]


_CSDoubleBatteryChargingView : CSBatteryChargingView
  // instance methods
  -[_CSDoubleBatteryChargingView initWithFrame:]
  -[_CSDoubleBatteryChargingView .cxx_destruct]
  -[_CSDoubleBatteryChargingView setLegibilitySettings:]
  -[_CSDoubleBatteryChargingView layoutSubviews]
  -[_CSDoubleBatteryChargingView batteryVisible]
  -[_CSDoubleBatteryChargingView setBatteryVisible:]
  -[_CSDoubleBatteryChargingView desiredVisibilityDuration]
  -[_CSDoubleBatteryChargingView setPrimaryBatteryText:forBattery:]
  -[_CSDoubleBatteryChargingView setSecondaryBatteryText:forBattery:]
  -[_CSDoubleBatteryChargingView _chargePercentFont]
  -[_CSDoubleBatteryChargingView batteryCount]
  -[_CSDoubleBatteryChargingView performAnimation:completionHandler:]
  -[_CSDoubleBatteryChargingView _spaceBetweenBatteryImages]
  -[_CSDoubleBatteryChargingView _batteryTopPadding]
  -[_CSDoubleBatteryChargingView _chargingBoltTopOffset]
  -[_CSDoubleBatteryChargingView _deviceNameBaselineOffset]
  -[_CSDoubleBatteryChargingView _deviceChargeBaselineOffset]


CSNotificationDispatcher : NSObject /usr/lib/libSystem.B.dylib <CSNotificationAlertingController, SBNotificationDestination, CSNotificationDispatcher>
 @property  BOOL active
 @property  CSBehavior *activeBehavior
 @property  <CSNotificationDestination> *modalDestination
 @property  <CSNotificationDestination> *listDestination
 @property  <CSCarPlayStatusProviding> *carPlayStatusProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  SBNCAlertingController *alertingController
 @property  <NCNotificationDestinationDelegate> *delegate
 @property  NSString *identifier
 @property  BSServiceConnectionEndpoint *endpoint
 @property  NSString *coverSheetIdentifier
 @property  long long participantState

  // instance methods
  -[CSNotificationDispatcher dismissNotificationInLongLookAnimated:]
  -[CSNotificationDispatcher notificationsLoadedForSectionIdentifier:]
  -[CSNotificationDispatcher alertingController]
  -[CSNotificationDispatcher coverSheetIdentifier]
  -[CSNotificationDispatcher destination:setAllowsCriticalAlerts:forSectionIdentifier:]
  -[CSNotificationDispatcher setAlertingController:]
  -[CSNotificationDispatcher activeBehavior]
  -[CSNotificationDispatcher destination:requestPermissionToExecuteAction:forNotificationRequest:withParameters:completion:]
  -[CSNotificationDispatcher notificationSectionSettingsForDestination:]
  -[CSNotificationDispatcher postNotificationRequest:]
  -[CSNotificationDispatcher destination:setDeliverQuietly:forSectionIdentifier:]
  -[CSNotificationDispatcher isPresentingNotificationInLongLook]
  -[CSNotificationDispatcher destination:setAllowsNotifications:forSectionIdentifier:]
  -[CSNotificationDispatcher isNotificationContentExtensionVisible:]
  -[CSNotificationDispatcher modifyNotificationRequest:]
  -[CSNotificationDispatcher withdrawNotificationRequest:]
  -[CSNotificationDispatcher updateNotificationSectionSettings:previousSectionSettings:]
  -[CSNotificationDispatcher canReceiveNotificationRequest:]
  -[CSNotificationDispatcher carPlayStatusProvider]
  -[CSNotificationDispatcher alertingControllerForDestination:]
  -[CSNotificationDispatcher setModalDestination:]
  -[CSNotificationDispatcher endpoint]
  -[CSNotificationDispatcher interceptsQueueRequest:]
  -[CSNotificationDispatcher .cxx_destruct]
  -[CSNotificationDispatcher _clearNotificationRequestsFromIncomingSection:]
  -[CSNotificationDispatcher destination:clearNotificationRequests:]
  -[CSNotificationDispatcher identifier]
  -[CSNotificationDispatcher setListDestination:]
  -[CSNotificationDispatcher participantState]
  -[CSNotificationDispatcher setActive:]
  -[CSNotificationDispatcher isActive]
  -[CSNotificationDispatcher destination:performAction:forNotificationRequest:requestAuthentication:withParameters:completion:]
  -[CSNotificationDispatcher setCarPlayStatusProvider:]
  -[CSNotificationDispatcher destination:settingsForSectionIdentifier:]
  -[CSNotificationDispatcher destination:clearNotificationRequestsInSections:]
  -[CSNotificationDispatcher destination:clearNotificationRequestsFromDate:toDate:inSections:]
  -[CSNotificationDispatcher setDelegate:]
  -[CSNotificationDispatcher stopAllRealerts]
  -[CSNotificationDispatcher setActiveBehavior:]
  -[CSNotificationDispatcher delegate]
  -[CSNotificationDispatcher destination:clearNotificationRequestsFromIncomingSection:]
  -[CSNotificationDispatcher listDestination]
  -[CSNotificationDispatcher modalDestination]


CSCoverSheetViewBase : SBFTouchPassThroughView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices <CSPresentationProviding>
 @property  <UICoordinateSpace> *presentationCoordinateSpace
 @property  NSArray *presentationRegions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CSCoverSheetViewBase presentationRegions]
  -[CSCoverSheetViewBase presentationCoordinateSpace]
  -[CSCoverSheetViewBase isCoverSheetView]


CSTodayContentView : CSCoverSheetViewBase
 @property  UIView *navigationView
 @property  UIView *todayView
 @property  BOOL bouncing

  // instance methods
  -[CSTodayContentView setNavigationView:]
  -[CSTodayContentView navigationView]
  -[CSTodayContentView isBouncing]
  -[CSTodayContentView .cxx_destruct]
  -[CSTodayContentView _adjustContentForEdgeBounce]
  -[CSTodayContentView _resetContentAfterEdgeBounce]
  -[CSTodayContentView setBouncing:]
  -[CSTodayContentView setTodayView:]
  -[CSTodayContentView todayView]
  -[CSTodayContentView layoutSubviews]


CSModalView : CSCoverSheetViewBase <SBLockScreenModalView>
 @property  UILabel *titleLabel
 @property  UILabel *subtitleLabel
 @property  UILabel *secondarySubtitleLabel
 @property  UIButton *secondaryActionButton
 @property  CSModalButton *primaryActionButton
 @property  UIImageView *imageView
 @property  <CSModalViewDelegate> *delegate
 @property  UIView *detailView
 @property  BOOL wantsEnhancedSecondaryActionButton
 @property  BOOL showsDateView
 @property  BOOL showsStatusText
 @property  _UILegibilitySettings *legibilitySettings
 @property  NSString *titleText
 @property  UIColor *titleTextColor
 @property  NSString *subtitleText
 @property  NSString *secondarySubtitleText
 @property  NSString *primaryActionButtonText
 @property  UIColor *primaryActionButtonBackgroundColor
 @property  NSString *secondaryActionButtonText
 @property  UIColor *secondaryActionButtonTextColor
 @property  NSString *footerText
 @property  UIImage *image
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CSModalView _titleFont]
  -[CSModalView _imageView]
  -[CSModalView _subtitleLabel]
  -[CSModalView legibilitySettings]
  -[CSModalView initWithFrame:]
  -[CSModalView setTitleText:]
  -[CSModalView setTitleTextColor:]
  -[CSModalView titleText]
  -[CSModalView _subtitleFont]
  -[CSModalView _titleLabel]
  -[CSModalView updateConstraints]
  -[CSModalView .cxx_destruct]
  -[CSModalView setImage:]
  -[CSModalView setSecondarySubtitleText:]
  -[CSModalView secondarySubtitleText]
  -[CSModalView _buttonTapped:]
  -[CSModalView _setSubtitleLabel:]
  -[CSModalView image]
  -[CSModalView setLegibilitySettings:]
  -[CSModalView setDetailView:]
  -[CSModalView subtitleText]
  -[CSModalView _setTitleLabel:]
  -[CSModalView titleTextColor]
  -[CSModalView setSubtitleText:]
  -[CSModalView setDelegate:]
  -[CSModalView setFooterText:]
  -[CSModalView footerText]
  -[CSModalView detailView]
  -[CSModalView delegate]
  -[CSModalView layoutSubviews]
  -[CSModalView _setImageView:]
  -[CSModalView _secondaryActionButton]
  -[CSModalView showsDateView]
  -[CSModalView setShowsDateView:]
  -[CSModalView setShowsStatusText:]
  -[CSModalView _setSecondaryActionButton:]
  -[CSModalView _createAppropriateSecondaryActionButtonIfNecessary]
  -[CSModalView _labelWithNumberOfLines:font:]
  -[CSModalView _secondarySubtitleLabel]
  -[CSModalView _setSecondarySubtitleLabel:]
  -[CSModalView _createPrimaryActionButtonIfNecessary]
  -[CSModalView _setPrimaryActionButton:]
  -[CSModalView _replaceView:withNewView:inParentView:]
  -[CSModalView _dateTimeFrame]
  -[CSModalView _positionBottomElementWithLayoutAnchor:lessThanOrEqual:]
  -[CSModalView _bottomBaselineOffset]
  -[CSModalView _preferredContentSizeCategoryCappedToSize:]
  -[CSModalView _fontWithTextStyle:cappedToSize:]
  -[CSModalView _primaryActionFont]
  -[CSModalView _createEnhancedSecondaryActionButtonIfNecessary]
  -[CSModalView _createSecondaryActionButtonIfNecessary]
  -[CSModalView _secondaryActionFont]
  -[CSModalView _timeLabelBaselineY]
  -[CSModalView _timeToSubtitleLabelBaselineDifferenceY]
  -[CSModalView primaryActionButtonText]
  -[CSModalView setPrimaryActionButtonText:]
  -[CSModalView primaryActionButtonBackgroundColor]
  -[CSModalView setPrimaryActionButtonBackgroundColor:]
  -[CSModalView secondaryActionButtonText]
  -[CSModalView setSecondaryActionButtonText:]
  -[CSModalView secondaryActionButtonTextColor]
  -[CSModalView setSecondaryActionButtonTextColor:]
  -[CSModalView setWantsEnhancedSecondaryActionButton:]
  -[CSModalView showsStatusText]
  -[CSModalView _primaryActionButton]
  -[CSModalView wantsEnhancedSecondaryActionButton]


CSPresentationViewController : CSCoverSheetViewControllerBase <BSDescriptionProviding>
 @property  <CSPresentationViewControllerDelegate> *presentationDelegate
 @property  BOOL hasContent
 @property  BOOL presentingContent
 @property  BOOL transitioning
 @property  NSArray *contentViewControllers
 @property  NSArray *presentedViewControllers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CSPresentationViewController viewDidLoad]
  -[CSPresentationViewController isTransitioning]
  -[CSPresentationViewController rebuildEverythingForReason:]
  -[CSPresentationViewController presentationDelegate]
  -[CSPresentationViewController aggregateBehavior:]
  -[CSPresentationViewController shouldAutomaticallyForwardAppearanceMethods]
  -[CSPresentationViewController aggregateAppearance:]
  -[CSPresentationViewController setPresentationDelegate:]
  -[CSPresentationViewController isPresentingContent]
  -[CSPresentationViewController .cxx_destruct]
  -[CSPresentationViewController succinctDescriptionBuilder]
  -[CSPresentationViewController viewWillLayoutSubviews]
  -[CSPresentationViewController participantState]
  -[CSPresentationViewController initWithNibName:bundle:]
  -[CSPresentationViewController succinctDescription]
  -[CSPresentationViewController handleEvent:]
  -[CSPresentationViewController hasContent]
  -[CSPresentationViewController descriptionWithMultilinePrefix:]
  -[CSPresentationViewController descriptionBuilderWithMultilinePrefix:]
  -[CSPresentationViewController wouldHandleButtonEvent:]
  -[CSPresentationViewController contentViewControllers]
  -[CSPresentationViewController presentedViewControllers]
  -[CSPresentationViewController presentContentViewController:animated:completion:]
  -[CSPresentationViewController dismissContentViewController:animated:completion:]
  -[CSPresentationViewController presentContentViewController:animated:]
  -[CSPresentationViewController dismissContentViewController:animated:]
  -[CSPresentationViewController dismissPresentationAnimated:]
  -[CSPresentationViewController updatePresentationAnimated:]
  -[CSPresentationViewController presentContentViewControllers:animated:completion:]
  -[CSPresentationViewController _updateContentViewControllersAnimated:completion:]
  -[CSPresentationViewController dismissContentViewControllers:animated:completion:]
  -[CSPresentationViewController dismissPresentationAnimated:completion:]
  -[CSPresentationViewController _reflowPresentationWithAnimationSettings:]
  -[CSPresentationViewController aggregatePresentation:]
  -[CSPresentationViewController handleAppearanceUpdateFromController:animationSettings:]
  -[CSPresentationViewController _didTransitionViewController:toPresented:]
  -[CSPresentationViewController _updatePresentationForViewController:presentation:animationSettings:]


CSFixedFooterView : CSCoverSheetViewBase
 @property  CSShakableView *callToActionShakeView
 @property  SBUICallToActionLabel *callToActionLabel
 @property  SBUILegibilityLabel *alternateCallToActionLabel
 @property  double alternateCallToActionLabelOffset
 @property  UIView<SBUILegibility> *statusTextView
 @property  CSPageControl *pageControl
 @property  SBFPagedScrollView *trackingScrollViewForPageControl

  // instance methods
  -[CSFixedFooterView _updateViewsForLegibilitySettings]
  -[CSFixedFooterView setCallToActionLabel:]
  -[CSFixedFooterView initWithFrame:]
  -[CSFixedFooterView statusTextView]
  -[CSFixedFooterView .cxx_destruct]
  -[CSFixedFooterView callToActionLabel]
  -[CSFixedFooterView updateForLegibilitySettings:]
  -[CSFixedFooterView _addPageControl]
  -[CSFixedFooterView setStatusTextView:]
  -[CSFixedFooterView _layoutPageControl]
  -[CSFixedFooterView _addShakeView]
  -[CSFixedFooterView updatePageControl]
  -[CSFixedFooterView presentationRegions]
  -[CSFixedFooterView callToActionShakeView]
  -[CSFixedFooterView setAlternateCallToActionLabel:]
  -[CSFixedFooterView setAlternateCallToActionLabelOffset:]
  -[CSFixedFooterView _layoutStatusTextView]
  -[CSFixedFooterView trackingScrollViewForPageControl]
  -[CSFixedFooterView _layoutCallToActionView]
  -[CSFixedFooterView pageControl]
  -[CSFixedFooterView alternateCallToActionLabel]
  -[CSFixedFooterView layoutSubviews]
  -[CSFixedFooterView alternateCallToActionLabelOffset]
  -[CSFixedFooterView setTrackingScrollViewForPageControl:]


CSBatteryChargingInfo : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL chargingWithInternalWirelessAccessory
 @property  BCBatteryDevice *batteryDevice

  // instance methods
  -[CSBatteryChargingInfo .cxx_destruct]
  -[CSBatteryChargingInfo isChargingWithInternalWirelessAccessory]
  -[CSBatteryChargingInfo setBatteryDevice:]
  -[CSBatteryChargingInfo setChargingWithInternalWirelessAccessory:]
  -[CSBatteryChargingInfo batteryDevice]


_CSPaddingView : UIView /System/Library/Frameworks/QuartzCore.framework/QuartzCore
 @property  {CGSize=dd} paddingSize

  // instance methods
  -[_CSPaddingView intrinsicContentSize]
  -[_CSPaddingView setPaddingSize:]
  -[_CSPaddingView paddingSize]


CSPaddingHeaderViewController : UIViewController /System/Library/Frameworks/QuartzCore.framework/QuartzCore
  // instance methods
  -[CSPaddingHeaderViewController setPadding:]
  -[CSPaddingHeaderViewController _canShowWhileLocked]
  -[CSPaddingHeaderViewController loadView]


CSTodayViewController : CSCoverSheetViewControllerBase <WGWidgetGroupViewControllerDelegate, CSStatusBarBackgroundIntersecting, SBFLegibilitySettingsProviderDelegate, CSDateViewScrolling, SPUISearchBarDelegate, SBFLegibilitySettingsProvider>
 @property  CSTodayPageView *view
 @property  CSPaddingHeaderViewController *timePaddingViewController
 @property  CSLayoutStrategy *layoutStrategy
 @property  <CSTodayViewControllerDelegate> *todayViewControllerDelegate
 @property  <CSPersistentContentLayoutProviding> *persistentLayoutProviding
 @property  CSPageViewController *pageController
 @property  SBViewControllerTransitionContext *transitionContext
 @property  <SBFAuthenticationStatusProvider> *authenticationStatusProvider
 @property  <CSWidgetGroupViewControllerProviding> *widgetGroupViewControllerProvider
 @property  <CSSpotlightPresenting> *spotlightPresenter
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  double distanceFromBarToContent
 @property  double topContentInset
 @property  double clippingOffset
 @property  _UILegibilitySettings *legibilitySettings
 @property  <SBFLegibilitySettingsProviderDelegate> *delegate

  // class methods
  +[CSTodayViewController _isPortrait]
  +[CSTodayViewController viewClass]
  +[CSTodayViewController verticalSpacingBetweenWidgets]

  // instance methods
  -[CSTodayViewController viewDidLoad]
  -[CSTodayViewController setSpotlightPresenter:]
  -[CSTodayViewController spotlightPresenter]
  -[CSTodayViewController _widgetEditViewWillAppear:]
  -[CSTodayViewController pullDownSearchGesturePercentComplete]
  -[CSTodayViewController updateAccessoryLegibility]
  -[CSTodayViewController _widgetEditViewDidDisappearImplementation]
  -[CSTodayViewController pullDownSearchGestureYOffset]
  -[CSTodayViewController topContentInset]
  -[CSTodayViewController _updateContentInsets]
  -[CSTodayViewController handleScrollingEnded:]
  -[CSTodayViewController _majorScrollView]
  -[CSTodayViewController pullDownSearchGestureDraggingFromTopOfScrollView:]
  -[CSTodayViewController widgetListViewEdgeInsetsIncludingSearchHeader:]
  -[CSTodayViewController cleanupAfterSpotlightDismissal]
  -[CSTodayViewController init]
  -[CSTodayViewController widgetGroupViewController:contentOccludingInsetsForInterfaceOrientation:]
  -[CSTodayViewController searchBarDidFocus]
  -[CSTodayViewController widgetGroupViewController:sizeForInterfaceOrientation:]
  -[CSTodayViewController legibilitySettings]
  -[CSTodayViewController setLayoutStrategy:]
  -[CSTodayViewController _topContentInsetForNavigationBar:]
  -[CSTodayViewController _maxClippingOffset]
  -[CSTodayViewController _initializeTodayViewControllerIfNecessary]
  -[CSTodayViewController _widgetEditViewDidDisappear:]
  -[CSTodayViewController resetForSpotlightDismissalAnimated:]
  -[CSTodayViewController _evaluateContentViews]
  -[CSTodayViewController aggregateBehavior:]
  -[CSTodayViewController _timePaddingSize]
  -[CSTodayViewController _updateBehavior]
  -[CSTodayViewController aggregateAppearance:]
  -[CSTodayViewController _statusBarHeight]
  -[CSTodayViewController _updateSpotlightLegibility]
  -[CSTodayViewController scrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[CSTodayViewController .cxx_destruct]
  -[CSTodayViewController _setTodayViewController:]
  -[CSTodayViewController layoutStrategy]
  -[CSTodayViewController clippingOffset]
  -[CSTodayViewController _dateMovingScrollView]
  -[CSTodayViewController transitionContext]
  -[CSTodayViewController _setUpScrollView:]
  -[CSTodayViewController updateAppearanceForStatusBarBackgroundHidden:]
  -[CSTodayViewController timePaddingViewController]
  -[CSTodayViewController _widgetEditViewWillDisappear:]
  -[CSTodayViewController setPersistentLayoutProviding:]
  -[CSTodayViewController participantState]
  -[CSTodayViewController scrollViewDidEndDecelerating:]
  -[CSTodayViewController setTransitionContext:]
  -[CSTodayViewController setAuthenticationStatusProvider:]
  -[CSTodayViewController todayViewControllerDelegate]
  -[CSTodayViewController scrollViewWillBeginDragging:]
  -[CSTodayViewController viewDidAppear:]
  -[CSTodayViewController setWidgetGroupViewControllerProvider:]
  -[CSTodayViewController handleEvent:]
  -[CSTodayViewController setTimePaddingViewController:]
  -[CSTodayViewController handleDraggingWillEndWithTargetContentOffset:forScrollView:]
  -[CSTodayViewController persistentLayoutProviding]
  -[CSTodayViewController widgetGroupViewControllerProvider]
  -[CSTodayViewController _prepareChildViewControllersIfNecessary]
  -[CSTodayViewController scrollViewDidScroll:]
  -[CSTodayViewController viewWillAppear:]
  -[CSTodayViewController _allowsDateViewScroll]
  -[CSTodayViewController _totalDistanceForBlurTransition]
  -[CSTodayViewController _updateAppearanceForScrollView:]
  -[CSTodayViewController _updateAppearance]
  -[CSTodayViewController updateAppearanceForHidden:offset:]
  -[CSTodayViewController scrollViewDidEndScrollingAnimation:]
  -[CSTodayViewController setDelegate:]
  -[CSTodayViewController pageController]
  -[CSTodayViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[CSTodayViewController viewDidDisappear:]
  -[CSTodayViewController setTodayViewControllerDelegate:]
  -[CSTodayViewController _searchBarViewController]
  -[CSTodayViewController viewWillDisappear:]
  -[CSTodayViewController setPageController:]
  -[CSTodayViewController providerLegibilitySettingsChanged:]
  -[CSTodayViewController _updateAppearanceForScrollView:animated:]
  -[CSTodayViewController authenticationStatusProvider]
  -[CSTodayViewController delegate]
  -[CSTodayViewController distanceFromBarToContent]
  -[CSTodayViewController loadView]
  -[CSTodayViewController _dateMinY]
  -[CSTodayViewController scrollViewDidEndDragging:willDecelerate:]


CSPageViewBase : CSCoverSheetViewBase <CSPageView>
 @property  UIViewController<CSPageViewControllerProtocol> *pageViewController
 @property  double contentWidth

  // instance methods
  -[CSPageViewBase pageViewController]
  -[CSPageViewBase .cxx_destruct]
  -[CSPageViewBase setPageViewController:]
  -[CSPageViewBase setContentWidth:]
  -[CSPageViewBase contentWidth]


CSQuickActionsButton : UICoverSheetButton /System/Library/Frameworks/QuartzCore.framework/QuartzCore
 @property  long long type
 @property  BOOL permitted
 @property  _UILegibilitySettings *legibilitySettings

  // instance methods
  -[CSQuickActionsButton _updateStyle]
  -[CSQuickActionsButton legibilitySettings]
  -[CSQuickActionsButton setType:]
  -[CSQuickActionsButton setSelected:]
  -[CSQuickActionsButton initWithType:]
  -[CSQuickActionsButton .cxx_destruct]
  -[CSQuickActionsButton setLegibilitySettings:]
  -[CSQuickActionsButton type]
  -[CSQuickActionsButton _buttonImageNameForSelected:]
  -[CSQuickActionsButton _imageWithName:]
  -[CSQuickActionsButton _accessoryTitleForType]
  -[CSQuickActionsButton _statisticsIdentifierForType]
  -[CSQuickActionsButton setPermitted:]
  -[CSQuickActionsButton permitted]


CSFixedFooterViewController : CSCoverSheetViewControllerBase <CSStatusTextViewControllerDelegate>
 @property  <SBFAuthenticationStatusProvider> *authenticationStatusProvider
 @property  CSFixedFooterView *fixedFooterView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CSFixedFooterViewController viewClass]

  // instance methods
  -[CSFixedFooterViewController viewDidLoad]
  -[CSFixedFooterViewController fixedFooterView]
  -[CSFixedFooterViewController init]
  -[CSFixedFooterViewController .cxx_destruct]
  -[CSFixedFooterViewController coverSheetStatusTextViewControllerContentDidChange:]
  -[CSFixedFooterViewController _updateCallToActionTextAnimated:]
  -[CSFixedFooterViewController setAuthenticationStatusProvider:]
  -[CSFixedFooterViewController viewDidAppear:]
  -[CSFixedFooterViewController handleEvent:]
  -[CSFixedFooterViewController viewWillAppear:]
  -[CSFixedFooterViewController updateCallToActionForMesaMatchFailure]
  -[CSFixedFooterViewController viewDidDisappear:]
  -[CSFixedFooterViewController updateCallToActionForReversingInteractiveTransition]
  -[CSFixedFooterViewController authenticationStatusProvider]
  -[CSFixedFooterViewController _addStatusTextViewControllerIfNecessary]


CSFullscreenNotificationViewController : CSModalViewControllerBase <CSModalViewDelegate, CSNotificationDestination>
 @property  NCNotificationRequest *notificationRequest
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <CSNotificationDispatcher> *dispatcher
 @property  NSString *coverSheetIdentifier
 @property  long long participantState

  // instance methods
  -[CSFullscreenNotificationViewController dismissNotificationInLongLookAnimated:]
  -[CSFullscreenNotificationViewController notificationsLoadedForSectionIdentifier:]
  -[CSFullscreenNotificationViewController presentationPriority]
  -[CSFullscreenNotificationViewController postNotificationRequest:]
  -[CSFullscreenNotificationViewController isPresentingNotificationInLongLook]
  -[CSFullscreenNotificationViewController setDispatcher:]
  -[CSFullscreenNotificationViewController dispatcher]
  -[CSFullscreenNotificationViewController isNotificationContentExtensionVisible:]
  -[CSFullscreenNotificationViewController withdrawNotificationRequest:]
  -[CSFullscreenNotificationViewController updateNotificationSectionSettings:previousSectionSettings:]
  -[CSFullscreenNotificationViewController volumeChanged:]
  -[CSFullscreenNotificationViewController aggregateBehavior:]
  -[CSFullscreenNotificationViewController updateNotificationRequest:]
  -[CSFullscreenNotificationViewController presentationType]
  -[CSFullscreenNotificationViewController dealloc]
  -[CSFullscreenNotificationViewController .cxx_destruct]
  -[CSFullscreenNotificationViewController initWithNibName:bundle:]
  -[CSFullscreenNotificationViewController handleEvent:]
  -[CSFullscreenNotificationViewController loadView]
  -[CSFullscreenNotificationViewController wouldHandleButtonEvent:]
  -[CSFullscreenNotificationViewController notificationRequest]
  -[CSFullscreenNotificationViewController initWithNotificationRequest:]
  -[CSFullscreenNotificationViewController handlePrimaryActionForView:]
  -[CSFullscreenNotificationViewController handleSecondaryActionForView:]
  -[CSFullscreenNotificationViewController lockButtonPressed:]
  -[CSFullscreenNotificationViewController _handleAction:withName:]
  -[CSFullscreenNotificationViewController _dismissFromSignificantUserInteraction]
  -[CSFullscreenNotificationViewController _handleSilenceAction]
  -[CSFullscreenNotificationViewController _handlePrimaryAction]
  -[CSFullscreenNotificationViewController _handleDismissAction]
  -[CSFullscreenNotificationViewController _handleSecondaryAction]


CSModalButton : UIButton /System/Library/Frameworks/QuartzCore.framework/QuartzCore
 @property  UIVisualEffect *visualEffect

  // instance methods
  -[CSModalButton setBackgroundColor:]
  -[CSModalButton initWithFrame:]
  -[CSModalButton _buttonPressed:]
  -[CSModalButton _setContinuousCornerRadius:]
  -[CSModalButton setVisualEffect:]
  -[CSModalButton visualEffect]
  -[CSModalButton backgroundColor]
  -[CSModalButton .cxx_destruct]
  -[CSModalButton layoutSubviews]
  -[CSModalButton _buttonReleased:]


CSPageViewController : CSPresentationViewController <CSPageViewControllerProtocol>
 @property  <CSCoverSheetViewControllerProtocol> *coverSheetViewController
 @property  BOOL transitioning
 @property  BOOL authenticated
 @property  CSLayoutStrategy *layoutStrategy
 @property  NSString *pageRole
 @property  CSAppearance *activeAppearance
 @property  CSBehavior *activeBehavior
 @property  CSPresentation *externalPresentation
 @property  <CSCoverSheetViewPresenting> *presenter
 @property  long long presentationStyle
 @property  long long presentationType
 @property  long long presentationTransition
 @property  long long presentationPriority
 @property  long long presentationAltitude
 @property  NSString *appearanceIdentifier
 @property  long long backgroundStyle
 @property  NSSet *components
 @property  _UILegibilitySettings *legibilitySettings
 @property  UIColor *backgroundColor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  long long scrollingStrategy
 @property  long long notificationBehavior
 @property  unsigned long restrictedCapabilities
 @property  long long proximityDetectionMode
 @property  <UICoordinateSpace> *presentationCoordinateSpace
 @property  NSArray *presentationRegions
 @property  NSString *coverSheetIdentifier
 @property  long long participantState
 @property  long long idleTimerDuration
 @property  long long idleTimerMode
 @property  long long idleWarnMode
 @property  double customIdleExpirationTimeout
 @property  double customIdleWarningTimeout

  // class methods
  +[CSPageViewController isAvailableForConfiguration]
  +[CSPageViewController viewClass]
  +[CSPageViewController requiredCapabilities]

  // instance methods
  -[CSPageViewController viewDidLoad]
  -[CSPageViewController setCoverSheetViewController:]
  -[CSPageViewController isTransitioning]
  -[CSPageViewController updateTransitionToVisible:progress:mode:]
  -[CSPageViewController setTransitioning:]
  -[CSPageViewController requestedDismissalType]
  -[CSPageViewController setLayoutStrategy:]
  -[CSPageViewController aggregateBehavior:]
  -[CSPageViewController pageView]
  -[CSPageViewController aggregateAppearance:]
  -[CSPageViewController updateTransitionWhileRubberBandingInProgress:]
  -[CSPageViewController coverSheetViewController]
  -[CSPageViewController .cxx_destruct]
  -[CSPageViewController willTransitionToVisible:]
  -[CSPageViewController layoutStrategy]
  -[CSPageViewController didTransitionToVisible:]
  -[CSPageViewController authenticated]
  -[CSPageViewController presentationAltitude]
  -[CSPageViewController requestedDismissalSettings]
  -[CSPageViewController handleAction:fromSender:]
  -[CSPageViewController view]
  -[CSPageViewController participantState]
  -[CSPageViewController initWithNibName:bundle:]


CSDashBoardNotificationVersusPagingScrollSettings : PTSettings /System/Library/PrivateFrameworks/UserNotificationsUIKit.framework/UserNotificationsUIKit
 @property  BOOL colorsBackground
 @property  double leadingInset
 @property  double trailingInset

  // class methods
  +[CSDashBoardNotificationVersusPagingScrollSettings settingsControllerModule]

  // instance methods
  -[CSDashBoardNotificationVersusPagingScrollSettings setDefaultValues]
  -[CSDashBoardNotificationVersusPagingScrollSettings setColorsBackground:]
  -[CSDashBoardNotificationVersusPagingScrollSettings colorsBackground]
  -[CSDashBoardNotificationVersusPagingScrollSettings leadingInset]
  -[CSDashBoardNotificationVersusPagingScrollSettings trailingInset]
  -[CSDashBoardNotificationVersusPagingScrollSettings setLeadingInset:]
  -[CSDashBoardNotificationVersusPagingScrollSettings setTrailingInset:]


CSPasscodeBackgroundView : UIView /System/Library/Frameworks/QuartzCore.framework/QuartzCore
 @property  MTMaterialView *materialView
 @property  UIView *lightenSourceOverView
 @property  UIView *plusDView
 @property  UIView *reduceTransparencyTintingView
 @property  UIView *reduceTransparencyBackingView
 @property  UIColor *reduceTransparencyBackingColor

  // instance methods
  -[CSPasscodeBackgroundView initWithFrame:]
  -[CSPasscodeBackgroundView plusDView]
  -[CSPasscodeBackgroundView reduceTransparencyBackingColor]
  -[CSPasscodeBackgroundView .cxx_destruct]
  -[CSPasscodeBackgroundView setPlusDView:]
  -[CSPasscodeBackgroundView materialView]
  -[CSPasscodeBackgroundView setMaterialView:]
  -[CSPasscodeBackgroundView setReduceTransparencyBackingColor:]
  -[CSPasscodeBackgroundView setWeighting:]
  -[CSPasscodeBackgroundView layoutSubviews]
  -[CSPasscodeBackgroundView _setPlusDBackgroundColorWithWeighting:]
  -[CSPasscodeBackgroundView lightenSourceOverView]
  -[CSPasscodeBackgroundView setLightenSourceOverView:]
  -[CSPasscodeBackgroundView reduceTransparencyTintingView]
  -[CSPasscodeBackgroundView setReduceTransparencyTintingView:]
  -[CSPasscodeBackgroundView reduceTransparencyBackingView]
  -[CSPasscodeBackgroundView setReduceTransparencyBackingView:]


CSModalVisualEffect : UIVisualEffect /System/Library/Frameworks/QuartzCore.framework/QuartzCore
  // instance methods
  -[CSModalVisualEffect copyWithZone:]
  -[CSModalVisualEffect effectConfig]


CSTimerViewController : CSCoverSheetViewControllerBase
 @property  <CSTimerViewControllerDelegate> *delegate
 @property  BOOL enabled

  // instance methods
  -[CSTimerViewController _nextTimerChanged:]
  -[CSTimerViewController isEndDateValid]
  -[CSTimerViewController setEndDate:]
  -[CSTimerViewController dealloc]
  -[CSTimerViewController .cxx_destruct]
  -[CSTimerViewController _stopTimer]
  -[CSTimerViewController _updateTimerLabelView]
  -[CSTimerViewController _stopTimerNotifyingDelegate:]
  -[CSTimerViewController _updateTimerFired]
  -[CSTimerViewController initWithNibName:bundle:]
  -[CSTimerViewController isEnabled]
  -[CSTimerViewController isTimerActive]
  -[CSTimerViewController _updateNextTimer]
  -[CSTimerViewController timerView]
  -[CSTimerViewController setEnabled:]
  -[CSTimerViewController setDelegate:]
  -[CSTimerViewController _startTimer]
  -[CSTimerViewController delegate]
  -[CSTimerViewController loadView]


CSTemperatureWarningViewController : CSModalViewControllerBase <CSModalViewDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CSTemperatureWarningViewController presentationPriority]
  -[CSTemperatureWarningViewController viewDidLoad]
  -[CSTemperatureWarningViewController aggregateBehavior:]
  -[CSTemperatureWarningViewController aggregateAppearance:]
  -[CSTemperatureWarningViewController .cxx_destruct]
  -[CSTemperatureWarningViewController handleSecondaryActionForView:]
  -[CSTemperatureWarningViewController initWithThermalStatusProvider:]


CSDNDBedtimeController : NSObject /usr/lib/libSystem.B.dylib <DNDStateUpdateListener, HKSPSleepStoreObserver>
 @property  BOOL active
 @property  BOOL shouldShowGreeting
 @property  BOOL greetingDisabled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CSDNDBedtimeController isGreetingDisabled]
  -[CSDNDBedtimeController init]
  -[CSDNDBedtimeController sleepStore:sleepSettingsDidChange:]
  -[CSDNDBedtimeController dealloc]
  -[CSDNDBedtimeController .cxx_destruct]
  -[CSDNDBedtimeController _cleanUpGreetingGracePeriodTimer]
  -[CSDNDBedtimeController setActive:]
  -[CSDNDBedtimeController isActive]
  -[CSDNDBedtimeController _setShouldShowGreeting:]
  -[CSDNDBedtimeController _setShouldShowGreeting:forceUpdateObservers:]
  -[CSDNDBedtimeController removeObserver:]
  -[CSDNDBedtimeController setShouldShowGreeting:]
  -[CSDNDBedtimeController initWithStateService:]
  -[CSDNDBedtimeController shouldShowGreeting]
  -[CSDNDBedtimeController addObserver:]
  -[CSDNDBedtimeController stateService:didReceiveDoNotDisturbStateUpdate:]


CSRegion : NSObject /usr/lib/libSystem.B.dylib <NSCopying, UICoordinateSpace>
 @property  <UICoordinateSpace> *coordinateSpace
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} extent
 @property  long long role
 @property  BOOL hidden
 @property  NSString *identifier
 @property  <UICoordinateSpace> *identity
 @property  id provider
 @property  BOOL reservedForHorizontalScrolling
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} bounds
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CSRegion regionForCoordinateSpace:]
  +[CSRegion regionForCoordinateSpace:withExtent:]

  // instance methods
  -[CSRegion copyWithZone:]
  -[CSRegion provider]
  -[CSRegion convertRect:fromCoordinateSpace:]
  -[CSRegion identity]
  -[CSRegion initWithCoordinateSpace:withExtent:role:]
  -[CSRegion setIdentity:]
  -[CSRegion .cxx_destruct]
  -[CSRegion setRole:]
  -[CSRegion setIdentifier:]
  -[CSRegion identifier]
  -[CSRegion convertRect:toCoordinateSpace:]
  -[CSRegion convertPoint:fromCoordinateSpace:]
  -[CSRegion bounds]
  -[CSRegion setProvider:]
  -[CSRegion isEqual:]
  -[CSRegion extent]
  -[CSRegion regionForCoordinateSpace:]
  -[CSRegion convertPoint:toCoordinateSpace:]
  -[CSRegion isReservedForHorizontalScrolling]
  -[CSRegion role]
  -[CSRegion intersectsCoordinateSpace:]
  -[CSRegion coordinateSpace]
  -[CSRegion role:]
  -[CSRegion setHidden:]
  -[CSRegion isHidden]
  -[CSRegion setReservedForHorizontalScrolling:]


CSDeviceBlockViewController : CSModalViewControllerBase <CSModalViewDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CSDeviceBlockViewController presentationPriority]
  -[CSDeviceBlockViewController viewDidLoad]
  -[CSDeviceBlockViewController _updateText]
  -[CSDeviceBlockViewController aggregateBehavior:]
  -[CSDeviceBlockViewController aggregateAppearance:]
  -[CSDeviceBlockViewController dealloc]
  -[CSDeviceBlockViewController .cxx_destruct]
  -[CSDeviceBlockViewController viewWillAppear:]
  -[CSDeviceBlockViewController initWithDeviceBlockStatusProvider:]
  -[CSDeviceBlockViewController viewDidDisappear:]
  -[CSDeviceBlockViewController handleSecondaryActionForView:]


CSAppearance : NSObject /usr/lib/libSystem.B.dylib <BSDescriptionProviding, CSAppearanceProviding, NSCopying>
 @property  NSString *identifier
 @property  BOOL transitional
 @property  long long backgroundStyle
 @property  UIColor *backgroundColor
 @property  NSSet *components
 @property  _UILegibilitySettings *legibilitySettings
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *appearanceIdentifier

  // class methods
  +[CSAppearance appearanceForProvider:]
  +[CSAppearance appearanceWithIdentifier:]

  // instance methods
  -[CSAppearance copyWithZone:]
  -[CSAppearance setBackgroundColor:]
  -[CSAppearance conformsToCSAppearanceProviding]
  -[CSAppearance removeComponent:]
  -[CSAppearance isEqualToAppearance:]
  -[CSAppearance setBackgroundStyle:]
  -[CSAppearance legibilitySettings]
  -[CSAppearance appearanceIdentifier]
  -[CSAppearance backgroundStyle]
  -[CSAppearance components]
  -[CSAppearance removeAllComponentsWithIdentifier:]
  -[CSAppearance setTransitional:]
  -[CSAppearance backgroundColor]
  -[CSAppearance .cxx_destruct]
  -[CSAppearance setComponents:]
  -[CSAppearance initWithIdentifier:]
  -[CSAppearance succinctDescriptionBuilder]
  -[CSAppearance setIdentifier:]
  -[CSAppearance identifier]
  -[CSAppearance setLegibilitySettings:]
  -[CSAppearance componentForType:property:]
  -[CSAppearance succinctDescription]
  -[CSAppearance unionAppearance:]
  -[CSAppearance reset]
  -[CSAppearance isEqual:]
  -[CSAppearance flagForComponentType:]
  -[CSAppearance componentForType:identifier:]
  -[CSAppearance isTransitional]
  -[CSAppearance descriptionWithMultilinePrefix:]
  -[CSAppearance addComponent:]
  -[CSAppearance descriptionBuilderWithMultilinePrefix:]


CSHomeAffordanceViewController : CSCoverSheetViewControllerBase
 @property  CSHomeAffordanceView *homeAffordanceView
 @property  {CGPoint=dd} homeAffordanceOffset

  // instance methods
  -[CSHomeAffordanceViewController viewDidLoad]
  -[CSHomeAffordanceViewController aggregateAppearance:]
  -[CSHomeAffordanceViewController .cxx_destruct]
  -[CSHomeAffordanceViewController setLegibilitySettings:]
  -[CSHomeAffordanceViewController viewDidAppear:]
  -[CSHomeAffordanceViewController _canShowWhileLocked]
  -[CSHomeAffordanceViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[CSHomeAffordanceViewController viewDidDisappear:]
  -[CSHomeAffordanceViewController viewDidLayoutSubviews]
  -[CSHomeAffordanceViewController homeAffordanceView]
  -[CSHomeAffordanceViewController _addWrapperViewWithOrientation:]
  -[CSHomeAffordanceViewController _layoutHomeAffordance]
  -[CSHomeAffordanceViewController setHomeAffordanceOffset:]
  -[CSHomeAffordanceViewController _handleSuppressAnimationForPointerGesture:]
  -[CSHomeAffordanceViewController _homeAffordanceRestingFrame]
  -[CSHomeAffordanceViewController homeAffordanceOffset]


CSTodayContentViewController : CSCoverSheetViewControllerBase <SBFLegibilitySettingsProviderDelegate>
 @property  SBUISpotlightBarNavigationController *spotlightNavigationController
 @property  SPUISearchBarController *spotlightSearchBarViewController
 @property  CSTodayViewController *todayViewController
 @property  BOOL bouncing
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CSTodayContentViewController viewClass]

  // instance methods
  -[CSTodayContentViewController viewDidLoad]
  -[CSTodayContentViewController setTodayViewController:]
  -[CSTodayContentViewController todayViewController]
  -[CSTodayContentViewController init]
  -[CSTodayContentViewController aggregateBehavior:]
  -[CSTodayContentViewController _todayContentView]
  -[CSTodayContentViewController aggregateAppearance:]
  -[CSTodayContentViewController isBouncing]
  -[CSTodayContentViewController _updateSpotlightLegibility]
  -[CSTodayContentViewController .cxx_destruct]
  -[CSTodayContentViewController spotlightSearchBarViewController]
  -[CSTodayContentViewController spotlightNavigationController]
  -[CSTodayContentViewController viewDidAppear:]
  -[CSTodayContentViewController setBouncing:]
  -[CSTodayContentViewController viewWillAppear:]
  -[CSTodayContentViewController setSpotlightSearchBarViewController:]
  -[CSTodayContentViewController viewDidDisappear:]
  -[CSTodayContentViewController viewWillDisappear:]
  -[CSTodayContentViewController providerLegibilitySettingsChanged:]
  -[CSTodayContentViewController setSpotlightNavigationController:]


CSTodayPageView : CSPageViewBase
 @property  UIView *todayView
 @property  UIScrollView *widgetMajorScrollView
 @property  double navigationBarTopInset

  // instance methods
  -[CSTodayPageView initWithFrame:]
  -[CSTodayPageView setWidgetMajorScrollView:]
  -[CSTodayPageView setNavigationBarTopInset:]
  -[CSTodayPageView .cxx_destruct]
  -[CSTodayPageView _layoutTodayView]
  -[CSTodayPageView widgetMajorScrollView]
  -[CSTodayPageView setTodayView:]
  -[CSTodayPageView navigationBarTopInset]
  -[CSTodayPageView todayView]
  -[CSTodayPageView layoutSubviews]


CSAdjunctListModel : NSObject /usr/lib/libSystem.B.dylib <SBFActionHandling>
 @property  <CSAdjunctListModelDelegate> *delegate
 @property  <SBFActionProviding> *contentActionProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CSAdjunctListModel _createItemForAction:]
  -[CSAdjunctListModel init]
  -[CSAdjunctListModel _replayPendingChanges]
  -[CSAdjunctListModel dealloc]
  -[CSAdjunctListModel .cxx_destruct]
  -[CSAdjunctListModel _handleLockScreenContentActionInvalidation:]
  -[CSAdjunctListModel _itemForAction:]
  -[CSAdjunctListModel suspendItemHandling]
  -[CSAdjunctListModel _handleLockScreenContentActionAddition:]
  -[CSAdjunctListModel setContentActionProvider:]
  -[CSAdjunctListModel handlesActionWithClass:]
  -[CSAdjunctListModel resumeItemHandling]
  -[CSAdjunctListModel _handleLockScreenContentAction:]
  -[CSAdjunctListModel contentActionProvider]
  -[CSAdjunctListModel _actionIsInRelevantSlot:]
  -[CSAdjunctListModel _removeItemForAction:]
  -[CSAdjunctListModel setDelegate:]
  -[CSAdjunctListModel delegate]
  -[CSAdjunctListModel handleAction:forProvider:]


CSAdjunctListItem : NSObject /usr/lib/libSystem.B.dylib <CSAdjunctListItemProviding>
 @property  NSString *identifier
 @property  SBSLockScreenContentAction *action
 @property  UIView *platterView
 @property  UIViewController<CSAdjunctItemHosting> *contentHost
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CSAdjunctListItem platterView]
  -[CSAdjunctListItem init]
  -[CSAdjunctListItem .cxx_destruct]
  -[CSAdjunctListItem action]
  -[CSAdjunctListItem addAction:]
  -[CSAdjunctListItem setIdentifier:]
  -[CSAdjunctListItem identifier]
  -[CSAdjunctListItem isValid]
  -[CSAdjunctListItem setPlatterView:]
  -[CSAdjunctListItem removeAction:]
  -[CSAdjunctListItem setContentHost:]
  -[CSAdjunctListItem contentHost]
  -[CSAdjunctListItem conformsToCSAdjunctListItemProviding]


CSRegionsDebugView : CSCoverSheetViewBase
 @property  NSArray *regions

  // instance methods
  -[CSRegionsDebugView initWithFrame:]
  -[CSRegionsDebugView regions]
  -[CSRegionsDebugView .cxx_destruct]
  -[CSRegionsDebugView drawRect:]
  -[CSRegionsDebugView setRegions:]


CSShakableView : SBFTouchPassThroughView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices <CAAnimationDelegate>
 @property  SBFTouchPassThroughView *containerView
 @property  NSArray *prototypeSpringAnimations
 @property  double shakeDistance
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CSShakableView animationDidStop:finished:]
  -[CSShakableView setShakeDistance:]
  -[CSShakableView _defaultSpringAnimations]
  -[CSShakableView initWithFrame:]
  -[CSShakableView prototypeSpringAnimations]
  -[CSShakableView dealloc]
  -[CSShakableView .cxx_destruct]
  -[CSShakableView beginShakingWithCompletion:]
  -[CSShakableView shakeDistance]
  -[CSShakableView containerView]
  -[CSShakableView setPrototypeSpringAnimations:]
  -[CSShakableView _invokeCompletionBlockIfNecessary]
  -[CSShakableView layoutSubviews]


CSEmbeddedContentActionManager : NSObject /usr/lib/libSystem.B.dylib <SBFActionHandling>
 @property  <CSEmbeddedContentActionManagerDelegate> *delegate
 @property  NSMutableSet *activeActions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CSEmbeddedContentActionManager initWithDelegate:]
  -[CSEmbeddedContentActionManager validActionWithIdentifierIfExists:]
  -[CSEmbeddedContentActionManager .cxx_destruct]
  -[CSEmbeddedContentActionManager setContentActionProvider:]
  -[CSEmbeddedContentActionManager handlesActionWithClass:]
  -[CSEmbeddedContentActionManager setActiveActions:]
  -[CSEmbeddedContentActionManager _removeAction:]
  -[CSEmbeddedContentActionManager activeActions]
  -[CSEmbeddedContentActionManager setDelegate:]
  -[CSEmbeddedContentActionManager _addAction:]
  -[CSEmbeddedContentActionManager delegate]
  -[CSEmbeddedContentActionManager handleAction:forProvider:]


CSRemoteContentModalView : CSModalView
 @property  <CSRemoteModalContentViewTouchDelegate> *touchDelegate
 @property  UIButton *backgroundDismissButton

  // instance methods
  -[CSRemoteContentModalView initWithFrame:]
  -[CSRemoteContentModalView .cxx_destruct]
  -[CSRemoteContentModalView touchDelegate]
  -[CSRemoteContentModalView setTouchDelegate:]
  -[CSRemoteContentModalView backgroundDismissButton]
  -[CSRemoteContentModalView setBackgroundDismissButton:]


CSRemoteContentModalViewController : CSModalViewControllerBase <CSRemoteContentHostDelegate, CSDismissableModalViewControllerDelegate, CSRemoteModalContentViewTouchDelegate, PTSettingsKeyObserver>
 @property  CSLockScreenSettings *lockScreenSettings
 @property  UIImpactFeedbackGenerator *rubberBandFeedbackGenerator
 @property  CSComponent *scalableContent
 @property  CSDashBoardRemoteContentSettings *remoteContentSettings
 @property  <CSRemoteContentModalViewControllerDelegate> *delegate
 @property  <SBFAuthenticationStatusProvider> *authenticationStatusProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CSRemoteContentModalViewController viewDidLoad]
  -[CSRemoteContentModalViewController _setCornerRounded:]
  -[CSRemoteContentModalViewController displayLayoutElementIdentifier]
  -[CSRemoteContentModalViewController didInvalidate]
  -[CSRemoteContentModalViewController settings:changedValueForKey:]
  -[CSRemoteContentModalViewController _homeGestureMode]
  -[CSRemoteContentModalViewController _reducesWhitePoint]
  -[CSRemoteContentModalViewController _suppressesBottomEdgeContent]
  -[CSRemoteContentModalViewController aggregateBehavior:]
  -[CSRemoteContentModalViewController setLockScreenSettings:]
  -[CSRemoteContentModalViewController aggregateAppearance:]
  -[CSRemoteContentModalViewController dealloc]
  -[CSRemoteContentModalViewController _createProperties]
  -[CSRemoteContentModalViewController setRubberBandFeedbackGenerator:]
  -[CSRemoteContentModalViewController lockScreenSettings]
  -[CSRemoteContentModalViewController .cxx_destruct]
  -[CSRemoteContentModalViewController _shouldCancelInteractiveDismissGesture]
  -[CSRemoteContentModalViewController _backgroundStyle]
  -[CSRemoteContentModalViewController scalableContent]
  -[CSRemoteContentModalViewController _dateTimeStyle]
  -[CSRemoteContentModalViewController _updateForPropertyChanged]
  -[CSRemoteContentModalViewController handleEvent:]
  -[CSRemoteContentModalViewController configureDisplayLayoutElement:]
  -[CSRemoteContentModalViewController setDelegate:]
  -[CSRemoteContentModalViewController activateWithCompletion:]
  -[CSRemoteContentModalViewController authenticationStatusProvider]
  -[CSRemoteContentModalViewController didChangeStyle]
  -[CSRemoteContentModalViewController delegate]
  -[CSRemoteContentModalViewController rubberBandFeedbackGenerator]
  -[CSRemoteContentModalViewController loadView]
  -[CSRemoteContentModalViewController addGrabberView:]
  -[CSRemoteContentModalViewController handleSecondaryActionForView:]
  -[CSRemoteContentModalViewController handleBottomEdgeGestureBegan:]
  -[CSRemoteContentModalViewController handleBottomEdgeGestureChanged:]
  -[CSRemoteContentModalViewController handleBottomEdgeGestureEnded:]
  -[CSRemoteContentModalViewController dismissForHomeButton]
  -[CSRemoteContentModalViewController dismissForDismissType:completion:]
  -[CSRemoteContentModalViewController isInUnlockGestureMode]
  -[CSRemoteContentModalViewController shouldCaptureHomeGesture]
  -[CSRemoteContentModalViewController suppressesDismissalForNotification]
  -[CSRemoteContentModalViewController initWithContentDefinition:preferences:authenticationStatusProvider:]
  -[CSRemoteContentModalViewController didReceiveTouch]
  -[CSRemoteContentModalViewController _updateSecondaryActionButtonText]
  -[CSRemoteContentModalViewController shouldHideHomeAffordance]
  -[CSRemoteContentModalViewController _updateGrabberViewVisibility]
  -[CSRemoteContentModalViewController _dismissForced:animated:]
  -[CSRemoteContentModalViewController suppressesDismissalGesture]
  -[CSRemoteContentModalViewController _updateContentScale:interactive:]
  -[CSRemoteContentModalViewController _updateContentAlpha:interactive:]
  -[CSRemoteContentModalViewController _supportsLuminanceReductionForCurrentBackgroundStyle]
  -[CSRemoteContentModalViewController remoteContentHostViewController:didTerminateWithError:]
  -[CSRemoteContentModalViewController setScalableContent:]
  -[CSRemoteContentModalViewController remoteContentSettings]
  -[CSRemoteContentModalViewController setRemoteContentSettings:]


CSCoverSheetViewControllerBase : UIViewController /System/Library/Frameworks/QuartzCore.framework/QuartzCore <CSCoverSheetViewPresenting, BSDescriptionProviding>
 @property  BOOL presentation
 @property  BOOL disappeared
 @property  BOOL presentationCancelsTouches
 @property  UIViewController *kitPresentedViewController
 @property  CSAppearance *activeAppearance
 @property  CSBehavior *activeBehavior
 @property  CSPresentation *externalPresentation
 @property  <CSCoverSheetViewPresenting> *presenter
 @property  long long presentationStyle
 @property  long long presentationType
 @property  long long presentationTransition
 @property  long long presentationPriority
 @property  long long presentationAltitude
 @property  NSString *appearanceIdentifier
 @property  long long backgroundStyle
 @property  NSSet *components
 @property  _UILegibilitySettings *legibilitySettings
 @property  UIColor *backgroundColor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  long long scrollingStrategy
 @property  long long notificationBehavior
 @property  unsigned long restrictedCapabilities
 @property  long long proximityDetectionMode
 @property  <UICoordinateSpace> *presentationCoordinateSpace
 @property  NSArray *presentationRegions
 @property  NSString *coverSheetIdentifier
 @property  long long participantState
 @property  long long idleTimerDuration
 @property  long long idleTimerMode
 @property  long long idleWarnMode
 @property  double customIdleExpirationTimeout
 @property  double customIdleWarningTimeout

  // class methods
  +[CSCoverSheetViewControllerBase coverSheetIdentifier]
  +[CSCoverSheetViewControllerBase viewClass]

  // instance methods
  -[CSCoverSheetViewControllerBase presentationPriority]
  -[CSCoverSheetViewControllerBase viewDidLoad]
  -[CSCoverSheetViewControllerBase coverSheetIdentifier]
  -[CSCoverSheetViewControllerBase activeBehavior]
  -[CSCoverSheetViewControllerBase idleTimerDuration]
  -[CSCoverSheetViewControllerBase conformsToCSAppearanceProviding]
  -[CSCoverSheetViewControllerBase setPresenter:]
  -[CSCoverSheetViewControllerBase scrollingStrategy]
  -[CSCoverSheetViewControllerBase notificationBehavior]
  -[CSCoverSheetViewControllerBase displayLayoutElementIdentifier]
  -[CSCoverSheetViewControllerBase conformsToCSBehaviorProviding]
  -[CSCoverSheetViewControllerBase idleWarnMode]
  -[CSCoverSheetViewControllerBase idleTimerMode]
  -[CSCoverSheetViewControllerBase rebuildEverythingForReason:]
  -[CSCoverSheetViewControllerBase restrictedCapabilities]
  -[CSCoverSheetViewControllerBase legibilitySettings]
  -[CSCoverSheetViewControllerBase presentationStyle]
  -[CSCoverSheetViewControllerBase aggregateBehavior:]
  -[CSCoverSheetViewControllerBase conformsToCSEventHandling]
  -[CSCoverSheetViewControllerBase appearanceIdentifier]
  -[CSCoverSheetViewControllerBase proximityDetectionMode]
  -[CSCoverSheetViewControllerBase aggregateAppearance:]
  -[CSCoverSheetViewControllerBase backgroundStyle]
  -[CSCoverSheetViewControllerBase presentationType]
  -[CSCoverSheetViewControllerBase dismiss]
  -[CSCoverSheetViewControllerBase dealloc]
  -[CSCoverSheetViewControllerBase components]
  -[CSCoverSheetViewControllerBase backgroundColor]
  -[CSCoverSheetViewControllerBase .cxx_destruct]
  -[CSCoverSheetViewControllerBase unregisterView:]
  -[CSCoverSheetViewControllerBase succinctDescriptionBuilder]
  -[CSCoverSheetViewControllerBase activeAppearance]
  -[CSCoverSheetViewControllerBase presentationAltitude]
  -[CSCoverSheetViewControllerBase updateBehaviorForController:]
  -[CSCoverSheetViewControllerBase handleAction:fromSender:]
  -[CSCoverSheetViewControllerBase externalPresentation]
  -[CSCoverSheetViewControllerBase viewWillLayoutSubviews]
  -[CSCoverSheetViewControllerBase presenter]
  -[CSCoverSheetViewControllerBase presentationRegions]
  -[CSCoverSheetViewControllerBase participantState]
  -[CSCoverSheetViewControllerBase effectiveContentSizeForScrollView:]
  -[CSCoverSheetViewControllerBase sendAction:]
  -[CSCoverSheetViewControllerBase initWithNibName:bundle:]
  -[CSCoverSheetViewControllerBase viewDidAppear:]
  -[CSCoverSheetViewControllerBase updateAppearanceForController:]
  -[CSCoverSheetViewControllerBase succinctDescription]
  -[CSCoverSheetViewControllerBase updateForPresentation:]
  -[CSCoverSheetViewControllerBase _presenter]
  -[CSCoverSheetViewControllerBase handleEvent:]
  -[CSCoverSheetViewControllerBase setDisplayLayoutElementActive:]
  -[CSCoverSheetViewControllerBase presentationTransition]
  -[CSCoverSheetViewControllerBase configureDisplayLayoutElement:]
  -[CSCoverSheetViewControllerBase conformsToCSCoverSheetViewControlling]
  -[CSCoverSheetViewControllerBase isPresentation]
  -[CSCoverSheetViewControllerBase updateAppearanceForController:withAnimationSettings:completion:]
  -[CSCoverSheetViewControllerBase viewWillAppear:]
  -[CSCoverSheetViewControllerBase conformsToCSCoverSheetViewPresenting]
  -[CSCoverSheetViewControllerBase _canShowWhileLocked]
  -[CSCoverSheetViewControllerBase viewWillTransitionToSize:withTransitionCoordinator:]
  -[CSCoverSheetViewControllerBase viewDidDisappear:]
  -[CSCoverSheetViewControllerBase viewWillDisappear:]
  -[CSCoverSheetViewControllerBase presentationCoordinateSpace]
  -[CSCoverSheetViewControllerBase viewDidLayoutSubviews]
  -[CSCoverSheetViewControllerBase descriptionWithMultilinePrefix:]
  -[CSCoverSheetViewControllerBase loadView]
  -[CSCoverSheetViewControllerBase performCustomTransitionToVisible:withAnimationSettings:completion:]
  -[CSCoverSheetViewControllerBase descriptionBuilderWithMultilinePrefix:]
  -[CSCoverSheetViewControllerBase wouldHandleButtonEvent:]
  -[CSCoverSheetViewControllerBase registerView:forRole:]
  -[CSCoverSheetViewControllerBase willTransitionToPresented:]
  -[CSCoverSheetViewControllerBase kitPresentedViewController]
  -[CSCoverSheetViewControllerBase rebuildAppearance]
  -[CSCoverSheetViewControllerBase rebuildBehavior]
  -[CSCoverSheetViewControllerBase updateAppearance:completion:]
  -[CSCoverSheetViewControllerBase isDisappeared]
  -[CSCoverSheetViewControllerBase setDisplayLayoutElementActive:immediately:]
  -[CSCoverSheetViewControllerBase presentationCancelsTouches]
  -[CSCoverSheetViewControllerBase unregisterAllViews]
  -[CSCoverSheetViewControllerBase registerView:forRole:options:]
  -[CSCoverSheetViewControllerBase aggregatePresentation:]
  -[CSCoverSheetViewControllerBase handleAppearanceUpdateFromController:animationSettings:]
  -[CSCoverSheetViewControllerBase didTransitionToPresented:]
  -[CSCoverSheetViewControllerBase updateAppearance:]
  -[CSCoverSheetViewControllerBase updateBehavior:]
  -[CSCoverSheetViewControllerBase _rebuildDisposition]
  -[CSCoverSheetViewControllerBase _presentationParticipant]
  -[CSCoverSheetViewControllerBase _rebuildPresentation]
  -[CSCoverSheetViewControllerBase _regionsForView:]
  -[CSCoverSheetViewControllerBase _rebuildAppearance]
  -[CSCoverSheetViewControllerBase _layoutIfNeededForPresentation]
  -[CSCoverSheetViewControllerBase _rebuildBehavior]
  -[CSCoverSheetViewControllerBase handleAction:fromController:]


CSChargingViewController : CSCoverSheetViewControllerBase <BCBatteryDeviceObserving>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CSChargingViewController presentationPriority]
  -[CSChargingViewController viewDidLoad]
  -[CSChargingViewController init]
  -[CSChargingViewController presentationStyle]
  -[CSChargingViewController aggregateAppearance:]
  -[CSChargingViewController presentationType]
  -[CSChargingViewController .cxx_destruct]
  -[CSChargingViewController viewDidAppear:]
  -[CSChargingViewController handleEvent:]
  -[CSChargingViewController connectedDevicesDidChange:]
  -[CSChargingViewController durationBeforeDismissal]
  -[CSChargingViewController performDismissalAnimationWithCompletionHandler:]
  -[CSChargingViewController _updateChargingViewIfNecessary]
  -[CSChargingViewController _updateChargingViewLegibility]
  -[CSChargingViewController _createNewChargingViewForDoubleBattery:]
  -[CSChargingViewController initWithChargingInfo:]


CSLockScreenMesaSettings : PTSettings /System/Library/PrivateFrameworks/UserNotificationsUIKit.framework/UserNotificationsUIKit
 @property  CSLockScreenBiometricFailureSettings *firstFailureSettings
 @property  CSLockScreenBiometricFailureSettings *secondFailureSettings
 @property  CSLockScreenBiometricFailureSettings *thirdFailureSettings
 @property  CSLockScreenBiometricFailureSettings *fourthFailureSettings
 @property  CSLockScreenBiometricFailureSettings *fifthFailureSettings
 @property  BOOL passcodeRequiredEventsCountAsFailures
 @property  BOOL flashRedOnPasscodeRequiredEvents
 @property  BOOL successFeedbackWaitsUntilButtonUp
 @property  double slowPressDuration

  // class methods
  +[CSLockScreenMesaSettings settingsControllerModule]

  // instance methods
  -[CSLockScreenMesaSettings setDefaultValues]
  -[CSLockScreenMesaSettings .cxx_destruct]
  -[CSLockScreenMesaSettings slowPressDuration]
  -[CSLockScreenMesaSettings setSlowPressDuration:]
  -[CSLockScreenMesaSettings passcodeRequiredEventsCountAsFailures]
  -[CSLockScreenMesaSettings flashRedOnPasscodeRequiredEvents]
  -[CSLockScreenMesaSettings successFeedbackWaitsUntilButtonUp]
  -[CSLockScreenMesaSettings firstFailureSettings]
  -[CSLockScreenMesaSettings secondFailureSettings]
  -[CSLockScreenMesaSettings thirdFailureSettings]
  -[CSLockScreenMesaSettings fourthFailureSettings]
  -[CSLockScreenMesaSettings fifthFailureSettings]
  -[CSLockScreenMesaSettings setPasscodeRequiredEventsCountAsFailures:]
  -[CSLockScreenMesaSettings setFlashRedOnPasscodeRequiredEvents:]
  -[CSLockScreenMesaSettings setSuccessFeedbackWaitsUntilButtonUp:]
  -[CSLockScreenMesaSettings setFirstFailureSettings:]
  -[CSLockScreenMesaSettings setSecondFailureSettings:]
  -[CSLockScreenMesaSettings setThirdFailureSettings:]
  -[CSLockScreenMesaSettings setFourthFailureSettings:]
  -[CSLockScreenMesaSettings setFifthFailureSettings:]


CSAdjunctListView : CSCoverSheetViewBase
 @property  UIStackView *stackView

  // instance methods
  -[CSAdjunctListView stackView]
  -[CSAdjunctListView .cxx_destruct]
  -[CSAdjunctListView _layoutStackView]
  -[CSAdjunctListView setStackView:]
  -[CSAdjunctListView layoutSubviews]


CSVibrantWallpaperButton : SBUIVibrantButton /System/Library/PrivateFrameworks/SpringBoardUI.framework/SpringBoardUI
 @property  <CSWallpaperColorProvider> *wallpaperColorProvider
 @property  <CSWallpaperViewProviding> *wallpaperViewProvider
 @property  UIView<CSWallpaperView> *effectView

  // instance methods
  -[CSVibrantWallpaperButton effectView]
  -[CSVibrantWallpaperButton wallpaperViewProvider]
  -[CSVibrantWallpaperButton initWithFrame:]
  -[CSVibrantWallpaperButton wallpaperColorProvider]
  -[CSVibrantWallpaperButton .cxx_destruct]
  -[CSVibrantWallpaperButton setWallpaperColorProvider:]
  -[CSVibrantWallpaperButton setLegibilitySettings:]
  -[CSVibrantWallpaperButton _updateVibrancy]
  -[CSVibrantWallpaperButton setWallpaperViewProvider:]


CSRemoteContentSessionManager : NSObject /usr/lib/libSystem.B.dylib <CSRemoteContentSessionPreferencesProvider>
 @property  <CSRemoteContentSessionHostDelegate> *forwardingHostDelegate
 @property  <SBFAuthenticationStatusProvider> *authenticationStatusProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CSRemoteContentSessionManager createSessionWithDefinition:]
  -[CSRemoteContentSessionManager .cxx_destruct]
  -[CSRemoteContentSessionManager authenticationStatusProvider]
  -[CSRemoteContentSessionManager initWithAuthenticationStatusProvider:]
  -[CSRemoteContentSessionManager setForwardingHostDelegate:]
  -[CSRemoteContentSessionManager didInvalidateSessionWithSessionID:]
  -[CSRemoteContentSessionManager preferencesForRemoteContentSession:]
  -[CSRemoteContentSessionManager remoteContentSession:didUpdateWithPreferences:]
  -[CSRemoteContentSessionManager _queue_existingSessions]
  -[CSRemoteContentSessionManager _queue_existingSessionsWithDefinition:]
  -[CSRemoteContentSessionManager _queue_createSessionWithDefinition:]
  -[CSRemoteContentSessionManager existingSessions]
  -[CSRemoteContentSessionManager existingSessionsWithDefinition:]
  -[CSRemoteContentSessionManager forwardingHostDelegate]


SBHorizontalScrollFailureTriangleView : UIView /System/Library/Frameworks/QuartzCore.framework/QuartzCore
 @property  UIColor *contentColor

  // instance methods
  -[SBHorizontalScrollFailureTriangleView .cxx_destruct]
  -[SBHorizontalScrollFailureTriangleView drawRect:]
  -[SBHorizontalScrollFailureTriangleView contentColor]
  -[SBHorizontalScrollFailureTriangleView setContentColor:]
  -[SBHorizontalScrollFailureTriangleView initWithStyle:recognizer:forPoint:withMaxVerticalOffset:inView:pointingRight:]


CSHorizontalScrollFailureRecognizer : UIGestureRecognizer /System/Library/Frameworks/QuartzCore.framework/QuartzCore <PTSettingsKeyObserver>
 @property  BOOL viewDebugArea
 @property  BOOL allowMultiTouch
 @property  unsigned long maxAllowableVerticalOffset
 @property  double minAllowedTopAngle
 @property  double maxAllowedTopAngle
 @property  double minAllowedBottomAngle
 @property  double maxAllowedBottomAngle
 @property  UIEvent *triggeredEvent
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CSHorizontalScrollFailureRecognizer setAllowMultiTouch:]
  -[CSHorizontalScrollFailureRecognizer _setDebugViewsVisible:]
  -[CSHorizontalScrollFailureRecognizer settings:changedValueForKey:]
  -[CSHorizontalScrollFailureRecognizer touchesBegan:withEvent:]
  -[CSHorizontalScrollFailureRecognizer _updateEnabled]
  -[CSHorizontalScrollFailureRecognizer _isLocationOutOfBounds:]
  -[CSHorizontalScrollFailureRecognizer dealloc]
  -[CSHorizontalScrollFailureRecognizer _setArmed:]
  -[CSHorizontalScrollFailureRecognizer setState:]
  -[CSHorizontalScrollFailureRecognizer maxAllowableVerticalOffset]
  -[CSHorizontalScrollFailureRecognizer .cxx_destruct]
  -[CSHorizontalScrollFailureRecognizer canBePreventedByGestureRecognizer:]
  -[CSHorizontalScrollFailureRecognizer _maxAllowableVerticalOffsetForPoint:]
  -[CSHorizontalScrollFailureRecognizer minAllowedBottomAngle]
  -[CSHorizontalScrollFailureRecognizer _effectiveBottomAngle]
  -[CSHorizontalScrollFailureRecognizer _effectiveTopAngle]
  -[CSHorizontalScrollFailureRecognizer allowMultiTouch]
  -[CSHorizontalScrollFailureRecognizer touchesCancelled:withEvent:]
  -[CSHorizontalScrollFailureRecognizer isEnabled]
  -[CSHorizontalScrollFailureRecognizer setMaxAllowedTopAngle:]
  -[CSHorizontalScrollFailureRecognizer _computeEffectiveAngleFromMin:max:]
  -[CSHorizontalScrollFailureRecognizer _averagePointFromTouches]
  -[CSHorizontalScrollFailureRecognizer maxAllowedTopAngle]
  -[CSHorizontalScrollFailureRecognizer maxAllowedBottomAngle]
  -[CSHorizontalScrollFailureRecognizer setMaxAllowedBottomAngle:]
  -[CSHorizontalScrollFailureRecognizer minAllowedTopAngle]
  -[CSHorizontalScrollFailureRecognizer setMinAllowedTopAngle:]
  -[CSHorizontalScrollFailureRecognizer _touchesFromEvent:]
  -[CSHorizontalScrollFailureRecognizer _isOutOfBoundsVertically:]
  -[CSHorizontalScrollFailureRecognizer reset]
  -[CSHorizontalScrollFailureRecognizer triggeredEvent]
  -[CSHorizontalScrollFailureRecognizer initWithTarget:action:]
  -[CSHorizontalScrollFailureRecognizer _setDebugViewsColor:]
  -[CSHorizontalScrollFailureRecognizer setEnabled:]
  -[CSHorizontalScrollFailureRecognizer viewDebugArea]
  -[CSHorizontalScrollFailureRecognizer _loadFromSettings:]
  -[CSHorizontalScrollFailureRecognizer setViewDebugArea:]
  -[CSHorizontalScrollFailureRecognizer _recognizeForMultiTouchIfNecessary:]
  -[CSHorizontalScrollFailureRecognizer setMinAllowedBottomAngle:]
  -[CSHorizontalScrollFailureRecognizer _activeTouchCountForEvent:]
  -[CSHorizontalScrollFailureRecognizer _locationOfTouch:inView:]
  -[CSHorizontalScrollFailureRecognizer touchesMoved:withEvent:]
  -[CSHorizontalScrollFailureRecognizer _effectivelyEnabled]
  -[CSHorizontalScrollFailureRecognizer touchesEnded:withEvent:]
  -[CSHorizontalScrollFailureRecognizer _isOutOfBounds:forAngle:]
  -[CSHorizontalScrollFailureRecognizer setMaxAllowableVerticalOffset:]


CSUserPresenceMonitor : NSObject /usr/lib/libSystem.B.dylib <CSEventHandling>
 @property  BOOL userPresenceDetectedSinceWake
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CSUserPresenceMonitor _updateFaceDetectionState]
  -[CSUserPresenceMonitor conformsToCSEventHandling]
  -[CSUserPresenceMonitor enableDetectionForReason:]
  -[CSUserPresenceMonitor initWithBiometricResource:]
  -[CSUserPresenceMonitor dealloc]
  -[CSUserPresenceMonitor .cxx_destruct]
  -[CSUserPresenceMonitor disableDetectionForReason:]
  -[CSUserPresenceMonitor isUserPresenceDetectionSupported]
  -[CSUserPresenceMonitor _isFaceDetectPermitted]
  -[CSUserPresenceMonitor _handleBiometricEvent:]
  -[CSUserPresenceMonitor userPresenceDetectedSinceWake]
  -[CSUserPresenceMonitor handleEvent:]
  -[CSUserPresenceMonitor _setUserPresenceDetectedSinceWake:]
  -[CSUserPresenceMonitor removeObserver:]
  -[CSUserPresenceMonitor addObserver:]
  -[CSUserPresenceMonitor wouldHandleButtonEvent:]


CSContentActionInterpreter : NSObject /usr/lib/libSystem.B.dylib
 @property  UIViewController *nowPlayingViewController

  // instance methods
  -[CSContentActionInterpreter .cxx_destruct]
  -[CSContentActionInterpreter setNowPlayingViewController:]
  -[CSContentActionInterpreter nowPlayingViewController]
  -[CSContentActionInterpreter _viewControllerFromAction:completion:]


CSDashBoardScrollModifierSettings : PTSettings /System/Library/PrivateFrameworks/UserNotificationsUIKit.framework/UserNotificationsUIKit
 @property  long long strategy
 @property  double maxScrollDistance
 @property  BOOL cancelScrollingIfTooMuchDrag
 @property  double accumulatedDragThresholdPercentage
 @property  double maxDragFromVerticalPerFrame
 @property  double powerOfVerticalDirectionSine2
 @property  double inertialMultiplierSigmoidBase
 @property  double inertialMultiplierSigmoidRange
 @property  double inertialMultiplierSigmoidPivot
 @property  double inertialMultiplierSigmoidAlpha
 @property  double minPercentageSigmoidBase
 @property  double minPercentageSigmoidRange
 @property  double minPercentageSigmoidPivot
 @property  double minPercentageSigmoidAlpha

  // class methods
  +[CSDashBoardScrollModifierSettings settingsControllerModule]

  // instance methods
  -[CSDashBoardScrollModifierSettings setDefaultValues]
  -[CSDashBoardScrollModifierSettings strategy]
  -[CSDashBoardScrollModifierSettings setStrategy:]
  -[CSDashBoardScrollModifierSettings setAccumulatedDragThresholdPercentage:]
  -[CSDashBoardScrollModifierSettings setInertialMultiplierSigmoidPivot:]
  -[CSDashBoardScrollModifierSettings setMinPercentageSigmoidPivot:]
  -[CSDashBoardScrollModifierSettings powerOfVerticalDirectionSine2]
  -[CSDashBoardScrollModifierSettings setMinPercentageSigmoidRange:]
  -[CSDashBoardScrollModifierSettings inertialMultiplierSigmoidBase]
  -[CSDashBoardScrollModifierSettings minPercentageSigmoidPivot]
  -[CSDashBoardScrollModifierSettings setMaxDragFromVerticalPerFrame:]
  -[CSDashBoardScrollModifierSettings accumulatedDragThresholdPercentage]
  -[CSDashBoardScrollModifierSettings maxDragFromVerticalPerFrame]
  -[CSDashBoardScrollModifierSettings setMinPercentageSigmoidAlpha:]
  -[CSDashBoardScrollModifierSettings inertialMultiplierSigmoidRange]
  -[CSDashBoardScrollModifierSettings maxScrollDistance]
  -[CSDashBoardScrollModifierSettings setCancelScrollingIfTooMuchDrag:]
  -[CSDashBoardScrollModifierSettings minPercentageSigmoidRange]
  -[CSDashBoardScrollModifierSettings setMinPercentageSigmoidBase:]
  -[CSDashBoardScrollModifierSettings setPowerOfVerticalDirectionSine2:]
  -[CSDashBoardScrollModifierSettings cancelScrollingIfTooMuchDrag]
  -[CSDashBoardScrollModifierSettings inertialMultiplierSigmoidPivot]
  -[CSDashBoardScrollModifierSettings inertialMultiplierSigmoidAlpha]
  -[CSDashBoardScrollModifierSettings minPercentageSigmoidAlpha]
  -[CSDashBoardScrollModifierSettings setInertialMultiplierSigmoidRange:]
  -[CSDashBoardScrollModifierSettings minPercentageSigmoidBase]
  -[CSDashBoardScrollModifierSettings setInertialMultiplierSigmoidAlpha:]
  -[CSDashBoardScrollModifierSettings setMaxScrollDistance:]
  -[CSDashBoardScrollModifierSettings setInertialMultiplierSigmoidBase:]


CSNowPlayingController : NSObject /usr/lib/libSystem.B.dylib
 @property  CSMediaControlsViewController *controlsViewController

  // instance methods
  -[CSNowPlayingController init]
  -[CSNowPlayingController .cxx_destruct]
  -[CSNowPlayingController controlsViewController]


CSTeachableMomentsContainerView : CSCoverSheetViewBase <SBUIOptionalLegibility>
 @property  UIView *controlCenterGrabberEffectContainerView
 @property  UIView *controlCenterTutorsContainerView
 @property  UIView *controlCenterGrabberContainerView
 @property  UIView *controlCenterGlyphContainerView
 @property  UIView *callToActionLabelContainerView
 @property  UIView *homeAffordanceContainerView
 @property  UIView *homeAffordanceView
 @property  UIView *controlCenterGrabberView
 @property  UIView *controlCenterGrabberPositionPlaceholderView
 @property  UIImageView *controlCenterGlyphView
 @property  SBUILegibilityLabel *callToActionLabel
 @property  UIView *callToActionLabelPositionPlaceholderView
 @property  UIStatusBar *statusBarToFollow
 @property  _UILegibilitySettings *legibilitySettings
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CSTeachableMomentsContainerView _updateViewsForLegibilitySettings]
  -[CSTeachableMomentsContainerView setCallToActionLabel:]
  -[CSTeachableMomentsContainerView legibilitySettings]
  -[CSTeachableMomentsContainerView initWithFrame:]
  -[CSTeachableMomentsContainerView .cxx_destruct]
  -[CSTeachableMomentsContainerView callToActionLabel]
  -[CSTeachableMomentsContainerView hitTest:withEvent:]
  -[CSTeachableMomentsContainerView setLegibilitySettings:]
  -[CSTeachableMomentsContainerView presentationRegions]
  -[CSTeachableMomentsContainerView _preferredTextSizeChanged:]
  -[CSTeachableMomentsContainerView layoutSubviews]
  -[CSTeachableMomentsContainerView homeAffordanceView]
  -[CSTeachableMomentsContainerView _layoutCallToActionLabel]
  -[CSTeachableMomentsContainerView setHomeAffordanceView:]
  -[CSTeachableMomentsContainerView callToActionLabelPositionPlaceholderView]
  -[CSTeachableMomentsContainerView controlCenterGrabberPositionPlaceholderView]
  -[CSTeachableMomentsContainerView controlCenterGrabberView]
  -[CSTeachableMomentsContainerView controlCenterGlyphView]
  -[CSTeachableMomentsContainerView controlCenterGlyphContainerView]
  -[CSTeachableMomentsContainerView controlCenterGrabberContainerView]
  -[CSTeachableMomentsContainerView setStatusBarToFollow:]
  -[CSTeachableMomentsContainerView setHomeAffordanceContainerView:]
  -[CSTeachableMomentsContainerView statusBarIsReady]
  -[CSTeachableMomentsContainerView controlCenterTutorsContainerView]
  -[CSTeachableMomentsContainerView callToActionLabelContainerView]
  -[CSTeachableMomentsContainerView createCallToActionLabel]
  -[CSTeachableMomentsContainerView _addCallToActionLabel]
  -[CSTeachableMomentsContainerView _addControlCenterTutors]
  -[CSTeachableMomentsContainerView _layoutHomeAffordanceContainer]
  -[CSTeachableMomentsContainerView _layoutControlCenterGrabberAndGlyph]
  -[CSTeachableMomentsContainerView _callToActionLabelFont]
  -[CSTeachableMomentsContainerView setCallToActionLabelContainerView:]
  -[CSTeachableMomentsContainerView setCallToActionLabelPositionPlaceholderView:]
  -[CSTeachableMomentsContainerView setControlCenterTutorsContainerView:]
  -[CSTeachableMomentsContainerView setControlCenterGrabberContainerView:]
  -[CSTeachableMomentsContainerView setControlCenterGrabberEffectContainerView:]
  -[CSTeachableMomentsContainerView setControlCenterGrabberView:]
  -[CSTeachableMomentsContainerView setControlCenterGrabberPositionPlaceholderView:]
  -[CSTeachableMomentsContainerView setControlCenterGlyphContainerView:]
  -[CSTeachableMomentsContainerView setControlCenterGlyphView:]
  -[CSTeachableMomentsContainerView homeAffordanceContainerView]
  -[CSTeachableMomentsContainerView controlCenterGrabberEffectContainerView]
  -[CSTeachableMomentsContainerView _grabberCenterForCointainerBounds:grabberTop:grabberSize:]
  -[CSTeachableMomentsContainerView statusBarToFollow]


CSTestingSupportNotificationGenerator : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[CSTestingSupportNotificationGenerator _nextNotificationRequest]
  -[CSTestingSupportNotificationGenerator postNewNotificationToDestination:]


CSRemoteContentHostViewController : _UIRemoteViewController /System/Library/Frameworks/QuartzCore.framework/QuartzCore <SBSRemoteContentHostInterface>
 @property  SBSRemoteContentDefinition *definition
 @property  <CSRemoteContentHostDelegate> *delegate

  // class methods
  +[CSRemoteContentHostViewController exportedInterface]
  +[CSRemoteContentHostViewController serviceViewControllerInterface]

  // instance methods
  -[CSRemoteContentHostViewController .cxx_destruct]
  -[CSRemoteContentHostViewController definition]
  -[CSRemoteContentHostViewController _canShowWhileLocked]
  -[CSRemoteContentHostViewController setDelegate:]
  -[CSRemoteContentHostViewController didChangeStyle]
  -[CSRemoteContentHostViewController getContentBoundsWithReplyBlock:]
  -[CSRemoteContentHostViewController didDismissForDismissType:]
  -[CSRemoteContentHostViewController delegate]
  -[CSRemoteContentHostViewController viewServiceDidTerminateWithError:]
  -[CSRemoteContentHostViewController setDefinition:]
  -[CSRemoteContentHostViewController configureWithDefinition:]
  -[CSRemoteContentHostViewController contentPreferences]
  -[CSRemoteContentHostViewController _fetchContentPreferences]
  -[CSRemoteContentHostViewController _updateContentPreferences:]


CSScrollGestureController : NSObject /usr/lib/libSystem.B.dylib <UIGestureRecognizerDelegate, BSDescriptionProviding, CSEventHandling>
 @property  CSHorizontalScrollFailureRecognizer *horizontalFailureGestureRecognizer
 @property  long long scrollingStrategy
 @property  <CSScrollGestureControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CSScrollGestureController scrollingStrategy]
  -[CSScrollGestureController conformsToCSEventHandling]
  -[CSScrollGestureController dealloc]
  -[CSScrollGestureController .cxx_destruct]
  -[CSScrollGestureController succinctDescriptionBuilder]
  -[CSScrollGestureController succinctDescription]
  -[CSScrollGestureController handleEvent:]
  -[CSScrollGestureController setDelegate:]
  -[CSScrollGestureController gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[CSScrollGestureController invalidate]
  -[CSScrollGestureController gestureRecognizer:shouldRequireFailureOfGestureRecognizer:]
  -[CSScrollGestureController delegate]
  -[CSScrollGestureController descriptionWithMultilinePrefix:]
  -[CSScrollGestureController gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:]
  -[CSScrollGestureController descriptionBuilderWithMultilinePrefix:]
  -[CSScrollGestureController setScrollingStrategy:]
  -[CSScrollGestureController wouldHandleButtonEvent:]
  -[CSScrollGestureController initWithScrollableView:]
  -[CSScrollGestureController _horizontalScrollFailureGestureRecognizerChanged:]
  -[CSScrollGestureController _updateForScrollingStrategy:fromScrollingStrategy:]
  -[CSScrollGestureController horizontalFailureGestureRecognizer]
  -[CSScrollGestureController _shouldFailHorizontalSwipesForScrollingStrategy:]
  -[CSScrollGestureController _shouldAllowScrollForScrollingStrategy:]
  -[CSScrollGestureController setHorizontalFailureGestureRecognizer:]


CSDNDBedtimeGreetingViewController : CSModalViewControllerBase <CSModalViewDelegate>
 @property  <CSDNDBedtimeGreetingDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CSDNDBedtimeGreetingViewController aggregateAppearance:]
  -[CSDNDBedtimeGreetingViewController dealloc]
  -[CSDNDBedtimeGreetingViewController .cxx_destruct]
  -[CSDNDBedtimeGreetingViewController handleEvent:]
  -[CSDNDBedtimeGreetingViewController setDelegate:]
  -[CSDNDBedtimeGreetingViewController delegate]
  -[CSDNDBedtimeGreetingViewController loadView]
  -[CSDNDBedtimeGreetingViewController wouldHandleButtonEvent:]
  -[CSDNDBedtimeGreetingViewController handleSecondaryActionForView:]
  -[CSDNDBedtimeGreetingViewController initWithLegibilityPrimaryColor:]
  -[CSDNDBedtimeGreetingViewController _greetingString]


CSAction : NSObject /usr/lib/libSystem.B.dylib
 @property  long long type
 @property  SBFLockScreenActionContext *context

  // class methods
  +[CSAction actionWithType:]
  +[CSAction actionWithContext:]

  // instance methods
  -[CSAction context]
  -[CSAction setType:]
  -[CSAction .cxx_destruct]
  -[CSAction succinctDescriptionBuilder]
  -[CSAction setContext:]
  -[CSAction type]
  -[CSAction succinctDescription]
  -[CSAction descriptionWithMultilinePrefix:]
  -[CSAction descriptionBuilderWithMultilinePrefix:]


CSQuickActionsView : SBFTouchPassThroughView /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices <PTSettingsKeyObserver>
 @property  CSDashBoardQuickActionsButtonSettings *quickActionsSettings
 @property  <CSQuickActionsDelegate> *delegate
 @property  CSQuickActionsButton *flashlightButton
 @property  CSQuickActionsButton *cameraButton
 @property  BOOL flashlightOn
 @property  _UILegibilitySettings *legibilitySettings
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CSQuickActionsView _insetY]
  -[CSQuickActionsView settings:changedValueForKey:]
  -[CSQuickActionsView legibilitySettings]
  -[CSQuickActionsView _prototypingAllowsButtons]
  -[CSQuickActionsView flashlightButton]
  -[CSQuickActionsView setCameraButton:]
  -[CSQuickActionsView refreshSupportedButtons]
  -[CSQuickActionsView _layoutQuickActionButtons]
  -[CSQuickActionsView .cxx_destruct]
  -[CSQuickActionsView _addTargetsToButton:]
  -[CSQuickActionsView flashlightOn]
  -[CSQuickActionsView _setButtonBackgroundVisible:]
  -[CSQuickActionsView setFlashlightButton:]
  -[CSQuickActionsView _updateButtonBackgroundVisible]
  -[CSQuickActionsView handleButtonPress:]
  -[CSQuickActionsView setLegibilitySettings:]
  -[CSQuickActionsView setFlashlightOn:]
  -[CSQuickActionsView initWithFrame:delegate:]
  -[CSQuickActionsView setQuickActionsSettings:]
  -[CSQuickActionsView _insetX]
  -[CSQuickActionsView handleButtonTouchEnded:]
  -[CSQuickActionsView cameraButton]
  -[CSQuickActionsView handleButtonTouchBegan:]
  -[CSQuickActionsView quickActionsSettings]
  -[CSQuickActionsView _buttonOutsets]
  -[CSQuickActionsView setDelegate:]
  -[CSQuickActionsView _buttonGroupName]
  -[CSQuickActionsView _addOrRemoveFlashlightButtonIfNecessary]
  -[CSQuickActionsView delegate]
  -[CSQuickActionsView _addOrRemoveCameraButtonIfNecessary]
  -[CSQuickActionsView _removeTargetsFromButton:]
  -[CSQuickActionsView layoutSubviews]
  -[CSQuickActionsView refreshFlashlightAvailability]


CSHomeButtonShowPasscodeRecognizer : NSObject /usr/lib/libSystem.B.dylib <SBHomeButtonShowPasscodeRecognizer>
 @property  <SBHomeButtonShowPasscodeRecognizerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CSHomeButtonShowPasscodeRecognizer dealloc]
  -[CSHomeButtonShowPasscodeRecognizer .cxx_destruct]
  -[CSHomeButtonShowPasscodeRecognizer succinctDescriptionBuilder]
  -[CSHomeButtonShowPasscodeRecognizer _state]
  -[CSHomeButtonShowPasscodeRecognizer succinctDescription]
  -[CSHomeButtonShowPasscodeRecognizer handleBiometricEvent:]
  -[CSHomeButtonShowPasscodeRecognizer setDelegate:]
  -[CSHomeButtonShowPasscodeRecognizer delegate]
  -[CSHomeButtonShowPasscodeRecognizer descriptionWithMultilinePrefix:]
  -[CSHomeButtonShowPasscodeRecognizer descriptionBuilderWithMultilinePrefix:]
  -[CSHomeButtonShowPasscodeRecognizer noteAuthenticated:]
  -[CSHomeButtonShowPasscodeRecognizer initWithFingerOn:]
  -[CSHomeButtonShowPasscodeRecognizer _reallySetState:forReason:]
  -[CSHomeButtonShowPasscodeRecognizer _invalidateMinimumTimer]
  -[CSHomeButtonShowPasscodeRecognizer _switchedFromState:toState:]
  -[CSHomeButtonShowPasscodeRecognizer _minimumTimerFired]
  -[CSHomeButtonShowPasscodeRecognizer _simulateTimerFiring]


CSEnhancedModalButton : UIButton /System/Library/Frameworks/QuartzCore.framework/QuartzCore
  // instance methods
  -[CSEnhancedModalButton initWithFrame:]
  -[CSEnhancedModalButton _buttonPressed:]
  -[CSEnhancedModalButton _setContinuousCornerRadius:]
  -[CSEnhancedModalButton .cxx_destruct]
  -[CSEnhancedModalButton layoutSubviews]
  -[CSEnhancedModalButton _buttonReleased:]
  -[CSEnhancedModalButton _addVisualEffect]
  -[CSEnhancedModalButton _addBackgroundHighlightView]


CSDashBoardRemoteContentSettings : PTSettings /System/Library/PrivateFrameworks/UserNotificationsUIKit.framework/UserNotificationsUIKit
 @property  BOOL overrideContentPreferences
 @property  long long dateTimeStyleOverride
 @property  long long backgroundStyleOverride
 @property  long long homeGestureModeOverride
 @property  BOOL forceLuminanceReduction
 @property  BOOL animatesDimming
 @property  double dimDuration
 @property  BOOL animatesUndimming
 @property  double undimDuration
 @property  BOOL undimsOnTap
 @property  double bottomLuminanceValue
 @property  double lowerLuminanceValue
 @property  double upperLuminanceValue
 @property  double topLuminanceValue
 @property  double lighterBottomLuminanceValue
 @property  double lighterLowerLuminanceValue
 @property  double lighterUpperLuminanceValue
 @property  double lighterTopLuminanceValue
 @property  BOOL usesLegacyDismissalLogic
 @property  double legacyThreshold
 @property  double directThreshold
 @property  double directFlingDampeningFactor

  // class methods
  +[CSDashBoardRemoteContentSettings settingsControllerModule]

  // instance methods
  -[CSDashBoardRemoteContentSettings setDefaultValues]
  -[CSDashBoardRemoteContentSettings animatesDimming]
  -[CSDashBoardRemoteContentSettings animatesUndimming]
  -[CSDashBoardRemoteContentSettings dimDuration]
  -[CSDashBoardRemoteContentSettings undimDuration]
  -[CSDashBoardRemoteContentSettings lighterBottomLuminanceValue]
  -[CSDashBoardRemoteContentSettings lighterLowerLuminanceValue]
  -[CSDashBoardRemoteContentSettings lighterUpperLuminanceValue]
  -[CSDashBoardRemoteContentSettings lighterTopLuminanceValue]
  -[CSDashBoardRemoteContentSettings bottomLuminanceValue]
  -[CSDashBoardRemoteContentSettings lowerLuminanceValue]
  -[CSDashBoardRemoteContentSettings upperLuminanceValue]
  -[CSDashBoardRemoteContentSettings topLuminanceValue]
  -[CSDashBoardRemoteContentSettings undimsOnTap]
  -[CSDashBoardRemoteContentSettings usesLegacyDismissalLogic]
  -[CSDashBoardRemoteContentSettings directFlingDampeningFactor]
  -[CSDashBoardRemoteContentSettings legacyThreshold]
  -[CSDashBoardRemoteContentSettings directThreshold]
  -[CSDashBoardRemoteContentSettings overrideContentPreferences]
  -[CSDashBoardRemoteContentSettings dateTimeStyleOverride]
  -[CSDashBoardRemoteContentSettings backgroundStyleOverride]
  -[CSDashBoardRemoteContentSettings homeGestureModeOverride]
  -[CSDashBoardRemoteContentSettings forceLuminanceReduction]
  -[CSDashBoardRemoteContentSettings setOverrideContentPreferences:]
  -[CSDashBoardRemoteContentSettings setDateTimeStyleOverride:]
  -[CSDashBoardRemoteContentSettings setBackgroundStyleOverride:]
  -[CSDashBoardRemoteContentSettings setHomeGestureModeOverride:]
  -[CSDashBoardRemoteContentSettings setForceLuminanceReduction:]
  -[CSDashBoardRemoteContentSettings setAnimatesDimming:]
  -[CSDashBoardRemoteContentSettings setDimDuration:]
  -[CSDashBoardRemoteContentSettings setAnimatesUndimming:]
  -[CSDashBoardRemoteContentSettings setUndimDuration:]
  -[CSDashBoardRemoteContentSettings setUndimsOnTap:]
  -[CSDashBoardRemoteContentSettings setBottomLuminanceValue:]
  -[CSDashBoardRemoteContentSettings setLowerLuminanceValue:]
  -[CSDashBoardRemoteContentSettings setUpperLuminanceValue:]
  -[CSDashBoardRemoteContentSettings setTopLuminanceValue:]
  -[CSDashBoardRemoteContentSettings setLighterBottomLuminanceValue:]
  -[CSDashBoardRemoteContentSettings setLighterLowerLuminanceValue:]
  -[CSDashBoardRemoteContentSettings setLighterUpperLuminanceValue:]
  -[CSDashBoardRemoteContentSettings setLighterTopLuminanceValue:]
  -[CSDashBoardRemoteContentSettings setUsesLegacyDismissalLogic:]
  -[CSDashBoardRemoteContentSettings setLegacyThreshold:]
  -[CSDashBoardRemoteContentSettings setDirectThreshold:]
  -[CSDashBoardRemoteContentSettings setDirectFlingDampeningFactor:]


CSLockScreenTestPluginSettings : PTSettings /System/Library/PrivateFrameworks/UserNotificationsUIKit.framework/UserNotificationsUIKit
 @property  BOOL enablePlugin
 @property  BOOL enableLostModePlugin
 @property  long long presentationStyle
 @property  long long backgroundStyle
 @property  long long notificationBehavior
 @property  BOOL restrictSiri
 @property  BOOL restrictCamera
 @property  BOOL restrictUnlock
 @property  BOOL restrictLogout
 @property  BOOL restrictTouchID
 @property  BOOL restrictMediaControls
 @property  BOOL restrictTodayCenter
 @property  BOOL restrictControlCenter
 @property  BOOL hideStatusBar
 @property  BOOL hideTimeAndDate
 @property  BOOL hideSubtitle
 @property  NSString *subtitleValue
 @property  BOOL disableOnUnlock

  // class methods
  +[CSLockScreenTestPluginSettings settingsControllerModule]

  // instance methods
  -[CSLockScreenTestPluginSettings setDefaultValues]
  -[CSLockScreenTestPluginSettings notificationBehavior]
  -[CSLockScreenTestPluginSettings setBackgroundStyle:]
  -[CSLockScreenTestPluginSettings presentationStyle]
  -[CSLockScreenTestPluginSettings backgroundStyle]
  -[CSLockScreenTestPluginSettings .cxx_destruct]
  -[CSLockScreenTestPluginSettings setNotificationBehavior:]
  -[CSLockScreenTestPluginSettings enableLostModePlugin]
  -[CSLockScreenTestPluginSettings setPresentationStyle:]
  -[CSLockScreenTestPluginSettings enablePlugin]
  -[CSLockScreenTestPluginSettings setEnablePlugin:]
  -[CSLockScreenTestPluginSettings setEnableLostModePlugin:]
  -[CSLockScreenTestPluginSettings setRestrictSiri:]
  -[CSLockScreenTestPluginSettings setRestrictCamera:]
  -[CSLockScreenTestPluginSettings setRestrictUnlock:]
  -[CSLockScreenTestPluginSettings setRestrictLogout:]
  -[CSLockScreenTestPluginSettings setRestrictTouchID:]
  -[CSLockScreenTestPluginSettings setRestrictMediaControls:]
  -[CSLockScreenTestPluginSettings setRestrictTodayCenter:]
  -[CSLockScreenTestPluginSettings setRestrictControlCenter:]
  -[CSLockScreenTestPluginSettings setHideStatusBar:]
  -[CSLockScreenTestPluginSettings setHideTimeAndDate:]
  -[CSLockScreenTestPluginSettings setHideSubtitle:]
  -[CSLockScreenTestPluginSettings setSubtitleValue:]
  -[CSLockScreenTestPluginSettings setDisableOnUnlock:]
  -[CSLockScreenTestPluginSettings restrictSiri]
  -[CSLockScreenTestPluginSettings restrictCamera]
  -[CSLockScreenTestPluginSettings restrictUnlock]
  -[CSLockScreenTestPluginSettings restrictLogout]
  -[CSLockScreenTestPluginSettings restrictTouchID]
  -[CSLockScreenTestPluginSettings restrictMediaControls]
  -[CSLockScreenTestPluginSettings restrictTodayCenter]
  -[CSLockScreenTestPluginSettings restrictControlCenter]
  -[CSLockScreenTestPluginSettings hideStatusBar]
  -[CSLockScreenTestPluginSettings hideTimeAndDate]
  -[CSLockScreenTestPluginSettings hideSubtitle]
  -[CSLockScreenTestPluginSettings subtitleValue]
  -[CSLockScreenTestPluginSettings disableOnUnlock]


CSAdjunctItemView : UIView /System/Library/Frameworks/QuartzCore.framework/QuartzCore <MTMaterialGrouping>
 @property  {CGSize=dd} sizeToMimic
 @property  <CSAdjunctItemHosting> *contentHost
 @property  NSString *materialGroupNameBase
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CSAdjunctItemView sizeToMimic]
  -[CSAdjunctItemView .cxx_destruct]
  -[CSAdjunctItemView setMaterialGroupNameBase:]
  -[CSAdjunctItemView intrinsicContentSize]
  -[CSAdjunctItemView sizeThatFits:]
  -[CSAdjunctItemView initWithRecipe:]
  -[CSAdjunctItemView layoutSubviews]
  -[CSAdjunctItemView materialGroupNameBase]
  -[CSAdjunctItemView setSizeToMimic:]
  -[CSAdjunctItemView setContentHost:]
  -[CSAdjunctItemView contentHost]
  -[CSAdjunctItemView _updateSizeToMimic]
  -[CSAdjunctItemView _setPlatterView:]


SBSLockScreenContentAction(MaterialRecipe)
	// instance methods
	-[SBSLockScreenContentAction(MaterialRecipe) sb_materialRecipe]

UIView(CSCoverSheetViewBase)
	// instance methods
	-[UIView(CSCoverSheetViewBase) isCoverSheetView]
	-[UIView(CSCoverSheetViewBase) setCoverSheetRegionRole:]
	-[UIView(CSCoverSheetViewBase) coverSheetRegionRole]
	-[UIView(CSCoverSheetViewBase) setCoverSheetRegionReservedForHorizontalScrolling:]
	-[UIView(CSCoverSheetViewBase) coverSheetRegionIsReservedForHorizontalScrolling]

DNDState(SBDashBoardSupport)
	// instance methods
	-[DNDState(SBDashBoardSupport) sb_isDrivingModeActive]
	-[DNDState(SBDashBoardSupport) sb_isBedtimeModeActive]

01 00 0f00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVFlashlight 
01 00 1c00 /System/Library/PrivateFrameworks/BatteryCenter.framework/BatteryCenter: BCBatteryDeviceController 
01 00 1400 /System/Library/PrivateFrameworks/BackBoardServices.framework/BackBoardServices: BKSHIDUISensorMode 
01 00 1400 /System/Library/PrivateFrameworks/BackBoardServices.framework/BackBoardServices: BKSHIDUISensorService 
01 00 1d00 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: BSAnimationSettings 
01 00 1d00 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: BSAtomicSignal 
01 00 1d00 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: BSBlockSentinel 
01 00 1d00 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: BSDateFormatterCache 
01 00 1d00 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: BSDescriptionBuilder 
01 00 1d00 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: BSTimer 
01 00 2500 /System/Library/PrivateFrameworks/BaseBoardUI.framework/BaseBoardUI: BSUIAnimationFactory 
01 00 2500 /System/Library/PrivateFrameworks/BaseBoardUI.framework/BaseBoardUI: BSUIFontProvider 
01 00 2300 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CABasicAnimation 
01 00 2300 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAFilter 
01 00 2300 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAKeyframeAnimation 
01 00 2300 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMediaTimingFunction 
01 00 2300 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CASpringAnimation 
01 00 1a00 /System/Library/PrivateFrameworks/ControlCenterServices.framework/ControlCenterServices: CCSUsageMetrics 
01 00 2600 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLInUseAssertion 
01 00 1500 /System/Library/Frameworks/Contacts.framework/Contacts: CNContact 
01 00 1600 /System/Library/Frameworks/ContactsUI.framework/ContactsUI: CNMonogrammer 
01 00 0700 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDEventBehaviorResolutionService 
01 00 0700 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDMutableClientEventDetails 
01 00 0700 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDState 
01 00 0700 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDStateService 
01 00 1d00 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: FBDisplayLayoutElement 
01 00 1d00 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: FBDisplayLayoutTransition 
01 00 1d00 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: FBMainDisplayLayoutPublisher 
01 00 0200 /System/Library/PrivateFrameworks/Sleep.framework/Sleep: HKSPSleepStore 
01 00 1800 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 0900 /System/Library/PrivateFrameworks/MediaControls.framework/MediaControls: MRPlatterViewController 
01 00 1b00 /System/Library/PrivateFrameworks/MaterialKit.framework/MaterialKit: MTLumaDodgePillView 
01 00 1b00 /System/Library/PrivateFrameworks/MaterialKit.framework/MaterialKit: MTMaterialView 
01 00 1b00 /System/Library/PrivateFrameworks/MaterialKit.framework/MaterialKit: MTStaticColorPillView 
01 00 0c00 /System/Library/PrivateFrameworks/MobileTimer.framework/MobileTimer: MTTimer 
01 00 0c00 /System/Library/PrivateFrameworks/MobileTimer.framework/MobileTimer: MTTimerManager 
01 00 1100 /System/Library/PrivateFrameworks/UserNotificationsKit.framework/UserNotificationsKit: NCMutableNotificationContent 
01 00 1100 /System/Library/PrivateFrameworks/UserNotificationsKit.framework/UserNotificationsKit: NCMutableNotificationRequest 
01 00 0e00 /System/Library/PrivateFrameworks/UserNotificationsUIKit.framework/UserNotificationsUIKit: NCNotificationStructuredListViewController 
01 00 2c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 2900 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 2900 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 2900 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 2c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 2c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 2900 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 2900 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 2c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 2c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 2900 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 2c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 2900 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 2900 /System/Library/Frameworks/Foundation.framework/Foundation: NSLayoutConstraint 
01 00 2c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 2c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 2c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 2c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 2900 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 2900 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 2900 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 2900 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 2a00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 2900 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 2200 /System/Library/Frameworks/UIKit.framework/UIKit: NSParagraphStyle 
01 00 2900 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 2c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 2c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 2900 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 2900 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 2c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 2c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 2900 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 2900 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 1900 /System/Library/PrivateFrameworks/PlatterKit.framework/PlatterKit: PLPlatterView 
01 00 0d00 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTButtonRow 
01 00 0d00 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTChoiceRow 
01 00 0d00 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTDomain 
01 00 0d00 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTDrillDownRow 
01 00 0d00 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTEditFloatRow 
01 00 0d00 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTEditStringRow 
01 00 0d00 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTModule 
01 00 0d00 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTRestoreDefaultSettingsRowAction 
01 00 0d00 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTRowAction 
01 00 0d00 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTSModule 
01 00 0d00 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTSSwitchRow 
01 00 0d00 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTSettings 
01 00 0d00 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTSliderRow 
01 00 0d00 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTSwitchRow 
01 00 1f00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFAnalyticsClient 
01 00 1f00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFAnimationSettings 
01 00 1f00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFDashBoardViewMetrics 
01 00 1f00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFDeviceBlockTimer 
01 00 1f00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFFluidBehaviorSettings 
01 00 1f00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFHomeGrabberDomain 
01 00 1f00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFLegibilityDomain 
01 00 1f00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFLockScreenAlternateDateLabel 
01 00 1f00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFLockScreenDateSubtitleDateView 
01 00 1f00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFLockScreenDateSubtitleView 
01 00 1f00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFLockScreenDateView 
01 00 1f00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFLockScreenDateViewController 
01 00 1f00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFLockScreenWakeAnimator 
01 00 1f00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFMotionGestureController 
01 00 1f00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFPagedScrollView 
01 00 1f00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFRemoteBasebandLoggingManager 
01 00 1f00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFStatusBarLegibilityView 
01 00 1f00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFSteppedAnimationTimingFunctionCalculator 
01 00 1f00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFTouchPassThroughView 
01 00 1f00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFWakeAnimationDomain 
01 00 1f00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBLockScreenDefaults 
01 00 2100 /System/Library/PrivateFrameworks/SpringBoardUI.framework/SpringBoardUI: SBLockScreenTimerDialView 
01 00 1f00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBNotificationDefaults 
01 00 1e00 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSDisplayLayoutElement 
01 00 1e00 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSLockScreenContentAction 
01 00 1e00 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSRemoteContentDefinition 
01 00 1e00 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSRemoteContentPreferences 
01 00 2100 /System/Library/PrivateFrameworks/SpringBoardUI.framework/SpringBoardUI: SBUIBackgroundView 
01 00 2000 /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices: SBUIBiometricResource 
01 00 2000 /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices: SBUICallToActionLabel 
01 00 2100 /System/Library/PrivateFrameworks/SpringBoardUI.framework/SpringBoardUI: SBUIFlashlightController 
01 00 2000 /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices: SBUILegibilityLabel 
01 00 2000 /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices: SBUIPasscodeLockViewFactory 
01 00 2000 /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices: SBUIPasscodeLockViewWithKeypad 
01 00 2000 /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices: SBUIPoseidonContainerViewController 
01 00 2000 /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices: SBUIPreciseClockTimer 
01 00 2000 /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices: SBUIProudLockContainerViewController 
01 00 2100 /System/Library/PrivateFrameworks/SpringBoardUI.framework/SpringBoardUI: SBUISearchUtilities 
01 00 2000 /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices: SBUISpotlightBarNavigationController 
01 00 2000 /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices: SBUIVibrantButton 
01 00 1f00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBWakeLogger 
01 00 0600 /System/Library/PrivateFrameworks/SpotlightUI.framework/SpotlightUI: SPUISearchBarController 
01 00 2200 /System/Library/Frameworks/UIKit.framework/UIKit: UIBezierPath 
01 00 2200 /System/Library/Frameworks/UIKit.framework/UIKit: UIBlurEffect 
01 00 2200 /System/Library/Frameworks/UIKit.framework/UIKit: UIButton 
01 00 2200 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionView 
01 00 2200 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 2200 /System/Library/Frameworks/UIKit.framework/UIKit: UIColorEffect 
01 00 2200 /System/Library/Frameworks/UIKit.framework/UIKit: UICoverSheetButton 
01 00 2200 /System/Library/Frameworks/UIKit.framework/UIKit: UIDevice 
01 00 2200 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 2200 /System/Library/Frameworks/UIKit.framework/UIKit: UIGestureRecognizer 
01 00 2200 /System/Library/Frameworks/UIKit.framework/UIKit: UIHoverGestureRecognizer 
01 00 2200 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 2200 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageSymbolConfiguration 
01 00 2200 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 2200 /System/Library/Frameworks/UIKit.framework/UIKit: UIImpactFeedbackGenerator 
01 00 2200 /System/Library/Frameworks/UIKit.framework/UIKit: UILabel 
01 00 2200 /System/Library/Frameworks/UIKit.framework/UIKit: UILayoutGuide 
01 00 2200 /System/Library/Frameworks/UIKit.framework/UIKit: UIPageControl 
01 00 2200 /System/Library/Frameworks/UIKit.framework/UIKit: UIPointerHighlightEffect 
01 00 2200 /System/Library/Frameworks/UIKit.framework/UIKit: UIPointerShape 
01 00 2200 /System/Library/Frameworks/UIKit.framework/UIKit: UIPointerStyle 
01 00 2200 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 2200 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreenEdgePanGestureRecognizer 
01 00 2200 /System/Library/Frameworks/UIKit.framework/UIKit: UIScrollView 
01 00 2200 /System/Library/Frameworks/UIKit.framework/UIKit: UISlider 
01 00 2200 /System/Library/Frameworks/UIKit.framework/UIKit: UIStackView 
01 00 2200 /System/Library/Frameworks/UIKit.framework/UIKit: UIStatusBar 
01 00 2200 /System/Library/Frameworks/UIKit.framework/UIKit: UISwitch 
01 00 2200 /System/Library/Frameworks/UIKit.framework/UIKit: UITapGestureRecognizer 
01 00 2200 /System/Library/Frameworks/UIKit.framework/UIKit: UITargetedPreview 
01 00 2200 /System/Library/Frameworks/UIKit.framework/UIKit: UITraitCollection 
01 00 2200 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 2200 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 2200 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewFloatAnimatableProperty 
01 00 2200 /System/Library/Frameworks/UIKit.framework/UIKit: UIVisualEffect 
01 00 2200 /System/Library/Frameworks/UIKit.framework/UIKit: UIVisualEffectView 
01 00 1700 /System/Library/PrivateFrameworks/UserManagement.framework/UserManagement: UMUserManager 
01 00 0800 /System/Library/PrivateFrameworks/Weather.framework/Weather: WAGreetingView 
01 00 0b00 /System/Library/PrivateFrameworks/Widgets.framework/Widgets: WGMajorListViewController 
01 00 0b00 /System/Library/PrivateFrameworks/Widgets.framework/Widgets: WGWidgetDiscoveryController 
01 00 0b00 /System/Library/PrivateFrameworks/Widgets.framework/Widgets: WGWidgetGroupViewController 
01 00 1f00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: _SBFVibrantSettings 
01 00 2200 /System/Library/Frameworks/UIKit.framework/UIKit: _UIBackdropView 
01 00 2200 /System/Library/Frameworks/UIKit.framework/UIKit: _UIBackdropViewSettings 
01 00 2200 /System/Library/Frameworks/UIKit.framework/UIKit: _UIGestureStudyInteraction 
01 00 2200 /System/Library/Frameworks/UIKit.framework/UIKit: _UILegibilitySettings 
01 00 2200 /System/Library/Frameworks/UIKit.framework/UIKit: _UILegibilityView 
01 00 2200 /System/Library/Frameworks/UIKit.framework/UIKit: _UIRemoteViewController 
01 00 2200 /System/Library/Frameworks/UIKit.framework/UIKit: _UIStatusBarData 
01 00 2200 /System/Library/Frameworks/UIKit.framework/UIKit: _UIStatusBarDataStringEntry 
01 00 2200 /System/Library/Frameworks/UIKit.framework/UIKit: _UIVisualEffectConfig 
01 00 2200 /System/Library/Frameworks/UIKit.framework/UIKit: _UIVisualEffectVibrantLayerConfig 
