|| __DATA.__objc_data _OBJC_CLASS_$_AWDProactiveModelFittingAvailableSessions
|| __DATA.__objc_data _OBJC_CLASS_$_AWDProactiveModelFittingEvalMetrics
|| __DATA.__objc_data _OBJC_CLASS_$_AWDProactiveModelFittingEvaluation
|| __DATA.__objc_data _OBJC_CLASS_$_AWDProactiveModelFittingLabelSupportPair
|| __DATA.__objc_data _OBJC_CLASS_$_AWDProactiveModelFittingLinRegFeatureMatrix
|| __DATA.__objc_data _OBJC_CLASS_$_AWDProactiveModelFittingLinRegObjectiveFeatures
|| __DATA.__objc_data _OBJC_CLASS_$_AWDProactiveModelFittingLogRegGradient
|| __DATA.__objc_data _OBJC_CLASS_$_AWDProactiveModelFittingLogRegWeights
|| __DATA.__objc_data _OBJC_CLASS_$_AWDProactiveModelFittingMinibatchStats
|| __DATA.__objc_data _OBJC_CLASS_$_AWDProactiveModelFittingModelInfoStatsPair
|| __DATA.__objc_data _OBJC_CLASS_$_AWDProactiveModelFittingParsecFeedbackEnvelope
|| __DATA.__objc_data _OBJC_CLASS_$_AWDProactiveModelFittingPrecisionAtKPair
|| __DATA.__objc_data _OBJC_CLASS_$_AWDProactiveModelFittingQuantizedDenseVector
|| __DATA.__objc_data _OBJC_CLASS_$_AWDProactiveModelFittingQuantizedSparseMatrix
|| __DATA.__objc_data _OBJC_CLASS_$_AWDProactiveModelFittingQuantizedSparseVector
|| __DATA.__objc_data _OBJC_CLASS_$_AWDProactiveModelFittingSession
|| __DATA.__objc_data _OBJC_CLASS_$_AWDProactiveModelFittingSparseFloatMatrix
|| __DATA.__objc_data _OBJC_CLASS_$_AWDProactiveModelFittingSparseFloatVector
|| __DATA.__objc_data _OBJC_CLASS_$_PMLAWDAvailableSessionsTrackerMock
|| __DATA.__objc_data _OBJC_CLASS_$_PMLAWDEvaluationTrackerMock
|| __DATA.__objc_data _OBJC_CLASS_$_PMLAWDLinearRegTrackerMock
|| __DATA.__objc_data _OBJC_CLASS_$_PMLAWDLogisticRegTrackerMock
|| __DATA.__objc_data _OBJC_CLASS_$_PMLAWDSessionTracker
|| __DATA.__objc_data _OBJC_CLASS_$_PMLAWDSessionTrackerMock
|| __DATA.__objc_data _OBJC_CLASS_$_PMLAppleDirectory
|| __DATA.__objc_data _OBJC_CLASS_$_PMLChunkFileUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_PMLClassificationEvaluationMetrics
|| __DATA.__objc_data _OBJC_CLASS_$_PMLDataChunkRaw
|| __DATA.__objc_data _OBJC_CLASS_$_PMLDenseMatrix
|| __DATA.__objc_data _OBJC_CLASS_$_PMLDiffPrivacyNoiseStrategy
|| __DATA.__objc_data _OBJC_CLASS_$_PMLFidesTracker
|| __DATA.__objc_data _OBJC_CLASS_$_PMLGaussianSampler
|| __DATA.__objc_data _OBJC_CLASS_$_PMLImmutableLogisticRegressionModel
|| __DATA.__objc_data _OBJC_CLASS_$_PMLInMemoryCachedStore
|| __DATA.__objc_data _OBJC_CLASS_$_PMLLabelLimitRowId
|| __DATA.__objc_data _OBJC_CLASS_$_PMLLaplaceSampler
|| __DATA.__objc_data _OBJC_CLASS_$_PMLLinRegTrainingPlan
|| __DATA.__objc_data _OBJC_CLASS_$_PMLLinearRegressionModel
|| __DATA.__objc_data _OBJC_CLASS_$_PMLLogRegEvaluationPlan
|| __DATA.__objc_data _OBJC_CLASS_$_PMLLogRegTrainingPlan
|| __DATA.__objc_data _OBJC_CLASS_$_PMLMockPlan
|| __DATA.__objc_data _OBJC_CLASS_$_PMLModelDescriptor
|| __DATA.__objc_data _OBJC_CLASS_$_PMLModelFullyConnectedLayer
|| __DATA.__objc_data _OBJC_CLASS_$_PMLModelLearningRates
|| __DATA.__objc_data _OBJC_CLASS_$_PMLModelRegressor
|| __DATA.__objc_data _OBJC_CLASS_$_PMLMultiLabelLogisticRegressionModel
|| __DATA.__objc_data _OBJC_CLASS_$_PMLMultiLabelRegressionEvaluationPlan
|| __DATA.__objc_data _OBJC_CLASS_$_PMLNaiveBayesEvaluationPlan
|| __DATA.__objc_data _OBJC_CLASS_$_PMLNaiveBayesModel
|| __DATA.__objc_data _OBJC_CLASS_$_PMLNaiveBayesSolver
|| __DATA.__objc_data _OBJC_CLASS_$_PMLNoNoiseStrategy
|| __DATA.__objc_data _OBJC_CLASS_$_PMLPassThroughTracker
|| __DATA.__objc_data _OBJC_CLASS_$_PMLPlanDescriptor
|| __DATA.__objc_data _OBJC_CLASS_$_PMLPlanSerialization
|| __DATA.__objc_data _OBJC_CLASS_$_PMLPlanSimulator
|| __DATA.__objc_data _OBJC_CLASS_$_PMLPlanWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_PMLProtoBufTracker
|| __DATA.__objc_data _OBJC_CLASS_$_PMLSeparatedDPNoiseStrategy
|| __DATA.__objc_data _OBJC_CLASS_$_PMLSparseMatrix
|| __DATA.__objc_data _OBJC_CLASS_$_PMLTrackerAWDAdapter
|| __DATA.__objc_data _OBJC_CLASS_$_PMLTrackerMockAdapter
|| __DATA.__objc_data _OBJC_CLASS_$_PMLTrackerParsecAdapter
|| __DATA.__objc_data _OBJC_CLASS_$_PMLTrainingLogEntry
|| __DATA.__objc_data _OBJC_CLASS_$_PMLTrainingMock
|| __DATA.__objc_data _OBJC_CLASS_$_PMLTrainingStoredSessionBatch
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDProactiveModelFittingAvailableSessions
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDProactiveModelFittingEvalMetrics
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDProactiveModelFittingEvaluation
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDProactiveModelFittingLabelSupportPair
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDProactiveModelFittingLinRegFeatureMatrix
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDProactiveModelFittingLinRegObjectiveFeatures
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDProactiveModelFittingLogRegGradient
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDProactiveModelFittingLogRegWeights
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDProactiveModelFittingMinibatchStats
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDProactiveModelFittingModelInfoStatsPair
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDProactiveModelFittingParsecFeedbackEnvelope
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDProactiveModelFittingPrecisionAtKPair
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDProactiveModelFittingQuantizedDenseVector
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDProactiveModelFittingQuantizedSparseMatrix
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDProactiveModelFittingQuantizedSparseVector
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDProactiveModelFittingSession
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDProactiveModelFittingSparseFloatMatrix
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDProactiveModelFittingSparseFloatVector
|| __DATA.__objc_data _OBJC_METACLASS_$_PMLAWDAvailableSessionsTrackerMock
|| __DATA.__objc_data _OBJC_METACLASS_$_PMLAWDEvaluationTrackerMock
|| __DATA.__objc_data _OBJC_METACLASS_$_PMLAWDLinearRegTrackerMock
|| __DATA.__objc_data _OBJC_METACLASS_$_PMLAWDLogisticRegTrackerMock
|| __DATA.__objc_data _OBJC_METACLASS_$_PMLAWDSessionTracker
|| __DATA.__objc_data _OBJC_METACLASS_$_PMLAWDSessionTrackerMock
|| __DATA.__objc_data _OBJC_METACLASS_$_PMLAppleDirectory
|| __DATA.__objc_data _OBJC_METACLASS_$_PMLChunkFileUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_PMLClassificationEvaluationMetrics
|| __DATA.__objc_data _OBJC_METACLASS_$_PMLDataChunkRaw
|| __DATA.__objc_data _OBJC_METACLASS_$_PMLDenseMatrix
|| __DATA.__objc_data _OBJC_METACLASS_$_PMLDiffPrivacyNoiseStrategy
|| __DATA.__objc_data _OBJC_METACLASS_$_PMLFidesTracker
|| __DATA.__objc_data _OBJC_METACLASS_$_PMLGaussianSampler
|| __DATA.__objc_data _OBJC_METACLASS_$_PMLImmutableLogisticRegressionModel
|| __DATA.__objc_data _OBJC_METACLASS_$_PMLInMemoryCachedStore
|| __DATA.__objc_data _OBJC_METACLASS_$_PMLLabelLimitRowId
|| __DATA.__objc_data _OBJC_METACLASS_$_PMLLaplaceSampler
|| __DATA.__objc_data _OBJC_METACLASS_$_PMLLinRegTrainingPlan
|| __DATA.__objc_data _OBJC_METACLASS_$_PMLLinearRegressionModel
|| __DATA.__objc_data _OBJC_METACLASS_$_PMLLogRegEvaluationPlan
|| __DATA.__objc_data _OBJC_METACLASS_$_PMLLogRegTrainingPlan
|| __DATA.__objc_data _OBJC_METACLASS_$_PMLMockPlan
|| __DATA.__objc_data _OBJC_METACLASS_$_PMLModelDescriptor
|| __DATA.__objc_data _OBJC_METACLASS_$_PMLModelFullyConnectedLayer
|| __DATA.__objc_data _OBJC_METACLASS_$_PMLModelLearningRates
|| __DATA.__objc_data _OBJC_METACLASS_$_PMLModelRegressor
|| __DATA.__objc_data _OBJC_METACLASS_$_PMLMultiLabelLogisticRegressionModel
|| __DATA.__objc_data _OBJC_METACLASS_$_PMLMultiLabelRegressionEvaluationPlan
|| __DATA.__objc_data _OBJC_METACLASS_$_PMLNaiveBayesEvaluationPlan
|| __DATA.__objc_data _OBJC_METACLASS_$_PMLNaiveBayesModel
|| __DATA.__objc_data _OBJC_METACLASS_$_PMLNaiveBayesSolver
|| __DATA.__objc_data _OBJC_METACLASS_$_PMLNoNoiseStrategy
|| __DATA.__objc_data _OBJC_METACLASS_$_PMLPassThroughTracker
|| __DATA.__objc_data _OBJC_METACLASS_$_PMLPlanDescriptor
|| __DATA.__objc_data _OBJC_METACLASS_$_PMLPlanSerialization
|| __DATA.__objc_data _OBJC_METACLASS_$_PMLPlanSimulator
|| __DATA.__objc_data _OBJC_METACLASS_$_PMLPlanWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_PMLProtoBufTracker
|| __DATA.__objc_data _OBJC_METACLASS_$_PMLSeparatedDPNoiseStrategy
|| __DATA.__objc_data _OBJC_METACLASS_$_PMLSparseMatrix
|| __DATA.__objc_data _OBJC_METACLASS_$_PMLTrackerAWDAdapter
|| __DATA.__objc_data _OBJC_METACLASS_$_PMLTrackerMockAdapter
|| __DATA.__objc_data _OBJC_METACLASS_$_PMLTrackerParsecAdapter
|| __DATA.__objc_data _OBJC_METACLASS_$_PMLTrainingLogEntry
|| __DATA.__objc_data _OBJC_METACLASS_$_PMLTrainingMock
|| __DATA.__objc_data _OBJC_METACLASS_$_PMLTrainingStoredSessionBatch
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingAvailableSessions._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingAvailableSessions._perModelStats
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingAvailableSessions._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingEvalMetrics._f1
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingEvalMetrics._falseNegatives
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingEvalMetrics._falsePositives
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingEvalMetrics._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingEvalMetrics._negativeScores
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingEvalMetrics._positiveScores
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingEvalMetrics._rmse
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingEvalMetrics._secsToExecute
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingEvalMetrics._trueNegatives
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingEvalMetrics._truePositives
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingEvaluation._evaluationMetrics
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingEvaluation._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingEvaluation._minibatchStats
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingEvaluation._modelInfo
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingEvaluation._precisionAtKs
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingEvaluation._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingLabelSupportPair._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingLabelSupportPair._label
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingLabelSupportPair._support
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingLinRegFeatureMatrix._featureMatrixL2norm
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingLinRegFeatureMatrix._featureMatrixScaleFactor
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingLinRegFeatureMatrix._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingLinRegFeatureMatrix._minibatchStats
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingLinRegFeatureMatrix._modelInfo
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingLinRegFeatureMatrix._sparseFloatFeatureMatrix
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingLinRegFeatureMatrix._sparseQuantizedFeatureMatrix
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingLinRegFeatureMatrix._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingLinRegObjectiveFeatures._featuresL2norm
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingLinRegObjectiveFeatures._featuresScaleFactor
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingLinRegObjectiveFeatures._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingLinRegObjectiveFeatures._minibatchStats
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingLinRegObjectiveFeatures._modelInfo
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingLinRegObjectiveFeatures._sparseFloatFeatures
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingLinRegObjectiveFeatures._sparseQuantizedFeatures
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingLinRegObjectiveFeatures._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingLogRegGradient._denseQuantizedGradient
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingLogRegGradient._evaluationMetrics
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingLogRegGradient._gradientL2norm
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingLogRegGradient._gradientScaleFactor
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingLogRegGradient._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingLogRegGradient._iteration
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingLogRegGradient._minibatchStats
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingLogRegGradient._modelInfo
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingLogRegGradient._sparseFloatGradient
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingLogRegGradient._sparseQuantizedGradient
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingLogRegGradient._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingLogRegWeights._denseQuantizedWeights
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingLogRegWeights._evaluationMetrics
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingLogRegWeights._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingLogRegWeights._minibatchStats
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingLogRegWeights._modelInfo
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingLogRegWeights._sparseFloatWeights
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingLogRegWeights._sparseQuantizedWeights
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingLogRegWeights._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingLogRegWeights._weightsL2norm
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingLogRegWeights._weightsScaleFactor
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingMinibatchStats._batchSize
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingMinibatchStats._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingMinibatchStats._perLabelSupports
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingMinibatchStats._support
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingModelInfo._locale
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingModelInfo._name
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingModelInfo._version
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingModelInfoStatsPair._modelInfo
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingModelInfoStatsPair._stats
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingParsecFeedbackEnvelope._evaluation
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingParsecFeedbackEnvelope._linRegFeatureMatrix
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingParsecFeedbackEnvelope._linRegObjectiveFeatures
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingParsecFeedbackEnvelope._logRegGradient
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingParsecFeedbackEnvelope._logRegWeights
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingPrecisionAtKPair._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingPrecisionAtKPair._k
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingPrecisionAtKPair._precision
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingQuantizedDenseVector._bucketSize
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingQuantizedDenseVector._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingQuantizedDenseVector._minValue
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingQuantizedDenseVector._values
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingQuantizedSparseMatrix._bucketSize
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingQuantizedSparseMatrix._columnIndices
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingQuantizedSparseMatrix._columnLength
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingQuantizedSparseMatrix._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingQuantizedSparseMatrix._minValue
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingQuantizedSparseMatrix._rowIndices
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingQuantizedSparseMatrix._rowLength
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingQuantizedSparseMatrix._values
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingQuantizedSparseVector._bucketSize
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingQuantizedSparseVector._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingQuantizedSparseVector._indices
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingQuantizedSparseVector._length
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingQuantizedSparseVector._minValue
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingQuantizedSparseVector._values
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingSession._confidenceScore
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingSession._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingSession._label
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingSession._modelInfo
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingSession._sparseFloatFeatures
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingSession._supervisionType
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingSession._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingSparseFloatMatrix._columnIndices
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingSparseFloatMatrix._columnLength
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingSparseFloatMatrix._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingSparseFloatMatrix._rowIndices
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingSparseFloatMatrix._rowLength
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingSparseFloatMatrix._values
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingSparseFloatVector._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingSparseFloatVector._indices
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingSparseFloatVector._length
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDProactiveModelFittingSparseFloatVector._values
|| __DATA.__objc_ivar _OBJC_IVAR_$_PMLDataChunk._backingData
|| __DATA.__objc_ivar _OBJC_IVAR_$_PMLDataChunk._superdata
|| __DATA.__objc_ivar _OBJC_IVAR_$_PMLDenseVector._data
|| __DATA_CONST.__const _PMLErrorDomain
|| __DATA_CONST.__const _PML_PLIST_CLASS_NAME
|| __DATA_CONST.__const _kPFLIdentifierContacts
|| __DATA_CONST.__const _kPFLIdentifierQuickResponses
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AWDProactiveModelFittingModelInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PMLAWDAvailableSessionsTracker
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PMLAWDBaseTracker
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PMLDataChunk
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PMLDataChunkDenseDoubleVector
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PMLDataChunkDenseFloatVector
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PMLDataChunkPlist
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PMLDenseVector
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PMLGradientSolver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PMLHashingVectorizer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PMLLogisticRegressionModel
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PMLModelWeights
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PMLMutableDenseVector
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PMLPlistClassWrapper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PMLSessionDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PMLSparseVector
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PMLSpotlightReference
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PMLTraining
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PMLTrainingDatabaseMigrations
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PMLTrainingStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AWDProactiveModelFittingModelInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PMLAWDAvailableSessionsTracker
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PMLAWDBaseTracker
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PMLDataChunk
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PMLDataChunkDenseDoubleVector
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PMLDataChunkDenseFloatVector
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PMLDataChunkPlist
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PMLDenseVector
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PMLGradientSolver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PMLHashingVectorizer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PMLLogisticRegressionModel
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PMLModelWeights
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PMLMutableDenseVector
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PMLPlistClassWrapper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PMLSessionDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PMLSparseVector
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PMLSpotlightReference
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PMLTraining
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PMLTrainingDatabaseMigrations
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PMLTrainingStore
|| __TEXT.__const _ProactiveMLVersionNumber
|| __TEXT.__const _ProactiveMLVersionString
|| __TEXT.__text _AWDProactiveModelFittingAvailableSessionsReadFrom
|| __TEXT.__text _AWDProactiveModelFittingEvalMetricsReadFrom
|| __TEXT.__text _AWDProactiveModelFittingEvaluationReadFrom
|| __TEXT.__text _AWDProactiveModelFittingLabelSupportPairReadFrom
|| __TEXT.__text _AWDProactiveModelFittingLinRegFeatureMatrixReadFrom
|| __TEXT.__text _AWDProactiveModelFittingLinRegObjectiveFeaturesReadFrom
|| __TEXT.__text _AWDProactiveModelFittingLogRegGradientReadFrom
|| __TEXT.__text _AWDProactiveModelFittingLogRegWeightsReadFrom
|| __TEXT.__text _AWDProactiveModelFittingMinibatchStatsReadFrom
|| __TEXT.__text _AWDProactiveModelFittingModelInfoReadFrom
|| __TEXT.__text _AWDProactiveModelFittingModelInfoStatsPairReadFrom
|| __TEXT.__text _AWDProactiveModelFittingParsecFeedbackEnvelopeReadFrom
|| __TEXT.__text _AWDProactiveModelFittingPrecisionAtKPairReadFrom
|| __TEXT.__text _AWDProactiveModelFittingQuantizedDenseVectorReadFrom
|| __TEXT.__text _AWDProactiveModelFittingQuantizedSparseMatrixReadFrom
|| __TEXT.__text _AWDProactiveModelFittingQuantizedSparseVectorReadFrom
|| __TEXT.__text _AWDProactiveModelFittingSessionReadFrom
|| __TEXT.__text _AWDProactiveModelFittingSparseFloatMatrixReadFrom
|| __TEXT.__text _AWDProactiveModelFittingSparseFloatVectorReadFrom
|| __TEXT.__text _PMLBuildChunkFile
|| __TEXT.__text _PMLReadChunkData
|| __TEXT.__text _PMLReadChunkFile
|| __TEXT.__text _PMLWriteChunkFile
|| __TEXT.__text _PML_LogHandle
__ Accelerate: _BNNSFilterApply
__ Accelerate: _BNNSFilterApplyBatch
__ Accelerate: _BNNSFilterCreateFullyConnectedLayer
__ Accelerate: _BNNSFilterCreateVectorActivationLayer
__ Accelerate: _BNNSFilterDestroy
__ Accelerate: _cblas_sasum
__ Accelerate: _cblas_saxpy
__ Accelerate: _cblas_snrm2
__ Accelerate: _cblas_sscal
__ Accelerate: _sparse_commit
__ Accelerate: _sparse_extract_sparse_column_float
__ Accelerate: _sparse_extract_sparse_row_float
__ Accelerate: _sparse_get_matrix_nonzero_count
__ Accelerate: _sparse_get_matrix_nonzero_count_for_column
__ Accelerate: _sparse_get_matrix_nonzero_count_for_row
__ Accelerate: _sparse_get_matrix_number_of_columns
__ Accelerate: _sparse_get_matrix_number_of_rows
__ Accelerate: _sparse_inner_product_dense_float
__ Accelerate: _sparse_inner_product_sparse_float
__ Accelerate: _sparse_insert_entry_float
__ Accelerate: _sparse_insert_row_float
__ Accelerate: _sparse_matrix_create_float
__ Accelerate: _sparse_matrix_destroy
__ Accelerate: _sparse_matrix_product_dense_float
__ Accelerate: _sparse_matrix_vector_product_dense_float
__ Accelerate: _vDSP_sve
__ Accelerate: _vDSP_vsma
__ Accelerate: _vDSP_vsmsa
__ CoreFoundation: _CFCharacterSetCreateInvertedSet
__ CoreFoundation: _CFCharacterSetGetPredefined
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFStringCreateMutableWithExternalCharactersNoCopy
__ CoreFoundation: _CFStringFindCharacterFromSet
__ CoreFoundation: _CFStringFold
__ CoreFoundation: _CFStringGetCharacters
__ CoreFoundation: _CFStringGetCharactersPtr
__ CoreFoundation: _CFStringGetLength
__ CoreFoundation: _CFStringNormalize
__ CoreFoundation: _CFStringSetExternalCharactersNoCopy
__ CoreFoundation: _CFStringTokenizerAdvanceToNextToken
__ CoreFoundation: _CFStringTokenizerCreate
__ CoreFoundation: _CFStringTokenizerGetCurrentTokenRange
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSMallocException
__ CoreFoundation: _NSRangeException
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__
__ CoreFoundation: ___NSDictionary0__
__ CoreFoundation: _kCFAllocatorNull
__ CoreParsec: _OBJC_CLASS_$_PARSession
__ CrashReporterSupport: _OSAWriteLogForSubmission
__ DistributedEvaluation: _OBJC_CLASS_$_DESRecordStore
__ Foundation: _NSClassFromString
__ Foundation: _NSStringFromClass
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSLock
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSValue
__ ProactiveSupport: _OBJC_CLASS_$__PASDeviceInfo
__ ProactiveSupport: _OBJC_CLASS_$__PASDeviceState
__ ProactiveSupport: _OBJC_CLASS_$__PASRng
__ ProactiveSupport: _OBJC_CLASS_$__PASSqliteDatabase
__ ProactiveSupport: _OBJC_CLASS_$__PASTuple2
__ ProactiveSupport: __PASRngSeed64
__ ProactiveSupport: __PASSqliteDatabaseKeepGoing
__ ProactiveSupport: __PASSqliteDatabaseStop
__ ProactiveSupport: __PAS_MurmurHash3_x86_32
__ ProtocolBuffer: _OBJC_CLASS_$_PBCodable
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._bytes
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._error
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._length
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._pos
__ ProtocolBuffer: _OBJC_METACLASS_$_PBCodable
__ ProtocolBuffer: _PBDataWriterPlaceMark
__ ProtocolBuffer: _PBDataWriterRecallMark
__ ProtocolBuffer: _PBDataWriterWriteFloatField
__ ProtocolBuffer: _PBDataWriterWriteStringField
__ ProtocolBuffer: _PBDataWriterWriteSubmessage
__ ProtocolBuffer: _PBDataWriterWriteUint32Field
__ ProtocolBuffer: _PBDataWriterWriteUint64Field
__ ProtocolBuffer: _PBReaderPlaceMark
__ ProtocolBuffer: _PBReaderReadString
__ ProtocolBuffer: _PBReaderRecallMark
__ ProtocolBuffer: _PBReaderSkipValueWithTag
__ ProtocolBuffer: _PBRepeatedFloatAdd
__ ProtocolBuffer: _PBRepeatedFloatClear
__ ProtocolBuffer: _PBRepeatedFloatCopy
__ ProtocolBuffer: _PBRepeatedFloatHash
__ ProtocolBuffer: _PBRepeatedFloatIsEqual
__ ProtocolBuffer: _PBRepeatedFloatNSArray
__ ProtocolBuffer: _PBRepeatedFloatSet
__ ProtocolBuffer: _PBRepeatedUInt32Add
__ ProtocolBuffer: _PBRepeatedUInt32Clear
__ ProtocolBuffer: _PBRepeatedUInt32Copy
__ ProtocolBuffer: _PBRepeatedUInt32Hash
__ ProtocolBuffer: _PBRepeatedUInt32IsEqual
__ ProtocolBuffer: _PBRepeatedUInt32NSArray
__ ProtocolBuffer: _PBRepeatedUInt32Set
__ ProtocolBuffer: _PBRepeatedUInt64Add
__ ProtocolBuffer: _PBRepeatedUInt64Clear
__ ProtocolBuffer: _PBRepeatedUInt64Copy
__ ProtocolBuffer: _PBRepeatedUInt64Hash
__ ProtocolBuffer: _PBRepeatedUInt64IsEqual
__ ProtocolBuffer: _PBRepeatedUInt64NSArray
__ ProtocolBuffer: _PBRepeatedUInt64Set
__ SearchFoundation: _OBJC_CLASS_$_SFCustomFeedback
__ WirelessDiagnostics: _AWDPostMetric
__ WirelessDiagnostics: _OBJC_CLASS_$_AWDServerConnection
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___exp10
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _arc4random_buf
__ libSystem.B.dylib: _arc4random_uniform
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _dispatch_apply
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _expf
__ libSystem.B.dylib: _fmod
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _log
__ libSystem.B.dylib: _log10
__ libSystem.B.dylib: _logf
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _pthread_mutex_lock
__ libSystem.B.dylib: _pthread_mutex_unlock
__ libSystem.B.dylib: _qsort
__ libSystem.B.dylib: _reallocf
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyStruct
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
PMLNaiveBayesSolver : NSObject /usr/lib/libSystem.B.dylib
 @property  PMLModelWeights *positiveConditionalProbabilities
 @property  PMLModelWeights *negativeConditionalProbabilities
 @property  PMLModelWeights *probabilities
 @property  PMLModelWeights *positiveConditionalCounts
 @property  PMLModelWeights *negativeConditionalCounts
 @property  PMLModelWeights *counts
 @property  PMLSparseMatrix *covariates
 @property  PMLModelRegressor *objective

  // instance methods
  -[PMLNaiveBayesSolver init]
  -[PMLNaiveBayesSolver .cxx_destruct]
  -[PMLNaiveBayesSolver predict:]
  -[PMLNaiveBayesSolver counts]
  -[PMLNaiveBayesSolver setCounts:]
  -[PMLNaiveBayesSolver initWithProbabilities:positiveConditionalProbabilities:negativeConditionalProbabilities:]
  -[PMLNaiveBayesSolver solveForCovariates:objectives:]
  -[PMLNaiveBayesSolver solve]
  -[PMLNaiveBayesSolver positiveConditionalProbabilities]
  -[PMLNaiveBayesSolver setPositiveConditionalProbabilities:]
  -[PMLNaiveBayesSolver negativeConditionalProbabilities]
  -[PMLNaiveBayesSolver setNegativeConditionalProbabilities:]
  -[PMLNaiveBayesSolver probabilities]
  -[PMLNaiveBayesSolver setProbabilities:]
  -[PMLNaiveBayesSolver positiveConditionalCounts]
  -[PMLNaiveBayesSolver setPositiveConditionalCounts:]
  -[PMLNaiveBayesSolver negativeConditionalCounts]
  -[PMLNaiveBayesSolver setNegativeConditionalCounts:]
  -[PMLNaiveBayesSolver covariates]
  -[PMLNaiveBayesSolver setCovariates:]
  -[PMLNaiveBayesSolver objective]
  -[PMLNaiveBayesSolver setObjective:]


PMLInMemoryCachedStore : PMLTrainingStore
  // class methods
  +[PMLInMemoryCachedStore cachedStoreFromRealStore:sessionDescriptor:sessionsLimit:]

  // instance methods
  -[PMLInMemoryCachedStore .cxx_destruct]
  -[PMLInMemoryCachedStore initWithSessionBatch:]
  -[PMLInMemoryCachedStore loadSessionsForModel:excludeItemIdsUsedWithin:limit:onlyAppleInternal:positiveLabel:skew:block:]
  -[PMLInMemoryCachedStore _openDbIfUnlocked]
  -[PMLInMemoryCachedStore _registerUnlockHandler]


PMLPlanSimulator : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[PMLPlanSimulator simulatorWithDbPaths:sessionDescriptor:sessionsInBatch:maxSessionsLimit:seed:]

  // instance methods
  -[PMLPlanSimulator init]
  -[PMLPlanSimulator .cxx_destruct]
  -[PMLPlanSimulator initWithStores:sessionDescriptor:seed:]
  -[PMLPlanSimulator _randomStore]
  -[PMLPlanSimulator _randomStores:]
  -[PMLPlanSimulator runParallelPlansWithPlanId:tracker:noiseScaleFactors:noiseMinimumMagnitude:weights:serverIteration:useIntercept:noiseMechanism:usingRandomlySelected:]


PMLTrackerParsecAdapter : NSObject /usr/lib/libSystem.B.dylib <PMLTrackerAdapterProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PMLTrackerParsecAdapter _writeDataForTransparency:]
  +[PMLTrackerParsecAdapter wrappedMessage:]

  // instance methods
  -[PMLTrackerParsecAdapter postMetricId:message:]


AWDProactiveModelFittingEvaluation : PBCodable /System/Library/PrivateFrameworks/WirelessDiagnostics.framework/WirelessDiagnostics <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasModelInfo
 @property  AWDProactiveModelFittingModelInfo *modelInfo
 @property  BOOL hasMinibatchStats
 @property  AWDProactiveModelFittingMinibatchStats *minibatchStats
 @property  BOOL hasEvaluationMetrics
 @property  AWDProactiveModelFittingEvalMetrics *evaluationMetrics
 @property  NSMutableArray *precisionAtKs

  // class methods
  +[AWDProactiveModelFittingEvaluation precisionAtKType]

  // instance methods
  -[AWDProactiveModelFittingEvaluation isEqual:]
  -[AWDProactiveModelFittingEvaluation copyWithZone:]
  -[AWDProactiveModelFittingEvaluation .cxx_destruct]
  -[AWDProactiveModelFittingEvaluation dictionaryRepresentation]
  -[AWDProactiveModelFittingEvaluation timestamp]
  -[AWDProactiveModelFittingEvaluation hasTimestamp]
  -[AWDProactiveModelFittingEvaluation setTimestamp:]
  -[AWDProactiveModelFittingEvaluation writeTo:]
  -[AWDProactiveModelFittingEvaluation mergeFrom:]
  -[AWDProactiveModelFittingEvaluation readFrom:]
  -[AWDProactiveModelFittingEvaluation copyTo:]
  -[AWDProactiveModelFittingEvaluation setHasTimestamp:]
  -[AWDProactiveModelFittingEvaluation modelInfo]
  -[AWDProactiveModelFittingEvaluation hasModelInfo]
  -[AWDProactiveModelFittingEvaluation hasMinibatchStats]
  -[AWDProactiveModelFittingEvaluation hasEvaluationMetrics]
  -[AWDProactiveModelFittingEvaluation clearPrecisionAtKs]
  -[AWDProactiveModelFittingEvaluation addPrecisionAtK:]
  -[AWDProactiveModelFittingEvaluation precisionAtKsCount]
  -[AWDProactiveModelFittingEvaluation precisionAtKAtIndex:]
  -[AWDProactiveModelFittingEvaluation setModelInfo:]
  -[AWDProactiveModelFittingEvaluation minibatchStats]
  -[AWDProactiveModelFittingEvaluation setMinibatchStats:]
  -[AWDProactiveModelFittingEvaluation evaluationMetrics]
  -[AWDProactiveModelFittingEvaluation setEvaluationMetrics:]
  -[AWDProactiveModelFittingEvaluation precisionAtKs]
  -[AWDProactiveModelFittingEvaluation setPrecisionAtKs:]
  -[AWDProactiveModelFittingEvaluation precisionAtK:]


AWDProactiveModelFittingLogRegWeights : PBCodable /System/Library/PrivateFrameworks/WirelessDiagnostics.framework/WirelessDiagnostics <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasModelInfo
 @property  AWDProactiveModelFittingModelInfo *modelInfo
 @property  BOOL hasSparseFloatWeights
 @property  AWDProactiveModelFittingSparseFloatVector *sparseFloatWeights
 @property  BOOL hasMinibatchStats
 @property  AWDProactiveModelFittingMinibatchStats *minibatchStats
 @property  BOOL hasEvaluationMetrics
 @property  AWDProactiveModelFittingEvalMetrics *evaluationMetrics
 @property  BOOL hasSparseQuantizedWeights
 @property  AWDProactiveModelFittingQuantizedSparseVector *sparseQuantizedWeights
 @property  BOOL hasWeightsScaleFactor
 @property  float weightsScaleFactor
 @property  BOOL hasWeightsL2norm
 @property  float weightsL2norm
 @property  BOOL hasDenseQuantizedWeights
 @property  AWDProactiveModelFittingQuantizedDenseVector *denseQuantizedWeights

  // instance methods
  -[AWDProactiveModelFittingLogRegWeights isEqual:]
  -[AWDProactiveModelFittingLogRegWeights copyWithZone:]
  -[AWDProactiveModelFittingLogRegWeights .cxx_destruct]
  -[AWDProactiveModelFittingLogRegWeights dictionaryRepresentation]
  -[AWDProactiveModelFittingLogRegWeights timestamp]
  -[AWDProactiveModelFittingLogRegWeights hasTimestamp]
  -[AWDProactiveModelFittingLogRegWeights setTimestamp:]
  -[AWDProactiveModelFittingLogRegWeights writeTo:]
  -[AWDProactiveModelFittingLogRegWeights mergeFrom:]
  -[AWDProactiveModelFittingLogRegWeights readFrom:]
  -[AWDProactiveModelFittingLogRegWeights copyTo:]
  -[AWDProactiveModelFittingLogRegWeights setHasTimestamp:]
  -[AWDProactiveModelFittingLogRegWeights modelInfo]
  -[AWDProactiveModelFittingLogRegWeights hasModelInfo]
  -[AWDProactiveModelFittingLogRegWeights hasMinibatchStats]
  -[AWDProactiveModelFittingLogRegWeights hasEvaluationMetrics]
  -[AWDProactiveModelFittingLogRegWeights setModelInfo:]
  -[AWDProactiveModelFittingLogRegWeights minibatchStats]
  -[AWDProactiveModelFittingLogRegWeights setMinibatchStats:]
  -[AWDProactiveModelFittingLogRegWeights evaluationMetrics]
  -[AWDProactiveModelFittingLogRegWeights setEvaluationMetrics:]
  -[AWDProactiveModelFittingLogRegWeights hasSparseFloatWeights]
  -[AWDProactiveModelFittingLogRegWeights hasSparseQuantizedWeights]
  -[AWDProactiveModelFittingLogRegWeights setWeightsScaleFactor:]
  -[AWDProactiveModelFittingLogRegWeights setHasWeightsScaleFactor:]
  -[AWDProactiveModelFittingLogRegWeights hasWeightsScaleFactor]
  -[AWDProactiveModelFittingLogRegWeights setWeightsL2norm:]
  -[AWDProactiveModelFittingLogRegWeights setHasWeightsL2norm:]
  -[AWDProactiveModelFittingLogRegWeights hasWeightsL2norm]
  -[AWDProactiveModelFittingLogRegWeights hasDenseQuantizedWeights]
  -[AWDProactiveModelFittingLogRegWeights sparseFloatWeights]
  -[AWDProactiveModelFittingLogRegWeights setSparseFloatWeights:]
  -[AWDProactiveModelFittingLogRegWeights sparseQuantizedWeights]
  -[AWDProactiveModelFittingLogRegWeights setSparseQuantizedWeights:]
  -[AWDProactiveModelFittingLogRegWeights weightsScaleFactor]
  -[AWDProactiveModelFittingLogRegWeights weightsL2norm]
  -[AWDProactiveModelFittingLogRegWeights denseQuantizedWeights]
  -[AWDProactiveModelFittingLogRegWeights setDenseQuantizedWeights:]
  -[AWDProactiveModelFittingLogRegWeights hasWeights]


PMLGradientSolver : NSObject /usr/lib/libSystem.B.dylib
 @property  PMLModelWeights *weights
 @property  PMLSparseMatrix *covariates
 @property  PMLModelRegressor *objective
 @property  BOOL intercept

  // instance methods
  -[PMLGradientSolver init]
  -[PMLGradientSolver .cxx_destruct]
  -[PMLGradientSolver weights]
  -[PMLGradientSolver setWeights:]
  -[PMLGradientSolver predict:]
  -[PMLGradientSolver intercept]
  -[PMLGradientSolver setIntercept:]
  -[PMLGradientSolver solveForCovariates:objectives:]
  -[PMLGradientSolver solve]
  -[PMLGradientSolver covariates]
  -[PMLGradientSolver setCovariates:]
  -[PMLGradientSolver objective]
  -[PMLGradientSolver setObjective:]
  -[PMLGradientSolver initWithLearningRate:minIterations:stoppingThreshold:weights:intercept:gradientCalculator:predictionCalculator:batchPredictionCalculator:]
  -[PMLGradientSolver computeAvgGradientWithIterations:]
  -[PMLGradientSolver solveWithAvgGradient:maxNumberOfIterations:]
  -[PMLGradientSolver meanSquaredError]
  -[PMLGradientSolver batchPredict:]


PMLMultiLabelRegressionEvaluationPlan : NSObject /usr/lib/libSystem.B.dylib <PMLPlanProtocol>
 @property  PMLTrainingStore *store
 @property  PMLSessionDescriptor *sessionDescriptor
 @property  unsigned long maxSessionsLimit
 @property  unsigned long sessionsInBatch
 @property  unsigned long supportPerLabel
 @property  <PMLMultiLabelRegressionModelProtocol> *multiLabelRegressionModel
 @property  NSArray *positiveLabels
 @property  NSArray *weightsArray
 @property  BOOL intercept
 @property  NSArray *evaluationPoints
 @property  <PMLMultiLabelEvaluationTrackerProtocol> *tracker
 @property  unsigned long evaluationLevel
 @property  NSString *planId
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PMLMultiLabelRegressionEvaluationPlan init]
  -[PMLMultiLabelRegressionEvaluationPlan run]
  -[PMLMultiLabelRegressionEvaluationPlan .cxx_destruct]
  -[PMLMultiLabelRegressionEvaluationPlan store]
  -[PMLMultiLabelRegressionEvaluationPlan tracker]
  -[PMLMultiLabelRegressionEvaluationPlan intercept]
  -[PMLMultiLabelRegressionEvaluationPlan planId]
  -[PMLMultiLabelRegressionEvaluationPlan toPlistWithChunks:]
  -[PMLMultiLabelRegressionEvaluationPlan initWithPlist:chunks:context:]
  -[PMLMultiLabelRegressionEvaluationPlan sessionDescriptor]
  -[PMLMultiLabelRegressionEvaluationPlan runWhile:didFinish:]
  -[PMLMultiLabelRegressionEvaluationPlan initWithPlanId:store:sessionDescriptor:maxSessionsLimit:sessionsInBatch:supportPerLabel:labelAndWeights:modelClassName:intercept:evaluationPoints:tracker:evaluationLevel:]
  -[PMLMultiLabelRegressionEvaluationPlan _rankedLabelsForSession:]
  -[PMLMultiLabelRegressionEvaluationPlan _precisionAtEvaluationPointsForSessions:]
  -[PMLMultiLabelRegressionEvaluationPlan maxSessionsLimit]
  -[PMLMultiLabelRegressionEvaluationPlan sessionsInBatch]
  -[PMLMultiLabelRegressionEvaluationPlan supportPerLabel]
  -[PMLMultiLabelRegressionEvaluationPlan multiLabelRegressionModel]
  -[PMLMultiLabelRegressionEvaluationPlan positiveLabels]
  -[PMLMultiLabelRegressionEvaluationPlan weightsArray]
  -[PMLMultiLabelRegressionEvaluationPlan evaluationPoints]
  -[PMLMultiLabelRegressionEvaluationPlan evaluationLevel]


AWDProactiveModelFittingLinRegObjectiveFeatures : PBCodable /System/Library/PrivateFrameworks/WirelessDiagnostics.framework/WirelessDiagnostics <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasModelInfo
 @property  AWDProactiveModelFittingModelInfo *modelInfo
 @property  BOOL hasSparseFloatFeatures
 @property  AWDProactiveModelFittingSparseFloatVector *sparseFloatFeatures
 @property  BOOL hasMinibatchStats
 @property  AWDProactiveModelFittingMinibatchStats *minibatchStats
 @property  BOOL hasSparseQuantizedFeatures
 @property  AWDProactiveModelFittingQuantizedSparseVector *sparseQuantizedFeatures
 @property  BOOL hasFeaturesScaleFactor
 @property  float featuresScaleFactor
 @property  BOOL hasFeaturesL2norm
 @property  float featuresL2norm

  // instance methods
  -[AWDProactiveModelFittingLinRegObjectiveFeatures isEqual:]
  -[AWDProactiveModelFittingLinRegObjectiveFeatures copyWithZone:]
  -[AWDProactiveModelFittingLinRegObjectiveFeatures .cxx_destruct]
  -[AWDProactiveModelFittingLinRegObjectiveFeatures dictionaryRepresentation]
  -[AWDProactiveModelFittingLinRegObjectiveFeatures timestamp]
  -[AWDProactiveModelFittingLinRegObjectiveFeatures hasTimestamp]
  -[AWDProactiveModelFittingLinRegObjectiveFeatures setTimestamp:]
  -[AWDProactiveModelFittingLinRegObjectiveFeatures writeTo:]
  -[AWDProactiveModelFittingLinRegObjectiveFeatures mergeFrom:]
  -[AWDProactiveModelFittingLinRegObjectiveFeatures readFrom:]
  -[AWDProactiveModelFittingLinRegObjectiveFeatures copyTo:]
  -[AWDProactiveModelFittingLinRegObjectiveFeatures setHasTimestamp:]
  -[AWDProactiveModelFittingLinRegObjectiveFeatures modelInfo]
  -[AWDProactiveModelFittingLinRegObjectiveFeatures hasModelInfo]
  -[AWDProactiveModelFittingLinRegObjectiveFeatures hasMinibatchStats]
  -[AWDProactiveModelFittingLinRegObjectiveFeatures setModelInfo:]
  -[AWDProactiveModelFittingLinRegObjectiveFeatures minibatchStats]
  -[AWDProactiveModelFittingLinRegObjectiveFeatures setMinibatchStats:]
  -[AWDProactiveModelFittingLinRegObjectiveFeatures hasSparseFloatFeatures]
  -[AWDProactiveModelFittingLinRegObjectiveFeatures hasSparseQuantizedFeatures]
  -[AWDProactiveModelFittingLinRegObjectiveFeatures setFeaturesScaleFactor:]
  -[AWDProactiveModelFittingLinRegObjectiveFeatures setHasFeaturesScaleFactor:]
  -[AWDProactiveModelFittingLinRegObjectiveFeatures hasFeaturesScaleFactor]
  -[AWDProactiveModelFittingLinRegObjectiveFeatures setFeaturesL2norm:]
  -[AWDProactiveModelFittingLinRegObjectiveFeatures setHasFeaturesL2norm:]
  -[AWDProactiveModelFittingLinRegObjectiveFeatures hasFeaturesL2norm]
  -[AWDProactiveModelFittingLinRegObjectiveFeatures sparseFloatFeatures]
  -[AWDProactiveModelFittingLinRegObjectiveFeatures setSparseFloatFeatures:]
  -[AWDProactiveModelFittingLinRegObjectiveFeatures sparseQuantizedFeatures]
  -[AWDProactiveModelFittingLinRegObjectiveFeatures setSparseQuantizedFeatures:]
  -[AWDProactiveModelFittingLinRegObjectiveFeatures featuresScaleFactor]
  -[AWDProactiveModelFittingLinRegObjectiveFeatures featuresL2norm]
  -[AWDProactiveModelFittingLinRegObjectiveFeatures hasObjectiveFeatures]
  -[AWDProactiveModelFittingLinRegObjectiveFeatures featuresValueAtIndex:]
  -[AWDProactiveModelFittingLinRegObjectiveFeatures featuresLength]


AWDProactiveModelFittingQuantizedSparseVector : PBCodable /System/Library/PrivateFrameworks/WirelessDiagnostics.framework/WirelessDiagnostics <NSCopying>
 @property  unsigned long indicesCount
 @property  ^I indices
 @property  unsigned long valuesCount
 @property  ^I values
 @property  BOOL hasLength
 @property  unsigned int length
 @property  BOOL hasMinValue
 @property  float minValue
 @property  BOOL hasBucketSize
 @property  float bucketSize

  // class methods
  +[AWDProactiveModelFittingQuantizedSparseVector quantizedSparseVectorFromSparseVector:numberOfBuckets:]
  +[AWDProactiveModelFittingQuantizedSparseVector quantizedSparseVectorFromDenseVector:numberOfBuckets:]

  // instance methods
  -[AWDProactiveModelFittingQuantizedSparseVector dealloc]
  -[AWDProactiveModelFittingQuantizedSparseVector length]
  -[AWDProactiveModelFittingQuantizedSparseVector isEqual:]
  -[AWDProactiveModelFittingQuantizedSparseVector copyWithZone:]
  -[AWDProactiveModelFittingQuantizedSparseVector setLength:]
  -[AWDProactiveModelFittingQuantizedSparseVector values]
  -[AWDProactiveModelFittingQuantizedSparseVector dictionaryRepresentation]
  -[AWDProactiveModelFittingQuantizedSparseVector writeTo:]
  -[AWDProactiveModelFittingQuantizedSparseVector mergeFrom:]
  -[AWDProactiveModelFittingQuantizedSparseVector readFrom:]
  -[AWDProactiveModelFittingQuantizedSparseVector copyTo:]
  -[AWDProactiveModelFittingQuantizedSparseVector indices]
  -[AWDProactiveModelFittingQuantizedSparseVector valuesCount]
  -[AWDProactiveModelFittingQuantizedSparseVector clearValues]
  -[AWDProactiveModelFittingQuantizedSparseVector hasLength]
  -[AWDProactiveModelFittingQuantizedSparseVector valuesAtIndex:]
  -[AWDProactiveModelFittingQuantizedSparseVector addValues:]
  -[AWDProactiveModelFittingQuantizedSparseVector setHasLength:]
  -[AWDProactiveModelFittingQuantizedSparseVector minValue]
  -[AWDProactiveModelFittingQuantizedSparseVector setMinValue:]
  -[AWDProactiveModelFittingQuantizedSparseVector indicesCount]
  -[AWDProactiveModelFittingQuantizedSparseVector clearIndices]
  -[AWDProactiveModelFittingQuantizedSparseVector addIndices:]
  -[AWDProactiveModelFittingQuantizedSparseVector indicesAtIndex:]
  -[AWDProactiveModelFittingQuantizedSparseVector setIndices:count:]
  -[AWDProactiveModelFittingQuantizedSparseVector setValues:count:]
  -[AWDProactiveModelFittingQuantizedSparseVector setHasMinValue:]
  -[AWDProactiveModelFittingQuantizedSparseVector hasMinValue]
  -[AWDProactiveModelFittingQuantizedSparseVector setBucketSize:]
  -[AWDProactiveModelFittingQuantizedSparseVector setHasBucketSize:]
  -[AWDProactiveModelFittingQuantizedSparseVector hasBucketSize]
  -[AWDProactiveModelFittingQuantizedSparseVector bucketSize]
  -[AWDProactiveModelFittingQuantizedSparseVector originalValueAtIndex:]


AWDProactiveModelFittingModelInfoStatsPair : PBCodable /System/Library/PrivateFrameworks/WirelessDiagnostics.framework/WirelessDiagnostics <NSCopying>
 @property  BOOL hasModelInfo
 @property  AWDProactiveModelFittingModelInfo *modelInfo
 @property  BOOL hasStats
 @property  AWDProactiveModelFittingMinibatchStats *stats

  // instance methods
  -[AWDProactiveModelFittingModelInfoStatsPair isEqual:]
  -[AWDProactiveModelFittingModelInfoStatsPair copyWithZone:]
  -[AWDProactiveModelFittingModelInfoStatsPair .cxx_destruct]
  -[AWDProactiveModelFittingModelInfoStatsPair dictionaryRepresentation]
  -[AWDProactiveModelFittingModelInfoStatsPair writeTo:]
  -[AWDProactiveModelFittingModelInfoStatsPair mergeFrom:]
  -[AWDProactiveModelFittingModelInfoStatsPair readFrom:]
  -[AWDProactiveModelFittingModelInfoStatsPair copyTo:]
  -[AWDProactiveModelFittingModelInfoStatsPair modelInfo]
  -[AWDProactiveModelFittingModelInfoStatsPair stats]
  -[AWDProactiveModelFittingModelInfoStatsPair setStats:]
  -[AWDProactiveModelFittingModelInfoStatsPair hasModelInfo]
  -[AWDProactiveModelFittingModelInfoStatsPair setModelInfo:]
  -[AWDProactiveModelFittingModelInfoStatsPair hasStats]


PMLLabelLimitRowId : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  NSString *label
 @property  long long limit
 @property  long long rowId

  // class methods
  +[PMLLabelLimitRowId labelLimitRowIdWithLabel:limit:rowId:]

  // instance methods
  -[PMLLabelLimitRowId init]
  -[PMLLabelLimitRowId isEqual:]
  -[PMLLabelLimitRowId copyWithZone:]
  -[PMLLabelLimitRowId .cxx_destruct]
  -[PMLLabelLimitRowId limit]
  -[PMLLabelLimitRowId label]
  -[PMLLabelLimitRowId rowId]
  -[PMLLabelLimitRowId initWithLabel:limit:rowId:]
  -[PMLLabelLimitRowId isEqualToLabelLimitRowId:]


PMLLogRegTrainingPlan : NSObject /usr/lib/libSystem.B.dylib <PMLPlanProtocol>
 @property  PMLTrainingStore *store
 @property  <PMLLogRegTrackerProtocol> *tracker
 @property  unsigned long currentServerIteration
 @property  PMLSessionDescriptor *sessionDescriptor
 @property  unsigned long maxSessionsLimit
 @property  PMLModelWeights *currentModelWeights
 @property  float localLearningRate
 @property  float stoppingThreshold
 @property  unsigned long localMinimumIterations
 @property  unsigned long localGradientIterations
 @property  BOOL useOnlyAppleInternalSessions
 @property  BOOL isMultiLabel
 @property  unsigned long positiveLabel
 @property  BOOL intercept
 @property  unsigned long evaluationLevel
 @property  BOOL reportScale
 @property  <PMLTransformerProtocol> *transformer
 @property  NSArray *refeaturizationDescriptors
 @property  NSString *planId
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PMLLogRegTrainingPlan planWithStore:tracker:sessionDescriptor:arguments:]

  // instance methods
  -[PMLLogRegTrainingPlan init]
  -[PMLLogRegTrainingPlan .cxx_destruct]
  -[PMLLogRegTrainingPlan store]
  -[PMLLogRegTrainingPlan tracker]
  -[PMLLogRegTrainingPlan intercept]
  -[PMLLogRegTrainingPlan transformer]
  -[PMLLogRegTrainingPlan planId]
  -[PMLLogRegTrainingPlan toPlistWithChunks:]
  -[PMLLogRegTrainingPlan initWithPlist:chunks:context:]
  -[PMLLogRegTrainingPlan sessionDescriptor]
  -[PMLLogRegTrainingPlan runWhile:didFinish:]
  -[PMLLogRegTrainingPlan maxSessionsLimit]
  -[PMLLogRegTrainingPlan evaluationLevel]
  -[PMLLogRegTrainingPlan initWithStore:tracker:noiseStrategy:planId:sessionDescriptor:maxSessionsLimit:sessionsInBatch:currentServerIteration:currentModelWeights:localLearningRate:stoppingThreshold:localMinimumIterations:localGradientIterations:useOnlyAppleInternalSessions:skew:threshold:isMultiLabel:intercept:positiveLabel:evaluationLevel:reportScale:transformer:refeaturizationDescriptors:]
  -[PMLLogRegTrainingPlan train]
  -[PMLLogRegTrainingPlan evaluationMetricsForPredictions:objectives:predicate:start:]
  -[PMLLogRegTrainingPlan loadSessionsWithBlock:]
  -[PMLLogRegTrainingPlan normalizeRegressor:]
  -[PMLLogRegTrainingPlan runUntilDoneForTesting]
  -[PMLLogRegTrainingPlan currentServerIteration]
  -[PMLLogRegTrainingPlan currentModelWeights]
  -[PMLLogRegTrainingPlan localLearningRate]
  -[PMLLogRegTrainingPlan stoppingThreshold]
  -[PMLLogRegTrainingPlan localMinimumIterations]
  -[PMLLogRegTrainingPlan localGradientIterations]
  -[PMLLogRegTrainingPlan useOnlyAppleInternalSessions]
  -[PMLLogRegTrainingPlan isMultiLabel]
  -[PMLLogRegTrainingPlan positiveLabel]
  -[PMLLogRegTrainingPlan reportScale]
  -[PMLLogRegTrainingPlan refeaturizationDescriptors]


AWDProactiveModelFittingLinRegFeatureMatrix : PBCodable /System/Library/PrivateFrameworks/WirelessDiagnostics.framework/WirelessDiagnostics <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasModelInfo
 @property  AWDProactiveModelFittingModelInfo *modelInfo
 @property  BOOL hasSparseFloatFeatureMatrix
 @property  AWDProactiveModelFittingSparseFloatMatrix *sparseFloatFeatureMatrix
 @property  BOOL hasMinibatchStats
 @property  AWDProactiveModelFittingMinibatchStats *minibatchStats
 @property  BOOL hasSparseQuantizedFeatureMatrix
 @property  AWDProactiveModelFittingQuantizedSparseMatrix *sparseQuantizedFeatureMatrix
 @property  BOOL hasFeatureMatrixScaleFactor
 @property  float featureMatrixScaleFactor
 @property  BOOL hasFeatureMatrixL2norm
 @property  float featureMatrixL2norm

  // instance methods
  -[AWDProactiveModelFittingLinRegFeatureMatrix isEqual:]
  -[AWDProactiveModelFittingLinRegFeatureMatrix copyWithZone:]
  -[AWDProactiveModelFittingLinRegFeatureMatrix .cxx_destruct]
  -[AWDProactiveModelFittingLinRegFeatureMatrix dictionaryRepresentation]
  -[AWDProactiveModelFittingLinRegFeatureMatrix timestamp]
  -[AWDProactiveModelFittingLinRegFeatureMatrix hasTimestamp]
  -[AWDProactiveModelFittingLinRegFeatureMatrix setTimestamp:]
  -[AWDProactiveModelFittingLinRegFeatureMatrix writeTo:]
  -[AWDProactiveModelFittingLinRegFeatureMatrix mergeFrom:]
  -[AWDProactiveModelFittingLinRegFeatureMatrix readFrom:]
  -[AWDProactiveModelFittingLinRegFeatureMatrix copyTo:]
  -[AWDProactiveModelFittingLinRegFeatureMatrix setHasTimestamp:]
  -[AWDProactiveModelFittingLinRegFeatureMatrix modelInfo]
  -[AWDProactiveModelFittingLinRegFeatureMatrix hasModelInfo]
  -[AWDProactiveModelFittingLinRegFeatureMatrix hasMinibatchStats]
  -[AWDProactiveModelFittingLinRegFeatureMatrix setModelInfo:]
  -[AWDProactiveModelFittingLinRegFeatureMatrix minibatchStats]
  -[AWDProactiveModelFittingLinRegFeatureMatrix setMinibatchStats:]
  -[AWDProactiveModelFittingLinRegFeatureMatrix hasSparseFloatFeatureMatrix]
  -[AWDProactiveModelFittingLinRegFeatureMatrix hasSparseQuantizedFeatureMatrix]
  -[AWDProactiveModelFittingLinRegFeatureMatrix setFeatureMatrixScaleFactor:]
  -[AWDProactiveModelFittingLinRegFeatureMatrix setHasFeatureMatrixScaleFactor:]
  -[AWDProactiveModelFittingLinRegFeatureMatrix hasFeatureMatrixScaleFactor]
  -[AWDProactiveModelFittingLinRegFeatureMatrix setFeatureMatrixL2norm:]
  -[AWDProactiveModelFittingLinRegFeatureMatrix setHasFeatureMatrixL2norm:]
  -[AWDProactiveModelFittingLinRegFeatureMatrix hasFeatureMatrixL2norm]
  -[AWDProactiveModelFittingLinRegFeatureMatrix sparseFloatFeatureMatrix]
  -[AWDProactiveModelFittingLinRegFeatureMatrix setSparseFloatFeatureMatrix:]
  -[AWDProactiveModelFittingLinRegFeatureMatrix sparseQuantizedFeatureMatrix]
  -[AWDProactiveModelFittingLinRegFeatureMatrix setSparseQuantizedFeatureMatrix:]
  -[AWDProactiveModelFittingLinRegFeatureMatrix featureMatrixScaleFactor]
  -[AWDProactiveModelFittingLinRegFeatureMatrix featureMatrixL2norm]
  -[AWDProactiveModelFittingLinRegFeatureMatrix hasFeatureMatrix]
  -[AWDProactiveModelFittingLinRegFeatureMatrix featureMatrixValueAtRow:column:]


PMLModelDescriptor : NSObject /usr/lib/libSystem.B.dylib <PMLDictionarySerializableProtocol, PMLPlistAndChunksSerializableProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *name
 @property  NSNumber *version
 @property  PMLModelWeights *weights
 @property  PMLModelLearningRates *learningRates

  // class methods
  +[PMLModelDescriptor isValidModelDescriptorInPlistMetadata:withErrorDescription:]

  // instance methods
  -[PMLModelDescriptor name]
  -[PMLModelDescriptor .cxx_destruct]
  -[PMLModelDescriptor setName:]
  -[PMLModelDescriptor version]
  -[PMLModelDescriptor setVersion:]
  -[PMLModelDescriptor weights]
  -[PMLModelDescriptor setWeights:]
  -[PMLModelDescriptor toDictionary]
  -[PMLModelDescriptor initFromDictionary:]
  -[PMLModelDescriptor toPlistWithChunks:]
  -[PMLModelDescriptor initWithPlist:chunks:context:]
  -[PMLModelDescriptor learningRates]
  -[PMLModelDescriptor setLearningRates:]


AWDProactiveModelFittingSparseFloatVector : PBCodable /System/Library/PrivateFrameworks/WirelessDiagnostics.framework/WirelessDiagnostics <NSCopying>
 @property  unsigned long indicesCount
 @property  ^Q indices
 @property  unsigned long valuesCount
 @property  ^f values
 @property  BOOL hasLength
 @property  unsigned long length

  // class methods
  +[AWDProactiveModelFittingSparseFloatVector sparseFloatVectorFromModelWeights:]
  +[AWDProactiveModelFittingSparseFloatVector sparseFloatVectorFromSparseVector:]

  // instance methods
  -[AWDProactiveModelFittingSparseFloatVector dealloc]
  -[AWDProactiveModelFittingSparseFloatVector length]
  -[AWDProactiveModelFittingSparseFloatVector isEqual:]
  -[AWDProactiveModelFittingSparseFloatVector copyWithZone:]
  -[AWDProactiveModelFittingSparseFloatVector setLength:]
  -[AWDProactiveModelFittingSparseFloatVector values]
  -[AWDProactiveModelFittingSparseFloatVector dictionaryRepresentation]
  -[AWDProactiveModelFittingSparseFloatVector writeTo:]
  -[AWDProactiveModelFittingSparseFloatVector valueAtIndex:]
  -[AWDProactiveModelFittingSparseFloatVector mergeFrom:]
  -[AWDProactiveModelFittingSparseFloatVector readFrom:]
  -[AWDProactiveModelFittingSparseFloatVector copyTo:]
  -[AWDProactiveModelFittingSparseFloatVector indices]
  -[AWDProactiveModelFittingSparseFloatVector valuesCount]
  -[AWDProactiveModelFittingSparseFloatVector clearValues]
  -[AWDProactiveModelFittingSparseFloatVector hasLength]
  -[AWDProactiveModelFittingSparseFloatVector valuesAtIndex:]
  -[AWDProactiveModelFittingSparseFloatVector addValues:]
  -[AWDProactiveModelFittingSparseFloatVector setHasLength:]
  -[AWDProactiveModelFittingSparseFloatVector indicesCount]
  -[AWDProactiveModelFittingSparseFloatVector clearIndices]
  -[AWDProactiveModelFittingSparseFloatVector addIndices:]
  -[AWDProactiveModelFittingSparseFloatVector indicesAtIndex:]
  -[AWDProactiveModelFittingSparseFloatVector setIndices:count:]
  -[AWDProactiveModelFittingSparseFloatVector setValues:count:]


PMLLaplaceSampler : NSObject /usr/lib/libSystem.B.dylib <PMLSampler>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PMLLaplaceSampler sample]
  -[PMLLaplaceSampler initWithMagnitude:]
  -[PMLLaplaceSampler initWithMagnitude:seed:]


PMLTrainingLogEntry : NSObject /usr/lib/libSystem.B.dylib
 @property  double timestamp
 @property  unsigned long serverIteration

  // instance methods
  -[PMLTrainingLogEntry timestamp]
  -[PMLTrainingLogEntry initWithTimestamp:serverIteration:]
  -[PMLTrainingLogEntry serverIteration]


PMLTrainingStore : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[PMLTrainingStore getSchema:]
  +[PMLTrainingStore migrate:to:forStore:]
  +[PMLTrainingStore _migrate:forStore:]
  +[PMLTrainingStore _runQueries:andUpdateVersionTo:inTransactionOnDb:forStore:]
  +[PMLTrainingStore lastUsedTimestampLimit]
  +[PMLTrainingStore setLastUsedTimestampLimit:]
  +[PMLTrainingStore inMemoryStoreForTesting]

  // instance methods
  -[PMLTrainingStore init]
  -[PMLTrainingStore dealloc]
  -[PMLTrainingStore .cxx_destruct]
  -[PMLTrainingStore initWithPath:]
  -[PMLTrainingStore createSnapshot:]
  -[PMLTrainingStore numberOfRowsInTable:]
  -[PMLTrainingStore setSourceRecoverer:]
  -[PMLTrainingStore lastTrainingFeaturizationForModelName:andLocale:]
  -[PMLTrainingStore loadSessionsForModel:excludeItemIdsUsedWithin:limit:onlyAppleInternal:positiveLabel:skew:block:]
  -[PMLTrainingStore _openDbIfUnlocked]
  -[PMLTrainingStore _registerUnlockHandler]
  -[PMLTrainingStore initWithPath:allowSkipSchema:]
  -[PMLTrainingStore storeSession:label:model:bundleId:domainId:itemIds:isAppleInternal:]
  -[PMLTrainingStore storeSession:source:label:model:bundleId:domainId:itemIds:isAppleInternal:]
  -[PMLTrainingStore loadSessionsForModel:privacyBudgetRefreshPeriod:labels:batchSize:supportPerLabel:block:]
  -[PMLTrainingStore sessionDimensionsForModel:startingRowId:onlyAppleInternal:labelFilter:]
  -[PMLTrainingStore _loadSessionsFromLabelAndTuples:model:numberOfRows:numberOfColumns:lastUsedMax:block:]
  -[PMLTrainingStore _loadSessionsForModel:positiveRowId:negativeRowId:excludeItemIdsUsedWithin:limit:onlyAppleInternal:positiveLabel:skew:block:]
  -[PMLTrainingStore _loadSessionsForModel:privacyBudgetRefreshPeriod:labelAndStartRows:batchSize:supportPerLabel:block:]
  -[PMLTrainingStore loadSessionsForModel:excludeItemIdsUsedWithin:limit:onlyAppleInternal:block:]
  -[PMLTrainingStore limitSessionsForEachLabelWithSessionDescriptor:totalSessionLimit:]
  -[PMLTrainingStore limitSessionsByLastUsedTTL:]
  -[PMLTrainingStore limitSessionsByMaxTimesAccessed]
  -[PMLTrainingStore limitLabeledSessionsWithSessionDescriptor:label:limit:]
  -[PMLTrainingStore deleteSessionsWithBundleId:]
  -[PMLTrainingStore deleteSessionsWithBundleId:itemId:]
  -[PMLTrainingStore deleteSessionsWithBundleId:domainId:]
  -[PMLTrainingStore sessionStats]
  -[PMLTrainingStore sessionStatsForSessionDescriptor:]
  -[PMLTrainingStore enumerateSessionDescriptorsUsingBlock:]
  -[PMLTrainingStore sessionDescriptorIdFor:]
  -[PMLTrainingStore _unregisterUnlockHandler]
  -[PMLTrainingStore _unsafeOpenDbIfUnlocked]
  -[PMLTrainingStore _truncateDbIfCorrupted]
  -[PMLTrainingStore vacuumDb]
  -[PMLTrainingStore migrateTo:]
  -[PMLTrainingStore updateSessionsAndLabelForModel:block:]
  -[PMLTrainingStore updateLastTrainingFeaturizationForModel:andData:]
  -[PMLTrainingStore isDbOpen]
  -[PMLTrainingStore getSchema:]
  -[PMLTrainingStore recoverSourceFromData:]
  -[PMLTrainingStore dbForTesting]
  -[PMLTrainingStore storeSession:source:label:model:]
  -[PMLTrainingStore storeSession:label:model:]
  -[PMLTrainingStore loadSessionsForModel:excludeItemIdsUsedWithin:withSkew:andLimit:block:]
  -[PMLTrainingStore closeDbForTesting]


PMLAWDAvailableSessionsTrackerMock : PMLAWDAvailableSessionsTracker
 @property  NSArray *trackedStats

  // instance methods
  -[PMLAWDAvailableSessionsTrackerMock init]
  -[PMLAWDAvailableSessionsTrackerMock .cxx_destruct]
  -[PMLAWDAvailableSessionsTrackerMock postMetricId:message:]
  -[PMLAWDAvailableSessionsTrackerMock recentStatsForModelName:]
  -[PMLAWDAvailableSessionsTrackerMock triggerAWDMetricRequest]
  -[PMLAWDAvailableSessionsTrackerMock clearTrackedMessages]
  -[PMLAWDAvailableSessionsTrackerMock trackedStats]


AWDProactiveModelFittingAvailableSessions : PBCodable /System/Library/PrivateFrameworks/WirelessDiagnostics.framework/WirelessDiagnostics <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  NSMutableArray *perModelStats

  // class methods
  +[AWDProactiveModelFittingAvailableSessions perModelStatsType]

  // instance methods
  -[AWDProactiveModelFittingAvailableSessions isEqual:]
  -[AWDProactiveModelFittingAvailableSessions copyWithZone:]
  -[AWDProactiveModelFittingAvailableSessions .cxx_destruct]
  -[AWDProactiveModelFittingAvailableSessions dictionaryRepresentation]
  -[AWDProactiveModelFittingAvailableSessions timestamp]
  -[AWDProactiveModelFittingAvailableSessions hasTimestamp]
  -[AWDProactiveModelFittingAvailableSessions setTimestamp:]
  -[AWDProactiveModelFittingAvailableSessions writeTo:]
  -[AWDProactiveModelFittingAvailableSessions mergeFrom:]
  -[AWDProactiveModelFittingAvailableSessions readFrom:]
  -[AWDProactiveModelFittingAvailableSessions copyTo:]
  -[AWDProactiveModelFittingAvailableSessions setHasTimestamp:]
  -[AWDProactiveModelFittingAvailableSessions clearPerModelStats]
  -[AWDProactiveModelFittingAvailableSessions addPerModelStats:]
  -[AWDProactiveModelFittingAvailableSessions perModelStatsCount]
  -[AWDProactiveModelFittingAvailableSessions perModelStatsAtIndex:]
  -[AWDProactiveModelFittingAvailableSessions perModelStats]
  -[AWDProactiveModelFittingAvailableSessions setPerModelStats:]


AWDProactiveModelFittingSparseFloatMatrix : PBCodable /System/Library/PrivateFrameworks/WirelessDiagnostics.framework/WirelessDiagnostics <NSCopying>
 @property  unsigned long columnIndicesCount
 @property  ^Q columnIndices
 @property  BOOL hasColumnLength
 @property  unsigned long columnLength
 @property  unsigned long rowIndicesCount
 @property  ^Q rowIndices
 @property  BOOL hasRowLength
 @property  unsigned long rowLength
 @property  unsigned long valuesCount
 @property  ^f values

  // class methods
  +[AWDProactiveModelFittingSparseFloatMatrix sparseFloatMatrixFromDenseMatrix:]
  +[AWDProactiveModelFittingSparseFloatMatrix sparseFloatMatrixFromSparseMatrix:]

  // instance methods
  -[AWDProactiveModelFittingSparseFloatMatrix dealloc]
  -[AWDProactiveModelFittingSparseFloatMatrix isEqual:]
  -[AWDProactiveModelFittingSparseFloatMatrix copyWithZone:]
  -[AWDProactiveModelFittingSparseFloatMatrix values]
  -[AWDProactiveModelFittingSparseFloatMatrix dictionaryRepresentation]
  -[AWDProactiveModelFittingSparseFloatMatrix writeTo:]
  -[AWDProactiveModelFittingSparseFloatMatrix mergeFrom:]
  -[AWDProactiveModelFittingSparseFloatMatrix readFrom:]
  -[AWDProactiveModelFittingSparseFloatMatrix copyTo:]
  -[AWDProactiveModelFittingSparseFloatMatrix valuesCount]
  -[AWDProactiveModelFittingSparseFloatMatrix clearValues]
  -[AWDProactiveModelFittingSparseFloatMatrix valuesAtIndex:]
  -[AWDProactiveModelFittingSparseFloatMatrix addValues:]
  -[AWDProactiveModelFittingSparseFloatMatrix setValues:count:]
  -[AWDProactiveModelFittingSparseFloatMatrix columnIndicesCount]
  -[AWDProactiveModelFittingSparseFloatMatrix columnIndices]
  -[AWDProactiveModelFittingSparseFloatMatrix clearColumnIndices]
  -[AWDProactiveModelFittingSparseFloatMatrix addColumnIndices:]
  -[AWDProactiveModelFittingSparseFloatMatrix columnIndicesAtIndex:]
  -[AWDProactiveModelFittingSparseFloatMatrix setColumnIndices:count:]
  -[AWDProactiveModelFittingSparseFloatMatrix setColumnLength:]
  -[AWDProactiveModelFittingSparseFloatMatrix setHasColumnLength:]
  -[AWDProactiveModelFittingSparseFloatMatrix hasColumnLength]
  -[AWDProactiveModelFittingSparseFloatMatrix rowIndicesCount]
  -[AWDProactiveModelFittingSparseFloatMatrix rowIndices]
  -[AWDProactiveModelFittingSparseFloatMatrix clearRowIndices]
  -[AWDProactiveModelFittingSparseFloatMatrix addRowIndices:]
  -[AWDProactiveModelFittingSparseFloatMatrix rowIndicesAtIndex:]
  -[AWDProactiveModelFittingSparseFloatMatrix setRowIndices:count:]
  -[AWDProactiveModelFittingSparseFloatMatrix setRowLength:]
  -[AWDProactiveModelFittingSparseFloatMatrix setHasRowLength:]
  -[AWDProactiveModelFittingSparseFloatMatrix hasRowLength]
  -[AWDProactiveModelFittingSparseFloatMatrix columnLength]
  -[AWDProactiveModelFittingSparseFloatMatrix rowLength]
  -[AWDProactiveModelFittingSparseFloatMatrix valueAtRow:column:]


PMLImmutableLogisticRegressionModel : NSObject /usr/lib/libSystem.B.dylib <PMLPlistAndChunksSerializableProtocol, PMLRegressionModelProtocol, PMLClassifierModelProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PMLImmutableLogisticRegressionModel .cxx_destruct]
  -[PMLImmutableLogisticRegressionModel predict:]
  -[PMLImmutableLogisticRegressionModel intercept]
  -[PMLImmutableLogisticRegressionModel toPlistWithChunks:]
  -[PMLImmutableLogisticRegressionModel initWithPlist:chunks:context:]
  -[PMLImmutableLogisticRegressionModel classify:]
  -[PMLImmutableLogisticRegressionModel initWithWeights:intercept:]
  -[PMLImmutableLogisticRegressionModel initWithChunk:intercept:]
  -[PMLImmutableLogisticRegressionModel initWithFloatsNoCopy:count:intercept:]
  -[PMLImmutableLogisticRegressionModel toChunk]


PMLLinRegTrainingPlan : NSObject /usr/lib/libSystem.B.dylib <PMLPlanProtocol>
 @property  PMLTrainingStore *store
 @property  <PMLLinRegTrackerProtocol> *tracker
 @property  PMLSessionDescriptor *sessionDescriptor
 @property  unsigned long maxSessionsLimit
 @property  BOOL useOnlyAppleInternalSessions
 @property  NSString *planId
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PMLLinRegTrainingPlan featureMatrixWithNoiseFromCovariates:]
  +[PMLLinRegTrainingPlan _objectiveFeaturesWithNoiseFromCovariates:objectives:]

  // instance methods
  -[PMLLinRegTrainingPlan init]
  -[PMLLinRegTrainingPlan .cxx_destruct]
  -[PMLLinRegTrainingPlan store]
  -[PMLLinRegTrainingPlan tracker]
  -[PMLLinRegTrainingPlan planId]
  -[PMLLinRegTrainingPlan toPlistWithChunks:]
  -[PMLLinRegTrainingPlan initWithPlist:chunks:context:]
  -[PMLLinRegTrainingPlan sessionDescriptor]
  -[PMLLinRegTrainingPlan runWhile:didFinish:]
  -[PMLLinRegTrainingPlan maxSessionsLimit]
  -[PMLLinRegTrainingPlan train]
  -[PMLLinRegTrainingPlan loadSessionsWithBlock:]
  -[PMLLinRegTrainingPlan normalizeRegressor:]
  -[PMLLinRegTrainingPlan runUntilDoneForTesting]
  -[PMLLinRegTrainingPlan useOnlyAppleInternalSessions]
  -[PMLLinRegTrainingPlan initWithStore:tracker:noiseStrategy:planId:positiveLabel:skew:sessionDescriptor:maxSessionsLimit:sessionsInBatch:useOnlyAppleInternalSessions:]


PMLAppleDirectory : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[PMLAppleDirectory sharedInstance]

  // instance methods
  -[PMLAppleDirectory initWithData:]
  -[PMLAppleDirectory initWithPath:]
  -[PMLAppleDirectory isEmailInAppleDirectory:withPhonenumber:]
  -[PMLAppleDirectory isEmailInAppleDirectory:withAnotherEmail:]
  -[PMLAppleDirectory isEmailInAppleDirectory:]
  -[PMLAppleDirectory isPhoneNumberInAppleDirectory:]
  -[PMLAppleDirectory isPhoneNumberInAppleDirectory:withAnotherPhone:]


PMLPlanDescriptor : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  NSString *name
 @property  NSString *version
 @property  NSString *locale

  // class methods
  +[PMLPlanDescriptor isValidPlanId:]
  +[PMLPlanDescriptor descriptorFromPlanId:]
  +[PMLPlanDescriptor planIdFromString:]

  // instance methods
  -[PMLPlanDescriptor isEqual:]
  -[PMLPlanDescriptor name]
  -[PMLPlanDescriptor copyWithZone:]
  -[PMLPlanDescriptor .cxx_destruct]
  -[PMLPlanDescriptor locale]
  -[PMLPlanDescriptor version]
  -[PMLPlanDescriptor initWithName:version:locale:]


AWDProactiveModelFittingQuantizedSparseMatrix : PBCodable /System/Library/PrivateFrameworks/WirelessDiagnostics.framework/WirelessDiagnostics <NSCopying>
 @property  unsigned long columnIndicesCount
 @property  ^I columnIndices
 @property  BOOL hasColumnLength
 @property  unsigned int columnLength
 @property  unsigned long rowIndicesCount
 @property  ^I rowIndices
 @property  BOOL hasRowLength
 @property  unsigned int rowLength
 @property  unsigned long valuesCount
 @property  ^I values
 @property  BOOL hasMinValue
 @property  float minValue
 @property  BOOL hasBucketSize
 @property  float bucketSize

  // class methods
  +[AWDProactiveModelFittingQuantizedSparseMatrix quantizedSparseMatrixFromSparseMatrix:numberOfBuckets:]

  // instance methods
  -[AWDProactiveModelFittingQuantizedSparseMatrix dealloc]
  -[AWDProactiveModelFittingQuantizedSparseMatrix isEqual:]
  -[AWDProactiveModelFittingQuantizedSparseMatrix copyWithZone:]
  -[AWDProactiveModelFittingQuantizedSparseMatrix values]
  -[AWDProactiveModelFittingQuantizedSparseMatrix dictionaryRepresentation]
  -[AWDProactiveModelFittingQuantizedSparseMatrix writeTo:]
  -[AWDProactiveModelFittingQuantizedSparseMatrix mergeFrom:]
  -[AWDProactiveModelFittingQuantizedSparseMatrix readFrom:]
  -[AWDProactiveModelFittingQuantizedSparseMatrix copyTo:]
  -[AWDProactiveModelFittingQuantizedSparseMatrix valuesCount]
  -[AWDProactiveModelFittingQuantizedSparseMatrix clearValues]
  -[AWDProactiveModelFittingQuantizedSparseMatrix valuesAtIndex:]
  -[AWDProactiveModelFittingQuantizedSparseMatrix addValues:]
  -[AWDProactiveModelFittingQuantizedSparseMatrix minValue]
  -[AWDProactiveModelFittingQuantizedSparseMatrix setMinValue:]
  -[AWDProactiveModelFittingQuantizedSparseMatrix setValues:count:]
  -[AWDProactiveModelFittingQuantizedSparseMatrix setHasMinValue:]
  -[AWDProactiveModelFittingQuantizedSparseMatrix hasMinValue]
  -[AWDProactiveModelFittingQuantizedSparseMatrix setBucketSize:]
  -[AWDProactiveModelFittingQuantizedSparseMatrix setHasBucketSize:]
  -[AWDProactiveModelFittingQuantizedSparseMatrix hasBucketSize]
  -[AWDProactiveModelFittingQuantizedSparseMatrix bucketSize]
  -[AWDProactiveModelFittingQuantizedSparseMatrix columnIndicesCount]
  -[AWDProactiveModelFittingQuantizedSparseMatrix columnIndices]
  -[AWDProactiveModelFittingQuantizedSparseMatrix clearColumnIndices]
  -[AWDProactiveModelFittingQuantizedSparseMatrix addColumnIndices:]
  -[AWDProactiveModelFittingQuantizedSparseMatrix columnIndicesAtIndex:]
  -[AWDProactiveModelFittingQuantizedSparseMatrix setColumnIndices:count:]
  -[AWDProactiveModelFittingQuantizedSparseMatrix setColumnLength:]
  -[AWDProactiveModelFittingQuantizedSparseMatrix setHasColumnLength:]
  -[AWDProactiveModelFittingQuantizedSparseMatrix hasColumnLength]
  -[AWDProactiveModelFittingQuantizedSparseMatrix rowIndicesCount]
  -[AWDProactiveModelFittingQuantizedSparseMatrix rowIndices]
  -[AWDProactiveModelFittingQuantizedSparseMatrix clearRowIndices]
  -[AWDProactiveModelFittingQuantizedSparseMatrix addRowIndices:]
  -[AWDProactiveModelFittingQuantizedSparseMatrix rowIndicesAtIndex:]
  -[AWDProactiveModelFittingQuantizedSparseMatrix setRowIndices:count:]
  -[AWDProactiveModelFittingQuantizedSparseMatrix setRowLength:]
  -[AWDProactiveModelFittingQuantizedSparseMatrix setHasRowLength:]
  -[AWDProactiveModelFittingQuantizedSparseMatrix hasRowLength]
  -[AWDProactiveModelFittingQuantizedSparseMatrix columnLength]
  -[AWDProactiveModelFittingQuantizedSparseMatrix rowLength]
  -[AWDProactiveModelFittingQuantizedSparseMatrix originalValueAtRow:column:]


PMLChunkFileUtilities : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[PMLChunkFileUtilities buildChunkFile:]
  +[PMLChunkFileUtilities writeChunkFile:toPath:]
  +[PMLChunkFileUtilities readChunkFile:withClass:context:]
  +[PMLChunkFileUtilities readChunkData:withClass:context:]
  +[PMLChunkFileUtilities numberForInternedChunk:addedToChunks:]


PMLMultiLabelLogisticRegressionModel : NSObject /usr/lib/libSystem.B.dylib <PMLMultiLabelRegressionModelProtocol, PMLMultiLabelClassifierModelProtocol, PMLPlistAndChunksSerializableProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PMLMultiLabelLogisticRegressionModel pyClass]

  // instance methods
  -[PMLMultiLabelLogisticRegressionModel count]
  -[PMLMultiLabelLogisticRegressionModel .cxx_destruct]
  -[PMLMultiLabelLogisticRegressionModel serialize]
  -[PMLMultiLabelLogisticRegressionModel predict:]
  -[PMLMultiLabelLogisticRegressionModel initWithLayer:]
  -[PMLMultiLabelLogisticRegressionModel initWithModels:]
  -[PMLMultiLabelLogisticRegressionModel toPlistWithChunks:]
  -[PMLMultiLabelLogisticRegressionModel initWithPlist:chunks:context:]
  -[PMLMultiLabelLogisticRegressionModel classify:]
  -[PMLMultiLabelLogisticRegressionModel initWithWeightsArray:andIntercept:]
  -[PMLMultiLabelLogisticRegressionModel convertToLayerWithDataType:]


PMLDiffPrivacyNoiseStrategy : NSObject /usr/lib/libSystem.B.dylib <PMLNoiseStrategy>
 @property  {?=ff} noiseScaleFactors
 @property  float minimumMagnitude
 @property  long long noiseMechanism
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PMLDiffPrivacyNoiseStrategy gaussianNoiseWithScaleFactor:minimumMagnitude:seed:]

  // instance methods
  -[PMLDiffPrivacyNoiseStrategy toPlistWithChunks:]
  -[PMLDiffPrivacyNoiseStrategy initWithPlist:chunks:context:]
  -[PMLDiffPrivacyNoiseStrategy addNoiseToSparseVector:]
  -[PMLDiffPrivacyNoiseStrategy addNoiseToSparseMatrix:]
  -[PMLDiffPrivacyNoiseStrategy scaleAndAddNoiseToDenseVector:usingNorm:scaleFactor:]
  -[PMLDiffPrivacyNoiseStrategy initWithMaxIterationCount:noiseScaleFactors:minimumMagnitude:seed:noiseMechanism:inplaceNorm:]
  -[PMLDiffPrivacyNoiseStrategy initWithMaxIterationCount:noiseScaleFactors:minimumMagnitude:noiseMechanism:inplaceNorm:]
  -[PMLDiffPrivacyNoiseStrategy samplerWithScaleFactorFor:usingNorm:]
  -[PMLDiffPrivacyNoiseStrategy createDefaultSampler]
  -[PMLDiffPrivacyNoiseStrategy createSamplerByName:]
  -[PMLDiffPrivacyNoiseStrategy noiseScaleFactors]
  -[PMLDiffPrivacyNoiseStrategy setNoiseScaleFactors:]
  -[PMLDiffPrivacyNoiseStrategy minimumMagnitude]
  -[PMLDiffPrivacyNoiseStrategy setMinimumMagnitude:]
  -[PMLDiffPrivacyNoiseStrategy noiseMechanism]
  -[PMLDiffPrivacyNoiseStrategy setNoiseMechanism:]


PMLClassificationEvaluationMetrics : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[PMLClassificationEvaluationMetrics precision:predictions:predicate:]
  +[PMLClassificationEvaluationMetrics recall:predictions:predicate:]
  +[PMLClassificationEvaluationMetrics f1Score:predictions:predicate:]
  +[PMLClassificationEvaluationMetrics truePositives:predictions:predicate:]
  +[PMLClassificationEvaluationMetrics falsePositives:predictions:predicate:]
  +[PMLClassificationEvaluationMetrics trueNegatives:predictions:predicate:]
  +[PMLClassificationEvaluationMetrics falseNegatives:predictions:predicate:]
  +[PMLClassificationEvaluationMetrics addScoresForOutcomes:predictions:predicate:metrics:]
  +[PMLClassificationEvaluationMetrics roundFloatToSigFigs:sigFigs:]
  +[PMLClassificationEvaluationMetrics setReportSamplingRate:]


PMLModelLearningRates : NSObject /usr/lib/libSystem.B.dylib <PMLDictionarySerializableProtocol, PMLPlistAndChunksSerializableProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PMLModelLearningRates modelLearningRatesFromFloats:]

  // instance methods
  -[PMLModelLearningRates init]
  -[PMLModelLearningRates length]
  -[PMLModelLearningRates values]
  -[PMLModelLearningRates .cxx_destruct]
  -[PMLModelLearningRates toDictionary]
  -[PMLModelLearningRates initFromDictionary:]
  -[PMLModelLearningRates toPlistWithChunks:]
  -[PMLModelLearningRates initWithPlist:chunks:context:]
  -[PMLModelLearningRates migrateDenseDoubleVectorToDenseFloatVector:]
  -[PMLModelLearningRates initModelLearningRatesFromFloats:]


AWDProactiveModelFittingModelInfo : PBCodable /System/Library/PrivateFrameworks/WirelessDiagnostics.framework/WirelessDiagnostics <NSCopying>
 @property  BOOL hasName
 @property  NSString *name
 @property  BOOL hasVersion
 @property  NSString *version
 @property  BOOL hasLocale
 @property  NSString *locale

  // class methods
  +[AWDProactiveModelFittingModelInfo modelInfoFromSessionDescriptor:]
  +[AWDProactiveModelFittingModelInfo modelInfoFromPlanId:]

  // instance methods
  -[AWDProactiveModelFittingModelInfo isEqual:]
  -[AWDProactiveModelFittingModelInfo name]
  -[AWDProactiveModelFittingModelInfo copyWithZone:]
  -[AWDProactiveModelFittingModelInfo setLocale:]
  -[AWDProactiveModelFittingModelInfo .cxx_destruct]
  -[AWDProactiveModelFittingModelInfo locale]
  -[AWDProactiveModelFittingModelInfo setName:]
  -[AWDProactiveModelFittingModelInfo version]
  -[AWDProactiveModelFittingModelInfo dictionaryRepresentation]
  -[AWDProactiveModelFittingModelInfo setVersion:]
  -[AWDProactiveModelFittingModelInfo writeTo:]
  -[AWDProactiveModelFittingModelInfo mergeFrom:]
  -[AWDProactiveModelFittingModelInfo readFrom:]
  -[AWDProactiveModelFittingModelInfo copyTo:]
  -[AWDProactiveModelFittingModelInfo hasName]
  -[AWDProactiveModelFittingModelInfo hasVersion]
  -[AWDProactiveModelFittingModelInfo hasLocale]


PMLAWDEvaluationTrackerMock : PMLProtoBufTracker
 @property  NSArray *trackedEvaluations

  // class methods
  +[PMLAWDEvaluationTrackerMock mockTracker]
  +[PMLAWDEvaluationTrackerMock mockTrackerForPlanId:]

  // instance methods
  -[PMLAWDEvaluationTrackerMock .cxx_destruct]
  -[PMLAWDEvaluationTrackerMock initWithModel:]
  -[PMLAWDEvaluationTrackerMock clearTrackedMessages]
  -[PMLAWDEvaluationTrackerMock initWithAdapter:modelInfo:]
  -[PMLAWDEvaluationTrackerMock trackedEvaluations]


PMLTrainingDatabaseMigrations : NSObject /usr/lib/libSystem.B.dylib
 @property  NSDictionary *migrations
 @property  unsigned int maxVersion

  // class methods
  +[PMLTrainingDatabaseMigrations skipFromZeroSchema:]
  +[PMLTrainingDatabaseMigrations mockMigrationsByAddingQueries:]

  // instance methods
  -[PMLTrainingDatabaseMigrations init]
  -[PMLTrainingDatabaseMigrations .cxx_destruct]
  -[PMLTrainingDatabaseMigrations migrations]
  -[PMLTrainingDatabaseMigrations maxVersion]
  -[PMLTrainingDatabaseMigrations initWithMigrations:]


PMLDenseVector : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSMutableCopying>
 @property  r^f ptr
 @property  unsigned long count
 @property  NSData *data

  // class methods
  +[PMLDenseVector denseVectorFromNumbers:]

  // instance methods
  -[PMLDenseVector init]
  -[PMLDenseVector copyWithZone:]
  -[PMLDenseVector mutableCopyWithZone:]
  -[PMLDenseVector count]
  -[PMLDenseVector initWithData:]
  -[PMLDenseVector .cxx_destruct]
  -[PMLDenseVector data]
  -[PMLDenseVector initWithCount:]
  -[PMLDenseVector ptr]
  -[PMLDenseVector density]
  -[PMLDenseVector maxValue]
  -[PMLDenseVector minValue]
  -[PMLDenseVector enumerateValuesWithBlock:]
  -[PMLDenseVector valueAt:]
  -[PMLDenseVector initWithFloats:count:]
  -[PMLDenseVector initWithFloatsNoCopy:count:freeWhenDone:]
  -[PMLDenseVector initWithFloatsNoCopy:count:deallocator:]
  -[PMLDenseVector sliceFrom:to:]
  -[PMLDenseVector vecByAppendingVec:]
  -[PMLDenseVector l1norm]
  -[PMLDenseVector l2norm]
  -[PMLDenseVector enumerateNonZeroValuesWithBlock:]


PMLMutableDenseVector : PMLDenseVector <NSCopying, NSMutableCopying>
 @property  ^f mutablePtr
 @property  NSMutableData *mutableData

  // instance methods
  -[PMLMutableDenseVector copyWithZone:]
  -[PMLMutableDenseVector mutableCopyWithZone:]
  -[PMLMutableDenseVector .cxx_destruct]
  -[PMLMutableDenseVector initWithMutableData:]
  -[PMLMutableDenseVector mutableData]
  -[PMLMutableDenseVector append:]
  -[PMLMutableDenseVector mutablePtr]
  -[PMLMutableDenseVector append:count:]
  -[PMLMutableDenseVector processValuesInPlaceWithBlock:]
  -[PMLMutableDenseVector scaleInPlaceWithInversedFactor:]


AWDProactiveModelFittingEvalMetrics : PBCodable /System/Library/PrivateFrameworks/WirelessDiagnostics.framework/WirelessDiagnostics <NSCopying>
 @property  BOOL hasRmse
 @property  float rmse
 @property  BOOL hasF1
 @property  float f1
 @property  BOOL hasTruePositives
 @property  unsigned long truePositives
 @property  BOOL hasTrueNegatives
 @property  unsigned long trueNegatives
 @property  BOOL hasFalsePositives
 @property  unsigned long falsePositives
 @property  BOOL hasFalseNegatives
 @property  unsigned long falseNegatives
 @property  unsigned long positiveScoresCount
 @property  ^f positiveScores
 @property  unsigned long negativeScoresCount
 @property  ^f negativeScores
 @property  BOOL hasSecsToExecute
 @property  float secsToExecute

  // class methods
  +[AWDProactiveModelFittingEvalMetrics evalMetricsWithRmse:f1:]
  +[AWDProactiveModelFittingEvalMetrics evalMetricsWithRmse:f1:truePositives:trueNegatives:falsePositives:falseNegatives:]

  // instance methods
  -[AWDProactiveModelFittingEvalMetrics dealloc]
  -[AWDProactiveModelFittingEvalMetrics isEqual:]
  -[AWDProactiveModelFittingEvalMetrics copyWithZone:]
  -[AWDProactiveModelFittingEvalMetrics dictionaryRepresentation]
  -[AWDProactiveModelFittingEvalMetrics writeTo:]
  -[AWDProactiveModelFittingEvalMetrics mergeFrom:]
  -[AWDProactiveModelFittingEvalMetrics readFrom:]
  -[AWDProactiveModelFittingEvalMetrics copyTo:]
  -[AWDProactiveModelFittingEvalMetrics toDictionary]
  -[AWDProactiveModelFittingEvalMetrics setRmse:]
  -[AWDProactiveModelFittingEvalMetrics setHasRmse:]
  -[AWDProactiveModelFittingEvalMetrics hasRmse]
  -[AWDProactiveModelFittingEvalMetrics setF1:]
  -[AWDProactiveModelFittingEvalMetrics setHasF1:]
  -[AWDProactiveModelFittingEvalMetrics hasF1]
  -[AWDProactiveModelFittingEvalMetrics setTruePositives:]
  -[AWDProactiveModelFittingEvalMetrics setHasTruePositives:]
  -[AWDProactiveModelFittingEvalMetrics hasTruePositives]
  -[AWDProactiveModelFittingEvalMetrics setTrueNegatives:]
  -[AWDProactiveModelFittingEvalMetrics setHasTrueNegatives:]
  -[AWDProactiveModelFittingEvalMetrics hasTrueNegatives]
  -[AWDProactiveModelFittingEvalMetrics setFalsePositives:]
  -[AWDProactiveModelFittingEvalMetrics setHasFalsePositives:]
  -[AWDProactiveModelFittingEvalMetrics hasFalsePositives]
  -[AWDProactiveModelFittingEvalMetrics setFalseNegatives:]
  -[AWDProactiveModelFittingEvalMetrics setHasFalseNegatives:]
  -[AWDProactiveModelFittingEvalMetrics hasFalseNegatives]
  -[AWDProactiveModelFittingEvalMetrics positiveScoresCount]
  -[AWDProactiveModelFittingEvalMetrics positiveScores]
  -[AWDProactiveModelFittingEvalMetrics clearPositiveScores]
  -[AWDProactiveModelFittingEvalMetrics addPositiveScores:]
  -[AWDProactiveModelFittingEvalMetrics positiveScoresAtIndex:]
  -[AWDProactiveModelFittingEvalMetrics setPositiveScores:count:]
  -[AWDProactiveModelFittingEvalMetrics negativeScoresCount]
  -[AWDProactiveModelFittingEvalMetrics negativeScores]
  -[AWDProactiveModelFittingEvalMetrics clearNegativeScores]
  -[AWDProactiveModelFittingEvalMetrics addNegativeScores:]
  -[AWDProactiveModelFittingEvalMetrics negativeScoresAtIndex:]
  -[AWDProactiveModelFittingEvalMetrics setNegativeScores:count:]
  -[AWDProactiveModelFittingEvalMetrics setSecsToExecute:]
  -[AWDProactiveModelFittingEvalMetrics setHasSecsToExecute:]
  -[AWDProactiveModelFittingEvalMetrics hasSecsToExecute]
  -[AWDProactiveModelFittingEvalMetrics rmse]
  -[AWDProactiveModelFittingEvalMetrics f1]
  -[AWDProactiveModelFittingEvalMetrics truePositives]
  -[AWDProactiveModelFittingEvalMetrics trueNegatives]
  -[AWDProactiveModelFittingEvalMetrics falsePositives]
  -[AWDProactiveModelFittingEvalMetrics falseNegatives]
  -[AWDProactiveModelFittingEvalMetrics secsToExecute]


PMLSeparatedDPNoiseStrategy : NSObject /usr/lib/libSystem.B.dylib <PMLNoiseStrategy>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PMLSeparatedDPNoiseStrategy getPFLIdentifier:]

  // instance methods
  -[PMLSeparatedDPNoiseStrategy init]
  -[PMLSeparatedDPNoiseStrategy toPlistWithChunks:]
  -[PMLSeparatedDPNoiseStrategy initWithPlist:chunks:context:]
  -[PMLSeparatedDPNoiseStrategy addNoiseToSparseVector:]
  -[PMLSeparatedDPNoiseStrategy addNoiseToSparseMatrix:]
  -[PMLSeparatedDPNoiseStrategy scaleAndAddNoiseToDenseVector:usingNorm:scaleFactor:]
  -[PMLSeparatedDPNoiseStrategy initWithPFLIdentifier:]


PMLTrainingMock : NSObject /usr/lib/libSystem.B.dylib <PMLTrainingProtocol>
 @property  NSArray *collectedSessions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PMLTrainingMock init]
  -[PMLTrainingMock .cxx_destruct]
  -[PMLTrainingMock deleteSessionsWithBundleID:]
  -[PMLTrainingMock deleteSessionsWithDomainIdentifiers:bundleID:]
  -[PMLTrainingMock deleteSessionsWithIdentifiers:bundleID:]
  -[PMLTrainingMock planReceivedWithPayload:error:]
  -[PMLTrainingMock setSourceRecoverer:]
  -[PMLTrainingMock trimDb]
  -[PMLTrainingMock addSessionWithCovariates:source:label:sessionDescriptor:spotlightReference:isInternal:]
  -[PMLTrainingMock lastTrainingFeaturizationForModelName:andLocale:]
  -[PMLTrainingMock updateSessionsAndLabelForModel:block:]
  -[PMLTrainingMock updateLastTrainingFeaturizationForModel:andData:]
  -[PMLTrainingMock addSessionWithCovariates:label:sessionDescriptor:spotlightReference:isInternal:]
  -[PMLTrainingMock clearCollectedSessions]
  -[PMLTrainingMock collectedSessions]


PMLSparseMatrix : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned long numberOfRows
 @property  unsigned long numberOfColumns
 @property  BOOL isSymmetric
 @property  ^{sparse_m_float=} matrix

  // class methods
  +[PMLSparseMatrix sparseMatrixWithNumberOfRows:numberOfColumns:]
  +[PMLSparseMatrix sparseMatrixFromNumbers:]

  // instance methods
  -[PMLSparseMatrix init]
  -[PMLSparseMatrix dealloc]
  -[PMLSparseMatrix matrix]
  -[PMLSparseMatrix setMatrix:]
  -[PMLSparseMatrix numberOfColumns]
  -[PMLSparseMatrix numberOfRows]
  -[PMLSparseMatrix maxValue]
  -[PMLSparseMatrix minValue]
  -[PMLSparseMatrix enumerateNonZeroValuesWithBlock:]
  -[PMLSparseMatrix initWithSparseMatrix:]
  -[PMLSparseMatrix setIsSymmetric:]
  -[PMLSparseMatrix valueAtRow:column:]
  -[PMLSparseMatrix _enumerateSparseRowsWithBlock:]
  -[PMLSparseMatrix enumerateNonZeroValuesForRow:withBlock:]
  -[PMLSparseMatrix matrixWithConstantColumn]
  -[PMLSparseMatrix isSymmetric]


PMLAWDSessionTracker : PMLAWDBaseTracker
  // class methods
  +[PMLAWDSessionTracker trackerForModelName:modelVersion:]

  // instance methods
  -[PMLAWDSessionTracker trackSessionWithCovariates:label:locale:]
  -[PMLAWDSessionTracker trackSessionWithCovariates:label:locale:supervisionType:]


AWDProactiveModelFittingSession : PBCodable /System/Library/PrivateFrameworks/WirelessDiagnostics.framework/WirelessDiagnostics <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasModelInfo
 @property  AWDProactiveModelFittingModelInfo *modelInfo
 @property  BOOL hasLabel
 @property  unsigned long label
 @property  BOOL hasSparseFloatFeatures
 @property  AWDProactiveModelFittingSparseFloatVector *sparseFloatFeatures
 @property  BOOL hasSupervisionType
 @property  unsigned long supervisionType
 @property  BOOL hasConfidenceScore
 @property  float confidenceScore

  // instance methods
  -[AWDProactiveModelFittingSession isEqual:]
  -[AWDProactiveModelFittingSession copyWithZone:]
  -[AWDProactiveModelFittingSession .cxx_destruct]
  -[AWDProactiveModelFittingSession dictionaryRepresentation]
  -[AWDProactiveModelFittingSession timestamp]
  -[AWDProactiveModelFittingSession hasTimestamp]
  -[AWDProactiveModelFittingSession setTimestamp:]
  -[AWDProactiveModelFittingSession writeTo:]
  -[AWDProactiveModelFittingSession setLabel:]
  -[AWDProactiveModelFittingSession label]
  -[AWDProactiveModelFittingSession mergeFrom:]
  -[AWDProactiveModelFittingSession readFrom:]
  -[AWDProactiveModelFittingSession copyTo:]
  -[AWDProactiveModelFittingSession confidenceScore]
  -[AWDProactiveModelFittingSession hasLabel]
  -[AWDProactiveModelFittingSession setHasLabel:]
  -[AWDProactiveModelFittingSession setHasTimestamp:]
  -[AWDProactiveModelFittingSession setConfidenceScore:]
  -[AWDProactiveModelFittingSession setHasConfidenceScore:]
  -[AWDProactiveModelFittingSession hasConfidenceScore]
  -[AWDProactiveModelFittingSession modelInfo]
  -[AWDProactiveModelFittingSession hasModelInfo]
  -[AWDProactiveModelFittingSession setModelInfo:]
  -[AWDProactiveModelFittingSession hasSparseFloatFeatures]
  -[AWDProactiveModelFittingSession sparseFloatFeatures]
  -[AWDProactiveModelFittingSession setSparseFloatFeatures:]
  -[AWDProactiveModelFittingSession setSupervisionType:]
  -[AWDProactiveModelFittingSession setHasSupervisionType:]
  -[AWDProactiveModelFittingSession hasSupervisionType]
  -[AWDProactiveModelFittingSession supervisionType]


PMLPlanWrapper : NSObject /usr/lib/libSystem.B.dylib <PMLPlistAndChunksSerializableProtocol>
 @property  <PMLPlanProtocol> *plan
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PMLPlanWrapper init]
  -[PMLPlanWrapper .cxx_destruct]
  -[PMLPlanWrapper plan]
  -[PMLPlanWrapper toPlistWithChunks:]
  -[PMLPlanWrapper initWithPlist:chunks:context:]
  -[PMLPlanWrapper initWithPlan:]


PMLPlanSerialization : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[PMLPlanSerialization planFromData:withStore:]
  +[PMLPlanSerialization planFromData:withArgs:]
  +[PMLPlanSerialization serializePlan:]

  // instance methods
  -[PMLPlanSerialization init]


PMLTrackerAWDAdapter : NSObject /usr/lib/libSystem.B.dylib <PMLTrackerAdapterProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PMLTrackerAWDAdapter postMetricId:message:]


PMLNoNoiseStrategy : NSObject /usr/lib/libSystem.B.dylib <PMLNoiseStrategy>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PMLNoNoiseStrategy toPlistWithChunks:]
  -[PMLNoNoiseStrategy initWithPlist:chunks:context:]
  -[PMLNoNoiseStrategy addNoiseToSparseVector:]
  -[PMLNoNoiseStrategy addNoiseToSparseMatrix:]
  -[PMLNoNoiseStrategy scaleAndAddNoiseToDenseVector:usingNorm:scaleFactor:]


AWDProactiveModelFittingLabelSupportPair : PBCodable /System/Library/PrivateFrameworks/WirelessDiagnostics.framework/WirelessDiagnostics <NSCopying>
 @property  BOOL hasLabel
 @property  unsigned long label
 @property  BOOL hasSupport
 @property  float support

  // instance methods
  -[AWDProactiveModelFittingLabelSupportPair isEqual:]
  -[AWDProactiveModelFittingLabelSupportPair copyWithZone:]
  -[AWDProactiveModelFittingLabelSupportPair dictionaryRepresentation]
  -[AWDProactiveModelFittingLabelSupportPair writeTo:]
  -[AWDProactiveModelFittingLabelSupportPair setLabel:]
  -[AWDProactiveModelFittingLabelSupportPair label]
  -[AWDProactiveModelFittingLabelSupportPair mergeFrom:]
  -[AWDProactiveModelFittingLabelSupportPair readFrom:]
  -[AWDProactiveModelFittingLabelSupportPair copyTo:]
  -[AWDProactiveModelFittingLabelSupportPair hasLabel]
  -[AWDProactiveModelFittingLabelSupportPair setHasLabel:]
  -[AWDProactiveModelFittingLabelSupportPair support]
  -[AWDProactiveModelFittingLabelSupportPair setSupport:]
  -[AWDProactiveModelFittingLabelSupportPair setHasSupport:]
  -[AWDProactiveModelFittingLabelSupportPair hasSupport]


PMLLogisticRegressionModel : NSObject /usr/lib/libSystem.B.dylib <PMLRegressionModelProtocol, PMLClassifierModelProtocol, PMLPlistAndChunksSerializableProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PMLLogisticRegressionModel solverWithWeights:andIntercept:]
  +[PMLLogisticRegressionModel solverWithWeights:]
  +[PMLLogisticRegressionModel solverWithWeights:andIntercept:learningRate:minIterations:stoppingThreshold:]
  +[PMLLogisticRegressionModel withWeights:]
  +[PMLLogisticRegressionModel withWeights:andIntercept:]

  // instance methods
  -[PMLLogisticRegressionModel .cxx_destruct]
  -[PMLLogisticRegressionModel weights]
  -[PMLLogisticRegressionModel serialize]
  -[PMLLogisticRegressionModel predict:]
  -[PMLLogisticRegressionModel toPlistWithChunks:]
  -[PMLLogisticRegressionModel initWithPlist:chunks:context:]
  -[PMLLogisticRegressionModel classify:]
  -[PMLLogisticRegressionModel initWithSolver:]


PMLGaussianSampler : NSObject /usr/lib/libSystem.B.dylib <PMLSampler>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PMLGaussianSampler sample]
  -[PMLGaussianSampler initWithMagnitude:]
  -[PMLGaussianSampler initWithMagnitude:seed:]


PMLModelRegressor : NSObject /usr/lib/libSystem.B.dylib <PMLDictionarySerializableProtocol, PMLPlistAndChunksSerializableProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  int count

  // class methods
  +[PMLModelRegressor modelRegressorFromFloat:]
  +[PMLModelRegressor modelRegressorFromFloats:]
  +[PMLModelRegressor regressorVectorFrom:]

  // instance methods
  -[PMLModelRegressor init]
  -[PMLModelRegressor count]
  -[PMLModelRegressor values]
  -[PMLModelRegressor .cxx_destruct]
  -[PMLModelRegressor toDictionary]
  -[PMLModelRegressor initFromDictionary:]
  -[PMLModelRegressor toPlistWithChunks:]
  -[PMLModelRegressor initWithPlist:chunks:context:]
  -[PMLModelRegressor migrateDenseDoubleVectorToDenseFloatVector:]
  -[PMLModelRegressor denseVector]
  -[PMLModelRegressor initModelRegressorFromFloats:]
  -[PMLModelRegressor initWithRegressorFromFloat:]
  -[PMLModelRegressor regressorFor:]
  -[PMLModelRegressor inverseValues]


PMLHashingVectorizer : NSObject /usr/lib/libSystem.B.dylib <PMLTransformerProtocol>
 @property  BOOL normalize
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PMLHashingVectorizer withBucketSize:andNgrams:]
  +[PMLHashingVectorizer withBucketSize:characterNGramRange:tokenNGramRange:shouldNormalizeTokens:shouldNormalizeCharacters:localeForNonwordTokens:tokenizeNewlines:withIntercept:]
  +[PMLHashingVectorizer withBucketSize:ngrams:localeForNonwordTokens:tokenizeNewlines:andIntercept:]
  +[PMLHashingVectorizer withBucketSize:characterNGramRange:tokenNGramRange:shouldNormalizeTokens:shouldNormalizeCharacters:withIntercept:]

  // instance methods
  -[PMLHashingVectorizer init]
  -[PMLHashingVectorizer isEqual:]
  -[PMLHashingVectorizer .cxx_destruct]
  -[PMLHashingVectorizer normalize]
  -[PMLHashingVectorizer transform:]
  -[PMLHashingVectorizer toPlistWithChunks:]
  -[PMLHashingVectorizer initWithPlist:chunks:context:]
  -[PMLHashingVectorizer initWithBucketSize:ngrams:localeForNonwordTokens:tokenizeNewlines:andIntercept:]
  -[PMLHashingVectorizer initWithBucketSize:characterNGramRange:tokenNGramRange:shouldNormalizeTokens:shouldNormalizeCharacters:localeForNonwordTokens:tokenizeNewlines:withIntercept:]
  -[PMLHashingVectorizer isEqualToHashingVectorizer:]
  -[PMLHashingVectorizer setNormalize:]


PMLFidesTracker : NSObject /usr/lib/libSystem.B.dylib <PMLLogRegTrackerProtocol, PMLEvaluationTrackerProtocol, PMLMultiLabelEvaluationTrackerProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PMLFidesTracker init]
  -[PMLFidesTracker .cxx_destruct]
  -[PMLFidesTracker toPlistWithChunks:]
  -[PMLFidesTracker initWithPlist:chunks:context:]
  -[PMLFidesTracker trackPrecisionAtK:]
  -[PMLFidesTracker trackPrecisionAtK:minibatchStats:]
  -[PMLFidesTracker trackEvaluationMetrics:minibatchStats:]
  -[PMLFidesTracker trackWeights:scaleFactor:minibatchStats:evaluationMetrics:]
  -[PMLFidesTracker trackGradient:scaleFactor:minibatchStats:evaluationMetrics:serverIteration:]
  -[PMLFidesTracker initWithPlanId:]


PMLAWDSessionTrackerMock : PMLAWDSessionTracker
 @property  NSArray *trackedSessions

  // instance methods
  -[PMLAWDSessionTrackerMock .cxx_destruct]
  -[PMLAWDSessionTrackerMock initWithModel:]
  -[PMLAWDSessionTrackerMock postMetricId:message:]
  -[PMLAWDSessionTrackerMock clearTrackedSessions]
  -[PMLAWDSessionTrackerMock trackedSessions]


PMLDenseMatrix : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned long numberOfRows
 @property  unsigned long numberOfColumns

  // class methods
  +[PMLDenseMatrix denseMatrixFromData:numberOfRows:numberOfColumns:]
  +[PMLDenseMatrix denseMatrixFromNumbers:]

  // instance methods
  -[PMLDenseMatrix values]
  -[PMLDenseMatrix .cxx_destruct]
  -[PMLDenseMatrix numberOfColumns]
  -[PMLDenseMatrix numberOfRows]
  -[PMLDenseMatrix enumerateNonZeroValuesWithBlock:]
  -[PMLDenseMatrix initWithData:numberOfRows:numberOfColumns:]


PMLSessionDescriptor : NSObject /usr/lib/libSystem.B.dylib <NSCopying, PMLPlistAndChunksSerializableProtocol>
 @property  NSString *name
 @property  NSString *version
 @property  float featureVersion
 @property  NSString *locale
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PMLSessionDescriptor descriptorForName:version:locale:]

  // instance methods
  -[PMLSessionDescriptor isEqual:]
  -[PMLSessionDescriptor name]
  -[PMLSessionDescriptor copyWithZone:]
  -[PMLSessionDescriptor .cxx_destruct]
  -[PMLSessionDescriptor locale]
  -[PMLSessionDescriptor version]
  -[PMLSessionDescriptor toPlistWithChunks:]
  -[PMLSessionDescriptor initWithPlist:chunks:context:]
  -[PMLSessionDescriptor featureVersion]
  -[PMLSessionDescriptor initWithName:version:locale:]
  -[PMLSessionDescriptor _parseFeatureVersion:descriptor:]
  -[PMLSessionDescriptor subSessionDescriptorForLabel:]
  -[PMLSessionDescriptor baseSessionDescriptor]
  -[PMLSessionDescriptor isSubSessionDescriptor]
  -[PMLSessionDescriptor subSessionLabel]


PMLSpotlightReference : NSObject /usr/lib/libSystem.B.dylib
 @property  NSArray *itemIdentifiers
 @property  NSString *domainIdentifier
 @property  NSString *bundleIdentifier

  // class methods
  +[PMLSpotlightReference referenceWithBundleId:domainId:itemIds:]

  // instance methods
  -[PMLSpotlightReference domainIdentifier]
  -[PMLSpotlightReference .cxx_destruct]
  -[PMLSpotlightReference bundleIdentifier]
  -[PMLSpotlightReference itemIdentifiers]
  -[PMLSpotlightReference initWithBundleId:domainId:itemIds:]


PMLTraining : NSObject /usr/lib/libSystem.B.dylib <PMLAWDMetricQueryDelegate, PMLTrainingProtocol>
 @property  PMLTrainingStore *store
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PMLTraining sharedSingletonWithDirectory:]

  // instance methods
  -[PMLTraining init]
  -[PMLTraining .cxx_destruct]
  -[PMLTraining store]
  -[PMLTraining deleteSessionsWithBundleID:]
  -[PMLTraining deleteSessionsWithDomainIdentifiers:bundleID:]
  -[PMLTraining deleteSessionsWithIdentifiers:bundleID:]
  -[PMLTraining planReceivedWithPayload:error:]
  -[PMLTraining setSourceRecoverer:]
  -[PMLTraining trimDb]
  -[PMLTraining addSessionWithCovariates:source:label:sessionDescriptor:spotlightReference:isInternal:]
  -[PMLTraining lastTrainingFeaturizationForModelName:andLocale:]
  -[PMLTraining updateSessionsAndLabelForModel:block:]
  -[PMLTraining updateLastTrainingFeaturizationForModel:andData:]
  -[PMLTraining addSessionWithCovariates:label:sessionDescriptor:spotlightReference:isInternal:]
  -[PMLTraining enumerateAvailableSessionsStatsUsingBlock:]
  -[PMLTraining availableSessionsStatsReportedToAWD]
  -[PMLTraining initWithStore:fidesStore:availableSessionsTracker:]
  -[PMLTraining isMultiLabelModel:]
  -[PMLTraining sendSessionStatsToFides]
  -[PMLTraining _sendStatsToFidesForModel:sessionCount:positivesCount:support:]
  -[PMLTraining _sendStatsToFidesForMultiLabelModel:sessionCount:labeledStats:]
  -[PMLTraining _deleteAllSavedRecordsFromFidesStoreSync]


PMLProtoBufTracker : NSObject /usr/lib/libSystem.B.dylib <PMLLogRegTrackerProtocol, PMLLinRegTrackerProtocol, PMLEvaluationTrackerProtocol, PMLMultiLabelEvaluationTrackerProtocol>
 @property  <PMLTrackerAdapterProtocol> *adapter
 @property  AWDProactiveModelFittingModelInfo *modelInfo
 @property  unsigned long quantizationNumberOfBuckets
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PMLProtoBufTracker messageForGradient:scaleFactor:minibatchStats:evaluationMetrics:serverIteration:modelInfo:numberOfBuckets:]
  +[PMLProtoBufTracker messageForWeights:scaleFactor:minibatchStats:evaluationMetrics:modelInfo:numberOfBuckets:]
  +[PMLProtoBufTracker trackerForPlanId:]
  +[PMLProtoBufTracker awdTrackerForPlanId:]
  +[PMLProtoBufTracker parsecTrackerForPlanId:]

  // instance methods
  -[PMLProtoBufTracker init]
  -[PMLProtoBufTracker .cxx_destruct]
  -[PMLProtoBufTracker adapter]
  -[PMLProtoBufTracker modelInfo]
  -[PMLProtoBufTracker toPlistWithChunks:]
  -[PMLProtoBufTracker initWithPlist:chunks:context:]
  -[PMLProtoBufTracker initWithAdapter:modelInfo:]
  -[PMLProtoBufTracker trackPrecisionAtK:]
  -[PMLProtoBufTracker trackPrecisionAtK:minibatchStats:]
  -[PMLProtoBufTracker trackEvaluationMetrics:minibatchStats:]
  -[PMLProtoBufTracker trackWeights:scaleFactor:minibatchStats:evaluationMetrics:]
  -[PMLProtoBufTracker trackGradient:scaleFactor:minibatchStats:evaluationMetrics:serverIteration:]
  -[PMLProtoBufTracker trackObjectiveFeatures:featureMatrix:minibatchSize:support:]
  -[PMLProtoBufTracker initWithAdapter:modelInfo:quantizationBuckets:]
  -[PMLProtoBufTracker quantizationNumberOfBuckets]


PMLNaiveBayesEvaluationPlan : NSObject /usr/lib/libSystem.B.dylib <PMLPlanProtocol>
 @property  PMLTrainingStore *store
 @property  <PMLEvaluationTrackerProtocol> *tracker
 @property  PMLSessionDescriptor *sessionDescriptor
 @property  unsigned long maxSessionsLimit
 @property  NSString *planId
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PMLNaiveBayesEvaluationPlan init]
  -[PMLNaiveBayesEvaluationPlan run]
  -[PMLNaiveBayesEvaluationPlan .cxx_destruct]
  -[PMLNaiveBayesEvaluationPlan store]
  -[PMLNaiveBayesEvaluationPlan tracker]
  -[PMLNaiveBayesEvaluationPlan planId]
  -[PMLNaiveBayesEvaluationPlan toPlistWithChunks:]
  -[PMLNaiveBayesEvaluationPlan initWithPlist:chunks:context:]
  -[PMLNaiveBayesEvaluationPlan sessionDescriptor]
  -[PMLNaiveBayesEvaluationPlan runWhile:didFinish:]
  -[PMLNaiveBayesEvaluationPlan maxSessionsLimit]
  -[PMLNaiveBayesEvaluationPlan loadSessionsWithBlock:]
  -[PMLNaiveBayesEvaluationPlan normalizeRegressor:]
  -[PMLNaiveBayesEvaluationPlan runUntilDoneForTesting]
  -[PMLNaiveBayesEvaluationPlan initWithStore:tracker:planId:sessionDescriptor:sessionsInBatch:probabilities:positiveConditionalProbabilities:negativeConditionalProbabilities:skew:threshold:isMultiLabel:positiveLabel:evaluationLevel:]


PMLMockPlan : NSObject /usr/lib/libSystem.B.dylib <PMLPlanProtocol>
 @property  NSString *planId
 @property  unsigned long version
 @property  BOOL didRun
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PMLMockPlan setLastDeserializedPlanWithId:toPlan:]
  +[PMLMockPlan lastDeserializedPlanWithId:]
  +[PMLMockPlan clearLastDeserializedPlans]
  +[PMLMockPlan lastDeserializedPlansMap]

  // instance methods
  -[PMLMockPlan .cxx_destruct]
  -[PMLMockPlan version]
  -[PMLMockPlan setVersion:]
  -[PMLMockPlan initWithVersion:]
  -[PMLMockPlan planId]
  -[PMLMockPlan toPlistWithChunks:]
  -[PMLMockPlan initWithPlist:chunks:context:]
  -[PMLMockPlan runWhile:didFinish:]
  -[PMLMockPlan initWithPlanId:]
  -[PMLMockPlan initWithPlanId:store:version:returningAfterRunning:]
  -[PMLMockPlan initWithPlanId:version:returningAfterRunning:]
  -[PMLMockPlan initWithPlanId:version:]
  -[PMLMockPlan initWithPlanId:store:]
  -[PMLMockPlan didRun]


AWDProactiveModelFittingQuantizedDenseVector : PBCodable /System/Library/PrivateFrameworks/WirelessDiagnostics.framework/WirelessDiagnostics <NSCopying>
 @property  unsigned long valuesCount
 @property  ^I values
 @property  BOOL hasMinValue
 @property  float minValue
 @property  BOOL hasBucketSize
 @property  float bucketSize

  // class methods
  +[AWDProactiveModelFittingQuantizedDenseVector quantizedDenseVectorFromDenseVector:numberOfBuckets:]

  // instance methods
  -[AWDProactiveModelFittingQuantizedDenseVector dealloc]
  -[AWDProactiveModelFittingQuantizedDenseVector isEqual:]
  -[AWDProactiveModelFittingQuantizedDenseVector copyWithZone:]
  -[AWDProactiveModelFittingQuantizedDenseVector values]
  -[AWDProactiveModelFittingQuantizedDenseVector dictionaryRepresentation]
  -[AWDProactiveModelFittingQuantizedDenseVector writeTo:]
  -[AWDProactiveModelFittingQuantizedDenseVector mergeFrom:]
  -[AWDProactiveModelFittingQuantizedDenseVector readFrom:]
  -[AWDProactiveModelFittingQuantizedDenseVector copyTo:]
  -[AWDProactiveModelFittingQuantizedDenseVector valuesCount]
  -[AWDProactiveModelFittingQuantizedDenseVector clearValues]
  -[AWDProactiveModelFittingQuantizedDenseVector valuesAtIndex:]
  -[AWDProactiveModelFittingQuantizedDenseVector addValues:]
  -[AWDProactiveModelFittingQuantizedDenseVector minValue]
  -[AWDProactiveModelFittingQuantizedDenseVector setMinValue:]
  -[AWDProactiveModelFittingQuantizedDenseVector setValues:count:]
  -[AWDProactiveModelFittingQuantizedDenseVector setHasMinValue:]
  -[AWDProactiveModelFittingQuantizedDenseVector hasMinValue]
  -[AWDProactiveModelFittingQuantizedDenseVector setBucketSize:]
  -[AWDProactiveModelFittingQuantizedDenseVector setHasBucketSize:]
  -[AWDProactiveModelFittingQuantizedDenseVector hasBucketSize]
  -[AWDProactiveModelFittingQuantizedDenseVector bucketSize]
  -[AWDProactiveModelFittingQuantizedDenseVector originalValueAtIndex:]


PMLDataChunk : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
  // class methods
  +[PMLDataChunk dataChunkType]
  +[PMLDataChunk chunkOfType:data:superdata:]
  +[PMLDataChunk chunksFromFileAtPath:]
  +[PMLDataChunk chunksFromData:]
  +[PMLDataChunk serializeChunks:]

  // instance methods
  -[PMLDataChunk init]
  -[PMLDataChunk isEqual:]
  -[PMLDataChunk copyWithZone:]
  -[PMLDataChunk initWithData:]
  -[PMLDataChunk .cxx_destruct]
  -[PMLDataChunk setSuperdata:]


PMLDataChunkRaw : PMLDataChunk
 @property  NSData *data

  // class methods
  +[PMLDataChunkRaw dataChunkType]
  +[PMLDataChunkRaw chunkWithData:]

  // instance methods
  -[PMLDataChunkRaw data]


PMLDataChunkPlist : PMLDataChunk
 @property  id plist

  // class methods
  +[PMLDataChunkPlist dataChunkType]
  +[PMLDataChunkPlist chunkWithPlist:]

  // instance methods
  -[PMLDataChunkPlist .cxx_destruct]
  -[PMLDataChunkPlist plist]


PMLDataChunkDenseFloatVector : PMLDataChunk
 @property  int count
 @property  r^f vector

  // class methods
  +[PMLDataChunkDenseFloatVector dataChunkType]
  +[PMLDataChunkDenseFloatVector chunkWithVector:count:]

  // instance methods
  -[PMLDataChunkDenseFloatVector count]
  -[PMLDataChunkDenseFloatVector vector]
  -[PMLDataChunkDenseFloatVector toVec]


PMLDataChunkDenseDoubleVector : PMLDataChunk
 @property  int count
 @property  r^d vector

  // class methods
  +[PMLDataChunkDenseDoubleVector dataChunkType]
  +[PMLDataChunkDenseDoubleVector chunkWithVector:count:]

  // instance methods
  -[PMLDataChunkDenseDoubleVector count]
  -[PMLDataChunkDenseDoubleVector vector]


PMLAWDLogisticRegTrackerMock : PMLProtoBufTracker
 @property  NSArray *trackedGradients
 @property  NSArray *trackedWeights

  // class methods
  +[PMLAWDLogisticRegTrackerMock mockTracker]
  +[PMLAWDLogisticRegTrackerMock mockTrackerForPlanId:]

  // instance methods
  -[PMLAWDLogisticRegTrackerMock .cxx_destruct]
  -[PMLAWDLogisticRegTrackerMock initWithModel:]
  -[PMLAWDLogisticRegTrackerMock clearTrackedMessages]
  -[PMLAWDLogisticRegTrackerMock initWithAdapter:modelInfo:]
  -[PMLAWDLogisticRegTrackerMock trackedGradients]
  -[PMLAWDLogisticRegTrackerMock trackedWeights]


AWDProactiveModelFittingMinibatchStats : PBCodable /System/Library/PrivateFrameworks/WirelessDiagnostics.framework/WirelessDiagnostics <NSCopying>
 @property  BOOL hasSupport
 @property  float support
 @property  BOOL hasBatchSize
 @property  unsigned long batchSize
 @property  NSMutableArray *perLabelSupports

  // class methods
  +[AWDProactiveModelFittingMinibatchStats perLabelSupportType]
  +[AWDProactiveModelFittingMinibatchStats statsWithSize:support:]
  +[AWDProactiveModelFittingMinibatchStats statsWithPerLabelCounts:]

  // instance methods
  -[AWDProactiveModelFittingMinibatchStats isEqual:]
  -[AWDProactiveModelFittingMinibatchStats copyWithZone:]
  -[AWDProactiveModelFittingMinibatchStats .cxx_destruct]
  -[AWDProactiveModelFittingMinibatchStats dictionaryRepresentation]
  -[AWDProactiveModelFittingMinibatchStats writeTo:]
  -[AWDProactiveModelFittingMinibatchStats mergeFrom:]
  -[AWDProactiveModelFittingMinibatchStats readFrom:]
  -[AWDProactiveModelFittingMinibatchStats copyTo:]
  -[AWDProactiveModelFittingMinibatchStats batchSize]
  -[AWDProactiveModelFittingMinibatchStats setBatchSize:]
  -[AWDProactiveModelFittingMinibatchStats toDictionary]
  -[AWDProactiveModelFittingMinibatchStats support]
  -[AWDProactiveModelFittingMinibatchStats setSupport:]
  -[AWDProactiveModelFittingMinibatchStats setHasSupport:]
  -[AWDProactiveModelFittingMinibatchStats hasSupport]
  -[AWDProactiveModelFittingMinibatchStats setHasBatchSize:]
  -[AWDProactiveModelFittingMinibatchStats hasBatchSize]
  -[AWDProactiveModelFittingMinibatchStats clearPerLabelSupports]
  -[AWDProactiveModelFittingMinibatchStats addPerLabelSupport:]
  -[AWDProactiveModelFittingMinibatchStats perLabelSupportsCount]
  -[AWDProactiveModelFittingMinibatchStats perLabelSupportAtIndex:]
  -[AWDProactiveModelFittingMinibatchStats perLabelSupports]
  -[AWDProactiveModelFittingMinibatchStats setPerLabelSupports:]
  -[AWDProactiveModelFittingMinibatchStats combineWithStats:]
  -[AWDProactiveModelFittingMinibatchStats supportForLabel:]


PMLNaiveBayesModel : NSObject /usr/lib/libSystem.B.dylib <PMLRegressionModelProtocol, PMLClassifierModelProtocol, PMLPlistAndChunksSerializableProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PMLNaiveBayesModel solverWithProbabilities:positiveConditionalProbabilities:negativeConditionalProbabilities:]
  +[PMLNaiveBayesModel withProbabilities:positiveConditionalProbabilities:negativeConditionalProbabilities:]

  // instance methods
  -[PMLNaiveBayesModel .cxx_destruct]
  -[PMLNaiveBayesModel predict:]
  -[PMLNaiveBayesModel toPlistWithChunks:]
  -[PMLNaiveBayesModel initWithPlist:chunks:context:]
  -[PMLNaiveBayesModel classify:]
  -[PMLNaiveBayesModel initWithSolver:]


PMLModelWeights : NSObject /usr/lib/libSystem.B.dylib <PMLDictionarySerializableProtocol, PMLPlistAndChunksSerializableProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  int length

  // class methods
  +[PMLModelWeights modelWeightsFromFloats:]
  +[PMLModelWeights modelWeightsOfLength:rng:]
  +[PMLModelWeights modelWeightsOfLength:]
  +[PMLModelWeights modelWeightsOfLength:rngSeed:]
  +[PMLModelWeights zeroWeightsOfLength:]
  +[PMLModelWeights constWeightsOfLength:value:]
  +[PMLModelWeights weightsFromNumbers:]

  // instance methods
  -[PMLModelWeights length]
  -[PMLModelWeights copy]
  -[PMLModelWeights values]
  -[PMLModelWeights .cxx_destruct]
  -[PMLModelWeights initWithCount:]
  -[PMLModelWeights toDictionary]
  -[PMLModelWeights initFromDictionary:]
  -[PMLModelWeights toPlistWithChunks:]
  -[PMLModelWeights initWithPlist:chunks:context:]
  -[PMLModelWeights migrateDenseDoubleVectorToDenseFloatVector:]
  -[PMLModelWeights sliceFrom:to:]
  -[PMLModelWeights processValuesInPlaceWithBlock:]
  -[PMLModelWeights initModelWeightsFromFloats:]
  -[PMLModelWeights asMutableDenseVector]
  -[PMLModelWeights weightsByAppendingWeights:]


PMLAWDLinearRegTrackerMock : PMLProtoBufTracker
 @property  NSArray *trackedObjectiveFeatures
 @property  NSArray *trackedFeatureMatrices

  // class methods
  +[PMLAWDLinearRegTrackerMock mockTrackerForPlanId:]

  // instance methods
  -[PMLAWDLinearRegTrackerMock .cxx_destruct]
  -[PMLAWDLinearRegTrackerMock initWithModel:]
  -[PMLAWDLinearRegTrackerMock clearTrackedMessages]
  -[PMLAWDLinearRegTrackerMock initWithAdapter:modelInfo:]
  -[PMLAWDLinearRegTrackerMock trackedObjectiveFeatures]
  -[PMLAWDLinearRegTrackerMock trackedFeatureMatrices]


AWDProactiveModelFittingParsecFeedbackEnvelope : PBCodable /System/Library/PrivateFrameworks/WirelessDiagnostics.framework/WirelessDiagnostics <NSCopying>
 @property  BOOL hasEvaluation
 @property  AWDProactiveModelFittingEvaluation *evaluation
 @property  BOOL hasLogRegWeights
 @property  AWDProactiveModelFittingLogRegWeights *logRegWeights
 @property  BOOL hasLogRegGradient
 @property  AWDProactiveModelFittingLogRegGradient *logRegGradient
 @property  BOOL hasLinRegFeatureMatrix
 @property  AWDProactiveModelFittingLinRegFeatureMatrix *linRegFeatureMatrix
 @property  BOOL hasLinRegObjectiveFeatures
 @property  AWDProactiveModelFittingLinRegObjectiveFeatures *linRegObjectiveFeatures

  // instance methods
  -[AWDProactiveModelFittingParsecFeedbackEnvelope isEqual:]
  -[AWDProactiveModelFittingParsecFeedbackEnvelope copyWithZone:]
  -[AWDProactiveModelFittingParsecFeedbackEnvelope .cxx_destruct]
  -[AWDProactiveModelFittingParsecFeedbackEnvelope dictionaryRepresentation]
  -[AWDProactiveModelFittingParsecFeedbackEnvelope writeTo:]
  -[AWDProactiveModelFittingParsecFeedbackEnvelope mergeFrom:]
  -[AWDProactiveModelFittingParsecFeedbackEnvelope readFrom:]
  -[AWDProactiveModelFittingParsecFeedbackEnvelope copyTo:]
  -[AWDProactiveModelFittingParsecFeedbackEnvelope hasEvaluation]
  -[AWDProactiveModelFittingParsecFeedbackEnvelope hasLogRegWeights]
  -[AWDProactiveModelFittingParsecFeedbackEnvelope hasLogRegGradient]
  -[AWDProactiveModelFittingParsecFeedbackEnvelope hasLinRegFeatureMatrix]
  -[AWDProactiveModelFittingParsecFeedbackEnvelope hasLinRegObjectiveFeatures]
  -[AWDProactiveModelFittingParsecFeedbackEnvelope evaluation]
  -[AWDProactiveModelFittingParsecFeedbackEnvelope setEvaluation:]
  -[AWDProactiveModelFittingParsecFeedbackEnvelope logRegWeights]
  -[AWDProactiveModelFittingParsecFeedbackEnvelope setLogRegWeights:]
  -[AWDProactiveModelFittingParsecFeedbackEnvelope logRegGradient]
  -[AWDProactiveModelFittingParsecFeedbackEnvelope setLogRegGradient:]
  -[AWDProactiveModelFittingParsecFeedbackEnvelope linRegFeatureMatrix]
  -[AWDProactiveModelFittingParsecFeedbackEnvelope setLinRegFeatureMatrix:]
  -[AWDProactiveModelFittingParsecFeedbackEnvelope linRegObjectiveFeatures]
  -[AWDProactiveModelFittingParsecFeedbackEnvelope setLinRegObjectiveFeatures:]


PMLTrainingStoredSessionBatch : NSObject /usr/lib/libSystem.B.dylib
 @property  PMLSparseMatrix *covariates
 @property  PMLModelRegressor *outcomes
 @property  unsigned long count

  // instance methods
  -[PMLTrainingStoredSessionBatch count]
  -[PMLTrainingStoredSessionBatch .cxx_destruct]
  -[PMLTrainingStoredSessionBatch outcomes]
  -[PMLTrainingStoredSessionBatch covariates]
  -[PMLTrainingStoredSessionBatch minibatchStats]
  -[PMLTrainingStoredSessionBatch initWithCovariates:outcomes:]
  -[PMLTrainingStoredSessionBatch minibatchStatsForPositiveLabel:]
  -[PMLTrainingStoredSessionBatch minibatchStatsForPositiveLabels:]


PMLTrackerMockAdapter : NSObject /usr/lib/libSystem.B.dylib <PMLTrackerAdapterProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PMLTrackerMockAdapter init]
  -[PMLTrackerMockAdapter .cxx_destruct]
  -[PMLTrackerMockAdapter postMetricId:message:]
  -[PMLTrackerMockAdapter clearAllTrackedMessages]
  -[PMLTrackerMockAdapter trackedMessagesByClass:]


PMLLinearRegressionModel : NSObject /usr/lib/libSystem.B.dylib <PMLRegressionModelProtocol, PMLPlistAndChunksSerializableProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PMLLinearRegressionModel solverWithWeights:andIntercept:]
  +[PMLLinearRegressionModel solverWithWeights:]
  +[PMLLinearRegressionModel withWeights:]

  // instance methods
  -[PMLLinearRegressionModel .cxx_destruct]
  -[PMLLinearRegressionModel predict:]
  -[PMLLinearRegressionModel toPlistWithChunks:]
  -[PMLLinearRegressionModel initWithPlist:chunks:context:]
  -[PMLLinearRegressionModel initWithSolver:]


PMLLogRegEvaluationPlan : NSObject /usr/lib/libSystem.B.dylib <PMLPlanProtocol>
 @property  PMLTrainingStore *store
 @property  <PMLEvaluationTrackerProtocol> *tracker
 @property  PMLSessionDescriptor *sessionDescriptor
 @property  unsigned long maxSessionsLimit
 @property  PMLModelWeights *currentModelWeights
 @property  NSString *planId
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PMLLogRegEvaluationPlan init]
  -[PMLLogRegEvaluationPlan run]
  -[PMLLogRegEvaluationPlan .cxx_destruct]
  -[PMLLogRegEvaluationPlan store]
  -[PMLLogRegEvaluationPlan tracker]
  -[PMLLogRegEvaluationPlan planId]
  -[PMLLogRegEvaluationPlan toPlistWithChunks:]
  -[PMLLogRegEvaluationPlan initWithPlist:chunks:context:]
  -[PMLLogRegEvaluationPlan sessionDescriptor]
  -[PMLLogRegEvaluationPlan runWhile:didFinish:]
  -[PMLLogRegEvaluationPlan maxSessionsLimit]
  -[PMLLogRegEvaluationPlan loadSessionsWithBlock:]
  -[PMLLogRegEvaluationPlan normalizeRegressor:]
  -[PMLLogRegEvaluationPlan runUntilDoneForTesting]
  -[PMLLogRegEvaluationPlan currentModelWeights]
  -[PMLLogRegEvaluationPlan initWithStore:tracker:planId:sessionDescriptor:maxSessionsLimit:sessionsInBatch:currentModelWeights:intercept:skew:threshold:isMultiLabel:positiveLabel:evaluationLevel:]


PMLAWDBaseTracker : NSObject /usr/lib/libSystem.B.dylib
 @property  AWDProactiveModelFittingModelInfo *modelInfo

  // class methods
  +[PMLAWDBaseTracker trackerForPlanId:]
  +[PMLAWDBaseTracker trackerForModelName:modelVersion:modelLocale:]

  // instance methods
  -[PMLAWDBaseTracker .cxx_destruct]
  -[PMLAWDBaseTracker initWithModel:]
  -[PMLAWDBaseTracker modelInfo]
  -[PMLAWDBaseTracker postMetricId:message:]


PMLAWDAvailableSessionsTracker : PMLAWDBaseTracker
  // instance methods
  -[PMLAWDAvailableSessionsTracker init]
  -[PMLAWDAvailableSessionsTracker .cxx_destruct]
  -[PMLAWDAvailableSessionsTracker initWithAWDConnection:]
  -[PMLAWDAvailableSessionsTracker setAWDMetricQueryDelegate:]
  -[PMLAWDAvailableSessionsTracker reportStatsToAWD]


PMLSparseVector : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned long numberOfNonZeroValues
 @property  ^q sparseIndices
 @property  ^f sparseValues
 @property  unsigned long length

  // class methods
  +[PMLSparseVector sparseVectorFromDense:length:]
  +[PMLSparseVector sparseVectorFromDense:]
  +[PMLSparseVector sparseVectorEmptyWithLength:]
  +[PMLSparseVector sparseVectorFromNumbers:]
  +[PMLSparseVector sparseVectorFromNumbers:indices:length:]

  // instance methods
  -[PMLSparseVector init]
  -[PMLSparseVector dealloc]
  -[PMLSparseVector length]
  -[PMLSparseVector valueAtIndex:]
  -[PMLSparseVector maxValue]
  -[PMLSparseVector minValue]
  -[PMLSparseVector numberOfNonZeroValues]
  -[PMLSparseVector l2norm]
  -[PMLSparseVector enumerateNonZeroValuesWithBlock:]
  -[PMLSparseVector scaleInPlaceWithInversedFactor:]
  -[PMLSparseVector initWithLength:numberOfNonZeroValues:indicesData:valuesData:]
  -[PMLSparseVector initWithLength:numberOfNonZeroValues:indices:values:]
  -[PMLSparseVector indicesData]
  -[PMLSparseVector valuesData]
  -[PMLSparseVector indicesAsUInt16Data]
  -[PMLSparseVector quantizedValuesAsUInt8DataWithMin:max:]
  -[PMLSparseVector maxAbsValue]
  -[PMLSparseVector setSparseValues:]
  -[PMLSparseVector setSparseIndices:]
  -[PMLSparseVector processNonZeroValuesInPlaceWithBlock:]
  -[PMLSparseVector vectorWithConstantColumn]
  -[PMLSparseVector setNumberOfNonZeroValues:]
  -[PMLSparseVector sparseIndices]
  -[PMLSparseVector sparseValues]


PMLModelFullyConnectedLayer : NSObject /usr/lib/libSystem.B.dylib <PMLPlistAndChunksSerializableProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PMLModelFullyConnectedLayer _createActivationFilterWithLength:activationType:]

  // instance methods
  -[PMLModelFullyConnectedLayer .cxx_destruct]
  -[PMLModelFullyConnectedLayer weights]
  -[PMLModelFullyConnectedLayer predict:]
  -[PMLModelFullyConnectedLayer toPlistWithChunks:]
  -[PMLModelFullyConnectedLayer initWithPlist:chunks:context:]
  -[PMLModelFullyConnectedLayer initWithInputLen:outputLen:activationType:dataType:dataScale:weights:]
  -[PMLModelFullyConnectedLayer initWithInputLen:outputLen:dataType:values:]
  -[PMLModelFullyConnectedLayer modelCount]
  -[PMLModelFullyConnectedLayer _createFullyConnectedLayerFilter]
  -[PMLModelFullyConnectedLayer _multiplySparseVector:output:]
  -[PMLModelFullyConnectedLayer predictWithDenseVector:]
  -[PMLModelFullyConnectedLayer batchPredictWithDenseMatrix:]


AWDProactiveModelFittingPrecisionAtKPair : PBCodable /System/Library/PrivateFrameworks/WirelessDiagnostics.framework/WirelessDiagnostics <NSCopying>
 @property  BOOL hasK
 @property  unsigned long k
 @property  BOOL hasPrecision
 @property  float precision

  // instance methods
  -[AWDProactiveModelFittingPrecisionAtKPair isEqual:]
  -[AWDProactiveModelFittingPrecisionAtKPair copyWithZone:]
  -[AWDProactiveModelFittingPrecisionAtKPair dictionaryRepresentation]
  -[AWDProactiveModelFittingPrecisionAtKPair writeTo:]
  -[AWDProactiveModelFittingPrecisionAtKPair mergeFrom:]
  -[AWDProactiveModelFittingPrecisionAtKPair readFrom:]
  -[AWDProactiveModelFittingPrecisionAtKPair copyTo:]
  -[AWDProactiveModelFittingPrecisionAtKPair precision]
  -[AWDProactiveModelFittingPrecisionAtKPair setPrecision:]
  -[AWDProactiveModelFittingPrecisionAtKPair k]
  -[AWDProactiveModelFittingPrecisionAtKPair setK:]
  -[AWDProactiveModelFittingPrecisionAtKPair setHasK:]
  -[AWDProactiveModelFittingPrecisionAtKPair hasK]
  -[AWDProactiveModelFittingPrecisionAtKPair setHasPrecision:]
  -[AWDProactiveModelFittingPrecisionAtKPair hasPrecision]


PMLPlistClassWrapper : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[PMLPlistClassWrapper .cxx_destruct]
  -[PMLPlistClassWrapper readObjectWithPlist:chunks:context:]
  -[PMLPlistClassWrapper initWithClassNameKey:]
  -[PMLPlistClassWrapper writeToPlistWithObject:andChunks:]
  -[PMLPlistClassWrapper readObjectWithData:chunks:context:]
  -[PMLPlistClassWrapper writeToDataWithObject:andChunks:]


PMLPassThroughTracker : NSObject /usr/lib/libSystem.B.dylib <PMLLogRegTrackerProtocol, PMLEvaluationTrackerProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PMLPassThroughTracker .cxx_destruct]
  -[PMLPassThroughTracker toPlistWithChunks:]
  -[PMLPassThroughTracker initWithPlist:chunks:context:]
  -[PMLPassThroughTracker trackEvaluationMetrics:minibatchStats:]
  -[PMLPassThroughTracker trackWeights:scaleFactor:minibatchStats:evaluationMetrics:]
  -[PMLPassThroughTracker trackGradient:scaleFactor:minibatchStats:evaluationMetrics:serverIteration:]
  -[PMLPassThroughTracker initWithPlanId:numberOfBuckets:]


AWDProactiveModelFittingLogRegGradient : PBCodable /System/Library/PrivateFrameworks/WirelessDiagnostics.framework/WirelessDiagnostics <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasModelInfo
 @property  AWDProactiveModelFittingModelInfo *modelInfo
 @property  BOOL hasSparseFloatGradient
 @property  AWDProactiveModelFittingSparseFloatVector *sparseFloatGradient
 @property  BOOL hasMinibatchStats
 @property  AWDProactiveModelFittingMinibatchStats *minibatchStats
 @property  BOOL hasEvaluationMetrics
 @property  AWDProactiveModelFittingEvalMetrics *evaluationMetrics
 @property  BOOL hasIteration
 @property  unsigned long iteration
 @property  BOOL hasSparseQuantizedGradient
 @property  AWDProactiveModelFittingQuantizedSparseVector *sparseQuantizedGradient
 @property  BOOL hasGradientScaleFactor
 @property  float gradientScaleFactor
 @property  BOOL hasGradientL2norm
 @property  float gradientL2norm
 @property  BOOL hasDenseQuantizedGradient
 @property  AWDProactiveModelFittingQuantizedDenseVector *denseQuantizedGradient

  // instance methods
  -[AWDProactiveModelFittingLogRegGradient isEqual:]
  -[AWDProactiveModelFittingLogRegGradient copyWithZone:]
  -[AWDProactiveModelFittingLogRegGradient .cxx_destruct]
  -[AWDProactiveModelFittingLogRegGradient dictionaryRepresentation]
  -[AWDProactiveModelFittingLogRegGradient timestamp]
  -[AWDProactiveModelFittingLogRegGradient hasTimestamp]
  -[AWDProactiveModelFittingLogRegGradient setTimestamp:]
  -[AWDProactiveModelFittingLogRegGradient writeTo:]
  -[AWDProactiveModelFittingLogRegGradient mergeFrom:]
  -[AWDProactiveModelFittingLogRegGradient readFrom:]
  -[AWDProactiveModelFittingLogRegGradient copyTo:]
  -[AWDProactiveModelFittingLogRegGradient setHasTimestamp:]
  -[AWDProactiveModelFittingLogRegGradient modelInfo]
  -[AWDProactiveModelFittingLogRegGradient setIteration:]
  -[AWDProactiveModelFittingLogRegGradient setHasIteration:]
  -[AWDProactiveModelFittingLogRegGradient hasIteration]
  -[AWDProactiveModelFittingLogRegGradient iteration]
  -[AWDProactiveModelFittingLogRegGradient hasModelInfo]
  -[AWDProactiveModelFittingLogRegGradient hasMinibatchStats]
  -[AWDProactiveModelFittingLogRegGradient hasEvaluationMetrics]
  -[AWDProactiveModelFittingLogRegGradient setModelInfo:]
  -[AWDProactiveModelFittingLogRegGradient minibatchStats]
  -[AWDProactiveModelFittingLogRegGradient setMinibatchStats:]
  -[AWDProactiveModelFittingLogRegGradient evaluationMetrics]
  -[AWDProactiveModelFittingLogRegGradient setEvaluationMetrics:]
  -[AWDProactiveModelFittingLogRegGradient hasGradient]
  -[AWDProactiveModelFittingLogRegGradient gradientValueAtIndex:]
  -[AWDProactiveModelFittingLogRegGradient gradientLength]
  -[AWDProactiveModelFittingLogRegGradient hasSparseFloatGradient]
  -[AWDProactiveModelFittingLogRegGradient hasSparseQuantizedGradient]
  -[AWDProactiveModelFittingLogRegGradient setGradientScaleFactor:]
  -[AWDProactiveModelFittingLogRegGradient setHasGradientScaleFactor:]
  -[AWDProactiveModelFittingLogRegGradient hasGradientScaleFactor]
  -[AWDProactiveModelFittingLogRegGradient setGradientL2norm:]
  -[AWDProactiveModelFittingLogRegGradient setHasGradientL2norm:]
  -[AWDProactiveModelFittingLogRegGradient hasGradientL2norm]
  -[AWDProactiveModelFittingLogRegGradient hasDenseQuantizedGradient]
  -[AWDProactiveModelFittingLogRegGradient sparseFloatGradient]
  -[AWDProactiveModelFittingLogRegGradient setSparseFloatGradient:]
  -[AWDProactiveModelFittingLogRegGradient sparseQuantizedGradient]
  -[AWDProactiveModelFittingLogRegGradient setSparseQuantizedGradient:]
  -[AWDProactiveModelFittingLogRegGradient gradientScaleFactor]
  -[AWDProactiveModelFittingLogRegGradient gradientL2norm]
  -[AWDProactiveModelFittingLogRegGradient denseQuantizedGradient]
  -[AWDProactiveModelFittingLogRegGradient setDenseQuantizedGradient:]


01 00 0500 /System/Library/PrivateFrameworks/WirelessDiagnostics.framework/WirelessDiagnostics: AWDServerConnection 
01 00 0a00 /System/Library/PrivateFrameworks/DistributedEvaluation.framework/DistributedEvaluation: DESRecordStore 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSLock 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0d00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0900 /System/Library/PrivateFrameworks/CoreParsec.framework/CoreParsec: PARSession 
01 00 0400 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBCodable 
01 00 0100 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFCustomFeedback 
01 00 0800 /System/Library/PrivateFrameworks/ProactiveSupport.framework/ProactiveSupport: _PASDeviceInfo 
01 00 0800 /System/Library/PrivateFrameworks/ProactiveSupport.framework/ProactiveSupport: _PASDeviceState 
01 00 0800 /System/Library/PrivateFrameworks/ProactiveSupport.framework/ProactiveSupport: _PASRng 
01 00 0800 /System/Library/PrivateFrameworks/ProactiveSupport.framework/ProactiveSupport: _PASSqliteDatabase 
01 00 0800 /System/Library/PrivateFrameworks/ProactiveSupport.framework/ProactiveSupport: _PASTuple2 
