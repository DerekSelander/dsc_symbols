|| __DATA.__data _kNFPromiseSealingErrorCode
|| __DATA.__data _kNFPromiseSealingErrorName
|| __DATA_CONST.__const _NFStateMachineErrorDomain
|| __DATA_CONST.__const _kNFReachabilityChangedNotification
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFArchiver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFEventManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFEventTrigger
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFLazy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFMultiDelegate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFMutexLock
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFPendingPromise
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFPromise
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFPromiseSeal
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFReachability
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFStateMachine
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFStateMachineEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFStateMachineState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFStateMachineTransition
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFUnfairLock
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFVoid
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFArchiver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFEventManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFEventTrigger
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFLazy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFMultiDelegate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFMutexLock
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFPendingPromise
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFPromise
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFPromiseSeal
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFReachability
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFStateMachine
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFStateMachineEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFStateMachineState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFStateMachineTransition
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFUnfairLock
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFVoid
|| __TEXT.__const _NewsFoundationVersionNumber
|| __TEXT.__const _NewsFoundationVersionString
|| __TEXT.__text _NFDeviceHasExtendedColorDisplay
|| __TEXT.__text _NFDeviceIsA7
|| __TEXT.__text _NFDeviceIsA8
|| __TEXT.__text _NFDeviceModelString
|| __TEXT.__text _NFDeviceOSVersion
|| __TEXT.__text _NFDevicePlatform
|| __TEXT.__text _NFGeneralDeviceString
|| __TEXT.__text _NFInternalBuild
|| __TEXT.__text _NFLockSync
|| __TEXT.__text _NFPromiseInvokeOnQueue
|| __TEXT.__text _NFSeedBuild
|| __TEXT.__text _NFStoreDemoMode
|| __TEXT.__text __UIValueCGRectValue
|| __TEXT.__text _zalgo
|| __TEXT.__text _zalgoIfMain
__ Bom: _BOMCopierCopyWithOptions
__ Bom: _BOMCopierFree
__ Bom: _BOMCopierNew
__ Bom: _BOMCopierSetCopyFileFinishedHandler
__ Bom: _BOMCopierSetUserData
__ Bom: _BOMCopierUserData
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _NSGetSizeAndAlignment
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _OBJC_CLASS_$_NSBlock
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___kCFBooleanTrue
__ Foundation: _NSKeyedArchiveRootObjectKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Network: _nw_path_get_status
__ Network: _nw_path_is_constrained
__ Network: _nw_path_is_equal
__ Network: _nw_path_is_expensive
__ Network: _nw_path_monitor_cancel
__ Network: _nw_path_monitor_create
__ Network: _nw_path_monitor_set_queue
__ Network: _nw_path_monitor_set_update_handler
__ Network: _nw_path_monitor_start
__ Network: _nw_path_uses_interface_type
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _MGGetProductType
__ libMobileGestalt.dylib: _MGIsDeviceOneOfType
__ libSystem.B.dylib: _CC_SHA1
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_unfair_lock_lock_with_options
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _pthread_mutex_destroy
__ libSystem.B.dylib: _pthread_mutex_init
__ libSystem.B.dylib: _pthread_mutex_lock
__ libSystem.B.dylib: _pthread_mutex_unlock
__ libSystem.B.dylib: _pthread_mutexattr_init
__ libSystem.B.dylib: _pthread_mutexattr_settype
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _sysctlbyname
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x27
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_terminate
NFUnfairLock : NSObject <NFLocking>
  // instance methods
  -[NFUnfairLock unlock]
  -[NFUnfairLock performWithLockSync:]
  -[NFUnfairLock lock]
  -[NFUnfairLock initWithOptions:]
  -[NFUnfairLock init]


NFStateMachineTransition : NSObject
 @property  NFStateMachine *stateMachine
 @property  NFStateMachineState *fromState
 @property  NFStateMachineState *toState
 @property  NFStateMachineEvent *event
 @property  <NFStateMachineContextType> *context

  // instance methods
  -[NFStateMachineTransition setStateMachine:]
  -[NFStateMachineTransition stateMachine]
  -[NFStateMachineTransition setEvent:]
  -[NFStateMachineTransition toState]
  -[NFStateMachineTransition setFromState:]
  -[NFStateMachineTransition fromState]
  -[NFStateMachineTransition setToState:]
  -[NFStateMachineTransition .cxx_destruct]
  -[NFStateMachineTransition setContext:]
  -[NFStateMachineTransition context]
  -[NFStateMachineTransition event]
  -[NFStateMachineTransition initWithStateMachine:event:fromState:toState:context:]


NFPendingPromise : NSObject
 @property  NFPromise *promise
 @property  @? resolve
 @property  @? reject

  // instance methods
  -[NFPendingPromise promise]
  -[NFPendingPromise setPromise:]
  -[NFPendingPromise resolve]
  -[NFPendingPromise reject]
  -[NFPendingPromise .cxx_destruct]
  -[NFPendingPromise init]
  -[NFPendingPromise setResolve:]
  -[NFPendingPromise setReject:]


NFEventManager : NSObject
 @property  NSMutableSet *events
 @property  NSMutableDictionary *triggers

  // instance methods
  -[NFEventManager events]
  -[NFEventManager triggers]
  -[NFEventManager .cxx_destruct]
  -[NFEventManager init]
  -[NFEventManager fireEvent:]
  -[NFEventManager triggerOnceWhenAllEventsHaveOccurred:block:]
  -[NFEventManager triggerAlwaysWhenAllEventsHaveOccurred:block:]
  -[NFEventManager triggerOnceWhenAnyEventHasOccurred:block:]
  -[NFEventManager triggerOnEvent:block:]
  -[NFEventManager triggerOnAnyEvent:block:]
  -[NFEventManager attemptTriggersForCurrentEvent:]
  -[NFEventManager handleOnceTrigger:event:]
  -[NFEventManager handleAlwaysTrigger:event:]


NFEventTrigger : NSObject
 @property  NSString *key
 @property  NSSet *events
 @property  @? block
 @property  BOOL fireOnce
 @property  BOOL fireOnAny

  // instance methods
  -[NFEventTrigger events]
  -[NFEventTrigger .cxx_destruct]
  -[NFEventTrigger block]
  -[NFEventTrigger key]
  -[NFEventTrigger fireOnce]
  -[NFEventTrigger initWithKey:fireOnce:fireOnAny:events:block:]
  -[NFEventTrigger fireOnAny]


NFArchiver : NSObject <NFArchiver>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NFArchiver archiveDirectory:toLocation:]
  -[NFArchiver unarchive:toLocation:]


NFStateMachine : NSObject
 @property  id owner
 @property  NSMutableDictionary *states
 @property  NSMutableDictionary *events
 @property  NFStateMachineState *state
 @property  unsigned long status
 @property  NFMutexLock *lock
 @property  long long statusToken

  // instance methods
  -[NFStateMachine owner]
  -[NFStateMachine setOwner:]
  -[NFStateMachine setStates:]
  -[NFStateMachine activate]
  -[NFStateMachine events]
  -[NFStateMachine states]
  -[NFStateMachine addState:]
  -[NFStateMachine deactivate]
  -[NFStateMachine status]
  -[NFStateMachine state]
  -[NFStateMachine setStatus:]
  -[NFStateMachine .cxx_destruct]
  -[NFStateMachine setEvents:]
  -[NFStateMachine setLock:]
  -[NFStateMachine lock]
  -[NFStateMachine addEvent:]
  -[NFStateMachine setState:]
  -[NFStateMachine activateIfNeeded]
  -[NFStateMachine fireEventWithName:withContext:]
  -[NFStateMachine initWithState:withOwner:]
  -[NFStateMachine deactivateIfNeeded]
  -[NFStateMachine statusToken]
  -[NFStateMachine setStatusToken:]


NFLazy : NSObject
 @property  @? constructor
 @property  NFUnfairLock *lock
 @property  id value

  // instance methods
  -[NFLazy reset]
  -[NFLazy .cxx_destruct]
  -[NFLazy value]
  -[NFLazy initWithConstructor:]
  -[NFLazy lock]
  -[NFLazy constructor]


NFPromise : NSObject
 @property  NFPromiseSeal *seal
 @property  @? then
 @property  @? thenOn
 @property  @? pipe
 @property  @? pipeOn
 @property  @? error
 @property  @? errorOn
 @property  @? resolve
 @property  @? resolveOn
 @property  @? delay
 @property  @? delayOn

  // class methods
  +[NFPromise new]
  +[NFPromise asVoid:]
  +[NFPromise asDelay:onQueue:withValue:]
  +[NFPromise asDelay:withError:]
  +[NFPromise asVoid]
  +[NFPromise firstly:]
  +[NFPromise asDelay:onQueue:withError:]
  +[NFPromise asDelay:withValue:]

  // instance methods
  -[NFPromise then:]
  -[NFPromise always:]
  -[NFPromise initWithValue:]
  -[NFPromise errorOn]
  -[NFPromise resolveOn]
  -[NFPromise setSeal:]
  -[NFPromise initWithResolver:]
  -[NFPromise resolve]
  -[NFPromise error]
  -[NFPromise dealloc]
  -[NFPromise thenOn:then:]
  -[NFPromise .cxx_destruct]
  -[NFPromise delayOn]
  -[NFPromise pipeOn]
  -[NFPromise initWithError:]
  -[NFPromise pipe]
  -[NFPromise thenOn]
  -[NFPromise then]
  -[NFPromise errorOn:error:]
  -[NFPromise error:]
  -[NFPromise seal]
  -[NFPromise alwaysOn:always:]
  -[NFPromise delay]
  -[NFPromise init]


NFVoid : NSObject <NSCopying>
  // instance methods
  -[NFVoid copyWithZone:]


NFPromiseSeal : NSObject
 @property  id value
 @property  NSError *error
 @property  unsigned long state
 @property  NSMutableArray *handlers
 @property  NFUnfairLock *lock

  // instance methods
  -[NFPromiseSeal handlers]
  -[NFPromiseSeal initWithValue:]
  -[NFPromiseSeal error]
  -[NFPromiseSeal state]
  -[NFPromiseSeal dealloc]
  -[NFPromiseSeal .cxx_destruct]
  -[NFPromiseSeal setError:]
  -[NFPromiseSeal resolve:]
  -[NFPromiseSeal initWithError:]
  -[NFPromiseSeal registerHandler:]
  -[NFPromiseSeal reject:]
  -[NFPromiseSeal setValue:]
  -[NFPromiseSeal seal:error:resolution:]
  -[NFPromiseSeal alwaysOn:always:]
  -[NFPromiseSeal value]
  -[NFPromiseSeal resolveOn:reject:resolve:]
  -[NFPromiseSeal setHandlers:]
  -[NFPromiseSeal lock]
  -[NFPromiseSeal init]
  -[NFPromiseSeal setState:]


NFReachability : NSObject
 @property  long long currentReachabilityStatus
 @property  NSObject<OS_dispatch_queue> *observationQueue
 @property  NSObject<OS_nw_path_monitor> *networkPathMonitor
 @property  NSObject<OS_nw_path> *currentNetworkPath

  // class methods
  +[NFReachability sharedInstance]

  // instance methods
  -[NFReachability observationQueue]
  -[NFReachability setObservationQueue:]
  -[NFReachability _statusFromNetworkPath:]
  -[NFReachability dealloc]
  -[NFReachability setCurrentReachabilityStatus:]
  -[NFReachability .cxx_destruct]
  -[NFReachability currentReachabilityStatus]
  -[NFReachability networkPathMonitor]
  -[NFReachability _updateCurrentNetworkPath:]
  -[NFReachability setNetworkPathMonitor:]
  -[NFReachability currentNetworkPath]
  -[NFReachability setCurrentNetworkPath:]
  -[NFReachability init]


NFMutexLock : NSObject <NFLocking>
  // instance methods
  -[NFMutexLock unlock]
  -[NFMutexLock performWithLockSync:]
  -[NFMutexLock dealloc]
  -[NFMutexLock lock]
  -[NFMutexLock initWithOptions:]
  -[NFMutexLock init]


NFStateMachineEvent : NSObject
 @property  NSString *name
 @property  NSSet *states
 @property  NFStateMachineState *destinationState
 @property  @? fireBlock

  // instance methods
  -[NFStateMachineEvent setStates:]
  -[NFStateMachineEvent states]
  -[NFStateMachineEvent setFireBlock:]
  -[NFStateMachineEvent .cxx_destruct]
  -[NFStateMachineEvent fireBlock]
  -[NFStateMachineEvent setName:]
  -[NFStateMachineEvent name]
  -[NFStateMachineEvent isEqual:]
  -[NFStateMachineEvent initWithName:transitionFromStates:toState:]
  -[NFStateMachineEvent onFire:]
  -[NFStateMachineEvent fired:withOwner:]
  -[NFStateMachineEvent destinationState]
  -[NFStateMachineEvent setDestinationState:]


NFStateMachineState : NSObject
 @property  NSString *name
 @property  @? canTryBlock
 @property  @? willExitBlock
 @property  @? willEnterBlock
 @property  @? didExitBlock
 @property  @? didEnterBlock

  // instance methods
  -[NFStateMachineState .cxx_destruct]
  -[NFStateMachineState setName:]
  -[NFStateMachineState initWithName:]
  -[NFStateMachineState name]
  -[NFStateMachineState isEqual:]
  -[NFStateMachineState onWillEnter:]
  -[NFStateMachineState onWillExit:]
  -[NFStateMachineState onDidEnter:]
  -[NFStateMachineState onCanTry:]
  -[NFStateMachineState onDidExit:]
  -[NFStateMachineState canTryBlock]
  -[NFStateMachineState setCanTryBlock:]
  -[NFStateMachineState willExitBlock]
  -[NFStateMachineState setWillExitBlock:]
  -[NFStateMachineState willEnterBlock]
  -[NFStateMachineState setWillEnterBlock:]
  -[NFStateMachineState didExitBlock]
  -[NFStateMachineState setDidExitBlock:]
  -[NFStateMachineState didEnterBlock]
  -[NFStateMachineState setDidEnterBlock:]
  -[NFStateMachineState canTry:withOwner:]
  -[NFStateMachineState willExit:withOwner:]
  -[NFStateMachineState willEnter:withOwner:]
  -[NFStateMachineState didExit:withOwner:]
  -[NFStateMachineState didEnter:withOwner:]


NFMultiDelegate : NSObject
 @property  NSHashTable *children
 @property  Protocol *delegateProtocol
 @property  id delegate

  // instance methods
  -[NFMultiDelegate children]
  -[NFMultiDelegate addDelegate:]
  -[NFMultiDelegate methodSignatureForSelector:]
  -[NFMultiDelegate delegate]
  -[NFMultiDelegate respondsToSelector:]
  -[NFMultiDelegate .cxx_destruct]
  -[NFMultiDelegate removeDelegate:]
  -[NFMultiDelegate conformsToProtocol:]
  -[NFMultiDelegate forwardInvocation:]
  -[NFMultiDelegate initWithDelegate:delegateProtocol:]
  -[NFMultiDelegate replaceDelegate:withDelegate:]
  -[NFMultiDelegate delegateProtocol]


NSError(NFStateMachine)
	// class methods
	+[NSError(NFStateMachine) fc_createStateMachineErrorForCode:userInfo:]

	// instance methods
	-[NSError(NFStateMachine) fc_isStateMachineError:]

NSUserDefaults(NFAdditions)
	// instance methods
	-[NSUserDefaults(NFAdditions) nf_migrateObjectForKey:toKey:]

NSKeyedUnarchiver(FRAdditions)
	// class methods
	+[NSKeyedUnarchiver(FRAdditions) nf_securelyUnarchiveObjectOfClass:withData:]
	+[NSKeyedUnarchiver(FRAdditions) nf_securelyUnarchiveObjectOfClass:withFile:]
	+[NSKeyedUnarchiver(FRAdditions) nf_securelyUnarchiveObjectOfClasses:withData:]
	+[NSKeyedUnarchiver(FRAdditions) nf_securelyUnarchiveObjectOfClasses:withFile:]

	// instance methods
	-[NSKeyedUnarchiver(FRAdditions) nf_securelyUnarchiveObjectOfClass:]

(NFAdditions)
	// class methods
	+[(NFAdditions) nf_compareObject:toObject:]
	+[(NFAdditions) nf_object:isEqualToObject:]

(NFAdditions)
	// instance methods
	-[(NFAdditions) nf_stringByReversingString]
	-[(NFAdditions) nf_sha1]

NSValue(NFAdditions)
	// class methods
	+[NSValue(NFAdditions) nf_valueWithCGRect:]

	// instance methods
	-[NSValue(NFAdditions) nf_CGRectValue]

01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSBlock 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0500 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
