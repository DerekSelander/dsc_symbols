|| __DATA.__data _kNFPromiseSealingErrorCode
|| __DATA.__data _kNFPromiseSealingErrorName
|| __DATA_CONST.__const _NFStateMachineErrorDomain
|| __DATA_CONST.__const _NFWaiterErrorDomain
|| __DATA_CONST.__const _kNFReachabilityChangedNotification
|| __DATA_CONST.__objc_const _OBJC_EHTYPE_$_NFContainerCircularDependencyDetectedException
|| __DATA_CONST.__objc_const _OBJC_EHTYPE_$_NFContainerContextMismatchException
|| __DATA_CONST.__objc_const _OBJC_EHTYPE_$_NFContainerDefinitionMismatchException
|| __DATA_CONST.__objc_const _OBJC_EHTYPE_$_NFContainerDefinitionNilFactoryException
|| __DATA_CONST.__objc_const _OBJC_EHTYPE_$_NFContainerDefinitionNotOverridableException
|| __DATA_CONST.__objc_const _OBJC_EHTYPE_$_NFContainerEnsuringNullableDefinitionException
|| __DATA_CONST.__objc_const _OBJC_EHTYPE_$_NFContainerException
|| __DATA_CONST.__objc_const _OBJC_EHTYPE_$_NFContainerMissingDefinitionException
|| __DATA_CONST.__objc_const _OBJC_EHTYPE_$_NFRouterException
|| __DATA_CONST.__objc_const _OBJC_EHTYPE_$_NFRouterRouteToNonRoutable
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFCallbackDefinition
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFCallbackRegistration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFCallbackScope
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFCallbackStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFContainer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFContainerCircularDependencyDetectedException
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFContainerContextMismatchException
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFContainerDefinitionMismatchException
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFContainerDefinitionNilFactoryException
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFContainerDefinitionNotOverridableException
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFContainerEnsuringNullableDefinitionException
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFContainerException
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFContainerMissingDefinitionException
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFContainerPool
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFContainerPoolObject
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFContainerRegistry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFDefinition
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFEventManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFEventTrigger
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFLazy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFMultiDelegate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFMutexLock
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFObjectReuseManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFPendingPromise
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFPromise
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFPromiseSeal
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFProxyContainer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFProxyResolver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFReachability
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFRouter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFRouterException
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFRouterRouteToNonRoutable
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFStateMachine
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFStateMachineEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFStateMachineState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFStateMachineTransition
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFUnfairLock
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFVoid
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFWaiter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFCallbackDefinition
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFCallbackRegistration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFCallbackScope
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFCallbackStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFContainer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFContainerCircularDependencyDetectedException
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFContainerContextMismatchException
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFContainerDefinitionMismatchException
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFContainerDefinitionNilFactoryException
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFContainerDefinitionNotOverridableException
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFContainerEnsuringNullableDefinitionException
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFContainerException
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFContainerMissingDefinitionException
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFContainerPool
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFContainerPoolObject
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFContainerRegistry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFDefinition
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFEventManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFEventTrigger
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFKey
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFLazy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFMultiDelegate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFMutexLock
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFObjectReuseManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFPendingPromise
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFPromise
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFPromiseSeal
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFProxyContainer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFProxyResolver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFReachability
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFRouter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFRouterException
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFRouterRouteToNonRoutable
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFStateMachine
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFStateMachineEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFStateMachineState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFStateMachineTransition
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFUnfairLock
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFVoid
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFWaiter
|| __TEXT.__const _NewsFoundationVersionNumber
|| __TEXT.__const _NewsFoundationVersionString
|| __TEXT.__text _NFCallbackScopeAny
|| __TEXT.__text _NFCallbackScopeName
|| __TEXT.__text _NFCallbackScopeNames
|| __TEXT.__text _NFDeviceHasExtendedColorDisplay
|| __TEXT.__text _NFDeviceIsA7
|| __TEXT.__text _NFDeviceIsA8
|| __TEXT.__text _NFDeviceModelString
|| __TEXT.__text _NFDeviceOSVersion
|| __TEXT.__text _NFDevicePlatform
|| __TEXT.__text _NFGeneralDeviceString
|| __TEXT.__text _NFInternalBuild
|| __TEXT.__text _NFLockSync
|| __TEXT.__text _NFPoolMakeWeakObjectsPool
|| __TEXT.__text _NFPromiseInvokeOnQueue
|| __TEXT.__text _NFSeedBuild
|| __TEXT.__text _NFStoreDemoMode
|| __TEXT.__text _zalgo
|| __TEXT.__text _zalgoIfMain
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSBlock
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: _OBJC_METACLASS_$_NSException
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__
__ Foundation: _NSClassFromString
__ Foundation: _NSKeyedArchiveRootObjectKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSProtocolFromString
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromProtocol
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSUUID
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _MGGetProductType
__ libMobileGestalt.dylib: _MGIsDeviceOneOfType
__ libSystem.B.dylib: _CC_SHA1
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_unfair_lock_lock_with_options
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _pthread_mutex_destroy
__ libSystem.B.dylib: _pthread_mutex_init
__ libSystem.B.dylib: _pthread_mutex_lock
__ libSystem.B.dylib: _pthread_mutex_unlock
__ libSystem.B.dylib: _pthread_mutexattr_init
__ libSystem.B.dylib: _pthread_mutexattr_settype
__ libSystem.B.dylib: _sysctlbyname
__ libSystem.B.dylib: dyld_stub_binder
__ libnetwork.dylib: _nw_path_get_status
__ libnetwork.dylib: _nw_path_is_constrained
__ libnetwork.dylib: _nw_path_is_equal
__ libnetwork.dylib: _nw_path_is_expensive
__ libnetwork.dylib: _nw_path_monitor_cancel
__ libnetwork.dylib: _nw_path_monitor_create
__ libnetwork.dylib: _nw_path_monitor_set_queue
__ libnetwork.dylib: _nw_path_monitor_set_update_handler
__ libnetwork.dylib: _nw_path_monitor_start
__ libnetwork.dylib: _nw_path_uses_interface_type
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_ehtype_vtable
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
NFCallbackDefinition : NSObject /usr/lib/libSystem.B.dylib
 @property  @? callbackBlock
 @property  <NFDefinitionContainer> *privateContainer

  // instance methods
  -[NFCallbackDefinition .cxx_destruct]
  -[NFCallbackDefinition callbackBlock]
  -[NFCallbackDefinition initWithCallbackBlock:privateContainer:]
  -[NFCallbackDefinition privateContainer]


NFWaiter : NSObject /usr/lib/libSystem.B.dylib
 @property  double interval
 @property  double timeout

  // class methods
  +[NFWaiter error]
  +[NFWaiter waitFor:waitInterval:timeoutInterval:completion:failure:]
  +[NFWaiter waitUntil:waitInterval:timeoutInterval:completion:failure:]
  +[NFWaiter waitWithInterval:timeout:valueProvider:]
  +[NFWaiter waitWithInterval:timeout:conditionProvider:]
  +[NFWaiter waitWithInterval:timeout:valueProvider:condition:]
  +[NFWaiter waitWithTimeout:valueProvider:]
  +[NFWaiter waitWithTimeout:conditionProvider:]

  // instance methods
  -[NFWaiter interval]
  -[NFWaiter timeout]


NFDefinition : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned long source
 @property  Class cls
 @property  Protocol *protocol
 @property  @? factory
 @property  unsigned long scope
 @property  BOOL canBeOverridden
 @property  BOOL canBeNil
 @property  @? validationBlock
 @property  @? configurationBlock

  // instance methods
  -[NFDefinition setSource:]
  -[NFDefinition .cxx_destruct]
  -[NFDefinition source]
  -[NFDefinition protocol]
  -[NFDefinition setProtocol:]
  -[NFDefinition scope]
  -[NFDefinition factory]
  -[NFDefinition setScope:]
  -[NFDefinition configurationBlock]
  -[NFDefinition setConfigurationBlock:]
  -[NFDefinition setFactory:]
  -[NFDefinition initWithClass:factory:]
  -[NFDefinition initWithProtocol:factory:]
  -[NFDefinition initWithUnsafeFactory:]
  -[NFDefinition inScope:]
  -[NFDefinition withValidation:]
  -[NFDefinition withConfiguration:]
  -[NFDefinition canBeOverridden:]
  -[NFDefinition canBeNil:]
  -[NFDefinition privateAccessContainer]
  -[NFDefinition withPrivateAccessInContainer:]
  -[NFDefinition withPrivateAccessInWeakContainer:]
  -[NFDefinition cls]
  -[NFDefinition setCls:]
  -[NFDefinition canBeOverridden]
  -[NFDefinition setCanBeOverridden:]
  -[NFDefinition canBeNil]
  -[NFDefinition setCanBeNil:]
  -[NFDefinition validationBlock]
  -[NFDefinition setValidationBlock:]


NFContainerException : NSException /usr/lib/libnetwork.dylib

NFContainerMissingDefinitionException : NFContainerException
  // class methods
  +[NFContainerMissingDefinitionException exceptionWithDefinitionKey:]


NFContainerDefinitionNotOverridableException : NFContainerException
  // class methods
  +[NFContainerDefinitionNotOverridableException exceptionWithDefinitionKey:]


NFContainerDefinitionNilFactoryException : NFContainerException
  // class methods
  +[NFContainerDefinitionNilFactoryException exceptionWithDefinitionKey:]


NFContainerEnsuringNullableDefinitionException : NFContainerException
  // class methods
  +[NFContainerEnsuringNullableDefinitionException exceptionWithDefinitionKey:]


NFContainerDefinitionMismatchException : NFContainerException
  // class methods
  +[NFContainerDefinitionMismatchException exceptionWithDefinitionKey:]


NFContainerCircularDependencyDetectedException : NFContainerException
  // class methods
  +[NFContainerCircularDependencyDetectedException exception]


NFContainerContextMismatchException : NFContainerException
  // class methods
  +[NFContainerContextMismatchException exceptionWithContextKey:]


NFUnfairLock : NSObject /usr/lib/libSystem.B.dylib <NFLocking>
 @property  {os_unfair_lock_s=I} unfairLock
 @property  unsigned int unfairLockOptions

  // instance methods
  -[NFUnfairLock init]
  -[NFUnfairLock initWithOptions:]
  -[NFUnfairLock lock]
  -[NFUnfairLock unlock]
  -[NFUnfairLock performWithLockSync:]
  -[NFUnfairLock unfairLock]
  -[NFUnfairLock setUnfairLock:]
  -[NFUnfairLock unfairLockOptions]
  -[NFUnfairLock setUnfairLockOptions:]


NFStateMachineTransition : NSObject /usr/lib/libSystem.B.dylib
 @property  NFStateMachine *stateMachine
 @property  NFStateMachineState *fromState
 @property  NFStateMachineState *toState
 @property  NFStateMachineEvent *event
 @property  <NFStateMachineContextType> *context

  // instance methods
  -[NFStateMachineTransition .cxx_destruct]
  -[NFStateMachineTransition context]
  -[NFStateMachineTransition setContext:]
  -[NFStateMachineTransition event]
  -[NFStateMachineTransition setEvent:]
  -[NFStateMachineTransition stateMachine]
  -[NFStateMachineTransition setStateMachine:]
  -[NFStateMachineTransition fromState]
  -[NFStateMachineTransition toState]
  -[NFStateMachineTransition setFromState:]
  -[NFStateMachineTransition setToState:]
  -[NFStateMachineTransition initWithStateMachine:event:fromState:toState:context:]


NFContainer : NSObject /usr/lib/libSystem.B.dylib <NFDefinitionContainer, NFRegistrationContainer>
 @property  NSMutableDictionary *definitions
 @property  NFContainerPool *pool
 @property  NFCallbackStore *callbackStore
 @property  NSMutableDictionary *privateContainers
 @property  NFProxyResolver *proxyResolver
 @property  <NFResolver> *resolver
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NFContainer init]
  -[NFContainer .cxx_destruct]
  -[NFContainer resolver]
  -[NFContainer initWithFrameworkAssemblies:assemblies:]
  -[NFContainer initWithBundleAssemblies:]
  -[NFContainer initWithBundleAssemblies:assemblies:]
  -[NFContainer initAsPrivateContainer]
  -[NFContainer registerClass:name:factory:]
  -[NFContainer register:createDefinitionBlock:]
  -[NFContainer registerProtocol:name:factory:]
  -[NFContainer registerKey:factory:]
  -[NFContainer proxyResolver]
  -[NFContainer definitionForKey:]
  -[NFContainer registerClass:factory:]
  -[NFContainer registerProtocol:factory:]
  -[NFContainer unsafeRegisterForKey:name:factory:]
  -[NFContainer initWithAssemblies:]
  -[NFContainer initWithFrameworkAssemblies:]
  -[NFContainer validateDefinitionsWithProxyResolver:]
  -[NFContainer definitions]
  -[NFContainer setDefinitions:]
  -[NFContainer pool]
  -[NFContainer setPool:]
  -[NFContainer callbackStore]
  -[NFContainer setCallbackStore:]
  -[NFContainer privateContainers]
  -[NFContainer setPrivateContainers:]


NFProxyContainer : NSObject /usr/lib/libSystem.B.dylib <NFRegistrationContainer>
 @property  NFContainer *container
 @property  NFContainer *privateContainer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NFProxyContainer container]
  -[NFProxyContainer setContainer:]
  -[NFProxyContainer .cxx_destruct]
  -[NFProxyContainer privateContainer]
  -[NFProxyContainer initWithContainer:privateContainer:]
  -[NFProxyContainer registerClass:name:factory:]
  -[NFProxyContainer registerProtocol:name:factory:]
  -[NFProxyContainer registerKey:factory:]
  -[NFProxyContainer registerClass:factory:]
  -[NFProxyContainer registerProtocol:factory:]
  -[NFProxyContainer unsafeRegisterForKey:name:factory:]
  -[NFProxyContainer setPrivateContainer:]


NFPendingPromise : NSObject /usr/lib/libSystem.B.dylib
 @property  NFPromise *promise
 @property  @? resolve
 @property  @? reject

  // instance methods
  -[NFPendingPromise init]
  -[NFPendingPromise .cxx_destruct]
  -[NFPendingPromise resolve]
  -[NFPendingPromise promise]
  -[NFPendingPromise setPromise:]
  -[NFPendingPromise reject]
  -[NFPendingPromise setResolve:]
  -[NFPendingPromise setReject:]


NFCallbackRegistration : NSObject /usr/lib/libSystem.B.dylib <NFCallbackRegistration>
 @property  NFCallbackStore *callbackStore
 @property  <NFDefinitionContainer> *privateContainer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NFCallbackRegistration .cxx_destruct]
  -[NFCallbackRegistration privateContainer]
  -[NFCallbackRegistration initWithCallbackStore:privateContainer:]
  -[NFCallbackRegistration callbackStore]
  -[NFCallbackRegistration whenResolvingClass:scope:callbackBlock:]
  -[NFCallbackRegistration whenResolvingProtocol:scope:callbackBlock:]
  -[NFCallbackRegistration whenResolvingKey:scope:callbackBlock:]
  -[NFCallbackRegistration whenUnsafeResolvingWithKey:scope:callbackBlock:]


NFEventManager : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableSet *events
 @property  NSMutableDictionary *triggers

  // instance methods
  -[NFEventManager init]
  -[NFEventManager .cxx_destruct]
  -[NFEventManager events]
  -[NFEventManager triggers]
  -[NFEventManager attemptTriggersForCurrentEvent:]
  -[NFEventManager triggerOnAnyEvent:block:]
  -[NFEventManager handleOnceTrigger:event:]
  -[NFEventManager handleAlwaysTrigger:event:]
  -[NFEventManager fireEvent:]
  -[NFEventManager triggerOnceWhenAllEventsHaveOccurred:block:]
  -[NFEventManager triggerAlwaysWhenAllEventsHaveOccurred:block:]
  -[NFEventManager triggerOnceWhenAnyEventHasOccurred:block:]
  -[NFEventManager triggerOnEvent:block:]


NFEventTrigger : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *key
 @property  NSSet *events
 @property  @? block
 @property  BOOL fireOnce
 @property  BOOL fireOnAny

  // instance methods
  -[NFEventTrigger key]
  -[NFEventTrigger .cxx_destruct]
  -[NFEventTrigger block]
  -[NFEventTrigger events]
  -[NFEventTrigger initWithKey:fireOnce:fireOnAny:events:block:]
  -[NFEventTrigger fireOnce]
  -[NFEventTrigger fireOnAny]


NFRouter : NSObject /usr/lib/libSystem.B.dylib <NFRouter>
 @property  <NFResolver> *resolver
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NFRouter .cxx_destruct]
  -[NFRouter resolver]
  -[NFRouter initWithResolver:]
  -[NFRouter resolveRoutable:]


NFStateMachine : NSObject /usr/lib/libSystem.B.dylib
 @property  id owner
 @property  NSMutableDictionary *states
 @property  NSMutableDictionary *events
 @property  NFStateMachineState *state
 @property  unsigned long status
 @property  NFMutexLock *lock
 @property  long long statusToken

  // instance methods
  -[NFStateMachine lock]
  -[NFStateMachine .cxx_destruct]
  -[NFStateMachine setOwner:]
  -[NFStateMachine state]
  -[NFStateMachine status]
  -[NFStateMachine owner]
  -[NFStateMachine setState:]
  -[NFStateMachine events]
  -[NFStateMachine setEvents:]
  -[NFStateMachine setStatus:]
  -[NFStateMachine setLock:]
  -[NFStateMachine states]
  -[NFStateMachine activate]
  -[NFStateMachine deactivate]
  -[NFStateMachine activateIfNeeded]
  -[NFStateMachine setStates:]
  -[NFStateMachine addEvent:]
  -[NFStateMachine addState:]
  -[NFStateMachine statusToken]
  -[NFStateMachine setStatusToken:]
  -[NFStateMachine initWithState:withOwner:]
  -[NFStateMachine deactivateIfNeeded]
  -[NFStateMachine fireEventWithName:withContext:]


NFProxyResolver : NSObject /usr/lib/libSystem.B.dylib <NFResolver, NFValidationResolver>
 @property  <NFDefinitionContainer> *publicContainer
 @property  <NFDefinitionContainer> *privateContainer
 @property  NFContainerPool *pool
 @property  NFCallbackStore *callbackStore
 @property  NFContext *context
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NFProxyResolver .cxx_destruct]
  -[NFProxyResolver context]
  -[NFProxyResolver setContext:]
  -[NFProxyResolver privateContainer]
  -[NFProxyResolver initWithPublicContainer:privateContainer:inPool:callbackStore:]
  -[NFProxyResolver createProxyResolverForPrivateContainer:]
  -[NFProxyResolver pool]
  -[NFProxyResolver setPool:]
  -[NFProxyResolver callbackStore]
  -[NFProxyResolver setPrivateContainer:]
  -[NFProxyResolver resolveProtocol:]
  -[NFProxyResolver resolveClass:name:]
  -[NFProxyResolver contextWithContextBlock:]
  -[NFProxyResolver resolveForKey:context:validateBlock:]
  -[NFProxyResolver resolveProtocol:name:]
  -[NFProxyResolver ensure:]
  -[NFProxyResolver resolveForKey:]
  -[NFProxyResolver currentObjectGraphResolver:]
  -[NFProxyResolver linkResolverWithLinkBlock:]
  -[NFProxyResolver resolveClass:]
  -[NFProxyResolver resolveClass:contextBlock:]
  -[NFProxyResolver resolveClass:name:contextBlock:]
  -[NFProxyResolver resolveProtocol:contextBlock:]
  -[NFProxyResolver resolveProtocol:name:contextBlock:]
  -[NFProxyResolver resolveForKey:context:]
  -[NFProxyResolver unsafeResolveForKey:name:]
  -[NFProxyResolver unsafeResolveForKey:name:context:]
  -[NFProxyResolver ensureClass:]
  -[NFProxyResolver ensureClass:name:]
  -[NFProxyResolver ensureProtocol:]
  -[NFProxyResolver ensureProtocol:name:]
  -[NFProxyResolver publicContainer]
  -[NFProxyResolver setPublicContainer:]


NFLazy : NSObject /usr/lib/libSystem.B.dylib
 @property  @? constructor
 @property  NFUnfairLock *lock
 @property  id value

  // instance methods
  -[NFLazy lock]
  -[NFLazy .cxx_destruct]
  -[NFLazy value]
  -[NFLazy initWithConstructor:]
  -[NFLazy constructor]


NFKey : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  unsigned long address
 @property  NSString *name
 @property  id type

  // instance methods
  -[NFKey isEqual:]
  -[NFKey name]
  -[NFKey copyWithZone:]
  -[NFKey type]
  -[NFKey .cxx_destruct]
  -[NFKey address]
  -[NFKey initWithAddressOfType:name:]
  -[NFKey initWithTypeName:name:]
  -[NFKey initWithAddress:type:name:]
  -[NFKey copyWithName:]


NFPromise : NSObject /usr/lib/libSystem.B.dylib
 @property  NFPromiseSeal *seal
 @property  @? then
 @property  @? thenOn
 @property  @? pipe
 @property  @? pipeOn
 @property  @? error
 @property  @? errorOn
 @property  @? resolve
 @property  @? resolveOn
 @property  @? delay
 @property  @? delayOn

  // class methods
  +[NFPromise new]
  +[NFPromise firstly:]
  +[NFPromise asVoid]
  +[NFPromise asVoid:]
  +[NFPromise asDelay:withValue:]
  +[NFPromise asDelay:onQueue:withValue:]
  +[NFPromise asDelay:onQueue:withError:]
  +[NFPromise asDelay:withError:]

  // instance methods
  -[NFPromise init]
  -[NFPromise dealloc]
  -[NFPromise .cxx_destruct]
  -[NFPromise error]
  -[NFPromise pipe]
  -[NFPromise delay]
  -[NFPromise resolve]
  -[NFPromise initWithError:]
  -[NFPromise then:]
  -[NFPromise initWithValue:]
  -[NFPromise setSeal:]
  -[NFPromise seal]
  -[NFPromise always:]
  -[NFPromise thenOn:then:]
  -[NFPromise errorOn:error:]
  -[NFPromise initWithResolver:]
  -[NFPromise error:]
  -[NFPromise resolveOn]
  -[NFPromise thenOn]
  -[NFPromise alwaysOn:always:]
  -[NFPromise then]
  -[NFPromise pipeOn]
  -[NFPromise errorOn]
  -[NFPromise delayOn]


NFVoid : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
  // instance methods
  -[NFVoid copyWithZone:]


NFContainerPool : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableDictionary *singletons
 @property  NSMutableDictionary *graph
 @property  unsigned long depth
 @property  unsigned long drainDepth
 @property  BOOL objectGraphDrainingEnabled
 @property  NSMutableArray *onDrainBlocks
 @property  NSMutableArray *onDrainCopyPoolObjectGraphBlocks
 @property  BOOL poolPreparedForLockingGraph

  // instance methods
  -[NFContainerPool init]
  -[NFContainerPool .cxx_destruct]
  -[NFContainerPool drain]
  -[NFContainerPool depth]
  -[NFContainerPool graph]
  -[NFContainerPool setGraph:]
  -[NFContainerPool setDepth:]
  -[NFContainerPool isPoolPreparedForLockingGraph]
  -[NFContainerPool onDrainCopyPoolObjectGraph:]
  -[NFContainerPool copyWithObjectGraphDrainingDisabled]
  -[NFContainerPool linkDepth:]
  -[NFContainerPool onDrain:]
  -[NFContainerPool enter:]
  -[NFContainerPool drainDepth]
  -[NFContainerPool setDrainDepth:]
  -[NFContainerPool onDrainBlocks]
  -[NFContainerPool setOnDrainBlocks:]
  -[NFContainerPool onDrainCopyPoolObjectGraphBlocks]
  -[NFContainerPool setOnDrainCopyPoolObjectGraphBlocks:]
  -[NFContainerPool isObjectGraphDrainingEnabled]
  -[NFContainerPool singletons]
  -[NFContainerPool setSingletons:]
  -[NFContainerPool setObjectGraphDrainingEnabled:]


NFContainerRegistry : NSObject /usr/lib/libSystem.B.dylib <NFContainerRegistry>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <NFRegistrationContainer> *publicContainer
 @property  <NFRegistrationContainer> *privateContainer
 @property  <NFCallbackRegistration> *callback

  // instance methods
  -[NFContainerRegistry .cxx_destruct]
  -[NFContainerRegistry callback]
  -[NFContainerRegistry privateContainer]
  -[NFContainerRegistry initWithPublicContainer:privateContainer:callback:]
  -[NFContainerRegistry publicContainer]


NFPromiseSeal : NSObject /usr/lib/libSystem.B.dylib
 @property  id value
 @property  NSError *error
 @property  unsigned long state
 @property  NSMutableArray *handlers
 @property  NFUnfairLock *lock

  // instance methods
  -[NFPromiseSeal init]
  -[NFPromiseSeal dealloc]
  -[NFPromiseSeal lock]
  -[NFPromiseSeal .cxx_destruct]
  -[NFPromiseSeal error]
  -[NFPromiseSeal value]
  -[NFPromiseSeal setValue:]
  -[NFPromiseSeal setError:]
  -[NFPromiseSeal state]
  -[NFPromiseSeal setState:]
  -[NFPromiseSeal initWithError:]
  -[NFPromiseSeal resolve:]
  -[NFPromiseSeal initWithValue:]
  -[NFPromiseSeal handlers]
  -[NFPromiseSeal setHandlers:]
  -[NFPromiseSeal alwaysOn:always:]
  -[NFPromiseSeal reject:]
  -[NFPromiseSeal resolveOn:reject:resolve:]
  -[NFPromiseSeal seal:error:resolution:]
  -[NFPromiseSeal registerHandler:]


NFContext : NSObject /usr/lib/libSystem.B.dylib <NFContext>
 @property  NSMutableDictionary *objects
 @property  NFCallbackStore *callbackStore
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NFContext .cxx_destruct]
  -[NFContext objects]
  -[NFContext callbackStore]
  -[NFContext whenResolvingClass:scope:callbackBlock:]
  -[NFContext whenResolvingProtocol:scope:callbackBlock:]
  -[NFContext whenResolvingKey:scope:callbackBlock:]
  -[NFContext whenUnsafeResolvingWithKey:scope:callbackBlock:]
  -[NFContext mergeWithContext:]
  -[NFContext resolveForKey:]
  -[NFContext initWithCallbackStore:]
  -[NFContext useObject:forClass:]
  -[NFContext useObject:forClass:name:]
  -[NFContext useObject:forProtocol:]
  -[NFContext useObject:forProtocol:name:]
  -[NFContext useObject:forKey:]
  -[NFContext unsafeUseObject:forKey:name:]


NFReachability : NSObject /usr/lib/libSystem.B.dylib
 @property  long long currentReachabilityStatus
 @property  NSObject<OS_dispatch_queue> *observationQueue
 @property  NSObject<OS_nw_path_monitor> *networkPathMonitor
 @property  NSObject<OS_nw_path> *currentNetworkPath

  // class methods
  +[NFReachability sharedInstance]

  // instance methods
  -[NFReachability init]
  -[NFReachability dealloc]
  -[NFReachability .cxx_destruct]
  -[NFReachability currentReachabilityStatus]
  -[NFReachability observationQueue]
  -[NFReachability _updateCurrentNetworkPath:]
  -[NFReachability currentNetworkPath]
  -[NFReachability setCurrentNetworkPath:]
  -[NFReachability _statusFromNetworkPath:]
  -[NFReachability setCurrentReachabilityStatus:]
  -[NFReachability setObservationQueue:]
  -[NFReachability networkPathMonitor]
  -[NFReachability setNetworkPathMonitor:]


NFCallbackStore : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableDictionary *store

  // instance methods
  -[NFCallbackStore init]
  -[NFCallbackStore .cxx_destruct]
  -[NFCallbackStore store]
  -[NFCallbackStore storeCallbackDefinition:forKey:scope:]
  -[NFCallbackStore lookupForKey:]


NFMutexLock : NSObject /usr/lib/libSystem.B.dylib <NFLocking>
  // instance methods
  -[NFMutexLock init]
  -[NFMutexLock dealloc]
  -[NFMutexLock initWithOptions:]
  -[NFMutexLock lock]
  -[NFMutexLock unlock]
  -[NFMutexLock performWithLockSync:]


NFStateMachineEvent : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *name
 @property  NSSet *states
 @property  NFStateMachineState *destinationState
 @property  @? fireBlock

  // instance methods
  -[NFStateMachineEvent isEqual:]
  -[NFStateMachineEvent name]
  -[NFStateMachineEvent .cxx_destruct]
  -[NFStateMachineEvent setName:]
  -[NFStateMachineEvent states]
  -[NFStateMachineEvent setStates:]
  -[NFStateMachineEvent fireBlock]
  -[NFStateMachineEvent setFireBlock:]
  -[NFStateMachineEvent destinationState]
  -[NFStateMachineEvent fired:withOwner:]
  -[NFStateMachineEvent initWithName:transitionFromStates:toState:]
  -[NFStateMachineEvent onFire:]
  -[NFStateMachineEvent setDestinationState:]


NFStateMachineState : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *name
 @property  @? canTryBlock
 @property  @? willExitBlock
 @property  @? willEnterBlock
 @property  @? didExitBlock
 @property  @? didEnterBlock

  // instance methods
  -[NFStateMachineState isEqual:]
  -[NFStateMachineState name]
  -[NFStateMachineState .cxx_destruct]
  -[NFStateMachineState setName:]
  -[NFStateMachineState initWithName:]
  -[NFStateMachineState canTry:withOwner:]
  -[NFStateMachineState willExit:withOwner:]
  -[NFStateMachineState willEnter:withOwner:]
  -[NFStateMachineState didExit:withOwner:]
  -[NFStateMachineState didEnter:withOwner:]
  -[NFStateMachineState setCanTryBlock:]
  -[NFStateMachineState setWillExitBlock:]
  -[NFStateMachineState setDidExitBlock:]
  -[NFStateMachineState setWillEnterBlock:]
  -[NFStateMachineState setDidEnterBlock:]
  -[NFStateMachineState onCanTry:]
  -[NFStateMachineState onWillExit:]
  -[NFStateMachineState onDidExit:]
  -[NFStateMachineState onWillEnter:]
  -[NFStateMachineState onDidEnter:]
  -[NFStateMachineState canTryBlock]
  -[NFStateMachineState willExitBlock]
  -[NFStateMachineState willEnterBlock]
  -[NFStateMachineState didExitBlock]
  -[NFStateMachineState didEnterBlock]


NFContainerPoolObject : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned long ownership
 @property  id strongObject
 @property  id weakObject
 @property  id object

  // instance methods
  -[NFContainerPoolObject object]
  -[NFContainerPoolObject .cxx_destruct]
  -[NFContainerPoolObject weakObject]
  -[NFContainerPoolObject strongObject]
  -[NFContainerPoolObject initWithObject:ownership:]
  -[NFContainerPoolObject ownership]


NFMultiDelegate : NSObject /usr/lib/libSystem.B.dylib
 @property  NSHashTable *children
 @property  Protocol *delegateProtocol
 @property  id delegate

  // instance methods
  -[NFMultiDelegate conformsToProtocol:]
  -[NFMultiDelegate respondsToSelector:]
  -[NFMultiDelegate methodSignatureForSelector:]
  -[NFMultiDelegate forwardInvocation:]
  -[NFMultiDelegate delegate]
  -[NFMultiDelegate .cxx_destruct]
  -[NFMultiDelegate addDelegate:]
  -[NFMultiDelegate removeDelegate:]
  -[NFMultiDelegate children]
  -[NFMultiDelegate delegateProtocol]
  -[NFMultiDelegate initWithDelegate:delegateProtocol:]
  -[NFMultiDelegate replaceDelegate:withDelegate:]


NFObjectReuseManager : NSObject /usr/lib/libSystem.B.dylib
 @property  @? reuseFactory
 @property  NSMutableDictionary *inuseObjects
 @property  NSMutableDictionary *reuseableObjects

  // instance methods
  -[NFObjectReuseManager .cxx_destruct]
  -[NFObjectReuseManager reuseableObjects]
  -[NFObjectReuseManager reuseFactory]
  -[NFObjectReuseManager inuseObjects]
  -[NFObjectReuseManager initWithObjectConstructor:]
  -[NFObjectReuseManager dequeueObjectForIdentifier:]
  -[NFObjectReuseManager prepareObjectForReuse:]
  -[NFObjectReuseManager purgeObjectForIdentifier:]
  -[NFObjectReuseManager isInUse:]
  -[NFObjectReuseManager inUseObjectForIdentifier:]
  -[NFObjectReuseManager setReuseFactory:]
  -[NFObjectReuseManager setInuseObjects:]
  -[NFObjectReuseManager setReuseableObjects:]


NFRouterException : NSException /usr/lib/libnetwork.dylib

NFRouterRouteToNonRoutable : NFRouterException
  // class methods
  +[NFRouterRouteToNonRoutable exceptionWithObject:]


NFCallbackScope : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned long scope
 @property  NSArray *names

  // instance methods
  -[NFCallbackScope .cxx_destruct]
  -[NFCallbackScope scope]
  -[NFCallbackScope names]
  -[NFCallbackScope initWithScope:names:]


NSError(NFStateMachine)
	// class methods
	+[NSError(NFStateMachine) fc_createStateMachineErrorForCode:userInfo:]

	// instance methods
	-[NSError(NFStateMachine) fc_isStateMachineError:]

NSUserDefaults(NFAdditions)
	// instance methods
	-[NSUserDefaults(NFAdditions) nf_migrateObjectForKey:toKey:]

NSKeyedUnarchiver(FRAdditions)
	// class methods
	+[NSKeyedUnarchiver(FRAdditions) nf_securelyUnarchiveObjectOfClass:withData:]
	+[NSKeyedUnarchiver(FRAdditions) nf_securelyUnarchiveObjectOfClasses:withData:]
	+[NSKeyedUnarchiver(FRAdditions) nf_securelyUnarchiveObjectOfClass:withFile:]
	+[NSKeyedUnarchiver(FRAdditions) nf_securelyUnarchiveObjectOfClasses:withFile:]

	// instance methods
	-[NSKeyedUnarchiver(FRAdditions) nf_securelyUnarchiveObjectOfClass:]

NSObject(NFAdditions)
	// class methods
	+[NSObject(NFAdditions) nf_compareObject:toObject:]
	+[NSObject(NFAdditions) nf_object:isEqualToObject:]

NSString(NFAdditions)
	// instance methods
	-[NSString(NFAdditions) nf_stringByReversingString]
	-[NSString(NFAdditions) nf_sha1]

01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSBlock 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0500 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
