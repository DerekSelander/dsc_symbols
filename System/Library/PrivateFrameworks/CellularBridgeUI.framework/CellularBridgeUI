|| __DATA.__data _NPHCellularErrorDomain
|| __DATA.__data _NPHCellularErrorLinkKey
|| __DATA.__data _NPHCellularErrorLinkTextKey
|| __DATA.__data _NPHCellularErrorTitleKey
|| __DATA.__data _NPHCellularPlanInfoDidChangeNotification
|| __DATA.__data _NPHCellularPlanInfoError
|| __DATA.__data _NPHCellularSetupShouldShowSpinnerNotification
|| __DATA.__objc_data _OBJC_CLASS_$_NPHBSCellularConfirmationCodeViewController
|| __DATA.__objc_data _OBJC_CLASS_$_NPHBSCellularFauxCardInfoViewController
|| __DATA.__objc_data _OBJC_CLASS_$_NPHBSCellularFauxCardNavigationController
|| __DATA.__objc_data _OBJC_CLASS_$_NPHBSCellularFauxCardViewController
|| __DATA.__objc_data _OBJC_CLASS_$_NPHCellularBridgeBarcodeScannerView
|| __DATA.__objc_data _OBJC_CLASS_$_NPHCellularBridgeUIManager
|| __DATA.__objc_data _OBJC_CLASS_$_NPHCellularSetupViewController
|| __DATA.__objc_data _OBJC_CLASS_$_NPHServiceSubscriptionInfo
|| __DATA.__objc_data _OBJC_CLASS_$_NPHSetupTableViewCell
|| __DATA.__objc_data _OBJC_CLASS_$_NPHSharedUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_NPHBSCellularConfirmationCodeViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_NPHBSCellularFauxCardInfoViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_NPHBSCellularFauxCardNavigationController
|| __DATA.__objc_data _OBJC_METACLASS_$_NPHBSCellularFauxCardViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_NPHCellularBridgeBarcodeScannerView
|| __DATA.__objc_data _OBJC_METACLASS_$_NPHCellularBridgeUIManager
|| __DATA.__objc_data _OBJC_METACLASS_$_NPHCellularSetupViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_NPHServiceSubscriptionInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_NPHSetupTableViewCell
|| __DATA.__objc_data _OBJC_METACLASS_$_NPHSharedUtilities
|| __DATA_CONST.__const _NANOPHONE_APPLICATION_BUNDLE_ID
|| __DATA_CONST.__const _NPHCameraHitRuntimeError
|| __DATA_CONST.__const _NPHCellularDataUsageErrorDomain
|| __TEXT.__const _CellularBridgeUIVersionNumber
|| __TEXT.__const _CellularBridgeUIVersionString
|| __TEXT.__text _COSDeviceAssetDirectoryPath
|| __TEXT.__text _COSDeviceAssetString
|| __TEXT.__text _CTSUServerConnectionRef
|| __TEXT.__text _CTSUServerQueue
|| __TEXT.__text _IsCurrentDevicePairing
|| __TEXT.__text _NPHDeriveProgramName
|| __TEXT.__text _NPHDeviceHasBaseband
|| __TEXT.__text _NPHDeviceOSIsInternalInstall
|| __TEXT.__text _NPHIsDebugBuild
|| __TEXT.__text _NPHIsWalkaboutEnabled
|| __TEXT.__text _NPHSharedUtilitiesAppendBuildVersion
|| __TEXT.__text _NPHSharedUtilitiesLocaleHaptic
|| __TEXT.__text _NPHSharedUtilitiesLocaleHapticDucked
|| __TEXT.__text _NPHWiFiStringKey
|| __TEXT.__text _NSStringFromTUCallDisconnectedReason
|| __TEXT.__text _mach_time_elapsed_to_seconds
|| __TEXT.__text _nph_ensure_on_main_queue
|| __TEXT.__text _nph_general_log
__ AVFoundation: _AVCaptureSessionPresetHigh
__ AVFoundation: _AVCaptureSessionRuntimeErrorNotification
__ AVFoundation: _AVLayerVideoGravityResizeAspectFill
__ AVFoundation: _AVMediaTypeVideo
__ AVFoundation: _OBJC_CLASS_$_AVCaptureDevice
__ AVFoundation: _OBJC_CLASS_$_AVCaptureDeviceInput
__ AVFoundation: _OBJC_CLASS_$_AVCaptureMetadataOutput
__ AVFoundation: _OBJC_CLASS_$_AVCaptureSession
__ AVFoundation: _OBJC_CLASS_$_AVCaptureVideoPreviewLayer
__ AppSupport: _OBJC_CLASS_$_RadiosPreferences
__ AudioToolbox: _AudioServicesPlaySystemSound
__ BridgePreferences: _BPSBridgeTintColor
__ BridgePreferences: _BPSPairingBackupRestoredFrom
__ BridgePreferences: _BPSPairingDeviceRestoredFrom
__ BridgePreferences: _BPSPresentGizmoUnreachableServiceAlertWithDismissalHandler
__ BridgePreferences: _OBJC_CLASS_$_BPSFollowUpController
__ BridgePreferences: _OBJC_CLASS_$_BPSTTRMetadata
__ BridgePreferences: _OBJC_CLASS_$_BPSTinkerSupport
__ BridgePreferences: _OBJC_CLASS_$_BPSWelcomeOptinViewController
__ BridgePreferences: _OBJC_METACLASS_$_BPSWelcomeOptinViewController
__ CellularPlanManager: _CTCellularPlanErrorDomain
__ CellularPlanManager: _CTCellularPlanInfoDidChangeNotification
__ CellularPlanManager: _CTCellularPlanLocalInfoDidChangeNotification
__ CellularPlanManager: _CTCellularPlanRemoteProvisioningDidBecomeAvailable
__ CellularPlanManager: _OBJC_CLASS_$_CTCellularPlanManager
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterRemoveEveryObserver
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: _kCFAllocatorDefault
__ CoreGraphics: _CGRectContainsRect
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ CoreTelephony: _OBJC_CLASS_$_CTBundle
__ CoreTelephony: _OBJC_CLASS_$_CoreTelephonyClient
__ CoreTelephony: __CTServerConnectionAddIdentifierException
__ CoreTelephony: __CTServerConnectionCanSetCapabilityExtended
__ CoreTelephony: __CTServerConnectionCopyProviderNameUsingCarrierBundle
__ CoreTelephony: __CTServerConnectionCreateOnTargetQueue
__ CoreTelephony: __CTServerConnectionSetCellularDataIsEnabled
__ CoreTelephony: __CTServerConnectionShouldWarnDisabledLteMayImpactService
__ CoreTelephony: _kCTCapabilityAgent
__ CoreTelephony: _kCTSIMSupportSIMStatusNotInserted
__ CoreTelephony: _kCTSIMSupportSIMStatusReady
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSKeyValueChangeNewKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSIndexPath
__ Foundation: _OBJC_CLASS_$_NSLayoutConstraint
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotification
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNotificationQueue
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSUUID
__ NanoRegistry: _NRDevicePropertyCSN
__ NanoRegistry: _NRDevicePropertyGreenTeaDevice
__ NanoRegistry: _NRDevicePropertyHomeButtonType
__ NanoRegistry: _NRDevicePropertyIsAltAccount
__ NanoRegistry: _NRDevicePropertyIsPaired
__ NanoRegistry: _NRPairedDeviceRegistryWatchDidBecomeActiveDarwinNotification
__ NanoRegistry: _OBJC_CLASS_$_NRDevice
__ NanoRegistry: _OBJC_CLASS_$_NRPairedDeviceRegistry
__ PBBridgeSupport: _OBJC_CLASS_$_PBBridgeAkashiReporter
__ QuartzCore: _OBJC_CLASS_$_CAShapeLayer
__ QuartzCore: _OBJC_CLASS_$_CATransaction
__ QuartzCore: _kCAFillRuleEvenOdd
__ QuartzCore: _kCAGravityCenter
__ SoftLinking: __sl_dlopen_audited
__ SoftwareUpdateBridge: _OBJC_CLASS_$_SUBManager
__ TelephonyUtilities: _TUFormattedPhoneNumber
__ TelephonyUtilities: _TUHomeCountryCode
__ UIKit: _OBJC_CLASS_$_UIActivityIndicatorView
__ UIKit: _OBJC_CLASS_$_UIAlertAction
__ UIKit: _OBJC_CLASS_$_UIAlertController
__ UIKit: _OBJC_CLASS_$_UIBarButtonItem
__ UIKit: _OBJC_CLASS_$_UIBezierPath
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIFontDescriptor
__ UIKit: _OBJC_CLASS_$_UINavigationController
__ UIKit: _OBJC_CLASS_$_UITableViewCell
__ UIKit: _OBJC_CLASS_$_UITextField
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_METACLASS_$_UINavigationController
__ UIKit: _OBJC_METACLASS_$_UITableViewCell
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _UIEdgeInsetsZero
__ UIKit: _UIFontTextStyleTitle0
__ UIKit: _UIKeyboardDidShowNotification
__ UIKit: _UIKeyboardFrameBeginUserInfoKey
__ UIKit: _UIKeyboardWillHideNotification
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _MGGetProductType
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _mach_timebase_info
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _strrchr
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
NPHBSCellularFauxCardNavigationController : UINavigationController /System/Library/Frameworks/Foundation.framework/Foundation
  // instance methods
  -[NPHBSCellularFauxCardNavigationController supportedInterfaceOrientations]


NPHCellularBridgeBarcodeScannerView : UIView /System/Library/Frameworks/Foundation.framework/Foundation <AVCaptureMetadataOutputObjectsDelegate>
 @property  AVCaptureVideoPreviewLayer *previewLayer
 @property  BOOL canUseCamera
 @property  BOOL isRunning
 @property  <NPHCellularBridgeBarcodeScannerCaptureDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NPHCellularBridgeBarcodeScannerView initWithDelegate:]
  -[NPHCellularBridgeBarcodeScannerView dealloc]
  -[NPHCellularBridgeBarcodeScannerView .cxx_destruct]
  -[NPHCellularBridgeBarcodeScannerView startRunning]
  -[NPHCellularBridgeBarcodeScannerView stopRunning]
  -[NPHCellularBridgeBarcodeScannerView observeValueForKeyPath:ofObject:change:context:]
  -[NPHCellularBridgeBarcodeScannerView isRunning]
  -[NPHCellularBridgeBarcodeScannerView setDelegate:]
  -[NPHCellularBridgeBarcodeScannerView delegate]
  -[NPHCellularBridgeBarcodeScannerView layoutSubviews]
  -[NPHCellularBridgeBarcodeScannerView previewLayer]
  -[NPHCellularBridgeBarcodeScannerView handleRuntimeError:]
  -[NPHCellularBridgeBarcodeScannerView _changeCameraConfiguration]
  -[NPHCellularBridgeBarcodeScannerView setupCameraSession]
  -[NPHCellularBridgeBarcodeScannerView autoFocusAtPoint:]
  -[NPHCellularBridgeBarcodeScannerView autoExposeAtPoint:]
  -[NPHCellularBridgeBarcodeScannerView canUseCamera]


NPHCellularSetupViewController : BPSWelcomeOptinViewController /System/Library/PrivateFrameworks/PBBridgeSupport.framework/PBBridgeSupport <UIAdaptivePresentationControllerDelegate, BPSMiniFlowStepController>
 @property  long long type
 @property  BOOL haveReceivedProxyPlanItems
 @property  BOOL isTinkerCrossCarrierSetUpFlow
 @property  BOOL isCellularSetupFlowComplete
 @property  UIActivityIndicatorView *spinner
 @property  UIBarButtonItem *nextNavBarButtonItem
 @property  UIBarButtonItem *cancelNavBarButtonItem
 @property  NSString *detailString
 @property  NSString *suggestedButtonTitle
 @property  NSString *alternateButtonTitle
 @property  NSArray *userVisibleErrors
 @property  long long configuration
 @property  SUBManager *subManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <BPSSetupMiniFlowControllerDelegate> *miniFlowDelegate

  // class methods
  +[NPHCellularSetupViewController controllerNeedsToRun]
  +[NPHCellularSetupViewController _logEventOncePerSession:]
  +[NPHCellularSetupViewController loggedEvents]
  +[NPHCellularSetupViewController setLoggedEvents:]

  // instance methods
  -[NPHCellularSetupViewController viewDidLoad]
  -[NPHCellularSetupViewController detailString]
  -[NPHCellularSetupViewController spinner]
  -[NPHCellularSetupViewController dealloc]
  -[NPHCellularSetupViewController setType:]
  -[NPHCellularSetupViewController .cxx_destruct]
  -[NPHCellularSetupViewController transfer]
  -[NPHCellularSetupViewController presentationControllerWillDismiss:]
  -[NPHCellularSetupViewController setAlternateButtonTitle:]
  -[NPHCellularSetupViewController imageResource]
  -[NPHCellularSetupViewController type]
  -[NPHCellularSetupViewController viewDidAppear:]
  -[NPHCellularSetupViewController alternateButtonTitle]
  -[NPHCellularSetupViewController configuration]
  -[NPHCellularSetupViewController initWithConfiguration:]
  -[NPHCellularSetupViewController viewWillAppear:]
  -[NPHCellularSetupViewController setDetailString:]
  -[NPHCellularSetupViewController setSpinner:]
  -[NPHCellularSetupViewController setConfiguration:]
  -[NPHCellularSetupViewController titleString]
  -[NPHCellularSetupViewController wantsLightenBlendedScreen]
  -[NPHCellularSetupViewController suggestedButtonTitle]
  -[NPHCellularSetupViewController tapToRadarMetadata]
  -[NPHCellularSetupViewController okayButtonTitle]
  -[NPHCellularSetupViewController okayButtonPressed:]
  -[NPHCellularSetupViewController setIsCellularSetupFlowComplete:]
  -[NPHCellularSetupViewController setIsTinkerCrossCarrierSetUpFlow:]
  -[NPHCellularSetupViewController setHaveReceivedProxyPlanItems:]
  -[NPHCellularSetupViewController setUserVisibleErrors:]
  -[NPHCellularSetupViewController userVisibleErrors]
  -[NPHCellularSetupViewController checkForSoftwareUpdate]
  -[NPHCellularSetupViewController updateUIFromCellularPlanItems]
  -[NPHCellularSetupViewController userTappedNext:]
  -[NPHCellularSetupViewController setNextNavBarButtonItem:]
  -[NPHCellularSetupViewController userTappedSkip:]
  -[NPHCellularSetupViewController setCancelNavBarButtonItem:]
  -[NPHCellularSetupViewController updateUIToShowSpinner]
  -[NPHCellularSetupViewController ctCellularPlanInfoDidChange:]
  -[NPHCellularSetupViewController isGeminiSetup]
  -[NPHCellularSetupViewController isTinkerCrossCarrierSetUpFlow]
  -[NPHCellularSetupViewController navigateToNextView]
  -[NPHCellularSetupViewController miniFlowDelegate]
  -[NPHCellularSetupViewController userTappedConsent:]
  -[NPHCellularSetupViewController setUpNow]
  -[NPHCellularSetupViewController updateUIToShowSetUpNowMultipleSubscriptions]
  -[NPHCellularSetupViewController isCellularSetupFlowComplete]
  -[NPHCellularSetupViewController updateUIToShowPreinstall]
  -[NPHCellularSetupViewController updateUIToShowUserConsent:relevantPlan:]
  -[NPHCellularSetupViewController updateUIToShowContinue]
  -[NPHCellularSetupViewController updateUIToShowUserVisibleError]
  -[NPHCellularSetupViewController _decideWhetherToShowTransferOrSetup]
  -[NPHCellularSetupViewController cancelNavBarButtonItem]
  -[NPHCellularSetupViewController nextNavBarButtonItem]
  -[NPHCellularSetupViewController userTappedContinue:]
  -[NPHCellularSetupViewController userTappedSetUp:]
  -[NPHCellularSetupViewController userTappedTransfer:]
  -[NPHCellularSetupViewController userTappedSetUpNew:]
  -[NPHCellularSetupViewController userTappedSetUpCarrier:]
  -[NPHCellularSetupViewController trialOfferMessage]
  -[NPHCellularSetupViewController updateUIToShowSetUpNow]
  -[NPHCellularSetupViewController updateUIToShowPlanTransferOrSetUpNewOptions]
  -[NPHCellularSetupViewController updateUIToShowPlanSetUpTrial]
  -[NPHCellularSetupViewController setMiniFlowDelegate:]
  -[NPHCellularSetupViewController haveReceivedProxyPlanItems]
  -[NPHCellularSetupViewController setSuggestedButtonTitle:]
  -[NPHCellularSetupViewController subManager]
  -[NPHCellularSetupViewController setSubManager:]


NPHBSCellularFauxCardViewController : UIViewController /System/Library/Frameworks/Foundation.framework/Foundation <NPHCellularBridgeBarcodeScannerCaptureDelegate, NPHBSCellularConfirmationCodeViewControllerDelegate, UINavigationControllerDelegate>
 @property  @? completion
 @property  @? codelessActivationBlock
 @property  long long userConsentResponse
 @property  CTXPCServiceSubscriptionContext *subscriptionContext
 @property  UIView *fauxScanView
 @property  UIView *cutoutView
 @property  UIButton *bypassFauxCardButton
 @property  UIButton *enterFauxCardDataManuallyButton
 @property  UILabel *fauxDataLabel
 @property  UILabel *activationCodeLabel
 @property  NPHCellularBridgeBarcodeScannerView *scannerView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NPHBSCellularFauxCardViewController viewDidLoad]
  -[NPHBSCellularFauxCardViewController init]
  -[NPHBSCellularFauxCardViewController navigationController:willShowViewController:animated:]
  -[NPHBSCellularFauxCardViewController completion]
  -[NPHBSCellularFauxCardViewController setCompletion:]
  -[NPHBSCellularFauxCardViewController .cxx_destruct]
  -[NPHBSCellularFauxCardViewController captureOutput:didOutputMetadataObjects:fromConnection:]
  -[NPHBSCellularFauxCardViewController supportedInterfaceOrientations]
  -[NPHBSCellularFauxCardViewController viewWillAppear:]
  -[NPHBSCellularFauxCardViewController setSubscriptionContext:]
  -[NPHBSCellularFauxCardViewController subscriptionContext]
  -[NPHBSCellularFauxCardViewController viewDidLayoutSubviews]
  -[NPHBSCellularFauxCardViewController userConsentResponse]
  -[NPHBSCellularFauxCardViewController cancelAction:]
  -[NPHBSCellularFauxCardViewController captureSession:isRunning:]
  -[NPHBSCellularFauxCardViewController codelessActivationBlock]
  -[NPHBSCellularFauxCardViewController bypassFauxCardButton]
  -[NPHBSCellularFauxCardViewController enterFauxCardDataManuallyButton]
  -[NPHBSCellularFauxCardViewController _setFauxCardData:]
  -[NPHBSCellularFauxCardViewController cutoutView]
  -[NPHBSCellularFauxCardViewController _getFauxCardData]
  -[NPHBSCellularFauxCardViewController addNewRemotePlanWithCardData:confirmationCode:]
  -[NPHBSCellularFauxCardViewController presentConfirmationCodeRequest]
  -[NPHBSCellularFauxCardViewController cellularConfirmationCodeViewController:confirmedWithCode:]
  -[NPHBSCellularFauxCardViewController bypassFauxCard:]
  -[NPHBSCellularFauxCardViewController enterFauxCardDataManually:]
  -[NPHBSCellularFauxCardViewController setCodelessActivationBlock:]
  -[NPHBSCellularFauxCardViewController setUserConsentResponse:]
  -[NPHBSCellularFauxCardViewController fauxScanView]
  -[NPHBSCellularFauxCardViewController setFauxScanView:]
  -[NPHBSCellularFauxCardViewController setCutoutView:]
  -[NPHBSCellularFauxCardViewController setBypassFauxCardButton:]
  -[NPHBSCellularFauxCardViewController setEnterFauxCardDataManuallyButton:]
  -[NPHBSCellularFauxCardViewController fauxDataLabel]
  -[NPHBSCellularFauxCardViewController setFauxDataLabel:]
  -[NPHBSCellularFauxCardViewController activationCodeLabel]
  -[NPHBSCellularFauxCardViewController setActivationCodeLabel:]
  -[NPHBSCellularFauxCardViewController scannerView]
  -[NPHBSCellularFauxCardViewController setScannerView:]


NPHServiceSubscriptionInfo : NSObject /usr/lib/libSystem.B.dylib
 @property  CTXPCServiceSubscriptionContext *serviceSubscriptionContext
 @property  BOOL shouldShowAddNewRemotePlan
 @property  BOOL shouldOfferRemotePlan
 @property  BOOL shouldOfferTrialPlan
 @property  BOOL shouldOfferSignupCompletion
 @property  NSString *trialPlanType
 @property  NSString *SIMStatus
 @property  unsigned long planFlows
 @property  NSError *persistentError

  // instance methods
  -[NPHServiceSubscriptionInfo .cxx_destruct]
  -[NPHServiceSubscriptionInfo SIMStatus]
  -[NPHServiceSubscriptionInfo setSIMStatus:]
  -[NPHServiceSubscriptionInfo trialPlanType]
  -[NPHServiceSubscriptionInfo serviceSubscriptionContext]
  -[NPHServiceSubscriptionInfo shouldShowAddNewRemotePlan]
  -[NPHServiceSubscriptionInfo shouldOfferRemotePlan]
  -[NPHServiceSubscriptionInfo shouldOfferTrialPlan]
  -[NPHServiceSubscriptionInfo shouldOfferSignupCompletion]
  -[NPHServiceSubscriptionInfo planFlows]
  -[NPHServiceSubscriptionInfo persistentError]
  -[NPHServiceSubscriptionInfo setServiceSubscriptionContext:]
  -[NPHServiceSubscriptionInfo setShouldShowAddNewRemotePlan:]
  -[NPHServiceSubscriptionInfo setShouldOfferRemotePlan:]
  -[NPHServiceSubscriptionInfo setShouldOfferTrialPlan:]
  -[NPHServiceSubscriptionInfo setShouldOfferSignupCompletion:]
  -[NPHServiceSubscriptionInfo setTrialPlanType:]
  -[NPHServiceSubscriptionInfo setPlanFlows:]
  -[NPHServiceSubscriptionInfo setPersistentError:]


NPHCellularBridgeUIManager : NSObject /usr/lib/libSystem.B.dylib
 @property  CTRemotePlan *transferableRemotePlan
 @property  CTDeviceIdentifier *transferableRemoteDeviceID
 @property  NSString *tinkerFamilyMemberFirstName
 @property  BOOL cellularPlanIsSetUp
 @property  BOOL isAnyCellularPlanActivating
 @property  NSArray *serviceSubscriptionsInUse
 @property  NSArray *serviceSubscriptionsToOfferUser
 @property  NSArray *serviceSubscriptionsShouldShowAddNewRemotePlan
 @property  NSArray *serviceSubscriptionsOfferingRemotePlan
 @property  NSArray *serviceSubscriptionsOfferingTrialPlan
 @property  BOOL shouldOfferRemotePlan
 @property  BOOL shouldOfferTrialPlan
 @property  BOOL LTEMayImpactService
 @property  BOOL shouldOfferSignupCompletion
 @property  NSString *trialPlanType

  // class methods
  +[NPHCellularBridgeUIManager sharedInstance]
  +[NPHCellularBridgeUIManager carrierName]
  +[NPHCellularBridgeUIManager presentCellularError:onViewController:]
  +[NPHCellularBridgeUIManager _isSubscriptionInUse:]
  +[NPHCellularBridgeUIManager _presentAirplaneModeOnAlertOnViewController:]
  +[NPHCellularBridgeUIManager _presentCellularRequiredModeAlertOnViewController:]
  +[NPHCellularBridgeUIManager _presentErrorTitled:withMessage:onViewController:]
  +[NPHCellularBridgeUIManager _presentErrorTitle:onViewController:withActionTitle:actionHandler:]

  // instance methods
  -[NPHCellularBridgeUIManager init]
  -[NPHCellularBridgeUIManager dealloc]
  -[NPHCellularBridgeUIManager .cxx_destruct]
  -[NPHCellularBridgeUIManager simStatusDidChange:status:]
  -[NPHCellularBridgeUIManager subscriptionInfoDidChange]
  -[NPHCellularBridgeUIManager activeSubscriptionsDidChange]
  -[NPHCellularBridgeUIManager serviceSubscriptionsOfferingRemotePlan]
  -[NPHCellularBridgeUIManager finishRemoteProvisioning]
  -[NPHCellularBridgeUIManager fetchTinkerFamilyMember]
  -[NPHCellularBridgeUIManager serviceSubscriptionsToOfferUser]
  -[NPHCellularBridgeUIManager selectedCellularPlan]
  -[NPHCellularBridgeUIManager cellularPlans]
  -[NPHCellularBridgeUIManager cellularUseErrors]
  -[NPHCellularBridgeUIManager updateCellularPlansWithFetch:]
  -[NPHCellularBridgeUIManager isAnyCellularPlanActivating]
  -[NPHCellularBridgeUIManager cellularPlanIsSetUp]
  -[NPHCellularBridgeUIManager isGeminiSetup]
  -[NPHCellularBridgeUIManager consentRequiredRelevantCellularPlanItem:]
  -[NPHCellularBridgeUIManager cellularPlanRequiringPreInstallConsent]
  -[NPHCellularBridgeUIManager installPendingCellularPlan:withCompletion:]
  -[NPHCellularBridgeUIManager setUpCellularPlanOnViewController:withContext:withCompletion:]
  -[NPHCellularBridgeUIManager transferCellularPlanOnViewController:withCompletion:]
  -[NPHCellularBridgeUIManager shouldAllowUserToAddOrSetUpPlan]
  -[NPHCellularBridgeUIManager tinkerFamilyMemberFirstName]
  -[NPHCellularBridgeUIManager userConsentMessageForConsentType:relevantPlanItem:]
  -[NPHCellularBridgeUIManager transferableRemotePlan]
  -[NPHCellularBridgeUIManager simLabelForSubscription:]
  -[NPHCellularBridgeUIManager trialPlanType]
  -[NPHCellularBridgeUIManager isTinkerCrossCarrierSetup]
  -[NPHCellularBridgeUIManager shouldAllowUserToTransferPlanFromDeviceWithCSN:]
  -[NPHCellularBridgeUIManager serviceSubscriptionsOfferingTrialPlan]
  -[NPHCellularBridgeUIManager carrierNameForSubscription:]
  -[NPHCellularBridgeUIManager lteOverrideForSubscription:]
  -[NPHCellularBridgeUIManager carrierPhoneNumberForSubscription:]
  -[NPHCellularBridgeUIManager _currentDeviceCSN]
  -[NPHCellularBridgeUIManager shouldOfferRemotePlan]
  -[NPHCellularBridgeUIManager shouldOfferTrialPlan]
  -[NPHCellularBridgeUIManager shouldOfferSignupCompletion]
  -[NPHCellularBridgeUIManager _ctCellularPlanInfoDidChange:]
  -[NPHCellularBridgeUIManager _localPlanInfoDidChange:]
  -[NPHCellularBridgeUIManager _ctCellularRemoteProvisioningDidBecomeAvailable:]
  -[NPHCellularBridgeUIManager setTransferableRemotePlan:]
  -[NPHCellularBridgeUIManager setTransferableRemoteDeviceID:]
  -[NPHCellularBridgeUIManager _updateCoreTelephonyClientInfo]
  -[NPHCellularBridgeUIManager _updateSIMStatusForSubscriptionContext:withStatus:]
  -[NPHCellularBridgeUIManager _serviceSubscriptionInfoForSubscriptionContext:]
  -[NPHCellularBridgeUIManager _updateServiceSubscriptionInfo:]
  -[NPHCellularBridgeUIManager _prePromptForUserConsentIfNecessary:]
  -[NPHCellularBridgeUIManager _updateTransferableCellularPlanFromDeviceWithCSN:]
  -[NPHCellularBridgeUIManager transferableRemoteDeviceID]
  -[NPHCellularBridgeUIManager allCompanionSIMsMissing]
  -[NPHCellularBridgeUIManager _isCarrierSetupFlowUnsupportedForServiceSubscription:]
  -[NPHCellularBridgeUIManager _setUpCellularPlanDirectWithContext:withCompletion:]
  -[NPHCellularBridgeUIManager _setUpCellularPlanWithActivationCodeOnViewController:withContext:withCompletion:codelessActivationBlock:]
  -[NPHCellularBridgeUIManager _prePromptUserForConsentTextType:relevantPlanItem:completionBlock:]
  -[NPHCellularBridgeUIManager _activeDeviceCSNList]
  -[NPHCellularBridgeUIManager _updateCellularPlansWithFetch:forCSN:]
  -[NPHCellularBridgeUIManager _updateShouldShowAddNewRemotePlan]
  -[NPHCellularBridgeUIManager _updateIsRemotePlanCapable]
  -[NPHCellularBridgeUIManager _updateShouldWarnAboutLTEMayImpactService]
  -[NPHCellularBridgeUIManager _isPersistentError:]
  -[NPHCellularBridgeUIManager _isSetupBlockingError:]
  -[NPHCellularBridgeUIManager serviceSubscriptionsInUse]
  -[NPHCellularBridgeUIManager _updateSIMStatusForAllSubscriptionContexts]
  -[NPHCellularBridgeUIManager _trialPlanTypeForContext:]
  -[NPHCellularBridgeUIManager setTinkerFamilyMemberFirstName:]
  -[NPHCellularBridgeUIManager serviceSubscriptionsShouldShowAddNewRemotePlan]
  -[NPHCellularBridgeUIManager _nrPairedWatchDidBecomeActive]
  -[NPHCellularBridgeUIManager startRemoteProvisioning]
  -[NPHCellularBridgeUIManager subscriptionContextForCellularPlanItem:]
  -[NPHCellularBridgeUIManager displayNameForCellularPlan:]
  -[NPHCellularBridgeUIManager formattedPhoneNumberForSubscription:]
  -[NPHCellularBridgeUIManager isCarrierSetupFlowUnsupported]
  -[NPHCellularBridgeUIManager LTEMayImpactService]


NPHSetupTableViewCell : UITableViewCell /System/Library/Frameworks/Foundation.framework/Foundation
 @property  UITextField *editableTextField

  // class methods
  +[NPHSetupTableViewCell rowHeight]

  // instance methods
  -[NPHSetupTableViewCell .cxx_destruct]
  -[NPHSetupTableViewCell editableTextField]
  -[NPHSetupTableViewCell initWithTag:delegate:]
  -[NPHSetupTableViewCell setEditableTextField:]


NPHSharedUtilities : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[NPHSharedUtilities isActiveDeviceTinker]
  +[NPHSharedUtilities isActiveDeviceSpecial]
  +[NPHSharedUtilities pairedDeviceHasHomeButton]
  +[NPHSharedUtilities isEitherDeviceChinaRegionCellular]


NPHBSCellularConfirmationCodeViewController : UIViewController /System/Library/Frameworks/Foundation.framework/Foundation <UITextFieldDelegate>
 @property  <NPHBSCellularConfirmationCodeViewControllerDelegate> *delegate
 @property  UILabel *confirmationCodeTitleLabel
 @property  UITableView *infoTableView
 @property  NSLayoutConstraint *infoTableViewHeightConstraint
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NPHBSCellularConfirmationCodeViewController viewDidLoad]
  -[NPHBSCellularConfirmationCodeViewController tableView:heightForRowAtIndexPath:]
  -[NPHBSCellularConfirmationCodeViewController init]
  -[NPHBSCellularConfirmationCodeViewController tableView:numberOfRowsInSection:]
  -[NPHBSCellularConfirmationCodeViewController .cxx_destruct]
  -[NPHBSCellularConfirmationCodeViewController tableView:cellForRowAtIndexPath:]
  -[NPHBSCellularConfirmationCodeViewController viewDidAppear:]
  -[NPHBSCellularConfirmationCodeViewController textFieldDidBeginEditing:]
  -[NPHBSCellularConfirmationCodeViewController textFieldShouldReturn:]
  -[NPHBSCellularConfirmationCodeViewController setDelegate:]
  -[NPHBSCellularConfirmationCodeViewController viewDidLayoutSubviews]
  -[NPHBSCellularConfirmationCodeViewController delegate]
  -[NPHBSCellularConfirmationCodeViewController confirm:]
  -[NPHBSCellularConfirmationCodeViewController confirmationCodeTitleLabel]
  -[NPHBSCellularConfirmationCodeViewController setConfirmationCodeTitleLabel:]
  -[NPHBSCellularConfirmationCodeViewController infoTableView]
  -[NPHBSCellularConfirmationCodeViewController setInfoTableView:]
  -[NPHBSCellularConfirmationCodeViewController infoTableViewHeightConstraint]
  -[NPHBSCellularConfirmationCodeViewController setInfoTableViewHeightConstraint:]


NPHBSCellularFauxCardInfoViewController : UIViewController /System/Library/Frameworks/Foundation.framework/Foundation <UITextFieldDelegate, UITableViewDelegate, UITableViewDataSource>
 @property  @? completion
 @property  CTXPCServiceSubscriptionContext *subscriptionContext
 @property  UILabel *enterActivationLabel
 @property  UITableView *infoTableView
 @property  NSLayoutConstraint *infoTableViewHeightConstraint
 @property  UIScrollView *scrollView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NPHBSCellularFauxCardInfoViewController viewDidLoad]
  -[NPHBSCellularFauxCardInfoViewController tableView:heightForRowAtIndexPath:]
  -[NPHBSCellularFauxCardInfoViewController init]
  -[NPHBSCellularFauxCardInfoViewController completion]
  -[NPHBSCellularFauxCardInfoViewController tableView:numberOfRowsInSection:]
  -[NPHBSCellularFauxCardInfoViewController setCompletion:]
  -[NPHBSCellularFauxCardInfoViewController .cxx_destruct]
  -[NPHBSCellularFauxCardInfoViewController scrollView]
  -[NPHBSCellularFauxCardInfoViewController tableView:cellForRowAtIndexPath:]
  -[NPHBSCellularFauxCardInfoViewController viewDidAppear:]
  -[NPHBSCellularFauxCardInfoViewController setScrollView:]
  -[NPHBSCellularFauxCardInfoViewController textFieldDidBeginEditing:]
  -[NPHBSCellularFauxCardInfoViewController textFieldShouldReturn:]
  -[NPHBSCellularFauxCardInfoViewController viewWillAppear:]
  -[NPHBSCellularFauxCardInfoViewController setSubscriptionContext:]
  -[NPHBSCellularFauxCardInfoViewController viewWillDisappear:]
  -[NPHBSCellularFauxCardInfoViewController subscriptionContext]
  -[NPHBSCellularFauxCardInfoViewController viewDidLayoutSubviews]
  -[NPHBSCellularFauxCardInfoViewController configureCell:atIndexPath:]
  -[NPHBSCellularFauxCardInfoViewController textFieldDidEndEditing:]
  -[NPHBSCellularFauxCardInfoViewController keyboardWasShown:]
  -[NPHBSCellularFauxCardInfoViewController keyboardWillBeHidden:]
  -[NPHBSCellularFauxCardInfoViewController infoTableView]
  -[NPHBSCellularFauxCardInfoViewController setInfoTableView:]
  -[NPHBSCellularFauxCardInfoViewController infoTableViewHeightConstraint]
  -[NPHBSCellularFauxCardInfoViewController setInfoTableViewHeightConstraint:]
  -[NPHBSCellularFauxCardInfoViewController scrollViewForKeyboardIfNecessary]
  -[NPHBSCellularFauxCardInfoViewController activatePlan:]
  -[NPHBSCellularFauxCardInfoViewController enterActivationLabel]
  -[NPHBSCellularFauxCardInfoViewController setEnterActivationLabel:]


(NSString_StringWithPositionalSpecifiersFormat)
	// class methods
	+[(NSString_StringWithPositionalSpecifiersFormat) stringWithPositionalSpecifiersFormat:arguments:]

	// instance methods
	-[(NSString_StringWithPositionalSpecifiersFormat) nph_localizedUppercaseString]

NRDevice(Configuration)
	// class methods
	+[NRDevice(Configuration) activeDevice]

	// instance methods
	-[NRDevice(Configuration) isTinker]
	-[NRDevice(Configuration) hasHomeButton]
	-[NRDevice(Configuration) isRunningInternalBuild]

(NPHCellularError)
	// class methods
	+[(NPHCellularError) _canControlLTEVoiceOptionsSeparately]
	+[(NPHCellularError) NPHCellularErrorWithCode:forSubscriptionContext:]
	+[(NPHCellularError) _titleAndMessageDictForError:forSubscriptionContext:]
	+[(NPHCellularError) NPHCellularSanitizedError:forSubscriptionContext:]

(Filtering)
	// instance methods
	-[(Filtering) max:]
	-[(Filtering) map:]
	-[(Filtering) objectsPassingTest:]
	-[(Filtering) firstObjectPassingTest:]
	-[(Filtering) hasObjectPassingTest:]

(NPHIdleTime)
	// class methods
	+[(NPHIdleTime) _NPHIdleTimeNotification:]
	+[(NPHIdleTime) NPHRequestIdleTimeNotification]
	+[(NPHIdleTime) performBlockAtIdle:]

	// instance methods
	-[(NPHIdleTime) nph_debounce:delay:]

01 00 0900 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureDevice 
01 00 0900 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureDeviceInput 
01 00 0900 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureMetadataOutput 
01 00 0900 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureSession 
01 00 0900 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureVideoPreviewLayer 
01 00 0100 /System/Library/PrivateFrameworks/BridgePreferences.framework/BridgePreferences: BPSFollowUpController 
01 00 0100 /System/Library/PrivateFrameworks/BridgePreferences.framework/BridgePreferences: BPSTTRMetadata 
01 00 0100 /System/Library/PrivateFrameworks/BridgePreferences.framework/BridgePreferences: BPSTinkerSupport 
01 00 0100 /System/Library/PrivateFrameworks/BridgePreferences.framework/BridgePreferences: BPSWelcomeOptinViewController 
01 00 0700 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAShapeLayer 
01 00 0700 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransaction 
01 00 0600 /System/Library/Frameworks/CoreTelephony.framework/CoreTelephony: CTBundle 
01 00 0c00 /System/Library/PrivateFrameworks/CellularPlanManager.framework/CellularPlanManager: CTCellularPlanManager 
01 00 0600 /System/Library/Frameworks/CoreTelephony.framework/CoreTelephony: CoreTelephonyClient 
01 00 0500 /System/Library/PrivateFrameworks/NanoRegistry.framework/NanoRegistry: NRDevice 
01 00 0500 /System/Library/PrivateFrameworks/NanoRegistry.framework/NanoRegistry: NRPairedDeviceRegistry 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexPath 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSLayoutConstraint 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotification 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationQueue 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1000 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0200 /System/Library/PrivateFrameworks/PBBridgeSupport.framework/PBBridgeSupport: PBBridgeAkashiReporter 
01 00 0b00 /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport: RadiosPreferences 
01 00 0300 /System/Library/PrivateFrameworks/SoftwareUpdateBridge.framework/SoftwareUpdateBridge: SUBManager 
01 00 0d00 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivityIndicatorView 
01 00 0d00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertAction 
01 00 0d00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertController 
01 00 0d00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBarButtonItem 
01 00 0d00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBezierPath 
01 00 0d00 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 0d00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 0d00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFontDescriptor 
01 00 0d00 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationController 
01 00 0d00 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewCell 
01 00 0d00 /System/Library/Frameworks/UIKit.framework/UIKit: UITextField 
01 00 0d00 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 0d00 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
