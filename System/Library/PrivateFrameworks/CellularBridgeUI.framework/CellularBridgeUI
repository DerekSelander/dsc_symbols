|| __DATA.__data _NPHCellularErrorDomain
|| __DATA.__data _NPHCellularErrorLinkKey
|| __DATA.__data _NPHCellularErrorLinkTextKey
|| __DATA.__data _NPHCellularErrorTitleKey
|| __DATA.__data _NPHCellularPlanInfoDidChangeNotification
|| __DATA.__data _NPHCellularPlanInfoError
|| __DATA.__objc_data _OBJC_CLASS_$_NPHBSCellularConfirmationCodeViewController
|| __DATA.__objc_data _OBJC_CLASS_$_NPHBSCellularFauxCardInfoViewController
|| __DATA.__objc_data _OBJC_CLASS_$_NPHBSCellularFauxCardNavigationController
|| __DATA.__objc_data _OBJC_CLASS_$_NPHBSCellularFauxCardViewController
|| __DATA.__objc_data _OBJC_CLASS_$_NPHCellularBridgeBarcodeScannerView
|| __DATA.__objc_data _OBJC_CLASS_$_NPHCellularBridgeUIManager
|| __DATA.__objc_data _OBJC_CLASS_$_NPHSIMChoiceViewController
|| __DATA.__objc_data _OBJC_CLASS_$_NPHServiceSubscriptionInfo
|| __DATA.__objc_data _OBJC_CLASS_$_NPHSetupTableViewCell
|| __DATA.__objc_data _OBJC_CLASS_$_NPHSharedUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_NPHBSCellularConfirmationCodeViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_NPHBSCellularFauxCardInfoViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_NPHBSCellularFauxCardNavigationController
|| __DATA.__objc_data _OBJC_METACLASS_$_NPHBSCellularFauxCardViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_NPHCellularBridgeBarcodeScannerView
|| __DATA.__objc_data _OBJC_METACLASS_$_NPHCellularBridgeUIManager
|| __DATA.__objc_data _OBJC_METACLASS_$_NPHSIMChoiceViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_NPHServiceSubscriptionInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_NPHSetupTableViewCell
|| __DATA.__objc_data _OBJC_METACLASS_$_NPHSharedUtilities
|| __DATA_CONST.__const _NANOPHONE_APPLICATION_BUNDLE_ID
|| __DATA_CONST.__const _NPHCameraHitRuntimeError
|| __DATA_CONST.__const _NPHCellularDataUsageErrorDomain
|| __TEXT.__const _CellularBridgeUIVersionNumber
|| __TEXT.__const _CellularBridgeUIVersionString
|| __TEXT.__text _COSDeviceAssetDirectoryPath
|| __TEXT.__text _COSDeviceAssetString
|| __TEXT.__text _CTSUServerConnectionRef
|| __TEXT.__text _CTSUServerQueue
|| __TEXT.__text _IsCurrentDevicePairing
|| __TEXT.__text _NPHDeriveProgramName
|| __TEXT.__text _NPHDeviceHasBaseband
|| __TEXT.__text _NPHDeviceOSIsInternalInstall
|| __TEXT.__text _NPHIsDebugBuild
|| __TEXT.__text _NPHIsWalkaboutEnabled
|| __TEXT.__text _NPHSharedUtilitiesAppendBuildVersion
|| __TEXT.__text _NPHSharedUtilitiesLocaleHaptic
|| __TEXT.__text _NPHSharedUtilitiesLocaleHapticDucked
|| __TEXT.__text _NPHWiFiStringKey
|| __TEXT.__text _NSStringFromTUCallDisconnectedReason
|| __TEXT.__text _PresentCellularError
|| __TEXT.__text _mach_time_elapsed_to_seconds
|| __TEXT.__text _nph_ensure_on_main_queue
|| __TEXT.__text _nph_general_log
__ AVFoundation: _AVCaptureSessionPresetHigh
__ AVFoundation: _AVCaptureSessionRuntimeErrorNotification
__ AVFoundation: _AVLayerVideoGravityResizeAspectFill
__ AVFoundation: _AVMediaTypeVideo
__ AVFoundation: _OBJC_CLASS_$_AVCaptureDevice
__ AVFoundation: _OBJC_CLASS_$_AVCaptureDeviceInput
__ AVFoundation: _OBJC_CLASS_$_AVCaptureMetadataOutput
__ AVFoundation: _OBJC_CLASS_$_AVCaptureSession
__ AVFoundation: _OBJC_CLASS_$_AVCaptureVideoPreviewLayer
__ AppSupport: _OBJC_CLASS_$_RadiosPreferences
__ AudioToolbox: _AudioServicesPlaySystemSound
__ BridgePreferences: _BPSBridgeTintColor
__ BridgePreferences: _BPSPillButtonImage
__ BridgePreferences: _BPSPresentGizmoUnreachableServiceAlertWithDismissalHandler
__ BridgePreferences: _BPSRegularFontWithSize
__ BridgePreferences: _BPSScreenValueGetRelevantValue
__ BridgePreferences: _BPSScreenValueGetRelevantZoomValue
__ BridgePreferences: _BPSSetupBackgroundColor
__ BridgePreferences: _OBJC_CLASS_$_BPSSetupOptinViewController
__ BridgePreferences: _OBJC_METACLASS_$_BPSSetupOptinViewController
__ CellularPlanManager: _CTCellularPlanErrorDomain
__ CellularPlanManager: _CTCellularPlanInfoDidChangeNotification
__ CellularPlanManager: _CTCellularPlanLocalInfoDidChangeNotification
__ CellularPlanManager: _CTCellularPlanRemoteProvisioningDidBecomeAvailable
__ CellularPlanManager: _OBJC_CLASS_$_CTCellularPlanManager
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFStringGetTypeID
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__
__ CoreFoundation: _kCFAllocatorDefault
__ CoreGraphics: _CGRectContainsRect
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ CoreTelephony: _CTCellularDataPlanSetIsEnabled
__ CoreTelephony: _OBJC_CLASS_$_CTBundle
__ CoreTelephony: _OBJC_CLASS_$_CoreTelephonyClient
__ CoreTelephony: __CTServerConnectionAddIdentifierException
__ CoreTelephony: __CTServerConnectionCanSetCapabilityExtended
__ CoreTelephony: __CTServerConnectionCarrierSettingsCopyValue
__ CoreTelephony: __CTServerConnectionCopyProviderNameUsingCarrierBundle
__ CoreTelephony: __CTServerConnectionCreateOnTargetQueue
__ CoreTelephony: __CTServerConnectionShouldWarnDisabledLteMayImpactService
__ CoreTelephony: _kCTCapabilityAgent
__ CoreTelephony: _kCTSIMSupportSIMStatusNotInserted
__ CoreTelephony: _kCTSIMSupportSIMStatusReady
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSKeyValueChangeNewKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSIndexPath
__ Foundation: _OBJC_CLASS_$_NSLayoutConstraint
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotification
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNotificationQueue
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ NanoRegistry: _NRDevicePropertyCSN
__ NanoRegistry: _NRDevicePropertyIsPaired
__ NanoRegistry: _OBJC_CLASS_$_NRDevice
__ NanoRegistry: _OBJC_CLASS_$_NRPairedDeviceRegistry
__ QuartzCore: _OBJC_CLASS_$_CAShapeLayer
__ QuartzCore: _OBJC_CLASS_$_CATransaction
__ QuartzCore: _kCAFillRuleEvenOdd
__ QuartzCore: _kCAGravityCenter
__ UIKit: _OBJC_CLASS_$_UIActivityIndicatorView
__ UIKit: _OBJC_CLASS_$_UIAlertAction
__ UIKit: _OBJC_CLASS_$_UIAlertController
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIBarButtonItem
__ UIKit: _OBJC_CLASS_$_UIBezierPath
__ UIKit: _OBJC_CLASS_$_UIButton
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIFontDescriptor
__ UIKit: _OBJC_CLASS_$_UILabel
__ UIKit: _OBJC_CLASS_$_UINavigationController
__ UIKit: _OBJC_CLASS_$_UIScrollView
__ UIKit: _OBJC_CLASS_$_UITableViewCell
__ UIKit: _OBJC_CLASS_$_UITextField
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_METACLASS_$_UINavigationController
__ UIKit: _OBJC_METACLASS_$_UITableViewCell
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _UIApp
__ UIKit: _UIEdgeInsetsZero
__ UIKit: _UIFontTextStyleTitle0
__ UIKit: _UIKeyboardDidShowNotification
__ UIKit: _UIKeyboardFrameBeginUserInfoKey
__ UIKit: _UIKeyboardWillHideNotification
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _MGGetProductType
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _mach_timebase_info
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _strrchr
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
NPHBSCellularFauxCardNavigationController : UINavigationController /System/Library/Frameworks/Foundation.framework/Foundation
  // instance methods
  -[NPHBSCellularFauxCardNavigationController supportedInterfaceOrientations]


NPHCellularBridgeBarcodeScannerView : UIView /System/Library/Frameworks/Foundation.framework/Foundation <AVCaptureMetadataOutputObjectsDelegate>
 @property  AVCaptureVideoPreviewLayer *previewLayer
 @property  BOOL canUseCamera
 @property  BOOL isRunning
 @property  <NPHCellularBridgeBarcodeScannerCaptureDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NPHCellularBridgeBarcodeScannerView dealloc]
  -[NPHCellularBridgeBarcodeScannerView delegate]
  -[NPHCellularBridgeBarcodeScannerView setDelegate:]
  -[NPHCellularBridgeBarcodeScannerView .cxx_destruct]
  -[NPHCellularBridgeBarcodeScannerView observeValueForKeyPath:ofObject:change:context:]
  -[NPHCellularBridgeBarcodeScannerView isRunning]
  -[NPHCellularBridgeBarcodeScannerView initWithDelegate:]
  -[NPHCellularBridgeBarcodeScannerView layoutSubviews]
  -[NPHCellularBridgeBarcodeScannerView stopRunning]
  -[NPHCellularBridgeBarcodeScannerView startRunning]
  -[NPHCellularBridgeBarcodeScannerView previewLayer]
  -[NPHCellularBridgeBarcodeScannerView setupCameraSession]
  -[NPHCellularBridgeBarcodeScannerView handleRuntimeError:]
  -[NPHCellularBridgeBarcodeScannerView _changeCameraConfiguration]
  -[NPHCellularBridgeBarcodeScannerView autoFocusAtPoint:]
  -[NPHCellularBridgeBarcodeScannerView autoExposeAtPoint:]
  -[NPHCellularBridgeBarcodeScannerView canUseCamera]


NPHBSCellularFauxCardViewController : UIViewController /System/Library/Frameworks/Foundation.framework/Foundation <NPHCellularBridgeBarcodeScannerCaptureDelegate, NPHBSCellularConfirmationCodeViewControllerDelegate, UINavigationControllerDelegate>
 @property  @? completion
 @property  @? codelessActivationBlock
 @property  long long userConsentResponse
 @property  CTXPCServiceSubscriptionContext *subscriptionContext
 @property  UIView *fauxScanView
 @property  UIView *cutoutView
 @property  UIButton *bypassFauxCardButton
 @property  UIButton *enterFauxCardDataManuallyButton
 @property  UILabel *fauxDataLabel
 @property  UILabel *activationCodeLabel
 @property  NPHCellularBridgeBarcodeScannerView *scannerView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NPHBSCellularFauxCardViewController init]
  -[NPHBSCellularFauxCardViewController .cxx_destruct]
  -[NPHBSCellularFauxCardViewController setCompletion:]
  -[NPHBSCellularFauxCardViewController completion]
  -[NPHBSCellularFauxCardViewController viewWillAppear:]
  -[NPHBSCellularFauxCardViewController viewDidLoad]
  -[NPHBSCellularFauxCardViewController supportedInterfaceOrientations]
  -[NPHBSCellularFauxCardViewController viewDidLayoutSubviews]
  -[NPHBSCellularFauxCardViewController navigationController:willShowViewController:animated:]
  -[NPHBSCellularFauxCardViewController captureOutput:didOutputMetadataObjects:fromConnection:]
  -[NPHBSCellularFauxCardViewController cancelAction:]
  -[NPHBSCellularFauxCardViewController subscriptionContext]
  -[NPHBSCellularFauxCardViewController setSubscriptionContext:]
  -[NPHBSCellularFauxCardViewController userConsentResponse]
  -[NPHBSCellularFauxCardViewController captureSession:isRunning:]
  -[NPHBSCellularFauxCardViewController codelessActivationBlock]
  -[NPHBSCellularFauxCardViewController _setFauxCardData:]
  -[NPHBSCellularFauxCardViewController _getFauxCardData]
  -[NPHBSCellularFauxCardViewController addNewRemotePlanWithCardData:confirmationCode:]
  -[NPHBSCellularFauxCardViewController presentConfirmationCodeRequest]
  -[NPHBSCellularFauxCardViewController cellularConfirmationCodeViewController:confirmedWithCode:]
  -[NPHBSCellularFauxCardViewController bypassFauxCard:]
  -[NPHBSCellularFauxCardViewController enterFauxCardDataManually:]
  -[NPHBSCellularFauxCardViewController setCodelessActivationBlock:]
  -[NPHBSCellularFauxCardViewController setUserConsentResponse:]
  -[NPHBSCellularFauxCardViewController fauxScanView]
  -[NPHBSCellularFauxCardViewController setFauxScanView:]
  -[NPHBSCellularFauxCardViewController cutoutView]
  -[NPHBSCellularFauxCardViewController setCutoutView:]
  -[NPHBSCellularFauxCardViewController bypassFauxCardButton]
  -[NPHBSCellularFauxCardViewController setBypassFauxCardButton:]
  -[NPHBSCellularFauxCardViewController enterFauxCardDataManuallyButton]
  -[NPHBSCellularFauxCardViewController setEnterFauxCardDataManuallyButton:]
  -[NPHBSCellularFauxCardViewController fauxDataLabel]
  -[NPHBSCellularFauxCardViewController setFauxDataLabel:]
  -[NPHBSCellularFauxCardViewController activationCodeLabel]
  -[NPHBSCellularFauxCardViewController setActivationCodeLabel:]
  -[NPHBSCellularFauxCardViewController scannerView]
  -[NPHBSCellularFauxCardViewController setScannerView:]


NPHServiceSubscriptionInfo : NSObject /usr/lib/libSystem.B.dylib
 @property  CTXPCServiceSubscriptionContext *serviceSubscriptionContext
 @property  BOOL shouldShowAddNewRemotePlan
 @property  BOOL shouldOfferRemotePlan
 @property  BOOL shouldOfferTrialPlan
 @property  BOOL shouldOfferSignupCompletion
 @property  NSString *trialPlanType
 @property  NSString *SIMStatus
 @property  unsigned long planFlows
 @property  NSError *persistentError

  // instance methods
  -[NPHServiceSubscriptionInfo .cxx_destruct]
  -[NPHServiceSubscriptionInfo SIMStatus]
  -[NPHServiceSubscriptionInfo setSIMStatus:]
  -[NPHServiceSubscriptionInfo serviceSubscriptionContext]
  -[NPHServiceSubscriptionInfo shouldShowAddNewRemotePlan]
  -[NPHServiceSubscriptionInfo shouldOfferRemotePlan]
  -[NPHServiceSubscriptionInfo shouldOfferTrialPlan]
  -[NPHServiceSubscriptionInfo shouldOfferSignupCompletion]
  -[NPHServiceSubscriptionInfo trialPlanType]
  -[NPHServiceSubscriptionInfo planFlows]
  -[NPHServiceSubscriptionInfo persistentError]
  -[NPHServiceSubscriptionInfo setServiceSubscriptionContext:]
  -[NPHServiceSubscriptionInfo setShouldShowAddNewRemotePlan:]
  -[NPHServiceSubscriptionInfo setShouldOfferRemotePlan:]
  -[NPHServiceSubscriptionInfo setShouldOfferTrialPlan:]
  -[NPHServiceSubscriptionInfo setShouldOfferSignupCompletion:]
  -[NPHServiceSubscriptionInfo setTrialPlanType:]
  -[NPHServiceSubscriptionInfo setPlanFlows:]
  -[NPHServiceSubscriptionInfo setPersistentError:]


NPHCellularBridgeUIManager : NSObject /usr/lib/libSystem.B.dylib <NPHSIMChoiceViewControllerDelegate>
 @property  CTRemotePlan *transferableRemotePlan
 @property  CTDeviceIdentifier *transferableRemoteDeviceID
 @property  BOOL cellularPlanIsSetUp
 @property  BOOL isAnyCellularPlanActivating
 @property  NSArray *serviceSubscriptionsInUse
 @property  NSArray *serviceSubscriptionsToOfferUser
 @property  NSArray *serviceSubscriptionsShouldShowAddNewRemotePlan
 @property  NSArray *serviceSubscriptionsOfferingRemotePlan
 @property  NSArray *serviceSubscriptionsOfferingTrialPlan
 @property  BOOL shouldShowAddNewRemotePlan
 @property  BOOL shouldOfferRemotePlan
 @property  BOOL shouldOfferTrialPlan
 @property  BOOL LTEMayImpactService
 @property  BOOL shouldOfferSignupCompletion
 @property  NSString *trialPlanType
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NPHCellularBridgeUIManager sharedInstance]
  +[NPHCellularBridgeUIManager carrierName]
  +[NPHCellularBridgeUIManager carrierPhoneNumber]
  +[NPHCellularBridgeUIManager presentCellularError:onViewController:]
  +[NPHCellularBridgeUIManager _isSubscriptionInUse:]
  +[NPHCellularBridgeUIManager _presentAirplaneModeOnAlertOnViewController:]
  +[NPHCellularBridgeUIManager _presentCellularRequiredModeAlertOnViewController:]
  +[NPHCellularBridgeUIManager _presentErrorTitled:withMessage:onViewController:]
  +[NPHCellularBridgeUIManager _presentErrorTitle:onViewController:withActionTitle:actionHandler:]

  // instance methods
  -[NPHCellularBridgeUIManager init]
  -[NPHCellularBridgeUIManager .cxx_destruct]
  -[NPHCellularBridgeUIManager subscriptionInfoDidChange]
  -[NPHCellularBridgeUIManager activeSubscriptionsDidChange]
  -[NPHCellularBridgeUIManager simStatusDidChange:status:]
  -[NPHCellularBridgeUIManager _currentDeviceCSN]
  -[NPHCellularBridgeUIManager carrierNameForSubscription:]
  -[NPHCellularBridgeUIManager shouldShowAddNewRemotePlan]
  -[NPHCellularBridgeUIManager shouldOfferRemotePlan]
  -[NPHCellularBridgeUIManager shouldOfferTrialPlan]
  -[NPHCellularBridgeUIManager shouldOfferSignupCompletion]
  -[NPHCellularBridgeUIManager trialPlanType]
  -[NPHCellularBridgeUIManager _ctCellularPlanInfoDidChange:]
  -[NPHCellularBridgeUIManager _localPlanInfoDidChange:]
  -[NPHCellularBridgeUIManager _ctCellularRemoteProvisioningDidBecomeAvailable:]
  -[NPHCellularBridgeUIManager setTransferableRemotePlan:]
  -[NPHCellularBridgeUIManager setTransferableRemoteDeviceID:]
  -[NPHCellularBridgeUIManager _updateCoreTelephonyClientInfo]
  -[NPHCellularBridgeUIManager _updateSIMStatusForSubscriptionContext:withStatus:]
  -[NPHCellularBridgeUIManager _serviceSubscriptionInfoForSubscriptionContext:]
  -[NPHCellularBridgeUIManager _updateServiceSubscriptionInfo:]
  -[NPHCellularBridgeUIManager _prePromptForUserConsentIfNecessary:]
  -[NPHCellularBridgeUIManager shouldAllowUserToTransferPlanFromDeviceWithCSN:]
  -[NPHCellularBridgeUIManager _promptUserToPickSubscriptionContextOnViewController:andIsTransferFlow:]
  -[NPHCellularBridgeUIManager setUpCellularPlanOnViewController:withCompletion:]
  -[NPHCellularBridgeUIManager serviceSubscriptionsInUse]
  -[NPHCellularBridgeUIManager setUpCellularPlanOnViewController:withContext:withCompletion:]
  -[NPHCellularBridgeUIManager _updateTransferableCellularPlanFromDeviceWithCSN:]
  -[NPHCellularBridgeUIManager transferableRemoteDeviceID]
  -[NPHCellularBridgeUIManager transferableRemotePlan]
  -[NPHCellularBridgeUIManager allCompanionSIMsMissing]
  -[NPHCellularBridgeUIManager _isCarrierSetupFlowUnsupportedForServiceSubscription:]
  -[NPHCellularBridgeUIManager _setUpCellularPlanDirectWithContext:withCompletion:]
  -[NPHCellularBridgeUIManager _setUpCellularPlanWithActivationCodeOnViewController:withContext:withCompletion:codelessActivationBlock:]
  -[NPHCellularBridgeUIManager _prePromptUserForConsentTextType:relevantPlanItem:completionBlock:]
  -[NPHCellularBridgeUIManager userConsentMessageForConsentType:relevantPlanItem:]
  -[NPHCellularBridgeUIManager selectedCellularPlan]
  -[NPHCellularBridgeUIManager _activeDeviceCSNList]
  -[NPHCellularBridgeUIManager _updateCellularPlansWithFetch:forCSN:]
  -[NPHCellularBridgeUIManager _updateShouldShowAddNewRemotePlan]
  -[NPHCellularBridgeUIManager _updateIsRemotePlanCapable]
  -[NPHCellularBridgeUIManager _updateShouldWarnAboutLTEMayImpactService]
  -[NPHCellularBridgeUIManager _isPersistentError:]
  -[NPHCellularBridgeUIManager _isSetupBlockingError:]
  -[NPHCellularBridgeUIManager serviceSubscriptionsShouldShowAddNewRemotePlan]
  -[NPHCellularBridgeUIManager serviceSubscriptionsOfferingRemotePlan]
  -[NPHCellularBridgeUIManager serviceSubscriptionsOfferingTrialPlan]
  -[NPHCellularBridgeUIManager cellularPlans]
  -[NPHCellularBridgeUIManager updateCellularPlansWithFetch:]
  -[NPHCellularBridgeUIManager _updateSIMStatusForAllSubscriptionContexts]
  -[NPHCellularBridgeUIManager isGeminiSetup]
  -[NPHCellularBridgeUIManager _trialPlanTypeForContext:]
  -[NPHCellularBridgeUIManager serviceSubscriptionsToOfferUser]
  -[NPHCellularBridgeUIManager cellularPlanIsSetUp]
  -[NPHCellularBridgeUIManager cellularUseErrors]
  -[NPHCellularBridgeUIManager userTappedSetUp:]
  -[NPHCellularBridgeUIManager userTappedCancel]
  -[NPHCellularBridgeUIManager setUpOrTransferCellularPlanOnViewController:withCompletion:]
  -[NPHCellularBridgeUIManager transferCellularPlanOnViewController:withCompletion:]
  -[NPHCellularBridgeUIManager isAnyCellularPlanActivating]
  -[NPHCellularBridgeUIManager consentRequiredRelevantCellularPlanItem:]
  -[NPHCellularBridgeUIManager startRemoteProvisioning]
  -[NPHCellularBridgeUIManager finishRemoteProvisioning]
  -[NPHCellularBridgeUIManager displayNameForCellularPlan:]
  -[NPHCellularBridgeUIManager shouldAllowUserToAddOrSetUpPlan]
  -[NPHCellularBridgeUIManager cellularUseError]
  -[NPHCellularBridgeUIManager isCarrierSetupFlowUnsupported]
  -[NPHCellularBridgeUIManager LTEMayImpactService]


NPHSetupTableViewCell : UITableViewCell /System/Library/Frameworks/Foundation.framework/Foundation
 @property  UITextField *editableTextField

  // class methods
  +[NPHSetupTableViewCell rowHeight]

  // instance methods
  -[NPHSetupTableViewCell .cxx_destruct]
  -[NPHSetupTableViewCell editableTextField]
  -[NPHSetupTableViewCell initWithTag:delegate:]
  -[NPHSetupTableViewCell setEditableTextField:]


NPHSharedUtilities : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[NPHSharedUtilities pairedDeviceHasHomeButton]


NPHBSCellularConfirmationCodeViewController : UIViewController /System/Library/Frameworks/Foundation.framework/Foundation <UITextFieldDelegate>
 @property  <NPHBSCellularConfirmationCodeViewControllerDelegate> *delegate
 @property  UILabel *confirmationCodeTitleLabel
 @property  UITableView *infoTableView
 @property  NSLayoutConstraint *infoTableViewHeightConstraint
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NPHBSCellularConfirmationCodeViewController init]
  -[NPHBSCellularConfirmationCodeViewController delegate]
  -[NPHBSCellularConfirmationCodeViewController setDelegate:]
  -[NPHBSCellularConfirmationCodeViewController .cxx_destruct]
  -[NPHBSCellularConfirmationCodeViewController viewDidLoad]
  -[NPHBSCellularConfirmationCodeViewController viewDidLayoutSubviews]
  -[NPHBSCellularConfirmationCodeViewController viewDidAppear:]
  -[NPHBSCellularConfirmationCodeViewController tableView:numberOfRowsInSection:]
  -[NPHBSCellularConfirmationCodeViewController tableView:cellForRowAtIndexPath:]
  -[NPHBSCellularConfirmationCodeViewController tableView:heightForRowAtIndexPath:]
  -[NPHBSCellularConfirmationCodeViewController textFieldShouldReturn:]
  -[NPHBSCellularConfirmationCodeViewController textFieldDidBeginEditing:]
  -[NPHBSCellularConfirmationCodeViewController confirm:]
  -[NPHBSCellularConfirmationCodeViewController confirmationCodeTitleLabel]
  -[NPHBSCellularConfirmationCodeViewController setConfirmationCodeTitleLabel:]
  -[NPHBSCellularConfirmationCodeViewController infoTableView]
  -[NPHBSCellularConfirmationCodeViewController setInfoTableView:]
  -[NPHBSCellularConfirmationCodeViewController infoTableViewHeightConstraint]
  -[NPHBSCellularConfirmationCodeViewController setInfoTableViewHeightConstraint:]


NPHBSCellularFauxCardInfoViewController : UIViewController /System/Library/Frameworks/Foundation.framework/Foundation <UITextFieldDelegate, UITableViewDelegate, UITableViewDataSource>
 @property  @? completion
 @property  CTXPCServiceSubscriptionContext *subscriptionContext
 @property  UILabel *enterActivationLabel
 @property  UITableView *infoTableView
 @property  NSLayoutConstraint *infoTableViewHeightConstraint
 @property  UIScrollView *scrollView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NPHBSCellularFauxCardInfoViewController init]
  -[NPHBSCellularFauxCardInfoViewController .cxx_destruct]
  -[NPHBSCellularFauxCardInfoViewController setCompletion:]
  -[NPHBSCellularFauxCardInfoViewController completion]
  -[NPHBSCellularFauxCardInfoViewController viewWillAppear:]
  -[NPHBSCellularFauxCardInfoViewController viewWillDisappear:]
  -[NPHBSCellularFauxCardInfoViewController viewDidLoad]
  -[NPHBSCellularFauxCardInfoViewController viewDidLayoutSubviews]
  -[NPHBSCellularFauxCardInfoViewController viewDidAppear:]
  -[NPHBSCellularFauxCardInfoViewController tableView:numberOfRowsInSection:]
  -[NPHBSCellularFauxCardInfoViewController tableView:cellForRowAtIndexPath:]
  -[NPHBSCellularFauxCardInfoViewController tableView:heightForRowAtIndexPath:]
  -[NPHBSCellularFauxCardInfoViewController scrollView]
  -[NPHBSCellularFauxCardInfoViewController setScrollView:]
  -[NPHBSCellularFauxCardInfoViewController textFieldShouldReturn:]
  -[NPHBSCellularFauxCardInfoViewController textFieldDidBeginEditing:]
  -[NPHBSCellularFauxCardInfoViewController textFieldDidEndEditing:]
  -[NPHBSCellularFauxCardInfoViewController configureCell:atIndexPath:]
  -[NPHBSCellularFauxCardInfoViewController subscriptionContext]
  -[NPHBSCellularFauxCardInfoViewController setSubscriptionContext:]
  -[NPHBSCellularFauxCardInfoViewController infoTableView]
  -[NPHBSCellularFauxCardInfoViewController setInfoTableView:]
  -[NPHBSCellularFauxCardInfoViewController infoTableViewHeightConstraint]
  -[NPHBSCellularFauxCardInfoViewController setInfoTableViewHeightConstraint:]
  -[NPHBSCellularFauxCardInfoViewController keyboardWasShown:]
  -[NPHBSCellularFauxCardInfoViewController keyboardWillBeHidden:]
  -[NPHBSCellularFauxCardInfoViewController scrollViewForKeyboardIfNecessary]
  -[NPHBSCellularFauxCardInfoViewController activatePlan:]
  -[NPHBSCellularFauxCardInfoViewController enterActivationLabel]
  -[NPHBSCellularFauxCardInfoViewController setEnterActivationLabel:]


NPHSIMChoiceViewController : BPSSetupOptinViewController /System/Library/PrivateFrameworks/NanoRegistry.framework/NanoRegistry
 @property  BOOL isTransferFlow
 @property  UIScrollView *scrollView
 @property  BOOL haveReceivedProxyPlanItems
 @property  UIActivityIndicatorView *spinner
 @property  UILabel *spinnerExplanation
 @property  UIBarButtonItem *nextNavBarButtonItem
 @property  UIButton *upperButton
 @property  NSString *upperButtonTitle
 @property  UIButton *lowerButton
 @property  NSString *lowerButtonTitle
 @property  UIButton *lowerSkipButton
 @property  UILabel *messageTextLabel
 @property  UIButton *cancelButton
 @property  NSArray *userVisibleErrors
 @property  <NPHSIMChoiceViewControllerDelegate> *SIMChoiceDelegate
 @property  unsigned long backgroundTaskID
 @property  NSTimer *taskCompletionTimeout
 @property  long long configuration

  // instance methods
  -[NPHSIMChoiceViewController dealloc]
  -[NPHSIMChoiceViewController .cxx_destruct]
  -[NPHSIMChoiceViewController setConfiguration:]
  -[NPHSIMChoiceViewController configuration]
  -[NPHSIMChoiceViewController viewWillAppear:]
  -[NPHSIMChoiceViewController viewDidLoad]
  -[NPHSIMChoiceViewController viewDidLayoutSubviews]
  -[NPHSIMChoiceViewController viewDidAppear:]
  -[NPHSIMChoiceViewController cancelButton]
  -[NPHSIMChoiceViewController setCancelButton:]
  -[NPHSIMChoiceViewController scrollView]
  -[NPHSIMChoiceViewController setScrollView:]
  -[NPHSIMChoiceViewController spinner]
  -[NPHSIMChoiceViewController setSpinner:]
  -[NPHSIMChoiceViewController titleString]
  -[NPHSIMChoiceViewController transfer]
  -[NPHSIMChoiceViewController imageResource]
  -[NPHSIMChoiceViewController wantsLightenBlendedScreen]
  -[NPHSIMChoiceViewController sidePadding]
  -[NPHSIMChoiceViewController verticalTitleInset]
  -[NPHSIMChoiceViewController initWithSIMChoiceViewControllerDelegate:andIsTransferFlow:]
  -[NPHSIMChoiceViewController isGeminiSetup]
  -[NPHSIMChoiceViewController userTappedSetUp:]
  -[NPHSIMChoiceViewController ctCellularPlanInfoDidChange:]
  -[NPHSIMChoiceViewController checkForSoftwareUpdate]
  -[NPHSIMChoiceViewController updateUIFromCellularPlanItems]
  -[NPHSIMChoiceViewController userTappedNext:]
  -[NPHSIMChoiceViewController userTappedSkip:]
  -[NPHSIMChoiceViewController userTappedCancel:]
  -[NPHSIMChoiceViewController navigateToNextView]
  -[NPHSIMChoiceViewController setUpNow]
  -[NPHSIMChoiceViewController updateUIToShowSetUpNowSIMChoices]
  -[NPHSIMChoiceViewController updateUIToShowSpinner]
  -[NPHSIMChoiceViewController updateUIToShowUserVisibleError]
  -[NPHSIMChoiceViewController isTransferFlow]
  -[NPHSIMChoiceViewController updateUIToShowPlanTransferOrSetUpNewOptions]
  -[NPHSIMChoiceViewController updateUIToShowPreinstall]
  -[NPHSIMChoiceViewController updateUIToShowUserConsent:relevantPlan:]
  -[NPHSIMChoiceViewController updateUIToShowContinue]
  -[NPHSIMChoiceViewController updateUIToShowPlanSetUpTrial]
  -[NPHSIMChoiceViewController updateUIToShowSetUpNow]
  -[NPHSIMChoiceViewController userTappedContinue:]
  -[NPHSIMChoiceViewController userTappedConsent:]
  -[NPHSIMChoiceViewController userTappedTransfer:]
  -[NPHSIMChoiceViewController userTappedSetUpNew:]
  -[NPHSIMChoiceViewController userTappedSetUpCarrier:]
  -[NPHSIMChoiceViewController trialOfferMessage]
  -[NPHSIMChoiceViewController legacyButtonStyles]
  -[NPHSIMChoiceViewController setIsTransferFlow:]
  -[NPHSIMChoiceViewController haveReceivedProxyPlanItems]
  -[NPHSIMChoiceViewController setHaveReceivedProxyPlanItems:]
  -[NPHSIMChoiceViewController spinnerExplanation]
  -[NPHSIMChoiceViewController setSpinnerExplanation:]
  -[NPHSIMChoiceViewController nextNavBarButtonItem]
  -[NPHSIMChoiceViewController setNextNavBarButtonItem:]
  -[NPHSIMChoiceViewController upperButton]
  -[NPHSIMChoiceViewController setUpperButton:]
  -[NPHSIMChoiceViewController upperButtonTitle]
  -[NPHSIMChoiceViewController setUpperButtonTitle:]
  -[NPHSIMChoiceViewController lowerButton]
  -[NPHSIMChoiceViewController setLowerButton:]
  -[NPHSIMChoiceViewController lowerButtonTitle]
  -[NPHSIMChoiceViewController setLowerButtonTitle:]
  -[NPHSIMChoiceViewController lowerSkipButton]
  -[NPHSIMChoiceViewController setLowerSkipButton:]
  -[NPHSIMChoiceViewController messageTextLabel]
  -[NPHSIMChoiceViewController setMessageTextLabel:]
  -[NPHSIMChoiceViewController userVisibleErrors]
  -[NPHSIMChoiceViewController setUserVisibleErrors:]
  -[NPHSIMChoiceViewController SIMChoiceDelegate]
  -[NPHSIMChoiceViewController setSIMChoiceDelegate:]
  -[NPHSIMChoiceViewController backgroundTaskID]
  -[NPHSIMChoiceViewController setBackgroundTaskID:]
  -[NPHSIMChoiceViewController taskCompletionTimeout]
  -[NPHSIMChoiceViewController setTaskCompletionTimeout:]


NSString(NSString_StringWithPositionalSpecifiersFormat)
	// class methods
	+[NSString(NSString_StringWithPositionalSpecifiersFormat) stringWithPositionalSpecifiersFormat:arguments:]

	// instance methods
	-[NSString(NSString_StringWithPositionalSpecifiersFormat) nph_localizedUppercaseString]

NSError(NPHCellularError)
	// class methods
	+[NSError(NPHCellularError) _techStandardName]
	+[NSError(NPHCellularError) _canControlLTEVoiceOptionsSeparately]
	+[NSError(NPHCellularError) NPHCellularErrorWithCode:forCarrier:]
	+[NSError(NPHCellularError) _titleAndMessageDictForError:forCarrier:]
	+[NSError(NPHCellularError) _techFromBundle]
	+[NSError(NPHCellularError) NPHCellularSanitizedError:forCarrier:]

NSArray(Filtering)
	// instance methods
	-[NSArray(Filtering) objectsPassingTest:]
	-[NSArray(Filtering) max:]
	-[NSArray(Filtering) map:]
	-[NSArray(Filtering) firstObjectPassingTest:]
	-[NSArray(Filtering) hasObjectPassingTest:]

NSObject(NPHIdleTime)
	// class methods
	+[NSObject(NPHIdleTime) _NPHIdleTimeNotification:]
	+[NSObject(NPHIdleTime) NPHRequestIdleTimeNotification]
	+[NSObject(NPHIdleTime) performBlockAtIdle:]

	// instance methods
	-[NSObject(NPHIdleTime) nph_debounce:delay:]

01 00 0700 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureDevice 
01 00 0700 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureDeviceInput 
01 00 0700 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureMetadataOutput 
01 00 0700 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureSession 
01 00 0700 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureVideoPreviewLayer 
01 00 0200 /System/Library/PrivateFrameworks/BridgePreferences.framework/BridgePreferences: BPSSetupOptinViewController 
01 00 0500 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAShapeLayer 
01 00 0500 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransaction 
01 00 0400 /System/Library/Frameworks/CoreTelephony.framework/CoreTelephony: CTBundle 
01 00 0b00 /System/Library/PrivateFrameworks/CellularPlanManager.framework/CellularPlanManager: CTCellularPlanManager 
01 00 0400 /System/Library/Frameworks/CoreTelephony.framework/CoreTelephony: CoreTelephonyClient 
01 00 0300 /System/Library/PrivateFrameworks/NanoRegistry.framework/NanoRegistry: NRDevice 
01 00 0300 /System/Library/PrivateFrameworks/NanoRegistry.framework/NanoRegistry: NRPairedDeviceRegistry 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexPath 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSLayoutConstraint 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotification 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationQueue 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0f00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 0a00 /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport: RadiosPreferences 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivityIndicatorView 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertAction 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertController 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBarButtonItem 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBezierPath 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIButton 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFontDescriptor 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UILabel 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationController 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIScrollView 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewCell 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UITextField 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
