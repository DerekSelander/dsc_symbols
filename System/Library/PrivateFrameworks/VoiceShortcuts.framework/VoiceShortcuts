|| __DATA.__data _OBJC_METACLASS_$_WFToastManager
|| __DATA.__objc_data _OBJC_CLASS_$_VCCompanionSyncIncomingSession
|| __DATA.__objc_data _OBJC_CLASS_$_VCCompanionSyncOutgoingSession
|| __DATA.__objc_data _OBJC_CLASS_$_VCCompanionSyncSerializer
|| __DATA.__objc_data _OBJC_CLASS_$_VCCompanionSyncSession
|| __DATA.__objc_data _OBJC_CLASS_$_VCIDApplicationSyncState
|| __DATA.__objc_data _OBJC_CLASS_$_VCIntentDefinitionChange
|| __DATA.__objc_data _OBJC_CLASS_$_VCIntentDefinitionSyncState
|| __DATA.__objc_data _OBJC_CLASS_$_VCNRDeviceSyncService
|| __DATA.__objc_data _OBJC_CLASS_$_VCPBChange
|| __DATA.__objc_data _OBJC_CLASS_$_VCPBIntentDefinition
|| __DATA.__objc_data _OBJC_CLASS_$_VCPBIntentDefinitionChange
|| __DATA.__objc_data _OBJC_CLASS_$_VCPBIntentDefinitionFile
|| __DATA.__objc_data _OBJC_CLASS_$_VCPBWorkflow
|| __DATA.__objc_data _OBJC_CLASS_$_VCSYChangeEnumerator
|| __DATA.__objc_data _OBJC_CLASS_$_VCShortcutsObliterator
|| __DATA.__objc_data _OBJC_CLASS_$_VCTriggerNotificationDebouncer
|| __DATA.__objc_data _OBJC_CLASS_$_VCTriggerNotificationDebouncerItem
|| __DATA.__objc_data _OBJC_CLASS_$_WFPresentedDialog
|| __DATA.__objc_data _OBJC_CLASS_$_WFQueuedRunRequest
|| __DATA.__objc_data _OBJC_CLASS_$_WFToastManager
|| __DATA.__objc_data _OBJC_CLASS_$_WFWorkflowRunQueueDescriptor
|| __DATA.__objc_data _OBJC_METACLASS_$_VCCompanionSyncIncomingSession
|| __DATA.__objc_data _OBJC_METACLASS_$_VCCompanionSyncOutgoingSession
|| __DATA.__objc_data _OBJC_METACLASS_$_VCCompanionSyncSerializer
|| __DATA.__objc_data _OBJC_METACLASS_$_VCCompanionSyncSession
|| __DATA.__objc_data _OBJC_METACLASS_$_VCIDApplicationSyncState
|| __DATA.__objc_data _OBJC_METACLASS_$_VCIntentDefinitionChange
|| __DATA.__objc_data _OBJC_METACLASS_$_VCIntentDefinitionSyncState
|| __DATA.__objc_data _OBJC_METACLASS_$_VCNRDeviceSyncService
|| __DATA.__objc_data _OBJC_METACLASS_$_VCPBChange
|| __DATA.__objc_data _OBJC_METACLASS_$_VCPBIntentDefinition
|| __DATA.__objc_data _OBJC_METACLASS_$_VCPBIntentDefinitionChange
|| __DATA.__objc_data _OBJC_METACLASS_$_VCPBIntentDefinitionFile
|| __DATA.__objc_data _OBJC_METACLASS_$_VCPBWorkflow
|| __DATA.__objc_data _OBJC_METACLASS_$_VCSYChangeEnumerator
|| __DATA.__objc_data _OBJC_METACLASS_$_VCShortcutsObliterator
|| __DATA.__objc_data _OBJC_METACLASS_$_VCTriggerNotificationDebouncer
|| __DATA.__objc_data _OBJC_METACLASS_$_VCTriggerNotificationDebouncerItem
|| __DATA.__objc_data _OBJC_METACLASS_$_WFPresentedDialog
|| __DATA.__objc_data _OBJC_METACLASS_$_WFQueuedRunRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_WFWorkflowRunQueueDescriptor
|| __DATA.__objc_ivar _OBJC_IVAR_$_VCPBChange._changeType
|| __DATA.__objc_ivar _OBJC_IVAR_$_VCPBChange._message
|| __DATA.__objc_ivar _OBJC_IVAR_$_VCPBChange._messageType
|| __DATA.__objc_ivar _OBJC_IVAR_$_VCPBChange._uniqueID
|| __DATA.__objc_ivar _OBJC_IVAR_$_VCPBIntentDefinition._associatedBundleID
|| __DATA.__objc_ivar _OBJC_IVAR_$_VCPBIntentDefinition._files
|| __DATA.__objc_ivar _OBJC_IVAR_$_VCPBIntentDefinitionChange._associatedBundleID
|| __DATA.__objc_ivar _OBJC_IVAR_$_VCPBIntentDefinitionChange._changeType
|| __DATA.__objc_ivar _OBJC_IVAR_$_VCPBIntentDefinitionChange._intentDefinition
|| __DATA.__objc_ivar _OBJC_IVAR_$_VCPBIntentDefinitionFile._data
|| __DATA.__objc_ivar _OBJC_IVAR_$_VCPBIntentDefinitionFile._name
|| __DATA.__objc_ivar _OBJC_IVAR_$_VCPBSpotlightBookmark._identifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_VCPBSpotlightBookmark._pairs
|| __DATA.__objc_ivar _OBJC_IVAR_$_VCPBSpotlightPair._spotlightHash
|| __DATA.__objc_ivar _OBJC_IVAR_$_VCPBSpotlightPair._workflowID
|| __DATA.__objc_ivar _OBJC_IVAR_$_VCPBWorkflow._accessResourcePerWorkflowStateData
|| __DATA.__objc_ivar _OBJC_IVAR_$_VCPBWorkflow._actionsData
|| __DATA.__objc_ivar _OBJC_IVAR_$_VCPBWorkflow._creationDate
|| __DATA.__objc_ivar _OBJC_IVAR_$_VCPBWorkflow._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_VCPBWorkflow._iconColor
|| __DATA.__objc_ivar _OBJC_IVAR_$_VCPBWorkflow._iconGlyph
|| __DATA.__objc_ivar _OBJC_IVAR_$_VCPBWorkflow._importQuestionsData
|| __DATA.__objc_ivar _OBJC_IVAR_$_VCPBWorkflow._inputClasses
|| __DATA.__objc_ivar _OBJC_IVAR_$_VCPBWorkflow._integerLastMigratedClientVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$_VCPBWorkflow._integerMinimumClientVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$_VCPBWorkflow._lastMigratedClientVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$_VCPBWorkflow._minimumClientVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$_VCPBWorkflow._modificationDate
|| __DATA.__objc_ivar _OBJC_IVAR_$_VCPBWorkflow._name
|| __DATA.__objc_ivar _OBJC_IVAR_$_VCPBWorkflow._remoteQuarantineStatus
|| __DATA.__objc_ivar _OBJC_IVAR_$_VCPBWorkflow._subtitle
|| __DATA.__objc_ivar _OBJC_IVAR_$_VCPBWorkflow._workflowTypes
|| __DATA_CONST.__const _VCIntentDefinitionChangeAppInfoFilename
|| __DATA_CONST.__const _VCLSDatabaseSequenceNumberKey
|| __DATA_CONST.__const _VCLSDatabaseUUIDKey
|| __DATA_CONST.__const _VCShortcutsObliteratorErrorDomain
|| __DATA_CONST.__const _VCSpotlightDomainIdentifier
|| __DATA_CONST.__const _VCXPCEventAssistantPreferencesDidChange
|| __DATA_CONST.__const _VCXPCEventFirstUnlock
|| __DATA_CONST.__const _VCXPCEventLaunchServicesApplicationRegistered
|| __DATA_CONST.__const _VCXPCEventLaunchServicesApplicationStateChanged
|| __DATA_CONST.__const _VCXPCEventLaunchServicesApplicationUnregistered
|| __DATA_CONST.__const _VCXPCEventPairedDeviceDidChangeVersion
|| __DATA_CONST.__const _VCXPCEventStreamDarwinNotifications
|| __DATA_CONST.__const _VCXPCEventStreamDistributedNotifications
|| __DATA_CONST.__const _VCXPCEventTimeChange
|| __DATA_CONST.__const _VCXPCEventTimezoneChange
|| __DATA_CONST.__const _WFDialogNotificationUserInfoRunningContextKey
|| __DATA_CONST.__const _WFEventInfoKeyNewValue
|| __DATA_CONST.__const _WFEventInfoKeyOldValue
|| __DATA_CONST.__const _WFLogCategoryApplicationTerminationMonitor
|| __DATA_CONST.__const _WFLogCategoryDefaultShortcuts
|| __DATA_CONST.__const _WFLogCategoryObliterator
|| __DATA_CONST.__const _WFLogCategoryRunQueue
|| __DATA_CONST.__const _WFLogCategoryUserNotificationManager
|| __DATA_CONST.__const _WFTriggerNotificationLevelMigrationPerformedKey
|| __DATA_CONST.__const _WFWorkflowRunCoordinatorErrorDomain
|| __DATA_DIRTY.__data _OBJC_METACLASS_$_VCDaemonXPCEventHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VCCKApplicationStateObserver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VCCKShortcutSyncCoordinator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VCCKShortcutSyncService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VCCKSyncEngine
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VCCompanionSyncService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VCCoreDuetListener
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VCDaemonDatabaseProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VCDaemonSyncDataEndpoint
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VCDaemonXPCEventHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VCDailyMetricSubmitter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VCGuardedPreferencesManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VCIntentDefinitionManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VCIntentDefinitionSyncDataHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VCMetricCheckIn
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VCMetricSubmitter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VCPBSpotlightBookmark
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VCPBSpotlightPair
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VCSpotlightState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VCSpotlightSyncOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VCSpotlightSyncService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VCSyncDataHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VCTriggerEventQueue
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VCTriggerEventRunner
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VCUserDefaults
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VCUserNotificationManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VCVoiceShortcutManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VCVoiceShortcutManagerAccessWrapper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VCWatchSyncCoordinator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VCWeeklyMetricSubmitter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VCXPCServer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFApplicationTerminationMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFBiomeListener
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFContextualActionSpotlightSyncService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFDialogNotificationManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFDialogPresentationManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFOnScreenContentManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFShareSheetWorkflowProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFSiriWorkflowVocabularyUpdater
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFSpringBoardRemoteAlertPresenter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFSystemSurfaceWorkflowStatusUpdater
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFTriggerBootManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFTriggerNotificationScheduler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFTriggerRegistrar
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFUserNotificationManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFWorkflowRunCoordinator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFWorkflowRunQueue
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFWorkflowStatusPresenter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFXPCActivityScheduler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VCCKApplicationStateObserver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VCCKShortcutSyncCoordinator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VCCKShortcutSyncService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VCCKSyncEngine
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VCCompanionSyncService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VCCoreDuetListener
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VCDaemonDatabaseProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VCDaemonSyncDataEndpoint
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VCDailyMetricSubmitter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VCGuardedPreferencesManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VCIntentDefinitionManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VCIntentDefinitionSyncDataHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VCMetricCheckIn
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VCMetricSubmitter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VCPBSpotlightBookmark
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VCPBSpotlightPair
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VCSpotlightState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VCSpotlightSyncOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VCSpotlightSyncService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VCSyncDataHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VCTriggerEventQueue
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VCTriggerEventRunner
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VCUserDefaults
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VCUserNotificationManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VCVoiceShortcutManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VCVoiceShortcutManagerAccessWrapper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VCWatchSyncCoordinator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VCWeeklyMetricSubmitter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VCXPCServer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFApplicationTerminationMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFBiomeListener
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFContextualActionSpotlightSyncService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFDialogNotificationManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFDialogPresentationManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFOnScreenContentManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFShareSheetWorkflowProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFSiriWorkflowVocabularyUpdater
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFSpringBoardRemoteAlertPresenter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFSystemSurfaceWorkflowStatusUpdater
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFTriggerBootManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFTriggerNotificationScheduler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFTriggerRegistrar
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFUserNotificationManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFWorkflowRunCoordinator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFWorkflowRunQueue
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFWorkflowStatusPresenter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFXPCActivityScheduler
|| __TEXT.__const _VoiceShortcutsVersionNumber
|| __TEXT.__const _VoiceShortcutsVersionString
|| __TEXT.__text _VCAccessSyncServiceState
|| __TEXT.__text _VCAssertUniqueMessageTypes
|| __TEXT.__text _VCClearSyncServiceState
|| __TEXT.__text _VCDaemonXPCInterface
|| __TEXT.__text _VCDescriptionForChange
|| __TEXT.__text _VCDescriptionForChangeType
|| __TEXT.__text _VCDescriptionForMessageType
|| __TEXT.__text _VCGetLocalSpotlightState
|| __TEXT.__text _VCLatestUniqueChanges
|| __TEXT.__text _VCLocalSpotlightStateFileURL
|| __TEXT.__text _VCLocaleIsRTL
|| __TEXT.__text _VCNotificationTitleForTriggerWithPendingCount
|| __TEXT.__text _VCOSTransactionWithName
|| __TEXT.__text _VCPBChangeReadFrom
|| __TEXT.__text _VCPBChangeTypeFromSYChangeType
|| __TEXT.__text _VCPBIntentDefinitionChangeReadFrom
|| __TEXT.__text _VCPBIntentDefinitionFileReadFrom
|| __TEXT.__text _VCPBIntentDefinitionReadFrom
|| __TEXT.__text _VCPBSpotlightBookmarkReadFrom
|| __TEXT.__text _VCPBSpotlightPairReadFrom
|| __TEXT.__text _VCPBWorkflowReadFrom
|| __TEXT.__text _VCPartitionMessages
|| __TEXT.__text _VCSYChangeClassFromMessageType
|| __TEXT.__text _VCVoiceShortcutFromWorkflow
|| __TEXT.__text _VCVoiceShortcutsFromWorkflows
|| __TEXT.__text _VCWorkflowReferencesForAccessSpecifier
|| __TEXT.__text _WFDatabaseChangesContainObjectType
|| __TEXT.__text _WFDialogXPCHostInterface
|| __TEXT.__text _WFDialogXPCInterface
|| __TEXT.__text _WFTimeIntervalForNotificationLevel
|| __TEXT.__text _WFTimeIntervalForNotificationLevelFromDate
|| __TEXT.__text _WFTriggerIdentifierFromXPCActivityIdentifier
|| __TEXT.__text _WFWorkflowStatusHostXPCInterface
|| __TEXT.__text _WFWorkflowStatusXPCInterface
|| __TEXT.__text _WFXPCActivityIdentifierFromTriggerIdentifier
|| __TEXT.__text _getWFApplicationTerminationMonitorLogObject
|| __TEXT.__text _getWFDefaultShortcutsLogObject
|| __TEXT.__text _getWFObliteratorLogObject
|| __TEXT.__text _getWFRunQueueLogObject
|| __TEXT.__text _getWFUserNotificationManagerLogObject
__ BaseBoard: _OBJC_CLASS_$_BSAction
__ BaseBoard: _OBJC_CLASS_$_BSMutableSettings
__ BaseBoard: _OBJC_CLASS_$_BSProcessHandle
__ BiomeStreams: _OBJC_CLASS_$_BMAlarmEvent
__ BiomeStreams: _OBJC_CLASS_$_BMBiomeScheduler
__ BiomeStreams: _OBJC_CLASS_$_BMCarPlayEvent
__ BiomeStreams: _OBJC_CLASS_$_BMSoundDetectionEvent
__ BiomeStreams: _OBJC_CLASS_$_BMStreams
__ BiomeStreams: _OBJC_CLASS_$_BMUserFocusComputedModeEvent
__ CloudKit: _CKAccountChangedNotification
__ CloudKit: _CKContainerEnvironmentString
__ CloudKit: _CKCurrentUserDefaultName
__ CloudKit: _CKErrorIsCode
__ CloudKit: _CKPartialErrorsByItemIDKey
__ CloudKit: _CKRecordChangedErrorAncestorRecordKey
__ CloudKit: _CKRecordChangedErrorClientRecordKey
__ CloudKit: _CKRecordChangedErrorServerRecordKey
__ CloudKit: _OBJC_CLASS_$_CKContainer
__ CloudKit: _OBJC_CLASS_$_CKRecord
__ CloudKit: _OBJC_CLASS_$_CKRecordZone
__ CloudKit: _OBJC_CLASS_$_CKRecordZoneID
__ CloudKit: _OBJC_CLASS_$_CKSyncEngine
__ CloudKit: _OBJC_CLASS_$_CKSyncEngineConfiguration
__ CloudKit: _OBJC_METACLASS_$_CKSyncEngine
__ CompanionSync: _OBJC_CLASS_$_SYDegenerateChange
__ CompanionSync: _OBJC_CLASS_$_SYService
__ CompanionSync: _SYErrorDomain
__ CompanionSync: _SYServiceOptionDiskBufferProtectionClass
__ CompanionSync: _SYSessionReasonInitialSync
__ CompanionSync: _SYSessionReasonReunionSync
__ ContentKit: _OBJC_CLASS_$_WFContentCollection
__ ContentKit: _OBJC_CLASS_$_WFContentItemRegistry
__ ContentKit: _OBJC_CLASS_$_WFEmail
__ ContentKit: _OBJC_CLASS_$_WFEmailContentItem
__ ContentKit: _OBJC_CLASS_$_WFFileRepresentation
__ ContentKit: _OBJC_CLASS_$_WFMessage
__ ContentKit: _OBJC_CLASS_$_WFMessageContentItem
__ ContentKit: _OBJC_CLASS_$_WFTemporaryFileManager
__ ContentKit: _WFInstalledAppsEnumerator
__ ContentKit: _WFLogCategorySessionKit
__ ContentKit: _WFLogSubsystem
__ ContentKit: _WFShortcutsAppGroupIdentifier
__ ContentKit: _WFWorkflowAppGroupIdentifier
__ ContentKit: _WFWorkflowKeychainAccessGroup
__ ContentKit: _getWFAppIntentsLogObject
__ ContentKit: _getWFCloudKitSyncLogObject
__ ContentKit: _getWFDialogLogObject
__ ContentKit: _getWFEventTrackerLogObject
__ ContentKit: _getWFFilesLogObject
__ ContentKit: _getWFGeneralLogObject
__ ContentKit: _getWFSessionKitLogObject
__ ContentKit: _getWFSleepLogObject
__ ContentKit: _getWFSpotlightSyncLogObject
__ ContentKit: _getWFTriggerNotificationsLogObject
__ ContentKit: _getWFTriggersLogObject
__ ContentKit: _getWFWatchSyncLogObject
__ ContentKit: _getWFWidgetLogObject
__ ContentKit: _getWFWorkflowExecutionLogObject
__ ContentKit: _getWFXPCRunnerLogObject
__ CoreData: _OBJC_CLASS_$_NSPersistentStoreDescription
__ CoreDuet: _OBJC_CLASS_$__DKBundleIdentifier
__ CoreDuet: _OBJC_CLASS_$__DKEventQuery
__ CoreDuet: _OBJC_CLASS_$__DKKnowledgeStore
__ CoreDuet: _OBJC_CLASS_$__DKQuery
__ CoreDuet: _OBJC_CLASS_$__DKSystemEventStreams
__ CoreDuetContext: _OBJC_CLASS_$__CDClientContext
__ CoreDuetContext: _OBJC_CLASS_$__CDContextQueries
__ CoreDuetContext: _OBJC_CLASS_$__CDContextValue
__ CoreDuetContext: _OBJC_CLASS_$__CDContextualChangeRegistration
__ CoreDuetContext: _OBJC_CLASS_$__CDContextualKeyPath
__ CoreDuetContext: _OBJC_CLASS_$__CDContextualPredicate
__ CoreDuetContext: _OBJC_CLASS_$__CDMDCSContextualPredicate
__ CoreFoundation: _CFBundleGetIdentifier
__ CoreFoundation: _CFBundleGetMainBundle
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _NSCalendarIdentifierGregorian
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSStreamDataWrittenToMemoryStreamKey
__ CoreFoundation: _NSURLIsDirectoryKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSEnumerator
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSInputStream
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSOutputStream
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_METACLASS_$_NSEnumerator
__ CoreFoundation: _OBJC_METACLASS_$_NSUserDefaults
__ CoreFoundation: __CFBundleCopyBundleURLForExecutableURL
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFPreferencesCurrentApplication
__ CoreServices: _OBJC_CLASS_$_LSApplicationIdentity
__ CoreServices: _OBJC_CLASS_$_LSApplicationRecord
__ CoreServices: _OBJC_CLASS_$_LSApplicationWorkspace
__ CoreSpotlight: _OBJC_CLASS_$_CSSearchableIndex
__ CoreSpotlight: _OBJC_CLASS_$_CSSearchableItem
__ CoreTelephony: __CTServerConnectionCopyCellularUsagePolicy
__ CoreTelephony: __CTServerConnectionCreateOnTargetQueue
__ CoreTelephony: __CTServerConnectionRegisterBlockForNotification
__ CoreTelephony: __CTServerConnectionUnregisterForNotification
__ CoreTelephony: _kCTPerAppNetworkDataAccessPolicyChangedNotification
__ FileProvider: _FPDocumentURLFromBookmarkableString
__ FileProvider: _FPItemURLForCrossDeviceItemID
__ FileProvider: _OBJC_CLASS_$_FPItemManager
__ FileProvider: _OBJC_CLASS_$_FPSandboxingURLWrapper
__ Foundation: _NSClassFromString
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSFileProtectionKey
__ Foundation: _NSFileProtectionNone
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSOSStatusErrorDomain
__ Foundation: _NSPOSIXErrorDomain
__ Foundation: _NSSelectorFromString
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCompoundPredicate
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateInterval
__ Foundation: _OBJC_CLASS_$_NSDistributedNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileCoordinator
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSSecurityScopedURLWrapper
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_CLASS_$_NSXPCListener
__ FrontBoardServices: _FBSOpenApplicationOptionKeyActions
__ FrontBoardServices: _FBSOpenApplicationOptionKeyActivateSuspended
__ FrontBoardServices: _OBJC_CLASS_$_FBSDisplayLayoutMonitor
__ FrontBoardServices: _OBJC_CLASS_$_FBSDisplayLayoutMonitorConfiguration
__ FrontBoardServices: _OBJC_CLASS_$_FBSOpenApplicationOptions
__ FrontBoardServices: _OBJC_CLASS_$_FBSOpenApplicationService
__ Intents: _INIntentDefinitionLocalizableFileURLsForBundleRecord
__ Intents: _INRemoveItemAtPath
__ Intents: _OBJC_CLASS_$_INAppDescriptor
__ Intents: _OBJC_CLASS_$_INAppInfo
__ Intents: _OBJC_CLASS_$_INAppIntentDeliverer
__ Intents: _OBJC_CLASS_$_INFile
__ Intents: _OBJC_CLASS_$_INGetOnScreenContentForwardingAction
__ Intents: _OBJC_CLASS_$_INGetOnScreenContentForwardingActionResponse
__ Intents: _OBJC_CLASS_$_INRunWorkflowIntent
__ Intents: _OBJC_CLASS_$_INSchema
__ Intents: _OBJC_CLASS_$_INShortcut
__ Intents: _OBJC_CLASS_$_INSpeakableString
__ Intents: _OBJC_CLASS_$_INVocabulary
__ Intents: _OBJC_CLASS_$__INVocabulary
__ IntentsFoundation: _OBJC_CLASS_$_IFObjectHasher
__ LinkServices: _LNAppShortcutsChangedNotification
__ LinkServices: _OBJC_CLASS_$_LNAutoShortcutsProvider
__ LinkServices: _OBJC_CLASS_$_LNMetadataProvider
__ NanoRegistry: _NRDevicePropertyLocalPairingDataStorePath
__ NanoRegistry: _NRDevicePropertySystemVersion
__ NanoRegistry: _NRPairedDeviceRegistryDevice
__ NanoRegistry: _NRPairedDeviceRegistryDeviceDidUnpairNotification
__ NanoRegistry: _OBJC_CLASS_$_NRPairedDeviceRegistry
__ Network: _nw_path_get_status
__ Network: _nw_path_monitor_cancel
__ Network: _nw_path_monitor_create
__ Network: _nw_path_monitor_set_queue
__ Network: _nw_path_monitor_set_update_handler
__ Network: _nw_path_monitor_start
__ PairedSync: _OBJC_CLASS_$_PSYSyncCoordinator
__ ProtocolBuffer: _OBJC_CLASS_$_PBCodable
__ ProtocolBuffer: _OBJC_CLASS_$_PBDataReader
__ ProtocolBuffer: _OBJC_CLASS_$_PBDataWriter
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._bytes
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._error
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._length
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._pos
__ ProtocolBuffer: _OBJC_METACLASS_$_PBCodable
__ ProtocolBuffer: _PBDataWriterWriteDataField
__ ProtocolBuffer: _PBDataWriterWriteDoubleField
__ ProtocolBuffer: _PBDataWriterWriteFixed32Field
__ ProtocolBuffer: _PBDataWriterWriteInt32Field
__ ProtocolBuffer: _PBDataWriterWriteStringField
__ ProtocolBuffer: _PBDataWriterWriteSubmessage
__ ProtocolBuffer: _PBDataWriterWriteUint64Field
__ ProtocolBuffer: _PBReaderPlaceMark
__ ProtocolBuffer: _PBReaderReadData
__ ProtocolBuffer: _PBReaderReadString
__ ProtocolBuffer: _PBReaderRecallMark
__ ProtocolBuffer: _PBReaderSkipValueWithTag
__ RunningBoardServices: _OBJC_CLASS_$_RBSAssertion
__ RunningBoardServices: _OBJC_CLASS_$_RBSDomainAttribute
__ RunningBoardServices: _OBJC_CLASS_$_RBSProcessIdentity
__ RunningBoardServices: _OBJC_CLASS_$_RBSProcessMonitor
__ RunningBoardServices: _OBJC_CLASS_$_RBSProcessPredicate
__ RunningBoardServices: _OBJC_CLASS_$_RBSProcessState
__ RunningBoardServices: _OBJC_CLASS_$_RBSProcessStateDescriptor
__ RunningBoardServices: _OBJC_CLASS_$_RBSTarget
__ RunningBoardServices: _OBJC_CLASS_$_RBSTerminateContext
__ RunningBoardServices: _OBJC_CLASS_$_RBSTerminateRequest
__ RunningBoardServices: _RBSRequestErrorDomain
__ Security: _SecItemDelete
__ Security: _kSecAttrAccessGroup
__ Security: _kSecClass
__ Security: _kSecClassGenericPassword
__ SoftLinking: __sl_dlopen
__ SpringBoardServices: _OBJC_CLASS_$_SBSRemoteAlertActivationContext
__ SpringBoardServices: _OBJC_CLASS_$_SBSRemoteAlertConfigurationContext
__ SpringBoardServices: _OBJC_CLASS_$_SBSRemoteAlertDefinition
__ SpringBoardServices: _OBJC_CLASS_$_SBSRemoteAlertHandle
__ SpringBoardServices: _OBJC_CLASS_$_SBSRemoteAlertPresentationTarget
__ SpringBoardServices: _SBSOpenApplicationOptionKeyLaunchSceneless
__ UniformTypeIdentifiers: _UTTypeData
__ UserActivity: _OBJC_CLASS_$_UAUserActivity
__ UserNotifications: _OBJC_CLASS_$_UNMutableNotificationCategory
__ UserNotifications: _OBJC_CLASS_$_UNMutableNotificationContent
__ UserNotifications: _OBJC_CLASS_$_UNNotificationAction
__ UserNotifications: _OBJC_CLASS_$_UNNotificationActionIcon
__ UserNotifications: _OBJC_CLASS_$_UNNotificationCategory
__ UserNotifications: _OBJC_CLASS_$_UNNotificationIcon
__ UserNotifications: _OBJC_CLASS_$_UNNotificationRequest
__ UserNotifications: _OBJC_CLASS_$_UNNotificationSound
__ UserNotifications: _OBJC_CLASS_$_UNUserNotificationCenter
__ UserNotifications: _UNNotificationDismissActionIdentifier
__ VoiceShortcutClient: _OBJC_CLASS_$_VCAccessSpecifier
__ VoiceShortcutClient: _OBJC_CLASS_$_VCActionDonationFetcher
__ VoiceShortcutClient: _OBJC_CLASS_$_VCConfiguredSleepWorkflow
__ VoiceShortcutClient: _OBJC_CLASS_$_VCSleepDonationAction
__ VoiceShortcutClient: _OBJC_CLASS_$_VCVoiceShortcut
__ VoiceShortcutClient: _OBJC_CLASS_$_VCVoiceShortcutClient
__ VoiceShortcutClient: _OBJC_CLASS_$_WFAutoShortcutContextualAction
__ VoiceShortcutClient: _OBJC_CLASS_$_WFBitmapContext
__ VoiceShortcutClient: _OBJC_CLASS_$_WFChooseFromListDialogRequest
__ VoiceShortcutClient: _OBJC_CLASS_$_WFChooseFromListDialogResponse
__ VoiceShortcutClient: _OBJC_CLASS_$_WFConfirmInteractionDialogRequest
__ VoiceShortcutClient: _OBJC_CLASS_$_WFConfirmInteractionDialogResponse
__ VoiceShortcutClient: _OBJC_CLASS_$_WFContextualAction
__ VoiceShortcutClient: _OBJC_CLASS_$_WFContextualActionRunDescriptor
__ VoiceShortcutClient: _OBJC_CLASS_$_WFContextualActionRunRequest
__ VoiceShortcutClient: _OBJC_CLASS_$_WFDatabaseObjectDescriptor
__ VoiceShortcutClient: _OBJC_CLASS_$_WFDevice
__ VoiceShortcutClient: _OBJC_CLASS_$_WFDialogAttribution
__ VoiceShortcutClient: _OBJC_CLASS_$_WFDialogRequest
__ VoiceShortcutClient: _OBJC_CLASS_$_WFDialogResponse
__ VoiceShortcutClient: _OBJC_CLASS_$_WFFileType
__ VoiceShortcutClient: _OBJC_CLASS_$_WFFolderQuery
__ VoiceShortcutClient: _OBJC_CLASS_$_WFHandleInteractionDialogRequest
__ VoiceShortcutClient: _OBJC_CLASS_$_WFHandleInteractionDialogResponse
__ VoiceShortcutClient: _OBJC_CLASS_$_WFInputDateDialogRequest
__ VoiceShortcutClient: _OBJC_CLASS_$_WFInputDateDialogResponse
__ VoiceShortcutClient: _OBJC_CLASS_$_WFInputTextDialogRequest
__ VoiceShortcutClient: _OBJC_CLASS_$_WFInputTextDialogResponse
__ VoiceShortcutClient: _OBJC_CLASS_$_WFOnScreenContent
__ VoiceShortcutClient: _OBJC_CLASS_$_WFOnScreenContentNode
__ VoiceShortcutClient: _OBJC_CLASS_$_WFShareSheetWorkflow
__ VoiceShortcutClient: _OBJC_CLASS_$_WFShowAlertDialogRequest
__ VoiceShortcutClient: _OBJC_CLASS_$_WFShowSecureConfirmationDialogRequest
__ VoiceShortcutClient: _OBJC_CLASS_$_WFStingWorkflow
__ VoiceShortcutClient: _OBJC_CLASS_$_WFSystemSurfaceWorkflowStatusRegistry
__ VoiceShortcutClient: _OBJC_CLASS_$_WFToggleFocusModeContextualAction
__ VoiceShortcutClient: _OBJC_CLASS_$_WFToggleFocusModeContextualActionFocusMode
__ VoiceShortcutClient: _OBJC_CLASS_$_WFWorkflowCollection
__ VoiceShortcutClient: _OBJC_CLASS_$_WFWorkflowDatabaseRunDescriptor
__ VoiceShortcutClient: _OBJC_CLASS_$_WFWorkflowDescriptor
__ VoiceShortcutClient: _OBJC_CLASS_$_WFWorkflowIcon
__ VoiceShortcutClient: _OBJC_CLASS_$_WFWorkflowIconDrawer
__ VoiceShortcutClient: _OBJC_CLASS_$_WFWorkflowIconDrawerContext
__ VoiceShortcutClient: _OBJC_CLASS_$_WFWorkflowQuery
__ VoiceShortcutClient: _OBJC_CLASS_$_WFWorkflowRunRequest
__ VoiceShortcutClient: _OBJC_CLASS_$_WFWorkflowRunResult
__ VoiceShortcutClient: _OBJC_CLASS_$_WFWorkflowRunningContext
__ VoiceShortcutClient: _VCBundleIdentifierPodcasts
__ VoiceShortcutClient: _VCBundleIdentifierShortcutsViewService
__ VoiceShortcutClient: _VCBundleIdentifierShortcutsiOS
__ VoiceShortcutClient: _VCCurrentPlatformShortcutsAppBundleIdentifier
__ VoiceShortcutClient: _VCCurrentPlatformShortcutsAutomationLockscreenBundleIdentifier
__ VoiceShortcutClient: _VCDeviceHasBeenUnlocked
__ VoiceShortcutClient: _VCInactiveAppsFromList
__ VoiceShortcutClient: _VCIsInternalBuild
__ VoiceShortcutClient: _VCSiriShortcutsSuiteName
__ VoiceShortcutClient: _VCVoiceShortcutClientAppIntentsArchivingErrorDomain
__ VoiceShortcutClient: _VCVoiceShortcutDataDidUpdateNotification
__ VoiceShortcutClient: _VCVoiceShortcutExistsWithPhraseAssociatedAppBundleIdentifierKey
__ VoiceShortcutClient: _VCVoiceShortcutExistsWithPhraseIdentifierKey
__ VoiceShortcutClient: _VCVoiceShortcutExistsWithPhraseNameKey
__ VoiceShortcutClient: _VCVoiceShortcutManagerConfigureXPCInterface
__ VoiceShortcutClient: _VCVoiceShortcutManagerXPCInterfaceMachServiceName
__ VoiceShortcutClient: _VCVoiceShortcutsErrorDomain
__ VoiceShortcutClient: _WFDeviceCapabilityHomeButton
__ VoiceShortcutClient: _WFDialogNotificationCategoryIdentifier
__ VoiceShortcutClient: _WFDialogNotificationConfirmationCategoryIdentifier
__ VoiceShortcutClient: _WFOnScreenContentNodeSourceGlobalNSUserActivity
__ VoiceShortcutClient: _WFStaticContextualActionDefinitionsForSurface
__ VoiceShortcutClient: _WFViewServiceDismissalReasonNotification
__ VoiceShortcutClient: _WFViewServiceDismissalReasonSystemCancelled
__ VoiceShortcutClient: _WFViewServiceDismissalReasonUserCancelled
__ VoiceShortcutClient: _WFWorkflowRunSourceHomeScreen
__ VoiceShortcutClient: _WFWorkflowRunSourceLockScreenPrediction
__ VoiceShortcutClient: _WFWorkflowRunSourcePersonalAutomation
__ VoiceShortcutClient: _WFWorkflowRunSourceSpotlightPrediction
__ VoiceShortcutClient: _WFWorkflowTypeShareSheet
__ VoiceShortcutClient: _WFWorkflowTypeSleep
__ VoiceShortcutClient: _WFWorkflowTypeWatch
__ WorkflowKit: _OBJC_CLASS_$_ICManager
__ WorkflowKit: _OBJC_CLASS_$_MTLModel
__ WorkflowKit: _OBJC_CLASS_$_MTLValueTransformer
__ WorkflowKit: _OBJC_CLASS_$_VCVoiceShortcutPeaceMigrator
__ WorkflowKit: _OBJC_CLASS_$_WFAXSDSettings
__ WorkflowKit: _OBJC_CLASS_$_WFActionDonationRecommender
__ WorkflowKit: _OBJC_CLASS_$_WFActionRegistry
__ WorkflowKit: _OBJC_CLASS_$_WFActionRequest
__ WorkflowKit: _OBJC_CLASS_$_WFAddShortcutEvent
__ WorkflowKit: _OBJC_CLASS_$_WFAirplaneModeTrigger
__ WorkflowKit: _OBJC_CLASS_$_WFAlarmTrigger
__ WorkflowKit: _OBJC_CLASS_$_WFAppInBackgroundTrigger
__ WorkflowKit: _OBJC_CLASS_$_WFAppInFocusTrigger
__ WorkflowKit: _OBJC_CLASS_$_WFArriveLocationTrigger
__ WorkflowKit: _OBJC_CLASS_$_WFAskParameterDialogRequest
__ WorkflowKit: _OBJC_CLASS_$_WFAutoShortcutsPreferences
__ WorkflowKit: _OBJC_CLASS_$_WFBatteryLevelTrigger
__ WorkflowKit: _OBJC_CLASS_$_WFBluetoothTrigger
__ WorkflowKit: _OBJC_CLASS_$_WFBuiltInCloudKitCollectionOrdering
__ WorkflowKit: _OBJC_CLASS_$_WFCarPlayConnectionTrigger
__ WorkflowKit: _OBJC_CLASS_$_WFCloudKitAutoShortcutsPreferences
__ WorkflowKit: _OBJC_CLASS_$_WFCloudKitCollectionOrdering
__ WorkflowKit: _OBJC_CLASS_$_WFCloudKitFolder
__ WorkflowKit: _OBJC_CLASS_$_WFCloudKitItemRequest
__ WorkflowKit: _OBJC_CLASS_$_WFCloudKitLegacyWorkflowOrdering
__ WorkflowKit: _OBJC_CLASS_$_WFCloudKitSyncFlags
__ WorkflowKit: _OBJC_CLASS_$_WFCloudKitSyncSession
__ WorkflowKit: _OBJC_CLASS_$_WFCloudKitSyncToken
__ WorkflowKit: _OBJC_CLASS_$_WFCloudKitWorkflow
__ WorkflowKit: _OBJC_CLASS_$_WFComplicationMetricsStorage
__ WorkflowKit: _OBJC_CLASS_$_WFDNDTrigger
__ WorkflowKit: _OBJC_CLASS_$_WFDatabase
__ WorkflowKit: _OBJC_CLASS_$_WFDebouncer
__ WorkflowKit: _OBJC_CLASS_$_WFDefaultShortcut
__ WorkflowKit: _OBJC_CLASS_$_WFDefaultShortcutPersonalization
__ WorkflowKit: _OBJC_CLASS_$_WFDefaultShortcutPersonalizationContext
__ WorkflowKit: _OBJC_CLASS_$_WFEmailTrigger
__ WorkflowKit: _OBJC_CLASS_$_WFFileAccessDialogRequest
__ WorkflowKit: _OBJC_CLASS_$_WFFileAccessDialogResponse
__ WorkflowKit: _OBJC_CLASS_$_WFHealthFeatureAvailability
__ WorkflowKit: _OBJC_CLASS_$_WFHomeManager
__ WorkflowKit: _OBJC_CLASS_$_WFHomeScreenController
__ WorkflowKit: _OBJC_CLASS_$_WFLeaveLocationTrigger
__ WorkflowKit: _OBJC_CLASS_$_WFLinkAction
__ WorkflowKit: _OBJC_CLASS_$_WFLinkActionProvider
__ WorkflowKit: _OBJC_CLASS_$_WFLinkConfirmationDialogRequest
__ WorkflowKit: _OBJC_CLASS_$_WFLinkConfirmationDialogResponse
__ WorkflowKit: _OBJC_CLASS_$_WFLinkResultDialogRequest
__ WorkflowKit: _OBJC_CLASS_$_WFLinkSnippetDialogResponse
__ WorkflowKit: _OBJC_CLASS_$_WFLinkSnippetEnvironmentDialogRequest
__ WorkflowKit: _OBJC_CLASS_$_WFLinkSnippetEnvironmentDialogResponse
__ WorkflowKit: _OBJC_CLASS_$_WFLocationTrigger
__ WorkflowKit: _OBJC_CLASS_$_WFLowPowerModeTrigger
__ WorkflowKit: _OBJC_CLASS_$_WFMessageTrigger
__ WorkflowKit: _OBJC_CLASS_$_WFMetricStatusEvent
__ WorkflowKit: _OBJC_CLASS_$_WFNFCTrigger
__ WorkflowKit: _OBJC_CLASS_$_WFOutOfProcessWorkflowController
__ WorkflowKit: _OBJC_CLASS_$_WFPlugInTrigger
__ WorkflowKit: _OBJC_CLASS_$_WFPredictedLocationTransitionTrigger
__ WorkflowKit: _OBJC_CLASS_$_WFPropertyListJSONAdapter
__ WorkflowKit: _OBJC_CLASS_$_WFRemoteExecutionCoordinator
__ WorkflowKit: _OBJC_CLASS_$_WFRemoteQuarantinePolicyManager
__ WorkflowKit: _OBJC_CLASS_$_WFRunActionEvent
__ WorkflowKit: _OBJC_CLASS_$_WFRunShortcutEvent
__ WorkflowKit: _OBJC_CLASS_$_WFScreenOnObserver
__ WorkflowKit: _OBJC_CLASS_$_WFSharingSettings
__ WorkflowKit: _OBJC_CLASS_$_WFShowActionInterfaceDialogRequest
__ WorkflowKit: _OBJC_CLASS_$_WFShowActionInterfaceDialogResponse
__ WorkflowKit: _OBJC_CLASS_$_WFShowContentDialogRequest
__ WorkflowKit: _OBJC_CLASS_$_WFShowDialogEvent
__ WorkflowKit: _OBJC_CLASS_$_WFSingleStepHomeScreenShortcutCompletionDialogRequest
__ WorkflowKit: _OBJC_CLASS_$_WFSleepTrigger
__ WorkflowKit: _OBJC_CLASS_$_WFSmartPromptDialogRequest
__ WorkflowKit: _OBJC_CLASS_$_WFSmartPromptDialogResponse
__ WorkflowKit: _OBJC_CLASS_$_WFSoundRecognitionTrigger
__ WorkflowKit: _OBJC_CLASS_$_WFSuspendShortcutEvent
__ WorkflowKit: _OBJC_CLASS_$_WFTimeOfDayTrigger
__ WorkflowKit: _OBJC_CLASS_$_WFTimeTriggerLogic
__ WorkflowKit: _OBJC_CLASS_$_WFTrigger
__ WorkflowKit: _OBJC_CLASS_$_WFTriggerManager
__ WorkflowKit: _OBJC_CLASS_$_WFTriggeredAutomationEvent
__ WorkflowKit: _OBJC_CLASS_$_WFUIPresenter
__ WorkflowKit: _OBJC_CLASS_$_WFUIPresenterLaunchAngelConnection
__ WorkflowKit: _OBJC_CLASS_$_WFUIPresenterLocalConnection
__ WorkflowKit: _OBJC_CLASS_$_WFUserFocusActivityTrigger
__ WorkflowKit: _OBJC_CLASS_$_WFWifiTrigger
__ WorkflowKit: _OBJC_CLASS_$_WFWorkflow
__ WorkflowKit: _OBJC_CLASS_$_WFWorkflowCreationOptions
__ WorkflowKit: _OBJC_CLASS_$_WFWorkflowFile
__ WorkflowKit: _OBJC_CLASS_$_WFWorkflowReference
__ WorkflowKit: _OBJC_CLASS_$_WFWorkoutTrigger
__ WorkflowKit: _OBJC_CLASS_$__ICURLRequest
__ WorkflowKit: _OBJC_METACLASS_$_MTLModel
__ WorkflowKit: _WFBundledDefinitionDirectoryURL
__ WorkflowKit: _WFCKOperationGroupNameInitialSetup
__ WorkflowKit: _WFCloudKitShortcutZoneName
__ WorkflowKit: _WFCloudKitSyncEnabledKey
__ WorkflowKit: _WFCloudKitSyncZoneWasPurgedKey
__ WorkflowKit: _WFDefaultShortcutsVersionKey
__ WorkflowKit: _WFDefinitionDirectoryURLForBundleIdentifier
__ WorkflowKit: _WFDefinitionDirectoryURLsForBundleIdentifier
__ WorkflowKit: _WFFinishShortcutEventKey
__ WorkflowKit: _WFGetAzulBuiltInCollectionIdentifiers
__ WorkflowKit: _WFGetBuiltInCollectionIdentifiers
__ WorkflowKit: _WFLastViewedAutoShortcutsAtTimeKey
__ WorkflowKit: _WFNotificationAutomationsEnabledCategory
__ WorkflowKit: _WFNotificationTriggerNotifyBackgroundCategory
__ WorkflowKit: _WFNotificationTriggerPromptCategory
__ WorkflowKit: _WFOpenAppActionIdentifier
__ WorkflowKit: _WFOpenWorkflowURLHandlerScrolledToActionErrorMessageKey
__ WorkflowKit: _WFOpenWorkflowURLHandlerScrolledToActionIndexKey
__ WorkflowKit: _WFOutOfProcessWorkflowControllerErrorDomain
__ WorkflowKit: _WFPendingTriggerEventIDsFromNotificationUserInfo
__ WorkflowKit: _WFProcessIsRunningInUserSetup
__ WorkflowKit: _WFReadableTriggerNotificationLevel
__ WorkflowKit: _WFRecordFromSystemFieldsData
__ WorkflowKit: _WFRecoverDatabaseContentsIfNeeded
__ WorkflowKit: _WFRunWorkflowURLHandlerWorkflowIdentifierKey
__ WorkflowKit: _WFShortcutsAutomationsBackgroundRunningTestingKey
__ WorkflowKit: _WFShortcutsContextualActionsMigratedToNewDomainIdentifiersKey
__ WorkflowKit: _WFShortcutsKeepToastedBannersAroundUntilNewDialogsKey
__ WorkflowKit: _WFShortcutsToastedBannerAutoCollapseDurationKey
__ WorkflowKit: _WFStringForDialogPresentationMode
__ WorkflowKit: _WFSyncedDefinitionDirectoryURL
__ WorkflowKit: _WFTriggerIDFromNotificationUserInfo
__ WorkflowKit: _WFTriggerIDsToDisableFromNotificationUserInfo
__ WorkflowKit: _WFTriggerIDsToDisableNotificationUserInfoFromTriggers
__ WorkflowKit: _WFTriggerNotificationUserInfo
__ WorkflowKit: _WFUIPresenterXPCInterface
__ WorkflowKit: _WFVoiceShortcutMigrationDidRunKey
__ WorkflowKit: _WFWorkflowCollectionIdentifierRoot
__ WorkflowKit: _WFWorkflowControllerActionIndexErrorKey
__ libSystem.B.dylib: _CC_SHA1_Final
__ libSystem.B.dylib: _CC_SHA1_Init
__ libSystem.B.dylib: _CC_SHA1_Update
__ libSystem.B.dylib: _OBJC_CLASS_$_OS_dispatch_queue
__ libSystem.B.dylib: _XPC_ACTIVITY_CHECK_IN
__ libSystem.B.dylib: _XPC_ACTIVITY_DELAY
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY_UTILITY
__ libSystem.B.dylib: _XPC_ACTIVITY_REPEATING
__ libSystem.B.dylib: __Block_copy
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __Block_release
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_activity_create
__ libSystem.B.dylib: __os_activity_current
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: _container_create_or_lookup_for_current_user
__ libSystem.B.dylib: _container_delete
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_assert_queue_not$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dladdr
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _fmod
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _malloc_size
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _notify_post
__ libSystem.B.dylib: _os_activity_apply
__ libSystem.B.dylib: _os_activity_scope_enter
__ libSystem.B.dylib: _os_activity_scope_leave
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_signpost_id_generate
__ libSystem.B.dylib: _os_transaction_create
__ libSystem.B.dylib: _os_transaction_needs_more_time
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _voucher_adopt
__ libSystem.B.dylib: _voucher_copy
__ libSystem.B.dylib: _xpc_activity_add_eligibility_changed_handler
__ libSystem.B.dylib: _xpc_activity_copy_criteria
__ libSystem.B.dylib: _xpc_activity_get_state
__ libSystem.B.dylib: _xpc_activity_register
__ libSystem.B.dylib: _xpc_activity_remove_eligibility_changed_handler
__ libSystem.B.dylib: _xpc_activity_set_criteria
__ libSystem.B.dylib: _xpc_activity_set_state
__ libSystem.B.dylib: _xpc_activity_should_defer
__ libSystem.B.dylib: _xpc_activity_unregister
__ libSystem.B.dylib: _xpc_copy_description
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_set_bool
__ libSystem.B.dylib: _xpc_dictionary_set_int64
__ libSystem.B.dylib: _xpc_dictionary_set_string
__ libSystem.B.dylib: _xpc_equal
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_allocWithZone
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x10
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x27
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x5
__ libobjc.A.dylib: _objc_retain_x6
__ libobjc.A.dylib: _objc_retain_x7
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_retain_x9
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libswiftCore.dylib: _OBJC_CLASS_$__TtCs12_SwiftObject
__ libswiftCore.dylib: _OBJC_METACLASS_$__TtCs12_SwiftObject
__ libswiftCore.dylib: __swiftEmptyArrayStorage
__ libswiftCore.dylib: __swiftEmptyDictionarySingleton
__ libswiftCore.dylib: __swift_stdlib_reportUnimplementedInitializer
__ libswiftCore.dylib: _swift_allocError
__ libswiftCore.dylib: _swift_allocObject
__ libswiftCore.dylib: _swift_arrayDestroy
__ libswiftCore.dylib: _swift_beginAccess
__ libswiftCore.dylib: _swift_bridgeObjectRelease
__ libswiftCore.dylib: _swift_bridgeObjectRelease_n
__ libswiftCore.dylib: _swift_bridgeObjectRetain
__ libswiftCore.dylib: _swift_bridgeObjectRetain_n
__ libswiftCore.dylib: _swift_deallocClassInstance
__ libswiftCore.dylib: _swift_deallocObject
__ libswiftCore.dylib: _swift_deallocPartialClassInstance
__ libswiftCore.dylib: _swift_deletedMethodError
__ libswiftCore.dylib: _swift_dynamicCast
__ libswiftCore.dylib: _swift_endAccess
__ libswiftCore.dylib: _swift_errorRelease
__ libswiftCore.dylib: _swift_errorRetain
__ libswiftCore.dylib: _swift_getErrorValue
__ libswiftCore.dylib: _swift_getForeignTypeMetadata
__ libswiftCore.dylib: _swift_getObjCClassFromMetadata
__ libswiftCore.dylib: _swift_getObjCClassMetadata
__ libswiftCore.dylib: _swift_getObjectType
__ libswiftCore.dylib: _swift_getTypeByMangledNameInContext
__ libswiftCore.dylib: _swift_getTypeByMangledNameInContextInMetadataState
__ libswiftCore.dylib: _swift_getWitnessTable
__ libswiftCore.dylib: _swift_initStackObject
__ libswiftCore.dylib: _swift_isEscapingClosureAtFileLocation
__ libswiftCore.dylib: _swift_isUniquelyReferenced_nonNull_native
__ libswiftCore.dylib: _swift_isaMask
__ libswiftCore.dylib: _swift_lookUpClassMethod
__ libswiftCore.dylib: _swift_once
__ libswiftCore.dylib: _swift_release
__ libswiftCore.dylib: _swift_retain
__ libswiftCore.dylib: _swift_slowAlloc
__ libswiftCore.dylib: _swift_slowDealloc
__ libswiftCore.dylib: _swift_unknownObjectRelease
__ libswiftCore.dylib: _swift_unknownObjectRetain
__ libswiftCore.dylib: _swift_unknownObjectWeakAssign
__ libswiftCore.dylib: _swift_unknownObjectWeakDestroy
__ libswiftCore.dylib: _swift_unknownObjectWeakInit
__ libswiftCore.dylib: _swift_unknownObjectWeakLoadStrong
__ libswiftCore.dylib: _swift_willThrow
__ libswift_Concurrency.dylib: _swift_continuation_await
__ libswift_Concurrency.dylib: _swift_continuation_init
__ libswift_Concurrency.dylib: _swift_continuation_throwingResume
__ libswift_Concurrency.dylib: _swift_continuation_throwingResumeWithError
__ libswift_Concurrency.dylib: _swift_task_alloc
__ libswift_Concurrency.dylib: _swift_task_create
__ libswift_Concurrency.dylib: _swift_task_dealloc
__ libswift_Concurrency.dylib: _swift_task_switch
WFToastManager : NSObject
 @property  <WFToastManagerDelegate> *delegate
 @property  WFSessionKitAssertion *toastedSession

  // instance methods
  -[WFToastManager setDelegate:]
  -[WFToastManager delegate]
  -[WFToastManager .cxx_destruct]
  -[WFToastManager initWithDelegate:]
  -[WFToastManager init]
  -[WFToastManager toastedSession]
  -[WFToastManager toastWithSessionWithIdentifier:]
  -[WFToastManager eatTheToast]


VCDaemonXPCEventHandler : NSObject
 @property  NSArray *streams

  // instance methods
  -[VCDaemonXPCEventHandler streams]
  -[VCDaemonXPCEventHandler removeObserver:name:]
  -[VCDaemonXPCEventHandler .cxx_destruct]
  -[VCDaemonXPCEventHandler initWithStreams:]
  -[VCDaemonXPCEventHandler addObserver:selector:name:]
  -[VCDaemonXPCEventHandler removeObserver:]
  -[VCDaemonXPCEventHandler initWithStreams:queue:]
  -[VCDaemonXPCEventHandler init]


_TtC14VoiceShortcuts8VCDaemon : Swift._SwiftObject

VCTriggerEventRunner : NSObject <WFWorkflowRunCoordinatorObserver>
 @property  <WFDatabaseProvider> *databaseProvider
 @property  <VCTriggerEventRunnerDelegate> *delegate
 @property  WFWorkflowRunEvent *inProgressRunEvent
 @property  WFConfiguredTrigger *inProgressTrigger
 @property  WFWorkflowRunningContext *inProgressRunningContext
 @property  WFWorkflowRunCoordinator *runCoordinator
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VCTriggerEventRunner delegate]
  -[VCTriggerEventRunner runCoordinator]
  -[VCTriggerEventRunner .cxx_destruct]
  -[VCTriggerEventRunner databaseProvider]
  -[VCTriggerEventRunner runCoordinator:didFinishRunningWorkflowWithError:runningContext:cancelled:]
  -[VCTriggerEventRunner initWithDatabaseProvider:delegate:runCoordinator:]
  -[VCTriggerEventRunner startRunningWorkflow:forTrigger:eventInfo:]
  -[VCTriggerEventRunner isRunningWorkflowWithIdentifier:]
  -[VCTriggerEventRunner logPowerLogEventForConfiguredTrigger:workflowReference:]
  -[VCTriggerEventRunner inProgressRunEvent]
  -[VCTriggerEventRunner setInProgressRunEvent:]
  -[VCTriggerEventRunner inProgressTrigger]
  -[VCTriggerEventRunner setInProgressTrigger:]
  -[VCTriggerEventRunner inProgressRunningContext]
  -[VCTriggerEventRunner setInProgressRunningContext:]


VCVoiceShortcutManager : NSObject <HMHomeManagerDelegate>
 @property  HMHomeManager *homeManager
 @property  BOOL addingDefaultShortcuts
 @property  WFDatabase *database
 @property  <WFDatabaseProvider> *databaseProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VCVoiceShortcutManager resetDefaultShortcutFlagsWithAccessSpecifier:completion:]
  -[VCVoiceShortcutManager setPerWorkflowStateData:forSmartPromptWithActionUUID:reference:]
  -[VCVoiceShortcutManager unarchiveActionFromData:withActionMetadata:completion:]
  -[VCVoiceShortcutManager logHomescreenFastPathRunEventForShortcutWithWebClip:]
  -[VCVoiceShortcutManager getShortcutSuggestionsForAppWithBundleIdentifier:accessSpecifier:completion:]
  -[VCVoiceShortcutManager addVoiceShortcut:phrase:accessSpecifier:completion:]
  -[VCVoiceShortcutManager archiveAction:withActionMetadata:completion:]
  -[VCVoiceShortcutManager deleteVoiceShortcutWithIdentifier:name:accessSpecifier:completion:]
  -[VCVoiceShortcutManager createShortcutWithRecordData:name:shortcutSource:accessSpecifier:completion:]
  -[VCVoiceShortcutManager lsDatabaseChangedSinceLastCheck]
  -[VCVoiceShortcutManager .cxx_destruct]
  -[VCVoiceShortcutManager setSpotlightAutoShortcutsEnablement:forBundleIdentifier:completion:]
  -[VCVoiceShortcutManager getVoiceShortcutWithPhrase:accessSpecifier:completion:]
  -[VCVoiceShortcutManager getVoiceShortcutsForAppsWithBundleIdentifiers:accessSpecifier:completion:]
  -[VCVoiceShortcutManager getSleepActionSuggestionsForAppWithBundleIdentifier:accessSpecifier:options:completion:]
  -[VCVoiceShortcutManager actionWithSerializedParameters:actionMetadata:]
  -[VCVoiceShortcutManager createSleepWorkflow:completion:]
  -[VCVoiceShortcutManager addDefaultShortcutsWithCompletion:]
  -[VCVoiceShortcutManager setAddingDefaultShortcuts:]
  -[VCVoiceShortcutManager homeManager]
  -[VCVoiceShortcutManager getShortcutSuggestionsForAllAppsWithLimit:accessSpecifier:completion:]
  -[VCVoiceShortcutManager updateLSDatabaseAnchors]
  -[VCVoiceShortcutManager applicationWasUnregistered:]
  -[VCVoiceShortcutManager addDefaultShortcutsWithAccessSpecifier:completion:]
  -[VCVoiceShortcutManager getVoiceShortcutWithIdentifier:accessSpecifier:completion:]
  -[VCVoiceShortcutManager deleteStaleSuggestions]
  -[VCVoiceShortcutManager drawGlyphs:withBackgroundColorValues:padding:rounded:intoContext:]
  -[VCVoiceShortcutManager getNumberOfVoiceShortcutsWithAccessSpecifier:completion:]
  -[VCVoiceShortcutManager database]
  -[VCVoiceShortcutManager getResultsForQuery:resultClass:completion:]
  -[VCVoiceShortcutManager getSpotlightAutoShortcutsEnablementForBundleIdentifier:completion:]
  -[VCVoiceShortcutManager setShortcutSuggestions:forAppWithBundleIdentifier:accessSpecifier:]
  -[VCVoiceShortcutManager isAutoShortcutDisabledForBundleIdentifier:autoShortcutIdentifier:completion:]
  -[VCVoiceShortcutManager getVoiceShortcutsWithAccessSpecifier:completion:]
  -[VCVoiceShortcutManager phraseHasHomeKitConflict:]
  -[VCVoiceShortcutManager initWithDatabaseProvider:eventHandler:]
  -[VCVoiceShortcutManager requestShortcutsSpotlightFullReindex]
  -[VCVoiceShortcutManager getValueForDescriptor:resultClass:completion:]
  -[VCVoiceShortcutManager getDefaultShortcutEligibilityWithCompletion:]
  -[VCVoiceShortcutManager addNewFolderWithPersonalizedShortcuts:completionHandler:]
  -[VCVoiceShortcutManager updateVoiceShortcutWithIdentifier:phrase:shortcut:accessSpecifier:completion:]
  -[VCVoiceShortcutManager addingDefaultShortcuts]
  -[VCVoiceShortcutManager getSleepActionSuggestionsForAppWithBundleIdentifier:shouldFilterBySleep:accessSpecifier:completion:]
  -[VCVoiceShortcutManager isPhraseUsable:inDatabase:error:]
  -[VCVoiceShortcutManager getInactiveAppsWithAccessSpecifier:completion:]
  -[VCVoiceShortcutManager requestDataMigrationWithCompletion:]
  -[VCVoiceShortcutManager deleteSuggestionsFromApps:]
  -[VCVoiceShortcutManager getSiriAutoShortcutsEnablementForBundleIdentifier:completion:]
  -[VCVoiceShortcutManager getSleepActionSuggestionsForAllAppsWithOptions:accessSpecifier:completion:]
  -[VCVoiceShortcutManager setSiriAutoShortcutsEnablement:forBundleIdentifier:completion:]
  -[VCVoiceShortcutManager deleteSleepWorkflowWithIdentifier:completion:]
  -[VCVoiceShortcutManager getSleepActionSuggestionsForAllAppsFilteringBySleep:accessSpecifier:completion:]
  -[VCVoiceShortcutManager databaseProvider]
  -[VCVoiceShortcutManager setAutoShortcutDisabledForBundleIdentifier:autoShortcutDisabled:autoShortcutIdentifier:completion:]


WFTriggerNotificationScheduler : NSObject
 @property  <WFDatabaseProvider> *databaseProvider
 @property  VCUserNotificationManager *userNotificationManager
 @property  NSObject<OS_dispatch_queue> *queue

  // class methods
  +[WFTriggerNotificationScheduler shortenTimeIntervalsForTesting]

  // instance methods
  -[WFTriggerNotificationScheduler initWithUserNotificationManager:databaseProvider:]
  -[WFTriggerNotificationScheduler registerConfiguredTrigger:delay:]
  -[WFTriggerNotificationScheduler migrateAllTriggersCreatedBeforeBackgroundRunningWithDatabase:]
  -[WFTriggerNotificationScheduler registerWithDatabaseProvider:]
  -[WFTriggerNotificationScheduler userNotificationManager]
  -[WFTriggerNotificationScheduler .cxx_destruct]
  -[WFTriggerNotificationScheduler scheduleTriggerForNotifications:]
  -[WFTriggerNotificationScheduler cancelActivitiesFromTriggerIdentifier:]
  -[WFTriggerNotificationScheduler cancelActivitiesFromTrigger:]
  -[WFTriggerNotificationScheduler postBackgroundRunningNotificationForTrigger:]
  -[WFTriggerNotificationScheduler cancelAllActivitiesFromTriggers:]
  -[WFTriggerNotificationScheduler queue]
  -[WFTriggerNotificationScheduler updateTriggerNotificationLevels:database:]
  -[WFTriggerNotificationScheduler databaseProvider]
  -[WFTriggerNotificationScheduler initialRunDateForConfiguredTrigger:]


VCDailyMetricSubmitter : VCMetricSubmitter
  // class methods
  +[VCDailyMetricSubmitter activityIdentifier]

  // instance methods
  -[VCDailyMetricSubmitter initWithDatabaseProvider:]
  -[VCDailyMetricSubmitter event]


VCCKSyncEngine : CKSyncEngine
 @property  <VCCKSyncEngineDataSource> *dataSource

  // instance methods
  -[VCCKSyncEngine didReceiveDatabaseNotification:]


VCShortcutsObliterator : NSObject
 @property  WFTriggerRegistrar *triggerRegistrar
 @property  NSSet *syncDataHandlers

  // instance methods
  -[VCShortcutsObliterator .cxx_destruct]
  -[VCShortcutsObliterator triggerRegistrar]
  -[VCShortcutsObliterator initWithTriggerRegistrar:syncDataHandlers:]
  -[VCShortcutsObliterator obliterate:]
  -[VCShortcutsObliterator deleteKeychainItemsWithError:]
  -[VCShortcutsObliterator deleteAppGroupWithIdentifier:error:]
  -[VCShortcutsObliterator deleteDataVaultWithError:]
  -[VCShortcutsObliterator terminateProcessWithIdentifier:assertion:error:]
  -[VCShortcutsObliterator resetWatchSync]
  -[VCShortcutsObliterator syncDataHandlers]


VCWeeklyMetricSubmitter : VCMetricSubmitter
  // class methods
  +[VCWeeklyMetricSubmitter activityIdentifier]

  // instance methods
  -[VCWeeklyMetricSubmitter initWithDatabaseProvider:]
  -[VCWeeklyMetricSubmitter event]


WFUserNotificationManager : NSObject <UNUserNotificationCenterDelegate>
 @property  NSMutableSet *categories
 @property  NSMutableDictionary *observers
 @property  UNUserNotificationCenter *notificationCenter
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WFUserNotificationManager notificationCenter]
  -[WFUserNotificationManager categories]
  -[WFUserNotificationManager .cxx_destruct]
  -[WFUserNotificationManager userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:]
  -[WFUserNotificationManager categoryIdentifiers]
  -[WFUserNotificationManager setObservers:]
  -[WFUserNotificationManager removeObserver:]
  -[WFUserNotificationManager setCategories:]
  -[WFUserNotificationManager init]
  -[WFUserNotificationManager removeNotificationsWithIdentifiers:]
  -[WFUserNotificationManager observers]
  -[WFUserNotificationManager registerCategoriesIfNecessary:]
  -[WFUserNotificationManager addObserver:forCategory:]
  -[WFUserNotificationManager removeStaleNotificationsWithCompletion:]


VCPBIntentDefinitionFile : PBCodable <NSCopying>
 @property  NSString *name
 @property  NSData *data

  // instance methods
  -[VCPBIntentDefinitionFile copyTo:]
  -[VCPBIntentDefinitionFile .cxx_destruct]
  -[VCPBIntentDefinitionFile mergeFrom:]
  -[VCPBIntentDefinitionFile setData:]
  -[VCPBIntentDefinitionFile dictionaryRepresentation]
  -[VCPBIntentDefinitionFile setName:]
  -[VCPBIntentDefinitionFile copyWithZone:]
  -[VCPBIntentDefinitionFile name]
  -[VCPBIntentDefinitionFile readFrom:]
  -[VCPBIntentDefinitionFile writeTo:]
  -[VCPBIntentDefinitionFile isEqual:]
  -[VCPBIntentDefinitionFile data]


VCMetricCheckIn : NSObject
 @property  long long mode
 @property  NSUserDefaults *userDefaults
 @property  NSDate *currentDate
 @property  NSDate *checkInDate
 @property  NSDate *intervalStartDate

  // class methods
  +[VCMetricCheckIn recentCheckInWithMode:]

  // instance methods
  -[VCMetricCheckIn userDefaults]
  -[VCMetricCheckIn currentDate]
  -[VCMetricCheckIn calendar]
  -[VCMetricCheckIn mode]
  -[VCMetricCheckIn .cxx_destruct]
  -[VCMetricCheckIn initWithCurrentDate:mode:defaults:]
  -[VCMetricCheckIn isCheckInAllowed]
  -[VCMetricCheckIn updateCheckInToNow]
  -[VCMetricCheckIn checkInDate]
  -[VCMetricCheckIn intervalStartDate]
  -[VCMetricCheckIn checkInKey]


VCSyncDataHandler : NSObject <VCSyncDataHandling>
 @property  NSHashTable *servicesTable
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSArray *services
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[VCSyncDataHandler messageType]
  +[VCSyncDataHandler changeClass]

  // instance methods
  -[VCSyncDataHandler services]
  -[VCSyncDataHandler .cxx_destruct]
  -[VCSyncDataHandler requestSync]
  -[VCSyncDataHandler queue]
  -[VCSyncDataHandler init]
  -[VCSyncDataHandler unsyncedChangesForSyncService:metadata:error:]
  -[VCSyncDataHandler markChangesAsSynced:withSyncService:metadata:error:]
  -[VCSyncDataHandler resetSyncStateForService:error:]
  -[VCSyncDataHandler applyChanges:fromSyncService:error:]
  -[VCSyncDataHandler deleteSyncedData:]
  -[VCSyncDataHandler registerSyncService:]
  -[VCSyncDataHandler deregisterSyncService:]
  -[VCSyncDataHandler requestFullResync]
  -[VCSyncDataHandler servicesTable]


VCTriggerNotificationDebouncerItem : NSObject
 @property  WFConfiguredTrigger *configuredTrigger
 @property  WFWorkflowReference *reference
 @property  WFDebouncer *debouncer
 @property  NSSet *triggerEventIDs

  // instance methods
  -[VCTriggerNotificationDebouncerItem reference]
  -[VCTriggerNotificationDebouncerItem debouncer]
  -[VCTriggerNotificationDebouncerItem .cxx_destruct]
  -[VCTriggerNotificationDebouncerItem initWithConfiguredTrigger:reference:triggerEventIDs:debouncer:]
  -[VCTriggerNotificationDebouncerItem configuredTrigger]
  -[VCTriggerNotificationDebouncerItem triggerEventIDs]
  -[VCTriggerNotificationDebouncerItem setTriggerEventIDs:]


VCTriggerNotificationDebouncer : NSObject
 @property  NSMutableDictionary *notificationItemTable
 @property  NSObject<OS_dispatch_queue> *queue
 @property  <VCTriggerNotificationDebouncerDelegate> *delegate

  // instance methods
  -[VCTriggerNotificationDebouncer setDelegate:]
  -[VCTriggerNotificationDebouncer delegate]
  -[VCTriggerNotificationDebouncer .cxx_destruct]
  -[VCTriggerNotificationDebouncer queue]
  -[VCTriggerNotificationDebouncer init]
  -[VCTriggerNotificationDebouncer debouncerDidFire:]
  -[VCTriggerNotificationDebouncer addEventsWithIdentifiers:configuredTrigger:workflowReference:]
  -[VCTriggerNotificationDebouncer notificationItemTable]


VCPBIntentDefinition : PBCodable <NSCopying>
 @property  NSString *associatedBundleID
 @property  NSMutableArray *files

  // class methods
  +[VCPBIntentDefinition filesType]

  // instance methods
  -[VCPBIntentDefinition copyTo:]
  -[VCPBIntentDefinition .cxx_destruct]
  -[VCPBIntentDefinition mergeFrom:]
  -[VCPBIntentDefinition dictionaryRepresentation]
  -[VCPBIntentDefinition copyWithZone:]
  -[VCPBIntentDefinition readFrom:]
  -[VCPBIntentDefinition writeTo:]
  -[VCPBIntentDefinition isEqual:]
  -[VCPBIntentDefinition files]
  -[VCPBIntentDefinition setFiles:]
  -[VCPBIntentDefinition clearFiles]
  -[VCPBIntentDefinition addFiles:]
  -[VCPBIntentDefinition filesCount]
  -[VCPBIntentDefinition filesAtIndex:]
  -[VCPBIntentDefinition associatedBundleID]
  -[VCPBIntentDefinition setAssociatedBundleID:]


VCPBSpotlightPair : PBCodable <NSCopying>
 @property  NSString *workflowID
 @property  unsigned long spotlightHash

  // instance methods
  -[VCPBSpotlightPair copyTo:]
  -[VCPBSpotlightPair .cxx_destruct]
  -[VCPBSpotlightPair mergeFrom:]
  -[VCPBSpotlightPair dictionaryRepresentation]
  -[VCPBSpotlightPair copyWithZone:]
  -[VCPBSpotlightPair readFrom:]
  -[VCPBSpotlightPair writeTo:]
  -[VCPBSpotlightPair isEqual:]
  -[VCPBSpotlightPair workflowID]
  -[VCPBSpotlightPair setWorkflowID:]
  -[VCPBSpotlightPair spotlightHash]
  -[VCPBSpotlightPair setSpotlightHash:]


WFQueuedRunRequest : NSObject
 @property  unsigned long type
 @property  WFWorkflowRunDescriptor *descriptor
 @property  WFWorkflowRunRequest *runRequest
 @property  WFWorkflowRunningContext *runningContext
 @property  NSObject<OS_voucher> *voucher
 @property  @? completionHandler
 @property  BOOL shouldNotifyObservers

  // instance methods
  -[WFQueuedRunRequest descriptor]
  -[WFQueuedRunRequest type]
  -[WFQueuedRunRequest .cxx_destruct]
  -[WFQueuedRunRequest voucher]
  -[WFQueuedRunRequest completionHandler]
  -[WFQueuedRunRequest runRequest]
  -[WFQueuedRunRequest initWithType:descriptor:runRequest:runningContext:voucher:completionHandler:]
  -[WFQueuedRunRequest runningContext]
  -[WFQueuedRunRequest shouldNotifyObservers]


WFWorkflowRunQueueDescriptor : NSObject <NSCopying>
  // instance methods
  -[WFWorkflowRunQueueDescriptor initWithType:identifier:]
  -[WFWorkflowRunQueueDescriptor .cxx_destruct]
  -[WFWorkflowRunQueueDescriptor copyWithZone:]
  -[WFWorkflowRunQueueDescriptor isEqual:]


WFWorkflowRunQueue : NSObject
 @property  NSMutableDictionary *queueTable

  // instance methods
  -[WFWorkflowRunQueue .cxx_destruct]
  -[WFWorkflowRunQueue init]
  -[WFWorkflowRunQueue queueRequest:inQueue:]
  -[WFWorkflowRunQueue popRequestFromQueueWithType:identifier:]
  -[WFWorkflowRunQueue queueForDescriptor:createIfNeeded:]
  -[WFWorkflowRunQueue queueTable]


WFPresentedDialog : NSObject
 @property  WFDialogRequest *request
 @property  WFDialogResponse *response
 @property  unsigned long presentationMode
 @property  WFWorkflowRunningContext *context
 @property  @? completionHandler

  // instance methods
  -[WFPresentedDialog presentationMode]
  -[WFPresentedDialog .cxx_destruct]
  -[WFPresentedDialog setResponse:]
  -[WFPresentedDialog response]
  -[WFPresentedDialog context]
  -[WFPresentedDialog completionHandler]
  -[WFPresentedDialog request]
  -[WFPresentedDialog initWithRequest:presentationMode:runningContext:completionHandler:]


WFSpringBoardRemoteAlertPresenter : NSObject <SBSRemoteAlertHandleObserver, NSXPCListenerDelegate, WFDialogAlertPresenter>
 @property  SBSRemoteAlertHandle *activeHandle
 @property  NSObject<OS_dispatch_source> *deactivateTimer
 @property  NSXPCListener *listener
 @property  NSXPCConnection *activeConnection
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <WFDialogAlertPresenterDelegate> *delegate
 @property  BOOL alertIsActive

  // instance methods
  -[WFSpringBoardRemoteAlertPresenter activeConnection]
  -[WFSpringBoardRemoteAlertPresenter setDelegate:]
  -[WFSpringBoardRemoteAlertPresenter delegate]
  -[WFSpringBoardRemoteAlertPresenter setActiveHandle:]
  -[WFSpringBoardRemoteAlertPresenter .cxx_destruct]
  -[WFSpringBoardRemoteAlertPresenter setActiveConnection:]
  -[WFSpringBoardRemoteAlertPresenter remoteAlertHandleDidDeactivate:]
  -[WFSpringBoardRemoteAlertPresenter activateAlertWithPresentationTarget:]
  -[WFSpringBoardRemoteAlertPresenter activeHandle]
  -[WFSpringBoardRemoteAlertPresenter setDeactivateTimer:]
  -[WFSpringBoardRemoteAlertPresenter remoteAlertHandle:didInvalidateWithError:]
  -[WFSpringBoardRemoteAlertPresenter remoteAlertHandleDidActivate:]
  -[WFSpringBoardRemoteAlertPresenter deactivateTimer]
  -[WFSpringBoardRemoteAlertPresenter deactivateAlert]
  -[WFSpringBoardRemoteAlertPresenter listener]
  -[WFSpringBoardRemoteAlertPresenter alertIsActive]
  -[WFSpringBoardRemoteAlertPresenter listener:shouldAcceptNewConnection:]
  -[WFSpringBoardRemoteAlertPresenter init]
  -[WFSpringBoardRemoteAlertPresenter activateAlertInMainSceneOfApplicationWithBundleIdentifier:]


VCCKApplicationStateObserver : NSObject
 @property  FBSDisplayLayoutMonitor *layoutMonitor
 @property  NSString *bundleIdentifier
 @property  BOOL applicationVisible
 @property  AB atomicApplicationVisible

  // instance methods
  -[VCCKApplicationStateObserver isApplicationVisible]
  -[VCCKApplicationStateObserver dealloc]
  -[VCCKApplicationStateObserver .cxx_destruct]
  -[VCCKApplicationStateObserver layoutMonitor]
  -[VCCKApplicationStateObserver initWithBundleIdentifier:]
  -[VCCKApplicationStateObserver setApplicationVisible:]
  -[VCCKApplicationStateObserver bundleIdentifier]
  -[VCCKApplicationStateObserver setAtomicApplicationVisible:]
  -[VCCKApplicationStateObserver atomicApplicationVisible]


VCCoreDuetListener : NSObject
 @property  NSObject<OS_dispatch_queue> *queue
 @property  <_CDUserContext> *userContext
 @property  <WFDatabaseProvider> *databaseProvider
 @property  VCDaemonXPCEventHandler *eventHandler
 @property  VCTriggerEventQueue *eventQueue
 @property  NSMutableDictionary *registrations

  // instance methods
  -[VCCoreDuetListener eventQueue]
  -[VCCoreDuetListener setEventQueue:]
  -[VCCoreDuetListener databaseWithError:]
  -[VCCoreDuetListener registrations]
  -[VCCoreDuetListener eventHandler]
  -[VCCoreDuetListener fireTriggerWithIdentifier:force:eventInfo:completion:]
  -[VCCoreDuetListener userContext]
  -[VCCoreDuetListener .cxx_destruct]
  -[VCCoreDuetListener checkTriggerStateWithIdentifier:completion:]
  -[VCCoreDuetListener queue]
  -[VCCoreDuetListener checkTriggerStateWithKeyPath:completion:]
  -[VCCoreDuetListener databaseProvider]
  -[VCCoreDuetListener initWithDatabaseProvider:eventQueue:]
  -[VCCoreDuetListener registerConfiguredTrigger:completion:]
  -[VCCoreDuetListener registerTrigger:error:]
  -[VCCoreDuetListener unregisterConfiguredTriggerWithIdentifier:]
  -[VCCoreDuetListener handleCallbackForTriggerWithIdentifier:info:]
  -[VCCoreDuetListener isCallbackRegisteredWithIdentifier:]
  -[VCCoreDuetListener registerCallback:withIdentifier:]
  -[VCCoreDuetListener queue_unregisterCallbackForIdentifier:]
  -[VCCoreDuetListener registerSunriseSunsetCallbackIfNeeded]
  -[VCCoreDuetListener handleSunriseSunsetChanged]
  -[VCCoreDuetListener queue_fireTriggerWithIdentifier:force:eventInfo:completion:]


VCCKShortcutSyncService : NSObject <CKSyncEngineDataSource, WFDatabaseObjectObserver>
 @property  WFDatabase *database
 @property  CKSyncEngine *syncEngine
 @property  CKRecordZoneID *shortcutsZoneID
 @property  VCCKApplicationStateObserver *applicationObserver
 @property  NSMutableDictionary *filesReferencedUntilSaved
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VCCKShortcutSyncService syncEngine:didSaveRecord:]
  -[VCCKShortcutSyncService syncEngine]
  -[VCCKShortcutSyncService syncEngine:zoneWithIDWasDeleted:]
  -[VCCKShortcutSyncService syncEngine:zoneWithIDChanged:]
  -[VCCKShortcutSyncService syncEngine:failedToDeleteRecordWithID:error:]
  -[VCCKShortcutSyncService dealloc]
  -[VCCKShortcutSyncService syncEngine:zoneWithIDWasPurged:]
  -[VCCKShortcutSyncService .cxx_destruct]
  -[VCCKShortcutSyncService syncEngine:didUpdateMetadata:]
  -[VCCKShortcutSyncService addRecordIDsToSave:recordIDsToDelete:]
  -[VCCKShortcutSyncService observeValueForKeyPath:ofObject:change:context:]
  -[VCCKShortcutSyncService syncEngine:didDeleteRecordWithID:]
  -[VCCKShortcutSyncService stopObservingUserDefaults]
  -[VCCKShortcutSyncService database]
  -[VCCKShortcutSyncService syncEngine:failedToSaveRecord:error:]
  -[VCCKShortcutSyncService databaseDidChange:modified:inserted:removed:]
  -[VCCKShortcutSyncService start]
  -[VCCKShortcutSyncService syncEngine:recordWithIDWasDeleted:recordType:]
  -[VCCKShortcutSyncService startObservingUserDefaults]
  -[VCCKShortcutSyncService applicationObserver]
  -[VCCKShortcutSyncService syncEngine:didFetchRecord:]
  -[VCCKShortcutSyncService syncEngine:recordToSaveForRecordID:]
  -[VCCKShortcutSyncService syncEngine:didSaveRecordZone:]
  -[VCCKShortcutSyncService syncEngine:didDeleteRecordZoneWithID:]
  -[VCCKShortcutSyncService syncEngine:failedToSaveRecordZone:error:]
  -[VCCKShortcutSyncService syncEngine:failedToDeleteRecordZoneWithID:error:]
  -[VCCKShortcutSyncService syncEngine:didReceiveDatabaseNotification:]
  -[VCCKShortcutSyncService initWithContainer:database:applicationObserver:]
  -[VCCKShortcutSyncService fetchAndModifyChangesInShortcutsZone]
  -[VCCKShortcutSyncService fetchChangesInShortcutsZone]
  -[VCCKShortcutSyncService fetchChangesInShortcutsZoneWithCompletion:]
  -[VCCKShortcutSyncService modifyPendingChangesInShortcutsZoneWithCompletion:]
  -[VCCKShortcutSyncService fetchAndModifyChangesInShortcutsZoneWithCompletion:]
  -[VCCKShortcutSyncService shortcutsZoneID]
  -[VCCKShortcutSyncService createShortcutsZone]
  -[VCCKShortcutSyncService workflowRecordForReference:properties:]
  -[VCCKShortcutSyncService sendChangedWorkflows]
  -[VCCKShortcutSyncService sendChangedFolders]
  -[VCCKShortcutSyncService sendWorkflowOrderingsIfNeeded]
  -[VCCKShortcutSyncService sendSyncFlagsIfNeeded]
  -[VCCKShortcutSyncService rootCollectionRecord]
  -[VCCKShortcutSyncService collectionIdentifierForRecordID:]
  -[VCCKShortcutSyncService workflowOrderingRecordForRecordID:]
  -[VCCKShortcutSyncService syncFlagsRecord]
  -[VCCKShortcutSyncService workflowRecordForRecordID:]
  -[VCCKShortcutSyncService folderRecordForRecordID:]
  -[VCCKShortcutSyncService autoShortcutsPreferencesRecordForRecordID:]
  -[VCCKShortcutSyncService handleSavedWorkflowOrderingRecord:]
  -[VCCKShortcutSyncService handleSavedWorkflowRecord:]
  -[VCCKShortcutSyncService handleSavedFolderRecord:]
  -[VCCKShortcutSyncService handleSavedSyncFlagsRecord:]
  -[VCCKShortcutSyncService handleDeletedRecordWithID:]
  -[VCCKShortcutSyncService mergeLocalOrderingChangesWithRemoteOrderingChangesFromOrderingRecord:]
  -[VCCKShortcutSyncService applyLegacyOrderedWorkflowIDsToRootCollection:]
  -[VCCKShortcutSyncService mergedOrderingFromLocalOrdering:previousOrdering:remoteOrdering:]
  -[VCCKShortcutSyncService calculateSubsetForRemoteOrdering:withLocalOrdering:]
  -[VCCKShortcutSyncService handleFetchedCollectionOrderingRecord:]
  -[VCCKShortcutSyncService handleFetchedLegacyOrderingRecord:]
  -[VCCKShortcutSyncService handleNameConflictsForFetchedWorkflowRecord:identifier:shouldMarkFetchedRecordAsTombstone:]
  -[VCCKShortcutSyncService handleFetchedWorkflowRecord:]
  -[VCCKShortcutSyncService handleFetchedFolderRecord:]
  -[VCCKShortcutSyncService handleFetchedSyncFlagsRecord:]
  -[VCCKShortcutSyncService updateLocalAutoShortcutsPreferencesIfRemoteModificationDateNewerOnRecord:]
  -[VCCKShortcutSyncService autoShortcutsPreferencesWithCloudKitAutoShortcutsPreferences:]
  -[VCCKShortcutSyncService handleFetchedOrSavedAutoShortcutsPreferencesFromRecord:]
  -[VCCKShortcutSyncService handleFetchedDeletionOfRecordWithID:]
  -[VCCKShortcutSyncService handleFetchedDeletionOfAutoShortcutsPreferencesWithRecordID:]
  -[VCCKShortcutSyncService updateSyncTokenInDatabaseWithBlock:]
  -[VCCKShortcutSyncService handleSendWorkflowOrderingConflictWithClientRecord:serverRecord:ancestorRecord:]
  -[VCCKShortcutSyncService handleSendSyncFlagsConflictWithClientRecord:serverRecord:ancestorRecord:]
  -[VCCKShortcutSyncService handleSendAutoShortcutsPreferencesConflictWithClientRecord:serverRecord:ancestorRecord:]
  -[VCCKShortcutSyncService handleSendWorkflowConflictWithClientRecord:serverRecord:ancestorRecord:]
  -[VCCKShortcutSyncService handleSendFolderConflictWithClientRecord:serverRecord:ancestorRecord:]
  -[VCCKShortcutSyncService handleServerRecordChangedError:]
  -[VCCKShortcutSyncService handleUnknownItemErrorForRecord:]
  -[VCCKShortcutSyncService filesReferencedUntilSaved]


VCMetricSubmitter : NSObject
 @property  VCMetricCheckIn *checkIn
 @property  <WFDatabaseProvider> *databaseProvider
 @property  WFMetricStatusEvent *event

  // class methods
  +[VCMetricSubmitter activityIdentifier]
  +[VCMetricSubmitter scheduleWithDatabaseProvider:]
  +[VCMetricSubmitter scheduleWithScheduler:databaseProvider:]
  +[VCMetricSubmitter performWithDatabaseProvider:]

  // instance methods
  -[VCMetricSubmitter checkIn]
  -[VCMetricSubmitter perform]
  -[VCMetricSubmitter .cxx_destruct]
  -[VCMetricSubmitter isAppInstalled]
  -[VCMetricSubmitter initWithDatabaseProvider:]
  -[VCMetricSubmitter event]
  -[VCMetricSubmitter databaseProvider]
  -[VCMetricSubmitter initWithCheckIn:event:databaseProvider:]
  -[VCMetricSubmitter isSharingEnabled]
  -[VCMetricSubmitter isSleepEnabled]
  -[VCMetricSubmitter personalAutomationsPresent:]
  -[VCMetricSubmitter hasSeenAutoShortcutsSections]
  -[VCMetricSubmitter homeAutomationsPresent:]
  -[VCMetricSubmitter averageShortcutCountPerFolder:]
  -[VCMetricSubmitter shortcutsCount:]
  -[VCMetricSubmitter uncategorizedShortcutCount:]
  -[VCMetricSubmitter watchShortcutCount:]
  -[VCMetricSubmitter folderCount:]
  -[VCMetricSubmitter numberOfPersonalAutomationsEnabled:]
  -[VCMetricSubmitter numberOfShortcutRuns:]
  -[VCMetricSubmitter numberOfAppSessions:]
  -[VCMetricSubmitter sleepShortcutCount:]
  -[VCMetricSubmitter addWidgetMetricsToEvent:error:]


WFDialogPresentationManager : NSObject <NSXPCListenerDelegate, WFDialogXPCHostProtocol, WFScreenOnObserverDelegate, WFDialogAlertPresenterDelegate, WFWorkflowStatusPresenterDelegate, WFWorkflowStatusHostProtocol, RBSAssertionObserving, WFUIPresenterInterface>
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSXPCListener *listener
 @property  <WFDialogAlertPresenter> *remoteAlertPresenter
 @property  <WFDialogXPCProtocol> *connectedRemoteAlert
 @property  WFWorkflowStatusPresenter<WFDialogAlertPresenter> *statusPresenter
 @property  <WFWorkflowStatusProtocol> *connectedStatusPresenter
 @property  RBSAssertion *statusPresenterAssertion
 @property  WFPresentedDialog *presentedDialog
 @property  NSMutableArray *contentDismissalCompletionHandlers
 @property  NSMutableArray *contextsAwaitingStatusPresentation
 @property  NSMutableArray *attributionsAwaitingStatusPresentation
 @property  WFWorkflowRunningContext *persistentRunningContext
 @property  WFDialogAttribution *persistentRunningAttribution
 @property  NSMutableArray *persistentPresentationQueue
 @property  NSMutableArray *otherPresentationQueue
 @property  WFDialogNotificationManager *notificationManager
 @property  WFScreenOnObserver *screenOnObserver
 @property  BOOL completePersistentModeAwaitingRemoteAlertReactivationSuccess
 @property  @? completePersistentModeBlockAwaitingRemoteAlertReactivation
 @property  NSString *dismissalReason
 @property  <WFDialogPresentationManagerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WFDialogPresentationManager assertion:didInvalidateWithError:]
  -[WFDialogPresentationManager postNotificationWithRequest:presentationMode:context:]
  -[WFDialogPresentationManager setPersistentRunningAttribution:]
  -[WFDialogPresentationManager setStatusPresenterAssertion:]
  -[WFDialogPresentationManager setDismissalReason:]
  -[WFDialogPresentationManager setConnectedRemoteAlert:]
  -[WFDialogPresentationManager setDelegate:]
  -[WFDialogPresentationManager setPersistentRunningContext:]
  -[WFDialogPresentationManager statusPresenterDidDisconnect]
  -[WFDialogPresentationManager dialogAlertPresenter:didConnectToAlert:]
  -[WFDialogPresentationManager queue_hasMoreDialogsToPresent]
  -[WFDialogPresentationManager contextsAwaitingStatusPresentation]
  -[WFDialogPresentationManager delegate]
  -[WFDialogPresentationManager statusPresenterAssertion]
  -[WFDialogPresentationManager screenOnObserver]
  -[WFDialogPresentationManager logFinishDialogPresentationWithRequest:presentationMode:automationType:]
  -[WFDialogPresentationManager hasPersistentState]
  -[WFDialogPresentationManager requestDismissalWithReason:]
  -[WFDialogPresentationManager dealloc]
  -[WFDialogPresentationManager connectedRemoteAlert]
  -[WFDialogPresentationManager connectedStatusPresenter]
  -[WFDialogPresentationManager queue_deactivateRemoteAlertAndInvalidateConnection]
  -[WFDialogPresentationManager notificationManager]
  -[WFDialogPresentationManager persistentRunningContext]
  -[WFDialogPresentationManager completePersistentModeWithSuccess:runningContext:completion:]
  -[WFDialogPresentationManager logStartDialogPresentationWithRequest:presentationMode:]
  -[WFDialogPresentationManager .cxx_destruct]
  -[WFDialogPresentationManager setCompletePersistentModeAwaitingRemoteAlertReactivationSuccess:]
  -[WFDialogPresentationManager completePersistentModeAwaitingRemoteAlertReactivationSuccess]
  -[WFDialogPresentationManager logFinishDialogPresentationWithPresentedDialog:]
  -[WFDialogPresentationManager queue_presentNextDialog]
  -[WFDialogPresentationManager dialogAlertPresenterDidDeactivateAlert:]
  -[WFDialogPresentationManager presentedDialog]
  -[WFDialogPresentationManager activateRemoteAlertTiedToBundleIdentifier:]
  -[WFDialogPresentationManager initWithListener:notificationManager:dialogAlertPresenter:screenOnObserver:]
  -[WFDialogPresentationManager otherPresentationQueue]
  -[WFDialogPresentationManager setCompletePersistentModeBlockAwaitingRemoteAlertReactivation:]
  -[WFDialogPresentationManager remoteAlertPresenter]
  -[WFDialogPresentationManager beginPersistentModeWithRunningContext:attribution:completionHandler:]
  -[WFDialogPresentationManager shouldShowStatus]
  -[WFDialogPresentationManager screenOnStateDidChange:]
  -[WFDialogPresentationManager statusPresenter]
  -[WFDialogPresentationManager dialogAlertPresenterDidDisconnectFromAlert:]
  -[WFDialogPresentationManager dismissalReason]
  -[WFDialogPresentationManager removeStaleNotifications]
  -[WFDialogPresentationManager persistentPresentationQueue]
  -[WFDialogPresentationManager trackDialogEventWithKey:request:presentationMode:automationType:]
  -[WFDialogPresentationManager queue_connectedRemoteAlertDidDisconnect]
  -[WFDialogPresentationManager activateRemoteAlert]
  -[WFDialogPresentationManager trackSuspendShortcutWithPresentedDialog:]
  -[WFDialogPresentationManager acquireStatusPresenterAssertionIfNecessary]
  -[WFDialogPresentationManager queue]
  -[WFDialogPresentationManager setConnectedStatusPresenter:]
  -[WFDialogPresentationManager initWithUserNotificationManager:]
  -[WFDialogPresentationManager attributionsAwaitingStatusPresentation]
  -[WFDialogPresentationManager contentDismissalCompletionHandlers]
  -[WFDialogPresentationManager activateStatusPresenter]
  -[WFDialogPresentationManager dismissPresentedContentForRunningContext:completionHandler:]
  -[WFDialogPresentationManager listener]
  -[WFDialogPresentationManager queue_clearPersistentModeStateIfNecessary]
  -[WFDialogPresentationManager dismissPersistentChromeInDialog:success:customAttribution:completionHandler:]
  -[WFDialogPresentationManager beginConnection]
  -[WFDialogPresentationManager persistentRunningAttribution]
  -[WFDialogPresentationManager dialogAlertPresenterDidInvalidateAlert:]
  -[WFDialogPresentationManager statusPresenterDidConnectToService:]
  -[WFDialogPresentationManager showDialogRequest:runningContext:completionHandler:]
  -[WFDialogPresentationManager listener:shouldAcceptNewConnection:]
  -[WFDialogPresentationManager completePersistentModeBlockAwaitingRemoteAlertReactivation]
  -[WFDialogPresentationManager workflowStatusHostBeginConnection]
  -[WFDialogPresentationManager setPresentedDialog:]


WFApplicationTerminationMonitor : NSObject
 @property  NSString *bundleIdentifier
 @property  RBSProcessMonitor *processMonitor

  // instance methods
  -[WFApplicationTerminationMonitor setProcessMonitor:]
  -[WFApplicationTerminationMonitor processMonitor]
  -[WFApplicationTerminationMonitor dealloc]
  -[WFApplicationTerminationMonitor .cxx_destruct]
  -[WFApplicationTerminationMonitor initWithBundleIdentifier:]
  -[WFApplicationTerminationMonitor bundleIdentifier]
  -[WFApplicationTerminationMonitor startMonitoringWithTerminationHandler:]


VCPBIntentDefinitionChange : PBCodable <NSCopying>
 @property  int changeType
 @property  NSString *associatedBundleID
 @property  BOOL hasIntentDefinition
 @property  VCPBIntentDefinition *intentDefinition

  // instance methods
  -[VCPBIntentDefinitionChange changeTypeAsString:]
  -[VCPBIntentDefinitionChange copyTo:]
  -[VCPBIntentDefinitionChange changeType]
  -[VCPBIntentDefinitionChange .cxx_destruct]
  -[VCPBIntentDefinitionChange mergeFrom:]
  -[VCPBIntentDefinitionChange StringAsChangeType:]
  -[VCPBIntentDefinitionChange dictionaryRepresentation]
  -[VCPBIntentDefinitionChange copyWithZone:]
  -[VCPBIntentDefinitionChange readFrom:]
  -[VCPBIntentDefinitionChange setChangeType:]
  -[VCPBIntentDefinitionChange writeTo:]
  -[VCPBIntentDefinitionChange isEqual:]
  -[VCPBIntentDefinitionChange intentDefinition]
  -[VCPBIntentDefinitionChange setIntentDefinition:]
  -[VCPBIntentDefinitionChange associatedBundleID]
  -[VCPBIntentDefinitionChange setAssociatedBundleID:]
  -[VCPBIntentDefinitionChange hasIntentDefinition]


VCPBChange : PBCodable <NSCopying>
 @property  int messageType
 @property  int changeType
 @property  NSString *uniqueID
 @property  NSData *message

  // instance methods
  -[VCPBChange messageTypeAsString:]
  -[VCPBChange setMessage:]
  -[VCPBChange setMessageType:]
  -[VCPBChange changeTypeAsString:]
  -[VCPBChange uniqueID]
  -[VCPBChange copyTo:]
  -[VCPBChange changeType]
  -[VCPBChange .cxx_destruct]
  -[VCPBChange mergeFrom:]
  -[VCPBChange StringAsMessageType:]
  -[VCPBChange StringAsChangeType:]
  -[VCPBChange dictionaryRepresentation]
  -[VCPBChange copyWithZone:]
  -[VCPBChange setUniqueID:]
  -[VCPBChange readFrom:]
  -[VCPBChange messageType]
  -[VCPBChange setChangeType:]
  -[VCPBChange writeTo:]
  -[VCPBChange message]
  -[VCPBChange isEqual:]


VCCompanionSyncSerializer : NSObject <SYChangeSerializer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VCCompanionSyncSerializer dataFromChange:]
  -[VCCompanionSyncSerializer changeFromData:ofType:]


VCPBWorkflow : PBCodable <NSCopying>
 @property  BOOL hasName
 @property  NSString *name
 @property  BOOL hasIconColor
 @property  unsigned int iconColor
 @property  BOOL hasIconGlyph
 @property  unsigned int iconGlyph
 @property  BOOL hasCreationDate
 @property  double creationDate
 @property  BOOL hasModificationDate
 @property  double modificationDate
 @property  NSMutableArray *workflowTypes
 @property  NSMutableArray *inputClasses
 @property  BOOL hasActionsData
 @property  NSData *actionsData
 @property  BOOL hasImportQuestionsData
 @property  NSData *importQuestionsData
 @property  BOOL hasIntegerMinimumClientVersion
 @property  unsigned long integerMinimumClientVersion
 @property  BOOL hasIntegerLastMigratedClientVersion
 @property  unsigned long integerLastMigratedClientVersion
 @property  BOOL hasMinimumClientVersion
 @property  NSString *minimumClientVersion
 @property  BOOL hasLastMigratedClientVersion
 @property  NSString *lastMigratedClientVersion
 @property  BOOL hasAccessResourcePerWorkflowStateData
 @property  NSData *accessResourcePerWorkflowStateData
 @property  BOOL hasSmartPromptPerWorkflowStateData
 @property  NSData *smartPromptPerWorkflowStateData
 @property  BOOL hasRemoteQuarantineStatus
 @property  int remoteQuarantineStatus
 @property  BOOL hasSubtitle
 @property  NSString *subtitle

  // class methods
  +[VCPBWorkflow workflowTypesType]
  +[VCPBWorkflow inputClassesType]

  // instance methods
  -[VCPBWorkflow hasName]
  -[VCPBWorkflow modificationDate]
  -[VCPBWorkflow setModificationDate:]
  -[VCPBWorkflow subtitle]
  -[VCPBWorkflow copyTo:]
  -[VCPBWorkflow setSubtitle:]
  -[VCPBWorkflow hasSubtitle]
  -[VCPBWorkflow .cxx_destruct]
  -[VCPBWorkflow iconGlyph]
  -[VCPBWorkflow creationDate]
  -[VCPBWorkflow mergeFrom:]
  -[VCPBWorkflow dictionaryRepresentation]
  -[VCPBWorkflow setName:]
  -[VCPBWorkflow copyWithZone:]
  -[VCPBWorkflow setCreationDate:]
  -[VCPBWorkflow name]
  -[VCPBWorkflow minimumClientVersion]
  -[VCPBWorkflow readFrom:]
  -[VCPBWorkflow writeTo:]
  -[VCPBWorkflow isEqual:]
  -[VCPBWorkflow setMinimumClientVersion:]
  -[VCPBWorkflow inputClasses]
  -[VCPBWorkflow iconColor]
  -[VCPBWorkflow setIconColor:]
  -[VCPBWorkflow setHasCreationDate:]
  -[VCPBWorkflow hasCreationDate]
  -[VCPBWorkflow setHasModificationDate:]
  -[VCPBWorkflow hasModificationDate]
  -[VCPBWorkflow setHasIconColor:]
  -[VCPBWorkflow hasIconColor]
  -[VCPBWorkflow setIconGlyph:]
  -[VCPBWorkflow setHasIconGlyph:]
  -[VCPBWorkflow hasIconGlyph]
  -[VCPBWorkflow clearWorkflowTypes]
  -[VCPBWorkflow addWorkflowTypes:]
  -[VCPBWorkflow workflowTypesCount]
  -[VCPBWorkflow workflowTypesAtIndex:]
  -[VCPBWorkflow clearInputClasses]
  -[VCPBWorkflow addInputClasses:]
  -[VCPBWorkflow inputClassesCount]
  -[VCPBWorkflow inputClassesAtIndex:]
  -[VCPBWorkflow hasActionsData]
  -[VCPBWorkflow hasImportQuestionsData]
  -[VCPBWorkflow setIntegerMinimumClientVersion:]
  -[VCPBWorkflow setHasIntegerMinimumClientVersion:]
  -[VCPBWorkflow hasIntegerMinimumClientVersion]
  -[VCPBWorkflow setIntegerLastMigratedClientVersion:]
  -[VCPBWorkflow setHasIntegerLastMigratedClientVersion:]
  -[VCPBWorkflow hasIntegerLastMigratedClientVersion]
  -[VCPBWorkflow hasMinimumClientVersion]
  -[VCPBWorkflow hasLastMigratedClientVersion]
  -[VCPBWorkflow hasAccessResourcePerWorkflowStateData]
  -[VCPBWorkflow remoteQuarantineStatus]
  -[VCPBWorkflow setRemoteQuarantineStatus:]
  -[VCPBWorkflow setHasRemoteQuarantineStatus:]
  -[VCPBWorkflow hasRemoteQuarantineStatus]
  -[VCPBWorkflow remoteQuarantineStatusAsString:]
  -[VCPBWorkflow StringAsRemoteQuarantineStatus:]
  -[VCPBWorkflow workflowTypes]
  -[VCPBWorkflow setWorkflowTypes:]
  -[VCPBWorkflow setInputClasses:]
  -[VCPBWorkflow actionsData]
  -[VCPBWorkflow setActionsData:]
  -[VCPBWorkflow importQuestionsData]
  -[VCPBWorkflow setImportQuestionsData:]
  -[VCPBWorkflow integerMinimumClientVersion]
  -[VCPBWorkflow integerLastMigratedClientVersion]
  -[VCPBWorkflow lastMigratedClientVersion]
  -[VCPBWorkflow setLastMigratedClientVersion:]
  -[VCPBWorkflow accessResourcePerWorkflowStateData]
  -[VCPBWorkflow setAccessResourcePerWorkflowStateData:]
  -[VCPBWorkflow hasSmartPromptPerWorkflowStateData]
  -[VCPBWorkflow smartPromptPerWorkflowStateData]
  -[VCPBWorkflow setSmartPromptPerWorkflowStateData:]


WFTriggerBootManager : NSObject <UNUserNotificationCenterDelegate>
 @property  <WFDatabaseProvider> *databaseProvider
 @property  WFTriggerManager *triggerManager
 @property  UNUserNotificationCenter *notificationCenter
 @property  NSObject<OS_dispatch_queue> *queue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WFTriggerBootManager createMarkerFileIfNeeded]
  +[WFTriggerBootManager category]
  +[WFTriggerBootManager markerFileExists]
  +[WFTriggerBootManager automationsEnabledFileURL]
  +[WFTriggerBootManager registerForNotificationRemovalWithUserNotificationCenter:scheduleIfNeeded:]
  +[WFTriggerBootManager clearNotificationsWithUserNotificationCenter:]
  +[WFTriggerBootManager deleteMarkerFile]

  // instance methods
  -[WFTriggerBootManager notificationCenter]
  -[WFTriggerBootManager setNotificationCenter:]
  -[WFTriggerBootManager .cxx_destruct]
  -[WFTriggerBootManager userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:]
  -[WFTriggerBootManager initWithDatabaseProvider:]
  -[WFTriggerBootManager queue]
  -[WFTriggerBootManager triggerManager]
  -[WFTriggerBootManager start]
  -[WFTriggerBootManager databaseProvider]
  -[WFTriggerBootManager registerForInitialBootXPCActivityWithUserNotificationCenterIfNeeded:]
  -[WFTriggerBootManager postNotificationWithUserNotificationCenterIfNecessary:completionHandler:]
  -[WFTriggerBootManager canRunAutomations]
  -[WFTriggerBootManager triggerRunningTimeoutHasPassed]
  -[WFTriggerBootManager runningThresholdDate]
  -[WFTriggerBootManager willRunAutomations]
  -[WFTriggerBootManager deviceWasUnlockedForTheFirstTime]
  -[WFTriggerBootManager configuredTriggersDidChange:]
  -[WFTriggerBootManager shouldCreateMarkerFileWithConfiguredTriggers:]
  -[WFTriggerBootManager createFirstUnlockTimeFile]
  -[WFTriggerBootManager firstUnlockDate]
  -[WFTriggerBootManager firstUnlockTimeURL]
  -[WFTriggerBootManager setTriggerManager:]


VCGuardedPreferencesManager : NSObject
  // class methods
  +[VCGuardedPreferencesManager setInteger:forKey:inDomain:withAccessSpecifier:error:]
  +[VCGuardedPreferencesManager keyWithPreferenceKey:bundleId:]


VCSpotlightSyncOperation : NSObject
 @property  NSDictionary *searchableItemRegistry
 @property  NSSet *identifiersToRemove
 @property  NSDictionary *keyedReferences
 @property  BOOL fullResync
 @property  VCSpotlightState *localState
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSObject<OS_os_transaction> *transaction
 @property  CSSearchableIndex *index
 @property  <VCSpotlightSyncOperationDelegate> *delegate

  // class methods
  +[VCSpotlightSyncOperation _fillIdentifiersToRemove:searchableItemRegistry:withMaximumUpdatedItems:references:localState:]

  // instance methods
  -[VCSpotlightSyncOperation setDelegate:]
  -[VCSpotlightSyncOperation index]
  -[VCSpotlightSyncOperation transaction]
  -[VCSpotlightSyncOperation delegate]
  -[VCSpotlightSyncOperation .cxx_destruct]
  -[VCSpotlightSyncOperation queue]
  -[VCSpotlightSyncOperation start]
  -[VCSpotlightSyncOperation init]
  -[VCSpotlightSyncOperation localState]
  -[VCSpotlightSyncOperation initWithReferences:forceFullResync:spotlightIndex:localState:transaction:]
  -[VCSpotlightSyncOperation initWithModifiedReferences:inserted:removed:spotlightIndex:localState:transaction:]
  -[VCSpotlightSyncOperation indexSearchableItems]
  -[VCSpotlightSyncOperation saveLocalState]
  -[VCSpotlightSyncOperation clearLocalStateAndExit]
  -[VCSpotlightSyncOperation deleteSpotlightFileAndCleanup]
  -[VCSpotlightSyncOperation cleanupAndExitWithRequestToRelaunch:]
  -[VCSpotlightSyncOperation searchableItemRegistry]
  -[VCSpotlightSyncOperation identifiersToRemove]
  -[VCSpotlightSyncOperation keyedReferences]
  -[VCSpotlightSyncOperation fullResync]


WFWorkflowRunCoordinator : NSObject <WFDialogPresentationManagerDelegate, WFUIPresenterDelegate, WFToastManagerDelegate, WFOutOfProcessWorkflowControllerDelegate, UNUserNotificationCenterDelegate>
 @property  WFUIPresenter *userInterfacePresenter
 @property  <WFDatabaseProvider> *databaseProvider
 @property  WFWorkflowRunQueue *runRequestQueue
 @property  NSMutableDictionary *runningWorkflowCompletionHandlers
 @property  NSMutableDictionary *runningWorkflowControllers
 @property  NSMutableDictionary *runEvents
 @property  NSMutableDictionary *descriptors
 @property  NSMutableDictionary *runRequests
 @property  NSMutableSet *progressPresentingRuns
 @property  WFDialogPresentationManager *dialogPresentationManager
 @property  NSHashTable *observers
 @property  NSObject<OS_dispatch_queue> *queue
 @property  WFToastManager *toastManager
 @property  BOOL hasInitializedToastManager
 @property  NSMutableDictionary *parentRunningContexts
 @property  WFApplicationTerminationMonitor *terminationMonitor
 @property  WFLSApplicationStateObserver *applicationStateObserver
 @property  WFUserNotificationManager *userNotificationManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WFWorkflowRunCoordinator errorCategory]
  +[WFWorkflowRunCoordinator errorWithActionCategory]
  +[WFWorkflowRunCoordinator outOfProcessWorkflowControllerPresentationModeFromVCShortcutPresentationMode:]

  // instance methods
  -[WFWorkflowRunCoordinator descriptors]
  -[WFWorkflowRunCoordinator initWithUserNotificationManager:databaseProvider:]
  -[WFWorkflowRunCoordinator addObserver:]
  -[WFWorkflowRunCoordinator userNotificationManager]
  -[WFWorkflowRunCoordinator .cxx_destruct]
  -[WFWorkflowRunCoordinator userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:]
  -[WFWorkflowRunCoordinator runWorkflowWithDescriptor:request:context:completion:]
  -[WFWorkflowRunCoordinator stopRunningWorkflowWithRunningContext:]
  -[WFWorkflowRunCoordinator removeStaleNotifications]
  -[WFWorkflowRunCoordinator queue]
  -[WFWorkflowRunCoordinator removeObserver:]
  -[WFWorkflowRunCoordinator databaseProvider]
  -[WFWorkflowRunCoordinator observers]
  -[WFWorkflowRunCoordinator toastManager:didFailToToastSessionWithIdentifier:error:]
  -[WFWorkflowRunCoordinator toastManager:didToastSessionWithIdentifier:]
  -[WFWorkflowRunCoordinator toastManager:didDismissToastedSessionWithIdentifier:]
  -[WFWorkflowRunCoordinator presentationManager:updateSmartPromptStateData:actionUUID:context:reference:]
  -[WFWorkflowRunCoordinator presentationManager:shouldPresentDialogRequest:withContext:]
  -[WFWorkflowRunCoordinator presentationManager:responseForDialogRequest:withContext:]
  -[WFWorkflowRunCoordinator presentationManager:dialogPresentationModeForRequest:withContext:]
  -[WFWorkflowRunCoordinator presentationManager:runningContextForContext:]
  -[WFWorkflowRunCoordinator presentationManager:didEnqueueDialogRequest:withContext:]
  -[WFWorkflowRunCoordinator presentationManager:cancelExecutionOfWorkflowWithContext:]
  -[WFWorkflowRunCoordinator presentationManager:pauseExecutionOfWorkflowWithContext:]
  -[WFWorkflowRunCoordinator presenterDidResumeDialogPresentationWithQueuedDialogs:]
  -[WFWorkflowRunCoordinator outOfProcessWorkflowController:didFinishWithResult:dialogAttribution:]
  -[WFWorkflowRunCoordinator outOfProcessWorkflowController:didDecideRunningProgressIsAllowed:dialogAttribution:]
  -[WFWorkflowRunCoordinator outOfProcessWorkflowController:wantsToToastSessionKitSessionWithIdentifier:completionHandler:]
  -[WFWorkflowRunCoordinator outOfProcessWorkflowController:presenterRequestedWorkflowPauseWithContext:dialogRequest:]
  -[WFWorkflowRunCoordinator contextForDialogPresentationForContext:]
  -[WFWorkflowRunCoordinator toastManager]
  -[WFWorkflowRunCoordinator shortcutShouldShowRunningProgress:]
  -[WFWorkflowRunCoordinator queueTypeForDescriptor:runRequest:]
  -[WFWorkflowRunCoordinator queue_shouldQueueDescriptor:runRequest:queueType:]
  -[WFWorkflowRunCoordinator runWorkflowWithDescriptor:request:context:]
  -[WFWorkflowRunCoordinator queue_runWorkflowWithDescriptor:request:context:error:completion:]
  -[WFWorkflowRunCoordinator resumeWorkflowFromContext:withRequest:presentationMode:completion:]
  -[WFWorkflowRunCoordinator showSingleStepCompletionWithWebClipMetadata:completion:]
  -[WFWorkflowRunCoordinator queue_runNextQueuedRequestWithType:inQueue:]
  -[WFWorkflowRunCoordinator outOfProcessWorkflowController:didStartFromWorkflowReference:dialogAttribution:]
  -[WFWorkflowRunCoordinator queue_finishWorkflowWithContext:result:]
  -[WFWorkflowRunCoordinator queue_callWorkflowCompletionForContext:withResult:]
  -[WFWorkflowRunCoordinator queue_notifyObserversWorkflowDidFinishRunningWithResult:context:]
  -[WFWorkflowRunCoordinator unsupportedDialogResponseWithRequest:]
  -[WFWorkflowRunCoordinator postNotificationAboutFailure:inWorkflow:dialogAttribution:]
  -[WFWorkflowRunCoordinator allRunningWorkflows]
  -[WFWorkflowRunCoordinator shortcutWithIdentifierIsRunning:]
  -[WFWorkflowRunCoordinator stopAllRunningWorkflows]
  -[WFWorkflowRunCoordinator getCurrentProgressCompletedForContext:completionHandler:]
  -[WFWorkflowRunCoordinator queue_workflowControllerWithContext:]
  -[WFWorkflowRunCoordinator userInterfacePresenter]
  -[WFWorkflowRunCoordinator runRequestQueue]
  -[WFWorkflowRunCoordinator runningWorkflowCompletionHandlers]
  -[WFWorkflowRunCoordinator runningWorkflowControllers]
  -[WFWorkflowRunCoordinator runEvents]
  -[WFWorkflowRunCoordinator runRequests]
  -[WFWorkflowRunCoordinator progressPresentingRuns]
  -[WFWorkflowRunCoordinator dialogPresentationManager]
  -[WFWorkflowRunCoordinator hasInitializedToastManager]
  -[WFWorkflowRunCoordinator setHasInitializedToastManager:]
  -[WFWorkflowRunCoordinator parentRunningContexts]
  -[WFWorkflowRunCoordinator terminationMonitor]
  -[WFWorkflowRunCoordinator applicationStateObserver]


VCTriggerEventQueue : NSObject <VCUserNotificationManagerDelegate, VCTriggerEventRunnerDelegate>
 @property  <WFDatabaseProvider> *databaseProvider
 @property  VCTriggerEventRunner *triggerEventRunner
 @property  VCUserNotificationManager *notificationManager
 @property  WFTriggerNotificationScheduler *notificationScheduler
 @property  WFTriggerBootManager *triggerBootManager
 @property  NSObject<OS_dispatch_queue> *queue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[VCTriggerEventQueue shouldRunTrigger:forEvent:runEvents:error:]
  +[VCTriggerEventQueue rateLimitingTimeoutForTrigger:runEvents:]

  // instance methods
  -[VCTriggerEventQueue triggerBootManager]
  -[VCTriggerEventQueue databaseWithError:]
  -[VCTriggerEventQueue notificationManager]
  -[VCTriggerEventQueue .cxx_destruct]
  -[VCTriggerEventQueue resume]
  -[VCTriggerEventQueue queue]
  -[VCTriggerEventQueue notificationScheduler]
  -[VCTriggerEventQueue databaseProvider]
  -[VCTriggerEventQueue notificationManager:receivedConfirmationToRunTriggerWithIdentifier:pendingTriggerEventIDs:]
  -[VCTriggerEventQueue notificationManager:didDismissTriggerWithIdentifier:pendingTriggerEventIDs:]
  -[VCTriggerEventQueue notificationManager:didFailToPostNotificationPromptWithTriggerIdentifier:pendingTriggerEventIDs:]
  -[VCTriggerEventQueue notificationManager:didRequestDisablementOfTriggersWithIdentifiers:]
  -[VCTriggerEventQueue didFinishRunningWithError:cancelled:trigger:runEvent:]
  -[VCTriggerEventQueue initWithDatabaseProvider:runCoordinator:notificationManager:notificationScheduler:triggerBootManager:]
  -[VCTriggerEventQueue resumeWithConfiguredTrigger:workflowReference:eventInfo:]
  -[VCTriggerEventQueue runWithConfiguredTrigger:workflowReference:eventInfo:]
  -[VCTriggerEventQueue enqueueTriggerWithIdentifier:eventInfo:force:completion:]
  -[VCTriggerEventQueue numberOfEventsInQueueWithConfirmationOnly:]
  -[VCTriggerEventQueue deleteTriggerEvent:error:]
  -[VCTriggerEventQueue nextTriggerEventWithError:]
  -[VCTriggerEventQueue configuredTriggerForIdentifier:workflowReference:error:]
  -[VCTriggerEventQueue triggerEventsForConfiguredTrigger:eventInfo:confirmed:error:]
  -[VCTriggerEventQueue setConfirmedForTriggerEventIDs:error:]
  -[VCTriggerEventQueue removePendingTriggerEventsWithEventIDs:]
  -[VCTriggerEventQueue shouldRunEmailOrMessageTrigger:forEvent:runEvents:error:]
  -[VCTriggerEventQueue removeStalePendingNotificationsAndTriggerEvents]
  -[VCTriggerEventQueue removeAllStaleTriggerEventsIgnoringValidIDs:]
  -[VCTriggerEventQueue isTriggerEventStale:]
  -[VCTriggerEventQueue disableTriggersWithIdentifiers:]
  -[VCTriggerEventQueue logMetricForTrigger:]
  -[VCTriggerEventQueue triggerEventRunner]


VCDaemonSyncDataEndpoint : NSObject <VCSyncDataEndpoint>
 @property  NSObject<OS_dispatch_queue> *queue
 @property  VCDaemonXPCEventHandler *eventHandler
 @property  NSMutableSet *mutableSyncDataHandlers
 @property  NSSet *syncDataHandlers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VCDaemonSyncDataEndpoint eventHandler]
  -[VCDaemonSyncDataEndpoint .cxx_destruct]
  -[VCDaemonSyncDataEndpoint queue]
  -[VCDaemonSyncDataEndpoint initWithEventHandler:]
  -[VCDaemonSyncDataEndpoint syncDataHandlers]
  -[VCDaemonSyncDataEndpoint mutableSyncDataHandlers]


WFSiriWorkflowVocabularyUpdater : NSObject <WFDatabaseObjectObserver>
 @property  NSObject<OS_dispatch_queue> *queue
 @property  WFDebouncer *debouncer
 @property  <WFDatabaseProvider> *databaseProvider
 @property  NSOrderedSet *speakableStrings

  // instance methods
  -[WFSiriWorkflowVocabularyUpdater assistantPreferencesDidChange]
  -[WFSiriWorkflowVocabularyUpdater debouncer]
  -[WFSiriWorkflowVocabularyUpdater queue_startIfPossible]
  -[WFSiriWorkflowVocabularyUpdater startIfPossible]
  -[WFSiriWorkflowVocabularyUpdater .cxx_destruct]
  -[WFSiriWorkflowVocabularyUpdater setSpeakableStrings:]
  -[WFSiriWorkflowVocabularyUpdater updateIfPossible]
  -[WFSiriWorkflowVocabularyUpdater initWithDatabaseProvider:eventHandler:]
  -[WFSiriWorkflowVocabularyUpdater queue_updateIfNeeded]
  -[WFSiriWorkflowVocabularyUpdater queue]
  -[WFSiriWorkflowVocabularyUpdater speakableStrings]
  -[WFSiriWorkflowVocabularyUpdater databaseDidChange:modified:inserted:removed:]
  -[WFSiriWorkflowVocabularyUpdater applicationWasRegistered:]
  -[WFSiriWorkflowVocabularyUpdater databaseProvider]


VCUserNotificationManager : NSObject <UNUserNotificationCenterDelegate, VCTriggerNotificationDebouncerDelegate>
 @property  WFUserNotificationManager *userNotificationManager
 @property  VCTriggerNotificationDebouncer *debouncer
 @property  <VCUserNotificationManagerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[VCUserNotificationManager categoryIdentifiers]
  +[VCUserNotificationManager promptCategory]
  +[VCUserNotificationManager alertCategory]
  +[VCUserNotificationManager backgroundRunningCategory]

  // instance methods
  -[VCUserNotificationManager debouncer]
  -[VCUserNotificationManager setDelegate:]
  -[VCUserNotificationManager delegate]
  -[VCUserNotificationManager userNotificationManager]
  -[VCUserNotificationManager .cxx_destruct]
  -[VCUserNotificationManager userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:]
  -[VCUserNotificationManager initWithUserNotificationManager:]
  -[VCUserNotificationManager removeStaleNotificationsWithCompletion:]
  -[VCUserNotificationManager postNotificationForTrigger:workflowReference:pendingTriggerEventIDs:]
  -[VCUserNotificationManager postNotificationOfType:forTrigger:workflowReference:removeDeliveredNotifications:pendingTriggerEventIDs:actionIcons:error:]
  -[VCUserNotificationManager _postNotificationOfType:forTrigger:workflowReference:removeDeliveredNotifications:pendingTriggerEventIDs:actionIcons:error:]
  -[VCUserNotificationManager postNotificationThatTrigger:failedWithError:]
  -[VCUserNotificationManager postBackgroundRunningNotificationWithConfiguredTriggers:userInfo:error:]
  -[VCUserNotificationManager removeNotificationsWithTriggerIdentifier:]


VCSpotlightState : NSObject
 @property  unsigned long identifier
 @property  NSDictionary *syncedShortcuts

  // instance methods
  -[VCSpotlightState identifier]
  -[VCSpotlightState initWithPath:]
  -[VCSpotlightState .cxx_destruct]
  -[VCSpotlightState initWithIdentifier:syncedShortcuts:]
  -[VCSpotlightState isConsistentWithClientState:]
  -[VCSpotlightState saveToPath:error:]
  -[VCSpotlightState syncedShortcuts]


VCIntentDefinitionSyncDataHandler : VCSyncDataHandler
 @property  VCDaemonXPCEventHandler *eventHandler

  // class methods
  +[VCIntentDefinitionSyncDataHandler messageType]

  // instance methods
  -[VCIntentDefinitionSyncDataHandler eventHandler]
  -[VCIntentDefinitionSyncDataHandler installedApplicationsDidChange:]
  -[VCIntentDefinitionSyncDataHandler dealloc]
  -[VCIntentDefinitionSyncDataHandler .cxx_destruct]
  -[VCIntentDefinitionSyncDataHandler initWithEventHandler:]
  -[VCIntentDefinitionSyncDataHandler unsyncedChangesForSyncService:metadata:error:]
  -[VCIntentDefinitionSyncDataHandler markChangesAsSynced:withSyncService:metadata:error:]
  -[VCIntentDefinitionSyncDataHandler resetSyncStateForService:error:]
  -[VCIntentDefinitionSyncDataHandler applyChanges:fromSyncService:error:]
  -[VCIntentDefinitionSyncDataHandler deleteSyncedData:]


VCCompanionSyncIncomingSession : VCCompanionSyncSession
  // class methods
  +[VCCompanionSyncIncomingSession direction]

  // instance methods
  -[VCCompanionSyncIncomingSession syncSession:applyChanges:completion:]
  -[VCCompanionSyncIncomingSession resetDataStoreForSyncSession:completion:]


WFDialogNotificationManager : NSObject <UNUserNotificationCenterDelegate>
 @property  WFUserNotificationManager *userNotificationManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WFDialogNotificationManager categoryIdentifiers]
  +[WFDialogNotificationManager dialogNotificationCategory]
  +[WFDialogNotificationManager dialogNotificationConfirmationCategory]

  // instance methods
  -[WFDialogNotificationManager userNotificationManager]
  -[WFDialogNotificationManager .cxx_destruct]
  -[WFDialogNotificationManager userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:]
  -[WFDialogNotificationManager removeStaleNotifications]
  -[WFDialogNotificationManager initWithUserNotificationManager:]
  -[WFDialogNotificationManager postNotificationWithRequest:presentationMode:runningContext:]
  -[WFDialogNotificationManager vcShortcutPresentationModeFromWFDialogPresentationMode:]


WFShareSheetWorkflowProvider : NSObject
 @property  <WFDatabaseProvider> *databaseProvider

  // instance methods
  -[WFShareSheetWorkflowProvider .cxx_destruct]
  -[WFShareSheetWorkflowProvider generateSingleUseTokenForWorkflowIdentifier:]
  -[WFShareSheetWorkflowProvider shareSheetWorkflowsForExtensionMatchingDictionaries:hostBundleIdentifier:error:]
  -[WFShareSheetWorkflowProvider initWithDatabaseProvider:]
  -[WFShareSheetWorkflowProvider databaseProvider]


VCUserDefaults : NSUserDefaults
  // class methods
  +[VCUserDefaults sharedUserDefaults]

  // instance methods
  -[VCUserDefaults codableObjectOfClass:forKey:]
  -[VCUserDefaults setCodableObject:forKey:error:]


WFTriggerRegistrar : NSObject
 @property  NSObject<OS_dispatch_queue> *queue
 @property  <WFDatabaseProvider> *databaseProvider
 @property  VCDaemonXPCEventHandler *eventHandler
 @property  VCTriggerEventQueue *eventQueue
 @property  WFTriggerBootManager *triggerBootManager
 @property  WFWorkflowRunCoordinator *runCoordinator
 @property  VCCoreDuetListener *coreDuetListener
 @property  WFBiomeListener *biomeListener
 @property  WFTriggerNotificationScheduler *scheduler

  // instance methods
  -[WFTriggerRegistrar eventQueue]
  -[WFTriggerRegistrar triggerBootManager]
  -[WFTriggerRegistrar removeStalePendingNotifications]
  -[WFTriggerRegistrar eventHandler]
  -[WFTriggerRegistrar scheduler]
  -[WFTriggerRegistrar registerTriggerWithIdentifier:completion:]
  -[WFTriggerRegistrar biomeListener]
  -[WFTriggerRegistrar unregisterAllTriggers]
  -[WFTriggerRegistrar getConfiguredTriggerDescriptionsWithCompletion:]
  -[WFTriggerRegistrar deviceDidUnlockForFirstTime]
  -[WFTriggerRegistrar queue_unregisterConfiguredTriggerWithIdentifier:triggerBacking:]
  -[WFTriggerRegistrar dealloc]
  -[WFTriggerRegistrar deleteTriggerWithIdentifier:allowedDeletionClasses:completion:]
  -[WFTriggerRegistrar fireTriggerWithIdentifier:force:eventInfo:completion:]
  -[WFTriggerRegistrar registerAllTriggersWithCompletion:]
  -[WFTriggerRegistrar runCoordinator]
  -[WFTriggerRegistrar deleteTriggerWithIdentifier:completion:]
  -[WFTriggerRegistrar .cxx_destruct]
  -[WFTriggerRegistrar queue_registerConfiguredTrigger:completion:]
  -[WFTriggerRegistrar timeChangeDidOccur]
  -[WFTriggerRegistrar initWithDatabaseProvider:eventHandler:runCoordinator:]
  -[WFTriggerRegistrar coreDuetListener]
  -[WFTriggerRegistrar triggerBackingForConfiguredTrigger:]
  -[WFTriggerRegistrar timezoneChangeDidOccur]
  -[WFTriggerRegistrar unableToLoadDatabaseErrorWithUnderlyingError:]
  -[WFTriggerRegistrar queue]
  -[WFTriggerRegistrar unregisterTriggerWithIdentifier:triggerBacking:]
  -[WFTriggerRegistrar queue_unregisterConfiguredTrigger:]
  -[WFTriggerRegistrar databaseProvider]


VCCompanionSyncService : NSObject <SYServiceDelegate, VCCompanionSyncSessionDelegate>
 @property  SYService *service
 @property  NSObject<OS_dispatch_queue> *queue
 @property  <VCSyncDataEndpoint> *syncDataEndpoint
 @property  WFDebouncer *debouncer
 @property  NSSet *currentDataHandlers
 @property  VCCompanionSyncSession *currentSession
 @property  VCNRDeviceSyncService *currentSyncService
 @property  <VCCompanionSyncServiceDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VCCompanionSyncService currentSession]
  -[VCCompanionSyncService debouncer]
  -[VCCompanionSyncService setDelegate:]
  -[VCCompanionSyncService currentSyncService]
  -[VCCompanionSyncService delegate]
  -[VCCompanionSyncService dealloc]
  -[VCCompanionSyncService .cxx_destruct]
  -[VCCompanionSyncService service]
  -[VCCompanionSyncService syncDataEndpoint]
  -[VCCompanionSyncService setCurrentSession:]
  -[VCCompanionSyncService service:startSession:error:]
  -[VCCompanionSyncService requestSync]
  -[VCCompanionSyncService queue]
  -[VCCompanionSyncService setCurrentSyncService:]
  -[VCCompanionSyncService service:encounteredError:context:]
  -[VCCompanionSyncService service:willSwitchFromPairingID:toPairingID:]
  -[VCCompanionSyncService service:didSwitchFromPairingID:toPairingID:]
  -[VCCompanionSyncService resetSession]
  -[VCCompanionSyncService requestFullResync]
  -[VCCompanionSyncService requestSyncImmediately]
  -[VCCompanionSyncService companionSyncSession:didFinishWithError:]
  -[VCCompanionSyncService initWithSyncDataEndpoint:]
  -[VCCompanionSyncService isRunningOnWatch]
  -[VCCompanionSyncService resumeServiceIfNecessary]
  -[VCCompanionSyncService updateSyncDataHandlers]
  -[VCCompanionSyncService updateCurrentSyncServiceIfNecessary]
  -[VCCompanionSyncService configureReasonForUnderlyingSession:withSession:]
  -[VCCompanionSyncService companionSyncSessionDidFinishSendingChanges:]
  -[VCCompanionSyncService companionSyncSession:didUpdateProgress:]
  -[VCCompanionSyncService currentDataHandlers]
  -[VCCompanionSyncService setCurrentDataHandlers:]


VCXPCServer : NSObject <NSXPCListenerDelegate, NSXPCConnectionDelegate>
 @property  BOOL skipEntitlementsCheck
 @property  NSXPCListener *xpcListener
 @property  <WFDatabaseProvider> *databaseProvider
 @property  WFTriggerRegistrar *triggerRegistrar
 @property  WFWorkflowRunCoordinator *runCoordinator
 @property  VCCKShortcutSyncCoordinator *syncCoordinator
 @property  <VCSyncDataEndpoint> *syncDataEndpoint
 @property  WFTriggerManager *triggerManager
 @property  VCDaemonXPCEventHandler *eventHandler
 @property  NSXPCListenerEndpoint *endpoint
 @property  VCVoiceShortcutManager *voiceShortcutManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VCXPCServer xpcListener]
  -[VCXPCServer eventHandler]
  -[VCXPCServer initWithXPCListener:databaseProvider:triggerRegistrar:syncCoordinator:syncDataEndpoint:runCoordinator:eventHandler:]
  -[VCXPCServer endpoint]
  -[VCXPCServer skipEntitlementsCheck]
  -[VCXPCServer runCoordinator]
  -[VCXPCServer .cxx_destruct]
  -[VCXPCServer syncDataEndpoint]
  -[VCXPCServer initWithDatabaseProvider:triggerRegistrar:syncCoordinator:syncDataEndpoint:runCoordinator:eventHandler:]
  -[VCXPCServer syncCoordinator]
  -[VCXPCServer voiceShortcutManager]
  -[VCXPCServer triggerManager]
  -[VCXPCServer initWithUnsecuredAnonymousListenerAndDatabaseProvider:]
  -[VCXPCServer triggerRegistrar]
  -[VCXPCServer listener:shouldAcceptNewConnection:]
  -[VCXPCServer databaseProvider]


VCDaemonDatabaseProvider : NSObject <WFDatabaseProvider>
 @property  NSObject<OS_dispatch_queue> *queue
 @property  WFDatabase *database
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VCDaemonDatabaseProvider databaseWithError:]
  -[VCDaemonDatabaseProvider .cxx_destruct]
  -[VCDaemonDatabaseProvider isShortcutsAppInstalled]
  -[VCDaemonDatabaseProvider database]
  -[VCDaemonDatabaseProvider queue]
  -[VCDaemonDatabaseProvider migrateVoiceShortcutsToShortcutsInDatabase:]
  -[VCDaemonDatabaseProvider init]


VCVoiceShortcutManagerAccessWrapper : NSObject <VCDaemonXPCInterface>
 @property  VCVoiceShortcutManager *voiceShortcutManager
 @property  WFTriggerRegistrar *triggerRegistrar
 @property  WFShareSheetWorkflowProvider *shareSheetProvider
 @property  <VCSyncDataEndpoint> *syncDataEndpoint
 @property  VCCKShortcutSyncCoordinator *syncCoordinator
 @property  WFWorkflowRunCoordinator *runCoordinator
 @property  {?=[8I]} auditToken
 @property  VCAccessSpecifier *accessSpecifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VCVoiceShortcutManagerAccessWrapper setShortcutSuggestions:forAppWithBundleIdentifier:]
  -[VCVoiceShortcutManagerAccessWrapper getSortedVisibleWorkflowsInCollection:completion:]
  -[VCVoiceShortcutManagerAccessWrapper getSleepActionSuggestionsForAllAppsFilteringBySleep:completion:]
  -[VCVoiceShortcutManagerAccessWrapper accessSpecifier]
  -[VCVoiceShortcutManagerAccessWrapper getSortedVisibleWorkflowsByNameWithCompletion:]
  -[VCVoiceShortcutManagerAccessWrapper fireTriggerWithIdentifier:force:completion:]
  -[VCVoiceShortcutManagerAccessWrapper unarchiveActionFromData:withActionMetadata:completion:]
  -[VCVoiceShortcutManagerAccessWrapper resumeWorkflowFromContext:withRequest:completion:]
  -[VCVoiceShortcutManagerAccessWrapper resetDefaultShortcutFlagsWithCompletion:]
  -[VCVoiceShortcutManagerAccessWrapper getSortedWorkflowsWithQuery:completion:]
  -[VCVoiceShortcutManagerAccessWrapper archiveAction:withActionMetadata:completion:]
  -[VCVoiceShortcutManagerAccessWrapper getVoiceShortcutWithIdentifier:completion:]
  -[VCVoiceShortcutManagerAccessWrapper getConfiguredTriggerDescriptionsWithCompletion:]
  -[VCVoiceShortcutManagerAccessWrapper userHasAutomationsWithCompletion:]
  -[VCVoiceShortcutManagerAccessWrapper sendAceCommandDictionary:completion:]
  -[VCVoiceShortcutManagerAccessWrapper getVoiceShortcutsWithCompletion:]
  -[VCVoiceShortcutManagerAccessWrapper getValueForDescriptor:resultClassName:completion:]
  -[VCVoiceShortcutManagerAccessWrapper initWithVoiceShortcutManager:triggerRegistrar:accessSpecifier:syncCoordinator:syncDataEndpoint:runCoordinator:auditToken:]
  -[VCVoiceShortcutManagerAccessWrapper createShortcutWithRecordData:name:shortcutSource:completion:]
  -[VCVoiceShortcutManagerAccessWrapper setAuditToken:]
  -[VCVoiceShortcutManagerAccessWrapper getOnScreenContentWithOptions:completionHandler:]
  -[VCVoiceShortcutManagerAccessWrapper runCoordinator]
  -[VCVoiceShortcutManagerAccessWrapper deleteTriggerWithIdentifier:completion:]
  -[VCVoiceShortcutManagerAccessWrapper createBookmarkWithBookmarkableString:path:workflowID:completion:]
  -[VCVoiceShortcutManagerAccessWrapper getSortedVisibleFoldersWithCompletion:]
  -[VCVoiceShortcutManagerAccessWrapper getVoiceShortcutsForAppWithBundleIdentifier:completion:]
  -[VCVoiceShortcutManagerAccessWrapper .cxx_destruct]
  -[VCVoiceShortcutManagerAccessWrapper checkTriggerStateWithIdentifier:completion:]
  -[VCVoiceShortcutManagerAccessWrapper setSpotlightAutoShortcutsEnablement:forBundleIdentifier:completion:]
  -[VCVoiceShortcutManagerAccessWrapper getOnScreenContentWithOptions:completion:]
  -[VCVoiceShortcutManagerAccessWrapper auditToken]
  -[VCVoiceShortcutManagerAccessWrapper createSleepWorkflow:completion:]
  -[VCVoiceShortcutManagerAccessWrapper getShortcutSuggestionsForAllAppsWithLimit:completion:]
  -[VCVoiceShortcutManagerAccessWrapper setPerWorkflowStateData:forSmartPromptWithActionUUID:reference:completion:]
  -[VCVoiceShortcutManagerAccessWrapper describeSyncStateIncludingDeleted:completion:]
  -[VCVoiceShortcutManagerAccessWrapper obliterateShortcuts:]
  -[VCVoiceShortcutManagerAccessWrapper drawGlyphs:withBackgroundColorValues:padding:rounded:intoContext:completion:]
  -[VCVoiceShortcutManagerAccessWrapper refreshTriggerWithIdentifier:completion:]
  -[VCVoiceShortcutManagerAccessWrapper fetchURLForFPItem:completion:]
  -[VCVoiceShortcutManagerAccessWrapper generateSingleUseTokenForWorkflowIdentifier:completion:]
  -[VCVoiceShortcutManagerAccessWrapper getSleepActionSuggestionsForAppWithBundleIdentifier:options:completion:]
  -[VCVoiceShortcutManagerAccessWrapper syncDataEndpoint]
  -[VCVoiceShortcutManagerAccessWrapper runWorkflowWithDescriptor:request:context:completion:]
  -[VCVoiceShortcutManagerAccessWrapper getContextualActionsForContext:completion:]
  -[VCVoiceShortcutManagerAccessWrapper stopRunningWorkflowWithRunningContext:]
  -[VCVoiceShortcutManagerAccessWrapper drawGlyphs:withBackgroundColorValues:padding:intoContext:completion:]
  -[VCVoiceShortcutManagerAccessWrapper getVoiceShortcutWithPhrase:completion:]
  -[VCVoiceShortcutManagerAccessWrapper resolveFilePath:workflowID:completion:]
  -[VCVoiceShortcutManagerAccessWrapper getSpotlightAutoShortcutsEnablementForBundleIdentifier:completion:]
  -[VCVoiceShortcutManagerAccessWrapper addVoiceShortcut:phrase:completion:]
  -[VCVoiceShortcutManagerAccessWrapper resetAutomationConfirmationStatusWithCompletion:]
  -[VCVoiceShortcutManagerAccessWrapper computeFinderResizedSizesForImages:inSizes:completion:]
  -[VCVoiceShortcutManagerAccessWrapper syncCoordinator]
  -[VCVoiceShortcutManagerAccessWrapper voiceShortcutManager]
  -[VCVoiceShortcutManagerAccessWrapper getStingWorkflowWithIdentifier:completion:]
  -[VCVoiceShortcutManagerAccessWrapper getShareSheetWorkflowsForExtensionMatchingDictionaries:hostBundleIdentifier:completion:]
  -[VCVoiceShortcutManagerAccessWrapper checkTriggerStateWithKeyPath:completion:]
  -[VCVoiceShortcutManagerAccessWrapper unregisterTriggerWithIdentifier:triggerBacking:completion:]
  -[VCVoiceShortcutManagerAccessWrapper filterContextualActions:forContext:completion:]
  -[VCVoiceShortcutManagerAccessWrapper createBookmarkWithURL:workflowID:completion:]
  -[VCVoiceShortcutManagerAccessWrapper updateVoiceShortcutWithIdentifier:phrase:shortcut:completion:]
  -[VCVoiceShortcutManagerAccessWrapper getSleepActionSuggestionsForAllAppsWithOptions:completion:]
  -[VCVoiceShortcutManagerAccessWrapper requestDataMigration:]
  -[VCVoiceShortcutManagerAccessWrapper getSiriPodcastsDatabaseURLWithCompletion:]
  -[VCVoiceShortcutManagerAccessWrapper getSiriAutoShortcutsEnablementForBundleIdentifier:completion:]
  -[VCVoiceShortcutManagerAccessWrapper getResultsForQuery:resultClassName:completion:]
  -[VCVoiceShortcutManagerAccessWrapper resumeWorkflowFromContext:presentationMode:completion:]
  -[VCVoiceShortcutManagerAccessWrapper resolveCrossDeviceItemID:completion:]
  -[VCVoiceShortcutManagerAccessWrapper addDefaultShortcutsIfNecessaryWithCompletion:]
  -[VCVoiceShortcutManagerAccessWrapper getShortcutSuggestionsForAppWithBundleIdentifier:completion:]
  -[VCVoiceShortcutManagerAccessWrapper setSiriAutoShortcutsEnablement:forBundleIdentifier:completion:]
  -[VCVoiceShortcutManagerAccessWrapper deleteVoiceShortcutWithIdentifier:name:completion:]
  -[VCVoiceShortcutManagerAccessWrapper triggerRegistrar]
  -[VCVoiceShortcutManagerAccessWrapper getRunningWorkflowNamesAndProgressCompletedWithCompletionHandler:]
  -[VCVoiceShortcutManagerAccessWrapper getSleepActionSuggestionsForAppWithBundleIdentifier:shouldFilterBySleep:completion:]
  -[VCVoiceShortcutManagerAccessWrapper getStingWorkflowsWithCompletion:]
  -[VCVoiceShortcutManagerAccessWrapper deleteSleepWorkflowWithIdentifier:completion:]
  -[VCVoiceShortcutManagerAccessWrapper getNumberOfVoiceShortcutsWithCompletion:]
  -[VCVoiceShortcutManagerAccessWrapper shareSheetProvider]
  -[VCVoiceShortcutManagerAccessWrapper setInteger:forKey:inDomain:completionHandler:]
  -[VCVoiceShortcutManagerAccessWrapper showSingleStepCompletionForWebClip:completion:]
  -[VCVoiceShortcutManagerAccessWrapper allowIncomingRunRequest:withDescriptor:]
  -[VCVoiceShortcutManagerAccessWrapper getFirstUnsortedWorkflowWithCompletion:]
  -[VCVoiceShortcutManagerAccessWrapper resolveBookmarkData:completion:]


VCSpotlightSyncService : NSObject <WFDatabaseObjectObserver, VCSpotlightSyncOperationDelegate>
 @property  WFDebouncer *debouncer
 @property  VCDaemonXPCEventHandler *eventHandler
 @property  VCSpotlightSyncOperation *syncOperation
 @property  <WFDatabaseProvider> *databaseProvider
 @property  CSSearchableIndex *index
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSMutableSet *queuedModified
 @property  NSMutableSet *queuedInserted
 @property  NSMutableSet *queuedRemoved
 @property  WFDatabaseResult *workflows
 @property  BOOL isFetchingClientState
 @property  BOOL hasAddedXPCEventHandlerObserver
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VCSpotlightSyncService sync]
  -[VCSpotlightSyncService eventHandler]
  -[VCSpotlightSyncService setQueuedInserted:]
  -[VCSpotlightSyncService isFetchingClientState]
  -[VCSpotlightSyncService syncOperation]
  -[VCSpotlightSyncService workflows]
  -[VCSpotlightSyncService debouncer]
  -[VCSpotlightSyncService index]
  -[VCSpotlightSyncService queuedModified]
  -[VCSpotlightSyncService setQueuedRemoved:]
  -[VCSpotlightSyncService dealloc]
  -[VCSpotlightSyncService .cxx_destruct]
  -[VCSpotlightSyncService setSyncOperation:]
  -[VCSpotlightSyncService queuedRemoved]
  -[VCSpotlightSyncService requestSync]
  -[VCSpotlightSyncService syncOperationFinishedWithRequestToRelaunch:]
  -[VCSpotlightSyncService queuedInserted]
  -[VCSpotlightSyncService initWithDatabaseProvider:eventHandler:]
  -[VCSpotlightSyncService queue]
  -[VCSpotlightSyncService databaseDidChange:modified:inserted:removed:]
  -[VCSpotlightSyncService start]
  -[VCSpotlightSyncService setQueuedModified:]
  -[VCSpotlightSyncService hasAddedXPCEventHandlerObserver]
  -[VCSpotlightSyncService syncWithModifiedObjects:inserted:removed:]
  -[VCSpotlightSyncService setHasAddedXPCEventHandlerObserver:]
  -[VCSpotlightSyncService setIsFetchingClientState:]
  -[VCSpotlightSyncService databaseProvider]


VCSYChangeEnumerator : NSEnumerator
  // instance methods
  -[VCSYChangeEnumerator .cxx_destruct]
  -[VCSYChangeEnumerator nextObject]
  -[VCSYChangeEnumerator initWithLazyArray:]


WFContextualActionSpotlightSyncService : NSObject <WFDatabaseObjectObserver>
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSObject<OS_os_activity> *activity
 @property  VCDaemonXPCEventHandler *eventHandler
 @property  VCDaemonDatabaseProvider *databaseProvider
 @property  BPSSink *focusModeSink
 @property  CSSearchableIndex *index

  // instance methods
  -[WFContextualActionSpotlightSyncService queue_getAppShortcutSearchableItemsWithCompletionHandler:]
  -[WFContextualActionSpotlightSyncService queue_fetchWipeAndIndexActionsInDomainWithDescriptiveName:identifier:fetcher:completionBlock:]
  -[WFContextualActionSpotlightSyncService eventHandler]
  -[WFContextualActionSpotlightSyncService queue_wipeIndexIfNotMigratedToNewDomainIdentifiersWithCompletionHandler:]
  -[WFContextualActionSpotlightSyncService setDatabaseProvider:]
  -[WFContextualActionSpotlightSyncService index]
  -[WFContextualActionSpotlightSyncService queue_getStaticSearchableItemsWithCompletionHandler:]
  -[WFContextualActionSpotlightSyncService subscribeToBiome]
  -[WFContextualActionSpotlightSyncService dealloc]
  -[WFContextualActionSpotlightSyncService receiveAutoShortcutsUpdatedNotification:]
  -[WFContextualActionSpotlightSyncService .cxx_destruct]
  -[WFContextualActionSpotlightSyncService reindexAllSearchableItems]
  -[WFContextualActionSpotlightSyncService activity]
  -[WFContextualActionSpotlightSyncService initWithEventHandler:databaseProvider:]
  -[WFContextualActionSpotlightSyncService queue]
  -[WFContextualActionSpotlightSyncService databaseDidChange:modified:inserted:removed:]
  -[WFContextualActionSpotlightSyncService start]
  -[WFContextualActionSpotlightSyncService queue_getFocusModeSearchableItemsWithCompletionHandler:]
  -[WFContextualActionSpotlightSyncService focusModeSink]
  -[WFContextualActionSpotlightSyncService databaseProvider]


VCCKShortcutSyncCoordinator : NSObject
 @property  <WFDatabaseProvider> *databaseProvider
 @property  CKContainer *container
 @property  NSObject<OS_dispatch_queue> *stateAccessQueue
 @property  NSObject<OS_nw_path_monitor> *pathMonitor
 @property  ^{__CTServerConnection=} telephonyConnection
 @property  VCCKApplicationStateObserver *applicationObserver
 @property  BOOL started
 @property  long long accountStatus
 @property  CKRecordID *userRecordID
 @property  VCCKShortcutSyncService *currentSyncService
 @property  NSString *accountForSyncToken
 @property  BOOL syncEnabled

  // instance methods
  -[VCCKShortcutSyncCoordinator pathMonitor]
  -[VCCKShortcutSyncCoordinator isSyncEnabled]
  -[VCCKShortcutSyncCoordinator stopObservingReachability]
  -[VCCKShortcutSyncCoordinator stateAccessQueue]
  -[VCCKShortcutSyncCoordinator stopObservingApplicationVisibility]
  -[VCCKShortcutSyncCoordinator handleAccountChangedNotification:]
  -[VCCKShortcutSyncCoordinator handleCloudKitSyncEnabledChange]
  -[VCCKShortcutSyncCoordinator setSyncEnabled:]
  -[VCCKShortcutSyncCoordinator isStarted]
  -[VCCKShortcutSyncCoordinator setUserRecordID:]
  -[VCCKShortcutSyncCoordinator handleCloudKitSyncZoneWasPurgedChange]
  -[VCCKShortcutSyncCoordinator currentSyncService]
  -[VCCKShortcutSyncCoordinator setupPathMonitor]
  -[VCCKShortcutSyncCoordinator userRecordID]
  -[VCCKShortcutSyncCoordinator dealloc]
  -[VCCKShortcutSyncCoordinator .cxx_destruct]
  -[VCCKShortcutSyncCoordinator container]
  -[VCCKShortcutSyncCoordinator startObservingApplicationVisibility]
  -[VCCKShortcutSyncCoordinator stopObservingDataUsagePermission]
  -[VCCKShortcutSyncCoordinator deleteLegacyShortcutsZoneSubscriptionIfNeeded]
  -[VCCKShortcutSyncCoordinator updateCurrentSyncServiceIfNeeded]
  -[VCCKShortcutSyncCoordinator startObservingDataUsagePermission]
  -[VCCKShortcutSyncCoordinator observeValueForKeyPath:ofObject:change:context:]
  -[VCCKShortcutSyncCoordinator updateAccountStatusAndUserRecordID]
  -[VCCKShortcutSyncCoordinator accountStatus]
  -[VCCKShortcutSyncCoordinator accountForSyncToken]
  -[VCCKShortcutSyncCoordinator setAccountStatus:]
  -[VCCKShortcutSyncCoordinator initWithDatabaseProvider:]
  -[VCCKShortcutSyncCoordinator stopObservingUserDefaults]
  -[VCCKShortcutSyncCoordinator startObservingReachability]
  -[VCCKShortcutSyncCoordinator startObservingAccountChanges]
  -[VCCKShortcutSyncCoordinator stopObservingAccountChanges]
  -[VCCKShortcutSyncCoordinator start]
  -[VCCKShortcutSyncCoordinator setCurrentSyncService:]
  -[VCCKShortcutSyncCoordinator setStarted:]
  -[VCCKShortcutSyncCoordinator startObservingUserDefaults]
  -[VCCKShortcutSyncCoordinator applicationObserver]
  -[VCCKShortcutSyncCoordinator databaseProvider]
  -[VCCKShortcutSyncCoordinator telephonyConnection]


VCCompanionSyncOutgoingSession : VCCompanionSyncSession
 @property  NSDictionary *metadata
 @property  NSMutableArray *pendingChanges
 @property  NSMutableArray *sentChanges
 @property  NSMutableArray *syncedChanges
 @property  <VCCompanionSyncOutgoingSessionDelegate> *delegate
 @property  double progress

  // class methods
  +[VCCompanionSyncOutgoingSession direction]

  // instance methods
  -[VCCompanionSyncOutgoingSession progress]
  -[VCCompanionSyncOutgoingSession pendingChanges]
  -[VCCompanionSyncOutgoingSession .cxx_destruct]
  -[VCCompanionSyncOutgoingSession metadata]
  -[VCCompanionSyncOutgoingSession syncSession:enqueueChanges:error:]
  -[VCCompanionSyncOutgoingSession syncSession:successfullySynced:]
  -[VCCompanionSyncOutgoingSession initWithSYSession:service:syncDataHandlers:changeSet:metadata:]
  -[VCCompanionSyncOutgoingSession sentChanges]
  -[VCCompanionSyncOutgoingSession syncedChanges]


WFSystemSurfaceWorkflowStatusUpdater : NSObject <WFDatabaseObjectObserver>
 @property  NSObject<OS_dispatch_queue> *queue
 @property  <WFDatabaseProvider> *databaseProvider
 @property  WFSystemSurfaceWorkflowStatusRegistry *registry

  // instance methods
  -[WFSystemSurfaceWorkflowStatusUpdater registry]
  -[WFSystemSurfaceWorkflowStatusUpdater queue_startIfPossible]
  -[WFSystemSurfaceWorkflowStatusUpdater startIfPossible]
  -[WFSystemSurfaceWorkflowStatusUpdater .cxx_destruct]
  -[WFSystemSurfaceWorkflowStatusUpdater initWithDatabaseProvider:eventHandler:]
  -[WFSystemSurfaceWorkflowStatusUpdater queue]
  -[WFSystemSurfaceWorkflowStatusUpdater queue_updateFromDatabase:]
  -[WFSystemSurfaceWorkflowStatusUpdater databaseDidChange:modified:inserted:removed:]
  -[WFSystemSurfaceWorkflowStatusUpdater databaseProvider]


VCIDApplicationSyncState : MTLModel <MTLJSONSerializing>
 @property  NSString *checksum
 @property  NSDate *registeredDate
 @property  NSDictionary *dictionaryValue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[VCIDApplicationSyncState JSONKeyPathsByPropertyKey]

  // instance methods
  -[VCIDApplicationSyncState .cxx_destruct]
  -[VCIDApplicationSyncState setChecksum:]
  -[VCIDApplicationSyncState checksum]
  -[VCIDApplicationSyncState registeredDate]
  -[VCIDApplicationSyncState setRegisteredDate:]


VCIntentDefinitionSyncState : MTLModel <MTLJSONSerializing>
 @property  NSUUID *databaseUUID
 @property  NSNumber *sequenceNumber
 @property  NSDictionary *applications
 @property  NSDictionary *dictionaryValue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[VCIntentDefinitionSyncState JSONKeyPathsByPropertyKey]
  +[VCIntentDefinitionSyncState applicationsJSONTransformer]

  // instance methods
  -[VCIntentDefinitionSyncState applications]
  -[VCIntentDefinitionSyncState setApplications:]
  -[VCIntentDefinitionSyncState setSequenceNumber:]
  -[VCIntentDefinitionSyncState .cxx_destruct]
  -[VCIntentDefinitionSyncState sequenceNumber]
  -[VCIntentDefinitionSyncState databaseUUID]
  -[VCIntentDefinitionSyncState setDatabaseUUID:]


VCIntentDefinitionChange : NSObject <VCSYChange>
 @property  NSArray *files
 @property  NSString *checksum
 @property  long long changeType
 @property  NSString *objectIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *sequencer

  // class methods
  +[VCIntentDefinitionChange messageType]

  // instance methods
  -[VCIntentDefinitionChange objectIdentifier]
  -[VCIntentDefinitionChange changeType]
  -[VCIntentDefinitionChange .cxx_destruct]
  -[VCIntentDefinitionChange setChangeType:]
  -[VCIntentDefinitionChange checksum]
  -[VCIntentDefinitionChange sequencer]
  -[VCIntentDefinitionChange files]
  -[VCIntentDefinitionChange setFiles:]
  -[VCIntentDefinitionChange writeTo:error:]
  -[VCIntentDefinitionChange readFrom:error:]
  -[VCIntentDefinitionChange initWithObjectIdentifier:changeType:]
  -[VCIntentDefinitionChange initWithApplicationRecord:changeType:]


WFXPCActivityScheduler : NSObject
 @property  ^{_xpc_activity_eligibility_changed_handler_s=} eligibilityChangedHandler
 @property  NSString *activityIdentifier

  // class methods
  +[WFXPCActivityScheduler activatedSchedulerWithActivityIdentifier:checkInHandler:runHandler:]
  +[WFXPCActivityScheduler activatedSchedulerWithActivityIdentifier:runHandler:]

  // instance methods
  -[WFXPCActivityScheduler activityIdentifier]
  -[WFXPCActivityScheduler initWithActivityIdentifier:]
  -[WFXPCActivityScheduler scheduleWithRunHandler:]
  -[WFXPCActivityScheduler dealloc]
  -[WFXPCActivityScheduler .cxx_destruct]
  -[WFXPCActivityScheduler eligibilityChangedHandler]
  -[WFXPCActivityScheduler setEligibilityChangedHandler:]
  -[WFXPCActivityScheduler invalidate]
  -[WFXPCActivityScheduler scheduleWithCheckInHandler:runHandler:]


WFOnScreenContentManager : NSObject
  // instance methods
  -[WFOnScreenContentManager getOnScreenContentWithOptions:completionHandler:]
  -[WFOnScreenContentManager getOnScreenContentWithOptions:completion:]
  -[WFOnScreenContentManager getContentForLayoutElement:serviceOptions:completionHandler:]
  -[WFOnScreenContentManager visibleApplicationsFromLayout:]
  -[WFOnScreenContentManager currentDisplayLayout]
  -[WFOnScreenContentManager getNodeForGlobalUserActivityWithCompletionHandler:]


VCNRDeviceSyncService : NSObject <NSCopying, VCShortcutSyncService>
 @property  VCCompanionSyncService *service
 @property  long long protocolVersion
 @property  NSString *syncServiceIdentifier
 @property  NSURL *directoryURL
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VCNRDeviceSyncService directoryURL]
  -[VCNRDeviceSyncService protocolVersion]
  -[VCNRDeviceSyncService .cxx_destruct]
  -[VCNRDeviceSyncService service]
  -[VCNRDeviceSyncService requestSync]
  -[VCNRDeviceSyncService copyWithZone:]
  -[VCNRDeviceSyncService isEqual:]
  -[VCNRDeviceSyncService requestFullResync]
  -[VCNRDeviceSyncService syncServiceIdentifier]
  -[VCNRDeviceSyncService initWithCompanionSyncService:device:]


WFBiomeListener : NSObject
 @property  NSObject<OS_dispatch_queue> *queue
 @property  VCTriggerEventQueue *eventQueue
 @property  NSMutableDictionary *triggerIDToSinks

  // instance methods
  -[WFBiomeListener initWithEventQueue:]
  -[WFBiomeListener eventQueue]
  -[WFBiomeListener fireTriggerWithIdentifier:force:eventInfo:completion:]
  -[WFBiomeListener .cxx_destruct]
  -[WFBiomeListener queue]
  -[WFBiomeListener registerConfiguredTrigger:completion:]
  -[WFBiomeListener unregisterConfiguredTriggerWithIdentifier:]
  -[WFBiomeListener queue_fireTriggerWithIdentifier:force:eventInfo:completion:]
  -[WFBiomeListener queue_unregisterConfiguredTriggerWithIdentifier:]
  -[WFBiomeListener queue_handleEvent:forTrigger:]
  -[WFBiomeListener triggerIDToSinks]


VCCompanionSyncSession : NSObject <SYSessionDelegate>
 @property  SYSession *session
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSObject<OS_os_transaction> *transaction
 @property  <VCShortcutSyncService> *service
 @property  NSSet *syncDataHandlers
 @property  <VCCompanionSyncSessionDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[VCCompanionSyncSession direction]

  // instance methods
  -[VCCompanionSyncSession session]
  -[VCCompanionSyncSession setDelegate:]
  -[VCCompanionSyncSession transaction]
  -[VCCompanionSyncSession delegate]
  -[VCCompanionSyncSession .cxx_destruct]
  -[VCCompanionSyncSession service]
  -[VCCompanionSyncSession queue]
  -[VCCompanionSyncSession syncSession:enqueueChanges:error:]
  -[VCCompanionSyncSession syncSession:applyChanges:completion:]
  -[VCCompanionSyncSession syncSession:didEndWithError:]
  -[VCCompanionSyncSession syncSession:resetDataStoreWithError:]
  -[VCCompanionSyncSession resetDataStoreForSyncSession:completion:]
  -[VCCompanionSyncSession syncDataHandlers]
  -[VCCompanionSyncSession initWithSYSession:service:syncDataHandlers:]


VCIntentDefinitionManager : NSObject <INVCIntentDefinitionManager>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[VCIntentDefinitionManager intentDefinitionBundleURLForBundleID:]
  +[VCIntentDefinitionManager allBundleIdentifiers]
  +[VCIntentDefinitionManager intentDefinitionURLsForBundleID:]
  +[VCIntentDefinitionManager intentDefinitionURLsForBundleID:inDirectory:]
  +[VCIntentDefinitionManager appInfoForBundleID:]


VCPBSpotlightBookmark : PBCodable <NSCopying>
 @property  unsigned long identifier
 @property  NSMutableArray *pairs

  // class methods
  +[VCPBSpotlightBookmark pairsType]

  // instance methods
  -[VCPBSpotlightBookmark identifier]
  -[VCPBSpotlightBookmark copyTo:]
  -[VCPBSpotlightBookmark .cxx_destruct]
  -[VCPBSpotlightBookmark mergeFrom:]
  -[VCPBSpotlightBookmark setIdentifier:]
  -[VCPBSpotlightBookmark dictionaryRepresentation]
  -[VCPBSpotlightBookmark copyWithZone:]
  -[VCPBSpotlightBookmark readFrom:]
  -[VCPBSpotlightBookmark writeTo:]
  -[VCPBSpotlightBookmark isEqual:]
  -[VCPBSpotlightBookmark clearPairs]
  -[VCPBSpotlightBookmark pairs]
  -[VCPBSpotlightBookmark setPairs:]
  -[VCPBSpotlightBookmark pairsCount]
  -[VCPBSpotlightBookmark addPairs:]
  -[VCPBSpotlightBookmark pairsAtIndex:]


WFWorkflowStatusPresenter : NSObject <NSXPCListenerDelegate, WFDialogAlertPresenter>
 @property  BOOL launching
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSXPCListener *listener
 @property  NSXPCConnection *activeConnection
 @property  <WFDialogAlertPresenterDelegate> *delegate
 @property  <WFWorkflowStatusPresenterDelegate> *statusPresenterDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL alertIsActive

  // instance methods
  -[WFWorkflowStatusPresenter activeConnection]
  -[WFWorkflowStatusPresenter setDelegate:]
  -[WFWorkflowStatusPresenter delegate]
  -[WFWorkflowStatusPresenter .cxx_destruct]
  -[WFWorkflowStatusPresenter setActiveConnection:]
  -[WFWorkflowStatusPresenter setQueue:]
  -[WFWorkflowStatusPresenter queue]
  -[WFWorkflowStatusPresenter deactivateAlert]
  -[WFWorkflowStatusPresenter listener]
  -[WFWorkflowStatusPresenter alertIsActive]
  -[WFWorkflowStatusPresenter listener:shouldAcceptNewConnection:]
  -[WFWorkflowStatusPresenter init]
  -[WFWorkflowStatusPresenter activateAlertInMainSceneOfApplicationWithBundleIdentifier:]
  -[WFWorkflowStatusPresenter alertIsLaunching]
  -[WFWorkflowStatusPresenter statusPresenterDelegate]
  -[WFWorkflowStatusPresenter setStatusPresenterDelegate:]
  -[WFWorkflowStatusPresenter isLaunching]
  -[WFWorkflowStatusPresenter setLaunching:]


VCWatchSyncCoordinator : NSObject <PSYSyncCoordinatorDelegate, VCCompanionSyncServiceDelegate>
 @property  PSYSyncCoordinator *pairedSyncCoordinator
 @property  NSMutableSet *startedSessions
 @property  <VCSyncDataEndpoint> *syncDataEndpoint
 @property  VCDaemonXPCEventHandler *eventHandler
 @property  NSObject<OS_dispatch_queue> *queue
 @property  VCCompanionSyncService *service
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VCWatchSyncCoordinator eventHandler]
  -[VCWatchSyncCoordinator dealloc]
  -[VCWatchSyncCoordinator .cxx_destruct]
  -[VCWatchSyncCoordinator syncCoordinatorDidChangeSyncRestriction:]
  -[VCWatchSyncCoordinator syncCoordinator:didInvalidateSyncSession:]
  -[VCWatchSyncCoordinator service]
  -[VCWatchSyncCoordinator syncDataEndpoint]
  -[VCWatchSyncCoordinator queue]
  -[VCWatchSyncCoordinator syncCoordinator:beginSyncSession:]
  -[VCWatchSyncCoordinator initWithSyncDataEndpoint:eventHandler:]
  -[VCWatchSyncCoordinator requestSyncIfUnrestricted]
  -[VCWatchSyncCoordinator handleDidUnpairNotification:]
  -[VCWatchSyncCoordinator handleDeviceDidChangeVersionNotification]
  -[VCWatchSyncCoordinator companionSyncServiceShouldStartSession:]
  -[VCWatchSyncCoordinator companionSyncService:typeForSession:]
  -[VCWatchSyncCoordinator companionSyncService:outgoingSyncSessionDidFinishSendingChanges:]
  -[VCWatchSyncCoordinator companionSyncService:outgoingSyncSession:didUpdateProgress:]
  -[VCWatchSyncCoordinator companionSyncService:didFinishSyncSession:withError:]
  -[VCWatchSyncCoordinator companionSyncService:didRejectSessionWithError:]
  -[VCWatchSyncCoordinator startObservingWatchChangeNotifications]
  -[VCWatchSyncCoordinator stopObservingWatchChangeNotifications]
  -[VCWatchSyncCoordinator pairedSyncCoordinator]
  -[VCWatchSyncCoordinator startedSessions]


VCConfiguredSleepWorkflow(WorkflowReferenceConvertible)
	// class methods
	+[VCConfiguredSleepWorkflow(WorkflowReferenceConvertible) getObjectsFromReferences:databaseProvider:completion:]

WFWorkflowDescriptor(WorkflowReferenceConvertible)
	// class methods
	+[WFWorkflowDescriptor(WorkflowReferenceConvertible) getObjectsFromReferences:databaseProvider:completion:]

WFStingWorkflow(WorkflowReferenceConvertible)
	// class methods
	+[WFStingWorkflow(WorkflowReferenceConvertible) getObjectsFromReferences:databaseProvider:completion:]

WFTrigger(BiomeContext)
	// class methods
	+[WFTrigger(BiomeContext) powerLogEventKindForTrigger:]

	// instance methods
	-[WFTrigger(BiomeContext) publisherWithScheduler:]
	-[WFTrigger(BiomeContext) shouldFireInResponseToEvent:]
	-[WFTrigger(BiomeContext) contextStoreKeyPathForCurrentState]
	-[WFTrigger(BiomeContext) contextStorePredicate]
	-[WFTrigger(BiomeContext) contextStoreQualityOfService]
	-[WFTrigger(BiomeContext) contextStoreRegistrationIsForWatch]
	-[WFTrigger(BiomeContext) shouldFireTriggerWithEventInfo:error:]
	-[WFTrigger(BiomeContext) requiresEventInfoAsInput]
	-[WFTrigger(BiomeContext) needsRegistrationAfterFiring]

WFUserFocusActivityTrigger(BiomeContext)
	// instance methods
	-[WFUserFocusActivityTrigger(BiomeContext) publisherWithScheduler:]
	-[WFUserFocusActivityTrigger(BiomeContext) shouldFireInResponseToEvent:]

WFSoundRecognitionTrigger(BiomeContext)
	// instance methods
	-[WFSoundRecognitionTrigger(BiomeContext) publisherWithScheduler:]
	-[WFSoundRecognitionTrigger(BiomeContext) shouldFireInResponseToEvent:]

WFAlarmTrigger(BiomeContext)
	// instance methods
	-[WFAlarmTrigger(BiomeContext) publisherWithScheduler:]
	-[WFAlarmTrigger(BiomeContext) shouldFireInResponseToEvent:]
	-[WFAlarmTrigger(BiomeContext) alarmEventForCurrentAlarmState]

WFCarPlayConnectionTrigger(BiomeContext)
	// instance methods
	-[WFCarPlayConnectionTrigger(BiomeContext) publisherWithScheduler:]
	-[WFCarPlayConnectionTrigger(BiomeContext) shouldFireInResponseToEvent:]

WFTimeOfDayTrigger(CoreDuetContext)
	// instance methods
	-[WFTimeOfDayTrigger(CoreDuetContext) contextStoreKeyPathForCurrentState]
	-[WFTimeOfDayTrigger(CoreDuetContext) contextStorePredicate]
	-[WFTimeOfDayTrigger(CoreDuetContext) contextStoreQualityOfService]
	-[WFTimeOfDayTrigger(CoreDuetContext) needsRegistrationAfterFiring]

WFLocationTrigger(CoreDuetContext)
	// instance methods
	-[WFLocationTrigger(CoreDuetContext) shouldFireTriggerWithEventInfo:error:]

WFArriveLocationTrigger(CoreDuetContext)
	// instance methods
	-[WFArriveLocationTrigger(CoreDuetContext) contextStoreKeyPathForCurrentState]
	-[WFArriveLocationTrigger(CoreDuetContext) contextStorePredicate]
	-[WFArriveLocationTrigger(CoreDuetContext) contextStoreQualityOfService]

WFLeaveLocationTrigger(CoreDuetContext)
	// instance methods
	-[WFLeaveLocationTrigger(CoreDuetContext) contextStoreKeyPathForCurrentState]
	-[WFLeaveLocationTrigger(CoreDuetContext) contextStorePredicate]
	-[WFLeaveLocationTrigger(CoreDuetContext) contextStoreQualityOfService]

WFPredictedLocationTransitionTrigger(CoreDuetContext)
	// instance methods
	-[WFPredictedLocationTransitionTrigger(CoreDuetContext) contextStoreKeyPathForCurrentState]
	-[WFPredictedLocationTransitionTrigger(CoreDuetContext) contextStorePredicate]
	-[WFPredictedLocationTransitionTrigger(CoreDuetContext) contextStoreQualityOfService]
	-[WFPredictedLocationTransitionTrigger(CoreDuetContext) timeIntervalUpperBound]
	-[WFPredictedLocationTransitionTrigger(CoreDuetContext) timeIntervalLowerBound]

WFAppInFocusTrigger(CoreDuetContext)
	// instance methods
	-[WFAppInFocusTrigger(CoreDuetContext) contextStoreKeyPathForCurrentState]
	-[WFAppInFocusTrigger(CoreDuetContext) contextStorePredicate]
	-[WFAppInFocusTrigger(CoreDuetContext) contextStoreQualityOfService]
	-[WFAppInFocusTrigger(CoreDuetContext) shouldFireTriggerWithEventInfo:error:]
	-[WFAppInFocusTrigger(CoreDuetContext) onBackgroundIgnoredLaunchReasons]
	-[WFAppInFocusTrigger(CoreDuetContext) onFocusIgnoredLaunchReasons]

WFWorkoutTrigger(CoreDuetContext)
	// instance methods
	-[WFWorkoutTrigger(CoreDuetContext) contextStoreKeyPathForCurrentState]
	-[WFWorkoutTrigger(CoreDuetContext) contextStorePredicate]
	-[WFWorkoutTrigger(CoreDuetContext) contextStoreQualityOfService]
	-[WFWorkoutTrigger(CoreDuetContext) contextStoreRegistrationIsForWatch]

WFSleepTrigger(CoreDuetContext)
	// instance methods
	-[WFSleepTrigger(CoreDuetContext) contextStoreKeyPathForCurrentState]
	-[WFSleepTrigger(CoreDuetContext) contextStorePredicate]
	-[WFSleepTrigger(CoreDuetContext) contextStoreQualityOfService]

WFEmailTrigger(CoreDuetContext)
	// instance methods
	-[WFEmailTrigger(CoreDuetContext) contextStoreKeyPathForCurrentState]
	-[WFEmailTrigger(CoreDuetContext) contextStorePredicate]
	-[WFEmailTrigger(CoreDuetContext) contextStoreQualityOfService]
	-[WFEmailTrigger(CoreDuetContext) requiresEventInfoAsInput]

WFMessageTrigger(CoreDuetContext)
	// instance methods
	-[WFMessageTrigger(CoreDuetContext) contextStoreKeyPathForCurrentState]
	-[WFMessageTrigger(CoreDuetContext) contextStorePredicate]
	-[WFMessageTrigger(CoreDuetContext) contextStoreQualityOfService]
	-[WFMessageTrigger(CoreDuetContext) requiresEventInfoAsInput]

WFWifiTrigger(CoreDuetContext)
	// instance methods
	-[WFWifiTrigger(CoreDuetContext) contextStoreKeyPathForCurrentState]
	-[WFWifiTrigger(CoreDuetContext) contextStorePredicate]
	-[WFWifiTrigger(CoreDuetContext) contextStoreQualityOfService]

WFBluetoothTrigger(CoreDuetContext)
	// instance methods
	-[WFBluetoothTrigger(CoreDuetContext) contextStoreKeyPathForCurrentState]
	-[WFBluetoothTrigger(CoreDuetContext) contextStorePredicate]
	-[WFBluetoothTrigger(CoreDuetContext) contextStoreQualityOfService]

WFLowPowerModeTrigger(CoreDuetContext)
	// instance methods
	-[WFLowPowerModeTrigger(CoreDuetContext) contextStoreKeyPathForCurrentState]
	-[WFLowPowerModeTrigger(CoreDuetContext) contextStorePredicate]
	-[WFLowPowerModeTrigger(CoreDuetContext) contextStoreQualityOfService]

WFAirplaneModeTrigger(CoreDuetContext)
	// instance methods
	-[WFAirplaneModeTrigger(CoreDuetContext) contextStoreKeyPathForCurrentState]
	-[WFAirplaneModeTrigger(CoreDuetContext) contextStorePredicate]
	-[WFAirplaneModeTrigger(CoreDuetContext) contextStoreQualityOfService]

WFDNDTrigger(CoreDuetContext)
	// instance methods
	-[WFDNDTrigger(CoreDuetContext) contextStoreKeyPathForCurrentState]
	-[WFDNDTrigger(CoreDuetContext) contextStorePredicate]
	-[WFDNDTrigger(CoreDuetContext) contextStoreQualityOfService]

WFNFCTrigger(CoreDuetContext)
	// instance methods
	-[WFNFCTrigger(CoreDuetContext) contextStoreKeyPathForCurrentState]
	-[WFNFCTrigger(CoreDuetContext) contextStorePredicate]
	-[WFNFCTrigger(CoreDuetContext) contextStoreQualityOfService]

WFPlugInTrigger(CoreDuetContext)
	// instance methods
	-[WFPlugInTrigger(CoreDuetContext) contextStoreKeyPathForCurrentState]
	-[WFPlugInTrigger(CoreDuetContext) contextStorePredicate]
	-[WFPlugInTrigger(CoreDuetContext) contextStoreQualityOfService]

WFAppInBackgroundTrigger(CoreDuetContext)
	// instance methods
	-[WFAppInBackgroundTrigger(CoreDuetContext) contextStoreKeyPathForCurrentState]
	-[WFAppInBackgroundTrigger(CoreDuetContext) contextStorePredicate]
	-[WFAppInBackgroundTrigger(CoreDuetContext) contextStoreQualityOfService]

WFBatteryLevelTrigger(CoreDuetContext)
	// instance methods
	-[WFBatteryLevelTrigger(CoreDuetContext) contextStoreKeyPathForCurrentState]
	-[WFBatteryLevelTrigger(CoreDuetContext) contextStorePredicate]
	-[WFBatteryLevelTrigger(CoreDuetContext) contextStoreQualityOfService]

WFRemoteQuarantinePolicyManager(XPCActivity)
	// instance methods
	-[WFRemoteQuarantinePolicyManager(XPCActivity) scheduleRegularPolicyUpdatesWithDatabaseProvider:]

WFWorkflowReference(CSSearchableItem)
	// instance methods
	-[WFWorkflowReference(CSSearchableItem) spotlightHash]
	-[WFWorkflowReference(CSSearchableItem) searchableItemRepresentationWithIconDrawerContext:]

PBCodable(VCPBCodable)
	// instance methods
	-[PBCodable(VCPBCodable) writeTo:error:]
	-[PBCodable(VCPBCodable) readFrom:error:]

01 00 0700 /System/Library/PrivateFrameworks/BiomeStreams.framework/BiomeStreams: BMAlarmEvent 
01 00 0700 /System/Library/PrivateFrameworks/BiomeStreams.framework/BiomeStreams: BMBiomeScheduler 
01 00 0700 /System/Library/PrivateFrameworks/BiomeStreams.framework/BiomeStreams: BMCarPlayEvent 
01 00 0700 /System/Library/PrivateFrameworks/BiomeStreams.framework/BiomeStreams: BMSoundDetectionEvent 
01 00 0700 /System/Library/PrivateFrameworks/BiomeStreams.framework/BiomeStreams: BMStreams 
01 00 0700 /System/Library/PrivateFrameworks/BiomeStreams.framework/BiomeStreams: BMUserFocusComputedModeEvent 
01 00 2000 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSAction 
01 00 2000 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSMutableSettings 
01 00 2000 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSProcessHandle 
01 00 1100 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKContainer 
01 00 1100 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecord 
01 00 1100 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecordZone 
01 00 1100 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecordZoneID 
01 00 1100 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKSyncEngine 
01 00 1100 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKSyncEngineConfiguration 
01 00 0f00 /System/Library/Frameworks/CoreSpotlight.framework/CoreSpotlight: CSSearchableIndex 
01 00 0f00 /System/Library/Frameworks/CoreSpotlight.framework/CoreSpotlight: CSSearchableItem 
01 00 0800 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: FBSDisplayLayoutMonitor 
01 00 0800 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: FBSDisplayLayoutMonitorConfiguration 
01 00 0800 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: FBSOpenApplicationOptions 
01 00 0800 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: FBSOpenApplicationService 
01 00 0200 /System/Library/Frameworks/FileProvider.framework/FileProvider: FPItemManager 
01 00 0200 /System/Library/Frameworks/FileProvider.framework/FileProvider: FPSandboxingURLWrapper 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: ICManager 
01 00 0a00 /System/Library/PrivateFrameworks/IntentsFoundation.framework/IntentsFoundation: IFObjectHasher 
01 00 1300 /System/Library/Frameworks/Intents.framework/Intents: INAppDescriptor 
01 00 1300 /System/Library/Frameworks/Intents.framework/Intents: INAppInfo 
01 00 1300 /System/Library/Frameworks/Intents.framework/Intents: INAppIntentDeliverer 
01 00 1300 /System/Library/Frameworks/Intents.framework/Intents: INFile 
01 00 1300 /System/Library/Frameworks/Intents.framework/Intents: INGetOnScreenContentForwardingAction 
01 00 1300 /System/Library/Frameworks/Intents.framework/Intents: INGetOnScreenContentForwardingActionResponse 
01 00 1300 /System/Library/Frameworks/Intents.framework/Intents: INRunWorkflowIntent 
01 00 1300 /System/Library/Frameworks/Intents.framework/Intents: INSchema 
01 00 1300 /System/Library/Frameworks/Intents.framework/Intents: INShortcut 
01 00 1300 /System/Library/Frameworks/Intents.framework/Intents: INSpeakableString 
01 00 1300 /System/Library/Frameworks/Intents.framework/Intents: INVocabulary 
01 00 0100 /System/Library/PrivateFrameworks/LinkServices.framework/LinkServices: LNAutoShortcutsProvider 
01 00 0100 /System/Library/PrivateFrameworks/LinkServices.framework/LinkServices: LNMetadataProvider 
01 00 0e00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationIdentity 
01 00 0e00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationRecord 
01 00 0e00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationWorkspace 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: MTLModel 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: MTLValueTransformer 
01 00 1440 /System/Library/PrivateFrameworks/NanoRegistry.framework/NanoRegistry: NRPairedDeviceRegistry 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCompoundPredicate 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateInterval 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDistributedNotificationCenter 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSEnumerator 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileCoordinator 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSInputStream 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1d00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOrderedSet 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOutputStream 
01 00 1600 /System/Library/Frameworks/CoreData.framework/CoreData: NSPersistentStoreDescription 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSSecurityScopedURLWrapper 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListener 
01 00 1e00 /usr/lib/libSystem.B.dylib: OS_dispatch_queue 
01 00 1000 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBCodable 
01 00 1000 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBDataReader 
01 00 1000 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBDataWriter 
01 00 1840 /System/Library/PrivateFrameworks/PairedSync.framework/PairedSync: PSYSyncCoordinator 
01 00 0d00 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSAssertion 
01 00 0d00 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSDomainAttribute 
01 00 0d00 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSProcessIdentity 
01 00 0d00 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSProcessMonitor 
01 00 0d00 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSProcessPredicate 
01 00 0d00 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSProcessState 
01 00 0d00 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSProcessStateDescriptor 
01 00 0d00 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSTarget 
01 00 0d00 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSTerminateContext 
01 00 0d00 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSTerminateRequest 
01 00 1200 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSRemoteAlertActivationContext 
01 00 1200 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSRemoteAlertConfigurationContext 
01 00 1200 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSRemoteAlertDefinition 
01 00 1200 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSRemoteAlertHandle 
01 00 1200 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSRemoteAlertPresentationTarget 
01 00 0940 /System/Library/PrivateFrameworks/CompanionSync.framework/CompanionSync: SYDegenerateChange 
01 00 0940 /System/Library/PrivateFrameworks/CompanionSync.framework/CompanionSync: SYService 
01 00 0600 /System/Library/PrivateFrameworks/UserActivity.framework/UserActivity: UAUserActivity 
01 00 0b00 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNMutableNotificationCategory 
01 00 0b00 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNMutableNotificationContent 
01 00 0b00 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNNotificationAction 
01 00 0b00 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNNotificationActionIcon 
01 00 0b00 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNNotificationCategory 
01 00 0b00 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNNotificationIcon 
01 00 0b00 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNNotificationRequest 
01 00 0b00 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNNotificationSound 
01 00 0b00 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNUserNotificationCenter 
01 00 1900 /System/Library/PrivateFrameworks/VoiceShortcutClient.framework/VoiceShortcutClient: VCAccessSpecifier 
01 00 1900 /System/Library/PrivateFrameworks/VoiceShortcutClient.framework/VoiceShortcutClient: VCActionDonationFetcher 
01 00 1900 /System/Library/PrivateFrameworks/VoiceShortcutClient.framework/VoiceShortcutClient: VCConfiguredSleepWorkflow 
01 00 1900 /System/Library/PrivateFrameworks/VoiceShortcutClient.framework/VoiceShortcutClient: VCSleepDonationAction 
01 00 1900 /System/Library/PrivateFrameworks/VoiceShortcutClient.framework/VoiceShortcutClient: VCVoiceShortcut 
01 00 1900 /System/Library/PrivateFrameworks/VoiceShortcutClient.framework/VoiceShortcutClient: VCVoiceShortcutClient 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: VCVoiceShortcutPeaceMigrator 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFAXSDSettings 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFActionDonationRecommender 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFActionRegistry 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFActionRequest 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFAddShortcutEvent 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFAirplaneModeTrigger 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFAlarmTrigger 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFAppInBackgroundTrigger 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFAppInFocusTrigger 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFArriveLocationTrigger 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFAskParameterDialogRequest 
01 00 1900 /System/Library/PrivateFrameworks/VoiceShortcutClient.framework/VoiceShortcutClient: WFAutoShortcutContextualAction 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFAutoShortcutsPreferences 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFBatteryLevelTrigger 
01 00 1900 /System/Library/PrivateFrameworks/VoiceShortcutClient.framework/VoiceShortcutClient: WFBitmapContext 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFBluetoothTrigger 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFBuiltInCloudKitCollectionOrdering 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFCarPlayConnectionTrigger 
01 00 1900 /System/Library/PrivateFrameworks/VoiceShortcutClient.framework/VoiceShortcutClient: WFChooseFromListDialogRequest 
01 00 1900 /System/Library/PrivateFrameworks/VoiceShortcutClient.framework/VoiceShortcutClient: WFChooseFromListDialogResponse 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFCloudKitAutoShortcutsPreferences 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFCloudKitCollectionOrdering 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFCloudKitFolder 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFCloudKitItemRequest 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFCloudKitLegacyWorkflowOrdering 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFCloudKitSyncFlags 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFCloudKitSyncSession 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFCloudKitSyncToken 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFCloudKitWorkflow 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFComplicationMetricsStorage 
01 00 1900 /System/Library/PrivateFrameworks/VoiceShortcutClient.framework/VoiceShortcutClient: WFConfirmInteractionDialogRequest 
01 00 1900 /System/Library/PrivateFrameworks/VoiceShortcutClient.framework/VoiceShortcutClient: WFConfirmInteractionDialogResponse 
01 00 1b00 /System/Library/PrivateFrameworks/ContentKit.framework/ContentKit: WFContentCollection 
01 00 1b00 /System/Library/PrivateFrameworks/ContentKit.framework/ContentKit: WFContentItemRegistry 
01 00 1900 /System/Library/PrivateFrameworks/VoiceShortcutClient.framework/VoiceShortcutClient: WFContextualAction 
01 00 1900 /System/Library/PrivateFrameworks/VoiceShortcutClient.framework/VoiceShortcutClient: WFContextualActionRunDescriptor 
01 00 1900 /System/Library/PrivateFrameworks/VoiceShortcutClient.framework/VoiceShortcutClient: WFContextualActionRunRequest 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFDNDTrigger 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFDatabase 
01 00 1900 /System/Library/PrivateFrameworks/VoiceShortcutClient.framework/VoiceShortcutClient: WFDatabaseObjectDescriptor 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFDebouncer 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFDefaultShortcut 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFDefaultShortcutPersonalization 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFDefaultShortcutPersonalizationContext 
01 00 1900 /System/Library/PrivateFrameworks/VoiceShortcutClient.framework/VoiceShortcutClient: WFDevice 
01 00 1900 /System/Library/PrivateFrameworks/VoiceShortcutClient.framework/VoiceShortcutClient: WFDialogAttribution 
01 00 1900 /System/Library/PrivateFrameworks/VoiceShortcutClient.framework/VoiceShortcutClient: WFDialogRequest 
01 00 1900 /System/Library/PrivateFrameworks/VoiceShortcutClient.framework/VoiceShortcutClient: WFDialogResponse 
01 00 1b00 /System/Library/PrivateFrameworks/ContentKit.framework/ContentKit: WFEmail 
01 00 1b00 /System/Library/PrivateFrameworks/ContentKit.framework/ContentKit: WFEmailContentItem 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFEmailTrigger 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFFileAccessDialogRequest 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFFileAccessDialogResponse 
01 00 1b00 /System/Library/PrivateFrameworks/ContentKit.framework/ContentKit: WFFileRepresentation 
01 00 1900 /System/Library/PrivateFrameworks/VoiceShortcutClient.framework/VoiceShortcutClient: WFFileType 
01 00 1900 /System/Library/PrivateFrameworks/VoiceShortcutClient.framework/VoiceShortcutClient: WFFolderQuery 
01 00 1900 /System/Library/PrivateFrameworks/VoiceShortcutClient.framework/VoiceShortcutClient: WFHandleInteractionDialogRequest 
01 00 1900 /System/Library/PrivateFrameworks/VoiceShortcutClient.framework/VoiceShortcutClient: WFHandleInteractionDialogResponse 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFHealthFeatureAvailability 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFHomeManager 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFHomeScreenController 
01 00 1900 /System/Library/PrivateFrameworks/VoiceShortcutClient.framework/VoiceShortcutClient: WFInputDateDialogRequest 
01 00 1900 /System/Library/PrivateFrameworks/VoiceShortcutClient.framework/VoiceShortcutClient: WFInputDateDialogResponse 
01 00 1900 /System/Library/PrivateFrameworks/VoiceShortcutClient.framework/VoiceShortcutClient: WFInputTextDialogRequest 
01 00 1900 /System/Library/PrivateFrameworks/VoiceShortcutClient.framework/VoiceShortcutClient: WFInputTextDialogResponse 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFLeaveLocationTrigger 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFLinkAction 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFLinkActionProvider 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFLinkConfirmationDialogRequest 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFLinkConfirmationDialogResponse 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFLinkResultDialogRequest 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFLinkSnippetDialogResponse 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFLinkSnippetEnvironmentDialogRequest 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFLinkSnippetEnvironmentDialogResponse 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFLocationTrigger 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFLowPowerModeTrigger 
01 00 1b00 /System/Library/PrivateFrameworks/ContentKit.framework/ContentKit: WFMessage 
01 00 1b00 /System/Library/PrivateFrameworks/ContentKit.framework/ContentKit: WFMessageContentItem 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFMessageTrigger 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFMetricStatusEvent 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFNFCTrigger 
01 00 1900 /System/Library/PrivateFrameworks/VoiceShortcutClient.framework/VoiceShortcutClient: WFOnScreenContent 
01 00 1900 /System/Library/PrivateFrameworks/VoiceShortcutClient.framework/VoiceShortcutClient: WFOnScreenContentNode 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFOutOfProcessWorkflowController 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFPlugInTrigger 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFPredictedLocationTransitionTrigger 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFPropertyListJSONAdapter 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFRemoteExecutionCoordinator 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFRemoteQuarantinePolicyManager 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFRunActionEvent 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFRunShortcutEvent 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFScreenOnObserver 
01 00 1900 /System/Library/PrivateFrameworks/VoiceShortcutClient.framework/VoiceShortcutClient: WFShareSheetWorkflow 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFSharingSettings 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFShowActionInterfaceDialogRequest 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFShowActionInterfaceDialogResponse 
01 00 1900 /System/Library/PrivateFrameworks/VoiceShortcutClient.framework/VoiceShortcutClient: WFShowAlertDialogRequest 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFShowContentDialogRequest 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFShowDialogEvent 
01 00 1900 /System/Library/PrivateFrameworks/VoiceShortcutClient.framework/VoiceShortcutClient: WFShowSecureConfirmationDialogRequest 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFSingleStepHomeScreenShortcutCompletionDialogRequest 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFSleepTrigger 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFSmartPromptDialogRequest 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFSmartPromptDialogResponse 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFSoundRecognitionTrigger 
01 00 1900 /System/Library/PrivateFrameworks/VoiceShortcutClient.framework/VoiceShortcutClient: WFStingWorkflow 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFSuspendShortcutEvent 
01 00 1900 /System/Library/PrivateFrameworks/VoiceShortcutClient.framework/VoiceShortcutClient: WFSystemSurfaceWorkflowStatusRegistry 
01 00 1b00 /System/Library/PrivateFrameworks/ContentKit.framework/ContentKit: WFTemporaryFileManager 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFTimeOfDayTrigger 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFTimeTriggerLogic 
01 00 1900 /System/Library/PrivateFrameworks/VoiceShortcutClient.framework/VoiceShortcutClient: WFToggleFocusModeContextualAction 
01 00 1900 /System/Library/PrivateFrameworks/VoiceShortcutClient.framework/VoiceShortcutClient: WFToggleFocusModeContextualActionFocusMode 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFTrigger 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFTriggerManager 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFTriggeredAutomationEvent 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFUIPresenter 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFUIPresenterLaunchAngelConnection 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFUIPresenterLocalConnection 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFUserFocusActivityTrigger 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFWifiTrigger 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFWorkflow 
01 00 1900 /System/Library/PrivateFrameworks/VoiceShortcutClient.framework/VoiceShortcutClient: WFWorkflowCollection 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFWorkflowCreationOptions 
01 00 1900 /System/Library/PrivateFrameworks/VoiceShortcutClient.framework/VoiceShortcutClient: WFWorkflowDatabaseRunDescriptor 
01 00 1900 /System/Library/PrivateFrameworks/VoiceShortcutClient.framework/VoiceShortcutClient: WFWorkflowDescriptor 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFWorkflowFile 
01 00 1900 /System/Library/PrivateFrameworks/VoiceShortcutClient.framework/VoiceShortcutClient: WFWorkflowIcon 
01 00 1900 /System/Library/PrivateFrameworks/VoiceShortcutClient.framework/VoiceShortcutClient: WFWorkflowIconDrawer 
01 00 1900 /System/Library/PrivateFrameworks/VoiceShortcutClient.framework/VoiceShortcutClient: WFWorkflowIconDrawerContext 
01 00 1900 /System/Library/PrivateFrameworks/VoiceShortcutClient.framework/VoiceShortcutClient: WFWorkflowQuery 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFWorkflowReference 
01 00 1900 /System/Library/PrivateFrameworks/VoiceShortcutClient.framework/VoiceShortcutClient: WFWorkflowRunRequest 
01 00 1900 /System/Library/PrivateFrameworks/VoiceShortcutClient.framework/VoiceShortcutClient: WFWorkflowRunResult 
01 00 1900 /System/Library/PrivateFrameworks/VoiceShortcutClient.framework/VoiceShortcutClient: WFWorkflowRunningContext 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: WFWorkoutTrigger 
01 00 0c00 /System/Library/PrivateFrameworks/CoreDuetContext.framework/CoreDuetContext: _CDClientContext 
01 00 0c00 /System/Library/PrivateFrameworks/CoreDuetContext.framework/CoreDuetContext: _CDContextQueries 
01 00 0c00 /System/Library/PrivateFrameworks/CoreDuetContext.framework/CoreDuetContext: _CDContextValue 
01 00 0c00 /System/Library/PrivateFrameworks/CoreDuetContext.framework/CoreDuetContext: _CDContextualChangeRegistration 
01 00 0c00 /System/Library/PrivateFrameworks/CoreDuetContext.framework/CoreDuetContext: _CDContextualKeyPath 
01 00 0c00 /System/Library/PrivateFrameworks/CoreDuetContext.framework/CoreDuetContext: _CDContextualPredicate 
01 00 0c00 /System/Library/PrivateFrameworks/CoreDuetContext.framework/CoreDuetContext: _CDMDCSContextualPredicate 
01 00 1500 /System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet: _DKBundleIdentifier 
01 00 1500 /System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet: _DKEventQuery 
01 00 1500 /System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet: _DKKnowledgeStore 
01 00 1500 /System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet: _DKQuery 
01 00 1500 /System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet: _DKSystemEventStreams 
01 00 1700 /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit: _ICURLRequest 
01 00 1300 /System/Library/Frameworks/Intents.framework/Intents: _INVocabulary 
01 00 2400 /usr/lib/swift/libswiftCore.dylib: _TtCs12_SwiftObject 
