|| __DATA.__objc_data _OBJC_CLASS_$_PowerUIAccessoryStatus
|| __DATA.__objc_data _OBJC_CLASS_$_PowerUIBluetoothHandlerFake
|| __DATA.__objc_data _OBJC_CLASS_$_PowerUIDesktopModePredictor
|| __DATA.__objc_data _OBJC_CLASS_$_PowerUIModelPredictionContainer
|| __DATA.__objc_data _OBJC_CLASS_$_PowerUIPredictorHelper
|| __DATA.__objc_data _OBJC_CLASS_$_PowerUISmartChargeClientAudioAccessories
|| __DATA.__objc_data _OBJC_CLASS_$_PowerUISmartChargeManagerUnsupported
|| __DATA.__objc_data _OBJC_CLASS_$_PowerUITrialManager
|| __DATA.__objc_data _OBJC_CLASS_$_PowerUIWakeRequestSignalMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_PowerUIAccessoryStatus
|| __DATA.__objc_data _OBJC_METACLASS_$_PowerUIBluetoothHandlerFake
|| __DATA.__objc_data _OBJC_METACLASS_$_PowerUIDesktopModePredictor
|| __DATA.__objc_data _OBJC_METACLASS_$_PowerUIModelPredictionContainer
|| __DATA.__objc_data _OBJC_METACLASS_$_PowerUIPredictorHelper
|| __DATA.__objc_data _OBJC_METACLASS_$_PowerUISmartChargeClientAudioAccessories
|| __DATA.__objc_data _OBJC_METACLASS_$_PowerUISmartChargeManagerUnsupported
|| __DATA.__objc_data _OBJC_METACLASS_$_PowerUITrialManager
|| __DATA.__objc_data _OBJC_METACLASS_$_PowerUIWakeRequestSignalMonitor
|| __DATA_CONST.__const _PowerUIAudioAccessorySmartChargeDeadlineHasChangedNote
|| __DATA_CONST.__const _PowerUIAudioAccessorySmartChargeStatusHasChangedNote
|| __DATA_CONST.__const _PowerUIErrorDomain
|| __DATA_CONST.__const _PowerUISmartChargeClientCallisto
|| __DATA_CONST.__const _PowerUISmartChargeClientPTOTool
|| __DATA_CONST.__const _PowerUISmartChargeClientSettings
|| __DATA_CONST.__const _PowerUISmartChargeStatusHasChangedNote
|| __DATA_CONST.__const _kAnalyticsEligibleForIdleBatteryLevelKey
|| __DATA_CONST.__const _kAnalyticsEstimatedUsableEligibleDuration
|| __DATA_CONST.__const _kAnalyticsFullChargeDurationKey
|| __DATA_CONST.__const _kAnalyticsIdleBatteryLevelKey
|| __DATA_CONST.__const _kAnalyticsIdleDurationKey
|| __DATA_CONST.__const _kAnalyticsPluginDurationKey
|| __DATA_CONST.__const _kAnalyticsTotalEligibleDuration
|| __DATA_CONST.__const _kAnalyticsUnderChargeAvoidable
|| __DATA_CONST.__const _kAnalyticsUnderChargeTLC
|| __DATA_CONST.__const _kAnalyticsUnderChargeUnavoidable
|| __DATA_CONST.__const _kDefaultsDomainAudioAccessories
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PowerUIAlarmSignalMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PowerUIAudioAccessorySmartChargeManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PowerUIBatteryMitigationManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PowerUIBluetoothHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PowerUICalendarSignalMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PowerUIDefines
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PowerUILPMNotifier
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PowerUILocationSignalMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PowerUIMLAudioAccessoryModelPredictor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PowerUIMLTwoStageModelPredictor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PowerUISleepWakeMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PowerUISmartChargeClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PowerUISmartChargeManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PowerUISmartChargeUtilities
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PowerUIUPOManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PowerUIWalletSignalMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PowerUIAlarmSignalMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PowerUIAudioAccessorySmartChargeManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PowerUIBatteryMitigationManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PowerUIBluetoothHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PowerUICalendarSignalMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PowerUIDefines
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PowerUILPMNotifier
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PowerUILocationSignalMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PowerUIMLAudioAccessoryModelPredictor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PowerUIMLTwoStageModelPredictor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PowerUISleepWakeMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PowerUISmartChargeClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PowerUISmartChargeManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PowerUISmartChargeUtilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PowerUIUPOManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PowerUIWalletSignalMonitor
|| __TEXT.__const _PowerUIVersionNumber
|| __TEXT.__const _PowerUIVersionString
|| __TEXT.__text _btConnectionUpdateCallback
|| __TEXT.__text _decodeAccessoryMessage
|| __TEXT.__text _incomingCustomMessageCallback
|| __TEXT.__text _prepare9ByteMessage
|| __TEXT.__text _sessionEventCallback
__ AggregateDictionary: _ADClientAddValueForScalarKey
__ AggregateDictionary: _ADClientSetValueForScalarKey
__ CoreAnalytics: _AnalyticsSendEvent
__ CoreAnalytics: _AnalyticsSendEventLazy
__ CoreDuet: _OBJC_CLASS_$__CDBatterySaver
__ CoreDuet: _OBJC_CLASS_$__DKEvent
__ CoreDuet: _OBJC_CLASS_$__DKEventQuery
__ CoreDuet: _OBJC_CLASS_$__DKEventStream
__ CoreDuet: _OBJC_CLASS_$__DKIntentMetadataKey
__ CoreDuet: _OBJC_CLASS_$__DKKnowledgeStorage
__ CoreDuet: _OBJC_CLASS_$__DKKnowledgeStore
__ CoreDuet: _OBJC_CLASS_$__DKQuery
__ CoreDuet: _OBJC_CLASS_$__DKSystemEventStreams
__ CoreDuet: __DKEventQueryAllDevices
__ CoreDuet: _kLPMSourceReenableBulletin
__ CoreDuetContext: _OBJC_CLASS_$__CDClientContext
__ CoreDuetContext: _OBJC_CLASS_$__CDContextQueries
__ CoreDuetContext: _OBJC_CLASS_$__CDContextualChangeRegistration
__ CoreDuetContext: _OBJC_CLASS_$__CDContextualKeyPath
__ CoreDuetContext: _OBJC_CLASS_$__CDContextualPredicate
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesSetAppValue
__ CoreFoundation: _CFPreferencesSetMultiple
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFUserNotificationCancel
__ CoreFoundation: _CFUserNotificationCreate
__ CoreFoundation: _CFUserNotificationDisplayAlert
__ CoreFoundation: _CFUserNotificationReceiveResponse
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanFalse
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFPreferencesAnyHost
__ CoreFoundation: _kCFPreferencesCurrentHost
__ CoreFoundation: _kCFPreferencesCurrentUser
__ CoreFoundation: _kCFUserNotificationAlertHeaderKey
__ CoreFoundation: _kCFUserNotificationAlertMessageKey
__ CoreFoundation: _kCFUserNotificationAlertTopMostKey
__ CoreLocation: _OBJC_CLASS_$_CLLocationManager
__ CoreML: _MLModelCreatorDefinedKey
__ CoreML: _OBJC_CLASS_$_MLArrayBatchProvider
__ CoreML: _OBJC_CLASS_$_MLCompiler
__ CoreML: _OBJC_CLASS_$_MLCompilerOptions
__ CoreML: _OBJC_CLASS_$_MLDictionaryFeatureProvider
__ CoreML: _OBJC_CLASS_$_MLFeatureValue
__ CoreML: _OBJC_CLASS_$_MLModel
__ CoreML: _OBJC_CLASS_$_MLModelConfiguration
__ CoreML: _OBJC_CLASS_$_MLMultiArray
__ CoreML: _OBJC_CLASS_$_MLPredictionOptions
__ CoreRoutine: _OBJC_CLASS_$_RTRoutineManager
__ CoreSuggestions: _OBJC_CLASS_$_SGEventMetadata
__ EventKit: _EKEventStoreChangedNotification
__ EventKit: _OBJC_CLASS_$_EKEvent
__ EventKit: _OBJC_CLASS_$_EKEventStore
__ Foundation: _NSStringFromSelector
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSCompoundPredicate
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSDateInterval
__ Foundation: _OBJC_CLASS_$_NSDistributedNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSLock
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_CLASS_$_NSXPCListener
__ IOKit: _IOObjectRelease
__ IOKit: _IORegistryEntryCreateCFProperties
__ IOKit: _IORegistryEntrySetCFProperties
__ IOKit: _IOServiceGetMatchingService
__ IOKit: _IOServiceMatching
__ IOKit: _kIOMasterPortDefault
__ MobileBluetooth: _BTAccessoryManagerGetDefault
__ MobileBluetooth: _BTAccessoryManagerRegisterCustomMessageClient
__ MobileBluetooth: _BTAccessoryManagerSendCustomMessage
__ MobileBluetooth: _BTDeviceAddressFromString
__ MobileBluetooth: _BTDeviceConnect
__ MobileBluetooth: _BTDeviceFromAddress
__ MobileBluetooth: _BTDeviceGetAddressString
__ MobileBluetooth: _BTDeviceGetConnectedServices
__ MobileBluetooth: _BTDeviceGetDeviceId
__ MobileBluetooth: _BTDeviceGetName
__ MobileBluetooth: _BTDeviceIsAppleAudioDevice
__ MobileBluetooth: _BTServiceAddCallbacksWithFilter
__ MobileBluetooth: _BTSessionAttachWithQueue
__ MobileTimer: _MTAlarmManagerNextAlarmChanged
__ MobileTimer: _OBJC_CLASS_$_MTAlarm
__ MobileTimer: _OBJC_CLASS_$_MTAlarmManager
__ PassKitCore: _OBJC_CLASS_$_PKPassLibrary
__ PassKitCore: _PKPassLibraryDidChangeNotification
__ PowerLog: _PLLogRegisteredEvent
__ SpringBoardServices: _SBGetIsAlive
__ SpringBoardServices: _SBSSpringBoardBlockableServerPort
__ Trial: _OBJC_CLASS_$_TRIClient
__ TrialProto: _OBJC_CLASS_$_TRINamespace
__ UserNotifications: _OBJC_CLASS_$_UNMutableNotificationContent
__ UserNotifications: _OBJC_CLASS_$_UNNotificationIcon
__ UserNotifications: _OBJC_CLASS_$_UNNotificationRequest
__ UserNotifications: _OBJC_CLASS_$_UNUserNotificationCenter
__ libMobileGestalt.dylib: _MGGetStringAnswer
__ libSystem.B.dylib: _XPC_ACTIVITY_CHECK_IN
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __xpc_event_key_name
__ libSystem.B.dylib: _arc4random_uniform
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _dispatch_activate
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dispatch_walltime
__ libSystem.B.dylib: _exit
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _notify_is_valid_token
__ libSystem.B.dylib: _notify_post
__ libSystem.B.dylib: _notify_register_check
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _notify_set_state
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_transaction_create
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _os_variant_has_internal_ui
__ libSystem.B.dylib: _sysctlbyname
__ libSystem.B.dylib: _time
__ libSystem.B.dylib: _xpc_activity_get_state
__ libSystem.B.dylib: _xpc_activity_register
__ libSystem.B.dylib: _xpc_activity_set_state
__ libSystem.B.dylib: _xpc_activity_should_defer
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_get_string
__ libSystem.B.dylib: _xpc_dictionary_set_date
__ libSystem.B.dylib: _xpc_dictionary_set_string
__ libSystem.B.dylib: _xpc_set_event
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
PowerUITrialManager : NSObject /usr/lib/libSystem.B.dylib
 @property  {os_unfair_lock_s=I} lock
 @property  TRITrackingId *trialTrackingID
 @property  NSObject<OS_os_log> *log
 @property  TRIClient *trialClient
 @property  NSString *treatmentID
 @property  NSString *experimentID
 @property  NSString *trialNamespaceName

  // instance methods
  -[PowerUITrialManager setLock:]
  -[PowerUITrialManager setTrialClient:]
  -[PowerUITrialManager setLog:]
  -[PowerUITrialManager treatmentID]
  -[PowerUITrialManager log]
  -[PowerUITrialManager trialClient]
  -[PowerUITrialManager setExperimentID:]
  -[PowerUITrialManager .cxx_destruct]
  -[PowerUITrialManager setTrialTrackingID:]
  -[PowerUITrialManager trialTrackingID]
  -[PowerUITrialManager lock]
  -[PowerUITrialManager initWithDefaultsDomain:]
  -[PowerUITrialManager experimentID]
  -[PowerUITrialManager trialFactor:]
  -[PowerUITrialManager loadModelFromPath:deleteExistingFiles:]
  -[PowerUITrialManager loadTrialUpdates]
  -[PowerUITrialManager loadTrialEngageModelByDeletingExistingModel:]
  -[PowerUITrialManager loadTrialDurationModelByDeletingExistingModel:]
  -[PowerUITrialManager loadTrialThreshold]
  -[PowerUITrialManager loadTrialAdjustedHours]
  -[PowerUITrialManager loadTrialMinInputChargeDuration]
  -[PowerUITrialManager setTreatmentID:]
  -[PowerUITrialManager trialNamespaceName]
  -[PowerUITrialManager setTrialNamespaceName:]


PowerUIModelPredictionContainer : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *modelVersion
 @property  unsigned long state
 @property  double engagementConfidence
 @property  double smartChargeDuration

  // instance methods
  -[PowerUIModelPredictionContainer modelVersion]
  -[PowerUIModelPredictionContainer .cxx_destruct]
  -[PowerUIModelPredictionContainer state]
  -[PowerUIModelPredictionContainer initWithEngagementConfidence:withSmartChargeDuration:withModelVersion:]
  -[PowerUIModelPredictionContainer initInvalidEntry:withEngagementConfidence:withSmartChargeDuration:withModelVersion:]
  -[PowerUIModelPredictionContainer engagementConfidence]
  -[PowerUIModelPredictionContainer smartChargeDuration]


PowerUIMLAudioAccessoryModelPredictor : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_os_log> *log
 @property  NSObject<OS_os_log> *statusLog
 @property  {os_unfair_lock_s=I} lock
 @property  <_DKKnowledgeQuerying> *store
 @property  int minimumDaysOfHistory
 @property  int minimumNumberOfPreviousConnections
 @property  MLModel *highUsageEngageModel
 @property  MLModel *highUsageRegressionModel
 @property  MLModel *lowUsageEngageModel
 @property  MLModel *lowUsageRegressionModel

  // instance methods
  -[PowerUIMLAudioAccessoryModelPredictor setStatusLog:]
  -[PowerUIMLAudioAccessoryModelPredictor statusLog]
  -[PowerUIMLAudioAccessoryModelPredictor setLock:]
  -[PowerUIMLAudioAccessoryModelPredictor setStore:]
  -[PowerUIMLAudioAccessoryModelPredictor setLog:]
  -[PowerUIMLAudioAccessoryModelPredictor init]
  -[PowerUIMLAudioAccessoryModelPredictor store]
  -[PowerUIMLAudioAccessoryModelPredictor log]
  -[PowerUIMLAudioAccessoryModelPredictor .cxx_destruct]
  -[PowerUIMLAudioAccessoryModelPredictor checkForSufficientBTConnectionEventsUpTo:forDevice:]
  -[PowerUIMLAudioAccessoryModelPredictor getBTConnectionEventsInDescendingOrderForPredictionUpTo:forDevice:]
  -[PowerUIMLAudioAccessoryModelPredictor setMinimumDaysOfHistory:]
  -[PowerUIMLAudioAccessoryModelPredictor lock]
  -[PowerUIMLAudioAccessoryModelPredictor deviceHasAtLeastOneLongConnection:forReferenceDate:]
  -[PowerUIMLAudioAccessoryModelPredictor highUsageRegressionModel]
  -[PowerUIMLAudioAccessoryModelPredictor lowUsageRegressionModel]
  -[PowerUIMLAudioAccessoryModelPredictor historicalMeaningfulUnderchargeRate:]
  -[PowerUIMLAudioAccessoryModelPredictor lowUsageEngageModel]
  -[PowerUIMLAudioAccessoryModelPredictor minimumDaysOfHistory]
  -[PowerUIMLAudioAccessoryModelPredictor minimumNumberOfPreviousConnections]
  -[PowerUIMLAudioAccessoryModelPredictor setMinimumNumberOfPreviousConnections:]
  -[PowerUIMLAudioAccessoryModelPredictor highUsageEngageModel]
  -[PowerUIMLAudioAccessoryModelPredictor chargingDecisionForDate:forAudioAccessory:]
  -[PowerUIMLAudioAccessoryModelPredictor getInputFeaturesForDate:withEvents:withLog:]
  -[PowerUIMLAudioAccessoryModelPredictor getUsageBucketsForEvents:withLog:]
  -[PowerUIMLAudioAccessoryModelPredictor isSufficientDataAvailableForEngagementForDevice:]
  -[PowerUIMLAudioAccessoryModelPredictor getBTConnectionEventsUpTo:withMinimumDuration:withLimit:ascending:forDevice:]


PowerUILPMNotifier : NSObject /usr/lib/libSystem.B.dylib <UNUserNotificationCenterDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PowerUILPMNotifier sharedInstance]

  // instance methods
  -[PowerUILPMNotifier init]
  -[PowerUILPMNotifier .cxx_destruct]
  -[PowerUILPMNotifier displayAutoDisabledNotification]
  -[PowerUILPMNotifier displayFirstUseNotification]
  -[PowerUILPMNotifier userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:]
  -[PowerUILPMNotifier removeAutoDisabledNotification]
  -[PowerUILPMNotifier autoDisabledNotificationRequest]


PowerUIMLTwoStageModelPredictor : NSObject /usr/lib/libSystem.B.dylib <PowerUIPredictor>
 @property  NSString *defaultsDomain
 @property  NSObject<OS_os_log> *log
 @property  NSObject<OS_os_log> *statusLog
 @property  double threshold
 @property  double minInputChargeDuration
 @property  <_DKKnowledgeQuerying> *store
 @property  <_CDLocalContext> *context
 @property  PowerUITrialManager *trialManager
 @property  NSDate *deadline
 @property  double lastEngagementResult
 @property  double lastDurationResult
 @property  {os_unfair_lock_s=I} loadModelLock
 @property  MLModel *engageModel
 @property  MLModel *durationModel
 @property  NSDate *pluginDate
 @property  double pluginBatteryLevel
 @property  double adjustedDuration

  // instance methods
  -[PowerUIMLTwoStageModelPredictor defaultsDomain]
  -[PowerUIMLTwoStageModelPredictor setStatusLog:]
  -[PowerUIMLTwoStageModelPredictor context]
  -[PowerUIMLTwoStageModelPredictor threshold]
  -[PowerUIMLTwoStageModelPredictor statusLog]
  -[PowerUIMLTwoStageModelPredictor initWithDefaultsDomain:withContextStore:withKnowledgeStore:withTrialManager:]
  -[PowerUIMLTwoStageModelPredictor setStore:]
  -[PowerUIMLTwoStageModelPredictor setLog:]
  -[PowerUIMLTwoStageModelPredictor modelVersion]
  -[PowerUIMLTwoStageModelPredictor resetSavedDeadline]
  -[PowerUIMLTwoStageModelPredictor engageModel]
  -[PowerUIMLTwoStageModelPredictor setPluginDate:]
  -[PowerUIMLTwoStageModelPredictor store]
  -[PowerUIMLTwoStageModelPredictor log]
  -[PowerUIMLTwoStageModelPredictor setLoadModelLock:]
  -[PowerUIMLTwoStageModelPredictor engagementModelVersion]
  -[PowerUIMLTwoStageModelPredictor setMinInputChargeDuration:]
  -[PowerUIMLTwoStageModelPredictor .cxx_destruct]
  -[PowerUIMLTwoStageModelPredictor adjustedDuration]
  -[PowerUIMLTwoStageModelPredictor pluginDate]
  -[PowerUIMLTwoStageModelPredictor predictFullChargeDateWithBatteryLevel:]
  -[PowerUIMLTwoStageModelPredictor lastDurationResult]
  -[PowerUIMLTwoStageModelPredictor loadModelLock]
  -[PowerUIMLTwoStageModelPredictor getPluginEventsBefore:withMinimumDuration:]
  -[PowerUIMLTwoStageModelPredictor loadMinInputChargeDuration]
  -[PowerUIMLTwoStageModelPredictor loadAdjustedHours]
  -[PowerUIMLTwoStageModelPredictor setContext:]
  -[PowerUIMLTwoStageModelPredictor loadTrial]
  -[PowerUIMLTwoStageModelPredictor lastEngagementResult]
  -[PowerUIMLTwoStageModelPredictor getInputFeatures:events:pluginBatteryLevel:timeFromPlugin:pluginDate:pluginHour:withLog:]
  -[PowerUIMLTwoStageModelPredictor durationModelBoltID]
  -[PowerUIMLTwoStageModelPredictor setDefaultsDomain:]
  -[PowerUIMLTwoStageModelPredictor getHourBinID:forHourBin:]
  -[PowerUIMLTwoStageModelPredictor setLastEngagementResult:]
  -[PowerUIMLTwoStageModelPredictor minInputChargeDuration]
  -[PowerUIMLTwoStageModelPredictor chargingDecision:withPluginDate:withPluginBatteryLevel:forDate:withLog:]
  -[PowerUIMLTwoStageModelPredictor setThreshold:]
  -[PowerUIMLTwoStageModelPredictor adjustedChargingDecision:withPluginDate:withPluginBatteryLevel:forDate:forStatus:]
  -[PowerUIMLTwoStageModelPredictor setAdjustedDuration:]
  -[PowerUIMLTwoStageModelPredictor loadThreshold]
  -[PowerUIMLTwoStageModelPredictor engagementModelBoltID]
  -[PowerUIMLTwoStageModelPredictor setPluginBatteryLevel:]
  -[PowerUIMLTwoStageModelPredictor durationModelVersion]
  -[PowerUIMLTwoStageModelPredictor deadline]
  -[PowerUIMLTwoStageModelPredictor setLastDurationResult:]
  -[PowerUIMLTwoStageModelPredictor setDeadline:]
  -[PowerUIMLTwoStageModelPredictor arrayWithShape:values:type:]
  -[PowerUIMLTwoStageModelPredictor timeStringFromDate:]
  -[PowerUIMLTwoStageModelPredictor pluginBatteryLevel]
  -[PowerUIMLTwoStageModelPredictor trialManager]
  -[PowerUIMLTwoStageModelPredictor setTrialManager:]
  -[PowerUIMLTwoStageModelPredictor deleteCompiledModels]
  -[PowerUIMLTwoStageModelPredictor durationModel]


PowerUIUPOManager : NSObject /usr/lib/libSystem.B.dylib
 @property  NSBundle *bundle
 @property  UNUserNotificationCenter *userNotificationCenter
 @property  BOOL dataProviderLoaded
 @property  NSUserDefaults *defaults
 @property  <_CDContext> *contextStore
 @property  int unlockToken
 @property  int mitigationsDisabledToken
 @property  NSDate *lastTimeLocked
 @property  NSDate *upoTime
 @property  NSObject<OS_os_log> *log
 @property  NSObject<OS_dispatch_queue> *lockNotificationQueue
 @property  NSObject<OS_dispatch_queue> *notificationResponseQueue

  // class methods
  +[PowerUIUPOManager sharedInstance]

  // instance methods
  -[PowerUIUPOManager bundle]
  -[PowerUIUPOManager dataProviderDidLoad]
  -[PowerUIUPOManager defaults]
  -[PowerUIUPOManager setLog:]
  -[PowerUIUPOManager setLockNotificationQueue:]
  -[PowerUIUPOManager init]
  -[PowerUIUPOManager log]
  -[PowerUIUPOManager setUpoTime:]
  -[PowerUIUPOManager requestBulletin]
  -[PowerUIUPOManager .cxx_destruct]
  -[PowerUIUPOManager setContextStore:]
  -[PowerUIUPOManager setDataProviderLoaded:]
  -[PowerUIUPOManager setMitigationsDisabledToken:]
  -[PowerUIUPOManager mitigationsDisabledToken]
  -[PowerUIUPOManager displayMitigationsEnabledNotification]
  -[PowerUIUPOManager setNotificationResponseQueue:]
  -[PowerUIUPOManager userNotificationCenter]
  -[PowerUIUPOManager setUserNotificationCenter:]
  -[PowerUIUPOManager displayBatteryServiceNotification]
  -[PowerUIUPOManager setDefaults:]
  -[PowerUIUPOManager mitigationsEnabledNotificationRequest]
  -[PowerUIUPOManager displayPostUPONotification]
  -[PowerUIUPOManager unlockToken]
  -[PowerUIUPOManager setBundle:]
  -[PowerUIUPOManager setUnlockToken:]
  -[PowerUIUPOManager lockNotificationQueue]
  -[PowerUIUPOManager dataProviderLoaded]
  -[PowerUIUPOManager sortDescriptors]
  -[PowerUIUPOManager clearMitigationsEnabledNotificationRequestIfNecessary]
  -[PowerUIUPOManager upoTime]
  -[PowerUIUPOManager registerForWithdrawalNotifications]
  -[PowerUIUPOManager contextStore]
  -[PowerUIUPOManager lastTimeLocked]
  -[PowerUIUPOManager notificationResponseQueue]
  -[PowerUIUPOManager removeMitigationsEnabledNotification]
  -[PowerUIUPOManager setLastTimeLocked:]


PowerUISmartChargeUtilities : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[PowerUISmartChargeUtilities isiPad]
  +[PowerUISmartChargeUtilities isiPhone]
  +[PowerUISmartChargeUtilities eventsAdjustedForTimeZoneOffsets:]
  +[PowerUISmartChargeUtilities setString:forPreferenceKey:inDomain:]
  +[PowerUISmartChargeUtilities log]
  +[PowerUISmartChargeUtilities historicalTopOffDurationsWithStore:]
  +[PowerUISmartChargeUtilities deviceWasActiveWithinSeconds:withContext:withStore:]
  +[PowerUISmartChargeUtilities lastPluggedInDateWithContext:withStore:]
  +[PowerUISmartChargeUtilities batteryLevelAtDate:withCurrentBatteryLevel:withKnowledgeStore:withContextStore:]
  +[PowerUISmartChargeUtilities isPluggedInWithContext:]
  +[PowerUISmartChargeUtilities getCurrentBootSessionUUID]
  +[PowerUISmartChargeUtilities decileClassificationWithStore:withTopBinCutOff:withContext:]
  +[PowerUISmartChargeUtilities concatenateContinuousDescendingEventsOfSameState:]
  +[PowerUISmartChargeUtilities roundedDateFromDate:]
  +[PowerUISmartChargeUtilities dateForPreferenceKey:inDomain:]
  +[PowerUISmartChargeUtilities setNumber:forPreferenceKey:inDomain:]
  +[PowerUISmartChargeUtilities isOBCSupported]
  +[PowerUISmartChargeUtilities readDictForPreferenceKey:inDomain:]
  +[PowerUISmartChargeUtilities percentageOfTimeForBatteryLevels:withLog:]
  +[PowerUISmartChargeUtilities isiPod]
  +[PowerUISmartChargeUtilities deviceHasEnoughPluggedInTimeWithMinimumDays:withContext:withKnowledgeStore:]
  +[PowerUISmartChargeUtilities areaOverEightyWithStore:withContext:withBatteryLevelDurations:]
  +[PowerUISmartChargeUtilities historicalChargeDurationsFromLevel:toLevel:filteredByMinimumPluginDuration:withStore:]
  +[PowerUISmartChargeUtilities percentageOfBatteryDurations:aboveBatteryLevel:]
  +[PowerUISmartChargeUtilities deviceConnectedToWirelessChargerWithContext:]
  +[PowerUISmartChargeUtilities readStringForPreferenceKey:inDomain:]
  +[PowerUISmartChargeUtilities predicateForEventsWithinSeconds:aroundTimeOfDay:goingDaysBack:]
  +[PowerUISmartChargeUtilities batteryProperties]
  +[PowerUISmartChargeUtilities deviceWasConnectedToChargerWithinSeconds:withContext:]
  +[PowerUISmartChargeUtilities pluginEventsBefore:withMinimumDuration:withStore:]
  +[PowerUISmartChargeUtilities isInternalBuild]
  +[PowerUISmartChargeUtilities batteryLevelsWithStore:withContext:withBatteryLevelDurations:]
  +[PowerUISmartChargeUtilities historicalEngagementsWithStore:sortedAscending:]
  +[PowerUISmartChargeUtilities setDate:forPreferenceKey:inDomain:]
  +[PowerUISmartChargeUtilities isDesktopDeviceWithDurations:withAOEThreshold:withStore:withContext:]
  +[PowerUISmartChargeUtilities setDict:forPreferenceKey:inDomain:]
  +[PowerUISmartChargeUtilities numberForPreferenceKey:inDomain:]
  +[PowerUISmartChargeUtilities currentBatteryLevelWithContext:]


PowerUIDefines : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[PowerUIDefines obcCheckpointStream]


PowerUISmartChargeClient : NSObject /usr/lib/libSystem.B.dylib <PowerUISmartChargeClientManaging>
 @property  NSString *clientName
 @property  NSXPCConnection *connection
 @property  NSObject<OS_os_log> *log
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PowerUISmartChargeClient remoteInterface]

  // instance methods
  -[PowerUISmartChargeClient powerLogStatus]
  -[PowerUISmartChargeClient setLog:]
  -[PowerUISmartChargeClient resetEngagementOverride]
  -[PowerUISmartChargeClient enableSmartCharging:]
  -[PowerUISmartChargeClient enterDevelopmentMode]
  -[PowerUISmartChargeClient log]
  -[PowerUISmartChargeClient clientName]
  -[PowerUISmartChargeClient setState:error:]
  -[PowerUISmartChargeClient temporarilyEnableChargingWithHandler:]
  -[PowerUISmartChargeClient setChargingStatus:]
  -[PowerUISmartChargeClient engageFrom:until:repeatUntil:overrideAllSignals:]
  -[PowerUISmartChargeClient .cxx_destruct]
  -[PowerUISmartChargeClient fullChargeDeadlineWithHandler:]
  -[PowerUISmartChargeClient isOBCEngagedAsDesktopDevice:chargingOverrideAllowed:withError:]
  -[PowerUISmartChargeClient setConnection:]
  -[PowerUISmartChargeClient isOBCSupported]
  -[PowerUISmartChargeClient isSmartChargingCurrentlyEnabledWithHandler:]
  -[PowerUISmartChargeClient disableSmartChargingWithHandler:]
  -[PowerUISmartChargeClient isOBCSupportedWithHandler:]
  -[PowerUISmartChargeClient enableSmartChargingWithHandler:]
  -[PowerUISmartChargeClient temporarilyDisableSmartChargingWithHandler:]
  -[PowerUISmartChargeClient temporarilyEnableCharging:]
  -[PowerUISmartChargeClient setClientName:]
  -[PowerUISmartChargeClient isOBCEngagedAsDesktopDeviceWithHandler:]
  -[PowerUISmartChargeClient isOBCEngaged:asDesktopDevice:chargingOverrideAllowed:withError:]
  -[PowerUISmartChargeClient isOBCEngaged:]
  -[PowerUISmartChargeClient resetDevelopmentMode]
  -[PowerUISmartChargeClient connection]
  -[PowerUISmartChargeClient disableSmartCharging:]
  -[PowerUISmartChargeClient simulateCurrentOutputAsOfDate:overrideAllSignals:withError:]
  -[PowerUISmartChargeClient isOBCEngagedWithHandler:]
  -[PowerUISmartChargeClient status]
  -[PowerUISmartChargeClient isSmartChargingCurrentlyEnabled:]
  -[PowerUISmartChargeClient temporarilyDisableSmartCharging:]
  -[PowerUISmartChargeClient fullChargeDeadline:]
  -[PowerUISmartChargeClient initWithClientName:]


PowerUIBatteryMitigationManager : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_os_log> *log
 @property  NSString *defaultsDomain
 @property  NSArray *lastDOD0Values
 @property  NSDate *lastDOD0Update
 @property  NSArray *lastQMaxArray
 @property  NSDate *lastQMaxUpdate
 @property  unsigned long decisionSignalID
 @property  unsigned long testDaysSinceQmaxUpdate
 @property  double timeSinceLastDOD0Update
 @property  double timeSinceLastQmaxUpdate

  // instance methods
  -[PowerUIBatteryMitigationManager defaultsDomain]
  -[PowerUIBatteryMitigationManager setLog:]
  -[PowerUIBatteryMitigationManager setLastDOD0Values:]
  -[PowerUIBatteryMitigationManager timeSinceLastQmaxUpdate]
  -[PowerUIBatteryMitigationManager readLastDOD0Values]
  -[PowerUIBatteryMitigationManager updateLastDOD0Values:atDate:]
  -[PowerUIBatteryMitigationManager additionalWaitTime]
  -[PowerUIBatteryMitigationManager log]
  -[PowerUIBatteryMitigationManager additionalWaitTimeForQMaxWithInterval:]
  -[PowerUIBatteryMitigationManager additionalWaitTimeWithProperties:]
  -[PowerUIBatteryMitigationManager dod0ArrayFromBatteryProperties:]
  -[PowerUIBatteryMitigationManager lastQMaxArray]
  -[PowerUIBatteryMitigationManager timeSinceLastDOD0Update]
  -[PowerUIBatteryMitigationManager .cxx_destruct]
  -[PowerUIBatteryMitigationManager qMaxFromBatteryProperties:]
  -[PowerUIBatteryMitigationManager lastQMaxUpdate]
  -[PowerUIBatteryMitigationManager readLastDOD0Update]
  -[PowerUIBatteryMitigationManager additionalWaitTimeForDOD0WithInterval:]
  -[PowerUIBatteryMitigationManager initWithDefaultsDomain:]
  -[PowerUIBatteryMitigationManager lastDOD0Values]
  -[PowerUIBatteryMitigationManager readLastQMaxUpdate]
  -[PowerUIBatteryMitigationManager setDefaultsDomain:]
  -[PowerUIBatteryMitigationManager updateLastQMaxArray:atDate:]
  -[PowerUIBatteryMitigationManager setTimeSinceLastQmaxUpdate:]
  -[PowerUIBatteryMitigationManager setTestDaysSinceQmaxUpdate:]
  -[PowerUIBatteryMitigationManager testDaysSinceQmaxUpdate]
  -[PowerUIBatteryMitigationManager setTimeSinceLastDOD0Update:]
  -[PowerUIBatteryMitigationManager setDecisionSignalID:]
  -[PowerUIBatteryMitigationManager lastDOD0Update]
  -[PowerUIBatteryMitigationManager decisionSignalID]
  -[PowerUIBatteryMitigationManager setLastQMaxArray:]
  -[PowerUIBatteryMitigationManager readLastQMaxArray]
  -[PowerUIBatteryMitigationManager setLastDOD0Update:]
  -[PowerUIBatteryMitigationManager setLastQMaxUpdate:]


PowerUISmartChargeClientAudioAccessories : NSObject /usr/lib/libSystem.B.dylib <PowerUISmartChargeClientManagingAudioAccessories>
 @property  NSString *clientName
 @property  NSXPCConnection *connection
 @property  NSObject<OS_os_log> *log
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PowerUISmartChargeClientAudioAccessories remoteInterface]

  // instance methods
  -[PowerUISmartChargeClientAudioAccessories setLog:]
  -[PowerUISmartChargeClientAudioAccessories log]
  -[PowerUISmartChargeClientAudioAccessories clientName]
  -[PowerUISmartChargeClientAudioAccessories stopMockingBluetooth]
  -[PowerUISmartChargeClientAudioAccessories .cxx_destruct]
  -[PowerUISmartChargeClientAudioAccessories startMockingBluetoothForFakeDevice:]
  -[PowerUISmartChargeClientAudioAccessories fullChargeDeadlineForDevice:withHandler:]
  -[PowerUISmartChargeClientAudioAccessories setFakeConnectionStatusTo:]
  -[PowerUISmartChargeClientAudioAccessories setConnection:]
  -[PowerUISmartChargeClientAudioAccessories setClientName:]
  -[PowerUISmartChargeClientAudioAccessories fakeConnectionForDevice:]
  -[PowerUISmartChargeClientAudioAccessories connection]
  -[PowerUISmartChargeClientAudioAccessories clearLastActionForDevice:]
  -[PowerUISmartChargeClientAudioAccessories isSmartChargingCurrentlyEnabledForDevice:withHandler:]
  -[PowerUISmartChargeClientAudioAccessories unfilteredDeadlineForDevice:withHandler:]
  -[PowerUISmartChargeClientAudioAccessories initWithClientName:]
  -[PowerUISmartChargeClientAudioAccessories setState:forDevice:withError:]
  -[PowerUISmartChargeClientAudioAccessories updateOBCDeadline:forDevice:withHandler:]
  -[PowerUISmartChargeClientAudioAccessories isSmartChargingCurrentlyEnabledForDevice:withError:]
  -[PowerUISmartChargeClientAudioAccessories disableSmartChargingForDevice:withError:]
  -[PowerUISmartChargeClientAudioAccessories disableSmartChargingForDevice:withHandler:]
  -[PowerUISmartChargeClientAudioAccessories temporarilyDisableSmartChargingForDevice:withError:]
  -[PowerUISmartChargeClientAudioAccessories temporarilyDisableSmartChargingForDevice:withHandler:]
  -[PowerUISmartChargeClientAudioAccessories enableSmartChargingForDevice:withError:]
  -[PowerUISmartChargeClientAudioAccessories enableSmartChargingForDevice:withHandler:]
  -[PowerUISmartChargeClientAudioAccessories temporarilyEnableChargingForDevice:withError:]
  -[PowerUISmartChargeClientAudioAccessories temporarilyEnableChargingForDevice:withHandler:]
  -[PowerUISmartChargeClientAudioAccessories fullChargeDeadlineForDevice:withError:]
  -[PowerUISmartChargeClientAudioAccessories unfilteredDeadlineForDevice:withError:]
  -[PowerUISmartChargeClientAudioAccessories connectAndDisableOBCforDevice:withError:]
  -[PowerUISmartChargeClientAudioAccessories connectAndDisableOBCforDevice:withHandler:]
  -[PowerUISmartChargeClientAudioAccessories updateOBCDeadline:forDevice:withError:]
  -[PowerUISmartChargeClientAudioAccessories engageUntil:forDevice:overrideAllSignals:]
  -[PowerUISmartChargeClientAudioAccessories getAvailableDevices]
  -[PowerUISmartChargeClientAudioAccessories getStatusForDevice:]
  -[PowerUISmartChargeClientAudioAccessories lastActionForDevice:]
  -[PowerUISmartChargeClientAudioAccessories deleteRecordsForDevice:]


PowerUIWakeRequestSignalMonitor : NSObject /usr/lib/libSystem.B.dylib <PowerUISignalMonitor>
 @property  <PowerUISignalMonitorDelegate> *delegate
 @property  NSObject<OS_os_log> *log
 @property  <_CDContext> *context
 @property  _CDContextualChangeRegistration *registration
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PowerUIWakeRequestSignalMonitor monitorWithDelegate:]

  // instance methods
  -[PowerUIWakeRequestSignalMonitor registration]
  -[PowerUIWakeRequestSignalMonitor context]
  -[PowerUIWakeRequestSignalMonitor stopMonitoring]
  -[PowerUIWakeRequestSignalMonitor signalID]
  -[PowerUIWakeRequestSignalMonitor initWithDelegate:]
  -[PowerUIWakeRequestSignalMonitor startMonitoring]
  -[PowerUIWakeRequestSignalMonitor setLog:]
  -[PowerUIWakeRequestSignalMonitor requiredFullChargeDate]
  -[PowerUIWakeRequestSignalMonitor log]
  -[PowerUIWakeRequestSignalMonitor .cxx_destruct]
  -[PowerUIWakeRequestSignalMonitor setContext:]
  -[PowerUIWakeRequestSignalMonitor setRegistration:]
  -[PowerUIWakeRequestSignalMonitor setDelegate:]
  -[PowerUIWakeRequestSignalMonitor delegate]
  -[PowerUIWakeRequestSignalMonitor nextUserVisibleWakeDate]


PowerUIPredictorHelper : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[PowerUIPredictorHelper getHourBinID:forHourBin:]
  +[PowerUIPredictorHelper meanOf:]
  +[PowerUIPredictorHelper timeBetweenUsesForSortedDescendingByAgeEvents:forHourBin:aroundDate:]
  +[PowerUIPredictorHelper medianOf:]
  +[PowerUIPredictorHelper standardDeviationOf:]
  +[PowerUIPredictorHelper events:forHourBin:date:withMaxDuration:]
  +[PowerUIPredictorHelper timeBetweenUsesForSortedDescendingByAgeEvents:forHourBin:atDate:]


PowerUIAccessoryStatus : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned long currentState
 @property  BOOL enabled
 @property  NSDate *disabledUntilDate
 @property  BOOL temporarilyDisabled
 @property  NSDate *lastSentDate
 @property  NSDate *lastSeenDate
 @property  NSUUID *expectedHash
 @property  unsigned short minutesSavedSinceLastReport
 @property  unsigned char underchargesSinceLastReport
 @property  unsigned char chargingEventsSinceLastReport
 @property  unsigned long managerState

  // instance methods
  -[PowerUIAccessoryStatus setCurrentState:]
  -[PowerUIAccessoryStatus currentState]
  -[PowerUIAccessoryStatus temporarilyDisabled]
  -[PowerUIAccessoryStatus enabled]
  -[PowerUIAccessoryStatus init]
  -[PowerUIAccessoryStatus .cxx_destruct]
  -[PowerUIAccessoryStatus disabledUntilDate]
  -[PowerUIAccessoryStatus setTemporarilyDisabled:]
  -[PowerUIAccessoryStatus setLastSeenDate:]
  -[PowerUIAccessoryStatus setEnabled:]
  -[PowerUIAccessoryStatus lastSeenDate]
  -[PowerUIAccessoryStatus setDisabledUntilDate:]
  -[PowerUIAccessoryStatus lastSentDate]
  -[PowerUIAccessoryStatus setLastSentDate:]
  -[PowerUIAccessoryStatus expectedHash]
  -[PowerUIAccessoryStatus setExpectedHash:]
  -[PowerUIAccessoryStatus minutesSavedSinceLastReport]
  -[PowerUIAccessoryStatus setMinutesSavedSinceLastReport:]
  -[PowerUIAccessoryStatus underchargesSinceLastReport]
  -[PowerUIAccessoryStatus setUnderchargesSinceLastReport:]
  -[PowerUIAccessoryStatus chargingEventsSinceLastReport]
  -[PowerUIAccessoryStatus setChargingEventsSinceLastReport:]
  -[PowerUIAccessoryStatus managerState]
  -[PowerUIAccessoryStatus setManagerState:]


PowerUIBluetoothHandler : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[PowerUIBluetoothHandler init]
  -[PowerUIBluetoothHandler isAppleAudioDeviceWrapperWithDevice:withBool:]
  -[PowerUIBluetoothHandler getDeviceIDWrapperWithDevice:withVendorIdSource:withVendorId:withProductId:withVersionId:]
  -[PowerUIBluetoothHandler deviceConnectWrapper:]
  -[PowerUIBluetoothHandler sendCustomMessageWrapperWithManager:withMessageType:withDeviceHandle:withData:withDataSize:]
  -[PowerUIBluetoothHandler getAddressStringForDevice:]
  -[PowerUIBluetoothHandler getDeviceForAddressString:forSession:]
  -[PowerUIBluetoothHandler isDeviceConnected:forSession:]


PowerUIBluetoothHandlerFake : PowerUIBluetoothHandler
 @property  ^{BTDeviceImpl=} fakeDevice
 @property  NSString *fakeDeviceAddress
 @property  BOOL fakeDeviceConnected

  // instance methods
  -[PowerUIBluetoothHandlerFake dealloc]
  -[PowerUIBluetoothHandlerFake .cxx_destruct]
  -[PowerUIBluetoothHandlerFake init:]
  -[PowerUIBluetoothHandlerFake isAppleAudioDeviceWrapperWithDevice:withBool:]
  -[PowerUIBluetoothHandlerFake getDeviceIDWrapperWithDevice:withVendorIdSource:withVendorId:withProductId:withVersionId:]
  -[PowerUIBluetoothHandlerFake deviceConnectWrapper:]
  -[PowerUIBluetoothHandlerFake sendCustomMessageWrapperWithManager:withMessageType:withDeviceHandle:withData:withDataSize:]
  -[PowerUIBluetoothHandlerFake getAddressStringForDevice:]
  -[PowerUIBluetoothHandlerFake getDeviceForAddressString:forSession:]
  -[PowerUIBluetoothHandlerFake isDeviceConnected:forSession:]
  -[PowerUIBluetoothHandlerFake fakeDevice]
  -[PowerUIBluetoothHandlerFake setFakeDevice:]
  -[PowerUIBluetoothHandlerFake fakeDeviceAddress]
  -[PowerUIBluetoothHandlerFake setFakeDeviceAddress:]
  -[PowerUIBluetoothHandlerFake fakeDeviceConnected]
  -[PowerUIBluetoothHandlerFake setFakeDeviceConnected:]


PowerUIAudioAccessorySmartChargeManager : NSObject /usr/lib/libSystem.B.dylib <UNUserNotificationCenterDelegate, NSXPCListenerDelegate, PowerUISmartChargeManagingAudioAccessoriesPrivate, PowerUISignalMonitorDelegate, PowerUISmartChargeManagingAudioAccessories>
 @property  NSObject<OS_dispatch_queue> *queue
 @property  PowerUIMLAudioAccessoryModelPredictor *predictor
 @property  ^{BTSessionImpl=} session
 @property  NSObject<OS_os_log> *accessoryLog
 @property  NSMutableArray *deviceArray
 @property  NSLock *deviceArrayLock
 @property  NSMutableDictionary *accessoryStates
 @property  NSNumber *hardcodedTimeDelta
 @property  NSNumber *hardcodedTimeBetweenUpdates
 @property  NSDistributedNotificationCenter *notificationCenter
 @property  NSObject<OS_dispatch_semaphore> *btConnectionSemaphore
 @property  PowerUIWalletSignalMonitor *walletMonitor
 @property  NSMutableDictionary *acceptMessageFromRightBudForDevice
 @property  NSMutableDictionary *acceptMessageFromLeftBudForDevice
 @property  PowerUIBluetoothHandler *btHandler
 @property  UNUserNotificationCenter *unCenter
 @property  BOOL firstNotificationDisplayed
 @property  NSXPCListener *listener
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PowerUIAudioAccessorySmartChargeManager readNumberForPreferenceKeyPrefix:andDevice:]
  +[PowerUIAudioAccessorySmartChargeManager setNumber:forPreferenceKeyPrefix:andDevice:]
  +[PowerUIAudioAccessorySmartChargeManager setString:forPreferenceKeyPrefix:andDevice:]
  +[PowerUIAudioAccessorySmartChargeManager readStringForPreferenceKeyPrefix:andDevice:]
  +[PowerUIAudioAccessorySmartChargeManager readArrayForPreferenceKey:]
  +[PowerUIAudioAccessorySmartChargeManager bulkDeleteDefaultsEntries:]
  +[PowerUIAudioAccessorySmartChargeManager setArray:forPreferenceKey:]

  // instance methods
  -[PowerUIAudioAccessorySmartChargeManager unCenter]
  -[PowerUIAudioAccessorySmartChargeManager notificationCenter]
  -[PowerUIAudioAccessorySmartChargeManager predictor]
  -[PowerUIAudioAccessorySmartChargeManager listener]
  -[PowerUIAudioAccessorySmartChargeManager stringFromState:]
  -[PowerUIAudioAccessorySmartChargeManager setHardcodedTimeDelta:]
  -[PowerUIAudioAccessorySmartChargeManager setWalletMonitor:]
  -[PowerUIAudioAccessorySmartChargeManager setSession:]
  -[PowerUIAudioAccessorySmartChargeManager init]
  -[PowerUIAudioAccessorySmartChargeManager btConnectionSemaphore]
  -[PowerUIAudioAccessorySmartChargeManager setOBCState:forDevice:]
  -[PowerUIAudioAccessorySmartChargeManager setListener:]
  -[PowerUIAudioAccessorySmartChargeManager reportSessionMetricsForSide:withTimeSpendAtLowerSoC:timeSpentAtHigherSoC:engagementEventsSinceLastReport:underchargeEventsSinceLastReport:chargingEventsSinceLastReport:budSocAtLastEngagement:successRatio:]
  -[PowerUIAudioAccessorySmartChargeManager session]
  -[PowerUIAudioAccessorySmartChargeManager client:setState:forDevice:withHandler:]
  -[PowerUIAudioAccessorySmartChargeManager stopMockingBluetooth]
  -[PowerUIAudioAccessorySmartChargeManager deleteRecordsForDevices:]
  -[PowerUIAudioAccessorySmartChargeManager setAcceptMessageFromLeftBudForDevice:]
  -[PowerUIAudioAccessorySmartChargeManager hardcodedTimeDelta]
  -[PowerUIAudioAccessorySmartChargeManager .cxx_destruct]
  -[PowerUIAudioAccessorySmartChargeManager getAvailableDevicesWithHandler:]
  -[PowerUIAudioAccessorySmartChargeManager firsUseNotificationRequest]
  -[PowerUIAudioAccessorySmartChargeManager accessoryLog]
  -[PowerUIAudioAccessorySmartChargeManager persistentlySetLastSentDate:forDevice:]
  -[PowerUIAudioAccessorySmartChargeManager firstNotificationDisplayed]
  -[PowerUIAudioAccessorySmartChargeManager startMockingBluetoothForFakeDevice:]
  -[PowerUIAudioAccessorySmartChargeManager fullChargeDeadlineForDevice:withHandler:]
  -[PowerUIAudioAccessorySmartChargeManager runUpdateForDevice:withHash:]
  -[PowerUIAudioAccessorySmartChargeManager setNotificationCenter:]
  -[PowerUIAudioAccessorySmartChargeManager setHardcodedTimeBetweenUpdates:]
  -[PowerUIAudioAccessorySmartChargeManager getStatusForDevice:withHandler:]
  -[PowerUIAudioAccessorySmartChargeManager secondsLeftInHourForDate:]
  -[PowerUIAudioAccessorySmartChargeManager setBtConnectionSemaphore:]
  -[PowerUIAudioAccessorySmartChargeManager setFakeConnectionStatusTo:]
  -[PowerUIAudioAccessorySmartChargeManager deviceArray]
  -[PowerUIAudioAccessorySmartChargeManager reportDailyMetrics]
  -[PowerUIAudioAccessorySmartChargeManager setQueue:]
  -[PowerUIAudioAccessorySmartChargeManager setPredictor:]
  -[PowerUIAudioAccessorySmartChargeManager listener:shouldAcceptNewConnection:]
  -[PowerUIAudioAccessorySmartChargeManager client:updateOBCDeadline:forDevice:withHandler:]
  -[PowerUIAudioAccessorySmartChargeManager engageUntil:forDevice:overrideAllSignals:withHandler:]
  -[PowerUIAudioAccessorySmartChargeManager sendTimeDeltaInSeconds:toAccessory:]
  -[PowerUIAudioAccessorySmartChargeManager persistentlySetStatusForDevice:withCurrentState:withEnabled:withDisabledUntilDate:withTemporarilyDisabled:]
  -[PowerUIAudioAccessorySmartChargeManager client:connectAndDisableOBCforDevice:withHandler:]
  -[PowerUIAudioAccessorySmartChargeManager monitor:maySuggestNewFullChargeDeadline:]
  -[PowerUIAudioAccessorySmartChargeManager accessoryStates]
  -[PowerUIAudioAccessorySmartChargeManager setAccessoryLog:]
  -[PowerUIAudioAccessorySmartChargeManager queue]
  -[PowerUIAudioAccessorySmartChargeManager hardcodedTimeBetweenUpdates]
  -[PowerUIAudioAccessorySmartChargeManager recordBudMetricsLocallyForDevice:withTimeSpendAtLowerSoC:timeSpentAtHigherSoC:engagementEventsSinceLastReport:underchargeEventsSinceLastReport:chargingEventsSinceLastReport:budSocAtLastEngagement:successRatio:]
  -[PowerUIAudioAccessorySmartChargeManager defaultDateToDisableUntilGivenDate:]
  -[PowerUIAudioAccessorySmartChargeManager setFirstNotificationDisplayed:]
  -[PowerUIAudioAccessorySmartChargeManager setDeviceArrayLock:]
  -[PowerUIAudioAccessorySmartChargeManager btHandler]
  -[PowerUIAudioAccessorySmartChargeManager setUnCenter:]
  -[PowerUIAudioAccessorySmartChargeManager setBtHandler:]
  -[PowerUIAudioAccessorySmartChargeManager acceptMessageFromLeftBudForDevice]
  -[PowerUIAudioAccessorySmartChargeManager fakeConnectionForDevice:]
  -[PowerUIAudioAccessorySmartChargeManager setDeviceArray:]
  -[PowerUIAudioAccessorySmartChargeManager lastActionForDevice:withHandler:]
  -[PowerUIAudioAccessorySmartChargeManager persistentlySetExpectedHash:forDevice:]
  -[PowerUIAudioAccessorySmartChargeManager persistentlyHandleSeeingDevice:]
  -[PowerUIAudioAccessorySmartChargeManager deviceArrayLock]
  -[PowerUIAudioAccessorySmartChargeManager setAcceptMessageFromRightBudForDevice:]
  -[PowerUIAudioAccessorySmartChargeManager clearLastActionForDevice:]
  -[PowerUIAudioAccessorySmartChargeManager runUpdateForDevice:withHash:asInitialUpdate:]
  -[PowerUIAudioAccessorySmartChargeManager setAccessoryStates:]
  -[PowerUIAudioAccessorySmartChargeManager isSmartChargingCurrentlyEnabledForDevice:withHandler:]
  -[PowerUIAudioAccessorySmartChargeManager unfilteredDeadlineForDevice:withHandler:]
  -[PowerUIAudioAccessorySmartChargeManager walletMonitor]
  -[PowerUIAudioAccessorySmartChargeManager returnAccessoryStatusForDevice:]
  -[PowerUIAudioAccessorySmartChargeManager acceptMessageFromRightBudForDevice]


PowerUISmartChargeManager : NSObject /usr/lib/libSystem.B.dylib <UNUserNotificationCenterDelegate, NSXPCListenerDelegate, PowerUISignalMonitorDelegate, PowerUISmartChargeManagingPrivate, PowerUISmartChargeManaging>
 @property  <_CDLocalContext> *context
 @property  <_DKKnowledgeQuerying><_DKKnowledgeSaving> *knowledgeStore
 @property  NSString *defaultsDomain
 @property  @? beforeBatteryCallback
 @property  @? afterBatteryCallback
 @property  _CDContextualKeyPath *checkpointKP
 @property  UNUserNotificationCenter *unCenter
 @property  NSObject<OS_os_log> *log
 @property  unsigned long checkpoint
 @property  unsigned int service
 @property  unsigned long currentState
 @property  BOOL enabled
 @property  NSDate *disabledUntilDate
 @property  BOOL temporarilyDisabled
 @property  NSDate *_fullChargeDeadline
 @property  NSDate *uiDeadline
 @property  NSDictionary *signalDeadline
 @property  NSDate *lastComputedSignalDeadline
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSObject<OS_dispatch_source> *timer
 @property  int powerlogToken
 @property  BOOL _hasLegitimateUsage
 @property  int lastBatteryLevel
 @property  int lastPluginStatus
 @property  int lastFullyCharged
 @property  BOOL lastChargerWasWireless
 @property  NSDate *lastInterruptedTime
 @property  double empiricalTimeToFullChargeDurationMinutes
 @property  NSString *lastScheduledFullChargeNotificationID
 @property  long long deadlineSignalID
 @property  BOOL firstNotificationRequested
 @property  BOOL firstNotificationDisplayed
 @property  BOOL progressNotificationsEnabled
 @property  BOOL signalsIgnored
 @property  unsigned long predictorType
 @property  long long previousDecisionMakerID
 @property  NSDate *previousDecisionMakerDate
 @property  PowerUIMLTwoStageModelPredictor *modelTwoStagePredictor
 @property  NSArray *monitors
 @property  NSDictionary *powerLogStatus
 @property  NSDictionary *previousPowerLogStatus
 @property  NSDate *engagementTimeOverride
 @property  NSDate *fullChargeDeadlineOverride
 @property  NSDate *repeatEngagementOverrideEndDate
 @property  BOOL overrideAllSignals
 @property  BOOL encounteredTLCDuringTopOff
 @property  BOOL isDesktopDevice
 @property  NSDate *lastDesktopModeCheckDate
 @property  PowerUIBatteryMitigationManager *batteryMitigationManager
 @property  NSXPCListener *listener
 @property  int chargingStateNotification
 @property  PowerUITrialManager *trialManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PowerUISmartChargeManager manager]

  // instance methods
  -[PowerUISmartChargeManager unCenter]
  -[PowerUISmartChargeManager defaultsDomain]
  -[PowerUISmartChargeManager signalsIgnored]
  -[PowerUISmartChargeManager powerLogStatus]
  -[PowerUISmartChargeManager context]
  -[PowerUISmartChargeManager isDesktopDevice]
  -[PowerUISmartChargeManager setProgressNotificationsEnabled:]
  -[PowerUISmartChargeManager updateNotificationSettings:]
  -[PowerUISmartChargeManager setNumber:forPreferenceKey:]
  -[PowerUISmartChargeManager constructAnalyticsStatusFromEvents:]
  -[PowerUISmartChargeManager isDeviceWithLegitimateUsage]
  -[PowerUISmartChargeManager setEngagementTimeOverride:]
  -[PowerUISmartChargeManager setKnowledgeStore:]
  -[PowerUISmartChargeManager previousPowerLogStatus]
  -[PowerUISmartChargeManager powerlogToken]
  -[PowerUISmartChargeManager recentEngagements]
  -[PowerUISmartChargeManager knowledgeStore]
  -[PowerUISmartChargeManager setRepeatEngagementOverrideEndDate:]
  -[PowerUISmartChargeManager desktopModeOverride]
  -[PowerUISmartChargeManager setCurrentState:]
  -[PowerUISmartChargeManager requestAtCheckpoint:atBatteryLevel:]
  -[PowerUISmartChargeManager setFullChargeDeadline:withOCVMitigationWaitTime:]
  -[PowerUISmartChargeManager lastComputedSignalDeadline]
  -[PowerUISmartChargeManager setLog:]
  -[PowerUISmartChargeManager idleDurationWithEngagedCheckpoints:withTopOffStartCheckpoints:withDisabledCheckpoints:withTopOffStart:withIdleStart:withTemporarilyDisabledStart:withPluginEnd:]
  -[PowerUISmartChargeManager listener]
  -[PowerUISmartChargeManager stringFromState:]
  -[PowerUISmartChargeManager currentState]
  -[PowerUISmartChargeManager fullChargeDeadlineOverride]
  -[PowerUISmartChargeManager projectedBatteryLevelForDuration:withInitialBatteryLevel:]
  -[PowerUISmartChargeManager updateAnalyticsWithPluginMetrics:withBatteryLevel:]
  -[PowerUISmartChargeManager deviceWasRecentlyActive]
  -[PowerUISmartChargeManager constructAnalyticsStatus]
  -[PowerUISmartChargeManager recallPeriodicCheck]
  -[PowerUISmartChargeManager handleTopOffSupervisorEventInternal]
  -[PowerUISmartChargeManager temporarilyDisabled]
  -[PowerUISmartChargeManager deviceHasEnoughPluggedInTime]
  -[PowerUISmartChargeManager client:setChargingStatus:withHandler:]
  -[PowerUISmartChargeManager readDateForPreferenceKey:]
  -[PowerUISmartChargeManager setDate:forPreferenceKey:]
  -[PowerUISmartChargeManager enabled]
  -[PowerUISmartChargeManager powerLogStatusWithHandler:]
  -[PowerUISmartChargeManager handleXPCActivityOnBoot]
  -[PowerUISmartChargeManager engagementTimeOverride]
  -[PowerUISmartChargeManager enterDevelopmentMode]
  -[PowerUISmartChargeManager handleAlarmEvent:]
  -[PowerUISmartChargeManager durationToFullChargeFromBatteryLevel:]
  -[PowerUISmartChargeManager log]
  -[PowerUISmartChargeManager clearAllNotificationState]
  -[PowerUISmartChargeManager setService:]
  -[PowerUISmartChargeManager setListener:]
  -[PowerUISmartChargeManager setFirstNotificationRequested:]
  -[PowerUISmartChargeManager setCheckpoint:]
  -[PowerUISmartChargeManager timer]
  -[PowerUISmartChargeManager batteryMitigationManager]
  -[PowerUISmartChargeManager stopAllMonitoring]
  -[PowerUISmartChargeManager stringFromDecisionMaker:decisionDate:]
  -[PowerUISmartChargeManager lastFullyCharged]
  -[PowerUISmartChargeManager setAfterBatteryCallback:]
  -[PowerUISmartChargeManager lastBatteryLevel]
  -[PowerUISmartChargeManager beforeBatteryCallback]
  -[PowerUISmartChargeManager previousDecisionMakerID]
  -[PowerUISmartChargeManager client:setState:withHandler:]
  -[PowerUISmartChargeManager encounteredTLCDuringTopOff]
  -[PowerUISmartChargeManager deviceHasSeveralInteractions]
  -[PowerUISmartChargeManager checkpointNameFromCheckpoint:]
  -[PowerUISmartChargeManager setChargingStatus:]
  -[PowerUISmartChargeManager setTimer:]
  -[PowerUISmartChargeManager .cxx_destruct]
  -[PowerUISmartChargeManager firsUseNotificationRequest]
  -[PowerUISmartChargeManager setLastComputedSignalDeadline:]
  -[PowerUISmartChargeManager setEmpiricalTimeToFullChargeDurationMinutes:]
  -[PowerUISmartChargeManager resetEngagementOverrideWithHandler:]
  -[PowerUISmartChargeManager setLastPluginStatus:]
  -[PowerUISmartChargeManager set_fullChargeDeadline:]
  -[PowerUISmartChargeManager setBeforeBatteryCallback:]
  -[PowerUISmartChargeManager reportBatteryHealthMetrics]
  -[PowerUISmartChargeManager dispatchAlarmAfter:withName:]
  -[PowerUISmartChargeManager setLastBatteryLevel:]
  -[PowerUISmartChargeManager disabledUntilDate]
  -[PowerUISmartChargeManager firstNotificationDisplayed]
  -[PowerUISmartChargeManager fullChargeDeadlineWithHandler:]
  -[PowerUISmartChargeManager setPowerlogToken:]
  -[PowerUISmartChargeManager deviceHasOverriddenLegitimateUsageDetection]
  -[PowerUISmartChargeManager shouldDisableChargingOverrideModel:]
  -[PowerUISmartChargeManager smartTopOffEngagedRequest:]
  -[PowerUISmartChargeManager evaluateIfDesktopDevice]
  -[PowerUISmartChargeManager setPredictorType:]
  -[PowerUISmartChargeManager setLastChargerWasWireless:]
  -[PowerUISmartChargeManager evaluateIfDesktopDeviceForced:]
  -[PowerUISmartChargeManager cloakingMetrics:withIdleCheckpoints:withIdleStart:withTopOffStart:withPluginEnd:]
  -[PowerUISmartChargeManager setLastScheduledFullChargeNotificationID:]
  -[PowerUISmartChargeManager durationToFullChargeFromBatteryLevel:includeTLCDelay:]
  -[PowerUISmartChargeManager empiricalTimeToFullChargeDurationMinutes]
  -[PowerUISmartChargeManager isExternalConnected]
  -[PowerUISmartChargeManager handleNewBatteryLevel:whileExternalConnected:fullyCharged:]
  -[PowerUISmartChargeManager repeatEngagementOverrideEndDate]
  -[PowerUISmartChargeManager setSignalsIgnored:]
  -[PowerUISmartChargeManager setChargingStateNotification:]
  -[PowerUISmartChargeManager previousDecisionMakerDate]
  -[PowerUISmartChargeManager setTemporarilyDisabled:]
  -[PowerUISmartChargeManager setSignalDeadline:]
  -[PowerUISmartChargeManager setDeadlineSignalID:]
  -[PowerUISmartChargeManager monitors]
  -[PowerUISmartChargeManager shouldDisableChargingMLPredictor:]
  -[PowerUISmartChargeManager setModelTwoStagePredictor:]
  -[PowerUISmartChargeManager setContext:]
  -[PowerUISmartChargeManager setQueue:]
  -[PowerUISmartChargeManager watchIsInternalAndCarrySwitchDisabled]
  -[PowerUISmartChargeManager listener:shouldAcceptNewConnection:]
  -[PowerUISmartChargeManager _hasLegitimateUsage]
  -[PowerUISmartChargeManager clearPluginTimeline]
  -[PowerUISmartChargeManager dailyStatsFromLastReported:]
  -[PowerUISmartChargeManager deadlineSignalID]
  -[PowerUISmartChargeManager isSmartChargingCurrentlyEnabledWithHandler:]
  -[PowerUISmartChargeManager lastInterruptedTime]
  -[PowerUISmartChargeManager overrideAllSignals]
  -[PowerUISmartChargeManager isOBCSupportedWithHandler:]
  -[PowerUISmartChargeManager monitor:maySuggestNewFullChargeDeadline:]
  -[PowerUISmartChargeManager registerForFirstWakeupNotification]
  -[PowerUISmartChargeManager adjustedFullChargeDeadlineWithSignals:andBatteryMitigationAdvancement:withDesktopMode:withFullChargeDeadline:withResult:]
  -[PowerUISmartChargeManager service]
  -[PowerUISmartChargeManager setPreviousPowerLogStatus:]
  -[PowerUISmartChargeManager handleCallback:]
  -[PowerUISmartChargeManager reportAggDKeys:]
  -[PowerUISmartChargeManager readStringForPreferenceKey:]
  -[PowerUISmartChargeManager resetDeviceHasLegitimateUsage]
  -[PowerUISmartChargeManager queue]
  -[PowerUISmartChargeManager setLastInterruptedTime:]
  -[PowerUISmartChargeManager deviceWasRecentlyConnectedToCharger]
  -[PowerUISmartChargeManager reportHistoricalEngagements]
  -[PowerUISmartChargeManager chargingStateNotification]
  -[PowerUISmartChargeManager predictor:suggestsDiablingChargingAtBatteryLevel:]
  -[PowerUISmartChargeManager constructDailyStats:]
  -[PowerUISmartChargeManager setCheckpointKP:]
  -[PowerUISmartChargeManager setCheckpoint:withSelector:]
  -[PowerUISmartChargeManager _fullChargeDeadline]
  -[PowerUISmartChargeManager setDefaultsDomain:]
  -[PowerUISmartChargeManager periodicCheckDuration]
  -[PowerUISmartChargeManager setPreviousDecisionMakerID:]
  -[PowerUISmartChargeManager readNumberForPreferenceKey:]
  -[PowerUISmartChargeManager enableCharging]
  -[PowerUISmartChargeManager pluginTimelineAddEvent:atDate:withBatteryLevel:]
  -[PowerUISmartChargeManager loadDefaults]
  -[PowerUISmartChargeManager setTemporarilyDisabled:until:]
  -[PowerUISmartChargeManager addEngagementFromDate:withDuration:]
  -[PowerUISmartChargeManager setBatteryMitigationManager:]
  -[PowerUISmartChargeManager defaultDateToDisableUntilGivenDate:]
  -[PowerUISmartChargeManager chargePrediction:fullyCharged:previousCheckpoint:predictor:]
  -[PowerUISmartChargeManager progressNotificationsEnabled]
  -[PowerUISmartChargeManager shouldDisableChargingAsOfDate:atBatteryLevel:overrideAllSignals:withPredictor:bypassSaved:]
  -[PowerUISmartChargeManager setUiDeadline:]
  -[PowerUISmartChargeManager setFirstNotificationDisplayed:]
  -[PowerUISmartChargeManager checkpoint]
  -[PowerUISmartChargeManager predictorType]
  -[PowerUISmartChargeManager shouldDisableChargingAtBatteryLevel:withPredictor:]
  -[PowerUISmartChargeManager signalDeadline]
  -[PowerUISmartChargeManager cleanupPluginHistoryWithActivity:]
  -[PowerUISmartChargeManager setEnabled:]
  -[PowerUISmartChargeManager lastChargerWasWireless]
  -[PowerUISmartChargeManager setMonitors:]
  -[PowerUISmartChargeManager setEncounteredTLCDuringTopOff:]
  -[PowerUISmartChargeManager setString:forPreferenceKey:]
  -[PowerUISmartChargeManager lastScheduledFullChargeNotificationID]
  -[PowerUISmartChargeManager modelTwoStagePredictor]
  -[PowerUISmartChargeManager totalTemporarilyDisabledHours:withEngagements:withPluginEnd:]
  -[PowerUISmartChargeManager updateChargingTimeSaved]
  -[PowerUISmartChargeManager lastPluginStatus]
  -[PowerUISmartChargeManager resetState]
  -[PowerUISmartChargeManager fullChargeDeadline]
  -[PowerUISmartChargeManager uiDeadlineFromFullChargeDeadline:atDate:]
  -[PowerUISmartChargeManager setPreviousDecisionMakerDate:]
  -[PowerUISmartChargeManager setUnCenter:]
  -[PowerUISmartChargeManager setOverrideAllSignals:]
  -[PowerUISmartChargeManager setLastDesktopModeCheckDate:]
  -[PowerUISmartChargeManager setLastFullyCharged:]
  -[PowerUISmartChargeManager recordAnalytics]
  -[PowerUISmartChargeManager addPowerLogEventForCheckpoint:decisionSignalID:decisionDate:]
  -[PowerUISmartChargeManager setIsDesktopDevice:]
  -[PowerUISmartChargeManager updateDecisionMakerID:withCheckpoint:]
  -[PowerUISmartChargeManager resetDevelopmentMode]
  -[PowerUISmartChargeManager loadCheckpoint]
  -[PowerUISmartChargeManager lastDesktopModeCheckDate]
  -[PowerUISmartChargeManager handleTopOffSupervisorEvent]
  -[PowerUISmartChargeManager computeSignalDeadline]
  -[PowerUISmartChargeManager ttrURLforBatteryLevel:withDate:]
  -[PowerUISmartChargeManager disableCharging]
  -[PowerUISmartChargeManager handleCallback]
  -[PowerUISmartChargeManager recomputeEmpiricalTimeToFullCharge]
  -[PowerUISmartChargeManager userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:]
  -[PowerUISmartChargeManager initWithDefaultsDomain:knowledgeStore:contextStore:beforeHandlingBatteryChangeCallback:afterHandlingBatteryChangeCallback:]
  -[PowerUISmartChargeManager checkpointKP]
  -[PowerUISmartChargeManager totalTopOffDurationWithTopOffStartCheckpoints:withFullyChargedCheckpoints:withTopOffStart:withFullyChargedDate:withPluginEnd:]
  -[PowerUISmartChargeManager setFullChargeDeadlineOverride:]
  -[PowerUISmartChargeManager afterBatteryCallback]
  -[PowerUISmartChargeManager set_hasLegitimateUsage:]
  -[PowerUISmartChargeManager setDisabledUntilDate:]
  -[PowerUISmartChargeManager timeStringFromDate:]
  -[PowerUISmartChargeManager isOBCEngagedWithHandler:]
  -[PowerUISmartChargeManager fullChargeDeadlineStringFromDate:]
  -[PowerUISmartChargeManager handleInternalCarryPromptEvent]
  -[PowerUISmartChargeManager simulateCurrentOutputAsOfDate:overrideAllSignals:withHandler:]
  -[PowerUISmartChargeManager firstNotificationRequested]
  -[PowerUISmartChargeManager statusWithHandler:]
  -[PowerUISmartChargeManager stringFromInterval:]
  -[PowerUISmartChargeManager trialManager]
  -[PowerUISmartChargeManager requestPeriodicCheck]
  -[PowerUISmartChargeManager smartTopOffEngagedContent:]
  -[PowerUISmartChargeManager readAndRemoveRecentEngagements]
  -[PowerUISmartChargeManager setPowerLogStatus:]
  -[PowerUISmartChargeManager setTrialManager:]
  -[PowerUISmartChargeManager uiDeadline]
  -[PowerUISmartChargeManager engageFrom:until:repeatUntil:overrideAllSignals:withHandler:]
  -[PowerUISmartChargeManager eligibleEngagementIntervalFromTimelineEvents:]
  -[PowerUISmartChargeManager smartTopOffFailureNotificationAtBatteryLevel:withDate:]
  -[PowerUISmartChargeManager startAllMonitoring]


PowerUISmartChargeManagerUnsupported : NSObject /usr/lib/libSystem.B.dylib <NSXPCListenerDelegate, PowerUISmartChargeManaging>
 @property  NSXPCListener *listener
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PowerUISmartChargeManagerUnsupported manager]

  // instance methods
  -[PowerUISmartChargeManagerUnsupported listener]
  -[PowerUISmartChargeManagerUnsupported powerLogStatusWithHandler:]
  -[PowerUISmartChargeManagerUnsupported init]
  -[PowerUISmartChargeManagerUnsupported enterDevelopmentMode]
  -[PowerUISmartChargeManagerUnsupported setListener:]
  -[PowerUISmartChargeManagerUnsupported client:setState:withHandler:]
  -[PowerUISmartChargeManagerUnsupported .cxx_destruct]
  -[PowerUISmartChargeManagerUnsupported fullChargeDeadlineWithHandler:]
  -[PowerUISmartChargeManagerUnsupported listener:shouldAcceptNewConnection:]
  -[PowerUISmartChargeManagerUnsupported isSmartChargingCurrentlyEnabledWithHandler:]
  -[PowerUISmartChargeManagerUnsupported isOBCSupportedWithHandler:]
  -[PowerUISmartChargeManagerUnsupported resetDevelopmentMode]
  -[PowerUISmartChargeManagerUnsupported isOBCEngagedWithHandler:]
  -[PowerUISmartChargeManagerUnsupported simulateCurrentOutputAsOfDate:overrideAllSignals:withHandler:]
  -[PowerUISmartChargeManagerUnsupported statusWithHandler:]


PowerUIWalletSignalMonitor : NSObject /usr/lib/libSystem.B.dylib <PowerUISignalMonitor>
 @property  PKPassLibrary *wallet
 @property  <PowerUISignalMonitorDelegate> *delegate
 @property  NSObject<OS_os_log> *log
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSObject<OS_dispatch_source> *waitForFinalChangeTimer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PowerUIWalletSignalMonitor monitorWithDelegate:]

  // instance methods
  -[PowerUIWalletSignalMonitor stopMonitoring]
  -[PowerUIWalletSignalMonitor signalID]
  -[PowerUIWalletSignalMonitor initWithDelegate:]
  -[PowerUIWalletSignalMonitor startMonitoring]
  -[PowerUIWalletSignalMonitor setLog:]
  -[PowerUIWalletSignalMonitor requiredFullChargeDate]
  -[PowerUIWalletSignalMonitor log]
  -[PowerUIWalletSignalMonitor initializeWallet]
  -[PowerUIWalletSignalMonitor .cxx_destruct]
  -[PowerUIWalletSignalMonitor setWallet:]
  -[PowerUIWalletSignalMonitor waitForFinalChangeTimer]
  -[PowerUIWalletSignalMonitor setQueue:]
  -[PowerUIWalletSignalMonitor wallet]
  -[PowerUIWalletSignalMonitor queue]
  -[PowerUIWalletSignalMonitor sourceInformationChangedNotification:]
  -[PowerUIWalletSignalMonitor setWaitForFinalChangeTimer:]
  -[PowerUIWalletSignalMonitor setDelegate:]
  -[PowerUIWalletSignalMonitor delegate]


PowerUISleepWakeMonitor : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSObject<OS_os_log> *log
 @property  <_CDUserContext> *context
 @property  PowerUISmartChargeManager *manager
 @property  NSDate *desktopTransitionEvaluationDate
 @property  unsigned long checkpoint
 @property  BOOL enabled

  // instance methods
  -[PowerUISleepWakeMonitor context]
  -[PowerUISleepWakeMonitor setLog:]
  -[PowerUISleepWakeMonitor enabled]
  -[PowerUISleepWakeMonitor log]
  -[PowerUISleepWakeMonitor setCheckpoint:]
  -[PowerUISleepWakeMonitor .cxx_destruct]
  -[PowerUISleepWakeMonitor setContext:]
  -[PowerUISleepWakeMonitor setQueue:]
  -[PowerUISleepWakeMonitor manager]
  -[PowerUISleepWakeMonitor queue]
  -[PowerUISleepWakeMonitor setManager:]
  -[PowerUISleepWakeMonitor checkpoint]
  -[PowerUISleepWakeMonitor setEnabled:]
  -[PowerUISleepWakeMonitor initWithManager:withCheckpoint:withLastDesktopCheck:]
  -[PowerUISleepWakeMonitor desktopTransitionEvaluationDate]
  -[PowerUISleepWakeMonitor setDesktopTransitionEvaluationDate:]


PowerUICalendarSignalMonitor : NSObject /usr/lib/libSystem.B.dylib <PowerUISignalMonitor>
 @property  EKEventStore *calendar
 @property  <PowerUISignalMonitorDelegate> *delegate
 @property  NSObject<OS_os_log> *log
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PowerUICalendarSignalMonitor monitorWithDelegate:]

  // instance methods
  -[PowerUICalendarSignalMonitor upcomingEvents]
  -[PowerUICalendarSignalMonitor stopMonitoring]
  -[PowerUICalendarSignalMonitor signalID]
  -[PowerUICalendarSignalMonitor initWithDelegate:]
  -[PowerUICalendarSignalMonitor startMonitoring]
  -[PowerUICalendarSignalMonitor setLog:]
  -[PowerUICalendarSignalMonitor requiredFullChargeDate]
  -[PowerUICalendarSignalMonitor log]
  -[PowerUICalendarSignalMonitor .cxx_destruct]
  -[PowerUICalendarSignalMonitor calendar]
  -[PowerUICalendarSignalMonitor setCalendar:]
  -[PowerUICalendarSignalMonitor sourceInformationChangedNotification:]
  -[PowerUICalendarSignalMonitor nextFlightEventWithEvents:]
  -[PowerUICalendarSignalMonitor nextRelevantCalendarEventWithEvents:]
  -[PowerUICalendarSignalMonitor setDelegate:]
  -[PowerUICalendarSignalMonitor delegate]


PowerUIAlarmSignalMonitor : NSObject /usr/lib/libSystem.B.dylib <PowerUISignalMonitor>
 @property  MTAlarmManager *alarmManager
 @property  <PowerUISignalMonitorDelegate> *delegate
 @property  NSObject<OS_os_log> *log
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PowerUIAlarmSignalMonitor monitorWithDelegate:]

  // instance methods
  -[PowerUIAlarmSignalMonitor nextAlarm]
  -[PowerUIAlarmSignalMonitor stopMonitoring]
  -[PowerUIAlarmSignalMonitor signalID]
  -[PowerUIAlarmSignalMonitor initWithDelegate:]
  -[PowerUIAlarmSignalMonitor startMonitoring]
  -[PowerUIAlarmSignalMonitor setLog:]
  -[PowerUIAlarmSignalMonitor requiredFullChargeDate]
  -[PowerUIAlarmSignalMonitor nextLocalAlarm]
  -[PowerUIAlarmSignalMonitor log]
  -[PowerUIAlarmSignalMonitor .cxx_destruct]
  -[PowerUIAlarmSignalMonitor setAlarmManager:]
  -[PowerUIAlarmSignalMonitor sourceInformationChangedNotification:]
  -[PowerUIAlarmSignalMonitor alarmManager]
  -[PowerUIAlarmSignalMonitor setDelegate:]
  -[PowerUIAlarmSignalMonitor delegate]


PowerUIDesktopModePredictor : NSObject /usr/lib/libSystem.B.dylib <PowerUIPredictor>
 @property  NSString *defaultsDomain
 @property  NSObject<OS_os_log> *log
 @property  double threshold
 @property  <_DKKnowledgeQuerying> *store
 @property  <_CDLocalContext> *context
 @property  {os_unfair_lock_s=I} lock
 @property  {os_unfair_lock_s=I} loadModelLock
 @property  PowerUITrialManager *trialManager
 @property  MLModel *model
 @property  NSDate *pluginDate
 @property  double pluginBatteryLevel
 @property  double desktopEntryThreshold

  // instance methods
  -[PowerUIDesktopModePredictor defaultsDomain]
  -[PowerUIDesktopModePredictor context]
  -[PowerUIDesktopModePredictor threshold]
  -[PowerUIDesktopModePredictor setLock:]
  -[PowerUIDesktopModePredictor initWithDefaultsDomain:withContextStore:withKnowledgeStore:withTrialManager:]
  -[PowerUIDesktopModePredictor setStore:]
  -[PowerUIDesktopModePredictor setLog:]
  -[PowerUIDesktopModePredictor modelVersion]
  -[PowerUIDesktopModePredictor setPluginDate:]
  -[PowerUIDesktopModePredictor store]
  -[PowerUIDesktopModePredictor log]
  -[PowerUIDesktopModePredictor setLoadModelLock:]
  -[PowerUIDesktopModePredictor .cxx_destruct]
  -[PowerUIDesktopModePredictor pluginDate]
  -[PowerUIDesktopModePredictor predictFullChargeDateWithBatteryLevel:]
  -[PowerUIDesktopModePredictor loadModelLock]
  -[PowerUIDesktopModePredictor lock]
  -[PowerUIDesktopModePredictor setContext:]
  -[PowerUIDesktopModePredictor setDefaultsDomain:]
  -[PowerUIDesktopModePredictor setThreshold:]
  -[PowerUIDesktopModePredictor model]
  -[PowerUIDesktopModePredictor setPluginBatteryLevel:]
  -[PowerUIDesktopModePredictor pluginBatteryLevel]
  -[PowerUIDesktopModePredictor trialManager]
  -[PowerUIDesktopModePredictor setTrialManager:]
  -[PowerUIDesktopModePredictor desktopEntryThreshold]
  -[PowerUIDesktopModePredictor setDesktopEntryThreshold:]


PowerUILocationSignalMonitor : NSObject /usr/lib/libSystem.B.dylib <CLLocationManagerDelegate, PowerUISignalMonitor>
 @property  RTRoutineManager *routine
 @property  CLLocationManager *locationManager
 @property  int authorizationStatus
 @property  CLLocation *currentLocation
 @property  NSObject<OS_dispatch_semaphore> *requestLocationSemaphore
 @property  NSObject<OS_dispatch_semaphore> *authorizationSemaphore
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSObject<OS_os_log> *log
 @property  <_CDLocalContext> *context
 @property  <_DKKnowledgeQuerying> *store
 @property  NSDictionary *analyticsData
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PowerUILocationSignalMonitor monitorWithDelegate:]
  +[PowerUILocationSignalMonitor monitorWithDelegate:withContext:withKnowledgeStore:]

  // instance methods
  -[PowerUILocationSignalMonitor currentLocation]
  -[PowerUILocationSignalMonitor context]
  -[PowerUILocationSignalMonitor likelyToBeInKnownArea]
  -[PowerUILocationSignalMonitor routine]
  -[PowerUILocationSignalMonitor stopMonitoring]
  -[PowerUILocationSignalMonitor signalID]
  -[PowerUILocationSignalMonitor startMonitoring]
  -[PowerUILocationSignalMonitor setStore:]
  -[PowerUILocationSignalMonitor setLog:]
  -[PowerUILocationSignalMonitor setLocationManager:]
  -[PowerUILocationSignalMonitor locationManager]
  -[PowerUILocationSignalMonitor setAuthorizationStatus:]
  -[PowerUILocationSignalMonitor setCurrentLocation:]
  -[PowerUILocationSignalMonitor requiredFullChargeDate]
  -[PowerUILocationSignalMonitor store]
  -[PowerUILocationSignalMonitor log]
  -[PowerUILocationSignalMonitor longChargesAroundDate:]
  -[PowerUILocationSignalMonitor authorizationStatus]
  -[PowerUILocationSignalMonitor locationManager:didFailWithError:]
  -[PowerUILocationSignalMonitor inTypicalChargingLocationWithError:]
  -[PowerUILocationSignalMonitor .cxx_destruct]
  -[PowerUILocationSignalMonitor authorizationSemaphore]
  -[PowerUILocationSignalMonitor setAnalyticsData:]
  -[PowerUILocationSignalMonitor setContext:]
  -[PowerUILocationSignalMonitor setQueue:]
  -[PowerUILocationSignalMonitor predicateForEventsWithinSeconds:aroundTimeOfDay:]
  -[PowerUILocationSignalMonitor requestLocationSemaphore]
  -[PowerUILocationSignalMonitor queue]
  -[PowerUILocationSignalMonitor inKnownMicrolocation]
  -[PowerUILocationSignalMonitor setAuthorizationSemaphore:]
  -[PowerUILocationSignalMonitor analyticsData]
  -[PowerUILocationSignalMonitor initWithContextStore:withKnowledgeStore:]
  -[PowerUILocationSignalMonitor isInSameTimeZone]
  -[PowerUILocationSignalMonitor locationManagerDidChangeAuthorization:]
  -[PowerUILocationSignalMonitor longCharges:occurredInLocationsNear:withError:]
  -[PowerUILocationSignalMonitor notAuthorizedForLocation]
  -[PowerUILocationSignalMonitor setRequestLocationSemaphore:]
  -[PowerUILocationSignalMonitor locationManager:didUpdateLocations:]
  -[PowerUILocationSignalMonitor locationIsUncertain:]
  -[PowerUILocationSignalMonitor setRoutine:]


durationModelInput : NSObject /usr/lib/libSystem.B.dylib <MLFeatureProvider>
 @property  double plugin_battery_level
 @property  double time_from_plugin
 @property  double med_dur_1
 @property  double med_dur_2
 @property  double med_dur_4
 @property  double med_dur_8
 @property  double med_dur_16
 @property  double med_dur_24
 @property  double cnt_dur_1
 @property  double cnt_dur_2
 @property  double cnt_dur_4
 @property  double cnt_dur_8
 @property  double cnt_dur_16
 @property  double cnt_dur_24
 @property  double std_dur_1
 @property  double std_dur_2
 @property  double std_dur_4
 @property  double std_dur_8
 @property  double std_dur_16
 @property  double std_dur_24
 @property  NSSet *featureNames

  // instance methods
  -[durationModelInput featureNames]
  -[durationModelInput featureValueForName:]
  -[durationModelInput initWithPlugin_battery_level:time_from_plugin:med_dur_1:med_dur_2:med_dur_4:med_dur_8:med_dur_16:med_dur_24:cnt_dur_1:cnt_dur_2:cnt_dur_4:cnt_dur_8:cnt_dur_16:cnt_dur_24:std_dur_1:std_dur_2:std_dur_4:std_dur_8:std_dur_16:std_dur_24:]
  -[durationModelInput plugin_battery_level]
  -[durationModelInput setPlugin_battery_level:]
  -[durationModelInput time_from_plugin]
  -[durationModelInput setTime_from_plugin:]
  -[durationModelInput med_dur_1]
  -[durationModelInput setMed_dur_1:]
  -[durationModelInput med_dur_2]
  -[durationModelInput setMed_dur_2:]
  -[durationModelInput med_dur_4]
  -[durationModelInput setMed_dur_4:]
  -[durationModelInput med_dur_8]
  -[durationModelInput setMed_dur_8:]
  -[durationModelInput med_dur_16]
  -[durationModelInput setMed_dur_16:]
  -[durationModelInput med_dur_24]
  -[durationModelInput setMed_dur_24:]
  -[durationModelInput cnt_dur_1]
  -[durationModelInput setCnt_dur_1:]
  -[durationModelInput cnt_dur_2]
  -[durationModelInput setCnt_dur_2:]
  -[durationModelInput cnt_dur_4]
  -[durationModelInput setCnt_dur_4:]
  -[durationModelInput cnt_dur_8]
  -[durationModelInput setCnt_dur_8:]
  -[durationModelInput cnt_dur_16]
  -[durationModelInput setCnt_dur_16:]
  -[durationModelInput cnt_dur_24]
  -[durationModelInput setCnt_dur_24:]
  -[durationModelInput std_dur_1]
  -[durationModelInput setStd_dur_1:]
  -[durationModelInput std_dur_2]
  -[durationModelInput setStd_dur_2:]
  -[durationModelInput std_dur_4]
  -[durationModelInput setStd_dur_4:]
  -[durationModelInput std_dur_8]
  -[durationModelInput setStd_dur_8:]
  -[durationModelInput std_dur_16]
  -[durationModelInput setStd_dur_16:]
  -[durationModelInput std_dur_24]
  -[durationModelInput setStd_dur_24:]


durationModelOutput : NSObject /usr/lib/libSystem.B.dylib <MLFeatureProvider>
 @property  double duration_pred
 @property  NSSet *featureNames

  // instance methods
  -[durationModelOutput featureNames]
  -[durationModelOutput featureValueForName:]
  -[durationModelOutput initWithDuration_pred:]
  -[durationModelOutput duration_pred]
  -[durationModelOutput setDuration_pred:]


durationModel : NSObject /usr/lib/libSystem.B.dylib
 @property  MLModel *model

  // class methods
  +[durationModel URLOfModelInThisBundle]
  +[durationModel loadContentsOfURL:configuration:completionHandler:]
  +[durationModel loadWithConfiguration:completionHandler:]

  // instance methods
  -[durationModel predictionFromFeatures:options:error:]
  -[durationModel init]
  -[durationModel predictionsFromInputs:options:error:]
  -[durationModel .cxx_destruct]
  -[durationModel initWithContentsOfURL:error:]
  -[durationModel predictionFromFeatures:error:]
  -[durationModel initWithMLModel:]
  -[durationModel initWithContentsOfURL:configuration:error:]
  -[durationModel model]
  -[durationModel initWithConfiguration:error:]
  -[durationModel predictionFromPlugin_battery_level:time_from_plugin:med_dur_1:med_dur_2:med_dur_4:med_dur_8:med_dur_16:med_dur_24:cnt_dur_1:cnt_dur_2:cnt_dur_4:cnt_dur_8:cnt_dur_16:cnt_dur_24:std_dur_1:std_dur_2:std_dur_4:std_dur_8:std_dur_16:std_dur_24:error:]


audioAccessory_higher_usage_engInput : NSObject /usr/lib/libSystem.B.dylib <MLFeatureProvider>
 @property  double time_between_uses_med_dur_1
 @property  double time_between_uses_med_dur_2
 @property  double time_between_uses_med_dur_4
 @property  double time_between_uses_med_dur_24
 @property  double time_between_uses_std_dur_1
 @property  double time_between_uses_std_dur_2
 @property  double time_between_uses_std_dur_4
 @property  double time_between_uses_std_dur_24
 @property  double hour
 @property  double is_weekend
 @property  double hour_plus_0
 @property  double hour_plus_1
 @property  double hour_plus_2
 @property  double hour_plus_3
 @property  double hour_plus_4
 @property  double hour_plus_5
 @property  double hours_until_use
 @property  double meaningful_undercharge_rolling_average
 @property  NSSet *featureNames

  // instance methods
  -[audioAccessory_higher_usage_engInput hour]
  -[audioAccessory_higher_usage_engInput featureNames]
  -[audioAccessory_higher_usage_engInput featureValueForName:]
  -[audioAccessory_higher_usage_engInput setHour:]
  -[audioAccessory_higher_usage_engInput initWithTime_between_uses_med_dur_1:time_between_uses_med_dur_2:time_between_uses_med_dur_4:time_between_uses_med_dur_24:time_between_uses_std_dur_1:time_between_uses_std_dur_2:time_between_uses_std_dur_4:time_between_uses_std_dur_24:hour:is_weekend:hour_plus_0:hour_plus_1:hour_plus_2:hour_plus_3:hour_plus_4:hour_plus_5:hours_until_use:meaningful_undercharge_rolling_average:]
  -[audioAccessory_higher_usage_engInput time_between_uses_med_dur_1]
  -[audioAccessory_higher_usage_engInput setTime_between_uses_med_dur_1:]
  -[audioAccessory_higher_usage_engInput time_between_uses_med_dur_2]
  -[audioAccessory_higher_usage_engInput setTime_between_uses_med_dur_2:]
  -[audioAccessory_higher_usage_engInput time_between_uses_med_dur_4]
  -[audioAccessory_higher_usage_engInput setTime_between_uses_med_dur_4:]
  -[audioAccessory_higher_usage_engInput time_between_uses_med_dur_24]
  -[audioAccessory_higher_usage_engInput setTime_between_uses_med_dur_24:]
  -[audioAccessory_higher_usage_engInput time_between_uses_std_dur_1]
  -[audioAccessory_higher_usage_engInput setTime_between_uses_std_dur_1:]
  -[audioAccessory_higher_usage_engInput time_between_uses_std_dur_2]
  -[audioAccessory_higher_usage_engInput setTime_between_uses_std_dur_2:]
  -[audioAccessory_higher_usage_engInput time_between_uses_std_dur_4]
  -[audioAccessory_higher_usage_engInput setTime_between_uses_std_dur_4:]
  -[audioAccessory_higher_usage_engInput time_between_uses_std_dur_24]
  -[audioAccessory_higher_usage_engInput setTime_between_uses_std_dur_24:]
  -[audioAccessory_higher_usage_engInput is_weekend]
  -[audioAccessory_higher_usage_engInput setIs_weekend:]
  -[audioAccessory_higher_usage_engInput hour_plus_0]
  -[audioAccessory_higher_usage_engInput setHour_plus_0:]
  -[audioAccessory_higher_usage_engInput hour_plus_1]
  -[audioAccessory_higher_usage_engInput setHour_plus_1:]
  -[audioAccessory_higher_usage_engInput hour_plus_2]
  -[audioAccessory_higher_usage_engInput setHour_plus_2:]
  -[audioAccessory_higher_usage_engInput hour_plus_3]
  -[audioAccessory_higher_usage_engInput setHour_plus_3:]
  -[audioAccessory_higher_usage_engInput hour_plus_4]
  -[audioAccessory_higher_usage_engInput setHour_plus_4:]
  -[audioAccessory_higher_usage_engInput hour_plus_5]
  -[audioAccessory_higher_usage_engInput setHour_plus_5:]
  -[audioAccessory_higher_usage_engInput hours_until_use]
  -[audioAccessory_higher_usage_engInput setHours_until_use:]
  -[audioAccessory_higher_usage_engInput meaningful_undercharge_rolling_average]
  -[audioAccessory_higher_usage_engInput setMeaningful_undercharge_rolling_average:]


audioAccessory_higher_usage_engOutput : NSObject /usr/lib/libSystem.B.dylib <MLFeatureProvider>
 @property  long long engage
 @property  NSDictionary *classProbability
 @property  NSSet *featureNames

  // instance methods
  -[audioAccessory_higher_usage_engOutput featureNames]
  -[audioAccessory_higher_usage_engOutput featureValueForName:]
  -[audioAccessory_higher_usage_engOutput .cxx_destruct]
  -[audioAccessory_higher_usage_engOutput engage]
  -[audioAccessory_higher_usage_engOutput classProbability]
  -[audioAccessory_higher_usage_engOutput initWithEngage:classProbability:]
  -[audioAccessory_higher_usage_engOutput setEngage:]
  -[audioAccessory_higher_usage_engOutput setClassProbability:]


audioAccessory_higher_usage_eng : NSObject /usr/lib/libSystem.B.dylib
 @property  MLModel *model

  // class methods
  +[audioAccessory_higher_usage_eng URLOfModelInThisBundle]
  +[audioAccessory_higher_usage_eng loadContentsOfURL:configuration:completionHandler:]
  +[audioAccessory_higher_usage_eng loadWithConfiguration:completionHandler:]

  // instance methods
  -[audioAccessory_higher_usage_eng predictionFromFeatures:options:error:]
  -[audioAccessory_higher_usage_eng init]
  -[audioAccessory_higher_usage_eng predictionsFromInputs:options:error:]
  -[audioAccessory_higher_usage_eng .cxx_destruct]
  -[audioAccessory_higher_usage_eng initWithContentsOfURL:error:]
  -[audioAccessory_higher_usage_eng predictionFromFeatures:error:]
  -[audioAccessory_higher_usage_eng initWithMLModel:]
  -[audioAccessory_higher_usage_eng initWithContentsOfURL:configuration:error:]
  -[audioAccessory_higher_usage_eng model]
  -[audioAccessory_higher_usage_eng initWithConfiguration:error:]
  -[audioAccessory_higher_usage_eng predictionFromTime_between_uses_med_dur_1:time_between_uses_med_dur_2:time_between_uses_med_dur_4:time_between_uses_med_dur_24:time_between_uses_std_dur_1:time_between_uses_std_dur_2:time_between_uses_std_dur_4:time_between_uses_std_dur_24:hour:is_weekend:hour_plus_0:hour_plus_1:hour_plus_2:hour_plus_3:hour_plus_4:hour_plus_5:hours_until_use:meaningful_undercharge_rolling_average:error:]


audioAccessory_higher_usage_regInput : NSObject /usr/lib/libSystem.B.dylib <MLFeatureProvider>
 @property  double time_between_uses_med_dur_1
 @property  double time_between_uses_med_dur_2
 @property  double time_between_uses_med_dur_4
 @property  double time_between_uses_med_dur_24
 @property  double time_between_uses_std_dur_1
 @property  double time_between_uses_std_dur_2
 @property  double time_between_uses_std_dur_4
 @property  double time_between_uses_std_dur_24
 @property  double hour
 @property  double is_weekend
 @property  double hour_plus_0
 @property  double hour_plus_1
 @property  double hour_plus_2
 @property  double hour_plus_3
 @property  double hour_plus_4
 @property  double hour_plus_5
 @property  double hours_until_use
 @property  double meaningful_undercharge_rolling_average
 @property  NSSet *featureNames

  // instance methods
  -[audioAccessory_higher_usage_regInput hour]
  -[audioAccessory_higher_usage_regInput featureNames]
  -[audioAccessory_higher_usage_regInput featureValueForName:]
  -[audioAccessory_higher_usage_regInput setHour:]
  -[audioAccessory_higher_usage_regInput initWithTime_between_uses_med_dur_1:time_between_uses_med_dur_2:time_between_uses_med_dur_4:time_between_uses_med_dur_24:time_between_uses_std_dur_1:time_between_uses_std_dur_2:time_between_uses_std_dur_4:time_between_uses_std_dur_24:hour:is_weekend:hour_plus_0:hour_plus_1:hour_plus_2:hour_plus_3:hour_plus_4:hour_plus_5:hours_until_use:meaningful_undercharge_rolling_average:]
  -[audioAccessory_higher_usage_regInput time_between_uses_med_dur_1]
  -[audioAccessory_higher_usage_regInput setTime_between_uses_med_dur_1:]
  -[audioAccessory_higher_usage_regInput time_between_uses_med_dur_2]
  -[audioAccessory_higher_usage_regInput setTime_between_uses_med_dur_2:]
  -[audioAccessory_higher_usage_regInput time_between_uses_med_dur_4]
  -[audioAccessory_higher_usage_regInput setTime_between_uses_med_dur_4:]
  -[audioAccessory_higher_usage_regInput time_between_uses_med_dur_24]
  -[audioAccessory_higher_usage_regInput setTime_between_uses_med_dur_24:]
  -[audioAccessory_higher_usage_regInput time_between_uses_std_dur_1]
  -[audioAccessory_higher_usage_regInput setTime_between_uses_std_dur_1:]
  -[audioAccessory_higher_usage_regInput time_between_uses_std_dur_2]
  -[audioAccessory_higher_usage_regInput setTime_between_uses_std_dur_2:]
  -[audioAccessory_higher_usage_regInput time_between_uses_std_dur_4]
  -[audioAccessory_higher_usage_regInput setTime_between_uses_std_dur_4:]
  -[audioAccessory_higher_usage_regInput time_between_uses_std_dur_24]
  -[audioAccessory_higher_usage_regInput setTime_between_uses_std_dur_24:]
  -[audioAccessory_higher_usage_regInput is_weekend]
  -[audioAccessory_higher_usage_regInput setIs_weekend:]
  -[audioAccessory_higher_usage_regInput hour_plus_0]
  -[audioAccessory_higher_usage_regInput setHour_plus_0:]
  -[audioAccessory_higher_usage_regInput hour_plus_1]
  -[audioAccessory_higher_usage_regInput setHour_plus_1:]
  -[audioAccessory_higher_usage_regInput hour_plus_2]
  -[audioAccessory_higher_usage_regInput setHour_plus_2:]
  -[audioAccessory_higher_usage_regInput hour_plus_3]
  -[audioAccessory_higher_usage_regInput setHour_plus_3:]
  -[audioAccessory_higher_usage_regInput hour_plus_4]
  -[audioAccessory_higher_usage_regInput setHour_plus_4:]
  -[audioAccessory_higher_usage_regInput hour_plus_5]
  -[audioAccessory_higher_usage_regInput setHour_plus_5:]
  -[audioAccessory_higher_usage_regInput hours_until_use]
  -[audioAccessory_higher_usage_regInput setHours_until_use:]
  -[audioAccessory_higher_usage_regInput meaningful_undercharge_rolling_average]
  -[audioAccessory_higher_usage_regInput setMeaningful_undercharge_rolling_average:]


audioAccessory_higher_usage_regOutput : NSObject /usr/lib/libSystem.B.dylib <MLFeatureProvider>
 @property  double duration_pred
 @property  NSSet *featureNames

  // instance methods
  -[audioAccessory_higher_usage_regOutput featureNames]
  -[audioAccessory_higher_usage_regOutput featureValueForName:]
  -[audioAccessory_higher_usage_regOutput initWithDuration_pred:]
  -[audioAccessory_higher_usage_regOutput duration_pred]
  -[audioAccessory_higher_usage_regOutput setDuration_pred:]


audioAccessory_higher_usage_reg : NSObject /usr/lib/libSystem.B.dylib
 @property  MLModel *model

  // class methods
  +[audioAccessory_higher_usage_reg URLOfModelInThisBundle]
  +[audioAccessory_higher_usage_reg loadContentsOfURL:configuration:completionHandler:]
  +[audioAccessory_higher_usage_reg loadWithConfiguration:completionHandler:]

  // instance methods
  -[audioAccessory_higher_usage_reg predictionFromFeatures:options:error:]
  -[audioAccessory_higher_usage_reg init]
  -[audioAccessory_higher_usage_reg predictionsFromInputs:options:error:]
  -[audioAccessory_higher_usage_reg .cxx_destruct]
  -[audioAccessory_higher_usage_reg initWithContentsOfURL:error:]
  -[audioAccessory_higher_usage_reg predictionFromFeatures:error:]
  -[audioAccessory_higher_usage_reg initWithMLModel:]
  -[audioAccessory_higher_usage_reg initWithContentsOfURL:configuration:error:]
  -[audioAccessory_higher_usage_reg model]
  -[audioAccessory_higher_usage_reg initWithConfiguration:error:]
  -[audioAccessory_higher_usage_reg predictionFromTime_between_uses_med_dur_1:time_between_uses_med_dur_2:time_between_uses_med_dur_4:time_between_uses_med_dur_24:time_between_uses_std_dur_1:time_between_uses_std_dur_2:time_between_uses_std_dur_4:time_between_uses_std_dur_24:hour:is_weekend:hour_plus_0:hour_plus_1:hour_plus_2:hour_plus_3:hour_plus_4:hour_plus_5:hours_until_use:meaningful_undercharge_rolling_average:error:]


audioAccessory_lower_usage_regInput : NSObject /usr/lib/libSystem.B.dylib <MLFeatureProvider>
 @property  double time_between_uses_med_dur_1
 @property  double time_between_uses_med_dur_2
 @property  double time_between_uses_med_dur_4
 @property  double time_between_uses_med_dur_24
 @property  double time_between_uses_std_dur_1
 @property  double time_between_uses_std_dur_2
 @property  double time_between_uses_std_dur_4
 @property  double time_between_uses_std_dur_24
 @property  double hour
 @property  double is_weekend
 @property  double hour_plus_0
 @property  double hour_plus_1
 @property  double hour_plus_2
 @property  double hour_plus_3
 @property  double hour_plus_4
 @property  double hour_plus_5
 @property  double hours_until_use
 @property  double meaningful_undercharge_rolling_average
 @property  NSSet *featureNames

  // instance methods
  -[audioAccessory_lower_usage_regInput hour]
  -[audioAccessory_lower_usage_regInput featureNames]
  -[audioAccessory_lower_usage_regInput featureValueForName:]
  -[audioAccessory_lower_usage_regInput setHour:]
  -[audioAccessory_lower_usage_regInput initWithTime_between_uses_med_dur_1:time_between_uses_med_dur_2:time_between_uses_med_dur_4:time_between_uses_med_dur_24:time_between_uses_std_dur_1:time_between_uses_std_dur_2:time_between_uses_std_dur_4:time_between_uses_std_dur_24:hour:is_weekend:hour_plus_0:hour_plus_1:hour_plus_2:hour_plus_3:hour_plus_4:hour_plus_5:hours_until_use:meaningful_undercharge_rolling_average:]
  -[audioAccessory_lower_usage_regInput time_between_uses_med_dur_1]
  -[audioAccessory_lower_usage_regInput setTime_between_uses_med_dur_1:]
  -[audioAccessory_lower_usage_regInput time_between_uses_med_dur_2]
  -[audioAccessory_lower_usage_regInput setTime_between_uses_med_dur_2:]
  -[audioAccessory_lower_usage_regInput time_between_uses_med_dur_4]
  -[audioAccessory_lower_usage_regInput setTime_between_uses_med_dur_4:]
  -[audioAccessory_lower_usage_regInput time_between_uses_med_dur_24]
  -[audioAccessory_lower_usage_regInput setTime_between_uses_med_dur_24:]
  -[audioAccessory_lower_usage_regInput time_between_uses_std_dur_1]
  -[audioAccessory_lower_usage_regInput setTime_between_uses_std_dur_1:]
  -[audioAccessory_lower_usage_regInput time_between_uses_std_dur_2]
  -[audioAccessory_lower_usage_regInput setTime_between_uses_std_dur_2:]
  -[audioAccessory_lower_usage_regInput time_between_uses_std_dur_4]
  -[audioAccessory_lower_usage_regInput setTime_between_uses_std_dur_4:]
  -[audioAccessory_lower_usage_regInput time_between_uses_std_dur_24]
  -[audioAccessory_lower_usage_regInput setTime_between_uses_std_dur_24:]
  -[audioAccessory_lower_usage_regInput is_weekend]
  -[audioAccessory_lower_usage_regInput setIs_weekend:]
  -[audioAccessory_lower_usage_regInput hour_plus_0]
  -[audioAccessory_lower_usage_regInput setHour_plus_0:]
  -[audioAccessory_lower_usage_regInput hour_plus_1]
  -[audioAccessory_lower_usage_regInput setHour_plus_1:]
  -[audioAccessory_lower_usage_regInput hour_plus_2]
  -[audioAccessory_lower_usage_regInput setHour_plus_2:]
  -[audioAccessory_lower_usage_regInput hour_plus_3]
  -[audioAccessory_lower_usage_regInput setHour_plus_3:]
  -[audioAccessory_lower_usage_regInput hour_plus_4]
  -[audioAccessory_lower_usage_regInput setHour_plus_4:]
  -[audioAccessory_lower_usage_regInput hour_plus_5]
  -[audioAccessory_lower_usage_regInput setHour_plus_5:]
  -[audioAccessory_lower_usage_regInput hours_until_use]
  -[audioAccessory_lower_usage_regInput setHours_until_use:]
  -[audioAccessory_lower_usage_regInput meaningful_undercharge_rolling_average]
  -[audioAccessory_lower_usage_regInput setMeaningful_undercharge_rolling_average:]


audioAccessory_lower_usage_regOutput : NSObject /usr/lib/libSystem.B.dylib <MLFeatureProvider>
 @property  double duration_pred
 @property  NSSet *featureNames

  // instance methods
  -[audioAccessory_lower_usage_regOutput featureNames]
  -[audioAccessory_lower_usage_regOutput featureValueForName:]
  -[audioAccessory_lower_usage_regOutput initWithDuration_pred:]
  -[audioAccessory_lower_usage_regOutput duration_pred]
  -[audioAccessory_lower_usage_regOutput setDuration_pred:]


audioAccessory_lower_usage_reg : NSObject /usr/lib/libSystem.B.dylib
 @property  MLModel *model

  // class methods
  +[audioAccessory_lower_usage_reg URLOfModelInThisBundle]
  +[audioAccessory_lower_usage_reg loadContentsOfURL:configuration:completionHandler:]
  +[audioAccessory_lower_usage_reg loadWithConfiguration:completionHandler:]

  // instance methods
  -[audioAccessory_lower_usage_reg predictionFromFeatures:options:error:]
  -[audioAccessory_lower_usage_reg init]
  -[audioAccessory_lower_usage_reg predictionsFromInputs:options:error:]
  -[audioAccessory_lower_usage_reg .cxx_destruct]
  -[audioAccessory_lower_usage_reg initWithContentsOfURL:error:]
  -[audioAccessory_lower_usage_reg predictionFromFeatures:error:]
  -[audioAccessory_lower_usage_reg initWithMLModel:]
  -[audioAccessory_lower_usage_reg initWithContentsOfURL:configuration:error:]
  -[audioAccessory_lower_usage_reg model]
  -[audioAccessory_lower_usage_reg initWithConfiguration:error:]
  -[audioAccessory_lower_usage_reg predictionFromTime_between_uses_med_dur_1:time_between_uses_med_dur_2:time_between_uses_med_dur_4:time_between_uses_med_dur_24:time_between_uses_std_dur_1:time_between_uses_std_dur_2:time_between_uses_std_dur_4:time_between_uses_std_dur_24:hour:is_weekend:hour_plus_0:hour_plus_1:hour_plus_2:hour_plus_3:hour_plus_4:hour_plus_5:hours_until_use:meaningful_undercharge_rolling_average:error:]


engageModelInput : NSObject /usr/lib/libSystem.B.dylib <MLFeatureProvider>
 @property  double plugin_battery_level
 @property  double time_from_plugin
 @property  double med_dur_1
 @property  double med_dur_2
 @property  double med_dur_4
 @property  double med_dur_8
 @property  double med_dur_16
 @property  double med_dur_24
 @property  double cnt_dur_1
 @property  double cnt_dur_2
 @property  double cnt_dur_4
 @property  double cnt_dur_8
 @property  double cnt_dur_16
 @property  double cnt_dur_24
 @property  double std_dur_1
 @property  double std_dur_2
 @property  double std_dur_4
 @property  double std_dur_8
 @property  double std_dur_16
 @property  double std_dur_24
 @property  NSSet *featureNames

  // instance methods
  -[engageModelInput featureNames]
  -[engageModelInput featureValueForName:]
  -[engageModelInput initWithPlugin_battery_level:time_from_plugin:med_dur_1:med_dur_2:med_dur_4:med_dur_8:med_dur_16:med_dur_24:cnt_dur_1:cnt_dur_2:cnt_dur_4:cnt_dur_8:cnt_dur_16:cnt_dur_24:std_dur_1:std_dur_2:std_dur_4:std_dur_8:std_dur_16:std_dur_24:]
  -[engageModelInput plugin_battery_level]
  -[engageModelInput setPlugin_battery_level:]
  -[engageModelInput time_from_plugin]
  -[engageModelInput setTime_from_plugin:]
  -[engageModelInput med_dur_1]
  -[engageModelInput setMed_dur_1:]
  -[engageModelInput med_dur_2]
  -[engageModelInput setMed_dur_2:]
  -[engageModelInput med_dur_4]
  -[engageModelInput setMed_dur_4:]
  -[engageModelInput med_dur_8]
  -[engageModelInput setMed_dur_8:]
  -[engageModelInput med_dur_16]
  -[engageModelInput setMed_dur_16:]
  -[engageModelInput med_dur_24]
  -[engageModelInput setMed_dur_24:]
  -[engageModelInput cnt_dur_1]
  -[engageModelInput setCnt_dur_1:]
  -[engageModelInput cnt_dur_2]
  -[engageModelInput setCnt_dur_2:]
  -[engageModelInput cnt_dur_4]
  -[engageModelInput setCnt_dur_4:]
  -[engageModelInput cnt_dur_8]
  -[engageModelInput setCnt_dur_8:]
  -[engageModelInput cnt_dur_16]
  -[engageModelInput setCnt_dur_16:]
  -[engageModelInput cnt_dur_24]
  -[engageModelInput setCnt_dur_24:]
  -[engageModelInput std_dur_1]
  -[engageModelInput setStd_dur_1:]
  -[engageModelInput std_dur_2]
  -[engageModelInput setStd_dur_2:]
  -[engageModelInput std_dur_4]
  -[engageModelInput setStd_dur_4:]
  -[engageModelInput std_dur_8]
  -[engageModelInput setStd_dur_8:]
  -[engageModelInput std_dur_16]
  -[engageModelInput setStd_dur_16:]
  -[engageModelInput std_dur_24]
  -[engageModelInput setStd_dur_24:]


engageModelOutput : NSObject /usr/lib/libSystem.B.dylib <MLFeatureProvider>
 @property  long long engage
 @property  NSDictionary *classProbability
 @property  NSSet *featureNames

  // instance methods
  -[engageModelOutput featureNames]
  -[engageModelOutput featureValueForName:]
  -[engageModelOutput .cxx_destruct]
  -[engageModelOutput engage]
  -[engageModelOutput classProbability]
  -[engageModelOutput initWithEngage:classProbability:]
  -[engageModelOutput setEngage:]
  -[engageModelOutput setClassProbability:]


engageModel : NSObject /usr/lib/libSystem.B.dylib
 @property  MLModel *model

  // class methods
  +[engageModel URLOfModelInThisBundle]
  +[engageModel loadContentsOfURL:configuration:completionHandler:]
  +[engageModel loadWithConfiguration:completionHandler:]

  // instance methods
  -[engageModel predictionFromFeatures:options:error:]
  -[engageModel init]
  -[engageModel predictionsFromInputs:options:error:]
  -[engageModel .cxx_destruct]
  -[engageModel initWithContentsOfURL:error:]
  -[engageModel predictionFromFeatures:error:]
  -[engageModel initWithMLModel:]
  -[engageModel initWithContentsOfURL:configuration:error:]
  -[engageModel model]
  -[engageModel initWithConfiguration:error:]
  -[engageModel predictionFromPlugin_battery_level:time_from_plugin:med_dur_1:med_dur_2:med_dur_4:med_dur_8:med_dur_16:med_dur_24:cnt_dur_1:cnt_dur_2:cnt_dur_4:cnt_dur_8:cnt_dur_16:cnt_dur_24:std_dur_1:std_dur_2:std_dur_4:std_dur_8:std_dur_16:std_dur_24:error:]


watch_durationInput : NSObject /usr/lib/libSystem.B.dylib <MLFeatureProvider>
 @property  double plugin_hour
 @property  double plugin_battery_level
 @property  double time_from_plugin
 @property  double med_dur_1
 @property  double med_dur_2
 @property  double med_dur_4
 @property  double med_dur_8
 @property  double med_dur_16
 @property  double med_dur_24
 @property  double cnt_dur_1
 @property  double cnt_dur_2
 @property  double cnt_dur_4
 @property  double cnt_dur_8
 @property  double cnt_dur_16
 @property  double cnt_dur_24
 @property  double std_dur_1
 @property  double std_dur_2
 @property  double std_dur_4
 @property  double std_dur_8
 @property  double std_dur_16
 @property  double std_dur_24
 @property  NSSet *featureNames

  // instance methods
  -[watch_durationInput featureNames]
  -[watch_durationInput featureValueForName:]
  -[watch_durationInput plugin_battery_level]
  -[watch_durationInput setPlugin_battery_level:]
  -[watch_durationInput time_from_plugin]
  -[watch_durationInput setTime_from_plugin:]
  -[watch_durationInput med_dur_1]
  -[watch_durationInput setMed_dur_1:]
  -[watch_durationInput med_dur_2]
  -[watch_durationInput setMed_dur_2:]
  -[watch_durationInput med_dur_4]
  -[watch_durationInput setMed_dur_4:]
  -[watch_durationInput med_dur_8]
  -[watch_durationInput setMed_dur_8:]
  -[watch_durationInput med_dur_16]
  -[watch_durationInput setMed_dur_16:]
  -[watch_durationInput med_dur_24]
  -[watch_durationInput setMed_dur_24:]
  -[watch_durationInput cnt_dur_1]
  -[watch_durationInput setCnt_dur_1:]
  -[watch_durationInput cnt_dur_2]
  -[watch_durationInput setCnt_dur_2:]
  -[watch_durationInput cnt_dur_4]
  -[watch_durationInput setCnt_dur_4:]
  -[watch_durationInput cnt_dur_8]
  -[watch_durationInput setCnt_dur_8:]
  -[watch_durationInput cnt_dur_16]
  -[watch_durationInput setCnt_dur_16:]
  -[watch_durationInput cnt_dur_24]
  -[watch_durationInput setCnt_dur_24:]
  -[watch_durationInput std_dur_1]
  -[watch_durationInput setStd_dur_1:]
  -[watch_durationInput std_dur_2]
  -[watch_durationInput setStd_dur_2:]
  -[watch_durationInput std_dur_4]
  -[watch_durationInput setStd_dur_4:]
  -[watch_durationInput std_dur_8]
  -[watch_durationInput setStd_dur_8:]
  -[watch_durationInput std_dur_16]
  -[watch_durationInput setStd_dur_16:]
  -[watch_durationInput std_dur_24]
  -[watch_durationInput setStd_dur_24:]
  -[watch_durationInput initWithPlugin_hour:plugin_battery_level:time_from_plugin:med_dur_1:med_dur_2:med_dur_4:med_dur_8:med_dur_16:med_dur_24:cnt_dur_1:cnt_dur_2:cnt_dur_4:cnt_dur_8:cnt_dur_16:cnt_dur_24:std_dur_1:std_dur_2:std_dur_4:std_dur_8:std_dur_16:std_dur_24:]
  -[watch_durationInput plugin_hour]
  -[watch_durationInput setPlugin_hour:]


watch_durationOutput : NSObject /usr/lib/libSystem.B.dylib <MLFeatureProvider>
 @property  double duration_pred
 @property  NSSet *featureNames

  // instance methods
  -[watch_durationOutput featureNames]
  -[watch_durationOutput featureValueForName:]
  -[watch_durationOutput initWithDuration_pred:]
  -[watch_durationOutput duration_pred]
  -[watch_durationOutput setDuration_pred:]


watch_duration : NSObject /usr/lib/libSystem.B.dylib
 @property  MLModel *model

  // class methods
  +[watch_duration URLOfModelInThisBundle]
  +[watch_duration loadContentsOfURL:configuration:completionHandler:]
  +[watch_duration loadWithConfiguration:completionHandler:]

  // instance methods
  -[watch_duration predictionFromFeatures:options:error:]
  -[watch_duration init]
  -[watch_duration predictionsFromInputs:options:error:]
  -[watch_duration .cxx_destruct]
  -[watch_duration initWithContentsOfURL:error:]
  -[watch_duration predictionFromFeatures:error:]
  -[watch_duration initWithMLModel:]
  -[watch_duration initWithContentsOfURL:configuration:error:]
  -[watch_duration model]
  -[watch_duration initWithConfiguration:error:]
  -[watch_duration predictionFromPlugin_hour:plugin_battery_level:time_from_plugin:med_dur_1:med_dur_2:med_dur_4:med_dur_8:med_dur_16:med_dur_24:cnt_dur_1:cnt_dur_2:cnt_dur_4:cnt_dur_8:cnt_dur_16:cnt_dur_24:std_dur_1:std_dur_2:std_dur_4:std_dur_8:std_dur_16:std_dur_24:error:]


watch_engageInput : NSObject /usr/lib/libSystem.B.dylib <MLFeatureProvider>
 @property  double plugin_hour
 @property  double plugin_battery_level
 @property  double time_from_plugin
 @property  double med_dur_1
 @property  double med_dur_2
 @property  double med_dur_4
 @property  double med_dur_8
 @property  double med_dur_16
 @property  double med_dur_24
 @property  double cnt_dur_1
 @property  double cnt_dur_2
 @property  double cnt_dur_4
 @property  double cnt_dur_8
 @property  double cnt_dur_16
 @property  double cnt_dur_24
 @property  double std_dur_1
 @property  double std_dur_2
 @property  double std_dur_4
 @property  double std_dur_8
 @property  double std_dur_16
 @property  double std_dur_24
 @property  NSSet *featureNames

  // instance methods
  -[watch_engageInput featureNames]
  -[watch_engageInput featureValueForName:]
  -[watch_engageInput plugin_battery_level]
  -[watch_engageInput setPlugin_battery_level:]
  -[watch_engageInput time_from_plugin]
  -[watch_engageInput setTime_from_plugin:]
  -[watch_engageInput med_dur_1]
  -[watch_engageInput setMed_dur_1:]
  -[watch_engageInput med_dur_2]
  -[watch_engageInput setMed_dur_2:]
  -[watch_engageInput med_dur_4]
  -[watch_engageInput setMed_dur_4:]
  -[watch_engageInput med_dur_8]
  -[watch_engageInput setMed_dur_8:]
  -[watch_engageInput med_dur_16]
  -[watch_engageInput setMed_dur_16:]
  -[watch_engageInput med_dur_24]
  -[watch_engageInput setMed_dur_24:]
  -[watch_engageInput cnt_dur_1]
  -[watch_engageInput setCnt_dur_1:]
  -[watch_engageInput cnt_dur_2]
  -[watch_engageInput setCnt_dur_2:]
  -[watch_engageInput cnt_dur_4]
  -[watch_engageInput setCnt_dur_4:]
  -[watch_engageInput cnt_dur_8]
  -[watch_engageInput setCnt_dur_8:]
  -[watch_engageInput cnt_dur_16]
  -[watch_engageInput setCnt_dur_16:]
  -[watch_engageInput cnt_dur_24]
  -[watch_engageInput setCnt_dur_24:]
  -[watch_engageInput std_dur_1]
  -[watch_engageInput setStd_dur_1:]
  -[watch_engageInput std_dur_2]
  -[watch_engageInput setStd_dur_2:]
  -[watch_engageInput std_dur_4]
  -[watch_engageInput setStd_dur_4:]
  -[watch_engageInput std_dur_8]
  -[watch_engageInput setStd_dur_8:]
  -[watch_engageInput std_dur_16]
  -[watch_engageInput setStd_dur_16:]
  -[watch_engageInput std_dur_24]
  -[watch_engageInput setStd_dur_24:]
  -[watch_engageInput initWithPlugin_hour:plugin_battery_level:time_from_plugin:med_dur_1:med_dur_2:med_dur_4:med_dur_8:med_dur_16:med_dur_24:cnt_dur_1:cnt_dur_2:cnt_dur_4:cnt_dur_8:cnt_dur_16:cnt_dur_24:std_dur_1:std_dur_2:std_dur_4:std_dur_8:std_dur_16:std_dur_24:]
  -[watch_engageInput plugin_hour]
  -[watch_engageInput setPlugin_hour:]


watch_engageOutput : NSObject /usr/lib/libSystem.B.dylib <MLFeatureProvider>
 @property  long long engage
 @property  NSDictionary *classProbability
 @property  NSSet *featureNames

  // instance methods
  -[watch_engageOutput featureNames]
  -[watch_engageOutput featureValueForName:]
  -[watch_engageOutput .cxx_destruct]
  -[watch_engageOutput engage]
  -[watch_engageOutput classProbability]
  -[watch_engageOutput initWithEngage:classProbability:]
  -[watch_engageOutput setEngage:]
  -[watch_engageOutput setClassProbability:]


watch_engage : NSObject /usr/lib/libSystem.B.dylib
 @property  MLModel *model

  // class methods
  +[watch_engage URLOfModelInThisBundle]
  +[watch_engage loadContentsOfURL:configuration:completionHandler:]
  +[watch_engage loadWithConfiguration:completionHandler:]

  // instance methods
  -[watch_engage predictionFromFeatures:options:error:]
  -[watch_engage init]
  -[watch_engage predictionsFromInputs:options:error:]
  -[watch_engage .cxx_destruct]
  -[watch_engage initWithContentsOfURL:error:]
  -[watch_engage predictionFromFeatures:error:]
  -[watch_engage initWithMLModel:]
  -[watch_engage initWithContentsOfURL:configuration:error:]
  -[watch_engage model]
  -[watch_engage initWithConfiguration:error:]
  -[watch_engage predictionFromPlugin_hour:plugin_battery_level:time_from_plugin:med_dur_1:med_dur_2:med_dur_4:med_dur_8:med_dur_16:med_dur_24:cnt_dur_1:cnt_dur_2:cnt_dur_4:cnt_dur_8:cnt_dur_16:cnt_dur_24:std_dur_1:std_dur_2:std_dur_4:std_dur_8:std_dur_16:std_dur_24:error:]


gbtClassifierInput : NSObject /usr/lib/libSystem.B.dylib <MLFeatureProvider>
 @property  double plugin_hour
 @property  double plugin_battery_level
 @property  double device_activity
 @property  double hour
 @property  double battery_level
 @property  double heuristic_bin
 @property  double plugin_location
 @property  double hour_bin_id
 @property  double time_from_plugin
 @property  double avg_dur
 @property  double cnt_dur
 @property  NSSet *featureNames

  // instance methods
  -[gbtClassifierInput hour]
  -[gbtClassifierInput featureNames]
  -[gbtClassifierInput featureValueForName:]
  -[gbtClassifierInput avg_dur]
  -[gbtClassifierInput cnt_dur]
  -[gbtClassifierInput setHour:]
  -[gbtClassifierInput plugin_battery_level]
  -[gbtClassifierInput setPlugin_battery_level:]
  -[gbtClassifierInput time_from_plugin]
  -[gbtClassifierInput setTime_from_plugin:]
  -[gbtClassifierInput plugin_hour]
  -[gbtClassifierInput setPlugin_hour:]
  -[gbtClassifierInput initWithPlugin_hour:plugin_battery_level:device_activity:hour:battery_level:heuristic_bin:plugin_location:hour_bin_id:time_from_plugin:avg_dur:cnt_dur:]
  -[gbtClassifierInput device_activity]
  -[gbtClassifierInput setDevice_activity:]
  -[gbtClassifierInput battery_level]
  -[gbtClassifierInput setBattery_level:]
  -[gbtClassifierInput heuristic_bin]
  -[gbtClassifierInput setHeuristic_bin:]
  -[gbtClassifierInput plugin_location]
  -[gbtClassifierInput setPlugin_location:]
  -[gbtClassifierInput hour_bin_id]
  -[gbtClassifierInput setHour_bin_id:]
  -[gbtClassifierInput setAvg_dur:]
  -[gbtClassifierInput setCnt_dur:]


gbtClassifierOutput : NSObject /usr/lib/libSystem.B.dylib <MLFeatureProvider>
 @property  long long wait_to_charge
 @property  NSDictionary *classProbability
 @property  NSSet *featureNames

  // instance methods
  -[gbtClassifierOutput featureNames]
  -[gbtClassifierOutput featureValueForName:]
  -[gbtClassifierOutput .cxx_destruct]
  -[gbtClassifierOutput classProbability]
  -[gbtClassifierOutput setClassProbability:]
  -[gbtClassifierOutput initWithWait_to_charge:classProbability:]
  -[gbtClassifierOutput wait_to_charge]
  -[gbtClassifierOutput setWait_to_charge:]


gbtClassifier : NSObject /usr/lib/libSystem.B.dylib
 @property  MLModel *model

  // class methods
  +[gbtClassifier URLOfModelInThisBundle]
  +[gbtClassifier loadContentsOfURL:configuration:completionHandler:]
  +[gbtClassifier loadWithConfiguration:completionHandler:]

  // instance methods
  -[gbtClassifier predictionFromFeatures:options:error:]
  -[gbtClassifier init]
  -[gbtClassifier predictionsFromInputs:options:error:]
  -[gbtClassifier .cxx_destruct]
  -[gbtClassifier initWithContentsOfURL:error:]
  -[gbtClassifier predictionFromFeatures:error:]
  -[gbtClassifier initWithMLModel:]
  -[gbtClassifier initWithContentsOfURL:configuration:error:]
  -[gbtClassifier model]
  -[gbtClassifier initWithConfiguration:error:]
  -[gbtClassifier predictionFromPlugin_hour:plugin_battery_level:device_activity:hour:battery_level:heuristic_bin:plugin_location:hour_bin_id:time_from_plugin:avg_dur:cnt_dur:error:]


gbtRegressorInput : NSObject /usr/lib/libSystem.B.dylib <MLFeatureProvider>
 @property  double plugin_hour
 @property  double plugin_battery_level
 @property  double hour
 @property  double time_from_plugin
 @property  double cnt_dur_1
 @property  double avg_dur_1
 @property  NSSet *featureNames

  // instance methods
  -[gbtRegressorInput hour]
  -[gbtRegressorInput featureNames]
  -[gbtRegressorInput featureValueForName:]
  -[gbtRegressorInput setHour:]
  -[gbtRegressorInput plugin_battery_level]
  -[gbtRegressorInput setPlugin_battery_level:]
  -[gbtRegressorInput time_from_plugin]
  -[gbtRegressorInput setTime_from_plugin:]
  -[gbtRegressorInput cnt_dur_1]
  -[gbtRegressorInput setCnt_dur_1:]
  -[gbtRegressorInput plugin_hour]
  -[gbtRegressorInput setPlugin_hour:]
  -[gbtRegressorInput initWithPlugin_hour:plugin_battery_level:hour:time_from_plugin:cnt_dur_1:avg_dur_1:]
  -[gbtRegressorInput avg_dur_1]
  -[gbtRegressorInput setAvg_dur_1:]


gbtRegressorOutput : NSObject /usr/lib/libSystem.B.dylib <MLFeatureProvider>
 @property  double smart_charge_duration
 @property  NSSet *featureNames

  // instance methods
  -[gbtRegressorOutput featureNames]
  -[gbtRegressorOutput featureValueForName:]
  -[gbtRegressorOutput initWithSmart_charge_duration:]
  -[gbtRegressorOutput smart_charge_duration]
  -[gbtRegressorOutput setSmart_charge_duration:]


gbtRegressor : NSObject /usr/lib/libSystem.B.dylib
 @property  MLModel *model

  // class methods
  +[gbtRegressor URLOfModelInThisBundle]
  +[gbtRegressor loadContentsOfURL:configuration:completionHandler:]
  +[gbtRegressor loadWithConfiguration:completionHandler:]

  // instance methods
  -[gbtRegressor predictionFromFeatures:options:error:]
  -[gbtRegressor init]
  -[gbtRegressor predictionsFromInputs:options:error:]
  -[gbtRegressor .cxx_destruct]
  -[gbtRegressor initWithContentsOfURL:error:]
  -[gbtRegressor predictionFromFeatures:error:]
  -[gbtRegressor initWithMLModel:]
  -[gbtRegressor initWithContentsOfURL:configuration:error:]
  -[gbtRegressor model]
  -[gbtRegressor initWithConfiguration:error:]
  -[gbtRegressor predictionFromPlugin_hour:plugin_battery_level:hour:time_from_plugin:cnt_dur_1:avg_dur_1:error:]


audioAccessory_lower_usage_engInput : NSObject /usr/lib/libSystem.B.dylib <MLFeatureProvider>
 @property  double time_between_uses_med_dur_1
 @property  double time_between_uses_med_dur_2
 @property  double time_between_uses_med_dur_4
 @property  double time_between_uses_med_dur_24
 @property  double time_between_uses_std_dur_1
 @property  double time_between_uses_std_dur_2
 @property  double time_between_uses_std_dur_4
 @property  double time_between_uses_std_dur_24
 @property  double hour
 @property  double is_weekend
 @property  double hour_plus_0
 @property  double hour_plus_1
 @property  double hour_plus_2
 @property  double hour_plus_3
 @property  double hour_plus_4
 @property  double hour_plus_5
 @property  double hours_until_use
 @property  double meaningful_undercharge_rolling_average
 @property  NSSet *featureNames

  // instance methods
  -[audioAccessory_lower_usage_engInput hour]
  -[audioAccessory_lower_usage_engInput featureNames]
  -[audioAccessory_lower_usage_engInput featureValueForName:]
  -[audioAccessory_lower_usage_engInput setHour:]
  -[audioAccessory_lower_usage_engInput initWithTime_between_uses_med_dur_1:time_between_uses_med_dur_2:time_between_uses_med_dur_4:time_between_uses_med_dur_24:time_between_uses_std_dur_1:time_between_uses_std_dur_2:time_between_uses_std_dur_4:time_between_uses_std_dur_24:hour:is_weekend:hour_plus_0:hour_plus_1:hour_plus_2:hour_plus_3:hour_plus_4:hour_plus_5:hours_until_use:meaningful_undercharge_rolling_average:]
  -[audioAccessory_lower_usage_engInput time_between_uses_med_dur_1]
  -[audioAccessory_lower_usage_engInput setTime_between_uses_med_dur_1:]
  -[audioAccessory_lower_usage_engInput time_between_uses_med_dur_2]
  -[audioAccessory_lower_usage_engInput setTime_between_uses_med_dur_2:]
  -[audioAccessory_lower_usage_engInput time_between_uses_med_dur_4]
  -[audioAccessory_lower_usage_engInput setTime_between_uses_med_dur_4:]
  -[audioAccessory_lower_usage_engInput time_between_uses_med_dur_24]
  -[audioAccessory_lower_usage_engInput setTime_between_uses_med_dur_24:]
  -[audioAccessory_lower_usage_engInput time_between_uses_std_dur_1]
  -[audioAccessory_lower_usage_engInput setTime_between_uses_std_dur_1:]
  -[audioAccessory_lower_usage_engInput time_between_uses_std_dur_2]
  -[audioAccessory_lower_usage_engInput setTime_between_uses_std_dur_2:]
  -[audioAccessory_lower_usage_engInput time_between_uses_std_dur_4]
  -[audioAccessory_lower_usage_engInput setTime_between_uses_std_dur_4:]
  -[audioAccessory_lower_usage_engInput time_between_uses_std_dur_24]
  -[audioAccessory_lower_usage_engInput setTime_between_uses_std_dur_24:]
  -[audioAccessory_lower_usage_engInput is_weekend]
  -[audioAccessory_lower_usage_engInput setIs_weekend:]
  -[audioAccessory_lower_usage_engInput hour_plus_0]
  -[audioAccessory_lower_usage_engInput setHour_plus_0:]
  -[audioAccessory_lower_usage_engInput hour_plus_1]
  -[audioAccessory_lower_usage_engInput setHour_plus_1:]
  -[audioAccessory_lower_usage_engInput hour_plus_2]
  -[audioAccessory_lower_usage_engInput setHour_plus_2:]
  -[audioAccessory_lower_usage_engInput hour_plus_3]
  -[audioAccessory_lower_usage_engInput setHour_plus_3:]
  -[audioAccessory_lower_usage_engInput hour_plus_4]
  -[audioAccessory_lower_usage_engInput setHour_plus_4:]
  -[audioAccessory_lower_usage_engInput hour_plus_5]
  -[audioAccessory_lower_usage_engInput setHour_plus_5:]
  -[audioAccessory_lower_usage_engInput hours_until_use]
  -[audioAccessory_lower_usage_engInput setHours_until_use:]
  -[audioAccessory_lower_usage_engInput meaningful_undercharge_rolling_average]
  -[audioAccessory_lower_usage_engInput setMeaningful_undercharge_rolling_average:]


audioAccessory_lower_usage_engOutput : NSObject /usr/lib/libSystem.B.dylib <MLFeatureProvider>
 @property  long long engage
 @property  NSDictionary *classProbability
 @property  NSSet *featureNames

  // instance methods
  -[audioAccessory_lower_usage_engOutput featureNames]
  -[audioAccessory_lower_usage_engOutput featureValueForName:]
  -[audioAccessory_lower_usage_engOutput .cxx_destruct]
  -[audioAccessory_lower_usage_engOutput engage]
  -[audioAccessory_lower_usage_engOutput classProbability]
  -[audioAccessory_lower_usage_engOutput initWithEngage:classProbability:]
  -[audioAccessory_lower_usage_engOutput setEngage:]
  -[audioAccessory_lower_usage_engOutput setClassProbability:]


audioAccessory_lower_usage_eng : NSObject /usr/lib/libSystem.B.dylib
 @property  MLModel *model

  // class methods
  +[audioAccessory_lower_usage_eng URLOfModelInThisBundle]
  +[audioAccessory_lower_usage_eng loadContentsOfURL:configuration:completionHandler:]
  +[audioAccessory_lower_usage_eng loadWithConfiguration:completionHandler:]

  // instance methods
  -[audioAccessory_lower_usage_eng predictionFromFeatures:options:error:]
  -[audioAccessory_lower_usage_eng init]
  -[audioAccessory_lower_usage_eng predictionsFromInputs:options:error:]
  -[audioAccessory_lower_usage_eng .cxx_destruct]
  -[audioAccessory_lower_usage_eng initWithContentsOfURL:error:]
  -[audioAccessory_lower_usage_eng predictionFromFeatures:error:]
  -[audioAccessory_lower_usage_eng initWithMLModel:]
  -[audioAccessory_lower_usage_eng initWithContentsOfURL:configuration:error:]
  -[audioAccessory_lower_usage_eng model]
  -[audioAccessory_lower_usage_eng initWithConfiguration:error:]
  -[audioAccessory_lower_usage_eng predictionFromTime_between_uses_med_dur_1:time_between_uses_med_dur_2:time_between_uses_med_dur_4:time_between_uses_med_dur_24:time_between_uses_std_dur_1:time_between_uses_std_dur_2:time_between_uses_std_dur_4:time_between_uses_std_dur_24:hour:is_weekend:hour_plus_0:hour_plus_1:hour_plus_2:hour_plus_3:hour_plus_4:hour_plus_5:hours_until_use:meaningful_undercharge_rolling_average:error:]


shallow_modelInput : NSObject /usr/lib/libSystem.B.dylib <MLFeatureProvider>
 @property  double plugin_battery_level
 @property  double battery_duration_1
 @property  double battery_duration_2
 @property  double battery_duration_3
 @property  double battery_duration_4
 @property  NSSet *featureNames

  // instance methods
  -[shallow_modelInput featureNames]
  -[shallow_modelInput featureValueForName:]
  -[shallow_modelInput plugin_battery_level]
  -[shallow_modelInput setPlugin_battery_level:]
  -[shallow_modelInput initWithPlugin_battery_level:battery_duration_1:battery_duration_2:battery_duration_3:battery_duration_4:]
  -[shallow_modelInput battery_duration_1]
  -[shallow_modelInput setBattery_duration_1:]
  -[shallow_modelInput battery_duration_2]
  -[shallow_modelInput setBattery_duration_2:]
  -[shallow_modelInput battery_duration_3]
  -[shallow_modelInput setBattery_duration_3:]
  -[shallow_modelInput battery_duration_4]
  -[shallow_modelInput setBattery_duration_4:]


shallow_modelOutput : NSObject /usr/lib/libSystem.B.dylib <MLFeatureProvider>
 @property  long long next_discharge_is_shallow
 @property  NSDictionary *classProbability
 @property  NSSet *featureNames

  // instance methods
  -[shallow_modelOutput featureNames]
  -[shallow_modelOutput featureValueForName:]
  -[shallow_modelOutput .cxx_destruct]
  -[shallow_modelOutput classProbability]
  -[shallow_modelOutput setClassProbability:]
  -[shallow_modelOutput initWithNext_discharge_is_shallow:classProbability:]
  -[shallow_modelOutput next_discharge_is_shallow]
  -[shallow_modelOutput setNext_discharge_is_shallow:]


shallow_model : NSObject /usr/lib/libSystem.B.dylib
 @property  MLModel *model

  // class methods
  +[shallow_model URLOfModelInThisBundle]
  +[shallow_model loadContentsOfURL:configuration:completionHandler:]
  +[shallow_model loadWithConfiguration:completionHandler:]

  // instance methods
  -[shallow_model predictionFromFeatures:options:error:]
  -[shallow_model init]
  -[shallow_model predictionsFromInputs:options:error:]
  -[shallow_model .cxx_destruct]
  -[shallow_model initWithContentsOfURL:error:]
  -[shallow_model predictionFromFeatures:error:]
  -[shallow_model initWithMLModel:]
  -[shallow_model initWithContentsOfURL:configuration:error:]
  -[shallow_model model]
  -[shallow_model initWithConfiguration:error:]
  -[shallow_model predictionFromPlugin_battery_level:battery_duration_1:battery_duration_2:battery_duration_3:battery_duration_4:error:]


(PowerUIAdditions)
	// instance methods
	-[(PowerUIAdditions) mean]
	-[(PowerUIAdditions) median]
	-[(PowerUIAdditions) standardDeviation]
	-[(PowerUIAdditions) percentile:]

_DKEvent(PowerUIAdditions)
	// instance methods
	-[_DKEvent(PowerUIAdditions) duration]
	-[_DKEvent(PowerUIAdditions) includesDate:]

01 00 0500 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLLocationManager 
01 00 0900 /System/Library/Frameworks/EventKit.framework/EventKit: EKEvent 
01 00 0900 /System/Library/Frameworks/EventKit.framework/EventKit: EKEventStore 
01 00 0600 /System/Library/Frameworks/CoreML.framework/CoreML: MLArrayBatchProvider 
01 00 0600 /System/Library/Frameworks/CoreML.framework/CoreML: MLCompiler 
01 00 0600 /System/Library/Frameworks/CoreML.framework/CoreML: MLCompilerOptions 
01 00 0600 /System/Library/Frameworks/CoreML.framework/CoreML: MLDictionaryFeatureProvider 
01 00 0600 /System/Library/Frameworks/CoreML.framework/CoreML: MLFeatureValue 
01 00 0600 /System/Library/Frameworks/CoreML.framework/CoreML: MLModel 
01 00 0600 /System/Library/Frameworks/CoreML.framework/CoreML: MLModelConfiguration 
01 00 0600 /System/Library/Frameworks/CoreML.framework/CoreML: MLMultiArray 
01 00 0600 /System/Library/Frameworks/CoreML.framework/CoreML: MLPredictionOptions 
01 00 1200 /System/Library/PrivateFrameworks/MobileTimer.framework/MobileTimer: MTAlarm 
01 00 1200 /System/Library/PrivateFrameworks/MobileTimer.framework/MobileTimer: MTAlarmManager 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCompoundPredicate 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateInterval 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDistributedNotificationCenter 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSLock 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1500 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListener 
01 00 0d00 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPassLibrary 
01 00 0800 /System/Library/PrivateFrameworks/CoreRoutine.framework/CoreRoutine: RTRoutineManager 
01 00 0700 /System/Library/PrivateFrameworks/CoreSuggestions.framework/CoreSuggestions: SGEventMetadata 
01 00 1300 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRIClient 
01 00 1400 /System/Library/PrivateFrameworks/TrialProto.framework/TrialProto: TRINamespace 
01 00 0f00 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNMutableNotificationContent 
01 00 0f00 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNNotificationIcon 
01 00 0f00 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNNotificationRequest 
01 00 0f00 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNUserNotificationCenter 
01 00 0300 /System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet: _CDBatterySaver 
01 00 0400 /System/Library/PrivateFrameworks/CoreDuetContext.framework/CoreDuetContext: _CDClientContext 
01 00 0400 /System/Library/PrivateFrameworks/CoreDuetContext.framework/CoreDuetContext: _CDContextQueries 
01 00 0400 /System/Library/PrivateFrameworks/CoreDuetContext.framework/CoreDuetContext: _CDContextualChangeRegistration 
01 00 0400 /System/Library/PrivateFrameworks/CoreDuetContext.framework/CoreDuetContext: _CDContextualKeyPath 
01 00 0400 /System/Library/PrivateFrameworks/CoreDuetContext.framework/CoreDuetContext: _CDContextualPredicate 
01 00 0300 /System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet: _DKEvent 
01 00 0300 /System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet: _DKEventQuery 
01 00 0300 /System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet: _DKEventStream 
01 00 0300 /System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet: _DKIntentMetadataKey 
01 00 0300 /System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet: _DKKnowledgeStorage 
01 00 0300 /System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet: _DKKnowledgeStore 
01 00 0300 /System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet: _DKQuery 
01 00 0300 /System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet: _DKSystemEventStreams 
