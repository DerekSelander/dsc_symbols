|| __DATA.__objc_data _OBJC_CLASS_$_PowerUIBatteryMitigationManager
|| __DATA.__objc_data _OBJC_CLASS_$_PowerUIDefines
|| __DATA.__objc_data _OBJC_CLASS_$_PowerUIWakeRequestSignalMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_PowerUIBatteryMitigationManager
|| __DATA.__objc_data _OBJC_METACLASS_$_PowerUIDefines
|| __DATA_CONST.__const _PowerUIErrorDomain
|| __DATA_CONST.__const _PowerUISmartChargeClientCallisto
|| __DATA_CONST.__const _PowerUISmartChargeClientPTOTool
|| __DATA_CONST.__const _PowerUISmartChargeClientSettings
|| __DATA_CONST.__const _PowerUISmartChargeStatusHasChangedNote
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PowerUIAlarmSignalMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PowerUICalendarSignalMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PowerUIHistogramPredictor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PowerUILPMNotifier
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PowerUILocationSignalMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PowerUIMLClassifierModelPredictor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PowerUIMLRegressorModelPredictor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PowerUIMLTwoStageModelPredictor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PowerUISmartChargeClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PowerUISmartChargeManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PowerUISmartChargeUtilities
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PowerUIUPOManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PowerUIWalletSignalMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PowerUIAlarmSignalMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PowerUICalendarSignalMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PowerUIHistogramPredictor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PowerUILPMNotifier
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PowerUILocationSignalMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PowerUIMLClassifierModelPredictor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PowerUIMLRegressorModelPredictor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PowerUIMLTwoStageModelPredictor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PowerUISmartChargeClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PowerUISmartChargeManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PowerUISmartChargeUtilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PowerUIUPOManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PowerUIWakeRequestSignalMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PowerUIWalletSignalMonitor
|| __TEXT.__const _PowerUIVersionNumber
|| __TEXT.__const _PowerUIVersionString
__ AggregateDictionary: _ADClientSetValueForScalarKey
__ CoreAnalytics: _AnalyticsSendEvent
__ CoreAnalytics: _AnalyticsSendEventLazy
__ CoreDuet: _OBJC_CLASS_$__CDBatterySaver
__ CoreDuet: _OBJC_CLASS_$__DKEvent
__ CoreDuet: _OBJC_CLASS_$__DKEventQuery
__ CoreDuet: _OBJC_CLASS_$__DKEventStream
__ CoreDuet: _OBJC_CLASS_$__DKIntentMetadataKey
__ CoreDuet: _OBJC_CLASS_$__DKKnowledgeStore
__ CoreDuet: _OBJC_CLASS_$__DKPredictionQuery
__ CoreDuet: _OBJC_CLASS_$__DKPredictionTimeline
__ CoreDuet: _OBJC_CLASS_$__DKQuery
__ CoreDuet: _OBJC_CLASS_$__DKSystemEventStreams
__ CoreDuet: _kLPMSourceReenableBulletin
__ CoreDuetContext: _OBJC_CLASS_$__CDClientContext
__ CoreDuetContext: _OBJC_CLASS_$__CDContextQueries
__ CoreDuetContext: _OBJC_CLASS_$__CDContextualChangeRegistration
__ CoreDuetContext: _OBJC_CLASS_$__CDContextualKeyPath
__ CoreDuetContext: _OBJC_CLASS_$__CDContextualPredicate
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFPreferencesCopyValue
__ CoreFoundation: _CFPreferencesSetMultiple
__ CoreFoundation: _CFPreferencesSetValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFUserNotificationCancel
__ CoreFoundation: _CFUserNotificationCreate
__ CoreFoundation: _CFUserNotificationDisplayAlert
__ CoreFoundation: _CFUserNotificationReceiveResponse
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__
__ CoreFoundation: ___NSDictionary0__
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanFalse
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFPreferencesCurrentHost
__ CoreFoundation: _kCFUserNotificationAlertHeaderKey
__ CoreFoundation: _kCFUserNotificationAlertMessageKey
__ CoreFoundation: _kCFUserNotificationAlertTopMostKey
__ CoreLocation: _OBJC_CLASS_$_CLLocationManager
__ CoreML: _MLModelCreatorDefinedKey
__ CoreML: _OBJC_CLASS_$_MLArrayBatchProvider
__ CoreML: _OBJC_CLASS_$_MLCompiler
__ CoreML: _OBJC_CLASS_$_MLDictionaryFeatureProvider
__ CoreML: _OBJC_CLASS_$_MLFeatureValue
__ CoreML: _OBJC_CLASS_$_MLModel
__ CoreML: _OBJC_CLASS_$_MLMultiArray
__ CoreML: _OBJC_CLASS_$_MLPredictionOptions
__ CoreRoutine: _OBJC_CLASS_$_RTRoutineManager
__ CoreSuggestions: _OBJC_CLASS_$_SGEventMetadata
__ EventKit: _EKEventStoreChangedNotification
__ EventKit: _OBJC_CLASS_$_EKEvent
__ EventKit: _OBJC_CLASS_$_EKEventStore
__ Foundation: _NSStringFromSelector
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSCompoundPredicate
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSDateInterval
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_CLASS_$_NSXPCListener
__ IOKit: _IOObjectRelease
__ IOKit: _IORegistryEntryCreateCFProperties
__ IOKit: _IORegistryEntrySetCFProperties
__ IOKit: _IOServiceGetMatchingService
__ IOKit: _IOServiceMatching
__ IOKit: _kIOMasterPortDefault
__ MobileTimer: _MTAlarmManagerNextAlarmChanged
__ MobileTimer: _MTAlarmRepeatScheduleFromDay
__ MobileTimer: _OBJC_CLASS_$_MTAlarm
__ MobileTimer: _OBJC_CLASS_$_MTAlarmManager
__ PassKit: _OBJC_CLASS_$_PKPassLibrary
__ PassKit: _PKPassLibraryDidChangeNotification
__ PowerLog: _PLLogRegisteredEvent
__ SpringBoardServices: _ADClientAddValueForScalarKey
__ SpringBoardServices: _SBGetIsAlive
__ SpringBoardServices: _SBSSpringBoardBlockableServerPort
__ Trial: _OBJC_CLASS_$_TRIClient
__ UserNotifications: _OBJC_CLASS_$_UNMutableNotificationContent
__ UserNotifications: _OBJC_CLASS_$_UNNotificationIcon
__ UserNotifications: _OBJC_CLASS_$_UNNotificationRequest
__ UserNotifications: _OBJC_CLASS_$_UNUserNotificationCenter
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: _XPC_ACTIVITY_CHECK_IN
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __xpc_event_key_name
__ libSystem.B.dylib: _arc4random_uniform
__ libSystem.B.dylib: _dispatch_activate
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dispatch_walltime
__ libSystem.B.dylib: _exit
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _notify_is_valid_token
__ libSystem.B.dylib: _notify_post
__ libSystem.B.dylib: _notify_register_check
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_transaction_create
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _time
__ libSystem.B.dylib: _xpc_activity_get_state
__ libSystem.B.dylib: _xpc_activity_register
__ libSystem.B.dylib: _xpc_activity_should_defer
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_get_string
__ libSystem.B.dylib: _xpc_dictionary_set_date
__ libSystem.B.dylib: _xpc_set_event
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
PowerUILPMNotifier : NSObject /usr/lib/libSystem.B.dylib <UNUserNotificationCenterDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PowerUILPMNotifier sharedInstance]

  // instance methods
  -[PowerUILPMNotifier init]
  -[PowerUILPMNotifier .cxx_destruct]
  -[PowerUILPMNotifier userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:]
  -[PowerUILPMNotifier autoDisabledNotificationRequest]
  -[PowerUILPMNotifier displayAutoDisabledNotification]
  -[PowerUILPMNotifier removeAutoDisabledNotification]
  -[PowerUILPMNotifier displayFirstUseNotification]


PowerUIMLTwoStageModelPredictor : NSObject /usr/lib/libSystem.B.dylib <PowerUIPredictor>
 @property  NSObject<OS_os_log> *log
 @property  NSObject<OS_os_log> *statusLog
 @property  double threshold
 @property  <_DKKnowledgeQuerying> *store
 @property  double pluginBatteryLevel
 @property  <_CDUserContext> *context
 @property  NSDate *deadline
 @property  double lastEngagementResult
 @property  double lastDurationResult
 @property  TRIClient *trialClient
 @property  {os_unfair_lock_s=I} lock
 @property  TRITrackingId *trialTrackingID
 @property  NSString *treatmentID
 @property  NSString *experimentID
 @property  MLModel *engageModel
 @property  MLModel *durationModel
 @property  NSDate *pluginDate
 @property  double adjustedDuration

  // instance methods
  -[PowerUIMLTwoStageModelPredictor init]
  -[PowerUIMLTwoStageModelPredictor lock]
  -[PowerUIMLTwoStageModelPredictor .cxx_destruct]
  -[PowerUIMLTwoStageModelPredictor context]
  -[PowerUIMLTwoStageModelPredictor store]
  -[PowerUIMLTwoStageModelPredictor setContext:]
  -[PowerUIMLTwoStageModelPredictor threshold]
  -[PowerUIMLTwoStageModelPredictor setThreshold:]
  -[PowerUIMLTwoStageModelPredictor log]
  -[PowerUIMLTwoStageModelPredictor setStore:]
  -[PowerUIMLTwoStageModelPredictor setLog:]
  -[PowerUIMLTwoStageModelPredictor setLock:]
  -[PowerUIMLTwoStageModelPredictor modelVersion]
  -[PowerUIMLTwoStageModelPredictor currentBatteryLevel]
  -[PowerUIMLTwoStageModelPredictor treatmentID]
  -[PowerUIMLTwoStageModelPredictor experimentID]
  -[PowerUIMLTwoStageModelPredictor setExperimentID:]
  -[PowerUIMLTwoStageModelPredictor loadTrialUpdates]
  -[PowerUIMLTwoStageModelPredictor loadAdjustedHours]
  -[PowerUIMLTwoStageModelPredictor loadThreshold]
  -[PowerUIMLTwoStageModelPredictor loadTrialEngageModelByDeletingExistingModel:]
  -[PowerUIMLTwoStageModelPredictor loadTrialDurationModelByDeletingExistingModel:]
  -[PowerUIMLTwoStageModelPredictor resetSavedDeadline]
  -[PowerUIMLTwoStageModelPredictor loadModelFromPath:deleteExistingFiles:]
  -[PowerUIMLTwoStageModelPredictor durationModelVersion]
  -[PowerUIMLTwoStageModelPredictor batteryLevelAtDate:]
  -[PowerUIMLTwoStageModelPredictor timeStringFromDate:]
  -[PowerUIMLTwoStageModelPredictor getHourBinID:forHourBin:]
  -[PowerUIMLTwoStageModelPredictor meanOf:]
  -[PowerUIMLTwoStageModelPredictor adjustedChargingDecision:withPluginDate:withPluginBatteryLevel:forDate:forStatus:]
  -[PowerUIMLTwoStageModelPredictor chargingDecision:withPluginDate:withPluginBatteryLevel:forDate:withLog:]
  -[PowerUIMLTwoStageModelPredictor events:forHourBin:pluginDate:]
  -[PowerUIMLTwoStageModelPredictor standardDeviationOf:]
  -[PowerUIMLTwoStageModelPredictor medianOf:]
  -[PowerUIMLTwoStageModelPredictor getPluginEventsBefore:withMinimumDuration:]
  -[PowerUIMLTwoStageModelPredictor getInputFeatures:events:pluginBatteryLevel:timeFromPlugin:pluginDate:pluginHour:withLog:]
  -[PowerUIMLTwoStageModelPredictor predictFullChargeDateWithBatteryLevel:]
  -[PowerUIMLTwoStageModelPredictor arrayWithShape:values:type:]
  -[PowerUIMLTwoStageModelPredictor engagementModelVersion]
  -[PowerUIMLTwoStageModelPredictor engagementModelBoltID]
  -[PowerUIMLTwoStageModelPredictor durationModelBoltID]
  -[PowerUIMLTwoStageModelPredictor setPluginDate:]
  -[PowerUIMLTwoStageModelPredictor deleteCompiledModels]
  -[PowerUIMLTwoStageModelPredictor pluginDate]
  -[PowerUIMLTwoStageModelPredictor pluginBatteryLevel]
  -[PowerUIMLTwoStageModelPredictor setPluginBatteryLevel:]
  -[PowerUIMLTwoStageModelPredictor lastEngagementResult]
  -[PowerUIMLTwoStageModelPredictor setLastEngagementResult:]
  -[PowerUIMLTwoStageModelPredictor lastDurationResult]
  -[PowerUIMLTwoStageModelPredictor setLastDurationResult:]
  -[PowerUIMLTwoStageModelPredictor adjustedDuration]
  -[PowerUIMLTwoStageModelPredictor setAdjustedDuration:]
  -[PowerUIMLTwoStageModelPredictor trialTrackingID]
  -[PowerUIMLTwoStageModelPredictor setTrialTrackingID:]
  -[PowerUIMLTwoStageModelPredictor setTreatmentID:]
  -[PowerUIMLTwoStageModelPredictor statusLog]
  -[PowerUIMLTwoStageModelPredictor setStatusLog:]
  -[PowerUIMLTwoStageModelPredictor deadline]
  -[PowerUIMLTwoStageModelPredictor setDeadline:]
  -[PowerUIMLTwoStageModelPredictor trialClient]
  -[PowerUIMLTwoStageModelPredictor setTrialClient:]
  -[PowerUIMLTwoStageModelPredictor engageModel]
  -[PowerUIMLTwoStageModelPredictor durationModel]


PowerUIUPOManager : NSObject /usr/lib/libSystem.B.dylib
 @property  NSBundle *bundle
 @property  UNUserNotificationCenter *userNotificationCenter
 @property  BOOL dataProviderLoaded
 @property  NSUserDefaults *defaults
 @property  <_CDContext> *contextStore
 @property  int unlockToken
 @property  int mitigationsDisabledToken
 @property  NSDate *lastTimeLocked
 @property  NSDate *upoTime
 @property  NSObject<OS_os_log> *log
 @property  NSObject<OS_dispatch_queue> *lockNotificationQueue
 @property  NSObject<OS_dispatch_queue> *notificationResponseQueue

  // class methods
  +[PowerUIUPOManager sharedInstance]

  // instance methods
  -[PowerUIUPOManager init]
  -[PowerUIUPOManager .cxx_destruct]
  -[PowerUIUPOManager sortDescriptors]
  -[PowerUIUPOManager bundle]
  -[PowerUIUPOManager defaults]
  -[PowerUIUPOManager setDefaults:]
  -[PowerUIUPOManager log]
  -[PowerUIUPOManager setBundle:]
  -[PowerUIUPOManager setLog:]
  -[PowerUIUPOManager dataProviderDidLoad]
  -[PowerUIUPOManager userNotificationCenter]
  -[PowerUIUPOManager clearMitigationsEnabledNotificationRequestIfNecessary]
  -[PowerUIUPOManager mitigationsEnabledNotificationRequest]
  -[PowerUIUPOManager upoTime]
  -[PowerUIUPOManager setUpoTime:]
  -[PowerUIUPOManager registerForWithdrawalNotifications]
  -[PowerUIUPOManager removeMitigationsEnabledNotification]
  -[PowerUIUPOManager displayMitigationsEnabledNotification]
  -[PowerUIUPOManager requestBulletin]
  -[PowerUIUPOManager displayPostUPONotification]
  -[PowerUIUPOManager displayBatteryServiceNotification]
  -[PowerUIUPOManager setUserNotificationCenter:]
  -[PowerUIUPOManager dataProviderLoaded]
  -[PowerUIUPOManager setDataProviderLoaded:]
  -[PowerUIUPOManager contextStore]
  -[PowerUIUPOManager setContextStore:]
  -[PowerUIUPOManager unlockToken]
  -[PowerUIUPOManager setUnlockToken:]
  -[PowerUIUPOManager mitigationsDisabledToken]
  -[PowerUIUPOManager setMitigationsDisabledToken:]
  -[PowerUIUPOManager lastTimeLocked]
  -[PowerUIUPOManager setLastTimeLocked:]
  -[PowerUIUPOManager lockNotificationQueue]
  -[PowerUIUPOManager setLockNotificationQueue:]
  -[PowerUIUPOManager notificationResponseQueue]
  -[PowerUIUPOManager setNotificationResponseQueue:]


PowerUISmartChargeUtilities : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[PowerUISmartChargeUtilities isInternalBuild]
  +[PowerUISmartChargeUtilities dateForPreferenceKey:inDomain:]
  +[PowerUISmartChargeUtilities numberForPreferenceKey:inDomain:]
  +[PowerUISmartChargeUtilities setDate:forPreferenceKey:inDomain:]
  +[PowerUISmartChargeUtilities setNumber:forPreferenceKey:inDomain:]
  +[PowerUISmartChargeUtilities historicalTopOffDurations]
  +[PowerUISmartChargeUtilities currentBatteryLevelWithContext:]
  +[PowerUISmartChargeUtilities isPluggedInWithContext:]
  +[PowerUISmartChargeUtilities lastPluggedInDateWithContext:]
  +[PowerUISmartChargeUtilities deviceWasActiveWithinSeconds:withContext:]
  +[PowerUISmartChargeUtilities deviceWasConnectedToChargerWithinSeconds:withContext:]
  +[PowerUISmartChargeUtilities deviceConnectedToWirelessChargerWithContext:]
  +[PowerUISmartChargeUtilities historicalChargeDurationsFromLevel:toLevel:filteredByMinimumPluginDuration:]
  +[PowerUISmartChargeUtilities predicateForEventsWithinSeconds:aroundTimeOfDay:goingDaysBack:]
  +[PowerUISmartChargeUtilities batteryProperties]


PowerUIDefines : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[PowerUIDefines smartTopOffCheckpointStream]


PowerUIMLClassifierModelPredictor : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_os_log> *log
 @property  <_DKKnowledgeQuerying> *store
 @property  long long pluginBatteryLevel
 @property  MLModel *model
 @property  <_CDUserContext> *context
 @property  NSDate *pluginDate
 @property  double threshold

  // instance methods
  -[PowerUIMLClassifierModelPredictor init]
  -[PowerUIMLClassifierModelPredictor .cxx_destruct]
  -[PowerUIMLClassifierModelPredictor context]
  -[PowerUIMLClassifierModelPredictor store]
  -[PowerUIMLClassifierModelPredictor model]
  -[PowerUIMLClassifierModelPredictor setContext:]
  -[PowerUIMLClassifierModelPredictor threshold]
  -[PowerUIMLClassifierModelPredictor setThreshold:]
  -[PowerUIMLClassifierModelPredictor log]
  -[PowerUIMLClassifierModelPredictor setStore:]
  -[PowerUIMLClassifierModelPredictor setLog:]
  -[PowerUIMLClassifierModelPredictor timeStringFromDate:]
  -[PowerUIMLClassifierModelPredictor getPluginEventsBefore:withMinimumDuration:]
  -[PowerUIMLClassifierModelPredictor setPluginDate:]
  -[PowerUIMLClassifierModelPredictor pluginDate]
  -[PowerUIMLClassifierModelPredictor pluginBatteryLevel]
  -[PowerUIMLClassifierModelPredictor setPluginBatteryLevel:]
  -[PowerUIMLClassifierModelPredictor getHourBinID:]
  -[PowerUIMLClassifierModelPredictor getBatteryEventsFrom:to:]
  -[PowerUIMLClassifierModelPredictor chargingDecision:withPluginDate:forDate:]
  -[PowerUIMLClassifierModelPredictor wasDeviceActiveInLastHourFrom:]
  -[PowerUIMLClassifierModelPredictor averageDurationAndCountWithPluginDate:]
  -[PowerUIMLClassifierModelPredictor dynamicallyTuneThresholdForActivity:]
  -[PowerUIMLClassifierModelPredictor shouldDisableCharging:]


PowerUIHistogramPredictor : NSObject /usr/lib/libSystem.B.dylib <PowerUIPredictor>
 @property  NSObject<OS_os_log> *log
 @property  _DKPredictionTimeline *deviceActivityTimeline
 @property  _DKPredictionTimeline *devicePluginTimeline
 @property  NSDateInterval *predictedInactivity
 @property  NSDateInterval *predictedLengthyPlugin
 @property  int pluginToken
 @property  NSObject<OS_dispatch_queue> *queue

  // class methods
  +[PowerUIHistogramPredictor monitor]
  +[PowerUIHistogramPredictor deviceActivityLikelihoodQueryPredicate]

  // instance methods
  -[PowerUIHistogramPredictor init]
  -[PowerUIHistogramPredictor dealloc]
  -[PowerUIHistogramPredictor setQueue:]
  -[PowerUIHistogramPredictor queue]
  -[PowerUIHistogramPredictor .cxx_destruct]
  -[PowerUIHistogramPredictor log]
  -[PowerUIHistogramPredictor setLog:]
  -[PowerUIHistogramPredictor modelVersion]
  -[PowerUIHistogramPredictor predictFullChargeDateWithBatteryLevel:]
  -[PowerUIHistogramPredictor readNumberForPreferenceKey:]
  -[PowerUIHistogramPredictor stringFromInterval:]
  -[PowerUIHistogramPredictor deviceActivityLikelihoodTimeline]
  -[PowerUIHistogramPredictor shortenIntervalWithInterval:]
  -[PowerUIHistogramPredictor chargeLikelihoodTimeline]
  -[PowerUIHistogramPredictor loadDeviceActivityPrediction]
  -[PowerUIHistogramPredictor adjustedPeriodFromInterval:atDate:]
  -[PowerUIHistogramPredictor loadChargePrediction]
  -[PowerUIHistogramPredictor currentInactivityPrediction]
  -[PowerUIHistogramPredictor currentPluginPrediction]
  -[PowerUIHistogramPredictor deviceActivityTimeline]
  -[PowerUIHistogramPredictor setDeviceActivityTimeline:]
  -[PowerUIHistogramPredictor devicePluginTimeline]
  -[PowerUIHistogramPredictor setDevicePluginTimeline:]
  -[PowerUIHistogramPredictor predictedInactivity]
  -[PowerUIHistogramPredictor setPredictedInactivity:]
  -[PowerUIHistogramPredictor predictedLengthyPlugin]
  -[PowerUIHistogramPredictor setPredictedLengthyPlugin:]
  -[PowerUIHistogramPredictor pluginToken]
  -[PowerUIHistogramPredictor setPluginToken:]


PowerUISmartChargeClient : NSObject /usr/lib/libSystem.B.dylib <PowerUISmartChargeClientManaging>
 @property  NSString *clientName
 @property  NSXPCConnection *connection
 @property  NSObject<OS_os_log> *log
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PowerUISmartChargeClient remoteInterface]

  // instance methods
  -[PowerUISmartChargeClient .cxx_destruct]
  -[PowerUISmartChargeClient status]
  -[PowerUISmartChargeClient connection]
  -[PowerUISmartChargeClient setConnection:]
  -[PowerUISmartChargeClient clientName]
  -[PowerUISmartChargeClient log]
  -[PowerUISmartChargeClient setLog:]
  -[PowerUISmartChargeClient setClientName:]
  -[PowerUISmartChargeClient setState:error:]
  -[PowerUISmartChargeClient initWithClientName:]
  -[PowerUISmartChargeClient fullChargeDeadlineWithHandler:]
  -[PowerUISmartChargeClient isSmartChargingCurrentlyEnabledWithHandler:]
  -[PowerUISmartChargeClient isSmartChargingCurrentlyEnabled:]
  -[PowerUISmartChargeClient disableSmartCharging:]
  -[PowerUISmartChargeClient disableSmartChargingWithHandler:]
  -[PowerUISmartChargeClient temporarilyDisableSmartCharging:]
  -[PowerUISmartChargeClient temporarilyDisableSmartChargingWithHandler:]
  -[PowerUISmartChargeClient enableSmartCharging:]
  -[PowerUISmartChargeClient enableSmartChargingWithHandler:]
  -[PowerUISmartChargeClient temporarilyEnableCharging:]
  -[PowerUISmartChargeClient temporarilyEnableChargingWithHandler:]
  -[PowerUISmartChargeClient fullChargeDeadline:]
  -[PowerUISmartChargeClient powerLogStatus]
  -[PowerUISmartChargeClient engageFrom:until:overrideAllSignals:]
  -[PowerUISmartChargeClient resetEngagementOverride]


PowerUIBatteryMitigationManager : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_os_log> *log
 @property  NSString *defaultsDomain
 @property  int lastDOD0Value
 @property  NSDate *lastDOD0Update
 @property  unsigned long lastQMaxCounter
 @property  NSDate *lastQMaxUpdate
 @property  unsigned long decisionSignalID
 @property  unsigned long testDaysSinceQmaxUpdate

  // instance methods
  -[PowerUIBatteryMitigationManager .cxx_destruct]
  -[PowerUIBatteryMitigationManager log]
  -[PowerUIBatteryMitigationManager setLog:]
  -[PowerUIBatteryMitigationManager lastDOD0Value]
  -[PowerUIBatteryMitigationManager dod0ValueChangedDate]
  -[PowerUIBatteryMitigationManager lastQMaxCounterValue]
  -[PowerUIBatteryMitigationManager lastQMaxCounterChangedDate]
  -[PowerUIBatteryMitigationManager lastDOD0Update]
  -[PowerUIBatteryMitigationManager setLastDOD0Update:]
  -[PowerUIBatteryMitigationManager setLastQMaxUpdate:]
  -[PowerUIBatteryMitigationManager updateLastQMaxValue:atDate:]
  -[PowerUIBatteryMitigationManager lastQMaxUpdate]
  -[PowerUIBatteryMitigationManager additionalWaitTimeForQMaxWithInterval:]
  -[PowerUIBatteryMitigationManager updateLastDOD0Value:atDate:]
  -[PowerUIBatteryMitigationManager additionalWaitTimeForDOD0WithInterval:]
  -[PowerUIBatteryMitigationManager initWithDefaultsDomain:]
  -[PowerUIBatteryMitigationManager additionalWaitTime]
  -[PowerUIBatteryMitigationManager decisionSignalID]
  -[PowerUIBatteryMitigationManager setDecisionSignalID:]
  -[PowerUIBatteryMitigationManager defaultsDomain]
  -[PowerUIBatteryMitigationManager setDefaultsDomain:]
  -[PowerUIBatteryMitigationManager setLastDOD0Value:]
  -[PowerUIBatteryMitigationManager lastQMaxCounter]
  -[PowerUIBatteryMitigationManager setLastQMaxCounter:]
  -[PowerUIBatteryMitigationManager testDaysSinceQmaxUpdate]
  -[PowerUIBatteryMitigationManager setTestDaysSinceQmaxUpdate:]


PowerUIMLRegressorModelPredictor : NSObject /usr/lib/libSystem.B.dylib <PowerUIPredictor>
 @property  NSObject<OS_os_log> *log
 @property  <_DKKnowledgeQuerying> *store
 @property  long long pluginBatteryLevel
 @property  MLModel *model
 @property  <_CDUserContext> *context
 @property  NSDate *pluginDate
 @property  double adjustedDuration

  // instance methods
  -[PowerUIMLRegressorModelPredictor init]
  -[PowerUIMLRegressorModelPredictor .cxx_destruct]
  -[PowerUIMLRegressorModelPredictor context]
  -[PowerUIMLRegressorModelPredictor store]
  -[PowerUIMLRegressorModelPredictor model]
  -[PowerUIMLRegressorModelPredictor setContext:]
  -[PowerUIMLRegressorModelPredictor log]
  -[PowerUIMLRegressorModelPredictor setStore:]
  -[PowerUIMLRegressorModelPredictor setLog:]
  -[PowerUIMLRegressorModelPredictor currentBatteryLevel]
  -[PowerUIMLRegressorModelPredictor batteryLevelAtDate:]
  -[PowerUIMLRegressorModelPredictor timeStringFromDate:]
  -[PowerUIMLRegressorModelPredictor getPluginEventsBefore:withMinimumDuration:]
  -[PowerUIMLRegressorModelPredictor predictFullChargeDateWithBatteryLevel:]
  -[PowerUIMLRegressorModelPredictor setPluginDate:]
  -[PowerUIMLRegressorModelPredictor pluginDate]
  -[PowerUIMLRegressorModelPredictor pluginBatteryLevel]
  -[PowerUIMLRegressorModelPredictor setPluginBatteryLevel:]
  -[PowerUIMLRegressorModelPredictor adjustedDuration]
  -[PowerUIMLRegressorModelPredictor setAdjustedDuration:]
  -[PowerUIMLRegressorModelPredictor getHourBinID:]
  -[PowerUIMLRegressorModelPredictor averageDurationAndCountWithPluginDate:]
  -[PowerUIMLRegressorModelPredictor adjustedChargingDecision:withPluginDate:withPluginBatteryLevel:forDate:]
  -[PowerUIMLRegressorModelPredictor chargingDecision:withPluginDate:withPluginBatteryLevel:forDate:]


PowerUIWakeRequestSignalMonitor : NSObject /usr/lib/libSystem.B.dylib <PowerUISignalMonitor>
 @property  <PowerUISignalMonitorDelegate> *delegate
 @property  NSObject<OS_os_log> *log
 @property  <_CDContext> *context
 @property  _CDContextualChangeRegistration *registration
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PowerUIWakeRequestSignalMonitor monitorWithDelegate:]

  // instance methods
  -[PowerUIWakeRequestSignalMonitor delegate]
  -[PowerUIWakeRequestSignalMonitor setDelegate:]
  -[PowerUIWakeRequestSignalMonitor .cxx_destruct]
  -[PowerUIWakeRequestSignalMonitor context]
  -[PowerUIWakeRequestSignalMonitor setContext:]
  -[PowerUIWakeRequestSignalMonitor log]
  -[PowerUIWakeRequestSignalMonitor initWithDelegate:]
  -[PowerUIWakeRequestSignalMonitor setLog:]
  -[PowerUIWakeRequestSignalMonitor startMonitoring]
  -[PowerUIWakeRequestSignalMonitor stopMonitoring]
  -[PowerUIWakeRequestSignalMonitor registration]
  -[PowerUIWakeRequestSignalMonitor setRegistration:]
  -[PowerUIWakeRequestSignalMonitor nextUserVisibleWakeDate]
  -[PowerUIWakeRequestSignalMonitor signalID]
  -[PowerUIWakeRequestSignalMonitor requiredFullChargeDate]


PowerUISmartChargeManager : NSObject /usr/lib/libSystem.B.dylib <UNUserNotificationCenterDelegate, NSXPCListenerDelegate, PowerUISignalMonitorDelegate, PowerUISmartChargeManagingPrivate, PowerUISmartChargeManaging>
 @property  <_CDUserContext> *context
 @property  _CDContextualKeyPath *checkpointKP
 @property  UNUserNotificationCenter *unCenter
 @property  NSObject<OS_os_log> *log
 @property  unsigned long checkpoint
 @property  BOOL shouldDisableCharging
 @property  unsigned int service
 @property  NSDate *_fullChargeDeadline
 @property  NSDate *uiDeadline
 @property  NSDictionary *signalDeadline
 @property  NSDate *lastComputedSignalDeadline
 @property  NSDate *twoStageDeadline
 @property  NSObject<OS_dispatch_queue> *queue
 @property  BOOL _hasLegitimateUsage
 @property  int lastBatteryLevel
 @property  int lastPluginStatus
 @property  int lastFullyCharged
 @property  BOOL lastChargerWasWireless
 @property  NSDate *lastInterruptedTime
 @property  double empiricalTimeToFullChargeDurationMinutes
 @property  NSString *lastScheduledFullChargeNotificationID
 @property  long long deadlineSignalID
 @property  BOOL firstNotificationRequested
 @property  BOOL firstNotificationDisplayed
 @property  unsigned long currentState
 @property  BOOL enabled
 @property  NSDate *disabledUntilDate
 @property  BOOL temporarilyDisabled
 @property  BOOL progressNotificationsEnabled
 @property  BOOL signalsIgnored
 @property  unsigned long predictorType
 @property  long long lastDecisionMakerID
 @property  long long previousDecisionMakerID
 @property  NSDate *previousDecisionMakerDate
 @property  PowerUIMLClassifierModelPredictor *modelClassifierPredictor
 @property  PowerUIMLTwoStageModelPredictor *modelTwoStagePredictor
 @property  PowerUIHistogramPredictor *histogramPredictor
 @property  NSArray *monitors
 @property  NSDictionary *powerLogStatus
 @property  NSDictionary *previousPowerLogStatus
 @property  NSDate *engagementTimeOverride
 @property  NSDate *fullChargeDeadlineOverride
 @property  BOOL overrideAllSignals
 @property  BOOL encounteredTLCDuringTopOff
 @property  PowerUIBatteryMitigationManager *batteryMitigationManager
 @property  NSXPCListener *listener
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PowerUISmartChargeManager manager]

  // instance methods
  -[PowerUISmartChargeManager init]
  -[PowerUISmartChargeManager setQueue:]
  -[PowerUISmartChargeManager queue]
  -[PowerUISmartChargeManager enabled]
  -[PowerUISmartChargeManager setEnabled:]
  -[PowerUISmartChargeManager listener]
  -[PowerUISmartChargeManager .cxx_destruct]
  -[PowerUISmartChargeManager listener:shouldAcceptNewConnection:]
  -[PowerUISmartChargeManager context]
  -[PowerUISmartChargeManager setContext:]
  -[PowerUISmartChargeManager setListener:]
  -[PowerUISmartChargeManager log]
  -[PowerUISmartChargeManager currentState]
  -[PowerUISmartChargeManager checkpoint]
  -[PowerUISmartChargeManager service]
  -[PowerUISmartChargeManager setLog:]
  -[PowerUISmartChargeManager monitors]
  -[PowerUISmartChargeManager setMonitors:]
  -[PowerUISmartChargeManager userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:]
  -[PowerUISmartChargeManager setCurrentState:]
  -[PowerUISmartChargeManager setService:]
  -[PowerUISmartChargeManager resetState]
  -[PowerUISmartChargeManager setString:forPreferenceKey:]
  -[PowerUISmartChargeManager handleCallback:]
  -[PowerUISmartChargeManager timeStringFromDate:]
  -[PowerUISmartChargeManager readNumberForPreferenceKey:]
  -[PowerUISmartChargeManager stringFromInterval:]
  -[PowerUISmartChargeManager statusWithHandler:]
  -[PowerUISmartChargeManager powerLogStatusWithHandler:]
  -[PowerUISmartChargeManager fullChargeDeadlineWithHandler:]
  -[PowerUISmartChargeManager isSmartChargingCurrentlyEnabledWithHandler:]
  -[PowerUISmartChargeManager client:setState:withHandler:]
  -[PowerUISmartChargeManager engageFrom:until:overrideAllSignals:withHandler:]
  -[PowerUISmartChargeManager resetEngagementOverrideWithHandler:]
  -[PowerUISmartChargeManager powerLogStatus]
  -[PowerUISmartChargeManager monitor:maySuggestNewFullChargeDeadline:]
  -[PowerUISmartChargeManager readDateForPreferenceKey:]
  -[PowerUISmartChargeManager handleXPCActivityOnBoot]
  -[PowerUISmartChargeManager loadCheckpoint]
  -[PowerUISmartChargeManager loadDefaults]
  -[PowerUISmartChargeManager registerForFirstWakeupNotification]
  -[PowerUISmartChargeManager handleCallback]
  -[PowerUISmartChargeManager unCenter]
  -[PowerUISmartChargeManager lastBatteryLevel]
  -[PowerUISmartChargeManager requestAtCheckpoint:atBatteryLevel:]
  -[PowerUISmartChargeManager handleNewBatteryLevel:whileExternalConnected:fullyCharged:]
  -[PowerUISmartChargeManager enableCharging]
  -[PowerUISmartChargeManager disableCharging]
  -[PowerUISmartChargeManager smartTopOffEngagedRequest:]
  -[PowerUISmartChargeManager smartTopOffFailureNotificationAtBatteryLevel:withDate:]
  -[PowerUISmartChargeManager firsUseNotificationRequest]
  -[PowerUISmartChargeManager readDictForPreferenceKey:]
  -[PowerUISmartChargeManager reportAggDKeys:]
  -[PowerUISmartChargeManager isDeviceWithLegitimateUsage]
  -[PowerUISmartChargeManager startAllMonitoring]
  -[PowerUISmartChargeManager previousPowerLogStatus]
  -[PowerUISmartChargeManager setPreviousPowerLogStatus:]
  -[PowerUISmartChargeManager checkpointNameFromCheckpoint:]
  -[PowerUISmartChargeManager durationToFullChargeFromBatteryLevel:]
  -[PowerUISmartChargeManager projectedBatteryLevelForDuration:withInitialBatteryLevel:]
  -[PowerUISmartChargeManager setNumber:forPreferenceKey:]
  -[PowerUISmartChargeManager addPowerLogEventForCheckpoint:decisionSignalID:decisionDate:]
  -[PowerUISmartChargeManager setCheckpoint:withSelector:]
  -[PowerUISmartChargeManager setTemporarilyDisabled:until:]
  -[PowerUISmartChargeManager setFullChargeDeadlineOverride:]
  -[PowerUISmartChargeManager setEngagementTimeOverride:]
  -[PowerUISmartChargeManager engagementTimeOverride]
  -[PowerUISmartChargeManager fullChargeDeadlineOverride]
  -[PowerUISmartChargeManager setPowerLogStatus:]
  -[PowerUISmartChargeManager readStringForPreferenceKey:]
  -[PowerUISmartChargeManager lastPluginStatus]
  -[PowerUISmartChargeManager recallPeriodicCheck]
  -[PowerUISmartChargeManager isExternalConnected]
  -[PowerUISmartChargeManager handleTopOffSupervisorEvent]
  -[PowerUISmartChargeManager handleInternalCarryPromptEvent]
  -[PowerUISmartChargeManager pluginTimelineAddEvent:atDate:withBatteryLevel:]
  -[PowerUISmartChargeManager setLastFullyCharged:]
  -[PowerUISmartChargeManager setLastBatteryLevel:]
  -[PowerUISmartChargeManager resetDeviceHasLegitimateUsage]
  -[PowerUISmartChargeManager recordAnalytics]
  -[PowerUISmartChargeManager clearPluginTimeline]
  -[PowerUISmartChargeManager setLastPluginStatus:]
  -[PowerUISmartChargeManager constructAnalyticsStatus]
  -[PowerUISmartChargeManager setDict:forPreferenceKey:]
  -[PowerUISmartChargeManager setFullChargeDeadline:withOCVMitigationWaitTime:]
  -[PowerUISmartChargeManager setDate:forPreferenceKey:]
  -[PowerUISmartChargeManager defaultDateToDisableUntilGivenDate:]
  -[PowerUISmartChargeManager requestPeriodicCheck]
  -[PowerUISmartChargeManager chargePrediction:fullyCharged:previousCheckpoint:predictor:]
  -[PowerUISmartChargeManager updateDecisionMakerID:withCheckpoint:]
  -[PowerUISmartChargeManager stopAllMonitoring]
  -[PowerUISmartChargeManager updateChargingTimeSaved]
  -[PowerUISmartChargeManager clearAllNotificationState]
  -[PowerUISmartChargeManager dispatchAlarmAfter:withName:]
  -[PowerUISmartChargeManager computeSignalDeadline]
  -[PowerUISmartChargeManager recomputeEmpiricalTimeToFullCharge]
  -[PowerUISmartChargeManager durationToFullChargeFromBatteryLevel:includeTLCDelay:]
  -[PowerUISmartChargeManager signalDeadline]
  -[PowerUISmartChargeManager shouldDisableChargingMLPredictor:]
  -[PowerUISmartChargeManager shouldDisableChargingAtBatteryLevel:withPredictor:]
  -[PowerUISmartChargeManager shouldDisableChargingOverrideModel:]
  -[PowerUISmartChargeManager deviceWasRecentlyConnectedToCharger]
  -[PowerUISmartChargeManager predictor:suggestsDiablingChargingAtBatteryLevel:]
  -[PowerUISmartChargeManager deviceHasOverriddenLegitimateUsageDetection]
  -[PowerUISmartChargeManager deviceHasSeveralChargeSessions]
  -[PowerUISmartChargeManager roundedDateFromDate:]
  -[PowerUISmartChargeManager uiDeadlineFromFullChargeDeadline:atDate:]
  -[PowerUISmartChargeManager smartTopOffEngagedContent:]
  -[PowerUISmartChargeManager addEngagementFromDate:withDuration:]
  -[PowerUISmartChargeManager setChargingStatus:]
  -[PowerUISmartChargeManager ttrURLforBatteryLevel:withDate:]
  -[PowerUISmartChargeManager fullChargeDeadline]
  -[PowerUISmartChargeManager fullChargeDeadlineStringFromDate:]
  -[PowerUISmartChargeManager readAndRemoveRecentEngagements]
  -[PowerUISmartChargeManager stringFromDecisionMaker:decisionDate:]
  -[PowerUISmartChargeManager recentEngagements]
  -[PowerUISmartChargeManager stringFromState:]
  -[PowerUISmartChargeManager setTemporarilyDisabled:]
  -[PowerUISmartChargeManager handleAlarmEvent:]
  -[PowerUISmartChargeManager deviceHasSeveralInteractions]
  -[PowerUISmartChargeManager deviceWasRecentlyActive]
  -[PowerUISmartChargeManager checkpointKP]
  -[PowerUISmartChargeManager setCheckpointKP:]
  -[PowerUISmartChargeManager setUnCenter:]
  -[PowerUISmartChargeManager setCheckpoint:]
  -[PowerUISmartChargeManager shouldDisableCharging]
  -[PowerUISmartChargeManager setShouldDisableCharging:]
  -[PowerUISmartChargeManager _fullChargeDeadline]
  -[PowerUISmartChargeManager set_fullChargeDeadline:]
  -[PowerUISmartChargeManager uiDeadline]
  -[PowerUISmartChargeManager setUiDeadline:]
  -[PowerUISmartChargeManager setSignalDeadline:]
  -[PowerUISmartChargeManager lastComputedSignalDeadline]
  -[PowerUISmartChargeManager setLastComputedSignalDeadline:]
  -[PowerUISmartChargeManager twoStageDeadline]
  -[PowerUISmartChargeManager setTwoStageDeadline:]
  -[PowerUISmartChargeManager _hasLegitimateUsage]
  -[PowerUISmartChargeManager set_hasLegitimateUsage:]
  -[PowerUISmartChargeManager lastFullyCharged]
  -[PowerUISmartChargeManager lastChargerWasWireless]
  -[PowerUISmartChargeManager setLastChargerWasWireless:]
  -[PowerUISmartChargeManager lastInterruptedTime]
  -[PowerUISmartChargeManager setLastInterruptedTime:]
  -[PowerUISmartChargeManager empiricalTimeToFullChargeDurationMinutes]
  -[PowerUISmartChargeManager setEmpiricalTimeToFullChargeDurationMinutes:]
  -[PowerUISmartChargeManager lastScheduledFullChargeNotificationID]
  -[PowerUISmartChargeManager setLastScheduledFullChargeNotificationID:]
  -[PowerUISmartChargeManager deadlineSignalID]
  -[PowerUISmartChargeManager setDeadlineSignalID:]
  -[PowerUISmartChargeManager firstNotificationRequested]
  -[PowerUISmartChargeManager setFirstNotificationRequested:]
  -[PowerUISmartChargeManager firstNotificationDisplayed]
  -[PowerUISmartChargeManager setFirstNotificationDisplayed:]
  -[PowerUISmartChargeManager disabledUntilDate]
  -[PowerUISmartChargeManager setDisabledUntilDate:]
  -[PowerUISmartChargeManager temporarilyDisabled]
  -[PowerUISmartChargeManager progressNotificationsEnabled]
  -[PowerUISmartChargeManager setProgressNotificationsEnabled:]
  -[PowerUISmartChargeManager signalsIgnored]
  -[PowerUISmartChargeManager setSignalsIgnored:]
  -[PowerUISmartChargeManager predictorType]
  -[PowerUISmartChargeManager setPredictorType:]
  -[PowerUISmartChargeManager lastDecisionMakerID]
  -[PowerUISmartChargeManager setLastDecisionMakerID:]
  -[PowerUISmartChargeManager previousDecisionMakerID]
  -[PowerUISmartChargeManager setPreviousDecisionMakerID:]
  -[PowerUISmartChargeManager previousDecisionMakerDate]
  -[PowerUISmartChargeManager setPreviousDecisionMakerDate:]
  -[PowerUISmartChargeManager modelClassifierPredictor]
  -[PowerUISmartChargeManager setModelClassifierPredictor:]
  -[PowerUISmartChargeManager modelTwoStagePredictor]
  -[PowerUISmartChargeManager setModelTwoStagePredictor:]
  -[PowerUISmartChargeManager histogramPredictor]
  -[PowerUISmartChargeManager setHistogramPredictor:]
  -[PowerUISmartChargeManager overrideAllSignals]
  -[PowerUISmartChargeManager setOverrideAllSignals:]
  -[PowerUISmartChargeManager encounteredTLCDuringTopOff]
  -[PowerUISmartChargeManager setEncounteredTLCDuringTopOff:]
  -[PowerUISmartChargeManager batteryMitigationManager]
  -[PowerUISmartChargeManager setBatteryMitigationManager:]


PowerUIWalletSignalMonitor : NSObject /usr/lib/libSystem.B.dylib <PowerUISignalMonitor>
 @property  PKPassLibrary *wallet
 @property  <PowerUISignalMonitorDelegate> *delegate
 @property  NSObject<OS_os_log> *log
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PowerUIWalletSignalMonitor monitorWithDelegate:]

  // instance methods
  -[PowerUIWalletSignalMonitor delegate]
  -[PowerUIWalletSignalMonitor setDelegate:]
  -[PowerUIWalletSignalMonitor .cxx_destruct]
  -[PowerUIWalletSignalMonitor log]
  -[PowerUIWalletSignalMonitor initWithDelegate:]
  -[PowerUIWalletSignalMonitor setLog:]
  -[PowerUIWalletSignalMonitor startMonitoring]
  -[PowerUIWalletSignalMonitor stopMonitoring]
  -[PowerUIWalletSignalMonitor signalID]
  -[PowerUIWalletSignalMonitor requiredFullChargeDate]
  -[PowerUIWalletSignalMonitor initializeWallet]
  -[PowerUIWalletSignalMonitor sourceInformationChangedNotification:]
  -[PowerUIWalletSignalMonitor wallet]
  -[PowerUIWalletSignalMonitor setWallet:]


PowerUICalendarSignalMonitor : NSObject /usr/lib/libSystem.B.dylib <PowerUISignalMonitor>
 @property  EKEventStore *calendar
 @property  <PowerUISignalMonitorDelegate> *delegate
 @property  NSObject<OS_os_log> *log
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PowerUICalendarSignalMonitor monitorWithDelegate:]

  // instance methods
  -[PowerUICalendarSignalMonitor delegate]
  -[PowerUICalendarSignalMonitor setDelegate:]
  -[PowerUICalendarSignalMonitor .cxx_destruct]
  -[PowerUICalendarSignalMonitor calendar]
  -[PowerUICalendarSignalMonitor setCalendar:]
  -[PowerUICalendarSignalMonitor log]
  -[PowerUICalendarSignalMonitor initWithDelegate:]
  -[PowerUICalendarSignalMonitor setLog:]
  -[PowerUICalendarSignalMonitor startMonitoring]
  -[PowerUICalendarSignalMonitor stopMonitoring]
  -[PowerUICalendarSignalMonitor signalID]
  -[PowerUICalendarSignalMonitor requiredFullChargeDate]
  -[PowerUICalendarSignalMonitor sourceInformationChangedNotification:]
  -[PowerUICalendarSignalMonitor upcomingEvents]
  -[PowerUICalendarSignalMonitor nextFlightEventWithEvents:]
  -[PowerUICalendarSignalMonitor nextRelevantCalendarEventWithEvents:]


PowerUIAlarmSignalMonitor : NSObject /usr/lib/libSystem.B.dylib <PowerUISignalMonitor>
 @property  MTAlarmManager *alarmManager
 @property  <PowerUISignalMonitorDelegate> *delegate
 @property  NSObject<OS_os_log> *log
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PowerUIAlarmSignalMonitor monitorWithDelegate:]

  // instance methods
  -[PowerUIAlarmSignalMonitor delegate]
  -[PowerUIAlarmSignalMonitor setDelegate:]
  -[PowerUIAlarmSignalMonitor .cxx_destruct]
  -[PowerUIAlarmSignalMonitor log]
  -[PowerUIAlarmSignalMonitor initWithDelegate:]
  -[PowerUIAlarmSignalMonitor setLog:]
  -[PowerUIAlarmSignalMonitor startMonitoring]
  -[PowerUIAlarmSignalMonitor stopMonitoring]
  -[PowerUIAlarmSignalMonitor alarmManager]
  -[PowerUIAlarmSignalMonitor sleepAlarm]
  -[PowerUIAlarmSignalMonitor nextAlarm]
  -[PowerUIAlarmSignalMonitor setAlarmManager:]
  -[PowerUIAlarmSignalMonitor signalID]
  -[PowerUIAlarmSignalMonitor requiredFullChargeDate]
  -[PowerUIAlarmSignalMonitor sourceInformationChangedNotification:]
  -[PowerUIAlarmSignalMonitor bedtimeEndAtDate:]


PowerUILocationSignalMonitor : NSObject /usr/lib/libSystem.B.dylib <CLLocationManagerDelegate, PowerUISignalMonitor>
 @property  RTRoutineManager *routine
 @property  CLLocationManager *locationManager
 @property  int authorizationStatus
 @property  CLLocation *currentLocation
 @property  NSObject<OS_dispatch_semaphore> *requestLocationSemaphore
 @property  NSObject<OS_dispatch_semaphore> *authorizationSemaphore
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSObject<OS_os_log> *log
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PowerUILocationSignalMonitor monitorWithDelegate:]

  // instance methods
  -[PowerUILocationSignalMonitor init]
  -[PowerUILocationSignalMonitor setQueue:]
  -[PowerUILocationSignalMonitor queue]
  -[PowerUILocationSignalMonitor .cxx_destruct]
  -[PowerUILocationSignalMonitor log]
  -[PowerUILocationSignalMonitor setLog:]
  -[PowerUILocationSignalMonitor locationManager:didUpdateLocations:]
  -[PowerUILocationSignalMonitor locationManager:didFailWithError:]
  -[PowerUILocationSignalMonitor locationManager:didChangeAuthorizationStatus:]
  -[PowerUILocationSignalMonitor authorizationStatus]
  -[PowerUILocationSignalMonitor startMonitoring]
  -[PowerUILocationSignalMonitor stopMonitoring]
  -[PowerUILocationSignalMonitor currentLocation]
  -[PowerUILocationSignalMonitor setCurrentLocation:]
  -[PowerUILocationSignalMonitor setAuthorizationStatus:]
  -[PowerUILocationSignalMonitor locationManager]
  -[PowerUILocationSignalMonitor setLocationManager:]
  -[PowerUILocationSignalMonitor signalID]
  -[PowerUILocationSignalMonitor requiredFullChargeDate]
  -[PowerUILocationSignalMonitor predicateForEventsWithinSeconds:aroundTimeOfDay:]
  -[PowerUILocationSignalMonitor locationIsUncertain:]
  -[PowerUILocationSignalMonitor setRequestLocationSemaphore:]
  -[PowerUILocationSignalMonitor longChargesAroundDate:]
  -[PowerUILocationSignalMonitor requestLocationSemaphore]
  -[PowerUILocationSignalMonitor longCharges:occurredInLocationsNear:]
  -[PowerUILocationSignalMonitor inTypicalChargingLocation]
  -[PowerUILocationSignalMonitor routine]
  -[PowerUILocationSignalMonitor setRoutine:]
  -[PowerUILocationSignalMonitor authorizationSemaphore]
  -[PowerUILocationSignalMonitor setAuthorizationSemaphore:]


durationModelInput : NSObject /usr/lib/libSystem.B.dylib <MLFeatureProvider>
 @property  double plugin_battery_level
 @property  double time_from_plugin
 @property  double med_dur_1
 @property  double med_dur_2
 @property  double med_dur_4
 @property  double med_dur_8
 @property  double med_dur_16
 @property  double med_dur_24
 @property  double cnt_dur_1
 @property  double cnt_dur_2
 @property  double cnt_dur_4
 @property  double cnt_dur_8
 @property  double cnt_dur_16
 @property  double cnt_dur_24
 @property  double std_dur_1
 @property  double std_dur_2
 @property  double std_dur_4
 @property  double std_dur_8
 @property  double std_dur_16
 @property  double std_dur_24
 @property  NSSet *featureNames

  // instance methods
  -[durationModelInput featureValueForName:]
  -[durationModelInput featureNames]
  -[durationModelInput initWithPlugin_battery_level:time_from_plugin:med_dur_1:med_dur_2:med_dur_4:med_dur_8:med_dur_16:med_dur_24:cnt_dur_1:cnt_dur_2:cnt_dur_4:cnt_dur_8:cnt_dur_16:cnt_dur_24:std_dur_1:std_dur_2:std_dur_4:std_dur_8:std_dur_16:std_dur_24:]
  -[durationModelInput plugin_battery_level]
  -[durationModelInput setPlugin_battery_level:]
  -[durationModelInput time_from_plugin]
  -[durationModelInput setTime_from_plugin:]
  -[durationModelInput med_dur_1]
  -[durationModelInput setMed_dur_1:]
  -[durationModelInput med_dur_2]
  -[durationModelInput setMed_dur_2:]
  -[durationModelInput med_dur_4]
  -[durationModelInput setMed_dur_4:]
  -[durationModelInput med_dur_8]
  -[durationModelInput setMed_dur_8:]
  -[durationModelInput med_dur_16]
  -[durationModelInput setMed_dur_16:]
  -[durationModelInput med_dur_24]
  -[durationModelInput setMed_dur_24:]
  -[durationModelInput cnt_dur_1]
  -[durationModelInput setCnt_dur_1:]
  -[durationModelInput cnt_dur_2]
  -[durationModelInput setCnt_dur_2:]
  -[durationModelInput cnt_dur_4]
  -[durationModelInput setCnt_dur_4:]
  -[durationModelInput cnt_dur_8]
  -[durationModelInput setCnt_dur_8:]
  -[durationModelInput cnt_dur_16]
  -[durationModelInput setCnt_dur_16:]
  -[durationModelInput cnt_dur_24]
  -[durationModelInput setCnt_dur_24:]
  -[durationModelInput std_dur_1]
  -[durationModelInput setStd_dur_1:]
  -[durationModelInput std_dur_2]
  -[durationModelInput setStd_dur_2:]
  -[durationModelInput std_dur_4]
  -[durationModelInput setStd_dur_4:]
  -[durationModelInput std_dur_8]
  -[durationModelInput setStd_dur_8:]
  -[durationModelInput std_dur_16]
  -[durationModelInput setStd_dur_16:]
  -[durationModelInput std_dur_24]
  -[durationModelInput setStd_dur_24:]


durationModelOutput : NSObject /usr/lib/libSystem.B.dylib <MLFeatureProvider>
 @property  double duration_pred
 @property  NSSet *featureNames

  // instance methods
  -[durationModelOutput featureValueForName:]
  -[durationModelOutput featureNames]
  -[durationModelOutput initWithDuration_pred:]
  -[durationModelOutput duration_pred]
  -[durationModelOutput setDuration_pred:]


durationModel : NSObject /usr/lib/libSystem.B.dylib
 @property  MLModel *model

  // class methods
  +[durationModel urlOfModelInThisBundle]

  // instance methods
  -[durationModel init]
  -[durationModel .cxx_destruct]
  -[durationModel initWithContentsOfURL:error:]
  -[durationModel model]
  -[durationModel predictionFromFeatures:error:]
  -[durationModel predictionFromFeatures:options:error:]
  -[durationModel initWithContentsOfURL:configuration:error:]
  -[durationModel initWithConfiguration:error:]
  -[durationModel predictionsFromInputs:options:error:]
  -[durationModel predictionFromPlugin_battery_level:time_from_plugin:med_dur_1:med_dur_2:med_dur_4:med_dur_8:med_dur_16:med_dur_24:cnt_dur_1:cnt_dur_2:cnt_dur_4:cnt_dur_8:cnt_dur_16:cnt_dur_24:std_dur_1:std_dur_2:std_dur_4:std_dur_8:std_dur_16:std_dur_24:error:]


engageModelInput : NSObject /usr/lib/libSystem.B.dylib <MLFeatureProvider>
 @property  double plugin_battery_level
 @property  double time_from_plugin
 @property  double med_dur_1
 @property  double med_dur_2
 @property  double med_dur_4
 @property  double med_dur_8
 @property  double med_dur_16
 @property  double med_dur_24
 @property  double cnt_dur_1
 @property  double cnt_dur_2
 @property  double cnt_dur_4
 @property  double cnt_dur_8
 @property  double cnt_dur_16
 @property  double cnt_dur_24
 @property  double std_dur_1
 @property  double std_dur_2
 @property  double std_dur_4
 @property  double std_dur_8
 @property  double std_dur_16
 @property  double std_dur_24
 @property  NSSet *featureNames

  // instance methods
  -[engageModelInput featureValueForName:]
  -[engageModelInput featureNames]
  -[engageModelInput initWithPlugin_battery_level:time_from_plugin:med_dur_1:med_dur_2:med_dur_4:med_dur_8:med_dur_16:med_dur_24:cnt_dur_1:cnt_dur_2:cnt_dur_4:cnt_dur_8:cnt_dur_16:cnt_dur_24:std_dur_1:std_dur_2:std_dur_4:std_dur_8:std_dur_16:std_dur_24:]
  -[engageModelInput plugin_battery_level]
  -[engageModelInput setPlugin_battery_level:]
  -[engageModelInput time_from_plugin]
  -[engageModelInput setTime_from_plugin:]
  -[engageModelInput med_dur_1]
  -[engageModelInput setMed_dur_1:]
  -[engageModelInput med_dur_2]
  -[engageModelInput setMed_dur_2:]
  -[engageModelInput med_dur_4]
  -[engageModelInput setMed_dur_4:]
  -[engageModelInput med_dur_8]
  -[engageModelInput setMed_dur_8:]
  -[engageModelInput med_dur_16]
  -[engageModelInput setMed_dur_16:]
  -[engageModelInput med_dur_24]
  -[engageModelInput setMed_dur_24:]
  -[engageModelInput cnt_dur_1]
  -[engageModelInput setCnt_dur_1:]
  -[engageModelInput cnt_dur_2]
  -[engageModelInput setCnt_dur_2:]
  -[engageModelInput cnt_dur_4]
  -[engageModelInput setCnt_dur_4:]
  -[engageModelInput cnt_dur_8]
  -[engageModelInput setCnt_dur_8:]
  -[engageModelInput cnt_dur_16]
  -[engageModelInput setCnt_dur_16:]
  -[engageModelInput cnt_dur_24]
  -[engageModelInput setCnt_dur_24:]
  -[engageModelInput std_dur_1]
  -[engageModelInput setStd_dur_1:]
  -[engageModelInput std_dur_2]
  -[engageModelInput setStd_dur_2:]
  -[engageModelInput std_dur_4]
  -[engageModelInput setStd_dur_4:]
  -[engageModelInput std_dur_8]
  -[engageModelInput setStd_dur_8:]
  -[engageModelInput std_dur_16]
  -[engageModelInput setStd_dur_16:]
  -[engageModelInput std_dur_24]
  -[engageModelInput setStd_dur_24:]


engageModelOutput : NSObject /usr/lib/libSystem.B.dylib <MLFeatureProvider>
 @property  long long engage
 @property  NSDictionary *classProbability
 @property  NSSet *featureNames

  // instance methods
  -[engageModelOutput .cxx_destruct]
  -[engageModelOutput featureValueForName:]
  -[engageModelOutput featureNames]
  -[engageModelOutput classProbability]
  -[engageModelOutput initWithEngage:classProbability:]
  -[engageModelOutput engage]
  -[engageModelOutput setEngage:]
  -[engageModelOutput setClassProbability:]


engageModel : NSObject /usr/lib/libSystem.B.dylib
 @property  MLModel *model

  // class methods
  +[engageModel urlOfModelInThisBundle]

  // instance methods
  -[engageModel init]
  -[engageModel .cxx_destruct]
  -[engageModel initWithContentsOfURL:error:]
  -[engageModel model]
  -[engageModel predictionFromFeatures:error:]
  -[engageModel predictionFromFeatures:options:error:]
  -[engageModel initWithContentsOfURL:configuration:error:]
  -[engageModel initWithConfiguration:error:]
  -[engageModel predictionsFromInputs:options:error:]
  -[engageModel predictionFromPlugin_battery_level:time_from_plugin:med_dur_1:med_dur_2:med_dur_4:med_dur_8:med_dur_16:med_dur_24:cnt_dur_1:cnt_dur_2:cnt_dur_4:cnt_dur_8:cnt_dur_16:cnt_dur_24:std_dur_1:std_dur_2:std_dur_4:std_dur_8:std_dur_16:std_dur_24:error:]


gbtClassifierInput : NSObject /usr/lib/libSystem.B.dylib <MLFeatureProvider>
 @property  double plugin_hour
 @property  double plugin_battery_level
 @property  double device_activity
 @property  double hour
 @property  double battery_level
 @property  double heuristic_bin
 @property  double plugin_location
 @property  double hour_bin_id
 @property  double time_from_plugin
 @property  double avg_dur
 @property  double cnt_dur
 @property  NSSet *featureNames

  // instance methods
  -[gbtClassifierInput setHour:]
  -[gbtClassifierInput hour]
  -[gbtClassifierInput featureValueForName:]
  -[gbtClassifierInput featureNames]
  -[gbtClassifierInput initWithPlugin_hour:plugin_battery_level:device_activity:hour:battery_level:heuristic_bin:plugin_location:hour_bin_id:time_from_plugin:avg_dur:cnt_dur:]
  -[gbtClassifierInput plugin_battery_level]
  -[gbtClassifierInput setPlugin_battery_level:]
  -[gbtClassifierInput time_from_plugin]
  -[gbtClassifierInput setTime_from_plugin:]
  -[gbtClassifierInput plugin_hour]
  -[gbtClassifierInput setPlugin_hour:]
  -[gbtClassifierInput device_activity]
  -[gbtClassifierInput setDevice_activity:]
  -[gbtClassifierInput battery_level]
  -[gbtClassifierInput setBattery_level:]
  -[gbtClassifierInput heuristic_bin]
  -[gbtClassifierInput setHeuristic_bin:]
  -[gbtClassifierInput plugin_location]
  -[gbtClassifierInput setPlugin_location:]
  -[gbtClassifierInput hour_bin_id]
  -[gbtClassifierInput setHour_bin_id:]
  -[gbtClassifierInput avg_dur]
  -[gbtClassifierInput setAvg_dur:]
  -[gbtClassifierInput cnt_dur]
  -[gbtClassifierInput setCnt_dur:]


gbtClassifierOutput : NSObject /usr/lib/libSystem.B.dylib <MLFeatureProvider>
 @property  long long wait_to_charge
 @property  NSDictionary *classProbability
 @property  NSSet *featureNames

  // instance methods
  -[gbtClassifierOutput .cxx_destruct]
  -[gbtClassifierOutput featureValueForName:]
  -[gbtClassifierOutput featureNames]
  -[gbtClassifierOutput classProbability]
  -[gbtClassifierOutput initWithWait_to_charge:classProbability:]
  -[gbtClassifierOutput setClassProbability:]
  -[gbtClassifierOutput wait_to_charge]
  -[gbtClassifierOutput setWait_to_charge:]


gbtClassifier : NSObject /usr/lib/libSystem.B.dylib
 @property  MLModel *model

  // class methods
  +[gbtClassifier urlOfModelInThisBundle]

  // instance methods
  -[gbtClassifier init]
  -[gbtClassifier .cxx_destruct]
  -[gbtClassifier initWithContentsOfURL:error:]
  -[gbtClassifier model]
  -[gbtClassifier predictionFromFeatures:error:]
  -[gbtClassifier predictionFromFeatures:options:error:]
  -[gbtClassifier initWithContentsOfURL:configuration:error:]
  -[gbtClassifier initWithConfiguration:error:]
  -[gbtClassifier predictionsFromInputs:options:error:]
  -[gbtClassifier predictionFromPlugin_hour:plugin_battery_level:device_activity:hour:battery_level:heuristic_bin:plugin_location:hour_bin_id:time_from_plugin:avg_dur:cnt_dur:error:]


gbtRegressorInput : NSObject /usr/lib/libSystem.B.dylib <MLFeatureProvider>
 @property  double plugin_hour
 @property  double plugin_battery_level
 @property  double hour
 @property  double time_from_plugin
 @property  double cnt_dur_1
 @property  double avg_dur_1
 @property  NSSet *featureNames

  // instance methods
  -[gbtRegressorInput setHour:]
  -[gbtRegressorInput hour]
  -[gbtRegressorInput featureValueForName:]
  -[gbtRegressorInput featureNames]
  -[gbtRegressorInput initWithPlugin_hour:plugin_battery_level:hour:time_from_plugin:cnt_dur_1:avg_dur_1:]
  -[gbtRegressorInput plugin_battery_level]
  -[gbtRegressorInput setPlugin_battery_level:]
  -[gbtRegressorInput time_from_plugin]
  -[gbtRegressorInput setTime_from_plugin:]
  -[gbtRegressorInput cnt_dur_1]
  -[gbtRegressorInput setCnt_dur_1:]
  -[gbtRegressorInput plugin_hour]
  -[gbtRegressorInput setPlugin_hour:]
  -[gbtRegressorInput avg_dur_1]
  -[gbtRegressorInput setAvg_dur_1:]


gbtRegressorOutput : NSObject /usr/lib/libSystem.B.dylib <MLFeatureProvider>
 @property  double smart_charge_duration
 @property  NSSet *featureNames

  // instance methods
  -[gbtRegressorOutput featureValueForName:]
  -[gbtRegressorOutput featureNames]
  -[gbtRegressorOutput initWithSmart_charge_duration:]
  -[gbtRegressorOutput smart_charge_duration]
  -[gbtRegressorOutput setSmart_charge_duration:]


gbtRegressor : NSObject /usr/lib/libSystem.B.dylib
 @property  MLModel *model

  // class methods
  +[gbtRegressor urlOfModelInThisBundle]

  // instance methods
  -[gbtRegressor init]
  -[gbtRegressor .cxx_destruct]
  -[gbtRegressor initWithContentsOfURL:error:]
  -[gbtRegressor model]
  -[gbtRegressor predictionFromFeatures:error:]
  -[gbtRegressor predictionFromFeatures:options:error:]
  -[gbtRegressor initWithContentsOfURL:configuration:error:]
  -[gbtRegressor initWithConfiguration:error:]
  -[gbtRegressor predictionsFromInputs:options:error:]
  -[gbtRegressor predictionFromPlugin_hour:plugin_battery_level:hour:time_from_plugin:cnt_dur_1:avg_dur_1:error:]


NSArray(PowerUIAdditions)
	// instance methods
	-[NSArray(PowerUIAdditions) standardDeviation]
	-[NSArray(PowerUIAdditions) mean]
	-[NSArray(PowerUIAdditions) median]
	-[NSArray(PowerUIAdditions) percentile:]

_DKEvent(PowerUIAdditions)
	// instance methods
	-[_DKEvent(PowerUIAdditions) duration]
	-[_DKEvent(PowerUIAdditions) includesDate:]

01 00 0e00 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLLocationManager 
01 00 0c00 /System/Library/Frameworks/EventKit.framework/EventKit: EKEvent 
01 00 0c00 /System/Library/Frameworks/EventKit.framework/EventKit: EKEventStore 
01 00 1100 /System/Library/Frameworks/CoreML.framework/CoreML: MLArrayBatchProvider 
01 00 1100 /System/Library/Frameworks/CoreML.framework/CoreML: MLCompiler 
01 00 1100 /System/Library/Frameworks/CoreML.framework/CoreML: MLDictionaryFeatureProvider 
01 00 1100 /System/Library/Frameworks/CoreML.framework/CoreML: MLFeatureValue 
01 00 1100 /System/Library/Frameworks/CoreML.framework/CoreML: MLModel 
01 00 1100 /System/Library/Frameworks/CoreML.framework/CoreML: MLMultiArray 
01 00 1100 /System/Library/Frameworks/CoreML.framework/CoreML: MLPredictionOptions 
01 00 0800 /System/Library/PrivateFrameworks/MobileTimer.framework/MobileTimer: MTAlarm 
01 00 0800 /System/Library/PrivateFrameworks/MobileTimer.framework/MobileTimer: MTAlarmManager 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSCompoundPredicate 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateInterval 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1300 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0400 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListener 
01 00 0b00 /System/Library/Frameworks/PassKit.framework/PassKit: PKPassLibrary 
01 00 0f00 /System/Library/PrivateFrameworks/CoreRoutine.framework/CoreRoutine: RTRoutineManager 
01 00 0d00 /System/Library/PrivateFrameworks/CoreSuggestions.framework/CoreSuggestions: SGEventMetadata 
01 00 0200 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRIClient 
01 00 0a00 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNMutableNotificationContent 
01 00 0a00 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNNotificationIcon 
01 00 0a00 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNNotificationRequest 
01 00 0a00 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNUserNotificationCenter 
01 00 0500 /System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet: _CDBatterySaver 
01 00 0600 /System/Library/PrivateFrameworks/CoreDuetContext.framework/CoreDuetContext: _CDClientContext 
01 00 0600 /System/Library/PrivateFrameworks/CoreDuetContext.framework/CoreDuetContext: _CDContextQueries 
01 00 0600 /System/Library/PrivateFrameworks/CoreDuetContext.framework/CoreDuetContext: _CDContextualChangeRegistration 
01 00 0600 /System/Library/PrivateFrameworks/CoreDuetContext.framework/CoreDuetContext: _CDContextualKeyPath 
01 00 0600 /System/Library/PrivateFrameworks/CoreDuetContext.framework/CoreDuetContext: _CDContextualPredicate 
01 00 0500 /System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet: _DKEvent 
01 00 0500 /System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet: _DKEventQuery 
01 00 0500 /System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet: _DKEventStream 
01 00 0500 /System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet: _DKIntentMetadataKey 
01 00 0500 /System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet: _DKKnowledgeStore 
01 00 0500 /System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet: _DKPredictionQuery 
01 00 0500 /System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet: _DKPredictionTimeline 
01 00 0500 /System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet: _DKQuery 
01 00 0500 /System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet: _DKSystemEventStreams 
