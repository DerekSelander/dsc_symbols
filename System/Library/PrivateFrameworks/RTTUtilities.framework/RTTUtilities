|| __DATA.__data _RTTServiceUpdateOptionsKeyContactName
|| __DATA.__data _RTTServiceUpdateTypeDowngrade
|| __DATA.__data _RTTServiceUpdateTypeEnded
|| __DATA.__data _RTTServiceUpdateTypeIncomingHold
|| __DATA.__data _RTTServiceUpdateTypeMuted
|| __DATA.__data _RTTServiceUpdateTypeOutgoingHold
|| __DATA.__data _RTTServiceUpdateTypeRemoteInterrupt
|| __DATA.__data _RTTServiceUpdateTypeUnmuted
|| __DATA.__data _kAXSRTTAnswerAllRTTCallsAsMutedPreference
|| __DATA.__data _kAXSRTTSettingsVersionPreference
|| __DATA.__data _kAXSRTTShowsNotificationsPreference
|| __DATA.__data _kAXSTTYHardwareEnabledPreference
|| __DATA.__data _kAXSTTYIncomingCallsTTYPreference
|| __DATA.__data _kAXSTTYPreferredRelayNumberPreference
|| __DATA.__data _kAXSTTYShouldBeRealtimePreference
|| __DATA.__data _kAXSTTYSoftwareEnabledPreference
|| __DATA.__objc_data _OBJC_CLASS_$_AXTTYSimulatorSubscriptionContext
|| __DATA.__objc_data _OBJC_CLASS_$_RTTCall
|| __DATA.__objc_data _OBJC_CLASS_$_RTTConversation
|| __DATA.__objc_data _OBJC_CLASS_$_RTTDictionaryManager
|| __DATA.__objc_data _OBJC_CLASS_$_RTTRemoteCall
|| __DATA.__objc_data _OBJC_CLASS_$_RTTServiceUpdate
|| __DATA.__objc_data _OBJC_CLASS_$_RTTUtterance
|| __DATA.__objc_data _OBJC_METACLASS_$_AXTTYSimulatorSubscriptionContext
|| __DATA.__objc_data _OBJC_METACLASS_$_RTTCall
|| __DATA.__objc_data _OBJC_METACLASS_$_RTTConversation
|| __DATA.__objc_data _OBJC_METACLASS_$_RTTDictionaryManager
|| __DATA.__objc_data _OBJC_METACLASS_$_RTTRemoteCall
|| __DATA.__objc_data _OBJC_METACLASS_$_RTTServiceUpdate
|| __DATA.__objc_data _OBJC_METACLASS_$_RTTUtterance
|| __DATA_CONST.__const _AXTTYMessageKeyCallID
|| __DATA_CONST.__const _AXTTYMessageKeyContactID
|| __DATA_CONST.__const _AXTTYMessageKeyContactPathSearchAction
|| __DATA_CONST.__const _AXTTYMessageKeyContactSearchAction
|| __DATA_CONST.__const _AXTTYMessageKeyConversation
|| __DATA_CONST.__const _AXTTYMessageKeyConversationUpdates
|| __DATA_CONST.__const _AXTTYMessageKeyDeleteAction
|| __DATA_CONST.__const _AXTTYMessageKeyIsVisible
|| __DATA_CONST.__const _AXTTYMessageKeyMediaActions
|| __DATA_CONST.__const _AXTTYMessageKeyMessageType
|| __DATA_CONST.__const _AXTTYMessageKeyReadAction
|| __DATA_CONST.__const _AXTTYMessageKeyRemoteConversationUpdates
|| __DATA_CONST.__const _AXTTYMessageKeyResult
|| __DATA_CONST.__const _AXTTYMessageKeySenderType
|| __DATA_CONST.__const _AXTTYMessageKeyServerSettingsUpdateAction
|| __DATA_CONST.__const _AXTTYMessageKeyServiceMessageUpdates
|| __DATA_CONST.__const _AXTTYMessageKeySetVisibleServiceUpdate
|| __DATA_CONST.__const _AXTTYMessageKeySettingsKey
|| __DATA_CONST.__const _AXTTYMessageKeyUUID
|| __DATA_CONST.__const _AXTTYMessageKeyValue
|| __DATA_CONST.__const _AXTTYMessageKeyWriteAction
|| __DATA_CONST.__const _AXTTYPreferredTransportMethodChangedNotification
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AXRTTSettingsListenerHelper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_RTTController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_RTTDatabaseManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_RTTNanoSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_RTTServer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_RTTSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_RTTTelephonyUtilities
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_RTTTranscriptionController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TTYContactList
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TTYHistory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AXRTTSettingsListenerHelper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_RTTController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_RTTDatabaseManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_RTTNanoSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_RTTServer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_RTTSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_RTTTelephonyUtilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_RTTTranscriptionController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TTYContactList
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TTYHistory
|| __TEXT.__const _RTTUtilitiesVersionNumber
|| __TEXT.__const _RTTUtilitiesVersionString
|| __TEXT.__text _AXTTYIsTextHeldForRTTCall
|| __TEXT.__text _AXTTYTextStreamToken
|| __TEXT.__text _RTTGenerateUserNotificationForContact
|| __TEXT.__text _RTTRemoveUserNotifications
|| __TEXT.__text _RTTRequestNotificationAuthorization
|| __TEXT.__text _RTTSetDownlinkMute
|| __TEXT.__text _accessibilityRTTUtilitiesBundle
|| __TEXT.__text _ttyLocString
|| __TEXT.__text _ttyLocStringAndLocale
__ AVConference: _OBJC_CLASS_$_AVAudioClient
__ AVConference: _OBJC_CLASS_$_AVCVirtualTTYDevice
__ AVFAudio: _AVAudioSessionInterruptionNotification
__ AVFAudio: _AVAudioSessionInterruptionTypeKey
__ AXCoreUtilities: _AXLogRTT
__ AXCoreUtilities: _AXPerformBlockAsynchronouslyOnMainThread
__ AXCoreUtilities: _AXPerformBlockOnMainThread
__ AXCoreUtilities: _OBJC_CLASS_$_AXAccessQueue
__ AXCoreUtilities: _OBJC_CLASS_$_AXDispatchTimer
__ AXRuntime: _AXPidSuspend
__ AXRuntime: _AXPidUnsuspend
__ Accounts: _ACAccountTypeIdentifierAppleAccount
__ Accounts: _ACDAccountStoreDidChangeNotification
__ Accounts: _OBJC_CLASS_$_ACAccountStore
__ CallHistory: _OBJC_CLASS_$_CHManager
__ CallHistory: _kCallHistoryDatabaseChangedNotification
__ Celestial: _AVSystemController_ActiveInputRouteForPlayAndRecordNoBluetoothDidChangeNotification
__ Celestial: _AVSystemController_DownlinkMuteAttribute
__ Celestial: _AVSystemController_HeadphoneJackHasInputAttribute
__ Celestial: _AVSystemController_HeadphoneJackIsConnectedAttribute
__ Celestial: _AVSystemController_HeadphoneJackIsConnectedDidChangeNotification
__ Celestial: _AVSystemController_ServerConnectionDiedNotification
__ Celestial: _AVSystemController_SubscribeToNotificationsAttribute
__ Celestial: _OBJC_CLASS_$_AVSystemController
__ Contacts: _CNContactEmailAddressesKey
__ Contacts: _CNContactPhoneNumbersKey
__ Contacts: _OBJC_CLASS_$_CNContact
__ Contacts: _OBJC_CLASS_$_CNContactFormatter
__ Contacts: _OBJC_CLASS_$_CNContactStore
__ Contacts: _OBJC_CLASS_$_CNContactStoreConfiguration
__ Contacts: _OBJC_CLASS_$_CNPhoneNumber
__ CoreData: _OBJC_CLASS_$_NSEntityDescription
__ CoreData: _OBJC_CLASS_$_NSFetchRequest
__ CoreData: _OBJC_CLASS_$_NSManagedObject
__ CoreData: _OBJC_METACLASS_$_NSManagedObject
__ CoreFoundation: _CFBundleCopyLocalizedStringForLocalization
__ CoreFoundation: _CFBundleCreate
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterGetLocalCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFPreferencesCopyValue
__ CoreFoundation: _CFPreferencesSetValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRunLoopRunInMode
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFPreferencesCurrentHost
__ CoreFoundation: _kCFRunLoopDefaultMode
__ CoreTelephony: _OBJC_CLASS_$_CTPhoneNumberInfo
__ CoreTelephony: _OBJC_CLASS_$_CTXPCServiceSubscriptionContext
__ CoreTelephony: _OBJC_CLASS_$_CoreTelephonyClient
__ CoreTelephony: _OBJC_METACLASS_$_CTXPCServiceSubscriptionContext
__ CoreTelephony: _kIsTextHeldForRTTCall
__ CoreTelephony: _kTextStreamToken
__ Foundation: _NSKeyedArchiveRootObjectKey
__ Foundation: _NSLog
__ Foundation: _NSSelectorFromString
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSUbiquitousKeyValueStoreDidChangeExternallyNotification
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSLock
__ Foundation: _OBJC_CLASS_$_NSMutableCharacterSet
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSUbiquitousKeyValueStore
__ HearingCore: _OBJC_CLASS_$_HCDatabaseManager
__ HearingCore: _OBJC_CLASS_$_HCServer
__ HearingCore: _OBJC_CLASS_$_HCUtilities
__ HearingCore: _OBJC_CLASS_$_HCXPCMessage
__ HearingCore: _OBJC_METACLASS_$_HCDatabaseManager
__ HearingCore: _OBJC_METACLASS_$_HCServer
__ MobileAsset: _OBJC_CLASS_$_MAAssetQuery
__ MobileAsset: _OBJC_CLASS_$_MADownloadOptions
__ NanoPreferencesSync: _OBJC_CLASS_$_NPSDomainAccessor
__ NanoPreferencesSync: _OBJC_CLASS_$_NPSManager
__ Rapport: _OBJC_CLASS_$_RPCompanionLinkClient
__ RunningBoardServices: _OBJC_CLASS_$_RBSAssertion
__ RunningBoardServices: _OBJC_CLASS_$_RBSDomainAttribute
__ RunningBoardServices: _OBJC_CLASS_$_RBSTarget
__ SoftLinking: __sl_dlopen
__ TelephonyUtilities: _OBJC_CLASS_$_TUCall
__ TelephonyUtilities: _OBJC_CLASS_$_TUCallCapabilities
__ TelephonyUtilities: _OBJC_CLASS_$_TUCallCenter
__ TelephonyUtilities: _OBJC_CLASS_$_TUCallProviderManager
__ TelephonyUtilities: _OBJC_CLASS_$_TUPhoneNumber
__ TelephonyUtilities: _OBJC_CLASS_$_TUSenderIdentityClient
__ TelephonyUtilities: _TUCallCenterCallContinuityStateChangedNotification
__ TelephonyUtilities: _TUCallCenterCallStatusChangedNotification
__ TelephonyUtilities: _TUCallIsUsingBasebandChangedNotification
__ TelephonyUtilities: _TUCallProviderContextChangedNotification
__ TelephonyUtilities: _TUCallSupportsTTYWithVoiceChangedNotification
__ TelephonyUtilities: _TUCallTTYTypeChangedNotification
__ libAccessibility.dylib: __AXSAssistiveTouchScannerEnabled
__ libAccessibility.dylib: __AXSInUnitTestMode
__ libAccessibility.dylib: __AXSSoftwareTTYSetEnabled
__ libAccessibility.dylib: __AXSVoiceOverTouchEnabled
__ libAccessibility.dylib: _kAXSTTYPreferenceDomain
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_current_queue
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_queue_get_specific
__ libSystem.B.dylib: _dispatch_queue_set_specific
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlclose
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _geteuid
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _getpwnam
__ libSystem.B.dylib: _os_log_type_enabled
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x27
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_retain_x9
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
RTTController : NSObject <RTTCallDelegate, TUCallCapabilitiesDelegate, AXUIClientDelegate, RTTTranscriptionControllerDelegate>
 @property  @? actionCompletionBlock
 @property  BOOL shouldSuppressIncomingNotification
 @property  RTTTranscriptionController *transcriber
 @property  NSMutableArray *rttCalls
 @property  <HCHeardControllerProtocol> *delegate
 @property  @? serverInvalidateCallback
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[RTTController sharedController]

  // instance methods
  -[RTTController setDelegate:]
  -[RTTController delegate]
  -[RTTController dealloc]
  -[RTTController .cxx_destruct]
  -[RTTController didChangeTelephonyCallingSupport]
  -[RTTController init]
  -[RTTController userInterfaceClient:processMessageFromServer:withIdentifier:error:]
  -[RTTController actionCompletionBlock]
  -[RTTController setActionCompletionBlock:]
  -[RTTController handleDatabaseRequest:]
  -[RTTController handleDictionaryRequest:]
  -[RTTController handleIncomingNotificationSuppressionChange:]
  -[RTTController handleMediaAction:]
  -[RTTController displayCallPrompt:]
  -[RTTController handleRTTControllerIsVisible:]
  -[RTTController handleSettingsRequest:]
  -[RTTController clientRemoved:]
  -[RTTController callDidConnect:]
  -[RTTController ttyCall:didReceiveString:forUtterance:]
  -[RTTController ttyCall:didSendRemoteString:forUtterance:]
  -[RTTController ttyCall:setVisible:serviceUpdate:]
  -[RTTController transcriptionDidStart:forCallUUID:]
  -[RTTController transcriptionDidUpdate:forCallUUID:]
  -[RTTController _requestNotificationAuthorizationIfNecessary]
  -[RTTController _requestNotificationAuthorization]
  -[RTTController _handlePreferredRelayNumberUpdate]
  -[RTTController invalidateServerCaches:]
  -[RTTController _refreshCurrentCallList]
  -[RTTController _refreshCurrentCallListWithExistingCalls:]
  -[RTTController handleUpdatedCalls:]
  -[RTTController _callForUUIDWithoutRefresh:]
  -[RTTController callForUUID:]
  -[RTTController dismissRTTFirstUseAlert]
  -[RTTController displayRTTFirstUseAlert]
  -[RTTController actionClient]
  -[RTTController _updateConversationControllerWithTranscription:type:callUUID:]
  -[RTTController rttCalls]
  -[RTTController setRttCalls:]
  -[RTTController serverInvalidateCallback]
  -[RTTController setServerInvalidateCallback:]
  -[RTTController shouldSuppressIncomingNotification]
  -[RTTController setShouldSuppressIncomingNotification:]
  -[RTTController transcriber]
  -[RTTController setTranscriber:]


AXTTYSimulatorSubscriptionContext : CTXPCServiceSubscriptionContext
 @property  NSUUID *testUuid

  // instance methods
  -[AXTTYSimulatorSubscriptionContext uuid]
  -[AXTTYSimulatorSubscriptionContext .cxx_destruct]
  -[AXTTYSimulatorSubscriptionContext setTestUuid:]
  -[AXTTYSimulatorSubscriptionContext testUuid]
  -[AXTTYSimulatorSubscriptionContext init]


RTTTelephonyUtilities : NSObject <CoreTelephonyClientCarrierBundleDelegate, TUCallCapabilitiesDelegatePrivate, TUCallCapabilitiesDelegate>
 @property  BOOL headphoneJackSupportsTTY
 @property  CoreTelephonyClient *telephonyClient
 @property  NSObject<OS_dispatch_queue> *telephonyUpdateQueue
 @property  NSObject<OS_dispatch_queue> *accountStoreQueue
 @property  CTXPCServiceSubscriptionContext *defaultVoiceContext
 @property  NSSet *allVoiceContexts
 @property  unsigned long activeContextCount
 @property  NSNumber *callCapabilitiesSupportsTelephonyCalls
 @property  NSArray *cachedSubscriptionContexts
 @property  CTXPCContexts *cachedActiveContexts
 @property  NSMutableDictionary *phoneNumberInfoCache
 @property  CNContactStore *contactStore
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[RTTTelephonyUtilities isRTTCallHoldSupportedForContext:]
  +[RTTTelephonyUtilities shouldUseRTT]
  +[RTTTelephonyUtilities isOnlyRTTSupportedForContext:]
  +[RTTTelephonyUtilities softwareTTYIsSupported]
  +[RTTTelephonyUtilities relayPhoneNumber]
  +[RTTTelephonyUtilities shouldUseRTTForContext:]
  +[RTTTelephonyUtilities hardwareTTYIsSupported]
  +[RTTTelephonyUtilities isRTTSupported]
  +[RTTTelephonyUtilities sharedCallCenter]
  +[RTTTelephonyUtilities isOnlyRTTSupported]
  +[RTTTelephonyUtilities currentSupportedTextingType]
  +[RTTTelephonyUtilities relayIsSupportedForContext:]
  +[RTTTelephonyUtilities isTTYSupportedForContext:]
  +[RTTTelephonyUtilities isTTYSupported]
  +[RTTTelephonyUtilities relayPhoneNumberForContext:]
  +[RTTTelephonyUtilities performCallCenterTask:]
  +[RTTTelephonyUtilities sharedUtilityProvider]
  +[RTTTelephonyUtilities TTYSoftwareEnabledForAnyActiveContext]
  +[RTTTelephonyUtilities relayIsSupported]
  +[RTTTelephonyUtilities hardwareTTYIsSupportedForContext:]
  +[RTTTelephonyUtilities TTYHardwareEnabledForAnyActiveContext]
  +[RTTTelephonyUtilities isRTTSupportedForContext:]
  +[RTTTelephonyUtilities isRelayRTTSupported]
  +[RTTTelephonyUtilities softwareTTYIsSupportedForContext:]

  // instance methods
  -[RTTTelephonyUtilities telephonyClient]
  -[RTTTelephonyUtilities subscriptionInfoDidChange]
  -[RTTTelephonyUtilities updateHeadphoneState]
  -[RTTTelephonyUtilities setAccountStoreQueue:]
  -[RTTTelephonyUtilities reloadRelayPhoneNumbers]
  -[RTTTelephonyUtilities iCloudAccountDidChange:]
  -[RTTTelephonyUtilities subscriptionContexts]
  -[RTTTelephonyUtilities isRTTCallHoldSupportedForContext:]
  -[RTTTelephonyUtilities setContactStore:]
  -[RTTTelephonyUtilities contactPathIsMe:]
  -[RTTTelephonyUtilities phoneNumberInfoCache]
  -[RTTTelephonyUtilities setAllVoiceContexts:]
  -[RTTTelephonyUtilities relayNumberForContext:]
  -[RTTTelephonyUtilities setCallCapabilitiesSupportsTelephonyCalls:]
  -[RTTTelephonyUtilities contextForCall:]
  -[RTTTelephonyUtilities callCapabilitiesSupportsTelephonyCalls]
  -[RTTTelephonyUtilities setTelephonyClient:]
  -[RTTTelephonyUtilities setDefaultVoiceContext:]
  -[RTTTelephonyUtilities headphoneStateChangedNotification:]
  -[RTTTelephonyUtilities telephonyUpdateQueue]
  -[RTTTelephonyUtilities dealloc]
  -[RTTTelephonyUtilities ttyMeContact]
  -[RTTTelephonyUtilities setActiveContextCount:]
  -[RTTTelephonyUtilities currentPreferredTransportMethodForContext:]
  -[RTTTelephonyUtilities activeContexts]
  -[RTTTelephonyUtilities mediaServerDied]
  -[RTTTelephonyUtilities .cxx_destruct]
  -[RTTTelephonyUtilities phoneNumberFromUUID:]
  -[RTTTelephonyUtilities cachedSubscriptionContexts]
  -[RTTTelephonyUtilities setPhoneNumberInfoCache:]
  -[RTTTelephonyUtilities currentProcessHandlesCloudRelay]
  -[RTTTelephonyUtilities currentPreferredTransportMethod]
  -[RTTTelephonyUtilities setHeadphoneJackSupportsTTY:]
  -[RTTTelephonyUtilities purgePhoneNumberInfoCache]
  -[RTTTelephonyUtilities isTTYSupportedForContext:]
  -[RTTTelephonyUtilities setCachedActiveContexts:]
  -[RTTTelephonyUtilities setTelephonyUpdateQueue:]
  -[RTTTelephonyUtilities listenForCloudRelayChanges]
  -[RTTTelephonyUtilities setTTYDictionaryAvailability:]
  -[RTTTelephonyUtilities contactPathForCall:]
  -[RTTTelephonyUtilities _processiCloudAccountForRTT]
  -[RTTTelephonyUtilities deviceIsTinker]
  -[RTTTelephonyUtilities didChangeRelayCallingAvailability]
  -[RTTTelephonyUtilities didChangeOutgoingRelayCallerID]
  -[RTTTelephonyUtilities iCloudRTTRelayDidChange:]
  -[RTTTelephonyUtilities isTTYOverIMSSupportedForContext:]
  -[RTTTelephonyUtilities carrierSettingsDidChange]
  -[RTTTelephonyUtilities getCarrierValueForKeyHierarchy:andContext:]
  -[RTTTelephonyUtilities contactIsTTYContact:]
  -[RTTTelephonyUtilities activeContextCount]
  -[RTTTelephonyUtilities defaultVoiceContext]
  -[RTTTelephonyUtilities registerNotifications]
  -[RTTTelephonyUtilities cachedActiveContexts]
  -[RTTTelephonyUtilities phoneNumberForContext:]
  -[RTTTelephonyUtilities didChangeTelephonyCallingSupport]
  -[RTTTelephonyUtilities accountStoreQueue]
  -[RTTTelephonyUtilities answerRTTCallAsMutedForCall:]
  -[RTTTelephonyUtilities labelFromUUID:]
  -[RTTTelephonyUtilities contactStore]
  -[RTTTelephonyUtilities relayIsSupported]
  -[RTTTelephonyUtilities didChangeRelayCallingCapabilities]
  -[RTTTelephonyUtilities activeSubscriptionsDidChange]
  -[RTTTelephonyUtilities headphoneJackSupportsTTY]
  -[RTTTelephonyUtilities allVoiceContexts]
  -[RTTTelephonyUtilities reloadDefaultVoiceContext]
  -[RTTTelephonyUtilities setCachedSubscriptionContexts:]
  -[RTTTelephonyUtilities myPhoneNumber]
  -[RTTTelephonyUtilities init]
  -[RTTTelephonyUtilities relayRTTIsSupported]
  -[RTTTelephonyUtilities getCarrierValueForKey:andContext:]


TTYHistory : NSManagedObject
 @property  NSString *callUID
 @property  NSNumber *needsCloudKitUpload
 @property  NSData *data
 @property  NSNumber *version


RTTDictionaryManager : NSObject
 @property  NSArray *availableDictionaries

  // class methods
  +[RTTDictionaryManager _availableDictionaryAssetsUsingRemoteInfo:]

  // instance methods
  -[RTTDictionaryManager dealloc]
  -[RTTDictionaryManager .cxx_destruct]
  -[RTTDictionaryManager init]
  -[RTTDictionaryManager downloadIfNeeded]
  -[RTTDictionaryManager deleteIfNeeded]
  -[RTTDictionaryManager _downloadAsset:]
  -[RTTDictionaryManager _ttyDictionaryAsset]
  -[RTTDictionaryManager availableDictionaries]
  -[RTTDictionaryManager setAvailableDictionaries:]


RTTServer : HCServer
 @property  @? actionCompletionBlock
 @property  RBSAssertion *assertionInCallService

  // class methods
  +[RTTServer sharedInstance]

  // instance methods
  -[RTTServer resetConnection]
  -[RTTServer dealloc]
  -[RTTServer .cxx_destruct]
  -[RTTServer setTTYDictionaryAvailability:]
  -[RTTServer contactIsTTYContact:]
  -[RTTServer init]
  -[RTTServer actionCompletionBlock]
  -[RTTServer setActionCompletionBlock:]
  -[RTTServer handleMessageWithPayload:forIdentifier:]
  -[RTTServer handleMessageError:destructive:]
  -[RTTServer terminateConnectionAndNotify:]
  -[RTTServer shouldRestartOnInterruption]
  -[RTTServer registerResponseBlock:forUUID:]
  -[RTTServer setShouldSuppressIncomingNotification:]
  -[RTTServer _registerForServerSettingsUpdates]
  -[RTTServer _managerAXPIDState:]
  -[RTTServer isEmergencyNumber:]
  -[RTTServer displayCallPromptForContact:withCompletion:]
  -[RTTServer cancelCallPromptDisplay]
  -[RTTServer findConversationForCallUID:andResult:]
  -[RTTServer setSystemOutputAudioMuted:withCallID:]
  -[RTTServer setViewControllerIsVisible:withCallID:]
  -[RTTServer sendString:forCallUID:]
  -[RTTServer registerForUpdates:forCallUID:]
  -[RTTServer registerForRemoteUpdates:forCallUID:]
  -[RTTServer registerForServiceUpdates:forCallUID:]
  -[RTTServer deleteConversationWithCallUID:]
  -[RTTServer valueForTTYSetting:]
  -[RTTServer _takeStackshot]
  -[RTTServer primeRTTServer]
  -[RTTServer assertionInCallService]
  -[RTTServer setAssertionInCallService:]


RTTCall : NSObject <AVCVirtualTTYDeviceDelegate>
 @property  AVCVirtualTTYDevice *ttyDevice
 @property  RTTConversation *conversation
 @property  TUCall *call
 @property  NSDictionary *substitutions
 @property  <RTTCallDelegate> *delegate
 @property  NSObject<OS_dispatch_queue> *callQueue
 @property  BOOL isViewControllerVisible
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[RTTCall setDelegate:]
  -[RTTCall delegate]
  -[RTTCall dealloc]
  -[RTTCall mediaServerDied]
  -[RTTCall .cxx_destruct]
  -[RTTCall stop]
  -[RTTCall isLocallyHosted]
  -[RTTCall call]
  -[RTTCall conversation]
  -[RTTCall setCall:]
  -[RTTCall registerNotifications]
  -[RTTCall start]
  -[RTTCall setConversation:]
  -[RTTCall substitutions]
  -[RTTCall setSubstitutions:]
  -[RTTCall initWithCall:]
  -[RTTCall deviceDidStop:]
  -[RTTCall device:didStart:error:]
  -[RTTCall device:didReceiveCharacter:]
  -[RTTCall device:didReceiveText:]
  -[RTTCall audioSessionWasInterrupted:]
  -[RTTCall recreateTTYDevice:]
  -[RTTCall toggleSystemOutputMute:]
  -[RTTCall sendString:]
  -[RTTCall _handleInitialGarbageTextFromTTY:device:]
  -[RTTCall _processText:withDevice:]
  -[RTTCall callDidReceiveText:forUtterance:]
  -[RTTCall saveTranscribedTextForConversation:isNew:]
  -[RTTCall _postLocalNotificationForText:]
  -[RTTCall callQueue]
  -[RTTCall isViewControllerVisible]
  -[RTTCall setIsViewControllerVisible:]
  -[RTTCall ttyDevice]
  -[RTTCall setTtyDevice:]


RTTRemoteCall : RTTCall
 @property  RPCompanionLinkClient *client
 @property  RPCompanionLinkDevice *pairedCallDevice

  // instance methods
  -[RTTRemoteCall .cxx_destruct]
  -[RTTRemoteCall setClient:]
  -[RTTRemoteCall stop]
  -[RTTRemoteCall isLocallyHosted]
  -[RTTRemoteCall client]
  -[RTTRemoteCall start]
  -[RTTRemoteCall addDevice:]
  -[RTTRemoteCall initWithCall:]
  -[RTTRemoteCall removeDevice:]
  -[RTTRemoteCall sendString:]
  -[RTTRemoteCall callDidReceiveText:forUtterance:]
  -[RTTRemoteCall updateCallWithRemoteFailure]
  -[RTTRemoteCall resetRapportClientAndInvalidate:]
  -[RTTRemoteCall setupRapportClient]
  -[RTTRemoteCall sendCallIDChallengeToDevice:]
  -[RTTRemoteCall sendCallIDChallengeToDeviceId:]
  -[RTTRemoteCall responseForRequest:options:]
  -[RTTRemoteCall pairedCallDevice]
  -[RTTRemoteCall setPairedCallDevice:]


RTTTranscriptionController : NSObject
 @property  AXLTLiveTranscription *transcriber
 @property  <RTTTranscriptionControllerDelegate> *delegate
 @property  NSString *currentTranscription
 @property  NSString *currentCallUUID

  // instance methods
  -[RTTTranscriptionController setDelegate:]
  -[RTTTranscriptionController delegate]
  -[RTTTranscriptionController .cxx_destruct]
  -[RTTTranscriptionController initWithDelegate:]
  -[RTTTranscriptionController init]
  -[RTTTranscriptionController currentTranscription]
  -[RTTTranscriptionController setCurrentTranscription:]
  -[RTTTranscriptionController transcriber]
  -[RTTTranscriptionController setTranscriber:]
  -[RTTTranscriptionController startTranscribingForCallUUID:]
  -[RTTTranscriptionController stopTranscribingForCallUUID:]
  -[RTTTranscriptionController currentCallUUID]
  -[RTTTranscriptionController setCurrentCallUUID:]


RTTDatabaseManager : HCDatabaseManager
  // class methods
  +[RTTDatabaseManager sharedManager]

  // instance methods
  -[RTTDatabaseManager logMessage:]
  -[RTTDatabaseManager containerIdentifier]
  -[RTTDatabaseManager .cxx_destruct]
  -[RTTDatabaseManager cloudKitContainer]
  -[RTTDatabaseManager contactIsTTYContact:]
  -[RTTDatabaseManager init]
  -[RTTDatabaseManager managedObjectModelName]
  -[RTTDatabaseManager deleteConversationWithCallUID:]
  -[RTTDatabaseManager callHistoryDBDidChange:]
  -[RTTDatabaseManager _callHistoryDBDidChange:]
  -[RTTDatabaseManager conversationForCallUID:]
  -[RTTDatabaseManager saveConversation:]
  -[RTTDatabaseManager deleteConversationsWithCallUIDs:]
  -[RTTDatabaseManager contactIDIsTTYContact:]
  -[RTTDatabaseManager contactPathWasUsedForTTY:]


TTYContactList : NSManagedObject
 @property  NSString *callUID
 @property  NSString *contactID


RTTServiceUpdate : NSObject
 @property  NSString *serviceUpdateType
 @property  NSDictionary *options

  // instance methods
  -[RTTServiceUpdate .cxx_destruct]
  -[RTTServiceUpdate options]
  -[RTTServiceUpdate setOptions:]
  -[RTTServiceUpdate isEqual:]
  -[RTTServiceUpdate initWithServiceUpdateType:options:]
  -[RTTServiceUpdate optionValueForKey:]
  -[RTTServiceUpdate serviceUpdateType]
  -[RTTServiceUpdate setServiceUpdateType:]


AXRTTSettingsListenerHelper : NSObject
  // instance methods
  -[AXRTTSettingsListenerHelper addSelectorKey:]
  -[AXRTTSettingsListenerHelper dealloc]
  -[AXRTTSettingsListenerHelper .cxx_destruct]
  -[AXRTTSettingsListenerHelper initWithListenerAddress:]


RTTSettings : NSObject
 @property  NSMutableSet *registeredNotifications
 @property  NSMutableSet *synchronizePreferences
 @property  NSMutableDictionary *updateBlocks
 @property  NSObject<OS_dispatch_queue> *nanoSynchronizeQueue
 @property  BOOL TTYHardwareEnabled
 @property  BOOL TTYSoftwareEnabled
 @property  BOOL incomingCallsTTY
 @property  BOOL ttyShouldBeRealtime
 @property  NSString *preferredRelayNumber
 @property  BOOL answerRTTCallsAsMuted
 @property  BOOL showsRTTNotifications
 @property  BOOL rttLiveTranscriptionsEnabled
 @property  NSArray *cannedResponses
 @property  BOOL rttInlineAbbreviationBarEnabled
 @property  BOOL rttCallHoldEnabled
 @property  BOOL continuityRTTIsSupported
 @property  BOOL supportsRelayCalling
 @property  BOOL isRelayCallingEnabled
 @property  BOOL hasReceivedRTTCall
 @property  long long incomingTTYCallCount
 @property  long long outgoingTTYCallCount
 @property  double lastCallCountReset
 @property  double lastDBVacuum
 @property  BOOL internalOverrideTTYAvailability

  // class methods
  +[RTTSettings sharedInstance]
  +[RTTSettings initialize]

  // instance methods
  -[RTTSettings synchronizePreferences]
  -[RTTSettings setTtyShouldBeRealtime:]
  -[RTTSettings TTYHardwareEnabledForContext:]
  -[RTTSettings boolValueForKey:andContext:withDefaultValue:]
  -[RTTSettings currentLocale]
  -[RTTSettings setTTYHardwareEnabled:]
  -[RTTSettings answerRTTCallsAsMutedForContext:]
  -[RTTSettings _synchronizeIfNecessary:]
  -[RTTSettings rttCallHoldEnabled]
  -[RTTSettings setPreferredRelayNumber:forContext:]
  -[RTTSettings internalOverrideTTYAvailability]
  -[RTTSettings incomingTTYCallCount]
  -[RTTSettings rttLiveTranscriptionsFeatureFlagEnabled]
  -[RTTSettings TTYSoftwareEnabledForContext:]
  -[RTTSettings objectValueForKey:withClass:andDefaultValue:]
  -[RTTSettings setHasReceivedRTTCall:]
  -[RTTSettings resetCannedResponses]
  -[RTTSettings setInternalOverrideTTYAvailability:]
  -[RTTSettings TTYSoftwareEnabled]
  -[RTTSettings setRTTLiveTranscriptionsEnabled:forContext:]
  -[RTTSettings continuityRTTIsSupported]
  -[RTTSettings updateBlocks]
  -[RTTSettings _preferenceKeyForSelector:]
  -[RTTSettings notificationForSelector:]
  -[RTTSettings dealloc]
  -[RTTSettings setCannedResponses:]
  -[RTTSettings setIncomingTTYCallCount:]
  -[RTTSettings integerValueForKey:withDefaultValue:]
  -[RTTSettings incomingCallsTTYForContext:]
  -[RTTSettings supportsRelayCalling]
  -[RTTSettings .cxx_destruct]
  -[RTTSettings setLastDBVacuum:]
  -[RTTSettings setPreferredRelayNumber:]
  -[RTTSettings setSupportsRelayCalling:]
  -[RTTSettings clearAllServerSettingsCache]
  -[RTTSettings preferredRelayNumberForContext:]
  -[RTTSettings ttyShouldBeRealtimeForContext:]
  -[RTTSettings _selectorMap]
  -[RTTSettings ttyShouldBeRealtime]
  -[RTTSettings setUpdateBlocks:]
  -[RTTSettings uuidFromContext:]
  -[RTTSettings nanoSynchronizeQueue]
  -[RTTSettings answerRTTCallsAsMuted]
  -[RTTSettings boolValueForKey:withDefaultValue:]
  -[RTTSettings showsRTTNotifications]
  -[RTTSettings setAnswerRTTCallsAsMuted:]
  -[RTTSettings shouldMigrateSettings]
  -[RTTSettings setTTYHardwareEnabled:forContext:]
  -[RTTSettings selectorForPreferenceKey:]
  -[RTTSettings isRelayCallingEnabled]
  -[RTTSettings incomingCallsTTY]
  -[RTTSettings _setValue:forPreferenceKey:]
  -[RTTSettings setRegisteredNotifications:]
  -[RTTSettings setContinuityRTTIsSupported:]
  -[RTTSettings registeredNotifications]
  -[RTTSettings rttInlineAbbreviationBarEnabled]
  -[RTTSettings _handlePreferenceChanged:]
  -[RTTSettings hasReceivedRTTCall]
  -[RTTSettings setOutgoingTTYCallCount:]
  -[RTTSettings lastCallCountReset]
  -[RTTSettings showsRTTNotificationsForContext:]
  -[RTTSettings setTTYShouldBeRealtime:forContext:]
  -[RTTSettings setAnswerRTTCallsAsMuted:forContext:]
  -[RTTSettings valueForPreferenceKey:]
  -[RTTSettings setSettingsVersion:]
  -[RTTSettings setSynchronizePreferences:]
  -[RTTSettings preferredRelayNumber]
  -[RTTSettings rttLiveTranscriptionsEnabled]
  -[RTTSettings objectValueForKey:andContext:withClass:andDefaultValue:]
  -[RTTSettings setIsRelayCallingEnabled:]
  -[RTTSettings _registerForNotification:]
  -[RTTSettings setShowsRTTNotifications:forContext:]
  -[RTTSettings registerUpdateBlock:forRetrieveSelector:withListener:]
  -[RTTSettings setIncomingCallsTTY:forContext:]
  -[RTTSettings migrateSettings]
  -[RTTSettings setLastCallCountReset:]
  -[RTTSettings setIncomingCallsTTY:]
  -[RTTSettings setNanoSynchronizeQueue:]
  -[RTTSettings updateGizmoValueIfNeeded:forPreferenceKey:]
  -[RTTSettings outgoingTTYCallCount]
  -[RTTSettings _setValue:forPreferenceKey:andContext:]
  -[RTTSettings valueForPreferenceKey:andContext:]
  -[RTTSettings _notificationForPreferenceKey:]
  -[RTTSettings setRttInlineAbbreviationBarEnabled:]
  -[RTTSettings setTTYSoftwareEnabled:]
  -[RTTSettings TTYHardwareEnabled]
  -[RTTSettings cannedResponses]
  -[RTTSettings clearServerSettingsCacheForKey:]
  -[RTTSettings lastDBVacuum]
  -[RTTSettings init]
  -[RTTSettings rttLiveTranscriptionsEnabledForContext:]
  -[RTTSettings settingsVersion]
  -[RTTSettings setTTYSoftwareEnabled:forContext:]


RTTNanoSettings : RTTSettings
 @property  NPSDomainAccessor *domainAccessor
 @property  NPSDomainAccessor *globalDomainAccessor

  // class methods
  +[RTTNanoSettings sharedInstance]

  // instance methods
  -[RTTNanoSettings setDomainAccessor:]
  -[RTTNanoSettings setGlobalDomainAccessor:]
  -[RTTNanoSettings domainAccessor]
  -[RTTNanoSettings currentLocale]
  -[RTTNanoSettings globalDomainAccessor]
  -[RTTNanoSettings .cxx_destruct]
  -[RTTNanoSettings uuidFromContext:]
  -[RTTNanoSettings _setValue:forPreferenceKey:]
  -[RTTNanoSettings valueForPreferenceKey:andContext:]
  -[RTTNanoSettings init]


RTTConversation : NSObject <NSSecureCoding>
 @property  NSString *callIdentifier
 @property  NSMutableArray *utterances
 @property  TUCall *call

  // class methods
  +[RTTConversation supportsSecureCoding]
  +[RTTConversation conversationWithCallUID:withCallback:]
  +[RTTConversation conversationWithCall:withCallback:]
  +[RTTConversation conversationWithCall:]
  +[RTTConversation conversationWithID:andUtterances:]

  // instance methods
  -[RTTConversation cleanup]
  -[RTTConversation encodeWithCoder:]
  -[RTTConversation .cxx_destruct]
  -[RTTConversation call]
  -[RTTConversation setCall:]
  -[RTTConversation isEqual:]
  -[RTTConversation init]
  -[RTTConversation initWithCoder:]
  -[RTTConversation callIdentifier]
  -[RTTConversation setCallIdentifier:]
  -[RTTConversation isEqualToConversation:]
  -[RTTConversation setUtterances:]
  -[RTTConversation utterances]
  -[RTTConversation appendCharacter:]
  -[RTTConversation otherContactPath]
  -[RTTConversation mergeUtterancesIfPossible]
  -[RTTConversation addUtterance:]
  -[RTTConversation appendStringFromOtherContactPath:]
  -[RTTConversation addTranscriptionFromOtherContactPath:]
  -[RTTConversation updateTranscriptionFromOtherContactPath:]
  -[RTTConversation processBackspaceForMe:]
  -[RTTConversation lastUtteranceForMe:]
  -[RTTConversation lastUtteranceForMe:isTranscription:]
  -[RTTConversation lastUtteranceIndexForMe:isTranscription:]
  -[RTTConversation utteranceCountForMe:]


RTTUtterance : NSObject <NSSecureCoding, NSCopying>
 @property  NSString *contactPath
 @property  NSString *text
 @property  NSDate *lastChangeDate
 @property  BOOL isMe
 @property  BOOL isTranscription
 @property  BOOL ignoreTimeoutTemporarily

  // class methods
  +[RTTUtterance supportsSecureCoding]
  +[RTTUtterance contactPathIsMe:]
  +[RTTUtterance utteranceWithContactPath:andText:]
  +[RTTUtterance utteranceWithContactPath:andText:isTranscription:]

  // instance methods
  -[RTTUtterance text]
  -[RTTUtterance setIsMe:]
  -[RTTUtterance isComplete]
  -[RTTUtterance isMe]
  -[RTTUtterance encodeWithCoder:]
  -[RTTUtterance dealloc]
  -[RTTUtterance .cxx_destruct]
  -[RTTUtterance hasTimedOut]
  -[RTTUtterance copyWithZone:]
  -[RTTUtterance isEqual:]
  -[RTTUtterance setText:]
  -[RTTUtterance initWithCoder:]
  -[RTTUtterance updateText:]
  -[RTTUtterance isTranscription]
  -[RTTUtterance resetTimeout]
  -[RTTUtterance contactPath]
  -[RTTUtterance setContactPath:]
  -[RTTUtterance setIsTranscription:]
  -[RTTUtterance ignoreTimeoutTemporarily]
  -[RTTUtterance setIgnoreTimeoutTemporarily:]
  -[RTTUtterance lastChangeDate]
  -[RTTUtterance setLastChangeDate:]


CNContact(_TTY_)
	// class methods
	+[CNContact(_TTY_) contactForPhoneNumber:]

	// instance methods
	-[CNContact(_TTY_) ttyIsMe]

01 00 0700 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountStore 
01 00 1000 /System/Library/PrivateFrameworks/AVConference.framework/AVConference: AVAudioClient 
01 00 1000 /System/Library/PrivateFrameworks/AVConference.framework/AVConference: AVCVirtualTTYDevice 
01 00 0300 /System/Library/PrivateFrameworks/Celestial.framework/Celestial: AVSystemController 
01 00 0b00 /System/Library/PrivateFrameworks/AXCoreUtilities.framework/AXCoreUtilities: AXAccessQueue 
01 00 0b00 /System/Library/PrivateFrameworks/AXCoreUtilities.framework/AXCoreUtilities: AXDispatchTimer 
01 00 0d00 /System/Library/PrivateFrameworks/CallHistory.framework/CallHistory: CHManager 
01 00 0900 /System/Library/Frameworks/Contacts.framework/Contacts: CNContact 
01 00 0900 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactFormatter 
01 00 0900 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactStore 
01 00 0900 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactStoreConfiguration 
01 00 0900 /System/Library/Frameworks/Contacts.framework/Contacts: CNPhoneNumber 
01 00 0a00 /System/Library/Frameworks/CoreTelephony.framework/CoreTelephony: CTPhoneNumberInfo 
01 00 0a00 /System/Library/Frameworks/CoreTelephony.framework/CoreTelephony: CTXPCServiceSubscriptionContext 
01 00 0a00 /System/Library/Frameworks/CoreTelephony.framework/CoreTelephony: CoreTelephonyClient 
01 00 0e00 /System/Library/PrivateFrameworks/HearingCore.framework/HearingCore: HCDatabaseManager 
01 00 0e00 /System/Library/PrivateFrameworks/HearingCore.framework/HearingCore: HCServer 
01 00 0e00 /System/Library/PrivateFrameworks/HearingCore.framework/HearingCore: HCUtilities 
01 00 0e00 /System/Library/PrivateFrameworks/HearingCore.framework/HearingCore: HCXPCMessage 
01 00 0f00 /System/Library/PrivateFrameworks/MobileAsset.framework/MobileAsset: MAAssetQuery 
01 00 0f00 /System/Library/PrivateFrameworks/MobileAsset.framework/MobileAsset: MADownloadOptions 
01 00 0100 /System/Library/PrivateFrameworks/NanoPreferencesSync.framework/NanoPreferencesSync: NPSDomainAccessor 
01 00 0100 /System/Library/PrivateFrameworks/NanoPreferencesSync.framework/NanoPreferencesSync: NPSManager 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1100 /System/Library/Frameworks/CoreData.framework/CoreData: NSEntityDescription 
01 00 1100 /System/Library/Frameworks/CoreData.framework/CoreData: NSFetchRequest 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSLock 
01 00 1100 /System/Library/Frameworks/CoreData.framework/CoreData: NSManagedObject 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableCharacterSet 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1300 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSUbiquitousKeyValueStore 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0600 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSAssertion 
01 00 0600 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSDomainAttribute 
01 00 0600 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSTarget 
01 00 0800 /System/Library/PrivateFrameworks/Rapport.framework/Rapport: RPCompanionLinkClient 
01 00 0200 /System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities: TUCall 
01 00 0200 /System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities: TUCallCapabilities 
01 00 0200 /System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities: TUCallCenter 
01 00 0200 /System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities: TUCallProviderManager 
01 00 0200 /System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities: TUPhoneNumber 
01 00 0200 /System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities: TUSenderIdentityClient 
