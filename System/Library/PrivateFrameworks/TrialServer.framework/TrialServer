|| __DATA.__objc_data _OBJC_CLASS_$_TRIAnyPersistedTask
|| __DATA.__objc_data _OBJC_CLASS_$_TRIConfigurationPersistedTask
|| __DATA.__objc_data _OBJC_CLASS_$_TRIExperimentTreatment
|| __DATA.__objc_data _OBJC_CLASS_$_TRIFetchOnDemandFactorsPersistedTask
|| __DATA.__objc_data _OBJC_CLASS_$_TRIFetchOnDemandFactorsPersistedTask_TreatmentAssetIndexes
|| __DATA.__objc_data _OBJC_CLASS_$_TRIMakeDefaultPersistedTask
|| __DATA.__objc_data _OBJC_CLASS_$_TRIPostUpgradeCleanupPersistedTask
|| __DATA.__objc_data _OBJC_CLASS_$_TRIRemoteAssetExtractor
|| __DATA.__objc_data _OBJC_CLASS_$_TRISQLiteCKContainer
|| __DATA.__objc_data _OBJC_CLASS_$_TRISQLiteCKDatabase
|| __DATA.__objc_data _OBJC_CLASS_$_TRISequencePersistedTask
|| __DATA.__objc_data _OBJC_CLASS_$_TRIUnitTestStorageManagement
|| __DATA.__objc_data _OBJC_CLASS_$_TRIXPCInternalServiceClient
|| __DATA.__objc_data _OBJC_CLASS_$_TRIXPCNamespaceManagementRequestHandler
|| __DATA.__objc_data _OBJC_CLASS_$_TRIXPCNamespaceManagementServiceWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_TRIAnyPersistedTask
|| __DATA.__objc_data _OBJC_METACLASS_$_TRIConfigurationPersistedTask
|| __DATA.__objc_data _OBJC_METACLASS_$_TRIExperimentTreatment
|| __DATA.__objc_data _OBJC_METACLASS_$_TRIFetchOnDemandFactorsPersistedTask
|| __DATA.__objc_data _OBJC_METACLASS_$_TRIFetchOnDemandFactorsPersistedTask_TreatmentAssetIndexes
|| __DATA.__objc_data _OBJC_METACLASS_$_TRIMakeDefaultPersistedTask
|| __DATA.__objc_data _OBJC_METACLASS_$_TRIPostUpgradeCleanupPersistedTask
|| __DATA.__objc_data _OBJC_METACLASS_$_TRIRemoteAssetExtractor
|| __DATA.__objc_data _OBJC_METACLASS_$_TRISQLiteCKContainer
|| __DATA.__objc_data _OBJC_METACLASS_$_TRISQLiteCKDatabase
|| __DATA.__objc_data _OBJC_METACLASS_$_TRISequencePersistedTask
|| __DATA.__objc_data _OBJC_METACLASS_$_TRIUnitTestStorageManagement
|| __DATA.__objc_data _OBJC_METACLASS_$_TRIXPCInternalServiceClient
|| __DATA.__objc_data _OBJC_METACLASS_$_TRIXPCNamespaceManagementRequestHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_TRIXPCNamespaceManagementServiceWrapper
|| __DATA.__objc_ivar _OBJC_IVAR_$_TRITaskQueueGuardedData.currentCapabilities
|| __DATA.__objc_ivar _OBJC_IVAR_$_TRITaskQueueGuardedData.nextScheduledTaskStartTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_TRITaskQueueGuardedData.queuedTasks
|| __DATA.__objc_ivar _OBJC_IVAR_$_TRITaskQueueGuardedData.stopRequested
|| __DATA.__objc_ivar _OBJC_IVAR_$_TRITaskQueueGuardedData.taskQueueCompletionBlock
|| __DATA.__objc_ivar _OBJC_IVAR_$_TRITaskQueueGuardedData.taskStore
|| __DATA.__objc_ivar _OBJC_IVAR_$_TRITaskQueueGuardedData.xpcDescriptorToState
|| __DATA_CONST.__const _TRICloudKitComparator_Equals
|| __DATA_CONST.__const _TRICloudKitComparator_GreaterThan
|| __DATA_CONST.__const _TRICloudKitComparator_In
|| __DATA_CONST.__const _TRICloudKitComparator_ListContains
|| __DATA_CONST.__const _TRICloudKitComparator_ListContainsAny
|| __DATA_CONST.__const _TRICloudKitComparator_NotEquals
|| __DATA_CONST.__const _TRICloudKitContainerAppleDeveloperProgram
|| __DATA_CONST.__const _TRICloudKitContainerIntegrationTesting
|| __DATA_CONST.__const _TRICloudKitContainerSystemDefault
|| __DATA_CONST.__const _TRICloudKitFieldType_AssetIdList
|| __DATA_CONST.__const _TRICloudKitFieldType_Bytes
|| __DATA_CONST.__const _TRICloudKitFieldType_Int64List
|| __DATA_CONST.__const _TRICloudKitFieldType_NumberInt64
|| __DATA_CONST.__const _TRICloudKitFieldType_String
|| __DATA_CONST.__const _TRICloudKitFieldType_StringList
|| __DATA_CONST.__const _TRICloudKitLastFetchExperimentDateKey
|| __DATA_CONST.__const _TRICloudKitRecordExperimentNotification
|| __DATA_CONST.__const _TRICloudKitRecordExperimentNotification_DeploymentEnvironment
|| __DATA_CONST.__const _TRICloudKitRecordExperimentNotification_DeploymentId
|| __DATA_CONST.__const _TRICloudKitRecordExperimentNotification_DeploymentPopulation
|| __DATA_CONST.__const _TRICloudKitRecordExperimentNotification_DeploymentPopulationList
|| __DATA_CONST.__const _TRICloudKitRecordExperimentNotification_ExperimentDefinition
|| __DATA_CONST.__const _TRICloudKitRecordExperimentNotification_ExperimentDefinitionSignature
|| __DATA_CONST.__const _TRICloudKitRecordExperimentNotification_ExperimentId
|| __DATA_CONST.__const _TRICloudKitRecordExperimentNotification_ExperimentPriority
|| __DATA_CONST.__const _TRICloudKitRecordExperimentNotification_ExperimentState
|| __DATA_CONST.__const _TRICloudKitRecordExperimentNotification_ExperimentType
|| __DATA_CONST.__const _TRICloudKitRecordExperimentNotification_InternalBuildOnly
|| __DATA_CONST.__const _TRICloudKitRecordExperimentNotification_NamespaceCompatibilityVersions
|| __DATA_CONST.__const _TRICloudKitRecordExperimentNotification_NamespaceNames
|| __DATA_CONST.__const _TRICloudKitRecordExperimentNotification_Namespaces
|| __DATA_CONST.__const _TRICloudKitRecordExperimentNotification_PublicCertificate
|| __DATA_CONST.__const _TRICloudKitRecordTreatment
|| __DATA_CONST.__const _TRICloudKitRecordTreatment_AssetSignatures
|| __DATA_CONST.__const _TRICloudKitRecordTreatment_Assets
|| __DATA_CONST.__const _TRICloudKitRecordTreatment_PublicCertificate
|| __DATA_CONST.__const _TRICloudKitRecordTreatment_TreatmentDefinition
|| __DATA_CONST.__const _TRICloudKitRecordTreatment_TreatmentDefinitionSignature
|| __DATA_CONST.__const _TRICloudKitRecordTreatment_TreatmentId
|| __DATA_CONST.__const _TRICloudKitRecord_ModificationDate
|| __DATA_CONST.__const _TRICloudKitRecord_RecordName
|| __DATA_CONST.__const _TRICloudKitServerEnvironmentKey
|| __DATA_CONST.__const _TRIDNotificationTokenKey
|| __DATA_CONST.__const _TRIDimensionName_ClientDeploymentId
|| __DATA_CONST.__const _TRIDimensionName_ClientExperimentId
|| __DATA_CONST.__const _TRIDimensionName_ClientTeamId
|| __DATA_CONST.__const _TRIDimensionName_ClientTreatmentId
|| __DATA_CONST.__const _TRIDimensionName_TaskName
|| __DATA_CONST.__const _TRIMetricName_ClientTreatmentInfo
|| __DATA_CONST.__const _TRIMetricName_CloudkitError
|| __DATA_CONST.__const _TRIMetricName_ServerError
|| __DATA_CONST.__const _TRIMetricName_TargetingError
|| __DATA_CONST.__const _TRISystemFactor_AllowFetchTasks
|| __DATA_CONST.__const _TRISystemFactor_AllowTrialTelemetry
|| __DATA_CONST.__const _TRISystemFactor_CloudKitAssetDownloadTimeoutSeconds
|| __DATA_CONST.__const _TRISystemFactor_CloudKitCacheControlMaxAge
|| __DATA_CONST.__const _TRISystemFactor_CloudKitUseNativeAPI
|| __DATA_CONST.__const _TRISystemFactor_FetchExperimentsJitter
|| __DATA_CONST.__const _TRISystemFactor_FetchRollbacksInterval
|| __DATA_CONST.__const _TRISystemFactor_FetchRollbacksJitter
|| __DATA_CONST.__const _TRISystemFactor_LogUserKeyboardEnabledInputMode
|| __DATA_CONST.__const _TRISystemFactor_LogUserSettingsLanguageCode
|| __DATA_CONST.__const _TRISystemFactor_LogUserSettingsRegionCode
|| __DATA_CONST.__const _TRISystemFactor_TaskQueueScheduledTaskDefaultGracePeriod
|| __DATA_CONST.__const _TRISystemFactor_TelemetryLevel
|| __DATA_CONST.__const _TRISystemNamespaceName
|| __DATA_CONST.__const _kTRIUserDefaultsTaskQueueDeferralSequenceKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIActivateTreatmentBaseTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIActivateTreatmentPersistedTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIActivateTreatmentTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIAssetStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIBaseTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRICKNativeArtifactProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIClientExperimentArtifact
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIClientExperimentStorage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIClientTreatmentArtifact
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIClientTreatmentStorage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIConfigurationTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIContentTracker
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIContentTrackingId
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIDServer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIDatabase
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIDeactivateTreatmentPersistedTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIDeactivateTreatmentTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIDynamicNamespaceRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIExperimentBaseTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIExperimentDatabase
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIExperimentDeployment
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIExperimentFetchDateManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIExperimentRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIFetchExperimentNotificationsPersistedTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIFetchExperimentPersistedTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIFetchExperimentTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIFetchMultipleExperimentNotificationsTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIFetchOnDemandFactorsTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIFetchTreatmentPersistedTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIFetchTreatmentTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIInternalServiceRequestHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIKVStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRILaunchDaemonActivityDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRILogTreatmentProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIMaintenancePersistedTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIMaintenanceTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIMakeDefaultTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRINamespaceDatabase
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRINamespaceDescriptorProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRINamespaceRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIPersistedExperimentArtifact
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIPersistedTaskAttribution
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIPersistedTreatment
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIPostUpgradeCleanupTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIRecurrentScheduleFetchRollbacksPersistedTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIRecurrentScheduleFetchRollbacksTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIRetargetAllPersistedTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIRetargetAllTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIRotateSubjectIdPersistedTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIRotateSubjectIdTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIRunningXPCActivityDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIScheduleFetchExperimentNotificationsPersistedTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIScheduleFetchExperimentNotificationsTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRISequenceTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIServerContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRISignatureKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRISignedAssetURL
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIStorageManagement
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRISystemCovariates
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRITargetingPersistedTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRITargetingTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRITaskAttributionInternalInsecure
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRITaskCapabilityUtilities
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRITaskDatabase
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRITaskQueue
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRITaskQueueGuardedData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRITaskQueuingOptions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRITaskRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRITaskRunResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRITaskSupport
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRITreatmentBaseTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRITripersistedExperimentArtifactRoot
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRITripersistedTasksRoot
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRITripersistedTreatmentRoot
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIUserCovariates
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIVersionedNamespace
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIXPCActivityManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIXPCActivityState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIXPCActivitySupport
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIXPCHandlerWrapper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIXPCInternalServiceListener
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIXPCInternalServiceWrapper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIXPCNamespaceManagementServiceListener
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIXPCServices
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIActivateTreatmentBaseTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIActivateTreatmentPersistedTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIActivateTreatmentTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIAssetStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIBaseTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRICKNativeArtifactProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIClientExperimentArtifact
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIClientExperimentStorage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIClientTreatmentArtifact
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIClientTreatmentStorage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIConfigurationTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIContentTracker
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIContentTrackingId
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIDServer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIDatabase
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIDeactivateTreatmentPersistedTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIDeactivateTreatmentTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIDynamicNamespaceRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIExperimentBaseTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIExperimentDatabase
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIExperimentDeployment
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIExperimentFetchDateManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIExperimentRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIFetchExperimentNotificationsPersistedTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIFetchExperimentPersistedTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIFetchExperimentTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIFetchMultipleExperimentNotificationsTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIFetchOnDemandFactorsTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIFetchTreatmentPersistedTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIFetchTreatmentTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIInternalServiceRequestHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIKVStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRILaunchDaemonActivityDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRILogTreatmentProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIMaintenancePersistedTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIMaintenanceTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIMakeDefaultTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRINamespaceDatabase
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRINamespaceDescriptorProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRINamespaceRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIPersistedExperimentArtifact
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIPersistedTaskAttribution
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIPersistedTreatment
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIPostUpgradeCleanupTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIRecurrentScheduleFetchRollbacksPersistedTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIRecurrentScheduleFetchRollbacksTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIRetargetAllPersistedTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIRetargetAllTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIRotateSubjectIdPersistedTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIRotateSubjectIdTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIRunningXPCActivityDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIScheduleFetchExperimentNotificationsPersistedTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIScheduleFetchExperimentNotificationsTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRISequenceTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIServerContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRISignatureKey
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRISignedAssetURL
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIStorageManagement
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRISystemCovariates
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRITargetingPersistedTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRITargetingTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRITaskAttributionInternalInsecure
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRITaskCapabilityUtilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRITaskDatabase
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRITaskQueue
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRITaskQueueGuardedData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRITaskQueuingOptions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRITaskRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRITaskRunResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRITaskSupport
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRITreatmentBaseTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRITripersistedExperimentArtifactRoot
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRITripersistedTasksRoot
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRITripersistedTreatmentRoot
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIUserCovariates
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIVersionedNamespace
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIXPCActivityManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIXPCActivityState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIXPCActivitySupport
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIXPCHandlerWrapper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIXPCInternalServiceListener
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIXPCInternalServiceWrapper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIXPCNamespaceManagementServiceListener
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIXPCServices
|| __TEXT.__const _TRITaskQueueScheduledTaskDefaultGracePeriod
|| __TEXT.__const _TrialServerVersionNumber
|| __TEXT.__const _TrialServerVersionString
|| __TEXT.__const _kTRISubjectIdMinLength
|| __TEXT.__text _TRIAnyPersistedTask_Type_EnumDescriptor
|| __TEXT.__text _TRIAnyPersistedTask_Type_IsValidValue
|| __TEXT.__text _TRICKErrorParseToMetrics
|| __TEXT.__text _TRIDServerRun
|| __TEXT.__text _TRILogCategory_Archiving
|| __TEXT.__text _TRILogCategory_Backtrace
|| __TEXT.__text _TRILogCategory_Daemon
|| __TEXT.__text _TRILogCategory_InternalTool
|| __TEXT.__text _TRILogCategory_Server
|| __TEXT.__text _TRILogCategory_XCTest
__ CloudKit: _CKCurrentUserDefaultName
__ CloudKit: _CKErrorDomain
__ CloudKit: _CKErrorRetryAfterKey
__ CloudKit: _CKPartialErrorsByItemIDKey
__ CloudKit: _CKQueryOperationMaximumResults
__ CloudKit: _CKRecordZoneDefaultName
__ CloudKit: _OBJC_CLASS_$_CKAsset
__ CloudKit: _OBJC_CLASS_$_CKContainer
__ CloudKit: _OBJC_CLASS_$_CKFetchRecordsOperation
__ CloudKit: _OBJC_CLASS_$_CKModifyRecordsOperation
__ CloudKit: _OBJC_CLASS_$_CKOperationConfiguration
__ CloudKit: _OBJC_CLASS_$_CKQuery
__ CloudKit: _OBJC_CLASS_$_CKQueryOperation
__ CloudKit: _OBJC_CLASS_$_CKRecord
__ CloudKit: _OBJC_CLASS_$_CKRecordID
__ CloudKit: _OBJC_CLASS_$_CKRecordZoneID
__ CoreFoundation: _CFNumberIsFloatType
__ CoreFoundation: _CFRelease
__ CoreFoundation: _NSDefaultRunLoopMode
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSMallocException
__ CoreFoundation: _NSURLFileSizeKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMethodSignature
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreServices: _OBJC_CLASS_$_LSApplicationRecord
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSFileSize
__ Foundation: _NSFileSystemFileNumber
__ Foundation: _NSFileSystemFreeSize
__ Foundation: _NSFileType
__ Foundation: _NSFileTypeDirectory
__ Foundation: _NSFileTypeRegular
__ Foundation: _NSHomeDirectory
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromProtocol
__ Foundation: _NSStringFromSelector
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBlockOperation
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSComparisonPredicate
__ Foundation: _OBJC_CLASS_$_NSCompoundPredicate
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSExpression
__ Foundation: _OBJC_CLASS_$_NSFileHandle
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSISO8601DateFormatter
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSScanner
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ ProactiveSupport: _OBJC_CLASS_$__PASDatabaseMigrator
__ ProactiveSupport: _OBJC_CLASS_$__PASDeviceState
__ ProactiveSupport: _OBJC_CLASS_$__PASDispatch
__ ProactiveSupport: _OBJC_CLASS_$__PASEntitlement
__ ProactiveSupport: _OBJC_CLASS_$__PASFileUtils
__ ProactiveSupport: _OBJC_CLASS_$__PASKVOHandler
__ ProactiveSupport: _OBJC_CLASS_$__PASLock
__ ProactiveSupport: _OBJC_CLASS_$__PASSqliteDatabase
__ ProactiveSupport: _OBJC_CLASS_$__PASSqliteDefaultErrorHandler
__ ProactiveSupport: _OBJC_CLASS_$__PASSqliteTransaction
__ ProactiveSupport: _OBJC_CLASS_$__PASXPCClientHelper
__ ProactiveSupport: _OBJC_CLASS_$__PASXPCServer
__ ProactiveSupport: _OBJC_CLASS_$__PASXPCServerHelper
__ ProactiveSupport: __PASDBTransactionCommit
__ ProactiveSupport: __PASDBTransactionRollback
__ ProactiveSupport: __PASMurmur3_x86_32
__ ProactiveSupport: __PASQMarksSeparatedByCommas
__ ProactiveSupport: __PASSqliteDatabaseKeepGoing
__ ProactiveSupport: __PASSqliteDatabaseStop
__ ProactiveSupport: _kPASDatabaseMigratorLatestVersion
__ Security: _SecCertificateCopyCommonName
__ Security: _SecCertificateCopyKey
__ Security: _SecCertificateCreateWithData
__ Security: _SecCopyErrorMessageString
__ Security: _SecKeyCreateWithData
__ Security: _SecKeyIsAlgorithmSupported
__ Security: _SecKeyVerifySignature
__ Security: _SecPolicyCreateApplePinned
__ Security: _SecTrustCreateWithCertificates
__ Security: _SecTrustEvaluateWithError
__ Security: _kSecAttrKeyClass
__ Security: _kSecAttrKeyClassPublic
__ Security: _kSecAttrKeySizeInBits
__ Security: _kSecAttrKeyType
__ Security: _kSecAttrKeyTypeECSECPrimeRandom
__ Security: _kSecKeyAlgorithmECDSASignatureMessageX962SHA256
__ Trial: _OBJC_CLASS_$_TRIAppContainer
__ Trial: _OBJC_CLASS_$_TRIClient
__ Trial: _OBJC_CLASS_$_TRIDownloadNotification
__ Trial: _OBJC_CLASS_$_TRIDownloadOptions
__ Trial: _OBJC_CLASS_$_TRIEntitlement
__ Trial: _OBJC_CLASS_$_TRIFactorDownloadValidator
__ Trial: _OBJC_CLASS_$_TRILogTreatmentReader
__ Trial: _OBJC_CLASS_$_TRINamespaceDescriptor
__ Trial: _OBJC_CLASS_$_TRINamespaceFactorProvider
__ Trial: _OBJC_CLASS_$_TRINamespaceFactorProviderChain
__ Trial: _OBJC_CLASS_$_TRINamespaceStatus
__ Trial: _OBJC_CLASS_$_TRINamespaceStatusProvider
__ Trial: _OBJC_CLASS_$_TRINamespaceUpdateNotification
__ Trial: _OBJC_CLASS_$_TRIStandardPaths
__ Trial: _OBJC_CLASS_$_TRIStopwatch
__ Trial: _OBJC_CLASS_$_TRISubjectProvider
__ Trial: _OBJC_CLASS_$_TRISubjectRotationNotification
__ Trial: _OBJC_CLASS_$_TRISystemConfiguration
__ Trial: _OBJC_CLASS_$_TRISystemInfo
__ Trial: _OBJC_CLASS_$_TRITreatmentInfo
__ Trial: _OBJC_CLASS_$_TRIVersion
__ Trial: _OBJC_CLASS_$_TRIXPCUtils
__ Trial: _OBJC_METACLASS_$_TRILogTreatmentReader
__ Trial: _TRILogCategory_ClientFramework
__ TrialProto: _OBJC_CLASS_$_TRIClientExperiment
__ TrialProto: _OBJC_CLASS_$_TRIClientTreatment
__ TrialProto: _OBJC_CLASS_$_TRIDenormalizedEvent
__ TrialProto: _OBJC_CLASS_$_TRIFactorLevel
__ TrialProto: _OBJC_CLASS_$_TRILogNamespace
__ TrialProto: _OBJC_CLASS_$_TRILogTreatment
__ TrialProto: _OBJC_CLASS_$_TRIMetric
__ TrialProto: _OBJC_CLASS_$_TRINamespace
__ TrialProto: _OBJC_CLASS_$_TRIPBDescriptor
__ TrialProto: _OBJC_CLASS_$_TRIPBEnumDescriptor
__ TrialProto: _OBJC_CLASS_$_TRIPBFileDescriptor
__ TrialProto: _OBJC_CLASS_$_TRIPBMessage
__ TrialProto: _OBJC_CLASS_$_TRIPBRootObject
__ TrialProto: _OBJC_CLASS_$_TRIPBTimestamp
__ TrialProto: _OBJC_CLASS_$_TRIPBUInt32Array
__ TrialProto: _OBJC_CLASS_$_TRIUserDimension
__ TrialProto: _OBJC_METACLASS_$_TRIPBMessage
__ TrialProto: _OBJC_METACLASS_$_TRIPBRootObject
__ TrialProto: _TRIClientExperiment_Priority_EnumDescriptor
__ TrialProto: _TRIClientExperiment_Priority_IsValidValue
__ TrialProto: _TRIClientExperiment_Type_EnumDescriptor
__ TrialProto: _TRIClientExperiment_Type_IsValidValue
__ TrialProto: _TRICloudKit_Container_EnumDescriptor
__ TrialProto: _TRICloudKit_Container_IsValidValue
__ TrialProto: _TRIExperiment_Status_EnumDescriptor
__ TrialProto: _TRIExperiment_Status_IsValidValue
__ TrialProto: _TRIProject_ProjectId_EnumDescriptor
__ TrialProto: _TRIProject_ProjectId_IsValidValue
__ libSystem.B.dylib: _CC_SHA256
__ libSystem.B.dylib: _SANDBOX_EXTENSION_DEFAULT
__ libSystem.B.dylib: _XPC_ACTIVITY_ALLOW_BATTERY
__ libSystem.B.dylib: _XPC_ACTIVITY_CHECK_IN
__ libSystem.B.dylib: _XPC_ACTIVITY_DELAY
__ libSystem.B.dylib: _XPC_ACTIVITY_GRACE_PERIOD
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY_MAINTENANCE
__ libSystem.B.dylib: _XPC_ACTIVITY_RANDOM_INITIAL_DELAY
__ libSystem.B.dylib: _XPC_ACTIVITY_REPEATING
__ libSystem.B.dylib: _XPC_ACTIVITY_REQUIRES_CLASS_C
__ libSystem.B.dylib: _XPC_ACTIVITY_REQUIRE_INEXPENSIVE_NETWORK_CONNECTIVITY
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_signal
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __xpc_event_key_name
__ libSystem.B.dylib: _abort
__ libSystem.B.dylib: _arc4random_buf
__ libSystem.B.dylib: _arc4random_uniform
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _chmod
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_group_async
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_suspend
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _flock
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _fstat
__ libSystem.B.dylib: _link
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memchr
__ libSystem.B.dylib: _mkdir
__ libSystem.B.dylib: _mkdtemp
__ libSystem.B.dylib: _mmap
__ libSystem.B.dylib: _munmap
__ libSystem.B.dylib: _open
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_transaction_create
__ libSystem.B.dylib: _os_variant_allows_internal_security_policies
__ libSystem.B.dylib: _os_variant_has_internal_diagnostics
__ libSystem.B.dylib: _readlink
__ libSystem.B.dylib: _rename
__ libSystem.B.dylib: _sandbox_extension_issue_file
__ libSystem.B.dylib: _signal
__ libSystem.B.dylib: _stat
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _strerror
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _strtol
__ libSystem.B.dylib: _strtoll
__ libSystem.B.dylib: _strtoull
__ libSystem.B.dylib: _symlink
__ libSystem.B.dylib: _unlink
__ libSystem.B.dylib: _xpc_activity_copy_criteria
__ libSystem.B.dylib: _xpc_activity_get_state
__ libSystem.B.dylib: _xpc_activity_register
__ libSystem.B.dylib: _xpc_activity_set_criteria
__ libSystem.B.dylib: _xpc_activity_set_state
__ libSystem.B.dylib: _xpc_activity_should_defer
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_get_count
__ libSystem.B.dylib: _xpc_dictionary_get_int64
__ libSystem.B.dylib: _xpc_dictionary_get_string
__ libSystem.B.dylib: _xpc_dictionary_set_bool
__ libSystem.B.dylib: _xpc_dictionary_set_int64
__ libSystem.B.dylib: _xpc_dictionary_set_string
__ libSystem.B.dylib: _xpc_set_event_stream_handler
__ libSystem.B.dylib: _xpc_transaction_exit_clean
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _class_getInstanceMethod
__ libobjc.A.dylib: _method_exchangeImplementations
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _protocol_getMethodDescription
__ libsqlite3.dylib: _sqlite3_changes
__ libsqlite3.dylib: _sqlite3_column_count
__ libsqlite3.dylib: _sqlite3_column_name
__ libsqlite3.dylib: _sqlite3_column_type
__ libsqlite3.dylib: _sqlite3_last_insert_rowid
__ libsqlite3.dylib: _sqlite3_set_last_insert_rowid
TRIExperimentDeployment : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSString *shortDesc
 @property  NSString *experimentId
 @property  int deploymentId

  // class methods
  +[TRIExperimentDeployment supportsSecureCoding]
  +[TRIExperimentDeployment load]
  +[TRIExperimentDeployment deploymentWithExperimentId:deploymentId:]

  // instance methods
  -[TRIExperimentDeployment copyWithZone:]
  -[TRIExperimentDeployment experimentId]
  -[TRIExperimentDeployment deploymentId]
  -[TRIExperimentDeployment init]
  -[TRIExperimentDeployment .cxx_destruct]
  -[TRIExperimentDeployment encodeWithCoder:]
  -[TRIExperimentDeployment isEqual:]
  -[TRIExperimentDeployment taskTag]
  -[TRIExperimentDeployment initWithCoder:]
  -[TRIExperimentDeployment hasDeploymentId]
  -[TRIExperimentDeployment initWithExperimentId:deploymentId:]
  -[TRIExperimentDeployment isEqualToDeployment:]
  -[TRIExperimentDeployment copyWithReplacementExperimentId:]
  -[TRIExperimentDeployment copyWithReplacementDeploymentId:]
  -[TRIExperimentDeployment _swizzledEncodeWithCoder:]
  -[TRIExperimentDeployment shortDesc]


TRIVersionedNamespace : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSString *name
 @property  unsigned int compatibilityVersion

  // class methods
  +[TRIVersionedNamespace supportsSecureCoding]
  +[TRIVersionedNamespace load]
  +[TRIVersionedNamespace versionedNamespaceWithName:compatibilityVersion:]

  // instance methods
  -[TRIVersionedNamespace copyWithZone:]
  -[TRIVersionedNamespace init]
  -[TRIVersionedNamespace copyWithReplacementCompatibilityVersion:]
  -[TRIVersionedNamespace .cxx_destruct]
  -[TRIVersionedNamespace name]
  -[TRIVersionedNamespace encodeWithCoder:]
  -[TRIVersionedNamespace compatibilityVersion]
  -[TRIVersionedNamespace isEqual:]
  -[TRIVersionedNamespace initWithCoder:]
  -[TRIVersionedNamespace initWithName:compatibilityVersion:]
  -[TRIVersionedNamespace isEqualToVersionedNamespace:]
  -[TRIVersionedNamespace copyWithReplacementName:]
  -[TRIVersionedNamespace _swizzledEncodeWithCoder:]


TRINamespaceRecord : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSString *name
 @property  unsigned int compatibilityVersion
 @property  NSURL *treatmentURL

  // class methods
  +[TRINamespaceRecord supportsSecureCoding]
  +[TRINamespaceRecord load]
  +[TRINamespaceRecord recordWithName:compatibilityVersion:treatmentURL:]

  // instance methods
  -[TRINamespaceRecord copyWithZone:]
  -[TRINamespaceRecord isEqualToRecord:]
  -[TRINamespaceRecord init]
  -[TRINamespaceRecord copyWithReplacementCompatibilityVersion:]
  -[TRINamespaceRecord .cxx_destruct]
  -[TRINamespaceRecord name]
  -[TRINamespaceRecord encodeWithCoder:]
  -[TRINamespaceRecord compatibilityVersion]
  -[TRINamespaceRecord isEqual:]
  -[TRINamespaceRecord initWithCoder:]
  -[TRINamespaceRecord copyWithReplacementName:]
  -[TRINamespaceRecord initWithName:compatibilityVersion:treatmentURL:]
  -[TRINamespaceRecord treatmentURL]
  -[TRINamespaceRecord copyWithReplacementTreatmentURL:]
  -[TRINamespaceRecord _swizzledEncodeWithCoder:]


TRIExperimentRecord : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  TRIExperimentDeployment *experimentDeployment
 @property  NSString *treatmentId
 @property  int type
 @property  long long status
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  NSArray *namespaces

  // class methods
  +[TRIExperimentRecord supportsSecureCoding]
  +[TRIExperimentRecord load]
  +[TRIExperimentRecord recordWithExperimentDeployment:treatmentId:type:status:startDate:endDate:namespaces:]

  // instance methods
  -[TRIExperimentRecord treatmentId]
  -[TRIExperimentRecord copyWithZone:]
  -[TRIExperimentRecord isEqualToRecord:]
  -[TRIExperimentRecord init]
  -[TRIExperimentRecord startDate]
  -[TRIExperimentRecord copyWithReplacementType:]
  -[TRIExperimentRecord .cxx_destruct]
  -[TRIExperimentRecord encodeWithCoder:]
  -[TRIExperimentRecord endDate]
  -[TRIExperimentRecord type]
  -[TRIExperimentRecord isEqual:]
  -[TRIExperimentRecord status]
  -[TRIExperimentRecord initWithCoder:]
  -[TRIExperimentRecord namespaces]
  -[TRIExperimentRecord initWithExperimentDeployment:treatmentId:type:status:startDate:endDate:namespaces:]
  -[TRIExperimentRecord experimentDeployment]
  -[TRIExperimentRecord copyWithReplacementExperimentDeployment:]
  -[TRIExperimentRecord copyWithReplacementTreatmentId:]
  -[TRIExperimentRecord copyWithReplacementStatus:]
  -[TRIExperimentRecord copyWithReplacementStartDate:]
  -[TRIExperimentRecord copyWithReplacementEndDate:]
  -[TRIExperimentRecord copyWithReplacementNamespaces:]
  -[TRIExperimentRecord _swizzledEncodeWithCoder:]
  -[TRIExperimentRecord isExpiredExperiment]


TRIDynamicNamespaceRecord : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSString *name
 @property  NSString *teamId
 @property  TRIAppContainer *appContainer
 @property  int cloudKitContainer
 @property  unsigned int compatibilityVersion
 @property  NSURL *defaultsFileURL
 @property  BOOL hasFetched

  // class methods
  +[TRIDynamicNamespaceRecord supportsSecureCoding]
  +[TRIDynamicNamespaceRecord load]
  +[TRIDynamicNamespaceRecord dynamicNamespaceRecordWithName:teamId:appContainer:cloudKitContainer:compatibilityVersion:defaultsFileURL:hasFetched:]

  // instance methods
  -[TRIDynamicNamespaceRecord copyWithZone:]
  -[TRIDynamicNamespaceRecord init]
  -[TRIDynamicNamespaceRecord teamId]
  -[TRIDynamicNamespaceRecord copyWithReplacementCompatibilityVersion:]
  -[TRIDynamicNamespaceRecord .cxx_destruct]
  -[TRIDynamicNamespaceRecord name]
  -[TRIDynamicNamespaceRecord encodeWithCoder:]
  -[TRIDynamicNamespaceRecord cloudKitContainer]
  -[TRIDynamicNamespaceRecord compatibilityVersion]
  -[TRIDynamicNamespaceRecord isEqual:]
  -[TRIDynamicNamespaceRecord appContainer]
  -[TRIDynamicNamespaceRecord initWithCoder:]
  -[TRIDynamicNamespaceRecord copyWithReplacementName:]
  -[TRIDynamicNamespaceRecord initWithName:teamId:appContainer:cloudKitContainer:compatibilityVersion:defaultsFileURL:hasFetched:]
  -[TRIDynamicNamespaceRecord defaultsFileURL]
  -[TRIDynamicNamespaceRecord hasFetched]
  -[TRIDynamicNamespaceRecord isEqualToDynamicNamespaceRecord:]
  -[TRIDynamicNamespaceRecord copyWithReplacementTeamId:]
  -[TRIDynamicNamespaceRecord copyWithReplacementAppContainer:]
  -[TRIDynamicNamespaceRecord copyWithReplacementCloudKitContainer:]
  -[TRIDynamicNamespaceRecord copyWithReplacementDefaultsFileURL:]
  -[TRIDynamicNamespaceRecord copyWithReplacementHasFetched:]
  -[TRIDynamicNamespaceRecord _swizzledEncodeWithCoder:]


TRITaskRecord : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSNumber *taskId
 @property  <TRITask> *task
 @property  NSDate *startDate
 @property  NSArray *dependencies
 @property  NSArray *tags

  // class methods
  +[TRITaskRecord supportsSecureCoding]
  +[TRITaskRecord load]
  +[TRITaskRecord taskRecordWithTaskId:task:startDate:dependencies:tags:]

  // instance methods
  -[TRITaskRecord copyWithZone:]
  -[TRITaskRecord tags]
  -[TRITaskRecord taskId]
  -[TRITaskRecord init]
  -[TRITaskRecord startDate]
  -[TRITaskRecord .cxx_destruct]
  -[TRITaskRecord dependencies]
  -[TRITaskRecord encodeWithCoder:]
  -[TRITaskRecord isEqual:]
  -[TRITaskRecord task]
  -[TRITaskRecord initWithCoder:]
  -[TRITaskRecord copyWithReplacementStartDate:]
  -[TRITaskRecord initWithTaskId:task:startDate:dependencies:tags:]
  -[TRITaskRecord isEqualToTaskRecord:]
  -[TRITaskRecord copyWithReplacementTaskId:]
  -[TRITaskRecord copyWithReplacementTask:]
  -[TRITaskRecord copyWithReplacementDependencies:]
  -[TRITaskRecord copyWithReplacementTags:]
  -[TRITaskRecord _swizzledEncodeWithCoder:]


TRITaskQueuingOptions : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  unsigned long duplicateTaskResolution

  // class methods
  +[TRITaskQueuingOptions supportsSecureCoding]
  +[TRITaskQueuingOptions load]
  +[TRITaskQueuingOptions optionsWithDuplicateTaskResolution:]
  +[TRITaskQueuingOptions defaultOptionsWithIgnoreDuplicates]

  // instance methods
  -[TRITaskQueuingOptions copyWithZone:]
  -[TRITaskQueuingOptions init]
  -[TRITaskQueuingOptions encodeWithCoder:]
  -[TRITaskQueuingOptions isEqualToOptions:]
  -[TRITaskQueuingOptions isEqual:]
  -[TRITaskQueuingOptions initWithCoder:]
  -[TRITaskQueuingOptions initWithDuplicateTaskResolution:]
  -[TRITaskQueuingOptions duplicateTaskResolution]
  -[TRITaskQueuingOptions copyWithReplacementDuplicateTaskResolution:]
  -[TRITaskQueuingOptions _swizzledEncodeWithCoder:]


TRITaskRunResult : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  int runStatus
 @property  BOOL reportResultToServer
 @property  NSArray *nextTasks
 @property  NSDate *earliestRetryDate

  // class methods
  +[TRITaskRunResult resultWithRunStatus:reportResultToServer:nextTasks:earliestRetryDate:]

  // instance methods
  -[TRITaskRunResult copyWithZone:]
  -[TRITaskRunResult init]
  -[TRITaskRunResult .cxx_destruct]
  -[TRITaskRunResult isEqualToResult:]
  -[TRITaskRunResult isEqual:]
  -[TRITaskRunResult initWithRunStatus:reportResultToServer:nextTasks:earliestRetryDate:]
  -[TRITaskRunResult runStatus]
  -[TRITaskRunResult reportResultToServer]
  -[TRITaskRunResult nextTasks]
  -[TRITaskRunResult earliestRetryDate]
  -[TRITaskRunResult copyWithReplacementRunStatus:]
  -[TRITaskRunResult copyWithReplacementReportResultToServer:]
  -[TRITaskRunResult copyWithReplacementNextTasks:]
  -[TRITaskRunResult copyWithReplacementEarliestRetryDate:]


TRIXPCActivityState : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  unsigned long futureCompletionStatus
 @property  unsigned long capabilities

  // class methods
  +[TRIXPCActivityState xPCActivityStateWithFutureCompletionStatus:capabilities:]

  // instance methods
  -[TRIXPCActivityState copyWithZone:]
  -[TRIXPCActivityState init]
  -[TRIXPCActivityState capabilities]
  -[TRIXPCActivityState isEqual:]
  -[TRIXPCActivityState initWithFutureCompletionStatus:capabilities:]
  -[TRIXPCActivityState futureCompletionStatus]
  -[TRIXPCActivityState isEqualToXPCActivityState:]
  -[TRIXPCActivityState copyWithReplacementFutureCompletionStatus:]
  -[TRIXPCActivityState copyWithReplacementCapabilities:]


TRIExperimentTreatment : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  TRIExperimentDeployment *experimentDeployment
 @property  NSString *treatmentId

  // class methods
  +[TRIExperimentTreatment treatmentWithExperimentDeployment:treatmentId:]

  // instance methods
  -[TRIExperimentTreatment treatmentId]
  -[TRIExperimentTreatment copyWithZone:]
  -[TRIExperimentTreatment init]
  -[TRIExperimentTreatment .cxx_destruct]
  -[TRIExperimentTreatment isEqual:]
  -[TRIExperimentTreatment experimentDeployment]
  -[TRIExperimentTreatment copyWithReplacementExperimentDeployment:]
  -[TRIExperimentTreatment copyWithReplacementTreatmentId:]
  -[TRIExperimentTreatment initWithExperimentDeployment:treatmentId:]
  -[TRIExperimentTreatment isEqualToTreatment:]


TRITaskAttributionInternalInsecure : NSObject /usr/lib/libSystem.B.dylib <TRITaskAttributing, NSCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *teamIdentifier
 @property  int triCloudKitContainer
 @property  NSString *applicationBundleIdentifier
 @property  TRIDownloadOptions *networkOptions

  // class methods
  +[TRITaskAttributionInternalInsecure taskAttributionWithTeamIdentifier:triCloudKitContainer:applicationBundleIdentifier:networkOptions:]
  +[TRITaskAttributionInternalInsecure taskAttributionFromPersistedTask:]

  // instance methods
  -[TRITaskAttributionInternalInsecure teamIdentifier]
  -[TRITaskAttributionInternalInsecure copyWithZone:]
  -[TRITaskAttributionInternalInsecure init]
  -[TRITaskAttributionInternalInsecure .cxx_destruct]
  -[TRITaskAttributionInternalInsecure applicationBundleIdentifier]
  -[TRITaskAttributionInternalInsecure isEqual:]
  -[TRITaskAttributionInternalInsecure initWithTeamIdentifier:triCloudKitContainer:applicationBundleIdentifier:networkOptions:]
  -[TRITaskAttributionInternalInsecure triCloudKitContainer]
  -[TRITaskAttributionInternalInsecure networkOptions]
  -[TRITaskAttributionInternalInsecure isEqualToTaskAttribution:]
  -[TRITaskAttributionInternalInsecure copyWithReplacementTeamIdentifier:]
  -[TRITaskAttributionInternalInsecure copyWithReplacementTriCloudKitContainer:]
  -[TRITaskAttributionInternalInsecure copyWithReplacementApplicationBundleIdentifier:]
  -[TRITaskAttributionInternalInsecure copyWithReplacementNetworkOptions:]
  -[TRITaskAttributionInternalInsecure asPersistedTaskAttribution]


TRISignedAssetURL : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  NSURL *url
 @property  NSString *signature

  // class methods
  +[TRISignedAssetURL assetURLWithUrl:signature:]

  // instance methods
  -[TRISignedAssetURL copyWithZone:]
  -[TRISignedAssetURL signature]
  -[TRISignedAssetURL init]
  -[TRISignedAssetURL url]
  -[TRISignedAssetURL .cxx_destruct]
  -[TRISignedAssetURL isEqual:]
  -[TRISignedAssetURL initWithUrl:signature:]
  -[TRISignedAssetURL isEqualToAssetURL:]
  -[TRISignedAssetURL copyWithReplacementUrl:]
  -[TRISignedAssetURL copyWithReplacementSignature:]


TRILaunchDaemonActivityDescriptor : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  NSString *name
 @property  unsigned long supportedTaskCapabilities

  // class methods
  +[TRILaunchDaemonActivityDescriptor launchDaemonActivityDescriptorWithName:supportedTaskCapabilities:]
  +[TRILaunchDaemonActivityDescriptor retryFailuresDescriptor]
  +[TRILaunchDaemonActivityDescriptor cellularDescriptor]
  +[TRILaunchDaemonActivityDescriptor inexpensiveNetworkingDescriptor]
  +[TRILaunchDaemonActivityDescriptor postUpgradeDescriptor]
  +[TRILaunchDaemonActivityDescriptor taskQueueDescriptor]
  +[TRILaunchDaemonActivityDescriptor clientTriggeredCellularDescriptor]
  +[TRILaunchDaemonActivityDescriptor clientTriggeredWifiDescriptor]

  // instance methods
  -[TRILaunchDaemonActivityDescriptor copyWithZone:]
  -[TRILaunchDaemonActivityDescriptor init]
  -[TRILaunchDaemonActivityDescriptor .cxx_destruct]
  -[TRILaunchDaemonActivityDescriptor name]
  -[TRILaunchDaemonActivityDescriptor isEqual:]
  -[TRILaunchDaemonActivityDescriptor copyWithReplacementName:]
  -[TRILaunchDaemonActivityDescriptor initWithName:supportedTaskCapabilities:]
  -[TRILaunchDaemonActivityDescriptor supportedTaskCapabilities]
  -[TRILaunchDaemonActivityDescriptor isEqualToLaunchDaemonActivityDescriptor:]
  -[TRILaunchDaemonActivityDescriptor copyWithReplacementSupportedTaskCapabilities:]


TRIClientTreatmentArtifact : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  NSData *encodedTreatmentDefinition
 @property  NSString *encodedTreatmentDefinitionSignature
 @property  NSData *publicCertificate
 @property  NSDictionary *assetURLs

  // class methods
  +[TRIClientTreatmentArtifact artifactWithEncodedTreatmentDefinition:encodedTreatmentDefinitionSignature:publicCertificate:assetURLs:]
  +[TRIClientTreatmentArtifact artifactFromCKRecordFields:loadAssetUrls:]

  // instance methods
  -[TRIClientTreatmentArtifact copyWithZone:]
  -[TRIClientTreatmentArtifact init]
  -[TRIClientTreatmentArtifact .cxx_destruct]
  -[TRIClientTreatmentArtifact isEqual:]
  -[TRIClientTreatmentArtifact initWithEncodedTreatmentDefinition:encodedTreatmentDefinitionSignature:publicCertificate:assetURLs:]
  -[TRIClientTreatmentArtifact encodedTreatmentDefinition]
  -[TRIClientTreatmentArtifact encodedTreatmentDefinitionSignature]
  -[TRIClientTreatmentArtifact publicCertificate]
  -[TRIClientTreatmentArtifact assetURLs]
  -[TRIClientTreatmentArtifact isEqualToArtifact:]
  -[TRIClientTreatmentArtifact copyWithReplacementEncodedTreatmentDefinition:]
  -[TRIClientTreatmentArtifact copyWithReplacementEncodedTreatmentDefinitionSignature:]
  -[TRIClientTreatmentArtifact copyWithReplacementPublicCertificate:]
  -[TRIClientTreatmentArtifact copyWithReplacementAssetURLs:]
  -[TRIClientTreatmentArtifact isValidWithTreatmentId:]
  -[TRIClientTreatmentArtifact unsignedAssetURLs]


TRIContentTrackingId : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  NSString *str

  // class methods
  +[TRIContentTrackingId contentIdWithStr:]

  // instance methods
  -[TRIContentTrackingId copyWithZone:]
  -[TRIContentTrackingId str]
  -[TRIContentTrackingId init]
  -[TRIContentTrackingId .cxx_destruct]
  -[TRIContentTrackingId isEqual:]
  -[TRIContentTrackingId initWithStr:]
  -[TRIContentTrackingId isEqualToContentId:]
  -[TRIContentTrackingId copyWithReplacementStr:]


TRIScheduleFetchExperimentNotificationsTask : TRIBaseTask <TRITask>
 @property  int taskType
 @property  NSString *taskName
 @property  NSArray *tags
 @property  NSDate *startTime
 @property  NSArray *dependencies
 @property  <TRITaskQueueStateProviding> *stateProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TRIScheduleFetchExperimentNotificationsTask supportsSecureCoding]
  +[TRIScheduleFetchExperimentNotificationsTask parseFromData:]
  +[TRIScheduleFetchExperimentNotificationsTask taskWithRollbacksOnly:downloadOptions:]

  // instance methods
  -[TRIScheduleFetchExperimentNotificationsTask serialize]
  -[TRIScheduleFetchExperimentNotificationsTask .cxx_destruct]
  -[TRIScheduleFetchExperimentNotificationsTask encodeWithCoder:]
  -[TRIScheduleFetchExperimentNotificationsTask taskType]
  -[TRIScheduleFetchExperimentNotificationsTask isEqual:]
  -[TRIScheduleFetchExperimentNotificationsTask initWithCoder:]
  -[TRIScheduleFetchExperimentNotificationsTask initWithRollbacksOnly:downloadOptions:]
  -[TRIScheduleFetchExperimentNotificationsTask _asPersistedTask]
  -[TRIScheduleFetchExperimentNotificationsTask runUsingContext:withTaskQueue:]
  -[TRIScheduleFetchExperimentNotificationsTask nextTasksForRunStatus:]


TRISQLiteCKContainer : NSObject /usr/lib/libSystem.B.dylib
 @property  CKDatabase *privateCloudDatabase
 @property  CKDatabase *publicCloudDatabase
 @property  CKDatabase *sharedCloudDatabase
 @property  NSString *containerIdentifier

  // instance methods
  -[TRISQLiteCKContainer containerIdentifier]
  -[TRISQLiteCKContainer .cxx_destruct]
  -[TRISQLiteCKContainer privateCloudDatabase]
  -[TRISQLiteCKContainer publicCloudDatabase]
  -[TRISQLiteCKContainer sharedCloudDatabase]
  -[TRISQLiteCKContainer initWithContainerIdentifier:database:]


TRISQLiteCKDatabase : NSObject /usr/lib/libSystem.B.dylib <_PASDatabaseMigrationProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TRISQLiteCKDatabase mockContainerWithIdentifier:database:]

  // instance methods
  -[TRISQLiteCKDatabase init]
  -[TRISQLiteCKDatabase addOperation:]
  -[TRISQLiteCKDatabase migrateToVersion:]
  -[TRISQLiteCKDatabase .cxx_destruct]
  -[TRISQLiteCKDatabase queriesToSkipFromEmptyToVersion:]
  -[TRISQLiteCKDatabase saveRecordZone:completionHandler:]
  -[TRISQLiteCKDatabase deleteRecordZoneWithID:completionHandler:]
  -[TRISQLiteCKDatabase closePermanently]
  -[TRISQLiteCKDatabase migrations]
  -[TRISQLiteCKDatabase databaseHandle]
  -[TRISQLiteCKDatabase _processQueryOperation:]
  -[TRISQLiteCKDatabase _processFetchRecordsOperation:]
  -[TRISQLiteCKDatabase _processModifyRecordsOperation:]
  -[TRISQLiteCKDatabase _errorWithCode:message:]
  -[TRISQLiteCKDatabase _evalQueryOperationWithRecordType:predicate:sortDescriptors:resultsLimit:desiredKeys:txn:error:recordFetchedBlock:]
  -[TRISQLiteCKDatabase _valueTypesForFieldsOfRecordType:]
  -[TRISQLiteCKDatabase _parseDesiredKeys:recordType:unindexedFields:indexedFields:error:]
  -[TRISQLiteCKDatabase _translatePredicate:forRecordType:toSQLExpr:paramBindings:error:]
  -[TRISQLiteCKDatabase _createRecordFromSelectRow:recordType:unindexedDesiredKeys:indexedDesiredKeys:txn:error:]
  -[TRISQLiteCKDatabase _keysForFieldsOfRecordType:]
  -[TRISQLiteCKDatabase _parseIndexedFieldKey:indexRange:]
  -[TRISQLiteCKDatabase _loadArrayForRecordType:recordId:fieldKey:indexRange:txn:error:]
  -[TRISQLiteCKDatabase _parseDecimalString:value:]
  -[TRISQLiteCKDatabase _translateCompoundPredicate:forRecordType:toSQLExpr:paramBindings:error:]
  -[TRISQLiteCKDatabase _translateComparisonPredicate:forRecordType:toSQLExpr:paramBindings:error:]
  -[TRISQLiteCKDatabase _translateScalarComparisonPredicate:forRecordType:toSQLExpr:paramBindings:error:]
  -[TRISQLiteCKDatabase _translateArrayRHSComparisonPredicate:forRecordType:toSQLExpr:paramBindings:error:]
  -[TRISQLiteCKDatabase _translateDirectModifiedScalarComparisonPredicate:forRecordType:toSQLExpr:paramBindings:error:]
  -[TRISQLiteCKDatabase _translateAnyModifiedScalarComparisonPredicate:forRecordType:toSQLExpr:paramBindings:error:]
  -[TRISQLiteCKDatabase _parseScalarExpression:forRecordType:toSQLExpr:paramBindings:error:]
  -[TRISQLiteCKDatabase _translateDirectModifiedArrayRHSComparisonPredicate:forRecordType:toSQLExpr:paramBindings:error:]
  -[TRISQLiteCKDatabase _translateAnyModifiedArrayRHSComparisonPredicate:forRecordType:toSQLExpr:paramBindings:error:]
  -[TRISQLiteCKDatabase _parseArrayExpression:forRecordType:usingCTEName:toSQLCommonTableExpression:paramBindings:error:]
  -[TRISQLiteCKDatabase _evalFetchRecordsOperationWithRecordIds:recordType:desiredKeys:txn:error:]
  -[TRISQLiteCKDatabase _deleteRecordsWithRecordIds:recordType:txn:]
  -[TRISQLiteCKDatabase _upsertRecord:txn:error:]
  -[TRISQLiteCKDatabase _bindParam:toScalarValue:forStatement:]
  -[TRISQLiteCKDatabase _replaceArrayFieldWithKey:recordType:recordId:values:txn:error:]
  -[TRISQLiteCKDatabase _createTableForRecordType:scalarFields:]
  -[TRISQLiteCKDatabase _createTableForArrayFieldWithKey:attachedToRecordType:sqliteContainedType:]
  -[TRISQLiteCKDatabase initWithParentDir:assetCacheDir:]


TRITaskSupport : NSObject /usr/lib/libSystem.B.dylib <TRITaskSetProviding>
  // class methods
  +[TRITaskSupport sharedInstance]

  // instance methods
  -[TRITaskSupport taskClassForTaskType:]
  -[TRITaskSupport XPCTaskWhitelist]


TRIExperimentBaseTask : TRIBaseTask <TRIMetricsProviding>
 @property  TRIExperimentDeployment *experiment

  // instance methods
  -[TRIExperimentBaseTask metrics]
  -[TRIExperimentBaseTask dimensions]
  -[TRIExperimentBaseTask tags]
  -[TRIExperimentBaseTask addMetric:]
  -[TRIExperimentBaseTask .cxx_destruct]
  -[TRIExperimentBaseTask experiment]
  -[TRIExperimentBaseTask isEqual:]
  -[TRIExperimentBaseTask nextTasksForRunStatus:]
  -[TRIExperimentBaseTask initWithExperiment:]
  -[TRIExperimentBaseTask projectIdForExperimentWithPaths:]
  -[TRIExperimentBaseTask containerForFirstNamespaceInExperimentWithContext:]
  -[TRIExperimentBaseTask addDimension:]


TRILogTreatmentProvider : TRILogTreatmentReader /System/Library/Frameworks/CloudKit.framework/CloudKit
  // class methods
  +[TRILogTreatmentProvider deleteFileAtPath:]
  +[TRILogTreatmentProvider providerWithProjectId:paths:]
  +[TRILogTreatmentProvider projectIdFromExperiment:paths:]

  // instance methods
  -[TRILogTreatmentProvider saveTreatments:]
  -[TRILogTreatmentProvider addTreatment:]
  -[TRILogTreatmentProvider updatePersistedLogNamespace:]
  -[TRILogTreatmentProvider removeTreatment:]


TRITargetingTask : TRIExperimentBaseTask <TRIRetryableTask>
 @property  int retryCount
 @property  int taskType
 @property  NSString *taskName
 @property  NSArray *tags
 @property  NSDate *startTime
 @property  NSArray *dependencies
 @property  <TRITaskQueueStateProviding> *stateProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TRITargetingTask supportsSecureCoding]
  +[TRITargetingTask parseFromData:]
  +[TRITargetingTask taskWithExperiment:includeDependencies:taskAttribution:]
  +[TRITargetingTask taskWithExperiment:taskAttribution:]

  // instance methods
  -[TRITargetingTask serialize]
  -[TRITargetingTask metrics]
  -[TRITargetingTask dimensions]
  -[TRITargetingTask setRetryCount:]
  -[TRITargetingTask retryCount]
  -[TRITargetingTask .cxx_destruct]
  -[TRITargetingTask dependencies]
  -[TRITargetingTask encodeWithCoder:]
  -[TRITargetingTask taskType]
  -[TRITargetingTask initWithCoder:]
  -[TRITargetingTask _asPersistedTask]
  -[TRITargetingTask runUsingContext:withTaskQueue:]
  -[TRITargetingTask runEnqueueHandlerUsingContext:]
  -[TRITargetingTask runDequeueHandlerUsingContext:]
  -[TRITargetingTask initWithExperiment:includeDependencies:taskAttribution:]
  -[TRITargetingTask _targetingErrorWithExperiment:errorType:details:]
  -[TRITargetingTask _targetingErrorWithExperiment:errorType:]
  -[TRITargetingTask systemCovariatesWithPaths:]
  -[TRITargetingTask getTreatment:forExperiment:systemCovariates:userCovariates:error:]
  -[TRITargetingTask validateSystemCovariates:experiment:error:]
  -[TRITargetingTask runTaskUsingContext:withTaskQueue:systemCovariates:userCovariates:error:]
  -[TRITargetingTask getTreatment:forExperiment:paths:error:]


TRITripersistedTreatmentRoot : TRIPBRootObject /System/Library/PrivateFrameworks/Trial.framework/Trial

TRIPersistedTreatment : TRIPBMessage /System/Library/PrivateFrameworks/Trial.framework/Trial
 @property  TRIClientTreatment *treatment
 @property  BOOL hasTreatment

  // class methods
  +[TRIPersistedTreatment descriptor]


TRIXPCHandlerWrapper : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[TRIXPCHandlerWrapper _symbolicatedBacktraceWithAddresses:unresolvedSymbols:]

  // instance methods
  -[TRIXPCHandlerWrapper forwardInvocation:]
  -[TRIXPCHandlerWrapper methodSignatureForSelector:]
  -[TRIXPCHandlerWrapper .cxx_destruct]
  -[TRIXPCHandlerWrapper initWithUnderlyingHandler:forProtocol:]


TRIXPCInternalServiceWrapper : TRIXPCHandlerWrapper <TRIXPCInternalServiceProtocol>
  // instance methods
  -[TRIXPCInternalServiceWrapper initWithUnderlyingHandler:]


TRIXPCNamespaceManagementServiceWrapper : TRIXPCHandlerWrapper <TRIXPCNamespaceManagementServiceProtocol>
  // instance methods
  -[TRIXPCNamespaceManagementServiceWrapper initWithUnderlyingHandler:]


TRIClientExperimentStorage : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[TRIClientExperimentStorage init]
  -[TRIClientExperimentStorage initWithPaths:]
  -[TRIClientExperimentStorage .cxx_destruct]
  -[TRIClientExperimentStorage loadArtifactWithExperiment:isFilePresent:]
  -[TRIClientExperimentStorage _urlForExperiment:]
  -[TRIClientExperimentStorage saveArtifact:]
  -[TRIClientExperimentStorage removeArtifactWithExperiment:]


TRIMaintenanceTask : TRIBaseTask <TRITask>
 @property  int taskType
 @property  NSString *taskName
 @property  NSArray *tags
 @property  NSDate *startTime
 @property  NSArray *dependencies
 @property  <TRITaskQueueStateProviding> *stateProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TRIMaintenanceTask supportsSecureCoding]
  +[TRIMaintenanceTask task]
  +[TRIMaintenanceTask parseFromData:]

  // instance methods
  -[TRIMaintenanceTask serialize]
  -[TRIMaintenanceTask encodeWithCoder:]
  -[TRIMaintenanceTask taskType]
  -[TRIMaintenanceTask initWithCoder:]
  -[TRIMaintenanceTask _asPersistedTask]
  -[TRIMaintenanceTask runUsingContext:withTaskQueue:]
  -[TRIMaintenanceTask _cleanupExperimentWithDeployment:paths:]
  -[TRIMaintenanceTask _cleanupTreatmentWithTreatmentId:paths:]
  -[TRIMaintenanceTask _handleExpiredExperimentsWithExperimentDatabase:nextTasks:]
  -[TRIMaintenanceTask _handleOrphanedNamespacesWithNamespaceDatabase:nextTasks:]
  -[TRIMaintenanceTask _cleanupUnusedContentWithContext:]


TRIClientExperimentArtifact : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  TRIExperimentDeployment *experimentDeployment
 @property  BOOL hasDeploymentId
 @property  NSString *experimentId
 @property  int deploymentId
 @property  int cloudKitContainer
 @property  NSString *teamId
 @property  NSData *encodedExperimentDefinition
 @property  NSString *encodedExperimentDefinitionSignature
 @property  NSData *publicCertificate
 @property  TRIClientExperiment *experiment
 @property  int experimentState
 @property  int experimentType
 @property  int experimentPriority
 @property  BOOL internalBuildOnly
 @property  NSDate *modifiedDate
 @property  NSArray *namespaces
 @property  NSArray *namespaceCompatibilityVersions

  // class methods
  +[TRIClientExperimentArtifact supportsSecureCoding]
  +[TRIClientExperimentArtifact parseFromData:error:]
  +[TRIClientExperimentArtifact artifactWithExperiment:]
  +[TRIClientExperimentArtifact _convertNamespaceIdsToNames:]
  +[TRIClientExperimentArtifact artifactFromCKRecordResult:withNamespaceDescriptorProvider:container:teamId:paths:requireDeploymentId:]

  // instance methods
  -[TRIClientExperimentArtifact setExperimentId:]
  -[TRIClientExperimentArtifact experimentId]
  -[TRIClientExperimentArtifact setDeploymentId:]
  -[TRIClientExperimentArtifact deploymentId]
  -[TRIClientExperimentArtifact init]
  -[TRIClientExperimentArtifact teamId]
  -[TRIClientExperimentArtifact .cxx_destruct]
  -[TRIClientExperimentArtifact setModifiedDate:]
  -[TRIClientExperimentArtifact encodeWithCoder:]
  -[TRIClientExperimentArtifact data]
  -[TRIClientExperimentArtifact cloudKitContainer]
  -[TRIClientExperimentArtifact isValid]
  -[TRIClientExperimentArtifact experiment]
  -[TRIClientExperimentArtifact setCloudKitContainer:]
  -[TRIClientExperimentArtifact initWithCoder:]
  -[TRIClientExperimentArtifact namespaces]
  -[TRIClientExperimentArtifact modifiedDate]
  -[TRIClientExperimentArtifact hasDeploymentId]
  -[TRIClientExperimentArtifact setNamespaces:]
  -[TRIClientExperimentArtifact experimentDeployment]
  -[TRIClientExperimentArtifact publicCertificate]
  -[TRIClientExperimentArtifact initWithExperiment:]
  -[TRIClientExperimentArtifact experimentType]
  -[TRIClientExperimentArtifact encodedExperimentDefinition]
  -[TRIClientExperimentArtifact encodedExperimentDefinitionSignature]
  -[TRIClientExperimentArtifact namespaceCompatibilityVersions]
  -[TRIClientExperimentArtifact setTeamId:]
  -[TRIClientExperimentArtifact setEncodedExperimentDefinition:]
  -[TRIClientExperimentArtifact setEncodedExperimentDefinitionSignature:]
  -[TRIClientExperimentArtifact setPublicCertificate:]
  -[TRIClientExperimentArtifact experimentState]
  -[TRIClientExperimentArtifact experimentPriority]
  -[TRIClientExperimentArtifact internalBuildOnly]
  -[TRIClientExperimentArtifact setInternalBuildOnly:]
  -[TRIClientExperimentArtifact asPersistedArtifact]
  -[TRIClientExperimentArtifact setExperimentState:]
  -[TRIClientExperimentArtifact setExperimentType:]
  -[TRIClientExperimentArtifact setExperimentPriority:]
  -[TRIClientExperimentArtifact setNamespaceCompatibilityVersions:]
  -[TRIClientExperimentArtifact isCompatibleWithNamespaceDescriptorProvider:]
  -[TRIClientExperimentArtifact saveWithDatabase:paths:]
  -[TRIClientExperimentArtifact hasNamespacesAvailableForExperimentWithDatabase:]


TRIInternalServiceRequestHandler : NSObject /usr/lib/libSystem.B.dylib <TRIXPCInternalServiceProtocol>
  // instance methods
  -[TRIInternalServiceRequestHandler .cxx_destruct]
  -[TRIInternalServiceRequestHandler taskRecordsWithCompletion:]
  -[TRIInternalServiceRequestHandler experimentRecordsWithCompletion:]
  -[TRIInternalServiceRequestHandler experimentNotificationsWithExperimentId:cloudKitContainer:teamId:completion:]
  -[TRIInternalServiceRequestHandler submitTask:options:completion:]
  -[TRIInternalServiceRequestHandler lastFetchDateForContainer:teamId:completion:]
  -[TRIInternalServiceRequestHandler setLastFetchDate:forContainer:teamId:completion:]
  -[TRIInternalServiceRequestHandler registerNamespaceWithNamespaceName:compatibilityVersion:defaultsFileURL:teamId:appContainerId:appContainerType:cloudKitContainerId:completion:]
  -[TRIInternalServiceRequestHandler deregisterNamespaceWithNamespaceName:teamId:completion:]
  -[TRIInternalServiceRequestHandler startDownloadNamespaceWithName:teamId:options:completion:]
  -[TRIInternalServiceRequestHandler dynamicNamespaceRecordsWithCompletion:]
  -[TRIInternalServiceRequestHandler initWithServerContext:taskQueue:entitlementWitness:]


TRIXPCInternalServiceListener : NSObject /usr/lib/libSystem.B.dylib <NSXPCListenerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TRIXPCInternalServiceListener .cxx_destruct]
  -[TRIXPCInternalServiceListener listener:shouldAcceptNewConnection:]
  -[TRIXPCInternalServiceListener initWithServerContext:taskQueue:]


TRIPostUpgradeCleanupTask : TRIBaseTask <TRITask>
 @property  int taskType
 @property  NSString *taskName
 @property  NSArray *tags
 @property  NSDate *startTime
 @property  NSArray *dependencies
 @property  <TRITaskQueueStateProviding> *stateProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TRIPostUpgradeCleanupTask supportsSecureCoding]
  +[TRIPostUpgradeCleanupTask task]
  +[TRIPostUpgradeCleanupTask parseFromData:]

  // instance methods
  -[TRIPostUpgradeCleanupTask serialize]
  -[TRIPostUpgradeCleanupTask .cxx_destruct]
  -[TRIPostUpgradeCleanupTask encodeWithCoder:]
  -[TRIPostUpgradeCleanupTask taskType]
  -[TRIPostUpgradeCleanupTask initWithCoder:]
  -[TRIPostUpgradeCleanupTask _asPersistedTask]
  -[TRIPostUpgradeCleanupTask runUsingContext:withTaskQueue:]
  -[TRIPostUpgradeCleanupTask _validateRolloutDescriptorsWithNamespaceCompatibilityVersions:usingPaths:]
  -[TRIPostUpgradeCleanupTask _validateExperimentDescriptorsWithNamespaceCompatibilityVersions:database:]
  -[TRIPostUpgradeCleanupTask _validateDynamicNamespaceRolloutsWithDatabase:usingPaths:]
  -[TRIPostUpgradeCleanupTask _nextTasksForRunStatus:]


TRIMakeDefaultTask : TRIActivateTreatmentBaseTask <TRIRetryableTask>
 @property  int retryCount
 @property  int taskType
 @property  NSString *taskName
 @property  NSArray *tags
 @property  NSDate *startTime
 @property  NSArray *dependencies
 @property  <TRITaskQueueStateProviding> *stateProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TRIMakeDefaultTask supportsSecureCoding]
  +[TRIMakeDefaultTask parseFromData:]
  +[TRIMakeDefaultTask taskWithExperiment:treatmentId:taskAttributing:]

  // instance methods
  -[TRIMakeDefaultTask serialize]
  -[TRIMakeDefaultTask metrics]
  -[TRIMakeDefaultTask setRetryCount:]
  -[TRIMakeDefaultTask retryCount]
  -[TRIMakeDefaultTask .cxx_destruct]
  -[TRIMakeDefaultTask encodeWithCoder:]
  -[TRIMakeDefaultTask taskType]
  -[TRIMakeDefaultTask requiredCapabilities]
  -[TRIMakeDefaultTask initWithCoder:]
  -[TRIMakeDefaultTask _asPersistedTask]
  -[TRIMakeDefaultTask _nextTasksForRunStatus:]
  -[TRIMakeDefaultTask makeDefaultForNamespace:experiment:context:]
  -[TRIMakeDefaultTask runTaskUsingContext:experiment:]


TRIActivateTreatmentTask : TRIActivateTreatmentBaseTask <TRIRetryableTask>
 @property  int retryCount
 @property  int taskType
 @property  NSString *taskName
 @property  NSArray *tags
 @property  NSDate *startTime
 @property  NSArray *dependencies
 @property  <TRITaskQueueStateProviding> *stateProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TRIActivateTreatmentTask supportsSecureCoding]
  +[TRIActivateTreatmentTask parseFromData:]
  +[TRIActivateTreatmentTask taskWithExperiment:treatmentId:taskAttributing:startTime:]
  +[TRIActivateTreatmentTask taskWithExperiment:treatmentId:taskAttributing:]

  // instance methods
  -[TRIActivateTreatmentTask serialize]
  -[TRIActivateTreatmentTask metrics]
  -[TRIActivateTreatmentTask setRetryCount:]
  -[TRIActivateTreatmentTask retryCount]
  -[TRIActivateTreatmentTask .cxx_destruct]
  -[TRIActivateTreatmentTask encodeWithCoder:]
  -[TRIActivateTreatmentTask taskType]
  -[TRIActivateTreatmentTask requiredCapabilities]
  -[TRIActivateTreatmentTask initWithCoder:]
  -[TRIActivateTreatmentTask _asPersistedTask]
  -[TRIActivateTreatmentTask _nextTasksForRunStatus:]
  -[TRIActivateTreatmentTask runTaskUsingContext:experiment:]


TRIXPCActivityManager : NSObject /usr/lib/libSystem.B.dylib <TRIXPCActivityManagementProtocol>
 @property  TRIServerContext *context
 @property  TRITaskQueue *taskQueue

  // instance methods
  -[TRIXPCActivityManager context]
  -[TRIXPCActivityManager setTaskQueue:]
  -[TRIXPCActivityManager .cxx_destruct]
  -[TRIXPCActivityManager taskQueue]
  -[TRIXPCActivityManager setContext:]
  -[TRIXPCActivityManager registerActivities]
  -[TRIXPCActivityManager initWithDispatchQueue:]
  -[TRIXPCActivityManager _registerRetryFailuresActivity]
  -[TRIXPCActivityManager _registerFetchExperimentsActivity]
  -[TRIXPCActivityManager _registerCellularActivityWithDelay:]
  -[TRIXPCActivityManager _registerPostUpgradeActivity]
  -[TRIXPCActivityManager _registerPlaceholderTaskQueueActivity]
  -[TRIXPCActivityManager _registerClientTriggeredActivities]
  -[TRIXPCActivityManager _setJitterForXPCActivity:withLabel:]
  -[TRIXPCActivityManager _setDelay:forXPCActivity:withLabel:]
  -[TRIXPCActivityManager _scheduleMaintenanceAndFetchTasksWithActivityDescriptor:label:]
  -[TRIXPCActivityManager postponeCellularActivity]


TRIFetchTreatmentTask : TRITreatmentBaseTask <TRIRetryableTask>
 @property  int retryCount
 @property  int taskType
 @property  NSString *taskName
 @property  NSArray *tags
 @property  NSDate *startTime
 @property  NSArray *dependencies
 @property  <TRITaskQueueStateProviding> *stateProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TRIFetchTreatmentTask supportsSecureCoding]
  +[TRIFetchTreatmentTask parseFromData:]
  +[TRIFetchTreatmentTask taskWithExperiment:treatmentId:taskAttributing:]

  // instance methods
  -[TRIFetchTreatmentTask serialize]
  -[TRIFetchTreatmentTask setRetryCount:]
  -[TRIFetchTreatmentTask retryCount]
  -[TRIFetchTreatmentTask dependencies]
  -[TRIFetchTreatmentTask encodeWithCoder:]
  -[TRIFetchTreatmentTask taskType]
  -[TRIFetchTreatmentTask requiredCapabilities]
  -[TRIFetchTreatmentTask initWithCoder:]
  -[TRIFetchTreatmentTask _asPersistedTask]
  -[TRIFetchTreatmentTask runUsingContext:withTaskQueue:]
  -[TRIFetchTreatmentTask runEnqueueHandlerUsingContext:]
  -[TRIFetchTreatmentTask runDequeueHandlerUsingContext:]
  -[TRIFetchTreatmentTask _nextTasksForRunStatus:]
  -[TRIFetchTreatmentTask _processTreatment:database:paths:]


TRISystemCovariates : NSObject /usr/lib/libSystem.B.dylib <TRISystemCovariateProviding>
  // instance methods
  -[TRISystemCovariates initWithPaths:]
  -[TRISystemCovariates .cxx_destruct]
  -[TRISystemCovariates objectForKey:]
  -[TRISystemCovariates dictionary]
  -[TRISystemCovariates tri_contextValueWithName:]
  -[TRISystemCovariates getContextValueWithName:]


TRIRecurrentScheduleFetchRollbacksTask : TRIBaseTask <TRITask>
 @property  int taskType
 @property  NSString *taskName
 @property  NSArray *tags
 @property  NSDate *startTime
 @property  NSArray *dependencies
 @property  <TRITaskQueueStateProviding> *stateProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TRIRecurrentScheduleFetchRollbacksTask supportsSecureCoding]
  +[TRIRecurrentScheduleFetchRollbacksTask parseFromData:]
  +[TRIRecurrentScheduleFetchRollbacksTask taskWithAttribution:]

  // instance methods
  -[TRIRecurrentScheduleFetchRollbacksTask serialize]
  -[TRIRecurrentScheduleFetchRollbacksTask tags]
  -[TRIRecurrentScheduleFetchRollbacksTask .cxx_destruct]
  -[TRIRecurrentScheduleFetchRollbacksTask encodeWithCoder:]
  -[TRIRecurrentScheduleFetchRollbacksTask taskType]
  -[TRIRecurrentScheduleFetchRollbacksTask isEqual:]
  -[TRIRecurrentScheduleFetchRollbacksTask initWithCoder:]
  -[TRIRecurrentScheduleFetchRollbacksTask _asPersistedTask]
  -[TRIRecurrentScheduleFetchRollbacksTask runUsingContext:withTaskQueue:]
  -[TRIRecurrentScheduleFetchRollbacksTask initWithTaskAttribution:isRepeatedInstance:]
  -[TRIRecurrentScheduleFetchRollbacksTask _experimentsExistUsingContext:]
  -[TRIRecurrentScheduleFetchRollbacksTask _shouldScheduleUsingContext:withTaskQueue:]
  -[TRIRecurrentScheduleFetchRollbacksTask _fetchRollbacksTaskUsingContext:]
  -[TRIRecurrentScheduleFetchRollbacksTask _nextRecurrentTaskUsingContext:]


TRICKNativeArtifactProvider : NSObject /usr/lib/libSystem.B.dylib <TRIArtifactProvider>
 @property  CKContainer *container
 @property  CKRecordZoneID *zoneID
 @property  NSString *teamId
 @property  <TRIDateProviding> *dateProvider
 @property  <TRINamespaceDescriptorProviding> *namespaceDescriptorProvider
 @property  <TRIPaths> *paths
 @property  NSString *bundleId

  // class methods
  +[TRICKNativeArtifactProvider providerForContainer:teamId:bundleId:dateProvider:namespaceDescriptorProvider:paths:]
  +[TRICKNativeArtifactProvider mockSQLiteContainerWithIdentifier:]
  +[TRICKNativeArtifactProvider cloudkitIdentifierForContainer:]
  +[TRICKNativeArtifactProvider containerForIdentifier:]
  +[TRICKNativeArtifactProvider recordZoneForContainerIdentifier:teamId:]
  +[TRICKNativeArtifactProvider containerFromCkContainer:]

  // instance methods
  -[TRICKNativeArtifactProvider zoneID]
  -[TRICKNativeArtifactProvider paths]
  -[TRICKNativeArtifactProvider dateProvider]
  -[TRICKNativeArtifactProvider teamId]
  -[TRICKNativeArtifactProvider .cxx_destruct]
  -[TRICKNativeArtifactProvider container]
  -[TRICKNativeArtifactProvider bundleId]
  -[TRICKNativeArtifactProvider fetchExperimentWithLatestDeploymentForExperimentId:options:completionHandler:]
  -[TRICKNativeArtifactProvider fetchTreatmentWithId:assetIndexes:options:progressHandler:completionHandler:]
  -[TRICKNativeArtifactProvider configurationFromOptions:]
  -[TRICKNativeArtifactProvider initWithCloudKitContainer:teamId:bundleId:dateProvider:namespaceDescriptorProvider:paths:]
  -[TRICKNativeArtifactProvider namespaceDescriptorProvider]
  -[TRICKNativeArtifactProvider queryOperationForRecordType:predicate:options:recordFetchedBlock:queryCompletionBlock:]
  -[TRICKNativeArtifactProvider _fetchExperimentWithExperimentId:deploymentId:options:completionHandler:]
  -[TRICKNativeArtifactProvider _fetchNotificationsWithQueryType:withCursor:withNamespaceNames:sinceDate:options:resultsHandler:]
  -[TRICKNativeArtifactProvider queryOperationWithCursor:options:recordFetchedBlock:queryCompletionBlock:]
  -[TRICKNativeArtifactProvider _fetchExperimentsWithCursor:withNamespaceNames:sinceDate:fetchRollbacksOnly:options:resultsHandler:]
  -[TRICKNativeArtifactProvider _selectAssetIndexesFromTreatment:requestedAssetIndexes:]
  -[TRICKNativeArtifactProvider fetchExperimentNotificationsWithNamespaceNames:rollbacksOnly:lastFetchDateOverride:options:resultsHandler:]
  -[TRICKNativeArtifactProvider fetchExperimentWithExperimentDeployment:options:completionHandler:]


TRIFetchOnDemandFactorsTask : TRIBaseTask <TRIRetryableTask, TRIMetricsProviding>
 @property  int retryCount
 @property  int taskType
 @property  NSString *taskName
 @property  NSArray *tags
 @property  NSDate *startTime
 @property  NSArray *dependencies
 @property  <TRITaskQueueStateProviding> *stateProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TRIFetchOnDemandFactorsTask supportsSecureCoding]
  +[TRIFetchOnDemandFactorsTask parseFromData:]
  +[TRIFetchOnDemandFactorsTask taskWithAssetIndexesByTreatment:namespaceName:taskAttributing:notificationKey:]

  // instance methods
  -[TRIFetchOnDemandFactorsTask serialize]
  -[TRIFetchOnDemandFactorsTask metrics]
  -[TRIFetchOnDemandFactorsTask dimensions]
  -[TRIFetchOnDemandFactorsTask setRetryCount:]
  -[TRIFetchOnDemandFactorsTask retryCount]
  -[TRIFetchOnDemandFactorsTask .cxx_destruct]
  -[TRIFetchOnDemandFactorsTask encodeWithCoder:]
  -[TRIFetchOnDemandFactorsTask taskType]
  -[TRIFetchOnDemandFactorsTask requiredCapabilities]
  -[TRIFetchOnDemandFactorsTask isEqual:]
  -[TRIFetchOnDemandFactorsTask initWithCoder:]
  -[TRIFetchOnDemandFactorsTask _asPersistedTask]
  -[TRIFetchOnDemandFactorsTask runUsingContext:withTaskQueue:]
  -[TRIFetchOnDemandFactorsTask initWithAssetIndexesByTreatment:namespaceName:taskAttributing:notificationKey:]
  -[TRIFetchOnDemandFactorsTask _processTreatmentArtifact:treatmentId:paths:]
  -[TRIFetchOnDemandFactorsTask _addMetric:]


TRITaskDatabase : NSObject /usr/lib/libSystem.B.dylib <TRITaskPersisting>
  // instance methods
  -[TRITaskDatabase init]
  -[TRITaskDatabase tasks]
  -[TRITaskDatabase .cxx_destruct]
  -[TRITaskDatabase writeTransactionWithFailableBlock:]
  -[TRITaskDatabase readTransactionWithFailableBlock:]
  -[TRITaskDatabase enumerateTasksWithTagsIntersectingTagSet:block:]
  -[TRITaskDatabase idForTask:]
  -[TRITaskDatabase _checkTaskId:IsPresent:transaction:]
  -[TRITaskDatabase addTask:startTime:tags:dependencies:error:]
  -[TRITaskDatabase removeTaskWithId:cleanupBlock:]
  -[TRITaskDatabase updateTaskWithTaskId:startDate:task:]
  -[TRITaskDatabase taskIdsWithTag:]
  -[TRITaskDatabase directDependenciesOfTaskWithId:]
  -[TRITaskDatabase tasksDependentOnTask:]
  -[TRITaskDatabase initWithDatabase:taskSetProvider:]


TRIDeactivateTreatmentTask : TRIExperimentBaseTask <TRIRetryableTask>
 @property  BOOL failOnUnrecognizedExperiment
 @property  int retryCount
 @property  int taskType
 @property  NSString *taskName
 @property  NSArray *tags
 @property  NSDate *startTime
 @property  NSArray *dependencies
 @property  <TRITaskQueueStateProviding> *stateProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TRIDeactivateTreatmentTask supportsSecureCoding]
  +[TRIDeactivateTreatmentTask parseFromData:]
  +[TRIDeactivateTreatmentTask taskWithExperimentId:failOnUnrecognizedExperiment:]
  +[TRIDeactivateTreatmentTask taskWithExperimentId:startTime:failOnUnrecognizedExperiment:]

  // instance methods
  -[TRIDeactivateTreatmentTask serialize]
  -[TRIDeactivateTreatmentTask setRetryCount:]
  -[TRIDeactivateTreatmentTask setStartTime:]
  -[TRIDeactivateTreatmentTask retryCount]
  -[TRIDeactivateTreatmentTask .cxx_destruct]
  -[TRIDeactivateTreatmentTask encodeWithCoder:]
  -[TRIDeactivateTreatmentTask taskType]
  -[TRIDeactivateTreatmentTask requiredCapabilities]
  -[TRIDeactivateTreatmentTask initWithCoder:]
  -[TRIDeactivateTreatmentTask startTime]
  -[TRIDeactivateTreatmentTask _asPersistedTask]
  -[TRIDeactivateTreatmentTask runUsingContext:withTaskQueue:]
  -[TRIDeactivateTreatmentTask setFailOnUnrecognizedExperiment:]
  -[TRIDeactivateTreatmentTask failOnUnrecognizedExperiment]
  -[TRIDeactivateTreatmentTask _purgeRolloutLayerIfNecessaryWithRecord:fromAppContainer:paths:]


TRIFetchMultipleExperimentNotificationsTask : TRIBaseTask <TRIRetryableTask, TRIMetricsProviding>
 @property  int retryCount
 @property  int taskType
 @property  NSString *taskName
 @property  NSArray *tags
 @property  NSDate *startTime
 @property  NSArray *dependencies
 @property  <TRITaskQueueStateProviding> *stateProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TRIFetchMultipleExperimentNotificationsTask supportsSecureCoding]
  +[TRIFetchMultipleExperimentNotificationsTask parseFromData:]
  +[TRIFetchMultipleExperimentNotificationsTask taskWithStartingFetchDateOverride:namespaceNames:taskAttributing:rollbacksOnly:]

  // instance methods
  -[TRIFetchMultipleExperimentNotificationsTask serialize]
  -[TRIFetchMultipleExperimentNotificationsTask metrics]
  -[TRIFetchMultipleExperimentNotificationsTask dimensions]
  -[TRIFetchMultipleExperimentNotificationsTask setRetryCount:]
  -[TRIFetchMultipleExperimentNotificationsTask retryCount]
  -[TRIFetchMultipleExperimentNotificationsTask .cxx_destruct]
  -[TRIFetchMultipleExperimentNotificationsTask encodeWithCoder:]
  -[TRIFetchMultipleExperimentNotificationsTask taskName]
  -[TRIFetchMultipleExperimentNotificationsTask taskType]
  -[TRIFetchMultipleExperimentNotificationsTask requiredCapabilities]
  -[TRIFetchMultipleExperimentNotificationsTask isEqual:]
  -[TRIFetchMultipleExperimentNotificationsTask initWithCoder:]
  -[TRIFetchMultipleExperimentNotificationsTask _asPersistedTask]
  -[TRIFetchMultipleExperimentNotificationsTask runUsingContext:withTaskQueue:]
  -[TRIFetchMultipleExperimentNotificationsTask _addMetric:]
  -[TRIFetchMultipleExperimentNotificationsTask initWithStartingFetchDateOverride:namespaceNames:taskAttributing:rollbacksOnly:]
  -[TRIFetchMultipleExperimentNotificationsTask _nameForNotificationType:]
  -[TRIFetchMultipleExperimentNotificationsTask _getNextTaskForExperiment:database:taskQueue:]
  -[TRIFetchMultipleExperimentNotificationsTask _addNextTask:]
  -[TRIFetchMultipleExperimentNotificationsTask _processExperiment:experimentDatabase:namespaceDatabase:taskQueue:paths:]
  -[TRIFetchMultipleExperimentNotificationsTask updateStatusForNamespacesWithContext:]
  -[TRIFetchMultipleExperimentNotificationsTask _checkIfAnyTreatmentPresent:usingContext:]
  -[TRIFetchMultipleExperimentNotificationsTask initWithStartingFetchDateOverride:container:team:rollbacksOnly:withNamespaceNames:]
  -[TRIFetchMultipleExperimentNotificationsTask nextTaskCount]


TRIServerContext : NSObject /usr/lib/libSystem.B.dylib
 @property  TRIDatabase *underlyingDatabase
 @property  <TRIPaths> *paths
 @property  TRIExperimentDatabase *experimentDatabase
 @property  TRINamespaceDatabase *namespaceDatabase
 @property  TRITaskDatabase *taskDatabase
 @property  TRIClient *client
 @property  TRIKVStore *keyValueStore
 @property  TRIContentTracker *contentTracker
 @property  <TRIXPCActivityManagementProtocol> *xpcActivityManager
 @property  BOOL useCKNative

  // instance methods
  -[TRIServerContext keyValueStore]
  -[TRIServerContext setXpcActivityManager:]
  -[TRIServerContext client]
  -[TRIServerContext xpcActivityManager]
  -[TRIServerContext paths]
  -[TRIServerContext init]
  -[TRIServerContext .cxx_destruct]
  -[TRIServerContext namespaceDatabase]
  -[TRIServerContext experimentDatabase]
  -[TRIServerContext contentTracker]
  -[TRIServerContext underlyingDatabase]
  -[TRIServerContext taskDatabase]
  -[TRIServerContext logErrorMetric:]
  -[TRIServerContext initWithPaths:client:storageManagement:xpcActivityManagement:]
  -[TRIServerContext _logInitErrorWithClient:message:]
  -[TRIServerContext initWithPaths:client:storageManagement:]
  -[TRIServerContext useCKNative]
  -[TRIServerContext setUseCKNative:]


TRIAssetStore : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[TRIAssetStore shortHashForAssetIdentifier:]

  // instance methods
  -[TRIAssetStore init]
  -[TRIAssetStore initWithPaths:]
  -[TRIAssetStore .cxx_destruct]
  -[TRIAssetStore removeAssetWithIdentifier:]
  -[TRIAssetStore collectGarbageOlderThanNumScans:]
  -[TRIAssetStore hasAssetWithIdentifier:type:]
  -[TRIAssetStore initWithPaths:extractor:]
  -[TRIAssetStore _validateAssetIdentifier:]
  -[TRIAssetStore _saveFileAssetWithIdentifier:assetData:]
  -[TRIAssetStore _saveDirectoryAssetWithIdentifier:assetData:]
  -[TRIAssetStore _acquireLockfileAndRunBlock:]
  -[TRIAssetStore _pathForAssetDirWithIdentifier:]
  -[TRIAssetStore _createTempDir]
  -[TRIAssetStore _overwriteRenameAsAtomicallyAsPossibleWithSrc:dest:]
  -[TRIAssetStore _forceRemoveItemAtPath:]
  -[TRIAssetStore _removeAssetWithIdentifier:flockWitness:]
  -[TRIAssetStore _requireAssetStoreTempDir]
  -[TRIAssetStore _linkFileAssetWithIdentifier:toPath:]
  -[TRIAssetStore _linkDirectoryAssetWithIdentifier:toPath:]
  -[TRIAssetStore _clearUnrefAgeForAssetWithIdentifier:]
  -[TRIAssetStore _pathForRefsToAssetWithIdentifier:]
  -[TRIAssetStore _pathForAssetContentWithIdentifier:]
  -[TRIAssetStore _addSymlinkFromAssetWithIdentifier:toPath:]
  -[TRIAssetStore _removeDeadSymlinksWithFlockWitness:numRemoved:]
  -[TRIAssetStore _removeUnreferencedAssetsWithFlockWitness:olderThanAge:numRemoved:]
  -[TRIAssetStore _isValidTargetForSymlink:assetIdentifier:]
  -[TRIAssetStore _enumerateAssetDirsUsingBlock:]
  -[TRIAssetStore _collectDeadSymlinks]
  -[TRIAssetStore _removePathsInFd:numRemoved:]
  -[TRIAssetStore _collectUnreferencedAssets]
  -[TRIAssetStore _incrementUnrefAgeForAssetWithIdentifier:newValue:]
  -[TRIAssetStore _enumerateZeroTerminatedStringsInFd:usingBlock:]
  -[TRIAssetStore _isDirectoryAtPath:matchingAssetContentAtPath:]
  -[TRIAssetStore _isFileAtPath:matchingAssetContentAtPath:]
  -[TRIAssetStore _fixupPermissionsOnPath:permissionBits:]
  -[TRIAssetStore _nonAtomicOverwriteWithSrc:dest:finalPermissionBits:]
  -[TRIAssetStore saveAssetWithIdentifier:assetData:type:]
  -[TRIAssetStore linkAssetWithIdentifier:toPath:]
  -[TRIAssetStore enumerateSavedAssetsUsingBlock:]


TRITreatmentBaseTask : TRIExperimentBaseTask
 @property  NSString *treatmentId
 @property  <TRITaskAttributing> *taskAttributing

  // instance methods
  -[TRITreatmentBaseTask metrics]
  -[TRITreatmentBaseTask dimensions]
  -[TRITreatmentBaseTask treatmentId]
  -[TRITreatmentBaseTask .cxx_destruct]
  -[TRITreatmentBaseTask isEqual:]
  -[TRITreatmentBaseTask initWithExperiment:treatmentId:taskAttributing:]
  -[TRITreatmentBaseTask taskAttributing]


TRIXPCServices : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[TRIXPCServices registerAllServicesWithServerContext:taskQueue:]


TRIRemoteAssetExtractor : NSObject /usr/lib/libSystem.B.dylib <TRIAssetExtracting>
  // instance methods
  -[TRIRemoteAssetExtractor extractArchiveFromData:withArchiveName:toEmptyDirectory:]


TRITripersistedExperimentArtifactRoot : TRIPBRootObject /System/Library/PrivateFrameworks/Trial.framework/Trial

TRIPersistedExperimentArtifact : TRIPBMessage /System/Library/PrivateFrameworks/Trial.framework/Trial
 @property  NSString *experimentId
 @property  BOOL hasExperimentId
 @property  int deploymentId
 @property  BOOL hasDeploymentId
 @property  int cloudKitContainer
 @property  BOOL hasCloudKitContainer
 @property  NSString *teamId
 @property  BOOL hasTeamId
 @property  int status
 @property  BOOL hasStatus
 @property  int type
 @property  BOOL hasType
 @property  int priority
 @property  BOOL hasPriority
 @property  int projectId
 @property  BOOL hasProjectId
 @property  NSData *encodedExperimentDefinition
 @property  BOOL hasEncodedExperimentDefinition
 @property  NSString *encodedExperimentDefinitionSignature
 @property  BOOL hasEncodedExperimentDefinitionSignature
 @property  NSData *publicCertificate
 @property  BOOL hasPublicCertificate
 @property  BOOL internalBuildOnly
 @property  BOOL hasInternalBuildOnly
 @property  TRIPBTimestamp *modifiedDate
 @property  BOOL hasModifiedDate
 @property  NSMutableArray *namespacesArray
 @property  unsigned long namespacesArray_Count
 @property  TRIPBUInt32Array *namespaceCompatibilityVersionsArray
 @property  unsigned long namespaceCompatibilityVersionsArray_Count

  // class methods
  +[TRIPersistedExperimentArtifact descriptor]


TRISignatureKey : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[TRISignatureKey keyFromData:]
  +[TRISignatureKey _keyFromCertificateChain:]

  // instance methods
  -[TRISignatureKey init]
  -[TRISignatureKey dealloc]
  -[TRISignatureKey initWithKey:]
  -[TRISignatureKey validateBase64Signature:data:]
  -[TRISignatureKey _validateBase64Signature:data:algorithm:]
  -[TRISignatureKey _validateSignature:data:algorithm:]


TRIUserCovariates : NSObject /usr/lib/libSystem.B.dylib <TRIUserCovariateProviding>
  // instance methods
  -[TRIUserCovariates initWithContext:]
  -[TRIUserCovariates .cxx_destruct]
  -[TRIUserCovariates _applicationRecordForBundleId:]
  -[TRIUserCovariates tri_shortVersionStringForBundleId:]
  -[TRIUserCovariates tri_versionForBundleId:]
  -[TRIUserCovariates tri_hasApplicationWithBundleId:]
  -[TRIUserCovariates tri_versionStringForBundleId:]
  -[TRIUserCovariates tri_majorVersionForBundleId:]
  -[TRIUserCovariates tri_minorVersionForBundleId:]
  -[TRIUserCovariates tri_patchVersionForBundleId:]
  -[TRIUserCovariates tri_versionForBundleId:compareToString:]


TRITaskQueueGuardedData : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[TRITaskQueueGuardedData .cxx_destruct]


TRITaskQueue : NSObject /usr/lib/libSystem.B.dylib <TRITaskQueuing, TRITaskQueueStateProviding>
  // instance methods
  -[TRITaskQueue init]
  -[TRITaskQueue .cxx_destruct]
  -[TRITaskQueue cancelTask:]
  -[TRITaskQueue count]
  -[TRITaskQueue cancelTasksWithTag:]
  -[TRITaskQueue addTask:options:]
  -[TRITaskQueue resumeWithXPCActivityDescriptor:executeWhenSuspended:]
  -[TRITaskQueue activeActivityGrantingCapability:]
  -[TRITaskQueue enumerateTasksWithTagsIntersectingTagSet:block:]
  -[TRITaskQueue _scheduleFutureActivitiesWithGuardedData:]
  -[TRITaskQueue _partitionTaskGroup:byRunnabilityGivenCapabilities:runnableAtDate:topoSortedCurrentlyRunnable:blocked:allowOnlyRootTasksRunnable:]
  -[TRITaskQueue _registerTaskQueueActivityForDate:]
  -[TRITaskQueue _registerRetryActivityForDate:]
  -[TRITaskQueue _startImmediateTasksIfNotAlreadyQueued:guardedData:didStartNewWork:]
  -[TRITaskQueue _cancelTaskWithId:guardedData:persistCancel:]
  -[TRITaskQueue _addTask:options:guardedData:]
  -[TRITaskQueue _removeTaskWithId:guardedData:persistRemove:]
  -[TRITaskQueue _startRunnableTasksIfNecessaryWithGuardedData:]
  -[TRITaskQueue _runTask:]
  -[TRITaskQueue _finalizeTask:withId:runResult:]
  -[TRITaskQueue _evaluateRunConditionsWithGuardedData:shouldContinueWork:]
  -[TRITaskQueue _createOperationWithTask:withId:dependencies:taskMap:]
  -[TRITaskQueue finishXPCActivitiesWithGuardedData:]
  -[TRITaskQueue _addTask:options:guardedData:accumulatedNewTaskRecords:]
  -[TRITaskQueue _isTaskWithId:inTaskGroup:runnableGivenCapabilities:atDate:cachedRunnability:visitedPath:topoSortedRunnable:allowOnlyRootTasksRunnable:]
  -[TRITaskQueue _cancelDependenciesAndTaskWithId:guardedData:]
  -[TRITaskQueue _addTask:withDependencies:guardedData:]
  -[TRITaskQueue _cancelTask:guardedData:]
  -[TRITaskQueue updateActivity:withStartDate:]
  -[TRITaskQueue cancelTasksWithTag:excludingTasks:]
  -[TRITaskQueue initWithServerContext:operationQueue:operationGroup:asyncQueue:]
  -[TRITaskQueue waitForAsyncQueue]
  -[TRITaskQueue ifNotPresentAddTask:]


TRIXPCNamespaceManagementRequestHandler : NSObject /usr/lib/libSystem.B.dylib <TRIXPCNamespaceManagementServiceProtocol>
  // class methods
  +[TRIXPCNamespaceManagementRequestHandler usingServerContext:registerNamespaceWithNamespaceName:compatibilityVersion:defaultsFileURL:teamId:appContainerId:appContainerType:cloudKitContainerId:bundleId:completion:]
  +[TRIXPCNamespaceManagementRequestHandler usingServerContext:deregisterNamespaceWithName:teamId:taskQueue:completion:]
  +[TRIXPCNamespaceManagementRequestHandler usingServerContext:taskQueue:startDownloadNamespaceWithName:attribution:completion:]
  +[TRIXPCNamespaceManagementRequestHandler _usingEntitlementWitness:serverContext:taskQueue:startDownloadAssetIndexesByTreatment:namespace:taskAttribution:notificationKey:]
  +[TRIXPCNamespaceManagementRequestHandler resumeTaskQueue:forNetworkOptions:]

  // instance methods
  -[TRIXPCNamespaceManagementRequestHandler .cxx_destruct]
  -[TRIXPCNamespaceManagementRequestHandler registerNamespaceWithNamespaceName:compatibilityVersion:defaultsFileURL:applicationGroup:cloudKitContainerId:completion:]
  -[TRIXPCNamespaceManagementRequestHandler deregisterNamespaceWithNamespaceName:completion:]
  -[TRIXPCNamespaceManagementRequestHandler startDownloadNamespaceWithName:options:completion:]
  -[TRIXPCNamespaceManagementRequestHandler startDownloadLevelsForFactors:withNamespace:options:completion:]
  -[TRIXPCNamespaceManagementRequestHandler initWithServerContext:taskQueue:auditToken:]


TRIXPCNamespaceManagementServiceListener : NSObject /usr/lib/libSystem.B.dylib <NSXPCListenerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TRIXPCNamespaceManagementServiceListener .cxx_destruct]
  -[TRIXPCNamespaceManagementServiceListener listener:shouldAcceptNewConnection:]
  -[TRIXPCNamespaceManagementServiceListener initWithServerContext:taskQueue:]


TRIExperimentFetchDateManager : NSObject /usr/lib/libSystem.B.dylib <TRIDateProviding>
 @property  TRIKVStore *keyValueStore
 @property  NSMutableDictionary *cachedLastFetchExperimentDates

  // class methods
  +[TRIExperimentFetchDateManager managerWithKeyValueStore:]
  +[TRIExperimentFetchDateManager kvstoreKeyForContainer:teamId:]

  // instance methods
  -[TRIExperimentFetchDateManager keyValueStore]
  -[TRIExperimentFetchDateManager .cxx_destruct]
  -[TRIExperimentFetchDateManager initWithKeyValueStore:]
  -[TRIExperimentFetchDateManager lastFetchExperimentDateForContainer:teamId:]
  -[TRIExperimentFetchDateManager updateLastFetchExperimentDate:forContainer:teamId:]
  -[TRIExperimentFetchDateManager cachedLastFetchExperimentDates]


TRIKVStore : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[TRIKVStore init]
  -[TRIKVStore .cxx_destruct]
  -[TRIKVStore initWithDatabase:]
  -[TRIKVStore writeTransactionWithFailableBlock:]
  -[TRIKVStore readTransactionWithFailableBlock:]
  -[TRIKVStore blobForKey:usingTransaction:]
  -[TRIKVStore setBlob:forKey:usingTransaction:]
  -[TRIKVStore removeBlobForKey:usingTransaction:]


TRIExperimentDatabase : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[TRIExperimentDatabase init]
  -[TRIExperimentDatabase .cxx_destruct]
  -[TRIExperimentDatabase initWithDatabase:]
  -[TRIExperimentDatabase writeTransactionWithFailableBlock:]
  -[TRIExperimentDatabase readTransactionWithFailableBlock:]
  -[TRIExperimentDatabase experimentRecordWithExperimentDeployment:]
  -[TRIExperimentDatabase enumerateExperimentRecordsMatchingExperimentId:block:]
  -[TRIExperimentDatabase setStatus:forExperimentDeployment:usingTransaction:]
  -[TRIExperimentDatabase setTreatmentId:forExperimentDeployment:usingTransaction:]
  -[TRIExperimentDatabase enumerateExperimentRecordsWithBlock:]
  -[TRIExperimentDatabase removeExperimentRecordWithExperimentDeployment:]
  -[TRIExperimentDatabase addExperimentWithExperimentDeployment:type:status:startDate:endDate:namespaces:]
  -[TRIExperimentDatabase namespacesAreAvailableForExperimentId:startDate:endDate:namespaces:]
  -[TRIExperimentDatabase treatmentURLsForExperimentDeployment:usingTransaction:]
  -[TRIExperimentDatabase setTreatmentURL:forExperimentDeployment:namespaceName:]
  -[TRIExperimentDatabase enumerateExperimentRecordsMatchingStatuses:block:]
  -[TRIExperimentDatabase _enumerateExperimentRecordsMatchingWhereClause:bind:block:]
  -[TRIExperimentDatabase enumerateNamespaceRecordsForExperimentDeployment:usingTransaction:block:]
  -[TRIExperimentDatabase activeExperimentRecordWithTreatmentId:]


TRISequenceTask : TRIBaseTask <TRIRetryableTask, TRIMetricsProviding>
 @property  <TRITask> *lastTask
 @property  int retryCount
 @property  int taskType
 @property  NSString *taskName
 @property  NSArray *tags
 @property  NSDate *startTime
 @property  NSArray *dependencies
 @property  <TRITaskQueueStateProviding> *stateProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TRISequenceTask supportsSecureCoding]
  +[TRISequenceTask task]
  +[TRISequenceTask parseFromData:]
  +[TRISequenceTask _isTask:equalTo:]

  // instance methods
  -[TRISequenceTask serialize]
  -[TRISequenceTask metrics]
  -[TRISequenceTask dimensions]
  -[TRISequenceTask setRetryCount:]
  -[TRISequenceTask tags]
  -[TRISequenceTask retryCount]
  -[TRISequenceTask .cxx_destruct]
  -[TRISequenceTask dependencies]
  -[TRISequenceTask encodeWithCoder:]
  -[TRISequenceTask taskName]
  -[TRISequenceTask taskType]
  -[TRISequenceTask isEqual:]
  -[TRISequenceTask initWithCoder:]
  -[TRISequenceTask startTime]
  -[TRISequenceTask _asPersistedTask]
  -[TRISequenceTask runUsingContext:withTaskQueue:]
  -[TRISequenceTask lastTask]
  -[TRISequenceTask addTaskToEndOfSequence:]
  -[TRISequenceTask initWithTask:dependency:]


TRINamespaceDatabase : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[TRINamespaceDatabase init]
  -[TRINamespaceDatabase .cxx_destruct]
  -[TRINamespaceDatabase initWithDatabase:]
  -[TRINamespaceDatabase writeTransactionWithFailableBlock:]
  -[TRINamespaceDatabase readTransactionWithFailableBlock:]
  -[TRINamespaceDatabase enumerateAppContainerIdsForContainer:block:]
  -[TRINamespaceDatabase hasUnfetchedNamespaceForTeamId:]
  -[TRINamespaceDatabase dynamicNamespaceRecordWithNamespaceName:]
  -[TRINamespaceDatabase enumerateDynamicNamespaceRecordsWithBlock:]
  -[TRINamespaceDatabase removeDynamicNamespaceRecordWithNamespaceName:]
  -[TRINamespaceDatabase setFetched:forDynamicNamespaceName:]
  -[TRINamespaceDatabase addOrUpdateDynamicNamespaceWithName:compatibilityVersion:defaultsFileURL:teamId:appContainerId:appContainerType:cloudKitContainer:]
  -[TRINamespaceDatabase _enumerateDynamicNamespaceRecordsWithWhereClause:bind:block:]
  -[TRINamespaceDatabase enumerateDynamicNamespaceRecordsForContainer:teamId:block:]


TRITaskCapabilityUtilities : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[TRITaskCapabilityUtilities requiredCapabilities:areSupportedByAllowedCapabilities:]


TRIXPCInternalServiceClient : NSObject /usr/lib/libSystem.B.dylib <TRIInternalServiceProtocol>
  // instance methods
  -[TRIXPCInternalServiceClient init]
  -[TRIXPCInternalServiceClient .cxx_destruct]
  -[TRIXPCInternalServiceClient _performSyncXpcWithError:block:]
  -[TRIXPCInternalServiceClient taskRecordsWithError:]
  -[TRIXPCInternalServiceClient experimentRecordsWithError:]
  -[TRIXPCInternalServiceClient experimentNotificationsWithExperimentId:cloudKitContainer:teamId:error:]
  -[TRIXPCInternalServiceClient submitTask:options:error:]
  -[TRIXPCInternalServiceClient lastFetchDateForContainer:teamId:error:]
  -[TRIXPCInternalServiceClient setLastFetchDate:forContainer:teamId:error:]
  -[TRIXPCInternalServiceClient registerNamespaceWithNamespaceName:compatibilityVersion:defaultsFileURL:withTeamId:appContainerId:appContainerType:cloudKitContainerId:error:]
  -[TRIXPCInternalServiceClient deregisterNamespaceWithNamespaceName:withTeamId:error:]
  -[TRIXPCInternalServiceClient startNamespaceDownloadWithName:withTeamId:options:error:]
  -[TRIXPCInternalServiceClient dynamicNamespaceRecordsWithError:]


TRIBaseTask : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *taskName
 @property  NSArray *tags
 @property  NSDate *startTime
 @property  NSArray *dependencies
 @property  <TRITaskQueueStateProviding> *stateProvider

  // instance methods
  -[TRIBaseTask setStartTime:]
  -[TRIBaseTask tags]
  -[TRIBaseTask .cxx_destruct]
  -[TRIBaseTask dependencies]
  -[TRIBaseTask taskName]
  -[TRIBaseTask requiredCapabilities]
  -[TRIBaseTask isEqual:]
  -[TRIBaseTask startTime]
  -[TRIBaseTask runEnqueueHandlerUsingContext:]
  -[TRIBaseTask runDequeueHandlerUsingContext:]
  -[TRIBaseTask stateProvider]
  -[TRIBaseTask setStateProvider:]


TRITripersistedTasksRoot : TRIPBRootObject /System/Library/PrivateFrameworks/Trial.framework/Trial

TRIAnyPersistedTask : TRIPBMessage /System/Library/PrivateFrameworks/Trial.framework/Trial
 @property  int type
 @property  BOOL hasType
 @property  NSData *serialized
 @property  BOOL hasSerialized

  // class methods
  +[TRIAnyPersistedTask descriptor]


TRIPersistedTaskAttribution : TRIPBMessage /System/Library/PrivateFrameworks/Trial.framework/Trial
 @property  NSString *applicationBundleId
 @property  BOOL hasApplicationBundleId
 @property  int cloudKitContainer
 @property  BOOL hasCloudKitContainer
 @property  NSString *teamId
 @property  BOOL hasTeamId
 @property  TRIPersistedNetworkBehavior *networkBehavior
 @property  BOOL hasNetworkBehavior

  // class methods
  +[TRIPersistedTaskAttribution descriptor]


TRIActivateTreatmentPersistedTask : TRIPBMessage /System/Library/PrivateFrameworks/Trial.framework/Trial
 @property  NSString *experimentId
 @property  BOOL hasExperimentId
 @property  int deploymentId
 @property  BOOL hasDeploymentId
 @property  NSString *treatmentId
 @property  BOOL hasTreatmentId
 @property  TRIPBTimestamp *startTimestamp
 @property  BOOL hasStartTimestamp
 @property  TRIPBTimestamp *endTimestamp
 @property  BOOL hasEndTimestamp
 @property  int retryCount
 @property  BOOL hasRetryCount
 @property  TRIPersistedTaskAttribution *taskAttribution
 @property  BOOL hasTaskAttribution

  // class methods
  +[TRIActivateTreatmentPersistedTask descriptor]


TRIDeactivateTreatmentPersistedTask : TRIPBMessage /System/Library/PrivateFrameworks/Trial.framework/Trial
 @property  NSString *experimentId
 @property  BOOL hasExperimentId
 @property  BOOL failOnUnrecognizedExperiment
 @property  BOOL hasFailOnUnrecognizedExperiment
 @property  TRIPBTimestamp *startTimestamp
 @property  BOOL hasStartTimestamp
 @property  int retryCount
 @property  BOOL hasRetryCount

  // class methods
  +[TRIDeactivateTreatmentPersistedTask descriptor]


TRIFetchTreatmentPersistedTask : TRIPBMessage /System/Library/PrivateFrameworks/Trial.framework/Trial
 @property  NSString *experimentId
 @property  BOOL hasExperimentId
 @property  int deploymentId
 @property  BOOL hasDeploymentId
 @property  NSString *treatmentId
 @property  BOOL hasTreatmentId
 @property  int retryCount
 @property  BOOL hasRetryCount
 @property  TRIPersistedTaskAttribution *taskAttribution
 @property  BOOL hasTaskAttribution

  // class methods
  +[TRIFetchTreatmentPersistedTask descriptor]


TRIFetchExperimentPersistedTask : TRIPBMessage /System/Library/PrivateFrameworks/Trial.framework/Trial
 @property  NSString *experimentId
 @property  BOOL hasExperimentId
 @property  int deploymentId
 @property  BOOL hasDeploymentId
 @property  TRIPersistedTaskAttribution *taskAttribution
 @property  BOOL hasTaskAttribution
 @property  int retryCount
 @property  BOOL hasRetryCount

  // class methods
  +[TRIFetchExperimentPersistedTask descriptor]


TRIFetchExperimentNotificationsPersistedTask : TRIPBMessage /System/Library/PrivateFrameworks/Trial.framework/Trial
 @property  TRIPBTimestamp *earliestTimestamp
 @property  BOOL hasEarliestTimestamp
 @property  NSMutableArray *namespacesArray
 @property  unsigned long namespacesArray_Count
 @property  BOOL rollbacksOnly
 @property  BOOL hasRollbacksOnly
 @property  TRIPersistedTaskAttribution *taskAttribution
 @property  BOOL hasTaskAttribution
 @property  int retryCount
 @property  BOOL hasRetryCount

  // class methods
  +[TRIFetchExperimentNotificationsPersistedTask descriptor]


TRITargetingPersistedTask : TRIPBMessage /System/Library/PrivateFrameworks/Trial.framework/Trial
 @property  NSString *experimentId
 @property  BOOL hasExperimentId
 @property  int deploymentId
 @property  BOOL hasDeploymentId
 @property  BOOL includeDependencies
 @property  BOOL hasIncludeDependencies
 @property  int retryCount
 @property  BOOL hasRetryCount
 @property  TRIPersistedTaskAttribution *taskAttribution
 @property  BOOL hasTaskAttribution

  // class methods
  +[TRITargetingPersistedTask descriptor]


TRIMaintenancePersistedTask : TRIPBMessage /System/Library/PrivateFrameworks/Trial.framework/Trial
  // class methods
  +[TRIMaintenancePersistedTask descriptor]


TRIRotateSubjectIdPersistedTask : TRIPBMessage /System/Library/PrivateFrameworks/Trial.framework/Trial
 @property  BOOL forceUpdate
 @property  BOOL hasForceUpdate
 @property  NSString *deviceId
 @property  BOOL hasDeviceId
 @property  TRIPBTimestamp *nextRotationTimestamp
 @property  BOOL hasNextRotationTimestamp

  // class methods
  +[TRIRotateSubjectIdPersistedTask descriptor]


TRIMakeDefaultPersistedTask : TRIPBMessage /System/Library/PrivateFrameworks/Trial.framework/Trial
 @property  NSString *experimentId
 @property  BOOL hasExperimentId
 @property  int deploymentId
 @property  BOOL hasDeploymentId
 @property  NSString *treatmentId
 @property  BOOL hasTreatmentId
 @property  TRIPersistedTaskAttribution *taskAttribution
 @property  BOOL hasTaskAttribution
 @property  int retryCount
 @property  BOOL hasRetryCount

  // class methods
  +[TRIMakeDefaultPersistedTask descriptor]


TRIRetargetAllPersistedTask : TRIPBMessage /System/Library/PrivateFrameworks/Trial.framework/Trial
  // class methods
  +[TRIRetargetAllPersistedTask descriptor]


TRIConfigurationPersistedTask : TRIPBMessage /System/Library/PrivateFrameworks/Trial.framework/Trial
  // class methods
  +[TRIConfigurationPersistedTask descriptor]


TRIPostUpgradeCleanupPersistedTask : TRIPBMessage /System/Library/PrivateFrameworks/Trial.framework/Trial
  // class methods
  +[TRIPostUpgradeCleanupPersistedTask descriptor]


TRISequencePersistedTask : TRIPBMessage /System/Library/PrivateFrameworks/Trial.framework/Trial
 @property  TRIAnyPersistedTask *task
 @property  BOOL hasTask
 @property  TRIAnyPersistedTask *dependentTask
 @property  BOOL hasDependentTask

  // class methods
  +[TRISequencePersistedTask descriptor]


TRIScheduleFetchExperimentNotificationsPersistedTask : TRIPBMessage /System/Library/PrivateFrameworks/Trial.framework/Trial
 @property  BOOL rollbacksOnly
 @property  BOOL hasRollbacksOnly
 @property  TRIPersistedNetworkBehavior *networkBehavior
 @property  BOOL hasNetworkBehavior

  // class methods
  +[TRIScheduleFetchExperimentNotificationsPersistedTask descriptor]


TRIRecurrentScheduleFetchRollbacksPersistedTask : TRIPBMessage /System/Library/PrivateFrameworks/Trial.framework/Trial
 @property  TRIPersistedTaskAttribution *taskAttribution
 @property  BOOL hasTaskAttribution
 @property  BOOL isRepeatedInstance
 @property  BOOL hasIsRepeatedInstance

  // class methods
  +[TRIRecurrentScheduleFetchRollbacksPersistedTask descriptor]


TRIFetchOnDemandFactorsPersistedTask : TRIPBMessage /System/Library/PrivateFrameworks/Trial.framework/Trial
 @property  NSString *namespaceName
 @property  BOOL hasNamespaceName
 @property  int retryCount
 @property  BOOL hasRetryCount
 @property  NSString *notificationKey
 @property  BOOL hasNotificationKey
 @property  TRIPersistedTaskAttribution *taskAttribution
 @property  BOOL hasTaskAttribution
 @property  NSMutableArray *treatmentAssetIndexesArray
 @property  unsigned long treatmentAssetIndexesArray_Count

  // class methods
  +[TRIFetchOnDemandFactorsPersistedTask descriptor]


TRIFetchOnDemandFactorsPersistedTask_TreatmentAssetIndexes : TRIPBMessage /System/Library/PrivateFrameworks/Trial.framework/Trial
 @property  NSString *treatmentId
 @property  BOOL hasTreatmentId
 @property  TRIPBUInt32Array *indexArray
 @property  unsigned long indexArray_Count

  // class methods
  +[TRIFetchOnDemandFactorsPersistedTask_TreatmentAssetIndexes descriptor]


TRIContentTracker : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[TRIContentTracker contentIdentifierForExperimentArtifactWithDeployment:]
  +[TRIContentTracker decodeContentIdentifier:experimentDeployment:treatmentId:container:]
  +[TRIContentTracker contentIdentifierForTreatmentArtifactWithTreatmentId:container:]

  // instance methods
  -[TRIContentTracker init]
  -[TRIContentTracker .cxx_destruct]
  -[TRIContentTracker initWithDatabase:]
  -[TRIContentTracker writeTransactionWithFailableBlock:]
  -[TRIContentTracker readTransactionWithFailableBlock:]
  -[TRIContentTracker addRefWithContentIdentifier:]
  -[TRIContentTracker dropRefWithContentIdentifier:]
  -[TRIContentTracker enumerateTrackedItemsWithBlock:]
  -[TRIContentTracker clearRefsWithContentIdentifier:]
  -[TRIContentTracker _addOrDropRefWithContentIdentifier:changeType:]
  -[TRIContentTracker refCountForContentIdentifier:refCount:]


TRIRetargetAllTask : TRIBaseTask <TRITask>
 @property  NSArray *nextTasks
 @property  int taskType
 @property  NSString *taskName
 @property  NSArray *tags
 @property  NSDate *startTime
 @property  NSArray *dependencies
 @property  <TRITaskQueueStateProviding> *stateProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TRIRetargetAllTask supportsSecureCoding]
  +[TRIRetargetAllTask task]
  +[TRIRetargetAllTask parseFromData:]

  // instance methods
  -[TRIRetargetAllTask serialize]
  -[TRIRetargetAllTask .cxx_destruct]
  -[TRIRetargetAllTask encodeWithCoder:]
  -[TRIRetargetAllTask taskType]
  -[TRIRetargetAllTask initWithCoder:]
  -[TRIRetargetAllTask nextTasks]
  -[TRIRetargetAllTask _asPersistedTask]
  -[TRIRetargetAllTask runUsingContext:withTaskQueue:]
  -[TRIRetargetAllTask setNextTasks:]


TRIUnitTestStorageManagement : NSObject /usr/lib/libSystem.B.dylib <TRIStorageManagementProtocol>
  // instance methods
  -[TRIUnitTestStorageManagement requestTrialStorageResetOnNextLaunch]


TRIDServer : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL isRunning

  // class methods
  +[TRIDServer sharedServer]
  +[TRIDServer _triPath]

  // instance methods
  -[TRIDServer init]
  -[TRIDServer .cxx_destruct]
  -[TRIDServer initWithPath:]
  -[TRIDServer isRunning]
  -[TRIDServer start]
  -[TRIDServer _updateSystemInfo]
  -[TRIDServer _dispatchIfUnlocked:]
  -[TRIDServer _getFreeDiskSpace]
  -[TRIDServer _asyncStartWithMetrics:]
  -[TRIDServer _registerXpcStreamEventHandler]
  -[TRIDServer _logMetrics:stopwatch:]
  -[TRIDServer _getDiskUsageInBytes]
  -[TRIDServer _shouldContinue]


TRIFetchExperimentTask : TRIExperimentBaseTask <TRIRetryableTask, TRIMetricsProviding>
 @property  int retryCount
 @property  int taskType
 @property  NSString *taskName
 @property  NSArray *tags
 @property  NSDate *startTime
 @property  NSArray *dependencies
 @property  <TRITaskQueueStateProviding> *stateProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TRIFetchExperimentTask supportsSecureCoding]
  +[TRIFetchExperimentTask parseFromData:]
  +[TRIFetchExperimentTask taskWithExperimentDeployment:taskAttributing:]

  // instance methods
  -[TRIFetchExperimentTask serialize]
  -[TRIFetchExperimentTask metrics]
  -[TRIFetchExperimentTask dimensions]
  -[TRIFetchExperimentTask setRetryCount:]
  -[TRIFetchExperimentTask retryCount]
  -[TRIFetchExperimentTask .cxx_destruct]
  -[TRIFetchExperimentTask encodeWithCoder:]
  -[TRIFetchExperimentTask taskType]
  -[TRIFetchExperimentTask requiredCapabilities]
  -[TRIFetchExperimentTask initWithCoder:]
  -[TRIFetchExperimentTask _asPersistedTask]
  -[TRIFetchExperimentTask runUsingContext:withTaskQueue:]
  -[TRIFetchExperimentTask runEnqueueHandlerUsingContext:]
  -[TRIFetchExperimentTask runDequeueHandlerUsingContext:]
  -[TRIFetchExperimentTask _nextTasksForRunStatus:]
  -[TRIFetchExperimentTask initWithExperimentDeployment:taskAttributing:]


TRIStorageManagement : NSObject /usr/lib/libSystem.B.dylib <TRIStorageManagementProtocol>
  // instance methods
  -[TRIStorageManagement requestTrialStorageResetOnNextLaunch]
  -[TRIStorageManagement prepareTrialStorage]
  -[TRIStorageManagement _readSchemaVersion:]
  -[TRIStorageManagement _readDeviceIdWithSchemaVersion:intoData:]
  -[TRIStorageManagement _clearStorage]
  -[TRIStorageManagement _writeDeviceIdWithData:schemaVersion:]
  -[TRIStorageManagement _writeSchemaVersion:]
  -[TRIStorageManagement _clearContainerStorage]
  -[TRIStorageManagement _runNamespaceDatabaseBlock:]


TRIRotateSubjectIdTask : TRIBaseTask <TRITask>
 @property  int taskType
 @property  NSString *taskName
 @property  NSArray *tags
 @property  NSDate *startTime
 @property  NSArray *dependencies
 @property  <TRITaskQueueStateProviding> *stateProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TRIRotateSubjectIdTask supportsSecureCoding]
  +[TRIRotateSubjectIdTask task]
  +[TRIRotateSubjectIdTask parseFromData:]
  +[TRIRotateSubjectIdTask taskWithDeviceId:nextRotationDate:forceUpdate:]

  // instance methods
  -[TRIRotateSubjectIdTask serialize]
  -[TRIRotateSubjectIdTask tags]
  -[TRIRotateSubjectIdTask .cxx_destruct]
  -[TRIRotateSubjectIdTask encodeWithCoder:]
  -[TRIRotateSubjectIdTask taskType]
  -[TRIRotateSubjectIdTask isEqual:]
  -[TRIRotateSubjectIdTask initWithCoder:]
  -[TRIRotateSubjectIdTask _asPersistedTask]
  -[TRIRotateSubjectIdTask runUsingContext:withTaskQueue:]
  -[TRIRotateSubjectIdTask initWithDeviceId:nextRotationDate:forceUpdate:]
  -[TRIRotateSubjectIdTask runTaskUsingContext:]


TRINamespaceDescriptorProvider : NSObject /usr/lib/libSystem.B.dylib <TRINamespaceDescriptorProviding>
  // class methods
  +[TRINamespaceDescriptorProvider providerWithNamespaceDatabase:defaultDescriptorDirectoryPath:]
  +[TRINamespaceDescriptorProvider _descriptorFromDynamicNamespaceRecord:]

  // instance methods
  -[TRINamespaceDescriptorProvider .cxx_destruct]
  -[TRINamespaceDescriptorProvider descriptorWithNamespaceName:]
  -[TRINamespaceDescriptorProvider initWithNamespaceDatabase:defaultDescriptorDirectoryPath:]
  -[TRINamespaceDescriptorProvider _dynamicDescriptorsForContainer:teamId:]


TRIRunningXPCActivityDescriptor : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  @? shouldDefer
 @property  @? completion
 @property  NSString *name
 @property  NSObject<OS_xpc_object> *activity
 @property  unsigned long capabilities

  // instance methods
  -[TRIRunningXPCActivityDescriptor copyWithZone:]
  -[TRIRunningXPCActivityDescriptor shouldDefer]
  -[TRIRunningXPCActivityDescriptor activity]
  -[TRIRunningXPCActivityDescriptor init]
  -[TRIRunningXPCActivityDescriptor completion]
  -[TRIRunningXPCActivityDescriptor setCompletion:]
  -[TRIRunningXPCActivityDescriptor .cxx_destruct]
  -[TRIRunningXPCActivityDescriptor name]
  -[TRIRunningXPCActivityDescriptor capabilities]
  -[TRIRunningXPCActivityDescriptor setShouldDefer:]
  -[TRIRunningXPCActivityDescriptor initForImmediateWorkWithCapabilities:]
  -[TRIRunningXPCActivityDescriptor initWithActivity:capabilities:name:]


TRIXPCActivitySupport : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[TRIXPCActivitySupport registerActivityWithLaunchDaemonDescriptor:checkInBlock:asyncHandler:]
  +[TRIXPCActivitySupport nameForActivityState:]


TRIConfigurationTask : TRIBaseTask <TRITask>
 @property  int taskType
 @property  NSString *taskName
 @property  NSArray *tags
 @property  NSDate *startTime
 @property  NSArray *dependencies
 @property  <TRITaskQueueStateProviding> *stateProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TRIConfigurationTask supportsSecureCoding]
  +[TRIConfigurationTask parseFromData:]

  // instance methods
  -[TRIConfigurationTask serialize]
  -[TRIConfigurationTask encodeWithCoder:]
  -[TRIConfigurationTask taskType]
  -[TRIConfigurationTask initWithCoder:]
  -[TRIConfigurationTask _asPersistedTask]
  -[TRIConfigurationTask runUsingContext:withTaskQueue:]


TRIClientTreatmentStorage : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[TRIClientTreatmentStorage init]
  -[TRIClientTreatmentStorage initWithPaths:]
  -[TRIClientTreatmentStorage .cxx_destruct]
  -[TRIClientTreatmentStorage removeTreatmentWithTreatmentId:]
  -[TRIClientTreatmentStorage removeTreatmentFromLayer:withNamespaceName:]
  -[TRIClientTreatmentStorage loadTreatmentWithTreatmentId:isFilePresent:]
  -[TRIClientTreatmentStorage urlForDefaultFactorsWithNamespaceName:]
  -[TRIClientTreatmentStorage saveTreatment:assetURLs:]
  -[TRIClientTreatmentStorage urlForFactorsWithTreatmentId:namespaceName:]
  -[TRIClientTreatmentStorage updateSavedTreatmentWithTreatmentId:mergingAssetURLs:forNamespaceNames:]
  -[TRIClientTreatmentStorage initWithPaths:extractor:]
  -[TRIClientTreatmentStorage urlForTreatmentWithTreatmentId:]
  -[TRIClientTreatmentStorage _saveAssetsFromURLs:treatment:]
  -[TRIClientTreatmentStorage _linkAssetsUpdatingTreatment:]
  -[TRIClientTreatmentStorage _saveNamespacePartitionedTreatmentsForTreatment:forNamespaceNames:]
  -[TRIClientTreatmentStorage _savePersistedTreatment:]
  -[TRIClientTreatmentStorage _removeFactorsWithURL:]
  -[TRIClientTreatmentStorage _removeFactorsWithTreatmentId:namespaceName:]
  -[TRIClientTreatmentStorage _baseUrlForTreatment:namespaceName:]
  -[TRIClientTreatmentStorage _assetMapWithTreatment:]
  -[TRIClientTreatmentStorage _assetURLForFactor:treatmentId:]
  -[TRIClientTreatmentStorage _resolveAssetPathsInTreatment:usingReferenceURL:]
  -[TRIClientTreatmentStorage _copyFileFromURL:to:]


TRIActivateTreatmentBaseTask : TRITreatmentBaseTask
 @property  BOOL testingIgnoreDependencies
 @property  NSDate *endTime

  // instance methods
  -[TRIActivateTreatmentBaseTask endTime]
  -[TRIActivateTreatmentBaseTask setEndTime:]
  -[TRIActivateTreatmentBaseTask setStartTime:]
  -[TRIActivateTreatmentBaseTask .cxx_destruct]
  -[TRIActivateTreatmentBaseTask dependencies]
  -[TRIActivateTreatmentBaseTask startTime]
  -[TRIActivateTreatmentBaseTask runUsingContext:withTaskQueue:]
  -[TRIActivateTreatmentBaseTask runEnqueueHandlerUsingContext:]
  -[TRIActivateTreatmentBaseTask runDequeueHandlerUsingContext:]
  -[TRIActivateTreatmentBaseTask _nextTasksForRunStatus:]
  -[TRIActivateTreatmentBaseTask runTaskUsingContext:experiment:]
  -[TRIActivateTreatmentBaseTask _writeNamespaceDescriptorsWithPaths:toTreatmentLayer:forExperiment:treatmentURLs:context:]
  -[TRIActivateTreatmentBaseTask runTaskUsingContext:]
  -[TRIActivateTreatmentBaseTask testingIgnoreDependencies]
  -[TRIActivateTreatmentBaseTask _experimentRecord:hasConflictWithExperimentsInDatabase:conflictEndTime:]
  -[TRIActivateTreatmentBaseTask updateLoggingWithExperimentRecord:paths:trackingId:newLogTreatmentAddedOut:]
  -[TRIActivateTreatmentBaseTask setTestingIgnoreDependencies:]


TRIDatabase : NSObject /usr/lib/libSystem.B.dylib <_PASDatabaseMigrationProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TRIDatabase vacuum]
  -[TRIDatabase init]
  -[TRIDatabase migrateToVersion:]
  -[TRIDatabase .cxx_destruct]
  -[TRIDatabase queriesToSkipFromEmptyToVersion:]
  -[TRIDatabase _updateQueryPlanLogging]
  -[TRIDatabase closePermanently]
  -[TRIDatabase migrations]
  -[TRIDatabase databaseHandle]
  -[TRIDatabase writeTransactionWithFailableBlock:]
  -[TRIDatabase readTransactionWithFailableBlock:]
  -[TRIDatabase generalErrorHandlerWithOutError:]
  -[TRIDatabase initWithPaths:storageManagement:]
  -[TRIDatabase createTempTableContainingRowsFromQuery:bind:namePrefix:transaction:]
  -[TRIDatabase dropTableWithName:transaction:]
  -[TRIDatabase initWithPaths:databasePath:storageManagement:performMigrations:]
  -[TRIDatabase _enableQueryPlanLogging]
  -[TRIDatabase _disableQueryPlanLogging]
  -[TRIDatabase initInMemoryAndPerformMigrations:]


TRIClient(Telemetry)
	// class methods
	+[TRIClient(Telemetry) systemNamespaceName]

	// instance methods
	-[TRIClient(Telemetry) shouldLogAtLevel:]
	-[TRIClient(Telemetry) shouldLogAtLevel:withPrivacyRadar:]
	-[TRIClient(Telemetry) levelForSystemFactor:]

(TRI)
	// class methods
	+[(TRI) triKeys:values:fromDictionary:]

	// instance methods
	-[(TRI) tri_contextValueWithName:]
	-[(TRI) triKeys:values:]
	-[(TRI) triStringValueForField:isNestedValue:]
	-[(TRI) triDataForField:]
	-[(TRI) getContextValueWithName:]
	-[(TRI) triArrayValueForField:isNestedValue:]
	-[(TRI) triNumberValueForField:isNestedValue:]
	-[(TRI) triReversedDag]
	-[(TRI) triItemsInDagWithSource:]
	-[(TRI) triItemsInDagWithSink:]
	-[(TRI) triTransformValuesWithBlock:]
	-[(TRI) triValueFromNestedField:]
	-[(TRI) triDataValueFromBase64StringForField:]

NSMutableDictionary(TRI)
	// instance methods
	-[NSMutableDictionary(TRI) triKeys:values:]
	-[NSMutableDictionary(TRI) tri_setContextValueWithName:value:]

(TRIUtils)
	// class methods
	+[(TRIUtils) triIsDate:equalToDate:withinInterval:]
	+[(TRIUtils) triIsDate:equalToDate:]
	+[(TRIUtils) triDateFromCloudKitTimestamp:]
	+[(TRIUtils) triModifiedDateFromCloudKitResult:]

	// instance methods
	-[(TRIUtils) triCloudKitTimestamp]

(TRITreatmentId)
	// instance methods
	-[(TRITreatmentId) triIsValidTreatmentId]
	-[(TRITreatmentId) tri_assignmentProbabilityWithSeed:]
	-[(TRITreatmentId) assignmentProbabilityWithSeed:]

(TRI)
	// instance methods
	-[(TRI) triHexlify]
	-[(TRI) triSha256]
	-[(TRI) triSha256Base64String]

(TRIFunctions)
	// instance methods
	-[(TRIFunctions) tri_intersects:]
	-[(TRIFunctions) tri_contains:]

(TRICloudKit)
	// class methods
	+[(TRICloudKit) triCloudKitErrorWithMessage:code:]
	+[(TRICloudKit) triCloudKitErrorWithMessage:]

01 00 0500 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKAsset 
01 00 0500 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKContainer 
01 00 0500 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchRecordsOperation 
01 00 0500 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKModifyRecordsOperation 
01 00 0500 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKOperationConfiguration 
01 00 0500 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKQuery 
01 00 0500 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKQueryOperation 
01 00 0500 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecord 
01 00 0500 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecordID 
01 00 0500 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecordZoneID 
01 00 0600 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationRecord 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSBlockOperation 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSComparisonPredicate 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSCompoundPredicate 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSExpression 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileHandle 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSISO8601DateFormatter 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMethodSignature 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 0900 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSScanner 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRIAppContainer 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRIClient 
01 00 0300 /System/Library/PrivateFrameworks/TrialProto.framework/TrialProto: TRIClientExperiment 
01 00 0300 /System/Library/PrivateFrameworks/TrialProto.framework/TrialProto: TRIClientTreatment 
01 00 0300 /System/Library/PrivateFrameworks/TrialProto.framework/TrialProto: TRIDenormalizedEvent 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRIDownloadNotification 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRIDownloadOptions 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRIEntitlement 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRIFactorDownloadValidator 
01 00 0300 /System/Library/PrivateFrameworks/TrialProto.framework/TrialProto: TRIFactorLevel 
01 00 0300 /System/Library/PrivateFrameworks/TrialProto.framework/TrialProto: TRILogNamespace 
01 00 0300 /System/Library/PrivateFrameworks/TrialProto.framework/TrialProto: TRILogTreatment 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRILogTreatmentReader 
01 00 0300 /System/Library/PrivateFrameworks/TrialProto.framework/TrialProto: TRIMetric 
01 00 0300 /System/Library/PrivateFrameworks/TrialProto.framework/TrialProto: TRINamespace 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRINamespaceDescriptor 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRINamespaceFactorProvider 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRINamespaceFactorProviderChain 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRINamespaceStatus 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRINamespaceStatusProvider 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRINamespaceUpdateNotification 
01 00 0300 /System/Library/PrivateFrameworks/TrialProto.framework/TrialProto: TRIPBDescriptor 
01 00 0300 /System/Library/PrivateFrameworks/TrialProto.framework/TrialProto: TRIPBEnumDescriptor 
01 00 0300 /System/Library/PrivateFrameworks/TrialProto.framework/TrialProto: TRIPBFileDescriptor 
01 00 0300 /System/Library/PrivateFrameworks/TrialProto.framework/TrialProto: TRIPBMessage 
01 00 0300 /System/Library/PrivateFrameworks/TrialProto.framework/TrialProto: TRIPBRootObject 
01 00 0300 /System/Library/PrivateFrameworks/TrialProto.framework/TrialProto: TRIPBTimestamp 
01 00 0300 /System/Library/PrivateFrameworks/TrialProto.framework/TrialProto: TRIPBUInt32Array 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRIStandardPaths 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRIStopwatch 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRISubjectProvider 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRISubjectRotationNotification 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRISystemConfiguration 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRISystemInfo 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRITreatmentInfo 
01 00 0300 /System/Library/PrivateFrameworks/TrialProto.framework/TrialProto: TRIUserDimension 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRIVersion 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRIXPCUtils 
01 00 0200 /System/Library/PrivateFrameworks/ProactiveSupport.framework/ProactiveSupport: _PASDatabaseMigrator 
01 00 0200 /System/Library/PrivateFrameworks/ProactiveSupport.framework/ProactiveSupport: _PASDeviceState 
01 00 0200 /System/Library/PrivateFrameworks/ProactiveSupport.framework/ProactiveSupport: _PASDispatch 
01 00 0200 /System/Library/PrivateFrameworks/ProactiveSupport.framework/ProactiveSupport: _PASEntitlement 
01 00 0200 /System/Library/PrivateFrameworks/ProactiveSupport.framework/ProactiveSupport: _PASFileUtils 
01 00 0200 /System/Library/PrivateFrameworks/ProactiveSupport.framework/ProactiveSupport: _PASKVOHandler 
01 00 0200 /System/Library/PrivateFrameworks/ProactiveSupport.framework/ProactiveSupport: _PASLock 
01 00 0200 /System/Library/PrivateFrameworks/ProactiveSupport.framework/ProactiveSupport: _PASSqliteDatabase 
01 00 0200 /System/Library/PrivateFrameworks/ProactiveSupport.framework/ProactiveSupport: _PASSqliteDefaultErrorHandler 
01 00 0200 /System/Library/PrivateFrameworks/ProactiveSupport.framework/ProactiveSupport: _PASSqliteTransaction 
01 00 0200 /System/Library/PrivateFrameworks/ProactiveSupport.framework/ProactiveSupport: _PASXPCClientHelper 
01 00 0200 /System/Library/PrivateFrameworks/ProactiveSupport.framework/ProactiveSupport: _PASXPCServer 
01 00 0200 /System/Library/PrivateFrameworks/ProactiveSupport.framework/ProactiveSupport: _PASXPCServerHelper 
