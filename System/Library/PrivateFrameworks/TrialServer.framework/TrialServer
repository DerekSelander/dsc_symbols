|| __DATA.__objc_data _OBJC_CLASS_$_TRIActivationEventRecord
|| __DATA.__objc_data _OBJC_CLASS_$_TRIAnyPersistedTask
|| __DATA.__objc_data _OBJC_CLASS_$_TRIAssetDiffArtifact
|| __DATA.__objc_data _OBJC_CLASS_$_TRIAssetIdURL
|| __DATA.__objc_data _OBJC_CLASS_$_TRIConfigurationPersistedTask
|| __DATA.__objc_data _OBJC_CLASS_$_TRIDisenrollRolloutPersistedTask
|| __DATA.__objc_data _OBJC_CLASS_$_TRIDiskUsage
|| __DATA.__objc_data _OBJC_CLASS_$_TRIDownloadLatencyTaskResultTelemetryBuilder
|| __DATA.__objc_data _OBJC_CLASS_$_TRIFactorNamespaceRecord
|| __DATA.__objc_data _OBJC_CLASS_$_TRIFactorPackAsset
|| __DATA.__objc_data _OBJC_CLASS_$_TRIFetchRolloutNotificationListPersistedTask
|| __DATA.__objc_data _OBJC_CLASS_$_TRIImmediateDownloadTelemetryGenerator
|| __DATA.__objc_data _OBJC_CLASS_$_TRILatencyMetricTelemetryValidator
|| __DATA.__objc_data _OBJC_CLASS_$_TRIMaintenanceTaskGuardedData
|| __DATA.__objc_data _OBJC_CLASS_$_TRIMakeDefaultPersistedTask
|| __DATA.__objc_data _OBJC_CLASS_$_TRIParsedFactorPackSet
|| __DATA.__objc_data _OBJC_CLASS_$_TRIPostUpgradeCleanupPersistedTask
|| __DATA.__objc_data _OBJC_CLASS_$_TRIPurgeableFactorPack
|| __DATA.__objc_data _OBJC_CLASS_$_TRISQLiteCKContainer
|| __DATA.__objc_data _OBJC_CLASS_$_TRISQLiteCKDatabase
|| __DATA.__objc_data _OBJC_CLASS_$_TRISequencePersistedTask
|| __DATA.__objc_data _OBJC_CLASS_$_TRISetupAssistantFetchPersistedTask
|| __DATA.__objc_data _OBJC_CLASS_$_TRISetupAssistantFetchTelemetryGenerator
|| __DATA.__objc_data _OBJC_CLASS_$_TRITaskOptions
|| __DATA.__objc_data _OBJC_CLASS_$_TRITreatmentContentDescriptor
|| __DATA.__objc_data _OBJC_CLASS_$_TRITreatmentRecordFetchPlan
|| __DATA.__objc_data _OBJC_CLASS_$_TRITritaskOptionsRoot
|| __DATA.__objc_data _OBJC_CLASS_$_TRIUnitTestStorageManagement
|| __DATA.__objc_data _OBJC_CLASS_$_TRIXPCInternalServiceClient
|| __DATA.__objc_data _OBJC_METACLASS_$_TRIActivationEventRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_TRIAnyPersistedTask
|| __DATA.__objc_data _OBJC_METACLASS_$_TRIAssetDiffArtifact
|| __DATA.__objc_data _OBJC_METACLASS_$_TRIAssetIdURL
|| __DATA.__objc_data _OBJC_METACLASS_$_TRIConfigurationPersistedTask
|| __DATA.__objc_data _OBJC_METACLASS_$_TRIDisenrollRolloutPersistedTask
|| __DATA.__objc_data _OBJC_METACLASS_$_TRIDiskUsage
|| __DATA.__objc_data _OBJC_METACLASS_$_TRIDownloadLatencyTaskResultTelemetryBuilder
|| __DATA.__objc_data _OBJC_METACLASS_$_TRIFactorNamespaceRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_TRIFactorPackAsset
|| __DATA.__objc_data _OBJC_METACLASS_$_TRIFetchRolloutNotificationListPersistedTask
|| __DATA.__objc_data _OBJC_METACLASS_$_TRIImmediateDownloadTelemetryGenerator
|| __DATA.__objc_data _OBJC_METACLASS_$_TRILatencyMetricTelemetryValidator
|| __DATA.__objc_data _OBJC_METACLASS_$_TRIMaintenanceTaskGuardedData
|| __DATA.__objc_data _OBJC_METACLASS_$_TRIMakeDefaultPersistedTask
|| __DATA.__objc_data _OBJC_METACLASS_$_TRIParsedFactorPackSet
|| __DATA.__objc_data _OBJC_METACLASS_$_TRIPurgeableFactorPack
|| __DATA.__objc_data _OBJC_METACLASS_$_TRISQLiteCKContainer
|| __DATA.__objc_data _OBJC_METACLASS_$_TRISQLiteCKDatabase
|| __DATA.__objc_data _OBJC_METACLASS_$_TRISequencePersistedTask
|| __DATA.__objc_data _OBJC_METACLASS_$_TRISetupAssistantFetchPersistedTask
|| __DATA.__objc_data _OBJC_METACLASS_$_TRISetupAssistantFetchTelemetryGenerator
|| __DATA.__objc_data _OBJC_METACLASS_$_TRITaskOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_TRITreatmentContentDescriptor
|| __DATA.__objc_data _OBJC_METACLASS_$_TRITreatmentRecordFetchPlan
|| __DATA.__objc_data _OBJC_METACLASS_$_TRITritaskOptionsRoot
|| __DATA.__objc_data _OBJC_METACLASS_$_TRIUnitTestStorageManagement
|| __DATA.__objc_data _OBJC_METACLASS_$_TRIXPCInternalServiceClient
|| __DATA.__objc_ivar _OBJC_IVAR_$_TRIAggregateFetchRecordsProgressGuardedData.actualBytesTransferred
|| __DATA.__objc_ivar _OBJC_IVAR_$_TRIAggregateFetchRecordsProgressGuardedData.expectedTotalBytes
|| __DATA.__objc_ivar _OBJC_IVAR_$_TRIAggregateFetchRecordsProgressGuardedData.perRecordProgress
|| __DATA.__objc_ivar _OBJC_IVAR_$_TRIAssetDiffQueryGuardedData.error
|| __DATA.__objc_ivar _OBJC_IVAR_$_TRIAssetDiffQueryGuardedData.recordIdsForTargetAssetIds
|| __DATA.__objc_ivar _OBJC_IVAR_$_TRIAssetDiffQueryGuardedData.retryAfter
|| __DATA.__objc_ivar _OBJC_IVAR_$_TRICKOpCancelingGuardedData.cancelReceived
|| __DATA.__objc_ivar _OBJC_IVAR_$_TRICKOpCancelingGuardedData.opsInFlight
|| __DATA.__objc_ivar _OBJC_IVAR_$_TRICKQueryLogGuardedData.failed
|| __DATA.__objc_ivar _OBJC_IVAR_$_TRICKQueryLogGuardedData.fh
|| __DATA.__objc_ivar _OBJC_IVAR_$_TRICKQueryLogGuardedData.uniqueLines
|| __DATA.__objc_ivar _OBJC_IVAR_$_TRIExperimentBaseTaskGuardedData.dimensions
|| __DATA.__objc_ivar _OBJC_IVAR_$_TRIExperimentBaseTaskGuardedData.logAsRollout
|| __DATA.__objc_ivar _OBJC_IVAR_$_TRIExperimentBaseTaskGuardedData.metrics
|| __DATA.__objc_ivar _OBJC_IVAR_$_TRIExperimentBaseTaskGuardedData.trialSystemTelemetry
|| __DATA.__objc_ivar _OBJC_IVAR_$_TRIExperimentTaskSupportGuardedData.dimensions
|| __DATA.__objc_ivar _OBJC_IVAR_$_TRIExperimentTaskSupportGuardedData.logAsV1Rollout
|| __DATA.__objc_ivar _OBJC_IVAR_$_TRIExperimentTaskSupportGuardedData.metrics
|| __DATA.__objc_ivar _OBJC_IVAR_$_TRIExperimentTaskSupportGuardedData.trialSystemTelemetry
|| __DATA.__objc_ivar _OBJC_IVAR_$_TRIFetchOnDemandFactorsTaskGuardedData.downloadableFactorNames
|| __DATA.__objc_ivar _OBJC_IVAR_$_TRIFetchOnDemandFactorsTaskGuardedData.earliestRetryDate
|| __DATA.__objc_ivar _OBJC_IVAR_$_TRIFetchOnDemandFactorsTaskGuardedData.fetchError
|| __DATA.__objc_ivar _OBJC_IVAR_$_TRIFetchOnDemandFactorsTaskGuardedData.fetchOperations
|| __DATA.__objc_ivar _OBJC_IVAR_$_TRIFetchOnDemandFactorsTaskGuardedData.overallStatus
|| __DATA.__objc_ivar _OBJC_IVAR_$_TRIMaintenanceTaskGuardedData.dimensions
|| __DATA.__objc_ivar _OBJC_IVAR_$_TRIMaintenanceTaskGuardedData.metrics
|| __DATA.__objc_ivar _OBJC_IVAR_$_TRIMaintenanceTaskGuardedData.trialSystemTelemetry
|| __DATA.__objc_ivar _OBJC_IVAR_$_TRIRolloutTaskSupportGuardedData.dimensions
|| __DATA.__objc_ivar _OBJC_IVAR_$_TRIRolloutTaskSupportGuardedData.metrics
|| __DATA.__objc_ivar _OBJC_IVAR_$_TRIRolloutTaskSupportGuardedData.trialSystemTelemetry
|| __DATA.__objc_ivar _OBJC_IVAR_$_TRISelectRolloutNotificationGuardedData.dimensions
|| __DATA.__objc_ivar _OBJC_IVAR_$_TRISelectRolloutNotificationGuardedData.metrics
|| __DATA.__objc_ivar _OBJC_IVAR_$_TRITaskQueueGuardedData._finalizeBlocks
|| __DATA.__objc_ivar _OBJC_IVAR_$_TRITaskQueueGuardedData.currentCapabilities
|| __DATA.__objc_ivar _OBJC_IVAR_$_TRITaskQueueGuardedData.nextScheduledTaskStartTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_TRITaskQueueGuardedData.queuedTasks
|| __DATA.__objc_ivar _OBJC_IVAR_$_TRITaskQueueGuardedData.stopRequested
|| __DATA.__objc_ivar _OBJC_IVAR_$_TRITaskQueueGuardedData.taskQueueCompletionBlock
|| __DATA.__objc_ivar _OBJC_IVAR_$_TRITaskQueueGuardedData.taskStore
|| __DATA.__objc_ivar _OBJC_IVAR_$_TRITaskQueueGuardedData.xpcDescriptorToState
|| __DATA_CONST.__const _TRIDNotificationTokenKey
|| __DATA_CONST.__const _TRIDimensionName_ClientAppBundleId
|| __DATA_CONST.__const _TRIDimensionName_ClientAppShortVersionString
|| __DATA_CONST.__const _TRIMetricName_AllowsCellularDownload
|| __DATA_CONST.__const _TRIMetricName_BuddyDownloadLatency
|| __DATA_CONST.__const _TRIMetricName_BytesRead
|| __DATA_CONST.__const _TRIMetricName_ClientTreatmentInfo
|| __DATA_CONST.__const _TRIMetricName_CloudkitError
|| __DATA_CONST.__const _TRIMetricName_DirectoryTreeAssetDiffResult
|| __DATA_CONST.__const _TRIMetricName_DirectoryTreeAssetDiffSize
|| __DATA_CONST.__const _TRIMetricName_DirectoryTreeDeltaError
|| __DATA_CONST.__const _TRIMetricName_FactorPackAssetsPurged
|| __DATA_CONST.__const _TRIMetricName_FactorPackPromotion
|| __DATA_CONST.__const _TRIMetricName_FactorPackRejection
|| __DATA_CONST.__const _TRIMetricName_ImmediateDownloadLatency
|| __DATA_CONST.__const _TRIMetricName_OnDemandFactorDownloadedByRequest
|| __DATA_CONST.__const _TRIMetricName_OnDemandFactorDownloadedBySubscription
|| __DATA_CONST.__const _TRIMetricName_OnDemandFactorFailedToDownloadByRequest
|| __DATA_CONST.__const _TRIMetricName_OnDemandFactorFailedToDownloadBySubscription
|| __DATA_CONST.__const _TRIMetricName_OnDemandFactorSubscribed
|| __DATA_CONST.__const _TRIMetricName_OnDemandRequestedFactorFailedToDownloadWithoutAssetFetch
|| __DATA_CONST.__const _TRIMetricName_OnDemandSubscribedFactorFailedToDownloadWithoutAssetFetch
|| __DATA_CONST.__const _TRIMetricName_Retrycount
|| __DATA_CONST.__const _TRIMetricName_RolloutsRead
|| __DATA_CONST.__const _TRIMetricName_ServerError
|| __DATA_CONST.__const _TRIMetricName_TargetingError
|| __DATA_CONST.__const _TRIMetricName_TotalPurgedAssetSize
|| __DATA_CONST.__const _TRIMetricName_TriggerEvent
|| __DATA_CONST.__const _TRINamespaceFactorSubscriptionKey
|| __DATA_CONST.__const _TRISystemCovariate_DeviceLocale
|| __DATA_CONST.__const _TRISystemCovariate_LanguageCode
|| __DATA_CONST.__const _TRISystemCovariate_OSBuild
|| __DATA_CONST.__const _TRISystemCovariate_RegionCode
|| __DATA_CONST.__const _TRISystemFactor_AllowFetchTasks
|| __DATA_CONST.__const _TRISystemFactor_AllowTrialTelemetry
|| __DATA_CONST.__const _TRISystemFactor_CloudKitAssetDownloadTimeoutSeconds
|| __DATA_CONST.__const _TRISystemFactor_CloudKitCacheControlMaxAge
|| __DATA_CONST.__const _TRISystemFactor_CloudKitUseNativeAPI
|| __DATA_CONST.__const _TRISystemFactor_FetchExperimentsJitter
|| __DATA_CONST.__const _TRISystemFactor_FetchRollbacksInterval
|| __DATA_CONST.__const _TRISystemFactor_FetchRollbacksJitter
|| __DATA_CONST.__const _TRISystemFactor_LogUserKeyboardEnabledInputMode
|| __DATA_CONST.__const _TRISystemFactor_LogUserSettingsLanguageCode
|| __DATA_CONST.__const _TRISystemFactor_LogUserSettingsRegionCode
|| __DATA_CONST.__const _TRISystemFactor_TaskQueueScheduledTaskDefaultGracePeriod
|| __DATA_CONST.__const _TRISystemFactor_TelemetryLevel
|| __DATA_CONST.__const _TRISystemNamespaceName
|| __DATA_CONST.__const _gPostUpgradeInProgress
|| __DATA_CONST.__const _gPostUpgradeRequireInexpensiveNetworkingInProgress
|| __DATA_CONST.__const _gSetupAssistantFetchActivityDeadlineDate
|| __DATA_CONST.__const _kAFAssistantEnabledKey
|| __DATA_CONST.__const _kAFSessionLanguage
|| __DATA_CONST.__const _kAssistantBackedUpDomain
|| __DATA_CONST.__const _kAssistantSupportPreferenceDomain
|| __DATA_CONST.__const _kTRIFactorPackProtoFilename
|| __DATA_CONST.__const _kTRIUserDefaultsTaskQueueDeferralSequenceKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIActivateTargetedRolloutDeploymentPersistedTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIActivateTargetedRolloutDeploymentTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIActivateTreatmentBaseTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIActivateTreatmentPersistedTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIActivateTreatmentTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIActivationEventDatabase
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIAggregateFetchRecordsProgress
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIAggregateFetchRecordsProgressGuardedData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIAllocationStatusEntitlementSet
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIAssetDiffQueryGuardedData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIAssetMetadata
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIAssetMetadataReservedKeys
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIAssetPurger
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIAssetStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIBaseTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRICKNativeArtifactProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRICKOpCancelingGuardedData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRICKOperationGroupFactory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRICKQueryLog
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRICKQueryLogGuardedData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRICKRecordProgress
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRICacheDeleteCallbacks
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRICacheDeleteUtils
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRICancelableCKOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIClientExperimentArtifact
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIClientFactorPackUtils
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIClientRolloutArtifact
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIClientTreatmentArtifact
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIClientTreatmentStorage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIConfigurationTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIContentDescriptorUnion
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIContentTracker
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIContentTrackingId
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIDServer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIDatabase
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIDeactivateTreatmentPersistedTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIDeactivateTreatmentTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIDeferralNotifier
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIDeferredDeleter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIDiffableAssetBuilder
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIDisenrollRolloutTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIDynamicNamespaceRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIExperimentBaseTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIExperimentBaseTaskGuardedData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIExperimentDatabase
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIExperimentDeploymentRefStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIExperimentHistoryDatabase
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIExperimentRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIExperimentTaskSupport
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIExperimentTaskSupportGuardedData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIFactorPackAssetFetchPlan
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIFactorPackSet
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIFactorPackSetExternalReferenceStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIFactorPackSetStorage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIFactorPackStorage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIFetchDateManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIFetchExperimentNotificationsPersistedTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIFetchExperimentPersistedTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIFetchExperimentTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIFetchFactorPackSetPersistedTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIFetchFactorPackSetTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIFetchMultipleExperimentNotificationsTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIFetchOnDemandFactorsPersistedTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIFetchOnDemandFactorsPersistedTask_AssetIdFactorName
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIFetchOnDemandFactorsPersistedTask_FactorPackAssetIds
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIFetchOnDemandFactorsPersistedTask_TreatmentAssetIndexes
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIFetchOnDemandFactorsTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIFetchOnDemandFactorsTaskGuardedData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIFetchOptions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIFetchRolloutNotificationListTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIFetchSingleRolloutNotificationPersistedTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIFetchSingleRolloutNotificationTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIFetchTreatmentPersistedTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIFetchTreatmentTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIHotfixRolloutTargetingScheduler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIInternalServiceRequestHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIKVStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRILaunchDaemonActivityDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRILimitedCarryProfileManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRILogTreatmentProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIMLRuntimeEvaluationHistoryDatabase
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIMaintenancePersistedTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIMaintenanceTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIMakeDefaultTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIMemoryEfficientFileDigest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRINamespaceDatabase
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRINamespaceDescriptorProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRINamespaceDescriptorSetExternalRefStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRINamespaceDescriptorSetStorage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRINamespaceFactorSubscriptionSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRINamespaceResolverStorage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRINotificationReactionChecker
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIPeekEnumerator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIPersistedClientRolloutArtifact
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIPersistedExperimentArtifact
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIPersistedTaskAttribution
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIPersistedTreatment
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIPostUpgradeCleanupTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIPurgeableFactorPacksEnumerator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIPurgeableNamespacesProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIPushChannelId
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIPushNotificationHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIPushServiceConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIPushServiceConnectionCreator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIPushServiceConnectionMultiplexer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIRecurrentScheduleFetchRollbacksPersistedTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIRecurrentScheduleFetchRollbacksTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIReferenceManagedDir
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIRemoteAssetDecrypter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIRemoteAssetExtractor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIRemoteAssetPatcher
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIRetargetAllPersistedTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIRetargetAllTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIRolloutDatabase
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIRolloutDeploymentRefStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIRolloutRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIRolloutTargeter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIRolloutTargetingOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIRolloutTargetingPersistedTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIRolloutTargetingTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIRolloutTaskSupport
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIRolloutTaskSupportGuardedData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIRotateSubjectIdPersistedTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIRotateSubjectIdTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIRuleQualifiedFactorPackSetId
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIRunningXPCActivityDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRISQLiteCKDatabaseFailureInjectionDelegate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRISandboxExtensionFactory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIScheduleFetchExperimentNotificationsPersistedTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIScheduleFetchExperimentNotificationsTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRISelectRolloutNotificationGuardedData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRISelectRolloutNotificationListPersistedTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRISelectRolloutNotificationListTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRISequenceTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIServerContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRISetupAssistantFetchTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRISetupAssistantFetchUtils
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRISignatureKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRISignedAssetURL
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRISizedCKRecordID
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIStorageManagement
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRISystemCovariates
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRITargetingPersistedTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRITargetingTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRITaskAttributionInternalInsecure
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRITaskCapabilityUtilities
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRITaskDatabase
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRITaskQueue
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRITaskQueueGuardedData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRITaskQueueOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRITaskQueuingOptions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRITaskRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRITaskRunResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRITaskSupport
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRITaskUtils
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRITelemetryFactory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRITempDirScopeGuard
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRITreatmentAssetFetchPlan
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRITreatmentBaseTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRITreatmentQualifiedAssetIndex
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRITripersistedClientRolloutArtifactRoot
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRITripersistedExperimentArtifactRoot
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRITripersistedTasksRoot
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRITripersistedTreatmentRoot
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIUrgentRollbackScheduler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIUserCovariates
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIXPCActivityCriteria
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIXPCActivityManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIXPCActivityState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIXPCActivitySupport
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIXPCHandlerWrapper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIXPCInternalServiceListener
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIXPCInternalServiceWrapper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIXPCNamespaceManagementRequestHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIXPCNamespaceManagementServiceListener
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIXPCNamespaceManagementServiceWrapper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIXPCServerContextPromise
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIXPCServices
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIXPCStatusRequestHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIXPCStatusServiceListener
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TRIXPCStatusServiceWrapper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIActivateTargetedRolloutDeploymentPersistedTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIActivateTargetedRolloutDeploymentTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIActivateTreatmentBaseTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIActivateTreatmentPersistedTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIActivateTreatmentTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIActivationEventDatabase
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIAggregateFetchRecordsProgress
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIAggregateFetchRecordsProgressGuardedData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIAllocationStatusEntitlementSet
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIAssetDiffQueryGuardedData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIAssetMetadata
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIAssetMetadataReservedKeys
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIAssetPurger
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIAssetStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIBaseTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRICKNativeArtifactProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRICKOpCancelingGuardedData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRICKOperationGroupFactory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRICKQueryLog
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRICKQueryLogGuardedData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRICKRecordProgress
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRICacheDeleteCallbacks
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRICacheDeleteUtils
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRICancelableCKOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIClientExperimentArtifact
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIClientFactorPackUtils
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIClientRolloutArtifact
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIClientTreatmentArtifact
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIClientTreatmentStorage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIConfigurationTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIContentDescriptorUnion
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIContentTracker
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIContentTrackingId
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIDServer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIDatabase
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIDeactivateTreatmentPersistedTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIDeactivateTreatmentTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIDeferralNotifier
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIDeferredDeleter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIDiffableAssetBuilder
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIDisenrollRolloutTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIDynamicNamespaceRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIExperimentBaseTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIExperimentBaseTaskGuardedData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIExperimentDatabase
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIExperimentDeploymentRefStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIExperimentHistoryDatabase
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIExperimentRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIExperimentTaskSupport
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIExperimentTaskSupportGuardedData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIFactorPackAssetFetchPlan
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIFactorPackSet
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIFactorPackSetExternalReferenceStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIFactorPackSetStorage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIFactorPackStorage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIFetchDateManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIFetchExperimentNotificationsPersistedTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIFetchExperimentPersistedTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIFetchExperimentTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIFetchFactorPackSetPersistedTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIFetchFactorPackSetTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIFetchMultipleExperimentNotificationsTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIFetchOnDemandFactorsPersistedTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIFetchOnDemandFactorsPersistedTask_AssetIdFactorName
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIFetchOnDemandFactorsPersistedTask_FactorPackAssetIds
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIFetchOnDemandFactorsPersistedTask_TreatmentAssetIndexes
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIFetchOnDemandFactorsTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIFetchOnDemandFactorsTaskGuardedData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIFetchOptions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIFetchRolloutNotificationListTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIFetchSingleRolloutNotificationPersistedTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIFetchSingleRolloutNotificationTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIFetchTreatmentPersistedTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIFetchTreatmentTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIHotfixRolloutTargetingScheduler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIInternalServiceRequestHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIKVStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRILaunchDaemonActivityDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRILimitedCarryProfileManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRILogTreatmentProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIMLRuntimeEvaluationHistoryDatabase
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIMaintenancePersistedTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIMaintenanceTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIMakeDefaultTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIMemoryEfficientFileDigest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRINamespaceDatabase
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRINamespaceDescriptorProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRINamespaceDescriptorSetExternalRefStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRINamespaceDescriptorSetStorage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRINamespaceFactorSubscriptionSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRINamespaceResolverStorage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRINotificationReactionChecker
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIPeekEnumerator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIPersistedClientRolloutArtifact
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIPersistedExperimentArtifact
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIPersistedTaskAttribution
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIPersistedTreatment
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIPostUpgradeCleanupPersistedTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIPostUpgradeCleanupTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIPurgeableFactorPacksEnumerator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIPurgeableNamespacesProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIPushChannelId
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIPushNotificationHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIPushServiceConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIPushServiceConnectionCreator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIPushServiceConnectionMultiplexer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIRecurrentScheduleFetchRollbacksPersistedTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIRecurrentScheduleFetchRollbacksTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIReferenceManagedDir
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIRemoteAssetDecrypter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIRemoteAssetExtractor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIRemoteAssetPatcher
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIRetargetAllPersistedTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIRetargetAllTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIRolloutDatabase
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIRolloutDeploymentRefStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIRolloutRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIRolloutTargeter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIRolloutTargetingOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIRolloutTargetingPersistedTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIRolloutTargetingTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIRolloutTaskSupport
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIRolloutTaskSupportGuardedData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIRotateSubjectIdPersistedTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIRotateSubjectIdTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIRuleQualifiedFactorPackSetId
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIRunningXPCActivityDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRISQLiteCKDatabaseFailureInjectionDelegate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRISandboxExtensionFactory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIScheduleFetchExperimentNotificationsPersistedTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIScheduleFetchExperimentNotificationsTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRISelectRolloutNotificationGuardedData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRISelectRolloutNotificationListPersistedTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRISelectRolloutNotificationListTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRISequenceTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIServerContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRISetupAssistantFetchTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRISetupAssistantFetchUtils
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRISignatureKey
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRISignedAssetURL
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRISizedCKRecordID
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIStorageManagement
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRISystemCovariates
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRITargetingPersistedTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRITargetingTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRITaskAttributionInternalInsecure
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRITaskCapabilityUtilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRITaskDatabase
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRITaskQueue
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRITaskQueueGuardedData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRITaskQueueOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRITaskQueuingOptions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRITaskRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRITaskRunResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRITaskSupport
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRITaskUtils
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRITelemetryFactory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRITempDirScopeGuard
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRITreatmentAssetFetchPlan
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRITreatmentBaseTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRITreatmentQualifiedAssetIndex
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRITripersistedClientRolloutArtifactRoot
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRITripersistedExperimentArtifactRoot
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRITripersistedTasksRoot
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRITripersistedTreatmentRoot
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIUrgentRollbackScheduler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIUserCovariates
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIXPCActivityCriteria
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIXPCActivityManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIXPCActivityState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIXPCActivitySupport
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIXPCHandlerWrapper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIXPCInternalServiceListener
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIXPCInternalServiceWrapper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIXPCNamespaceManagementRequestHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIXPCNamespaceManagementServiceListener
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIXPCNamespaceManagementServiceWrapper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIXPCServerContextPromise
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIXPCServices
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIXPCStatusRequestHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIXPCStatusServiceListener
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TRIXPCStatusServiceWrapper
|| __TEXT.__const _TRITaskQueueScheduledTaskDefaultGracePeriod
|| __TEXT.__const _TrialServerVersionNumber
|| __TEXT.__const _TrialServerVersionString
|| __TEXT.__const _gSetupAssistantFetchActivityDefaultDeadlineInSeconds
|| __TEXT.__const _kTRIChannelCountHardLimit
|| __TEXT.__const _kTRIChannelCountSoftLimit
|| __TEXT.__const _kTRIMaxChannelIdSizeInBytes
|| __TEXT.__const _kTRISubjectIdMinLength
|| __TEXT.__const _postUpgradeDefaultRetrySeconds
|| __TEXT.__text _TRIAnyPersistedTask_Type_EnumDescriptor
|| __TEXT.__text _TRIAnyPersistedTask_Type_IsValidValue
|| __TEXT.__text _TRICKErrorParseToMetrics
|| __TEXT.__text _TRIDServerRun
|| __TEXT.__text _TRIDeactivateTreatmentPersistedTask_TriggerEvent_EnumDescriptor
|| __TEXT.__text _TRIDeactivateTreatmentPersistedTask_TriggerEvent_IsValidValue
|| __TEXT.__text _TRILogCategory_Archiving
|| __TEXT.__text _TRILogCategory_Backtrace
|| __TEXT.__text _TRILogCategory_Daemon
|| __TEXT.__text _TRILogCategory_InternalTool
|| __TEXT.__text _TRILogCategory_Server
|| __TEXT.__text _TRILogCategory_XCTest
|| __TEXT.__text _TRILoggedNamespaceName
|| __TEXT.__text _TRIRolloutTargetingPersistedTask_TriggerEvent_EnumDescriptor
|| __TEXT.__text _TRIRolloutTargetingPersistedTask_TriggerEvent_IsValidValue
__ ApplePushService: _APSEnvironmentProduction
__ ApplePushService: _OBJC_CLASS_$_APSConnection
__ CacheDelete: _CacheDeleteCopyPurgeableSpaceWithInfo
__ CacheDelete: _CacheDeletePurgeSpaceWithInfo
__ CacheDelete: _CacheDeleteRegisterInfoCallbacks
__ CloudKit: _CKCurrentUserDefaultName
__ CloudKit: _CKErrorDomain
__ CloudKit: _CKErrorRetryAfterKey
__ CloudKit: _CKPartialErrorsByItemIDKey
__ CloudKit: _CKQueryOperationMaximumResults
__ CloudKit: _CKRecordZoneDefaultName
__ CloudKit: _OBJC_CLASS_$_CKAsset
__ CloudKit: _OBJC_CLASS_$_CKContainer
__ CloudKit: _OBJC_CLASS_$_CKFetchRecordsOperation
__ CloudKit: _OBJC_CLASS_$_CKModifyRecordsOperation
__ CloudKit: _OBJC_CLASS_$_CKOperationConfiguration
__ CloudKit: _OBJC_CLASS_$_CKOperationGroup
__ CloudKit: _OBJC_CLASS_$_CKQuery
__ CloudKit: _OBJC_CLASS_$_CKQueryOperation
__ CloudKit: _OBJC_CLASS_$_CKRecord
__ CloudKit: _OBJC_CLASS_$_CKRecordID
__ CloudKit: _OBJC_CLASS_$_CKRecordZoneID
__ CoreFoundation: _CFNumberIsFloatType
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _NSDefaultRunLoopMode
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSMallocException
__ CoreFoundation: _NSURLFileSizeKey
__ CoreFoundation: _NSURLIsDirectoryKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMethodSignature
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreServices: _OBJC_CLASS_$_LSApplicationRecord
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSFileModificationDate
__ Foundation: _NSFilePosixPermissions
__ Foundation: _NSFileReferenceCount
__ Foundation: _NSFileSize
__ Foundation: _NSFileSystemFileNumber
__ Foundation: _NSFileSystemFreeSize
__ Foundation: _NSFileType
__ Foundation: _NSFileTypeDirectory
__ Foundation: _NSFileTypeRegular
__ Foundation: _NSFileTypeSymbolicLink
__ Foundation: _NSHomeDirectory
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromProtocol
__ Foundation: _NSStringFromSelector
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBlockOperation
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSComparisonPredicate
__ Foundation: _OBJC_CLASS_$_NSCompoundPredicate
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSExpression
__ Foundation: _OBJC_CLASS_$_NSFileHandle
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSISO8601DateFormatter
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSScanner
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_METACLASS_$_NSBlockOperation
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ ProactiveSupport: _OBJC_CLASS_$__PASDatabaseMigrator
__ ProactiveSupport: _OBJC_CLASS_$__PASDeviceInfo
__ ProactiveSupport: _OBJC_CLASS_$__PASDeviceState
__ ProactiveSupport: _OBJC_CLASS_$__PASDispatch
__ ProactiveSupport: _OBJC_CLASS_$__PASEntitlement
__ ProactiveSupport: _OBJC_CLASS_$__PASKVOHandler
__ ProactiveSupport: _OBJC_CLASS_$__PASLazyPlist
__ ProactiveSupport: _OBJC_CLASS_$__PASLock
__ ProactiveSupport: _OBJC_CLASS_$__PASSimpleCoalescingTimer
__ ProactiveSupport: _OBJC_CLASS_$__PASSqliteDatabase
__ ProactiveSupport: _OBJC_CLASS_$__PASSqliteDefaultErrorHandler
__ ProactiveSupport: _OBJC_CLASS_$__PASSqliteTransaction
__ ProactiveSupport: _OBJC_CLASS_$__PASXPCClientHelper
__ ProactiveSupport: _OBJC_CLASS_$__PASXPCServer
__ ProactiveSupport: _OBJC_CLASS_$__PASXPCServerHelper
__ ProactiveSupport: __PASDBTransactionCommit
__ ProactiveSupport: __PASDBTransactionRollback
__ ProactiveSupport: __PASMurmur3_x86_32
__ ProactiveSupport: __PASQMarksSeparatedByCommas
__ ProactiveSupport: __PASSqliteDatabaseKeepGoing
__ ProactiveSupport: __PASSqliteDatabaseStop
__ ProactiveSupport: _kPASDatabaseMigratorLatestVersion
__ PushKit: _OBJC_CLASS_$_PKPublicChannel
__ Security: _SecCertificateCopyCommonName
__ Security: _SecCertificateCopyKey
__ Security: _SecCertificateCreateWithData
__ Security: _SecCopyErrorMessageString
__ Security: _SecKeyCreateWithData
__ Security: _SecKeyIsAlgorithmSupported
__ Security: _SecKeyVerifySignature
__ Security: _SecPolicyCreateApplePinned
__ Security: _SecTrustCreateWithCertificates
__ Security: _SecTrustEvaluateWithError
__ Security: _kSecAttrKeyClass
__ Security: _kSecAttrKeyClassPublic
__ Security: _kSecAttrKeySizeInBits
__ Security: _kSecAttrKeyType
__ Security: _kSecAttrKeyTypeECSECPrimeRandom
__ Security: _kSecKeyAlgorithmECDSASignatureDigestX962SHA256
__ Security: _kSecKeyAlgorithmECDSASignatureMessageX962SHA256
__ Trial: _OBJC_CLASS_$_TRIAllocationStatus
__ Trial: _OBJC_CLASS_$_TRIAppContainer
__ Trial: _OBJC_CLASS_$_TRIAssetIdFactorName
__ Trial: _OBJC_CLASS_$_TRICKServerEnvironmentReader
__ Trial: _OBJC_CLASS_$_TRIClient
__ Trial: _OBJC_CLASS_$_TRIClientFactorPackStreamingParser
__ Trial: _OBJC_CLASS_$_TRIClientFactorPackStreamingWriter
__ Trial: _OBJC_CLASS_$_TRIClientNamespaceMetadata
__ Trial: _OBJC_CLASS_$_TRIClientNamespaceMetadataStorage
__ Trial: _OBJC_CLASS_$_TRIDefaultFactorProvider
__ Trial: _OBJC_CLASS_$_TRIDownloadNotification
__ Trial: _OBJC_CLASS_$_TRIDownloadOptions
__ Trial: _OBJC_CLASS_$_TRIEntitlement
__ Trial: _OBJC_CLASS_$_TRIEvaluationStatus
__ Trial: _OBJC_CLASS_$_TRIExperimentAllocationStatus
__ Trial: _OBJC_CLASS_$_TRIExperimentDeployment
__ Trial: _OBJC_CLASS_$_TRIExperimentFactorsState
__ Trial: _OBJC_CLASS_$_TRIExperimentHistoryRecord
__ Trial: _OBJC_CLASS_$_TRIFPNamespaceFactorProvider
__ Trial: _OBJC_CLASS_$_TRIFactorDownloadValidator
__ Trial: _OBJC_CLASS_$_TRIFactorProviderIdent
__ Trial: _OBJC_CLASS_$_TRIFileBackedMutableStringArray
__ Trial: _OBJC_CLASS_$_TRIFileLock
__ Trial: _OBJC_CLASS_$_TRILogTreatmentReader
__ Trial: _OBJC_CLASS_$_TRIMLRuntimeActiveEvaluationTuple
__ Trial: _OBJC_CLASS_$_TRIMLRuntimeEvaluationHistoryRecord
__ Trial: _OBJC_CLASS_$_TRIMisc
__ Trial: _OBJC_CLASS_$_TRINamespaceDescriptor
__ Trial: _OBJC_CLASS_$_TRINamespaceFactorProvider
__ Trial: _OBJC_CLASS_$_TRINamespaceFactorProviderChain
__ Trial: _OBJC_CLASS_$_TRINamespaceLogPolicy
__ Trial: _OBJC_CLASS_$_TRINamespaceOptionalParams
__ Trial: _OBJC_CLASS_$_TRINamespaceRecord
__ Trial: _OBJC_CLASS_$_TRINamespaceResolver
__ Trial: _OBJC_CLASS_$_TRINamespaceStatus
__ Trial: _OBJC_CLASS_$_TRINamespaceStatusProvider
__ Trial: _OBJC_CLASS_$_TRINamespaceUpdateNotification
__ Trial: _OBJC_CLASS_$_TRIPartialExperimentRecord
__ Trial: _OBJC_CLASS_$_TRIPartialRolloutRecord
__ Trial: _OBJC_CLASS_$_TRIPurgeabilityLevelMapper
__ Trial: _OBJC_CLASS_$_TRIReferenceManagedDirReaderLock
__ Trial: _OBJC_CLASS_$_TRIRolloutAllocationStatus
__ Trial: _OBJC_CLASS_$_TRIRolloutDeployment
__ Trial: _OBJC_CLASS_$_TRIRolloutFactorsState
__ Trial: _OBJC_CLASS_$_TRIStandardPaths
__ Trial: _OBJC_CLASS_$_TRIStopwatch
__ Trial: _OBJC_CLASS_$_TRISubjectProvider
__ Trial: _OBJC_CLASS_$_TRISubjectRotationNotification
__ Trial: _OBJC_CLASS_$_TRISystemConfiguration
__ Trial: _OBJC_CLASS_$_TRISystemInfo
__ Trial: _OBJC_CLASS_$_TRITreatmentInfo
__ Trial: _OBJC_CLASS_$_TRIVersion
__ Trial: _OBJC_CLASS_$_TRIVersionedNamespace
__ Trial: _OBJC_CLASS_$_TRIXPCUtils
__ Trial: _OBJC_METACLASS_$_TRILogTreatmentReader
__ Trial: _TRICloudKitContainerAppleDeveloperProgram
__ Trial: _TRICloudKitContainerIntegrationTesting
__ Trial: _TRICloudKitContainerSystemDefault
__ Trial: _TRICloudKitLastFetchExperimentDateKey
__ Trial: _TRICloudKitLastFetchRolloutDateKey
__ Trial: _TRICloudKitRecordAsset
__ Trial: _TRICloudKitRecordAssetDiff
__ Trial: _TRICloudKitRecordAssetDiff_Diff
__ Trial: _TRICloudKitRecordAssetDiff_DiffSignature
__ Trial: _TRICloudKitRecordAssetDiff_DiffSize
__ Trial: _TRICloudKitRecordAssetDiff_NewAssetId
__ Trial: _TRICloudKitRecordAssetDiff_OriginalAssetId
__ Trial: _TRICloudKitRecordAssetDiff_PublicCertificate
__ Trial: _TRICloudKitRecordAsset_Asset
__ Trial: _TRICloudKitRecordAsset_AssetId
__ Trial: _TRICloudKitRecordAsset_AssetSignature
__ Trial: _TRICloudKitRecordAsset_PublicCertificate
__ Trial: _TRICloudKitRecordExperimentNotification
__ Trial: _TRICloudKitRecordExperimentNotification_DeploymentDate
__ Trial: _TRICloudKitRecordExperimentNotification_DeploymentEnvironment
__ Trial: _TRICloudKitRecordExperimentNotification_DeploymentId
__ Trial: _TRICloudKitRecordExperimentNotification_DeploymentPopulation
__ Trial: _TRICloudKitRecordExperimentNotification_DeploymentPopulationList
__ Trial: _TRICloudKitRecordExperimentNotification_ExperimentDefinition
__ Trial: _TRICloudKitRecordExperimentNotification_ExperimentDefinitionSignature
__ Trial: _TRICloudKitRecordExperimentNotification_ExperimentId
__ Trial: _TRICloudKitRecordExperimentNotification_ExperimentPriority
__ Trial: _TRICloudKitRecordExperimentNotification_ExperimentState
__ Trial: _TRICloudKitRecordExperimentNotification_ExperimentType
__ Trial: _TRICloudKitRecordExperimentNotification_InternalBuildOnly
__ Trial: _TRICloudKitRecordExperimentNotification_NamespaceCompatibilityVersions
__ Trial: _TRICloudKitRecordExperimentNotification_NamespaceNames
__ Trial: _TRICloudKitRecordExperimentNotification_Namespaces
__ Trial: _TRICloudKitRecordExperimentNotification_PublicCertificate
__ Trial: _TRICloudKitRecordFactorPackSet
__ Trial: _TRICloudKitRecordFactorPackSet_FactorPackDefinitionSignatures
__ Trial: _TRICloudKitRecordFactorPackSet_FactorPackDefinitions
__ Trial: _TRICloudKitRecordFactorPackSet_FactorPackSetId
__ Trial: _TRICloudKitRecordFactorPackSet_PublicCertificate
__ Trial: _TRICloudKitRecordRolloutNotification
__ Trial: _TRICloudKitRecordRolloutNotification_DeploymentDate
__ Trial: _TRICloudKitRecordRolloutNotification_DeploymentId
__ Trial: _TRICloudKitRecordRolloutNotification_NamespaceNames
__ Trial: _TRICloudKitRecordRolloutNotification_Populations
__ Trial: _TRICloudKitRecordRolloutNotification_PublicCertificate
__ Trial: _TRICloudKitRecordRolloutNotification_RolloutDefinition
__ Trial: _TRICloudKitRecordRolloutNotification_RolloutDefinitionSignature
__ Trial: _TRICloudKitRecordRolloutNotification_RolloutId
__ Trial: _TRICloudKitRecordTreatment
__ Trial: _TRICloudKitRecordTreatment_AssetSignatures
__ Trial: _TRICloudKitRecordTreatment_Assets
__ Trial: _TRICloudKitRecordTreatment_PublicCertificate
__ Trial: _TRICloudKitRecordTreatment_TreatmentDefinition
__ Trial: _TRICloudKitRecordTreatment_TreatmentDefinitionSignature
__ Trial: _TRICloudKitRecordTreatment_TreatmentId
__ Trial: _TRICloudKitRecord_ModificationDate
__ Trial: _TRICloudKitServerEnvironmentKey
__ Trial: _TRILogCategory_ClientFramework
__ Trial: _TRIPurgeabilityLevel_IsValidValue
__ Trial: _TRIValidateAssetId
__ Trial: _TRIValidateFactorPackId
__ Trial: _TRIValidateFactorPackSetId
__ Trial: _TRIValidateRampId
__ Trial: _kTRIAllocationStatusEntitlement
__ Trial: _kTRIAllocationStatusNamespaceNameEntitlment
__ Trial: _kTRIBundleIdentifierTrialcontroller
__ Trial: _kTRIBundleIdentifierTrialtool
__ Trial: _kTRIDatavaultEntitlement
__ Trial: _kTRIEvaluationStatusEntitlement
__ Trial: _kTRITrialClientEntitlement
__ TrialProto: _OBJC_CLASS_$_TRIClientExperiment
__ TrialProto: _OBJC_CLASS_$_TRIClientFactorPack
__ TrialProto: _OBJC_CLASS_$_TRIClientRollout
__ TrialProto: _OBJC_CLASS_$_TRIClientTreatment
__ TrialProto: _OBJC_CLASS_$_TRIDenormalizedEvent
__ TrialProto: _OBJC_CLASS_$_TRIFactorLevel
__ TrialProto: _OBJC_CLASS_$_TRILogNamespace
__ TrialProto: _OBJC_CLASS_$_TRILogTreatment
__ TrialProto: _OBJC_CLASS_$_TRIMLRuntimeEvaluation
__ TrialProto: _OBJC_CLASS_$_TRIMetric
__ TrialProto: _OBJC_CLASS_$_TRINamespace
__ TrialProto: _OBJC_CLASS_$_TRIPBDescriptor
__ TrialProto: _OBJC_CLASS_$_TRIPBEnumDescriptor
__ TrialProto: _OBJC_CLASS_$_TRIPBFileDescriptor
__ TrialProto: _OBJC_CLASS_$_TRIPBMessage
__ TrialProto: _OBJC_CLASS_$_TRIPBRootObject
__ TrialProto: _OBJC_CLASS_$_TRIPBStringEnumDictionary
__ TrialProto: _OBJC_CLASS_$_TRIPBTimestamp
__ TrialProto: _OBJC_CLASS_$_TRIPBUInt32Array
__ TrialProto: _OBJC_CLASS_$_TRIProvisionalFactorpackMetadata
__ TrialProto: _OBJC_CLASS_$_TRIPushNotification
__ TrialProto: _OBJC_CLASS_$_TRITrialAssetPurgeFields
__ TrialProto: _OBJC_CLASS_$_TRITrialCloudKitContainerOriginFields
__ TrialProto: _OBJC_CLASS_$_TRITrialDownloadSettingsFields
__ TrialProto: _OBJC_CLASS_$_TRITrialDownloadStatusFields
__ TrialProto: _OBJC_CLASS_$_TRITrialRolloutFields
__ TrialProto: _OBJC_CLASS_$_TRITrialSystemTelemetry
__ TrialProto: _OBJC_CLASS_$_TRIUserDimension
__ TrialProto: _OBJC_METACLASS_$_TRIPBMessage
__ TrialProto: _OBJC_METACLASS_$_TRIPBRootObject
__ TrialProto: _TRICloudKitSupport_Container_EnumDescriptor
__ TrialProto: _TRICloudKitSupport_Container_IsValidValue
__ TrialProto: _TRICloudKitSupport_NotificationPriority_EnumDescriptor
__ TrialProto: _TRICloudKitSupport_NotificationPriority_IsValidValue
__ TrialProto: _TRICloudKitSupport_NotificationStatus_EnumDescriptor
__ TrialProto: _TRICloudKitSupport_NotificationStatus_IsValidValue
__ TrialProto: _TRICloudKitSupport_NotificationType_EnumDescriptor
__ TrialProto: _TRICloudKitSupport_NotificationType_IsValidValue
__ TrialProto: _TRIDeploymentEnvironment_EnumDescriptor
__ TrialProto: _TRIDeploymentEnvironment_IsValidValue
__ TrialProto: _TRINamespace_NamespaceId_EnumDescriptor
__ TrialProto: _TRIProject_ProjectId_EnumDescriptor
__ TrialProto: _TRIProject_ProjectId_IsValidValue
__ libParallelCompression.dylib: _ParallelCompressionAFSCGetMetadata
__ libParallelCompression.dylib: _ParallelCompressionEnterThreadErrorContext
__ libParallelCompression.dylib: _ParallelCompressionLeaveThreadErrorContext
__ libSystem.B.dylib: _APP_SANDBOX_READ
__ libSystem.B.dylib: _APP_SANDBOX_READ_WRITE
__ libSystem.B.dylib: _CC_SHA256
__ libSystem.B.dylib: _CC_SHA256_Final
__ libSystem.B.dylib: _CC_SHA256_Init
__ libSystem.B.dylib: _CC_SHA256_Update
__ libSystem.B.dylib: _SANDBOX_EXTENSION_DEFAULT
__ libSystem.B.dylib: _XPC_ACTIVITY_ALLOW_BATTERY
__ libSystem.B.dylib: _XPC_ACTIVITY_CHECK_IN
__ libSystem.B.dylib: _XPC_ACTIVITY_DELAY
__ libSystem.B.dylib: _XPC_ACTIVITY_GRACE_PERIOD
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL
__ libSystem.B.dylib: _XPC_ACTIVITY_NETWORK_DOWNLOAD_SIZE
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY_MAINTENANCE
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY_UTILITY
__ libSystem.B.dylib: _XPC_ACTIVITY_RANDOM_INITIAL_DELAY
__ libSystem.B.dylib: _XPC_ACTIVITY_REPEATING
__ libSystem.B.dylib: _XPC_ACTIVITY_REQUIRES_CLASS_C
__ libSystem.B.dylib: _XPC_ACTIVITY_REQUIRE_INEXPENSIVE_NETWORK_CONNECTIVITY
__ libSystem.B.dylib: _XPC_ACTIVITY_REQUIRE_NETWORK_CONNECTIVITY
__ libSystem.B.dylib: _XPC_ACTIVITY_USES_DATA_BUDGETING
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___snprintf_chk
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___strcpy_chk
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_signal
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __xpc_event_key_name
__ libSystem.B.dylib: _abort
__ libSystem.B.dylib: _arc4random_buf
__ libSystem.B.dylib: _arc4random_uniform
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _chmod
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _dirname_r
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_async
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_suspend
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _fcntl
__ libSystem.B.dylib: _flock
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _gmtime_r
__ libSystem.B.dylib: _link
__ libSystem.B.dylib: _localtime_r
__ libSystem.B.dylib: _mkdir
__ libSystem.B.dylib: _mkdtemp
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_post
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _open
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_transaction_create
__ libSystem.B.dylib: _os_variant_allows_internal_security_policies
__ libSystem.B.dylib: _os_variant_has_internal_diagnostics
__ libSystem.B.dylib: _qos_class_self
__ libSystem.B.dylib: _readlink
__ libSystem.B.dylib: _realpath$DARWIN_EXTSN
__ libSystem.B.dylib: _rename
__ libSystem.B.dylib: _rmdir
__ libSystem.B.dylib: _sandbox_extension_issue_file
__ libSystem.B.dylib: _signal
__ libSystem.B.dylib: _stat
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _strerror
__ libSystem.B.dylib: _strftime
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _symlink
__ libSystem.B.dylib: _unlink
__ libSystem.B.dylib: _xpc_activity_add_eligibility_changed_handler
__ libSystem.B.dylib: _xpc_activity_copy_criteria
__ libSystem.B.dylib: _xpc_activity_get_state
__ libSystem.B.dylib: _xpc_activity_register
__ libSystem.B.dylib: _xpc_activity_remove_eligibility_changed_handler
__ libSystem.B.dylib: _xpc_activity_set_criteria
__ libSystem.B.dylib: _xpc_activity_set_state
__ libSystem.B.dylib: _xpc_activity_should_defer
__ libSystem.B.dylib: _xpc_activity_unregister
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_get_count
__ libSystem.B.dylib: _xpc_dictionary_get_int64
__ libSystem.B.dylib: _xpc_dictionary_get_string
__ libSystem.B.dylib: _xpc_dictionary_set_bool
__ libSystem.B.dylib: _xpc_dictionary_set_int64
__ libSystem.B.dylib: _xpc_dictionary_set_string
__ libSystem.B.dylib: _xpc_set_event_stream_handler
__ libSystem.B.dylib: _xpc_transaction_exit_clean
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _class_getInstanceMethod
__ libobjc.A.dylib: _method_exchangeImplementations
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _protocol_getMethodDescription
__ libsqlite3.dylib: _sqlite3_changes
__ libsqlite3.dylib: _sqlite3_column_blob
__ libsqlite3.dylib: _sqlite3_column_bytes
__ libsqlite3.dylib: _sqlite3_column_count
__ libsqlite3.dylib: _sqlite3_column_name
__ libsqlite3.dylib: _sqlite3_column_type
__ libsqlite3.dylib: _sqlite3_last_insert_rowid
__ libsqlite3.dylib: _sqlite3_set_last_insert_rowid
TRIAssetPurger : NSObject <TRIAssetPurging>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TRIAssetPurger .cxx_destruct]
  -[TRIAssetPurger _enumerateRolloutFactorPackPurgeCandidatesForPurgeabilityLevel:block:]
  -[TRIAssetPurger _logPurgedAssetsFromFactorPackWithId:namespaceName:purgeabilityLevel:]
  -[TRIAssetPurger purgeableAssetSizeForPurgeabilityLevel:]
  -[TRIAssetPurger purgeAssetsForPurgeabilityLevel:requestedPurgeAmount:]
  -[TRIAssetPurger initWithPaths:assetStore:purgeableNamespacesProvider:purgeableFactorPacksEnumerator:loggingClient:]


TRIDynamicNamespaceRecord : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *name
 @property  NSString *teamId
 @property  TRIAppContainer *appContainer
 @property  int cloudKitContainer
 @property  unsigned int compatibilityVersion
 @property  NSURL *defaultsFileURL
 @property  BOOL hasFetched

  // class methods
  +[TRIDynamicNamespaceRecord load]
  +[TRIDynamicNamespaceRecord supportsSecureCoding]
  +[TRIDynamicNamespaceRecord dynamicNamespaceRecordWithName:teamId:appContainer:cloudKitContainer:compatibilityVersion:defaultsFileURL:hasFetched:]

  // instance methods
  -[TRIDynamicNamespaceRecord copyWithReplacementName:]
  -[TRIDynamicNamespaceRecord name]
  -[TRIDynamicNamespaceRecord teamId]
  -[TRIDynamicNamespaceRecord initWithCoder:]
  -[TRIDynamicNamespaceRecord _swizzledEncodeWithCoder:]
  -[TRIDynamicNamespaceRecord .cxx_destruct]
  -[TRIDynamicNamespaceRecord compatibilityVersion]
  -[TRIDynamicNamespaceRecord init]
  -[TRIDynamicNamespaceRecord isEqual:]
  -[TRIDynamicNamespaceRecord copyWithReplacementCompatibilityVersion:]
  -[TRIDynamicNamespaceRecord cloudKitContainer]
  -[TRIDynamicNamespaceRecord appContainer]
  -[TRIDynamicNamespaceRecord copyWithZone:]
  -[TRIDynamicNamespaceRecord encodeWithCoder:]
  -[TRIDynamicNamespaceRecord initWithName:teamId:appContainer:cloudKitContainer:compatibilityVersion:defaultsFileURL:hasFetched:]
  -[TRIDynamicNamespaceRecord defaultsFileURL]
  -[TRIDynamicNamespaceRecord hasFetched]
  -[TRIDynamicNamespaceRecord isEqualToDynamicNamespaceRecord:]
  -[TRIDynamicNamespaceRecord copyWithReplacementTeamId:]
  -[TRIDynamicNamespaceRecord copyWithReplacementAppContainer:]
  -[TRIDynamicNamespaceRecord copyWithReplacementCloudKitContainer:]
  -[TRIDynamicNamespaceRecord copyWithReplacementDefaultsFileURL:]
  -[TRIDynamicNamespaceRecord copyWithReplacementHasFetched:]


TRITaskRecord : NSObject <NSCopying, NSSecureCoding>
 @property  NSNumber *taskId
 @property  <TRITask> *task
 @property  NSDate *startDate
 @property  NSArray *dependencies
 @property  NSArray *tags

  // class methods
  +[TRITaskRecord load]
  +[TRITaskRecord supportsSecureCoding]
  +[TRITaskRecord taskRecordWithTaskId:task:startDate:dependencies:tags:]

  // instance methods
  -[TRITaskRecord initWithCoder:]
  -[TRITaskRecord _swizzledEncodeWithCoder:]
  -[TRITaskRecord taskId]
  -[TRITaskRecord copyWithReplacementTags:]
  -[TRITaskRecord .cxx_destruct]
  -[TRITaskRecord dependencies]
  -[TRITaskRecord copyWithReplacementStartDate:]
  -[TRITaskRecord init]
  -[TRITaskRecord isEqual:]
  -[TRITaskRecord initWithTaskId:task:startDate:dependencies:tags:]
  -[TRITaskRecord task]
  -[TRITaskRecord copyWithReplacementTaskId:]
  -[TRITaskRecord startDate]
  -[TRITaskRecord copyWithReplacementTask:]
  -[TRITaskRecord copyWithZone:]
  -[TRITaskRecord isEqualToTaskRecord:]
  -[TRITaskRecord copyWithReplacementDependencies:]
  -[TRITaskRecord encodeWithCoder:]
  -[TRITaskRecord tags]


TRITaskQueuingOptions : NSObject <NSCopying, NSSecureCoding>
 @property  unsigned long duplicateTaskResolution

  // class methods
  +[TRITaskQueuingOptions load]
  +[TRITaskQueuingOptions supportsSecureCoding]
  +[TRITaskQueuingOptions defaultOptionsWithIgnoreDuplicates]
  +[TRITaskQueuingOptions optionsWithDuplicateTaskResolution:]

  // instance methods
  -[TRITaskQueuingOptions duplicateTaskResolution]
  -[TRITaskQueuingOptions isEqualToOptions:]
  -[TRITaskQueuingOptions initWithCoder:]
  -[TRITaskQueuingOptions _swizzledEncodeWithCoder:]
  -[TRITaskQueuingOptions init]
  -[TRITaskQueuingOptions isEqual:]
  -[TRITaskQueuingOptions copyWithReplacementDuplicateTaskResolution:]
  -[TRITaskQueuingOptions initWithDuplicateTaskResolution:]
  -[TRITaskQueuingOptions copyWithZone:]
  -[TRITaskQueuingOptions encodeWithCoder:]


TRITaskRunResult : NSObject <NSCopying>
 @property  int runStatus
 @property  BOOL reportResultToServer
 @property  NSArray *nextTasks
 @property  NSDate *earliestRetryDate

  // class methods
  +[TRITaskRunResult resultWithRunStatus:reportResultToServer:nextTasks:earliestRetryDate:]

  // instance methods
  -[TRITaskRunResult copyWithReplacementReportResultToServer:]
  -[TRITaskRunResult copyWithReplacementRunStatus:]
  -[TRITaskRunResult .cxx_destruct]
  -[TRITaskRunResult reportResultToServer]
  -[TRITaskRunResult earliestRetryDate]
  -[TRITaskRunResult copyWithReplacementEarliestRetryDate:]
  -[TRITaskRunResult init]
  -[TRITaskRunResult copyWithReplacementNextTasks:]
  -[TRITaskRunResult isEqual:]
  -[TRITaskRunResult runStatus]
  -[TRITaskRunResult isEqualToResult:]
  -[TRITaskRunResult copyWithZone:]
  -[TRITaskRunResult initWithRunStatus:reportResultToServer:nextTasks:earliestRetryDate:]
  -[TRITaskRunResult nextTasks]


TRIXPCActivityState : NSObject <NSCopying>
 @property  unsigned long futureCompletionStatus
 @property  unsigned long capabilities

  // class methods
  +[TRIXPCActivityState xPCActivityStateWithFutureCompletionStatus:capabilities:]

  // instance methods
  -[TRIXPCActivityState copyWithReplacementCapabilities:]
  -[TRIXPCActivityState capabilities]
  -[TRIXPCActivityState isEqualToXPCActivityState:]
  -[TRIXPCActivityState init]
  -[TRIXPCActivityState isEqual:]
  -[TRIXPCActivityState copyWithReplacementFutureCompletionStatus:]
  -[TRIXPCActivityState initWithFutureCompletionStatus:capabilities:]
  -[TRIXPCActivityState copyWithZone:]
  -[TRIXPCActivityState futureCompletionStatus]


TRITaskAttributionInternalInsecure : NSObject <TRITaskAttributing, NSCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *teamIdentifier
 @property  int triCloudKitContainer
 @property  NSString *applicationBundleIdentifier
 @property  TRIDownloadOptions *networkOptions

  // class methods
  +[TRITaskAttributionInternalInsecure taskAttributionFromPersistedTask:]
  +[TRITaskAttributionInternalInsecure taskAttributionWithTeamIdentifier:triCloudKitContainer:applicationBundleIdentifier:networkOptions:]
  +[TRITaskAttributionInternalInsecure taskAttributionFirstPartyWithNetworkOptions:]

  // instance methods
  -[TRITaskAttributionInternalInsecure applicationBundleIdentifier]
  -[TRITaskAttributionInternalInsecure .cxx_destruct]
  -[TRITaskAttributionInternalInsecure initWithTeamIdentifier:triCloudKitContainer:applicationBundleIdentifier:networkOptions:]
  -[TRITaskAttributionInternalInsecure copyWithReplacementApplicationBundleIdentifier:]
  -[TRITaskAttributionInternalInsecure init]
  -[TRITaskAttributionInternalInsecure asPersistedTaskAttribution]
  -[TRITaskAttributionInternalInsecure isEqual:]
  -[TRITaskAttributionInternalInsecure teamIdentifier]
  -[TRITaskAttributionInternalInsecure triCloudKitContainer]
  -[TRITaskAttributionInternalInsecure copyWithReplacementTeamIdentifier:]
  -[TRITaskAttributionInternalInsecure copyWithReplacementNetworkOptions:]
  -[TRITaskAttributionInternalInsecure copyWithReplacementTriCloudKitContainer:]
  -[TRITaskAttributionInternalInsecure isEqualToTaskAttribution:]
  -[TRITaskAttributionInternalInsecure copyWithZone:]
  -[TRITaskAttributionInternalInsecure networkOptions]


TRISignedAssetURL : NSObject <NSCopying>
 @property  NSURL *url
 @property  NSString *signature

  // class methods
  +[TRISignedAssetURL allReferencedCKRecordKeys]
  +[TRISignedAssetURL assetURLWithUrl:signature:]
  +[TRISignedAssetURL assetURLFromCKRecord:assetId:]

  // instance methods
  -[TRISignedAssetURL url]
  -[TRISignedAssetURL .cxx_destruct]
  -[TRISignedAssetURL init]
  -[TRISignedAssetURL isEqual:]
  -[TRISignedAssetURL signature]
  -[TRISignedAssetURL copyWithZone:]
  -[TRISignedAssetURL initWithUrl:signature:]
  -[TRISignedAssetURL isEqualToAssetURL:]
  -[TRISignedAssetURL copyWithReplacementUrl:]
  -[TRISignedAssetURL copyWithReplacementSignature:]


TRILaunchDaemonActivityDescriptor : NSObject <NSCopying>
 @property  NSString *name
 @property  unsigned long supportedTaskCapabilities

  // class methods
  +[TRILaunchDaemonActivityDescriptor clientTriggeredCellularDescriptor]
  +[TRILaunchDaemonActivityDescriptor launchDaemonActivityDescriptorWithName:supportedTaskCapabilities:]
  +[TRILaunchDaemonActivityDescriptor clientHotfixWifiDescriptor]
  +[TRILaunchDaemonActivityDescriptor cellularDescriptor]
  +[TRILaunchDaemonActivityDescriptor taskQueueDescriptor]
  +[TRILaunchDaemonActivityDescriptor recurrentRollbackDescriptor]
  +[TRILaunchDaemonActivityDescriptor clientTriggeredWifiDescriptor]
  +[TRILaunchDaemonActivityDescriptor clientHotfixCellularAllowBatteryDescriptor]
  +[TRILaunchDaemonActivityDescriptor inexpensiveNetworkingDescriptor]
  +[TRILaunchDaemonActivityDescriptor postUpgradeDescriptor]
  +[TRILaunchDaemonActivityDescriptor setupAssistantFetchDescriptor]
  +[TRILaunchDaemonActivityDescriptor postUpgradeDescriptorRequireInexpensiveNetworking]
  +[TRILaunchDaemonActivityDescriptor retryFailuresDescriptor]

  // instance methods
  -[TRILaunchDaemonActivityDescriptor copyWithReplacementName:]
  -[TRILaunchDaemonActivityDescriptor name]
  -[TRILaunchDaemonActivityDescriptor copyWithReplacementSupportedTaskCapabilities:]
  -[TRILaunchDaemonActivityDescriptor initWithName:supportedTaskCapabilities:]
  -[TRILaunchDaemonActivityDescriptor .cxx_destruct]
  -[TRILaunchDaemonActivityDescriptor supportedTaskCapabilities]
  -[TRILaunchDaemonActivityDescriptor init]
  -[TRILaunchDaemonActivityDescriptor isEqual:]
  -[TRILaunchDaemonActivityDescriptor isEqualToLaunchDaemonActivityDescriptor:]
  -[TRILaunchDaemonActivityDescriptor copyWithZone:]


TRIClientTreatmentArtifact : NSObject <NSCopying>
 @property  NSData *encodedTreatmentDefinition
 @property  NSString *encodedTreatmentDefinitionSignature
 @property  NSData *publicCertificate

  // class methods
  +[TRIClientTreatmentArtifact artifactWithEncodedTreatmentDefinition:encodedTreatmentDefinitionSignature:publicCertificate:]

  // instance methods
  -[TRIClientTreatmentArtifact .cxx_destruct]
  -[TRIClientTreatmentArtifact isEqualToArtifact:]
  -[TRIClientTreatmentArtifact init]
  -[TRIClientTreatmentArtifact isEqual:]
  -[TRIClientTreatmentArtifact publicCertificate]
  -[TRIClientTreatmentArtifact copyWithZone:]
  -[TRIClientTreatmentArtifact initWithEncodedTreatmentDefinition:encodedTreatmentDefinitionSignature:publicCertificate:]
  -[TRIClientTreatmentArtifact encodedTreatmentDefinition]
  -[TRIClientTreatmentArtifact encodedTreatmentDefinitionSignature]
  -[TRIClientTreatmentArtifact copyWithReplacementEncodedTreatmentDefinition:]
  -[TRIClientTreatmentArtifact copyWithReplacementEncodedTreatmentDefinitionSignature:]
  -[TRIClientTreatmentArtifact copyWithReplacementPublicCertificate:]
  -[TRIClientTreatmentArtifact isValidWithTreatmentId:]


TRIContentTrackingId : NSObject <NSCopying>
 @property  NSString *str

  // class methods
  +[TRIContentTrackingId contentIdWithStr:]

  // instance methods
  -[TRIContentTrackingId .cxx_destruct]
  -[TRIContentTrackingId isEqualToContentId:]
  -[TRIContentTrackingId str]
  -[TRIContentTrackingId init]
  -[TRIContentTrackingId isEqual:]
  -[TRIContentTrackingId copyWithReplacementStr:]
  -[TRIContentTrackingId initWithStr:]
  -[TRIContentTrackingId copyWithZone:]


TRIActivationEventRecord : NSObject <NSCopying>
 @property  NSString *parentId
 @property  NSString *factorPackSetId
 @property  int deploymentId
 @property  NSString *osBuild
 @property  NSString *languageCode
 @property  NSString *regionCode

  // class methods
  +[TRIActivationEventRecord recordWithParentId:factorPackSetId:deploymentId:osBuild:languageCode:regionCode:]

  // instance methods
  -[TRIActivationEventRecord isEqualToRecord:]
  -[TRIActivationEventRecord copyWithReplacementDeploymentId:]
  -[TRIActivationEventRecord regionCode]
  -[TRIActivationEventRecord deploymentId]
  -[TRIActivationEventRecord osBuild]
  -[TRIActivationEventRecord copyWithReplacementOsBuild:]
  -[TRIActivationEventRecord .cxx_destruct]
  -[TRIActivationEventRecord languageCode]
  -[TRIActivationEventRecord init]
  -[TRIActivationEventRecord isEqual:]
  -[TRIActivationEventRecord copyWithReplacementLanguageCode:]
  -[TRIActivationEventRecord factorPackSetId]
  -[TRIActivationEventRecord copyWithReplacementParentId:]
  -[TRIActivationEventRecord initWithParentId:factorPackSetId:deploymentId:osBuild:languageCode:regionCode:]
  -[TRIActivationEventRecord parentId]
  -[TRIActivationEventRecord copyWithZone:]
  -[TRIActivationEventRecord copyWithReplacementRegionCode:]
  -[TRIActivationEventRecord copyWithReplacementFactorPackSetId:]


TRIFactorPackSet : NSObject <NSCopying>
 @property  NSString<TRIFactorPackSetId> *ident
 @property  NSArray *packs

  // class methods
  +[TRIFactorPackSet artifactFromCKRecord:]
  +[TRIFactorPackSet allReferencedCKRecordKeys]
  +[TRIFactorPackSet setWithIdent:packs:]
  +[TRIFactorPackSet _signatures:onItems:areValidUsingPublicCertificate:]

  // instance methods
  -[TRIFactorPackSet isEqualToSet:]
  -[TRIFactorPackSet isStructurallyValid]
  -[TRIFactorPackSet .cxx_destruct]
  -[TRIFactorPackSet init]
  -[TRIFactorPackSet isEqual:]
  -[TRIFactorPackSet ident]
  -[TRIFactorPackSet initWithIdent:packs:]
  -[TRIFactorPackSet packs]
  -[TRIFactorPackSet copyWithReplacementPacks:]
  -[TRIFactorPackSet copyWithReplacementIdent:]
  -[TRIFactorPackSet copyWithZone:]


TRIParsedFactorPackSet : NSObject <NSCopying>
 @property  NSString<TRIFactorPackSetId> *ident
 @property  NSArray *packs

  // class methods
  +[TRIParsedFactorPackSet setWithIdent:packs:]

  // instance methods
  -[TRIParsedFactorPackSet isEqualToSet:]
  -[TRIParsedFactorPackSet .cxx_destruct]
  -[TRIParsedFactorPackSet init]
  -[TRIParsedFactorPackSet isEqual:]
  -[TRIParsedFactorPackSet ident]
  -[TRIParsedFactorPackSet initWithIdent:packs:]
  -[TRIParsedFactorPackSet packs]
  -[TRIParsedFactorPackSet copyWithReplacementPacks:]
  -[TRIParsedFactorPackSet copyWithReplacementIdent:]
  -[TRIParsedFactorPackSet copyWithZone:]


TRIClientRolloutArtifact : NSObject <NSCopying, NSSecureCoding>
 @property  TRIRolloutDeployment *deployment
 @property  NSArray *namespaceNames
 @property  TRIClientRollout *rollout
 @property  NSArray *populations
 @property  NSDate *deploymentDate
 @property  unsigned long downloadSize

  // class methods
  +[TRIClientRolloutArtifact load]
  +[TRIClientRolloutArtifact supportsSecureCoding]
  +[TRIClientRolloutArtifact _signature:onData:isValidUsingPublicCertificate:]
  +[TRIClientRolloutArtifact allReferencedCKRecordKeys]
  +[TRIClientRolloutArtifact _isStructurallyValidWithRollout:deployment:namespaceNames:populations:deploymentDate:]
  +[TRIClientRolloutArtifact artifactWithRollout:populations:deploymentDate:downloadSize:]
  +[TRIClientRolloutArtifact artifactWithTransientData:]
  +[TRIClientRolloutArtifact artifactFromCKRecord:namespaceDescriptorProvider:error:]

  // instance methods
  -[TRIClientRolloutArtifact deploymentDate]
  -[TRIClientRolloutArtifact namespaceNames]
  -[TRIClientRolloutArtifact initWithCoder:]
  -[TRIClientRolloutArtifact deployment]
  -[TRIClientRolloutArtifact _swizzledEncodeWithCoder:]
  -[TRIClientRolloutArtifact .cxx_destruct]
  -[TRIClientRolloutArtifact isEqualToArtifact:]
  -[TRIClientRolloutArtifact data]
  -[TRIClientRolloutArtifact init]
  -[TRIClientRolloutArtifact isEqual:]
  -[TRIClientRolloutArtifact initWithRollout:populations:deploymentDate:downloadSize:]
  -[TRIClientRolloutArtifact copyWithReplacementRollout:]
  -[TRIClientRolloutArtifact downloadSize]
  -[TRIClientRolloutArtifact copyWithReplacementDownloadSize:]
  -[TRIClientRolloutArtifact copyWithReplacementDeploymentDate:]
  -[TRIClientRolloutArtifact rollout]
  -[TRIClientRolloutArtifact copyWithZone:]
  -[TRIClientRolloutArtifact copyWithReplacementPopulations:]
  -[TRIClientRolloutArtifact encodeWithCoder:]
  -[TRIClientRolloutArtifact populations]


TRIRolloutRecord : NSObject <NSCopying>
 @property  TRIRolloutDeployment *deployment
 @property  NSString<TRIRampId> *rampId
 @property  NSString<TRIFactorPackSetId> *activeFactorPackSetId
 @property  NSNumber *activeTargetingRuleIndex
 @property  NSString<TRIFactorPackSetId> *targetedFactorPackSetId
 @property  NSNumber *targetedTargetingRuleIndex
 @property  long long status
 @property  NSArray *namespaces
 @property  BOOL isShadow
 @property  TRIClientRolloutArtifact *artifact

  // class methods
  +[TRIRolloutRecord recordWithDeployment:rampId:activeFactorPackSetId:activeTargetingRuleIndex:targetedFactorPackSetId:targetedTargetingRuleIndex:status:namespaces:isShadow:artifact:]

  // instance methods
  -[TRIRolloutRecord copyWithReplacementActiveTargetingRuleIndex:]
  -[TRIRolloutRecord rampId]
  -[TRIRolloutRecord isEqualToRecord:]
  -[TRIRolloutRecord copyWithReplacementTargetedTargetingRuleIndex:]
  -[TRIRolloutRecord artifact]
  -[TRIRolloutRecord copyWithReplacementRampId:]
  -[TRIRolloutRecord targetedTargetingRuleIndex]
  -[TRIRolloutRecord activeFactorPackSetId]
  -[TRIRolloutRecord targetedFactorPackSetId]
  -[TRIRolloutRecord namespaces]
  -[TRIRolloutRecord copyWithReplacementIsShadow:]
  -[TRIRolloutRecord copyWithReplacementTargetedFactorPackSetId:]
  -[TRIRolloutRecord activeTargetingRuleIndex]
  -[TRIRolloutRecord copyWithReplacementDeployment:]
  -[TRIRolloutRecord copyWithReplacementNamespaces:]
  -[TRIRolloutRecord isShadow]
  -[TRIRolloutRecord copyWithReplacementStatus:]
  -[TRIRolloutRecord deployment]
  -[TRIRolloutRecord .cxx_destruct]
  -[TRIRolloutRecord copyWithReplacementActiveFactorPackSetId:]
  -[TRIRolloutRecord init]
  -[TRIRolloutRecord isEqual:]
  -[TRIRolloutRecord copyWithReplacementArtifact:]
  -[TRIRolloutRecord status]
  -[TRIRolloutRecord copyWithZone:]
  -[TRIRolloutRecord initWithDeployment:rampId:activeFactorPackSetId:activeTargetingRuleIndex:targetedFactorPackSetId:targetedTargetingRuleIndex:status:namespaces:isShadow:artifact:]


TRITreatmentContentDescriptor : NSObject <NSCopying>
 @property  NSString *treatmentId
 @property  TRIAppContainer *container

  // class methods
  +[TRITreatmentContentDescriptor descriptorWithTreatmentId:container:]

  // instance methods
  -[TRITreatmentContentDescriptor isEqualToDescriptor:]
  -[TRITreatmentContentDescriptor container]
  -[TRITreatmentContentDescriptor initWithTreatmentId:container:]
  -[TRITreatmentContentDescriptor .cxx_destruct]
  -[TRITreatmentContentDescriptor treatmentId]
  -[TRITreatmentContentDescriptor init]
  -[TRITreatmentContentDescriptor isEqual:]
  -[TRITreatmentContentDescriptor copyWithReplacementContainer:]
  -[TRITreatmentContentDescriptor copyWithZone:]
  -[TRITreatmentContentDescriptor copyWithReplacementTreatmentId:]


TRIContentDescriptorUnion : NSObject <NSCopying>
 @property  unsigned char type
 @property  TRIExperimentDeployment *experiment
 @property  TRITreatmentContentDescriptor *treatment
 @property  TRIRolloutDeployment *rollout
 @property  NSString<TRIFactorPackSetId> *factorPackSet

  // class methods
  +[TRIContentDescriptorUnion unionWithType:experiment:treatment:rollout:factorPackSet:]

  // instance methods
  -[TRIContentDescriptorUnion copyWithReplacementFactorPackSet:]
  -[TRIContentDescriptorUnion copyWithReplacementType:]
  -[TRIContentDescriptorUnion treatment]
  -[TRIContentDescriptorUnion copyWithReplacementTreatment:]
  -[TRIContentDescriptorUnion .cxx_destruct]
  -[TRIContentDescriptorUnion experiment]
  -[TRIContentDescriptorUnion init]
  -[TRIContentDescriptorUnion factorPackSet]
  -[TRIContentDescriptorUnion isEqual:]
  -[TRIContentDescriptorUnion copyWithReplacementRollout:]
  -[TRIContentDescriptorUnion type]
  -[TRIContentDescriptorUnion initWithType:experiment:treatment:rollout:factorPackSet:]
  -[TRIContentDescriptorUnion rollout]
  -[TRIContentDescriptorUnion copyWithZone:]
  -[TRIContentDescriptorUnion isEqualToUnion:]
  -[TRIContentDescriptorUnion copyWithReplacementExperiment:]


TRIAssetDiffArtifact : NSObject <NSCopying>
 @property  NSString<TRIAssetId> *sourceAssetId
 @property  NSString<TRIAssetId> *destAssetId
 @property  NSString *diffSignature
 @property  NSURL *diff
 @property  long long diffSize
 @property  NSData *publicCertificate

  // class methods
  +[TRIAssetDiffArtifact artifactFromCKRecord:]
  +[TRIAssetDiffArtifact allReferencedCKRecordKeys]
  +[TRIAssetDiffArtifact artifactWithSourceAssetId:destAssetId:diffSignature:diff:diffSize:publicCertificate:]
  +[TRIAssetDiffArtifact _signature:onFileURL:fromCloudKitRecordId:isValidUsingPublicCertificate:]

  // instance methods
  -[TRIAssetDiffArtifact diff]
  -[TRIAssetDiffArtifact .cxx_destruct]
  -[TRIAssetDiffArtifact isEqualToArtifact:]
  -[TRIAssetDiffArtifact init]
  -[TRIAssetDiffArtifact isEqual:]
  -[TRIAssetDiffArtifact publicCertificate]
  -[TRIAssetDiffArtifact copyWithZone:]
  -[TRIAssetDiffArtifact copyWithReplacementPublicCertificate:]
  -[TRIAssetDiffArtifact initWithSourceAssetId:destAssetId:diffSignature:diff:diffSize:publicCertificate:]
  -[TRIAssetDiffArtifact sourceAssetId]
  -[TRIAssetDiffArtifact destAssetId]
  -[TRIAssetDiffArtifact diffSignature]
  -[TRIAssetDiffArtifact diffSize]
  -[TRIAssetDiffArtifact copyWithReplacementSourceAssetId:]
  -[TRIAssetDiffArtifact copyWithReplacementDestAssetId:]
  -[TRIAssetDiffArtifact copyWithReplacementDiffSignature:]
  -[TRIAssetDiffArtifact copyWithReplacementDiff:]
  -[TRIAssetDiffArtifact copyWithReplacementDiffSize:]


TRISizedCKRecordID : NSObject <NSCopying>
 @property  CKRecordID *recordId
 @property  unsigned long downloadSize

  // class methods
  +[TRISizedCKRecordID recordIDWithRecordId:downloadSize:]

  // instance methods
  -[TRISizedCKRecordID recordId]
  -[TRISizedCKRecordID .cxx_destruct]
  -[TRISizedCKRecordID init]
  -[TRISizedCKRecordID isEqual:]
  -[TRISizedCKRecordID downloadSize]
  -[TRISizedCKRecordID copyWithReplacementDownloadSize:]
  -[TRISizedCKRecordID copyWithZone:]
  -[TRISizedCKRecordID initWithRecordId:downloadSize:]
  -[TRISizedCKRecordID isEqualToRecordID:]
  -[TRISizedCKRecordID copyWithReplacementRecordId:]


TRIAssetIdURL : NSObject <NSCopying>
 @property  NSString<TRIAssetId> *assetId
 @property  NSURL *url

  // class methods
  +[TRIAssetIdURL urlWithAssetId:url:]

  // instance methods
  -[TRIAssetIdURL assetId]
  -[TRIAssetIdURL url]
  -[TRIAssetIdURL .cxx_destruct]
  -[TRIAssetIdURL init]
  -[TRIAssetIdURL isEqual:]
  -[TRIAssetIdURL copyWithReplacementAssetId:]
  -[TRIAssetIdURL copyWithZone:]
  -[TRIAssetIdURL copyWithReplacementUrl:]
  -[TRIAssetIdURL initWithAssetId:url:]
  -[TRIAssetIdURL isEqualTourl:]


TRITreatmentQualifiedAssetIndex : NSObject <NSCopying>
 @property  NSString *treatmentId
 @property  unsigned int index

  // class methods
  +[TRITreatmentQualifiedAssetIndex indexWithTreatmentId:index:]

  // instance methods
  -[TRITreatmentQualifiedAssetIndex .cxx_destruct]
  -[TRITreatmentQualifiedAssetIndex treatmentId]
  -[TRITreatmentQualifiedAssetIndex init]
  -[TRITreatmentQualifiedAssetIndex isEqual:]
  -[TRITreatmentQualifiedAssetIndex index]
  -[TRITreatmentQualifiedAssetIndex copyWithZone:]
  -[TRITreatmentQualifiedAssetIndex copyWithReplacementTreatmentId:]
  -[TRITreatmentQualifiedAssetIndex initWithTreatmentId:index:]
  -[TRITreatmentQualifiedAssetIndex isEqualToIndex:]
  -[TRITreatmentQualifiedAssetIndex copyWithReplacementIndex:]


TRIAssetMetadata : NSObject <NSCopying>
 @property  unsigned char type
 @property  NSString *namespaceNameForEncryptionKey
 @property  TRITreatmentQualifiedAssetIndex *treatmentIndex
 @property  unsigned long downloadSize
 @property  unsigned long compressionMode

  // class methods
  +[TRIAssetMetadata metadataWithType:namespaceNameForEncryptionKey:treatmentIndex:downloadSize:compressionMode:]

  // instance methods
  -[TRIAssetMetadata copyWithReplacementType:]
  -[TRIAssetMetadata .cxx_destruct]
  -[TRIAssetMetadata compressionMode]
  -[TRIAssetMetadata init]
  -[TRIAssetMetadata isEqual:]
  -[TRIAssetMetadata downloadSize]
  -[TRIAssetMetadata copyWithReplacementDownloadSize:]
  -[TRIAssetMetadata type]
  -[TRIAssetMetadata copyWithZone:]
  -[TRIAssetMetadata initWithType:namespaceNameForEncryptionKey:treatmentIndex:downloadSize:compressionMode:]
  -[TRIAssetMetadata namespaceNameForEncryptionKey]
  -[TRIAssetMetadata treatmentIndex]
  -[TRIAssetMetadata isEqualToMetadata:]
  -[TRIAssetMetadata copyWithReplacementNamespaceNameForEncryptionKey:]
  -[TRIAssetMetadata copyWithReplacementTreatmentIndex:]
  -[TRIAssetMetadata copyWithReplacementCompressionMode:]


TRIExperimentRecord : NSObject <NSCopying>
 @property  int deploymentEnvironment
 @property  TRIExperimentDeployment *experimentDeployment
 @property  NSString *treatmentId
 @property  int type
 @property  long long status
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  NSArray *namespaces
 @property  BOOL isShadow
 @property  BOOL isManuallyTargeted
 @property  TRIClientExperimentArtifact *artifact

  // class methods
  +[TRIExperimentRecord recordWithDeploymentEnvironment:experimentDeployment:treatmentId:type:status:startDate:endDate:namespaces:isShadow:isManuallyTargeted:artifact:]

  // instance methods
  -[TRIExperimentRecord isEqualToRecord:]
  -[TRIExperimentRecord copyWithReplacementExperimentDeployment:]
  -[TRIExperimentRecord artifact]
  -[TRIExperimentRecord experimentDeployment]
  -[TRIExperimentRecord deploymentEnvironment]
  -[TRIExperimentRecord namespaces]
  -[TRIExperimentRecord copyWithReplacementDeploymentEnvironment:]
  -[TRIExperimentRecord copyWithReplacementIsShadow:]
  -[TRIExperimentRecord copyWithReplacementNamespaces:]
  -[TRIExperimentRecord isShadow]
  -[TRIExperimentRecord copyWithReplacementStatus:]
  -[TRIExperimentRecord isExpiredExperiment]
  -[TRIExperimentRecord copyWithReplacementType:]
  -[TRIExperimentRecord .cxx_destruct]
  -[TRIExperimentRecord copyWithReplacementIsManuallyTargeted:]
  -[TRIExperimentRecord copyWithReplacementStartDate:]
  -[TRIExperimentRecord copyWithReplacementEndDate:]
  -[TRIExperimentRecord treatmentId]
  -[TRIExperimentRecord init]
  -[TRIExperimentRecord isEqual:]
  -[TRIExperimentRecord copyWithReplacementArtifact:]
  -[TRIExperimentRecord isManuallyTargeted]
  -[TRIExperimentRecord status]
  -[TRIExperimentRecord type]
  -[TRIExperimentRecord startDate]
  -[TRIExperimentRecord initWithDeploymentEnvironment:experimentDeployment:treatmentId:type:status:startDate:endDate:namespaces:isShadow:isManuallyTargeted:artifact:]
  -[TRIExperimentRecord copyWithZone:]
  -[TRIExperimentRecord endDate]
  -[TRIExperimentRecord copyWithReplacementTreatmentId:]


TRIFactorPackAsset : NSObject <NSCopying>
 @property  NSString *factorName
 @property  NSString<TRIAssetId> *assetId
 @property  NSString *filePath
 @property  NSString<TRIFactorPackId> *factorPackId

  // class methods
  +[TRIFactorPackAsset assetWithFactorName:assetId:filePath:factorPackId:]

  // instance methods
  -[TRIFactorPackAsset filePath]
  -[TRIFactorPackAsset assetId]
  -[TRIFactorPackAsset .cxx_destruct]
  -[TRIFactorPackAsset factorName]
  -[TRIFactorPackAsset init]
  -[TRIFactorPackAsset isEqual:]
  -[TRIFactorPackAsset copyWithReplacementAssetId:]
  -[TRIFactorPackAsset copyWithReplacementFactorName:]
  -[TRIFactorPackAsset copyWithZone:]
  -[TRIFactorPackAsset factorPackId]
  -[TRIFactorPackAsset isEqualToAsset:]
  -[TRIFactorPackAsset initWithFactorName:assetId:filePath:factorPackId:]
  -[TRIFactorPackAsset copyWithReplacementFilePath:]
  -[TRIFactorPackAsset copyWithReplacementFactorPackId:]


TRIPurgeableFactorPack : NSObject <NSCopying>
 @property  NSString<TRIFactorPackId> *factorPackId
 @property  NSString *namespaceName
 @property  NSSet *purgeableAssetFactorNames

  // class methods
  +[TRIPurgeableFactorPack packWithFactorPackId:namespaceName:purgeableAssetFactorNames:]

  // instance methods
  -[TRIPurgeableFactorPack namespaceName]
  -[TRIPurgeableFactorPack .cxx_destruct]
  -[TRIPurgeableFactorPack init]
  -[TRIPurgeableFactorPack isEqual:]
  -[TRIPurgeableFactorPack copyWithReplacementNamespaceName:]
  -[TRIPurgeableFactorPack copyWithZone:]
  -[TRIPurgeableFactorPack factorPackId]
  -[TRIPurgeableFactorPack purgeableAssetFactorNames]
  -[TRIPurgeableFactorPack copyWithReplacementFactorPackId:]
  -[TRIPurgeableFactorPack initWithFactorPackId:namespaceName:purgeableAssetFactorNames:]
  -[TRIPurgeableFactorPack isEqualToPack:]
  -[TRIPurgeableFactorPack copyWithReplacementPurgeableAssetFactorNames:]


TRICKRecordProgress : NSObject <NSCopying>
 @property  unsigned long size
 @property  unsigned long transferred

  // class methods
  +[TRICKRecordProgress progressWithSize:transferred:]

  // instance methods
  -[TRICKRecordProgress init]
  -[TRICKRecordProgress isEqual:]
  -[TRICKRecordProgress size]
  -[TRICKRecordProgress copyWithZone:]
  -[TRICKRecordProgress initWithSize:transferred:]
  -[TRICKRecordProgress transferred]
  -[TRICKRecordProgress isEqualToProgress:]
  -[TRICKRecordProgress copyWithReplacementSize:]
  -[TRICKRecordProgress copyWithReplacementTransferred:]


TRITreatmentRecordFetchPlan : NSObject <NSCopying>
 @property  CKRecordID *recordId
 @property  NSIndexSet *assetIndexes

  // class methods
  +[TRITreatmentRecordFetchPlan planWithRecordId:assetIndexes:]

  // instance methods
  -[TRITreatmentRecordFetchPlan recordId]
  -[TRITreatmentRecordFetchPlan .cxx_destruct]
  -[TRITreatmentRecordFetchPlan init]
  -[TRITreatmentRecordFetchPlan isEqual:]
  -[TRITreatmentRecordFetchPlan copyWithZone:]
  -[TRITreatmentRecordFetchPlan copyWithReplacementRecordId:]
  -[TRITreatmentRecordFetchPlan initWithRecordId:assetIndexes:]
  -[TRITreatmentRecordFetchPlan assetIndexes]
  -[TRITreatmentRecordFetchPlan isEqualToPlan:]
  -[TRITreatmentRecordFetchPlan copyWithReplacementAssetIndexes:]


TRITreatmentAssetFetchPlan : NSObject <NSCopying>
 @property  NSDictionary *metadataForRequestedUnlinkedAssets
 @property  NSDictionary *fetchPlansForTreatmentIds

  // class methods
  +[TRITreatmentAssetFetchPlan planWithMetadataForRequestedUnlinkedAssets:fetchPlansForTreatmentIds:]

  // instance methods
  -[TRITreatmentAssetFetchPlan .cxx_destruct]
  -[TRITreatmentAssetFetchPlan init]
  -[TRITreatmentAssetFetchPlan isEqual:]
  -[TRITreatmentAssetFetchPlan copyWithZone:]
  -[TRITreatmentAssetFetchPlan isEqualToPlan:]
  -[TRITreatmentAssetFetchPlan initWithMetadataForRequestedUnlinkedAssets:fetchPlansForTreatmentIds:]
  -[TRITreatmentAssetFetchPlan metadataForRequestedUnlinkedAssets]
  -[TRITreatmentAssetFetchPlan fetchPlansForTreatmentIds]
  -[TRITreatmentAssetFetchPlan copyWithReplacementMetadataForRequestedUnlinkedAssets:]
  -[TRITreatmentAssetFetchPlan copyWithReplacementFetchPlansForTreatmentIds:]


TRIFactorPackAssetFetchPlan : NSObject <NSCopying>
 @property  NSDictionary *metadataForRequestedUnlinkedAssets
 @property  NSDictionary *recordIdsForDiffableAssetIds
 @property  NSDictionary *recordIdsForNonDiffableAssetIds

  // class methods
  +[TRIFactorPackAssetFetchPlan planWithMetadataForRequestedUnlinkedAssets:recordIdsForDiffableAssetIds:recordIdsForNonDiffableAssetIds:]

  // instance methods
  -[TRIFactorPackAssetFetchPlan .cxx_destruct]
  -[TRIFactorPackAssetFetchPlan init]
  -[TRIFactorPackAssetFetchPlan isEqual:]
  -[TRIFactorPackAssetFetchPlan copyWithZone:]
  -[TRIFactorPackAssetFetchPlan isEqualToPlan:]
  -[TRIFactorPackAssetFetchPlan metadataForRequestedUnlinkedAssets]
  -[TRIFactorPackAssetFetchPlan copyWithReplacementMetadataForRequestedUnlinkedAssets:]
  -[TRIFactorPackAssetFetchPlan initWithMetadataForRequestedUnlinkedAssets:recordIdsForDiffableAssetIds:recordIdsForNonDiffableAssetIds:]
  -[TRIFactorPackAssetFetchPlan recordIdsForDiffableAssetIds]
  -[TRIFactorPackAssetFetchPlan recordIdsForNonDiffableAssetIds]
  -[TRIFactorPackAssetFetchPlan copyWithReplacementRecordIdsForDiffableAssetIds:]
  -[TRIFactorPackAssetFetchPlan copyWithReplacementRecordIdsForNonDiffableAssetIds:]


TRIFetchOptions : NSObject <NSCopying>
 @property  TRIDownloadOptions *downloadOptions
 @property  NSNumber *cacheDeleteAvailableSpaceClass

  // class methods
  +[TRIFetchOptions optionsWithDownloadOptions:cacheDeleteAvailableSpaceClass:]

  // instance methods
  -[TRIFetchOptions cacheDeleteAvailableSpaceClass]
  -[TRIFetchOptions isEqualToOptions:]
  -[TRIFetchOptions copyWithReplacementCacheDeleteAvailableSpaceClass:]
  -[TRIFetchOptions .cxx_destruct]
  -[TRIFetchOptions init]
  -[TRIFetchOptions isEqual:]
  -[TRIFetchOptions initWithDownloadOptions:cacheDeleteAvailableSpaceClass:]
  -[TRIFetchOptions copyWithReplacementDownloadOptions:]
  -[TRIFetchOptions copyWithZone:]
  -[TRIFetchOptions downloadOptions]


TRIRuleQualifiedFactorPackSetId : NSObject <NSCopying>
 @property  NSString<TRIFactorPackSetId> *ident
 @property  int targetingRuleIndex

  // class methods
  +[TRIRuleQualifiedFactorPackSetId factorPackSetIdWithIdent:targetingRuleIndex:]

  // instance methods
  -[TRIRuleQualifiedFactorPackSetId .cxx_destruct]
  -[TRIRuleQualifiedFactorPackSetId init]
  -[TRIRuleQualifiedFactorPackSetId isEqual:]
  -[TRIRuleQualifiedFactorPackSetId ident]
  -[TRIRuleQualifiedFactorPackSetId copyWithReplacementIdent:]
  -[TRIRuleQualifiedFactorPackSetId copyWithZone:]
  -[TRIRuleQualifiedFactorPackSetId initWithIdent:targetingRuleIndex:]
  -[TRIRuleQualifiedFactorPackSetId targetingRuleIndex]
  -[TRIRuleQualifiedFactorPackSetId isEqualToFactorPackSetId:]
  -[TRIRuleQualifiedFactorPackSetId copyWithReplacementTargetingRuleIndex:]


TRIDiskUsage : NSObject <NSCopying>
 @property  unsigned long naiveSum
 @property  unsigned long deduplicatedSum
 @property  unsigned long compressedSum

  // class methods
  +[TRIDiskUsage usageWithNaiveSum:deduplicatedSum:compressedSum:]

  // instance methods
  -[TRIDiskUsage init]
  -[TRIDiskUsage isEqual:]
  -[TRIDiskUsage copyWithZone:]
  -[TRIDiskUsage initWithNaiveSum:deduplicatedSum:compressedSum:]
  -[TRIDiskUsage naiveSum]
  -[TRIDiskUsage deduplicatedSum]
  -[TRIDiskUsage compressedSum]
  -[TRIDiskUsage isEqualToUsage:]
  -[TRIDiskUsage copyWithReplacementNaiveSum:]
  -[TRIDiskUsage copyWithReplacementDeduplicatedSum:]
  -[TRIDiskUsage copyWithReplacementCompressedSum:]


TRIFactorNamespaceRecord : NSObject <NSCopying>
 @property  NSString *factorName
 @property  NSString *namespaceName

  // class methods
  +[TRIFactorNamespaceRecord factorRecordWithFactorName:namespaceName:]

  // instance methods
  -[TRIFactorNamespaceRecord namespaceName]
  -[TRIFactorNamespaceRecord .cxx_destruct]
  -[TRIFactorNamespaceRecord factorName]
  -[TRIFactorNamespaceRecord init]
  -[TRIFactorNamespaceRecord isEqual:]
  -[TRIFactorNamespaceRecord copyWithReplacementNamespaceName:]
  -[TRIFactorNamespaceRecord copyWithReplacementFactorName:]
  -[TRIFactorNamespaceRecord copyWithZone:]
  -[TRIFactorNamespaceRecord initWithFactorName:namespaceName:]
  -[TRIFactorNamespaceRecord isEqualToFactorRecord:]


TRIHotfixRolloutTargetingScheduler : NSObject <TRIHotfixRolloutTargetingSchedulerProtocol>
 @property  <TRITaskQueuing> *queue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TRIHotfixRolloutTargetingScheduler .cxx_destruct]
  -[TRIHotfixRolloutTargetingScheduler queue]
  -[TRIHotfixRolloutTargetingScheduler _scheduleTaskQueueActivityWithDelay:allowingAnyNetworkingAndBatteryUsage:]
  -[TRIHotfixRolloutTargetingScheduler scheduleHotfixForDeployment:allowingAnyNetworkingAndBatteryUsage:runDelay:]
  -[TRIHotfixRolloutTargetingScheduler initWithTaskQueue:]


TRIScheduleFetchExperimentNotificationsTask : TRIBaseTask <TRITask>
 @property  int taskType
 @property  NSString *taskName
 @property  NSArray *tags
 @property  NSDate *startTime
 @property  NSArray *dependencies
 @property  <TRITaskQueueStateProviding> *stateProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TRIScheduleFetchExperimentNotificationsTask supportsSecureCoding]
  +[TRIScheduleFetchExperimentNotificationsTask taskWithRollbacksOnly:downloadOptions:]
  +[TRIScheduleFetchExperimentNotificationsTask parseFromData:]

  // instance methods
  -[TRIScheduleFetchExperimentNotificationsTask taskType]
  -[TRIScheduleFetchExperimentNotificationsTask initWithCoder:]
  -[TRIScheduleFetchExperimentNotificationsTask _asPersistedTask]
  -[TRIScheduleFetchExperimentNotificationsTask .cxx_destruct]
  -[TRIScheduleFetchExperimentNotificationsTask runUsingContext:withTaskQueue:]
  -[TRIScheduleFetchExperimentNotificationsTask isEqual:]
  -[TRIScheduleFetchExperimentNotificationsTask nextTasksForRunStatus:]
  -[TRIScheduleFetchExperimentNotificationsTask serialize]
  -[TRIScheduleFetchExperimentNotificationsTask initWithRollbacksOnly:downloadOptions:]
  -[TRIScheduleFetchExperimentNotificationsTask encodeWithCoder:]


TRISQLiteCKContainer : NSObject
 @property  CKDatabase *privateCloudDatabase
 @property  CKDatabase *publicCloudDatabase
 @property  CKDatabase *sharedCloudDatabase
 @property  NSString *containerIdentifier

  // instance methods
  -[TRISQLiteCKContainer .cxx_destruct]
  -[TRISQLiteCKContainer containerIdentifier]
  -[TRISQLiteCKContainer privateCloudDatabase]
  -[TRISQLiteCKContainer sharedCloudDatabase]
  -[TRISQLiteCKContainer publicCloudDatabase]
  -[TRISQLiteCKContainer initWithContainerIdentifier:database:]


TRISQLiteCKDatabase : NSObject <_PASDatabaseMigrationProtocol>
 @property  <TRISQLiteCKDatabaseDelegate> *delegate
 @property  NSObject<OS_dispatch_queue> *operationQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TRISQLiteCKDatabase mockContainerWithIdentifier:database:]

  // instance methods
  -[TRISQLiteCKDatabase migrateToVersion:]
  -[TRISQLiteCKDatabase operationQueue]
  -[TRISQLiteCKDatabase saveRecordZone:completionHandler:]
  -[TRISQLiteCKDatabase .cxx_destruct]
  -[TRISQLiteCKDatabase setDelegate:]
  -[TRISQLiteCKDatabase queriesToSkipFromEmptyToVersion:]
  -[TRISQLiteCKDatabase init]
  -[TRISQLiteCKDatabase addOperation:]
  -[TRISQLiteCKDatabase deleteRecordZoneWithID:completionHandler:]
  -[TRISQLiteCKDatabase migrations]
  -[TRISQLiteCKDatabase delegate]
  -[TRISQLiteCKDatabase closePermanently]
  -[TRISQLiteCKDatabase databaseHandle]
  -[TRISQLiteCKDatabase _processQueryOperation:]
  -[TRISQLiteCKDatabase _processFetchRecordsOperation:]
  -[TRISQLiteCKDatabase _processModifyRecordsOperation:]
  -[TRISQLiteCKDatabase _errorWithCode:message:]
  -[TRISQLiteCKDatabase _evalQueryOperationWithRecordType:predicate:sortDescriptors:resultsLimit:desiredKeys:txn:error:recordFetchedBlock:]
  -[TRISQLiteCKDatabase _allRecordTypes]
  -[TRISQLiteCKDatabase _valueTypesForFieldsOfRecordType:]
  -[TRISQLiteCKDatabase _parseDesiredKeys:recordType:unindexedFields:indexedFields:error:]
  -[TRISQLiteCKDatabase _translatePredicate:forRecordType:toSQLExpr:paramBindings:error:]
  -[TRISQLiteCKDatabase _createRecordFromSelectRow:recordType:unindexedDesiredKeys:indexedDesiredKeys:txn:error:]
  -[TRISQLiteCKDatabase _keysForFieldsOfRecordType:]
  -[TRISQLiteCKDatabase _parseIndexedFieldKey:indexRange:]
  -[TRISQLiteCKDatabase _assetForLocallyStoredAssetWithFilename:forRecordId:error:]
  -[TRISQLiteCKDatabase _loadArrayForRecordType:recordId:fieldKey:indexRange:txn:error:]
  -[TRISQLiteCKDatabase _parseDecimalString:value:]
  -[TRISQLiteCKDatabase _translateCompoundPredicate:forRecordType:toSQLExpr:paramBindings:error:]
  -[TRISQLiteCKDatabase _translateComparisonPredicate:forRecordType:toSQLExpr:paramBindings:error:]
  -[TRISQLiteCKDatabase _translateScalarComparisonPredicate:forRecordType:toSQLExpr:paramBindings:error:]
  -[TRISQLiteCKDatabase _translateArrayRHSComparisonPredicate:forRecordType:toSQLExpr:paramBindings:error:]
  -[TRISQLiteCKDatabase _translateDirectModifiedScalarComparisonPredicate:forRecordType:toSQLExpr:paramBindings:error:]
  -[TRISQLiteCKDatabase _translateAnyModifiedScalarComparisonPredicate:forRecordType:toSQLExpr:paramBindings:error:]
  -[TRISQLiteCKDatabase _parseScalarExpression:forRecordType:toSQLExpr:paramBindings:error:]
  -[TRISQLiteCKDatabase _translateDirectModifiedArrayRHSComparisonPredicate:forRecordType:toSQLExpr:paramBindings:error:]
  -[TRISQLiteCKDatabase _translateAnyModifiedArrayRHSComparisonPredicate:forRecordType:toSQLExpr:paramBindings:error:]
  -[TRISQLiteCKDatabase _parseArrayExpression:forRecordType:usingCTEName:toSQLCommonTableExpression:paramBindings:error:]
  -[TRISQLiteCKDatabase _evalFetchRecordsOperationWithRecordIds:recordType:desiredKeys:txn:error:]
  -[TRISQLiteCKDatabase _deleteRecordsWithRecordIds:recordType:txn:]
  -[TRISQLiteCKDatabase _upsertRecord:txn:error:]
  -[TRISQLiteCKDatabase _bindParam:toScalarValue:forStatement:recordId:]
  -[TRISQLiteCKDatabase _replaceArrayFieldWithKey:recordType:recordId:values:txn:error:]
  -[TRISQLiteCKDatabase _filenameForLocallyCopiedAsset:forRecordId:error:]
  -[TRISQLiteCKDatabase _createTableForRecordType:scalarFields:]
  -[TRISQLiteCKDatabase _createTableForArrayFieldWithKey:attachedToRecordType:sqliteContainedType:]
  -[TRISQLiteCKDatabase initWithParentDir:assetCacheDir:]


TRINamespaceDescriptorSetExternalRefStore : NSObject <TRIPathReferencing>
  // instance methods
  -[TRINamespaceDescriptorSetExternalRefStore .cxx_destruct]
  -[TRINamespaceDescriptorSetExternalRefStore hasReferenceToPath:]
  -[TRINamespaceDescriptorSetExternalRefStore initWithServerContext:]


TRINamespaceDescriptorSetStorage : NSObject
  // instance methods
  -[TRINamespaceDescriptorSetStorage initWithPaths:]
  -[TRINamespaceDescriptorSetStorage removeUnreferencedNamespaceDescriptorSetsWithServerContext:removedCount:]
  -[TRINamespaceDescriptorSetStorage pathForNamespaceDescriptorsWithTreatmentId:]
  -[TRINamespaceDescriptorSetStorage .cxx_destruct]
  -[TRINamespaceDescriptorSetStorage _collectNamespaceDescriptorSets]
  -[TRINamespaceDescriptorSetStorage parentDirForNamespaceDescriptorSets]
  -[TRINamespaceDescriptorSetStorage overwriteNamespaceDescriptors:forTreatmentId:]
  -[TRINamespaceDescriptorSetStorage hasNamespaceDescriptorsForTreatmentWithId:path:]


TRITaskSupport : NSObject <TRITaskSetProviding>
  // class methods
  +[TRITaskSupport sharedInstance]

  // instance methods
  -[TRITaskSupport taskClassForTaskType:]
  -[TRITaskSupport XPCTaskWhitelist]


TRIExperimentTaskSupportGuardedData : NSObject
  // instance methods
  -[TRIExperimentTaskSupportGuardedData .cxx_destruct]


TRIExperimentTaskSupport : NSObject <TRIMetricsProviding>
 @property  TRIExperimentDeployment *experimentDeployment

  // instance methods
  -[TRIExperimentTaskSupport experimentDeployment]
  -[TRIExperimentTaskSupport trialSystemTelemetry]
  -[TRIExperimentTaskSupport .cxx_destruct]
  -[TRIExperimentTaskSupport dimensions]
  -[TRIExperimentTaskSupport addDimension:]
  -[TRIExperimentTaskSupport metrics]
  -[TRIExperimentTaskSupport initWithExperimentDeployment:]
  -[TRIExperimentTaskSupport mergeTelemetry:]
  -[TRIExperimentTaskSupport addMetric:]
  -[TRIExperimentTaskSupport setIdentifyTelemetryAsV1Rollout:]
  -[TRIExperimentTaskSupport tags]


TRIRolloutTaskSupportGuardedData : NSObject
  // instance methods
  -[TRIRolloutTaskSupportGuardedData .cxx_destruct]


TRIRolloutTaskSupport : NSObject <TRIMetricsProviding>
 @property  TRIRolloutDeployment *rolloutDeployment

  // instance methods
  -[TRIRolloutTaskSupport rolloutDeployment]
  -[TRIRolloutTaskSupport trialSystemTelemetry]
  -[TRIRolloutTaskSupport .cxx_destruct]
  -[TRIRolloutTaskSupport dimensions]
  -[TRIRolloutTaskSupport addDimension:]
  -[TRIRolloutTaskSupport metrics]
  -[TRIRolloutTaskSupport initWithRolloutDeployment:]
  -[TRIRolloutTaskSupport mergeTelemetry:]
  -[TRIRolloutTaskSupport addMetric:]
  -[TRIRolloutTaskSupport tags]


TRIExperimentBaseTaskGuardedData : NSObject
  // instance methods
  -[TRIExperimentBaseTaskGuardedData .cxx_destruct]


TRIExperimentBaseTask : TRIBaseTask <TRIMetricsProviding>
 @property  TRIExperimentDeployment *experiment

  // instance methods
  -[TRIExperimentBaseTask containerForFirstNamespaceInExperimentWithContext:]
  -[TRIExperimentBaseTask logAsRollout:]
  -[TRIExperimentBaseTask trialSystemTelemetry]
  -[TRIExperimentBaseTask .cxx_destruct]
  -[TRIExperimentBaseTask experiment]
  -[TRIExperimentBaseTask initWithExperiment:]
  -[TRIExperimentBaseTask dimensions]
  -[TRIExperimentBaseTask isEqual:]
  -[TRIExperimentBaseTask nextTasksForRunStatus:]
  -[TRIExperimentBaseTask addDimension:]
  -[TRIExperimentBaseTask metrics]
  -[TRIExperimentBaseTask mergeTelemetry:]
  -[TRIExperimentBaseTask addMetric:]
  -[TRIExperimentBaseTask tags]


TRILogTreatmentProvider : TRILogTreatmentReader
  // class methods
  +[TRILogTreatmentProvider providerWithProjectId:paths:]
  +[TRILogTreatmentProvider deleteFileAtPath:]

  // instance methods
  -[TRILogTreatmentProvider addTreatment:]
  -[TRILogTreatmentProvider updatePersistedLogNamespace:]
  -[TRILogTreatmentProvider removeTreatment:]
  -[TRILogTreatmentProvider saveTreatments:]


TRITargetingTask : TRIBaseTask <TRIMetricsProviding, TRIRetryableTask>
 @property  TRIExperimentDeployment *experiment
 @property  int retryCount
 @property  BOOL wasDeferred
 @property  int taskType
 @property  NSString *taskName
 @property  NSArray *tags
 @property  NSDate *startTime
 @property  NSArray *dependencies
 @property  <TRITaskQueueStateProviding> *stateProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TRITargetingTask supportsSecureCoding]
  +[TRITargetingTask taskWithExperiment:taskAttribution:]
  +[TRITargetingTask parseFromData:]
  +[TRITargetingTask taskWithExperiment:includeDependencies:taskAttribution:]

  // instance methods
  -[TRITargetingTask taskType]
  -[TRITargetingTask systemCovariatesWithPaths:]
  -[TRITargetingTask initWithCoder:]
  -[TRITargetingTask initWithExperiment:includeDependencies:taskAttribution:]
  -[TRITargetingTask _asPersistedTask]
  -[TRITargetingTask trialSystemTelemetry]
  -[TRITargetingTask .cxx_destruct]
  -[TRITargetingTask dependencies]
  -[TRITargetingTask experiment]
  -[TRITargetingTask runUsingContext:withTaskQueue:]
  -[TRITargetingTask runTaskUsingContext:withTaskQueue:systemCovariates:userCovariates:error:]
  -[TRITargetingTask dimensions]
  -[TRITargetingTask wasDeferred]
  -[TRITargetingTask isEqual:]
  -[TRITargetingTask setWasDeferred:]
  -[TRITargetingTask _targetingErrorWithExperiment:errorType:details:]
  -[TRITargetingTask getTreatment:forExperiment:isServerSideExperiment:paths:error:]
  -[TRITargetingTask serialize]
  -[TRITargetingTask validateSystemCovariates:experiment:error:]
  -[TRITargetingTask getTreatment:forExperiment:isServerSideExperiment:systemCovariates:userCovariates:error:]
  -[TRITargetingTask metrics]
  -[TRITargetingTask runEnqueueHandlerUsingContext:]
  -[TRITargetingTask setRetryCount:]
  -[TRITargetingTask retryCount]
  -[TRITargetingTask runDequeueHandlerUsingContext:]
  -[TRITargetingTask _isRolloutV1For1PWithExperimentRecord:context:]
  -[TRITargetingTask encodeWithCoder:]
  -[TRITargetingTask tags]
  -[TRITargetingTask _targetingErrorWithExperiment:errorType:]


TRITripersistedTreatmentRoot : TRIPBRootObject

TRIPersistedTreatment : TRIPBMessage
 @property  TRIClientTreatment *treatment
 @property  BOOL hasTreatment

  // class methods
  +[TRIPersistedTreatment descriptor]


TRIXPCHandlerWrapper : NSObject
  // class methods
  +[TRIXPCHandlerWrapper _symbolicatedBacktraceWithAddresses:unresolvedSymbols:]

  // instance methods
  -[TRIXPCHandlerWrapper methodSignatureForSelector:]
  -[TRIXPCHandlerWrapper .cxx_destruct]
  -[TRIXPCHandlerWrapper forwardInvocation:]
  -[TRIXPCHandlerWrapper initWithUnderlyingHandler:forProtocol:]


TRIXPCInternalServiceWrapper : TRIXPCHandlerWrapper <TRIXPCInternalServiceProtocol>
  // instance methods
  -[TRIXPCInternalServiceWrapper initWithUnderlyingHandler:]


TRIXPCNamespaceManagementServiceWrapper : TRIXPCHandlerWrapper <TRIXPCNamespaceManagementServiceProtocol>
  // instance methods
  -[TRIXPCNamespaceManagementServiceWrapper initWithUnderlyingHandler:]


TRIXPCStatusServiceWrapper : TRIXPCHandlerWrapper <TRIXPCStatusServiceProtocol>
  // instance methods
  -[TRIXPCStatusServiceWrapper initWithUnderlyingHandler:]


TRIMaintenanceTaskGuardedData : NSObject
  // instance methods
  -[TRIMaintenanceTaskGuardedData .cxx_destruct]


TRIMaintenanceTask : TRIBaseTask <TRITask, TRIMetricsProviding>
 @property  int taskType
 @property  NSString *taskName
 @property  NSArray *tags
 @property  NSDate *startTime
 @property  NSArray *dependencies
 @property  <TRITaskQueueStateProviding> *stateProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TRIMaintenanceTask supportsSecureCoding]
  +[TRIMaintenanceTask parseFromData:]
  +[TRIMaintenanceTask task]

  // instance methods
  -[TRIMaintenanceTask taskType]
  -[TRIMaintenanceTask initWithCoder:]
  -[TRIMaintenanceTask _asPersistedTask]
  -[TRIMaintenanceTask trialSystemTelemetry]
  -[TRIMaintenanceTask .cxx_destruct]
  -[TRIMaintenanceTask runUsingContext:withTaskQueue:]
  -[TRIMaintenanceTask dimensions]
  -[TRIMaintenanceTask init]
  -[TRIMaintenanceTask _cleanupLocalTempStorageWithPaths:]
  -[TRIMaintenanceTask _cleanupTreatmentWithTreatmentId:paths:]
  -[TRIMaintenanceTask _cleanupUnusedContentWithContext:]
  -[TRIMaintenanceTask serialize]
  -[TRIMaintenanceTask addDimension:]
  -[TRIMaintenanceTask _handleExpiredExperimentsWithExperimentDatabase:nextTasks:]
  -[TRIMaintenanceTask metrics]
  -[TRIMaintenanceTask _handleOrphanedNamespacesWithNamespaceDatabase:nextTasks:]
  -[TRIMaintenanceTask _reportStorageUsageUsingContext:]
  -[TRIMaintenanceTask mergeTelemetry:]
  -[TRIMaintenanceTask addMetric:]
  -[TRIMaintenanceTask _synchronizePushService:usingRolloutDatabase:experimentDatabase:]
  -[TRIMaintenanceTask _roundNumber:]
  -[TRIMaintenanceTask encodeWithCoder:]


TRIMLRuntimeEvaluationHistoryDatabase : NSObject
  // instance methods
  -[TRIMLRuntimeEvaluationHistoryDatabase initWithDatabase:]
  -[TRIMLRuntimeEvaluationHistoryDatabase writeTransactionWithFailableBlock:]
  -[TRIMLRuntimeEvaluationHistoryDatabase .cxx_destruct]
  -[TRIMLRuntimeEvaluationHistoryDatabase init]
  -[TRIMLRuntimeEvaluationHistoryDatabase _enumerateRecordsMatchingWhereClause:bind:block:]
  -[TRIMLRuntimeEvaluationHistoryDatabase expireRecordsOlderThanDate:deletedCount:]
  -[TRIMLRuntimeEvaluationHistoryDatabase addRecord:usingTransaction:]
  -[TRIMLRuntimeEvaluationHistoryDatabase readTransactionWithFailableBlock:]
  -[TRIMLRuntimeEvaluationHistoryDatabase enumerateRecordsNewerThanDate:block:]


TRIClientExperimentArtifact : NSObject <NSSecureCoding>
 @property  TRIExperimentDeployment *experimentDeployment
 @property  BOOL hasDeploymentId
 @property  NSString *experimentId
 @property  int deploymentId
 @property  int deploymentEnvironment
 @property  int cloudKitContainer
 @property  NSString *teamId
 @property  NSData *encodedExperimentDefinition
 @property  NSString *encodedExperimentDefinitionSignature
 @property  NSData *publicCertificate
 @property  TRIClientExperiment *experiment
 @property  int experimentState
 @property  int experimentType
 @property  int experimentPriority
 @property  BOOL internalBuildOnly
 @property  NSDate *deploymentDate
 @property  NSArray *namespaces
 @property  NSArray *namespaceCompatibilityVersions

  // class methods
  +[TRIClientExperimentArtifact supportsSecureCoding]
  +[TRIClientExperimentArtifact artifactFromCKRecordResult:withNamespaceDescriptorProvider:container:teamId:requireDeploymentId:completion:]
  +[TRIClientExperimentArtifact allReferencedCKRecordKeys]
  +[TRIClientExperimentArtifact artifactWithExperiment:]
  +[TRIClientExperimentArtifact parseFromData:error:]
  +[TRIClientExperimentArtifact _convertNamespaceIdsToNames:]

  // instance methods
  -[TRIClientExperimentArtifact setDeploymentId:]
  -[TRIClientExperimentArtifact setExperimentId:]
  -[TRIClientExperimentArtifact experimentDeployment]
  -[TRIClientExperimentArtifact deploymentEnvironment]
  -[TRIClientExperimentArtifact namespaces]
  -[TRIClientExperimentArtifact deploymentId]
  -[TRIClientExperimentArtifact deploymentDate]
  -[TRIClientExperimentArtifact encodedExperimentDefinitionSignature]
  -[TRIClientExperimentArtifact teamId]
  -[TRIClientExperimentArtifact initWithCoder:]
  -[TRIClientExperimentArtifact experimentState]
  -[TRIClientExperimentArtifact isValid]
  -[TRIClientExperimentArtifact setExperimentPriority:]
  -[TRIClientExperimentArtifact experimentId]
  -[TRIClientExperimentArtifact setInternalBuildOnly:]
  -[TRIClientExperimentArtifact .cxx_destruct]
  -[TRIClientExperimentArtifact experiment]
  -[TRIClientExperimentArtifact initWithExperiment:]
  -[TRIClientExperimentArtifact data]
  -[TRIClientExperimentArtifact setEncodedExperimentDefinition:]
  -[TRIClientExperimentArtifact experimentPriority]
  -[TRIClientExperimentArtifact setEncodedExperimentDefinitionSignature:]
  -[TRIClientExperimentArtifact encodedExperimentDefinition]
  -[TRIClientExperimentArtifact init]
  -[TRIClientExperimentArtifact isEqual:]
  -[TRIClientExperimentArtifact publicCertificate]
  -[TRIClientExperimentArtifact experimentType]
  -[TRIClientExperimentArtifact setTeamId:]
  -[TRIClientExperimentArtifact cloudKitContainer]
  -[TRIClientExperimentArtifact saveWithDatabase:paths:]
  -[TRIClientExperimentArtifact setExperimentState:]
  -[TRIClientExperimentArtifact setPublicCertificate:]
  -[TRIClientExperimentArtifact isCompatibleWithNamespaceDescriptorProvider:error:]
  -[TRIClientExperimentArtifact namespaceCompatibilityVersions]
  -[TRIClientExperimentArtifact setCloudKitContainer:]
  -[TRIClientExperimentArtifact setNamespaces:]
  -[TRIClientExperimentArtifact asPersistedArtifact]
  -[TRIClientExperimentArtifact setDeploymentEnvironment:]
  -[TRIClientExperimentArtifact hasDeploymentId]
  -[TRIClientExperimentArtifact internalBuildOnly]
  -[TRIClientExperimentArtifact setExperimentType:]
  -[TRIClientExperimentArtifact encodeWithCoder:]
  -[TRIClientExperimentArtifact hasNamespacesAvailableForExperimentWithDatabase:]
  -[TRIClientExperimentArtifact setNamespaceCompatibilityVersions:]
  -[TRIClientExperimentArtifact setDeploymentDate:]


TRIInternalServiceRequestHandler : NSObject <TRIXPCInternalServiceProtocol>
  // instance methods
  -[TRIInternalServiceRequestHandler setFailureInjectionDelegate:]
  -[TRIInternalServiceRequestHandler .cxx_destruct]
  -[TRIInternalServiceRequestHandler taskRecordsWithCompletion:]
  -[TRIInternalServiceRequestHandler experimentNotificationsWithExperimentId:cloudKitContainer:teamId:completion:]
  -[TRIInternalServiceRequestHandler rolloutNotificationWithLatestDeploymentForRolloutId:cloudKitContainer:teamId:completion:]
  -[TRIInternalServiceRequestHandler submitTask:options:completion:]
  -[TRIInternalServiceRequestHandler lastFetchDateForContainer:teamId:completion:]
  -[TRIInternalServiceRequestHandler setLastFetchDate:forContainer:teamId:completion:]
  -[TRIInternalServiceRequestHandler suspendSQLiteCKDatabaseQueueWithCompletion:]
  -[TRIInternalServiceRequestHandler resumeSQLiteCKDatabaseQueueWithCompletion:]
  -[TRIInternalServiceRequestHandler registerNamespaceWithNamespaceName:compatibilityVersion:defaultsFileURL:teamId:appContainerId:appContainerType:cloudKitContainerId:completion:]
  -[TRIInternalServiceRequestHandler deregisterNamespaceWithNamespaceName:teamId:completion:]
  -[TRIInternalServiceRequestHandler startDownloadNamespaceWithName:teamId:options:completion:]
  -[TRIInternalServiceRequestHandler dynamicNamespaceRecordsWithCompletion:]
  -[TRIInternalServiceRequestHandler subscriptionForNamespaceName:completion:]
  -[TRIInternalServiceRequestHandler setSubscription:namespaceName:completion:]
  -[TRIInternalServiceRequestHandler activeRolloutInformationWithPrivacyFilterPolicy:completion:]
  -[TRIInternalServiceRequestHandler activeExperimentInformationWithPrivacyFilterPolicy:completion:]
  -[TRIInternalServiceRequestHandler immediatelySchedulePostUpgradeActivityWithCompletion:]
  -[TRIInternalServiceRequestHandler _experimentRecordsWithDeploymentEnvironments:privacyFilterPolicy:serverContext:taskQueue:completion:]
  -[TRIInternalServiceRequestHandler initWithPromise:entitlementWitness:]


TRIXPCInternalServiceListener : NSObject <NSXPCListenerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TRIXPCInternalServiceListener .cxx_destruct]
  -[TRIXPCInternalServiceListener listener:shouldAcceptNewConnection:]
  -[TRIXPCInternalServiceListener initWithServerContextPromise:]


TRISQLiteCKDatabaseFailureInjectionDelegate : NSObject <TRISQLiteCKDatabaseDelegate, NSSecureCoding>
 @property  NSMutableArray *queryErrors
 @property  NSMutableArray *fetchErrors

  // class methods
  +[TRISQLiteCKDatabaseFailureInjectionDelegate supportsSecureCoding]

  // instance methods
  -[TRISQLiteCKDatabaseFailureInjectionDelegate initWithCoder:]
  -[TRISQLiteCKDatabaseFailureInjectionDelegate .cxx_destruct]
  -[TRISQLiteCKDatabaseFailureInjectionDelegate encodeWithCoder:]
  -[TRISQLiteCKDatabaseFailureInjectionDelegate shouldProcessQueryOperation:error:]
  -[TRISQLiteCKDatabaseFailureInjectionDelegate shouldProcessFetchOperation:error:]
  -[TRISQLiteCKDatabaseFailureInjectionDelegate queryErrors]
  -[TRISQLiteCKDatabaseFailureInjectionDelegate fetchErrors]
  -[TRISQLiteCKDatabaseFailureInjectionDelegate initWithQueryErrors:fetchErrors:]
  -[TRISQLiteCKDatabaseFailureInjectionDelegate initWithErrorForAllOperations:]
  -[TRISQLiteCKDatabaseFailureInjectionDelegate setQueryErrors:]
  -[TRISQLiteCKDatabaseFailureInjectionDelegate setFetchErrors:]


TRIDiffableAssetBuilder : NSObject
  // class methods
  +[TRIDiffableAssetBuilder buildAndSaveDiffableAssetsWithAssetIds:metadataForAssetId:artifactProvider:options:paths:assetsDownloadSize:perAssetIdCompletionBlockOnSuccess:perAssetIdCompletionBlockOnError:retryAfter:error:]


TRICacheDeleteCallbacks : NSObject
  // class methods
  +[TRICacheDeleteCallbacks _assetPurger:loggingClient:]
  +[TRICacheDeleteCallbacks registerCallbacksWithPaths:loggingClient:]

  // instance methods
  -[TRICacheDeleteCallbacks cancel:]
  -[TRICacheDeleteCallbacks .cxx_destruct]
  -[TRICacheDeleteCallbacks purgeable:urgency:]
  -[TRICacheDeleteCallbacks purge:urgency:]
  -[TRICacheDeleteCallbacks _trialVolumeIsEqualToVolume:]
  -[TRICacheDeleteCallbacks _logPurgedAmountTelemetry:purgedAmountInBytes:]
  -[TRICacheDeleteCallbacks initWithPaths:assetPurger:loggingClient:]


TRIPostUpgradeCleanupTask : TRIBaseTask <TRITask>
 @property  int taskType
 @property  NSString *taskName
 @property  NSArray *tags
 @property  NSDate *startTime
 @property  NSArray *dependencies
 @property  <TRITaskQueueStateProviding> *stateProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TRIPostUpgradeCleanupTask supportsSecureCoding]
  +[TRIPostUpgradeCleanupTask parseFromData:]
  +[TRIPostUpgradeCleanupTask task]

  // instance methods
  -[TRIPostUpgradeCleanupTask taskType]
  -[TRIPostUpgradeCleanupTask initWithCoder:]
  -[TRIPostUpgradeCleanupTask _asPersistedTask]
  -[TRIPostUpgradeCleanupTask .cxx_destruct]
  -[TRIPostUpgradeCleanupTask _nextTasksForRunStatus:]
  -[TRIPostUpgradeCleanupTask runUsingContext:withTaskQueue:]
  -[TRIPostUpgradeCleanupTask serialize]
  -[TRIPostUpgradeCleanupTask encodeWithCoder:]
  -[TRIPostUpgradeCleanupTask _activeRolloutIsCompatible:upgradeNCVs:downloadNCVs:]
  -[TRIPostUpgradeCleanupTask _validateRolloutDescriptorsWithNamespaceCompatibilityVersions:usingPaths:]
  -[TRIPostUpgradeCleanupTask _validateExperimentDescriptorsWithNamespaceCompatibilityVersions:database:]
  -[TRIPostUpgradeCleanupTask _validateDynamicNamespaceRolloutsWithDatabase:usingPaths:]
  -[TRIPostUpgradeCleanupTask _validateRolloutNamespaceNCVs:downloadNCVs:rolloutDatabase:]
  -[TRIPostUpgradeCleanupTask _removePromotionsUsingPaths:]


TRIActivationEventDatabase : NSObject
  // instance methods
  -[TRIActivationEventDatabase initWithDatabase:]
  -[TRIActivationEventDatabase writeTransactionWithFailableBlock:]
  -[TRIActivationEventDatabase .cxx_destruct]
  -[TRIActivationEventDatabase activationEventRecordWithParentId:factorPackSetId:deploymentId:]
  -[TRIActivationEventDatabase init]
  -[TRIActivationEventDatabase deleteRecordWithParentId:factorPackSetId:deploymentId:]
  -[TRIActivationEventDatabase readTransactionWithFailableBlock:]
  -[TRIActivationEventDatabase addRecordWithParentId:factorPackSetId:deploymentId:osBuild:languageCode:regionCode:transaction:]


TRIRolloutDeploymentRefStore : NSObject <TRIPathReferencing>
  // instance methods
  -[TRIRolloutDeploymentRefStore .cxx_destruct]
  -[TRIRolloutDeploymentRefStore hasReferenceToPath:]
  -[TRIRolloutDeploymentRefStore initWithServerContext:]


TRIExperimentDeploymentRefStore : NSObject <TRIPathReferencing>
  // instance methods
  -[TRIExperimentDeploymentRefStore .cxx_destruct]
  -[TRIExperimentDeploymentRefStore hasReferenceToPath:]
  -[TRIExperimentDeploymentRefStore initWithServerContext:]


TRINamespaceResolverStorage : NSObject
  // instance methods
  -[TRINamespaceResolverStorage initWithPaths:]
  -[TRINamespaceResolverStorage _pathForRolloutDeployment:]
  -[TRINamespaceResolverStorage _logPromotionMetric:forFactorPackId:namespaceName:rolloutDeployment:withServerContext:]
  -[TRINamespaceResolverStorage _removeUnreferencedDeploymentsWithRefStore:topLevelDir:removedCount:]
  -[TRINamespaceResolverStorage promoteFactorPackId:forNamespaceName:rolloutDeployment:withServerContext:error:]
  -[TRINamespaceResolverStorage .cxx_destruct]
  -[TRINamespaceResolverStorage pathForTargetedFactorPackSetWithDeployment:]
  -[TRINamespaceResolverStorage removeUnreferencedRolloutDeploymentsWithServerContext:removedCount:]
  -[TRINamespaceResolverStorage init]
  -[TRINamespaceResolverStorage pathForRolloutDeployment:]
  -[TRINamespaceResolverStorage _writeRampId:parentDir:]
  -[TRINamespaceResolverStorage rewriteRolloutDeployment:rampId:targetedFactorPackSetId:]
  -[TRINamespaceResolverStorage _getProvisionalFactorpackMetadataForNamespaceName:mustExist:error:]
  -[TRINamespaceResolverStorage setProvisionalFactorPackId:forNamespaceName:error:]
  -[TRINamespaceResolverStorage parentDirForRolloutDeployments]
  -[TRINamespaceResolverStorage removeUnreferencedExperimentDeploymentsWithServerContext:removedCount:]
  -[TRINamespaceResolverStorage removeUnneededPromotionsWithRemovedCount:removeAll:]
  -[TRINamespaceResolverStorage _setProvisionalFactorpackMetadata:forNamespaceName:error:]
  -[TRINamespaceResolverStorage _overwriteActiveFactorProvidersWithNamespaceMap:rolloutDeploymentMap:]
  -[TRINamespaceResolverStorage rejectFactorPackId:forNamespaceName:rolloutDeployment:withServerContext:error:]
  -[TRINamespaceResolverStorage _pathForExperimentDeployment:]
  -[TRINamespaceResolverStorage rewriteExperimentDeployment:targetedTreatmentId:]
  -[TRINamespaceResolverStorage pathForExperimentDeployment:]
  -[TRINamespaceResolverStorage parentDirForExperimentDeployments]
  -[TRINamespaceResolverStorage _removeUnreferencedDeploymentsWithRefStore:parentDir:removedCount:]
  -[TRINamespaceResolverStorage overwriteActiveFactorProvidersUsingTransaction:fromDatabase:]


TRIMakeDefaultTask : TRIActivateTreatmentBaseTask <TRIRetryableTask>
 @property  int retryCount
 @property  BOOL wasDeferred
 @property  int taskType
 @property  NSString *taskName
 @property  NSArray *tags
 @property  NSDate *startTime
 @property  NSArray *dependencies
 @property  <TRITaskQueueStateProviding> *stateProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TRIMakeDefaultTask supportsSecureCoding]
  +[TRIMakeDefaultTask taskWithExperiment:treatmentId:taskAttributing:]
  +[TRIMakeDefaultTask parseFromData:]

  // instance methods
  -[TRIMakeDefaultTask taskType]
  -[TRIMakeDefaultTask initWithCoder:]
  -[TRIMakeDefaultTask _asPersistedTask]
  -[TRIMakeDefaultTask runTaskUsingContext:experiment:]
  -[TRIMakeDefaultTask .cxx_destruct]
  -[TRIMakeDefaultTask _nextTasksForRunStatus:]
  -[TRIMakeDefaultTask wasDeferred]
  -[TRIMakeDefaultTask setWasDeferred:]
  -[TRIMakeDefaultTask serialize]
  -[TRIMakeDefaultTask metrics]
  -[TRIMakeDefaultTask makeDefaultForNamespace:experiment:context:]
  -[TRIMakeDefaultTask setRetryCount:]
  -[TRIMakeDefaultTask retryCount]
  -[TRIMakeDefaultTask requiredCapabilities:]
  -[TRIMakeDefaultTask encodeWithCoder:]


TRIXPCServerContextPromise : NSObject
 @property  NSObject<OS_dispatch_queue> *fullfillmentQueue
 @property  TRIServerContext *serverContext
 @property  <TRITaskQueuing> *taskQueue

  // instance methods
  -[TRIXPCServerContextPromise reject]
  -[TRIXPCServerContextPromise .cxx_destruct]
  -[TRIXPCServerContextPromise taskQueue]
  -[TRIXPCServerContextPromise init]
  -[TRIXPCServerContextPromise setTaskQueue:]
  -[TRIXPCServerContextPromise addBlockToExecuteAfterPromiseFullfillment:]
  -[TRIXPCServerContextPromise setFullfillmentQueue:]
  -[TRIXPCServerContextPromise setServerContext:]
  -[TRIXPCServerContextPromise fullfillmentQueue]
  -[TRIXPCServerContextPromise serverContext]
  -[TRIXPCServerContextPromise fullfillWithContext:taskQueue:]


TRIActivateTreatmentTask : TRIActivateTreatmentBaseTask <TRIRetryableTask>
 @property  int retryCount
 @property  BOOL wasDeferred
 @property  int taskType
 @property  NSString *taskName
 @property  NSArray *tags
 @property  NSDate *startTime
 @property  NSArray *dependencies
 @property  <TRITaskQueueStateProviding> *stateProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TRIActivateTreatmentTask supportsSecureCoding]
  +[TRIActivateTreatmentTask taskWithExperiment:treatmentId:taskAttributing:requiresTreatmentInstallation:startTime:taskOptions:]
  +[TRIActivateTreatmentTask parseFromData:]

  // instance methods
  -[TRIActivateTreatmentTask taskType]
  -[TRIActivateTreatmentTask initWithCoder:]
  -[TRIActivateTreatmentTask _asPersistedTask]
  -[TRIActivateTreatmentTask runTaskUsingContext:experiment:]
  -[TRIActivateTreatmentTask .cxx_destruct]
  -[TRIActivateTreatmentTask _nextTasksForRunStatus:]
  -[TRIActivateTreatmentTask wasDeferred]
  -[TRIActivateTreatmentTask setWasDeferred:]
  -[TRIActivateTreatmentTask serialize]
  -[TRIActivateTreatmentTask metrics]
  -[TRIActivateTreatmentTask setRetryCount:]
  -[TRIActivateTreatmentTask retryCount]
  -[TRIActivateTreatmentTask _notifyUpdatedShadowEvaluationWithExperimentRecord:context:]
  -[TRIActivateTreatmentTask requiredCapabilities:]
  -[TRIActivateTreatmentTask encodeWithCoder:]


TRICKQueryLogGuardedData : NSObject
  // instance methods
  -[TRICKQueryLogGuardedData .cxx_destruct]


TRICKQueryLog : NSObject
  // instance methods
  -[TRICKQueryLog initWithPaths:]
  -[TRICKQueryLog .cxx_destruct]
  -[TRICKQueryLog logQueryWithRecordType:predicate:sortDescriptors:]
  -[TRICKQueryLog _openFileIfNeededWithGuardedData:]
  -[TRICKQueryLog _logQueryWithRecordType:predicate:sortDescriptors:guardedData:]


TRIXPCActivityManager : NSObject <TRIXPCActivityManagementProtocol>
 @property  TRIServerContext *context
 @property  TRITaskQueue *taskQueue

  // instance methods
  -[TRIXPCActivityManager _registerPostUpgradeActivity]
  -[TRIXPCActivityManager registerActivities]
  -[TRIXPCActivityManager _registerPlaceholderTaskQueueActivity]
  -[TRIXPCActivityManager postponeCellularActivity]
  -[TRIXPCActivityManager .cxx_destruct]
  -[TRIXPCActivityManager _registerClientTriggeredActivities]
  -[TRIXPCActivityManager _registerPostUpgradeActivityRequireInexpensiveNetworking]
  -[TRIXPCActivityManager _setDelaySeconds:forXPCActivity:withLabel:replacementCriteria:]
  -[TRIXPCActivityManager taskQueue]
  -[TRIXPCActivityManager _registerHotfixTargetingActivity]
  -[TRIXPCActivityManager registerRecurrentRollbackActivityWithDelay:]
  -[TRIXPCActivityManager setTaskQueue:]
  -[TRIXPCActivityManager registerSetupAssistantFetchActivity]
  -[TRIXPCActivityManager _registerCellularActivityWithDelay:]
  -[TRIXPCActivityManager initWithDispatchQueue:]
  -[TRIXPCActivityManager _setJitterForXPCActivity:withLabel:replacementCriteria:]
  -[TRIXPCActivityManager setContext:]
  -[TRIXPCActivityManager _scheduleMaintenanceAndFetchTasksWithActivityDescriptor:label:]
  -[TRIXPCActivityManager _registerRetryFailuresActivity]
  -[TRIXPCActivityManager _registerFetchExperimentsActivity]
  -[TRIXPCActivityManager context]


TRIFetchTreatmentTask : TRITreatmentBaseTask <TRIRetryableTask>
 @property  int retryCount
 @property  BOOL wasDeferred
 @property  int taskType
 @property  NSString *taskName
 @property  NSArray *tags
 @property  NSDate *startTime
 @property  NSArray *dependencies
 @property  <TRITaskQueueStateProviding> *stateProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TRIFetchTreatmentTask supportsSecureCoding]
  +[TRIFetchTreatmentTask taskWithExperiment:treatmentId:taskAttributing:]
  +[TRIFetchTreatmentTask parseFromData:]

  // instance methods
  -[TRIFetchTreatmentTask taskType]
  -[TRIFetchTreatmentTask initWithCoder:]
  -[TRIFetchTreatmentTask _asPersistedTask]
  -[TRIFetchTreatmentTask dependencies]
  -[TRIFetchTreatmentTask _nextTasksForRunStatus:]
  -[TRIFetchTreatmentTask runUsingContext:withTaskQueue:]
  -[TRIFetchTreatmentTask wasDeferred]
  -[TRIFetchTreatmentTask setWasDeferred:]
  -[TRIFetchTreatmentTask _namespaceDescriptorForNamespaceName:fromExperimentRecord:referencingFactorsURL:]
  -[TRIFetchTreatmentTask _ncvForNamespaceName:inExperimentRecord:]
  -[TRIFetchTreatmentTask _saveTreatment:experimentRecord:assetURLs:assetMetadata:context:paths:downloadOptions:]
  -[TRIFetchTreatmentTask serialize]
  -[TRIFetchTreatmentTask runEnqueueHandlerUsingContext:]
  -[TRIFetchTreatmentTask _fetchTreatmentWithArtifactProvider:experimentRecord:downloadOptions:context:treatment:treatmentSize:recordId:treatmentFetchError:]
  -[TRIFetchTreatmentTask setRetryCount:]
  -[TRIFetchTreatmentTask retryCount]
  -[TRIFetchTreatmentTask runDequeueHandlerUsingContext:]
  -[TRIFetchTreatmentTask requiredCapabilities:]
  -[TRIFetchTreatmentTask encodeWithCoder:]
  -[TRIFetchTreatmentTask _fetchAssetsWithArtifactProvider:recordId:experimentRecord:assetIndexes:downloadOptions:context:assetURLs:treatmentFetchError:]


TRISystemCovariates : NSObject <TRISystemCovariateProviding>
  // instance methods
  -[TRISystemCovariates initWithPaths:]
  -[TRISystemCovariates objectForKey:]
  -[TRISystemCovariates .cxx_destruct]
  -[TRISystemCovariates dictionary]
  -[TRISystemCovariates tri_contextValueWithName:]
  -[TRISystemCovariates getContextValueWithName:]


TRIRecurrentScheduleFetchRollbacksTask : TRIBaseTask <TRITask>
 @property  int taskType
 @property  NSString *taskName
 @property  NSArray *tags
 @property  NSDate *startTime
 @property  NSArray *dependencies
 @property  <TRITaskQueueStateProviding> *stateProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TRIRecurrentScheduleFetchRollbacksTask supportsSecureCoding]
  +[TRIRecurrentScheduleFetchRollbacksTask taskWithAttribution:]
  +[TRIRecurrentScheduleFetchRollbacksTask parseFromData:]

  // instance methods
  -[TRIRecurrentScheduleFetchRollbacksTask taskType]
  -[TRIRecurrentScheduleFetchRollbacksTask initWithTaskAttribution:isRepeatedInstance:]
  -[TRIRecurrentScheduleFetchRollbacksTask initWithCoder:]
  -[TRIRecurrentScheduleFetchRollbacksTask _nextRecurrentTaskUsingContext:]
  -[TRIRecurrentScheduleFetchRollbacksTask _asPersistedTask]
  -[TRIRecurrentScheduleFetchRollbacksTask _shouldScheduleUsingContext:withTaskQueue:]
  -[TRIRecurrentScheduleFetchRollbacksTask .cxx_destruct]
  -[TRIRecurrentScheduleFetchRollbacksTask runUsingContext:withTaskQueue:]
  -[TRIRecurrentScheduleFetchRollbacksTask _experimentsExistUsingContext:]
  -[TRIRecurrentScheduleFetchRollbacksTask isEqual:]
  -[TRIRecurrentScheduleFetchRollbacksTask serialize]
  -[TRIRecurrentScheduleFetchRollbacksTask _fetchRollbacksTaskUsingContext:]
  -[TRIRecurrentScheduleFetchRollbacksTask requiredCapabilities:]
  -[TRIRecurrentScheduleFetchRollbacksTask encodeWithCoder:]
  -[TRIRecurrentScheduleFetchRollbacksTask tags]


TRIAggregateFetchRecordsProgressGuardedData : NSObject
  // instance methods
  -[TRIAggregateFetchRecordsProgressGuardedData .cxx_destruct]


TRIAggregateFetchRecordsProgress : NSObject
  // instance methods
  -[TRIAggregateFetchRecordsProgress .cxx_destruct]
  -[TRIAggregateFetchRecordsProgress fractionCompleted]
  -[TRIAggregateFetchRecordsProgress initWithProgressBlock:]
  -[TRIAggregateFetchRecordsProgress _issueCurrentProgressWithGuardedData:]
  -[TRIAggregateFetchRecordsProgress _fractionCompletedWithGuardedData:]
  -[TRIAggregateFetchRecordsProgress registerRecordId:withExpectedSize:]
  -[TRIAggregateFetchRecordsProgress unregisterRecordId:]
  -[TRIAggregateFetchRecordsProgress setFractionCompleted:forRecordId:]
  -[TRIAggregateFetchRecordsProgress setComplete]


TRIDeferralNotifier : NSObject
  // class methods
  +[TRIDeferralNotifier forwardDeferralsFromMonitoredActivity:usingDarwinNotificationName:whileExecutingBlock:]


TRIFetchSingleRolloutNotificationTask : TRIBaseTask <TRIRetryableTask, TRIMetricsProviding>
 @property  int retryCount
 @property  BOOL wasDeferred
 @property  int taskType
 @property  NSString *taskName
 @property  NSArray *tags
 @property  NSDate *startTime
 @property  NSArray *dependencies
 @property  <TRITaskQueueStateProviding> *stateProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TRIFetchSingleRolloutNotificationTask supportsSecureCoding]
  +[TRIFetchSingleRolloutNotificationTask parseFromData:]
  +[TRIFetchSingleRolloutNotificationTask taskWithDeployment:taskAttributing:]

  // instance methods
  -[TRIFetchSingleRolloutNotificationTask taskType]
  -[TRIFetchSingleRolloutNotificationTask initWithCoder:]
  -[TRIFetchSingleRolloutNotificationTask _asPersistedTask]
  -[TRIFetchSingleRolloutNotificationTask trialSystemTelemetry]
  -[TRIFetchSingleRolloutNotificationTask .cxx_destruct]
  -[TRIFetchSingleRolloutNotificationTask runUsingContext:withTaskQueue:]
  -[TRIFetchSingleRolloutNotificationTask dimensions]
  -[TRIFetchSingleRolloutNotificationTask wasDeferred]
  -[TRIFetchSingleRolloutNotificationTask isEqual:]
  -[TRIFetchSingleRolloutNotificationTask setWasDeferred:]
  -[TRIFetchSingleRolloutNotificationTask serialize]
  -[TRIFetchSingleRolloutNotificationTask metrics]
  -[TRIFetchSingleRolloutNotificationTask runEnqueueHandlerUsingContext:]
  -[TRIFetchSingleRolloutNotificationTask initWithDeployment:taskAttributing:]
  -[TRIFetchSingleRolloutNotificationTask setRetryCount:]
  -[TRIFetchSingleRolloutNotificationTask retryCount]
  -[TRIFetchSingleRolloutNotificationTask runDequeueHandlerUsingContext:]
  -[TRIFetchSingleRolloutNotificationTask requiredCapabilities:]
  -[TRIFetchSingleRolloutNotificationTask encodeWithCoder:]
  -[TRIFetchSingleRolloutNotificationTask tags]


TRITaskUtils : NSObject
  // class methods
  +[TRITaskUtils addAttribution:toTaskTags:]


TRICKOpCancelingGuardedData : NSObject
  // instance methods
  -[TRICKOpCancelingGuardedData .cxx_destruct]


TRICancelableCKOperation : NSObject <TRIFetchOpCanceling>
 @property  BOOL isCanceled

  // instance methods
  -[TRICancelableCKOperation isCanceled]
  -[TRICancelableCKOperation .cxx_destruct]
  -[TRICancelableCKOperation addOperation:]
  -[TRICancelableCKOperation initWithOperation:]
  -[TRICancelableCKOperation cancel]


TRIAssetDiffQueryGuardedData : NSObject
  // instance methods
  -[TRIAssetDiffQueryGuardedData .cxx_destruct]


TRICKNativeArtifactProvider : NSObject <TRIArtifactProvider>
 @property  CKContainer *container
 @property  CKRecordZoneID *zoneID
 @property  NSString *teamId
 @property  <TRIDateProviding> *dateProvider
 @property  <TRINamespaceDescriptorProviding> *namespaceDescriptorProvider
 @property  NSString *bundleId
 @property  TRICKQueryLog *queryLog

  // class methods
  +[TRICKNativeArtifactProvider providerForContainer:teamId:bundleId:dateProvider:namespaceDescriptorProvider:serverContext:]
  +[TRICKNativeArtifactProvider containerForIdentifier:serverContext:]
  +[TRICKNativeArtifactProvider cloudkitIdentifierForContainer:]
  +[TRICKNativeArtifactProvider recordZoneForContainerIdentifier:teamId:]
  +[TRICKNativeArtifactProvider fetchRetryDateFromErrorAndOptions:options:]
  +[TRICKNativeArtifactProvider mockSQLiteContainerWithIdentifier:serverContext:failureInjectionDelegate:]
  +[TRICKNativeArtifactProvider containerFromCkContainer:]
  +[TRICKNativeArtifactProvider isActivityDeferralError:]

  // instance methods
  -[TRICKNativeArtifactProvider bundleId]
  -[TRICKNativeArtifactProvider dateProvider]
  -[TRICKNativeArtifactProvider fetchExperimentNotificationsWithNamespaceNames:rollbacksOnly:lastFetchDateOverride:options:completion:]
  -[TRICKNativeArtifactProvider fetchExperimentWithLatestDeploymentForExperimentId:options:completion:]
  -[TRICKNativeArtifactProvider fetchDiffsWithRecordIds:options:perRecordProgress:perRecordCompletionBlockOnSuccess:perRecordCompletionBlockOnError:completion:]
  -[TRICKNativeArtifactProvider teamId]
  -[TRICKNativeArtifactProvider fetchRecordIdsForAssetsWithIds:options:completion:]
  -[TRICKNativeArtifactProvider fetchExperimentWithExperimentDeployment:options:completion:]
  -[TRICKNativeArtifactProvider container]
  -[TRICKNativeArtifactProvider .cxx_destruct]
  -[TRICKNativeArtifactProvider queryOperationForRecordType:predicate:sortDescriptors:desiredKeys:options:recordFetchedBlock:queryCompletionBlock:]
  -[TRICKNativeArtifactProvider _fetchRolloutNotificationsWithCursor:options:completion:]
  -[TRICKNativeArtifactProvider _fetchRecordIdsForAssetsWithIds:options:cursor:cancelableOp:resultBuffer:completion:]
  -[TRICKNativeArtifactProvider zoneID]
  -[TRICKNativeArtifactProvider _fetchExperimentWithExperimentId:deploymentId:options:completion:]
  -[TRICKNativeArtifactProvider initWithCloudKitContainer:zoneId:teamId:bundleId:dateProvider:namespaceDescriptorProvider:]
  -[TRICKNativeArtifactProvider _fetchRolloutNotificationWithRolloutId:deploymentId:options:completion:]
  -[TRICKNativeArtifactProvider _fetchNotificationsWithQueryType:withCursor:withNamespaceNames:sinceDate:options:resultsHandler:]
  -[TRICKNativeArtifactProvider fetchRolloutNotificationWithLatestDeploymentForRolloutId:options:completion:]
  -[TRICKNativeArtifactProvider namespaceDescriptorProvider]
  -[TRICKNativeArtifactProvider _fetchRolloutNotificationsWithCursor:options:sinceDate:namespaceNames:resultsHandler:]
  -[TRICKNativeArtifactProvider fetchExperimentNotificationsForLimitedCarryExperimentWithManager:options:rollbacksOnly:completion:]
  -[TRICKNativeArtifactProvider fetchFactorPackSetWithId:options:completion:]
  -[TRICKNativeArtifactProvider fetchTreatmentWithId:options:completion:]
  -[TRICKNativeArtifactProvider fetchRolloutNotificationWithDeployment:options:completion:]
  -[TRICKNativeArtifactProvider configurationFromOptions:]
  -[TRICKNativeArtifactProvider fetchAssetsWithRecordIds:options:perRecordProgress:perRecordCompletionBlockOnSuccess:perRecordCompletionBlockOnError:completion:]
  -[TRICKNativeArtifactProvider fetchDiffSourceRecordIdsWithTargetAssetIds:isAcceptableSourceAssetId:options:completion:]
  -[TRICKNativeArtifactProvider queryOperationWithCursor:desiredKeys:options:recordFetchedBlock:queryCompletionBlock:]
  -[TRICKNativeArtifactProvider fetchAssetsWithIndexes:fromTreatmentWithRecordId:options:progress:completion:]
  -[TRICKNativeArtifactProvider queryOperationForRecordType:predicate:desiredKeys:options:recordFetchedBlock:queryCompletionBlock:]
  -[TRICKNativeArtifactProvider fetchRolloutNotificationsDateDescendingWithOptions:completion:]
  -[TRICKNativeArtifactProvider _fetchExperimentsWithCursor:withNamespaceNames:sinceDate:fetchRollbacksOnly:options:resultsHandler:]
  -[TRICKNativeArtifactProvider queryLog]
  -[TRICKNativeArtifactProvider fetchRolloutNotificationsDateAscendingWithOptions:lastFetchDateOverride:namespaceNames:completion:]


TRIFetchOnDemandFactorsTaskGuardedData : NSObject
  // instance methods
  -[TRIFetchOnDemandFactorsTaskGuardedData .cxx_destruct]


TRIFetchOnDemandFactorsTask : TRIBaseTask <TRIRetryableTask, TRIMetricsProviding, TRICancellableTask>
 @property  TRIRolloutDeployment *deployment
 @property  NSString *experimentId
 @property  <TRITaskAttributing> *taskAttribution
 @property  BOOL isCurrentlyExecuting
 @property  int retryCount
 @property  BOOL wasDeferred
 @property  int taskType
 @property  NSString *taskName
 @property  NSArray *tags
 @property  NSDate *startTime
 @property  NSArray *dependencies
 @property  <TRITaskQueueStateProviding> *stateProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TRIFetchOnDemandFactorsTask supportsSecureCoding]
  +[TRIFetchOnDemandFactorsTask parseFromData:]
  +[TRIFetchOnDemandFactorsTask taskWithAssetIndexesByTreatment:experimentId:assetIdsByFactorPack:rolloutFactorNames:rolloutDeployment:namespaceName:taskAttributing:notificationKey:]

  // instance methods
  -[TRIFetchOnDemandFactorsTask taskType]
  -[TRIFetchOnDemandFactorsTask initWithCoder:]
  -[TRIFetchOnDemandFactorsTask _logOnDemandFactor:metricName:namespaceName:client:error:]
  -[TRIFetchOnDemandFactorsTask deployment]
  -[TRIFetchOnDemandFactorsTask _asPersistedTask]
  -[TRIFetchOnDemandFactorsTask experimentId]
  -[TRIFetchOnDemandFactorsTask trialSystemTelemetry]
  -[TRIFetchOnDemandFactorsTask .cxx_destruct]
  -[TRIFetchOnDemandFactorsTask runUsingContext:withTaskQueue:]
  -[TRIFetchOnDemandFactorsTask dimensions]
  -[TRIFetchOnDemandFactorsTask wasDeferred]
  -[TRIFetchOnDemandFactorsTask isEqual:]
  -[TRIFetchOnDemandFactorsTask setWasDeferred:]
  -[TRIFetchOnDemandFactorsTask serialize]
  -[TRIFetchOnDemandFactorsTask metrics]
  -[TRIFetchOnDemandFactorsTask _addDimension:]
  -[TRIFetchOnDemandFactorsTask setRetryCount:]
  -[TRIFetchOnDemandFactorsTask retryCount]
  -[TRIFetchOnDemandFactorsTask requiredCapabilities:]
  -[TRIFetchOnDemandFactorsTask encodeWithCoder:]
  -[TRIFetchOnDemandFactorsTask _addMetric:]
  -[TRIFetchOnDemandFactorsTask tags]
  -[TRIFetchOnDemandFactorsTask taskAttribution]
  -[TRIFetchOnDemandFactorsTask _telemetryForFactorPackIds:rolloutDeployment:treatmentIds:experimentId:namespaceName:taskAttributing:]
  -[TRIFetchOnDemandFactorsTask initWithAssetIndexesByTreatment:experimentId:assetIdsByFactorPack:rolloutFactorNames:rolloutDeployment:namespaceName:taskAttributing:notificationKey:]
  -[TRIFetchOnDemandFactorsTask _completeTaskWithStatus:earliestRetryDate:error:aggregateProgress:context:]
  -[TRIFetchOnDemandFactorsTask _currentTaskStatus]
  -[TRIFetchOnDemandFactorsTask _planForFetchingAssetsFromTreatmentRecordsWithContext:downloadOptions:updatingAggregateProgress:]
  -[TRIFetchOnDemandFactorsTask _planForFetchingAssetDiffsWithContext:downloadOptions:updatingAggregateProgress:nonDiffableAssetIds:]
  -[TRIFetchOnDemandFactorsTask _planForFetchingAssetsFromFactorPacksWithContext:assetDiffFetchPlan:requiredAssetIds:downloadOptions:updatingAggregateProgress:]
  -[TRIFetchOnDemandFactorsTask _requiredDiskSpaceForPlan:]
  -[TRIFetchOnDemandFactorsTask _fetchOptionsWithDownloadOptions:paths:]
  -[TRIFetchOnDemandFactorsTask _fetchDiffsFromAssetDiffRecordsWithContext:plan:aggregateProgress:downloadSize:options:]
  -[TRIFetchOnDemandFactorsTask _asyncFetchAssetsFromAssetRecordsWithContext:plan:aggregateProgress:downloadSize:options:group:]
  -[TRIFetchOnDemandFactorsTask _asyncFetchAssetsFromTreatmentRecordsWithContext:plan:aggregateProgress:downloadSize:downloadOptions:group:]
  -[TRIFetchOnDemandFactorsTask _assetIdsFromKeysInDictionary:]
  -[TRIFetchOnDemandFactorsTask _updateFactorPacksByMergingAssetsWithIds:paths:]
  -[TRIFetchOnDemandFactorsTask _saveIndexedAssetURLs:withTreatmentId:usingAssetMetadata:downloadOptions:paths:downloadSize:error:]
  -[TRIFetchOnDemandFactorsTask removeDownloadableFactorNames:]
  -[TRIFetchOnDemandFactorsTask _saveNamedAssetURLs:usingAssetMetadata:downloadOptions:downloadSize:paths:error:]
  -[TRIFetchOnDemandFactorsTask willBeCancelledByTaskQueue:withContext:]
  -[TRIFetchOnDemandFactorsTask isCurrentlyExecuting]


TRITaskDatabase : NSObject <TRITaskPersisting>
  // instance methods
  -[TRITaskDatabase writeTransactionWithFailableBlock:]
  -[TRITaskDatabase updateTaskWithTaskId:startDate:task:]
  -[TRITaskDatabase addTask:startTime:tags:dependencies:error:]
  -[TRITaskDatabase .cxx_destruct]
  -[TRITaskDatabase idForTask:]
  -[TRITaskDatabase init]
  -[TRITaskDatabase tasksDependentOnTask:]
  -[TRITaskDatabase tasks]
  -[TRITaskDatabase removeTaskWithId:cleanupBlock:]
  -[TRITaskDatabase taskIdsWithTag:]
  -[TRITaskDatabase enumerateTasksWithTagsIntersectingTagSet:block:]
  -[TRITaskDatabase _checkTaskId:IsPresent:transaction:]
  -[TRITaskDatabase directDependenciesOfTaskWithId:]
  -[TRITaskDatabase initWithDatabase:taskSetProvider:]
  -[TRITaskDatabase readTransactionWithFailableBlock:]


TRIDeactivateTreatmentTask : TRIExperimentBaseTask <TRIRetryableTask>
 @property  BOOL failOnUnrecognizedExperiment
 @property  unsigned long triggerEvent
 @property  int retryCount
 @property  BOOL wasDeferred
 @property  int taskType
 @property  NSString *taskName
 @property  NSArray *tags
 @property  NSDate *startTime
 @property  NSArray *dependencies
 @property  <TRITaskQueueStateProviding> *stateProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TRIDeactivateTreatmentTask taskWithExperimentId:startTime:failOnUnrecognizedExperiment:triggerEvent:]
  +[TRIDeactivateTreatmentTask supportsSecureCoding]
  +[TRIDeactivateTreatmentTask parseFromData:]
  +[TRIDeactivateTreatmentTask taskWithExperimentId:failOnUnrecognizedExperiment:]

  // instance methods
  -[TRIDeactivateTreatmentTask taskType]
  -[TRIDeactivateTreatmentTask initWithCoder:]
  -[TRIDeactivateTreatmentTask setStartTime:]
  -[TRIDeactivateTreatmentTask _asPersistedTask]
  -[TRIDeactivateTreatmentTask setTriggerEvent:]
  -[TRIDeactivateTreatmentTask .cxx_destruct]
  -[TRIDeactivateTreatmentTask triggerEvent]
  -[TRIDeactivateTreatmentTask _purgeRolloutLayerIfNecessaryWithRecord:fromAppContainer:paths:]
  -[TRIDeactivateTreatmentTask runUsingContext:withTaskQueue:]
  -[TRIDeactivateTreatmentTask wasDeferred]
  -[TRIDeactivateTreatmentTask setWasDeferred:]
  -[TRIDeactivateTreatmentTask startTime]
  -[TRIDeactivateTreatmentTask serialize]
  -[TRIDeactivateTreatmentTask _categoricalValueForTriggerEvent:]
  -[TRIDeactivateTreatmentTask failOnUnrecognizedExperiment]
  -[TRIDeactivateTreatmentTask setFailOnUnrecognizedExperiment:]
  -[TRIDeactivateTreatmentTask setRetryCount:]
  -[TRIDeactivateTreatmentTask retryCount]
  -[TRIDeactivateTreatmentTask _notifyUpdatedShadowEvaluationWithExperimentRecord:context:]
  -[TRIDeactivateTreatmentTask requiredCapabilities:]
  -[TRIDeactivateTreatmentTask encodeWithCoder:]


TRIFetchMultipleExperimentNotificationsTask : TRIBaseTask <TRIRetryableTask, TRIMetricsProviding>
 @property  int retryCount
 @property  BOOL wasDeferred
 @property  int taskType
 @property  NSString *taskName
 @property  NSArray *tags
 @property  NSDate *startTime
 @property  NSArray *dependencies
 @property  <TRITaskQueueStateProviding> *stateProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TRIFetchMultipleExperimentNotificationsTask supportsSecureCoding]
  +[TRIFetchMultipleExperimentNotificationsTask parseFromData:]
  +[TRIFetchMultipleExperimentNotificationsTask taskWithStartingFetchDateOverride:namespaceNames:taskAttributing:rollbacksOnly:limitedCarryOnly:]

  // instance methods
  -[TRIFetchMultipleExperimentNotificationsTask taskType]
  -[TRIFetchMultipleExperimentNotificationsTask _checkIfAnyTreatmentPresent:usingContext:]
  -[TRIFetchMultipleExperimentNotificationsTask initWithCoder:]
  -[TRIFetchMultipleExperimentNotificationsTask initWithStartingFetchDateOverride:namespaceNames:taskAttributing:rollbacksOnly:limitedCarryOnly:]
  -[TRIFetchMultipleExperimentNotificationsTask _asPersistedTask]
  -[TRIFetchMultipleExperimentNotificationsTask trialSystemTelemetry]
  -[TRIFetchMultipleExperimentNotificationsTask .cxx_destruct]
  -[TRIFetchMultipleExperimentNotificationsTask runUsingContext:withTaskQueue:]
  -[TRIFetchMultipleExperimentNotificationsTask _getNextTaskForExperiment:database:taskQueue:]
  -[TRIFetchMultipleExperimentNotificationsTask dimensions]
  -[TRIFetchMultipleExperimentNotificationsTask initWithStartingFetchDateOverride:container:team:rollbacksOnly:withNamespaceNames:]
  -[TRIFetchMultipleExperimentNotificationsTask wasDeferred]
  -[TRIFetchMultipleExperimentNotificationsTask isEqual:]
  -[TRIFetchMultipleExperimentNotificationsTask setWasDeferred:]
  -[TRIFetchMultipleExperimentNotificationsTask taskName]
  -[TRIFetchMultipleExperimentNotificationsTask _processExperiment:experimentDatabase:namespaceDatabase:taskQueue:paths:]
  -[TRIFetchMultipleExperimentNotificationsTask serialize]
  -[TRIFetchMultipleExperimentNotificationsTask _nameForNotificationType:]
  -[TRIFetchMultipleExperimentNotificationsTask updateStatusForNamespacesWithContext:]
  -[TRIFetchMultipleExperimentNotificationsTask metrics]
  -[TRIFetchMultipleExperimentNotificationsTask _addDimension:]
  -[TRIFetchMultipleExperimentNotificationsTask _addNextTask:]
  -[TRIFetchMultipleExperimentNotificationsTask nextTaskCount]
  -[TRIFetchMultipleExperimentNotificationsTask setRetryCount:]
  -[TRIFetchMultipleExperimentNotificationsTask retryCount]
  -[TRIFetchMultipleExperimentNotificationsTask requiredCapabilities:]
  -[TRIFetchMultipleExperimentNotificationsTask encodeWithCoder:]
  -[TRIFetchMultipleExperimentNotificationsTask _addMetric:]
  -[TRIFetchMultipleExperimentNotificationsTask tags]


TRIPushChannelId : NSObject
 @property  NSString *identifier
 @property  int populationType
 @property  NSString *base64ChannelId

  // class methods
  +[TRIPushChannelId _writeToByte:fromHexByteString:]
  +[TRIPushChannelId identifierByRemovingTestPrefixFromIdentifier:]
  +[TRIPushChannelId _base64ChannelIdForIdentifier:populationType:]

  // instance methods
  -[TRIPushChannelId initWithIdentifier:]
  -[TRIPushChannelId .cxx_destruct]
  -[TRIPushChannelId base64ChannelId]
  -[TRIPushChannelId initWithExperimentId:]
  -[TRIPushChannelId isEqual:]
  -[TRIPushChannelId identifier]
  -[TRIPushChannelId populationType]
  -[TRIPushChannelId initWithRolloutDeployment:]
  -[TRIPushChannelId initWithBase64EncodedString:]
  -[TRIPushChannelId isEqualToPushChannelId:]


TRIServerContext : NSObject
 @property  TRIDatabase *underlyingDatabase
 @property  <TRITaskQueuing> *taskQueue
 @property  <TRIPushServiceConnectionMultiplexing> *pushServiceMuxer
 @property  <TRIPaths> *paths
 @property  TRIExperimentDatabase *experimentDatabase
 @property  TRIActivationEventDatabase *activationEventDatabase
 @property  TRIExperimentHistoryDatabase *experimentHistoryDatabase
 @property  TRINamespaceDatabase *namespaceDatabase
 @property  TRIRolloutDatabase *rolloutDatabase
 @property  TRIMLRuntimeEvaluationHistoryDatabase *evaluationHistoryDatabase
 @property  TRITaskDatabase *taskDatabase
 @property  TRIClient *client
 @property  TRIKVStore *keyValueStore
 @property  TRIContentTracker *contentTracker
 @property  TRISQLiteCKDatabase *fakeCKDatabase
 @property  TRISQLiteCKDatabaseFailureInjectionDelegate *failureInjectionDelegate
 @property  TRILimitedCarryProfileManager *limitedCarryManager
 @property  <TRIXPCActivityManagementProtocol> *xpcActivityManager
 @property  BOOL useCKNative

  // instance methods
  -[TRIServerContext namespaceDatabase]
  -[TRIServerContext setFailureInjectionDelegate:]
  -[TRIServerContext xpcActivityManager]
  -[TRIServerContext logErrorMetric:]
  -[TRIServerContext setFakeCKDatabase:]
  -[TRIServerContext useCKNative]
  -[TRIServerContext initWithPaths:client:storageManagement:]
  -[TRIServerContext .cxx_destruct]
  -[TRIServerContext ensureFakeCKDatabase]
  -[TRIServerContext taskQueue]
  -[TRIServerContext rolloutDatabase]
  -[TRIServerContext setPushServiceMuxer:]
  -[TRIServerContext contentTracker]
  -[TRIServerContext init]
  -[TRIServerContext fakeCKDatabase]
  -[TRIServerContext activationEventDatabase]
  -[TRIServerContext evaluationHistoryDatabase]
  -[TRIServerContext taskDatabase]
  -[TRIServerContext setUseCKNative:]
  -[TRIServerContext paths]
  -[TRIServerContext setTaskQueue:]
  -[TRIServerContext setLimitedCarryManager:]
  -[TRIServerContext client]
  -[TRIServerContext underlyingDatabase]
  -[TRIServerContext experimentDatabase]
  -[TRIServerContext _logInitErrorWithClient:message:]
  -[TRIServerContext setXpcActivityManager:]
  -[TRIServerContext initWithPaths:client:storageManagement:xpcActivityManagement:]
  -[TRIServerContext keyValueStore]
  -[TRIServerContext experimentHistoryDatabase]
  -[TRIServerContext pushServiceMuxer]
  -[TRIServerContext failureInjectionDelegate]
  -[TRIServerContext limitedCarryManager]


TRIPushServiceConnection : NSObject <APSConnectionDelegate, TRIPushServiceChannelSubscribing>
 @property  NSObject<OS_dispatch_queue> *pushServiceQueue
 @property  NSObject<OS_dispatch_queue> *subscriptionRequestQueue
 @property  <TRIPushServiceConnectionDelegate> *triDelegate
 @property  APSConnection *connection
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TRIPushServiceConnection connection:channelSubscriptionsFailedWithFailures:]
  -[TRIPushServiceConnection connection:didReceivePublicToken:]
  -[TRIPushServiceConnection _publicChannelForChannelId:]
  -[TRIPushServiceConnection connection:didReceiveIncomingMessage:]
  -[TRIPushServiceConnection pushServiceQueue]
  -[TRIPushServiceConnection .cxx_destruct]
  -[TRIPushServiceConnection subscribeToChannel:]
  -[TRIPushServiceConnection subscribedChannels]
  -[TRIPushServiceConnection _unsubscribeFromChannel:]
  -[TRIPushServiceConnection _subscribedChannelCount]
  -[TRIPushServiceConnection connection]
  -[TRIPushServiceConnection triDelegate]
  -[TRIPushServiceConnection initWithDelegate:]
  -[TRIPushServiceConnection dealloc]
  -[TRIPushServiceConnection _subscribeToChannel:]
  -[TRIPushServiceConnection unsubscribeFromChannel:]
  -[TRIPushServiceConnection subscriptionRequestQueue]


TRINotificationReactionChecker : NSObject <TRINotificationReactionCheckerProtocol>
  // instance methods
  -[TRINotificationReactionChecker .cxx_destruct]
  -[TRINotificationReactionChecker _isOutdatedDeploymentDate:]
  -[TRINotificationReactionChecker _isExistingDeployment:]
  -[TRINotificationReactionChecker reactionForHotfixDeployment:hotfixDeploymentDate:]
  -[TRINotificationReactionChecker reactionForRollbackExperimentId:]
  -[TRINotificationReactionChecker initWithDateProvider:rolloutDatabase:experimentDatabase:]


TRIUrgentRollbackScheduler : NSObject <TRIUrgentRollbackSchedulerProtocol>
 @property  <TRITaskQueuing> *queue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TRIUrgentRollbackScheduler .cxx_destruct]
  -[TRIUrgentRollbackScheduler queue]
  -[TRIUrgentRollbackScheduler initWithTaskQueue:]
  -[TRIUrgentRollbackScheduler scheduleUrgentRollbackForExperiment:]


TRIFactorPackStorage : NSObject
  // instance methods
  -[TRIFactorPackStorage initWithPaths:]
  -[TRIFactorPackStorage legacyPathForFactorPackWithId:namespaceName:]
  -[TRIFactorPackStorage loadParsedFactorPackWithId:namespaceName:]
  -[TRIFactorPackStorage _removeUnreferencedFactorPackSetsWithParentDir:removedCount:]
  -[TRIFactorPackStorage .cxx_destruct]
  -[TRIFactorPackStorage loadFactorPackWithId:namespaceName:]
  -[TRIFactorPackStorage _legacyParentDirForFactorPackWithNamespaceName:]
  -[TRIFactorPackStorage _removeAssetsWithFactorNames:copyingModifiedFactorPackWithPath:appendingToPathsToRemove:tempDirRef:]
  -[TRIFactorPackStorage _collectChildrenOfParentDir:]
  -[TRIFactorPackStorage _pathForFactorPackWithId:namespaceName:]
  -[TRIFactorPackStorage _legacyPathForFactorPackWithId:namespaceName:]
  -[TRIFactorPackStorage _removeUnreferencedFactorPackSetsWithNamespaceName:removedCount:]
  -[TRIFactorPackStorage init]
  -[TRIFactorPackStorage _linkAssetsUpdatingFactorLevel:fromFactorPackWithId:usingAssetStore:currentFactorPackPath:futureFactorPackPath:]
  -[TRIFactorPackStorage _parentDirForFactorPackWithNamespaceName:]
  -[TRIFactorPackStorage reportFactorPackDiskUsagesUsingContext:]
  -[TRIFactorPackStorage loadFactorPackWithDir:]
  -[TRIFactorPackStorage removeUnreferencedFactorPacksWithRemovedCount:]
  -[TRIFactorPackStorage saveFactorPack:factorPackByNamePath:factorPackByIdPath:]
  -[TRIFactorPackStorage loadParsedFactorPackWithDir:]
  -[TRIFactorPackStorage updateSavedFactorPackWithId:namespaceName:linkingNewAssetIds:]
  -[TRIFactorPackStorage _reportFactorPackDiskUsagesWithNamespaceName:namespaceDirName:context:]
  -[TRIFactorPackStorage pathForFactorPackWithId:namespaceName:]
  -[TRIFactorPackStorage _linkAssetWithId:assetStore:forFactorName:currentFactorPackPath:futureFactorPackPath:]
  -[TRIFactorPackStorage _linkAssetsWithIds:copyingModifiedFactorPackWithPath:tempDirRef:]
  -[TRIFactorPackStorage initWithPaths:extractor:]
  -[TRIFactorPackStorage updateSavedFactorPackWithId:namespaceName:deletingAssetsWithFactorNames:inUseAssetBehavior:]


TRIDisenrollRolloutTask : TRIBaseTask <TRITask, TRIMetricsProviding>
 @property  int taskType
 @property  NSString *taskName
 @property  NSArray *tags
 @property  NSDate *startTime
 @property  NSArray *dependencies
 @property  <TRITaskQueueStateProviding> *stateProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TRIDisenrollRolloutTask supportsSecureCoding]
  +[TRIDisenrollRolloutTask parseFromData:]
  +[TRIDisenrollRolloutTask taskWithRolloutId:]

  // instance methods
  -[TRIDisenrollRolloutTask taskType]
  -[TRIDisenrollRolloutTask initWithCoder:]
  -[TRIDisenrollRolloutTask _asPersistedTask]
  -[TRIDisenrollRolloutTask trialSystemTelemetry]
  -[TRIDisenrollRolloutTask .cxx_destruct]
  -[TRIDisenrollRolloutTask runUsingContext:withTaskQueue:]
  -[TRIDisenrollRolloutTask dimensions]
  -[TRIDisenrollRolloutTask init]
  -[TRIDisenrollRolloutTask isEqual:]
  -[TRIDisenrollRolloutTask serialize]
  -[TRIDisenrollRolloutTask metrics]
  -[TRIDisenrollRolloutTask requiredCapabilities:]
  -[TRIDisenrollRolloutTask encodeWithCoder:]
  -[TRIDisenrollRolloutTask tags]
  -[TRIDisenrollRolloutTask initWithRolloutId:]


TRIImmediateDownloadTelemetryGenerator : NSObject
  // instance methods
  -[TRIImmediateDownloadTelemetryGenerator .cxx_destruct]
  -[TRIImmediateDownloadTelemetryGenerator latencyMetric]
  -[TRIImmediateDownloadTelemetryGenerator rolloutSystemTelemetry]
  -[TRIImmediateDownloadTelemetryGenerator initWithLatencyMilliseconds:allowExpensiveNetworking:existingTelemetry:]


TRIAssetStore : NSObject
  // class methods
  +[TRIAssetStore shortHashForAssetIdentifier:]
  +[TRIAssetStore _fileSizeInBytesForPath:]

  // instance methods
  -[TRIAssetStore initWithPaths:]
  -[TRIAssetStore _overwriteRenameAsAtomicallyAsPossibleWithSrc:dest:]
  -[TRIAssetStore _hardLinkCountForFileWithPath:]
  -[TRIAssetStore _fixupPermissionsOnPath:permissionBits:]
  -[TRIAssetStore _removeDeadSymlinksWithFlockWitness:numRemoved:]
  -[TRIAssetStore _pathForAssetContentWithIdentifier:]
  -[TRIAssetStore _collectDeadSymlinks]
  -[TRIAssetStore saveAssetWithIdentifier:builtFromAssetWithIdentifier:patchFilename:metadata:error:]
  -[TRIAssetStore _removeAssetWithIdentifier:flockWitness:deletedAssetSize:dryRun:]
  -[TRIAssetStore .cxx_destruct]
  -[TRIAssetStore _isValidTargetForSymlink:assetIdentifier:]
  -[TRIAssetStore initWithPaths:extractor:patcher:monitoredActivity:]
  -[TRIAssetStore _acquireLockfileAndRunBlock:]
  -[TRIAssetStore _fixFileProtectionForFileURL:]
  -[TRIAssetStore _requireAssetStoreTempDir]
  -[TRIAssetStore collectGarbageOlderThanNumScans:ignoreRecentlyCreatedAssets:deletedAssetSize:deletedAssetIds:]
  -[TRIAssetStore saveAssetWithIdentifier:assetURL:metadata:error:]
  -[TRIAssetStore init]
  -[TRIAssetStore _incrementUnrefAgeForAssetWithIdentifier:newValue:dryRun:]
  -[TRIAssetStore _isDirectoryAtPath:matchingAssetContentAtPath:]
  -[TRIAssetStore removeAssetWithIdentifier:]
  -[TRIAssetStore _enumerateAssetDirsUsingBlock:]
  -[TRIAssetStore _isFileAtPath:matchingAssetContentAtPath:]
  -[TRIAssetStore _saveFileAssetWithIdentifier:assetFilename:]
  -[TRIAssetStore _nonAtomicOverwriteWithSrc:dest:finalPermissionBits:]
  -[TRIAssetStore _collectUnreferencedAssetsIgnoringLinkTargetsByAssetId:ignoreRecentlyCreatedAssets:]
  -[TRIAssetStore _clearUnrefAgeForAssetWithIdentifier:]
  -[TRIAssetStore _pathForAssetDirWithIdentifier:]
  -[TRIAssetStore removableAssetsSizeOlderThanNumScans:linkTargetsToIgnoreByAssetId:]
  -[TRIAssetStore linkAssetWithIdentifier:toCurrentPath:futurePath:]
  -[TRIAssetStore initWithPaths:monitoredActivity:]
  -[TRIAssetStore initWithPaths:extractor:patcher:]
  -[TRIAssetStore _removePaths:numRemoved:]
  -[TRIAssetStore hasAssetWithIdentifier:type:]
  -[TRIAssetStore _saveFileAssetWithIdentifier:assetFilename:workingTempDirectory:]
  -[TRIAssetStore linkAssetWithIdentifier:toPath:]
  -[TRIAssetStore _addSymlinkFromAssetWithIdentifier:toPath:]
  -[TRIAssetStore _saveDirectoryAssetWithIdentifier:assetFilename:metadata:error:]
  -[TRIAssetStore collectGarbageOlderThanNumScans:deletedAssetSize:]
  -[TRIAssetStore _removeUnreferencedAssetsWithFlockWitness:olderThanAge:numRemoved:deletedAssetsSize:ignoreRecentlyCreatedAssets:dryRun:linkTargetsToIgnoreByAssetId:deletedAssetIds:]
  -[TRIAssetStore _forceRemoveItemAtPath:]
  -[TRIAssetStore _linkFileAssetWithIdentifier:toCurrentPath:futurePath:]
  -[TRIAssetStore _hardLinkCountForAssetWithIdentifier:]
  -[TRIAssetStore enumerateSavedAssetsUsingBlock:]
  -[TRIAssetStore removableAssetsSizeOlderThanNumScans:ignoreRecentlyCreatedAssets:linkTargetsToIgnoreByAssetId:deleteableAssetIds:]
  -[TRIAssetStore fixFileProtectionForAssetStoreFiles]
  -[TRIAssetStore _creationDateForAsset:]
  -[TRIAssetStore saveAssetWithIdentifier:assetData:type:]
  -[TRIAssetStore _pathForRefsToAssetWithIdentifier:]
  -[TRIAssetStore _linkDirectoryAssetWithIdentifier:toCurrentPath:futurePath:]
  -[TRIAssetStore setCreationDate:forAssetIdentifier:]
  -[TRIAssetStore _createTempDir]
  -[TRIAssetStore _collectGarbageOlderThanNumScans:deletedAssetSize:ignoreRecentlyCreatedAssets:dryRun:linkTargetsToIgnoreByAssetId:deletedAssetIds:]
  -[TRIAssetStore _moveDirectoryAssetFromDirectory:toLocationForAssetIdentifier:]


TRITreatmentBaseTask : TRIExperimentBaseTask
 @property  NSString *treatmentId
 @property  <TRITaskAttributing> *taskAttributing

  // instance methods
  -[TRITreatmentBaseTask trialSystemTelemetry]
  -[TRITreatmentBaseTask .cxx_destruct]
  -[TRITreatmentBaseTask dimensions]
  -[TRITreatmentBaseTask treatmentId]
  -[TRITreatmentBaseTask isEqual:]
  -[TRITreatmentBaseTask initWithExperiment:treatmentId:taskAttributing:]
  -[TRITreatmentBaseTask taskAttributing]
  -[TRITreatmentBaseTask metrics]


TRIXPCServices : NSObject
  // class methods
  +[TRIXPCServices registerAllServicesWithPromise:]


TRIRemoteAssetExtractor : NSObject <TRIAssetExtracting>
  // instance methods
  -[TRIRemoteAssetExtractor .cxx_destruct]
  -[TRIRemoteAssetExtractor init]
  -[TRIRemoteAssetExtractor extractArchiveFromFile:withArchiveName:toEmptyDirectory:postExtractionCompression:error:]
  -[TRIRemoteAssetExtractor initWithMonitoredActivity:]


TRIRolloutDatabase : NSObject
  // instance methods
  -[TRIRolloutDatabase initWithDatabase:]
  -[TRIRolloutDatabase writeTransactionWithFailableBlock:]
  -[TRIRolloutDatabase deactivateDeployment:usingTransaction:]
  -[TRIRolloutDatabase addNewRolloutWithRecord:]
  -[TRIRolloutDatabase .cxx_destruct]
  -[TRIRolloutDatabase enumerateRecordsUsingTransaction:block:]
  -[TRIRolloutDatabase _dataNoCopyFromStmt:columnName:]
  -[TRIRolloutDatabase _enumerateRecordsMatchingWhereClause:bind:prependingWithClause:usingTransaction:block:]
  -[TRIRolloutDatabase enumerateActiveRecordsWithVisibility:usingTransaction:block:]
  -[TRIRolloutDatabase deactivateDeploymentsWithRolloutId:deactivatedDeployment:deactivatedFactorPackSetId:usingTransaction:]
  -[TRIRolloutDatabase targetDeployment:toFactorPackSetId:targetingRuleIndex:usingTransaction:]
  -[TRIRolloutDatabase enumerateRecordsOverlappingNamespaces:usingTransaction:block:]
  -[TRIRolloutDatabase init]
  -[TRIRolloutDatabase removeRecordWithDeployment:usingRefCounting:]
  -[TRIRolloutDatabase setActiveFactorPackSetId:activeTargetingRuleIndex:forDeployment:usingTransaction:]
  -[TRIRolloutDatabase removeRecordWithDeployment:]
  -[TRIRolloutDatabase readTransactionWithFailableBlock:]
  -[TRIRolloutDatabase hasRecordReferencingFactorPackSetId:withReferenceType:]
  -[TRIRolloutDatabase setTargetedFactorPackSetId:targetedTargetingRuleIndex:forDeployment:usingTransaction:]
  -[TRIRolloutDatabase setStatus:forDeployment:usingTransaction:]
  -[TRIRolloutDatabase activateDeployment:withFactorPackSetId:targetingRuleIndex:deactivatedDeployments:deactivatedFactorPackSetIds:usingTransaction:]
  -[TRIRolloutDatabase recordWithDeployment:usingTransaction:]
  -[TRIRolloutDatabase enumerateRecordsWithRolloutId:usingTransaction:block:]


TRITripersistedExperimentArtifactRoot : TRIPBRootObject

TRIPersistedExperimentArtifact : TRIPBMessage
 @property  NSString *experimentId
 @property  BOOL hasExperimentId
 @property  int deploymentId
 @property  BOOL hasDeploymentId
 @property  int cloudKitContainer
 @property  BOOL hasCloudKitContainer
 @property  NSString *teamId
 @property  BOOL hasTeamId
 @property  int status
 @property  BOOL hasStatus
 @property  int type
 @property  BOOL hasType
 @property  int priority
 @property  BOOL hasPriority
 @property  int projectId
 @property  BOOL hasProjectId
 @property  NSData *encodedExperimentDefinition
 @property  BOOL hasEncodedExperimentDefinition
 @property  NSString *encodedExperimentDefinitionSignature
 @property  BOOL hasEncodedExperimentDefinitionSignature
 @property  NSData *publicCertificate
 @property  BOOL hasPublicCertificate
 @property  BOOL internalBuildOnly
 @property  BOOL hasInternalBuildOnly
 @property  TRIPBTimestamp *deploymentDate
 @property  BOOL hasDeploymentDate
 @property  NSMutableArray *namespacesArray
 @property  unsigned long namespacesArray_Count
 @property  TRIPBUInt32Array *namespaceCompatibilityVersionsArray
 @property  unsigned long namespaceCompatibilityVersionsArray_Count
 @property  int deploymentEnvironment
 @property  BOOL hasDeploymentEnvironment

  // class methods
  +[TRIPersistedExperimentArtifact descriptor]


TRISandboxExtensionFactory : NSObject
  // class methods
  +[TRISandboxExtensionFactory extensionTokenForPath:extensionClass:]


TRISignatureKey : NSObject
  // class methods
  +[TRISignatureKey _keyFromCertificateChain:]
  +[TRISignatureKey keyFromData:]

  // instance methods
  -[TRISignatureKey validateBase64Signature:data:]
  -[TRISignatureKey _validateSignature:data:algorithm:]
  -[TRISignatureKey init]
  -[TRISignatureKey initWithKey:]
  -[TRISignatureKey dealloc]
  -[TRISignatureKey validateBase64Signature:forFile:]
  -[TRISignatureKey _validateBase64Signature:data:algorithm:]


TRIPushNotificationHandler : NSObject <TRIPushServiceConnectionDelegate>
 @property  <TRINotificationReactionCheckerProtocol> *notificationChecker
 @property  <TRIHotfixRolloutTargetingSchedulerProtocol> *hotfixScheduler
 @property  <TRIUrgentRollbackSchedulerProtocol> *rollbackScheduler

  // instance methods
  -[TRIPushNotificationHandler .cxx_destruct]
  -[TRIPushNotificationHandler didReceivePushNotification:]
  -[TRIPushNotificationHandler _handleDeploymentNotification:]
  -[TRIPushNotificationHandler _handleRollbackNotification:]
  -[TRIPushNotificationHandler _isMissingNotificationFields:]
  -[TRIPushNotificationHandler notificationChecker]
  -[TRIPushNotificationHandler initWithNotificationChecker:hotfixScheduler:rollbackScheduler:]
  -[TRIPushNotificationHandler hotfixScheduler]
  -[TRIPushNotificationHandler rollbackScheduler]


TRIDeferredDeleter : NSObject
  // class methods
  +[TRIDeferredDeleter _createSymlinkIfNonExistentAtPath:withDestinationPath:]
  +[TRIDeferredDeleter _removeDeferredDeletedItemWithLink:externalReferenceStore:wasDeleted:]

  // instance methods
  -[TRIDeferredDeleter collectGarbageWithRootDirLockWitness:externalReferenceStore:]
  -[TRIDeferredDeleter .cxx_destruct]
  -[TRIDeferredDeleter _cleanupWithLinksDirLockWitness:externalReferenceStore:]
  -[TRIDeferredDeleter _collectRelativeLinkPathsWithLinksDirLockWitness:]
  -[TRIDeferredDeleter _linkPathForDeferredDeletedItemAtPath:]
  -[TRIDeferredDeleter initForRootDir:]
  -[TRIDeferredDeleter markItemAtRelativePath:]
  -[TRIDeferredDeleter unmarkItemAtRelativePath:]
  -[TRIDeferredDeleter _deferredDeletedLinksDir]


TRIXPCActivityCriteria : NSObject
  // class methods
  +[TRIXPCActivityCriteria cellularCriteria]
  +[TRIXPCActivityCriteria fetchExperimentsCriteria]
  +[TRIXPCActivityCriteria clientTriggeredCellularCriteria]
  +[TRIXPCActivityCriteria clientTriggeredWifiCriteria]
  +[TRIXPCActivityCriteria recurrentRollbackCriteria]


TRIFetchRolloutNotificationListTask : TRIBaseTask <TRIRetryableTask, TRIMetricsProviding>
 @property  int retryCount
 @property  BOOL wasDeferred
 @property  int taskType
 @property  NSString *taskName
 @property  NSArray *tags
 @property  NSDate *startTime
 @property  NSArray *dependencies
 @property  <TRITaskQueueStateProviding> *stateProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TRIFetchRolloutNotificationListTask supportsSecureCoding]
  +[TRIFetchRolloutNotificationListTask parseFromData:]
  +[TRIFetchRolloutNotificationListTask taskWithStartingFetchDateOverride:namespaceNames:taskAttribution:]

  // instance methods
  -[TRIFetchRolloutNotificationListTask taskType]
  -[TRIFetchRolloutNotificationListTask initWithCoder:]
  -[TRIFetchRolloutNotificationListTask _asPersistedTask]
  -[TRIFetchRolloutNotificationListTask trialSystemTelemetry]
  -[TRIFetchRolloutNotificationListTask .cxx_destruct]
  -[TRIFetchRolloutNotificationListTask runUsingContext:withTaskQueue:]
  -[TRIFetchRolloutNotificationListTask dimensions]
  -[TRIFetchRolloutNotificationListTask wasDeferred]
  -[TRIFetchRolloutNotificationListTask isEqual:]
  -[TRIFetchRolloutNotificationListTask setWasDeferred:]
  -[TRIFetchRolloutNotificationListTask serialize]
  -[TRIFetchRolloutNotificationListTask metrics]
  -[TRIFetchRolloutNotificationListTask _addDimension:]
  -[TRIFetchRolloutNotificationListTask _addNextTask:]
  -[TRIFetchRolloutNotificationListTask nextTaskCount]
  -[TRIFetchRolloutNotificationListTask setRetryCount:]
  -[TRIFetchRolloutNotificationListTask retryCount]
  -[TRIFetchRolloutNotificationListTask requiredCapabilities:]
  -[TRIFetchRolloutNotificationListTask encodeWithCoder:]
  -[TRIFetchRolloutNotificationListTask _addMetric:]
  -[TRIFetchRolloutNotificationListTask tags]
  -[TRIFetchRolloutNotificationListTask initWithStartingFetchDateOverride:namespaceNames:taskAttribution:]
  -[TRIFetchRolloutNotificationListTask _processRolloutArtifact:context:taskQueue:]


TRIActivateTargetedRolloutDeploymentTask : TRIBaseTask <TRITask, TRIMetricsProviding>
 @property  TRIRolloutDeployment *deployment
 @property  NSString<TRIFactorPackSetId> *factorPackSetId
 @property  int taskType
 @property  NSString *taskName
 @property  NSArray *tags
 @property  NSDate *startTime
 @property  NSArray *dependencies
 @property  <TRITaskQueueStateProviding> *stateProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TRIActivateTargetedRolloutDeploymentTask supportsSecureCoding]
  +[TRIActivateTargetedRolloutDeploymentTask taskWithDeployment:factorPackSetId:taskAttribution:]
  +[TRIActivateTargetedRolloutDeploymentTask parseFromData:]

  // instance methods
  -[TRIActivateTargetedRolloutDeploymentTask taskType]
  -[TRIActivateTargetedRolloutDeploymentTask initWithCoder:]
  -[TRIActivateTargetedRolloutDeploymentTask deployment]
  -[TRIActivateTargetedRolloutDeploymentTask _asPersistedTask]
  -[TRIActivateTargetedRolloutDeploymentTask trialSystemTelemetry]
  -[TRIActivateTargetedRolloutDeploymentTask .cxx_destruct]
  -[TRIActivateTargetedRolloutDeploymentTask dependencies]
  -[TRIActivateTargetedRolloutDeploymentTask runUsingContext:withTaskQueue:]
  -[TRIActivateTargetedRolloutDeploymentTask dimensions]
  -[TRIActivateTargetedRolloutDeploymentTask isEqual:]
  -[TRIActivateTargetedRolloutDeploymentTask serialize]
  -[TRIActivateTargetedRolloutDeploymentTask factorPackSetId]
  -[TRIActivateTargetedRolloutDeploymentTask metrics]
  -[TRIActivateTargetedRolloutDeploymentTask runEnqueueHandlerUsingContext:]
  -[TRIActivateTargetedRolloutDeploymentTask _notifyUpdatedShadowEvaluationsWithDeployments:context:usingTransaction:]
  -[TRIActivateTargetedRolloutDeploymentTask initWithDeployment:factorPackSetId:taskAttribution:]
  -[TRIActivateTargetedRolloutDeploymentTask runDequeueHandlerUsingContext:]
  -[TRIActivateTargetedRolloutDeploymentTask requiredCapabilities:]
  -[TRIActivateTargetedRolloutDeploymentTask encodeWithCoder:]
  -[TRIActivateTargetedRolloutDeploymentTask tags]


TRIFactorPackSetExternalReferenceStore : NSObject <TRIPathReferencing>
  // instance methods
  -[TRIFactorPackSetExternalReferenceStore .cxx_destruct]
  -[TRIFactorPackSetExternalReferenceStore hasReferenceToPath:]
  -[TRIFactorPackSetExternalReferenceStore initWithServerContext:]


TRIFactorPackSetStorage : NSObject
  // instance methods
  -[TRIFactorPackSetStorage initWithPaths:]
  -[TRIFactorPackSetStorage hasFactorPackSetWithId:path:]
  -[TRIFactorPackSetStorage .cxx_destruct]
  -[TRIFactorPackSetStorage init]
  -[TRIFactorPackSetStorage enumerateFactorPacksForFactorPackSet:usingLegacyPaths:withBlock:]
  -[TRIFactorPackSetStorage _collectFactorPackSets]
  -[TRIFactorPackSetStorage _nonAtomicOverwriteWithSrc:dest:]
  -[TRIFactorPackSetStorage parentDirForFactorPackSets]
  -[TRIFactorPackSetStorage _forceRemoveItemAtPath:]
  -[TRIFactorPackSetStorage saveFactorPackSet:]
  -[TRIFactorPackSetStorage pathForFactorPackSetWithId:]
  -[TRIFactorPackSetStorage removeUnreferencedFactorPackSetsWithServerContext:removedCount:]


TRIUserCovariates : NSObject <TRIUserCovariateProviding>
  // instance methods
  -[TRIUserCovariates tri_majorVersionForBundleId:]
  -[TRIUserCovariates .cxx_destruct]
  -[TRIUserCovariates tri_versionForBundleId:]
  -[TRIUserCovariates tri_versionForBundleId:compareToString:]
  -[TRIUserCovariates initWithContext:]
  -[TRIUserCovariates tri_minorVersionForBundleId:]
  -[TRIUserCovariates tri_hasApplicationWithBundleId:]
  -[TRIUserCovariates _applicationRecordForBundleId:]
  -[TRIUserCovariates tri_versionStringForBundleId:]
  -[TRIUserCovariates tri_shortVersionStringForBundleId:]
  -[TRIUserCovariates tri_patchVersionForBundleId:]


TRISetupAssistantFetchUtils : NSObject
  // class methods
  +[TRISetupAssistantFetchUtils removeNamespaceNamesWithRolloutForServerContext:namespaceNames:]
  +[TRISetupAssistantFetchUtils getNamespaceNamesWithFetchDuringSetupAssistantEnabledWithTRIPaths:]
  +[TRISetupAssistantFetchUtils setValueInKeyValueStore:key:value:error:]
  +[TRISetupAssistantFetchUtils registerFinalizeBlockForDownloadLatencyTelemetryWithServerContext:]
  +[TRISetupAssistantFetchUtils getIncompatibleNamespaceNamesForTriClientRollout:namespaceDescriptorProvider:]
  +[TRISetupAssistantFetchUtils stopSetupAssistantFetchWithServerContext:namespaceNames:error:]
  +[TRISetupAssistantFetchUtils getValueInKeyValueStore:key:error:]


TRIFetchFactorPackSetTask : TRIBaseTask <TRIRetryableTask, TRIMetricsProviding>
 @property  TRIRolloutDeployment *deployment
 @property  NSString<TRIFactorPackSetId> *factorPackSetId
 @property  int retryCount
 @property  BOOL wasDeferred
 @property  int taskType
 @property  NSString *taskName
 @property  NSArray *tags
 @property  NSDate *startTime
 @property  NSArray *dependencies
 @property  <TRITaskQueueStateProviding> *stateProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TRIFetchFactorPackSetTask supportsSecureCoding]
  +[TRIFetchFactorPackSetTask parseFromData:]
  +[TRIFetchFactorPackSetTask taskWithFactorPackSetId:taskAttribution:rolloutDeployment:]

  // instance methods
  -[TRIFetchFactorPackSetTask taskType]
  -[TRIFetchFactorPackSetTask initWithCoder:]
  -[TRIFetchFactorPackSetTask _saveFactorPackSet:context:]
  -[TRIFetchFactorPackSetTask _logOnDemandFactor:metricName:namespaceName:client:error:]
  -[TRIFetchFactorPackSetTask deployment]
  -[TRIFetchFactorPackSetTask _asPersistedTask]
  -[TRIFetchFactorPackSetTask trialSystemTelemetry]
  -[TRIFetchFactorPackSetTask .cxx_destruct]
  -[TRIFetchFactorPackSetTask initWithFactorPackSetId:taskAttribution:rolloutDeployment:]
  -[TRIFetchFactorPackSetTask runUsingContext:withTaskQueue:]
  -[TRIFetchFactorPackSetTask _downloadAndSaveAssetsWithMetadata:forFactorPackSet:artifactProvider:options:downloadNotificationKey:context:assetsDownloadSize:errorResult:fetchError:]
  -[TRIFetchFactorPackSetTask _aliasesInFactorPack:context:]
  -[TRIFetchFactorPackSetTask dimensions]
  -[TRIFetchFactorPackSetTask wasDeferred]
  -[TRIFetchFactorPackSetTask isEqual:]
  -[TRIFetchFactorPackSetTask setWasDeferred:]
  -[TRIFetchFactorPackSetTask serialize]
  -[TRIFetchFactorPackSetTask _logDirectoryTreeDeltaResult:patchedAssetsCount:totalCandidateAssetsCount:diffableAssetsDownloadSize:client:]
  -[TRIFetchFactorPackSetTask factorPackSetId]
  -[TRIFetchFactorPackSetTask metrics]
  -[TRIFetchFactorPackSetTask _removeDownloadableRecord:]
  -[TRIFetchFactorPackSetTask _subscribedOnDemandFactorsForAssetIds:factorPackSet:context:]
  -[TRIFetchFactorPackSetTask setRetryCount:]
  -[TRIFetchFactorPackSetTask retryCount]
  -[TRIFetchFactorPackSetTask requiredCapabilities:]
  -[TRIFetchFactorPackSetTask encodeWithCoder:]
  -[TRIFetchFactorPackSetTask _requiredAssetIdsForFactorPackSet:context:]
  -[TRIFetchFactorPackSetTask tags]
  -[TRIFetchFactorPackSetTask _downloadSetArtifactWithProvider:downloadOptions:downloadNotificationKey:downloadSize:errorResult:setArtifactFetchError:]


TRITaskQueueOperation : NSBlockOperation
 @property  <TRITask> *task
 @property  BOOL inProgress

  // instance methods
  -[TRITaskQueueOperation .cxx_destruct]
  -[TRITaskQueueOperation setTask:]
  -[TRITaskQueueOperation task]
  -[TRITaskQueueOperation setInProgress:]
  -[TRITaskQueueOperation inProgress]


TRITaskQueueGuardedData : NSObject
  // instance methods
  -[TRITaskQueueGuardedData .cxx_destruct]


TRITaskQueue : NSObject <TRITaskQueuing, TRITaskQueueStateProviding>
  // instance methods
  -[TRITaskQueue cancelTask:]
  -[TRITaskQueue updateActivity:withStartDate:]
  -[TRITaskQueue _startRunnableTasksIfNecessaryWithGuardedData:]
  -[TRITaskQueue _startImmediateTasksIfNotAlreadyQueued:guardedData:didStartNewWork:]
  -[TRITaskQueue _scheduleFutureActivitiesWithGuardedData:]
  -[TRITaskQueue _registerTaskQueueActivityForDate:]
  -[TRITaskQueue _removeTaskWithId:guardedData:persistRemove:]
  -[TRITaskQueue _createOperationWithTask:withId:dependencies:taskMap:]
  -[TRITaskQueue activeActivityDescriptorGrantingCapability:]
  -[TRITaskQueue cancelTasksWithTag:excludingTasks:]
  -[TRITaskQueue cancelTasksWithTag:]
  -[TRITaskQueue waitForAsyncQueue]
  -[TRITaskQueue _addTask:options:guardedData:taskIdOut:accumulatedNewTaskRecords:]
  -[TRITaskQueue _earliestStartDateFromTaskList:]
  -[TRITaskQueue .cxx_destruct]
  -[TRITaskQueue _evaluateRunConditionsWithGuardedData:shouldContinueWork:]
  -[TRITaskQueue count]
  -[TRITaskQueue _finalizeTask:withId:runResult:]
  -[TRITaskQueue _cancelTaskWithId:guardedData:persistCancel:]
  -[TRITaskQueue addTask:options:]
  -[TRITaskQueue init]
  -[TRITaskQueue _cancelDependenciesAndTaskWithId:guardedData:]
  -[TRITaskQueue _addTask:withDependencies:guardedData:]
  -[TRITaskQueue initWithServerContext:operationQueue:operationGroup:asyncQueue:]
  -[TRITaskQueue resumeWithXPCActivityDescriptor:executeWhenSuspended:]
  -[TRITaskQueue _registerRetryActivityForDate:]
  -[TRITaskQueue _scheduleFutureRecurrentRollbackActivityWithTasks:]
  -[TRITaskQueue registerFinalizeBlock:]
  -[TRITaskQueue enumerateTasksWithTagsIntersectingTagSet:block:]
  -[TRITaskQueue activeActivityGrantingCapability:]
  -[TRITaskQueue addTask:options:taskId:]
  -[TRITaskQueue _isTaskWithId:inTaskGroup:runnableGivenCapabilities:atDate:cachedRunnability:visitedPath:topoSortedRunnable:allowOnlyRootTasksRunnable:]
  -[TRITaskQueue _cancelTask:guardedData:]
  -[TRITaskQueue finishXPCActivitiesWithGuardedData:]
  -[TRITaskQueue _partitionTaskGroup:byRunnabilityGivenCapabilities:runnableAtDate:topoSortedCurrentlyRunnable:blocked:allowOnlyRootTasksRunnable:]
  -[TRITaskQueue registerFinalizeBlockToRetryWithBlock:]
  -[TRITaskQueue ifNotPresentAddTask:]
  -[TRITaskQueue _runTask:]
  -[TRITaskQueue _addTask:options:guardedData:taskId:]


TRIXPCNamespaceManagementRequestHandler : NSObject <TRIXPCNamespaceManagementServiceProtocol>
  // class methods
  +[TRIXPCNamespaceManagementRequestHandler _reregisterOneShotXPCActivityWithDescriptor:resumingTaskQueue:]
  +[TRIXPCNamespaceManagementRequestHandler _immediateDownloadForNamespaceNames:usingEntitlementWitness:serverContext:taskQueue:allowExpensiveNetworking:taskAttribution:completion:]
  +[TRIXPCNamespaceManagementRequestHandler _resumeTaskQueueForDiscretionaryWifiWithQueue:]
  +[TRIXPCNamespaceManagementRequestHandler _resumeTaskQueueForDiscretionaryCellularWithQueue:]
  +[TRIXPCNamespaceManagementRequestHandler _startDownloadAssetIndexesByTreatment:usingEntitlementWitness:serverContext:taskQueue:experimentIds:assetIdsByFactorPack:rolloutFactorNames:rolloutDeployments:namespace:taskAttribution:factorsState:notificationKey:]
  +[TRIXPCNamespaceManagementRequestHandler usingServerContext:taskQueue:startDownloadNamespaceWithName:attribution:completion:]
  +[TRIXPCNamespaceManagementRequestHandler usingServerContext:registerNamespaceWithNamespaceName:compatibilityVersion:defaultsFileURL:teamId:appContainerId:appContainerType:cloudKitContainerId:bundleId:completion:]
  +[TRIXPCNamespaceManagementRequestHandler usingServerContext:deregisterNamespaceWithName:teamId:taskQueue:completion:]
  +[TRIXPCNamespaceManagementRequestHandler _removeAssetFactors:usingEntitlementWitness:serverContext:taskQueue:namespace:factorsState:removeImmediately:completion:]
  +[TRIXPCNamespaceManagementRequestHandler _notificationKeyWithNamespace:assetIndexesByTreatment:assetIdsByFactorPack:]
  +[TRIXPCNamespaceManagementRequestHandler _rejectFactorPackId:usingEntitlementWitness:serverContext:forNamespaceName:rolloutDeployment:completion:]
  +[TRIXPCNamespaceManagementRequestHandler _promoteFactorPackId:usingEntitlementWitness:serverContext:forNamespaceName:rolloutDeployment:completion:]
  +[TRIXPCNamespaceManagementRequestHandler resumeTaskQueue:forNetworkOptions:]
  +[TRIXPCNamespaceManagementRequestHandler _setProvisionalFactorPackId:usingEntitlementWitness:serverContext:forNamespaceName:completion:]
  +[TRIXPCNamespaceManagementRequestHandler _deploymentsWithUnexpectedExperimentDataInContainer:dynamicNamespaceName:serverContext:]
  +[TRIXPCNamespaceManagementRequestHandler _purgeMismatchedDataForDynamicNamespaceName:appContainer:serverContext:]

  // instance methods
  -[TRIXPCNamespaceManagementRequestHandler promoteFactorPackId:forNamespaceName:rolloutDeployment:completion:]
  -[TRIXPCNamespaceManagementRequestHandler _setPurgeabilityLevelsForFactors:usingEntitlementWitness:namespace:paths:completion:]
  -[TRIXPCNamespaceManagementRequestHandler .cxx_destruct]
  -[TRIXPCNamespaceManagementRequestHandler removeLevelsForFactors:withNamespace:factorsState:removeImmediately:completion:]
  -[TRIXPCNamespaceManagementRequestHandler runBlockWhenServerAvailable:]
  -[TRIXPCNamespaceManagementRequestHandler _loadNamespaceMetadataForNamespace:usingEntitlementWitness:withPaths:completion:]
  -[TRIXPCNamespaceManagementRequestHandler startDownloadLevelsForFactors:withNamespace:factorsState:options:completion:]
  -[TRIXPCNamespaceManagementRequestHandler statusOfDownloadForFactors:withNamespace:factorsState:completion:]
  -[TRIXPCNamespaceManagementRequestHandler immediateDownloadForNamespaceNames:allowExpensiveNetworking:completion:]
  -[TRIXPCNamespaceManagementRequestHandler _factorProviderChainForNamespace:paths:]
  -[TRIXPCNamespaceManagementRequestHandler setPurgeabilityLevelsForFactors:forNamespaceName:completion:]
  -[TRIXPCNamespaceManagementRequestHandler loadNamespaceMetadataForNamespaceName:completion:]
  -[TRIXPCNamespaceManagementRequestHandler registerNamespaceWithNamespaceName:compatibilityVersion:defaultsFileURL:applicationGroup:cloudKitContainerId:completion:]
  -[TRIXPCNamespaceManagementRequestHandler deregisterNamespaceWithNamespaceName:completion:]
  -[TRIXPCNamespaceManagementRequestHandler _namespacePurgeabilityLevelForNamespaceName:paths:]
  -[TRIXPCNamespaceManagementRequestHandler setProvisionalFactorPackId:forNamespaceName:completion:]
  -[TRIXPCNamespaceManagementRequestHandler _validateNamespaceName:error:]
  -[TRIXPCNamespaceManagementRequestHandler initWithServerContextPromise:auditToken:]
  -[TRIXPCNamespaceManagementRequestHandler rejectFactorPackId:forNamespaceName:rolloutDeployment:completion:]
  -[TRIXPCNamespaceManagementRequestHandler startDownloadNamespaceWithName:options:completion:]
  -[TRIXPCNamespaceManagementRequestHandler _validateSetPurgeabilityLevelRequestUsingFactorProviderChain:paths:purgeabilityLevelsForFactors:error:]


TRIXPCNamespaceManagementServiceListener : NSObject <NSXPCListenerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TRIXPCNamespaceManagementServiceListener .cxx_destruct]
  -[TRIXPCNamespaceManagementServiceListener listener:shouldAcceptNewConnection:]
  -[TRIXPCNamespaceManagementServiceListener initWithServerContextPromise:]


TRIFetchDateManager : NSObject <TRIDateProviding>
  // class methods
  +[TRIFetchDateManager kvstoreKeyForType:container:teamId:]
  +[TRIFetchDateManager managerWithKeyValueStore:]

  // instance methods
  -[TRIFetchDateManager lastFetchDateWithType:container:teamId:]
  -[TRIFetchDateManager initWithKeyValueStore:]
  -[TRIFetchDateManager .cxx_destruct]
  -[TRIFetchDateManager init]
  -[TRIFetchDateManager setLastFetchDate:type:container:teamId:]


TRIRemoteAssetDecrypter : NSObject
  // class methods
  +[TRIRemoteAssetDecrypter decryptAssetWithURL:destinationFilename:namespaceName:error:]


TRIKVStore : NSObject
  // instance methods
  -[TRIKVStore initWithDatabase:]
  -[TRIKVStore writeTransactionWithFailableBlock:]
  -[TRIKVStore .cxx_destruct]
  -[TRIKVStore init]
  -[TRIKVStore removeBlobForKey:usingTransaction:]
  -[TRIKVStore blobForKey:usingTransaction:]
  -[TRIKVStore setBlob:forKey:usingTransaction:]
  -[TRIKVStore readTransactionWithFailableBlock:]


TRIExperimentDatabase : NSObject
  // instance methods
  -[TRIExperimentDatabase initWithDatabase:]
  -[TRIExperimentDatabase enumerateExperimentRecordsMatchingExperimentId:block:]
  -[TRIExperimentDatabase writeTransactionWithFailableBlock:]
  -[TRIExperimentDatabase setManuallyTargeted:forExperimentDeployment:usingTransaction:]
  -[TRIExperimentDatabase addExperimentWithExperimentDeployment:environment:type:status:startDate:endDate:namespaces:artifact:]
  -[TRIExperimentDatabase .cxx_destruct]
  -[TRIExperimentDatabase enumerateActiveExperimentRecordsWithVisibility:block:]
  -[TRIExperimentDatabase init]
  -[TRIExperimentDatabase hasRecordReferencingTreatmentId:withReferenceType:]
  -[TRIExperimentDatabase enumerateExperimentRecordsWithBlock:]
  -[TRIExperimentDatabase enumerateNamespaceRecordsForExperimentDeployment:usingTransaction:block:]
  -[TRIExperimentDatabase setTreatmentURL:forExperimentDeployment:namespaceName:]
  -[TRIExperimentDatabase removeExperimentRecordWithExperimentDeployment:]
  -[TRIExperimentDatabase setStatus:forExperimentDeployment:usingTransaction:]
  -[TRIExperimentDatabase treatmentURLsForExperimentDeployment:usingTransaction:]
  -[TRIExperimentDatabase experimentRecordWithExperimentDeployment:]
  -[TRIExperimentDatabase setTreatmentId:forExperimentDeployment:usingTransaction:]
  -[TRIExperimentDatabase enumerateExperimentRecordsMatchingStatuses:block:]
  -[TRIExperimentDatabase activeExperimentRecordWithTreatmentId:]
  -[TRIExperimentDatabase readTransactionWithFailableBlock:]
  -[TRIExperimentDatabase _enumerateExperimentRecordsMatchingWhereClause:bind:block:]
  -[TRIExperimentDatabase namespacesAreAvailableForExperiment:startDate:endDate:namespaces:]


TRISequenceTask : TRIBaseTask <TRIRetryableTask, TRIMetricsProviding>
 @property  <TRITask> *lastTask
 @property  int retryCount
 @property  BOOL wasDeferred
 @property  int taskType
 @property  NSString *taskName
 @property  NSArray *tags
 @property  NSDate *startTime
 @property  NSArray *dependencies
 @property  <TRITaskQueueStateProviding> *stateProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TRISequenceTask supportsSecureCoding]
  +[TRISequenceTask parseFromData:]
  +[TRISequenceTask task]
  +[TRISequenceTask _isTask:equalTo:]

  // instance methods
  -[TRISequenceTask taskType]
  -[TRISequenceTask initWithCoder:]
  -[TRISequenceTask _asPersistedTask]
  -[TRISequenceTask trialSystemTelemetry]
  -[TRISequenceTask .cxx_destruct]
  -[TRISequenceTask dependencies]
  -[TRISequenceTask runUsingContext:withTaskQueue:]
  -[TRISequenceTask dimensions]
  -[TRISequenceTask wasDeferred]
  -[TRISequenceTask isEqual:]
  -[TRISequenceTask setWasDeferred:]
  -[TRISequenceTask taskName]
  -[TRISequenceTask startTime]
  -[TRISequenceTask serialize]
  -[TRISequenceTask metrics]
  -[TRISequenceTask setRetryCount:]
  -[TRISequenceTask retryCount]
  -[TRISequenceTask encodeWithCoder:]
  -[TRISequenceTask tags]
  -[TRISequenceTask lastTask]
  -[TRISequenceTask addTaskToEndOfSequence:]
  -[TRISequenceTask initWithTask:dependency:]


TRIPurgeableNamespacesProvider : NSObject <TRIPurgeableNamespacesProviding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TRIPurgeableNamespacesProvider .cxx_destruct]
  -[TRIPurgeableNamespacesProvider partitionPurgeableNamespacesForPurgeabilityLevel:namespaceNamesPurgeableAtNamespaceLevel:eagerPurgeableFactorsByNamespaceName:]
  -[TRIPurgeableNamespacesProvider initWithPaths:clientNamespaceMetadataStorage:]


TRISelectRolloutNotificationGuardedData : NSObject
  // instance methods
  -[TRISelectRolloutNotificationGuardedData .cxx_destruct]


TRISelectRolloutNotificationListTask : TRIBaseTask <TRIRetryableTask, TRIMetricsProviding>
 @property  NSSet *namespaceNames
 @property  NSSet *excludedNamespaceNames
 @property  int retryCount
 @property  BOOL wasDeferred
 @property  int taskType
 @property  NSString *taskName
 @property  NSArray *tags
 @property  NSDate *startTime
 @property  NSArray *dependencies
 @property  <TRITaskQueueStateProviding> *stateProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TRISelectRolloutNotificationListTask supportsSecureCoding]
  +[TRISelectRolloutNotificationListTask parseFromData:]
  +[TRISelectRolloutNotificationListTask taskWithNamespaceNames:excludingNamespaces:taskAttribution:]
  +[TRISelectRolloutNotificationListTask taskWithNamespaceNames:taskAttribution:]

  // instance methods
  -[TRISelectRolloutNotificationListTask taskType]
  -[TRISelectRolloutNotificationListTask namespaceNames]
  -[TRISelectRolloutNotificationListTask initWithCoder:]
  -[TRISelectRolloutNotificationListTask _asPersistedTask]
  -[TRISelectRolloutNotificationListTask trialSystemTelemetry]
  -[TRISelectRolloutNotificationListTask .cxx_destruct]
  -[TRISelectRolloutNotificationListTask _processRolloutArtifact:rolloutsProcessed:remainingNamespaces:targeter:context:taskQueue:]
  -[TRISelectRolloutNotificationListTask runUsingContext:withTaskQueue:]
  -[TRISelectRolloutNotificationListTask dimensions]
  -[TRISelectRolloutNotificationListTask initWithNamespaceNames:excludingNamespaces:taskAttribution:]
  -[TRISelectRolloutNotificationListTask wasDeferred]
  -[TRISelectRolloutNotificationListTask isEqual:]
  -[TRISelectRolloutNotificationListTask setWasDeferred:]
  -[TRISelectRolloutNotificationListTask serialize]
  -[TRISelectRolloutNotificationListTask metrics]
  -[TRISelectRolloutNotificationListTask _addDimension:]
  -[TRISelectRolloutNotificationListTask _addNextTask:]
  -[TRISelectRolloutNotificationListTask nextTaskCount]
  -[TRISelectRolloutNotificationListTask setRetryCount:]
  -[TRISelectRolloutNotificationListTask excludedNamespaceNames]
  -[TRISelectRolloutNotificationListTask retryCount]
  -[TRISelectRolloutNotificationListTask requiredCapabilities:]
  -[TRISelectRolloutNotificationListTask encodeWithCoder:]
  -[TRISelectRolloutNotificationListTask _addMetric:]
  -[TRISelectRolloutNotificationListTask tags]


TRITelemetryFactory : NSObject
  // class methods
  +[TRITelemetryFactory containerOriginTelemetryForTaskAttribution:]


TRIRemoteAssetPatcher : NSObject <TRIAssetPatching>
  // instance methods
  -[TRIRemoteAssetPatcher .cxx_destruct]
  -[TRIRemoteAssetPatcher init]
  -[TRIRemoteAssetPatcher initWithMonitoredActivity:]
  -[TRIRemoteAssetPatcher applyPatchWithFilename:toSrcDir:writingToEmptyDestDir:postPatchCompression:error:]
  -[TRIRemoteAssetPatcher _tokenForSandboxExtensionWithClass:path:]


TRINamespaceDatabase : NSObject
  // instance methods
  -[TRINamespaceDatabase initWithDatabase:]
  -[TRINamespaceDatabase enumerateDynamicNamespaceRecordsForContainer:teamId:block:]
  -[TRINamespaceDatabase writeTransactionWithFailableBlock:]
  -[TRINamespaceDatabase _enumerateDynamicNamespaceRecordsWithWhereClause:bind:block:]
  -[TRINamespaceDatabase enumerateDynamicNamespaceRecordsWithBlock:]
  -[TRINamespaceDatabase .cxx_destruct]
  -[TRINamespaceDatabase init]
  -[TRINamespaceDatabase hasUnfetchedNamespaceForTeamId:]
  -[TRINamespaceDatabase setFetched:forDynamicNamespaceName:]
  -[TRINamespaceDatabase removeDynamicNamespaceRecordWithNamespaceName:]
  -[TRINamespaceDatabase enumerateAppContainerIdsForContainer:block:]
  -[TRINamespaceDatabase dynamicNamespaceRecordWithNamespaceName:]
  -[TRINamespaceDatabase readTransactionWithFailableBlock:]
  -[TRINamespaceDatabase addOrUpdateDynamicNamespaceWithName:compatibilityVersion:defaultsFileURL:teamId:appContainerId:appContainerType:cloudKitContainer:]


TRIRolloutTargetingOperation : NSObject
 @property  <TRIRolloutTargeting> *targeter
 @property  TRIRolloutDatabase *rolloutDatabase

  // instance methods
  -[TRIRolloutTargetingOperation targeter]
  -[TRIRolloutTargetingOperation .cxx_destruct]
  -[TRIRolloutTargetingOperation targetRolloutDeployment:appendingTelemetryToSupport:reportTelemetryToServer:factorPackSetIdToActivate:shouldDisenroll:error:]
  -[TRIRolloutTargetingOperation rolloutDatabase]
  -[TRIRolloutTargetingOperation _targetRolloutDeployment:appendingTelemetryToSupport:reportTelemetryToServer:factorPackSetIdToActivate:shouldDisenroll:error:]
  -[TRIRolloutTargetingOperation initWithRolloutTargeter:rolloutDatabase:]


TRITaskCapabilityUtilities : NSObject
  // class methods
  +[TRITaskCapabilityUtilities requiredCapabilities:areSupportedByAllowedCapabilities:]


TRIReferenceManagedDir : NSObject
  // class methods
  +[TRIReferenceManagedDir saveFromGarbageCollectionItemWithPath:]
  +[TRIReferenceManagedDir _containingManagedDirForPath:resolvedAbsPath:]
  +[TRIReferenceManagedDir symlinkFromPath:toManagedPath:]
  +[TRIReferenceManagedDir _reverseLinksDirForManagedDir:]
  +[TRIReferenceManagedDir _collectDeadSymlinksForManagedDir:withLockWitness:liveSymlinkCount:]
  +[TRIReferenceManagedDir _acquireLockOnDir:withLockingMode:andRunBlock:]
  +[TRIReferenceManagedDir _removePaths:withLockWitness:numRemoved:]
  +[TRIReferenceManagedDir _isTargetOfSymlink:containedInManagedDir:]
  +[TRIReferenceManagedDir symlinkFromCurrentPath:withFuturePath:toManagedPath:]
  +[TRIReferenceManagedDir _testDeletionEligibilityForManagedDir:withExternalReferenceStore:flockWitness:logPrefix:isEligible:]
  +[TRIReferenceManagedDir removeFileInManagedDirWithPath:inUseDeletionBehavior:wasDeleted:]
  +[TRIReferenceManagedDir collectGarbageForManagedDir:withExternalReferenceStore:usingTempDir:managedDirWasDeleted:]
  +[TRIReferenceManagedDir _deleteReferenceManagedDirectory:usingTempDir:managedDirWasDeleted:]
  +[TRIReferenceManagedDir createFromDir:]
  +[TRIReferenceManagedDir _metadataDirForManagedDir:]

  // instance methods
  -[TRIReferenceManagedDir init]


TRIXPCInternalServiceClient : NSObject <TRIInternalServiceProtocol>
  // instance methods
  -[TRIXPCInternalServiceClient .cxx_destruct]
  -[TRIXPCInternalServiceClient init]
  -[TRIXPCInternalServiceClient _performSyncXpcWithError:block:]
  -[TRIXPCInternalServiceClient taskRecordsWithError:]
  -[TRIXPCInternalServiceClient experimentNotificationsWithExperimentId:cloudKitContainer:teamId:error:]
  -[TRIXPCInternalServiceClient rolloutNotificationWithLatestDeploymentForRolloutId:cloudKitContainer:teamId:error:]
  -[TRIXPCInternalServiceClient submitTask:options:error:]
  -[TRIXPCInternalServiceClient lastFetchDateForContainer:teamId:error:]
  -[TRIXPCInternalServiceClient setLastFetchDate:forContainer:teamId:error:]
  -[TRIXPCInternalServiceClient setFailureInjectionDelegate:error:]
  -[TRIXPCInternalServiceClient suspendSQLiteCKDatabaseQueueWithError:]
  -[TRIXPCInternalServiceClient resumeSQLiteCKDatabaseQueueWithError:]
  -[TRIXPCInternalServiceClient registerNamespaceWithNamespaceName:compatibilityVersion:defaultsFileURL:withTeamId:appContainerId:appContainerType:cloudKitContainerId:error:]
  -[TRIXPCInternalServiceClient deregisterNamespaceWithNamespaceName:withTeamId:error:]
  -[TRIXPCInternalServiceClient startNamespaceDownloadWithName:withTeamId:options:error:]
  -[TRIXPCInternalServiceClient dynamicNamespaceRecordsWithError:]
  -[TRIXPCInternalServiceClient subscriptionForNamespaceName:error:]
  -[TRIXPCInternalServiceClient setSubscription:namespaceName:error:]
  -[TRIXPCInternalServiceClient immediatelySchedulePostUpgradeActivityWithError:]


TRITripersistedClientRolloutArtifactRoot : TRIPBRootObject

TRIPersistedClientRolloutArtifact : TRIPBMessage
 @property  TRIClientRollout *rollout
 @property  BOOL hasRollout
 @property  TRIPBUInt32Array *populationsArray
 @property  unsigned long populationsArray_Count
 @property  TRIPBTimestamp *deploymentDate
 @property  BOOL hasDeploymentDate
 @property  unsigned long downloadSize
 @property  BOOL hasDownloadSize

  // class methods
  +[TRIPersistedClientRolloutArtifact descriptor]


TRIBaseTask : NSObject
 @property  NSString *taskName
 @property  NSArray *tags
 @property  NSDate *startTime
 @property  NSArray *dependencies
 @property  <TRITaskQueueStateProviding> *stateProvider

  // instance methods
  -[TRIBaseTask setStartTime:]
  -[TRIBaseTask .cxx_destruct]
  -[TRIBaseTask dependencies]
  -[TRIBaseTask isEqual:]
  -[TRIBaseTask taskName]
  -[TRIBaseTask startTime]
  -[TRIBaseTask runEnqueueHandlerUsingContext:]
  -[TRIBaseTask stateProvider]
  -[TRIBaseTask runDequeueHandlerUsingContext:]
  -[TRIBaseTask requiredCapabilities:]
  -[TRIBaseTask tags]
  -[TRIBaseTask setStateProvider:]


TRINamespaceFactorSubscriptionSettings : NSObject
 @property  TRIKVStore *keyValueStore

  // class methods
  +[TRINamespaceFactorSubscriptionSettings keyForNamespaceSubscription:]
  +[TRINamespaceFactorSubscriptionSettings settingsWithKeyValueStore:]

  // instance methods
  -[TRINamespaceFactorSubscriptionSettings initWithKeyValueStore:]
  -[TRINamespaceFactorSubscriptionSettings .cxx_destruct]
  -[TRINamespaceFactorSubscriptionSettings setSubscriptionWithFactorNames:inNamespaceName:error:]
  -[TRINamespaceFactorSubscriptionSettings subscribedFactorsForNamespaceName:]
  -[TRINamespaceFactorSubscriptionSettings setKeyValueStore:]
  -[TRINamespaceFactorSubscriptionSettings keyValueStore]


TRITripersistedTasksRoot : TRIPBRootObject

TRIAnyPersistedTask : TRIPBMessage
 @property  int type
 @property  BOOL hasType
 @property  NSData *serialized
 @property  BOOL hasSerialized

  // class methods
  +[TRIAnyPersistedTask descriptor]


TRIPersistedTaskAttribution : TRIPBMessage
 @property  NSString *applicationBundleId
 @property  BOOL hasApplicationBundleId
 @property  int cloudKitContainer
 @property  BOOL hasCloudKitContainer
 @property  NSString *teamId
 @property  BOOL hasTeamId
 @property  TRIPersistedNetworkBehavior *networkBehavior
 @property  BOOL hasNetworkBehavior

  // class methods
  +[TRIPersistedTaskAttribution descriptor]


TRIActivateTreatmentPersistedTask : TRIPBMessage
 @property  NSString *experimentId
 @property  BOOL hasExperimentId
 @property  int deploymentId
 @property  BOOL hasDeploymentId
 @property  NSString *treatmentId
 @property  BOOL hasTreatmentId
 @property  TRIPBTimestamp *startTimestamp
 @property  BOOL hasStartTimestamp
 @property  TRIPBTimestamp *endTimestamp
 @property  BOOL hasEndTimestamp
 @property  int retryCount
 @property  BOOL hasRetryCount
 @property  TRIPersistedTaskAttribution *taskAttribution
 @property  BOOL hasTaskAttribution
 @property  BOOL requiresTreatmentInstallation
 @property  BOOL hasRequiresTreatmentInstallation
 @property  TRITaskOptions *taskOptions
 @property  BOOL hasTaskOptions

  // class methods
  +[TRIActivateTreatmentPersistedTask descriptor]


TRIDeactivateTreatmentPersistedTask : TRIPBMessage
 @property  NSString *experimentId
 @property  BOOL hasExperimentId
 @property  BOOL failOnUnrecognizedExperiment
 @property  BOOL hasFailOnUnrecognizedExperiment
 @property  TRIPBTimestamp *startTimestamp
 @property  BOOL hasStartTimestamp
 @property  int retryCount
 @property  BOOL hasRetryCount
 @property  int triggerEvent
 @property  BOOL hasTriggerEvent

  // class methods
  +[TRIDeactivateTreatmentPersistedTask descriptor]


TRIFetchTreatmentPersistedTask : TRIPBMessage
 @property  NSString *experimentId
 @property  BOOL hasExperimentId
 @property  int deploymentId
 @property  BOOL hasDeploymentId
 @property  NSString *treatmentId
 @property  BOOL hasTreatmentId
 @property  int retryCount
 @property  BOOL hasRetryCount
 @property  TRIPersistedTaskAttribution *taskAttribution
 @property  BOOL hasTaskAttribution

  // class methods
  +[TRIFetchTreatmentPersistedTask descriptor]


TRIFetchExperimentPersistedTask : TRIPBMessage
 @property  NSString *experimentId
 @property  BOOL hasExperimentId
 @property  int deploymentId
 @property  BOOL hasDeploymentId
 @property  TRIPersistedTaskAttribution *taskAttribution
 @property  BOOL hasTaskAttribution
 @property  int retryCount
 @property  BOOL hasRetryCount

  // class methods
  +[TRIFetchExperimentPersistedTask descriptor]


TRIFetchExperimentNotificationsPersistedTask : TRIPBMessage
 @property  TRIPBTimestamp *earliestTimestamp
 @property  BOOL hasEarliestTimestamp
 @property  NSMutableArray *namespacesArray
 @property  unsigned long namespacesArray_Count
 @property  BOOL rollbacksOnly
 @property  BOOL hasRollbacksOnly
 @property  TRIPersistedTaskAttribution *taskAttribution
 @property  BOOL hasTaskAttribution
 @property  int retryCount
 @property  BOOL hasRetryCount
 @property  BOOL limitedCarryOnly
 @property  BOOL hasLimitedCarryOnly

  // class methods
  +[TRIFetchExperimentNotificationsPersistedTask descriptor]


TRITargetingPersistedTask : TRIPBMessage
 @property  NSString *experimentId
 @property  BOOL hasExperimentId
 @property  int deploymentId
 @property  BOOL hasDeploymentId
 @property  BOOL includeDependencies
 @property  BOOL hasIncludeDependencies
 @property  int retryCount
 @property  BOOL hasRetryCount
 @property  TRIPersistedTaskAttribution *taskAttribution
 @property  BOOL hasTaskAttribution

  // class methods
  +[TRITargetingPersistedTask descriptor]


TRIMaintenancePersistedTask : TRIPBMessage
  // class methods
  +[TRIMaintenancePersistedTask descriptor]


TRIRotateSubjectIdPersistedTask : TRIPBMessage
 @property  BOOL forceUpdate
 @property  BOOL hasForceUpdate
 @property  NSString *deviceId
 @property  BOOL hasDeviceId
 @property  TRIPBTimestamp *nextRotationTimestamp
 @property  BOOL hasNextRotationTimestamp

  // class methods
  +[TRIRotateSubjectIdPersistedTask descriptor]


TRIMakeDefaultPersistedTask : TRIPBMessage
 @property  NSString *experimentId
 @property  BOOL hasExperimentId
 @property  int deploymentId
 @property  BOOL hasDeploymentId
 @property  NSString *treatmentId
 @property  BOOL hasTreatmentId
 @property  TRIPersistedTaskAttribution *taskAttribution
 @property  BOOL hasTaskAttribution
 @property  int retryCount
 @property  BOOL hasRetryCount

  // class methods
  +[TRIMakeDefaultPersistedTask descriptor]


TRIRetargetAllPersistedTask : TRIPBMessage
 @property  TRIPersistedTaskAttribution *taskAttribution
 @property  BOOL hasTaskAttribution

  // class methods
  +[TRIRetargetAllPersistedTask descriptor]


TRIConfigurationPersistedTask : TRIPBMessage
  // class methods
  +[TRIConfigurationPersistedTask descriptor]


TRIPostUpgradeCleanupPersistedTask : TRIPBMessage
  // class methods
  +[TRIPostUpgradeCleanupPersistedTask descriptor]


TRISequencePersistedTask : TRIPBMessage
 @property  TRIAnyPersistedTask *task
 @property  BOOL hasTask
 @property  TRIAnyPersistedTask *dependentTask
 @property  BOOL hasDependentTask

  // class methods
  +[TRISequencePersistedTask descriptor]


TRIScheduleFetchExperimentNotificationsPersistedTask : TRIPBMessage
 @property  BOOL rollbacksOnly
 @property  BOOL hasRollbacksOnly
 @property  TRIPersistedNetworkBehavior *networkBehavior
 @property  BOOL hasNetworkBehavior

  // class methods
  +[TRIScheduleFetchExperimentNotificationsPersistedTask descriptor]


TRIRecurrentScheduleFetchRollbacksPersistedTask : TRIPBMessage
 @property  TRIPersistedTaskAttribution *taskAttribution
 @property  BOOL hasTaskAttribution
 @property  BOOL isRepeatedInstance
 @property  BOOL hasIsRepeatedInstance

  // class methods
  +[TRIRecurrentScheduleFetchRollbacksPersistedTask descriptor]


TRIFetchOnDemandFactorsPersistedTask : TRIPBMessage
 @property  NSString *namespaceName
 @property  BOOL hasNamespaceName
 @property  int retryCount
 @property  BOOL hasRetryCount
 @property  NSString *notificationKey
 @property  BOOL hasNotificationKey
 @property  TRIPersistedTaskAttribution *taskAttribution
 @property  BOOL hasTaskAttribution
 @property  NSMutableArray *treatmentAssetIndexesArray
 @property  unsigned long treatmentAssetIndexesArray_Count
 @property  NSMutableArray *factorPackAssetIdsArray
 @property  unsigned long factorPackAssetIdsArray_Count
 @property  NSString *experimentId
 @property  BOOL hasExperimentId
 @property  NSString *rolloutId
 @property  BOOL hasRolloutId
 @property  int deploymentId
 @property  BOOL hasDeploymentId
 @property  NSMutableArray *rolloutFactorNamesArray
 @property  unsigned long rolloutFactorNamesArray_Count

  // class methods
  +[TRIFetchOnDemandFactorsPersistedTask descriptor]


TRIFetchOnDemandFactorsPersistedTask_TreatmentAssetIndexes : TRIPBMessage
 @property  NSString *treatmentId
 @property  BOOL hasTreatmentId
 @property  TRIPBUInt32Array *indexArray
 @property  unsigned long indexArray_Count

  // class methods
  +[TRIFetchOnDemandFactorsPersistedTask_TreatmentAssetIndexes descriptor]


TRIFetchOnDemandFactorsPersistedTask_AssetIdFactorName : TRIPBMessage
 @property  NSString *assetId
 @property  BOOL hasAssetId
 @property  NSString *factorName
 @property  BOOL hasFactorName

  // class methods
  +[TRIFetchOnDemandFactorsPersistedTask_AssetIdFactorName descriptor]


TRIFetchOnDemandFactorsPersistedTask_FactorPackAssetIds : TRIPBMessage
 @property  NSString *factorPackId
 @property  BOOL hasFactorPackId
 @property  NSMutableArray *assetIdArray
 @property  unsigned long assetIdArray_Count
 @property  NSMutableArray *assetIdFactorNameArray
 @property  unsigned long assetIdFactorNameArray_Count

  // class methods
  +[TRIFetchOnDemandFactorsPersistedTask_FactorPackAssetIds descriptor]


TRIFetchSingleRolloutNotificationPersistedTask : TRIPBMessage
 @property  NSString *rolloutId
 @property  BOOL hasRolloutId
 @property  int deploymentId
 @property  BOOL hasDeploymentId
 @property  TRIPersistedTaskAttribution *taskAttribution
 @property  BOOL hasTaskAttribution
 @property  int retryCount
 @property  BOOL hasRetryCount

  // class methods
  +[TRIFetchSingleRolloutNotificationPersistedTask descriptor]


TRIFetchFactorPackSetPersistedTask : TRIPBMessage
 @property  NSString *factorPackSetId
 @property  BOOL hasFactorPackSetId
 @property  TRIPersistedTaskAttribution *taskAttribution
 @property  BOOL hasTaskAttribution
 @property  int retryCount
 @property  BOOL hasRetryCount
 @property  NSString *rolloutId
 @property  BOOL hasRolloutId
 @property  int deploymentId
 @property  BOOL hasDeploymentId

  // class methods
  +[TRIFetchFactorPackSetPersistedTask descriptor]


TRIActivateTargetedRolloutDeploymentPersistedTask : TRIPBMessage
 @property  NSString *rolloutId
 @property  BOOL hasRolloutId
 @property  int deploymentId
 @property  BOOL hasDeploymentId
 @property  NSString *factorPackSetId
 @property  BOOL hasFactorPackSetId
 @property  TRIPersistedTaskAttribution *taskAttribution
 @property  BOOL hasTaskAttribution

  // class methods
  +[TRIActivateTargetedRolloutDeploymentPersistedTask descriptor]


TRIRolloutTargetingPersistedTask : TRIPBMessage
 @property  NSString *rolloutId
 @property  BOOL hasRolloutId
 @property  int deploymentId
 @property  BOOL hasDeploymentId
 @property  BOOL includeDependencies
 @property  BOOL hasIncludeDependencies
 @property  TRIPersistedTaskAttribution *taskAttribution
 @property  BOOL hasTaskAttribution
 @property  int triggerEvent
 @property  BOOL hasTriggerEvent

  // class methods
  +[TRIRolloutTargetingPersistedTask descriptor]


TRIFetchRolloutNotificationListPersistedTask : TRIPBMessage
 @property  TRIPBTimestamp *earliestTimestamp
 @property  BOOL hasEarliestTimestamp
 @property  TRIPersistedTaskAttribution *taskAttribution
 @property  BOOL hasTaskAttribution
 @property  int retryCount
 @property  BOOL hasRetryCount
 @property  NSMutableArray *namespacesArray
 @property  unsigned long namespacesArray_Count

  // class methods
  +[TRIFetchRolloutNotificationListPersistedTask descriptor]


TRISetupAssistantFetchPersistedTask : TRIPBMessage
  // class methods
  +[TRISetupAssistantFetchPersistedTask descriptor]


TRISelectRolloutNotificationListPersistedTask : TRIPBMessage
 @property  TRIPersistedTaskAttribution *taskAttribution
 @property  BOOL hasTaskAttribution
 @property  int retryCount
 @property  BOOL hasRetryCount
 @property  NSMutableArray *namespacesArray
 @property  unsigned long namespacesArray_Count
 @property  NSMutableArray *excludedNamespacesArray
 @property  unsigned long excludedNamespacesArray_Count

  // class methods
  +[TRISelectRolloutNotificationListPersistedTask descriptor]


TRIDisenrollRolloutPersistedTask : TRIPBMessage
 @property  NSString *rolloutId
 @property  BOOL hasRolloutId

  // class methods
  +[TRIDisenrollRolloutPersistedTask descriptor]


TRIContentTracker : NSObject
  // class methods
  +[TRIContentTracker contentIdentifierForFactorPackSetWithId:]
  +[TRIContentTracker decodeContentIdentifier:]
  +[TRIContentTracker contentIdentifierForExperimentArtifactWithDeployment:]
  +[TRIContentTracker contentIdentifierForTreatmentArtifactWithTreatmentId:container:]
  +[TRIContentTracker contentIdentifierForRolloutArtifactWithDeployment:]

  // instance methods
  -[TRIContentTracker initWithDatabase:]
  -[TRIContentTracker writeTransactionWithFailableBlock:]
  -[TRIContentTracker .cxx_destruct]
  -[TRIContentTracker enumerateTrackedItemsWithBlock:]
  -[TRIContentTracker init]
  -[TRIContentTracker _addOrDropRefWithContentIdentifier:changeType:]
  -[TRIContentTracker refCountForContentIdentifier:refCount:]
  -[TRIContentTracker addRefWithContentIdentifier:]
  -[TRIContentTracker clearRefsWithContentIdentifier:]
  -[TRIContentTracker readTransactionWithFailableBlock:]
  -[TRIContentTracker dropRefWithContentIdentifier:]


TRIRetargetAllTask : TRIBaseTask <TRITask>
 @property  NSArray *nextTasks
 @property  int taskType
 @property  NSString *taskName
 @property  NSArray *tags
 @property  NSDate *startTime
 @property  NSArray *dependencies
 @property  <TRITaskQueueStateProviding> *stateProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TRIRetargetAllTask supportsSecureCoding]
  +[TRIRetargetAllTask parseFromData:]
  +[TRIRetargetAllTask task]
  +[TRIRetargetAllTask taskWithTaskAttribution:]

  // instance methods
  -[TRIRetargetAllTask taskType]
  -[TRIRetargetAllTask initWithCoder:]
  -[TRIRetargetAllTask _asPersistedTask]
  -[TRIRetargetAllTask .cxx_destruct]
  -[TRIRetargetAllTask setNextTasks:]
  -[TRIRetargetAllTask runUsingContext:withTaskQueue:]
  -[TRIRetargetAllTask serialize]
  -[TRIRetargetAllTask initWithTaskAttribution:]
  -[TRIRetargetAllTask encodeWithCoder:]
  -[TRIRetargetAllTask nextTasks]


TRIUnitTestStorageManagement : NSObject <TRIStorageManagementProtocol>
  // instance methods
  -[TRIUnitTestStorageManagement requestTrialStorageResetOnNextLaunch]


TRITempDirScopeGuard : NSObject
 @property  NSString *canonicalPath
 @property  NSString *path

  // class methods
  +[TRITempDirScopeGuard ifUnreferencedCleanupPath:]
  +[TRITempDirScopeGuard refCountsLock]

  // instance methods
  -[TRITempDirScopeGuard initWithPath:]
  -[TRITempDirScopeGuard .cxx_destruct]
  -[TRITempDirScopeGuard init]
  -[TRITempDirScopeGuard path]
  -[TRITempDirScopeGuard dealloc]
  -[TRITempDirScopeGuard dispose]
  -[TRITempDirScopeGuard canonicalPath]


TRIDServer : NSObject
 @property  BOOL isRunning

  // class methods
  +[TRIDServer sharedServer]
  +[TRIDServer _triPath]

  // instance methods
  -[TRIDServer _asyncStartWithMetrics:]
  -[TRIDServer initWithPath:]
  -[TRIDServer _registerXpcStreamEventHandler]
  -[TRIDServer .cxx_destruct]
  -[TRIDServer isRunning]
  -[TRIDServer _updateSystemInfo]
  -[TRIDServer init]
  -[TRIDServer _getDiskUsageInBytes]
  -[TRIDServer _registerSetupAssistantFetchActivityOnce]
  -[TRIDServer _dispatchWhenUnlocked:]
  -[TRIDServer _logMetrics:stopwatch:]
  -[TRIDServer start]


TRISetupAssistantFetchTelemetryGenerator : NSObject
  // instance methods
  -[TRISetupAssistantFetchTelemetryGenerator .cxx_destruct]
  -[TRISetupAssistantFetchTelemetryGenerator initWithDeadlineTimestamp:referenceDate:existingTelemetry:]
  -[TRISetupAssistantFetchTelemetryGenerator latencyMetric]
  -[TRISetupAssistantFetchTelemetryGenerator rolloutSystemTelemetry]


TRIFetchExperimentTask : TRIExperimentBaseTask <TRIRetryableTask, TRIMetricsProviding>
 @property  int retryCount
 @property  BOOL wasDeferred
 @property  int taskType
 @property  NSString *taskName
 @property  NSArray *tags
 @property  NSDate *startTime
 @property  NSArray *dependencies
 @property  <TRITaskQueueStateProviding> *stateProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TRIFetchExperimentTask supportsSecureCoding]
  +[TRIFetchExperimentTask taskWithExperimentDeployment:taskAttributing:]
  +[TRIFetchExperimentTask parseFromData:]

  // instance methods
  -[TRIFetchExperimentTask taskType]
  -[TRIFetchExperimentTask initWithCoder:]
  -[TRIFetchExperimentTask _asPersistedTask]
  -[TRIFetchExperimentTask trialSystemTelemetry]
  -[TRIFetchExperimentTask .cxx_destruct]
  -[TRIFetchExperimentTask _nextTasksForRunStatus:]
  -[TRIFetchExperimentTask initWithExperimentDeployment:taskAttributing:]
  -[TRIFetchExperimentTask runUsingContext:withTaskQueue:]
  -[TRIFetchExperimentTask dimensions]
  -[TRIFetchExperimentTask wasDeferred]
  -[TRIFetchExperimentTask setWasDeferred:]
  -[TRIFetchExperimentTask serialize]
  -[TRIFetchExperimentTask metrics]
  -[TRIFetchExperimentTask runEnqueueHandlerUsingContext:]
  -[TRIFetchExperimentTask setRetryCount:]
  -[TRIFetchExperimentTask retryCount]
  -[TRIFetchExperimentTask runDequeueHandlerUsingContext:]
  -[TRIFetchExperimentTask requiredCapabilities:]
  -[TRIFetchExperimentTask encodeWithCoder:]


TRIStorageManagement : NSObject <TRIStorageManagementProtocol>
  // instance methods
  -[TRIStorageManagement requestTrialStorageResetOnNextLaunch]
  -[TRIStorageManagement prepareTrialStorage]
  -[TRIStorageManagement _readSchemaVersion:]
  -[TRIStorageManagement _readDeviceIdWithSchemaVersion:intoData:]
  -[TRIStorageManagement _clearStorage]
  -[TRIStorageManagement _writeDeviceIdWithData:schemaVersion:]
  -[TRIStorageManagement _writeSchemaVersion:]
  -[TRIStorageManagement _clearContainerStorage]
  -[TRIStorageManagement _runNamespaceDatabaseBlock:]


TRIRolloutTargeter : NSObject <TRIRolloutTargeting>
 @property  <TRISystemCovariateProviding> *systemCovariateProvider
 @property  <TRIUserCovariateProviding> *userCovariateProvider

  // class methods
  +[TRIRolloutTargeter targetingErrorWithDeployment:errorType:]
  +[TRIRolloutTargeter _targetingErrorWithDeployment:errorType:details:]

  // instance methods
  -[TRIRolloutTargeter _activeRecordForRolloutId:]
  -[TRIRolloutTargeter .cxx_destruct]
  -[TRIRolloutTargeter systemCovariateProvider]
  -[TRIRolloutTargeter userCovariateProvider]
  -[TRIRolloutTargeter init]
  -[TRIRolloutTargeter _targetRollout:factorPackSetId:relatedRampDeployment:recurseOnRamp:error:]
  -[TRIRolloutTargeter targetRollout:factorPackSetId:relatedRampDeployment:error:]
  -[TRIRolloutTargeter initWithDatabase:systemCovariateProvider:userCovariateProvider:]


TRIRotateSubjectIdTask : TRIBaseTask <TRITask>
 @property  int taskType
 @property  NSString *taskName
 @property  NSArray *tags
 @property  NSDate *startTime
 @property  NSArray *dependencies
 @property  <TRITaskQueueStateProviding> *stateProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TRIRotateSubjectIdTask supportsSecureCoding]
  +[TRIRotateSubjectIdTask parseFromData:]
  +[TRIRotateSubjectIdTask task]
  +[TRIRotateSubjectIdTask taskWithDeviceId:nextRotationDate:forceUpdate:]

  // instance methods
  -[TRIRotateSubjectIdTask taskType]
  -[TRIRotateSubjectIdTask initWithCoder:]
  -[TRIRotateSubjectIdTask _asPersistedTask]
  -[TRIRotateSubjectIdTask .cxx_destruct]
  -[TRIRotateSubjectIdTask runUsingContext:withTaskQueue:]
  -[TRIRotateSubjectIdTask isEqual:]
  -[TRIRotateSubjectIdTask serialize]
  -[TRIRotateSubjectIdTask encodeWithCoder:]
  -[TRIRotateSubjectIdTask tags]
  -[TRIRotateSubjectIdTask runTaskUsingContext:]
  -[TRIRotateSubjectIdTask initWithDeviceId:nextRotationDate:forceUpdate:]


TRIPushServiceConnectionMultiplexer : NSObject <TRIPushServiceConnectionMultiplexing>
 @property  <TRIPushServiceConnectionCreating> *connectionCreator
 @property  <TRIPushServiceChannelSubscribing> *currentConnection
 @property  <TRIPushServiceConnectionDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TRIPushServiceConnectionMultiplexer initWithConnectionCreator:connectionDelegate:]
  -[TRIPushServiceConnectionMultiplexer unsubscribeForExperimentId:]
  -[TRIPushServiceConnectionMultiplexer .cxx_destruct]
  -[TRIPushServiceConnectionMultiplexer switchToEnvironment:]
  -[TRIPushServiceConnectionMultiplexer currentConnection]
  -[TRIPushServiceConnectionMultiplexer _expectedChannelIdsForDeployments:experimentIds:maxChannelsAllowed:]
  -[TRIPushServiceConnectionMultiplexer ensureSubscriptionsExistOnlyForRolloutDeployments:experimentIds:maxChannelsAllowed:]
  -[TRIPushServiceConnectionMultiplexer subscribeForRolloutDeployment:]
  -[TRIPushServiceConnectionMultiplexer delegate]
  -[TRIPushServiceConnectionMultiplexer subscribeForExperimentId:]
  -[TRIPushServiceConnectionMultiplexer connectionCreator]
  -[TRIPushServiceConnectionMultiplexer initWithServerContext:taskQueue:]


TRIPushServiceConnectionCreator : NSObject <TRIPushServiceConnectionCreating>
  // instance methods
  -[TRIPushServiceConnectionCreator connectionWithDelegate:environment:]


TRISetupAssistantFetchTask : TRIBaseTask <TRITask>
 @property  int taskType
 @property  NSString *taskName
 @property  NSArray *tags
 @property  NSDate *startTime
 @property  NSArray *dependencies
 @property  <TRITaskQueueStateProviding> *stateProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TRISetupAssistantFetchTask supportsSecureCoding]
  +[TRISetupAssistantFetchTask parseFromData:]
  +[TRISetupAssistantFetchTask task]

  // instance methods
  -[TRISetupAssistantFetchTask taskType]
  -[TRISetupAssistantFetchTask initWithCoder:]
  -[TRISetupAssistantFetchTask _asPersistedTask]
  -[TRISetupAssistantFetchTask runUsingContext:withTaskQueue:]
  -[TRISetupAssistantFetchTask serialize]
  -[TRISetupAssistantFetchTask encodeWithCoder:]


TRINamespaceDescriptorProvider : NSObject <TRINamespaceDescriptorProviding>
  // class methods
  +[TRINamespaceDescriptorProvider providerWithNamespaceDatabase:defaultDescriptorDirectoryPath:]
  +[TRINamespaceDescriptorProvider _descriptorFromDynamicNamespaceRecord:]

  // instance methods
  -[TRINamespaceDescriptorProvider .cxx_destruct]
  -[TRINamespaceDescriptorProvider _dynamicDescriptorsForContainer:teamId:]
  -[TRINamespaceDescriptorProvider descriptorWithNamespaceName:]
  -[TRINamespaceDescriptorProvider enumerateDefaultDescriptorsWithBlock:]
  -[TRINamespaceDescriptorProvider initWithNamespaceDatabase:defaultDescriptorDirectoryPath:]


TRIRunningXPCActivityDescriptor : NSObject <NSCopying>
 @property  @? shouldDefer
 @property  @? completion
 @property  NSString *name
 @property  NSObject<OS_xpc_object> *activity
 @property  unsigned int generationCount
 @property  unsigned long capabilities

  // instance methods
  -[TRIRunningXPCActivityDescriptor generationCount]
  -[TRIRunningXPCActivityDescriptor shouldDefer]
  -[TRIRunningXPCActivityDescriptor setShouldDefer:]
  -[TRIRunningXPCActivityDescriptor completion]
  -[TRIRunningXPCActivityDescriptor setCompletion:]
  -[TRIRunningXPCActivityDescriptor name]
  -[TRIRunningXPCActivityDescriptor capabilities]
  -[TRIRunningXPCActivityDescriptor .cxx_destruct]
  -[TRIRunningXPCActivityDescriptor init]
  -[TRIRunningXPCActivityDescriptor activity]
  -[TRIRunningXPCActivityDescriptor initForImmediateWorkWithCapabilities:]
  -[TRIRunningXPCActivityDescriptor initWithActivity:capabilities:name:]
  -[TRIRunningXPCActivityDescriptor copyWithZone:]


TRIXPCActivitySupport : NSObject
  // class methods
  +[TRIXPCActivitySupport nameForActivityState:]
  +[TRIXPCActivitySupport registerActivityWithLaunchDaemonDescriptor:checkInBlock:asyncHandler:]
  +[TRIXPCActivitySupport assertRegistrationOfLaunchdPlistActivities:]
  +[TRIXPCActivitySupport _registeredActivities]
  +[TRIXPCActivitySupport unsafe_immediatelyScheduleActivityWithLaunchDaemonDescriptor:]


TRICacheDeleteUtils : NSObject
  // class methods
  +[TRICacheDeleteUtils getFreeDiskSpace]
  +[TRICacheDeleteUtils getPurgeableDiskSpace]
  +[TRICacheDeleteUtils hasSufficientDiskSpaceForDownload:]


TRIDownloadLatencyTaskResultTelemetryBuilder : NSObject
 @property  <TRILatencyMetricTelemetryValidating> *validator
 @property  NSMutableDictionary *telemetryForDeployment

  // instance methods
  -[TRIDownloadLatencyTaskResultTelemetryBuilder .cxx_destruct]
  -[TRIDownloadLatencyTaskResultTelemetryBuilder validator]
  -[TRIDownloadLatencyTaskResultTelemetryBuilder builtTelemetry]
  -[TRIDownloadLatencyTaskResultTelemetryBuilder initWithTelemetryValidator:]
  -[TRIDownloadLatencyTaskResultTelemetryBuilder updateWithTask:runResult:]
  -[TRIDownloadLatencyTaskResultTelemetryBuilder _handleActivationTask:runResult:]
  -[TRIDownloadLatencyTaskResultTelemetryBuilder _handleFetchTask:runResult:]
  -[TRIDownloadLatencyTaskResultTelemetryBuilder _updateBuiltTelemetryWithDeployment:rolloutFields:downloadStatus:]
  -[TRIDownloadLatencyTaskResultTelemetryBuilder telemetryForDeployment]


TRIConfigurationTask : TRIBaseTask <TRITask>
 @property  int taskType
 @property  NSString *taskName
 @property  NSArray *tags
 @property  NSDate *startTime
 @property  NSArray *dependencies
 @property  <TRITaskQueueStateProviding> *stateProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TRIConfigurationTask supportsSecureCoding]
  +[TRIConfigurationTask parseFromData:]

  // instance methods
  -[TRIConfigurationTask taskType]
  -[TRIConfigurationTask initWithCoder:]
  -[TRIConfigurationTask _asPersistedTask]
  -[TRIConfigurationTask runUsingContext:withTaskQueue:]
  -[TRIConfigurationTask serialize]
  -[TRIConfigurationTask encodeWithCoder:]


TRIPurgeableFactorPacksEnumerator : NSObject <TRIPurgeableFactorPacksEnumerating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TRIPurgeableFactorPacksEnumerator .cxx_destruct]
  -[TRIPurgeableFactorPacksEnumerator enumerateRolloutFactorPackPurgeCandidatesFromNamespaceNames:purgeableFactorFilterBlock:block:]
  -[TRIPurgeableFactorPacksEnumerator initWithPaths:namespaceResolver:]
  -[TRIPurgeableFactorPacksEnumerator _enumerateRolloutFactorPackOnDemandFactorsForNamespace:block:]


TRIAssetMetadataReservedKeys : NSObject
  // class methods
  +[TRIAssetMetadataReservedKeys isEncryptedForMetadata:]
  +[TRIAssetMetadataReservedKeys compressionModeForMetadata:]


TRIClientTreatmentStorage : NSObject
  // instance methods
  -[TRIClientTreatmentStorage initWithPaths:]
  -[TRIClientTreatmentStorage urlForFactorsWithTreatmentId:namespaceName:]
  -[TRIClientTreatmentStorage _resolveAssetPathsInTreatment:usingReferenceURL:]
  -[TRIClientTreatmentStorage .cxx_destruct]
  -[TRIClientTreatmentStorage _linkAssetWithId:treatmentId:assetStore:factor:forRollouts:]
  -[TRIClientTreatmentStorage _saveNamespacePartitionedTreatmentsForTreatment:forNamespaceNames:forRollouts:]
  -[TRIClientTreatmentStorage init]
  -[TRIClientTreatmentStorage _assetURLForFactor:treatmentId:]
  -[TRIClientTreatmentStorage _defaultsAssetURLForFactor:]
  -[TRIClientTreatmentStorage updateSavedTreatmentWithTreatmentId:linkingNewAssetIds:forNamespaceNames:]
  -[TRIClientTreatmentStorage _linkAssetsWithIds:updatingTreatment:]
  -[TRIClientTreatmentStorage urlForTreatmentWithTreatmentId:]
  -[TRIClientTreatmentStorage urlForDefaultFactorsWithNamespaceName:]
  -[TRIClientTreatmentStorage updateSavedTreatmentWithTreatmentId:deletingAssetsIndexes:forNamespaceNames:forRollouts:]
  -[TRIClientTreatmentStorage _linkAssetsUpdatingTreatment:forRollouts:]
  -[TRIClientTreatmentStorage _copyFileFromURL:to:]
  -[TRIClientTreatmentStorage loadTreatmentWithTreatmentId:isFilePresent:]
  -[TRIClientTreatmentStorage _baseUrlForTreatment:namespaceName:]
  -[TRIClientTreatmentStorage _removeRolloutWithDescriptor:descriptorDir:treatmentLayer:namespaceName:]
  -[TRIClientTreatmentStorage removeTreatmentFromLayer:withNamespaceName:upgradeNCVs:]
  -[TRIClientTreatmentStorage _savePersistedTreatment:]
  -[TRIClientTreatmentStorage initWithPaths:extractor:]
  -[TRIClientTreatmentStorage removeTreatmentWithTreatmentId:]
  -[TRIClientTreatmentStorage _deleteOnDemandAssetsWithIndexes:treatment:forRollouts:]
  -[TRIClientTreatmentStorage saveTreatment:]
  -[TRIClientTreatmentStorage _removeFactorsWithURL:]
  -[TRIClientTreatmentStorage _removeFactorsWithTreatmentId:namespaceName:]


TRICKOperationGroupFactory : NSObject
  // class methods
  +[TRICKOperationGroupFactory groupForRolloutId:]
  +[TRICKOperationGroupFactory groupForDownloadOptions:]
  +[TRICKOperationGroupFactory groupForScheduledFetch]
  +[TRICKOperationGroupFactory groupForUserInitiatedFetch]
  +[TRICKOperationGroupFactory groupForExperimentId:]


TRILimitedCarryProfileManager : NSObject <MCProfileConnectionObserver>
 @property  NSDictionary *lcExperiments
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TRILimitedCarryProfileManager .cxx_destruct]
  -[TRILimitedCarryProfileManager profileConnectionDidReceiveProfileListChangedNotification:userInfo:]
  -[TRILimitedCarryProfileManager _enqueueTask:]
  -[TRILimitedCarryProfileManager removeProfileForExperiment:]
  -[TRILimitedCarryProfileManager lcExperiments]
  -[TRILimitedCarryProfileManager initWithTaskQueue:database:]
  -[TRILimitedCarryProfileManager processLaunchEvent]
  -[TRILimitedCarryProfileManager _gatherProfleUpdatesAndScheduleRelatedTasks]
  -[TRILimitedCarryProfileManager _limitedCarryExperiments]
  -[TRILimitedCarryProfileManager _getStoredLimitedCarryExperimentsWithError:]
  -[TRILimitedCarryProfileManager setLcExperiments:]
  -[TRILimitedCarryProfileManager _setStoredLimitedCarryExperimentsWithError:]


TRILatencyMetricTelemetryValidator : NSObject <TRILatencyMetricTelemetryValidating>
 @property  TRIRolloutDatabase *rolloutDb
 @property  NSSet *namespacesAllowedForLogging

  // instance methods
  -[TRILatencyMetricTelemetryValidator .cxx_destruct]
  -[TRILatencyMetricTelemetryValidator initWithRolloutDatabase:paths:]
  -[TRILatencyMetricTelemetryValidator validateAndReturnTelemetryForDeployment:factorPackSetId:]
  -[TRILatencyMetricTelemetryValidator namespacesAllowedForLogging]
  -[TRILatencyMetricTelemetryValidator rolloutDb]
  -[TRILatencyMetricTelemetryValidator _isRecordContainingAllowedLoggingNamespace:]
  -[TRILatencyMetricTelemetryValidator createRolloutFieldForDeployment:factorPackSetId:record:]


TRIRolloutTargetingTask : TRIBaseTask <TRITask, TRIMetricsProviding>
 @property  TRIRolloutDeployment *rolloutDeployment
 @property  int taskType
 @property  NSString *taskName
 @property  NSArray *tags
 @property  NSDate *startTime
 @property  NSArray *dependencies
 @property  <TRITaskQueueStateProviding> *stateProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TRIRolloutTargetingTask supportsSecureCoding]
  +[TRIRolloutTargetingTask taskWithRolloutDeployment:includeDependencies:taskAttribution:triggerEvent:]
  +[TRIRolloutTargetingTask parseFromData:]

  // instance methods
  -[TRIRolloutTargetingTask taskType]
  -[TRIRolloutTargetingTask rolloutDeployment]
  -[TRIRolloutTargetingTask initWithCoder:]
  -[TRIRolloutTargetingTask _asPersistedTask]
  -[TRIRolloutTargetingTask trialSystemTelemetry]
  -[TRIRolloutTargetingTask .cxx_destruct]
  -[TRIRolloutTargetingTask dependencies]
  -[TRIRolloutTargetingTask runUsingContext:withTaskQueue:]
  -[TRIRolloutTargetingTask dimensions]
  -[TRIRolloutTargetingTask _runTaskUsingContext:withTaskQueue:rolloutTargeter:error:]
  -[TRIRolloutTargetingTask _taskResultWithStatus:reportResults:nextTasks:]
  -[TRIRolloutTargetingTask isEqual:]
  -[TRIRolloutTargetingTask serialize]
  -[TRIRolloutTargetingTask _systemCovariatesWithPaths:]
  -[TRIRolloutTargetingTask metrics]
  -[TRIRolloutTargetingTask runEnqueueHandlerUsingContext:]
  -[TRIRolloutTargetingTask _categoricalValueForTriggerEvent:]
  -[TRIRolloutTargetingTask runDequeueHandlerUsingContext:]
  -[TRIRolloutTargetingTask encodeWithCoder:]
  -[TRIRolloutTargetingTask tags]
  -[TRIRolloutTargetingTask initWithRolloutDeployment:includeDependencies:taskAttribution:triggerEvent:]


TRIClientFactorPackUtils : NSObject
  // class methods
  +[TRIClientFactorPackUtils subscribedOnDemandFactorsForAssetIds:factorPack:subscriptionSettings:]
  +[TRIClientFactorPackUtils unlinkedOnDemandAssetsWithFactorPack:]
  +[TRIClientFactorPackUtils _triCollectMetadataForAssetsInFactorPack:withTest:]
  +[TRIClientFactorPackUtils requiredAssetsForInstallationWithFactorPack:assetStore:subscriptionSettings:aliases:]


TRIAllocationStatusEntitlementSet : NSObject <TRIAllocationStatusEntitled>
  // instance methods
  -[TRIAllocationStatusEntitlementSet .cxx_destruct]
  -[TRIAllocationStatusEntitlementSet allowedDeploymentEnvironments]
  -[TRIAllocationStatusEntitlementSet initWithAllowedDeploymentEnvironments:]


TRIXPCStatusRequestHandler : NSObject <TRIXPCStatusServiceProtocol>
  // instance methods
  -[TRIXPCStatusRequestHandler experimentRecordsWithDeploymentEnvironments:privacyFilterPolicy:completion:]
  -[TRIXPCStatusRequestHandler .cxx_destruct]
  -[TRIXPCStatusRequestHandler experimentHistoryRecordsWithLimit:newerThanDate:privacyFilterPolicy:deploymentEnvironment:completion:]
  -[TRIXPCStatusRequestHandler rolloutAllocationStatusWithPrivacyFilterPolicy:completion:]
  -[TRIXPCStatusRequestHandler rolloutRecordsWithCompletion:]
  -[TRIXPCStatusRequestHandler activeEvaluationsForMLRuntimeWithCompletion:]
  -[TRIXPCStatusRequestHandler initWithPromise:auditToken:]
  -[TRIXPCStatusRequestHandler evaluationHistoryRecordsForMLRuntimeWithLimit:newerThanDate:completion:]


TRIXPCStatusServiceListener : NSObject <NSXPCListenerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TRIXPCStatusServiceListener initWithPromise:]
  -[TRIXPCStatusServiceListener .cxx_destruct]
  -[TRIXPCStatusServiceListener listener:shouldAcceptNewConnection:]


TRIActivateTreatmentBaseTask : TRITreatmentBaseTask
 @property  BOOL testingIgnoreDependencies
 @property  NSDate *endTime
 @property  BOOL requiresTreatmentInstallation

  // instance methods
  -[TRIActivateTreatmentBaseTask _writeNamespaceDescriptorsWithPaths:toTreatmentLayer:forExperiment:treatmentURLs:context:]
  -[TRIActivateTreatmentBaseTask endTime]
  -[TRIActivateTreatmentBaseTask setStartTime:]
  -[TRIActivateTreatmentBaseTask _experimentRecord:hasConflictWithExperimentsInDatabase:conflictEndTime:]
  -[TRIActivateTreatmentBaseTask setEndTime:]
  -[TRIActivateTreatmentBaseTask runTaskUsingContext:experiment:]
  -[TRIActivateTreatmentBaseTask .cxx_destruct]
  -[TRIActivateTreatmentBaseTask dependencies]
  -[TRIActivateTreatmentBaseTask _nextTasksForRunStatus:]
  -[TRIActivateTreatmentBaseTask runUsingContext:withTaskQueue:]
  -[TRIActivateTreatmentBaseTask isEqual:]
  -[TRIActivateTreatmentBaseTask initWithExperiment:treatmentId:taskAttributing:requiresTreatmentInstallation:]
  -[TRIActivateTreatmentBaseTask updateLoggingWithExperimentRecord:paths:trackingId:newLogTreatmentAddedOut:]
  -[TRIActivateTreatmentBaseTask requiresTreatmentInstallation]
  -[TRIActivateTreatmentBaseTask startTime]
  -[TRIActivateTreatmentBaseTask runEnqueueHandlerUsingContext:]
  -[TRIActivateTreatmentBaseTask testingIgnoreDependencies]
  -[TRIActivateTreatmentBaseTask setTestingIgnoreDependencies:]
  -[TRIActivateTreatmentBaseTask runDequeueHandlerUsingContext:]
  -[TRIActivateTreatmentBaseTask runTaskUsingContext:]


TRIDatabase : NSObject <_PASDatabaseMigrationProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TRIDatabase migrateToVersion:]
  -[TRIDatabase createTempTableContainingRowsFromQuery:bind:namePrefix:transaction:]
  -[TRIDatabase vacuum]
  -[TRIDatabase initWithPaths:databasePath:storageManagement:performMigrations:]
  -[TRIDatabase writeTransactionWithFailableBlock:]
  -[TRIDatabase initWithPaths:storageManagement:]
  -[TRIDatabase .cxx_destruct]
  -[TRIDatabase _disableQueryPlanLogging]
  -[TRIDatabase queriesToSkipFromEmptyToVersion:]
  -[TRIDatabase init]
  -[TRIDatabase generalErrorHandlerWithOutError:]
  -[TRIDatabase migrations]
  -[TRIDatabase dropTableWithName:transaction:]
  -[TRIDatabase _enableQueryPlanLogging]
  -[TRIDatabase initInMemoryAndPerformMigrations:]
  -[TRIDatabase readTransactionWithFailableBlock:]
  -[TRIDatabase closePermanently]
  -[TRIDatabase _updateQueryPlanLogging]
  -[TRIDatabase databaseHandle]


TRIMemoryEfficientFileDigest : NSObject
  // class methods
  +[TRIMemoryEfficientFileDigest sha256DigestForFile:]


TRITritaskOptionsRoot : TRIPBRootObject

TRITaskOptions : TRIPBMessage
 @property  BOOL isManuallyTargeted
 @property  BOOL hasIsManuallyTargeted

  // class methods
  +[TRITaskOptions descriptor]


TRIPeekEnumerator : NSObject
  // instance methods
  -[TRIPeekEnumerator nextObject]
  -[TRIPeekEnumerator .cxx_destruct]
  -[TRIPeekEnumerator initWithEnumerator:]
  -[TRIPeekEnumerator peekNextObject]


TRIExperimentHistoryDatabase : NSObject
  // instance methods
  -[TRIExperimentHistoryDatabase initWithDatabase:]
  -[TRIExperimentHistoryDatabase addRecord:]
  -[TRIExperimentHistoryDatabase writeTransactionWithFailableBlock:]
  -[TRIExperimentHistoryDatabase .cxx_destruct]
  -[TRIExperimentHistoryDatabase enumerateRecordsNewerThanDate:matchingDeploymentEnvironments:block:]
  -[TRIExperimentHistoryDatabase init]
  -[TRIExperimentHistoryDatabase _enumerateRecordsMatchingWhereClause:bind:block:]
  -[TRIExperimentHistoryDatabase expireRecordsOlderThanDate:deletedCount:]
  -[TRIExperimentHistoryDatabase readTransactionWithFailableBlock:]


TRIClient(Telemetry)
	// class methods
	+[TRIClient(Telemetry) systemNamespaceName]

	// instance methods
	-[TRIClient(Telemetry) shouldLogAtLevel:]
	-[TRIClient(Telemetry) shouldLogAtLevel:withPrivacyRadar:]
	-[TRIClient(Telemetry) levelForSystemFactor:]

(TRI)
	// class methods
	+[(TRI) triKeys:values:fromDictionary:]

	// instance methods
	-[(TRI) tri_contextValueWithName:]
	-[(TRI) getContextValueWithName:]
	-[(TRI) triStringValueForField:isNestedValue:]
	-[(TRI) triDataForField:]
	-[(TRI) triKeys:values:]
	-[(TRI) triObjectForExpectedKey:]
	-[(TRI) triArrayValueForField:isNestedValue:]
	-[(TRI) triNumberValueForField:isNestedValue:]
	-[(TRI) triDateForField:]
	-[(TRI) triReversedDag]
	-[(TRI) triItemsInDagWithSource:]
	-[(TRI) triItemsInDagWithSink:]
	-[(TRI) triTransformValuesWithBlock:]
	-[(TRI) triValueFromNestedField:]
	-[(TRI) triDataValueFromBase64StringForField:]

<DEREK BUG Categories!>(TRI)
	// instance methods
	-[<DEREK BUG Categories!>(TRI) triKeys:values:]
	-[<DEREK BUG Categories!>(TRI) tri_setContextValueWithName:value:]

TRISystemConfiguration(Server)
	// instance methods
	-[TRISystemConfiguration(Server) userSettingsIsSiriEnabled]
	-[TRISystemConfiguration(Server) userSettingsSiriLocale]

TRIClientTreatment(CloudKit)
	// class methods
	+[TRIClientTreatment(CloudKit) treatmentFromCKRecord:treatmentSize:]
	+[TRIClientTreatment(CloudKit) assetURLsFromCKRecord:assetIndexes:]

	// instance methods
	-[TRIClientTreatment(CloudKit) requiredAssetsForInstallationWithAssetStore:subscriptionSettings:]
	-[TRIClientTreatment(CloudKit) unlinkedOnDemandAssets]
	-[TRIClientTreatment(CloudKit) _triCollectMetadataForAssetsWithTest:]

NSPredicate(TRI)
	// class methods
	+[NSPredicate(TRI) _triAnnotatePredicate:format:usingArgs:]
	+[NSPredicate(TRI) triLoggablePredicateWithFormat:]
	+[NSPredicate(TRI) triLoggablePredicateWithValue:]

	// instance methods
	-[NSPredicate(TRI) triLogDesc]
	-[NSPredicate(TRI) triSetLogDesc:]

TRIExperimentDeployment(TRITask)
	// instance methods
	-[TRIExperimentDeployment(TRITask) taskTag]
	-[TRIExperimentDeployment(TRITask) shortDesc]
	-[TRIExperimentDeployment(TRITask) hasDeploymentId]

(TRIUtils)
	// class methods
	+[(TRIUtils) triIsDate:equalToDate:withinInterval:]
	+[(TRIUtils) triIsDate:equalToDate:]

(TRITreatmentId)
	// instance methods
	-[(TRITreatmentId) triIsValidTreatmentId]
	-[(TRITreatmentId) tri_assignmentProbabilityWithSeed:]
	-[(TRITreatmentId) assignmentProbabilityWithSeed:]

TRIClientNamespaceMetadataStorage(Server)
	// instance methods
	-[TRIClientNamespaceMetadataStorage(Server) mergeNamespaceMetadata:forNamespaceName:]
	-[TRIClientNamespaceMetadataStorage(Server) removeOutdatedNamespaceMetadataForNamespaceName:currentCompatibilityVersion:]

(TRIFunctions)
	// instance methods
	-[(TRIFunctions) tri_intersects:]
	-[(TRIFunctions) tri_contains:]

(TRICloudKit)
	// class methods
	+[(TRICloudKit) triCloudKitErrorWithMessage:code:]
	+[(TRICloudKit) triCloudKitErrorWithMessage:]

NSFileManager(TRIServer)
	// class methods
	+[NSFileManager(TRIServer) triRenameOrFaultWithSourcePath:destPath:]
	+[NSFileManager(TRIServer) triDiskUsageForDirectory:]
	+[NSFileManager(TRIServer) triRemoveFileProtectionIfPresentForPath:]
	+[NSFileManager(TRIServer) triForceRenameWithSourcePath:destPath:]
	+[NSFileManager(TRIServer) triTargetPathForSymlink:]
	+[NSFileManager(TRIServer) triPostOrderDescendantDirectoryPathsAtPath:]
	+[NSFileManager(TRIServer) triCompressedSizeForFileAtPath:shouldFault:]

	// instance methods
	-[NSFileManager(TRIServer) triForceRemoveItemAtPath:error:]
	-[NSFileManager(TRIServer) triRemoveDirectoryForPath:isDirectory:error:]
	-[NSFileManager(TRIServer) triRemoveNestedEmptyDirectoriesAtPath:]
	-[NSFileManager(TRIServer) triRemoveCachedANEBinariesForModelsFromPath:error:]

TRINamespaceStatusProvider(Tasks)
	// class methods
	+[TRINamespaceStatusProvider(Tasks) updateStatusFetchSuccess:forNamespaceName:withContext:]

01 00 0800 /System/Library/PrivateFrameworks/ApplePushService.framework/ApplePushService: APSConnection 
01 00 0500 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKAsset 
01 00 0500 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKContainer 
01 00 0500 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchRecordsOperation 
01 00 0500 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKModifyRecordsOperation 
01 00 0500 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKOperationConfiguration 
01 00 0500 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKOperationGroup 
01 00 0500 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKQuery 
01 00 0500 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKQueryOperation 
01 00 0500 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecord 
01 00 0500 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecordID 
01 00 0500 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecordZoneID 
01 00 0600 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationRecord 
01 00 0d00 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBlockOperation 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSComparisonPredicate 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCompoundPredicate 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSExpression 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileHandle 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSISO8601DateFormatter 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMethodSignature 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1000 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSScanner 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0900 /System/Library/Frameworks/PushKit.framework/PushKit: PKPublicChannel 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRIAllocationStatus 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRIAppContainer 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRIAssetIdFactorName 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRICKServerEnvironmentReader 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRIClient 
01 00 0300 /System/Library/PrivateFrameworks/TrialProto.framework/TrialProto: TRIClientExperiment 
01 00 0300 /System/Library/PrivateFrameworks/TrialProto.framework/TrialProto: TRIClientFactorPack 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRIClientFactorPackStreamingParser 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRIClientFactorPackStreamingWriter 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRIClientNamespaceMetadata 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRIClientNamespaceMetadataStorage 
01 00 0300 /System/Library/PrivateFrameworks/TrialProto.framework/TrialProto: TRIClientRollout 
01 00 0300 /System/Library/PrivateFrameworks/TrialProto.framework/TrialProto: TRIClientTreatment 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRIDefaultFactorProvider 
01 00 0300 /System/Library/PrivateFrameworks/TrialProto.framework/TrialProto: TRIDenormalizedEvent 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRIDownloadNotification 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRIDownloadOptions 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRIEntitlement 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRIEvaluationStatus 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRIExperimentAllocationStatus 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRIExperimentDeployment 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRIExperimentFactorsState 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRIExperimentHistoryRecord 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRIFPNamespaceFactorProvider 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRIFactorDownloadValidator 
01 00 0300 /System/Library/PrivateFrameworks/TrialProto.framework/TrialProto: TRIFactorLevel 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRIFactorProviderIdent 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRIFileBackedMutableStringArray 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRIFileLock 
01 00 0300 /System/Library/PrivateFrameworks/TrialProto.framework/TrialProto: TRILogNamespace 
01 00 0300 /System/Library/PrivateFrameworks/TrialProto.framework/TrialProto: TRILogTreatment 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRILogTreatmentReader 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRIMLRuntimeActiveEvaluationTuple 
01 00 0300 /System/Library/PrivateFrameworks/TrialProto.framework/TrialProto: TRIMLRuntimeEvaluation 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRIMLRuntimeEvaluationHistoryRecord 
01 00 0300 /System/Library/PrivateFrameworks/TrialProto.framework/TrialProto: TRIMetric 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRIMisc 
01 00 0300 /System/Library/PrivateFrameworks/TrialProto.framework/TrialProto: TRINamespace 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRINamespaceDescriptor 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRINamespaceFactorProvider 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRINamespaceFactorProviderChain 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRINamespaceLogPolicy 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRINamespaceOptionalParams 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRINamespaceRecord 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRINamespaceResolver 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRINamespaceStatus 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRINamespaceStatusProvider 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRINamespaceUpdateNotification 
01 00 0300 /System/Library/PrivateFrameworks/TrialProto.framework/TrialProto: TRIPBDescriptor 
01 00 0300 /System/Library/PrivateFrameworks/TrialProto.framework/TrialProto: TRIPBEnumDescriptor 
01 00 0300 /System/Library/PrivateFrameworks/TrialProto.framework/TrialProto: TRIPBFileDescriptor 
01 00 0300 /System/Library/PrivateFrameworks/TrialProto.framework/TrialProto: TRIPBMessage 
01 00 0300 /System/Library/PrivateFrameworks/TrialProto.framework/TrialProto: TRIPBRootObject 
01 00 0300 /System/Library/PrivateFrameworks/TrialProto.framework/TrialProto: TRIPBStringEnumDictionary 
01 00 0300 /System/Library/PrivateFrameworks/TrialProto.framework/TrialProto: TRIPBTimestamp 
01 00 0300 /System/Library/PrivateFrameworks/TrialProto.framework/TrialProto: TRIPBUInt32Array 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRIPartialExperimentRecord 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRIPartialRolloutRecord 
01 00 0300 /System/Library/PrivateFrameworks/TrialProto.framework/TrialProto: TRIProvisionalFactorpackMetadata 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRIPurgeabilityLevelMapper 
01 00 0300 /System/Library/PrivateFrameworks/TrialProto.framework/TrialProto: TRIPushNotification 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRIReferenceManagedDirReaderLock 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRIRolloutAllocationStatus 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRIRolloutDeployment 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRIRolloutFactorsState 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRIStandardPaths 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRIStopwatch 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRISubjectProvider 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRISubjectRotationNotification 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRISystemConfiguration 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRISystemInfo 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRITreatmentInfo 
01 00 0300 /System/Library/PrivateFrameworks/TrialProto.framework/TrialProto: TRITrialAssetPurgeFields 
01 00 0300 /System/Library/PrivateFrameworks/TrialProto.framework/TrialProto: TRITrialCloudKitContainerOriginFields 
01 00 0300 /System/Library/PrivateFrameworks/TrialProto.framework/TrialProto: TRITrialDownloadSettingsFields 
01 00 0300 /System/Library/PrivateFrameworks/TrialProto.framework/TrialProto: TRITrialDownloadStatusFields 
01 00 0300 /System/Library/PrivateFrameworks/TrialProto.framework/TrialProto: TRITrialRolloutFields 
01 00 0300 /System/Library/PrivateFrameworks/TrialProto.framework/TrialProto: TRITrialSystemTelemetry 
01 00 0300 /System/Library/PrivateFrameworks/TrialProto.framework/TrialProto: TRIUserDimension 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRIVersion 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRIVersionedNamespace 
01 00 0400 /System/Library/PrivateFrameworks/Trial.framework/Trial: TRIXPCUtils 
01 00 0200 /System/Library/PrivateFrameworks/ProactiveSupport.framework/ProactiveSupport: _PASDatabaseMigrator 
01 00 0200 /System/Library/PrivateFrameworks/ProactiveSupport.framework/ProactiveSupport: _PASDeviceInfo 
01 00 0200 /System/Library/PrivateFrameworks/ProactiveSupport.framework/ProactiveSupport: _PASDeviceState 
01 00 0200 /System/Library/PrivateFrameworks/ProactiveSupport.framework/ProactiveSupport: _PASDispatch 
01 00 0200 /System/Library/PrivateFrameworks/ProactiveSupport.framework/ProactiveSupport: _PASEntitlement 
01 00 0200 /System/Library/PrivateFrameworks/ProactiveSupport.framework/ProactiveSupport: _PASKVOHandler 
01 00 0200 /System/Library/PrivateFrameworks/ProactiveSupport.framework/ProactiveSupport: _PASLazyPlist 
01 00 0200 /System/Library/PrivateFrameworks/ProactiveSupport.framework/ProactiveSupport: _PASLock 
01 00 0200 /System/Library/PrivateFrameworks/ProactiveSupport.framework/ProactiveSupport: _PASSimpleCoalescingTimer 
01 00 0200 /System/Library/PrivateFrameworks/ProactiveSupport.framework/ProactiveSupport: _PASSqliteDatabase 
01 00 0200 /System/Library/PrivateFrameworks/ProactiveSupport.framework/ProactiveSupport: _PASSqliteDefaultErrorHandler 
01 00 0200 /System/Library/PrivateFrameworks/ProactiveSupport.framework/ProactiveSupport: _PASSqliteTransaction 
01 00 0200 /System/Library/PrivateFrameworks/ProactiveSupport.framework/ProactiveSupport: _PASXPCClientHelper 
01 00 0200 /System/Library/PrivateFrameworks/ProactiveSupport.framework/ProactiveSupport: _PASXPCServer 
01 00 0200 /System/Library/PrivateFrameworks/ProactiveSupport.framework/ProactiveSupport: _PASXPCServerHelper 
