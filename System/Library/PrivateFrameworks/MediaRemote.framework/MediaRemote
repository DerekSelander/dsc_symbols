|| __DATA.__objc_data _OBJC_CLASS_$_MRAVBufferedInputStream
|| __DATA.__objc_data _OBJC_CLASS_$_MRAVBufferedOutputStream
|| __DATA.__objc_data _OBJC_CLASS_$_MRAVEndpointObserver
|| __DATA.__objc_data _OBJC_CLASS_$_MRAVInputStream
|| __DATA.__objc_data _OBJC_CLASS_$_MRAVLocalOutputDevice
|| __DATA.__objc_data _OBJC_CLASS_$_MRAVMutableDistantExternalDeviceMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_MRAVOutputStream
|| __DATA.__objc_data _OBJC_CLASS_$_MRAVReconnaissanceSession
|| __DATA.__objc_data _OBJC_CLASS_$_MRAudioBuffer
|| __DATA.__objc_data _OBJC_CLASS_$_MRBlockGuard
|| __DATA.__objc_data _OBJC_CLASS_$_MRCompositeMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRCryptoPairingIdentity
|| __DATA.__objc_data _OBJC_CLASS_$_MRCryptoPairingMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRCryptoPairingSessionBlockDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_MRDeviceInfoMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRDeviceInfoUpdateMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MREmulatedGameController
|| __DATA.__objc_data _OBJC_CLASS_$_MRExternalClientConnection
|| __DATA.__objc_data _OBJC_CLASS_$_MRExternalDevicePairingSession
|| __DATA.__objc_data _OBJC_CLASS_$_MRGameControllerDaemonProxy
|| __DATA.__objc_data _OBJC_CLASS_$_MRGameControllerMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRGameControllerPropertiesMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRGenericMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRGetKeyboardSessionMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRGetVoiceInputDevicesMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRGetVoiceInputDevicesResponseMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRGetVolumeControlCapabilitiesMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRGetVolumeControlCapabilitiesResultMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRGetVolumeMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRGetVolumeResultMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRKeyboardMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRLegacySendHIDEventMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRLegacyVolumeControlCapabilitiesDidChangeMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRModifyOutputContextRequestMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRMutableTextEditingAttributes
|| __DATA.__objc_data _OBJC_CLASS_$_MRMutableTextEditingSession
|| __DATA.__objc_data _OBJC_CLASS_$_MRNotificationMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRNowPlayingArtwork
|| __DATA.__objc_data _OBJC_CLASS_$_MRNowPlayingArtworkImage
|| __DATA.__objc_data _OBJC_CLASS_$_MRPasscodeCredentials
|| __DATA.__objc_data _OBJC_CLASS_$_MRPlaybackQueueRequestMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRPlaybackSessionMigrateBeginMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRPlaybackSessionMigrateEndMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRPlaybackSessionMigrateRequest
|| __DATA.__objc_data _OBJC_CLASS_$_MRPlaybackSessionMigrateRequestMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRPlaybackSessionMigrateResponseMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRPlaybackSessionRequestMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRPlaybackSessionResponseMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRPresentRouteAuthorizationStatusMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRPromptForRouteAuthorizationMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRPromptForRouteAuthorizationResponseMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRProtobufSerialization
|| __DATA.__objc_data _OBJC_CLASS_$_MRProtocolClientConnection
|| __DATA.__objc_data _OBJC_CLASS_$_MRProtocolMessageLogger
|| __DATA.__objc_data _OBJC_CLASS_$_MRProtocolMessageQueue
|| __DATA.__objc_data _OBJC_CLASS_$_MRRegisterForGameControllerEventsMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRRegisterGameControllerMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRRegisterGameControllerResponseMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRRegisterHIDDeviceMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRRegisterHIDDeviceResultMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRRegisterVoiceInputDeviceMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRRegisterVoiceInputDeviceResponseMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRRemoteTextInputMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRRemoveClientMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRRemoveFromParentGroupMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRRemoveOutputDevicesMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRRemovePlayerMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRSendCommandMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRSendCommandResultMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRSendLyricsEventMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRSendVoiceInputMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRSetArtworkMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRSetConnectionStateMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRSetDefaultSupportedCommandsMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRSetHiliteModeMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRSetNowPlayingClientMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRSetNowPlayingPlayerMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRSetReadyStateMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRSetRecordingStateMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRSetStateMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRSupportedProtocolMessages
|| __DATA.__objc_data _OBJC_CLASS_$_MRTextEditingAttributes
|| __DATA.__objc_data _OBJC_CLASS_$_MRTextEditingSession
|| __DATA.__objc_data _OBJC_CLASS_$_MRTextInputMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRTransactionDestination
|| __DATA.__objc_data _OBJC_CLASS_$_MRTransactionMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRTransactionPacket
|| __DATA.__objc_data _OBJC_CLASS_$_MRTransactionPacketizer
|| __DATA.__objc_data _OBJC_CLASS_$_MRTransactionSource
|| __DATA.__objc_data _OBJC_CLASS_$_MRUnregisterGameControllerMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRUpdateClientMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRUpdateContentItemArtworkMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRUpdateContentItemMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRUpdateOutputDevicesMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRUpdatePlayerMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRVirtualVoiceInputDevice
|| __DATA.__objc_data _OBJC_CLASS_$_MRVolumeControlCapabilitiesDidChangeMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRVolumeDidChangeMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MRWakeDeviceMessage
|| __DATA.__objc_data _OBJC_CLASS_$__MRAVModifyOutputContextRequestProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRAVRouteQueryProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRAudioBufferProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRAudioDataBlockProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRAudioFormatSettingsProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRAudioStreamPacketDescriptionProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRAudioTimeProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRClientUpdatesConfigurationProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRColorProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRCommandInfoProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRCommandOptionsProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRCryptoPairingMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRGameControllerAccelerationProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRGameControllerButtonsProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRGameControllerDigitizerProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRGameControllerMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRGameControllerMotionProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRGameControllerPropertiesMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRGameControllerPropertiesProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRGenericMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRGetKeyboardSessionProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRGetRemoteTextInputSessionProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRGetStateMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRGetVoiceInputDevicesMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRGetVoiceInputDevicesResponseMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRGetVolumeControlCapabilitiesMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRGetVolumeControlCapabilitiesResultMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRGetVolumeMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRGetVolumeResultMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRKeyboardMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRLyricsEventProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRLyricsItemProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRLyricsTokenProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRMediaRemoteMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRNotificationMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRNowPlayingInfoProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRPlaybackQueueCapabilitiesProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRPlaybackQueueContextProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRPlaybackSessionMigrateBeginMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRPlaybackSessionMigrateEndMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRPlaybackSessionMigrateRequestEventProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRPlaybackSessionMigrateRequestMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRPlaybackSessionMigrateRequestProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRPlaybackSessionMigrateResponseMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRPlaybackSessionProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRPlaybackSessionRequestMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRPlaybackSessionRequestProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRPlaybackSessionResponseMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRPresentRouteAuthorizationStatusMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRPromptForRouteAuthorizationMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRPromptForRouteAuthorizationResponseMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRReceivedCommandAppOptionsProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRReceivedCommandProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRRegisterForGameControllerEventsMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRRegisterGameControllerMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRRegisterGameControllerResponseMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRRegisterHIDDeviceMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRRegisterHIDDeviceResultMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRRegisterVoiceInputDeviceMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRRegisterVoiceInputDeviceResponseMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRRemoteTextInputMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRRemoveClientMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRRemoveOutputDevicesMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRRemovePlayerMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRSendButtonEventMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRSendCommandMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRSendCommandResultMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRSendHIDEventMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRSendHIDReportMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRSendLyricsEventMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRSendPackedVirtualTouchEventMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRSendVirtualTouchEventMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRSendVoiceInputMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRSetArtworkMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRSetConnectionStateMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRSetHiliteModeMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRSetNowPlayingClientMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRSetNowPlayingPlayerMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRSetReadyStateMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRSetRecordingStateMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRSetStateMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRSetVolumeMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRSupportedCommandsProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRTextEditingAttributesProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRTextInputMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRTextInputTraitsProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRTransactionKeyProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRTransactionMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRTransactionPacketProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRTransactionPacketsProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRUnregisterGameControllerMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRUpdateClientMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRUpdateContentItemArtworkMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRUpdateContentItemMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRUpdateOutputDevicesMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRUpdatePlayerMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRVideoThumbnailProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRVirtualTouchDeviceDescriptorProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRVirtualTouchEventProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRVoiceInputDevice
|| __DATA.__objc_data _OBJC_CLASS_$__MRVoiceInputDeviceDescriptorProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRVolumeControlAvailabilityProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRVolumeControlCapabilitiesDidChangeMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRVolumeDidChangeMessageProtobuf
|| __DATA.__objc_data _OBJC_CLASS_$__MRWakeDeviceMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$_MRAVBufferedInputStream
|| __DATA.__objc_data _OBJC_METACLASS_$_MRAVBufferedOutputStream
|| __DATA.__objc_data _OBJC_METACLASS_$_MRAVEndpointObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_MRAVInputStream
|| __DATA.__objc_data _OBJC_METACLASS_$_MRAVLocalOutputDevice
|| __DATA.__objc_data _OBJC_METACLASS_$_MRAVMutableDistantExternalDeviceMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_MRAVOutputStream
|| __DATA.__objc_data _OBJC_METACLASS_$_MRAVReconnaissanceSession
|| __DATA.__objc_data _OBJC_METACLASS_$_MRAudioBuffer
|| __DATA.__objc_data _OBJC_METACLASS_$_MRBlockGuard
|| __DATA.__objc_data _OBJC_METACLASS_$_MRCompositeMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRCryptoPairingIdentity
|| __DATA.__objc_data _OBJC_METACLASS_$_MRCryptoPairingMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRCryptoPairingSessionBlockDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_MRDeviceInfoMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRDeviceInfoUpdateMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MREmulatedGameController
|| __DATA.__objc_data _OBJC_METACLASS_$_MRExternalClientConnection
|| __DATA.__objc_data _OBJC_METACLASS_$_MRExternalDevicePairingSession
|| __DATA.__objc_data _OBJC_METACLASS_$_MRGameControllerDaemonProxy
|| __DATA.__objc_data _OBJC_METACLASS_$_MRGameControllerMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRGameControllerPropertiesMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRGenericMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRGetKeyboardSessionMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRGetVoiceInputDevicesMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRGetVoiceInputDevicesResponseMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRGetVolumeControlCapabilitiesMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRGetVolumeControlCapabilitiesResultMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRGetVolumeMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRGetVolumeResultMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRKeyboardMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRLegacySendHIDEventMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRLegacyVolumeControlCapabilitiesDidChangeMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRModifyOutputContextRequestMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRMutableTextEditingAttributes
|| __DATA.__objc_data _OBJC_METACLASS_$_MRMutableTextEditingSession
|| __DATA.__objc_data _OBJC_METACLASS_$_MRNotificationMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRNowPlayingArtwork
|| __DATA.__objc_data _OBJC_METACLASS_$_MRNowPlayingArtworkImage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRPasscodeCredentials
|| __DATA.__objc_data _OBJC_METACLASS_$_MRPlaybackQueueRequestMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRPlaybackSessionMigrateBeginMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRPlaybackSessionMigrateEndMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRPlaybackSessionMigrateRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_MRPlaybackSessionMigrateRequestMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRPlaybackSessionMigrateResponseMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRPlaybackSessionRequestMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRPlaybackSessionResponseMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRPresentRouteAuthorizationStatusMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRPromptForRouteAuthorizationMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRPromptForRouteAuthorizationResponseMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRProtobufSerialization
|| __DATA.__objc_data _OBJC_METACLASS_$_MRProtocolClientConnection
|| __DATA.__objc_data _OBJC_METACLASS_$_MRProtocolMessageLogger
|| __DATA.__objc_data _OBJC_METACLASS_$_MRProtocolMessageQueue
|| __DATA.__objc_data _OBJC_METACLASS_$_MRRegisterForGameControllerEventsMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRRegisterGameControllerMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRRegisterGameControllerResponseMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRRegisterHIDDeviceMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRRegisterHIDDeviceResultMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRRegisterVoiceInputDeviceMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRRegisterVoiceInputDeviceResponseMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRRemoteTextInputMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRRemoveClientMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRRemoveFromParentGroupMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRRemoveOutputDevicesMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRRemovePlayerMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRSendCommandMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRSendCommandResultMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRSendLyricsEventMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRSendVoiceInputMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRSetArtworkMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRSetConnectionStateMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRSetDefaultSupportedCommandsMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRSetHiliteModeMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRSetNowPlayingClientMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRSetNowPlayingPlayerMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRSetReadyStateMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRSetRecordingStateMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRSetStateMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRSupportedProtocolMessages
|| __DATA.__objc_data _OBJC_METACLASS_$_MRTextEditingAttributes
|| __DATA.__objc_data _OBJC_METACLASS_$_MRTextEditingSession
|| __DATA.__objc_data _OBJC_METACLASS_$_MRTextInputMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRTransactionDestination
|| __DATA.__objc_data _OBJC_METACLASS_$_MRTransactionMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRTransactionPacket
|| __DATA.__objc_data _OBJC_METACLASS_$_MRTransactionPacketizer
|| __DATA.__objc_data _OBJC_METACLASS_$_MRTransactionSource
|| __DATA.__objc_data _OBJC_METACLASS_$_MRUnregisterGameControllerMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRUpdateClientMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRUpdateContentItemArtworkMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRUpdateContentItemMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRUpdateOutputDevicesMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRUpdatePlayerMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRVirtualVoiceInputDevice
|| __DATA.__objc_data _OBJC_METACLASS_$_MRVolumeControlCapabilitiesDidChangeMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRVolumeDidChangeMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MRWakeDeviceMessage
|| __DATA.__objc_data _OBJC_METACLASS_$__MRAVModifyOutputContextRequestProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRAVRouteQueryProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRAudioBufferProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRAudioDataBlockProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRAudioFormatSettingsProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRAudioStreamPacketDescriptionProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRAudioTimeProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRClientUpdatesConfigurationProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRColorProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRCommandInfoProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRCommandOptionsProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRCryptoPairingMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRGameControllerAccelerationProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRGameControllerButtonsProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRGameControllerDigitizerProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRGameControllerMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRGameControllerMotionProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRGameControllerPropertiesMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRGenericMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRGetKeyboardSessionProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRGetRemoteTextInputSessionProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRGetStateMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRGetVoiceInputDevicesMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRGetVoiceInputDevicesResponseMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRGetVolumeControlCapabilitiesMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRGetVolumeControlCapabilitiesResultMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRGetVolumeMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRGetVolumeResultMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRKeyboardMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRLyricsEventProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRLyricsItemProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRLyricsTokenProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRMediaRemoteMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRNotificationMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRNowPlayingInfoProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRPlaybackQueueCapabilitiesProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRPlaybackQueueContextProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRPlaybackSessionMigrateBeginMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRPlaybackSessionMigrateEndMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRPlaybackSessionMigrateRequestEventProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRPlaybackSessionMigrateRequestMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRPlaybackSessionMigrateRequestProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRPlaybackSessionMigrateResponseMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRPlaybackSessionProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRPlaybackSessionRequestMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRPlaybackSessionRequestProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRPlaybackSessionResponseMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRPresentRouteAuthorizationStatusMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRPromptForRouteAuthorizationMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRPromptForRouteAuthorizationResponseMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRReceivedCommandAppOptionsProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRReceivedCommandProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRRegisterForGameControllerEventsMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRRegisterGameControllerMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRRegisterGameControllerResponseMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRRegisterHIDDeviceMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRRegisterHIDDeviceResultMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRRegisterVoiceInputDeviceMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRRegisterVoiceInputDeviceResponseMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRRemoteTextInputMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRRemoveClientMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRRemoveOutputDevicesMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRRemovePlayerMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRSendButtonEventMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRSendCommandMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRSendCommandResultMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRSendHIDEventMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRSendHIDReportMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRSendLyricsEventMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRSendPackedVirtualTouchEventMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRSendVirtualTouchEventMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRSendVoiceInputMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRSetArtworkMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRSetConnectionStateMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRSetHiliteModeMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRSetNowPlayingClientMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRSetNowPlayingPlayerMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRSetReadyStateMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRSetRecordingStateMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRSetStateMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRSetVolumeMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRSupportedCommandsProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRTextEditingAttributesProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRTextInputMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRTextInputTraitsProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRTransactionKeyProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRTransactionMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRTransactionPacketProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRTransactionPacketsProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRUnregisterGameControllerMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRUpdateClientMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRUpdateContentItemArtworkMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRUpdateContentItemMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRUpdateOutputDevicesMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRUpdatePlayerMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRVideoThumbnailProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRVirtualTouchDeviceDescriptorProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRVirtualTouchEventProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRVoiceInputDevice
|| __DATA.__objc_data _OBJC_METACLASS_$__MRVoiceInputDeviceDescriptorProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRVolumeControlAvailabilityProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRVolumeControlCapabilitiesDidChangeMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRVolumeDidChangeMessageProtobuf
|| __DATA.__objc_data _OBJC_METACLASS_$__MRWakeDeviceMessageProtobuf
|| __DATA.__objc_ivar _OBJC_IVAR_$_MRAVDistantExternalDeviceMetadata._deviceInfo
|| __DATA.__objc_ivar _OBJC_IVAR_$_MRAVDistantExternalDeviceMetadata._hostName
|| __DATA.__objc_ivar _OBJC_IVAR_$_MRAVDistantExternalDeviceMetadata._hostPort
|| __DATA.__objc_ivar _OBJC_IVAR_$_MRAVDistantExternalDeviceMetadata._name
|| __DATA.__objc_ivar _OBJC_IVAR_$_MRAVDistantExternalDeviceMetadata._paired
|| __DATA.__objc_ivar _OBJC_IVAR_$_MRAVDistantExternalDeviceMetadata._supportedMessages
|| __DATA.__objc_ivar _OBJC_IVAR_$_MRAVDistantExternalDeviceMetadata._usingSystemPairing
|| __DATA.__objc_ivar _OBJC_IVAR_$_MRApplicationActivity._creatorProcessID
|| __DATA.__objc_ivar _OBJC_IVAR_$_MRApplicationActivity._primaryApplicationDisplayID
|| __DATA.__objc_ivar _OBJC_IVAR_$_MRApplicationActivity._secondaryApplicationDisplayID
|| __DATA.__objc_ivar _OBJC_IVAR_$_MRApplicationActivity._status
|| __DATA.__objc_ivar _OBJC_IVAR_$_MRApplicationActivity._uniqueIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_MRTextEditingAttributes._inputTraits
|| __DATA.__objc_ivar _OBJC_IVAR_$_MRTextEditingAttributes._prompt
|| __DATA.__objc_ivar _OBJC_IVAR_$_MRTextEditingAttributes._title
|| __DATA.__objc_ivar _OBJC_IVAR_$_MRTextEditingSession._attributes
|| __DATA.__objc_ivar _OBJC_IVAR_$_MRTextEditingSession._editing
|| __DATA.__objc_ivar _OBJC_IVAR_$_MRTextEditingSession._text
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVAirPlaySecuritySettingsProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVAirPlaySecuritySettingsProtobuf._password
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVAirPlaySecuritySettingsProtobuf._securityType
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVEndpointDescriptorProtobuf._canModifyGroupMembership
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVEndpointDescriptorProtobuf._connectionType
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVEndpointDescriptorProtobuf._designatedGroupLeader
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVEndpointDescriptorProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVEndpointDescriptorProtobuf._instanceIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVEndpointDescriptorProtobuf._isLocalEndpoint
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVEndpointDescriptorProtobuf._isProxyGroupPlayer
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVEndpointDescriptorProtobuf._name
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVEndpointDescriptorProtobuf._outputDevices
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVEndpointDescriptorProtobuf._personalOutputDevices
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVEndpointDescriptorProtobuf._uniqueIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVModifyOutputContextRequestProtobuf._addingOutputDeviceUIDs
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVModifyOutputContextRequestProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVModifyOutputContextRequestProtobuf._outputContextType
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVModifyOutputContextRequestProtobuf._removingOutputDeviceUIDs
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVModifyOutputContextRequestProtobuf._settingOutputDeviceUIDs
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVOutputDeviceDescriptorProtobuf._batteryLevel
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVOutputDeviceDescriptorProtobuf._bluetoothID
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVOutputDeviceDescriptorProtobuf._canAccessAppleMusic
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVOutputDeviceDescriptorProtobuf._canAccessRemoteAssets
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVOutputDeviceDescriptorProtobuf._canAccessiCloudMusicLibrary
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVOutputDeviceDescriptorProtobuf._canFetchMediaDataFromSender
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVOutputDeviceDescriptorProtobuf._canPlayEncryptedProgressiveDownloadAssets
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVOutputDeviceDescriptorProtobuf._canRelayCommunicationChannel
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVOutputDeviceDescriptorProtobuf._deviceSubType
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVOutputDeviceDescriptorProtobuf._deviceType
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVOutputDeviceDescriptorProtobuf._firmwareVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVOutputDeviceDescriptorProtobuf._groupContainsGroupLeader
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVOutputDeviceDescriptorProtobuf._groupID
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVOutputDeviceDescriptorProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVOutputDeviceDescriptorProtobuf._isAddedToHomeKit
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVOutputDeviceDescriptorProtobuf._isAirPlayReceiverSessionActive
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVOutputDeviceDescriptorProtobuf._isDeviceGroupable
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVOutputDeviceDescriptorProtobuf._isGroupLeader
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVOutputDeviceDescriptorProtobuf._isGroupable
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVOutputDeviceDescriptorProtobuf._isLocalDevice
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVOutputDeviceDescriptorProtobuf._isProxyGroupPlayer
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVOutputDeviceDescriptorProtobuf._isRemoteControllable
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVOutputDeviceDescriptorProtobuf._isVolumeControlAvailable
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVOutputDeviceDescriptorProtobuf._logicalDeviceID
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVOutputDeviceDescriptorProtobuf._macAddress
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVOutputDeviceDescriptorProtobuf._modelID
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVOutputDeviceDescriptorProtobuf._modelSpecificInfoData
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVOutputDeviceDescriptorProtobuf._name
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVOutputDeviceDescriptorProtobuf._parentGroupContainsDiscoverableLeader
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVOutputDeviceDescriptorProtobuf._parentGroupIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVOutputDeviceDescriptorProtobuf._presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVOutputDeviceDescriptorProtobuf._requiresAuthorization
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVOutputDeviceDescriptorProtobuf._shouldForceRemoteControlabillity
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVOutputDeviceDescriptorProtobuf._sourceInfo
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVOutputDeviceDescriptorProtobuf._supportsBufferedAirPlay
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVOutputDeviceDescriptorProtobuf._supportsExternalScreen
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVOutputDeviceDescriptorProtobuf._uniqueIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVOutputDeviceDescriptorProtobuf._volume
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVOutputDeviceDescriptorProtobuf._volumeCapabilities
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVOutputDeviceSourceInfoProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVOutputDeviceSourceInfoProtobuf._multipleBuiltInDevices
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVOutputDeviceSourceInfoProtobuf._routingContextUID
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAVRouteQueryProtobuf._routeUID
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAudioBufferProtobuf._contents
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAudioBufferProtobuf._formatSettings
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAudioBufferProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAudioBufferProtobuf._maximumPacketSize
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAudioBufferProtobuf._packetCapacity
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAudioBufferProtobuf._packetCount
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAudioBufferProtobuf._packetDescriptions
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAudioDataBlockProtobuf._buffer
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAudioDataBlockProtobuf._gain
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAudioDataBlockProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAudioDataBlockProtobuf._time
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAudioFormatSettingsProtobuf._formatSettingsPlistData
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAudioStreamPacketDescriptionProtobuf._dataByteSize
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAudioStreamPacketDescriptionProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAudioStreamPacketDescriptionProtobuf._startOffset
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAudioStreamPacketDescriptionProtobuf._variableFramesInPacket
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAudioTimeProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAudioTimeProtobuf._sampleRate
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRAudioTimeProtobuf._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRClientUpdatesConfigurationProtobuf._artworkUpdates
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRClientUpdatesConfigurationProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRClientUpdatesConfigurationProtobuf._keyboardUpdates
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRClientUpdatesConfigurationProtobuf._nowPlayingUpdates
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRClientUpdatesConfigurationProtobuf._outputDeviceUpdates
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRClientUpdatesConfigurationProtobuf._volumeUpdates
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRColorProtobuf._alpha
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRColorProtobuf._blue
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRColorProtobuf._green
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRColorProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRColorProtobuf._red
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandInfoProtobuf._active
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandInfoProtobuf._canScrub
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandInfoProtobuf._command
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandInfoProtobuf._currentPlaybackSessionTypes
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandInfoProtobuf._enabled
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandInfoProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandInfoProtobuf._localizedShortTitle
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandInfoProtobuf._localizedTitle
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandInfoProtobuf._maximumRating
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandInfoProtobuf._minimumRating
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandInfoProtobuf._numAvailableSkips
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandInfoProtobuf._playbackSessionIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandInfoProtobuf._preferredIntervals
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandInfoProtobuf._preferredPlaybackRate
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandInfoProtobuf._presentationStyle
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandInfoProtobuf._repeatMode
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandInfoProtobuf._shuffleMode
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandInfoProtobuf._skipFrequency
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandInfoProtobuf._skipInterval
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandInfoProtobuf._supportedCustomQueueIdentifiers
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandInfoProtobuf._supportedInsertionPositions
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandInfoProtobuf._supportedPlaybackQueueTypes
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandInfoProtobuf._supportedPlaybackSessionTypes
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandInfoProtobuf._supportedRates
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandInfoProtobuf._supportsSharedQueue
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandInfoProtobuf._upNextItemCount
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandOptionsProtobuf._beginSeek
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandOptionsProtobuf._commandID
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandOptionsProtobuf._contentItemID
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandOptionsProtobuf._contextID
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandOptionsProtobuf._destinationAppDisplayID
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandOptionsProtobuf._endSeek
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandOptionsProtobuf._externalPlayerCommand
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandOptionsProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandOptionsProtobuf._insertAfterContentItemID
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandOptionsProtobuf._languageOption
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandOptionsProtobuf._mediaType
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandOptionsProtobuf._negative
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandOptionsProtobuf._nowPlayingContentItemID
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandOptionsProtobuf._playbackPosition
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandOptionsProtobuf._playbackQueueContext
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandOptionsProtobuf._playbackQueueDestinationOffset
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandOptionsProtobuf._playbackQueueInsertionPosition
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandOptionsProtobuf._playbackQueueOffset
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandOptionsProtobuf._playbackRate
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandOptionsProtobuf._playbackSession
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandOptionsProtobuf._radioStationHash
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandOptionsProtobuf._radioStationID
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandOptionsProtobuf._rating
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandOptionsProtobuf._remoteControlInterface
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandOptionsProtobuf._repeatMode
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandOptionsProtobuf._replaceIntent
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandOptionsProtobuf._requestDefermentToPlaybackQueuePosition
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandOptionsProtobuf._sendOptions
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandOptionsProtobuf._senderID
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandOptionsProtobuf._shouldBeginRadioPlayback
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandOptionsProtobuf._shouldOverrideManuallyCuratedQueue
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandOptionsProtobuf._shuffleMode
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandOptionsProtobuf._skipInterval
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandOptionsProtobuf._sourceID
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandOptionsProtobuf._stationURL
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandOptionsProtobuf._systemAppPlaybackQueueData
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandOptionsProtobuf._trackID
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCommandOptionsProtobuf._userIdentityData
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._albumArtistName
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._albumName
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._albumYear
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._appMetricsData
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._artworkAvailable
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._artworkDataHeightDeprecated
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._artworkDataWidthDeprecated
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._artworkFileURL
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._artworkIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._artworkMIMEType
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._artworkURL
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._artworkURLTemplatesData
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._assetURLString
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._brandIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._chapterCount
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._collectionIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._collectionInfoData
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._composer
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._contentIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._currentPlaybackDateData
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._defaultPlaybackRate
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._deviceSpecificUserInfoData
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._directorName
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._discNumber
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._downloadProgress
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._downloadState
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._duration
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._editingStyleFlags
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._elapsedTime
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._elapsedTimeTimestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._episodeNumber
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._episodeType
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._genre
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._iTunesStoreAlbumIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._iTunesStoreArtistIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._iTunesStoreIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._iTunesStoreSubscriptionIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._inferredTimestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._infoAvailable
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._isAlwaysLive
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._isContainer
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._isCurrentlyPlaying
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._isExplicitItem
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._isInWishList
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._isLiked
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._isLoading
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._isPlayable
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._isSharable
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._isSteerable
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._isStreamingContent
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._languageOptionsAvailable
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._legacyUniqueIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._localizedContentRating
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._localizedDurationString
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._lyricsAvailable
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._lyricsURL
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._mediaSubType
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._mediaType
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._nowPlayingInfoData
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._numberOfSections
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._playCount
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._playbackProgress
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._playbackRate
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._playlistType
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._profileIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._purchaseInfoData
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._radioStationIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._radioStationName
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._radioStationString
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._radioStationType
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._releaseDate
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._seasonNumber
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._seriesName
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._serviceIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._startTime
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._subtitle
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._title
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._totalDiscCount
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._totalTrackCount
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._trackArtistName
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._trackNumber
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemMetadataProtobuf._userInfoData
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemProtobuf._ancestorIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemProtobuf._artworkData
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemProtobuf._artworkDataHeight
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemProtobuf._artworkDataWidth
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemProtobuf._availableLanguageOptions
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemProtobuf._currentLanguageOptions
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemProtobuf._identifier
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemProtobuf._info
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemProtobuf._lyrics
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemProtobuf._metadata
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemProtobuf._parentIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemProtobuf._queueIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemProtobuf._requestIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRContentItemProtobuf._sections
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCryptoPairingMessageProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCryptoPairingMessageProtobuf._isRetrying
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCryptoPairingMessageProtobuf._isUsingSystemPairing
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCryptoPairingMessageProtobuf._pairingData
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCryptoPairingMessageProtobuf._state
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRCryptoPairingMessageProtobuf._status
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRDeviceInfoMessageProtobuf._airplayReceivers
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRDeviceInfoMessageProtobuf._allowsPairing
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRDeviceInfoMessageProtobuf._applicationBundleIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRDeviceInfoMessageProtobuf._applicationBundleVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRDeviceInfoMessageProtobuf._bluetoothAddress
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRDeviceInfoMessageProtobuf._connected
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRDeviceInfoMessageProtobuf._deviceClass
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRDeviceInfoMessageProtobuf._deviceUID
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRDeviceInfoMessageProtobuf._groupName
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRDeviceInfoMessageProtobuf._groupUID
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRDeviceInfoMessageProtobuf._groupedDevices
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRDeviceInfoMessageProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRDeviceInfoMessageProtobuf._isAirplayActive
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRDeviceInfoMessageProtobuf._isGroupLeader
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRDeviceInfoMessageProtobuf._isProxyGroupPlayer
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRDeviceInfoMessageProtobuf._lastSupportedMessageType
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRDeviceInfoMessageProtobuf._linkAgent
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRDeviceInfoMessageProtobuf._localizedModelName
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRDeviceInfoMessageProtobuf._logicalDeviceCount
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRDeviceInfoMessageProtobuf._managedConfigDeviceID
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRDeviceInfoMessageProtobuf._name
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRDeviceInfoMessageProtobuf._protocolVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRDeviceInfoMessageProtobuf._senderDefaultGroupUID
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRDeviceInfoMessageProtobuf._sharedQueueVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRDeviceInfoMessageProtobuf._supportsACL
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRDeviceInfoMessageProtobuf._supportsExtendedMotion
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRDeviceInfoMessageProtobuf._supportsSharedQueue
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRDeviceInfoMessageProtobuf._supportsSystemPairing
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRDeviceInfoMessageProtobuf._systemBuildVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRDeviceInfoMessageProtobuf._systemMediaApplication
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRDeviceInfoMessageProtobuf._systemPodcastApplication
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRDeviceInfoMessageProtobuf._tightSyncUID
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRDeviceInfoMessageProtobuf._tightlySyncedGroup
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRDeviceInfoMessageProtobuf._uniqueIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRDiagnosticProtobuf._dateGenerated
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRDiagnosticProtobuf._diagnosticInfo
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRDiagnosticProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRGameControllerAccelerationProtobuf._data
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRGameControllerAccelerationProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRGameControllerAccelerationProtobuf._w
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRGameControllerAccelerationProtobuf._x
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRGameControllerAccelerationProtobuf._y
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRGameControllerAccelerationProtobuf._z
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRGameControllerButtonsProtobuf._a
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRGameControllerButtonsProtobuf._b
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRGameControllerButtonsProtobuf._dPadX
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRGameControllerButtonsProtobuf._dPadY
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRGameControllerButtonsProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRGameControllerButtonsProtobuf._leftShoulder
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRGameControllerButtonsProtobuf._leftThumbstickX
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRGameControllerButtonsProtobuf._leftThumbstickY
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRGameControllerButtonsProtobuf._leftTrigger
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRGameControllerButtonsProtobuf._pause
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRGameControllerButtonsProtobuf._rightShoulder
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRGameControllerButtonsProtobuf._rightThumbstickX
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRGameControllerButtonsProtobuf._rightThumbstickY
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRGameControllerButtonsProtobuf._rightTrigger
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRGameControllerButtonsProtobuf._x
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRGameControllerButtonsProtobuf._y
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRGameControllerDigitizerProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRGameControllerDigitizerProtobuf._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRGameControllerDigitizerProtobuf._touchDown
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRGameControllerDigitizerProtobuf._x
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRGameControllerDigitizerProtobuf._y
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRGameControllerMessageProtobuf._buttons
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRGameControllerMessageProtobuf._controllerID
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRGameControllerMessageProtobuf._digitizer
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRGameControllerMessageProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRGameControllerMessageProtobuf._motion
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRGameControllerMotionProtobuf._attitude
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRGameControllerMotionProtobuf._gravity
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRGameControllerMotionProtobuf._rotation
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRGameControllerMotionProtobuf._userAcceleration
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRGameControllerPropertiesMessageProtobuf._controllerID
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRGameControllerPropertiesMessageProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRGameControllerPropertiesMessageProtobuf._properties
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRGameControllerPropertiesProtobuf._buttonAUpDelay
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRGameControllerPropertiesProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRGameControllerPropertiesProtobuf._playerIndex
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRGameControllerPropertiesProtobuf._profile
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRGameControllerPropertiesProtobuf._supportsExtendedMotion
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRGameControllerPropertiesProtobuf._vendorName
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRGenericMessageProtobuf._data
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRGenericMessageProtobuf._key
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRGetVoiceInputDevicesResponseMessageProtobuf._deviceIDs
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRGetVoiceInputDevicesResponseMessageProtobuf._errorCode
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRGetVoiceInputDevicesResponseMessageProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRGetVolumeControlCapabilitiesMessageProtobuf._outputDeviceUID
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRGetVolumeControlCapabilitiesResultMessageProtobuf._capabilities
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRGetVolumeMessageProtobuf._outputDeviceUID
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRGetVolumeResultMessageProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRGetVolumeResultMessageProtobuf._volume
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRKeyboardMessageProtobuf._attributes
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRKeyboardMessageProtobuf._encryptedTextCyphertext
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRKeyboardMessageProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRKeyboardMessageProtobuf._state
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRLanguageOptionGroupProtobuf._allowEmptySelection
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRLanguageOptionGroupProtobuf._defaultLanguageOption
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRLanguageOptionGroupProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRLanguageOptionGroupProtobuf._languageOptions
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRLanguageOptionProtobuf._characteristics
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRLanguageOptionProtobuf._displayName
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRLanguageOptionProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRLanguageOptionProtobuf._identifier
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRLanguageOptionProtobuf._languageTag
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRLanguageOptionProtobuf._type
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRLyricsEventProtobuf._endTime
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRLyricsEventProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRLyricsEventProtobuf._startTime
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRLyricsEventProtobuf._token
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRLyricsItemProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRLyricsItemProtobuf._lyrics
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRLyricsItemProtobuf._token
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRLyricsItemProtobuf._userProvided
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRLyricsTokenProtobuf._identifier
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRLyricsTokenProtobuf._userData
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._authenticationToken
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._clientUpdatesConfigMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._connectionState
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._contentItemsChangedNotificationMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._cryptoPairingMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._deviceInfoMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._errorCode
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._errorDescription
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._gameController
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._gameControllerProperties
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._genericMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._getKeyboardMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._getRemoteTextInputSessionMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._getStateMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._getVoiceInputDevicesMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._getVoiceInputDevicesResponseMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._getVolumeControlCapabilitiesMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._getVolumeControlCapabilitiesResultMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._getVolumeMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._getVolumeResultMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._identifier
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._keyboardMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._masterVolumeControlCapabilitiesDidChangeMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._modifyOutputContextRequestMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._notificationMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._playbackQueueRequest
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._playbackSessionMigrateBeginMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._playbackSessionMigrateEndMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._playbackSessionMigrateRequestMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._playbackSessionMigrateResponseMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._playbackSessionRequestMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._playbackSessionResponseMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._presentRouteAuthorizationStatusMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._promptForRouteAuthorizationMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._promptForRouteAuthorizationResponseMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._readyStateMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._registerForGameControllerEvents
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._registerGameController
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._registerGameControllerResponse
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._registerHIDDeviceMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._registerHIDDeviceResultMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._registerVoiceInputDeviceMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._registerVoiceInputDeviceResponseMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._remoteTextInputMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._removeClientMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._removeOutputDevicesMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._removePlayerMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._sendButtonEventMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._sendCommandMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._sendCommandResultMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._sendHIDEventMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._sendHIDReportMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._sendLyricsEventMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._sendPackedVirtualTouchEventMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._sendVirtualTouchEventMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._sendVoiceInputMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._setArtworkMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._setDefaultSupportedCommandsMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._setHiliteModeMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._setNowPlayingClientMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._setNowPlayingPlayerMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._setRecordingStateMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._setStateMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._setVolumeMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._textInputMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._transactionPackets
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._type
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._unregisterGameController
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._updateClientMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._updateContentItemArtworkMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._updateContentItemMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._updateOutputDevicesMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._updatePlayerMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._volumeControlCapabilitiesDidChangeMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._volumeDidChangeMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRMediaRemoteMessageProtobuf._wakeDeviceMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRNotificationMessageProtobuf._notifications
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRNotificationMessageProtobuf._playerPaths
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRNotificationMessageProtobuf._userInfos
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRNowPlayingClientProtobuf._bundleIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRNowPlayingClientProtobuf._bundleIdentifierHierarchys
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRNowPlayingClientProtobuf._displayName
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRNowPlayingClientProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRNowPlayingClientProtobuf._isEmptyDeprecated
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRNowPlayingClientProtobuf._nowPlayingVisibility
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRNowPlayingClientProtobuf._parentApplicationBundleIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRNowPlayingClientProtobuf._processIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRNowPlayingClientProtobuf._processUserIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRNowPlayingClientProtobuf._tintColor
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRNowPlayingInfoProtobuf._album
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRNowPlayingInfoProtobuf._artist
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRNowPlayingInfoProtobuf._artworkDataDigest
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRNowPlayingInfoProtobuf._duration
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRNowPlayingInfoProtobuf._elapsedTime
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRNowPlayingInfoProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRNowPlayingInfoProtobuf._isAdvertisement
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRNowPlayingInfoProtobuf._isAlwaysLive
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRNowPlayingInfoProtobuf._isExplicitTrack
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRNowPlayingInfoProtobuf._isMusicApp
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRNowPlayingInfoProtobuf._playbackRate
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRNowPlayingInfoProtobuf._radioStationHash
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRNowPlayingInfoProtobuf._radioStationIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRNowPlayingInfoProtobuf._radioStationName
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRNowPlayingInfoProtobuf._repeatMode
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRNowPlayingInfoProtobuf._shuffleMode
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRNowPlayingInfoProtobuf._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRNowPlayingInfoProtobuf._title
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRNowPlayingInfoProtobuf._uniqueIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRNowPlayingPlayerPathProtobuf._client
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRNowPlayingPlayerPathProtobuf._origin
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRNowPlayingPlayerPathProtobuf._player
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRNowPlayingPlayerProtobuf._audioSessionType
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRNowPlayingPlayerProtobuf._displayName
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRNowPlayingPlayerProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRNowPlayingPlayerProtobuf._identifier
|| __DATA.__objc_ivar _OBJC_IVAR_$__MROriginProtobuf._deviceInfoDeprecated
|| __DATA.__objc_ivar _OBJC_IVAR_$__MROriginProtobuf._displayName
|| __DATA.__objc_ivar _OBJC_IVAR_$__MROriginProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MROriginProtobuf._identifier
|| __DATA.__objc_ivar _OBJC_IVAR_$__MROriginProtobuf._type
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackQueueCapabilitiesProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackQueueCapabilitiesProtobuf._requestByIdentifiers
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackQueueCapabilitiesProtobuf._requestByRange
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackQueueCapabilitiesProtobuf._requestByRequest
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackQueueContextProtobuf._revision
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackQueueProtobuf._contentItems
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackQueueProtobuf._context
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackQueueProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackQueueProtobuf._location
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackQueueProtobuf._queueIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackQueueProtobuf._requestID
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackQueueProtobuf._resolvedPlayerPath
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackQueueProtobuf._sendingPlaybackQueueTransaction
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackQueueRequestProtobuf._artworkHeight
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackQueueRequestProtobuf._artworkWidth
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackQueueRequestProtobuf._cachingPolicy
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackQueueRequestProtobuf._contentItemIdentifiers
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackQueueRequestProtobuf._context
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackQueueRequestProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackQueueRequestProtobuf._includeInfo
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackQueueRequestProtobuf._includeLanguageOptions
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackQueueRequestProtobuf._includeLyrics
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackQueueRequestProtobuf._includeMetadata
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackQueueRequestProtobuf._includeSections
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackQueueRequestProtobuf._isLegacyNowPlayingInfoRequest
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackQueueRequestProtobuf._label
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackQueueRequestProtobuf._length
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackQueueRequestProtobuf._location
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackQueueRequestProtobuf._playerPath
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackQueueRequestProtobuf._requestID
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackQueueRequestProtobuf._returnContentItemAssetsInUserCompletion
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackSessionMigrateBeginMessageProtobuf._playerPath
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackSessionMigrateBeginMessageProtobuf._request
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackSessionMigrateEndMessageProtobuf._errorCode
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackSessionMigrateEndMessageProtobuf._errorDescription
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackSessionMigrateEndMessageProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackSessionMigrateEndMessageProtobuf._playerPath
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackSessionMigrateEndMessageProtobuf._request
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackSessionMigrateRequestEventProtobuf._duration
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackSessionMigrateRequestEventProtobuf._endTimestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackSessionMigrateRequestEventProtobuf._errorCode
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackSessionMigrateRequestEventProtobuf._errorDescription
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackSessionMigrateRequestEventProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackSessionMigrateRequestEventProtobuf._name
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackSessionMigrateRequestEventProtobuf._startTimestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackSessionMigrateRequestMessageProtobuf._playbackSession
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackSessionMigrateRequestMessageProtobuf._playerPath
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackSessionMigrateRequestMessageProtobuf._request
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackSessionMigrateRequestProtobuf._contentItem
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackSessionMigrateRequestProtobuf._endpointOptions
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackSessionMigrateRequestProtobuf._events
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackSessionMigrateRequestProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackSessionMigrateRequestProtobuf._playbackPosition
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackSessionMigrateRequestProtobuf._playbackRate
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackSessionMigrateRequestProtobuf._playbackSessionRequest
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackSessionMigrateRequestProtobuf._playbackState
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackSessionMigrateRequestProtobuf._playerOptions
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackSessionMigrateRequestProtobuf._playerPath
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackSessionMigrateRequestProtobuf._requestID
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackSessionMigrateResponseMessageProtobuf._request
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackSessionProtobuf._identifier
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackSessionProtobuf._playbackSessionData
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackSessionProtobuf._type
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackSessionRequestMessageProtobuf._playerPath
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackSessionRequestMessageProtobuf._request
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackSessionRequestProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackSessionRequestProtobuf._identifier
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackSessionRequestProtobuf._length
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackSessionRequestProtobuf._location
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackSessionRequestProtobuf._requestID
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackSessionRequestProtobuf._type
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPlaybackSessionResponseMessageProtobuf._playbackSession
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPresentRouteAuthorizationStatusMessageProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPresentRouteAuthorizationStatusMessageProtobuf._route
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPresentRouteAuthorizationStatusMessageProtobuf._status
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPromptForRouteAuthorizationMessageProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPromptForRouteAuthorizationMessageProtobuf._inputType
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPromptForRouteAuthorizationMessageProtobuf._route
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRPromptForRouteAuthorizationResponseMessageProtobuf._response
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRReceivedCommandAppOptionsProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRReceivedCommandAppOptionsProtobuf._launchApplication
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRReceivedCommandProtobuf._appOptions
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRReceivedCommandProtobuf._command
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRReceivedCommandProtobuf._destinationAppDisplayID
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRReceivedCommandProtobuf._destinationAppProcessID
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRReceivedCommandProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRReceivedCommandProtobuf._options
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRReceivedCommandProtobuf._originUID
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRReceivedCommandProtobuf._playerPath
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRReceivedCommandProtobuf._remoteControlInterfaceID
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRReceivedCommandProtobuf._senderAppDisplayID
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRRegisterForGameControllerEventsMessageProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRRegisterForGameControllerEventsMessageProtobuf._inputModeFlags
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRRegisterGameControllerMessageProtobuf._properties
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRRegisterGameControllerResponseMessageProtobuf._controllerID
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRRegisterGameControllerResponseMessageProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRRegisterHIDDeviceMessageProtobuf._deviceDescriptor
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRRegisterHIDDeviceResultMessageProtobuf._deviceIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRRegisterHIDDeviceResultMessageProtobuf._errorCode
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRRegisterHIDDeviceResultMessageProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRRegisterVoiceInputDeviceMessageProtobuf._descriptor
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRRegisterVoiceInputDeviceResponseMessageProtobuf._deviceID
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRRegisterVoiceInputDeviceResponseMessageProtobuf._errorCode
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRRegisterVoiceInputDeviceResponseMessageProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRRemoteTextInputMessageProtobuf._data
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRRemoteTextInputMessageProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRRemoteTextInputMessageProtobuf._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRRemoteTextInputMessageProtobuf._version
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRRemoveClientMessageProtobuf._client
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRRemoveOutputDevicesMessageProtobuf._outputDeviceUIDs
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRRemovePlayerMessageProtobuf._playerPath
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRSendButtonEventMessageProtobuf._buttonDown
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRSendButtonEventMessageProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRSendButtonEventMessageProtobuf._usage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRSendButtonEventMessageProtobuf._usagePage
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRSendCommandMessageProtobuf._command
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRSendCommandMessageProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRSendCommandMessageProtobuf._options
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRSendCommandMessageProtobuf._playerPath
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRSendCommandResultMessageProtobuf._commandID
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRSendCommandResultMessageProtobuf._handlerReturnStatus
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRSendCommandResultMessageProtobuf._handlerReturnStatusDatas
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRSendCommandResultMessageProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRSendCommandResultMessageProtobuf._playerPath
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRSendCommandResultMessageProtobuf._sendError
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRSendHIDEventMessageProtobuf._hidEventData
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRSendHIDReportMessageProtobuf._report
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRSendHIDReportMessageProtobuf._virtualDeviceID
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRSendLyricsEventMessageProtobuf._event
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRSendPackedVirtualTouchEventMessageProtobuf._data
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRSendVirtualTouchEventMessageProtobuf._event
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRSendVirtualTouchEventMessageProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRSendVirtualTouchEventMessageProtobuf._virtualDeviceID
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRSendVoiceInputMessageProtobuf._dataBlock
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRSetArtworkMessageProtobuf._jpegData
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRSetConnectionStateMessageProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRSetConnectionStateMessageProtobuf._state
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRSetHiliteModeMessageProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRSetHiliteModeMessageProtobuf._hiliteMode
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRSetNowPlayingClientMessageProtobuf._client
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRSetNowPlayingPlayerMessageProtobuf._playerPath
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRSetRecordingStateMessageProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRSetRecordingStateMessageProtobuf._state
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRSetStateMessageProtobuf._displayID
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRSetStateMessageProtobuf._displayName
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRSetStateMessageProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRSetStateMessageProtobuf._nowPlayingInfo
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRSetStateMessageProtobuf._playbackQueue
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRSetStateMessageProtobuf._playbackQueueCapabilities
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRSetStateMessageProtobuf._playbackState
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRSetStateMessageProtobuf._playbackStateTimestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRSetStateMessageProtobuf._playerPath
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRSetStateMessageProtobuf._request
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRSetStateMessageProtobuf._supportedCommands
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRSetVolumeMessageProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRSetVolumeMessageProtobuf._outputDeviceUID
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRSetVolumeMessageProtobuf._volume
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRSupportedCommandsProtobuf._supportedCommands
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRTextEditingAttributesProtobuf._inputTraits
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRTextEditingAttributesProtobuf._prompt
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRTextEditingAttributesProtobuf._title
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRTextInputMessageProtobuf._actionType
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRTextInputMessageProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRTextInputMessageProtobuf._text
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRTextInputMessageProtobuf._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRTextInputTraitsProtobuf._autocapitalizationType
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRTextInputTraitsProtobuf._autocorrection
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRTextInputTraitsProtobuf._enablesReturnKeyAutomatically
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRTextInputTraitsProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRTextInputTraitsProtobuf._keyboardType
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRTextInputTraitsProtobuf._pINEntrySeparatorIndexes
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRTextInputTraitsProtobuf._returnKeyType
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRTextInputTraitsProtobuf._secureTextEntry
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRTextInputTraitsProtobuf._spellchecking
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRTextInputTraitsProtobuf._validTextRangeLength
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRTextInputTraitsProtobuf._validTextRangeLocation
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRTransactionKeyProtobuf._identifier
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRTransactionKeyProtobuf._userData
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRTransactionMessageProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRTransactionMessageProtobuf._name
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRTransactionMessageProtobuf._packets
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRTransactionMessageProtobuf._playerPath
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRTransactionPacketProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRTransactionPacketProtobuf._identifier
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRTransactionPacketProtobuf._key
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRTransactionPacketProtobuf._packetData
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRTransactionPacketProtobuf._totalLength
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRTransactionPacketProtobuf._totalWritePosition
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRTransactionPacketsProtobuf._packets
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRUnregisterGameControllerMessageProtobuf._controllerID
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRUnregisterGameControllerMessageProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRUpdateClientMessageProtobuf._client
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRUpdateContentItemArtworkMessageProtobuf._contentItems
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRUpdateContentItemArtworkMessageProtobuf._playerPath
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRUpdateContentItemMessageProtobuf._contentItems
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRUpdateContentItemMessageProtobuf._playerPath
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRUpdateOutputDevicesMessageProtobuf._outputDevices
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRUpdatePlayerMessageProtobuf._playerPath
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRVideoThumbnailProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRVideoThumbnailProtobuf._imageData
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRVideoThumbnailProtobuf._time
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRVideoThumbnailRequestProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRVideoThumbnailRequestProtobuf._thumbnailsHeight
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRVideoThumbnailRequestProtobuf._thumbnailsWidth
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRVideoThumbnailRequestProtobuf._timeIntervals
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRVirtualTouchDeviceDescriptorProtobuf._absolute
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRVirtualTouchDeviceDescriptorProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRVirtualTouchDeviceDescriptorProtobuf._integratedDisplay
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRVirtualTouchDeviceDescriptorProtobuf._screenSizeHeight
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRVirtualTouchDeviceDescriptorProtobuf._screenSizeWidth
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRVirtualTouchEventProtobuf._finger
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRVirtualTouchEventProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRVirtualTouchEventProtobuf._phase
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRVirtualTouchEventProtobuf._x
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRVirtualTouchEventProtobuf._y
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRVoiceInputDevice._descriptor
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRVoiceInputDevice._deviceID
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRVoiceInputDevice._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRVoiceInputDevice._recordingState
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRVoiceInputDeviceDescriptorProtobuf._defaultFormat
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRVoiceInputDeviceDescriptorProtobuf._supportedFormats
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRVolumeControlAvailabilityProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRVolumeControlAvailabilityProtobuf._volumeCapabilities
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRVolumeControlAvailabilityProtobuf._volumeControlAvailable
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRVolumeControlCapabilitiesDidChangeMessageProtobuf._capabilities
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRVolumeControlCapabilitiesDidChangeMessageProtobuf._endpointUID
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRVolumeControlCapabilitiesDidChangeMessageProtobuf._outputDeviceUID
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRVolumeDidChangeMessageProtobuf._endpointUID
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRVolumeDidChangeMessageProtobuf._has
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRVolumeDidChangeMessageProtobuf._outputDeviceUID
|| __DATA.__objc_ivar _OBJC_IVAR_$__MRVolumeDidChangeMessageProtobuf._volume
|| __DATA_CONST.__const _MRAVOutputContextDidAddOutputDeviceNotification
|| __DATA_CONST.__const _MRAVOutputContextDidAddPersonalDeviceNotification
|| __DATA_CONST.__const _MRAVOutputContextDidRemoveOutputDeviceNotification
|| __DATA_CONST.__const _MRAVOutputContextDidRemovePersonalDeviceNotification
|| __DATA_CONST.__const _MRAVOutputContextOutputDeviceDidChangeNotification
|| __DATA_CONST.__const _MRAVOutputContextOutputDeviceUserInfoKey
|| __DATA_CONST.__const _MRAVOutputContextOutputDevicesDidChangeNotification
|| __DATA_CONST.__const _MRAVOutputContextVolumeControlCapabilitiesDidChangeNotification
|| __DATA_CONST.__const _MRAVOutputContextVolumeControlCapabilitiesUserInfoKey
|| __DATA_CONST.__const _MRAVOutputContextVolumeDidChangeNotification
|| __DATA_CONST.__const _MRAVOutputContextVolumeUserInfoKey
|| __DATA_CONST.__const _MRGenericMessageSetNameKey
|| __DATA_CONST.__const _MROutputContextDataSourceDidAddOutputDeviceNotification
|| __DATA_CONST.__const _MROutputContextDataSourceDidRemoveOutputDeviceNotification
|| __DATA_CONST.__const _MROutputContextDataSourceOutputDeviceDidChangeVolumeControlCapabilitiesNotification
|| __DATA_CONST.__const _MROutputContextDataSourceOutputDeviceDidChangeVolumeNotification
|| __DATA_CONST.__const _MROutputContextDataSourceOutputDeviceUserInfoKey
|| __DATA_CONST.__const _MROutputContextDataSourceVolumeCapabilitiesUserInfoKey
|| __DATA_CONST.__const _MROutputContextDataSourceVolumeUserInfoKey
|| __DATA_CONST.__const __MRAVEndpointNameUserInfoKey
|| __DATA_CONST.__const __MRAVEndpointOutputDeviceNameUserInfoKey
|| __DATA_CONST.__const __MRDeviceInfoDidChangeNotification
|| __DATA_CONST.__const __MRMediaRemoteActiveOriginDidChangeNotification
|| __DATA_CONST.__const __MRMediaRemoteActivePlayerDidChange
|| __DATA_CONST.__const __MRMediaRemoteActiveSystemEndpointDidChangeNotification
|| __DATA_CONST.__const __MRMediaRemoteApplicationClientStateDidChange
|| __DATA_CONST.__const __MRMediaRemoteApplicationDidForegroundNotification
|| __DATA_CONST.__const __MRMediaRemoteApplicationDisplayNameDidChangeNotification
|| __DATA_CONST.__const __MRMediaRemoteDefaultSupportedCommandsDidChangeNotification
|| __DATA_CONST.__const __MRMediaRemoteIsImplicitNowPlayingNotificationUserInfoKey
|| __DATA_CONST.__const __MRMediaRemoteIsImplicitPlayerNotificationUserInfoKey
|| __DATA_CONST.__const __MRMediaRemoteNowPlayingApplicationDidRegister
|| __DATA_CONST.__const __MRMediaRemoteNowPlayingApplicationDidUnregister
|| __DATA_CONST.__const __MRMediaRemoteNowPlayingPlayerDidRegister
|| __DATA_CONST.__const __MRMediaRemoteNowPlayingPlayerDidUnregister
|| __DATA_CONST.__const __MRMediaRemoteOriginDidRegisterNotification
|| __DATA_CONST.__const __MRMediaRemoteOriginDidUnregisterNotification
|| __DATA_CONST.__const __MRMediaRemoteOriginNowPlayingApplicationDidChangeNotification
|| __DATA_CONST.__const __MRMediaRemotePickedRouteVolumeControlAvailabilityDidChangeNotification
|| __DATA_CONST.__const __MRMediaRemotePickedRouteVolumeDidChangeNotification
|| __DATA_CONST.__const __MRMediaRemotePlayerIsPlayingDidChangeNotification
|| __DATA_CONST.__const __MRMediaRemotePlayerNowPlayingInfoDidChangeNotification
|| __DATA_CONST.__const __MRMediaRemotePlayerPlaybackStateDidChangeNotification
|| __DATA_CONST.__const __MRMediaRemotePlayerStateDidChange
|| __DATA_CONST.__const __MRMediaRemotePlayerSupportedCommandsDidChangeNotification
|| __DATA_CONST.__const __MRNowPlayingPlaybackQueueChangedNotification
|| __DATA_CONST.__const __MRPlayerPlaybackQueueContentItemArtworkChangedNotification
|| __DATA_CONST.__const __MRPlayerPlaybackQueueContentItemsChangedNotification
|| __DATA_CONST.__const __kMRMediaRemotePlaybackErrorDataUserInfoKey
|| __DATA_CONST.__const __kMRPlaybackQueueRequestIDUserInfoKey
|| __DATA_CONST.__const _kMRAVEndpointExternalDeviceInvalidatedNotification
|| __DATA_CONST.__const _kMRAVEndpointIdentifierUserInfoKey
|| __DATA_CONST.__const _kMRAVEndpointOutputDeviceIdentifierUserInfoKey
|| __DATA_CONST.__const _kMRAVEndpointOutputDevicesDidChangeNotification
|| __DATA_CONST.__const _kMRAVEndpointVolumeControlCapabilitiesDidChangeNotification
|| __DATA_CONST.__const _kMRAVEndpointVolumeControlCapabilitiesUserInfoKey
|| __DATA_CONST.__const _kMRAVEndpointVolumeDidChangeNotification
|| __DATA_CONST.__const _kMRAVEndpointVolumeUserInfoKey
|| __DATA_CONST.__const _kMRAVOutputContextDevicesDidChangeNotification
|| __DATA_CONST.__const _kMRAVOutputContextIdentifierUserInfoKey
|| __DATA_CONST.__const _kMRAVOutputContextOutputDeviceIdentifierUserInfoKey
|| __DATA_CONST.__const _kMRActiveDeviceInfoDidChangeNotification
|| __DATA_CONST.__const _kMRActiveNowPlayingPlayerPathDataUserInfoKey
|| __DATA_CONST.__const _kMRActiveNowPlayingPlayerPathUserInfoKey
|| __DATA_CONST.__const _kMRApplicationActivityHasBegunNotification
|| __DATA_CONST.__const _kMRApplicationActivityHasEndedNotification
|| __DATA_CONST.__const _kMRApplicationActivityStatusDidChangeNotification
|| __DATA_CONST.__const _kMRApplicationActivityUserInfoDataKey
|| __DATA_CONST.__const _kMRApplicationActivityUserInfoKey
|| __DATA_CONST.__const _kMRApplicationDidReportPlaybackErrorDistributedNotificationName
|| __DATA_CONST.__const _kMRCredentialRequirementCharacterCountUserInfoKey
|| __DATA_CONST.__const _kMRCredentialRequirementTypeUserInfoKey
|| __DATA_CONST.__const _kMRDeviceInfoDidChangeNotification
|| __DATA_CONST.__const _kMRExternalDeviceAllowPairingTXTRecordKey
|| __DATA_CONST.__const _kMRExternalDeviceBluetoothAddressTXTRecordKey
|| __DATA_CONST.__const _kMRExternalDeviceBonjourTypeGeneric
|| __DATA_CONST.__const _kMRExternalDeviceBonjourTypeTelevision
|| __DATA_CONST.__const _kMRExternalDeviceConnectionStateDidChangeNotification
|| __DATA_CONST.__const _kMRExternalDeviceConnectionStateUserInfoKey
|| __DATA_CONST.__const _kMRExternalDeviceEndpointDidChangeNotification
|| __DATA_CONST.__const _kMRExternalDeviceEndpointUserInfoKeyEndpoint
|| __DATA_CONST.__const _kMRExternalDeviceLocalAirPlayReceiverPairingIdentityKey
|| __DATA_CONST.__const _kMRExternalDeviceModelNameTXTRecordKey
|| __DATA_CONST.__const _kMRExternalDeviceNameTXTRecordKey
|| __DATA_CONST.__const _kMRExternalDeviceRemoteNowPlayingArtworkChanged
|| __DATA_CONST.__const _kMRExternalDeviceSystemBuildVersionTXTRecordKey
|| __DATA_CONST.__const _kMRExternalDeviceUniqueIdentifierTXTRecordKey
|| __DATA_CONST.__const _kMRExternalManagedConfigDeviceIDKey
|| __DATA_CONST.__const _kMRGameControllerDaemonProxyGameControllerDidChangeNotification
|| __DATA_CONST.__const _kMRGameControllerDaemonProxyGameControllerPropertiesUserInfoKey
|| __DATA_CONST.__const _kMRGameControllerDaemonProxyInterrupted
|| __DATA_CONST.__const _kMRLanguageOptionCharacteristicContainsOnlyForcedSubtitles
|| __DATA_CONST.__const _kMRLanguageOptionCharacteristicDescribesMusicAndSound
|| __DATA_CONST.__const _kMRLanguageOptionCharacteristicDescribesVideo
|| __DATA_CONST.__const _kMRLanguageOptionCharacteristicDubbedTranslation
|| __DATA_CONST.__const _kMRLanguageOptionCharacteristicEasyToRead
|| __DATA_CONST.__const _kMRLanguageOptionCharacteristicIsAuxiliaryContent
|| __DATA_CONST.__const _kMRLanguageOptionCharacteristicIsMainProgramContent
|| __DATA_CONST.__const _kMRLanguageOptionCharacteristicLanguageTranslation
|| __DATA_CONST.__const _kMRLanguageOptionCharacteristicTranscribesSpokenDialog
|| __DATA_CONST.__const _kMRLanguageOptionCharacteristicVoiceOverTranslation
|| __DATA_CONST.__const _kMRMediaRemoteActiveEndpointChangeTypeUserInfoKey
|| __DATA_CONST.__const _kMRMediaRemoteActiveEndpointReasonUserInfoKey
|| __DATA_CONST.__const _kMRMediaRemoteActiveEndpointTypeUserInfoKey
|| __DATA_CONST.__const _kMRMediaRemoteActiveOriginDidChangeNotification
|| __DATA_CONST.__const _kMRMediaRemoteActivePlayerDidChange
|| __DATA_CONST.__const _kMRMediaRemoteActiveSystemEndpointDidChangeNotification
|| __DATA_CONST.__const _kMRMediaRemoteApplicationClientStateDidChange
|| __DATA_CONST.__const _kMRMediaRemoteApplicationDidForegroundNotification
|| __DATA_CONST.__const _kMRMediaRemoteApplicationDidReportPlaybackErrorNotification
|| __DATA_CONST.__const _kMRMediaRemoteApplicationDisplayNameDidChangeNotification
|| __DATA_CONST.__const _kMRMediaRemoteApplicationFinishedLoadingContentNotification
|| __DATA_CONST.__const _kMRMediaRemoteApplicationForegroundUserInfoKey
|| __DATA_CONST.__const _kMRMediaRemoteApplicationInitiatedPlaybackOfContentItemNotification
|| __DATA_CONST.__const _kMRMediaRemoteApplicationInvalidatedBrowsableContentDataSourceNotification
|| __DATA_CONST.__const _kMRMediaRemoteAvailableOriginsDidChangeNotification
|| __DATA_CONST.__const _kMRMediaRemoteBrowsableContentAPIChangedNotification
|| __DATA_CONST.__const _kMRMediaRemoteBrowsableContentBundleIdentifierUserInfoKey
|| __DATA_CONST.__const _kMRMediaRemoteBrowsableContentEndpointChangedNotification
|| __DATA_CONST.__const _kMRMediaRemoteBrowsableContentErrorCodeKey
|| __DATA_CONST.__const _kMRMediaRemoteBrowsableContentErrorDomainKey
|| __DATA_CONST.__const _kMRMediaRemoteBrowsableContentErrorLocalizedDescriptionKey
|| __DATA_CONST.__const _kMRMediaRemoteBrowsableContentNowPlayingIdentifiersUpdatedNotification
|| __DATA_CONST.__const _kMRMediaRemoteCommandInfoCanBeControlledByScrubbingKey
|| __DATA_CONST.__const _kMRMediaRemoteCommandInfoCurrentPlaybackSessionTypes
|| __DATA_CONST.__const _kMRMediaRemoteCommandInfoDoNotProxy
|| __DATA_CONST.__const _kMRMediaRemoteCommandInfoDoNotSync
|| __DATA_CONST.__const _kMRMediaRemoteCommandInfoIsActiveKey
|| __DATA_CONST.__const _kMRMediaRemoteCommandInfoLocalizedShortTitleKey
|| __DATA_CONST.__const _kMRMediaRemoteCommandInfoLocalizedTitleKey
|| __DATA_CONST.__const _kMRMediaRemoteCommandInfoMaximumRatingKey
|| __DATA_CONST.__const _kMRMediaRemoteCommandInfoMinimumRatingKey
|| __DATA_CONST.__const _kMRMediaRemoteCommandInfoNumberOfAvailableSkips
|| __DATA_CONST.__const _kMRMediaRemoteCommandInfoPlaybackQueueType
|| __DATA_CONST.__const _kMRMediaRemoteCommandInfoPlaybackSessionIdentifier
|| __DATA_CONST.__const _kMRMediaRemoteCommandInfoPreferredIntervalsKey
|| __DATA_CONST.__const _kMRMediaRemoteCommandInfoPreferredPlaybackRate
|| __DATA_CONST.__const _kMRMediaRemoteCommandInfoPresentationStyleKey
|| __DATA_CONST.__const _kMRMediaRemoteCommandInfoPreservesRepeatModeKey
|| __DATA_CONST.__const _kMRMediaRemoteCommandInfoPreservesShuffleModeKey
|| __DATA_CONST.__const _kMRMediaRemoteCommandInfoPurchaseCommandState
|| __DATA_CONST.__const _kMRMediaRemoteCommandInfoRepeatMode
|| __DATA_CONST.__const _kMRMediaRemoteCommandInfoShuffleMode
|| __DATA_CONST.__const _kMRMediaRemoteCommandInfoSkipFrequency
|| __DATA_CONST.__const _kMRMediaRemoteCommandInfoSkipInterval
|| __DATA_CONST.__const _kMRMediaRemoteCommandInfoSpecializedQueues
|| __DATA_CONST.__const _kMRMediaRemoteCommandInfoSupportedCustomPlaybackQueueIdentifiers
|| __DATA_CONST.__const _kMRMediaRemoteCommandInfoSupportedInsertionPositions
|| __DATA_CONST.__const _kMRMediaRemoteCommandInfoSupportedPlaybackQueueTypes
|| __DATA_CONST.__const _kMRMediaRemoteCommandInfoSupportedPlaybackRates
|| __DATA_CONST.__const _kMRMediaRemoteCommandInfoSupportedPlaybackSessionTypes
|| __DATA_CONST.__const _kMRMediaRemoteCommandInfoSupportedRepeatModes
|| __DATA_CONST.__const _kMRMediaRemoteCommandInfoSupportedShuffleModes
|| __DATA_CONST.__const _kMRMediaRemoteCommandInfoSupportsSharedQueue
|| __DATA_CONST.__const _kMRMediaRemoteCommandInfoUpNextItemCount
|| __DATA_CONST.__const _kMRMediaRemoteContentItemsUpdatedNotification
|| __DATA_CONST.__const _kMRMediaRemoteElectedPlayerDidChangeNotification
|| __DATA_CONST.__const _kMRMediaRemoteElectedPlayerReasonUserInfoKey
|| __DATA_CONST.__const _kMRMediaRemoteErrorExternalDevicePairingLockOutDelayUserInfoKey
|| __DATA_CONST.__const _kMRMediaRemoteErrorTelevisionPairingLockOutDelayUserInfoKey
|| __DATA_CONST.__const _kMRMediaRemoteExternalScreenTypeDidChangeNotification
|| __DATA_CONST.__const _kMRMediaRemoteExternalScreenTypeUserInfoKey
|| __DATA_CONST.__const _kMRMediaRemoteFrameworkBundleIdentifier
|| __DATA_CONST.__const _kMRMediaRemoteFrameworkErrorDomain
|| __DATA_CONST.__const _kMRMediaRemoteIndexPathDataUserInfoKey
|| __DATA_CONST.__const _kMRMediaRemoteLocalPlaybackDidTimeoutNotification
|| __DATA_CONST.__const _kMRMediaRemoteLockScreenControlsDidActivateNotification
|| __DATA_CONST.__const _kMRMediaRemoteLockScreenControlsDidAppearNotification
|| __DATA_CONST.__const _kMRMediaRemoteLockScreenControlsDidDeactivateNotification
|| __DATA_CONST.__const _kMRMediaRemoteLockScreenControlsDidDisappearNotification
|| __DATA_CONST.__const _kMRMediaRemoteLockScreenControlsPlayerPathDidChangeNotification
|| __DATA_CONST.__const _kMRMediaRemoteMediaControlsConfigurationKey
|| __DATA_CONST.__const _kMRMediaRemoteMediaControlsLanguageOptionsCenterKey
|| __DATA_CONST.__const _kMRMediaRemoteMediaControlsLanguageOptionsRouteUIDKey
|| __DATA_CONST.__const _kMRMediaRemoteMediaTypeAudio
|| __DATA_CONST.__const _kMRMediaRemoteMediaTypeAudioBook
|| __DATA_CONST.__const _kMRMediaRemoteMediaTypeITunesRadio
|| __DATA_CONST.__const _kMRMediaRemoteMediaTypeITunesU
|| __DATA_CONST.__const _kMRMediaRemoteMediaTypeImage
|| __DATA_CONST.__const _kMRMediaRemoteMediaTypeMusic
|| __DATA_CONST.__const _kMRMediaRemoteMediaTypePodcast
|| __DATA_CONST.__const _kMRMediaRemoteMediaTypeVideo
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingApplicationClientStateDidChange
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingApplicationDidChangeNotification
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingApplicationDidForegroundNotification
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingApplicationDidRegister
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingApplicationDidRegisterCanBeNowPlaying
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingApplicationDidUnregister
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingApplicationDidUnregisterCanBeNowPlaying
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingApplicationDisplayNameDidChangeNotification
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingApplicationDisplayNameUserInfoKey
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingApplicationIsPlayingDidChangeNotification
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingApplicationIsPlayingUserInfoKey
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingApplicationPIDUserInfoKey
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingApplicationPlaybackStateDidChangeNotification
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingCollectionInfoCollectionTypeAlbum
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingCollectionInfoCollectionTypePlaylist
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingCollectionInfoCollectionTypeRadio
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingCollectionInfoKeyCollectionType
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingCollectionInfoKeyIdentifiers
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingCollectionInfoKeyTitle
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingExternalTouchBarInvocationNotification
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoAlbum
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoAlbumiTunesStoreAdamIdentifier
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoAppMetrics
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoArtist
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoArtistiTunesStoreAdamIdentifier
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoArtworkData
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoArtworkDataHeight
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoArtworkDataWidth
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoArtworkIdentifier
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoArtworkMIMEType
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoArtworkURL
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoAssetURL
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoAvailableLanguageOptionsData
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoBrandIdentifier
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoCalculatedElapsedTime
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoChapterNumber
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoClientPropertiesData
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoCollectionIdentifier
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoCollectionInfo
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoComposer
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoContentItemIdentifier
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoCurrentLanguageOptionsData
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoCurrentPlaybackDate
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoDefaultPlaybackRate
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoDidChangeNotification
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoDiscNumber
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoDownloadProgress
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoDownloadState
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoDuration
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoElapsedTime
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoExternalContentIdentifier
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoExternalProfileIdentifier
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoGenre
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoIsAdvertisement
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoIsAlwaysLive
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoIsBanned
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoIsExplicitTrack
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoIsInWishList
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoIsLiked
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoIsMusicApp
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoIsSharable
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoIsSteerable
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoIsVideosApp
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoMediaType
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoPlaybackProgress
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoPlaybackRate
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoPlaylistGlobalIdentifier
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoProhibitsSkip
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoPurchaseInfoData
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoQueueIndex
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoRadioStationHash
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoRadioStationIdentifier
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoRadioStationName
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoRadioStationStringIdentifier
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoRepeatMode
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoServiceIdentifier
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoShuffleMode
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoStartTime
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoSupportsFastForward15Seconds
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoSupportsIsBanned
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoSupportsIsLiked
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoSupportsRewind15Seconds
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoSupportsWishlisting
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoTimestamp
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoTitle
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoTotalChapterCount
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoTotalDiscCount
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoTotalQueueCount
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoTotalTrackCount
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoTrackNumber
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoTypeAudio
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoTypeVideo
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoUniqueIdentifier
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoUserInfo
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoiTunesStoreIdentifier
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingInfoiTunesStoreSubscriptionAdamIdentifier
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingPlaybackQueueDidChangeNotification
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingPlayerDidChange
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingPlayerDidRegister
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingPlayerDidUnregister
|| __DATA_CONST.__const _kMRMediaRemoteNowPlayingPlayerStateDidChange
|| __DATA_CONST.__const _kMRMediaRemoteOptionAffiliateIdentifier
|| __DATA_CONST.__const _kMRMediaRemoteOptionBeginSeek
|| __DATA_CONST.__const _kMRMediaRemoteOptionBookmarkiTunesDestination
|| __DATA_CONST.__const _kMRMediaRemoteOptionChangeLanguageOptionSetting
|| __DATA_CONST.__const _kMRMediaRemoteOptionCommandBroadcasted
|| __DATA_CONST.__const _kMRMediaRemoteOptionCommandID
|| __DATA_CONST.__const _kMRMediaRemoteOptionCommandType
|| __DATA_CONST.__const _kMRMediaRemoteOptionContentItemID
|| __DATA_CONST.__const _kMRMediaRemoteOptionContextID
|| __DATA_CONST.__const _kMRMediaRemoteOptionDestinationAppDisplayID
|| __DATA_CONST.__const _kMRMediaRemoteOptionDisableFallbackContent
|| __DATA_CONST.__const _kMRMediaRemoteOptionDisableImplicitAppLaunchBehaviors
|| __DATA_CONST.__const _kMRMediaRemoteOptionEndSeek
|| __DATA_CONST.__const _kMRMediaRemoteOptionInsertAfterContentItemID
|| __DATA_CONST.__const _kMRMediaRemoteOptionInterruptionEvent
|| __DATA_CONST.__const _kMRMediaRemoteOptionIsExternalPlayerCommand
|| __DATA_CONST.__const _kMRMediaRemoteOptionIsNegative
|| __DATA_CONST.__const _kMRMediaRemoteOptionLanguageOptionData
|| __DATA_CONST.__const _kMRMediaRemoteOptionMediaType
|| __DATA_CONST.__const _kMRMediaRemoteOptionNowPlayingContentItemID
|| __DATA_CONST.__const _kMRMediaRemoteOptionPlaybackPosition
|| __DATA_CONST.__const _kMRMediaRemoteOptionPlaybackProgress
|| __DATA_CONST.__const _kMRMediaRemoteOptionPlaybackQueueDestinationOffset
|| __DATA_CONST.__const _kMRMediaRemoteOptionPlaybackQueueInsertionPosition
|| __DATA_CONST.__const _kMRMediaRemoteOptionPlaybackQueueOffset
|| __DATA_CONST.__const _kMRMediaRemoteOptionPlaybackRate
|| __DATA_CONST.__const _kMRMediaRemoteOptionPlaybackSessionData
|| __DATA_CONST.__const _kMRMediaRemoteOptionPredefinedPlaybackRate
|| __DATA_CONST.__const _kMRMediaRemoteOptionPrivateListeningEnabled
|| __DATA_CONST.__const _kMRMediaRemoteOptionRating
|| __DATA_CONST.__const _kMRMediaRemoteOptionRemoteControlInterfaceIdentifier
|| __DATA_CONST.__const _kMRMediaRemoteOptionRepeatMode
|| __DATA_CONST.__const _kMRMediaRemoteOptionRequestDefermentToPlaybackQueuePosition
|| __DATA_CONST.__const _kMRMediaRemoteOptionSendOptionsNumber
|| __DATA_CONST.__const _kMRMediaRemoteOptionSenderID
|| __DATA_CONST.__const _kMRMediaRemoteOptionShouldBeginRadioPlayback
|| __DATA_CONST.__const _kMRMediaRemoteOptionShuffleMode
|| __DATA_CONST.__const _kMRMediaRemoteOptionSkipInterval
|| __DATA_CONST.__const _kMRMediaRemoteOptionSourceID
|| __DATA_CONST.__const _kMRMediaRemoteOptionStationHash
|| __DATA_CONST.__const _kMRMediaRemoteOptionStationID
|| __DATA_CONST.__const _kMRMediaRemoteOptionStationURL
|| __DATA_CONST.__const _kMRMediaRemoteOptionSystemAppPlaybackQueueData
|| __DATA_CONST.__const _kMRMediaRemoteOptionTrackID
|| __DATA_CONST.__const _kMRMediaRemoteOptionUserIdentityData
|| __DATA_CONST.__const _kMRMediaRemoteOriginDataUserInfoKey
|| __DATA_CONST.__const _kMRMediaRemoteOriginDidRegisterNotification
|| __DATA_CONST.__const _kMRMediaRemoteOriginDidUnregisterNotification
|| __DATA_CONST.__const _kMRMediaRemoteOriginNowPlayingApplicationClientStateDidChange
|| __DATA_CONST.__const _kMRMediaRemoteOriginNowPlayingApplicationDidChangeNotification
|| __DATA_CONST.__const _kMRMediaRemoteOriginNowPlayingApplicationDidForegroundNotification
|| __DATA_CONST.__const _kMRMediaRemoteOriginNowPlayingApplicationDisplayNameDidChangeNotification
|| __DATA_CONST.__const _kMRMediaRemoteOriginNowPlayingApplicationIsPlayingDidChangeNotification
|| __DATA_CONST.__const _kMRMediaRemoteOriginNowPlayingApplicationPlaybackStateDidChangeNotification
|| __DATA_CONST.__const _kMRMediaRemoteOriginNowPlayingInfoDidChangeNotification
|| __DATA_CONST.__const _kMRMediaRemoteOriginNowPlayingPlayerDidChange
|| __DATA_CONST.__const _kMRMediaRemoteOriginNowPlayingPlayerStateDidChange
|| __DATA_CONST.__const _kMRMediaRemoteOriginSupportedCommandsDidChangeNotification
|| __DATA_CONST.__const _kMRMediaRemoteOriginUserInfoKey
|| __DATA_CONST.__const _kMRMediaRemotePickableRoutesDidChangeNotification
|| __DATA_CONST.__const _kMRMediaRemotePickedRouteVolumeControlAvailabilityDidChangeNotification
|| __DATA_CONST.__const _kMRMediaRemotePickedRouteVolumeControlAvailabilityUserInfoKey
|| __DATA_CONST.__const _kMRMediaRemotePickedRouteVolumeControlCapabilitiesUserInfoKey
|| __DATA_CONST.__const _kMRMediaRemotePickedRouteVolumeDidChangeNotification
|| __DATA_CONST.__const _kMRMediaRemotePickedRouteVolumeUserInfoKey
|| __DATA_CONST.__const _kMRMediaRemotePlaybackErrorApplicationUserInfoKey
|| __DATA_CONST.__const _kMRMediaRemotePlaybackErrorReasonUserInfoKey
|| __DATA_CONST.__const _kMRMediaRemotePlaybackErrorUserInfoKey
|| __DATA_CONST.__const _kMRMediaRemotePlaybackStateUserInfoKey
|| __DATA_CONST.__const _kMRMediaRemotePlayerIsPlayingDidChangeNotification
|| __DATA_CONST.__const _kMRMediaRemotePlayerNowPlayingInfoDidChangeNotification
|| __DATA_CONST.__const _kMRMediaRemotePlayerPlaybackStateDidChangeNotification
|| __DATA_CONST.__const _kMRMediaRemotePlayerStateDidChange
|| __DATA_CONST.__const _kMRMediaRemotePlayerSupportedCommandsDidChangeNotification
|| __DATA_CONST.__const _kMRMediaRemoteRouteDescriptionUserInfoKey
|| __DATA_CONST.__const _kMRMediaRemoteRouteIsLocalDeviceRouteKey
|| __DATA_CONST.__const _kMRMediaRemoteRouteStatusDidChangeNotification
|| __DATA_CONST.__const _kMRMediaRemoteRouteStatusUserInfoKey
|| __DATA_CONST.__const _kMRMediaRemoteServiceDidResetDistributedNotification
|| __DATA_CONST.__const _kMRMediaRemoteSupportedCommandsDidChangeNotification
|| __DATA_CONST.__const _kMRMediaRemoteSystemAppDidSkipTrackNotification
|| __DATA_CONST.__const _kMRMediaRemoteSystemMediaApplicationDisplayIdentifier
|| __DATA_CONST.__const _kMRMediaRemoteSystemPodcastApplicationDisplayIdentifier
|| __DATA_CONST.__const _kMRMediaRemoteTelevisionPairingExtendedInfoIdentifierKey
|| __DATA_CONST.__const _kMRMediaRemoteTelevisionPairingExtendedInfoKey
|| __DATA_CONST.__const _kMRMediaRemoteTelevisionPairingExtendedInfoNameKey
|| __DATA_CONST.__const _kMRMediaRemoteUpdatedContentItemsDataUserInfoKey
|| __DATA_CONST.__const _kMRMediaRemoteUpdatedContentItemsUserInfoKey
|| __DATA_CONST.__const _kMRMediaRemoteUpdatedNowPlayingIdentifiersInfoKey
|| __DATA_CONST.__const _kMRMediaRemoteWillPresentRouteAuthenticationPromptNotification
|| __DATA_CONST.__const _kMRNowPlayingActivePlayerPathDidChangeDistributedNotificationName
|| __DATA_CONST.__const _kMRNowPlayingAppIsPlayingDidChangeDistributedNotificationName
|| __DATA_CONST.__const _kMRNowPlayingClientDataUserInfoKey
|| __DATA_CONST.__const _kMRNowPlayingClientUserInfoKey
|| __DATA_CONST.__const _kMRNowPlayingPlaybackQueueChangedNotification
|| __DATA_CONST.__const _kMRNowPlayingPlayerDataUserInfoKey
|| __DATA_CONST.__const _kMRNowPlayingPlayerPathDataUserInfoKey
|| __DATA_CONST.__const _kMRNowPlayingPlayerPathUserInfoKey
|| __DATA_CONST.__const _kMRNowPlayingPlayerUserInfoKey
|| __DATA_CONST.__const _kMROriginActiveNowPlayingPlayerPathDataUserInfoKey
|| __DATA_CONST.__const _kMROriginActiveNowPlayingPlayerPathUserInfoKey
|| __DATA_CONST.__const _kMROriginNowPlayingPlaybackQueueChangedNotification
|| __DATA_CONST.__const _kMROriginPlaybackQueueContentItemArtworkChangedNotification
|| __DATA_CONST.__const _kMROriginPlaybackQueueContentItemsChangedNotification
|| __DATA_CONST.__const _kMRPairedDeviceUserInfoDataKey
|| __DATA_CONST.__const _kMRPairedDeviceUserInfoKey
|| __DATA_CONST.__const _kMRPlaybackQueueCapabilitiesChangedNotification
|| __DATA_CONST.__const _kMRPlaybackQueueCapabilitiesUserInfoKey
|| __DATA_CONST.__const _kMRPlaybackQueueContentItemArtworkChangedNotification
|| __DATA_CONST.__const _kMRPlaybackQueueContentItemsChangedNotification
|| __DATA_CONST.__const _kMRPlaybackQueueDataUserInfoKey
|| __DATA_CONST.__const _kMRPlaybackQueueRequestDataUserInfoKey
|| __DATA_CONST.__const _kMRPlaybackQueueRequestUserInfoKey
|| __DATA_CONST.__const _kMRPlaybackQueueUserInfoKey
|| __DATA_CONST.__const _kMRPlaybackSessionDataUserInfoKey
|| __DATA_CONST.__const _kMRPlaybackSessionRequestDataUserInfoKey
|| __DATA_CONST.__const _kMRPlaybackSessionRequestUserInfoKey
|| __DATA_CONST.__const _kMRPlaybackSessionUserInfoKey
|| __DATA_CONST.__const _kMRPlayerPlaybackQueueChangedNotification
|| __DATA_CONST.__const _kMRPlayerPlaybackQueueContentItemArtworkChangedNotification
|| __DATA_CONST.__const _kMRPlayerPlaybackQueueContentItemsChangedNotification
|| __DATA_CONST.__const _kMRPreviousPairedDeviceUserInfoDataKey
|| __DATA_CONST.__const _kMRPreviousPairedDeviceUserInfoKey
|| __DATA_CONST.__const _kMRSupportedCommandsDataUserInfoKey
|| __DATA_CONST.__const _kMRSupportedCommandsUserInfoKey
|| __DATA_CONST.__const _kMRSystemAppPlaybackQueueReplaceIntentKey
|| __DATA_CONST.__const _kMRSystemAppPlaybackQueueShouldOverrideManuallyCuratedQueueKey
|| __DATA_CONST.__const _kMRTelevisionServiceIsPairingAllowedDidChangeNotification
|| __DATA_CONST.__const _kMRTelevisionServicePairedDevicesDidChangeNotification
|| __DATA_CONST.__const _kMRVirtualVoiceInputDeviceIDUserInfoKey
|| __DATA_CONST.__const _kMRVirtualVoiceInputRecordingStateDidChangeNotification
|| __DATA_CONST.__const _kMRVirtualVoiceInputRecordingStateUserInfoKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MRAVConcreteEndpoint
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MRAVConcreteOutputDevice
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MRAVConcreteRoutingDiscoverySession
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MRAVDistantEndpoint
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MRAVDistantExternalDeviceMetadata
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MRAVDistantOutputDevice
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MRAVDistantRoutingDiscoverySession
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MRAVEndpoint
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MRAVLightweightReconnaissanceSession
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MRAVLocalEndpoint
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MRAVOutputContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MRAVOutputContextTransport
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MRAVOutputDevice
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MRAVOutputDeviceSourceInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MRAVRoutingDiscoverySession
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MRApplicationActivity
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MRCoreUtilsPairingSession
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MRCoreUtilsSystemPairingSession
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MRCryptoPairingSession
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MRDistantExternalDevice
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MRExternalOutputContextDataSource
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MRMediaRemoteServiceClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MRMutableApplicationActivity
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MRNotification
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MRNotificationClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MRNotificationServiceClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MRNowPlayingClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MRNowPlayingOriginClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MRNowPlayingOriginClientManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MRNowPlayingOriginClientRequests
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MRNowPlayingPlayerClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MROutputContextController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MROutputContextDataSource
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MRPlaybackQueueClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MRPlaybackQueueSubscriptionController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MRProtocolMessage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MRTransportExternalDevice
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MRUserSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MRWeakProxy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MRXPCConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__MRAVAirPlaySecuritySettingsProtobuf
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__MRAVEndpointDescriptorProtobuf
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__MRAVOutputDeviceDescriptorProtobuf
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__MRAVOutputDeviceSourceInfoProtobuf
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__MRContentItemMetadataProtobuf
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__MRContentItemProtobuf
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__MRDeviceInfoMessageProtobuf
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__MRDiagnosticProtobuf
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__MRLanguageOptionGroupProtobuf
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__MRLanguageOptionProtobuf
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__MRNowPlayingClientProtobuf
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__MRNowPlayingPlayerPathProtobuf
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__MRNowPlayingPlayerProtobuf
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__MROriginProtobuf
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__MRPlaybackQueueProtobuf
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__MRPlaybackQueueRequestProtobuf
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__MRVideoThumbnailRequestProtobuf
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MRAVConcreteEndpoint
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MRAVConcreteOutputDevice
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MRAVConcreteRoutingDiscoverySession
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MRAVDistantEndpoint
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MRAVDistantExternalDeviceMetadata
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MRAVDistantOutputDevice
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MRAVDistantRoutingDiscoverySession
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MRAVEndpoint
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MRAVLightweightReconnaissanceSession
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MRAVLocalEndpoint
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MRAVOutputContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MRAVOutputContextTransport
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MRAVOutputDevice
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MRAVOutputDeviceSourceInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MRAVRoutingDiscoverySession
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MRApplicationActivity
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MRCoreUtilsPairingSession
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MRCoreUtilsSystemPairingSession
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MRCryptoPairingSession
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MRDistantExternalDevice
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MRExternalOutputContextDataSource
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MRMediaRemoteServiceClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MRMutableApplicationActivity
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MRNotification
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MRNotificationClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MRNotificationServiceClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MRNowPlayingClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MRNowPlayingOriginClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MRNowPlayingOriginClientManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MRNowPlayingOriginClientRequests
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MRNowPlayingPlayerClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MROutputContextController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MROutputContextDataSource
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MRPlaybackQueueClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MRPlaybackQueueSubscriptionController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MRProtocolMessage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MRTransportExternalDevice
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MRUserSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MRWeakProxy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MRXPCConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__MRAVAirPlaySecuritySettingsProtobuf
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__MRAVEndpointDescriptorProtobuf
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__MRAVOutputDeviceDescriptorProtobuf
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__MRAVOutputDeviceSourceInfoProtobuf
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__MRContentItemMetadataProtobuf
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__MRContentItemProtobuf
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__MRDeviceInfoMessageProtobuf
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__MRDiagnosticProtobuf
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__MRGameControllerPropertiesProtobuf
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__MRLanguageOptionGroupProtobuf
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__MRLanguageOptionProtobuf
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__MRNowPlayingClientProtobuf
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__MRNowPlayingPlayerPathProtobuf
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__MRNowPlayingPlayerProtobuf
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__MROriginProtobuf
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__MRPlaybackQueueProtobuf
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__MRPlaybackQueueRequestProtobuf
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__MRVideoThumbnailRequestProtobuf
|| __TEXT.__const _MRColorNull
|| __TEXT.__text _MRAVAirPlaySecuritySettingsCreate
|| __TEXT.__text _MRAVAirPlaySecuritySettingsCreateExternalRepresentation
|| __TEXT.__text _MRAVAirPlaySecuritySettingsCreateFromExternalRepresentation
|| __TEXT.__text _MRAVAirPlaySecuritySettingsGetPassword
|| __TEXT.__text _MRAVAirPlaySecuritySettingsGetSecurityMode
|| __TEXT.__text _MRAVCopyOutputDevicesSubstitutingLocalDevice
|| __TEXT.__text _MRAVEndpointAddOutputDevices
|| __TEXT.__text _MRAVEndpointAddOutputDevicesToGroup
|| __TEXT.__text _MRAVEndpointAddOutputDevicesWithInitiator
|| __TEXT.__text _MRAVEndpointCanModifyGroupMembership
|| __TEXT.__text _MRAVEndpointCopyDesignatedGroupLeader
|| __TEXT.__text _MRAVEndpointCopyLocalizedName
|| __TEXT.__text _MRAVEndpointCopyOrigin
|| __TEXT.__text _MRAVEndpointCopyOutputDevices
|| __TEXT.__text _MRAVEndpointCopyPersonalOutputDevices
|| __TEXT.__text _MRAVEndpointCopyUniqueIdentifier
|| __TEXT.__text _MRAVEndpointCreateUniqueIdentifier
|| __TEXT.__text _MRAVEndpointCreateWithDevices
|| __TEXT.__text _MRAVEndpointCreateWithDevicesAsync
|| __TEXT.__text _MRAVEndpointForceEnableRemoteControllability
|| __TEXT.__text _MRAVEndpointGetActiveSystemEndpointUID
|| __TEXT.__text _MRAVEndpointGetClass
|| __TEXT.__text _MRAVEndpointGetConnectionType
|| __TEXT.__text _MRAVEndpointGetDesignatedGroupLeader
|| __TEXT.__text _MRAVEndpointGetExternalDevice
|| __TEXT.__text _MRAVEndpointGetLocalEndpoint
|| __TEXT.__text _MRAVEndpointGetLocalizedName
|| __TEXT.__text _MRAVEndpointGetMyGroupLeaderWithTimeout
|| __TEXT.__text _MRAVEndpointGetOutputDeviceUIDVolume
|| __TEXT.__text _MRAVEndpointGetOutputDeviceUIDVolumeControlCapabilities
|| __TEXT.__text _MRAVEndpointGetOutputDeviceVolume
|| __TEXT.__text _MRAVEndpointGetOutputDeviceVolumeControlCapabilities
|| __TEXT.__text _MRAVEndpointGetUniqueIdentifier
|| __TEXT.__text _MRAVEndpointGetVolume
|| __TEXT.__text _MRAVEndpointGetVolumeControlCapabilities
|| __TEXT.__text _MRAVEndpointGroupDevicesAndSendCommand
|| __TEXT.__text _MRAVEndpointIsLocalEndpoint
|| __TEXT.__text _MRAVEndpointIsOutputDeviceVolumeControlAvailable
|| __TEXT.__text _MRAVEndpointIsProxyGroupPlayer
|| __TEXT.__text _MRAVEndpointLookupEndpointByDeviceUID
|| __TEXT.__text _MRAVEndpointLookupEndpointByOrigin
|| __TEXT.__text _MRAVEndpointMigrate
|| __TEXT.__text _MRAVEndpointMoveOutputGroupToDevices
|| __TEXT.__text _MRAVEndpointObserverAddEndpointChangedCallback
|| __TEXT.__text _MRAVEndpointObserverBegin
|| __TEXT.__text _MRAVEndpointObserverCreateWithOutputDeviceUID
|| __TEXT.__text _MRAVEndpointObserverEnd
|| __TEXT.__text _MRAVEndpointPredictGroupLeader
|| __TEXT.__text _MRAVEndpointRemoveOutputDevices
|| __TEXT.__text _MRAVEndpointRemoveOutputDevicesFromGroup
|| __TEXT.__text _MRAVEndpointRemoveOutputDevicesWithInitiator
|| __TEXT.__text _MRAVEndpointResolveActiveSystemEndpoint
|| __TEXT.__text _MRAVEndpointResolveActiveSystemEndpointWithTimeout
|| __TEXT.__text _MRAVEndpointResolveActiveSystemEndpointWithType
|| __TEXT.__text _MRAVEndpointSetOutputDeviceUIDVolume
|| __TEXT.__text _MRAVEndpointSetOutputDeviceVolume
|| __TEXT.__text _MRAVEndpointSetOutputDevices
|| __TEXT.__text _MRAVEndpointSetOutputDevicesWithInitiator
|| __TEXT.__text _MRAVEndpointSetVolume
|| __TEXT.__text _MRAVEndpointUpdateActiveSystemEndpoint
|| __TEXT.__text _MRAVEndpointUpdateActiveSystemEndpointForOutputDeviceUIDWithReason
|| __TEXT.__text _MRAVEndpointUpdateActiveSystemEndpointWithReason
|| __TEXT.__text _MRAVOutputContextAddOutputDevice
|| __TEXT.__text _MRAVOutputContextAddOutputDeviceWithInitiator
|| __TEXT.__text _MRAVOutputContextAddOutputDevices
|| __TEXT.__text _MRAVOutputContextAddOutputDevicesWithInitiator
|| __TEXT.__text _MRAVOutputContextCopyLocalDevice
|| __TEXT.__text _MRAVOutputContextCopyOutputDevices
|| __TEXT.__text _MRAVOutputContextCopyUniqueIdentifier
|| __TEXT.__text _MRAVOutputContextCreateRoutingContext
|| __TEXT.__text _MRAVOutputContextCreateiTunesAudioContext
|| __TEXT.__text _MRAVOutputContextGetSharedAudioPresentationContext
|| __TEXT.__text _MRAVOutputContextGetSharedSystemAudioContext
|| __TEXT.__text _MRAVOutputContextGetSharedSystemScreenContext
|| __TEXT.__text _MRAVOutputContextGetType
|| __TEXT.__text _MRAVOutputContextGetUniqueIdentifier
|| __TEXT.__text _MRAVOutputContextRemoveAllDevices
|| __TEXT.__text _MRAVOutputContextRemoveOutputDevice
|| __TEXT.__text _MRAVOutputContextRemoveOutputDeviceWithInitiator
|| __TEXT.__text _MRAVOutputContextRemoveOutputDevices
|| __TEXT.__text _MRAVOutputContextRemoveOutputDevicesWithInitiator
|| __TEXT.__text _MRAVOutputContextSetOutputDevice
|| __TEXT.__text _MRAVOutputContextSetOutputDeviceWithInitiator
|| __TEXT.__text _MRAVOutputContextSetOutputDeviceWithPassword
|| __TEXT.__text _MRAVOutputContextSetOutputDevices
|| __TEXT.__text _MRAVOutputContextSetOutputDevicesWithInitiator
|| __TEXT.__text _MRAVOutputContextSupportsMultipleBluetoothOutputDevices
|| __TEXT.__text _MRAVOutputContextTypeCopyDescription
|| __TEXT.__text _MRAVOutputDeviceCanAccessAppleMusic
|| __TEXT.__text _MRAVOutputDeviceCanAccessRemoteAssets
|| __TEXT.__text _MRAVOutputDeviceCanFetchMediaDataFromSender
|| __TEXT.__text _MRAVOutputDeviceCanPlayEncryptedProgressiveDownloadAssets
|| __TEXT.__text _MRAVOutputDeviceCanRelayCommunicationChannel
|| __TEXT.__text _MRAVOutputDeviceCopyAvailableBluetoothListeningMode
|| __TEXT.__text _MRAVOutputDeviceCopyBluetoothID
|| __TEXT.__text _MRAVOutputDeviceCopyCurrentBluetoothListeningMode
|| __TEXT.__text _MRAVOutputDeviceCopyFirmwareVersion
|| __TEXT.__text _MRAVOutputDeviceCopyGroupIdentifier
|| __TEXT.__text _MRAVOutputDeviceCopyLocalDeviceLocalizedName
|| __TEXT.__text _MRAVOutputDeviceCopyLogicalDeviceID
|| __TEXT.__text _MRAVOutputDeviceCopyMACAddress
|| __TEXT.__text _MRAVOutputDeviceCopyModelID
|| __TEXT.__text _MRAVOutputDeviceCopyModelSpecificInformation
|| __TEXT.__text _MRAVOutputDeviceCopyName
|| __TEXT.__text _MRAVOutputDeviceCopyPlayingPairedDeviceName
|| __TEXT.__text _MRAVOutputDeviceCopySourceInfo
|| __TEXT.__text _MRAVOutputDeviceCopyUniqueIdentifier
|| __TEXT.__text _MRAVOutputDeviceCreateFromAVOutputDevice
|| __TEXT.__text _MRAVOutputDeviceCreateLocalDevice
|| __TEXT.__text _MRAVOutputDeviceGetAVOutputDevice
|| __TEXT.__text _MRAVOutputDeviceGetBatteryLevel
|| __TEXT.__text _MRAVOutputDeviceGetEndpoint
|| __TEXT.__text _MRAVOutputDeviceGetGroupIdentifier
|| __TEXT.__text _MRAVOutputDeviceGetMACAddress
|| __TEXT.__text _MRAVOutputDeviceGetModelID
|| __TEXT.__text _MRAVOutputDeviceGetModelSpecificInformation
|| __TEXT.__text _MRAVOutputDeviceGetName
|| __TEXT.__text _MRAVOutputDeviceGetRecentAVOutputDeviceUIDs
|| __TEXT.__text _MRAVOutputDeviceGetSubtype
|| __TEXT.__text _MRAVOutputDeviceGetType
|| __TEXT.__text _MRAVOutputDeviceGetUniqueIdentifier
|| __TEXT.__text _MRAVOutputDeviceGroupContainsGroupLeader
|| __TEXT.__text _MRAVOutputDeviceHasBatteryLevel
|| __TEXT.__text _MRAVOutputDeviceIsAddedToHomeKit
|| __TEXT.__text _MRAVOutputDeviceIsGroupLeader
|| __TEXT.__text _MRAVOutputDeviceIsGroupable
|| __TEXT.__text _MRAVOutputDeviceIsLocalDevice
|| __TEXT.__text _MRAVOutputDeviceIsPickedOnPairedDevice
|| __TEXT.__text _MRAVOutputDeviceIsProxyGroupPlayer
|| __TEXT.__text _MRAVOutputDeviceIsRemoteControllable
|| __TEXT.__text _MRAVOutputDeviceIsVolumeControlAvailable
|| __TEXT.__text _MRAVOutputDeviceParentGroupContainsDiscoverableLeader
|| __TEXT.__text _MRAVOutputDeviceParentGroupIdentifier
|| __TEXT.__text _MRAVOutputDevicePresentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets
|| __TEXT.__text _MRAVOutputDeviceRemoveFromParentGroup
|| __TEXT.__text _MRAVOutputDeviceRequiresAuthorization
|| __TEXT.__text _MRAVOutputDeviceSetCurrentBluetoothListeningMode
|| __TEXT.__text _MRAVOutputDeviceSetRecentAVOutputDeviceUID
|| __TEXT.__text _MRAVOutputDeviceSourceInfoCopyRoutingContextUID
|| __TEXT.__text _MRAVOutputDeviceSourceInfoMultipleBuiltInDevices
|| __TEXT.__text _MRAVOutputDeviceSubstituteLocalDevice
|| __TEXT.__text _MRAVOutputDeviceSubtypeCopyDescription
|| __TEXT.__text _MRAVOutputDeviceSupportsBluetoothSharing
|| __TEXT.__text _MRAVOutputDeviceSupportsBufferedAirPlay
|| __TEXT.__text _MRAVOutputDeviceSupportsExternalScreen
|| __TEXT.__text _MRAVOutputDeviceSupportsRapport
|| __TEXT.__text _MRAVOutputDeviceTypeCopyDescription
|| __TEXT.__text _MRAVOutputDeviceisAirPlayReceiverSessionActive
|| __TEXT.__text _MRAVReconnaissanceSessionBeginEndpointsSearch
|| __TEXT.__text _MRAVReconnaissanceSessionBeginSearch
|| __TEXT.__text _MRAVReconnaissanceSessionCancelSearch
|| __TEXT.__text _MRAVReconnaissanceSessionCreate
|| __TEXT.__text _MRAVReconnaissanceSessionCreateWithEndpointFeatures
|| __TEXT.__text _MRAVReconnaissanceSessionCreateWithMatchingLogicalDeviceIDs
|| __TEXT.__text _MRAVReconnaissanceSessionCreateWithMatchingOutputGroupID
|| __TEXT.__text _MRAVReconnaissanceSessionCreateWithMatchingOutputGroupIDFeatures
|| __TEXT.__text _MRAVReconnaissanceSessionGetMatchingOutputDeviceUIDs
|| __TEXT.__text _MRAVReconnaissanceSessionSetReturnPartialResults
|| __TEXT.__text _MRAVReconnaissanceSessionSetTargetAudioSessionID
|| __TEXT.__text _MRAVReconnaissanceSessionSetUseWeakMatching
|| __TEXT.__text _MRAVReconnaissanceSessionSetWaitForUnanimousEndpoints
|| __TEXT.__text _MRAVReconnaissanceSessionUseWeakMatching
|| __TEXT.__text _MRAVRouteQueryCreate
|| __TEXT.__text _MRAVRouteQueryCreateExternalRepresentation
|| __TEXT.__text _MRAVRouteQueryCreateFromExternalRepresentation
|| __TEXT.__text _MRAVRouteQueryGetRouteUID
|| __TEXT.__text _MRAVRouteQuerySetRouteUID
|| __TEXT.__text _MRAVRoutingDiscoverySessionAddEndpointsChangedCallback
|| __TEXT.__text _MRAVRoutingDiscoverySessionAddOutputDevicesChangedCallback
|| __TEXT.__text _MRAVRoutingDiscoverySessionAlwaysAllowUpdates
|| __TEXT.__text _MRAVRoutingDiscoverySessionCopyAvailableEndpoints
|| __TEXT.__text _MRAVRoutingDiscoverySessionCopyAvailableOutputDevices
|| __TEXT.__text _MRAVRoutingDiscoverySessionCopyRoutingContextUID
|| __TEXT.__text _MRAVRoutingDiscoverySessionCreate
|| __TEXT.__text _MRAVRoutingDiscoverySessionCreateRemoteControlThrottled
|| __TEXT.__text _MRAVRoutingDiscoverySessionDevicePresenceDetected
|| __TEXT.__text _MRAVRoutingDiscoverySessionGetDiscoveryMode
|| __TEXT.__text _MRAVRoutingDiscoverySessionGetEndpointFeatures
|| __TEXT.__text _MRAVRoutingDiscoverySessionGetTargetAudioSessionID
|| __TEXT.__text _MRAVRoutingDiscoverySessionHasAvailableEndpoints
|| __TEXT.__text _MRAVRoutingDiscoverySessionRemoveEndpointsChangedCallback
|| __TEXT.__text _MRAVRoutingDiscoverySessionRemoveOutputDevicesChangedCallback
|| __TEXT.__text _MRAVRoutingDiscoverySessionSetAlwaysAllowUpdates
|| __TEXT.__text _MRAVRoutingDiscoverySessionSetDiscoveryMode
|| __TEXT.__text _MRAVRoutingDiscoverySessionSetRoutingContextUID
|| __TEXT.__text _MRAVRoutingDiscoverySessionSetTargetAudioSessionID
|| __TEXT.__text _MRAddApplicationActivityToXPCMessage
|| __TEXT.__text _MRAddArrayToXPCMessage
|| __TEXT.__text _MRAddClientErrorToXPCMessage
|| __TEXT.__text _MRAddClientToXPCMessage
|| __TEXT.__text _MRAddContentItemsToUserInfo
|| __TEXT.__text _MRAddContentItemsToXPCMessage
|| __TEXT.__text _MRAddDataToXPCMessage
|| __TEXT.__text _MRAddDeviceInfoToUserInfo
|| __TEXT.__text _MRAddDeviceInfoToXPCMessage
|| __TEXT.__text _MRAddDiagnosticToXPCMessage
|| __TEXT.__text _MRAddDistantEndpointToXPCMessage
|| __TEXT.__text _MRAddErrorToXPCMessage
|| __TEXT.__text _MRAddNowPlayingStateToXPCMessage
|| __TEXT.__text _MRAddOriginToXPCMessage
|| __TEXT.__text _MRAddOriginsToXPCMessage
|| __TEXT.__text _MRAddPlaybackQueueCapabilitiesToXPCMessage
|| __TEXT.__text _MRAddPlaybackQueueRequestToXPCMessage
|| __TEXT.__text _MRAddPlaybackQueueToXPCMessage
|| __TEXT.__text _MRAddPlaybackSessionToXPCMessage
|| __TEXT.__text _MRAddPlayerPathToUserInfo
|| __TEXT.__text _MRAddPlayerPathToXPCMessage
|| __TEXT.__text _MRAddPlayerToXPCMessage
|| __TEXT.__text _MRAddPropertyListToXPCMessage
|| __TEXT.__text _MRAddProtobufToXPCMessage
|| __TEXT.__text _MRAddSendCommandToXPCMessage
|| __TEXT.__text _MRAddStringToXPCMessage
|| __TEXT.__text _MRAddSupportedCommandsDataToXPCMessage
|| __TEXT.__text _MRAddSupportedCommandsToXPCMessage
|| __TEXT.__text _MRAddTransactionComingToXPCMessage
|| __TEXT.__text _MRAddVideoThumbnailRequestToXPCMessage
|| __TEXT.__text _MRAddVideoThumbnailsToXPCMessage
|| __TEXT.__text _MRApplicationActivityBegin
|| __TEXT.__text _MRApplicationActivityCopyPrimaryAppDisplayID
|| __TEXT.__text _MRApplicationActivityCopySecondaryAppDisplayID
|| __TEXT.__text _MRApplicationActivityCopyUniqueIdentifier
|| __TEXT.__text _MRApplicationActivityCreate
|| __TEXT.__text _MRApplicationActivityEnd
|| __TEXT.__text _MRApplicationActivityGetCreatorProcessID
|| __TEXT.__text _MRApplicationActivityGetCurrentActivity
|| __TEXT.__text _MRApplicationActivityGetStatus
|| __TEXT.__text _MRApplicationActivitySetShouldPrepareAppPlaybackQueue
|| __TEXT.__text _MRApplicationActivityShouldPrepareAppPlaybackQueue
|| __TEXT.__text _MRApplicationActivityStatusCopyDescription
|| __TEXT.__text _MRArrayCopySingleLineDescription
|| __TEXT.__text _MRAudioBufferCreate
|| __TEXT.__text _MRAudioBufferGetFormatSettings
|| __TEXT.__text _MRAudioBufferGetMutableContentsPtr
|| __TEXT.__text _MRAudioBufferGetMutablePacketDescriptionsArrayPtr
|| __TEXT.__text _MRAudioBufferGetPacketCapacity
|| __TEXT.__text _MRAudioBufferGetPacketCount
|| __TEXT.__text _MRAudioBufferSetPacketCount
|| __TEXT.__text _MRAudioDataBlockCreate
|| __TEXT.__text _MRAudioDataBlockCreateExternalRepresentation
|| __TEXT.__text _MRAudioDataBlockCreateFromExternalRepresentation
|| __TEXT.__text _MRAudioDataBlockGetBuffer
|| __TEXT.__text _MRAudioDataBlockGetGain
|| __TEXT.__text _MRAudioDataBlockGetTimestamp
|| __TEXT.__text _MRAudioDataBlockSetBuffer
|| __TEXT.__text _MRAudioDataBlockSetGain
|| __TEXT.__text _MRAudioDataBlockSetTimestamp
|| __TEXT.__text _MRBroadcastCommandResponseGetBundleIdentifier
|| __TEXT.__text _MRBroadcastCommandResponseGetPID
|| __TEXT.__text _MRBundleIdentifierForProcessID
|| __TEXT.__text _MRCFErrorCreateExternalRepresentation
|| __TEXT.__text _MRClassSwizzleMethod
|| __TEXT.__text _MRColorCopyDescription
|| __TEXT.__text _MRColorFromXPCMessage
|| __TEXT.__text _MRColorIsEqual
|| __TEXT.__text _MRColorIsNull
|| __TEXT.__text _MRConnectionStateFromProtobuf
|| __TEXT.__text _MRContentItemArtworkSatisfiesRequest
|| __TEXT.__text _MRContentItemCalculatedPlaybackPositionIsEqual
|| __TEXT.__text _MRContentItemCopy
|| __TEXT.__text _MRContentItemCopyAlbumYear
|| __TEXT.__text _MRContentItemCopyAppMetrics
|| __TEXT.__text _MRContentItemCopyAuxiliaryNowPlayingInfo
|| __TEXT.__text _MRContentItemCopyCollectionInfo
|| __TEXT.__text _MRContentItemCopyDeviceSpecificUserInfo
|| __TEXT.__text _MRContentItemCopyExtractedIdentifierFromNowPlayingInfo
|| __TEXT.__text _MRContentItemCopyMinimalReadableDescription
|| __TEXT.__text _MRContentItemCopyNowPlayingInfo
|| __TEXT.__text _MRContentItemCopyReadableDescription
|| __TEXT.__text _MRContentItemCopyUserInfo
|| __TEXT.__text _MRContentItemCopyWithIdentifier
|| __TEXT.__text _MRContentItemCreate
|| __TEXT.__text _MRContentItemCreateExternalRepresentation
|| __TEXT.__text _MRContentItemCreateFromExternalRepresentation
|| __TEXT.__text _MRContentItemCreateFromNowPlayingInfo
|| __TEXT.__text _MRContentItemCreateFromRequest
|| __TEXT.__text _MRContentItemCreateMergedItem
|| __TEXT.__text _MRContentItemCreateSkeletonFrom
|| __TEXT.__text _MRContentItemEqualToItem
|| __TEXT.__text _MRContentItemGetAlbumArtistName
|| __TEXT.__text _MRContentItemGetAlbumName
|| __TEXT.__text _MRContentItemGetAncestorIdentifier
|| __TEXT.__text _MRContentItemGetAppMetrics
|| __TEXT.__text _MRContentItemGetArtworkData
|| __TEXT.__text _MRContentItemGetArtworkDataHeight
|| __TEXT.__text _MRContentItemGetArtworkDataWidth
|| __TEXT.__text _MRContentItemGetArtworkIdentifier
|| __TEXT.__text _MRContentItemGetArtworkMIMEType
|| __TEXT.__text _MRContentItemGetArtworkURL
|| __TEXT.__text _MRContentItemGetArtworkURLTemplates
|| __TEXT.__text _MRContentItemGetAssetURL
|| __TEXT.__text _MRContentItemGetAvailableLanguageOptions
|| __TEXT.__text _MRContentItemGetBrandIdentifier
|| __TEXT.__text _MRContentItemGetCalculatedPlaybackPosition
|| __TEXT.__text _MRContentItemGetCollectionIdentifier
|| __TEXT.__text _MRContentItemGetCollectionInfo
|| __TEXT.__text _MRContentItemGetComposer
|| __TEXT.__text _MRContentItemGetContentIdentifier
|| __TEXT.__text _MRContentItemGetCurrentLanguageOptions
|| __TEXT.__text _MRContentItemGetCurrentPlaybackDate
|| __TEXT.__text _MRContentItemGetDefaultPlaybackRate
|| __TEXT.__text _MRContentItemGetDeviceSpecificUserInfo
|| __TEXT.__text _MRContentItemGetDirectorName
|| __TEXT.__text _MRContentItemGetDiscNumber
|| __TEXT.__text _MRContentItemGetDownloadProgress
|| __TEXT.__text _MRContentItemGetDownloadState
|| __TEXT.__text _MRContentItemGetDuration
|| __TEXT.__text _MRContentItemGetEditingStyleFlags
|| __TEXT.__text _MRContentItemGetElapsedTime
|| __TEXT.__text _MRContentItemGetElapsedTimeTimestamp
|| __TEXT.__text _MRContentItemGetEpisodeNumber
|| __TEXT.__text _MRContentItemGetEpisodeType
|| __TEXT.__text _MRContentItemGetGenre
|| __TEXT.__text _MRContentItemGetHasArtworkData
|| __TEXT.__text _MRContentItemGetHasDuration
|| __TEXT.__text _MRContentItemGetHasElapsedTime
|| __TEXT.__text _MRContentItemGetHasInfo
|| __TEXT.__text _MRContentItemGetHasLanguageOptions
|| __TEXT.__text _MRContentItemGetHasLyrics
|| __TEXT.__text _MRContentItemGetHasMetadata
|| __TEXT.__text _MRContentItemGetITunesStoreAlbumIdentifier
|| __TEXT.__text _MRContentItemGetITunesStoreArtistIdentifier
|| __TEXT.__text _MRContentItemGetITunesStoreIdentifier
|| __TEXT.__text _MRContentItemGetITunesStoreSubscriptionIdentifier
|| __TEXT.__text _MRContentItemGetIdentifier
|| __TEXT.__text _MRContentItemGetInferredTimestamp
|| __TEXT.__text _MRContentItemGetInfo
|| __TEXT.__text _MRContentItemGetIsAlwaysLive
|| __TEXT.__text _MRContentItemGetIsContainer
|| __TEXT.__text _MRContentItemGetIsCurrentlyPlaying
|| __TEXT.__text _MRContentItemGetIsExplicitItem
|| __TEXT.__text _MRContentItemGetIsInWishList
|| __TEXT.__text _MRContentItemGetIsLiked
|| __TEXT.__text _MRContentItemGetIsLoading
|| __TEXT.__text _MRContentItemGetIsPlayable
|| __TEXT.__text _MRContentItemGetIsSharable
|| __TEXT.__text _MRContentItemGetIsSteerable
|| __TEXT.__text _MRContentItemGetIsStreamingContent
|| __TEXT.__text _MRContentItemGetLegacyUniqueIdentifier
|| __TEXT.__text _MRContentItemGetLocalizedContentRating
|| __TEXT.__text _MRContentItemGetLocalizedDurationString
|| __TEXT.__text _MRContentItemGetLyrics
|| __TEXT.__text _MRContentItemGetLyricsURL
|| __TEXT.__text _MRContentItemGetMediaSubType
|| __TEXT.__text _MRContentItemGetMediaType
|| __TEXT.__text _MRContentItemGetNowPlayingInfo
|| __TEXT.__text _MRContentItemGetNumberOfSections
|| __TEXT.__text _MRContentItemGetParentIdentifier
|| __TEXT.__text _MRContentItemGetPlayCount
|| __TEXT.__text _MRContentItemGetPlaybackProgress
|| __TEXT.__text _MRContentItemGetPlaybackRate
|| __TEXT.__text _MRContentItemGetPlaylistType
|| __TEXT.__text _MRContentItemGetProfileIdentifier
|| __TEXT.__text _MRContentItemGetPurchaseInfoData
|| __TEXT.__text _MRContentItemGetRadioStationIdentifier
|| __TEXT.__text _MRContentItemGetRadioStationName
|| __TEXT.__text _MRContentItemGetRadioStationString
|| __TEXT.__text _MRContentItemGetRadioStationType
|| __TEXT.__text _MRContentItemGetReleaseDate
|| __TEXT.__text _MRContentItemGetRequestIdentifier
|| __TEXT.__text _MRContentItemGetSeasonNumber
|| __TEXT.__text _MRContentItemGetSections
|| __TEXT.__text _MRContentItemGetSeriesName
|| __TEXT.__text _MRContentItemGetServiceIdentifier
|| __TEXT.__text _MRContentItemGetStartTime
|| __TEXT.__text _MRContentItemGetSubtitle
|| __TEXT.__text _MRContentItemGetTitle
|| __TEXT.__text _MRContentItemGetTotalDiscCount
|| __TEXT.__text _MRContentItemGetTotalTrackCount
|| __TEXT.__text _MRContentItemGetTrackArtistName
|| __TEXT.__text _MRContentItemGetTrackNumber
|| __TEXT.__text _MRContentItemGetUserInfo
|| __TEXT.__text _MRContentItemHasPlaybackRate
|| __TEXT.__text _MRContentItemIdentifierIsEqual
|| __TEXT.__text _MRContentItemIsEmpty
|| __TEXT.__text _MRContentItemMerge
|| __TEXT.__text _MRContentItemSetAlbumArtistName
|| __TEXT.__text _MRContentItemSetAlbumName
|| __TEXT.__text _MRContentItemSetAlbumYear
|| __TEXT.__text _MRContentItemSetAncestorIdentifier
|| __TEXT.__text _MRContentItemSetAppMetrics
|| __TEXT.__text _MRContentItemSetArtworkData
|| __TEXT.__text _MRContentItemSetArtworkDataSize
|| __TEXT.__text _MRContentItemSetArtworkFileURL
|| __TEXT.__text _MRContentItemSetArtworkIdentifier
|| __TEXT.__text _MRContentItemSetArtworkMIMEType
|| __TEXT.__text _MRContentItemSetArtworkURL
|| __TEXT.__text _MRContentItemSetArtworkURLTemplates
|| __TEXT.__text _MRContentItemSetAssetURL
|| __TEXT.__text _MRContentItemSetAvailableLanguageOptions
|| __TEXT.__text _MRContentItemSetBrandIdentifier
|| __TEXT.__text _MRContentItemSetCollectionIdentifier
|| __TEXT.__text _MRContentItemSetCollectionInfo
|| __TEXT.__text _MRContentItemSetComposer
|| __TEXT.__text _MRContentItemSetContentIdentifier
|| __TEXT.__text _MRContentItemSetCurrentLanguageOptions
|| __TEXT.__text _MRContentItemSetCurrentPlaybackDate
|| __TEXT.__text _MRContentItemSetDefaultPlaybackRate
|| __TEXT.__text _MRContentItemSetDeviceSpecificUserInfo
|| __TEXT.__text _MRContentItemSetDirectorName
|| __TEXT.__text _MRContentItemSetDiscNumber
|| __TEXT.__text _MRContentItemSetDownloadProgress
|| __TEXT.__text _MRContentItemSetDownloadState
|| __TEXT.__text _MRContentItemSetDuration
|| __TEXT.__text _MRContentItemSetEditingStyleFlags
|| __TEXT.__text _MRContentItemSetElapsedTime
|| __TEXT.__text _MRContentItemSetElapsedTimeTimestamp
|| __TEXT.__text _MRContentItemSetEpisodeNumber
|| __TEXT.__text _MRContentItemSetEpisodeType
|| __TEXT.__text _MRContentItemSetExplicitItem
|| __TEXT.__text _MRContentItemSetGenre
|| __TEXT.__text _MRContentItemSetHasArtworkData
|| __TEXT.__text _MRContentItemSetHasInfo
|| __TEXT.__text _MRContentItemSetHasLanguageOptions
|| __TEXT.__text _MRContentItemSetHasLyrics
|| __TEXT.__text _MRContentItemSetITunesStoreAlbumIdentifier
|| __TEXT.__text _MRContentItemSetITunesStoreArtistIdentifier
|| __TEXT.__text _MRContentItemSetITunesStoreIdentifier
|| __TEXT.__text _MRContentItemSetITunesStoreSubscriptionIdentifier
|| __TEXT.__text _MRContentItemSetInferredTimestamp
|| __TEXT.__text _MRContentItemSetInfo
|| __TEXT.__text _MRContentItemSetIsAlwaysLive
|| __TEXT.__text _MRContentItemSetIsContainer
|| __TEXT.__text _MRContentItemSetIsCurrentlyPlaying
|| __TEXT.__text _MRContentItemSetIsInWishList
|| __TEXT.__text _MRContentItemSetIsLiked
|| __TEXT.__text _MRContentItemSetIsLoading
|| __TEXT.__text _MRContentItemSetIsSharable
|| __TEXT.__text _MRContentItemSetIsSteerable
|| __TEXT.__text _MRContentItemSetIsStreamingContent
|| __TEXT.__text _MRContentItemSetLegacyUniqueIdentifier
|| __TEXT.__text _MRContentItemSetLocalizedContentRating
|| __TEXT.__text _MRContentItemSetLocalizedDurationString
|| __TEXT.__text _MRContentItemSetLyrics
|| __TEXT.__text _MRContentItemSetLyricsURL
|| __TEXT.__text _MRContentItemSetMediaSubType
|| __TEXT.__text _MRContentItemSetMediaType
|| __TEXT.__text _MRContentItemSetNowPlayingInfo
|| __TEXT.__text _MRContentItemSetNumberOfSections
|| __TEXT.__text _MRContentItemSetParentIdentifier
|| __TEXT.__text _MRContentItemSetPlayCount
|| __TEXT.__text _MRContentItemSetPlayable
|| __TEXT.__text _MRContentItemSetPlaybackProgress
|| __TEXT.__text _MRContentItemSetPlaybackRate
|| __TEXT.__text _MRContentItemSetPlaylistType
|| __TEXT.__text _MRContentItemSetProfileIdentifier
|| __TEXT.__text _MRContentItemSetPurchaseInfoData
|| __TEXT.__text _MRContentItemSetRadioStationIdentifier
|| __TEXT.__text _MRContentItemSetRadioStationName
|| __TEXT.__text _MRContentItemSetRadioStationString
|| __TEXT.__text _MRContentItemSetRadioStationType
|| __TEXT.__text _MRContentItemSetReleaseDate
|| __TEXT.__text _MRContentItemSetRequestIdentifier
|| __TEXT.__text _MRContentItemSetSeasonNumber
|| __TEXT.__text _MRContentItemSetSections
|| __TEXT.__text _MRContentItemSetSeriesName
|| __TEXT.__text _MRContentItemSetServiceIdentifier
|| __TEXT.__text _MRContentItemSetStartTime
|| __TEXT.__text _MRContentItemSetSubtitle
|| __TEXT.__text _MRContentItemSetTitle
|| __TEXT.__text _MRContentItemSetTotalDiscCount
|| __TEXT.__text _MRContentItemSetTotalTrackCount
|| __TEXT.__text _MRContentItemSetTrackArtistName
|| __TEXT.__text _MRContentItemSetTrackNumber
|| __TEXT.__text _MRContentItemSetUserInfo
|| __TEXT.__text _MRContentItemsCopyIdentifiers
|| __TEXT.__text _MRContentItemsCopyMinimalReadableDescription
|| __TEXT.__text _MRContentItemsCopyReadableDescription
|| __TEXT.__text _MRContentItemsCreateExternalRepresentation
|| __TEXT.__text _MRContentItemsCreateFromExternalRepresentation
|| __TEXT.__text _MRContentItemsCreateFromRequest
|| __TEXT.__text _MRContentItemsCreateShallowCopy
|| __TEXT.__text _MRCopyDeviceInfoPath
|| __TEXT.__text _MRCopyMediaRemoteLibraryDirectory
|| __TEXT.__text _MRCopyRegisteredTransactionDescriptions
|| __TEXT.__text _MRCreateASCIIRepresentationFromImageData
|| __TEXT.__text _MRCreateAppActivityFromXPCMessage
|| __TEXT.__text _MRCreateArrayFomXPCMessage
|| __TEXT.__text _MRCreateArrayFromData
|| __TEXT.__text _MRCreateClientArrayFromXPCMessage
|| __TEXT.__text _MRCreateClientErrorFromExternalRepresentation
|| __TEXT.__text _MRCreateClientErrorFromXPCMessage
|| __TEXT.__text _MRCreateClientFromXPCMessage
|| __TEXT.__text _MRCreateContentItemsFromXPCMessage
|| __TEXT.__text _MRCreateCryptoError
|| __TEXT.__text _MRCreateDataFromArray
|| __TEXT.__text _MRCreateDataFromObject
|| __TEXT.__text _MRCreateDataFromXPCMessage
|| __TEXT.__text _MRCreateDecodedUserInfo
|| __TEXT.__text _MRCreateDeviceInfoFromXPCMessage
|| __TEXT.__text _MRCreateDiagnosticFromXPCMessage
|| __TEXT.__text _MRCreateDistantEndpointFromXPCMessage
|| __TEXT.__text _MRCreateDonatedQosBlock
|| __TEXT.__text _MRCreateDurationStringRepresentation
|| __TEXT.__text _MRCreateEncodedUserInfo
|| __TEXT.__text _MRCreateFormattedDebugDescriptionFromClass
|| __TEXT.__text _MRCreateFromData
|| __TEXT.__text _MRCreateIndentedDebugDescriptionFromArray
|| __TEXT.__text _MRCreateIndentedDebugDescriptionFromObject
|| __TEXT.__text _MRCreateMediaRemoteCommandInfoFromProtobuf
|| __TEXT.__text _MRCreateNowPlayingInfoFromProtobuf
|| __TEXT.__text _MRCreateNowPlayingStateFromXPCMessage
|| __TEXT.__text _MRCreateOriginArrayFromXPCMessage
|| __TEXT.__text _MRCreateOriginFromXPCMessage
|| __TEXT.__text _MRCreatePlaybackQueueCapabilitiesFromXPCMessage
|| __TEXT.__text _MRCreatePlaybackQueueFromXPCMessage
|| __TEXT.__text _MRCreatePlaybackQueueRequestFromXPCMessage
|| __TEXT.__text _MRCreatePlaybackSessionFromXPCMessage
|| __TEXT.__text _MRCreatePlayerArrayFromXPCMessage
|| __TEXT.__text _MRCreatePlayerFromXPCMessage
|| __TEXT.__text _MRCreatePlayerPathFromXPCMessage
|| __TEXT.__text _MRCreatePropertyListFromXPCMessage
|| __TEXT.__text _MRCreateProtobufFromMediaRemoteCommandInfo
|| __TEXT.__text _MRCreateProtobufFromNowPlayingInfo
|| __TEXT.__text _MRCreateProtobufFromSupportedCommands
|| __TEXT.__text _MRCreateProtobufFromXPCMessage
|| __TEXT.__text _MRCreateStringFromXPCMessage
|| __TEXT.__text _MRCreateSupportedCommandsDataFromXPCMessage
|| __TEXT.__text _MRCreateSupportedCommandsFromProtobuf
|| __TEXT.__text _MRCreateSupportedCommandsFromXPCMessage
|| __TEXT.__text _MRCreateUserInfoFromXPCMessage
|| __TEXT.__text _MRCreateVideoThumbnailsFromXPCMessage
|| __TEXT.__text _MRCreateWhitelistedNowPlayingInfo
|| __TEXT.__text _MRCreateXPCMessage
|| __TEXT.__text _MRDataCreateStringRepresentation
|| __TEXT.__text _MRDeviceSupportsExternalTouchBarUI
|| __TEXT.__text _MRDiagnosticCopyDateCreated
|| __TEXT.__text _MRDiagnosticCopyInfo
|| __TEXT.__text _MRDiagnosticCreate
|| __TEXT.__text _MRDiagnosticCreateExternalRepresentation
|| __TEXT.__text _MRDiagnosticCreateFromExternalRepresentation
|| __TEXT.__text _MRDictionaryCalculateDeltas
|| __TEXT.__text _MRErrorCopyDescription
|| __TEXT.__text _MRErrorFromXPCMessage
|| __TEXT.__text _MRExternalDeviceConnect
|| __TEXT.__text _MRExternalDeviceConnectEx
|| __TEXT.__text _MRExternalDeviceConnectOptionsCopyDescription
|| __TEXT.__text _MRExternalDeviceConnectionStateCopyDescription
|| __TEXT.__text _MRExternalDeviceCopyCustomOrigin
|| __TEXT.__text _MRExternalDeviceCopyDeviceInfo
|| __TEXT.__text _MRExternalDeviceCopyHostName
|| __TEXT.__text _MRExternalDeviceCopyName
|| __TEXT.__text _MRExternalDeviceCopySystemBuildVersion
|| __TEXT.__text _MRExternalDeviceCopyUniqueIdentifier
|| __TEXT.__text _MRExternalDeviceDeletePairedDevice
|| __TEXT.__text _MRExternalDeviceDisconnect
|| __TEXT.__text _MRExternalDeviceGetConnectionState
|| __TEXT.__text _MRExternalDeviceGetNetworkPort
|| __TEXT.__text _MRExternalDeviceGetOutputDeviceUIDVolume
|| __TEXT.__text _MRExternalDeviceGetOutputDeviceVolume
|| __TEXT.__text _MRExternalDeviceGetPairedDevices
|| __TEXT.__text _MRExternalDeviceGetVolume
|| __TEXT.__text _MRExternalDeviceIsConnected
|| __TEXT.__text _MRExternalDeviceIsPaired
|| __TEXT.__text _MRExternalDeviceIsPairingAllowed
|| __TEXT.__text _MRExternalDeviceIsValid
|| __TEXT.__text _MRExternalDevicePing
|| __TEXT.__text _MRExternalDeviceRequestOutputContextModification
|| __TEXT.__text _MRExternalDeviceSendButtonEvent
|| __TEXT.__text _MRExternalDeviceSendCustomData
|| __TEXT.__text _MRExternalDeviceSetConnectionStateCallback
|| __TEXT.__text _MRExternalDeviceSetCustomDataCallback
|| __TEXT.__text _MRExternalDeviceSetName
|| __TEXT.__text _MRExternalDeviceSetNameCallback
|| __TEXT.__text _MRExternalDeviceSetOutputDeviceUIDVolume
|| __TEXT.__text _MRExternalDeviceSetOutputDeviceVolume
|| __TEXT.__text _MRExternalDeviceSetPairingAllowedCallback
|| __TEXT.__text _MRExternalDeviceSetPairingCallback
|| __TEXT.__text _MRExternalDeviceSetVolume
|| __TEXT.__text _MRExternalDeviceSetVolumeChangedCallback
|| __TEXT.__text _MRExternalDeviceSetWantsNowPlayingArtworkUpdates
|| __TEXT.__text _MRExternalDeviceSetWantsNowPlayingUpdates
|| __TEXT.__text _MRExternalDeviceSetWantsOutputDeviceUpdates
|| __TEXT.__text _MRExternalDeviceSetWantsVolumeUpdates
|| __TEXT.__text _MRExternalDeviceUnpair
|| __TEXT.__text _MRGameControllerAccelerationCopy
|| __TEXT.__text _MRGameControllerAccelerationCopyF
|| __TEXT.__text _MRGameControllerAccelerationCreate
|| __TEXT.__text _MRGameControllerAccelerationCreate4
|| __TEXT.__text _MRGameControllerAccelerationCreate4F
|| __TEXT.__text _MRGameControllerAccelerationCreateDescription
|| __TEXT.__text _MRGameControllerAccelerationCreateF
|| __TEXT.__text _MRGameControllerAccelerationCreateWithLegacyAcceleration
|| __TEXT.__text _MRGameControllerAccelerationGetW
|| __TEXT.__text _MRGameControllerAccelerationGetX
|| __TEXT.__text _MRGameControllerAccelerationGetY
|| __TEXT.__text _MRGameControllerAccelerationGetZ
|| __TEXT.__text _MRGameControllerAccelerationMake
|| __TEXT.__text _MRGameControllerButtonsCreate
|| __TEXT.__text _MRGameControllerButtonsCreateDescription
|| __TEXT.__text _MRGameControllerButtonsCreateWithLegacyButtons
|| __TEXT.__text _MRGameControllerButtonsExtendedCreateDescription
|| __TEXT.__text _MRGameControllerButtonsExtendedMake
|| __TEXT.__text _MRGameControllerButtonsGetA
|| __TEXT.__text _MRGameControllerButtonsGetB
|| __TEXT.__text _MRGameControllerButtonsGetDPadX
|| __TEXT.__text _MRGameControllerButtonsGetDPadY
|| __TEXT.__text _MRGameControllerButtonsGetLeftShoulder
|| __TEXT.__text _MRGameControllerButtonsGetLeftThumbstickX
|| __TEXT.__text _MRGameControllerButtonsGetLeftThumbstickY
|| __TEXT.__text _MRGameControllerButtonsGetLeftTrigger
|| __TEXT.__text _MRGameControllerButtonsGetPause
|| __TEXT.__text _MRGameControllerButtonsGetRightShoulder
|| __TEXT.__text _MRGameControllerButtonsGetRightThumbstickX
|| __TEXT.__text _MRGameControllerButtonsGetRightThumbstickY
|| __TEXT.__text _MRGameControllerButtonsGetRightTrigger
|| __TEXT.__text _MRGameControllerButtonsGetX
|| __TEXT.__text _MRGameControllerButtonsGetY
|| __TEXT.__text _MRGameControllerButtonsMake
|| __TEXT.__text _MRGameControllerButtonsSetA
|| __TEXT.__text _MRGameControllerButtonsSetB
|| __TEXT.__text _MRGameControllerButtonsSetDPadX
|| __TEXT.__text _MRGameControllerButtonsSetDPadY
|| __TEXT.__text _MRGameControllerButtonsSetLeftShoulder
|| __TEXT.__text _MRGameControllerButtonsSetLeftThumbstickX
|| __TEXT.__text _MRGameControllerButtonsSetLeftThumbstickY
|| __TEXT.__text _MRGameControllerButtonsSetLeftTrigger
|| __TEXT.__text _MRGameControllerButtonsSetPause
|| __TEXT.__text _MRGameControllerButtonsSetRightShoulder
|| __TEXT.__text _MRGameControllerButtonsSetRightThumbstickX
|| __TEXT.__text _MRGameControllerButtonsSetRightThumbstickY
|| __TEXT.__text _MRGameControllerButtonsSetRightTrigger
|| __TEXT.__text _MRGameControllerButtonsSetX
|| __TEXT.__text _MRGameControllerButtonsSetY
|| __TEXT.__text _MRGameControllerDigitizerCreate
|| __TEXT.__text _MRGameControllerDigitizerCreateDescription
|| __TEXT.__text _MRGameControllerDigitizerCreateWithHIDTouchEvent
|| __TEXT.__text _MRGameControllerDigitizerCreateWithLegacyDigitizer
|| __TEXT.__text _MRGameControllerDigitizerGetTimestamp
|| __TEXT.__text _MRGameControllerDigitizerGetTouchDown
|| __TEXT.__text _MRGameControllerDigitizerGetX
|| __TEXT.__text _MRGameControllerDigitizerGetY
|| __TEXT.__text _MRGameControllerDigitizerMake
|| __TEXT.__text _MRGameControllerDigitizerSetTimestamp
|| __TEXT.__text _MRGameControllerDigitizerSetTouchDown
|| __TEXT.__text _MRGameControllerDigitizerSetX
|| __TEXT.__text _MRGameControllerDigitizerSetY
|| __TEXT.__text _MRGameControllerEventCreateDescription
|| __TEXT.__text _MRGameControllerEventCreateWithButtons
|| __TEXT.__text _MRGameControllerEventCreateWithDigitizer
|| __TEXT.__text _MRGameControllerEventCreateWithLegacyEvent
|| __TEXT.__text _MRGameControllerEventCreateWithMotion
|| __TEXT.__text _MRGameControllerEventMake
|| __TEXT.__text _MRGameControllerEventTypeCreateDescription
|| __TEXT.__text _MRGameControllerInputModeCreateDescription
|| __TEXT.__text _MRGameControllerInputModeFromProtobuf
|| __TEXT.__text _MRGameControllerMotionCopy
|| __TEXT.__text _MRGameControllerMotionCopyF
|| __TEXT.__text _MRGameControllerMotionCreate
|| __TEXT.__text _MRGameControllerMotionCreateDescription
|| __TEXT.__text _MRGameControllerMotionCreateWithLegacyMotion
|| __TEXT.__text _MRGameControllerMotionGetAttitude
|| __TEXT.__text _MRGameControllerMotionGetGravity
|| __TEXT.__text _MRGameControllerMotionGetRotation
|| __TEXT.__text _MRGameControllerMotionGetUserAcceleration
|| __TEXT.__text _MRGameControllerMotionMake
|| __TEXT.__text _MRGameControllerMotionSetAttitude
|| __TEXT.__text _MRGameControllerMotionSetGravity
|| __TEXT.__text _MRGameControllerMotionSetRotation
|| __TEXT.__text _MRGameControllerMotionSetUserAcceleration
|| __TEXT.__text _MRGameControllerPlayerIndexCreateDescription
|| __TEXT.__text _MRGameControllerProfileFromProtobuf
|| __TEXT.__text _MRGameControllerPropertiesCopyVendorName
|| __TEXT.__text _MRGameControllerPropertiesCreate
|| __TEXT.__text _MRGameControllerPropertiesGetButtonAUpDelay
|| __TEXT.__text _MRGameControllerPropertiesGetPlayerIndex
|| __TEXT.__text _MRGameControllerPropertiesGetProfile
|| __TEXT.__text _MRGameControllerPropertiesGetSupportsExtendedMotion
|| __TEXT.__text _MRGameControllerPropertiesSetButtonAUpDelay
|| __TEXT.__text _MRGameControllerPropertiesSetPlayerIndex
|| __TEXT.__text _MRGameControllerPropertiesSetProfile
|| __TEXT.__text _MRGameControllerPropertiesSetSupportsExtendedMotion
|| __TEXT.__text _MRGameControllerPropertiesSetVendorName
|| __TEXT.__text _MRGameControllerServerGetRemoteInputMode
|| __TEXT.__text _MRGameControllerServerSetRemoteInputMode
|| __TEXT.__text _MRGetClientFromUserInfo
|| __TEXT.__text _MRGetContentItemsFromUserInfo
|| __TEXT.__text _MRGetDeviceInfoFromUserInfo
|| __TEXT.__text _MRGetDiscoveryDebugEnabled
|| __TEXT.__text _MRGetOriginFromUserInfo
|| __TEXT.__text _MRGetPlayerFromUserInfo
|| __TEXT.__text _MRGetPlayerPathFromUserInfo
|| __TEXT.__text _MRGetSharedService
|| __TEXT.__text _MRGetTransactionComingFromXPCMessage
|| __TEXT.__text _MRHIDButtonEventCopyDescription
|| __TEXT.__text _MRHIDTouchEventCopyDescription
|| __TEXT.__text _MRHIDTouchPhaseCopyDescription
|| __TEXT.__text _MRIsObjectOfClass
|| __TEXT.__text _MRLanguageOptionCopyCharacteristics
|| __TEXT.__text _MRLanguageOptionCopyDisplayName
|| __TEXT.__text _MRLanguageOptionCopyIdentifier
|| __TEXT.__text _MRLanguageOptionCopyLanguageTag
|| __TEXT.__text _MRLanguageOptionCreate
|| __TEXT.__text _MRLanguageOptionCreateAutomaticLanguageOptionForType
|| __TEXT.__text _MRLanguageOptionCreateExternalRepresentation
|| __TEXT.__text _MRLanguageOptionCreateFromExternalRepresentation
|| __TEXT.__text _MRLanguageOptionGetType
|| __TEXT.__text _MRLanguageOptionGroupCopyLanguageOptions
|| __TEXT.__text _MRLanguageOptionGroupCreate
|| __TEXT.__text _MRLanguageOptionGroupCreateExternalRepresentation
|| __TEXT.__text _MRLanguageOptionGroupCreateFromExternalRepresentation
|| __TEXT.__text _MRLanguageOptionGroupGetAllowEmptySelection
|| __TEXT.__text _MRLanguageOptionGroupGetDefaultLanguageOption
|| __TEXT.__text _MRLanguageOptionGroupsCreateExternalRepresentation
|| __TEXT.__text _MRLanguageOptionGroupsCreateFromExternalRepresentation
|| __TEXT.__text _MRLanguageOptionIsAutomaticLanguageOptionForType
|| __TEXT.__text _MRLanguageOptionIsEqualToLanguageOption
|| __TEXT.__text _MRLanguageOptionTypeCopyDescription
|| __TEXT.__text _MRLanguageOptionsCreateExternalRepresentation
|| __TEXT.__text _MRLanguageOptionsCreateFromExternalRepresentation
|| __TEXT.__text _MRLocalizedString
|| __TEXT.__text _MRLogCategoryConnections
|| __TEXT.__text _MRLogCategoryDiscovery
|| __TEXT.__text _MRLyricsEventCreateBegin
|| __TEXT.__text _MRLyricsEventCreateEnd
|| __TEXT.__text _MRLyricsEventCreateExternalRepresentation
|| __TEXT.__text _MRLyricsEventCreateFromExternalRepresentation
|| __TEXT.__text _MRLyricsEventGetEndDate
|| __TEXT.__text _MRLyricsEventGetStartDate
|| __TEXT.__text _MRLyricsEventGetToken
|| __TEXT.__text _MRLyricsItemCreate
|| __TEXT.__text _MRLyricsItemGetLyrics
|| __TEXT.__text _MRLyricsItemGetToken
|| __TEXT.__text _MRLyricsItemIsUserProvided
|| __TEXT.__text _MRLyricsItemTokenCreate
|| __TEXT.__text _MRLyricsItemTokenCreateExternalRepresentation
|| __TEXT.__text _MRLyricsItemTokenCreateFromExternalRepresentation
|| __TEXT.__text _MRLyricsItemTokenCreateWithData
|| __TEXT.__text _MRLyricsItemTokenGetIdentifier
|| __TEXT.__text _MRLyricsItemTokenGetUserInfo
|| __TEXT.__text _MRMediaRemoteActiveEndpointChangeTypeCopyDescription
|| __TEXT.__text _MRMediaRemoteActiveEndpointOperationCopyDescription
|| __TEXT.__text _MRMediaRemoteActiveEndpointTypeCopyDescription
|| __TEXT.__text _MRMediaRemoteAddAsyncCommandHandlerBlock
|| __TEXT.__text _MRMediaRemoteAddAsyncCommandHandlerBlockForOrigin
|| __TEXT.__text _MRMediaRemoteAddAsyncCommandHandlerBlockForPlayer
|| __TEXT.__text _MRMediaRemoteAddCommandHandlerBlock
|| __TEXT.__text _MRMediaRemoteAddCommandHandlerBlockForOrigin
|| __TEXT.__text _MRMediaRemoteAddCommandHandlerBlockForPlayer
|| __TEXT.__text _MRMediaRemoteAddPlayerPathInvalidationHandler
|| __TEXT.__text _MRMediaRemoteAdjustMediaPlaybackVolume
|| __TEXT.__text _MRMediaRemoteAgentNotifyCallChanged
|| __TEXT.__text _MRMediaRemoteAgentSetEndpoint
|| __TEXT.__text _MRMediaRemoteAirPlayReceiverCopyGroupIdentity
|| __TEXT.__text _MRMediaRemoteAirPlayReceiverCopyPairingIdentity
|| __TEXT.__text _MRMediaRemoteAirPlayReceiverGetIsGroupLeader
|| __TEXT.__text _MRMediaRemoteApplicationIsAirPlayReceiver
|| __TEXT.__text _MRMediaRemoteApplicationIsSystemApplication
|| __TEXT.__text _MRMediaRemoteApplicationIsSystemMediaApplication
|| __TEXT.__text _MRMediaRemoteApplicationIsSystemPodcastApplication
|| __TEXT.__text _MRMediaRemoteApplicationSupportsBrowsableContent
|| __TEXT.__text _MRMediaRemoteApplicationSupportsImmediatePlayback
|| __TEXT.__text _MRMediaRemoteApplicationSupportsSectionedBrowsing
|| __TEXT.__text _MRMediaRemoteBeginLoadingBrowsableContent
|| __TEXT.__text _MRMediaRemoteBroadcastCommand
|| __TEXT.__text _MRMediaRemoteBrowsableContentGetNowPlayingContentIdentifiers
|| __TEXT.__text _MRMediaRemoteBrowsableContentSupportsPlaybackProgress
|| __TEXT.__text _MRMediaRemoteBundle
|| __TEXT.__text _MRMediaRemoteClearAllAVRoutePasswords
|| __TEXT.__text _MRMediaRemoteCollectClientDiagnostics
|| __TEXT.__text _MRMediaRemoteCollectDiagnostic
|| __TEXT.__text _MRMediaRemoteCommandCreateDescription
|| __TEXT.__text _MRMediaRemoteCommandCreateExternalRepresentation
|| __TEXT.__text _MRMediaRemoteCommandFromExternalRepresentation
|| __TEXT.__text _MRMediaRemoteCommandFromProtobuf
|| __TEXT.__text _MRMediaRemoteCommandInfoCopyOptions
|| __TEXT.__text _MRMediaRemoteCommandInfoCopySupportedCommandsWithPredicate
|| __TEXT.__text _MRMediaRemoteCommandInfoCopyValueForKey
|| __TEXT.__text _MRMediaRemoteCommandInfoCreate
|| __TEXT.__text _MRMediaRemoteCommandInfoCreateExternalRepresentation
|| __TEXT.__text _MRMediaRemoteCommandInfoCreateFromExternalRepresentation
|| __TEXT.__text _MRMediaRemoteCommandInfoEnumerateSupportedCommandsWithHandler
|| __TEXT.__text _MRMediaRemoteCommandInfoGetBooleanValueForKey
|| __TEXT.__text _MRMediaRemoteCommandInfoGetCommand
|| __TEXT.__text _MRMediaRemoteCommandInfoGetEnabled
|| __TEXT.__text _MRMediaRemoteCommandInfoGetIntegerValueForKey
|| __TEXT.__text _MRMediaRemoteCommandInfoSetCommand
|| __TEXT.__text _MRMediaRemoteCommandInfoSetEnabled
|| __TEXT.__text _MRMediaRemoteCommandInfoSetOptions
|| __TEXT.__text _MRMediaRemoteCommandInfoSupportedCommandIsEnabled
|| __TEXT.__text _MRMediaRemoteCommandIsContextual
|| __TEXT.__text _MRMediaRemoteCommandIsLegacy
|| __TEXT.__text _MRMediaRemoteCommandIsNavigational
|| __TEXT.__text _MRMediaRemoteCommandOptionsFromProtobuf
|| __TEXT.__text _MRMediaRemoteCommandOptionsToProtobuf
|| __TEXT.__text _MRMediaRemoteCommandRequiresDestinationPositionOption
|| __TEXT.__text _MRMediaRemoteCommandRequiresOptions
|| __TEXT.__text _MRMediaRemoteCommandRequiresSourcePositionOption
|| __TEXT.__text _MRMediaRemoteCommandToProtobuf
|| __TEXT.__text _MRMediaRemoteCopyApplicationEntitlements
|| __TEXT.__text _MRMediaRemoteCopyBrowsableContentAPIMaskDescription
|| __TEXT.__text _MRMediaRemoteCopyCachedDeviceInfo
|| __TEXT.__text _MRMediaRemoteCopyClientVisibilityDescription
|| __TEXT.__text _MRMediaRemoteCopyCommandDescription
|| __TEXT.__text _MRMediaRemoteCopyCommandHandlerStatusDescription
|| __TEXT.__text _MRMediaRemoteCopyCommandHandlerStatusesDescription
|| __TEXT.__text _MRMediaRemoteCopyCommandsDescription
|| __TEXT.__text _MRMediaRemoteCopyDeviceInfo
|| __TEXT.__text _MRMediaRemoteCopyDeviceUID
|| __TEXT.__text _MRMediaRemoteCopyEntitlements
|| __TEXT.__text _MRMediaRemoteCopyGroupUID
|| __TEXT.__text _MRMediaRemoteCopyHardwareRemoteBehaviorDescription
|| __TEXT.__text _MRMediaRemoteCopyLocalAirPlayGroupName
|| __TEXT.__text _MRMediaRemoteCopyLocalAirPlayReceiverTightSyncIdentity
|| __TEXT.__text _MRMediaRemoteCopyLocalAirPlaySenderDefaultGroupIdentity
|| __TEXT.__text _MRMediaRemoteCopyLocalDeviceAirPlayReceiverDisplayID
|| __TEXT.__text _MRMediaRemoteCopyLocalDeviceSystemMediaApplicationDisplayID
|| __TEXT.__text _MRMediaRemoteCopyLocalDeviceSystemPodcastApplicationDisplayID
|| __TEXT.__text _MRMediaRemoteCopyNowPlayingNotifications
|| __TEXT.__text _MRMediaRemoteCopyNowPlayingVisibilityDescription
|| __TEXT.__text _MRMediaRemoteCopyPendingCommands
|| __TEXT.__text _MRMediaRemoteCopyPickableRoutes
|| __TEXT.__text _MRMediaRemoteCopyPickableRoutesForCategory
|| __TEXT.__text _MRMediaRemoteCopyPickableRoutesForCategory_Async
|| __TEXT.__text _MRMediaRemoteCopyPickableRoutes_Async
|| __TEXT.__text _MRMediaRemoteCopyPlaybackQueueInsertionPositionDescription
|| __TEXT.__text _MRMediaRemoteCopyPlaybackStateDescription
|| __TEXT.__text _MRMediaRemoteCopyReadableDictionaryDescription
|| __TEXT.__text _MRMediaRemoteCopyRepeatModeDescription
|| __TEXT.__text _MRMediaRemoteCopyRouteDiscoveryModeDescription
|| __TEXT.__text _MRMediaRemoteCopySendCommandErrorDescription
|| __TEXT.__text _MRMediaRemoteCopySenderDefaultGroupUID
|| __TEXT.__text _MRMediaRemoteCopySetPickedRouteOptionsDescription
|| __TEXT.__text _MRMediaRemoteCopyShuffleModeDescription
|| __TEXT.__text _MRMediaRemoteCopySupportedCommands
|| __TEXT.__text _MRMediaRemoteCopySupportedCommandsForOrigin
|| __TEXT.__text _MRMediaRemoteCopySystemMediaApplicationDefaultSetPlaybackQueueCommandOptions
|| __TEXT.__text _MRMediaRemoteCopySystemMediaApplicationDefaultSupportedCommands
|| __TEXT.__text _MRMediaRemoteCopySystemMediaApplicationDefaultSupportedCommandsData
|| __TEXT.__text _MRMediaRemoteCreateError
|| __TEXT.__text _MRMediaRemoteCreateErrorExternalRepresentation
|| __TEXT.__text _MRMediaRemoteCreateErrorFromExternalRepresentation
|| __TEXT.__text _MRMediaRemoteCreateErrorWithDescription
|| __TEXT.__text _MRMediaRemoteCreateErrorWithUserInfo
|| __TEXT.__text _MRMediaRemoteCreatePasscodeHash
|| __TEXT.__text _MRMediaRemoteDismissMediaControlsCommand
|| __TEXT.__text _MRMediaRemoteErrorCodeIsInformational
|| __TEXT.__text _MRMediaRemoteErrorCopyDescription
|| __TEXT.__text _MRMediaRemoteErrorFromCommandStatuses
|| __TEXT.__text _MRMediaRemoteErrorIsInformational
|| __TEXT.__text _MRMediaRemoteFindAndPickRoute
|| __TEXT.__text _MRMediaRemoteFinishedPlaybackInitialization
|| __TEXT.__text _MRMediaRemoteGetActiveOrigin
|| __TEXT.__text _MRMediaRemoteGetAnyApplicationIsPlaying
|| __TEXT.__text _MRMediaRemoteGetAnyApplicationIsPlayingForOrigin
|| __TEXT.__text _MRMediaRemoteGetAppsSupportingBrowsableContentAPIs
|| __TEXT.__text _MRMediaRemoteGetAvailableOrigins
|| __TEXT.__text _MRMediaRemoteGetBrowsableContentChildItems
|| __TEXT.__text _MRMediaRemoteGetClientProperties
|| __TEXT.__text _MRMediaRemoteGetContentItemsForIdentifiers
|| __TEXT.__text _MRMediaRemoteGetCountOfBrowsableContentChildItems
|| __TEXT.__text _MRMediaRemoteGetDefaultNowPlayingPlayer
|| __TEXT.__text _MRMediaRemoteGetDeviceInfo
|| __TEXT.__text _MRMediaRemoteGetElectedPlayerPath
|| __TEXT.__text _MRMediaRemoteGetExternalScreenType
|| __TEXT.__text _MRMediaRemoteGetIsAirPlayActive
|| __TEXT.__text _MRMediaRemoteGetIsGroupLeader
|| __TEXT.__text _MRMediaRemoteGetLocalDeviceIsGroupLeader
|| __TEXT.__text _MRMediaRemoteGetLocalGroupContainsDiscoverableGroupLeader
|| __TEXT.__text _MRMediaRemoteGetLocalIsProxyGroupPlayer
|| __TEXT.__text _MRMediaRemoteGetLocalNowPlayingClient
|| __TEXT.__text _MRMediaRemoteGetLocalNowPlayingPlayerPath
|| __TEXT.__text _MRMediaRemoteGetLocalOrigin
|| __TEXT.__text _MRMediaRemoteGetLocalReceiverGroupingIdentity
|| __TEXT.__text _MRMediaRemoteGetLocalReceiverPairingIdentity
|| __TEXT.__text _MRMediaRemoteGetMediaAppIsInstalled
|| __TEXT.__text _MRMediaRemoteGetMediaPlaybackVolume
|| __TEXT.__text _MRMediaRemoteGetNowPlayingApplicationDisplayID
|| __TEXT.__text _MRMediaRemoteGetNowPlayingApplicationDisplayIDForOrigin
|| __TEXT.__text _MRMediaRemoteGetNowPlayingApplicationDisplayName
|| __TEXT.__text _MRMediaRemoteGetNowPlayingApplicationIsPlaying
|| __TEXT.__text _MRMediaRemoteGetNowPlayingApplicationPID
|| __TEXT.__text _MRMediaRemoteGetNowPlayingApplicationPlaybackState
|| __TEXT.__text _MRMediaRemoteGetNowPlayingApplicationPlaybackStateForOrigin
|| __TEXT.__text _MRMediaRemoteGetNowPlayingArtwork
|| __TEXT.__text _MRMediaRemoteGetNowPlayingClient
|| __TEXT.__text _MRMediaRemoteGetNowPlayingClientForOrigin
|| __TEXT.__text _MRMediaRemoteGetNowPlayingClients
|| __TEXT.__text _MRMediaRemoteGetNowPlayingClientsForOrigin
|| __TEXT.__text _MRMediaRemoteGetNowPlayingInfo
|| __TEXT.__text _MRMediaRemoteGetNowPlayingInfoForApp
|| __TEXT.__text _MRMediaRemoteGetNowPlayingInfoForClient
|| __TEXT.__text _MRMediaRemoteGetNowPlayingInfoForOrigin
|| __TEXT.__text _MRMediaRemoteGetNowPlayingInfoForPlayer
|| __TEXT.__text _MRMediaRemoteGetNowPlayingInfoWithOptionalArtwork
|| __TEXT.__text _MRMediaRemoteGetNowPlayingPlayer
|| __TEXT.__text _MRMediaRemoteGetNowPlayingPlayerForClient
|| __TEXT.__text _MRMediaRemoteGetNowPlayingState
|| __TEXT.__text _MRMediaRemoteGetPickedRouteHasVolumeControl
|| __TEXT.__text _MRMediaRemoteGetPickedRouteHasVolumeControlForOrigin
|| __TEXT.__text _MRMediaRemoteGetPickedRoutedVolumeControlCapabilities
|| __TEXT.__text _MRMediaRemoteGetPlaybackStateForClient
|| __TEXT.__text _MRMediaRemoteGetPlaybackStateForPlayer
|| __TEXT.__text _MRMediaRemoteGetPlayerProperties
|| __TEXT.__text _MRMediaRemoteGetPlayers
|| __TEXT.__text _MRMediaRemoteGetPlayersForClient
|| __TEXT.__text _MRMediaRemoteGetProxiableSupportedCommandsForPlayer
|| __TEXT.__text _MRMediaRemoteGetReceiverAirPlaySecuritySettings
|| __TEXT.__text _MRMediaRemoteGetSavedAVRoutePassword
|| __TEXT.__text _MRMediaRemoteGetSupportedBrowsableContentAPIs
|| __TEXT.__text _MRMediaRemoteGetSupportedCommands
|| __TEXT.__text _MRMediaRemoteGetSupportedCommandsForApp
|| __TEXT.__text _MRMediaRemoteGetSupportedCommandsForClient
|| __TEXT.__text _MRMediaRemoteGetSupportedCommandsForOrigin
|| __TEXT.__text _MRMediaRemoteGetSupportedCommandsForPlayer
|| __TEXT.__text _MRMediaRemoteGetSyncableSupportedCommandsForPlayer
|| __TEXT.__text _MRMediaRemoteIndexPathCopyDescription
|| __TEXT.__text _MRMediaRemoteInsertSystemAppPlaybackQueue
|| __TEXT.__text _MRMediaRemoteInsertSystemAppPlaybackQueueForApp
|| __TEXT.__text _MRMediaRemoteInsertSystemAppPlaybackQueueForPlayer
|| __TEXT.__text _MRMediaRemoteInsertSystemAppPlaybackQueueWithOptions
|| __TEXT.__text _MRMediaRemoteInvalidateBrowsableContent
|| __TEXT.__text _MRMediaRemoteNowPlayingCopyResolvedPlayerPath
|| __TEXT.__text _MRMediaRemoteNowPlayingGetResolvedPlayerPathIsLocal
|| __TEXT.__text _MRMediaRemoteNowPlayingGetResolvedPlayerPathIsLocalSync
|| __TEXT.__text _MRMediaRemoteNowPlayingInfoIsEmpty
|| __TEXT.__text _MRMediaRemoteNowPlayingInfoIsEqual
|| __TEXT.__text _MRMediaRemoteNowPlayingPing
|| __TEXT.__text _MRMediaRemoteNowPlayingPlaybackQueueContentItemsChanged
|| __TEXT.__text _MRMediaRemoteNowPlayingPlayerPathCreateError
|| __TEXT.__text _MRMediaRemoteNowPlayingResolvePlayerPath
|| __TEXT.__text _MRMediaRemotePickedRouteVolumeControlCapabilitiesCopyDescription
|| __TEXT.__text _MRMediaRemotePlaybackQueueDataSourceAddContentItemArtworkCallback
|| __TEXT.__text _MRMediaRemotePlaybackQueueDataSourceAddContentItemArtworkCallbackForPlayer
|| __TEXT.__text _MRMediaRemotePlaybackQueueDataSourceAddContentItemInfoCallback
|| __TEXT.__text _MRMediaRemotePlaybackQueueDataSourceAddContentItemInfoCallbackForPlayer
|| __TEXT.__text _MRMediaRemotePlaybackQueueDataSourceAddContentItemLanguageOptionsCallback
|| __TEXT.__text _MRMediaRemotePlaybackQueueDataSourceAddContentItemLanguageOptionsCallbackForPlayer
|| __TEXT.__text _MRMediaRemotePlaybackQueueDataSourceAddContentItemLyricsCallback
|| __TEXT.__text _MRMediaRemotePlaybackQueueDataSourceAddContentItemLyricsCallbackForPlayer
|| __TEXT.__text _MRMediaRemotePlaybackQueueDataSourceAddContentItemMetadataCallback
|| __TEXT.__text _MRMediaRemotePlaybackQueueDataSourceAddContentItemMetadataCallbackForPlayer
|| __TEXT.__text _MRMediaRemotePlaybackQueueDataSourceAddCreateChildContentItemCallback
|| __TEXT.__text _MRMediaRemotePlaybackQueueDataSourceAddCreateChildContentItemCallbackForPlayer
|| __TEXT.__text _MRMediaRemotePlaybackQueueDataSourceAddCreateContentItemCallback
|| __TEXT.__text _MRMediaRemotePlaybackQueueDataSourceAddCreateContentItemCallbackForPlayer
|| __TEXT.__text _MRMediaRemotePlaybackQueueDataSourceAddCreateContentItemForIdentifierCallbackForPlayer
|| __TEXT.__text _MRMediaRemotePlaybackQueueDataSourceAddCreatePlaybackQueueForRequestCallback
|| __TEXT.__text _MRMediaRemotePlaybackQueueDataSourceAddCreatePlaybackQueueForRequestCallbackForPlayer
|| __TEXT.__text _MRMediaRemotePlaybackQueueDataSourceContentItemChanged
|| __TEXT.__text _MRMediaRemotePlaybackQueueDataSourceContentItemChangedForPlayer
|| __TEXT.__text _MRMediaRemotePlaybackQueueDataSourceContentItemChangedWithRequest
|| __TEXT.__text _MRMediaRemotePlaybackQueueDataSourceContentItemChangedWithRequestForPlayer
|| __TEXT.__text _MRMediaRemotePlaybackQueueDataSourceContentItemsChanged
|| __TEXT.__text _MRMediaRemotePlaybackQueueDataSourceContentItemsChangedForPlayer
|| __TEXT.__text _MRMediaRemotePlaybackQueueDataSourceContentItemsChangedWithRequest
|| __TEXT.__text _MRMediaRemotePlaybackQueueDataSourceContentItemsChangedWithRequestForPlayer
|| __TEXT.__text _MRMediaRemotePlaybackQueueDataSourceInvalidate
|| __TEXT.__text _MRMediaRemotePlaybackQueueDataSourceInvalidateForPlayer
|| __TEXT.__text _MRMediaRemotePlaybackQueueDataSourceInvalidateWithNowPlayingContentItemForPlayer
|| __TEXT.__text _MRMediaRemotePlaybackQueueDataSourceInvalidateWithPlaybackQueueForPlayer
|| __TEXT.__text _MRMediaRemotePlaybackQueueDataSourceRemoveCallback
|| __TEXT.__text _MRMediaRemotePlaybackQueueDataSourceRemoveCallbackForPlayer
|| __TEXT.__text _MRMediaRemotePlaybackQueueDataSourceSetRequestCallback
|| __TEXT.__text _MRMediaRemotePlaybackQueueDataSourceSetTransactionCallback
|| __TEXT.__text _MRMediaRemotePlaybackQueueDataSourceSourceAddCallbackToList
|| __TEXT.__text _MRMediaRemotePlaybackQueueResetRequestsWithDataForPlayer
|| __TEXT.__text _MRMediaRemotePlaybackSessionMigrate
|| __TEXT.__text _MRMediaRemotePlaybackSessionMigrateEndpointOptionsCopyDescription
|| __TEXT.__text _MRMediaRemotePlaybackSessionMigrateEndpointOptionsGetDefault
|| __TEXT.__text _MRMediaRemotePlaybackSessionMigrateForDevice
|| __TEXT.__text _MRMediaRemotePlaybackSessionMigrateForOrigin
|| __TEXT.__text _MRMediaRemotePlaybackSessionMigrateForOriginWithRequest
|| __TEXT.__text _MRMediaRemotePlaybackSessionMigratePlayerOptionsCopyDescription
|| __TEXT.__text _MRMediaRemotePlaybackSessionMigratePlayerOptionsGetDefault
|| __TEXT.__text _MRMediaRemotePlaybackSessionMigrateWithRequest
|| __TEXT.__text _MRMediaRemotePlaybackSessionRequest
|| __TEXT.__text _MRMediaRemotePlaybackSessionRequestSupportedType
|| __TEXT.__text _MRMediaRemotePlaybackSessionRequestSupportedTypeForOrigin
|| __TEXT.__text _MRMediaRemotePlaybackSessionSetMigrateBeginCallback
|| __TEXT.__text _MRMediaRemotePlaybackSessionSetMigrateBeginCallbackForOrigin
|| __TEXT.__text _MRMediaRemotePlaybackSessionSetMigrateEndCallback
|| __TEXT.__text _MRMediaRemotePlaybackSessionSetMigrateEndCallbackForOrigin
|| __TEXT.__text _MRMediaRemotePlaybackSessionSetRequestCallback
|| __TEXT.__text _MRMediaRemotePlaybackSessionSetRequestCallbackForOrigin
|| __TEXT.__text _MRMediaRemotePlaybackStateIsAdvancing
|| __TEXT.__text _MRMediaRemotePostBrowsableContentNotification
|| __TEXT.__text _MRMediaRemotePostClientNotification
|| __TEXT.__text _MRMediaRemotePostDelayedNotification
|| __TEXT.__text _MRMediaRemotePostOriginClientNotification
|| __TEXT.__text _MRMediaRemotePostPlaybackQueueRequestAsyncContentItemNotifications
|| __TEXT.__text _MRMediaRemotePostPlayerClientNotification
|| __TEXT.__text _MRMediaRemotePresentMediaControlsCommand
|| __TEXT.__text _MRMediaRemotePresentMediaControlsLanguageOptionsCommand
|| __TEXT.__text _MRMediaRemotePrewarmMediaControlsCommand
|| __TEXT.__text _MRMediaRemoteReRegisterCustomOriginWithDeviceInfo
|| __TEXT.__text _MRMediaRemoteRegisterCustomOrigin
|| __TEXT.__text _MRMediaRemoteRegisterCustomOriginWithDeviceInfo
|| __TEXT.__text _MRMediaRemoteRegisterForElapsedTimeChangesWithHandler
|| __TEXT.__text _MRMediaRemoteRegisterForNowPlayingNotifications
|| __TEXT.__text _MRMediaRemoteRegisterForPlaybackSpeedChangesWithHandler
|| __TEXT.__text _MRMediaRemoteRegisterForRepeatModeChangesWithHandler
|| __TEXT.__text _MRMediaRemoteRegisterForShuffleModeChangesWithHandler
|| __TEXT.__text _MRMediaRemoteRegisterWantsSystemAppDidSkipTrackNotifications
|| __TEXT.__text _MRMediaRemoteRemoteSendLyricsEvent
|| __TEXT.__text _MRMediaRemoteRemoteSendLyricsEventForPlayer
|| __TEXT.__text _MRMediaRemoteRemoveClientForOrigin
|| __TEXT.__text _MRMediaRemoteRemoveCommandHandlerBlock
|| __TEXT.__text _MRMediaRemoteRemoveCommandHandlerBlockForOrigin
|| __TEXT.__text _MRMediaRemoteRemoveCommandHandlerBlockForPlayer
|| __TEXT.__text _MRMediaRemoteRemoveCustomOrigin
|| __TEXT.__text _MRMediaRemoteRemovePlayer
|| __TEXT.__text _MRMediaRemoteRemovePlayerPathInvalidationHandler
|| __TEXT.__text _MRMediaRemoteRepeatModeFromProtobuf
|| __TEXT.__text _MRMediaRemoteRepeatModeToProtobuf
|| __TEXT.__text _MRMediaRemoteReportPlaybackError
|| __TEXT.__text _MRMediaRemoteRequestAndPushPlaybackQueue
|| __TEXT.__text _MRMediaRemoteRequestAudioAmplitudeSamples
|| __TEXT.__text _MRMediaRemoteRequestAudioAmplitudeSamplesForPlayer
|| __TEXT.__text _MRMediaRemoteRequestDeviceUID
|| __TEXT.__text _MRMediaRemoteRequestGroupUID
|| __TEXT.__text _MRMediaRemoteRequestIsGroupLeader
|| __TEXT.__text _MRMediaRemoteRequestNowPlayingPlaybackQueue
|| __TEXT.__text _MRMediaRemoteRequestNowPlayingPlaybackQueueCapabilities
|| __TEXT.__text _MRMediaRemoteRequestNowPlayingPlaybackQueueCapabilitiesForPlayer
|| __TEXT.__text _MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayer
|| __TEXT.__text _MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayerSync
|| __TEXT.__text _MRMediaRemoteRequestNowPlayingPlaybackQueueSync
|| __TEXT.__text _MRMediaRemoteRequestPendingCommands
|| __TEXT.__text _MRMediaRemoteRequestPlaybackInitialization
|| __TEXT.__text _MRMediaRemoteRequestSenderDefaultGroupUID
|| __TEXT.__text _MRMediaRemoteRequestVideoThumbnails
|| __TEXT.__text _MRMediaRemoteRequestVideoThumbnailsForPlayer
|| __TEXT.__text _MRMediaRemoteResolveCommandOptions
|| __TEXT.__text _MRMediaRemoteSelectSourceWithID
|| __TEXT.__text _MRMediaRemoteSendCommand
|| __TEXT.__text _MRMediaRemoteSendCommandForOrigin
|| __TEXT.__text _MRMediaRemoteSendCommandForOriginWithReply
|| __TEXT.__text _MRMediaRemoteSendCommandToApp
|| __TEXT.__text _MRMediaRemoteSendCommandToClient
|| __TEXT.__text _MRMediaRemoteSendCommandToPlayer
|| __TEXT.__text _MRMediaRemoteSendCommandWithReply
|| __TEXT.__text _MRMediaRemoteSendPlaybackSession
|| __TEXT.__text _MRMediaRemoteSendPlaybackSessionMigrateBegin
|| __TEXT.__text _MRMediaRemoteSendPlaybackSessionMigrateEnd
|| __TEXT.__text _MRMediaRemoteSetActiveOrigin
|| __TEXT.__text _MRMediaRemoteSetAppPlaybackQueue
|| __TEXT.__text _MRMediaRemoteSetAppPlaybackQueueForPlayer
|| __TEXT.__text _MRMediaRemoteSetAppPlaybackQueueWithContext
|| __TEXT.__text _MRMediaRemoteSetApplicationPickedRoutes
|| __TEXT.__text _MRMediaRemoteSetAudioAmplitudeSamplesRequestCallback
|| __TEXT.__text _MRMediaRemoteSetAudioAmplitudeSamplesRequestCallbackForPlayer
|| __TEXT.__text _MRMediaRemoteSetBeginLyricsEventCallback
|| __TEXT.__text _MRMediaRemoteSetBeginLyricsEventCallbackForPlayer
|| __TEXT.__text _MRMediaRemoteSetBrowsableContentEndpoint
|| __TEXT.__text _MRMediaRemoteSetCanBeNowPlayingApplication
|| __TEXT.__text _MRMediaRemoteSetClientProperties
|| __TEXT.__text _MRMediaRemoteSetCommandHandlerBlock
|| __TEXT.__text _MRMediaRemoteSetCommandHandlerBlockForOrigin
|| __TEXT.__text _MRMediaRemoteSetCommandHandlerBlockForPlayer
|| __TEXT.__text _MRMediaRemoteSetCommandHandlerCallback
|| __TEXT.__text _MRMediaRemoteSetCommandHandlerCallbackForOrigin
|| __TEXT.__text _MRMediaRemoteSetDefaultSupportedCommands
|| __TEXT.__text _MRMediaRemoteSetDefaultSupportedCommandsForClient
|| __TEXT.__text _MRMediaRemoteSetDisplayNameForClient
|| __TEXT.__text _MRMediaRemoteSetElapsedTime
|| __TEXT.__text _MRMediaRemoteSetEndLyricsEventCallback
|| __TEXT.__text _MRMediaRemoteSetEndLyricsEventCallbackForPlayer
|| __TEXT.__text _MRMediaRemoteSetHardwareRemoteBehavior
|| __TEXT.__text _MRMediaRemoteSetMediaPlaybackVolume
|| __TEXT.__text _MRMediaRemoteSetNearbyDevice
|| __TEXT.__text _MRMediaRemoteSetNowPlayingApplicationOverrideEnabled
|| __TEXT.__text _MRMediaRemoteSetNowPlayingApplicationPlaybackStateForOrigin
|| __TEXT.__text _MRMediaRemoteSetNowPlayingClientForOrigin
|| __TEXT.__text _MRMediaRemoteSetNowPlayingInfo
|| __TEXT.__text _MRMediaRemoteSetNowPlayingInfoForOrigin
|| __TEXT.__text _MRMediaRemoteSetNowPlayingInfoForOriginWithMergePolicy
|| __TEXT.__text _MRMediaRemoteSetNowPlayingInfoForPlayer
|| __TEXT.__text _MRMediaRemoteSetNowPlayingInfoWithMergePolicy
|| __TEXT.__text _MRMediaRemoteSetNowPlayingPlayer
|| __TEXT.__text _MRMediaRemoteSetNowPlayingTintColor
|| __TEXT.__text _MRMediaRemoteSetNowPlayingVisibility
|| __TEXT.__text _MRMediaRemoteSetOverriddenNowPlayingApplication
|| __TEXT.__text _MRMediaRemoteSetParentApplication
|| __TEXT.__text _MRMediaRemoteSetPickedRouteHasVolumeControlForOrigin
|| __TEXT.__text _MRMediaRemoteSetPickedRouteVolumeControlCapabilities
|| __TEXT.__text _MRMediaRemoteSetPickedRouteWithPassword
|| __TEXT.__text _MRMediaRemoteSetPickedRouteWithPasswordAndOptions
|| __TEXT.__text _MRMediaRemoteSetPlaybackQueue
|| __TEXT.__text _MRMediaRemoteSetPlaybackQueueCapabilities
|| __TEXT.__text _MRMediaRemoteSetPlaybackSpeed
|| __TEXT.__text _MRMediaRemoteSetPlaybackStateForClient
|| __TEXT.__text _MRMediaRemoteSetPlaybackStateForPlayer
|| __TEXT.__text _MRMediaRemoteSetPlaybackStateForPlayerWithTimestamp
|| __TEXT.__text _MRMediaRemoteSetPlayerProperties
|| __TEXT.__text _MRMediaRemoteSetRepeatMode
|| __TEXT.__text _MRMediaRemoteSetRouteDiscoveryMode
|| __TEXT.__text _MRMediaRemoteSetSavedAVRoutePassword
|| __TEXT.__text _MRMediaRemoteSetShuffleMode
|| __TEXT.__text _MRMediaRemoteSetSupportedBrowsableContentAPIs
|| __TEXT.__text _MRMediaRemoteSetSupportedCommands
|| __TEXT.__text _MRMediaRemoteSetSupportedCommandsForClient
|| __TEXT.__text _MRMediaRemoteSetSupportedCommandsForPlayer
|| __TEXT.__text _MRMediaRemoteSetSystemAppPlaybackQueue
|| __TEXT.__text _MRMediaRemoteSetSystemAppPlaybackQueueWithContext
|| __TEXT.__text _MRMediaRemoteSetVideoThumbnailsRequestCallback
|| __TEXT.__text _MRMediaRemoteSetVideoThumbnailsRequestCallbackForPlayer
|| __TEXT.__text _MRMediaRemoteSetWantsExternalScreenTypeChangeNotifications
|| __TEXT.__text _MRMediaRemoteSetWantsNowPlayingNotifications
|| __TEXT.__text _MRMediaRemoteSetWantsOriginChangeNotifications
|| __TEXT.__text _MRMediaRemoteSetWantsPlaybackErrorNotifications
|| __TEXT.__text _MRMediaRemoteSetWantsRouteChangeNotifications
|| __TEXT.__text _MRMediaRemoteSetWantsSupportedCommandsChangedNotifications
|| __TEXT.__text _MRMediaRemoteSetWantsVolumeControlNotifications
|| __TEXT.__text _MRMediaRemoteShouldWakeSystemForCommand
|| __TEXT.__text _MRMediaRemoteShuffleModeFromProtobuf
|| __TEXT.__text _MRMediaRemoteShuffleModeToProtobuf
|| __TEXT.__text _MRMediaRemoteSupportedCommandsCreateExternalRepresentation
|| __TEXT.__text _MRMediaRemoteSupportedCommandsCreateFromExternalRepresentation
|| __TEXT.__text _MRMediaRemoteSupportedCommandsHaveChanged
|| __TEXT.__text _MRMediaRemoteSupportedCommandsHaveChangedForOrigin
|| __TEXT.__text _MRMediaRemoteSupportsCommand
|| __TEXT.__text _MRMediaRemoteSyncClientProperties
|| __TEXT.__text _MRMediaRemoteUnpickAirPlayAVRoutes
|| __TEXT.__text _MRMediaRemoteUnregisterForElapsedTimeChanges
|| __TEXT.__text _MRMediaRemoteUnregisterForNowPlayingNotifications
|| __TEXT.__text _MRMediaRemoteUnregisterForPlaybackSpeedChanges
|| __TEXT.__text _MRMediaRemoteUnregisterForRepeatModeChanges
|| __TEXT.__text _MRMediaRemoteUnregisterForShuffleModeChanges
|| __TEXT.__text _MRMediaRemoteUpdateBrowsableContentItems
|| __TEXT.__text _MRMediaRemoteUpdateClientProperties
|| __TEXT.__text _MRMediaRemoteUpdateDeviceInfo
|| __TEXT.__text _MRMediaRemoteUpdateNowPlayingIdentifiers
|| __TEXT.__text _MRMediaRemoteUpdatePlayerProperties
|| __TEXT.__text _MRMediaRemoteValidateIncomingCommandOptions
|| __TEXT.__text _MRMediaRemoteValidateOutgoingCommandOptions
|| __TEXT.__text _MRNotificationServiceClientPostNotificationCallback
|| __TEXT.__text _MRNowPlayingArtworkCopyIOSurface
|| __TEXT.__text _MRNowPlayingArtworkCopyImageData
|| __TEXT.__text _MRNowPlayingArtworkCreateWithImageData
|| __TEXT.__text _MRNowPlayingArtworkGetType
|| __TEXT.__text _MRNowPlayingClientAppendBundleIdentifier
|| __TEXT.__text _MRNowPlayingClientCopy
|| __TEXT.__text _MRNowPlayingClientCopyBundleIdentifierExtendedHierarchy
|| __TEXT.__text _MRNowPlayingClientCopyBundleIdentifierHierarchy
|| __TEXT.__text _MRNowPlayingClientCreate
|| __TEXT.__text _MRNowPlayingClientCreateExternalRepresentation
|| __TEXT.__text _MRNowPlayingClientCreateFromExternalRepresentation
|| __TEXT.__text _MRNowPlayingClientCreateSkeletonFrom
|| __TEXT.__text _MRNowPlayingClientEqualToClient
|| __TEXT.__text _MRNowPlayingClientGetBundleIdentifier
|| __TEXT.__text _MRNowPlayingClientGetDisplayName
|| __TEXT.__text _MRNowPlayingClientGetHasAuxillaryProperties
|| __TEXT.__text _MRNowPlayingClientGetNowPlayingVisibility
|| __TEXT.__text _MRNowPlayingClientGetParentAppBundleIdentifier
|| __TEXT.__text _MRNowPlayingClientGetProcessIdentifier
|| __TEXT.__text _MRNowPlayingClientGetTintColor
|| __TEXT.__text _MRNowPlayingClientGetUserIdentifier
|| __TEXT.__text _MRNowPlayingClientHasPlaceholder
|| __TEXT.__text _MRNowPlayingClientMerge
|| __TEXT.__text _MRNowPlayingClientResolvePlaceholder
|| __TEXT.__text _MRNowPlayingClientSetBundleIdentifier
|| __TEXT.__text _MRNowPlayingClientSetDisplayName
|| __TEXT.__text _MRNowPlayingClientSetNowPlayingVisibility
|| __TEXT.__text _MRNowPlayingClientSetParentAppBundleIdentifier
|| __TEXT.__text _MRNowPlayingClientSetProcessIdentifier
|| __TEXT.__text _MRNowPlayingClientSetTintColor
|| __TEXT.__text _MRNowPlayingClientSetUserIdentifier
|| __TEXT.__text _MRNowPlayingPlayerAudioSessionTypeCopyDescription
|| __TEXT.__text _MRNowPlayingPlayerCopy
|| __TEXT.__text _MRNowPlayingPlayerCreate
|| __TEXT.__text _MRNowPlayingPlayerCreateExternalRepresentation
|| __TEXT.__text _MRNowPlayingPlayerCreateFromExternalRepresentation
|| __TEXT.__text _MRNowPlayingPlayerCreateSkeletonFrom
|| __TEXT.__text _MRNowPlayingPlayerEqualToPlayer
|| __TEXT.__text _MRNowPlayingPlayerGetAudioSessionType
|| __TEXT.__text _MRNowPlayingPlayerGetDisplayName
|| __TEXT.__text _MRNowPlayingPlayerGetHasAuxillaryProperties
|| __TEXT.__text _MRNowPlayingPlayerGetIdentifier
|| __TEXT.__text _MRNowPlayingPlayerMerge
|| __TEXT.__text _MRNowPlayingPlayerPathClientEqualToPlayerPathClient
|| __TEXT.__text _MRNowPlayingPlayerPathCopy
|| __TEXT.__text _MRNowPlayingPlayerPathCopyStringRepresentation
|| __TEXT.__text _MRNowPlayingPlayerPathCreate
|| __TEXT.__text _MRNowPlayingPlayerPathCreateExternalRepresentation
|| __TEXT.__text _MRNowPlayingPlayerPathCreateFromExternalRepresentation
|| __TEXT.__text _MRNowPlayingPlayerPathCreateSkeletonFrom
|| __TEXT.__text _MRNowPlayingPlayerPathEqualToPlayerPath
|| __TEXT.__text _MRNowPlayingPlayerPathGetClient
|| __TEXT.__text _MRNowPlayingPlayerPathGetIsResolved
|| __TEXT.__text _MRNowPlayingPlayerPathGetIsSystemMediaApplication
|| __TEXT.__text _MRNowPlayingPlayerPathGetOrigin
|| __TEXT.__text _MRNowPlayingPlayerPathGetPlayer
|| __TEXT.__text _MRNowPlayingPlayerPathIsLocal
|| __TEXT.__text _MRNowPlayingPlayerPathResolveExternalDevicePlayerPath
|| __TEXT.__text _MRNowPlayingPlayerPathResolveLocalPlayerPath
|| __TEXT.__text _MRNowPlayingPlayerPathSetClient
|| __TEXT.__text _MRNowPlayingPlayerPathSetOrigin
|| __TEXT.__text _MRNowPlayingPlayerPathSetPlayer
|| __TEXT.__text _MRNowPlayingPlayerSetAudioSessionType
|| __TEXT.__text _MRNowPlayingPlayerSetDisplayName
|| __TEXT.__text _MRNowPlayingPlayerSetIdentifier
|| __TEXT.__text _MRNowPlayingStateContainsArtwork
|| __TEXT.__text _MRNowPlayingStateCopy
|| __TEXT.__text _MRNowPlayingStateCopyNowPlayingInfo
|| __TEXT.__text _MRNowPlayingStateCopySupportedCommands
|| __TEXT.__text _MRNowPlayingStateCopyWithoutArtwork
|| __TEXT.__text _MRNowPlayingStateCreateExternalRepresentation
|| __TEXT.__text _MRNowPlayingStateCreateFromExternalRepresentation
|| __TEXT.__text _MRNowPlayingStateCreateLegacy
|| __TEXT.__text _MRNowPlayingStateCreateWithPlayerPath
|| __TEXT.__text _MRNowPlayingStateCreateWithRequest
|| __TEXT.__text _MRNowPlayingStateGetDisplayID
|| __TEXT.__text _MRNowPlayingStateGetDisplayName
|| __TEXT.__text _MRNowPlayingStateGetPlaybackQueue
|| __TEXT.__text _MRNowPlayingStateGetPlaybackQueueCapabilities
|| __TEXT.__text _MRNowPlayingStateGetPlaybackState
|| __TEXT.__text _MRNowPlayingStateGetPlayerPath
|| __TEXT.__text _MRNowPlayingStateGetRequest
|| __TEXT.__text _MRNowPlayingStateSetDisplayID
|| __TEXT.__text _MRNowPlayingStateSetDisplayName
|| __TEXT.__text _MRNowPlayingStateSetNowPlayingInfo
|| __TEXT.__text _MRNowPlayingStateSetPlaybackQueue
|| __TEXT.__text _MRNowPlayingStateSetPlaybackQueueCapabilities
|| __TEXT.__text _MRNowPlayingStateSetPlaybackState
|| __TEXT.__text _MRNowPlayingStateSetPlaybackStateTimestamp
|| __TEXT.__text _MRNowPlayingStateSetPlayerPath
|| __TEXT.__text _MRNowPlayingStateSetSupportedCommands
|| __TEXT.__text _MROriginCopy
|| __TEXT.__text _MROriginCreateExternalRepresentation
|| __TEXT.__text _MROriginCreateFromExternalRepresentation
|| __TEXT.__text _MROriginCreateSkeletonFrom
|| __TEXT.__text _MROriginEqualToOrigin
|| __TEXT.__text _MROriginGetDeviceInfo
|| __TEXT.__text _MROriginGetDisplayName
|| __TEXT.__text _MROriginGetOriginType
|| __TEXT.__text _MROriginGetUniqueIdentifier
|| __TEXT.__text _MROriginIsLocalOrigin
|| __TEXT.__text _MROutputDeviceIsAVOutputDeviceLocal
|| __TEXT.__text _MRPairedDeviceCopyAirPlayReceivers
|| __TEXT.__text _MRPairedDeviceCopyBluetoothAddress
|| __TEXT.__text _MRPairedDeviceCopyBuildVersion
|| __TEXT.__text _MRPairedDeviceCopyBundleIdentifier
|| __TEXT.__text _MRPairedDeviceCopyBundleVersion
|| __TEXT.__text _MRPairedDeviceCopyDeltaDescription
|| __TEXT.__text _MRPairedDeviceCopyDeltaMinimalDescription
|| __TEXT.__text _MRPairedDeviceCopyDescription
|| __TEXT.__text _MRPairedDeviceCopyDeviceUID
|| __TEXT.__text _MRPairedDeviceCopyGroupName
|| __TEXT.__text _MRPairedDeviceCopyGroupUID
|| __TEXT.__text _MRPairedDeviceCopyGroupedDevices
|| __TEXT.__text _MRPairedDeviceCopyIdentifier
|| __TEXT.__text _MRPairedDeviceCopyLinkAgent
|| __TEXT.__text _MRPairedDeviceCopyLocalReceiverPairingIdentity
|| __TEXT.__text _MRPairedDeviceCopyLocalizedModelName
|| __TEXT.__text _MRPairedDeviceCopyManagedConfigDeviceID
|| __TEXT.__text _MRPairedDeviceCopyMinimalDescription
|| __TEXT.__text _MRPairedDeviceCopyName
|| __TEXT.__text _MRPairedDeviceCopySenderDefaultGroupUID
|| __TEXT.__text _MRPairedDeviceCopySystemMediaApplication
|| __TEXT.__text _MRPairedDeviceCopyTightSyncUID
|| __TEXT.__text _MRPairedDeviceCreate
|| __TEXT.__text _MRPairedDeviceCreateCopy
|| __TEXT.__text _MRPairedDeviceCreateExternalRepresentation
|| __TEXT.__text _MRPairedDeviceCreateFromExternalRepresentation
|| __TEXT.__text _MRPairedDeviceCreateSkeletonFrom
|| __TEXT.__text _MRPairedDeviceEqualToPairedDevice
|| __TEXT.__text _MRPairedDeviceGetDeviceClass
|| __TEXT.__text _MRPairedDeviceGetGroupLogicalDeviceCount
|| __TEXT.__text _MRPairedDeviceGetIsAirPlayActive
|| __TEXT.__text _MRPairedDeviceGetIsGroupLeader
|| __TEXT.__text _MRPairedDeviceGetProtocolVersion
|| __TEXT.__text _MRPairedDeviceGetSharedQueueVersion
|| __TEXT.__text _MRPairedDeviceIsConnected
|| __TEXT.__text _MRPairedDeviceIsPairingAllowed
|| __TEXT.__text _MRPairedDeviceIsProxyGroupPlayer
|| __TEXT.__text _MRPairedDeviceIsTightlySyncedGroup
|| __TEXT.__text _MRPairedDeviceMerge
|| __TEXT.__text _MRPairedDeviceSetAirPlayReceivers
|| __TEXT.__text _MRPairedDeviceSetBluetoothAddress
|| __TEXT.__text _MRPairedDeviceSetBuildVersion
|| __TEXT.__text _MRPairedDeviceSetBundleIdentifier
|| __TEXT.__text _MRPairedDeviceSetBundleVersion
|| __TEXT.__text _MRPairedDeviceSetDeviceClass
|| __TEXT.__text _MRPairedDeviceSetDeviceUID
|| __TEXT.__text _MRPairedDeviceSetGroupLogicalDeviceCount
|| __TEXT.__text _MRPairedDeviceSetGroupName
|| __TEXT.__text _MRPairedDeviceSetGroupUID
|| __TEXT.__text _MRPairedDeviceSetGroupedDevices
|| __TEXT.__text _MRPairedDeviceSetIdentifier
|| __TEXT.__text _MRPairedDeviceSetIsAirPlayActive
|| __TEXT.__text _MRPairedDeviceSetIsConnected
|| __TEXT.__text _MRPairedDeviceSetIsGroupLeader
|| __TEXT.__text _MRPairedDeviceSetIsPairingAllowed
|| __TEXT.__text _MRPairedDeviceSetIsProxyGroupPlayer
|| __TEXT.__text _MRPairedDeviceSetLocalizedModelName
|| __TEXT.__text _MRPairedDeviceSetManagedConfigDeviceID
|| __TEXT.__text _MRPairedDeviceSetName
|| __TEXT.__text _MRPairedDeviceSetProtocolVersion
|| __TEXT.__text _MRPairedDeviceSetSenderDefaultGroupUID
|| __TEXT.__text _MRPairedDeviceSetSharedQueueVersion
|| __TEXT.__text _MRPairedDeviceSetSupportsACL
|| __TEXT.__text _MRPairedDeviceSetSupportsExtendedMotion
|| __TEXT.__text _MRPairedDeviceSetSupportsSharedQueue
|| __TEXT.__text _MRPairedDeviceSetSupportsSystemPairing
|| __TEXT.__text _MRPairedDeviceSetSystemMediaApplication
|| __TEXT.__text _MRPairedDeviceSetSystemPodcastApplication
|| __TEXT.__text _MRPairedDeviceSetTightSyncUID
|| __TEXT.__text _MRPairedDeviceSupportsACL
|| __TEXT.__text _MRPairedDeviceSupportsExtendedMotion
|| __TEXT.__text _MRPairedDeviceSupportsSharedQueue
|| __TEXT.__text _MRPairedDeviceSupportsSystemPairing
|| __TEXT.__text _MRPairedDevicesCopyDescription
|| __TEXT.__text _MRPairedDevicesCopyMinimalDescription
|| __TEXT.__text _MRPairedDevicesCreateExternalRepresentation
|| __TEXT.__text _MRPairedDevicesCreateFromExternalRepresentation
|| __TEXT.__text _MRPerformAsyncOperationsUntilError
|| __TEXT.__text _MRPlaybackQueueCapabilitiesCopyDescription
|| __TEXT.__text _MRPlaybackQueueCapabilitiesCreateExternalRepresentation
|| __TEXT.__text _MRPlaybackQueueCapabilitiesFromExternalRepresentation
|| __TEXT.__text _MRPlaybackQueueCopy
|| __TEXT.__text _MRPlaybackQueueCopyContentItemIdentifiers
|| __TEXT.__text _MRPlaybackQueueCopyContentItems
|| __TEXT.__text _MRPlaybackQueueCopyMinimalReadableDescription
|| __TEXT.__text _MRPlaybackQueueCopyReadableDescription
|| __TEXT.__text _MRPlaybackQueueCreate
|| __TEXT.__text _MRPlaybackQueueCreateEmpty
|| __TEXT.__text _MRPlaybackQueueCreateExternalRepresentation
|| __TEXT.__text _MRPlaybackQueueCreateFromCache
|| __TEXT.__text _MRPlaybackQueueCreateFromExternalRepresentation
|| __TEXT.__text _MRPlaybackQueueCreateFromNowPlayingInfo
|| __TEXT.__text _MRPlaybackQueueCreateFromRequest
|| __TEXT.__text _MRPlaybackQueueCreateMergedQueue
|| __TEXT.__text _MRPlaybackQueueCreateWithContentItem
|| __TEXT.__text _MRPlaybackQueueCreateWithContentItems
|| __TEXT.__text _MRPlaybackQueueCreateWithNowPlayingContentItem
|| __TEXT.__text _MRPlaybackQueueEnumerateContentItemOffsetsUsingBlock
|| __TEXT.__text _MRPlaybackQueueEnumerateContentItemsUsingBlock
|| __TEXT.__text _MRPlaybackQueueGetContentItemAtOffset
|| __TEXT.__text _MRPlaybackQueueGetContentItemForIdentifier
|| __TEXT.__text _MRPlaybackQueueGetContentItemsCount
|| __TEXT.__text _MRPlaybackQueueGetQueueID
|| __TEXT.__text _MRPlaybackQueueGetRange
|| __TEXT.__text _MRPlaybackQueueGetRequestID
|| __TEXT.__text _MRPlaybackQueueGetResolvedPlayerPath
|| __TEXT.__text _MRPlaybackQueueGetSendingPlaybackQueueTransaction
|| __TEXT.__text _MRPlaybackQueueHasRange
|| __TEXT.__text _MRPlaybackQueueMerge
|| __TEXT.__text _MRPlaybackQueueQueueIsEqualToPlaybackQueue
|| __TEXT.__text _MRPlaybackQueueRequestContainsNonDefaultAssets
|| __TEXT.__text _MRPlaybackQueueRequestCopy
|| __TEXT.__text _MRPlaybackQueueRequestCopyDescription
|| __TEXT.__text _MRPlaybackQueueRequestCopyWithCurrentState
|| __TEXT.__text _MRPlaybackQueueRequestCopyWithRange
|| __TEXT.__text _MRPlaybackQueueRequestCreate
|| __TEXT.__text _MRPlaybackQueueRequestCreateAssetsFrom
|| __TEXT.__text _MRPlaybackQueueRequestCreateDefault
|| __TEXT.__text _MRPlaybackQueueRequestCreateDefaultWithRange
|| __TEXT.__text _MRPlaybackQueueRequestCreateExternalRepresentation
|| __TEXT.__text _MRPlaybackQueueRequestCreateFromExternalRepresentation
|| __TEXT.__text _MRPlaybackQueueRequestCreateFromTransactionName
|| __TEXT.__text _MRPlaybackQueueRequestCreateMergedRequest
|| __TEXT.__text _MRPlaybackQueueRequestCreateSkeletonFrom
|| __TEXT.__text _MRPlaybackQueueRequestCreateWithCurrentState
|| __TEXT.__text _MRPlaybackQueueRequestCreateWithIdentifiers
|| __TEXT.__text _MRPlaybackQueueRequestGetArtworkHeight
|| __TEXT.__text _MRPlaybackQueueRequestGetArtworkWidth
|| __TEXT.__text _MRPlaybackQueueRequestGetCachingPolicy
|| __TEXT.__text _MRPlaybackQueueRequestGetIncludeArtwork
|| __TEXT.__text _MRPlaybackQueueRequestGetIncludeInfo
|| __TEXT.__text _MRPlaybackQueueRequestGetIncludeLanguageOptions
|| __TEXT.__text _MRPlaybackQueueRequestGetIncludeLyrics
|| __TEXT.__text _MRPlaybackQueueRequestGetIncludeMetadata
|| __TEXT.__text _MRPlaybackQueueRequestGetIncludeSections
|| __TEXT.__text _MRPlaybackQueueRequestGetIsLegacyNowPlayingInfoRequest
|| __TEXT.__text _MRPlaybackQueueRequestGetLabel
|| __TEXT.__text _MRPlaybackQueueRequestGetRange
|| __TEXT.__text _MRPlaybackQueueRequestGetRequestID
|| __TEXT.__text _MRPlaybackQueueRequestGetRequestedIdentifiers
|| __TEXT.__text _MRPlaybackQueueRequestGetReturnContentItemAssetsInUserCompletion
|| __TEXT.__text _MRPlaybackQueueRequestHasRange
|| __TEXT.__text _MRPlaybackQueueRequestIsExactMatch
|| __TEXT.__text _MRPlaybackQueueRequestMatch
|| __TEXT.__text _MRPlaybackQueueRequestMerge
|| __TEXT.__text _MRPlaybackQueueRequestRangeContainsNowPlayingItem
|| __TEXT.__text _MRPlaybackQueueRequestSetCachingPolicy
|| __TEXT.__text _MRPlaybackQueueRequestSetIdentifiers
|| __TEXT.__text _MRPlaybackQueueRequestSetIncludeArtwork
|| __TEXT.__text _MRPlaybackQueueRequestSetIncludeInfo
|| __TEXT.__text _MRPlaybackQueueRequestSetIncludeLanguageOptions
|| __TEXT.__text _MRPlaybackQueueRequestSetIncludeLyrics
|| __TEXT.__text _MRPlaybackQueueRequestSetIncludeMetadata
|| __TEXT.__text _MRPlaybackQueueRequestSetIncludeSections
|| __TEXT.__text _MRPlaybackQueueRequestSetIsLegacyNowPlayingInfoRequest
|| __TEXT.__text _MRPlaybackQueueRequestSetLabel
|| __TEXT.__text _MRPlaybackQueueRequestSetRequestID
|| __TEXT.__text _MRPlaybackQueueRequestSetReturnContentItemAssetsInUserCompletion
|| __TEXT.__text _MRPlaybackQueueRequestShouldRequestItem
|| __TEXT.__text _MRPlaybackQueueRequestShouldRequestItemNotConsideringMetadata
|| __TEXT.__text _MRPlaybackQueueSetQueueID
|| __TEXT.__text _MRPlaybackQueueSetRequestID
|| __TEXT.__text _MRPlaybackQueueSetResolvedPlayerPath
|| __TEXT.__text _MRPlaybackQueueSetSendingPlaybackQueueTransaction
|| __TEXT.__text _MRPlaybackSessionCopyIdentifier
|| __TEXT.__text _MRPlaybackSessionCopyPlaybackSessionData
|| __TEXT.__text _MRPlaybackSessionCopyType
|| __TEXT.__text _MRPlaybackSessionCreate
|| __TEXT.__text _MRPlaybackSessionCreateExternalRepresentation
|| __TEXT.__text _MRPlaybackSessionCreateFromExternalRepresentation
|| __TEXT.__text _MRPlaybackSessionMigrateCopyCorrespondingPlayerPath
|| __TEXT.__text _MRPlaybackSessionMigrateCopyCurrentTypes
|| __TEXT.__text _MRPlaybackSessionMigrateCopySupportedTypeMatch
|| __TEXT.__text _MRPlaybackSessionMigrateCopySupportedTypes
|| __TEXT.__text _MRPlaybackSessionRequestCopyDescription
|| __TEXT.__text _MRPlaybackSessionRequestCopyIdentifier
|| __TEXT.__text _MRPlaybackSessionRequestCopyRequestID
|| __TEXT.__text _MRPlaybackSessionRequestCopyType
|| __TEXT.__text _MRPlaybackSessionRequestCreate
|| __TEXT.__text _MRPlaybackSessionRequestCreateExternalRepresentation
|| __TEXT.__text _MRPlaybackSessionRequestCreateFromExternalRepresentation
|| __TEXT.__text _MRProcessIsMediaRemoteDaemon
|| __TEXT.__text _MRProtobufFromConnectionState
|| __TEXT.__text _MRProtobufFromGameControllerInputMode
|| __TEXT.__text _MRProtobufFromGameControllerProfile
|| __TEXT.__text _MRProtobufFromSendCommandAppOptions
|| __TEXT.__text _MRRegisterTransaction
|| __TEXT.__text _MRSendCommandAppOptionsFromProtobuf
|| __TEXT.__text _MRShouldUseLegacyMusicApplicationAsSystemMediaApp
|| __TEXT.__text _MRSupportsMediaControlReceiver
|| __TEXT.__text _MRSystemAppPlaybackQueueCopyCustomData
|| __TEXT.__text _MRSystemAppPlaybackQueueCopyCustomDataIdentifier
|| __TEXT.__text _MRSystemAppPlaybackQueueCopyDescription
|| __TEXT.__text _MRSystemAppPlaybackQueueCopyFeatureName
|| __TEXT.__text _MRSystemAppPlaybackQueueCopyGenericTrackIdentifiers
|| __TEXT.__text _MRSystemAppPlaybackQueueCopyGeniusSeedTrack
|| __TEXT.__text _MRSystemAppPlaybackQueueCopyRadioStationStringIdentifier
|| __TEXT.__text _MRSystemAppPlaybackQueueCopyTracklistStoreIDs
|| __TEXT.__text _MRSystemAppPlaybackQueueCreate
|| __TEXT.__text _MRSystemAppPlaybackQueueCreateExternalRepresentation
|| __TEXT.__text _MRSystemAppPlaybackQueueCreateFromExternalRepresentation
|| __TEXT.__text _MRSystemAppPlaybackQueueDestroy
|| __TEXT.__text _MRSystemAppPlaybackQueueGetFirstItemGenericTrackIdentifier
|| __TEXT.__text _MRSystemAppPlaybackQueueGetLocalQueryData
|| __TEXT.__text _MRSystemAppPlaybackQueueGetLocalQueryEncodingType
|| __TEXT.__text _MRSystemAppPlaybackQueueGetLocalQueryFirstItemMultiverseIDData
|| __TEXT.__text _MRSystemAppPlaybackQueueGetLocalQueryFirstItemPID
|| __TEXT.__text _MRSystemAppPlaybackQueueGetLocalQueryRepeatMode
|| __TEXT.__text _MRSystemAppPlaybackQueueGetLocalQueryShuffleMode
|| __TEXT.__text _MRSystemAppPlaybackQueueGetRadioStationIDType
|| __TEXT.__text _MRSystemAppPlaybackQueueGetRadioStationIntegerPID
|| __TEXT.__text _MRSystemAppPlaybackQueueGetReplaceIntent
|| __TEXT.__text _MRSystemAppPlaybackQueueGetSiriAssetInfo
|| __TEXT.__text _MRSystemAppPlaybackQueueGetSiriRecommendationIdentifier
|| __TEXT.__text _MRSystemAppPlaybackQueueGetSiriWHAMetricsInfo
|| __TEXT.__text _MRSystemAppPlaybackQueueGetTracklistCollectionIdentifierSetData
|| __TEXT.__text _MRSystemAppPlaybackQueueGetTracklistRepeatMode
|| __TEXT.__text _MRSystemAppPlaybackQueueGetTracklistShuffleMode
|| __TEXT.__text _MRSystemAppPlaybackQueueGetType
|| __TEXT.__text _MRSystemAppPlaybackQueueGetUserInfo
|| __TEXT.__text _MRSystemAppPlaybackQueueInternalPrepareBundleIDForPlayback
|| __TEXT.__text _MRSystemAppPlaybackQueueIsRequestingImmediatePlayback
|| __TEXT.__text _MRSystemAppPlaybackQueueSetCustomData
|| __TEXT.__text _MRSystemAppPlaybackQueueSetCustomDataIdentifier
|| __TEXT.__text _MRSystemAppPlaybackQueueSetFeatureName
|| __TEXT.__text _MRSystemAppPlaybackQueueSetFirstItemGenericTrackIdentifier
|| __TEXT.__text _MRSystemAppPlaybackQueueSetGenericTrackIdentifiers
|| __TEXT.__text _MRSystemAppPlaybackQueueSetGeniusSeedTrack
|| __TEXT.__text _MRSystemAppPlaybackQueueSetIsRequestingImmediatePlayback
|| __TEXT.__text _MRSystemAppPlaybackQueueSetLocalQueryData
|| __TEXT.__text _MRSystemAppPlaybackQueueSetLocalQueryFirstItemMultiverseIDData
|| __TEXT.__text _MRSystemAppPlaybackQueueSetLocalQueryFirstItemPID
|| __TEXT.__text _MRSystemAppPlaybackQueueSetLocalQueryRepeatMode
|| __TEXT.__text _MRSystemAppPlaybackQueueSetLocalQueryShuffleMode
|| __TEXT.__text _MRSystemAppPlaybackQueueSetRadioStationIDType
|| __TEXT.__text _MRSystemAppPlaybackQueueSetRadioStationIntegerPID
|| __TEXT.__text _MRSystemAppPlaybackQueueSetRadioStationStringIdentifier
|| __TEXT.__text _MRSystemAppPlaybackQueueSetReplaceIntent
|| __TEXT.__text _MRSystemAppPlaybackQueueSetShouldOverrideManuallyCuratedQueue
|| __TEXT.__text _MRSystemAppPlaybackQueueSetSiriAssetInfo
|| __TEXT.__text _MRSystemAppPlaybackQueueSetSiriRecommendationIdentifier
|| __TEXT.__text _MRSystemAppPlaybackQueueSetSiriWHAMetricsInfo
|| __TEXT.__text _MRSystemAppPlaybackQueueSetTracklistCollectionIdentifierSetData
|| __TEXT.__text _MRSystemAppPlaybackQueueSetTracklistRepeatMode
|| __TEXT.__text _MRSystemAppPlaybackQueueSetTracklistShuffleMode
|| __TEXT.__text _MRSystemAppPlaybackQueueSetTracklistStoreIDs
|| __TEXT.__text _MRSystemAppPlaybackQueueSetUserInfo
|| __TEXT.__text _MRSystemAppPlaybackQueueShouldOverrideManuallyCuratedQueue
|| __TEXT.__text _MRTelevisionConnect
|| __TEXT.__text _MRTelevisionControllerBeginDiscovery
|| __TEXT.__text _MRTelevisionControllerCreate
|| __TEXT.__text _MRTelevisionControllerEndDiscovery
|| __TEXT.__text _MRTelevisionControllerIsDiscoveringDevices
|| __TEXT.__text _MRTelevisionControllerSetDiscoveryCallback
|| __TEXT.__text _MRTelevisionControllerSetRemovalCallback
|| __TEXT.__text _MRTelevisionCopyCustomOrigin
|| __TEXT.__text _MRTelevisionCopyHostName
|| __TEXT.__text _MRTelevisionCopyName
|| __TEXT.__text _MRTelevisionCopySystemBuildVersion
|| __TEXT.__text _MRTelevisionCopyUniqueIdentifier
|| __TEXT.__text _MRTelevisionDeletePairedDevice
|| __TEXT.__text _MRTelevisionDisconnect
|| __TEXT.__text _MRTelevisionGetConnectionState
|| __TEXT.__text _MRTelevisionGetCurrentRTISourceSession
|| __TEXT.__text _MRTelevisionGetCurrentTextEditingSession
|| __TEXT.__text _MRTelevisionGetGameControllerInputMode
|| __TEXT.__text _MRTelevisionGetHiliteMode
|| __TEXT.__text _MRTelevisionGetNetworkPort
|| __TEXT.__text _MRTelevisionGetPairedTelevisions
|| __TEXT.__text _MRTelevisionGetVoiceRecordingState
|| __TEXT.__text _MRTelevisionIsConnected
|| __TEXT.__text _MRTelevisionIsPaired
|| __TEXT.__text _MRTelevisionIsPairingAllowed
|| __TEXT.__text _MRTelevisionPing
|| __TEXT.__text _MRTelevisionProcessVirtualVoiceInputAudioData
|| __TEXT.__text _MRTelevisionRegisterGameController
|| __TEXT.__text _MRTelevisionRegisterGameControllerWithProperties
|| __TEXT.__text _MRTelevisionRegisterVirtualTouchDevice
|| __TEXT.__text _MRTelevisionRegisterVirtualVoiceInputDevice
|| __TEXT.__text _MRTelevisionRequestHiliteModeExit
|| __TEXT.__text _MRTelevisionSendButtonEvent
|| __TEXT.__text _MRTelevisionSendCustomData
|| __TEXT.__text _MRTelevisionSendGameControllerEvent
|| __TEXT.__text _MRTelevisionSendGameControllerEventV2
|| __TEXT.__text _MRTelevisionSendHIDEvent
|| __TEXT.__text _MRTelevisionSendVirtualTouchEvent
|| __TEXT.__text _MRTelevisionServiceDeletePairedDevice
|| __TEXT.__text _MRTelevisionServiceDeletePairingIdentity
|| __TEXT.__text _MRTelevisionServiceGetEndpoint
|| __TEXT.__text _MRTelevisionServiceGetPairedDevices
|| __TEXT.__text _MRTelevisionServiceSendCustomData
|| __TEXT.__text _MRTelevisionServiceSetCustomDataCallback
|| __TEXT.__text _MRTelevisionServiceSetEndpoint
|| __TEXT.__text _MRTelevisionServiceSetMessageLogging
|| __TEXT.__text _MRTelevisionSetConnectionStateCallback
|| __TEXT.__text _MRTelevisionSetCustomDataCallback
|| __TEXT.__text _MRTelevisionSetGameControllerInputModeCallback
|| __TEXT.__text _MRTelevisionSetGameControllerPropertiesCallback
|| __TEXT.__text _MRTelevisionSetHiliteModeCallback
|| __TEXT.__text _MRTelevisionSetName
|| __TEXT.__text _MRTelevisionSetNameCallback
|| __TEXT.__text _MRTelevisionSetPairingAllowedCallback
|| __TEXT.__text _MRTelevisionSetPairingCallback
|| __TEXT.__text _MRTelevisionSetPinPairingCallback
|| __TEXT.__text _MRTelevisionSetRTICallback
|| __TEXT.__text _MRTelevisionSetTextEditingCallback
|| __TEXT.__text _MRTelevisionSetVoiceRecordingStateCallback
|| __TEXT.__text _MRTelevisionSetWantsNowPlayingArtworkUpdates
|| __TEXT.__text _MRTelevisionSetWantsNowPlayingUpdates
|| __TEXT.__text _MRTelevisionSetWantsVolumeControlAvailabilityUpdates
|| __TEXT.__text _MRTelevisionTextEditingClearText
|| __TEXT.__text _MRTelevisionTextEditingDeleteBackward
|| __TEXT.__text _MRTelevisionTextEditingInsert
|| __TEXT.__text _MRTelevisionTextEditingSetText
|| __TEXT.__text _MRTelevisionUnpair
|| __TEXT.__text _MRTelevisionUnregisterGameController
|| __TEXT.__text _MRTelevisionWake
|| __TEXT.__text _MRTextEditingAttributesCreate
|| __TEXT.__text _MRTextEditingAttributesGetInputTraits
|| __TEXT.__text _MRTextEditingAttributesGetPrompt
|| __TEXT.__text _MRTextEditingAttributesGetTitle
|| __TEXT.__text _MRTextEditingAttributesSetInputTraits
|| __TEXT.__text _MRTextEditingSessionCreate
|| __TEXT.__text _MRTextEditingSessionGetAttributes
|| __TEXT.__text _MRTextEditingSessionGetText
|| __TEXT.__text _MRTextEditingSessionGetUniqueIdentifier
|| __TEXT.__text _MRTextEditingSessionIsEditing
|| __TEXT.__text _MRTimeUtilitiesGetProcessorTimeScale
|| __TEXT.__text _MRTimeUtilsGetCurrentMilliseconds
|| __TEXT.__text _MRTimeUtilsGetCurrentNanoseconds
|| __TEXT.__text _MRTimeUtilsGetCurrentSeconds
|| __TEXT.__text _MRTransactionNameGetDescription
|| __TEXT.__text _MRTransactionPacketsCreateExternalRepresentation
|| __TEXT.__text _MRTransactionPacketsCreateFromExternalRepresentation
|| __TEXT.__text _MRTransactionPacketsGetKeys
|| __TEXT.__text _MRTransactionPacketsGetShallowCopy
|| __TEXT.__text _MRTypeAuditNowPlayingInfoDictionary
|| __TEXT.__text _MRUniversalTrackIdentifierBaseIDIntegerFromURL
|| __TEXT.__text _MRUniversalTrackIdentifierCopyBaseIDFromURL
|| __TEXT.__text _MRUniversalTrackIdentifierCopyTypeDescription
|| __TEXT.__text _MRUniversalTrackIdentifierCreateURL
|| __TEXT.__text _MRUniversalTrackIdentifierCreateURLWithIntegerBaseID
|| __TEXT.__text _MRUniversalTrackIdentifierTypeFromURL
|| __TEXT.__text _MRVideoThumbnailCreate
|| __TEXT.__text _MRVideoThumbnailCreateExternalRepresentation
|| __TEXT.__text _MRVideoThumbnailCreateFromExternalRepresentation
|| __TEXT.__text _MRVideoThumbnailGetImageData
|| __TEXT.__text _MRVideoThumbnailGetTime
|| __TEXT.__text _MRVideoThumbnailRequestFromXPCMessage
|| __TEXT.__text _MRVirtualTouchDeviceDescriptorCreate
|| __TEXT.__text _MRVirtualTouchDeviceDescriptorGetScreenSize
|| __TEXT.__text _MRVirtualTouchDeviceDescriptorIsAbsolute
|| __TEXT.__text _MRVirtualTouchDeviceDescriptorIsDisplayIntegrated
|| __TEXT.__text _MRVirtualTouchDeviceDescriptorSetDisplayIntegrated
|| __TEXT.__text _MRVirtualTouchDeviceDescriptorSetIsAbsolute
|| __TEXT.__text _MRVirtualTouchDeviceDescriptorSetScreenSize
|| __TEXT.__text _MRVirtualVoiceInputDeviceCreate
|| __TEXT.__text _MRVirtualVoiceInputDeviceCreateExternalRepresentation
|| __TEXT.__text _MRVirtualVoiceInputDeviceCreateWithExternalRepresentation
|| __TEXT.__text _MRVirtualVoiceInputDeviceDescriptorCopyDefaultFormat
|| __TEXT.__text _MRVirtualVoiceInputDeviceDescriptorCopySupportedFormats
|| __TEXT.__text _MRVirtualVoiceInputDeviceDescriptorCreate
|| __TEXT.__text _MRVirtualVoiceInputDeviceDescriptorCreateExternalRepresentation
|| __TEXT.__text _MRVirtualVoiceInputDeviceDescriptorCreateFromExternalRepresentation
|| __TEXT.__text _MRVirtualVoiceInputDeviceDescriptorSetDefaultAudioFormat
|| __TEXT.__text _MRVirtualVoiceInputDeviceDescriptorSetSupportedFormats
|| __TEXT.__text _MRVirtualVoiceInputDeviceGetDescriptor
|| __TEXT.__text _MRVirtualVoiceInputDeviceGetRecordingState
|| __TEXT.__text _MRVirtualVoiceInputDeviceGetUniqueIdentifier
|| __TEXT.__text _MRVirtualVoiceInputGetDevices
|| __TEXT.__text _MRVirtualVoiceInputProcessAudioData
|| __TEXT.__text _MRVirtualVoiceInputRegisterDevice
|| __TEXT.__text _MRVirtualVoiceInputSetRecordingEndpoint
|| __TEXT.__text _MRVirtualVoiceInputSetRecordingState
|| __TEXT.__text _MRVirtualVoiceInputSetRecordingStateCallback
|| __TEXT.__text _MRVirtualVoiceInputUnregisterDevice
|| __TEXT.__text _MRVoiceRecordingStateCopyDescription
|| __TEXT.__text _NSStringFromMRAVDistantExternalDeviceCallbackFlags
|| __TEXT.__text _NSStringFromMRAVDistantExternalDeviceNotificationFlags
|| __TEXT.__text _NSStringFromMRAVEndpointConnectionType
|| __TEXT.__text __MRAVAirPlaySecuritySettingsProtobufReadFrom
|| __TEXT.__text __MRAVEndpointDescriptorProtobufReadFrom
|| __TEXT.__text __MRAVModifyOutputContextRequestProtobufReadFrom
|| __TEXT.__text __MRAVOutputDeviceDescriptorProtobufReadFrom
|| __TEXT.__text __MRAVOutputDeviceSourceInfoProtobufReadFrom
|| __TEXT.__text __MRAVRouteQueryProtobufReadFrom
|| __TEXT.__text __MRApplicationActivityCreateExternalRepresentation
|| __TEXT.__text __MRApplicationActivityCreateWithExternalRepresentation
|| __TEXT.__text __MRApplicationActivitySetStatus
|| __TEXT.__text __MRAudioBufferProtobufReadFrom
|| __TEXT.__text __MRAudioDataBlockProtobufReadFrom
|| __TEXT.__text __MRAudioFormatSettingsProtobufReadFrom
|| __TEXT.__text __MRAudioStreamPacketDescriptionProtobufReadFrom
|| __TEXT.__text __MRAudioTimeProtobufReadFrom
|| __TEXT.__text __MRClientUpdatesConfigurationProtobufReadFrom
|| __TEXT.__text __MRColorProtobufReadFrom
|| __TEXT.__text __MRCommandInfoProtobufReadFrom
|| __TEXT.__text __MRCommandOptionsProtobufReadFrom
|| __TEXT.__text __MRContentItemMetadataProtobufReadFrom
|| __TEXT.__text __MRContentItemProtobufReadFrom
|| __TEXT.__text __MRCryptoPairingMessageProtobufReadFrom
|| __TEXT.__text __MRDeviceInfoMessageProtobufReadFrom
|| __TEXT.__text __MRDiagnosticProtobufReadFrom
|| __TEXT.__text __MRGameControllerAccelerationProtobufReadFrom
|| __TEXT.__text __MRGameControllerButtonsProtobufReadFrom
|| __TEXT.__text __MRGameControllerDigitizerProtobufReadFrom
|| __TEXT.__text __MRGameControllerMessageProtobufReadFrom
|| __TEXT.__text __MRGameControllerMotionProtobufReadFrom
|| __TEXT.__text __MRGameControllerPropertiesMessageProtobufReadFrom
|| __TEXT.__text __MRGameControllerPropertiesProtobufReadFrom
|| __TEXT.__text __MRGenericMessageProtobufReadFrom
|| __TEXT.__text __MRGetKeyboardSessionProtobufReadFrom
|| __TEXT.__text __MRGetRemoteTextInputSessionProtobufReadFrom
|| __TEXT.__text __MRGetStateMessageProtobufReadFrom
|| __TEXT.__text __MRGetVoiceInputDevicesMessageProtobufReadFrom
|| __TEXT.__text __MRGetVoiceInputDevicesResponseMessageProtobufReadFrom
|| __TEXT.__text __MRGetVolumeControlCapabilitiesMessageProtobufReadFrom
|| __TEXT.__text __MRGetVolumeControlCapabilitiesResultMessageProtobufReadFrom
|| __TEXT.__text __MRGetVolumeMessageProtobufReadFrom
|| __TEXT.__text __MRGetVolumeResultMessageProtobufReadFrom
|| __TEXT.__text __MRKeyboardMessageProtobufReadFrom
|| __TEXT.__text __MRLanguageOptionGroupProtobufReadFrom
|| __TEXT.__text __MRLanguageOptionProtobufReadFrom
|| __TEXT.__text __MRLogForCategory
|| __TEXT.__text __MRLyricsEventProtobufReadFrom
|| __TEXT.__text __MRLyricsItemProtobufReadFrom
|| __TEXT.__text __MRLyricsTokenProtobufReadFrom
|| __TEXT.__text __MRMediaRemoteMessageProtobufReadFrom
|| __TEXT.__text __MRMediaRemoteRegisterForNowPlayingNotificationsEx
|| __TEXT.__text __MRNotificationMessageProtobufReadFrom
|| __TEXT.__text __MRNowPlayingClientProtobufReadFrom
|| __TEXT.__text __MRNowPlayingInfoProtobufReadFrom
|| __TEXT.__text __MRNowPlayingPlayerPathProtobufReadFrom
|| __TEXT.__text __MRNowPlayingPlayerProtobufReadFrom
|| __TEXT.__text __MROriginCreate
|| __TEXT.__text __MROriginCreateExternalRepresentation
|| __TEXT.__text __MROriginCreateFromExternalRepresentation
|| __TEXT.__text __MROriginCreateStaticInstance
|| __TEXT.__text __MROriginProtobufReadFrom
|| __TEXT.__text __MRPlaybackQueueCapabilitiesCreateProtobuf
|| __TEXT.__text __MRPlaybackQueueCapabilitiesFromProto
|| __TEXT.__text __MRPlaybackQueueCapabilitiesProtobufReadFrom
|| __TEXT.__text __MRPlaybackQueueContextProtobufReadFrom
|| __TEXT.__text __MRPlaybackQueueProtobufReadFrom
|| __TEXT.__text __MRPlaybackQueueRequestProtobufReadFrom
|| __TEXT.__text __MRPlaybackSessionMigrateBeginMessageProtobufReadFrom
|| __TEXT.__text __MRPlaybackSessionMigrateEndMessageProtobufReadFrom
|| __TEXT.__text __MRPlaybackSessionMigrateRequestEventProtobufReadFrom
|| __TEXT.__text __MRPlaybackSessionMigrateRequestMessageProtobufReadFrom
|| __TEXT.__text __MRPlaybackSessionMigrateRequestProtobufReadFrom
|| __TEXT.__text __MRPlaybackSessionMigrateResponseMessageProtobufReadFrom
|| __TEXT.__text __MRPlaybackSessionProtobufReadFrom
|| __TEXT.__text __MRPlaybackSessionRequestMessageProtobufReadFrom
|| __TEXT.__text __MRPlaybackSessionRequestProtobufReadFrom
|| __TEXT.__text __MRPlaybackSessionResponseMessageProtobufReadFrom
|| __TEXT.__text __MRPresentRouteAuthorizationStatusMessageProtobufReadFrom
|| __TEXT.__text __MRPromptForRouteAuthorizationMessageProtobufReadFrom
|| __TEXT.__text __MRPromptForRouteAuthorizationResponseMessageProtobufReadFrom
|| __TEXT.__text __MRReceivedCommandAppOptionsProtobufReadFrom
|| __TEXT.__text __MRReceivedCommandProtobufReadFrom
|| __TEXT.__text __MRRegisterForGameControllerEventsMessageProtobufReadFrom
|| __TEXT.__text __MRRegisterGameControllerMessageProtobufReadFrom
|| __TEXT.__text __MRRegisterGameControllerResponseMessageProtobufReadFrom
|| __TEXT.__text __MRRegisterHIDDeviceMessageProtobufReadFrom
|| __TEXT.__text __MRRegisterHIDDeviceResultMessageProtobufReadFrom
|| __TEXT.__text __MRRegisterVoiceInputDeviceMessageProtobufReadFrom
|| __TEXT.__text __MRRegisterVoiceInputDeviceResponseMessageProtobufReadFrom
|| __TEXT.__text __MRRemoteTextInputMessageProtobufReadFrom
|| __TEXT.__text __MRRemoveClientMessageProtobufReadFrom
|| __TEXT.__text __MRRemoveOutputDevicesMessageProtobufReadFrom
|| __TEXT.__text __MRRemovePlayerMessageProtobufReadFrom
|| __TEXT.__text __MRSendButtonEventMessageProtobufReadFrom
|| __TEXT.__text __MRSendCommandMessageProtobufReadFrom
|| __TEXT.__text __MRSendCommandResultMessageProtobufReadFrom
|| __TEXT.__text __MRSendHIDEventMessageProtobufReadFrom
|| __TEXT.__text __MRSendHIDReportMessageProtobufReadFrom
|| __TEXT.__text __MRSendLyricsEventMessageProtobufReadFrom
|| __TEXT.__text __MRSendPackedVirtualTouchEventMessageProtobufReadFrom
|| __TEXT.__text __MRSendVirtualTouchEventMessageProtobufReadFrom
|| __TEXT.__text __MRSendVoiceInputMessageProtobufReadFrom
|| __TEXT.__text __MRSetArtworkMessageProtobufReadFrom
|| __TEXT.__text __MRSetConnectionStateMessageProtobufReadFrom
|| __TEXT.__text __MRSetHiliteModeMessageProtobufReadFrom
|| __TEXT.__text __MRSetNowPlayingClientMessageProtobufReadFrom
|| __TEXT.__text __MRSetNowPlayingPlayerMessageProtobufReadFrom
|| __TEXT.__text __MRSetReadyStateMessageProtobufReadFrom
|| __TEXT.__text __MRSetRecordingStateMessageProtobufReadFrom
|| __TEXT.__text __MRSetStateMessageProtobufReadFrom
|| __TEXT.__text __MRSetVolumeMessageProtobufReadFrom
|| __TEXT.__text __MRSupportedCommandsProtobufReadFrom
|| __TEXT.__text __MRTextEditingAttributesProtobufReadFrom
|| __TEXT.__text __MRTextInputMessageProtobufReadFrom
|| __TEXT.__text __MRTextInputTraitsProtobufReadFrom
|| __TEXT.__text __MRTransactionKeyProtobufReadFrom
|| __TEXT.__text __MRTransactionMessageProtobufReadFrom
|| __TEXT.__text __MRTransactionPacketProtobufReadFrom
|| __TEXT.__text __MRTransactionPacketsProtobufReadFrom
|| __TEXT.__text __MRUnregisterGameControllerMessageProtobufReadFrom
|| __TEXT.__text __MRUpdateClientMessageProtobufReadFrom
|| __TEXT.__text __MRUpdateContentItemArtworkMessageProtobufReadFrom
|| __TEXT.__text __MRUpdateContentItemMessageProtobufReadFrom
|| __TEXT.__text __MRUpdateOutputDevicesMessageProtobufReadFrom
|| __TEXT.__text __MRUpdatePlayerMessageProtobufReadFrom
|| __TEXT.__text __MRVideoThumbnailProtobufReadFrom
|| __TEXT.__text __MRVideoThumbnailRequestProtobufReadFrom
|| __TEXT.__text __MRVirtualTouchDeviceDescriptorProtobufReadFrom
|| __TEXT.__text __MRVirtualTouchEventProtobufReadFrom
|| __TEXT.__text __MRVoiceInputDeviceDescriptorProtobufReadFrom
|| __TEXT.__text __MRVoiceInputDeviceReadFrom
|| __TEXT.__text __MRVolumeControlAvailabilityProtobufReadFrom
|| __TEXT.__text __MRVolumeControlCapabilitiesDidChangeMessageProtobufReadFrom
|| __TEXT.__text __MRVolumeDidChangeMessageProtobufReadFrom
|| __TEXT.__text __MRWakeDeviceMessageProtobufReadFrom
|| __TEXT.__text __onQueue_MRMediaRemotePlaybackQueueDataSourceContentItemsChangedForPlayer
__ CFNetwork: _OBJC_CLASS_$_NSNetService
__ CFNetwork: _OBJC_CLASS_$_NSNetServiceBrowser
__ CFNetwork: __kCFStreamSocketSetNoDelay
__ CFNetwork: _kCFStreamPropertyIndefiniteConnection
__ CoreFoundation: _CFAllocatorAllocate
__ CoreFoundation: _CFAllocatorDeallocate
__ CoreFoundation: _CFArrayCreateCopy
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFBooleanGetTypeID
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFCopyTypeIDDescription
__ CoreFoundation: _CFDataCreate
__ CoreFoundation: _CFDataCreateMutable
__ CoreFoundation: _CFDataGetBytePtr
__ CoreFoundation: _CFDataGetBytes
__ CoreFoundation: _CFDataGetLength
__ CoreFoundation: _CFDataGetTypeID
__ CoreFoundation: _CFDateCreate
__ CoreFoundation: _CFDateGetAbsoluteTime
__ CoreFoundation: _CFDateGetTypeID
__ CoreFoundation: _CFDictionaryAddValue
__ CoreFoundation: _CFDictionaryApplyFunction
__ CoreFoundation: _CFDictionaryContainsKey
__ CoreFoundation: _CFDictionaryCreateCopy
__ CoreFoundation: _CFDictionaryCreateMutableCopy
__ CoreFoundation: _CFDictionaryGetCount
__ CoreFoundation: _CFDictionaryGetTypeID
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFDictionaryRemoveValue
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFErrorCopyDescription
__ CoreFoundation: _CFErrorCopyUserInfo
__ CoreFoundation: _CFErrorCreate
__ CoreFoundation: _CFErrorGetCode
__ CoreFoundation: _CFErrorGetDomain
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFNumberCreate
__ CoreFoundation: _CFNumberGetTypeID
__ CoreFoundation: _CFNumberGetValue
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFPreferencesSetAppValue
__ CoreFoundation: _CFPropertyListCreateData
__ CoreFoundation: _CFPropertyListCreateWithData
__ CoreFoundation: _CFPropertyListIsValid
__ CoreFoundation: _CFReadStreamCopyProperty
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFStringAppend
__ CoreFoundation: _CFStringAppendFormat
__ CoreFoundation: _CFStringCompare
__ CoreFoundation: _CFStringCreateCopy
__ CoreFoundation: _CFStringCreateMutable
__ CoreFoundation: _CFStringCreateWithBytesNoCopy
__ CoreFoundation: _CFStringCreateWithFormat
__ CoreFoundation: _CFStringGetTypeID
__ CoreFoundation: _CFURLCopyLastPathComponent
__ CoreFoundation: _CFURLCreateWithString
__ CoreFoundation: _CFURLGetBaseURL
__ CoreFoundation: _CFURLGetString
__ CoreFoundation: _CFURLGetTypeID
__ CoreFoundation: _CFUUIDCreateFromString
__ CoreFoundation: _CFWriteStreamCopyProperty
__ CoreFoundation: _NSDefaultRunLoopMode
__ CoreFoundation: _NSGenericException
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSRangeException
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSInputStream
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMethodSignature
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSOutputStream
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: _OBJC_METACLASS_$_NSInputStream
__ CoreFoundation: _OBJC_METACLASS_$_NSOutputStream
__ CoreFoundation: __CFRuntimeCreateInstance
__ CoreFoundation: __CFRuntimeRegisterClass
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanFalse
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFBundleVersionKey
__ CoreFoundation: _kCFStreamPropertySocketNativeHandle
__ CoreGraphics: _CGBitmapContextCreate
__ CoreGraphics: _CGBitmapContextGetBytesPerRow
__ CoreGraphics: _CGBitmapContextGetData
__ CoreGraphics: _CGColorSpaceCreateDeviceGray
__ CoreGraphics: _CGColorSpaceRelease
__ CoreGraphics: _CGContextDrawImage
__ CoreGraphics: _CGContextRelease
__ CoreGraphics: _CGContextRestoreGState
__ CoreGraphics: _CGContextSaveGState
__ CoreGraphics: _CGImageGetHeight
__ CoreGraphics: _CGImageGetWidth
__ CoreServices: _OBJC_CLASS_$_LSApplicationProxy
__ CoreServices: _OBJC_CLASS_$_LSBundleProxy
__ Foundation: _NSDebugDescriptionErrorKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSOSStatusErrorDomain
__ Foundation: _NSSelectorFromString
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotification
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPointerArray
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSXPCCoder
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_CLASS_$_NSXPCListenerEndpoint
__ IOKit: _IOHIDEventCreateData
__ ImageIO: _CGImageDestinationCreateWithData
__ ImageIO: _CGImageDestinationFinalize
__ ImageIO: _CGImageSourceCreateImageAtIndex
__ ImageIO: _CGImageSourceCreateWithData
__ ManagedConfiguration: _MCFeatureTVRemoteAllowedTVs
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ MediaServices: _MSVArchivedDataWithRootObject
__ MediaServices: _MSVBundleIDForPID
__ MediaServices: _MSVCopyDeviceName
__ MediaServices: _MSVCopyLocalizedModelName
__ MediaServices: _MSVCryptoDigestForString
__ MediaServices: _MSVDeviceIsAppleTV
__ MediaServices: _MSVDeviceIsAudioAccessory
__ MediaServices: _MSVDeviceOSIsInternalInstall
__ MediaServices: _MSVImageUtilitiesResizeSourceImageToDestination
__ MediaServices: _MSVMobileHomeDirectory
__ MediaServices: _MSVProcessNameForPID
__ MediaServices: _MSVPropertyListDataClasses
__ MediaServices: _MSVUnarchivedObjectOfClass
__ MediaServices: _MSVUnarchivedObjectOfClasses
__ MediaServices: _MSVWeakLinkClass
__ MediaServices: _MSVWeakLinkStringConstant
__ MediaServices: _MSVWeakLinkSymbol
__ MediaServices: _OBJC_CLASS_$_MSVBlockGuard
__ MediaServices: _OBJC_CLASS_$_MSVBloomFilter
__ MediaServices: _OBJC_CLASS_$_MSVCallback
__ MediaServices: _OBJC_CLASS_$_MSVMessageParser
__ MediaServices: _OBJC_CLASS_$_MSVMultiCallback
__ MediaServices: _OBJC_CLASS_$_MSVMutableBidirectionalDictionary
__ MediaServices: _OBJC_CLASS_$_MSVPair
__ MediaServices: _OBJC_CLASS_$_MSVTimer
__ MediaServices: _OBJC_METACLASS_$_MSVBlockGuard
__ MediaServices: _msv_dispatch_async_on_queue
__ MediaServices: _msv_dispatch_sync_on_queue
__ ProtocolBuffer: _OBJC_CLASS_$_PBCodable
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._bytes
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._error
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._length
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._pos
__ ProtocolBuffer: _OBJC_METACLASS_$_PBCodable
__ ProtocolBuffer: _PBDataWriterWriteBOOLField
__ ProtocolBuffer: _PBDataWriterWriteDataField
__ ProtocolBuffer: _PBDataWriterWriteDoubleField
__ ProtocolBuffer: _PBDataWriterWriteFloatField
__ ProtocolBuffer: _PBDataWriterWriteInt32Field
__ ProtocolBuffer: _PBDataWriterWriteInt64Field
__ ProtocolBuffer: _PBDataWriterWriteStringField
__ ProtocolBuffer: _PBDataWriterWriteSubmessage
__ ProtocolBuffer: _PBDataWriterWriteUint32Field
__ ProtocolBuffer: _PBDataWriterWriteUint64Field
__ ProtocolBuffer: _PBReaderPlaceMark
__ ProtocolBuffer: _PBReaderReadData
__ ProtocolBuffer: _PBReaderReadString
__ ProtocolBuffer: _PBReaderRecallMark
__ ProtocolBuffer: _PBReaderSkipValueWithTag
__ ProtocolBuffer: _PBRepeatedDoubleAdd
__ ProtocolBuffer: _PBRepeatedDoubleClear
__ ProtocolBuffer: _PBRepeatedDoubleCopy
__ ProtocolBuffer: _PBRepeatedDoubleHash
__ ProtocolBuffer: _PBRepeatedDoubleIsEqual
__ ProtocolBuffer: _PBRepeatedDoubleNSArray
__ ProtocolBuffer: _PBRepeatedDoubleSet
__ ProtocolBuffer: _PBRepeatedFloatAdd
__ ProtocolBuffer: _PBRepeatedFloatClear
__ ProtocolBuffer: _PBRepeatedFloatCopy
__ ProtocolBuffer: _PBRepeatedFloatHash
__ ProtocolBuffer: _PBRepeatedFloatIsEqual
__ ProtocolBuffer: _PBRepeatedFloatNSArray
__ ProtocolBuffer: _PBRepeatedFloatSet
__ ProtocolBuffer: _PBRepeatedInt32Add
__ ProtocolBuffer: _PBRepeatedInt32Clear
__ ProtocolBuffer: _PBRepeatedInt32Copy
__ ProtocolBuffer: _PBRepeatedInt32Hash
__ ProtocolBuffer: _PBRepeatedInt32IsEqual
__ ProtocolBuffer: _PBRepeatedInt32NSArray
__ ProtocolBuffer: _PBRepeatedInt32Set
__ ProtocolBuffer: _PBRepeatedUInt32Add
__ ProtocolBuffer: _PBRepeatedUInt32Clear
__ ProtocolBuffer: _PBRepeatedUInt32Copy
__ ProtocolBuffer: _PBRepeatedUInt32Hash
__ ProtocolBuffer: _PBRepeatedUInt32IsEqual
__ ProtocolBuffer: _PBRepeatedUInt32NSArray
__ ProtocolBuffer: _PBRepeatedUInt32Set
__ ProtocolBuffer: _PBRepeatedUInt64Add
__ ProtocolBuffer: _PBRepeatedUInt64Clear
__ ProtocolBuffer: _PBRepeatedUInt64Copy
__ ProtocolBuffer: _PBRepeatedUInt64Hash
__ ProtocolBuffer: _PBRepeatedUInt64IsEqual
__ ProtocolBuffer: _PBRepeatedUInt64NSArray
__ ProtocolBuffer: _PBRepeatedUInt64Set
__ RemoteTextInput: _OBJC_CLASS_$_RTIDataPayload
__ RemoteTextInput: _OBJC_CLASS_$_RTIInputSystemSourceSession
__ Security: _SecRandomCopyBytes
__ Security: _SecTaskCopyValuesForEntitlements
__ Security: _SecTaskCreateFromSelf
__ Security: _kSecRandomDefault
__ libMobileGestalt.dylib: _MGGetSInt32Answer
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __xpc_error_connection_interrupted
__ libSystem.B.dylib: __xpc_error_connection_invalid
__ libSystem.B.dylib: __xpc_error_key_description
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_block_create_with_qos_class
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_queue_create_with_target$V2
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_suspend
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _fmod
__ libSystem.B.dylib: _fmodf
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _kdebug_trace
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _mach_timebase_info
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _notify_is_valid_token
__ libSystem.B.dylib: _notify_post
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_transaction_copy_description
__ libSystem.B.dylib: _os_transaction_create
__ libSystem.B.dylib: _qos_class_self
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _strncmp
__ libSystem.B.dylib: _xpc_connection_cancel
__ libSystem.B.dylib: _xpc_connection_create_mach_service
__ libSystem.B.dylib: _xpc_connection_get_pid
__ libSystem.B.dylib: _xpc_connection_resume
__ libSystem.B.dylib: _xpc_connection_send_message
__ libSystem.B.dylib: _xpc_connection_send_message_with_reply
__ libSystem.B.dylib: _xpc_connection_send_message_with_reply_sync
__ libSystem.B.dylib: _xpc_connection_set_context
__ libSystem.B.dylib: _xpc_connection_set_event_handler
__ libSystem.B.dylib: _xpc_connection_set_target_queue
__ libSystem.B.dylib: _xpc_copy_description
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_create_reply
__ libSystem.B.dylib: _xpc_dictionary_get_bool
__ libSystem.B.dylib: _xpc_dictionary_get_data
__ libSystem.B.dylib: _xpc_dictionary_get_double
__ libSystem.B.dylib: _xpc_dictionary_get_int64
__ libSystem.B.dylib: _xpc_dictionary_get_remote_connection
__ libSystem.B.dylib: _xpc_dictionary_get_string
__ libSystem.B.dylib: _xpc_dictionary_get_uint64
__ libSystem.B.dylib: _xpc_dictionary_get_value
__ libSystem.B.dylib: _xpc_dictionary_set_bool
__ libSystem.B.dylib: _xpc_dictionary_set_data
__ libSystem.B.dylib: _xpc_dictionary_set_double
__ libSystem.B.dylib: _xpc_dictionary_set_int64
__ libSystem.B.dylib: _xpc_dictionary_set_string
__ libSystem.B.dylib: _xpc_dictionary_set_uint64
__ libSystem.B.dylib: _xpc_dictionary_set_value
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _class_addMethod
__ libobjc.A.dylib: _class_getInstanceMethod
__ libobjc.A.dylib: _class_getName
__ libobjc.A.dylib: _class_replaceMethod
__ libobjc.A.dylib: _method_exchangeImplementations
__ libobjc.A.dylib: _method_getImplementation
__ libobjc.A.dylib: _method_getTypeEncoding
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _protocol_getMethodDescription
_MRVideoThumbnailRequestProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  unsigned long timeIntervalsCount
 @property  ^d timeIntervals
 @property  BOOL hasThumbnailsWidth
 @property  float thumbnailsWidth
 @property  BOOL hasThumbnailsHeight
 @property  float thumbnailsHeight

  // instance methods
  -[_MRVideoThumbnailRequestProtobuf dealloc]
  -[_MRVideoThumbnailRequestProtobuf isEqual:]
  -[_MRVideoThumbnailRequestProtobuf copyWithZone:]
  -[_MRVideoThumbnailRequestProtobuf dictionaryRepresentation]
  -[_MRVideoThumbnailRequestProtobuf writeTo:]
  -[_MRVideoThumbnailRequestProtobuf mergeFrom:]
  -[_MRVideoThumbnailRequestProtobuf readFrom:]
  -[_MRVideoThumbnailRequestProtobuf copyTo:]
  -[_MRVideoThumbnailRequestProtobuf timeIntervalsCount]
  -[_MRVideoThumbnailRequestProtobuf clearTimeIntervals]
  -[_MRVideoThumbnailRequestProtobuf timeIntervalsAtIndex:]
  -[_MRVideoThumbnailRequestProtobuf addTimeIntervals:]
  -[_MRVideoThumbnailRequestProtobuf timeIntervals]
  -[_MRVideoThumbnailRequestProtobuf setTimeIntervals:count:]
  -[_MRVideoThumbnailRequestProtobuf setThumbnailsWidth:]
  -[_MRVideoThumbnailRequestProtobuf setHasThumbnailsWidth:]
  -[_MRVideoThumbnailRequestProtobuf hasThumbnailsWidth]
  -[_MRVideoThumbnailRequestProtobuf setThumbnailsHeight:]
  -[_MRVideoThumbnailRequestProtobuf setHasThumbnailsHeight:]
  -[_MRVideoThumbnailRequestProtobuf hasThumbnailsHeight]
  -[_MRVideoThumbnailRequestProtobuf thumbnailsWidth]
  -[_MRVideoThumbnailRequestProtobuf thumbnailsHeight]


_MRPlaybackQueueRequestProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasLocation
 @property  int location
 @property  BOOL hasLength
 @property  int length
 @property  BOOL hasIncludeMetadata
 @property  BOOL includeMetadata
 @property  BOOL hasArtworkWidth
 @property  double artworkWidth
 @property  BOOL hasArtworkHeight
 @property  double artworkHeight
 @property  BOOL hasIncludeLyrics
 @property  BOOL includeLyrics
 @property  BOOL hasIncludeSections
 @property  BOOL includeSections
 @property  BOOL hasIncludeInfo
 @property  BOOL includeInfo
 @property  BOOL hasIncludeLanguageOptions
 @property  BOOL includeLanguageOptions
 @property  BOOL hasContext
 @property  _MRPlaybackQueueContextProtobuf *context
 @property  BOOL hasRequestID
 @property  NSString *requestID
 @property  NSMutableArray *contentItemIdentifiers
 @property  BOOL hasReturnContentItemAssetsInUserCompletion
 @property  BOOL returnContentItemAssetsInUserCompletion
 @property  BOOL hasPlayerPath
 @property  _MRNowPlayingPlayerPathProtobuf *playerPath
 @property  BOOL hasCachingPolicy
 @property  int cachingPolicy
 @property  BOOL hasLabel
 @property  NSString *label
 @property  BOOL hasIsLegacyNowPlayingInfoRequest
 @property  BOOL isLegacyNowPlayingInfoRequest

  // class methods
  +[_MRPlaybackQueueRequestProtobuf initialize]
  +[_MRPlaybackQueueRequestProtobuf contentItemIdentifiersType]

  // instance methods
  -[_MRPlaybackQueueRequestProtobuf length]
  -[_MRPlaybackQueueRequestProtobuf isEqual:]
  -[_MRPlaybackQueueRequestProtobuf copyWithZone:]
  -[_MRPlaybackQueueRequestProtobuf setLength:]
  -[_MRPlaybackQueueRequestProtobuf .cxx_destruct]
  -[_MRPlaybackQueueRequestProtobuf dictionaryRepresentation]
  -[_MRPlaybackQueueRequestProtobuf context]
  -[_MRPlaybackQueueRequestProtobuf location]
  -[_MRPlaybackQueueRequestProtobuf setContext:]
  -[_MRPlaybackQueueRequestProtobuf writeTo:]
  -[_MRPlaybackQueueRequestProtobuf setLabel:]
  -[_MRPlaybackQueueRequestProtobuf label]
  -[_MRPlaybackQueueRequestProtobuf mergeFrom:]
  -[_MRPlaybackQueueRequestProtobuf readFrom:]
  -[_MRPlaybackQueueRequestProtobuf copyTo:]
  -[_MRPlaybackQueueRequestProtobuf setLocation:]
  -[_MRPlaybackQueueRequestProtobuf hasLabel]
  -[_MRPlaybackQueueRequestProtobuf hasLocation]
  -[_MRPlaybackQueueRequestProtobuf hasLength]
  -[_MRPlaybackQueueRequestProtobuf hasContext]
  -[_MRPlaybackQueueRequestProtobuf setHasLength:]
  -[_MRPlaybackQueueRequestProtobuf requestID]
  -[_MRPlaybackQueueRequestProtobuf customDescription]
  -[_MRPlaybackQueueRequestProtobuf setRequestID:]
  -[_MRPlaybackQueueRequestProtobuf setHasLocation:]
  -[_MRPlaybackQueueRequestProtobuf setPlayerPath:]
  -[_MRPlaybackQueueRequestProtobuf playerPath]
  -[_MRPlaybackQueueRequestProtobuf setIncludeMetadata:]
  -[_MRPlaybackQueueRequestProtobuf includeMetadata]
  -[_MRPlaybackQueueRequestProtobuf artworkWidth]
  -[_MRPlaybackQueueRequestProtobuf setArtworkWidth:]
  -[_MRPlaybackQueueRequestProtobuf addContentItemIdentifiers:]
  -[_MRPlaybackQueueRequestProtobuf contentItemIdentifiersCount]
  -[_MRPlaybackQueueRequestProtobuf clearContentItemIdentifiers]
  -[_MRPlaybackQueueRequestProtobuf contentItemIdentifiersAtIndex:]
  -[_MRPlaybackQueueRequestProtobuf setHasIncludeMetadata:]
  -[_MRPlaybackQueueRequestProtobuf hasIncludeMetadata]
  -[_MRPlaybackQueueRequestProtobuf setHasArtworkWidth:]
  -[_MRPlaybackQueueRequestProtobuf hasArtworkWidth]
  -[_MRPlaybackQueueRequestProtobuf setArtworkHeight:]
  -[_MRPlaybackQueueRequestProtobuf setHasArtworkHeight:]
  -[_MRPlaybackQueueRequestProtobuf hasArtworkHeight]
  -[_MRPlaybackQueueRequestProtobuf setIncludeLyrics:]
  -[_MRPlaybackQueueRequestProtobuf setHasIncludeLyrics:]
  -[_MRPlaybackQueueRequestProtobuf hasIncludeLyrics]
  -[_MRPlaybackQueueRequestProtobuf setIncludeSections:]
  -[_MRPlaybackQueueRequestProtobuf setHasIncludeSections:]
  -[_MRPlaybackQueueRequestProtobuf hasIncludeSections]
  -[_MRPlaybackQueueRequestProtobuf setIncludeInfo:]
  -[_MRPlaybackQueueRequestProtobuf setHasIncludeInfo:]
  -[_MRPlaybackQueueRequestProtobuf hasIncludeInfo]
  -[_MRPlaybackQueueRequestProtobuf setIncludeLanguageOptions:]
  -[_MRPlaybackQueueRequestProtobuf setHasIncludeLanguageOptions:]
  -[_MRPlaybackQueueRequestProtobuf hasIncludeLanguageOptions]
  -[_MRPlaybackQueueRequestProtobuf hasRequestID]
  -[_MRPlaybackQueueRequestProtobuf setReturnContentItemAssetsInUserCompletion:]
  -[_MRPlaybackQueueRequestProtobuf setHasReturnContentItemAssetsInUserCompletion:]
  -[_MRPlaybackQueueRequestProtobuf hasReturnContentItemAssetsInUserCompletion]
  -[_MRPlaybackQueueRequestProtobuf hasPlayerPath]
  -[_MRPlaybackQueueRequestProtobuf setCachingPolicy:]
  -[_MRPlaybackQueueRequestProtobuf setHasCachingPolicy:]
  -[_MRPlaybackQueueRequestProtobuf hasCachingPolicy]
  -[_MRPlaybackQueueRequestProtobuf setIsLegacyNowPlayingInfoRequest:]
  -[_MRPlaybackQueueRequestProtobuf setHasIsLegacyNowPlayingInfoRequest:]
  -[_MRPlaybackQueueRequestProtobuf hasIsLegacyNowPlayingInfoRequest]
  -[_MRPlaybackQueueRequestProtobuf artworkHeight]
  -[_MRPlaybackQueueRequestProtobuf includeLyrics]
  -[_MRPlaybackQueueRequestProtobuf includeSections]
  -[_MRPlaybackQueueRequestProtobuf includeInfo]
  -[_MRPlaybackQueueRequestProtobuf includeLanguageOptions]
  -[_MRPlaybackQueueRequestProtobuf contentItemIdentifiers]
  -[_MRPlaybackQueueRequestProtobuf setContentItemIdentifiers:]
  -[_MRPlaybackQueueRequestProtobuf returnContentItemAssetsInUserCompletion]
  -[_MRPlaybackQueueRequestProtobuf cachingPolicy]
  -[_MRPlaybackQueueRequestProtobuf isLegacyNowPlayingInfoRequest]
  -[_MRPlaybackQueueRequestProtobuf customDictionaryRepresentation]


_MRGameControllerPropertiesMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasControllerID
 @property  unsigned long controllerID
 @property  BOOL hasProperties
 @property  _MRGameControllerPropertiesProtobuf *properties

  // instance methods
  -[_MRGameControllerPropertiesMessageProtobuf isEqual:]
  -[_MRGameControllerPropertiesMessageProtobuf copyWithZone:]
  -[_MRGameControllerPropertiesMessageProtobuf .cxx_destruct]
  -[_MRGameControllerPropertiesMessageProtobuf dictionaryRepresentation]
  -[_MRGameControllerPropertiesMessageProtobuf writeTo:]
  -[_MRGameControllerPropertiesMessageProtobuf properties]
  -[_MRGameControllerPropertiesMessageProtobuf mergeFrom:]
  -[_MRGameControllerPropertiesMessageProtobuf readFrom:]
  -[_MRGameControllerPropertiesMessageProtobuf copyTo:]
  -[_MRGameControllerPropertiesMessageProtobuf setProperties:]
  -[_MRGameControllerPropertiesMessageProtobuf setControllerID:]
  -[_MRGameControllerPropertiesMessageProtobuf setHasControllerID:]
  -[_MRGameControllerPropertiesMessageProtobuf hasControllerID]
  -[_MRGameControllerPropertiesMessageProtobuf hasProperties]
  -[_MRGameControllerPropertiesMessageProtobuf controllerID]


MRClientUpdatesConfigMessage : MRProtocolMessage
 @property  BOOL nowPlayingUpdates
 @property  BOOL artworkUpdates
 @property  BOOL volumeUpdates
 @property  BOOL keyboardUpdates
 @property  BOOL outputDeviceUpdates

  // instance methods
  -[MRClientUpdatesConfigMessage type]
  -[MRClientUpdatesConfigMessage nowPlayingUpdates]
  -[MRClientUpdatesConfigMessage artworkUpdates]
  -[MRClientUpdatesConfigMessage volumeUpdates]
  -[MRClientUpdatesConfigMessage keyboardUpdates]
  -[MRClientUpdatesConfigMessage outputDeviceUpdates]
  -[MRClientUpdatesConfigMessage initWithNowPlayingUpdates:artworkUpdates:volumeUpdates:keyboardUpdates:outputDeviceUpdates:]


_MRLyricsEventProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasStartTime
 @property  double startTime
 @property  BOOL hasEndTime
 @property  double endTime
 @property  BOOL hasToken
 @property  _MRLyricsTokenProtobuf *token

  // instance methods
  -[_MRLyricsEventProtobuf isEqual:]
  -[_MRLyricsEventProtobuf copyWithZone:]
  -[_MRLyricsEventProtobuf token]
  -[_MRLyricsEventProtobuf .cxx_destruct]
  -[_MRLyricsEventProtobuf dictionaryRepresentation]
  -[_MRLyricsEventProtobuf writeTo:]
  -[_MRLyricsEventProtobuf mergeFrom:]
  -[_MRLyricsEventProtobuf readFrom:]
  -[_MRLyricsEventProtobuf copyTo:]
  -[_MRLyricsEventProtobuf startTime]
  -[_MRLyricsEventProtobuf setToken:]
  -[_MRLyricsEventProtobuf endTime]
  -[_MRLyricsEventProtobuf setEndTime:]
  -[_MRLyricsEventProtobuf setStartTime:]
  -[_MRLyricsEventProtobuf hasStartTime]
  -[_MRLyricsEventProtobuf setHasStartTime:]
  -[_MRLyricsEventProtobuf setHasEndTime:]
  -[_MRLyricsEventProtobuf hasEndTime]
  -[_MRLyricsEventProtobuf hasToken]


_MRAudioDataBlockProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasBuffer
 @property  _MRAudioBufferProtobuf *buffer
 @property  BOOL hasTime
 @property  _MRAudioTimeProtobuf *time
 @property  BOOL hasGain
 @property  double gain

  // instance methods
  -[_MRAudioDataBlockProtobuf isEqual:]
  -[_MRAudioDataBlockProtobuf copyWithZone:]
  -[_MRAudioDataBlockProtobuf .cxx_destruct]
  -[_MRAudioDataBlockProtobuf dictionaryRepresentation]
  -[_MRAudioDataBlockProtobuf time]
  -[_MRAudioDataBlockProtobuf writeTo:]
  -[_MRAudioDataBlockProtobuf setBuffer:]
  -[_MRAudioDataBlockProtobuf buffer]
  -[_MRAudioDataBlockProtobuf setTime:]
  -[_MRAudioDataBlockProtobuf mergeFrom:]
  -[_MRAudioDataBlockProtobuf readFrom:]
  -[_MRAudioDataBlockProtobuf copyTo:]
  -[_MRAudioDataBlockProtobuf setGain:]
  -[_MRAudioDataBlockProtobuf gain]
  -[_MRAudioDataBlockProtobuf hasTime]
  -[_MRAudioDataBlockProtobuf hasBuffer]
  -[_MRAudioDataBlockProtobuf setHasGain:]
  -[_MRAudioDataBlockProtobuf hasGain]


MRCoreUtilsSystemPairingSession : MRCoreUtilsPairingSession
  // class methods
  +[MRCoreUtilsSystemPairingSession pairingManager]
  +[MRCoreUtilsSystemPairingSession systemPairingAvailable]
  +[MRCoreUtilsSystemPairingSession globalPairingQueue]

  // instance methods
  -[MRCoreUtilsSystemPairingSession shouldRetry]
  -[MRCoreUtilsSystemPairingSession removePeer]
  -[MRCoreUtilsSystemPairingSession updatePeer]
  -[MRCoreUtilsSystemPairingSession updateMediaRemotePairedDevice:]
  -[MRCoreUtilsSystemPairingSession pairedPeerDevices]
  -[MRCoreUtilsSystemPairingSession mediaRemotePairedDevices]
  -[MRCoreUtilsSystemPairingSession _createPeerDeviceFromPairedPeer:]
  -[MRCoreUtilsSystemPairingSession initializePairingSession:]
  -[MRCoreUtilsSystemPairingSession shouldAutoRetryPairingExchange:]
  -[MRCoreUtilsSystemPairingSession addPeer]
  -[MRCoreUtilsSystemPairingSession pairedPeerDevice]
  -[MRCoreUtilsSystemPairingSession pairedPeerFromPeerDevice:]


MRProtocolMessageQueue : NSObject /usr/lib/libSystem.B.dylib
 @property  <MRProtocolMessageQueueDataSource> *datasource
 @property  <MRProtocolMessageQueueDelegate> *delegate

  // instance methods
  -[MRProtocolMessageQueue dealloc]
  -[MRProtocolMessageQueue delegate]
  -[MRProtocolMessageQueue setDelegate:]
  -[MRProtocolMessageQueue .cxx_destruct]
  -[MRProtocolMessageQueue flush]
  -[MRProtocolMessageQueue setDatasource:]
  -[MRProtocolMessageQueue datasource]
  -[MRProtocolMessageQueue initWithMaxLowPriorityMessagesAllowed:]
  -[MRProtocolMessageQueue _dataForMessage:]
  -[MRProtocolMessageQueue enqueueMessage:reply:queue:]
  -[MRProtocolMessageQueue reply:]


MRMessageData : NSObject /usr/lib/libSystem.B.dylib
 @property  NSData *data
 @property  MRProtocolMessage *message
 @property  long long readPosition
 @property  BOOL finished
 @property  BOOL canPurge

  // instance methods
  -[MRMessageData .cxx_destruct]
  -[MRMessageData data]
  -[MRMessageData isFinished]
  -[MRMessageData message]
  -[MRMessageData initWithMessage:createDataBlock:]
  -[MRMessageData readPosition]
  -[MRMessageData setReadPosition:]
  -[MRMessageData canPurge]


MRPendingMessageQueue : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[MRPendingMessageQueue dealloc]
  -[MRPendingMessageQueue .cxx_destruct]
  -[MRPendingMessageQueue peek]
  -[MRPendingMessageQueue push:]
  -[MRPendingMessageQueue pop]
  -[MRPendingMessageQueue _purge]
  -[MRPendingMessageQueue initWithMaxLowPriorityMessagesAllowed:]


_MRSetNowPlayingPlayerMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasPlayerPath
 @property  _MRNowPlayingPlayerPathProtobuf *playerPath

  // instance methods
  -[_MRSetNowPlayingPlayerMessageProtobuf isEqual:]
  -[_MRSetNowPlayingPlayerMessageProtobuf copyWithZone:]
  -[_MRSetNowPlayingPlayerMessageProtobuf .cxx_destruct]
  -[_MRSetNowPlayingPlayerMessageProtobuf dictionaryRepresentation]
  -[_MRSetNowPlayingPlayerMessageProtobuf writeTo:]
  -[_MRSetNowPlayingPlayerMessageProtobuf mergeFrom:]
  -[_MRSetNowPlayingPlayerMessageProtobuf readFrom:]
  -[_MRSetNowPlayingPlayerMessageProtobuf copyTo:]
  -[_MRSetNowPlayingPlayerMessageProtobuf setPlayerPath:]
  -[_MRSetNowPlayingPlayerMessageProtobuf playerPath]
  -[_MRSetNowPlayingPlayerMessageProtobuf hasPlayerPath]


_MRGetVolumeControlCapabilitiesMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasOutputDeviceUID
 @property  NSString *outputDeviceUID

  // instance methods
  -[_MRGetVolumeControlCapabilitiesMessageProtobuf isEqual:]
  -[_MRGetVolumeControlCapabilitiesMessageProtobuf copyWithZone:]
  -[_MRGetVolumeControlCapabilitiesMessageProtobuf .cxx_destruct]
  -[_MRGetVolumeControlCapabilitiesMessageProtobuf dictionaryRepresentation]
  -[_MRGetVolumeControlCapabilitiesMessageProtobuf writeTo:]
  -[_MRGetVolumeControlCapabilitiesMessageProtobuf mergeFrom:]
  -[_MRGetVolumeControlCapabilitiesMessageProtobuf readFrom:]
  -[_MRGetVolumeControlCapabilitiesMessageProtobuf copyTo:]
  -[_MRGetVolumeControlCapabilitiesMessageProtobuf setOutputDeviceUID:]
  -[_MRGetVolumeControlCapabilitiesMessageProtobuf hasOutputDeviceUID]
  -[_MRGetVolumeControlCapabilitiesMessageProtobuf outputDeviceUID]


MRModifyOutputContextRequestMessage : MRProtocolMessage
 @property  unsigned int contextType
 @property  NSArray *addingOutputDeviceUIDs
 @property  NSArray *removingOutputDeviceUIDs
 @property  NSArray *settingOutputDeviceUIDs

  // class methods
  +[MRModifyOutputContextRequestMessage addDevicesRequestMessageWithContextType:outputDeviceUIDs:]
  +[MRModifyOutputContextRequestMessage removeDevicesRequestMessageWithContextType:outputDeviceUIDs:]
  +[MRModifyOutputContextRequestMessage setDevicesRequestMessageWithContextType:outputDeviceUIDs:]

  // instance methods
  -[MRModifyOutputContextRequestMessage type]
  -[MRModifyOutputContextRequestMessage contextType]
  -[MRModifyOutputContextRequestMessage initWithContextType:addingDeviceUIDs:removingDeviceUIDs:settingDeviceUIDs:]
  -[MRModifyOutputContextRequestMessage addingOutputDeviceUIDs]
  -[MRModifyOutputContextRequestMessage removingOutputDeviceUIDs]
  -[MRModifyOutputContextRequestMessage settingOutputDeviceUIDs]


MRUpdateOutputDevicesMessage : MRProtocolMessage
 @property  NSArray *outputDevices

  // instance methods
  -[MRUpdateOutputDevicesMessage type]
  -[MRUpdateOutputDevicesMessage .cxx_destruct]
  -[MRUpdateOutputDevicesMessage outputDevices]
  -[MRUpdateOutputDevicesMessage initWithOutputDevices:]


MRRemoveOutputDevicesMessage : MRProtocolMessage
 @property  NSArray *outputDeviceUIDs

  // instance methods
  -[MRRemoveOutputDevicesMessage type]
  -[MRRemoveOutputDevicesMessage outputDeviceUIDs]
  -[MRRemoveOutputDevicesMessage initWithOutputDeviceUIDs:]


MRRemoveFromParentGroupMessage : MRRemoveOutputDevicesMessage
  // instance methods
  -[MRRemoveFromParentGroupMessage type]


MRAudioBuffer : NSObject /usr/lib/libSystem.B.dylib
 @property  AVAudioCompressedBuffer *buffer
 @property  NSDictionary *formatSettings

  // instance methods
  -[MRAudioBuffer .cxx_destruct]
  -[MRAudioBuffer buffer]
  -[MRAudioBuffer initWithFormatSettings:packetCapacity:maximumPacketSize:]
  -[MRAudioBuffer formatSettings]


_MRPromptForRouteAuthorizationMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasRoute
 @property  _MRAVOutputDeviceDescriptorProtobuf *route
 @property  BOOL hasInputType
 @property  int inputType

  // instance methods
  -[_MRPromptForRouteAuthorizationMessageProtobuf isEqual:]
  -[_MRPromptForRouteAuthorizationMessageProtobuf copyWithZone:]
  -[_MRPromptForRouteAuthorizationMessageProtobuf .cxx_destruct]
  -[_MRPromptForRouteAuthorizationMessageProtobuf dictionaryRepresentation]
  -[_MRPromptForRouteAuthorizationMessageProtobuf writeTo:]
  -[_MRPromptForRouteAuthorizationMessageProtobuf mergeFrom:]
  -[_MRPromptForRouteAuthorizationMessageProtobuf readFrom:]
  -[_MRPromptForRouteAuthorizationMessageProtobuf copyTo:]
  -[_MRPromptForRouteAuthorizationMessageProtobuf setRoute:]
  -[_MRPromptForRouteAuthorizationMessageProtobuf route]
  -[_MRPromptForRouteAuthorizationMessageProtobuf hasRoute]
  -[_MRPromptForRouteAuthorizationMessageProtobuf inputType]
  -[_MRPromptForRouteAuthorizationMessageProtobuf setInputType:]
  -[_MRPromptForRouteAuthorizationMessageProtobuf setHasInputType:]
  -[_MRPromptForRouteAuthorizationMessageProtobuf hasInputType]
  -[_MRPromptForRouteAuthorizationMessageProtobuf inputTypeAsString:]
  -[_MRPromptForRouteAuthorizationMessageProtobuf StringAsInputType:]


_MRSupportedCommandsProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  NSMutableArray *supportedCommands

  // class methods
  +[_MRSupportedCommandsProtobuf supportedCommandType]

  // instance methods
  -[_MRSupportedCommandsProtobuf isEqual:]
  -[_MRSupportedCommandsProtobuf copyWithZone:]
  -[_MRSupportedCommandsProtobuf .cxx_destruct]
  -[_MRSupportedCommandsProtobuf dictionaryRepresentation]
  -[_MRSupportedCommandsProtobuf writeTo:]
  -[_MRSupportedCommandsProtobuf mergeFrom:]
  -[_MRSupportedCommandsProtobuf readFrom:]
  -[_MRSupportedCommandsProtobuf copyTo:]
  -[_MRSupportedCommandsProtobuf supportedCommands]
  -[_MRSupportedCommandsProtobuf setSupportedCommands:]
  -[_MRSupportedCommandsProtobuf addSupportedCommand:]
  -[_MRSupportedCommandsProtobuf supportedCommandsCount]
  -[_MRSupportedCommandsProtobuf clearSupportedCommands]
  -[_MRSupportedCommandsProtobuf supportedCommandAtIndex:]


MRSetStateMessage : MRProtocolMessage
 @property  _MRSetStateMessageProtobuf *state

  // instance methods
  -[MRSetStateMessage type]
  -[MRSetStateMessage state]
  -[MRSetStateMessage priority]
  -[MRSetStateMessage initWithNowPlayingState:]


MRSetReadyStateMessage : MRProtocolMessage
  // instance methods
  -[MRSetReadyStateMessage type]


MRSetConnectionStateMessage : MRProtocolMessage
 @property  unsigned int state

  // instance methods
  -[MRSetConnectionStateMessage type]
  -[MRSetConnectionStateMessage state]
  -[MRSetConnectionStateMessage encryptionType]
  -[MRSetConnectionStateMessage initWithConnectionState:]


MRSetHiliteModeMessage : MRProtocolMessage
 @property  BOOL hiliteMode

  // instance methods
  -[MRSetHiliteModeMessage type]
  -[MRSetHiliteModeMessage hiliteMode]
  -[MRSetHiliteModeMessage initWithHiliteMode:]


MRWakeDeviceMessage : MRProtocolMessage
  // instance methods
  -[MRWakeDeviceMessage init]
  -[MRWakeDeviceMessage type]


MRSetNowPlayingClientMessage : MRProtocolMessage
 @property  _MRNowPlayingClientProtobuf *client

  // instance methods
  -[MRSetNowPlayingClientMessage type]
  -[MRSetNowPlayingClientMessage client]
  -[MRSetNowPlayingClientMessage initWithClient:]


MRSetNowPlayingPlayerMessage : MRProtocolMessage
 @property  _MRNowPlayingPlayerPathProtobuf *playerPath

  // instance methods
  -[MRSetNowPlayingPlayerMessage type]
  -[MRSetNowPlayingPlayerMessage playerPath]
  -[MRSetNowPlayingPlayerMessage initWithPlayerPath:]


MRRemoveClientMessage : MRProtocolMessage
 @property  _MRNowPlayingClientProtobuf *client

  // instance methods
  -[MRRemoveClientMessage type]
  -[MRRemoveClientMessage client]
  -[MRRemoveClientMessage initWithClient:]


MRRemovePlayerMessage : MRProtocolMessage
 @property  _MRNowPlayingPlayerPathProtobuf *playerPath

  // instance methods
  -[MRRemovePlayerMessage type]
  -[MRRemovePlayerMessage playerPath]
  -[MRRemovePlayerMessage initWithPlayerPath:]


MRUpdateClientMessage : MRProtocolMessage
 @property  _MRNowPlayingClientProtobuf *client

  // instance methods
  -[MRUpdateClientMessage type]
  -[MRUpdateClientMessage client]
  -[MRUpdateClientMessage initWithClient:]


MRUpdatePlayerMessage : MRProtocolMessage
 @property  _MRNowPlayingPlayerPathProtobuf *playerPath

  // instance methods
  -[MRUpdatePlayerMessage type]
  -[MRUpdatePlayerMessage playerPath]
  -[MRUpdatePlayerMessage initWithPlayerPath:]


MRUpdateContentItemMessage : MRProtocolMessage
 @property  _MRNowPlayingPlayerPathProtobuf *playerPath
 @property  NSArray *contentItems

  // instance methods
  -[MRUpdateContentItemMessage type]
  -[MRUpdateContentItemMessage priority]
  -[MRUpdateContentItemMessage playerPath]
  -[MRUpdateContentItemMessage contentItems]
  -[MRUpdateContentItemMessage initWithContentItems:forPlayerPath:]


MRUpdateContentItemArtworkMessage : MRProtocolMessage
 @property  _MRNowPlayingPlayerPathProtobuf *playerPath
 @property  NSArray *contentItems

  // instance methods
  -[MRUpdateContentItemArtworkMessage type]
  -[MRUpdateContentItemArtworkMessage playerPath]
  -[MRUpdateContentItemArtworkMessage contentItems]
  -[MRUpdateContentItemArtworkMessage initWithContentItems:forPlayerPath:]


MRSetDefaultSupportedCommandsMessage : MRProtocolMessage
 @property  NSArray *supportedCommands
 @property  NSString *bundleID

  // instance methods
  -[MRSetDefaultSupportedCommandsMessage type]
  -[MRSetDefaultSupportedCommandsMessage bundleID]
  -[MRSetDefaultSupportedCommandsMessage supportedCommands]
  -[MRSetDefaultSupportedCommandsMessage initWithDefaultSupportedCommands:forClient:]


_MRSetStateMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasNowPlayingInfo
 @property  _MRNowPlayingInfoProtobuf *nowPlayingInfo
 @property  BOOL hasSupportedCommands
 @property  _MRSupportedCommandsProtobuf *supportedCommands
 @property  BOOL hasPlaybackQueue
 @property  _MRPlaybackQueueProtobuf *playbackQueue
 @property  BOOL hasDisplayID
 @property  NSString *displayID
 @property  BOOL hasDisplayName
 @property  NSString *displayName
 @property  BOOL hasPlaybackState
 @property  int playbackState
 @property  BOOL hasPlaybackQueueCapabilities
 @property  _MRPlaybackQueueCapabilitiesProtobuf *playbackQueueCapabilities
 @property  BOOL hasPlayerPath
 @property  _MRNowPlayingPlayerPathProtobuf *playerPath
 @property  BOOL hasRequest
 @property  _MRPlaybackQueueRequestProtobuf *request
 @property  BOOL hasPlaybackStateTimestamp
 @property  double playbackStateTimestamp

  // instance methods
  -[_MRSetStateMessageProtobuf isEqual:]
  -[_MRSetStateMessageProtobuf copyWithZone:]
  -[_MRSetStateMessageProtobuf .cxx_destruct]
  -[_MRSetStateMessageProtobuf dictionaryRepresentation]
  -[_MRSetStateMessageProtobuf displayName]
  -[_MRSetStateMessageProtobuf writeTo:]
  -[_MRSetStateMessageProtobuf mergeFrom:]
  -[_MRSetStateMessageProtobuf readFrom:]
  -[_MRSetStateMessageProtobuf copyTo:]
  -[_MRSetStateMessageProtobuf setRequest:]
  -[_MRSetStateMessageProtobuf request]
  -[_MRSetStateMessageProtobuf setDisplayName:]
  -[_MRSetStateMessageProtobuf displayID]
  -[_MRSetStateMessageProtobuf hasDisplayName]
  -[_MRSetStateMessageProtobuf hasRequest]
  -[_MRSetStateMessageProtobuf nowPlayingInfo]
  -[_MRSetStateMessageProtobuf setNowPlayingInfo:]
  -[_MRSetStateMessageProtobuf hasNowPlayingInfo]
  -[_MRSetStateMessageProtobuf playbackState]
  -[_MRSetStateMessageProtobuf playbackQueue]
  -[_MRSetStateMessageProtobuf setPlayerPath:]
  -[_MRSetStateMessageProtobuf playerPath]
  -[_MRSetStateMessageProtobuf setPlaybackState:]
  -[_MRSetStateMessageProtobuf setDisplayID:]
  -[_MRSetStateMessageProtobuf hasPlayerPath]
  -[_MRSetStateMessageProtobuf supportedCommands]
  -[_MRSetStateMessageProtobuf setSupportedCommands:]
  -[_MRSetStateMessageProtobuf setPlaybackQueue:]
  -[_MRSetStateMessageProtobuf setPlaybackQueueCapabilities:]
  -[_MRSetStateMessageProtobuf playbackQueueCapabilities]
  -[_MRSetStateMessageProtobuf setPlaybackStateTimestamp:]
  -[_MRSetStateMessageProtobuf hasSupportedCommands]
  -[_MRSetStateMessageProtobuf hasPlaybackQueue]
  -[_MRSetStateMessageProtobuf hasDisplayID]
  -[_MRSetStateMessageProtobuf setHasPlaybackState:]
  -[_MRSetStateMessageProtobuf hasPlaybackState]
  -[_MRSetStateMessageProtobuf playbackStateAsString:]
  -[_MRSetStateMessageProtobuf StringAsPlaybackState:]
  -[_MRSetStateMessageProtobuf hasPlaybackQueueCapabilities]
  -[_MRSetStateMessageProtobuf setHasPlaybackStateTimestamp:]
  -[_MRSetStateMessageProtobuf hasPlaybackStateTimestamp]
  -[_MRSetStateMessageProtobuf playbackStateTimestamp]


_MRLanguageOptionProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasType
 @property  int type
 @property  BOOL hasLanguageTag
 @property  NSString *languageTag
 @property  NSMutableArray *characteristics
 @property  BOOL hasDisplayName
 @property  NSString *displayName
 @property  BOOL hasIdentifier
 @property  NSString *identifier

  // class methods
  +[_MRLanguageOptionProtobuf characteristicsType]

  // instance methods
  -[_MRLanguageOptionProtobuf isEqual:]
  -[_MRLanguageOptionProtobuf copyWithZone:]
  -[_MRLanguageOptionProtobuf type]
  -[_MRLanguageOptionProtobuf setType:]
  -[_MRLanguageOptionProtobuf .cxx_destruct]
  -[_MRLanguageOptionProtobuf identifier]
  -[_MRLanguageOptionProtobuf setIdentifier:]
  -[_MRLanguageOptionProtobuf dictionaryRepresentation]
  -[_MRLanguageOptionProtobuf displayName]
  -[_MRLanguageOptionProtobuf writeTo:]
  -[_MRLanguageOptionProtobuf mergeFrom:]
  -[_MRLanguageOptionProtobuf readFrom:]
  -[_MRLanguageOptionProtobuf copyTo:]
  -[_MRLanguageOptionProtobuf setDisplayName:]
  -[_MRLanguageOptionProtobuf setHasType:]
  -[_MRLanguageOptionProtobuf hasType]
  -[_MRLanguageOptionProtobuf hasIdentifier]
  -[_MRLanguageOptionProtobuf hasDisplayName]
  -[_MRLanguageOptionProtobuf languageTag]
  -[_MRLanguageOptionProtobuf setLanguageTag:]
  -[_MRLanguageOptionProtobuf setCharacteristics:]
  -[_MRLanguageOptionProtobuf addCharacteristics:]
  -[_MRLanguageOptionProtobuf characteristicsCount]
  -[_MRLanguageOptionProtobuf clearCharacteristics]
  -[_MRLanguageOptionProtobuf characteristicsAtIndex:]
  -[_MRLanguageOptionProtobuf hasLanguageTag]
  -[_MRLanguageOptionProtobuf characteristics]


_MRNowPlayingInfoProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasAlbum
 @property  NSString *album
 @property  BOOL hasArtist
 @property  NSString *artist
 @property  BOOL hasDuration
 @property  double duration
 @property  BOOL hasElapsedTime
 @property  double elapsedTime
 @property  BOOL hasPlaybackRate
 @property  float playbackRate
 @property  BOOL hasRepeatMode
 @property  int repeatMode
 @property  BOOL hasShuffleMode
 @property  int shuffleMode
 @property  BOOL hasTimestamp
 @property  double timestamp
 @property  BOOL hasTitle
 @property  NSString *title
 @property  BOOL hasUniqueIdentifier
 @property  unsigned long uniqueIdentifier
 @property  BOOL hasIsExplicitTrack
 @property  BOOL isExplicitTrack
 @property  BOOL hasIsMusicApp
 @property  BOOL isMusicApp
 @property  BOOL hasRadioStationIdentifier
 @property  long long radioStationIdentifier
 @property  BOOL hasRadioStationHash
 @property  NSString *radioStationHash
 @property  BOOL hasRadioStationName
 @property  NSString *radioStationName
 @property  BOOL hasArtworkDataDigest
 @property  NSData *artworkDataDigest
 @property  BOOL hasIsAlwaysLive
 @property  BOOL isAlwaysLive
 @property  BOOL hasIsAdvertisement
 @property  BOOL isAdvertisement

  // instance methods
  -[_MRNowPlayingInfoProtobuf isEqual:]
  -[_MRNowPlayingInfoProtobuf copyWithZone:]
  -[_MRNowPlayingInfoProtobuf .cxx_destruct]
  -[_MRNowPlayingInfoProtobuf dictionaryRepresentation]
  -[_MRNowPlayingInfoProtobuf timestamp]
  -[_MRNowPlayingInfoProtobuf title]
  -[_MRNowPlayingInfoProtobuf setTitle:]
  -[_MRNowPlayingInfoProtobuf uniqueIdentifier]
  -[_MRNowPlayingInfoProtobuf duration]
  -[_MRNowPlayingInfoProtobuf hasTimestamp]
  -[_MRNowPlayingInfoProtobuf setTimestamp:]
  -[_MRNowPlayingInfoProtobuf writeTo:]
  -[_MRNowPlayingInfoProtobuf album]
  -[_MRNowPlayingInfoProtobuf artist]
  -[_MRNowPlayingInfoProtobuf mergeFrom:]
  -[_MRNowPlayingInfoProtobuf readFrom:]
  -[_MRNowPlayingInfoProtobuf copyTo:]
  -[_MRNowPlayingInfoProtobuf setUniqueIdentifier:]
  -[_MRNowPlayingInfoProtobuf setDuration:]
  -[_MRNowPlayingInfoProtobuf hasTitle]
  -[_MRNowPlayingInfoProtobuf elapsedTime]
  -[_MRNowPlayingInfoProtobuf setHasTimestamp:]
  -[_MRNowPlayingInfoProtobuf hasDuration]
  -[_MRNowPlayingInfoProtobuf setHasUniqueIdentifier:]
  -[_MRNowPlayingInfoProtobuf hasUniqueIdentifier]
  -[_MRNowPlayingInfoProtobuf setHasDuration:]
  -[_MRNowPlayingInfoProtobuf setAlbum:]
  -[_MRNowPlayingInfoProtobuf playbackRate]
  -[_MRNowPlayingInfoProtobuf setPlaybackRate:]
  -[_MRNowPlayingInfoProtobuf setArtist:]
  -[_MRNowPlayingInfoProtobuf hasArtist]
  -[_MRNowPlayingInfoProtobuf setElapsedTime:]
  -[_MRNowPlayingInfoProtobuf repeatMode]
  -[_MRNowPlayingInfoProtobuf setRepeatMode:]
  -[_MRNowPlayingInfoProtobuf isExplicitTrack]
  -[_MRNowPlayingInfoProtobuf isAlwaysLive]
  -[_MRNowPlayingInfoProtobuf shuffleMode]
  -[_MRNowPlayingInfoProtobuf setShuffleMode:]
  -[_MRNowPlayingInfoProtobuf radioStationName]
  -[_MRNowPlayingInfoProtobuf setRadioStationName:]
  -[_MRNowPlayingInfoProtobuf radioStationHash]
  -[_MRNowPlayingInfoProtobuf setRadioStationHash:]
  -[_MRNowPlayingInfoProtobuf setArtworkDataDigest:]
  -[_MRNowPlayingInfoProtobuf artworkDataDigest]
  -[_MRNowPlayingInfoProtobuf hasElapsedTime]
  -[_MRNowPlayingInfoProtobuf hasAlbum]
  -[_MRNowPlayingInfoProtobuf setHasElapsedTime:]
  -[_MRNowPlayingInfoProtobuf setHasPlaybackRate:]
  -[_MRNowPlayingInfoProtobuf hasPlaybackRate]
  -[_MRNowPlayingInfoProtobuf setHasRepeatMode:]
  -[_MRNowPlayingInfoProtobuf hasRepeatMode]
  -[_MRNowPlayingInfoProtobuf repeatModeAsString:]
  -[_MRNowPlayingInfoProtobuf StringAsRepeatMode:]
  -[_MRNowPlayingInfoProtobuf setHasShuffleMode:]
  -[_MRNowPlayingInfoProtobuf hasShuffleMode]
  -[_MRNowPlayingInfoProtobuf shuffleModeAsString:]
  -[_MRNowPlayingInfoProtobuf StringAsShuffleMode:]
  -[_MRNowPlayingInfoProtobuf setIsExplicitTrack:]
  -[_MRNowPlayingInfoProtobuf setHasIsExplicitTrack:]
  -[_MRNowPlayingInfoProtobuf hasIsExplicitTrack]
  -[_MRNowPlayingInfoProtobuf setIsMusicApp:]
  -[_MRNowPlayingInfoProtobuf setHasIsMusicApp:]
  -[_MRNowPlayingInfoProtobuf hasIsMusicApp]
  -[_MRNowPlayingInfoProtobuf setRadioStationIdentifier:]
  -[_MRNowPlayingInfoProtobuf setHasRadioStationIdentifier:]
  -[_MRNowPlayingInfoProtobuf hasRadioStationIdentifier]
  -[_MRNowPlayingInfoProtobuf hasRadioStationHash]
  -[_MRNowPlayingInfoProtobuf hasRadioStationName]
  -[_MRNowPlayingInfoProtobuf hasArtworkDataDigest]
  -[_MRNowPlayingInfoProtobuf setIsAlwaysLive:]
  -[_MRNowPlayingInfoProtobuf setHasIsAlwaysLive:]
  -[_MRNowPlayingInfoProtobuf hasIsAlwaysLive]
  -[_MRNowPlayingInfoProtobuf setIsAdvertisement:]
  -[_MRNowPlayingInfoProtobuf setHasIsAdvertisement:]
  -[_MRNowPlayingInfoProtobuf hasIsAdvertisement]
  -[_MRNowPlayingInfoProtobuf isMusicApp]
  -[_MRNowPlayingInfoProtobuf radioStationIdentifier]
  -[_MRNowPlayingInfoProtobuf isAdvertisement]


_MRAudioTimeProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasTimestamp
 @property  double timestamp
 @property  BOOL hasSampleRate
 @property  double sampleRate

  // instance methods
  -[_MRAudioTimeProtobuf isEqual:]
  -[_MRAudioTimeProtobuf copyWithZone:]
  -[_MRAudioTimeProtobuf dictionaryRepresentation]
  -[_MRAudioTimeProtobuf timestamp]
  -[_MRAudioTimeProtobuf hasTimestamp]
  -[_MRAudioTimeProtobuf setTimestamp:]
  -[_MRAudioTimeProtobuf writeTo:]
  -[_MRAudioTimeProtobuf mergeFrom:]
  -[_MRAudioTimeProtobuf readFrom:]
  -[_MRAudioTimeProtobuf copyTo:]
  -[_MRAudioTimeProtobuf setSampleRate:]
  -[_MRAudioTimeProtobuf sampleRate]
  -[_MRAudioTimeProtobuf setHasTimestamp:]
  -[_MRAudioTimeProtobuf setHasSampleRate:]
  -[_MRAudioTimeProtobuf hasSampleRate]


_MRReceivedCommandProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasCommand
 @property  int command
 @property  BOOL hasOptions
 @property  _MRCommandOptionsProtobuf *options
 @property  BOOL hasOriginUID
 @property  int originUID
 @property  BOOL hasSenderAppDisplayID
 @property  NSString *senderAppDisplayID
 @property  BOOL hasDestinationAppDisplayID
 @property  NSString *destinationAppDisplayID
 @property  BOOL hasDestinationAppProcessID
 @property  long long destinationAppProcessID
 @property  BOOL hasRemoteControlInterfaceID
 @property  NSString *remoteControlInterfaceID
 @property  BOOL hasAppOptions
 @property  _MRReceivedCommandAppOptionsProtobuf *appOptions
 @property  BOOL hasPlayerPath
 @property  _MRNowPlayingPlayerPathProtobuf *playerPath

  // instance methods
  -[_MRReceivedCommandProtobuf isEqual:]
  -[_MRReceivedCommandProtobuf copyWithZone:]
  -[_MRReceivedCommandProtobuf options]
  -[_MRReceivedCommandProtobuf .cxx_destruct]
  -[_MRReceivedCommandProtobuf dictionaryRepresentation]
  -[_MRReceivedCommandProtobuf setOptions:]
  -[_MRReceivedCommandProtobuf writeTo:]
  -[_MRReceivedCommandProtobuf mergeFrom:]
  -[_MRReceivedCommandProtobuf readFrom:]
  -[_MRReceivedCommandProtobuf copyTo:]
  -[_MRReceivedCommandProtobuf setCommand:]
  -[_MRReceivedCommandProtobuf command]
  -[_MRReceivedCommandProtobuf setHasCommand:]
  -[_MRReceivedCommandProtobuf hasCommand]
  -[_MRReceivedCommandProtobuf commandAsString:]
  -[_MRReceivedCommandProtobuf StringAsCommand:]
  -[_MRReceivedCommandProtobuf hasOptions]
  -[_MRReceivedCommandProtobuf setPlayerPath:]
  -[_MRReceivedCommandProtobuf playerPath]
  -[_MRReceivedCommandProtobuf hasPlayerPath]
  -[_MRReceivedCommandProtobuf setSenderAppDisplayID:]
  -[_MRReceivedCommandProtobuf setDestinationAppDisplayID:]
  -[_MRReceivedCommandProtobuf setRemoteControlInterfaceID:]
  -[_MRReceivedCommandProtobuf setAppOptions:]
  -[_MRReceivedCommandProtobuf setOriginUID:]
  -[_MRReceivedCommandProtobuf setHasOriginUID:]
  -[_MRReceivedCommandProtobuf hasOriginUID]
  -[_MRReceivedCommandProtobuf hasSenderAppDisplayID]
  -[_MRReceivedCommandProtobuf hasDestinationAppDisplayID]
  -[_MRReceivedCommandProtobuf setDestinationAppProcessID:]
  -[_MRReceivedCommandProtobuf setHasDestinationAppProcessID:]
  -[_MRReceivedCommandProtobuf hasDestinationAppProcessID]
  -[_MRReceivedCommandProtobuf hasRemoteControlInterfaceID]
  -[_MRReceivedCommandProtobuf hasAppOptions]
  -[_MRReceivedCommandProtobuf originUID]
  -[_MRReceivedCommandProtobuf senderAppDisplayID]
  -[_MRReceivedCommandProtobuf destinationAppDisplayID]
  -[_MRReceivedCommandProtobuf destinationAppProcessID]
  -[_MRReceivedCommandProtobuf remoteControlInterfaceID]
  -[_MRReceivedCommandProtobuf appOptions]


MRGameControllerMessage : MRProtocolMessage
 @property  _MRGameControllerMessageProtobuf *event
 @property  unsigned long controllerID

  // instance methods
  -[MRGameControllerMessage type]
  -[MRGameControllerMessage priority]
  -[MRGameControllerMessage event]
  -[MRGameControllerMessage shouldLog]
  -[MRGameControllerMessage controllerID]
  -[MRGameControllerMessage initWithGameControllerEvent:controllerID:]


MRGameControllerPropertiesMessage : MRProtocolMessage
 @property  _MRGameControllerPropertiesProtobuf *properties
 @property  unsigned long controllerID

  // instance methods
  -[MRGameControllerPropertiesMessage type]
  -[MRGameControllerPropertiesMessage properties]
  -[MRGameControllerPropertiesMessage controllerID]
  -[MRGameControllerPropertiesMessage initWithGameControllerProperties:controllerID:]


MRRegisterGameControllerMessage : MRProtocolMessage
 @property  _MRGameControllerPropertiesProtobuf *properties

  // instance methods
  -[MRRegisterGameControllerMessage type]
  -[MRRegisterGameControllerMessage properties]
  -[MRRegisterGameControllerMessage initWithProperties:]


MRRegisterGameControllerResponseMessage : MRProtocolMessage
 @property  unsigned long controllerID

  // instance methods
  -[MRRegisterGameControllerResponseMessage type]
  -[MRRegisterGameControllerResponseMessage controllerID]
  -[MRRegisterGameControllerResponseMessage initWithControllerID:]


MRUnregisterGameControllerMessage : MRProtocolMessage
 @property  unsigned long controllerID

  // instance methods
  -[MRUnregisterGameControllerMessage type]
  -[MRUnregisterGameControllerMessage controllerID]
  -[MRUnregisterGameControllerMessage initWithControllerID:]


MRRegisterForGameControllerEventsMessage : MRProtocolMessage
 @property  unsigned int inputMode

  // instance methods
  -[MRRegisterForGameControllerEventsMessage type]
  -[MRRegisterForGameControllerEventsMessage inputMode]
  -[MRRegisterForGameControllerEventsMessage initWithInputMode:]


_MRGetKeyboardSessionProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
  // instance methods
  -[_MRGetKeyboardSessionProtobuf isEqual:]
  -[_MRGetKeyboardSessionProtobuf copyWithZone:]
  -[_MRGetKeyboardSessionProtobuf dictionaryRepresentation]
  -[_MRGetKeyboardSessionProtobuf writeTo:]
  -[_MRGetKeyboardSessionProtobuf mergeFrom:]
  -[_MRGetKeyboardSessionProtobuf readFrom:]
  -[_MRGetKeyboardSessionProtobuf copyTo:]


_MRContentItemProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasIdentifier
 @property  NSString *identifier
 @property  BOOL hasMetadata
 @property  _MRContentItemMetadataProtobuf *metadata
 @property  BOOL hasArtworkData
 @property  NSData *artworkData
 @property  BOOL hasInfo
 @property  NSString *info
 @property  NSMutableArray *availableLanguageOptions
 @property  NSMutableArray *currentLanguageOptions
 @property  BOOL hasLyrics
 @property  _MRLyricsItemProtobuf *lyrics
 @property  NSMutableArray *sections
 @property  BOOL hasParentIdentifier
 @property  NSString *parentIdentifier
 @property  BOOL hasAncestorIdentifier
 @property  NSString *ancestorIdentifier
 @property  BOOL hasQueueIdentifier
 @property  NSString *queueIdentifier
 @property  BOOL hasRequestIdentifier
 @property  NSString *requestIdentifier
 @property  BOOL hasArtworkDataWidth
 @property  int artworkDataWidth
 @property  BOOL hasArtworkDataHeight
 @property  int artworkDataHeight

  // class methods
  +[_MRContentItemProtobuf initialize]
  +[_MRContentItemProtobuf sectionsType]
  +[_MRContentItemProtobuf availableLanguageOptionsType]
  +[_MRContentItemProtobuf currentLanguageOptionsType]

  // instance methods
  -[_MRContentItemProtobuf isEqual:]
  -[_MRContentItemProtobuf copyWithZone:]
  -[_MRContentItemProtobuf .cxx_destruct]
  -[_MRContentItemProtobuf _init]
  -[_MRContentItemProtobuf identifier]
  -[_MRContentItemProtobuf setIdentifier:]
  -[_MRContentItemProtobuf dictionaryRepresentation]
  -[_MRContentItemProtobuf writeTo:]
  -[_MRContentItemProtobuf setMetadata:]
  -[_MRContentItemProtobuf metadata]
  -[_MRContentItemProtobuf info]
  -[_MRContentItemProtobuf mergeFrom:]
  -[_MRContentItemProtobuf readFrom:]
  -[_MRContentItemProtobuf copyTo:]
  -[_MRContentItemProtobuf sections]
  -[_MRContentItemProtobuf setSections:]
  -[_MRContentItemProtobuf setRequestIdentifier:]
  -[_MRContentItemProtobuf hasMetadata]
  -[_MRContentItemProtobuf setInfo:]
  -[_MRContentItemProtobuf requestIdentifier]
  -[_MRContentItemProtobuf sectionsCount]
  -[_MRContentItemProtobuf clearSections]
  -[_MRContentItemProtobuf sectionsAtIndex:]
  -[_MRContentItemProtobuf addSections:]
  -[_MRContentItemProtobuf hasIdentifier]
  -[_MRContentItemProtobuf hasInfo]
  -[_MRContentItemProtobuf lyrics]
  -[_MRContentItemProtobuf parentIdentifier]
  -[_MRContentItemProtobuf setParentIdentifier:]
  -[_MRContentItemProtobuf _initWithData:]
  -[_MRContentItemProtobuf hasParentIdentifier]
  -[_MRContentItemProtobuf queueIdentifier]
  -[_MRContentItemProtobuf setQueueIdentifier:]
  -[_MRContentItemProtobuf hasLyrics]
  -[_MRContentItemProtobuf artworkData]
  -[_MRContentItemProtobuf setArtworkData:]
  -[_MRContentItemProtobuf availableLanguageOptions]
  -[_MRContentItemProtobuf setAvailableLanguageOptions:]
  -[_MRContentItemProtobuf currentLanguageOptions]
  -[_MRContentItemProtobuf setCurrentLanguageOptions:]
  -[_MRContentItemProtobuf setLyrics:]
  -[_MRContentItemProtobuf hasArtworkData]
  -[_MRContentItemProtobuf addAvailableLanguageOptions:]
  -[_MRContentItemProtobuf addCurrentLanguageOptions:]
  -[_MRContentItemProtobuf availableLanguageOptionsCount]
  -[_MRContentItemProtobuf clearAvailableLanguageOptions]
  -[_MRContentItemProtobuf availableLanguageOptionsAtIndex:]
  -[_MRContentItemProtobuf currentLanguageOptionsCount]
  -[_MRContentItemProtobuf clearCurrentLanguageOptions]
  -[_MRContentItemProtobuf currentLanguageOptionsAtIndex:]
  -[_MRContentItemProtobuf setAncestorIdentifier:]
  -[_MRContentItemProtobuf hasAncestorIdentifier]
  -[_MRContentItemProtobuf hasQueueIdentifier]
  -[_MRContentItemProtobuf hasRequestIdentifier]
  -[_MRContentItemProtobuf setArtworkDataWidth:]
  -[_MRContentItemProtobuf setHasArtworkDataWidth:]
  -[_MRContentItemProtobuf hasArtworkDataWidth]
  -[_MRContentItemProtobuf setArtworkDataHeight:]
  -[_MRContentItemProtobuf setHasArtworkDataHeight:]
  -[_MRContentItemProtobuf hasArtworkDataHeight]
  -[_MRContentItemProtobuf ancestorIdentifier]
  -[_MRContentItemProtobuf artworkDataWidth]
  -[_MRContentItemProtobuf artworkDataHeight]


_MRReceivedCommandAppOptionsProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasLaunchApplication
 @property  BOOL launchApplication

  // instance methods
  -[_MRReceivedCommandAppOptionsProtobuf isEqual:]
  -[_MRReceivedCommandAppOptionsProtobuf copyWithZone:]
  -[_MRReceivedCommandAppOptionsProtobuf dictionaryRepresentation]
  -[_MRReceivedCommandAppOptionsProtobuf writeTo:]
  -[_MRReceivedCommandAppOptionsProtobuf mergeFrom:]
  -[_MRReceivedCommandAppOptionsProtobuf readFrom:]
  -[_MRReceivedCommandAppOptionsProtobuf copyTo:]
  -[_MRReceivedCommandAppOptionsProtobuf setLaunchApplication:]
  -[_MRReceivedCommandAppOptionsProtobuf setHasLaunchApplication:]
  -[_MRReceivedCommandAppOptionsProtobuf hasLaunchApplication]
  -[_MRReceivedCommandAppOptionsProtobuf launchApplication]


MRAVLocalEndpoint : MRAVConcreteEndpoint <NSSecureCoding>
 @property  NSArray *outputDevices

  // class methods
  +[MRAVLocalEndpoint supportsSecureCoding]
  +[MRAVLocalEndpoint sharedLocalEndpointForRoutingContextWithUID:]

  // instance methods
  -[MRAVLocalEndpoint dealloc]
  -[MRAVLocalEndpoint encodeWithCoder:]
  -[MRAVLocalEndpoint initWithCoder:]
  -[MRAVLocalEndpoint .cxx_destruct]
  -[MRAVLocalEndpoint uniqueIdentifier]
  -[MRAVLocalEndpoint connectionType]
  -[MRAVLocalEndpoint origin]
  -[MRAVLocalEndpoint _registerForNotifications]
  -[MRAVLocalEndpoint outputDevices]
  -[MRAVLocalEndpoint setOutputDevices:]
  -[MRAVLocalEndpoint _outputContextDevicesDidChangeNotification:]
  -[MRAVLocalEndpoint isProxyGroupPlayer]
  -[MRAVLocalEndpoint initWithOutputDevices:]
  -[MRAVLocalEndpoint canModifyGroupMembership]
  -[MRAVLocalEndpoint initWithOutputContext:]
  -[MRAVLocalEndpoint _reloadOutputDevicesFromContext]
  -[MRAVLocalEndpoint outputContextDataSourceOutputDeviceDidChangeVolume:]
  -[MRAVLocalEndpoint outputContextDataSourceOutputDeviceDidChangeVolumeControlCapabilities:]
  -[MRAVLocalEndpoint personalOutputDevices]
  -[MRAVLocalEndpoint connectToExternalDeviceWithCompletion:]
  -[MRAVLocalEndpoint addOutputDevices:initiator:withReplyQueue:completion:]
  -[MRAVLocalEndpoint removeOutputDevices:initiator:withReplyQueue:completion:]
  -[MRAVLocalEndpoint setOutputDevices:initiator:withReplyQueue:completion:]
  -[MRAVLocalEndpoint setOutputDeviceVolume:outputDevice:queue:completion:]
  -[MRAVLocalEndpoint outputDeviceVolume:queue:completion:]
  -[MRAVLocalEndpoint volumeControlCapabilitiesForOutputDevice:queue:completion:]
  -[MRAVLocalEndpoint removeOutputDeviceFromParentGroup:queue:completion:]
  -[MRAVLocalEndpoint _ouputDevicesForOutputDeviceUIDs:completion:]


_MRSetRecordingStateMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasState
 @property  int state

  // instance methods
  -[_MRSetRecordingStateMessageProtobuf isEqual:]
  -[_MRSetRecordingStateMessageProtobuf copyWithZone:]
  -[_MRSetRecordingStateMessageProtobuf dictionaryRepresentation]
  -[_MRSetRecordingStateMessageProtobuf state]
  -[_MRSetRecordingStateMessageProtobuf setState:]
  -[_MRSetRecordingStateMessageProtobuf writeTo:]
  -[_MRSetRecordingStateMessageProtobuf mergeFrom:]
  -[_MRSetRecordingStateMessageProtobuf readFrom:]
  -[_MRSetRecordingStateMessageProtobuf copyTo:]
  -[_MRSetRecordingStateMessageProtobuf hasState]
  -[_MRSetRecordingStateMessageProtobuf stateAsString:]
  -[_MRSetRecordingStateMessageProtobuf StringAsState:]
  -[_MRSetRecordingStateMessageProtobuf setHasState:]


_MRAVRouteQueryProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasRouteUID
 @property  NSString *routeUID

  // instance methods
  -[_MRAVRouteQueryProtobuf isEqual:]
  -[_MRAVRouteQueryProtobuf copyWithZone:]
  -[_MRAVRouteQueryProtobuf .cxx_destruct]
  -[_MRAVRouteQueryProtobuf dictionaryRepresentation]
  -[_MRAVRouteQueryProtobuf writeTo:]
  -[_MRAVRouteQueryProtobuf mergeFrom:]
  -[_MRAVRouteQueryProtobuf readFrom:]
  -[_MRAVRouteQueryProtobuf copyTo:]
  -[_MRAVRouteQueryProtobuf routeUID]
  -[_MRAVRouteQueryProtobuf setRouteUID:]
  -[_MRAVRouteQueryProtobuf hasRouteUID]


_MRGetVolumeResultMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasVolume
 @property  float volume

  // instance methods
  -[_MRGetVolumeResultMessageProtobuf isEqual:]
  -[_MRGetVolumeResultMessageProtobuf copyWithZone:]
  -[_MRGetVolumeResultMessageProtobuf dictionaryRepresentation]
  -[_MRGetVolumeResultMessageProtobuf writeTo:]
  -[_MRGetVolumeResultMessageProtobuf mergeFrom:]
  -[_MRGetVolumeResultMessageProtobuf readFrom:]
  -[_MRGetVolumeResultMessageProtobuf copyTo:]
  -[_MRGetVolumeResultMessageProtobuf volume]
  -[_MRGetVolumeResultMessageProtobuf setVolume:]
  -[_MRGetVolumeResultMessageProtobuf setHasVolume:]
  -[_MRGetVolumeResultMessageProtobuf hasVolume]


_MRVolumeControlCapabilitiesDidChangeMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasCapabilities
 @property  _MRVolumeControlAvailabilityProtobuf *capabilities
 @property  BOOL hasEndpointUID
 @property  NSString *endpointUID
 @property  BOOL hasOutputDeviceUID
 @property  NSString *outputDeviceUID

  // instance methods
  -[_MRVolumeControlCapabilitiesDidChangeMessageProtobuf isEqual:]
  -[_MRVolumeControlCapabilitiesDidChangeMessageProtobuf copyWithZone:]
  -[_MRVolumeControlCapabilitiesDidChangeMessageProtobuf .cxx_destruct]
  -[_MRVolumeControlCapabilitiesDidChangeMessageProtobuf dictionaryRepresentation]
  -[_MRVolumeControlCapabilitiesDidChangeMessageProtobuf writeTo:]
  -[_MRVolumeControlCapabilitiesDidChangeMessageProtobuf mergeFrom:]
  -[_MRVolumeControlCapabilitiesDidChangeMessageProtobuf readFrom:]
  -[_MRVolumeControlCapabilitiesDidChangeMessageProtobuf copyTo:]
  -[_MRVolumeControlCapabilitiesDidChangeMessageProtobuf capabilities]
  -[_MRVolumeControlCapabilitiesDidChangeMessageProtobuf setCapabilities:]
  -[_MRVolumeControlCapabilitiesDidChangeMessageProtobuf setOutputDeviceUID:]
  -[_MRVolumeControlCapabilitiesDidChangeMessageProtobuf hasOutputDeviceUID]
  -[_MRVolumeControlCapabilitiesDidChangeMessageProtobuf outputDeviceUID]
  -[_MRVolumeControlCapabilitiesDidChangeMessageProtobuf setEndpointUID:]
  -[_MRVolumeControlCapabilitiesDidChangeMessageProtobuf hasCapabilities]
  -[_MRVolumeControlCapabilitiesDidChangeMessageProtobuf hasEndpointUID]
  -[_MRVolumeControlCapabilitiesDidChangeMessageProtobuf endpointUID]


_MRSendVirtualTouchEventMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasVirtualDeviceID
 @property  unsigned long virtualDeviceID
 @property  BOOL hasEvent
 @property  _MRVirtualTouchEventProtobuf *event

  // instance methods
  -[_MRSendVirtualTouchEventMessageProtobuf isEqual:]
  -[_MRSendVirtualTouchEventMessageProtobuf copyWithZone:]
  -[_MRSendVirtualTouchEventMessageProtobuf .cxx_destruct]
  -[_MRSendVirtualTouchEventMessageProtobuf dictionaryRepresentation]
  -[_MRSendVirtualTouchEventMessageProtobuf writeTo:]
  -[_MRSendVirtualTouchEventMessageProtobuf event]
  -[_MRSendVirtualTouchEventMessageProtobuf setEvent:]
  -[_MRSendVirtualTouchEventMessageProtobuf mergeFrom:]
  -[_MRSendVirtualTouchEventMessageProtobuf readFrom:]
  -[_MRSendVirtualTouchEventMessageProtobuf copyTo:]
  -[_MRSendVirtualTouchEventMessageProtobuf hasEvent]
  -[_MRSendVirtualTouchEventMessageProtobuf setVirtualDeviceID:]
  -[_MRSendVirtualTouchEventMessageProtobuf setHasVirtualDeviceID:]
  -[_MRSendVirtualTouchEventMessageProtobuf hasVirtualDeviceID]
  -[_MRSendVirtualTouchEventMessageProtobuf virtualDeviceID]


MRAVOutputDevice : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *name
 @property  NSString *uid
 @property  NSString *modelID
 @property  NSString *firmwareVersion
 @property  NSString *groupID
 @property  NSString *logicalDeviceID
 @property  NSData *MACAddress
 @property  NSDictionary *modelSpecificInfo
 @property  NSString *playingPairedDeviceName
 @property  BOOL canAccessRemoteAssets
 @property  BOOL canAccessAppleMusic
 @property  BOOL canAccessiCloudMusicLibrary
 @property  BOOL canPlayEncryptedProgressiveDownloadAssets
 @property  BOOL canFetchMediaDataFromSender
 @property  BOOL presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets
 @property  BOOL remoteControllable
 @property  BOOL groupLeader
 @property  BOOL groupContainsGroupLeader
 @property  BOOL airPlayReceiverSessionActive
 @property  BOOL groupable
 @property  BOOL supportsBluetoothSharing
 @property  BOOL proxyGroupPlayer
 @property  BOOL canRelayCommunicationChannel
 @property  BOOL supportsBufferedAirPlay
 @property  BOOL supportsRapport
 @property  BOOL isAddedToHomeKit
 @property  BOOL deviceGroupable
 @property  BOOL pickedOnPairedDevice
 @property  unsigned int deviceType
 @property  unsigned int deviceSubtype
 @property  float batteryLevel
 @property  BOOL hasBatteryLevel
 @property  BOOL localDevice
 @property  BOOL supportsExternalScreen
 @property  BOOL requiresAuthorization
 @property  BOOL parentGroupContainsDiscoverableLeader
 @property  NSString *parentGroupIdentifier
 @property  BOOL volumeControlAvailable
 @property  unsigned int volumeCapabilities
 @property  MRAVOutputDeviceSourceInfo *sourceInfo
 @property  float volume
 @property  BOOL isPersonalRoute
 @property  NSString *bluetoothID
 @property  NSString *debugName
 @property  NSString *currentBluetoothListeningMode
 @property  NSArray *availableBluetoothListeningModes
 @property  MRAVEndpoint *endpoint
 @property  _MRAVOutputDeviceDescriptorProtobuf *descriptor
 @property  NSString *capabilitiesDescription
 @property  NSString *composedTypeDescription
 @property  NSString *roleDescription
 @property  NSDictionary *jsonEncodableDictionaryRepresentation

  // class methods
  +[MRAVOutputDevice localDeviceUID]
  +[MRAVOutputDevice localDeviceLocalizedName]

  // instance methods
  -[MRAVOutputDevice isEqual:]
  -[MRAVOutputDevice name]
  -[MRAVOutputDevice .cxx_destruct]
  -[MRAVOutputDevice endpoint]
  -[MRAVOutputDevice uid]
  -[MRAVOutputDevice setEndpoint:]
  -[MRAVOutputDevice deviceType]
  -[MRAVOutputDevice groupID]
  -[MRAVOutputDevice setGroupID:]
  -[MRAVOutputDevice descriptor]
  -[MRAVOutputDevice debugName]
  -[MRAVOutputDevice firmwareVersion]
  -[MRAVOutputDevice volume]
  -[MRAVOutputDevice setVolume:]
  -[MRAVOutputDevice batteryLevel]
  -[MRAVOutputDevice sourceInfo]
  -[MRAVOutputDevice MACAddress]
  -[MRAVOutputDevice parentGroupIdentifier]
  -[MRAVOutputDevice bluetoothID]
  -[MRAVOutputDevice modelID]
  -[MRAVOutputDevice requiresAuthorization]
  -[MRAVOutputDevice canAccessRemoteAssets]
  -[MRAVOutputDevice canAccessAppleMusic]
  -[MRAVOutputDevice canAccessiCloudMusicLibrary]
  -[MRAVOutputDevice supportsBufferedAirPlay]
  -[MRAVOutputDevice isGroupLeader]
  -[MRAVOutputDevice groupContainsGroupLeader]
  -[MRAVOutputDevice logicalDeviceID]
  -[MRAVOutputDevice canRelayCommunicationChannel]
  -[MRAVOutputDevice canPlayEncryptedProgressiveDownloadAssets]
  -[MRAVOutputDevice canFetchMediaDataFromSender]
  -[MRAVOutputDevice presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets]
  -[MRAVOutputDevice supportsBluetoothSharing]
  -[MRAVOutputDevice availableBluetoothListeningModes]
  -[MRAVOutputDevice currentBluetoothListeningMode]
  -[MRAVOutputDevice hasBatteryLevel]
  -[MRAVOutputDevice roleDescription]
  -[MRAVOutputDevice isVolumeControlAvailable]
  -[MRAVOutputDevice volumeCapabilities]
  -[MRAVOutputDevice isProxyGroupPlayer]
  -[MRAVOutputDevice playingPairedDeviceName]
  -[MRAVOutputDevice isPickedOnPairedDevice]
  -[MRAVOutputDevice isLocalDevice]
  -[MRAVOutputDevice deviceSubtype]
  -[MRAVOutputDevice isRemoteControllable]
  -[MRAVOutputDevice isGroupable]
  -[MRAVOutputDevice isDeviceGroupable]
  -[MRAVOutputDevice isAirPlayReceiverSessionActive]
  -[MRAVOutputDevice parentGroupContainsDiscoverableLeader]
  -[MRAVOutputDevice isAddedToHomeKit]
  -[MRAVOutputDevice setParentGroupIdentifier:]
  -[MRAVOutputDevice modelSpecificInfo]
  -[MRAVOutputDevice supportsExternalScreen]
  -[MRAVOutputDevice capabilitiesDescription]
  -[MRAVOutputDevice composedTypeDescription]
  -[MRAVOutputDevice jsonEncodableDictionaryRepresentation]
  -[MRAVOutputDevice isPersonalRoute]
  -[MRAVOutputDevice supportsRapport]


MRAVConcreteOutputDevice : MRAVOutputDevice
 @property  AVOutputDevice *avOutputDevice
 @property  MRAVOutputDeviceSourceInfo *sourceInfo

  // instance methods
  -[MRAVConcreteOutputDevice name]
  -[MRAVConcreteOutputDevice .cxx_destruct]
  -[MRAVConcreteOutputDevice uid]
  -[MRAVConcreteOutputDevice deviceType]
  -[MRAVConcreteOutputDevice groupID]
  -[MRAVConcreteOutputDevice setGroupID:]
  -[MRAVConcreteOutputDevice firmwareVersion]
  -[MRAVConcreteOutputDevice volume]
  -[MRAVConcreteOutputDevice setVolume:]
  -[MRAVConcreteOutputDevice batteryLevel]
  -[MRAVConcreteOutputDevice sourceInfo]
  -[MRAVConcreteOutputDevice setSourceInfo:]
  -[MRAVConcreteOutputDevice MACAddress]
  -[MRAVConcreteOutputDevice parentGroupIdentifier]
  -[MRAVConcreteOutputDevice bluetoothID]
  -[MRAVConcreteOutputDevice modelID]
  -[MRAVConcreteOutputDevice requiresAuthorization]
  -[MRAVConcreteOutputDevice canAccessRemoteAssets]
  -[MRAVConcreteOutputDevice canAccessAppleMusic]
  -[MRAVConcreteOutputDevice canAccessiCloudMusicLibrary]
  -[MRAVConcreteOutputDevice supportsBufferedAirPlay]
  -[MRAVConcreteOutputDevice isGroupLeader]
  -[MRAVConcreteOutputDevice groupContainsGroupLeader]
  -[MRAVConcreteOutputDevice logicalDeviceID]
  -[MRAVConcreteOutputDevice canRelayCommunicationChannel]
  -[MRAVConcreteOutputDevice canPlayEncryptedProgressiveDownloadAssets]
  -[MRAVConcreteOutputDevice canFetchMediaDataFromSender]
  -[MRAVConcreteOutputDevice presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets]
  -[MRAVConcreteOutputDevice supportsBluetoothSharing]
  -[MRAVConcreteOutputDevice availableBluetoothListeningModes]
  -[MRAVConcreteOutputDevice currentBluetoothListeningMode]
  -[MRAVConcreteOutputDevice setCurrentBluetoothListeningMode:error:]
  -[MRAVConcreteOutputDevice hasBatteryLevel]
  -[MRAVConcreteOutputDevice _outputContext]
  -[MRAVConcreteOutputDevice isVolumeControlAvailable]
  -[MRAVConcreteOutputDevice isProxyGroupPlayer]
  -[MRAVConcreteOutputDevice playingPairedDeviceName]
  -[MRAVConcreteOutputDevice isPickedOnPairedDevice]
  -[MRAVConcreteOutputDevice isLocalDevice]
  -[MRAVConcreteOutputDevice deviceSubtype]
  -[MRAVConcreteOutputDevice isRemoteControllable]
  -[MRAVConcreteOutputDevice isGroupable]
  -[MRAVConcreteOutputDevice isDeviceGroupable]
  -[MRAVConcreteOutputDevice isAirPlayReceiverSessionActive]
  -[MRAVConcreteOutputDevice parentGroupContainsDiscoverableLeader]
  -[MRAVConcreteOutputDevice isAddedToHomeKit]
  -[MRAVConcreteOutputDevice modelSpecificInfo]
  -[MRAVConcreteOutputDevice supportsExternalScreen]
  -[MRAVConcreteOutputDevice supportsRapport]
  -[MRAVConcreteOutputDevice _onqueue_clearCachedAVOutputDeviceProperties]
  -[MRAVConcreteOutputDevice _playingPairedDeviceNameForAVOutputDevice:]
  -[MRAVConcreteOutputDevice _isOutputDevice:belongToOutputContext:]
  -[MRAVConcreteOutputDevice initWithAVOutputDevice:sourceInfo:]
  -[MRAVConcreteOutputDevice avOutputDevice]
  -[MRAVConcreteOutputDevice setAVOutputDevice:]


MRAVDistantOutputDevice : MRAVOutputDevice <NSSecureCoding>
  // class methods
  +[MRAVDistantOutputDevice supportsSecureCoding]

  // instance methods
  -[MRAVDistantOutputDevice name]
  -[MRAVDistantOutputDevice encodeWithCoder:]
  -[MRAVDistantOutputDevice initWithCoder:]
  -[MRAVDistantOutputDevice .cxx_destruct]
  -[MRAVDistantOutputDevice uid]
  -[MRAVDistantOutputDevice deviceType]
  -[MRAVDistantOutputDevice groupID]
  -[MRAVDistantOutputDevice descriptor]
  -[MRAVDistantOutputDevice firmwareVersion]
  -[MRAVDistantOutputDevice volume]
  -[MRAVDistantOutputDevice batteryLevel]
  -[MRAVDistantOutputDevice initWithDescriptor:]
  -[MRAVDistantOutputDevice sourceInfo]
  -[MRAVDistantOutputDevice MACAddress]
  -[MRAVDistantOutputDevice parentGroupIdentifier]
  -[MRAVDistantOutputDevice bluetoothID]
  -[MRAVDistantOutputDevice modelID]
  -[MRAVDistantOutputDevice requiresAuthorization]
  -[MRAVDistantOutputDevice canAccessRemoteAssets]
  -[MRAVDistantOutputDevice canAccessAppleMusic]
  -[MRAVDistantOutputDevice canAccessiCloudMusicLibrary]
  -[MRAVDistantOutputDevice supportsBufferedAirPlay]
  -[MRAVDistantOutputDevice isGroupLeader]
  -[MRAVDistantOutputDevice groupContainsGroupLeader]
  -[MRAVDistantOutputDevice logicalDeviceID]
  -[MRAVDistantOutputDevice canRelayCommunicationChannel]
  -[MRAVDistantOutputDevice canPlayEncryptedProgressiveDownloadAssets]
  -[MRAVDistantOutputDevice canFetchMediaDataFromSender]
  -[MRAVDistantOutputDevice presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets]
  -[MRAVDistantOutputDevice hasBatteryLevel]
  -[MRAVDistantOutputDevice isVolumeControlAvailable]
  -[MRAVDistantOutputDevice volumeCapabilities]
  -[MRAVDistantOutputDevice isProxyGroupPlayer]
  -[MRAVDistantOutputDevice isLocalDevice]
  -[MRAVDistantOutputDevice deviceSubtype]
  -[MRAVDistantOutputDevice isRemoteControllable]
  -[MRAVDistantOutputDevice isGroupable]
  -[MRAVDistantOutputDevice isDeviceGroupable]
  -[MRAVDistantOutputDevice isAirPlayReceiverSessionActive]
  -[MRAVDistantOutputDevice parentGroupContainsDiscoverableLeader]
  -[MRAVDistantOutputDevice isAddedToHomeKit]
  -[MRAVDistantOutputDevice modelSpecificInfo]
  -[MRAVDistantOutputDevice supportsExternalScreen]
  -[MRAVDistantOutputDevice initWithSkeleton:]


MRAVLocalOutputDevice : MRAVOutputDevice
  // instance methods
  -[MRAVLocalOutputDevice .cxx_destruct]
  -[MRAVLocalOutputDevice uid]


MRAVDistantExternalDeviceMetadata : NSObject /usr/lib/libSystem.B.dylib <NSMutableCopying, NSSecureCoding>
 @property  NSString *name
 @property  NSString *hostName
 @property  long long hostPort
 @property  _MRDeviceInfoMessageProtobuf *deviceInfo
 @property  MRSupportedProtocolMessages *supportedMessages
 @property  BOOL paired
 @property  BOOL usingSystemPairing

  // class methods
  +[MRAVDistantExternalDeviceMetadata supportsSecureCoding]

  // instance methods
  -[MRAVDistantExternalDeviceMetadata name]
  -[MRAVDistantExternalDeviceMetadata copyWithZone:]
  -[MRAVDistantExternalDeviceMetadata mutableCopyWithZone:]
  -[MRAVDistantExternalDeviceMetadata encodeWithCoder:]
  -[MRAVDistantExternalDeviceMetadata initWithCoder:]
  -[MRAVDistantExternalDeviceMetadata .cxx_destruct]
  -[MRAVDistantExternalDeviceMetadata hostName]
  -[MRAVDistantExternalDeviceMetadata deviceInfo]
  -[MRAVDistantExternalDeviceMetadata paired]
  -[MRAVDistantExternalDeviceMetadata _copyWithZone:usingConcreteClass:]
  -[MRAVDistantExternalDeviceMetadata hostPort]
  -[MRAVDistantExternalDeviceMetadata supportedMessages]
  -[MRAVDistantExternalDeviceMetadata usingSystemPairing]


MRAVMutableDistantExternalDeviceMetadata : MRAVDistantExternalDeviceMetadata
 @property  NSString *name
 @property  NSString *hostName
 @property  long long hostPort
 @property  MRSupportedProtocolMessages *supportedMessages
 @property  _MRDeviceInfoMessageProtobuf *deviceInfo
 @property  BOOL paired
 @property  BOOL usingSystemPairing

  // instance methods
  -[MRAVMutableDistantExternalDeviceMetadata setName:]
  -[MRAVMutableDistantExternalDeviceMetadata setDeviceInfo:]
  -[MRAVMutableDistantExternalDeviceMetadata setPaired:]
  -[MRAVMutableDistantExternalDeviceMetadata setHostName:]
  -[MRAVMutableDistantExternalDeviceMetadata setHostPort:]
  -[MRAVMutableDistantExternalDeviceMetadata setSupportedMessages:]
  -[MRAVMutableDistantExternalDeviceMetadata setUsingSystemPairing:]


MRDistantExternalDevice : MRExternalDevice <MRAVDistantExternalDeviceClientProtocol>
 @property  @? connectionStateCallback
 @property  NSObject<OS_dispatch_queue> *connectionStateCallbackQueue
 @property  @? nameCallback
 @property  NSObject<OS_dispatch_queue> *nameCallbackQueue
 @property  @? customDataCallback
 @property  NSObject<OS_dispatch_queue> *customDataCallbackQueue
 @property  @? volumeCallback
 @property  NSObject<OS_dispatch_queue> *volumeCallbackQueue
 @property  NSXPCListenerEndpoint *listenerEndpoint
 @property  BOOL hasEverAttemptedToConnect
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MRDistantExternalDevice clientInterface]
  +[MRDistantExternalDevice serviceInterface]
  +[MRDistantExternalDevice _notificationSerialQueue]

  // instance methods
  -[MRDistantExternalDevice dealloc]
  -[MRDistantExternalDevice name]
  -[MRDistantExternalDevice isValid]
  -[MRDistantExternalDevice port]
  -[MRDistantExternalDevice .cxx_destruct]
  -[MRDistantExternalDevice hostName]
  -[MRDistantExternalDevice listenerEndpoint]
  -[MRDistantExternalDevice connectionState]
  -[MRDistantExternalDevice deviceInfo]
  -[MRDistantExternalDevice isPaired]
  -[MRDistantExternalDevice disconnect:]
  -[MRDistantExternalDevice _remoteObjectProxyWithErrorHandler:]
  -[MRDistantExternalDevice outputDeviceVolume:queue:completion:]
  -[MRDistantExternalDevice supportedMessages]
  -[MRDistantExternalDevice connectWithOptions:]
  -[MRDistantExternalDevice unpair]
  -[MRDistantExternalDevice sendCustomData:withName:]
  -[MRDistantExternalDevice hostedExternalDeviceConnectionStateDidChange:withError:]
  -[MRDistantExternalDevice hostedExternalDeviceNameDidChange:]
  -[MRDistantExternalDevice hostedExternalDeviceDidReceiveCustomData:withName:]
  -[MRDistantExternalDevice hostedExternalDeviceVolumeDidChange:forEndpointWithIdentifier:forOutputDeviceWithIdentifier:]
  -[MRDistantExternalDevice hostedExternalDeviceEndpointDidChange:]
  -[MRDistantExternalDevice _handleDeviceInfoDidChange:]
  -[MRDistantExternalDevice _updateHostedDeviceDesiredNotifications]
  -[MRDistantExternalDevice _hostedExternalDeviceConnection]
  -[MRDistantExternalDevice _onSerialQueue_synchronousLoadExternalDeviceMetadataIfNecessary]
  -[MRDistantExternalDevice setConnectionStateCallback:]
  -[MRDistantExternalDevice setConnectionStateCallbackQueue:]
  -[MRDistantExternalDevice _updateHostedDeviceDesiredCallbacks]
  -[MRDistantExternalDevice setNameCallback:]
  -[MRDistantExternalDevice setNameCallbackQueue:]
  -[MRDistantExternalDevice setCustomDataCallback:]
  -[MRDistantExternalDevice setCustomDataCallbackQueue:]
  -[MRDistantExternalDevice setVolumeCallback:]
  -[MRDistantExternalDevice setVolumeCallbackQueue:]
  -[MRDistantExternalDevice connectionStateCallback]
  -[MRDistantExternalDevice connectionStateCallbackQueue]
  -[MRDistantExternalDevice nameCallbackQueue]
  -[MRDistantExternalDevice nameCallback]
  -[MRDistantExternalDevice customDataCallbackQueue]
  -[MRDistantExternalDevice customDataCallback]
  -[MRDistantExternalDevice volumeCallbackQueue]
  -[MRDistantExternalDevice volumeCallback]
  -[MRDistantExternalDevice initWithExternalDeviceListenerEndpoint:]
  -[MRDistantExternalDevice wantsNowPlayingNotifications]
  -[MRDistantExternalDevice setWantsNowPlayingNotifications:]
  -[MRDistantExternalDevice wantsVolumeNotifications]
  -[MRDistantExternalDevice setWantsVolumeNotifications:]
  -[MRDistantExternalDevice wantsOutputDeviceNotifications]
  -[MRDistantExternalDevice setWantsOutputDeviceNotifications:]
  -[MRDistantExternalDevice isUsingSystemPairing]
  -[MRDistantExternalDevice customOrigin]
  -[MRDistantExternalDevice setPairingCallback:withQueue:]
  -[MRDistantExternalDevice setConnectionStateCallback:withQueue:]
  -[MRDistantExternalDevice setNameCallback:withQueue:]
  -[MRDistantExternalDevice setPairingAllowedCallback:withQueue:]
  -[MRDistantExternalDevice setCustomDataCallback:withQueue:]
  -[MRDistantExternalDevice setVolumeCallback:withQueue:]
  -[MRDistantExternalDevice setOutputDeviceVolume:outputDeviceUID:queue:completion:]
  -[MRDistantExternalDevice outputDeviceVolumeControlCapabilities:queue:completion:]
  -[MRDistantExternalDevice modifyOutputContextOfType:addingDeviceUIDs:removingDeviceUIDs:settingDeviceUIDs:withReplyQueue:completion:]
  -[MRDistantExternalDevice ping:callback:withQueue:]
  -[MRDistantExternalDevice sendButtonEvent:]
  -[MRDistantExternalDevice hasEverAttemptedToConnect]


_MRContentItemMetadataProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasTitle
 @property  NSString *title
 @property  BOOL hasSubtitle
 @property  NSString *subtitle
 @property  BOOL hasIsContainer
 @property  BOOL isContainer
 @property  BOOL hasIsPlayable
 @property  BOOL isPlayable
 @property  BOOL hasPlaybackProgress
 @property  float playbackProgress
 @property  BOOL hasAlbumName
 @property  NSString *albumName
 @property  BOOL hasTrackArtistName
 @property  NSString *trackArtistName
 @property  BOOL hasAlbumArtistName
 @property  NSString *albumArtistName
 @property  BOOL hasDirectorName
 @property  NSString *directorName
 @property  BOOL hasSeasonNumber
 @property  int seasonNumber
 @property  BOOL hasEpisodeNumber
 @property  int episodeNumber
 @property  BOOL hasReleaseDate
 @property  double releaseDate
 @property  BOOL hasPlayCount
 @property  int playCount
 @property  BOOL hasDuration
 @property  double duration
 @property  BOOL hasLocalizedContentRating
 @property  NSString *localizedContentRating
 @property  BOOL hasIsExplicitItem
 @property  BOOL isExplicitItem
 @property  BOOL hasPlaylistType
 @property  int playlistType
 @property  BOOL hasRadioStationType
 @property  int radioStationType
 @property  BOOL hasArtworkAvailable
 @property  BOOL artworkAvailable
 @property  BOOL hasInfoAvailable
 @property  BOOL infoAvailable
 @property  BOOL hasLanguageOptionsAvailable
 @property  BOOL languageOptionsAvailable
 @property  BOOL hasNumberOfSections
 @property  int numberOfSections
 @property  BOOL hasLyricsAvailable
 @property  BOOL lyricsAvailable
 @property  BOOL hasEditingStyleFlags
 @property  int editingStyleFlags
 @property  BOOL hasIsStreamingContent
 @property  BOOL isStreamingContent
 @property  BOOL hasIsCurrentlyPlaying
 @property  BOOL isCurrentlyPlaying
 @property  BOOL hasCollectionIdentifier
 @property  NSString *collectionIdentifier
 @property  BOOL hasProfileIdentifier
 @property  NSString *profileIdentifier
 @property  BOOL hasStartTime
 @property  double startTime
 @property  BOOL hasArtworkMIMEType
 @property  NSString *artworkMIMEType
 @property  BOOL hasAssetURLString
 @property  NSString *assetURLString
 @property  BOOL hasComposer
 @property  NSString *composer
 @property  BOOL hasDiscNumber
 @property  int discNumber
 @property  BOOL hasElapsedTime
 @property  double elapsedTime
 @property  BOOL hasGenre
 @property  NSString *genre
 @property  BOOL hasIsAlwaysLive
 @property  BOOL isAlwaysLive
 @property  BOOL hasPlaybackRate
 @property  float playbackRate
 @property  BOOL hasChapterCount
 @property  int chapterCount
 @property  BOOL hasTotalDiscCount
 @property  int totalDiscCount
 @property  BOOL hasTotalTrackCount
 @property  int totalTrackCount
 @property  BOOL hasTrackNumber
 @property  int trackNumber
 @property  BOOL hasContentIdentifier
 @property  NSString *contentIdentifier
 @property  BOOL hasIsSharable
 @property  BOOL isSharable
 @property  BOOL hasIsLiked
 @property  BOOL isLiked
 @property  BOOL hasIsInWishList
 @property  BOOL isInWishList
 @property  BOOL hasRadioStationIdentifier
 @property  long long radioStationIdentifier
 @property  BOOL hasRadioStationName
 @property  NSString *radioStationName
 @property  BOOL hasRadioStationString
 @property  NSString *radioStationString
 @property  BOOL hasITunesStoreIdentifier
 @property  long long iTunesStoreIdentifier
 @property  BOOL hasITunesStoreSubscriptionIdentifier
 @property  long long iTunesStoreSubscriptionIdentifier
 @property  BOOL hasITunesStoreArtistIdentifier
 @property  long long iTunesStoreArtistIdentifier
 @property  BOOL hasITunesStoreAlbumIdentifier
 @property  long long iTunesStoreAlbumIdentifier
 @property  BOOL hasPurchaseInfoData
 @property  NSData *purchaseInfoData
 @property  BOOL hasDefaultPlaybackRate
 @property  float defaultPlaybackRate
 @property  BOOL hasDownloadState
 @property  int downloadState
 @property  BOOL hasDownloadProgress
 @property  float downloadProgress
 @property  BOOL hasAppMetricsData
 @property  NSData *appMetricsData
 @property  BOOL hasSeriesName
 @property  NSString *seriesName
 @property  BOOL hasMediaType
 @property  int mediaType
 @property  BOOL hasMediaSubType
 @property  int mediaSubType
 @property  BOOL hasNowPlayingInfoData
 @property  NSData *nowPlayingInfoData
 @property  BOOL hasUserInfoData
 @property  NSData *userInfoData
 @property  BOOL hasIsSteerable
 @property  BOOL isSteerable
 @property  BOOL hasArtworkURL
 @property  NSString *artworkURL
 @property  BOOL hasLyricsURL
 @property  NSString *lyricsURL
 @property  BOOL hasDeviceSpecificUserInfoData
 @property  NSData *deviceSpecificUserInfoData
 @property  BOOL hasCollectionInfoData
 @property  NSData *collectionInfoData
 @property  BOOL hasElapsedTimeTimestamp
 @property  double elapsedTimeTimestamp
 @property  BOOL hasInferredTimestamp
 @property  double inferredTimestamp
 @property  BOOL hasServiceIdentifier
 @property  NSString *serviceIdentifier
 @property  BOOL hasArtworkDataWidthDeprecated
 @property  int artworkDataWidthDeprecated
 @property  BOOL hasArtworkDataHeightDeprecated
 @property  int artworkDataHeightDeprecated
 @property  BOOL hasCurrentPlaybackDateData
 @property  NSData *currentPlaybackDateData
 @property  BOOL hasArtworkIdentifier
 @property  NSString *artworkIdentifier
 @property  BOOL hasIsLoading
 @property  BOOL isLoading
 @property  BOOL hasArtworkURLTemplatesData
 @property  NSData *artworkURLTemplatesData
 @property  BOOL hasLegacyUniqueIdentifier
 @property  long long legacyUniqueIdentifier
 @property  BOOL hasEpisodeType
 @property  int episodeType
 @property  BOOL hasArtworkFileURL
 @property  NSString *artworkFileURL
 @property  BOOL hasBrandIdentifier
 @property  NSString *brandIdentifier
 @property  BOOL hasLocalizedDurationString
 @property  NSString *localizedDurationString
 @property  BOOL hasAlbumYear
 @property  NSString *albumYear

  // class methods
  +[_MRContentItemMetadataProtobuf initialize]

  // instance methods
  -[_MRContentItemMetadataProtobuf isEqual:]
  -[_MRContentItemMetadataProtobuf copyWithZone:]
  -[_MRContentItemMetadataProtobuf .cxx_destruct]
  -[_MRContentItemMetadataProtobuf _init]
  -[_MRContentItemMetadataProtobuf dictionaryRepresentation]
  -[_MRContentItemMetadataProtobuf title]
  -[_MRContentItemMetadataProtobuf setTitle:]
  -[_MRContentItemMetadataProtobuf duration]
  -[_MRContentItemMetadataProtobuf genre]
  -[_MRContentItemMetadataProtobuf writeTo:]
  -[_MRContentItemMetadataProtobuf subtitle]
  -[_MRContentItemMetadataProtobuf mediaType]
  -[_MRContentItemMetadataProtobuf mergeFrom:]
  -[_MRContentItemMetadataProtobuf readFrom:]
  -[_MRContentItemMetadataProtobuf copyTo:]
  -[_MRContentItemMetadataProtobuf setDuration:]
  -[_MRContentItemMetadataProtobuf startTime]
  -[_MRContentItemMetadataProtobuf setStartTime:]
  -[_MRContentItemMetadataProtobuf setSubtitle:]
  -[_MRContentItemMetadataProtobuf hasTitle]
  -[_MRContentItemMetadataProtobuf userInfoData]
  -[_MRContentItemMetadataProtobuf setUserInfoData:]
  -[_MRContentItemMetadataProtobuf numberOfSections]
  -[_MRContentItemMetadataProtobuf elapsedTime]
  -[_MRContentItemMetadataProtobuf composer]
  -[_MRContentItemMetadataProtobuf setComposer:]
  -[_MRContentItemMetadataProtobuf isLoading]
  -[_MRContentItemMetadataProtobuf serviceIdentifier]
  -[_MRContentItemMetadataProtobuf hasDuration]
  -[_MRContentItemMetadataProtobuf hasStartTime]
  -[_MRContentItemMetadataProtobuf setHasStartTime:]
  -[_MRContentItemMetadataProtobuf setHasDuration:]
  -[_MRContentItemMetadataProtobuf setIsLoading:]
  -[_MRContentItemMetadataProtobuf setServiceIdentifier:]
  -[_MRContentItemMetadataProtobuf setContentIdentifier:]
  -[_MRContentItemMetadataProtobuf isPlayable]
  -[_MRContentItemMetadataProtobuf setMediaType:]
  -[_MRContentItemMetadataProtobuf playCount]
  -[_MRContentItemMetadataProtobuf setPlayCount:]
  -[_MRContentItemMetadataProtobuf albumName]
  -[_MRContentItemMetadataProtobuf setAlbumName:]
  -[_MRContentItemMetadataProtobuf playbackRate]
  -[_MRContentItemMetadataProtobuf setPlaybackRate:]
  -[_MRContentItemMetadataProtobuf hasAlbumName]
  -[_MRContentItemMetadataProtobuf _initWithData:]
  -[_MRContentItemMetadataProtobuf hasSubtitle]
  -[_MRContentItemMetadataProtobuf iTunesStoreIdentifier]
  -[_MRContentItemMetadataProtobuf setITunesStoreIdentifier:]
  -[_MRContentItemMetadataProtobuf hasITunesStoreIdentifier]
  -[_MRContentItemMetadataProtobuf releaseDate]
  -[_MRContentItemMetadataProtobuf hasMediaType]
  -[_MRContentItemMetadataProtobuf setHasMediaType:]
  -[_MRContentItemMetadataProtobuf setReleaseDate:]
  -[_MRContentItemMetadataProtobuf hasReleaseDate]
  -[_MRContentItemMetadataProtobuf defaultPlaybackRate]
  -[_MRContentItemMetadataProtobuf setDefaultPlaybackRate:]
  -[_MRContentItemMetadataProtobuf setElapsedTime:]
  -[_MRContentItemMetadataProtobuf albumYear]
  -[_MRContentItemMetadataProtobuf discNumber]
  -[_MRContentItemMetadataProtobuf isAlwaysLive]
  -[_MRContentItemMetadataProtobuf isInWishList]
  -[_MRContentItemMetadataProtobuf playlistType]
  -[_MRContentItemMetadataProtobuf trackNumber]
  -[_MRContentItemMetadataProtobuf seasonNumber]
  -[_MRContentItemMetadataProtobuf albumArtistName]
  -[_MRContentItemMetadataProtobuf setGenre:]
  -[_MRContentItemMetadataProtobuf playbackProgress]
  -[_MRContentItemMetadataProtobuf setArtworkIdentifier:]
  -[_MRContentItemMetadataProtobuf artworkIdentifier]
  -[_MRContentItemMetadataProtobuf isExplicitItem]
  -[_MRContentItemMetadataProtobuf downloadProgress]
  -[_MRContentItemMetadataProtobuf setDownloadProgress:]
  -[_MRContentItemMetadataProtobuf setAlbumArtistName:]
  -[_MRContentItemMetadataProtobuf setAlbumYear:]
  -[_MRContentItemMetadataProtobuf collectionIdentifier]
  -[_MRContentItemMetadataProtobuf setCollectionIdentifier:]
  -[_MRContentItemMetadataProtobuf directorName]
  -[_MRContentItemMetadataProtobuf setDirectorName:]
  -[_MRContentItemMetadataProtobuf localizedContentRating]
  -[_MRContentItemMetadataProtobuf setLocalizedContentRating:]
  -[_MRContentItemMetadataProtobuf profileIdentifier]
  -[_MRContentItemMetadataProtobuf setProfileIdentifier:]
  -[_MRContentItemMetadataProtobuf radioStationName]
  -[_MRContentItemMetadataProtobuf setRadioStationName:]
  -[_MRContentItemMetadataProtobuf seriesName]
  -[_MRContentItemMetadataProtobuf setSeriesName:]
  -[_MRContentItemMetadataProtobuf trackArtistName]
  -[_MRContentItemMetadataProtobuf setTrackArtistName:]
  -[_MRContentItemMetadataProtobuf artworkURL]
  -[_MRContentItemMetadataProtobuf setArtworkURL:]
  -[_MRContentItemMetadataProtobuf localizedDurationString]
  -[_MRContentItemMetadataProtobuf setLocalizedDurationString:]
  -[_MRContentItemMetadataProtobuf setDiscNumber:]
  -[_MRContentItemMetadataProtobuf episodeNumber]
  -[_MRContentItemMetadataProtobuf setEpisodeNumber:]
  -[_MRContentItemMetadataProtobuf setSeasonNumber:]
  -[_MRContentItemMetadataProtobuf totalDiscCount]
  -[_MRContentItemMetadataProtobuf setTotalDiscCount:]
  -[_MRContentItemMetadataProtobuf totalTrackCount]
  -[_MRContentItemMetadataProtobuf setTotalTrackCount:]
  -[_MRContentItemMetadataProtobuf setTrackNumber:]
  -[_MRContentItemMetadataProtobuf isSteerable]
  -[_MRContentItemMetadataProtobuf setPlaylistType:]
  -[_MRContentItemMetadataProtobuf radioStationType]
  -[_MRContentItemMetadataProtobuf setRadioStationType:]
  -[_MRContentItemMetadataProtobuf episodeType]
  -[_MRContentItemMetadataProtobuf setEpisodeType:]
  -[_MRContentItemMetadataProtobuf editingStyleFlags]
  -[_MRContentItemMetadataProtobuf setEditingStyleFlags:]
  -[_MRContentItemMetadataProtobuf elapsedTimeTimestamp]
  -[_MRContentItemMetadataProtobuf setPlaybackProgress:]
  -[_MRContentItemMetadataProtobuf isContainer]
  -[_MRContentItemMetadataProtobuf isStreamingContent]
  -[_MRContentItemMetadataProtobuf setBrandIdentifier:]
  -[_MRContentItemMetadataProtobuf hasArtworkIdentifier]
  -[_MRContentItemMetadataProtobuf downloadState]
  -[_MRContentItemMetadataProtobuf contentIdentifier]
  -[_MRContentItemMetadataProtobuf setDownloadState:]
  -[_MRContentItemMetadataProtobuf setNumberOfSections:]
  -[_MRContentItemMetadataProtobuf hasElapsedTime]
  -[_MRContentItemMetadataProtobuf setHasElapsedTime:]
  -[_MRContentItemMetadataProtobuf setHasPlaybackRate:]
  -[_MRContentItemMetadataProtobuf hasPlaybackRate]
  -[_MRContentItemMetadataProtobuf setRadioStationIdentifier:]
  -[_MRContentItemMetadataProtobuf setHasRadioStationIdentifier:]
  -[_MRContentItemMetadataProtobuf hasRadioStationIdentifier]
  -[_MRContentItemMetadataProtobuf hasRadioStationName]
  -[_MRContentItemMetadataProtobuf setIsAlwaysLive:]
  -[_MRContentItemMetadataProtobuf setHasIsAlwaysLive:]
  -[_MRContentItemMetadataProtobuf hasIsAlwaysLive]
  -[_MRContentItemMetadataProtobuf radioStationIdentifier]
  -[_MRContentItemMetadataProtobuf setArtworkMIMEType:]
  -[_MRContentItemMetadataProtobuf setAssetURLString:]
  -[_MRContentItemMetadataProtobuf setRadioStationString:]
  -[_MRContentItemMetadataProtobuf setPurchaseInfoData:]
  -[_MRContentItemMetadataProtobuf setAppMetricsData:]
  -[_MRContentItemMetadataProtobuf setNowPlayingInfoData:]
  -[_MRContentItemMetadataProtobuf setLyricsURL:]
  -[_MRContentItemMetadataProtobuf setDeviceSpecificUserInfoData:]
  -[_MRContentItemMetadataProtobuf setCollectionInfoData:]
  -[_MRContentItemMetadataProtobuf setCurrentPlaybackDateData:]
  -[_MRContentItemMetadataProtobuf setArtworkURLTemplatesData:]
  -[_MRContentItemMetadataProtobuf setArtworkFileURL:]
  -[_MRContentItemMetadataProtobuf setIsContainer:]
  -[_MRContentItemMetadataProtobuf setHasIsContainer:]
  -[_MRContentItemMetadataProtobuf hasIsContainer]
  -[_MRContentItemMetadataProtobuf setIsPlayable:]
  -[_MRContentItemMetadataProtobuf setHasIsPlayable:]
  -[_MRContentItemMetadataProtobuf hasIsPlayable]
  -[_MRContentItemMetadataProtobuf setHasPlaybackProgress:]
  -[_MRContentItemMetadataProtobuf hasPlaybackProgress]
  -[_MRContentItemMetadataProtobuf hasTrackArtistName]
  -[_MRContentItemMetadataProtobuf hasAlbumArtistName]
  -[_MRContentItemMetadataProtobuf hasDirectorName]
  -[_MRContentItemMetadataProtobuf setHasSeasonNumber:]
  -[_MRContentItemMetadataProtobuf hasSeasonNumber]
  -[_MRContentItemMetadataProtobuf setHasEpisodeNumber:]
  -[_MRContentItemMetadataProtobuf hasEpisodeNumber]
  -[_MRContentItemMetadataProtobuf setHasReleaseDate:]
  -[_MRContentItemMetadataProtobuf setHasPlayCount:]
  -[_MRContentItemMetadataProtobuf hasPlayCount]
  -[_MRContentItemMetadataProtobuf hasLocalizedContentRating]
  -[_MRContentItemMetadataProtobuf setIsExplicitItem:]
  -[_MRContentItemMetadataProtobuf setHasIsExplicitItem:]
  -[_MRContentItemMetadataProtobuf hasIsExplicitItem]
  -[_MRContentItemMetadataProtobuf setHasPlaylistType:]
  -[_MRContentItemMetadataProtobuf hasPlaylistType]
  -[_MRContentItemMetadataProtobuf setHasRadioStationType:]
  -[_MRContentItemMetadataProtobuf hasRadioStationType]
  -[_MRContentItemMetadataProtobuf setArtworkAvailable:]
  -[_MRContentItemMetadataProtobuf setHasArtworkAvailable:]
  -[_MRContentItemMetadataProtobuf hasArtworkAvailable]
  -[_MRContentItemMetadataProtobuf setInfoAvailable:]
  -[_MRContentItemMetadataProtobuf setHasInfoAvailable:]
  -[_MRContentItemMetadataProtobuf hasInfoAvailable]
  -[_MRContentItemMetadataProtobuf setLanguageOptionsAvailable:]
  -[_MRContentItemMetadataProtobuf setHasLanguageOptionsAvailable:]
  -[_MRContentItemMetadataProtobuf hasLanguageOptionsAvailable]
  -[_MRContentItemMetadataProtobuf setHasNumberOfSections:]
  -[_MRContentItemMetadataProtobuf hasNumberOfSections]
  -[_MRContentItemMetadataProtobuf setLyricsAvailable:]
  -[_MRContentItemMetadataProtobuf setHasLyricsAvailable:]
  -[_MRContentItemMetadataProtobuf hasLyricsAvailable]
  -[_MRContentItemMetadataProtobuf setHasEditingStyleFlags:]
  -[_MRContentItemMetadataProtobuf hasEditingStyleFlags]
  -[_MRContentItemMetadataProtobuf setIsStreamingContent:]
  -[_MRContentItemMetadataProtobuf setHasIsStreamingContent:]
  -[_MRContentItemMetadataProtobuf hasIsStreamingContent]
  -[_MRContentItemMetadataProtobuf setIsCurrentlyPlaying:]
  -[_MRContentItemMetadataProtobuf setHasIsCurrentlyPlaying:]
  -[_MRContentItemMetadataProtobuf hasIsCurrentlyPlaying]
  -[_MRContentItemMetadataProtobuf hasCollectionIdentifier]
  -[_MRContentItemMetadataProtobuf hasProfileIdentifier]
  -[_MRContentItemMetadataProtobuf hasArtworkMIMEType]
  -[_MRContentItemMetadataProtobuf hasAssetURLString]
  -[_MRContentItemMetadataProtobuf hasComposer]
  -[_MRContentItemMetadataProtobuf setHasDiscNumber:]
  -[_MRContentItemMetadataProtobuf hasDiscNumber]
  -[_MRContentItemMetadataProtobuf hasGenre]
  -[_MRContentItemMetadataProtobuf setChapterCount:]
  -[_MRContentItemMetadataProtobuf setHasChapterCount:]
  -[_MRContentItemMetadataProtobuf hasChapterCount]
  -[_MRContentItemMetadataProtobuf setHasTotalDiscCount:]
  -[_MRContentItemMetadataProtobuf hasTotalDiscCount]
  -[_MRContentItemMetadataProtobuf setHasTotalTrackCount:]
  -[_MRContentItemMetadataProtobuf hasTotalTrackCount]
  -[_MRContentItemMetadataProtobuf setHasTrackNumber:]
  -[_MRContentItemMetadataProtobuf hasTrackNumber]
  -[_MRContentItemMetadataProtobuf hasContentIdentifier]
  -[_MRContentItemMetadataProtobuf setIsSharable:]
  -[_MRContentItemMetadataProtobuf setHasIsSharable:]
  -[_MRContentItemMetadataProtobuf hasIsSharable]
  -[_MRContentItemMetadataProtobuf setIsLiked:]
  -[_MRContentItemMetadataProtobuf setHasIsLiked:]
  -[_MRContentItemMetadataProtobuf hasIsLiked]
  -[_MRContentItemMetadataProtobuf setIsInWishList:]
  -[_MRContentItemMetadataProtobuf setHasIsInWishList:]
  -[_MRContentItemMetadataProtobuf hasIsInWishList]
  -[_MRContentItemMetadataProtobuf hasRadioStationString]
  -[_MRContentItemMetadataProtobuf setHasITunesStoreIdentifier:]
  -[_MRContentItemMetadataProtobuf setITunesStoreSubscriptionIdentifier:]
  -[_MRContentItemMetadataProtobuf setHasITunesStoreSubscriptionIdentifier:]
  -[_MRContentItemMetadataProtobuf hasITunesStoreSubscriptionIdentifier]
  -[_MRContentItemMetadataProtobuf setITunesStoreArtistIdentifier:]
  -[_MRContentItemMetadataProtobuf setHasITunesStoreArtistIdentifier:]
  -[_MRContentItemMetadataProtobuf hasITunesStoreArtistIdentifier]
  -[_MRContentItemMetadataProtobuf setITunesStoreAlbumIdentifier:]
  -[_MRContentItemMetadataProtobuf setHasITunesStoreAlbumIdentifier:]
  -[_MRContentItemMetadataProtobuf hasITunesStoreAlbumIdentifier]
  -[_MRContentItemMetadataProtobuf hasPurchaseInfoData]
  -[_MRContentItemMetadataProtobuf setHasDefaultPlaybackRate:]
  -[_MRContentItemMetadataProtobuf hasDefaultPlaybackRate]
  -[_MRContentItemMetadataProtobuf setHasDownloadState:]
  -[_MRContentItemMetadataProtobuf hasDownloadState]
  -[_MRContentItemMetadataProtobuf setHasDownloadProgress:]
  -[_MRContentItemMetadataProtobuf hasDownloadProgress]
  -[_MRContentItemMetadataProtobuf hasAppMetricsData]
  -[_MRContentItemMetadataProtobuf hasSeriesName]
  -[_MRContentItemMetadataProtobuf setMediaSubType:]
  -[_MRContentItemMetadataProtobuf setHasMediaSubType:]
  -[_MRContentItemMetadataProtobuf hasMediaSubType]
  -[_MRContentItemMetadataProtobuf hasNowPlayingInfoData]
  -[_MRContentItemMetadataProtobuf hasUserInfoData]
  -[_MRContentItemMetadataProtobuf setIsSteerable:]
  -[_MRContentItemMetadataProtobuf setHasIsSteerable:]
  -[_MRContentItemMetadataProtobuf hasIsSteerable]
  -[_MRContentItemMetadataProtobuf hasArtworkURL]
  -[_MRContentItemMetadataProtobuf hasLyricsURL]
  -[_MRContentItemMetadataProtobuf hasDeviceSpecificUserInfoData]
  -[_MRContentItemMetadataProtobuf hasCollectionInfoData]
  -[_MRContentItemMetadataProtobuf setElapsedTimeTimestamp:]
  -[_MRContentItemMetadataProtobuf setHasElapsedTimeTimestamp:]
  -[_MRContentItemMetadataProtobuf hasElapsedTimeTimestamp]
  -[_MRContentItemMetadataProtobuf setInferredTimestamp:]
  -[_MRContentItemMetadataProtobuf setHasInferredTimestamp:]
  -[_MRContentItemMetadataProtobuf hasInferredTimestamp]
  -[_MRContentItemMetadataProtobuf hasServiceIdentifier]
  -[_MRContentItemMetadataProtobuf setArtworkDataWidthDeprecated:]
  -[_MRContentItemMetadataProtobuf setHasArtworkDataWidthDeprecated:]
  -[_MRContentItemMetadataProtobuf hasArtworkDataWidthDeprecated]
  -[_MRContentItemMetadataProtobuf setArtworkDataHeightDeprecated:]
  -[_MRContentItemMetadataProtobuf setHasArtworkDataHeightDeprecated:]
  -[_MRContentItemMetadataProtobuf hasArtworkDataHeightDeprecated]
  -[_MRContentItemMetadataProtobuf hasCurrentPlaybackDateData]
  -[_MRContentItemMetadataProtobuf setHasIsLoading:]
  -[_MRContentItemMetadataProtobuf hasIsLoading]
  -[_MRContentItemMetadataProtobuf hasArtworkURLTemplatesData]
  -[_MRContentItemMetadataProtobuf setLegacyUniqueIdentifier:]
  -[_MRContentItemMetadataProtobuf setHasLegacyUniqueIdentifier:]
  -[_MRContentItemMetadataProtobuf hasLegacyUniqueIdentifier]
  -[_MRContentItemMetadataProtobuf setHasEpisodeType:]
  -[_MRContentItemMetadataProtobuf hasEpisodeType]
  -[_MRContentItemMetadataProtobuf hasArtworkFileURL]
  -[_MRContentItemMetadataProtobuf hasBrandIdentifier]
  -[_MRContentItemMetadataProtobuf hasLocalizedDurationString]
  -[_MRContentItemMetadataProtobuf hasAlbumYear]
  -[_MRContentItemMetadataProtobuf artworkAvailable]
  -[_MRContentItemMetadataProtobuf infoAvailable]
  -[_MRContentItemMetadataProtobuf languageOptionsAvailable]
  -[_MRContentItemMetadataProtobuf lyricsAvailable]
  -[_MRContentItemMetadataProtobuf isCurrentlyPlaying]
  -[_MRContentItemMetadataProtobuf artworkMIMEType]
  -[_MRContentItemMetadataProtobuf assetURLString]
  -[_MRContentItemMetadataProtobuf chapterCount]
  -[_MRContentItemMetadataProtobuf isSharable]
  -[_MRContentItemMetadataProtobuf isLiked]
  -[_MRContentItemMetadataProtobuf radioStationString]
  -[_MRContentItemMetadataProtobuf iTunesStoreSubscriptionIdentifier]
  -[_MRContentItemMetadataProtobuf iTunesStoreArtistIdentifier]
  -[_MRContentItemMetadataProtobuf iTunesStoreAlbumIdentifier]
  -[_MRContentItemMetadataProtobuf purchaseInfoData]
  -[_MRContentItemMetadataProtobuf appMetricsData]
  -[_MRContentItemMetadataProtobuf mediaSubType]
  -[_MRContentItemMetadataProtobuf nowPlayingInfoData]
  -[_MRContentItemMetadataProtobuf lyricsURL]
  -[_MRContentItemMetadataProtobuf deviceSpecificUserInfoData]
  -[_MRContentItemMetadataProtobuf collectionInfoData]
  -[_MRContentItemMetadataProtobuf inferredTimestamp]
  -[_MRContentItemMetadataProtobuf artworkDataWidthDeprecated]
  -[_MRContentItemMetadataProtobuf artworkDataHeightDeprecated]
  -[_MRContentItemMetadataProtobuf currentPlaybackDateData]
  -[_MRContentItemMetadataProtobuf artworkURLTemplatesData]
  -[_MRContentItemMetadataProtobuf legacyUniqueIdentifier]
  -[_MRContentItemMetadataProtobuf artworkFileURL]
  -[_MRContentItemMetadataProtobuf brandIdentifier]


_MRDiagnosticProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasDateGenerated
 @property  double dateGenerated
 @property  BOOL hasDiagnosticInfo
 @property  NSString *diagnosticInfo

  // instance methods
  -[_MRDiagnosticProtobuf isEqual:]
  -[_MRDiagnosticProtobuf copyWithZone:]
  -[_MRDiagnosticProtobuf .cxx_destruct]
  -[_MRDiagnosticProtobuf dictionaryRepresentation]
  -[_MRDiagnosticProtobuf writeTo:]
  -[_MRDiagnosticProtobuf mergeFrom:]
  -[_MRDiagnosticProtobuf readFrom:]
  -[_MRDiagnosticProtobuf copyTo:]
  -[_MRDiagnosticProtobuf setDiagnosticInfo:]
  -[_MRDiagnosticProtobuf setDateGenerated:]
  -[_MRDiagnosticProtobuf setHasDateGenerated:]
  -[_MRDiagnosticProtobuf hasDateGenerated]
  -[_MRDiagnosticProtobuf hasDiagnosticInfo]
  -[_MRDiagnosticProtobuf dateGenerated]
  -[_MRDiagnosticProtobuf diagnosticInfo]


MRDeviceInfoMessage : MRProtocolMessage
 @property  _MRDeviceInfoMessageProtobuf *deviceInfo
 @property  MRSupportedProtocolMessages *supportedProtocolMessages

  // instance methods
  -[MRDeviceInfoMessage type]
  -[MRDeviceInfoMessage .cxx_destruct]
  -[MRDeviceInfoMessage encryptionType]
  -[MRDeviceInfoMessage deviceInfo]
  -[MRDeviceInfoMessage _lastSupportedMessageType]
  -[MRDeviceInfoMessage _lastSupportedMessageTypeBeforeSupportedMessagesWereAddedToDeviceInfo]
  -[MRDeviceInfoMessage initWithDeviceInfo:]
  -[MRDeviceInfoMessage supportedProtocolMessages]


MRDeviceInfoUpdateMessage : MRDeviceInfoMessage
  // instance methods
  -[MRDeviceInfoUpdateMessage type]


_MRSendCommandResultMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasSendError
 @property  int sendError
 @property  unsigned long handlerReturnStatusCount
 @property  ^i handlerReturnStatus
 @property  NSMutableArray *handlerReturnStatusDatas
 @property  BOOL hasCommandID
 @property  NSString *commandID
 @property  BOOL hasPlayerPath
 @property  _MRNowPlayingPlayerPathProtobuf *playerPath

  // class methods
  +[_MRSendCommandResultMessageProtobuf handlerReturnStatusDataType]

  // instance methods
  -[_MRSendCommandResultMessageProtobuf dealloc]
  -[_MRSendCommandResultMessageProtobuf isEqual:]
  -[_MRSendCommandResultMessageProtobuf copyWithZone:]
  -[_MRSendCommandResultMessageProtobuf .cxx_destruct]
  -[_MRSendCommandResultMessageProtobuf dictionaryRepresentation]
  -[_MRSendCommandResultMessageProtobuf writeTo:]
  -[_MRSendCommandResultMessageProtobuf mergeFrom:]
  -[_MRSendCommandResultMessageProtobuf readFrom:]
  -[_MRSendCommandResultMessageProtobuf copyTo:]
  -[_MRSendCommandResultMessageProtobuf commandID]
  -[_MRSendCommandResultMessageProtobuf setPlayerPath:]
  -[_MRSendCommandResultMessageProtobuf playerPath]
  -[_MRSendCommandResultMessageProtobuf hasPlayerPath]
  -[_MRSendCommandResultMessageProtobuf addHandlerReturnStatusData:]
  -[_MRSendCommandResultMessageProtobuf handlerReturnStatusCount]
  -[_MRSendCommandResultMessageProtobuf clearHandlerReturnStatus]
  -[_MRSendCommandResultMessageProtobuf handlerReturnStatusAtIndex:]
  -[_MRSendCommandResultMessageProtobuf addHandlerReturnStatus:]
  -[_MRSendCommandResultMessageProtobuf handlerReturnStatusDatasCount]
  -[_MRSendCommandResultMessageProtobuf clearHandlerReturnStatusDatas]
  -[_MRSendCommandResultMessageProtobuf handlerReturnStatusDataAtIndex:]
  -[_MRSendCommandResultMessageProtobuf setCommandID:]
  -[_MRSendCommandResultMessageProtobuf sendError]
  -[_MRSendCommandResultMessageProtobuf setSendError:]
  -[_MRSendCommandResultMessageProtobuf setHasSendError:]
  -[_MRSendCommandResultMessageProtobuf hasSendError]
  -[_MRSendCommandResultMessageProtobuf sendErrorAsString:]
  -[_MRSendCommandResultMessageProtobuf StringAsSendError:]
  -[_MRSendCommandResultMessageProtobuf handlerReturnStatus]
  -[_MRSendCommandResultMessageProtobuf setHandlerReturnStatus:count:]
  -[_MRSendCommandResultMessageProtobuf handlerReturnStatusAsString:]
  -[_MRSendCommandResultMessageProtobuf StringAsHandlerReturnStatus:]
  -[_MRSendCommandResultMessageProtobuf hasCommandID]
  -[_MRSendCommandResultMessageProtobuf handlerReturnStatusDatas]
  -[_MRSendCommandResultMessageProtobuf setHandlerReturnStatusDatas:]


MRMediaRemoteService : NSObject /usr/lib/libSystem.B.dylib
 @property  MRXPCConnection *mrXPCConnection
 @property  NSObject<OS_xpc_object> *connection
 @property  NSObject<OS_dispatch_queue> *connectionQueue
 @property  NSObject<OS_dispatch_queue> *clientCallbackQueue
 @property  NSObject<OS_dispatch_queue> *clientCallbackPriorityQueue
 @property  NSObject<OS_dispatch_queue> *browsableContentQueue
 @property  NSObject<OS_dispatch_queue> *voiceInputQueue
 @property  NSObject<OS_dispatch_queue> *televisionQueue
 @property  NSObject<OS_dispatch_queue> *agentQueue
 @property  BOOL isRunning

  // instance methods
  -[MRMediaRemoteService .cxx_destruct]
  -[MRMediaRemoteService isRunning]
  -[MRMediaRemoteService connection]
  -[MRMediaRemoteService setConnection:]
  -[MRMediaRemoteService connectionQueue]
  -[MRMediaRemoteService clientCallbackQueue]
  -[MRMediaRemoteService setIsRunning:]
  -[MRMediaRemoteService setConnectionQueue:]
  -[MRMediaRemoteService mrXPCConnection]
  -[MRMediaRemoteService setMrXPCConnection:]
  -[MRMediaRemoteService setClientCallbackQueue:]
  -[MRMediaRemoteService clientCallbackPriorityQueue]
  -[MRMediaRemoteService setClientCallbackPriorityQueue:]
  -[MRMediaRemoteService browsableContentQueue]
  -[MRMediaRemoteService setBrowsableContentQueue:]
  -[MRMediaRemoteService voiceInputQueue]
  -[MRMediaRemoteService setVoiceInputQueue:]
  -[MRMediaRemoteService televisionQueue]
  -[MRMediaRemoteService setTelevisionQueue:]
  -[MRMediaRemoteService agentQueue]
  -[MRMediaRemoteService setAgentQueue:]


MRSetVolumeMessage : MRProtocolMessage
 @property  NSString *outputDeviceUID
 @property  float volume

  // instance methods
  -[MRSetVolumeMessage type]
  -[MRSetVolumeMessage volume]
  -[MRSetVolumeMessage outputDeviceUID]
  -[MRSetVolumeMessage initWithVolume:outputDeviceUID:]
  -[MRSetVolumeMessage initWithVolume:]


MRGetKeyboardSessionMessage : MRProtocolMessage
  // instance methods
  -[MRGetKeyboardSessionMessage init]
  -[MRGetKeyboardSessionMessage type]


_MRGetStateMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
  // instance methods
  -[_MRGetStateMessageProtobuf isEqual:]
  -[_MRGetStateMessageProtobuf copyWithZone:]
  -[_MRGetStateMessageProtobuf dictionaryRepresentation]
  -[_MRGetStateMessageProtobuf writeTo:]
  -[_MRGetStateMessageProtobuf mergeFrom:]
  -[_MRGetStateMessageProtobuf readFrom:]
  -[_MRGetStateMessageProtobuf copyTo:]


_MRVoiceInputDeviceDescriptorProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  NSMutableArray *supportedFormats
 @property  BOOL hasDefaultFormat
 @property  _MRAudioFormatSettingsProtobuf *defaultFormat

  // class methods
  +[_MRVoiceInputDeviceDescriptorProtobuf supportedFormatsType]

  // instance methods
  -[_MRVoiceInputDeviceDescriptorProtobuf isEqual:]
  -[_MRVoiceInputDeviceDescriptorProtobuf copyWithZone:]
  -[_MRVoiceInputDeviceDescriptorProtobuf .cxx_destruct]
  -[_MRVoiceInputDeviceDescriptorProtobuf dictionaryRepresentation]
  -[_MRVoiceInputDeviceDescriptorProtobuf writeTo:]
  -[_MRVoiceInputDeviceDescriptorProtobuf mergeFrom:]
  -[_MRVoiceInputDeviceDescriptorProtobuf readFrom:]
  -[_MRVoiceInputDeviceDescriptorProtobuf copyTo:]
  -[_MRVoiceInputDeviceDescriptorProtobuf defaultFormat]
  -[_MRVoiceInputDeviceDescriptorProtobuf supportedFormats]
  -[_MRVoiceInputDeviceDescriptorProtobuf addSupportedFormats:]
  -[_MRVoiceInputDeviceDescriptorProtobuf supportedFormatsCount]
  -[_MRVoiceInputDeviceDescriptorProtobuf clearSupportedFormats]
  -[_MRVoiceInputDeviceDescriptorProtobuf supportedFormatsAtIndex:]
  -[_MRVoiceInputDeviceDescriptorProtobuf setDefaultFormat:]
  -[_MRVoiceInputDeviceDescriptorProtobuf hasDefaultFormat]
  -[_MRVoiceInputDeviceDescriptorProtobuf setSupportedFormats:]


_MRAudioBufferProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasFormatSettings
 @property  _MRAudioFormatSettingsProtobuf *formatSettings
 @property  BOOL hasPacketCapacity
 @property  long long packetCapacity
 @property  BOOL hasMaximumPacketSize
 @property  long long maximumPacketSize
 @property  BOOL hasPacketCount
 @property  long long packetCount
 @property  BOOL hasContents
 @property  NSData *contents
 @property  NSMutableArray *packetDescriptions

  // class methods
  +[_MRAudioBufferProtobuf packetDescriptionsType]

  // instance methods
  -[_MRAudioBufferProtobuf isEqual:]
  -[_MRAudioBufferProtobuf copyWithZone:]
  -[_MRAudioBufferProtobuf .cxx_destruct]
  -[_MRAudioBufferProtobuf contents]
  -[_MRAudioBufferProtobuf dictionaryRepresentation]
  -[_MRAudioBufferProtobuf writeTo:]
  -[_MRAudioBufferProtobuf mergeFrom:]
  -[_MRAudioBufferProtobuf readFrom:]
  -[_MRAudioBufferProtobuf copyTo:]
  -[_MRAudioBufferProtobuf setContents:]
  -[_MRAudioBufferProtobuf hasContents]
  -[_MRAudioBufferProtobuf packetCapacity]
  -[_MRAudioBufferProtobuf packetCount]
  -[_MRAudioBufferProtobuf maximumPacketSize]
  -[_MRAudioBufferProtobuf packetDescriptions]
  -[_MRAudioBufferProtobuf setPacketCount:]
  -[_MRAudioBufferProtobuf formatSettings]
  -[_MRAudioBufferProtobuf addPacketDescriptions:]
  -[_MRAudioBufferProtobuf setFormatSettings:]
  -[_MRAudioBufferProtobuf packetDescriptionsCount]
  -[_MRAudioBufferProtobuf clearPacketDescriptions]
  -[_MRAudioBufferProtobuf packetDescriptionsAtIndex:]
  -[_MRAudioBufferProtobuf hasFormatSettings]
  -[_MRAudioBufferProtobuf setPacketCapacity:]
  -[_MRAudioBufferProtobuf setHasPacketCapacity:]
  -[_MRAudioBufferProtobuf hasPacketCapacity]
  -[_MRAudioBufferProtobuf setMaximumPacketSize:]
  -[_MRAudioBufferProtobuf setHasMaximumPacketSize:]
  -[_MRAudioBufferProtobuf hasMaximumPacketSize]
  -[_MRAudioBufferProtobuf setHasPacketCount:]
  -[_MRAudioBufferProtobuf hasPacketCount]
  -[_MRAudioBufferProtobuf setPacketDescriptions:]


_MRAVOutputDeviceSourceInfoProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasRoutingContextUID
 @property  NSString *routingContextUID
 @property  BOOL hasMultipleBuiltInDevices
 @property  BOOL multipleBuiltInDevices

  // instance methods
  -[_MRAVOutputDeviceSourceInfoProtobuf isEqual:]
  -[_MRAVOutputDeviceSourceInfoProtobuf copyWithZone:]
  -[_MRAVOutputDeviceSourceInfoProtobuf .cxx_destruct]
  -[_MRAVOutputDeviceSourceInfoProtobuf dictionaryRepresentation]
  -[_MRAVOutputDeviceSourceInfoProtobuf writeTo:]
  -[_MRAVOutputDeviceSourceInfoProtobuf mergeFrom:]
  -[_MRAVOutputDeviceSourceInfoProtobuf readFrom:]
  -[_MRAVOutputDeviceSourceInfoProtobuf copyTo:]
  -[_MRAVOutputDeviceSourceInfoProtobuf routingContextUID]
  -[_MRAVOutputDeviceSourceInfoProtobuf setRoutingContextUID:]
  -[_MRAVOutputDeviceSourceInfoProtobuf multipleBuiltInDevices]
  -[_MRAVOutputDeviceSourceInfoProtobuf setMultipleBuiltInDevices:]
  -[_MRAVOutputDeviceSourceInfoProtobuf hasRoutingContextUID]
  -[_MRAVOutputDeviceSourceInfoProtobuf setHasMultipleBuiltInDevices:]
  -[_MRAVOutputDeviceSourceInfoProtobuf hasMultipleBuiltInDevices]


MRProtobufSerialization : NSObject /usr/lib/libSystem.B.dylib
 @property  NSDictionary *dictionaryKeyToProtobufKeyMapping
 @property  Class protobufClass
 @property  @? dictionaryValueToProtobufValueTransformer
 @property  @? protobufValueToDictionaryValueTransformer

  // instance methods
  -[MRProtobufSerialization .cxx_destruct]
  -[MRProtobufSerialization setDictionaryKeyToProtobufKeyMapping:]
  -[MRProtobufSerialization createDictionaryFromProtobuf:]
  -[MRProtobufSerialization createProtobufFromDictionary:]
  -[MRProtobufSerialization dictionaryKeyToProtobufKeyMapping]
  -[MRProtobufSerialization protobufClass]
  -[MRProtobufSerialization setProtobufClass:]
  -[MRProtobufSerialization dictionaryValueToProtobufValueTransformer]
  -[MRProtobufSerialization setDictionaryValueToProtobufValueTransformer:]
  -[MRProtobufSerialization protobufValueToDictionaryValueTransformer]
  -[MRProtobufSerialization setProtobufValueToDictionaryValueTransformer:]


_MRPlaybackQueueCapabilitiesProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasRequestByRange
 @property  BOOL requestByRange
 @property  BOOL hasRequestByIdentifiers
 @property  BOOL requestByIdentifiers
 @property  BOOL hasRequestByRequest
 @property  BOOL requestByRequest

  // instance methods
  -[_MRPlaybackQueueCapabilitiesProtobuf isEqual:]
  -[_MRPlaybackQueueCapabilitiesProtobuf copyWithZone:]
  -[_MRPlaybackQueueCapabilitiesProtobuf dictionaryRepresentation]
  -[_MRPlaybackQueueCapabilitiesProtobuf writeTo:]
  -[_MRPlaybackQueueCapabilitiesProtobuf mergeFrom:]
  -[_MRPlaybackQueueCapabilitiesProtobuf readFrom:]
  -[_MRPlaybackQueueCapabilitiesProtobuf copyTo:]
  -[_MRPlaybackQueueCapabilitiesProtobuf setRequestByRange:]
  -[_MRPlaybackQueueCapabilitiesProtobuf setRequestByIdentifiers:]
  -[_MRPlaybackQueueCapabilitiesProtobuf requestByRange]
  -[_MRPlaybackQueueCapabilitiesProtobuf requestByIdentifiers]
  -[_MRPlaybackQueueCapabilitiesProtobuf requestByRequest]
  -[_MRPlaybackQueueCapabilitiesProtobuf setHasRequestByRange:]
  -[_MRPlaybackQueueCapabilitiesProtobuf hasRequestByRange]
  -[_MRPlaybackQueueCapabilitiesProtobuf setHasRequestByIdentifiers:]
  -[_MRPlaybackQueueCapabilitiesProtobuf hasRequestByIdentifiers]
  -[_MRPlaybackQueueCapabilitiesProtobuf setRequestByRequest:]
  -[_MRPlaybackQueueCapabilitiesProtobuf setHasRequestByRequest:]
  -[_MRPlaybackQueueCapabilitiesProtobuf hasRequestByRequest]


MRGetVoiceInputDevicesMessage : MRProtocolMessage
  // instance methods
  -[MRGetVoiceInputDevicesMessage type]


MRGetVoiceInputDevicesResponseMessage : MRProtocolMessage
 @property  NSArray *deviceIDs
 @property  long long errorCode

  // instance methods
  -[MRGetVoiceInputDevicesResponseMessage type]
  -[MRGetVoiceInputDevicesResponseMessage deviceIDs]
  -[MRGetVoiceInputDevicesResponseMessage errorCode]
  -[MRGetVoiceInputDevicesResponseMessage initWithDeviceIDs:errorCode:]


MRRegisterVoiceInputDeviceMessage : MRProtocolMessage
 @property  MRVirtualVoiceInputDeviceDescriptor *descriptor

  // instance methods
  -[MRRegisterVoiceInputDeviceMessage type]
  -[MRRegisterVoiceInputDeviceMessage .cxx_destruct]
  -[MRRegisterVoiceInputDeviceMessage descriptor]
  -[MRRegisterVoiceInputDeviceMessage initWithDescriptor:]


MRRegisterVoiceInputDeviceResponseMessage : MRProtocolMessage
 @property  unsigned int deviceID
 @property  long long errorCode

  // instance methods
  -[MRRegisterVoiceInputDeviceResponseMessage type]
  -[MRRegisterVoiceInputDeviceResponseMessage deviceID]
  -[MRRegisterVoiceInputDeviceResponseMessage errorCode]
  -[MRRegisterVoiceInputDeviceResponseMessage initWithDeviceID:errorCode:]


MRSetRecordingStateMessage : MRProtocolMessage
 @property  unsigned int state

  // instance methods
  -[MRSetRecordingStateMessage type]
  -[MRSetRecordingStateMessage state]
  -[MRSetRecordingStateMessage initWithRecordingState:]


MRSendVoiceInputMessage : MRProtocolMessage
 @property  MRAudioBuffer *buffer
 @property  {?=dd} time
 @property  float gain

  // instance methods
  -[MRSendVoiceInputMessage type]
  -[MRSendVoiceInputMessage .cxx_destruct]
  -[MRSendVoiceInputMessage priority]
  -[MRSendVoiceInputMessage time]
  -[MRSendVoiceInputMessage buffer]
  -[MRSendVoiceInputMessage gain]
  -[MRSendVoiceInputMessage _initializeDataIfNecessary]
  -[MRSendVoiceInputMessage initWithBuffer:time:gain:]


MROutputContextDataSource : NSObject /usr/lib/libSystem.B.dylib
 @property  float volume
 @property  BOOL isAirPlaying
 @property  unsigned int volumeControlCapabilities
 @property  NSArray *outputDevices
 @property  NSString *uniqueIdentifier

  // instance methods
  -[MROutputContextDataSource .cxx_destruct]
  -[MROutputContextDataSource uniqueIdentifier]
  -[MROutputContextDataSource volume]
  -[MROutputContextDataSource outputDevices]
  -[MROutputContextDataSource volumeControlCapabilities]
  -[MROutputContextDataSource isAirPlaying]
  -[MROutputContextDataSource outputDeviceForUID:]
  -[MROutputContextDataSource notifyOutputDeviceAdded:]
  -[MROutputContextDataSource notifyOutputDeviceRemoved:]
  -[MROutputContextDataSource notifyVolumeDidChange:outputDevice:]
  -[MROutputContextDataSource notifyVolumeCapabilitiesDidChange:outputDevice:]


MRExternalOutputContextDataSource : MROutputContextDataSource
  // instance methods
  -[MRExternalOutputContextDataSource .cxx_destruct]
  -[MRExternalOutputContextDataSource uniqueIdentifier]
  -[MRExternalOutputContextDataSource volume]
  -[MRExternalOutputContextDataSource initWithUniqueIdentifier:]
  -[MRExternalOutputContextDataSource outputDevices]
  -[MRExternalOutputContextDataSource volumeControlCapabilities]
  -[MRExternalOutputContextDataSource _reevaluateMasterVolumeControlCapabilities]
  -[MRExternalOutputContextDataSource _reevaluateMasterVolume]
  -[MRExternalOutputContextDataSource removeOutputDevices:]
  -[MRExternalOutputContextDataSource _calculateMasterVolume]
  -[MRExternalOutputContextDataSource _calculateMasterVolumeCapabilities]
  -[MRExternalOutputContextDataSource updateOutputDevices:]
  -[MRExternalOutputContextDataSource removeAllOutputDevices]
  -[MRExternalOutputContextDataSource updateVolume:outputDeviceUID:]
  -[MRExternalOutputContextDataSource updateVolumeControlCapabilities:outputDeviceUID:]


MROutputContextController : MROutputContextDataSource
 @property  float localVolume
 @property  unsigned int localVolumeControlCapabilities
 @property  NSString *localDeviceUID

  // class methods
  +[MROutputContextController sharedOutputContextController]

  // instance methods
  -[MROutputContextController dealloc]
  -[MROutputContextController .cxx_destruct]
  -[MROutputContextController uniqueIdentifier]
  -[MROutputContextController _registerNotifications]
  -[MROutputContextController volume]
  -[MROutputContextController outputDevices]
  -[MROutputContextController localDeviceUID]
  -[MROutputContextController initWithOutputContext:]
  -[MROutputContextController setVolume:outputDeviceUID:]
  -[MROutputContextController volumeForOutputDeviceUID:]
  -[MROutputContextController volumeControlCapabilitiesForOutputDeviceUID:]
  -[MROutputContextController volumeControlCapabilities]
  -[MROutputContextController _inititalizeVolume]
  -[MROutputContextController _onSerialQueue_localOutputDevice]
  -[MROutputContextController _onSerialQueue_isLocalOutputDevice:]
  -[MROutputContextController setLocalVolume:]
  -[MROutputContextController setLocalVolumeControlCapabilities:]
  -[MROutputContextController _onSerialQueue_reevaluateMasterVolume]
  -[MROutputContextController _onSerialQueue_reevaluateMasterVolumeControlCapabilities]
  -[MROutputContextController _onSerialQueue_calculateMasterVolume]
  -[MROutputContextController _onSerialQueue_calculateMasterVolumeCapabilities]
  -[MROutputContextController _handleLocalDeviceVolumeDidChangeNotification:]
  -[MROutputContextController _handleLocalDeviceVolumeControlCapabilitiesDidChangeNotification:]
  -[MROutputContextController _handleOutputDeviceVolumeDidChangeNotification:]
  -[MROutputContextController _handleOutputDeviceVolumeControlCapabilitiesDidChangeNotification:]
  -[MROutputContextController _handleOutputDeviceAddedNotification:]
  -[MROutputContextController _handleOutputDeviceRemovedNotification:]
  -[MROutputContextController localVolume]
  -[MROutputContextController localVolumeControlCapabilities]


MRAVBufferedInputStream : NSInputStream /usr/lib/libobjc.A.dylib
  // instance methods
  -[MRAVBufferedInputStream init]
  -[MRAVBufferedInputStream initWithURL:]
  -[MRAVBufferedInputStream initWithData:]
  -[MRAVBufferedInputStream initWithFileAtPath:]
  -[MRAVBufferedInputStream open]
  -[MRAVBufferedInputStream close]
  -[MRAVBufferedInputStream delegate]
  -[MRAVBufferedInputStream setDelegate:]
  -[MRAVBufferedInputStream propertyForKey:]
  -[MRAVBufferedInputStream setProperty:forKey:]
  -[MRAVBufferedInputStream scheduleInRunLoop:forMode:]
  -[MRAVBufferedInputStream removeFromRunLoop:forMode:]
  -[MRAVBufferedInputStream streamStatus]
  -[MRAVBufferedInputStream streamError]
  -[MRAVBufferedInputStream read:maxLength:]
  -[MRAVBufferedInputStream getBuffer:length:]
  -[MRAVBufferedInputStream hasBytesAvailable]
  -[MRAVBufferedInputStream .cxx_destruct]
  -[MRAVBufferedInputStream _init]
  -[MRAVBufferedInputStream notifyDelegateOfStreamEvent:]
  -[MRAVBufferedInputStream _onSerialQueue_handleDataReceived:]
  -[MRAVBufferedInputStream _onRunLoop_notifyDelegateOfStreamEvent:]
  -[MRAVBufferedInputStream handleDataReceived:]
  -[MRAVBufferedInputStream handleStreamDisconnect]


MRAVBufferedOutputStream : NSOutputStream /usr/lib/libobjc.A.dylib
  // instance methods
  -[MRAVBufferedOutputStream init]
  -[MRAVBufferedOutputStream open]
  -[MRAVBufferedOutputStream close]
  -[MRAVBufferedOutputStream delegate]
  -[MRAVBufferedOutputStream setDelegate:]
  -[MRAVBufferedOutputStream propertyForKey:]
  -[MRAVBufferedOutputStream setProperty:forKey:]
  -[MRAVBufferedOutputStream scheduleInRunLoop:forMode:]
  -[MRAVBufferedOutputStream removeFromRunLoop:forMode:]
  -[MRAVBufferedOutputStream streamStatus]
  -[MRAVBufferedOutputStream streamError]
  -[MRAVBufferedOutputStream initWithURL:append:]
  -[MRAVBufferedOutputStream initToMemory]
  -[MRAVBufferedOutputStream initToBuffer:capacity:]
  -[MRAVBufferedOutputStream initToFileAtPath:append:]
  -[MRAVBufferedOutputStream .cxx_destruct]
  -[MRAVBufferedOutputStream _init]
  -[MRAVBufferedOutputStream notifyDelegateOfStreamEvent:]


MRAVOutputContext : NSObject /usr/lib/libSystem.B.dylib
 @property  NSArray *outputDevices
 @property  unsigned int type
 @property  NSString *uniqueIdentifier
 @property  AVOutputContext *avOutputContext
 @property  NSArray *outputDevicesSnapshot
 @property  BOOL volumeControlAvailable
 @property  BOOL supportsVolumeControl
 @property  float volume

  // class methods
  +[MRAVOutputContext _notificationQueue]
  +[MRAVOutputContext sharedSystemAudioContext]
  +[MRAVOutputContext sharedSystemScreenContext]
  +[MRAVOutputContext sharedAudioPresentationContext]
  +[MRAVOutputContext createOutputContextWithUniqueIdentifier:]
  +[MRAVOutputContext _initializeAVFNotificationForwarding]
  +[MRAVOutputContext _sharedOutputContextFromType:]

  // instance methods
  -[MRAVOutputContext dealloc]
  -[MRAVOutputContext type]
  -[MRAVOutputContext .cxx_destruct]
  -[MRAVOutputContext uniqueIdentifier]
  -[MRAVOutputContext _registerNotifications]
  -[MRAVOutputContext _unregisterNotifications]
  -[MRAVOutputContext volume]
  -[MRAVOutputContext setVolume:]
  -[MRAVOutputContext localDevice]
  -[MRAVOutputContext outputDevices]
  -[MRAVOutputContext setOutputDevices:]
  -[MRAVOutputContext isVolumeControlAvailable]
  -[MRAVOutputContext addOutputDevices:initiator:withCallbackQueue:block:]
  -[MRAVOutputContext removeOutputDevices:initiator:withCallbackQueue:block:]
  -[MRAVOutputContext setOutputDevices:initiator:withCallbackQueue:block:]
  -[MRAVOutputContext supportsVolumeControl]
  -[MRAVOutputContext _handleOutputDeviceVolumeDidChangeNotification:]
  -[MRAVOutputContext initWithAVOutputContext:type:]
  -[MRAVOutputContext _reloadOutputDevicesForInitialLoad:]
  -[MRAVOutputContext _scheduleOutputContextDevicesDidChangeNotification]
  -[MRAVOutputContext setOutputDevices:withPassword:callbackQueue:block:]
  -[MRAVOutputContext setOutputDevices:password:initiator:withCallbackQueue:block:]
  -[MRAVOutputContext removeOutputDevices:withCallbackQueue:block:]
  -[MRAVOutputContext addOutputDevices:withCallbackQueue:block:]
  -[MRAVOutputContext _handleOutputDeviceDidChangeNotification:]
  -[MRAVOutputContext _handleOutputDevicesDidChangeNotification:]
  -[MRAVOutputContext _handleDiscoverySessionOutputDevicesDidChangeNotification:]
  -[MRAVOutputContext _outputContextChangeInitiatedNotification:]
  -[MRAVOutputContext _handleOutputDeviceCanSetVolumeDidChangeNotification:]
  -[MRAVOutputContext _handleOutputDeviceSupportsVolumeDidChangeNotification:]
  -[MRAVOutputContext outputDevicesSnapshot]
  -[MRAVOutputContext setOutputDevicesSnapshot:]
  -[MRAVOutputContext _scheduleOutputContextDeviceDidChangeNotification]
  -[MRAVOutputContext setOutputDevices:withCallbackQueue:block:]
  -[MRAVOutputContext removeAllOutputDevicesWithCallbackQueue:block:]
  -[MRAVOutputContext attemptLogicalDeviceRecovery]
  -[MRAVOutputContext avOutputContext]


MRAVOutputContextModification : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned long modificationType
 @property  NSArray *concreteOutputDevices
 @property  NSArray *outputDevices
 @property  NSArray *avOutputDevices
 @property  NSString *password
 @property  NSString *initiator

  // instance methods
  -[MRAVOutputContextModification password]
  -[MRAVOutputContextModification .cxx_destruct]
  -[MRAVOutputContextModification setPassword:]
  -[MRAVOutputContextModification initiator]
  -[MRAVOutputContextModification outputDevices]
  -[MRAVOutputContextModification modificationType]
  -[MRAVOutputContextModification setInitiator:]
  -[MRAVOutputContextModification initWithType:devices:]
  -[MRAVOutputContextModification modifyWithOutputContext:queue:completion:]
  -[MRAVOutputContextModification _modifyWithOutputContext:queue:completion:]
  -[MRAVOutputContextModification errorFromResult:]
  -[MRAVOutputContextModification concreteOutputDevices]
  -[MRAVOutputContextModification avOutputDevices]


MRRegisterHIDDeviceResultMessage : MRProtocolMessage
 @property  long long errorCode
 @property  unsigned long deviceIdentifier

  // instance methods
  -[MRRegisterHIDDeviceResultMessage type]
  -[MRRegisterHIDDeviceResultMessage deviceIdentifier]
  -[MRRegisterHIDDeviceResultMessage errorCode]
  -[MRRegisterHIDDeviceResultMessage initWithErrorCode:deviceIdentifier:]


MRTransactionMessage : MRProtocolMessage
 @property  unsigned long name
 @property  NSArray *packets
 @property  _MRNowPlayingPlayerPathProtobuf *playerPath

  // instance methods
  -[MRTransactionMessage name]
  -[MRTransactionMessage type]
  -[MRTransactionMessage .cxx_destruct]
  -[MRTransactionMessage playerPath]
  -[MRTransactionMessage initWithContentItems:forPlayerPath:]
  -[MRTransactionMessage packets]
  -[MRTransactionMessage initWithName:packets:playerPath:]
  -[MRTransactionMessage initWithPlaybackQueue:forPlayerPath:]


MRExternalDeviceManager : NSObject /usr/lib/libSystem.B.dylib
 @property  NSArray *allDevices

  // class methods
  +[MRExternalDeviceManager sharedManager]

  // instance methods
  -[MRExternalDeviceManager init]
  -[MRExternalDeviceManager .cxx_destruct]
  -[MRExternalDeviceManager allDevices]
  -[MRExternalDeviceManager deviceWithIdentifier:]
  -[MRExternalDeviceManager registerDevice:]
  -[MRExternalDeviceManager clearDevices]


_MRRemoveClientMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasClient
 @property  _MRNowPlayingClientProtobuf *client

  // instance methods
  -[_MRRemoveClientMessageProtobuf isEqual:]
  -[_MRRemoveClientMessageProtobuf copyWithZone:]
  -[_MRRemoveClientMessageProtobuf .cxx_destruct]
  -[_MRRemoveClientMessageProtobuf dictionaryRepresentation]
  -[_MRRemoveClientMessageProtobuf client]
  -[_MRRemoveClientMessageProtobuf setClient:]
  -[_MRRemoveClientMessageProtobuf writeTo:]
  -[_MRRemoveClientMessageProtobuf mergeFrom:]
  -[_MRRemoveClientMessageProtobuf readFrom:]
  -[_MRRemoveClientMessageProtobuf copyTo:]
  -[_MRRemoveClientMessageProtobuf hasClient]


MRPlaybackSessionMigrateRequest : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  long long playerOptions
 @property  long long endpointOptions
 @property  NSString *requestID
 @property  double playbackPosition
 @property  double playbackRate
 @property  unsigned int playbackState
 @property  _MRContentItemProtobuf *contentItem
 @property  double duration
 @property  NSString *report
 @property  _MRPlaybackSessionRequestProtobuf *playbackSessionRequest
 @property  _MRPlaybackSessionMigrateRequestProtobuf *descriptor

  // instance methods
  -[MRPlaybackSessionMigrateRequest init]
  -[MRPlaybackSessionMigrateRequest copyWithZone:]
  -[MRPlaybackSessionMigrateRequest .cxx_destruct]
  -[MRPlaybackSessionMigrateRequest duration]
  -[MRPlaybackSessionMigrateRequest merge:]
  -[MRPlaybackSessionMigrateRequest descriptor]
  -[MRPlaybackSessionMigrateRequest report]
  -[MRPlaybackSessionMigrateRequest initWithDescriptor:]
  -[MRPlaybackSessionMigrateRequest endEvent:]
  -[MRPlaybackSessionMigrateRequest requestID]
  -[MRPlaybackSessionMigrateRequest setRequestID:]
  -[MRPlaybackSessionMigrateRequest playbackRate]
  -[MRPlaybackSessionMigrateRequest setPlaybackRate:]
  -[MRPlaybackSessionMigrateRequest setPlaybackPosition:]
  -[MRPlaybackSessionMigrateRequest playbackState]
  -[MRPlaybackSessionMigrateRequest contentItem]
  -[MRPlaybackSessionMigrateRequest playbackPosition]
  -[MRPlaybackSessionMigrateRequest setPlaybackState:]
  -[MRPlaybackSessionMigrateRequest startEvent:]
  -[MRPlaybackSessionMigrateRequest endEvent:withError:]
  -[MRPlaybackSessionMigrateRequest playbackSessionRequest]
  -[MRPlaybackSessionMigrateRequest playerOptions]
  -[MRPlaybackSessionMigrateRequest setContentItem:]
  -[MRPlaybackSessionMigrateRequest setPlayerOptions:]
  -[MRPlaybackSessionMigrateRequest setEndpointOptions:]
  -[MRPlaybackSessionMigrateRequest setPlaybackSessionRequest:]
  -[MRPlaybackSessionMigrateRequest endpointOptions]


_MRRemoveOutputDevicesMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  NSMutableArray *outputDeviceUIDs

  // class methods
  +[_MRRemoveOutputDevicesMessageProtobuf outputDeviceUIDsType]

  // instance methods
  -[_MRRemoveOutputDevicesMessageProtobuf isEqual:]
  -[_MRRemoveOutputDevicesMessageProtobuf copyWithZone:]
  -[_MRRemoveOutputDevicesMessageProtobuf .cxx_destruct]
  -[_MRRemoveOutputDevicesMessageProtobuf dictionaryRepresentation]
  -[_MRRemoveOutputDevicesMessageProtobuf writeTo:]
  -[_MRRemoveOutputDevicesMessageProtobuf mergeFrom:]
  -[_MRRemoveOutputDevicesMessageProtobuf readFrom:]
  -[_MRRemoveOutputDevicesMessageProtobuf copyTo:]
  -[_MRRemoveOutputDevicesMessageProtobuf setOutputDeviceUIDs:]
  -[_MRRemoveOutputDevicesMessageProtobuf outputDeviceUIDs]
  -[_MRRemoveOutputDevicesMessageProtobuf addOutputDeviceUIDs:]
  -[_MRRemoveOutputDevicesMessageProtobuf outputDeviceUIDsCount]
  -[_MRRemoveOutputDevicesMessageProtobuf clearOutputDeviceUIDs]
  -[_MRRemoveOutputDevicesMessageProtobuf outputDeviceUIDsAtIndex:]


MRAVOutputDeviceSourceInfo : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *routingContextUID
 @property  BOOL multipleBuiltInDevices

  // instance methods
  -[MRAVOutputDeviceSourceInfo isEqual:]
  -[MRAVOutputDeviceSourceInfo .cxx_destruct]
  -[MRAVOutputDeviceSourceInfo routingContextUID]
  -[MRAVOutputDeviceSourceInfo multipleBuiltInDevices]
  -[MRAVOutputDeviceSourceInfo initWithRoutingContextUID:multipleBuiltInDevices:]


_MRCryptoPairingMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasPairingData
 @property  NSData *pairingData
 @property  BOOL hasStatus
 @property  int status
 @property  BOOL hasIsRetrying
 @property  BOOL isRetrying
 @property  BOOL hasIsUsingSystemPairing
 @property  BOOL isUsingSystemPairing
 @property  BOOL hasState
 @property  int state

  // instance methods
  -[_MRCryptoPairingMessageProtobuf isEqual:]
  -[_MRCryptoPairingMessageProtobuf copyWithZone:]
  -[_MRCryptoPairingMessageProtobuf .cxx_destruct]
  -[_MRCryptoPairingMessageProtobuf dictionaryRepresentation]
  -[_MRCryptoPairingMessageProtobuf state]
  -[_MRCryptoPairingMessageProtobuf status]
  -[_MRCryptoPairingMessageProtobuf setState:]
  -[_MRCryptoPairingMessageProtobuf writeTo:]
  -[_MRCryptoPairingMessageProtobuf mergeFrom:]
  -[_MRCryptoPairingMessageProtobuf readFrom:]
  -[_MRCryptoPairingMessageProtobuf copyTo:]
  -[_MRCryptoPairingMessageProtobuf setStatus:]
  -[_MRCryptoPairingMessageProtobuf setHasStatus:]
  -[_MRCryptoPairingMessageProtobuf hasStatus]
  -[_MRCryptoPairingMessageProtobuf hasState]
  -[_MRCryptoPairingMessageProtobuf setHasState:]
  -[_MRCryptoPairingMessageProtobuf isUsingSystemPairing]
  -[_MRCryptoPairingMessageProtobuf setPairingData:]
  -[_MRCryptoPairingMessageProtobuf hasPairingData]
  -[_MRCryptoPairingMessageProtobuf setIsRetrying:]
  -[_MRCryptoPairingMessageProtobuf setHasIsRetrying:]
  -[_MRCryptoPairingMessageProtobuf hasIsRetrying]
  -[_MRCryptoPairingMessageProtobuf setIsUsingSystemPairing:]
  -[_MRCryptoPairingMessageProtobuf setHasIsUsingSystemPairing:]
  -[_MRCryptoPairingMessageProtobuf hasIsUsingSystemPairing]
  -[_MRCryptoPairingMessageProtobuf pairingData]
  -[_MRCryptoPairingMessageProtobuf isRetrying]


_MRAVEndpointDescriptorProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasName
 @property  NSString *name
 @property  BOOL hasUniqueIdentifier
 @property  NSString *uniqueIdentifier
 @property  NSMutableArray *outputDevices
 @property  BOOL hasDesignatedGroupLeader
 @property  _MRAVOutputDeviceDescriptorProtobuf *designatedGroupLeader
 @property  BOOL hasIsLocalEndpoint
 @property  BOOL isLocalEndpoint
 @property  BOOL hasInstanceIdentifier
 @property  NSString *instanceIdentifier
 @property  BOOL hasIsProxyGroupPlayer
 @property  BOOL isProxyGroupPlayer
 @property  BOOL hasConnectionType
 @property  int connectionType
 @property  BOOL hasCanModifyGroupMembership
 @property  BOOL canModifyGroupMembership
 @property  NSMutableArray *personalOutputDevices

  // class methods
  +[_MRAVEndpointDescriptorProtobuf outputDevicesType]
  +[_MRAVEndpointDescriptorProtobuf personalOutputDevicesType]

  // instance methods
  -[_MRAVEndpointDescriptorProtobuf isEqual:]
  -[_MRAVEndpointDescriptorProtobuf name]
  -[_MRAVEndpointDescriptorProtobuf copyWithZone:]
  -[_MRAVEndpointDescriptorProtobuf .cxx_destruct]
  -[_MRAVEndpointDescriptorProtobuf setName:]
  -[_MRAVEndpointDescriptorProtobuf dictionaryRepresentation]
  -[_MRAVEndpointDescriptorProtobuf uniqueIdentifier]
  -[_MRAVEndpointDescriptorProtobuf connectionType]
  -[_MRAVEndpointDescriptorProtobuf writeTo:]
  -[_MRAVEndpointDescriptorProtobuf mergeFrom:]
  -[_MRAVEndpointDescriptorProtobuf readFrom:]
  -[_MRAVEndpointDescriptorProtobuf copyTo:]
  -[_MRAVEndpointDescriptorProtobuf setUniqueIdentifier:]
  -[_MRAVEndpointDescriptorProtobuf hasName]
  -[_MRAVEndpointDescriptorProtobuf instanceIdentifier]
  -[_MRAVEndpointDescriptorProtobuf setInstanceIdentifier:]
  -[_MRAVEndpointDescriptorProtobuf setConnectionType:]
  -[_MRAVEndpointDescriptorProtobuf setHasConnectionType:]
  -[_MRAVEndpointDescriptorProtobuf hasConnectionType]
  -[_MRAVEndpointDescriptorProtobuf connectionTypeAsString:]
  -[_MRAVEndpointDescriptorProtobuf StringAsConnectionType:]
  -[_MRAVEndpointDescriptorProtobuf hasUniqueIdentifier]
  -[_MRAVEndpointDescriptorProtobuf outputDevices]
  -[_MRAVEndpointDescriptorProtobuf setOutputDevices:]
  -[_MRAVEndpointDescriptorProtobuf isProxyGroupPlayer]
  -[_MRAVEndpointDescriptorProtobuf canModifyGroupMembership]
  -[_MRAVEndpointDescriptorProtobuf addOutputDevices:]
  -[_MRAVEndpointDescriptorProtobuf personalOutputDevices]
  -[_MRAVEndpointDescriptorProtobuf setIsProxyGroupPlayer:]
  -[_MRAVEndpointDescriptorProtobuf addPersonalOutputDevices:]
  -[_MRAVEndpointDescriptorProtobuf outputDevicesCount]
  -[_MRAVEndpointDescriptorProtobuf clearOutputDevices]
  -[_MRAVEndpointDescriptorProtobuf outputDevicesAtIndex:]
  -[_MRAVEndpointDescriptorProtobuf setDesignatedGroupLeader:]
  -[_MRAVEndpointDescriptorProtobuf personalOutputDevicesCount]
  -[_MRAVEndpointDescriptorProtobuf clearPersonalOutputDevices]
  -[_MRAVEndpointDescriptorProtobuf personalOutputDevicesAtIndex:]
  -[_MRAVEndpointDescriptorProtobuf hasDesignatedGroupLeader]
  -[_MRAVEndpointDescriptorProtobuf setIsLocalEndpoint:]
  -[_MRAVEndpointDescriptorProtobuf setHasIsLocalEndpoint:]
  -[_MRAVEndpointDescriptorProtobuf hasIsLocalEndpoint]
  -[_MRAVEndpointDescriptorProtobuf hasInstanceIdentifier]
  -[_MRAVEndpointDescriptorProtobuf setHasIsProxyGroupPlayer:]
  -[_MRAVEndpointDescriptorProtobuf hasIsProxyGroupPlayer]
  -[_MRAVEndpointDescriptorProtobuf setCanModifyGroupMembership:]
  -[_MRAVEndpointDescriptorProtobuf setHasCanModifyGroupMembership:]
  -[_MRAVEndpointDescriptorProtobuf hasCanModifyGroupMembership]
  -[_MRAVEndpointDescriptorProtobuf designatedGroupLeader]
  -[_MRAVEndpointDescriptorProtobuf isLocalEndpoint]
  -[_MRAVEndpointDescriptorProtobuf setPersonalOutputDevices:]


MRWeakProxy : NSObject /usr/lib/libSystem.B.dylib
 @property  id object
 @property  Protocol *protocol

  // class methods
  +[MRWeakProxy weakProxyWithObject:protocol:]

  // instance methods
  -[MRWeakProxy isEqual:]
  -[MRWeakProxy methodSignatureForSelector:]
  -[MRWeakProxy forwardInvocation:]
  -[MRWeakProxy object]
  -[MRWeakProxy setObject:]
  -[MRWeakProxy .cxx_destruct]
  -[MRWeakProxy protocol]
  -[MRWeakProxy setProtocol:]


_MRPromptForRouteAuthorizationResponseMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasResponse
 @property  NSString *response

  // instance methods
  -[_MRPromptForRouteAuthorizationResponseMessageProtobuf isEqual:]
  -[_MRPromptForRouteAuthorizationResponseMessageProtobuf copyWithZone:]
  -[_MRPromptForRouteAuthorizationResponseMessageProtobuf .cxx_destruct]
  -[_MRPromptForRouteAuthorizationResponseMessageProtobuf dictionaryRepresentation]
  -[_MRPromptForRouteAuthorizationResponseMessageProtobuf writeTo:]
  -[_MRPromptForRouteAuthorizationResponseMessageProtobuf mergeFrom:]
  -[_MRPromptForRouteAuthorizationResponseMessageProtobuf readFrom:]
  -[_MRPromptForRouteAuthorizationResponseMessageProtobuf copyTo:]
  -[_MRPromptForRouteAuthorizationResponseMessageProtobuf response]
  -[_MRPromptForRouteAuthorizationResponseMessageProtobuf setResponse:]
  -[_MRPromptForRouteAuthorizationResponseMessageProtobuf hasResponse]


_MRGenericMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasKey
 @property  NSString *key
 @property  BOOL hasData
 @property  NSData *data

  // instance methods
  -[_MRGenericMessageProtobuf isEqual:]
  -[_MRGenericMessageProtobuf copyWithZone:]
  -[_MRGenericMessageProtobuf key]
  -[_MRGenericMessageProtobuf .cxx_destruct]
  -[_MRGenericMessageProtobuf data]
  -[_MRGenericMessageProtobuf setData:]
  -[_MRGenericMessageProtobuf dictionaryRepresentation]
  -[_MRGenericMessageProtobuf setKey:]
  -[_MRGenericMessageProtobuf writeTo:]
  -[_MRGenericMessageProtobuf mergeFrom:]
  -[_MRGenericMessageProtobuf readFrom:]
  -[_MRGenericMessageProtobuf copyTo:]
  -[_MRGenericMessageProtobuf hasKey]
  -[_MRGenericMessageProtobuf hasData]


_MRTextInputMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasTimestamp
 @property  double timestamp
 @property  BOOL hasText
 @property  NSString *text
 @property  BOOL hasActionType
 @property  int actionType

  // instance methods
  -[_MRTextInputMessageProtobuf isEqual:]
  -[_MRTextInputMessageProtobuf copyWithZone:]
  -[_MRTextInputMessageProtobuf .cxx_destruct]
  -[_MRTextInputMessageProtobuf dictionaryRepresentation]
  -[_MRTextInputMessageProtobuf timestamp]
  -[_MRTextInputMessageProtobuf hasTimestamp]
  -[_MRTextInputMessageProtobuf setTimestamp:]
  -[_MRTextInputMessageProtobuf writeTo:]
  -[_MRTextInputMessageProtobuf text]
  -[_MRTextInputMessageProtobuf setText:]
  -[_MRTextInputMessageProtobuf mergeFrom:]
  -[_MRTextInputMessageProtobuf readFrom:]
  -[_MRTextInputMessageProtobuf copyTo:]
  -[_MRTextInputMessageProtobuf hasText]
  -[_MRTextInputMessageProtobuf setHasTimestamp:]
  -[_MRTextInputMessageProtobuf actionType]
  -[_MRTextInputMessageProtobuf setActionType:]
  -[_MRTextInputMessageProtobuf setHasActionType:]
  -[_MRTextInputMessageProtobuf hasActionType]
  -[_MRTextInputMessageProtobuf actionTypeAsString:]
  -[_MRTextInputMessageProtobuf StringAsActionType:]


MRTelevisionDevice : MRTransportExternalDevice <RTIInputSystemPayloadDelegate>
 @property  @? gameControllerInputModeCallback
 @property  unsigned int gameControllerInputMode
 @property  NSObject<OS_dispatch_queue> *gameControllerInputModeCallbackQueue
 @property  @? gameControllerPropertiesCallback
 @property  NSObject<OS_dispatch_queue> *gameControllerPropertiesCallbackQueue
 @property  @? recordingStateCallback
 @property  NSObject<OS_dispatch_queue> *recordingStateCallbackQueue
 @property  @? textInputCallback
 @property  NSObject<OS_dispatch_queue> *textInputCallbackQueue
 @property  @? rtiCallback
 @property  NSObject<OS_dispatch_queue> *rtiCallbackQueue
 @property  RTIInputSystemSourceSession *rtiSourceSession
 @property  @? hiliteModeCallback
 @property  NSObject<OS_dispatch_queue> *hiliteModeCallbackQueue
 @property  BOOL hiliteMode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MRTelevisionDevice .cxx_destruct]
  -[MRTelevisionDevice initWithTransport:]
  -[MRTelevisionDevice handleTextActionPayload:]
  -[MRTelevisionDevice wake]
  -[MRTelevisionDevice setHiliteMode:]
  -[MRTelevisionDevice hiliteMode]
  -[MRTelevisionDevice _callClientGameControllerInputModeCallback]
  -[MRTelevisionDevice setVoiceRecordingState:]
  -[MRTelevisionDevice _callClientRecordingStateCallback]
  -[MRTelevisionDevice _callCientHiliteModeCallback]
  -[MRTelevisionDevice setGameControllerInputModeCallback:]
  -[MRTelevisionDevice setGameControllerInputModeCallbackQueue:]
  -[MRTelevisionDevice setGameControllerPropertiesCallback:]
  -[MRTelevisionDevice setGameControllerPropertiesCallbackQueue:]
  -[MRTelevisionDevice setTextInputCallback:]
  -[MRTelevisionDevice setTextInputCallbackQueue:]
  -[MRTelevisionDevice setRtiCallback:]
  -[MRTelevisionDevice setRtiCallbackQueue:]
  -[MRTelevisionDevice setRecordingStateCallback:]
  -[MRTelevisionDevice setRecordingStateCallbackQueue:]
  -[MRTelevisionDevice setHiliteModeCallback:]
  -[MRTelevisionDevice setHiliteModeCallbackQueue:]
  -[MRTelevisionDevice setGameControllerInputMode:]
  -[MRTelevisionDevice _handleKeyboardMessage:]
  -[MRTelevisionDevice _handleRemoteTextInputMessage:]
  -[MRTelevisionDevice _callClientGameControllerPropertiesCallback:controller:]
  -[MRTelevisionDevice _handleHiliteModeMessage:]
  -[MRTelevisionDevice clientConnection:didReceiveMessage:]
  -[MRTelevisionDevice textInputCallback]
  -[MRTelevisionDevice rtiCallback]
  -[MRTelevisionDevice _sendTextInputMessageWithActionType:text:]
  -[MRTelevisionDevice setRtiSourceSession:]
  -[MRTelevisionDevice _callClientTextInputCallback:type:]
  -[MRTelevisionDevice _callClientRTICallback:]
  -[MRTelevisionDevice setGameControllerInputModeCallback:withQueue:]
  -[MRTelevisionDevice setGameControllerPropertiesCallback:withQueue:]
  -[MRTelevisionDevice setTextEditingCallback:withQueue:]
  -[MRTelevisionDevice setRTICallback:withQueue:]
  -[MRTelevisionDevice setVoiceRecordingStateCallback:withQueue:]
  -[MRTelevisionDevice setHiliteModeCallback:withQueue:]
  -[MRTelevisionDevice currentClientUpdatesConfigMessage]
  -[MRTelevisionDevice registerTouchDeviceWithDescriptor:replyQueue:completion:]
  -[MRTelevisionDevice sendTouchEvent:toVirtualDeviceWithID:]
  -[MRTelevisionDevice sendHIDEvent:]
  -[MRTelevisionDevice getTextEditingSessionWithReplyQueue:completion:]
  -[MRTelevisionDevice insertTextIntoActiveTextEditingSessionWithText:]
  -[MRTelevisionDevice setTextOnActiveTextEditingSessionWithText:]
  -[MRTelevisionDevice deleteBackwardInActiveTextEditingSession]
  -[MRTelevisionDevice clearActiveTextEditingSessionData]
  -[MRTelevisionDevice getRTISessionWithReplyQueue:completion:]
  -[MRTelevisionDevice registerGameControllerWithProperties:queue:completion:]
  -[MRTelevisionDevice unregisterGameController:]
  -[MRTelevisionDevice sendGameControllerEvent:controllerID:]
  -[MRTelevisionDevice registerVoiceInputDeviceWithDescriptor:replyQueue:completion:]
  -[MRTelevisionDevice processVoiceInputAudioDataForDeviceID:withBuffer:time:gain:]
  -[MRTelevisionDevice exitHiliteMode]
  -[MRTelevisionDevice gameControllerInputModeCallback]
  -[MRTelevisionDevice gameControllerInputMode]
  -[MRTelevisionDevice gameControllerInputModeCallbackQueue]
  -[MRTelevisionDevice gameControllerPropertiesCallback]
  -[MRTelevisionDevice gameControllerPropertiesCallbackQueue]
  -[MRTelevisionDevice recordingStateCallback]
  -[MRTelevisionDevice recordingStateCallbackQueue]
  -[MRTelevisionDevice textInputCallbackQueue]
  -[MRTelevisionDevice rtiCallbackQueue]
  -[MRTelevisionDevice rtiSourceSession]
  -[MRTelevisionDevice hiliteModeCallback]
  -[MRTelevisionDevice hiliteModeCallbackQueue]


MRGetVolumeMessage : MRProtocolMessage
 @property  NSString *outputDeviceUID

  // instance methods
  -[MRGetVolumeMessage init]
  -[MRGetVolumeMessage type]
  -[MRGetVolumeMessage outputDeviceUID]
  -[MRGetVolumeMessage initWithOutputDeviceUID:]


MRGetVolumeResultMessage : MRProtocolMessage
 @property  float volume

  // instance methods
  -[MRGetVolumeResultMessage type]
  -[MRGetVolumeResultMessage volume]
  -[MRGetVolumeResultMessage initWithVolume:]


MRVolumeDidChangeMessage : MRProtocolMessage
 @property  float volume
 @property  NSString *endpointUID
 @property  NSString *outputDeviceUID

  // instance methods
  -[MRVolumeDidChangeMessage type]
  -[MRVolumeDidChangeMessage volume]
  -[MRVolumeDidChangeMessage outputDeviceUID]
  -[MRVolumeDidChangeMessage endpointUID]
  -[MRVolumeDidChangeMessage initWithVolume:endpointUID:outputDeviceUID:]


MRGetVolumeControlCapabilitiesMessage : MRProtocolMessage
 @property  NSString *outputDeviceUID

  // instance methods
  -[MRGetVolumeControlCapabilitiesMessage type]
  -[MRGetVolumeControlCapabilitiesMessage outputDeviceUID]
  -[MRGetVolumeControlCapabilitiesMessage initWithOutputDeviceUID:]


MRGetVolumeControlCapabilitiesResultMessage : MRProtocolMessage
 @property  unsigned int capabilities

  // instance methods
  -[MRGetVolumeControlCapabilitiesResultMessage type]
  -[MRGetVolumeControlCapabilitiesResultMessage capabilities]
  -[MRGetVolumeControlCapabilitiesResultMessage initWithCapabilities:]


MRLegacyVolumeControlCapabilitiesDidChangeMessage : MRProtocolMessage
 @property  unsigned int capabilities

  // instance methods
  -[MRLegacyVolumeControlCapabilitiesDidChangeMessage type]
  -[MRLegacyVolumeControlCapabilitiesDidChangeMessage capabilities]
  -[MRLegacyVolumeControlCapabilitiesDidChangeMessage initWithCapabilities:]


MRVolumeControlCapabilitiesDidChangeMessage : MRProtocolMessage
 @property  unsigned int capabilities
 @property  NSString *endpointUID
 @property  NSString *outputDeviceUID

  // instance methods
  -[MRVolumeControlCapabilitiesDidChangeMessage type]
  -[MRVolumeControlCapabilitiesDidChangeMessage capabilities]
  -[MRVolumeControlCapabilitiesDidChangeMessage outputDeviceUID]
  -[MRVolumeControlCapabilitiesDidChangeMessage endpointUID]
  -[MRVolumeControlCapabilitiesDidChangeMessage initWithCapabilities:endpointUID:outputDeviceUID:]


_MRVirtualTouchDeviceDescriptorProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasAbsolute
 @property  BOOL absolute
 @property  BOOL hasIntegratedDisplay
 @property  BOOL integratedDisplay
 @property  BOOL hasScreenSizeWidth
 @property  float screenSizeWidth
 @property  BOOL hasScreenSizeHeight
 @property  float screenSizeHeight

  // instance methods
  -[_MRVirtualTouchDeviceDescriptorProtobuf isEqual:]
  -[_MRVirtualTouchDeviceDescriptorProtobuf copyWithZone:]
  -[_MRVirtualTouchDeviceDescriptorProtobuf dictionaryRepresentation]
  -[_MRVirtualTouchDeviceDescriptorProtobuf writeTo:]
  -[_MRVirtualTouchDeviceDescriptorProtobuf mergeFrom:]
  -[_MRVirtualTouchDeviceDescriptorProtobuf readFrom:]
  -[_MRVirtualTouchDeviceDescriptorProtobuf copyTo:]
  -[_MRVirtualTouchDeviceDescriptorProtobuf setAbsolute:]
  -[_MRVirtualTouchDeviceDescriptorProtobuf setHasAbsolute:]
  -[_MRVirtualTouchDeviceDescriptorProtobuf hasAbsolute]
  -[_MRVirtualTouchDeviceDescriptorProtobuf setIntegratedDisplay:]
  -[_MRVirtualTouchDeviceDescriptorProtobuf setHasIntegratedDisplay:]
  -[_MRVirtualTouchDeviceDescriptorProtobuf hasIntegratedDisplay]
  -[_MRVirtualTouchDeviceDescriptorProtobuf setScreenSizeWidth:]
  -[_MRVirtualTouchDeviceDescriptorProtobuf setHasScreenSizeWidth:]
  -[_MRVirtualTouchDeviceDescriptorProtobuf hasScreenSizeWidth]
  -[_MRVirtualTouchDeviceDescriptorProtobuf setScreenSizeHeight:]
  -[_MRVirtualTouchDeviceDescriptorProtobuf setHasScreenSizeHeight:]
  -[_MRVirtualTouchDeviceDescriptorProtobuf hasScreenSizeHeight]
  -[_MRVirtualTouchDeviceDescriptorProtobuf absolute]
  -[_MRVirtualTouchDeviceDescriptorProtobuf integratedDisplay]
  -[_MRVirtualTouchDeviceDescriptorProtobuf screenSizeWidth]
  -[_MRVirtualTouchDeviceDescriptorProtobuf screenSizeHeight]


_MRUpdateContentItemMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  NSMutableArray *contentItems
 @property  BOOL hasPlayerPath
 @property  _MRNowPlayingPlayerPathProtobuf *playerPath

  // class methods
  +[_MRUpdateContentItemMessageProtobuf contentItemsType]

  // instance methods
  -[_MRUpdateContentItemMessageProtobuf isEqual:]
  -[_MRUpdateContentItemMessageProtobuf copyWithZone:]
  -[_MRUpdateContentItemMessageProtobuf .cxx_destruct]
  -[_MRUpdateContentItemMessageProtobuf dictionaryRepresentation]
  -[_MRUpdateContentItemMessageProtobuf writeTo:]
  -[_MRUpdateContentItemMessageProtobuf mergeFrom:]
  -[_MRUpdateContentItemMessageProtobuf readFrom:]
  -[_MRUpdateContentItemMessageProtobuf copyTo:]
  -[_MRUpdateContentItemMessageProtobuf setPlayerPath:]
  -[_MRUpdateContentItemMessageProtobuf playerPath]
  -[_MRUpdateContentItemMessageProtobuf setContentItems:]
  -[_MRUpdateContentItemMessageProtobuf contentItems]
  -[_MRUpdateContentItemMessageProtobuf hasPlayerPath]
  -[_MRUpdateContentItemMessageProtobuf addContentItems:]
  -[_MRUpdateContentItemMessageProtobuf contentItemsCount]
  -[_MRUpdateContentItemMessageProtobuf clearContentItems]
  -[_MRUpdateContentItemMessageProtobuf contentItemsAtIndex:]


MRAVEndpointObserver : NSObject /usr/lib/libSystem.B.dylib
 @property  @? endpointChangedCallback
 @property  NSString *outputDeviceUID
 @property  MRAVEndpoint *endpoint

  // instance methods
  -[MRAVEndpointObserver .cxx_destruct]
  -[MRAVEndpointObserver endpoint]
  -[MRAVEndpointObserver end]
  -[MRAVEndpointObserver begin]
  -[MRAVEndpointObserver discoveredEndpoints]
  -[MRAVEndpointObserver outputDeviceUID]
  -[MRAVEndpointObserver initWithOutputDeviceUID:]
  -[MRAVEndpointObserver _initializeDiscoverySession]
  -[MRAVEndpointObserver _handleOutputContextDidChangeNotification]
  -[MRAVEndpointObserver _reevaluateEndpoint]
  -[MRAVEndpointObserver _handleEndpointsDidChange:]
  -[MRAVEndpointObserver _endpointContainingOutputDevice:]
  -[MRAVEndpointObserver setEndpointChangedCallback:]
  -[MRAVEndpointObserver endpointChangedCallback]


MRCryptoPairingSession : NSObject /usr/lib/libSystem.B.dylib
 @property  _MRDeviceInfoMessageProtobuf *device
 @property  unsigned long role
 @property  BOOL valid
 @property  BOOL paired
 @property  NSArray *pairedDevices
 @property  <MRCryptoPairingSessionDelegate> *delegate

  // class methods
  +[MRCryptoPairingSession allocWithZone:]

  // instance methods
  -[MRCryptoPairingSession init]
  -[MRCryptoPairingSession isValid]
  -[MRCryptoPairingSession open]
  -[MRCryptoPairingSession close]
  -[MRCryptoPairingSession delegate]
  -[MRCryptoPairingSession setDelegate:]
  -[MRCryptoPairingSession role]
  -[MRCryptoPairingSession .cxx_destruct]
  -[MRCryptoPairingSession device]
  -[MRCryptoPairingSession isPaired]
  -[MRCryptoPairingSession pairedDevices]
  -[MRCryptoPairingSession initWithRole:device:]
  -[MRCryptoPairingSession removePeer]
  -[MRCryptoPairingSession updatePeer]
  -[MRCryptoPairingSession handlePairingExchangeData:completion:]
  -[MRCryptoPairingSession handlePairingFailureWithStatus:]
  -[MRCryptoPairingSession encryptData:withError:]
  -[MRCryptoPairingSession decryptData:withError:]
  -[MRCryptoPairingSession deleteIdentityWithError:]


MRAVDistantRoutingDiscoverySession : MRAVRoutingDiscoverySession <MRAVDistantRoutingDiscoveryClientProtocol>
 @property  NSXPCConnection *hostedRoutingSessionConnection
 @property  NSArray *distantEndpoints
 @property  NSArray *distantOutputDevices
 @property  NSMutableDictionary *distantExternalDevices
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MRAVDistantRoutingDiscoverySession clientInterface]
  +[MRAVDistantRoutingDiscoverySession serviceInterface]

  // instance methods
  -[MRAVDistantRoutingDiscoverySession dealloc]
  -[MRAVDistantRoutingDiscoverySession .cxx_destruct]
  -[MRAVDistantRoutingDiscoverySession setDiscoveryMode:]
  -[MRAVDistantRoutingDiscoverySession routingContextUID]
  -[MRAVDistantRoutingDiscoverySession discoveryMode]
  -[MRAVDistantRoutingDiscoverySession devicePresenceDetected]
  -[MRAVDistantRoutingDiscoverySession availableOutputDevices]
  -[MRAVDistantRoutingDiscoverySession setRoutingContextUID:]
  -[MRAVDistantRoutingDiscoverySession availableEndpointsDidChange:]
  -[MRAVDistantRoutingDiscoverySession availableOutputDevicesDidChange:]
  -[MRAVDistantRoutingDiscoverySession _initializeHostedRoutingConnectionWithCompletion:]
  -[MRAVDistantRoutingDiscoverySession _reloadHostedRoutingServiceDiscoveryMode]
  -[MRAVDistantRoutingDiscoverySession _hostedRoutingConnection]
  -[MRAVDistantRoutingDiscoverySession distantEndpoints]
  -[MRAVDistantRoutingDiscoverySession distantOutputDevices]
  -[MRAVDistantRoutingDiscoverySession _reloadAvailableDistantEndpoints]
  -[MRAVDistantRoutingDiscoverySession _reloadAvailableDistantOutputDevices]
  -[MRAVDistantRoutingDiscoverySession _reloadAvailableDistantEndpointsWithEndpoints:]
  -[MRAVDistantRoutingDiscoverySession _reloadAvailableDistantOutputDevicesWithOutputDevices:]
  -[MRAVDistantRoutingDiscoverySession setHostedRoutingSessionConnection:]
  -[MRAVDistantRoutingDiscoverySession initWithEndpointFeatures:enableThrottling:]
  -[MRAVDistantRoutingDiscoverySession endpointFeatures]
  -[MRAVDistantRoutingDiscoverySession availableEndpoints]
  -[MRAVDistantRoutingDiscoverySession setDistantEndpoints:]
  -[MRAVDistantRoutingDiscoverySession setDistantOutputDevices:]
  -[MRAVDistantRoutingDiscoverySession hostedRoutingSessionConnection]
  -[MRAVDistantRoutingDiscoverySession distantExternalDevices]
  -[MRAVDistantRoutingDiscoverySession setDistantExternalDevices:]


_MRPlaybackSessionMigrateRequestProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasRequestID
 @property  NSString *requestID
 @property  BOOL hasPlayerOptions
 @property  int playerOptions
 @property  BOOL hasEndpointOptions
 @property  int endpointOptions
 @property  NSMutableArray *events
 @property  BOOL hasPlaybackPosition
 @property  double playbackPosition
 @property  BOOL hasContentItem
 @property  _MRContentItemProtobuf *contentItem
 @property  BOOL hasPlayerPath
 @property  _MRNowPlayingPlayerPathProtobuf *playerPath
 @property  BOOL hasPlaybackState
 @property  int playbackState
 @property  BOOL hasPlaybackRate
 @property  double playbackRate
 @property  BOOL hasPlaybackSessionRequest
 @property  _MRPlaybackSessionRequestProtobuf *playbackSessionRequest

  // class methods
  +[_MRPlaybackSessionMigrateRequestProtobuf eventsType]

  // instance methods
  -[_MRPlaybackSessionMigrateRequestProtobuf isEqual:]
  -[_MRPlaybackSessionMigrateRequestProtobuf copyWithZone:]
  -[_MRPlaybackSessionMigrateRequestProtobuf .cxx_destruct]
  -[_MRPlaybackSessionMigrateRequestProtobuf dictionaryRepresentation]
  -[_MRPlaybackSessionMigrateRequestProtobuf writeTo:]
  -[_MRPlaybackSessionMigrateRequestProtobuf mergeFrom:]
  -[_MRPlaybackSessionMigrateRequestProtobuf readFrom:]
  -[_MRPlaybackSessionMigrateRequestProtobuf copyTo:]
  -[_MRPlaybackSessionMigrateRequestProtobuf events]
  -[_MRPlaybackSessionMigrateRequestProtobuf setEvents:]
  -[_MRPlaybackSessionMigrateRequestProtobuf addEvents:]
  -[_MRPlaybackSessionMigrateRequestProtobuf eventsCount]
  -[_MRPlaybackSessionMigrateRequestProtobuf clearEvents]
  -[_MRPlaybackSessionMigrateRequestProtobuf eventsAtIndex:]
  -[_MRPlaybackSessionMigrateRequestProtobuf requestID]
  -[_MRPlaybackSessionMigrateRequestProtobuf setRequestID:]
  -[_MRPlaybackSessionMigrateRequestProtobuf playbackRate]
  -[_MRPlaybackSessionMigrateRequestProtobuf setPlaybackRate:]
  -[_MRPlaybackSessionMigrateRequestProtobuf setPlaybackPosition:]
  -[_MRPlaybackSessionMigrateRequestProtobuf playbackState]
  -[_MRPlaybackSessionMigrateRequestProtobuf contentItem]
  -[_MRPlaybackSessionMigrateRequestProtobuf playbackPosition]
  -[_MRPlaybackSessionMigrateRequestProtobuf setPlayerPath:]
  -[_MRPlaybackSessionMigrateRequestProtobuf playerPath]
  -[_MRPlaybackSessionMigrateRequestProtobuf setPlaybackState:]
  -[_MRPlaybackSessionMigrateRequestProtobuf hasRequestID]
  -[_MRPlaybackSessionMigrateRequestProtobuf hasPlayerPath]
  -[_MRPlaybackSessionMigrateRequestProtobuf setHasPlaybackState:]
  -[_MRPlaybackSessionMigrateRequestProtobuf hasPlaybackState]
  -[_MRPlaybackSessionMigrateRequestProtobuf playbackStateAsString:]
  -[_MRPlaybackSessionMigrateRequestProtobuf StringAsPlaybackState:]
  -[_MRPlaybackSessionMigrateRequestProtobuf setHasPlaybackRate:]
  -[_MRPlaybackSessionMigrateRequestProtobuf hasPlaybackRate]
  -[_MRPlaybackSessionMigrateRequestProtobuf playbackSessionRequest]
  -[_MRPlaybackSessionMigrateRequestProtobuf playerOptions]
  -[_MRPlaybackSessionMigrateRequestProtobuf setContentItem:]
  -[_MRPlaybackSessionMigrateRequestProtobuf setPlayerOptions:]
  -[_MRPlaybackSessionMigrateRequestProtobuf setEndpointOptions:]
  -[_MRPlaybackSessionMigrateRequestProtobuf setPlaybackSessionRequest:]
  -[_MRPlaybackSessionMigrateRequestProtobuf endpointOptions]
  -[_MRPlaybackSessionMigrateRequestProtobuf hasPlaybackPosition]
  -[_MRPlaybackSessionMigrateRequestProtobuf hasContentItem]
  -[_MRPlaybackSessionMigrateRequestProtobuf setHasPlayerOptions:]
  -[_MRPlaybackSessionMigrateRequestProtobuf hasPlayerOptions]
  -[_MRPlaybackSessionMigrateRequestProtobuf playerOptionsAsString:]
  -[_MRPlaybackSessionMigrateRequestProtobuf StringAsPlayerOptions:]
  -[_MRPlaybackSessionMigrateRequestProtobuf setHasEndpointOptions:]
  -[_MRPlaybackSessionMigrateRequestProtobuf hasEndpointOptions]
  -[_MRPlaybackSessionMigrateRequestProtobuf endpointOptionsAsString:]
  -[_MRPlaybackSessionMigrateRequestProtobuf StringAsEndpointOptions:]
  -[_MRPlaybackSessionMigrateRequestProtobuf setHasPlaybackPosition:]
  -[_MRPlaybackSessionMigrateRequestProtobuf hasPlaybackSessionRequest]


MRExternalDevice : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *name
 @property  NSString *hostName
 @property  long long port
 @property  _MROriginProtobuf *customOrigin
 @property  _MRDeviceInfoMessageProtobuf *deviceInfo
 @property  MRSupportedProtocolMessages *supportedMessages
 @property  BOOL wantsNowPlayingNotifications
 @property  BOOL wantsNowPlayingArtworkNotifications
 @property  BOOL wantsVolumeNotifications
 @property  BOOL wantsOutputDeviceNotifications
 @property  BOOL valid
 @property  unsigned int connectionState
 @property  BOOL paired
 @property  BOOL usingSystemPairing

  // instance methods
  -[MRExternalDevice name]
  -[MRExternalDevice isValid]
  -[MRExternalDevice port]
  -[MRExternalDevice _init]
  -[MRExternalDevice hostName]
  -[MRExternalDevice connectionState]
  -[MRExternalDevice deviceInfo]
  -[MRExternalDevice isPaired]
  -[MRExternalDevice disconnect:]
  -[MRExternalDevice outputDeviceVolume:queue:completion:]
  -[MRExternalDevice supportedMessages]
  -[MRExternalDevice setUsingSystemPairing:]
  -[MRExternalDevice connectWithOptions:]
  -[MRExternalDevice unpair]
  -[MRExternalDevice sendCustomData:withName:]
  -[MRExternalDevice wantsNowPlayingNotifications]
  -[MRExternalDevice setWantsNowPlayingNotifications:]
  -[MRExternalDevice wantsVolumeNotifications]
  -[MRExternalDevice setWantsVolumeNotifications:]
  -[MRExternalDevice wantsOutputDeviceNotifications]
  -[MRExternalDevice setWantsOutputDeviceNotifications:]
  -[MRExternalDevice isUsingSystemPairing]
  -[MRExternalDevice customOrigin]
  -[MRExternalDevice setPairingCallback:withQueue:]
  -[MRExternalDevice setConnectionStateCallback:withQueue:]
  -[MRExternalDevice setNameCallback:withQueue:]
  -[MRExternalDevice setPairingAllowedCallback:withQueue:]
  -[MRExternalDevice setCustomDataCallback:withQueue:]
  -[MRExternalDevice setVolumeCallback:withQueue:]
  -[MRExternalDevice setOutputDeviceVolume:outputDeviceUID:queue:completion:]
  -[MRExternalDevice outputDeviceVolumeControlCapabilities:queue:completion:]
  -[MRExternalDevice modifyOutputContextOfType:addingDeviceUIDs:removingDeviceUIDs:settingDeviceUIDs:withReplyQueue:completion:]
  -[MRExternalDevice ping:callback:withQueue:]
  -[MRExternalDevice sendButtonEvent:]
  -[MRExternalDevice sendClientUpdatesConfigMessage]
  -[MRExternalDevice wantsNowPlayingArtworkNotifications]
  -[MRExternalDevice errorForCurrentState]
  -[MRExternalDevice currentClientUpdatesConfigMessage]
  -[MRExternalDevice setWantsNowPlayingArtworkNotifications:]


MRTransportExternalDevice : MRExternalDevice <MRProtocolClientConnectionDelegate>
 @property  MRExternalClientConnection *clientConnection
 @property  _MROriginProtobuf *customOrigin
 @property  _MRDeviceInfoMessageProtobuf *deviceInfo
 @property  NSData *nowPlayingArtwork
 @property  NSDictionary *nowPlayingInfo
 @property  _MRContentItemProtobuf *nowPlayingItem
 @property  _MRNowPlayingPlayerPathProtobuf *playerPath
 @property  @? pairingCallback
 @property  NSObject<OS_dispatch_queue> *pairingCallbackQueue
 @property  @? connectionStateCallback
 @property  NSObject<OS_dispatch_queue> *connectionStateCallbackQueue
 @property  @? nameCallback
 @property  NSObject<OS_dispatch_queue> *nameCallbackQueue
 @property  @? pairingAllowedCallback
 @property  NSObject<OS_dispatch_queue> *pairingAllowedCallbackQueue
 @property  @? customDataCallback
 @property  NSObject<OS_dispatch_queue> *customDataCallbackQueue
 @property  @? outputDevicesUpdatedCallback
 @property  NSObject<OS_dispatch_queue> *outputDevicesUpdatedCallbackQueue
 @property  @? outputDevicesRemovedCallback
 @property  NSObject<OS_dispatch_queue> *outputDevicesRemovedCallbackQueue
 @property  @? volumeCallback
 @property  NSObject<OS_dispatch_queue> *volumeCallbackQueue
 @property  @? volumeControlCapabilitiesCallback
 @property  NSObject<OS_dispatch_queue> *volumeControlCapabilitiesCallbackQueue
 @property  NSObject<OS_dispatch_queue> *outputContextCallbackQueue
 @property  NSRunLoop *runLoop
 @property  MRExternalDeviceTransport *transport
 @property  long long connectionRecoveryBehavior
 @property  BOOL isCallingClientCallback
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MRTransportExternalDevice init]
  -[MRTransportExternalDevice dealloc]
  -[MRTransportExternalDevice name]
  -[MRTransportExternalDevice isValid]
  -[MRTransportExternalDevice port]
  -[MRTransportExternalDevice .cxx_destruct]
  -[MRTransportExternalDevice setName:]
  -[MRTransportExternalDevice hostName]
  -[MRTransportExternalDevice runLoop]
  -[MRTransportExternalDevice transport]
  -[MRTransportExternalDevice connectionState]
  -[MRTransportExternalDevice deviceInfo]
  -[MRTransportExternalDevice setDeviceInfo:]
  -[MRTransportExternalDevice initWithTransport:]
  -[MRTransportExternalDevice isPaired]
  -[MRTransportExternalDevice clientConnection]
  -[MRTransportExternalDevice setClientConnection:]
  -[MRTransportExternalDevice nowPlayingInfo]
  -[MRTransportExternalDevice setNowPlayingInfo:]
  -[MRTransportExternalDevice nowPlayingItem]
  -[MRTransportExternalDevice setNowPlayingItem:]
  -[MRTransportExternalDevice setPlayerPath:]
  -[MRTransportExternalDevice playerPath]
  -[MRTransportExternalDevice disconnect:]
  -[MRTransportExternalDevice setRunLoop:]
  -[MRTransportExternalDevice outputDeviceVolume:queue:completion:]
  -[MRTransportExternalDevice supportedMessages]
  -[MRTransportExternalDevice setUsingSystemPairing:]
  -[MRTransportExternalDevice connectWithOptions:]
  -[MRTransportExternalDevice unpair]
  -[MRTransportExternalDevice sendCustomData:withName:]
  -[MRTransportExternalDevice setConnectionStateCallback:]
  -[MRTransportExternalDevice setConnectionStateCallbackQueue:]
  -[MRTransportExternalDevice setNameCallback:]
  -[MRTransportExternalDevice setNameCallbackQueue:]
  -[MRTransportExternalDevice setCustomDataCallback:]
  -[MRTransportExternalDevice setCustomDataCallbackQueue:]
  -[MRTransportExternalDevice setVolumeCallback:]
  -[MRTransportExternalDevice setVolumeCallbackQueue:]
  -[MRTransportExternalDevice connectionStateCallback]
  -[MRTransportExternalDevice connectionStateCallbackQueue]
  -[MRTransportExternalDevice nameCallbackQueue]
  -[MRTransportExternalDevice nameCallback]
  -[MRTransportExternalDevice customDataCallbackQueue]
  -[MRTransportExternalDevice customDataCallback]
  -[MRTransportExternalDevice volumeCallbackQueue]
  -[MRTransportExternalDevice volumeCallback]
  -[MRTransportExternalDevice wantsNowPlayingNotifications]
  -[MRTransportExternalDevice setWantsNowPlayingNotifications:]
  -[MRTransportExternalDevice wantsVolumeNotifications]
  -[MRTransportExternalDevice setWantsVolumeNotifications:]
  -[MRTransportExternalDevice wantsOutputDeviceNotifications]
  -[MRTransportExternalDevice setWantsOutputDeviceNotifications:]
  -[MRTransportExternalDevice isUsingSystemPairing]
  -[MRTransportExternalDevice customOrigin]
  -[MRTransportExternalDevice setPairingCallback:withQueue:]
  -[MRTransportExternalDevice setConnectionStateCallback:withQueue:]
  -[MRTransportExternalDevice setNameCallback:withQueue:]
  -[MRTransportExternalDevice setPairingAllowedCallback:withQueue:]
  -[MRTransportExternalDevice setCustomDataCallback:withQueue:]
  -[MRTransportExternalDevice setVolumeCallback:withQueue:]
  -[MRTransportExternalDevice setOutputDeviceVolume:outputDeviceUID:queue:completion:]
  -[MRTransportExternalDevice outputDeviceVolumeControlCapabilities:queue:completion:]
  -[MRTransportExternalDevice modifyOutputContextOfType:addingDeviceUIDs:removingDeviceUIDs:settingDeviceUIDs:withReplyQueue:completion:]
  -[MRTransportExternalDevice ping:callback:withQueue:]
  -[MRTransportExternalDevice sendButtonEvent:]
  -[MRTransportExternalDevice sendClientUpdatesConfigMessage]
  -[MRTransportExternalDevice clientConnection:didReceiveMessage:]
  -[MRTransportExternalDevice wantsNowPlayingArtworkNotifications]
  -[MRTransportExternalDevice errorForCurrentState]
  -[MRTransportExternalDevice setIsCallingClientCallback:]
  -[MRTransportExternalDevice currentClientUpdatesConfigMessage]
  -[MRTransportExternalDevice setWantsNowPlayingArtworkNotifications:]
  -[MRTransportExternalDevice _localDeviceInfoDidChangeNotification:]
  -[MRTransportExternalDevice _transportDeviceInfoDidChangeNotification:]
  -[MRTransportExternalDevice _contentItemUpdatedNotification:]
  -[MRTransportExternalDevice _handleDeviceInfoChange:oldDevice:]
  -[MRTransportExternalDevice _cleanUpWithReason:]
  -[MRTransportExternalDevice _onSerialQueue_registerOriginCallbacks]
  -[MRTransportExternalDevice _updateNowPlayingInfo]
  -[MRTransportExternalDevice setNowPlayingArtwork:]
  -[MRTransportExternalDevice _callClientConnectionStateCallback:previousConnectionState:error:]
  -[MRTransportExternalDevice setPairingCallback:]
  -[MRTransportExternalDevice setPairingCallbackQueue:]
  -[MRTransportExternalDevice setPairingAllowedCallback:]
  -[MRTransportExternalDevice setPairingAllowedCallbackQueue:]
  -[MRTransportExternalDevice setOutputDevicesUpdatedCallback:]
  -[MRTransportExternalDevice setOutputDevicesUpdatedCallbackQueue:]
  -[MRTransportExternalDevice setOutputDevicesRemovedCallback:]
  -[MRTransportExternalDevice setOutputDevicesRemovedCallbackQueue:]
  -[MRTransportExternalDevice setVolumeControlCapabilitiesCallback:]
  -[MRTransportExternalDevice setVolumeControlCapabilitiesCallbackQueue:]
  -[MRTransportExternalDevice _cleanUpStreamsWithReason:]
  -[MRTransportExternalDevice _onWorkerQueue_initializeConnectionWithOptions:]
  -[MRTransportExternalDevice _onWorkerQueue_loadDeviceInfo]
  -[MRTransportExternalDevice _onWorkerQueue_openSecuritySession]
  -[MRTransportExternalDevice _onWorkerQueue_setupCustomOrigin]
  -[MRTransportExternalDevice _onWorkerQueue_reRegisterCustomOrigin]
  -[MRTransportExternalDevice _onWorkerQueue_syncClientState]
  -[MRTransportExternalDevice setConnectionState:error:]
  -[MRTransportExternalDevice _onWorkerQueue_connectWithOptions:isRetry:]
  -[MRTransportExternalDevice _onSerialQueue_prepareToConnectWithOptions:]
  -[MRTransportExternalDevice _onWorkerQueue_disconnect:]
  -[MRTransportExternalDevice _onSerialQueue_prepareToDisconnect:]
  -[MRTransportExternalDevice sendClientUpdatesConfigMessageWithCompletion:]
  -[MRTransportExternalDevice _handleCryptoPairingMessage:]
  -[MRTransportExternalDevice _handleSetStateMessage:]
  -[MRTransportExternalDevice _handleNotificationMessage:]
  -[MRTransportExternalDevice _handleSetArtworkMessage:]
  -[MRTransportExternalDevice _handleTransactionMessage:]
  -[MRTransportExternalDevice _handleDeviceInfoUpdateMessage:]
  -[MRTransportExternalDevice _handleSetConnectionStateMessage:]
  -[MRTransportExternalDevice _handleGenericMessage:]
  -[MRTransportExternalDevice _handleSetNowPlayingClientMessage:]
  -[MRTransportExternalDevice _handleSetNowPlayingPlayerMessage:]
  -[MRTransportExternalDevice _handleRemoveClientMessage:]
  -[MRTransportExternalDevice _handleRemovePlayerMessage:]
  -[MRTransportExternalDevice _handleUpdateClientMessage:]
  -[MRTransportExternalDevice _handleUpdateContentItemsMessage:]
  -[MRTransportExternalDevice _handleUpdateContentItemArtworkMessage:]
  -[MRTransportExternalDevice _handleUpdatePlayerMessage:]
  -[MRTransportExternalDevice _handlePromptForRouteAuthorizationMessage:]
  -[MRTransportExternalDevice _handlePresentRouteAuthorizationStatusMessage:]
  -[MRTransportExternalDevice _handleVolumeDidChangeMessage:]
  -[MRTransportExternalDevice _handleVolumeControlCapabilitiesDidChangeMessage:]
  -[MRTransportExternalDevice _handleLegacyVolumeControlCapabilitiesDidChangeMessage:]
  -[MRTransportExternalDevice _handleOutputDevicesUpdatedMessage:]
  -[MRTransportExternalDevice _handleOutputDevicesRemovedMessage:]
  -[MRTransportExternalDevice _handleSetDefaultSupportedCommandsMessage:]
  -[MRTransportExternalDevice setCustomOrigin:]
  -[MRTransportExternalDevice _callClientPairingCallback:]
  -[MRTransportExternalDevice _handleRemoteCommand:withOptions:playerPath:completion:]
  -[MRTransportExternalDevice _handlePlaybackQueueRequest:forPlayer:completion:]
  -[MRTransportExternalDevice _handlePlaybackSessionRequest:forPlayerPath:completion:]
  -[MRTransportExternalDevice _handlePlaybackSessionMigrateRequest:request:forPlayerPath:completion:]
  -[MRTransportExternalDevice _handlePlaybackSessionMigrateBeginRequest:forPlayerPath:completion:]
  -[MRTransportExternalDevice _handlePlaybackSessionMigrateEndRequest:error:forPlayerPath:completion:]
  -[MRTransportExternalDevice _handleLegacyPlaybackQueueRequestWithCompletion:]
  -[MRTransportExternalDevice _handlePlaybackQueueResponse:completion:]
  -[MRTransportExternalDevice veirfyConnectionStatusAndMaybeDisconnect:]
  -[MRTransportExternalDevice _createPlaybackQueue:]
  -[MRTransportExternalDevice _handleSetStateMessageModern:]
  -[MRTransportExternalDevice _handleSetStateMessageLegacy:]
  -[MRTransportExternalDevice _handleNotificationMessageModern:]
  -[MRTransportExternalDevice _handleNotificationMessageLegacy:]
  -[MRTransportExternalDevice _callOutputDevicesUpdatedCallbackWithOutputDevices:]
  -[MRTransportExternalDevice _callOutputDevicesRemovedCallbackWithOutputDeviceUIDs:]
  -[MRTransportExternalDevice _callVolumeCallback:outputDeviceUID:]
  -[MRTransportExternalDevice _callVolumeControlCapabilitiesCallback:outputDeviceUID:]
  -[MRTransportExternalDevice _callClientNameCallback]
  -[MRTransportExternalDevice _callClientAllowsPairingCallback]
  -[MRTransportExternalDevice _callClientCustomDataCallback:name:]
  -[MRTransportExternalDevice clientDidDisconnect:]
  -[MRTransportExternalDevice nowPlayingArtwork]
  -[MRTransportExternalDevice setOutputDevicesUpdatedCallback:withQueue:]
  -[MRTransportExternalDevice setOutputDevicesRemovedCallback:withQueue:]
  -[MRTransportExternalDevice setVolumeControlCapabilitiesCallback:withQueue:]
  -[MRTransportExternalDevice removeFromParentGroup:queue:completion:]
  -[MRTransportExternalDevice connectionRecoveryBehavior]
  -[MRTransportExternalDevice setConnectionRecoveryBehavior:]
  -[MRTransportExternalDevice isCallingClientCallback]
  -[MRTransportExternalDevice pairingCallback]
  -[MRTransportExternalDevice pairingCallbackQueue]
  -[MRTransportExternalDevice pairingAllowedCallback]
  -[MRTransportExternalDevice pairingAllowedCallbackQueue]
  -[MRTransportExternalDevice outputDevicesUpdatedCallback]
  -[MRTransportExternalDevice outputDevicesUpdatedCallbackQueue]
  -[MRTransportExternalDevice outputDevicesRemovedCallback]
  -[MRTransportExternalDevice outputDevicesRemovedCallbackQueue]
  -[MRTransportExternalDevice volumeControlCapabilitiesCallback]
  -[MRTransportExternalDevice volumeControlCapabilitiesCallbackQueue]
  -[MRTransportExternalDevice outputContextCallbackQueue]
  -[MRTransportExternalDevice setOutputContextCallbackQueue:]


_MRRemovePlayerMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasPlayerPath
 @property  _MRNowPlayingPlayerPathProtobuf *playerPath

  // instance methods
  -[_MRRemovePlayerMessageProtobuf isEqual:]
  -[_MRRemovePlayerMessageProtobuf copyWithZone:]
  -[_MRRemovePlayerMessageProtobuf .cxx_destruct]
  -[_MRRemovePlayerMessageProtobuf dictionaryRepresentation]
  -[_MRRemovePlayerMessageProtobuf writeTo:]
  -[_MRRemovePlayerMessageProtobuf mergeFrom:]
  -[_MRRemovePlayerMessageProtobuf readFrom:]
  -[_MRRemovePlayerMessageProtobuf copyTo:]
  -[_MRRemovePlayerMessageProtobuf setPlayerPath:]
  -[_MRRemovePlayerMessageProtobuf playerPath]
  -[_MRRemovePlayerMessageProtobuf hasPlayerPath]


_MRSendLyricsEventMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasEvent
 @property  _MRLyricsEventProtobuf *event

  // instance methods
  -[_MRSendLyricsEventMessageProtobuf isEqual:]
  -[_MRSendLyricsEventMessageProtobuf copyWithZone:]
  -[_MRSendLyricsEventMessageProtobuf .cxx_destruct]
  -[_MRSendLyricsEventMessageProtobuf dictionaryRepresentation]
  -[_MRSendLyricsEventMessageProtobuf writeTo:]
  -[_MRSendLyricsEventMessageProtobuf event]
  -[_MRSendLyricsEventMessageProtobuf setEvent:]
  -[_MRSendLyricsEventMessageProtobuf mergeFrom:]
  -[_MRSendLyricsEventMessageProtobuf readFrom:]
  -[_MRSendLyricsEventMessageProtobuf copyTo:]
  -[_MRSendLyricsEventMessageProtobuf hasEvent]


_MRVolumeControlAvailabilityProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasVolumeControlAvailable
 @property  BOOL volumeControlAvailable
 @property  BOOL hasVolumeCapabilities
 @property  int volumeCapabilities

  // instance methods
  -[_MRVolumeControlAvailabilityProtobuf isEqual:]
  -[_MRVolumeControlAvailabilityProtobuf copyWithZone:]
  -[_MRVolumeControlAvailabilityProtobuf dictionaryRepresentation]
  -[_MRVolumeControlAvailabilityProtobuf writeTo:]
  -[_MRVolumeControlAvailabilityProtobuf mergeFrom:]
  -[_MRVolumeControlAvailabilityProtobuf readFrom:]
  -[_MRVolumeControlAvailabilityProtobuf copyTo:]
  -[_MRVolumeControlAvailabilityProtobuf volumeCapabilities]
  -[_MRVolumeControlAvailabilityProtobuf setVolumeCapabilities:]
  -[_MRVolumeControlAvailabilityProtobuf hasVolumeCapabilities]
  -[_MRVolumeControlAvailabilityProtobuf setVolumeControlAvailable:]
  -[_MRVolumeControlAvailabilityProtobuf hasVolumeControlAvailable]
  -[_MRVolumeControlAvailabilityProtobuf volumeControlAvailable]
  -[_MRVolumeControlAvailabilityProtobuf setHasVolumeControlAvailable:]
  -[_MRVolumeControlAvailabilityProtobuf setHasVolumeCapabilities:]


_MRSendCommandMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasCommand
 @property  int command
 @property  BOOL hasOptions
 @property  _MRCommandOptionsProtobuf *options
 @property  BOOL hasPlayerPath
 @property  _MRNowPlayingPlayerPathProtobuf *playerPath

  // instance methods
  -[_MRSendCommandMessageProtobuf isEqual:]
  -[_MRSendCommandMessageProtobuf copyWithZone:]
  -[_MRSendCommandMessageProtobuf options]
  -[_MRSendCommandMessageProtobuf .cxx_destruct]
  -[_MRSendCommandMessageProtobuf dictionaryRepresentation]
  -[_MRSendCommandMessageProtobuf setOptions:]
  -[_MRSendCommandMessageProtobuf writeTo:]
  -[_MRSendCommandMessageProtobuf mergeFrom:]
  -[_MRSendCommandMessageProtobuf readFrom:]
  -[_MRSendCommandMessageProtobuf copyTo:]
  -[_MRSendCommandMessageProtobuf setCommand:]
  -[_MRSendCommandMessageProtobuf command]
  -[_MRSendCommandMessageProtobuf setHasCommand:]
  -[_MRSendCommandMessageProtobuf hasCommand]
  -[_MRSendCommandMessageProtobuf commandAsString:]
  -[_MRSendCommandMessageProtobuf StringAsCommand:]
  -[_MRSendCommandMessageProtobuf hasOptions]
  -[_MRSendCommandMessageProtobuf setPlayerPath:]
  -[_MRSendCommandMessageProtobuf playerPath]
  -[_MRSendCommandMessageProtobuf hasPlayerPath]


_MRSendHIDReportMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasVirtualDeviceID
 @property  NSString *virtualDeviceID
 @property  BOOL hasReport
 @property  NSData *report

  // instance methods
  -[_MRSendHIDReportMessageProtobuf isEqual:]
  -[_MRSendHIDReportMessageProtobuf copyWithZone:]
  -[_MRSendHIDReportMessageProtobuf .cxx_destruct]
  -[_MRSendHIDReportMessageProtobuf dictionaryRepresentation]
  -[_MRSendHIDReportMessageProtobuf writeTo:]
  -[_MRSendHIDReportMessageProtobuf mergeFrom:]
  -[_MRSendHIDReportMessageProtobuf readFrom:]
  -[_MRSendHIDReportMessageProtobuf copyTo:]
  -[_MRSendHIDReportMessageProtobuf report]
  -[_MRSendHIDReportMessageProtobuf setReport:]
  -[_MRSendHIDReportMessageProtobuf setVirtualDeviceID:]
  -[_MRSendHIDReportMessageProtobuf hasVirtualDeviceID]
  -[_MRSendHIDReportMessageProtobuf virtualDeviceID]
  -[_MRSendHIDReportMessageProtobuf hasReport]


MRSendCommandMessage : MRProtocolMessage
 @property  unsigned int command
 @property  NSDictionary *options
 @property  NSDate *serializationDate
 @property  _MRNowPlayingPlayerPathProtobuf *playerPath
 @property  unsigned int appOptions

  // instance methods
  -[MRSendCommandMessage options]
  -[MRSendCommandMessage type]
  -[MRSendCommandMessage .cxx_destruct]
  -[MRSendCommandMessage command]
  -[MRSendCommandMessage playerPath]
  -[MRSendCommandMessage appOptions]
  -[MRSendCommandMessage initWithCommand:options:playerPath:]
  -[MRSendCommandMessage serializationDate]


_MRTextEditingAttributesProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasTitle
 @property  NSString *title
 @property  BOOL hasPrompt
 @property  NSString *prompt
 @property  BOOL hasInputTraits
 @property  _MRTextInputTraitsProtobuf *inputTraits

  // instance methods
  -[_MRTextEditingAttributesProtobuf isEqual:]
  -[_MRTextEditingAttributesProtobuf copyWithZone:]
  -[_MRTextEditingAttributesProtobuf .cxx_destruct]
  -[_MRTextEditingAttributesProtobuf dictionaryRepresentation]
  -[_MRTextEditingAttributesProtobuf title]
  -[_MRTextEditingAttributesProtobuf setTitle:]
  -[_MRTextEditingAttributesProtobuf writeTo:]
  -[_MRTextEditingAttributesProtobuf mergeFrom:]
  -[_MRTextEditingAttributesProtobuf readFrom:]
  -[_MRTextEditingAttributesProtobuf copyTo:]
  -[_MRTextEditingAttributesProtobuf hasTitle]
  -[_MRTextEditingAttributesProtobuf prompt]
  -[_MRTextEditingAttributesProtobuf setPrompt:]
  -[_MRTextEditingAttributesProtobuf setInputTraits:]
  -[_MRTextEditingAttributesProtobuf hasPrompt]
  -[_MRTextEditingAttributesProtobuf hasInputTraits]
  -[_MRTextEditingAttributesProtobuf inputTraits]


_MRClientUpdatesConfigurationProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasNowPlayingUpdates
 @property  BOOL nowPlayingUpdates
 @property  BOOL hasArtworkUpdates
 @property  BOOL artworkUpdates
 @property  BOOL hasVolumeUpdates
 @property  BOOL volumeUpdates
 @property  BOOL hasKeyboardUpdates
 @property  BOOL keyboardUpdates
 @property  BOOL hasOutputDeviceUpdates
 @property  BOOL outputDeviceUpdates

  // instance methods
  -[_MRClientUpdatesConfigurationProtobuf isEqual:]
  -[_MRClientUpdatesConfigurationProtobuf copyWithZone:]
  -[_MRClientUpdatesConfigurationProtobuf dictionaryRepresentation]
  -[_MRClientUpdatesConfigurationProtobuf writeTo:]
  -[_MRClientUpdatesConfigurationProtobuf mergeFrom:]
  -[_MRClientUpdatesConfigurationProtobuf readFrom:]
  -[_MRClientUpdatesConfigurationProtobuf copyTo:]
  -[_MRClientUpdatesConfigurationProtobuf setNowPlayingUpdates:]
  -[_MRClientUpdatesConfigurationProtobuf setArtworkUpdates:]
  -[_MRClientUpdatesConfigurationProtobuf setVolumeUpdates:]
  -[_MRClientUpdatesConfigurationProtobuf setKeyboardUpdates:]
  -[_MRClientUpdatesConfigurationProtobuf setOutputDeviceUpdates:]
  -[_MRClientUpdatesConfigurationProtobuf nowPlayingUpdates]
  -[_MRClientUpdatesConfigurationProtobuf artworkUpdates]
  -[_MRClientUpdatesConfigurationProtobuf volumeUpdates]
  -[_MRClientUpdatesConfigurationProtobuf keyboardUpdates]
  -[_MRClientUpdatesConfigurationProtobuf outputDeviceUpdates]
  -[_MRClientUpdatesConfigurationProtobuf setHasNowPlayingUpdates:]
  -[_MRClientUpdatesConfigurationProtobuf hasNowPlayingUpdates]
  -[_MRClientUpdatesConfigurationProtobuf setHasArtworkUpdates:]
  -[_MRClientUpdatesConfigurationProtobuf hasArtworkUpdates]
  -[_MRClientUpdatesConfigurationProtobuf setHasVolumeUpdates:]
  -[_MRClientUpdatesConfigurationProtobuf hasVolumeUpdates]
  -[_MRClientUpdatesConfigurationProtobuf setHasKeyboardUpdates:]
  -[_MRClientUpdatesConfigurationProtobuf hasKeyboardUpdates]
  -[_MRClientUpdatesConfigurationProtobuf setHasOutputDeviceUpdates:]
  -[_MRClientUpdatesConfigurationProtobuf hasOutputDeviceUpdates]


MRExternalDeviceMessageMetrics : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[MRExternalDeviceMessageMetrics dealloc]
  -[MRExternalDeviceMessageMetrics .cxx_destruct]
  -[MRExternalDeviceMessageMetrics initWithPath:]
  -[MRExternalDeviceMessageMetrics write]
  -[MRExternalDeviceMessageMetrics addMessage:data:]


MRExternalDeviceMessageMetricsEntry : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned long avg
 @property  unsigned long min
 @property  unsigned long max
 @property  unsigned long total
 @property  NSMutableArray *values

  // instance methods
  -[MRExternalDeviceMessageMetricsEntry init]
  -[MRExternalDeviceMessageMetricsEntry setValues:]
  -[MRExternalDeviceMessageMetricsEntry values]
  -[MRExternalDeviceMessageMetricsEntry .cxx_destruct]
  -[MRExternalDeviceMessageMetricsEntry setMax:]
  -[MRExternalDeviceMessageMetricsEntry max]
  -[MRExternalDeviceMessageMetricsEntry setMin:]
  -[MRExternalDeviceMessageMetricsEntry min]
  -[MRExternalDeviceMessageMetricsEntry total]
  -[MRExternalDeviceMessageMetricsEntry setTotal:]
  -[MRExternalDeviceMessageMetricsEntry updateWithValue:]
  -[MRExternalDeviceMessageMetricsEntry avg]
  -[MRExternalDeviceMessageMetricsEntry setAvg:]


_MRUpdateContentItemArtworkMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  NSMutableArray *contentItems
 @property  BOOL hasPlayerPath
 @property  _MRNowPlayingPlayerPathProtobuf *playerPath

  // class methods
  +[_MRUpdateContentItemArtworkMessageProtobuf contentItemsType]

  // instance methods
  -[_MRUpdateContentItemArtworkMessageProtobuf isEqual:]
  -[_MRUpdateContentItemArtworkMessageProtobuf copyWithZone:]
  -[_MRUpdateContentItemArtworkMessageProtobuf .cxx_destruct]
  -[_MRUpdateContentItemArtworkMessageProtobuf dictionaryRepresentation]
  -[_MRUpdateContentItemArtworkMessageProtobuf writeTo:]
  -[_MRUpdateContentItemArtworkMessageProtobuf mergeFrom:]
  -[_MRUpdateContentItemArtworkMessageProtobuf readFrom:]
  -[_MRUpdateContentItemArtworkMessageProtobuf copyTo:]
  -[_MRUpdateContentItemArtworkMessageProtobuf setPlayerPath:]
  -[_MRUpdateContentItemArtworkMessageProtobuf playerPath]
  -[_MRUpdateContentItemArtworkMessageProtobuf setContentItems:]
  -[_MRUpdateContentItemArtworkMessageProtobuf contentItems]
  -[_MRUpdateContentItemArtworkMessageProtobuf hasPlayerPath]
  -[_MRUpdateContentItemArtworkMessageProtobuf addContentItems:]
  -[_MRUpdateContentItemArtworkMessageProtobuf contentItemsCount]
  -[_MRUpdateContentItemArtworkMessageProtobuf clearContentItems]
  -[_MRUpdateContentItemArtworkMessageProtobuf contentItemsAtIndex:]


MRPromptForRouteAuthorizationMessage : MRProtocolMessage
 @property  MRAVOutputDevice *route
 @property  long long inputType

  // instance methods
  -[MRPromptForRouteAuthorizationMessage type]
  -[MRPromptForRouteAuthorizationMessage .cxx_destruct]
  -[MRPromptForRouteAuthorizationMessage route]
  -[MRPromptForRouteAuthorizationMessage inputType]
  -[MRPromptForRouteAuthorizationMessage initWithRoute:inputType:]


MRPromptForRouteAuthorizationResponseMessage : MRProtocolMessage
 @property  NSString *response

  // instance methods
  -[MRPromptForRouteAuthorizationResponseMessage type]
  -[MRPromptForRouteAuthorizationResponseMessage response]
  -[MRPromptForRouteAuthorizationResponseMessage initWithResponse:]


MRPresentRouteAuthorizationStatusMessage : MRProtocolMessage
 @property  MRAVOutputDevice *route
 @property  int status

  // instance methods
  -[MRPresentRouteAuthorizationStatusMessage type]
  -[MRPresentRouteAuthorizationStatusMessage .cxx_destruct]
  -[MRPresentRouteAuthorizationStatusMessage status]
  -[MRPresentRouteAuthorizationStatusMessage route]
  -[MRPresentRouteAuthorizationStatusMessage initWithRoute:status:]


MRSendVirtualTouchEventMessage : MRProtocolMessage
 @property  {_MRHIDTouchEvent=(_MRHIDPoint={?=ff}[2f])IQI} event
 @property  unsigned long virtualDeviceID

  // instance methods
  -[MRSendVirtualTouchEventMessage type]
  -[MRSendVirtualTouchEventMessage priority]
  -[MRSendVirtualTouchEventMessage event]
  -[MRSendVirtualTouchEventMessage virtualDeviceID]
  -[MRSendVirtualTouchEventMessage initWithTouchEvent:virtualDeviceID:]


MRSendPackedVirtualTouchEventMessage : MRProtocolMessage
 @property  {_MRHIDTouchEvent=(_MRHIDPoint={?=ff}[2f])IQI} event
 @property  unsigned long virtualDeviceID

  // instance methods
  -[MRSendPackedVirtualTouchEventMessage type]
  -[MRSendPackedVirtualTouchEventMessage priority]
  -[MRSendPackedVirtualTouchEventMessage event]
  -[MRSendPackedVirtualTouchEventMessage virtualDeviceID]
  -[MRSendPackedVirtualTouchEventMessage initWithTouchEvent:virtualDeviceID:]


_MRTransactionMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasName
 @property  unsigned long name
 @property  BOOL hasPackets
 @property  _MRTransactionPacketsProtobuf *packets
 @property  BOOL hasPlayerPath
 @property  _MRNowPlayingPlayerPathProtobuf *playerPath

  // instance methods
  -[_MRTransactionMessageProtobuf isEqual:]
  -[_MRTransactionMessageProtobuf name]
  -[_MRTransactionMessageProtobuf copyWithZone:]
  -[_MRTransactionMessageProtobuf .cxx_destruct]
  -[_MRTransactionMessageProtobuf setName:]
  -[_MRTransactionMessageProtobuf dictionaryRepresentation]
  -[_MRTransactionMessageProtobuf writeTo:]
  -[_MRTransactionMessageProtobuf mergeFrom:]
  -[_MRTransactionMessageProtobuf readFrom:]
  -[_MRTransactionMessageProtobuf copyTo:]
  -[_MRTransactionMessageProtobuf hasName]
  -[_MRTransactionMessageProtobuf setHasName:]
  -[_MRTransactionMessageProtobuf setPlayerPath:]
  -[_MRTransactionMessageProtobuf playerPath]
  -[_MRTransactionMessageProtobuf hasPlayerPath]
  -[_MRTransactionMessageProtobuf setPackets:]
  -[_MRTransactionMessageProtobuf packets]
  -[_MRTransactionMessageProtobuf hasPackets]


MRNowPlayingOriginClientRequests : NSObject /usr/lib/libSystem.B.dylib <MRNowPlayingClientState>
 @property  _MROriginProtobuf *origin
 @property  _MRNowPlayingPlayerPathProtobuf *playerPath
 @property  _MRDeviceInfoMessageProtobuf *deviceInfo
 @property  NSNumber *volumeCapabilities
 @property  NSNumber *volume

  // instance methods
  -[MRNowPlayingOriginClientRequests .cxx_destruct]
  -[MRNowPlayingOriginClientRequests origin]
  -[MRNowPlayingOriginClientRequests volume]
  -[MRNowPlayingOriginClientRequests setVolume:]
  -[MRNowPlayingOriginClientRequests removeClient:]
  -[MRNowPlayingOriginClientRequests deviceInfo]
  -[MRNowPlayingOriginClientRequests setDeviceInfo:]
  -[MRNowPlayingOriginClientRequests initWithOrigin:]
  -[MRNowPlayingOriginClientRequests playerPath]
  -[MRNowPlayingOriginClientRequests volumeCapabilities]
  -[MRNowPlayingOriginClientRequests setVolumeCapabilities:]
  -[MRNowPlayingOriginClientRequests restoreNowPlayingClientState]
  -[MRNowPlayingOriginClientRequests nowPlayingClients]
  -[MRNowPlayingOriginClientRequests nowPlayingClientRequestsForPlayerPath:]
  -[MRNowPlayingOriginClientRequests existingNowPlayingClientRequestsForPlayerPath:]
  -[MRNowPlayingOriginClientRequests setTransactionCallback:forName:]
  -[MRNowPlayingOriginClientRequests transactionCallbackForName:]
  -[MRNowPlayingOriginClientRequests handleDeviceInfoRequestWithCompletion:]
  -[MRNowPlayingOriginClientRequests handleVolumeRequestWithCompletion:]
  -[MRNowPlayingOriginClientRequests handleVolumeCapabilitiesRequestWithCompletion:]


MRNowPlayingClientRequests : NSObject /usr/lib/libSystem.B.dylib <MRNowPlayingClientState>
 @property  _MRNowPlayingClientProtobuf *client
 @property  NSArray *nowPlayingClients

  // instance methods
  -[MRNowPlayingClientRequests .cxx_destruct]
  -[MRNowPlayingClientRequests client]
  -[MRNowPlayingClientRequests initWithClient:]
  -[MRNowPlayingClientRequests restoreNowPlayingClientState]
  -[MRNowPlayingClientRequests nowPlayingClients]
  -[MRNowPlayingClientRequests playerClients]
  -[MRNowPlayingClientRequests nowPlayingPlayerClientRequestsForPlayerPath:]
  -[MRNowPlayingClientRequests existingNowPlayingPlayerClientRequestsForPlayerPath:]
  -[MRNowPlayingClientRequests removePlayer:]


_MRGameControllerDigitizerProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasX
 @property  double x
 @property  BOOL hasY
 @property  double y
 @property  BOOL hasTouchDown
 @property  BOOL touchDown
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp

  // instance methods
  -[_MRGameControllerDigitizerProtobuf isEqual:]
  -[_MRGameControllerDigitizerProtobuf copyWithZone:]
  -[_MRGameControllerDigitizerProtobuf dictionaryRepresentation]
  -[_MRGameControllerDigitizerProtobuf timestamp]
  -[_MRGameControllerDigitizerProtobuf hasTimestamp]
  -[_MRGameControllerDigitizerProtobuf setTimestamp:]
  -[_MRGameControllerDigitizerProtobuf writeTo:]
  -[_MRGameControllerDigitizerProtobuf mergeFrom:]
  -[_MRGameControllerDigitizerProtobuf readFrom:]
  -[_MRGameControllerDigitizerProtobuf copyTo:]
  -[_MRGameControllerDigitizerProtobuf x]
  -[_MRGameControllerDigitizerProtobuf y]
  -[_MRGameControllerDigitizerProtobuf setX:]
  -[_MRGameControllerDigitizerProtobuf setY:]
  -[_MRGameControllerDigitizerProtobuf touchDown]
  -[_MRGameControllerDigitizerProtobuf setTouchDown:]
  -[_MRGameControllerDigitizerProtobuf setHasTimestamp:]
  -[_MRGameControllerDigitizerProtobuf setHasX:]
  -[_MRGameControllerDigitizerProtobuf hasX]
  -[_MRGameControllerDigitizerProtobuf setHasY:]
  -[_MRGameControllerDigitizerProtobuf hasY]
  -[_MRGameControllerDigitizerProtobuf setHasTouchDown:]
  -[_MRGameControllerDigitizerProtobuf hasTouchDown]


_MRAVModifyOutputContextRequestProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasOutputContextType
 @property  int outputContextType
 @property  NSMutableArray *addingOutputDeviceUIDs
 @property  NSMutableArray *removingOutputDeviceUIDs
 @property  NSMutableArray *settingOutputDeviceUIDs

  // class methods
  +[_MRAVModifyOutputContextRequestProtobuf addingOutputDeviceUIDType]
  +[_MRAVModifyOutputContextRequestProtobuf removingOutputDeviceUIDType]
  +[_MRAVModifyOutputContextRequestProtobuf settingOutputDeviceUIDType]

  // instance methods
  -[_MRAVModifyOutputContextRequestProtobuf isEqual:]
  -[_MRAVModifyOutputContextRequestProtobuf copyWithZone:]
  -[_MRAVModifyOutputContextRequestProtobuf .cxx_destruct]
  -[_MRAVModifyOutputContextRequestProtobuf dictionaryRepresentation]
  -[_MRAVModifyOutputContextRequestProtobuf writeTo:]
  -[_MRAVModifyOutputContextRequestProtobuf mergeFrom:]
  -[_MRAVModifyOutputContextRequestProtobuf readFrom:]
  -[_MRAVModifyOutputContextRequestProtobuf copyTo:]
  -[_MRAVModifyOutputContextRequestProtobuf outputContextType]
  -[_MRAVModifyOutputContextRequestProtobuf setOutputContextType:]
  -[_MRAVModifyOutputContextRequestProtobuf setAddingOutputDeviceUIDs:]
  -[_MRAVModifyOutputContextRequestProtobuf setRemovingOutputDeviceUIDs:]
  -[_MRAVModifyOutputContextRequestProtobuf setSettingOutputDeviceUIDs:]
  -[_MRAVModifyOutputContextRequestProtobuf addingOutputDeviceUIDs]
  -[_MRAVModifyOutputContextRequestProtobuf removingOutputDeviceUIDs]
  -[_MRAVModifyOutputContextRequestProtobuf settingOutputDeviceUIDs]
  -[_MRAVModifyOutputContextRequestProtobuf addAddingOutputDeviceUID:]
  -[_MRAVModifyOutputContextRequestProtobuf addRemovingOutputDeviceUID:]
  -[_MRAVModifyOutputContextRequestProtobuf addSettingOutputDeviceUID:]
  -[_MRAVModifyOutputContextRequestProtobuf addingOutputDeviceUIDsCount]
  -[_MRAVModifyOutputContextRequestProtobuf clearAddingOutputDeviceUIDs]
  -[_MRAVModifyOutputContextRequestProtobuf addingOutputDeviceUIDAtIndex:]
  -[_MRAVModifyOutputContextRequestProtobuf removingOutputDeviceUIDsCount]
  -[_MRAVModifyOutputContextRequestProtobuf clearRemovingOutputDeviceUIDs]
  -[_MRAVModifyOutputContextRequestProtobuf removingOutputDeviceUIDAtIndex:]
  -[_MRAVModifyOutputContextRequestProtobuf settingOutputDeviceUIDsCount]
  -[_MRAVModifyOutputContextRequestProtobuf clearSettingOutputDeviceUIDs]
  -[_MRAVModifyOutputContextRequestProtobuf settingOutputDeviceUIDAtIndex:]
  -[_MRAVModifyOutputContextRequestProtobuf setHasOutputContextType:]
  -[_MRAVModifyOutputContextRequestProtobuf hasOutputContextType]
  -[_MRAVModifyOutputContextRequestProtobuf outputContextTypeAsString:]
  -[_MRAVModifyOutputContextRequestProtobuf StringAsOutputContextType:]


MRLegacySendHIDEventMessage : MRProtocolMessage
 @property  {_MRHIDButtonEvent=IIB} buttonEvent

  // instance methods
  -[MRLegacySendHIDEventMessage dealloc]
  -[MRLegacySendHIDEventMessage type]
  -[MRLegacySendHIDEventMessage initWithHIDEvent:]
  -[MRLegacySendHIDEventMessage buttonEvent]


MRCoreUtilsPairingSession : MRCryptoPairingSession
 @property  NSData *inputKey
 @property  NSMutableData *inputNonce
 @property  NSData *outputKey
 @property  NSMutableData *outputNonce
 @property  _MRDeviceInfoMessageProtobuf *pairedPeerDevice
 @property  NSArray *pairedPeerDevices
 @property  NSMutableDictionary *mediaRemotePairedDevices
 @property  NSString *peerIdentifier
 @property  unsigned long state
 @property  BOOL hasExchangedMessage
 @property  unsigned int pairingFlags

  // instance methods
  -[MRCoreUtilsPairingSession dealloc]
  -[MRCoreUtilsPairingSession isValid]
  -[MRCoreUtilsPairingSession open]
  -[MRCoreUtilsPairingSession close]
  -[MRCoreUtilsPairingSession .cxx_destruct]
  -[MRCoreUtilsPairingSession state]
  -[MRCoreUtilsPairingSession retry]
  -[MRCoreUtilsPairingSession peerIdentifier]
  -[MRCoreUtilsPairingSession isPaired]
  -[MRCoreUtilsPairingSession pairedDevices]
  -[MRCoreUtilsPairingSession outputKey]
  -[MRCoreUtilsPairingSession setOutputKey:]
  -[MRCoreUtilsPairingSession shouldAutoRetry]
  -[MRCoreUtilsPairingSession setPairingFlags:]
  -[MRCoreUtilsPairingSession initWithRole:device:]
  -[MRCoreUtilsPairingSession removePeer]
  -[MRCoreUtilsPairingSession updatePeer]
  -[MRCoreUtilsPairingSession pairedPeerDevices]
  -[MRCoreUtilsPairingSession mediaRemotePairedDevices]
  -[MRCoreUtilsPairingSession initializePairingSession:]
  -[MRCoreUtilsPairingSession shouldAutoRetryPairingExchange:]
  -[MRCoreUtilsPairingSession addPeer]
  -[MRCoreUtilsPairingSession pairedPeerDevice]
  -[MRCoreUtilsPairingSession handlePairingExchangeData:completion:]
  -[MRCoreUtilsPairingSession handlePairingFailureWithStatus:]
  -[MRCoreUtilsPairingSession encryptData:withError:]
  -[MRCoreUtilsPairingSession decryptData:withError:]
  -[MRCoreUtilsPairingSession deleteIdentityWithError:]
  -[MRCoreUtilsPairingSession hasExchangedMessage]
  -[MRCoreUtilsPairingSession openInState:]
  -[MRCoreUtilsPairingSession _handlePairingFailureWithError:]
  -[MRCoreUtilsPairingSession setInputKey:]
  -[MRCoreUtilsPairingSession setInputNonce:]
  -[MRCoreUtilsPairingSession setOutputNonce:]
  -[MRCoreUtilsPairingSession _onQueuePerformPairingExchangeWithInputData:error:]
  -[MRCoreUtilsPairingSession _onQueueInitializePairingSessionWithState:]
  -[MRCoreUtilsPairingSession extendedPeerInfo]
  -[MRCoreUtilsPairingSession _createPeerDeviceFromPeer:]
  -[MRCoreUtilsPairingSession _createDeviceFromPeer:]
  -[MRCoreUtilsPairingSession _delegateDidEnterPasscode:]
  -[MRCoreUtilsPairingSession _handlePairingCompleteWithError:]
  -[MRCoreUtilsPairingSession _handleSetupExchangeComplete]
  -[MRCoreUtilsPairingSession _onQueueDeriveEncryptionKeys]
  -[MRCoreUtilsPairingSession _generateSetupCodeWithMaximumLength:]
  -[MRCoreUtilsPairingSession _displaySetupCode:]
  -[MRCoreUtilsPairingSession _hideSetupCode]
  -[MRCoreUtilsPairingSession _promptForSetupCodeWithDelay:]
  -[MRCoreUtilsPairingSession pairingFlags]
  -[MRCoreUtilsPairingSession inputKey]
  -[MRCoreUtilsPairingSession inputNonce]
  -[MRCoreUtilsPairingSession outputNonce]


MRCryptoPairingIdentity : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *identifier
 @property  NSData *publicKey
 @property  NSData *privateKey

  // instance methods
  -[MRCryptoPairingIdentity init]
  -[MRCryptoPairingIdentity .cxx_destruct]
  -[MRCryptoPairingIdentity identifier]
  -[MRCryptoPairingIdentity publicKey]
  -[MRCryptoPairingIdentity privateKey]
  -[MRCryptoPairingIdentity initWithIdentifier:publicKey:privateKey:]


MRVirtualVoiceInputDevice : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned int deviceID
 @property  MRVirtualVoiceInputDeviceDescriptor *descriptor
 @property  unsigned int recordingState
 @property  NSData *data

  // instance methods
  -[MRVirtualVoiceInputDevice initWithData:]
  -[MRVirtualVoiceInputDevice .cxx_destruct]
  -[MRVirtualVoiceInputDevice data]
  -[MRVirtualVoiceInputDevice deviceID]
  -[MRVirtualVoiceInputDevice descriptor]
  -[MRVirtualVoiceInputDevice setDescriptor:]
  -[MRVirtualVoiceInputDevice recordingState]
  -[MRVirtualVoiceInputDevice setRecordingState:]
  -[MRVirtualVoiceInputDevice initWithDeviceID:]


_MRSetArtworkMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasJpegData
 @property  NSData *jpegData

  // instance methods
  -[_MRSetArtworkMessageProtobuf isEqual:]
  -[_MRSetArtworkMessageProtobuf copyWithZone:]
  -[_MRSetArtworkMessageProtobuf .cxx_destruct]
  -[_MRSetArtworkMessageProtobuf dictionaryRepresentation]
  -[_MRSetArtworkMessageProtobuf writeTo:]
  -[_MRSetArtworkMessageProtobuf mergeFrom:]
  -[_MRSetArtworkMessageProtobuf readFrom:]
  -[_MRSetArtworkMessageProtobuf copyTo:]
  -[_MRSetArtworkMessageProtobuf setJpegData:]
  -[_MRSetArtworkMessageProtobuf hasJpegData]
  -[_MRSetArtworkMessageProtobuf jpegData]


MRXPCConnection : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_xpc_object> *connection
 @property  @? messageHandler
 @property  @? invalidationHandler
 @property  int pid

  // instance methods
  -[MRXPCConnection dealloc]
  -[MRXPCConnection .cxx_destruct]
  -[MRXPCConnection setInvalidationHandler:]
  -[MRXPCConnection invalidationHandler]
  -[MRXPCConnection connection]
  -[MRXPCConnection pid]
  -[MRXPCConnection initWithConnection:queue:]
  -[MRXPCConnection setMessageHandler:]
  -[MRXPCConnection messageHandler]
  -[MRXPCConnection sendMessage:queue:reply:]
  -[MRXPCConnection sendSyncMessage:error:]
  -[MRXPCConnection _registerCallbacks]
  -[MRXPCConnection addCustomXPCHandler:forKey:]
  -[MRXPCConnection removeCustomXPCHandler:]
  -[MRXPCConnection sendMessageWithType:queue:reply:]


MRAudioDataBlock : NSObject /usr/lib/libSystem.B.dylib <NSMutableCopying>
 @property  MRAudioBuffer *buffer
 @property  {?=dd} time
 @property  float gain
 @property  _MRAudioDataBlockProtobuf *protobuf
 @property  NSData *data

  // instance methods
  -[MRAudioDataBlock copyWithZone:]
  -[MRAudioDataBlock mutableCopyWithZone:]
  -[MRAudioDataBlock initWithData:]
  -[MRAudioDataBlock .cxx_destruct]
  -[MRAudioDataBlock data]
  -[MRAudioDataBlock time]
  -[MRAudioDataBlock buffer]
  -[MRAudioDataBlock gain]
  -[MRAudioDataBlock protobuf]
  -[MRAudioDataBlock initWithProtobuf:]
  -[MRAudioDataBlock _copyWithZone:usingConcreteClass:]
  -[MRAudioDataBlock _parseBuffer:]
  -[MRAudioDataBlock _parseTimestamp:]
  -[MRAudioDataBlock _parseGain:]


MRMutableAudioDataBlock : MRAudioDataBlock
 @property  MRAudioBuffer *buffer
 @property  {?=dd} time
 @property  float gain

  // instance methods
  -[MRMutableAudioDataBlock setBuffer:]
  -[MRMutableAudioDataBlock setTime:]
  -[MRMutableAudioDataBlock setGain:]


MRExternalDevicePairingSession : MRCryptoPairingSession
 @property  MRCoreUtilsPairingSession *pairingSession
 @property  MRCryptoPairingSessionBlockDelegate *pairingDelegate
 @property  BOOL hasExchangedMessage
 @property  BOOL usingSystemPairing
 @property  unsigned long state

  // instance methods
  -[MRExternalDevicePairingSession isValid]
  -[MRExternalDevicePairingSession open]
  -[MRExternalDevicePairingSession close]
  -[MRExternalDevicePairingSession setDelegate:]
  -[MRExternalDevicePairingSession .cxx_destruct]
  -[MRExternalDevicePairingSession state]
  -[MRExternalDevicePairingSession initWithDevice:]
  -[MRExternalDevicePairingSession isPaired]
  -[MRExternalDevicePairingSession pairedDevices]
  -[MRExternalDevicePairingSession removePeer]
  -[MRExternalDevicePairingSession updatePeer]
  -[MRExternalDevicePairingSession isUsingSystemPairing]
  -[MRExternalDevicePairingSession handlePairingExchangeData:completion:]
  -[MRExternalDevicePairingSession handlePairingFailureWithStatus:]
  -[MRExternalDevicePairingSession encryptData:withError:]
  -[MRExternalDevicePairingSession decryptData:withError:]
  -[MRExternalDevicePairingSession deleteIdentityWithError:]
  -[MRExternalDevicePairingSession hasExchangedMessage]
  -[MRExternalDevicePairingSession setPairingDelegate:]
  -[MRExternalDevicePairingSession _useSystemPairing]
  -[MRExternalDevicePairingSession _openSecuritySessionInState:useSystemPairing:completion:]
  -[MRExternalDevicePairingSession setPairingSession:]
  -[MRExternalDevicePairingSession pairingSession]
  -[MRExternalDevicePairingSession pairingDelegate]


MRMediaRemoteServiceClient : NSObject /usr/lib/libSystem.B.dylib
 @property  MRMediaRemoteService *service
 @property  MRNotificationClient *notificationClient
 @property  NSArray *registeredOrigins
 @property  NSObject<OS_dispatch_queue> *workerQueue
 @property  NSObject<OS_dispatch_queue> *playbackQueueDispatchQueue
 @property  _MRNowPlayingPlayerPathProtobuf *activePlayerPath

  // class methods
  +[MRMediaRemoteServiceClient sharedServiceClient]

  // instance methods
  -[MRMediaRemoteServiceClient init]
  -[MRMediaRemoteServiceClient dealloc]
  -[MRMediaRemoteServiceClient .cxx_destruct]
  -[MRMediaRemoteServiceClient service]
  -[MRMediaRemoteServiceClient _initializeConnection]
  -[MRMediaRemoteServiceClient activePlayerPath]
  -[MRMediaRemoteServiceClient workerQueue]
  -[MRMediaRemoteServiceClient notificationClient]
  -[MRMediaRemoteServiceClient processPlayerPathInvalidationHandlersWithInvalidOrigin:]
  -[MRMediaRemoteServiceClient _registerCallbacks]
  -[MRMediaRemoteServiceClient setPlaybackQueueDispatchQueue:]
  -[MRMediaRemoteServiceClient _invalidateConnectionWithTimer:]
  -[MRMediaRemoteServiceClient _resumeConnection]
  -[MRMediaRemoteServiceClient processPlayerPathInvalidationHandlersWithBlock:]
  -[MRMediaRemoteServiceClient _onQueue_setActivePlayerPath:]
  -[MRMediaRemoteServiceClient _onQueue_processPlayerPathInvalidationHandlersWithBlock:]
  -[MRMediaRemoteServiceClient _callInvalidationHandler:]
  -[MRMediaRemoteServiceClient registeredOrigins]
  -[MRMediaRemoteServiceClient setActivePlayerPath:]
  -[MRMediaRemoteServiceClient registerOrigin:withDeviceInfo:completion:]
  -[MRMediaRemoteServiceClient unregisterOrigin:withCompletion:]
  -[MRMediaRemoteServiceClient unregisterAllOriginsWithCompletion:]
  -[MRMediaRemoteServiceClient isOriginRegistered:]
  -[MRMediaRemoteServiceClient fetchPickableRoutesWithCategory:completion:]
  -[MRMediaRemoteServiceClient addPlayerPathInvalidationHandler:]
  -[MRMediaRemoteServiceClient removeInvalidationHandler:]
  -[MRMediaRemoteServiceClient _processPlayerPathInvalidationHandlersWithBlock:]
  -[MRMediaRemoteServiceClient playbackQueueDispatchQueue]


_MRLyricsTokenProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasIdentifier
 @property  NSString *identifier
 @property  BOOL hasUserData
 @property  NSData *userData

  // instance methods
  -[_MRLyricsTokenProtobuf isEqual:]
  -[_MRLyricsTokenProtobuf copyWithZone:]
  -[_MRLyricsTokenProtobuf .cxx_destruct]
  -[_MRLyricsTokenProtobuf identifier]
  -[_MRLyricsTokenProtobuf setIdentifier:]
  -[_MRLyricsTokenProtobuf dictionaryRepresentation]
  -[_MRLyricsTokenProtobuf writeTo:]
  -[_MRLyricsTokenProtobuf mergeFrom:]
  -[_MRLyricsTokenProtobuf readFrom:]
  -[_MRLyricsTokenProtobuf copyTo:]
  -[_MRLyricsTokenProtobuf userData]
  -[_MRLyricsTokenProtobuf setUserData:]
  -[_MRLyricsTokenProtobuf hasIdentifier]
  -[_MRLyricsTokenProtobuf hasUserData]


MRSendButtonEventMessage : MRProtocolMessage
 @property  {_MRHIDButtonEvent=IIB} buttonEvent

  // instance methods
  -[MRSendButtonEventMessage type]
  -[MRSendButtonEventMessage initWithButtonEvent:]
  -[MRSendButtonEventMessage buttonEvent]


MRAVDistantEndpoint : MRAVEndpoint <NSSecureCoding>
 @property  NSObject<OS_dispatch_queue> *externalDeviceQueue
 @property  NSArray *distantOutputDevices
 @property  NSArray *distantPersonalOutputDevices
 @property  MRAVDistantOutputDevice *distantGroupLeader
 @property  MRDistantExternalDevice *distantExternalDevice
 @property  NSXPCListenerEndpoint *externalDeviceListenerEndpoint

  // class methods
  +[MRAVDistantEndpoint supportsSecureCoding]

  // instance methods
  -[MRAVDistantEndpoint encodeWithCoder:]
  -[MRAVDistantEndpoint initWithCoder:]
  -[MRAVDistantEndpoint .cxx_destruct]
  -[MRAVDistantEndpoint localizedName]
  -[MRAVDistantEndpoint uniqueIdentifier]
  -[MRAVDistantEndpoint connectionType]
  -[MRAVDistantEndpoint setUniqueIdentifier:]
  -[MRAVDistantEndpoint initWithDescriptor:]
  -[MRAVDistantEndpoint setLocalizedName:]
  -[MRAVDistantEndpoint outputDevices]
  -[MRAVDistantEndpoint externalDevice]
  -[MRAVDistantEndpoint isProxyGroupPlayer]
  -[MRAVDistantEndpoint canModifyGroupMembership]
  -[MRAVDistantEndpoint personalOutputDevices]
  -[MRAVDistantEndpoint setDistantExternalDevice:]
  -[MRAVDistantEndpoint designatedGroupLeader]
  -[MRAVDistantEndpoint distantOutputDevices]
  -[MRAVDistantEndpoint setDistantOutputDevices:]
  -[MRAVDistantEndpoint externalDeviceListenerEndpoint]
  -[MRAVDistantEndpoint setExternalDeviceListenerEndpoint:]
  -[MRAVDistantEndpoint externalDeviceQueue]
  -[MRAVDistantEndpoint setExternalDeviceQueue:]
  -[MRAVDistantEndpoint distantPersonalOutputDevices]
  -[MRAVDistantEndpoint setDistantPersonalOutputDevices:]
  -[MRAVDistantEndpoint distantGroupLeader]
  -[MRAVDistantEndpoint setDistantGroupLeader:]
  -[MRAVDistantEndpoint distantExternalDevice]


_MRSetHiliteModeMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasHiliteMode
 @property  BOOL hiliteMode

  // instance methods
  -[_MRSetHiliteModeMessageProtobuf isEqual:]
  -[_MRSetHiliteModeMessageProtobuf copyWithZone:]
  -[_MRSetHiliteModeMessageProtobuf dictionaryRepresentation]
  -[_MRSetHiliteModeMessageProtobuf writeTo:]
  -[_MRSetHiliteModeMessageProtobuf mergeFrom:]
  -[_MRSetHiliteModeMessageProtobuf readFrom:]
  -[_MRSetHiliteModeMessageProtobuf copyTo:]
  -[_MRSetHiliteModeMessageProtobuf setHiliteMode:]
  -[_MRSetHiliteModeMessageProtobuf hiliteMode]
  -[_MRSetHiliteModeMessageProtobuf setHasHiliteMode:]
  -[_MRSetHiliteModeMessageProtobuf hasHiliteMode]


_MRCommandInfoProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasCommand
 @property  int command
 @property  BOOL hasEnabled
 @property  BOOL enabled
 @property  BOOL hasActive
 @property  BOOL active
 @property  unsigned long preferredIntervalsCount
 @property  ^d preferredIntervals
 @property  BOOL hasLocalizedTitle
 @property  NSString *localizedTitle
 @property  BOOL hasLocalizedShortTitle
 @property  NSString *localizedShortTitle
 @property  BOOL hasMinimumRating
 @property  float minimumRating
 @property  BOOL hasMaximumRating
 @property  float maximumRating
 @property  unsigned long supportedRatesCount
 @property  ^f supportedRates
 @property  BOOL hasRepeatMode
 @property  int repeatMode
 @property  BOOL hasShuffleMode
 @property  int shuffleMode
 @property  BOOL hasPresentationStyle
 @property  int presentationStyle
 @property  BOOL hasSkipInterval
 @property  int skipInterval
 @property  BOOL hasNumAvailableSkips
 @property  int numAvailableSkips
 @property  BOOL hasSkipFrequency
 @property  int skipFrequency
 @property  BOOL hasCanScrub
 @property  int canScrub
 @property  unsigned long supportedPlaybackQueueTypesCount
 @property  ^i supportedPlaybackQueueTypes
 @property  NSMutableArray *supportedCustomQueueIdentifiers
 @property  unsigned long supportedInsertionPositionsCount
 @property  ^i supportedInsertionPositions
 @property  BOOL hasSupportsSharedQueue
 @property  BOOL supportsSharedQueue
 @property  BOOL hasUpNextItemCount
 @property  int upNextItemCount
 @property  BOOL hasPreferredPlaybackRate
 @property  float preferredPlaybackRate
 @property  NSMutableArray *supportedPlaybackSessionTypes
 @property  NSMutableArray *currentPlaybackSessionTypes
 @property  BOOL hasPlaybackSessionIdentifier
 @property  NSString *playbackSessionIdentifier

  // class methods
  +[_MRCommandInfoProtobuf supportedCustomQueueIdentifierType]
  +[_MRCommandInfoProtobuf supportedPlaybackSessionTypesType]
  +[_MRCommandInfoProtobuf currentPlaybackSessionTypesType]

  // instance methods
  -[_MRCommandInfoProtobuf dealloc]
  -[_MRCommandInfoProtobuf isEqual:]
  -[_MRCommandInfoProtobuf copyWithZone:]
  -[_MRCommandInfoProtobuf enabled]
  -[_MRCommandInfoProtobuf setEnabled:]
  -[_MRCommandInfoProtobuf .cxx_destruct]
  -[_MRCommandInfoProtobuf dictionaryRepresentation]
  -[_MRCommandInfoProtobuf setActive:]
  -[_MRCommandInfoProtobuf maximumRating]
  -[_MRCommandInfoProtobuf writeTo:]
  -[_MRCommandInfoProtobuf mergeFrom:]
  -[_MRCommandInfoProtobuf readFrom:]
  -[_MRCommandInfoProtobuf copyTo:]
  -[_MRCommandInfoProtobuf localizedTitle]
  -[_MRCommandInfoProtobuf setLocalizedTitle:]
  -[_MRCommandInfoProtobuf active]
  -[_MRCommandInfoProtobuf setPresentationStyle:]
  -[_MRCommandInfoProtobuf presentationStyle]
  -[_MRCommandInfoProtobuf setCommand:]
  -[_MRCommandInfoProtobuf setHasActive:]
  -[_MRCommandInfoProtobuf hasActive]
  -[_MRCommandInfoProtobuf command]
  -[_MRCommandInfoProtobuf setHasCommand:]
  -[_MRCommandInfoProtobuf hasCommand]
  -[_MRCommandInfoProtobuf commandAsString:]
  -[_MRCommandInfoProtobuf StringAsCommand:]
  -[_MRCommandInfoProtobuf hasLocalizedTitle]
  -[_MRCommandInfoProtobuf setHasEnabled:]
  -[_MRCommandInfoProtobuf hasEnabled]
  -[_MRCommandInfoProtobuf localizedShortTitle]
  -[_MRCommandInfoProtobuf repeatMode]
  -[_MRCommandInfoProtobuf setRepeatMode:]
  -[_MRCommandInfoProtobuf supportedInsertionPositions]
  -[_MRCommandInfoProtobuf playbackSessionIdentifier]
  -[_MRCommandInfoProtobuf shuffleMode]
  -[_MRCommandInfoProtobuf setShuffleMode:]
  -[_MRCommandInfoProtobuf preferredPlaybackRate]
  -[_MRCommandInfoProtobuf preferredIntervals]
  -[_MRCommandInfoProtobuf setLocalizedShortTitle:]
  -[_MRCommandInfoProtobuf setMinimumRating:]
  -[_MRCommandInfoProtobuf setMaximumRating:]
  -[_MRCommandInfoProtobuf minimumRating]
  -[_MRCommandInfoProtobuf setUpNextItemCount:]
  -[_MRCommandInfoProtobuf upNextItemCount]
  -[_MRCommandInfoProtobuf setHasRepeatMode:]
  -[_MRCommandInfoProtobuf hasRepeatMode]
  -[_MRCommandInfoProtobuf repeatModeAsString:]
  -[_MRCommandInfoProtobuf StringAsRepeatMode:]
  -[_MRCommandInfoProtobuf setHasShuffleMode:]
  -[_MRCommandInfoProtobuf hasShuffleMode]
  -[_MRCommandInfoProtobuf shuffleModeAsString:]
  -[_MRCommandInfoProtobuf StringAsShuffleMode:]
  -[_MRCommandInfoProtobuf addSupportedCustomQueueIdentifier:]
  -[_MRCommandInfoProtobuf addSupportedPlaybackSessionTypes:]
  -[_MRCommandInfoProtobuf addCurrentPlaybackSessionTypes:]
  -[_MRCommandInfoProtobuf preferredIntervalsCount]
  -[_MRCommandInfoProtobuf clearPreferredIntervals]
  -[_MRCommandInfoProtobuf preferredIntervalAtIndex:]
  -[_MRCommandInfoProtobuf addPreferredInterval:]
  -[_MRCommandInfoProtobuf supportedRatesCount]
  -[_MRCommandInfoProtobuf clearSupportedRates]
  -[_MRCommandInfoProtobuf supportedRateAtIndex:]
  -[_MRCommandInfoProtobuf addSupportedRate:]
  -[_MRCommandInfoProtobuf supportedPlaybackQueueTypesCount]
  -[_MRCommandInfoProtobuf clearSupportedPlaybackQueueTypes]
  -[_MRCommandInfoProtobuf supportedPlaybackQueueTypesAtIndex:]
  -[_MRCommandInfoProtobuf addSupportedPlaybackQueueTypes:]
  -[_MRCommandInfoProtobuf supportedCustomQueueIdentifiersCount]
  -[_MRCommandInfoProtobuf clearSupportedCustomQueueIdentifiers]
  -[_MRCommandInfoProtobuf supportedCustomQueueIdentifierAtIndex:]
  -[_MRCommandInfoProtobuf supportedInsertionPositionsCount]
  -[_MRCommandInfoProtobuf clearSupportedInsertionPositions]
  -[_MRCommandInfoProtobuf supportedInsertionPositionsAtIndex:]
  -[_MRCommandInfoProtobuf addSupportedInsertionPositions:]
  -[_MRCommandInfoProtobuf supportedPlaybackSessionTypesCount]
  -[_MRCommandInfoProtobuf clearSupportedPlaybackSessionTypes]
  -[_MRCommandInfoProtobuf supportedPlaybackSessionTypesAtIndex:]
  -[_MRCommandInfoProtobuf currentPlaybackSessionTypesCount]
  -[_MRCommandInfoProtobuf clearCurrentPlaybackSessionTypes]
  -[_MRCommandInfoProtobuf currentPlaybackSessionTypesAtIndex:]
  -[_MRCommandInfoProtobuf setPlaybackSessionIdentifier:]
  -[_MRCommandInfoProtobuf setPreferredIntervals:count:]
  -[_MRCommandInfoProtobuf hasLocalizedShortTitle]
  -[_MRCommandInfoProtobuf setHasMinimumRating:]
  -[_MRCommandInfoProtobuf hasMinimumRating]
  -[_MRCommandInfoProtobuf setHasMaximumRating:]
  -[_MRCommandInfoProtobuf hasMaximumRating]
  -[_MRCommandInfoProtobuf supportedRates]
  -[_MRCommandInfoProtobuf setSupportedRates:count:]
  -[_MRCommandInfoProtobuf setHasPresentationStyle:]
  -[_MRCommandInfoProtobuf hasPresentationStyle]
  -[_MRCommandInfoProtobuf setSkipInterval:]
  -[_MRCommandInfoProtobuf setHasSkipInterval:]
  -[_MRCommandInfoProtobuf hasSkipInterval]
  -[_MRCommandInfoProtobuf setNumAvailableSkips:]
  -[_MRCommandInfoProtobuf setHasNumAvailableSkips:]
  -[_MRCommandInfoProtobuf hasNumAvailableSkips]
  -[_MRCommandInfoProtobuf setSkipFrequency:]
  -[_MRCommandInfoProtobuf setHasSkipFrequency:]
  -[_MRCommandInfoProtobuf hasSkipFrequency]
  -[_MRCommandInfoProtobuf setCanScrub:]
  -[_MRCommandInfoProtobuf setHasCanScrub:]
  -[_MRCommandInfoProtobuf hasCanScrub]
  -[_MRCommandInfoProtobuf supportedPlaybackQueueTypes]
  -[_MRCommandInfoProtobuf setSupportedPlaybackQueueTypes:count:]
  -[_MRCommandInfoProtobuf setSupportedInsertionPositions:count:]
  -[_MRCommandInfoProtobuf setSupportsSharedQueue:]
  -[_MRCommandInfoProtobuf setHasSupportsSharedQueue:]
  -[_MRCommandInfoProtobuf hasSupportsSharedQueue]
  -[_MRCommandInfoProtobuf setHasUpNextItemCount:]
  -[_MRCommandInfoProtobuf hasUpNextItemCount]
  -[_MRCommandInfoProtobuf setPreferredPlaybackRate:]
  -[_MRCommandInfoProtobuf setHasPreferredPlaybackRate:]
  -[_MRCommandInfoProtobuf hasPreferredPlaybackRate]
  -[_MRCommandInfoProtobuf hasPlaybackSessionIdentifier]
  -[_MRCommandInfoProtobuf skipInterval]
  -[_MRCommandInfoProtobuf numAvailableSkips]
  -[_MRCommandInfoProtobuf skipFrequency]
  -[_MRCommandInfoProtobuf canScrub]
  -[_MRCommandInfoProtobuf supportedCustomQueueIdentifiers]
  -[_MRCommandInfoProtobuf setSupportedCustomQueueIdentifiers:]
  -[_MRCommandInfoProtobuf supportsSharedQueue]
  -[_MRCommandInfoProtobuf supportedPlaybackSessionTypes]
  -[_MRCommandInfoProtobuf setSupportedPlaybackSessionTypes:]
  -[_MRCommandInfoProtobuf currentPlaybackSessionTypes]
  -[_MRCommandInfoProtobuf setCurrentPlaybackSessionTypes:]


_MRSendButtonEventMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasUsagePage
 @property  unsigned int usagePage
 @property  BOOL hasUsage
 @property  unsigned int usage
 @property  BOOL hasButtonDown
 @property  BOOL buttonDown

  // instance methods
  -[_MRSendButtonEventMessageProtobuf isEqual:]
  -[_MRSendButtonEventMessageProtobuf copyWithZone:]
  -[_MRSendButtonEventMessageProtobuf dictionaryRepresentation]
  -[_MRSendButtonEventMessageProtobuf writeTo:]
  -[_MRSendButtonEventMessageProtobuf setUsage:]
  -[_MRSendButtonEventMessageProtobuf usage]
  -[_MRSendButtonEventMessageProtobuf mergeFrom:]
  -[_MRSendButtonEventMessageProtobuf readFrom:]
  -[_MRSendButtonEventMessageProtobuf copyTo:]
  -[_MRSendButtonEventMessageProtobuf setUsagePage:]
  -[_MRSendButtonEventMessageProtobuf usagePage]
  -[_MRSendButtonEventMessageProtobuf setButtonDown:]
  -[_MRSendButtonEventMessageProtobuf buttonDown]
  -[_MRSendButtonEventMessageProtobuf setHasUsagePage:]
  -[_MRSendButtonEventMessageProtobuf hasUsagePage]
  -[_MRSendButtonEventMessageProtobuf setHasUsage:]
  -[_MRSendButtonEventMessageProtobuf hasUsage]
  -[_MRSendButtonEventMessageProtobuf setHasButtonDown:]
  -[_MRSendButtonEventMessageProtobuf hasButtonDown]


MRGetRemoteTextInputSessionMessage : MRProtocolMessage
  // instance methods
  -[MRGetRemoteTextInputSessionMessage init]
  -[MRGetRemoteTextInputSessionMessage type]


_MROriginProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL isLocal
 @property  BOOL hasType
 @property  int type
 @property  BOOL hasDisplayName
 @property  NSString *displayName
 @property  BOOL hasIdentifier
 @property  int identifier
 @property  BOOL hasDeviceInfoDeprecated
 @property  _MRDeviceInfoMessageProtobuf *deviceInfoDeprecated

  // class methods
  +[_MROriginProtobuf localOrigin]

  // instance methods
  -[_MROriginProtobuf isEqual:]
  -[_MROriginProtobuf copyWithZone:]
  -[_MROriginProtobuf type]
  -[_MROriginProtobuf setType:]
  -[_MROriginProtobuf .cxx_destruct]
  -[_MROriginProtobuf identifier]
  -[_MROriginProtobuf setIdentifier:]
  -[_MROriginProtobuf dictionaryRepresentation]
  -[_MROriginProtobuf displayName]
  -[_MROriginProtobuf writeTo:]
  -[_MROriginProtobuf mergeFrom:]
  -[_MROriginProtobuf readFrom:]
  -[_MROriginProtobuf copyTo:]
  -[_MROriginProtobuf setDisplayName:]
  -[_MROriginProtobuf typeAsString:]
  -[_MROriginProtobuf StringAsType:]
  -[_MROriginProtobuf isLocal]
  -[_MROriginProtobuf setHasType:]
  -[_MROriginProtobuf hasType]
  -[_MROriginProtobuf hasIdentifier]
  -[_MROriginProtobuf hasDisplayName]
  -[_MROriginProtobuf setHasIdentifier:]
  -[_MROriginProtobuf setDeviceInfoDeprecated:]
  -[_MROriginProtobuf hasDeviceInfoDeprecated]
  -[_MROriginProtobuf deviceInfoDeprecated]


_MRKeyboardMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasState
 @property  int state
 @property  BOOL hasAttributes
 @property  _MRTextEditingAttributesProtobuf *attributes
 @property  BOOL hasEncryptedTextCyphertext
 @property  NSData *encryptedTextCyphertext

  // instance methods
  -[_MRKeyboardMessageProtobuf isEqual:]
  -[_MRKeyboardMessageProtobuf copyWithZone:]
  -[_MRKeyboardMessageProtobuf .cxx_destruct]
  -[_MRKeyboardMessageProtobuf attributes]
  -[_MRKeyboardMessageProtobuf dictionaryRepresentation]
  -[_MRKeyboardMessageProtobuf state]
  -[_MRKeyboardMessageProtobuf setAttributes:]
  -[_MRKeyboardMessageProtobuf setState:]
  -[_MRKeyboardMessageProtobuf writeTo:]
  -[_MRKeyboardMessageProtobuf mergeFrom:]
  -[_MRKeyboardMessageProtobuf readFrom:]
  -[_MRKeyboardMessageProtobuf copyTo:]
  -[_MRKeyboardMessageProtobuf hasAttributes]
  -[_MRKeyboardMessageProtobuf hasState]
  -[_MRKeyboardMessageProtobuf stateAsString:]
  -[_MRKeyboardMessageProtobuf StringAsState:]
  -[_MRKeyboardMessageProtobuf setHasState:]
  -[_MRKeyboardMessageProtobuf setEncryptedTextCyphertext:]
  -[_MRKeyboardMessageProtobuf hasEncryptedTextCyphertext]
  -[_MRKeyboardMessageProtobuf encryptedTextCyphertext]


_MRPlaybackSessionRequestProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasRequestID
 @property  NSString *requestID
 @property  BOOL hasIdentifier
 @property  NSString *identifier
 @property  BOOL hasLocation
 @property  int location
 @property  BOOL hasLength
 @property  int length
 @property  BOOL hasType
 @property  NSString *type

  // class methods
  +[_MRPlaybackSessionRequestProtobuf initialize]

  // instance methods
  -[_MRPlaybackSessionRequestProtobuf length]
  -[_MRPlaybackSessionRequestProtobuf isEqual:]
  -[_MRPlaybackSessionRequestProtobuf copyWithZone:]
  -[_MRPlaybackSessionRequestProtobuf type]
  -[_MRPlaybackSessionRequestProtobuf setType:]
  -[_MRPlaybackSessionRequestProtobuf setLength:]
  -[_MRPlaybackSessionRequestProtobuf .cxx_destruct]
  -[_MRPlaybackSessionRequestProtobuf identifier]
  -[_MRPlaybackSessionRequestProtobuf setIdentifier:]
  -[_MRPlaybackSessionRequestProtobuf dictionaryRepresentation]
  -[_MRPlaybackSessionRequestProtobuf location]
  -[_MRPlaybackSessionRequestProtobuf writeTo:]
  -[_MRPlaybackSessionRequestProtobuf mergeFrom:]
  -[_MRPlaybackSessionRequestProtobuf readFrom:]
  -[_MRPlaybackSessionRequestProtobuf copyTo:]
  -[_MRPlaybackSessionRequestProtobuf setLocation:]
  -[_MRPlaybackSessionRequestProtobuf hasType]
  -[_MRPlaybackSessionRequestProtobuf hasLocation]
  -[_MRPlaybackSessionRequestProtobuf hasIdentifier]
  -[_MRPlaybackSessionRequestProtobuf hasLength]
  -[_MRPlaybackSessionRequestProtobuf setHasLength:]
  -[_MRPlaybackSessionRequestProtobuf requestID]
  -[_MRPlaybackSessionRequestProtobuf customDescription]
  -[_MRPlaybackSessionRequestProtobuf setRequestID:]
  -[_MRPlaybackSessionRequestProtobuf setHasLocation:]
  -[_MRPlaybackSessionRequestProtobuf hasRequestID]


_MRPlaybackSessionProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasPlaybackSessionData
 @property  NSData *playbackSessionData
 @property  BOOL hasIdentifier
 @property  NSString *identifier
 @property  BOOL hasType
 @property  NSString *type

  // instance methods
  -[_MRPlaybackSessionProtobuf isEqual:]
  -[_MRPlaybackSessionProtobuf copyWithZone:]
  -[_MRPlaybackSessionProtobuf type]
  -[_MRPlaybackSessionProtobuf setType:]
  -[_MRPlaybackSessionProtobuf .cxx_destruct]
  -[_MRPlaybackSessionProtobuf identifier]
  -[_MRPlaybackSessionProtobuf setIdentifier:]
  -[_MRPlaybackSessionProtobuf dictionaryRepresentation]
  -[_MRPlaybackSessionProtobuf writeTo:]
  -[_MRPlaybackSessionProtobuf mergeFrom:]
  -[_MRPlaybackSessionProtobuf readFrom:]
  -[_MRPlaybackSessionProtobuf copyTo:]
  -[_MRPlaybackSessionProtobuf hasType]
  -[_MRPlaybackSessionProtobuf hasIdentifier]
  -[_MRPlaybackSessionProtobuf playbackSessionData]
  -[_MRPlaybackSessionProtobuf setPlaybackSessionData:]
  -[_MRPlaybackSessionProtobuf hasPlaybackSessionData]


MRPlaybackQueueRequestMessage : MRProtocolMessage
 @property  _MRPlaybackQueueRequestProtobuf *request
 @property  _MRNowPlayingPlayerPathProtobuf *playerPath

  // instance methods
  -[MRPlaybackQueueRequestMessage type]
  -[MRPlaybackQueueRequestMessage priority]
  -[MRPlaybackQueueRequestMessage request]
  -[MRPlaybackQueueRequestMessage playerPath]
  -[MRPlaybackQueueRequestMessage initWithRequest:forPlayerPath:]


_MRAVOutputDeviceDescriptorProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasName
 @property  NSString *name
 @property  BOOL hasUniqueIdentifier
 @property  NSString *uniqueIdentifier
 @property  BOOL hasGroupID
 @property  NSString *groupID
 @property  BOOL hasModelID
 @property  NSString *modelID
 @property  BOOL hasMacAddress
 @property  NSData *macAddress
 @property  BOOL hasCanAccessRemoteAssets
 @property  BOOL canAccessRemoteAssets
 @property  BOOL hasIsRemoteControllable
 @property  BOOL isRemoteControllable
 @property  BOOL hasIsGroupLeader
 @property  BOOL isGroupLeader
 @property  BOOL hasIsGroupable
 @property  BOOL isGroupable
 @property  BOOL hasDeviceType
 @property  int deviceType
 @property  BOOL hasDeviceSubType
 @property  int deviceSubType
 @property  BOOL hasModelSpecificInfoData
 @property  NSData *modelSpecificInfoData
 @property  BOOL hasBatteryLevel
 @property  float batteryLevel
 @property  BOOL hasIsLocalDevice
 @property  BOOL isLocalDevice
 @property  BOOL hasSupportsExternalScreen
 @property  BOOL supportsExternalScreen
 @property  BOOL hasRequiresAuthorization
 @property  BOOL requiresAuthorization
 @property  BOOL hasShouldForceRemoteControlabillity
 @property  BOOL shouldForceRemoteControlabillity
 @property  BOOL hasSourceInfo
 @property  _MRAVOutputDeviceSourceInfoProtobuf *sourceInfo
 @property  BOOL hasIsDeviceGroupable
 @property  BOOL isDeviceGroupable
 @property  BOOL hasCanRelayCommunicationChannel
 @property  BOOL canRelayCommunicationChannel
 @property  BOOL hasLogicalDeviceID
 @property  NSString *logicalDeviceID
 @property  BOOL hasIsProxyGroupPlayer
 @property  BOOL isProxyGroupPlayer
 @property  BOOL hasFirmwareVersion
 @property  NSString *firmwareVersion
 @property  BOOL hasVolume
 @property  float volume
 @property  BOOL hasIsVolumeControlAvailable
 @property  BOOL isVolumeControlAvailable
 @property  BOOL hasCanAccessAppleMusic
 @property  BOOL canAccessAppleMusic
 @property  BOOL hasCanAccessiCloudMusicLibrary
 @property  BOOL canAccessiCloudMusicLibrary
 @property  BOOL hasGroupContainsGroupLeader
 @property  BOOL groupContainsGroupLeader
 @property  BOOL hasSupportsBufferedAirPlay
 @property  BOOL supportsBufferedAirPlay
 @property  BOOL hasCanPlayEncryptedProgressiveDownloadAssets
 @property  BOOL canPlayEncryptedProgressiveDownloadAssets
 @property  BOOL hasCanFetchMediaDataFromSender
 @property  BOOL canFetchMediaDataFromSender
 @property  BOOL hasPresentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets
 @property  BOOL presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets
 @property  BOOL hasIsAirPlayReceiverSessionActive
 @property  BOOL isAirPlayReceiverSessionActive
 @property  BOOL hasParentGroupIdentifier
 @property  NSString *parentGroupIdentifier
 @property  BOOL hasParentGroupContainsDiscoverableLeader
 @property  BOOL parentGroupContainsDiscoverableLeader
 @property  BOOL hasIsAddedToHomeKit
 @property  BOOL isAddedToHomeKit
 @property  BOOL hasVolumeCapabilities
 @property  int volumeCapabilities
 @property  BOOL hasBluetoothID
 @property  NSString *bluetoothID

  // instance methods
  -[_MRAVOutputDeviceDescriptorProtobuf isEqual:]
  -[_MRAVOutputDeviceDescriptorProtobuf name]
  -[_MRAVOutputDeviceDescriptorProtobuf copyWithZone:]
  -[_MRAVOutputDeviceDescriptorProtobuf .cxx_destruct]
  -[_MRAVOutputDeviceDescriptorProtobuf setName:]
  -[_MRAVOutputDeviceDescriptorProtobuf dictionaryRepresentation]
  -[_MRAVOutputDeviceDescriptorProtobuf uniqueIdentifier]
  -[_MRAVOutputDeviceDescriptorProtobuf writeTo:]
  -[_MRAVOutputDeviceDescriptorProtobuf deviceType]
  -[_MRAVOutputDeviceDescriptorProtobuf mergeFrom:]
  -[_MRAVOutputDeviceDescriptorProtobuf readFrom:]
  -[_MRAVOutputDeviceDescriptorProtobuf copyTo:]
  -[_MRAVOutputDeviceDescriptorProtobuf groupID]
  -[_MRAVOutputDeviceDescriptorProtobuf setUniqueIdentifier:]
  -[_MRAVOutputDeviceDescriptorProtobuf setGroupID:]
  -[_MRAVOutputDeviceDescriptorProtobuf hasGroupID]
  -[_MRAVOutputDeviceDescriptorProtobuf hasName]
  -[_MRAVOutputDeviceDescriptorProtobuf macAddress]
  -[_MRAVOutputDeviceDescriptorProtobuf firmwareVersion]
  -[_MRAVOutputDeviceDescriptorProtobuf volume]
  -[_MRAVOutputDeviceDescriptorProtobuf setVolume:]
  -[_MRAVOutputDeviceDescriptorProtobuf batteryLevel]
  -[_MRAVOutputDeviceDescriptorProtobuf setDeviceType:]
  -[_MRAVOutputDeviceDescriptorProtobuf hasUniqueIdentifier]
  -[_MRAVOutputDeviceDescriptorProtobuf sourceInfo]
  -[_MRAVOutputDeviceDescriptorProtobuf setSourceInfo:]
  -[_MRAVOutputDeviceDescriptorProtobuf hasSourceInfo]
  -[_MRAVOutputDeviceDescriptorProtobuf setBatteryLevel:]
  -[_MRAVOutputDeviceDescriptorProtobuf parentGroupIdentifier]
  -[_MRAVOutputDeviceDescriptorProtobuf bluetoothID]
  -[_MRAVOutputDeviceDescriptorProtobuf setBluetoothID:]
  -[_MRAVOutputDeviceDescriptorProtobuf modelID]
  -[_MRAVOutputDeviceDescriptorProtobuf deviceSubType]
  -[_MRAVOutputDeviceDescriptorProtobuf requiresAuthorization]
  -[_MRAVOutputDeviceDescriptorProtobuf canAccessRemoteAssets]
  -[_MRAVOutputDeviceDescriptorProtobuf canAccessAppleMusic]
  -[_MRAVOutputDeviceDescriptorProtobuf canAccessiCloudMusicLibrary]
  -[_MRAVOutputDeviceDescriptorProtobuf supportsBufferedAirPlay]
  -[_MRAVOutputDeviceDescriptorProtobuf isGroupLeader]
  -[_MRAVOutputDeviceDescriptorProtobuf groupContainsGroupLeader]
  -[_MRAVOutputDeviceDescriptorProtobuf logicalDeviceID]
  -[_MRAVOutputDeviceDescriptorProtobuf canRelayCommunicationChannel]
  -[_MRAVOutputDeviceDescriptorProtobuf canPlayEncryptedProgressiveDownloadAssets]
  -[_MRAVOutputDeviceDescriptorProtobuf canFetchMediaDataFromSender]
  -[_MRAVOutputDeviceDescriptorProtobuf presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets]
  -[_MRAVOutputDeviceDescriptorProtobuf hasBatteryLevel]
  -[_MRAVOutputDeviceDescriptorProtobuf deviceTypeAsString:]
  -[_MRAVOutputDeviceDescriptorProtobuf StringAsDeviceType:]
  -[_MRAVOutputDeviceDescriptorProtobuf hasDeviceType]
  -[_MRAVOutputDeviceDescriptorProtobuf setHasDeviceType:]
  -[_MRAVOutputDeviceDescriptorProtobuf isVolumeControlAvailable]
  -[_MRAVOutputDeviceDescriptorProtobuf volumeCapabilities]
  -[_MRAVOutputDeviceDescriptorProtobuf isProxyGroupPlayer]
  -[_MRAVOutputDeviceDescriptorProtobuf setRequiresAuthorization:]
  -[_MRAVOutputDeviceDescriptorProtobuf isLocalDevice]
  -[_MRAVOutputDeviceDescriptorProtobuf setIsLocalDevice:]
  -[_MRAVOutputDeviceDescriptorProtobuf setHasVolume:]
  -[_MRAVOutputDeviceDescriptorProtobuf hasVolume]
  -[_MRAVOutputDeviceDescriptorProtobuf isRemoteControllable]
  -[_MRAVOutputDeviceDescriptorProtobuf isGroupable]
  -[_MRAVOutputDeviceDescriptorProtobuf isDeviceGroupable]
  -[_MRAVOutputDeviceDescriptorProtobuf isAirPlayReceiverSessionActive]
  -[_MRAVOutputDeviceDescriptorProtobuf parentGroupContainsDiscoverableLeader]
  -[_MRAVOutputDeviceDescriptorProtobuf isAddedToHomeKit]
  -[_MRAVOutputDeviceDescriptorProtobuf setLogicalDeviceID:]
  -[_MRAVOutputDeviceDescriptorProtobuf setModelID:]
  -[_MRAVOutputDeviceDescriptorProtobuf setMacAddress:]
  -[_MRAVOutputDeviceDescriptorProtobuf setCanAccessRemoteAssets:]
  -[_MRAVOutputDeviceDescriptorProtobuf setCanAccessAppleMusic:]
  -[_MRAVOutputDeviceDescriptorProtobuf setCanAccessiCloudMusicLibrary:]
  -[_MRAVOutputDeviceDescriptorProtobuf setCanPlayEncryptedProgressiveDownloadAssets:]
  -[_MRAVOutputDeviceDescriptorProtobuf setCanFetchMediaDataFromSender:]
  -[_MRAVOutputDeviceDescriptorProtobuf setPresentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets:]
  -[_MRAVOutputDeviceDescriptorProtobuf setIsRemoteControllable:]
  -[_MRAVOutputDeviceDescriptorProtobuf setCanRelayCommunicationChannel:]
  -[_MRAVOutputDeviceDescriptorProtobuf setSupportsBufferedAirPlay:]
  -[_MRAVOutputDeviceDescriptorProtobuf setIsGroupLeader:]
  -[_MRAVOutputDeviceDescriptorProtobuf setGroupContainsGroupLeader:]
  -[_MRAVOutputDeviceDescriptorProtobuf setIsAirPlayReceiverSessionActive:]
  -[_MRAVOutputDeviceDescriptorProtobuf setParentGroupContainsDiscoverableLeader:]
  -[_MRAVOutputDeviceDescriptorProtobuf setParentGroupIdentifier:]
  -[_MRAVOutputDeviceDescriptorProtobuf setIsGroupable:]
  -[_MRAVOutputDeviceDescriptorProtobuf setIsDeviceGroupable:]
  -[_MRAVOutputDeviceDescriptorProtobuf setIsProxyGroupPlayer:]
  -[_MRAVOutputDeviceDescriptorProtobuf setDeviceSubType:]
  -[_MRAVOutputDeviceDescriptorProtobuf setIsAddedToHomeKit:]
  -[_MRAVOutputDeviceDescriptorProtobuf setVolumeCapabilities:]
  -[_MRAVOutputDeviceDescriptorProtobuf setIsVolumeControlAvailable:]
  -[_MRAVOutputDeviceDescriptorProtobuf setModelSpecificInfoData:]
  -[_MRAVOutputDeviceDescriptorProtobuf supportsExternalScreen]
  -[_MRAVOutputDeviceDescriptorProtobuf setSupportsExternalScreen:]
  -[_MRAVOutputDeviceDescriptorProtobuf modelSpecificInfoData]
  -[_MRAVOutputDeviceDescriptorProtobuf hasVolumeCapabilities]
  -[_MRAVOutputDeviceDescriptorProtobuf setHasIsVolumeControlAvailable:]
  -[_MRAVOutputDeviceDescriptorProtobuf setHasIsProxyGroupPlayer:]
  -[_MRAVOutputDeviceDescriptorProtobuf hasIsProxyGroupPlayer]
  -[_MRAVOutputDeviceDescriptorProtobuf setHasVolumeCapabilities:]
  -[_MRAVOutputDeviceDescriptorProtobuf setFirmwareVersion:]
  -[_MRAVOutputDeviceDescriptorProtobuf hasModelID]
  -[_MRAVOutputDeviceDescriptorProtobuf hasMacAddress]
  -[_MRAVOutputDeviceDescriptorProtobuf setHasCanAccessRemoteAssets:]
  -[_MRAVOutputDeviceDescriptorProtobuf hasCanAccessRemoteAssets]
  -[_MRAVOutputDeviceDescriptorProtobuf setHasIsRemoteControllable:]
  -[_MRAVOutputDeviceDescriptorProtobuf hasIsRemoteControllable]
  -[_MRAVOutputDeviceDescriptorProtobuf setHasIsGroupLeader:]
  -[_MRAVOutputDeviceDescriptorProtobuf hasIsGroupLeader]
  -[_MRAVOutputDeviceDescriptorProtobuf setHasIsGroupable:]
  -[_MRAVOutputDeviceDescriptorProtobuf hasIsGroupable]
  -[_MRAVOutputDeviceDescriptorProtobuf setHasDeviceSubType:]
  -[_MRAVOutputDeviceDescriptorProtobuf hasDeviceSubType]
  -[_MRAVOutputDeviceDescriptorProtobuf deviceSubTypeAsString:]
  -[_MRAVOutputDeviceDescriptorProtobuf StringAsDeviceSubType:]
  -[_MRAVOutputDeviceDescriptorProtobuf hasModelSpecificInfoData]
  -[_MRAVOutputDeviceDescriptorProtobuf setHasBatteryLevel:]
  -[_MRAVOutputDeviceDescriptorProtobuf setHasIsLocalDevice:]
  -[_MRAVOutputDeviceDescriptorProtobuf hasIsLocalDevice]
  -[_MRAVOutputDeviceDescriptorProtobuf setHasSupportsExternalScreen:]
  -[_MRAVOutputDeviceDescriptorProtobuf hasSupportsExternalScreen]
  -[_MRAVOutputDeviceDescriptorProtobuf setHasRequiresAuthorization:]
  -[_MRAVOutputDeviceDescriptorProtobuf hasRequiresAuthorization]
  -[_MRAVOutputDeviceDescriptorProtobuf setShouldForceRemoteControlabillity:]
  -[_MRAVOutputDeviceDescriptorProtobuf setHasShouldForceRemoteControlabillity:]
  -[_MRAVOutputDeviceDescriptorProtobuf hasShouldForceRemoteControlabillity]
  -[_MRAVOutputDeviceDescriptorProtobuf setHasIsDeviceGroupable:]
  -[_MRAVOutputDeviceDescriptorProtobuf hasIsDeviceGroupable]
  -[_MRAVOutputDeviceDescriptorProtobuf setHasCanRelayCommunicationChannel:]
  -[_MRAVOutputDeviceDescriptorProtobuf hasCanRelayCommunicationChannel]
  -[_MRAVOutputDeviceDescriptorProtobuf hasLogicalDeviceID]
  -[_MRAVOutputDeviceDescriptorProtobuf hasFirmwareVersion]
  -[_MRAVOutputDeviceDescriptorProtobuf hasIsVolumeControlAvailable]
  -[_MRAVOutputDeviceDescriptorProtobuf setHasCanAccessAppleMusic:]
  -[_MRAVOutputDeviceDescriptorProtobuf hasCanAccessAppleMusic]
  -[_MRAVOutputDeviceDescriptorProtobuf setHasCanAccessiCloudMusicLibrary:]
  -[_MRAVOutputDeviceDescriptorProtobuf hasCanAccessiCloudMusicLibrary]
  -[_MRAVOutputDeviceDescriptorProtobuf setHasGroupContainsGroupLeader:]
  -[_MRAVOutputDeviceDescriptorProtobuf hasGroupContainsGroupLeader]
  -[_MRAVOutputDeviceDescriptorProtobuf setHasSupportsBufferedAirPlay:]
  -[_MRAVOutputDeviceDescriptorProtobuf hasSupportsBufferedAirPlay]
  -[_MRAVOutputDeviceDescriptorProtobuf setHasCanPlayEncryptedProgressiveDownloadAssets:]
  -[_MRAVOutputDeviceDescriptorProtobuf hasCanPlayEncryptedProgressiveDownloadAssets]
  -[_MRAVOutputDeviceDescriptorProtobuf setHasCanFetchMediaDataFromSender:]
  -[_MRAVOutputDeviceDescriptorProtobuf hasCanFetchMediaDataFromSender]
  -[_MRAVOutputDeviceDescriptorProtobuf setHasPresentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets:]
  -[_MRAVOutputDeviceDescriptorProtobuf hasPresentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets]
  -[_MRAVOutputDeviceDescriptorProtobuf setHasIsAirPlayReceiverSessionActive:]
  -[_MRAVOutputDeviceDescriptorProtobuf hasIsAirPlayReceiverSessionActive]
  -[_MRAVOutputDeviceDescriptorProtobuf hasParentGroupIdentifier]
  -[_MRAVOutputDeviceDescriptorProtobuf setHasParentGroupContainsDiscoverableLeader:]
  -[_MRAVOutputDeviceDescriptorProtobuf hasParentGroupContainsDiscoverableLeader]
  -[_MRAVOutputDeviceDescriptorProtobuf setHasIsAddedToHomeKit:]
  -[_MRAVOutputDeviceDescriptorProtobuf hasIsAddedToHomeKit]
  -[_MRAVOutputDeviceDescriptorProtobuf hasBluetoothID]
  -[_MRAVOutputDeviceDescriptorProtobuf shouldForceRemoteControlabillity]


_MRMediaRemoteMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasType
 @property  int type
 @property  BOOL hasIdentifier
 @property  NSString *identifier
 @property  BOOL hasAuthenticationToken
 @property  NSString *authenticationToken
 @property  BOOL hasErrorCode
 @property  unsigned int errorCode
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasSendCommandMessage
 @property  _MRSendCommandMessageProtobuf *sendCommandMessage
 @property  BOOL hasSendCommandResultMessage
 @property  _MRSendCommandResultMessageProtobuf *sendCommandResultMessage
 @property  BOOL hasGetStateMessage
 @property  _MRGetStateMessageProtobuf *getStateMessage
 @property  BOOL hasSetStateMessage
 @property  _MRSetStateMessageProtobuf *setStateMessage
 @property  BOOL hasSetArtworkMessage
 @property  _MRSetArtworkMessageProtobuf *setArtworkMessage
 @property  BOOL hasRegisterHIDDeviceMessage
 @property  _MRRegisterHIDDeviceMessageProtobuf *registerHIDDeviceMessage
 @property  BOOL hasRegisterHIDDeviceResultMessage
 @property  _MRRegisterHIDDeviceResultMessageProtobuf *registerHIDDeviceResultMessage
 @property  BOOL hasSendHIDEventMessage
 @property  _MRSendHIDEventMessageProtobuf *sendHIDEventMessage
 @property  BOOL hasSendHIDReportMessage
 @property  _MRSendHIDReportMessageProtobuf *sendHIDReportMessage
 @property  BOOL hasSendVirtualTouchEventMessage
 @property  _MRSendVirtualTouchEventMessageProtobuf *sendVirtualTouchEventMessage
 @property  BOOL hasNotificationMessage
 @property  _MRNotificationMessageProtobuf *notificationMessage
 @property  BOOL hasContentItemsChangedNotificationMessage
 @property  _MRPlaybackQueueProtobuf *contentItemsChangedNotificationMessage
 @property  BOOL hasDeviceInfoMessage
 @property  _MRDeviceInfoMessageProtobuf *deviceInfoMessage
 @property  BOOL hasClientUpdatesConfigMessage
 @property  _MRClientUpdatesConfigurationProtobuf *clientUpdatesConfigMessage
 @property  BOOL hasMasterVolumeControlCapabilitiesDidChangeMessage
 @property  _MRVolumeControlAvailabilityProtobuf *masterVolumeControlCapabilitiesDidChangeMessage
 @property  BOOL hasGameController
 @property  _MRGameControllerMessageProtobuf *gameController
 @property  BOOL hasRegisterGameController
 @property  _MRRegisterGameControllerMessageProtobuf *registerGameController
 @property  BOOL hasRegisterGameControllerResponse
 @property  _MRRegisterGameControllerResponseMessageProtobuf *registerGameControllerResponse
 @property  BOOL hasUnregisterGameController
 @property  _MRUnregisterGameControllerMessageProtobuf *unregisterGameController
 @property  BOOL hasRegisterForGameControllerEvents
 @property  _MRRegisterForGameControllerEventsMessageProtobuf *registerForGameControllerEvents
 @property  BOOL hasKeyboardMessage
 @property  _MRKeyboardMessageProtobuf *keyboardMessage
 @property  BOOL hasGetKeyboardMessage
 @property  _MRGetKeyboardSessionProtobuf *getKeyboardMessage
 @property  BOOL hasTextInputMessage
 @property  _MRTextInputMessageProtobuf *textInputMessage
 @property  BOOL hasGetVoiceInputDevicesMessage
 @property  _MRGetVoiceInputDevicesMessageProtobuf *getVoiceInputDevicesMessage
 @property  BOOL hasGetVoiceInputDevicesResponseMessage
 @property  _MRGetVoiceInputDevicesResponseMessageProtobuf *getVoiceInputDevicesResponseMessage
 @property  BOOL hasRegisterVoiceInputDeviceMessage
 @property  _MRRegisterVoiceInputDeviceMessageProtobuf *registerVoiceInputDeviceMessage
 @property  BOOL hasRegisterVoiceInputDeviceResponseMessage
 @property  _MRRegisterVoiceInputDeviceResponseMessageProtobuf *registerVoiceInputDeviceResponseMessage
 @property  BOOL hasSetRecordingStateMessage
 @property  _MRSetRecordingStateMessageProtobuf *setRecordingStateMessage
 @property  BOOL hasSendVoiceInputMessage
 @property  _MRSendVoiceInputMessageProtobuf *sendVoiceInputMessage
 @property  BOOL hasPlaybackQueueRequest
 @property  _MRPlaybackQueueRequestProtobuf *playbackQueueRequest
 @property  BOOL hasTransactionPackets
 @property  _MRTransactionMessageProtobuf *transactionPackets
 @property  BOOL hasCryptoPairingMessage
 @property  _MRCryptoPairingMessageProtobuf *cryptoPairingMessage
 @property  BOOL hasGameControllerProperties
 @property  _MRGameControllerPropertiesMessageProtobuf *gameControllerProperties
 @property  BOOL hasReadyStateMessage
 @property  _MRSetReadyStateMessageProtobuf *readyStateMessage
 @property  BOOL hasConnectionState
 @property  _MRSetConnectionStateMessageProtobuf *connectionState
 @property  BOOL hasSendButtonEventMessage
 @property  _MRSendButtonEventMessageProtobuf *sendButtonEventMessage
 @property  BOOL hasSetHiliteModeMessage
 @property  _MRSetHiliteModeMessageProtobuf *setHiliteModeMessage
 @property  BOOL hasWakeDeviceMessage
 @property  _MRWakeDeviceMessageProtobuf *wakeDeviceMessage
 @property  BOOL hasGenericMessage
 @property  _MRGenericMessageProtobuf *genericMessage
 @property  BOOL hasSendPackedVirtualTouchEventMessage
 @property  _MRSendPackedVirtualTouchEventMessageProtobuf *sendPackedVirtualTouchEventMessage
 @property  BOOL hasSendLyricsEventMessage
 @property  _MRSendLyricsEventMessageProtobuf *sendLyricsEventMessage
 @property  BOOL hasSetNowPlayingClientMessage
 @property  _MRSetNowPlayingClientMessageProtobuf *setNowPlayingClientMessage
 @property  BOOL hasSetNowPlayingPlayerMessage
 @property  _MRSetNowPlayingPlayerMessageProtobuf *setNowPlayingPlayerMessage
 @property  BOOL hasModifyOutputContextRequestMessage
 @property  _MRAVModifyOutputContextRequestProtobuf *modifyOutputContextRequestMessage
 @property  BOOL hasGetVolumeMessage
 @property  _MRGetVolumeMessageProtobuf *getVolumeMessage
 @property  BOOL hasGetVolumeResultMessage
 @property  _MRGetVolumeResultMessageProtobuf *getVolumeResultMessage
 @property  BOOL hasSetVolumeMessage
 @property  _MRSetVolumeMessageProtobuf *setVolumeMessage
 @property  BOOL hasVolumeDidChangeMessage
 @property  _MRVolumeDidChangeMessageProtobuf *volumeDidChangeMessage
 @property  BOOL hasRemoveClientMessage
 @property  _MRRemoveClientMessageProtobuf *removeClientMessage
 @property  BOOL hasRemovePlayerMessage
 @property  _MRRemovePlayerMessageProtobuf *removePlayerMessage
 @property  BOOL hasUpdateClientMessage
 @property  _MRUpdateClientMessageProtobuf *updateClientMessage
 @property  BOOL hasUpdateContentItemMessage
 @property  _MRUpdateContentItemMessageProtobuf *updateContentItemMessage
 @property  BOOL hasUpdateContentItemArtworkMessage
 @property  _MRUpdateContentItemArtworkMessageProtobuf *updateContentItemArtworkMessage
 @property  BOOL hasUpdatePlayerMessage
 @property  _MRUpdatePlayerMessageProtobuf *updatePlayerMessage
 @property  BOOL hasPromptForRouteAuthorizationMessage
 @property  _MRPromptForRouteAuthorizationMessageProtobuf *promptForRouteAuthorizationMessage
 @property  BOOL hasPromptForRouteAuthorizationResponseMessage
 @property  _MRPromptForRouteAuthorizationResponseMessageProtobuf *promptForRouteAuthorizationResponseMessage
 @property  BOOL hasPresentRouteAuthorizationStatusMessage
 @property  _MRPresentRouteAuthorizationStatusMessageProtobuf *presentRouteAuthorizationStatusMessage
 @property  BOOL hasGetVolumeControlCapabilitiesMessage
 @property  _MRGetVolumeControlCapabilitiesMessageProtobuf *getVolumeControlCapabilitiesMessage
 @property  BOOL hasGetVolumeControlCapabilitiesResultMessage
 @property  _MRGetVolumeControlCapabilitiesResultMessageProtobuf *getVolumeControlCapabilitiesResultMessage
 @property  BOOL hasVolumeControlCapabilitiesDidChangeMessage
 @property  _MRVolumeControlCapabilitiesDidChangeMessageProtobuf *volumeControlCapabilitiesDidChangeMessage
 @property  BOOL hasUpdateOutputDevicesMessage
 @property  _MRUpdateOutputDevicesMessageProtobuf *updateOutputDevicesMessage
 @property  BOOL hasRemoveOutputDevicesMessage
 @property  _MRRemoveOutputDevicesMessageProtobuf *removeOutputDevicesMessage
 @property  BOOL hasRemoteTextInputMessage
 @property  _MRRemoteTextInputMessageProtobuf *remoteTextInputMessage
 @property  BOOL hasGetRemoteTextInputSessionMessage
 @property  _MRGetRemoteTextInputSessionProtobuf *getRemoteTextInputSessionMessage
 @property  BOOL hasPlaybackSessionRequestMessage
 @property  _MRPlaybackSessionRequestMessageProtobuf *playbackSessionRequestMessage
 @property  BOOL hasPlaybackSessionResponseMessage
 @property  _MRPlaybackSessionResponseMessageProtobuf *playbackSessionResponseMessage
 @property  BOOL hasSetDefaultSupportedCommandsMessage
 @property  _MRSetStateMessageProtobuf *setDefaultSupportedCommandsMessage
 @property  BOOL hasPlaybackSessionMigrateRequestMessage
 @property  _MRPlaybackSessionMigrateRequestMessageProtobuf *playbackSessionMigrateRequestMessage
 @property  BOOL hasPlaybackSessionMigrateResponseMessage
 @property  _MRPlaybackSessionMigrateResponseMessageProtobuf *playbackSessionMigrateResponseMessage
 @property  BOOL hasErrorDescription
 @property  NSString *errorDescription
 @property  BOOL hasPlaybackSessionMigrateBeginMessage
 @property  _MRPlaybackSessionMigrateBeginMessageProtobuf *playbackSessionMigrateBeginMessage
 @property  BOOL hasPlaybackSessionMigrateEndMessage
 @property  _MRPlaybackSessionMigrateEndMessageProtobuf *playbackSessionMigrateEndMessage

  // instance methods
  -[_MRMediaRemoteMessageProtobuf isEqual:]
  -[_MRMediaRemoteMessageProtobuf copyWithZone:]
  -[_MRMediaRemoteMessageProtobuf type]
  -[_MRMediaRemoteMessageProtobuf setType:]
  -[_MRMediaRemoteMessageProtobuf .cxx_destruct]
  -[_MRMediaRemoteMessageProtobuf identifier]
  -[_MRMediaRemoteMessageProtobuf setIdentifier:]
  -[_MRMediaRemoteMessageProtobuf dictionaryRepresentation]
  -[_MRMediaRemoteMessageProtobuf timestamp]
  -[_MRMediaRemoteMessageProtobuf hasTimestamp]
  -[_MRMediaRemoteMessageProtobuf setTimestamp:]
  -[_MRMediaRemoteMessageProtobuf writeTo:]
  -[_MRMediaRemoteMessageProtobuf mergeFrom:]
  -[_MRMediaRemoteMessageProtobuf readFrom:]
  -[_MRMediaRemoteMessageProtobuf copyTo:]
  -[_MRMediaRemoteMessageProtobuf typeAsString:]
  -[_MRMediaRemoteMessageProtobuf StringAsType:]
  -[_MRMediaRemoteMessageProtobuf errorCode]
  -[_MRMediaRemoteMessageProtobuf setHasType:]
  -[_MRMediaRemoteMessageProtobuf hasType]
  -[_MRMediaRemoteMessageProtobuf setHasTimestamp:]
  -[_MRMediaRemoteMessageProtobuf connectionState]
  -[_MRMediaRemoteMessageProtobuf hasIdentifier]
  -[_MRMediaRemoteMessageProtobuf setErrorCode:]
  -[_MRMediaRemoteMessageProtobuf setHasErrorCode:]
  -[_MRMediaRemoteMessageProtobuf hasErrorCode]
  -[_MRMediaRemoteMessageProtobuf errorDescription]
  -[_MRMediaRemoteMessageProtobuf setErrorDescription:]
  -[_MRMediaRemoteMessageProtobuf setAuthenticationToken:]
  -[_MRMediaRemoteMessageProtobuf authenticationToken]
  -[_MRMediaRemoteMessageProtobuf setSendCommandMessage:]
  -[_MRMediaRemoteMessageProtobuf setSendCommandResultMessage:]
  -[_MRMediaRemoteMessageProtobuf setGetStateMessage:]
  -[_MRMediaRemoteMessageProtobuf setSetStateMessage:]
  -[_MRMediaRemoteMessageProtobuf setSetArtworkMessage:]
  -[_MRMediaRemoteMessageProtobuf setRegisterHIDDeviceMessage:]
  -[_MRMediaRemoteMessageProtobuf setRegisterHIDDeviceResultMessage:]
  -[_MRMediaRemoteMessageProtobuf setSendHIDEventMessage:]
  -[_MRMediaRemoteMessageProtobuf setSendHIDReportMessage:]
  -[_MRMediaRemoteMessageProtobuf setSendVirtualTouchEventMessage:]
  -[_MRMediaRemoteMessageProtobuf setNotificationMessage:]
  -[_MRMediaRemoteMessageProtobuf setContentItemsChangedNotificationMessage:]
  -[_MRMediaRemoteMessageProtobuf setDeviceInfoMessage:]
  -[_MRMediaRemoteMessageProtobuf setClientUpdatesConfigMessage:]
  -[_MRMediaRemoteMessageProtobuf setMasterVolumeControlCapabilitiesDidChangeMessage:]
  -[_MRMediaRemoteMessageProtobuf setGameController:]
  -[_MRMediaRemoteMessageProtobuf setRegisterGameController:]
  -[_MRMediaRemoteMessageProtobuf setRegisterGameControllerResponse:]
  -[_MRMediaRemoteMessageProtobuf setUnregisterGameController:]
  -[_MRMediaRemoteMessageProtobuf setRegisterForGameControllerEvents:]
  -[_MRMediaRemoteMessageProtobuf setKeyboardMessage:]
  -[_MRMediaRemoteMessageProtobuf setGetKeyboardMessage:]
  -[_MRMediaRemoteMessageProtobuf setTextInputMessage:]
  -[_MRMediaRemoteMessageProtobuf setGetVoiceInputDevicesMessage:]
  -[_MRMediaRemoteMessageProtobuf setGetVoiceInputDevicesResponseMessage:]
  -[_MRMediaRemoteMessageProtobuf setRegisterVoiceInputDeviceMessage:]
  -[_MRMediaRemoteMessageProtobuf setRegisterVoiceInputDeviceResponseMessage:]
  -[_MRMediaRemoteMessageProtobuf setSetRecordingStateMessage:]
  -[_MRMediaRemoteMessageProtobuf setSendVoiceInputMessage:]
  -[_MRMediaRemoteMessageProtobuf setPlaybackQueueRequest:]
  -[_MRMediaRemoteMessageProtobuf setTransactionPackets:]
  -[_MRMediaRemoteMessageProtobuf setCryptoPairingMessage:]
  -[_MRMediaRemoteMessageProtobuf setGameControllerProperties:]
  -[_MRMediaRemoteMessageProtobuf setReadyStateMessage:]
  -[_MRMediaRemoteMessageProtobuf setConnectionState:]
  -[_MRMediaRemoteMessageProtobuf setSendButtonEventMessage:]
  -[_MRMediaRemoteMessageProtobuf setSetHiliteModeMessage:]
  -[_MRMediaRemoteMessageProtobuf setWakeDeviceMessage:]
  -[_MRMediaRemoteMessageProtobuf setGenericMessage:]
  -[_MRMediaRemoteMessageProtobuf setSendPackedVirtualTouchEventMessage:]
  -[_MRMediaRemoteMessageProtobuf setSendLyricsEventMessage:]
  -[_MRMediaRemoteMessageProtobuf setSetNowPlayingClientMessage:]
  -[_MRMediaRemoteMessageProtobuf setSetNowPlayingPlayerMessage:]
  -[_MRMediaRemoteMessageProtobuf setModifyOutputContextRequestMessage:]
  -[_MRMediaRemoteMessageProtobuf setGetVolumeMessage:]
  -[_MRMediaRemoteMessageProtobuf setGetVolumeResultMessage:]
  -[_MRMediaRemoteMessageProtobuf setSetVolumeMessage:]
  -[_MRMediaRemoteMessageProtobuf setVolumeDidChangeMessage:]
  -[_MRMediaRemoteMessageProtobuf setRemoveClientMessage:]
  -[_MRMediaRemoteMessageProtobuf setRemovePlayerMessage:]
  -[_MRMediaRemoteMessageProtobuf setUpdateClientMessage:]
  -[_MRMediaRemoteMessageProtobuf setUpdateContentItemMessage:]
  -[_MRMediaRemoteMessageProtobuf setUpdateContentItemArtworkMessage:]
  -[_MRMediaRemoteMessageProtobuf setUpdatePlayerMessage:]
  -[_MRMediaRemoteMessageProtobuf setPromptForRouteAuthorizationMessage:]
  -[_MRMediaRemoteMessageProtobuf setPromptForRouteAuthorizationResponseMessage:]
  -[_MRMediaRemoteMessageProtobuf setPresentRouteAuthorizationStatusMessage:]
  -[_MRMediaRemoteMessageProtobuf setGetVolumeControlCapabilitiesMessage:]
  -[_MRMediaRemoteMessageProtobuf setGetVolumeControlCapabilitiesResultMessage:]
  -[_MRMediaRemoteMessageProtobuf setVolumeControlCapabilitiesDidChangeMessage:]
  -[_MRMediaRemoteMessageProtobuf setUpdateOutputDevicesMessage:]
  -[_MRMediaRemoteMessageProtobuf setRemoveOutputDevicesMessage:]
  -[_MRMediaRemoteMessageProtobuf setRemoteTextInputMessage:]
  -[_MRMediaRemoteMessageProtobuf setGetRemoteTextInputSessionMessage:]
  -[_MRMediaRemoteMessageProtobuf setPlaybackSessionRequestMessage:]
  -[_MRMediaRemoteMessageProtobuf setPlaybackSessionResponseMessage:]
  -[_MRMediaRemoteMessageProtobuf setSetDefaultSupportedCommandsMessage:]
  -[_MRMediaRemoteMessageProtobuf setPlaybackSessionMigrateRequestMessage:]
  -[_MRMediaRemoteMessageProtobuf setPlaybackSessionMigrateResponseMessage:]
  -[_MRMediaRemoteMessageProtobuf setPlaybackSessionMigrateBeginMessage:]
  -[_MRMediaRemoteMessageProtobuf setPlaybackSessionMigrateEndMessage:]
  -[_MRMediaRemoteMessageProtobuf hasAuthenticationToken]
  -[_MRMediaRemoteMessageProtobuf hasSendCommandMessage]
  -[_MRMediaRemoteMessageProtobuf hasSendCommandResultMessage]
  -[_MRMediaRemoteMessageProtobuf hasGetStateMessage]
  -[_MRMediaRemoteMessageProtobuf hasSetStateMessage]
  -[_MRMediaRemoteMessageProtobuf hasSetArtworkMessage]
  -[_MRMediaRemoteMessageProtobuf hasRegisterHIDDeviceMessage]
  -[_MRMediaRemoteMessageProtobuf hasRegisterHIDDeviceResultMessage]
  -[_MRMediaRemoteMessageProtobuf hasSendHIDEventMessage]
  -[_MRMediaRemoteMessageProtobuf hasSendHIDReportMessage]
  -[_MRMediaRemoteMessageProtobuf hasSendVirtualTouchEventMessage]
  -[_MRMediaRemoteMessageProtobuf hasNotificationMessage]
  -[_MRMediaRemoteMessageProtobuf hasContentItemsChangedNotificationMessage]
  -[_MRMediaRemoteMessageProtobuf hasDeviceInfoMessage]
  -[_MRMediaRemoteMessageProtobuf hasClientUpdatesConfigMessage]
  -[_MRMediaRemoteMessageProtobuf hasMasterVolumeControlCapabilitiesDidChangeMessage]
  -[_MRMediaRemoteMessageProtobuf hasGameController]
  -[_MRMediaRemoteMessageProtobuf hasRegisterGameController]
  -[_MRMediaRemoteMessageProtobuf hasRegisterGameControllerResponse]
  -[_MRMediaRemoteMessageProtobuf hasUnregisterGameController]
  -[_MRMediaRemoteMessageProtobuf hasRegisterForGameControllerEvents]
  -[_MRMediaRemoteMessageProtobuf hasKeyboardMessage]
  -[_MRMediaRemoteMessageProtobuf hasGetKeyboardMessage]
  -[_MRMediaRemoteMessageProtobuf hasTextInputMessage]
  -[_MRMediaRemoteMessageProtobuf hasGetVoiceInputDevicesMessage]
  -[_MRMediaRemoteMessageProtobuf hasGetVoiceInputDevicesResponseMessage]
  -[_MRMediaRemoteMessageProtobuf hasRegisterVoiceInputDeviceMessage]
  -[_MRMediaRemoteMessageProtobuf hasRegisterVoiceInputDeviceResponseMessage]
  -[_MRMediaRemoteMessageProtobuf hasSetRecordingStateMessage]
  -[_MRMediaRemoteMessageProtobuf hasSendVoiceInputMessage]
  -[_MRMediaRemoteMessageProtobuf hasPlaybackQueueRequest]
  -[_MRMediaRemoteMessageProtobuf hasTransactionPackets]
  -[_MRMediaRemoteMessageProtobuf hasCryptoPairingMessage]
  -[_MRMediaRemoteMessageProtobuf hasGameControllerProperties]
  -[_MRMediaRemoteMessageProtobuf hasReadyStateMessage]
  -[_MRMediaRemoteMessageProtobuf hasConnectionState]
  -[_MRMediaRemoteMessageProtobuf hasSendButtonEventMessage]
  -[_MRMediaRemoteMessageProtobuf hasSetHiliteModeMessage]
  -[_MRMediaRemoteMessageProtobuf hasWakeDeviceMessage]
  -[_MRMediaRemoteMessageProtobuf hasGenericMessage]
  -[_MRMediaRemoteMessageProtobuf hasSendPackedVirtualTouchEventMessage]
  -[_MRMediaRemoteMessageProtobuf hasSendLyricsEventMessage]
  -[_MRMediaRemoteMessageProtobuf hasSetNowPlayingClientMessage]
  -[_MRMediaRemoteMessageProtobuf hasSetNowPlayingPlayerMessage]
  -[_MRMediaRemoteMessageProtobuf hasModifyOutputContextRequestMessage]
  -[_MRMediaRemoteMessageProtobuf hasGetVolumeMessage]
  -[_MRMediaRemoteMessageProtobuf hasGetVolumeResultMessage]
  -[_MRMediaRemoteMessageProtobuf hasSetVolumeMessage]
  -[_MRMediaRemoteMessageProtobuf hasVolumeDidChangeMessage]
  -[_MRMediaRemoteMessageProtobuf hasRemoveClientMessage]
  -[_MRMediaRemoteMessageProtobuf hasRemovePlayerMessage]
  -[_MRMediaRemoteMessageProtobuf hasUpdateClientMessage]
  -[_MRMediaRemoteMessageProtobuf hasUpdateContentItemMessage]
  -[_MRMediaRemoteMessageProtobuf hasUpdateContentItemArtworkMessage]
  -[_MRMediaRemoteMessageProtobuf hasUpdatePlayerMessage]
  -[_MRMediaRemoteMessageProtobuf hasPromptForRouteAuthorizationMessage]
  -[_MRMediaRemoteMessageProtobuf hasPromptForRouteAuthorizationResponseMessage]
  -[_MRMediaRemoteMessageProtobuf hasPresentRouteAuthorizationStatusMessage]
  -[_MRMediaRemoteMessageProtobuf hasGetVolumeControlCapabilitiesMessage]
  -[_MRMediaRemoteMessageProtobuf hasGetVolumeControlCapabilitiesResultMessage]
  -[_MRMediaRemoteMessageProtobuf hasVolumeControlCapabilitiesDidChangeMessage]
  -[_MRMediaRemoteMessageProtobuf hasUpdateOutputDevicesMessage]
  -[_MRMediaRemoteMessageProtobuf hasRemoveOutputDevicesMessage]
  -[_MRMediaRemoteMessageProtobuf hasRemoteTextInputMessage]
  -[_MRMediaRemoteMessageProtobuf hasGetRemoteTextInputSessionMessage]
  -[_MRMediaRemoteMessageProtobuf hasPlaybackSessionRequestMessage]
  -[_MRMediaRemoteMessageProtobuf hasPlaybackSessionResponseMessage]
  -[_MRMediaRemoteMessageProtobuf hasSetDefaultSupportedCommandsMessage]
  -[_MRMediaRemoteMessageProtobuf hasPlaybackSessionMigrateRequestMessage]
  -[_MRMediaRemoteMessageProtobuf hasPlaybackSessionMigrateResponseMessage]
  -[_MRMediaRemoteMessageProtobuf hasErrorDescription]
  -[_MRMediaRemoteMessageProtobuf hasPlaybackSessionMigrateBeginMessage]
  -[_MRMediaRemoteMessageProtobuf hasPlaybackSessionMigrateEndMessage]
  -[_MRMediaRemoteMessageProtobuf sendCommandMessage]
  -[_MRMediaRemoteMessageProtobuf sendCommandResultMessage]
  -[_MRMediaRemoteMessageProtobuf getStateMessage]
  -[_MRMediaRemoteMessageProtobuf setStateMessage]
  -[_MRMediaRemoteMessageProtobuf setArtworkMessage]
  -[_MRMediaRemoteMessageProtobuf registerHIDDeviceMessage]
  -[_MRMediaRemoteMessageProtobuf registerHIDDeviceResultMessage]
  -[_MRMediaRemoteMessageProtobuf sendHIDEventMessage]
  -[_MRMediaRemoteMessageProtobuf sendHIDReportMessage]
  -[_MRMediaRemoteMessageProtobuf sendVirtualTouchEventMessage]
  -[_MRMediaRemoteMessageProtobuf notificationMessage]
  -[_MRMediaRemoteMessageProtobuf contentItemsChangedNotificationMessage]
  -[_MRMediaRemoteMessageProtobuf deviceInfoMessage]
  -[_MRMediaRemoteMessageProtobuf clientUpdatesConfigMessage]
  -[_MRMediaRemoteMessageProtobuf masterVolumeControlCapabilitiesDidChangeMessage]
  -[_MRMediaRemoteMessageProtobuf gameController]
  -[_MRMediaRemoteMessageProtobuf registerGameController]
  -[_MRMediaRemoteMessageProtobuf registerGameControllerResponse]
  -[_MRMediaRemoteMessageProtobuf unregisterGameController]
  -[_MRMediaRemoteMessageProtobuf registerForGameControllerEvents]
  -[_MRMediaRemoteMessageProtobuf keyboardMessage]
  -[_MRMediaRemoteMessageProtobuf getKeyboardMessage]
  -[_MRMediaRemoteMessageProtobuf textInputMessage]
  -[_MRMediaRemoteMessageProtobuf getVoiceInputDevicesMessage]
  -[_MRMediaRemoteMessageProtobuf getVoiceInputDevicesResponseMessage]
  -[_MRMediaRemoteMessageProtobuf registerVoiceInputDeviceMessage]
  -[_MRMediaRemoteMessageProtobuf registerVoiceInputDeviceResponseMessage]
  -[_MRMediaRemoteMessageProtobuf setRecordingStateMessage]
  -[_MRMediaRemoteMessageProtobuf sendVoiceInputMessage]
  -[_MRMediaRemoteMessageProtobuf playbackQueueRequest]
  -[_MRMediaRemoteMessageProtobuf transactionPackets]
  -[_MRMediaRemoteMessageProtobuf cryptoPairingMessage]
  -[_MRMediaRemoteMessageProtobuf gameControllerProperties]
  -[_MRMediaRemoteMessageProtobuf readyStateMessage]
  -[_MRMediaRemoteMessageProtobuf sendButtonEventMessage]
  -[_MRMediaRemoteMessageProtobuf setHiliteModeMessage]
  -[_MRMediaRemoteMessageProtobuf wakeDeviceMessage]
  -[_MRMediaRemoteMessageProtobuf genericMessage]
  -[_MRMediaRemoteMessageProtobuf sendPackedVirtualTouchEventMessage]
  -[_MRMediaRemoteMessageProtobuf sendLyricsEventMessage]
  -[_MRMediaRemoteMessageProtobuf setNowPlayingClientMessage]
  -[_MRMediaRemoteMessageProtobuf setNowPlayingPlayerMessage]
  -[_MRMediaRemoteMessageProtobuf modifyOutputContextRequestMessage]
  -[_MRMediaRemoteMessageProtobuf getVolumeMessage]
  -[_MRMediaRemoteMessageProtobuf getVolumeResultMessage]
  -[_MRMediaRemoteMessageProtobuf setVolumeMessage]
  -[_MRMediaRemoteMessageProtobuf volumeDidChangeMessage]
  -[_MRMediaRemoteMessageProtobuf removeClientMessage]
  -[_MRMediaRemoteMessageProtobuf removePlayerMessage]
  -[_MRMediaRemoteMessageProtobuf updateClientMessage]
  -[_MRMediaRemoteMessageProtobuf updateContentItemMessage]
  -[_MRMediaRemoteMessageProtobuf updateContentItemArtworkMessage]
  -[_MRMediaRemoteMessageProtobuf updatePlayerMessage]
  -[_MRMediaRemoteMessageProtobuf promptForRouteAuthorizationMessage]
  -[_MRMediaRemoteMessageProtobuf promptForRouteAuthorizationResponseMessage]
  -[_MRMediaRemoteMessageProtobuf presentRouteAuthorizationStatusMessage]
  -[_MRMediaRemoteMessageProtobuf getVolumeControlCapabilitiesMessage]
  -[_MRMediaRemoteMessageProtobuf getVolumeControlCapabilitiesResultMessage]
  -[_MRMediaRemoteMessageProtobuf volumeControlCapabilitiesDidChangeMessage]
  -[_MRMediaRemoteMessageProtobuf updateOutputDevicesMessage]
  -[_MRMediaRemoteMessageProtobuf removeOutputDevicesMessage]
  -[_MRMediaRemoteMessageProtobuf remoteTextInputMessage]
  -[_MRMediaRemoteMessageProtobuf getRemoteTextInputSessionMessage]
  -[_MRMediaRemoteMessageProtobuf playbackSessionRequestMessage]
  -[_MRMediaRemoteMessageProtobuf playbackSessionResponseMessage]
  -[_MRMediaRemoteMessageProtobuf setDefaultSupportedCommandsMessage]
  -[_MRMediaRemoteMessageProtobuf playbackSessionMigrateRequestMessage]
  -[_MRMediaRemoteMessageProtobuf playbackSessionMigrateResponseMessage]
  -[_MRMediaRemoteMessageProtobuf playbackSessionMigrateBeginMessage]
  -[_MRMediaRemoteMessageProtobuf playbackSessionMigrateEndMessage]


_MRRegisterVoiceInputDeviceMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasDescriptor
 @property  _MRVoiceInputDeviceDescriptorProtobuf *descriptor

  // instance methods
  -[_MRRegisterVoiceInputDeviceMessageProtobuf isEqual:]
  -[_MRRegisterVoiceInputDeviceMessageProtobuf copyWithZone:]
  -[_MRRegisterVoiceInputDeviceMessageProtobuf .cxx_destruct]
  -[_MRRegisterVoiceInputDeviceMessageProtobuf dictionaryRepresentation]
  -[_MRRegisterVoiceInputDeviceMessageProtobuf writeTo:]
  -[_MRRegisterVoiceInputDeviceMessageProtobuf mergeFrom:]
  -[_MRRegisterVoiceInputDeviceMessageProtobuf readFrom:]
  -[_MRRegisterVoiceInputDeviceMessageProtobuf copyTo:]
  -[_MRRegisterVoiceInputDeviceMessageProtobuf descriptor]
  -[_MRRegisterVoiceInputDeviceMessageProtobuf setDescriptor:]
  -[_MRRegisterVoiceInputDeviceMessageProtobuf hasDescriptor]


_MRVirtualTouchEventProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasX
 @property  double x
 @property  BOOL hasY
 @property  double y
 @property  BOOL hasPhase
 @property  int phase
 @property  BOOL hasFinger
 @property  int finger

  // instance methods
  -[_MRVirtualTouchEventProtobuf isEqual:]
  -[_MRVirtualTouchEventProtobuf copyWithZone:]
  -[_MRVirtualTouchEventProtobuf dictionaryRepresentation]
  -[_MRVirtualTouchEventProtobuf writeTo:]
  -[_MRVirtualTouchEventProtobuf mergeFrom:]
  -[_MRVirtualTouchEventProtobuf readFrom:]
  -[_MRVirtualTouchEventProtobuf copyTo:]
  -[_MRVirtualTouchEventProtobuf x]
  -[_MRVirtualTouchEventProtobuf y]
  -[_MRVirtualTouchEventProtobuf phase]
  -[_MRVirtualTouchEventProtobuf setPhase:]
  -[_MRVirtualTouchEventProtobuf setX:]
  -[_MRVirtualTouchEventProtobuf setY:]
  -[_MRVirtualTouchEventProtobuf setHasX:]
  -[_MRVirtualTouchEventProtobuf hasX]
  -[_MRVirtualTouchEventProtobuf setHasY:]
  -[_MRVirtualTouchEventProtobuf hasY]
  -[_MRVirtualTouchEventProtobuf phaseAsString:]
  -[_MRVirtualTouchEventProtobuf StringAsPhase:]
  -[_MRVirtualTouchEventProtobuf hasPhase]
  -[_MRVirtualTouchEventProtobuf setHasPhase:]
  -[_MRVirtualTouchEventProtobuf setFinger:]
  -[_MRVirtualTouchEventProtobuf finger]
  -[_MRVirtualTouchEventProtobuf setHasFinger:]
  -[_MRVirtualTouchEventProtobuf hasFinger]


_MRRegisterGameControllerMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasProperties
 @property  _MRGameControllerPropertiesProtobuf *properties

  // instance methods
  -[_MRRegisterGameControllerMessageProtobuf isEqual:]
  -[_MRRegisterGameControllerMessageProtobuf copyWithZone:]
  -[_MRRegisterGameControllerMessageProtobuf .cxx_destruct]
  -[_MRRegisterGameControllerMessageProtobuf dictionaryRepresentation]
  -[_MRRegisterGameControllerMessageProtobuf writeTo:]
  -[_MRRegisterGameControllerMessageProtobuf properties]
  -[_MRRegisterGameControllerMessageProtobuf mergeFrom:]
  -[_MRRegisterGameControllerMessageProtobuf readFrom:]
  -[_MRRegisterGameControllerMessageProtobuf copyTo:]
  -[_MRRegisterGameControllerMessageProtobuf setProperties:]
  -[_MRRegisterGameControllerMessageProtobuf hasProperties]


_MRNowPlayingClientProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasProcessIdentifier
 @property  int processIdentifier
 @property  BOOL hasBundleIdentifier
 @property  NSString *bundleIdentifier
 @property  BOOL hasParentApplicationBundleIdentifier
 @property  NSString *parentApplicationBundleIdentifier
 @property  BOOL hasProcessUserIdentifier
 @property  int processUserIdentifier
 @property  BOOL hasNowPlayingVisibility
 @property  int nowPlayingVisibility
 @property  BOOL hasTintColor
 @property  _MRColorProtobuf *tintColor
 @property  BOOL hasDisplayName
 @property  NSString *displayName
 @property  NSMutableArray *bundleIdentifierHierarchys
 @property  BOOL hasIsEmptyDeprecated
 @property  BOOL isEmptyDeprecated

  // class methods
  +[_MRNowPlayingClientProtobuf bundleIdentifierHierarchyType]

  // instance methods
  -[_MRNowPlayingClientProtobuf isEqual:]
  -[_MRNowPlayingClientProtobuf copyWithZone:]
  -[_MRNowPlayingClientProtobuf .cxx_destruct]
  -[_MRNowPlayingClientProtobuf processIdentifier]
  -[_MRNowPlayingClientProtobuf bundleIdentifier]
  -[_MRNowPlayingClientProtobuf dictionaryRepresentation]
  -[_MRNowPlayingClientProtobuf displayName]
  -[_MRNowPlayingClientProtobuf setBundleIdentifier:]
  -[_MRNowPlayingClientProtobuf writeTo:]
  -[_MRNowPlayingClientProtobuf mergeFrom:]
  -[_MRNowPlayingClientProtobuf readFrom:]
  -[_MRNowPlayingClientProtobuf copyTo:]
  -[_MRNowPlayingClientProtobuf setDisplayName:]
  -[_MRNowPlayingClientProtobuf tintColor]
  -[_MRNowPlayingClientProtobuf setTintColor:]
  -[_MRNowPlayingClientProtobuf setProcessIdentifier:]
  -[_MRNowPlayingClientProtobuf hasDisplayName]
  -[_MRNowPlayingClientProtobuf hasBundleIdentifier]
  -[_MRNowPlayingClientProtobuf hasProcessIdentifier]
  -[_MRNowPlayingClientProtobuf addBundleIdentifierHierarchy:]
  -[_MRNowPlayingClientProtobuf setParentApplicationBundleIdentifier:]
  -[_MRNowPlayingClientProtobuf bundleIdentifierHierarchysCount]
  -[_MRNowPlayingClientProtobuf clearBundleIdentifierHierarchys]
  -[_MRNowPlayingClientProtobuf bundleIdentifierHierarchyAtIndex:]
  -[_MRNowPlayingClientProtobuf setHasProcessIdentifier:]
  -[_MRNowPlayingClientProtobuf hasParentApplicationBundleIdentifier]
  -[_MRNowPlayingClientProtobuf setProcessUserIdentifier:]
  -[_MRNowPlayingClientProtobuf setHasProcessUserIdentifier:]
  -[_MRNowPlayingClientProtobuf hasProcessUserIdentifier]
  -[_MRNowPlayingClientProtobuf nowPlayingVisibility]
  -[_MRNowPlayingClientProtobuf setNowPlayingVisibility:]
  -[_MRNowPlayingClientProtobuf setHasNowPlayingVisibility:]
  -[_MRNowPlayingClientProtobuf hasNowPlayingVisibility]
  -[_MRNowPlayingClientProtobuf nowPlayingVisibilityAsString:]
  -[_MRNowPlayingClientProtobuf StringAsNowPlayingVisibility:]
  -[_MRNowPlayingClientProtobuf hasTintColor]
  -[_MRNowPlayingClientProtobuf setIsEmptyDeprecated:]
  -[_MRNowPlayingClientProtobuf setHasIsEmptyDeprecated:]
  -[_MRNowPlayingClientProtobuf hasIsEmptyDeprecated]
  -[_MRNowPlayingClientProtobuf parentApplicationBundleIdentifier]
  -[_MRNowPlayingClientProtobuf processUserIdentifier]
  -[_MRNowPlayingClientProtobuf bundleIdentifierHierarchys]
  -[_MRNowPlayingClientProtobuf setBundleIdentifierHierarchys:]
  -[_MRNowPlayingClientProtobuf isEmptyDeprecated]


MRNotificationClient : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_dispatch_queue> *notificationQueue
 @property  BOOL registeredForNowPlayingNotifications
 @property  BOOL receivesExternalScreenTypeChangedNotifications
 @property  BOOL receivesSupportedCommandsNotifications
 @property  BOOL receivesRoutesChangedNotifications
 @property  BOOL receivesVolumeControlNotifications
 @property  BOOL receivesOriginChangedNotifications
 @property  BOOL receivesPlaybackErrorNotifications
 @property  BOOL receivesVoiceInputRecordingStateNotifications

  // class methods
  +[MRNotificationClient nowPlayingNotifications]

  // instance methods
  -[MRNotificationClient init]
  -[MRNotificationClient .cxx_destruct]
  -[MRNotificationClient notificationQueue]
  -[MRNotificationClient registerForNowPlayingNotificationsWithQueue:]
  -[MRNotificationClient unregisterForNowPlayingNotifications]
  -[MRNotificationClient registerForNowPlayingNotificationsWithQueue:force:]
  -[MRNotificationClient setReceivesSupportedCommandsNotifications:]
  -[MRNotificationClient dispatchNotification:userInfo:object:]
  -[MRNotificationClient postNotification:userInfo:object:]
  -[MRNotificationClient _postNotification:userInfo:object:withHandler:]
  -[MRNotificationClient isRegisteredForNowPlayingNotifications]
  -[MRNotificationClient receivesExternalScreenTypeChangedNotifications]
  -[MRNotificationClient setReceivesExternalScreenTypeChangedNotifications:]
  -[MRNotificationClient receivesSupportedCommandsNotifications]
  -[MRNotificationClient receivesRoutesChangedNotifications]
  -[MRNotificationClient setReceivesRoutesChangedNotifications:]
  -[MRNotificationClient receivesVolumeControlNotifications]
  -[MRNotificationClient setReceivesVolumeControlNotifications:]
  -[MRNotificationClient receivesOriginChangedNotifications]
  -[MRNotificationClient setReceivesOriginChangedNotifications:]
  -[MRNotificationClient receivesPlaybackErrorNotifications]
  -[MRNotificationClient setReceivesPlaybackErrorNotifications:]
  -[MRNotificationClient receivesVoiceInputRecordingStateNotifications]
  -[MRNotificationClient setReceivesVoiceInputRecordingStateNotifications:]


MRNotification : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *notification
 @property  NSDictionary *userInfo
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSObject<OS_xpc_object> *xpcMessage

  // instance methods
  -[MRNotification queue]
  -[MRNotification userInfo]
  -[MRNotification .cxx_destruct]
  -[MRNotification notification]
  -[MRNotification setXpcMessage:]
  -[MRNotification xpcMessage]
  -[MRNotification initWithNotification:userInfo:queue:]


MRUserSettings : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL usePeerToPeerExternalDeviceConnections
 @property  BOOL useNoDelayOptionForExternalDeviceSockets
 @property  BOOL useDebugAVRouteWithoutVolumeControl
 @property  BOOL shouldInitializeTelevisionBonjourService
 @property  BOOL shouldInitializeGenericBonjourService
 @property  BOOL shouldInitializeRapportService
 @property  BOOL shouldLogPairingSetupCode
 @property  BOOL shouldLogArtwork
 @property  BOOL hasExternalDeviceSocketQOSLevelSet
 @property  long long externalDeviceSocketQOSLevel
 @property  BOOL externalDevicePairingAllowed
 @property  double externalDeviceTimeoutDuration
 @property  double externalDeviceNowPlayingInfoCoalesceDuration
 @property  double externalDeviceNowPlayingInfoArtworkCoalesceDuration
 @property  double externalDeviceDisconnectWaitDuration
 @property  double externalDeviceDisconnectSleepDuration
 @property  double externalDeviceSleepAssertionOnClientConnectDuration
 @property  double bluetoothDeviceResumeDuration
 @property  double broadcastCommandWaitDuration
 @property  double airPlayOutputContextInitTimeoutDuration
 @property  BOOL useExternalDeviceSystemPairing
 @property  long long maxTransactionMemorySize
 @property  double transactionWaitDurationOnOutOfMemory
 @property  double transactionWaitDurationOnXpcSend
 @property  double transactionWaitDurationOnNetworkSend
 @property  BOOL useSystemAudioContextForAirPlayTransport
 @property  BOOL useGenericTransportForHostedEndpoints
 @property  NSArray *connectedClientPIDs
 @property  double queuedCommandsTimeoutInterval
 @property  BOOL computeNowPlayingApplication
 @property  double nowPlayingApplicationTimeout
 @property  BOOL takelockScreenAssertion
 @property  BOOL useProactiveEndpoint
 @property  BOOL connectToEndpointWhenBeginsPlayback
 @property  BOOL connectToAllEndpointsWhenAnyEndpointBeginsPlayback
 @property  BOOL connectToUserSelectedEndpoint
 @property  double discoverEndpointTimeoutInterval
 @property  BOOL needNowPlayingForegroundState
 @property  double deviceRecentlyUsedInterval
 @property  double mediaRecentlyPlayedInterval
 @property  double endpointRecentlyUserSelectedInterval
 @property  double launchApplicationTimeoutInterval
 @property  BOOL supportProximityMigration
 @property  BOOL supportMigration
 @property  BOOL supportLastPlayingDevice
 @property  BOOL sendLastPlayingDeviceToHome
 @property  BOOL connectToAllEndpointsWhenInProximityToAnyDevice
 @property  double lastPlayingDeviceThresholdInterval
 @property  double sendPlaybackSessionUpdateToCompanionCoalesceInterval
 @property  double activeSystemEndpointStartupDelayToAllowAllPreviousClientsTimeToInitializeInterval

  // class methods
  +[MRUserSettings currentSettings]

  // instance methods
  -[MRUserSettings init]
  -[MRUserSettings .cxx_destruct]
  -[MRUserSettings _removeValueForKey:]
  -[MRUserSettings supportMigration]
  -[MRUserSettings externalDeviceTimeoutDuration]
  -[MRUserSettings useExternalDeviceSystemPairing]
  -[MRUserSettings _boolValueForKey:usingDefaultValue:]
  -[MRUserSettings _doubleValueForKey:usingDefaultValue:]
  -[MRUserSettings _integerValueForKey:usingDefaultValue:]
  -[MRUserSettings takelockScreenAssertion]
  -[MRUserSettings defaultSupportedCommandsData]
  -[MRUserSettings usePeerToPeerExternalDeviceConnections]
  -[MRUserSettings useNoDelayOptionForExternalDeviceSockets]
  -[MRUserSettings useDebugAVRouteWithoutVolumeControl]
  -[MRUserSettings shouldInitializeTelevisionBonjourService]
  -[MRUserSettings shouldInitializeGenericBonjourService]
  -[MRUserSettings shouldInitializeRapportService]
  -[MRUserSettings shouldLogPairingSetupCode]
  -[MRUserSettings shouldLogArtwork]
  -[MRUserSettings hasExternalDeviceSocketQOSLevelSet]
  -[MRUserSettings externalDeviceSocketQOSLevel]
  -[MRUserSettings externalDeviceNowPlayingInfoCoalesceDuration]
  -[MRUserSettings externalDeviceNowPlayingInfoArtworkCoalesceDuration]
  -[MRUserSettings externalDeviceDisconnectWaitDuration]
  -[MRUserSettings externalDeviceDisconnectSleepDuration]
  -[MRUserSettings externalDeviceSleepAssertionOnClientConnectDuration]
  -[MRUserSettings bluetoothDeviceResumeDuration]
  -[MRUserSettings broadcastCommandWaitDuration]
  -[MRUserSettings airPlayOutputContextInitTimeoutDuration]
  -[MRUserSettings maxTransactionMemorySize]
  -[MRUserSettings transactionWaitDurationOnOutOfMemory]
  -[MRUserSettings transactionWaitDurationOnXpcSend]
  -[MRUserSettings transactionWaitDurationOnNetworkSend]
  -[MRUserSettings useSystemAudioContextForAirPlayTransport]
  -[MRUserSettings useGenericTransportForHostedEndpoints]
  -[MRUserSettings connectedClientPIDs]
  -[MRUserSettings setConnectedClientPIDs:]
  -[MRUserSettings queuedCommandsTimeoutInterval]
  -[MRUserSettings nowPlayingApplicationTimeout]
  -[MRUserSettings computeNowPlayingApplication]
  -[MRUserSettings needNowPlayingForegroundState]
  -[MRUserSettings useProactiveEndpoint]
  -[MRUserSettings connectToEndpointWhenBeginsPlayback]
  -[MRUserSettings connectToAllEndpointsWhenAnyEndpointBeginsPlayback]
  -[MRUserSettings connectToUserSelectedEndpoint]
  -[MRUserSettings discoverEndpointTimeoutInterval]
  -[MRUserSettings deviceRecentlyUsedInterval]
  -[MRUserSettings mediaRecentlyPlayedInterval]
  -[MRUserSettings endpointRecentlyUserSelectedInterval]
  -[MRUserSettings launchApplicationTimeoutInterval]
  -[MRUserSettings supportProximityMigration]
  -[MRUserSettings supportLastPlayingDevice]
  -[MRUserSettings sendLastPlayingDeviceToHome]
  -[MRUserSettings lastPlayingDeviceThresholdInterval]
  -[MRUserSettings sendPlaybackSessionUpdateToCompanionCoalesceInterval]
  -[MRUserSettings connectToAllEndpointsWhenInProximityToAnyDevice]
  -[MRUserSettings defaultSupportedCommandsDataForClient:]
  -[MRUserSettings updateDefaultSupportedCommandsData:forClient:]
  -[MRUserSettings activeSystemEndpointStartupDelayToAllowAllPreviousClientsTimeToInitializeInterval]
  -[MRUserSettings localPlaybackState]
  -[MRUserSettings setLocalPlaybackState:]
  -[MRUserSettings localLastPlayingDate]
  -[MRUserSettings setLocalLastPlayingDate:]
  -[MRUserSettings isExternalDevicePairingAllowed]
  -[MRUserSettings setExternalDevicePairingAllowed:]


_MRAVAirPlaySecuritySettingsProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasPassword
 @property  NSString *password
 @property  BOOL hasSecurityType
 @property  int securityType

  // instance methods
  -[_MRAVAirPlaySecuritySettingsProtobuf isEqual:]
  -[_MRAVAirPlaySecuritySettingsProtobuf copyWithZone:]
  -[_MRAVAirPlaySecuritySettingsProtobuf password]
  -[_MRAVAirPlaySecuritySettingsProtobuf .cxx_destruct]
  -[_MRAVAirPlaySecuritySettingsProtobuf dictionaryRepresentation]
  -[_MRAVAirPlaySecuritySettingsProtobuf setPassword:]
  -[_MRAVAirPlaySecuritySettingsProtobuf writeTo:]
  -[_MRAVAirPlaySecuritySettingsProtobuf mergeFrom:]
  -[_MRAVAirPlaySecuritySettingsProtobuf readFrom:]
  -[_MRAVAirPlaySecuritySettingsProtobuf copyTo:]
  -[_MRAVAirPlaySecuritySettingsProtobuf setSecurityType:]
  -[_MRAVAirPlaySecuritySettingsProtobuf securityType]
  -[_MRAVAirPlaySecuritySettingsProtobuf hasPassword]
  -[_MRAVAirPlaySecuritySettingsProtobuf setHasSecurityType:]
  -[_MRAVAirPlaySecuritySettingsProtobuf hasSecurityType]
  -[_MRAVAirPlaySecuritySettingsProtobuf securityTypeAsString:]
  -[_MRAVAirPlaySecuritySettingsProtobuf StringAsSecurityType:]


_MRGameControllerPropertiesProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasPlayerIndex
 @property  unsigned int playerIndex
 @property  BOOL hasVendorName
 @property  NSString *vendorName
 @property  BOOL hasButtonAUpDelay
 @property  int buttonAUpDelay
 @property  BOOL hasProfile
 @property  int profile
 @property  BOOL hasSupportsExtendedMotion
 @property  BOOL supportsExtendedMotion

  // instance methods
  -[_MRGameControllerPropertiesProtobuf isEqual:]
  -[_MRGameControllerPropertiesProtobuf copyWithZone:]
  -[_MRGameControllerPropertiesProtobuf .cxx_destruct]
  -[_MRGameControllerPropertiesProtobuf dictionaryRepresentation]
  -[_MRGameControllerPropertiesProtobuf vendorName]
  -[_MRGameControllerPropertiesProtobuf writeTo:]
  -[_MRGameControllerPropertiesProtobuf mergeFrom:]
  -[_MRGameControllerPropertiesProtobuf readFrom:]
  -[_MRGameControllerPropertiesProtobuf copyTo:]
  -[_MRGameControllerPropertiesProtobuf profile]
  -[_MRGameControllerPropertiesProtobuf setProfile:]
  -[_MRGameControllerPropertiesProtobuf setPlayerIndex:]
  -[_MRGameControllerPropertiesProtobuf setVendorName:]
  -[_MRGameControllerPropertiesProtobuf setButtonAUpDelay:]
  -[_MRGameControllerPropertiesProtobuf playerIndex]
  -[_MRGameControllerPropertiesProtobuf buttonAUpDelay]
  -[_MRGameControllerPropertiesProtobuf setSupportsExtendedMotion:]
  -[_MRGameControllerPropertiesProtobuf supportsExtendedMotion]
  -[_MRGameControllerPropertiesProtobuf setHasPlayerIndex:]
  -[_MRGameControllerPropertiesProtobuf hasPlayerIndex]
  -[_MRGameControllerPropertiesProtobuf hasVendorName]
  -[_MRGameControllerPropertiesProtobuf setHasButtonAUpDelay:]
  -[_MRGameControllerPropertiesProtobuf hasButtonAUpDelay]
  -[_MRGameControllerPropertiesProtobuf setHasProfile:]
  -[_MRGameControllerPropertiesProtobuf hasProfile]
  -[_MRGameControllerPropertiesProtobuf profileAsString:]
  -[_MRGameControllerPropertiesProtobuf StringAsProfile:]
  -[_MRGameControllerPropertiesProtobuf setHasSupportsExtendedMotion:]
  -[_MRGameControllerPropertiesProtobuf hasSupportsExtendedMotion]


MRContentItemRequest : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  _MRContentItemProtobuf *item
 @property  _MRPlaybackQueueRequestProtobuf *request

  // class methods
  +[MRContentItemRequest supportsSecureCoding]

  // instance methods
  -[MRContentItemRequest encodeWithCoder:]
  -[MRContentItemRequest initWithCoder:]
  -[MRContentItemRequest .cxx_destruct]
  -[MRContentItemRequest item]
  -[MRContentItemRequest setItem:]
  -[MRContentItemRequest setRequest:]
  -[MRContentItemRequest request]
  -[MRContentItemRequest initWithItem:request:]


_MRSendPackedVirtualTouchEventMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasData
 @property  NSData *data

  // instance methods
  -[_MRSendPackedVirtualTouchEventMessageProtobuf isEqual:]
  -[_MRSendPackedVirtualTouchEventMessageProtobuf copyWithZone:]
  -[_MRSendPackedVirtualTouchEventMessageProtobuf .cxx_destruct]
  -[_MRSendPackedVirtualTouchEventMessageProtobuf data]
  -[_MRSendPackedVirtualTouchEventMessageProtobuf setData:]
  -[_MRSendPackedVirtualTouchEventMessageProtobuf dictionaryRepresentation]
  -[_MRSendPackedVirtualTouchEventMessageProtobuf writeTo:]
  -[_MRSendPackedVirtualTouchEventMessageProtobuf mergeFrom:]
  -[_MRSendPackedVirtualTouchEventMessageProtobuf readFrom:]
  -[_MRSendPackedVirtualTouchEventMessageProtobuf copyTo:]
  -[_MRSendPackedVirtualTouchEventMessageProtobuf hasData]


_MRAudioStreamPacketDescriptionProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasStartOffset
 @property  long long startOffset
 @property  BOOL hasVariableFramesInPacket
 @property  unsigned int variableFramesInPacket
 @property  BOOL hasDataByteSize
 @property  unsigned int dataByteSize

  // instance methods
  -[_MRAudioStreamPacketDescriptionProtobuf isEqual:]
  -[_MRAudioStreamPacketDescriptionProtobuf copyWithZone:]
  -[_MRAudioStreamPacketDescriptionProtobuf dictionaryRepresentation]
  -[_MRAudioStreamPacketDescriptionProtobuf writeTo:]
  -[_MRAudioStreamPacketDescriptionProtobuf mergeFrom:]
  -[_MRAudioStreamPacketDescriptionProtobuf readFrom:]
  -[_MRAudioStreamPacketDescriptionProtobuf copyTo:]
  -[_MRAudioStreamPacketDescriptionProtobuf startOffset]
  -[_MRAudioStreamPacketDescriptionProtobuf setStartOffset:]
  -[_MRAudioStreamPacketDescriptionProtobuf setHasStartOffset:]
  -[_MRAudioStreamPacketDescriptionProtobuf hasStartOffset]
  -[_MRAudioStreamPacketDescriptionProtobuf setVariableFramesInPacket:]
  -[_MRAudioStreamPacketDescriptionProtobuf setDataByteSize:]
  -[_MRAudioStreamPacketDescriptionProtobuf dataByteSize]
  -[_MRAudioStreamPacketDescriptionProtobuf variableFramesInPacket]
  -[_MRAudioStreamPacketDescriptionProtobuf setHasVariableFramesInPacket:]
  -[_MRAudioStreamPacketDescriptionProtobuf hasVariableFramesInPacket]
  -[_MRAudioStreamPacketDescriptionProtobuf setHasDataByteSize:]
  -[_MRAudioStreamPacketDescriptionProtobuf hasDataByteSize]


MRExternalDeviceController : NSObject /usr/lib/libSystem.B.dylib <NSNetServiceBrowserDelegate, NSNetServiceDelegate>
 @property  <MRExternalDeviceControllerDelegate> *delegate
 @property  NSString *bonjourServiceType
 @property  BOOL discovering
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MRExternalDeviceController externalDeviceClass]

  // instance methods
  -[MRExternalDeviceController dealloc]
  -[MRExternalDeviceController delegate]
  -[MRExternalDeviceController setDelegate:]
  -[MRExternalDeviceController .cxx_destruct]
  -[MRExternalDeviceController netServiceDidResolveAddress:]
  -[MRExternalDeviceController netService:didUpdateTXTRecordData:]
  -[MRExternalDeviceController netServiceBrowser:didRemoveService:moreComing:]
  -[MRExternalDeviceController netServiceBrowser:didFindService:moreComing:]
  -[MRExternalDeviceController bonjourServiceType]
  -[MRExternalDeviceController endDiscovery]
  -[MRExternalDeviceController _isManagedConfigIDAllowed:]
  -[MRExternalDeviceController initWithBonjourServiceType:]
  -[MRExternalDeviceController beginDiscovery]
  -[MRExternalDeviceController isDiscovering]


_MRPlaybackSessionMigrateRequestMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasPlaybackSession
 @property  _MRPlaybackSessionProtobuf *playbackSession
 @property  BOOL hasRequest
 @property  _MRPlaybackSessionMigrateRequestProtobuf *request
 @property  BOOL hasPlayerPath
 @property  _MRNowPlayingPlayerPathProtobuf *playerPath

  // instance methods
  -[_MRPlaybackSessionMigrateRequestMessageProtobuf isEqual:]
  -[_MRPlaybackSessionMigrateRequestMessageProtobuf copyWithZone:]
  -[_MRPlaybackSessionMigrateRequestMessageProtobuf .cxx_destruct]
  -[_MRPlaybackSessionMigrateRequestMessageProtobuf dictionaryRepresentation]
  -[_MRPlaybackSessionMigrateRequestMessageProtobuf writeTo:]
  -[_MRPlaybackSessionMigrateRequestMessageProtobuf mergeFrom:]
  -[_MRPlaybackSessionMigrateRequestMessageProtobuf readFrom:]
  -[_MRPlaybackSessionMigrateRequestMessageProtobuf copyTo:]
  -[_MRPlaybackSessionMigrateRequestMessageProtobuf setRequest:]
  -[_MRPlaybackSessionMigrateRequestMessageProtobuf request]
  -[_MRPlaybackSessionMigrateRequestMessageProtobuf hasRequest]
  -[_MRPlaybackSessionMigrateRequestMessageProtobuf setPlayerPath:]
  -[_MRPlaybackSessionMigrateRequestMessageProtobuf playerPath]
  -[_MRPlaybackSessionMigrateRequestMessageProtobuf hasPlayerPath]
  -[_MRPlaybackSessionMigrateRequestMessageProtobuf playbackSession]
  -[_MRPlaybackSessionMigrateRequestMessageProtobuf setPlaybackSession:]
  -[_MRPlaybackSessionMigrateRequestMessageProtobuf hasPlaybackSession]


MRExternalDeviceTransport : NSObject /usr/lib/libSystem.B.dylib
 @property  _MRDeviceInfoMessageProtobuf *deviceInfo
 @property  NSString *uid
 @property  NSString *name
 @property  NSString *hostname
 @property  long long port
 @property  BOOL requiresCustomPairing
 @property  BOOL shouldUseSystemAuthenticationPrompt
 @property  NSError *error
 @property  long long connectionType

  // instance methods
  -[MRExternalDeviceTransport name]
  -[MRExternalDeviceTransport port]
  -[MRExternalDeviceTransport .cxx_destruct]
  -[MRExternalDeviceTransport error]
  -[MRExternalDeviceTransport reset]
  -[MRExternalDeviceTransport uid]
  -[MRExternalDeviceTransport connectionType]
  -[MRExternalDeviceTransport hostname]
  -[MRExternalDeviceTransport getInputStream:outputStream:]
  -[MRExternalDeviceTransport deviceInfo]
  -[MRExternalDeviceTransport requiresCustomPairing]
  -[MRExternalDeviceTransport setShouldUseSystemAuthenticationPrompt:]
  -[MRExternalDeviceTransport shouldUseSystemAuthenticationPrompt]


MRNetServiceTransport : MRExternalDeviceTransport
 @property  NSNetService *netService
 @property  BOOL requiresCustomPairing

  // class methods
  +[MRNetServiceTransport createDeviceInfoFromNetService:]
  +[MRNetServiceTransport createDeviceInfoFromTXTRecord:]

  // instance methods
  -[MRNetServiceTransport name]
  -[MRNetServiceTransport port]
  -[MRNetServiceTransport .cxx_destruct]
  -[MRNetServiceTransport error]
  -[MRNetServiceTransport reset]
  -[MRNetServiceTransport connectionType]
  -[MRNetServiceTransport hostname]
  -[MRNetServiceTransport getInputStream:outputStream:]
  -[MRNetServiceTransport deviceInfo]
  -[MRNetServiceTransport initWithNetService:]
  -[MRNetServiceTransport netService]
  -[MRNetServiceTransport requiresCustomPairing]
  -[MRNetServiceTransport setShouldUseSystemAuthenticationPrompt:]
  -[MRNetServiceTransport setRequiresCustomPairing:]
  -[MRNetServiceTransport setNetService:]
  -[MRNetServiceTransport updateDeviceInfoWithTXTRecord:]
  -[MRNetServiceTransport shouldUseSystemAuthenticationPrompt]


MRAVOutputContextTransport : MRExternalDeviceTransport
 @property  MRAVOutputDevice *outputDevice
 @property  AVOutputDevice *avOutputDevice

  // instance methods
  -[MRAVOutputContextTransport dealloc]
  -[MRAVOutputContextTransport name]
  -[MRAVOutputContextTransport port]
  -[MRAVOutputContextTransport .cxx_destruct]
  -[MRAVOutputContextTransport error]
  -[MRAVOutputContextTransport reset]
  -[MRAVOutputContextTransport uid]
  -[MRAVOutputContextTransport hostname]
  -[MRAVOutputContextTransport getInputStream:outputStream:]
  -[MRAVOutputContextTransport deviceInfo]
  -[MRAVOutputContextTransport outputDevice]
  -[MRAVOutputContextTransport _outputContextDevicesDidChangeNotification:]
  -[MRAVOutputContextTransport avOutputDevice]
  -[MRAVOutputContextTransport requiresCustomPairing]
  -[MRAVOutputContextTransport setShouldUseSystemAuthenticationPrompt:]
  -[MRAVOutputContextTransport shouldUseSystemAuthenticationPrompt]
  -[MRAVOutputContextTransport _unregisterNotificationsForOutputContext:]
  -[MRAVOutputContextTransport _destroyRemoteControlContext]
  -[MRAVOutputContextTransport _onQueue_initializeOutputContext]
  -[MRAVOutputContextTransport _onQueue_resetStreams]
  -[MRAVOutputContextTransport _onQueue_createRemoteControlContextWithID:]
  -[MRAVOutputContextTransport _registerNotificationsForOutputContext:]
  -[MRAVOutputContextTransport initWithOutputDevice:avOutputDevice:connectionType:]


_MRRegisterHIDDeviceResultMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasErrorCode
 @property  unsigned int errorCode
 @property  BOOL hasDeviceIdentifier
 @property  unsigned int deviceIdentifier

  // instance methods
  -[_MRRegisterHIDDeviceResultMessageProtobuf isEqual:]
  -[_MRRegisterHIDDeviceResultMessageProtobuf copyWithZone:]
  -[_MRRegisterHIDDeviceResultMessageProtobuf dictionaryRepresentation]
  -[_MRRegisterHIDDeviceResultMessageProtobuf writeTo:]
  -[_MRRegisterHIDDeviceResultMessageProtobuf deviceIdentifier]
  -[_MRRegisterHIDDeviceResultMessageProtobuf setDeviceIdentifier:]
  -[_MRRegisterHIDDeviceResultMessageProtobuf mergeFrom:]
  -[_MRRegisterHIDDeviceResultMessageProtobuf readFrom:]
  -[_MRRegisterHIDDeviceResultMessageProtobuf copyTo:]
  -[_MRRegisterHIDDeviceResultMessageProtobuf errorCode]
  -[_MRRegisterHIDDeviceResultMessageProtobuf setErrorCode:]
  -[_MRRegisterHIDDeviceResultMessageProtobuf setHasErrorCode:]
  -[_MRRegisterHIDDeviceResultMessageProtobuf hasErrorCode]
  -[_MRRegisterHIDDeviceResultMessageProtobuf hasDeviceIdentifier]
  -[_MRRegisterHIDDeviceResultMessageProtobuf setHasDeviceIdentifier:]


MRNotificationServiceClient : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[MRNotificationServiceClient .cxx_destruct]
  -[MRNotificationServiceClient _handleVolumeDidChangeNotification:]
  -[MRNotificationServiceClient initWithServiceClient:]
  -[MRNotificationServiceClient registerCallbacks]
  -[MRNotificationServiceClient _processNeedsNonPlayerPathBasedNotificationsForBackwardCompatabilitySupport]
  -[MRNotificationServiceClient _shouldPostNotifications]
  -[MRNotificationServiceClient _postDefaultOriginNotifications:]
  -[MRNotificationServiceClient _processActiveOriginInvalidationHandlersForNotification:]
  -[MRNotificationServiceClient _processOriginInvalidationHandlersForNotification:]
  -[MRNotificationServiceClient _notificationFired:originNotification:nowPlayingNotification:]
  -[MRNotificationServiceClient _postDefaultAppilicationNotifications:]
  -[MRNotificationServiceClient _processActiveApplicationInvalidationHandlersForNotification:]
  -[MRNotificationServiceClient _processApplicationInvalidationHandlersForNotification:]
  -[MRNotificationServiceClient _notificationFired:playerPathNotifcation:originNotification:nowPlayingNotification:]
  -[MRNotificationServiceClient _postDefaultPlayerNotificationsWithUserInfo:object:]
  -[MRNotificationServiceClient _processActivePlayerInvalidationHandlersForNotification:]
  -[MRNotificationServiceClient _processPlayerInvalidationHandlersForNotification:]
  -[MRNotificationServiceClient _handleActiveOriginDidChangeNotification:]
  -[MRNotificationServiceClient _handleOriginDidRegisterNotification:]
  -[MRNotificationServiceClient _handleOriginDidUnregisterNotification:]
  -[MRNotificationServiceClient _handleVolumeControlCapabilitiesDidChangeNotification:]
  -[MRNotificationServiceClient _handleDeviceInfoDidChangeNotification:]
  -[MRNotificationServiceClient _handleActiveApplicationDidChangeNotification:]
  -[MRNotificationServiceClient _handleApplicationDidRegisterNotification:]
  -[MRNotificationServiceClient _handleApplicationDidUnregisterNotification:]
  -[MRNotificationServiceClient _handleApplicationClientStateDidChangeNotification:]
  -[MRNotificationServiceClient _handleApplicationDisplayNameDidChangeNotification:]
  -[MRNotificationServiceClient _handleApplicationDidForegroundNotification:]
  -[MRNotificationServiceClient _handleActivePlayerDidChangeNotification:]
  -[MRNotificationServiceClient _handlePlayerDidRegisterNotification:]
  -[MRNotificationServiceClient _handlePlayerDidUnregisterNotification:]
  -[MRNotificationServiceClient _handlePlayerPlaybackQueueDidChangeNotification:]
  -[MRNotificationServiceClient _handlePlayerContentItemsDidChangeNotification:]
  -[MRNotificationServiceClient _handlePlayerContentItemArtworkDidChangeNotification:]
  -[MRNotificationServiceClient _handlePlayerSupportedCommandsDidChangeNotification:]
  -[MRNotificationServiceClient _handlePlayerNowPlayingInfoDidChangeNotification:]
  -[MRNotificationServiceClient _handlePlayerPlaybackStateDidChangeNotification:]
  -[MRNotificationServiceClient _handlePlayerIsPlayingDidChangeNotification:]
  -[MRNotificationServiceClient _handlePlayerStateDidChangeNotification:]
  -[MRNotificationServiceClient _handleActiveSystemEndpointDidChangeNotification:]


_MRPlaybackSessionMigrateEndMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasRequest
 @property  _MRPlaybackSessionRequestProtobuf *request
 @property  BOOL hasPlayerPath
 @property  _MRNowPlayingPlayerPathProtobuf *playerPath
 @property  BOOL hasErrorCode
 @property  long long errorCode
 @property  BOOL hasErrorDescription
 @property  NSString *errorDescription

  // instance methods
  -[_MRPlaybackSessionMigrateEndMessageProtobuf isEqual:]
  -[_MRPlaybackSessionMigrateEndMessageProtobuf copyWithZone:]
  -[_MRPlaybackSessionMigrateEndMessageProtobuf .cxx_destruct]
  -[_MRPlaybackSessionMigrateEndMessageProtobuf dictionaryRepresentation]
  -[_MRPlaybackSessionMigrateEndMessageProtobuf writeTo:]
  -[_MRPlaybackSessionMigrateEndMessageProtobuf mergeFrom:]
  -[_MRPlaybackSessionMigrateEndMessageProtobuf readFrom:]
  -[_MRPlaybackSessionMigrateEndMessageProtobuf copyTo:]
  -[_MRPlaybackSessionMigrateEndMessageProtobuf setRequest:]
  -[_MRPlaybackSessionMigrateEndMessageProtobuf request]
  -[_MRPlaybackSessionMigrateEndMessageProtobuf errorCode]
  -[_MRPlaybackSessionMigrateEndMessageProtobuf setErrorCode:]
  -[_MRPlaybackSessionMigrateEndMessageProtobuf hasRequest]
  -[_MRPlaybackSessionMigrateEndMessageProtobuf setHasErrorCode:]
  -[_MRPlaybackSessionMigrateEndMessageProtobuf hasErrorCode]
  -[_MRPlaybackSessionMigrateEndMessageProtobuf errorDescription]
  -[_MRPlaybackSessionMigrateEndMessageProtobuf setErrorDescription:]
  -[_MRPlaybackSessionMigrateEndMessageProtobuf setPlayerPath:]
  -[_MRPlaybackSessionMigrateEndMessageProtobuf playerPath]
  -[_MRPlaybackSessionMigrateEndMessageProtobuf hasPlayerPath]
  -[_MRPlaybackSessionMigrateEndMessageProtobuf hasErrorDescription]


_MRUpdatePlayerMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasPlayerPath
 @property  _MRNowPlayingPlayerPathProtobuf *playerPath

  // instance methods
  -[_MRUpdatePlayerMessageProtobuf isEqual:]
  -[_MRUpdatePlayerMessageProtobuf copyWithZone:]
  -[_MRUpdatePlayerMessageProtobuf .cxx_destruct]
  -[_MRUpdatePlayerMessageProtobuf dictionaryRepresentation]
  -[_MRUpdatePlayerMessageProtobuf writeTo:]
  -[_MRUpdatePlayerMessageProtobuf mergeFrom:]
  -[_MRUpdatePlayerMessageProtobuf readFrom:]
  -[_MRUpdatePlayerMessageProtobuf copyTo:]
  -[_MRUpdatePlayerMessageProtobuf setPlayerPath:]
  -[_MRUpdatePlayerMessageProtobuf playerPath]
  -[_MRUpdatePlayerMessageProtobuf hasPlayerPath]


_MRGameControllerAccelerationProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasData
 @property  NSData *data
 @property  BOOL hasX
 @property  float x
 @property  BOOL hasY
 @property  float y
 @property  BOOL hasZ
 @property  float z
 @property  BOOL hasW
 @property  float w

  // instance methods
  -[_MRGameControllerAccelerationProtobuf isEqual:]
  -[_MRGameControllerAccelerationProtobuf copyWithZone:]
  -[_MRGameControllerAccelerationProtobuf .cxx_destruct]
  -[_MRGameControllerAccelerationProtobuf data]
  -[_MRGameControllerAccelerationProtobuf setData:]
  -[_MRGameControllerAccelerationProtobuf dictionaryRepresentation]
  -[_MRGameControllerAccelerationProtobuf writeTo:]
  -[_MRGameControllerAccelerationProtobuf mergeFrom:]
  -[_MRGameControllerAccelerationProtobuf readFrom:]
  -[_MRGameControllerAccelerationProtobuf copyTo:]
  -[_MRGameControllerAccelerationProtobuf x]
  -[_MRGameControllerAccelerationProtobuf y]
  -[_MRGameControllerAccelerationProtobuf z]
  -[_MRGameControllerAccelerationProtobuf setX:]
  -[_MRGameControllerAccelerationProtobuf setY:]
  -[_MRGameControllerAccelerationProtobuf setZ:]
  -[_MRGameControllerAccelerationProtobuf setW:]
  -[_MRGameControllerAccelerationProtobuf w]
  -[_MRGameControllerAccelerationProtobuf hasData]
  -[_MRGameControllerAccelerationProtobuf setHasX:]
  -[_MRGameControllerAccelerationProtobuf hasX]
  -[_MRGameControllerAccelerationProtobuf setHasY:]
  -[_MRGameControllerAccelerationProtobuf hasY]
  -[_MRGameControllerAccelerationProtobuf setHasZ:]
  -[_MRGameControllerAccelerationProtobuf hasZ]
  -[_MRGameControllerAccelerationProtobuf setHasW:]
  -[_MRGameControllerAccelerationProtobuf hasW]


_MRVolumeDidChangeMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasVolume
 @property  float volume
 @property  BOOL hasEndpointUID
 @property  NSString *endpointUID
 @property  BOOL hasOutputDeviceUID
 @property  NSString *outputDeviceUID

  // instance methods
  -[_MRVolumeDidChangeMessageProtobuf isEqual:]
  -[_MRVolumeDidChangeMessageProtobuf copyWithZone:]
  -[_MRVolumeDidChangeMessageProtobuf .cxx_destruct]
  -[_MRVolumeDidChangeMessageProtobuf dictionaryRepresentation]
  -[_MRVolumeDidChangeMessageProtobuf writeTo:]
  -[_MRVolumeDidChangeMessageProtobuf mergeFrom:]
  -[_MRVolumeDidChangeMessageProtobuf readFrom:]
  -[_MRVolumeDidChangeMessageProtobuf copyTo:]
  -[_MRVolumeDidChangeMessageProtobuf volume]
  -[_MRVolumeDidChangeMessageProtobuf setVolume:]
  -[_MRVolumeDidChangeMessageProtobuf setOutputDeviceUID:]
  -[_MRVolumeDidChangeMessageProtobuf hasOutputDeviceUID]
  -[_MRVolumeDidChangeMessageProtobuf outputDeviceUID]
  -[_MRVolumeDidChangeMessageProtobuf setHasVolume:]
  -[_MRVolumeDidChangeMessageProtobuf hasVolume]
  -[_MRVolumeDidChangeMessageProtobuf setEndpointUID:]
  -[_MRVolumeDidChangeMessageProtobuf hasEndpointUID]
  -[_MRVolumeDidChangeMessageProtobuf endpointUID]


_MRPlaybackSessionResponseMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasPlaybackSession
 @property  _MRPlaybackSessionProtobuf *playbackSession

  // instance methods
  -[_MRPlaybackSessionResponseMessageProtobuf isEqual:]
  -[_MRPlaybackSessionResponseMessageProtobuf copyWithZone:]
  -[_MRPlaybackSessionResponseMessageProtobuf .cxx_destruct]
  -[_MRPlaybackSessionResponseMessageProtobuf dictionaryRepresentation]
  -[_MRPlaybackSessionResponseMessageProtobuf writeTo:]
  -[_MRPlaybackSessionResponseMessageProtobuf mergeFrom:]
  -[_MRPlaybackSessionResponseMessageProtobuf readFrom:]
  -[_MRPlaybackSessionResponseMessageProtobuf copyTo:]
  -[_MRPlaybackSessionResponseMessageProtobuf playbackSession]
  -[_MRPlaybackSessionResponseMessageProtobuf setPlaybackSession:]
  -[_MRPlaybackSessionResponseMessageProtobuf hasPlaybackSession]


_MRTelevisionControllerBlockCallback : NSObject /usr/lib/libSystem.B.dylib
 @property  @? callbackBlock
 @property  NSObject<OS_dispatch_queue> *queue

  // instance methods
  -[_MRTelevisionControllerBlockCallback queue]
  -[_MRTelevisionControllerBlockCallback .cxx_destruct]
  -[_MRTelevisionControllerBlockCallback initWithCallbackBlock:queue:]
  -[_MRTelevisionControllerBlockCallback callbackBlock]


MRTelevisionController : MRExternalDeviceController <MRExternalDeviceControllerDelegate>
 @property  _MRTelevisionControllerBlockCallback *discoveryCallback
 @property  _MRTelevisionControllerBlockCallback *removalCallback
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MRTelevisionController externalDeviceClass]

  // instance methods
  -[MRTelevisionController init]
  -[MRTelevisionController .cxx_destruct]
  -[MRTelevisionController externalDeviceController:didRemoveDevice:]
  -[MRTelevisionController externalDeviceController:didDiscoverDevice:]
  -[MRTelevisionController discoveryCallback]
  -[MRTelevisionController setDiscoveryCallback:]
  -[MRTelevisionController removalCallback]
  -[MRTelevisionController setRemovalCallback:]


_MRSetReadyStateMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
  // instance methods
  -[_MRSetReadyStateMessageProtobuf isEqual:]
  -[_MRSetReadyStateMessageProtobuf copyWithZone:]
  -[_MRSetReadyStateMessageProtobuf dictionaryRepresentation]
  -[_MRSetReadyStateMessageProtobuf writeTo:]
  -[_MRSetReadyStateMessageProtobuf mergeFrom:]
  -[_MRSetReadyStateMessageProtobuf readFrom:]
  -[_MRSetReadyStateMessageProtobuf copyTo:]


_MRPlaybackSessionMigrateResponseMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasRequest
 @property  _MRPlaybackSessionMigrateRequestProtobuf *request

  // instance methods
  -[_MRPlaybackSessionMigrateResponseMessageProtobuf isEqual:]
  -[_MRPlaybackSessionMigrateResponseMessageProtobuf copyWithZone:]
  -[_MRPlaybackSessionMigrateResponseMessageProtobuf .cxx_destruct]
  -[_MRPlaybackSessionMigrateResponseMessageProtobuf dictionaryRepresentation]
  -[_MRPlaybackSessionMigrateResponseMessageProtobuf writeTo:]
  -[_MRPlaybackSessionMigrateResponseMessageProtobuf mergeFrom:]
  -[_MRPlaybackSessionMigrateResponseMessageProtobuf readFrom:]
  -[_MRPlaybackSessionMigrateResponseMessageProtobuf copyTo:]
  -[_MRPlaybackSessionMigrateResponseMessageProtobuf setRequest:]
  -[_MRPlaybackSessionMigrateResponseMessageProtobuf request]
  -[_MRPlaybackSessionMigrateResponseMessageProtobuf hasRequest]


_MRRemoteTextInputMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasTimestamp
 @property  double timestamp
 @property  BOOL hasVersion
 @property  unsigned long version
 @property  BOOL hasData
 @property  NSData *data

  // instance methods
  -[_MRRemoteTextInputMessageProtobuf isEqual:]
  -[_MRRemoteTextInputMessageProtobuf copyWithZone:]
  -[_MRRemoteTextInputMessageProtobuf .cxx_destruct]
  -[_MRRemoteTextInputMessageProtobuf data]
  -[_MRRemoteTextInputMessageProtobuf setData:]
  -[_MRRemoteTextInputMessageProtobuf version]
  -[_MRRemoteTextInputMessageProtobuf dictionaryRepresentation]
  -[_MRRemoteTextInputMessageProtobuf setVersion:]
  -[_MRRemoteTextInputMessageProtobuf timestamp]
  -[_MRRemoteTextInputMessageProtobuf hasTimestamp]
  -[_MRRemoteTextInputMessageProtobuf setTimestamp:]
  -[_MRRemoteTextInputMessageProtobuf writeTo:]
  -[_MRRemoteTextInputMessageProtobuf mergeFrom:]
  -[_MRRemoteTextInputMessageProtobuf readFrom:]
  -[_MRRemoteTextInputMessageProtobuf copyTo:]
  -[_MRRemoteTextInputMessageProtobuf setHasTimestamp:]
  -[_MRRemoteTextInputMessageProtobuf hasVersion]
  -[_MRRemoteTextInputMessageProtobuf setHasVersion:]
  -[_MRRemoteTextInputMessageProtobuf hasData]


MRAVRoutingDiscoverySession : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned int endpointFeatures
 @property  BOOL devicePresenceDetected
 @property  NSArray *availableEndpoints
 @property  NSArray *availableOutputDevices
 @property  unsigned int discoveryMode
 @property  BOOL alwaysAllowUpdates
 @property  unsigned int targetAudioSessionID
 @property  NSString *routingContextUID
 @property  NSArray *endpointsChangedCallbacks
 @property  NSArray *outputDevicesChangedCallbacks

  // class methods
  +[MRAVRoutingDiscoverySession discoverySessionWithEndpointFeatures:]
  +[MRAVRoutingDiscoverySession discoverySessionWithEndpointFeatures:enableThrottling:]

  // instance methods
  -[MRAVRoutingDiscoverySession .cxx_destruct]
  -[MRAVRoutingDiscoverySession _init]
  -[MRAVRoutingDiscoverySession addEndpointsChangedCallback:]
  -[MRAVRoutingDiscoverySession endpointsChangedCallbacks]
  -[MRAVRoutingDiscoverySession outputDevicesChangedCallbacks]
  -[MRAVRoutingDiscoverySession addOutputDevicesChangedCallback:]
  -[MRAVRoutingDiscoverySession removeEndpointsChangedCallback:]
  -[MRAVRoutingDiscoverySession removeOutputDevicesChangedCallback:]
  -[MRAVRoutingDiscoverySession alwaysAllowUpdates]
  -[MRAVRoutingDiscoverySession setAlwaysAllowUpdates:]


MRCompositeMessage : MRProtocolMessage
 @property  NSArray *messages

  // instance methods
  -[MRCompositeMessage .cxx_destruct]
  -[MRCompositeMessage addMessage:]
  -[MRCompositeMessage messages]


_MRTransactionPacketProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasKey
 @property  _MRTransactionKeyProtobuf *key
 @property  BOOL hasPacketData
 @property  NSData *packetData
 @property  BOOL hasIdentifier
 @property  NSString *identifier
 @property  BOOL hasTotalLength
 @property  unsigned long totalLength
 @property  BOOL hasTotalWritePosition
 @property  unsigned long totalWritePosition

  // class methods
  +[_MRTransactionPacketProtobuf initialize]

  // instance methods
  -[_MRTransactionPacketProtobuf isEqual:]
  -[_MRTransactionPacketProtobuf copyWithZone:]
  -[_MRTransactionPacketProtobuf key]
  -[_MRTransactionPacketProtobuf .cxx_destruct]
  -[_MRTransactionPacketProtobuf identifier]
  -[_MRTransactionPacketProtobuf setIdentifier:]
  -[_MRTransactionPacketProtobuf dictionaryRepresentation]
  -[_MRTransactionPacketProtobuf setKey:]
  -[_MRTransactionPacketProtobuf writeTo:]
  -[_MRTransactionPacketProtobuf mergeFrom:]
  -[_MRTransactionPacketProtobuf readFrom:]
  -[_MRTransactionPacketProtobuf copyTo:]
  -[_MRTransactionPacketProtobuf hasKey]
  -[_MRTransactionPacketProtobuf hasIdentifier]
  -[_MRTransactionPacketProtobuf setPacketData:]
  -[_MRTransactionPacketProtobuf hasPacketData]
  -[_MRTransactionPacketProtobuf setTotalLength:]
  -[_MRTransactionPacketProtobuf setHasTotalLength:]
  -[_MRTransactionPacketProtobuf hasTotalLength]
  -[_MRTransactionPacketProtobuf setTotalWritePosition:]
  -[_MRTransactionPacketProtobuf setHasTotalWritePosition:]
  -[_MRTransactionPacketProtobuf hasTotalWritePosition]
  -[_MRTransactionPacketProtobuf packetData]
  -[_MRTransactionPacketProtobuf totalLength]
  -[_MRTransactionPacketProtobuf totalWritePosition]
  -[_MRTransactionPacketProtobuf customDictionaryRepresentation]


_MRPlaybackQueueContextProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasRevision
 @property  NSString *revision

  // instance methods
  -[_MRPlaybackQueueContextProtobuf isEqual:]
  -[_MRPlaybackQueueContextProtobuf copyWithZone:]
  -[_MRPlaybackQueueContextProtobuf .cxx_destruct]
  -[_MRPlaybackQueueContextProtobuf dictionaryRepresentation]
  -[_MRPlaybackQueueContextProtobuf writeTo:]
  -[_MRPlaybackQueueContextProtobuf setRevision:]
  -[_MRPlaybackQueueContextProtobuf mergeFrom:]
  -[_MRPlaybackQueueContextProtobuf readFrom:]
  -[_MRPlaybackQueueContextProtobuf copyTo:]
  -[_MRPlaybackQueueContextProtobuf revision]
  -[_MRPlaybackQueueContextProtobuf hasRevision]


_MRGetVolumeControlCapabilitiesResultMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasCapabilities
 @property  _MRVolumeControlAvailabilityProtobuf *capabilities

  // instance methods
  -[_MRGetVolumeControlCapabilitiesResultMessageProtobuf isEqual:]
  -[_MRGetVolumeControlCapabilitiesResultMessageProtobuf copyWithZone:]
  -[_MRGetVolumeControlCapabilitiesResultMessageProtobuf .cxx_destruct]
  -[_MRGetVolumeControlCapabilitiesResultMessageProtobuf dictionaryRepresentation]
  -[_MRGetVolumeControlCapabilitiesResultMessageProtobuf writeTo:]
  -[_MRGetVolumeControlCapabilitiesResultMessageProtobuf mergeFrom:]
  -[_MRGetVolumeControlCapabilitiesResultMessageProtobuf readFrom:]
  -[_MRGetVolumeControlCapabilitiesResultMessageProtobuf copyTo:]
  -[_MRGetVolumeControlCapabilitiesResultMessageProtobuf capabilities]
  -[_MRGetVolumeControlCapabilitiesResultMessageProtobuf setCapabilities:]
  -[_MRGetVolumeControlCapabilitiesResultMessageProtobuf hasCapabilities]


_MRSetConnectionStateMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasState
 @property  int state

  // instance methods
  -[_MRSetConnectionStateMessageProtobuf isEqual:]
  -[_MRSetConnectionStateMessageProtobuf copyWithZone:]
  -[_MRSetConnectionStateMessageProtobuf dictionaryRepresentation]
  -[_MRSetConnectionStateMessageProtobuf state]
  -[_MRSetConnectionStateMessageProtobuf setState:]
  -[_MRSetConnectionStateMessageProtobuf writeTo:]
  -[_MRSetConnectionStateMessageProtobuf mergeFrom:]
  -[_MRSetConnectionStateMessageProtobuf readFrom:]
  -[_MRSetConnectionStateMessageProtobuf copyTo:]
  -[_MRSetConnectionStateMessageProtobuf hasState]
  -[_MRSetConnectionStateMessageProtobuf stateAsString:]
  -[_MRSetConnectionStateMessageProtobuf StringAsState:]
  -[_MRSetConnectionStateMessageProtobuf setHasState:]


_MRGetRemoteTextInputSessionProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
  // instance methods
  -[_MRGetRemoteTextInputSessionProtobuf isEqual:]
  -[_MRGetRemoteTextInputSessionProtobuf copyWithZone:]
  -[_MRGetRemoteTextInputSessionProtobuf dictionaryRepresentation]
  -[_MRGetRemoteTextInputSessionProtobuf writeTo:]
  -[_MRGetRemoteTextInputSessionProtobuf mergeFrom:]
  -[_MRGetRemoteTextInputSessionProtobuf readFrom:]
  -[_MRGetRemoteTextInputSessionProtobuf copyTo:]


MRAVRoutingClientController : NSObject /usr/lib/libSystem.B.dylib
 @property  MRMediaRemoteService *mediaRemoteService

  // instance methods
  -[MRAVRoutingClientController init]
  -[MRAVRoutingClientController dealloc]
  -[MRAVRoutingClientController .cxx_destruct]
  -[MRAVRoutingClientController _pickableRoutesDidChangeNotification:]
  -[MRAVRoutingClientController initWithMediaRemoteService:]
  -[MRAVRoutingClientController fetchPickableRoutesForCategory:completion:]
  -[MRAVRoutingClientController _cacheFetchedPickableRoutes:forCategory:]
  -[MRAVRoutingClientController _flushPendingCompletionHandlersWithPickableRoutes:forCategory:]
  -[MRAVRoutingClientController mediaRemoteService]


_MRAudioFormatSettingsProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasFormatSettingsPlistData
 @property  NSData *formatSettingsPlistData

  // instance methods
  -[_MRAudioFormatSettingsProtobuf isEqual:]
  -[_MRAudioFormatSettingsProtobuf copyWithZone:]
  -[_MRAudioFormatSettingsProtobuf .cxx_destruct]
  -[_MRAudioFormatSettingsProtobuf dictionaryRepresentation]
  -[_MRAudioFormatSettingsProtobuf writeTo:]
  -[_MRAudioFormatSettingsProtobuf mergeFrom:]
  -[_MRAudioFormatSettingsProtobuf readFrom:]
  -[_MRAudioFormatSettingsProtobuf copyTo:]
  -[_MRAudioFormatSettingsProtobuf setFormatSettingsPlistData:]
  -[_MRAudioFormatSettingsProtobuf formatSettingsPlistData]
  -[_MRAudioFormatSettingsProtobuf hasFormatSettingsPlistData]


_MRCommandOptionsProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasSourceID
 @property  NSString *sourceID
 @property  BOOL hasMediaType
 @property  NSString *mediaType
 @property  BOOL hasExternalPlayerCommand
 @property  BOOL externalPlayerCommand
 @property  BOOL hasSkipInterval
 @property  float skipInterval
 @property  BOOL hasPlaybackRate
 @property  float playbackRate
 @property  BOOL hasRating
 @property  float rating
 @property  BOOL hasNegative
 @property  BOOL negative
 @property  BOOL hasPlaybackPosition
 @property  double playbackPosition
 @property  BOOL hasRepeatMode
 @property  int repeatMode
 @property  BOOL hasShuffleMode
 @property  int shuffleMode
 @property  BOOL hasContextID
 @property  NSString *contextID
 @property  BOOL hasTrackID
 @property  unsigned long trackID
 @property  BOOL hasRadioStationID
 @property  long long radioStationID
 @property  BOOL hasRadioStationHash
 @property  NSString *radioStationHash
 @property  BOOL hasSystemAppPlaybackQueueData
 @property  NSData *systemAppPlaybackQueueData
 @property  BOOL hasDestinationAppDisplayID
 @property  NSString *destinationAppDisplayID
 @property  BOOL hasSendOptions
 @property  int sendOptions
 @property  BOOL hasRequestDefermentToPlaybackQueuePosition
 @property  BOOL requestDefermentToPlaybackQueuePosition
 @property  BOOL hasShouldOverrideManuallyCuratedQueue
 @property  BOOL shouldOverrideManuallyCuratedQueue
 @property  BOOL hasStationURL
 @property  NSString *stationURL
 @property  BOOL hasShouldBeginRadioPlayback
 @property  BOOL shouldBeginRadioPlayback
 @property  BOOL hasPlaybackQueueInsertionPosition
 @property  int playbackQueueInsertionPosition
 @property  BOOL hasContentItemID
 @property  NSString *contentItemID
 @property  BOOL hasPlaybackQueueOffset
 @property  int playbackQueueOffset
 @property  BOOL hasPlaybackQueueDestinationOffset
 @property  int playbackQueueDestinationOffset
 @property  BOOL hasLanguageOption
 @property  NSData *languageOption
 @property  BOOL hasPlaybackQueueContext
 @property  NSData *playbackQueueContext
 @property  BOOL hasInsertAfterContentItemID
 @property  NSString *insertAfterContentItemID
 @property  BOOL hasNowPlayingContentItemID
 @property  NSString *nowPlayingContentItemID
 @property  BOOL hasReplaceIntent
 @property  int replaceIntent
 @property  BOOL hasCommandID
 @property  NSString *commandID
 @property  BOOL hasSenderID
 @property  NSString *senderID
 @property  BOOL hasRemoteControlInterface
 @property  NSString *remoteControlInterface
 @property  BOOL hasBeginSeek
 @property  BOOL beginSeek
 @property  BOOL hasEndSeek
 @property  BOOL endSeek
 @property  BOOL hasPlaybackSession
 @property  NSData *playbackSession
 @property  BOOL hasUserIdentityData
 @property  NSData *userIdentityData

  // instance methods
  -[_MRCommandOptionsProtobuf isEqual:]
  -[_MRCommandOptionsProtobuf copyWithZone:]
  -[_MRCommandOptionsProtobuf .cxx_destruct]
  -[_MRCommandOptionsProtobuf dictionaryRepresentation]
  -[_MRCommandOptionsProtobuf contextID]
  -[_MRCommandOptionsProtobuf setContextID:]
  -[_MRCommandOptionsProtobuf writeTo:]
  -[_MRCommandOptionsProtobuf trackID]
  -[_MRCommandOptionsProtobuf mediaType]
  -[_MRCommandOptionsProtobuf mergeFrom:]
  -[_MRCommandOptionsProtobuf readFrom:]
  -[_MRCommandOptionsProtobuf copyTo:]
  -[_MRCommandOptionsProtobuf sourceID]
  -[_MRCommandOptionsProtobuf setSourceID:]
  -[_MRCommandOptionsProtobuf hasSourceID]
  -[_MRCommandOptionsProtobuf senderID]
  -[_MRCommandOptionsProtobuf setSenderID:]
  -[_MRCommandOptionsProtobuf rating]
  -[_MRCommandOptionsProtobuf setRating:]
  -[_MRCommandOptionsProtobuf hasRating]
  -[_MRCommandOptionsProtobuf setTrackID:]
  -[_MRCommandOptionsProtobuf setMediaType:]
  -[_MRCommandOptionsProtobuf playbackRate]
  -[_MRCommandOptionsProtobuf setPlaybackRate:]
  -[_MRCommandOptionsProtobuf hasMediaType]
  -[_MRCommandOptionsProtobuf setPlaybackPosition:]
  -[_MRCommandOptionsProtobuf repeatMode]
  -[_MRCommandOptionsProtobuf setRepeatMode:]
  -[_MRCommandOptionsProtobuf setContentItemID:]
  -[_MRCommandOptionsProtobuf contentItemID]
  -[_MRCommandOptionsProtobuf playbackPosition]
  -[_MRCommandOptionsProtobuf endSeek]
  -[_MRCommandOptionsProtobuf shouldOverrideManuallyCuratedQueue]
  -[_MRCommandOptionsProtobuf setShouldOverrideManuallyCuratedQueue:]
  -[_MRCommandOptionsProtobuf replaceIntent]
  -[_MRCommandOptionsProtobuf setReplaceIntent:]
  -[_MRCommandOptionsProtobuf commandID]
  -[_MRCommandOptionsProtobuf playbackQueueOffset]
  -[_MRCommandOptionsProtobuf insertAfterContentItemID]
  -[_MRCommandOptionsProtobuf stationURL]
  -[_MRCommandOptionsProtobuf languageOption]
  -[_MRCommandOptionsProtobuf shuffleMode]
  -[_MRCommandOptionsProtobuf setShuffleMode:]
  -[_MRCommandOptionsProtobuf radioStationHash]
  -[_MRCommandOptionsProtobuf setRadioStationHash:]
  -[_MRCommandOptionsProtobuf radioStationID]
  -[_MRCommandOptionsProtobuf setRadioStationID:]
  -[_MRCommandOptionsProtobuf setNegative:]
  -[_MRCommandOptionsProtobuf setHasPlaybackRate:]
  -[_MRCommandOptionsProtobuf hasPlaybackRate]
  -[_MRCommandOptionsProtobuf setHasRepeatMode:]
  -[_MRCommandOptionsProtobuf hasRepeatMode]
  -[_MRCommandOptionsProtobuf repeatModeAsString:]
  -[_MRCommandOptionsProtobuf StringAsRepeatMode:]
  -[_MRCommandOptionsProtobuf setHasShuffleMode:]
  -[_MRCommandOptionsProtobuf hasShuffleMode]
  -[_MRCommandOptionsProtobuf shuffleModeAsString:]
  -[_MRCommandOptionsProtobuf StringAsShuffleMode:]
  -[_MRCommandOptionsProtobuf hasRadioStationHash]
  -[_MRCommandOptionsProtobuf setDestinationAppDisplayID:]
  -[_MRCommandOptionsProtobuf hasDestinationAppDisplayID]
  -[_MRCommandOptionsProtobuf destinationAppDisplayID]
  -[_MRCommandOptionsProtobuf setCommandID:]
  -[_MRCommandOptionsProtobuf hasCommandID]
  -[_MRCommandOptionsProtobuf playbackSession]
  -[_MRCommandOptionsProtobuf hasPlaybackPosition]
  -[_MRCommandOptionsProtobuf setHasPlaybackPosition:]
  -[_MRCommandOptionsProtobuf setSkipInterval:]
  -[_MRCommandOptionsProtobuf setHasSkipInterval:]
  -[_MRCommandOptionsProtobuf hasSkipInterval]
  -[_MRCommandOptionsProtobuf skipInterval]
  -[_MRCommandOptionsProtobuf setPlaybackSession:]
  -[_MRCommandOptionsProtobuf hasPlaybackSession]
  -[_MRCommandOptionsProtobuf setSystemAppPlaybackQueueData:]
  -[_MRCommandOptionsProtobuf setStationURL:]
  -[_MRCommandOptionsProtobuf setLanguageOption:]
  -[_MRCommandOptionsProtobuf setPlaybackQueueContext:]
  -[_MRCommandOptionsProtobuf setInsertAfterContentItemID:]
  -[_MRCommandOptionsProtobuf setNowPlayingContentItemID:]
  -[_MRCommandOptionsProtobuf setRemoteControlInterface:]
  -[_MRCommandOptionsProtobuf setUserIdentityData:]
  -[_MRCommandOptionsProtobuf setExternalPlayerCommand:]
  -[_MRCommandOptionsProtobuf setHasExternalPlayerCommand:]
  -[_MRCommandOptionsProtobuf hasExternalPlayerCommand]
  -[_MRCommandOptionsProtobuf setHasRating:]
  -[_MRCommandOptionsProtobuf setHasNegative:]
  -[_MRCommandOptionsProtobuf hasNegative]
  -[_MRCommandOptionsProtobuf hasContextID]
  -[_MRCommandOptionsProtobuf setHasTrackID:]
  -[_MRCommandOptionsProtobuf hasTrackID]
  -[_MRCommandOptionsProtobuf setHasRadioStationID:]
  -[_MRCommandOptionsProtobuf hasRadioStationID]
  -[_MRCommandOptionsProtobuf hasSystemAppPlaybackQueueData]
  -[_MRCommandOptionsProtobuf sendOptions]
  -[_MRCommandOptionsProtobuf setSendOptions:]
  -[_MRCommandOptionsProtobuf setHasSendOptions:]
  -[_MRCommandOptionsProtobuf hasSendOptions]
  -[_MRCommandOptionsProtobuf sendOptionsAsString:]
  -[_MRCommandOptionsProtobuf StringAsSendOptions:]
  -[_MRCommandOptionsProtobuf setRequestDefermentToPlaybackQueuePosition:]
  -[_MRCommandOptionsProtobuf setHasRequestDefermentToPlaybackQueuePosition:]
  -[_MRCommandOptionsProtobuf hasRequestDefermentToPlaybackQueuePosition]
  -[_MRCommandOptionsProtobuf setHasShouldOverrideManuallyCuratedQueue:]
  -[_MRCommandOptionsProtobuf hasShouldOverrideManuallyCuratedQueue]
  -[_MRCommandOptionsProtobuf hasStationURL]
  -[_MRCommandOptionsProtobuf setShouldBeginRadioPlayback:]
  -[_MRCommandOptionsProtobuf setHasShouldBeginRadioPlayback:]
  -[_MRCommandOptionsProtobuf hasShouldBeginRadioPlayback]
  -[_MRCommandOptionsProtobuf setPlaybackQueueInsertionPosition:]
  -[_MRCommandOptionsProtobuf setHasPlaybackQueueInsertionPosition:]
  -[_MRCommandOptionsProtobuf hasPlaybackQueueInsertionPosition]
  -[_MRCommandOptionsProtobuf hasContentItemID]
  -[_MRCommandOptionsProtobuf setPlaybackQueueOffset:]
  -[_MRCommandOptionsProtobuf setHasPlaybackQueueOffset:]
  -[_MRCommandOptionsProtobuf hasPlaybackQueueOffset]
  -[_MRCommandOptionsProtobuf setPlaybackQueueDestinationOffset:]
  -[_MRCommandOptionsProtobuf setHasPlaybackQueueDestinationOffset:]
  -[_MRCommandOptionsProtobuf hasPlaybackQueueDestinationOffset]
  -[_MRCommandOptionsProtobuf hasLanguageOption]
  -[_MRCommandOptionsProtobuf hasPlaybackQueueContext]
  -[_MRCommandOptionsProtobuf hasInsertAfterContentItemID]
  -[_MRCommandOptionsProtobuf hasNowPlayingContentItemID]
  -[_MRCommandOptionsProtobuf setHasReplaceIntent:]
  -[_MRCommandOptionsProtobuf hasReplaceIntent]
  -[_MRCommandOptionsProtobuf replaceIntentAsString:]
  -[_MRCommandOptionsProtobuf StringAsReplaceIntent:]
  -[_MRCommandOptionsProtobuf hasSenderID]
  -[_MRCommandOptionsProtobuf hasRemoteControlInterface]
  -[_MRCommandOptionsProtobuf setBeginSeek:]
  -[_MRCommandOptionsProtobuf setHasBeginSeek:]
  -[_MRCommandOptionsProtobuf hasBeginSeek]
  -[_MRCommandOptionsProtobuf setEndSeek:]
  -[_MRCommandOptionsProtobuf setHasEndSeek:]
  -[_MRCommandOptionsProtobuf hasEndSeek]
  -[_MRCommandOptionsProtobuf hasUserIdentityData]
  -[_MRCommandOptionsProtobuf externalPlayerCommand]
  -[_MRCommandOptionsProtobuf negative]
  -[_MRCommandOptionsProtobuf systemAppPlaybackQueueData]
  -[_MRCommandOptionsProtobuf requestDefermentToPlaybackQueuePosition]
  -[_MRCommandOptionsProtobuf shouldBeginRadioPlayback]
  -[_MRCommandOptionsProtobuf playbackQueueInsertionPosition]
  -[_MRCommandOptionsProtobuf playbackQueueDestinationOffset]
  -[_MRCommandOptionsProtobuf playbackQueueContext]
  -[_MRCommandOptionsProtobuf nowPlayingContentItemID]
  -[_MRCommandOptionsProtobuf remoteControlInterface]
  -[_MRCommandOptionsProtobuf beginSeek]
  -[_MRCommandOptionsProtobuf userIdentityData]


MRSendCommandResultMessage : MRProtocolMessage
 @property  unsigned int sendError
 @property  NSArray *results

  // instance methods
  -[MRSendCommandResultMessage type]
  -[MRSendCommandResultMessage .cxx_destruct]
  -[MRSendCommandResultMessage results]
  -[MRSendCommandResultMessage sendError]
  -[MRSendCommandResultMessage initWithCommandID:sendError:results:]


_MRPlaybackSessionMigrateRequestEventProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  NSError *error
 @property  double duration
 @property  BOOL hasName
 @property  NSString *name
 @property  BOOL hasStartTimestamp
 @property  double startTimestamp
 @property  BOOL hasEndTimestamp
 @property  double endTimestamp
 @property  BOOL hasDuration
 @property  double duration
 @property  BOOL hasErrorCode
 @property  long long errorCode
 @property  BOOL hasErrorDescription
 @property  NSString *errorDescription

  // instance methods
  -[_MRPlaybackSessionMigrateRequestEventProtobuf isEqual:]
  -[_MRPlaybackSessionMigrateRequestEventProtobuf name]
  -[_MRPlaybackSessionMigrateRequestEventProtobuf copyWithZone:]
  -[_MRPlaybackSessionMigrateRequestEventProtobuf .cxx_destruct]
  -[_MRPlaybackSessionMigrateRequestEventProtobuf setName:]
  -[_MRPlaybackSessionMigrateRequestEventProtobuf error]
  -[_MRPlaybackSessionMigrateRequestEventProtobuf dictionaryRepresentation]
  -[_MRPlaybackSessionMigrateRequestEventProtobuf duration]
  -[_MRPlaybackSessionMigrateRequestEventProtobuf duration]
  -[_MRPlaybackSessionMigrateRequestEventProtobuf writeTo:]
  -[_MRPlaybackSessionMigrateRequestEventProtobuf mergeFrom:]
  -[_MRPlaybackSessionMigrateRequestEventProtobuf readFrom:]
  -[_MRPlaybackSessionMigrateRequestEventProtobuf copyTo:]
  -[_MRPlaybackSessionMigrateRequestEventProtobuf hasName]
  -[_MRPlaybackSessionMigrateRequestEventProtobuf setDuration:]
  -[_MRPlaybackSessionMigrateRequestEventProtobuf setStartTimestamp:]
  -[_MRPlaybackSessionMigrateRequestEventProtobuf startTimestamp]
  -[_MRPlaybackSessionMigrateRequestEventProtobuf errorCode]
  -[_MRPlaybackSessionMigrateRequestEventProtobuf endTimestamp]
  -[_MRPlaybackSessionMigrateRequestEventProtobuf hasDuration]
  -[_MRPlaybackSessionMigrateRequestEventProtobuf setErrorCode:]
  -[_MRPlaybackSessionMigrateRequestEventProtobuf setHasDuration:]
  -[_MRPlaybackSessionMigrateRequestEventProtobuf setHasErrorCode:]
  -[_MRPlaybackSessionMigrateRequestEventProtobuf hasErrorCode]
  -[_MRPlaybackSessionMigrateRequestEventProtobuf errorDescription]
  -[_MRPlaybackSessionMigrateRequestEventProtobuf setErrorDescription:]
  -[_MRPlaybackSessionMigrateRequestEventProtobuf setEndTimestamp:]
  -[_MRPlaybackSessionMigrateRequestEventProtobuf hasErrorDescription]
  -[_MRPlaybackSessionMigrateRequestEventProtobuf setHasStartTimestamp:]
  -[_MRPlaybackSessionMigrateRequestEventProtobuf hasStartTimestamp]
  -[_MRPlaybackSessionMigrateRequestEventProtobuf setHasEndTimestamp:]
  -[_MRPlaybackSessionMigrateRequestEventProtobuf hasEndTimestamp]


MRBlockGuard : MSVBlockGuard /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
  // instance methods
  -[MRBlockGuard initWithTimeout:reason:handler:]
  -[MRBlockGuard initWithTimeout:reason:queue:handler:]


MRCryptoPairingSessionBlockDelegate : NSObject /usr/lib/libSystem.B.dylib <MRCryptoPairingSessionDelegate>
 @property  @? dataExchangeBlock
 @property  @? showSetupCodeBlock
 @property  @? hideSetupCodeBlock
 @property  @? promptForSetupCodeBlock
 @property  @? exchangeCompleteBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MRCryptoPairingSessionBlockDelegate .cxx_destruct]
  -[MRCryptoPairingSessionBlockDelegate setDataExchangeBlock:]
  -[MRCryptoPairingSessionBlockDelegate setPromptForSetupCodeBlock:]
  -[MRCryptoPairingSessionBlockDelegate setExchangeCompleteBlock:]
  -[MRCryptoPairingSessionBlockDelegate pairingSession:didPrepareExchangeData:]
  -[MRCryptoPairingSessionBlockDelegate pairingSession:showSetupCode:]
  -[MRCryptoPairingSessionBlockDelegate pairingSessionHideSetupCode:]
  -[MRCryptoPairingSessionBlockDelegate pairingSession:promptForSetupCodeWithDelay:completion:]
  -[MRCryptoPairingSessionBlockDelegate pairingSession:didCompleteExchangeWithError:]
  -[MRCryptoPairingSessionBlockDelegate setShowSetupCodeBlock:]
  -[MRCryptoPairingSessionBlockDelegate setHideSetupCodeBlock:]
  -[MRCryptoPairingSessionBlockDelegate pairingSession:promptForSetupCodeWithCompletion:]
  -[MRCryptoPairingSessionBlockDelegate dataExchangeBlock]
  -[MRCryptoPairingSessionBlockDelegate showSetupCodeBlock]
  -[MRCryptoPairingSessionBlockDelegate hideSetupCodeBlock]
  -[MRCryptoPairingSessionBlockDelegate promptForSetupCodeBlock]
  -[MRCryptoPairingSessionBlockDelegate exchangeCompleteBlock]


_MRPresentRouteAuthorizationStatusMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasRoute
 @property  _MRAVOutputDeviceDescriptorProtobuf *route
 @property  BOOL hasStatus
 @property  int status

  // instance methods
  -[_MRPresentRouteAuthorizationStatusMessageProtobuf isEqual:]
  -[_MRPresentRouteAuthorizationStatusMessageProtobuf copyWithZone:]
  -[_MRPresentRouteAuthorizationStatusMessageProtobuf .cxx_destruct]
  -[_MRPresentRouteAuthorizationStatusMessageProtobuf dictionaryRepresentation]
  -[_MRPresentRouteAuthorizationStatusMessageProtobuf status]
  -[_MRPresentRouteAuthorizationStatusMessageProtobuf writeTo:]
  -[_MRPresentRouteAuthorizationStatusMessageProtobuf mergeFrom:]
  -[_MRPresentRouteAuthorizationStatusMessageProtobuf readFrom:]
  -[_MRPresentRouteAuthorizationStatusMessageProtobuf copyTo:]
  -[_MRPresentRouteAuthorizationStatusMessageProtobuf setStatus:]
  -[_MRPresentRouteAuthorizationStatusMessageProtobuf statusAsString:]
  -[_MRPresentRouteAuthorizationStatusMessageProtobuf StringAsStatus:]
  -[_MRPresentRouteAuthorizationStatusMessageProtobuf setHasStatus:]
  -[_MRPresentRouteAuthorizationStatusMessageProtobuf hasStatus]
  -[_MRPresentRouteAuthorizationStatusMessageProtobuf setRoute:]
  -[_MRPresentRouteAuthorizationStatusMessageProtobuf route]
  -[_MRPresentRouteAuthorizationStatusMessageProtobuf hasRoute]


_MRPlaybackSessionMigrateBeginMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasRequest
 @property  _MRPlaybackSessionRequestProtobuf *request
 @property  BOOL hasPlayerPath
 @property  _MRNowPlayingPlayerPathProtobuf *playerPath

  // instance methods
  -[_MRPlaybackSessionMigrateBeginMessageProtobuf isEqual:]
  -[_MRPlaybackSessionMigrateBeginMessageProtobuf copyWithZone:]
  -[_MRPlaybackSessionMigrateBeginMessageProtobuf .cxx_destruct]
  -[_MRPlaybackSessionMigrateBeginMessageProtobuf dictionaryRepresentation]
  -[_MRPlaybackSessionMigrateBeginMessageProtobuf writeTo:]
  -[_MRPlaybackSessionMigrateBeginMessageProtobuf mergeFrom:]
  -[_MRPlaybackSessionMigrateBeginMessageProtobuf readFrom:]
  -[_MRPlaybackSessionMigrateBeginMessageProtobuf copyTo:]
  -[_MRPlaybackSessionMigrateBeginMessageProtobuf setRequest:]
  -[_MRPlaybackSessionMigrateBeginMessageProtobuf request]
  -[_MRPlaybackSessionMigrateBeginMessageProtobuf hasRequest]
  -[_MRPlaybackSessionMigrateBeginMessageProtobuf setPlayerPath:]
  -[_MRPlaybackSessionMigrateBeginMessageProtobuf playerPath]
  -[_MRPlaybackSessionMigrateBeginMessageProtobuf hasPlayerPath]


_MRGetVolumeMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasOutputDeviceUID
 @property  NSString *outputDeviceUID

  // instance methods
  -[_MRGetVolumeMessageProtobuf isEqual:]
  -[_MRGetVolumeMessageProtobuf copyWithZone:]
  -[_MRGetVolumeMessageProtobuf .cxx_destruct]
  -[_MRGetVolumeMessageProtobuf dictionaryRepresentation]
  -[_MRGetVolumeMessageProtobuf writeTo:]
  -[_MRGetVolumeMessageProtobuf mergeFrom:]
  -[_MRGetVolumeMessageProtobuf readFrom:]
  -[_MRGetVolumeMessageProtobuf copyTo:]
  -[_MRGetVolumeMessageProtobuf setOutputDeviceUID:]
  -[_MRGetVolumeMessageProtobuf hasOutputDeviceUID]
  -[_MRGetVolumeMessageProtobuf outputDeviceUID]


_MRNotificationMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  NSMutableArray *notifications
 @property  NSMutableArray *userInfos
 @property  NSMutableArray *playerPaths

  // class methods
  +[_MRNotificationMessageProtobuf notificationType]
  +[_MRNotificationMessageProtobuf userInfoType]
  +[_MRNotificationMessageProtobuf playerPathType]

  // instance methods
  -[_MRNotificationMessageProtobuf isEqual:]
  -[_MRNotificationMessageProtobuf copyWithZone:]
  -[_MRNotificationMessageProtobuf .cxx_destruct]
  -[_MRNotificationMessageProtobuf dictionaryRepresentation]
  -[_MRNotificationMessageProtobuf writeTo:]
  -[_MRNotificationMessageProtobuf mergeFrom:]
  -[_MRNotificationMessageProtobuf readFrom:]
  -[_MRNotificationMessageProtobuf copyTo:]
  -[_MRNotificationMessageProtobuf notifications]
  -[_MRNotificationMessageProtobuf setNotifications:]
  -[_MRNotificationMessageProtobuf addUserInfo:]
  -[_MRNotificationMessageProtobuf userInfos]
  -[_MRNotificationMessageProtobuf userInfoAtIndex:]
  -[_MRNotificationMessageProtobuf setUserInfos:]
  -[_MRNotificationMessageProtobuf notificationsCount]
  -[_MRNotificationMessageProtobuf addNotification:]
  -[_MRNotificationMessageProtobuf addPlayerPath:]
  -[_MRNotificationMessageProtobuf clearNotifications]
  -[_MRNotificationMessageProtobuf notificationAtIndex:]
  -[_MRNotificationMessageProtobuf userInfosCount]
  -[_MRNotificationMessageProtobuf clearUserInfos]
  -[_MRNotificationMessageProtobuf playerPathsCount]
  -[_MRNotificationMessageProtobuf clearPlayerPaths]
  -[_MRNotificationMessageProtobuf playerPathAtIndex:]
  -[_MRNotificationMessageProtobuf playerPaths]
  -[_MRNotificationMessageProtobuf setPlayerPaths:]


MRTransactionPacket : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  NSData *data
 @property  _MRTransactionKeyProtobuf *key
 @property  _MRTransactionPacketProtobuf *protobuf
 @property  unsigned long writeLength
 @property  unsigned long writePosition
 @property  NSString *identifier
 @property  unsigned long actualLength
 @property  unsigned long totalLength
 @property  unsigned long totalWritePosition
 @property  BOOL readComplete
 @property  BOOL writeComplete

  // instance methods
  -[MRTransactionPacket copyWithZone:]
  -[MRTransactionPacket key]
  -[MRTransactionPacket .cxx_destruct]
  -[MRTransactionPacket data]
  -[MRTransactionPacket identifier]
  -[MRTransactionPacket isComplete]
  -[MRTransactionPacket initWithData:forKey:]
  -[MRTransactionPacket protobuf]
  -[MRTransactionPacket initWithProtobuf:]
  -[MRTransactionPacket totalLength]
  -[MRTransactionPacket totalWritePosition]
  -[MRTransactionPacket actualLength]
  -[MRTransactionPacket isReadComplete]
  -[MRTransactionPacket initWithPackets:]
  -[MRTransactionPacket writeComplete]
  -[MRTransactionPacket setWriteLength:]
  -[MRTransactionPacket isWriteComplete]
  -[MRTransactionPacket writeLength]
  -[MRTransactionPacket writePosition]


MRTransactionPacketAccumulator : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[MRTransactionPacketAccumulator init]
  -[MRTransactionPacketAccumulator .cxx_destruct]
  -[MRTransactionPacketAccumulator mergePacket:]


MRTransactionPacketizer : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[MRTransactionPacketizer isEmpty]
  -[MRTransactionPacketizer .cxx_destruct]
  -[MRTransactionPacketizer packetize:packageSize:completion:]
  -[MRTransactionPacketizer unpacketize:completion:]


MRTransactionSource : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned long name
 @property  _MRNowPlayingPlayerPathProtobuf *playerPath

  // instance methods
  -[MRTransactionSource name]
  -[MRTransactionSource .cxx_destruct]
  -[MRTransactionSource _begin]
  -[MRTransactionSource playerPath]
  -[MRTransactionSource _processMessage:]
  -[MRTransactionSource initWithName:playerPath:packets:delegate:]


MRTransactionDestination : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned long name
 @property  _MRNowPlayingPlayerPathProtobuf *playerPath

  // instance methods
  -[MRTransactionDestination name]
  -[MRTransactionDestination .cxx_destruct]
  -[MRTransactionDestination playerPath]
  -[MRTransactionDestination unpacketize:completion:]
  -[MRTransactionDestination initWithName:playerPath:]
  -[MRTransactionDestination packetsFromMessage:completion:]


MRNotificationMessage : MRProtocolMessage
 @property  NSString *notification
 @property  NSDictionary *userInfo
 @property  _MRNowPlayingPlayerPathProtobuf *playerPath

  // instance methods
  -[MRNotificationMessage type]
  -[MRNotificationMessage userInfo]
  -[MRNotificationMessage notification]
  -[MRNotificationMessage initWithNotification:]
  -[MRNotificationMessage playerPath]


MRSetArtworkMessage : MRProtocolMessage
 @property  NSData *artworkData

  // instance methods
  -[MRSetArtworkMessage type]
  -[MRSetArtworkMessage artworkData]
  -[MRSetArtworkMessage initWithArtworkData:]


MRProtocolMessage : NSObject /usr/lib/libSystem.B.dylib
 @property  PBCodable *underlyingCodableMessage
 @property  NSString *identifier
 @property  unsigned long timestamp
 @property  NSError *error
 @property  MRProtocolClientConnection *clientConnection
 @property  BOOL isReply
 @property  NSData *protobufData
 @property  unsigned long encryptionType
 @property  unsigned long type
 @property  NSString *description
 @property  unsigned long priority
 @property  BOOL shouldLog
 @property  MSVMultiCallback *messageSentCallbacks
 @property  MSVMultiCallback *messagePurgedCallbacks

  // class methods
  +[MRProtocolMessage protocolMessageWithProtobufData:]
  +[MRProtocolMessage currentProtocolVersion]

  // instance methods
  -[MRProtocolMessage dealloc]
  -[MRProtocolMessage type]
  -[MRProtocolMessage .cxx_destruct]
  -[MRProtocolMessage identifier]
  -[MRProtocolMessage error]
  -[MRProtocolMessage setError:]
  -[MRProtocolMessage setIdentifier:]
  -[MRProtocolMessage timestamp]
  -[MRProtocolMessage priority]
  -[MRProtocolMessage setTimestamp:]
  -[MRProtocolMessage encryptionType]
  -[MRProtocolMessage reply]
  -[MRProtocolMessage shouldLog]
  -[MRProtocolMessage clientConnection]
  -[MRProtocolMessage setClientConnection:]
  -[MRProtocolMessage isReply]
  -[MRProtocolMessage setIsReply:]
  -[MRProtocolMessage setUnderlyingCodableMessage:]
  -[MRProtocolMessage underlyingCodableMessage]
  -[MRProtocolMessage initWithUnderlyingCodableMessage:error:]
  -[MRProtocolMessage messagePurgedCallbacks]
  -[MRProtocolMessage replyWithMessage:]
  -[MRProtocolMessage protobufData]
  -[MRProtocolMessage messageSentCallbacks]


MRSupportedProtocolMessages : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  unsigned long lastSupportedMessageType

  // class methods
  +[MRSupportedProtocolMessages supportsSecureCoding]

  // instance methods
  -[MRSupportedProtocolMessages encodeWithCoder:]
  -[MRSupportedProtocolMessages initWithCoder:]
  -[MRSupportedProtocolMessages initWithLastSupportedMessageType:]
  -[MRSupportedProtocolMessages lastSupportedMessageType]
  -[MRSupportedProtocolMessages isSupported:]


_MRUpdateClientMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasClient
 @property  _MRNowPlayingClientProtobuf *client

  // instance methods
  -[_MRUpdateClientMessageProtobuf isEqual:]
  -[_MRUpdateClientMessageProtobuf copyWithZone:]
  -[_MRUpdateClientMessageProtobuf .cxx_destruct]
  -[_MRUpdateClientMessageProtobuf dictionaryRepresentation]
  -[_MRUpdateClientMessageProtobuf client]
  -[_MRUpdateClientMessageProtobuf setClient:]
  -[_MRUpdateClientMessageProtobuf writeTo:]
  -[_MRUpdateClientMessageProtobuf mergeFrom:]
  -[_MRUpdateClientMessageProtobuf readFrom:]
  -[_MRUpdateClientMessageProtobuf copyTo:]
  -[_MRUpdateClientMessageProtobuf hasClient]


_MRTransactionPacketsProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  NSMutableArray *packets

  // class methods
  +[_MRTransactionPacketsProtobuf packetsType]

  // instance methods
  -[_MRTransactionPacketsProtobuf isEqual:]
  -[_MRTransactionPacketsProtobuf copyWithZone:]
  -[_MRTransactionPacketsProtobuf .cxx_destruct]
  -[_MRTransactionPacketsProtobuf dictionaryRepresentation]
  -[_MRTransactionPacketsProtobuf writeTo:]
  -[_MRTransactionPacketsProtobuf mergeFrom:]
  -[_MRTransactionPacketsProtobuf readFrom:]
  -[_MRTransactionPacketsProtobuf copyTo:]
  -[_MRTransactionPacketsProtobuf addPackets:]
  -[_MRTransactionPacketsProtobuf setPackets:]
  -[_MRTransactionPacketsProtobuf packets]
  -[_MRTransactionPacketsProtobuf packetsCount]
  -[_MRTransactionPacketsProtobuf clearPackets]
  -[_MRTransactionPacketsProtobuf packetsAtIndex:]


_MRDeviceInfoMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasUniqueIdentifier
 @property  NSString *uniqueIdentifier
 @property  BOOL hasName
 @property  NSString *name
 @property  BOOL hasLocalizedModelName
 @property  NSString *localizedModelName
 @property  BOOL hasSystemBuildVersion
 @property  NSString *systemBuildVersion
 @property  BOOL hasApplicationBundleIdentifier
 @property  NSString *applicationBundleIdentifier
 @property  BOOL hasApplicationBundleVersion
 @property  NSString *applicationBundleVersion
 @property  BOOL hasProtocolVersion
 @property  unsigned long protocolVersion
 @property  BOOL hasLastSupportedMessageType
 @property  unsigned int lastSupportedMessageType
 @property  BOOL hasSupportsSystemPairing
 @property  BOOL supportsSystemPairing
 @property  BOOL hasAllowsPairing
 @property  BOOL allowsPairing
 @property  BOOL hasConnected
 @property  BOOL connected
 @property  BOOL hasSystemMediaApplication
 @property  NSString *systemMediaApplication
 @property  BOOL hasSupportsACL
 @property  BOOL supportsACL
 @property  BOOL hasSupportsSharedQueue
 @property  BOOL supportsSharedQueue
 @property  BOOL hasSupportsExtendedMotion
 @property  BOOL supportsExtendedMotion
 @property  BOOL hasBluetoothAddress
 @property  NSData *bluetoothAddress
 @property  BOOL hasSharedQueueVersion
 @property  unsigned int sharedQueueVersion
 @property  BOOL hasDeviceUID
 @property  NSString *deviceUID
 @property  BOOL hasManagedConfigDeviceID
 @property  NSString *managedConfigDeviceID
 @property  BOOL hasDeviceClass
 @property  int deviceClass
 @property  BOOL hasLogicalDeviceCount
 @property  unsigned int logicalDeviceCount
 @property  BOOL hasTightlySyncedGroup
 @property  BOOL tightlySyncedGroup
 @property  BOOL hasIsProxyGroupPlayer
 @property  BOOL isProxyGroupPlayer
 @property  BOOL hasTightSyncUID
 @property  NSString *tightSyncUID
 @property  BOOL hasGroupUID
 @property  NSString *groupUID
 @property  BOOL hasGroupName
 @property  NSString *groupName
 @property  NSMutableArray *groupedDevices
 @property  BOOL hasIsGroupLeader
 @property  BOOL isGroupLeader
 @property  BOOL hasIsAirplayActive
 @property  BOOL isAirplayActive
 @property  BOOL hasSystemPodcastApplication
 @property  NSString *systemPodcastApplication
 @property  BOOL hasSenderDefaultGroupUID
 @property  NSString *senderDefaultGroupUID
 @property  NSMutableArray *airplayReceivers
 @property  BOOL hasLinkAgent
 @property  NSString *linkAgent

  // class methods
  +[_MRDeviceInfoMessageProtobuf groupedDevicesType]
  +[_MRDeviceInfoMessageProtobuf airplayReceiversType]

  // instance methods
  -[_MRDeviceInfoMessageProtobuf isEqual:]
  -[_MRDeviceInfoMessageProtobuf name]
  -[_MRDeviceInfoMessageProtobuf copyWithZone:]
  -[_MRDeviceInfoMessageProtobuf .cxx_destruct]
  -[_MRDeviceInfoMessageProtobuf setName:]
  -[_MRDeviceInfoMessageProtobuf dictionaryRepresentation]
  -[_MRDeviceInfoMessageProtobuf uniqueIdentifier]
  -[_MRDeviceInfoMessageProtobuf writeTo:]
  -[_MRDeviceInfoMessageProtobuf groupName]
  -[_MRDeviceInfoMessageProtobuf setGroupName:]
  -[_MRDeviceInfoMessageProtobuf mergeFrom:]
  -[_MRDeviceInfoMessageProtobuf readFrom:]
  -[_MRDeviceInfoMessageProtobuf copyTo:]
  -[_MRDeviceInfoMessageProtobuf setUniqueIdentifier:]
  -[_MRDeviceInfoMessageProtobuf hasName]
  -[_MRDeviceInfoMessageProtobuf deviceClass]
  -[_MRDeviceInfoMessageProtobuf setApplicationBundleIdentifier:]
  -[_MRDeviceInfoMessageProtobuf applicationBundleIdentifier]
  -[_MRDeviceInfoMessageProtobuf hasConnected]
  -[_MRDeviceInfoMessageProtobuf setConnected:]
  -[_MRDeviceInfoMessageProtobuf setHasConnected:]
  -[_MRDeviceInfoMessageProtobuf connected]
  -[_MRDeviceInfoMessageProtobuf protocolVersion]
  -[_MRDeviceInfoMessageProtobuf setProtocolVersion:]
  -[_MRDeviceInfoMessageProtobuf setHasProtocolVersion:]
  -[_MRDeviceInfoMessageProtobuf hasProtocolVersion]
  -[_MRDeviceInfoMessageProtobuf hasUniqueIdentifier]
  -[_MRDeviceInfoMessageProtobuf bluetoothAddress]
  -[_MRDeviceInfoMessageProtobuf setBluetoothAddress:]
  -[_MRDeviceInfoMessageProtobuf setDeviceClass:]
  -[_MRDeviceInfoMessageProtobuf isGroupLeader]
  -[_MRDeviceInfoMessageProtobuf hasGroupName]
  -[_MRDeviceInfoMessageProtobuf isProxyGroupPlayer]
  -[_MRDeviceInfoMessageProtobuf groupUID]
  -[_MRDeviceInfoMessageProtobuf deviceUID]
  -[_MRDeviceInfoMessageProtobuf setDeviceUID:]
  -[_MRDeviceInfoMessageProtobuf systemBuildVersion]
  -[_MRDeviceInfoMessageProtobuf setIsGroupLeader:]
  -[_MRDeviceInfoMessageProtobuf setIsProxyGroupPlayer:]
  -[_MRDeviceInfoMessageProtobuf setLastSupportedMessageType:]
  -[_MRDeviceInfoMessageProtobuf setApplicationBundleVersion:]
  -[_MRDeviceInfoMessageProtobuf hasLastSupportedMessageType]
  -[_MRDeviceInfoMessageProtobuf lastSupportedMessageType]
  -[_MRDeviceInfoMessageProtobuf setSupportsExtendedMotion:]
  -[_MRDeviceInfoMessageProtobuf supportsExtendedMotion]
  -[_MRDeviceInfoMessageProtobuf airplayReceivers]
  -[_MRDeviceInfoMessageProtobuf setHasIsProxyGroupPlayer:]
  -[_MRDeviceInfoMessageProtobuf hasIsProxyGroupPlayer]
  -[_MRDeviceInfoMessageProtobuf setLinkAgent:]
  -[_MRDeviceInfoMessageProtobuf setSupportsSharedQueue:]
  -[_MRDeviceInfoMessageProtobuf setHasSupportsSharedQueue:]
  -[_MRDeviceInfoMessageProtobuf hasSupportsSharedQueue]
  -[_MRDeviceInfoMessageProtobuf supportsSharedQueue]
  -[_MRDeviceInfoMessageProtobuf setHasIsGroupLeader:]
  -[_MRDeviceInfoMessageProtobuf hasIsGroupLeader]
  -[_MRDeviceInfoMessageProtobuf setHasSupportsExtendedMotion:]
  -[_MRDeviceInfoMessageProtobuf hasSupportsExtendedMotion]
  -[_MRDeviceInfoMessageProtobuf hasDeviceUID]
  -[_MRDeviceInfoMessageProtobuf hasGroupUID]
  -[_MRDeviceInfoMessageProtobuf setGroupUID:]
  -[_MRDeviceInfoMessageProtobuf isAirplayActive]
  -[_MRDeviceInfoMessageProtobuf setIsAirplayActive:]
  -[_MRDeviceInfoMessageProtobuf tightSyncUID]
  -[_MRDeviceInfoMessageProtobuf setTightSyncUID:]
  -[_MRDeviceInfoMessageProtobuf localizedModelName]
  -[_MRDeviceInfoMessageProtobuf applicationBundleVersion]
  -[_MRDeviceInfoMessageProtobuf systemMediaApplication]
  -[_MRDeviceInfoMessageProtobuf setSystemMediaApplication:]
  -[_MRDeviceInfoMessageProtobuf setSystemPodcastApplication:]
  -[_MRDeviceInfoMessageProtobuf senderDefaultGroupUID]
  -[_MRDeviceInfoMessageProtobuf managedConfigDeviceID]
  -[_MRDeviceInfoMessageProtobuf setManagedConfigDeviceID:]
  -[_MRDeviceInfoMessageProtobuf tightlySyncedGroup]
  -[_MRDeviceInfoMessageProtobuf allowsPairing]
  -[_MRDeviceInfoMessageProtobuf supportsSystemPairing]
  -[_MRDeviceInfoMessageProtobuf supportsACL]
  -[_MRDeviceInfoMessageProtobuf setSharedQueueVersion:]
  -[_MRDeviceInfoMessageProtobuf hasSharedQueueVersion]
  -[_MRDeviceInfoMessageProtobuf sharedQueueVersion]
  -[_MRDeviceInfoMessageProtobuf setLocalizedModelName:]
  -[_MRDeviceInfoMessageProtobuf setSystemBuildVersion:]
  -[_MRDeviceInfoMessageProtobuf setTightlySyncedGroup:]
  -[_MRDeviceInfoMessageProtobuf setSenderDefaultGroupUID:]
  -[_MRDeviceInfoMessageProtobuf setAllowsPairing:]
  -[_MRDeviceInfoMessageProtobuf setSupportsSystemPairing:]
  -[_MRDeviceInfoMessageProtobuf setSupportsACL:]
  -[_MRDeviceInfoMessageProtobuf logicalDeviceCount]
  -[_MRDeviceInfoMessageProtobuf setLogicalDeviceCount:]
  -[_MRDeviceInfoMessageProtobuf setGroupedDevices:]
  -[_MRDeviceInfoMessageProtobuf groupedDevices]
  -[_MRDeviceInfoMessageProtobuf setAirplayReceivers:]
  -[_MRDeviceInfoMessageProtobuf linkAgent]
  -[_MRDeviceInfoMessageProtobuf addGroupedDevices:]
  -[_MRDeviceInfoMessageProtobuf addAirplayReceivers:]
  -[_MRDeviceInfoMessageProtobuf groupedDevicesCount]
  -[_MRDeviceInfoMessageProtobuf clearGroupedDevices]
  -[_MRDeviceInfoMessageProtobuf groupedDevicesAtIndex:]
  -[_MRDeviceInfoMessageProtobuf airplayReceiversCount]
  -[_MRDeviceInfoMessageProtobuf clearAirplayReceivers]
  -[_MRDeviceInfoMessageProtobuf airplayReceiversAtIndex:]
  -[_MRDeviceInfoMessageProtobuf hasLocalizedModelName]
  -[_MRDeviceInfoMessageProtobuf hasSystemBuildVersion]
  -[_MRDeviceInfoMessageProtobuf hasApplicationBundleIdentifier]
  -[_MRDeviceInfoMessageProtobuf hasApplicationBundleVersion]
  -[_MRDeviceInfoMessageProtobuf setHasLastSupportedMessageType:]
  -[_MRDeviceInfoMessageProtobuf setHasSupportsSystemPairing:]
  -[_MRDeviceInfoMessageProtobuf hasSupportsSystemPairing]
  -[_MRDeviceInfoMessageProtobuf setHasAllowsPairing:]
  -[_MRDeviceInfoMessageProtobuf hasAllowsPairing]
  -[_MRDeviceInfoMessageProtobuf hasSystemMediaApplication]
  -[_MRDeviceInfoMessageProtobuf setHasSupportsACL:]
  -[_MRDeviceInfoMessageProtobuf hasSupportsACL]
  -[_MRDeviceInfoMessageProtobuf hasBluetoothAddress]
  -[_MRDeviceInfoMessageProtobuf setHasSharedQueueVersion:]
  -[_MRDeviceInfoMessageProtobuf hasManagedConfigDeviceID]
  -[_MRDeviceInfoMessageProtobuf setHasDeviceClass:]
  -[_MRDeviceInfoMessageProtobuf hasDeviceClass]
  -[_MRDeviceInfoMessageProtobuf deviceClassAsString:]
  -[_MRDeviceInfoMessageProtobuf StringAsDeviceClass:]
  -[_MRDeviceInfoMessageProtobuf setHasLogicalDeviceCount:]
  -[_MRDeviceInfoMessageProtobuf hasLogicalDeviceCount]
  -[_MRDeviceInfoMessageProtobuf setHasTightlySyncedGroup:]
  -[_MRDeviceInfoMessageProtobuf hasTightlySyncedGroup]
  -[_MRDeviceInfoMessageProtobuf hasTightSyncUID]
  -[_MRDeviceInfoMessageProtobuf setHasIsAirplayActive:]
  -[_MRDeviceInfoMessageProtobuf hasIsAirplayActive]
  -[_MRDeviceInfoMessageProtobuf hasSystemPodcastApplication]
  -[_MRDeviceInfoMessageProtobuf hasSenderDefaultGroupUID]
  -[_MRDeviceInfoMessageProtobuf hasLinkAgent]
  -[_MRDeviceInfoMessageProtobuf systemPodcastApplication]


MRRegisterHIDDeviceMessage : MRProtocolMessage
 @property  MRVirtualTouchDeviceDescriptor *deviceDescriptor

  // instance methods
  -[MRRegisterHIDDeviceMessage type]
  -[MRRegisterHIDDeviceMessage .cxx_destruct]
  -[MRRegisterHIDDeviceMessage initWithDeviceDescriptor:]
  -[MRRegisterHIDDeviceMessage deviceDescriptor]


MRSendLyricsEventMessage : MRProtocolMessage
 @property  _MRLyricsEventProtobuf *event

  // instance methods
  -[MRSendLyricsEventMessage type]
  -[MRSendLyricsEventMessage event]
  -[MRSendLyricsEventMessage initWithEvent:]


MRLanguageOption : _MRLanguageOptionProtobuf <NSSecureCoding>
  // class methods
  +[MRLanguageOption supportsSecureCoding]

  // instance methods
  -[MRLanguageOption encodeWithCoder:]
  -[MRLanguageOption initWithCoder:]


MRLanguageOptionGroup : _MRLanguageOptionGroupProtobuf <NSSecureCoding>
  // class methods
  +[MRLanguageOptionGroup supportsSecureCoding]

  // instance methods
  -[MRLanguageOptionGroup encodeWithCoder:]
  -[MRLanguageOptionGroup initWithCoder:]


_MRSendHIDEventMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasHidEventData
 @property  NSData *hidEventData

  // instance methods
  -[_MRSendHIDEventMessageProtobuf isEqual:]
  -[_MRSendHIDEventMessageProtobuf copyWithZone:]
  -[_MRSendHIDEventMessageProtobuf .cxx_destruct]
  -[_MRSendHIDEventMessageProtobuf dictionaryRepresentation]
  -[_MRSendHIDEventMessageProtobuf writeTo:]
  -[_MRSendHIDEventMessageProtobuf mergeFrom:]
  -[_MRSendHIDEventMessageProtobuf readFrom:]
  -[_MRSendHIDEventMessageProtobuf copyTo:]
  -[_MRSendHIDEventMessageProtobuf setHidEventData:]
  -[_MRSendHIDEventMessageProtobuf hidEventData]
  -[_MRSendHIDEventMessageProtobuf hasHidEventData]


MRPlaybackSessionRequestMessage : MRProtocolMessage
 @property  _MRPlaybackSessionRequestProtobuf *request
 @property  _MRNowPlayingPlayerPathProtobuf *playerPath

  // instance methods
  -[MRPlaybackSessionRequestMessage type]
  -[MRPlaybackSessionRequestMessage request]
  -[MRPlaybackSessionRequestMessage playerPath]
  -[MRPlaybackSessionRequestMessage initWithRequest:forPlayerPath:]


MRPlaybackSessionResponseMessage : MRProtocolMessage
 @property  _MRPlaybackSessionProtobuf *playbackSession

  // instance methods
  -[MRPlaybackSessionResponseMessage type]
  -[MRPlaybackSessionResponseMessage initWithPlaybackSession:]
  -[MRPlaybackSessionResponseMessage playbackSession]


MRPlaybackSessionMigrateRequestMessage : MRProtocolMessage
 @property  _MRPlaybackSessionProtobuf *playbackSession
 @property  MRPlaybackSessionMigrateRequest *request
 @property  _MRNowPlayingPlayerPathProtobuf *playerPath

  // instance methods
  -[MRPlaybackSessionMigrateRequestMessage type]
  -[MRPlaybackSessionMigrateRequestMessage request]
  -[MRPlaybackSessionMigrateRequestMessage playerPath]
  -[MRPlaybackSessionMigrateRequestMessage playbackSession]
  -[MRPlaybackSessionMigrateRequestMessage initWithPlaybackSession:request:forPlayerPath:]


MRPlaybackSessionMigrateResponseMessage : MRProtocolMessage
 @property  MRPlaybackSessionMigrateRequest *request

  // instance methods
  -[MRPlaybackSessionMigrateResponseMessage type]
  -[MRPlaybackSessionMigrateResponseMessage request]
  -[MRPlaybackSessionMigrateResponseMessage initWithRequest:]


MRPlaybackSessionMigrateBeginMessage : MRProtocolMessage
 @property  _MRPlaybackSessionRequestProtobuf *request
 @property  _MRNowPlayingPlayerPathProtobuf *playerPath

  // instance methods
  -[MRPlaybackSessionMigrateBeginMessage type]
  -[MRPlaybackSessionMigrateBeginMessage request]
  -[MRPlaybackSessionMigrateBeginMessage playerPath]
  -[MRPlaybackSessionMigrateBeginMessage initWithRequest:playerPath:]


MRPlaybackSessionMigrateEndMessage : MRProtocolMessage
 @property  _MRPlaybackSessionRequestProtobuf *request
 @property  NSError *error
 @property  _MRNowPlayingPlayerPathProtobuf *playerPath

  // instance methods
  -[MRPlaybackSessionMigrateEndMessage type]
  -[MRPlaybackSessionMigrateEndMessage error]
  -[MRPlaybackSessionMigrateEndMessage request]
  -[MRPlaybackSessionMigrateEndMessage playerPath]
  -[MRPlaybackSessionMigrateEndMessage initWithRequest:error:playerPath:]


MRRemoteTextInputMessage : MRProtocolMessage
 @property  unsigned long version
 @property  NSData *data

  // instance methods
  -[MRRemoteTextInputMessage type]
  -[MRRemoteTextInputMessage data]
  -[MRRemoteTextInputMessage version]
  -[MRRemoteTextInputMessage initWithVersion:data:]


_MRTextInputTraitsProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasAutocapitalizationType
 @property  int autocapitalizationType
 @property  BOOL hasKeyboardType
 @property  int keyboardType
 @property  BOOL hasReturnKeyType
 @property  int returnKeyType
 @property  BOOL hasAutocorrection
 @property  BOOL autocorrection
 @property  BOOL hasSpellchecking
 @property  BOOL spellchecking
 @property  BOOL hasEnablesReturnKeyAutomatically
 @property  BOOL enablesReturnKeyAutomatically
 @property  BOOL hasSecureTextEntry
 @property  BOOL secureTextEntry
 @property  BOOL hasValidTextRangeLocation
 @property  unsigned long validTextRangeLocation
 @property  BOOL hasValidTextRangeLength
 @property  unsigned long validTextRangeLength
 @property  unsigned long pINEntrySeparatorIndexesCount
 @property  ^Q pINEntrySeparatorIndexes

  // instance methods
  -[_MRTextInputTraitsProtobuf dealloc]
  -[_MRTextInputTraitsProtobuf isEqual:]
  -[_MRTextInputTraitsProtobuf copyWithZone:]
  -[_MRTextInputTraitsProtobuf dictionaryRepresentation]
  -[_MRTextInputTraitsProtobuf keyboardType]
  -[_MRTextInputTraitsProtobuf writeTo:]
  -[_MRTextInputTraitsProtobuf mergeFrom:]
  -[_MRTextInputTraitsProtobuf readFrom:]
  -[_MRTextInputTraitsProtobuf copyTo:]
  -[_MRTextInputTraitsProtobuf setSecureTextEntry:]
  -[_MRTextInputTraitsProtobuf setAutocapitalizationType:]
  -[_MRTextInputTraitsProtobuf setEnablesReturnKeyAutomatically:]
  -[_MRTextInputTraitsProtobuf setReturnKeyType:]
  -[_MRTextInputTraitsProtobuf setKeyboardType:]
  -[_MRTextInputTraitsProtobuf autocapitalizationType]
  -[_MRTextInputTraitsProtobuf returnKeyType]
  -[_MRTextInputTraitsProtobuf enablesReturnKeyAutomatically]
  -[_MRTextInputTraitsProtobuf autocorrection]
  -[_MRTextInputTraitsProtobuf secureTextEntry]
  -[_MRTextInputTraitsProtobuf hasAutocorrection]
  -[_MRTextInputTraitsProtobuf setAutocorrection:]
  -[_MRTextInputTraitsProtobuf setHasAutocorrection:]
  -[_MRTextInputTraitsProtobuf pINEntrySeparatorIndexesCount]
  -[_MRTextInputTraitsProtobuf clearPINEntrySeparatorIndexes]
  -[_MRTextInputTraitsProtobuf pINEntrySeparatorIndexesAtIndex:]
  -[_MRTextInputTraitsProtobuf addPINEntrySeparatorIndexes:]
  -[_MRTextInputTraitsProtobuf setHasAutocapitalizationType:]
  -[_MRTextInputTraitsProtobuf hasAutocapitalizationType]
  -[_MRTextInputTraitsProtobuf autocapitalizationTypeAsString:]
  -[_MRTextInputTraitsProtobuf StringAsAutocapitalizationType:]
  -[_MRTextInputTraitsProtobuf setHasKeyboardType:]
  -[_MRTextInputTraitsProtobuf hasKeyboardType]
  -[_MRTextInputTraitsProtobuf keyboardTypeAsString:]
  -[_MRTextInputTraitsProtobuf StringAsKeyboardType:]
  -[_MRTextInputTraitsProtobuf setHasReturnKeyType:]
  -[_MRTextInputTraitsProtobuf hasReturnKeyType]
  -[_MRTextInputTraitsProtobuf returnKeyTypeAsString:]
  -[_MRTextInputTraitsProtobuf StringAsReturnKeyType:]
  -[_MRTextInputTraitsProtobuf setSpellchecking:]
  -[_MRTextInputTraitsProtobuf setHasSpellchecking:]
  -[_MRTextInputTraitsProtobuf hasSpellchecking]
  -[_MRTextInputTraitsProtobuf setHasEnablesReturnKeyAutomatically:]
  -[_MRTextInputTraitsProtobuf hasEnablesReturnKeyAutomatically]
  -[_MRTextInputTraitsProtobuf setHasSecureTextEntry:]
  -[_MRTextInputTraitsProtobuf hasSecureTextEntry]
  -[_MRTextInputTraitsProtobuf setValidTextRangeLocation:]
  -[_MRTextInputTraitsProtobuf setHasValidTextRangeLocation:]
  -[_MRTextInputTraitsProtobuf hasValidTextRangeLocation]
  -[_MRTextInputTraitsProtobuf setValidTextRangeLength:]
  -[_MRTextInputTraitsProtobuf setHasValidTextRangeLength:]
  -[_MRTextInputTraitsProtobuf hasValidTextRangeLength]
  -[_MRTextInputTraitsProtobuf pINEntrySeparatorIndexes]
  -[_MRTextInputTraitsProtobuf setPINEntrySeparatorIndexes:count:]
  -[_MRTextInputTraitsProtobuf spellchecking]
  -[_MRTextInputTraitsProtobuf validTextRangeLocation]
  -[_MRTextInputTraitsProtobuf validTextRangeLength]


MRNowPlayingPlayerClientCallbacks : NSObject /usr/lib/libSystem.B.dylib
 @property  _MRNowPlayingPlayerPathProtobuf *playerPath
 @property  BOOL hasPlaybackQueueCallbacks
 @property  unsigned long capabilities
 @property  MSVMultiCallback *createPlaybackQueueForRequestCallbacks
 @property  MSVMultiCallback *createItemForOffsetCallbacks
 @property  MSVMultiCallback *createItemForIdentifierCallbacks
 @property  MSVMultiCallback *createChildItemCallbacks
 @property  MSVMultiCallback *metadataCallbacks
 @property  MSVMultiCallback *languageOptionsCallbacks
 @property  MSVMultiCallback *infoCallbacks
 @property  MSVMultiCallback *lyricsCallbacks
 @property  MSVMultiCallback *artworkCallbacks
 @property  @? playbackSessionCallback
 @property  @? playbackSessionMigrateBeginCallback
 @property  @? playbackSessionMigrateEndCallback
 @property  @? playbackSessionMigrateRequestCallback
 @property  @? beginLyricsEventCallback
 @property  @? endLyricsEventCallback
 @property  @? videoThumbnailsCallback
 @property  @? audioAmplitudeSamplesCallback
 @property  NSArray *commandHandlerBlocks

  // instance methods
  -[MRNowPlayingPlayerClientCallbacks .cxx_destruct]
  -[MRNowPlayingPlayerClientCallbacks capabilities]
  -[MRNowPlayingPlayerClientCallbacks playerPath]
  -[MRNowPlayingPlayerClientCallbacks setPlaybackSessionCallback:]
  -[MRNowPlayingPlayerClientCallbacks setPlaybackSessionMigrateBeginCallback:]
  -[MRNowPlayingPlayerClientCallbacks setPlaybackSessionMigrateEndCallback:]
  -[MRNowPlayingPlayerClientCallbacks setVideoThumbnailsCallback:]
  -[MRNowPlayingPlayerClientCallbacks setAudioAmplitudeSamplesCallback:]
  -[MRNowPlayingPlayerClientCallbacks removeCommandHandlerBlockForKey:]
  -[MRNowPlayingPlayerClientCallbacks addCommandHandlerBlock:forKey:]
  -[MRNowPlayingPlayerClientCallbacks setPlaybackSessionMigrateRequestCallback:]
  -[MRNowPlayingPlayerClientCallbacks hasPlaybackQueueCallbacks]
  -[MRNowPlayingPlayerClientCallbacks createPlaybackQueueForRequestCallbacks]
  -[MRNowPlayingPlayerClientCallbacks createItemForOffsetCallbacks]
  -[MRNowPlayingPlayerClientCallbacks createItemForIdentifierCallbacks]
  -[MRNowPlayingPlayerClientCallbacks createChildItemCallbacks]
  -[MRNowPlayingPlayerClientCallbacks metadataCallbacks]
  -[MRNowPlayingPlayerClientCallbacks languageOptionsCallbacks]
  -[MRNowPlayingPlayerClientCallbacks infoCallbacks]
  -[MRNowPlayingPlayerClientCallbacks lyricsCallbacks]
  -[MRNowPlayingPlayerClientCallbacks artworkCallbacks]
  -[MRNowPlayingPlayerClientCallbacks playbackSessionCallback]
  -[MRNowPlayingPlayerClientCallbacks playbackSessionMigrateBeginCallback]
  -[MRNowPlayingPlayerClientCallbacks playbackSessionMigrateEndCallback]
  -[MRNowPlayingPlayerClientCallbacks playbackSessionMigrateRequestCallback]
  -[MRNowPlayingPlayerClientCallbacks commandHandlerBlocks]
  -[MRNowPlayingPlayerClientCallbacks videoThumbnailsCallback]
  -[MRNowPlayingPlayerClientCallbacks audioAmplitudeSamplesCallback]
  -[MRNowPlayingPlayerClientCallbacks endLyricsEventCallback]
  -[MRNowPlayingPlayerClientCallbacks beginLyricsEventCallback]
  -[MRNowPlayingPlayerClientCallbacks _onQueue_capabilities]
  -[MRNowPlayingPlayerClientCallbacks registerNowPlayingInfoCallbacks:]
  -[MRNowPlayingPlayerClientCallbacks registerNowPlayingInfoAssetCallbacks:]
  -[MRNowPlayingPlayerClientCallbacks registerNowPlayingInfoArtworkAssetCallback:]
  -[MRNowPlayingPlayerClientCallbacks initWithPlayerPath:queue:]
  -[MRNowPlayingPlayerClientCallbacks setBeginLyricsEventCallback:]
  -[MRNowPlayingPlayerClientCallbacks setEndLyricsEventCallback:]
  -[MRNowPlayingPlayerClientCallbacks registerNowPlayingInfoBackedPlaybackQueueDataSourceCallbacks]


MRNowPlayingPlayerPathInvalidationHandler : NSObject /usr/lib/libSystem.B.dylib
 @property  _MRNowPlayingPlayerPathProtobuf *playerPath
 @property  NSObject<OS_dispatch_queue> *queue
 @property  @? callback

  // instance methods
  -[MRNowPlayingPlayerPathInvalidationHandler queue]
  -[MRNowPlayingPlayerPathInvalidationHandler .cxx_destruct]
  -[MRNowPlayingPlayerPathInvalidationHandler callback]
  -[MRNowPlayingPlayerPathInvalidationHandler playerPath]
  -[MRNowPlayingPlayerPathInvalidationHandler initWithPlayerPath:queue:invalidationCallback:]


_MRRegisterGameControllerResponseMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasControllerID
 @property  unsigned long controllerID

  // instance methods
  -[_MRRegisterGameControllerResponseMessageProtobuf isEqual:]
  -[_MRRegisterGameControllerResponseMessageProtobuf copyWithZone:]
  -[_MRRegisterGameControllerResponseMessageProtobuf dictionaryRepresentation]
  -[_MRRegisterGameControllerResponseMessageProtobuf writeTo:]
  -[_MRRegisterGameControllerResponseMessageProtobuf mergeFrom:]
  -[_MRRegisterGameControllerResponseMessageProtobuf readFrom:]
  -[_MRRegisterGameControllerResponseMessageProtobuf copyTo:]
  -[_MRRegisterGameControllerResponseMessageProtobuf setControllerID:]
  -[_MRRegisterGameControllerResponseMessageProtobuf setHasControllerID:]
  -[_MRRegisterGameControllerResponseMessageProtobuf hasControllerID]
  -[_MRRegisterGameControllerResponseMessageProtobuf controllerID]


MRAVEndpoint : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *localizedName
 @property  NSString *uniqueIdentifier
 @property  NSArray *outputDevices
 @property  NSArray *personalOutputDevices
 @property  NSArray *outputDeviceUIDs
 @property  unsigned long logicalOutputDeviceCount
 @property  MRExternalDevice *externalDevice
 @property  MRAVOutputDevice *designatedGroupLeader
 @property  long long connectionType
 @property  NSString *debugName
 @property  BOOL proxyGroupPlayer
 @property  BOOL canModifyGroupMembership
 @property  _MRAVEndpointDescriptorProtobuf *descriptor
 @property  NSString *shortDescription
 @property  NSDictionary *jsonEncodableDictionaryRepresentation
 @property  BOOL localEndpoint
 @property  _MROriginProtobuf *origin

  // class methods
  +[MRAVEndpoint _notificationSerialQueue]
  +[MRAVEndpoint _modifyOutputDevices:inGroup:queue:modifyDevices:completion:]

  // instance methods
  -[MRAVEndpoint dealloc]
  -[MRAVEndpoint isEqual:]
  -[MRAVEndpoint .cxx_destruct]
  -[MRAVEndpoint _init]
  -[MRAVEndpoint localizedName]
  -[MRAVEndpoint uniqueIdentifier]
  -[MRAVEndpoint connectionType]
  -[MRAVEndpoint origin]
  -[MRAVEndpoint setUniqueIdentifier:]
  -[MRAVEndpoint descriptor]
  -[MRAVEndpoint shortDescription]
  -[MRAVEndpoint debugName]
  -[MRAVEndpoint setLocalizedName:]
  -[MRAVEndpoint outputDevices]
  -[MRAVEndpoint externalDevice]
  -[MRAVEndpoint isVolumeControlAvailable]
  -[MRAVEndpoint isProxyGroupPlayer]
  -[MRAVEndpoint canModifyGroupMembership]
  -[MRAVEndpoint outputDeviceUIDs]
  -[MRAVEndpoint scheduleEndpointOutputDevicesDidChangeNotification]
  -[MRAVEndpoint personalOutputDevices]
  -[MRAVEndpoint connectToExternalDeviceWithCompletion:]
  -[MRAVEndpoint addOutputDevices:initiator:withReplyQueue:completion:]
  -[MRAVEndpoint removeOutputDevices:initiator:withReplyQueue:completion:]
  -[MRAVEndpoint setOutputDevices:initiator:withReplyQueue:completion:]
  -[MRAVEndpoint setOutputDeviceVolume:outputDevice:queue:completion:]
  -[MRAVEndpoint outputDeviceVolume:queue:completion:]
  -[MRAVEndpoint volumeControlCapabilitiesForOutputDevice:queue:completion:]
  -[MRAVEndpoint removeOutputDeviceFromParentGroup:queue:completion:]
  -[MRAVEndpoint jsonEncodableDictionaryRepresentation]
  -[MRAVEndpoint outputDevicesMatchingPredicate:]
  -[MRAVEndpoint migrateToOutputDevice:request:initiator:queue:completion:]
  -[MRAVEndpoint designatedGroupLeader]
  -[MRAVEndpoint isLocalEndpoint]
  -[MRAVEndpoint _callAllCompletionHandlersWithError:]
  -[MRAVEndpoint _externalDeviceConnectionStateDidChangeNotification:]
  -[MRAVEndpoint _requestSharedAudioPresentationOutputContextModificationWithAddingDevices:removingDevices:settingDevices:replyQueue:completion:]
  -[MRAVEndpoint _initiatorStringWithInitiator:uid:]
  -[MRAVEndpoint migrateToLogicalOutputDevice:request:initiator:queue:completion:]
  -[MRAVEndpoint migrateToEndpoint:request:queue:completion:]
  -[MRAVEndpoint _prepareToMigrateToEndpoint:queue:completion:]
  -[MRAVEndpoint logicalOutputDeviceCount]
  -[MRAVEndpoint migrateToOrAddOutputDevices:initiator:withReplyQueue:completion:]
  -[MRAVEndpoint migrateToOrSetOutputDevices:initiator:withReplyQueue:completion:]
  -[MRAVEndpoint canMigrateToEndpoint:queue:completion:]
  -[MRAVEndpoint outputDeviceUIDsMatchingPredicate:]
  -[MRAVEndpoint effectivelyEqual:]
  -[MRAVEndpoint setProxyGroupPlayer:]


MRPlaybackQueueSubscriptionController : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  _MRNowPlayingPlayerPathProtobuf *playerPath

  // class methods
  +[MRPlaybackQueueSubscriptionController supportsSecureCoding]

  // instance methods
  -[MRPlaybackQueueSubscriptionController invalidate]
  -[MRPlaybackQueueSubscriptionController encodeWithCoder:]
  -[MRPlaybackQueueSubscriptionController initWithCoder:]
  -[MRPlaybackQueueSubscriptionController .cxx_destruct]
  -[MRPlaybackQueueSubscriptionController addRequest:]
  -[MRPlaybackQueueSubscriptionController playerPath]
  -[MRPlaybackQueueSubscriptionController initWithPlayerPath:]
  -[MRPlaybackQueueSubscriptionController augmentCommandOptions:forCommand:]
  -[MRPlaybackQueueSubscriptionController contentItemIdentifierForOffset:]
  -[MRPlaybackQueueSubscriptionController requestForSubscribedContentItemIdentifier:]
  -[MRPlaybackQueueSubscriptionController offsetForIdentifier:]
  -[MRPlaybackQueueSubscriptionController subscribeToPlaybackQueue:forRequest:]
  -[MRPlaybackQueueSubscriptionController hasRequest:]
  -[MRPlaybackQueueSubscriptionController enumerateFilteredContentItemsBySubscriptionsForContentItems:block:]
  -[MRPlaybackQueueSubscriptionController filteredContentItemsBySubscriptionsForContentItems:]
  -[MRPlaybackQueueSubscriptionController _removeRequestID:]
  -[MRPlaybackQueueSubscriptionController restoreStateFromController:]
  -[MRPlaybackQueueSubscriptionController removeRequest:]
  -[MRPlaybackQueueSubscriptionController requestForContentItemIdentifier:]


MRPlaybackQueueClient : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[MRPlaybackQueueClient dealloc]
  -[MRPlaybackQueueClient .cxx_destruct]
  -[MRPlaybackQueueClient initWithQueue:]
  -[MRPlaybackQueueClient _handlePlayerPathRemovedNotification:]
  -[MRPlaybackQueueClient _handleApplicationRemovedNotification:]
  -[MRPlaybackQueueClient _handleOriginRemovedNotification:]
  -[MRPlaybackQueueClient subscriptionControllerForPlayerPath:]


MRPlayerPathDictionaryKey : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  _MRNowPlayingPlayerPathProtobuf *playerPath

  // class methods
  +[MRPlayerPathDictionaryKey dictionaryKeyWithPlayerPath:]

  // instance methods
  -[MRPlayerPathDictionaryKey isEqual:]
  -[MRPlayerPathDictionaryKey copyWithZone:]
  -[MRPlayerPathDictionaryKey .cxx_destruct]
  -[MRPlayerPathDictionaryKey playerPath]
  -[MRPlayerPathDictionaryKey initWithPlayerPath:]


_MRRegisterForGameControllerEventsMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasInputModeFlags
 @property  int inputModeFlags

  // instance methods
  -[_MRRegisterForGameControllerEventsMessageProtobuf isEqual:]
  -[_MRRegisterForGameControllerEventsMessageProtobuf copyWithZone:]
  -[_MRRegisterForGameControllerEventsMessageProtobuf dictionaryRepresentation]
  -[_MRRegisterForGameControllerEventsMessageProtobuf writeTo:]
  -[_MRRegisterForGameControllerEventsMessageProtobuf mergeFrom:]
  -[_MRRegisterForGameControllerEventsMessageProtobuf readFrom:]
  -[_MRRegisterForGameControllerEventsMessageProtobuf copyTo:]
  -[_MRRegisterForGameControllerEventsMessageProtobuf setInputModeFlags:]
  -[_MRRegisterForGameControllerEventsMessageProtobuf inputModeFlags]
  -[_MRRegisterForGameControllerEventsMessageProtobuf setHasInputModeFlags:]
  -[_MRRegisterForGameControllerEventsMessageProtobuf hasInputModeFlags]
  -[_MRRegisterForGameControllerEventsMessageProtobuf inputModeFlagsAsString:]
  -[_MRRegisterForGameControllerEventsMessageProtobuf StringAsInputModeFlags:]


_MRGameControllerButtonsProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasDPadX
 @property  float dPadX
 @property  BOOL hasDPadY
 @property  float dPadY
 @property  BOOL hasA
 @property  float a
 @property  BOOL hasB
 @property  float b
 @property  BOOL hasX
 @property  float x
 @property  BOOL hasY
 @property  float y
 @property  BOOL hasLeftShoulder
 @property  float leftShoulder
 @property  BOOL hasRightShoulder
 @property  float rightShoulder
 @property  BOOL hasLeftThumbstickX
 @property  float leftThumbstickX
 @property  BOOL hasLeftThumbstickY
 @property  float leftThumbstickY
 @property  BOOL hasRightThumbstickX
 @property  float rightThumbstickX
 @property  BOOL hasRightThumbstickY
 @property  float rightThumbstickY
 @property  BOOL hasLeftTrigger
 @property  float leftTrigger
 @property  BOOL hasRightTrigger
 @property  float rightTrigger
 @property  BOOL hasPause
 @property  float pause

  // instance methods
  -[_MRGameControllerButtonsProtobuf isEqual:]
  -[_MRGameControllerButtonsProtobuf copyWithZone:]
  -[_MRGameControllerButtonsProtobuf pause]
  -[_MRGameControllerButtonsProtobuf dictionaryRepresentation]
  -[_MRGameControllerButtonsProtobuf writeTo:]
  -[_MRGameControllerButtonsProtobuf mergeFrom:]
  -[_MRGameControllerButtonsProtobuf readFrom:]
  -[_MRGameControllerButtonsProtobuf copyTo:]
  -[_MRGameControllerButtonsProtobuf x]
  -[_MRGameControllerButtonsProtobuf y]
  -[_MRGameControllerButtonsProtobuf setX:]
  -[_MRGameControllerButtonsProtobuf setY:]
  -[_MRGameControllerButtonsProtobuf setHasX:]
  -[_MRGameControllerButtonsProtobuf hasX]
  -[_MRGameControllerButtonsProtobuf setHasY:]
  -[_MRGameControllerButtonsProtobuf hasY]
  -[_MRGameControllerButtonsProtobuf leftShoulder]
  -[_MRGameControllerButtonsProtobuf rightShoulder]
  -[_MRGameControllerButtonsProtobuf leftTrigger]
  -[_MRGameControllerButtonsProtobuf rightTrigger]
  -[_MRGameControllerButtonsProtobuf setPause:]
  -[_MRGameControllerButtonsProtobuf b]
  -[_MRGameControllerButtonsProtobuf a]
  -[_MRGameControllerButtonsProtobuf setDPadX:]
  -[_MRGameControllerButtonsProtobuf dPadX]
  -[_MRGameControllerButtonsProtobuf setDPadY:]
  -[_MRGameControllerButtonsProtobuf dPadY]
  -[_MRGameControllerButtonsProtobuf setA:]
  -[_MRGameControllerButtonsProtobuf setB:]
  -[_MRGameControllerButtonsProtobuf setLeftShoulder:]
  -[_MRGameControllerButtonsProtobuf setRightShoulder:]
  -[_MRGameControllerButtonsProtobuf setLeftThumbstickX:]
  -[_MRGameControllerButtonsProtobuf leftThumbstickX]
  -[_MRGameControllerButtonsProtobuf setLeftThumbstickY:]
  -[_MRGameControllerButtonsProtobuf leftThumbstickY]
  -[_MRGameControllerButtonsProtobuf setRightThumbstickX:]
  -[_MRGameControllerButtonsProtobuf rightThumbstickX]
  -[_MRGameControllerButtonsProtobuf setRightThumbstickY:]
  -[_MRGameControllerButtonsProtobuf rightThumbstickY]
  -[_MRGameControllerButtonsProtobuf setLeftTrigger:]
  -[_MRGameControllerButtonsProtobuf setRightTrigger:]
  -[_MRGameControllerButtonsProtobuf setHasDPadX:]
  -[_MRGameControllerButtonsProtobuf hasDPadX]
  -[_MRGameControllerButtonsProtobuf setHasDPadY:]
  -[_MRGameControllerButtonsProtobuf hasDPadY]
  -[_MRGameControllerButtonsProtobuf setHasA:]
  -[_MRGameControllerButtonsProtobuf hasA]
  -[_MRGameControllerButtonsProtobuf setHasB:]
  -[_MRGameControllerButtonsProtobuf hasB]
  -[_MRGameControllerButtonsProtobuf setHasLeftShoulder:]
  -[_MRGameControllerButtonsProtobuf hasLeftShoulder]
  -[_MRGameControllerButtonsProtobuf setHasRightShoulder:]
  -[_MRGameControllerButtonsProtobuf hasRightShoulder]
  -[_MRGameControllerButtonsProtobuf setHasLeftThumbstickX:]
  -[_MRGameControllerButtonsProtobuf hasLeftThumbstickX]
  -[_MRGameControllerButtonsProtobuf setHasLeftThumbstickY:]
  -[_MRGameControllerButtonsProtobuf hasLeftThumbstickY]
  -[_MRGameControllerButtonsProtobuf setHasRightThumbstickX:]
  -[_MRGameControllerButtonsProtobuf hasRightThumbstickX]
  -[_MRGameControllerButtonsProtobuf setHasRightThumbstickY:]
  -[_MRGameControllerButtonsProtobuf hasRightThumbstickY]
  -[_MRGameControllerButtonsProtobuf setHasLeftTrigger:]
  -[_MRGameControllerButtonsProtobuf hasLeftTrigger]
  -[_MRGameControllerButtonsProtobuf setHasRightTrigger:]
  -[_MRGameControllerButtonsProtobuf hasRightTrigger]
  -[_MRGameControllerButtonsProtobuf setHasPause:]
  -[_MRGameControllerButtonsProtobuf hasPause]


MRNowPlayingPlayerClientRequests : NSObject /usr/lib/libSystem.B.dylib <MRNowPlayingClientState>
 @property  _MRNowPlayingPlayerPathProtobuf *playerPath
 @property  MRPlaybackQueueSubscriptionController *subscriptionController
 @property  unsigned int playbackState
 @property  _MRPlaybackQueueProtobuf *playbackQueue
 @property  NSArray *supportedCommands

  // instance methods
  -[MRNowPlayingPlayerClientRequests dealloc]
  -[MRNowPlayingPlayerClientRequests .cxx_destruct]
  -[MRNowPlayingPlayerClientRequests playbackState]
  -[MRNowPlayingPlayerClientRequests playbackQueue]
  -[MRNowPlayingPlayerClientRequests playerPath]
  -[MRNowPlayingPlayerClientRequests setPlaybackState:]
  -[MRNowPlayingPlayerClientRequests supportedCommands]
  -[MRNowPlayingPlayerClientRequests setSupportedCommands:]
  -[MRNowPlayingPlayerClientRequests setPlaybackQueue:]
  -[MRNowPlayingPlayerClientRequests initWithPlayerPath:]
  -[MRNowPlayingPlayerClientRequests handlePlaybackStateRequestWithCompletion:]
  -[MRNowPlayingPlayerClientRequests subscriptionController]
  -[MRNowPlayingPlayerClientRequests handleSupportedCommandsRequestWithCompletion:]
  -[MRNowPlayingPlayerClientRequests restoreNowPlayingClientState]
  -[MRNowPlayingPlayerClientRequests receiveTransaction:fromMessage:]
  -[MRNowPlayingPlayerClientRequests addPlaybackQueueCompletion:forRequest:]
  -[MRNowPlayingPlayerClientRequests removePlaybackQueueCompletionForRequest:]
  -[MRNowPlayingPlayerClientRequests enqueuePlaybackQueueRequest:completion:]
  -[MRNowPlayingPlayerClientRequests updateContentItems:]
  -[MRNowPlayingPlayerClientRequests updateContentItemArtwork:]
  -[MRNowPlayingPlayerClientRequests _registerDefaultCallbacks]
  -[MRNowPlayingPlayerClientRequests _handleEnqueuedPlaybackQueueRequest:completion:]
  -[MRNowPlayingPlayerClientRequests updatePlaybackQueue:]
  -[MRNowPlayingPlayerClientRequests _transactionDestintationForName:]
  -[MRNowPlayingPlayerClientRequests _handleTransactionPackets:packets:completion:]
  -[MRNowPlayingPlayerClientRequests transactionCallbacksForName:]
  -[MRNowPlayingPlayerClientRequests addTransactionCallback:forName:]


MRNowPlayingArtwork : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned int type
 @property  BOOL hasArtworkData

  // instance methods
  -[MRNowPlayingArtwork type]
  -[MRNowPlayingArtwork hasArtworkData]
  -[MRNowPlayingArtwork copyImageData]


MRNowPlayingArtworkImage : MRNowPlayingArtwork
 @property  NSData *imageData
 @property  NSString *mimeType

  // instance methods
  -[MRNowPlayingArtworkImage isEqual:]
  -[MRNowPlayingArtworkImage type]
  -[MRNowPlayingArtworkImage .cxx_destruct]
  -[MRNowPlayingArtworkImage mimeType]
  -[MRNowPlayingArtworkImage imageData]
  -[MRNowPlayingArtworkImage hasArtworkData]
  -[MRNowPlayingArtworkImage initWithImageData:mimeType:]
  -[MRNowPlayingArtworkImage copyImageData]


MRNowPlayingOriginClient : NSObject /usr/lib/libSystem.B.dylib <MRNowPlayingClientState>
 @property  _MROriginProtobuf *origin
 @property  BOOL canBeNowPlayingApp
 @property  BOOL isOverrideApp
 @property  unsigned int hardwareRemoteBehavior
 @property  unsigned int routeDiscoveryMode
 @property  NSArray *applicationPickedRoutes
 @property  unsigned int inputMode
 @property  unsigned int volumeCapabilities
 @property  float volume
 @property  MRApplicationActivity *activity
 @property  _MRDeviceInfoMessageProtobuf *deviceInfo
 @property  @? playbackQueueCallback
 @property  @? playbackQueueTransactionCallback
 @property  @? commandCallback
 @property  @? playbackSessionCallback
 @property  @? playbackSessionMigrateBeginCallback
 @property  @? playbackSessionMigrateEndCallback
 @property  @? playbackSessionMigrateRequestCallback
 @property  @? beginLyricsEventCallback
 @property  @? endLyricsEventCallback
 @property  _MRNowPlayingClientProtobuf *activeNowPlayingClient
 @property  NSArray *nowPlayingClients

  // instance methods
  -[MRNowPlayingOriginClient dealloc]
  -[MRNowPlayingOriginClient .cxx_destruct]
  -[MRNowPlayingOriginClient activity]
  -[MRNowPlayingOriginClient setActivity:]
  -[MRNowPlayingOriginClient origin]
  -[MRNowPlayingOriginClient volume]
  -[MRNowPlayingOriginClient setVolume:]
  -[MRNowPlayingOriginClient setInputMode:]
  -[MRNowPlayingOriginClient removeClient:]
  -[MRNowPlayingOriginClient inputMode]
  -[MRNowPlayingOriginClient deviceInfo]
  -[MRNowPlayingOriginClient setDeviceInfo:]
  -[MRNowPlayingOriginClient initWithOrigin:]
  -[MRNowPlayingOriginClient volumeCapabilities]
  -[MRNowPlayingOriginClient setPlaybackSessionCallback:]
  -[MRNowPlayingOriginClient setPlaybackSessionMigrateBeginCallback:]
  -[MRNowPlayingOriginClient setPlaybackSessionMigrateEndCallback:]
  -[MRNowPlayingOriginClient setCanBeNowPlayingApp:]
  -[MRNowPlayingOriginClient isOverrideApp]
  -[MRNowPlayingOriginClient setIsOverrideApp:]
  -[MRNowPlayingOriginClient setActiveNowPlayingClient:]
  -[MRNowPlayingOriginClient setVolumeCapabilities:]
  -[MRNowPlayingOriginClient setHardwareRemoteBehavior:]
  -[MRNowPlayingOriginClient setCommandCallback:]
  -[MRNowPlayingOriginClient canBeNowPlayingApp]
  -[MRNowPlayingOriginClient setPlaybackSessionMigrateRequestCallback:]
  -[MRNowPlayingOriginClient restoreNowPlayingClientState]
  -[MRNowPlayingOriginClient nowPlayingClients]
  -[MRNowPlayingOriginClient setPlaybackQueueCallback:]
  -[MRNowPlayingOriginClient setPlaybackQueueTransactionCallback:]
  -[MRNowPlayingOriginClient playbackSessionCallback]
  -[MRNowPlayingOriginClient playbackSessionMigrateBeginCallback]
  -[MRNowPlayingOriginClient playbackSessionMigrateEndCallback]
  -[MRNowPlayingOriginClient playbackSessionMigrateRequestCallback]
  -[MRNowPlayingOriginClient commandCallback]
  -[MRNowPlayingOriginClient endLyricsEventCallback]
  -[MRNowPlayingOriginClient beginLyricsEventCallback]
  -[MRNowPlayingOriginClient playbackQueueTransactionCallback]
  -[MRNowPlayingOriginClient playbackQueueCallback]
  -[MRNowPlayingOriginClient setBeginLyricsEventCallback:]
  -[MRNowPlayingOriginClient setEndLyricsEventCallback:]
  -[MRNowPlayingOriginClient _registerMediaServerNotifications]
  -[MRNowPlayingOriginClient _unregisterMediaServerNotifications]
  -[MRNowPlayingOriginClient _avSessionMediaServicesResetNotification:]
  -[MRNowPlayingOriginClient applicationPickedRoutes]
  -[MRNowPlayingOriginClient setApplicationPickedRoutes:]
  -[MRNowPlayingOriginClient setRouteDiscoveryMode:]
  -[MRNowPlayingOriginClient routeDiscoveryMode]
  -[MRNowPlayingOriginClient activeNowPlayingClient]
  -[MRNowPlayingOriginClient existingNowPlayingClientForPlayerPath:]
  -[MRNowPlayingOriginClient nowPlayingClientForPlayerPath:]
  -[MRNowPlayingOriginClient hardwareRemoteBehavior]


MRNowPlayingClient : NSObject /usr/lib/libSystem.B.dylib <MRNowPlayingClientState>
 @property  _MRNowPlayingPlayerPathProtobuf *playerPath
 @property  _MRNowPlayingClientProtobuf *client
 @property  _MRNowPlayingPlayerPathProtobuf *activePlayerPath
 @property  NSArray *playerClients

  // instance methods
  -[MRNowPlayingClient .cxx_destruct]
  -[MRNowPlayingClient client]
  -[MRNowPlayingClient setClient:]
  -[MRNowPlayingClient setPlayerPath:]
  -[MRNowPlayingClient playerPath]
  -[MRNowPlayingClient initWithPlayerPath:]
  -[MRNowPlayingClient updateActivePlayerPath:]
  -[MRNowPlayingClient activePlayerPath]
  -[MRNowPlayingClient mergeClient:]
  -[MRNowPlayingClient restoreNowPlayingClientState]
  -[MRNowPlayingClient playerClients]
  -[MRNowPlayingClient removePlayer:]
  -[MRNowPlayingClient nowPlayingPlayerClientForPlayerPath:]


_MRPlaybackSessionRequestMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasRequest
 @property  _MRPlaybackSessionRequestProtobuf *request
 @property  BOOL hasPlayerPath
 @property  _MRNowPlayingPlayerPathProtobuf *playerPath

  // instance methods
  -[_MRPlaybackSessionRequestMessageProtobuf isEqual:]
  -[_MRPlaybackSessionRequestMessageProtobuf copyWithZone:]
  -[_MRPlaybackSessionRequestMessageProtobuf .cxx_destruct]
  -[_MRPlaybackSessionRequestMessageProtobuf dictionaryRepresentation]
  -[_MRPlaybackSessionRequestMessageProtobuf writeTo:]
  -[_MRPlaybackSessionRequestMessageProtobuf mergeFrom:]
  -[_MRPlaybackSessionRequestMessageProtobuf readFrom:]
  -[_MRPlaybackSessionRequestMessageProtobuf copyTo:]
  -[_MRPlaybackSessionRequestMessageProtobuf setRequest:]
  -[_MRPlaybackSessionRequestMessageProtobuf request]
  -[_MRPlaybackSessionRequestMessageProtobuf hasRequest]
  -[_MRPlaybackSessionRequestMessageProtobuf setPlayerPath:]
  -[_MRPlaybackSessionRequestMessageProtobuf playerPath]
  -[_MRPlaybackSessionRequestMessageProtobuf hasPlayerPath]


MRGenericMessage : MRProtocolMessage
 @property  NSString *key
 @property  NSData *data

  // instance methods
  -[MRGenericMessage key]
  -[MRGenericMessage type]
  -[MRGenericMessage data]
  -[MRGenericMessage initWithKey:data:]


MRContentItemMetadata : _MRContentItemMetadataProtobuf
 @property  NSURL *assetURL
 @property  NSDictionary *userInfo
 @property  NSDictionary *deviceSpecificUserInfo
 @property  NSDictionary *collectionInfo
 @property  NSDictionary *appMetrics
 @property  NSDictionary *nowPlayingInfo
 @property  NSDate *currentPlaybackDate
 @property  NSArray *artworkURLTemplates

  // class methods
  +[MRContentItemMetadata initialize]

  // instance methods
  -[MRContentItemMetadata init]
  -[MRContentItemMetadata copyWithZone:]
  -[MRContentItemMetadata userInfo]
  -[MRContentItemMetadata initWithData:]
  -[MRContentItemMetadata .cxx_destruct]
  -[MRContentItemMetadata setUserInfo:]
  -[MRContentItemMetadata mergeFrom:]
  -[MRContentItemMetadata assetURL]
  -[MRContentItemMetadata setAssetURL:]
  -[MRContentItemMetadata nowPlayingInfo]
  -[MRContentItemMetadata setNowPlayingInfo:]
  -[MRContentItemMetadata deviceSpecificUserInfo]
  -[MRContentItemMetadata setDeviceSpecificUserInfo:]
  -[MRContentItemMetadata artworkURLTemplates]
  -[MRContentItemMetadata setArtworkURLTemplates:]
  -[MRContentItemMetadata collectionInfo]
  -[MRContentItemMetadata setCollectionInfo:]
  -[MRContentItemMetadata customDictionaryRepresentation]
  -[MRContentItemMetadata currentPlaybackDate]
  -[MRContentItemMetadata setCurrentPlaybackDate:]
  -[MRContentItemMetadata appMetrics]
  -[MRContentItemMetadata setAppMetrics:]


MRContentItem : _MRContentItemProtobuf
 @property  MRContentItemMetadata *itemMetadata
 @property  BOOL hasCurrentLanguageOptions
 @property  BOOL hasAvailableLanguageOptions

  // class methods
  +[MRContentItem initialize]

  // instance methods
  -[MRContentItem init]
  -[MRContentItem initWithData:]
  -[MRContentItem setSections:]
  -[MRContentItem setInfo:]
  -[MRContentItem setArtworkData:]
  -[MRContentItem setAvailableLanguageOptions:]
  -[MRContentItem setCurrentLanguageOptions:]
  -[MRContentItem setLyrics:]
  -[MRContentItem customDictionaryRepresentation]
  -[MRContentItem itemMetadata]
  -[MRContentItem hasCurrentLanguageOptions]
  -[MRContentItem hasAvailableLanguageOptions]


MRVVIClient : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[MRVVIClient sharedClient]

  // instance methods
  -[MRVVIClient init]
  -[MRVVIClient dealloc]
  -[MRVVIClient .cxx_destruct]
  -[MRVVIClient setRecordingStateCallback:forDeviceID:]
  -[MRVVIClient _recordingStateChangedNotification:]


MRGameControllerDaemonProxy : NSObject /usr/lib/libSystem.B.dylib <GameControllerDaemonListener>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MRGameControllerDaemonProxy defaultGameControllerDaemonProxy]

  // instance methods
  -[MRGameControllerDaemonProxy .cxx_destruct]
  -[MRGameControllerDaemonProxy _openConnection]
  -[MRGameControllerDaemonProxy addController:]
  -[MRGameControllerDaemonProxy removeController:]
  -[MRGameControllerDaemonProxy controllerWithUDID:setData:]
  -[MRGameControllerDaemonProxy controllerWithUDID:setValue:forElement:]
  -[MRGameControllerDaemonProxy microControllerWithDigitizerX:withY:withTimeStamp:touchDown:]
  -[MRGameControllerDaemonProxy microControllerWithUDID:setDigitizerX:digitizerY:withTimeStamp:touchDown:]
  -[MRGameControllerDaemonProxy replyConnectedHosts:]
  -[MRGameControllerDaemonProxy _delayEvent:setValue:forElement:withUpDelay:]
  -[MRGameControllerDaemonProxy controllerID:setValue:forElement:]
  -[MRGameControllerDaemonProxy addEmulatedControllerWithProperties:]
  -[MRGameControllerDaemonProxy removeEmulatedController:]
  -[MRGameControllerDaemonProxy controllerID:setValue:forElement:withUpDelay:]
  -[MRGameControllerDaemonProxy controllerID:setDigitizerX:digitizerY:withTimeStamp:touchDown:]
  -[MRGameControllerDaemonProxy controllerID:setArrayValueX:y:z:w:forElement:]


MRGameControllerDelayedEvents : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[MRGameControllerDelayedEvents .cxx_destruct]
  -[MRGameControllerDelayedEvents invokeEventsForController:beacuseElement:]
  -[MRGameControllerDelayedEvents eventForController:element:]


MRGameControllerDelayedEvent : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned long lastDownEvent
 @property  @? sendEventBlock

  // instance methods
  -[MRGameControllerDelayedEvent .cxx_destruct]
  -[MRGameControllerDelayedEvent send]
  -[MRGameControllerDelayedEvent sendEventBlock]
  -[MRGameControllerDelayedEvent setLastDownEvent:]
  -[MRGameControllerDelayedEvent lastDownEvent]
  -[MRGameControllerDelayedEvent setSendEventBlock:]


MRNowPlayingPlayerClient : NSObject /usr/lib/libSystem.B.dylib <MRNowPlayingClientState, MRTransactionSourceDelegate>
 @property  _MRNowPlayingPlayerPathProtobuf *playerPath
 @property  NSArray *supportedCommands
 @property  NSDictionary *nowPlayingInfo
 @property  MRNowPlayingArtwork *nowPlayingArtwork
 @property  unsigned int playbackState
 @property  double invalidatationTimestamp
 @property  _MRPlaybackQueueProtobuf *playbackQueue
 @property  unsigned long capabilities
 @property  _MRContentItemProtobuf *nowPlayingContentItem
 @property  BOOL hasReceivedCommandRecently
 @property  MRPlaybackQueueSubscriptionController *subscriptionController
 @property  MRNowPlayingPlayerClientCallbacks *clientCallbacks

  // instance methods
  -[MRNowPlayingPlayerClient .cxx_destruct]
  -[MRNowPlayingPlayerClient capabilities]
  -[MRNowPlayingPlayerClient setCapabilities:]
  -[MRNowPlayingPlayerClient nowPlayingInfo]
  -[MRNowPlayingPlayerClient setNowPlayingInfo:]
  -[MRNowPlayingPlayerClient playbackState]
  -[MRNowPlayingPlayerClient playbackQueue]
  -[MRNowPlayingPlayerClient setPlayerPath:]
  -[MRNowPlayingPlayerClient playerPath]
  -[MRNowPlayingPlayerClient nowPlayingContentItem]
  -[MRNowPlayingPlayerClient clientCallbacks]
  -[MRNowPlayingPlayerClient supportedCommands]
  -[MRNowPlayingPlayerClient setSupportedCommands:]
  -[MRNowPlayingPlayerClient setPlaybackQueue:]
  -[MRNowPlayingPlayerClient initWithPlayerPath:]
  -[MRNowPlayingPlayerClient updatePlayer:]
  -[MRNowPlayingPlayerClient updatePlaybackState:date:]
  -[MRNowPlayingPlayerClient subscriptionController]
  -[MRNowPlayingPlayerClient setNowPlayingArtwork:]
  -[MRNowPlayingPlayerClient sendTransaction:withPackets:]
  -[MRNowPlayingPlayerClient nowPlayingArtwork]
  -[MRNowPlayingPlayerClient restoreNowPlayingClientState]
  -[MRNowPlayingPlayerClient hasReceivedCommandRecently]
  -[MRNowPlayingPlayerClient addPendingPlaybackSessionMigrateEvent:]
  -[MRNowPlayingPlayerClient removePendingPlaybackSessionMigrateEvent:]
  -[MRNowPlayingPlayerClient resolveCommand:]
  -[MRNowPlayingPlayerClient resolveCommandOptions:options:]
  -[MRNowPlayingPlayerClient setInvalidatationTimestamp:]
  -[MRNowPlayingPlayerClient clearCachedContentItemArtworkForItems:]
  -[MRNowPlayingPlayerClient updateCacheWithContentItems:]
  -[MRNowPlayingPlayerClient cacheContentItemChangesForPendingRequests:]
  -[MRNowPlayingPlayerClient transactionDidEnd:]
  -[MRNowPlayingPlayerClient testAndSetCoalescingInvalidations]
  -[MRNowPlayingPlayerClient unsetCoalescingInvalidations]
  -[MRNowPlayingPlayerClient _handePlaybackSessionMigrateRequest:request:completion:]
  -[MRNowPlayingPlayerClient updateCacheWithPlaybackQueue:]
  -[MRNowPlayingPlayerClient preProcessChangePlaybackRateCommandWithOptions:]
  -[MRNowPlayingPlayerClient flushPendingPlaybackSessionMigrateEvents:]
  -[MRNowPlayingPlayerClient _onQueue_sendTransaction:withPackets:]
  -[MRNowPlayingPlayerClient invalidatationTimestamp]
  -[MRNowPlayingPlayerClient testAndSetCoalescingRequests]
  -[MRNowPlayingPlayerClient unsetCoalescingRequests]
  -[MRNowPlayingPlayerClient updateCacheWithItem:]
  -[MRNowPlayingPlayerClient beginSendingTransactions]
  -[MRNowPlayingPlayerClient endSendingTransactions]
  -[MRNowPlayingPlayerClient addPendingRequest:]
  -[MRNowPlayingPlayerClient startCachingContentItemUpdatesForItem:forPendingRequest:]
  -[MRNowPlayingPlayerClient updatePlaybackQueueWithCachedUpdates:forPendingRequest:]


MRProtocolClientConnection : NSObject /usr/lib/libSystem.B.dylib <NSStreamDelegate, MSVMessageParserDelegate, MRProtocolMessageQueueDelegate, MRProtocolMessageQueueDataSource>
 @property  NSInputStream *inputStream
 @property  NSOutputStream *outputStream
 @property  _MRDeviceInfoMessageProtobuf *deviceInfo
 @property  MRSupportedProtocolMessages *supportedMessages
 @property  BOOL streamsAreValid
 @property  <MRProtocolClientConnectionDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MRProtocolClientConnection dealloc]
  -[MRProtocolClientConnection delegate]
  -[MRProtocolClientConnection setDelegate:]
  -[MRProtocolClientConnection stream:handleEvent:]
  -[MRProtocolClientConnection .cxx_destruct]
  -[MRProtocolClientConnection outputStream]
  -[MRProtocolClientConnection sendMessage:]
  -[MRProtocolClientConnection inputStream]
  -[MRProtocolClientConnection _flush]
  -[MRProtocolClientConnection deviceInfo]
  -[MRProtocolClientConnection setDeviceInfo:]
  -[MRProtocolClientConnection parser:didParseMessage:]
  -[MRProtocolClientConnection messageQueue:processData:atReadPosition:]
  -[MRProtocolClientConnection messageQueue:didSendMessage:]
  -[MRProtocolClientConnection messageQueue:didPurgeMessage:]
  -[MRProtocolClientConnection messageQueue:dataForMessage:]
  -[MRProtocolClientConnection supportedMessages]
  -[MRProtocolClientConnection setSupportedMessages:]
  -[MRProtocolClientConnection sendMessage:queue:reply:]
  -[MRProtocolClientConnection streamsAreValid]
  -[MRProtocolClientConnection initWithInputStream:outputStream:runLoop:]
  -[MRProtocolClientConnection closeAllStreams]
  -[MRProtocolClientConnection sendMessage:timeout:queue:reply:]
  -[MRProtocolClientConnection _openStream:]
  -[MRProtocolClientConnection _closeStream:]
  -[MRProtocolClientConnection _clientSupportsMessage:]
  -[MRProtocolClientConnection _sendMessage:queue:reply:]
  -[MRProtocolClientConnection _stream:handleEvent:]
  -[MRProtocolClientConnection _setQOSPropertiesOnStream:]
  -[MRProtocolClientConnection _parseMessageData:]
  -[MRProtocolClientConnection _disconnectClient]
  -[MRProtocolClientConnection decryptData:error:]
  -[MRProtocolClientConnection _preProcessMessage:data:]
  -[MRProtocolClientConnection _notifyDelegateClientDidRecieveMessage:]
  -[MRProtocolClientConnection encryptDataForMessage:]
  -[MRProtocolClientConnection _adjustTimestamp:]
  -[MRProtocolClientConnection _notifyDelegateClientDidDisconnect]


MRAVConcreteEndpoint : MRAVEndpoint
 @property  NSObject<OS_dispatch_queue> *serialQueue
 @property  NSArray *outputDevices
 @property  MRTransportExternalDevice *externalDevice

  // instance methods
  -[MRAVConcreteEndpoint dealloc]
  -[MRAVConcreteEndpoint .cxx_destruct]
  -[MRAVConcreteEndpoint uniqueIdentifier]
  -[MRAVConcreteEndpoint connectionType]
  -[MRAVConcreteEndpoint serialQueue]
  -[MRAVConcreteEndpoint outputDevices]
  -[MRAVConcreteEndpoint setOutputDevices:]
  -[MRAVConcreteEndpoint externalDevice]
  -[MRAVConcreteEndpoint setExternalDevice:]
  -[MRAVConcreteEndpoint isProxyGroupPlayer]
  -[MRAVConcreteEndpoint setSerialQueue:]
  -[MRAVConcreteEndpoint canModifyGroupMembership]
  -[MRAVConcreteEndpoint initWithDesignatedGroupLeader:outputDevices:]
  -[MRAVConcreteEndpoint designatedGroupLeader]


_MRGetVoiceInputDevicesResponseMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  unsigned long deviceIDsCount
 @property  ^I deviceIDs
 @property  BOOL hasErrorCode
 @property  unsigned int errorCode

  // instance methods
  -[_MRGetVoiceInputDevicesResponseMessageProtobuf dealloc]
  -[_MRGetVoiceInputDevicesResponseMessageProtobuf isEqual:]
  -[_MRGetVoiceInputDevicesResponseMessageProtobuf copyWithZone:]
  -[_MRGetVoiceInputDevicesResponseMessageProtobuf dictionaryRepresentation]
  -[_MRGetVoiceInputDevicesResponseMessageProtobuf writeTo:]
  -[_MRGetVoiceInputDevicesResponseMessageProtobuf mergeFrom:]
  -[_MRGetVoiceInputDevicesResponseMessageProtobuf readFrom:]
  -[_MRGetVoiceInputDevicesResponseMessageProtobuf copyTo:]
  -[_MRGetVoiceInputDevicesResponseMessageProtobuf deviceIDs]
  -[_MRGetVoiceInputDevicesResponseMessageProtobuf errorCode]
  -[_MRGetVoiceInputDevicesResponseMessageProtobuf setErrorCode:]
  -[_MRGetVoiceInputDevicesResponseMessageProtobuf setHasErrorCode:]
  -[_MRGetVoiceInputDevicesResponseMessageProtobuf hasErrorCode]
  -[_MRGetVoiceInputDevicesResponseMessageProtobuf addDeviceIDs:]
  -[_MRGetVoiceInputDevicesResponseMessageProtobuf deviceIDsCount]
  -[_MRGetVoiceInputDevicesResponseMessageProtobuf deviceIDsAtIndex:]
  -[_MRGetVoiceInputDevicesResponseMessageProtobuf clearDeviceIDs]
  -[_MRGetVoiceInputDevicesResponseMessageProtobuf setDeviceIDs:count:]


MRKeyboardMessage : MRProtocolMessage
 @property  unsigned long state
 @property  NSData *encryptedTextCyphertext
 @property  MRTextEditingAttributes *attributes

  // class methods
  +[MRKeyboardMessage encryptedMessageWithState:text:attributes:usingCryptoSession:]

  // instance methods
  -[MRKeyboardMessage type]
  -[MRKeyboardMessage .cxx_destruct]
  -[MRKeyboardMessage attributes]
  -[MRKeyboardMessage state]
  -[MRKeyboardMessage decryptedTextUsingCryptoSession:]
  -[MRKeyboardMessage encryptedTextCyphertext]
  -[MRKeyboardMessage initWithState:encryptedTextCyphertext:attributes:]


_MRWakeDeviceMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
  // instance methods
  -[_MRWakeDeviceMessageProtobuf isEqual:]
  -[_MRWakeDeviceMessageProtobuf copyWithZone:]
  -[_MRWakeDeviceMessageProtobuf dictionaryRepresentation]
  -[_MRWakeDeviceMessageProtobuf writeTo:]
  -[_MRWakeDeviceMessageProtobuf mergeFrom:]
  -[_MRWakeDeviceMessageProtobuf readFrom:]
  -[_MRWakeDeviceMessageProtobuf copyTo:]


MREmulatedGameController : NSObject /usr/lib/libSystem.B.dylib
 @property  GCController *controller
 @property  int profile
 @property  double buttonAUpDelay
 @property  <MREmulatedGameControllerDelegate> *delegate

  // instance methods
  -[MREmulatedGameController dealloc]
  -[MREmulatedGameController delegate]
  -[MREmulatedGameController setDelegate:]
  -[MREmulatedGameController .cxx_destruct]
  -[MREmulatedGameController initWithProperties:]
  -[MREmulatedGameController profile]
  -[MREmulatedGameController setController:]
  -[MREmulatedGameController controller]
  -[MREmulatedGameController setButtonAUpDelay:]
  -[MREmulatedGameController buttonAUpDelay]
  -[MREmulatedGameController _handleGameControllerDidChange:]
  -[MREmulatedGameController sendGameControllerEvent:]


_MRLyricsItemProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasLyrics
 @property  NSString *lyrics
 @property  BOOL hasUserProvided
 @property  BOOL userProvided
 @property  BOOL hasToken
 @property  _MRLyricsTokenProtobuf *token

  // instance methods
  -[_MRLyricsItemProtobuf isEqual:]
  -[_MRLyricsItemProtobuf copyWithZone:]
  -[_MRLyricsItemProtobuf token]
  -[_MRLyricsItemProtobuf .cxx_destruct]
  -[_MRLyricsItemProtobuf dictionaryRepresentation]
  -[_MRLyricsItemProtobuf writeTo:]
  -[_MRLyricsItemProtobuf mergeFrom:]
  -[_MRLyricsItemProtobuf readFrom:]
  -[_MRLyricsItemProtobuf copyTo:]
  -[_MRLyricsItemProtobuf setToken:]
  -[_MRLyricsItemProtobuf hasToken]
  -[_MRLyricsItemProtobuf lyrics]
  -[_MRLyricsItemProtobuf hasLyrics]
  -[_MRLyricsItemProtobuf userProvided]
  -[_MRLyricsItemProtobuf setLyrics:]
  -[_MRLyricsItemProtobuf setUserProvided:]
  -[_MRLyricsItemProtobuf setHasUserProvided:]
  -[_MRLyricsItemProtobuf hasUserProvided]


MRExternalClientConnection : MRProtocolClientConnection
 @property  BOOL registeredToNowPlayingUpdates
 @property  BOOL registeredToVolumeUpdates
 @property  BOOL registeredKeyboardUpdates
 @property  BOOL registeredToOutputDeviceUpdates
 @property  unsigned int voiceRecordingState
 @property  MRCryptoPairingSession *cryptoSession
 @property  BOOL cryptoEnabled

  // instance methods
  -[MRExternalClientConnection .cxx_destruct]
  -[MRExternalClientConnection voiceRecordingState]
  -[MRExternalClientConnection setVoiceRecordingState:]
  -[MRExternalClientConnection cryptoSession]
  -[MRExternalClientConnection initWithInputStream:outputStream:runLoop:]
  -[MRExternalClientConnection setCryptoEnabled:]
  -[MRExternalClientConnection setCryptoSession:]
  -[MRExternalClientConnection decryptData:error:]
  -[MRExternalClientConnection encryptDataForMessage:]
  -[MRExternalClientConnection registeredToNowPlayingUpdates]
  -[MRExternalClientConnection setRegisteredToNowPlayingUpdates:]
  -[MRExternalClientConnection registeredToVolumeUpdates]
  -[MRExternalClientConnection setRegisteredToVolumeUpdates:]
  -[MRExternalClientConnection registeredKeyboardUpdates]
  -[MRExternalClientConnection setRegisteredKeyboardUpdates:]
  -[MRExternalClientConnection registeredToOutputDeviceUpdates]
  -[MRExternalClientConnection setRegisteredToOutputDeviceUpdates:]
  -[MRExternalClientConnection cryptoEnabled]


MRTextInputMessage : MRProtocolMessage
 @property  unsigned long actionType
 @property  NSString *text

  // instance methods
  -[MRTextInputMessage type]
  -[MRTextInputMessage text]
  -[MRTextInputMessage actionType]
  -[MRTextInputMessage initWithActionType:text:]


_MRLanguageOptionGroupProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasAllowEmptySelection
 @property  BOOL allowEmptySelection
 @property  BOOL hasDefaultLanguageOption
 @property  _MRLanguageOptionProtobuf *defaultLanguageOption
 @property  NSMutableArray *languageOptions

  // class methods
  +[_MRLanguageOptionGroupProtobuf languageOptionsType]

  // instance methods
  -[_MRLanguageOptionGroupProtobuf isEqual:]
  -[_MRLanguageOptionGroupProtobuf copyWithZone:]
  -[_MRLanguageOptionGroupProtobuf .cxx_destruct]
  -[_MRLanguageOptionGroupProtobuf dictionaryRepresentation]
  -[_MRLanguageOptionGroupProtobuf writeTo:]
  -[_MRLanguageOptionGroupProtobuf mergeFrom:]
  -[_MRLanguageOptionGroupProtobuf readFrom:]
  -[_MRLanguageOptionGroupProtobuf copyTo:]
  -[_MRLanguageOptionGroupProtobuf languageOptions]
  -[_MRLanguageOptionGroupProtobuf defaultLanguageOption]
  -[_MRLanguageOptionGroupProtobuf allowEmptySelection]
  -[_MRLanguageOptionGroupProtobuf setAllowEmptySelection:]
  -[_MRLanguageOptionGroupProtobuf setDefaultLanguageOption:]
  -[_MRLanguageOptionGroupProtobuf setLanguageOptions:]
  -[_MRLanguageOptionGroupProtobuf addLanguageOptions:]
  -[_MRLanguageOptionGroupProtobuf languageOptionsCount]
  -[_MRLanguageOptionGroupProtobuf clearLanguageOptions]
  -[_MRLanguageOptionGroupProtobuf languageOptionsAtIndex:]
  -[_MRLanguageOptionGroupProtobuf setHasAllowEmptySelection:]
  -[_MRLanguageOptionGroupProtobuf hasAllowEmptySelection]
  -[_MRLanguageOptionGroupProtobuf hasDefaultLanguageOption]


_MRSetVolumeMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasVolume
 @property  float volume
 @property  BOOL hasOutputDeviceUID
 @property  NSString *outputDeviceUID

  // instance methods
  -[_MRSetVolumeMessageProtobuf isEqual:]
  -[_MRSetVolumeMessageProtobuf copyWithZone:]
  -[_MRSetVolumeMessageProtobuf .cxx_destruct]
  -[_MRSetVolumeMessageProtobuf dictionaryRepresentation]
  -[_MRSetVolumeMessageProtobuf writeTo:]
  -[_MRSetVolumeMessageProtobuf mergeFrom:]
  -[_MRSetVolumeMessageProtobuf readFrom:]
  -[_MRSetVolumeMessageProtobuf copyTo:]
  -[_MRSetVolumeMessageProtobuf volume]
  -[_MRSetVolumeMessageProtobuf setVolume:]
  -[_MRSetVolumeMessageProtobuf setOutputDeviceUID:]
  -[_MRSetVolumeMessageProtobuf hasOutputDeviceUID]
  -[_MRSetVolumeMessageProtobuf outputDeviceUID]
  -[_MRSetVolumeMessageProtobuf setHasVolume:]
  -[_MRSetVolumeMessageProtobuf hasVolume]


_MRVoiceInputDevice : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasDeviceID
 @property  unsigned int deviceID
 @property  BOOL hasDescriptor
 @property  _MRVoiceInputDeviceDescriptorProtobuf *descriptor
 @property  BOOL hasRecordingState
 @property  int recordingState

  // instance methods
  -[_MRVoiceInputDevice isEqual:]
  -[_MRVoiceInputDevice copyWithZone:]
  -[_MRVoiceInputDevice .cxx_destruct]
  -[_MRVoiceInputDevice dictionaryRepresentation]
  -[_MRVoiceInputDevice writeTo:]
  -[_MRVoiceInputDevice deviceID]
  -[_MRVoiceInputDevice setDeviceID:]
  -[_MRVoiceInputDevice mergeFrom:]
  -[_MRVoiceInputDevice readFrom:]
  -[_MRVoiceInputDevice copyTo:]
  -[_MRVoiceInputDevice hasDeviceID]
  -[_MRVoiceInputDevice descriptor]
  -[_MRVoiceInputDevice setDescriptor:]
  -[_MRVoiceInputDevice hasDescriptor]
  -[_MRVoiceInputDevice recordingState]
  -[_MRVoiceInputDevice setRecordingState:]
  -[_MRVoiceInputDevice setHasDeviceID:]
  -[_MRVoiceInputDevice setHasRecordingState:]
  -[_MRVoiceInputDevice hasRecordingState]
  -[_MRVoiceInputDevice recordingStateAsString:]
  -[_MRVoiceInputDevice StringAsRecordingState:]


MRNowPlayingOriginClientManager : NSObject /usr/lib/libSystem.B.dylib <MRNowPlayingClientState>
  // class methods
  +[MRNowPlayingOriginClientManager sharedManager]

  // instance methods
  -[MRNowPlayingOriginClientManager init]
  -[MRNowPlayingOriginClientManager .cxx_destruct]
  -[MRNowPlayingOriginClientManager removeClient:]
  -[MRNowPlayingOriginClientManager playerClientForPlayerPath:]
  -[MRNowPlayingOriginClientManager originClientForOrigin:]
  -[MRNowPlayingOriginClientManager localOriginClient]
  -[MRNowPlayingOriginClientManager clientForPlayerPath:]
  -[MRNowPlayingOriginClientManager playerClientRequestsForPlayerPath:]
  -[MRNowPlayingOriginClientManager originClientForPlayerPath:]
  -[MRNowPlayingOriginClientManager restoreNowPlayingClientState]
  -[MRNowPlayingOriginClientManager removePlayer:]
  -[MRNowPlayingOriginClientManager removeOrigin:]
  -[MRNowPlayingOriginClientManager existingOriginClientRequestsForPlayerPath:]
  -[MRNowPlayingOriginClientManager removeOriginRequests:]
  -[MRNowPlayingOriginClientManager existingPlayerClientRequestsForPlayerPath:]
  -[MRNowPlayingOriginClientManager originClientRequestsForPlayerPath:]
  -[MRNowPlayingOriginClientManager existingOriginClientForPlayerPath:]
  -[MRNowPlayingOriginClientManager clientRequestsForPlayerPath:]
  -[MRNowPlayingOriginClientManager existingClientRequestsForPlayerPath:]
  -[MRNowPlayingOriginClientManager existingClientForPlayerPath:]


_MRColorProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasRed
 @property  float red
 @property  BOOL hasGreen
 @property  float green
 @property  BOOL hasBlue
 @property  float blue
 @property  BOOL hasAlpha
 @property  float alpha

  // instance methods
  -[_MRColorProtobuf isEqual:]
  -[_MRColorProtobuf copyWithZone:]
  -[_MRColorProtobuf dictionaryRepresentation]
  -[_MRColorProtobuf writeTo:]
  -[_MRColorProtobuf red]
  -[_MRColorProtobuf green]
  -[_MRColorProtobuf blue]
  -[_MRColorProtobuf alpha]
  -[_MRColorProtobuf mergeFrom:]
  -[_MRColorProtobuf readFrom:]
  -[_MRColorProtobuf copyTo:]
  -[_MRColorProtobuf setAlpha:]
  -[_MRColorProtobuf setBlue:]
  -[_MRColorProtobuf setGreen:]
  -[_MRColorProtobuf setRed:]
  -[_MRColorProtobuf setHasAlpha:]
  -[_MRColorProtobuf hasAlpha]
  -[_MRColorProtobuf setHasRed:]
  -[_MRColorProtobuf hasRed]
  -[_MRColorProtobuf setHasGreen:]
  -[_MRColorProtobuf hasGreen]
  -[_MRColorProtobuf setHasBlue:]
  -[_MRColorProtobuf hasBlue]


_MRRegisterVoiceInputDeviceResponseMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasDeviceID
 @property  unsigned int deviceID
 @property  BOOL hasErrorCode
 @property  unsigned int errorCode

  // instance methods
  -[_MRRegisterVoiceInputDeviceResponseMessageProtobuf isEqual:]
  -[_MRRegisterVoiceInputDeviceResponseMessageProtobuf copyWithZone:]
  -[_MRRegisterVoiceInputDeviceResponseMessageProtobuf dictionaryRepresentation]
  -[_MRRegisterVoiceInputDeviceResponseMessageProtobuf writeTo:]
  -[_MRRegisterVoiceInputDeviceResponseMessageProtobuf deviceID]
  -[_MRRegisterVoiceInputDeviceResponseMessageProtobuf setDeviceID:]
  -[_MRRegisterVoiceInputDeviceResponseMessageProtobuf mergeFrom:]
  -[_MRRegisterVoiceInputDeviceResponseMessageProtobuf readFrom:]
  -[_MRRegisterVoiceInputDeviceResponseMessageProtobuf copyTo:]
  -[_MRRegisterVoiceInputDeviceResponseMessageProtobuf hasDeviceID]
  -[_MRRegisterVoiceInputDeviceResponseMessageProtobuf errorCode]
  -[_MRRegisterVoiceInputDeviceResponseMessageProtobuf setErrorCode:]
  -[_MRRegisterVoiceInputDeviceResponseMessageProtobuf setHasErrorCode:]
  -[_MRRegisterVoiceInputDeviceResponseMessageProtobuf hasErrorCode]
  -[_MRRegisterVoiceInputDeviceResponseMessageProtobuf setHasDeviceID:]


_MRUpdateOutputDevicesMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  NSMutableArray *outputDevices

  // class methods
  +[_MRUpdateOutputDevicesMessageProtobuf outputDevicesType]

  // instance methods
  -[_MRUpdateOutputDevicesMessageProtobuf isEqual:]
  -[_MRUpdateOutputDevicesMessageProtobuf copyWithZone:]
  -[_MRUpdateOutputDevicesMessageProtobuf .cxx_destruct]
  -[_MRUpdateOutputDevicesMessageProtobuf dictionaryRepresentation]
  -[_MRUpdateOutputDevicesMessageProtobuf writeTo:]
  -[_MRUpdateOutputDevicesMessageProtobuf mergeFrom:]
  -[_MRUpdateOutputDevicesMessageProtobuf readFrom:]
  -[_MRUpdateOutputDevicesMessageProtobuf copyTo:]
  -[_MRUpdateOutputDevicesMessageProtobuf outputDevices]
  -[_MRUpdateOutputDevicesMessageProtobuf setOutputDevices:]
  -[_MRUpdateOutputDevicesMessageProtobuf addOutputDevices:]
  -[_MRUpdateOutputDevicesMessageProtobuf outputDevicesCount]
  -[_MRUpdateOutputDevicesMessageProtobuf clearOutputDevices]
  -[_MRUpdateOutputDevicesMessageProtobuf outputDevicesAtIndex:]


_MRSetNowPlayingClientMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasClient
 @property  _MRNowPlayingClientProtobuf *client

  // instance methods
  -[_MRSetNowPlayingClientMessageProtobuf isEqual:]
  -[_MRSetNowPlayingClientMessageProtobuf copyWithZone:]
  -[_MRSetNowPlayingClientMessageProtobuf .cxx_destruct]
  -[_MRSetNowPlayingClientMessageProtobuf dictionaryRepresentation]
  -[_MRSetNowPlayingClientMessageProtobuf client]
  -[_MRSetNowPlayingClientMessageProtobuf setClient:]
  -[_MRSetNowPlayingClientMessageProtobuf writeTo:]
  -[_MRSetNowPlayingClientMessageProtobuf mergeFrom:]
  -[_MRSetNowPlayingClientMessageProtobuf readFrom:]
  -[_MRSetNowPlayingClientMessageProtobuf copyTo:]
  -[_MRSetNowPlayingClientMessageProtobuf hasClient]


MRCryptoPairingMessage : MRProtocolMessage
 @property  NSData *pairingData
 @property  int status
 @property  BOOL retrying
 @property  BOOL usingSystemPairing
 @property  unsigned long state

  // instance methods
  -[MRCryptoPairingMessage type]
  -[MRCryptoPairingMessage state]
  -[MRCryptoPairingMessage status]
  -[MRCryptoPairingMessage encryptionType]
  -[MRCryptoPairingMessage isUsingSystemPairing]
  -[MRCryptoPairingMessage pairingData]
  -[MRCryptoPairingMessage isRetrying]
  -[MRCryptoPairingMessage initWithPairingData:status:isRetrying:isUsingSystemPairing:state:]
  -[MRCryptoPairingMessage initWithPairingData:status:]


_MRGetVoiceInputDevicesMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
  // instance methods
  -[_MRGetVoiceInputDevicesMessageProtobuf isEqual:]
  -[_MRGetVoiceInputDevicesMessageProtobuf copyWithZone:]
  -[_MRGetVoiceInputDevicesMessageProtobuf dictionaryRepresentation]
  -[_MRGetVoiceInputDevicesMessageProtobuf writeTo:]
  -[_MRGetVoiceInputDevicesMessageProtobuf mergeFrom:]
  -[_MRGetVoiceInputDevicesMessageProtobuf readFrom:]
  -[_MRGetVoiceInputDevicesMessageProtobuf copyTo:]


_MRNowPlayingPlayerProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasIdentifier
 @property  NSString *identifier
 @property  BOOL hasDisplayName
 @property  NSString *displayName
 @property  BOOL hasAudioSessionType
 @property  int audioSessionType

  // instance methods
  -[_MRNowPlayingPlayerProtobuf isEqual:]
  -[_MRNowPlayingPlayerProtobuf copyWithZone:]
  -[_MRNowPlayingPlayerProtobuf .cxx_destruct]
  -[_MRNowPlayingPlayerProtobuf identifier]
  -[_MRNowPlayingPlayerProtobuf setIdentifier:]
  -[_MRNowPlayingPlayerProtobuf dictionaryRepresentation]
  -[_MRNowPlayingPlayerProtobuf displayName]
  -[_MRNowPlayingPlayerProtobuf writeTo:]
  -[_MRNowPlayingPlayerProtobuf mergeFrom:]
  -[_MRNowPlayingPlayerProtobuf readFrom:]
  -[_MRNowPlayingPlayerProtobuf copyTo:]
  -[_MRNowPlayingPlayerProtobuf setDisplayName:]
  -[_MRNowPlayingPlayerProtobuf hasIdentifier]
  -[_MRNowPlayingPlayerProtobuf hasDisplayName]
  -[_MRNowPlayingPlayerProtobuf setAudioSessionType:]
  -[_MRNowPlayingPlayerProtobuf audioSessionType]
  -[_MRNowPlayingPlayerProtobuf hasAudioSessionType]
  -[_MRNowPlayingPlayerProtobuf setHasAudioSessionType:]
  -[_MRNowPlayingPlayerProtobuf audioSessionTypeAsString:]
  -[_MRNowPlayingPlayerProtobuf StringAsAudioSessionType:]


_MRUnregisterGameControllerMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasControllerID
 @property  unsigned long controllerID

  // instance methods
  -[_MRUnregisterGameControllerMessageProtobuf isEqual:]
  -[_MRUnregisterGameControllerMessageProtobuf copyWithZone:]
  -[_MRUnregisterGameControllerMessageProtobuf dictionaryRepresentation]
  -[_MRUnregisterGameControllerMessageProtobuf writeTo:]
  -[_MRUnregisterGameControllerMessageProtobuf mergeFrom:]
  -[_MRUnregisterGameControllerMessageProtobuf readFrom:]
  -[_MRUnregisterGameControllerMessageProtobuf copyTo:]
  -[_MRUnregisterGameControllerMessageProtobuf setControllerID:]
  -[_MRUnregisterGameControllerMessageProtobuf setHasControllerID:]
  -[_MRUnregisterGameControllerMessageProtobuf hasControllerID]
  -[_MRUnregisterGameControllerMessageProtobuf controllerID]


MRVirtualTouchDeviceDescriptor : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSMutableCopying>
 @property  BOOL absolute
 @property  BOOL integratedDisplay
 @property  (_MRHIDSize={?=ff}[2f]) screenSize

  // instance methods
  -[MRVirtualTouchDeviceDescriptor copyWithZone:]
  -[MRVirtualTouchDeviceDescriptor mutableCopyWithZone:]
  -[MRVirtualTouchDeviceDescriptor isAbsolute]
  -[MRVirtualTouchDeviceDescriptor screenSize]
  -[MRVirtualTouchDeviceDescriptor _copyWithZone:usingConcreteClass:]
  -[MRVirtualTouchDeviceDescriptor isIntegratedDisplay]


MRMutableVirtualTouchDeviceDescriptor : MRVirtualTouchDeviceDescriptor
 @property  BOOL absolute
 @property  BOOL integratedDisplay
 @property  (_MRHIDSize={?=ff}[2f]) screenSize

  // instance methods
  -[MRMutableVirtualTouchDeviceDescriptor setScreenSize:]
  -[MRMutableVirtualTouchDeviceDescriptor setAbsolute:]
  -[MRMutableVirtualTouchDeviceDescriptor setIntegratedDisplay:]


MRTextEditingAttributes : NSObject /usr/lib/libSystem.B.dylib <NSMutableCopying>
 @property  NSString *title
 @property  NSString *prompt
 @property  {_MRTextInputTraits=IIIII{?=qq}BB[10q]Q} inputTraits

  // instance methods
  -[MRTextEditingAttributes copyWithZone:]
  -[MRTextEditingAttributes mutableCopyWithZone:]
  -[MRTextEditingAttributes .cxx_destruct]
  -[MRTextEditingAttributes title]
  -[MRTextEditingAttributes prompt]
  -[MRTextEditingAttributes _copyWithZone:usingConcreteClass:]
  -[MRTextEditingAttributes inputTraits]
  -[MRTextEditingAttributes initWithTitle:prompt:]


MRMutableTextEditingAttributes : MRTextEditingAttributes
 @property  NSString *title
 @property  NSString *prompt
 @property  {_MRTextInputTraits=IIIII{?=qq}BB[10q]Q} inputTraits

  // instance methods
  -[MRMutableTextEditingAttributes setTitle:]
  -[MRMutableTextEditingAttributes setPrompt:]
  -[MRMutableTextEditingAttributes setInputTraits:]


MRTextEditingSession : NSObject /usr/lib/libSystem.B.dylib <NSMutableCopying>
 @property  unsigned long uniqueIdentifier
 @property  NSString *text
 @property  BOOL editing
 @property  MRTextEditingAttributes *attributes

  // instance methods
  -[MRTextEditingSession init]
  -[MRTextEditingSession copyWithZone:]
  -[MRTextEditingSession mutableCopyWithZone:]
  -[MRTextEditingSession .cxx_destruct]
  -[MRTextEditingSession attributes]
  -[MRTextEditingSession uniqueIdentifier]
  -[MRTextEditingSession text]
  -[MRTextEditingSession isEditing]
  -[MRTextEditingSession _copyWithZone:usingConcreteClass:]
  -[MRTextEditingSession initWithText:attributes:]


MRMutableTextEditingSession : MRTextEditingSession
 @property  NSString *text
 @property  BOOL editing
 @property  MRTextEditingAttributes *attributes

  // instance methods
  -[MRMutableTextEditingSession setAttributes:]
  -[MRMutableTextEditingSession setText:]
  -[MRMutableTextEditingSession setEditing:]


MRAVReconnaissanceSession : NSObject /usr/lib/libSystem.B.dylib
 @property  NSSet *matchingOutputDeviceUIDsSet
 @property  NSString *matchingOutputDeviceGroupID
 @property  MRAVRoutingDiscoverySession *discoverySession
 @property  id discoverySessionCallbackToken
 @property  @? callback
 @property  NSObject<OS_dispatch_source> *timeoutTimer
 @property  NSObject<OS_dispatch_queue> *callbackSyncQueue
 @property  BOOL searchInProgress
 @property  BOOL shouldWaitForUnanimousEndpoints
 @property  NSMutableSet *matchingDevicesFound
 @property  NSMutableArray *matchingEndpointsFound
 @property  MRAVEndpoint *unanimousEndpoint
 @property  NSArray *availableOutputDevices
 @property  NSArray *availableEndpoints
 @property  unsigned long updatesReceived
 @property  NSArray *lastProcessedOutputDevices
 @property  NSArray *lastProcessedEndpoints
 @property  NSArray *matchingOutputDeviceUIDs
 @property  unsigned int endpointFeatures
 @property  BOOL useWeakMatching
 @property  BOOL returnPartialResults
 @property  NSArray *matchingLogicalDeviceIDs

  // instance methods
  -[MRAVReconnaissanceSession dealloc]
  -[MRAVReconnaissanceSession .cxx_destruct]
  -[MRAVReconnaissanceSession callback]
  -[MRAVReconnaissanceSession setCallback:]
  -[MRAVReconnaissanceSession setTimeoutTimer:]
  -[MRAVReconnaissanceSession timeoutTimer]
  -[MRAVReconnaissanceSession availableOutputDevices]
  -[MRAVReconnaissanceSession cancelSearch]
  -[MRAVReconnaissanceSession setSearchInProgress:]
  -[MRAVReconnaissanceSession searchInProgress]
  -[MRAVReconnaissanceSession initWithOutputDeviceUIDs:outputDeviceGroupID:features:]
  -[MRAVReconnaissanceSession beginSearchWithTimeout:completion:]
  -[MRAVReconnaissanceSession setMatchingLogicalDeviceIDs:]
  -[MRAVReconnaissanceSession endpointFeatures]
  -[MRAVReconnaissanceSession availableEndpoints]
  -[MRAVReconnaissanceSession discoverySession]
  -[MRAVReconnaissanceSession setReturnPartialResults:]
  -[MRAVReconnaissanceSession _onQueue_timeoutTimerFired]
  -[MRAVReconnaissanceSession _discoverySessionEndpointsChangedCallback:]
  -[MRAVReconnaissanceSession _discoverySessionOutputDevicesChangedCallback:]
  -[MRAVReconnaissanceSession _onQueue_cancelSearch]
  -[MRAVReconnaissanceSession beginSearchWithTimeout:endpointsCompletion:]
  -[MRAVReconnaissanceSession setUnanimousEndpoint:]
  -[MRAVReconnaissanceSession _processSearchLoop]
  -[MRAVReconnaissanceSession _onQueue_updateCachedOutputDevices:endpoints:]
  -[MRAVReconnaissanceSession unanimousEndpoint]
  -[MRAVReconnaissanceSession shouldWaitForUnanimousEndpoints]
  -[MRAVReconnaissanceSession _onQueue_concludeSearch]
  -[MRAVReconnaissanceSession _onQueue_endSearch]
  -[MRAVReconnaissanceSession matchingOutputDeviceUIDs]
  -[MRAVReconnaissanceSession matchingOutputDeviceGroupID]
  -[MRAVReconnaissanceSession setDiscoverySession:]
  -[MRAVReconnaissanceSession useWeakMatching]
  -[MRAVReconnaissanceSession setUseWeakMatching:]
  -[MRAVReconnaissanceSession returnPartialResults]
  -[MRAVReconnaissanceSession matchingLogicalDeviceIDs]
  -[MRAVReconnaissanceSession matchingOutputDeviceUIDsSet]
  -[MRAVReconnaissanceSession setMatchingOutputDeviceUIDsSet:]
  -[MRAVReconnaissanceSession setMatchingOutputDeviceGroupID:]
  -[MRAVReconnaissanceSession discoverySessionCallbackToken]
  -[MRAVReconnaissanceSession setDiscoverySessionCallbackToken:]
  -[MRAVReconnaissanceSession callbackSyncQueue]
  -[MRAVReconnaissanceSession setCallbackSyncQueue:]
  -[MRAVReconnaissanceSession setShouldWaitForUnanimousEndpoints:]
  -[MRAVReconnaissanceSession matchingDevicesFound]
  -[MRAVReconnaissanceSession setMatchingDevicesFound:]
  -[MRAVReconnaissanceSession matchingEndpointsFound]
  -[MRAVReconnaissanceSession setMatchingEndpointsFound:]
  -[MRAVReconnaissanceSession setAvailableOutputDevices:]
  -[MRAVReconnaissanceSession setAvailableEndpoints:]
  -[MRAVReconnaissanceSession updatesReceived]
  -[MRAVReconnaissanceSession setUpdatesReceived:]
  -[MRAVReconnaissanceSession lastProcessedOutputDevices]
  -[MRAVReconnaissanceSession setLastProcessedOutputDevices:]
  -[MRAVReconnaissanceSession lastProcessedEndpoints]
  -[MRAVReconnaissanceSession setLastProcessedEndpoints:]


MRAVLightweightReconnaissanceSession : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[MRAVLightweightReconnaissanceSession searchEndpointsForOutputDeviceUID:timeout:reason:queue:completion:]
  -[MRAVLightweightReconnaissanceSession searchForOutputDeviceUID:timeout:reason:queue:completion:]
  -[MRAVLightweightReconnaissanceSession searchForLogicalOutputDeviceUID:timeout:reason:queue:completion:]


_MRGameControllerMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasControllerID
 @property  unsigned long controllerID
 @property  BOOL hasMotion
 @property  _MRGameControllerMotionProtobuf *motion
 @property  BOOL hasButtons
 @property  _MRGameControllerButtonsProtobuf *buttons
 @property  BOOL hasDigitizer
 @property  _MRGameControllerDigitizerProtobuf *digitizer

  // instance methods
  -[_MRGameControllerMessageProtobuf isEqual:]
  -[_MRGameControllerMessageProtobuf copyWithZone:]
  -[_MRGameControllerMessageProtobuf .cxx_destruct]
  -[_MRGameControllerMessageProtobuf dictionaryRepresentation]
  -[_MRGameControllerMessageProtobuf writeTo:]
  -[_MRGameControllerMessageProtobuf mergeFrom:]
  -[_MRGameControllerMessageProtobuf readFrom:]
  -[_MRGameControllerMessageProtobuf copyTo:]
  -[_MRGameControllerMessageProtobuf setButtons:]
  -[_MRGameControllerMessageProtobuf buttons]
  -[_MRGameControllerMessageProtobuf setControllerID:]
  -[_MRGameControllerMessageProtobuf setHasControllerID:]
  -[_MRGameControllerMessageProtobuf hasControllerID]
  -[_MRGameControllerMessageProtobuf controllerID]
  -[_MRGameControllerMessageProtobuf hasButtons]
  -[_MRGameControllerMessageProtobuf hasMotion]
  -[_MRGameControllerMessageProtobuf setMotion:]
  -[_MRGameControllerMessageProtobuf setDigitizer:]
  -[_MRGameControllerMessageProtobuf hasDigitizer]
  -[_MRGameControllerMessageProtobuf digitizer]
  -[_MRGameControllerMessageProtobuf motion]


_MRSendVoiceInputMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasDataBlock
 @property  _MRAudioDataBlockProtobuf *dataBlock

  // instance methods
  -[_MRSendVoiceInputMessageProtobuf isEqual:]
  -[_MRSendVoiceInputMessageProtobuf copyWithZone:]
  -[_MRSendVoiceInputMessageProtobuf .cxx_destruct]
  -[_MRSendVoiceInputMessageProtobuf dictionaryRepresentation]
  -[_MRSendVoiceInputMessageProtobuf writeTo:]
  -[_MRSendVoiceInputMessageProtobuf mergeFrom:]
  -[_MRSendVoiceInputMessageProtobuf readFrom:]
  -[_MRSendVoiceInputMessageProtobuf copyTo:]
  -[_MRSendVoiceInputMessageProtobuf setDataBlock:]
  -[_MRSendVoiceInputMessageProtobuf dataBlock]
  -[_MRSendVoiceInputMessageProtobuf hasDataBlock]


_MRPlaybackQueueProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasLocation
 @property  int location
 @property  NSMutableArray *contentItems
 @property  BOOL hasContext
 @property  _MRPlaybackQueueContextProtobuf *context
 @property  BOOL hasRequestID
 @property  NSString *requestID
 @property  BOOL hasResolvedPlayerPath
 @property  _MRNowPlayingPlayerPathProtobuf *resolvedPlayerPath
 @property  BOOL hasSendingPlaybackQueueTransaction
 @property  BOOL sendingPlaybackQueueTransaction
 @property  BOOL hasQueueIdentifier
 @property  NSString *queueIdentifier

  // class methods
  +[_MRPlaybackQueueProtobuf contentItemType]

  // instance methods
  -[_MRPlaybackQueueProtobuf isEqual:]
  -[_MRPlaybackQueueProtobuf copyWithZone:]
  -[_MRPlaybackQueueProtobuf .cxx_destruct]
  -[_MRPlaybackQueueProtobuf dictionaryRepresentation]
  -[_MRPlaybackQueueProtobuf context]
  -[_MRPlaybackQueueProtobuf location]
  -[_MRPlaybackQueueProtobuf setContext:]
  -[_MRPlaybackQueueProtobuf writeTo:]
  -[_MRPlaybackQueueProtobuf mergeFrom:]
  -[_MRPlaybackQueueProtobuf readFrom:]
  -[_MRPlaybackQueueProtobuf copyTo:]
  -[_MRPlaybackQueueProtobuf setLocation:]
  -[_MRPlaybackQueueProtobuf hasLocation]
  -[_MRPlaybackQueueProtobuf hasContext]
  -[_MRPlaybackQueueProtobuf requestID]
  -[_MRPlaybackQueueProtobuf setRequestID:]
  -[_MRPlaybackQueueProtobuf setHasLocation:]
  -[_MRPlaybackQueueProtobuf queueIdentifier]
  -[_MRPlaybackQueueProtobuf setQueueIdentifier:]
  -[_MRPlaybackQueueProtobuf setContentItems:]
  -[_MRPlaybackQueueProtobuf contentItems]
  -[_MRPlaybackQueueProtobuf hasRequestID]
  -[_MRPlaybackQueueProtobuf hasQueueIdentifier]
  -[_MRPlaybackQueueProtobuf contentItemsCount]
  -[_MRPlaybackQueueProtobuf clearContentItems]
  -[_MRPlaybackQueueProtobuf resolvedPlayerPath]
  -[_MRPlaybackQueueProtobuf setResolvedPlayerPath:]
  -[_MRPlaybackQueueProtobuf hasSendingPlaybackQueueTransaction]
  -[_MRPlaybackQueueProtobuf sendingPlaybackQueueTransaction]
  -[_MRPlaybackQueueProtobuf setSendingPlaybackQueueTransaction:]
  -[_MRPlaybackQueueProtobuf addContentItem:]
  -[_MRPlaybackQueueProtobuf contentItemAtIndex:]
  -[_MRPlaybackQueueProtobuf hasResolvedPlayerPath]
  -[_MRPlaybackQueueProtobuf setHasSendingPlaybackQueueTransaction:]


_MRVideoThumbnailProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasImageData
 @property  NSData *imageData
 @property  BOOL hasTime
 @property  double time

  // instance methods
  -[_MRVideoThumbnailProtobuf isEqual:]
  -[_MRVideoThumbnailProtobuf copyWithZone:]
  -[_MRVideoThumbnailProtobuf .cxx_destruct]
  -[_MRVideoThumbnailProtobuf dictionaryRepresentation]
  -[_MRVideoThumbnailProtobuf time]
  -[_MRVideoThumbnailProtobuf writeTo:]
  -[_MRVideoThumbnailProtobuf setTime:]
  -[_MRVideoThumbnailProtobuf mergeFrom:]
  -[_MRVideoThumbnailProtobuf readFrom:]
  -[_MRVideoThumbnailProtobuf copyTo:]
  -[_MRVideoThumbnailProtobuf imageData]
  -[_MRVideoThumbnailProtobuf setHasTime:]
  -[_MRVideoThumbnailProtobuf hasTime]
  -[_MRVideoThumbnailProtobuf setImageData:]
  -[_MRVideoThumbnailProtobuf hasImageData]


MRAVConcreteRoutingDiscoverySession : MRAVRoutingDiscoverySession
 @property  NSArray *availableEndpoints
 @property  NSArray *availableOutputDevices

  // instance methods
  -[MRAVConcreteRoutingDiscoverySession dealloc]
  -[MRAVConcreteRoutingDiscoverySession .cxx_destruct]
  -[MRAVConcreteRoutingDiscoverySession setDiscoveryMode:]
  -[MRAVConcreteRoutingDiscoverySession routingContextUID]
  -[MRAVConcreteRoutingDiscoverySession discoveryMode]
  -[MRAVConcreteRoutingDiscoverySession devicePresenceDetected]
  -[MRAVConcreteRoutingDiscoverySession availableOutputDevices]
  -[MRAVConcreteRoutingDiscoverySession setRoutingContextUID:]
  -[MRAVConcreteRoutingDiscoverySession _availableOutputDevicesDidChangeNotification:]
  -[MRAVConcreteRoutingDiscoverySession endpointFeatures]
  -[MRAVConcreteRoutingDiscoverySession availableEndpoints]
  -[MRAVConcreteRoutingDiscoverySession initWithEndpointFeatures:]
  -[MRAVConcreteRoutingDiscoverySession targetAudioSessionID]
  -[MRAVConcreteRoutingDiscoverySession setTargetAudioSessionID:]
  -[MRAVConcreteRoutingDiscoverySession _scheduleAvailableEndpointsAndOutputDevicesReload]
  -[MRAVConcreteRoutingDiscoverySession _onQueue_reloadAvailableOutputDevices]


MRAVInputStream : MRAVBufferedInputStream <AVOutputContextCommunicationChannelDelegate>
 @property  AVOutputContext *outputContext
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MRAVInputStream dealloc]
  -[MRAVInputStream initWithURL:]
  -[MRAVInputStream initWithData:]
  -[MRAVInputStream .cxx_destruct]
  -[MRAVInputStream outputContext]
  -[MRAVInputStream outputContext:didReceiveData:fromCommunicationChannel:]
  -[MRAVInputStream outputContext:didCloseCommunicationChannel:]
  -[MRAVInputStream initWithOutputContext:]


MRAVOutputStream : MRAVBufferedOutputStream
 @property  BOOL channelIsOpen
 @property  AVOutputContext *outputContext
 @property  AVOutputContextCommunicationChannel *communicationChannel
 @property  BOOL channelOpen
 @property  long long connectionType

  // instance methods
  -[MRAVOutputStream dealloc]
  -[MRAVOutputStream initWithURL:append:]
  -[MRAVOutputStream initToMemory]
  -[MRAVOutputStream initToBuffer:capacity:]
  -[MRAVOutputStream write:maxLength:]
  -[MRAVOutputStream hasSpaceAvailable]
  -[MRAVOutputStream .cxx_destruct]
  -[MRAVOutputStream connectionType]
  -[MRAVOutputStream outputContext]
  -[MRAVOutputStream initWithOutputContext:connectionType:]
  -[MRAVOutputStream isChannelOpen]
  -[MRAVOutputStream _outputContextDidCloseCommunicationChannelNotification:]
  -[MRAVOutputStream initWithCommunicationChannel:]
  -[MRAVOutputStream communicationChannel]
  -[MRAVOutputStream channelIsOpen]
  -[MRAVOutputStream setChannelIsOpen:]


MRApplicationActivity : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, NSMutableCopying>
 @property  NSUUID *uniqueIdentifier
 @property  NSString *primaryApplicationDisplayID
 @property  NSString *secondaryApplicationDisplayID
 @property  int status
 @property  int creatorProcessID

  // class methods
  +[MRApplicationActivity supportsSecureCoding]

  // instance methods
  -[MRApplicationActivity isEqual:]
  -[MRApplicationActivity copyWithZone:]
  -[MRApplicationActivity mutableCopyWithZone:]
  -[MRApplicationActivity encodeWithCoder:]
  -[MRApplicationActivity initWithCoder:]
  -[MRApplicationActivity .cxx_destruct]
  -[MRApplicationActivity status]
  -[MRApplicationActivity uniqueIdentifier]
  -[MRApplicationActivity _copyWithZone:usingConcreteClass:]
  -[MRApplicationActivity initWithPrimaryAppDisplayID:secondaryAppDisplayID:]
  -[MRApplicationActivity primaryApplicationDisplayID]
  -[MRApplicationActivity secondaryApplicationDisplayID]
  -[MRApplicationActivity creatorProcessID]


MRMutableApplicationActivity : MRApplicationActivity <NSSecureCoding>
 @property  NSString *primaryApplicationDisplayID
 @property  NSString *secondaryApplicationDisplayID
 @property  int status

  // class methods
  +[MRMutableApplicationActivity supportsSecureCoding]

  // instance methods
  -[MRMutableApplicationActivity setStatus:]
  -[MRMutableApplicationActivity setPrimaryApplicationDisplayID:]
  -[MRMutableApplicationActivity setSecondaryApplicationDisplayID:]


_MRRegisterHIDDeviceMessageProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasDeviceDescriptor
 @property  _MRVirtualTouchDeviceDescriptorProtobuf *deviceDescriptor

  // instance methods
  -[_MRRegisterHIDDeviceMessageProtobuf isEqual:]
  -[_MRRegisterHIDDeviceMessageProtobuf copyWithZone:]
  -[_MRRegisterHIDDeviceMessageProtobuf .cxx_destruct]
  -[_MRRegisterHIDDeviceMessageProtobuf dictionaryRepresentation]
  -[_MRRegisterHIDDeviceMessageProtobuf writeTo:]
  -[_MRRegisterHIDDeviceMessageProtobuf mergeFrom:]
  -[_MRRegisterHIDDeviceMessageProtobuf readFrom:]
  -[_MRRegisterHIDDeviceMessageProtobuf copyTo:]
  -[_MRRegisterHIDDeviceMessageProtobuf setDeviceDescriptor:]
  -[_MRRegisterHIDDeviceMessageProtobuf deviceDescriptor]
  -[_MRRegisterHIDDeviceMessageProtobuf hasDeviceDescriptor]


_MRTransactionKeyProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasIdentifier
 @property  NSString *identifier
 @property  BOOL hasUserData
 @property  NSData *userData

  // instance methods
  -[_MRTransactionKeyProtobuf isEqual:]
  -[_MRTransactionKeyProtobuf copyWithZone:]
  -[_MRTransactionKeyProtobuf .cxx_destruct]
  -[_MRTransactionKeyProtobuf identifier]
  -[_MRTransactionKeyProtobuf setIdentifier:]
  -[_MRTransactionKeyProtobuf dictionaryRepresentation]
  -[_MRTransactionKeyProtobuf writeTo:]
  -[_MRTransactionKeyProtobuf mergeFrom:]
  -[_MRTransactionKeyProtobuf readFrom:]
  -[_MRTransactionKeyProtobuf copyTo:]
  -[_MRTransactionKeyProtobuf userData]
  -[_MRTransactionKeyProtobuf setUserData:]
  -[_MRTransactionKeyProtobuf hasIdentifier]
  -[_MRTransactionKeyProtobuf hasUserData]


_MRNowPlayingPlayerPathProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL isLocal
 @property  BOOL isResolved
 @property  BOOL hasOrigin
 @property  _MROriginProtobuf *origin
 @property  BOOL hasClient
 @property  _MRNowPlayingClientProtobuf *client
 @property  BOOL hasPlayer
 @property  _MRNowPlayingPlayerProtobuf *player

  // class methods
  +[_MRNowPlayingPlayerPathProtobuf initialize]

  // instance methods
  -[_MRNowPlayingPlayerPathProtobuf isEqual:]
  -[_MRNowPlayingPlayerPathProtobuf copyWithZone:]
  -[_MRNowPlayingPlayerPathProtobuf .cxx_destruct]
  -[_MRNowPlayingPlayerPathProtobuf dictionaryRepresentation]
  -[_MRNowPlayingPlayerPathProtobuf client]
  -[_MRNowPlayingPlayerPathProtobuf setClient:]
  -[_MRNowPlayingPlayerPathProtobuf isResolved]
  -[_MRNowPlayingPlayerPathProtobuf writeTo:]
  -[_MRNowPlayingPlayerPathProtobuf origin]
  -[_MRNowPlayingPlayerPathProtobuf mergeFrom:]
  -[_MRNowPlayingPlayerPathProtobuf readFrom:]
  -[_MRNowPlayingPlayerPathProtobuf copyTo:]
  -[_MRNowPlayingPlayerPathProtobuf setOrigin:]
  -[_MRNowPlayingPlayerPathProtobuf isLocal]
  -[_MRNowPlayingPlayerPathProtobuf hasOrigin]
  -[_MRNowPlayingPlayerPathProtobuf customDescription]
  -[_MRNowPlayingPlayerPathProtobuf player]
  -[_MRNowPlayingPlayerPathProtobuf setPlayer:]
  -[_MRNowPlayingPlayerPathProtobuf hasClient]
  -[_MRNowPlayingPlayerPathProtobuf customDictionaryRepresentation]
  -[_MRNowPlayingPlayerPathProtobuf hasPlayer]


_MRGameControllerMotionProtobuf : PBCodable /System/Library/Frameworks/ImageIO.framework/ImageIO <NSCopying>
 @property  BOOL hasGravity
 @property  _MRGameControllerAccelerationProtobuf *gravity
 @property  BOOL hasUserAcceleration
 @property  _MRGameControllerAccelerationProtobuf *userAcceleration
 @property  BOOL hasAttitude
 @property  _MRGameControllerAccelerationProtobuf *attitude
 @property  BOOL hasRotation
 @property  _MRGameControllerAccelerationProtobuf *rotation

  // instance methods
  -[_MRGameControllerMotionProtobuf isEqual:]
  -[_MRGameControllerMotionProtobuf copyWithZone:]
  -[_MRGameControllerMotionProtobuf .cxx_destruct]
  -[_MRGameControllerMotionProtobuf gravity]
  -[_MRGameControllerMotionProtobuf dictionaryRepresentation]
  -[_MRGameControllerMotionProtobuf writeTo:]
  -[_MRGameControllerMotionProtobuf rotation]
  -[_MRGameControllerMotionProtobuf setRotation:]
  -[_MRGameControllerMotionProtobuf mergeFrom:]
  -[_MRGameControllerMotionProtobuf readFrom:]
  -[_MRGameControllerMotionProtobuf copyTo:]
  -[_MRGameControllerMotionProtobuf setGravity:]
  -[_MRGameControllerMotionProtobuf attitude]
  -[_MRGameControllerMotionProtobuf userAcceleration]
  -[_MRGameControllerMotionProtobuf setUserAcceleration:]
  -[_MRGameControllerMotionProtobuf setAttitude:]
  -[_MRGameControllerMotionProtobuf hasGravity]
  -[_MRGameControllerMotionProtobuf hasUserAcceleration]
  -[_MRGameControllerMotionProtobuf hasAttitude]
  -[_MRGameControllerMotionProtobuf hasRotation]


MRPasscodeCredentials : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned int type
 @property  unsigned long characterCount
 @property  NSString *passcode

  // class methods
  +[MRPasscodeCredentials standardCredentials]
  +[MRPasscodeCredentials _randomPasscode]

  // instance methods
  -[MRPasscodeCredentials type]
  -[MRPasscodeCredentials setType:]
  -[MRPasscodeCredentials .cxx_destruct]
  -[MRPasscodeCredentials characterCount]
  -[MRPasscodeCredentials passcode]
  -[MRPasscodeCredentials setPasscode:]
  -[MRPasscodeCredentials setCharacterCount:]


MRProtocolMessageLogger : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL shouldLog

  // class methods
  +[MRProtocolMessageLogger sharedLogger]

  // instance methods
  -[MRProtocolMessageLogger init]
  -[MRProtocolMessageLogger shouldLog]
  -[MRProtocolMessageLogger logMessage:client:protocolMessage:]
  -[MRProtocolMessageLogger setShouldLog:]


MRVirtualVoiceInputDeviceDescriptor : NSObject /usr/lib/libSystem.B.dylib <NSMutableCopying>
 @property  NSArray *supportedFormats
 @property  NSDictionary *defaultFormat
 @property  NSData *data
 @property  _MRVoiceInputDeviceDescriptorProtobuf *protobuf

  // instance methods
  -[MRVirtualVoiceInputDeviceDescriptor copyWithZone:]
  -[MRVirtualVoiceInputDeviceDescriptor mutableCopyWithZone:]
  -[MRVirtualVoiceInputDeviceDescriptor initWithData:]
  -[MRVirtualVoiceInputDeviceDescriptor .cxx_destruct]
  -[MRVirtualVoiceInputDeviceDescriptor data]
  -[MRVirtualVoiceInputDeviceDescriptor defaultFormat]
  -[MRVirtualVoiceInputDeviceDescriptor protobuf]
  -[MRVirtualVoiceInputDeviceDescriptor initWithProtobuf:]
  -[MRVirtualVoiceInputDeviceDescriptor supportedFormats]
  -[MRVirtualVoiceInputDeviceDescriptor _copyWithZone:usingConcreteClass:]


MRMutableVirtualVoiceInputDeviceDescriptor : MRVirtualVoiceInputDeviceDescriptor
 @property  NSArray *supportedFormats
 @property  NSDictionary *defaultFormat

  // instance methods
  -[MRMutableVirtualVoiceInputDeviceDescriptor setDefaultFormat:]
  -[MRMutableVirtualVoiceInputDeviceDescriptor setSupportedFormats:]


PBCodable(MRAdditions)
	// instance methods
	-[PBCodable(MRAdditions) mr_valueForPotentiallyUndefinedKey:]

NSNotification(MRSerializationAdditions)
	// instance methods
	-[NSNotification(MRSerializationAdditions) playerPath]

NSDictionary(MRAdditions)
	// instance methods
	-[NSDictionary(MRAdditions) MR_isEqualToNowPlayingInfo:]

NSArray(MRAVAdditions)
	// instance methods
	-[NSArray(MRAVAdditions) mr_filter:]
	-[NSArray(MRAVAdditions) mr_isEqualToOutputDevicesArray:]
	-[NSArray(MRAVAdditions) mr_containsAnyOf:]
	-[NSArray(MRAVAdditions) mr_map:]

NSError(MRAdditions)
	// instance methods
	-[NSError(MRAdditions) initWithMRError:description:]
	-[NSError(MRAdditions) initWithMRError:]
	-[NSError(MRAdditions) initWithMRError:format:]
	-[NSError(MRAdditions) initWithMRError:userInfo:]

NSNumber(MRContentItemAdditions)
	// instance methods
	-[NSNumber(MRContentItemAdditions) _BoolValue]

NSSet(MRAVReconnaissanceSessionAdditions)
	// instance methods
	-[NSSet(MRAVReconnaissanceSessionAdditions) mr_containsObjectUsingWeakMatching:]

01 00 1100 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationProxy 
01 00 1100 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSBundleProxy 
01 00 0500 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 0900 /System/Library/PrivateFrameworks/MediaServices.framework/MediaServices: MSVBlockGuard 
01 00 0900 /System/Library/PrivateFrameworks/MediaServices.framework/MediaServices: MSVBloomFilter 
01 00 0900 /System/Library/PrivateFrameworks/MediaServices.framework/MediaServices: MSVCallback 
01 00 0900 /System/Library/PrivateFrameworks/MediaServices.framework/MediaServices: MSVMessageParser 
01 00 0900 /System/Library/PrivateFrameworks/MediaServices.framework/MediaServices: MSVMultiCallback 
01 00 0900 /System/Library/PrivateFrameworks/MediaServices.framework/MediaServices: MSVMutableBidirectionalDictionary 
01 00 0900 /System/Library/PrivateFrameworks/MediaServices.framework/MediaServices: MSVPair 
01 00 0900 /System/Library/PrivateFrameworks/MediaServices.framework/MediaServices: MSVTimer 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSInputStream 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMethodSignature 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0200 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSNetService 
01 00 0200 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSNetServiceBrowser 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotification 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 0f00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOrderedSet 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOutputStream 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPointerArray 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCCoder 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListenerEndpoint 
01 00 0b00 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBCodable 
01 00 0600 /System/Library/PrivateFrameworks/RemoteTextInput.framework/RemoteTextInput: RTIDataPayload 
01 00 0600 /System/Library/PrivateFrameworks/RemoteTextInput.framework/RemoteTextInput: RTIInputSystemSourceSession 
