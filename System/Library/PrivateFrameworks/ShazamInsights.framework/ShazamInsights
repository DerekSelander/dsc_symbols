|| __DATA.__objc_data _OBJC_CLASS_$_SHAffinityGroup
|| __DATA.__objc_data _OBJC_CLASS_$_SHAffinityGroupQuery
|| __DATA.__objc_data _OBJC_CLASS_$_SHClusterQuery
|| __DATA.__objc_data _OBJC_CLASS_$_SHClusterStatus
|| __DATA.__objc_data _OBJC_CLASS_$_SHMediaItemPropertyCollection
|| __DATA.__objc_data _OBJC_CLASS_$_SHRegion
|| __DATA.__objc_data _OBJC_METACLASS_$_SHAffinityGroup
|| __DATA.__objc_data _OBJC_METACLASS_$_SHAffinityGroupQuery
|| __DATA.__objc_data _OBJC_METACLASS_$_SHClusterQuery
|| __DATA.__objc_data _OBJC_METACLASS_$_SHClusterStatus
|| __DATA.__objc_data _OBJC_METACLASS_$_SHMediaItemPropertyCollection
|| __DATA.__objc_data _OBJC_METACLASS_$_SHRegion
|| __DATA_CONST.__const _SHInsightsErrorDomain
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreLocation: _CLLocationCoordinate2DMake
__ CoreLocation: _OBJC_CLASS_$_CLLocation
__ Foundation: _NSDebugDescriptionErrorKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedFailureErrorKey
__ Foundation: _NSSearchPathForDirectoriesInDomains
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileHandle
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSISO8601DateFormatter
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSMutableURLRequest
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSURLSession
__ Foundation: _OBJC_CLASS_$_NSUUID
__ ShazamKit: _OBJC_CLASS_$_SHBagContract
__ ShazamKit: _OBJC_CLASS_$_SHCompression
__ ShazamKit: _OBJC_CLASS_$_SHJSONLFileReader
__ ShazamKit: _OBJC_CLASS_$_SHMediaItem
__ ShazamKit: _OBJC_CLASS_$_SHTokenizedURL
__ ShazamKit: _SHMediaItemAppleMusicID
__ ShazamKit: _SHMediaItemArtist
__ ShazamKit: _SHMediaItemTitle
__ ShazamKit: _sh_log_object
__ StoreKit: _OBJC_CLASS_$_SKCloudServiceController
__ libSystem.B.dylib: _CC_SHA1_Final
__ libSystem.B.dylib: _CC_SHA1_Init
__ libSystem.B.dylib: _CC_SHA1_Update
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memchr
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _strlen
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x5
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libsqlite3.dylib: _sqlite3_bind_int
__ libsqlite3.dylib: _sqlite3_bind_int64
__ libsqlite3.dylib: _sqlite3_bind_text
__ libsqlite3.dylib: _sqlite3_close
__ libsqlite3.dylib: _sqlite3_column_int
__ libsqlite3.dylib: _sqlite3_column_text
__ libsqlite3.dylib: _sqlite3_create_collation
__ libsqlite3.dylib: _sqlite3_db_config
__ libsqlite3.dylib: _sqlite3_errmsg
__ libsqlite3.dylib: _sqlite3_exec
__ libsqlite3.dylib: _sqlite3_finalize
__ libsqlite3.dylib: _sqlite3_open
__ libsqlite3.dylib: _sqlite3_open_v2
__ libsqlite3.dylib: _sqlite3_prepare_v2
__ libsqlite3.dylib: _sqlite3_step
SHRegion : NSObject
 @property  NSString *geohash
 @property  CLLocation *location

  // instance methods
  -[SHRegion geohash]
  -[SHRegion initWithLocation:]
  -[SHRegion .cxx_destruct]
  -[SHRegion location]
  -[SHRegion initWithGeohash:]


SHClusterController : NSObject
 @property  SHClusterStatementRunner *query
 @property  SHClusterSQLiteDataStore *dataStore

  // class methods
  +[SHClusterController artistClusterDefaultLocationURL]
  +[SHClusterController trackClusterDefaultLocationURL]
  +[SHClusterController databaseURLForName:]

  // instance methods
  -[SHClusterController dataStore]
  -[SHClusterController initWithDataStore:]
  -[SHClusterController query]
  -[SHClusterController .cxx_destruct]
  -[SHClusterController mediaItemsSimilarToValue:forKey:completionHandler:]
  -[SHClusterController mediaItemsForPropertyCollection:completionHandler:]
  -[SHClusterController resultsFromQueryBlock:completionHandler:]
  -[SHClusterController affinityGroupsFromQueryCollection:filteredBySeedCollection:completionHandler:]
  -[SHClusterController filterQueryCollection:byItemsWithinCluster:]
  -[SHClusterController affinityGroupsAtCohesionLevel:forQuery:queryCollection:filteredBy:]


SHClusterLoader : NSObject
 @property  SHClusterSQLiteDataStore *dataStore
 @property  <SHDataFetcher> *dataFetcher

  // class methods
  +[SHClusterLoader loadDataForRequest:completionHandler:]

  // instance methods
  -[SHClusterLoader dataStore]
  -[SHClusterLoader .cxx_destruct]
  -[SHClusterLoader initWithDataFetcher:dataStore:]
  -[SHClusterLoader loadFromURL:type:storefront:reuseExistingData:completion:]
  -[SHClusterLoader dataFetcher]


SHAffinityGroupQuery : NSObject
  // class methods
  +[SHAffinityGroupQuery affinityGroupsForLocation:atDate:completionHandler:]


SHStubbedNetworkRequester : NSObject <SHNetworkRequester>
 @property  NSData *requestData
 @property  NSURL *downloadFileURL
 @property  NSHTTPURLResponse *httpResponse
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SHStubbedNetworkRequester requestData]
  -[SHStubbedNetworkRequester .cxx_destruct]
  -[SHStubbedNetworkRequester httpResponse]
  -[SHStubbedNetworkRequester downloadFileURL]
  -[SHStubbedNetworkRequester performRequest:completionHandler:]
  -[SHStubbedNetworkRequester downloadResourceFromRequest:completionHandler:]
  -[SHStubbedNetworkRequester initWithHTTPResponse:requestData:downloadFileURL:]


SHLocalDataFetcher : NSObject <SHDataFetcher>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SHLocalDataFetcher fetchClusterURL:forCurrentStorefront:cachedUniqueHash:completionHandler:]
  -[SHLocalDataFetcher clusterDataAtURL:forLocation:date:completionHandler:]


SHMediaItemPropertyCollection : NSObject
 @property  NSSet *collection
 @property  NSString *property

  // class methods
  +[SHMediaItemPropertyCollection collectionWithArray:representingProperty:]

  // instance methods
  -[SHMediaItemPropertyCollection property]
  -[SHMediaItemPropertyCollection collection]
  -[SHMediaItemPropertyCollection .cxx_destruct]
  -[SHMediaItemPropertyCollection initWithArray:representingProperty:]


SHClusterStatus : NSObject
 @property  NSURL *dataURL
 @property  long long loadStatus
 @property  BOOL isDataValid
 @property  SHClusterMetadata *metadata
 @property  NSString *uniqueHash
 @property  NSString *storefront
 @property  NSDate *creationDate
 @property  long long clusterType

  // instance methods
  -[SHClusterStatus clusterType]
  -[SHClusterStatus loadStatus]
  -[SHClusterStatus setLoadStatus:]
  -[SHClusterStatus .cxx_destruct]
  -[SHClusterStatus creationDate]
  -[SHClusterStatus setMetadata:]
  -[SHClusterStatus metadata]
  -[SHClusterStatus storefront]
  -[SHClusterStatus dataURL]
  -[SHClusterStatus setDataURL:]
  -[SHClusterStatus isDataValid]
  -[SHClusterStatus uniqueHash]
  -[SHClusterStatus setIsDataValid:]


SHFileChecksum : NSObject
  // class methods
  +[SHFileChecksum checksumForFile:withError:]
  +[SHFileChecksum checksumDataForFile:withError:]


SHJSONLClusterImporter : NSObject <SHClusterImporter>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SHJSONLClusterImporter loadDataFromFileInfo:withMetadata:toDestinationURL:error:]
  -[SHJSONLClusterImporter createTables:error:]
  -[SHJSONLClusterImporter insert:low:medium:high:]
  -[SHJSONLClusterImporter insert:appleMusicID:cohesionID:]


SHClusterImporterUtils : NSObject
  // class methods
  +[SHClusterImporterUtils cachesDirectory]
  +[SHClusterImporterUtils buildTemporaryClusterURLWithError:]
  +[SHClusterImporterUtils copyDatabaseFromURL:toDatabaseDestinationURL:error:]
  +[SHClusterImporterUtils clearTemporaryDatabaseFileAtURL:withError:]
  +[SHClusterImporterUtils importerForFile:]


SHClusterQuery : NSObject
 @property  NSURL *sourceURL
 @property  NSURL *destinationURL
 @property  long long type

  // class methods
  +[SHClusterQuery clusterForType:]
  +[SHClusterQuery artistsCluster]
  +[SHClusterQuery tracksCluster]

  // instance methods
  -[SHClusterQuery type]
  -[SHClusterQuery .cxx_destruct]
  -[SHClusterQuery sourceURL]
  -[SHClusterQuery destinationURL]
  -[SHClusterQuery initWithType:sourceURL:destinationURL:]
  -[SHClusterQuery controllerForType:withCompletionHandler:]
  -[SHClusterQuery filterMediaItemQueryCollection:bySeedCollection:completionHandler:]
  -[SHClusterQuery mediaItemsWithHighCohesionToValue:forProperty:completionHandler:]
  -[SHClusterQuery mediaItemsMatchingValuesInCollection:completionHandler:]
  -[SHClusterQuery statusWithCompletionHandler:]


SHSQLiteUtils : NSObject
  // class methods
  +[SHSQLiteUtils createDatabase:atURL:error:]
  +[SHSQLiteUtils openDatabase:atURL:error:]
  +[SHSQLiteUtils defenseAgainstBadDatabase:]
  +[SHSQLiteUtils closeDatabase:error:]
  +[SHSQLiteUtils runNoResultSQL:onDatabase:error:]
  +[SHSQLiteUtils runSQL:onDatabase:replacingTokens:withObjects:rowHandler:error:]
  +[SHSQLiteUtils database:hasPopulatedTable:error:]
  +[SHSQLiteUtils queryStringForCount:]
  +[SHSQLiteUtils startTransactionOnDatabase:]
  +[SHSQLiteUtils commitTransactionOnDatabase:]


SHClusterMetadataQuery : NSObject
  // class methods
  +[SHClusterMetadataQuery dateFormatter]
  +[SHClusterMetadataQuery dataStoreTypeFromString:]
  +[SHClusterMetadataQuery stringFromStoreType:]
  +[SHClusterMetadataQuery metadataFromDatabaseAtLocation:error:]
  +[SHClusterMetadataQuery writeMetadata:toDatabaseAtLocation:error:]


SHClusterMetadata : NSObject
 @property  NSString *uniqueHash
 @property  NSString *storefront
 @property  NSDate *creationDate
 @property  long long clusterType

  // instance methods
  -[SHClusterMetadata clusterType]
  -[SHClusterMetadata .cxx_destruct]
  -[SHClusterMetadata creationDate]
  -[SHClusterMetadata storefront]
  -[SHClusterMetadata uniqueHash]
  -[SHClusterMetadata initWithType:storefront:uniqueHash:creationDate:]


SHClusterJSONLReader : NSObject <SHJSONLDataDetokenizerDelegate>
 @property  unsigned long index
 @property  @? callback
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SHClusterJSONLReader callback]
  -[SHClusterJSONLReader setCallback:]
  -[SHClusterJSONLReader setIndex:]
  -[SHClusterJSONLReader index]
  -[SHClusterJSONLReader .cxx_destruct]
  -[SHClusterJSONLReader parsedJSONObject:error:]
  -[SHClusterJSONLReader readDataLineByLineFromURL:error:callback:]
  -[SHClusterJSONLReader importClusters:toParentCluster:startIndex:]


SHTimeAndPlaceController : NSObject
 @property  <SHDataFetcher> *dataFetcher

  // instance methods
  -[SHTimeAndPlaceController .cxx_destruct]
  -[SHTimeAndPlaceController dataFetcher]
  -[SHTimeAndPlaceController affinityGroupsFromData:atLocation:onDate:completionHandler:]


SHTimeAndPlaceAffinityGroup : NSObject
 @property  NSDictionary *geohashKeyedRegions
 @property  NSArray *regions
 @property  SHAffinityGroup *affinityGroup

  // instance methods
  -[SHTimeAndPlaceAffinityGroup .cxx_destruct]
  -[SHTimeAndPlaceAffinityGroup regions]
  -[SHTimeAndPlaceAffinityGroup initWithRegions:affinityGroup:]
  -[SHTimeAndPlaceAffinityGroup geohashKeyedRegions]
  -[SHTimeAndPlaceAffinityGroup regionsForGeohash:]
  -[SHTimeAndPlaceAffinityGroup affinityGroup]


SHInsightsConfiguration : NSObject
 @property  SHBagContract *bagContract
 @property  double tracksCachedDataMaxAge
 @property  BOOL tracksEnabled
 @property  double artistsCachedDataMaxAge
 @property  BOOL artistsEnabled
 @property  long long minGeoChartsGeohashLength
 @property  long long maxGeoChartsGeohashLength

  // class methods
  +[SHInsightsConfiguration bagContract]
  +[SHInsightsConfiguration fetchSharedInstanceWithCompletion:]

  // instance methods
  -[SHInsightsConfiguration bagContract]
  -[SHInsightsConfiguration initWithBagContract:]
  -[SHInsightsConfiguration .cxx_destruct]
  -[SHInsightsConfiguration init]
  -[SHInsightsConfiguration tracksCachedDataMaxAge]
  -[SHInsightsConfiguration tracksEnabled]
  -[SHInsightsConfiguration tracksClusterEndpointForStorefront:]
  -[SHInsightsConfiguration artistsCachedDataMaxAge]
  -[SHInsightsConfiguration artistsEnabled]
  -[SHInsightsConfiguration artistsClusterEndpoint]
  -[SHInsightsConfiguration geoChartsEndpointForDate:geoHash:]
  -[SHInsightsConfiguration maxGeoChartsGeohashLength]
  -[SHInsightsConfiguration minGeoChartsGeohashLength]
  -[SHInsightsConfiguration tokenizedURLForBagPathKey:]


SHClusterStatementRunner : NSObject
 @property  ^{sqlite3=} db
 @property  NSURL *databaseURL
 @property  NSArray *validDatabaseKeys

  // class methods
  +[SHClusterStatementRunner supportedKeys]

  // instance methods
  -[SHClusterStatementRunner databaseURL]
  -[SHClusterStatementRunner db]
  -[SHClusterStatementRunner dealloc]
  -[SHClusterStatementRunner .cxx_destruct]
  -[SHClusterStatementRunner initWithDatabaseURL:]
  -[SHClusterStatementRunner supportedKeysForDatabase]
  -[SHClusterStatementRunner mediaItemsSimilarToMediaItemValue:forKey:error:]
  -[SHClusterStatementRunner mediaItemsFromPropertyCollection:error:]
  -[SHClusterStatementRunner mediaItemsWithQuery:tokens:objects:error:]
  -[SHClusterStatementRunner mediaItemsAtCohesionLevel:forQueryMediaIDs:filteredBySeedMediaIDs:error:]
  -[SHClusterStatementRunner supportedKeysForDatabaseAsString]
  -[SHClusterStatementRunner supportedKeysForDatabaseAsStringWithPrefix:]
  -[SHClusterStatementRunner validDatabaseKeys]


SHClusterSQLiteDataStore : NSObject
 @property  long long clusterType
 @property  NSString *requiredStorefront
 @property  SHClusterStatus *dataStatus
 @property  double databaseMaxAge
 @property  NSURL *databaseFilePathURL

  // class methods
  +[SHClusterSQLiteDataStore sqliteDatabaseExistsAtURL:]

  // instance methods
  -[SHClusterSQLiteDataStore clusterType]
  -[SHClusterSQLiteDataStore .cxx_destruct]
  -[SHClusterSQLiteDataStore dataStatus]
  -[SHClusterSQLiteDataStore isDataLoaded]
  -[SHClusterSQLiteDataStore isDataValid]
  -[SHClusterSQLiteDataStore initWithClusterType:databaseMaxAge:forStorefront:databaseFilePathURL:]
  -[SHClusterSQLiteDataStore hasNotPassedExpiryDate:isForCountryCode:]
  -[SHClusterSQLiteDataStore databaseMaxAge]
  -[SHClusterSQLiteDataStore databaseFilePathURL]
  -[SHClusterSQLiteDataStore requiredStorefront]


SHClusterLoaderRequest : NSObject
 @property  SKCloudServiceController *cloudServiceController
 @property  NSURL *sourceURL
 @property  NSURL *outputURL
 @property  long long type
 @property  BOOL shouldDeleteExistingDatabaseAtOutputURL

  // instance methods
  -[SHClusterLoaderRequest type]
  -[SHClusterLoaderRequest .cxx_destruct]
  -[SHClusterLoaderRequest sourceURL]
  -[SHClusterLoaderRequest initWithType:]
  -[SHClusterLoaderRequest outputURL]
  -[SHClusterLoaderRequest cloudServiceController]
  -[SHClusterLoaderRequest initWithType:sourceURL:outputURL:]
  -[SHClusterLoaderRequest shouldDeleteExistingDatabaseAtOutputURL]
  -[SHClusterLoaderRequest URLForRequestForStorefront:withCompletion:]
  -[SHClusterLoaderRequest sourceURLWithCompletion:]
  -[SHClusterLoaderRequest clusterConfiguration:]


SHAffinityGroup : NSObject
 @property  NSMutableArray *mutableMediaItems
 @property  long long groupType
 @property  long long cohesionLevel
 @property  NSArray *mediaItems

  // instance methods
  -[SHAffinityGroup groupType]
  -[SHAffinityGroup .cxx_destruct]
  -[SHAffinityGroup init]
  -[SHAffinityGroup mediaItems]
  -[SHAffinityGroup initWithType:cohesionLevel:]
  -[SHAffinityGroup appendMediaItem:]
  -[SHAffinityGroup cohesionLevel]
  -[SHAffinityGroup mutableMediaItems]
  -[SHAffinityGroup setMutableMediaItems:]


SHTimeAndPlaceServerResponseParser : NSObject
  // class methods
  +[SHTimeAndPlaceServerResponseParser regionAffinityGroupsFromServerData:error:]


SHCDNDataFetcher : NSObject <SHDataFetcher>
 @property  <SHNetworkRequester> *networkRequester
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SHCDNDataFetcher .cxx_destruct]
  -[SHCDNDataFetcher networkRequester]
  -[SHCDNDataFetcher init]
  -[SHCDNDataFetcher fetchClusterURL:forCurrentStorefront:cachedUniqueHash:completionHandler:]
  -[SHCDNDataFetcher clusterDataAtURL:forLocation:date:completionHandler:]
  -[SHCDNDataFetcher initWithNetworkRequester:]
  -[SHCDNDataFetcher doesRequestEtag:matchInResponse:]
  -[SHCDNDataFetcher endpointFromDate:insights:location:]


SHInsightsError : NSObject
  // class methods
  +[SHInsightsError errorWithCode:underlyingError:]
  +[SHInsightsError errorWithCode:underlyingError:keyOverrides:]
  +[SHInsightsError messageForCode:]


SHInsightsNetworkRequester : NSObject <SHNetworkRequester>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SHInsightsNetworkRequester performRequest:completionHandler:]
  -[SHInsightsNetworkRequester downloadResourceFromRequest:completionHandler:]
  -[SHInsightsNetworkRequester response:data:error:]


SHDataFetcherFileInfo : NSObject
 @property  NSURL *dataFilePathURL
 @property  NSData *data
 @property  NSString *suggestedFileName
 @property  NSString *suggestedExtension
 @property  int compressionType
 @property  NSDate *creationDate
 @property  NSString *storefront
 @property  NSString *uniqueHash
 @property  NSString *mimeType

  // class methods
  +[SHDataFetcherFileInfo dataFetcherForSourceURL:]

  // instance methods
  -[SHDataFetcherFileInfo compressionType]
  -[SHDataFetcherFileInfo mimeType]
  -[SHDataFetcherFileInfo .cxx_destruct]
  -[SHDataFetcherFileInfo creationDate]
  -[SHDataFetcherFileInfo setCreationDate:]
  -[SHDataFetcherFileInfo setStorefront:]
  -[SHDataFetcherFileInfo data]
  -[SHDataFetcherFileInfo setMimeType:]
  -[SHDataFetcherFileInfo storefront]
  -[SHDataFetcherFileInfo initWithDataURL:]
  -[SHDataFetcherFileInfo uniqueHash]
  -[SHDataFetcherFileInfo initWithData:suggestedFileName:]
  -[SHDataFetcherFileInfo initWithDataURL:suggestedFileName:]
  -[SHDataFetcherFileInfo suggestedExtension]
  -[SHDataFetcherFileInfo dataFilePathURL]
  -[SHDataFetcherFileInfo suggestedFileName]
  -[SHDataFetcherFileInfo setUniqueHash:]


SHSQLiteClusterImporter : NSObject <SHClusterImporter>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SHSQLiteClusterImporter loadDataFromFileInfo:withMetadata:toDestinationURL:error:]


CLLocation(Geohash)
	// instance methods
	-[CLLocation(Geohash) sh_toGeohash]
	-[CLLocation(Geohash) sh_roundCoordinateValuesToGeohashOfLength:]
	-[CLLocation(Geohash) sh_geohashOfLength:]
	-[CLLocation(Geohash) sh_geoHashToCoordinates:]

01 00 0200 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLLocation 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileHandle 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSISO8601DateFormatter 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableURLRequest 
01 00 0600 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSession 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0400 /System/Library/Frameworks/ShazamKit.framework/ShazamKit: SHBagContract 
01 00 0400 /System/Library/Frameworks/ShazamKit.framework/ShazamKit: SHCompression 
01 00 0400 /System/Library/Frameworks/ShazamKit.framework/ShazamKit: SHJSONLFileReader 
01 00 0400 /System/Library/Frameworks/ShazamKit.framework/ShazamKit: SHMediaItem 
01 00 0400 /System/Library/Frameworks/ShazamKit.framework/ShazamKit: SHTokenizedURL 
01 00 0100 /System/Library/Frameworks/StoreKit.framework/StoreKit: SKCloudServiceController 
