|| __DATA.__data _HDSPAnalyticsDailyReportSummaryDayCount
|| __DATA.__data _HDSPHealthKitModelMigrationVersionKey
|| __DATA.__data _HDSPMobileTimerModelMigrationVersionKey
|| __DATA.__data _HDSPWakeUpResultsNotificationDaySummaryCount
|| __DATA.__data _HDSPWakeUpResultsNotificationMaxVariantLastNightDuration
|| __DATA.__data _HDSPWakeUpResultsNotificationMaxVariantOneWeekDuration
|| __DATA.__data _HDSPWakeUpResultsNotificationMaxVariantTwoWeekDuration
|| __DATA.__objc_data _OBJC_CLASS_$_HDSPAnalyticsDailyReportBuilder
|| __DATA.__objc_data _OBJC_CLASS_$_HDSPChargingReminderManager
|| __DATA.__objc_data _OBJC_CLASS_$_HDSPChargingReminderStateMachine
|| __DATA.__objc_data _OBJC_CLASS_$_HDSPDevicePowerMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_HDSPDistributedNotificationCenter
|| __DATA.__objc_data _OBJC_CLASS_$_HDSPSetSleepModeIDSMessage
|| __DATA.__objc_data _OBJC_CLASS_$_HDSPSimulatorReadyProvider
|| __DATA.__objc_data _OBJC_CLASS_$_HDSPSleepSession
|| __DATA.__objc_data _OBJC_CLASS_$_HDSPSleepSessionInterval
|| __DATA.__objc_data _OBJC_CLASS_$_HDSPTimeAsleepTracker
|| __DATA.__objc_data _OBJC_CLASS_$_HDSPTimeAsleepTrackerStateMachine
|| __DATA.__objc_data _OBJC_CLASS_$_HDSPWakeDetectionManager
|| __DATA.__objc_data _OBJC_CLASS_$_HDSPWakeUpResultsNotificationWaitingForRetryState
|| __DATA.__objc_data _OBJC_CLASS_$_HDSPWatchOnWristMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_HDSPWatchReadyProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_HDSPAnalyticsDailyReportBuilder
|| __DATA.__objc_data _OBJC_METACLASS_$_HDSPChargingReminderManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HDSPChargingReminderStateMachine
|| __DATA.__objc_data _OBJC_METACLASS_$_HDSPDevicePowerMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_HDSPDistributedNotificationCenter
|| __DATA.__objc_data _OBJC_METACLASS_$_HDSPSetSleepModeIDSMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_HDSPSimulatorReadyProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_HDSPSleepSession
|| __DATA.__objc_data _OBJC_METACLASS_$_HDSPSleepSessionInterval
|| __DATA.__objc_data _OBJC_METACLASS_$_HDSPTimeAsleepTracker
|| __DATA.__objc_data _OBJC_METACLASS_$_HDSPTimeAsleepTrackerStateMachine
|| __DATA.__objc_data _OBJC_METACLASS_$_HDSPWakeDetectionManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HDSPWakeUpResultsNotificationWaitingForRetryState
|| __DATA.__objc_data _OBJC_METACLASS_$_HDSPWatchOnWristMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_HDSPWatchReadyProvider
|| __DATA_CONST.__const _HDSPBundleID
|| __DATA_CONST.__const _HDSPDataVersionKey
|| __DATA_CONST.__const _HDSPDeviceWasUnlocked
|| __DATA_CONST.__const _HDSPDiagnosticNotification
|| __DATA_CONST.__const _HDSPPowerSourceNotification
|| __DATA_CONST.__const _HDSPSleepDetectedActivity
|| __DATA_CONST.__const _HDSPSleepSessionEndRequest
|| __DATA_CONST.__const _HDSPWakeUpResultsNotificationErrorDomain
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDSPAnalyticsManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDSPAssertionManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDSPContextStoreManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDSPDeviceUnlockMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDSPDiagnostics
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDSPDoNotDisturbManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDSPEnvironment
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDSPEnvironmentStateMachine
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDSPGoodMorningAlertManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDSPGoodMorningAlertStateMachine
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDSPMobileTimerBridge
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDSPNotificationListener
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDSPPhoneReadyProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDSPSleepActionManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDSPSleepAlarmManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDSPSleepDaemon
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDSPSleepEventList
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDSPSleepEventScheduler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDSPSleepLockScreenManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDSPSleepLockScreenStateMachine
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDSPSleepModeBedtimeState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDSPSleepModeManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDSPSleepModeManualBedtimeState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDSPSleepModeOffState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDSPSleepModeWindDownState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDSPSleepNotificationManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDSPSleepScheduleModelManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDSPSleepScheduleModelMigrationManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDSPSleepScheduleStateCoordinator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDSPSleepSessionManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDSPSleepStorage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDSPSleepStoreServer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDSPSleepTrackingManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDSPSpringboardMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDSPSystemMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDSPTimeInBedTracker
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDSPWakeUpResultsNotificationDelayingForTrackingState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDSPWakeUpResultsNotificationDisabledState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDSPWakeUpResultsNotificationNeedsProtectedDataState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDSPWakeUpResultsNotificationNotifiedState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDSPWakeUpResultsNotificationQueryingState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDSPWakeUpResultsNotificationStateMachine
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDSPWakeUpResultsNotificationStateMachineState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDSPWakeUpResultsNotificationWaitingForWakeUpState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDSPAnalyticsManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDSPAssertionManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDSPContextStoreManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDSPDeviceUnlockMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDSPDiagnostics
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDSPDoNotDisturbManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDSPEnvironment
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDSPEnvironmentStateMachine
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDSPGoodMorningAlertManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDSPGoodMorningAlertStateMachine
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDSPMobileTimerBridge
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDSPNotificationListener
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDSPPhoneReadyProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDSPSleepActionManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDSPSleepAlarmManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDSPSleepDaemon
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDSPSleepEventList
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDSPSleepEventScheduler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDSPSleepLockScreenManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDSPSleepLockScreenStateMachine
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDSPSleepModeBedtimeState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDSPSleepModeManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDSPSleepModeManualBedtimeState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDSPSleepModeOffState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDSPSleepModeWindDownState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDSPSleepNotificationManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDSPSleepScheduleModelManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDSPSleepScheduleModelMigrationManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDSPSleepScheduleStateCoordinator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDSPSleepSessionManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDSPSleepStorage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDSPSleepStoreServer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDSPSleepTrackingManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDSPSpringboardMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDSPSystemMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDSPTimeInBedTracker
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDSPWakeUpResultsNotificationDelayingForTrackingState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDSPWakeUpResultsNotificationDisabledState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDSPWakeUpResultsNotificationNeedsProtectedDataState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDSPWakeUpResultsNotificationNotifiedState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDSPWakeUpResultsNotificationQueryingState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDSPWakeUpResultsNotificationStateMachine
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDSPWakeUpResultsNotificationStateMachineState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDSPWakeUpResultsNotificationWaitingForWakeUpState
|| __TEXT.__const _HDSPCurrentDataVersion
|| __TEXT.__const _HDSPWakeUpResultsNotificationAttemptDuration
|| __TEXT.__text _HDSPLocalizedCoachingString
|| __TEXT.__text _HDSPLocalizedCoachingVariantString
|| __TEXT.__text _HDSPLocalizedOneDayCoachingVariantString
|| __TEXT.__text _HDSPLocalizedOneWeekCoachingVariantString
|| __TEXT.__text _HDSPLocalizedString
|| __TEXT.__text _HDSPLocalizedTwoWeekCoachingVariantString
|| __TEXT.__text _HDSPMTAlarmClass
|| __TEXT.__text _HDSPMTAlarmManagerClass
|| __TEXT.__text _HDSPMTAlarmManagerStateResetString
|| __TEXT.__text _HDSPMTMutableAlarmClass
|| __TEXT.__text _HDSPMTSoundClass
|| __TEXT.__text _HDSPQuietSourceForSource
__ BaseBoard: _BSActionErrorDomain
__ BaseBoard: _OBJC_CLASS_$_BSDescriptionBuilder
__ BaseBoard: _OBJC_CLASS_$_BSEqualsBuilder
__ CoreDuet: _OBJC_CLASS_$__CDInBedDetector
__ CoreDuetContext: _OBJC_CLASS_$__CDClientContext
__ CoreDuetContext: _OBJC_CLASS_$__CDContextQueries
__ CoreDuetContext: _OBJC_CLASS_$__CDContextualChangeRegistration
__ CoreDuetContext: _OBJC_CLASS_$__CDContextualKeyPath
__ CoreDuetContext: _OBJC_CLASS_$__CDContextualPredicate
__ CoreDuetContext: __CDInformativeContextualChangeNewValueKey
__ CoreDuetContext: __CDInformativeContextualChangeOldValueKey
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _NSCalendarIdentifierGregorian
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDateComponents
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanTrue
__ DoNotDisturb: _OBJC_CLASS_$_DNDModeAssertion
__ DoNotDisturb: _OBJC_CLASS_$_DNDModeAssertionService
__ DoNotDisturb: _OBJC_CLASS_$_DNDMutableModeAssertionDetails
__ Foundation: _NSClassFromString
__ Foundation: _NSFileProtectionCompleteUnlessOpen
__ Foundation: _NSFileProtectionKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSRequestConcreteImplementation
__ Foundation: _NSSearchPathForDirectoriesInDomains
__ Foundation: _NSStringFromClass
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSDateInterval
__ Foundation: _OBJC_CLASS_$_NSDistributedNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_CLASS_$_NSXPCListener
__ HealthKit: _HKCategoryTypeIdentifierSleepAnalysis
__ HealthKit: _HKDayIndexRangeZero
__ HealthKit: _HKErrorDomain
__ HealthKit: _HKMetadataKeyTimeZone
__ HealthKit: _HKProtectedHealthDatabaseDidBecomeAvailableNotification
__ HealthKit: _HKSampleSortIdentifierStartDate
__ HealthKit: _HKSensitiveLogItem
__ HealthKit: _NSStringFromHKDayIndexRange
__ HealthKit: _OBJC_CLASS_$_HKCategorySample
__ HealthKit: _OBJC_CLASS_$_HKDevice
__ HealthKit: _OBJC_CLASS_$_HKObjectType
__ HealthKit: _OBJC_CLASS_$_HKSampleQuery
__ HealthKit: _OBJC_CLASS_$_HKSampleType
__ HealthKit: _OBJC_CLASS_$_HKUnit
__ HealthKit: _OBJC_CLASS_$__HKBehavior
__ HealthKit: __HKPrivateMetadataKeySleepAlarmUserSetBedtime
__ HealthKit: __HKPrivateMetadataKeySleepAlarmUserWakeTime
__ HealthKit: _kHKHealthAppBundleIdentifier
__ HealthKit: _kHKNotificationsDomainKey
__ IDS: _IDSDefaultPairedDevice
__ IDS: _IDSMaxMessageTimeout
__ IDS: _IDSSendMessageOptionAlwaysSkipSelfKey
__ IDS: _IDSSendMessageOptionEnforceRemoteTimeoutsKey
__ IDS: _IDSSendMessageOptionFireAndForgetKey
__ IDS: _IDSSendMessageOptionForceLocalDeliveryKey
__ IDS: _IDSSendMessageOptionQueueOneIdentifierKey
__ IDS: _IDSSendMessageOptionTimeoutKey
__ IDS: _OBJC_CLASS_$_IDSService
__ IOKit: _IOPMAssertionCreateWithProperties
__ IOKit: _IOPMAssertionRelease
__ MobileKeyBag: _MKBDeviceUnlockedSinceBoot
__ NanoPreferencesSync: _OBJC_CLASS_$_NPSDomainAccessor
__ NanoPreferencesSync: _OBJC_CLASS_$_NPSManager
__ NanoRegistry: _NRPairedDeviceRegistryDeviceDidBecomeActive
__ NanoRegistry: _NRPairedDeviceRegistryWatchDidBecomeActiveDarwinNotification
__ NanoRegistry: _OBJC_CLASS_$_NRPairedDeviceRegistry
__ NetAppsUtilities: _NAEmptyResult
__ NetAppsUtilities: _OBJC_CLASS_$_NAFuture
__ NetAppsUtilities: _OBJC_CLASS_$_NAScheduler
__ PowerLog: _PLLogRegisteredEvent
__ Sleep: _HKSPApplyChangesToObject
__ Sleep: _HKSPBatteryLevel
__ Sleep: _HKSPBedtimeReminderCategory
__ Sleep: _HKSPBedtimeReminderIdentifier
__ Sleep: _HKSPCanResolveChangesToObject
__ Sleep: _HKSPChargingReminderAlarmEnabledUserInfoKey
__ Sleep: _HKSPChargingReminderCategory
__ Sleep: _HKSPChargingReminderIdentifier
__ Sleep: _HKSPChargingReminderSleepTrackingEnabledUserInfoKey
__ Sleep: _HKSPCurrentDateProvider
__ Sleep: _HKSPDaemonBundleID
__ Sleep: _HKSPDispatchQueueName
__ Sleep: _HKSPEvaluateChangesToObject
__ Sleep: _HKSPEventRecordVersionKey
__ Sleep: _HKSPGenerateChangeSetBetweenObjects
__ Sleep: _HKSPImmediateQueueBackedScheduler
__ Sleep: _HKSPIsCharging
__ Sleep: _HKSPIsHomePod
__ Sleep: _HKSPLogForCategory
__ Sleep: _HKSPNanoSleepAppBundleIdentifier
__ Sleep: _HKSPNilify
__ Sleep: _HKSPNotificationAccessoryImageName
__ Sleep: _HKSPNotificationDismissGoodMorningAlert
__ Sleep: _HKSPNotificationPresentGoodMorningAlert
__ Sleep: _HKSPNotificationThreadIdentifier
__ Sleep: _HKSPOneDayCoachingCategory
__ Sleep: _HKSPOneWeekCoachingCategory
__ Sleep: _HKSPScheduleVersionKey
__ Sleep: _HKSPSerialDispatchQueueBackedScheduler
__ Sleep: _HKSPSerializableKeyForClass
__ Sleep: _HKSPSettingsVersionKey
__ Sleep: _HKSPSleepClientInterface
__ Sleep: _HKSPSleepDurationGoalHoursDefault
__ Sleep: _HKSPSleepEntitlementName
__ Sleep: _HKSPSleepErrorDomain
__ Sleep: _HKSPSleepEventComparator
__ Sleep: _HKSPSleepEventIdentifierBedtime
__ Sleep: _HKSPSleepEventIdentifierBedtimeNotification
__ Sleep: _HKSPSleepEventIdentifierChargingReminderNotification
__ Sleep: _HKSPSleepEventIdentifierGoodMorningNotification
__ Sleep: _HKSPSleepEventIdentifierWakeDetectionNotification
__ Sleep: _HKSPSleepEventIdentifierWakeUp
__ Sleep: _HKSPSleepEventIdentifierWakeUpResultsNotification
__ Sleep: _HKSPSleepEventIdentifierWindDown
__ Sleep: _HKSPSleepEventIdentifierWindDownNotification
__ Sleep: _HKSPSleepEventRecordPropertiesForPersist
__ Sleep: _HKSPSleepEventRecordPropertiesForSync
__ Sleep: _HKSPSleepLifecycleName
__ Sleep: _HKSPSleepMachServiceName
__ Sleep: _HKSPSleepMaxOverdueEvent
__ Sleep: _HKSPSleepModeIdentifier
__ Sleep: _HKSPSleepScheduleModelDidChangeDarwinNotification
__ Sleep: _HKSPSleepSchedulePropertiesForPersist
__ Sleep: _HKSPSleepSchedulePropertiesForSync
__ Sleep: _HKSPSleepScheduleStateChangeReasonIsExpected
__ Sleep: _HKSPSleepScheduleStateIsForBedtime
__ Sleep: _HKSPSleepScheduleStateIsForWindDown
__ Sleep: _HKSPSleepScheduleStateNone
__ Sleep: _HKSPSleepServerInterface
__ Sleep: _HKSPSleepSettingsPerGizmoDefaultValues
__ Sleep: _HKSPSleepSettingsPerGizmoProperties
__ Sleep: _HKSPSleepSettingsPropertiesForPersist
__ Sleep: _HKSPSleepSettingsPropertiesForSync
__ Sleep: _HKSPSyncAnchorClass
__ Sleep: _HKSPTwoWeekCoachingCategory
__ Sleep: _HKSPUpcomingOccurrenceMaximumInterval
__ Sleep: _HKSPWakeDetectionCategory
__ Sleep: _HKSPWakeDetectionIdentifier
__ Sleep: _HKSPWakeDetectionNotificationAlarmEnabledUserInfoKey
__ Sleep: _HKSPWakeDetectionNotificationSleepModeOnUserInfoKey
__ Sleep: _HKSPWakeUpResultsIdentifier
__ Sleep: _HKSPWakeUpResultsNotificationCategoryUserInfoKey
__ Sleep: _HKSPWakeUpResultsNotificationEndMorningIndexUserInfoKey
__ Sleep: _HKSPWakeUpResultsNotificationSleepDurationGoalAchievedCountUserInfoKey
__ Sleep: _HKSPWakeUpResultsNotificationSleepGoalDurationUserInfoKey
__ Sleep: _HKSPWakeUpResultsNotificationVariantUserInfoKey
__ Sleep: _HKSPWeekdaysWeekdays
__ Sleep: _HKSPWeekdaysWeekends
__ Sleep: _HKSPWindDownAndBedtimeNotificationExpirationInterval
__ Sleep: _HKSPWindDownAndBedtimeNotificationFiredBeforeEventInterval
__ Sleep: _HKSPWindDownIdentifier
__ Sleep: _HKSPWindDownReminderCategory
__ Sleep: _NSStringFromHKSPSleepLockScreenState
__ Sleep: _NSStringFromHKSPSleepMode
__ Sleep: _NSStringFromHKSPSleepModeChangeReason
__ Sleep: _NSStringFromHKSPSleepScheduleState
__ Sleep: _NSStringFromHKSPSleepScheduleStateChangeReason
__ Sleep: _OBJC_CLASS_$_HKSPAnalyticsDailyReportEvent
__ Sleep: _OBJC_CLASS_$_HKSPAnalyticsManager
__ Sleep: _OBJC_CLASS_$_HKSPAnalyticsWindDownEvent
__ Sleep: _OBJC_CLASS_$_HKSPCoalescingExecutor
__ Sleep: _OBJC_CLASS_$_HKSPDiagnostics
__ Sleep: _OBJC_CLASS_$_HKSPDictionaryDeserializer
__ Sleep: _OBJC_CLASS_$_HKSPDictionarySerializer
__ Sleep: _OBJC_CLASS_$_HKSPHealthStoreProvider
__ Sleep: _OBJC_CLASS_$_HKSPMockUserDefaults
__ Sleep: _OBJC_CLASS_$_HKSPMutableAlarmConfiguration
__ Sleep: _OBJC_CLASS_$_HKSPMutableSleepEventRecord
__ Sleep: _OBJC_CLASS_$_HKSPMutableSleepSchedule
__ Sleep: _OBJC_CLASS_$_HKSPMutableSleepScheduleOccurrence
__ Sleep: _OBJC_CLASS_$_HKSPMutableSleepSettings
__ Sleep: _OBJC_CLASS_$_HKSPObserverSet
__ Sleep: _OBJC_CLASS_$_HKSPPersistentStateMachine
__ Sleep: _OBJC_CLASS_$_HKSPPersistentStateMachineState
__ Sleep: _OBJC_CLASS_$_HKSPRelationshipChange
__ Sleep: _OBJC_CLASS_$_HKSPSensitiveUIMonitor
__ Sleep: _OBJC_CLASS_$_HKSPSleepEvent
__ Sleep: _OBJC_CLASS_$_HKSPSleepEventRecord
__ Sleep: _OBJC_CLASS_$_HKSPSleepEventTimelineBuilder
__ Sleep: _OBJC_CLASS_$_HKSPSleepSchedule
__ Sleep: _OBJC_CLASS_$_HKSPSleepScheduleModel
__ Sleep: _OBJC_CLASS_$_HKSPSleepSettings
__ Sleep: _OBJC_CLASS_$_HKSPStateMachine
__ Sleep: _OBJC_CLASS_$_HKSPStateMachineState
__ Sleep: _OBJC_CLASS_$_HKSPXPCClient
__ Sleep: _OBJC_CLASS_$_HKSPXPCConnectionInfo
__ Sleep: _OBJC_CLASS_$_HKSPXPCConnectionListener
__ Sleep: _OBJC_CLASS_$__HKSPUserDefaultsStatePersistence
__ Sleep: _OBJC_METACLASS_$_HKSPPersistentStateMachine
__ Sleep: _OBJC_METACLASS_$_HKSPPersistentStateMachineState
__ Sleep: _OBJC_METACLASS_$_HKSPStateMachine
__ Sleep: _OBJC_METACLASS_$_HKSPStateMachineState
__ SleepHealth: _OBJC_CLASS_$_HKSHGoalProgressEngine
__ SleepHealth: _OBJC_CLASS_$_HKSHSleepDaySummaryQuery
__ SleepHealth: _OBJC_CLASS_$_HKSleepHealthStore
__ SoftLinking: __sl_dlopen_audited
__ SpringBoardServices: _OBJC_CLASS_$_SBSLockScreenRemoteContentAssertion
__ SpringBoardServices: _OBJC_CLASS_$_SBSRemoteContentDefinition
__ ToneLibrary: _TLAlertTopicAlarmGoToSleep
__ ToneLibrary: _TLAlertTopicAppNotificationFirstParty
__ ToneLibrary: _TLAlertTopicSleepWakeDetection
__ UserNotifications: _OBJC_CLASS_$_UNMutableNotificationContent
__ UserNotifications: _OBJC_CLASS_$_UNMutableNotificationSound
__ UserNotifications: _OBJC_CLASS_$_UNNotificationRequest
__ UserNotifications: _OBJC_CLASS_$_UNNotificationSound
__ UserNotifications: _OBJC_CLASS_$_UNUserNotificationCenter
__ libSystem.B.dylib: _XPC_ACTIVITY_ALLOW_BATTERY
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_15_MIN
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_1_DAY
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_5_MIN
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY_MAINTENANCE
__ libSystem.B.dylib: _XPC_ACTIVITY_REPEATING
__ libSystem.B.dylib: _XPC_ACTIVITY_REQUIRES_CLASS_A
__ libSystem.B.dylib: _XPC_ACTIVITY_REQUIRES_CLASS_B
__ libSystem.B.dylib: _XPC_ACTIVITY_SHOULD_WAKE_DEVICE
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: __xpc_event_key_name
__ libSystem.B.dylib: _arc4random_uniform
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _notify_register_check
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_signpost_id_generate
__ libSystem.B.dylib: _os_transaction_create
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _time
__ libSystem.B.dylib: _xpc_activity_register
__ libSystem.B.dylib: _xpc_activity_unregister
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_get_string
__ libSystem.B.dylib: _xpc_dictionary_set_bool
__ libSystem.B.dylib: _xpc_dictionary_set_date
__ libSystem.B.dylib: _xpc_dictionary_set_int64
__ libSystem.B.dylib: _xpc_dictionary_set_string
__ libSystem.B.dylib: _xpc_set_event
__ libSystem.B.dylib: _xpc_set_event_stream_handler
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
HDSPWakeUpResultsNotificationQueryingState : HDSPWakeUpResultsNotificationStateMachineState
  // instance methods
  -[HDSPWakeUpResultsNotificationQueryingState queryDidFailWithError:]
  -[HDSPWakeUpResultsNotificationQueryingState willEnterWithPreviousState:context:]
  -[HDSPWakeUpResultsNotificationQueryingState didEnterWithPreviousState:context:]
  -[HDSPWakeUpResultsNotificationQueryingState stateName]
  -[HDSPWakeUpResultsNotificationQueryingState queryDidComplete]
  -[HDSPWakeUpResultsNotificationQueryingState didExitWithNextState:context:]
  -[HDSPWakeUpResultsNotificationQueryingState protectedHealthDataDidBecomeAvailable]
  -[HDSPWakeUpResultsNotificationQueryingState initWithCoder:]
  -[HDSPWakeUpResultsNotificationQueryingState _executeQuery]
  -[HDSPWakeUpResultsNotificationQueryingState _retryQueryIfNeededOrTransitionToNeedsProtectedDataState]
  -[HDSPWakeUpResultsNotificationQueryingState _transitionToRetryState]
  -[HDSPWakeUpResultsNotificationQueryingState _transitionToWaitingForWakeUpState]
  -[HDSPWakeUpResultsNotificationQueryingState _transitionToNotifiedState]


HDSPSleepStorage : NSObject /usr/lib/libSystem.B.dylib <HDSPNotificationObserver, HDSPEnvironmentAware, HDSPSource>
 @property  HKSPObserverSet *observers
 @property  <HKSPUserDefaults> *userDefaults
 @property  @? perGizmoDefaultsProvider
 @property  <HKSPUserDefaults> *perGizmoDefaults
 @property  NPSManager *npsManager
 @property  unsigned long dataVersion
 @property  BOOL needsMigration
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  HDSPEnvironment *environment
 @property  NSString *sourceIdentifier
 @property  BOOL dontNotify
 @property  BOOL dontSync
 @property  <HDSPSource> *targetSource

  // class methods
  +[HDSPSleepStorage perGizmoDefaultsProvider]

  // instance methods
  -[HDSPSleepStorage perGizmoDefaultsProvider]
  -[HDSPSleepStorage notificationListener:didReceiveNotificationWithName:]
  -[HDSPSleepStorage environmentDidBecomeReady:]
  -[HDSPSleepStorage dataVersion]
  -[HDSPSleepStorage userDefaults]
  -[HDSPSleepStorage _removeObjectProperties:propertiesToSync:perGizmoProperties:error:]
  -[HDSPSleepStorage needsMigration]
  -[HDSPSleepStorage _saveObject:propertiesToSave:propertiesToSync:perGizmoProperties:error:]
  -[HDSPSleepStorage _synchronizeDefaults]
  -[HDSPSleepStorage removeSleepEventRecordWithError:]
  -[HDSPSleepStorage sourceIdentifier]
  -[HDSPSleepStorage _updateDefaultsAndKeysToSync:perGizmoKeysToSync:propertiesToSync:perGizmoProperties:object:key:]
  -[HDSPSleepStorage .cxx_destruct]
  -[HDSPSleepStorage saveSleepSchedule:error:]
  -[HDSPSleepStorage saveSleepEventRecordChanges:error:]
  -[HDSPSleepStorage initWithEnvironment:]
  -[HDSPSleepStorage saveSleepEventRecord:error:]
  -[HDSPSleepStorage environmentWillBecomeReady:]
  -[HDSPSleepStorage observers]
  -[HDSPSleepStorage _loadObjectOfClass:propertiesToLoad:perGizmoProperties:perGizmoDefaultValues:error:]
  -[HDSPSleepStorage _removeObjectProperties:propertiesToSync:error:]
  -[HDSPSleepStorage initWithEnvironment:perGizmoDefaultsProvider:npsManager:]
  -[HDSPSleepStorage loadSleepEventRecord:]
  -[HDSPSleepStorage npsManager]
  -[HDSPSleepStorage removeSleepScheduleWithError:]
  -[HDSPSleepStorage _loadObjectOfClass:propertiesToLoad:error:]
  -[HDSPSleepStorage _saveObjectChanges:propertiesToSave:propertiesToSync:perGizmoProperties:versionKey:currentVersion:error:]
  -[HDSPSleepStorage _saveObject:propertiesToSave:propertiesToSync:error:]
  -[HDSPSleepStorage removeSleepSettingsWithError:]
  -[HDSPSleepStorage loadSleepSettings:]
  -[HDSPSleepStorage removeObserver:]
  -[HDSPSleepStorage environment]
  -[HDSPSleepStorage loadSleepSchedule:]
  -[HDSPSleepStorage saveSleepSettings:error:]
  -[HDSPSleepStorage addObserver:]
  -[HDSPSleepStorage perGizmoDefaults]
  -[HDSPSleepStorage loadSleepScheduleModel:]
  -[HDSPSleepStorage saveSleepScheduleChanges:error:]
  -[HDSPSleepStorage saveSleepSettingsChanges:error:]
  -[HDSPSleepStorage _synchronizeDefaultsForKeys:perGizmoKeys:]
  -[HDSPSleepStorage _saveObjectChanges:propertiesToSave:propertiesToSync:versionKey:currentVersion:error:]
  -[HDSPSleepStorage handleExternalSync]
  -[HDSPSleepStorage saveSleepScheduleModel:error:]
  -[HDSPSleepStorage handleActivePairedDeviceDidChange]


HDSPSleepModeStateMachineState : HKSPPersistentStateMachineState /System/Library/PrivateFrameworks/ToneLibrary.framework/ToneLibrary <HDSPSleepModeStateMachineEventHandler>
 @property  HDSPSleepModeStateMachine *stateMachine
 @property  long long sleepMode
 @property  BOOL isUserRequested
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HDSPSleepModeStateMachineState sleepMode]
  -[HDSPSleepModeStateMachineState sleepScheduleStateChangedToWindDownFromState:]
  -[HDSPSleepModeStateMachineState userDisengagedCurrentMode]
  -[HDSPSleepModeStateMachineState updateState]
  -[HDSPSleepModeStateMachineState sleepScheduleStateChangedToDisabledFromState:]
  -[HDSPSleepModeStateMachineState sleepScheduleStateChangedToBedtimeFromState:]
  -[HDSPSleepModeStateMachineState sleepScheduleStateChangedToWakeUp:]
  -[HDSPSleepModeStateMachineState didEnterWithPreviousState:context:]
  -[HDSPSleepModeStateMachineState userEngagedBedtimeMode]
  -[HDSPSleepModeStateMachineState isUserRequested]
  -[HDSPSleepModeStateMachineState determineNextState]
  -[HDSPSleepModeStateMachineState isScheduledSleepModeEnabled]
  -[HDSPSleepModeStateMachineState isSleepModeDuringWindDownEnabled]


HDSPTimeInBedTracker : NSObject /usr/lib/libSystem.B.dylib <HDSPSleepScheduleStateObserver, HDSPSleepTracker>
 @property  <HKSPQueueBackedScheduler> *sleepIntervalScheduler
 @property  BOOL isTimeInBedTrackingEnabled
 @property  HKSPSleepScheduleModel *sleepScheduleModel
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <HDSPSleepTrackerDelegate> *delegate
 @property  HDSPEnvironment *environment

  // instance methods
  -[HDSPTimeInBedTracker sleepScheduleModel]
  -[HDSPTimeInBedTracker sleepScheduleStateDidChange:previousState:reason:]
  -[HDSPTimeInBedTracker _computeSessionMetadataForInterval:]
  -[HDSPTimeInBedTracker _endSleepSessionWithReason:]
  -[HDSPTimeInBedTracker .cxx_destruct]
  -[HDSPTimeInBedTracker initWithEnvironment:]
  -[HDSPTimeInBedTracker environmentWillBecomeReady:]
  -[HDSPTimeInBedTracker processedSessionForSession:]
  -[HDSPTimeInBedTracker sleepIntervalScheduler]
  -[HDSPTimeInBedTracker isTimeInBedTrackingEnabled]
  -[HDSPTimeInBedTracker environment]
  -[HDSPTimeInBedTracker setDelegate:]
  -[HDSPTimeInBedTracker computeSleepIntervalsForInterval:]
  -[HDSPTimeInBedTracker _computeSleepSessionStartBeforeDate:]
  -[HDSPTimeInBedTracker delegate]
  -[HDSPTimeInBedTracker _createSleepSessionWithEndDate:endReason:]


HDSPAnalyticsManager : NSObject /usr/lib/libSystem.B.dylib <HDSPEnvironmentAware, HDSPTimeChangeObserver>
 @property  {os_unfair_lock_s=I} analyticsLock
 @property  <HDSPActivityScheduler> *dataCollectionScheduler
 @property  BOOL isDataCollectionInProgress
 @property  HKSPAnalyticsManager *analyticsManager
 @property  HDSPEnvironment *environment
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HDSPAnalyticsManager dailyCollectionActivity]

  // instance methods
  -[HDSPAnalyticsManager currentDate]
  -[HDSPAnalyticsManager environmentDidBecomeReady:]
  -[HDSPAnalyticsManager significantTimeChangeDetected:]
  -[HDSPAnalyticsManager analyticsManager]
  -[HDSPAnalyticsManager .cxx_destruct]
  -[HDSPAnalyticsManager isDataCollectionEnabled]
  -[HDSPAnalyticsManager initWithEnvironment:]
  -[HDSPAnalyticsManager environmentWillBecomeReady:]
  -[HDSPAnalyticsManager environment]
  -[HDSPAnalyticsManager _withLock:]
  -[HDSPAnalyticsManager initWithEnvironment:analyticsManager:dataCollectionScheduler:]
  -[HDSPAnalyticsManager updateScheduledActivity]
  -[HDSPAnalyticsManager scheduleDailyCollectionActivity]
  -[HDSPAnalyticsManager cancelDailyCollectionActivity]
  -[HDSPAnalyticsManager dataCollectionScheduler]
  -[HDSPAnalyticsManager _lock_executeQuery]
  -[HDSPAnalyticsManager isDataCollectionInProgress]
  -[HDSPAnalyticsManager _queryMorningIndexRangeForDate:]
  -[HDSPAnalyticsManager _processQueryResultsWithSummaries:queryRange:error:]
  -[HDSPAnalyticsManager _makeReportQueryWithMorningIndexRange:resultsHandler:]
  -[HDSPAnalyticsManager _submitAnalyticsReportsUsingBuilder:]
  -[HDSPAnalyticsManager _pruneExpiredWindDownActionDataBeforeQueryRange:]
  -[HDSPAnalyticsManager _unit_testing_pruneExpiredWindDownActionData]
  -[HDSPAnalyticsManager analyticsLock]


HDSPGoodMorningAlertDisabledState : HDSPGoodMorningAlertStateMachineState
  // instance methods
  -[HDSPGoodMorningAlertDisabledState stateName]


HDSPWakeDetectionStateMachineState : HKSPPersistentStateMachineState /System/Library/PrivateFrameworks/ToneLibrary.framework/ToneLibrary <HDSPWakeDetectionStateMachineEventHandler>
 @property  HDSPWakeDetectionStateMachine *stateMachine
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HDSPWakeDetectionStateMachineState updateState]
  -[HDSPWakeDetectionStateMachineState determineNextState]
  -[HDSPWakeDetectionStateMachineState isWakeDetectionDisabled]
  -[HDSPWakeDetectionStateMachineState _inDetectionWindow]
  -[HDSPWakeDetectionStateMachineState wakeDetectionEventDue]
  -[HDSPWakeDetectionStateMachineState wakeupEventDetected:]


HDSPDemoModeEnvironment : HDSPEnvironment <HDSPNotificationObserver, HDSPSource>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *sourceIdentifier
 @property  BOOL dontNotify
 @property  BOOL dontSync
 @property  <HDSPSource> *targetSource

  // instance methods
  -[HDSPDemoModeEnvironment notificationListener:didReceiveNotificationWithName:]
  -[HDSPDemoModeEnvironment init]
  -[HDSPDemoModeEnvironment sourceIdentifier]
  -[HDSPDemoModeEnvironment environmentDidBecomeReady]
  -[HDSPDemoModeEnvironment isDemoEnvironment]
  -[HDSPDemoModeEnvironment setInitialSchedule]
  -[HDSPDemoModeEnvironment resetDemoMode]
  -[HDSPDemoModeEnvironment demoScheduleModel]
  -[HDSPDemoModeEnvironment demoSleepSchedule]
  -[HDSPDemoModeEnvironment demoSleepSettings]
  -[HDSPDemoModeEnvironment demoEventRecord]


HDSPSleepModeOffState : HDSPSleepModeStateMachineState
  // instance methods
  -[HDSPSleepModeOffState stateName]


HDSPChargingReminderStateMachine : HKSPPersistentStateMachine /System/Library/PrivateFrameworks/ToneLibrary.framework/ToneLibrary <HDSPChargingReminderStateMachineDelegate, HDSPChargingReminderStateMachineInfoProvider, HDSPChargingReminderStateMachineEventHandler>
 @property  <HDSPChargingReminderStateMachineDelegate> *delegate
 @property  <HDSPChargingReminderStateMachineInfoProvider> *infoProvider
 @property  HDSPChargingReminderDisabledState *disabledState
 @property  HDSPChargingReminderWaitingState *waitingState
 @property  HDSPChargingReminderMonitoringState *monitoringState
 @property  HDSPChargingReminderNotifiedState *notifiedState
 @property  <NAScheduler> *callbackScheduler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSDate *currentDate
 @property  BOOL sleepFeaturesEnabled
 @property  HKSPSleepScheduleModel *sleepScheduleModel
 @property  unsigned long sleepScheduleState
 @property  BOOL isCharging

  // instance methods
  -[HDSPChargingReminderStateMachine currentDate]
  -[HDSPChargingReminderStateMachine sleepScheduleModel]
  -[HDSPChargingReminderStateMachine sleepScheduleState]
  -[HDSPChargingReminderStateMachine disabledState]
  -[HDSPChargingReminderStateMachine .cxx_destruct]
  -[HDSPChargingReminderStateMachine initWithIdentifier:persistence:delegate:infoProvider:currentDateProvider:]
  -[HDSPChargingReminderStateMachine sleepFeaturesEnabled]
  -[HDSPChargingReminderStateMachine stateMachineLog]
  -[HDSPChargingReminderStateMachine isCharging]
  -[HDSPChargingReminderStateMachine notifiedState]
  -[HDSPChargingReminderStateMachine waitingState]
  -[HDSPChargingReminderStateMachine batteryMonitoringEventDue]
  -[HDSPChargingReminderStateMachine batteryLevelChanged:]
  -[HDSPChargingReminderStateMachine postChargingReminderNotification]
  -[HDSPChargingReminderStateMachine scheduleBatteryMonitoring]
  -[HDSPChargingReminderStateMachine unscheduleBatteryMonitoring]
  -[HDSPChargingReminderStateMachine startBatteryMonitoring]
  -[HDSPChargingReminderStateMachine stopBatteryMonitoring]
  -[HDSPChargingReminderStateMachine monitoringWindowAfterDate:]
  -[HDSPChargingReminderStateMachine monitoringState]


HDSPTimeAsleepTracker : NSObject /usr/lib/libSystem.B.dylib <HDSPSleepEventHandler, HDSPSleepEventProvider, HDSPTimeAsleepTrackerStateMachineInfoProvider, HDSPTimeAsleepTrackerStateMachineDelegate, HDSPTimeChangeObserver, HDSPDiagnosticsProvider, HDSPSleepScheduleStateObserver, HDSPSleepModeObserver, HDSPSleepScheduleModelObserver, HDSPWakeDetector, HDSPNotificationObserver, HDSPDevicePowerObserver, HDSPSleepTracker>
 @property  @? sleepTrackerProvider
 @property  <HDSPTimeAsleepTracker> *sleepTracker
 @property  {os_unfair_lock_s=I} timeAsleepTrackerLock
 @property  HDSPTimeAsleepTrackerStateMachine *stateMachine
 @property  NSArray *appLaunchRegistrations
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *providerIdentifier
 @property  <HDSPSleepEventDelegate> *sleepEventDelegate
 @property  NSDate *currentDate
 @property  HKSPSleepScheduleModel *sleepScheduleModel
 @property  BOOL isCharging
 @property  BOOL inUserRequestedSleepMode
 @property  BOOL inWakeDetectionWindow
 @property  unsigned long sleepScheduleState
 @property  <NAScheduler> *callbackScheduler
 @property  <HDSPWakeDetectorDelegate> *wakeDetectorDelegate
 @property  <HDSPSleepTrackerDelegate> *delegate
 @property  HDSPEnvironment *environment

  // instance methods
  -[HDSPTimeAsleepTracker providerIdentifier]
  -[HDSPTimeAsleepTracker currentDate]
  -[HDSPTimeAsleepTracker eventIdentifiers]
  -[HDSPTimeAsleepTracker setSleepEventDelegate:]
  -[HDSPTimeAsleepTracker notificationListener:didReceiveNotificationWithName:]
  -[HDSPTimeAsleepTracker sleepEventDelegate]
  -[HDSPTimeAsleepTracker upcomingEventsDueAfterDate:]
  -[HDSPTimeAsleepTracker sleepScheduleModelManager:source:didUpdateSleepScheduleModel:]
  -[HDSPTimeAsleepTracker environmentDidBecomeReady:]
  -[HDSPTimeAsleepTracker significantTimeChangeDetected:]
  -[HDSPTimeAsleepTracker sleepScheduleModel]
  -[HDSPTimeAsleepTracker sleepScheduleState]
  -[HDSPTimeAsleepTracker currentState]
  -[HDSPTimeAsleepTracker sleepModeDidChange:previousMode:reason:]
  -[HDSPTimeAsleepTracker stateMachine]
  -[HDSPTimeAsleepTracker sleepEventIsDue:]
  -[HDSPTimeAsleepTracker sleepScheduleStateDidChange:previousState:reason:]
  -[HDSPTimeAsleepTracker updateState]
  -[HDSPTimeAsleepTracker .cxx_destruct]
  -[HDSPTimeAsleepTracker initWithEnvironment:]
  -[HDSPTimeAsleepTracker environmentWillBecomeReady:]
  -[HDSPTimeAsleepTracker processedSessionForSession:]
  -[HDSPTimeAsleepTracker sleepTracker]
  -[HDSPTimeAsleepTracker diagnosticDescription]
  -[HDSPTimeAsleepTracker diagnosticInfo]
  -[HDSPTimeAsleepTracker isCharging]
  -[HDSPTimeAsleepTracker environment]
  -[HDSPTimeAsleepTracker setDelegate:]
  -[HDSPTimeAsleepTracker inUserRequestedSleepMode]
  -[HDSPTimeAsleepTracker delegate]
  -[HDSPTimeAsleepTracker _withLock:]
  -[HDSPTimeAsleepTracker previousSessionFinished]
  -[HDSPTimeAsleepTracker initWithEnvironment:sleepTrackerProvider:]
  -[HDSPTimeAsleepTracker _handleSleepSessionAnalysisResults:endReason:]
  -[HDSPTimeAsleepTracker _createSleepSessionWithSleepAnalysis:endReason:]
  -[HDSPTimeAsleepTracker _handleAppLaunched:onDate:]
  -[HDSPTimeAsleepTracker trackingWindowAfterDate:]
  -[HDSPTimeAsleepTracker _handleActivityDetectedOnDate:]
  -[HDSPTimeAsleepTracker _handleInternalSleepSessionEndRequest]
  -[HDSPTimeAsleepTracker inWakeDetectionWindow]
  -[HDSPTimeAsleepTracker scheduleSleepTracking]
  -[HDSPTimeAsleepTracker unscheduleSleepTracking]
  -[HDSPTimeAsleepTracker startSleepTrackingSessionWithReason:]
  -[HDSPTimeAsleepTracker endSleepTrackingSessionWithReason:]
  -[HDSPTimeAsleepTracker startActivityDetection]
  -[HDSPTimeAsleepTracker stopActivityDetection]
  -[HDSPTimeAsleepTracker startAppLaunchDetection]
  -[HDSPTimeAsleepTracker stopAppLaunchDetection]
  -[HDSPTimeAsleepTracker notifyForActivityDetectedOnDate:]
  -[HDSPTimeAsleepTracker startDetecting]
  -[HDSPTimeAsleepTracker stopDetecting]
  -[HDSPTimeAsleepTracker wakeDetectorDelegate]
  -[HDSPTimeAsleepTracker setWakeDetectorDelegate:]
  -[HDSPTimeAsleepTracker deviceChangedChargingState:]
  -[HDSPTimeAsleepTracker sleepTrackerProvider]
  -[HDSPTimeAsleepTracker timeAsleepTrackerLock]
  -[HDSPTimeAsleepTracker appLaunchRegistrations]


HDSPSleepMessageStore : NSObject /usr/lib/libSystem.B.dylib <HDSPEnvironmentAware>
 @property  {os_unfair_lock_s=I} syncLock
 @property  NSMutableDictionary *recentMessages
 @property  <HKSPSyncAnchor> *syncAnchor
 @property  HDSPEnvironment *environment
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HDSPSleepMessageStore _lock_addSleepMessage:]
  -[HDSPSleepMessageStore .cxx_destruct]
  -[HDSPSleepMessageStore syncAnchor]
  -[HDSPSleepMessageStore initWithEnvironment:]
  -[HDSPSleepMessageStore syncLock]
  -[HDSPSleepMessageStore addSleepEventDueMessageWithEvent:]
  -[HDSPSleepMessageStore recentMessages]
  -[HDSPSleepMessageStore _restoreMessages]
  -[HDSPSleepMessageStore _locked_updateSyncAnchor]
  -[HDSPSleepMessageStore environment]
  -[HDSPSleepMessageStore _withLock:]
  -[HDSPSleepMessageStore addSleepMessageOfType:]
  -[HDSPSleepMessageStore _locked_syncAnchor]
  -[HDSPSleepMessageStore pendingMessagesForSyncAnchor:]


HDSPWakeDetectionDisabledState : HDSPWakeDetectionStateMachineState
  // instance methods
  -[HDSPWakeDetectionDisabledState stateName]


HDSPTimeAsleepTrackerStateMachine : HKSPPersistentStateMachine /System/Library/PrivateFrameworks/ToneLibrary.framework/ToneLibrary <HDSPTimeAsleepTrackerStateMachineDelegate, HDSPTimeAsleepTrackerStateMachineInfoProvider, HDSPTimeAsleepTrackerStateMachineEventHandler>
 @property  <HDSPTimeAsleepTrackerStateMachineDelegate> *delegate
 @property  <HDSPTimeAsleepTrackerStateMachineInfoProvider> *infoProvider
 @property  HDSPTimeAsleepTrackerDisabledState *disabledState
 @property  HDSPTimeAsleepTrackerWaitingState *waitingState
 @property  HDSPTimeAsleepTrackerAutoTrackingState *autoTrackingState
 @property  HDSPTimeAsleepTrackerActivityTrackingState *activityTrackingState
 @property  HDSPTimeAsleepTrackerActivityAfterWakeUpTrackingState *activityAfterWakeUpTrackingState
 @property  HDSPTimeAsleepTrackerManualTrackingState *manualTrackingState
 @property  HDSPTimeAsleepTrackerInternalEndState *internalEndState
 @property  <NAScheduler> *callbackScheduler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSDate *currentDate
 @property  HKSPSleepScheduleModel *sleepScheduleModel
 @property  BOOL isCharging
 @property  BOOL inUserRequestedSleepMode
 @property  BOOL inWakeDetectionWindow
 @property  unsigned long sleepScheduleState

  // instance methods
  -[HDSPTimeAsleepTrackerStateMachine currentDate]
  -[HDSPTimeAsleepTrackerStateMachine sleepScheduleModel]
  -[HDSPTimeAsleepTrackerStateMachine sleepScheduleState]
  -[HDSPTimeAsleepTrackerStateMachine disabledState]
  -[HDSPTimeAsleepTrackerStateMachine .cxx_destruct]
  -[HDSPTimeAsleepTrackerStateMachine initWithIdentifier:persistence:delegate:infoProvider:currentDateProvider:]
  -[HDSPTimeAsleepTrackerStateMachine stateMachineLog]
  -[HDSPTimeAsleepTrackerStateMachine isCharging]
  -[HDSPTimeAsleepTrackerStateMachine inUserRequestedSleepMode]
  -[HDSPTimeAsleepTrackerStateMachine waitingState]
  -[HDSPTimeAsleepTrackerStateMachine appLaunchedOnDate:]
  -[HDSPTimeAsleepTrackerStateMachine bedtimeOccurred]
  -[HDSPTimeAsleepTrackerStateMachine wakeUpOccurredWithReason:]
  -[HDSPTimeAsleepTrackerStateMachine trackingWindowAfterDate:]
  -[HDSPTimeAsleepTrackerStateMachine sleepTrackingEventDue]
  -[HDSPTimeAsleepTrackerStateMachine userEngagedSleepMode]
  -[HDSPTimeAsleepTrackerStateMachine sleepModeExitedWithReason:]
  -[HDSPTimeAsleepTrackerStateMachine activityDetectedOnDate:]
  -[HDSPTimeAsleepTrackerStateMachine sleepSessionEndRequestedInternally]
  -[HDSPTimeAsleepTrackerStateMachine startWakeDetectionOccurred]
  -[HDSPTimeAsleepTrackerStateMachine sleepSessionFinished]
  -[HDSPTimeAsleepTrackerStateMachine inWakeDetectionWindow]
  -[HDSPTimeAsleepTrackerStateMachine scheduleSleepTracking]
  -[HDSPTimeAsleepTrackerStateMachine unscheduleSleepTracking]
  -[HDSPTimeAsleepTrackerStateMachine startSleepTrackingSessionWithReason:]
  -[HDSPTimeAsleepTrackerStateMachine endSleepTrackingSessionWithReason:]
  -[HDSPTimeAsleepTrackerStateMachine startActivityDetection]
  -[HDSPTimeAsleepTrackerStateMachine stopActivityDetection]
  -[HDSPTimeAsleepTrackerStateMachine startAppLaunchDetection]
  -[HDSPTimeAsleepTrackerStateMachine stopAppLaunchDetection]
  -[HDSPTimeAsleepTrackerStateMachine notifyForActivityDetectedOnDate:]
  -[HDSPTimeAsleepTrackerStateMachine autoTrackingState]
  -[HDSPTimeAsleepTrackerStateMachine activityTrackingState]
  -[HDSPTimeAsleepTrackerStateMachine activityAfterWakeUpTrackingState]
  -[HDSPTimeAsleepTrackerStateMachine manualTrackingState]
  -[HDSPTimeAsleepTrackerStateMachine internalEndState]


HDSPDiagnostics : NSObject /usr/lib/libSystem.B.dylib <HDSPNotificationObserver, HDSPEnvironmentAware>
 @property  HKSPObserverSet *providers
 @property  HKSPDiagnostics *diagnostics
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  HDSPEnvironment *environment

  // instance methods
  -[HDSPDiagnostics providers]
  -[HDSPDiagnostics removeProvider:]
  -[HDSPDiagnostics notificationListener:didReceiveNotificationWithName:]
  -[HDSPDiagnostics environmentDidBecomeReady:]
  -[HDSPDiagnostics diagnostics]
  -[HDSPDiagnostics .cxx_destruct]
  -[HDSPDiagnostics initWithEnvironment:]
  -[HDSPDiagnostics environmentWillBecomeReady:]
  -[HDSPDiagnostics addProvider:]
  -[HDSPDiagnostics _logDiagnostics:]
  -[HDSPDiagnostics environment]


HDSPSleepLockScreenManager : NSObject /usr/lib/libSystem.B.dylib <HDSPSleepLockScreenStateMachineInfoProvider, HDSPSleepLockScreenStateMachineDelegate, HDSPSleepLockScreenAssertionManagerDelegate, HKSPSensitiveUIObserver, HDSPDiagnosticsProvider, HDSPSleepModeObserver, HDSPSleepScheduleModelObserver, HDSPGoodMorningAlertObserver, HDSPEnvironmentAware>
 @property  {os_unfair_lock_s=I} sleepLockScreenLock
 @property  HDSPSleepLockScreenStateMachine *stateMachine
 @property  HDSPSleepLockScreenAssertionManager *assertionManager
 @property  long long currentLockScreenState
 @property  @? didUpdateAlertAssertion
 @property  NSDate *currentDate
 @property  HKSPSleepScheduleModel *sleepScheduleModel
 @property  long long sleepMode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <NAScheduler> *callbackScheduler
 @property  HDSPEnvironment *environment

  // instance methods
  -[HDSPSleepLockScreenManager currentDate]
  -[HDSPSleepLockScreenManager sleepMode]
  -[HDSPSleepLockScreenManager dismissAlertForGoodMorning]
  -[HDSPSleepLockScreenManager presentAlertForGoodMorning]
  -[HDSPSleepLockScreenManager _currentState]
  -[HDSPSleepLockScreenManager sleepScheduleModelManager:source:didUpdateSleepSettings:]
  -[HDSPSleepLockScreenManager sleepLockScreenLock]
  -[HDSPSleepLockScreenManager environmentDidBecomeReady:]
  -[HDSPSleepLockScreenManager sleepScheduleModel]
  -[HDSPSleepLockScreenManager sleepModeDidChange:previousMode:reason:]
  -[HDSPSleepLockScreenManager stateMachine]
  -[HDSPSleepLockScreenManager assertionManager]
  -[HDSPSleepLockScreenManager lockScreenDidConnect]
  -[HDSPSleepLockScreenManager .cxx_destruct]
  -[HDSPSleepLockScreenManager _lock_resolvedLockScreenState]
  -[HDSPSleepLockScreenManager initWithEnvironment:]
  -[HDSPSleepLockScreenManager sleepLockScreenStateDidChange:previousState:]
  -[HDSPSleepLockScreenManager environmentWillBecomeReady:]
  -[HDSPSleepLockScreenManager setCurrentLockScreenState:]
  -[HDSPSleepLockScreenManager _lock_updateLockScreenAssertion]
  -[HDSPSleepLockScreenManager didUpdateAlertAssertion]
  -[HDSPSleepLockScreenManager currentLockScreenState]
  -[HDSPSleepLockScreenManager sensitiveUIStateChanged]
  -[HDSPSleepLockScreenManager initWithEnvironment:assertionManager:]
  -[HDSPSleepLockScreenManager diagnosticDescription]
  -[HDSPSleepLockScreenManager _lock_shouldShowLockScreenForState:]
  -[HDSPSleepLockScreenManager diagnosticInfo]
  -[HDSPSleepLockScreenManager _lock_overridingLockScreenState]
  -[HDSPSleepLockScreenManager setDidUpdateAlertAssertion:]
  -[HDSPSleepLockScreenManager environment]
  -[HDSPSleepLockScreenManager _withLock:]
  -[HDSPSleepLockScreenManager overrideLockScreenState:userInfo:]


HDSPContextStoreManager : NSObject /usr/lib/libSystem.B.dylib <HDSPSleepScheduleStateObserver, HDSPSleepModeObserver, HDSPSleepEventHandler, HDSPSleepScheduleModelObserver, HDSPEnvironmentAware>
 @property  {os_unfair_lock_s=I} contextLock
 @property  <_CDLocalContext> *context
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  HDSPEnvironment *environment

  // class methods
  +[HDSPContextStoreManager healthAppForegroundPredicate]
  +[HDSPContextStoreManager alarmPredicate]
  +[HDSPContextStoreManager contextualKeyPath]
  +[HDSPContextStoreManager doNotDisturbPredicate]
  +[HDSPContextStoreManager sleepAppForegroundPredicate]

  // instance methods
  -[HDSPContextStoreManager context]
  -[HDSPContextStoreManager sleepScheduleModelManager:source:didUpdateSleepScheduleModel:]
  -[HDSPContextStoreManager sleepModeDidChange:previousMode:reason:]
  -[HDSPContextStoreManager sleepEventIsDue:]
  -[HDSPContextStoreManager sleepScheduleStateDidChange:previousState:reason:]
  -[HDSPContextStoreManager contextLock]
  -[HDSPContextStoreManager .cxx_destruct]
  -[HDSPContextStoreManager unregister:]
  -[HDSPContextStoreManager initWithEnvironment:]
  -[HDSPContextStoreManager environmentWillBecomeReady:]
  -[HDSPContextStoreManager updateForScheduleModelModifiedOnDate:]
  -[HDSPContextStoreManager _writeSleepInfoToContextStore:]
  -[HDSPContextStoreManager environment]
  -[HDSPContextStoreManager initWithEnvironment:context:]
  -[HDSPContextStoreManager _withLock:]
  -[HDSPContextStoreManager registerPredicate:identifier:callback:]


HDSPSleepTrackingManager : NSObject /usr/lib/libSystem.B.dylib <HDSPSleepSessionManagerDelegate, HDSPEnvironmentAware>
 @property  HKSPObserverSet *sleepSessionObservers
 @property  HDSPSleepSessionManager *sleepSessionManager
 @property  <HDSPSleepTracker> *sleepTracker
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  HDSPEnvironment *environment

  // class methods
  +[HDSPSleepTrackingManager platformSpecificTrackerWithEnvironment:]

  // instance methods
  -[HDSPSleepTrackingManager sleepSessionManager:didSaveArchivedSessions:]
  -[HDSPSleepTrackingManager environmentDidBecomeReady:]
  -[HDSPSleepTrackingManager sleepSessionManagerDidFinishSession:]
  -[HDSPSleepTrackingManager initWithEnvironment:sleepSessionManager:sleepTracker:]
  -[HDSPSleepTrackingManager sleepSessionObservers]
  -[HDSPSleepTrackingManager .cxx_destruct]
  -[HDSPSleepTrackingManager initWithEnvironment:]
  -[HDSPSleepTrackingManager environmentWillBecomeReady:]
  -[HDSPSleepTrackingManager sleepSessionManager]
  -[HDSPSleepTrackingManager sleepTracker]
  -[HDSPSleepTrackingManager sleepSessionManager:requestsProcessedSessionForSession:]
  -[HDSPSleepTrackingManager removeObserver:]
  -[HDSPSleepTrackingManager sleepSessionManager:didSaveSession:]
  -[HDSPSleepTrackingManager environment]
  -[HDSPSleepTrackingManager addObserver:]


HDSPSleepLockScreenStateMachineState : HKSPPersistentStateMachineState /System/Library/PrivateFrameworks/ToneLibrary.framework/ToneLibrary <HDSPSleepLockScreenStateMachineEventHandler>
 @property  HDSPSleepLockScreenStateMachine *stateMachine
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HDSPSleepLockScreenStateMachineState dismissAlertForGoodMorning]
  -[HDSPSleepLockScreenStateMachineState presentAlertForGoodMorning]
  -[HDSPSleepLockScreenStateMachineState environmentDidBecomeReady]
  -[HDSPSleepLockScreenStateMachineState updateState]
  -[HDSPSleepLockScreenStateMachineState sleepModeDidChange:reason:]
  -[HDSPSleepLockScreenStateMachineState sleepLockScreenState]
  -[HDSPSleepLockScreenStateMachineState didEnterWithPreviousState:context:]
  -[HDSPSleepLockScreenStateMachineState _updateStateForSleepMode:reason:context:]
  -[HDSPSleepLockScreenStateMachineState isSleepLockScreenDisabled]


HDSPDelayBedtimeIDSMessage : HDSPEventRecordMessage
 @property  NSDate *bedtimeDelayedUntil

  // instance methods
  -[HDSPDelayBedtimeIDSMessage dateDescription]
  -[HDSPDelayBedtimeIDSMessage initWithBedtimeDelayedUntilDate:timeout:]
  -[HDSPDelayBedtimeIDSMessage bedtimeDelayedUntil]


HDSPWakeUpResultsNotificationWaitingForRetryState : HDSPWakeUpResultsNotificationStateMachineState
  // instance methods
  -[HDSPWakeUpResultsNotificationWaitingForRetryState retryAttemptEventDue]
  -[HDSPWakeUpResultsNotificationWaitingForRetryState willEnterWithPreviousState:context:]
  -[HDSPWakeUpResultsNotificationWaitingForRetryState didEnterWithPreviousState:context:]
  -[HDSPWakeUpResultsNotificationWaitingForRetryState stateName]
  -[HDSPWakeUpResultsNotificationWaitingForRetryState didExitWithNextState:context:]


HDSPDoNotDisturbOnState : HDSPDoNotDisturbStateMachineState
  // instance methods
  -[HDSPDoNotDisturbOnState _computeUserVisibleEndDate]


HDSPTimeAsleepTrackerActivityTrackingState : HDSPTimeAsleepTrackerAutoTrackingState
  // instance methods
  -[HDSPTimeAsleepTrackerActivityTrackingState didEnterWithPreviousState:context:]
  -[HDSPTimeAsleepTrackerActivityTrackingState stateName]
  -[HDSPTimeAsleepTrackerActivityTrackingState didExitWithNextState:context:]
  -[HDSPTimeAsleepTrackerActivityTrackingState activityDetectedOnDate:]
  -[HDSPTimeAsleepTrackerActivityTrackingState isActivityTrackingState]


HDSPGoodMorningAlertStateMachineState : HKSPPersistentStateMachineState /System/Library/PrivateFrameworks/ToneLibrary.framework/ToneLibrary <HDSPGoodMorningAlertStateMachineEventHandler>
 @property  HDSPGoodMorningAlertStateMachine *stateMachine
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HDSPGoodMorningAlertStateMachineState updateState]
  -[HDSPGoodMorningAlertStateMachineState sleepScheduleStateChangedToWakeUp]
  -[HDSPGoodMorningAlertStateMachineState sleepScheduleStateChangedToBedtime]
  -[HDSPGoodMorningAlertStateMachineState determineNextState]


HDSPEnvironmentDemoState : HDSPEnvironmentState
  // instance methods
  -[HDSPEnvironmentDemoState didEnterWithPreviousState:context:]
  -[HDSPEnvironmentDemoState stateName]


HDSPSleepSessionManager : NSObject /usr/lib/libSystem.B.dylib <HDSPSleepTrackerDelegate, HDSPDeviceUnlockObserver>
 @property  <HDSPSleepSessionPersistence> *persistence
 @property  HDSPDeviceUnlockMonitor *deviceUnlockManager
 @property  {os_unfair_lock_s=I} sessionLock
 @property  <HDSPSleepSessionManagerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HDSPSleepSessionManager _archivedSessionDirectory]
  +[HDSPSleepSessionManager _archivedSessionFile]

  // instance methods
  -[HDSPSleepSessionManager persistence]
  -[HDSPSleepSessionManager _unprocessedSessions]
  -[HDSPSleepSessionManager deviceUnlockManager]
  -[HDSPSleepSessionManager .cxx_destruct]
  -[HDSPSleepSessionManager _waitForFirstUnlock]
  -[HDSPSleepSessionManager initWithEnvironment:]
  -[HDSPSleepSessionManager deviceHasBeenUnlocked]
  -[HDSPSleepSessionManager startSession]
  -[HDSPSleepSessionManager sessionLock]
  -[HDSPSleepSessionManager removeSessionDataFile]
  -[HDSPSleepSessionManager sleepTracker:didEndSession:reason:]
  -[HDSPSleepSessionManager saveSession:]
  -[HDSPSleepSessionManager sleepTrackerDidStartSession:]
  -[HDSPSleepSessionManager setDelegate:]
  -[HDSPSleepSessionManager savePendingSessions]
  -[HDSPSleepSessionManager initWithEnvironment:persistence:]
  -[HDSPSleepSessionManager delegate]
  -[HDSPSleepSessionManager archiveSession:]
  -[HDSPSleepSessionManager _withLock:]
  -[HDSPSleepSessionManager _locked_savePendingSessions]
  -[HDSPSleepSessionManager _hasUnprocessedSessions]
  -[HDSPSleepSessionManager stopSession]


HDSPTimeAsleepTrackerActivityAfterWakeUpTrackingState : HDSPTimeAsleepTrackerActivityTrackingState
  // instance methods
  -[HDSPTimeAsleepTrackerActivityAfterWakeUpTrackingState willEnterWithPreviousState:context:]
  -[HDSPTimeAsleepTrackerActivityAfterWakeUpTrackingState didEnterWithPreviousState:context:]
  -[HDSPTimeAsleepTrackerActivityAfterWakeUpTrackingState stateName]
  -[HDSPTimeAsleepTrackerActivityAfterWakeUpTrackingState didExitWithNextState:context:]
  -[HDSPTimeAsleepTrackerActivityAfterWakeUpTrackingState determineExpirationDateForCurrentDate:]
  -[HDSPTimeAsleepTrackerActivityAfterWakeUpTrackingState appLaunchedOnDate:]
  -[HDSPTimeAsleepTrackerActivityAfterWakeUpTrackingState activityDetectedOnDate:]
  -[HDSPTimeAsleepTrackerActivityAfterWakeUpTrackingState _updateStateSpecific]


HDSPChargingReminderManager : NSObject /usr/lib/libSystem.B.dylib <HDSPChargingReminderStateMachineDelegate, HDSPChargingReminderStateMachineInfoProvider, HDSPDiagnosticsProvider, HDSPEnvironmentAware, HDSPSleepScheduleModelObserver, HDSPSleepEventHandler, HDSPTimeChangeObserver, HDSPDevicePowerObserver, HDSPSleepEventProvider, HDSPSleepScheduleStateObserver>
 @property  {os_unfair_lock_s=I} chargingReminderLock
 @property  HDSPChargingReminderStateMachine *stateMachine
 @property  <HDSPActivityScheduler> *monitoringScheduler
 @property  <NAScheduler> *callbackScheduler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSDate *currentDate
 @property  BOOL sleepFeaturesEnabled
 @property  HKSPSleepScheduleModel *sleepScheduleModel
 @property  unsigned long sleepScheduleState
 @property  BOOL isCharging
 @property  HDSPEnvironment *environment
 @property  NSString *providerIdentifier
 @property  <HDSPSleepEventDelegate> *sleepEventDelegate

  // class methods
  +[HDSPChargingReminderManager monitorCriteria]

  // instance methods
  -[HDSPChargingReminderManager providerIdentifier]
  -[HDSPChargingReminderManager currentDate]
  -[HDSPChargingReminderManager eventIdentifiers]
  -[HDSPChargingReminderManager setSleepEventDelegate:]
  -[HDSPChargingReminderManager _currentState]
  -[HDSPChargingReminderManager sleepEventDelegate]
  -[HDSPChargingReminderManager upcomingEventsDueAfterDate:]
  -[HDSPChargingReminderManager sleepScheduleModelManager:source:didUpdateSleepScheduleModel:]
  -[HDSPChargingReminderManager environmentDidBecomeReady:]
  -[HDSPChargingReminderManager significantTimeChangeDetected:]
  -[HDSPChargingReminderManager sleepScheduleModel]
  -[HDSPChargingReminderManager sleepScheduleState]
  -[HDSPChargingReminderManager stateMachine]
  -[HDSPChargingReminderManager sleepEventIsDue:]
  -[HDSPChargingReminderManager sleepScheduleStateDidChange:previousState:reason:]
  -[HDSPChargingReminderManager devicePowerMonitor]
  -[HDSPChargingReminderManager callbackScheduler]
  -[HDSPChargingReminderManager updateState]
  -[HDSPChargingReminderManager .cxx_destruct]
  -[HDSPChargingReminderManager initWithEnvironment:]
  -[HDSPChargingReminderManager sleepFeaturesEnabled]
  -[HDSPChargingReminderManager environmentWillBecomeReady:]
  -[HDSPChargingReminderManager diagnosticDescription]
  -[HDSPChargingReminderManager diagnosticInfo]
  -[HDSPChargingReminderManager isCharging]
  -[HDSPChargingReminderManager environment]
  -[HDSPChargingReminderManager _withLock:]
  -[HDSPChargingReminderManager postChargingReminderNotification]
  -[HDSPChargingReminderManager scheduleBatteryMonitoring]
  -[HDSPChargingReminderManager unscheduleBatteryMonitoring]
  -[HDSPChargingReminderManager startBatteryMonitoring]
  -[HDSPChargingReminderManager stopBatteryMonitoring]
  -[HDSPChargingReminderManager monitoringWindowAfterDate:]
  -[HDSPChargingReminderManager deviceChangedChargingState:]
  -[HDSPChargingReminderManager initWithEnvironment:monitoringScheduler:]
  -[HDSPChargingReminderManager checkBatteryLevel]
  -[HDSPChargingReminderManager isWaitingOrMonitoring]
  -[HDSPChargingReminderManager chargingReminderLock]
  -[HDSPChargingReminderManager monitoringScheduler]


HDSPAnalyticsDailyReportBuilder : NSObject /usr/lib/libSystem.B.dylib
 @property  HDSPEnvironment *environment
 @property  NSArray *daySummaries
 @property  {?=qq} morningIndexRange

  // instance methods
  -[HDSPAnalyticsDailyReportBuilder healthStore]
  -[HDSPAnalyticsDailyReportBuilder currentDate]
  -[HDSPAnalyticsDailyReportBuilder sleepSettings]
  -[HDSPAnalyticsDailyReportBuilder sleepSchedule]
  -[HDSPAnalyticsDailyReportBuilder .cxx_destruct]
  -[HDSPAnalyticsDailyReportBuilder _biologicalSex]
  -[HDSPAnalyticsDailyReportBuilder environment]
  -[HDSPAnalyticsDailyReportBuilder analyticsStore]
  -[HDSPAnalyticsDailyReportBuilder daySummaries]
  -[HDSPAnalyticsDailyReportBuilder morningIndexRange]
  -[HDSPAnalyticsDailyReportBuilder initWithEnvironment:daySummaries:morningIndexRange:]
  -[HDSPAnalyticsDailyReportBuilder buildReports]
  -[HDSPAnalyticsDailyReportBuilder _dailyReportEvent]
  -[HDSPAnalyticsDailyReportBuilder _windDownEvents]
  -[HDSPAnalyticsDailyReportBuilder _userAgeForCurrentDate:]
  -[HDSPAnalyticsDailyReportBuilder _weeksSinceOnboardDate:currentDate:calendar:]
  -[HDSPAnalyticsDailyReportBuilder _didInteractWithWindDownActionsWithinLastTwoDays]
  -[HDSPAnalyticsDailyReportBuilder _changedSchedule:withinNumberOfDays:currentDate:calendar:]


HDSPGoodMorningAlertWaitingState : HDSPGoodMorningAlertStateMachineState
  // instance methods
  -[HDSPGoodMorningAlertWaitingState sleepScheduleStateChangedToWakeUp]
  -[HDSPGoodMorningAlertWaitingState stateName]


HDSPSleepScheduleStateCoordinatorBedtimeState : HDSPSleepScheduleStateCoordinatorStateMachineState
  // instance methods
  -[HDSPSleepScheduleStateCoordinatorBedtimeState bedtimeSkipped]
  -[HDSPSleepScheduleStateCoordinatorBedtimeState wakeUpConfirmed]
  -[HDSPSleepScheduleStateCoordinatorBedtimeState scheduleState]
  -[HDSPSleepScheduleStateCoordinatorBedtimeState bedtimeDelayed]
  -[HDSPSleepScheduleStateCoordinatorBedtimeState stateName]
  -[HDSPSleepScheduleStateCoordinatorBedtimeState wakeTimeReached]
  -[HDSPSleepScheduleStateCoordinatorBedtimeState determineExpirationDateForCurrentDate:]


HDSPWakeUpResultsNotificationWaitingForWakeUpState : HDSPWakeUpResultsNotificationStateMachineState
  // instance methods
  -[HDSPWakeUpResultsNotificationWaitingForWakeUpState wakeUpDidOccur]
  -[HDSPWakeUpResultsNotificationWaitingForWakeUpState stateName]
  -[HDSPWakeUpResultsNotificationWaitingForWakeUpState _transitionToDelayingForTrackingState]


HDSPDoNotDisturbManager : NSObject /usr/lib/libSystem.B.dylib <HDSPSleepModeObserver, HDSPSleepScheduleModelObserver, HDSPTimeChangeObserver, HDSPDoNotDisturbStateMachineDelegate, HDSPDoNotDisturbStateMachineInfoProvider, HDSPNotificationObserver, HDSPSource, HDSPDiagnosticsProvider, HDSPDoNotDisturbListenerDelegate, HDSPEnvironmentAware>
 @property  HDSPDoNotDisturbListener *doNotDisturbListener
 @property  {os_unfair_lock_s=I} dndLock
 @property  HDSPDoNotDisturbStateMachine *stateMachine
 @property  @? assertionServiceProvider
 @property  NSString *assertionServiceClientIdentifier
 @property  <HDSPDNDModeAssertionService> *assertionService
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <NAScheduler> *callbackScheduler
 @property  NSDate *currentDate
 @property  HKSPSleepScheduleModel *sleepScheduleModel
 @property  long long sleepMode
 @property  unsigned long sleepScheduleState
 @property  NSString *sourceIdentifier
 @property  BOOL dontNotify
 @property  BOOL dontSync
 @property  <HDSPSource> *targetSource
 @property  HDSPEnvironment *environment

  // instance methods
  -[HDSPDoNotDisturbManager currentDate]
  -[HDSPDoNotDisturbManager sleepMode]
  -[HDSPDoNotDisturbManager userTurnedOffDoNotDisturb]
  -[HDSPDoNotDisturbManager _currentState]
  -[HDSPDoNotDisturbManager notificationListener:didReceiveNotificationWithName:]
  -[HDSPDoNotDisturbManager engageDoNotDisturbDuringBedtimeWithUserVisibleEndDate:updateOnly:]
  -[HDSPDoNotDisturbManager sleepScheduleModelManager:source:didUpdateSleepScheduleModel:]
  -[HDSPDoNotDisturbManager environmentDidBecomeReady:]
  -[HDSPDoNotDisturbManager significantTimeChangeDetected:]
  -[HDSPDoNotDisturbManager sleepScheduleModel]
  -[HDSPDoNotDisturbManager sleepScheduleState]
  -[HDSPDoNotDisturbManager sleepModeDidChange:previousMode:reason:]
  -[HDSPDoNotDisturbManager stateMachine]
  -[HDSPDoNotDisturbManager disengageDoNotDisturb]
  -[HDSPDoNotDisturbManager engageDoNotDisturbDuringWindDownWithUserVisibleEndDate:updateOnly:]
  -[HDSPDoNotDisturbManager sourceIdentifier]
  -[HDSPDoNotDisturbManager .cxx_destruct]
  -[HDSPDoNotDisturbManager initWithEnvironment:]
  -[HDSPDoNotDisturbManager environmentWillBecomeReady:]
  -[HDSPDoNotDisturbManager dndLock]
  -[HDSPDoNotDisturbManager assertionService]
  -[HDSPDoNotDisturbManager assertionServiceProvider]
  -[HDSPDoNotDisturbManager diagnosticDescription]
  -[HDSPDoNotDisturbManager diagnosticInfo]
  -[HDSPDoNotDisturbManager environment]
  -[HDSPDoNotDisturbManager assertionServiceClientIdentifier]
  -[HDSPDoNotDisturbManager _locked_cleanUpUnexpectedActiveAssertion]
  -[HDSPDoNotDisturbManager initWithEnvironment:assertionServiceProvider:doNotDisturbListener:]
  -[HDSPDoNotDisturbManager _withLock:]
  -[HDSPDoNotDisturbManager _updateDoNotDisturbAssertionService]
  -[HDSPDoNotDisturbManager doNotDisturbListener]
  -[HDSPDoNotDisturbManager _assertionServiceClientIdentifierForPairedDevice]
  -[HDSPDoNotDisturbManager _takeDoNotDisturbAssertionWithIdentifier:userVisibleEndDate:updateOnly:]


HDSPEnvironment : NSObject /usr/lib/libSystem.B.dylib <HDSPDiagnosticsProvider, HDSPEnvironmentStateMachineDelegate, HDSPEnvironmentStateMachineInfoProvider, HDSPSystemReadyDelegate>
 @property  HDSPEnvironmentStateMachine *stateMachine
 @property  {os_unfair_lock_s=I} stateMachineLock
 @property  NAFuture *environmentIsReady
 @property  BOOL isSystemReady
 @property  BOOL isDisabled
 @property  BOOL isDemoEnvironment
 @property  @? currentDateProvider
 @property  <HKSPUserDefaults> *userDefaults
 @property  HDSPSleepStoreServer *sleepServer
 @property  HDSPGoodMorningAlertManager *goodMorningAlertManager
 @property  HDSPChargingReminderManager *chargingReminderManager
 @property  HDSPWakeDetectionManager *wakeDetectionManager
 @property  HDSPWakeUpResultsNotificationManager *wakeUpResultsNotificationManager
 @property  HDSPSleepAlarmManager *sleepAlarmManager
 @property  HKSPHealthStoreProvider *healthStoreProvider
 @property  HDSPDiagnostics *diagnostics
 @property  HDSPNotificationListener *notificationListener
 @property  HDSPSleepLockScreenManager *sleepLockScreenManager
 @property  HDSPSystemMonitor *systemMonitor
 @property  HDSPAssertionManager *assertionManager
 @property  HDSPTimeChangeListener *timeChangeListener
 @property  HKSPSensitiveUIMonitor *sensitiveUIMonitor
 @property  HDSPSleepScheduleModelMigrationManager *migrationManager
 @property  HDSPContextStoreManager *contextStoreManager
 @property  HDSPDoNotDisturbManager *doNotDisturbManager
 @property  HDSPIDSServiceManager *idsServiceManager
 @property  <HKSPQueueBackedScheduler> *defaultCallbackScheduler
 @property  HDSPAnalyticsManager *analyticsManager
 @property  BOOL isEnvironmentReady
 @property  _HKBehavior *behavior
 @property  HDSPSleepScheduleModelManager *sleepScheduleModelManager
 @property  HDSPSleepStorage *sleepStorage
 @property  HDSPSleepEventScheduler *sleepScheduler
 @property  HDSPSleepScheduleStateCoordinator *sleepCoordinator
 @property  HDSPSleepModeManager *sleepModeManager
 @property  HDSPSleepTrackingManager *sleepTrackingManager
 @property  HDSPSleepActionManager *actionManager
 @property  HDSPSleepNotificationManager *notificationManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <NAScheduler> *callbackScheduler

  // class methods
  +[HDSPEnvironment demoModeEnvironment]
  +[HDSPEnvironment standardEnvironment]
  +[HDSPEnvironment disabledEnvironment]
  +[HDSPEnvironment unitTestEnvironment]

  // instance methods
  -[HDSPEnvironment prepare]
  -[HDSPEnvironment wakeDetectionManager]
  -[HDSPEnvironment contextStoreManager]
  -[HDSPEnvironment isDisabled]
  -[HDSPEnvironment defaultCallbackScheduler]
  -[HDSPEnvironment doNotDisturbManager]
  -[HDSPEnvironment sleepModeManager]
  -[HDSPEnvironment sleepStorage]
  -[HDSPEnvironment currentDateProvider]
  -[HDSPEnvironment sleepLockScreenManager]
  -[HDSPEnvironment timeChangeListener]
  -[HDSPEnvironment userDefaults]
  -[HDSPEnvironment currentState]
  -[HDSPEnvironment sensitiveUIMonitor]
  -[HDSPEnvironment idsServiceManager]
  -[HDSPEnvironment systemMonitor]
  -[HDSPEnvironment isSystemReady]
  -[HDSPEnvironment stateMachine]
  -[HDSPEnvironment analyticsManager]
  -[HDSPEnvironment behavior]
  -[HDSPEnvironment performBlock:withLock:]
  -[HDSPEnvironment assertionManager]
  -[HDSPEnvironment sleepAlarmManager]
  -[HDSPEnvironment healthStoreProvider]
  -[HDSPEnvironment stateMachineLock]
  -[HDSPEnvironment performWhenEnvironmentIsReady:]
  -[HDSPEnvironment isEnvironmentReady]
  -[HDSPEnvironment actionManager]
  -[HDSPEnvironment migrationManager]
  -[HDSPEnvironment diagnostics]
  -[HDSPEnvironment systemDidBecomeReady]
  -[HDSPEnvironment sleepServer]
  -[HDSPEnvironment goodMorningAlertManager]
  -[HDSPEnvironment environmentDidBecomeReady]
  -[HDSPEnvironment sleepScheduler]
  -[HDSPEnvironment sleepTrackingManager]
  -[HDSPEnvironment notificationManager]
  -[HDSPEnvironment environmentShouldMigrateData]
  -[HDSPEnvironment callbackScheduler]
  -[HDSPEnvironment dealloc]
  -[HDSPEnvironment sleepCoordinator]
  -[HDSPEnvironment environmentIsReady]
  -[HDSPEnvironment updateState]
  -[HDSPEnvironment chargingReminderManager]
  -[HDSPEnvironment sleepScheduleModelManager]
  -[HDSPEnvironment isDemoEnvironment]
  -[HDSPEnvironment wakeUpResultsNotificationManager]
  -[HDSPEnvironment _environmentAwareComponents]
  -[HDSPEnvironment .cxx_destruct]
  -[HDSPEnvironment needsDataMigration]
  -[HDSPEnvironment notificationListener]
  -[HDSPEnvironment diagnosticDescription]
  -[HDSPEnvironment diagnosticInfo]
  -[HDSPEnvironment initWithBehavior:sleepStorageProvider:sleepScheduleModelManagerProvider:sleepSchedulerProvider:sleepServerProvider:sleepCoordinatorProvider:sleepModeManagerProvider:sleepTrackingManagerProvider:goodMorningAlertManagerProvider:chargingReminderManagerProvider:wakeDetectionManagerProvider:wakeUpResultsNotificationManagerProvider:actionManagerProvider:sleepAlarmManagerProvider:healthStoreProvider:contextStoreManagerProvider:doNotDisturbManagerProvider:migrationManagerProvider:notificationManagerProvider:notificationListenerProvider:sleepLockScreenManagerProvider:idsServiceManagerProvider:diagnosticsProvider:systemMonitorProvider:assertionManager:timeChangeListenerProvider:sensitiveUIMonitorProvider:analyticsManagerProvider:userDefaults:currentDateProvider:defaultCallbackScheduler:]
  -[HDSPEnvironment _withLock:]


HDSPSleepStoreServer : NSObject /usr/lib/libSystem.B.dylib <HKSPSleepServer, HDSPSleepScheduleStateObserver, HDSPSleepScheduleModelObserver, HDSPSleepEventHandler, HDSPSleepModeObserver, HDSPDiagnosticsProvider, HDSPEnvironmentAware>
 @property  NAFuture *environmentIsReady
 @property  HKSPXPCConnectionListener *connectionListener
 @property  HDSPSleepMessageStore *messageStore
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  HDSPEnvironment *environment

  // instance methods
  -[HDSPSleepStoreServer connectionListener]
  -[HDSPSleepStoreServer eventIdentifiers]
  -[HDSPSleepStoreServer _notifyClientForMissedRecordChange:syncAnchor:]
  -[HDSPSleepStoreServer getSleepScheduleStateWithCompletion:]
  -[HDSPSleepStoreServer sleepScheduleModelManager:source:didUpdateSleepSettings:]
  -[HDSPSleepStoreServer environmentDidBecomeReady:]
  -[HDSPSleepStoreServer connectWithCompletion:]
  -[HDSPSleepStoreServer publishNotificationWithIdentifier:userInfo:completion:]
  -[HDSPSleepStoreServer sleepModeDidChange:previousMode:reason:]
  -[HDSPSleepStoreServer sleepEventIsDue:]
  -[HDSPSleepStoreServer startListening]
  -[HDSPSleepStoreServer _notifyClientForMissedSettingsChange:syncAnchor:]
  -[HDSPSleepStoreServer sleepScheduleModelManager:source:didUpdateSleepSchedule:]
  -[HDSPSleepStoreServer skipWindDownWithCompletion:]
  -[HDSPSleepStoreServer sleepScheduleStateDidChange:previousState:reason:]
  -[HDSPSleepStoreServer confirmAwakeWithCompletion:]
  -[HDSPSleepStoreServer getSleepSettingsWithCompletion:]
  -[HDSPSleepStoreServer setSleepMode:completion:]
  -[HDSPSleepStoreServer _notifyClientForMissedScheduleStateChange:syncAnchor:]
  -[HDSPSleepStoreServer delayBedtimeForTimeInterval:completion:]
  -[HDSPSleepStoreServer environmentIsReady]
  -[HDSPSleepStoreServer .cxx_destruct]
  -[HDSPSleepStoreServer saveSleepSettings:completion:]
  -[HDSPSleepStoreServer _notifyClient:forMissedSleepEvent:syncAnchor:]
  -[HDSPSleepStoreServer initWithEnvironment:]
  -[HDSPSleepStoreServer environmentWillBecomeReady:]
  -[HDSPSleepStoreServer environmentWillInvalidate:]
  -[HDSPSleepStoreServer saveSleepSchedule:completion:]
  -[HDSPSleepStoreServer setLockScreenOverrideState:userInfo:completion:]
  -[HDSPSleepStoreServer messageStore]
  -[HDSPSleepStoreServer getSleepScheduleWithCompletion:]
  -[HDSPSleepStoreServer dismissGoodMorningWithCompletion:]
  -[HDSPSleepStoreServer _notifyClientForMissedScheduleChange:syncAnchor:]
  -[HDSPSleepStoreServer getSleepEventRecordWithCompletion:]
  -[HDSPSleepStoreServer getSleepModeWithCompletion:]
  -[HDSPSleepStoreServer saveSleepEventRecord:completion:]
  -[HDSPSleepStoreServer publishWakeUpResultsNotificationWithCompletion:]
  -[HDSPSleepStoreServer diagnosticDescription]
  -[HDSPSleepStoreServer diagnosticInfo]
  -[HDSPSleepStoreServer sleepScheduleModelManager:source:didUpdateSleepEventRecord:]
  -[HDSPSleepStoreServer sleepAlarmWasSnoozedUntilDate:completion:]
  -[HDSPSleepStoreServer _notifyClientForMissedSleepModeChange:syncAnchor:]
  -[HDSPSleepStoreServer environment]
  -[HDSPSleepStoreServer _notifyClient:forMissedMessagesWithSyncAnchor:]
  -[HDSPSleepStoreServer sleepAlarmWasModifiedWithCompletion:]
  -[HDSPSleepStoreServer initWithEnvironment:connectionListenerProvider:]
  -[HDSPSleepStoreServer sleepAlarmWasDismissedOnDate:completion:]
  -[HDSPSleepStoreServer _performWhenEnvironmentIsReady:]
  -[HDSPSleepStoreServer checkInWithSyncAnchor:completion:]
  -[HDSPSleepStoreServer skipBedtimeWithCompletion:]


HDSPWatchReadyProvider : NSObject /usr/lib/libSystem.B.dylib <HDSPSpringboardObserver, HDSPSystemReadyProvider, HDSPEnvironmentAware>
 @property  HDSPSpringboardMonitor *springboardMonitor
 @property  BOOL observingRestore
 @property  {os_unfair_lock_s=I} lock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL isSystemReady
 @property  <HDSPSystemReadyDelegate> *delegate
 @property  HDSPEnvironment *environment

  // instance methods
  -[HDSPWatchReadyProvider springboardMonitor]
  -[HDSPWatchReadyProvider isSystemReady]
  -[HDSPWatchReadyProvider springboardDidStart]
  -[HDSPWatchReadyProvider restoreDidFinish]
  -[HDSPWatchReadyProvider .cxx_destruct]
  -[HDSPWatchReadyProvider initWithEnvironment:]
  -[HDSPWatchReadyProvider lock]
  -[HDSPWatchReadyProvider environment]
  -[HDSPWatchReadyProvider setDelegate:]
  -[HDSPWatchReadyProvider delegate]
  -[HDSPWatchReadyProvider _withLock:]
  -[HDSPWatchReadyProvider _waitForInitialSync]
  -[HDSPWatchReadyProvider _isInRootRobot]
  -[HDSPWatchReadyProvider _finishWaitingForInitialSync]
  -[HDSPWatchReadyProvider isInRootRobotOrDemoMode]
  -[HDSPWatchReadyProvider observingRestore]


HDSPSleepLockScreenWindDownState : HDSPSleepLockScreenStateMachineState
  // instance methods
  -[HDSPSleepLockScreenWindDownState sleepLockScreenState]
  -[HDSPSleepLockScreenWindDownState stateName]


HDSPSleepLockScreenAssertionManager : NSObject /usr/lib/libSystem.B.dylib <HKSPSleepLockScreenServer, NSXPCListenerDelegate, HDSPEnvironmentAware>
 @property  SBSLockScreenRemoteContentAssertion *lockScreenAssertion
 @property  <HDSPSleepLockScreenAssertionManagerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  HDSPEnvironment *environment

  // instance methods
  -[HDSPSleepLockScreenAssertionManager connect]
  -[HDSPSleepLockScreenAssertionManager .cxx_destruct]
  -[HDSPSleepLockScreenAssertionManager initWithEnvironment:]
  -[HDSPSleepLockScreenAssertionManager listener:shouldAcceptNewConnection:]
  -[HDSPSleepLockScreenAssertionManager environment]
  -[HDSPSleepLockScreenAssertionManager setDelegate:]
  -[HDSPSleepLockScreenAssertionManager didDismissWithReason:]
  -[HDSPSleepLockScreenAssertionManager delegate]
  -[HDSPSleepLockScreenAssertionManager invalidateAssertion]
  -[HDSPSleepLockScreenAssertionManager takeAssertionIfNeeded]
  -[HDSPSleepLockScreenAssertionManager sendLockScreenState:userInfo:]
  -[HDSPSleepLockScreenAssertionManager lockScreenAssertion]


HDSPChargingReminderWaitingState : HDSPChargingReminderStateMachineState
  // instance methods
  -[HDSPChargingReminderWaitingState willEnterWithPreviousState:context:]
  -[HDSPChargingReminderWaitingState didEnterWithPreviousState:context:]
  -[HDSPChargingReminderWaitingState stateName]
  -[HDSPChargingReminderWaitingState didExitWithNextState:context:]
  -[HDSPChargingReminderWaitingState batteryMonitoringEventDue]


HDSPSleepModeChangeMessage : HDSPSleepMessage
  // instance methods
  -[HDSPSleepModeChangeMessage messageType]


HDSPDeviceUnlockMonitor : NSObject /usr/lib/libSystem.B.dylib <HDSPNotificationObserver>
 @property  {os_unfair_lock_s=I} monitorLock
 @property  HKSPObserverSet *observers
 @property  NSNumber *overrideDeviceHasBeenUnlockedSinceBoot
 @property  BOOL hasBeenUnlockedSinceBoot
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HDSPDeviceUnlockMonitor handleFirstUnlock]
  -[HDSPDeviceUnlockMonitor hasBeenUnlockedSinceBoot]
  -[HDSPDeviceUnlockMonitor initWithCallbackScheduler:]
  -[HDSPDeviceUnlockMonitor notificationListener:didReceiveNotificationWithName:]
  -[HDSPDeviceUnlockMonitor init]
  -[HDSPDeviceUnlockMonitor monitorLock]
  -[HDSPDeviceUnlockMonitor .cxx_destruct]
  -[HDSPDeviceUnlockMonitor observers]
  -[HDSPDeviceUnlockMonitor _latestKeyBagValueForHasBeenUnlockedSinceBoot]
  -[HDSPDeviceUnlockMonitor removeObserver:]
  -[HDSPDeviceUnlockMonitor overrideDeviceHasBeenUnlockedSinceBoot]
  -[HDSPDeviceUnlockMonitor addObserver:]
  -[HDSPDeviceUnlockMonitor setOverrideDeviceHasBeenUnlockedSinceBoot:]
  -[HDSPDeviceUnlockMonitor _withLock:]


HDSPTimeAsleepTrackerAutoTrackingState : HDSPTimeAsleepTrackerSleepTrackingState
  // instance methods
  -[HDSPTimeAsleepTrackerAutoTrackingState stateName]
  -[HDSPTimeAsleepTrackerAutoTrackingState wakeUpOccurredWithReason:]
  -[HDSPTimeAsleepTrackerAutoTrackingState sleepModeExitedWithReason:]
  -[HDSPTimeAsleepTrackerAutoTrackingState startWakeDetectionOccurred]
  -[HDSPTimeAsleepTrackerAutoTrackingState _updateStateSpecific]


HDSPTimeAsleepTrackerDisabledState : HDSPTimeAsleepTrackerStateMachineState
  // instance methods
  -[HDSPTimeAsleepTrackerDisabledState stateName]


_HDSPQuietSource : NSObject /usr/lib/libSystem.B.dylib <HDSPSource>
 @property  NSString *sourceIdentifier
 @property  <HDSPSource> *targetSource
 @property  BOOL dontNotify
 @property  BOOL dontSync
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_HDSPQuietSource setSourceIdentifier:]
  -[_HDSPQuietSource sourceIdentifier]
  -[_HDSPQuietSource .cxx_destruct]
  -[_HDSPQuietSource dontSync]
  -[_HDSPQuietSource dontNotify]
  -[_HDSPQuietSource targetSource]
  -[_HDSPQuietSource setTargetSource:]
  -[_HDSPQuietSource setDontNotify:]
  -[_HDSPQuietSource setDontSync:]


HDSPSkipWindDownIDSMessage : HDSPEventRecordMessage
 @property  NSDate *windDownSkippedDate

  // instance methods
  -[HDSPSkipWindDownIDSMessage windDownSkippedDate]
  -[HDSPSkipWindDownIDSMessage dateDescription]
  -[HDSPSkipWindDownIDSMessage initWithWindDownSkippedDate:timeout:]


HDSPSleepScheduleModelMigrationManager : NSObject /usr/lib/libSystem.B.dylib <HDSPNotificationObserver, HDSPSource, HDSPEnvironmentAware>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *sourceIdentifier
 @property  BOOL dontNotify
 @property  BOOL dontSync
 @property  <HDSPSource> *targetSource
 @property  HDSPEnvironment *environment

  // instance methods
  -[HDSPSleepScheduleModelMigrationManager notificationListener:didReceiveNotificationWithName:]
  -[HDSPSleepScheduleModelMigrationManager environmentDidBecomeReady:]
  -[HDSPSleepScheduleModelMigrationManager _migrateSleepScheduleFromMobileTimer]
  -[HDSPSleepScheduleModelMigrationManager needDataMigration]
  -[HDSPSleepScheduleModelMigrationManager _migrateSleepScreen]
  -[HDSPSleepScheduleModelMigrationManager migrateToMobileTimerIfNecessary]
  -[HDSPSleepScheduleModelMigrationManager sourceIdentifier]
  -[HDSPSleepScheduleModelMigrationManager .cxx_destruct]
  -[HDSPSleepScheduleModelMigrationManager initWithEnvironment:]
  -[HDSPSleepScheduleModelMigrationManager _migrateSleepDurationFromHealthKit]
  -[HDSPSleepScheduleModelMigrationManager environmentWillBecomeReady:]
  -[HDSPSleepScheduleModelMigrationManager migrateFromHealthKitIfNecessary]
  -[HDSPSleepScheduleModelMigrationManager environment]
  -[HDSPSleepScheduleModelMigrationManager performDataMigration]


HDSPWatchOnWristMonitor : NSObject /usr/lib/libSystem.B.dylib
 @property  <HKSPUserDefaults> *userDefaults
 @property  HKSPObserverSet *observers
 @property  {os_unfair_lock_s=I} lock
 @property  BOOL isOnWrist
 @property  NSDate *lastOnWristDate

  // instance methods
  -[HDSPWatchOnWristMonitor userDefaults]
  -[HDSPWatchOnWristMonitor .cxx_destruct]
  -[HDSPWatchOnWristMonitor lock]
  -[HDSPWatchOnWristMonitor observers]
  -[HDSPWatchOnWristMonitor initWithUserDefaults:]
  -[HDSPWatchOnWristMonitor removeObserver:]
  -[HDSPWatchOnWristMonitor addObserver:]
  -[HDSPWatchOnWristMonitor _withLock:]
  -[HDSPWatchOnWristMonitor initWithUserDefaults:callbackScheduler:]
  -[HDSPWatchOnWristMonitor _lock_isOnWrist]
  -[HDSPWatchOnWristMonitor _lock_lastOnWristDate]
  -[HDSPWatchOnWristMonitor isOnWrist]
  -[HDSPWatchOnWristMonitor _lock_setIsOnWrist:]
  -[HDSPWatchOnWristMonitor lastOnWristDate]
  -[HDSPWatchOnWristMonitor _lock_setLastOnWristDate:]


HDSPSleepScheduleStateCoordinatorInitialState : HDSPSleepScheduleStateCoordinatorStateMachineState
  // instance methods
  -[HDSPSleepScheduleStateCoordinatorInitialState updateState]
  -[HDSPSleepScheduleStateCoordinatorInitialState scheduleState]
  -[HDSPSleepScheduleStateCoordinatorInitialState stateName]


HDSPTimeAsleepTrackerSleepTrackingState : HDSPTimeAsleepTrackerStateMachineState
  // class methods
  +[HDSPTimeAsleepTrackerSleepTrackingState defaultStartReason]
  +[HDSPTimeAsleepTrackerSleepTrackingState defaultEndReason]

  // instance methods
  -[HDSPTimeAsleepTrackerSleepTrackingState didEnterWithPreviousState:context:]
  -[HDSPTimeAsleepTrackerSleepTrackingState didExitWithNextState:context:]
  -[HDSPTimeAsleepTrackerSleepTrackingState sleepSessionEndRequestedInternally]
  -[HDSPTimeAsleepTrackerSleepTrackingState isSleepTrackingState]


HDSPGoodMorningAlertStateMachine : HKSPPersistentStateMachine /System/Library/PrivateFrameworks/ToneLibrary.framework/ToneLibrary <HDSPGoodMorningAlertStateMachineDelegate, HDSPGoodMorningAlertStateMachineInfoProvider, HDSPGoodMorningAlertStateMachineEventHandler>
 @property  <HDSPGoodMorningAlertStateMachineDelegate> *delegate
 @property  <HDSPGoodMorningAlertStateMachineInfoProvider> *infoProvider
 @property  HDSPGoodMorningAlertDisabledState *disabledState
 @property  HDSPGoodMorningAlertWaitingState *waitingState
 @property  HDSPGoodMorningAlertPresentingState *presentingState
 @property  <NAScheduler> *callbackScheduler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSDate *currentDate
 @property  BOOL goodMorningAlertEnabled
 @property  HKSPSleepScheduleModel *sleepScheduleModel
 @property  unsigned long sleepScheduleState

  // instance methods
  -[HDSPGoodMorningAlertStateMachine currentDate]
  -[HDSPGoodMorningAlertStateMachine dismissAlertForGoodMorning]
  -[HDSPGoodMorningAlertStateMachine presentAlertForGoodMorning]
  -[HDSPGoodMorningAlertStateMachine sleepScheduleModel]
  -[HDSPGoodMorningAlertStateMachine sleepScheduleState]
  -[HDSPGoodMorningAlertStateMachine disabledState]
  -[HDSPGoodMorningAlertStateMachine .cxx_destruct]
  -[HDSPGoodMorningAlertStateMachine sleepScheduleStateChangedToWakeUp]
  -[HDSPGoodMorningAlertStateMachine goodMorningAlertEnabled]
  -[HDSPGoodMorningAlertStateMachine initWithIdentifier:persistence:delegate:infoProvider:currentDateProvider:]
  -[HDSPGoodMorningAlertStateMachine presentingState]
  -[HDSPGoodMorningAlertStateMachine stateMachineLog]
  -[HDSPGoodMorningAlertStateMachine sleepScheduleStateChangedToBedtime]
  -[HDSPGoodMorningAlertStateMachine waitingState]


HDSPApplicationWorkspaceMonitor : NSObject /usr/lib/libSystem.B.dylib <LSApplicationWorkspaceObserverProtocol>
 @property  HKSPObserverSet *observers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HDSPApplicationWorkspaceMonitor init]
  -[HDSPApplicationWorkspaceMonitor .cxx_destruct]
  -[HDSPApplicationWorkspaceMonitor observers]
  -[HDSPApplicationWorkspaceMonitor removeObserver:]
  -[HDSPApplicationWorkspaceMonitor applicationsDidUninstall:]
  -[HDSPApplicationWorkspaceMonitor addObserver:]
  -[HDSPApplicationWorkspaceMonitor isApplicationInstalled:]


HDSPWakeUpResultsNotificationDisabledState : HDSPWakeUpResultsNotificationStateMachineState
  // instance methods
  -[HDSPWakeUpResultsNotificationDisabledState updateState]
  -[HDSPWakeUpResultsNotificationDisabledState stateName]


HDSPPhoneReadyProvider : NSObject /usr/lib/libSystem.B.dylib <HDSPSpringboardObserver, HDSPSystemReadyProvider, HDSPEnvironmentAware>
 @property  HDSPSpringboardMonitor *springboardMonitor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL isSystemReady
 @property  <HDSPSystemReadyDelegate> *delegate
 @property  HDSPEnvironment *environment

  // instance methods
  -[HDSPPhoneReadyProvider springboardMonitor]
  -[HDSPPhoneReadyProvider isSystemReady]
  -[HDSPPhoneReadyProvider springboardDidStart]
  -[HDSPPhoneReadyProvider .cxx_destruct]
  -[HDSPPhoneReadyProvider initWithEnvironment:]
  -[HDSPPhoneReadyProvider environment]
  -[HDSPPhoneReadyProvider setDelegate:]
  -[HDSPPhoneReadyProvider delegate]


HDSPDoNotDisturbStateMachine : HKSPPersistentStateMachine /System/Library/PrivateFrameworks/ToneLibrary.framework/ToneLibrary <HDSPDoNotDisturbStateMachineDelegate, HDSPDoNotDisturbStateMachineInfoProvider, HDSPDoNotDisturbStateMachineEventHandler>
 @property  <HDSPDoNotDisturbStateMachineDelegate> *delegate
 @property  <HDSPDoNotDisturbStateMachineInfoProvider> *infoProvider
 @property  HDSPDoNotDisturbOffState *offState
 @property  HDSPDoNotDisturbDuringWindDownState *dndDuringWindDownState
 @property  HDSPDoNotDisturbDuringBedtimeState *dndDuringBedtimeState
 @property  HDSPDoNotDisturbManualOffState *manualOffState
 @property  <NAScheduler> *callbackScheduler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSDate *currentDate
 @property  HKSPSleepScheduleModel *sleepScheduleModel
 @property  long long sleepMode
 @property  unsigned long sleepScheduleState

  // instance methods
  -[HDSPDoNotDisturbStateMachine currentDate]
  -[HDSPDoNotDisturbStateMachine sleepMode]
  -[HDSPDoNotDisturbStateMachine userTurnedOffDoNotDisturb]
  -[HDSPDoNotDisturbStateMachine engageDoNotDisturbDuringBedtimeWithUserVisibleEndDate:updateOnly:]
  -[HDSPDoNotDisturbStateMachine sleepScheduleModel]
  -[HDSPDoNotDisturbStateMachine sleepScheduleState]
  -[HDSPDoNotDisturbStateMachine dndDuringWindDownState]
  -[HDSPDoNotDisturbStateMachine disengageDoNotDisturb]
  -[HDSPDoNotDisturbStateMachine engageDoNotDisturbDuringWindDownWithUserVisibleEndDate:updateOnly:]
  -[HDSPDoNotDisturbStateMachine .cxx_destruct]
  -[HDSPDoNotDisturbStateMachine initWithIdentifier:persistence:delegate:infoProvider:currentDateProvider:]
  -[HDSPDoNotDisturbStateMachine offState]
  -[HDSPDoNotDisturbStateMachine stateMachineLog]
  -[HDSPDoNotDisturbStateMachine manualOffState]
  -[HDSPDoNotDisturbStateMachine dndDuringBedtimeState]


HDSPSleepEventRecordChangeMessage : HDSPSleepMessage
  // instance methods
  -[HDSPSleepEventRecordChangeMessage messageType]


HDSPSleepDaemon : NSObject /usr/lib/libSystem.B.dylib <HDSPDiagnosticsProvider>
 @property  NSDate *launchDate
 @property  HDSPEnvironment *environment
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HDSPSleepDaemon init]
  -[HDSPSleepDaemon .cxx_destruct]
  -[HDSPSleepDaemon launchDate]
  -[HDSPSleepDaemon initWithBehavior:sleepEnabled:]
  -[HDSPSleepDaemon diagnosticDescription]
  -[HDSPSleepDaemon diagnosticInfo]
  -[HDSPSleepDaemon environment]
  -[HDSPSleepDaemon start]


HDSPEnvironmentStateMachine : HKSPStateMachine /System/Library/PrivateFrameworks/ToneLibrary.framework/ToneLibrary <HDSPEnvironmentStateMachineDelegate, HDSPEnvironmentStateMachineInfoProvider, HDSPEnvironmentStateMachineEventHandler>
 @property  <HDSPEnvironmentStateMachineDelegate> *delegate
 @property  <HDSPEnvironmentStateMachineInfoProvider> *infoProvider
 @property  HDSPEnvironmentNotReadyState *notReadyState
 @property  HDSPEnvironmentMigrationState *migrationState
 @property  HDSPEnvironmentReadyState *readyState
 @property  HDSPEnvironmentDemoState *demoState
 @property  <NAScheduler> *callbackScheduler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HDSPEnvironmentStateMachine isSystemReady]
  -[HDSPEnvironmentStateMachine initWithDelegate:infoProvider:]
  -[HDSPEnvironmentStateMachine systemDidBecomeReady]
  -[HDSPEnvironmentStateMachine dataMigrationDidComplete]
  -[HDSPEnvironmentStateMachine environmentDidBecomeReady]
  -[HDSPEnvironmentStateMachine environmentShouldMigrateData]
  -[HDSPEnvironmentStateMachine .cxx_destruct]
  -[HDSPEnvironmentStateMachine needsDataMigration]
  -[HDSPEnvironmentStateMachine notReadyState]
  -[HDSPEnvironmentStateMachine stateMachineLog]
  -[HDSPEnvironmentStateMachine migrationState]
  -[HDSPEnvironmentStateMachine readyState]
  -[HDSPEnvironmentStateMachine demoState]


HDSPSimulatorReadyProvider : NSObject /usr/lib/libSystem.B.dylib <HDSPSystemReadyProvider, HDSPEnvironmentAware>
 @property  BOOL isSystemReady
 @property  <HDSPSystemReadyDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  HDSPEnvironment *environment

  // instance methods
  -[HDSPSimulatorReadyProvider isInDemoMode]
  -[HDSPSimulatorReadyProvider isSystemReady]
  -[HDSPSimulatorReadyProvider .cxx_destruct]
  -[HDSPSimulatorReadyProvider initWithEnvironment:]
  -[HDSPSimulatorReadyProvider environment]
  -[HDSPSimulatorReadyProvider setDelegate:]
  -[HDSPSimulatorReadyProvider delegate]


HDSPSleepScheduleStateCoordinatorDelayedWakeUpState : HDSPSleepScheduleStateCoordinatorStateMachineState
  // instance methods
  -[HDSPSleepScheduleStateCoordinatorDelayedWakeUpState bedtimeReached]
  -[HDSPSleepScheduleStateCoordinatorDelayedWakeUpState wakeUpConfirmed]
  -[HDSPSleepScheduleStateCoordinatorDelayedWakeUpState scheduleState]
  -[HDSPSleepScheduleStateCoordinatorDelayedWakeUpState stateName]
  -[HDSPSleepScheduleStateCoordinatorDelayedWakeUpState windDownReached]
  -[HDSPSleepScheduleStateCoordinatorDelayedWakeUpState didExitWithNextState:context:]
  -[HDSPSleepScheduleStateCoordinatorDelayedWakeUpState determineExpirationDateForCurrentDate:]
  -[HDSPSleepScheduleStateCoordinatorDelayedWakeUpState updateStateWithCheckExpiration:]


HDSPSleepLockScreenBedtimeState : HDSPSleepLockScreenStateMachineState
  // instance methods
  -[HDSPSleepLockScreenBedtimeState sleepLockScreenState]
  -[HDSPSleepLockScreenBedtimeState stateName]


HDSPConfirmWakeUpIDSMessage : HDSPEventRecordMessage
 @property  NSDate *wakeUpConfirmedDate
 @property  NSDate *wakeUpConfirmedUntilDate

  // instance methods
  -[HDSPConfirmWakeUpIDSMessage wakeUpConfirmedUntilDate]
  -[HDSPConfirmWakeUpIDSMessage .cxx_destruct]
  -[HDSPConfirmWakeUpIDSMessage succinctDescriptionBuilder]
  -[HDSPConfirmWakeUpIDSMessage encodeWithCoder:]
  -[HDSPConfirmWakeUpIDSMessage initWithCoder:]
  -[HDSPConfirmWakeUpIDSMessage wakeUpConfirmedDate]
  -[HDSPConfirmWakeUpIDSMessage initWithWakeUpConfirmedDate:wakeUpConfirmedUntilDate:timeout:]


HDSPDoNotDisturbManualOffState : HDSPDoNotDisturbStateMachineState
  // instance methods
  -[HDSPDoNotDisturbManualOffState updateState]
  -[HDSPDoNotDisturbManualOffState willEnterWithPreviousState:context:]
  -[HDSPDoNotDisturbManualOffState didEnterWithPreviousState:context:]
  -[HDSPDoNotDisturbManualOffState stateName]
  -[HDSPDoNotDisturbManualOffState determineExpirationDateForCurrentDate:]


HDSPSleepLockScreenGreetingState : HDSPSleepLockScreenStateMachineState
  // instance methods
  -[HDSPSleepLockScreenGreetingState dismissAlertForGoodMorning]
  -[HDSPSleepLockScreenGreetingState updateState]
  -[HDSPSleepLockScreenGreetingState willEnterWithPreviousState:context:]
  -[HDSPSleepLockScreenGreetingState sleepLockScreenState]
  -[HDSPSleepLockScreenGreetingState stateName]


HDSPWakeDetectionNotifiedState : HDSPWakeDetectionStateMachineState
  // instance methods
  -[HDSPWakeDetectionNotifiedState willEnterWithPreviousState:context:]
  -[HDSPWakeDetectionNotifiedState didEnterWithPreviousState:context:]
  -[HDSPWakeDetectionNotifiedState stateName]
  -[HDSPWakeDetectionNotifiedState determineNextState]


HDSPWakeUpResultsNotificationStateMachine : HKSPPersistentStateMachine /System/Library/PrivateFrameworks/ToneLibrary.framework/ToneLibrary <HDSPWakeUpResultsNotificationStateMachineDelegate, HDSPWakeUpResultsNotificationStateMachineEventHandler>
 @property  <HDSPWakeUpResultsNotificationStateMachineDelegate> *delegate
 @property  <HDSPWakeUpResultsNotificationStateMachineInfoProvider> *infoProvider
 @property  HDSPWakeUpResultsNotificationWaitingForWakeUpState *waitingForWakeUpState
 @property  HDSPWakeUpResultsNotificationDelayingForTrackingState *delayingForTrackingState
 @property  HDSPWakeUpResultsNotificationWaitingForRetryState *waitingForRetryState
 @property  HDSPWakeUpResultsNotificationQueryingState *queryingState
 @property  HDSPWakeUpResultsNotificationNeedsProtectedDataState *needsProtectedDataState
 @property  HDSPWakeUpResultsNotificationNotifiedState *notifiedState
 @property  HDSPWakeUpResultsNotificationDisabledState *disabledState
 @property  BOOL isWaitingForWakeUp
 @property  BOOL isDelayingForTracking
 @property  <NAScheduler> *callbackScheduler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HDSPWakeUpResultsNotificationStateMachine executeQuery]
  -[HDSPWakeUpResultsNotificationStateMachine unscheduleRetryAttempt]
  -[HDSPWakeUpResultsNotificationStateMachine scheduleTrackingDelay]
  -[HDSPWakeUpResultsNotificationStateMachine retryAttemptEventDue]
  -[HDSPWakeUpResultsNotificationStateMachine stopObservingProtectedHealthDataAvailability]
  -[HDSPWakeUpResultsNotificationStateMachine postResultsNotification]
  -[HDSPWakeUpResultsNotificationStateMachine waitingForRetryState]
  -[HDSPWakeUpResultsNotificationStateMachine disabledState]
  -[HDSPWakeUpResultsNotificationStateMachine queryDidFailWithError:]
  -[HDSPWakeUpResultsNotificationStateMachine delayingForTrackingState]
  -[HDSPWakeUpResultsNotificationStateMachine isDelayingForTracking]
  -[HDSPWakeUpResultsNotificationStateMachine .cxx_destruct]
  -[HDSPWakeUpResultsNotificationStateMachine unscheduleTrackingDelay]
  -[HDSPWakeUpResultsNotificationStateMachine wakeUpDidOccur]
  -[HDSPWakeUpResultsNotificationStateMachine initWithIdentifier:persistence:delegate:infoProvider:currentDateProvider:]
  -[HDSPWakeUpResultsNotificationStateMachine trackingDelayEventDue]
  -[HDSPWakeUpResultsNotificationStateMachine startObservingProtectedHealthDataAvailability]
  -[HDSPWakeUpResultsNotificationStateMachine didPostResultsNotification]
  -[HDSPWakeUpResultsNotificationStateMachine scheduleRetryAttempt]
  -[HDSPWakeUpResultsNotificationStateMachine queryingState]
  -[HDSPWakeUpResultsNotificationStateMachine stateMachineLog]
  -[HDSPWakeUpResultsNotificationStateMachine isWaitingForWakeUp]
  -[HDSPWakeUpResultsNotificationStateMachine queryDidComplete]
  -[HDSPWakeUpResultsNotificationStateMachine notifiedState]
  -[HDSPWakeUpResultsNotificationStateMachine protectedHealthDataDidBecomeAvailable]
  -[HDSPWakeUpResultsNotificationStateMachine needsProtectedDataState]
  -[HDSPWakeUpResultsNotificationStateMachine waitingForWakeUpState]


HDSPWatchOnWristWakeDetector : NSObject /usr/lib/libSystem.B.dylib <HDSPWatchOnWristObserver, HDSPWakeDetector, HDSPEnvironmentAware>
 @property  BOOL isDetecting
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <HDSPWakeDetectorDelegate> *wakeDetectorDelegate
 @property  HDSPEnvironment *environment

  // instance methods
  -[HDSPWatchOnWristWakeDetector environmentDidBecomeReady:]
  -[HDSPWatchOnWristWakeDetector .cxx_destruct]
  -[HDSPWatchOnWristWakeDetector initWithEnvironment:]
  -[HDSPWatchOnWristWakeDetector isDetecting]
  -[HDSPWatchOnWristWakeDetector environment]
  -[HDSPWatchOnWristWakeDetector startDetecting]
  -[HDSPWatchOnWristWakeDetector stopDetecting]
  -[HDSPWatchOnWristWakeDetector wakeDetectorDelegate]
  -[HDSPWatchOnWristWakeDetector setWakeDetectorDelegate:]
  -[HDSPWatchOnWristWakeDetector setIsDetecting:]
  -[HDSPWatchOnWristWakeDetector onWristMonitor]
  -[HDSPWatchOnWristWakeDetector detectedOnWristOnDate:]
  -[HDSPWatchOnWristWakeDetector detectedOffWristOnDate:]


HDSPWakeDetectionManager : NSObject /usr/lib/libSystem.B.dylib <HDSPWakeDetectorDelegate, HDSPWakeDetectionStateMachineDelegate, HDSPWakeDetectionStateMachineInfoProvider, HDSPDiagnosticsProvider, HDSPEnvironmentAware, HDSPSleepScheduleModelObserver, HDSPSleepEventHandler, HDSPSleepScheduleStateObserver, HDSPSleepEventProvider, HDSPTimeChangeObserver>
 @property  NSArray *wakeDetectors
 @property  {os_unfair_lock_s=I} wakeDetectionLock
 @property  HDSPWakeDetectionStateMachine *stateMachine
 @property  BOOL isDetecting
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <NAScheduler> *callbackScheduler
 @property  NSDate *currentDate
 @property  HKSPSleepScheduleOccurrence *relevantOccurrence
 @property  HKSPSleepScheduleModel *sleepScheduleModel
 @property  unsigned long sleepScheduleState
 @property  BOOL sleepModeIsOff
 @property  HDSPEnvironment *environment
 @property  NSString *providerIdentifier
 @property  <HDSPSleepEventDelegate> *sleepEventDelegate

  // instance methods
  -[HDSPWakeDetectionManager providerIdentifier]
  -[HDSPWakeDetectionManager currentDate]
  -[HDSPWakeDetectionManager eventIdentifiers]
  -[HDSPWakeDetectionManager setSleepEventDelegate:]
  -[HDSPWakeDetectionManager _currentState]
  -[HDSPWakeDetectionManager sleepEventDelegate]
  -[HDSPWakeDetectionManager upcomingEventsDueAfterDate:]
  -[HDSPWakeDetectionManager sleepScheduleModelManager:source:didUpdateSleepScheduleModel:]
  -[HDSPWakeDetectionManager environmentDidBecomeReady:]
  -[HDSPWakeDetectionManager significantTimeChangeDetected:]
  -[HDSPWakeDetectionManager sleepScheduleModel]
  -[HDSPWakeDetectionManager sleepScheduleState]
  -[HDSPWakeDetectionManager stateMachine]
  -[HDSPWakeDetectionManager sleepEventIsDue:]
  -[HDSPWakeDetectionManager sleepScheduleStateDidChange:previousState:reason:]
  -[HDSPWakeDetectionManager updateState]
  -[HDSPWakeDetectionManager .cxx_destruct]
  -[HDSPWakeDetectionManager initWithEnvironment:]
  -[HDSPWakeDetectionManager sleepFeaturesEnabled]
  -[HDSPWakeDetectionManager environmentWillBecomeReady:]
  -[HDSPWakeDetectionManager isDetecting]
  -[HDSPWakeDetectionManager diagnosticDescription]
  -[HDSPWakeDetectionManager diagnosticInfo]
  -[HDSPWakeDetectionManager environment]
  -[HDSPWakeDetectionManager _withLock:]
  -[HDSPWakeDetectionManager isWaiting]
  -[HDSPWakeDetectionManager detectionWindowAfterDate:]
  -[HDSPWakeDetectionManager wakeDetector:didDetectWakeUpEventOnDate:]
  -[HDSPWakeDetectionManager postWakeDetectionNotification]
  -[HDSPWakeDetectionManager standardProviders]
  -[HDSPWakeDetectionManager initWithEnvironment:wakeDetectorProviders:]
  -[HDSPWakeDetectionManager relevantOccurrence]
  -[HDSPWakeDetectionManager scheduleWakeDetection]
  -[HDSPWakeDetectionManager unscheduleWakeDetection]
  -[HDSPWakeDetectionManager startWakeDetection]
  -[HDSPWakeDetectionManager stopWakeDetection]
  -[HDSPWakeDetectionManager sleepModeIsOff]
  -[HDSPWakeDetectionManager wakeDetectors]
  -[HDSPWakeDetectionManager wakeDetectionLock]


HDSPGoodMorningAlertPresentingState : HDSPGoodMorningAlertStateMachineState
  // instance methods
  -[HDSPGoodMorningAlertPresentingState willEnterWithPreviousState:context:]
  -[HDSPGoodMorningAlertPresentingState didEnterWithPreviousState:context:]
  -[HDSPGoodMorningAlertPresentingState stateName]
  -[HDSPGoodMorningAlertPresentingState sleepScheduleStateChangedToBedtime]
  -[HDSPGoodMorningAlertPresentingState didExitWithNextState:context:]
  -[HDSPGoodMorningAlertPresentingState determineExpirationDateForCurrentDate:]
  -[HDSPGoodMorningAlertPresentingState determineNextState]


HDSPTimeAsleepTrackerInternalEndState : HDSPTimeAsleepTrackerStateMachineState
  // instance methods
  -[HDSPTimeAsleepTrackerInternalEndState willEnterWithPreviousState:context:]
  -[HDSPTimeAsleepTrackerInternalEndState stateName]
  -[HDSPTimeAsleepTrackerInternalEndState sleepSessionFinished]


HDSPWakeUpResultsNotificationManager : NSObject /usr/lib/libSystem.B.dylib <HDSPWakeUpResultsNotificationStateMachineInfoProvider, HDSPWakeUpResultsNotificationStateMachineDelegate, HDSPDiagnosticsProvider, HDSPEnvironmentAware, HDSPNotificationObserver, HDSPSleepEventHandler, HDSPSleepEventProvider, HDSPSleepScheduleModelObserver, HDSPSleepScheduleStateObserver, HDSPTimeChangeObserver>
 @property  {os_unfair_lock_s=I} lock
 @property  HDSPWakeUpResultsNotificationStateMachine *stateMachine
 @property  NAFuture *queryResultFuture
 @property  HKSHGoalProgressEngine *goalProgressEngine
 @property  <HDSPActivityScheduler> *retryAttemptScheduler
 @property  NSDate *currentDate
 @property  BOOL isWakeUpResultsNotificationEnabled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <NAScheduler> *callbackScheduler
 @property  HDSPEnvironment *environment
 @property  NSString *providerIdentifier
 @property  <HDSPSleepEventDelegate> *sleepEventDelegate

  // class methods
  +[HDSPWakeUpResultsNotificationManager retryCriteria]

  // instance methods
  -[HDSPWakeUpResultsNotificationManager providerIdentifier]
  -[HDSPWakeUpResultsNotificationManager currentDate]
  -[HDSPWakeUpResultsNotificationManager _sleepScheduleModel]
  -[HDSPWakeUpResultsNotificationManager eventIdentifiers]
  -[HDSPWakeUpResultsNotificationManager setSleepEventDelegate:]
  -[HDSPWakeUpResultsNotificationManager executeQuery]
  -[HDSPWakeUpResultsNotificationManager unscheduleRetryAttempt]
  -[HDSPWakeUpResultsNotificationManager scheduleTrackingDelay]
  -[HDSPWakeUpResultsNotificationManager _currentState]
  -[HDSPWakeUpResultsNotificationManager notificationListener:didReceiveNotificationWithName:]
  -[HDSPWakeUpResultsNotificationManager sleepEventDelegate]
  -[HDSPWakeUpResultsNotificationManager upcomingEventsDueAfterDate:]
  -[HDSPWakeUpResultsNotificationManager stopObservingProtectedHealthDataAvailability]
  -[HDSPWakeUpResultsNotificationManager sleepScheduleModelManager:source:didUpdateSleepScheduleModel:]
  -[HDSPWakeUpResultsNotificationManager environmentDidBecomeReady:]
  -[HDSPWakeUpResultsNotificationManager significantTimeChangeDetected:]
  -[HDSPWakeUpResultsNotificationManager postResultsNotification]
  -[HDSPWakeUpResultsNotificationManager stateMachine]
  -[HDSPWakeUpResultsNotificationManager initWithEnvironment:retryAttemptScheduler:]
  -[HDSPWakeUpResultsNotificationManager sleepEventIsDue:]
  -[HDSPWakeUpResultsNotificationManager sleepScheduleStateDidChange:previousState:reason:]
  -[HDSPWakeUpResultsNotificationManager .cxx_destruct]
  -[HDSPWakeUpResultsNotificationManager unscheduleTrackingDelay]
  -[HDSPWakeUpResultsNotificationManager isWakeUpResultsNotificationEnabled]
  -[HDSPWakeUpResultsNotificationManager initWithEnvironment:]
  -[HDSPWakeUpResultsNotificationManager lock]
  -[HDSPWakeUpResultsNotificationManager environmentWillBecomeReady:]
  -[HDSPWakeUpResultsNotificationManager performImmediateQueryForNotification]
  -[HDSPWakeUpResultsNotificationManager startObservingProtectedHealthDataAvailability]
  -[HDSPWakeUpResultsNotificationManager _isWaitingForWakeUp]
  -[HDSPWakeUpResultsNotificationManager goalProgressEngine]
  -[HDSPWakeUpResultsNotificationManager notificationAttemptWindowForWakeUpBeforeDate:]
  -[HDSPWakeUpResultsNotificationManager scheduleRetryAttempt]
  -[HDSPWakeUpResultsNotificationManager diagnosticDescription]
  -[HDSPWakeUpResultsNotificationManager diagnosticInfo]
  -[HDSPWakeUpResultsNotificationManager _lock_startQuery]
  -[HDSPWakeUpResultsNotificationManager environment]
  -[HDSPWakeUpResultsNotificationManager _isDelayingForTracking]
  -[HDSPWakeUpResultsNotificationManager _updateState]
  -[HDSPWakeUpResultsNotificationManager _withLock:]
  -[HDSPWakeUpResultsNotificationManager retryAttemptScheduler]
  -[HDSPWakeUpResultsNotificationManager _trackingDelayDuration]
  -[HDSPWakeUpResultsNotificationManager queryResultFuture]


HDSPSleepModeManualOffState : HDSPSleepModeStateMachineState
  // instance methods
  -[HDSPSleepModeManualOffState sleepScheduleStateChangedToWindDownFromState:]
  -[HDSPSleepModeManualOffState userDisengagedCurrentMode]
  -[HDSPSleepModeManualOffState updateState]
  -[HDSPSleepModeManualOffState willEnterWithPreviousState:context:]
  -[HDSPSleepModeManualOffState sleepScheduleStateChangedToBedtimeFromState:]
  -[HDSPSleepModeManualOffState stateName]
  -[HDSPSleepModeManualOffState isUserRequested]
  -[HDSPSleepModeManualOffState determineExpirationDateForCurrentDate:]


HDSPIDSServiceManager : NSObject /usr/lib/libSystem.B.dylib <IDSServiceDelegate, HDSPSleepActionObserver, HDSPSource, HDSPEnvironmentAware>
 @property  <HDSPIDSService> *service
 @property  <HKSPQueueBackedScheduler> *scheduler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *sourceIdentifier
 @property  BOOL dontNotify
 @property  BOOL dontSync
 @property  <HDSPSource> *targetSource
 @property  HDSPEnvironment *environment

  // instance methods
  -[HDSPIDSServiceManager bedtimeWasDelayed:]
  -[HDSPIDSServiceManager wakeNotificationWasConfirmed:]
  -[HDSPIDSServiceManager scheduler]
  -[HDSPIDSServiceManager goodMorningWasDismissed:]
  -[HDSPIDSServiceManager sendMessage:]
  -[HDSPIDSServiceManager _handleReceivedMessage:]
  -[HDSPIDSServiceManager bedtimeWasSkipped:]
  -[HDSPIDSServiceManager environmentDidBecomeReady:]
  -[HDSPIDSServiceManager windDownWasSkipped:]
  -[HDSPIDSServiceManager service:account:incomingMessage:fromID:context:]
  -[HDSPIDSServiceManager _handleSetSleepModeMessage:]
  -[HDSPIDSServiceManager sourceIdentifier]
  -[HDSPIDSServiceManager _sendSerializedMessage:originalMessage:]
  -[HDSPIDSServiceManager _handleDelayBedtimeMessage:]
  -[HDSPIDSServiceManager .cxx_destruct]
  -[HDSPIDSServiceManager initWithEnvironment:idsService:scheduler:]
  -[HDSPIDSServiceManager initWithEnvironment:]
  -[HDSPIDSServiceManager _handleDismissGoodMorningMessage:]
  -[HDSPIDSServiceManager service:account:identifier:didSendWithSuccess:error:context:]
  -[HDSPIDSServiceManager environmentWillBecomeReady:]
  -[HDSPIDSServiceManager _handleSkipBedtimeMessage:]
  -[HDSPIDSServiceManager service]
  -[HDSPIDSServiceManager _handleSkipWindDownMessage:]
  -[HDSPIDSServiceManager dontSync]
  -[HDSPIDSServiceManager _handleConfirmWakeUpMessage:]
  -[HDSPIDSServiceManager environment]
  -[HDSPIDSServiceManager sleepModeSet:source:]


HDSPWakeDetectionDetectingState : HDSPWakeDetectionStateMachineState
  // instance methods
  -[HDSPWakeDetectionDetectingState willEnterWithPreviousState:context:]
  -[HDSPWakeDetectionDetectingState didEnterWithPreviousState:context:]
  -[HDSPWakeDetectionDetectingState stateName]
  -[HDSPWakeDetectionDetectingState didExitWithNextState:context:]
  -[HDSPWakeDetectionDetectingState wakeupEventDetected:]


HDSPEventRecordMessage : NSObject /usr/lib/libSystem.B.dylib <BSDescriptionProviding, HDSPIDSMessage>
 @property  NSDate *date
 @property  NSString *dateDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *identifier
 @property  double timeout

  // instance methods
  -[HDSPEventRecordMessage copyWithZone:]
  -[HDSPEventRecordMessage timeout]
  -[HDSPEventRecordMessage dateDescription]
  -[HDSPEventRecordMessage .cxx_destruct]
  -[HDSPEventRecordMessage date]
  -[HDSPEventRecordMessage succinctDescriptionBuilder]
  -[HDSPEventRecordMessage encodeWithCoder:]
  -[HDSPEventRecordMessage identifier]
  -[HDSPEventRecordMessage succinctDescription]
  -[HDSPEventRecordMessage descriptionWithMultilinePrefix:]
  -[HDSPEventRecordMessage initWithCoder:]
  -[HDSPEventRecordMessage descriptionBuilderWithMultilinePrefix:]
  -[HDSPEventRecordMessage initWithDate:timeout:]


_HDSPPowerAssertion : NSObject /usr/lib/libSystem.B.dylib <BSDescriptionProviding, HDSPAssertion>
 @property  unsigned long signpost_id
 @property  {os_unfair_lock_s=I} assertionLock
 @property  unsigned int assertionID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *identifier

  // class methods
  +[_HDSPPowerAssertion assertionWithIdentifier:timeout:]
  +[_HDSPPowerAssertion assertionWithIdentifier:]

  // instance methods
  -[_HDSPPowerAssertion assertionLock]
  -[_HDSPPowerAssertion dealloc]
  -[_HDSPPowerAssertion releaseAssertion]
  -[_HDSPPowerAssertion .cxx_destruct]
  -[_HDSPPowerAssertion signpost_id]
  -[_HDSPPowerAssertion succinctDescriptionBuilder]
  -[_HDSPPowerAssertion identifier]
  -[_HDSPPowerAssertion succinctDescription]
  -[_HDSPPowerAssertion assertionID]
  -[_HDSPPowerAssertion initWithIdentifier:timeout:]
  -[_HDSPPowerAssertion _locked_release]
  -[_HDSPPowerAssertion descriptionWithMultilinePrefix:]
  -[_HDSPPowerAssertion _withLock:]
  -[_HDSPPowerAssertion descriptionBuilderWithMultilinePrefix:]


HDSPDoNotDisturbOffState : HDSPDoNotDisturbStateMachineState
  // instance methods
  -[HDSPDoNotDisturbOffState didEnterWithPreviousState:context:]
  -[HDSPDoNotDisturbOffState stateName]


HDSPUnitTestEnvironment : HDSPEnvironment
  // instance methods
  -[HDSPUnitTestEnvironment init]
  -[HDSPUnitTestEnvironment performBlock:withLock:]
  -[HDSPUnitTestEnvironment isDemoEnvironment]


HDSPSleepEventScheduler : NSObject /usr/lib/libSystem.B.dylib <HDSPEventScheduleDelegate, HDSPSleepScheduleModelObserver, HDSPTimeChangeObserver, HDSPSleepEventDelegate, HDSPDiagnosticsProvider, HDSPEnvironmentAware>
 @property  {os_unfair_lock_s=I} scheduleLock
 @property  HDSPSleepEventList *sleepEvents
 @property  HKSPObserverSet *eventHandlers
 @property  NSHashTable *eventProviders
 @property  NSHashTable *pendingEventProviders
 @property  <HDSPEventScheduler> *scheduler
 @property  <HKSPExecutor> *executor
 @property  NSDate *lastEventTriggerDate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  HDSPEnvironment *environment

  // instance methods
  -[HDSPSleepEventScheduler scheduledEventIsDue]
  -[HDSPSleepEventScheduler scheduler]
  -[HDSPSleepEventScheduler sleepScheduleModelManager:source:didUpdateSleepScheduleModel:]
  -[HDSPSleepEventScheduler environmentDidBecomeReady:]
  -[HDSPSleepEventScheduler _lock_scheduledEventIsDue]
  -[HDSPSleepEventScheduler significantTimeChangeDetected:]
  -[HDSPSleepEventScheduler eventProviderHasUpcomingEvents:]
  -[HDSPSleepEventScheduler addEventHandler:]
  -[HDSPSleepEventScheduler pendingEventProviders]
  -[HDSPSleepEventScheduler eventProviderCancelledEvents:]
  -[HDSPSleepEventScheduler _shouldNotifyHandler:forEvent:]
  -[HDSPSleepEventScheduler _lock_shouldScheduleEvents]
  -[HDSPSleepEventScheduler .cxx_destruct]
  -[HDSPSleepEventScheduler setLastEventTriggerDate:]
  -[HDSPSleepEventScheduler initWithEnvironment:]
  -[HDSPSleepEventScheduler environmentWillBecomeReady:]
  -[HDSPSleepEventScheduler addEventProvider:]
  -[HDSPSleepEventScheduler initWithEnvironment:schedulerProvider:executorProvider:]
  -[HDSPSleepEventScheduler lastEventTriggerDate]
  -[HDSPSleepEventScheduler _allSleepEvents]
  -[HDSPSleepEventScheduler _lock_rescheduleEvents]
  -[HDSPSleepEventScheduler _schedulePendingEvents]
  -[HDSPSleepEventScheduler diagnosticDescription]
  -[HDSPSleepEventScheduler diagnosticInfo]
  -[HDSPSleepEventScheduler eventProviders]
  -[HDSPSleepEventScheduler removeEventHandler:]
  -[HDSPSleepEventScheduler removeEventProvider:]
  -[HDSPSleepEventScheduler environment]
  -[HDSPSleepEventScheduler rescheduleEvents]
  -[HDSPSleepEventScheduler eventHandlers]
  -[HDSPSleepEventScheduler executor]
  -[HDSPSleepEventScheduler _withLock:]
  -[HDSPSleepEventScheduler scheduleLock]
  -[HDSPSleepEventScheduler sleepEvents]


HDSPSleepAlarmManager : NSObject /usr/lib/libSystem.B.dylib <HDSPSource, HDSPEnvironmentAware, HDSPSleepScheduleModelObserver>
 @property  HKSPObserverSet *sleepAlarmObservers
 @property  <HDSPSleepAlarmProvider> *sleepAlarmProvider
 @property  NSString *sourceIdentifier
 @property  BOOL dontNotify
 @property  BOOL dontSync
 @property  <HDSPSource> *targetSource
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  HDSPEnvironment *environment

  // instance methods
  -[HDSPSleepAlarmManager resetSleepAlarmSnoozeState]
  -[HDSPSleepAlarmManager sleepScheduleModelManager:source:didUpdateSleepScheduleModel:]
  -[HDSPSleepAlarmManager sleepAlarmObservers]
  -[HDSPSleepAlarmManager sourceIdentifier]
  -[HDSPSleepAlarmManager .cxx_destruct]
  -[HDSPSleepAlarmManager initWithEnvironment:]
  -[HDSPSleepAlarmManager environmentWillBecomeReady:]
  -[HDSPSleepAlarmManager currentSleepAlarms]
  -[HDSPSleepAlarmManager initWithEnvironment:sleepAlarmProvider:]
  -[HDSPSleepAlarmManager removeObserver:]
  -[HDSPSleepAlarmManager environment]
  -[HDSPSleepAlarmManager sleepAlarmProvider]
  -[HDSPSleepAlarmManager addObserver:]
  -[HDSPSleepAlarmManager currentSleepAlarmWithIdentifier:]


HDSPDoNotDisturbDuringBedtimeState : HDSPDoNotDisturbOnState
  // instance methods
  -[HDSPDoNotDisturbDuringBedtimeState didEnterWithPreviousState:context:]
  -[HDSPDoNotDisturbDuringBedtimeState stateName]


HDSPSleepScheduleStateCoordinatorDisabledState : HDSPSleepScheduleStateCoordinatorStateMachineState
  // instance methods
  -[HDSPSleepScheduleStateCoordinatorDisabledState updateState]
  -[HDSPSleepScheduleStateCoordinatorDisabledState scheduleState]
  -[HDSPSleepScheduleStateCoordinatorDisabledState stateName]


HDSPTimeChangeListener : NSObject /usr/lib/libSystem.B.dylib <HDSPNotificationObserver, HDSPEnvironmentAware, HDSPSource>
 @property  HKSPObserverSet *observers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  HDSPEnvironment *environment
 @property  NSString *sourceIdentifier
 @property  BOOL dontNotify
 @property  BOOL dontSync
 @property  <HDSPSource> *targetSource

  // instance methods
  -[HDSPTimeChangeListener notificationListener:didReceiveNotificationWithName:]
  -[HDSPTimeChangeListener environmentDidBecomeReady:]
  -[HDSPTimeChangeListener sourceIdentifier]
  -[HDSPTimeChangeListener .cxx_destruct]
  -[HDSPTimeChangeListener initWithEnvironment:]
  -[HDSPTimeChangeListener environmentWillBecomeReady:]
  -[HDSPTimeChangeListener observers]
  -[HDSPTimeChangeListener handleSignificantTimeChange]
  -[HDSPTimeChangeListener handleTimeZoneChange]
  -[HDSPTimeChangeListener removeObserver:]
  -[HDSPTimeChangeListener environment]
  -[HDSPTimeChangeListener addObserver:]


HDSPChargingReminderNotifiedState : HDSPChargingReminderStateMachineState
  // instance methods
  -[HDSPChargingReminderNotifiedState updateState]
  -[HDSPChargingReminderNotifiedState willEnterWithPreviousState:context:]
  -[HDSPChargingReminderNotifiedState didEnterWithPreviousState:context:]
  -[HDSPChargingReminderNotifiedState stateName]
  -[HDSPChargingReminderNotifiedState determineExpirationDateForCurrentDate:]


HDSPXPCAlarmScheduler : NSObject /usr/lib/libSystem.B.dylib <HDSPEventScheduler, HDSPNotificationObserver>
 @property  @? currentDateProvider
 @property  <HDSPEventScheduleDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HDSPXPCAlarmScheduler unschedule]
  -[HDSPXPCAlarmScheduler notificationListener:didReceiveNotificationWithName:]
  -[HDSPXPCAlarmScheduler currentDateProvider]
  -[HDSPXPCAlarmScheduler .cxx_destruct]
  -[HDSPXPCAlarmScheduler initWithCurrentDateProvider:]
  -[HDSPXPCAlarmScheduler setDelegate:]
  -[HDSPXPCAlarmScheduler scheduleEventForDate:options:]
  -[HDSPXPCAlarmScheduler delegate]


HDSPEnvironmentReadyState : HDSPEnvironmentState
  // instance methods
  -[HDSPEnvironmentReadyState didEnterWithPreviousState:context:]
  -[HDSPEnvironmentReadyState stateName]


HDSPDoNotDisturbDuringWindDownState : HDSPDoNotDisturbOnState
  // instance methods
  -[HDSPDoNotDisturbDuringWindDownState didEnterWithPreviousState:context:]
  -[HDSPDoNotDisturbDuringWindDownState stateName]


HDSPSleepEventList : NSObject /usr/lib/libSystem.B.dylib <BSDescriptionProviding>
 @property  NSMutableDictionary *eventsByProvider
 @property  NSArray *sortedEvents
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HDSPSleepEventList init]
  -[HDSPSleepEventList removeEvents:]
  -[HDSPSleepEventList .cxx_destruct]
  -[HDSPSleepEventList removeEventsForProvider:]
  -[HDSPSleepEventList succinctDescriptionBuilder]
  -[HDSPSleepEventList addEvents:provider:]
  -[HDSPSleepEventList nextEvent]
  -[HDSPSleepEventList succinctDescription]
  -[HDSPSleepEventList removeAllEvents]
  -[HDSPSleepEventList allEvents]
  -[HDSPSleepEventList overdueEventsForDate:]
  -[HDSPSleepEventList _sortEvents]
  -[HDSPSleepEventList eventsByProvider]
  -[HDSPSleepEventList descriptionWithMultilinePrefix:]
  -[HDSPSleepEventList sortedEvents]
  -[HDSPSleepEventList descriptionBuilderWithMultilinePrefix:]


HDSPSystemMonitor : NSObject /usr/lib/libSystem.B.dylib <HDSPSystemReadyDelegate, HDSPDiagnosticsProvider, HDSPEnvironmentAware>
 @property  <HDSPSystemReadyProvider> *systemReadyProvider
 @property  BOOL systemReady
 @property  {os_unfair_lock_s=I} systemMonitorLock
 @property  <HDSPSystemReadyDelegate> *delegate
 @property  HDSPDeviceUnlockMonitor *deviceUnlockMonitor
 @property  HDSPDevicePowerMonitor *devicePowerMonitor
 @property  HDSPApplicationWorkspaceMonitor *applicationWorkspaceMonitor
 @property  HDSPWatchOnWristMonitor *watchOnWristMonitor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  HDSPEnvironment *environment

  // class methods
  +[HDSPSystemMonitor _platformSpecificReadyProviderForEnvironment:]

  // instance methods
  -[HDSPSystemMonitor systemReady]
  -[HDSPSystemMonitor environmentDidBecomeReady:]
  -[HDSPSystemMonitor watchOnWristMonitor]
  -[HDSPSystemMonitor isSystemReady]
  -[HDSPSystemMonitor systemMonitorLock]
  -[HDSPSystemMonitor systemDidBecomeReady]
  -[HDSPSystemMonitor devicePowerMonitor]
  -[HDSPSystemMonitor .cxx_destruct]
  -[HDSPSystemMonitor deviceUnlockMonitor]
  -[HDSPSystemMonitor initWithEnvironment:]
  -[HDSPSystemMonitor environmentWillBecomeReady:]
  -[HDSPSystemMonitor applicationWorkspaceMonitor]
  -[HDSPSystemMonitor systemReadyProvider]
  -[HDSPSystemMonitor diagnosticDescription]
  -[HDSPSystemMonitor diagnosticInfo]
  -[HDSPSystemMonitor environment]
  -[HDSPSystemMonitor setDelegate:]
  -[HDSPSystemMonitor delegate]
  -[HDSPSystemMonitor _withLock:]
  -[HDSPSystemMonitor initWithEnvironment:watchOnWristMonitor:devicePowerMonitor:deviceUnlockMonitor:]
  -[HDSPSystemMonitor initWithEnvironment:watchOnWristMonitor:devicePowerMonitor:deviceUnlockMonitor:systemReadyProvider:applicationWorkspaceMonitor:]


HDSPSleepScheduleStateChangeMessage : HDSPSleepMessage
  // instance methods
  -[HDSPSleepScheduleStateChangeMessage messageType]


HDSPDoNotDisturbListener : NSObject /usr/lib/libSystem.B.dylib
 @property  HDSPContextStoreManager *contextStoreManager
 @property  <HDSPDoNotDisturbListenerDelegate> *delegate

  // instance methods
  -[HDSPDoNotDisturbListener contextStoreManager]
  -[HDSPDoNotDisturbListener startListening]
  -[HDSPDoNotDisturbListener .cxx_destruct]
  -[HDSPDoNotDisturbListener _processCoreDuetCallbackWithNewDNDState:oldDNDState:]
  -[HDSPDoNotDisturbListener setDelegate:]
  -[HDSPDoNotDisturbListener delegate]
  -[HDSPDoNotDisturbListener initWithContextStoreManager:]


HDSPAssertionManager : NSObject /usr/lib/libSystem.B.dylib <BSDescriptionProviding, HDSPDiagnosticsProvider>
 @property  {os_unfair_lock_s=I} assertionsLock
 @property  NSMutableDictionary *assertions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HDSPAssertionManager assertionClassForType:]

  // instance methods
  -[HDSPAssertionManager activeAssertionIdentifiersOfType:]
  -[HDSPAssertionManager takeAssertionWithIdentifier:type:timeout:]
  -[HDSPAssertionManager takeAssertionWithIdentifier:type:]
  -[HDSPAssertionManager init]
  -[HDSPAssertionManager takeIndefiniteAssertionWithIdentifier:type:]
  -[HDSPAssertionManager .cxx_destruct]
  -[HDSPAssertionManager succinctDescriptionBuilder]
  -[HDSPAssertionManager succinctDescription]
  -[HDSPAssertionManager _assertionsOfType:]
  -[HDSPAssertionManager diagnosticDescription]
  -[HDSPAssertionManager diagnosticInfo]
  -[HDSPAssertionManager setAssertions:]
  -[HDSPAssertionManager releaseAssertionWithIdentifier:]
  -[HDSPAssertionManager assertionsLock]
  -[HDSPAssertionManager descriptionWithMultilinePrefix:]
  -[HDSPAssertionManager _withLock:]
  -[HDSPAssertionManager assertions]
  -[HDSPAssertionManager takeAssertion:]
  -[HDSPAssertionManager descriptionBuilderWithMultilinePrefix:]


_HDSPOSTransaction : NSObject /usr/lib/libSystem.B.dylib <BSDescriptionProviding, HDSPAssertion>
 @property  unsigned long signpost_id
 @property  NSObject<OS_os_transaction> *transaction
 @property  {os_unfair_lock_s=I} transactionLock
 @property  NSObject<OS_dispatch_source> *timer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *identifier

  // class methods
  +[_HDSPOSTransaction assertionWithIdentifier:timeout:]
  +[_HDSPOSTransaction assertionWithIdentifier:]

  // instance methods
  -[_HDSPOSTransaction timer]
  -[_HDSPOSTransaction transaction]
  -[_HDSPOSTransaction dealloc]
  -[_HDSPOSTransaction releaseAssertion]
  -[_HDSPOSTransaction .cxx_destruct]
  -[_HDSPOSTransaction signpost_id]
  -[_HDSPOSTransaction succinctDescriptionBuilder]
  -[_HDSPOSTransaction identifier]
  -[_HDSPOSTransaction succinctDescription]
  -[_HDSPOSTransaction initWithIdentifier:timeout:]
  -[_HDSPOSTransaction _locked_release]
  -[_HDSPOSTransaction descriptionWithMultilinePrefix:]
  -[_HDSPOSTransaction _withLock:]
  -[_HDSPOSTransaction descriptionBuilderWithMultilinePrefix:]
  -[_HDSPOSTransaction transactionLock]


HDSPSleepScheduleStateCoordinator : NSObject /usr/lib/libSystem.B.dylib <HDSPSleepScheduleStateCoordinatorStateMachineDelegate, HDSPSleepScheduleStateCoordinatorStateMachineInfoProvider, HDSPEnvironmentAware, HDSPSleepEventHandler, HDSPSleepScheduleModelObserver, HDSPDiagnosticsProvider, HDSPSleepActionObserver, HDSPSleepAlarmObserver, HDSPTimeChangeObserver>
 @property  {os_unfair_lock_s=I} stateMachineLock
 @property  HDSPSleepScheduleStateCoordinatorStateMachine *stateMachine
 @property  HKSPObserverSet *observers
 @property  <NAScheduler> *callbackScheduler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL isAppleWatch
 @property  BOOL sleepFeaturesEnabled
 @property  HKSPSleepScheduleModel *sleepScheduleModel
 @property  HKSPSleepScheduleOccurrence *previousOccurrence
 @property  NSDate *currentDate
 @property  HDSPEnvironment *environment

  // instance methods
  -[HDSPSleepScheduleStateCoordinator isAppleWatch]
  -[HDSPSleepScheduleStateCoordinator currentDate]
  -[HDSPSleepScheduleStateCoordinator eventIdentifiers]
  -[HDSPSleepScheduleStateCoordinator bedtimeWasDelayed:]
  -[HDSPSleepScheduleStateCoordinator wakeNotificationWasConfirmed:]
  -[HDSPSleepScheduleStateCoordinator sleepScheduleModelManager:source:didUpdateSleepScheduleModel:]
  -[HDSPSleepScheduleStateCoordinator bedtimeWasSkipped:]
  -[HDSPSleepScheduleStateCoordinator environmentDidBecomeReady:]
  -[HDSPSleepScheduleStateCoordinator significantTimeChangeDetected:]
  -[HDSPSleepScheduleStateCoordinator sleepScheduleModel]
  -[HDSPSleepScheduleStateCoordinator currentState]
  -[HDSPSleepScheduleStateCoordinator windDownWasSkipped:]
  -[HDSPSleepScheduleStateCoordinator stateMachine]
  -[HDSPSleepScheduleStateCoordinator sleepEventIsDue:]
  -[HDSPSleepScheduleStateCoordinator stateMachineLock]
  -[HDSPSleepScheduleStateCoordinator sleepScheduleStateDidChange:previousState:reason:]
  -[HDSPSleepScheduleStateCoordinator previousOccurrence]
  -[HDSPSleepScheduleStateCoordinator .cxx_destruct]
  -[HDSPSleepScheduleStateCoordinator snoozeFireDateShouldBeReset]
  -[HDSPSleepScheduleStateCoordinator initWithEnvironment:]
  -[HDSPSleepScheduleStateCoordinator sleepFeaturesEnabled]
  -[HDSPSleepScheduleStateCoordinator environmentWillBecomeReady:]
  -[HDSPSleepScheduleStateCoordinator observers]
  -[HDSPSleepScheduleStateCoordinator _updateSleepScheduleState]
  -[HDSPSleepScheduleStateCoordinator diagnosticDescription]
  -[HDSPSleepScheduleStateCoordinator wakeUpAlarmWasDismissed:]
  -[HDSPSleepScheduleStateCoordinator diagnosticInfo]
  -[HDSPSleepScheduleStateCoordinator removeObserver:]
  -[HDSPSleepScheduleStateCoordinator environment]
  -[HDSPSleepScheduleStateCoordinator timeZoneChangeDetected:]
  -[HDSPSleepScheduleStateCoordinator currentSleepScheduleState]
  -[HDSPSleepScheduleStateCoordinator addObserver:]
  -[HDSPSleepScheduleStateCoordinator _withLock:]


HDSPGCDTimerScheduler : NSObject /usr/lib/libSystem.B.dylib <HDSPEventScheduler>
 @property  @? currentDateProvider
 @property  <HDSPEventScheduleDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HDSPGCDTimerScheduler unschedule]
  -[HDSPGCDTimerScheduler currentDateProvider]
  -[HDSPGCDTimerScheduler .cxx_destruct]
  -[HDSPGCDTimerScheduler initWithCurrentDateProvider:]
  -[HDSPGCDTimerScheduler setDelegate:]
  -[HDSPGCDTimerScheduler scheduleEventForDate:options:]
  -[HDSPGCDTimerScheduler delegate]


HDSPSetSleepModeIDSMessage : NSObject /usr/lib/libSystem.B.dylib <BSDescriptionProviding, HDSPIDSMessage>
 @property  BOOL sleepModeOn
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *identifier
 @property  double timeout

  // instance methods
  -[HDSPSetSleepModeIDSMessage copyWithZone:]
  -[HDSPSetSleepModeIDSMessage timeout]
  -[HDSPSetSleepModeIDSMessage succinctDescriptionBuilder]
  -[HDSPSetSleepModeIDSMessage encodeWithCoder:]
  -[HDSPSetSleepModeIDSMessage identifier]
  -[HDSPSetSleepModeIDSMessage succinctDescription]
  -[HDSPSetSleepModeIDSMessage sleepModeOn]
  -[HDSPSetSleepModeIDSMessage descriptionWithMultilinePrefix:]
  -[HDSPSetSleepModeIDSMessage initWithCoder:]
  -[HDSPSetSleepModeIDSMessage descriptionBuilderWithMultilinePrefix:]
  -[HDSPSetSleepModeIDSMessage initWithSleepModeOn:timeout:]


HDSPEnvironmentMigrationState : HDSPEnvironmentState
  // instance methods
  -[HDSPEnvironmentMigrationState dataMigrationDidComplete]
  -[HDSPEnvironmentMigrationState didEnterWithPreviousState:context:]
  -[HDSPEnvironmentMigrationState stateName]


HDSPSleepLockScreenOffState : HDSPSleepLockScreenStateMachineState
  // instance methods
  -[HDSPSleepLockScreenOffState sleepLockScreenState]
  -[HDSPSleepLockScreenOffState stateName]


HDSPWakeUpResultsNotificationBuilder : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[HDSPWakeUpResultsNotificationBuilder .cxx_destruct]
  -[HDSPWakeUpResultsNotificationBuilder buildNotification]
  -[HDSPWakeUpResultsNotificationBuilder initWithDaySummaries:morningIndexRange:]
  -[HDSPWakeUpResultsNotificationBuilder _didMeetSleepDurationGoalLastNight]
  -[HDSPWakeUpResultsNotificationBuilder _sleepDurationGoalAchievedTwoWeekNotification]
  -[HDSPWakeUpResultsNotificationBuilder _sleepDurationGoalAchievedShortWeekNotification]
  -[HDSPWakeUpResultsNotificationBuilder _sleepDurationGoalAchievedLastNightNotification]
  -[HDSPWakeUpResultsNotificationBuilder _randomVariantForMaximum:]


HDSPWakeUpResultsNotification : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *identifier
 @property  NSString *category
 @property  long long endMorningIndex
 @property  NSDictionary *userInfo

  // instance methods
  -[HDSPWakeUpResultsNotification category]
  -[HDSPWakeUpResultsNotification .cxx_destruct]
  -[HDSPWakeUpResultsNotification identifier]
  -[HDSPWakeUpResultsNotification userInfo]
  -[HDSPWakeUpResultsNotification initWithCategory:endMorningIndex:userInfo:]
  -[HDSPWakeUpResultsNotification endMorningIndex]


HDSPDisabledEnvironment : HDSPEnvironment
  // instance methods
  -[HDSPDisabledEnvironment prepare]
  -[HDSPDisabledEnvironment isDisabled]
  -[HDSPDisabledEnvironment init]


HDSPSleepSettingsChangeMessage : HDSPSleepMessage
  // instance methods
  -[HDSPSleepSettingsChangeMessage messageType]


HDSPGoodMorningAlertManager : NSObject /usr/lib/libSystem.B.dylib <HDSPGoodMorningAlertStateMachineInfoProvider, HDSPGoodMorningAlertStateMachineDelegate, HDSPDiagnosticsProvider, HDSPEnvironmentAware, HDSPSleepScheduleModelObserver, HDSPSleepScheduleStateObserver, HDSPTimeChangeObserver, HDSPSleepActionObserver>
 @property  {os_unfair_lock_s=I} goodMorningAlertLock
 @property  HDSPGoodMorningAlertStateMachine *stateMachine
 @property  HKSPObserverSet *goodMorningAlertObservers
 @property  NSDate *currentDate
 @property  BOOL goodMorningAlertEnabled
 @property  HKSPSleepScheduleModel *sleepScheduleModel
 @property  unsigned long sleepScheduleState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <NAScheduler> *callbackScheduler
 @property  HDSPEnvironment *environment

  // instance methods
  -[HDSPGoodMorningAlertManager currentDate]
  -[HDSPGoodMorningAlertManager dismissAlertForGoodMorning]
  -[HDSPGoodMorningAlertManager presentAlertForGoodMorning]
  -[HDSPGoodMorningAlertManager _currentState]
  -[HDSPGoodMorningAlertManager goodMorningWasDismissed:]
  -[HDSPGoodMorningAlertManager sleepScheduleModelManager:source:didUpdateSleepScheduleModel:]
  -[HDSPGoodMorningAlertManager environmentDidBecomeReady:]
  -[HDSPGoodMorningAlertManager significantTimeChangeDetected:]
  -[HDSPGoodMorningAlertManager sleepScheduleModel]
  -[HDSPGoodMorningAlertManager sleepScheduleState]
  -[HDSPGoodMorningAlertManager stateMachine]
  -[HDSPGoodMorningAlertManager sleepScheduleStateDidChange:previousState:reason:]
  -[HDSPGoodMorningAlertManager updateState]
  -[HDSPGoodMorningAlertManager .cxx_destruct]
  -[HDSPGoodMorningAlertManager goodMorningAlertEnabled]
  -[HDSPGoodMorningAlertManager goodMorningAlertLock]
  -[HDSPGoodMorningAlertManager initWithEnvironment:]
  -[HDSPGoodMorningAlertManager environmentWillBecomeReady:]
  -[HDSPGoodMorningAlertManager goodMorningAlertObservers]
  -[HDSPGoodMorningAlertManager diagnosticDescription]
  -[HDSPGoodMorningAlertManager diagnosticInfo]
  -[HDSPGoodMorningAlertManager removeObserver:]
  -[HDSPGoodMorningAlertManager environment]
  -[HDSPGoodMorningAlertManager addObserver:]
  -[HDSPGoodMorningAlertManager _withLock:]


HDSPWakeDetectionWaitingState : HDSPWakeDetectionStateMachineState
  // instance methods
  -[HDSPWakeDetectionWaitingState willEnterWithPreviousState:context:]
  -[HDSPWakeDetectionWaitingState didEnterWithPreviousState:context:]
  -[HDSPWakeDetectionWaitingState stateName]
  -[HDSPWakeDetectionWaitingState didExitWithNextState:context:]
  -[HDSPWakeDetectionWaitingState wakeDetectionEventDue]


HDSPSleepScheduleStateCoordinatorWindDownState : HDSPSleepScheduleStateCoordinatorStateMachineState
  // instance methods
  -[HDSPSleepScheduleStateCoordinatorWindDownState bedtimeReached]
  -[HDSPSleepScheduleStateCoordinatorWindDownState windDownSkipped]
  -[HDSPSleepScheduleStateCoordinatorWindDownState scheduleState]
  -[HDSPSleepScheduleStateCoordinatorWindDownState stateName]
  -[HDSPSleepScheduleStateCoordinatorWindDownState determineExpirationDateForCurrentDate:]


HDSPSleepNotificationManager : NSObject /usr/lib/libSystem.B.dylib <HDSPGoodMorningAlertObserver, HDSPEnvironmentAware, HDSPSleepEventHandler, HDSPSleepEventProvider, HDSPSleepScheduleModelObserver, HDSPSleepActionObserver, HDSPSleepNotificationPublisher, HDSPSleepScheduleStateObserver, HDSPTimeChangeObserver>
 @property  NSArray *notificationPublishers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  HDSPEnvironment *environment
 @property  NSString *providerIdentifier
 @property  <HDSPSleepEventDelegate> *sleepEventDelegate

  // instance methods
  -[HDSPSleepNotificationManager providerIdentifier]
  -[HDSPSleepNotificationManager _sleepScheduleModel]
  -[HDSPSleepNotificationManager eventIdentifiers]
  -[HDSPSleepNotificationManager bedtimeWasDelayed:]
  -[HDSPSleepNotificationManager setSleepEventDelegate:]
  -[HDSPSleepNotificationManager dismissAlertForGoodMorning]
  -[HDSPSleepNotificationManager presentAlertForGoodMorning]
  -[HDSPSleepNotificationManager wakeNotificationWasConfirmed:]
  -[HDSPSleepNotificationManager sleepEventDelegate]
  -[HDSPSleepNotificationManager _tearDownChargingReminder]
  -[HDSPSleepNotificationManager upcomingEventsDueAfterDate:]
  -[HDSPSleepNotificationManager goodMorningWasDismissed:]
  -[HDSPSleepNotificationManager tearDownNotificationForEventIdentifier:]
  -[HDSPSleepNotificationManager environmentDidBecomeReady:]
  -[HDSPSleepNotificationManager _tearDownMorningNotification]
  -[HDSPSleepNotificationManager significantTimeChangeDetected:]
  -[HDSPSleepNotificationManager windDownWasSkipped:]
  -[HDSPSleepNotificationManager publishNotificationForEvent:userInfo:]
  -[HDSPSleepNotificationManager sleepEventIsDue:]
  -[HDSPSleepNotificationManager sleepScheduleModelManager:source:didUpdateSleepSchedule:]
  -[HDSPSleepNotificationManager sleepScheduleStateDidChange:previousState:reason:]
  -[HDSPSleepNotificationManager _windDownNotificationEventAfterDate:]
  -[HDSPSleepNotificationManager .cxx_destruct]
  -[HDSPSleepNotificationManager bedtimeReminderWasDismissed]
  -[HDSPSleepNotificationManager initWithEnvironment:]
  -[HDSPSleepNotificationManager notificationPublishers]
  -[HDSPSleepNotificationManager environmentWillBecomeReady:]
  -[HDSPSleepNotificationManager _tearDownBedtimeReminder]
  -[HDSPSleepNotificationManager _bedtimeNotificationEventAfterDate:]
  -[HDSPSleepNotificationManager _bedtimeOrWindDownNotificationsEnabled]
  -[HDSPSleepNotificationManager tearDownNotifications]
  -[HDSPSleepNotificationManager _tearDownWakeDetectionNotification]
  -[HDSPSleepNotificationManager initWithEnvironment:notificationPublishers:]
  -[HDSPSleepNotificationManager _rescheduleEvents]
  -[HDSPSleepNotificationManager _tearDownWindDownReminder]
  -[HDSPSleepNotificationManager bedtimeReminderWasConfirmed]
  -[HDSPSleepNotificationManager environment]
  -[HDSPSleepNotificationManager _bedtimeOrWindDownNotificationEventIsDue:]
  -[HDSPSleepNotificationManager wakeNotificationWasDismissed]


HDSPSleepScheduleStateCoordinatorSkippedBedtimeState : HDSPSleepScheduleStateCoordinatorStateMachineState
  // instance methods
  -[HDSPSleepScheduleStateCoordinatorSkippedBedtimeState wakeUpConfirmed]
  -[HDSPSleepScheduleStateCoordinatorSkippedBedtimeState scheduleState]
  -[HDSPSleepScheduleStateCoordinatorSkippedBedtimeState stateName]
  -[HDSPSleepScheduleStateCoordinatorSkippedBedtimeState wakeTimeReached]
  -[HDSPSleepScheduleStateCoordinatorSkippedBedtimeState determineExpirationDateForCurrentDate:]


HDSPSleepScheduleChangeMessage : HDSPSleepMessage
  // instance methods
  -[HDSPSleepScheduleChangeMessage messageType]


HDSPSleepModeWindDownState : HDSPSleepModeStateMachineState
  // instance methods
  -[HDSPSleepModeWindDownState sleepMode]
  -[HDSPSleepModeWindDownState userDisengagedCurrentMode]
  -[HDSPSleepModeWindDownState stateName]


HDSPWakeUpResultsNotificationStateMachineState : HKSPPersistentStateMachineState /System/Library/PrivateFrameworks/ToneLibrary.framework/ToneLibrary <HDSPWakeUpResultsNotificationStateMachineEventHandler>
 @property  HDSPWakeUpResultsNotificationStateMachine *stateMachine
 @property  <HDSPWakeUpResultsNotificationStateMachineInfoProvider> *infoProvider
 @property  BOOL notificationEnabled
 @property  BOOL stateExpired
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HDSPWakeUpResultsNotificationStateMachineState retryAttemptEventDue]
  -[HDSPWakeUpResultsNotificationStateMachineState infoProvider]
  -[HDSPWakeUpResultsNotificationStateMachineState isNotificationEnabled]
  -[HDSPWakeUpResultsNotificationStateMachineState queryDidFailWithError:]
  -[HDSPWakeUpResultsNotificationStateMachineState updateState]
  -[HDSPWakeUpResultsNotificationStateMachineState wakeUpDidOccur]
  -[HDSPWakeUpResultsNotificationStateMachineState trackingDelayEventDue]
  -[HDSPWakeUpResultsNotificationStateMachineState didPostResultsNotification]
  -[HDSPWakeUpResultsNotificationStateMachineState queryDidComplete]
  -[HDSPWakeUpResultsNotificationStateMachineState protectedHealthDataDidBecomeAvailable]
  -[HDSPWakeUpResultsNotificationStateMachineState isStateExpired]


HDSPSkipBedtimeIDSMessage : HDSPEventRecordMessage
 @property  NSDate *bedtimeSkippedDate

  // instance methods
  -[HDSPSkipBedtimeIDSMessage bedtimeSkippedDate]
  -[HDSPSkipBedtimeIDSMessage dateDescription]
  -[HDSPSkipBedtimeIDSMessage initWithBedtimeSkippedDate:timeout:]


HDSPSleepActionManager : NSObject /usr/lib/libSystem.B.dylib <HDSPSleepAlarmObserver, HDSPSource, HDSPEnvironmentAware>
 @property  HKSPObserverSet *observers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *sourceIdentifier
 @property  BOOL dontNotify
 @property  BOOL dontSync
 @property  <HDSPSource> *targetSource
 @property  HDSPEnvironment *environment

  // class methods
  +[HDSPSleepActionManager _isValidSnoozeDate:]
  +[HDSPSleepActionManager _latestDateInAlarms:dateBlock:]

  // instance methods
  -[HDSPSleepActionManager skipBedtimeOnDate:source:]
  -[HDSPSleepActionManager sleepAlarmWasModifiedBySource:]
  -[HDSPSleepActionManager _updateSleepEventRecord:delayedNotifyBlock:]
  -[HDSPSleepActionManager sleepAlarmsModified:source:]
  -[HDSPSleepActionManager confirmAwakeNotificationOnDate:untilDate:source:]
  -[HDSPSleepActionManager dismissGoodMorning:]
  -[HDSPSleepActionManager sourceIdentifier]
  -[HDSPSleepActionManager skipWindDown:]
  -[HDSPSleepActionManager .cxx_destruct]
  -[HDSPSleepActionManager dismissGoodMorningOnDate:source:]
  -[HDSPSleepActionManager initWithEnvironment:]
  -[HDSPSleepActionManager environmentWillBecomeReady:]
  -[HDSPSleepActionManager setSleepMode:source:]
  -[HDSPSleepActionManager observers]
  -[HDSPSleepActionManager _notifyObserversForBedtimeSkip:]
  -[HDSPSleepActionManager skipBedtime:]
  -[HDSPSleepActionManager skipWindDownOnDate:source:]
  -[HDSPSleepActionManager sleepAlarmSnoozedUntilDate:source:]
  -[HDSPSleepActionManager sleepAlarmDidDismiss:source:]
  -[HDSPSleepActionManager _notifyObserversForBedtimeDelay:]
  -[HDSPSleepActionManager _notifyObserversForWindDownSkip:]
  -[HDSPSleepActionManager _notifyObserversForWakeUpAlarmDismissed:]
  -[HDSPSleepActionManager dontNotify]
  -[HDSPSleepActionManager delayBedtimeForTimeInterval:source:]
  -[HDSPSleepActionManager confirmAwakeNotification:]
  -[HDSPSleepActionManager delayBedtimeUntilDate:source:]
  -[HDSPSleepActionManager sleepAlarmDidSnooze:source:]
  -[HDSPSleepActionManager removeObserver:]
  -[HDSPSleepActionManager environment]
  -[HDSPSleepActionManager _notifyObserversForWakeUpConfirmed:]
  -[HDSPSleepActionManager addObserver:]
  -[HDSPSleepActionManager sleepAlarmDismissedOnDate:source:]
  -[HDSPSleepActionManager _notifyObserversForWakeUpAlarmSnoozed:]
  -[HDSPSleepActionManager _notifyObserversForGoodMorningDismissed:]


HDSPWakeDetectionStateMachine : HKSPPersistentStateMachine /System/Library/PrivateFrameworks/ToneLibrary.framework/ToneLibrary <HDSPWakeDetectionStateMachineDelegate, HDSPWakeDetectionStateMachineInfoProvider, HDSPWakeDetectionStateMachineEventHandler>
 @property  <HDSPWakeDetectionStateMachineDelegate> *delegate
 @property  <HDSPWakeDetectionStateMachineInfoProvider> *infoProvider
 @property  HDSPWakeDetectionDisabledState *disabledState
 @property  HDSPWakeDetectionWaitingState *waitingState
 @property  HDSPWakeDetectionDetectingState *detectingState
 @property  HDSPWakeDetectionNotifiedState *notifiedState
 @property  <NAScheduler> *callbackScheduler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSDate *currentDate
 @property  HKSPSleepScheduleOccurrence *relevantOccurrence
 @property  HKSPSleepScheduleModel *sleepScheduleModel
 @property  unsigned long sleepScheduleState
 @property  BOOL sleepModeIsOff

  // instance methods
  -[HDSPWakeDetectionStateMachine currentDate]
  -[HDSPWakeDetectionStateMachine sleepScheduleModel]
  -[HDSPWakeDetectionStateMachine sleepScheduleState]
  -[HDSPWakeDetectionStateMachine disabledState]
  -[HDSPWakeDetectionStateMachine .cxx_destruct]
  -[HDSPWakeDetectionStateMachine initWithIdentifier:persistence:delegate:infoProvider:currentDateProvider:]
  -[HDSPWakeDetectionStateMachine stateMachineLog]
  -[HDSPWakeDetectionStateMachine notifiedState]
  -[HDSPWakeDetectionStateMachine waitingState]
  -[HDSPWakeDetectionStateMachine detectingState]
  -[HDSPWakeDetectionStateMachine detectionWindowAfterDate:]
  -[HDSPWakeDetectionStateMachine wakeDetectionEventDue]
  -[HDSPWakeDetectionStateMachine wakeupEventDetected:]
  -[HDSPWakeDetectionStateMachine postWakeDetectionNotification]
  -[HDSPWakeDetectionStateMachine relevantOccurrence]
  -[HDSPWakeDetectionStateMachine scheduleWakeDetection]
  -[HDSPWakeDetectionStateMachine unscheduleWakeDetection]
  -[HDSPWakeDetectionStateMachine startWakeDetection]
  -[HDSPWakeDetectionStateMachine stopWakeDetection]
  -[HDSPWakeDetectionStateMachine sleepModeIsOff]


HDSPEnvironmentState : HKSPStateMachineState /System/Library/PrivateFrameworks/ToneLibrary.framework/ToneLibrary <HDSPEnvironmentStateMachineEventHandler>
 @property  HDSPEnvironmentStateMachine *stateMachine
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HDSPEnvironmentState systemDidBecomeReady]
  -[HDSPEnvironmentState dataMigrationDidComplete]


HDSPDevicePowerMonitor : NSObject /usr/lib/libSystem.B.dylib <HDSPNotificationObserver>
 @property  HKSPObserverSet *observers
 @property  NSNumber *isChargingOverride
 @property  NSNumber *batteryLevelOverride
 @property  BOOL isCharging
 @property  float batteryLevel
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HDSPDevicePowerMonitor initWithCallbackScheduler:]
  -[HDSPDevicePowerMonitor notificationListener:didReceiveNotificationWithName:]
  -[HDSPDevicePowerMonitor init]
  -[HDSPDevicePowerMonitor batteryLevel]
  -[HDSPDevicePowerMonitor .cxx_destruct]
  -[HDSPDevicePowerMonitor observers]
  -[HDSPDevicePowerMonitor removeObserver:]
  -[HDSPDevicePowerMonitor isCharging]
  -[HDSPDevicePowerMonitor addObserver:]
  -[HDSPDevicePowerMonitor isChargingOverride]
  -[HDSPDevicePowerMonitor setIsChargingOverride:]
  -[HDSPDevicePowerMonitor batteryLevelOverride]
  -[HDSPDevicePowerMonitor setBatteryLevelOverride:]


HDSPSleepLockScreenStateMachine : HKSPPersistentStateMachine /System/Library/PrivateFrameworks/ToneLibrary.framework/ToneLibrary <HDSPSleepLockScreenStateMachineDelegate, HDSPSleepLockScreenStateMachineInfoProvider, HDSPSleepLockScreenStateMachineEventHandler>
 @property  <HDSPSleepLockScreenStateMachineDelegate> *delegate
 @property  <HDSPSleepLockScreenStateMachineInfoProvider> *infoProvider
 @property  HDSPSleepLockScreenOffState *offState
 @property  HDSPSleepLockScreenWindDownState *windDownState
 @property  HDSPSleepLockScreenBedtimeState *bedtimeState
 @property  HDSPSleepLockScreenGreetingState *greetingState
 @property  <NAScheduler> *callbackScheduler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSDate *currentDate
 @property  HKSPSleepScheduleModel *sleepScheduleModel
 @property  long long sleepMode

  // instance methods
  -[HDSPSleepLockScreenStateMachine currentDate]
  -[HDSPSleepLockScreenStateMachine sleepMode]
  -[HDSPSleepLockScreenStateMachine dismissAlertForGoodMorning]
  -[HDSPSleepLockScreenStateMachine presentAlertForGoodMorning]
  -[HDSPSleepLockScreenStateMachine sleepScheduleModel]
  -[HDSPSleepLockScreenStateMachine windDownState]
  -[HDSPSleepLockScreenStateMachine environmentDidBecomeReady]
  -[HDSPSleepLockScreenStateMachine .cxx_destruct]
  -[HDSPSleepLockScreenStateMachine initWithIdentifier:persistence:delegate:infoProvider:currentDateProvider:]
  -[HDSPSleepLockScreenStateMachine sleepLockScreenStateDidChange:previousState:]
  -[HDSPSleepLockScreenStateMachine sleepModeDidChange:reason:]
  -[HDSPSleepLockScreenStateMachine greetingState]
  -[HDSPSleepLockScreenStateMachine offState]
  -[HDSPSleepLockScreenStateMachine stateMachineLog]
  -[HDSPSleepLockScreenStateMachine bedtimeState]


HDSPXPCActivityScheduler : NSObject /usr/lib/libSystem.B.dylib <HDSPActivityScheduler>
 @property  NSString *eventName
 @property  <NAScheduler> *callbackScheduler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HDSPXPCActivityScheduler unschedule]
  -[HDSPXPCActivityScheduler eventName]
  -[HDSPXPCActivityScheduler callbackScheduler]
  -[HDSPXPCActivityScheduler .cxx_destruct]
  -[HDSPXPCActivityScheduler initWithEventName:callbackScheduler:]
  -[HDSPXPCActivityScheduler scheduleActivity:options:activityHandler:]
  -[HDSPXPCActivityScheduler scheduleActivityWithCriteria:options:activityHandler:]


HDSPSleepScheduleModelSaveResult : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL success
 @property  NSError *error
 @property  BOOL shouldNotify

  // class methods
  +[HDSPSleepScheduleModelSaveResult emptyResult]
  +[HDSPSleepScheduleModelSaveResult saveFailedWithError:]

  // instance methods
  -[HDSPSleepScheduleModelSaveResult success]
  -[HDSPSleepScheduleModelSaveResult .cxx_destruct]
  -[HDSPSleepScheduleModelSaveResult shouldNotify]
  -[HDSPSleepScheduleModelSaveResult error]
  -[HDSPSleepScheduleModelSaveResult initWithSuccess:error:shouldNotify:]


HDSPWakeUpResultsNotificationDelayingForTrackingState : HDSPWakeUpResultsNotificationStateMachineState
  // instance methods
  -[HDSPWakeUpResultsNotificationDelayingForTrackingState willEnterWithPreviousState:context:]
  -[HDSPWakeUpResultsNotificationDelayingForTrackingState trackingDelayEventDue]
  -[HDSPWakeUpResultsNotificationDelayingForTrackingState didEnterWithPreviousState:context:]
  -[HDSPWakeUpResultsNotificationDelayingForTrackingState stateName]
  -[HDSPWakeUpResultsNotificationDelayingForTrackingState didExitWithNextState:context:]


HDSPDismissGoodMorningIDSMessage : HDSPEventRecordMessage
 @property  NSDate *goodMorningDismissed

  // instance methods
  -[HDSPDismissGoodMorningIDSMessage dateDescription]
  -[HDSPDismissGoodMorningIDSMessage initWithGoodMorningDismissedDate:timeout:]
  -[HDSPDismissGoodMorningIDSMessage goodMorningDismissed]


HDSPSleepScheduleStateCoordinatorWakeUpState : HDSPSleepScheduleStateCoordinatorStateMachineState
  // instance methods
  -[HDSPSleepScheduleStateCoordinatorWakeUpState bedtimeReached]
  -[HDSPSleepScheduleStateCoordinatorWakeUpState bedtimeSkipped]
  -[HDSPSleepScheduleStateCoordinatorWakeUpState scheduleState]
  -[HDSPSleepScheduleStateCoordinatorWakeUpState stateName]
  -[HDSPSleepScheduleStateCoordinatorWakeUpState windDownReached]
  -[HDSPSleepScheduleStateCoordinatorWakeUpState determineExpirationDateForCurrentDate:]


HDSPSleepScheduleStateCoordinatorStateMachine : HKSPPersistentStateMachine /System/Library/PrivateFrameworks/ToneLibrary.framework/ToneLibrary <HDSPSleepScheduleStateCoordinatorStateMachineDelegate, HDSPSleepScheduleStateCoordinatorStateMachineInfoProvider, HDSPSleepScheduleStateCoordinatorStateMachineEventHandler>
 @property  <HDSPSleepScheduleStateCoordinatorStateMachineDelegate> *delegate
 @property  <HDSPSleepScheduleStateCoordinatorStateMachineInfoProvider> *infoProvider
 @property  HDSPSleepScheduleStateCoordinatorDisabledState *disabledState
 @property  HDSPSleepScheduleStateCoordinatorWakeUpState *wakeUpState
 @property  HDSPSleepScheduleStateCoordinatorBedtimeState *bedtimeState
 @property  HDSPSleepScheduleStateCoordinatorWindDownState *windDownState
 @property  HDSPSleepScheduleStateCoordinatorDelayedWakeUpState *delayedWakeUpState
 @property  HDSPSleepScheduleStateCoordinatorSkippedBedtimeState *skippedBedtimeState
 @property  HDSPSleepScheduleStateCoordinatorInitialState *initialState
 @property  <NAScheduler> *callbackScheduler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL isAppleWatch
 @property  BOOL sleepFeaturesEnabled
 @property  HKSPSleepScheduleModel *sleepScheduleModel
 @property  HKSPSleepScheduleOccurrence *previousOccurrence
 @property  NSDate *currentDate

  // instance methods
  -[HDSPSleepScheduleStateCoordinatorStateMachine isAppleWatch]
  -[HDSPSleepScheduleStateCoordinatorStateMachine initialState]
  -[HDSPSleepScheduleStateCoordinatorStateMachine currentDate]
  -[HDSPSleepScheduleStateCoordinatorStateMachine bedtimeReached]
  -[HDSPSleepScheduleStateCoordinatorStateMachine sleepScheduleModel]
  -[HDSPSleepScheduleStateCoordinatorStateMachine windDownSkipped]
  -[HDSPSleepScheduleStateCoordinatorStateMachine disabledState]
  -[HDSPSleepScheduleStateCoordinatorStateMachine windDownState]
  -[HDSPSleepScheduleStateCoordinatorStateMachine bedtimeSkipped]
  -[HDSPSleepScheduleStateCoordinatorStateMachine sleepScheduleStateDidChange:previousState:reason:]
  -[HDSPSleepScheduleStateCoordinatorStateMachine significantTimeChange]
  -[HDSPSleepScheduleStateCoordinatorStateMachine previousOccurrence]
  -[HDSPSleepScheduleStateCoordinatorStateMachine .cxx_destruct]
  -[HDSPSleepScheduleStateCoordinatorStateMachine snoozeFireDateShouldBeReset]
  -[HDSPSleepScheduleStateCoordinatorStateMachine initWithIdentifier:persistence:delegate:infoProvider:currentDateProvider:]
  -[HDSPSleepScheduleStateCoordinatorStateMachine sleepFeaturesEnabled]
  -[HDSPSleepScheduleStateCoordinatorStateMachine wakeUpConfirmed]
  -[HDSPSleepScheduleStateCoordinatorStateMachine bedtimeDelayed]
  -[HDSPSleepScheduleStateCoordinatorStateMachine delayedWakeUpState]
  -[HDSPSleepScheduleStateCoordinatorStateMachine stateMachineLog]
  -[HDSPSleepScheduleStateCoordinatorStateMachine timeZoneChange]
  -[HDSPSleepScheduleStateCoordinatorStateMachine skippedBedtimeState]
  -[HDSPSleepScheduleStateCoordinatorStateMachine bedtimeState]
  -[HDSPSleepScheduleStateCoordinatorStateMachine windDownReached]
  -[HDSPSleepScheduleStateCoordinatorStateMachine wakeTimeReached]
  -[HDSPSleepScheduleStateCoordinatorStateMachine scheduleModelChanged]
  -[HDSPSleepScheduleStateCoordinatorStateMachine wakeUpState]


HDSPTimeAsleepTrackerWaitingState : HDSPTimeAsleepTrackerStateMachineState
  // instance methods
  -[HDSPTimeAsleepTrackerWaitingState willEnterWithPreviousState:context:]
  -[HDSPTimeAsleepTrackerWaitingState didEnterWithPreviousState:context:]
  -[HDSPTimeAsleepTrackerWaitingState stateName]
  -[HDSPTimeAsleepTrackerWaitingState didExitWithNextState:context:]
  -[HDSPTimeAsleepTrackerWaitingState bedtimeOccurred]
  -[HDSPTimeAsleepTrackerWaitingState sleepTrackingEventDue]
  -[HDSPTimeAsleepTrackerWaitingState userEngagedSleepMode]
  -[HDSPTimeAsleepTrackerWaitingState startWakeDetectionOccurred]
  -[HDSPTimeAsleepTrackerWaitingState isSleepTrackingSchedulingState]


HDSPSleepSession : NSObject /usr/lib/libSystem.B.dylib <BSDescriptionProviding, NSSecureCoding>
 @property  NSDateInterval *interval
 @property  NSArray *sleepIntervals
 @property  unsigned long endReason
 @property  NSDictionary *metadata
 @property  BOOL requiresFirstUnlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HDSPSleepSession supportsSecureCoding]
  +[HDSPSleepSession sleepSessionWithDateInterval:sleepIntervals:endReason:metadata:requiresFirstUnlock:]
  +[HDSPSleepSession testSleepSession]

  // instance methods
  -[HDSPSleepSession interval]
  -[HDSPSleepSession .cxx_destruct]
  -[HDSPSleepSession endReason]
  -[HDSPSleepSession succinctDescriptionBuilder]
  -[HDSPSleepSession encodeWithCoder:]
  -[HDSPSleepSession succinctDescription]
  -[HDSPSleepSession isEqual:]
  -[HDSPSleepSession metadata]
  -[HDSPSleepSession descriptionWithMultilinePrefix:]
  -[HDSPSleepSession initWithCoder:]
  -[HDSPSleepSession descriptionBuilderWithMultilinePrefix:]
  -[HDSPSleepSession requiresFirstUnlock]
  -[HDSPSleepSession sleepIntervals]
  -[HDSPSleepSession initWithDateInterval:sleepIntervals:endReason:metadata:requiresFirstUnlock:]


HDSPSleepSessionInterval : NSObject /usr/lib/libSystem.B.dylib <BSDescriptionProviding, NSSecureCoding>
 @property  NSDateInterval *interval
 @property  unsigned long type
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HDSPSleepSessionInterval supportsSecureCoding]
  +[HDSPSleepSessionInterval sleepSessionIntervalWithInterval:type:]

  // instance methods
  -[HDSPSleepSessionInterval interval]
  -[HDSPSleepSessionInterval .cxx_destruct]
  -[HDSPSleepSessionInterval succinctDescriptionBuilder]
  -[HDSPSleepSessionInterval encodeWithCoder:]
  -[HDSPSleepSessionInterval type]
  -[HDSPSleepSessionInterval succinctDescription]
  -[HDSPSleepSessionInterval isEqual:]
  -[HDSPSleepSessionInterval descriptionWithMultilinePrefix:]
  -[HDSPSleepSessionInterval initWithCoder:]
  -[HDSPSleepSessionInterval descriptionBuilderWithMultilinePrefix:]
  -[HDSPSleepSessionInterval initWithInterval:type:]


HDSPSleepScheduleModelManager : NSObject /usr/lib/libSystem.B.dylib <HDSPDiagnosticsProvider, HDSPSleepEventProvider, HDSPTimeChangeObserver, HDSPSource, HDSPEnvironmentAware, HDSPSleepStorageObserver, HDSPApplicationWorkspaceObserver>
 @property  {os_unfair_lock_s=I} storeLock
 @property  HKSPObserverSet *observers
 @property  HKSPSleepScheduleModel *sleepScheduleModel
 @property  HKSPSleepSchedule *sleepSchedule
 @property  HKSPSleepSettings *sleepSettings
 @property  HKSPSleepEventRecord *sleepEventRecord
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *providerIdentifier
 @property  <HDSPSleepEventDelegate> *sleepEventDelegate
 @property  NSString *sourceIdentifier
 @property  BOOL dontNotify
 @property  BOOL dontSync
 @property  <HDSPSource> *targetSource
 @property  HDSPEnvironment *environment
 @property  NSString *bundleIdentifier

  // instance methods
  -[HDSPSleepScheduleModelManager providerIdentifier]
  -[HDSPSleepScheduleModelManager sleepEventRecord]
  -[HDSPSleepScheduleModelManager setSleepEventDelegate:]
  -[HDSPSleepScheduleModelManager sleepSettings]
  -[HDSPSleepScheduleModelManager _loadSleepEventRecord:]
  -[HDSPSleepScheduleModelManager _loadSleepScheduleModel:]
  -[HDSPSleepScheduleModelManager sleepSchedule]
  -[HDSPSleepScheduleModelManager sleepEventDelegate]
  -[HDSPSleepScheduleModelManager upcomingEventsDueAfterDate:]
  -[HDSPSleepScheduleModelManager environmentDidBecomeReady:]
  -[HDSPSleepScheduleModelManager significantTimeChangeDetected:]
  -[HDSPSleepScheduleModelManager sleepScheduleModel]
  -[HDSPSleepScheduleModelManager _locked_notifyObserversForSleepScheduleChangeFromSource:]
  -[HDSPSleepScheduleModelManager _earliestDateToScheduleEventsForDate:]
  -[HDSPSleepScheduleModelManager sourceIdentifier]
  -[HDSPSleepScheduleModelManager _locked_saveSleepSchedule:]
  -[HDSPSleepScheduleModelManager _locked_loadSleepSchedule:]
  -[HDSPSleepScheduleModelManager _turnOffWatchSleepFeatures]
  -[HDSPSleepScheduleModelManager _locked_setSleepEventRecord:]
  -[HDSPSleepScheduleModelManager _loadSleepSchedule:]
  -[HDSPSleepScheduleModelManager .cxx_destruct]
  -[HDSPSleepScheduleModelManager _shouldTurnOffWatchSleepFeatures]
  -[HDSPSleepScheduleModelManager saveSleepScheduleModel:error:source:]
  -[HDSPSleepScheduleModelManager _locked_notifyObserversForSleepEventRecordChangeFromSource:]
  -[HDSPSleepScheduleModelManager _locked_updateSleepEventRecord:]
  -[HDSPSleepScheduleModelManager _shouldNotifyObserver:forSource:]
  -[HDSPSleepScheduleModelManager _locked_updateModelWithBlock:persistBlock:error:]
  -[HDSPSleepScheduleModelManager initWithEnvironment:]
  -[HDSPSleepScheduleModelManager environmentWillBecomeReady:]
  -[HDSPSleepScheduleModelManager observers]
  -[HDSPSleepScheduleModelManager notifyObserversForSleepEventRecordChangeFromSource:]
  -[HDSPSleepScheduleModelManager _locked_updateSleepSchedule:]
  -[HDSPSleepScheduleModelManager removeSleepScheduleModelWithError:source:]
  -[HDSPSleepScheduleModelManager _locked_updateSleepSettings:]
  -[HDSPSleepScheduleModelManager _locked_saveSleepSettings:]
  -[HDSPSleepScheduleModelManager diagnosticDescription]
  -[HDSPSleepScheduleModelManager _locked_saveSleepEventRecord:]
  -[HDSPSleepScheduleModelManager sleepStorageDidChangeExternally:]
  -[HDSPSleepScheduleModelManager diagnosticInfo]
  -[HDSPSleepScheduleModelManager _locked_setSleepSettings:]
  -[HDSPSleepScheduleModelManager _locked_notifyObserversForSleepSettingsChangeFromSource:]
  -[HDSPSleepScheduleModelManager notifyObserversForSleepScheduleChangeFromSource:]
  -[HDSPSleepScheduleModelManager _locked_removeSleepSchedule]
  -[HDSPSleepScheduleModelManager saveSleepSchedule:error:source:]
  -[HDSPSleepScheduleModelManager removeObserver:]
  -[HDSPSleepScheduleModelManager _loadSleepSettings:]
  -[HDSPSleepScheduleModelManager _locked_loadSleepSettings:]
  -[HDSPSleepScheduleModelManager storeLock]
  -[HDSPSleepScheduleModelManager environment]
  -[HDSPSleepScheduleModelManager observedApplicationDidUninstall]
  -[HDSPSleepScheduleModelManager _locked_sleepScheduleModel]
  -[HDSPSleepScheduleModelManager bundleIdentifier]
  -[HDSPSleepScheduleModelManager _locked_resetSleepSettings]
  -[HDSPSleepScheduleModelManager _locked_validateSleepSchedule:generateValidSchedule:]
  -[HDSPSleepScheduleModelManager _locked_resetSleepEventRecord]
  -[HDSPSleepScheduleModelManager _locked_loadSleepEventRecord:]
  -[HDSPSleepScheduleModelManager _locked_applyNecessaryChangesBeforeSaving:]
  -[HDSPSleepScheduleModelManager addObserver:]
  -[HDSPSleepScheduleModelManager saveSleepEventRecord:error:source:]
  -[HDSPSleepScheduleModelManager _withLock:]
  -[HDSPSleepScheduleModelManager notifyObserversForSleepSettingsChangeFromSource:]
  -[HDSPSleepScheduleModelManager _locked_canApplyChangesFrom:to:error:]
  -[HDSPSleepScheduleModelManager saveSleepSettings:error:source:]
  -[HDSPSleepScheduleModelManager _locked_setSleepSchedule:]
  -[HDSPSleepScheduleModelManager _locked_notifyObserversForSleepScheduleModelChangeFromSource:]
  -[HDSPSleepScheduleModelManager _locked_loadSleepScheduleModel:]


HDSPSpringboardMonitor : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL isAppleWatch
 @property  int notifyToken
 @property  BOOL springboardStarted
 @property  {os_unfair_lock_s=I} springboardStartedLock
 @property  HKSPObserverSet *observers
 @property  BOOL isSpringboardStarted

  // instance methods
  -[HDSPSpringboardMonitor isAppleWatch]
  -[HDSPSpringboardMonitor _stopMonitoring]
  -[HDSPSpringboardMonitor initWithCallbackScheduler:isAppleWatch:]
  -[HDSPSpringboardMonitor dealloc]
  -[HDSPSpringboardMonitor springboardStartedLock]
  -[HDSPSpringboardMonitor .cxx_destruct]
  -[HDSPSpringboardMonitor observers]
  -[HDSPSpringboardMonitor _startMonitoring]
  -[HDSPSpringboardMonitor _checkAndNotify]
  -[HDSPSpringboardMonitor _checkSpringBoardStarted]
  -[HDSPSpringboardMonitor _processName]
  -[HDSPSpringboardMonitor removeObserver:]
  -[HDSPSpringboardMonitor addObserver:]
  -[HDSPSpringboardMonitor springboardStarted]
  -[HDSPSpringboardMonitor _withLock:]
  -[HDSPSpringboardMonitor isSpringboardStarted]
  -[HDSPSpringboardMonitor notifyToken]


HDSPWakeUpResultsNotificationNotifiedState : HDSPWakeUpResultsNotificationStateMachineState
  // instance methods
  -[HDSPWakeUpResultsNotificationNotifiedState willEnterWithPreviousState:context:]
  -[HDSPWakeUpResultsNotificationNotifiedState didPostResultsNotification]
  -[HDSPWakeUpResultsNotificationNotifiedState didEnterWithPreviousState:context:]
  -[HDSPWakeUpResultsNotificationNotifiedState stateName]


HDSPSleepMessage : NSObject /usr/lib/libSystem.B.dylib <HKSPDictionarySerializable>
 @property  <HKSPSyncAnchor> *syncAnchor
 @property  unsigned long messageType
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HDSPSleepMessage copyWithZone:]
  -[HDSPSleepMessage messageType]
  -[HDSPSleepMessage .cxx_destruct]
  -[HDSPSleepMessage syncAnchor]
  -[HDSPSleepMessage encodeWithCoder:]
  -[HDSPSleepMessage initWithCoder:]
  -[HDSPSleepMessage initWithSyncAnchor:]


HDSPSleepModeBedtimeState : HDSPSleepModeStateMachineState
  // instance methods
  -[HDSPSleepModeBedtimeState sleepMode]
  -[HDSPSleepModeBedtimeState userDisengagedCurrentMode]
  -[HDSPSleepModeBedtimeState stateName]


HDSPTimeAsleepTrackerManualTrackingState : HDSPTimeAsleepTrackerSleepTrackingState
  // class methods
  +[HDSPTimeAsleepTrackerManualTrackingState defaultStartReason]
  +[HDSPTimeAsleepTrackerManualTrackingState defaultEndReason]

  // instance methods
  -[HDSPTimeAsleepTrackerManualTrackingState willEnterWithPreviousState:context:]
  -[HDSPTimeAsleepTrackerManualTrackingState didEnterWithPreviousState:context:]
  -[HDSPTimeAsleepTrackerManualTrackingState stateName]
  -[HDSPTimeAsleepTrackerManualTrackingState didExitWithNextState:context:]
  -[HDSPTimeAsleepTrackerManualTrackingState bedtimeOccurred]
  -[HDSPTimeAsleepTrackerManualTrackingState sleepTrackingEventDue]
  -[HDSPTimeAsleepTrackerManualTrackingState sleepModeExitedWithReason:]
  -[HDSPTimeAsleepTrackerManualTrackingState startWakeDetectionOccurred]
  -[HDSPTimeAsleepTrackerManualTrackingState isSleepTrackingSchedulingState]


HDSPUserNotificationCenter : NSObject /usr/lib/libSystem.B.dylib <HDSPSleepNotificationPublisher, HDSPEnvironmentAware>
 @property  UNUserNotificationCenter *notificationCenter
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  HDSPEnvironment *environment

  // class methods
  +[HDSPUserNotificationCenter _stringForEventDate:]
  +[HDSPUserNotificationCenter _generateUniqueIdentifierForNotificationIdentifierPrefix:eventDate:]

  // instance methods
  -[HDSPUserNotificationCenter notificationCenter]
  -[HDSPUserNotificationCenter initWithEnvironment:notificationCenter:]
  -[HDSPUserNotificationCenter tearDownNotificationForEventIdentifier:]
  -[HDSPUserNotificationCenter environmentDidBecomeReady:]
  -[HDSPUserNotificationCenter _chargingReminderBodyForAlarmEnabled:sleepTrackingEnabled:]
  -[HDSPUserNotificationCenter _windDownReminderBodyContent]
  -[HDSPUserNotificationCenter publishNotificationForEvent:userInfo:]
  -[HDSPUserNotificationCenter _notificationRequestForEvent:userInfo:]
  -[HDSPUserNotificationCenter _windDownReminderContent]
  -[HDSPUserNotificationCenter _notificationContentForEventIdentifier:userInfo:]
  -[HDSPUserNotificationCenter _weeklyCoachingContentWithCategory:userInfo:]
  -[HDSPUserNotificationCenter .cxx_destruct]
  -[HDSPUserNotificationCenter _localizedBedtimeOrWindDownReminderBodyWithKey:embeddingTimeForEvent:]
  -[HDSPUserNotificationCenter _baseWakeUpResultsContentWithCategoryID:body:userInfo:]
  -[HDSPUserNotificationCenter initWithEnvironment:]
  -[HDSPUserNotificationCenter _bedtimeReminderContent]
  -[HDSPUserNotificationCenter _notificationIdentifierPrefixForEventIdentifier:]
  -[HDSPUserNotificationCenter _notificationRequestIdentifierForEvent:]
  -[HDSPUserNotificationCenter _wakeDetectionAlertTitleForAlarmEnabled:sleepModeOn:]
  -[HDSPUserNotificationCenter _wakeDetectionContentWithUserInfo:]
  -[HDSPUserNotificationCenter tearDownNotifications]
  -[HDSPUserNotificationCenter _publishNotificationRequest:]
  -[HDSPUserNotificationCenter _chargingReminderContentWithUserInfo:]
  -[HDSPUserNotificationCenter environment]
  -[HDSPUserNotificationCenter _contentByAddingCommonUserInfoTo:]
  -[HDSPUserNotificationCenter _oneDayCoachingContentWithCategory:userInfo:]
  -[HDSPUserNotificationCenter _wakeUpResultsContentWithUserInfo:]
  -[HDSPUserNotificationCenter _wakeDetectionAlertBodyForAlarmEnabled:sleepModeOn:]


HDSPSleepModeStateMachine : HKSPPersistentStateMachine /System/Library/PrivateFrameworks/ToneLibrary.framework/ToneLibrary <HDSPSleepModeStateMachineDelegate, HDSPSleepModeStateMachineInfoProvider, HDSPSleepModeStateMachineEventHandler>
 @property  <HDSPSleepModeStateMachineDelegate> *delegate
 @property  <HDSPSleepModeStateMachineInfoProvider> *infoProvider
 @property  HDSPSleepModeOffState *offState
 @property  HDSPSleepModeWindDownState *windDownState
 @property  HDSPSleepModeManualOffState *manualOffState
 @property  HDSPSleepModeBedtimeState *bedtimeState
 @property  HDSPSleepModeManualBedtimeState *manualBedtimeState
 @property  <NAScheduler> *callbackScheduler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSDate *currentDate
 @property  HKSPSleepScheduleModel *sleepScheduleModel
 @property  unsigned long sleepScheduleState
 @property  BOOL isInDemoMode

  // instance methods
  -[HDSPSleepModeStateMachine currentDate]
  -[HDSPSleepModeStateMachine isInDemoMode]
  -[HDSPSleepModeStateMachine sleepScheduleStateChangedToWindDownFromState:]
  -[HDSPSleepModeStateMachine sleepScheduleModel]
  -[HDSPSleepModeStateMachine sleepScheduleState]
  -[HDSPSleepModeStateMachine sleepModeDidChange:previousMode:reason:]
  -[HDSPSleepModeStateMachine userDisengagedCurrentMode]
  -[HDSPSleepModeStateMachine windDownState]
  -[HDSPSleepModeStateMachine .cxx_destruct]
  -[HDSPSleepModeStateMachine initWithIdentifier:persistence:delegate:infoProvider:currentDateProvider:]
  -[HDSPSleepModeStateMachine sleepScheduleStateChangedToDisabledFromState:]
  -[HDSPSleepModeStateMachine offState]
  -[HDSPSleepModeStateMachine sleepScheduleStateChangedToBedtimeFromState:]
  -[HDSPSleepModeStateMachine sleepScheduleStateChangedToWakeUp:]
  -[HDSPSleepModeStateMachine stateMachineLog]
  -[HDSPSleepModeStateMachine bedtimeState]
  -[HDSPSleepModeStateMachine manualBedtimeState]
  -[HDSPSleepModeStateMachine manualOffState]
  -[HDSPSleepModeStateMachine userEngagedBedtimeMode]


HDSPSleepScheduleStateCoordinatorStateMachineState : HKSPPersistentStateMachineState /System/Library/PrivateFrameworks/ToneLibrary.framework/ToneLibrary <HDSPSleepScheduleStateCoordinatorStateMachineEventHandler>
 @property  HDSPSleepScheduleStateCoordinatorStateMachine *stateMachine
 @property  unsigned long scheduleState
 @property  HKSPSleepScheduleModel *persistedModel
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HDSPSleepScheduleStateCoordinatorStateMachineState copyWithZone:]
  -[HDSPSleepScheduleStateCoordinatorStateMachineState bedtimeReached]
  -[HDSPSleepScheduleStateCoordinatorStateMachineState windDownSkipped]
  -[HDSPSleepScheduleStateCoordinatorStateMachineState bedtimeSkipped]
  -[HDSPSleepScheduleStateCoordinatorStateMachineState significantTimeChange]
  -[HDSPSleepScheduleStateCoordinatorStateMachineState updateState]
  -[HDSPSleepScheduleStateCoordinatorStateMachineState .cxx_destruct]
  -[HDSPSleepScheduleStateCoordinatorStateMachineState willEnterWithPreviousState:context:]
  -[HDSPSleepScheduleStateCoordinatorStateMachineState wakeUpConfirmed]
  -[HDSPSleepScheduleStateCoordinatorStateMachineState encodeWithCoder:]
  -[HDSPSleepScheduleStateCoordinatorStateMachineState scheduleState]
  -[HDSPSleepScheduleStateCoordinatorStateMachineState bedtimeDelayed]
  -[HDSPSleepScheduleStateCoordinatorStateMachineState didEnterWithPreviousState:context:]
  -[HDSPSleepScheduleStateCoordinatorStateMachineState timeZoneChange]
  -[HDSPSleepScheduleStateCoordinatorStateMachineState windDownReached]
  -[HDSPSleepScheduleStateCoordinatorStateMachineState wakeTimeReached]
  -[HDSPSleepScheduleStateCoordinatorStateMachineState equalsBuilderWithObject:]
  -[HDSPSleepScheduleStateCoordinatorStateMachineState initWithCoder:]
  -[HDSPSleepScheduleStateCoordinatorStateMachineState scheduleModelChanged]
  -[HDSPSleepScheduleStateCoordinatorStateMachineState isAlarmEnabled]
  -[HDSPSleepScheduleStateCoordinatorStateMachineState isSleepScheduleDisabled]
  -[HDSPSleepScheduleStateCoordinatorStateMachineState updateStateWithCheckExpiration:]
  -[HDSPSleepScheduleStateCoordinatorStateMachineState setPersistedModel:]
  -[HDSPSleepScheduleStateCoordinatorStateMachineState determineNextStateFromTimeline]
  -[HDSPSleepScheduleStateCoordinatorStateMachineState _timelineForDate:]
  -[HDSPSleepScheduleStateCoordinatorStateMachineState significantScheduleChangeOccurred]
  -[HDSPSleepScheduleStateCoordinatorStateMachineState persistedModel]


HDSPSleepScheduleModelValidationResult : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL success
 @property  NSError *error
 @property  HKSPSleepEventTimelineResults *timelineResults

  // instance methods
  -[HDSPSleepScheduleModelValidationResult success]
  -[HDSPSleepScheduleModelValidationResult .cxx_destruct]
  -[HDSPSleepScheduleModelValidationResult error]
  -[HDSPSleepScheduleModelValidationResult timelineResults]
  -[HDSPSleepScheduleModelValidationResult initWithSuccess:timelineResults:error:]


HDSPEnvironmentNotReadyState : HDSPEnvironmentState
  // instance methods
  -[HDSPEnvironmentNotReadyState systemDidBecomeReady]
  -[HDSPEnvironmentNotReadyState updateState]
  -[HDSPEnvironmentNotReadyState enterMigrationOrReadyState]
  -[HDSPEnvironmentNotReadyState stateName]


HDSPChargingReminderDisabledState : HDSPChargingReminderStateMachineState
  // instance methods
  -[HDSPChargingReminderDisabledState stateName]


HDSPSleepModeExitDetector : NSObject /usr/lib/libSystem.B.dylib <HDSPSleepModeObserver, HDSPWakeDetector, HDSPEnvironmentAware>
 @property  BOOL isDetecting
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <HDSPWakeDetectorDelegate> *wakeDetectorDelegate
 @property  HDSPEnvironment *environment

  // instance methods
  -[HDSPSleepModeExitDetector environmentDidBecomeReady:]
  -[HDSPSleepModeExitDetector sleepModeDidChange:previousMode:reason:]
  -[HDSPSleepModeExitDetector .cxx_destruct]
  -[HDSPSleepModeExitDetector initWithEnvironment:]
  -[HDSPSleepModeExitDetector isDetecting]
  -[HDSPSleepModeExitDetector environment]
  -[HDSPSleepModeExitDetector startDetecting]
  -[HDSPSleepModeExitDetector stopDetecting]
  -[HDSPSleepModeExitDetector wakeDetectorDelegate]
  -[HDSPSleepModeExitDetector setWakeDetectorDelegate:]
  -[HDSPSleepModeExitDetector setIsDetecting:]


HDSPWakeUpResultsNotificationNeedsProtectedDataState : HDSPWakeUpResultsNotificationStateMachineState
  // instance methods
  -[HDSPWakeUpResultsNotificationNeedsProtectedDataState willEnterWithPreviousState:context:]
  -[HDSPWakeUpResultsNotificationNeedsProtectedDataState didEnterWithPreviousState:context:]
  -[HDSPWakeUpResultsNotificationNeedsProtectedDataState stateName]
  -[HDSPWakeUpResultsNotificationNeedsProtectedDataState didExitWithNextState:context:]
  -[HDSPWakeUpResultsNotificationNeedsProtectedDataState protectedHealthDataDidBecomeAvailable]
  -[HDSPWakeUpResultsNotificationNeedsProtectedDataState _transitionToQueryingState]


HDSPChargingReminderStateMachineState : HKSPPersistentStateMachineState /System/Library/PrivateFrameworks/ToneLibrary.framework/ToneLibrary <HDSPChargingReminderStateMachineEventHandler>
 @property  HDSPChargingReminderStateMachine *stateMachine
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HDSPChargingReminderStateMachineState updateState]
  -[HDSPChargingReminderStateMachineState determineNextState]
  -[HDSPChargingReminderStateMachineState batteryMonitoringEventDue]
  -[HDSPChargingReminderStateMachineState batteryLevelChanged:]
  -[HDSPChargingReminderStateMachineState isChargingReminderDisabled]
  -[HDSPChargingReminderStateMachineState _inMonitoringWindow]


HDSPNotificationListener : NSObject /usr/lib/libSystem.B.dylib <HDSPEnvironmentAware>
 @property  HKSPObserverSet *observers
 @property  NSMutableDictionary *launchNotificationRegistrations
 @property  {os_unfair_lock_s=I} launchNotificationRegistrationLock
 @property  HDSPEnvironment *environment
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HDSPNotificationListener environmentDidBecomeReady:]
  -[HDSPNotificationListener startListening]
  -[HDSPNotificationListener .cxx_destruct]
  -[HDSPNotificationListener launchNotificationRegistrations]
  -[HDSPNotificationListener initWithEnvironment:]
  -[HDSPNotificationListener observers]
  -[HDSPNotificationListener unregisterForLaunchNotificationWithName:key:]
  -[HDSPNotificationListener _handleNotificationWithName:completion:]
  -[HDSPNotificationListener launchNotificationRegistrationLock]
  -[HDSPNotificationListener _registerForStream:]
  -[HDSPNotificationListener removeObserver:]
  -[HDSPNotificationListener environment]
  -[HDSPNotificationListener addObserver:]
  -[HDSPNotificationListener _withLock:]
  -[HDSPNotificationListener registerForLaunchNotificationWithName:key:]


HDSPChargingReminderMonitoringState : HDSPChargingReminderStateMachineState
  // instance methods
  -[HDSPChargingReminderMonitoringState willEnterWithPreviousState:context:]
  -[HDSPChargingReminderMonitoringState didEnterWithPreviousState:context:]
  -[HDSPChargingReminderMonitoringState stateName]
  -[HDSPChargingReminderMonitoringState didExitWithNextState:context:]
  -[HDSPChargingReminderMonitoringState batteryLevelChanged:]


HDSPMobileTimerBridge : NSObject /usr/lib/libSystem.B.dylib <HDSPSleepAlarmProvider>
 @property  MTAlarmManager *alarmManager
 @property  NAFuture *alarmServerReady
 @property  NSArray *sleepAlarms
 @property  NAFuture *sleepAlarmsFuture
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HDSPMobileTimerBridge sleepAlarm:matchesSleepScheduleModel:]
  +[HDSPMobileTimerBridge sleepScheduleModelFromSleepAlarm:]

  // instance methods
  -[HDSPMobileTimerBridge sleepAlarms]
  -[HDSPMobileTimerBridge alarmServerReady]
  -[HDSPMobileTimerBridge resetSleepAlarmSnoozeState]
  -[HDSPMobileTimerBridge sleepAlarmsIgnoringCache:]
  -[HDSPMobileTimerBridge init]
  -[HDSPMobileTimerBridge .cxx_destruct]
  -[HDSPMobileTimerBridge updateSleepAlarms]
  -[HDSPMobileTimerBridge _checkAlarmServer]
  -[HDSPMobileTimerBridge alarmManager]
  -[HDSPMobileTimerBridge _alarmServerReady]
  -[HDSPMobileTimerBridge initWithAlarmManager:]
  -[HDSPMobileTimerBridge sleepAlarmsFuture]


HDSPDistributedNotificationCenter : NSObject /usr/lib/libSystem.B.dylib <HDSPSleepNotificationPublisher, HDSPEnvironmentAware>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  HDSPEnvironment *environment

  // instance methods
  -[HDSPDistributedNotificationCenter tearDownNotificationForEventIdentifier:]
  -[HDSPDistributedNotificationCenter environmentDidBecomeReady:]
  -[HDSPDistributedNotificationCenter publishNotificationForEvent:userInfo:]
  -[HDSPDistributedNotificationCenter .cxx_destruct]
  -[HDSPDistributedNotificationCenter initWithEnvironment:]
  -[HDSPDistributedNotificationCenter tearDownNotifications]
  -[HDSPDistributedNotificationCenter environment]


HDSPSleepModeManualBedtimeState : HDSPSleepModeBedtimeState
  // instance methods
  -[HDSPSleepModeManualBedtimeState sleepScheduleStateChangedToWindDownFromState:]
  -[HDSPSleepModeManualBedtimeState updateState]
  -[HDSPSleepModeManualBedtimeState sleepScheduleStateChangedToDisabledFromState:]
  -[HDSPSleepModeManualBedtimeState sleepScheduleStateChangedToBedtimeFromState:]
  -[HDSPSleepModeManualBedtimeState sleepScheduleStateChangedToWakeUp:]
  -[HDSPSleepModeManualBedtimeState stateName]
  -[HDSPSleepModeManualBedtimeState isUserRequested]


HDSPSleepEventDueMessage : HDSPSleepMessage
 @property  HKSPSleepEvent *event

  // instance methods
  -[HDSPSleepEventDueMessage copyWithZone:]
  -[HDSPSleepEventDueMessage messageType]
  -[HDSPSleepEventDueMessage .cxx_destruct]
  -[HDSPSleepEventDueMessage event]
  -[HDSPSleepEventDueMessage encodeWithCoder:]
  -[HDSPSleepEventDueMessage initWithCoder:]
  -[HDSPSleepEventDueMessage initWithEvent:syncAnchor:]


HDSPDoNotDisturbStateMachineState : HKSPPersistentStateMachineState /System/Library/PrivateFrameworks/ToneLibrary.framework/ToneLibrary <HDSPDoNotDisturbStateMachineEventHandler>
 @property  HDSPDoNotDisturbStateMachine *stateMachine
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HDSPDoNotDisturbStateMachineState userTurnedOffDoNotDisturb]
  -[HDSPDoNotDisturbStateMachineState updateState]
  -[HDSPDoNotDisturbStateMachineState determineNextState]


HDSPTimeAsleepTrackerStateMachineState : HKSPPersistentStateMachineState /System/Library/PrivateFrameworks/ToneLibrary.framework/ToneLibrary <HDSPTimeAsleepTrackerStateMachineEventHandler>
 @property  HDSPTimeAsleepTrackerStateMachine *stateMachine
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HDSPTimeAsleepTrackerStateMachineState updateState]
  -[HDSPTimeAsleepTrackerStateMachineState appLaunchedOnDate:]
  -[HDSPTimeAsleepTrackerStateMachineState bedtimeOccurred]
  -[HDSPTimeAsleepTrackerStateMachineState wakeUpOccurredWithReason:]
  -[HDSPTimeAsleepTrackerStateMachineState sleepTrackingEventDue]
  -[HDSPTimeAsleepTrackerStateMachineState userEngagedSleepMode]
  -[HDSPTimeAsleepTrackerStateMachineState sleepModeExitedWithReason:]
  -[HDSPTimeAsleepTrackerStateMachineState activityDetectedOnDate:]
  -[HDSPTimeAsleepTrackerStateMachineState sleepSessionEndRequestedInternally]
  -[HDSPTimeAsleepTrackerStateMachineState startWakeDetectionOccurred]
  -[HDSPTimeAsleepTrackerStateMachineState sleepSessionFinished]
  -[HDSPTimeAsleepTrackerStateMachineState isActivityTrackingState]
  -[HDSPTimeAsleepTrackerStateMachineState _updateStateSpecific]
  -[HDSPTimeAsleepTrackerStateMachineState isSleepScheduleDisabled]
  -[HDSPTimeAsleepTrackerStateMachineState isSleepTrackingState]
  -[HDSPTimeAsleepTrackerStateMachineState isSleepTrackingSchedulingState]
  -[HDSPTimeAsleepTrackerStateMachineState _updateStateCommon]
  -[HDSPTimeAsleepTrackerStateMachineState isTimeAsleepTrackingDisabled]
  -[HDSPTimeAsleepTrackerStateMachineState inTrackingWindow]


HDSPSleepModeManager : NSObject /usr/lib/libSystem.B.dylib <HDSPSleepModeStateMachineDelegate, HDSPSleepModeStateMachineInfoProvider, HDSPDiagnosticsProvider, HDSPEnvironmentAware, HDSPSleepScheduleModelObserver, HDSPTimeChangeObserver, HDSPSleepScheduleStateObserver>
 @property  {os_unfair_lock_s=I} sleepModeLock
 @property  HDSPSleepModeStateMachine *stateMachine
 @property  HKSPObserverSet *sleepModeObservers
 @property  long long sleepMode
 @property  <NAScheduler> *callbackScheduler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSDate *currentDate
 @property  HKSPSleepScheduleModel *sleepScheduleModel
 @property  unsigned long sleepScheduleState
 @property  BOOL isInDemoMode
 @property  HDSPEnvironment *environment

  // instance methods
  -[HDSPSleepModeManager currentDate]
  -[HDSPSleepModeManager _userEngagedBedtimeMode]
  -[HDSPSleepModeManager sleepMode]
  -[HDSPSleepModeManager isInDemoMode]
  -[HDSPSleepModeManager setSleepMode:]
  -[HDSPSleepModeManager scheduledEventIsDue]
  -[HDSPSleepModeManager sleepScheduleModelManager:source:didUpdateSleepScheduleModel:]
  -[HDSPSleepModeManager environmentDidBecomeReady:]
  -[HDSPSleepModeManager significantTimeChangeDetected:]
  -[HDSPSleepModeManager sleepScheduleModel]
  -[HDSPSleepModeManager sleepScheduleState]
  -[HDSPSleepModeManager currentState]
  -[HDSPSleepModeManager sleepModeDidChange:previousMode:reason:]
  -[HDSPSleepModeManager _userDisengagedCurrentMode]
  -[HDSPSleepModeManager stateMachine]
  -[HDSPSleepModeManager sleepScheduleStateDidChange:previousState:reason:]
  -[HDSPSleepModeManager updateState]
  -[HDSPSleepModeManager _powerLogSleepMode:]
  -[HDSPSleepModeManager .cxx_destruct]
  -[HDSPSleepModeManager initWithEnvironment:]
  -[HDSPSleepModeManager environmentWillBecomeReady:]
  -[HDSPSleepModeManager sleepModeLock]
  -[HDSPSleepModeManager diagnosticDescription]
  -[HDSPSleepModeManager diagnosticInfo]
  -[HDSPSleepModeManager removeObserver:]
  -[HDSPSleepModeManager sleepModeObservers]
  -[HDSPSleepModeManager environment]
  -[HDSPSleepModeManager addObserver:]
  -[HDSPSleepModeManager inUserRequestedSleepMode]
  -[HDSPSleepModeManager _withLock:]
  -[HDSPSleepModeManager _enableSleepModeControlCenterModuleIfNeeded]


NPSDomainAccessor(HDSPSleepStorage)
UNNotificationSound(HDSPSleep)
	// class methods
	+[UNNotificationSound(HDSPSleep) hdsp_bedtimeReminderSound]
	+[UNNotificationSound(HDSPSleep) hdsp_chargingReminderSound]
	+[UNNotificationSound(HDSPSleep) hdsp_wakeUpResultsSound]
	+[UNNotificationSound(HDSPSleep) hdsp_wakeDetectionSound]

(HDSPWakeUpResultsNotification)
	// class methods
	+[(HDSPWakeUpResultsNotification) hdsp_insufficientAsleepDataError]

	// instance methods
	-[(HDSPWakeUpResultsNotification) hdsp_isHealthDatabaseInaccessibleError]
	-[(HDSPWakeUpResultsNotification) hdsp_isInsufficientAsleepDataError]

UNMutableNotificationContent(HDSPSleep)
	// class methods
	+[UNMutableNotificationContent(HDSPSleep) hdsp_notificationContentWithEnvironment:]

DNDModeAssertionService(HDSPDoNotDisturbManager)
DNDModeAssertion(HDSPDoNotDisturbManager)
HKSPXPCClient(HDSPSource)
	// instance methods
	-[HKSPXPCClient(HDSPSource) sourceIdentifier]

HKCategorySample(HDSPSleep)
	// class methods
	+[HKCategorySample(HDSPSleep) hdsp_categorySampleForSleepSessionInterval:metadata:]

IDSService(HDSPIDSServiceManager)
HKSPSensitiveUIMonitor(Daemon)
	// instance methods
	-[HKSPSensitiveUIMonitor(Daemon) environmentDidBecomeReady:]
	-[HKSPSensitiveUIMonitor(Daemon) initWithEnvironment:]
	-[HKSPSensitiveUIMonitor(Daemon) environment]

HKSleepHealthStore(HDSPSleep)
	// instance methods
	-[HKSleepHealthStore(HDSPSleep) hdsp_startSession]
	-[HKSleepHealthStore(HDSPSleep) hdsp_stopSession]
	-[HKSleepHealthStore(HDSPSleep) hdsp_persistSessions:]

01 00 0500 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSDescriptionBuilder 
01 00 0500 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSEqualsBuilder 
01 00 0700 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDModeAssertion 
01 00 0700 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDModeAssertionService 
01 00 0700 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDMutableModeAssertionDetails 
01 00 0900 /System/Library/Frameworks/HealthKit.framework/HealthKit: HKCategorySample 
01 00 0900 /System/Library/Frameworks/HealthKit.framework/HealthKit: HKDevice 
01 00 0900 /System/Library/Frameworks/HealthKit.framework/HealthKit: HKObjectType 
01 00 0f00 /System/Library/PrivateFrameworks/SleepHealth.framework/SleepHealth: HKSHGoalProgressEngine 
01 00 0f00 /System/Library/PrivateFrameworks/SleepHealth.framework/SleepHealth: HKSHSleepDaySummaryQuery 
01 00 1000 /System/Library/PrivateFrameworks/Sleep.framework/Sleep: HKSPAnalyticsDailyReportEvent 
01 00 1000 /System/Library/PrivateFrameworks/Sleep.framework/Sleep: HKSPAnalyticsManager 
01 00 1000 /System/Library/PrivateFrameworks/Sleep.framework/Sleep: HKSPAnalyticsWindDownEvent 
01 00 1000 /System/Library/PrivateFrameworks/Sleep.framework/Sleep: HKSPCoalescingExecutor 
01 00 1000 /System/Library/PrivateFrameworks/Sleep.framework/Sleep: HKSPDiagnostics 
01 00 1000 /System/Library/PrivateFrameworks/Sleep.framework/Sleep: HKSPDictionaryDeserializer 
01 00 1000 /System/Library/PrivateFrameworks/Sleep.framework/Sleep: HKSPDictionarySerializer 
01 00 1000 /System/Library/PrivateFrameworks/Sleep.framework/Sleep: HKSPHealthStoreProvider 
01 00 1000 /System/Library/PrivateFrameworks/Sleep.framework/Sleep: HKSPMockUserDefaults 
01 00 1000 /System/Library/PrivateFrameworks/Sleep.framework/Sleep: HKSPMutableAlarmConfiguration 
01 00 1000 /System/Library/PrivateFrameworks/Sleep.framework/Sleep: HKSPMutableSleepEventRecord 
01 00 1000 /System/Library/PrivateFrameworks/Sleep.framework/Sleep: HKSPMutableSleepSchedule 
01 00 1000 /System/Library/PrivateFrameworks/Sleep.framework/Sleep: HKSPMutableSleepScheduleOccurrence 
01 00 1000 /System/Library/PrivateFrameworks/Sleep.framework/Sleep: HKSPMutableSleepSettings 
01 00 1000 /System/Library/PrivateFrameworks/Sleep.framework/Sleep: HKSPObserverSet 
01 00 1000 /System/Library/PrivateFrameworks/Sleep.framework/Sleep: HKSPPersistentStateMachine 
01 00 1000 /System/Library/PrivateFrameworks/Sleep.framework/Sleep: HKSPPersistentStateMachineState 
01 00 1000 /System/Library/PrivateFrameworks/Sleep.framework/Sleep: HKSPRelationshipChange 
01 00 1000 /System/Library/PrivateFrameworks/Sleep.framework/Sleep: HKSPSensitiveUIMonitor 
01 00 1000 /System/Library/PrivateFrameworks/Sleep.framework/Sleep: HKSPSleepEvent 
01 00 1000 /System/Library/PrivateFrameworks/Sleep.framework/Sleep: HKSPSleepEventRecord 
01 00 1000 /System/Library/PrivateFrameworks/Sleep.framework/Sleep: HKSPSleepEventTimelineBuilder 
01 00 1000 /System/Library/PrivateFrameworks/Sleep.framework/Sleep: HKSPSleepSchedule 
01 00 1000 /System/Library/PrivateFrameworks/Sleep.framework/Sleep: HKSPSleepScheduleModel 
01 00 1000 /System/Library/PrivateFrameworks/Sleep.framework/Sleep: HKSPSleepSettings 
01 00 1000 /System/Library/PrivateFrameworks/Sleep.framework/Sleep: HKSPStateMachine 
01 00 1000 /System/Library/PrivateFrameworks/Sleep.framework/Sleep: HKSPStateMachineState 
01 00 1000 /System/Library/PrivateFrameworks/Sleep.framework/Sleep: HKSPXPCClient 
01 00 1000 /System/Library/PrivateFrameworks/Sleep.framework/Sleep: HKSPXPCConnectionInfo 
01 00 1000 /System/Library/PrivateFrameworks/Sleep.framework/Sleep: HKSPXPCConnectionListener 
01 00 0900 /System/Library/Frameworks/HealthKit.framework/HealthKit: HKSampleQuery 
01 00 0900 /System/Library/Frameworks/HealthKit.framework/HealthKit: HKSampleType 
01 00 0f00 /System/Library/PrivateFrameworks/SleepHealth.framework/SleepHealth: HKSleepHealthStore 
01 00 0900 /System/Library/Frameworks/HealthKit.framework/HealthKit: HKUnit 
01 00 0a00 /System/Library/PrivateFrameworks/IDS.framework/IDS: IDSService 
01 00 0e00 /System/Library/PrivateFrameworks/NetAppsUtilities.framework/NetAppsUtilities: NAFuture 
01 00 0e00 /System/Library/PrivateFrameworks/NetAppsUtilities.framework/NetAppsUtilities: NAScheduler 
01 00 0d00 /System/Library/PrivateFrameworks/NanoPreferencesSync.framework/NanoPreferencesSync: NPSDomainAccessor 
01 00 0d00 /System/Library/PrivateFrameworks/NanoPreferencesSync.framework/NanoPreferencesSync: NPSManager 
01 00 0c00 /System/Library/PrivateFrameworks/NanoRegistry.framework/NanoRegistry: NRPairedDeviceRegistry 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDateComponents 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateInterval 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSDistributedNotificationCenter 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 1400 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListener 
01 00 0300 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSLockScreenRemoteContentAssertion 
01 00 0300 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSRemoteContentDefinition 
01 00 1200 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNMutableNotificationContent 
01 00 1200 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNMutableNotificationSound 
01 00 1200 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNNotificationRequest 
01 00 1200 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNNotificationSound 
01 00 1200 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNUserNotificationCenter 
01 00 0600 /System/Library/PrivateFrameworks/CoreDuetContext.framework/CoreDuetContext: _CDClientContext 
01 00 0600 /System/Library/PrivateFrameworks/CoreDuetContext.framework/CoreDuetContext: _CDContextQueries 
01 00 0600 /System/Library/PrivateFrameworks/CoreDuetContext.framework/CoreDuetContext: _CDContextualChangeRegistration 
01 00 0600 /System/Library/PrivateFrameworks/CoreDuetContext.framework/CoreDuetContext: _CDContextualKeyPath 
01 00 0600 /System/Library/PrivateFrameworks/CoreDuetContext.framework/CoreDuetContext: _CDContextualPredicate 
01 00 0400 /System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet: _CDInBedDetector 
01 00 0900 /System/Library/Frameworks/HealthKit.framework/HealthKit: _HKBehavior 
01 00 1000 /System/Library/PrivateFrameworks/Sleep.framework/Sleep: _HKSPUserDefaultsStatePersistence 
