|| __DATA.__common _STSiriLogContextProxyServer
|| __DATA.__data _kAPLogContextProxyServer
|| __DATA.__objc_data _OBJC_CLASS_$_GCDAsyncReadPacket
|| __DATA.__objc_data _OBJC_CLASS_$_GCDAsyncSocket
|| __DATA.__objc_data _OBJC_CLASS_$_GCDAsyncSocketPreBuffer
|| __DATA.__objc_data _OBJC_CLASS_$_GCDAsyncSpecialPacket
|| __DATA.__objc_data _OBJC_CLASS_$_GCDAsyncWritePacket
|| __DATA.__objc_data _OBJC_CLASS_$_STAceRecorder
|| __DATA.__objc_data _OBJC_CLASS_$_STAnalyticsObserver
|| __DATA.__objc_data _OBJC_CLASS_$_STCFUpdateScripts
|| __DATA.__objc_data _OBJC_CLASS_$_STClientConnection
|| __DATA.__objc_data _OBJC_CLASS_$_STMetrics
|| __DATA.__objc_data _OBJC_CLASS_$_STMockSessionDJ
|| __DATA.__objc_data _OBJC_CLASS_$_STProxy
|| __DATA.__objc_data _OBJC_CLASS_$_STProxyConnection
|| __DATA.__objc_data _OBJC_CLASS_$_STProxySocketDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_STServerConnection
|| __DATA.__objc_data _OBJC_CLASS_$_STTool
|| __DATA.__objc_data _OBJC_METACLASS_$_GCDAsyncReadPacket
|| __DATA.__objc_data _OBJC_METACLASS_$_GCDAsyncSocket
|| __DATA.__objc_data _OBJC_METACLASS_$_GCDAsyncSocketPreBuffer
|| __DATA.__objc_data _OBJC_METACLASS_$_GCDAsyncSpecialPacket
|| __DATA.__objc_data _OBJC_METACLASS_$_GCDAsyncWritePacket
|| __DATA.__objc_data _OBJC_METACLASS_$_STAceRecorder
|| __DATA.__objc_data _OBJC_METACLASS_$_STAnalyticsObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_STCFUpdateScripts
|| __DATA.__objc_data _OBJC_METACLASS_$_STClientConnection
|| __DATA.__objc_data _OBJC_METACLASS_$_STMetrics
|| __DATA.__objc_data _OBJC_METACLASS_$_STMockSessionDJ
|| __DATA.__objc_data _OBJC_METACLASS_$_STProxy
|| __DATA.__objc_data _OBJC_METACLASS_$_STProxyConnection
|| __DATA.__objc_data _OBJC_METACLASS_$_STProxySocketDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_STServerConnection
|| __DATA.__objc_data _OBJC_METACLASS_$_STTool
|| __DATA.__objc_ivar _OBJC_IVAR_$_GCDAsyncReadPacket.buffer
|| __DATA.__objc_ivar _OBJC_IVAR_$_GCDAsyncReadPacket.bufferOwner
|| __DATA.__objc_ivar _OBJC_IVAR_$_GCDAsyncReadPacket.bytesDone
|| __DATA.__objc_ivar _OBJC_IVAR_$_GCDAsyncReadPacket.maxLength
|| __DATA.__objc_ivar _OBJC_IVAR_$_GCDAsyncReadPacket.originalBufferLength
|| __DATA.__objc_ivar _OBJC_IVAR_$_GCDAsyncReadPacket.readLength
|| __DATA.__objc_ivar _OBJC_IVAR_$_GCDAsyncReadPacket.startOffset
|| __DATA.__objc_ivar _OBJC_IVAR_$_GCDAsyncReadPacket.tag
|| __DATA.__objc_ivar _OBJC_IVAR_$_GCDAsyncReadPacket.term
|| __DATA.__objc_ivar _OBJC_IVAR_$_GCDAsyncReadPacket.timeout
|| __DATA.__objc_ivar _OBJC_IVAR_$_GCDAsyncSocketPreBuffer.preBuffer
|| __DATA.__objc_ivar _OBJC_IVAR_$_GCDAsyncSocketPreBuffer.preBufferSize
|| __DATA.__objc_ivar _OBJC_IVAR_$_GCDAsyncSocketPreBuffer.readPointer
|| __DATA.__objc_ivar _OBJC_IVAR_$_GCDAsyncSocketPreBuffer.writePointer
|| __DATA.__objc_ivar _OBJC_IVAR_$_GCDAsyncSpecialPacket.tlsSettings
|| __DATA.__objc_ivar _OBJC_IVAR_$_GCDAsyncWritePacket.buffer
|| __DATA.__objc_ivar _OBJC_IVAR_$_GCDAsyncWritePacket.bytesDone
|| __DATA.__objc_ivar _OBJC_IVAR_$_GCDAsyncWritePacket.tag
|| __DATA.__objc_ivar _OBJC_IVAR_$_GCDAsyncWritePacket.timeout
|| __DATA.__objc_ivar _OBJC_IVAR_$_STProxyConnection._bufferedInputData
|| __DATA.__objc_ivar _OBJC_IVAR_$_STProxyConnection._handler
|| __DATA.__objc_ivar _OBJC_IVAR_$_STProxyConnection._isCanceled
|| __DATA.__objc_ivar _OBJC_IVAR_$_STProxyConnection._isFinished
|| __DATA.__objc_ivar _OBJC_IVAR_$_STProxyConnection._isOpened
|| __DATA.__objc_ivar _OBJC_IVAR_$_STProxyConnection._queue
|| __DATA.__objc_ivar _OBJC_IVAR_$_STProxyConnection._socket
|| __DATA_CONST.__const _GCDAsyncSocketErrorDomain
|| __DATA_CONST.__const _GCDAsyncSocketException
|| __DATA_CONST.__const _GCDAsyncSocketManuallyEvaluateTrust
|| __DATA_CONST.__const _GCDAsyncSocketQueueName
|| __DATA_CONST.__const _GCDAsyncSocketSSLCipherSuites
|| __DATA_CONST.__const _GCDAsyncSocketSSLPeerID
|| __DATA_CONST.__const _GCDAsyncSocketSSLProtocolVersionMax
|| __DATA_CONST.__const _GCDAsyncSocketSSLProtocolVersionMin
|| __DATA_CONST.__const _GCDAsyncSocketSSLSessionOptionFalseStart
|| __DATA_CONST.__const _GCDAsyncSocketSSLSessionOptionSendOneByteRecord
|| __DATA_CONST.__const _GCDAsyncSocketThreadName
|| __DATA_CONST.__const _GCDAsyncSocketUseCFStreamForTLS
|| __DATA_CONST.__const _SiriProxyConnectionErrorDomain
|| __DATA_CONST.__const _kAssistantProxyServerHostname
|| __DATA_CONST.__const _kAssistantProxyServerLabel
|| __TEXT.__const _SiriTapeVersionNumber
|| __TEXT.__const _SiriTapeVersionString
|| __TEXT.__text _STClearInternalLogFiles
|| __TEXT.__text _STCreateDispatchDataFromNSData
|| __TEXT.__text _STLogDirectory
|| __TEXT.__text _STLogInitIfNeeded
|| __TEXT.__text _STPrintLine
__ AssistantServices: _AFAnalyticsContextCreateWithSpeechRequestOptions
__ AssistantServices: _AFIsInternalInstall
__ AssistantServices: _AFMachAbsoluteTimeGetNanoseconds
__ AssistantServices: _AFSharedResourcesDirectory
__ AssistantServices: _AFSiriStartUISpeechRequestNotification
__ AssistantServices: _AFSpeechLogsDirectory
__ AssistantServices: _OBJC_CLASS_$_AFAccount
__ AssistantServices: _OBJC_CLASS_$_AFAnalytics
__ AssistantServices: _OBJC_CLASS_$_AFAnalyticsObserverConnection
__ AssistantServices: _OBJC_CLASS_$_AFSettingsConnection
__ AssistantServices: _OBJC_CLASS_$_AFSpeechRequestOptions
__ CFNetwork: _CFHTTPMessageCopySerializedMessage
__ CFNetwork: _CFHTTPMessageCreateEmpty
__ CFNetwork: _CFHTTPMessageCreateResponse
__ CFNetwork: _kCFHTTPVersion1_1
__ CFNetwork: _kCFStreamNetworkServiceType
__ CFNetwork: _kCFStreamNetworkServiceTypeBackground
__ CFNetwork: _kCFStreamPropertySSLSettings
__ CFNetwork: _kCFStreamSSLAllowsAnyRoot
__ CFNetwork: _kCFStreamSSLAllowsExpiredCertificates
__ CFNetwork: _kCFStreamSSLAllowsExpiredRoots
__ CFNetwork: _kCFStreamSSLCertificates
__ CFNetwork: _kCFStreamSSLIsServer
__ CFNetwork: _kCFStreamSSLLevel
__ CFNetwork: _kCFStreamSSLPeerName
__ CFNetwork: _kCFStreamSSLValidatesCertificateChain
__ CoreFoundation: _CFDataGetBytePtr
__ CoreFoundation: _CFDataGetLength
__ CoreFoundation: _CFReadStreamClose
__ CoreFoundation: _CFReadStreamCopyError
__ CoreFoundation: _CFReadStreamGetStatus
__ CoreFoundation: _CFReadStreamHasBytesAvailable
__ CoreFoundation: _CFReadStreamOpen
__ CoreFoundation: _CFReadStreamRead
__ CoreFoundation: _CFReadStreamScheduleWithRunLoop
__ CoreFoundation: _CFReadStreamSetClient
__ CoreFoundation: _CFReadStreamSetProperty
__ CoreFoundation: _CFReadStreamUnscheduleFromRunLoop
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFRunLoopGetCurrent
__ CoreFoundation: _CFStreamCreatePairWithSocket
__ CoreFoundation: _CFWriteStreamCanAcceptBytes
__ CoreFoundation: _CFWriteStreamClose
__ CoreFoundation: _CFWriteStreamCopyError
__ CoreFoundation: _CFWriteStreamGetStatus
__ CoreFoundation: _CFWriteStreamOpen
__ CoreFoundation: _CFWriteStreamScheduleWithRunLoop
__ CoreFoundation: _CFWriteStreamSetClient
__ CoreFoundation: _CFWriteStreamSetProperty
__ CoreFoundation: _CFWriteStreamUnscheduleFromRunLoop
__ CoreFoundation: _CFWriteStreamWrite
__ CoreFoundation: _NSDefaultRunLoopMode
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanFalse
__ CoreFoundation: _kCFRunLoopDefaultMode
__ CoreFoundation: _kCFStreamPropertyShouldCloseNativeSocket
__ Foundation: _NSFileCreationDate
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSLocalizedRecoverySuggestionErrorKey
__ Foundation: _NSLog
__ Foundation: _NSPOSIXErrorDomain
__ Foundation: _NSSearchPathForDirectoriesInDomains
__ Foundation: _NSURLErrorDomain
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSValue
__ SAObjects: _OBJC_CLASS_$_AceObject
__ SAObjects: _OBJC_CLASS_$_SAAddResultObjects
__ SAObjects: _OBJC_CLASS_$_SAAssistantLoaded
__ SAObjects: _OBJC_CLASS_$_SABaseCommand
__ SAObjects: _OBJC_CLASS_$_SACFFetchScriptResponse
__ SAObjects: _OBJC_CLASS_$_SACFFlowCommand
__ SAObjects: _OBJC_CLASS_$_SACFFlowCompleted
__ SAObjects: _OBJC_CLASS_$_SACFSignal
__ SAObjects: _OBJC_CLASS_$_SAGetResultObjects
__ SAObjects: _OBJC_CLASS_$_SALoadAssistant
__ SAObjects: _OBJC_CLASS_$_SARequestCompleted
__ SAObjects: _OBJC_CLASS_$_SASFinishSpeech
__ SAObjects: _OBJC_CLASS_$_SASStartSpeechRequest
__ SAObjects: _OBJC_CLASS_$_SAStartRequest
__ Security: _SSLClose
__ Security: _SSLCopyPeerTrust
__ Security: _SSLCreateContext
__ Security: _SSLGetBufferedReadSize
__ Security: _SSLHandshake
__ Security: _SSLRead
__ Security: _SSLSetCertificate
__ Security: _SSLSetConnection
__ Security: _SSLSetEnabledCiphers
__ Security: _SSLSetIOFuncs
__ Security: _SSLSetPeerDomainName
__ Security: _SSLSetPeerID
__ Security: _SSLSetProtocolVersionMax
__ Security: _SSLSetProtocolVersionMin
__ Security: _SSLSetSessionOption
__ Security: _SSLWrite
__ SiriCore: _OBJC_CLASS_$_SiriCoreAceSerialization
__ SiriCore: _OBJC_CLASS_$_SiriCoreDataDecompressor
__ SiriCore: _OBJC_CLASS_$_SiriCoreZlibDataCompressor
__ SiriCore: _OBJC_CLASS_$_SiriCoreZlibDataDecompressor
__ SiriCore: _SiriCoreAceSerializationErrorDomain
__ SiriCore: _SiriCoreAceSerializationErrorUserInfoBytesAvailableKey
__ SiriCore: _SiriCoreAceSerializationErrorUserInfoBytesNeededKey
__ SiriCore: _SiriCoreSiriConnectionErrorDomain
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___memcpy_chk
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___stdoutp
__ libSystem.B.dylib: __dispatch_data_empty
__ libSystem.B.dylib: __dispatch_source_type_read
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __dispatch_source_type_write
__ libSystem.B.dylib: _accept
__ libSystem.B.dylib: _bind
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _connect
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_data_create
__ libSystem.B.dylib: _dispatch_data_create_concat
__ libSystem.B.dylib: _dispatch_data_create_subrange
__ libSystem.B.dylib: _dispatch_data_get_size
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_get_specific
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_queue_set_specific
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_get_data
__ libSystem.B.dylib: _dispatch_source_set_cancel_handler
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_suspend
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _exit
__ libSystem.B.dylib: _fcntl
__ libSystem.B.dylib: _fork
__ libSystem.B.dylib: _fprintf
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _freeaddrinfo
__ libSystem.B.dylib: _freeifaddrs
__ libSystem.B.dylib: _gai_strerror
__ libSystem.B.dylib: _getaddrinfo
__ libSystem.B.dylib: _getifaddrs
__ libSystem.B.dylib: _getpeername
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _getsockname
__ libSystem.B.dylib: _in6addr_any
__ libSystem.B.dylib: _in6addr_loopback
__ libSystem.B.dylib: _inet_ntop
__ libSystem.B.dylib: _kill
__ libSystem.B.dylib: _listen
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memcmp
__ libSystem.B.dylib: _memset
__ libSystem.B.dylib: _notify_post
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _poll
__ libSystem.B.dylib: _read
__ libSystem.B.dylib: _realloc
__ libSystem.B.dylib: _setsockopt
__ libSystem.B.dylib: _socket
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _strerror
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _strtol
__ libSystem.B.dylib: _system
__ libSystem.B.dylib: _write
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
STCFUpdateScripts : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[STCFUpdateScripts init]
  -[STCFUpdateScripts .cxx_destruct]
  -[STCFUpdateScripts _getUpdatedScripts]
  -[STCFUpdateScripts _writeUpdatedReplayFileAt:withObjects:error:]
  -[STCFUpdateScripts updateCFScriptsForReplayFile:withCompletion:]


STProxySocketDelegate : NSObject /usr/lib/libSystem.B.dylib <GCDAsyncSocketDelegate>
  // instance methods
  -[STProxySocketDelegate .cxx_destruct]
  -[STProxySocketDelegate socket:didAcceptNewSocket:]
  -[STProxySocketDelegate socket:didConnectToHost:port:]
  -[STProxySocketDelegate socket:didReadData:withTag:]
  -[STProxySocketDelegate socketDidDisconnect:withError:]
  -[STProxySocketDelegate initWithActiveServerURL:handler:replayFileURL:]


STMetrics : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[STMetrics sharedMetricsLogger]

  // instance methods
  -[STMetrics init]
  -[STMetrics .cxx_destruct]
  -[STMetrics observeAndLogClientFlowPerformanceMetrics]
  -[STMetrics observeAndLogClientFlowMemoryUsageMetrics]


STProxyConnection : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[STProxyConnection parseData:]
  -[STProxyConnection .cxx_destruct]
  -[STProxyConnection _cancelWithError:]
  -[STProxyConnection _httpHeaderData]
  -[STProxyConnection _aceHeaderData]
  -[STProxyConnection _hasReadHTTPHeader]
  -[STProxyConnection _tryReadingAceHeaderFromData:bytesParsed:error:]
  -[STProxyConnection _tryReadingParsedDataFromBytes:length:packet:object:bytesParsed:error:]
  -[STProxyConnection _consumeHTTPHeaderWithData:bytesRead:error:]
  -[STProxyConnection _consumeAceHeaderWithData:bytesRead:error:]
  -[STProxyConnection _consumeAceDataWithData:bytesRead:error:]
  -[STProxyConnection _connectionHasBytesAvailable:]
  -[STProxyConnection initWithSocket:handler:replayFileURL:]
  -[STProxyConnection _hasReadAceHeader]
  -[STProxyConnection handleAceObject:]
  -[STProxyConnection handlePacket:]


STClientConnection : STProxyConnection <STMockSessionDJDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[STClientConnection .cxx_destruct]
  -[STClientConnection _initializeBufferedGeneralOutputDataWithInitialPayload:]
  -[STClientConnection _bufferGeneralData:]
  -[STClientConnection _hasBufferedDataOrOutstandingPings]
  -[STClientConnection _tryToWriteBufferedOutputData]
  -[STClientConnection _sendGeneralData:]
  -[STClientConnection _handleAceNop]
  -[STClientConnection _handleAcePing:]
  -[STClientConnection _handleAcePong:]
  -[STClientConnection _handleAceEnd]
  -[STClientConnection _sendAcePongWithId:error:]
  -[STClientConnection initWithSocket:handler:replayFileURL:]
  -[STClientConnection handleAceObject:]
  -[STClientConnection handlePacket:]
  -[STClientConnection _handleLoadAssistant:]
  -[STClientConnection _addStartRequestIDToReplay:]
  -[STClientConnection _startReplayWithAceID:atURL:]
  -[STClientConnection _sendAceCommand:error:]
  -[STClientConnection _checkForReplayTimeout]
  -[STClientConnection _sendAceEndWithError:]
  -[STClientConnection sessionDJ:replayAceCommand:]
  -[STClientConnection sessionDJReplayDidFinish:]


STServerConnection : STProxyConnection
  // instance methods
  -[STServerConnection initWithSocket:handler:replayFileURL:]
  -[STServerConnection handleAceObject:]


STAnalyticsObserver : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[STAnalyticsObserver sharedObserver]

  // instance methods
  -[STAnalyticsObserver init]
  -[STAnalyticsObserver dealloc]
  -[STAnalyticsObserver .cxx_destruct]
  -[STAnalyticsObserver invalidate]
  -[STAnalyticsObserver addObserverActionForType:withBlock:]


STAceRecorder : NSObject /usr/lib/libSystem.B.dylib <STAceObjectHandler>
  // instance methods
  -[STAceRecorder init]
  -[STAceRecorder .cxx_destruct]
  -[STAceRecorder _startRecording]
  -[STAceRecorder _finishRecording]
  -[STAceRecorder handleClientCommand:]
  -[STAceRecorder handleServerCommand:]
  -[STAceRecorder _createDirectoryIfNeededWithBaseURL:]
  -[STAceRecorder _libraryURLWithBaseURL:date:fileName:]


STMockSessionDJ : NSObject /usr/lib/libSystem.B.dylib
 @property  <STMockSessionDJDelegate> *delegate
 @property  BOOL isReplaying

  // instance methods
  -[STMockSessionDJ .cxx_destruct]
  -[STMockSessionDJ setDelegate:]
  -[STMockSessionDJ delegate]
  -[STMockSessionDJ isReplaying]
  -[STMockSessionDJ handleAceObject:]
  -[STMockSessionDJ initWithReplayFileURL:]
  -[STMockSessionDJ addFinishRequestCompletion:]
  -[STMockSessionDJ startReplay]
  -[STMockSessionDJ addStartRequestID:]
  -[STMockSessionDJ _loadReplayAtURL:]
  -[STMockSessionDJ _matchRefIdsWithAceIds]
  -[STMockSessionDJ _setUpObserverAction]
  -[STMockSessionDJ _replayFromCommand:isLastRequest:]
  -[STMockSessionDJ _sendOneWayCBCommandsForStartRequest:atIndex:]
  -[STMockSessionDJ _sendCommandsFrom:withTimestamps:atIndex:isLastRequest:]
  -[STMockSessionDJ _getEventContextFromEvent:]


STProxy : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *previousAccountIdentifier
 @property  <STAceObjectHandler> *aceObjectHandler

  // class methods
  +[STProxy sharedServer]

  // instance methods
  -[STProxy disconnect]
  -[STProxy init]
  -[STProxy dealloc]
  -[STProxy .cxx_destruct]
  -[STProxy addObserverActionForType:withBlock:]
  -[STProxy observeAndLogClientFlowPerformanceMetrics]
  -[STProxy didFinishedOneRequestAndExpectMore:]
  -[STProxy _startProxyWithActiveServerURL:handler:replayFileURL:]
  -[STProxy _loadSpeechLogsFromURL:]
  -[STProxy _sendNextSpeechRequest]
  -[STProxy startProxyWithActiveServerURL:handler:]
  -[STProxy startProxyRecordingWithActiveServerURL:]
  -[STProxy startProxyServerWithReplayFileURL:]
  -[STProxy startProxyServerWithReplayFileURL:speechLogURL:]
  -[STProxy updateLocalScriptsForReplayFile:withCompletion:]
  -[STProxy addReplayCompletion:]
  -[STProxy previousAccountIdentifier]
  -[STProxy setPreviousAccountIdentifier:]
  -[STProxy aceObjectHandler]
  -[STProxy setAceObjectHandler:]


STTool : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[STTool settingsConnection]
  +[STTool createProxyIfNeededAndSetActiveWithCompletion:]
  +[STTool clearCFcache]


GCDAsyncSocketPreBuffer : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[GCDAsyncSocketPreBuffer dealloc]
  -[GCDAsyncSocketPreBuffer initWithCapacity:]
  -[GCDAsyncSocketPreBuffer readBuffer]
  -[GCDAsyncSocketPreBuffer reset]
  -[GCDAsyncSocketPreBuffer availableSpace]
  -[GCDAsyncSocketPreBuffer availableBytes]
  -[GCDAsyncSocketPreBuffer ensureCapacityForWrite:]
  -[GCDAsyncSocketPreBuffer getReadBuffer:availableBytes:]
  -[GCDAsyncSocketPreBuffer didRead:]
  -[GCDAsyncSocketPreBuffer writeBuffer]
  -[GCDAsyncSocketPreBuffer getWriteBuffer:availableSpace:]
  -[GCDAsyncSocketPreBuffer didWrite:]


GCDAsyncReadPacket : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[GCDAsyncReadPacket .cxx_destruct]
  -[GCDAsyncReadPacket initWithData:startOffset:maxLength:timeout:readLength:terminator:tag:]
  -[GCDAsyncReadPacket ensureCapacityForAdditionalDataOfLength:]
  -[GCDAsyncReadPacket optimalReadLengthWithDefault:shouldPreBuffer:]
  -[GCDAsyncReadPacket readLengthForNonTermWithHint:]
  -[GCDAsyncReadPacket readLengthForTermWithHint:shouldPreBuffer:]
  -[GCDAsyncReadPacket readLengthForTermWithPreBuffer:found:]
  -[GCDAsyncReadPacket searchForTermAfterPreBuffering:]


GCDAsyncWritePacket : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[GCDAsyncWritePacket .cxx_destruct]
  -[GCDAsyncWritePacket initWithData:timeout:tag:]


GCDAsyncSpecialPacket : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[GCDAsyncSpecialPacket .cxx_destruct]
  -[GCDAsyncSpecialPacket initWithTLSSettings:]


GCDAsyncSocket : NSObject /usr/lib/libSystem.B.dylib
 @property  id delegate
 @property  NSObject<OS_dispatch_queue> *delegateQueue
 @property  BOOL IPv4Enabled
 @property  BOOL IPv6Enabled
 @property  BOOL IPv4PreferredOverIPv6
 @property  id userData
 @property  BOOL isDisconnected
 @property  BOOL isConnected
 @property  NSString *connectedHost
 @property  unsigned short connectedPort
 @property  NSString *localHost
 @property  unsigned short localPort
 @property  NSData *connectedAddress
 @property  NSData *localAddress
 @property  BOOL isIPv4
 @property  BOOL isIPv6
 @property  BOOL isSecure
 @property  BOOL autoDisconnectOnClosedReadStream

  // class methods
  +[GCDAsyncSocket ignore:]
  +[GCDAsyncSocket CRData]
  +[GCDAsyncSocket LFData]
  +[GCDAsyncSocket lookupHost:port:error:]
  +[GCDAsyncSocket isIPv4Address:]
  +[GCDAsyncSocket isIPv6Address:]
  +[GCDAsyncSocket portFromAddress:]
  +[GCDAsyncSocket hostFromSockaddr4:]
  +[GCDAsyncSocket hostFromSockaddr6:]
  +[GCDAsyncSocket portFromSockaddr4:]
  +[GCDAsyncSocket portFromSockaddr6:]
  +[GCDAsyncSocket cfstreamThread]
  +[GCDAsyncSocket startCFStreamThreadIfNeeded]
  +[GCDAsyncSocket scheduleCFStreams:]
  +[GCDAsyncSocket unscheduleCFStreams:]
  +[GCDAsyncSocket stopCFStreamThreadIfNeeded]
  +[GCDAsyncSocket gaiError:]
  +[GCDAsyncSocket getHost:port:fromAddress:]
  +[GCDAsyncSocket getHost:port:family:fromAddress:]
  +[GCDAsyncSocket hostFromAddress:]
  +[GCDAsyncSocket CRLFData]
  +[GCDAsyncSocket ZeroData]

  // instance methods
  -[GCDAsyncSocket disconnect]
  -[GCDAsyncSocket isConnected]
  -[GCDAsyncSocket localPort]
  -[GCDAsyncSocket setUserData:]
  -[GCDAsyncSocket localAddress]
  -[GCDAsyncSocket isSecure]
  -[GCDAsyncSocket performBlock:]
  -[GCDAsyncSocket init]
  -[GCDAsyncSocket setDelegateQueue:]
  -[GCDAsyncSocket delegateQueue]
  -[GCDAsyncSocket isIPv6Enabled]
  -[GCDAsyncSocket dealloc]
  -[GCDAsyncSocket isIPv6]
  -[GCDAsyncSocket .cxx_destruct]
  -[GCDAsyncSocket closeWithError:]
  -[GCDAsyncSocket userData]
  -[GCDAsyncSocket isIPv4]
  -[GCDAsyncSocket socketFD]
  -[GCDAsyncSocket isDisconnected]
  -[GCDAsyncSocket initWithDelegate:delegateQueue:]
  -[GCDAsyncSocket setDelegate:]
  -[GCDAsyncSocket delegate]
  -[GCDAsyncSocket readDataWithTimeout:tag:]
  -[GCDAsyncSocket writeData:withTimeout:tag:]
  -[GCDAsyncSocket connectToHost:onPort:error:]
  -[GCDAsyncSocket startTLS:]
  -[GCDAsyncSocket enableBackgroundingOnSocket]
  -[GCDAsyncSocket acceptOnPort:error:]
  -[GCDAsyncSocket initWithDelegate:delegateQueue:socketQueue:]
  -[GCDAsyncSocket setDelegate:synchronously:]
  -[GCDAsyncSocket setDelegateQueue:synchronously:]
  -[GCDAsyncSocket setDelegate:delegateQueue:synchronously:]
  -[GCDAsyncSocket acceptOnInterface:port:error:]
  -[GCDAsyncSocket errnoErrorWithReason:]
  -[GCDAsyncSocket badConfigError:]
  -[GCDAsyncSocket getInterfaceAddress4:address6:fromDescription:port:]
  -[GCDAsyncSocket badParamError:]
  -[GCDAsyncSocket localPort4]
  -[GCDAsyncSocket doAccept:]
  -[GCDAsyncSocket setupReadAndWriteSourcesForNewlyConnectedSocket:]
  -[GCDAsyncSocket connectToHost:onPort:withTimeout:error:]
  -[GCDAsyncSocket connectToHost:onPort:viaInterface:withTimeout:error:]
  -[GCDAsyncSocket preConnectWithInterface:error:]
  -[GCDAsyncSocket lookup:didFail:]
  -[GCDAsyncSocket lookup:didSucceedWithAddress4:address6:]
  -[GCDAsyncSocket startConnectTimeout:]
  -[GCDAsyncSocket connectToAddress:viaInterface:withTimeout:error:]
  -[GCDAsyncSocket connectWithAddress4:address6:error:]
  -[GCDAsyncSocket otherError:]
  -[GCDAsyncSocket endConnectTimeout]
  -[GCDAsyncSocket didConnect:]
  -[GCDAsyncSocket didNotConnect:error:]
  -[GCDAsyncSocket createReadAndWriteStream]
  -[GCDAsyncSocket registerForStreamCallbacksIncludingReadWrite:]
  -[GCDAsyncSocket addStreamsToRunLoop]
  -[GCDAsyncSocket openStreams]
  -[GCDAsyncSocket connectedHost]
  -[GCDAsyncSocket connectedPort]
  -[GCDAsyncSocket maybeDequeueRead]
  -[GCDAsyncSocket maybeDequeueWrite]
  -[GCDAsyncSocket doConnectTimeout]
  -[GCDAsyncSocket connectTimeoutError]
  -[GCDAsyncSocket endCurrentRead]
  -[GCDAsyncSocket endCurrentWrite]
  -[GCDAsyncSocket removeStreamsFromRunLoop]
  -[GCDAsyncSocket resumeReadSource]
  -[GCDAsyncSocket resumeWriteSource]
  -[GCDAsyncSocket maybeClose]
  -[GCDAsyncSocket connectedHostFromSocket4:]
  -[GCDAsyncSocket connectedHostFromSocket6:]
  -[GCDAsyncSocket connectedPortFromSocket4:]
  -[GCDAsyncSocket connectedPortFromSocket6:]
  -[GCDAsyncSocket localHostFromSocket4:]
  -[GCDAsyncSocket localHostFromSocket6:]
  -[GCDAsyncSocket localPortFromSocket4:]
  -[GCDAsyncSocket localPortFromSocket6:]
  -[GCDAsyncSocket doReadData]
  -[GCDAsyncSocket doReadEOF]
  -[GCDAsyncSocket doWriteData]
  -[GCDAsyncSocket readDataWithTimeout:buffer:bufferOffset:maxLength:tag:]
  -[GCDAsyncSocket readDataToLength:withTimeout:buffer:bufferOffset:tag:]
  -[GCDAsyncSocket readDataToData:withTimeout:buffer:bufferOffset:maxLength:tag:]
  -[GCDAsyncSocket maybeStartTLS]
  -[GCDAsyncSocket setupReadTimerWithTimeout:]
  -[GCDAsyncSocket flushSSLBuffers]
  -[GCDAsyncSocket usingCFStreamForTLS]
  -[GCDAsyncSocket suspendReadSource]
  -[GCDAsyncSocket usingSecureTransportForTLS]
  -[GCDAsyncSocket ssl_continueSSLHandshake]
  -[GCDAsyncSocket readMaxedOutError]
  -[GCDAsyncSocket sslError:]
  -[GCDAsyncSocket completeCurrentRead]
  -[GCDAsyncSocket connectionClosedError]
  -[GCDAsyncSocket doReadTimeout]
  -[GCDAsyncSocket doReadTimeoutWithExtension:]
  -[GCDAsyncSocket readTimeoutError]
  -[GCDAsyncSocket setupWriteTimerWithTimeout:]
  -[GCDAsyncSocket suspendWriteSource]
  -[GCDAsyncSocket completeCurrentWrite]
  -[GCDAsyncSocket doWriteTimeout]
  -[GCDAsyncSocket doWriteTimeoutWithExtension:]
  -[GCDAsyncSocket writeTimeoutError]
  -[GCDAsyncSocket ssl_startTLS]
  -[GCDAsyncSocket cf_startTLS]
  -[GCDAsyncSocket ssl_shouldTrustPeer:stateIndex:]
  -[GCDAsyncSocket enableBackgroundingOnSocketWithCaveat:]
  -[GCDAsyncSocket initWithSocketQueue:]
  -[GCDAsyncSocket synchronouslySetDelegate:]
  -[GCDAsyncSocket synchronouslySetDelegateQueue:]
  -[GCDAsyncSocket getDelegate:delegateQueue:]
  -[GCDAsyncSocket setDelegate:delegateQueue:]
  -[GCDAsyncSocket synchronouslySetDelegate:delegateQueue:]
  -[GCDAsyncSocket isIPv4Enabled]
  -[GCDAsyncSocket setIPv4Enabled:]
  -[GCDAsyncSocket setIPv6Enabled:]
  -[GCDAsyncSocket isIPv4PreferredOverIPv6]
  -[GCDAsyncSocket setIPv4PreferredOverIPv6:]
  -[GCDAsyncSocket connectToAddress:error:]
  -[GCDAsyncSocket connectToAddress:withTimeout:error:]
  -[GCDAsyncSocket disconnectAfterReading]
  -[GCDAsyncSocket disconnectAfterWriting]
  -[GCDAsyncSocket disconnectAfterReadingAndWriting]
  -[GCDAsyncSocket errnoError]
  -[GCDAsyncSocket localHost]
  -[GCDAsyncSocket connectedHost4]
  -[GCDAsyncSocket connectedHost6]
  -[GCDAsyncSocket connectedPort4]
  -[GCDAsyncSocket connectedPort6]
  -[GCDAsyncSocket localHost4]
  -[GCDAsyncSocket localHost6]
  -[GCDAsyncSocket localPort6]
  -[GCDAsyncSocket connectedAddress]
  -[GCDAsyncSocket readDataWithTimeout:buffer:bufferOffset:tag:]
  -[GCDAsyncSocket readDataToLength:withTimeout:tag:]
  -[GCDAsyncSocket readDataToData:withTimeout:tag:]
  -[GCDAsyncSocket readDataToData:withTimeout:buffer:bufferOffset:tag:]
  -[GCDAsyncSocket readDataToData:withTimeout:maxLength:tag:]
  -[GCDAsyncSocket progressOfReadReturningTag:bytesDone:total:]
  -[GCDAsyncSocket progressOfWriteReturningTag:bytesDone:total:]
  -[GCDAsyncSocket sslReadWithBuffer:length:]
  -[GCDAsyncSocket sslWriteWithBuffer:length:]
  -[GCDAsyncSocket cf_finishSSLHandshake]
  -[GCDAsyncSocket cf_abortSSLHandshake:]
  -[GCDAsyncSocket autoDisconnectOnClosedReadStream]
  -[GCDAsyncSocket setAutoDisconnectOnClosedReadStream:]
  -[GCDAsyncSocket markSocketQueueTargetQueue:]
  -[GCDAsyncSocket unmarkSocketQueueTargetQueue:]
  -[GCDAsyncSocket socket4FD]
  -[GCDAsyncSocket socket6FD]
  -[GCDAsyncSocket readStream]
  -[GCDAsyncSocket writeStream]
  -[GCDAsyncSocket enableBackgroundingOnSocketWithCaveat]
  -[GCDAsyncSocket sslContext]


AceObject(STProxy)
	// instance methods
	-[AceObject(STProxy) st_CFScripts]
	-[AceObject(STProxy) st_setCFScripts:]
	-[AceObject(STProxy) st_replaceRefIDsWithID:]
	-[AceObject(STProxy) st_hasRequestCompleted]

SARequestCompleted(STProxy)
	// instance methods
	-[SARequestCompleted(STProxy) st_hasRequestCompleted]

SAAddResultObjects(STProxy)
	// instance methods
	-[SAAddResultObjects(STProxy) st_setCFScripts:]
	-[SAAddResultObjects(STProxy) st_replaceRefIDsWithID:]
	-[SAAddResultObjects(STProxy) st_hasRequestCompleted]
	-[SAAddResultObjects(STProxy) st_cfscripts]

SACFSignal(STProxy)
	// instance methods
	-[SACFSignal(STProxy) st_setCFScripts:]
	-[SACFSignal(STProxy) st_cfscripts]

SACFFetchScriptResponse(STProxy)
	// instance methods
	-[SACFFetchScriptResponse(STProxy) st_CFScripts]
	-[SACFFetchScriptResponse(STProxy) st_setCFScripts:]

01 00 0600 /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices: AFAccount 
01 00 0600 /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices: AFAnalytics 
01 00 0600 /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices: AFAnalyticsObserverConnection 
01 00 0600 /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices: AFSettingsConnection 
01 00 0600 /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices: AFSpeechRequestOptions 
01 00 0400 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: AceObject 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 0800 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0400 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAAddResultObjects 
01 00 0400 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAAssistantLoaded 
01 00 0400 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SABaseCommand 
01 00 0400 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SACFFetchScriptResponse 
01 00 0400 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SACFFlowCommand 
01 00 0400 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SACFFlowCompleted 
01 00 0400 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SACFSignal 
01 00 0400 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAGetResultObjects 
01 00 0400 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SALoadAssistant 
01 00 0400 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SARequestCompleted 
01 00 0400 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SASFinishSpeech 
01 00 0400 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SASStartSpeechRequest 
01 00 0400 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAStartRequest 
01 00 0500 /System/Library/PrivateFrameworks/SiriCore.framework/SiriCore: SiriCoreAceSerialization 
01 00 0500 /System/Library/PrivateFrameworks/SiriCore.framework/SiriCore: SiriCoreDataDecompressor 
01 00 0500 /System/Library/PrivateFrameworks/SiriCore.framework/SiriCore: SiriCoreZlibDataCompressor 
01 00 0500 /System/Library/PrivateFrameworks/SiriCore.framework/SiriCore: SiriCoreZlibDataDecompressor 
