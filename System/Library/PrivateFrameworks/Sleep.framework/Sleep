|| __DATA.__common _HKSPWakeUpMinuteDefault
|| __DATA.__common _HKSPWindDownMinutesMinimum
|| __DATA.__data _HKSPBedtimeHourDefault
|| __DATA.__data _HKSPBedtimeMinuteDefault
|| __DATA.__data _HKSPSleepDurationGoalHoursDefault
|| __DATA.__data _HKSPSleepDurationGoalHoursMaximum
|| __DATA.__data _HKSPSleepDurationGoalHoursMinimum
|| __DATA.__data _HKSPSleepDurationGoalHoursStep
|| __DATA.__data _HKSPSleepLockScreenOverrideAllowShortcutsKey
|| __DATA.__data _HKSPSleepLockScreenOverrideWatchBatteryLevelKey
|| __DATA.__data _HKSPSleepLogSubsystem
|| __DATA.__data _HKSPUpcomingAlarmMaximumInterval
|| __DATA.__data _HKSPWakeUpHourDefault
|| __DATA.__data _HKSPWindDownMinutesDefault
|| __DATA.__data _HKSPWindDownMinutesMaximum
|| __DATA.__data _HKSPWindDownMinutesOnboardingMinimum
|| __DATA.__data _HKSPWindDownMinutesStep
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPAlarmConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPAnalyticsDailyReportEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPAnalyticsOnboardingEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPAnalyticsOnboardingInfo
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPAnalyticsSleepRoomEntryEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPAnalyticsSleepScheduleChangeEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPAnalyticsSleepScheduleChangeInfo
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPAnalyticsWindDownEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPAnalyticsWindDownEventData
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPAnalyticsWindDownEventDataWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPChange
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPChangeSet
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPDictionaryDiff
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPDictionarySerializer
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPMutableAlarmConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPMutableSleepEventRecord
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPMutableSleepSchedule
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPMutableSleepScheduleOccurrence
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPMutableSleepSettings
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPMuteMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPOverrideOccurrenceGenerationResult
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPPersistentSyncAnchorContainer
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPProperty
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPProvenanceInfo
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPRelationshipChange
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPResolvedSleepScheduleOccurrence
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPSleepHealthDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPSleepModeButtonModel
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPSleepScheduleOccurrence
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPSleepScheduleRange
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPSleepWidgetManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPAlarmConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPAnalyticsDailyReportEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPAnalyticsOnboardingEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPAnalyticsOnboardingInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPAnalyticsSleepRoomEntryEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPAnalyticsSleepScheduleChangeEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPAnalyticsSleepScheduleChangeInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPAnalyticsWindDownEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPAnalyticsWindDownEventData
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPAnalyticsWindDownEventDataWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPChange
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPChangeSet
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPDictionaryDiff
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPDictionarySerializer
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPMutableAlarmConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPMutableSleepEventRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPMutableSleepSchedule
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPMutableSleepScheduleOccurrence
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPMutableSleepSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPMuteMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPOverrideOccurrenceGenerationResult
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPPersistentSyncAnchorContainer
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPProperty
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPProvenanceInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPRelationshipChange
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPResolvedSleepScheduleOccurrence
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPSleepHealthDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPSleepModeButtonModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPSleepScheduleOccurrence
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPSleepScheduleRange
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPSleepWidgetManager
|| __DATA_CONST.__const _HKSPAlarmAllowsSnoozeKey
|| __DATA_CONST.__const _HKSPAlarmEnabledKey
|| __DATA_CONST.__const _HKSPAlarmPlayOptionsKey
|| __DATA_CONST.__const _HKSPAlarmSoundVolumeKey
|| __DATA_CONST.__const _HKSPAlarmToneIdentifierKey
|| __DATA_CONST.__const _HKSPAlarmVersionKey
|| __DATA_CONST.__const _HKSPAlarmVibrationIdentifierKey
|| __DATA_CONST.__const _HKSPAnalyticsDefaultsDomain
|| __DATA_CONST.__const _HKSPAnalyticsDeviceMac
|| __DATA_CONST.__const _HKSPAnalyticsDevicePad
|| __DATA_CONST.__const _HKSPAnalyticsDevicePhone
|| __DATA_CONST.__const _HKSPAnalyticsDeviceWatch
|| __DATA_CONST.__const _HKSPAnalyticsEventNameDailyReport
|| __DATA_CONST.__const _HKSPAnalyticsEventNameOnboardingSteps
|| __DATA_CONST.__const _HKSPAnalyticsEventNameScheduleChange
|| __DATA_CONST.__const _HKSPAnalyticsEventNameSleepRoomEntry
|| __DATA_CONST.__const _HKSPAnalyticsEventNameWindDown
|| __DATA_CONST.__const _HKSPAnalyticsPayloadKeyActiveWatchProductType
|| __DATA_CONST.__const _HKSPAnalyticsPayloadKeyDevice
|| __DATA_CONST.__const _HKSPAnalyticsPayloadKeyOnboardingAction
|| __DATA_CONST.__const _HKSPAnalyticsPayloadKeyOnboardingEntryPoint
|| __DATA_CONST.__const _HKSPAnalyticsPayloadKeyOnboardingStep
|| __DATA_CONST.__const _HKSPAnalyticsPayloadKeyProvenancePresentation
|| __DATA_CONST.__const _HKSPAnalyticsPayloadKeyProvenanceSource
|| __DATA_CONST.__const _HKSPAnalyticsPayloadKeyScheduleChangeApplication
|| __DATA_CONST.__const _HKSPAnalyticsPayloadKeySleepOnboardedStatus
|| __DATA_CONST.__const _HKSPAnalyticsPayloadKeySleepTrackingStatus
|| __DATA_CONST.__const _HKSPAnalyticsPayloadKeyWindDownActionPresented
|| __DATA_CONST.__const _HKSPAnalyticsPayloadKeyWindDownActionUsed
|| __DATA_CONST.__const _HKSPAnalyticsPayloadKeyWindDownWeeksSinceOnboarded
|| __DATA_CONST.__const _HKSPAnalyticsSleepScheduleChangeApplicationKey
|| __DATA_CONST.__const _HKSPAnalyticsSleepScheduleChangeProvenanceInfoKey
|| __DATA_CONST.__const _HKSPAnalyticsStoreUserDefaultsKey
|| __DATA_CONST.__const _HKSPBedtimeReminderCategory
|| __DATA_CONST.__const _HKSPBedtimeReminderChangeNextAlarmAction
|| __DATA_CONST.__const _HKSPBedtimeReminderIdentifier
|| __DATA_CONST.__const _HKSPBedtimeReminderTurnOnNextAlarmAction
|| __DATA_CONST.__const _HKSPBedtimeRemindersKey
|| __DATA_CONST.__const _HKSPBundleID
|| __DATA_CONST.__const _HKSPCachedHasShortcutsKey
|| __DATA_CONST.__const _HKSPChargingReminderAlarmEnabledUserInfoKey
|| __DATA_CONST.__const _HKSPChargingReminderCategory
|| __DATA_CONST.__const _HKSPChargingReminderIdentifier
|| __DATA_CONST.__const _HKSPChargingReminderSleepTrackingEnabledUserInfoKey
|| __DATA_CONST.__const _HKSPChargingRemindersKey
|| __DATA_CONST.__const _HKSPClockAppBundleIdentifier
|| __DATA_CONST.__const _HKSPDaemonBundleID
|| __DATA_CONST.__const _HKSPDayOccurrenceAlarmKey
|| __DATA_CONST.__const _HKSPDayOccurrenceBedtimeComponentsKey
|| __DATA_CONST.__const _HKSPDayOccurrenceDayKey
|| __DATA_CONST.__const _HKSPDayOccurrenceHourKey
|| __DATA_CONST.__const _HKSPDayOccurrenceMinuteKey
|| __DATA_CONST.__const _HKSPDayOccurrenceMonthKey
|| __DATA_CONST.__const _HKSPDayOccurrenceVersionKey
|| __DATA_CONST.__const _HKSPDayOccurrenceWakeUpComponentsKey
|| __DATA_CONST.__const _HKSPDayOccurrenceYearKey
|| __DATA_CONST.__const _HKSPDebugSleepModeAlphaKey
|| __DATA_CONST.__const _HKSPDebugSleepModeKey
|| __DATA_CONST.__const _HKSPEditWakeUpActionAction
|| __DATA_CONST.__const _HKSPEventRecordLastModifiedDateKey
|| __DATA_CONST.__const _HKSPEventRecordSyncAnchorKey
|| __DATA_CONST.__const _HKSPEventRecordVersionKey
|| __DATA_CONST.__const _HKSPFridayOccurrenceKey
|| __DATA_CONST.__const _HKSPGoodMorningDismissedDateKey
|| __DATA_CONST.__const _HKSPHideSensitiveUIKey
|| __DATA_CONST.__const _HKSPInternalDefaultsDomain
|| __DATA_CONST.__const _HKSPMondayOccurrenceKey
|| __DATA_CONST.__const _HKSPNanoSleepAppBundleIdentifier
|| __DATA_CONST.__const _HKSPNanoSleepAppLaunchURL
|| __DATA_CONST.__const _HKSPNanoWeatherAppLaunchURL
|| __DATA_CONST.__const _HKSPNotificationDismissGoodMorningAlert
|| __DATA_CONST.__const _HKSPNotificationPresentGoodMorningAlert
|| __DATA_CONST.__const _HKSPNotificationThreadIdentifier
|| __DATA_CONST.__const _HKSPOccurrenceBackingOccurrenceKey
|| __DATA_CONST.__const _HKSPOccurrenceVersionKey
|| __DATA_CONST.__const _HKSPOccurrenceWeekdaysKey
|| __DATA_CONST.__const _HKSPOneDayCoachingCategory
|| __DATA_CONST.__const _HKSPOneWeekCoachingCategory
|| __DATA_CONST.__const _HKSPOverrideOccurrenceKey
|| __DATA_CONST.__const _HKSPProvenancePresentationCycleTrackingRoom
|| __DATA_CONST.__const _HKSPProvenancePresentationDeepLink
|| __DATA_CONST.__const _HKSPProvenancePresentationSearch
|| __DATA_CONST.__const _HKSPProvenancePresentationShowAllHealthData
|| __DATA_CONST.__const _HKSPProvenancePresentationSleepRoom
|| __DATA_CONST.__const _HKSPProvenancePresentationSleepingWristTemperatureRoom
|| __DATA_CONST.__const _HKSPProvenancePresentationSummaryFeed
|| __DATA_CONST.__const _HKSPProvenancePresentationUnknown
|| __DATA_CONST.__const _HKSPProvenanceSourceClock
|| __DATA_CONST.__const _HKSPProvenanceSourceCycleTrackingOvulationConfirmationIntroduction
|| __DATA_CONST.__const _HKSPProvenanceSourceCycleTrackingOvulationConfirmationPromotion
|| __DATA_CONST.__const _HKSPProvenanceSourceShortcuts
|| __DATA_CONST.__const _HKSPProvenanceSourceSiri
|| __DATA_CONST.__const _HKSPProvenanceSourceSleepActionsEditingPromotion
|| __DATA_CONST.__const _HKSPProvenanceSourceSleepActionsPromotion
|| __DATA_CONST.__const _HKSPProvenanceSourceSleepActivity
|| __DATA_CONST.__const _HKSPProvenanceSourceSleepAlert
|| __DATA_CONST.__const _HKSPProvenanceSourceSleepBrowseTile
|| __DATA_CONST.__const _HKSPProvenanceSourceSleepCoachingPromotion
|| __DATA_CONST.__const _HKSPProvenanceSourceSleepCompanionSettings
|| __DATA_CONST.__const _HKSPProvenanceSourceSleepLockScreen
|| __DATA_CONST.__const _HKSPProvenanceSourceSleepModeButton
|| __DATA_CONST.__const _HKSPProvenanceSourceSleepSummaryTile
|| __DATA_CONST.__const _HKSPProvenanceSourceSleepTrackingPromotion
|| __DATA_CONST.__const _HKSPProvenanceSourceSleepWidget
|| __DATA_CONST.__const _HKSPProvenanceSourceSleepingWristTemperatureMisconfigurationTile
|| __DATA_CONST.__const _HKSPProvenanceSourceUnknown
|| __DATA_CONST.__const _HKSPSaturdayOccurrenceKey
|| __DATA_CONST.__const _HKSPScheduleEnabledKey
|| __DATA_CONST.__const _HKSPScheduleLastModifiedDateKey
|| __DATA_CONST.__const _HKSPScheduleSyncAnchorKey
|| __DATA_CONST.__const _HKSPScheduleVersionKey
|| __DATA_CONST.__const _HKSPScheduledSleepModeKey
|| __DATA_CONST.__const _HKSPSerializableClassPrefix
|| __DATA_CONST.__const _HKSPSerializationErrorDomain
|| __DATA_CONST.__const _HKSPSettingsLastModifiedDateKey
|| __DATA_CONST.__const _HKSPSettingsSyncAnchorKey
|| __DATA_CONST.__const _HKSPSettingsVersionKey
|| __DATA_CONST.__const _HKSPShareAcrossDevicesKey
|| __DATA_CONST.__const _HKSPSleepActivityConfigurationUIVisited
|| __DATA_CONST.__const _HKSPSleepCoachingOnboardingCompletedVersionKey
|| __DATA_CONST.__const _HKSPSleepCoachingOnboardingFirstCompletedDateKey
|| __DATA_CONST.__const _HKSPSleepDurationGoalKey
|| __DATA_CONST.__const _HKSPSleepEntitlementName
|| __DATA_CONST.__const _HKSPSleepErrorDomain
|| __DATA_CONST.__const _HKSPSleepEventIdentifierBedtime
|| __DATA_CONST.__const _HKSPSleepEventIdentifierBedtimeNotification
|| __DATA_CONST.__const _HKSPSleepEventIdentifierChargingReminderNotification
|| __DATA_CONST.__const _HKSPSleepEventIdentifierGoodMorningNotification
|| __DATA_CONST.__const _HKSPSleepEventIdentifierWakeDetectionNotification
|| __DATA_CONST.__const _HKSPSleepEventIdentifierWakeUp
|| __DATA_CONST.__const _HKSPSleepEventIdentifierWakeUpResultsNotification
|| __DATA_CONST.__const _HKSPSleepEventIdentifierWindDown
|| __DATA_CONST.__const _HKSPSleepEventIdentifierWindDownNotification
|| __DATA_CONST.__const _HKSPSleepHealthAppPluginBundleName
|| __DATA_CONST.__const _HKSPSleepHealthAppPluginBundleNameAndExtension
|| __DATA_CONST.__const _HKSPSleepLaunchURLRouteEditWindDownActions
|| __DATA_CONST.__const _HKSPSleepLaunchURLRouteManageSchedule
|| __DATA_CONST.__const _HKSPSleepLaunchURLRouteOnboardSleepCoaching
|| __DATA_CONST.__const _HKSPSleepLaunchURLRouteOnboardSleepTracking
|| __DATA_CONST.__const _HKSPSleepLaunchURLRouteOverrideNextScheduleOccurrence
|| __DATA_CONST.__const _HKSPSleepLaunchURLRouteTurnOnNextAlarm
|| __DATA_CONST.__const _HKSPSleepLaunchURLRouteViewSchedule
|| __DATA_CONST.__const _HKSPSleepLifecycleName
|| __DATA_CONST.__const _HKSPSleepLockEvent
|| __DATA_CONST.__const _HKSPSleepLogCategoryAction
|| __DATA_CONST.__const _HKSPSleepLogCategoryAnalytics
|| __DATA_CONST.__const _HKSPSleepLogCategoryApp
|| __DATA_CONST.__const _HKSPSleepLogCategoryClient
|| __DATA_CONST.__const _HKSPSleepLogCategoryDaemon
|| __DATA_CONST.__const _HKSPSleepLogCategoryDefault
|| __DATA_CONST.__const _HKSPSleepLogCategoryNotification
|| __DATA_CONST.__const _HKSPSleepLogCategoryPersist
|| __DATA_CONST.__const _HKSPSleepLogCategoryQuery
|| __DATA_CONST.__const _HKSPSleepLogCategorySchedule
|| __DATA_CONST.__const _HKSPSleepLogCategoryServer
|| __DATA_CONST.__const _HKSPSleepLogCategorySleep
|| __DATA_CONST.__const _HKSPSleepLogCategorySleepFocus
|| __DATA_CONST.__const _HKSPSleepLogCategorySleepLock
|| __DATA_CONST.__const _HKSPSleepLogCategorySleepMode
|| __DATA_CONST.__const _HKSPSleepLogCategorySync
|| __DATA_CONST.__const _HKSPSleepLogCategoryTest
|| __DATA_CONST.__const _HKSPSleepLogCategoryView
|| __DATA_CONST.__const _HKSPSleepLogCategoryWidgets
|| __DATA_CONST.__const _HKSPSleepLogCategoryXPC
|| __DATA_CONST.__const _HKSPSleepMachServiceName
|| __DATA_CONST.__const _HKSPSleepModeEvent
|| __DATA_CONST.__const _HKSPSleepModeIdentifier
|| __DATA_CONST.__const _HKSPSleepModeOptionsKey
|| __DATA_CONST.__const _HKSPSleepRoomSleepFocusPromotionDismissedKey
|| __DATA_CONST.__const _HKSPSleepScheduleValidationErrorReasonDescriptionKey
|| __DATA_CONST.__const _HKSPSleepScheduleValidationErrorReasonKey
|| __DATA_CONST.__const _HKSPSleepStageWidgetIdentifier
|| __DATA_CONST.__const _HKSPSleepTrackingKey
|| __DATA_CONST.__const _HKSPSleepTrackingOnboardingCompletedVersionKey
|| __DATA_CONST.__const _HKSPSleepTrackingOnboardingFirstCompletedDateKey
|| __DATA_CONST.__const _HKSPSleepWidgetBundleIdentifier
|| __DATA_CONST.__const _HKSPSleepWidgetContainerBundleIdentifier
|| __DATA_CONST.__const _HKSPSleepWidgetIdentifier
|| __DATA_CONST.__const _HKSPSleepWindDownShortcutsOnboardingCompletedVersionKey
|| __DATA_CONST.__const _HKSPSleepWindDownShortcutsOnboardingFirstCompletedDateKey
|| __DATA_CONST.__const _HKSPSpringBoardDefaultsDomain
|| __DATA_CONST.__const _HKSPSpringBoardGreetingDisabledKey
|| __DATA_CONST.__const _HKSPSpringBoardSuggestedPageCreatedKey
|| __DATA_CONST.__const _HKSPSundayOccurrenceKey
|| __DATA_CONST.__const _HKSPThursdayOccurrenceKey
|| __DATA_CONST.__const _HKSPTimeInBedTrackingKey
|| __DATA_CONST.__const _HKSPTuesdayOccurrenceKey
|| __DATA_CONST.__const _HKSPTwoWeekCoachingCategory
|| __DATA_CONST.__const _HKSPWakeDetectionCategory
|| __DATA_CONST.__const _HKSPWakeDetectionIdentifier
|| __DATA_CONST.__const _HKSPWakeDetectionNotificationAlarmEnabledUserInfoKey
|| __DATA_CONST.__const _HKSPWakeDetectionNotificationSleepModeOnUserInfoKey
|| __DATA_CONST.__const _HKSPWakeDetectionTurnOffAction
|| __DATA_CONST.__const _HKSPWakeUpAlarmDismissedDateKey
|| __DATA_CONST.__const _HKSPWakeUpAlarmSnoozedUntilDateKey
|| __DATA_CONST.__const _HKSPWakeUpConfirmedUntilDateKey
|| __DATA_CONST.__const _HKSPWakeUpEarlyNotificationConfirmedDateKey
|| __DATA_CONST.__const _HKSPWakeUpOverriddenDateKey
|| __DATA_CONST.__const _HKSPWakeUpResultsIdentifier
|| __DATA_CONST.__const _HKSPWakeUpResultsKey
|| __DATA_CONST.__const _HKSPWakeUpResultsNotificationCategoryUserInfoKey
|| __DATA_CONST.__const _HKSPWakeUpResultsNotificationEmbeddedFirstNameUserInfoKey
|| __DATA_CONST.__const _HKSPWakeUpResultsNotificationEndMorningIndexUserInfoKey
|| __DATA_CONST.__const _HKSPWakeUpResultsNotificationSleepDurationGoalAchievedCountUserInfoKey
|| __DATA_CONST.__const _HKSPWakeUpResultsNotificationSleepGoalDurationUserInfoKey
|| __DATA_CONST.__const _HKSPWakeUpResultsNotificationVariantUserInfoKey
|| __DATA_CONST.__const _HKSPWatchSleepFeaturesEnabledKey
|| __DATA_CONST.__const _HKSPWeatherAppLaunchURL
|| __DATA_CONST.__const _HKSPWednesdayOccurrenceKey
|| __DATA_CONST.__const _HKSPWindDownIdentifier
|| __DATA_CONST.__const _HKSPWindDownReminderCategory
|| __DATA_CONST.__const _HKSPWindDownTimeIntervalKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPAccumulator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPAnalyticsManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPAnalyticsStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPDNDConfigurationService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPDiagnostics
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPDictionaryDeserializer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPFeatureAvailabilityStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPHealthStoreProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPMutableSleepScheduleDayOccurrence
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPObserverSet
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPPersistentStateMachine
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPPersistentStateMachineState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPSensitiveUIMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPSleepEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPSleepEventRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPSleepEventTimeline
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPSleepEventTimelineBuilder
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPSleepEventTimelineResults
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPSleepFocusConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPSleepModeObject
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPSleepSchedule
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPSleepScheduleDayOccurrence
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPSleepScheduleModel
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPSleepScheduleStateObject
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPSleepSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPSleepStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPStateMachine
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPStateMachineState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPSyncAnchorContainer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPThrottler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPXPCClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPXPCClientIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPXPCConnectionInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPXPCConnectionListener
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPXPCConnectionProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPXPCMessage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKSPUserDefaultsStatePersistence
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPAccumulator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPAnalyticsManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPAnalyticsStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPDNDConfigurationService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPDiagnostics
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPDictionaryDeserializer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPFeatureAvailabilityStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPHealthStoreProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPMutableSleepScheduleDayOccurrence
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPObserverSet
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPPersistentStateMachine
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPPersistentStateMachineState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPSensitiveUIMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPSleepEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPSleepEventRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPSleepEventTimeline
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPSleepEventTimelineBuilder
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPSleepEventTimelineResults
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPSleepFocusConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPSleepModeObject
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPSleepSchedule
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPSleepScheduleDayOccurrence
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPSleepScheduleModel
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPSleepScheduleStateObject
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPSleepSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPSleepStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPStateMachine
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPStateMachineState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPSyncAnchorContainer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPThrottler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPXPCClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPXPCClientIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPXPCConnectionInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPXPCConnectionListener
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPXPCConnectionProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPXPCMessage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKSPUserDefaultsStatePersistence
|| __TEXT.__const _HKSPAlarmVolumeDefault
|| __TEXT.__const _HKSPGoodMorningAlertTimeOut
|| __TEXT.__const _HKSPSleepMaxOverdueEvent
|| __TEXT.__const _HKSPSleepModeOptionsDefault
|| __TEXT.__const _HKSPSleepScheduleStateNone
|| __TEXT.__const _HKSPWeekdaysEveryday
|| __TEXT.__const _HKSPWeekdaysUnset
|| __TEXT.__const _HKSPWeekdaysWeekdays
|| __TEXT.__const _HKSPWeekdaysWeekends
|| __TEXT.__const _HKSPWindDownAndBedtimeNotificationExpirationInterval
|| __TEXT.__const _HKSPWindDownAndBedtimeNotificationFiredBeforeEventInterval
|| __TEXT.__text _HKSPActivePairedDeviceApplicationsInstalledDistributedNotification
|| __TEXT.__text _HKSPActivePairedDeviceApplicationsUninstalledDistributedNotification
|| __TEXT.__text _HKSPAlarmConfigurationProperties
|| __TEXT.__text _HKSPAlarmConfigurationPropertiesForEquivalency
|| __TEXT.__text _HKSPAlarmConfigurationPropertiesForSignificance
|| __TEXT.__text _HKSPAnalyticsEventHash
|| __TEXT.__text _HKSPAnalyticsEventsEqual
|| __TEXT.__text _HKSPAnalyticsScheduleChangeContext
|| __TEXT.__text _HKSPAnalyticsSleepScheduleChangeApplicationFromValue
|| __TEXT.__text _HKSPApplyChangesToObject
|| __TEXT.__text _HKSPBatteryLevel
|| __TEXT.__text _HKSPCanResolveChangesToObject
|| __TEXT.__text _HKSPCompareWeekdaysInCalendar
|| __TEXT.__text _HKSPCompareWeekdaysInCurrentCalendar
|| __TEXT.__text _HKSPCurrentDateProvider
|| __TEXT.__text _HKSPDayForNSGregorianCalendarDay
|| __TEXT.__text _HKSPDayForWeekdays
|| __TEXT.__text _HKSPDaysForWeekdays
|| __TEXT.__text _HKSPDaysForWeekdaysInCalendar
|| __TEXT.__text _HKSPDefaultScheduleProvider
|| __TEXT.__text _HKSPDispatchQueueName
|| __TEXT.__text _HKSPEnumerateDaysOfWeek
|| __TEXT.__text _HKSPEnumerateDaysOfWeekInCalendar
|| __TEXT.__text _HKSPEnumerateDaysOfWeekStartingOnDay
|| __TEXT.__text _HKSPEnumerateWeekdays
|| __TEXT.__text _HKSPEvaluateChangesToObject
|| __TEXT.__text _HKSPFreezeMutableObject
|| __TEXT.__text _HKSPGenerateChangeSetBetweenObjects
|| __TEXT.__text _HKSPGenerateSleepStoreIdentifier
|| __TEXT.__text _HKSPIdentifierStringForWeekdays
|| __TEXT.__text _HKSPImmediateQueueBackedScheduler
|| __TEXT.__text _HKSPIsCharging
|| __TEXT.__text _HKSPIsHomePod
|| __TEXT.__text _HKSPIsRemoveSpacesForTimeFormatEnabled
|| __TEXT.__text _HKSPIsSmallCapsForUnitsEnabled
|| __TEXT.__text _HKSPIsValidDate
|| __TEXT.__text _HKSPLocalizedString
|| __TEXT.__text _HKSPLogCategoryForCategory
|| __TEXT.__text _HKSPLogForCategory
|| __TEXT.__text _HKSPMainQueueBackedScheduler
|| __TEXT.__text _HKSPManualImmediateQueueBackedScheduler
|| __TEXT.__text _HKSPMutableObjectCopy
|| __TEXT.__text _HKSPNextDay
|| __TEXT.__text _HKSPNilify
|| __TEXT.__text _HKSPNullify
|| __TEXT.__text _HKSPOriginalObject
|| __TEXT.__text _HKSPPowerLog
|| __TEXT.__text _HKSPPreviousDay
|| __TEXT.__text _HKSPPreviousDayInWeekdays
|| __TEXT.__text _HKSPQueueBackedScheduler
|| __TEXT.__text _HKSPResetUserDefaults
|| __TEXT.__text _HKSPScreenTimeURL
|| __TEXT.__text _HKSPSerialDispatchQueueBackedScheduler
|| __TEXT.__text _HKSPSerialDispatchQueueBackedSchedulerWithQoS
|| __TEXT.__text _HKSPSerializableKeyForClass
|| __TEXT.__text _HKSPSleepClientInterface
|| __TEXT.__text _HKSPSleepEventComparator
|| __TEXT.__text _HKSPSleepEventRecordProperties
|| __TEXT.__text _HKSPSleepEventRecordPropertiesForEquivalency
|| __TEXT.__text _HKSPSleepEventRecordPropertiesForPersist
|| __TEXT.__text _HKSPSleepEventRecordPropertiesForSignificance
|| __TEXT.__text _HKSPSleepEventRecordPropertiesForSync
|| __TEXT.__text _HKSPSleepFocusConfigurationURL
|| __TEXT.__text _HKSPSleepFocusOnboardingURL
|| __TEXT.__text _HKSPSleepLockScreenClientInterface
|| __TEXT.__text _HKSPSleepLockScreenRemoteContentHostInterface
|| __TEXT.__text _HKSPSleepLockScreenRemoteContentServiceInterface
|| __TEXT.__text _HKSPSleepLockScreenServerInterface
|| __TEXT.__text _HKSPSleepModeChangeReasonTreatedAsAutomation
|| __TEXT.__text _HKSPSleepModeChangeReasonTreatedAsExpected
|| __TEXT.__text _HKSPSleepModeChangeReasonTreatedAsUserRequested
|| __TEXT.__text _HKSPSleepModeChangeReasonTreatedAsUserRequestedLocally
|| __TEXT.__text _HKSPSleepScheduleDayOccurrenceProperties
|| __TEXT.__text _HKSPSleepScheduleDayOccurrencePropertiesForEquivalency
|| __TEXT.__text _HKSPSleepScheduleDayOccurrencePropertiesForRelationships
|| __TEXT.__text _HKSPSleepScheduleDayOccurrencePropertiesForSignificance
|| __TEXT.__text _HKSPSleepScheduleOccurrenceProperties
|| __TEXT.__text _HKSPSleepScheduleOccurrencePropertiesForEquivalency
|| __TEXT.__text _HKSPSleepScheduleProperties
|| __TEXT.__text _HKSPSleepSchedulePropertiesForEquivalency
|| __TEXT.__text _HKSPSleepSchedulePropertiesForPersist
|| __TEXT.__text _HKSPSleepSchedulePropertiesForRelationships
|| __TEXT.__text _HKSPSleepSchedulePropertiesForSignificance
|| __TEXT.__text _HKSPSleepSchedulePropertiesForSync
|| __TEXT.__text _HKSPSleepScheduleStateChangeReasonIsExpected
|| __TEXT.__text _HKSPSleepScheduleStateIsForBedtime
|| __TEXT.__text _HKSPSleepScheduleStateIsForWindDown
|| __TEXT.__text _HKSPSleepScheduleUnwrap
|| __TEXT.__text _HKSPSleepScheduleWrapWithSyncAnchor
|| __TEXT.__text _HKSPSleepServerInterface
|| __TEXT.__text _HKSPSleepSettingsDefaultValues
|| __TEXT.__text _HKSPSleepSettingsPerGizmoProperties
|| __TEXT.__text _HKSPSleepSettingsProperties
|| __TEXT.__text _HKSPSleepSettingsPropertiesForEquivalency
|| __TEXT.__text _HKSPSleepSettingsPropertiesForPersist
|| __TEXT.__text _HKSPSleepSettingsPropertiesForSignificance
|| __TEXT.__text _HKSPSleepSettingsPropertiesForSync
|| __TEXT.__text _HKSPSleepURL
|| __TEXT.__text _HKSPSleepURLWithOptions
|| __TEXT.__text _HKSPSleepURLWithProvenanceInfo
|| __TEXT.__text _HKSPSleepWatchAppURL
|| __TEXT.__text _HKSPSyncAnchorClass
|| __TEXT.__text _HKSPSyncAnchorDefaultValue
|| __TEXT.__text _HKSPUserDefaultsStatePersistence
|| __TEXT.__text _HKSPWatchKitApplicationLaunchURL
|| __TEXT.__text _HKSPWeekdayDaysInCalendar
|| __TEXT.__text _HKSPWeekdayDaysInCurrentCalendar
|| __TEXT.__text _HKSPWeekdaysAreConsecutive
|| __TEXT.__text _HKSPWeekdaysAreConsecutiveInCalendar
|| __TEXT.__text _HKSPWeekdaysEnumerateDays
|| __TEXT.__text _HKSPWeekdaysEnumerateDaysInCalendar
|| __TEXT.__text _HKSPWeekdaysFromDay
|| __TEXT.__text _HKSPWeekdaysFromDays
|| __TEXT.__text _HKSPWeekdaysIsSingleDay
|| __TEXT.__text _HKSPWeekdaysShiftBackOneDay
|| __TEXT.__text _HKSPWeekendDaysInCalendar
|| __TEXT.__text _HKSPWeekendDaysInCurrentCalendar
|| __TEXT.__text _HKSPWidgetStateShowsSleepData
|| __TEXT.__text _HKSleepScheduleWeekdaysFromHKSPWeekdays
|| __TEXT.__text _NSDateIsOnHKSPDayInCalendar
|| __TEXT.__text _NSGregorianCalendarDayForHKSPDay
|| __TEXT.__text _NSGregorianCalendarDaysForWeekdays
|| __TEXT.__text _NSStringForHKSPDay
|| __TEXT.__text _NSStringFromHKSPAlarmPlayOptions
|| __TEXT.__text _NSStringFromHKSPAlarmSource
|| __TEXT.__text _NSStringFromHKSPDevice
|| __TEXT.__text _NSStringFromHKSPSleepEventTimelineResultsSleepScheduleInvalidReason
|| __TEXT.__text _NSStringFromHKSPSleepLockScreenState
|| __TEXT.__text _NSStringFromHKSPSleepMode
|| __TEXT.__text _NSStringFromHKSPSleepModeChangeReason
|| __TEXT.__text _NSStringFromHKSPSleepModeOptions
|| __TEXT.__text _NSStringFromHKSPSleepScheduleState
|| __TEXT.__text _NSStringFromHKSPSleepScheduleStateChangeReason
|| __TEXT.__text _NSStringFromHKSPSleepWidgetState
|| __TEXT.__text _NSStringFromHKSPWeekdays
__ AppConduit: _ACXRemoteApplicationsInstalledDistributedNotification
__ AppConduit: _ACXRemoteApplicationsUninstalledDistributedNotification
__ AppConduit: _OBJC_CLASS_$_ACXDeviceConnection
__ BaseBoard: _OBJC_CLASS_$_BSDescriptionBuilder
__ BaseBoard: _OBJC_CLASS_$_BSEqualsBuilder
__ BaseBoard: _OBJC_CLASS_$_BSHashBuilder
__ CoreAnalytics: _AnalyticsSendEvent
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _NSCalendarIdentifierGregorian
__ CoreFoundation: _NSDateFormatterPatternCharacterKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDateComponents
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ DoNotDisturb: _OBJC_CLASS_$_DNDGlobalConfigurationService
__ DoNotDisturb: _OBJC_CLASS_$_DNDModeConfigurationService
__ Foundation: _NSClassFromString
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSStringFromClass
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSCoder
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSDateInterval
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableCharacterSet
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLQueryItem
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_CLASS_$_NSXPCListener
__ Foundation: _OBJC_METACLASS_$_NSCoder
__ HealthKit: _HKDaysInAWeek
__ HealthKit: _HKErrorDomain
__ HealthKit: _HKFeatureAvailabilityContextTipsAppNotificationEligibility
__ HealthKit: _HKFeatureAvailabilityContextTipsAppVisibility
__ HealthKit: _HKFeatureIdentifierIsProvidedBySleepDaemon
__ HealthKit: _HKFeatureIdentifierSleepActions
__ HealthKit: _HKFeatureIdentifierSleepCoaching
__ HealthKit: _HKFeatureIdentifierSleepTracking
__ HealthKit: _HKFeatureSettingsKeyEnabled
__ HealthKit: _HKHealthAppScheme
__ HealthKit: _HKImproveHealthAndActivityAnalyticsAllowed
__ HealthKit: _HKSleepScheduleWeekdaysAll
__ HealthKit: _OBJC_CLASS_$_HKFeatureAvailabilityOnboardingEligibility
__ HealthKit: _OBJC_CLASS_$_HKFeatureAvailabilityRequirementSet
__ HealthKit: _OBJC_CLASS_$_HKFeatureAvailabilityRequirements
__ HealthKit: _OBJC_CLASS_$_HKFeatureOnboardingRecord
__ HealthKit: _OBJC_CLASS_$_HKFeatureSettings
__ HealthKit: _OBJC_CLASS_$_HKHealthStore
__ HealthKit: _OBJC_CLASS_$_HKOnboardingCompletion
__ HealthKit: _OBJC_CLASS_$_HKQuantity
__ HealthKit: _OBJC_CLASS_$_HKQuantitySample
__ HealthKit: _OBJC_CLASS_$_HKQuantityType
__ HealthKit: _OBJC_CLASS_$_HKRegionAvailability
__ HealthKit: _OBJC_CLASS_$_HKSleepSchedule
__ HealthKit: _OBJC_CLASS_$__HKBehavior
__ HealthKit: __HKLogDroppedError
__ IOKit: _IOPSDrawingUnlimitedPower
__ IOKit: _IOPSGetPercentRemaining
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ MobileKeyBag: _MKBGetDeviceLockState
__ NanoPreferencesSync: _OBJC_CLASS_$_NPSManager
__ NanoRegistry: _NRDevicePropertyHomeButtonType
__ NanoRegistry: _NRDevicePropertyProductType
__ NanoRegistry: _NRPairedDeviceRegistryDeviceDidBecomeActive
__ NanoRegistry: _NRPairedDeviceRegistryDeviceDidPairNotification
__ NanoRegistry: _NRPairedDeviceRegistryDeviceDidUnpairNotification
__ NanoRegistry: _NRPairedDeviceRegistryPairedDeviceDidChangeCapabilitiesDarwinNotification
__ NanoRegistry: _OBJC_CLASS_$_NRPairedDeviceRegistry
__ NetAppsUtilities: _NAEmptyResult
__ NetAppsUtilities: _NAEqualObjects
__ NetAppsUtilities: _OBJC_CLASS_$_NAFuture
__ NetAppsUtilities: _OBJC_CLASS_$_NAScheduler
__ PowerLog: _PLLogRegisteredEvent
__ SleepHealth: _OBJC_CLASS_$_HKSleepHealthStore
__ SoftLinking: __sl_dlopen
__ libMobileGestalt.dylib: _MGGetProductType
__ libMobileGestalt.dylib: _MGGetStringAnswer
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___strlcpy_chk
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __xpc_type_dictionary
__ libSystem.B.dylib: __xpc_type_endpoint
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_suspend
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_state_add_handler
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x11
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x27
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x5
__ libobjc.A.dylib: _objc_retain_x6
__ libobjc.A.dylib: _objc_retain_x7
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_retain_x9
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
HKSPAccumulator : NSObject
  // instance methods
  -[HKSPAccumulator initWithInterval:updateBlock:scheduler:]
  -[HKSPAccumulator .cxx_destruct]
  -[HKSPAccumulator initWithInterval:updateBlock:]
  -[HKSPAccumulator accumulateValues:]
  -[HKSPAccumulator accumulateValue:]


HKSPAnalyticsSleepRoomEntryEvent : NSObject <HKSPAnalyticsEvent>
 @property  NSString *eventName
 @property  NSDictionary *eventPayload
 @property  NSArray *keysRequiringIHAGating
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKSPAnalyticsSleepRoomEntryEvent _payloadWithProvidenceInfo:isOnboarded:]

  // instance methods
  -[HKSPAnalyticsSleepRoomEntryEvent setEventName:]
  -[HKSPAnalyticsSleepRoomEntryEvent eventName]
  -[HKSPAnalyticsSleepRoomEntryEvent .cxx_destruct]
  -[HKSPAnalyticsSleepRoomEntryEvent eventPayload]
  -[HKSPAnalyticsSleepRoomEntryEvent initWithProvenanceInfo:isOnboarded:]
  -[HKSPAnalyticsSleepRoomEntryEvent setEventPayload:]


HKSPAnalyticsDailyReportEvent : NSObject <HKSPAnalyticsEvent>
 @property  BOOL isImproveHealthAndActivitySubmissionAllowed
 @property  NSNumber *userAge
 @property  NSString *biologicalSex
 @property  NSNumber *weeksSinceOnboardedSleepSchedule
 @property  NSNumber *weeksSinceOnboardedSleepTracking
 @property  NSNumber *weeksSinceOnboardedWindDownActions
 @property  NSString *activeWatchProductType
 @property  double sleepGoal
 @property  BOOL watchSleepTrackingEnabled
 @property  BOOL timeInBedTrackingEnabled
 @property  BOOL bedTimeWindDownRemindersEnabled
 @property  BOOL wakeUpResultsEnabled
 @property  BOOL scheduledSleepModeEnabled
 @property  BOOL chargeRemindersEnabled
 @property  BOOL scheduleDisabled
 @property  BOOL scheduleMigration
 @property  BOOL scheduleChangePast24Hours
 @property  BOOL scheduleChangePast7days
 @property  BOOL interactedWithWindDownLast24Hrs
 @property  BOOL useSleepScreen
 @property  BOOL alarmFriday
 @property  BOOL alarmMonday
 @property  BOOL alarmSaturday
 @property  BOOL alarmSunday
 @property  BOOL alarmThursday
 @property  BOOL alarmTuesday
 @property  BOOL alarmWednesday
 @property  BOOL scheduleFriday
 @property  BOOL scheduleMonday
 @property  BOOL scheduleSaturday
 @property  BOOL scheduleSunday
 @property  BOOL scheduleThursday
 @property  BOOL scheduleTuesday
 @property  BOOL scheduleWednesday
 @property  NSString *hapticToneIdentifierFriday
 @property  NSString *hapticToneIdentifierMonday
 @property  NSString *hapticToneIdentifierSaturday
 @property  NSString *hapticToneIdentifierSunday
 @property  NSString *hapticToneIdentifierThursday
 @property  NSString *hapticToneIdentifierTuesday
 @property  NSString *hapticToneIdentifierWednesday
 @property  BOOL isDefaultScheduleFriday
 @property  BOOL isDefaultScheduleMonday
 @property  BOOL isDefaultScheduleSaturday
 @property  BOOL isDefaultScheduleSunday
 @property  BOOL isDefaultScheduleThursday
 @property  BOOL isDefaultScheduleTuesday
 @property  BOOL isDefaultScheduleWednesday
 @property  NSNumber *stddevActualTimeAsleep
 @property  NSNumber *stddevScheduledTimeAsleep
 @property  NSNumber *stddevActualVsScheduledTimeAsleep
 @property  long long daysWornWatchToSleepInLast7Days
 @property  long long daysWornWatchToSleepInLast30Days
 @property  long long weekendDaysWornWatchToSleepInLast7Days
 @property  BOOL didWearWatchToSleepLastNight
 @property  double sleepDurationLastNight
 @property  double sleepStagePercentAwakeLastNight
 @property  double sleepStagePercentRemLastNight
 @property  double sleepStagePercentCoreLastNight
 @property  double sleepStagePercentDeepLastNight
 @property  NSString *eventName
 @property  NSDictionary *eventPayload
 @property  NSArray *keysRequiringIHAGating
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HKSPAnalyticsDailyReportEvent eventName]
  -[HKSPAnalyticsDailyReportEvent isImproveHealthAndActivitySubmissionAllowed]
  -[HKSPAnalyticsDailyReportEvent .cxx_destruct]
  -[HKSPAnalyticsDailyReportEvent eventPayload]
  -[HKSPAnalyticsDailyReportEvent biologicalSex]
  -[HKSPAnalyticsDailyReportEvent setBiologicalSex:]
  -[HKSPAnalyticsDailyReportEvent keysRequiringIHAGating]
  -[HKSPAnalyticsDailyReportEvent setIsImproveHealthAndActivitySubmissionAllowed:]
  -[HKSPAnalyticsDailyReportEvent userAge]
  -[HKSPAnalyticsDailyReportEvent setUserAge:]
  -[HKSPAnalyticsDailyReportEvent weeksSinceOnboardedSleepSchedule]
  -[HKSPAnalyticsDailyReportEvent setWeeksSinceOnboardedSleepSchedule:]
  -[HKSPAnalyticsDailyReportEvent weeksSinceOnboardedSleepTracking]
  -[HKSPAnalyticsDailyReportEvent setWeeksSinceOnboardedSleepTracking:]
  -[HKSPAnalyticsDailyReportEvent weeksSinceOnboardedWindDownActions]
  -[HKSPAnalyticsDailyReportEvent setWeeksSinceOnboardedWindDownActions:]
  -[HKSPAnalyticsDailyReportEvent activeWatchProductType]
  -[HKSPAnalyticsDailyReportEvent setActiveWatchProductType:]
  -[HKSPAnalyticsDailyReportEvent sleepGoal]
  -[HKSPAnalyticsDailyReportEvent setSleepGoal:]
  -[HKSPAnalyticsDailyReportEvent watchSleepTrackingEnabled]
  -[HKSPAnalyticsDailyReportEvent setWatchSleepTrackingEnabled:]
  -[HKSPAnalyticsDailyReportEvent timeInBedTrackingEnabled]
  -[HKSPAnalyticsDailyReportEvent setTimeInBedTrackingEnabled:]
  -[HKSPAnalyticsDailyReportEvent bedTimeWindDownRemindersEnabled]
  -[HKSPAnalyticsDailyReportEvent setBedTimeWindDownRemindersEnabled:]
  -[HKSPAnalyticsDailyReportEvent wakeUpResultsEnabled]
  -[HKSPAnalyticsDailyReportEvent setWakeUpResultsEnabled:]
  -[HKSPAnalyticsDailyReportEvent scheduledSleepModeEnabled]
  -[HKSPAnalyticsDailyReportEvent setScheduledSleepModeEnabled:]
  -[HKSPAnalyticsDailyReportEvent chargeRemindersEnabled]
  -[HKSPAnalyticsDailyReportEvent setChargeRemindersEnabled:]
  -[HKSPAnalyticsDailyReportEvent scheduleDisabled]
  -[HKSPAnalyticsDailyReportEvent setScheduleDisabled:]
  -[HKSPAnalyticsDailyReportEvent scheduleMigration]
  -[HKSPAnalyticsDailyReportEvent setScheduleMigration:]
  -[HKSPAnalyticsDailyReportEvent scheduleChangePast24Hours]
  -[HKSPAnalyticsDailyReportEvent setScheduleChangePast24Hours:]
  -[HKSPAnalyticsDailyReportEvent scheduleChangePast7days]
  -[HKSPAnalyticsDailyReportEvent setScheduleChangePast7days:]
  -[HKSPAnalyticsDailyReportEvent interactedWithWindDownLast24Hrs]
  -[HKSPAnalyticsDailyReportEvent setInteractedWithWindDownLast24Hrs:]
  -[HKSPAnalyticsDailyReportEvent useSleepScreen]
  -[HKSPAnalyticsDailyReportEvent setUseSleepScreen:]
  -[HKSPAnalyticsDailyReportEvent alarmFriday]
  -[HKSPAnalyticsDailyReportEvent setAlarmFriday:]
  -[HKSPAnalyticsDailyReportEvent alarmMonday]
  -[HKSPAnalyticsDailyReportEvent setAlarmMonday:]
  -[HKSPAnalyticsDailyReportEvent alarmSaturday]
  -[HKSPAnalyticsDailyReportEvent setAlarmSaturday:]
  -[HKSPAnalyticsDailyReportEvent alarmSunday]
  -[HKSPAnalyticsDailyReportEvent setAlarmSunday:]
  -[HKSPAnalyticsDailyReportEvent alarmThursday]
  -[HKSPAnalyticsDailyReportEvent setAlarmThursday:]
  -[HKSPAnalyticsDailyReportEvent alarmTuesday]
  -[HKSPAnalyticsDailyReportEvent setAlarmTuesday:]
  -[HKSPAnalyticsDailyReportEvent alarmWednesday]
  -[HKSPAnalyticsDailyReportEvent setAlarmWednesday:]
  -[HKSPAnalyticsDailyReportEvent scheduleFriday]
  -[HKSPAnalyticsDailyReportEvent setScheduleFriday:]
  -[HKSPAnalyticsDailyReportEvent scheduleMonday]
  -[HKSPAnalyticsDailyReportEvent setScheduleMonday:]
  -[HKSPAnalyticsDailyReportEvent scheduleSaturday]
  -[HKSPAnalyticsDailyReportEvent setScheduleSaturday:]
  -[HKSPAnalyticsDailyReportEvent scheduleSunday]
  -[HKSPAnalyticsDailyReportEvent setScheduleSunday:]
  -[HKSPAnalyticsDailyReportEvent scheduleThursday]
  -[HKSPAnalyticsDailyReportEvent setScheduleThursday:]
  -[HKSPAnalyticsDailyReportEvent scheduleTuesday]
  -[HKSPAnalyticsDailyReportEvent setScheduleTuesday:]
  -[HKSPAnalyticsDailyReportEvent scheduleWednesday]
  -[HKSPAnalyticsDailyReportEvent setScheduleWednesday:]
  -[HKSPAnalyticsDailyReportEvent hapticToneIdentifierFriday]
  -[HKSPAnalyticsDailyReportEvent setHapticToneIdentifierFriday:]
  -[HKSPAnalyticsDailyReportEvent hapticToneIdentifierMonday]
  -[HKSPAnalyticsDailyReportEvent setHapticToneIdentifierMonday:]
  -[HKSPAnalyticsDailyReportEvent hapticToneIdentifierSaturday]
  -[HKSPAnalyticsDailyReportEvent setHapticToneIdentifierSaturday:]
  -[HKSPAnalyticsDailyReportEvent hapticToneIdentifierSunday]
  -[HKSPAnalyticsDailyReportEvent setHapticToneIdentifierSunday:]
  -[HKSPAnalyticsDailyReportEvent hapticToneIdentifierThursday]
  -[HKSPAnalyticsDailyReportEvent setHapticToneIdentifierThursday:]
  -[HKSPAnalyticsDailyReportEvent hapticToneIdentifierTuesday]
  -[HKSPAnalyticsDailyReportEvent setHapticToneIdentifierTuesday:]
  -[HKSPAnalyticsDailyReportEvent hapticToneIdentifierWednesday]
  -[HKSPAnalyticsDailyReportEvent setHapticToneIdentifierWednesday:]
  -[HKSPAnalyticsDailyReportEvent isDefaultScheduleFriday]
  -[HKSPAnalyticsDailyReportEvent setIsDefaultScheduleFriday:]
  -[HKSPAnalyticsDailyReportEvent isDefaultScheduleMonday]
  -[HKSPAnalyticsDailyReportEvent setIsDefaultScheduleMonday:]
  -[HKSPAnalyticsDailyReportEvent isDefaultScheduleSaturday]
  -[HKSPAnalyticsDailyReportEvent setIsDefaultScheduleSaturday:]
  -[HKSPAnalyticsDailyReportEvent isDefaultScheduleSunday]
  -[HKSPAnalyticsDailyReportEvent setIsDefaultScheduleSunday:]
  -[HKSPAnalyticsDailyReportEvent isDefaultScheduleThursday]
  -[HKSPAnalyticsDailyReportEvent setIsDefaultScheduleThursday:]
  -[HKSPAnalyticsDailyReportEvent isDefaultScheduleTuesday]
  -[HKSPAnalyticsDailyReportEvent setIsDefaultScheduleTuesday:]
  -[HKSPAnalyticsDailyReportEvent isDefaultScheduleWednesday]
  -[HKSPAnalyticsDailyReportEvent setIsDefaultScheduleWednesday:]
  -[HKSPAnalyticsDailyReportEvent stddevActualTimeAsleep]
  -[HKSPAnalyticsDailyReportEvent setStddevActualTimeAsleep:]
  -[HKSPAnalyticsDailyReportEvent stddevScheduledTimeAsleep]
  -[HKSPAnalyticsDailyReportEvent setStddevScheduledTimeAsleep:]
  -[HKSPAnalyticsDailyReportEvent stddevActualVsScheduledTimeAsleep]
  -[HKSPAnalyticsDailyReportEvent setStddevActualVsScheduledTimeAsleep:]
  -[HKSPAnalyticsDailyReportEvent daysWornWatchToSleepInLast7Days]
  -[HKSPAnalyticsDailyReportEvent setDaysWornWatchToSleepInLast7Days:]
  -[HKSPAnalyticsDailyReportEvent daysWornWatchToSleepInLast30Days]
  -[HKSPAnalyticsDailyReportEvent setDaysWornWatchToSleepInLast30Days:]
  -[HKSPAnalyticsDailyReportEvent weekendDaysWornWatchToSleepInLast7Days]
  -[HKSPAnalyticsDailyReportEvent setWeekendDaysWornWatchToSleepInLast7Days:]
  -[HKSPAnalyticsDailyReportEvent didWearWatchToSleepLastNight]
  -[HKSPAnalyticsDailyReportEvent setDidWearWatchToSleepLastNight:]
  -[HKSPAnalyticsDailyReportEvent sleepDurationLastNight]
  -[HKSPAnalyticsDailyReportEvent setSleepDurationLastNight:]
  -[HKSPAnalyticsDailyReportEvent sleepStagePercentAwakeLastNight]
  -[HKSPAnalyticsDailyReportEvent setSleepStagePercentAwakeLastNight:]
  -[HKSPAnalyticsDailyReportEvent sleepStagePercentRemLastNight]
  -[HKSPAnalyticsDailyReportEvent setSleepStagePercentRemLastNight:]
  -[HKSPAnalyticsDailyReportEvent sleepStagePercentCoreLastNight]
  -[HKSPAnalyticsDailyReportEvent setSleepStagePercentCoreLastNight:]
  -[HKSPAnalyticsDailyReportEvent sleepStagePercentDeepLastNight]
  -[HKSPAnalyticsDailyReportEvent setSleepStagePercentDeepLastNight:]


HKSPAnalyticsWindDownEvent : NSObject <HKSPAnalyticsEvent>
 @property  NSString *eventName
 @property  NSDictionary *eventPayload
 @property  NSArray *keysRequiringIHAGating
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKSPAnalyticsWindDownEvent _payloadValueForWindDownAction:]

  // instance methods
  -[HKSPAnalyticsWindDownEvent setEventName:]
  -[HKSPAnalyticsWindDownEvent eventName]
  -[HKSPAnalyticsWindDownEvent .cxx_destruct]
  -[HKSPAnalyticsWindDownEvent eventPayload]
  -[HKSPAnalyticsWindDownEvent setEventPayload:]
  -[HKSPAnalyticsWindDownEvent initWithWindDownEventData:watchProductType:weeksSinceOnboarded:]


HKSPStateMachine : NSObject <HKSPStateMachineDelegate, HKSPStateMachineInfoProvider, HKSPStateMachineEventHandler>
 @property  BOOL initialized
 @property  NSArray *allStates
 @property  <HKSPStateMachineDelegate> *delegate
 @property  <HKSPStateMachineInfoProvider> *infoProvider
 @property  HKSPStateMachineState *currentState
 @property  NSString *currentStateIdentifier
 @property  <NAScheduler> *callbackScheduler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HKSPStateMachine setInitialState:]
  -[HKSPStateMachine initialized]
  -[HKSPStateMachine initWithDelegate:infoProvider:]
  -[HKSPStateMachine loggingCategory]
  -[HKSPStateMachine allStates]
  -[HKSPStateMachine delegate]
  -[HKSPStateMachine .cxx_destruct]
  -[HKSPStateMachine updateState]
  -[HKSPStateMachine infoProvider]
  -[HKSPStateMachine enterState:]
  -[HKSPStateMachine currentState]
  -[HKSPStateMachine stateMachineName]
  -[HKSPStateMachine updateStateWithContext:]
  -[HKSPStateMachine currentStateIdentifier]
  -[HKSPStateMachine enterState:context:]
  -[HKSPStateMachine notifyDelegateWithBlock:]


HKSPSleepScheduleRange : NSObject
 @property  NSDateComponents *latestWakeUpComponents
 @property  NSDateComponents *earliestWakeUpComponents
 @property  NSDateComponents *latestBedtimeComponents
 @property  NSDateComponents *earliestBedtimeComponents
 @property  BOOL earliestBedtimeIsOnPreviousDay

  // instance methods
  -[HKSPSleepScheduleRange .cxx_destruct]
  -[HKSPSleepScheduleRange succinctDescription]
  -[HKSPSleepScheduleRange succinctDescriptionBuilder]
  -[HKSPSleepScheduleRange initWithLatestWakeUpComponents:latestBedtimeComponents:earliestWakeUpComponents:earliestBedtimeComponents:earliestBedtimeIsOnPreviousDay:]
  -[HKSPSleepScheduleRange latestWakeUpComponents]
  -[HKSPSleepScheduleRange earliestWakeUpComponents]
  -[HKSPSleepScheduleRange latestBedtimeComponents]
  -[HKSPSleepScheduleRange earliestBedtimeComponents]
  -[HKSPSleepScheduleRange earliestBedtimeIsOnPreviousDay]


HKSPSleepScheduleModel : NSObject <NSCopying, NAEquatable, NAHashable>
 @property  BOOL goodMorningAlertNotificationEnabled
 @property  BOOL goodMorningScreenEnabled
 @property  BOOL chargingRemindersEnabled
 @property  HKSPSleepSchedule *sleepSchedule
 @property  HKSPSleepSettings *sleepSettings
 @property  HKSPSleepEventRecord *sleepEventRecord
 @property  NSDate *lastModifiedDate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKSPSleepScheduleModel templateModelForSchedule:]
  +[HKSPSleepScheduleModel _computeUpcomingDateIntervalForDate:]
  +[HKSPSleepScheduleModel sleepScheduleModelWithSleepSchedule:sleepSettings:sleepEventRecord:]

  // instance methods
  -[HKSPSleepScheduleModel goodMorningScreenEnabled]
  -[HKSPSleepScheduleModel _upcomingEventsDueAfterDate:searchBackwards:]
  -[HKSPSleepScheduleModel sleepSchedule]
  -[HKSPSleepScheduleModel upcomingEventsDueAfterDate:]
  -[HKSPSleepScheduleModel modelByApplyingChangesFromOccurrence:]
  -[HKSPSleepScheduleModel previousOccurrenceBeforeDate:]
  -[HKSPSleepScheduleModel previousResolvedOccurrenceBeforeDate:]
  -[HKSPSleepScheduleModel goodMorningAlertNotificationEnabled]
  -[HKSPSleepScheduleModel _computeOriginalWakeUpForOverrideDateHelper:]
  -[HKSPSleepScheduleModel previousEventWithIdentifier:dueBeforeDate:]
  -[HKSPSleepScheduleModel descriptionWithMultilinePrefix:]
  -[HKSPSleepScheduleModel lastModifiedDate]
  -[HKSPSleepScheduleModel descriptionBuilderWithMultilinePrefix:]
  -[HKSPSleepScheduleModel chargingRemindersEnabledWithLogObject:]
  -[HKSPSleepScheduleModel generateOverrideOccurrenceFromTemplateForCurrentDate:gregorianCalendar:]
  -[HKSPSleepScheduleModel nextOccurrenceAfterDate:]
  -[HKSPSleepScheduleModel generateOverrideOccurrenceFromTemplateForCurrentDate:gregorianCalendar:schedule:]
  -[HKSPSleepScheduleModel generateOverrideOccurrenceForCurrentDate:gregorianCalendar:schedule:]
  -[HKSPSleepScheduleModel .cxx_destruct]
  -[HKSPSleepScheduleModel nextEventWithIdentifier:dueAfterDate:]
  -[HKSPSleepScheduleModel sleepSettings]
  -[HKSPSleepScheduleModel upcomingOccurrenceAfterDate:]
  -[HKSPSleepScheduleModel succinctDescription]
  -[HKSPSleepScheduleModel nextOccurrenceInInterval:]
  -[HKSPSleepScheduleModel computeConfirmedWakeUpUntilDateForOverrideWakeUpDate:]
  -[HKSPSleepScheduleModel upcomingResolvedOccurrenceAfterDate:]
  -[HKSPSleepScheduleModel overrideOccurrenceGenerationResultForCurrentDate:gregorianCalendar:schedule:]
  -[HKSPSleepScheduleModel nextResolvedOccurrenceAfterDate:]
  -[HKSPSleepScheduleModel generateOverrideOccurrenceFromTemplateForCurrentDate:gregorianCalendar:mutableOccurrence:]
  -[HKSPSleepScheduleModel _timelineResultsDueAfterDate:]
  -[HKSPSleepScheduleModel _upcomingResolvedOccurrencesDueAfterDate:searchBackwards:]
  -[HKSPSleepScheduleModel goodMorningAlertNotificationsEnabledWithLogObject:]
  -[HKSPSleepScheduleModel nextResolvedOccurrenceInInterval:]
  -[HKSPSleepScheduleModel timelineForDate:]
  -[HKSPSleepScheduleModel copyWithZone:]
  -[HKSPSleepScheduleModel previousEventsDueBeforeDate:]
  -[HKSPSleepScheduleModel alarmStatusForOccurrence:]
  -[HKSPSleepScheduleModel computeConfirmedWakeUpUntilDateForEarlyWakeUpDate:]
  -[HKSPSleepScheduleModel isEquivalentTo:]
  -[HKSPSleepScheduleModel generateOverrideOccurrenceForCurrentDate:gregorianCalendar:]
  -[HKSPSleepScheduleModel succinctDescriptionBuilder]
  -[HKSPSleepScheduleModel generateOverrideOccurrenceFromTemplateForCurrentDate:]
  -[HKSPSleepScheduleModel chargingRemindersEnabled]
  -[HKSPSleepScheduleModel nextEventDueAfterDate:]
  -[HKSPSleepScheduleModel sleepEventRecord]
  -[HKSPSleepScheduleModel computeTemplateGenerationDateForCurrentDate:]
  -[HKSPSleepScheduleModel goodMorningScreenEnabledWithLogObject:]
  -[HKSPSleepScheduleModel isEqual:]


_HKSPUserDefaultsStatePersistence : NSObject <HKSPStatePersistence>
 @property  <HKSPUserDefaults> *userDefaults

  // instance methods
  -[_HKSPUserDefaultsStatePersistence userDefaults]
  -[_HKSPUserDefaultsStatePersistence .cxx_destruct]
  -[_HKSPUserDefaultsStatePersistence initWithUserDefaults:]
  -[_HKSPUserDefaultsStatePersistence savePersistentState:identifier:error:]
  -[_HKSPUserDefaultsStatePersistence loadPersistentStateForIdentifier:allowedStates:error:]


_HKSPDefaultScheduleProvider : NSObject <HKSPSuggestionProvider>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_HKSPDefaultScheduleProvider hksp_suggestedSleepScheduleWithCompletion:]


HKSPChange : NSObject <NSSecureCoding, NSCopying, BSDescriptionProviding>
 @property  HKSPProperty *property
 @property  <NSObject><NSSecureCoding><NSCopying> *changedValue
 @property  <NSObject><NSSecureCoding><NSCopying> *originalValue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKSPChange supportsSecureCoding]
  +[HKSPChange allowedValueClasses]

  // instance methods
  -[HKSPChange property]
  -[HKSPChange descriptionWithMultilinePrefix:]
  -[HKSPChange encodeWithCoder:]
  -[HKSPChange descriptionBuilderWithMultilinePrefix:]
  -[HKSPChange .cxx_destruct]
  -[HKSPChange succinctDescription]
  -[HKSPChange copyWithZone:]
  -[HKSPChange succinctDescriptionBuilder]
  -[HKSPChange isEqual:]
  -[HKSPChange initWithCoder:]
  -[HKSPChange originalValue]
  -[HKSPChange initWithProperty:changedValue:originalValue:]
  -[HKSPChange changedValue]


HKSPRelationshipChange : HKSPChange
 @property  <HKSPMutableObject> *changedValue
 @property  <HKSPObject> *originalValue
 @property  BOOL isAdd
 @property  BOOL isUpdate
 @property  BOOL isRemove

  // instance methods
  -[HKSPRelationshipChange isUpdate]
  -[HKSPRelationshipChange initWithProperty:changedObject:originalObject:]
  -[HKSPRelationshipChange isAdd]
  -[HKSPRelationshipChange isRemove]


HKSPDiagnostics : NSObject
 @property  NSString *label
 @property  HKSPObserverSet *providers

  // instance methods
  -[HKSPDiagnostics _registerStateHandler]
  -[HKSPDiagnostics removeProvider:]
  -[HKSPDiagnostics addProvider:]
  -[HKSPDiagnostics initWithLabel:]
  -[HKSPDiagnostics providers]
  -[HKSPDiagnostics .cxx_destruct]
  -[HKSPDiagnostics label]


HKSPPersistentStateMachine : HKSPStateMachine <HKSPPersistentStateMachineEventHandler, HKSPPersistentStateMachineDelegate>
 @property  NSString *identifier
 @property  NSSet *allowedStates
 @property  <HKSPStatePersistence> *persistence
 @property  HKSPPersistentStateMachineState *currentState
 @property  NSDate *currentStateExpirationDate
 @property  NSArray *scheduledExpirationStateIdentifiers
 @property  @? currentDateProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <NAScheduler> *callbackScheduler

  // instance methods
  -[HKSPPersistentStateMachine identifier]
  -[HKSPPersistentStateMachine persistedState]
  -[HKSPPersistentStateMachine persistence]
  -[HKSPPersistentStateMachine scheduleStateExpiration]
  -[HKSPPersistentStateMachine .cxx_destruct]
  -[HKSPPersistentStateMachine currentDateProvider]
  -[HKSPPersistentStateMachine unscheduleStateExpiration]
  -[HKSPPersistentStateMachine initWithIdentifier:persistence:delegate:infoProvider:currentDateProvider:]
  -[HKSPPersistentStateMachine enterState:context:]
  -[HKSPPersistentStateMachine stateWithIdentifierDidExpire:]
  -[HKSPPersistentStateMachine initWithAllowedStates:delegate:infoProvider:]
  -[HKSPPersistentStateMachine initWithIdentifier:allowedStates:persistence:delegate:infoProvider:]
  -[HKSPPersistentStateMachine initWithIdentifier:allowedStates:persistence:delegate:infoProvider:currentDateProvider:]
  -[HKSPPersistentStateMachine scheduledExpirationStateIdentifiers]
  -[HKSPPersistentStateMachine currentStateExpirationDate]
  -[HKSPPersistentStateMachine allowedStates]


HKSPAnalyticsManager : NSObject
 @property  HKSPAnalyticsStore *analyticsStore
 @property  @? ihaOptInStatusProvider
 @property  @? diagnosticsOptInStatusProvider
 @property  @? analyticsEventConsumer

  // class methods
  +[HKSPAnalyticsManager defaultIsDiagnosticDataSubmissionAllowed]
  +[HKSPAnalyticsManager currentDeviceType]
  +[HKSPAnalyticsManager activePairedWatchProductType]

  // instance methods
  -[HKSPAnalyticsManager isImproveHealthAndActivitySubmissionAllowed]
  -[HKSPAnalyticsManager setIhaOptInStatusProvider:]
  -[HKSPAnalyticsManager .cxx_destruct]
  -[HKSPAnalyticsManager trackEvent:]
  -[HKSPAnalyticsManager diagnosticsOptInStatusProvider]
  -[HKSPAnalyticsManager trackEvents:]
  -[HKSPAnalyticsManager initWithUserDefaults:]
  -[HKSPAnalyticsManager setAnalyticsStore:]
  -[HKSPAnalyticsManager ihaOptInStatusProvider]
  -[HKSPAnalyticsManager analyticsEventConsumer]
  -[HKSPAnalyticsManager setDiagnosticsOptInStatusProvider:]
  -[HKSPAnalyticsManager isDiagnosticDataSubmissionAllowed]
  -[HKSPAnalyticsManager analyticsStore]
  -[HKSPAnalyticsManager setAnalyticsEventConsumer:]
  -[HKSPAnalyticsManager initWithUserDefaults:ihaOptInStatusProvider:diagnosticsOptInStatusProvider:analyticsEventConsumer:]


HKSPProvenanceInfo : NSObject
 @property  NSString *source
 @property  NSString *presentation

  // class methods
  +[HKSPProvenanceInfo unknownProvenance]

  // instance methods
  -[HKSPProvenanceInfo source]
  -[HKSPProvenanceInfo .cxx_destruct]
  -[HKSPProvenanceInfo presentation]
  -[HKSPProvenanceInfo isEqual:]
  -[HKSPProvenanceInfo initWithSource:presentation:]
  -[HKSPProvenanceInfo isEqualToProvenanceInfo:]


HKSPSleepModeButtonModel : NSObject <HKSPSleepStorePrivateObserver>
 @property  <HKSPSleepModeButtonModelDelegate> *delegate
 @property  HKSPSleepStore *sleepStore
 @property  long long sleepMode
 @property  _HKBehavior *behavior
 @property  BOOL selected
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HKSPSleepModeButtonModel behavior]
  -[HKSPSleepModeButtonModel sleepMode]
  -[HKSPSleepModeButtonModel sleepStore]
  -[HKSPSleepModeButtonModel delegate]
  -[HKSPSleepModeButtonModel setSelected:]
  -[HKSPSleepModeButtonModel .cxx_destruct]
  -[HKSPSleepModeButtonModel sleepStore:sleepModeOnDidChange:]
  -[HKSPSleepModeButtonModel initWithDelegate:]
  -[HKSPSleepModeButtonModel isSelected]
  -[HKSPSleepModeButtonModel initWithSleepStore:delegate:behavior:]
  -[HKSPSleepModeButtonModel _checkSleepModeState]
  -[HKSPSleepModeButtonModel _launchAppForOnboarding]
  -[HKSPSleepModeButtonModel _updateStateWithSleepMode:]
  -[HKSPSleepModeButtonModel _queue_updateStateWithSleepMode:]


HKSPAnalyticsSleepScheduleChangeInfo : NSObject
 @property  unsigned long application
 @property  NSString *activePairedWatchProductType
 @property  BOOL isSleepTrackingEnabled

  // instance methods
  -[HKSPAnalyticsSleepScheduleChangeInfo application]
  -[HKSPAnalyticsSleepScheduleChangeInfo .cxx_destruct]
  -[HKSPAnalyticsSleepScheduleChangeInfo activePairedWatchProductType]
  -[HKSPAnalyticsSleepScheduleChangeInfo initWithApplication:activePairedWatchProductType:isSleepTrackingEnabled:]
  -[HKSPAnalyticsSleepScheduleChangeInfo applicationPayloadValue]
  -[HKSPAnalyticsSleepScheduleChangeInfo isSleepTrackingEnabled]


HKSPObserverSet : NSObject
 @property  <NAScheduler> *callbackScheduler
 @property  {os_unfair_lock_s=I} observersLock
 @property  NSMapTable *observerRecords
 @property  unsigned long count

  // instance methods
  -[HKSPObserverSet enumerateObserversWithBlock:]
  -[HKSPObserverSet addObserver:wasFirst:]
  -[HKSPObserverSet containsObserver:]
  -[HKSPObserverSet addObserver:callbackScheduler:wasFirst:]
  -[HKSPObserverSet enumerateObserversWithFutureBlock:]
  -[HKSPObserverSet addObserver:]
  -[HKSPObserverSet observerRecords]
  -[HKSPObserverSet removeAllObservers]
  -[HKSPObserverSet .cxx_destruct]
  -[HKSPObserverSet callbackScheduler]
  -[HKSPObserverSet observersLock]
  -[HKSPObserverSet initWithCallbackScheduler:]
  -[HKSPObserverSet count]
  -[HKSPObserverSet _withLock:]
  -[HKSPObserverSet removeObserver:]
  -[HKSPObserverSet addObserver:callbackScheduler:]
  -[HKSPObserverSet removeObserver:wasLast:]
  -[HKSPObserverSet init]


_HKSPObserverRecord : NSObject
 @property  id observer
 @property  <NAScheduler> *callbackScheduler

  // instance methods
  -[_HKSPObserverRecord .cxx_destruct]
  -[_HKSPObserverRecord callbackScheduler]
  -[_HKSPObserverRecord observer]
  -[_HKSPObserverRecord initWithObserver:callbackScheduler:]


HKSPDictionarySerializer : NSCoder
 @property  unsigned long serializationOptions
 @property  NSError *internalError
 @property  NSMutableArray *stack
 @property  NSMutableSet *mutableSerializedClasses
 @property  NSDictionary *serializedDictionary
 @property  NSSet *serializedClasses

  // instance methods
  -[HKSPDictionarySerializer encodeBool:forKey:]
  -[HKSPDictionarySerializer encodeFloat:forKey:]
  -[HKSPDictionarySerializer encodeInt:forKey:]
  -[HKSPDictionarySerializer stack]
  -[HKSPDictionarySerializer serialize:error:]
  -[HKSPDictionarySerializer encodeInt64:forKey:]
  -[HKSPDictionarySerializer encodeDouble:forKey:]
  -[HKSPDictionarySerializer encodeInteger:forKey:]
  -[HKSPDictionarySerializer encodeObject:forKey:]
  -[HKSPDictionarySerializer serializationOptions]
  -[HKSPDictionarySerializer allowsKeyedCoding]
  -[HKSPDictionarySerializer encodeInt32:forKey:]
  -[HKSPDictionarySerializer hksp_serializationOptions]
  -[HKSPDictionarySerializer _encodeObject:forKey:]
  -[HKSPDictionarySerializer .cxx_destruct]
  -[HKSPDictionarySerializer serializedDictionary]
  -[HKSPDictionarySerializer _dictionaryForProtocolObject:]
  -[HKSPDictionarySerializer encodeRootObject:]
  -[HKSPDictionarySerializer _encodeProtocolObject:forKey:]
  -[HKSPDictionarySerializer init]
  -[HKSPDictionarySerializer internalError]
  -[HKSPDictionarySerializer initWithSerializationOptions:]
  -[HKSPDictionarySerializer serializedClasses]
  -[HKSPDictionarySerializer mutableSerializedClasses]


HKSPChangeSet : NSObject <NSSecureCoding, NSCopying, BSDescriptionProviding>
 @property  NSMutableDictionary *changeDictionary
 @property  NSSet *topLevelChangeKeys
 @property  NSArray *changes
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKSPChangeSet supportsSecureCoding]

  // instance methods
  -[HKSPChangeSet changes]
  -[HKSPChangeSet hasChangeForPropertyIdentifier:]
  -[HKSPChangeSet descriptionWithMultilinePrefix:]
  -[HKSPChangeSet encodeWithCoder:]
  -[HKSPChangeSet descriptionBuilderWithMultilinePrefix:]
  -[HKSPChangeSet .cxx_destruct]
  -[HKSPChangeSet topLevelChangeKeys]
  -[HKSPChangeSet succinctDescription]
  -[HKSPChangeSet copyWithZone:]
  -[HKSPChangeSet initWithChangeDictionary:]
  -[HKSPChangeSet removeAllChanges]
  -[HKSPChangeSet succinctDescriptionBuilder]
  -[HKSPChangeSet addChange:]
  -[HKSPChangeSet applyChangeSet:]
  -[HKSPChangeSet changedValueForPropertyIdentifier:]
  -[HKSPChangeSet originalValueForPropertyIdentifier:]
  -[HKSPChangeSet changeDictionary]
  -[HKSPChangeSet isEqual:]
  -[HKSPChangeSet init]
  -[HKSPChangeSet initWithCoder:]


_HKSPScheduleAndProviderPair : NSObject
 @property  <HKSPSuggestionProvider> *provider
 @property  HKSPSleepSchedule *schedule

  // instance methods
  -[_HKSPScheduleAndProviderPair schedule]
  -[_HKSPScheduleAndProviderPair .cxx_destruct]
  -[_HKSPScheduleAndProviderPair provider]
  -[_HKSPScheduleAndProviderPair setSchedule:]
  -[_HKSPScheduleAndProviderPair setProvider:]


HKSPAnalyticsSleepScheduleChangeEvent : NSObject <HKSPAnalyticsEvent>
 @property  NSString *eventName
 @property  NSDictionary *eventPayload
 @property  NSArray *keysRequiringIHAGating
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKSPAnalyticsSleepScheduleChangeEvent _payloadWithApplication:isSleepTrackingEnabled:activeWatchProductType:provenanceSource:]

  // instance methods
  -[HKSPAnalyticsSleepScheduleChangeEvent setEventName:]
  -[HKSPAnalyticsSleepScheduleChangeEvent eventName]
  -[HKSPAnalyticsSleepScheduleChangeEvent .cxx_destruct]
  -[HKSPAnalyticsSleepScheduleChangeEvent eventPayload]
  -[HKSPAnalyticsSleepScheduleChangeEvent setEventPayload:]
  -[HKSPAnalyticsSleepScheduleChangeEvent initWithScheduleChangeInfo:provenanceInfo:]


HKSPMuteMonitor : NSObject
 @property  BOOL isMuted

  // instance methods
  -[HKSPMuteMonitor setIsMuted:]
  -[HKSPMuteMonitor dealloc]
  -[HKSPMuteMonitor isMuted]
  -[HKSPMuteMonitor .cxx_destruct]
  -[HKSPMuteMonitor addObserver:queue:]
  -[HKSPMuteMonitor removeObserver:]
  -[HKSPMuteMonitor init]
  -[HKSPMuteMonitor _updateIsMuted]


HKSPSleepEvent : NSObject <BSDescriptionProviding, NAEquatable, NAHashable, HKSPXPCObject, HKSPDictionarySerializable, NSCopying, NSSecureCoding>
 @property  BOOL isUserVisible
 @property  unsigned long type
 @property  NSDate *expirationDate
 @property  NSString *identifier
 @property  NSDate *dueDate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <HKSPSyncAnchor> *syncAnchor

  // class methods
  +[HKSPSleepEvent supportsSecureCoding]
  +[HKSPSleepEvent standardEventIdentifiers]
  +[HKSPSleepEvent sleepEventWithIdentifier:dueDate:type:]
  +[HKSPSleepEvent sleepEventWithIdentifier:dueDate:type:isUserVisible:]
  +[HKSPSleepEvent sleepEventWithIdentifier:dueDate:type:expirationDate:isUserVisible:]
  +[HKSPSleepEvent sleepEventWithIdentifier:dueDate:]
  +[HKSPSleepEvent sleepEventWithIdentifier:dueDate:expirationDate:isUserVisible:]
  +[HKSPSleepEvent sleepEventWithIdentifier:dueDate:isUserVisible:]

  // instance methods
  -[HKSPSleepEvent objectWithSyncAnchor:]
  -[HKSPSleepEvent isUserVisible]
  -[HKSPSleepEvent expirationDate]
  -[HKSPSleepEvent identifier]
  -[HKSPSleepEvent descriptionWithMultilinePrefix:]
  -[HKSPSleepEvent encodeWithCoder:]
  -[HKSPSleepEvent type]
  -[HKSPSleepEvent compare:]
  -[HKSPSleepEvent descriptionBuilderWithMultilinePrefix:]
  -[HKSPSleepEvent .cxx_destruct]
  -[HKSPSleepEvent succinctDescription]
  -[HKSPSleepEvent copyWithZone:]
  -[HKSPSleepEvent syncAnchor]
  -[HKSPSleepEvent succinctDescriptionBuilder]
  -[HKSPSleepEvent isEqual:]
  -[HKSPSleepEvent initWithCoder:]
  -[HKSPSleepEvent dueDate]
  -[HKSPSleepEvent initWithIdentifier:dueDate:type:expirationDate:isUserVisible:]
  -[HKSPSleepEvent isExpired:]


HKSPOverrideOccurrenceGenerationResult : NSObject
 @property  HKSPMutableSleepScheduleOccurrence *overrideOccurrence
 @property  BOOL wasGeneratedFromTemplate
 @property  BOOL upcomingOccurrenceWasOverride

  // instance methods
  -[HKSPOverrideOccurrenceGenerationResult overrideOccurrence]
  -[HKSPOverrideOccurrenceGenerationResult .cxx_destruct]
  -[HKSPOverrideOccurrenceGenerationResult setOverrideOccurrence:]
  -[HKSPOverrideOccurrenceGenerationResult wasGeneratedFromTemplate]
  -[HKSPOverrideOccurrenceGenerationResult setWasGeneratedFromTemplate:]
  -[HKSPOverrideOccurrenceGenerationResult upcomingOccurrenceWasOverride]
  -[HKSPOverrideOccurrenceGenerationResult setUpcomingOccurrenceWasOverride:]


HKSPDictionaryDeserializer : NSCoder
 @property  NSSet *allowedClasses
 @property  unsigned long serializationOptions
 @property  NSDictionary *serializedDictionary
 @property  NSMutableArray *stack

  // instance methods
  -[HKSPDictionaryDeserializer decodeInt64ForKey:]
  -[HKSPDictionaryDeserializer decodeFloatForKey:]
  -[HKSPDictionaryDeserializer decodeIntegerForKey:]
  -[HKSPDictionaryDeserializer decodeIntForKey:]
  -[HKSPDictionaryDeserializer decodeBoolForKey:]
  -[HKSPDictionaryDeserializer decodeDoubleForKey:]
  -[HKSPDictionaryDeserializer stack]
  -[HKSPDictionaryDeserializer decodeObjectForKey:]
  -[HKSPDictionaryDeserializer decodeInt32ForKey:]
  -[HKSPDictionaryDeserializer deserializeObjectOfClass:error:]
  -[HKSPDictionaryDeserializer serializationOptions]
  -[HKSPDictionaryDeserializer allowsKeyedCoding]
  -[HKSPDictionaryDeserializer hksp_serializationOptions]
  -[HKSPDictionaryDeserializer .cxx_destruct]
  -[HKSPDictionaryDeserializer serializedDictionary]
  -[HKSPDictionaryDeserializer allowedClasses]
  -[HKSPDictionaryDeserializer initWithAllowedClasses:serializedDictionary:serializationOptions:]
  -[HKSPDictionaryDeserializer _decodeDeserializable:error:]
  -[HKSPDictionaryDeserializer decodeTopLevelObjectOfClass:forKey:error:]
  -[HKSPDictionaryDeserializer _decodeObject:error:]
  -[HKSPDictionaryDeserializer initWithAllowedClasses:serializedDictionary:]


HKSPFeatureAvailabilityStore : NSObject <HKSPSleepStorePrivateObserver, HKFeatureAvailabilityProviding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *featureIdentifier

  // instance methods
  -[HKSPFeatureAvailabilityStore unregisterObserver:]
  -[HKSPFeatureAvailabilityStore _registerForNotifications]
  -[HKSPFeatureAvailabilityStore regionAvailabilityWithError:]
  -[HKSPFeatureAvailabilityStore _onboardingIneligibilityReasons]
  -[HKSPFeatureAvailabilityStore _sleepTrackingRequirements]
  -[HKSPFeatureAvailabilityStore _cachedOnboardingModelWithCompletion:]
  -[HKSPFeatureAvailabilityStore sleepStore:sleepSettingsDidChange:]
  -[HKSPFeatureAvailabilityStore canCompleteOnboardingForCountryCode:error:]
  -[HKSPFeatureAvailabilityStore initWithFeatureIdentifier:sleepStore:]
  -[HKSPFeatureAvailabilityStore _updateCachedFeatureSettingsModel]
  -[HKSPFeatureAvailabilityStore saveOnboardingCompletion:settings:completion:]
  -[HKSPFeatureAvailabilityStore _onboardedCountrySupportedStateForOnboardingModel:]
  -[HKSPFeatureAvailabilityStore _featureSettingsForOnboardingModel:featureSettingsModel:]
  -[HKSPFeatureAvailabilityStore featureIdentifier]
  -[HKSPFeatureAvailabilityStore sleepStore:sleepEventRecordDidChange:]
  -[HKSPFeatureAvailabilityStore onboardedCountryCodeSupportedStateWithError:]
  -[HKSPFeatureAvailabilityStore _isCurrentOnboardingVersionCompletedForOnboardingModel:]
  -[HKSPFeatureAvailabilityStore setCurrentOnboardingVersionCompletedForCountryCode:countryCodeProvenance:date:settings:completion:]
  -[HKSPFeatureAvailabilityStore _updatedCachedOnboardingModelWithCompletion:]
  -[HKSPFeatureAvailabilityStore dealloc]
  -[HKSPFeatureAvailabilityStore pairedFeatureAttributesWithError:]
  -[HKSPFeatureAvailabilityStore .cxx_destruct]
  -[HKSPFeatureAvailabilityStore earliestDateLowestOnboardingVersionCompletedWithError:]
  -[HKSPFeatureAvailabilityStore resetOnboardingWithCompletion:]
  -[HKSPFeatureAvailabilityStore getFeatureOnboardingRecordWithCompletion:]
  -[HKSPFeatureAvailabilityStore _notifyObserversForDidUpdateOnboarding]
  -[HKSPFeatureAvailabilityStore isCurrentOnboardingVersionCompletedWithError:]
  -[HKSPFeatureAvailabilityStore _lock_updatedCachedOnboardingModelWithError:didChange:]
  -[HKSPFeatureAvailabilityStore _defaultRequirements]
  -[HKSPFeatureAvailabilityStore removeFeatureSettingValueForKey:completion:]
  -[HKSPFeatureAvailabilityStore setFeatureSettingString:forKey:completion:]
  -[HKSPFeatureAvailabilityStore _notifyObserversForDidUpdateSettings]
  -[HKSPFeatureAvailabilityStore isFeatureCapabilitySupportedOnActivePairedDeviceWithError:]
  -[HKSPFeatureAvailabilityStore setFeatureSettingData:forKey:completion:]
  -[HKSPFeatureAvailabilityStore featureOnboardingRecordWithError:]
  -[HKSPFeatureAvailabilityStore _cachedOnboardingModelWithError:]
  -[HKSPFeatureAvailabilityStore _lock_updatedCachedFeatureSettingsModelWithError:didChange:]
  -[HKSPFeatureAvailabilityStore _pairedDeviceDidChange]
  -[HKSPFeatureAvailabilityStore _updateCachedOnboardingModel]
  -[HKSPFeatureAvailabilityStore initWithFeatureIdentifier:sleepStore:pairedDeviceRegistry:]
  -[HKSPFeatureAvailabilityStore _withLock:]
  -[HKSPFeatureAvailabilityStore isCurrentOnboardingVersionCompletedWithCompletion:]
  -[HKSPFeatureAvailabilityStore _onboardingCompletionForOnboardingModel:]
  -[HKSPFeatureAvailabilityStore _cachedFeatureSettingsModelWithError:]
  -[HKSPFeatureAvailabilityStore featureAvailabilityRequirementsWithError:]
  -[HKSPFeatureAvailabilityStore registerObserver:queue:]
  -[HKSPFeatureAvailabilityStore setFeatureSettingNumber:forKey:completion:]
  -[HKSPFeatureAvailabilityStore onboardingEligibilityForCountryCode:error:]


HKSPSleepModeObject : NSObject <HKSPXPCObject>
 @property  long long sleepMode
 @property  <HKSPSyncAnchor> *syncAnchor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKSPSleepModeObject supportsSecureCoding]

  // instance methods
  -[HKSPSleepModeObject objectWithSyncAnchor:]
  -[HKSPSleepModeObject sleepMode]
  -[HKSPSleepModeObject encodeWithCoder:]
  -[HKSPSleepModeObject .cxx_destruct]
  -[HKSPSleepModeObject copyWithZone:]
  -[HKSPSleepModeObject syncAnchor]
  -[HKSPSleepModeObject initWithSleepMode:syncAnchor:]
  -[HKSPSleepModeObject initWithCoder:]


HKSPXPCMessage : NSObject <BSDescriptionProviding>
 @property  NSString *identifier
 @property  @? block
 @property  unsigned long options
 @property  @? errorHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HKSPXPCMessage identifier]
  -[HKSPXPCMessage descriptionWithMultilinePrefix:]
  -[HKSPXPCMessage descriptionBuilderWithMultilinePrefix:]
  -[HKSPXPCMessage errorHandler]
  -[HKSPXPCMessage .cxx_destruct]
  -[HKSPXPCMessage succinctDescription]
  -[HKSPXPCMessage options]
  -[HKSPXPCMessage initWithIdentifier:block:options:errorHandler:]
  -[HKSPXPCMessage block]
  -[HKSPXPCMessage succinctDescriptionBuilder]


HKSPStateMachineState : NSObject <HKSPStateMachineEventHandler, NSCopying>
 @property  HKSPStateMachine *stateMachine
 @property  BOOL isCurrentState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HKSPStateMachineState setStateMachine:]
  -[HKSPStateMachineState stateMachine]
  -[HKSPStateMachineState didEnterWithPreviousState:context:]
  -[HKSPStateMachineState stateName]
  -[HKSPStateMachineState nextStateWithContext:]
  -[HKSPStateMachineState descriptionWithMultilinePrefix:]
  -[HKSPStateMachineState descriptionBuilderWithMultilinePrefix:]
  -[HKSPStateMachineState .cxx_destruct]
  -[HKSPStateMachineState succinctDescription]
  -[HKSPStateMachineState updateState]
  -[HKSPStateMachineState copyWithZone:]
  -[HKSPStateMachineState didExitWithNextState:context:]
  -[HKSPStateMachineState succinctDescriptionBuilder]
  -[HKSPStateMachineState isEqual:]
  -[HKSPStateMachineState stateIdentifier]
  -[HKSPStateMachineState initWithStateMachine:]
  -[HKSPStateMachineState updateStateWithContext:]
  -[HKSPStateMachineState isCurrentState]
  -[HKSPStateMachineState _willExitWithNextState:context:]
  -[HKSPStateMachineState _willEnterWithPreviousState:context:]
  -[HKSPStateMachineState _didExitWithNextState:context:]
  -[HKSPStateMachineState _didEnterWithPreviousState:context:]
  -[HKSPStateMachineState willExitWithNextState:context:]
  -[HKSPStateMachineState willEnterWithPreviousState:context:]
  -[HKSPStateMachineState equalsBuilderWithObject:]


HKSPSleepScheduleOccurrence : NSObject <BSDescriptionProviding, HKSPObject, HKSPDictionarySerializable, NAEquatable, NAHashable, NSMutableCopying>
 @property  HKSPSleepScheduleDayOccurrence *backingOccurrence
 @property  BOOL usesDefaultBedtimeAndWakeUpComponents
 @property  BOOL isInitialized
 @property  BOOL isRepeating
 @property  BOOL isSingleDayOverride
 @property  BOOL crossesDayBoundary
 @property  HKSPAlarmConfiguration *alarmConfiguration
 @property  NSDateComponents *bedtimeComponents
 @property  NSDateComponents *wakeUpComponents
 @property  unsigned long weekdays
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long version
 @property  NSDate *lastModifiedDate
 @property  NSSet *significantChanges
 @property  NSDictionary *relationshipChanges

  // class methods
  +[HKSPSleepScheduleOccurrence supportsSecureCoding]
  +[HKSPSleepScheduleOccurrence occurrenceWithWeekdays:backingOccurrence:]

  // instance methods
  -[HKSPSleepScheduleOccurrence isInitialized]
  -[HKSPSleepScheduleOccurrence copyFromObject:]
  -[HKSPSleepScheduleOccurrence sleepInterval]
  -[HKSPSleepScheduleOccurrence _equateTo:builderBuilderBlock:]
  -[HKSPSleepScheduleOccurrence bedtimeComponents]
  -[HKSPSleepScheduleOccurrence descriptionWithMultilinePrefix:]
  -[HKSPSleepScheduleOccurrence encodeWithCoder:]
  -[HKSPSleepScheduleOccurrence weekdays]
  -[HKSPSleepScheduleOccurrence descriptionBuilderWithMultilinePrefix:]
  -[HKSPSleepScheduleOccurrence mutableCopy]
  -[HKSPSleepScheduleOccurrence .cxx_destruct]
  -[HKSPSleepScheduleOccurrence isRepeating]
  -[HKSPSleepScheduleOccurrence succinctDescription]
  -[HKSPSleepScheduleOccurrence version]
  -[HKSPSleepScheduleOccurrence copyWithZone:]
  -[HKSPSleepScheduleOccurrence isEquivalentTo:]
  -[HKSPSleepScheduleOccurrence succinctDescriptionBuilder]
  -[HKSPSleepScheduleOccurrence mutableCopyWithZone:]
  -[HKSPSleepScheduleOccurrence initFromObject:]
  -[HKSPSleepScheduleOccurrence isEqual:]
  -[HKSPSleepScheduleOccurrence init]
  -[HKSPSleepScheduleOccurrence initWithCoder:]
  -[HKSPSleepScheduleOccurrence wakeUpComponents]
  -[HKSPSleepScheduleOccurrence alarmConfiguration]
  -[HKSPSleepScheduleOccurrence isSingleDayOverride]
  -[HKSPSleepScheduleOccurrence usesDefaultBedtimeAndWakeUpComponents]
  -[HKSPSleepScheduleOccurrence overrideOccurrenceWithWakeUpComponents:bedtimeComponents:]
  -[HKSPSleepScheduleOccurrence overrideOccurrenceTemplateForCurrentDate:gregorianCalendar:]
  -[HKSPSleepScheduleOccurrence convertToScheduledOccurrenceOnSameDaysAsOccurrence:]
  -[HKSPSleepScheduleOccurrence changesFromOccurrence:]
  -[HKSPSleepScheduleOccurrence overridesWakeUpForOccurrenceOnDate:gregorianCalendar:]
  -[HKSPSleepScheduleOccurrence overrideAppliesToOccurrence:gregorianCalendar:]
  -[HKSPSleepScheduleOccurrence overrideDayInCalendar:]
  -[HKSPSleepScheduleOccurrence nextDateIntervalWithWakeUpAfterDate:gregorianCalendar:]
  -[HKSPSleepScheduleOccurrence wakeUpDateForDate:day:searchBackwards:gregorianCalendar:]
  -[HKSPSleepScheduleOccurrence wakeUpDateForDate:searchBackwards:gregorianCalendar:]
  -[HKSPSleepScheduleOccurrence bedtimeDateForWakeUpDate:gregorianCalendar:]
  -[HKSPSleepScheduleOccurrence isValidOccurrence]
  -[HKSPSleepScheduleOccurrence crossesDayBoundary]
  -[HKSPSleepScheduleOccurrence isEquivalentToOverrideOccurrence:]
  -[HKSPSleepScheduleOccurrence isAlarmEquivalentToOverrideOccurrence:]
  -[HKSPSleepScheduleOccurrence backingOccurrence]


HKSPMutableSleepScheduleOccurrence : HKSPSleepScheduleOccurrence <HKSPMutableObject>
 @property  HKSPSleepScheduleDayOccurrence *backingOccurrence
 @property  NSDateComponents *bedtimeComponents
 @property  NSDateComponents *wakeUpComponents
 @property  unsigned long weekdays
 @property  HKSPAlarmConfiguration *alarmConfiguration
 @property  NSDate *lastModifiedDate
 @property  HKSPChangeSet *changeSet
 @property  <HKSPObject> *originalObject
 @property  unsigned long version
 @property  NSSet *significantChanges
 @property  NSDictionary *relationshipChanges
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKSPMutableSleepScheduleOccurrence supportsSecureCoding]

  // instance methods
  -[HKSPMutableSleepScheduleOccurrence encodeWithCoder:]
  -[HKSPMutableSleepScheduleOccurrence weekdays]
  -[HKSPMutableSleepScheduleOccurrence setWeekdays:]
  -[HKSPMutableSleepScheduleOccurrence mutableCopy]
  -[HKSPMutableSleepScheduleOccurrence .cxx_destruct]
  -[HKSPMutableSleepScheduleOccurrence changeSet]
  -[HKSPMutableSleepScheduleOccurrence freeze]
  -[HKSPMutableSleepScheduleOccurrence originalObject]
  -[HKSPMutableSleepScheduleOccurrence copyWithZone:]
  -[HKSPMutableSleepScheduleOccurrence init]
  -[HKSPMutableSleepScheduleOccurrence initWithCoder:]
  -[HKSPMutableSleepScheduleOccurrence alarmConfiguration]
  -[HKSPMutableSleepScheduleOccurrence setBedtimeComponents:]
  -[HKSPMutableSleepScheduleOccurrence setWakeUpComponents:]
  -[HKSPMutableSleepScheduleOccurrence backingOccurrence]
  -[HKSPMutableSleepScheduleOccurrence setBackingOccurrence:]
  -[HKSPMutableSleepScheduleOccurrence initWithTemplateOccurrence:]
  -[HKSPMutableSleepScheduleOccurrence turnOnWeekdays:]
  -[HKSPMutableSleepScheduleOccurrence turnOffWeekdays:]
  -[HKSPMutableSleepScheduleOccurrence turnOnAlarm]
  -[HKSPMutableSleepScheduleOccurrence turnOffAlarm]
  -[HKSPMutableSleepScheduleOccurrence setAlarmConfiguration:]
  -[HKSPMutableSleepScheduleOccurrence applyHourAndMinuteFromBedtimeComponents:wakeUpComponents:gregorianCalendar:]


HKSPPersistentStateMachineState : HKSPStateMachineState <HKSPPersistentStateMachineEventHandler, HKSPDictionarySerializable, NSCoding, NSCopying>
 @property  HKSPPersistentStateMachine *stateMachine
 @property  NSDateInterval *lifetimeInterval
 @property  NSDate *expirationDate
 @property  double expirationDuration
 @property  BOOL schedulesExpiration
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKSPPersistentStateMachineState infiniteInterval]
  +[HKSPPersistentStateMachineState _hasExpirationDate:]
  +[HKSPPersistentStateMachineState _isExpired:currentDate:]

  // instance methods
  -[HKSPPersistentStateMachineState stateDidExpireWithContext:]
  -[HKSPPersistentStateMachineState expirationDate]
  -[HKSPPersistentStateMachineState schedulesExpiration]
  -[HKSPPersistentStateMachineState encodeWithCoder:]
  -[HKSPPersistentStateMachineState .cxx_destruct]
  -[HKSPPersistentStateMachineState expirationDuration]
  -[HKSPPersistentStateMachineState copyWithZone:]
  -[HKSPPersistentStateMachineState succinctDescriptionBuilder]
  -[HKSPPersistentStateMachineState initWithCoder:]
  -[HKSPPersistentStateMachineState _isExpired]
  -[HKSPPersistentStateMachineState initWithStateMachine:]
  -[HKSPPersistentStateMachineState updateStateWithContext:]
  -[HKSPPersistentStateMachineState stateWithIdentifierDidExpire:]
  -[HKSPPersistentStateMachineState _willExitWithNextState:context:]
  -[HKSPPersistentStateMachineState _willEnterWithPreviousState:context:]
  -[HKSPPersistentStateMachineState _didExitWithNextState:context:]
  -[HKSPPersistentStateMachineState _didEnterWithPreviousState:context:]
  -[HKSPPersistentStateMachineState equalsBuilderWithObject:]
  -[HKSPPersistentStateMachineState _updateExpirationDate]
  -[HKSPPersistentStateMachineState _updatedLifetimeIntervalWithStartDate:]
  -[HKSPPersistentStateMachineState _resetLifetimeInterval]
  -[HKSPPersistentStateMachineState lifetimeInterval]
  -[HKSPPersistentStateMachineState setLifetimeInterval:]


HKSPThrottler : NSObject
  // instance methods
  -[HKSPThrottler execute]
  -[HKSPThrottler .cxx_destruct]
  -[HKSPThrottler initWithInterval:executeBlock:]
  -[HKSPThrottler initWithInterval:executeBlock:scheduler:]


HKSPSensitiveUIMonitor : NSObject
 @property  HKSPObserverSet *observers
 @property  NSUserDefaults *userDefaults
 @property  NPSManager *npsManager
 @property  BOOL sensitiveUIOverridden
 @property  BOOL hideSensitiveUI
 @property  BOOL needPrefsUpdate
 @property  {os_unfair_lock_s=I} lock
 @property  BOOL currentSensitiveUIHidden

  // class methods
  +[HKSPSensitiveUIMonitor sharedMonitor]

  // instance methods
  -[HKSPSensitiveUIMonitor userDefaults]
  -[HKSPSensitiveUIMonitor unregisterForNotifications]
  -[HKSPSensitiveUIMonitor addObserver:]
  -[HKSPSensitiveUIMonitor dealloc]
  -[HKSPSensitiveUIMonitor _hideSensitiveUI]
  -[HKSPSensitiveUIMonitor .cxx_destruct]
  -[HKSPSensitiveUIMonitor initWithCallbackScheduler:]
  -[HKSPSensitiveUIMonitor needPrefsUpdate]
  -[HKSPSensitiveUIMonitor observeValueForKeyPath:ofObject:change:context:]
  -[HKSPSensitiveUIMonitor registerForNotifications]
  -[HKSPSensitiveUIMonitor hideSensitiveUI]
  -[HKSPSensitiveUIMonitor _withLock:]
  -[HKSPSensitiveUIMonitor _isVendorRelease]
  -[HKSPSensitiveUIMonitor shouldHideForSensitivity:]
  -[HKSPSensitiveUIMonitor lock]
  -[HKSPSensitiveUIMonitor removeObserver:]
  -[HKSPSensitiveUIMonitor _handleNotification]
  -[HKSPSensitiveUIMonitor observers]
  -[HKSPSensitiveUIMonitor npsManager]
  -[HKSPSensitiveUIMonitor overrideHideSensitiveUI:]
  -[HKSPSensitiveUIMonitor isCurrentSensitiveUIHidden]
  -[HKSPSensitiveUIMonitor setCurrentSensitiveUIHidden:]
  -[HKSPSensitiveUIMonitor sensitiveUIOverridden]


HKSPSleepSchedule : NSObject <BSDescriptionProviding, HKSPXPCObject, HKSPObject, HKSPDictionarySerializable, NAEquatable, NAHashable, NSMutableCopying>
 @property  HKSPSleepScheduleDayOccurrence *mondayOccurrence
 @property  HKSPSleepScheduleDayOccurrence *tuesdayOccurrence
 @property  HKSPSleepScheduleDayOccurrence *wednesdayOccurrence
 @property  HKSPSleepScheduleDayOccurrence *thursdayOccurrence
 @property  HKSPSleepScheduleDayOccurrence *fridayOccurrence
 @property  HKSPSleepScheduleDayOccurrence *saturdayOccurrence
 @property  HKSPSleepScheduleDayOccurrence *sundayOccurrence
 @property  HKSPSleepScheduleDayOccurrence *overrideDayOccurrence
 @property  unsigned long windDownMinutes
 @property  double sleepDurationGoal
 @property  BOOL isDefaultSchedule
 @property  HKSPSleepScheduleOccurrence *overrideOccurrence
 @property  unsigned long weekdaysWithOccurrences
 @property  unsigned long weekdaysWithoutOccurrences
 @property  BOOL enabled
 @property  NSArray *occurrences
 @property  double windDownTime
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <HKSPSyncAnchor> *syncAnchor
 @property  unsigned long version
 @property  NSDate *lastModifiedDate
 @property  NSSet *significantChanges
 @property  NSDictionary *relationshipChanges

  // class methods
  +[HKSPSleepSchedule supportsSecureCoding]
  +[HKSPSleepSchedule innerClasses]
  +[HKSPSleepSchedule emptyScheduleWithSyncAnchor:]

  // instance methods
  -[HKSPSleepSchedule _wakeUpComponentsByAddingSleepDurationGoalToBedtimeComponents:]
  -[HKSPSleepSchedule occurrences]
  -[HKSPSleepSchedule objectWithSyncAnchor:]
  -[HKSPSleepSchedule weekdaysWithOccurrences]
  -[HKSPSleepSchedule saturdayOccurrence]
  -[HKSPSleepSchedule fridayOccurrence]
  -[HKSPSleepSchedule wednesdayOccurrence]
  -[HKSPSleepSchedule overrideOccurrence]
  -[HKSPSleepSchedule maximumAllowableWindDown]
  -[HKSPSleepSchedule thursdayOccurrence]
  -[HKSPSleepSchedule copyFromObject:]
  -[HKSPSleepSchedule _equateTo:builderBuilderBlock:]
  -[HKSPSleepSchedule sleepDurationGoal]
  -[HKSPSleepSchedule emptyCopy]
  -[HKSPSleepSchedule _unsortedOccurrences]
  -[HKSPSleepSchedule allowableRangeForWeekdays:]
  -[HKSPSleepSchedule isEmptySleepSchedule]
  -[HKSPSleepSchedule descriptionWithMultilinePrefix:]
  -[HKSPSleepSchedule encodeWithCoder:]
  -[HKSPSleepSchedule lastModifiedDate]
  -[HKSPSleepSchedule isEnabledAndHasOccurrences]
  -[HKSPSleepSchedule descriptionBuilderWithMultilinePrefix:]
  -[HKSPSleepSchedule overrideDayOccurrence]
  -[HKSPSleepSchedule overridenOccurrenceForOverrideOccurrence:]
  -[HKSPSleepSchedule isDefaultSchedule]
  -[HKSPSleepSchedule windDownTime]
  -[HKSPSleepSchedule tuesdayOccurrence]
  -[HKSPSleepSchedule mutableCopy]
  -[HKSPSleepSchedule .cxx_destruct]
  -[HKSPSleepSchedule weekdaysWithoutOccurrences]
  -[HKSPSleepSchedule windDownMinutes]
  -[HKSPSleepSchedule meetsDefaultSleepGoal]
  -[HKSPSleepSchedule sundayOccurrence]
  -[HKSPSleepSchedule occurrenceOnDay:]
  -[HKSPSleepSchedule mutableOccurrenceTemplate]
  -[HKSPSleepSchedule succinctDescription]
  -[HKSPSleepSchedule allowableRangeForModifiedOccurrence:gregorianCalendar:]
  -[HKSPSleepSchedule occurrencesAfterDate:gregorianCalendar:]
  -[HKSPSleepSchedule _enumerateDayOccurrencesWithBlock:]
  -[HKSPSleepSchedule occurrencesOnDays:]
  -[HKSPSleepSchedule mondayOccurrence]
  -[HKSPSleepSchedule relationshipChanges]
  -[HKSPSleepSchedule version]
  -[HKSPSleepSchedule copyWithZone:]
  -[HKSPSleepSchedule syncAnchor]
  -[HKSPSleepSchedule isEquivalentTo:]
  -[HKSPSleepSchedule succinctDescriptionBuilder]
  -[HKSPSleepSchedule significantChanges]
  -[HKSPSleepSchedule mutableCopyWithZone:]
  -[HKSPSleepSchedule initFromObject:]
  -[HKSPSleepSchedule isEqual:]
  -[HKSPSleepSchedule init]
  -[HKSPSleepSchedule isEnabled]
  -[HKSPSleepSchedule initWithCoder:]


HKSPMutableSleepSchedule : HKSPSleepSchedule <HKSPMutableObject>
 @property  unsigned long windDownMinutes
 @property  HKSPSleepScheduleDayOccurrence *mondayOccurrence
 @property  HKSPSleepScheduleDayOccurrence *tuesdayOccurrence
 @property  HKSPSleepScheduleDayOccurrence *wednesdayOccurrence
 @property  HKSPSleepScheduleDayOccurrence *thursdayOccurrence
 @property  HKSPSleepScheduleDayOccurrence *fridayOccurrence
 @property  HKSPSleepScheduleDayOccurrence *saturdayOccurrence
 @property  HKSPSleepScheduleDayOccurrence *sundayOccurrence
 @property  HKSPSleepScheduleDayOccurrence *overrideDayOccurrence
 @property  BOOL enabled
 @property  double windDownTime
 @property  double sleepDurationGoal
 @property  NSDate *lastModifiedDate
 @property  HKSPChangeSet *changeSet
 @property  <HKSPObject> *originalObject
 @property  unsigned long version
 @property  NSSet *significantChanges
 @property  NSDictionary *relationshipChanges
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKSPMutableSleepSchedule supportsSecureCoding]

  // instance methods
  -[HKSPMutableSleepSchedule saturdayOccurrence]
  -[HKSPMutableSleepSchedule fridayOccurrence]
  -[HKSPMutableSleepSchedule wednesdayOccurrence]
  -[HKSPMutableSleepSchedule thursdayOccurrence]
  -[HKSPMutableSleepSchedule sleepDurationGoal]
  -[HKSPMutableSleepSchedule encodeWithCoder:]
  -[HKSPMutableSleepSchedule lastModifiedDate]
  -[HKSPMutableSleepSchedule _shouldRemoveOverrideOccurrence:]
  -[HKSPMutableSleepSchedule overrideDayOccurrence]
  -[HKSPMutableSleepSchedule _updateOverrideOccurrenceForOccurrence:]
  -[HKSPMutableSleepSchedule hasOverrideOccurrenceRemoval]
  -[HKSPMutableSleepSchedule windDownTime]
  -[HKSPMutableSleepSchedule removeOccurrence:]
  -[HKSPMutableSleepSchedule tuesdayOccurrence]
  -[HKSPMutableSleepSchedule mutableCopy]
  -[HKSPMutableSleepSchedule setSaturdayOccurrence:]
  -[HKSPMutableSleepSchedule setSundayOccurrence:]
  -[HKSPMutableSleepSchedule .cxx_destruct]
  -[HKSPMutableSleepSchedule setEnabled:]
  -[HKSPMutableSleepSchedule hasChangeToSleepDurationGoal]
  -[HKSPMutableSleepSchedule sundayOccurrence]
  -[HKSPMutableSleepSchedule changeSet]
  -[HKSPMutableSleepSchedule setThursdayOccurrence:]
  -[HKSPMutableSleepSchedule setMondayOccurrence:]
  -[HKSPMutableSleepSchedule _updateBackingOccurrencesForOccurrence:]
  -[HKSPMutableSleepSchedule hasChangeToWindDownTime]
  -[HKSPMutableSleepSchedule setWindDownMinutes:]
  -[HKSPMutableSleepSchedule saveOccurrence:]
  -[HKSPMutableSleepSchedule freeze]
  -[HKSPMutableSleepSchedule setOverrideDayOccurrence:]
  -[HKSPMutableSleepSchedule mondayOccurrence]
  -[HKSPMutableSleepSchedule originalObject]
  -[HKSPMutableSleepSchedule copyWithZone:]
  -[HKSPMutableSleepSchedule _hasChangeToScheduleEnabled]
  -[HKSPMutableSleepSchedule setLastModifiedDate:]
  -[HKSPMutableSleepSchedule hasChangeAffectingScheduling]
  -[HKSPMutableSleepSchedule setFridayOccurrence:]
  -[HKSPMutableSleepSchedule _modifyDayOccurrencesForWeekdays:block:]
  -[HKSPMutableSleepSchedule _hasChangeForDayOccurrenceKey:dayOccurrence:]
  -[HKSPMutableSleepSchedule setTuesdayOccurrence:]
  -[HKSPMutableSleepSchedule lastOverrideOccurrenceWakeUpComponents]
  -[HKSPMutableSleepSchedule setWednesdayOccurrence:]
  -[HKSPMutableSleepSchedule init]
  -[HKSPMutableSleepSchedule isEnabled]
  -[HKSPMutableSleepSchedule setWindDownTime:]
  -[HKSPMutableSleepSchedule initWithCoder:]
  -[HKSPMutableSleepSchedule setSleepDurationGoal:]


_HKSPEmptySleepSchedule : HKSPSleepSchedule <HKSPXPCObject>
 @property  <HKSPSyncAnchor> *syncAnchor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_HKSPEmptySleepSchedule supportsSecureCoding]

  // instance methods
  -[_HKSPEmptySleepSchedule isEmptySleepSchedule]


HKSPSleepStore : NSObject <HKSPSleepFocusModeBridgeDelegate, HKSPXPCConnectionProviderDelegate>
 @property  HKSPXPCClientIdentifier *clientIdentifier
 @property  HKSleepHealthStore *sleepHealthStore
 @property  unsigned long options
 @property  HKSPObserverSet *observers
 @property  HKSPXPCConnectionProvider *connectionProvider
 @property  HKSPSleepStoreCache *sleepStoreCache
 @property  <NAScheduler> *callbackScheduler
 @property  HKSPThrottler *reconnectThrottler
 @property  <HKSPSleepFocusModeBridge> *sleepFocusModeBridge
 @property  @? currentDateProvider
 @property  HKSPSleepStoreExportedObject *sleepStoreExportedObject
 @property  HKSPSyncAnchorContainer *syncAnchorContainer
 @property  HKSPSleepWidgetManager *widgetManager
 @property  BOOL hasSleepFocusMode
 @property  HKSPSleepFocusConfiguration *sleepFocusConfiguration
 @property  HKHealthStore *healthStore
 @property  HKSPAnalyticsManager *analyticsManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKSPSleepStore _sleepDisabledError]
  +[HKSPSleepStore _updatedHistoricalSleepSchedulesFromSleepSchedule:options:date:]
  +[HKSPSleepStore _updatedHistoricalSleepGoalForSleepSchedule:options:date:]

  // instance methods
  -[HKSPSleepStore connect]
  -[HKSPSleepStore hasSleepFocusMode]
  -[HKSPSleepStore healthStore]
  -[HKSPSleepStore clientIdentifier]
  -[HKSPSleepStore sleepAlarmWasDismissedOnDate:source:completion:]
  -[HKSPSleepStore addObserver:]
  -[HKSPSleepStore dealloc]
  -[HKSPSleepStore removeAllObservers]
  -[HKSPSleepStore .cxx_destruct]
  -[HKSPSleepStore setWidgetOverrideState:completion:]
  -[HKSPSleepStore callbackScheduler]
  -[HKSPSleepStore connectionProvider]
  -[HKSPSleepStore publishWakeUpResultsNotificationWithCompletion:]
  -[HKSPSleepStore createSleepFocusModeWithCompletion:]
  -[HKSPSleepStore sleepFocusModeBridge:didUpdateSleepFocusConfiguration:]
  -[HKSPSleepStore dismissGoodMorningWithCompletion:]
  -[HKSPSleepStore currentDateProvider]
  -[HKSPSleepStore setSyncAnchorContainer:]
  -[HKSPSleepStore initWithIdentifier:]
  -[HKSPSleepStore options]
  -[HKSPSleepStore setLockScreenOverrideState:userInfo:completion:]
  -[HKSPSleepStore deleteSleepFocusModeWithCompletion:]
  -[HKSPSleepStore publishNotificationWithIdentifier:userInfo:completion:]
  -[HKSPSleepStore reconnect]
  -[HKSPSleepStore dismissSleepLockWithCompletion:]
  -[HKSPSleepStore sleepAlarmWasModifiedFromSource:completion:]
  -[HKSPSleepStore clearWidgetOverrideWithCompletion:]
  -[HKSPSleepStore initWithHealthStore:]
  -[HKSPSleepStore sleepHealthStore]
  -[HKSPSleepStore sleepFocusModeBridge]
  -[HKSPSleepStore analyticsManager]
  -[HKSPSleepStore syncAnchorContainer]
  -[HKSPSleepStore removeObserver:]
  -[HKSPSleepStore confirmAwakeWithCompletion:]
  -[HKSPSleepStore sleepAlarmWasSnoozedUntilDate:source:completion:]
  -[HKSPSleepStore init]
  -[HKSPSleepStore observers]
  -[HKSPSleepStore initWithIdentifier:healthStore:]
  -[HKSPSleepStore sleepScheduleModelWithError:]
  -[HKSPSleepStore upcomingScheduleOccurrenceAfterDate:error:]
  -[HKSPSleepStore currentSleepScheduleWithError:]
  -[HKSPSleepStore currentSleepSettingsWithCompletion:]
  -[HKSPSleepStore currentSleepSettingsWithError:]
  -[HKSPSleepStore _cachingEnabled]
  -[HKSPSleepStore suggestedSleepScheduleWithProviders:completion:]
  -[HKSPSleepStore _resultHasSchedule:]
  -[HKSPSleepStore _resultScheduleMeetsDefaultGoal:]
  -[HKSPSleepStore _resultScheduleIsValid:]
  -[HKSPSleepStore initWithIdentifier:healthStore:options:]
  -[HKSPSleepStore initWithConnectionProviderProvider:identifier:healthStore:options:]
  -[HKSPSleepStore initWithConnectionProviderProvider:identifier:healthStore:options:analyticsManager:throttlerProvider:callbackScheduler:sleepFocusModeBridgeProvider:widgetTimelineControllersProvider:currentDateProvider:]
  -[HKSPSleepStore _connectAutomatically]
  -[HKSPSleepStore connectSynchronously:]
  -[HKSPSleepStore _checkInWithCurrentSyncAnchor]
  -[HKSPSleepStore _getSleepScheduleFromServerDoSync:notify:]
  -[HKSPSleepStore _getSleepScheduleDoSync:notify:]
  -[HKSPSleepStore currentSleepScheduleWithCompletion:]
  -[HKSPSleepStore currentSleepScheduleFuture]
  -[HKSPSleepStore upcomingResolvedScheduleOccurrenceAfterDate:error:]
  -[HKSPSleepStore upcomingScheduleOccurrenceAfterDate:alarmStatus:error:]
  -[HKSPSleepStore upcomingResolvedScheduleOccurrenceAfterDate:alarmStatus:error:]
  -[HKSPSleepStore upcomingScheduleOccurrenceAfterDate:completion:]
  -[HKSPSleepStore upcomingScheduleOccurrenceAfterDateFuture:]
  -[HKSPSleepStore _getSleepSettingsFromServerDoSync:notify:]
  -[HKSPSleepStore _getSleepSettingsDoSync:notify:]
  -[HKSPSleepStore currentSleepSettingsFuture]
  -[HKSPSleepStore _getSleepEventRecordFromServerDoSync:notify:]
  -[HKSPSleepStore _getSleepEventRecordDoSync:notify:]
  -[HKSPSleepStore currentSleepEventRecordWithCompletion:]
  -[HKSPSleepStore currentSleepEventRecordFuture]
  -[HKSPSleepStore currentSleepEventRecordWithError:]
  -[HKSPSleepStore sleepScheduleModelWithCompletion:]
  -[HKSPSleepStore sleepScheduleModelFuture]
  -[HKSPSleepStore _getSleepModeFromServerDoSync:notify:]
  -[HKSPSleepStore _getSleepModeDoSync:notify:]
  -[HKSPSleepStore sleepModeFuture]
  -[HKSPSleepStore sleepModeOnFuture]
  -[HKSPSleepStore sleepModeWithCompletion:]
  -[HKSPSleepStore sleepModeOnWithCompletion:]
  -[HKSPSleepStore sleepModeWithError:]
  -[HKSPSleepStore sleepModeOnWithError:]
  -[HKSPSleepStore _getSleepWidgetStateFromServerDoSync:]
  -[HKSPSleepStore _getSleepWidgetStateDoSync:]
  -[HKSPSleepStore sleepWidgetStateFuture]
  -[HKSPSleepStore sleepWidgetStateWithCompletion:]
  -[HKSPSleepStore sleepWidgetStateWithError:]
  -[HKSPSleepStore _getSleepScheduleStateFromServerDoSync:notify:]
  -[HKSPSleepStore _getSleepScheduleStateOnDoSync:notify:]
  -[HKSPSleepStore currentSleepScheduleStateFuture]
  -[HKSPSleepStore currentSleepScheduleStateWithCompletion:]
  -[HKSPSleepStore currentSleepScheduleStateWithError:]
  -[HKSPSleepStore _saveCurrentSleepScheduleOnServer:options:]
  -[HKSPSleepStore saveCurrentSleepSchedule:]
  -[HKSPSleepStore saveCurrentSleepSchedule:options:context:]
  -[HKSPSleepStore _sendScheduleChangedAnalyticsWithContext:]
  -[HKSPSleepStore saveCurrentSleepSchedule:completion:]
  -[HKSPSleepStore saveCurrentSleepSchedule:options:completion:]
  -[HKSPSleepStore saveCurrentSleepSchedule:options:context:completion:]
  -[HKSPSleepStore _writeHistoricalSchedule:options:]
  -[HKSPSleepStore _saveCurrentSleepSettingsOnServer:options:]
  -[HKSPSleepStore saveCurrentSleepSettings:]
  -[HKSPSleepStore saveCurrentSleepSettings:options:]
  -[HKSPSleepStore saveCurrentSleepSettings:completion:]
  -[HKSPSleepStore saveCurrentSleepSettings:options:completion:]
  -[HKSPSleepStore _prepareObjectForSave:options:]
  -[HKSPSleepStore _saveCurrentSleepEventRecordOnServer:options:]
  -[HKSPSleepStore saveCurrentSleepEventRecord:]
  -[HKSPSleepStore saveCurrentSleepEventRecord:options:]
  -[HKSPSleepStore saveCurrentSleepEventRecord:completion:]
  -[HKSPSleepStore saveCurrentSleepEventRecord:options:completion:]
  -[HKSPSleepStore _setSleepModeOnServer:reason:]
  -[HKSPSleepStore setSleepModeOn:completion:]
  -[HKSPSleepStore setSleepModeOn:reason:completion:]
  -[HKSPSleepStore _confirmAwakeOnServer]
  -[HKSPSleepStore _dismissGoodMorningOnServer]
  -[HKSPSleepStore _dismissSleepLockOnServer]
  -[HKSPSleepStore sleepAlarmWasDismissedOnDate:completion:]
  -[HKSPSleepStore _sleepAlarmWasDismissedOnDateOnServer:source:]
  -[HKSPSleepStore sleepAlarmWasSnoozedUntilDate:completion:]
  -[HKSPSleepStore _sleepAlarmWasSnoozedUntilDateOnServer:source:]
  -[HKSPSleepStore sleepAlarmWasModifiedWithCompletion:]
  -[HKSPSleepStore _sleepAlarmWasModifiedOnServer:]
  -[HKSPSleepStore skipUpcomingWakeUpAlarmForDate:completion:]
  -[HKSPSleepStore setUpcomingWakeUpAlarmEnabled:date:completion:]
  -[HKSPSleepStore setWakeUpAlarmEnabled:resolvedOccurrence:date:completion:]
  -[HKSPSleepStore _publishNotificationOnServerWithIdentifier:userInfo:]
  -[HKSPSleepStore _setLockScreenOverrideStateOnServerWithState:userInfo:]
  -[HKSPSleepStore _setWidgetOverrideStateOnServerWithState:]
  -[HKSPSleepStore _clearWidgetOverrideOnServer]
  -[HKSPSleepStore _publishWakeUpResultsNotificationOnServer]
  -[HKSPSleepStore nextEventDueAfterDate:completion:]
  -[HKSPSleepStore nextEventWithIdentifier:dueAfterDate:completion:]
  -[HKSPSleepStore nextEventDueAfterDateFuture:]
  -[HKSPSleepStore nextEventDueAfterDate:error:]
  -[HKSPSleepStore nextEventWithIdentifierFuture:dueAfterDate:]
  -[HKSPSleepStore nextEventWithIdentifier:dueAfterDate:error:]
  -[HKSPSleepStore setSleepCoachingOnboardingCompletedVersion:completion:]
  -[HKSPSleepStore setSleepTrackingOnboardingCompletedVersion:completion:]
  -[HKSPSleepStore setSleepWindDownShortcutsOnboardingCompletedVersion:completion:]
  -[HKSPSleepStore _notifyObserversForChangedSleepSchedule:]
  -[HKSPSleepStore _notifyObserversForChangedSleepSettings:]
  -[HKSPSleepStore _notifyObserversForChangedSleepEventRecord:]
  -[HKSPSleepStore _notifyObserversForChangedSleepMode:]
  -[HKSPSleepStore _notifyObserversForSleepEvent:]
  -[HKSPSleepStore _notifyObserversForChangedSleepScheduleState:]
  -[HKSPSleepStore sleepFocusConfiguration]
  -[HKSPSleepStore _observeSleepFocusMode]
  -[HKSPSleepStore _reloadsWidgets]
  -[HKSPSleepStore sleepStoreCache]
  -[HKSPSleepStore reconnectThrottler]
  -[HKSPSleepStore sleepStoreExportedObject]
  -[HKSPSleepStore widgetManager]


HKSPSleepStoreExportedObject : NSObject <HKSPSleepClient>
 @property  HKSPSleepStore *sleepStore

  // instance methods
  -[HKSPSleepStoreExportedObject clientShouldCheckInWithCompletion:]
  -[HKSPSleepStoreExportedObject sleepScheduleChanged:clientIdentifier:]
  -[HKSPSleepStoreExportedObject sleepScheduleStateChanged:]
  -[HKSPSleepStoreExportedObject _mergeExternalSleepSettingsChange:clientIdentifier:]
  -[HKSPSleepStoreExportedObject sleepModeChanged:]
  -[HKSPSleepStoreExportedObject setSleepStore:]
  -[HKSPSleepStoreExportedObject sleepStore]
  -[HKSPSleepStoreExportedObject sleepEventRecordChanged:clientIdentifier:]
  -[HKSPSleepStoreExportedObject .cxx_destruct]
  -[HKSPSleepStoreExportedObject sleepEventOccurred:]
  -[HKSPSleepStoreExportedObject _mergeExternalSleepScheduleChange:clientIdentifier:]
  -[HKSPSleepStoreExportedObject getClientIdentifierWithCompletion:]
  -[HKSPSleepStoreExportedObject _mergeExternalSleepEventRecordChange:clientIdentifier:]
  -[HKSPSleepStoreExportedObject sleepSettingsChanged:clientIdentifier:]


HKSPDNDConfigurationService : NSObject <DNDModeConfigurationServiceListener, DNDGlobalConfigurationServiceListener, HKSPDiagnosticsProvider, HKSPSleepFocusModeBridge>
 @property  DNDModeConfigurationService *modeConfigService
 @property  DNDGlobalConfigurationService *globalConfigService
 @property  unsigned long options
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <HKSPSleepFocusModeBridgeDelegate> *delegate

  // class methods
  +[HKSPDNDConfigurationService sleepFocusConfigurationService]
  +[HKSPDNDConfigurationService _readGlobalConfigForOptions:]
  +[HKSPDNDConfigurationService sleepFocusConfigurationServiceWithOptions:]

  // instance methods
  -[HKSPDNDConfigurationService setDelegate:]
  -[HKSPDNDConfigurationService delegate]
  -[HKSPDNDConfigurationService .cxx_destruct]
  -[HKSPDNDConfigurationService modeConfigurationService:didReceiveAvailableModesUpdate:]
  -[HKSPDNDConfigurationService options]
  -[HKSPDNDConfigurationService _notifyDelegate]
  -[HKSPDNDConfigurationService diagnosticDescription]
  -[HKSPDNDConfigurationService invalidate]
  -[HKSPDNDConfigurationService _withLock:]
  -[HKSPDNDConfigurationService diagnosticInfo]
  -[HKSPDNDConfigurationService globalConfigurationService:didReceiveUpdatedPairSyncState:]
  -[HKSPDNDConfigurationService hasSleepFocusMode:]
  -[HKSPDNDConfigurationService sleepFocusConfiguration:]
  -[HKSPDNDConfigurationService initWithModeConfigService:globalConfigService:]
  -[HKSPDNDConfigurationService initWithModeConfigService:globalConfigService:options:]
  -[HKSPDNDConfigurationService _loadCachedSleepFocusConfig]
  -[HKSPDNDConfigurationService _checkForUpdatedSleepFocusConfig]
  -[HKSPDNDConfigurationService _fetchUpdatedSleepFocusConfigurationWithCompletion:]
  -[HKSPDNDConfigurationService _updateCachedSleepFocusConfig:]
  -[HKSPDNDConfigurationService updateCachedUUID:]
  -[HKSPDNDConfigurationService updateCachedMirrorsFocusModes:]
  -[HKSPDNDConfigurationService _updateCacheAndNotifyWithBlock:]
  -[HKSPDNDConfigurationService _lock_updateCachedSleepFocusConfig:updatedSleepFocusConfig:]
  -[HKSPDNDConfigurationService _cacheSleepFocusConfig]
  -[HKSPDNDConfigurationService _readGlobalConfig]
  -[HKSPDNDConfigurationService _sleepFocusConfiguration:checkCache:]
  -[HKSPDNDConfigurationService _uncachedModeConfiguration:]
  -[HKSPDNDConfigurationService _uncachedMirrorsFocusModes:]
  -[HKSPDNDConfigurationService _startListeningToModeConfigService]
  -[HKSPDNDConfigurationService _stopListeningToModeConfigService]
  -[HKSPDNDConfigurationService _startListeningToGlobalConfigService]
  -[HKSPDNDConfigurationService _stopListeningToGlobalConfigService]
  -[HKSPDNDConfigurationService modeConfigService]
  -[HKSPDNDConfigurationService globalConfigService]


HKSPSleepWidgetManager : NSObject
 @property  HKSPSleepStore *sleepStore
 @property  NSArray *timelineControllers
 @property  <NAScheduler> *reloadScheduler

  // class methods
  +[HKSPSleepWidgetManager defaultTimelineControllers]
  +[HKSPSleepWidgetManager _widgetReloadDescription:]
  +[HKSPSleepWidgetManager _shouldForceWidgetReload:]

  // instance methods
  -[HKSPSleepWidgetManager sleepStore]
  -[HKSPSleepWidgetManager initWithSleepStore:]
  -[HKSPSleepWidgetManager reloadWidgetsWithReason:]
  -[HKSPSleepWidgetManager .cxx_destruct]
  -[HKSPSleepWidgetManager timelineControllers]
  -[HKSPSleepWidgetManager reloadScheduler]
  -[HKSPSleepWidgetManager initWithSleepStore:timelineControllers:]


HKSPAnalyticsStore : NSObject
 @property  <HKSPUserDefaults> *userDefaults
 @property  @? diagnosticsOptInStatusProvider

  // instance methods
  -[HKSPAnalyticsStore userDefaults]
  -[HKSPAnalyticsStore updateWindDownActions:onMorningIndex:]
  -[HKSPAnalyticsStore readAllWindDownActions]
  -[HKSPAnalyticsStore removeAllWindDownActionsBeforeMorningIndex:]
  -[HKSPAnalyticsStore .cxx_destruct]
  -[HKSPAnalyticsStore uncollectedWindDownActions]
  -[HKSPAnalyticsStore diagnosticsOptInStatusProvider]
  -[HKSPAnalyticsStore initWithUserDefaults:]
  -[HKSPAnalyticsStore setBaselineForWindDownActions:onMorningIndex:]
  -[HKSPAnalyticsStore markAllActionsAsCollected]
  -[HKSPAnalyticsStore windDownActionsAfterMorningIndex:]
  -[HKSPAnalyticsStore windDownActionsForMorningIndex:]
  -[HKSPAnalyticsStore setDiagnosticsOptInStatusProvider:]
  -[HKSPAnalyticsStore writeWindDownActions:]
  -[HKSPAnalyticsStore _setWindDownActions:forMorningIndex:overwriteExisting:]
  -[HKSPAnalyticsStore initWithUserDefaults:diagnosticsOptInStatusProvider:]


HKSPSleepSettings : NSObject <HKSPFeatureSettingsModel, BSDescriptionProviding, HKSPXPCObject, HKSPObject, HKSPDictionarySerializable, NAEquatable, NAHashable, NSMutableCopying>
 @property  BOOL sleepTracking
 @property  BOOL springBoardGreetingDisabled
 @property  BOOL springBoardSuggestedPageCreated
 @property  BOOL watchSleepFeaturesEnabled
 @property  BOOL scheduledSleepMode
 @property  unsigned long sleepModeOptions
 @property  BOOL sleepTracking
 @property  BOOL timeInBedTracking
 @property  BOOL bedtimeReminders
 @property  BOOL wakeUpResults
 @property  BOOL chargingReminders
 @property  BOOL shareAcrossDevices
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <HKSPSyncAnchor> *syncAnchor
 @property  unsigned long version
 @property  NSDate *lastModifiedDate
 @property  NSSet *significantChanges
 @property  NSDictionary *relationshipChanges

  // class methods
  +[HKSPSleepSettings supportsSecureCoding]

  // instance methods
  -[HKSPSleepSettings objectWithSyncAnchor:]
  -[HKSPSleepSettings timeInBedTracking]
  -[HKSPSleepSettings _migrateForCoder:]
  -[HKSPSleepSettings scheduledSleepMode]
  -[HKSPSleepSettings copyFromObject:]
  -[HKSPSleepSettings _equateTo:builderBuilderBlock:]
  -[HKSPSleepSettings descriptionWithMultilinePrefix:]
  -[HKSPSleepSettings encodeWithCoder:]
  -[HKSPSleepSettings lastModifiedDate]
  -[HKSPSleepSettings descriptionBuilderWithMultilinePrefix:]
  -[HKSPSleepSettings _buildForEquivalenceTo:builder:]
  -[HKSPSleepSettings mutableCopy]
  -[HKSPSleepSettings sleepModeOptions]
  -[HKSPSleepSettings .cxx_destruct]
  -[HKSPSleepSettings springBoardSuggestedPageCreated]
  -[HKSPSleepSettings succinctDescription]
  -[HKSPSleepSettings springBoardGreetingDisabled]
  -[HKSPSleepSettings watchSleepFeaturesEnabled]
  -[HKSPSleepSettings chargingReminders]
  -[HKSPSleepSettings isEqualToModel:]
  -[HKSPSleepSettings version]
  -[HKSPSleepSettings sleepTracking]
  -[HKSPSleepSettings copyWithZone:]
  -[HKSPSleepSettings wakeUpResults]
  -[HKSPSleepSettings syncAnchor]
  -[HKSPSleepSettings shareAcrossDevices]
  -[HKSPSleepSettings isEquivalentTo:]
  -[HKSPSleepSettings succinctDescriptionBuilder]
  -[HKSPSleepSettings significantChanges]
  -[HKSPSleepSettings bedtimeReminders]
  -[HKSPSleepSettings mutableCopyWithZone:]
  -[HKSPSleepSettings _needsMigrationForCoder:]
  -[HKSPSleepSettings initFromObject:]
  -[HKSPSleepSettings isEqual:]
  -[HKSPSleepSettings init]
  -[HKSPSleepSettings initWithCoder:]


HKSPMutableSleepSettings : HKSPSleepSettings <HKSPMutableObject>
 @property  BOOL springBoardGreetingDisabled
 @property  BOOL springBoardSuggestedPageCreated
 @property  BOOL watchSleepFeaturesEnabled
 @property  BOOL scheduledSleepMode
 @property  unsigned long sleepModeOptions
 @property  BOOL sleepTracking
 @property  BOOL timeInBedTracking
 @property  BOOL bedtimeReminders
 @property  BOOL wakeUpResults
 @property  BOOL chargingReminders
 @property  BOOL shareAcrossDevices
 @property  NSDate *lastModifiedDate
 @property  HKSPChangeSet *changeSet
 @property  <HKSPObject> *originalObject
 @property  unsigned long version
 @property  NSSet *significantChanges
 @property  NSDictionary *relationshipChanges
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKSPMutableSleepSettings supportsSecureCoding]

  // instance methods
  -[HKSPMutableSleepSettings timeInBedTracking]
  -[HKSPMutableSleepSettings scheduledSleepMode]
  -[HKSPMutableSleepSettings setTimeInBedTracking:]
  -[HKSPMutableSleepSettings encodeWithCoder:]
  -[HKSPMutableSleepSettings lastModifiedDate]
  -[HKSPMutableSleepSettings setSleepModeOptions:]
  -[HKSPMutableSleepSettings mutableCopy]
  -[HKSPMutableSleepSettings sleepModeOptions]
  -[HKSPMutableSleepSettings .cxx_destruct]
  -[HKSPMutableSleepSettings springBoardSuggestedPageCreated]
  -[HKSPMutableSleepSettings changeSet]
  -[HKSPMutableSleepSettings springBoardGreetingDisabled]
  -[HKSPMutableSleepSettings watchSleepFeaturesEnabled]
  -[HKSPMutableSleepSettings freeze]
  -[HKSPMutableSleepSettings chargingReminders]
  -[HKSPMutableSleepSettings setSpringBoardSuggestedPageCreated:]
  -[HKSPMutableSleepSettings setSleepTracking:]
  -[HKSPMutableSleepSettings originalObject]
  -[HKSPMutableSleepSettings sleepTracking]
  -[HKSPMutableSleepSettings setWakeUpResults:]
  -[HKSPMutableSleepSettings copyWithZone:]
  -[HKSPMutableSleepSettings wakeUpResults]
  -[HKSPMutableSleepSettings setLastModifiedDate:]
  -[HKSPMutableSleepSettings shareAcrossDevices]
  -[HKSPMutableSleepSettings setBedtimeReminders:]
  -[HKSPMutableSleepSettings bedtimeReminders]
  -[HKSPMutableSleepSettings setChargingReminders:]
  -[HKSPMutableSleepSettings setSpringBoardGreetingDisabled:]
  -[HKSPMutableSleepSettings setScheduledSleepMode:]
  -[HKSPMutableSleepSettings init]
  -[HKSPMutableSleepSettings setShareAcrossDevices:]
  -[HKSPMutableSleepSettings initWithCoder:]
  -[HKSPMutableSleepSettings setWatchSleepFeaturesEnabled:]


HKSPResolvedSleepScheduleOccurrence : NSObject <BSDescriptionProviding, NSCopying, NSSecureCoding>
 @property  NSDateInterval *scheduledInterval
 @property  NSDateInterval *bedtimeInterval
 @property  NSDateInterval *windDownInterval
 @property  HKSPSleepScheduleOccurrence *occurrence
 @property  HKSPSleepEvent *wakeUpEvent
 @property  HKSPSleepEvent *bedtimeEvent
 @property  HKSPSleepEvent *windDownEvent
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKSPResolvedSleepScheduleOccurrence supportsSecureCoding]

  // instance methods
  -[HKSPResolvedSleepScheduleOccurrence occurrence]
  -[HKSPResolvedSleepScheduleOccurrence descriptionWithMultilinePrefix:]
  -[HKSPResolvedSleepScheduleOccurrence encodeWithCoder:]
  -[HKSPResolvedSleepScheduleOccurrence compare:]
  -[HKSPResolvedSleepScheduleOccurrence descriptionBuilderWithMultilinePrefix:]
  -[HKSPResolvedSleepScheduleOccurrence .cxx_destruct]
  -[HKSPResolvedSleepScheduleOccurrence succinctDescription]
  -[HKSPResolvedSleepScheduleOccurrence copyWithZone:]
  -[HKSPResolvedSleepScheduleOccurrence generateOverrideOccurrenceForCurrentDate:gregorianCalendar:]
  -[HKSPResolvedSleepScheduleOccurrence succinctDescriptionBuilder]
  -[HKSPResolvedSleepScheduleOccurrence isEqual:]
  -[HKSPResolvedSleepScheduleOccurrence initWithCoder:]
  -[HKSPResolvedSleepScheduleOccurrence initWithOccurrence:wakeUpEvent:bedtimeEvent:windDownEvent:]
  -[HKSPResolvedSleepScheduleOccurrence occurrenceByAdjustingEvent:]
  -[HKSPResolvedSleepScheduleOccurrence occurrenceByRemovingEventWithIdentifier:]
  -[HKSPResolvedSleepScheduleOccurrence scheduledInterval]
  -[HKSPResolvedSleepScheduleOccurrence bedtimeInterval]
  -[HKSPResolvedSleepScheduleOccurrence windDownInterval]
  -[HKSPResolvedSleepScheduleOccurrence wakeUpEvent]
  -[HKSPResolvedSleepScheduleOccurrence bedtimeEvent]
  -[HKSPResolvedSleepScheduleOccurrence windDownEvent]


HKSPDictionaryDiff : NSObject
 @property  NSDictionary *updatedProperties
 @property  NSSet *removedKeys
 @property  BOOL equalDictionaries

  // instance methods
  -[HKSPDictionaryDiff .cxx_destruct]
  -[HKSPDictionaryDiff updatedProperties]
  -[HKSPDictionaryDiff initWithOriginalDictionary:updatedDictionary:keysToDiff:]
  -[HKSPDictionaryDiff equalDictionaries]
  -[HKSPDictionaryDiff removedKeys]


HKSPAnalyticsWindDownEventData : NSObject <NSCoding, NSSecureCoding>
 @property  unsigned long action
 @property  BOOL wasUsed
 @property  BOOL wasCollected
 @property  NSString *identifier

  // class methods
  +[HKSPAnalyticsWindDownEventData supportsSecureCoding]

  // instance methods
  -[HKSPAnalyticsWindDownEventData identifier]
  -[HKSPAnalyticsWindDownEventData encodeWithCoder:]
  -[HKSPAnalyticsWindDownEventData .cxx_destruct]
  -[HKSPAnalyticsWindDownEventData action]
  -[HKSPAnalyticsWindDownEventData isEqual:]
  -[HKSPAnalyticsWindDownEventData initWithCoder:]
  -[HKSPAnalyticsWindDownEventData initWithWindDownAction:wasUsed:identifier:]
  -[HKSPAnalyticsWindDownEventData initWithWindDownAction:wasUsed:identifier:wasCollected:]
  -[HKSPAnalyticsWindDownEventData collectedEventDataCopy]
  -[HKSPAnalyticsWindDownEventData isEqualEventData:]
  -[HKSPAnalyticsWindDownEventData wasUsed]
  -[HKSPAnalyticsWindDownEventData wasCollected]


HKSPAnalyticsWindDownEventDataWrapper : NSObject <NSCoding, NSSecureCoding>
 @property  NSArray *eventDatums

  // class methods
  +[HKSPAnalyticsWindDownEventDataWrapper supportsSecureCoding]

  // instance methods
  -[HKSPAnalyticsWindDownEventDataWrapper encodeWithCoder:]
  -[HKSPAnalyticsWindDownEventDataWrapper .cxx_destruct]
  -[HKSPAnalyticsWindDownEventDataWrapper initWithCoder:]
  -[HKSPAnalyticsWindDownEventDataWrapper initWithEventDatums:]
  -[HKSPAnalyticsWindDownEventDataWrapper eventDatums]
  -[HKSPAnalyticsWindDownEventDataWrapper setEventDatums:]


HKSPSleepStoreCache : NSObject
 @property  {os_unfair_lock_s=I} cacheLock
 @property  HKSPSleepSchedule *sleepSchedule
 @property  BOOL sleepScheduleNeedsUpdate
 @property  HKSPSleepSettings *sleepSettings
 @property  BOOL sleepSettingsNeedsUpdate
 @property  HKSPSleepEventRecord *sleepEventRecord
 @property  BOOL sleepEventRecordNeedsUpdate
 @property  unsigned long sleepScheduleState
 @property  BOOL sleepScheduleStateNeedsUpdate
 @property  long long sleepMode
 @property  BOOL sleepModeNeedsUpdate

  // instance methods
  -[HKSPSleepStoreCache cachedSleepModeWithMissHandler:]
  -[HKSPSleepStoreCache sleepMode]
  -[HKSPSleepStoreCache cachedSleepSettingsWithMissHandler:]
  -[HKSPSleepStoreCache sleepScheduleState]
  -[HKSPSleepStoreCache sleepSchedule]
  -[HKSPSleepStoreCache _locked_purgeCachedSleepSettings]
  -[HKSPSleepStoreCache sleepSettingsNeedsUpdate]
  -[HKSPSleepStoreCache updateCachedSleepScheduleState:]
  -[HKSPSleepStoreCache updateCachedSleepMode:]
  -[HKSPSleepStoreCache sleepScheduleNeedsUpdate]
  -[HKSPSleepStoreCache purgeCachedSleepScheduleState]
  -[HKSPSleepStoreCache cacheLock]
  -[HKSPSleepStoreCache .cxx_destruct]
  -[HKSPSleepStoreCache updateCachedSleepEventRecord:]
  -[HKSPSleepStoreCache cachedSleepScheduleStateWithMissHandler:]
  -[HKSPSleepStoreCache purgeCachedSleepSettings]
  -[HKSPSleepStoreCache sleepSettings]
  -[HKSPSleepStoreCache updateCachedSleepSchedule:]
  -[HKSPSleepStoreCache cachedSleepEventRecordWithMissHandler:]
  -[HKSPSleepStoreCache purgeCachedSleepMode]
  -[HKSPSleepStoreCache purgeCachedSleepSchedule]
  -[HKSPSleepStoreCache cachedSleepSettings]
  -[HKSPSleepStoreCache sleepScheduleStateNeedsUpdate]
  -[HKSPSleepStoreCache cachedSleepSchedule]
  -[HKSPSleepStoreCache cachedSleepEventRecord]
  -[HKSPSleepStoreCache _locked_purgeCachedSleepScheduleState]
  -[HKSPSleepStoreCache _locked_purgeCachedSleepSchedule]
  -[HKSPSleepStoreCache _withLock:]
  -[HKSPSleepStoreCache sleepModeNeedsUpdate]
  -[HKSPSleepStoreCache purgeCache]
  -[HKSPSleepStoreCache _locked_purgeCachedSleepEventRecord]
  -[HKSPSleepStoreCache sleepEventRecordNeedsUpdate]
  -[HKSPSleepStoreCache sleepEventRecord]
  -[HKSPSleepStoreCache cachedSleepScheduleWithMissHandler:]
  -[HKSPSleepStoreCache purgeCachedSleepEventRecord]
  -[HKSPSleepStoreCache init]
  -[HKSPSleepStoreCache _locked_purgeCachedSleepMode]
  -[HKSPSleepStoreCache updateCachedSleepSettings:]


HKSPProperty : NSObject <NSSecureCoding, NSCopying, BSDescriptionProviding>
 @property  NSString *identifier
 @property  NSString *propertyName
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKSPProperty supportsSecureCoding]

  // instance methods
  -[HKSPProperty identifier]
  -[HKSPProperty descriptionWithMultilinePrefix:]
  -[HKSPProperty encodeWithCoder:]
  -[HKSPProperty descriptionBuilderWithMultilinePrefix:]
  -[HKSPProperty .cxx_destruct]
  -[HKSPProperty propertyName]
  -[HKSPProperty succinctDescription]
  -[HKSPProperty copyWithZone:]
  -[HKSPProperty succinctDescriptionBuilder]
  -[HKSPProperty isEqual:]
  -[HKSPProperty initWithCoder:]
  -[HKSPProperty initWithIdentifier:propertyName:]


_HKSPSleepEventTimelineAdjustment : NSObject
 @property  HKSPResolvedSleepScheduleOccurrence *originalOccurrence
 @property  HKSPResolvedSleepScheduleOccurrence *adjustedOccurrence

  // instance methods
  -[_HKSPSleepEventTimelineAdjustment .cxx_destruct]
  -[_HKSPSleepEventTimelineAdjustment originalOccurrence]
  -[_HKSPSleepEventTimelineAdjustment setOriginalOccurrence:]
  -[_HKSPSleepEventTimelineAdjustment adjustedOccurrence]
  -[_HKSPSleepEventTimelineAdjustment setAdjustedOccurrence:]


HKSPSleepEventTimeline : NSObject <NSCopying>
 @property  NSMutableArray *orderedOccurrences
 @property  NSMutableArray *timelineAdjustments
 @property  NSDate *originDate
 @property  NSArray *resolvedOccurrences
 @property  NSArray *events
 @property  NSArray *upcomingEvents
 @property  NSArray *previousEvents
 @property  NSArray *upcomingResolvedOccurrences
 @property  NSArray *previousResolvedOccurrences

  // instance methods
  -[HKSPSleepEventTimeline events]
  -[HKSPSleepEventTimeline upcomingEvents]
  -[HKSPSleepEventTimeline resolvedOccurrencePrecedingDate:]
  -[HKSPSleepEventTimeline adjustResolvedOccurrence:withEvent:]
  -[HKSPSleepEventTimeline addResolvedOccurrence:]
  -[HKSPSleepEventTimeline originDate]
  -[HKSPSleepEventTimeline .cxx_destruct]
  -[HKSPSleepEventTimeline resolvedOccurrences]
  -[HKSPSleepEventTimeline previousResolvedOccurrences]
  -[HKSPSleepEventTimeline timelineAdjustments]
  -[HKSPSleepEventTimeline resolvedOccurrenceContainingOrPrecedingDate:]
  -[HKSPSleepEventTimeline _adjustedResolvedOccurrence:adjustmentBlock:]
  -[HKSPSleepEventTimeline copyWithZone:]
  -[HKSPSleepEventTimeline resolvedOccurrenceOverlappingOccurrence:]
  -[HKSPSleepEventTimeline previousEvents]
  -[HKSPSleepEventTimeline initWithOriginDate:]
  -[HKSPSleepEventTimeline upcomingResolvedOccurrences]
  -[HKSPSleepEventTimeline upcomingResolvedOccurrencesBeforeDate:]
  -[HKSPSleepEventTimeline orderedOccurrences]
  -[HKSPSleepEventTimeline adjustResolvedOccurrence:removingEventWithIdentifier:]
  -[HKSPSleepEventTimeline resolvedOccurrenceContainingDate:]


HKSPSleepHealthDataSource : NSObject <HKFeatureAvailabilityHealthDataSource>
 @property  <HKFeatureAvailabilityHealthDataSource> *weakHealthDataSource
 @property  <HKFeatureAvailabilityHealthDataSource> *strongHealthDataSource
 @property  HKSPSleepStore *sleepStore
 @property  <HKFeatureAvailabilityHealthDataSource> *healthDataSource
 @property  HKProfileIdentifier *profileIdentifier
 @property  BOOL requiresWeakRetention
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HKSPSleepHealthDataSource featureAvailabilityProvidingForFeatureIdentifier:]
  -[HKSPSleepHealthDataSource sleepStore]
  -[HKSPSleepHealthDataSource healthDataSource]
  -[HKSPSleepHealthDataSource .cxx_destruct]
  -[HKSPSleepHealthDataSource profileIdentifier]
  -[HKSPSleepHealthDataSource strongHealthDataSource]
  -[HKSPSleepHealthDataSource requiresWeakRetention]
  -[HKSPSleepHealthDataSource wristDetectionSettingManager]
  -[HKSPSleepHealthDataSource weakHealthDataSource]
  -[HKSPSleepHealthDataSource watchLowPowerModeDataSource]
  -[HKSPSleepHealthDataSource requirementSatisfactionOverridesDataSource]
  -[HKSPSleepHealthDataSource initWithSleepStore:healthDataSource:]


HKSPSyncAnchorContainer : NSObject <BSDescriptionProviding, NSSecureCoding, NSCopying>
 @property  NSString *identifier
 @property  <HKSPSyncAnchor> *sleepScheduleSyncAnchor
 @property  <HKSPSyncAnchor> *sleepSettingsSyncAnchor
 @property  <HKSPSyncAnchor> *sleepEventRecordSyncAnchor
 @property  <HKSPSyncAnchor> *sleepScheduleStateSyncAnchor
 @property  <HKSPSyncAnchor> *sleepModeSyncAnchor
 @property  <HKSPSyncAnchor> *sleepEventSyncAnchor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKSPSyncAnchorContainer supportsSecureCoding]
  +[HKSPSyncAnchorContainer descriptionForKey:]
  +[HKSPSyncAnchorContainer allKeys]

  // instance methods
  -[HKSPSyncAnchorContainer forceSetSleepScheduleSyncAnchor:]
  -[HKSPSyncAnchorContainer incrementSleepSettingsSyncAnchor]
  -[HKSPSyncAnchorContainer identifier]
  -[HKSPSyncAnchorContainer lock_getSyncAnchorForKey:]
  -[HKSPSyncAnchorContainer sleepScheduleStateSyncAnchor]
  -[HKSPSyncAnchorContainer updateWithContainer:]
  -[HKSPSyncAnchorContainer descriptionWithMultilinePrefix:]
  -[HKSPSyncAnchorContainer encodeWithCoder:]
  -[HKSPSyncAnchorContainer compareWithContainer:sleepScheduleSyncAnchorOutOfDate:sleepSettingsSyncAnchorOutOfDate:sleepEventRecordSyncAnchorOutOfDate:sleepScheduleStateSyncAnchorOutOfDate:sleepModeSyncAnchorOutOfDate:sleepEventSyncAnchorOutOfDate:]
  -[HKSPSyncAnchorContainer descriptionBuilderWithMultilinePrefix:]
  -[HKSPSyncAnchorContainer updateSleepEventRecordSyncAnchor:]
  -[HKSPSyncAnchorContainer updateSleepEventSyncAnchor:]
  -[HKSPSyncAnchorContainer .cxx_destruct]
  -[HKSPSyncAnchorContainer sleepScheduleSyncAnchor]
  -[HKSPSyncAnchorContainer incrementSleepScheduleSyncAnchor]
  -[HKSPSyncAnchorContainer succinctDescription]
  -[HKSPSyncAnchorContainer incrementSleepModeSyncAnchor]
  -[HKSPSyncAnchorContainer initWithIdentifier:]
  -[HKSPSyncAnchorContainer incrementSleepEventRecordSyncAnchor]
  -[HKSPSyncAnchorContainer sleepModeSyncAnchor]
  -[HKSPSyncAnchorContainer updateSleepScheduleStateSyncAnchor:]
  -[HKSPSyncAnchorContainer updateSleepModeSyncAnchor:]
  -[HKSPSyncAnchorContainer lock_setSyncAnchor:forKey:]
  -[HKSPSyncAnchorContainer lock_syncAnchorForKey:]
  -[HKSPSyncAnchorContainer updateSleepSettingsSyncAnchor:]
  -[HKSPSyncAnchorContainer updateSyncAnchor:forKey:]
  -[HKSPSyncAnchorContainer copyWithZone:]
  -[HKSPSyncAnchorContainer syncAnchorForKey:]
  -[HKSPSyncAnchorContainer lock_updateSyncAnchor:forKey:]
  -[HKSPSyncAnchorContainer sleepEventSyncAnchor]
  -[HKSPSyncAnchorContainer sleepEventRecordSyncAnchor]
  -[HKSPSyncAnchorContainer _withLock:]
  -[HKSPSyncAnchorContainer succinctDescriptionBuilder]
  -[HKSPSyncAnchorContainer lock_removeSyncAnchorForKey:]
  -[HKSPSyncAnchorContainer incrementSleepEventSyncAnchor]
  -[HKSPSyncAnchorContainer sleepSettingsSyncAnchor]
  -[HKSPSyncAnchorContainer updateSleepScheduleSyncAnchor:]
  -[HKSPSyncAnchorContainer incrementSyncAnchorForKey:]
  -[HKSPSyncAnchorContainer lock_incrementSyncAnchorForKey:]
  -[HKSPSyncAnchorContainer incrementSleepScheduleStateSyncAnchor]
  -[HKSPSyncAnchorContainer initWithCoder:]


HKSPXPCConnectionListener : NSObject <NSXPCListenerDelegate, BSDescriptionProviding>
 @property  HKSPXPCConnectionInfo *connectionInfo
 @property  NSXPCListener *connectionListener
 @property  {os_unfair_lock_s=I} clientLock
 @property  NSMutableSet *connectedClientSet
 @property  <HKSPXPCConnectionListenerDelegate> *delegate
 @property  NSArray *connectedClients
 @property  HKSPXPCClient *currentClient
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKSPXPCConnectionListener listenerWithConnectionInfo:]

  // instance methods
  -[HKSPXPCConnectionListener startListening]
  -[HKSPXPCConnectionListener connectionListener]
  -[HKSPXPCConnectionListener connectedClients]
  -[HKSPXPCConnectionListener initWithConnectionInfo:connectionListener:]
  -[HKSPXPCConnectionListener connectionInfo]
  -[HKSPXPCConnectionListener setDelegate:]
  -[HKSPXPCConnectionListener descriptionWithMultilinePrefix:]
  -[HKSPXPCConnectionListener delegate]
  -[HKSPXPCConnectionListener performRemoteBlockOnClients:]
  -[HKSPXPCConnectionListener descriptionBuilderWithMultilinePrefix:]
  -[HKSPXPCConnectionListener currentClient]
  -[HKSPXPCConnectionListener dealloc]
  -[HKSPXPCConnectionListener .cxx_destruct]
  -[HKSPXPCConnectionListener _didInvalidateConnection:]
  -[HKSPXPCConnectionListener performRemoteBlockOnClients:passingTest:]
  -[HKSPXPCConnectionListener succinctDescription]
  -[HKSPXPCConnectionListener _currentClientForConnection:]
  -[HKSPXPCConnectionListener connectedClientsWithPID:]
  -[HKSPXPCConnectionListener _didInterruptConnection]
  -[HKSPXPCConnectionListener addClientConnection:clientLink:]
  -[HKSPXPCConnectionListener performRemoteBlock:onClient:]
  -[HKSPXPCConnectionListener connectedClientSet]
  -[HKSPXPCConnectionListener _clientIdentifierProviderForClientLink:]
  -[HKSPXPCConnectionListener _clientWithConnection:clientLink:]
  -[HKSPXPCConnectionListener _withLock:]
  -[HKSPXPCConnectionListener succinctDescriptionBuilder]
  -[HKSPXPCConnectionListener clientLock]
  -[HKSPXPCConnectionListener _lock_logConnectedClients]
  -[HKSPXPCConnectionListener listener:shouldAcceptNewConnection:]
  -[HKSPXPCConnectionListener initWithConnectionInfo:]
  -[HKSPXPCConnectionListener removeClientConnection:]


HKSPAnalyticsOnboardingInfo : NSObject
 @property  unsigned long step
 @property  unsigned long action
 @property  unsigned long entryPoint

  // instance methods
  -[HKSPAnalyticsOnboardingInfo step]
  -[HKSPAnalyticsOnboardingInfo action]
  -[HKSPAnalyticsOnboardingInfo entryPoint]
  -[HKSPAnalyticsOnboardingInfo initWithStep:action:entryPoint:]
  -[HKSPAnalyticsOnboardingInfo stepPayloadValue]
  -[HKSPAnalyticsOnboardingInfo actionPayloadValue]
  -[HKSPAnalyticsOnboardingInfo entryPointPayloadValue]


_HKSPQueueBackedScheduler : NSObject <HKSPQueueBackedScheduler>
 @property  <NAScheduler> *scheduler
 @property  NSObject<OS_dispatch_queue> *queue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_HKSPQueueBackedScheduler performBlock:]
  -[_HKSPQueueBackedScheduler afterDelay:performBlock:]
  -[_HKSPQueueBackedScheduler scheduler]
  -[_HKSPQueueBackedScheduler performCancelableBlock:]
  -[_HKSPQueueBackedScheduler suspend]
  -[_HKSPQueueBackedScheduler .cxx_destruct]
  -[_HKSPQueueBackedScheduler resume]
  -[_HKSPQueueBackedScheduler initWithScheduler:queue:]
  -[_HKSPQueueBackedScheduler initWithQueue:]
  -[_HKSPQueueBackedScheduler queue]


_HKSPManualQueueBackedScheduler : _HKSPQueueBackedScheduler <HKSPQueueBackedScheduler>
 @property  BOOL isSuspended
 @property  NSMutableArray *blocks
 @property  NSObject<OS_dispatch_queue> *queue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_HKSPManualQueueBackedScheduler performBlock:]
  -[_HKSPManualQueueBackedScheduler afterDelay:performBlock:]
  -[_HKSPManualQueueBackedScheduler performCancelableBlock:]
  -[_HKSPManualQueueBackedScheduler isSuspended]
  -[_HKSPManualQueueBackedScheduler suspend]
  -[_HKSPManualQueueBackedScheduler .cxx_destruct]
  -[_HKSPManualQueueBackedScheduler resume]
  -[_HKSPManualQueueBackedScheduler initWithScheduler:queue:]
  -[_HKSPManualQueueBackedScheduler blocks]


HKSPXPCClient : NSObject <BSDescriptionProviding>
 @property  HKSPXPCClientIdentifier *clientIdentifier
 @property  NSXPCConnection *connection
 @property  <HKSPClient> *clientLink
 @property  int processID
 @property  NAFuture *clientIdentifierProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKSPXPCClient clientForConnection:clientLink:]
  +[HKSPXPCClient clientForConnection:clientIdentifierProvider:clientLink:]

  // instance methods
  -[HKSPXPCClient setClientIdentifier:]
  -[HKSPXPCClient clientIdentifier]
  -[HKSPXPCClient descriptionWithMultilinePrefix:]
  -[HKSPXPCClient descriptionBuilderWithMultilinePrefix:]
  -[HKSPXPCClient .cxx_destruct]
  -[HKSPXPCClient connection]
  -[HKSPXPCClient succinctDescription]
  -[HKSPXPCClient processID]
  -[HKSPXPCClient succinctDescriptionBuilder]
  -[HKSPXPCClient isEqual:]
  -[HKSPXPCClient clientLink]
  -[HKSPXPCClient initWithConnection:clientIdentifierProvider:clientLink:]
  -[HKSPXPCClient clientIdentifierProvider]


HKSPXPCClientIdentifier : NSObject <BSDescriptionProviding, NSSecureCoding, NSCopying>
 @property  NSUUID *uniqueIdentifier
 @property  NSString *loggingIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKSPXPCClientIdentifier supportsSecureCoding]

  // instance methods
  -[HKSPXPCClientIdentifier descriptionWithMultilinePrefix:]
  -[HKSPXPCClientIdentifier encodeWithCoder:]
  -[HKSPXPCClientIdentifier descriptionBuilderWithMultilinePrefix:]
  -[HKSPXPCClientIdentifier .cxx_destruct]
  -[HKSPXPCClientIdentifier succinctDescription]
  -[HKSPXPCClientIdentifier initWithUniqueIdentifier:loggingIdentifier:]
  -[HKSPXPCClientIdentifier copyWithZone:]
  -[HKSPXPCClientIdentifier uniqueIdentifier]
  -[HKSPXPCClientIdentifier loggingIdentifier]
  -[HKSPXPCClientIdentifier succinctDescriptionBuilder]
  -[HKSPXPCClientIdentifier isEqual:]
  -[HKSPXPCClientIdentifier initWithCoder:]


HKSPAlarmConfiguration : NSObject <BSDescriptionProviding, HKSPObject, HKSPDictionarySerializable, NAEquatable, NAHashable, NSMutableCopying>
 @property  BOOL enabled
 @property  BOOL allowsSnooze
 @property  unsigned long playOptions
 @property  NSString *toneIdentifier
 @property  NSString *vibrationIdentifier
 @property  NSNumber *soundVolume
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long version
 @property  NSDate *lastModifiedDate
 @property  NSSet *significantChanges
 @property  NSDictionary *relationshipChanges

  // class methods
  +[HKSPAlarmConfiguration supportsSecureCoding]

  // instance methods
  -[HKSPAlarmConfiguration toneIdentifier]
  -[HKSPAlarmConfiguration _migrateForCoder:]
  -[HKSPAlarmConfiguration copyFromObject:]
  -[HKSPAlarmConfiguration _equateTo:builderBuilderBlock:]
  -[HKSPAlarmConfiguration descriptionWithMultilinePrefix:]
  -[HKSPAlarmConfiguration encodeWithCoder:]
  -[HKSPAlarmConfiguration descriptionBuilderWithMultilinePrefix:]
  -[HKSPAlarmConfiguration _buildForEquivalenceTo:builder:]
  -[HKSPAlarmConfiguration mutableCopy]
  -[HKSPAlarmConfiguration .cxx_destruct]
  -[HKSPAlarmConfiguration succinctDescription]
  -[HKSPAlarmConfiguration version]
  -[HKSPAlarmConfiguration vibrationIdentifier]
  -[HKSPAlarmConfiguration playOptions]
  -[HKSPAlarmConfiguration allowsSnooze]
  -[HKSPAlarmConfiguration copyWithZone:]
  -[HKSPAlarmConfiguration soundVolume]
  -[HKSPAlarmConfiguration isEquivalentTo:]
  -[HKSPAlarmConfiguration succinctDescriptionBuilder]
  -[HKSPAlarmConfiguration significantChanges]
  -[HKSPAlarmConfiguration mutableCopyWithZone:]
  -[HKSPAlarmConfiguration _needsMigrationForCoder:]
  -[HKSPAlarmConfiguration initFromObject:]
  -[HKSPAlarmConfiguration isEqual:]
  -[HKSPAlarmConfiguration init]
  -[HKSPAlarmConfiguration isEnabled]
  -[HKSPAlarmConfiguration initWithCoder:]


HKSPMutableAlarmConfiguration : HKSPAlarmConfiguration <HKSPMutableObject>
 @property  BOOL enabled
 @property  BOOL allowsSnooze
 @property  NSString *toneIdentifier
 @property  NSString *vibrationIdentifier
 @property  NSNumber *soundVolume
 @property  NSDate *lastModifiedDate
 @property  HKSPChangeSet *changeSet
 @property  <HKSPObject> *originalObject
 @property  unsigned long version
 @property  NSSet *significantChanges
 @property  NSDictionary *relationshipChanges
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKSPMutableAlarmConfiguration supportsSecureCoding]

  // instance methods
  -[HKSPMutableAlarmConfiguration setAllowsSnooze:]
  -[HKSPMutableAlarmConfiguration toneIdentifier]
  -[HKSPMutableAlarmConfiguration encodeWithCoder:]
  -[HKSPMutableAlarmConfiguration setVibrationIdentifier:]
  -[HKSPMutableAlarmConfiguration setPlayOptions:]
  -[HKSPMutableAlarmConfiguration mutableCopy]
  -[HKSPMutableAlarmConfiguration .cxx_destruct]
  -[HKSPMutableAlarmConfiguration setEnabled:]
  -[HKSPMutableAlarmConfiguration changeSet]
  -[HKSPMutableAlarmConfiguration freeze]
  -[HKSPMutableAlarmConfiguration setToneIdentifier:]
  -[HKSPMutableAlarmConfiguration vibrationIdentifier]
  -[HKSPMutableAlarmConfiguration playOptions]
  -[HKSPMutableAlarmConfiguration originalObject]
  -[HKSPMutableAlarmConfiguration allowsSnooze]
  -[HKSPMutableAlarmConfiguration copyWithZone:]
  -[HKSPMutableAlarmConfiguration soundVolume]
  -[HKSPMutableAlarmConfiguration init]
  -[HKSPMutableAlarmConfiguration isEnabled]
  -[HKSPMutableAlarmConfiguration initWithCoder:]
  -[HKSPMutableAlarmConfiguration setSoundVolume:]
  -[HKSPMutableAlarmConfiguration initWithTemplateAlarmConfiguration:]


HKSPSleepEventRecord : NSObject <HKSPOnboardingModel, BSDescriptionProviding, HKSPXPCObject, HKSPObject, HKSPDictionarySerializable, NAEquatable, NAHashable, NSMutableCopying>
 @property  BOOL isCurrentSleepCoachingOnboardingCompleted
 @property  BOOL isCurrentSleepTrackingOnboardingCompleted
 @property  BOOL isCurrentSleepWindDownShortcutsOnboardingCompleted
 @property  long long sleepCoachingOnboardingCompletedVersion
 @property  long long sleepTrackingOnboardingCompletedVersion
 @property  long long sleepWindDownShortcutsOnboardingCompletedVersion
 @property  NSDate *sleepCoachingOnboardingFirstCompletedDate
 @property  NSDate *sleepTrackingOnboardingFirstCompletedDate
 @property  NSDate *sleepWindDownShortcutsOnboardingFirstCompletedDate
 @property  long long sleepCoachingOnboardingCompletedVersion
 @property  NSDate *sleepCoachingOnboardingFirstCompletedDate
 @property  long long sleepTrackingOnboardingCompletedVersion
 @property  NSDate *sleepTrackingOnboardingFirstCompletedDate
 @property  long long sleepWindDownShortcutsOnboardingCompletedVersion
 @property  NSDate *sleepWindDownShortcutsOnboardingFirstCompletedDate
 @property  BOOL currentSleepCoachingOnboardingCompleted
 @property  BOOL currentSleepTrackingOnboardingCompleted
 @property  BOOL currentSleepWindDownShortcutsOnboardingCompleted
 @property  BOOL anySleepTrackingOnboardingCompleted
 @property  BOOL anySleepCoachingOnboardingCompleted
 @property  BOOL anySleepWindDownShortcutsOnboardingCompleted
 @property  NSDate *wakeUpEarlyNotificationConfirmedDate
 @property  NSDate *wakeUpAlarmDismissedDate
 @property  NSDate *wakeUpOverriddenDate
 @property  NSDate *wakeUpConfirmedUntilDate
 @property  NSDate *wakeUpAlarmSnoozedUntilDate
 @property  NSDate *goodMorningDismissedDate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <HKSPSyncAnchor> *syncAnchor
 @property  unsigned long version
 @property  NSDate *lastModifiedDate
 @property  NSSet *significantChanges
 @property  NSDictionary *relationshipChanges

  // class methods
  +[HKSPSleepEventRecord supportsSecureCoding]
  +[HKSPSleepEventRecord _appendDateDescriptionIfRelevant:withName:toBuilder:]

  // instance methods
  -[HKSPSleepEventRecord objectWithSyncAnchor:]
  -[HKSPSleepEventRecord wakeUpAlarmSnoozedUntilDate]
  -[HKSPSleepEventRecord _migrateForCoder:]
  -[HKSPSleepEventRecord isAnySleepTrackingOnboardingCompleted]
  -[HKSPSleepEventRecord copyFromObject:]
  -[HKSPSleepEventRecord _equateTo:builderBuilderBlock:]
  -[HKSPSleepEventRecord goodMorningDismissedDate]
  -[HKSPSleepEventRecord sleepCoachingOnboardingFirstCompletedDate]
  -[HKSPSleepEventRecord descriptionWithMultilinePrefix:]
  -[HKSPSleepEventRecord encodeWithCoder:]
  -[HKSPSleepEventRecord lastModifiedDate]
  -[HKSPSleepEventRecord descriptionBuilderWithMultilinePrefix:]
  -[HKSPSleepEventRecord sleepTrackingOnboardingCompletedVersion]
  -[HKSPSleepEventRecord _buildForEquivalenceTo:builder:]
  -[HKSPSleepEventRecord mutableCopy]
  -[HKSPSleepEventRecord isAnySleepWindDownShortcutsOnboardingCompleted]
  -[HKSPSleepEventRecord isCurrentSleepWindDownShortcutsOnboardingCompleted]
  -[HKSPSleepEventRecord .cxx_destruct]
  -[HKSPSleepEventRecord succinctDescription]
  -[HKSPSleepEventRecord isCurrentSleepTrackingOnboardingCompleted]
  -[HKSPSleepEventRecord sleepWindDownShortcutsOnboardingFirstCompletedDate]
  -[HKSPSleepEventRecord sleepCoachingOnboardingCompletedVersion]
  -[HKSPSleepEventRecord isEqualToModel:]
  -[HKSPSleepEventRecord wakeUpConfirmedUntilDate]
  -[HKSPSleepEventRecord version]
  -[HKSPSleepEventRecord isCurrentSleepCoachingOnboardingCompleted]
  -[HKSPSleepEventRecord wakeUpAlarmDismissedDate]
  -[HKSPSleepEventRecord wakeUpEarlyNotificationConfirmedDate]
  -[HKSPSleepEventRecord copyWithZone:]
  -[HKSPSleepEventRecord syncAnchor]
  -[HKSPSleepEventRecord sleepWindDownShortcutsOnboardingCompletedVersion]
  -[HKSPSleepEventRecord isAnySleepCoachingOnboardingCompleted]
  -[HKSPSleepEventRecord isEquivalentTo:]
  -[HKSPSleepEventRecord succinctDescriptionBuilder]
  -[HKSPSleepEventRecord significantChanges]
  -[HKSPSleepEventRecord wakeUpOverriddenDate]
  -[HKSPSleepEventRecord mutableCopyWithZone:]
  -[HKSPSleepEventRecord _needsMigrationForCoder:]
  -[HKSPSleepEventRecord initFromObject:]
  -[HKSPSleepEventRecord isEqual:]
  -[HKSPSleepEventRecord init]
  -[HKSPSleepEventRecord sleepTrackingOnboardingFirstCompletedDate]
  -[HKSPSleepEventRecord initWithCoder:]


HKSPMutableSleepEventRecord : HKSPSleepEventRecord <HKSPMutableObject>
 @property  NSDate *wakeUpEarlyNotificationConfirmedDate
 @property  NSDate *wakeUpConfirmedUntilDate
 @property  NSDate *wakeUpAlarmDismissedDate
 @property  NSDate *wakeUpOverriddenDate
 @property  NSDate *wakeUpAlarmSnoozedUntilDate
 @property  NSDate *goodMorningDismissedDate
 @property  long long sleepCoachingOnboardingCompletedVersion
 @property  NSDate *sleepCoachingOnboardingFirstCompletedDate
 @property  long long sleepTrackingOnboardingCompletedVersion
 @property  NSDate *sleepTrackingOnboardingFirstCompletedDate
 @property  long long sleepWindDownShortcutsOnboardingCompletedVersion
 @property  NSDate *sleepWindDownShortcutsOnboardingFirstCompletedDate
 @property  NSDate *lastModifiedDate
 @property  HKSPChangeSet *changeSet
 @property  <HKSPObject> *originalObject
 @property  unsigned long version
 @property  NSSet *significantChanges
 @property  NSDictionary *relationshipChanges
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKSPMutableSleepEventRecord supportsSecureCoding]

  // instance methods
  -[HKSPMutableSleepEventRecord setWakeUpAlarmSnoozedUntilDate:]
  -[HKSPMutableSleepEventRecord wakeUpAlarmSnoozedUntilDate]
  -[HKSPMutableSleepEventRecord setSleepTrackingOnboardingCompletedVersion:]
  -[HKSPMutableSleepEventRecord setSleepCoachingOnboardingCompletedVersion:]
  -[HKSPMutableSleepEventRecord setWakeUpEarlyNotificationConfirmedDate:]
  -[HKSPMutableSleepEventRecord goodMorningDismissedDate]
  -[HKSPMutableSleepEventRecord setWakeUpOverriddenDate:]
  -[HKSPMutableSleepEventRecord sleepCoachingOnboardingFirstCompletedDate]
  -[HKSPMutableSleepEventRecord encodeWithCoder:]
  -[HKSPMutableSleepEventRecord lastModifiedDate]
  -[HKSPMutableSleepEventRecord updateSleepWindDownShortcutsOnboardingCompletedVersion:completedDate:]
  -[HKSPMutableSleepEventRecord setWakeUpAlarmDismissedDate:]
  -[HKSPMutableSleepEventRecord updateSleepCoachingOnboardingCompletedVersion:completedDate:]
  -[HKSPMutableSleepEventRecord sleepTrackingOnboardingCompletedVersion]
  -[HKSPMutableSleepEventRecord mutableCopy]
  -[HKSPMutableSleepEventRecord setSleepWindDownShortcutsOnboardingCompletedVersion:]
  -[HKSPMutableSleepEventRecord .cxx_destruct]
  -[HKSPMutableSleepEventRecord setSleepCoachingOnboardingFirstCompletedDate:]
  -[HKSPMutableSleepEventRecord changeSet]
  -[HKSPMutableSleepEventRecord freeze]
  -[HKSPMutableSleepEventRecord setGoodMorningDismissedDate:]
  -[HKSPMutableSleepEventRecord sleepWindDownShortcutsOnboardingFirstCompletedDate]
  -[HKSPMutableSleepEventRecord sleepCoachingOnboardingCompletedVersion]
  -[HKSPMutableSleepEventRecord wakeUpConfirmedUntilDate]
  -[HKSPMutableSleepEventRecord wakeUpAlarmDismissedDate]
  -[HKSPMutableSleepEventRecord originalObject]
  -[HKSPMutableSleepEventRecord wakeUpEarlyNotificationConfirmedDate]
  -[HKSPMutableSleepEventRecord setSleepTrackingOnboardingFirstCompletedDate:]
  -[HKSPMutableSleepEventRecord copyWithZone:]
  -[HKSPMutableSleepEventRecord setLastModifiedDate:]
  -[HKSPMutableSleepEventRecord sleepWindDownShortcutsOnboardingCompletedVersion]
  -[HKSPMutableSleepEventRecord setWakeUpConfirmedUntilDate:]
  -[HKSPMutableSleepEventRecord wakeUpOverriddenDate]
  -[HKSPMutableSleepEventRecord updateSleepTrackingOnboardingCompletedVersion:completedDate:]
  -[HKSPMutableSleepEventRecord setSleepWindDownShortcutsOnboardingFirstCompletedDate:]
  -[HKSPMutableSleepEventRecord init]
  -[HKSPMutableSleepEventRecord sleepTrackingOnboardingFirstCompletedDate]
  -[HKSPMutableSleepEventRecord initWithCoder:]


HKSPXPCConnectionProvider : NSObject <BSDescriptionProviding>
 @property  {os_unfair_lock_s=I} connectionLock
 @property  HKSPXPCConnectionInfo *connectionInfo
 @property  @? connectionProvider
 @property  NSXPCConnection *connection
 @property  {os_unfair_lock_s=I} pendingMessagesLock
 @property  NSMutableDictionary *pendingMessages
 @property  BOOL invalidated
 @property  <HKSPXPCConnectionProviderDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKSPXPCConnectionProvider providerWithConnectionInfo:]

  // instance methods
  -[HKSPXPCConnectionProvider sendMessage:]
  -[HKSPXPCConnectionProvider connectionLock]
  -[HKSPXPCConnectionProvider _removePendingMessage:]
  -[HKSPXPCConnectionProvider connectionInfo]
  -[HKSPXPCConnectionProvider isInvalidated]
  -[HKSPXPCConnectionProvider setDelegate:]
  -[HKSPXPCConnectionProvider descriptionWithMultilinePrefix:]
  -[HKSPXPCConnectionProvider invalidated]
  -[HKSPXPCConnectionProvider delegate]
  -[HKSPXPCConnectionProvider descriptionBuilderWithMultilinePrefix:]
  -[HKSPXPCConnectionProvider didReceiveLifecycleNotification]
  -[HKSPXPCConnectionProvider dealloc]
  -[HKSPXPCConnectionProvider _addPendingMessage:]
  -[HKSPXPCConnectionProvider .cxx_destruct]
  -[HKSPXPCConnectionProvider connectionProvider]
  -[HKSPXPCConnectionProvider connection]
  -[HKSPXPCConnectionProvider succinctDescription]
  -[HKSPXPCConnectionProvider _didInterruptConnection]
  -[HKSPXPCConnectionProvider _retryPendingMessages]
  -[HKSPXPCConnectionProvider invalidate]
  -[HKSPXPCConnectionProvider _withLock:]
  -[HKSPXPCConnectionProvider succinctDescriptionBuilder]
  -[HKSPXPCConnectionProvider pendingMessagesLock]
  -[HKSPXPCConnectionProvider performRemoteBlock:withErrorHandler:doSynchronously:]
  -[HKSPXPCConnectionProvider performRemoteBlock:withErrorHandler:]
  -[HKSPXPCConnectionProvider _didInvalidateConnection]
  -[HKSPXPCConnectionProvider pendingMessages]
  -[HKSPXPCConnectionProvider initWithConnectionInfo:connectionProvider:]
  -[HKSPXPCConnectionProvider initWithConnectionInfo:]


HKSPSleepScheduleStateObject : NSObject <HKSPXPCObject>
 @property  unsigned long scheduleState
 @property  <HKSPSyncAnchor> *syncAnchor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKSPSleepScheduleStateObject supportsSecureCoding]

  // instance methods
  -[HKSPSleepScheduleStateObject scheduleState]
  -[HKSPSleepScheduleStateObject objectWithSyncAnchor:]
  -[HKSPSleepScheduleStateObject encodeWithCoder:]
  -[HKSPSleepScheduleStateObject .cxx_destruct]
  -[HKSPSleepScheduleStateObject copyWithZone:]
  -[HKSPSleepScheduleStateObject syncAnchor]
  -[HKSPSleepScheduleStateObject initWithScheduleState:syncAnchor:]
  -[HKSPSleepScheduleStateObject initWithCoder:]


HKSPPersistentSyncAnchorContainer : HKSPSyncAnchorContainer
  // class methods
  +[HKSPPersistentSyncAnchorContainer supportsSecureCoding]

  // instance methods
  -[HKSPPersistentSyncAnchorContainer lock_getSyncAnchorForKey:]
  -[HKSPPersistentSyncAnchorContainer .cxx_destruct]
  -[HKSPPersistentSyncAnchorContainer inMemoryCopy]
  -[HKSPPersistentSyncAnchorContainer lock_setSyncAnchor:forKey:]
  -[HKSPPersistentSyncAnchorContainer copyWithZone:]
  -[HKSPPersistentSyncAnchorContainer lock_removeSyncAnchorForKey:]
  -[HKSPPersistentSyncAnchorContainer initWithIdentifier:defaults:]


HKSPSleepEventTimelineBuilder : NSObject
 @property  HKSPSleepEventTimelineResults *results
 @property  HKSPSleepScheduleModel *sleepScheduleModel
 @property  NSDate *date
 @property  NSCalendar *calendar
 @property  unsigned long options

  // class methods
  +[HKSPSleepEventTimelineBuilder builderWithSleepScheduleModel:date:]

  // instance methods
  -[HKSPSleepEventTimelineBuilder sleepScheduleModel]
  -[HKSPSleepEventTimelineBuilder _gatherSessions]
  -[HKSPSleepEventTimelineBuilder _validateSessionAdjustmentForSnoozedWakeUpAlarm]
  -[HKSPSleepEventTimelineBuilder calendar]
  -[HKSPSleepEventTimelineBuilder _gatherSessionsForValidationForOccurrence:overrideOccurrence:]
  -[HKSPSleepEventTimelineBuilder date]
  -[HKSPSleepEventTimelineBuilder .cxx_destruct]
  -[HKSPSleepEventTimelineBuilder options]
  -[HKSPSleepEventTimelineBuilder _adjustSessionForSnoozedWakeUpAlarm]
  -[HKSPSleepEventTimelineBuilder initWithSleepScheduleModel:date:]
  -[HKSPSleepEventTimelineBuilder _addSessionToTimelineWithWakeUpDate:bedtimeDate:windDownDate:occurrence:]
  -[HKSPSleepEventTimelineBuilder buildTimelineWithOptions:]
  -[HKSPSleepEventTimelineBuilder _windDownDateForBedtimeDate:]
  -[HKSPSleepEventTimelineBuilder _adjustSessionForConfirmedWakeUp]
  -[HKSPSleepEventTimelineBuilder results]
  -[HKSPSleepEventTimelineBuilder _validateSessionAdjustments]
  -[HKSPSleepEventTimelineBuilder _adjustSessions]
  -[HKSPSleepEventTimelineBuilder _gatherSessionsForOccurrence:overrideOccurrence:]


HKSPSleepEventTimelineResults : NSObject
 @property  HKSPSleepEventTimeline *timeline
 @property  HKSPSleepEventTimeline *unadjustedTimeline
 @property  BOOL sleepScheduleInvalid
 @property  unsigned long sleepScheduleInvalidReason
 @property  BOOL snoozeFireDateNeedsReset
 @property  HKSPSleepSchedule *originalSleepSchedule
 @property  HKSPMutableSleepSchedule *mutableValidSleepSchedule
 @property  HKSPSleepSchedule *validSleepSchedule

  // instance methods
  -[HKSPSleepEventTimelineResults sleepScheduleInvalidReason]
  -[HKSPSleepEventTimelineResults unadjustedTimeline]
  -[HKSPSleepEventTimelineResults sleepScheduleInvalid]
  -[HKSPSleepEventTimelineResults validSleepSchedule]
  -[HKSPSleepEventTimelineResults setSleepScheduleInvalid:]
  -[HKSPSleepEventTimelineResults originalSleepSchedule]
  -[HKSPSleepEventTimelineResults .cxx_destruct]
  -[HKSPSleepEventTimelineResults mutableValidSleepSchedule]
  -[HKSPSleepEventTimelineResults setOriginalSleepSchedule:]
  -[HKSPSleepEventTimelineResults setSnoozeFireDateNeedsReset:]
  -[HKSPSleepEventTimelineResults snoozeFireDateNeedsReset]
  -[HKSPSleepEventTimelineResults setSleepScheduleInvalidReason:]
  -[HKSPSleepEventTimelineResults setTimeline:]
  -[HKSPSleepEventTimelineResults setMutableValidSleepSchedule:]
  -[HKSPSleepEventTimelineResults timeline]
  -[HKSPSleepEventTimelineResults setUnadjustedTimeline:]


HKSPXPCConnectionInfo : NSObject <BSDescriptionProviding>
 @property  NSString *machServiceName
 @property  NSXPCInterface *remoteObjectInterface
 @property  id exportedObject
 @property  NSXPCInterface *exportedObjectInterface
 @property  NSString *lifecycleNotification
 @property  NSString *requiredEntitlement
 @property  unsigned long options
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKSPXPCConnectionInfo infoForMachServiceName:remoteObjectInterface:exportedObject:exportedObjectInterface:lifecycleNotification:requiredEntitlement:options:]

  // instance methods
  -[HKSPXPCConnectionInfo lifecycleNotification]
  -[HKSPXPCConnectionInfo descriptionWithMultilinePrefix:]
  -[HKSPXPCConnectionInfo descriptionBuilderWithMultilinePrefix:]
  -[HKSPXPCConnectionInfo remoteObjectInterface]
  -[HKSPXPCConnectionInfo requiredEntitlement]
  -[HKSPXPCConnectionInfo .cxx_destruct]
  -[HKSPXPCConnectionInfo succinctDescription]
  -[HKSPXPCConnectionInfo options]
  -[HKSPXPCConnectionInfo exportedObjectInterface]
  -[HKSPXPCConnectionInfo initWithMachServiceName:remoteObjectInterface:exportedObject:exportedObjectInterface:lifecycleNotification:requiredEntitlement:options:]
  -[HKSPXPCConnectionInfo machServiceName]
  -[HKSPXPCConnectionInfo exportedObject]
  -[HKSPXPCConnectionInfo succinctDescriptionBuilder]


HKSPAnalyticsOnboardingEvent : NSObject <HKSPAnalyticsEvent>
 @property  NSString *eventName
 @property  NSDictionary *eventPayload
 @property  NSArray *keysRequiringIHAGating
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HKSPAnalyticsOnboardingEvent setEventName:]
  -[HKSPAnalyticsOnboardingEvent eventName]
  -[HKSPAnalyticsOnboardingEvent .cxx_destruct]
  -[HKSPAnalyticsOnboardingEvent eventPayload]
  -[HKSPAnalyticsOnboardingEvent setEventPayload:]
  -[HKSPAnalyticsOnboardingEvent initWithOnboardingInfo:provenanceInfo:]


HKSPHealthStoreProvider : NSObject
 @property  HKSleepHealthStore *sleepHealthStore
 @property  HKHealthStore *healthStore

  // class methods
  +[HKSPHealthStoreProvider _initializedLocalDeviceHealthStore]

  // instance methods
  -[HKSPHealthStoreProvider healthStore]
  -[HKSPHealthStoreProvider initWithSleepHealthStore:healthStore:]
  -[HKSPHealthStoreProvider .cxx_destruct]
  -[HKSPHealthStoreProvider sleepHealthStore]
  -[HKSPHealthStoreProvider initWithLocalDeviceHealthStore]


HKSPSleepFocusConfiguration : NSObject <BSDescriptionProviding, NAEquatable, NAHashable>
 @property  BOOL hasSleepFocusMode
 @property  NSUUID *uuid
 @property  BOOL mirrorsFocusModes
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKSPSleepFocusConfiguration readFromDefaults]

  // instance methods
  -[HKSPSleepFocusConfiguration hasSleepFocusMode]
  -[HKSPSleepFocusConfiguration sleepFocusConfigurationUpdatingMirrorsFocusModes:]
  -[HKSPSleepFocusConfiguration descriptionWithMultilinePrefix:]
  -[HKSPSleepFocusConfiguration copy]
  -[HKSPSleepFocusConfiguration descriptionBuilderWithMultilinePrefix:]
  -[HKSPSleepFocusConfiguration initWithUUID:mirrorsFocusModes:]
  -[HKSPSleepFocusConfiguration uuid]
  -[HKSPSleepFocusConfiguration .cxx_destruct]
  -[HKSPSleepFocusConfiguration succinctDescription]
  -[HKSPSleepFocusConfiguration sleepFocusConfigurationUpdatingUUID:]
  -[HKSPSleepFocusConfiguration succinctDescriptionBuilder]
  -[HKSPSleepFocusConfiguration mirrorsFocusModes]
  -[HKSPSleepFocusConfiguration isEqual:]
  -[HKSPSleepFocusConfiguration writeToDefaults]


HKSPSleepScheduleDayOccurrence : NSObject <HKSPObject, HKSPDictionarySerializable, NAEquatable, NAHashable>
 @property  NSDateComponents *bedtimeComponents
 @property  NSDateComponents *wakeUpComponents
 @property  HKSPAlarmConfiguration *alarmConfiguration
 @property  NSString *groupingIdentifier
 @property  unsigned long version
 @property  NSDate *lastModifiedDate
 @property  NSSet *significantChanges
 @property  NSDictionary *relationshipChanges
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKSPSleepScheduleDayOccurrence supportsSecureCoding]
  +[HKSPSleepScheduleDayOccurrence innerClasses]

  // instance methods
  -[HKSPSleepScheduleDayOccurrence copyFromObject:]
  -[HKSPSleepScheduleDayOccurrence _equateTo:builderBuilderBlock:]
  -[HKSPSleepScheduleDayOccurrence bedtimeComponents]
  -[HKSPSleepScheduleDayOccurrence descriptionWithMultilinePrefix:]
  -[HKSPSleepScheduleDayOccurrence groupingIdentifier]
  -[HKSPSleepScheduleDayOccurrence encodeWithCoder:]
  -[HKSPSleepScheduleDayOccurrence descriptionBuilderWithMultilinePrefix:]
  -[HKSPSleepScheduleDayOccurrence mutableCopy]
  -[HKSPSleepScheduleDayOccurrence .cxx_destruct]
  -[HKSPSleepScheduleDayOccurrence succinctDescription]
  -[HKSPSleepScheduleDayOccurrence relationshipChanges]
  -[HKSPSleepScheduleDayOccurrence version]
  -[HKSPSleepScheduleDayOccurrence copyWithZone:]
  -[HKSPSleepScheduleDayOccurrence isEquivalentTo:]
  -[HKSPSleepScheduleDayOccurrence succinctDescriptionBuilder]
  -[HKSPSleepScheduleDayOccurrence significantChanges]
  -[HKSPSleepScheduleDayOccurrence mutableCopyWithZone:]
  -[HKSPSleepScheduleDayOccurrence initFromObject:]
  -[HKSPSleepScheduleDayOccurrence isEqual:]
  -[HKSPSleepScheduleDayOccurrence init]
  -[HKSPSleepScheduleDayOccurrence initWithCoder:]
  -[HKSPSleepScheduleDayOccurrence wakeUpComponents]
  -[HKSPSleepScheduleDayOccurrence alarmConfiguration]
  -[HKSPSleepScheduleDayOccurrence changesFromOccurrence:]
  -[HKSPSleepScheduleDayOccurrence _decodeComponentsForPersistenceWithCoder:key:]
  -[HKSPSleepScheduleDayOccurrence _encodeComponentsForPersistence:coder:key:]
  -[HKSPSleepScheduleDayOccurrence generateSleepScheduleOccurrenceWithWeekdays:]
  -[HKSPSleepScheduleDayOccurrence isEquivalentToOccurrenceIgnoringDates:]
  -[HKSPSleepScheduleDayOccurrence isAlarmEquivalentToOccurrenceIgnoringDates:]


HKSPMutableSleepScheduleDayOccurrence : HKSPSleepScheduleDayOccurrence <HKSPMutableObject>
 @property  NSDateComponents *bedtimeComponents
 @property  NSDateComponents *wakeUpComponents
 @property  HKSPAlarmConfiguration *alarmConfiguration
 @property  NSDate *lastModifiedDate
 @property  HKSPChangeSet *changeSet
 @property  <HKSPObject> *originalObject
 @property  unsigned long version
 @property  NSSet *significantChanges
 @property  NSDictionary *relationshipChanges
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKSPMutableSleepScheduleDayOccurrence supportsSecureCoding]

  // instance methods
  -[HKSPMutableSleepScheduleDayOccurrence bedtimeComponents]
  -[HKSPMutableSleepScheduleDayOccurrence encodeWithCoder:]
  -[HKSPMutableSleepScheduleDayOccurrence mutableCopy]
  -[HKSPMutableSleepScheduleDayOccurrence .cxx_destruct]
  -[HKSPMutableSleepScheduleDayOccurrence changeSet]
  -[HKSPMutableSleepScheduleDayOccurrence freeze]
  -[HKSPMutableSleepScheduleDayOccurrence originalObject]
  -[HKSPMutableSleepScheduleDayOccurrence copyWithZone:]
  -[HKSPMutableSleepScheduleDayOccurrence hasChangeAffectingScheduling]
  -[HKSPMutableSleepScheduleDayOccurrence init]
  -[HKSPMutableSleepScheduleDayOccurrence initWithCoder:]
  -[HKSPMutableSleepScheduleDayOccurrence wakeUpComponents]
  -[HKSPMutableSleepScheduleDayOccurrence alarmConfiguration]
  -[HKSPMutableSleepScheduleDayOccurrence setBedtimeComponents:]
  -[HKSPMutableSleepScheduleDayOccurrence setWakeUpComponents:]
  -[HKSPMutableSleepScheduleDayOccurrence setAlarmConfiguration:]
  -[HKSPMutableSleepScheduleDayOccurrence generateSleepScheduleOccurrenceWithWeekdays:]


(HKSPSleep)
	// class methods
	+[(HKSPSleep) _hksp_optionsForBackwards:]

	// instance methods
	-[(HKSPSleep) hksp_orderedSleepDays]
	-[(HKSPSleep) hksp_orderedSleepWeekdaysForWeekdays:]
	-[(HKSPSleep) hksp_localizedGroupingStringForWeekdays:]
	-[(HKSPSleep) hksp_dayPeriodForDate:locale:]
	-[(HKSPSleep) hksp_dayPeriodForDate:locale:options:]
	-[(HKSPSleep) hksp_nextDateAfterDate:matchingComponents:]
	-[(HKSPSleep) hksp_previousDateBeforeDate:matchingComponents:]
	-[(HKSPSleep) _hksp_nextDateAfterDate:matchingComponents:backwards:]
	-[(HKSPSleep) hksp_nextDateAfterDate:matchingUnit:value:]
	-[(HKSPSleep) hksp_previousDateBeforeDate:matchingUnit:value:]
	-[(HKSPSleep) _hksp_nextDateAfterDate:matchingUnit:value:backwards:]
	-[(HKSPSleep) _hksp_nextDateHelperAfterDate:nextDateBlock:]
	-[(HKSPSleep) hksp_dateRequiresSingularTimeString:]
	-[(HKSPSleep) hksp_firstNonWeekendDay]
	-[(HKSPSleep) hksp_componentsByAddingTimeInterval:toComponents:]
	-[(HKSPSleep) hksp_timeIntervalFromComponents:toComponents:]

NSDateComponents(HKSPSleep)
	// instance methods
	-[NSDateComponents(HKSPSleep) hksp_description]
	-[NSDateComponents(HKSPSleep) hksp_compareHourAndMinuteComponents:]
	-[NSDateComponents(HKSPSleep) hksp_timeComponents]

NSNumber(HKSPSyncAnchor)
	// instance methods
	-[NSNumber(HKSPSyncAnchor) hksp_increment]

(HKSPSleep)
	// class methods
	+[(HKSPSleep) hksp_latestFromDates:]
	+[(HKSPSleep) hksp_earliestFromDates:]

	// instance methods
	-[(HKSPSleep) hkspGreetingStringWithOptions:]
	-[(HKSPSleep) hkspDescription]
	-[(HKSPSleep) hksp_isBeforeDate:]
	-[(HKSPSleep) hksp_isBeforeOrSameAsDate:]
	-[(HKSPSleep) hksp_isAfterDate:]
	-[(HKSPSleep) hksp_isAfterOrSameAsDate:]
	-[(HKSPSleep) hksp_dateNearestMatchingComponents:]

_HKBehavior(HKSPSleep)
	// instance methods
	-[_HKBehavior(HKSPSleep) hksp_isRunningUnitTests]
	-[_HKBehavior(HKSPSleep) _hksp_supportsSleep_checkTinker:]
	-[_HKBehavior(HKSPSleep) hksp_supportsSleep]
	-[_HKBehavior(HKSPSleep) hksp_supportsSleepDaemon]
	-[_HKBehavior(HKSPSleep) hksp_supportsChargingReminders]
	-[_HKBehavior(HKSPSleep) hksp_supportsSleepLockScreen]
	-[_HKBehavior(HKSPSleep) hksp_supportsHealthData]
	-[_HKBehavior(HKSPSleep) hksp_supportsSleepWidget]
	-[_HKBehavior(HKSPSleep) hksp_supportsWakeUpResults]
	-[_HKBehavior(HKSPSleep) hksp_supportsSleepTracking]
	-[_HKBehavior(HKSPSleep) hksp_supportsGoodMorningAlerts]
	-[_HKBehavior(HKSPSleep) hksp_supportsWakeDetection]
	-[_HKBehavior(HKSPSleep) hksp_supportsUserNotificationCenter]
	-[_HKBehavior(HKSPSleep) hksp_supportsCFUserNotifications]
	-[_HKBehavior(HKSPSleep) hksp_supportsSleepAlarms]
	-[_HKBehavior(HKSPSleep) hksp_supportsLegacySleepAlarms]
	-[_HKBehavior(HKSPSleep) hksp_supportsDailyAnalytics]
	-[_HKBehavior(HKSPSleep) hksp_hasActivePairedDevice]
	-[_HKBehavior(HKSPSleep) hksp_activePairedDeviceSupportsSleep]
	-[_HKBehavior(HKSPSleep) hksp_activePairedDeviceSupportsSleepStages]
	-[_HKBehavior(HKSPSleep) hksp_activePairedDeviceSupportsFocusMode]
	-[_HKBehavior(HKSPSleep) _hksp_activePairedDeviceSupportsCapability:]
	-[_HKBehavior(HKSPSleep) hksp_activePairedDeviceHasHomeButton]
	-[_HKBehavior(HKSPSleep) hksp_activePairedDeviceHasSleepAppInstalledWithCompletion:]
	-[_HKBehavior(HKSPSleep) hksp_demoMode]
	-[_HKBehavior(HKSPSleep) setHksp_isRunningUnitTests:]
	-[_HKBehavior(HKSPSleep) hksp_isDeviceUnlocked]
	-[_HKBehavior(HKSPSleep) hksp_device]

(HKSPSleep)
	// instance methods
	-[(HKSPSleep) hksp_isIn24HourTime]

(HKSPSleep)
	// instance methods
	-[(HKSPSleep) hksp_dictionaryByFilteringKeys:]
	-[(HKSPSleep) hksp_computeDiffFromDictionary:]
	-[(HKSPSleep) hksp_computeDiffFromDictionary:keysToDiff:]
	-[(HKSPSleep) hksp_hash]
	-[(HKSPSleep) hksp_isSerialized]
	-[(HKSPSleep) hksp_serializedKey]
	-[(HKSPSleep) hksp_serializedClassName]
	-[(HKSPSleep) hksp_serializedProperties]

NAFuture(HKSPSleep)
	// class methods
	+[NAFuture(HKSPSleep) hksp_expiringFutureWithTimeout:]
	+[NAFuture(HKSPSleep) hksp_chainFutures:returningFirstPassingTest:]
	+[NAFuture(HKSPSleep) hksp_chainFutures:returningFirstPassingTest:ignoreErrors:]
	+[NAFuture(HKSPSleep) _hksp_chainFutureHelperWithFutures:index:block:ignoreErrors:]

	// instance methods
	-[NAFuture(HKSPSleep) hksp_boolErrorCompletionHandlerAdapter]

(HKSPProperty)
	// instance methods
	-[(HKSPProperty) hksp_valueForProperty:]
	-[(HKSPProperty) hksp_setValue:forProperty:]

NSCoder(HKSPSerialization)
	// instance methods
	-[NSCoder(HKSPSerialization) hksp_serializationOptions]

NAScheduler(HKSPSleep)
	// class methods
	+[NAScheduler(HKSPSleep) hkspMainThreadScheduler]

NSError(HKSPSleep)
	// class methods
	+[NSError(HKSPSleep) hksp_validationErrorWithReason:]

	// instance methods
	-[NSError(HKSPSleep) hksp_shouldRetryMessage]
	-[NSError(HKSPSleep) hksp_isHealthDatabaseInaccessibleError]

NSUserDefaults(HKSPSleep)
	// class methods
	+[NSUserDefaults(HKSPSleep) hksp_sleepdUserDefaults]
	+[NSUserDefaults(HKSPSleep) hksp_internalUserDefaults]
	+[NSUserDefaults(HKSPSleep) hksp_analyticsUserDefaults]
	+[NSUserDefaults(HKSPSleep) hksp_springBoardUserDefaults]

	// instance methods
	-[NSUserDefaults(HKSPSleep) hksp_floatForKey:]
	-[NSUserDefaults(HKSPSleep) hksp_dataForKey:]
	-[NSUserDefaults(HKSPSleep) hksp_removeObjectForKey:]
	-[NSUserDefaults(HKSPSleep) hksp_reset]
	-[NSUserDefaults(HKSPSleep) hksp_boolForKey:]
	-[NSUserDefaults(HKSPSleep) hksp_dictionaryRepresentationForKeys:]
	-[NSUserDefaults(HKSPSleep) hksp_synchronize]
	-[NSUserDefaults(HKSPSleep) hksp_saveDictionary:]
	-[NSUserDefaults(HKSPSleep) hksp_setObject:forKey:]
	-[NSUserDefaults(HKSPSleep) hksp_setInteger:forKey:]
	-[NSUserDefaults(HKSPSleep) hksp_integerForKey:]
	-[NSUserDefaults(HKSPSleep) hksp_setFloat:forKey:]
	-[NSUserDefaults(HKSPSleep) hksp_removeObjectsForKeys:]
	-[NSUserDefaults(HKSPSleep) hksp_synchronizeKeys:]
	-[NSUserDefaults(HKSPSleep) hksp_setBool:forKey:]
	-[NSUserDefaults(HKSPSleep) hksp_dictionaryRepresentation]
	-[NSUserDefaults(HKSPSleep) hksp_objectForKey:]
	-[NSUserDefaults(HKSPSleep) hksp_lockScreenUnlockToHome]
	-[NSUserDefaults(HKSPSleep) hksp_setLockScreenUnlockToHome:]
	-[NSUserDefaults(HKSPSleep) hksp_lockScreenBlockHomeGesture]
	-[NSUserDefaults(HKSPSleep) hksp_setLockScreenBlockHomeGesture:]
	-[NSUserDefaults(HKSPSleep) hksp_lockScreenDebugMode]
	-[NSUserDefaults(HKSPSleep) hksp_setLockScreenDebugMode:]
	-[NSUserDefaults(HKSPSleep) hksp_debugSleepModeEnabled]
	-[NSUserDefaults(HKSPSleep) hksp_setDebugSleepModeEnabled:]
	-[NSUserDefaults(HKSPSleep) hksp_debugSleepModeAlpha:]
	-[NSUserDefaults(HKSPSleep) hksp_setDebugSleepModeAlpha:]

NSDateInterval(HKSPSleep)
	// instance methods
	-[NSDateInterval(HKSPSleep) hkspDescription]
	-[NSDateInterval(HKSPSleep) hksp_containsDate:]
	-[NSDateInterval(HKSPSleep) hksp_containsDate:searchOptions:]
	-[NSDateInterval(HKSPSleep) hksp_overlapsInterval:]
	-[NSDateInterval(HKSPSleep) hksp_overlapsInterval:searchOptions:]

(HKSPSleep)
	// instance methods
	-[(HKSPSleep) hksp_timeStringFromDate:designatorString:designatorIsBeforeTime:]

01 00 0100 /System/Library/PrivateFrameworks/AppConduit.framework/AppConduit: ACXDeviceConnection 
01 00 0500 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSDescriptionBuilder 
01 00 0500 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSEqualsBuilder 
01 00 0500 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSHashBuilder 
01 00 0700 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDGlobalConfigurationService 
01 00 0700 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDModeConfigurationService 
01 00 0a00 /System/Library/Frameworks/HealthKit.framework/HealthKit: HKFeatureAvailabilityOnboardingEligibility 
01 00 0a00 /System/Library/Frameworks/HealthKit.framework/HealthKit: HKFeatureAvailabilityRequirementSet 
01 00 0a00 /System/Library/Frameworks/HealthKit.framework/HealthKit: HKFeatureAvailabilityRequirements 
01 00 0a00 /System/Library/Frameworks/HealthKit.framework/HealthKit: HKFeatureOnboardingRecord 
01 00 0a00 /System/Library/Frameworks/HealthKit.framework/HealthKit: HKFeatureSettings 
01 00 0a00 /System/Library/Frameworks/HealthKit.framework/HealthKit: HKHealthStore 
01 00 0a00 /System/Library/Frameworks/HealthKit.framework/HealthKit: HKOnboardingCompletion 
01 00 0a00 /System/Library/Frameworks/HealthKit.framework/HealthKit: HKQuantity 
01 00 0a00 /System/Library/Frameworks/HealthKit.framework/HealthKit: HKQuantitySample 
01 00 0a00 /System/Library/Frameworks/HealthKit.framework/HealthKit: HKQuantityType 
01 00 0a00 /System/Library/Frameworks/HealthKit.framework/HealthKit: HKRegionAvailability 
01 00 0900 /System/Library/PrivateFrameworks/SleepHealth.framework/SleepHealth: HKSleepHealthStore 
01 00 0a00 /System/Library/Frameworks/HealthKit.framework/HealthKit: HKSleepSchedule 
01 00 0300 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 0800 /System/Library/PrivateFrameworks/NetAppsUtilities.framework/NetAppsUtilities: NAFuture 
01 00 0800 /System/Library/PrivateFrameworks/NetAppsUtilities.framework/NetAppsUtilities: NAScheduler 
01 00 0200 /System/Library/PrivateFrameworks/NanoPreferencesSync.framework/NanoPreferencesSync: NPSManager 
01 00 0400 /System/Library/PrivateFrameworks/NanoRegistry.framework/NanoRegistry: NRPairedDeviceRegistry 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCoder 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDateComponents 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateInterval 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableCharacterSet 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1000 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLQueryItem 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListener 
01 00 0a00 /System/Library/Frameworks/HealthKit.framework/HealthKit: _HKBehavior 
