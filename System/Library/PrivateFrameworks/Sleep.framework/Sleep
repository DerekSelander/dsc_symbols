|| __DATA.__common _HKSPBedtimeMinuteDefault
|| __DATA.__common _HKSPWakeUpMinuteDefault
|| __DATA.__common _HKSPWindDownMinutesMinimum
|| __DATA.__data _HKSPBedtimeHourDefault
|| __DATA.__data _HKSPSleepDurationGoalHoursDefault
|| __DATA.__data _HKSPSleepDurationGoalHoursMaximum
|| __DATA.__data _HKSPSleepDurationGoalHoursMinimum
|| __DATA.__data _HKSPSleepDurationGoalHoursStep
|| __DATA.__data _HKSPSleepLockScreenOverrideAllowShortcutsKey
|| __DATA.__data _HKSPSleepLockScreenOverrideWatchBatteryLevelKey
|| __DATA.__data _HKSPSleepLogSubsystem
|| __DATA.__data _HKSPUpcomingOccurrenceMaximumInterval
|| __DATA.__data _HKSPWakeUpHourDefault
|| __DATA.__data _HKSPWindDownMinutesDefault
|| __DATA.__data _HKSPWindDownMinutesMaximum
|| __DATA.__data _HKSPWindDownMinutesStep
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPAgeMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPAlarmConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPAnalyticsDailyReportEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPAnalyticsOnboardingEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPAnalyticsSleepScheduleChangeEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPAnalyticsStore
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPAnalyticsWindDownEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPAnalyticsWindDownEventData
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPAnalyticsWindDownEventDataWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPChange
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPChangeSet
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPDictionarySerializer
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPFeatureAvailabilityStore
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPImmediateExecutor
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPMockUserDefaults
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPMutableAlarmConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPMutableSleepEventRecord
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPMutableSleepSchedule
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPMutableSleepScheduleDayOccurrence
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPMutableSleepScheduleOccurrence
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPMutableSleepSettings
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPMutableTestObject
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPMuteMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPProperty
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPRelationshipChange
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPResolvedSleepScheduleOccurrence
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPSleepModeButtonModel
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPSleepScheduleDayOccurrence
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPSleepScheduleOccurrence
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPSleepScheduleRange
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPTestObject
|| __DATA.__objc_data _OBJC_CLASS_$_HKSPXPCMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPAgeMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPAlarmConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPAnalyticsDailyReportEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPAnalyticsOnboardingEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPAnalyticsSleepScheduleChangeEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPAnalyticsStore
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPAnalyticsWindDownEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPAnalyticsWindDownEventData
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPAnalyticsWindDownEventDataWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPChange
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPChangeSet
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPDictionarySerializer
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPFeatureAvailabilityStore
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPImmediateExecutor
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPMockUserDefaults
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPMutableAlarmConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPMutableSleepEventRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPMutableSleepSchedule
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPMutableSleepScheduleDayOccurrence
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPMutableSleepScheduleOccurrence
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPMutableSleepSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPMutableTestObject
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPMuteMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPProperty
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPRelationshipChange
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPResolvedSleepScheduleOccurrence
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPSleepModeButtonModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPSleepScheduleDayOccurrence
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPSleepScheduleOccurrence
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPSleepScheduleRange
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPTestObject
|| __DATA.__objc_data _OBJC_METACLASS_$_HKSPXPCMessage
|| __DATA_CONST.__const _HKSPAlarmAllowsSnoozeKey
|| __DATA_CONST.__const _HKSPAlarmEnabledKey
|| __DATA_CONST.__const _HKSPAlarmPlayOptionsKey
|| __DATA_CONST.__const _HKSPAlarmSoundVolumeKey
|| __DATA_CONST.__const _HKSPAlarmToneIdentifierKey
|| __DATA_CONST.__const _HKSPAlarmVersionKey
|| __DATA_CONST.__const _HKSPAlarmVibrationIdentifierKey
|| __DATA_CONST.__const _HKSPAnalyticsActiveWatchProductTypePayloadKey
|| __DATA_CONST.__const _HKSPAnalyticsCurrentDevicePayloadKey
|| __DATA_CONST.__const _HKSPAnalyticsDefaultsDomain
|| __DATA_CONST.__const _HKSPAnalyticsLaunchSourceDeepLink
|| __DATA_CONST.__const _HKSPAnalyticsLaunchSourceKey
|| __DATA_CONST.__const _HKSPAnalyticsLaunchSourceSearch
|| __DATA_CONST.__const _HKSPAnalyticsLaunchSourceShowAllHealthData
|| __DATA_CONST.__const _HKSPAnalyticsLaunchSourceSleepRoom
|| __DATA_CONST.__const _HKSPAnalyticsLaunchSourceSummaryFeed
|| __DATA_CONST.__const _HKSPAnalyticsLaunchSourceUnknown
|| __DATA_CONST.__const _HKSPAnalyticsStoreUserDefaultsKey
|| __DATA_CONST.__const _HKSPBedtimeDelayedUntilDateKey
|| __DATA_CONST.__const _HKSPBedtimeReminderCategory
|| __DATA_CONST.__const _HKSPBedtimeReminderChangeNextAlarmAction
|| __DATA_CONST.__const _HKSPBedtimeReminderIdentifier
|| __DATA_CONST.__const _HKSPBedtimeReminderTurnOnNextAlarmAction
|| __DATA_CONST.__const _HKSPBedtimeRemindersKey
|| __DATA_CONST.__const _HKSPBedtimeSkippedDateKey
|| __DATA_CONST.__const _HKSPBundleID
|| __DATA_CONST.__const _HKSPChargingReminderAlarmEnabledUserInfoKey
|| __DATA_CONST.__const _HKSPChargingReminderCategory
|| __DATA_CONST.__const _HKSPChargingReminderIdentifier
|| __DATA_CONST.__const _HKSPChargingReminderSleepTrackingEnabledUserInfoKey
|| __DATA_CONST.__const _HKSPChargingRemindersKey
|| __DATA_CONST.__const _HKSPDaemonBundleID
|| __DATA_CONST.__const _HKSPDayOccurrenceAlarmKey
|| __DATA_CONST.__const _HKSPDayOccurrenceBedtimeComponentsKey
|| __DATA_CONST.__const _HKSPDayOccurrenceDayKey
|| __DATA_CONST.__const _HKSPDayOccurrenceHourKey
|| __DATA_CONST.__const _HKSPDayOccurrenceMinuteKey
|| __DATA_CONST.__const _HKSPDayOccurrenceMonthKey
|| __DATA_CONST.__const _HKSPDayOccurrenceVersionKey
|| __DATA_CONST.__const _HKSPDayOccurrenceWakeUpComponentsKey
|| __DATA_CONST.__const _HKSPDayOccurrenceYearKey
|| __DATA_CONST.__const _HKSPDebugSleepModeAlphaKey
|| __DATA_CONST.__const _HKSPDebugSleepModeKey
|| __DATA_CONST.__const _HKSPEventRecordLastModifiedDateKey
|| __DATA_CONST.__const _HKSPEventRecordVersionKey
|| __DATA_CONST.__const _HKSPFridayOccurrenceKey
|| __DATA_CONST.__const _HKSPGoodMorningDismissedDateKey
|| __DATA_CONST.__const _HKSPHideSensitiveUIKey
|| __DATA_CONST.__const _HKSPInternalDefaultsDomain
|| __DATA_CONST.__const _HKSPMondayOccurrenceKey
|| __DATA_CONST.__const _HKSPNanoSleepAppBundleIdentifier
|| __DATA_CONST.__const _HKSPNanoSleepAppLaunchURL
|| __DATA_CONST.__const _HKSPNotificationAccessoryImageName
|| __DATA_CONST.__const _HKSPNotificationDismissGoodMorningAlert
|| __DATA_CONST.__const _HKSPNotificationPresentGoodMorningAlert
|| __DATA_CONST.__const _HKSPNotificationThreadIdentifier
|| __DATA_CONST.__const _HKSPOccurrenceBackingOccurrenceKey
|| __DATA_CONST.__const _HKSPOccurrenceVersionKey
|| __DATA_CONST.__const _HKSPOccurrenceWeekdaysKey
|| __DATA_CONST.__const _HKSPOneDayCoachingCategory
|| __DATA_CONST.__const _HKSPOneWeekCoachingCategory
|| __DATA_CONST.__const _HKSPOtherTestPropertyKey
|| __DATA_CONST.__const _HKSPOverrideOccurrenceKey
|| __DATA_CONST.__const _HKSPSaturdayOccurrenceKey
|| __DATA_CONST.__const _HKSPScheduleEnabledKey
|| __DATA_CONST.__const _HKSPScheduleLastModifiedDateKey
|| __DATA_CONST.__const _HKSPScheduleVersionKey
|| __DATA_CONST.__const _HKSPScheduledSleepModeKey
|| __DATA_CONST.__const _HKSPSerializableClassPrefix
|| __DATA_CONST.__const _HKSPSerializationErrorDomain
|| __DATA_CONST.__const _HKSPSettingsLastModifiedDateKey
|| __DATA_CONST.__const _HKSPSettingsVersionKey
|| __DATA_CONST.__const _HKSPSleepCoachingOnboardingCompletedVersionKey
|| __DATA_CONST.__const _HKSPSleepCoachingOnboardingFirstCompletedDateKey
|| __DATA_CONST.__const _HKSPSleepDurationGoalKey
|| __DATA_CONST.__const _HKSPSleepEntitlementName
|| __DATA_CONST.__const _HKSPSleepErrorDomain
|| __DATA_CONST.__const _HKSPSleepEventIdentifierBedtime
|| __DATA_CONST.__const _HKSPSleepEventIdentifierBedtimeNotification
|| __DATA_CONST.__const _HKSPSleepEventIdentifierChargingReminderNotification
|| __DATA_CONST.__const _HKSPSleepEventIdentifierGoodMorningNotification
|| __DATA_CONST.__const _HKSPSleepEventIdentifierWakeDetectionNotification
|| __DATA_CONST.__const _HKSPSleepEventIdentifierWakeUp
|| __DATA_CONST.__const _HKSPSleepEventIdentifierWakeUpResultsNotification
|| __DATA_CONST.__const _HKSPSleepEventIdentifierWindDown
|| __DATA_CONST.__const _HKSPSleepEventIdentifierWindDownNotification
|| __DATA_CONST.__const _HKSPSleepLaunchURLRouteEditWindDownActions
|| __DATA_CONST.__const _HKSPSleepLaunchURLRouteManageSchedule
|| __DATA_CONST.__const _HKSPSleepLaunchURLRouteOnboardSleepCoaching
|| __DATA_CONST.__const _HKSPSleepLaunchURLRouteOnboardSleepTracking
|| __DATA_CONST.__const _HKSPSleepLaunchURLRouteOverrideNextScheduleOccurrence
|| __DATA_CONST.__const _HKSPSleepLaunchURLRouteTurnOnNextAlarm
|| __DATA_CONST.__const _HKSPSleepLifecycleName
|| __DATA_CONST.__const _HKSPSleepLogCategoryAction
|| __DATA_CONST.__const _HKSPSleepLogCategoryAnalytics
|| __DATA_CONST.__const _HKSPSleepLogCategoryApp
|| __DATA_CONST.__const _HKSPSleepLogCategoryClient
|| __DATA_CONST.__const _HKSPSleepLogCategoryDaemon
|| __DATA_CONST.__const _HKSPSleepLogCategoryDefault
|| __DATA_CONST.__const _HKSPSleepLogCategoryNotification
|| __DATA_CONST.__const _HKSPSleepLogCategoryPersist
|| __DATA_CONST.__const _HKSPSleepLogCategoryQuery
|| __DATA_CONST.__const _HKSPSleepLogCategorySchedule
|| __DATA_CONST.__const _HKSPSleepLogCategoryServer
|| __DATA_CONST.__const _HKSPSleepLogCategorySleep
|| __DATA_CONST.__const _HKSPSleepLogCategorySleepLock
|| __DATA_CONST.__const _HKSPSleepLogCategorySleepMode
|| __DATA_CONST.__const _HKSPSleepLogCategorySync
|| __DATA_CONST.__const _HKSPSleepLogCategoryTest
|| __DATA_CONST.__const _HKSPSleepLogCategoryView
|| __DATA_CONST.__const _HKSPSleepLogCategoryXPC
|| __DATA_CONST.__const _HKSPSleepMachServiceName
|| __DATA_CONST.__const _HKSPSleepModeIdentifier
|| __DATA_CONST.__const _HKSPSleepModeOptionsKey
|| __DATA_CONST.__const _HKSPSleepScheduleModelDidChangeDarwinNotification
|| __DATA_CONST.__const _HKSPSleepTrackingKey
|| __DATA_CONST.__const _HKSPSleepTrackingOnboardingCompletedVersionKey
|| __DATA_CONST.__const _HKSPSleepTrackingOnboardingFirstCompletedDateKey
|| __DATA_CONST.__const _HKSPSleepWindDownShortcutsOnboardingCompletedVersionKey
|| __DATA_CONST.__const _HKSPSleepWindDownShortcutsOnboardingFirstCompletedDateKey
|| __DATA_CONST.__const _HKSPSpringBoardGreetingDisabledKey
|| __DATA_CONST.__const _HKSPSundayOccurrenceKey
|| __DATA_CONST.__const _HKSPTestPropertyKey
|| __DATA_CONST.__const _HKSPTestRelationshipKey
|| __DATA_CONST.__const _HKSPThursdayOccurrenceKey
|| __DATA_CONST.__const _HKSPTimeInBedTrackingKey
|| __DATA_CONST.__const _HKSPTuesdayOccurrenceKey
|| __DATA_CONST.__const _HKSPTwoWeekCoachingCategory
|| __DATA_CONST.__const _HKSPWakeDetectionCategory
|| __DATA_CONST.__const _HKSPWakeDetectionIdentifier
|| __DATA_CONST.__const _HKSPWakeDetectionNotificationAlarmEnabledUserInfoKey
|| __DATA_CONST.__const _HKSPWakeDetectionNotificationSleepModeOnUserInfoKey
|| __DATA_CONST.__const _HKSPWakeDetectionTurnOffAction
|| __DATA_CONST.__const _HKSPWakeUpAlarmDismissedDateKey
|| __DATA_CONST.__const _HKSPWakeUpAlarmSnoozedUntilDateKey
|| __DATA_CONST.__const _HKSPWakeUpConfirmedUntilDateKey
|| __DATA_CONST.__const _HKSPWakeUpEarlyNotificationConfirmedDateKey
|| __DATA_CONST.__const _HKSPWakeUpResultsIdentifier
|| __DATA_CONST.__const _HKSPWakeUpResultsKey
|| __DATA_CONST.__const _HKSPWakeUpResultsNotificationCategoryUserInfoKey
|| __DATA_CONST.__const _HKSPWakeUpResultsNotificationEndMorningIndexUserInfoKey
|| __DATA_CONST.__const _HKSPWakeUpResultsNotificationSleepDurationGoalAchievedCountUserInfoKey
|| __DATA_CONST.__const _HKSPWakeUpResultsNotificationSleepGoalDurationUserInfoKey
|| __DATA_CONST.__const _HKSPWakeUpResultsNotificationVariantUserInfoKey
|| __DATA_CONST.__const _HKSPWatchSleepFeaturesEnabledKey
|| __DATA_CONST.__const _HKSPWednesdayOccurrenceKey
|| __DATA_CONST.__const _HKSPWindDownIdentifier
|| __DATA_CONST.__const _HKSPWindDownReminderCategory
|| __DATA_CONST.__const _HKSPWindDownSkippedDateKey
|| __DATA_CONST.__const _HKSPWindDownTimeIntervalKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPAnalyticsManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPCoalescingExecutor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPDiagnostics
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPDictionaryDeserializer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPHealthStoreProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPObserverSet
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPPersistentStateMachine
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPPersistentStateMachineState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPSensitiveUIMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPSleepEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPSleepEventRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPSleepEventTimeline
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPSleepEventTimelineBuilder
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPSleepEventTimelineResults
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPSleepSchedule
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPSleepScheduleModel
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPSleepSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPSleepStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPStateMachine
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPStateMachineState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPXPCClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPXPCConnectionInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPXPCConnectionListener
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HKSPXPCConnectionProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HKSPUserDefaultsStatePersistence
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPAnalyticsManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPCoalescingExecutor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPDiagnostics
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPDictionaryDeserializer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPHealthStoreProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPObserverSet
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPPersistentStateMachine
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPPersistentStateMachineState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPSensitiveUIMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPSleepEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPSleepEventRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPSleepEventTimeline
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPSleepEventTimelineBuilder
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPSleepEventTimelineResults
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPSleepSchedule
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPSleepScheduleModel
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPSleepSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPSleepStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPStateMachine
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPStateMachineState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPXPCClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPXPCConnectionInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPXPCConnectionListener
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HKSPXPCConnectionProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HKSPUserDefaultsStatePersistence
|| __TEXT.__const _HKSPAlarmVolumeDefault
|| __TEXT.__const _HKSPSleepMaxOverdueEvent
|| __TEXT.__const _HKSPSleepScheduleStateNone
|| __TEXT.__const _HKSPWeekdaysEveryday
|| __TEXT.__const _HKSPWeekdaysUnset
|| __TEXT.__const _HKSPWeekdaysWeekdays
|| __TEXT.__const _HKSPWeekdaysWeekends
|| __TEXT.__const _HKSPWindDownAndBedtimeNotificationExpirationInterval
|| __TEXT.__const _HKSPWindDownAndBedtimeNotificationFiredBeforeEventInterval
|| __TEXT.__text _HKSPAlarmConfigurationProperties
|| __TEXT.__text _HKSPAlarmConfigurationPropertiesForEquivalency
|| __TEXT.__text _HKSPAlarmConfigurationPropertiesForSignificance
|| __TEXT.__text _HKSPAllIvars
|| __TEXT.__text _HKSPAnalyticsSleepScheduleChangeContextDescription
|| __TEXT.__text _HKSPApplyChangesToObject
|| __TEXT.__text _HKSPBatteryLevel
|| __TEXT.__text _HKSPCanResolveChangesToObject
|| __TEXT.__text _HKSPCompareWeekdaysInCalendar
|| __TEXT.__text _HKSPCompareWeekdaysInCurrentCalendar
|| __TEXT.__text _HKSPCopyViaSecureCoding
|| __TEXT.__text _HKSPCurrentDateProvider
|| __TEXT.__text _HKSPDayForNSGregorianCalendarDay
|| __TEXT.__text _HKSPDayForWeekdays
|| __TEXT.__text _HKSPDaysForWeekdays
|| __TEXT.__text _HKSPDispatchQueueName
|| __TEXT.__text _HKSPEnumerateDaysOfWeek
|| __TEXT.__text _HKSPEnumerateDaysOfWeekInCalendar
|| __TEXT.__text _HKSPEnumerateDaysOfWeekStartingOnDay
|| __TEXT.__text _HKSPEnumerateWeekdays
|| __TEXT.__text _HKSPEvaluateChangesToObject
|| __TEXT.__text _HKSPFreezeMutableObject
|| __TEXT.__text _HKSPGenerateChangeSetBetweenObjects
|| __TEXT.__text _HKSPGeneratePropertyModifications
|| __TEXT.__text _HKSPGenerateSleepStoreIdentifier
|| __TEXT.__text _HKSPIdentifierStringForWeekdays
|| __TEXT.__text _HKSPImmediateQueueBackedScheduler
|| __TEXT.__text _HKSPInMemoryStatePersistence
|| __TEXT.__text _HKSPIsCharging
|| __TEXT.__text _HKSPIsHomePod
|| __TEXT.__text _HKSPIsSmallCapsForUnitsEnabled
|| __TEXT.__text _HKSPLocalizedString
|| __TEXT.__text _HKSPLogCategoryForCategory
|| __TEXT.__text _HKSPLogForCategory
|| __TEXT.__text _HKSPMainQueueBackedScheduler
|| __TEXT.__text _HKSPMutableObjectCopy
|| __TEXT.__text _HKSPNextDay
|| __TEXT.__text _HKSPNilify
|| __TEXT.__text _HKSPNullify
|| __TEXT.__text _HKSPPreviousDay
|| __TEXT.__text _HKSPPreviousDayInWeekdays
|| __TEXT.__text _HKSPQueueBackedScheduler
|| __TEXT.__text _HKSPSerialDispatchQueueBackedScheduler
|| __TEXT.__text _HKSPSerialDispatchQueueBackedSchedulerWithQoS
|| __TEXT.__text _HKSPSerializableKeyForClass
|| __TEXT.__text _HKSPSleepClientInterface
|| __TEXT.__text _HKSPSleepEventComparator
|| __TEXT.__text _HKSPSleepEventRecordProperties
|| __TEXT.__text _HKSPSleepEventRecordPropertiesForEquivalency
|| __TEXT.__text _HKSPSleepEventRecordPropertiesForPersist
|| __TEXT.__text _HKSPSleepEventRecordPropertiesForSync
|| __TEXT.__text _HKSPSleepLaunchURL
|| __TEXT.__text _HKSPSleepLaunchURLFromSource
|| __TEXT.__text _HKSPSleepLockScreenClientInterface
|| __TEXT.__text _HKSPSleepLockScreenRemoteContentHostInterface
|| __TEXT.__text _HKSPSleepLockScreenRemoteContentServiceInterface
|| __TEXT.__text _HKSPSleepLockScreenServerInterface
|| __TEXT.__text _HKSPSleepScheduleDayOccurrenceProperties
|| __TEXT.__text _HKSPSleepScheduleDayOccurrencePropertiesForEquivalency
|| __TEXT.__text _HKSPSleepScheduleDayOccurrencePropertiesForSignificance
|| __TEXT.__text _HKSPSleepScheduleOccurrenceProperties
|| __TEXT.__text _HKSPSleepScheduleOccurrencePropertiesForEquivalency
|| __TEXT.__text _HKSPSleepScheduleProperties
|| __TEXT.__text _HKSPSleepSchedulePropertiesForEquivalency
|| __TEXT.__text _HKSPSleepSchedulePropertiesForPersist
|| __TEXT.__text _HKSPSleepSchedulePropertiesForSignificance
|| __TEXT.__text _HKSPSleepSchedulePropertiesForSync
|| __TEXT.__text _HKSPSleepScheduleStateChangeReasonIsExpected
|| __TEXT.__text _HKSPSleepScheduleStateIsForBedtime
|| __TEXT.__text _HKSPSleepScheduleStateIsForWindDown
|| __TEXT.__text _HKSPSleepServerInterface
|| __TEXT.__text _HKSPSleepSettingsPerGizmoDefaultValues
|| __TEXT.__text _HKSPSleepSettingsPerGizmoProperties
|| __TEXT.__text _HKSPSleepSettingsProperties
|| __TEXT.__text _HKSPSleepSettingsPropertiesForEquivalency
|| __TEXT.__text _HKSPSleepSettingsPropertiesForPersist
|| __TEXT.__text _HKSPSleepSettingsPropertiesForSignificance
|| __TEXT.__text _HKSPSleepSettingsPropertiesForSync
|| __TEXT.__text _HKSPSyncAnchorClass
|| __TEXT.__text _HKSPUserDefaultsStatePersistence
|| __TEXT.__text _HKSPWeekdaysEnumerateDays
|| __TEXT.__text _HKSPWeekdaysEnumerateDaysInCalendar
|| __TEXT.__text _HKSPWeekdaysFromDay
|| __TEXT.__text _HKSPWeekdaysFromDays
|| __TEXT.__text _HKSPWeekdaysIsSingleDay
|| __TEXT.__text _HKSPWeekdaysShiftBackOneDay
|| __TEXT.__text _HKSPWeekendDaysInCalendar
|| __TEXT.__text _HKSPWeekendDaysInCurrentCalendar
|| __TEXT.__text _HKSleepScheduleWeekdaysFromHKSPWeekdays
|| __TEXT.__text _NSDateIsOnHKSPDayInCalendar
|| __TEXT.__text _NSGregorianCalendarDayForHKSPDay
|| __TEXT.__text _NSGregorianCalendarDaysForWeekdays
|| __TEXT.__text _NSStringForHKSPDay
|| __TEXT.__text _NSStringFromHKSPAlarmPlayOptions
|| __TEXT.__text _NSStringFromHKSPSleepLockScreenState
|| __TEXT.__text _NSStringFromHKSPSleepMode
|| __TEXT.__text _NSStringFromHKSPSleepModeChangeReason
|| __TEXT.__text _NSStringFromHKSPSleepScheduleState
|| __TEXT.__text _NSStringFromHKSPSleepScheduleStateChangeReason
|| __TEXT.__text _NSStringFromHKSPWeekdays
__ BaseBoard: _OBJC_CLASS_$_BSDescriptionBuilder
__ BaseBoard: _OBJC_CLASS_$_BSEqualsBuilder
__ BaseBoard: _OBJC_CLASS_$_BSHashBuilder
__ CoreAnalytics: _AnalyticsSendEvent
__ CoreFoundation: _CFBooleanGetTypeID
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _NSCalendarDayChangedNotification
__ CoreFoundation: _NSCalendarIdentifierGregorian
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDateComponents
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ Foundation: _NSClassFromString
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLog
__ Foundation: _NSStringFromClass
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCoder
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSDateInterval
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLQueryItem
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_CLASS_$_NSXPCListener
__ Foundation: _OBJC_METACLASS_$_NSCoder
__ HealthKit: _HKDaysInAWeek
__ HealthKit: _HKFeatureIdentifierSleepActions
__ HealthKit: _HKFeatureIdentifierSleepCoaching
__ HealthKit: _HKFeatureIdentifierSleepTracking
__ HealthKit: _HKHealthAppScheme
__ HealthKit: _HKSleepScheduleWeekdaysAll
__ HealthKit: _OBJC_CLASS_$_HKHealthStore
__ HealthKit: _OBJC_CLASS_$_HKObserverSet
__ HealthKit: _OBJC_CLASS_$_HKQuantity
__ HealthKit: _OBJC_CLASS_$_HKQuantitySample
__ HealthKit: _OBJC_CLASS_$_HKQuantityType
__ HealthKit: _OBJC_CLASS_$_HKSleepSchedule
__ HealthKit: _OBJC_CLASS_$__HKBehavior
__ HealthKit: __HKLogDroppedError
__ HealthKit: _kHKUserCharacteristicsDidChangeNotification
__ IOKit: _IOPSDrawingUnlimitedPower
__ IOKit: _IOPSGetPercentRemaining
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ NanoPreferencesSync: _OBJC_CLASS_$_NPSManager
__ NanoRegistry: _NRDevicePropertyProductType
__ NanoRegistry: _NRPairedDeviceRegistryDeviceDidBecomeActive
__ NanoRegistry: _NRPairedDeviceRegistryDeviceDidPairNotification
__ NanoRegistry: _NRPairedDeviceRegistryDeviceDidUnpairNotification
__ NanoRegistry: _NRPairedDeviceRegistryPairedDeviceDidChangeCapabilitiesDarwinNotification
__ NanoRegistry: _OBJC_CLASS_$_NRPairedDeviceRegistry
__ NetAppsUtilities: _NAEmptyResult
__ NetAppsUtilities: _OBJC_CLASS_$_NAFuture
__ NetAppsUtilities: _OBJC_CLASS_$_NAScheduler
__ SleepHealth: _OBJC_CLASS_$_HKSleepHealthStore
__ libMobileGestalt.dylib: _MGGetProductType
__ libMobileGestalt.dylib: _MGGetStringAnswer
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___strlcpy_chk
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_data_or
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __xpc_type_dictionary
__ libSystem.B.dylib: __xpc_type_endpoint
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_merge_data
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_state_add_handler
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _class_copyIvarList
__ libobjc.A.dylib: _ivar_getName
__ libobjc.A.dylib: _ivar_getTypeEncoding
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
HKSPAnalyticsDailyReportEvent : NSObject /usr/lib/libSystem.B.dylib <HKSPAnalyticsEvent>
 @property  BOOL isImproveHealthAndActivitySubmissionAllowed
 @property  NSNumber *userAge
 @property  NSString *biologicalSex
 @property  NSNumber *weeksSinceOnboardedSleepSchedule
 @property  NSNumber *weeksSinceOnboardedSleepTracking
 @property  NSNumber *weeksSinceOnboardedWindDownActions
 @property  NSString *activeWatchProductType
 @property  double sleepGoal
 @property  BOOL watchSleepTrackingEnabled
 @property  BOOL timeInBedTrackingEnabled
 @property  BOOL bedTimeWindDownRemindersEnabled
 @property  BOOL wakeUpResultsEnabled
 @property  BOOL scheduledSleepModeEnabled
 @property  BOOL chargeRemindersEnabled
 @property  BOOL scheduleDisabled
 @property  BOOL scheduleMigration
 @property  BOOL scheduleChangePast24Hours
 @property  BOOL scheduleChangePast7days
 @property  BOOL interactionWithWindDownLast24hrs
 @property  BOOL alarmFriday
 @property  BOOL alarmMonday
 @property  BOOL alarmSaturday
 @property  BOOL alarmSunday
 @property  BOOL alarmThursday
 @property  BOOL alarmTuesday
 @property  BOOL alarmWednesday
 @property  BOOL scheduleFriday
 @property  BOOL scheduleMonday
 @property  BOOL scheduleSaturday
 @property  BOOL scheduleSunday
 @property  BOOL scheduleThursday
 @property  BOOL scheduleTuesday
 @property  BOOL scheduleWednesday
 @property  NSString *hapticToneIdentifierFriday
 @property  NSString *hapticToneIdentifierMonday
 @property  NSString *hapticToneIdentifierSaturday
 @property  NSString *hapticToneIdentifierSunday
 @property  NSString *hapticToneIdentifierThursday
 @property  NSString *hapticToneIdentifierTuesday
 @property  NSString *hapticToneIdentifierWednesday
 @property  BOOL isDefaultScheduleFriday
 @property  BOOL isDefaultScheduleMonday
 @property  BOOL isDefaultScheduleSaturday
 @property  BOOL isDefaultScheduleSunday
 @property  BOOL isDefaultScheduleThursday
 @property  BOOL isDefaultScheduleTuesday
 @property  BOOL isDefaultScheduleWednesday
 @property  NSNumber *stddevActualTimeAsleep
 @property  NSNumber *stddevScheduledTimeAsleep
 @property  NSNumber *stddevActualVsScheduledTimeAsleep
 @property  NSString *eventName
 @property  NSDictionary *eventPayload
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HKSPAnalyticsDailyReportEvent eventName]
  -[HKSPAnalyticsDailyReportEvent setBiologicalSex:]
  -[HKSPAnalyticsDailyReportEvent eventPayload]
  -[HKSPAnalyticsDailyReportEvent .cxx_destruct]
  -[HKSPAnalyticsDailyReportEvent biologicalSex]
  -[HKSPAnalyticsDailyReportEvent userAge]
  -[HKSPAnalyticsDailyReportEvent sleepGoal]
  -[HKSPAnalyticsDailyReportEvent scheduleDisabled]
  -[HKSPAnalyticsDailyReportEvent bedTimeWindDownRemindersEnabled]
  -[HKSPAnalyticsDailyReportEvent chargeRemindersEnabled]
  -[HKSPAnalyticsDailyReportEvent isImproveHealthAndActivitySubmissionAllowed]
  -[HKSPAnalyticsDailyReportEvent scheduleChangePast24Hours]
  -[HKSPAnalyticsDailyReportEvent scheduleChangePast7days]
  -[HKSPAnalyticsDailyReportEvent scheduledSleepModeEnabled]
  -[HKSPAnalyticsDailyReportEvent alarmFriday]
  -[HKSPAnalyticsDailyReportEvent scheduleMigration]
  -[HKSPAnalyticsDailyReportEvent timeInBedTrackingEnabled]
  -[HKSPAnalyticsDailyReportEvent wakeUpResultsEnabled]
  -[HKSPAnalyticsDailyReportEvent watchSleepTrackingEnabled]
  -[HKSPAnalyticsDailyReportEvent interactionWithWindDownLast24hrs]
  -[HKSPAnalyticsDailyReportEvent alarmMonday]
  -[HKSPAnalyticsDailyReportEvent alarmSaturday]
  -[HKSPAnalyticsDailyReportEvent alarmSunday]
  -[HKSPAnalyticsDailyReportEvent alarmThursday]
  -[HKSPAnalyticsDailyReportEvent alarmTuesday]
  -[HKSPAnalyticsDailyReportEvent alarmWednesday]
  -[HKSPAnalyticsDailyReportEvent scheduleFriday]
  -[HKSPAnalyticsDailyReportEvent scheduleMonday]
  -[HKSPAnalyticsDailyReportEvent scheduleSaturday]
  -[HKSPAnalyticsDailyReportEvent scheduleSunday]
  -[HKSPAnalyticsDailyReportEvent scheduleThursday]
  -[HKSPAnalyticsDailyReportEvent scheduleTuesday]
  -[HKSPAnalyticsDailyReportEvent scheduleWednesday]
  -[HKSPAnalyticsDailyReportEvent isDefaultScheduleFriday]
  -[HKSPAnalyticsDailyReportEvent isDefaultScheduleMonday]
  -[HKSPAnalyticsDailyReportEvent isDefaultScheduleSaturday]
  -[HKSPAnalyticsDailyReportEvent isDefaultScheduleSunday]
  -[HKSPAnalyticsDailyReportEvent isDefaultScheduleThursday]
  -[HKSPAnalyticsDailyReportEvent isDefaultScheduleTuesday]
  -[HKSPAnalyticsDailyReportEvent isDefaultScheduleWednesday]
  -[HKSPAnalyticsDailyReportEvent hapticToneIdentifierFriday]
  -[HKSPAnalyticsDailyReportEvent hapticToneIdentifierMonday]
  -[HKSPAnalyticsDailyReportEvent hapticToneIdentifierSaturday]
  -[HKSPAnalyticsDailyReportEvent hapticToneIdentifierSunday]
  -[HKSPAnalyticsDailyReportEvent hapticToneIdentifierThursday]
  -[HKSPAnalyticsDailyReportEvent hapticToneIdentifierTuesday]
  -[HKSPAnalyticsDailyReportEvent hapticToneIdentifierWednesday]
  -[HKSPAnalyticsDailyReportEvent activeWatchProductType]
  -[HKSPAnalyticsDailyReportEvent weeksSinceOnboardedSleepSchedule]
  -[HKSPAnalyticsDailyReportEvent weeksSinceOnboardedSleepTracking]
  -[HKSPAnalyticsDailyReportEvent weeksSinceOnboardedWindDownActions]
  -[HKSPAnalyticsDailyReportEvent stddevActualTimeAsleep]
  -[HKSPAnalyticsDailyReportEvent stddevScheduledTimeAsleep]
  -[HKSPAnalyticsDailyReportEvent setUserAge:]
  -[HKSPAnalyticsDailyReportEvent stddevActualVsScheduledTimeAsleep]
  -[HKSPAnalyticsDailyReportEvent setIsImproveHealthAndActivitySubmissionAllowed:]
  -[HKSPAnalyticsDailyReportEvent setWeeksSinceOnboardedSleepSchedule:]
  -[HKSPAnalyticsDailyReportEvent setWeeksSinceOnboardedSleepTracking:]
  -[HKSPAnalyticsDailyReportEvent setWeeksSinceOnboardedWindDownActions:]
  -[HKSPAnalyticsDailyReportEvent setActiveWatchProductType:]
  -[HKSPAnalyticsDailyReportEvent setSleepGoal:]
  -[HKSPAnalyticsDailyReportEvent setWatchSleepTrackingEnabled:]
  -[HKSPAnalyticsDailyReportEvent setTimeInBedTrackingEnabled:]
  -[HKSPAnalyticsDailyReportEvent setBedTimeWindDownRemindersEnabled:]
  -[HKSPAnalyticsDailyReportEvent setWakeUpResultsEnabled:]
  -[HKSPAnalyticsDailyReportEvent setScheduledSleepModeEnabled:]
  -[HKSPAnalyticsDailyReportEvent setChargeRemindersEnabled:]
  -[HKSPAnalyticsDailyReportEvent setScheduleDisabled:]
  -[HKSPAnalyticsDailyReportEvent setScheduleMigration:]
  -[HKSPAnalyticsDailyReportEvent setScheduleChangePast24Hours:]
  -[HKSPAnalyticsDailyReportEvent setScheduleChangePast7days:]
  -[HKSPAnalyticsDailyReportEvent setInteractionWithWindDownLast24hrs:]
  -[HKSPAnalyticsDailyReportEvent setAlarmFriday:]
  -[HKSPAnalyticsDailyReportEvent setAlarmMonday:]
  -[HKSPAnalyticsDailyReportEvent setAlarmSaturday:]
  -[HKSPAnalyticsDailyReportEvent setAlarmSunday:]
  -[HKSPAnalyticsDailyReportEvent setAlarmThursday:]
  -[HKSPAnalyticsDailyReportEvent setAlarmTuesday:]
  -[HKSPAnalyticsDailyReportEvent setAlarmWednesday:]
  -[HKSPAnalyticsDailyReportEvent setScheduleFriday:]
  -[HKSPAnalyticsDailyReportEvent setScheduleMonday:]
  -[HKSPAnalyticsDailyReportEvent setScheduleSaturday:]
  -[HKSPAnalyticsDailyReportEvent setScheduleSunday:]
  -[HKSPAnalyticsDailyReportEvent setScheduleThursday:]
  -[HKSPAnalyticsDailyReportEvent setScheduleTuesday:]
  -[HKSPAnalyticsDailyReportEvent setScheduleWednesday:]
  -[HKSPAnalyticsDailyReportEvent setHapticToneIdentifierFriday:]
  -[HKSPAnalyticsDailyReportEvent setHapticToneIdentifierMonday:]
  -[HKSPAnalyticsDailyReportEvent setHapticToneIdentifierSaturday:]
  -[HKSPAnalyticsDailyReportEvent setHapticToneIdentifierSunday:]
  -[HKSPAnalyticsDailyReportEvent setHapticToneIdentifierThursday:]
  -[HKSPAnalyticsDailyReportEvent setHapticToneIdentifierTuesday:]
  -[HKSPAnalyticsDailyReportEvent setHapticToneIdentifierWednesday:]
  -[HKSPAnalyticsDailyReportEvent setIsDefaultScheduleFriday:]
  -[HKSPAnalyticsDailyReportEvent setIsDefaultScheduleMonday:]
  -[HKSPAnalyticsDailyReportEvent setIsDefaultScheduleSaturday:]
  -[HKSPAnalyticsDailyReportEvent setIsDefaultScheduleSunday:]
  -[HKSPAnalyticsDailyReportEvent setIsDefaultScheduleThursday:]
  -[HKSPAnalyticsDailyReportEvent setIsDefaultScheduleTuesday:]
  -[HKSPAnalyticsDailyReportEvent setIsDefaultScheduleWednesday:]
  -[HKSPAnalyticsDailyReportEvent setStddevActualTimeAsleep:]
  -[HKSPAnalyticsDailyReportEvent setStddevScheduledTimeAsleep:]
  -[HKSPAnalyticsDailyReportEvent setStddevActualVsScheduledTimeAsleep:]


HKSPAnalyticsWindDownEvent : NSObject /usr/lib/libSystem.B.dylib <HKSPAnalyticsEvent>
 @property  NSString *eventName
 @property  NSDictionary *eventPayload
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKSPAnalyticsWindDownEvent _payloadValueForWindDownAction:]

  // instance methods
  -[HKSPAnalyticsWindDownEvent setEventName:]
  -[HKSPAnalyticsWindDownEvent eventName]
  -[HKSPAnalyticsWindDownEvent eventPayload]
  -[HKSPAnalyticsWindDownEvent .cxx_destruct]
  -[HKSPAnalyticsWindDownEvent initWithWindDownEventData:watchProductType:weeksSinceOnboarded:]
  -[HKSPAnalyticsWindDownEvent setEventPayload:]


HKSPStateMachine : NSObject /usr/lib/libSystem.B.dylib <HKSPStateMachineDelegate, HKSPStateMachineInfoProvider, HKSPStateMachineEventHandler>
 @property  BOOL initialized
 @property  <HKSPStateMachineDelegate> *delegate
 @property  <HKSPStateMachineInfoProvider> *infoProvider
 @property  HKSPStateMachineState *currentState
 @property  <NAScheduler> *callbackScheduler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HKSPStateMachine currentState]
  -[HKSPStateMachine setInitialState:]
  -[HKSPStateMachine initWithDelegate:infoProvider:]
  -[HKSPStateMachine infoProvider]
  -[HKSPStateMachine updateState]
  -[HKSPStateMachine .cxx_destruct]
  -[HKSPStateMachine initialized]
  -[HKSPStateMachine stateMachineLog]
  -[HKSPStateMachine enterState:]
  -[HKSPStateMachine stateMachineName]
  -[HKSPStateMachine enterState:context:]
  -[HKSPStateMachine notifyDelegateWithBlock:]
  -[HKSPStateMachine delegate]


HKSPSleepScheduleRange : NSObject /usr/lib/libSystem.B.dylib
 @property  NSDateComponents *latestWakeUpComponents
 @property  NSDateComponents *earliestWakeUpComponents
 @property  NSDateComponents *latestBedtimeComponents
 @property  NSDateComponents *earliestBedtimeComponents
 @property  BOOL earliestBedtimeIsOnPreviousDay

  // instance methods
  -[HKSPSleepScheduleRange .cxx_destruct]
  -[HKSPSleepScheduleRange succinctDescriptionBuilder]
  -[HKSPSleepScheduleRange succinctDescription]
  -[HKSPSleepScheduleRange earliestBedtimeComponents]
  -[HKSPSleepScheduleRange earliestBedtimeIsOnPreviousDay]
  -[HKSPSleepScheduleRange earliestWakeUpComponents]
  -[HKSPSleepScheduleRange latestBedtimeComponents]
  -[HKSPSleepScheduleRange latestWakeUpComponents]
  -[HKSPSleepScheduleRange initWithLatestWakeUpComponents:latestBedtimeComponents:earliestWakeUpComponents:earliestBedtimeComponents:earliestBedtimeIsOnPreviousDay:]


HKSPSleepScheduleModel : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NAEquatable, NAHashable>
 @property  BOOL goodMorningAlertNotificationEnabled
 @property  BOOL goodMorningScreenEnabled
 @property  BOOL chargingRemindersEnabled
 @property  HKSPSleepSchedule *sleepSchedule
 @property  HKSPSleepSettings *sleepSettings
 @property  HKSPSleepEventRecord *sleepEventRecord
 @property  NSDate *lastModifiedDate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKSPSleepScheduleModel testSleepScheduleModelWithSchedule:]
  +[HKSPSleepScheduleModel testSleepScheduleModelWithSchedule:settings:]
  +[HKSPSleepScheduleModel testSleepScheduleModelForFullyOnboardedUserWithSingularBedtime]
  +[HKSPSleepScheduleModel testSleepScheduleModelWithAlarmEnabled:]
  +[HKSPSleepScheduleModel testSleepScheduleModelForFullyOnboardedUser]
  +[HKSPSleepScheduleModel testSleepScheduleModelForMigratedUserPriorToOnboardingWithSingularWaketime]
  +[HKSPSleepScheduleModel testSleepScheduleModel]
  +[HKSPSleepScheduleModel testSleepScheduleModelForMigratedUserPriorToOnboarding]
  +[HKSPSleepScheduleModel sleepScheduleModelWithSleepSchedule:sleepSettings:sleepEventRecord:]

  // instance methods
  -[HKSPSleepScheduleModel sleepEventRecord]
  -[HKSPSleepScheduleModel copyWithZone:]
  -[HKSPSleepScheduleModel sleepSettings]
  -[HKSPSleepScheduleModel chargingRemindersEnabled]
  -[HKSPSleepScheduleModel sleepSchedule]
  -[HKSPSleepScheduleModel upcomingEventsDueAfterDate:]
  -[HKSPSleepScheduleModel nextOccurrenceAfterDate:repeatingWithinInterval:]
  -[HKSPSleepScheduleModel nextOccurrenceAfterDate:]
  -[HKSPSleepScheduleModel previousOccurrenceBeforeDate:]
  -[HKSPSleepScheduleModel _timelineResultsDueAfterDate:]
  -[HKSPSleepScheduleModel isEquivalentTo:]
  -[HKSPSleepScheduleModel alarmStatusForOccurrence:]
  -[HKSPSleepScheduleModel goodMorningScreenEnabled]
  -[HKSPSleepScheduleModel .cxx_destruct]
  -[HKSPSleepScheduleModel nextEventWithIdentifier:dueAfterDate:]
  -[HKSPSleepScheduleModel succinctDescriptionBuilder]
  -[HKSPSleepScheduleModel chargingRemindersEnabledWithLogObject:]
  -[HKSPSleepScheduleModel previousEventWithIdentifier:dueBeforeDate:]
  -[HKSPSleepScheduleModel goodMorningAlertNotificationsEnabledWithLogObject:]
  -[HKSPSleepScheduleModel succinctDescription]
  -[HKSPSleepScheduleModel nextEventDueAfterDate:]
  -[HKSPSleepScheduleModel nextResolvedOccurrenceAfterDate:repeatingWithinInterval:]
  -[HKSPSleepScheduleModel lastModifiedDate]
  -[HKSPSleepScheduleModel upcomingOccurrenceAfterDate:]
  -[HKSPSleepScheduleModel nextResolvedOccurrenceAfterDate:]
  -[HKSPSleepScheduleModel previousEventsDueBeforeDate:]
  -[HKSPSleepScheduleModel isEqual:]
  -[HKSPSleepScheduleModel _upcomingEventsDueAfterDate:searchBackwards:]
  -[HKSPSleepScheduleModel _upcomingResolvedOccurrencesDueAfterDate:searchBackwards:]
  -[HKSPSleepScheduleModel upcomingResolvedOccurrenceAfterDate:]
  -[HKSPSleepScheduleModel timelineForDate:]
  -[HKSPSleepScheduleModel goodMorningAlertNotificationEnabled]
  -[HKSPSleepScheduleModel descriptionWithMultilinePrefix:]
  -[HKSPSleepScheduleModel goodMorningScreenEnabledWithLogObject:]
  -[HKSPSleepScheduleModel descriptionBuilderWithMultilinePrefix:]
  -[HKSPSleepScheduleModel previousResolvedOccurrenceBeforeDate:]


_HKSPUserDefaultsStatePersistence : NSObject /usr/lib/libSystem.B.dylib <HKSPStatePersistence>
 @property  <HKSPUserDefaults> *userDefaults

  // instance methods
  -[_HKSPUserDefaultsStatePersistence userDefaults]
  -[_HKSPUserDefaultsStatePersistence .cxx_destruct]
  -[_HKSPUserDefaultsStatePersistence initWithUserDefaults:]
  -[_HKSPUserDefaultsStatePersistence loadPersistentStateForIdentifier:error:]
  -[_HKSPUserDefaultsStatePersistence savePersistentState:identifier:error:]


HKSPChange : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, NSCopying, BSDescriptionProviding>
 @property  HKSPProperty *property
 @property  <NSObject><NSSecureCoding><NSCopying> *changedValue
 @property  <NSObject><NSSecureCoding><NSCopying> *originalValue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKSPChange supportsSecureCoding]
  +[HKSPChange allowedValueClasses]

  // instance methods
  -[HKSPChange copyWithZone:]
  -[HKSPChange .cxx_destruct]
  -[HKSPChange succinctDescriptionBuilder]
  -[HKSPChange property]
  -[HKSPChange encodeWithCoder:]
  -[HKSPChange originalValue]
  -[HKSPChange succinctDescription]
  -[HKSPChange isEqual:]
  -[HKSPChange changedValue]
  -[HKSPChange initWithProperty:changedValue:originalValue:]
  -[HKSPChange descriptionWithMultilinePrefix:]
  -[HKSPChange initWithCoder:]
  -[HKSPChange descriptionBuilderWithMultilinePrefix:]


HKSPRelationshipChange : HKSPChange
 @property  <HKSPMutableObject> *changedValue
 @property  <HKSPObject> *originalValue
 @property  BOOL isAdd
 @property  BOOL isUpdate
 @property  BOOL isRemove

  // instance methods
  -[HKSPRelationshipChange isUpdate]
  -[HKSPRelationshipChange isAdd]
  -[HKSPRelationshipChange isRemove]
  -[HKSPRelationshipChange initWithProperty:changedObject:originalObject:]


HKSPDiagnostics : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *label
 @property  HKSPObserverSet *providers

  // instance methods
  -[HKSPDiagnostics providers]
  -[HKSPDiagnostics removeProvider:]
  -[HKSPDiagnostics initWithLabel:]
  -[HKSPDiagnostics _registerStateHandler]
  -[HKSPDiagnostics .cxx_destruct]
  -[HKSPDiagnostics label]
  -[HKSPDiagnostics addProvider:]


HKSPPersistentStateMachine : HKSPStateMachine
 @property  NSString *identifier
 @property  <HKSPStatePersistence> *persistence
 @property  HKSPPersistentStateMachineState *currentState
 @property  @? currentDateProvider

  // instance methods
  -[HKSPPersistentStateMachine persistence]
  -[HKSPPersistentStateMachine currentDateProvider]
  -[HKSPPersistentStateMachine initWithDelegate:infoProvider:]
  -[HKSPPersistentStateMachine .cxx_destruct]
  -[HKSPPersistentStateMachine initWithIdentifier:persistence:delegate:infoProvider:currentDateProvider:]
  -[HKSPPersistentStateMachine identifier]
  -[HKSPPersistentStateMachine enterState:context:]
  -[HKSPPersistentStateMachine initWithIdentifier:persistence:delegate:infoProvider:]
  -[HKSPPersistentStateMachine _persistedStateShouldIgnoreExpiration:]
  -[HKSPPersistentStateMachine persistedState]
  -[HKSPPersistentStateMachine persistedStateIgnoringExpiration]


HKSPAnalyticsManager : NSObject /usr/lib/libSystem.B.dylib
 @property  HKSPAnalyticsStore *analyticsStore

  // class methods
  +[HKSPAnalyticsManager isImproveHealthAndActivitySubmissionAllowed]
  +[HKSPAnalyticsManager isDiagnosticDataSubmissionAllowed]
  +[HKSPAnalyticsManager currentDeviceType]
  +[HKSPAnalyticsManager activePairedWatchProductType]

  // instance methods
  -[HKSPAnalyticsManager .cxx_destruct]
  -[HKSPAnalyticsManager trackEvent:]
  -[HKSPAnalyticsManager initWithUserDefaults:]
  -[HKSPAnalyticsManager trackEvents:]
  -[HKSPAnalyticsManager analyticsStore]
  -[HKSPAnalyticsManager setAnalyticsStore:]


HKSPSleepModeButtonModel : NSObject /usr/lib/libSystem.B.dylib <HKSPSleepStorePrivateObserver>
 @property  <HKSPSleepModeButtonModelDelegate> *delegate
 @property  HKSPSleepStore *sleepStore
 @property  long long sleepMode
 @property  _HKBehavior *behavior
 @property  BOOL selected
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HKSPSleepModeButtonModel sleepMode]
  -[HKSPSleepModeButtonModel initWithDelegate:]
  -[HKSPSleepModeButtonModel behavior]
  -[HKSPSleepModeButtonModel setSelected:]
  -[HKSPSleepModeButtonModel .cxx_destruct]
  -[HKSPSleepModeButtonModel isSelected]
  -[HKSPSleepModeButtonModel sleepStore]
  -[HKSPSleepModeButtonModel initWithSleepStore:delegate:behavior:]
  -[HKSPSleepModeButtonModel _checkSleepModeState]
  -[HKSPSleepModeButtonModel _updateStateWithSleepMode:]
  -[HKSPSleepModeButtonModel _queue_updateStateWithSleepMode:]
  -[HKSPSleepModeButtonModel _launchAppForOnboarding]
  -[HKSPSleepModeButtonModel sleepStore:sleepModeOnDidChange:]
  -[HKSPSleepModeButtonModel delegate]


HKSPObserverSet : NSObject /usr/lib/libSystem.B.dylib
 @property  <NAScheduler> *callbackScheduler
 @property  {os_unfair_lock_s=I} observersLock
 @property  NSMapTable *observerRecords
 @property  unsigned long count

  // instance methods
  -[HKSPObserverSet removeObserver:wasLast:]
  -[HKSPObserverSet initWithCallbackScheduler:]
  -[HKSPObserverSet observersLock]
  -[HKSPObserverSet init]
  -[HKSPObserverSet enumerateObserversWithFutureBlock:]
  -[HKSPObserverSet enumerateObserversWithBlock:]
  -[HKSPObserverSet addObserver:callbackScheduler:]
  -[HKSPObserverSet callbackScheduler]
  -[HKSPObserverSet .cxx_destruct]
  -[HKSPObserverSet removeAllObservers]
  -[HKSPObserverSet addObserver:callbackScheduler:wasFirst:]
  -[HKSPObserverSet count]
  -[HKSPObserverSet observerRecords]
  -[HKSPObserverSet removeObserver:]
  -[HKSPObserverSet addObserver:]
  -[HKSPObserverSet _withLock:]
  -[HKSPObserverSet addObserver:wasFirst:]
  -[HKSPObserverSet containsObserver:]


_HKSPObserverRecord : NSObject /usr/lib/libSystem.B.dylib
 @property  id observer
 @property  <NAScheduler> *callbackScheduler

  // instance methods
  -[_HKSPObserverRecord callbackScheduler]
  -[_HKSPObserverRecord .cxx_destruct]
  -[_HKSPObserverRecord initWithObserver:callbackScheduler:]
  -[_HKSPObserverRecord observer]


HKSPDictionarySerializer : NSCoder /usr/lib/libobjc.A.dylib
 @property  unsigned long serializationOptions
 @property  NSError *internalError
 @property  NSMutableArray *stack
 @property  NSDictionary *serializedDictionary

  // instance methods
  -[HKSPDictionarySerializer encodeInteger:forKey:]
  -[HKSPDictionarySerializer encodeBool:forKey:]
  -[HKSPDictionarySerializer encodeFloat:forKey:]
  -[HKSPDictionarySerializer init]
  -[HKSPDictionarySerializer encodeDouble:forKey:]
  -[HKSPDictionarySerializer stack]
  -[HKSPDictionarySerializer encodeRootObject:]
  -[HKSPDictionarySerializer encodeObject:forKey:]
  -[HKSPDictionarySerializer encodeInt64:forKey:]
  -[HKSPDictionarySerializer encodeInt32:forKey:]
  -[HKSPDictionarySerializer serializedDictionary]
  -[HKSPDictionarySerializer allowsKeyedCoding]
  -[HKSPDictionarySerializer encodeInt:forKey:]
  -[HKSPDictionarySerializer .cxx_destruct]
  -[HKSPDictionarySerializer hksp_serializationOptions]
  -[HKSPDictionarySerializer _dictionaryForProtocolObject:]
  -[HKSPDictionarySerializer serialize:error:]
  -[HKSPDictionarySerializer internalError]
  -[HKSPDictionarySerializer initWithSerializationOptions:]
  -[HKSPDictionarySerializer serializationOptions]
  -[HKSPDictionarySerializer _encodeObject:forKey:]
  -[HKSPDictionarySerializer _encodeProtocolObject:forKey:]


HKSPChangeSet : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, NSCopying, BSDescriptionProviding>
 @property  NSMutableDictionary *changeDictionary
 @property  NSArray *changes
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKSPChangeSet supportsSecureCoding]

  // instance methods
  -[HKSPChangeSet changes]
  -[HKSPChangeSet copyWithZone:]
  -[HKSPChangeSet init]
  -[HKSPChangeSet .cxx_destruct]
  -[HKSPChangeSet removeAllChanges]
  -[HKSPChangeSet succinctDescriptionBuilder]
  -[HKSPChangeSet encodeWithCoder:]
  -[HKSPChangeSet succinctDescription]
  -[HKSPChangeSet addChange:]
  -[HKSPChangeSet isEqual:]
  -[HKSPChangeSet initWithChangeDictionary:]
  -[HKSPChangeSet changeDictionary]
  -[HKSPChangeSet applyChangeSet:]
  -[HKSPChangeSet hasChangeForPropertyIdentifier:]
  -[HKSPChangeSet changedValueForPropertyIdentifier:]
  -[HKSPChangeSet originalValueForPropertyIdentifier:]
  -[HKSPChangeSet descriptionWithMultilinePrefix:]
  -[HKSPChangeSet initWithCoder:]
  -[HKSPChangeSet descriptionBuilderWithMultilinePrefix:]


HKSPAnalyticsSleepScheduleChangeEvent : NSObject /usr/lib/libSystem.B.dylib <HKSPAnalyticsEvent>
 @property  NSString *eventName
 @property  NSDictionary *eventPayload
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HKSPAnalyticsSleepScheduleChangeEvent setEventName:]
  -[HKSPAnalyticsSleepScheduleChangeEvent eventName]
  -[HKSPAnalyticsSleepScheduleChangeEvent eventPayload]
  -[HKSPAnalyticsSleepScheduleChangeEvent .cxx_destruct]
  -[HKSPAnalyticsSleepScheduleChangeEvent setEventPayload:]
  -[HKSPAnalyticsSleepScheduleChangeEvent initWithContext:watchSleepTrackingEnabled:]


HKSPMuteMonitor : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL isMuted

  // instance methods
  -[HKSPMuteMonitor addObserver:queue:]
  -[HKSPMuteMonitor init]
  -[HKSPMuteMonitor dealloc]
  -[HKSPMuteMonitor isMuted]
  -[HKSPMuteMonitor .cxx_destruct]
  -[HKSPMuteMonitor setIsMuted:]
  -[HKSPMuteMonitor removeObserver:]
  -[HKSPMuteMonitor _updateIsMuted]


HKSPSleepEvent : NSObject /usr/lib/libSystem.B.dylib <BSDescriptionProviding, NAEquatable, NAHashable, NSCopying, NSSecureCoding>
 @property  BOOL isUserVisible
 @property  unsigned long type
 @property  NSDate *expirationDate
 @property  NSString *identifier
 @property  NSDate *dueDate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKSPSleepEvent supportsSecureCoding]
  +[HKSPSleepEvent sleepEventWithIdentifier:dueDate:type:expirationDate:isUserVisible:]
  +[HKSPSleepEvent sleepEventWithIdentifier:dueDate:type:isUserVisible:]
  +[HKSPSleepEvent sleepEventWithIdentifier:dueDate:]
  +[HKSPSleepEvent sleepEventWithIdentifier:dueDate:expirationDate:isUserVisible:]
  +[HKSPSleepEvent standardEventIdentifiers]
  +[HKSPSleepEvent sleepEventWithIdentifier:dueDate:type:]
  +[HKSPSleepEvent sleepEventWithIdentifier:dueDate:isUserVisible:]

  // instance methods
  -[HKSPSleepEvent copyWithZone:]
  -[HKSPSleepEvent compare:]
  -[HKSPSleepEvent dueDate]
  -[HKSPSleepEvent .cxx_destruct]
  -[HKSPSleepEvent succinctDescriptionBuilder]
  -[HKSPSleepEvent encodeWithCoder:]
  -[HKSPSleepEvent identifier]
  -[HKSPSleepEvent type]
  -[HKSPSleepEvent succinctDescription]
  -[HKSPSleepEvent isEqual:]
  -[HKSPSleepEvent expirationDate]
  -[HKSPSleepEvent isExpired:]
  -[HKSPSleepEvent initWithIdentifier:dueDate:type:expirationDate:isUserVisible:]
  -[HKSPSleepEvent descriptionWithMultilinePrefix:]
  -[HKSPSleepEvent initWithCoder:]
  -[HKSPSleepEvent descriptionBuilderWithMultilinePrefix:]
  -[HKSPSleepEvent isUserVisible]


HKSPDictionaryDeserializer : NSCoder /usr/lib/libobjc.A.dylib
 @property  unsigned long serializationOptions
 @property  NSDictionary *serializedDictionary
 @property  NSMutableArray *stack

  // instance methods
  -[HKSPDictionaryDeserializer decodeIntegerForKey:]
  -[HKSPDictionaryDeserializer decodeBoolForKey:]
  -[HKSPDictionaryDeserializer decodeFloatForKey:]
  -[HKSPDictionaryDeserializer decodeIntForKey:]
  -[HKSPDictionaryDeserializer _decodeObject:]
  -[HKSPDictionaryDeserializer decodeInt32ForKey:]
  -[HKSPDictionaryDeserializer decodeTopLevelObjectOfClass:forKey:error:]
  -[HKSPDictionaryDeserializer decodeObjectForKey:]
  -[HKSPDictionaryDeserializer decodeDoubleForKey:]
  -[HKSPDictionaryDeserializer decodeInt64ForKey:]
  -[HKSPDictionaryDeserializer stack]
  -[HKSPDictionaryDeserializer serializedDictionary]
  -[HKSPDictionaryDeserializer allowsKeyedCoding]
  -[HKSPDictionaryDeserializer .cxx_destruct]
  -[HKSPDictionaryDeserializer hksp_serializationOptions]
  -[HKSPDictionaryDeserializer initWithSerializedDictionary:]
  -[HKSPDictionaryDeserializer _decodeDeserializable:]
  -[HKSPDictionaryDeserializer deserializeObjectOfClass:error:]
  -[HKSPDictionaryDeserializer serializationOptions]
  -[HKSPDictionaryDeserializer initWithSerializedDictionary:serializationOptions:]


HKSPFeatureAvailabilityStore : NSObject /usr/lib/libSystem.B.dylib <HKSPSleepStorePrivateObserver, HKFeatureAvailabilityProviding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *featureIdentifier

  // instance methods
  -[HKSPFeatureAvailabilityStore _registerForNotifications]
  -[HKSPFeatureAvailabilityStore isCurrentOnboardingVersionCompletedWithError:]
  -[HKSPFeatureAvailabilityStore unregisterObserver:]
  -[HKSPFeatureAvailabilityStore onboardedCountryCodeSupportedStateForDevice:error:]
  -[HKSPFeatureAvailabilityStore dealloc]
  -[HKSPFeatureAvailabilityStore highestOnboardingVersionCompletedWithError:]
  -[HKSPFeatureAvailabilityStore .cxx_destruct]
  -[HKSPFeatureAvailabilityStore isFeatureCapabilitySupportedOnDevice:error:]
  -[HKSPFeatureAvailabilityStore earliestDateLowestOnboardingVersionCompletedWithError:]
  -[HKSPFeatureAvailabilityStore isCurrentOnboardingVersionCompletedWithCompletion:]
  -[HKSPFeatureAvailabilityStore isFeatureCapabilitySupportedOnActivePairedDeviceWithError:]
  -[HKSPFeatureAvailabilityStore featureIdentifier]
  -[HKSPFeatureAvailabilityStore resetOnboardingWithCompletion:]
  -[HKSPFeatureAvailabilityStore setCurrentOnboardingVersionCompletedForCountryCode:completion:]
  -[HKSPFeatureAvailabilityStore registerObserver:queue:]
  -[HKSPFeatureAvailabilityStore canCompleteOnboardingForCountryCode:error:]
  -[HKSPFeatureAvailabilityStore sleepStore:sleepEventRecordDidChange:]
  -[HKSPFeatureAvailabilityStore initWithFeatureIdentifier:sleepStore:pairedDeviceRegistry:]
  -[HKSPFeatureAvailabilityStore _pairedDeviceDidChange]
  -[HKSPFeatureAvailabilityStore _currentSleepEventRecordWithError:]
  -[HKSPFeatureAvailabilityStore _isCurrentOnboardingVersionCompletedForSleepEventRecord:]
  -[HKSPFeatureAvailabilityStore initWithFeatureIdentifier:sleepStore:]
  -[HKSPFeatureAvailabilityStore onboardedCountryCodeSupportedStateWithError:]
  -[HKSPFeatureAvailabilityStore canCompleteOnboardingForCountryCode:device:error:]


HKSPXPCMessage : NSObject /usr/lib/libSystem.B.dylib <BSDescriptionProviding>
 @property  NSString *identifier
 @property  @? block
 @property  unsigned long options
 @property  @? errorHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HKSPXPCMessage errorHandler]
  -[HKSPXPCMessage .cxx_destruct]
  -[HKSPXPCMessage block]
  -[HKSPXPCMessage options]
  -[HKSPXPCMessage succinctDescriptionBuilder]
  -[HKSPXPCMessage identifier]
  -[HKSPXPCMessage succinctDescription]
  -[HKSPXPCMessage initWithIdentifier:block:options:errorHandler:]
  -[HKSPXPCMessage descriptionWithMultilinePrefix:]
  -[HKSPXPCMessage descriptionBuilderWithMultilinePrefix:]


HKSPStateMachineState : NSObject /usr/lib/libSystem.B.dylib <HKSPStateMachineEventHandler, NSCopying>
 @property  HKSPStateMachine *stateMachine
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HKSPStateMachineState copyWithZone:]
  -[HKSPStateMachineState setStateMachine:]
  -[HKSPStateMachineState stateMachine]
  -[HKSPStateMachineState updateState]
  -[HKSPStateMachineState .cxx_destruct]
  -[HKSPStateMachineState willEnterWithPreviousState:context:]
  -[HKSPStateMachineState succinctDescriptionBuilder]
  -[HKSPStateMachineState succinctDescription]
  -[HKSPStateMachineState didEnterWithPreviousState:context:]
  -[HKSPStateMachineState isEqual:]
  -[HKSPStateMachineState stateName]
  -[HKSPStateMachineState willExitWithNextState:context:]
  -[HKSPStateMachineState didExitWithNextState:context:]
  -[HKSPStateMachineState equalsBuilderWithObject:]
  -[HKSPStateMachineState initWithStateMachine:]
  -[HKSPStateMachineState descriptionWithMultilinePrefix:]
  -[HKSPStateMachineState descriptionBuilderWithMultilinePrefix:]


HKSPCoalescingExecutor : NSObject /usr/lib/libSystem.B.dylib <HKSPExecutor>
 @property  NSObject<OS_dispatch_source> *source
 @property  NSObject<OS_dispatch_queue> *queue
 @property  @? block
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HKSPCoalescingExecutor initWithQueue:block:]
  -[HKSPCoalescingExecutor execute]
  -[HKSPCoalescingExecutor initWithBlock:]
  -[HKSPCoalescingExecutor source]
  -[HKSPCoalescingExecutor .cxx_destruct]
  -[HKSPCoalescingExecutor block]
  -[HKSPCoalescingExecutor queue]


HKSPImmediateExecutor : NSObject /usr/lib/libSystem.B.dylib <HKSPExecutor>
 @property  @? block
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HKSPImmediateExecutor execute]
  -[HKSPImmediateExecutor initWithBlock:]
  -[HKSPImmediateExecutor .cxx_destruct]
  -[HKSPImmediateExecutor block]


HKSPSleepScheduleOccurrence : NSObject /usr/lib/libSystem.B.dylib <BSDescriptionProviding, HKSPObject, NAEquatable, NAHashable, NSMutableCopying>
 @property  HKSPSleepScheduleDayOccurrence *backingOccurrence
 @property  BOOL usesDefaultBedtimeAndWakeUpComponents
 @property  BOOL isInitialized
 @property  BOOL isRepeating
 @property  BOOL isSingleDayOverride
 @property  BOOL crossesDayBoundary
 @property  HKSPAlarmConfiguration *alarmConfiguration
 @property  NSDateComponents *bedtimeComponents
 @property  NSDateComponents *wakeUpComponents
 @property  unsigned long weekdays
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long version
 @property  NSDate *lastModifiedDate
 @property  NSSet *significantChanges

  // class methods
  +[HKSPSleepScheduleOccurrence supportsSecureCoding]
  +[HKSPSleepScheduleOccurrence testSleepScheduleOccurrenceWithWeekdays:alarmEnabled:]
  +[HKSPSleepScheduleOccurrence testSleepScheduleOccurrenceWithWeekdays:alarmEnabled:includeToneIds:]
  +[HKSPSleepScheduleOccurrence testSleepScheduleOccurrenceWithWeekdays:]
  +[HKSPSleepScheduleOccurrence testSleepScheduleOccurrenceWithAlarmEnabled:]
  +[HKSPSleepScheduleOccurrence testSleepScheduleOccurrence]
  +[HKSPSleepScheduleOccurrence testOverrideSleepScheduleOccurrence]
  +[HKSPSleepScheduleOccurrence testSleepScheduleOccurrenceWithAllPropertiesSet]
  +[HKSPSleepScheduleOccurrence occurrenceWithWeekdays:backingOccurrence:]

  // instance methods
  -[HKSPSleepScheduleOccurrence copyWithZone:]
  -[HKSPSleepScheduleOccurrence init]
  -[HKSPSleepScheduleOccurrence isRepeating]
  -[HKSPSleepScheduleOccurrence isEquivalentTo:]
  -[HKSPSleepScheduleOccurrence .cxx_destruct]
  -[HKSPSleepScheduleOccurrence isInitialized]
  -[HKSPSleepScheduleOccurrence initFromObject:]
  -[HKSPSleepScheduleOccurrence succinctDescriptionBuilder]
  -[HKSPSleepScheduleOccurrence encodeWithCoder:]
  -[HKSPSleepScheduleOccurrence weekdays]
  -[HKSPSleepScheduleOccurrence succinctDescription]
  -[HKSPSleepScheduleOccurrence _equateTo:builderBuilderBlock:]
  -[HKSPSleepScheduleOccurrence mutableCopy]
  -[HKSPSleepScheduleOccurrence isEqual:]
  -[HKSPSleepScheduleOccurrence version]
  -[HKSPSleepScheduleOccurrence isSingleDayOverride]
  -[HKSPSleepScheduleOccurrence alarmConfiguration]
  -[HKSPSleepScheduleOccurrence isAlarmEquivalentToOverrideOccurrence:]
  -[HKSPSleepScheduleOccurrence bedtimeComponents]
  -[HKSPSleepScheduleOccurrence mutableCopyWithZone:]
  -[HKSPSleepScheduleOccurrence wakeUpComponents]
  -[HKSPSleepScheduleOccurrence backingOccurrence]
  -[HKSPSleepScheduleOccurrence bedtimeDateForWakeUpDate:gregorianCalendar:]
  -[HKSPSleepScheduleOccurrence overrideOccurrenceWithWakeUpComponents:bedtimeComponents:]
  -[HKSPSleepScheduleOccurrence overrideDayInCalendar:]
  -[HKSPSleepScheduleOccurrence wakeUpDateForDate:searchBackwards:gregorianCalendar:]
  -[HKSPSleepScheduleOccurrence wakeUpDateForDate:day:searchBackwards:gregorianCalendar:]
  -[HKSPSleepScheduleOccurrence isValidOccurrence]
  -[HKSPSleepScheduleOccurrence usesDefaultBedtimeAndWakeUpComponents]
  -[HKSPSleepScheduleOccurrence overrideOccurrenceTemplateForCurrentDate:gregorianCalendar:]
  -[HKSPSleepScheduleOccurrence crossesDayBoundary]
  -[HKSPSleepScheduleOccurrence overridesWakeUpForOccurrenceOnDate:gregorianCalendar:]
  -[HKSPSleepScheduleOccurrence overrideAppliesToOccurrence:gregorianCalendar:]
  -[HKSPSleepScheduleOccurrence nextDateIntervalWithWakeUpAfterDate:gregorianCalendar:]
  -[HKSPSleepScheduleOccurrence isEquivalentToOverrideOccurrence:]
  -[HKSPSleepScheduleOccurrence descriptionWithMultilinePrefix:]
  -[HKSPSleepScheduleOccurrence copyFromObject:]
  -[HKSPSleepScheduleOccurrence initWithCoder:]
  -[HKSPSleepScheduleOccurrence descriptionBuilderWithMultilinePrefix:]


HKSPMutableSleepScheduleOccurrence : HKSPSleepScheduleOccurrence <HKSPMutableObject>
 @property  HKSPSleepScheduleDayOccurrence *backingOccurrence
 @property  NSDateComponents *bedtimeComponents
 @property  NSDateComponents *wakeUpComponents
 @property  unsigned long weekdays
 @property  HKSPAlarmConfiguration *alarmConfiguration
 @property  NSDate *lastModifiedDate
 @property  HKSPChangeSet *changeSet
 @property  unsigned long version
 @property  NSSet *significantChanges
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKSPMutableSleepScheduleOccurrence supportsSecureCoding]
  +[HKSPMutableSleepScheduleOccurrence occurrenceWithWeekdays:bedtimeHour:bedtimeMinute:wakeUpHour:wakeUpMinute:]

  // instance methods
  -[HKSPMutableSleepScheduleOccurrence changeSet]
  -[HKSPMutableSleepScheduleOccurrence copyWithZone:]
  -[HKSPMutableSleepScheduleOccurrence freeze]
  -[HKSPMutableSleepScheduleOccurrence init]
  -[HKSPMutableSleepScheduleOccurrence .cxx_destruct]
  -[HKSPMutableSleepScheduleOccurrence encodeWithCoder:]
  -[HKSPMutableSleepScheduleOccurrence weekdays]
  -[HKSPMutableSleepScheduleOccurrence mutableCopy]
  -[HKSPMutableSleepScheduleOccurrence alarmConfiguration]
  -[HKSPMutableSleepScheduleOccurrence setWeekdays:]
  -[HKSPMutableSleepScheduleOccurrence setBedtimeComponents:]
  -[HKSPMutableSleepScheduleOccurrence setWakeUpComponents:]
  -[HKSPMutableSleepScheduleOccurrence backingOccurrence]
  -[HKSPMutableSleepScheduleOccurrence turnOffAlarm]
  -[HKSPMutableSleepScheduleOccurrence initWithTemplateOccurrence:]
  -[HKSPMutableSleepScheduleOccurrence setBackingOccurrence:]
  -[HKSPMutableSleepScheduleOccurrence turnOnAlarm]
  -[HKSPMutableSleepScheduleOccurrence setAlarmConfiguration:]
  -[HKSPMutableSleepScheduleOccurrence turnOnWeekdays:]
  -[HKSPMutableSleepScheduleOccurrence turnOffWeekdays:]
  -[HKSPMutableSleepScheduleOccurrence applyHourAndMinuteFromBedtimeComponents:wakeUpComponents:gregorianCalendar:]
  -[HKSPMutableSleepScheduleOccurrence initWithCoder:]


HKSPPersistentStateMachineState : HKSPStateMachineState <HKSPDictionarySerializable, NSCoding, NSCopying>
 @property  HKSPPersistentStateMachine *stateMachine
 @property  NSDate *expirationDate
 @property  BOOL hasExpirationDate
 @property  NSDateInterval *lifetimeInterval
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKSPPersistentStateMachineState infiniteInterval]

  // instance methods
  -[HKSPPersistentStateMachineState copyWithZone:]
  -[HKSPPersistentStateMachineState isExpiredForDate:]
  -[HKSPPersistentStateMachineState setExpirationDate:]
  -[HKSPPersistentStateMachineState .cxx_destruct]
  -[HKSPPersistentStateMachineState willEnterWithPreviousState:context:]
  -[HKSPPersistentStateMachineState succinctDescriptionBuilder]
  -[HKSPPersistentStateMachineState hasExpirationDate]
  -[HKSPPersistentStateMachineState encodeWithCoder:]
  -[HKSPPersistentStateMachineState expirationDate]
  -[HKSPPersistentStateMachineState willExitWithNextState:context:]
  -[HKSPPersistentStateMachineState lifetimeInterval]
  -[HKSPPersistentStateMachineState equalsBuilderWithObject:]
  -[HKSPPersistentStateMachineState initWithStateMachine:]
  -[HKSPPersistentStateMachineState initWithStateMachine:lifetimeInterval:]
  -[HKSPPersistentStateMachineState setLifetimeInterval:]
  -[HKSPPersistentStateMachineState determineExpirationDateForCurrentDate:]
  -[HKSPPersistentStateMachineState updateLifetimeIntervalForCurrentDate:expirationBlock:]
  -[HKSPPersistentStateMachineState initWithCoder:]


HKSPSensitiveUIMonitor : NSObject /usr/lib/libSystem.B.dylib
 @property  HKSPObserverSet *observers
 @property  NSUserDefaults *userDefaults
 @property  NPSManager *npsManager
 @property  BOOL sensitiveUIOverridden
 @property  BOOL hideSensitiveUI
 @property  BOOL needPrefsUpdate
 @property  {os_unfair_lock_s=I} lock
 @property  BOOL currentSensitiveUIHidden

  // class methods
  +[HKSPSensitiveUIMonitor sharedMonitor]

  // instance methods
  -[HKSPSensitiveUIMonitor registerForNotifications]
  -[HKSPSensitiveUIMonitor initWithCallbackScheduler:]
  -[HKSPSensitiveUIMonitor userDefaults]
  -[HKSPSensitiveUIMonitor _isVendorRelease]
  -[HKSPSensitiveUIMonitor dealloc]
  -[HKSPSensitiveUIMonitor .cxx_destruct]
  -[HKSPSensitiveUIMonitor lock]
  -[HKSPSensitiveUIMonitor observers]
  -[HKSPSensitiveUIMonitor shouldHideForSensitivity:]
  -[HKSPSensitiveUIMonitor hideSensitiveUI]
  -[HKSPSensitiveUIMonitor _hideSensitiveUI]
  -[HKSPSensitiveUIMonitor _handleNotification]
  -[HKSPSensitiveUIMonitor npsManager]
  -[HKSPSensitiveUIMonitor needPrefsUpdate]
  -[HKSPSensitiveUIMonitor observeValueForKeyPath:ofObject:change:context:]
  -[HKSPSensitiveUIMonitor unregisterForNotifications]
  -[HKSPSensitiveUIMonitor removeObserver:]
  -[HKSPSensitiveUIMonitor addObserver:]
  -[HKSPSensitiveUIMonitor overrideHideSensitiveUI:]
  -[HKSPSensitiveUIMonitor isCurrentSensitiveUIHidden]
  -[HKSPSensitiveUIMonitor setCurrentSensitiveUIHidden:]
  -[HKSPSensitiveUIMonitor sensitiveUIOverridden]
  -[HKSPSensitiveUIMonitor _withLock:]


HKSPSleepSchedule : NSObject /usr/lib/libSystem.B.dylib <BSDescriptionProviding, HKSPObject, HKSPDictionarySerializable, NAEquatable, NAHashable, NSMutableCopying>
 @property  HKSPSleepScheduleDayOccurrence *mondayOccurrence
 @property  HKSPSleepScheduleDayOccurrence *tuesdayOccurrence
 @property  HKSPSleepScheduleDayOccurrence *wednesdayOccurrence
 @property  HKSPSleepScheduleDayOccurrence *thursdayOccurrence
 @property  HKSPSleepScheduleDayOccurrence *fridayOccurrence
 @property  HKSPSleepScheduleDayOccurrence *saturdayOccurrence
 @property  HKSPSleepScheduleDayOccurrence *sundayOccurrence
 @property  HKSPSleepScheduleDayOccurrence *overrideDayOccurrence
 @property  unsigned long windDownMinutes
 @property  double sleepDurationGoal
 @property  BOOL isDefaultSchedule
 @property  HKSPSleepScheduleOccurrence *overrideOccurrence
 @property  unsigned long weekdaysWithOccurrences
 @property  unsigned long weekdaysWithoutOccurrences
 @property  BOOL enabled
 @property  NSArray *occurrences
 @property  double windDownTime
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long version
 @property  NSDate *lastModifiedDate
 @property  NSSet *significantChanges

  // class methods
  +[HKSPSleepSchedule supportsSecureCoding]
  +[HKSPSleepSchedule testWeekdayWeekendSleepSchedule]
  +[HKSPSleepSchedule testSleepScheduleWithWindDownTimeInterval:alarmEnabled:]
  +[HKSPSleepSchedule testSleepScheduleWithBedtimeHour:bedtimeMinute:wakeUpHour:wakeUpMinute:weekdays:windDownMinutes:]
  +[HKSPSleepSchedule testSleepScheduleWithOverride]
  +[HKSPSleepSchedule testSleepScheduleWithAllPropertiesSet]
  +[HKSPSleepSchedule testSleepScheduleWithWindDownTimeInterval:]
  +[HKSPSleepSchedule testSleepScheduleWithAlarmEnabled:]
  +[HKSPSleepSchedule testSleepScheduleWithBedtimeHour:bedtimeMinute:wakeUpHour:wakeUpMinute:weekdays:]
  +[HKSPSleepSchedule testSleepScheduleWithWindDownMinutes:]
  +[HKSPSleepSchedule testWeekdayWeekendSleepScheduleWithOverride]
  +[HKSPSleepSchedule testSleepSchedule]
  +[HKSPSleepSchedule testSleepScheduleWithAllOccurrencePropertiesSet]

  // instance methods
  -[HKSPSleepSchedule copyWithZone:]
  -[HKSPSleepSchedule init]
  -[HKSPSleepSchedule isEquivalentTo:]
  -[HKSPSleepSchedule .cxx_destruct]
  -[HKSPSleepSchedule initFromObject:]
  -[HKSPSleepSchedule succinctDescriptionBuilder]
  -[HKSPSleepSchedule encodeWithCoder:]
  -[HKSPSleepSchedule occurrences]
  -[HKSPSleepSchedule isEnabled]
  -[HKSPSleepSchedule succinctDescription]
  -[HKSPSleepSchedule emptyCopy]
  -[HKSPSleepSchedule _equateTo:builderBuilderBlock:]
  -[HKSPSleepSchedule mutableCopy]
  -[HKSPSleepSchedule lastModifiedDate]
  -[HKSPSleepSchedule isEqual:]
  -[HKSPSleepSchedule version]
  -[HKSPSleepSchedule overridenOccurrenceForOverrideOccurrence:]
  -[HKSPSleepSchedule significantChanges]
  -[HKSPSleepSchedule mutableCopyWithZone:]
  -[HKSPSleepSchedule isEnabledAndHasOccurrences]
  -[HKSPSleepSchedule windDownTime]
  -[HKSPSleepSchedule descriptionWithMultilinePrefix:]
  -[HKSPSleepSchedule sleepDurationGoal]
  -[HKSPSleepSchedule mondayOccurrence]
  -[HKSPSleepSchedule tuesdayOccurrence]
  -[HKSPSleepSchedule wednesdayOccurrence]
  -[HKSPSleepSchedule thursdayOccurrence]
  -[HKSPSleepSchedule fridayOccurrence]
  -[HKSPSleepSchedule saturdayOccurrence]
  -[HKSPSleepSchedule sundayOccurrence]
  -[HKSPSleepSchedule overrideDayOccurrence]
  -[HKSPSleepSchedule _enumerateDayOccurrencesWithBlock:]
  -[HKSPSleepSchedule _unsortedOccurrences]
  -[HKSPSleepSchedule occurrencesOnDays:]
  -[HKSPSleepSchedule weekdaysWithoutOccurrences]
  -[HKSPSleepSchedule weekdaysWithOccurrences]
  -[HKSPSleepSchedule _wakeUpComponentsByAddingSleepDurationGoalToBedtimeComponents:]
  -[HKSPSleepSchedule allowableRangeForWeekdays:]
  -[HKSPSleepSchedule occurrenceOnDay:]
  -[HKSPSleepSchedule isDefaultSchedule]
  -[HKSPSleepSchedule overrideOccurrence]
  -[HKSPSleepSchedule windDownMinutes]
  -[HKSPSleepSchedule occurrencesAfterDate:gregorianCalendar:]
  -[HKSPSleepSchedule mutableOccurrenceTemplate]
  -[HKSPSleepSchedule allowableRangeForModifiedOccurrence:gregorianCalendar:]
  -[HKSPSleepSchedule maximumAllowableWindDown]
  -[HKSPSleepSchedule copyFromObject:]
  -[HKSPSleepSchedule initWithCoder:]
  -[HKSPSleepSchedule descriptionBuilderWithMultilinePrefix:]


HKSPMutableSleepSchedule : HKSPSleepSchedule <HKSPMutableObject>
 @property  unsigned long windDownMinutes
 @property  HKSPSleepScheduleDayOccurrence *mondayOccurrence
 @property  HKSPSleepScheduleDayOccurrence *tuesdayOccurrence
 @property  HKSPSleepScheduleDayOccurrence *wednesdayOccurrence
 @property  HKSPSleepScheduleDayOccurrence *thursdayOccurrence
 @property  HKSPSleepScheduleDayOccurrence *fridayOccurrence
 @property  HKSPSleepScheduleDayOccurrence *saturdayOccurrence
 @property  HKSPSleepScheduleDayOccurrence *sundayOccurrence
 @property  HKSPSleepScheduleDayOccurrence *overrideDayOccurrence
 @property  BOOL enabled
 @property  double windDownTime
 @property  double sleepDurationGoal
 @property  NSDate *lastModifiedDate
 @property  HKSPChangeSet *changeSet
 @property  unsigned long version
 @property  NSSet *significantChanges
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKSPMutableSleepSchedule supportsSecureCoding]

  // instance methods
  -[HKSPMutableSleepSchedule changeSet]
  -[HKSPMutableSleepSchedule copyWithZone:]
  -[HKSPMutableSleepSchedule freeze]
  -[HKSPMutableSleepSchedule init]
  -[HKSPMutableSleepSchedule setLastModifiedDate:]
  -[HKSPMutableSleepSchedule .cxx_destruct]
  -[HKSPMutableSleepSchedule encodeWithCoder:]
  -[HKSPMutableSleepSchedule isEnabled]
  -[HKSPMutableSleepSchedule mutableCopy]
  -[HKSPMutableSleepSchedule lastModifiedDate]
  -[HKSPMutableSleepSchedule setEnabled:]
  -[HKSPMutableSleepSchedule saveOccurrence:]
  -[HKSPMutableSleepSchedule setWindDownTime:]
  -[HKSPMutableSleepSchedule setSleepDurationGoal:]
  -[HKSPMutableSleepSchedule setWindDownMinutes:]
  -[HKSPMutableSleepSchedule windDownTime]
  -[HKSPMutableSleepSchedule sleepDurationGoal]
  -[HKSPMutableSleepSchedule mondayOccurrence]
  -[HKSPMutableSleepSchedule tuesdayOccurrence]
  -[HKSPMutableSleepSchedule wednesdayOccurrence]
  -[HKSPMutableSleepSchedule thursdayOccurrence]
  -[HKSPMutableSleepSchedule fridayOccurrence]
  -[HKSPMutableSleepSchedule saturdayOccurrence]
  -[HKSPMutableSleepSchedule sundayOccurrence]
  -[HKSPMutableSleepSchedule overrideDayOccurrence]
  -[HKSPMutableSleepSchedule _modifyDayOccurrencesForWeekdays:block:]
  -[HKSPMutableSleepSchedule removeOccurrence:]
  -[HKSPMutableSleepSchedule saveOccurrence:options:]
  -[HKSPMutableSleepSchedule _updateOverrideOccurrenceForOccurrence:]
  -[HKSPMutableSleepSchedule _updateBackingOccurrencesForOccurrence:]
  -[HKSPMutableSleepSchedule setMondayOccurrence:]
  -[HKSPMutableSleepSchedule _shouldRemoveOverrideOccurrence:]
  -[HKSPMutableSleepSchedule setOverrideDayOccurrence:]
  -[HKSPMutableSleepSchedule setTuesdayOccurrence:]
  -[HKSPMutableSleepSchedule setWednesdayOccurrence:]
  -[HKSPMutableSleepSchedule setThursdayOccurrence:]
  -[HKSPMutableSleepSchedule setFridayOccurrence:]
  -[HKSPMutableSleepSchedule setSaturdayOccurrence:]
  -[HKSPMutableSleepSchedule setSundayOccurrence:]
  -[HKSPMutableSleepSchedule hasChangeToWindDownTime]
  -[HKSPMutableSleepSchedule _hasChangeToScheduleEnabled]
  -[HKSPMutableSleepSchedule _hasChangeForDayOccurrenceKey:dayOccurrence:]
  -[HKSPMutableSleepSchedule hasChangeAffectingScheduling]
  -[HKSPMutableSleepSchedule hasOverrideOccurrenceRemoval]
  -[HKSPMutableSleepSchedule hasChangeToSleepDurationGoal]
  -[HKSPMutableSleepSchedule lastOverrideOccurrenceWakeUpComponents]
  -[HKSPMutableSleepSchedule initWithCoder:]


HKSPSleepStore : NSObject /usr/lib/libSystem.B.dylib <HKSPXPCConnectionProviderDelegate>
 @property  NSString *identifier
 @property  <HKSPSyncAnchor> *syncAnchor
 @property  {os_unfair_lock_s=I} syncLock
 @property  HKSleepHealthStore *sleepHealthStore
 @property  HKSPObserverSet *observers
 @property  HKSPXPCConnectionProvider *connectionProvider
 @property  HKSPSleepStoreCache *sleepStoreCache
 @property  <NAScheduler> *callbackScheduler
 @property  <HKSPExecutor> *reconnectExecutor
 @property  @? currentDateProvider
 @property  HKSPSleepStoreExportedObject *sleepStoreExportedObject
 @property  HKHealthStore *healthStore
 @property  HKSPAnalyticsManager *analyticsManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKSPSleepStore _updatedHistoricalSleepGoalForSleepSchedule:options:date:]
  +[HKSPSleepStore _updatedHistoricalSleepSchedulesFromSleepSchedule:options:date:]

  // instance methods
  -[HKSPSleepStore healthStore]
  -[HKSPSleepStore reconnect]
  -[HKSPSleepStore _saveCurrentSleepEventRecordOnServer:options:]
  -[HKSPSleepStore updateSyncAnchor:]
  -[HKSPSleepStore connect]
  -[HKSPSleepStore currentDateProvider]
  -[HKSPSleepStore publishNotificationWithIdentifier:userInfo:completion:]
  -[HKSPSleepStore nextEventWithIdentifier:dueAfterDate:error:]
  -[HKSPSleepStore reconnectExecutor]
  -[HKSPSleepStore _getSleepEventRecordFromServerDoSync:notify:]
  -[HKSPSleepStore init]
  -[HKSPSleepStore analyticsManager]
  -[HKSPSleepStore _sleepAlarmWasDismissedOnDateOnServer:]
  -[HKSPSleepStore _setSleepModeOnServer:]
  -[HKSPSleepStore _getSleepScheduleDoSync:notify:]
  -[HKSPSleepStore currentSleepSettingsWithCompletion:]
  -[HKSPSleepStore _getSleepSettingsFromServerDoSync:notify:]
  -[HKSPSleepStore _publishNotificationOnServerWithIdentifier:userInfo:]
  -[HKSPSleepStore sleepModeFuture]
  -[HKSPSleepStore setSleepModeOn:completion:]
  -[HKSPSleepStore saveCurrentSleepSettings:]
  -[HKSPSleepStore _getSleepScheduleStateOnDoSync:notify:]
  -[HKSPSleepStore _getSleepModeDoSync:notify:]
  -[HKSPSleepStore currentSleepEventRecordFuture]
  -[HKSPSleepStore _checkInWithCurrentSyncAnchor]
  -[HKSPSleepStore skipWindDownWithCompletion:]
  -[HKSPSleepStore saveCurrentSleepEventRecord:options:]
  -[HKSPSleepStore currentSleepEventRecordWithError:]
  -[HKSPSleepStore nextEventDueAfterDate:completion:]
  -[HKSPSleepStore initWithHealthStore:]
  -[HKSPSleepStore confirmAwakeWithCompletion:]
  -[HKSPSleepStore _sleepAlarmWasSnoozedUntilDateOnServer:]
  -[HKSPSleepStore _getSleepSettingsDoSync:notify:]
  -[HKSPSleepStore currentSleepSettingsWithError:]
  -[HKSPSleepStore saveCurrentSleepSchedule:options:completion:]
  -[HKSPSleepStore initWithConnectionProviderProvider:identifier:healthStore:analyticsManager:executorProvider:callbackScheduler:currentDateProvider:]
  -[HKSPSleepStore sleepModeWithError:]
  -[HKSPSleepStore saveCurrentSleepSchedule:]
  -[HKSPSleepStore _getSleepScheduleFromServerDoSync:notify:]
  -[HKSPSleepStore callbackScheduler]
  -[HKSPSleepStore _setLockScreenOverrideStateOnServerWithState:userInfo:]
  -[HKSPSleepStore _skipWindDownOnServer]
  -[HKSPSleepStore dealloc]
  -[HKSPSleepStore delayBedtimeForTimeInterval:completion:]
  -[HKSPSleepStore currentSleepScheduleStateWithCompletion:]
  -[HKSPSleepStore _notifyObserversForChangedSleepEventRecord:]
  -[HKSPSleepStore .cxx_destruct]
  -[HKSPSleepStore _notifyObserversForChangedSleepSchedule:]
  -[HKSPSleepStore syncAnchor]
  -[HKSPSleepStore saveCurrentSleepSettings:options:]
  -[HKSPSleepStore saveCurrentSleepEventRecord:completion:]
  -[HKSPSleepStore sleepModeOnWithError:]
  -[HKSPSleepStore upcomingScheduleOccurrenceAfterDate:alarmStatus:error:]
  -[HKSPSleepStore _saveCurrentSleepScheduleOnServer:options:]
  -[HKSPSleepStore initWithIdentifier:]
  -[HKSPSleepStore _notifyObserversForSleepEvent:]
  -[HKSPSleepStore initWithIdentifier:healthStore:]
  -[HKSPSleepStore skipUpcomingWakeUpAlarmForDate:completion:]
  -[HKSPSleepStore sleepModeOnWithCompletion:]
  -[HKSPSleepStore currentSleepScheduleStateFuture]
  -[HKSPSleepStore syncLock]
  -[HKSPSleepStore _publishWakeUpResultsNotificationOnServer]
  -[HKSPSleepStore setSleepTrackingOnboardingCompletedVersion:completion:]
  -[HKSPSleepStore setUpcomingWakeUpAlarmEnabled:date:completion:]
  -[HKSPSleepStore identifier]
  -[HKSPSleepStore setLockScreenOverrideState:userInfo:completion:]
  -[HKSPSleepStore observers]
  -[HKSPSleepStore _notifyObserversForChangedSleepSettings:]
  -[HKSPSleepStore sleepModeWithCompletion:]
  -[HKSPSleepStore connectionProvider]
  -[HKSPSleepStore dismissGoodMorningWithCompletion:]
  -[HKSPSleepStore saveCurrentSleepSettings:completion:]
  -[HKSPSleepStore upcomingScheduleOccurrenceAfterDate:error:]
  -[HKSPSleepStore sleepAlarmWasModified:completion:]
  -[HKSPSleepStore _notifyObserversForChangedSleepMode:]
  -[HKSPSleepStore upcomingResolvedScheduleOccurrenceAfterDate:alarmStatus:error:]
  -[HKSPSleepStore _saveCurrentSleepSettingsOnServer:options:]
  -[HKSPSleepStore nextEventWithIdentifierFuture:dueAfterDate:]
  -[HKSPSleepStore currentSleepScheduleWithCompletion:]
  -[HKSPSleepStore _delayBedtimeForTimeIntervalOnServer:]
  -[HKSPSleepStore _getSleepScheduleStateFromServerDoSync:notify:]
  -[HKSPSleepStore currentSleepScheduleFuture]
  -[HKSPSleepStore _skipBedtimeOnServer]
  -[HKSPSleepStore saveCurrentSleepSchedule:completion:]
  -[HKSPSleepStore initWithConnectionProviderProvider:identifier:healthStore:]
  -[HKSPSleepStore nextEventDueAfterDateFuture:]
  -[HKSPSleepStore currentSleepEventRecordWithCompletion:]
  -[HKSPSleepStore publishWakeUpResultsNotificationWithCompletion:]
  -[HKSPSleepStore sleepHealthStore]
  -[HKSPSleepStore currentSleepScheduleWithError:]
  -[HKSPSleepStore currentSleepSettingsFuture]
  -[HKSPSleepStore sleepStoreCache]
  -[HKSPSleepStore _confirmAwakeOnServer]
  -[HKSPSleepStore _sendScheduleChangedAnalytics]
  -[HKSPSleepStore _notifyObserversForChangedSleepScheduleState:]
  -[HKSPSleepStore _sleepAlarmWasModifiedOnServer]
  -[HKSPSleepStore saveCurrentSleepSettings:options:completion:]
  -[HKSPSleepStore sleepAlarmWasSnoozedUntilDate:completion:]
  -[HKSPSleepStore nextEventWithIdentifier:dueAfterDate:completion:]
  -[HKSPSleepStore removeObserver:]
  -[HKSPSleepStore saveCurrentSleepSchedule:options:]
  -[HKSPSleepStore nextEventDueAfterDate:error:]
  -[HKSPSleepStore upcomingScheduleOccurrenceAfterDate:completion:]
  -[HKSPSleepStore upcomingResolvedScheduleOccurrenceAfterDate:error:]
  -[HKSPSleepStore sleepScheduleModelWithError:]
  -[HKSPSleepStore sleepScheduleModelWithCompletion:]
  -[HKSPSleepStore setSleepCoachingOnboardingCompletedVersion:completion:]
  -[HKSPSleepStore saveCurrentSleepEventRecord:]
  -[HKSPSleepStore sleepAlarmWasModifiedWithCompletion:]
  -[HKSPSleepStore _getSleepModeFromServerDoSync:notify:]
  -[HKSPSleepStore sleepAlarmWasDismissedOnDate:completion:]
  -[HKSPSleepStore addObserver:]
  -[HKSPSleepStore _dismissGoodMorningOnServer]
  -[HKSPSleepStore saveCurrentSleepEventRecord:options:completion:]
  -[HKSPSleepStore upcomingScheduleOccurrenceAfterDateFuture:]
  -[HKSPSleepStore sleepStoreExportedObject]
  -[HKSPSleepStore currentSleepScheduleStateWithError:]
  -[HKSPSleepStore sleepScheduleModelFuture]
  -[HKSPSleepStore _withLock:]
  -[HKSPSleepStore _writeHistoricalSchedule:options:]
  -[HKSPSleepStore setSleepWindDownShortcutsOnboardingCompletedVersion:completion:]
  -[HKSPSleepStore _getSleepEventRecordDoSync:notify:]
  -[HKSPSleepStore skipBedtimeWithCompletion:]
  -[HKSPSleepStore setWakeUpAlarmEnabled:resolvedOccurrence:date:completion:]
  -[HKSPSleepStore sleepModeOnFuture]


HKSPSleepStoreExportedObject : NSObject /usr/lib/libSystem.B.dylib <HKSPSleepClient>
 @property  HKSPSleepStore *sleepStore

  // instance methods
  -[HKSPSleepStoreExportedObject setSleepStore:]
  -[HKSPSleepStoreExportedObject sleepScheduleStateChanged:syncAnchor:]
  -[HKSPSleepStoreExportedObject getClientIdentifierWithCompletion:]
  -[HKSPSleepStoreExportedObject sleepSettingsChanged:syncAnchor:]
  -[HKSPSleepStoreExportedObject .cxx_destruct]
  -[HKSPSleepStoreExportedObject sleepScheduleChanged:syncAnchor:]
  -[HKSPSleepStoreExportedObject sleepEventOccurred:syncAnchor:]
  -[HKSPSleepStoreExportedObject sleepEventRecordChanged:syncAnchor:]
  -[HKSPSleepStoreExportedObject sleepStore]
  -[HKSPSleepStoreExportedObject sleepModeChanged:syncAnchor:]


HKSPAnalyticsStore : NSObject /usr/lib/libSystem.B.dylib
 @property  <HKSPUserDefaults> *userDefaults
 @property  @? diagnosticsOptInStatusProvider

  // instance methods
  -[HKSPAnalyticsStore userDefaults]
  -[HKSPAnalyticsStore .cxx_destruct]
  -[HKSPAnalyticsStore initWithUserDefaults:]
  -[HKSPAnalyticsStore initWithUserDefaults:diagnosticsOptInStatusProvider:]
  -[HKSPAnalyticsStore diagnosticsOptInStatusProvider]
  -[HKSPAnalyticsStore _setWindDownActions:forMorningIndex:overwriteExisting:]
  -[HKSPAnalyticsStore readAllWindDownActions]
  -[HKSPAnalyticsStore windDownActionsAfterMorningIndex:]
  -[HKSPAnalyticsStore writeWindDownActions:]
  -[HKSPAnalyticsStore setBaselineForWindDownActions:onMorningIndex:]
  -[HKSPAnalyticsStore updateWindDownActions:onMorningIndex:]
  -[HKSPAnalyticsStore windDownActionsForMorningIndex:]
  -[HKSPAnalyticsStore uncollectedWindDownActions]
  -[HKSPAnalyticsStore removeAllWindDownActionsBeforeMorningIndex:]
  -[HKSPAnalyticsStore markAllActionsAsCollected]
  -[HKSPAnalyticsStore setDiagnosticsOptInStatusProvider:]


HKSPSleepSettings : NSObject /usr/lib/libSystem.B.dylib <BSDescriptionProviding, HKSPObject, HKSPDictionarySerializable, NAEquatable, NAHashable, NSMutableCopying>
 @property  BOOL springBoardGreetingDisabled
 @property  BOOL watchSleepFeaturesEnabled
 @property  BOOL scheduledSleepMode
 @property  unsigned long sleepModeOptions
 @property  BOOL sleepTracking
 @property  BOOL timeInBedTracking
 @property  BOOL bedtimeReminders
 @property  BOOL wakeUpResults
 @property  BOOL chargingReminders
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long version
 @property  NSDate *lastModifiedDate
 @property  NSSet *significantChanges

  // class methods
  +[HKSPSleepSettings supportsSecureCoding]
  +[HKSPSleepSettings testSleepSettings]
  +[HKSPSleepSettings testSleepSettingsWithAllPropertiesSet]

  // instance methods
  -[HKSPSleepSettings copyWithZone:]
  -[HKSPSleepSettings sleepModeOptions]
  -[HKSPSleepSettings sleepTracking]
  -[HKSPSleepSettings wakeUpResults]
  -[HKSPSleepSettings watchSleepFeaturesEnabled]
  -[HKSPSleepSettings init]
  -[HKSPSleepSettings timeInBedTracking]
  -[HKSPSleepSettings chargingReminders]
  -[HKSPSleepSettings isEquivalentTo:]
  -[HKSPSleepSettings _needsMigrationForCoder:]
  -[HKSPSleepSettings bedtimeReminders]
  -[HKSPSleepSettings .cxx_destruct]
  -[HKSPSleepSettings initFromObject:]
  -[HKSPSleepSettings _migrateForCoder:]
  -[HKSPSleepSettings succinctDescriptionBuilder]
  -[HKSPSleepSettings encodeWithCoder:]
  -[HKSPSleepSettings _buildForEquivalenceTo:builder:]
  -[HKSPSleepSettings succinctDescription]
  -[HKSPSleepSettings _equateTo:builderBuilderBlock:]
  -[HKSPSleepSettings mutableCopy]
  -[HKSPSleepSettings lastModifiedDate]
  -[HKSPSleepSettings springBoardGreetingDisabled]
  -[HKSPSleepSettings isEqual:]
  -[HKSPSleepSettings version]
  -[HKSPSleepSettings scheduledSleepMode]
  -[HKSPSleepSettings significantChanges]
  -[HKSPSleepSettings mutableCopyWithZone:]
  -[HKSPSleepSettings descriptionWithMultilinePrefix:]
  -[HKSPSleepSettings copyFromObject:]
  -[HKSPSleepSettings initWithCoder:]
  -[HKSPSleepSettings descriptionBuilderWithMultilinePrefix:]


HKSPMutableSleepSettings : HKSPSleepSettings <HKSPMutableObject>
 @property  BOOL springBoardGreetingDisabled
 @property  BOOL watchSleepFeaturesEnabled
 @property  BOOL scheduledSleepMode
 @property  unsigned long sleepModeOptions
 @property  BOOL sleepTracking
 @property  BOOL timeInBedTracking
 @property  BOOL bedtimeReminders
 @property  BOOL wakeUpResults
 @property  BOOL chargingReminders
 @property  NSDate *lastModifiedDate
 @property  HKSPChangeSet *changeSet
 @property  unsigned long version
 @property  NSSet *significantChanges
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKSPMutableSleepSettings supportsSecureCoding]

  // instance methods
  -[HKSPMutableSleepSettings changeSet]
  -[HKSPMutableSleepSettings copyWithZone:]
  -[HKSPMutableSleepSettings sleepModeOptions]
  -[HKSPMutableSleepSettings freeze]
  -[HKSPMutableSleepSettings setSleepTracking:]
  -[HKSPMutableSleepSettings sleepTracking]
  -[HKSPMutableSleepSettings wakeUpResults]
  -[HKSPMutableSleepSettings watchSleepFeaturesEnabled]
  -[HKSPMutableSleepSettings setTimeInBedTracking:]
  -[HKSPMutableSleepSettings init]
  -[HKSPMutableSleepSettings setSpringBoardGreetingDisabled:]
  -[HKSPMutableSleepSettings timeInBedTracking]
  -[HKSPMutableSleepSettings setSleepModeOptions:]
  -[HKSPMutableSleepSettings setWakeUpResults:]
  -[HKSPMutableSleepSettings setLastModifiedDate:]
  -[HKSPMutableSleepSettings chargingReminders]
  -[HKSPMutableSleepSettings setBedtimeReminders:]
  -[HKSPMutableSleepSettings bedtimeReminders]
  -[HKSPMutableSleepSettings setChargingReminders:]
  -[HKSPMutableSleepSettings .cxx_destruct]
  -[HKSPMutableSleepSettings encodeWithCoder:]
  -[HKSPMutableSleepSettings mutableCopy]
  -[HKSPMutableSleepSettings lastModifiedDate]
  -[HKSPMutableSleepSettings springBoardGreetingDisabled]
  -[HKSPMutableSleepSettings setWatchSleepFeaturesEnabled:]
  -[HKSPMutableSleepSettings scheduledSleepMode]
  -[HKSPMutableSleepSettings initWithCoder:]
  -[HKSPMutableSleepSettings setScheduledSleepMode:]


HKSPResolvedSleepScheduleOccurrence : NSObject /usr/lib/libSystem.B.dylib <BSDescriptionProviding, NSCopying, NSSecureCoding>
 @property  NSDateInterval *scheduledInterval
 @property  NSDateInterval *bedtimeInterval
 @property  NSDateInterval *windDownInterval
 @property  HKSPSleepScheduleOccurrence *occurrence
 @property  HKSPSleepEvent *wakeUpEvent
 @property  HKSPSleepEvent *bedtimeEvent
 @property  HKSPSleepEvent *windDownEvent
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKSPResolvedSleepScheduleOccurrence supportsSecureCoding]

  // instance methods
  -[HKSPResolvedSleepScheduleOccurrence occurrence]
  -[HKSPResolvedSleepScheduleOccurrence copyWithZone:]
  -[HKSPResolvedSleepScheduleOccurrence compare:]
  -[HKSPResolvedSleepScheduleOccurrence .cxx_destruct]
  -[HKSPResolvedSleepScheduleOccurrence succinctDescriptionBuilder]
  -[HKSPResolvedSleepScheduleOccurrence encodeWithCoder:]
  -[HKSPResolvedSleepScheduleOccurrence succinctDescription]
  -[HKSPResolvedSleepScheduleOccurrence isEqual:]
  -[HKSPResolvedSleepScheduleOccurrence descriptionWithMultilinePrefix:]
  -[HKSPResolvedSleepScheduleOccurrence generateOverrideOccurrenceForCurrentDate:gregorianCalendar:]
  -[HKSPResolvedSleepScheduleOccurrence wakeUpEvent]
  -[HKSPResolvedSleepScheduleOccurrence bedtimeEvent]
  -[HKSPResolvedSleepScheduleOccurrence windDownEvent]
  -[HKSPResolvedSleepScheduleOccurrence initWithOccurrence:wakeUpEvent:bedtimeEvent:windDownEvent:]
  -[HKSPResolvedSleepScheduleOccurrence scheduledInterval]
  -[HKSPResolvedSleepScheduleOccurrence occurrenceByAdjustingEvent:]
  -[HKSPResolvedSleepScheduleOccurrence occurrenceByRemovingEventWithIdentifier:]
  -[HKSPResolvedSleepScheduleOccurrence bedtimeInterval]
  -[HKSPResolvedSleepScheduleOccurrence windDownInterval]
  -[HKSPResolvedSleepScheduleOccurrence initWithCoder:]
  -[HKSPResolvedSleepScheduleOccurrence descriptionBuilderWithMultilinePrefix:]


HKSPAnalyticsWindDownEventData : NSObject /usr/lib/libSystem.B.dylib <NSCoding, NSSecureCoding>
 @property  unsigned long action
 @property  BOOL wasUsed
 @property  BOOL wasCollected
 @property  NSString *identifier

  // class methods
  +[HKSPAnalyticsWindDownEventData supportsSecureCoding]

  // instance methods
  -[HKSPAnalyticsWindDownEventData .cxx_destruct]
  -[HKSPAnalyticsWindDownEventData action]
  -[HKSPAnalyticsWindDownEventData encodeWithCoder:]
  -[HKSPAnalyticsWindDownEventData identifier]
  -[HKSPAnalyticsWindDownEventData wasUsed]
  -[HKSPAnalyticsWindDownEventData isEqual:]
  -[HKSPAnalyticsWindDownEventData wasCollected]
  -[HKSPAnalyticsWindDownEventData collectedEventDataCopy]
  -[HKSPAnalyticsWindDownEventData initWithWindDownAction:wasUsed:identifier:wasCollected:]
  -[HKSPAnalyticsWindDownEventData isEqualEventData:]
  -[HKSPAnalyticsWindDownEventData initWithWindDownAction:wasUsed:identifier:]
  -[HKSPAnalyticsWindDownEventData initWithCoder:]


HKSPAnalyticsWindDownEventDataWrapper : NSObject /usr/lib/libSystem.B.dylib <NSCoding, NSSecureCoding>
 @property  NSArray *eventDatums

  // class methods
  +[HKSPAnalyticsWindDownEventDataWrapper supportsSecureCoding]

  // instance methods
  -[HKSPAnalyticsWindDownEventDataWrapper .cxx_destruct]
  -[HKSPAnalyticsWindDownEventDataWrapper encodeWithCoder:]
  -[HKSPAnalyticsWindDownEventDataWrapper initWithEventDatums:]
  -[HKSPAnalyticsWindDownEventDataWrapper eventDatums]
  -[HKSPAnalyticsWindDownEventDataWrapper setEventDatums:]
  -[HKSPAnalyticsWindDownEventDataWrapper initWithCoder:]


HKSPSleepStoreCache : NSObject /usr/lib/libSystem.B.dylib
 @property  {os_unfair_lock_s=I} cacheLock
 @property  HKSPSleepSchedule *sleepSchedule
 @property  BOOL sleepScheduleNeedsUpdate
 @property  HKSPSleepSettings *sleepSettings
 @property  BOOL sleepSettingsNeedsUpdate
 @property  HKSPSleepEventRecord *sleepEventRecord
 @property  BOOL sleepEventRecordNeedsUpdate
 @property  unsigned long sleepScheduleState
 @property  BOOL sleepScheduleStateNeedsUpdate
 @property  long long sleepMode
 @property  BOOL sleepModeNeedsUpdate

  // instance methods
  -[HKSPSleepStoreCache sleepEventRecord]
  -[HKSPSleepStoreCache sleepMode]
  -[HKSPSleepStoreCache sleepSettings]
  -[HKSPSleepStoreCache sleepSchedule]
  -[HKSPSleepStoreCache sleepSettingsNeedsUpdate]
  -[HKSPSleepStoreCache cachedSleepEventRecordWithMissHandler:]
  -[HKSPSleepStoreCache sleepScheduleState]
  -[HKSPSleepStoreCache init]
  -[HKSPSleepStoreCache cacheLock]
  -[HKSPSleepStoreCache purgeCachedSleepSettings]
  -[HKSPSleepStoreCache cachedSleepModeWithMissHandler:]
  -[HKSPSleepStoreCache cachedSleepSettingsWithMissHandler:]
  -[HKSPSleepStoreCache updateCachedSleepEventRecord:]
  -[HKSPSleepStoreCache .cxx_destruct]
  -[HKSPSleepStoreCache cachedSleepScheduleWithMissHandler:]
  -[HKSPSleepStoreCache _locked_purgeCachedSleepEventRecord]
  -[HKSPSleepStoreCache updateCachedSleepSchedule:]
  -[HKSPSleepStoreCache _locked_purgeCachedSleepSchedule]
  -[HKSPSleepStoreCache purgeCache]
  -[HKSPSleepStoreCache sleepScheduleStateNeedsUpdate]
  -[HKSPSleepStoreCache cachedSleepScheduleStateWithMissHandler:]
  -[HKSPSleepStoreCache purgeCachedSleepSchedule]
  -[HKSPSleepStoreCache sleepEventRecordNeedsUpdate]
  -[HKSPSleepStoreCache _locked_purgeCachedSleepSettings]
  -[HKSPSleepStoreCache updateCachedSleepSettings:]
  -[HKSPSleepStoreCache updateCachedSleepMode:]
  -[HKSPSleepStoreCache _locked_purgeCachedSleepScheduleState]
  -[HKSPSleepStoreCache purgeCachedSleepScheduleState]
  -[HKSPSleepStoreCache purgeCachedSleepEventRecord]
  -[HKSPSleepStoreCache sleepModeNeedsUpdate]
  -[HKSPSleepStoreCache updateCachedSleepScheduleState:]
  -[HKSPSleepStoreCache purgeCachedSleepMode]
  -[HKSPSleepStoreCache _locked_purgeCachedSleepMode]
  -[HKSPSleepStoreCache _withLock:]
  -[HKSPSleepStoreCache sleepScheduleNeedsUpdate]


HKSPProperty : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, NSCopying, BSDescriptionProviding>
 @property  NSString *identifier
 @property  NSString *propertyName
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKSPProperty supportsSecureCoding]

  // instance methods
  -[HKSPProperty copyWithZone:]
  -[HKSPProperty propertyName]
  -[HKSPProperty .cxx_destruct]
  -[HKSPProperty succinctDescriptionBuilder]
  -[HKSPProperty encodeWithCoder:]
  -[HKSPProperty identifier]
  -[HKSPProperty succinctDescription]
  -[HKSPProperty isEqual:]
  -[HKSPProperty initWithIdentifier:propertyName:]
  -[HKSPProperty descriptionWithMultilinePrefix:]
  -[HKSPProperty initWithCoder:]
  -[HKSPProperty descriptionBuilderWithMultilinePrefix:]


HKSPTestObject : NSObject /usr/lib/libSystem.B.dylib <HKSPObject>
 @property  NSString *testProperty
 @property  NSString *otherProperty
 @property  HKSPTestObject *testRelationship
 @property  unsigned long version
 @property  NSDate *lastModifiedDate
 @property  NSSet *significantChanges
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKSPTestObject supportsSecureCoding]

  // instance methods
  -[HKSPTestObject copyWithZone:]
  -[HKSPTestObject isEquivalentTo:]
  -[HKSPTestObject .cxx_destruct]
  -[HKSPTestObject initFromObject:]
  -[HKSPTestObject encodeWithCoder:]
  -[HKSPTestObject _buildForEquivalenceTo:builder:]
  -[HKSPTestObject _equateTo:builderBuilderBlock:]
  -[HKSPTestObject mutableCopy]
  -[HKSPTestObject lastModifiedDate]
  -[HKSPTestObject isEqual:]
  -[HKSPTestObject version]
  -[HKSPTestObject mutableCopyWithZone:]
  -[HKSPTestObject copyFromObject:]
  -[HKSPTestObject _isMutable]
  -[HKSPTestObject initWithTestProperty:testRelationship:]
  -[HKSPTestObject testProperty]
  -[HKSPTestObject otherProperty]
  -[HKSPTestObject initWithCoder:]
  -[HKSPTestObject initWithTestProperty:otherProperty:testRelationship:]
  -[HKSPTestObject testRelationship]
  -[HKSPTestObject initWithTestProperty:]


HKSPMutableTestObject : HKSPTestObject <HKSPMutableObject>
 @property  NSString *testProperty
 @property  NSString *otherProperty
 @property  HKSPTestObject *testRelationship
 @property  NSDate *lastModifiedDate
 @property  HKSPChangeSet *changeSet
 @property  unsigned long version
 @property  NSSet *significantChanges
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKSPMutableTestObject supportsSecureCoding]

  // instance methods
  -[HKSPMutableTestObject changeSet]
  -[HKSPMutableTestObject copyWithZone:]
  -[HKSPMutableTestObject freeze]
  -[HKSPMutableTestObject init]
  -[HKSPMutableTestObject .cxx_destruct]
  -[HKSPMutableTestObject encodeWithCoder:]
  -[HKSPMutableTestObject mutableCopy]
  -[HKSPMutableTestObject _isMutable]
  -[HKSPMutableTestObject testProperty]
  -[HKSPMutableTestObject otherProperty]
  -[HKSPMutableTestObject initWithCoder:]
  -[HKSPMutableTestObject testRelationship]
  -[HKSPMutableTestObject setTestProperty:]
  -[HKSPMutableTestObject setOtherProperty:]
  -[HKSPMutableTestObject setTestRelationship:]


_HKSPSleepEventTimelineAdjustment : NSObject /usr/lib/libSystem.B.dylib
 @property  HKSPResolvedSleepScheduleOccurrence *originalOccurrence
 @property  HKSPResolvedSleepScheduleOccurrence *adjustedOccurrence

  // instance methods
  -[_HKSPSleepEventTimelineAdjustment .cxx_destruct]
  -[_HKSPSleepEventTimelineAdjustment originalOccurrence]
  -[_HKSPSleepEventTimelineAdjustment setOriginalOccurrence:]
  -[_HKSPSleepEventTimelineAdjustment adjustedOccurrence]
  -[_HKSPSleepEventTimelineAdjustment setAdjustedOccurrence:]


HKSPSleepEventTimeline : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  NSMutableArray *orderedOccurrences
 @property  NSMutableArray *timelineAdjustments
 @property  NSDate *originDate
 @property  NSArray *resolvedOccurrences
 @property  NSArray *events
 @property  NSArray *upcomingEvents
 @property  NSArray *previousEvents
 @property  NSArray *upcomingResolvedOccurrences
 @property  NSArray *previousResolvedOccurrences

  // instance methods
  -[HKSPSleepEventTimeline events]
  -[HKSPSleepEventTimeline copyWithZone:]
  -[HKSPSleepEventTimeline upcomingEvents]
  -[HKSPSleepEventTimeline orderedOccurrences]
  -[HKSPSleepEventTimeline addResolvedOccurrence:]
  -[HKSPSleepEventTimeline previousEvents]
  -[HKSPSleepEventTimeline resolvedOccurrencePrecedingDate:]
  -[HKSPSleepEventTimeline .cxx_destruct]
  -[HKSPSleepEventTimeline originDate]
  -[HKSPSleepEventTimeline resolvedOccurrences]
  -[HKSPSleepEventTimeline upcomingResolvedOccurrencesWithinInterval:]
  -[HKSPSleepEventTimeline upcomingResolvedOccurrences]
  -[HKSPSleepEventTimeline resolvedOccurrenceOverlappingOccurrence:]
  -[HKSPSleepEventTimeline adjustResolvedOccurrence:withEvent:]
  -[HKSPSleepEventTimeline initWithOriginDate:]
  -[HKSPSleepEventTimeline previousResolvedOccurrences]
  -[HKSPSleepEventTimeline resolvedOccurrenceContainingOrPrecedingDate:]
  -[HKSPSleepEventTimeline resolvedOccurrenceContainingDate:]
  -[HKSPSleepEventTimeline _adjustedResolvedOccurrence:adjustmentBlock:]
  -[HKSPSleepEventTimeline adjustResolvedOccurrence:removingEventWithIdentifier:]
  -[HKSPSleepEventTimeline timelineAdjustments]


HKSPXPCConnectionListener : NSObject /usr/lib/libSystem.B.dylib <NSXPCListenerDelegate, BSDescriptionProviding>
 @property  HKSPXPCConnectionInfo *connectionInfo
 @property  NSXPCListener *connectionListener
 @property  {os_unfair_lock_s=I} clientLock
 @property  NSMutableSet *connectedClientSet
 @property  NSArray *connectedClients
 @property  HKSPXPCClient *currentClient
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKSPXPCConnectionListener listenerWithConnectionInfo:]

  // instance methods
  -[HKSPXPCConnectionListener connectionListener]
  -[HKSPXPCConnectionListener removeClientConnection:]
  -[HKSPXPCConnectionListener _currentClientForConnection:]
  -[HKSPXPCConnectionListener clientLock]
  -[HKSPXPCConnectionListener _didInterruptConnection]
  -[HKSPXPCConnectionListener addClientConnection:clientLink:]
  -[HKSPXPCConnectionListener currentClient]
  -[HKSPXPCConnectionListener connectionInfo]
  -[HKSPXPCConnectionListener connectedClients]
  -[HKSPXPCConnectionListener initWithConnectionInfo:]
  -[HKSPXPCConnectionListener startListening]
  -[HKSPXPCConnectionListener dealloc]
  -[HKSPXPCConnectionListener .cxx_destruct]
  -[HKSPXPCConnectionListener succinctDescriptionBuilder]
  -[HKSPXPCConnectionListener _clientWithConnection:clientLink:]
  -[HKSPXPCConnectionListener _didInvalidateConnection:]
  -[HKSPXPCConnectionListener listener:shouldAcceptNewConnection:]
  -[HKSPXPCConnectionListener connectedClientSet]
  -[HKSPXPCConnectionListener succinctDescription]
  -[HKSPXPCConnectionListener initWithConnectionInfo:connectionListener:]
  -[HKSPXPCConnectionListener performRemoteBlockOnClients:]
  -[HKSPXPCConnectionListener performRemoteBlock:onClient:]
  -[HKSPXPCConnectionListener _clientIdentifierProviderForClientLink:]
  -[HKSPXPCConnectionListener descriptionWithMultilinePrefix:]
  -[HKSPXPCConnectionListener _withLock:]
  -[HKSPXPCConnectionListener descriptionBuilderWithMultilinePrefix:]
  -[HKSPXPCConnectionListener _lock_logConnectedClients]


_HKSPQueueBackedScheduler : NSObject /usr/lib/libSystem.B.dylib <HKSPQueueBackedScheduler>
 @property  <NAScheduler> *scheduler
 @property  NSObject<OS_dispatch_queue> *queue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_HKSPQueueBackedScheduler afterDelay:performBlock:]
  -[_HKSPQueueBackedScheduler scheduler]
  -[_HKSPQueueBackedScheduler performBlock:]
  -[_HKSPQueueBackedScheduler performCancelableBlock:]
  -[_HKSPQueueBackedScheduler .cxx_destruct]
  -[_HKSPQueueBackedScheduler initWithQueue:]
  -[_HKSPQueueBackedScheduler queue]
  -[_HKSPQueueBackedScheduler initWithScheduler:queue:]


HKSPXPCClient : NSObject /usr/lib/libSystem.B.dylib <BSDescriptionProviding>
 @property  NSString *clientIdentifier
 @property  NSXPCConnection *connection
 @property  <HKSPClient> *clientLink
 @property  int processID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKSPXPCClient clientForConnection:clientIdentifierProvider:clientLink:]
  +[HKSPXPCClient clientForConnection:clientLink:]

  // instance methods
  -[HKSPXPCClient clientIdentifier]
  -[HKSPXPCClient processID]
  -[HKSPXPCClient .cxx_destruct]
  -[HKSPXPCClient clientLink]
  -[HKSPXPCClient succinctDescriptionBuilder]
  -[HKSPXPCClient succinctDescription]
  -[HKSPXPCClient isEqual:]
  -[HKSPXPCClient connection]
  -[HKSPXPCClient setClientIdentifier:]
  -[HKSPXPCClient descriptionWithMultilinePrefix:]
  -[HKSPXPCClient descriptionBuilderWithMultilinePrefix:]
  -[HKSPXPCClient initWithConnection:clientIdentifierProvider:clientLink:]


HKSPAlarmConfiguration : NSObject /usr/lib/libSystem.B.dylib <BSDescriptionProviding, HKSPObject, HKSPDictionarySerializable, NAEquatable, NAHashable, NSMutableCopying>
 @property  BOOL enabled
 @property  BOOL allowsSnooze
 @property  unsigned long playOptions
 @property  NSString *toneIdentifier
 @property  NSString *vibrationIdentifier
 @property  NSNumber *soundVolume
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long version
 @property  NSDate *lastModifiedDate
 @property  NSSet *significantChanges

  // class methods
  +[HKSPAlarmConfiguration supportsSecureCoding]
  +[HKSPAlarmConfiguration testAlarmConfiguration]
  +[HKSPAlarmConfiguration testAlarmConfigurationWithAllPropertiesSet]

  // instance methods
  -[HKSPAlarmConfiguration copyWithZone:]
  -[HKSPAlarmConfiguration init]
  -[HKSPAlarmConfiguration allowsSnooze]
  -[HKSPAlarmConfiguration isEquivalentTo:]
  -[HKSPAlarmConfiguration _needsMigrationForCoder:]
  -[HKSPAlarmConfiguration vibrationIdentifier]
  -[HKSPAlarmConfiguration playOptions]
  -[HKSPAlarmConfiguration .cxx_destruct]
  -[HKSPAlarmConfiguration initFromObject:]
  -[HKSPAlarmConfiguration _migrateForCoder:]
  -[HKSPAlarmConfiguration succinctDescriptionBuilder]
  -[HKSPAlarmConfiguration encodeWithCoder:]
  -[HKSPAlarmConfiguration _buildForEquivalenceTo:builder:]
  -[HKSPAlarmConfiguration isEnabled]
  -[HKSPAlarmConfiguration succinctDescription]
  -[HKSPAlarmConfiguration _equateTo:builderBuilderBlock:]
  -[HKSPAlarmConfiguration mutableCopy]
  -[HKSPAlarmConfiguration soundVolume]
  -[HKSPAlarmConfiguration isEqual:]
  -[HKSPAlarmConfiguration toneIdentifier]
  -[HKSPAlarmConfiguration version]
  -[HKSPAlarmConfiguration significantChanges]
  -[HKSPAlarmConfiguration mutableCopyWithZone:]
  -[HKSPAlarmConfiguration descriptionWithMultilinePrefix:]
  -[HKSPAlarmConfiguration copyFromObject:]
  -[HKSPAlarmConfiguration initWithCoder:]
  -[HKSPAlarmConfiguration descriptionBuilderWithMultilinePrefix:]


HKSPMutableAlarmConfiguration : HKSPAlarmConfiguration <HKSPMutableObject>
 @property  BOOL enabled
 @property  BOOL allowsSnooze
 @property  NSString *toneIdentifier
 @property  NSString *vibrationIdentifier
 @property  NSNumber *soundVolume
 @property  NSDate *lastModifiedDate
 @property  HKSPChangeSet *changeSet
 @property  unsigned long version
 @property  NSSet *significantChanges
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKSPMutableAlarmConfiguration supportsSecureCoding]

  // instance methods
  -[HKSPMutableAlarmConfiguration changeSet]
  -[HKSPMutableAlarmConfiguration copyWithZone:]
  -[HKSPMutableAlarmConfiguration freeze]
  -[HKSPMutableAlarmConfiguration init]
  -[HKSPMutableAlarmConfiguration allowsSnooze]
  -[HKSPMutableAlarmConfiguration setAllowsSnooze:]
  -[HKSPMutableAlarmConfiguration vibrationIdentifier]
  -[HKSPMutableAlarmConfiguration playOptions]
  -[HKSPMutableAlarmConfiguration .cxx_destruct]
  -[HKSPMutableAlarmConfiguration encodeWithCoder:]
  -[HKSPMutableAlarmConfiguration setToneIdentifier:]
  -[HKSPMutableAlarmConfiguration isEnabled]
  -[HKSPMutableAlarmConfiguration setPlayOptions:]
  -[HKSPMutableAlarmConfiguration mutableCopy]
  -[HKSPMutableAlarmConfiguration soundVolume]
  -[HKSPMutableAlarmConfiguration toneIdentifier]
  -[HKSPMutableAlarmConfiguration setEnabled:]
  -[HKSPMutableAlarmConfiguration initWithTemplateAlarmConfiguration:]
  -[HKSPMutableAlarmConfiguration initWithCoder:]
  -[HKSPMutableAlarmConfiguration setVibrationIdentifier:]
  -[HKSPMutableAlarmConfiguration setSoundVolume:]


HKSPSleepEventRecord : NSObject /usr/lib/libSystem.B.dylib <BSDescriptionProviding, HKSPObject, HKSPDictionarySerializable, NAEquatable, NAHashable, NSMutableCopying>
 @property  long long sleepCoachingOnboardingCompletedVersion
 @property  NSDate *sleepCoachingOnboardingFirstCompletedDate
 @property  long long sleepTrackingOnboardingCompletedVersion
 @property  NSDate *sleepTrackingOnboardingFirstCompletedDate
 @property  long long sleepWindDownShortcutsOnboardingCompletedVersion
 @property  NSDate *sleepWindDownShortcutsOnboardingFirstCompletedDate
 @property  BOOL currentSleepCoachingOnboardingCompleted
 @property  BOOL currentSleepTrackingOnboardingCompleted
 @property  BOOL currentSleepWindDownShortcutsOnboardingCompleted
 @property  BOOL anySleepTrackingOnboardingCompleted
 @property  BOOL anySleepCoachingOnboardingCompleted
 @property  BOOL anySleepWindDownShortcutsOnboardingCompleted
 @property  NSDate *bedtimeDelayedUntilDate
 @property  NSDate *bedtimeSkippedDate
 @property  NSDate *wakeUpEarlyNotificationConfirmedDate
 @property  NSDate *wakeUpConfirmedUntilDate
 @property  NSDate *wakeUpAlarmDismissedDate
 @property  NSDate *wakeUpAlarmSnoozedUntilDate
 @property  NSDate *windDownSkippedDate
 @property  NSDate *goodMorningDismissedDate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long version
 @property  NSDate *lastModifiedDate
 @property  NSSet *significantChanges

  // class methods
  +[HKSPSleepEventRecord testSleepEventRecord]
  +[HKSPSleepEventRecord supportsSecureCoding]
  +[HKSPSleepEventRecord testSleepEventRecordWithAllPropertiesSet]

  // instance methods
  -[HKSPSleepEventRecord copyWithZone:]
  -[HKSPSleepEventRecord bedtimeSkippedDate]
  -[HKSPSleepEventRecord wakeUpAlarmDismissedDate]
  -[HKSPSleepEventRecord sleepCoachingOnboardingCompletedVersion]
  -[HKSPSleepEventRecord sleepWindDownShortcutsOnboardingFirstCompletedDate]
  -[HKSPSleepEventRecord init]
  -[HKSPSleepEventRecord wakeUpAlarmSnoozedUntilDate]
  -[HKSPSleepEventRecord goodMorningDismissedDate]
  -[HKSPSleepEventRecord sleepTrackingOnboardingFirstCompletedDate]
  -[HKSPSleepEventRecord windDownSkippedDate]
  -[HKSPSleepEventRecord isEquivalentTo:]
  -[HKSPSleepEventRecord _needsMigrationForCoder:]
  -[HKSPSleepEventRecord wakeUpConfirmedUntilDate]
  -[HKSPSleepEventRecord .cxx_destruct]
  -[HKSPSleepEventRecord isAnySleepWindDownShortcutsOnboardingCompleted]
  -[HKSPSleepEventRecord initFromObject:]
  -[HKSPSleepEventRecord bedtimeDelayedUntilDate]
  -[HKSPSleepEventRecord _migrateForCoder:]
  -[HKSPSleepEventRecord succinctDescriptionBuilder]
  -[HKSPSleepEventRecord encodeWithCoder:]
  -[HKSPSleepEventRecord _buildForEquivalenceTo:builder:]
  -[HKSPSleepEventRecord isAnySleepTrackingOnboardingCompleted]
  -[HKSPSleepEventRecord sleepCoachingOnboardingFirstCompletedDate]
  -[HKSPSleepEventRecord succinctDescription]
  -[HKSPSleepEventRecord _equateTo:builderBuilderBlock:]
  -[HKSPSleepEventRecord mutableCopy]
  -[HKSPSleepEventRecord isCurrentSleepCoachingOnboardingCompleted]
  -[HKSPSleepEventRecord isAnySleepCoachingOnboardingCompleted]
  -[HKSPSleepEventRecord lastModifiedDate]
  -[HKSPSleepEventRecord sleepTrackingOnboardingCompletedVersion]
  -[HKSPSleepEventRecord isEqual:]
  -[HKSPSleepEventRecord version]
  -[HKSPSleepEventRecord sleepWindDownShortcutsOnboardingCompletedVersion]
  -[HKSPSleepEventRecord wakeUpEarlyNotificationConfirmedDate]
  -[HKSPSleepEventRecord mutableCopyWithZone:]
  -[HKSPSleepEventRecord isCurrentSleepTrackingOnboardingCompleted]
  -[HKSPSleepEventRecord descriptionWithMultilinePrefix:]
  -[HKSPSleepEventRecord copyFromObject:]
  -[HKSPSleepEventRecord isCurrentSleepWindDownShortcutsOnboardingCompleted]
  -[HKSPSleepEventRecord initWithCoder:]
  -[HKSPSleepEventRecord descriptionBuilderWithMultilinePrefix:]


HKSPMutableSleepEventRecord : HKSPSleepEventRecord <HKSPMutableObject>
 @property  NSDate *bedtimeDelayedUntilDate
 @property  NSDate *bedtimeSkippedDate
 @property  NSDate *wakeUpEarlyNotificationConfirmedDate
 @property  NSDate *wakeUpConfirmedUntilDate
 @property  NSDate *wakeUpAlarmDismissedDate
 @property  NSDate *wakeUpAlarmSnoozedUntilDate
 @property  NSDate *windDownSkippedDate
 @property  NSDate *goodMorningDismissedDate
 @property  long long sleepCoachingOnboardingCompletedVersion
 @property  NSDate *sleepCoachingOnboardingFirstCompletedDate
 @property  long long sleepTrackingOnboardingCompletedVersion
 @property  NSDate *sleepTrackingOnboardingFirstCompletedDate
 @property  long long sleepWindDownShortcutsOnboardingCompletedVersion
 @property  NSDate *sleepWindDownShortcutsOnboardingFirstCompletedDate
 @property  NSDate *lastModifiedDate
 @property  HKSPChangeSet *changeSet
 @property  unsigned long version
 @property  NSSet *significantChanges
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKSPMutableSleepEventRecord supportsSecureCoding]

  // instance methods
  -[HKSPMutableSleepEventRecord changeSet]
  -[HKSPMutableSleepEventRecord copyWithZone:]
  -[HKSPMutableSleepEventRecord freeze]
  -[HKSPMutableSleepEventRecord setBedtimeDelayedUntilDate:]
  -[HKSPMutableSleepEventRecord bedtimeSkippedDate]
  -[HKSPMutableSleepEventRecord wakeUpAlarmDismissedDate]
  -[HKSPMutableSleepEventRecord sleepCoachingOnboardingCompletedVersion]
  -[HKSPMutableSleepEventRecord sleepWindDownShortcutsOnboardingFirstCompletedDate]
  -[HKSPMutableSleepEventRecord init]
  -[HKSPMutableSleepEventRecord updateSleepCoachingOnboardingCompletedVersion:completedDate:]
  -[HKSPMutableSleepEventRecord wakeUpAlarmSnoozedUntilDate]
  -[HKSPMutableSleepEventRecord goodMorningDismissedDate]
  -[HKSPMutableSleepEventRecord setSleepCoachingOnboardingFirstCompletedDate:]
  -[HKSPMutableSleepEventRecord setLastModifiedDate:]
  -[HKSPMutableSleepEventRecord setWindDownSkippedDate:]
  -[HKSPMutableSleepEventRecord sleepTrackingOnboardingFirstCompletedDate]
  -[HKSPMutableSleepEventRecord windDownSkippedDate]
  -[HKSPMutableSleepEventRecord wakeUpConfirmedUntilDate]
  -[HKSPMutableSleepEventRecord .cxx_destruct]
  -[HKSPMutableSleepEventRecord bedtimeDelayedUntilDate]
  -[HKSPMutableSleepEventRecord setSleepWindDownShortcutsOnboardingCompletedVersion:]
  -[HKSPMutableSleepEventRecord encodeWithCoder:]
  -[HKSPMutableSleepEventRecord setSleepTrackingOnboardingFirstCompletedDate:]
  -[HKSPMutableSleepEventRecord setSleepCoachingOnboardingCompletedVersion:]
  -[HKSPMutableSleepEventRecord sleepCoachingOnboardingFirstCompletedDate]
  -[HKSPMutableSleepEventRecord mutableCopy]
  -[HKSPMutableSleepEventRecord setWakeUpAlarmSnoozedUntilDate:]
  -[HKSPMutableSleepEventRecord lastModifiedDate]
  -[HKSPMutableSleepEventRecord sleepTrackingOnboardingCompletedVersion]
  -[HKSPMutableSleepEventRecord setSleepWindDownShortcutsOnboardingFirstCompletedDate:]
  -[HKSPMutableSleepEventRecord setWakeUpEarlyNotificationConfirmedDate:]
  -[HKSPMutableSleepEventRecord setSleepTrackingOnboardingCompletedVersion:]
  -[HKSPMutableSleepEventRecord setWakeUpAlarmDismissedDate:]
  -[HKSPMutableSleepEventRecord updateSleepTrackingOnboardingCompletedVersion:completedDate:]
  -[HKSPMutableSleepEventRecord sleepWindDownShortcutsOnboardingCompletedVersion]
  -[HKSPMutableSleepEventRecord setWakeUpConfirmedUntilDate:]
  -[HKSPMutableSleepEventRecord wakeUpEarlyNotificationConfirmedDate]
  -[HKSPMutableSleepEventRecord setBedtimeSkippedDate:]
  -[HKSPMutableSleepEventRecord setGoodMorningDismissedDate:]
  -[HKSPMutableSleepEventRecord updateSleepWindDownShortcutsOnboardingCompletedVersion:completedDate:]
  -[HKSPMutableSleepEventRecord initWithCoder:]


HKSPPropertyModification : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *propertyName
 @property  BOOL modified
 @property  @? performBlock

  // class methods
  +[HKSPPropertyModification modificationWithPropertyName:modified:performBlock:]

  // instance methods
  -[HKSPPropertyModification propertyName]
  -[HKSPPropertyModification .cxx_destruct]
  -[HKSPPropertyModification modified]
  -[HKSPPropertyModification performBlock]


HKSPXPCConnectionProvider : NSObject /usr/lib/libSystem.B.dylib <BSDescriptionProviding>
 @property  {os_unfair_lock_s=I} connectionLock
 @property  HKSPXPCConnectionInfo *connectionInfo
 @property  @? connectionProvider
 @property  NSXPCConnection *connection
 @property  {os_unfair_lock_s=I} pendingMessagesLock
 @property  NSMutableDictionary *pendingMessages
 @property  <HKSPXPCConnectionProviderDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKSPXPCConnectionProvider providerWithConnectionInfo:]

  // instance methods
  -[HKSPXPCConnectionProvider connectionLock]
  -[HKSPXPCConnectionProvider sendMessage:]
  -[HKSPXPCConnectionProvider _didInterruptConnection]
  -[HKSPXPCConnectionProvider connectionInfo]
  -[HKSPXPCConnectionProvider initWithConnectionInfo:]
  -[HKSPXPCConnectionProvider dealloc]
  -[HKSPXPCConnectionProvider .cxx_destruct]
  -[HKSPXPCConnectionProvider _didInvalidateConnection]
  -[HKSPXPCConnectionProvider succinctDescriptionBuilder]
  -[HKSPXPCConnectionProvider pendingMessagesLock]
  -[HKSPXPCConnectionProvider connectionProvider]
  -[HKSPXPCConnectionProvider _removePendingMessage:]
  -[HKSPXPCConnectionProvider succinctDescription]
  -[HKSPXPCConnectionProvider _retryPendingMessages]
  -[HKSPXPCConnectionProvider performRemoteBlock:withErrorHandler:doSynchronously:]
  -[HKSPXPCConnectionProvider didReceiveLifecycleNotification]
  -[HKSPXPCConnectionProvider _addPendingMessage:]
  -[HKSPXPCConnectionProvider initWithConnectionInfo:connectionProvider:]
  -[HKSPXPCConnectionProvider setDelegate:]
  -[HKSPXPCConnectionProvider performRemoteBlock:withErrorHandler:]
  -[HKSPXPCConnectionProvider connection]
  -[HKSPXPCConnectionProvider invalidate]
  -[HKSPXPCConnectionProvider delegate]
  -[HKSPXPCConnectionProvider descriptionWithMultilinePrefix:]
  -[HKSPXPCConnectionProvider _withLock:]
  -[HKSPXPCConnectionProvider descriptionBuilderWithMultilinePrefix:]
  -[HKSPXPCConnectionProvider pendingMessages]


HKSPSleepEventTimelineBuilder : NSObject /usr/lib/libSystem.B.dylib
 @property  HKSPSleepEventTimelineResults *results
 @property  HKSPSleepScheduleModel *sleepScheduleModel
 @property  NSDate *date
 @property  NSCalendar *calendar
 @property  unsigned long options

  // class methods
  +[HKSPSleepEventTimelineBuilder builderWithSleepScheduleModel:date:]

  // instance methods
  -[HKSPSleepEventTimelineBuilder sleepScheduleModel]
  -[HKSPSleepEventTimelineBuilder results]
  -[HKSPSleepEventTimelineBuilder _adjustSessionForSnoozedWakeUpAlarm]
  -[HKSPSleepEventTimelineBuilder _validateSessionAdjustmentForSnoozedWakeUpAlarm]
  -[HKSPSleepEventTimelineBuilder _validateSessionAdjustments]
  -[HKSPSleepEventTimelineBuilder .cxx_destruct]
  -[HKSPSleepEventTimelineBuilder date]
  -[HKSPSleepEventTimelineBuilder options]
  -[HKSPSleepEventTimelineBuilder calendar]
  -[HKSPSleepEventTimelineBuilder _gatherSessions]
  -[HKSPSleepEventTimelineBuilder initWithSleepScheduleModel:date:]
  -[HKSPSleepEventTimelineBuilder _gatherSessionsForValidationForOccurrence:overrideOccurrence:]
  -[HKSPSleepEventTimelineBuilder _adjustSessionForDismissedWakeUpAlarm]
  -[HKSPSleepEventTimelineBuilder _adjustSessionForSkippedBedtime]
  -[HKSPSleepEventTimelineBuilder _adjustSessionForDelayedBedtime]
  -[HKSPSleepEventTimelineBuilder _windDownDateForBedtimeDate:]
  -[HKSPSleepEventTimelineBuilder _adjustSessionForSkippedWindDown]
  -[HKSPSleepEventTimelineBuilder buildTimelineWithOptions:]
  -[HKSPSleepEventTimelineBuilder _adjustSessionForConfirmedWakeUp]
  -[HKSPSleepEventTimelineBuilder _adjustSessions]
  -[HKSPSleepEventTimelineBuilder _addSessionToTimelineWithWakeUpDate:bedtimeDate:windDownDate:occurrence:]
  -[HKSPSleepEventTimelineBuilder _gatherSessionsForOccurrence:overrideOccurrence:]


HKSPSleepEventTimelineResults : NSObject /usr/lib/libSystem.B.dylib
 @property  HKSPSleepEventTimeline *timeline
 @property  HKSPSleepEventTimeline *unadjustedTimeline
 @property  BOOL sleepScheduleInvalid
 @property  BOOL snoozeFireDateNeedsReset
 @property  HKSPSleepSchedule *originalSleepSchedule
 @property  HKSPMutableSleepSchedule *mutableValidSleepSchedule
 @property  HKSPSleepSchedule *validSleepSchedule

  // instance methods
  -[HKSPSleepEventTimelineResults .cxx_destruct]
  -[HKSPSleepEventTimelineResults setSleepScheduleInvalid:]
  -[HKSPSleepEventTimelineResults setUnadjustedTimeline:]
  -[HKSPSleepEventTimelineResults setOriginalSleepSchedule:]
  -[HKSPSleepEventTimelineResults setSnoozeFireDateNeedsReset:]
  -[HKSPSleepEventTimelineResults setTimeline:]
  -[HKSPSleepEventTimelineResults validSleepSchedule]
  -[HKSPSleepEventTimelineResults unadjustedTimeline]
  -[HKSPSleepEventTimelineResults snoozeFireDateNeedsReset]
  -[HKSPSleepEventTimelineResults originalSleepSchedule]
  -[HKSPSleepEventTimelineResults sleepScheduleInvalid]
  -[HKSPSleepEventTimelineResults setMutableValidSleepSchedule:]
  -[HKSPSleepEventTimelineResults mutableValidSleepSchedule]
  -[HKSPSleepEventTimelineResults timeline]


HKSPXPCConnectionInfo : NSObject /usr/lib/libSystem.B.dylib <BSDescriptionProviding>
 @property  NSString *machServiceName
 @property  NSXPCInterface *remoteObjectInterface
 @property  id exportedObject
 @property  NSXPCInterface *exportedObjectInterface
 @property  NSString *lifecycleNotification
 @property  NSString *requiredEntitlement
 @property  unsigned long options
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKSPXPCConnectionInfo infoForMachServiceName:remoteObjectInterface:exportedObject:exportedObjectInterface:lifecycleNotification:requiredEntitlement:options:]

  // instance methods
  -[HKSPXPCConnectionInfo lifecycleNotification]
  -[HKSPXPCConnectionInfo initWithMachServiceName:remoteObjectInterface:exportedObject:exportedObjectInterface:lifecycleNotification:requiredEntitlement:options:]
  -[HKSPXPCConnectionInfo requiredEntitlement]
  -[HKSPXPCConnectionInfo .cxx_destruct]
  -[HKSPXPCConnectionInfo options]
  -[HKSPXPCConnectionInfo remoteObjectInterface]
  -[HKSPXPCConnectionInfo succinctDescriptionBuilder]
  -[HKSPXPCConnectionInfo exportedObjectInterface]
  -[HKSPXPCConnectionInfo exportedObject]
  -[HKSPXPCConnectionInfo succinctDescription]
  -[HKSPXPCConnectionInfo machServiceName]
  -[HKSPXPCConnectionInfo descriptionWithMultilinePrefix:]
  -[HKSPXPCConnectionInfo descriptionBuilderWithMultilinePrefix:]


HKSPAnalyticsOnboardingEvent : NSObject /usr/lib/libSystem.B.dylib <HKSPAnalyticsEvent>
 @property  NSString *eventName
 @property  NSDictionary *eventPayload
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKSPAnalyticsOnboardingEvent _payloadValueForOnboardingStep:]
  +[HKSPAnalyticsOnboardingEvent _payloadValueForOnboardingEntryPoint:]
  +[HKSPAnalyticsOnboardingEvent _payloadValueForOnboardingAction:atStep:]

  // instance methods
  -[HKSPAnalyticsOnboardingEvent setEventName:]
  -[HKSPAnalyticsOnboardingEvent eventName]
  -[HKSPAnalyticsOnboardingEvent _initWithOnboardingStep:entryPoint:action:launchContext:]
  -[HKSPAnalyticsOnboardingEvent initWithOnboardingEntryPoint:launchSource:]
  -[HKSPAnalyticsOnboardingEvent initWithOnboardingStep:entryPoint:action:]
  -[HKSPAnalyticsOnboardingEvent eventPayload]
  -[HKSPAnalyticsOnboardingEvent .cxx_destruct]
  -[HKSPAnalyticsOnboardingEvent setEventPayload:]


HKSPHealthStoreProvider : NSObject /usr/lib/libSystem.B.dylib
 @property  HKSleepHealthStore *sleepHealthStore
 @property  HKHealthStore *healthStore

  // class methods
  +[HKSPHealthStoreProvider _initializedLocalDeviceHealthStore]

  // instance methods
  -[HKSPHealthStoreProvider healthStore]
  -[HKSPHealthStoreProvider initWithSleepHealthStore:healthStore:]
  -[HKSPHealthStoreProvider initWithLocalDeviceHealthStore]
  -[HKSPHealthStoreProvider .cxx_destruct]
  -[HKSPHealthStoreProvider sleepHealthStore]


HKSPSleepScheduleDayOccurrence : NSObject /usr/lib/libSystem.B.dylib <HKSPObject, HKSPDictionarySerializable, NAEquatable, NAHashable>
 @property  NSDateComponents *bedtimeComponents
 @property  NSDateComponents *wakeUpComponents
 @property  HKSPAlarmConfiguration *alarmConfiguration
 @property  NSString *groupingIdentifier
 @property  unsigned long version
 @property  NSDate *lastModifiedDate
 @property  NSSet *significantChanges
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKSPSleepScheduleDayOccurrence supportsSecureCoding]
  +[HKSPSleepScheduleDayOccurrence testSleepScheduleDayOccurrenceWithAllPropertiesSet]
  +[HKSPSleepScheduleDayOccurrence testSleepScheduleDayOccurrence]
  +[HKSPSleepScheduleDayOccurrence testSleepScheduleDayOccurrenceWithAlarmConfiguration:]
  +[HKSPSleepScheduleDayOccurrence testOverrideSleepScheduleDayOccurrence]

  // instance methods
  -[HKSPSleepScheduleDayOccurrence copyWithZone:]
  -[HKSPSleepScheduleDayOccurrence _decodeComponentsForPersistenceWithCoder:key:]
  -[HKSPSleepScheduleDayOccurrence _encodeComponentsForPersistence:coder:key:]
  -[HKSPSleepScheduleDayOccurrence init]
  -[HKSPSleepScheduleDayOccurrence isEquivalentTo:]
  -[HKSPSleepScheduleDayOccurrence .cxx_destruct]
  -[HKSPSleepScheduleDayOccurrence initFromObject:]
  -[HKSPSleepScheduleDayOccurrence succinctDescriptionBuilder]
  -[HKSPSleepScheduleDayOccurrence encodeWithCoder:]
  -[HKSPSleepScheduleDayOccurrence succinctDescription]
  -[HKSPSleepScheduleDayOccurrence _equateTo:builderBuilderBlock:]
  -[HKSPSleepScheduleDayOccurrence mutableCopy]
  -[HKSPSleepScheduleDayOccurrence isEqual:]
  -[HKSPSleepScheduleDayOccurrence version]
  -[HKSPSleepScheduleDayOccurrence alarmConfiguration]
  -[HKSPSleepScheduleDayOccurrence significantChanges]
  -[HKSPSleepScheduleDayOccurrence groupingIdentifier]
  -[HKSPSleepScheduleDayOccurrence bedtimeComponents]
  -[HKSPSleepScheduleDayOccurrence mutableCopyWithZone:]
  -[HKSPSleepScheduleDayOccurrence wakeUpComponents]
  -[HKSPSleepScheduleDayOccurrence isEquivalentToOccurrenceIgnoringDates:]
  -[HKSPSleepScheduleDayOccurrence isAlarmEquivalentToOccurrenceIgnoringDates:]
  -[HKSPSleepScheduleDayOccurrence descriptionWithMultilinePrefix:]
  -[HKSPSleepScheduleDayOccurrence generateSleepScheduleOccurrenceWithWeekdays:]
  -[HKSPSleepScheduleDayOccurrence copyFromObject:]
  -[HKSPSleepScheduleDayOccurrence initWithCoder:]
  -[HKSPSleepScheduleDayOccurrence descriptionBuilderWithMultilinePrefix:]


HKSPMutableSleepScheduleDayOccurrence : HKSPSleepScheduleDayOccurrence <HKSPMutableObject>
 @property  NSDateComponents *bedtimeComponents
 @property  NSDateComponents *wakeUpComponents
 @property  HKSPAlarmConfiguration *alarmConfiguration
 @property  NSDate *lastModifiedDate
 @property  HKSPChangeSet *changeSet
 @property  unsigned long version
 @property  NSSet *significantChanges
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HKSPMutableSleepScheduleDayOccurrence supportsSecureCoding]

  // instance methods
  -[HKSPMutableSleepScheduleDayOccurrence changeSet]
  -[HKSPMutableSleepScheduleDayOccurrence copyWithZone:]
  -[HKSPMutableSleepScheduleDayOccurrence freeze]
  -[HKSPMutableSleepScheduleDayOccurrence testTurnOnAlarm]
  -[HKSPMutableSleepScheduleDayOccurrence testTurnOffAlarm]
  -[HKSPMutableSleepScheduleDayOccurrence init]
  -[HKSPMutableSleepScheduleDayOccurrence .cxx_destruct]
  -[HKSPMutableSleepScheduleDayOccurrence encodeWithCoder:]
  -[HKSPMutableSleepScheduleDayOccurrence mutableCopy]
  -[HKSPMutableSleepScheduleDayOccurrence alarmConfiguration]
  -[HKSPMutableSleepScheduleDayOccurrence bedtimeComponents]
  -[HKSPMutableSleepScheduleDayOccurrence setBedtimeComponents:]
  -[HKSPMutableSleepScheduleDayOccurrence setWakeUpComponents:]
  -[HKSPMutableSleepScheduleDayOccurrence wakeUpComponents]
  -[HKSPMutableSleepScheduleDayOccurrence setAlarmConfiguration:]
  -[HKSPMutableSleepScheduleDayOccurrence generateSleepScheduleOccurrenceWithWeekdays:]
  -[HKSPMutableSleepScheduleDayOccurrence hasChangeAffectingScheduling]
  -[HKSPMutableSleepScheduleDayOccurrence initWithCoder:]


HKSPAgeMonitor : NSObject /usr/lib/libSystem.B.dylib
 @property  @? currentDateProvider
 @property  HKHealthStore *healthStore
 @property  HKSPObserverSet *observers
 @property  BOOL needUpdate
 @property  int characteristicUpdateToken
 @property  {os_unfair_lock_s=I} lock
 @property  NSNumber *age

  // instance methods
  -[HKSPAgeMonitor healthStore]
  -[HKSPAgeMonitor registerForNotifications]
  -[HKSPAgeMonitor currentDateProvider]
  -[HKSPAgeMonitor initWithCurrentDateProvider:healthStore:]
  -[HKSPAgeMonitor checkForAgeChange]
  -[HKSPAgeMonitor init]
  -[HKSPAgeMonitor characteristicUpdateToken]
  -[HKSPAgeMonitor setCharacteristicUpdateToken:]
  -[HKSPAgeMonitor age]
  -[HKSPAgeMonitor dealloc]
  -[HKSPAgeMonitor .cxx_destruct]
  -[HKSPAgeMonitor lock]
  -[HKSPAgeMonitor observers]
  -[HKSPAgeMonitor _lock_age]
  -[HKSPAgeMonitor unregisterForNotifications]
  -[HKSPAgeMonitor removeObserver:]
  -[HKSPAgeMonitor addObserver:]
  -[HKSPAgeMonitor needUpdate]
  -[HKSPAgeMonitor _withLock:]


HKSPMockUserDefaults : NSObject /usr/lib/libSystem.B.dylib <HKSPUserDefaults>
 @property  NSMutableDictionary *defaults
 @property  {os_unfair_lock_s=I} defaultsLock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HKSPMockUserDefaults defaults]
  -[HKSPMockUserDefaults setInteger:forKey:]
  -[HKSPMockUserDefaults setFloat:forKey:]
  -[HKSPMockUserDefaults setBool:forKey:]
  -[HKSPMockUserDefaults dataForKey:]
  -[HKSPMockUserDefaults init]
  -[HKSPMockUserDefaults defaultsLock]
  -[HKSPMockUserDefaults removeObjectForKey:]
  -[HKSPMockUserDefaults .cxx_destruct]
  -[HKSPMockUserDefaults setObject:forKey:]
  -[HKSPMockUserDefaults objectForKey:]
  -[HKSPMockUserDefaults floatForKey:]
  -[HKSPMockUserDefaults integerForKey:]
  -[HKSPMockUserDefaults boolForKey:]
  -[HKSPMockUserDefaults _withLock:]


(HKSPSleep)
	// class methods
	+[(HKSPSleep) _hksp_optionsForBackwards:]

	// instance methods
	-[(HKSPSleep) _hksp_nextDateAfterDate:matchingComponents:backwards:]
	-[(HKSPSleep) _hksp_nextDateHelperAfterDate:nextDateBlock:]
	-[(HKSPSleep) _hksp_nextDateAfterDate:matchingUnit:value:backwards:]
	-[(HKSPSleep) hksp_orderedSleepDays]
	-[(HKSPSleep) hksp_orderedSleepWeekdaysForWeekdays:]
	-[(HKSPSleep) hksp_localizedGroupingStringForWeekdays:]
	-[(HKSPSleep) hksp_dayPeriodForDate:locale:]
	-[(HKSPSleep) hksp_nextDateAfterDate:matchingComponents:]
	-[(HKSPSleep) hksp_previousDateBeforeDate:matchingComponents:]
	-[(HKSPSleep) hksp_nextDateAfterDate:matchingUnit:value:]
	-[(HKSPSleep) hksp_previousDateBeforeDate:matchingUnit:value:]
	-[(HKSPSleep) hksp_dateRequiresSingularTimeString:]
	-[(HKSPSleep) hksp_firstNonWeekendDay]
	-[(HKSPSleep) hksp_componentsByAddingTimeInterval:toComponents:]
	-[(HKSPSleep) hksp_timeIntervalFromComponents:toComponents:]

NSDateComponents(HKSPSleep)
	// class methods
	+[NSDateComponents(HKSPSleep) hkspTestDateComponentsWithHour:minute:]
	+[NSDateComponents(HKSPSleep) hkspTestWeekendDateComponentsWithHour:minute:]
	+[NSDateComponents(HKSPSleep) hkspTestDSTStartDateComponentsWithHour:minute:]
	+[NSDateComponents(HKSPSleep) hkspTestDSTEndDateComponentsWithHour:minute:]
	+[NSDateComponents(HKSPSleep) hkspTestDateComponentsWithHour:minute:month:day:year:]

	// instance methods
	-[NSDateComponents(HKSPSleep) hksp_description]
	-[NSDateComponents(HKSPSleep) hksp_compareHourAndMinuteComponents:]

(HKSPSleep)
	// class methods
	+[(HKSPSleep) hkspTestDateWithHour:minute:]
	+[(HKSPSleep) hkspTestUTCDateWithHour:minute:]
	+[(HKSPSleep) hkspTestWeekendDateWithHour:minute:]
	+[(HKSPSleep) hkspTestDSTStartDateWithHour:minute:]
	+[(HKSPSleep) hkspTestDSTEndDateWithHour:minute:]

	// instance methods
	-[(HKSPSleep) hksp_isAfterDate:]
	-[(HKSPSleep) hkspGreetingStringWithOptions:]
	-[(HKSPSleep) hkspDescription]
	-[(HKSPSleep) hksp_isBeforeDate:]
	-[(HKSPSleep) hksp_isBeforeOrSameAsDate:]
	-[(HKSPSleep) hksp_isAfterOrSameAsDate:]
	-[(HKSPSleep) hksp_dateNearestMatchingComponents:]
	-[(HKSPSleep) hkspAddDays:]

(HKSPSyncAnchor)
	// instance methods
	-[(HKSPSyncAnchor) hksp_increment]

(HKSPSleep)
	// instance methods
	-[(HKSPSleep) hksp_isIn24HourTime]

NAFuture(HKSPSleep)
	// class methods
	+[NAFuture(HKSPSleep) hksp_expiringFutureWithTimeout:]

	// instance methods
	-[NAFuture(HKSPSleep) hksp_boolErrorCompletionHandlerAdapter]

(HKSPSerialization)
	// instance methods
	-[(HKSPSerialization) hksp_serializedClassName]
	-[(HKSPSerialization) hksp_isSerialized]
	-[(HKSPSerialization) hksp_serializedProperties]
	-[(HKSPSerialization) hksp_serializedKey]

(HKSPProperty)
	// instance methods
	-[(HKSPProperty) hksp_valueForProperty:]
	-[(HKSPProperty) hksp_setValue:forProperty:]

NSCoder(HKSPSerialization)
	// instance methods
	-[NSCoder(HKSPSerialization) hksp_serializationOptions]

NAScheduler(HKSPSleep)
	// class methods
	+[NAScheduler(HKSPSleep) hkspMainThreadScheduler]

(HKSPSleep)
	// instance methods
	-[(HKSPSleep) hksp_shouldRetryMessage]

NSUserDefaults(HKSPSleep)
	// class methods
	+[NSUserDefaults(HKSPSleep) hksp_sleepdUserDefaults]
	+[NSUserDefaults(HKSPSleep) hksp_internalUserDefaults]
	+[NSUserDefaults(HKSPSleep) hksp_analyticsUserDefaults]

	// instance methods
	-[NSUserDefaults(HKSPSleep) hksp_setLockScreenBlockHomeGesture:]
	-[NSUserDefaults(HKSPSleep) hksp_setDebugSleepModeEnabled:]
	-[NSUserDefaults(HKSPSleep) hksp_debugSleepModeAlpha:]
	-[NSUserDefaults(HKSPSleep) hksp_setDebugSleepModeAlpha:]
	-[NSUserDefaults(HKSPSleep) hksp_lockScreenUnlockToHome]
	-[NSUserDefaults(HKSPSleep) hksp_setLockScreenUnlockToHome:]
	-[NSUserDefaults(HKSPSleep) hksp_lockScreenBlockHomeGesture]
	-[NSUserDefaults(HKSPSleep) hksp_debugSleepModeEnabled]

NSDateInterval(HKSPSleep)
	// instance methods
	-[NSDateInterval(HKSPSleep) hksp_containsDate:searchOptions:]
	-[NSDateInterval(HKSPSleep) hkspDescription]
	-[NSDateInterval(HKSPSleep) hksp_overlapsInterval:searchOptions:]
	-[NSDateInterval(HKSPSleep) hksp_overlapsInterval:]
	-[NSDateInterval(HKSPSleep) hksp_containsDate:]

01 00 0b00 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSDescriptionBuilder 
01 00 0b00 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSEqualsBuilder 
01 00 0b00 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSHashBuilder 
01 00 0200 /System/Library/Frameworks/HealthKit.framework/HealthKit: HKHealthStore 
01 00 0200 /System/Library/Frameworks/HealthKit.framework/HealthKit: HKObserverSet 
01 00 0200 /System/Library/Frameworks/HealthKit.framework/HealthKit: HKQuantity 
01 00 0200 /System/Library/Frameworks/HealthKit.framework/HealthKit: HKQuantitySample 
01 00 0200 /System/Library/Frameworks/HealthKit.framework/HealthKit: HKQuantityType 
01 00 0900 /System/Library/PrivateFrameworks/SleepHealth.framework/SleepHealth: HKSleepHealthStore 
01 00 0200 /System/Library/Frameworks/HealthKit.framework/HealthKit: HKSleepSchedule 
01 00 0400 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 0600 /System/Library/PrivateFrameworks/NetAppsUtilities.framework/NetAppsUtilities: NAFuture 
01 00 0600 /System/Library/PrivateFrameworks/NetAppsUtilities.framework/NetAppsUtilities: NAScheduler 
01 00 0300 /System/Library/PrivateFrameworks/NanoPreferencesSync.framework/NanoPreferencesSync: NPSManager 
01 00 0500 /System/Library/PrivateFrameworks/NanoRegistry.framework/NanoRegistry: NRPairedDeviceRegistry 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCoder 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDateComponents 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateInterval 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0d00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLQueryItem 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListener 
01 00 0200 /System/Library/Frameworks/HealthKit.framework/HealthKit: _HKBehavior 
