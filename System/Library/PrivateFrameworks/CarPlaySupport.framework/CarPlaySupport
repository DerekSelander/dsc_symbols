|| __DATA.__objc_data _OBJC_CLASS_$_CPSAbridgableLabel
|| __DATA.__objc_data _OBJC_CLASS_$_CPSAlertButton
|| __DATA.__objc_data _OBJC_CLASS_$_CPSAlternateRoutesView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSAnalytics
|| __DATA.__objc_data _OBJC_CLASS_$_CPSApplicationStateMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_CPSBannerItem
|| __DATA.__objc_data _OBJC_CLASS_$_CPSBannerSource
|| __DATA.__objc_data _OBJC_CLASS_$_CPSBannerSourceProxy
|| __DATA.__objc_data _OBJC_CLASS_$_CPSBannerSourceServiceSpecification
|| __DATA.__objc_data _OBJC_CLASS_$_CPSBannerView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSBarBackButtonItem
|| __DATA.__objc_data _OBJC_CLASS_$_CPSBarButton
|| __DATA.__objc_data _OBJC_CLASS_$_CPSBarButtonItem
|| __DATA.__objc_data _OBJC_CLASS_$_CPSBaseTemplateViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CPSButton
|| __DATA.__objc_data _OBJC_CLASS_$_CPSCardPlatterView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_CPSFullScreenAlertViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CPSGridButton
|| __DATA.__objc_data _OBJC_CLASS_$_CPSGridTemplateView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSGridTemplateViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CPSGuidanceBannerView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSHairlineBorderedView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSHairlineView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSHidingLabel
|| __DATA.__objc_data _OBJC_CLASS_$_CPSInheritedBackgroundColorView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSInvisibleButton
|| __DATA.__objc_data _OBJC_CLASS_$_CPSLabeledValueView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSLayoutHelperView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSListTemplateViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CPSManeuverView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSMapButton
|| __DATA.__objc_data _OBJC_CLASS_$_CPSMapTemplateViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CPSNavigationAlertButtonView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSNavigationAlertFocusButton
|| __DATA.__objc_data _OBJC_CLASS_$_CPSNavigationAlertProgressView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSNavigationAlertQueue
|| __DATA.__objc_data _OBJC_CLASS_$_CPSNavigationAlertView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSNavigationBar
|| __DATA.__objc_data _OBJC_CLASS_$_CPSNavigationCardView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSNavigationETAView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSNavigator
|| __DATA.__objc_data _OBJC_CLASS_$_CPSOverlayViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CPSPagingControlButton
|| __DATA.__objc_data _OBJC_CLASS_$_CPSPagingControlView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSPagingTripPreviewsCardView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSPanButton
|| __DATA.__objc_data _OBJC_CLASS_$_CPSPanView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSPanViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CPSPausedCardView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSPrimaryManeuverView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSRouteEstimatesView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSRouteOverviewView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSRoutePreviewsCardView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSRouteRowView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSSearchTemplateViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CPSSecondaryManeuverView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSSectionedDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_CPSTableCell
|| __DATA.__objc_data _OBJC_CLASS_$_CPSTableView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSTemplateBannerController
|| __DATA.__objc_data _OBJC_CLASS_$_CPSTemplateConnectionManager
|| __DATA.__objc_data _OBJC_CLASS_$_CPSTemplateInstance
|| __DATA.__objc_data _OBJC_CLASS_$_CPSTripPreviewsCardView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSUpcomingManeuversCardView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_CPSVoiceTemplateViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CPSVoiceView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSWindow
|| __DATA.__objc_data _OBJC_CLASS_$__CPSFocusHoldingButton
|| __DATA.__objc_data _OBJC_CLASS_$__CPSNudgeLongPressGestureRecognizer
|| __DATA.__objc_data _OBJC_CLASS_$__CPSNudgeTapGestureRecognizer
|| __DATA.__objc_data _OBJC_CLASS_$__CPSOverlayTouchBlockingView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSAbridgableLabel
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSAlertButton
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSAlternateRoutesView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSAnalytics
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSApplicationStateMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSBannerItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSBannerSource
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSBannerSourceProxy
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSBannerSourceServiceSpecification
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSBannerView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSBarBackButtonItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSBarButton
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSBarButtonItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSBaseTemplateViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSButton
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSCardPlatterView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSFullScreenAlertViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSGridButton
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSGridTemplateView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSGridTemplateViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSGuidanceBannerView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSHairlineBorderedView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSHairlineView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSHidingLabel
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSInheritedBackgroundColorView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSInvisibleButton
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSLabeledValueView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSLayoutHelperView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSListTemplateViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSManeuverView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSMapButton
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSMapTemplateViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSNavigationAlertButtonView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSNavigationAlertFocusButton
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSNavigationAlertProgressView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSNavigationAlertQueue
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSNavigationAlertView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSNavigationBar
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSNavigationCardView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSNavigationETAView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSNavigator
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSOverlayViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSPagingControlButton
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSPagingControlView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSPagingTripPreviewsCardView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSPanButton
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSPanView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSPanViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSPausedCardView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSPrimaryManeuverView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSRouteEstimatesView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSRouteOverviewView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSRoutePreviewsCardView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSRouteRowView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSSearchTemplateViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSSecondaryManeuverView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSSectionedDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSTableCell
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSTableView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSTemplateBannerController
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSTemplateConnectionManager
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSTemplateInstance
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSTripPreviewsCardView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSUpcomingManeuversCardView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSVoiceTemplateViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSVoiceView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSWindow
|| __DATA.__objc_data _OBJC_METACLASS_$__CPSFocusHoldingButton
|| __DATA.__objc_data _OBJC_METACLASS_$__CPSNudgeLongPressGestureRecognizer
|| __DATA.__objc_data _OBJC_METACLASS_$__CPSNudgeTapGestureRecognizer
|| __DATA.__objc_data _OBJC_METACLASS_$__CPSOverlayTouchBlockingView
|| __DATA.__objc_ivar _OBJC_IVAR_$_CPSGridTemplateView._gridButtons
|| __TEXT.__const _CPSNavigationAlertImageSize
|| __TEXT.__const _CPSNavigationAlertViewWidth
|| __TEXT.__const _CPSNavigationCardWidth
|| __TEXT.__const _CPSNavigationETAViewSize
|| __TEXT.__const _CarPlaySupportVersionNumber
|| __TEXT.__const _CarPlaySupportVersionString
|| __TEXT.__const _kCPSLongMinumumPressDuration
|| __TEXT.__const _kCPSPanButtonEdgeSpacing
|| __TEXT.__const _kGridButtonHeight
|| __TEXT.__const _kGridButtonImageHeight
|| __TEXT.__const _kGridButtonImageWidth
|| __TEXT.__const _kGridMaxDistanceBetweenButtons
|| __TEXT.__text _CPSFormattedDistanceSepartedShortUnit
|| __TEXT.__text _CPSFormattedDistanceWithMediumUnit
|| __TEXT.__text _CPSFrameworkBundle
|| __TEXT.__text _CPSIsInternalInstall
|| __TEXT.__text _CPSLocalizedStringForKey
|| __TEXT.__text _CPSNumberFormatterForDistance
|| __TEXT.__text _CPSPresentationRoundedDistance
|| __TEXT.__text _CPSSizeForAttributedText
|| __TEXT.__text _CPSSizeForText
|| __TEXT.__text _CarPlayFrameworkGeneralLogging
|| __TEXT.__text _CarPlaySupportGeneralLogging
|| __TEXT.__text __CPPanDirectionForPressType
|| __TEXT.__text __CPSUIPressesContainsPressTypes
|| __TEXT.__text __pressesContainsPressType
|| __TEXT.__text __touchesContainDirectTouch
|| __TEXT.__text __touchesContainIndirectTouch
__ BackBoardServices: _OBJC_CLASS_$_BKSHIDEventDeferringEnvironment
__ BackBoardServices: _OBJC_CLASS_$_BKSHIDEventDeliveryPolicyObserver
__ CarKit: _CARSessionNightModeChangedNotification
__ CarKit: _OBJC_CLASS_$_CARNavigationOwnershipManager
__ CarKit: _OBJC_CLASS_$_CARObserverHashTable
__ CarKit: _OBJC_CLASS_$_CARSessionStatus
__ CarPlay: _CPContrastingColorForColor
__ CarPlay: _CPGuidanceStyleForColor
__ CarPlay: _OBJC_CLASS_$_CPActionSheetTemplate
__ CarPlay: _OBJC_CLASS_$_CPAlertAction
__ CarPlay: _OBJC_CLASS_$_CPAlertTemplate
__ CarPlay: _OBJC_CLASS_$_CPBarButton
__ CarPlay: _OBJC_CLASS_$_CPEndpointListenerWrapper
__ CarPlay: _OBJC_CLASS_$_CPGridTemplate
__ CarPlay: _OBJC_CLASS_$_CPInterfaceController
__ CarPlay: _OBJC_CLASS_$_CPListItem
__ CarPlay: _OBJC_CLASS_$_CPListSection
__ CarPlay: _OBJC_CLASS_$_CPListTemplate
__ CarPlay: _OBJC_CLASS_$_CPMapTemplate
__ CarPlay: _OBJC_CLASS_$_CPSearchTemplate
__ CarPlay: _OBJC_CLASS_$_CPSessionConfiguration
__ CarPlay: _OBJC_CLASS_$_CPVoiceControlTemplate
__ CarPlay: _kCPGridTemplateMaximumItems
__ Contacts: _OBJC_CLASS_$_CNPostalAddressFormatter
__ CoreAnalytics: _AnalyticsSendEvent
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__
__ CoreGraphics: _CGBitmapContextCreate
__ CoreGraphics: _CGBitmapContextCreateImage
__ CoreGraphics: _CGContextDrawImage
__ CoreGraphics: _CGContextFillRect
__ CoreGraphics: _CGContextRelease
__ CoreGraphics: _CGContextSetFillColorWithColor
__ CoreGraphics: _CGContextSetInterpolationQuality
__ CoreGraphics: _CGImageGetBitmapInfo
__ CoreGraphics: _CGImageGetBitsPerComponent
__ CoreGraphics: _CGImageGetColorSpace
__ CoreGraphics: _CGImageRelease
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectIntegral
__ CoreGraphics: _CGRectOffset
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ Foundation: _NSClassFromString
__ Foundation: _NSSearchPathForDirectoriesInDomains
__ Foundation: _NSStringFromClass
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSDateComponentsFormatter
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSIndexSet
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSLayoutConstraint
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMeasurement
__ Foundation: _OBJC_CLASS_$_NSMeasurementFormatter
__ Foundation: _OBJC_CLASS_$_NSMutableAttributedString
__ Foundation: _OBJC_CLASS_$_NSMutableCharacterSet
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUnitLength
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCListener
__ Foundation: _OBJC_CLASS_$_NSXPCListenerEndpoint
__ FrontBoard: _BSDispatchQueueCreate
__ FrontBoard: _BSDispatchQueueCreateSerial
__ FrontBoard: _OBJC_CLASS_$_BSActionResponse
__ FrontBoard: _OBJC_CLASS_$_BSDispatchQueueAttributes
__ FrontBoard: _OBJC_CLASS_$_BSMutableSettings
__ FrontBoard: _OBJC_CLASS_$_BSObjCProtocol
__ FrontBoard: _OBJC_CLASS_$_BSServiceConnection
__ FrontBoard: _OBJC_CLASS_$_BSServiceConnectionEndpoint
__ FrontBoard: _OBJC_CLASS_$_BSServiceConnectionListener
__ FrontBoard: _OBJC_CLASS_$_BSServiceInterface
__ FrontBoard: _OBJC_CLASS_$_BSServiceQuality
__ GraphicsServices: _GSSystemRootDirectory
__ NetAppsUtilities: _OBJC_CLASS_$_NAFuture
__ QuartzCore: _OBJC_CLASS_$_CATransaction
__ QuartzCore: _kCACornerCurveContinuous
__ SpringBoardUI: _OBJC_CLASS_$_SBUIBannerItem
__ SpringBoardUI: _OBJC_CLASS_$_SBUIBannerTargetManager
__ SpringBoardUI: _OBJC_CLASS_$_SBUIStarkBannerViewButton
__ SpringBoardUI: _OBJC_METACLASS_$_SBUIBannerItem
__ SpringBoardUI: _SBUIGetUserAgent
__ UIKit: _NSAttachmentAttributeName
__ UIKit: _NSFontAttributeName
__ UIKit: _NSForegroundColorAttributeName
__ UIKit: _NSParagraphStyleAttributeName
__ UIKit: _OBJC_CLASS_$_NSMutableParagraphStyle
__ UIKit: _OBJC_CLASS_$_NSStringDrawingContext
__ UIKit: _OBJC_CLASS_$_NSTextAttachment
__ UIKit: _OBJC_CLASS_$_UIActivityIndicatorView
__ UIKit: _OBJC_CLASS_$_UIAlertAction
__ UIKit: _OBJC_CLASS_$_UIAlertController
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIBarButtonItem
__ UIKit: _OBJC_CLASS_$_UIButton
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIFocusContainerGuide
__ UIKit: _OBJC_CLASS_$_UIFocusGuide
__ UIKit: _OBJC_CLASS_$_UIFocusSystem
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIFontDescriptor
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageSymbolConfiguration
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UILabel
__ UIKit: _OBJC_CLASS_$_UILayoutGuide
__ UIKit: _OBJC_CLASS_$_UILongPressGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UINavigationBar
__ UIKit: _OBJC_CLASS_$_UINavigationController
__ UIKit: _OBJC_CLASS_$_UIPanGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UISearchContainerViewController
__ UIKit: _OBJC_CLASS_$_UISearchController
__ UIKit: _OBJC_CLASS_$_UIStackView
__ UIKit: _OBJC_CLASS_$_UITableView
__ UIKit: _OBJC_CLASS_$_UITableViewCell
__ UIKit: _OBJC_CLASS_$_UITableViewHeaderFooterView
__ UIKit: _OBJC_CLASS_$_UITapGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_CLASS_$_UIWindow
__ UIKit: _OBJC_CLASS_$__UIFocusLinearMovementSequence
__ UIKit: _OBJC_CLASS_$__UIFocusUpdateRequest
__ UIKit: _OBJC_METACLASS_$_UIBarButtonItem
__ UIKit: _OBJC_METACLASS_$_UIButton
__ UIKit: _OBJC_METACLASS_$_UILabel
__ UIKit: _OBJC_METACLASS_$_UILongPressGestureRecognizer
__ UIKit: _OBJC_METACLASS_$_UINavigationBar
__ UIKit: _OBJC_METACLASS_$_UINavigationController
__ UIKit: _OBJC_METACLASS_$_UISearchContainerViewController
__ UIKit: _OBJC_METACLASS_$_UITableView
__ UIKit: _OBJC_METACLASS_$_UITableViewCell
__ UIKit: _OBJC_METACLASS_$_UITapGestureRecognizer
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _OBJC_METACLASS_$_UIWindow
__ UIKit: _UIEdgeInsetsZero
__ UIKit: _UIFontTextStyleCallout
__ UIKit: _UIFontTextStyleCaption1
__ UIKit: _UIFontTextStyleTitle2
__ UIKit: _UIFontWeightBold
__ UIKit: _UIFontWeightRegular
__ UIKit: _UIFontWeightSemibold
__ UIKit: _UIGraphicsBeginImageContext
__ UIKit: _UIGraphicsEndImageContext
__ UIKit: _UIGraphicsGetCurrentContext
__ UIKit: _UIGraphicsGetImageFromCurrentImageContext
__ UIKit: _UINavigationControllerHideShowBarDuration
__ UIKit: _UIRoundToScale
__ UIKit: _UIRoundToViewScale
__ UIKit: _UISceneDidEnterBackgroundNotification
__ UIKit: _UISceneWillEnterForegroundNotification
__ UIKit: _UITableViewAutomaticDimension
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
CPSGridButton : CPSButton
 @property  CPSAbridgableLabel *customTitleLabel
 @property  UIView *focusView
 @property  CPGridButton *gridButton
 @property  <CPTemplateDelegate> *templateDelegate

  // class methods
  +[CPSGridButton buttonWithGridButton:templateDelegate:]

  // instance methods
  -[CPSGridButton setEnabled:]
  -[CPSGridButton .cxx_destruct]
  -[CPSGridButton traitCollectionDidChange:]
  -[CPSGridButton didUpdateFocusInContext:withAnimationCoordinator:]
  -[CPSGridButton layoutSubviews]
  -[CPSGridButton pressesBegan:withEvent:]
  -[CPSGridButton pressesEnded:withEvent:]
  -[CPSGridButton pressesCancelled:withEvent:]
  -[CPSGridButton _updateLabelColor]
  -[CPSGridButton focusView]
  -[CPSGridButton setFocusView:]
  -[CPSGridButton customTitleLabel]
  -[CPSGridButton setCustomTitleLabel:]
  -[CPSGridButton templateDelegate]
  -[CPSGridButton setTemplateDelegate:]
  -[CPSGridButton setGridButton:]
  -[CPSGridButton gridButton]
  -[CPSGridButton preferredLabelWidth]


CPSTableCell : UITableViewCell /System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices
  // class methods
  +[CPSTableCell identifier]
  +[CPSTableCell cellStyle]
  +[CPSTableCell cellForTableView:]

  // instance methods
  -[CPSTableCell configureCell]


CPSButton : UIButton /System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices <CPSControl>
 @property  UITapGestureRecognizer *pressTapRecognizer
 @property  UITapGestureRecognizer *touchTapRecognizer
 @property  NSUUID *identifier
 @property  <CPSButtonDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL enabled

  // class methods
  +[CPSButton buttonWithType:]

  // instance methods
  -[CPSButton setEnabled:]
  -[CPSButton delegate]
  -[CPSButton setDelegate:]
  -[CPSButton .cxx_destruct]
  -[CPSButton identifier]
  -[CPSButton setIdentifier:]
  -[CPSButton traitCollectionDidChange:]
  -[CPSButton didMoveToWindow]
  -[CPSButton _addGestureRecognizers]
  -[CPSButton _buttonPressed:]
  -[CPSButton _buttonTapped:]
  -[CPSButton setPressTapRecognizer:]
  -[CPSButton pressTapRecognizer]
  -[CPSButton setTouchTapRecognizer:]
  -[CPSButton touchTapRecognizer]
  -[CPSButton _buttonSelected:interactionModel:]


CPSVoiceTemplateViewController : CPSBaseTemplateViewController <CPVoiceTemplateProviding>
 @property  CPSVoiceView *titleView
 @property  UITapGestureRecognizer *backGestureRecognizer
 @property  double lastVoiceTemplateStateChangeTime
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSVoiceTemplateViewController .cxx_destruct]
  -[CPSVoiceTemplateViewController viewWillAppear:]
  -[CPSVoiceTemplateViewController viewWillDisappear:]
  -[CPSVoiceTemplateViewController viewDidAppear:]
  -[CPSVoiceTemplateViewController titleView]
  -[CPSVoiceTemplateViewController setTitleView:]
  -[CPSVoiceTemplateViewController _activateStateWithIdentifier:]
  -[CPSVoiceTemplateViewController _viewDidLoad]
  -[CPSVoiceTemplateViewController voiceTemplate]
  -[CPSVoiceTemplateViewController _backGestureFired:]
  -[CPSVoiceTemplateViewController setBackGestureRecognizer:]
  -[CPSVoiceTemplateViewController _stateWithIdentifier:]
  -[CPSVoiceTemplateViewController lastVoiceTemplateStateChangeTime]
  -[CPSVoiceTemplateViewController setLastVoiceTemplateStateChangeTime:]
  -[CPSVoiceTemplateViewController initWithVoiceTemplate:templateDelegate:]
  -[CPSVoiceTemplateViewController backGestureRecognizer]


CPSVoiceView : UIView /System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices
 @property  CPSAbridgableLabel *titleLabel
 @property  UIImageView *imageView

  // instance methods
  -[CPSVoiceView .cxx_destruct]
  -[CPSVoiceView initWithFrame:]
  -[CPSVoiceView titleLabel]
  -[CPSVoiceView traitCollectionDidChange:]
  -[CPSVoiceView imageView]
  -[CPSVoiceView _titleFont]
  -[CPSVoiceView setTitleLabel:]
  -[CPSVoiceView setImageView:]


CPSPausedCardView : CPSInheritedBackgroundColorView
 @property  UILabel *title
 @property  UIActivityIndicatorView *spinner

  // instance methods
  -[CPSPausedCardView .cxx_destruct]
  -[CPSPausedCardView title]
  -[CPSPausedCardView backgroundColor]
  -[CPSPausedCardView intrinsicContentSize]
  -[CPSPausedCardView traitCollectionDidChange:]
  -[CPSPausedCardView spinner]
  -[CPSPausedCardView backgroundColorDidChange]
  -[CPSPausedCardView initWithTitle:showsSpinner:backgroundColor:]


CPSBannerSourceServiceSpecification : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CPSBannerSourceServiceSpecification identifier]
  +[CPSBannerSourceServiceSpecification interface]
  +[CPSBannerSourceServiceSpecification serviceQuality]


CPSPanButton : UIButton /System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices <UIGestureRecognizerDelegate>
 @property  UIView *backgroundView
 @property  long long direction
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CPSPanButton dynamicBackgroundColor]

  // instance methods
  -[CPSPanButton .cxx_destruct]
  -[CPSPanButton direction]
  -[CPSPanButton traitCollectionDidChange:]
  -[CPSPanButton backgroundView]
  -[CPSPanButton didUpdateFocusInContext:withAnimationCoordinator:]
  -[CPSPanButton layoutSubviews]
  -[CPSPanButton setBackgroundView:]
  -[CPSPanButton _updateColors]
  -[CPSPanButton initWithDirection:]
  -[CPSPanButton _setupPanImages]


CPSPanView : UIView /System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices <UIGestureRecognizerDelegate>
 @property  CPSPanButton *panLeftButton
 @property  CPSPanButton *panRightButton
 @property  CPSPanButton *panUpButton
 @property  CPSPanButton *panDownButton
 @property  <CPSPanViewDelegate> *delegate
 @property  double sideButtonTopInset
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSPanView delegate]
  -[CPSPanView setDelegate:]
  -[CPSPanView .cxx_destruct]
  -[CPSPanView initWithFrame:]
  -[CPSPanView gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[CPSPanView pressesBegan:withEvent:]
  -[CPSPanView pressesChanged:withEvent:]
  -[CPSPanView pressesEnded:withEvent:]
  -[CPSPanView pressesCancelled:withEvent:]
  -[CPSPanView _handleLongPressGesture:]
  -[CPSPanView _handleButtonTapped:]
  -[CPSPanView panRightButton]
  -[CPSPanView sideButtonTopInset]
  -[CPSPanView panLeftButton]
  -[CPSPanView panUpButton]
  -[CPSPanView panDownButton]


_CPSOverlayTouchBlockingView : UIView /System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices
  // instance methods
  -[_CPSOverlayTouchBlockingView initWithFrame:]


CPSOverlayViewController : UINavigationController /System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices <CPSPreferredFocusManaging>
 @property  <UIFocusItem> *preferredFocusItem
 @property  BOOL usePreferredItemOnNextUpdate

  // instance methods
  -[CPSOverlayViewController .cxx_destruct]
  -[CPSOverlayViewController didUpdateFocusInContext:withAnimationCoordinator:]
  -[CPSOverlayViewController preferredFocusEnvironments]
  -[CPSOverlayViewController _linearFocusMovementSequences]
  -[CPSOverlayViewController viewDidLoad]
  -[CPSOverlayViewController popToRootViewControllerAnimated:]
  -[CPSOverlayViewController popViewControllerAnimated:]
  -[CPSOverlayViewController popToViewController:animated:]
  -[CPSOverlayViewController initWithNavigationBarClass:toolbarClass:]
  -[CPSOverlayViewController templates]
  -[CPSOverlayViewController popToRootTemplateAnimated:]
  -[CPSOverlayViewController popToTemplate:animated:]
  -[CPSOverlayViewController dismissTemplateAnimated:]
  -[CPSOverlayViewController topTemplate]
  -[CPSOverlayViewController indexOfTemplate:]
  -[CPSOverlayViewController viewControllerForTemplate:]
  -[CPSOverlayViewController usePreferredItemOnNextUpdate]
  -[CPSOverlayViewController setUsePreferredItemOnNextUpdate:]
  -[CPSOverlayViewController preferredFocusItem]
  -[CPSOverlayViewController setPreferredFocusItem:]
  -[CPSOverlayViewController pushTemplateViewController:animated:presentationStyle:]
  -[CPSOverlayViewController presentTemplateViewController:animated:]
  -[CPSOverlayViewController presentActionSheetTemplate:animated:]
  -[CPSOverlayViewController presentedTemplateViewController]


CPSAnalytics : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL shouldRecordAnalyticsEvents

  // class methods
  +[CPSAnalytics sharedInstance]

  // instance methods
  -[CPSAnalytics shouldRecordAnalyticsEvents]
  -[CPSAnalytics _sendCoreAnalyticsEvent:withDictionary:]
  -[CPSAnalytics navigationStartedWithBundleIdentifier:]


CPSGuidanceBannerView : CPSBannerView
 @property  SBUIStarkBannerViewButton *actionButton
 @property  UIImageView *applicationIconImageView
 @property  UIImageView *guidanceImageView
 @property  CPSAbridgableLabel *guidanceTextLabel
 @property  CPSAbridgableLabel *guidanceDetailTextLabel
 @property  long long currentInterfaceStyle

  // instance methods
  -[CPSGuidanceBannerView .cxx_destruct]
  -[CPSGuidanceBannerView initWithContext:]
  -[CPSGuidanceBannerView traitCollectionDidChange:]
  -[CPSGuidanceBannerView actionButton]
  -[CPSGuidanceBannerView setActionButton:]
  -[CPSGuidanceBannerView guidanceTextLabel]
  -[CPSGuidanceBannerView guidanceDetailTextLabel]
  -[CPSGuidanceBannerView _setGuidanceImageViewForImageSet:]
  -[CPSGuidanceBannerView applicationIconImageView]
  -[CPSGuidanceBannerView updateBannerWithBannerItem:]
  -[CPSGuidanceBannerView setApplicationIconImageView:]
  -[CPSGuidanceBannerView guidanceImageView]
  -[CPSGuidanceBannerView setGuidanceImageView:]
  -[CPSGuidanceBannerView setGuidanceTextLabel:]
  -[CPSGuidanceBannerView setGuidanceDetailTextLabel:]
  -[CPSGuidanceBannerView currentInterfaceStyle]
  -[CPSGuidanceBannerView setCurrentInterfaceStyle:]


CPSAbridgableLabel : UILabel /System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices
 @property  unsigned long variantsIndex
 @property  NSArray *textVariants
 @property  NSArray *attributedTextVariants

  // class methods
  +[CPSAbridgableLabel sanitizedTextForText:]

  // instance methods
  -[CPSAbridgableLabel init]
  -[CPSAbridgableLabel .cxx_destruct]
  -[CPSAbridgableLabel setBounds:]
  -[CPSAbridgableLabel setFrame:]
  -[CPSAbridgableLabel setTextVariants:]
  -[CPSAbridgableLabel textVariants]
  -[CPSAbridgableLabel setAttributedTextVariants:]
  -[CPSAbridgableLabel _updateVariant]
  -[CPSAbridgableLabel sanitizedAttributedStringForString:]
  -[CPSAbridgableLabel _variantsList]
  -[CPSAbridgableLabel variantsIndex]
  -[CPSAbridgableLabel _numberOfVariants]
  -[CPSAbridgableLabel _compareBoundsSizeToLayoutSizeForString:]
  -[CPSAbridgableLabel setVariantsIndex:]
  -[CPSAbridgableLabel attributedTextVariants]


CPSTemplateInstance : NSObject /usr/lib/libSystem.B.dylib <NSXPCListenerDelegate, CPTemplateProviding, UINavigationControllerDelegate, CPSTemplateViewControllerDelegate, CPSSafeAreaDelegate, CPBannerDelegate>
 @property  NSXPCListener *listener
 @property  CPSOverlayViewController *overlayViewController
 @property  NSMutableDictionary *identifierToViewControllerDictionary
 @property  CPSBannerSourceProxy *bannerSourceProxy
 @property  CPSMapTemplateViewController *rootMapController
 @property  <CPTemplateServiceClientInterface> *remoteObjectProxy
 @property  CPSApplicationStateMonitor *applicationStateMonitor
 @property  NSXPCConnection *connection
 @property  NSUUID *actionSheetIdentifier
 @property  NSString *sceneIdentifier
 @property  <CPSTemplateInstanceDelegate> *delegate
 @property  FBScene *scene
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSTemplateInstance dealloc]
  -[CPSTemplateInstance delegate]
  -[CPSTemplateInstance listener]
  -[CPSTemplateInstance .cxx_destruct]
  -[CPSTemplateInstance listener:shouldAcceptNewConnection:]
  -[CPSTemplateInstance endpoint]
  -[CPSTemplateInstance remoteObjectProxy]
  -[CPSTemplateInstance connection]
  -[CPSTemplateInstance setConnection:]
  -[CPSTemplateInstance setListener:]
  -[CPSTemplateInstance initWithWindowScene:]
  -[CPSTemplateInstance scene]
  -[CPSTemplateInstance setScene:]
  -[CPSTemplateInstance navigationController:willShowViewController:animated:]
  -[CPSTemplateInstance sceneIdentifier]
  -[CPSTemplateInstance overlayViewController]
  -[CPSTemplateInstance setRemoteObjectProxy:]
  -[CPSTemplateInstance applicationStateMonitor]
  -[CPSTemplateInstance setApplicationStateMonitor:]
  -[CPSTemplateInstance setHostPrefersDarkUserInterfaceStyle:]
  -[CPSTemplateInstance popToRootTemplateAnimated:]
  -[CPSTemplateInstance popTemplateAnimated:]
  -[CPSTemplateInstance popToTemplate:animated:]
  -[CPSTemplateInstance containsTemplate:reply:]
  -[CPSTemplateInstance dismissTemplateAnimated:]
  -[CPSTemplateInstance getPresentedTemplateWithReply:]
  -[CPSTemplateInstance getTopTemplateWithReply:]
  -[CPSTemplateInstance getTemplatesWithReply:]
  -[CPSTemplateInstance presentVoiceTemplate:withProxyDelegate:animated:reply:]
  -[CPSTemplateInstance pushGridTemplate:withProxyDelegate:animated:presentationStyle:reply:]
  -[CPSTemplateInstance requestBannerProviderWithReply:]
  -[CPSTemplateInstance pushMapTemplate:withProxyDelegate:animated:presentationStyle:reply:]
  -[CPSTemplateInstance pushListTemplate:withProxyDelegate:animated:presentationStyle:reply:]
  -[CPSTemplateInstance pushSearchTemplate:withProxyDelegate:animated:presentationStyle:reply:]
  -[CPSTemplateInstance presentActionSheetTemplate:withProxyDelegate:animated:]
  -[CPSTemplateInstance presentAlertTemplate:withProxyDelegate:]
  -[CPSTemplateInstance dismissAlertAnimated:]
  -[CPSTemplateInstance bannerTappedWithIdentifier:]
  -[CPSTemplateInstance bannerDidAppearWithIdentifier:]
  -[CPSTemplateInstance bannerDidDisappearWithIdentifier:]
  -[CPSTemplateInstance bannerSourceProxy]
  -[CPSTemplateInstance identifierToViewControllerDictionary]
  -[CPSTemplateInstance rootMapController]
  -[CPSTemplateInstance setRootMapController:]
  -[CPSTemplateInstance templateViewControllerDidPop:]
  -[CPSTemplateInstance templateViewControllerDidDismiss:]
  -[CPSTemplateInstance updateSafeAreaInsets:]
  -[CPSTemplateInstance updateInterestingInsets:]
  -[CPSTemplateInstance initWithSceneIdentifier:delegate:]
  -[CPSTemplateInstance whitelistClassesForBaseTemplateProvider:]
  -[CPSTemplateInstance setOverlayViewController:]
  -[CPSTemplateInstance setIdentifierToViewControllerDictionary:]
  -[CPSTemplateInstance setBannerSourceProxy:]
  -[CPSTemplateInstance actionSheetIdentifier]
  -[CPSTemplateInstance setActionSheetIdentifier:]


_CPSNudgeTapGestureRecognizer : UITapGestureRecognizer /System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices
 @property  long long direction

  // instance methods
  -[_CPSNudgeTapGestureRecognizer direction]
  -[_CPSNudgeTapGestureRecognizer setDirection:]


_CPSNudgeLongPressGestureRecognizer : UILongPressGestureRecognizer /System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices
 @property  long long direction

  // instance methods
  -[_CPSNudgeLongPressGestureRecognizer direction]
  -[_CPSNudgeLongPressGestureRecognizer setDirection:]


CPSPanViewController : UIViewController /System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices <CPSPanViewDelegate, UIGestureRecognizerDelegate, CPSLinearFocusProviding>
 @property  CPSPanView *panView
 @property  NSArray *nudgeGestureRecognizers
 @property  <CPSPanEventDelegate> *panDelegate
 @property  double sideButtonTopInset
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSPanViewController .cxx_destruct]
  -[CPSPanViewController shouldUpdateFocusInContext:]
  -[CPSPanViewController preferredFocusEnvironments]
  -[CPSPanViewController viewWillDisappear:]
  -[CPSPanViewController viewDidLoad]
  -[CPSPanViewController viewDidAppear:]
  -[CPSPanViewController panView:panWithDirection:]
  -[CPSPanViewController panView:panBeganWithDirection:]
  -[CPSPanViewController panView:panEndedWithDirection:]
  -[CPSPanViewController sideButtonTopInset]
  -[CPSPanViewController _linearFocusItems]
  -[CPSPanViewController setPanView:]
  -[CPSPanViewController _handleNudgeLongPress:]
  -[CPSPanViewController _handleNudgeTapped:]
  -[CPSPanViewController nudgeGestureRecognizers]
  -[CPSPanViewController panDelegate]
  -[CPSPanViewController panView]
  -[CPSPanViewController _linearFocusItemsWithPresentedMapButtons:]
  -[CPSPanViewController setPanDelegate:]
  -[CPSPanViewController setNudgeGestureRecognizers:]


CPSApplicationStateMonitor : NSObject /usr/lib/libSystem.B.dylib
 @property  CARObserverHashTable *stateObservers
 @property  UIWindowScene *windowScene
 @property  NSString *bundleIdentifier
 @property  BOOL applicationActive

  // instance methods
  -[CPSApplicationStateMonitor dealloc]
  -[CPSApplicationStateMonitor .cxx_destruct]
  -[CPSApplicationStateMonitor bundleIdentifier]
  -[CPSApplicationStateMonitor initWithWindowScene:]
  -[CPSApplicationStateMonitor setWindowScene:]
  -[CPSApplicationStateMonitor windowScene]
  -[CPSApplicationStateMonitor _sceneWillEnterForeground:]
  -[CPSApplicationStateMonitor _sceneDidEnterBackground:]
  -[CPSApplicationStateMonitor stateObservers]
  -[CPSApplicationStateMonitor setStateObservers:]
  -[CPSApplicationStateMonitor isApplicationActive]
  -[CPSApplicationStateMonitor addApplicationStateObserver:]
  -[CPSApplicationStateMonitor removeApplicationStateObserver:]
  -[CPSApplicationStateMonitor _notifyObserversForeground:]


CPSMapButton : CPSButton
 @property  CPMapButton *mapButton

  // class methods
  +[CPSMapButton buttonWithCPMapButton:]

  // instance methods
  -[CPSMapButton .cxx_destruct]
  -[CPSMapButton traitCollectionDidChange:]
  -[CPSMapButton setCharge:]
  -[CPSMapButton charge]
  -[CPSMapButton setMapButton:]
  -[CPSMapButton _updateButtonImages]
  -[CPSMapButton mapButton]


CPSInvisibleButton : UIButton /System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices
  // instance methods
  -[CPSInvisibleButton hitTest:withEvent:]


CPSRouteRowView : UIView /System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices
 @property  UIImageView *checkmarkView
 @property  CPSAbridgableLabel *title
 @property  CPSAbridgableLabel *detail
 @property  UIView *focusBackground
 @property  CPSInvisibleButton *rowButton
 @property  <CPSRouteRowInteracting> *interactionDelegate
 @property  UIStackView *labelStackView
 @property  CPRouteChoice *representedRouteChoice
 @property  BOOL selected

  // instance methods
  -[CPSRouteRowView .cxx_destruct]
  -[CPSRouteRowView title]
  -[CPSRouteRowView isSelected]
  -[CPSRouteRowView setInteractionDelegate:]
  -[CPSRouteRowView initWithFrame:]
  -[CPSRouteRowView traitCollectionDidChange:]
  -[CPSRouteRowView didUpdateFocusInContext:withAnimationCoordinator:]
  -[CPSRouteRowView setSelected:]
  -[CPSRouteRowView _updateAppearance]
  -[CPSRouteRowView setLabelStackView:]
  -[CPSRouteRowView labelStackView]
  -[CPSRouteRowView detail]
  -[CPSRouteRowView interactionDelegate]
  -[CPSRouteRowView checkmarkView]
  -[CPSRouteRowView handleRowSelection:]
  -[CPSRouteRowView representedRouteChoice]
  -[CPSRouteRowView rowButton]
  -[CPSRouteRowView focusBackground]
  -[CPSRouteRowView setRepresentedRouteChoice:]
  -[CPSRouteRowView setFocusBackground:]
  -[CPSRouteRowView setRowButton:]


CPSAlternateRoutesView : UIView /System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices <CPSRouteRowInteracting, CPSLinearFocusProviding>
 @property  UIView *rowStack
 @property  NSArray *availableRouteChoices
 @property  unsigned long indexForSelectedRoute
 @property  <CPSAlternateRouteSelecting> *selectionDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSAlternateRoutesView .cxx_destruct]
  -[CPSAlternateRoutesView initWithFrame:]
  -[CPSAlternateRoutesView preferredFocusEnvironments]
  -[CPSAlternateRoutesView selectionDelegate]
  -[CPSAlternateRoutesView setSelectionDelegate:]
  -[CPSAlternateRoutesView _linearFocusItems]
  -[CPSAlternateRoutesView didSelectRow:representingRouteChoice:]
  -[CPSAlternateRoutesView setIndexForSelectedRoute:]
  -[CPSAlternateRoutesView setRowStack:]
  -[CPSAlternateRoutesView rowStack]
  -[CPSAlternateRoutesView availableRouteChoices]
  -[CPSAlternateRoutesView indexForSelectedRoute]
  -[CPSAlternateRoutesView _reloadRows]
  -[CPSAlternateRoutesView setAvailableRouteChoices:]


CPSBaseTemplateViewController : UIViewController /System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices <CPSButtonDelegate, UIGestureRecognizerDelegate, CPBaseTemplateProviding, CPSBaseTemplateViewController>
 @property  BOOL isPopping
 @property  BOOL didDisappear
 @property  UITapGestureRecognizer *backGestureRecognizer
 @property  CPTemplate *associatedTemplate
 @property  <CPTemplateDelegate> *templateDelegate
 @property  <CPSTemplateViewControllerDelegate> *viewControllerDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NAFuture *templateProviderFuture

  // instance methods
  -[CPSBaseTemplateViewController .cxx_destruct]
  -[CPSBaseTemplateViewController _cleanup]
  -[CPSBaseTemplateViewController gestureRecognizer:shouldReceivePress:]
  -[CPSBaseTemplateViewController viewWillAppear:]
  -[CPSBaseTemplateViewController viewWillDisappear:]
  -[CPSBaseTemplateViewController viewDidLoad]
  -[CPSBaseTemplateViewController viewDidAppear:]
  -[CPSBaseTemplateViewController viewDidDisappear:]
  -[CPSBaseTemplateViewController isPopping]
  -[CPSBaseTemplateViewController viewControllerDelegate]
  -[CPSBaseTemplateViewController setViewControllerDelegate:]
  -[CPSBaseTemplateViewController didDisappear]
  -[CPSBaseTemplateViewController setDidDisappear:]
  -[CPSBaseTemplateViewController templateDelegate]
  -[CPSBaseTemplateViewController setLeadingNavigationBarButtons:]
  -[CPSBaseTemplateViewController setTrailingNavigationBarButtons:]
  -[CPSBaseTemplateViewController setTemplateDelegate:]
  -[CPSBaseTemplateViewController setHostBackButton:]
  -[CPSBaseTemplateViewController setControl:enabled:]
  -[CPSBaseTemplateViewController setBarButton:image:]
  -[CPSBaseTemplateViewController setBarButton:title:]
  -[CPSBaseTemplateViewController templateProviderFuture]
  -[CPSBaseTemplateViewController didSelectButton:]
  -[CPSBaseTemplateViewController initWithTemplate:templateDelegate:]
  -[CPSBaseTemplateViewController associatedTemplate]
  -[CPSBaseTemplateViewController _viewDidLoad]
  -[CPSBaseTemplateViewController _dismissTemplateViewController]
  -[CPSBaseTemplateViewController _backGestureFired:]
  -[CPSBaseTemplateViewController setBackGestureRecognizer:]
  -[CPSBaseTemplateViewController backGestureRecognizer]
  -[CPSBaseTemplateViewController _cps_viewControllerWasPopped]
  -[CPSBaseTemplateViewController setAssociatedTemplate:]
  -[CPSBaseTemplateViewController setIsPopping:]
  -[CPSBaseTemplateViewController _updateLeadingBarButtons]
  -[CPSBaseTemplateViewController _updateTrailingBarButtons]
  -[CPSBaseTemplateViewController _addGestureRecognizerIfNecessary]
  -[CPSBaseTemplateViewController _barButtonItemForIdentifier:]


CPSNavigator : NSObject /usr/lib/libSystem.B.dylib <CARNavigationOwnershipManagerDelegate, CPNavigationSessionProviding>
 @property  BOOL completed
 @property  NSHashTable *displayDelegates
 @property  CARNavigationOwnershipManager *navigationOwnershipManager
 @property  CPTrip *trip
 @property  <CARNavigationOwnershipManagerDelegate> *navigationOwnershipDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSNavigator dealloc]
  -[CPSNavigator .cxx_destruct]
  -[CPSNavigator initWithIdentifier:]
  -[CPSNavigator setCompleted:]
  -[CPSNavigator isCompleted]
  -[CPSNavigator navigationOwnershipChangedToOwner:]
  -[CPSNavigator trip]
  -[CPSNavigator pauseTripForReason:description:]
  -[CPSNavigator finishTrip]
  -[CPSNavigator cancelTrip]
  -[CPSNavigator showManeuvers:usingDisplayStyles:]
  -[CPSNavigator updateTravelEstimates:forManeuver:]
  -[CPSNavigator displayDelegates]
  -[CPSNavigator navigationOwnershipManager]
  -[CPSNavigator navigationOwnershipDelegate]
  -[CPSNavigator addDisplayDelegate:]
  -[CPSNavigator removeDisplayDelegate:]
  -[CPSNavigator setNavigationOwnershipDelegate:]
  -[CPSNavigator setDisplayDelegates:]
  -[CPSNavigator setNavigationOwnershipManager:]


CPSCardPlatterView : UIView /System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices
  // instance methods
  -[CPSCardPlatterView setBackgroundColor:]
  -[CPSCardPlatterView initWithFrame:]


CPSBannerItem : SBUIBannerItem /System/Library/PrivateFrameworks/NetAppsUtilities.framework/NetAppsUtilities
 @property  NSString *bundleIdentifier
 @property  NSUUID *identifier
 @property  <CPSBannerItemDelegate> *delegate
 @property  NSArray *textVariants
 @property  NSArray *detailTextVariants
 @property  NSArray *attributedDetailTextVariants
 @property  CPImageSet *imageSet

  // instance methods
  -[CPSBannerItem isEqual:]
  -[CPSBannerItem delegate]
  -[CPSBannerItem setDelegate:]
  -[CPSBannerItem .cxx_destruct]
  -[CPSBannerItem identifier]
  -[CPSBannerItem bundleIdentifier]
  -[CPSBannerItem setIdentifier:]
  -[CPSBannerItem action]
  -[CPSBannerItem setBundleIdentifier:]
  -[CPSBannerItem isSticky]
  -[CPSBannerItem imageSet]
  -[CPSBannerItem textVariants]
  -[CPSBannerItem attributedDetailTextVariants]
  -[CPSBannerItem detailTextVariants]
  -[CPSBannerItem isEqualToBannerItem:]
  -[CPSBannerItem initWithIdentifier:bundleIdentifier:textVariants:detailTextVariants:attributedDetailTextVariants:imageSet:delegate:]


CPSLabeledValueView : UIView /System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices
 @property  UILabel *valueText
 @property  UILabel *label

  // instance methods
  -[CPSLabeledValueView init]
  -[CPSLabeledValueView .cxx_destruct]
  -[CPSLabeledValueView label]
  -[CPSLabeledValueView setTextColor:]
  -[CPSLabeledValueView valueText]


CPSRouteEstimatesView : UIView /System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices
 @property  CPSLabeledValueView *arrivalTimeView
 @property  CPSLabeledValueView *distanceRemainingView
 @property  NSDateFormatter *arrivalDateFormatter
 @property  NSDateComponentsFormatter *remainingTimeFormatter
 @property  NSCalendar *calendar
 @property  NSTimeZone *arrivalTimeZone
 @property  double estimatedTimeRemaining
 @property  NSMeasurement *distanceRemaining
 @property  unsigned long timeRemainingColor
 @property  CPSLabeledValueView *timeRemainingView
 @property  unsigned long tripEstimateStyle

  // instance methods
  -[CPSRouteEstimatesView .cxx_destruct]
  -[CPSRouteEstimatesView calendar]
  -[CPSRouteEstimatesView estimatedTimeRemaining]
  -[CPSRouteEstimatesView setEstimatedTimeRemaining:]
  -[CPSRouteEstimatesView initWithStyle:]
  -[CPSRouteEstimatesView _updateTextColors]
  -[CPSRouteEstimatesView _defaultColorForStyle:]
  -[CPSRouteEstimatesView setDistanceRemaining:]
  -[CPSRouteEstimatesView arrivalTimeZone]
  -[CPSRouteEstimatesView remainingTimeFormatter]
  -[CPSRouteEstimatesView timeRemainingColor]
  -[CPSRouteEstimatesView setTimeRemainingColor:]
  -[CPSRouteEstimatesView tripEstimateStyle]
  -[CPSRouteEstimatesView setTripEstimateStyle:]
  -[CPSRouteEstimatesView _timeRemainingColorForColor:style:]
  -[CPSRouteEstimatesView timeRemainingView]
  -[CPSRouteEstimatesView distanceRemainingView]
  -[CPSRouteEstimatesView arrivalTimeView]
  -[CPSRouteEstimatesView arrivalDateFormatter]
  -[CPSRouteEstimatesView _setArrivalTime:]
  -[CPSRouteEstimatesView _setTimeRemaining:units:]
  -[CPSRouteEstimatesView _setDistanceRemaining:units:]
  -[CPSRouteEstimatesView _greenColorForStyle:]
  -[CPSRouteEstimatesView _orangeColorForStyle:]
  -[CPSRouteEstimatesView _redColorForStyle:]
  -[CPSRouteEstimatesView setArrivalTimeZone:]


CPSBannerSourceProxy : NSObject /usr/lib/libSystem.B.dylib <CPSBannerSourceServerToClientInterface, BSInvalidatable, CPBannerProviding, CPSApplicationStateObserving>
 @property  <CPBannerDelegate> *delegate
 @property  BSServiceConnection *connection
 @property  NSObject<OS_dispatch_queue> *callbackQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSBannerSourceProxy invalidate]
  -[CPSBannerSourceProxy delegate]
  -[CPSBannerSourceProxy setDelegate:]
  -[CPSBannerSourceProxy .cxx_destruct]
  -[CPSBannerSourceProxy connection]
  -[CPSBannerSourceProxy callbackQueue]
  -[CPSBannerSourceProxy setConnection:]
  -[CPSBannerSourceProxy setBundleIdentifier:]
  -[CPSBannerSourceProxy setCallbackQueue:]
  -[CPSBannerSourceProxy initWithDelegate:]
  -[CPSBannerSourceProxy postBannerForManeuver:travelEstimates:]
  -[CPSBannerSourceProxy postBannerForNavigationAlert:]
  -[CPSBannerSourceProxy bannerTappedWithIdentifier:]
  -[CPSBannerSourceProxy bannerDidAppearWithIdentifier:]
  -[CPSBannerSourceProxy bannerDidDisappearWithIdentifier:]
  -[CPSBannerSourceProxy applicationStateMonitor:didBecomeActive:]


CPSLayoutHelperView : UIView /System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices
 @property  <CPSLayoutHelperViewDelegate> *layoutDelegate

  // instance methods
  -[CPSLayoutHelperView init]
  -[CPSLayoutHelperView .cxx_destruct]
  -[CPSLayoutHelperView layoutSubviews]
  -[CPSLayoutHelperView setLayoutDelegate:]
  -[CPSLayoutHelperView layoutDelegate]


CPSGridTemplateView : UIView /System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices
  // instance methods
  -[CPSGridTemplateView .cxx_destruct]
  -[CPSGridTemplateView layoutSubviews]
  -[CPSGridTemplateView initWithGridButtons:]


CPSGridTemplateViewController : CPSBaseTemplateViewController <CPSButtonDelegate, CPGridTemplateProviding>
 @property  NSArray *gridButtons
 @property  CPGridTemplate *gridTemplate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSGridTemplateViewController .cxx_destruct]
  -[CPSGridTemplateViewController setControl:enabled:]
  -[CPSGridTemplateViewController gridButtons]
  -[CPSGridTemplateViewController didSelectButton:]
  -[CPSGridTemplateViewController _viewDidLoad]
  -[CPSGridTemplateViewController initWithGridTemplate:interfaceDelegate:]
  -[CPSGridTemplateViewController gridTemplate]
  -[CPSGridTemplateViewController setGridButtons:]
  -[CPSGridTemplateViewController _buttonForIdentifier:]


CPSSearchTemplateViewController : UISearchContainerViewController /System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices <UISearchResultsUpdating, UISearchBarDelegate, UISearchControllerDelegate, CPListTemplateDelegate, CPSBaseTemplateViewController, CPSearchTemplateProviding>
 @property  CPSearchTemplate *searchTemplate
 @property  <CPSearchClientTemplateDelegate> *searchTemplateDelegate
 @property  BOOL didPop
 @property  BOOL didDisappear
 @property  <CPSTemplateViewControllerDelegate> *viewControllerDelegate
 @property  CPTemplate *associatedTemplate
 @property  <CPTemplateDelegate> *templateDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NAFuture *templateProviderFuture

  // instance methods
  -[CPSSearchTemplateViewController .cxx_destruct]
  -[CPSSearchTemplateViewController _cleanup]
  -[CPSSearchTemplateViewController viewWillAppear:]
  -[CPSSearchTemplateViewController viewWillDisappear:]
  -[CPSSearchTemplateViewController viewDidLoad]
  -[CPSSearchTemplateViewController viewDidAppear:]
  -[CPSSearchTemplateViewController viewDidDisappear:]
  -[CPSSearchTemplateViewController searchBarSearchButtonClicked:]
  -[CPSSearchTemplateViewController didDismissSearchController:]
  -[CPSSearchTemplateViewController updateSearchResultsForSearchController:]
  -[CPSSearchTemplateViewController viewControllerDelegate]
  -[CPSSearchTemplateViewController setViewControllerDelegate:]
  -[CPSSearchTemplateViewController didDisappear]
  -[CPSSearchTemplateViewController setDidDisappear:]
  -[CPSSearchTemplateViewController templateDelegate]
  -[CPSSearchTemplateViewController setTemplateDelegate:]
  -[CPSSearchTemplateViewController listTemplate:didSelectListItem:completionHandler:]
  -[CPSSearchTemplateViewController templateProviderFuture]
  -[CPSSearchTemplateViewController associatedTemplate]
  -[CPSSearchTemplateViewController _cps_viewControllerWasPopped]
  -[CPSSearchTemplateViewController setAssociatedTemplate:]
  -[CPSSearchTemplateViewController initWithSearchController:searchTemplate:templateDelegate:]
  -[CPSSearchTemplateViewController didPop]
  -[CPSSearchTemplateViewController setDidPop:]
  -[CPSSearchTemplateViewController searchTemplateDelegate]
  -[CPSSearchTemplateViewController searchTemplate]


CPSNavigationAlertQueue : NSObject /usr/lib/libSystem.B.dylib <CPSButtonDelegate, CPSApplicationStateObserving>
 @property  NSTimer *alertTimer
 @property  <CPTemplateDelegate> *templateDelegate
 @property  CPSApplicationStateMonitor *applicationStateMonitor
 @property  <CPSNavigationAlertQueueDelegate> *delegate
 @property  CPNavigationAlert *currentAlert
 @property  CPSNavigationAlertView *currentAlertView
 @property  BOOL canDisplayAlert
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSNavigationAlertQueue delegate]
  -[CPSNavigationAlertQueue .cxx_destruct]
  -[CPSNavigationAlertQueue applicationStateMonitor]
  -[CPSNavigationAlertQueue currentAlert]
  -[CPSNavigationAlertQueue setApplicationStateMonitor:]
  -[CPSNavigationAlertQueue templateDelegate]
  -[CPSNavigationAlertQueue setTemplateDelegate:]
  -[CPSNavigationAlertQueue didSelectButton:]
  -[CPSNavigationAlertQueue applicationStateMonitor:didBecomeActive:]
  -[CPSNavigationAlertQueue alertTimer]
  -[CPSNavigationAlertQueue beginAnimatingAlertIfPossible]
  -[CPSNavigationAlertQueue currentAlertView]
  -[CPSNavigationAlertQueue _canBeginAnimatingAlert]
  -[CPSNavigationAlertQueue _startAlertAnimations]
  -[CPSNavigationAlertQueue _visibleAlertTimerFired:]
  -[CPSNavigationAlertQueue dismissCurrentNavigationAlertAnimated:context:]
  -[CPSNavigationAlertQueue initWithDelegate:applicationStateMonitor:]
  -[CPSNavigationAlertQueue canDisplayAlert]
  -[CPSNavigationAlertQueue prepareNavigationAlert:templateDelegate:animated:]
  -[CPSNavigationAlertQueue setAlertTimer:]


CPSTemplateBannerController : NSObject /usr/lib/libSystem.B.dylib <BSServiceConnectionListenerDelegate, CPSBannerSourceClientToServerInterface, CPSBannerSourceDelegate, BSInvalidatable>
 @property  BSServiceConnectionListener *listener
 @property  NSObject<OS_dispatch_queue> *connectionQueue
 @property  NSMutableDictionary *connections
 @property  NSMutableDictionary *bannerSources
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSTemplateBannerController init]
  -[CPSTemplateBannerController invalidate]
  -[CPSTemplateBannerController listener]
  -[CPSTemplateBannerController .cxx_destruct]
  -[CPSTemplateBannerController setListener:]
  -[CPSTemplateBannerController connectionQueue]
  -[CPSTemplateBannerController listener:didReceiveConnection:withContext:]
  -[CPSTemplateBannerController connections]
  -[CPSTemplateBannerController setConnections:]
  -[CPSTemplateBannerController setConnectionQueue:]
  -[CPSTemplateBannerController postBannerForManeuver:travelEstimates:]
  -[CPSTemplateBannerController postBannerForNavigationAlert:]
  -[CPSTemplateBannerController sceneActivationStateChangedTo:]
  -[CPSTemplateBannerController _connectionQueue_removeConnection:]
  -[CPSTemplateBannerController _connectionQueue_addConnection:]
  -[CPSTemplateBannerController _connectionForBannerSource:]
  -[CPSTemplateBannerController bannerSources]
  -[CPSTemplateBannerController bannerSource:bannerTappedWithIdentifier:]
  -[CPSTemplateBannerController bannerSource:bannerDidAppearWithIdentifier:]
  -[CPSTemplateBannerController bannerSource:bannerDidDisappearWithIdentifier:]
  -[CPSTemplateBannerController setBannerSources:]


CPSListTemplateViewController : CPSBaseTemplateViewController <UITableViewDelegate, CPListTemplateProviding>
 @property  CPSSectionedDataSource *dataSource
 @property  NSIndexPath *currentSpinningIndexPath
 @property  NSIndexPath *nextSpinningIndexPath
 @property  UIActivityIndicatorView *spinnerView
 @property  unsigned long spinnerState
 @property  NSTimer *spinnerStartTimer
 @property  NSTimer *spinnerTimeoutTimer
 @property  CPListTemplate *listTemplate
 @property  CPSTableView *tableView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSListTemplateViewController .cxx_destruct]
  -[CPSListTemplateViewController dataSource]
  -[CPSListTemplateViewController setDataSource:]
  -[CPSListTemplateViewController tableView]
  -[CPSListTemplateViewController viewWillAppear:]
  -[CPSListTemplateViewController setButton:enabled:]
  -[CPSListTemplateViewController setTableView:]
  -[CPSListTemplateViewController tableView:willDisplayHeaderView:forSection:]
  -[CPSListTemplateViewController tableView:heightForHeaderInSection:]
  -[CPSListTemplateViewController tableView:didSelectRowAtIndexPath:]
  -[CPSListTemplateViewController spinnerView]
  -[CPSListTemplateViewController setSpinnerView:]
  -[CPSListTemplateViewController updateSections:]
  -[CPSListTemplateViewController _viewDidLoad]
  -[CPSListTemplateViewController initWithListTemplate:templateDelegate:]
  -[CPSListTemplateViewController listTemplate]
  -[CPSListTemplateViewController currentSpinningIndexPath]
  -[CPSListTemplateViewController nextSpinningIndexPath]
  -[CPSListTemplateViewController setCurrentSpinningIndexPath:]
  -[CPSListTemplateViewController setNextSpinningIndexPath:]
  -[CPSListTemplateViewController spinnerState]
  -[CPSListTemplateViewController _startSpinnerTimerFired:indexPath:]
  -[CPSListTemplateViewController setSpinnerStartTimer:]
  -[CPSListTemplateViewController _timeoutSpinnerFired:indexPath:]
  -[CPSListTemplateViewController setSpinnerTimeoutTimer:]
  -[CPSListTemplateViewController setSpinnerState:]
  -[CPSListTemplateViewController _addSpinnerToIndexPath:]
  -[CPSListTemplateViewController _cellSelectionCompleted:]
  -[CPSListTemplateViewController spinnerStartTimer]
  -[CPSListTemplateViewController spinnerTimeoutTimer]
  -[CPSListTemplateViewController _cancelScheduledLoadingSpinnerForIndexPath:]
  -[CPSListTemplateViewController _scheduleLoadingSpinnerForIndexPath:]
  -[CPSListTemplateViewController setButton:hidden:]


CPSNavigationAlertView : UIView /System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices <CPSLinearFocusProviding>
 @property  CPSAbridgableLabel *titleLabel
 @property  CPSAbridgableLabel *subtitleLabel
 @property  UIImageView *imageView
 @property  CPSNavigationAlertButtonView *buttonView
 @property  CPSNavigationAlertProgressView *progressView
 @property  CPNavigationAlert *navigationAlert
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSNavigationAlertView .cxx_destruct]
  -[CPSNavigationAlertView intrinsicContentSize]
  -[CPSNavigationAlertView titleLabel]
  -[CPSNavigationAlertView preferredFocusEnvironments]
  -[CPSNavigationAlertView imageView]
  -[CPSNavigationAlertView setTitleLabel:]
  -[CPSNavigationAlertView startAnimating]
  -[CPSNavigationAlertView setImageView:]
  -[CPSNavigationAlertView setSubtitleLabel:]
  -[CPSNavigationAlertView subtitleLabel]
  -[CPSNavigationAlertView navigationAlert]
  -[CPSNavigationAlertView progressView]
  -[CPSNavigationAlertView setProgressView:]
  -[CPSNavigationAlertView buttonView]
  -[CPSNavigationAlertView setButtonView:]
  -[CPSNavigationAlertView updateNavigationAlert:]
  -[CPSNavigationAlertView _linearFocusItems]
  -[CPSNavigationAlertView initWithFrame:navigationAlert:templateDelegate:buttonDelegate:]


CPSNavigationAlertProgressView : UIView /System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices
 @property  double duration
 @property  UIView *progressView
 @property  BOOL hasStartedAnimating

  // instance methods
  -[CPSNavigationAlertProgressView .cxx_destruct]
  -[CPSNavigationAlertProgressView duration]
  -[CPSNavigationAlertProgressView setDuration:]
  -[CPSNavigationAlertProgressView startAnimating]
  -[CPSNavigationAlertProgressView progressView]
  -[CPSNavigationAlertProgressView setProgressView:]
  -[CPSNavigationAlertProgressView initWithFrame:duration:]
  -[CPSNavigationAlertProgressView hasStartedAnimating]
  -[CPSNavigationAlertProgressView setHasStartedAnimating:]


CPSNavigationAlertFocusButton : CPSButton
 @property  CPSNavigationAlertProgressView *altFocusProgressView

  // instance methods
  -[CPSNavigationAlertFocusButton .cxx_destruct]
  -[CPSNavigationAlertFocusButton didUpdateFocusInContext:withAnimationCoordinator:]
  -[CPSNavigationAlertFocusButton setHighlighted:]
  -[CPSNavigationAlertFocusButton pressesBegan:withEvent:]
  -[CPSNavigationAlertFocusButton pressesEnded:withEvent:]
  -[CPSNavigationAlertFocusButton pressesCancelled:withEvent:]
  -[CPSNavigationAlertFocusButton altFocusProgressView]
  -[CPSNavigationAlertFocusButton setAltFocusProgressView:]


CPSNavigationAlertButtonView : UIView /System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices
 @property  CPSNavigationAlertFocusButton *primaryButton
 @property  CPSNavigationAlertFocusButton *secondaryButton

  // instance methods
  -[CPSNavigationAlertButtonView .cxx_destruct]
  -[CPSNavigationAlertButtonView setPrimaryButton:]
  -[CPSNavigationAlertButtonView setSecondaryButton:]
  -[CPSNavigationAlertButtonView primaryButton]
  -[CPSNavigationAlertButtonView secondaryButton]
  -[CPSNavigationAlertButtonView initWithPrimaryAction:secondaryAction:progressView:]


CPSNavigationETAView : UIView /System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices <CPSNavigationDisplaying>
 @property  UIView *borderView
 @property  CPTrip *trip
 @property  CPSRouteEstimatesView *routeEstimatesView
 @property  unsigned long tripEstimateStyle
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSNavigationETAView .cxx_destruct]
  -[CPSNavigationETAView setHidden:]
  -[CPSNavigationETAView removeFromSuperview]
  -[CPSNavigationETAView _updateStyle]
  -[CPSNavigationETAView didMoveToSuperview]
  -[CPSNavigationETAView setBorderView:]
  -[CPSNavigationETAView borderView]
  -[CPSNavigationETAView trip]
  -[CPSNavigationETAView tripEstimateStyle]
  -[CPSNavigationETAView setTripEstimateStyle:]
  -[CPSNavigationETAView updateEstimates:forManeuver:]
  -[CPSNavigationETAView routeEstimatesView]
  -[CPSNavigationETAView initWithTrip:style:]
  -[CPSNavigationETAView showManeuvers:]


CPSUtilities : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned long lastButtonPressInteractionModel

  // class methods
  +[CPSUtilities sharedInstance]

  // instance methods
  -[CPSUtilities setLastButtonPressInteractionModel:]
  -[CPSUtilities lastButtonPressInteractionModel]


CPSInheritedBackgroundColorView : UIView /System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices <CPSInheritsBackgroundColor>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSInheritedBackgroundColorView backgroundColor]
  -[CPSInheritedBackgroundColorView didMoveToSuperview]
  -[CPSInheritedBackgroundColorView backgroundColorDidChange]


CPSTableView : UITableView /System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices
  // instance methods
  -[CPSTableView _shouldShowHeadersAndFooters]


CPSPagingControlButton : UIButton /System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices
  // instance methods
  -[CPSPagingControlButton initWithFrame:]
  -[CPSPagingControlButton didUpdateFocusInContext:withAnimationCoordinator:]


CPSPagingControlView : UIView /System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices <CPSLinearFocusProviding>
 @property  UILabel *positionLabel
 @property  NSNumberFormatter *numberFormatter
 @property  unsigned long pageIndex
 @property  unsigned long pageCount
 @property  UIButton *previousButton
 @property  UIButton *nextButton
 @property  <CPSPageControlling> *pagingDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSPagingControlView .cxx_destruct]
  -[CPSPagingControlView _update]
  -[CPSPagingControlView setNumberFormatter:]
  -[CPSPagingControlView numberFormatter]
  -[CPSPagingControlView initWithFrame:]
  -[CPSPagingControlView traitCollectionDidChange:]
  -[CPSPagingControlView pageCount]
  -[CPSPagingControlView setPageCount:]
  -[CPSPagingControlView pageIndex]
  -[CPSPagingControlView setPageIndex:]
  -[CPSPagingControlView nextButton]
  -[CPSPagingControlView setNextButton:]
  -[CPSPagingControlView _updateImages]
  -[CPSPagingControlView _linearFocusItems]
  -[CPSPagingControlView _handlePreviousButton:]
  -[CPSPagingControlView setPreviousButton:]
  -[CPSPagingControlView _handleNextButton:]
  -[CPSPagingControlView setPositionLabel:]
  -[CPSPagingControlView previousButton]
  -[CPSPagingControlView positionLabel]
  -[CPSPagingControlView _invokeDelegateForPageIndex:]
  -[CPSPagingControlView pagingDelegate]
  -[CPSPagingControlView enablePageControlsIfNecessary]
  -[CPSPagingControlView setPagingDelegate:]


CPSSectionedDataSource : CPSDataSource <CPSessionConfigurationDelegate>
 @property  NSMutableArray *sections
 @property  CPSessionConfiguration *sessionConfiguration
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSSectionedDataSource .cxx_destruct]
  -[CPSSectionedDataSource items]
  -[CPSSectionedDataSource initWithItems:]
  -[CPSSectionedDataSource initWithSection:]
  -[CPSSectionedDataSource numberOfSections]
  -[CPSSectionedDataSource numberOfItemsInSection:]
  -[CPSSectionedDataSource sections]
  -[CPSSectionedDataSource tableView:titleForHeaderInSection:]
  -[CPSSectionedDataSource sectionIndexTitlesForTableView:]
  -[CPSSectionedDataSource tableView:sectionForSectionIndexTitle:atIndex:]
  -[CPSSectionedDataSource setSections:]
  -[CPSSectionedDataSource deleteSectionAtIndex:]
  -[CPSSectionedDataSource _filteredNumberOfItemsGivenSection:numberOfItems:]
  -[CPSSectionedDataSource sectionAtIndex:]
  -[CPSSectionedDataSource initWithSections:]
  -[CPSSectionedDataSource itemAtIndexPath:]
  -[CPSSectionedDataSource insertSection:atIndex:]
  -[CPSSectionedDataSource appendSection:]
  -[CPSSectionedDataSource sessionConfiguration]
  -[CPSSectionedDataSource setSessionConfiguration:]
  -[CPSSectionedDataSource updateSections:]
  -[CPSSectionedDataSource sessionConfiguration:limitedUserInterfacesChanged:]
  -[CPSSectionedDataSource isLimitingLists]
  -[CPSSectionedDataSource _sanitizedSectionIndexTitleForTitle:]


CPSHidingLabel : UILabel /System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices
  // instance methods
  -[CPSHidingLabel layoutSubviews]


CPSRouteOverviewView : UIView /System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices
 @property  CPTrip *representedTrip
 @property  UILabel *destinationName
 @property  CPSHidingLabel *destinationAddress
 @property  CPSHidingLabel *routeNoteLabel
 @property  NSString *routeNote
 @property  CPTravelEstimates *currentTravelEstimates
 @property  CPSRouteEstimatesView *estimatesView

  // class methods
  +[CPSRouteOverviewView _multilineLabel]
  +[CPSRouteOverviewView _nameForMapItem:]
  +[CPSRouteOverviewView _applyBoldText:fontSize:color:toLabel:]
  +[CPSRouteOverviewView _shortenedAddressForAddress:]
  +[CPSRouteOverviewView _applyText:fontSize:color:toLabel:]

  // instance methods
  -[CPSRouteOverviewView .cxx_destruct]
  -[CPSRouteOverviewView initWithFrame:]
  -[CPSRouteOverviewView traitCollectionDidChange:]
  -[CPSRouteOverviewView destinationAddress]
  -[CPSRouteOverviewView destinationName]
  -[CPSRouteOverviewView _updateTripEstimateStyle]
  -[CPSRouteOverviewView estimatesView]
  -[CPSRouteOverviewView routeNoteLabel]
  -[CPSRouteOverviewView representedTrip]
  -[CPSRouteOverviewView setRepresentedTrip:]
  -[CPSRouteOverviewView setRouteNote:]
  -[CPSRouteOverviewView setCurrentTravelEstimates:]
  -[CPSRouteOverviewView routeNote]
  -[CPSRouteOverviewView currentTravelEstimates]


CPSHairlineBorderedView : UIView /System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices
 @property  UIView *contentView
 @property  NSLayoutConstraint *bottomConstraint

  // instance methods
  -[CPSHairlineBorderedView .cxx_destruct]
  -[CPSHairlineBorderedView contentView]
  -[CPSHairlineBorderedView bottomConstraint]
  -[CPSHairlineBorderedView initWithContentView:borderEdges:]


CPSTripPreviewsCardView : UIView /System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices <CPSLinearFocusProviding>
 @property  CPTripPreviewTextConfiguration *textConfiguration
 @property  CPTrip *selectedTrip
 @property  CPRouteChoice *selectedRouteChoice
 @property  CPSCardPlatterView *platterView
 @property  <CPSTripInitiating> *tripDelegate
 @property  UIButton *goButton
 @property  NSArray *trips
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSTripPreviewsCardView .cxx_destruct]
  -[CPSTripPreviewsCardView traitCollectionDidChange:]
  -[CPSTripPreviewsCardView platterView]
  -[CPSTripPreviewsCardView _linearFocusItems]
  -[CPSTripPreviewsCardView _updateButtonColors]
  -[CPSTripPreviewsCardView goButton]
  -[CPSTripPreviewsCardView startTripButtonPressed:]
  -[CPSTripPreviewsCardView setSelectedRouteChoice:]
  -[CPSTripPreviewsCardView notifyDidSelectRouteChoice:]
  -[CPSTripPreviewsCardView selectedTrip]
  -[CPSTripPreviewsCardView selectedRouteChoice]
  -[CPSTripPreviewsCardView tripDelegate]
  -[CPSTripPreviewsCardView initWithTripDelegate:trips:textConfiguration:]
  -[CPSTripPreviewsCardView setupGoButton]
  -[CPSTripPreviewsCardView setSelectedTrip:]
  -[CPSTripPreviewsCardView updateEstimates:forTripIdentifier:]
  -[CPSTripPreviewsCardView trips]
  -[CPSTripPreviewsCardView textConfiguration]
  -[CPSTripPreviewsCardView setTextConfiguration:]


CPSPagingTripPreviewsCardView : CPSTripPreviewsCardView <CPSAlternateRouteSelecting, CPSPageControlling>
 @property  NSMutableDictionary *estimatesForTripIdentifiers
 @property  CPSPagingControlView *pageControl
 @property  CPSRouteOverviewView *overviewView
 @property  CPSHairlineBorderedView *borderedAlternatesView
 @property  CPSHairlineBorderedView *borderedGoButton
 @property  CPSHairlineBorderedView *borderedMoreRoutesButton
 @property  UIButton *moreRoutesButton
 @property  BOOL showMoreRoutes
 @property  NSLayoutConstraint *contentTopConstraint
 @property  NSLayoutConstraint *contentBottomConstraint
 @property  NSLayoutConstraint *alternateRoutesHeightConstraint
 @property  NSLayoutConstraint *toggleRoutesButtonHeightConstraint
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSPagingTripPreviewsCardView .cxx_destruct]
  -[CPSPagingTripPreviewsCardView shouldUpdateFocusInContext:]
  -[CPSPagingTripPreviewsCardView preferredFocusEnvironments]
  -[CPSPagingTripPreviewsCardView pageControl]
  -[CPSPagingTripPreviewsCardView _linearFocusItems]
  -[CPSPagingTripPreviewsCardView alternateRoutesView:didSelectRouteChoice:]
  -[CPSPagingTripPreviewsCardView pagingControlView:didSelectPageIndex:]
  -[CPSPagingTripPreviewsCardView _updateButtonColors]
  -[CPSPagingTripPreviewsCardView setSelectedRouteChoice:]
  -[CPSPagingTripPreviewsCardView initWithTripDelegate:trips:textConfiguration:]
  -[CPSPagingTripPreviewsCardView setSelectedTrip:]
  -[CPSPagingTripPreviewsCardView updateEstimates:forTripIdentifier:]
  -[CPSPagingTripPreviewsCardView setContentTopConstraint:]
  -[CPSPagingTripPreviewsCardView contentTopConstraint]
  -[CPSPagingTripPreviewsCardView setAlternateRoutesHeightConstraint:]
  -[CPSPagingTripPreviewsCardView alternateRoutesHeightConstraint]
  -[CPSPagingTripPreviewsCardView setContentBottomConstraint:]
  -[CPSPagingTripPreviewsCardView _toggleMoreRoutesButtonPressed:]
  -[CPSPagingTripPreviewsCardView setToggleRoutesButtonHeightConstraint:]
  -[CPSPagingTripPreviewsCardView toggleRoutesButtonHeightConstraint]
  -[CPSPagingTripPreviewsCardView moreRoutesButton]
  -[CPSPagingTripPreviewsCardView overviewView]
  -[CPSPagingTripPreviewsCardView borderedAlternatesView]
  -[CPSPagingTripPreviewsCardView borderedMoreRoutesButton]
  -[CPSPagingTripPreviewsCardView borderedGoButton]
  -[CPSPagingTripPreviewsCardView contentBottomConstraint]
  -[CPSPagingTripPreviewsCardView estimatesForTripIdentifiers]
  -[CPSPagingTripPreviewsCardView showMoreRoutes]
  -[CPSPagingTripPreviewsCardView setShowMoreRoutes:]
  -[CPSPagingTripPreviewsCardView _setOverviewCollapsed:]


CPSRoutePreviewsCardView : CPSTripPreviewsCardView <CPSAlternateRouteSelecting>
 @property  CPSAlternateRoutesView *alternatesView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSRoutePreviewsCardView .cxx_destruct]
  -[CPSRoutePreviewsCardView preferredFocusEnvironments]
  -[CPSRoutePreviewsCardView _linearFocusItems]
  -[CPSRoutePreviewsCardView alternateRoutesView:didSelectRouteChoice:]
  -[CPSRoutePreviewsCardView initWithTripDelegate:trips:textConfiguration:]
  -[CPSRoutePreviewsCardView setSelectedTrip:]
  -[CPSRoutePreviewsCardView alternatesView]


CPSWindow : UIWindow /System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices
 @property  NSHashTable *observers

  // instance methods
  -[CPSWindow .cxx_destruct]
  -[CPSWindow setObservers:]
  -[CPSWindow observers]
  -[CPSWindow sendEvent:]
  -[CPSWindow _isKeyWindowForDeferral]
  -[CPSWindow addEventObserver:]
  -[CPSWindow removeEventObserver:]


CPSTemplateConnectionManager : NSObject /usr/lib/libSystem.B.dylib <CPSTemplateInstanceDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSTemplateConnectionManager init]
  -[CPSTemplateConnectionManager .cxx_destruct]
  -[CPSTemplateConnectionManager didDisconnectTemplateInstance:]
  -[CPSTemplateConnectionManager _instanceForSceneIdentifier:]
  -[CPSTemplateConnectionManager handleEndpointRequestAction:forSceneIdentifier:]
  -[CPSTemplateConnectionManager viewControllerForSceneIdentifierCreateIfNecessary:]
  -[CPSTemplateConnectionManager updateTemplateInstanceForScene:]
  -[CPSTemplateConnectionManager _listenerEndpointForTestSceneIdentifier:]


CPSHairlineView : UIView /System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices
 @property  long long axis
 @property  NSLayoutConstraint *strokeThicknessConstraint

  // class methods
  +[CPSHairlineView grayHairlineViewAlongAxis:]

  // instance methods
  -[CPSHairlineView .cxx_destruct]
  -[CPSHairlineView axis]
  -[CPSHairlineView intrinsicContentSize]
  -[CPSHairlineView traitCollectionDidChange:]
  -[CPSHairlineView setAxis:]
  -[CPSHairlineView initWithAxis:color:]
  -[CPSHairlineView setStrokeThicknessConstraint:]
  -[CPSHairlineView _updateStrokeThickness]
  -[CPSHairlineView strokeThicknessConstraint]


CPSFullScreenAlertViewController : CPSBaseTemplateViewController <CPSButtonDelegate>
 @property  CPAlertTemplate *alert
 @property  NSArray *alertButtons
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSFullScreenAlertViewController .cxx_destruct]
  -[CPSFullScreenAlertViewController preferredFocusEnvironments]
  -[CPSFullScreenAlertViewController viewWillAppear:]
  -[CPSFullScreenAlertViewController viewWillDisappear:]
  -[CPSFullScreenAlertViewController _titleFont]
  -[CPSFullScreenAlertViewController alert]
  -[CPSFullScreenAlertViewController didSelectButton:]
  -[CPSFullScreenAlertViewController _viewDidLoad]
  -[CPSFullScreenAlertViewController initWithAlert:alertDelegate:]
  -[CPSFullScreenAlertViewController alertButtons]
  -[CPSFullScreenAlertViewController setAlertButtons:]


_CPSFocusHoldingButton : UIButton /System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices

CPSMapTemplateViewController : CPSBaseTemplateViewController <CARSessionObserving, CPSButtonDelegate, CPSTripInitiating, UIGestureRecognizerDelegate, CPSPanEventDelegate, CPSNavigationAlertQueueDelegate, CPSNavigationDisplaying, CARNavigationOwnershipManagerDelegate, CPSEventObserving, CPSApplicationStateObserving, CPSLayoutHelperViewDelegate, BKSHIDEventDeliveryPolicyObserving, CPMapTemplateProviding, CPSLinearFocusProviding>
 @property  UIStackView *trailingBottomStackView
 @property  unsigned long maximumMapButtonCount
 @property  NSMutableArray *mapButtons
 @property  CPSNavigationCardView *navigationCardView
 @property  CPSLayoutHelperView *navigationCardViewLayoutHelperView
 @property  NSLayoutConstraint *navigationCardViewLayoutViewBottomConstraint
 @property  NSLayoutConstraint *navigationCardViewHeightConstraint
 @property  NSLayoutConstraint *navigationCardViewBottomConstraint
 @property  NSLayoutConstraint *navigationCardViewTopConstraint
 @property  CPSTripPreviewsCardView *previewsView
 @property  BOOL previewOnlyRouteChoices
 @property  CARSessionStatus *sessionStatus
 @property  CPSNavigator *navigator
 @property  UITapGestureRecognizer *hideTapGestureRecognizer
 @property  UITapGestureRecognizer *navBarHideTapGestureRecognizer
 @property  UIPanGestureRecognizer *panGestureRecognizer
 @property  NSTimer *autoHideTimer
 @property  BOOL autoHidesNavigationBar
 @property  BOOL hidesButtonsWithNavigationBar
 @property  NSMutableSet *autoHideDisabledReasons
 @property  NSArray *tripPreviews
 @property  CPTripPreviewTextConfiguration *tripPreviewTextConfiguration
 @property  CPSPanViewController *panViewController
 @property  UIView *panContainerView
 @property  NSLayoutConstraint *panContainerLeftConstraint
 @property  NSLayoutConstraint *panContainerRightConstraint
 @property  BOOL demoAutoHideTimerDisabled
 @property  CPSNavigationAlertQueue *navigationAlertQueue
 @property  NSLayoutConstraint *navigationAlertBottomConstraint
 @property  NSLayoutConstraint *navigationAlertHeightConstraint
 @property  BOOL applicationIsFrontmost
 @property  CPSApplicationStateMonitor *applicationStateMonitor
 @property  CPSNavigationETAView *navigationETAView
 @property  CPSLayoutHelperView *navigationETAViewLayoutHelperView
 @property  NSLayoutConstraint *navigationETAViewBottomConstraint
 @property  NSMutableDictionary *lastTravelEstimatesByTrip
 @property  BOOL rightHandDrive
 @property  <CPSSafeAreaDelegate> *safeAreaDelegate
 @property  CPMapTemplate *mapTemplate
 @property  <CPMapClientTemplateDelegate> *mapTemplateDelegate
 @property  <UIFocusItem> *lastFocusedItem
 @property  <UIFocusItem> *itemFocusedBeforeNavAlert
 @property  {CGPoint=dd} lastPanGesturePoint
 @property  UIColor *guidanceBackgroundColor
 @property  unsigned long tripEstimateStyle
 @property  BOOL hasSetTripEstimateStyle
 @property  _CPSFocusHoldingButton *focusHoldingButton
 @property  UIFocusGuide *focusHolderLeftFocusGuide
 @property  UIFocusGuide *focusHolderRightFocusGuide
 @property  BOOL shouldRestoreFocusToNavigationBar
 @property  BKSHIDEventDeliveryPolicyObserver *eventDeliveryPolicyObserver
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSMapTemplateViewController dealloc]
  -[CPSMapTemplateViewController .cxx_destruct]
  -[CPSMapTemplateViewController sessionStatus]
  -[CPSMapTemplateViewController traitCollectionDidChange:]
  -[CPSMapTemplateViewController shouldUpdateFocusInContext:]
  -[CPSMapTemplateViewController didUpdateFocusInContext:withAnimationCoordinator:]
  -[CPSMapTemplateViewController preferredFocusEnvironments]
  -[CPSMapTemplateViewController gestureRecognizer:shouldReceiveTouch:]
  -[CPSMapTemplateViewController viewWillDisappear:]
  -[CPSMapTemplateViewController viewDidAppear:]
  -[CPSMapTemplateViewController panGestureRecognizer]
  -[CPSMapTemplateViewController _handlePanGesture:]
  -[CPSMapTemplateViewController setPanGestureRecognizer:]
  -[CPSMapTemplateViewController _handleTapGesture:]
  -[CPSMapTemplateViewController viewSafeAreaInsetsDidChange]
  -[CPSMapTemplateViewController setSessionStatus:]
  -[CPSMapTemplateViewController observerDeliveryPolicyDidChange:]
  -[CPSMapTemplateViewController rightHandDrive]
  -[CPSMapTemplateViewController _buttons]
  -[CPSMapTemplateViewController sessionDidConnect:]
  -[CPSMapTemplateViewController navigationOwnershipChangedToOwner:]
  -[CPSMapTemplateViewController applicationStateMonitor]
  -[CPSMapTemplateViewController setApplicationStateMonitor:]
  -[CPSMapTemplateViewController mapTemplate]
  -[CPSMapTemplateViewController showManeuvers:usingDisplayStyles:]
  -[CPSMapTemplateViewController setControl:enabled:]
  -[CPSMapTemplateViewController setHostGuidanceBackgroundColor:]
  -[CPSMapTemplateViewController setHostTripEstimateStyle:]
  -[CPSMapTemplateViewController setHostAutoHidesNavigationBar:]
  -[CPSMapTemplateViewController setHostHidesButtonsWithNavigationBar:]
  -[CPSMapTemplateViewController setMapButton:hidden:]
  -[CPSMapTemplateViewController setMapButton:focusedImage:]
  -[CPSMapTemplateViewController hostSetMapButton:imageSet:]
  -[CPSMapTemplateViewController hostSetMapButtons:]
  -[CPSMapTemplateViewController setHostTripPreviews:textConfiguration:previewOnlyRouteChoices:]
  -[CPSMapTemplateViewController hostUpdateTravelEstimates:forTripIdentifier:]
  -[CPSMapTemplateViewController hostStartNavigationSessionForTrip:reply:]
  -[CPSMapTemplateViewController hostSetPanInterfaceVisible:animated:]
  -[CPSMapTemplateViewController hostPanInterfaceVisible:]
  -[CPSMapTemplateViewController showNavigationAlert:animated:]
  -[CPSMapTemplateViewController dismissNavigationAlertAnimated:completion:]
  -[CPSMapTemplateViewController updateNavigationAlert:]
  -[CPSMapTemplateViewController mapButtons]
  -[CPSMapTemplateViewController hidesButtonsWithNavigationBar]
  -[CPSMapTemplateViewController guidanceBackgroundColor]
  -[CPSMapTemplateViewController tripEstimateStyle]
  -[CPSMapTemplateViewController tripPreviews]
  -[CPSMapTemplateViewController setGuidanceBackgroundColor:]
  -[CPSMapTemplateViewController setTripEstimateStyle:]
  -[CPSMapTemplateViewController setHidesButtonsWithNavigationBar:]
  -[CPSMapTemplateViewController setMapButtons:]
  -[CPSMapTemplateViewController didSelectButton:]
  -[CPSMapTemplateViewController _viewDidLoad]
  -[CPSMapTemplateViewController _linearFocusItems]
  -[CPSMapTemplateViewController initWithMapTemplate:templateDelegate:safeAreaDelegate:applicationStateMonitor:]
  -[CPSMapTemplateViewController applicationStateMonitor:didBecomeActive:]
  -[CPSMapTemplateViewController panWithDirection:]
  -[CPSMapTemplateViewController panBeganWithDirection:]
  -[CPSMapTemplateViewController panEndedWithDirection:]
  -[CPSMapTemplateViewController navigator:pausedTripForReason:description:]
  -[CPSMapTemplateViewController navigator:didEndTrip:]
  -[CPSMapTemplateViewController updateEstimates:forManeuver:]
  -[CPSMapTemplateViewController didChangeLayout:]
  -[CPSMapTemplateViewController _buttonForIdentifier:]
  -[CPSMapTemplateViewController navigationAlertQueue:shouldDisplayAlertView:animated:]
  -[CPSMapTemplateViewController navigationAlertQueue:shouldRemoveAlertView:animated:dismissalContext:]
  -[CPSMapTemplateViewController canAnimateNavigationAlert]
  -[CPSMapTemplateViewController tripView:startedTrip:routeChoice:]
  -[CPSMapTemplateViewController tripView:selectedTrip:routeChoice:]
  -[CPSMapTemplateViewController shouldForwardEventForWindow:eventType:]
  -[CPSMapTemplateViewController navigationAlertQueue]
  -[CPSMapTemplateViewController eventDeliveryPolicyObserver]
  -[CPSMapTemplateViewController navigationCardView]
  -[CPSMapTemplateViewController hasSetTripEstimateStyle]
  -[CPSMapTemplateViewController navigationETAView]
  -[CPSMapTemplateViewController _updatePanGestureForHiFiTouch]
  -[CPSMapTemplateViewController setHasSetTripEstimateStyle:]
  -[CPSMapTemplateViewController setTrailingBottomStackView:]
  -[CPSMapTemplateViewController _updateMapButtonsWithButtons:]
  -[CPSMapTemplateViewController _reloadPreviewsView]
  -[CPSMapTemplateViewController setHideTapGestureRecognizer:]
  -[CPSMapTemplateViewController setNavBarHideTapGestureRecognizer:]
  -[CPSMapTemplateViewController _nightModeChanged:]
  -[CPSMapTemplateViewController _resetAutoHideTimerAndShowBarAnimated:allowFocusDeferral:]
  -[CPSMapTemplateViewController setPanViewController:]
  -[CPSMapTemplateViewController setPanContainerLeftConstraint:]
  -[CPSMapTemplateViewController setPanContainerRightConstraint:]
  -[CPSMapTemplateViewController panContainerLeftConstraint]
  -[CPSMapTemplateViewController panContainerRightConstraint]
  -[CPSMapTemplateViewController setPanContainerView:]
  -[CPSMapTemplateViewController _handleFocusHolderSelect]
  -[CPSMapTemplateViewController setFocusHoldingButton:]
  -[CPSMapTemplateViewController setFocusHolderLeftFocusGuide:]
  -[CPSMapTemplateViewController setFocusHolderRightFocusGuide:]
  -[CPSMapTemplateViewController focusHolderLeftFocusGuide]
  -[CPSMapTemplateViewController focusHoldingButton]
  -[CPSMapTemplateViewController focusHolderRightFocusGuide]
  -[CPSMapTemplateViewController _updateSafeArea]
  -[CPSMapTemplateViewController maximumMapButtonCount]
  -[CPSMapTemplateViewController setMaximumMapButtonCount:]
  -[CPSMapTemplateViewController _updateMapButtonVisibility]
  -[CPSMapTemplateViewController trailingBottomStackView]
  -[CPSMapTemplateViewController _setFocusHoldersEnabled:]
  -[CPSMapTemplateViewController _setAutoHideDisabled:forRequester:]
  -[CPSMapTemplateViewController navBarHideTapGestureRecognizer]
  -[CPSMapTemplateViewController autoHideTimer]
  -[CPSMapTemplateViewController setAutoHideTimer:]
  -[CPSMapTemplateViewController previewsView]
  -[CPSMapTemplateViewController previewOnlyRouteChoices]
  -[CPSMapTemplateViewController tripPreviewTextConfiguration]
  -[CPSMapTemplateViewController setPreviewsView:]
  -[CPSMapTemplateViewController setLastFocusedItem:]
  -[CPSMapTemplateViewController hideTapGestureRecognizer]
  -[CPSMapTemplateViewController navigator]
  -[CPSMapTemplateViewController navigationAlertBottomConstraint]
  -[CPSMapTemplateViewController setNavigationAlertBottomConstraint:]
  -[CPSMapTemplateViewController navigationAlertHeightConstraint]
  -[CPSMapTemplateViewController setNavigationAlertHeightConstraint:]
  -[CPSMapTemplateViewController _performAlertSizingForAlert:animated:]
  -[CPSMapTemplateViewController navigationCardViewLayoutViewBottomConstraint]
  -[CPSMapTemplateViewController navigationCardViewLayoutHelperView]
  -[CPSMapTemplateViewController setNavigationCardViewLayoutViewBottomConstraint:]
  -[CPSMapTemplateViewController navigationETAViewBottomConstraint]
  -[CPSMapTemplateViewController lastFocusedItem]
  -[CPSMapTemplateViewController setItemFocusedBeforeNavAlert:]
  -[CPSMapTemplateViewController setShouldRestoreFocusToNavigationBar:]
  -[CPSMapTemplateViewController mapTemplateDelegate]
  -[CPSMapTemplateViewController _setNavigationAlertView:visible:animated:completion:]
  -[CPSMapTemplateViewController itemFocusedBeforeNavAlert]
  -[CPSMapTemplateViewController setNavigationCardView:]
  -[CPSMapTemplateViewController setNavigationCardViewLayoutHelperView:]
  -[CPSMapTemplateViewController setNavigationCardViewTopConstraint:]
  -[CPSMapTemplateViewController setNavigationCardViewBottomConstraint:]
  -[CPSMapTemplateViewController navigationCardViewTopConstraint]
  -[CPSMapTemplateViewController navigationCardViewBottomConstraint]
  -[CPSMapTemplateViewController navigationETAViewLayoutHelperView]
  -[CPSMapTemplateViewController setNavigationETAView:]
  -[CPSMapTemplateViewController setNavigationETAViewBottomConstraint:]
  -[CPSMapTemplateViewController setNavigationETAViewLayoutHelperView:]
  -[CPSMapTemplateViewController setNavigator:]
  -[CPSMapTemplateViewController lastTravelEstimatesByTrip]
  -[CPSMapTemplateViewController _tripDidBegin:withEstimates:forIdentifier:]
  -[CPSMapTemplateViewController _setPanInterfaceVisible:animated:]
  -[CPSMapTemplateViewController panContainerView]
  -[CPSMapTemplateViewController autoHideDisabledReasons]
  -[CPSMapTemplateViewController autoHidesNavigationBar]
  -[CPSMapTemplateViewController setAutoHideDisabledReasons:]
  -[CPSMapTemplateViewController _showBarAnimated:allowFocusDeferral:]
  -[CPSMapTemplateViewController _isAutoHideEnabled]
  -[CPSMapTemplateViewController demoAutoHideTimerDisabled]
  -[CPSMapTemplateViewController _hideBar:]
  -[CPSMapTemplateViewController _setButtonsHidden:animated:]
  -[CPSMapTemplateViewController shouldRestoreFocusToNavigationBar]
  -[CPSMapTemplateViewController setLastPanGesturePoint:]
  -[CPSMapTemplateViewController lastPanGesturePoint]
  -[CPSMapTemplateViewController _addPanControllerAsChild]
  -[CPSMapTemplateViewController _updateInterestingArea]
  -[CPSMapTemplateViewController _setMaximumVisibleMapButtons:]
  -[CPSMapTemplateViewController _removePanController]
  -[CPSMapTemplateViewController panViewController]
  -[CPSMapTemplateViewController _navBarInsets]
  -[CPSMapTemplateViewController _mapButtonsEdgeInsets]
  -[CPSMapTemplateViewController safeAreaDelegate]
  -[CPSMapTemplateViewController _cardViewEdgeInsets]
  -[CPSMapTemplateViewController _previewEdgeInsets]
  -[CPSMapTemplateViewController _navigationAlertInsets]
  -[CPSMapTemplateViewController navigationCardViewHeightConstraint]
  -[CPSMapTemplateViewController setNavigationCardViewHeightConstraint:]
  -[CPSMapTemplateViewController setPreviewOnlyRouteChoices:]
  -[CPSMapTemplateViewController setAutoHidesNavigationBar:]
  -[CPSMapTemplateViewController setTripPreviews:]
  -[CPSMapTemplateViewController setTripPreviewTextConfiguration:]
  -[CPSMapTemplateViewController setDemoAutoHideTimerDisabled:]
  -[CPSMapTemplateViewController setNavigationAlertQueue:]
  -[CPSMapTemplateViewController applicationIsFrontmost]
  -[CPSMapTemplateViewController setApplicationIsFrontmost:]
  -[CPSMapTemplateViewController setLastTravelEstimatesByTrip:]
  -[CPSMapTemplateViewController setRightHandDrive:]
  -[CPSMapTemplateViewController setSafeAreaDelegate:]
  -[CPSMapTemplateViewController setEventDeliveryPolicyObserver:]


CPSManeuverView : CPSInheritedBackgroundColorView
 @property  CPManeuver *representedManeuver
 @property  long long style
 @property  CPTravelEstimates *currentTravelEstimates
 @property  unsigned long guidanceStyle

  // instance methods
  -[CPSManeuverView .cxx_destruct]
  -[CPSManeuverView style]
  -[CPSManeuverView setStyle:]
  -[CPSManeuverView setCurrentTravelEstimates:]
  -[CPSManeuverView currentTravelEstimates]
  -[CPSManeuverView guidanceStyle]
  -[CPSManeuverView initWithManeuver:style:]
  -[CPSManeuverView accessibilityName:]
  -[CPSManeuverView representedManeuver]
  -[CPSManeuverView setGuidanceStyle:]


CPSPrimaryManeuverView : CPSManeuverView
 @property  CPSAbridgableLabel *distanceLabel
 @property  UIImageView *symbolView
 @property  CPManeuver *maneuver
 @property  CPSAbridgableLabel *titleLabel
 @property  CPSAbridgableLabel *instructionLabel
 @property  UIImageView *junctionImageView
 @property  BOOL usesWideImage

  // instance methods
  -[CPSPrimaryManeuverView .cxx_destruct]
  -[CPSPrimaryManeuverView intrinsicContentSize]
  -[CPSPrimaryManeuverView titleLabel]
  -[CPSPrimaryManeuverView traitCollectionDidChange:]
  -[CPSPrimaryManeuverView setTitleLabel:]
  -[CPSPrimaryManeuverView distanceLabel]
  -[CPSPrimaryManeuverView maneuver]
  -[CPSPrimaryManeuverView setManeuver:]
  -[CPSPrimaryManeuverView instructionLabel]
  -[CPSPrimaryManeuverView _cleanupViews]
  -[CPSPrimaryManeuverView setInstructionLabel:]
  -[CPSPrimaryManeuverView backgroundColorDidChange]
  -[CPSPrimaryManeuverView setCurrentTravelEstimates:]
  -[CPSPrimaryManeuverView initWithManeuver:style:]
  -[CPSPrimaryManeuverView _layoutMaxSize]
  -[CPSPrimaryManeuverView _layoutLevelNoInstruction]
  -[CPSPrimaryManeuverView _layoutRemoveJunctionView]
  -[CPSPrimaryManeuverView _layoutMin]
  -[CPSPrimaryManeuverView symbolView]
  -[CPSPrimaryManeuverView junctionImageView]
  -[CPSPrimaryManeuverView setJunctionImageView:]
  -[CPSPrimaryManeuverView _maneuverSymbolImage]
  -[CPSPrimaryManeuverView setUsesWideImage:]
  -[CPSPrimaryManeuverView _formattedDistance]
  -[CPSPrimaryManeuverView usesWideImage]
  -[CPSPrimaryManeuverView setManeuverViewSize:]
  -[CPSPrimaryManeuverView setSymbolView:]


CPSSecondaryManeuverView : CPSManeuverView
 @property  UIImageView *symbolView
 @property  CPManeuver *maneuver
 @property  CPSAbridgableLabel *instructionLabel

  // instance methods
  -[CPSSecondaryManeuverView .cxx_destruct]
  -[CPSSecondaryManeuverView intrinsicContentSize]
  -[CPSSecondaryManeuverView maneuver]
  -[CPSSecondaryManeuverView setManeuver:]
  -[CPSSecondaryManeuverView instructionLabel]
  -[CPSSecondaryManeuverView setInstructionLabel:]
  -[CPSSecondaryManeuverView backgroundColorDidChange]
  -[CPSSecondaryManeuverView initWithManeuver:style:]
  -[CPSSecondaryManeuverView symbolView]
  -[CPSSecondaryManeuverView setSymbolView:]


CPSUpcomingManeuversCardView : CPSInheritedBackgroundColorView <CPSNavigationDisplaying>
 @property  NSArray *maneuvers
 @property  NSMutableDictionary *currentTravelEstimatesForManeuverIdentifiers
 @property  NSArray *maneuverStyles
 @property  NSMutableArray *maneuverViewStack
 @property  NSMutableArray *verticalConstraints
 @property  CPSHairlineView *hairlineView
 @property  BOOL saveManeuversToDisk
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSUpcomingManeuversCardView init]
  -[CPSUpcomingManeuversCardView .cxx_destruct]
  -[CPSUpcomingManeuversCardView intrinsicContentSize]
  -[CPSUpcomingManeuversCardView layoutSubviews]
  -[CPSUpcomingManeuversCardView verticalConstraints]
  -[CPSUpcomingManeuversCardView hairlineView]
  -[CPSUpcomingManeuversCardView showManeuvers:usingDisplayStyles:]
  -[CPSUpcomingManeuversCardView backgroundColorDidChange]
  -[CPSUpcomingManeuversCardView updateEstimates:forManeuver:]
  -[CPSUpcomingManeuversCardView maneuverViewStack]
  -[CPSUpcomingManeuversCardView maneuvers]
  -[CPSUpcomingManeuversCardView maneuverStyles]
  -[CPSUpcomingManeuversCardView _maneuverViews]
  -[CPSUpcomingManeuversCardView _updateVerticalConstraints]
  -[CPSUpcomingManeuversCardView currentTravelEstimatesForManeuverIdentifiers]
  -[CPSUpcomingManeuversCardView setCurrentTravelEstimatesForManeuverIdentifiers:]
  -[CPSUpcomingManeuversCardView _clearManeuvers]
  -[CPSUpcomingManeuversCardView saveManeuversToDisk]
  -[CPSUpcomingManeuversCardView _resetToFull]
  -[CPSUpcomingManeuversCardView setSaveManeuversToDisk:]


CPSBarButtonItem : UIBarButtonItem /System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices <CPSButtonDelegate>
 @property  NSUUID *identifier
 @property  <CPSButtonDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSBarButtonItem setEnabled:]
  -[CPSBarButtonItem delegate]
  -[CPSBarButtonItem setDelegate:]
  -[CPSBarButtonItem .cxx_destruct]
  -[CPSBarButtonItem identifier]
  -[CPSBarButtonItem setTitle:]
  -[CPSBarButtonItem setImage:]
  -[CPSBarButtonItem didSelectButton:]
  -[CPSBarButtonItem initWithCPBarButton:]
  -[CPSBarButtonItem _initWithCPBarButton:showBackIndicator:]


CPSBarBackButtonItem : CPSBarButtonItem
  // instance methods
  -[CPSBarBackButtonItem initWithCPBarButton:]


CPSBarButton : CPSButton
 @property  CPBarButton *cyBarButton
 @property  BOOL showBackIndicator
 @property  UIImageView *backIndicatorImageView
 @property  UIImage *backIndicatorImage
 @property  UIView *backgroundView
 @property  NSLayoutConstraint *backIndicatorHeightConstraint

  // class methods
  +[CPSBarButton buttonWithCPBarButton:showBackIndicator:]

  // instance methods
  -[CPSBarButton .cxx_destruct]
  -[CPSBarButton intrinsicContentSize]
  -[CPSBarButton traitCollectionDidChange:]
  -[CPSBarButton backgroundView]
  -[CPSBarButton didUpdateFocusInContext:withAnimationCoordinator:]
  -[CPSBarButton sizeThatFits:]
  -[CPSBarButton touchesBegan:withEvent:]
  -[CPSBarButton touchesEnded:withEvent:]
  -[CPSBarButton touchesCancelled:withEvent:]
  -[CPSBarButton didAddSubview:]
  -[CPSBarButton backIndicatorImage]
  -[CPSBarButton _externalUnfocusedBorderColor]
  -[CPSBarButton hitTest:withEvent:]
  -[CPSBarButton setBackIndicatorImage:]
  -[CPSBarButton setBackgroundView:]
  -[CPSBarButton setShowBackIndicator:]
  -[CPSBarButton setCyBarButton:]
  -[CPSBarButton showBackIndicator]
  -[CPSBarButton setBackIndicatorImageView:]
  -[CPSBarButton backIndicatorImageView]
  -[CPSBarButton _setupBackButtonImagesIfNeccessary]
  -[CPSBarButton _updateBackIndicatorImageView]
  -[CPSBarButton backIndicatorHeightConstraint]
  -[CPSBarButton setBackIndicatorHeightConstraint:]
  -[CPSBarButton cyBarButton]
  -[CPSBarButton _resetAlpha]


CPSBannerSource : NSObject /usr/lib/libSystem.B.dylib <CPSBannerItemDelegate, SBUIBannerTargetManagerObserver, CPBannerProviding, SBUIBannerSource, CPSApplicationStateObserving>
 @property  NSMutableArray *queuedItems
 @property  <SBUIBannerTarget> *bannerTarget
 @property  UIView<SBUIBannerView> *displayedBannerView
 @property  NSTimer *dimissTimer
 @property  BOOL applicationActive
 @property  BOOL rateLimited
 @property  NSUUID *lastUserDismissedIdentifier
 @property  NSTimer *lastUserDismissedIdentifierResetTimer
 @property  <CPSBannerSourceDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSBannerSource delegate]
  -[CPSBannerSource setDelegate:]
  -[CPSBannerSource .cxx_destruct]
  -[CPSBannerSource initWithDelegate:]
  -[CPSBannerSource _flushQueue]
  -[CPSBannerSource queuedItems]
  -[CPSBannerSource setQueuedItems:]
  -[CPSBannerSource bannerTargetManager:didAddTarget:]
  -[CPSBannerSource bannerTargetManager:didRemoveTarget:]
  -[CPSBannerSource peekNextBannerItemForTarget:]
  -[CPSBannerSource dequeueNextBannerItemForTarget:]
  -[CPSBannerSource setApplicationActive:]
  -[CPSBannerSource isApplicationActive]
  -[CPSBannerSource postBannerForManeuver:travelEstimates:]
  -[CPSBannerSource postBannerForNavigationAlert:]
  -[CPSBannerSource sceneActivationStateChangedTo:]
  -[CPSBannerSource bannerTappedWithIdentifier:]
  -[CPSBannerSource _enqueueBannerItem:]
  -[CPSBannerSource displayedBannerView]
  -[CPSBannerSource _resetDismissTimer]
  -[CPSBannerSource bannerTarget]
  -[CPSBannerSource lastUserDismissedIdentifier]
  -[CPSBannerSource isRateLimited]
  -[CPSBannerSource setRateLimited:]
  -[CPSBannerSource setBannerTarget:]
  -[CPSBannerSource setDisplayedBannerView:]
  -[CPSBannerSource setLastUserDismissedIdentifier:]
  -[CPSBannerSource _resetLastUserDismissedIdentifierTimer]
  -[CPSBannerSource dimissTimer]
  -[CPSBannerSource _dismissTimerFired:]
  -[CPSBannerSource setDimissTimer:]
  -[CPSBannerSource lastUserDismissedIdentifierResetTimer]
  -[CPSBannerSource _resetLastUserDismissedIdentifierTimerFired:]
  -[CPSBannerSource setLastUserDismissedIdentifierResetTimer:]
  -[CPSBannerSource newBannerViewForContext:]
  -[CPSBannerSource bannerViewWillAppear:]
  -[CPSBannerSource bannerViewDidAppear:]
  -[CPSBannerSource bannerViewWillDismiss:forReason:]
  -[CPSBannerSource bannerViewDidDismiss:forReason:]


CPSNavigationCardView : UIView /System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices <CPSNavigationDisplaying>
 @property  CPSUpcomingManeuversCardView *maneuversView
 @property  CPSPausedCardView *pausedView
 @property  UIColor *guidanceBackgroundColor
 @property  CPSCardPlatterView *platterView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSNavigationCardView .cxx_destruct]
  -[CPSNavigationCardView intrinsicContentSize]
  -[CPSNavigationCardView layoutSubviews]
  -[CPSNavigationCardView invalidateIntrinsicContentSize]
  -[CPSNavigationCardView platterView]
  -[CPSNavigationCardView hasContent]
  -[CPSNavigationCardView initWithBackgroundColor:]
  -[CPSNavigationCardView showManeuvers:usingDisplayStyles:]
  -[CPSNavigationCardView guidanceBackgroundColor]
  -[CPSNavigationCardView setGuidanceBackgroundColor:]
  -[CPSNavigationCardView navigator:pausedTripForReason:description:]
  -[CPSNavigationCardView updateEstimates:forManeuver:]
  -[CPSNavigationCardView maneuversView]
  -[CPSNavigationCardView pausedView]
  -[CPSNavigationCardView setManeuversView:]
  -[CPSNavigationCardView _showManeuversView]
  -[CPSNavigationCardView _showPausedViewForReason:description:]


CPSBannerView : UIView /System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices <SBUIBannerView>
 @property  SBUIBannerContext *bannerContext
 @property  CPSBannerItem *bannerItem
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSBannerView .cxx_destruct]
  -[CPSBannerView initWithContext:]
  -[CPSBannerView bannerItem]
  -[CPSBannerView applicationIconImage]
  -[CPSBannerView updateBannerWithBannerItem:]
  -[CPSBannerView bannerContext]
  -[CPSBannerView setBannerItem:]
  -[CPSBannerView setBannerContext:]


CPSNavigationBar : UINavigationBar /System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices <CPSLinearFocusProviding>
 @property  NSMapTable *lastFocusedItems
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSNavigationBar .cxx_destruct]
  -[CPSNavigationBar initWithFrame:]
  -[CPSNavigationBar didUpdateFocusInContext:withAnimationCoordinator:]
  -[CPSNavigationBar preferredFocusEnvironments]
  -[CPSNavigationBar didMoveToSuperview]
  -[CPSNavigationBar popNavigationItemAnimated:]
  -[CPSNavigationBar _linearFocusItems]
  -[CPSNavigationBar lastFocusedItems]
  -[CPSNavigationBar setLastFocusedItems:]


CPSDataSource : NSObject /usr/lib/libSystem.B.dylib <CPListDataSource, UITableViewDataSource>
 @property  UITableView *tableView
 @property  long long rowAnimation
 @property  @? cellConfigureBlock
 @property  Class cellClass
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  long long numberOfSections
 @property  NSArray *items

  // instance methods
  -[CPSDataSource init]
  -[CPSDataSource .cxx_destruct]
  -[CPSDataSource items]
  -[CPSDataSource tableView]
  -[CPSDataSource reloadData]
  -[CPSDataSource numberOfSections]
  -[CPSDataSource numberOfItemsInSection:]
  -[CPSDataSource tableView:numberOfRowsInSection:]
  -[CPSDataSource tableView:cellForRowAtIndexPath:]
  -[CPSDataSource numberOfSectionsInTableView:]
  -[CPSDataSource tableView:canEditRowAtIndexPath:]
  -[CPSDataSource tableView:canMoveRowAtIndexPath:]
  -[CPSDataSource insertItemsAtIndexPaths:]
  -[CPSDataSource reloadItemsAtIndexPaths:]
  -[CPSDataSource deleteItemsAtIndexPaths:]
  -[CPSDataSource moveItemAtIndexPath:toIndexPath:]
  -[CPSDataSource setTableView:]
  -[CPSDataSource cellClass]
  -[CPSDataSource itemAtIndexPath:]
  -[CPSDataSource insertSectionsAtIndexes:]
  -[CPSDataSource deleteSectionsAtIndexes:]
  -[CPSDataSource setCellClass:]
  -[CPSDataSource cellConfigureBlock]
  -[CPSDataSource setCellConfigureBlock:]
  -[CPSDataSource rowAnimation]
  -[CPSDataSource setRowAnimation:]


CPSAlertButton : CPSButton
  // class methods
  +[CPSAlertButton buttonWithCPAlertAction:]

  // instance methods
  -[CPSAlertButton traitCollectionDidChange:]
  -[CPSAlertButton _externalUnfocusedBorderColor]
  -[CPSAlertButton _buttonFont]


CPAlertAction(UIKitBridging)
	// instance methods
	-[CPAlertAction(UIKitBridging) alertActionRepresentationWithHandler:]

CPActionSheetTemplate(UIKitBridging)
	// instance methods
	-[CPActionSheetTemplate(UIKitBridging) alertControllerRepresentation]

UIViewController(CPSBaseTemplateViewController)
	// instance methods
	-[UIViewController(CPSBaseTemplateViewController) _cps_viewControllerWasPopped]

NSArray(CPSUtilities)
	// instance methods
	-[NSArray(CPSUtilities) cps_map:]

NSDictionary(CPSUtilities)
	// instance methods
	-[NSDictionary(CPSUtilities) cps_mutableDictionaryWithValuesForKeys:]

NSXPCConnection(CPSBundleHelpers)
	// instance methods
	-[NSXPCConnection(CPSBundleHelpers) cp_bundleIdentifier]

UIButton(CarPlaySupport)
	// instance methods
	-[UIButton(CarPlaySupport) cps_setBackgroundColor:forState:]

01 00 0300 /System/Library/PrivateFrameworks/BackBoardServices.framework/BackBoardServices: BKSHIDEventDeferringEnvironment 
01 00 0300 /System/Library/PrivateFrameworks/BackBoardServices.framework/BackBoardServices: BKSHIDEventDeliveryPolicyObserver 
01 00 0700 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: BSActionResponse 
01 00 0700 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: BSDispatchQueueAttributes 
01 00 0700 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: BSMutableSettings 
01 00 0700 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: BSObjCProtocol 
01 00 0700 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: BSServiceConnection 
01 00 0700 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: BSServiceConnectionEndpoint 
01 00 0700 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: BSServiceConnectionListener 
01 00 0700 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: BSServiceInterface 
01 00 0700 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: BSServiceQuality 
01 00 0d00 /System/Library/PrivateFrameworks/CarKit.framework/CarKit: CARNavigationOwnershipManager 
01 00 0d00 /System/Library/PrivateFrameworks/CarKit.framework/CarKit: CARObserverHashTable 
01 00 0d00 /System/Library/PrivateFrameworks/CarKit.framework/CarKit: CARSessionStatus 
01 00 0900 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransaction 
01 00 0f00 /System/Library/Frameworks/Contacts.framework/Contacts: CNPostalAddressFormatter 
01 00 1000 /System/Library/Frameworks/CarPlay.framework/CarPlay: CPActionSheetTemplate 
01 00 1000 /System/Library/Frameworks/CarPlay.framework/CarPlay: CPAlertAction 
01 00 1000 /System/Library/Frameworks/CarPlay.framework/CarPlay: CPAlertTemplate 
01 00 1000 /System/Library/Frameworks/CarPlay.framework/CarPlay: CPBarButton 
01 00 1000 /System/Library/Frameworks/CarPlay.framework/CarPlay: CPEndpointListenerWrapper 
01 00 1000 /System/Library/Frameworks/CarPlay.framework/CarPlay: CPGridTemplate 
01 00 1000 /System/Library/Frameworks/CarPlay.framework/CarPlay: CPInterfaceController 
01 00 1000 /System/Library/Frameworks/CarPlay.framework/CarPlay: CPListItem 
01 00 1000 /System/Library/Frameworks/CarPlay.framework/CarPlay: CPListSection 
01 00 1000 /System/Library/Frameworks/CarPlay.framework/CarPlay: CPListTemplate 
01 00 1000 /System/Library/Frameworks/CarPlay.framework/CarPlay: CPMapTemplate 
01 00 1000 /System/Library/Frameworks/CarPlay.framework/CarPlay: CPSearchTemplate 
01 00 1000 /System/Library/Frameworks/CarPlay.framework/CarPlay: CPSessionConfiguration 
01 00 1000 /System/Library/Frameworks/CarPlay.framework/CarPlay: CPVoiceControlTemplate 
01 00 0200 /System/Library/PrivateFrameworks/NetAppsUtilities.framework/NetAppsUtilities: NAFuture 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 1a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 1a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateComponentsFormatter 
01 00 1a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 1a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexSet 
01 00 1a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 1a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSLayoutConstraint 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 1a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 1a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMeasurement 
01 00 1a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMeasurementFormatter 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableAttributedString 
01 00 1a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableCharacterSet 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: NSMutableParagraphStyle 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 1a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 1b00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: NSStringDrawingContext 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: NSTextAttachment 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 1a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUnitLength 
01 00 1a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 1a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListener 
01 00 1a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListenerEndpoint 
01 00 0100 /System/Library/PrivateFrameworks/SpringBoardUI.framework/SpringBoardUI: SBUIBannerItem 
01 00 0100 /System/Library/PrivateFrameworks/SpringBoardUI.framework/SpringBoardUI: SBUIBannerTargetManager 
01 00 0100 /System/Library/PrivateFrameworks/SpringBoardUI.framework/SpringBoardUI: SBUIStarkBannerViewButton 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivityIndicatorView 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertAction 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertController 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UIBarButtonItem 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UIButton 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UIFocusContainerGuide 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UIFocusGuide 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UIFocusSystem 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UIFontDescriptor 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageSymbolConfiguration 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UILabel 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UILayoutGuide 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UILongPressGestureRecognizer 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationBar 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationController 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UIPanGestureRecognizer 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UISearchContainerViewController 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UISearchController 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UIStackView 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UITableView 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewCell 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewHeaderFooterView 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UITapGestureRecognizer 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: UIWindow 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: _UIFocusLinearMovementSequence 
01 00 1400 /System/Library/Frameworks/UIKit.framework/UIKit: _UIFocusUpdateRequest 
