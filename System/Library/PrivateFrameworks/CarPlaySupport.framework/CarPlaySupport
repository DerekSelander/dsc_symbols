|| __DATA.__data _CPSAvatarSize
|| __DATA.__objc_data _OBJC_CLASS_$_CPSAbridgableLabel
|| __DATA.__objc_data _OBJC_CLASS_$_CPSActionButton
|| __DATA.__objc_data _OBJC_CLASS_$_CPSActionsViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CPSAlertButton
|| __DATA.__objc_data _OBJC_CLASS_$_CPSAlternateRoutesView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSAnalytics
|| __DATA.__objc_data _OBJC_CLASS_$_CPSApplicationStateMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_CPSAspectFitImageView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSAudioPlaybackManager
|| __DATA.__objc_data _OBJC_CLASS_$_CPSAvatarViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CPSBannerItem
|| __DATA.__objc_data _OBJC_CLASS_$_CPSBannerSource
|| __DATA.__objc_data _OBJC_CLASS_$_CPSBannerView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSBannerViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CPSBarBackButtonItem
|| __DATA.__objc_data _OBJC_CLASS_$_CPSBarButton
|| __DATA.__objc_data _OBJC_CLASS_$_CPSBarButtonItem
|| __DATA.__objc_data _OBJC_CLASS_$_CPSBaseEntityContentViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CPSBaseTemplateViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CPSButton
|| __DATA.__objc_data _OBJC_CLASS_$_CPSCardPlatterView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSContactEntityViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CPSDashboardEstimatesView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSDashboardEstimatesViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CPSDashboardGuidanceViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CPSDashboardItemView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSDashboardManeuversCardView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSDashboardPrimaryManeuverView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSDashboardSecondaryManeuverView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_CPSEmptyView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSEntityButton
|| __DATA.__objc_data _OBJC_CLASS_$_CPSEntityMapButton
|| __DATA.__objc_data _OBJC_CLASS_$_CPSEntityResourceProvider
|| __DATA.__objc_data _OBJC_CLASS_$_CPSEntityStyles
|| __DATA.__objc_data _OBJC_CLASS_$_CPSEntityStylesDropShadow
|| __DATA.__objc_data _OBJC_CLASS_$_CPSEntityUtility
|| __DATA.__objc_data _OBJC_CLASS_$_CPSEntityViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CPSFullScreenAlertViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CPSGridButton
|| __DATA.__objc_data _OBJC_CLASS_$_CPSGridTemplateView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSGridTemplateViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CPSGuidanceBannerView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSHairlineBorderedView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSHairlineView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSHidingLabel
|| __DATA.__objc_data _OBJC_CLASS_$_CPSImageRowCell
|| __DATA.__objc_data _OBJC_CLASS_$_CPSInformationEntityViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CPSInformationScrollView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSInformationTemplateButtonsViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CPSInformationTemplateFocusableView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSInvisibleButton
|| __DATA.__objc_data _OBJC_CLASS_$_CPSLabeledValueView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSLayoutHelperView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSListTemplateViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CPSManeuversCardView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSMapButton
|| __DATA.__objc_data _OBJC_CLASS_$_CPSMapTemplateViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CPSMessageCell
|| __DATA.__objc_data _OBJC_CLASS_$_CPSMultilineLabel
|| __DATA.__objc_data _OBJC_CLASS_$_CPSMultilineLabelConfig
|| __DATA.__objc_data _OBJC_CLASS_$_CPSNameViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CPSNavigationAlertButtonView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSNavigationAlertFocusButton
|| __DATA.__objc_data _OBJC_CLASS_$_CPSNavigationAlertProgressView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSNavigationAlertQueue
|| __DATA.__objc_data _OBJC_CLASS_$_CPSNavigationAlertView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSNavigationBar
|| __DATA.__objc_data _OBJC_CLASS_$_CPSNavigationCardViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CPSNavigationETAView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSNavigator
|| __DATA.__objc_data _OBJC_CLASS_$_CPSNowPlayingViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CPSOverlayViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CPSPagingControlButton
|| __DATA.__objc_data _OBJC_CLASS_$_CPSPagingControlView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSPagingTripPreviewsCardView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSPanButton
|| __DATA.__objc_data _OBJC_CLASS_$_CPSPanView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSPanViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CPSPausedCardView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSPointOfInterestAnnotation
|| __DATA.__objc_data _OBJC_CLASS_$_CPSPointOfInterestAnnotationView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSPointOfInterestClusterAnnotation
|| __DATA.__objc_data _OBJC_CLASS_$_CPSPointOfInterestClusterView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSPointsOfInterestEntityViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CPSPointsOfInterestMapControlsViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CPSPointsOfInterestMapViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CPSPointsOfInterestPickerCell
|| __DATA.__objc_data _OBJC_CLASS_$_CPSPointsOfInterestPickerExtendedCell
|| __DATA.__objc_data _OBJC_CLASS_$_CPSPointsOfInterestPickerInfoView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSPointsOfInterestPickerViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CPSPointsOfInterestTableView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSPrimaryManeuverLayoutConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_CPSPrimaryManeuverView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSRatingView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSRouteEstimatesView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSRouteOverviewView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSRoutePreviewsCardView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSRouteRowView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSSearchTemplateViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CPSSecondaryManeuverView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSSectionedDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_CPSStyledTextButton
|| __DATA.__objc_data _OBJC_CLASS_$_CPSTabBarViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CPSTableCell
|| __DATA.__objc_data _OBJC_CLASS_$_CPSTableView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSTemplateEnvironment
|| __DATA.__objc_data _OBJC_CLASS_$_CPSTemplateInstance
|| __DATA.__objc_data _OBJC_CLASS_$_CPSTravelEstimatesStringFormatter
|| __DATA.__objc_data _OBJC_CLASS_$_CPSTravelEstimatesStrings
|| __DATA.__objc_data _OBJC_CLASS_$_CPSTripPreviewsCardView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_CPSVoiceTemplateViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CPSVoiceView
|| __DATA.__objc_data _OBJC_CLASS_$_CPSWindow
|| __DATA.__objc_data _OBJC_CLASS_$__CPSFocusHoldingButton
|| __DATA.__objc_data _OBJC_CLASS_$__CPSNudgeLongPressGestureRecognizer
|| __DATA.__objc_data _OBJC_CLASS_$__CPSNudgeTapGestureRecognizer
|| __DATA.__objc_data _OBJC_CLASS_$__CPSOverlayTouchBlockingView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSAbridgableLabel
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSActionButton
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSActionsViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSAlertButton
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSAlternateRoutesView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSAnalytics
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSApplicationStateMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSAspectFitImageView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSAudioPlaybackManager
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSAvatarViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSBannerItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSBannerSource
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSBannerView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSBannerViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSBarBackButtonItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSBarButton
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSBarButtonItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSBaseEntityContentViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSBaseTemplateViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSButton
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSCardPlatterView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSContactEntityViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSDashboardEstimatesView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSDashboardEstimatesViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSDashboardGuidanceViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSDashboardItemView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSDashboardManeuversCardView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSDashboardPrimaryManeuverView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSDashboardSecondaryManeuverView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSEmptyView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSEntityButton
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSEntityMapButton
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSEntityResourceProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSEntityStyles
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSEntityStylesDropShadow
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSEntityUtility
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSEntityViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSFullScreenAlertViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSGridButton
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSGridTemplateView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSGridTemplateViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSGuidanceBannerView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSHairlineBorderedView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSHairlineView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSHidingLabel
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSImageRowCell
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSInformationEntityViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSInformationScrollView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSInformationTemplateButtonsViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSInformationTemplateFocusableView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSInvisibleButton
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSLabeledValueView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSLayoutHelperView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSListTemplateViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSManeuversCardView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSMapButton
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSMapTemplateViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSMessageCell
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSMultilineLabel
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSMultilineLabelConfig
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSNameViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSNavigationAlertButtonView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSNavigationAlertFocusButton
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSNavigationAlertProgressView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSNavigationAlertQueue
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSNavigationAlertView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSNavigationBar
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSNavigationCardViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSNavigationETAView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSNavigator
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSNowPlayingViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSOverlayViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSPagingControlButton
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSPagingControlView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSPagingTripPreviewsCardView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSPanButton
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSPanView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSPanViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSPausedCardView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSPointOfInterestAnnotation
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSPointOfInterestAnnotationView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSPointOfInterestClusterAnnotation
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSPointOfInterestClusterView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSPointsOfInterestEntityViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSPointsOfInterestMapControlsViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSPointsOfInterestMapViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSPointsOfInterestPickerCell
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSPointsOfInterestPickerExtendedCell
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSPointsOfInterestPickerInfoView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSPointsOfInterestPickerViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSPointsOfInterestTableView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSPrimaryManeuverLayoutConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSPrimaryManeuverView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSRatingView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSRouteEstimatesView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSRouteOverviewView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSRoutePreviewsCardView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSRouteRowView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSSearchTemplateViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSSecondaryManeuverView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSSectionedDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSStyledTextButton
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSTabBarViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSTableCell
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSTableView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSTemplateEnvironment
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSTemplateInstance
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSTravelEstimatesStringFormatter
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSTravelEstimatesStrings
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSTripPreviewsCardView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSVoiceTemplateViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSVoiceView
|| __DATA.__objc_data _OBJC_METACLASS_$_CPSWindow
|| __DATA.__objc_data _OBJC_METACLASS_$__CPSFocusHoldingButton
|| __DATA.__objc_data _OBJC_METACLASS_$__CPSNudgeLongPressGestureRecognizer
|| __DATA.__objc_data _OBJC_METACLASS_$__CPSNudgeTapGestureRecognizer
|| __DATA.__objc_data _OBJC_METACLASS_$__CPSOverlayTouchBlockingView
|| __DATA.__objc_ivar _OBJC_IVAR_$_CPSGridTemplateView._gridButtons
|| __DATA_CONST.__const _CPSAudioManagerDidThrottleUpdateNotification
|| __TEXT.__const _CPSManeuverChangeAnimationDuration
|| __TEXT.__const _CPSNavigationAlertImageSize
|| __TEXT.__const _CPSNavigationAlertViewWidth
|| __TEXT.__const _CPSNavigationETAViewSize
|| __TEXT.__const _CarPlaySupportVersionNumber
|| __TEXT.__const _CarPlaySupportVersionString
|| __TEXT.__const _kCPSLongMinumumPressDuration
|| __TEXT.__const _kCPSPanButtonEdgeSpacing
|| __TEXT.__const _kGridButtonHeight
|| __TEXT.__const _kGridButtonImageHeight
|| __TEXT.__const _kGridButtonImageWidth
|| __TEXT.__const _kGridMaxDistanceBetweenButtons
|| __TEXT.__text _CPSCoordinateRegionContainsAnnotations
|| __TEXT.__text _CPSCoordinateRegionForAnnotations
|| __TEXT.__text _CPSFormattedDistanceSepartedShortUnit
|| __TEXT.__text _CPSFormattedDistanceWithMediumUnit
|| __TEXT.__text _CPSFrameworkBundle
|| __TEXT.__text _CPSImageNamedWithTraitCollection
|| __TEXT.__text _CPSIsInternalInstall
|| __TEXT.__text _CPSLocalizedStringForKey
|| __TEXT.__text _CPSNumberFormatterForDistance
|| __TEXT.__text _CPSPresentationRoundedDistance
|| __TEXT.__text _CPSRectByApplyingUserInterfaceLayoutDirectionInRect
|| __TEXT.__text _CPSRequesterIdentifierForBundleIdentifier
|| __TEXT.__text _CPSSizeForAttributedText
|| __TEXT.__text _CPSSizeForText
|| __TEXT.__text _CPSTraitCollectionSupportsFocus
|| __TEXT.__text _CarPlayFrameworkGeneralLogging
|| __TEXT.__text _CarPlaySupportGeneralLogging
|| __TEXT.__text __CPPanDirectionForPressType
|| __TEXT.__text __CPSUIPressesContainsPressTypes
|| __TEXT.__text __pressesContainsPressType
|| __TEXT.__text __touchesContainDirectTouch
|| __TEXT.__text __touchesContainIndirectTouch
__ BackBoardServices: _OBJC_CLASS_$_BKSHIDEventDeferringEnvironment
__ BackBoardServices: _OBJC_CLASS_$_BKSHIDEventDeliveryPolicyObserver
__ BannerKit: _OBJC_CLASS_$_BNBannerSource
__ CarKit: _CARSessionNightModeChangedNotification
__ CarKit: _OBJC_CLASS_$_CARNavigationOwnershipManager
__ CarKit: _OBJC_CLASS_$_CARObserverHashTable
__ CarKit: _OBJC_CLASS_$_CARSessionStatus
__ CarPlay: _CPContrastingColorForColor
__ CarPlay: _CPNowPlayingButtonMaximumImageSize
__ CarPlay: _OBJC_CLASS_$_CPActionSheetTemplate
__ CarPlay: _OBJC_CLASS_$_CPAlertAction
__ CarPlay: _OBJC_CLASS_$_CPAlertTemplate
__ CarPlay: _OBJC_CLASS_$_CPBarButton
__ CarPlay: _OBJC_CLASS_$_CPContactCallButton
__ CarPlay: _OBJC_CLASS_$_CPContactDirectionsButton
__ CarPlay: _OBJC_CLASS_$_CPContactEntity
__ CarPlay: _OBJC_CLASS_$_CPContactMessageButton
__ CarPlay: _OBJC_CLASS_$_CPContactTemplate
__ CarPlay: _OBJC_CLASS_$_CPDashboardButton
__ CarPlay: _OBJC_CLASS_$_CPDashboardController
__ CarPlay: _OBJC_CLASS_$_CPGridTemplate
__ CarPlay: _OBJC_CLASS_$_CPInformationRatingItem
__ CarPlay: _OBJC_CLASS_$_CPInformationTemplate
__ CarPlay: _OBJC_CLASS_$_CPInterfaceController
__ CarPlay: _OBJC_CLASS_$_CPListImageRowItem
__ CarPlay: _OBJC_CLASS_$_CPListItem
__ CarPlay: _OBJC_CLASS_$_CPListSection
__ CarPlay: _OBJC_CLASS_$_CPListTemplate
__ CarPlay: _OBJC_CLASS_$_CPMapTemplate
__ CarPlay: _OBJC_CLASS_$_CPMessageComposeBarButton
__ CarPlay: _OBJC_CLASS_$_CPMessageListItem
__ CarPlay: _OBJC_CLASS_$_CPNowPlayingAddToLibraryButton
__ CarPlay: _OBJC_CLASS_$_CPNowPlayingImageButton
__ CarPlay: _OBJC_CLASS_$_CPNowPlayingMoreButton
__ CarPlay: _OBJC_CLASS_$_CPNowPlayingPlaybackRateButton
__ CarPlay: _OBJC_CLASS_$_CPNowPlayingRepeatButton
__ CarPlay: _OBJC_CLASS_$_CPNowPlayingShuffleButton
__ CarPlay: _OBJC_CLASS_$_CPNowPlayingTemplate
__ CarPlay: _OBJC_CLASS_$_CPPointOfInterestTemplate
__ CarPlay: _OBJC_CLASS_$_CPPointsOfInterestEntity
__ CarPlay: _OBJC_CLASS_$_CPSearchTemplate
__ CarPlay: _OBJC_CLASS_$_CPSessionConfiguration
__ CarPlay: _OBJC_CLASS_$_CPTabBarTemplate
__ CarPlay: _OBJC_CLASS_$_CPTemplate
__ CarPlay: _OBJC_CLASS_$_CPTravelEstimates
__ CarPlay: _OBJC_CLASS_$_CPVoiceControlTemplate
__ CarPlay: _kCPGridTemplateMaximumItems
__ CarPlayUI: _CARNextPreviousButtonSize
__ CarPlayUI: _CPUIAudiobooksBundleIdentifier
__ CarPlayUI: _CPUIImageCancelGlyph
__ CarPlayUI: _CPUIImageForTransportButton
__ CarPlayUI: _CPUIImagePanGlyph
__ CarPlayUI: _CPUIImageRecenterGlyph
__ CarPlayUI: _CPUIImageStarRatingEmpty
__ CarPlayUI: _CPUIImageStarRatingFull
__ CarPlayUI: _CPUIImageStarRatingHalf
__ CarPlayUI: _CPUIImageZoomInGlyph
__ CarPlayUI: _CPUIImageZoomOutGlyph
__ CarPlayUI: _CPUIMessageComposeGlyph
__ CarPlayUI: _CPUINewsBundleIdentifier
__ CarPlayUI: _CPUIPodcastsBundleIdentifier
__ CarPlayUI: _CPUIScrollBarAlignmentHorizontalPadding
__ CarPlayUI: _OBJC_CLASS_$_CPUIBannerViewButton
__ CarPlayUI: _OBJC_CLASS_$_CPUIImageRowCell
__ CarPlayUI: _OBJC_CLASS_$_CPUIImageRowCellConfiguration
__ CarPlayUI: _OBJC_CLASS_$_CPUIMessageCell
__ CarPlayUI: _OBJC_CLASS_$_CPUIMessageCellConfiguration
__ CarPlayUI: _OBJC_CLASS_$_CPUINowPlayingButton
__ CarPlayUI: _OBJC_CLASS_$_CPUINowPlayingButtonWrapperView
__ CarPlayUI: _OBJC_CLASS_$_CPUINowPlayingManager
__ CarPlayUI: _OBJC_CLASS_$_CPUINowPlayingSnapshot
__ CarPlayUI: _OBJC_CLASS_$_CPUINowPlayingViewController
__ CarPlayUI: _OBJC_CLASS_$_CPUIPassthroughView
__ CarPlayUI: _OBJC_CLASS_$_CPUIPlayModeButton
__ CarPlayUI: _OBJC_CLASS_$_CPUITableCell
__ CarPlayUI: _OBJC_CLASS_$_CPUITableCellAccessory
__ CarPlayUI: _OBJC_CLASS_$_CPUITableCellConfiguration
__ CarPlayUI: _OBJC_METACLASS_$_CPUIImageRowCell
__ CarPlayUI: _OBJC_METACLASS_$_CPUIMessageCell
__ CarPlayUI: _OBJC_METACLASS_$_CPUINowPlayingViewController
__ CarPlayUI: _OBJC_METACLASS_$_CPUIPassthroughView
__ CarPlayUI: _OBJC_METACLASS_$_CPUITableCell
__ CarPlayUI: _UIEdgeInsetsFromRectWithRect
__ CarPlayUI: __CPUIGlyphFactoryWithTraitCollection
__ CarPlayUIServices: _CRSUIDashboardWidgetWindowFocusHighlightColorDidChangeNotification
__ CarPlayUIServices: _OBJC_CLASS_$_CRSUIDashboardWidgetWindow
__ CarPlayUIServices: _OBJC_CLASS_$_CRSUITemplateDashboardWidgetSceneSettings
__ Contacts: _OBJC_CLASS_$_CNPostalAddressFormatter
__ CoreAnalytics: _AnalyticsSendEvent
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanTrue
__ CoreGraphics: _CGAffineTransformIdentity
__ CoreGraphics: _CGAffineTransformMakeScale
__ CoreGraphics: _CGBitmapContextCreate
__ CoreGraphics: _CGBitmapContextCreateImage
__ CoreGraphics: _CGContextClearRect
__ CoreGraphics: _CGContextDrawImage
__ CoreGraphics: _CGContextFillRect
__ CoreGraphics: _CGContextRelease
__ CoreGraphics: _CGContextRestoreGState
__ CoreGraphics: _CGContextSaveGState
__ CoreGraphics: _CGContextScaleCTM
__ CoreGraphics: _CGContextSetFillColorWithColor
__ CoreGraphics: _CGContextSetInterpolationQuality
__ CoreGraphics: _CGContextTranslateCTM
__ CoreGraphics: _CGImageGetBitmapInfo
__ CoreGraphics: _CGImageGetBitsPerComponent
__ CoreGraphics: _CGImageGetColorSpace
__ CoreGraphics: _CGImageRelease
__ CoreGraphics: _CGPathAddRect
__ CoreGraphics: _CGPathCreateMutable
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectIntegral
__ CoreGraphics: _CGRectIntersectsRect
__ CoreGraphics: _CGRectOffset
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ CoreLocation: _CLLocationCoordinate2DMake
__ CoreLocation: _OBJC_CLASS_$_CLLocationManager
__ CoreLocation: _kCLDistanceFilterNone
__ CoreLocation: _kCLLocationAccuracyBest
__ CoreServices: _LSUserApplicationType
__ CoreServices: _OBJC_CLASS_$_LSApplicationProxy
__ CoreServices: _OBJC_CLASS_$_LSBundleProxy
__ CoreText: _CTFontCreateCopyWithSymbolicTraits
__ CoreText: _CTFrameDraw
__ CoreText: _CTFrameGetLineOrigins
__ CoreText: _CTFrameGetLines
__ CoreText: _CTFrameGetVisibleStringRange
__ CoreText: _CTFramesetterCreateFrame
__ CoreText: _CTFramesetterCreateWithAttributedString
__ CoreText: _CTFramesetterSuggestFrameSizeWithConstraints
__ CoreText: _CTParagraphStyleCreate
__ CoreText: _kCTFontAttributeName
__ CoreText: _kCTForegroundColorAttributeName
__ CoreText: _kCTParagraphStyleAttributeName
__ Foundation: _NSClassFromString
__ Foundation: _NSSearchPathForDirectoriesInDomains
__ Foundation: _NSStringFromClass
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateComponentsFormatter
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSIndexPath
__ Foundation: _OBJC_CLASS_$_NSIndexSet
__ Foundation: _OBJC_CLASS_$_NSLayoutConstraint
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMeasurement
__ Foundation: _OBJC_CLASS_$_NSMeasurementFormatter
__ Foundation: _OBJC_CLASS_$_NSMutableAttributedString
__ Foundation: _OBJC_CLASS_$_NSMutableCharacterSet
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSUnitLength
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCListener
__ FrontBoard: _BSEqualObjects
__ FrontBoard: _BSFloatEqualToFloat
__ FrontBoard: _BSFloatGreaterThanOrEqualToFloat
__ FrontBoard: _BSFloatIsZero
__ FrontBoard: _OBJC_CLASS_$_BSAnimationSettings
__ FrontBoard: _OBJC_CLASS_$_FBSOpenApplicationService
__ GraphicsServices: _GSSystemRootDirectory
__ MapKit: _MKMapRectForCoordinateRegion
__ MapKit: _OBJC_CLASS_$_MKAnnotationView
__ MapKit: _OBJC_CLASS_$_MKClusterAnnotation
__ MapKit: _OBJC_CLASS_$_MKMapCamera
__ MapKit: _OBJC_CLASS_$_MKMapView
__ MapKit: _OBJC_CLASS_$_MKMarkerAnnotationView
__ MapKit: _OBJC_CLASS_$_MKPinAnnotationView
__ MapKit: _OBJC_METACLASS_$_MKAnnotationView
__ MapKit: _OBJC_METACLASS_$_MKMarkerAnnotationView
__ NetAppsUtilities: _OBJC_CLASS_$_NAFuture
__ PlatterKit: _OBJC_CLASS_$_PLPlatterView
__ PlatterKit: _PLPlatterViewStyleCarPlayBanner
__ QuartzCore: _OBJC_CLASS_$_CAMediaTimingFunction
__ QuartzCore: _OBJC_CLASS_$_CATransaction
__ QuartzCore: _kCACornerCurveContinuous
__ QuartzCore: _kCAMediaTimingFunctionEaseInEaseOut
__ SiriActivation: _OBJC_CLASS_$_SiriDirectActionContext
__ SiriActivation: _OBJC_CLASS_$_SiriDirectActionSource
__ UIKit: _NSAttachmentAttributeName
__ UIKit: _NSFontAttributeName
__ UIKit: _NSForegroundColorAttributeName
__ UIKit: _NSParagraphStyleAttributeName
__ UIKit: _NSStringFromCGRect
__ UIKit: _NSStringFromCGSize
__ UIKit: _NSStringFromUIEdgeInsets
__ UIKit: _NSTextAlignmentToCTTextAlignment
__ UIKit: _OBJC_CLASS_$_NSMutableParagraphStyle
__ UIKit: _OBJC_CLASS_$_NSStringDrawingContext
__ UIKit: _OBJC_CLASS_$_NSTextAttachment
__ UIKit: _OBJC_CLASS_$_UIActivityIndicatorView
__ UIKit: _OBJC_CLASS_$_UIAlertAction
__ UIKit: _OBJC_CLASS_$_UIAlertController
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIBarButtonItem
__ UIKit: _OBJC_CLASS_$_UIBlurEffect
__ UIKit: _OBJC_CLASS_$_UIButton
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIColorEffect
__ UIKit: _OBJC_CLASS_$_UIControl
__ UIKit: _OBJC_CLASS_$_UICubicTimingParameters
__ UIKit: _OBJC_CLASS_$_UIFocusContainerGuide
__ UIKit: _OBJC_CLASS_$_UIFocusGuide
__ UIKit: _OBJC_CLASS_$_UIFocusSystem
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIFontDescriptor
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageSymbolConfiguration
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UILabel
__ UIKit: _OBJC_CLASS_$_UILayoutGuide
__ UIKit: _OBJC_CLASS_$_UILongPressGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UINavigationBar
__ UIKit: _OBJC_CLASS_$_UINavigationController
__ UIKit: _OBJC_CLASS_$_UIPanGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIScrollView
__ UIKit: _OBJC_CLASS_$_UISearchContainerViewController
__ UIKit: _OBJC_CLASS_$_UISearchController
__ UIKit: _OBJC_CLASS_$_UIStackView
__ UIKit: _OBJC_CLASS_$_UITabBarController
__ UIKit: _OBJC_CLASS_$_UITabBarItem
__ UIKit: _OBJC_CLASS_$_UITableView
__ UIKit: _OBJC_CLASS_$_UITableViewCell
__ UIKit: _OBJC_CLASS_$_UITableViewHeaderFooterView
__ UIKit: _OBJC_CLASS_$_UITapGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UITraitCollection
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_CLASS_$_UIViewPropertyAnimator
__ UIKit: _OBJC_CLASS_$_UIVisualEffectView
__ UIKit: _OBJC_CLASS_$_UIWindow
__ UIKit: _OBJC_CLASS_$__UIFocusLinearMovementSequence
__ UIKit: _OBJC_CLASS_$__UIFocusUpdateRequest
__ UIKit: _OBJC_METACLASS_$_UIBarButtonItem
__ UIKit: _OBJC_METACLASS_$_UIButton
__ UIKit: _OBJC_METACLASS_$_UIImageView
__ UIKit: _OBJC_METACLASS_$_UILabel
__ UIKit: _OBJC_METACLASS_$_UILongPressGestureRecognizer
__ UIKit: _OBJC_METACLASS_$_UINavigationBar
__ UIKit: _OBJC_METACLASS_$_UINavigationController
__ UIKit: _OBJC_METACLASS_$_UIScrollView
__ UIKit: _OBJC_METACLASS_$_UISearchContainerViewController
__ UIKit: _OBJC_METACLASS_$_UITabBarController
__ UIKit: _OBJC_METACLASS_$_UITableView
__ UIKit: _OBJC_METACLASS_$_UITableViewCell
__ UIKit: _OBJC_METACLASS_$_UITapGestureRecognizer
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _OBJC_METACLASS_$_UIWindow
__ UIKit: _UICeilToScale
__ UIKit: _UIEdgeInsetsZero
__ UIKit: _UIFontDescriptorTraitsAttribute
__ UIKit: _UIFontTextStyleBody
__ UIKit: _UIFontTextStyleCallout
__ UIKit: _UIFontTextStyleCaption1
__ UIKit: _UIFontTextStyleFootnote
__ UIKit: _UIFontTextStyleHeadline1
__ UIKit: _UIFontTextStyleTitle2
__ UIKit: _UIFontTextStyleTitle3
__ UIKit: _UIFontWeightBold
__ UIKit: _UIFontWeightRegular
__ UIKit: _UIFontWeightSemibold
__ UIKit: _UIFontWeightTrait
__ UIKit: _UIGraphicsBeginImageContext
__ UIKit: _UIGraphicsEndImageContext
__ UIKit: _UIGraphicsGetCurrentContext
__ UIKit: _UIGraphicsGetImageFromCurrentImageContext
__ UIKit: _UIImagePNGRepresentation
__ UIKit: _UINavigationControllerHideShowBarDuration
__ UIKit: _UIRoundToScale
__ UIKit: _UISceneDidEnterBackgroundNotification
__ UIKit: _UISceneWillEnterForegroundNotification
__ UIKit: _UITableViewAutomaticDimension
__ UIKit: _UIViewNoIntrinsicMetric
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _fmod
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _object_getClass
CPSGridButton : CPSButton
 @property  CPSAbridgableLabel *customTitleLabel
 @property  UIView *focusView
 @property  CPGridButton *gridButton
 @property  <CPTemplateDelegate> *templateDelegate

  // class methods
  +[CPSGridButton buttonWithGridButton:templateDelegate:]

  // instance methods
  -[CPSGridButton pressesBegan:withEvent:]
  -[CPSGridButton didUpdateFocusInContext:withAnimationCoordinator:]
  -[CPSGridButton customTitleLabel]
  -[CPSGridButton pressesCancelled:withEvent:]
  -[CPSGridButton pressesEnded:withEvent:]
  -[CPSGridButton .cxx_destruct]
  -[CPSGridButton focusView]
  -[CPSGridButton traitCollectionDidChange:]
  -[CPSGridButton setFocusView:]
  -[CPSGridButton setEnabled:]
  -[CPSGridButton _updateLabelColor]
  -[CPSGridButton setCustomTitleLabel:]
  -[CPSGridButton layoutSubviews]
  -[CPSGridButton templateDelegate]
  -[CPSGridButton setTemplateDelegate:]
  -[CPSGridButton setGridButton:]
  -[CPSGridButton gridButton]
  -[CPSGridButton preferredLabelWidth]


CPSButton : UIButton /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI <CPSControl>
 @property  UITapGestureRecognizer *pressTapRecognizer
 @property  UITapGestureRecognizer *touchTapRecognizer
 @property  NSUUID *identifier
 @property  <CPSButtonDelegate> *delegate
 @property  BOOL enabled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CPSButton buttonWithType:]

  // instance methods
  -[CPSButton didMoveToWindow]
  -[CPSButton _buttonPressed:]
  -[CPSButton .cxx_destruct]
  -[CPSButton _addGestureRecognizers]
  -[CPSButton _buttonTapped:]
  -[CPSButton setIdentifier:]
  -[CPSButton identifier]
  -[CPSButton traitCollectionDidChange:]
  -[CPSButton setEnabled:]
  -[CPSButton setDelegate:]
  -[CPSButton delegate]
  -[CPSButton setPressTapRecognizer:]
  -[CPSButton pressTapRecognizer]
  -[CPSButton setTouchTapRecognizer:]
  -[CPSButton touchTapRecognizer]
  -[CPSButton buttonSelected:interactionModel:]


CPSVoiceTemplateViewController : CPSBaseTemplateViewController <CPVoiceTemplateProviding>
 @property  CPSVoiceView *titleView
 @property  UITapGestureRecognizer *backGestureRecognizer
 @property  double lastVoiceTemplateStateChangeTime
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSVoiceTemplateViewController setTitleView:]
  -[CPSVoiceTemplateViewController titleView]
  -[CPSVoiceTemplateViewController .cxx_destruct]
  -[CPSVoiceTemplateViewController viewDidAppear:]
  -[CPSVoiceTemplateViewController viewWillAppear:]
  -[CPSVoiceTemplateViewController viewWillDisappear:]
  -[CPSVoiceTemplateViewController _activateStateWithIdentifier:]
  -[CPSVoiceTemplateViewController _viewDidLoad]
  -[CPSVoiceTemplateViewController voiceTemplate]
  -[CPSVoiceTemplateViewController _backGestureFired:]
  -[CPSVoiceTemplateViewController setBackGestureRecognizer:]
  -[CPSVoiceTemplateViewController _stateWithIdentifier:]
  -[CPSVoiceTemplateViewController lastVoiceTemplateStateChangeTime]
  -[CPSVoiceTemplateViewController setLastVoiceTemplateStateChangeTime:]
  -[CPSVoiceTemplateViewController initWithVoiceTemplate:templateDelegate:templateEnvironment:]
  -[CPSVoiceTemplateViewController backGestureRecognizer]


CPSVoiceView : UIView /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI
 @property  CPSAbridgableLabel *titleLabel
 @property  UIImageView *imageView

  // instance methods
  -[CPSVoiceView _titleFont]
  -[CPSVoiceView imageView]
  -[CPSVoiceView setTitleLabel:]
  -[CPSVoiceView titleLabel]
  -[CPSVoiceView setImageView:]
  -[CPSVoiceView initWithFrame:]
  -[CPSVoiceView .cxx_destruct]
  -[CPSVoiceView traitCollectionDidChange:]


CPSPointsOfInterestEntityViewController : CPSBaseEntityContentViewController
 @property  CPSPointsOfInterestMapViewController *mapViewController

  // instance methods
  -[CPSPointsOfInterestEntityViewController viewDidLoad]
  -[CPSPointsOfInterestEntityViewController .cxx_destruct]
  -[CPSPointsOfInterestEntityViewController setupViewControllers]
  -[CPSPointsOfInterestEntityViewController mapViewController]
  -[CPSPointsOfInterestEntityViewController initWithEntity:resourceProvider:]
  -[CPSPointsOfInterestEntityViewController didUpdateEntity:]
  -[CPSPointsOfInterestEntityViewController shouldAppearInUnsafeArea]


CPSDashboardGuidanceViewController : UIViewController /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI <CPSButtonDelegate, CPSNavigationDisplaying>
 @property  NSArray *dashboardButtons
 @property  CPSDashboardManeuversCardView *maneuversCardView
 @property  CPSPausedCardView *pausedCardView
 @property  CPDashboardButton *fakeDashboardButton
 @property  UIView *shortcutButtonsContainerView
 @property  NSLayoutConstraint *shortcutButtonsContainerViewLeadingConstraint
 @property  NSLayoutConstraint *shortcutButtonsContainerViewTrailingConstraint
 @property  NSArray *activeConstraints
 @property  NSArray *spacingGuides
 @property  <CPDashboardClientInterface> *dashboardClient
 @property  BOOL fakesDashboardSupport
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSDashboardGuidanceViewController viewDidLoad]
  -[CPSDashboardGuidanceViewController activeConstraints]
  -[CPSDashboardGuidanceViewController setActiveConstraints:]
  -[CPSDashboardGuidanceViewController .cxx_destruct]
  -[CPSDashboardGuidanceViewController traitCollectionDidChange:]
  -[CPSDashboardGuidanceViewController didSelectButton:]
  -[CPSDashboardGuidanceViewController showManeuvers:usingDisplayStyles:]
  -[CPSDashboardGuidanceViewController _focusHighlightColorChanged:]
  -[CPSDashboardGuidanceViewController shortcutButtonsContainerView]
  -[CPSDashboardGuidanceViewController dashboardButtons]
  -[CPSDashboardGuidanceViewController _animateShortcutContainerViewOut]
  -[CPSDashboardGuidanceViewController spacingGuides]
  -[CPSDashboardGuidanceViewController setSpacingGuides:]
  -[CPSDashboardGuidanceViewController setDashboardButtons:]
  -[CPSDashboardGuidanceViewController _animateShortcutContainerViewIn]
  -[CPSDashboardGuidanceViewController fakesDashboardSupport]
  -[CPSDashboardGuidanceViewController fakeDashboardButton]
  -[CPSDashboardGuidanceViewController dashboardClient]
  -[CPSDashboardGuidanceViewController maneuversCardView]
  -[CPSDashboardGuidanceViewController pausedCardView]
  -[CPSDashboardGuidanceViewController setManeuversCardView:]
  -[CPSDashboardGuidanceViewController setPausedCardView:]
  -[CPSDashboardGuidanceViewController _transitionFromViews:inView:animated:]
  -[CPSDashboardGuidanceViewController updateEstimates:forManeuver:]
  -[CPSDashboardGuidanceViewController shortcutButtonsContainerViewLeadingConstraint]
  -[CPSDashboardGuidanceViewController shortcutButtonsContainerViewTrailingConstraint]
  -[CPSDashboardGuidanceViewController _setupFakeButtonIfNecessary]
  -[CPSDashboardGuidanceViewController _launchApp:]
  -[CPSDashboardGuidanceViewController setFakeDashboardButton:]
  -[CPSDashboardGuidanceViewController setShortCutButtons:]
  -[CPSDashboardGuidanceViewController navigator:pausedTripForReason:description:]
  -[CPSDashboardGuidanceViewController navigator:didEndTrip:]
  -[CPSDashboardGuidanceViewController setFakesDashboardSupport:]
  -[CPSDashboardGuidanceViewController setDashboardClient:]
  -[CPSDashboardGuidanceViewController setShortcutButtonsContainerView:]
  -[CPSDashboardGuidanceViewController setShortcutButtonsContainerViewLeadingConstraint:]
  -[CPSDashboardGuidanceViewController setShortcutButtonsContainerViewTrailingConstraint:]


CPSPausedCardView : UIView /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI <CPSCardPlatterProviding>
 @property  UILabel *title
 @property  UIActivityIndicatorView *spinner
 @property  CPSCardPlatterView *cardPlatterView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSPausedCardView spinner]
  -[CPSPausedCardView .cxx_destruct]
  -[CPSPausedCardView intrinsicContentSize]
  -[CPSPausedCardView title]
  -[CPSPausedCardView initWithReason:title:backgroundColor:]
  -[CPSPausedCardView cardPlatterView]
  -[CPSPausedCardView setCardPlatterView:]


CPSPanButton : UIButton /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI <UIGestureRecognizerDelegate>
 @property  UIView *backgroundView
 @property  long long direction
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSPanButton didUpdateFocusInContext:withAnimationCoordinator:]
  -[CPSPanButton backgroundView]
  -[CPSPanButton setBackgroundView:]
  -[CPSPanButton _updateColors]
  -[CPSPanButton direction]
  -[CPSPanButton initWithDirection:]
  -[CPSPanButton .cxx_destruct]
  -[CPSPanButton traitCollectionDidChange:]
  -[CPSPanButton layoutSubviews]
  -[CPSPanButton _setupPanImages]


CPSPanView : CPUIPassthroughView /System/Library/PrivateFrameworks/MobileIcons.framework/MobileIcons <UIGestureRecognizerDelegate>
 @property  CPSPanButton *panLeftButton
 @property  CPSPanButton *panRightButton
 @property  CPSPanButton *panUpButton
 @property  CPSPanButton *panDownButton
 @property  <CPSPanViewDelegate> *delegate
 @property  double sideButtonTopInset
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSPanView pressesBegan:withEvent:]
  -[CPSPanView pressesChanged:withEvent:]
  -[CPSPanView pressesCancelled:withEvent:]
  -[CPSPanView pressesEnded:withEvent:]
  -[CPSPanView initWithFrame:]
  -[CPSPanView .cxx_destruct]
  -[CPSPanView _handleLongPressGesture:]
  -[CPSPanView setDelegate:]
  -[CPSPanView gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[CPSPanView delegate]
  -[CPSPanView _handleButtonTapped:]
  -[CPSPanView panRightButton]
  -[CPSPanView sideButtonTopInset]
  -[CPSPanView panLeftButton]
  -[CPSPanView panUpButton]
  -[CPSPanView panDownButton]


_CPSOverlayTouchBlockingView : UIView /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI
  // instance methods
  -[_CPSOverlayTouchBlockingView initWithFrame:]


CPSOverlayViewController : UINavigationController /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI <CPSPreferredFocusManaging, BSInvalidatable>
 @property  UIFocusGuide *rightHandDriveGuide
 @property  <UIFocusItem> *preferredFocusItem
 @property  BOOL usePreferredItemOnNextUpdate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSOverlayViewController viewDidLoad]
  -[CPSOverlayViewController preferredFocusEnvironments]
  -[CPSOverlayViewController didUpdateFocusInContext:withAnimationCoordinator:]
  -[CPSOverlayViewController .cxx_destruct]
  -[CPSOverlayViewController templates]
  -[CPSOverlayViewController popToRootViewControllerAnimated:]
  -[CPSOverlayViewController popViewControllerAnimated:]
  -[CPSOverlayViewController _linearFocusMovementSequences]
  -[CPSOverlayViewController restoresFocusAfterTransition]
  -[CPSOverlayViewController popToViewController:animated:]
  -[CPSOverlayViewController invalidate]
  -[CPSOverlayViewController popToTemplate:animated:completion:]
  -[CPSOverlayViewController dismissTemplateAnimated:completion:]
  -[CPSOverlayViewController popTemplateAnimated:completion:]
  -[CPSOverlayViewController popToRootTemplateAnimated:completion:]
  -[CPSOverlayViewController topTemplate]
  -[CPSOverlayViewController rightHandDriveGuide]
  -[CPSOverlayViewController indexOfTemplate:]
  -[CPSOverlayViewController viewControllerForTemplate:]
  -[CPSOverlayViewController usePreferredItemOnNextUpdate]
  -[CPSOverlayViewController setUsePreferredItemOnNextUpdate:]
  -[CPSOverlayViewController _resetRightHandDriveGuide]
  -[CPSOverlayViewController preferredFocusItem]
  -[CPSOverlayViewController _useRightHandDriveFocusGuide]
  -[CPSOverlayViewController setPreferredFocusItem:]
  -[CPSOverlayViewController _firstFocusProvidingForViewController:]
  -[CPSOverlayViewController pushTemplateViewController:animated:presentationStyle:completion:]
  -[CPSOverlayViewController presentTemplateViewController:animated:completion:]
  -[CPSOverlayViewController presentActionSheetTemplate:animated:completion:]
  -[CPSOverlayViewController presentedTemplateViewController]


CPSDashboardItemView : UIView /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI <CRSUIDashboardFocusableItemProviding>
 @property  CPSAbridgableLabel *titleLabel
 @property  CPSAbridgableLabel *subtitleLabel
 @property  UIButton *button
 @property  UIView *focusBackgroundView
 @property  unsigned long layoutAxis
 @property  NSLayoutConstraint *subtitleWidthConstraint
 @property  NSLayoutConstraint *titleLabelConnectingConstraint
 @property  CPDashboardButton *dashboardButton
 @property  UIImageView *imageView
 @property  <CPSButtonDelegate> *delegate
 @property  UIColor *focusHighlightColor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSDashboardItemView setLayoutAxis:]
  -[CPSDashboardItemView imageView]
  -[CPSDashboardItemView setTitleLabel:]
  -[CPSDashboardItemView layoutAxis]
  -[CPSDashboardItemView titleLabel]
  -[CPSDashboardItemView setImageView:]
  -[CPSDashboardItemView _setup]
  -[CPSDashboardItemView .cxx_destruct]
  -[CPSDashboardItemView focusHighlightColor]
  -[CPSDashboardItemView traitCollectionDidChange:]
  -[CPSDashboardItemView setDelegate:]
  -[CPSDashboardItemView button]
  -[CPSDashboardItemView subtitleLabel]
  -[CPSDashboardItemView setButton:]
  -[CPSDashboardItemView delegate]
  -[CPSDashboardItemView setSubtitleLabel:]
  -[CPSDashboardItemView layoutSubviews]
  -[CPSDashboardItemView setFocusHighlightColor:]
  -[CPSDashboardItemView _touchDown:]
  -[CPSDashboardItemView hideSubtitle]
  -[CPSDashboardItemView initWithDashboardButton:layoutAxis:]
  -[CPSDashboardItemView dashboardButton]
  -[CPSDashboardItemView _buttonTriggered:]
  -[CPSDashboardItemView _touchEnded:]
  -[CPSDashboardItemView focusBackgroundView]
  -[CPSDashboardItemView titleLabelConnectingConstraint]
  -[CPSDashboardItemView subtitleWidthConstraint]
  -[CPSDashboardItemView setSubtitleWidthConstraint:]
  -[CPSDashboardItemView focusableItemPressed:]
  -[CPSDashboardItemView focusableItemSelected]
  -[CPSDashboardItemView focusableItemFocused:]
  -[CPSDashboardItemView setFocusBackgroundView:]
  -[CPSDashboardItemView setTitleLabelConnectingConstraint:]


CPSDashboardPrimaryManeuverView : CPSPrimaryManeuverView
  // class methods
  +[CPSDashboardPrimaryManeuverView instructionsForManeuver:]
  +[CPSDashboardPrimaryManeuverView symbolImageForManeuver:]
  +[CPSDashboardPrimaryManeuverView junctionImageForManeuver:]

  // instance methods
  -[CPSDashboardPrimaryManeuverView centersManeuverInView]
  -[CPSDashboardPrimaryManeuverView symbolImageHeight]
  -[CPSDashboardPrimaryManeuverView hasJunctionImageBackground]
  -[CPSDashboardPrimaryManeuverView junctionBackgroundColor]
  -[CPSDashboardPrimaryManeuverView fitJunctionViewToHeight]


CPSPointsOfInterestPickerViewController : CPSBaseEntityContentViewController <UITableViewDataSource, UITableViewDelegate, CPSButtonDelegate, CPSPointsOfInterestPickerInfoDelegate, CPSActionButtonLayoutDelegate, CPSLinearFocusProviding>
 @property  UILabel *titleLabel
 @property  CPSPointsOfInterestTableView *tableView
 @property  CPSActionButton *cancelButton
 @property  NSArray *layoutConstraints
 @property  double scrollHeight
 @property  CPSPointsOfInterestPickerInfoView *infoView
 @property  unsigned long pickerState
 @property  UIViewPropertyAnimator *animator
 @property  <UIFocusEnvironment> *requestedFocusItem
 @property  <CPSPointsOfInterestPickerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL useRightHandDriveFocusGuide

  // instance methods
  -[CPSPointsOfInterestPickerViewController viewDidLoad]
  -[CPSPointsOfInterestPickerViewController setCancelButton:]
  -[CPSPointsOfInterestPickerViewController preferredFocusEnvironments]
  -[CPSPointsOfInterestPickerViewController setAnimator:]
  -[CPSPointsOfInterestPickerViewController cancelButton]
  -[CPSPointsOfInterestPickerViewController tableView:didDeselectRowAtIndexPath:]
  -[CPSPointsOfInterestPickerViewController setTitleLabel:]
  -[CPSPointsOfInterestPickerViewController titleLabel]
  -[CPSPointsOfInterestPickerViewController setTableView:]
  -[CPSPointsOfInterestPickerViewController tableView:didUpdateFocusInContext:withAnimationCoordinator:]
  -[CPSPointsOfInterestPickerViewController animator]
  -[CPSPointsOfInterestPickerViewController tableView:numberOfRowsInSection:]
  -[CPSPointsOfInterestPickerViewController tableView:didSelectRowAtIndexPath:]
  -[CPSPointsOfInterestPickerViewController template]
  -[CPSPointsOfInterestPickerViewController tableView]
  -[CPSPointsOfInterestPickerViewController .cxx_destruct]
  -[CPSPointsOfInterestPickerViewController buttonSize]
  -[CPSPointsOfInterestPickerViewController tableView:cellForRowAtIndexPath:]
  -[CPSPointsOfInterestPickerViewController completeTransition:]
  -[CPSPointsOfInterestPickerViewController traitCollectionDidChange:]
  -[CPSPointsOfInterestPickerViewController infoView]
  -[CPSPointsOfInterestPickerViewController resetLayoutConstraints]
  -[CPSPointsOfInterestPickerViewController setupLayoutConstraints]
  -[CPSPointsOfInterestPickerViewController layoutConstraints]
  -[CPSPointsOfInterestPickerViewController setLayoutConstraints:]
  -[CPSPointsOfInterestPickerViewController selectedItem]
  -[CPSPointsOfInterestPickerViewController setSelectedItem:]
  -[CPSPointsOfInterestPickerViewController updateViewConstraints]
  -[CPSPointsOfInterestPickerViewController setDelegate:]
  -[CPSPointsOfInterestPickerViewController cancelButtonPressed:]
  -[CPSPointsOfInterestPickerViewController setupViews]
  -[CPSPointsOfInterestPickerViewController delegate]
  -[CPSPointsOfInterestPickerViewController loadView]
  -[CPSPointsOfInterestPickerViewController scrollHeight]
  -[CPSPointsOfInterestPickerViewController setInfoView:]
  -[CPSPointsOfInterestPickerViewController didSelectButton:]
  -[CPSPointsOfInterestPickerViewController pointsOfInterest]
  -[CPSPointsOfInterestPickerViewController initWithEntity:resourceProvider:]
  -[CPSPointsOfInterestPickerViewController didUpdateEntity:]
  -[CPSPointsOfInterestPickerViewController _linearFocusItems]
  -[CPSPointsOfInterestPickerViewController transitionToPrimaryCard]
  -[CPSPointsOfInterestPickerViewController setScrollHeight:]
  -[CPSPointsOfInterestPickerViewController modelDidSelect:]
  -[CPSPointsOfInterestPickerViewController modelDidDeselect:]
  -[CPSPointsOfInterestPickerViewController transitionToSecondaryCard]
  -[CPSPointsOfInterestPickerViewController pickerState]
  -[CPSPointsOfInterestPickerViewController setPickerState:]
  -[CPSPointsOfInterestPickerViewController _updateFocusedItem:]
  -[CPSPointsOfInterestPickerViewController requestedFocusItem]
  -[CPSPointsOfInterestPickerViewController setRequestedFocusItem:]
  -[CPSPointsOfInterestPickerViewController actionButtonPressed:forModel:]
  -[CPSPointsOfInterestPickerViewController buttonGlyphSize]


CPSAnalytics : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL shouldRecordAnalyticsEvents

  // class methods
  +[CPSAnalytics sharedInstance]

  // instance methods
  -[CPSAnalytics shouldRecordAnalyticsEvents]
  -[CPSAnalytics _sendCoreAnalyticsEvent:withDictionary:]
  -[CPSAnalytics navigationStartedWithBundleIdentifier:]
  -[CPSAnalytics audioAppMetadataThrottledWithBundleIdentifier:]


CPSRatingView : UIView /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI
 @property  UIStackView *stackView

  // instance methods
  -[CPSRatingView stackView]
  -[CPSRatingView .cxx_destruct]
  -[CPSRatingView intrinsicContentSize]
  -[CPSRatingView setStackView:]
  -[CPSRatingView initWithInformationItem:layout:]


CPSTemplateEnvironment : NSObject /usr/lib/libSystem.B.dylib <CPUINowPlayingObserving>
 @property  CARObserverHashTable *environmentObservers
 @property  NSXPCConnection *connection
 @property  <CPTemplateProviding> *templateProvider
 @property  NSString *bundleIdentifier
 @property  BOOL isNowPlayingApp
 @property  BOOL hasAnyTemplateEntitlement
 @property  BOOL hasNavigationEntitlement
 @property  BOOL hasAudioEntitlement
 @property  BOOL hasCommunicationEntitlement
 @property  BOOL hasChargingEntitlement
 @property  BOOL hasParkingEntitlement
 @property  BOOL hasQuickOrderingEntitlement
 @property  BOOL hasPublicSafetyEntitlement
 @property  NSSet *allowedTemplateClasses
 @property  unsigned long maximumTabs
 @property  unsigned long maximumClientHierarchyDepth
 @property  BOOL isUserApplication
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSTemplateEnvironment .cxx_destruct]
  -[CPSTemplateEnvironment bundleIdentifier]
  -[CPSTemplateEnvironment connection]
  -[CPSTemplateEnvironment templateProvider]
  -[CPSTemplateEnvironment hasNavigationEntitlement]
  -[CPSTemplateEnvironment hasAudioEntitlement]
  -[CPSTemplateEnvironment hasCommunicationEntitlement]
  -[CPSTemplateEnvironment hasChargingEntitlement]
  -[CPSTemplateEnvironment hasParkingEntitlement]
  -[CPSTemplateEnvironment hasQuickOrderingEntitlement]
  -[CPSTemplateEnvironment hasPublicSafetyEntitlement]
  -[CPSTemplateEnvironment environmentObservers]
  -[CPSTemplateEnvironment isNowPlayingApp]
  -[CPSTemplateEnvironment nowPlayingManager:didUpdateSnapshot:]
  -[CPSTemplateEnvironment initWithConnection:templateProvider:]
  -[CPSTemplateEnvironment hasAnyTemplateEntitlement]
  -[CPSTemplateEnvironment maximumTabs]
  -[CPSTemplateEnvironment maximumClientHierarchyDepth]
  -[CPSTemplateEnvironment addTemplateEnvironmentDelegate:]
  -[CPSTemplateEnvironment allowedTemplateClasses]
  -[CPSTemplateEnvironment isUserApplication]
  -[CPSTemplateEnvironment setEnvironmentObservers:]


CPSGuidanceBannerView : CPSBannerView
 @property  UIStackView *labelStackView
 @property  CPUIBannerViewButton *actionButton
 @property  UIImageView *applicationIconImageView
 @property  UIImageView *guidanceImageView
 @property  CPSAbridgableLabel *guidanceTextLabel
 @property  CPSAbridgableLabel *guidanceDetailTextLabel
 @property  long long currentInterfaceStyle

  // instance methods
  -[CPSGuidanceBannerView _updateLabels]
  -[CPSGuidanceBannerView .cxx_destruct]
  -[CPSGuidanceBannerView traitCollectionDidChange:]
  -[CPSGuidanceBannerView actionButton]
  -[CPSGuidanceBannerView labelStackView]
  -[CPSGuidanceBannerView setLabelStackView:]
  -[CPSGuidanceBannerView setActionButton:]
  -[CPSGuidanceBannerView initWithBannerItem:]
  -[CPSGuidanceBannerView _setGuidanceImageViewForImageSet:]
  -[CPSGuidanceBannerView _updateBannerSelectedState]
  -[CPSGuidanceBannerView applicationIconImageView]
  -[CPSGuidanceBannerView updateBannerWithBannerItem:]
  -[CPSGuidanceBannerView setApplicationIconImageView:]
  -[CPSGuidanceBannerView guidanceImageView]
  -[CPSGuidanceBannerView setGuidanceImageView:]
  -[CPSGuidanceBannerView guidanceTextLabel]
  -[CPSGuidanceBannerView setGuidanceTextLabel:]
  -[CPSGuidanceBannerView guidanceDetailTextLabel]
  -[CPSGuidanceBannerView setGuidanceDetailTextLabel:]
  -[CPSGuidanceBannerView currentInterfaceStyle]
  -[CPSGuidanceBannerView setCurrentInterfaceStyle:]


CPSMultilineLabelConfig : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  NSString *text
 @property  UIFont *font
 @property  unsigned long lineCount
 @property  NSAttributedString *attributedText

  // instance methods
  -[CPSMultilineLabelConfig copyWithZone:]
  -[CPSMultilineLabelConfig attributedText]
  -[CPSMultilineLabelConfig setAttributedText:]
  -[CPSMultilineLabelConfig text]
  -[CPSMultilineLabelConfig .cxx_destruct]
  -[CPSMultilineLabelConfig lineCount]
  -[CPSMultilineLabelConfig isEqual:]
  -[CPSMultilineLabelConfig setFont:]
  -[CPSMultilineLabelConfig setLineCount:]
  -[CPSMultilineLabelConfig font]
  -[CPSMultilineLabelConfig setText:]
  -[CPSMultilineLabelConfig isEqualToLabelConfig:]


CPSMultilineLabel : UIView /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI
 @property  BOOL debug
 @property  NSArray *baselineOffsets
 @property  UIView *baselineView
 @property  NSLayoutConstraint *baselineViewTopAnchor
 @property  NSLayoutConstraint *baselineViewBottomAnchor
 @property  NSArray *leadingOffsets
 @property  NSLayoutConstraint *textLayoutGuideLeadingConstraint
 @property  NSLayoutConstraint *textLayoutGuideTrailingConstraint
 @property  NSAttributedString *attributedText
 @property  unsigned long effectiveNumberOfLines
 @property  UIView *debugFirstBaselineView
 @property  UIView *debugLastBaselineView
 @property  <CPSMultilineLabelDelegate> *delegate
 @property  NSString *text
 @property  UIColor *textColor
 @property  double lineSpacing
 @property  UIFont *font
 @property  double minimumScaleFactor
 @property  double minimumFontSize
 @property  unsigned long numberOfLines
 @property  long long textAlignment
 @property  BOOL prefersFewerLines
 @property  UILayoutGuide *textLayoutGuide
 @property  CPSMultilineLabelConfig *currentConfiguration

  // instance methods
  -[CPSMultilineLabel setNumberOfLines:]
  -[CPSMultilineLabel numberOfLines]
  -[CPSMultilineLabel attributedText]
  -[CPSMultilineLabel setTextAlignment:]
  -[CPSMultilineLabel textAlignment]
  -[CPSMultilineLabel initWithFrame:]
  -[CPSMultilineLabel _updateLayout]
  -[CPSMultilineLabel setMinimumFontSize:]
  -[CPSMultilineLabel text]
  -[CPSMultilineLabel .cxx_destruct]
  -[CPSMultilineLabel minimumFontSize]
  -[CPSMultilineLabel textColor]
  -[CPSMultilineLabel drawRect:]
  -[CPSMultilineLabel minimumScaleFactor]
  -[CPSMultilineLabel lastBaselineAnchor]
  -[CPSMultilineLabel baselineView]
  -[CPSMultilineLabel setMinimumScaleFactor:]
  -[CPSMultilineLabel intrinsicContentSize]
  -[CPSMultilineLabel lineSpacing]
  -[CPSMultilineLabel traitCollectionDidChange:]
  -[CPSMultilineLabel setBounds:]
  -[CPSMultilineLabel setTextColor:]
  -[CPSMultilineLabel setLineSpacing:]
  -[CPSMultilineLabel currentConfiguration]
  -[CPSMultilineLabel setBaselineView:]
  -[CPSMultilineLabel setFont:]
  -[CPSMultilineLabel setDelegate:]
  -[CPSMultilineLabel debug]
  -[CPSMultilineLabel firstBaselineAnchor]
  -[CPSMultilineLabel font]
  -[CPSMultilineLabel delegate]
  -[CPSMultilineLabel setText:]
  -[CPSMultilineLabel textLayoutGuide]
  -[CPSMultilineLabel setDebug:]
  -[CPSMultilineLabel _updateLayoutGuideConstraints]
  -[CPSMultilineLabel _textFrame:rect:]
  -[CPSMultilineLabel setBaselineOffsets:]
  -[CPSMultilineLabel setLeadingOffsets:]
  -[CPSMultilineLabel _updateBaselines]
  -[CPSMultilineLabel _attributedTextForRect:]
  -[CPSMultilineLabel setDebugFirstBaselineView:]
  -[CPSMultilineLabel debugFirstBaselineView]
  -[CPSMultilineLabel setDebugLastBaselineView:]
  -[CPSMultilineLabel debugLastBaselineView]
  -[CPSMultilineLabel _heightForAttributedString:inRect:]
  -[CPSMultilineLabel baselineViewTopAnchor]
  -[CPSMultilineLabel baselineViewBottomAnchor]
  -[CPSMultilineLabel baselineOffsets]
  -[CPSMultilineLabel leadingOffsets]
  -[CPSMultilineLabel textLayoutGuideLeadingConstraint]
  -[CPSMultilineLabel textLayoutGuideTrailingConstraint]
  -[CPSMultilineLabel _attributedStringWithSize:]
  -[CPSMultilineLabel _statsForString:inRect:]
  -[CPSMultilineLabel _fitsInHeight:numberOfLines:rect:]
  -[CPSMultilineLabel _ellipsedString:inRect:]
  -[CPSMultilineLabel effectiveNumberOfLines]
  -[CPSMultilineLabel _rangeOfTrailingWhiteSpace:]
  -[CPSMultilineLabel prefersFewerLines]
  -[CPSMultilineLabel setPrefersFewerLines:]
  -[CPSMultilineLabel setBaselineViewTopAnchor:]
  -[CPSMultilineLabel setBaselineViewBottomAnchor:]
  -[CPSMultilineLabel setTextLayoutGuideLeadingConstraint:]
  -[CPSMultilineLabel setTextLayoutGuideTrailingConstraint:]


CPSAbridgableLabel : UILabel /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI
 @property  unsigned long variantsIndex
 @property  BOOL useAttributedTextVariants
 @property  NSArray *textVariants
 @property  NSArray *attributedTextVariants

  // class methods
  +[CPSAbridgableLabel sanitizedTextForText:]

  // instance methods
  -[CPSAbridgableLabel setAttributedText:]
  -[CPSAbridgableLabel init]
  -[CPSAbridgableLabel .cxx_destruct]
  -[CPSAbridgableLabel _numberOfVariants]
  -[CPSAbridgableLabel setBounds:]
  -[CPSAbridgableLabel setFrame:]
  -[CPSAbridgableLabel setText:]
  -[CPSAbridgableLabel setTextVariants:]
  -[CPSAbridgableLabel textVariants]
  -[CPSAbridgableLabel setAttributedTextVariants:]
  -[CPSAbridgableLabel _updateVariant]
  -[CPSAbridgableLabel sanitizedAttributedStringForString:]
  -[CPSAbridgableLabel useAttributedTextVariants]
  -[CPSAbridgableLabel _variantsList]
  -[CPSAbridgableLabel _compareBoundsSizeToLayoutSizeForString:]
  -[CPSAbridgableLabel variantsIndex]
  -[CPSAbridgableLabel setVariantsIndex:]
  -[CPSAbridgableLabel attributedTextVariants]
  -[CPSAbridgableLabel setUseAttributedTextVariants:]


CPSTemplateInstance : NSObject /usr/lib/libSystem.B.dylib <NSXPCListenerDelegate, UINavigationControllerDelegate, CPSTemplateViewControllerDelegate, CPSSafeAreaDelegate, CPBannerDelegate, CPDashboardProviding, CPSNavigatorObserving, CPTemplateProviding, BSInvalidatable>
 @property  NSXPCListener *interfaceControllerListener
 @property  NSXPCConnection *interfaceControllerConnection
 @property  <CPTemplateServiceClientInterface> *interfaceControllerRemoteObjectProxy
 @property  NSXPCListener *dashboardControllerListener
 @property  NSXPCConnection *dashboardControllerConnection
 @property  <CPDashboardClientInterface> *dashboardControllerRemoteObjectProxy
 @property  CPSOverlayViewController *overlayViewController
 @property  NSMutableDictionary *identifierToViewControllerDictionary
 @property  CPSBannerSource *bannerSource
 @property  UIViewController *rootViewController
 @property  CPSApplicationStateMonitor *applicationStateMonitor
 @property  NSUUID *actionSheetIdentifier
 @property  CPSTabBarViewController *tabBarViewController
 @property  CPSNowPlayingViewController *nowPlayingViewController
 @property  CPSTemplateEnvironment *templateEnvironment
 @property  SiriDirectActionSource *siriActivationSource
 @property  NSString *sceneIdentifier
 @property  FBScene *scene
 @property  UIWindowScene *windowSceneForTemplateApplicationScene
 @property  UIWindowScene *windowSceneForMapWidgetScene
 @property  UIWindowScene *windowSceneForGuidanceWidgetScene
 @property  FBScene *mapWidgetScene
 @property  CPSDashboardGuidanceViewController *dashboardGuidanceViewController
 @property  CPSDashboardEstimatesViewController *dashboardEstimatesViewController
 @property  {UIEdgeInsets=dddd} currentSafeAreaInsets
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSTemplateInstance initWithBundleIdentifier:]
  -[CPSTemplateInstance rootViewController]
  -[CPSTemplateInstance overlayViewController]
  -[CPSTemplateInstance navigationController:willShowViewController:animated:]
  -[CPSTemplateInstance endpoint]
  -[CPSTemplateInstance dealloc]
  -[CPSTemplateInstance setSiriActivationSource:]
  -[CPSTemplateInstance .cxx_destruct]
  -[CPSTemplateInstance dashboardEndpoint]
  -[CPSTemplateInstance siriActivationSource]
  -[CPSTemplateInstance listener:shouldAcceptNewConnection:]
  -[CPSTemplateInstance setRootViewController:]
  -[CPSTemplateInstance sceneIdentifier]
  -[CPSTemplateInstance scene]
  -[CPSTemplateInstance setNowPlayingViewController:]
  -[CPSTemplateInstance nowPlayingViewController]
  -[CPSTemplateInstance applicationStateMonitor]
  -[CPSTemplateInstance navigationController:didShowViewController:animated:]
  -[CPSTemplateInstance invalidate]
  -[CPSTemplateInstance setApplicationStateMonitor:]
  -[CPSTemplateInstance setScene:]
  -[CPSTemplateInstance setOverlayViewController:]
  -[CPSTemplateInstance setHostPrefersDarkUserInterfaceStyle:]
  -[CPSTemplateInstance popToRootTemplateAnimated:reply:]
  -[CPSTemplateInstance popTemplateAnimated:reply:]
  -[CPSTemplateInstance popToTemplate:animated:reply:]
  -[CPSTemplateInstance containsTemplate:reply:]
  -[CPSTemplateInstance dismissTemplateAnimated:reply:]
  -[CPSTemplateInstance getPresentedTemplateWithReply:]
  -[CPSTemplateInstance getTopTemplateWithReply:]
  -[CPSTemplateInstance getTemplatesWithReply:]
  -[CPSTemplateInstance presentVoiceTemplate:withProxyDelegate:animated:reply:]
  -[CPSTemplateInstance pushGridTemplate:withProxyDelegate:animated:presentationStyle:reply:]
  -[CPSTemplateInstance pushInformationTemplate:withProxyDelegate:animated:presentationStyle:reply:]
  -[CPSTemplateInstance pushMapTemplate:withProxyDelegate:animated:presentationStyle:reply:]
  -[CPSTemplateInstance requestBannerProviderWithReply:]
  -[CPSTemplateInstance requestNavigationProviderForMapTemplate:withReply:]
  -[CPSTemplateInstance pushListTemplate:withProxyDelegate:animated:presentationStyle:reply:]
  -[CPSTemplateInstance pushSearchTemplate:withProxyDelegate:animated:presentationStyle:reply:]
  -[CPSTemplateInstance pushNowPlayingTemplate:withProxyDelegate:animated:presentationStyle:reply:]
  -[CPSTemplateInstance setTabBarTemplate:withProxyDelegate:reply:animated:]
  -[CPSTemplateInstance pushEntityTemplate:withProxyDelegate:animated:presentationStyle:reply:]
  -[CPSTemplateInstance updateTabBarTemplate:]
  -[CPSTemplateInstance presentActionSheetTemplate:withProxyDelegate:animated:reply:]
  -[CPSTemplateInstance presentAlertTemplate:withProxyDelegate:reply:]
  -[CPSTemplateInstance clientRequestNowPlayingTemplateAnimated:]
  -[CPSTemplateInstance bannerTappedWithIdentifier:]
  -[CPSTemplateInstance bannerDidAppearWithIdentifier:]
  -[CPSTemplateInstance bannerDidDisappearWithIdentifier:]
  -[CPSTemplateInstance hostSetShortcutButtons:completion:]
  -[CPSTemplateInstance _applicationDidThrottleAudioUpdates:]
  -[CPSTemplateInstance interfaceControllerListener]
  -[CPSTemplateInstance dashboardControllerListener]
  -[CPSTemplateInstance currentSafeAreaInsets]
  -[CPSTemplateInstance viewController:didUpdateSafeAreaInsets:]
  -[CPSTemplateInstance dashboardEstimatesViewController]
  -[CPSTemplateInstance templateEnvironment]
  -[CPSTemplateInstance interfaceControllerRemoteObjectProxy]
  -[CPSTemplateInstance identifierToViewControllerDictionary]
  -[CPSTemplateInstance bannerSource]
  -[CPSTemplateInstance _templateIsValidForCurrentEntitlement:]
  -[CPSTemplateInstance tabBarViewController]
  -[CPSTemplateInstance actionSheetIdentifier]
  -[CPSTemplateInstance setActionSheetIdentifier:]
  -[CPSTemplateInstance setTemplateEnvironment:]
  -[CPSTemplateInstance _handleAppViewConnection:]
  -[CPSTemplateInstance _handleDashboardConnection:]
  -[CPSTemplateInstance setInterfaceControllerRemoteObjectProxy:]
  -[CPSTemplateInstance _appViewConnectionInvalidationHandler]
  -[CPSTemplateInstance setInterfaceControllerConnection:]
  -[CPSTemplateInstance setTabBarViewController:]
  -[CPSTemplateInstance dashboardControllerConnection]
  -[CPSTemplateInstance interfaceControllerConnection]
  -[CPSTemplateInstance setDashboardControllerRemoteObjectProxy:]
  -[CPSTemplateInstance _dashboardConnectionInvalidationHandler]
  -[CPSTemplateInstance setDashboardControllerConnection:]
  -[CPSTemplateInstance dashboardGuidanceViewController]
  -[CPSTemplateInstance mapWidgetScene]
  -[CPSTemplateInstance setWindowSceneForMapWidgetScene:]
  -[CPSTemplateInstance setWindowSceneForGuidanceWidgetScene:]
  -[CPSTemplateInstance setWindowSceneForTemplateApplicationScene:]
  -[CPSTemplateInstance templateViewControllerDidPop:]
  -[CPSTemplateInstance templateViewControllerDidDismiss:]
  -[CPSTemplateInstance templateViewController:shouldActivateSiriWithDirectActionContext:]
  -[CPSTemplateInstance updateInterestingInsets:]
  -[CPSTemplateInstance didCreateNavigator:]
  -[CPSTemplateInstance setMapWidgetScene:]
  -[CPSTemplateInstance whitelistClassesForBaseTemplateProvider:]
  -[CPSTemplateInstance windowSceneForTemplateApplicationScene]
  -[CPSTemplateInstance windowSceneForMapWidgetScene]
  -[CPSTemplateInstance windowSceneForGuidanceWidgetScene]
  -[CPSTemplateInstance setCurrentSafeAreaInsets:]
  -[CPSTemplateInstance setInterfaceControllerListener:]
  -[CPSTemplateInstance setDashboardControllerListener:]
  -[CPSTemplateInstance dashboardControllerRemoteObjectProxy]
  -[CPSTemplateInstance setIdentifierToViewControllerDictionary:]
  -[CPSTemplateInstance setBannerSource:]


CPSEntityButton : CPSActionButton
 @property  CPButton *entityButton

  // class methods
  +[CPSEntityButton buttonWithEntityButton:]

  // instance methods
  -[CPSEntityButton .cxx_destruct]
  -[CPSEntityButton setEntityButton:]
  -[CPSEntityButton entityButton]
  -[CPSEntityButton CPSButtonTitleForButton:]
  -[CPSEntityButton CPSButtonImageForButton:]


_CPSNudgeTapGestureRecognizer : UITapGestureRecognizer /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI
 @property  long long direction

  // instance methods
  -[_CPSNudgeTapGestureRecognizer direction]
  -[_CPSNudgeTapGestureRecognizer setDirection:]


_CPSNudgeLongPressGestureRecognizer : UILongPressGestureRecognizer /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI
 @property  long long direction

  // instance methods
  -[_CPSNudgeLongPressGestureRecognizer direction]
  -[_CPSNudgeLongPressGestureRecognizer setDirection:]


CPSPanViewController : UIViewController /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI <CPSPanViewDelegate, UIGestureRecognizerDelegate, CPSLinearFocusProviding>
 @property  CPSPanView *panView
 @property  NSArray *nudgeGestureRecognizers
 @property  <CPSPanEventDelegate> *panDelegate
 @property  double sideButtonTopInset
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL useRightHandDriveFocusGuide

  // instance methods
  -[CPSPanViewController viewDidLoad]
  -[CPSPanViewController preferredFocusEnvironments]
  -[CPSPanViewController shouldUpdateFocusInContext:]
  -[CPSPanViewController .cxx_destruct]
  -[CPSPanViewController viewDidAppear:]
  -[CPSPanViewController panView]
  -[CPSPanViewController viewWillDisappear:]
  -[CPSPanViewController loadView]
  -[CPSPanViewController panView:panWithDirection:]
  -[CPSPanViewController panView:panBeganWithDirection:]
  -[CPSPanViewController panView:panEndedWithDirection:]
  -[CPSPanViewController sideButtonTopInset]
  -[CPSPanViewController _linearFocusItems]
  -[CPSPanViewController setPanView:]
  -[CPSPanViewController _handleNudgeLongPress:]
  -[CPSPanViewController _handleNudgeTapped:]
  -[CPSPanViewController nudgeGestureRecognizers]
  -[CPSPanViewController panDelegate]
  -[CPSPanViewController _linearFocusItemsWithPresentedMapButtons:]
  -[CPSPanViewController setPanDelegate:]
  -[CPSPanViewController setNudgeGestureRecognizers:]


CPSApplicationStateMonitor : NSObject /usr/lib/libSystem.B.dylib
 @property  CARObserverHashTable *stateObservers
 @property  UIWindowScene *windowSceneForTemplateApplicationScene
 @property  UIWindowScene *windowSceneForMapWidgetScene
 @property  UIWindowScene *windowSceneForGuidanceWidgetScene
 @property  NSString *bundleIdentifier
 @property  BOOL applicationActive
 @property  BOOL canPostManeuverNotification
 @property  BOOL canPostNavigationAlertNotification
 @property  BOOL templateApplicationSceneIsActive

  // instance methods
  -[CPSApplicationStateMonitor _sceneWillEnterForeground:]
  -[CPSApplicationStateMonitor init]
  -[CPSApplicationStateMonitor dealloc]
  -[CPSApplicationStateMonitor .cxx_destruct]
  -[CPSApplicationStateMonitor _sceneDidEnterBackground:]
  -[CPSApplicationStateMonitor isApplicationActive]
  -[CPSApplicationStateMonitor setStateObservers:]
  -[CPSApplicationStateMonitor bundleIdentifier]
  -[CPSApplicationStateMonitor stateObservers]
  -[CPSApplicationStateMonitor removeApplicationStateObserver:]
  -[CPSApplicationStateMonitor setWindowSceneForMapWidgetScene:]
  -[CPSApplicationStateMonitor setWindowSceneForGuidanceWidgetScene:]
  -[CPSApplicationStateMonitor setWindowSceneForTemplateApplicationScene:]
  -[CPSApplicationStateMonitor windowSceneForTemplateApplicationScene]
  -[CPSApplicationStateMonitor windowSceneForMapWidgetScene]
  -[CPSApplicationStateMonitor windowSceneForGuidanceWidgetScene]
  -[CPSApplicationStateMonitor _observeScene:]
  -[CPSApplicationStateMonitor _sceneIsForeground:]
  -[CPSApplicationStateMonitor _notifyObserversForeground:]
  -[CPSApplicationStateMonitor addApplicationStateObserver:]
  -[CPSApplicationStateMonitor canPostManeuverNotification]
  -[CPSApplicationStateMonitor canPostNavigationAlertNotification]
  -[CPSApplicationStateMonitor templateApplicationSceneIsActive]


CPSActionsViewController : UIViewController /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI <CPSButtonDelegate, CPSActionButtonLayoutDelegate, CPSEntityUpdateSupporting>
 @property  <CPEntityActionsProviding> *entity
 @property  UIStackView *stackView
 @property  UIFocusGuide *focusGuide
 @property  NSArray *layoutConstraints
 @property  <CPSActionButtonLayoutDelegate> *layoutDelegate
 @property  <CPSEntityContentViewControllerDelegate> *eventDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSActionsViewController entity]
  -[CPSActionsViewController viewDidLoad]
  -[CPSActionsViewController setEntity:]
  -[CPSActionsViewController layoutDelegate]
  -[CPSActionsViewController setLayoutDelegate:]
  -[CPSActionsViewController updateViews]
  -[CPSActionsViewController stackView]
  -[CPSActionsViewController .cxx_destruct]
  -[CPSActionsViewController buttonSize]
  -[CPSActionsViewController traitCollectionDidChange:]
  -[CPSActionsViewController resetLayoutConstraints]
  -[CPSActionsViewController setupLayoutConstraints]
  -[CPSActionsViewController layoutConstraints]
  -[CPSActionsViewController setLayoutConstraints:]
  -[CPSActionsViewController setStackView:]
  -[CPSActionsViewController updateViewConstraints]
  -[CPSActionsViewController setupViews]
  -[CPSActionsViewController focusGuide]
  -[CPSActionsViewController setFocusGuide:]
  -[CPSActionsViewController didSelectButton:]
  -[CPSActionsViewController updateWithEntity:]
  -[CPSActionsViewController buttonGlyphSize]
  -[CPSActionsViewController buttonRadius]
  -[CPSActionsViewController eventDelegate]
  -[CPSActionsViewController initWithEntity:layoutDelete:]
  -[CPSActionsViewController setEventDelegate:]


CPSTabBarViewController : UITabBarController /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI <UITabBarControllerDelegate, CPSTemplateEnvironmentDelegate, CPSBaseTemplateViewController, CPTabBarTemplateProviding>
 @property  CPSTemplateEnvironment *templateEnvironment
 @property  NAFuture *templateProviderFuture
 @property  CPTemplate *associatedTemplate
 @property  <CPTemplateDelegate> *templateDelegate
 @property  NSArray *tabBarButtons
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSTabBarViewController .cxx_destruct]
  -[CPSTabBarViewController viewDidAppear:]
  -[CPSTabBarViewController restoresFocusAfterTransition]
  -[CPSTabBarViewController viewWillAppear:]
  -[CPSTabBarViewController tabBarController:didSelectViewController:]
  -[CPSTabBarViewController viewDidDisappear:]
  -[CPSTabBarViewController viewWillDisappear:]
  -[CPSTabBarViewController invalidate]
  -[CPSTabBarViewController tabBarButtons]
  -[CPSTabBarViewController templateDelegate]
  -[CPSTabBarViewController setTemplateDelegate:]
  -[CPSTabBarViewController templateProviderFuture]
  -[CPSTabBarViewController associatedTemplate]
  -[CPSTabBarViewController setAssociatedTemplate:]
  -[CPSTabBarViewController applicationDidBecomeNowPlayingApp:]
  -[CPSTabBarViewController templateEnvironment]
  -[CPSTabBarViewController initWithTabBarTemplate:templateDelegate:templateEnvironment:]
  -[CPSTabBarViewController setTemplateEnvironment:]
  -[CPSTabBarViewController showNowPlayingButton:]
  -[CPSTabBarViewController _nowPlayingButtonTapped]
  -[CPSTabBarViewController tabBarTemplateDelegate]
  -[CPSTabBarViewController tabBarTemplate]


CPSNowPlayingViewController : CPUINowPlayingViewController /System/Library/PrivateFrameworks/MobileIcons.framework/MobileIcons <CPSButtonDelegate, UIGestureRecognizerDelegate, CPNowPlayingTemplateProviding, CPBaseTemplateProviding, CPSBaseTemplateViewController>
 @property  CPSAudioPlaybackManager *audioPlaybackManager
 @property  CPTemplate *associatedTemplate
 @property  <CPTemplateDelegate> *templateDelegate
 @property  NAFuture *templateProviderFuture
 @property  <CPSTemplateViewControllerDelegate> *viewControllerDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSNowPlayingViewController viewDidLoad]
  -[CPSNowPlayingViewController setViewControllerDelegate:]
  -[CPSNowPlayingViewController .cxx_destruct]
  -[CPSNowPlayingViewController viewDidAppear:]
  -[CPSNowPlayingViewController viewWillAppear:]
  -[CPSNowPlayingViewController viewDidDisappear:]
  -[CPSNowPlayingViewController viewWillDisappear:]
  -[CPSNowPlayingViewController invalidate]
  -[CPSNowPlayingViewController didSelectButton:]
  -[CPSNowPlayingViewController viewControllerDelegate]
  -[CPSNowPlayingViewController templateDelegate]
  -[CPSNowPlayingViewController setTemplateDelegate:]
  -[CPSNowPlayingViewController setControl:selected:]
  -[CPSNowPlayingViewController updateNowPlayingTemplate:withProxyDelegate:]
  -[CPSNowPlayingViewController templateProviderFuture]
  -[CPSNowPlayingViewController setTemplateProviderFuture:]
  -[CPSNowPlayingViewController associatedTemplate]
  -[CPSNowPlayingViewController setAssociatedTemplate:]
  -[CPSNowPlayingViewController _cps_viewControllerWasPopped]
  -[CPSNowPlayingViewController initWithNowPlayingTemplate:templateDelegate:environment:]
  -[CPSNowPlayingViewController audioPlaybackManager]
  -[CPSNowPlayingViewController nowPlayingTemplate]


CPSDashboardManeuversCardView : UIView /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI <CPSNavigationDisplaying>
 @property  NSArray *maneuvers
 @property  CPSPrimaryManeuverView *primaryManeuverView
 @property  CPSDashboardSecondaryManeuverView *secondaryManeuverView
 @property  NSArray *secondaryManeveuverConstraints
 @property  BOOL showSecondaryManeuverView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSDashboardManeuversCardView _updateConstraints]
  -[CPSDashboardManeuversCardView initWithFrame:]
  -[CPSDashboardManeuversCardView .cxx_destruct]
  -[CPSDashboardManeuversCardView intrinsicContentSize]
  -[CPSDashboardManeuversCardView layoutSubviews]
  -[CPSDashboardManeuversCardView showManeuvers:usingDisplayStyles:]
  -[CPSDashboardManeuversCardView updateEstimates:forManeuver:]
  -[CPSDashboardManeuversCardView wantsLargeSize]
  -[CPSDashboardManeuversCardView primaryManeuverView]
  -[CPSDashboardManeuversCardView showSecondaryManeuverView]
  -[CPSDashboardManeuversCardView secondaryManeuverView]
  -[CPSDashboardManeuversCardView secondaryManeveuverConstraints]
  -[CPSDashboardManeuversCardView setSecondaryManeveuverConstraints:]
  -[CPSDashboardManeuversCardView maneuvers]
  -[CPSDashboardManeuversCardView setPrimaryManeuverView:]
  -[CPSDashboardManeuversCardView setSecondaryManeuverView:]
  -[CPSDashboardManeuversCardView setShowSecondaryManeuverView:]
  -[CPSDashboardManeuversCardView setManeuvers:]


CPSMapButton : CPSButton
 @property  CPMapButton *mapButton

  // class methods
  +[CPSMapButton buttonWithCPMapButton:]

  // instance methods
  -[CPSMapButton charge]
  -[CPSMapButton .cxx_destruct]
  -[CPSMapButton setCharge:]
  -[CPSMapButton traitCollectionDidChange:]
  -[CPSMapButton setMapButton:]
  -[CPSMapButton _updateButtonImages]
  -[CPSMapButton mapButton]


CPSPointsOfInterestMapViewController : CPSBaseEntityContentViewController <MKMapViewDelegate, CPSPointsOfInterestMapDelegate, CPSPointsOfInterestPickerDelegate, CPSPanEventDelegate, CPSButtonDelegate, CPSActionButtonLayoutDelegate, CPSLinearFocusProviding, CLLocationManagerDelegate>
 @property  CPSPointsOfInterestPickerViewController *pickerViewController
 @property  CPSPointsOfInterestMapControlsViewController *mapControlsViewController
 @property  MKMapView *mapView
 @property  UILayoutGuide *mapVisibleRegionGuide
 @property  {?={CLLocationCoordinate2D=dd}{?=dd}} mapVisibleRegion
 @property  BOOL centerMapPending
 @property  NSArray *pickerModeConstraints
 @property  NSArray *panModeConstraints
 @property  NSMutableDictionary *annotations
 @property  NSMutableDictionary *clusterAnnotations
 @property  CPSPanViewController *panViewController
 @property  @? panCompletionHandler
 @property  CPSActionButton *donePanningButton
 @property  NSTimer *panTimer
 @property  CLLocationManager *locationManager
 @property  BOOL locationAuthorized
 @property  CLLocation *userLocation
 @property  BOOL hasPerformedInitialAnnotationLayout
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL useRightHandDriveFocusGuide

  // instance methods
  -[CPSPointsOfInterestMapViewController viewDidLoad]
  -[CPSPointsOfInterestMapViewController preferredFocusEnvironments]
  -[CPSPointsOfInterestMapViewController setMapView:]
  -[CPSPointsOfInterestMapViewController setLocationManager:]
  -[CPSPointsOfInterestMapViewController locationManager]
  -[CPSPointsOfInterestMapViewController mapView]
  -[CPSPointsOfInterestMapViewController annotations]
  -[CPSPointsOfInterestMapViewController locationManager:didFailWithError:]
  -[CPSPointsOfInterestMapViewController template]
  -[CPSPointsOfInterestMapViewController .cxx_destruct]
  -[CPSPointsOfInterestMapViewController didMoveToParentViewController:]
  -[CPSPointsOfInterestMapViewController buttonSize]
  -[CPSPointsOfInterestMapViewController pickerViewController]
  -[CPSPointsOfInterestMapViewController viewDidAppear:]
  -[CPSPointsOfInterestMapViewController buttonBackgroundColor]
  -[CPSPointsOfInterestMapViewController _linearFocusMovementSequences]
  -[CPSPointsOfInterestMapViewController zoomIn]
  -[CPSPointsOfInterestMapViewController mapView:regionDidChangeAnimated:]
  -[CPSPointsOfInterestMapViewController userLocation]
  -[CPSPointsOfInterestMapViewController locationManagerDidChangeAuthorization:]
  -[CPSPointsOfInterestMapViewController mapView:clusterAnnotationForMemberAnnotations:]
  -[CPSPointsOfInterestMapViewController setupViews]
  -[CPSPointsOfInterestMapViewController viewDidLayoutSubviews]
  -[CPSPointsOfInterestMapViewController zoomOut]
  -[CPSPointsOfInterestMapViewController font]
  -[CPSPointsOfInterestMapViewController setPickerViewController:]
  -[CPSPointsOfInterestMapViewController locationManager:didUpdateLocations:]
  -[CPSPointsOfInterestMapViewController mapView:viewForAnnotation:]
  -[CPSPointsOfInterestMapViewController mapView:didSelectAnnotationView:]
  -[CPSPointsOfInterestMapViewController didSelectButton:]
  -[CPSPointsOfInterestMapViewController isLocationAuthorized]
  -[CPSPointsOfInterestMapViewController pointsOfInterest]
  -[CPSPointsOfInterestMapViewController initWithEntity:resourceProvider:]
  -[CPSPointsOfInterestMapViewController didUpdateEntity:]
  -[CPSPointsOfInterestMapViewController _linearFocusItems]
  -[CPSPointsOfInterestMapViewController useRightHandDriveFocusGuide]
  -[CPSPointsOfInterestMapViewController picker:didUnhighlightModel:]
  -[CPSPointsOfInterestMapViewController picker:didHighlightModel:]
  -[CPSPointsOfInterestMapViewController picker:didSelectModel:]
  -[CPSPointsOfInterestMapViewController picker:didDeselectModel:]
  -[CPSPointsOfInterestMapViewController buttonRadius]
  -[CPSPointsOfInterestMapViewController panWithDirection:]
  -[CPSPointsOfInterestMapViewController panBeganWithDirection:]
  -[CPSPointsOfInterestMapViewController panEndedWithDirection:]
  -[CPSPointsOfInterestMapViewController reloadAnnotations:]
  -[CPSPointsOfInterestMapViewController updateMapViewEdgeInsetsFittingAnnotations:]
  -[CPSPointsOfInterestMapViewController hasPerformedInitialAnnotationLayout]
  -[CPSPointsOfInterestMapViewController setHasPerformedInitialAnnotationLayout:]
  -[CPSPointsOfInterestMapViewController setUpLocationManager]
  -[CPSPointsOfInterestMapViewController setUpMapView]
  -[CPSPointsOfInterestMapViewController setMapVisibleRegionGuide:]
  -[CPSPointsOfInterestMapViewController mapVisibleRegionGuide]
  -[CPSPointsOfInterestMapViewController setMapControlsViewController:]
  -[CPSPointsOfInterestMapViewController mapControlsViewController]
  -[CPSPointsOfInterestMapViewController setPanModeConstraints:]
  -[CPSPointsOfInterestMapViewController setPickerModeConstraints:]
  -[CPSPointsOfInterestMapViewController pickerModeConstraints]
  -[CPSPointsOfInterestMapViewController mapVisibleRegion]
  -[CPSPointsOfInterestMapViewController clusterAnnotations]
  -[CPSPointsOfInterestMapViewController _notifyRegionDidChange]
  -[CPSPointsOfInterestMapViewController panTimer]
  -[CPSPointsOfInterestMapViewController panViewController]
  -[CPSPointsOfInterestMapViewController setUpPanView]
  -[CPSPointsOfInterestMapViewController setPanCompletionHandler:]
  -[CPSPointsOfInterestMapViewController donePanningButton]
  -[CPSPointsOfInterestMapViewController panModeConstraints]
  -[CPSPointsOfInterestMapViewController _updateFocusedItem]
  -[CPSPointsOfInterestMapViewController setCenterMapPending:]
  -[CPSPointsOfInterestMapViewController centerMapPending]
  -[CPSPointsOfInterestMapViewController centerMap]
  -[CPSPointsOfInterestMapViewController setPanViewController:]
  -[CPSPointsOfInterestMapViewController setDonePanningButton:]
  -[CPSPointsOfInterestMapViewController dismissPanView:]
  -[CPSPointsOfInterestMapViewController setPanTimer:]
  -[CPSPointsOfInterestMapViewController panCompletionHandler]
  -[CPSPointsOfInterestMapViewController highlightModel:]
  -[CPSPointsOfInterestMapViewController unhighlightModel:]
  -[CPSPointsOfInterestMapViewController beginPanningWithCompletion:]
  -[CPSPointsOfInterestMapViewController zoomToLocation:]
  -[CPSPointsOfInterestMapViewController setClusterAnnotations:]


CPSInvisibleButton : UIButton /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI
  // instance methods
  -[CPSInvisibleButton hitTest:withEvent:]


CPSRouteRowView : UIView /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI
 @property  UIImageView *checkmarkView
 @property  CPSAbridgableLabel *title
 @property  CPSAbridgableLabel *detail
 @property  UIView *focusBackground
 @property  CPSInvisibleButton *rowButton
 @property  <CPSRouteRowInteracting> *interactionDelegate
 @property  UIStackView *labelStackView
 @property  CPRouteChoice *representedRouteChoice
 @property  BOOL selected

  // instance methods
  -[CPSRouteRowView setInteractionDelegate:]
  -[CPSRouteRowView didUpdateFocusInContext:withAnimationCoordinator:]
  -[CPSRouteRowView initWithFrame:]
  -[CPSRouteRowView setSelected:]
  -[CPSRouteRowView .cxx_destruct]
  -[CPSRouteRowView isSelected]
  -[CPSRouteRowView title]
  -[CPSRouteRowView traitCollectionDidChange:]
  -[CPSRouteRowView _updateAppearance]
  -[CPSRouteRowView interactionDelegate]
  -[CPSRouteRowView detail]
  -[CPSRouteRowView labelStackView]
  -[CPSRouteRowView setLabelStackView:]
  -[CPSRouteRowView checkmarkView]
  -[CPSRouteRowView handleRowSelection:]
  -[CPSRouteRowView representedRouteChoice]
  -[CPSRouteRowView rowButton]
  -[CPSRouteRowView focusBackground]
  -[CPSRouteRowView setRepresentedRouteChoice:]
  -[CPSRouteRowView setFocusBackground:]
  -[CPSRouteRowView setRowButton:]


CPSAlternateRoutesView : UIView /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI <CPSRouteRowInteracting, CPSLinearFocusProviding>
 @property  UIView *rowStack
 @property  NSArray *availableRouteChoices
 @property  unsigned long indexForSelectedRoute
 @property  <CPSAlternateRouteSelecting> *selectionDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL useRightHandDriveFocusGuide

  // instance methods
  -[CPSAlternateRoutesView preferredFocusEnvironments]
  -[CPSAlternateRoutesView initWithFrame:]
  -[CPSAlternateRoutesView .cxx_destruct]
  -[CPSAlternateRoutesView selectionDelegate]
  -[CPSAlternateRoutesView setSelectionDelegate:]
  -[CPSAlternateRoutesView _linearFocusItems]
  -[CPSAlternateRoutesView didSelectRow:representingRouteChoice:]
  -[CPSAlternateRoutesView setIndexForSelectedRoute:]
  -[CPSAlternateRoutesView setRowStack:]
  -[CPSAlternateRoutesView rowStack]
  -[CPSAlternateRoutesView availableRouteChoices]
  -[CPSAlternateRoutesView indexForSelectedRoute]
  -[CPSAlternateRoutesView _reloadRows]
  -[CPSAlternateRoutesView setAvailableRouteChoices:]


CPSBaseTemplateViewController : UIViewController /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI <CPSButtonDelegate, UIGestureRecognizerDelegate, CPSTemplateEnvironmentDelegate, CPBaseTemplateProviding, CPSBaseTemplateViewController, BSInvalidatable>
 @property  BOOL isPopping
 @property  BOOL didDisappear
 @property  BOOL isNowPlayingApp
 @property  UITapGestureRecognizer *backGestureRecognizer
 @property  CPTemplate *associatedTemplate
 @property  <CPTemplateDelegate> *templateDelegate
 @property  <CPSTemplateViewControllerDelegate> *viewControllerDelegate
 @property  CPSTemplateEnvironment *templateEnvironment
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NAFuture *templateProviderFuture

  // instance methods
  -[CPSBaseTemplateViewController viewDidLoad]
  -[CPSBaseTemplateViewController setViewControllerDelegate:]
  -[CPSBaseTemplateViewController dealloc]
  -[CPSBaseTemplateViewController .cxx_destruct]
  -[CPSBaseTemplateViewController gestureRecognizer:shouldReceivePress:]
  -[CPSBaseTemplateViewController _cleanup]
  -[CPSBaseTemplateViewController viewDidAppear:]
  -[CPSBaseTemplateViewController setTrailingNavigationBarButtons:]
  -[CPSBaseTemplateViewController viewWillAppear:]
  -[CPSBaseTemplateViewController viewDidDisappear:]
  -[CPSBaseTemplateViewController viewWillDisappear:]
  -[CPSBaseTemplateViewController invalidate]
  -[CPSBaseTemplateViewController isPopping]
  -[CPSBaseTemplateViewController didDisappear]
  -[CPSBaseTemplateViewController setDidDisappear:]
  -[CPSBaseTemplateViewController _updateTrailingBarButtons]
  -[CPSBaseTemplateViewController didSelectButton:]
  -[CPSBaseTemplateViewController viewControllerDelegate]
  -[CPSBaseTemplateViewController templateDelegate]
  -[CPSBaseTemplateViewController setLeadingNavigationBarButtons:]
  -[CPSBaseTemplateViewController setTemplateDelegate:]
  -[CPSBaseTemplateViewController setHostBackButton:]
  -[CPSBaseTemplateViewController setControl:enabled:]
  -[CPSBaseTemplateViewController setControl:selected:]
  -[CPSBaseTemplateViewController setBarButton:image:]
  -[CPSBaseTemplateViewController setBarButton:title:]
  -[CPSBaseTemplateViewController templateProviderFuture]
  -[CPSBaseTemplateViewController initWithTemplate:templateDelegate:templateEnvironment:]
  -[CPSBaseTemplateViewController associatedTemplate]
  -[CPSBaseTemplateViewController _viewDidLoad]
  -[CPSBaseTemplateViewController _dismissTemplateViewController]
  -[CPSBaseTemplateViewController _backGestureFired:]
  -[CPSBaseTemplateViewController setBackGestureRecognizer:]
  -[CPSBaseTemplateViewController backGestureRecognizer]
  -[CPSBaseTemplateViewController setAssociatedTemplate:]
  -[CPSBaseTemplateViewController _cps_viewControllerWasPopped]
  -[CPSBaseTemplateViewController applicationDidBecomeNowPlayingApp:]
  -[CPSBaseTemplateViewController isNowPlayingApp]
  -[CPSBaseTemplateViewController templateEnvironment]
  -[CPSBaseTemplateViewController _updateTemplate:]
  -[CPSBaseTemplateViewController setIsPopping:]
  -[CPSBaseTemplateViewController setIsNowPlayingApp:]
  -[CPSBaseTemplateViewController _updateLeadingBarButtons]
  -[CPSBaseTemplateViewController _addGestureRecognizerIfNecessary]
  -[CPSBaseTemplateViewController _nowPlayingButtonTapped:]
  -[CPSBaseTemplateViewController _barButtonItemForBarButton:]
  -[CPSBaseTemplateViewController _wantsNowPlayingButton]
  -[CPSBaseTemplateViewController _nowPlayingBarButtonItem]
  -[CPSBaseTemplateViewController _barButtonItemForIdentifier:]


CPSPrimaryManeuverView : UIView /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI
 @property  BOOL calculationViewIsSizing
 @property  double generatedWidth
 @property  UIView *junctionImageBackgroundView
 @property  CPSAbridgableLabel *titleLabel
 @property  CPSAbridgableLabel *subtitleLabel
 @property  UIImageView *symbolImageView
 @property  CPSAspectFitImageView *junctionImageView
 @property  NSArray *activeLayoutConstraints
 @property  UILayoutGuide *labelCenteringLayoutGuide
 @property  UILayoutGuide *yCenteringGuide
 @property  UILayoutGuide *centeringLayoutGuide
 @property  CPSPrimaryManeuverLayoutConfiguration *activeLayoutConfiguration
 @property  CPSPrimaryManeuverLayoutConfiguration *layoutConfigurationForIntrinsicSizing
 @property  CPManeuver *maneuver
 @property  CPTravelEstimates *currentTravelEstimates
 @property  NSArray *layoutConfigurations
 @property  BOOL usesCustomBackgroundColor

  // class methods
  +[CPSPrimaryManeuverView instructionsForManeuver:]
  +[CPSPrimaryManeuverView symbolImageForManeuver:]
  +[CPSPrimaryManeuverView junctionImageForManeuver:]

  // instance methods
  -[CPSPrimaryManeuverView _titleFont]
  -[CPSPrimaryManeuverView setTitleLabel:]
  -[CPSPrimaryManeuverView titleLabel]
  -[CPSPrimaryManeuverView _subtitleFont]
  -[CPSPrimaryManeuverView .cxx_destruct]
  -[CPSPrimaryManeuverView symbolImageView]
  -[CPSPrimaryManeuverView setSymbolImageView:]
  -[CPSPrimaryManeuverView intrinsicContentSize]
  -[CPSPrimaryManeuverView maneuver]
  -[CPSPrimaryManeuverView _init]
  -[CPSPrimaryManeuverView traitCollectionDidChange:]
  -[CPSPrimaryManeuverView sizeThatFits:]
  -[CPSPrimaryManeuverView centeringLayoutGuide]
  -[CPSPrimaryManeuverView setCenteringLayoutGuide:]
  -[CPSPrimaryManeuverView subtitleLabel]
  -[CPSPrimaryManeuverView setSubtitleLabel:]
  -[CPSPrimaryManeuverView layoutSubviews]
  -[CPSPrimaryManeuverView _minimalLayoutConstraints]
  -[CPSPrimaryManeuverView centersManeuverInView]
  -[CPSPrimaryManeuverView symbolImageHeight]
  -[CPSPrimaryManeuverView hasJunctionImageBackground]
  -[CPSPrimaryManeuverView junctionBackgroundColor]
  -[CPSPrimaryManeuverView fitJunctionViewToHeight]
  -[CPSPrimaryManeuverView initWithManeuver:]
  -[CPSPrimaryManeuverView shortestJunctionViewlayoutConfigurationForSize:]
  -[CPSPrimaryManeuverView layoutConfigurationForSize:]
  -[CPSPrimaryManeuverView shortestInstructionlayoutConfigurationForSize:]
  -[CPSPrimaryManeuverView setCurrentTravelEstimates:]
  -[CPSPrimaryManeuverView _updateJunctionBackgroundColor]
  -[CPSPrimaryManeuverView _updateSubtitleTextColor]
  -[CPSPrimaryManeuverView _generateLayoutConfigurationsForSizeIfNecessary:force:]
  -[CPSPrimaryManeuverView layoutConfigurations]
  -[CPSPrimaryManeuverView _formattedDistance]
  -[CPSPrimaryManeuverView activeLayoutConfiguration]
  -[CPSPrimaryManeuverView layoutConfigurationForIntrinsicSizing]
  -[CPSPrimaryManeuverView calculationViewIsSizing]
  -[CPSPrimaryManeuverView _switchToLayoutConfiguration:]
  -[CPSPrimaryManeuverView generatedWidth]
  -[CPSPrimaryManeuverView setCalculationViewIsSizing:]
  -[CPSPrimaryManeuverView setGeneratedWidth:]
  -[CPSPrimaryManeuverView junctionImageView]
  -[CPSPrimaryManeuverView _activateFullLayoutWideImageConstraints]
  -[CPSPrimaryManeuverView _activateFullLayoutConstraints]
  -[CPSPrimaryManeuverView _activateJunctionViewNoInstructionWideImageConstraints]
  -[CPSPrimaryManeuverView _activateJunctionViewNoInstructionConstraints]
  -[CPSPrimaryManeuverView _activateFullNoJunctionViewWideImageLayoutConstraints]
  -[CPSPrimaryManeuverView _activateFullNoJunctionViewLayoutConstraints]
  -[CPSPrimaryManeuverView _activateFullSubtitleNextToImageConstraints]
  -[CPSPrimaryManeuverView _activateMinimalWideImageLayoutConstraints]
  -[CPSPrimaryManeuverView _activateMinimalLayoutConstraints]
  -[CPSPrimaryManeuverView _compareInstruction:toInstruction:]
  -[CPSPrimaryManeuverView setLayoutConfigurations:]
  -[CPSPrimaryManeuverView _fullLayoutConstraints]
  -[CPSPrimaryManeuverView setActiveLayoutConstraints:]
  -[CPSPrimaryManeuverView _fullLayoutWideImageConstraints]
  -[CPSPrimaryManeuverView _junctionViewNoSubtitleConstraints]
  -[CPSPrimaryManeuverView _junctionViewNoInstructionWideImageConstraints]
  -[CPSPrimaryManeuverView _fullLayoutNoJunctionViewConstraints]
  -[CPSPrimaryManeuverView _fullLayoutNoJunctionViewWideImageConstraints]
  -[CPSPrimaryManeuverView _minimalLayoutWideImageConstraints]
  -[CPSPrimaryManeuverView _fullSubtitleNextToImageConstraints]
  -[CPSPrimaryManeuverView yCenteringGuide]
  -[CPSPrimaryManeuverView labelCenteringLayoutGuide]
  -[CPSPrimaryManeuverView setActiveLayoutConfiguration:]
  -[CPSPrimaryManeuverView currentTravelEstimates]
  -[CPSPrimaryManeuverView usesCustomBackgroundColor]
  -[CPSPrimaryManeuverView junctionImageBackgroundView]
  -[CPSPrimaryManeuverView setUsesCustomBackgroundColor:]
  -[CPSPrimaryManeuverView setJunctionImageView:]
  -[CPSPrimaryManeuverView activeLayoutConstraints]
  -[CPSPrimaryManeuverView setLabelCenteringLayoutGuide:]
  -[CPSPrimaryManeuverView setYCenteringGuide:]
  -[CPSPrimaryManeuverView setLayoutConfigurationForIntrinsicSizing:]
  -[CPSPrimaryManeuverView setJunctionImageBackgroundView:]


CPSContactEntityViewController : CPSBaseEntityContentViewController <CPSActionButtonLayoutDelegate>
 @property  CPSAvatarViewController *avatarViewController
 @property  CPSNameViewController *nameViewController
 @property  CPSActionsViewController *actionsController
 @property  NSArray *layoutConstraints
 @property  UILayoutGuide *centeringLayoutGuide
 @property  UILayoutGuide *avatarAndDetailsLayoutGuide
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSContactEntityViewController viewDidLoad]
  -[CPSContactEntityViewController .cxx_destruct]
  -[CPSContactEntityViewController avatarViewController]
  -[CPSContactEntityViewController traitCollectionDidChange:]
  -[CPSContactEntityViewController setupViewControllers]
  -[CPSContactEntityViewController setupLayoutGuides]
  -[CPSContactEntityViewController actionsController]
  -[CPSContactEntityViewController resetLayoutConstraints]
  -[CPSContactEntityViewController setupLayoutConstraints]
  -[CPSContactEntityViewController layoutConstraints]
  -[CPSContactEntityViewController setLayoutConstraints:]
  -[CPSContactEntityViewController centeringLayoutGuide]
  -[CPSContactEntityViewController setCenteringLayoutGuide:]
  -[CPSContactEntityViewController avatarAndDetailsLayoutGuide]
  -[CPSContactEntityViewController setAvatarAndDetailsLayoutGuide:]
  -[CPSContactEntityViewController updateViewConstraints]
  -[CPSContactEntityViewController initWithEntity:resourceProvider:]
  -[CPSContactEntityViewController didUpdateEntity:]
  -[CPSContactEntityViewController buttonsShouldFill]
  -[CPSContactEntityViewController configureButton:]
  -[CPSContactEntityViewController nameViewController]
  -[CPSContactEntityViewController personEntity]


CPSAspectFitImageView : UIImageView /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI
 @property  NSLayoutConstraint *aspectConstraint

  // instance methods
  -[CPSAspectFitImageView _updateConstraints]
  -[CPSAspectFitImageView init]
  -[CPSAspectFitImageView .cxx_destruct]
  -[CPSAspectFitImageView setImage:]
  -[CPSAspectFitImageView aspectConstraint]
  -[CPSAspectFitImageView setAspectConstraint:]


CPSPointsOfInterestMapControlsViewController : UIViewController /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI <CPSButtonDelegate, CPSLinearFocusProviding>
 @property  <CPSPointsOfInterestMapDelegate> *mapDelegate
 @property  CPSEntityMapButton *zoomInButton
 @property  CPSEntityMapButton *zoomOutButton
 @property  CPSEntityMapButton *panButton
 @property  CPSEntityMapButton *centerButton
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL useRightHandDriveFocusGuide

  // instance methods
  -[CPSPointsOfInterestMapControlsViewController setMapDelegate:]
  -[CPSPointsOfInterestMapControlsViewController viewDidLoad]
  -[CPSPointsOfInterestMapControlsViewController .cxx_destruct]
  -[CPSPointsOfInterestMapControlsViewController mapDelegate]
  -[CPSPointsOfInterestMapControlsViewController centerButton]
  -[CPSPointsOfInterestMapControlsViewController setupViews]
  -[CPSPointsOfInterestMapControlsViewController didSelectButton:]
  -[CPSPointsOfInterestMapControlsViewController _linearFocusItems]
  -[CPSPointsOfInterestMapControlsViewController initWithMapDelegate:]
  -[CPSPointsOfInterestMapControlsViewController zoomInButton]
  -[CPSPointsOfInterestMapControlsViewController zoomOutButton]
  -[CPSPointsOfInterestMapControlsViewController setPanButton:]
  -[CPSPointsOfInterestMapControlsViewController panButton]
  -[CPSPointsOfInterestMapControlsViewController setZoomInButton:]
  -[CPSPointsOfInterestMapControlsViewController setZoomOutButton:]
  -[CPSPointsOfInterestMapControlsViewController setCenterButton:]
  -[CPSPointsOfInterestMapControlsViewController zoomInPressed:]
  -[CPSPointsOfInterestMapControlsViewController zoomOutPressed:]
  -[CPSPointsOfInterestMapControlsViewController panPressed:]
  -[CPSPointsOfInterestMapControlsViewController centerPressed:]


CPSStyledTextButton : CPSButton
 @property  UIFont *fontOverride

  // class methods
  +[CPSStyledTextButton buttonWithTextButton:]

  // instance methods
  -[CPSStyledTextButton .cxx_destruct]
  -[CPSStyledTextButton traitCollectionDidChange:]
  -[CPSStyledTextButton _buttonFont]
  -[CPSStyledTextButton _externalUnfocusedBorderColor]
  -[CPSStyledTextButton fontOverride]
  -[CPSStyledTextButton setFontOverride:]


CPSNavigator : NSObject /usr/lib/libSystem.B.dylib <CARNavigationOwnershipManagerDelegate, CPNavigationSessionManaging, BSInvalidatable>
 @property  BOOL completed
 @property  NSHashTable *displayDelegates
 @property  CARNavigationOwnershipManager *navigationOwnershipManager
 @property  CPTrip *trip
 @property  <CARNavigationOwnershipManagerDelegate> *navigationOwnershipDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSNavigator trip]
  -[CPSNavigator dealloc]
  -[CPSNavigator .cxx_destruct]
  -[CPSNavigator setCompleted:]
  -[CPSNavigator initWithIdentifier:]
  -[CPSNavigator navigationOwnershipChangedToOwner:]
  -[CPSNavigator isCompleted]
  -[CPSNavigator invalidate]
  -[CPSNavigator pauseTripForReason:description:]
  -[CPSNavigator finishTrip]
  -[CPSNavigator cancelTrip]
  -[CPSNavigator showManeuvers:usingDisplayStyles:]
  -[CPSNavigator updateTravelEstimates:forManeuver:]
  -[CPSNavigator setTrip:]
  -[CPSNavigator updateTripTravelEstimates:]
  -[CPSNavigator addDisplayDelegate:]
  -[CPSNavigator displayDelegates]
  -[CPSNavigator navigationOwnershipManager]
  -[CPSNavigator navigationOwnershipDelegate]
  -[CPSNavigator removeDisplayDelegate:]
  -[CPSNavigator setNavigationOwnershipDelegate:]
  -[CPSNavigator setDisplayDelegates:]
  -[CPSNavigator setNavigationOwnershipManager:]


CPSCardPlatterView : UIView /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI
  // instance methods
  -[CPSCardPlatterView setBackgroundColor:]
  -[CPSCardPlatterView initWithFrame:]
  -[CPSCardPlatterView traitCollectionDidChange:]
  -[CPSCardPlatterView didAddSubview:]
  -[CPSCardPlatterView _updateStyleOverridesForSubviews]


CPSBannerItem : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *bundleIdentifier
 @property  NSUUID *identifier
 @property  <CPSBannerItemDelegate> *delegate
 @property  NSArray *textVariants
 @property  NSArray *detailTextVariants
 @property  NSArray *attributedDetailTextVariants
 @property  CPImageSet *imageSet

  // instance methods
  -[CPSBannerItem .cxx_destruct]
  -[CPSBannerItem setIdentifier:]
  -[CPSBannerItem identifier]
  -[CPSBannerItem setBundleIdentifier:]
  -[CPSBannerItem isEqual:]
  -[CPSBannerItem setDelegate:]
  -[CPSBannerItem bundleIdentifier]
  -[CPSBannerItem delegate]
  -[CPSBannerItem imageSet]
  -[CPSBannerItem textVariants]
  -[CPSBannerItem detailTextVariants]
  -[CPSBannerItem attributedDetailTextVariants]
  -[CPSBannerItem isEqualToBannerItem:]
  -[CPSBannerItem initWithIdentifier:bundleIdentifier:textVariants:detailTextVariants:attributedDetailTextVariants:imageSet:delegate:]


CPSLabeledValueView : UIView /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI
 @property  UILabel *valueText
 @property  UILabel *label

  // instance methods
  -[CPSLabeledValueView init]
  -[CPSLabeledValueView .cxx_destruct]
  -[CPSLabeledValueView label]
  -[CPSLabeledValueView setTextColor:]
  -[CPSLabeledValueView valueText]


CPSRouteEstimatesView : UIView /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI
 @property  CPSLabeledValueView *arrivalTimeView
 @property  CPSLabeledValueView *distanceRemainingView
 @property  CPSTravelEstimatesStringFormatter *travelEstimatesStringFormatter
 @property  unsigned long timeRemainingColor
 @property  NSTimeZone *arrivalTimeZone
 @property  CPSLabeledValueView *timeRemainingView

  // instance methods
  -[CPSRouteEstimatesView arrivalTimeZone]
  -[CPSRouteEstimatesView .cxx_destruct]
  -[CPSRouteEstimatesView initWithStyle:]
  -[CPSRouteEstimatesView _updateTextColors]
  -[CPSRouteEstimatesView timeRemainingColor]
  -[CPSRouteEstimatesView setTimeRemainingColor:]
  -[CPSRouteEstimatesView setTripEstimateStyle:]
  -[CPSRouteEstimatesView setCurrentTravelEstimates:]
  -[CPSRouteEstimatesView timeRemainingView]
  -[CPSRouteEstimatesView distanceRemainingView]
  -[CPSRouteEstimatesView arrivalTimeView]
  -[CPSRouteEstimatesView travelEstimatesStringFormatter]
  -[CPSRouteEstimatesView setArrivalTimeZone:]


CPSLayoutHelperView : UIView /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI
 @property  <CPSLayoutHelperViewDelegate> *layoutDelegate

  // instance methods
  -[CPSLayoutHelperView layoutDelegate]
  -[CPSLayoutHelperView setLayoutDelegate:]
  -[CPSLayoutHelperView init]
  -[CPSLayoutHelperView .cxx_destruct]
  -[CPSLayoutHelperView layoutSubviews]


CPSAudioPlaybackManager : NSObject /usr/lib/libSystem.B.dylib <CPUINowPlayingObserving, CARSessionObserving, CPUINowPlayingViewControllerDataSource, CPUINowPlayingViewControllerDelegate>
 @property  CPUINowPlayingManager *nowPlayingManager
 @property  CPNowPlayingTemplate *template
 @property  <CPNowPlayingClientTemplateDelegate> *templateDelegate
 @property  CARSessionStatus *sessionStatus
 @property  MPArtworkCatalog *artworkCatalog
 @property  UIImage *fullSizeArtwork
 @property  CPUINowPlayingSnapshot *lastSnapshot
 @property  CPSTemplateEnvironment *environment
 @property  BOOL actionStateHeld
 @property  BOOL shouldShowAlbumArt
 @property  CPSNowPlayingViewController *nowPlayingViewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSAudioPlaybackManager artworkCatalog]
  -[CPSAudioPlaybackManager setEnvironment:]
  -[CPSAudioPlaybackManager template]
  -[CPSAudioPlaybackManager dealloc]
  -[CPSAudioPlaybackManager .cxx_destruct]
  -[CPSAudioPlaybackManager setLastSnapshot:]
  -[CPSAudioPlaybackManager setArtworkCatalog:]
  -[CPSAudioPlaybackManager session:didUpdateConfiguration:]
  -[CPSAudioPlaybackManager setNowPlayingViewController:]
  -[CPSAudioPlaybackManager nowPlayingViewController]
  -[CPSAudioPlaybackManager sessionStatus]
  -[CPSAudioPlaybackManager setSessionStatus:]
  -[CPSAudioPlaybackManager lastSnapshot]
  -[CPSAudioPlaybackManager environment]
  -[CPSAudioPlaybackManager templateDelegate]
  -[CPSAudioPlaybackManager setTemplateDelegate:]
  -[CPSAudioPlaybackManager nowPlayingManager:didUpdateSnapshot:]
  -[CPSAudioPlaybackManager nowPlayingManager:didThrottleUpdateForBundleIdentifier:]
  -[CPSAudioPlaybackManager initWithNowPlayingTemplate:templateDelegate:environment:]
  -[CPSAudioPlaybackManager updateNowPlayingTemplate:templateDelegate:]
  -[CPSAudioPlaybackManager _updateAlbumArtFromSessionConfiguration:]
  -[CPSAudioPlaybackManager fullSizeArtwork]
  -[CPSAudioPlaybackManager setFullSizeArtwork:]
  -[CPSAudioPlaybackManager nowPlayingButtonWithClass:]
  -[CPSAudioPlaybackManager nowPlayingButtonWithIdentifier:]
  -[CPSAudioPlaybackManager setActionStateHeld:]
  -[CPSAudioPlaybackManager actionStateHeld]
  -[CPSAudioPlaybackManager nowPlayingViewControllerIsPlaying:]
  -[CPSAudioPlaybackManager nowPlayingManager]
  -[CPSAudioPlaybackManager shouldShowAlbumArt]
  -[CPSAudioPlaybackManager _loadArtworkIfNeeded:]
  -[CPSAudioPlaybackManager artistTextForNowPlayingController:]
  -[CPSAudioPlaybackManager albumTextForNowPlayingController:]
  -[CPSAudioPlaybackManager titleForNowPlayingController:]
  -[CPSAudioPlaybackManager backgroundArtForNowPlayingController:]
  -[CPSAudioPlaybackManager nowPlayingViewControllerIsShowingExplicitTrack:]
  -[CPSAudioPlaybackManager durationSnapshotForNowPlayingViewController:]
  -[CPSAudioPlaybackManager placeholderTypeForNowPlayingViewController:]
  -[CPSAudioPlaybackManager shuffleTypeForNowPlayingViewController:]
  -[CPSAudioPlaybackManager repeatTypeForNowPlayingViewController:]
  -[CPSAudioPlaybackManager nowPlayingViewController:shouldDisplayButton:withImage:existingIdentifier:tinted:]
  -[CPSAudioPlaybackManager nowPlayingViewController:buttonShouldBeActive:]
  -[CPSAudioPlaybackManager nowPlayingViewController:didSendAction:state:]
  -[CPSAudioPlaybackManager nowPlayingViewControllerCanShuffle:]
  -[CPSAudioPlaybackManager nowPlayingViewControllerToggleShuffle:]
  -[CPSAudioPlaybackManager nowPlayingViewControllerCanRepeat:]
  -[CPSAudioPlaybackManager nowPlayingViewControllerToggleRepeat:]
  -[CPSAudioPlaybackManager nowPlayingViewControllerCanShowAddToLibrary:]
  -[CPSAudioPlaybackManager nowPlayingViewControllerAddToLibrary:]
  -[CPSAudioPlaybackManager nowPlayingViewControllerCanShowAlbumLink:]
  -[CPSAudioPlaybackManager nowPlayingViewControllerAlbumArtistButtonTapped:]
  -[CPSAudioPlaybackManager nowPlayingViewControllerCanShowUpNext:]
  -[CPSAudioPlaybackManager titleForUpNextInNowPlayingViewController:]
  -[CPSAudioPlaybackManager nowPlayingViewControllerUpNextButtonTapped:]
  -[CPSAudioPlaybackManager nowPlayingViewControllerCanShowChangePlaybackRate:]
  -[CPSAudioPlaybackManager nowPlayingViewControllerChangePlaybackRate:]
  -[CPSAudioPlaybackManager nowPlayingViewControllerGetPlaybackRate:]
  -[CPSAudioPlaybackManager nowPlayingViewControllerCanShowMore:]
  -[CPSAudioPlaybackManager nowPlayingViewControllerMore:]
  -[CPSAudioPlaybackManager nowPlayingViewControllerCanShowAlbumArt:]
  -[CPSAudioPlaybackManager nowPlayingViewControllerWillAppear:]
  -[CPSAudioPlaybackManager customPlaybackControlButtonsForNowPlayingViewController:]
  -[CPSAudioPlaybackManager nowPlayingViewController:didSelectButton:]
  -[CPSAudioPlaybackManager setNowPlayingManager:]
  -[CPSAudioPlaybackManager setShouldShowAlbumArt:]


CPSGridTemplateView : UIView /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI
  // instance methods
  -[CPSGridTemplateView .cxx_destruct]
  -[CPSGridTemplateView layoutSubviews]
  -[CPSGridTemplateView buttonViewCountThatFits:buttonPadding:]
  -[CPSGridTemplateView initWithGridButtons:]


CPSGridTemplateViewController : CPSBaseTemplateViewController <CPSButtonDelegate, CPGridTemplateProviding>
 @property  NSArray *gridButtons
 @property  CPGridTemplate *gridTemplate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSGridTemplateViewController .cxx_destruct]
  -[CPSGridTemplateViewController didSelectButton:]
  -[CPSGridTemplateViewController setControl:enabled:]
  -[CPSGridTemplateViewController gridButtons]
  -[CPSGridTemplateViewController _viewDidLoad]
  -[CPSGridTemplateViewController initWithGridTemplate:interfaceDelegate:templateEnvironment:]
  -[CPSGridTemplateViewController _wantsNowPlayingButton]
  -[CPSGridTemplateViewController gridTemplate]
  -[CPSGridTemplateViewController setGridButtons:]
  -[CPSGridTemplateViewController _buttonForIdentifier:]


CPSActionButton : CPSButton
 @property  UILabel *buttonLabel
 @property  UIImageView *buttonImageView
 @property  NSArray *layoutConstraints
 @property  NSMutableDictionary *tintColors
 @property  <CPSActionButtonLayoutDelegate> *layoutDelegate
 @property  UIImage *buttonImage
 @property  NSString *buttonText
 @property  BOOL disabledButtonFocused
 @property  NSDictionary *buttonAttributes

  // instance methods
  -[CPSActionButton layoutDelegate]
  -[CPSActionButton setLayoutDelegate:]
  -[CPSActionButton didUpdateFocusInContext:withAnimationCoordinator:]
  -[CPSActionButton buttonText]
  -[CPSActionButton updateViews]
  -[CPSActionButton stateUpdated]
  -[CPSActionButton disabledButtonFocused]
  -[CPSActionButton setDisabledButtonFocused:]
  -[CPSActionButton initWithFrame:]
  -[CPSActionButton canBecomeFocused]
  -[CPSActionButton setButtonLabel:]
  -[CPSActionButton updateConstraints]
  -[CPSActionButton _updateLayout]
  -[CPSActionButton setSelected:]
  -[CPSActionButton .cxx_destruct]
  -[CPSActionButton setHighlighted:]
  -[CPSActionButton setButtonImage:]
  -[CPSActionButton intrinsicContentSize]
  -[CPSActionButton setTintColor:forState:]
  -[CPSActionButton setButtonText:]
  -[CPSActionButton traitCollectionDidChange:]
  -[CPSActionButton buttonImage]
  -[CPSActionButton resetLayoutConstraints]
  -[CPSActionButton setupLayoutConstraints]
  -[CPSActionButton layoutConstraints]
  -[CPSActionButton setLayoutConstraints:]
  -[CPSActionButton setEnabled:]
  -[CPSActionButton buttonLabel]
  -[CPSActionButton setupViews]
  -[CPSActionButton layoutSubviews]
  -[CPSActionButton buttonAttributes]
  -[CPSActionButton setButtonImageView:]
  -[CPSActionButton buttonImageView]
  -[CPSActionButton tintColors]
  -[CPSActionButton setTintColors:]
  -[CPSActionButton setButtonAttributes:]


CPSNavigationCardViewController : UIViewController /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI <CPSNavigationDisplaying>
 @property  NSLayoutConstraint *containerViewHeightConstraint
 @property  NSLayoutConstraint *containerViewTopConstraint
 @property  NSLayoutConstraint *sizingViewBottomConstraint
 @property  UIView *containerView
 @property  CPSManeuversCardView *currentManeuversCardView
 @property  CPSPausedCardView *currentPausedCardView
 @property  NSMutableSet *navigationCardHiddenRequesters
 @property  BOOL passesLinkCheck
 @property  NSArray *layoutHelperVerticalConstraints
 @property  CPSLayoutHelperView *layoutHelperView
 @property  UIColor *guidanceBackgroundColor
 @property  BOOL navigationCardHidden
 @property  NSString *navigatingBundleIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSNavigationCardViewController viewDidLoad]
  -[CPSNavigationCardViewController setContainerView:]
  -[CPSNavigationCardViewController .cxx_destruct]
  -[CPSNavigationCardViewController viewWillLayoutSubviews]
  -[CPSNavigationCardViewController containerViewTopConstraint]
  -[CPSNavigationCardViewController setContainerViewTopConstraint:]
  -[CPSNavigationCardViewController containerView]
  -[CPSNavigationCardViewController _shouldAnimate]
  -[CPSNavigationCardViewController showManeuvers:usingDisplayStyles:]
  -[CPSNavigationCardViewController guidanceBackgroundColor]
  -[CPSNavigationCardViewController setGuidanceBackgroundColor:]
  -[CPSNavigationCardViewController updateEstimates:forManeuver:]
  -[CPSNavigationCardViewController navigator:pausedTripForReason:description:]
  -[CPSNavigationCardViewController updateTripEstimates:]
  -[CPSNavigationCardViewController navigator:didEndTrip:]
  -[CPSNavigationCardViewController layoutHelperVerticalConstraints]
  -[CPSNavigationCardViewController currentManeuversCardView]
  -[CPSNavigationCardViewController layoutHelperView]
  -[CPSNavigationCardViewController currentPausedCardView]
  -[CPSNavigationCardViewController setLayoutHelperVerticalConstraints:]
  -[CPSNavigationCardViewController setContainerViewHeightConstraint:]
  -[CPSNavigationCardViewController containerViewHeightConstraint]
  -[CPSNavigationCardViewController setNavigationCardHidden:forRequester:animated:completion:]
  -[CPSNavigationCardViewController navigationCardHiddenRequesters]
  -[CPSNavigationCardViewController _updateNavigationCardHidden]
  -[CPSNavigationCardViewController navigationCardHidden]
  -[CPSNavigationCardViewController setNavigationCardHidden:]
  -[CPSNavigationCardViewController setCurrentManeuversCardView:]
  -[CPSNavigationCardViewController setCurrentPausedCardView:]
  -[CPSNavigationCardViewController _updateCardBackgroundColors]
  -[CPSNavigationCardViewController _updateHelperConstraints]
  -[CPSNavigationCardViewController _transitionFromViews:inView:]
  -[CPSNavigationCardViewController _showPausedViewForReason:description:]
  -[CPSNavigationCardViewController passesLinkCheck]
  -[CPSNavigationCardViewController navigatingBundleIdentifier]
  -[CPSNavigationCardViewController setPassesLinkCheck:]
  -[CPSNavigationCardViewController _updateLinkedCheck]
  -[CPSNavigationCardViewController availableHeightChangedTo:]
  -[CPSNavigationCardViewController _updateSizingViewConstraintsForView:]
  -[CPSNavigationCardViewController setNavigatingBundleIdentifier:]
  -[CPSNavigationCardViewController sizingViewBottomConstraint]
  -[CPSNavigationCardViewController setSizingViewBottomConstraint:]
  -[CPSNavigationCardViewController setNavigationCardHiddenRequesters:]


CPSBaseEntityContentViewController : UIViewController /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI <CPSEntityContentViewControllerDelegate>
 @property  CPSEntityResourceProvider *resourceProvider
 @property  CPEntity *entity
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSBaseEntityContentViewController entity]
  -[CPSBaseEntityContentViewController .cxx_destruct]
  -[CPSBaseEntityContentViewController resourceProvider]
  -[CPSBaseEntityContentViewController setResourceProvider:]
  -[CPSBaseEntityContentViewController initWithEntity:resourceProvider:]
  -[CPSBaseEntityContentViewController didUpdateEntity:]
  -[CPSBaseEntityContentViewController updateWithEntity:]
  -[CPSBaseEntityContentViewController shouldAppearInUnsafeArea]
  -[CPSBaseEntityContentViewController viewController:didPressButton:]


CPSDashboardSecondaryManeuverView : CPSSecondaryManeuverView
  // instance methods
  -[CPSDashboardSecondaryManeuverView horizontalInset]
  -[CPSDashboardSecondaryManeuverView initWithManeuver:]


CPSSearchTemplateViewController : UISearchContainerViewController /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI <UISearchResultsUpdating, UISearchBarDelegate, UISearchControllerDelegate, CPListTemplateDelegate, CPSBaseTemplateViewController, CPSearchTemplateProviding>
 @property  CPListTemplate *listTemplate
 @property  CPSearchTemplate *searchTemplate
 @property  <CPSearchClientTemplateDelegate> *searchTemplateDelegate
 @property  BOOL didPop
 @property  BOOL didDisappear
 @property  <CPSTemplateViewControllerDelegate> *viewControllerDelegate
 @property  CPTemplate *associatedTemplate
 @property  <CPTemplateDelegate> *templateDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NAFuture *templateProviderFuture

  // instance methods
  -[CPSSearchTemplateViewController viewDidLoad]
  -[CPSSearchTemplateViewController didDismissSearchController:]
  -[CPSSearchTemplateViewController updateSearchResultsForSearchController:]
  -[CPSSearchTemplateViewController setViewControllerDelegate:]
  -[CPSSearchTemplateViewController .cxx_destruct]
  -[CPSSearchTemplateViewController didPop]
  -[CPSSearchTemplateViewController _cleanup]
  -[CPSSearchTemplateViewController searchBarShouldEndEditing:]
  -[CPSSearchTemplateViewController viewDidAppear:]
  -[CPSSearchTemplateViewController viewWillAppear:]
  -[CPSSearchTemplateViewController viewDidDisappear:]
  -[CPSSearchTemplateViewController viewWillDisappear:]
  -[CPSSearchTemplateViewController searchBarSearchButtonClicked:]
  -[CPSSearchTemplateViewController didDisappear]
  -[CPSSearchTemplateViewController setDidDisappear:]
  -[CPSSearchTemplateViewController viewControllerDelegate]
  -[CPSSearchTemplateViewController templateDelegate]
  -[CPSSearchTemplateViewController setTemplateDelegate:]
  -[CPSSearchTemplateViewController templateProviderFuture]
  -[CPSSearchTemplateViewController listTemplate]
  -[CPSSearchTemplateViewController setListTemplate:]
  -[CPSSearchTemplateViewController listTemplate:didSelectListItem:completionHandler:]
  -[CPSSearchTemplateViewController associatedTemplate]
  -[CPSSearchTemplateViewController setAssociatedTemplate:]
  -[CPSSearchTemplateViewController _cps_viewControllerWasPopped]
  -[CPSSearchTemplateViewController initWithSearchTemplate:templateDelegate:templateEnvironment:interactionModel:]
  -[CPSSearchTemplateViewController setDidPop:]
  -[CPSSearchTemplateViewController searchTemplateDelegate]
  -[CPSSearchTemplateViewController searchTemplate]
  -[CPSSearchTemplateViewController _isSceneActive]


CPSNavigationAlertQueue : NSObject /usr/lib/libSystem.B.dylib <CPSButtonDelegate, CPSApplicationStateObserving>
 @property  NSTimer *alertTimer
 @property  <CPTemplateDelegate> *templateDelegate
 @property  CPSApplicationStateMonitor *applicationStateMonitor
 @property  <CPSNavigationAlertQueueDelegate> *delegate
 @property  CPNavigationAlert *currentAlert
 @property  CPSNavigationAlertView *currentAlertView
 @property  BOOL isDisplayingAlert
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSNavigationAlertQueue .cxx_destruct]
  -[CPSNavigationAlertQueue applicationStateMonitor]
  -[CPSNavigationAlertQueue setApplicationStateMonitor:]
  -[CPSNavigationAlertQueue delegate]
  -[CPSNavigationAlertQueue currentAlert]
  -[CPSNavigationAlertQueue didSelectButton:]
  -[CPSNavigationAlertQueue templateDelegate]
  -[CPSNavigationAlertQueue setTemplateDelegate:]
  -[CPSNavigationAlertQueue applicationStateMonitor:didBecomeActive:]
  -[CPSNavigationAlertQueue alertTimer]
  -[CPSNavigationAlertQueue beginAnimatingAlertIfPossible]
  -[CPSNavigationAlertQueue currentAlertView]
  -[CPSNavigationAlertQueue _canBeginAnimatingAlert]
  -[CPSNavigationAlertQueue _startAlertAnimations]
  -[CPSNavigationAlertQueue _visibleAlertTimerFired:]
  -[CPSNavigationAlertQueue dismissCurrentNavigationAlertAnimated:context:completion:]
  -[CPSNavigationAlertQueue initWithDelegate:applicationStateMonitor:]
  -[CPSNavigationAlertQueue isDisplayingAlert]
  -[CPSNavigationAlertQueue prepareNavigationAlert:templateDelegate:animated:]
  -[CPSNavigationAlertQueue setAlertTimer:]


CPSEntityViewController : CPSBaseTemplateViewController <CPSEntityActionDelegate, CPEntityUpdateProviding>
 @property  CPEntity *entity
 @property  CPSBaseEntityContentViewController *contentViewController
 @property  NSMapTable *buttonMap
 @property  CPSEntityResourceProvider *resourceProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSEntityViewController entity]
  -[CPSEntityViewController .cxx_destruct]
  -[CPSEntityViewController resourceProvider]
  -[CPSEntityViewController setupViewControllers]
  -[CPSEntityViewController setButtonMap:]
  -[CPSEntityViewController buttonMap]
  -[CPSEntityViewController contentViewController]
  -[CPSEntityViewController updateEntityTemplate:withProxyDelegate:]
  -[CPSEntityViewController setResourceProvider:]
  -[CPSEntityViewController _viewDidLoad]
  -[CPSEntityViewController entityTemplate]
  -[CPSEntityViewController entityContentViewController:didPressButton:forPOI:]
  -[CPSEntityViewController initWithEntityTemplate:templateDelegate:templateEnvironment:]
  -[CPSEntityViewController entityContentViewController:regionDidChange:]
  -[CPSEntityViewController entityContentViewController:didSelectPointOfInterestWithIdentifier:]
  -[CPSEntityViewController entityContentViewController:didPressButton:forEntity:]
  -[CPSEntityViewController entityTemplateDelegate]
  -[CPSEntityViewController trailingBarButtonPressed:]


CPSEntityUtility : NSObject /usr/lib/libSystem.B.dylib
 @property  CARSessionStatus *sessionStatus
 @property  CARSession *currentSession
 @property  BOOL rightHandDrive

  // class methods
  +[CPSEntityUtility sharedInstance]

  // instance methods
  -[CPSEntityUtility init]
  -[CPSEntityUtility .cxx_destruct]
  -[CPSEntityUtility currentSession]
  -[CPSEntityUtility sessionStatus]
  -[CPSEntityUtility setSessionStatus:]
  -[CPSEntityUtility rightHandDrive]


CPSPointsOfInterestPickerCell : UITableViewCell /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI
 @property  BOOL chosen

  // class methods
  +[CPSPointsOfInterestPickerCell identifier]

  // instance methods
  -[CPSPointsOfInterestPickerCell initWithStyle:reuseIdentifier:]
  -[CPSPointsOfInterestPickerCell didUpdateFocusInContext:withAnimationCoordinator:]
  -[CPSPointsOfInterestPickerCell setSelected:animated:]
  -[CPSPointsOfInterestPickerCell chosen]
  -[CPSPointsOfInterestPickerCell setHighlighted:]
  -[CPSPointsOfInterestPickerCell isSelected]
  -[CPSPointsOfInterestPickerCell prepareForReuse]
  -[CPSPointsOfInterestPickerCell setChosen:]
  -[CPSPointsOfInterestPickerCell setupViews]


CPSDashboardEstimatesView : UIView /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI <CPSNavigationDisplaying>
 @property  UILabel *etaLabel
 @property  UILabel *timeRemainingLabel
 @property  UILabel *distanceRemainingLabel
 @property  UIStackView *stackView
 @property  CPSTravelEstimatesStringFormatter *travelEstimatesStringFormatter
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSDashboardEstimatesView stackView]
  -[CPSDashboardEstimatesView initWithFrame:]
  -[CPSDashboardEstimatesView .cxx_destruct]
  -[CPSDashboardEstimatesView timeRemainingLabel]
  -[CPSDashboardEstimatesView setTimeRemainingLabel:]
  -[CPSDashboardEstimatesView etaLabel]
  -[CPSDashboardEstimatesView traitCollectionDidChange:]
  -[CPSDashboardEstimatesView setStackView:]
  -[CPSDashboardEstimatesView _labelFont]
  -[CPSDashboardEstimatesView layoutSubviews]
  -[CPSDashboardEstimatesView updateTripEstimates:]
  -[CPSDashboardEstimatesView travelEstimatesStringFormatter]
  -[CPSDashboardEstimatesView distanceRemainingLabel]
  -[CPSDashboardEstimatesView setEtaLabel:]
  -[CPSDashboardEstimatesView setDistanceRemainingLabel:]
  -[CPSDashboardEstimatesView setTravelEstimatesStringFormatter:]


CPSEmptyView : UIView /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI
 @property  CPSAbridgableLabel *titleLabel
 @property  CPSAbridgableLabel *subtitleLabel
 @property  NSArray *titleVariants
 @property  NSArray *subtitleVariants

  // instance methods
  -[CPSEmptyView setTitleLabel:]
  -[CPSEmptyView titleLabel]
  -[CPSEmptyView initWithFrame:]
  -[CPSEmptyView .cxx_destruct]
  -[CPSEmptyView traitCollectionDidChange:]
  -[CPSEmptyView subtitleLabel]
  -[CPSEmptyView setSubtitleLabel:]
  -[CPSEmptyView titleVariants]
  -[CPSEmptyView subtitleVariants]
  -[CPSEmptyView _updateLabelTraits]
  -[CPSEmptyView setTitleVariants:]
  -[CPSEmptyView setSubtitleVariants:]


CPSListTemplateViewController : CPSBaseTemplateViewController <UITableViewDelegate, CPUINowPlayingObserving, CPListTemplateProviding>
 @property  CPSSectionedDataSource *dataSource
 @property  NSUUID *currentSpinningIdentifier
 @property  NSUUID *nextSpinningIdentifier
 @property  unsigned long spinnerState
 @property  NSTimer *spinnerStartTimer
 @property  NSTimer *spinnerTimeoutTimer
 @property  CPListTemplate *listTemplate
 @property  CPSTableView *tableView
 @property  CPUINowPlayingManager *nowPlayingManager
 @property  CPSEmptyView *emptyView
 @property  NSUUID *lastFocusedItem
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSListTemplateViewController preferredFocusEnvironments]
  -[CPSListTemplateViewController tableView:heightForRowAtIndexPath:]
  -[CPSListTemplateViewController tableView:viewForHeaderInSection:]
  -[CPSListTemplateViewController tableView:heightForHeaderInSection:]
  -[CPSListTemplateViewController setDataSource:]
  -[CPSListTemplateViewController setTableView:]
  -[CPSListTemplateViewController tableView:didUpdateFocusInContext:withAnimationCoordinator:]
  -[CPSListTemplateViewController _scrollViewAccessoryInsetsDidChange:]
  -[CPSListTemplateViewController tableView:didSelectRowAtIndexPath:]
  -[CPSListTemplateViewController tableView]
  -[CPSListTemplateViewController .cxx_destruct]
  -[CPSListTemplateViewController updateSections:]
  -[CPSListTemplateViewController dataSource]
  -[CPSListTemplateViewController restoresFocusAfterTransition]
  -[CPSListTemplateViewController viewWillAppear:]
  -[CPSListTemplateViewController setButton:enabled:]
  -[CPSListTemplateViewController reloadItems:]
  -[CPSListTemplateViewController listTemplate]
  -[CPSListTemplateViewController _viewDidLoad]
  -[CPSListTemplateViewController nowPlayingManager:didUpdateSnapshot:]
  -[CPSListTemplateViewController initWithListTemplate:templateDelegate:templateEnvironment:]
  -[CPSListTemplateViewController _wantsNowPlayingButton]
  -[CPSListTemplateViewController nowPlayingManager]
  -[CPSListTemplateViewController setNowPlayingManager:]
  -[CPSListTemplateViewController currentSpinningIdentifier]
  -[CPSListTemplateViewController _playingIndicatorStateForSnapshot:]
  -[CPSListTemplateViewController _updateEmptyView]
  -[CPSListTemplateViewController _shouldRetainFocusOnWillAppear]
  -[CPSListTemplateViewController emptyView]
  -[CPSListTemplateViewController setEmptyView:]
  -[CPSListTemplateViewController nextSpinningIdentifier]
  -[CPSListTemplateViewController setCurrentSpinningIdentifier:]
  -[CPSListTemplateViewController setNextSpinningIdentifier:]
  -[CPSListTemplateViewController spinnerState]
  -[CPSListTemplateViewController _startSpinnerTimerFired:identifier:]
  -[CPSListTemplateViewController setSpinnerStartTimer:]
  -[CPSListTemplateViewController _timeoutSpinnerFired:identifier:]
  -[CPSListTemplateViewController setSpinnerTimeoutTimer:]
  -[CPSListTemplateViewController setSpinnerState:]
  -[CPSListTemplateViewController _addSpinnerToIdentifier:]
  -[CPSListTemplateViewController _cellSelectionCompleted:]
  -[CPSListTemplateViewController spinnerStartTimer]
  -[CPSListTemplateViewController spinnerTimeoutTimer]
  -[CPSListTemplateViewController _cancelScheduledLoadingSpinner]
  -[CPSListTemplateViewController lastFocusedItem]
  -[CPSListTemplateViewController setLastFocusedItem:]
  -[CPSListTemplateViewController _updateFocusForReload]
  -[CPSListTemplateViewController _activateSiriForMessageItem:]
  -[CPSListTemplateViewController _scheduleLoadingSpinnerForIdentifier:]
  -[CPSListTemplateViewController setButton:hidden:]


CPSEntityMapButton : CPSActionButton <CPSActionButtonLayoutDelegate>
 @property  unsigned long entityMapButtonType
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CPSEntityMapButton buttonWithEntityMapButtonType:]

  // instance methods
  -[CPSEntityMapButton initWithFrame:]
  -[CPSEntityMapButton buttonSize]
  -[CPSEntityMapButton buttonBackgroundColor]
  -[CPSEntityMapButton layoutSubviews]
  -[CPSEntityMapButton setNeedsLayout]
  -[CPSEntityMapButton buttonAttributes]
  -[CPSEntityMapButton buttonGlyphSize]
  -[CPSEntityMapButton buttonImageTintColor]
  -[CPSEntityMapButton setEntityMapButtonType:]
  -[CPSEntityMapButton entityMapButtonType]


CPSPrimaryManeuverLayoutConfiguration : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned long layout
 @property  NSString *instruction
 @property  NSAttributedString *attributedInstruction
 @property  double height
 @property  UIImage *symbolImage
 @property  UIImage *junctionImage

  // instance methods
  -[CPSPrimaryManeuverLayoutConfiguration setHeight:]
  -[CPSPrimaryManeuverLayoutConfiguration setLayout:]
  -[CPSPrimaryManeuverLayoutConfiguration .cxx_destruct]
  -[CPSPrimaryManeuverLayoutConfiguration setSymbolImage:]
  -[CPSPrimaryManeuverLayoutConfiguration symbolImage]
  -[CPSPrimaryManeuverLayoutConfiguration instruction]
  -[CPSPrimaryManeuverLayoutConfiguration setInstruction:]
  -[CPSPrimaryManeuverLayoutConfiguration height]
  -[CPSPrimaryManeuverLayoutConfiguration isEqual:]
  -[CPSPrimaryManeuverLayoutConfiguration isEqualToConfiguration:]
  -[CPSPrimaryManeuverLayoutConfiguration layout]
  -[CPSPrimaryManeuverLayoutConfiguration junctionImage]
  -[CPSPrimaryManeuverLayoutConfiguration setJunctionImage:]
  -[CPSPrimaryManeuverLayoutConfiguration attributedInstruction]
  -[CPSPrimaryManeuverLayoutConfiguration setAttributedInstruction:]
  -[CPSPrimaryManeuverLayoutConfiguration _layoutString]


CPSNavigationAlertView : UIView /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI <CPSLinearFocusProviding>
 @property  CPSAbridgableLabel *titleLabel
 @property  CPSAbridgableLabel *subtitleLabel
 @property  UIImageView *imageView
 @property  CPSNavigationAlertButtonView *buttonView
 @property  CPSNavigationAlertProgressView *progressView
 @property  CPNavigationAlert *navigationAlert
 @property  BOOL useRightHandDriveFocusGuide
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSNavigationAlertView preferredFocusEnvironments]
  -[CPSNavigationAlertView imageView]
  -[CPSNavigationAlertView setTitleLabel:]
  -[CPSNavigationAlertView titleLabel]
  -[CPSNavigationAlertView setImageView:]
  -[CPSNavigationAlertView .cxx_destruct]
  -[CPSNavigationAlertView intrinsicContentSize]
  -[CPSNavigationAlertView buttonView]
  -[CPSNavigationAlertView progressView]
  -[CPSNavigationAlertView setProgressView:]
  -[CPSNavigationAlertView subtitleLabel]
  -[CPSNavigationAlertView navigationAlert]
  -[CPSNavigationAlertView setButtonView:]
  -[CPSNavigationAlertView startAnimating]
  -[CPSNavigationAlertView setSubtitleLabel:]
  -[CPSNavigationAlertView updateNavigationAlert:]
  -[CPSNavigationAlertView _linearFocusItems]
  -[CPSNavigationAlertView initWithFrame:navigationAlert:templateDelegate:buttonDelegate:]


CPSNavigationAlertProgressView : UIView /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI
 @property  double duration
 @property  UIView *progressView
 @property  BOOL hasStartedAnimating

  // instance methods
  -[CPSNavigationAlertProgressView .cxx_destruct]
  -[CPSNavigationAlertProgressView progressView]
  -[CPSNavigationAlertProgressView setDuration:]
  -[CPSNavigationAlertProgressView setProgressView:]
  -[CPSNavigationAlertProgressView startAnimating]
  -[CPSNavigationAlertProgressView duration]
  -[CPSNavigationAlertProgressView initWithFrame:duration:]
  -[CPSNavigationAlertProgressView hasStartedAnimating]
  -[CPSNavigationAlertProgressView setHasStartedAnimating:]


CPSNavigationAlertFocusButton : CPSButton
 @property  CPSNavigationAlertProgressView *altFocusProgressView

  // instance methods
  -[CPSNavigationAlertFocusButton pressesBegan:withEvent:]
  -[CPSNavigationAlertFocusButton didUpdateFocusInContext:withAnimationCoordinator:]
  -[CPSNavigationAlertFocusButton pressesCancelled:withEvent:]
  -[CPSNavigationAlertFocusButton pressesEnded:withEvent:]
  -[CPSNavigationAlertFocusButton .cxx_destruct]
  -[CPSNavigationAlertFocusButton setHighlighted:]
  -[CPSNavigationAlertFocusButton altFocusProgressView]
  -[CPSNavigationAlertFocusButton setAltFocusProgressView:]


CPSNavigationAlertButtonView : UIView /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI
 @property  CPSNavigationAlertFocusButton *primaryButton
 @property  CPSNavigationAlertFocusButton *secondaryButton

  // instance methods
  -[CPSNavigationAlertButtonView .cxx_destruct]
  -[CPSNavigationAlertButtonView setPrimaryButton:]
  -[CPSNavigationAlertButtonView setSecondaryButton:]
  -[CPSNavigationAlertButtonView primaryButton]
  -[CPSNavigationAlertButtonView secondaryButton]
  -[CPSNavigationAlertButtonView initWithPrimaryAction:secondaryAction:progressView:]


CPSNavigationETAView : UIView /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI <CPSNavigationDisplaying>
 @property  UIView *borderView
 @property  CPTrip *trip
 @property  CPSRouteEstimatesView *routeEstimatesView
 @property  unsigned long tripEstimateStyle
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSNavigationETAView _updateStyle]
  -[CPSNavigationETAView didMoveToSuperview]
  -[CPSNavigationETAView trip]
  -[CPSNavigationETAView .cxx_destruct]
  -[CPSNavigationETAView borderView]
  -[CPSNavigationETAView setBorderView:]
  -[CPSNavigationETAView removeFromSuperview]
  -[CPSNavigationETAView setHidden:]
  -[CPSNavigationETAView tripEstimateStyle]
  -[CPSNavigationETAView setTripEstimateStyle:]
  -[CPSNavigationETAView updateEstimates:forManeuver:]
  -[CPSNavigationETAView routeEstimatesView]
  -[CPSNavigationETAView initWithTrip:style:]
  -[CPSNavigationETAView showManeuvers:]


CPSTravelEstimatesStrings : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *arrivalTimeString
 @property  NSString *localizedArrivalString
 @property  NSString *timeRemainingString
 @property  NSString *localizedTimeRemainingUnit
 @property  NSString *distanceRemainingString
 @property  NSString *localizedDistanceRemainingUnit

  // instance methods
  -[CPSTravelEstimatesStrings .cxx_destruct]
  -[CPSTravelEstimatesStrings arrivalTimeString]
  -[CPSTravelEstimatesStrings localizedArrivalString]
  -[CPSTravelEstimatesStrings timeRemainingString]
  -[CPSTravelEstimatesStrings localizedTimeRemainingUnit]
  -[CPSTravelEstimatesStrings distanceRemainingString]
  -[CPSTravelEstimatesStrings localizedDistanceRemainingUnit]
  -[CPSTravelEstimatesStrings setArrivalTimeString:]
  -[CPSTravelEstimatesStrings setLocalizedArrivalString:]
  -[CPSTravelEstimatesStrings setTimeRemainingString:]
  -[CPSTravelEstimatesStrings setLocalizedTimeRemainingUnit:]
  -[CPSTravelEstimatesStrings setDistanceRemainingString:]
  -[CPSTravelEstimatesStrings setLocalizedDistanceRemainingUnit:]


CPSTravelEstimatesStringFormatter : NSObject /usr/lib/libSystem.B.dylib
 @property  NSCalendar *calendar
 @property  NSDateComponentsFormatter *remainingTimeFormatter
 @property  NSDateFormatter *arrivalTimeFormatter

  // instance methods
  -[CPSTravelEstimatesStringFormatter init]
  -[CPSTravelEstimatesStringFormatter remainingTimeFormatter]
  -[CPSTravelEstimatesStringFormatter .cxx_destruct]
  -[CPSTravelEstimatesStringFormatter calendar]
  -[CPSTravelEstimatesStringFormatter setCalendar:]
  -[CPSTravelEstimatesStringFormatter arrivalTimeFormatter]
  -[CPSTravelEstimatesStringFormatter generateTravelEstimatesStringsForTravelEstimates:]
  -[CPSTravelEstimatesStringFormatter _minuteRoundedTimeRemainingForTravelEstimates:]


CPSUtilities : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned long lastButtonPressInteractionModel

  // class methods
  +[CPSUtilities sharedInstance]

  // instance methods
  -[CPSUtilities setLastButtonPressInteractionModel:]
  -[CPSUtilities lastButtonPressInteractionModel]


CPSManeuversCardView : UIView /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI <CPSNavigationDisplaying, CPSCardPlatterProviding, BSInvalidatable>
 @property  NSArray *maneuvers
 @property  CPSPrimaryManeuverView *primaryManeuverView
 @property  CPSSecondaryManeuverView *secondaryManeuverView
 @property  NSArray *secondaryHeightConstraints
 @property  BOOL showSecondaryManeuverView
 @property  NSLayoutConstraint *platterBottomConstraint
 @property  CPSHairlineView *hairlineView
 @property  BOOL usesCustomBackgroundColor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  CPSCardPlatterView *cardPlatterView

  // instance methods
  -[CPSManeuversCardView _updateConstraints]
  -[CPSManeuversCardView .cxx_destruct]
  -[CPSManeuversCardView intrinsicContentSize]
  -[CPSManeuversCardView traitCollectionDidChange:]
  -[CPSManeuversCardView invalidate]
  -[CPSManeuversCardView layoutSubviews]
  -[CPSManeuversCardView setHairlineView:]
  -[CPSManeuversCardView hairlineView]
  -[CPSManeuversCardView showManeuvers:usingDisplayStyles:]
  -[CPSManeuversCardView updateEstimates:forManeuver:]
  -[CPSManeuversCardView cardPlatterView]
  -[CPSManeuversCardView setCardPlatterView:]
  -[CPSManeuversCardView primaryManeuverView]
  -[CPSManeuversCardView showSecondaryManeuverView]
  -[CPSManeuversCardView secondaryManeuverView]
  -[CPSManeuversCardView maneuvers]
  -[CPSManeuversCardView setPrimaryManeuverView:]
  -[CPSManeuversCardView setSecondaryManeuverView:]
  -[CPSManeuversCardView setShowSecondaryManeuverView:]
  -[CPSManeuversCardView setManeuvers:]
  -[CPSManeuversCardView usesCustomBackgroundColor]
  -[CPSManeuversCardView setUsesCustomBackgroundColor:]
  -[CPSManeuversCardView canFitSize:]
  -[CPSManeuversCardView initWithManeuvers:]
  -[CPSManeuversCardView platterBottomConstraint]
  -[CPSManeuversCardView secondaryHeightConstraints]
  -[CPSManeuversCardView setSecondaryHeightConstraints:]
  -[CPSManeuversCardView setPlatterBottomConstraint:]
  -[CPSManeuversCardView _updateSecondaryManeuverBackgroundColor]
  -[CPSManeuversCardView _updateHairlineBackgroundColor]


CPSEntityResourceProvider : NSObject /usr/lib/libSystem.B.dylib <CPEntityUpdateProviding>
 @property  CPTemplate<CPEntityProviding> *entityTemplate
 @property  <CPEntityClientTemplateDelegate> *templateDelegate
 @property  CPSTemplateEnvironment *templateEnvironment
 @property  <CPSEntityActionDelegate> *actionDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSEntityResourceProvider actionDelegate]
  -[CPSEntityResourceProvider .cxx_destruct]
  -[CPSEntityResourceProvider templateDelegate]
  -[CPSEntityResourceProvider setTemplateDelegate:]
  -[CPSEntityResourceProvider updateEntityTemplate:withProxyDelegate:]
  -[CPSEntityResourceProvider entityTemplate]
  -[CPSEntityResourceProvider templateEnvironment]
  -[CPSEntityResourceProvider initWithTemplateEnvironment:entityTemplate:templateDelegate:actionDelegate:]
  -[CPSEntityResourceProvider setEntityTemplate:]


CPSInformationTemplateButtonsViewController : UIViewController /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI
 @property  UIStackView *buttonStackView
 @property  <CPSButtonDelegate> *buttonDelegate
 @property  unsigned long preferredButtonIndex
 @property  NSLayoutConstraint *heightConstraint
 @property  NSArray *buttons

  // instance methods
  -[CPSInformationTemplateButtonsViewController viewDidLoad]
  -[CPSInformationTemplateButtonsViewController preferredFocusEnvironments]
  -[CPSInformationTemplateButtonsViewController buttons]
  -[CPSInformationTemplateButtonsViewController setButtons:]
  -[CPSInformationTemplateButtonsViewController .cxx_destruct]
  -[CPSInformationTemplateButtonsViewController setHeightConstraint:]
  -[CPSInformationTemplateButtonsViewController setButtonStackView:]
  -[CPSInformationTemplateButtonsViewController buttonStackView]
  -[CPSInformationTemplateButtonsViewController buttonDelegate]
  -[CPSInformationTemplateButtonsViewController _updateHeight]
  -[CPSInformationTemplateButtonsViewController setButtonDelegate:]
  -[CPSInformationTemplateButtonsViewController heightConstraint]
  -[CPSInformationTemplateButtonsViewController _updateButtons]
  -[CPSInformationTemplateButtonsViewController setPreferredButtonIndex:]
  -[CPSInformationTemplateButtonsViewController preferredButtonIndex]
  -[CPSInformationTemplateButtonsViewController initWithButtons:buttonDelegate:]
  -[CPSInformationTemplateButtonsViewController setButtonIdentifier:enabled:]


CPSDashboardEstimatesViewController : UIViewController /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI <CPSNavigationDisplaying>
 @property  CPSDashboardEstimatesView *estimatesView
 @property  UIView *platterView
 @property  NSLayoutConstraint *platterBottomConstraint
 @property  <CPSSafeAreaDelegate> *safeAreaDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSDashboardEstimatesViewController viewDidLoad]
  -[CPSDashboardEstimatesViewController platterView]
  -[CPSDashboardEstimatesViewController .cxx_destruct]
  -[CPSDashboardEstimatesViewController setPlatterView:]
  -[CPSDashboardEstimatesViewController _safeAreaInsets]
  -[CPSDashboardEstimatesViewController updateTripEstimates:]
  -[CPSDashboardEstimatesViewController navigator:didEndTrip:]
  -[CPSDashboardEstimatesViewController setSafeAreaDelegate:]
  -[CPSDashboardEstimatesViewController platterBottomConstraint]
  -[CPSDashboardEstimatesViewController setPlatterBottomConstraint:]
  -[CPSDashboardEstimatesViewController estimatesView]
  -[CPSDashboardEstimatesViewController safeAreaDelegate]
  -[CPSDashboardEstimatesViewController setEstimatesView:]


CPSInformationTemplateFocusableView : UIView /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI
  // instance methods
  -[CPSInformationTemplateFocusableView isUserInteractionEnabled]
  -[CPSInformationTemplateFocusableView canBecomeFocused]


CPSInformationScrollView : UIScrollView /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI
 @property  <CPSInformationScrollViewDelegate> *scrollviewDelegate
 @property  NSMutableArray *focusWaypoints

  // instance methods
  -[CPSInformationScrollView .cxx_destruct]
  -[CPSInformationScrollView setContentSize:]
  -[CPSInformationScrollView scrollviewDelegate]
  -[CPSInformationScrollView setScrollviewDelegate:]
  -[CPSInformationScrollView focusWaypoints]
  -[CPSInformationScrollView setFocusWaypoints:]


CPSInformationEntityViewController : CPSBaseTemplateViewController <CPSButtonDelegate, UIScrollViewDelegate, CPSInformationScrollViewDelegate, CPInformationTemplateProviding>
 @property  CPSInformationTemplateButtonsViewController *buttonsViewController
 @property  CPSInformationScrollView *scrollView
 @property  UIStackView *itemStackView
 @property  UILabel *titleLabel
 @property  NSArray *centeringGuideConstraints
 @property  UILayoutGuide *centeringGuide
 @property  NSLayoutConstraint *itemStackViewLeadingConstraint
 @property  NSLayoutConstraint *itemStackViewWidthConstraint
 @property  UIVisualEffectView *visualEffectView
 @property  CPSHairlineView *hairlineView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSInformationEntityViewController setTitleLabel:]
  -[CPSInformationEntityViewController titleLabel]
  -[CPSInformationEntityViewController _scrollViewAccessoryInsetsDidChange:]
  -[CPSInformationEntityViewController .cxx_destruct]
  -[CPSInformationEntityViewController scrollView]
  -[CPSInformationEntityViewController setVisualEffectView:]
  -[CPSInformationEntityViewController setScrollView:]
  -[CPSInformationEntityViewController scrollViewDidScroll:]
  -[CPSInformationEntityViewController _updateScrollViewInsets]
  -[CPSInformationEntityViewController viewDidLayoutSubviews]
  -[CPSInformationEntityViewController visualEffectView]
  -[CPSInformationEntityViewController setHairlineView:]
  -[CPSInformationEntityViewController hairlineView]
  -[CPSInformationEntityViewController didSelectButton:]
  -[CPSInformationEntityViewController setControl:enabled:]
  -[CPSInformationEntityViewController updateWithInformationTemplate:]
  -[CPSInformationEntityViewController _viewDidLoad]
  -[CPSInformationEntityViewController scrollViewContentSizeChanged:]
  -[CPSInformationEntityViewController informationTemplate]
  -[CPSInformationEntityViewController buttonsViewController]
  -[CPSInformationEntityViewController _updateItemStackView]
  -[CPSInformationEntityViewController _updateHairline]
  -[CPSInformationEntityViewController setItemStackView:]
  -[CPSInformationEntityViewController setCenteringGuide:]
  -[CPSInformationEntityViewController _updateCenteringGuideConstraints]
  -[CPSInformationEntityViewController centeringGuide]
  -[CPSInformationEntityViewController setButtonsViewController:]
  -[CPSInformationEntityViewController centeringGuideConstraints]
  -[CPSInformationEntityViewController setCenteringGuideConstraints:]
  -[CPSInformationEntityViewController itemStackView]
  -[CPSInformationEntityViewController _setHairlineHidden:]
  -[CPSInformationEntityViewController itemStackViewLeadingConstraint]
  -[CPSInformationEntityViewController setItemStackViewLeadingConstraint:]
  -[CPSInformationEntityViewController itemStackViewWidthConstraint]
  -[CPSInformationEntityViewController setItemStackViewWidthConstraint:]


CPSTableView : UITableView /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI
  // instance methods
  -[CPSTableView _shouldShowHeadersAndFooters]


CPSNameViewController : UIViewController /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI <CPSEntityUpdateSupporting>
 @property  <CPEntityNameProviding> *entity
 @property  UILabel *primaryLabel
 @property  UILabel *secondaryLabel
 @property  UILabel *tertiaryLabel
 @property  UIStackView *stackView
 @property  NSArray *layoutConstraints
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSNameViewController entity]
  -[CPSNameViewController viewDidLoad]
  -[CPSNameViewController setEntity:]
  -[CPSNameViewController initWithEntity:]
  -[CPSNameViewController updateViews]
  -[CPSNameViewController stackView]
  -[CPSNameViewController secondaryLabel]
  -[CPSNameViewController .cxx_destruct]
  -[CPSNameViewController primaryLabel]
  -[CPSNameViewController traitCollectionDidChange:]
  -[CPSNameViewController resetLayoutConstraints]
  -[CPSNameViewController setupLayoutConstraints]
  -[CPSNameViewController layoutConstraints]
  -[CPSNameViewController setLayoutConstraints:]
  -[CPSNameViewController updateViewConstraints]
  -[CPSNameViewController tertiaryLabel]
  -[CPSNameViewController setupViews]
  -[CPSNameViewController updateWithEntity:]


CPSAvatarViewController : UIViewController /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI <CPSEntityUpdateSupporting>
 @property  <CPEntityImageProviding> *entity
 @property  UIImageView *avatarImageView
 @property  NSArray *layoutConstraints
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSAvatarViewController entity]
  -[CPSAvatarViewController viewDidLoad]
  -[CPSAvatarViewController setEntity:]
  -[CPSAvatarViewController preferredFocusEnvironments]
  -[CPSAvatarViewController initWithEntity:]
  -[CPSAvatarViewController updateViews]
  -[CPSAvatarViewController .cxx_destruct]
  -[CPSAvatarViewController traitCollectionDidChange:]
  -[CPSAvatarViewController resetLayoutConstraints]
  -[CPSAvatarViewController setupLayoutConstraints]
  -[CPSAvatarViewController layoutConstraints]
  -[CPSAvatarViewController setLayoutConstraints:]
  -[CPSAvatarViewController updateViewConstraints]
  -[CPSAvatarViewController setupViews]
  -[CPSAvatarViewController avatarImageView]
  -[CPSAvatarViewController updateWithEntity:]


CPSPagingControlButton : UIButton /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI
  // instance methods
  -[CPSPagingControlButton didUpdateFocusInContext:withAnimationCoordinator:]
  -[CPSPagingControlButton initWithFrame:]


CPSPagingControlView : UIView /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI <CPSLinearFocusProviding>
 @property  UILabel *positionLabel
 @property  NSNumberFormatter *numberFormatter
 @property  unsigned long pageIndex
 @property  unsigned long pageCount
 @property  UIButton *previousButton
 @property  UIButton *nextButton
 @property  <CPSPageControlling> *pagingDelegate
 @property  BOOL useRightHandDriveFocusGuide
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSPagingControlView setNumberFormatter:]
  -[CPSPagingControlView numberFormatter]
  -[CPSPagingControlView initWithFrame:]
  -[CPSPagingControlView nextButton]
  -[CPSPagingControlView setNextButton:]
  -[CPSPagingControlView pageIndex]
  -[CPSPagingControlView .cxx_destruct]
  -[CPSPagingControlView pageCount]
  -[CPSPagingControlView _updateImages]
  -[CPSPagingControlView setPageIndex:]
  -[CPSPagingControlView _update]
  -[CPSPagingControlView traitCollectionDidChange:]
  -[CPSPagingControlView setPageCount:]
  -[CPSPagingControlView _linearFocusItems]
  -[CPSPagingControlView _handlePreviousButton:]
  -[CPSPagingControlView setPreviousButton:]
  -[CPSPagingControlView _handleNextButton:]
  -[CPSPagingControlView setPositionLabel:]
  -[CPSPagingControlView previousButton]
  -[CPSPagingControlView positionLabel]
  -[CPSPagingControlView _invokeDelegateForPageIndex:]
  -[CPSPagingControlView pagingDelegate]
  -[CPSPagingControlView enablePageControlsIfNecessary]
  -[CPSPagingControlView setPagingDelegate:]


CPSSectionedDataSource : CPSDataSource <CPSessionConfigurationDelegate>
 @property  NSMutableArray *sections
 @property  CPSessionConfiguration *sessionConfiguration
 @property  NSArray *sectionHeightCache
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSSectionedDataSource initWithItems:]
  -[CPSSectionedDataSource initWithSection:]
  -[CPSSectionedDataSource sessionConfiguration]
  -[CPSSectionedDataSource setSections:]
  -[CPSSectionedDataSource numberOfItems]
  -[CPSSectionedDataSource sectionAtIndex:]
  -[CPSSectionedDataSource insertSection:atIndex:]
  -[CPSSectionedDataSource items]
  -[CPSSectionedDataSource tableView:sectionForSectionIndexTitle:atIndex:]
  -[CPSSectionedDataSource numberOfSections]
  -[CPSSectionedDataSource sectionIndexTitlesForTableView:]
  -[CPSSectionedDataSource .cxx_destruct]
  -[CPSSectionedDataSource initWithSections:]
  -[CPSSectionedDataSource firstItemIndexPath]
  -[CPSSectionedDataSource itemAtIndexPath:]
  -[CPSSectionedDataSource numberOfItemsInSection:]
  -[CPSSectionedDataSource _filteredNumberOfItemsGivenSection:numberOfItems:]
  -[CPSSectionedDataSource sections]
  -[CPSSectionedDataSource updateSections:]
  -[CPSSectionedDataSource setSessionConfiguration:]
  -[CPSSectionedDataSource deleteSectionAtIndex:]
  -[CPSSectionedDataSource appendSection:]
  -[CPSSectionedDataSource indexPathForItemWithIdentifier:]
  -[CPSSectionedDataSource sessionConfiguration:limitedUserInterfacesChanged:]
  -[CPSSectionedDataSource reloadItems:]
  -[CPSSectionedDataSource heightForItemAtIndexPath:inEnvironment:]
  -[CPSSectionedDataSource isLimitingLists]
  -[CPSSectionedDataSource rebuildHeightCacheWithEnvironment:]
  -[CPSSectionedDataSource _sanitizedSectionIndexTitleForTitle:]
  -[CPSSectionedDataSource invalidateHeightCache]
  -[CPSSectionedDataSource sectionHeightCache]
  -[CPSSectionedDataSource setSectionHeightCache:]


CPSPointsOfInterestPickerExtendedCell : CPSPointsOfInterestPickerCell
 @property  UILabel *extendedTitleLabel
 @property  UILabel *extendedSubtitleLabel
 @property  UILabel *extendedInformativeLabel
 @property  NSString *title
 @property  NSString *subtitle
 @property  NSString *text

  // class methods
  +[CPSPointsOfInterestPickerExtendedCell identifier]

  // instance methods
  -[CPSPointsOfInterestPickerExtendedCell initWithStyle:reuseIdentifier:]
  -[CPSPointsOfInterestPickerExtendedCell setSubtitle:]
  -[CPSPointsOfInterestPickerExtendedCell safeAreaInsets]
  -[CPSPointsOfInterestPickerExtendedCell text]
  -[CPSPointsOfInterestPickerExtendedCell .cxx_destruct]
  -[CPSPointsOfInterestPickerExtendedCell setHighlighted:]
  -[CPSPointsOfInterestPickerExtendedCell setTitle:]
  -[CPSPointsOfInterestPickerExtendedCell title]
  -[CPSPointsOfInterestPickerExtendedCell subtitle]
  -[CPSPointsOfInterestPickerExtendedCell setupViews]
  -[CPSPointsOfInterestPickerExtendedCell setText:]
  -[CPSPointsOfInterestPickerExtendedCell extendedTitleLabel]
  -[CPSPointsOfInterestPickerExtendedCell extendedSubtitleLabel]
  -[CPSPointsOfInterestPickerExtendedCell extendedInformativeLabel]
  -[CPSPointsOfInterestPickerExtendedCell setExtendedTitleLabel:]
  -[CPSPointsOfInterestPickerExtendedCell setExtendedSubtitleLabel:]
  -[CPSPointsOfInterestPickerExtendedCell setExtendedInformativeLabel:]


CPSHidingLabel : UILabel /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI
  // instance methods
  -[CPSHidingLabel layoutSubviews]


CPSRouteOverviewView : UIView /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI
 @property  CPTrip *representedTrip
 @property  UILabel *destinationName
 @property  CPSHidingLabel *destinationAddress
 @property  CPSHidingLabel *routeNoteLabel
 @property  NSString *routeNote
 @property  CPTravelEstimates *currentTravelEstimates
 @property  CPSRouteEstimatesView *estimatesView

  // class methods
  +[CPSRouteOverviewView _multilineLabel]
  +[CPSRouteOverviewView _nameForMapItem:]
  +[CPSRouteOverviewView _applyBoldText:fontSize:color:toLabel:]
  +[CPSRouteOverviewView _shortenedAddressForAddress:]
  +[CPSRouteOverviewView _applyText:fontSize:color:toLabel:]

  // instance methods
  -[CPSRouteOverviewView initWithFrame:]
  -[CPSRouteOverviewView .cxx_destruct]
  -[CPSRouteOverviewView destinationAddress]
  -[CPSRouteOverviewView traitCollectionDidChange:]
  -[CPSRouteOverviewView destinationName]
  -[CPSRouteOverviewView setCurrentTravelEstimates:]
  -[CPSRouteOverviewView currentTravelEstimates]
  -[CPSRouteOverviewView estimatesView]
  -[CPSRouteOverviewView _updateTripEstimateStyle]
  -[CPSRouteOverviewView routeNoteLabel]
  -[CPSRouteOverviewView representedTrip]
  -[CPSRouteOverviewView setRepresentedTrip:]
  -[CPSRouteOverviewView setRouteNote:]
  -[CPSRouteOverviewView routeNote]


CPSHairlineBorderedView : UIView /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI
 @property  UIView *contentView
 @property  NSLayoutConstraint *bottomConstraint

  // instance methods
  -[CPSHairlineBorderedView bottomConstraint]
  -[CPSHairlineBorderedView contentView]
  -[CPSHairlineBorderedView .cxx_destruct]
  -[CPSHairlineBorderedView initWithContentView:borderEdges:]


CPSTripPreviewsCardView : UIView /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI <CPSLinearFocusProviding>
 @property  CPTripPreviewTextConfiguration *textConfiguration
 @property  CPTrip *selectedTrip
 @property  CPRouteChoice *selectedRouteChoice
 @property  CPSCardPlatterView *platterView
 @property  <CPSTripInitiating> *tripDelegate
 @property  UIButton *goButton
 @property  NSArray *trips
 @property  BOOL useRightHandDriveFocusGuide
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSTripPreviewsCardView trips]
  -[CPSTripPreviewsCardView platterView]
  -[CPSTripPreviewsCardView .cxx_destruct]
  -[CPSTripPreviewsCardView traitCollectionDidChange:]
  -[CPSTripPreviewsCardView _linearFocusItems]
  -[CPSTripPreviewsCardView _updateButtonColors]
  -[CPSTripPreviewsCardView goButton]
  -[CPSTripPreviewsCardView startTripButtonPressed:]
  -[CPSTripPreviewsCardView setSelectedRouteChoice:]
  -[CPSTripPreviewsCardView notifyDidSelectRouteChoice:]
  -[CPSTripPreviewsCardView selectedTrip]
  -[CPSTripPreviewsCardView selectedRouteChoice]
  -[CPSTripPreviewsCardView tripDelegate]
  -[CPSTripPreviewsCardView initWithTripDelegate:trips:textConfiguration:]
  -[CPSTripPreviewsCardView setupGoButton]
  -[CPSTripPreviewsCardView setSelectedTrip:]
  -[CPSTripPreviewsCardView updateEstimates:forTripIdentifier:]
  -[CPSTripPreviewsCardView textConfiguration]
  -[CPSTripPreviewsCardView setTextConfiguration:]


CPSPagingTripPreviewsCardView : CPSTripPreviewsCardView <CPSAlternateRouteSelecting, CPSPageControlling>
 @property  NSMutableDictionary *estimatesForTripIdentifiers
 @property  CPSPagingControlView *pageControl
 @property  CPSRouteOverviewView *overviewView
 @property  CPSHairlineBorderedView *borderedAlternatesView
 @property  CPSHairlineBorderedView *borderedGoButton
 @property  CPSHairlineBorderedView *borderedMoreRoutesButton
 @property  UIButton *moreRoutesButton
 @property  BOOL showMoreRoutes
 @property  NSLayoutConstraint *contentTopConstraint
 @property  NSLayoutConstraint *contentBottomConstraint
 @property  NSLayoutConstraint *alternateRoutesHeightConstraint
 @property  NSLayoutConstraint *toggleRoutesButtonHeightConstraint
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSPagingTripPreviewsCardView preferredFocusEnvironments]
  -[CPSPagingTripPreviewsCardView shouldUpdateFocusInContext:]
  -[CPSPagingTripPreviewsCardView .cxx_destruct]
  -[CPSPagingTripPreviewsCardView pageControl]
  -[CPSPagingTripPreviewsCardView _linearFocusItems]
  -[CPSPagingTripPreviewsCardView alternateRoutesView:didSelectRouteChoice:]
  -[CPSPagingTripPreviewsCardView pagingControlView:didSelectPageIndex:]
  -[CPSPagingTripPreviewsCardView _updateButtonColors]
  -[CPSPagingTripPreviewsCardView setSelectedRouteChoice:]
  -[CPSPagingTripPreviewsCardView initWithTripDelegate:trips:textConfiguration:]
  -[CPSPagingTripPreviewsCardView setSelectedTrip:]
  -[CPSPagingTripPreviewsCardView updateEstimates:forTripIdentifier:]
  -[CPSPagingTripPreviewsCardView setContentTopConstraint:]
  -[CPSPagingTripPreviewsCardView contentTopConstraint]
  -[CPSPagingTripPreviewsCardView setAlternateRoutesHeightConstraint:]
  -[CPSPagingTripPreviewsCardView alternateRoutesHeightConstraint]
  -[CPSPagingTripPreviewsCardView setContentBottomConstraint:]
  -[CPSPagingTripPreviewsCardView _toggleMoreRoutesButtonPressed:]
  -[CPSPagingTripPreviewsCardView setToggleRoutesButtonHeightConstraint:]
  -[CPSPagingTripPreviewsCardView toggleRoutesButtonHeightConstraint]
  -[CPSPagingTripPreviewsCardView moreRoutesButton]
  -[CPSPagingTripPreviewsCardView overviewView]
  -[CPSPagingTripPreviewsCardView borderedAlternatesView]
  -[CPSPagingTripPreviewsCardView borderedMoreRoutesButton]
  -[CPSPagingTripPreviewsCardView borderedGoButton]
  -[CPSPagingTripPreviewsCardView contentBottomConstraint]
  -[CPSPagingTripPreviewsCardView estimatesForTripIdentifiers]
  -[CPSPagingTripPreviewsCardView showMoreRoutes]
  -[CPSPagingTripPreviewsCardView setShowMoreRoutes:]
  -[CPSPagingTripPreviewsCardView _setOverviewCollapsed:]


CPSRoutePreviewsCardView : CPSTripPreviewsCardView <CPSAlternateRouteSelecting>
 @property  CPSAlternateRoutesView *alternatesView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSRoutePreviewsCardView preferredFocusEnvironments]
  -[CPSRoutePreviewsCardView .cxx_destruct]
  -[CPSRoutePreviewsCardView _linearFocusItems]
  -[CPSRoutePreviewsCardView alternateRoutesView:didSelectRouteChoice:]
  -[CPSRoutePreviewsCardView initWithTripDelegate:trips:textConfiguration:]
  -[CPSRoutePreviewsCardView setSelectedTrip:]
  -[CPSRoutePreviewsCardView alternatesView]


CPSWindow : UIWindow /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI
 @property  NSHashTable *observers

  // instance methods
  -[CPSWindow setObservers:]
  -[CPSWindow .cxx_destruct]
  -[CPSWindow _isKeyWindowForDeferral]
  -[CPSWindow observers]
  -[CPSWindow sendEvent:]
  -[CPSWindow addEventObserver:]
  -[CPSWindow removeEventObserver:]


CPSHairlineView : UIView /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI
 @property  long long axis
 @property  NSLayoutConstraint *strokeThicknessConstraint

  // class methods
  +[CPSHairlineView grayHairlineViewAlongAxis:]

  // instance methods
  -[CPSHairlineView axis]
  -[CPSHairlineView setAxis:]
  -[CPSHairlineView .cxx_destruct]
  -[CPSHairlineView traitCollectionDidChange:]
  -[CPSHairlineView initWithAxis:color:]
  -[CPSHairlineView setStrokeThicknessConstraint:]
  -[CPSHairlineView _updateStrokeThickness]
  -[CPSHairlineView strokeThicknessConstraint]


CPSFullScreenAlertViewController : CPSBaseTemplateViewController <CPSButtonDelegate>
 @property  CPAlertTemplate *alert
 @property  NSArray *alertButtons
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSFullScreenAlertViewController _titleFont]
  -[CPSFullScreenAlertViewController preferredFocusEnvironments]
  -[CPSFullScreenAlertViewController .cxx_destruct]
  -[CPSFullScreenAlertViewController alert]
  -[CPSFullScreenAlertViewController viewWillAppear:]
  -[CPSFullScreenAlertViewController viewWillDisappear:]
  -[CPSFullScreenAlertViewController didSelectButton:]
  -[CPSFullScreenAlertViewController _viewDidLoad]
  -[CPSFullScreenAlertViewController initWithAlert:alertDelegate:templateEnvironment:]
  -[CPSFullScreenAlertViewController alertButtons]
  -[CPSFullScreenAlertViewController setAlertButtons:]


CPSPointsOfInterestPickerInfoView : UIView /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI <CPSButtonDelegate, CPSActionButtonLayoutDelegate, CPSLinearFocusProviding>
 @property  CPPointOfInterest *model
 @property  UIStackView *topStackView
 @property  UIStackView *bottomStackView
 @property  UILabel *detailsTitle
 @property  UILabel *detailsSubtitle
 @property  UILabel *detailsInformativeText
 @property  CPSStyledTextButton *primaryButton
 @property  CPSStyledTextButton *secondaryButton
 @property  <CPSPointsOfInterestPickerInfoDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL useRightHandDriveFocusGuide

  // instance methods
  -[CPSPointsOfInterestPickerInfoView safeAreaInsets]
  -[CPSPointsOfInterestPickerInfoView .cxx_destruct]
  -[CPSPointsOfInterestPickerInfoView setModel:]
  -[CPSPointsOfInterestPickerInfoView updateWithModel:]
  -[CPSPointsOfInterestPickerInfoView setPrimaryButton:]
  -[CPSPointsOfInterestPickerInfoView setSecondaryButton:]
  -[CPSPointsOfInterestPickerInfoView setDelegate:]
  -[CPSPointsOfInterestPickerInfoView model]
  -[CPSPointsOfInterestPickerInfoView setupViews]
  -[CPSPointsOfInterestPickerInfoView primaryButton]
  -[CPSPointsOfInterestPickerInfoView delegate]
  -[CPSPointsOfInterestPickerInfoView secondaryButton]
  -[CPSPointsOfInterestPickerInfoView didSelectButton:]
  -[CPSPointsOfInterestPickerInfoView _linearFocusItems]
  -[CPSPointsOfInterestPickerInfoView topStackView]
  -[CPSPointsOfInterestPickerInfoView setTopStackView:]
  -[CPSPointsOfInterestPickerInfoView bottomStackView]
  -[CPSPointsOfInterestPickerInfoView setBottomStackView:]
  -[CPSPointsOfInterestPickerInfoView detailsTitle]
  -[CPSPointsOfInterestPickerInfoView setDetailsTitle:]
  -[CPSPointsOfInterestPickerInfoView detailsSubtitle]
  -[CPSPointsOfInterestPickerInfoView setDetailsSubtitle:]
  -[CPSPointsOfInterestPickerInfoView detailsInformativeText]
  -[CPSPointsOfInterestPickerInfoView setDetailsInformativeText:]


_CPSFocusHoldingButton : UIButton /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI

CPSMapTemplateViewController : CPSBaseTemplateViewController <CARSessionObserving, CPSButtonDelegate, CPSTripInitiating, UIGestureRecognizerDelegate, CPSPanEventDelegate, CPSNavigationAlertQueueDelegate, CPSNavigationDisplaying, CARNavigationOwnershipManagerDelegate, CPSEventObserving, CPSApplicationStateObserving, CPSLayoutHelperViewDelegate, BKSHIDEventDeliveryPolicyObserving, CPMapTemplateProviding, CPSLinearFocusProviding, CPNavigationSessionProviding>
 @property  UIStackView *trailingBottomStackView
 @property  unsigned long maximumMapButtonCount
 @property  NSMutableArray *mapButtons
 @property  CPSLayoutHelperView *navigationCardViewLayoutHelperView
 @property  NSLayoutConstraint *navigationCardViewLayoutViewBottomConstraint
 @property  CPSTripPreviewsCardView *previewsView
 @property  BOOL previewOnlyRouteChoices
 @property  unsigned long previewSelectedIndex
 @property  CARSessionStatus *sessionStatus
 @property  CPSNavigator *navigator
 @property  UITapGestureRecognizer *hideTapGestureRecognizer
 @property  UITapGestureRecognizer *navBarHideTapGestureRecognizer
 @property  UIPanGestureRecognizer *panGestureRecognizer
 @property  NSTimer *autoHideTimer
 @property  BOOL autoHidesNavigationBar
 @property  BOOL hidesButtonsWithNavigationBar
 @property  NSMutableSet *autoHideDisabledReasons
 @property  NSArray *tripPreviews
 @property  CPTripPreviewTextConfiguration *tripPreviewTextConfiguration
 @property  CPSPanViewController *panViewController
 @property  UIView *panContainerView
 @property  NSLayoutConstraint *panContainerLeftConstraint
 @property  NSLayoutConstraint *panContainerRightConstraint
 @property  BOOL demoAutoHideTimerDisabled
 @property  CPSNavigationAlertQueue *navigationAlertQueue
 @property  NSLayoutConstraint *navigationAlertBottomConstraint
 @property  NSLayoutConstraint *navigationAlertHeightConstraint
 @property  BOOL applicationIsFrontmost
 @property  CPSApplicationStateMonitor *applicationStateMonitor
 @property  CPSNavigationETAView *navigationETAView
 @property  NSLayoutConstraint *navigationETAViewBottomConstraint
 @property  NSMutableDictionary *lastTravelEstimatesByTrip
 @property  BOOL rightHandDrive
 @property  <CPSSafeAreaDelegate> *safeAreaDelegate
 @property  CPMapTemplate *mapTemplate
 @property  <CPMapClientTemplateDelegate> *mapTemplateDelegate
 @property  <UIFocusItem> *lastFocusedItem
 @property  <UIFocusItem> *itemFocusedBeforeNavAlert
 @property  {CGPoint=dd} lastPanGesturePoint
 @property  UIColor *guidanceBackgroundColor
 @property  unsigned long tripEstimateStyle
 @property  BOOL hasSetTripEstimateStyle
 @property  _CPSFocusHoldingButton *focusHoldingButton
 @property  UIFocusGuide *focusHolderLeftFocusGuide
 @property  UIFocusGuide *focusHolderRightFocusGuide
 @property  BOOL shouldRestoreFocusToNavigationBar
 @property  BKSHIDEventDeliveryPolicyObserver *eventDeliveryPolicyObserver
 @property  CPSNavigationCardViewController *navigationCardViewController
 @property  NSMutableSet *etaViewHiddenRequesters
 @property  BOOL etaViewHidden
 @property  <CPSNavigatorObserving> *navigatorObserver
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL useRightHandDriveFocusGuide

  // instance methods
  -[CPSMapTemplateViewController preferredFocusEnvironments]
  -[CPSMapTemplateViewController panGestureRecognizer]
  -[CPSMapTemplateViewController shouldUpdateFocusInContext:]
  -[CPSMapTemplateViewController didUpdateFocusInContext:withAnimationCoordinator:]
  -[CPSMapTemplateViewController dealloc]
  -[CPSMapTemplateViewController .cxx_destruct]
  -[CPSMapTemplateViewController _buttons]
  -[CPSMapTemplateViewController navigationOwnershipChangedToOwner:]
  -[CPSMapTemplateViewController viewSafeAreaInsetsDidChange]
  -[CPSMapTemplateViewController traitCollectionDidChange:]
  -[CPSMapTemplateViewController viewDidAppear:]
  -[CPSMapTemplateViewController _handleTapGesture:]
  -[CPSMapTemplateViewController applicationStateMonitor]
  -[CPSMapTemplateViewController sessionStatus]
  -[CPSMapTemplateViewController setSessionStatus:]
  -[CPSMapTemplateViewController _handlePanGesture:]
  -[CPSMapTemplateViewController rightHandDrive]
  -[CPSMapTemplateViewController sessionDidConnect:]
  -[CPSMapTemplateViewController setPanGestureRecognizer:]
  -[CPSMapTemplateViewController setRightHandDrive:]
  -[CPSMapTemplateViewController viewWillDisappear:]
  -[CPSMapTemplateViewController invalidate]
  -[CPSMapTemplateViewController setApplicationStateMonitor:]
  -[CPSMapTemplateViewController gestureRecognizer:shouldReceiveTouch:]
  -[CPSMapTemplateViewController observerDeliveryPolicyDidChange:]
  -[CPSMapTemplateViewController didSelectButton:]
  -[CPSMapTemplateViewController mapTemplate]
  -[CPSMapTemplateViewController showManeuvers:usingDisplayStyles:]
  -[CPSMapTemplateViewController setControl:enabled:]
  -[CPSMapTemplateViewController setHostGuidanceBackgroundColor:]
  -[CPSMapTemplateViewController setHostTripEstimateStyle:]
  -[CPSMapTemplateViewController setHostAutoHidesNavigationBar:]
  -[CPSMapTemplateViewController setHostHidesButtonsWithNavigationBar:]
  -[CPSMapTemplateViewController setMapButton:hidden:]
  -[CPSMapTemplateViewController setMapButton:focusedImage:]
  -[CPSMapTemplateViewController hostSetMapButton:imageSet:]
  -[CPSMapTemplateViewController hostSetMapButtons:]
  -[CPSMapTemplateViewController setHostTripPreviews:textConfiguration:previewOnlyRouteChoices:selectedIndex:]
  -[CPSMapTemplateViewController hostUpdateTravelEstimates:forTripIdentifier:]
  -[CPSMapTemplateViewController hostSetPanInterfaceVisible:animated:]
  -[CPSMapTemplateViewController hostPanInterfaceVisible:]
  -[CPSMapTemplateViewController showNavigationAlert:animated:]
  -[CPSMapTemplateViewController dismissNavigationAlertAnimated:completion:]
  -[CPSMapTemplateViewController updateNavigationAlert:]
  -[CPSMapTemplateViewController hostStartNavigationSessionForTrip:reply:]
  -[CPSMapTemplateViewController mapButtons]
  -[CPSMapTemplateViewController hidesButtonsWithNavigationBar]
  -[CPSMapTemplateViewController guidanceBackgroundColor]
  -[CPSMapTemplateViewController tripEstimateStyle]
  -[CPSMapTemplateViewController tripPreviews]
  -[CPSMapTemplateViewController setGuidanceBackgroundColor:]
  -[CPSMapTemplateViewController setTripEstimateStyle:]
  -[CPSMapTemplateViewController setHidesButtonsWithNavigationBar:]
  -[CPSMapTemplateViewController setMapButtons:]
  -[CPSMapTemplateViewController _viewDidLoad]
  -[CPSMapTemplateViewController updateEstimates:forManeuver:]
  -[CPSMapTemplateViewController navigator:pausedTripForReason:description:]
  -[CPSMapTemplateViewController navigator:didEndTrip:]
  -[CPSMapTemplateViewController _linearFocusItems]
  -[CPSMapTemplateViewController setSafeAreaDelegate:]
  -[CPSMapTemplateViewController initWithMapTemplate:templateDelegate:safeAreaDelegate:applicationStateMonitor:templateEnvironment:]
  -[CPSMapTemplateViewController setNavigatorObserver:]
  -[CPSMapTemplateViewController applicationStateMonitor:didBecomeActive:]
  -[CPSMapTemplateViewController panWithDirection:]
  -[CPSMapTemplateViewController panBeganWithDirection:]
  -[CPSMapTemplateViewController panEndedWithDirection:]
  -[CPSMapTemplateViewController panViewController]
  -[CPSMapTemplateViewController setPanViewController:]
  -[CPSMapTemplateViewController didChangeLayout:]
  -[CPSMapTemplateViewController _buttonForIdentifier:]
  -[CPSMapTemplateViewController navigationAlertQueue:shouldDisplayAlertView:animated:]
  -[CPSMapTemplateViewController navigationAlertQueue:shouldRemoveAlertView:animated:dismissalContext:completion:]
  -[CPSMapTemplateViewController canAnimateNavigationAlert]
  -[CPSMapTemplateViewController lastFocusedItem]
  -[CPSMapTemplateViewController setLastFocusedItem:]
  -[CPSMapTemplateViewController safeAreaDelegate]
  -[CPSMapTemplateViewController tripView:startedTrip:routeChoice:]
  -[CPSMapTemplateViewController tripView:selectedTrip:routeChoice:]
  -[CPSMapTemplateViewController shouldForwardEventForWindow:eventType:]
  -[CPSMapTemplateViewController navigationAlertQueue]
  -[CPSMapTemplateViewController navigator]
  -[CPSMapTemplateViewController eventDeliveryPolicyObserver]
  -[CPSMapTemplateViewController navigationCardViewController]
  -[CPSMapTemplateViewController hasSetTripEstimateStyle]
  -[CPSMapTemplateViewController navigationETAView]
  -[CPSMapTemplateViewController _updatePanGestureForHiFiTouch]
  -[CPSMapTemplateViewController setHasSetTripEstimateStyle:]
  -[CPSMapTemplateViewController setTrailingBottomStackView:]
  -[CPSMapTemplateViewController _updateMapButtonsWithButtons:]
  -[CPSMapTemplateViewController _reloadPreviewsView]
  -[CPSMapTemplateViewController setHideTapGestureRecognizer:]
  -[CPSMapTemplateViewController setNavBarHideTapGestureRecognizer:]
  -[CPSMapTemplateViewController _nightModeChanged:]
  -[CPSMapTemplateViewController _resetAutoHideTimerAndShowBarAnimated:allowFocusDeferral:]
  -[CPSMapTemplateViewController setPanContainerLeftConstraint:]
  -[CPSMapTemplateViewController setPanContainerRightConstraint:]
  -[CPSMapTemplateViewController panContainerLeftConstraint]
  -[CPSMapTemplateViewController panContainerRightConstraint]
  -[CPSMapTemplateViewController setPanContainerView:]
  -[CPSMapTemplateViewController _handleFocusHolderSelect]
  -[CPSMapTemplateViewController setFocusHoldingButton:]
  -[CPSMapTemplateViewController setFocusHolderLeftFocusGuide:]
  -[CPSMapTemplateViewController setFocusHolderRightFocusGuide:]
  -[CPSMapTemplateViewController focusHolderLeftFocusGuide]
  -[CPSMapTemplateViewController focusHoldingButton]
  -[CPSMapTemplateViewController focusHolderRightFocusGuide]
  -[CPSMapTemplateViewController _createNavigationCardViewController]
  -[CPSMapTemplateViewController _createNavigationCardViewLayoutHelperView]
  -[CPSMapTemplateViewController _updateSafeArea]
  -[CPSMapTemplateViewController maximumMapButtonCount]
  -[CPSMapTemplateViewController setMaximumMapButtonCount:]
  -[CPSMapTemplateViewController _updateMapButtonVisibility]
  -[CPSMapTemplateViewController trailingBottomStackView]
  -[CPSMapTemplateViewController _setFocusHoldersEnabled:]
  -[CPSMapTemplateViewController _setAutoHideDisabled:forRequester:]
  -[CPSMapTemplateViewController navBarHideTapGestureRecognizer]
  -[CPSMapTemplateViewController autoHideTimer]
  -[CPSMapTemplateViewController setAutoHideTimer:]
  -[CPSMapTemplateViewController previewsView]
  -[CPSMapTemplateViewController previewOnlyRouteChoices]
  -[CPSMapTemplateViewController tripPreviewTextConfiguration]
  -[CPSMapTemplateViewController previewSelectedIndex]
  -[CPSMapTemplateViewController _setETAViewHidden:forRequester:animated:]
  -[CPSMapTemplateViewController setPreviewsView:]
  -[CPSMapTemplateViewController hideTapGestureRecognizer]
  -[CPSMapTemplateViewController _widthForNavigationAlert]
  -[CPSMapTemplateViewController navigationAlertBottomConstraint]
  -[CPSMapTemplateViewController setNavigationAlertBottomConstraint:]
  -[CPSMapTemplateViewController navigationAlertHeightConstraint]
  -[CPSMapTemplateViewController setNavigationAlertHeightConstraint:]
  -[CPSMapTemplateViewController _performAlertSizingForAlert:animated:]
  -[CPSMapTemplateViewController navigationCardViewLayoutViewBottomConstraint]
  -[CPSMapTemplateViewController navigationCardViewLayoutHelperView]
  -[CPSMapTemplateViewController setNavigationCardViewLayoutViewBottomConstraint:]
  -[CPSMapTemplateViewController setItemFocusedBeforeNavAlert:]
  -[CPSMapTemplateViewController setShouldRestoreFocusToNavigationBar:]
  -[CPSMapTemplateViewController mapTemplateDelegate]
  -[CPSMapTemplateViewController _setNavigationAlertView:visible:animated:completion:]
  -[CPSMapTemplateViewController itemFocusedBeforeNavAlert]
  -[CPSMapTemplateViewController navigatorObserver]
  -[CPSMapTemplateViewController setNavigationETAView:]
  -[CPSMapTemplateViewController setNavigationETAViewBottomConstraint:]
  -[CPSMapTemplateViewController navigationETAViewBottomConstraint]
  -[CPSMapTemplateViewController setNavigator:]
  -[CPSMapTemplateViewController autoHidesNavigationBar]
  -[CPSMapTemplateViewController setAutoHidesNavigationBar:]
  -[CPSMapTemplateViewController setTripPreviews:]
  -[CPSMapTemplateViewController setTripPreviewTextConfiguration:]
  -[CPSMapTemplateViewController setPreviewOnlyRouteChoices:]
  -[CPSMapTemplateViewController setPreviewSelectedIndex:]
  -[CPSMapTemplateViewController lastTravelEstimatesByTrip]
  -[CPSMapTemplateViewController _tripDidBegin:withEstimates:forIdentifier:]
  -[CPSMapTemplateViewController _setPanInterfaceVisible:animated:]
  -[CPSMapTemplateViewController panContainerView]
  -[CPSMapTemplateViewController autoHideDisabledReasons]
  -[CPSMapTemplateViewController setAutoHideDisabledReasons:]
  -[CPSMapTemplateViewController _showBarAnimated:allowFocusDeferral:]
  -[CPSMapTemplateViewController _isAutoHideEnabled]
  -[CPSMapTemplateViewController demoAutoHideTimerDisabled]
  -[CPSMapTemplateViewController _hideBar:]
  -[CPSMapTemplateViewController _setButtonsHidden:animated:]
  -[CPSMapTemplateViewController shouldRestoreFocusToNavigationBar]
  -[CPSMapTemplateViewController setLastPanGesturePoint:]
  -[CPSMapTemplateViewController lastPanGesturePoint]
  -[CPSMapTemplateViewController _addPanControllerAsChild]
  -[CPSMapTemplateViewController _updateInterestingArea]
  -[CPSMapTemplateViewController _setMaximumVisibleMapButtons:]
  -[CPSMapTemplateViewController _removePanController]
  -[CPSMapTemplateViewController _navBarInsets]
  -[CPSMapTemplateViewController _mapButtonsEdgeInsets]
  -[CPSMapTemplateViewController _cardViewEdgeInsets]
  -[CPSMapTemplateViewController _previewEdgeInsets]
  -[CPSMapTemplateViewController _navigationAlertInsets]
  -[CPSMapTemplateViewController setApplicationIsFrontmost:]
  -[CPSMapTemplateViewController _checkNavigationCardHelperViewForETAFit]
  -[CPSMapTemplateViewController etaViewHiddenRequesters]
  -[CPSMapTemplateViewController _updateETAViewHidden]
  -[CPSMapTemplateViewController etaViewHidden]
  -[CPSMapTemplateViewController setEtaViewHidden:]
  -[CPSMapTemplateViewController setNavigationCardViewController:]
  -[CPSMapTemplateViewController setNavigationCardViewLayoutHelperView:]
  -[CPSMapTemplateViewController setDemoAutoHideTimerDisabled:]
  -[CPSMapTemplateViewController setNavigationAlertQueue:]
  -[CPSMapTemplateViewController applicationIsFrontmost]
  -[CPSMapTemplateViewController setLastTravelEstimatesByTrip:]
  -[CPSMapTemplateViewController setEventDeliveryPolicyObserver:]
  -[CPSMapTemplateViewController setEtaViewHiddenRequesters:]


CPSSecondaryManeuverView : UIView /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI
 @property  long long style
 @property  CPTravelEstimates *currentTravelEstimates
 @property  unsigned long guidanceStyle
 @property  UIImageView *symbolView
 @property  CPSAbridgableLabel *instructionLabel
 @property  double generatedWidth
 @property  CPManeuver *maneuver
 @property  double generatedHeight

  // instance methods
  -[CPSSecondaryManeuverView .cxx_destruct]
  -[CPSSecondaryManeuverView maneuver]
  -[CPSSecondaryManeuverView instructionLabel]
  -[CPSSecondaryManeuverView setInstructionLabel:]
  -[CPSSecondaryManeuverView traitCollectionDidChange:]
  -[CPSSecondaryManeuverView horizontalInset]
  -[CPSSecondaryManeuverView setStyle:]
  -[CPSSecondaryManeuverView style]
  -[CPSSecondaryManeuverView initWithManeuver:]
  -[CPSSecondaryManeuverView generateLayoutConfigurationsForSizeIfNecessary:force:]
  -[CPSSecondaryManeuverView generatedHeight]
  -[CPSSecondaryManeuverView setCurrentTravelEstimates:]
  -[CPSSecondaryManeuverView generatedWidth]
  -[CPSSecondaryManeuverView setGeneratedWidth:]
  -[CPSSecondaryManeuverView currentTravelEstimates]
  -[CPSSecondaryManeuverView accessibilityName:]
  -[CPSSecondaryManeuverView setGeneratedHeight:]
  -[CPSSecondaryManeuverView symbolView]
  -[CPSSecondaryManeuverView guidanceStyle]
  -[CPSSecondaryManeuverView setGuidanceStyle:]
  -[CPSSecondaryManeuverView setSymbolView:]


CPSBarButtonItem : UIBarButtonItem /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI <CPSButtonDelegate>
 @property  NSUUID *identifier
 @property  CPBarButton *barButton
 @property  <CPSButtonDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSBarButtonItem .cxx_destruct]
  -[CPSBarButtonItem setImage:]
  -[CPSBarButtonItem setTitle:]
  -[CPSBarButtonItem identifier]
  -[CPSBarButtonItem barButton]
  -[CPSBarButtonItem setEnabled:]
  -[CPSBarButtonItem setDelegate:]
  -[CPSBarButtonItem delegate]
  -[CPSBarButtonItem didSelectButton:]
  -[CPSBarButtonItem initWithCPBarButton:]
  -[CPSBarButtonItem _initWithCPBarButton:showBackIndicator:]


CPSBarBackButtonItem : CPSBarButtonItem
  // instance methods
  -[CPSBarBackButtonItem initWithCPBarButton:]


CPSBarButton : CPSButton
 @property  CPBarButton *cyBarButton
 @property  BOOL showBackIndicator
 @property  BOOL usesSystemComposeGlyph
 @property  UIImageView *backIndicatorImageView
 @property  UIImage *backIndicatorImage
 @property  UIView *backgroundView
 @property  NSLayoutConstraint *backIndicatorHeightConstraint

  // class methods
  +[CPSBarButton buttonWithCPBarButton:showBackIndicator:]

  // instance methods
  -[CPSBarButton setBackIndicatorImage:]
  -[CPSBarButton didUpdateFocusInContext:withAnimationCoordinator:]
  -[CPSBarButton backgroundView]
  -[CPSBarButton setBackgroundView:]
  -[CPSBarButton touchesBegan:withEvent:]
  -[CPSBarButton backIndicatorImage]
  -[CPSBarButton .cxx_destruct]
  -[CPSBarButton hitTest:withEvent:]
  -[CPSBarButton intrinsicContentSize]
  -[CPSBarButton touchesCancelled:withEvent:]
  -[CPSBarButton traitCollectionDidChange:]
  -[CPSBarButton sizeThatFits:]
  -[CPSBarButton _updateButtonImage:]
  -[CPSBarButton _externalUnfocusedBorderColor]
  -[CPSBarButton didAddSubview:]
  -[CPSBarButton touchesEnded:withEvent:]
  -[CPSBarButton setShowBackIndicator:]
  -[CPSBarButton setCyBarButton:]
  -[CPSBarButton setUsesSystemComposeGlyph:]
  -[CPSBarButton showBackIndicator]
  -[CPSBarButton setBackIndicatorImageView:]
  -[CPSBarButton backIndicatorImageView]
  -[CPSBarButton _setupBackButtonImagesIfNeccessary]
  -[CPSBarButton _showsRoundedBackground]
  -[CPSBarButton cyBarButton]
  -[CPSBarButton _updateBackIndicatorImageView]
  -[CPSBarButton backIndicatorHeightConstraint]
  -[CPSBarButton setBackIndicatorHeightConstraint:]
  -[CPSBarButton usesSystemComposeGlyph]
  -[CPSBarButton _resetAlpha]


CPSPointsOfInterestTableView : UITableView /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI
  // instance methods
  -[CPSPointsOfInterestTableView initWithFrame:style:]
  -[CPSPointsOfInterestTableView visibleCells]
  -[CPSPointsOfInterestTableView accessoryViewAtEdge:]
  -[CPSPointsOfInterestTableView setAccessoryView:atEdge:]


CPSBannerSource : NSObject /usr/lib/libSystem.B.dylib <CPSBannerItemDelegate, CPSBannerViewControllerDelegate, BSInvalidatable, CPBannerProviding, CPSApplicationStateObserving>
 @property  NSString *bundleIdentifier
 @property  <CPBannerDelegate> *delegate
 @property  CPSApplicationStateMonitor *applicationStateMonitor
 @property  BNBannerSource *bannerKitSource
 @property  CPSBannerViewController *presentedBannerViewController
 @property  NSTimer *dimissTimer
 @property  BOOL rateLimited
 @property  NSUUID *lastUserDismissedIdentifier
 @property  NSTimer *lastUserDismissedIdentifierResetTimer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSBannerSource .cxx_destruct]
  -[CPSBannerSource setBundleIdentifier:]
  -[CPSBannerSource _flushQueue]
  -[CPSBannerSource applicationStateMonitor]
  -[CPSBannerSource setDelegate:]
  -[CPSBannerSource bundleIdentifier]
  -[CPSBannerSource invalidate]
  -[CPSBannerSource setApplicationStateMonitor:]
  -[CPSBannerSource delegate]
  -[CPSBannerSource postBannerForManeuver:travelEstimates:]
  -[CPSBannerSource postBannerForNavigationAlert:]
  -[CPSBannerSource sceneActivationStateChangedTo:]
  -[CPSBannerSource bannerTappedWithIdentifier:]
  -[CPSBannerSource initWithBundleIdentifier:delegate:applicationStateMonitor:]
  -[CPSBannerSource applicationStateMonitor:didBecomeActive:]
  -[CPSBannerSource bannerKitSource]
  -[CPSBannerSource _enqueueBannerItem:]
  -[CPSBannerSource presentedBannerViewController]
  -[CPSBannerSource _revokePresentedBannerWithReason:]
  -[CPSBannerSource _resetDismissTimer]
  -[CPSBannerSource lastUserDismissedIdentifier]
  -[CPSBannerSource isRateLimited]
  -[CPSBannerSource setRateLimited:]
  -[CPSBannerSource _postBannerRequestForBannerItem:]
  -[CPSBannerSource setPresentedBannerViewController:]
  -[CPSBannerSource dimissTimer]
  -[CPSBannerSource _dismissTimerFired:]
  -[CPSBannerSource setDimissTimer:]
  -[CPSBannerSource lastUserDismissedIdentifierResetTimer]
  -[CPSBannerSource _resetLastUserDismissedIdentifierTimerFired:]
  -[CPSBannerSource setLastUserDismissedIdentifierResetTimer:]
  -[CPSBannerSource setLastUserDismissedIdentifier:]
  -[CPSBannerSource bannerViewController:requestsDismissalWithReason:]
  -[CPSBannerSource _resetLastUserDismissedIdentifierTimer]
  -[CPSBannerSource setBannerKitSource:]


CPSPointOfInterestClusterAnnotation : NSObject /usr/lib/libSystem.B.dylib

CPSPointOfInterestClusterView : MKMarkerAnnotationView /System/Library/Frameworks/Foundation.framework/Foundation
 @property  CPImageSet *imageSet

  // instance methods
  -[CPSPointOfInterestClusterView update]
  -[CPSPointOfInterestClusterView setSelected:animated:]
  -[CPSPointOfInterestClusterView setSelected:]
  -[CPSPointOfInterestClusterView .cxx_destruct]
  -[CPSPointOfInterestClusterView traitCollectionDidChange:]
  -[CPSPointOfInterestClusterView initWithAnnotation:reuseIdentifier:]
  -[CPSPointOfInterestClusterView imageSet]
  -[CPSPointOfInterestClusterView setImageSet:]
  -[CPSPointOfInterestClusterView setUnselected:]


CPSBannerViewController : UIViewController /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI <BNPresentable>
 @property  PLPlatterView *platterView
 @property  CPSGuidanceBannerView *bannerView
 @property  <CPSBannerViewControllerDelegate> *delegate
 @property  CPSBannerItem *bannerItem
 @property  NSString *requesterIdentifier
 @property  NSString *requestIdentifier
 @property  UIViewController *viewController
 @property  long long presentableType
 @property  BOOL draggingDismissalEnabled
 @property  BOOL draggingInteractionEnabled
 @property  BOOL touchOutsideDismissalEnabled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSBannerViewController _wheelChangedWithEvent:]
  -[CPSBannerViewController viewDidLoad]
  -[CPSBannerViewController viewController]
  -[CPSBannerViewController requestIdentifier]
  -[CPSBannerViewController platterView]
  -[CPSBannerViewController presentableDidAppearAsBanner:]
  -[CPSBannerViewController setBannerView:]
  -[CPSBannerViewController .cxx_destruct]
  -[CPSBannerViewController presentableDidDisappearAsBanner:withReason:]
  -[CPSBannerViewController setPlatterView:]
  -[CPSBannerViewController setDelegate:]
  -[CPSBannerViewController bannerView]
  -[CPSBannerViewController requesterIdentifier]
  -[CPSBannerViewController delegate]
  -[CPSBannerViewController preferredContentSizeWithPresentationSize:containerSize:]
  -[CPSBannerViewController isTouchOutsideDismissalEnabled]
  -[CPSBannerViewController _handleBackGesture:]
  -[CPSBannerViewController initWithBannerItem:]
  -[CPSBannerViewController bannerItem]
  -[CPSBannerViewController updateBannerWithBannerItem:]
  -[CPSBannerViewController _bannerTapped:]


CPSBannerView : UIView /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI
 @property  CPSBannerItem *bannerItem

  // instance methods
  -[CPSBannerView .cxx_destruct]
  -[CPSBannerView initWithBannerItem:]
  -[CPSBannerView bannerItem]
  -[CPSBannerView applicationIconImage]
  -[CPSBannerView updateBannerWithBannerItem:]
  -[CPSBannerView setBannerItem:]


CPSNavigationBar : UINavigationBar /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI <CPSLinearFocusProviding>
 @property  NSMapTable *lastFocusedItems
 @property  BOOL useRightHandDriveFocusGuide
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSNavigationBar preferredFocusEnvironments]
  -[CPSNavigationBar didUpdateFocusInContext:withAnimationCoordinator:]
  -[CPSNavigationBar didMoveToSuperview]
  -[CPSNavigationBar initWithFrame:]
  -[CPSNavigationBar .cxx_destruct]
  -[CPSNavigationBar popNavigationItemAnimated:]
  -[CPSNavigationBar _linearFocusItems]
  -[CPSNavigationBar lastFocusedItems]
  -[CPSNavigationBar setLastFocusedItems:]


CPSTableCell : CPUITableCell /System/Library/PrivateFrameworks/MobileIcons.framework/MobileIcons <CPSCellSizable>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CPSTableCell heightForListItem:]

  // instance methods
  -[CPSTableCell configureWithListItem:spinning:environment:]


CPSMessageCell : CPUIMessageCell /System/Library/PrivateFrameworks/MobileIcons.framework/MobileIcons <CPSCellSizable>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CPSMessageCell heightForListItem:]

  // instance methods
  -[CPSMessageCell configureWithMessageListItem:]


CPSImageRowCell : CPUIImageRowCell /System/Library/PrivateFrameworks/MobileIcons.framework/MobileIcons <CPSCellSizable>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CPSImageRowCell heightForListItem:]

  // instance methods
  -[CPSImageRowCell configureWithImageRowItem:selectGridItemBlock:selectTitleBlock:showActivityIndicator:]


CPSDataSource : NSObject /usr/lib/libSystem.B.dylib <CPListDataSource, UITableViewDataSource>
 @property  UITableView *tableView
 @property  long long rowAnimation
 @property  @? cellConfigureBlock
 @property  @? cellCreateBlock
 @property  long long numberOfSections
 @property  long long numberOfItems
 @property  NSIndexPath *firstItemIndexPath
 @property  NSArray *items
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSDataSource numberOfItems]
  -[CPSDataSource reloadData]
  -[CPSDataSource init]
  -[CPSDataSource setTableView:]
  -[CPSDataSource items]
  -[CPSDataSource tableView:numberOfRowsInSection:]
  -[CPSDataSource tableView]
  -[CPSDataSource tableView:canEditRowAtIndexPath:]
  -[CPSDataSource numberOfSections]
  -[CPSDataSource .cxx_destruct]
  -[CPSDataSource firstItemIndexPath]
  -[CPSDataSource itemAtIndexPath:]
  -[CPSDataSource numberOfItemsInSection:]
  -[CPSDataSource tableView:cellForRowAtIndexPath:]
  -[CPSDataSource numberOfSectionsInTableView:]
  -[CPSDataSource indexPathForItemWithIdentifier:]
  -[CPSDataSource tableView:canMoveRowAtIndexPath:]
  -[CPSDataSource insertItemsAtIndexPaths:]
  -[CPSDataSource reloadItemsAtIndexPaths:]
  -[CPSDataSource deleteItemsAtIndexPaths:]
  -[CPSDataSource moveItemAtIndexPath:toIndexPath:]
  -[CPSDataSource setRowAnimation:]
  -[CPSDataSource setCellCreateBlock:]
  -[CPSDataSource setCellConfigureBlock:]
  -[CPSDataSource insertSectionsAtIndexes:]
  -[CPSDataSource deleteSectionsAtIndexes:]
  -[CPSDataSource cellCreateBlock]
  -[CPSDataSource cellConfigureBlock]
  -[CPSDataSource rowAnimation]


CPSAlertButton : CPSButton
  // class methods
  +[CPSAlertButton buttonWithCPAlertAction:]

  // instance methods
  -[CPSAlertButton traitCollectionDidChange:]
  -[CPSAlertButton _buttonFont]
  -[CPSAlertButton _externalUnfocusedBorderColor]


CPSPointOfInterestAnnotation : NSObject /usr/lib/libSystem.B.dylib <MKAnnotation>
 @property  CPPointOfInterest *pointOfInterest
 @property  {CLLocationCoordinate2D=dd} coordinate
 @property  NSString *title
 @property  NSString *subtitle
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CPSPointOfInterestAnnotation coordinate]
  -[CPSPointOfInterestAnnotation .cxx_destruct]
  -[CPSPointOfInterestAnnotation title]
  -[CPSPointOfInterestAnnotation pointOfInterest]
  -[CPSPointOfInterestAnnotation subtitle]
  -[CPSPointOfInterestAnnotation initWithPointOfInterest:]


CPSPointOfInterestAnnotationView : MKAnnotationView /System/Library/Frameworks/Foundation.framework/Foundation
 @property  CPImageSet *imageSet

  // instance methods
  -[CPSPointOfInterestAnnotationView update]
  -[CPSPointOfInterestAnnotationView setSelected:animated:]
  -[CPSPointOfInterestAnnotationView setSelected:]
  -[CPSPointOfInterestAnnotationView .cxx_destruct]
  -[CPSPointOfInterestAnnotationView traitCollectionDidChange:]
  -[CPSPointOfInterestAnnotationView imageSet]
  -[CPSPointOfInterestAnnotationView setImageSet:]


CPSEntityStyles : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CPSEntityStyles actionButtonFont]
  +[CPSEntityStyles mapButtonDropShadow]
  +[CPSEntityStyles mapButtonBackgroundColor]
  +[CPSEntityStyles pickerTitleFont]
  +[CPSEntityStyles mapButtonFont]
  +[CPSEntityStyles pickerCellPrimaryFont]
  +[CPSEntityStyles pickerCellSecondaryFont]
  +[CPSEntityStyles pickerCellPrimaryFontColor:]
  +[CPSEntityStyles pickerCellSecondaryFontColor:]
  +[CPSEntityStyles pickerInfoPrimaryFont]
  +[CPSEntityStyles pickerInfoSecondaryFont]
  +[CPSEntityStyles pickerInfoButtonFont]


CPSEntityStylesDropShadow : NSObject /usr/lib/libSystem.B.dylib
 @property  UIColor *color
 @property  {CGSize=dd} offset
 @property  double radius
 @property  double opacity

  // instance methods
  -[CPSEntityStylesDropShadow .cxx_destruct]
  -[CPSEntityStylesDropShadow setOffset:]
  -[CPSEntityStylesDropShadow color]
  -[CPSEntityStylesDropShadow opacity]
  -[CPSEntityStylesDropShadow radius]
  -[CPSEntityStylesDropShadow offset]
  -[CPSEntityStylesDropShadow setColor:]
  -[CPSEntityStylesDropShadow setRadius:]
  -[CPSEntityStylesDropShadow setOpacity:]
  -[CPSEntityStylesDropShadow applyShadowToLayer:]


CPAlertAction(UIKitBridging)
	// instance methods
	-[CPAlertAction(UIKitBridging) alertActionRepresentationWithHandler:]

CPActionSheetTemplate(UIKitBridging)
	// instance methods
	-[CPActionSheetTemplate(UIKitBridging) alertControllerRepresentation]

UIViewController(CPSBaseTemplateViewController)
	// instance methods
	-[UIViewController(CPSBaseTemplateViewController) _cps_viewControllerWasPopped]

MKMapCamera(CPSUtilities)
	// class methods
	+[MKMapCamera(CPSUtilities) _CPS_cameraForRegion:withSize:]

MKMapView(CPSMapUtilities)
	// instance methods
	-[MKMapView(CPSMapUtilities) _CPS_setCamera:animated:]

(CPSUtilities)
	// instance methods
	-[(CPSUtilities) cps_map:]
	-[(CPSUtilities) cps_filter:]

(CPSUtilities)
	// instance methods
	-[(CPSUtilities) cps_mutableDictionaryWithValuesForKeys:]

NSXPCConnection(CPSBundleHelpers)
	// instance methods
	-[NSXPCConnection(CPSBundleHelpers) cp_bundleIdentifier]

UIView(CarTableViewAdditions)
	// instance methods
	-[UIView(CarTableViewAdditions) _CPS_recursiveSubviewsWithClass:]

UIButton(CarPlaySupport)
	// instance methods
	-[UIButton(CarPlaySupport) cps_setBackgroundColor:forState:]

01 00 0900 /System/Library/PrivateFrameworks/BackBoardServices.framework/BackBoardServices: BKSHIDEventDeferringEnvironment 
01 00 0900 /System/Library/PrivateFrameworks/BackBoardServices.framework/BackBoardServices: BKSHIDEventDeliveryPolicyObserver 
01 00 0300 /System/Library/PrivateFrameworks/BannerKit.framework/BannerKit: BNBannerSource 
01 00 0e00 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: BSAnimationSettings 
01 00 0f00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMediaTimingFunction 
01 00 1200 /System/Library/PrivateFrameworks/CarKit.framework/CarKit: CARNavigationOwnershipManager 
01 00 1200 /System/Library/PrivateFrameworks/CarKit.framework/CarKit: CARObserverHashTable 
01 00 1200 /System/Library/PrivateFrameworks/CarKit.framework/CarKit: CARSessionStatus 
01 00 0f00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransaction 
01 00 0200 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLLocationManager 
01 00 1400 /System/Library/Frameworks/Contacts.framework/Contacts: CNPostalAddressFormatter 
01 00 1500 /System/Library/Frameworks/CarPlay.framework/CarPlay: CPActionSheetTemplate 
01 00 1500 /System/Library/Frameworks/CarPlay.framework/CarPlay: CPAlertAction 
01 00 1500 /System/Library/Frameworks/CarPlay.framework/CarPlay: CPAlertTemplate 
01 00 1500 /System/Library/Frameworks/CarPlay.framework/CarPlay: CPBarButton 
01 00 1500 /System/Library/Frameworks/CarPlay.framework/CarPlay: CPContactCallButton 
01 00 1500 /System/Library/Frameworks/CarPlay.framework/CarPlay: CPContactDirectionsButton 
01 00 1500 /System/Library/Frameworks/CarPlay.framework/CarPlay: CPContactEntity 
01 00 1500 /System/Library/Frameworks/CarPlay.framework/CarPlay: CPContactMessageButton 
01 00 1500 /System/Library/Frameworks/CarPlay.framework/CarPlay: CPContactTemplate 
01 00 1500 /System/Library/Frameworks/CarPlay.framework/CarPlay: CPDashboardButton 
01 00 1500 /System/Library/Frameworks/CarPlay.framework/CarPlay: CPDashboardController 
01 00 1500 /System/Library/Frameworks/CarPlay.framework/CarPlay: CPGridTemplate 
01 00 1500 /System/Library/Frameworks/CarPlay.framework/CarPlay: CPInformationRatingItem 
01 00 1500 /System/Library/Frameworks/CarPlay.framework/CarPlay: CPInformationTemplate 
01 00 1500 /System/Library/Frameworks/CarPlay.framework/CarPlay: CPInterfaceController 
01 00 1500 /System/Library/Frameworks/CarPlay.framework/CarPlay: CPListImageRowItem 
01 00 1500 /System/Library/Frameworks/CarPlay.framework/CarPlay: CPListItem 
01 00 1500 /System/Library/Frameworks/CarPlay.framework/CarPlay: CPListSection 
01 00 1500 /System/Library/Frameworks/CarPlay.framework/CarPlay: CPListTemplate 
01 00 1500 /System/Library/Frameworks/CarPlay.framework/CarPlay: CPMapTemplate 
01 00 1500 /System/Library/Frameworks/CarPlay.framework/CarPlay: CPMessageComposeBarButton 
01 00 1500 /System/Library/Frameworks/CarPlay.framework/CarPlay: CPMessageListItem 
01 00 1500 /System/Library/Frameworks/CarPlay.framework/CarPlay: CPNowPlayingAddToLibraryButton 
01 00 1500 /System/Library/Frameworks/CarPlay.framework/CarPlay: CPNowPlayingImageButton 
01 00 1500 /System/Library/Frameworks/CarPlay.framework/CarPlay: CPNowPlayingMoreButton 
01 00 1500 /System/Library/Frameworks/CarPlay.framework/CarPlay: CPNowPlayingPlaybackRateButton 
01 00 1500 /System/Library/Frameworks/CarPlay.framework/CarPlay: CPNowPlayingRepeatButton 
01 00 1500 /System/Library/Frameworks/CarPlay.framework/CarPlay: CPNowPlayingShuffleButton 
01 00 1500 /System/Library/Frameworks/CarPlay.framework/CarPlay: CPNowPlayingTemplate 
01 00 1500 /System/Library/Frameworks/CarPlay.framework/CarPlay: CPPointOfInterestTemplate 
01 00 1500 /System/Library/Frameworks/CarPlay.framework/CarPlay: CPPointsOfInterestEntity 
01 00 1500 /System/Library/Frameworks/CarPlay.framework/CarPlay: CPSearchTemplate 
01 00 1500 /System/Library/Frameworks/CarPlay.framework/CarPlay: CPSessionConfiguration 
01 00 1500 /System/Library/Frameworks/CarPlay.framework/CarPlay: CPTabBarTemplate 
01 00 1500 /System/Library/Frameworks/CarPlay.framework/CarPlay: CPTemplate 
01 00 1500 /System/Library/Frameworks/CarPlay.framework/CarPlay: CPTravelEstimates 
01 00 1800 /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI: CPUIBannerViewButton 
01 00 1800 /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI: CPUIImageRowCell 
01 00 1800 /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI: CPUIImageRowCellConfiguration 
01 00 1800 /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI: CPUIMessageCell 
01 00 1800 /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI: CPUIMessageCellConfiguration 
01 00 1800 /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI: CPUINowPlayingButton 
01 00 1800 /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI: CPUINowPlayingButtonWrapperView 
01 00 1800 /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI: CPUINowPlayingManager 
01 00 1800 /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI: CPUINowPlayingSnapshot 
01 00 1800 /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI: CPUINowPlayingViewController 
01 00 1800 /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI: CPUIPassthroughView 
01 00 1800 /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI: CPUIPlayModeButton 
01 00 1800 /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI: CPUITableCell 
01 00 1800 /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI: CPUITableCellAccessory 
01 00 1800 /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI: CPUITableCellConfiguration 
01 00 1500 /System/Library/Frameworks/CarPlay.framework/CarPlay: CPVoiceControlTemplate 
01 00 0700 /System/Library/PrivateFrameworks/CarPlayUIServices.framework/CarPlayUIServices: CRSUIDashboardWidgetWindow 
01 00 0700 /System/Library/PrivateFrameworks/CarPlayUIServices.framework/CarPlayUIServices: CRSUITemplateDashboardWidgetSceneSettings 
01 00 0e00 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: FBSOpenApplicationService 
01 00 0600 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationProxy 
01 00 0600 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSBundleProxy 
01 00 1c00 /System/Library/Frameworks/MapKit.framework/MapKit: MKAnnotationView 
01 00 1c00 /System/Library/Frameworks/MapKit.framework/MapKit: MKClusterAnnotation 
01 00 1c00 /System/Library/Frameworks/MapKit.framework/MapKit: MKMapCamera 
01 00 1c00 /System/Library/Frameworks/MapKit.framework/MapKit: MKMapView 
01 00 1c00 /System/Library/Frameworks/MapKit.framework/MapKit: MKMarkerAnnotationView 
01 00 1c00 /System/Library/Frameworks/MapKit.framework/MapKit: MKPinAnnotationView 
01 00 0800 /System/Library/PrivateFrameworks/NetAppsUtilities.framework/NetAppsUtilities: NAFuture 
01 00 2000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 2000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 2000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 2000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateComponentsFormatter 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 2000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexPath 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexSet 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSLayoutConstraint 
01 00 2000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMeasurement 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMeasurementFormatter 
01 00 2000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableAttributedString 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableCharacterSet 
01 00 2000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: NSMutableParagraphStyle 
01 00 2000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 1e00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 2000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: NSStringDrawingContext 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: NSTextAttachment 
01 00 2000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUnitLength 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListener 
01 00 0400 /System/Library/PrivateFrameworks/PlatterKit.framework/PlatterKit: PLPlatterView 
01 00 0d00 /System/Library/PrivateFrameworks/SiriActivation.framework/SiriActivation: SiriDirectActionContext 
01 00 0d00 /System/Library/PrivateFrameworks/SiriActivation.framework/SiriActivation: SiriDirectActionSource 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivityIndicatorView 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertAction 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertController 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIBarButtonItem 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIBlurEffect 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIButton 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIColorEffect 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIControl 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UICubicTimingParameters 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIFocusContainerGuide 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIFocusGuide 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIFocusSystem 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIFontDescriptor 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageSymbolConfiguration 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UILabel 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UILayoutGuide 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UILongPressGestureRecognizer 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationBar 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationController 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIPanGestureRecognizer 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIScrollView 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UISearchContainerViewController 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UISearchController 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIStackView 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UITabBarController 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UITabBarItem 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UITableView 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewCell 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewHeaderFooterView 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UITapGestureRecognizer 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UITraitCollection 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewPropertyAnimator 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIVisualEffectView 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: UIWindow 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: _UIFocusLinearMovementSequence 
01 00 1700 /System/Library/Frameworks/UIKit.framework/UIKit: _UIFocusUpdateRequest 
