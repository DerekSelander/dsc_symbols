|| __DATA.__data _WGLogSubsystem
|| __DATA.__objc_data _OBJC_CLASS_$_WGCarouselCellThresholds
|| __DATA.__objc_data _OBJC_CLASS_$_WGCheckView
|| __DATA.__objc_data _OBJC_CLASS_$_WGCircleCheckView
|| __DATA.__objc_data _OBJC_CLASS_$_WGColorHighlightButton
|| __DATA.__objc_data _OBJC_CLASS_$_WGExplanatoryView
|| __DATA.__objc_data _OBJC_CLASS_$_WGMappedImageCache
|| __DATA.__objc_data _OBJC_CLASS_$_WGPlatterHeaderContentView
|| __DATA.__objc_data _OBJC_CLASS_$_WGWidgetListEditViewController
|| __DATA.__objc_data _OBJC_CLASS_$_WGWidgetListEditViewFavoritesTableCellView
|| __DATA.__objc_data _OBJC_CLASS_$_WGWidgetListEditViewPinTableViewCell
|| __DATA.__objc_data _OBJC_CLASS_$_WGWidgetListEditViewTableHeaderView
|| __DATA.__objc_data _OBJC_CLASS_$_WGWidgetPinningTeachingAnimationView
|| __DATA.__objc_data _OBJC_CLASS_$_WGWidgetPinningTeachingView
|| __DATA.__objc_data _OBJC_CLASS_$_WGWidgetViewController
|| __DATA.__objc_data _OBJC_CLASS_$__WGBrokenWidgetView
|| __DATA.__objc_data _OBJC_CLASS_$__WGCarouselCellResizeContext
|| __DATA.__objc_data _OBJC_CLASS_$__WGLockedOutWidgetView
|| __DATA.__objc_data _OBJC_METACLASS_$_WGCarouselCellThresholds
|| __DATA.__objc_data _OBJC_METACLASS_$_WGCheckView
|| __DATA.__objc_data _OBJC_METACLASS_$_WGCircleCheckView
|| __DATA.__objc_data _OBJC_METACLASS_$_WGColorHighlightButton
|| __DATA.__objc_data _OBJC_METACLASS_$_WGExplanatoryView
|| __DATA.__objc_data _OBJC_METACLASS_$_WGMappedImageCache
|| __DATA.__objc_data _OBJC_METACLASS_$_WGWidgetListEditViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_WGWidgetListEditViewFavoritesTableCellView
|| __DATA.__objc_data _OBJC_METACLASS_$_WGWidgetListEditViewPinTableViewCell
|| __DATA.__objc_data _OBJC_METACLASS_$_WGWidgetListEditViewTableHeaderView
|| __DATA.__objc_data _OBJC_METACLASS_$_WGWidgetPinningTeachingAnimationView
|| __DATA.__objc_data _OBJC_METACLASS_$_WGWidgetPinningTeachingView
|| __DATA.__objc_data _OBJC_METACLASS_$__WGBrokenWidgetView
|| __DATA.__objc_data _OBJC_METACLASS_$__WGCarouselCellResizeContext
|| __DATA.__objc_data _OBJC_METACLASS_$__WGLockedOutWidgetView
|| __DATA.__objc_data _OBJC_METACLASS_$__WGWidgetListScrollView
|| __DATA.__objc_ivar _OBJC_IVAR_$_WGCarouselCellThresholds._headerHeight
|| __DATA.__objc_ivar _OBJC_IVAR_$_WGCarouselCellThresholds._threshold1
|| __DATA.__objc_ivar _OBJC_IVAR_$_WGCarouselCellThresholds._threshold2
|| __DATA.__objc_ivar _OBJC_IVAR_$_WGCarouselCellThresholds._threshold3
|| __DATA.__objc_ivar _OBJC_IVAR_$_WGCarouselCellThresholds._threshold4
|| __DATA.__objc_ivar _OBJC_IVAR_$_WGCarouselCellThresholds._threshold5
|| __DATA.__objc_ivar _OBJC_IVAR_$_WGCarouselCellThresholds._threshold6
|| __DATA.__objc_ivar _OBJC_IVAR_$_WGCarouselCellThresholds._threshold7
|| __DATA.__objc_ivar _OBJC_IVAR_$_WGWidgetListViewController._cancelTouchesAssertionsByWidgetID
|| __DATA.__objc_ivar _OBJC_IVAR_$_WGWidgetListViewController._captureOnlyMaterialView
|| __DATA.__objc_ivar _OBJC_IVAR_$_WGWidgetListViewController._discoveryController
|| __DATA.__objc_ivar _OBJC_IVAR_$_WGWidgetListViewController._maxVisibleContentSize
|| __DATA.__objc_ivar _OBJC_IVAR_$_WGWidgetListViewController._scrollView
|| __DATA.__objc_ivar _OBJC_IVAR_$_WGWidgetListViewController._stackView
|| __DATA.__objc_ivar _OBJC_IVAR_$_WGWidgetListViewController._userInterfaceStylesToCaptureOnlyMaterialViews
|| __DATA.__objc_ivar _OBJC_IVAR_$_WGWidgetListViewController._widgetIDsToItemVCs
|| __DATA_CONST.__const _WGAvailableWidgetsUpdatedNotification
|| __DATA_CONST.__const _WGNewWidgetsCountKey
|| __DATA_CONST.__const _WGStocksWidgetIdentifier
|| __DATA_CONST.__const _WGUpNextWidgetIdentifier
|| __DATA_CONST.__const _WGWeatherWidgetIdentifier
|| __DATA_CONST.__const _WGWidgetAssociatedApplicationIdentifier
|| __DATA_CONST.__const _WGWidgetErrorDomain
|| __DATA_CONST.__const _WGWidgetFavoritesDidChangeNotification
|| __DATA_CONST.__const _WGWidgetGroupViewControllerWidgetContentStateDidChangeNotification
|| __DATA_CONST.__const _WGWidgetHostingViewControllerErrorDomain
|| __DATA_CONST.__const _WGWidgetInfoIconDidInvalidateNotification
|| __DATA_CONST.__const _WGWidgetLifeCycleErrorDomain
|| __DATA_CONST.__const _WGWidgetListEditViewControllerDidAppearNotification
|| __DATA_CONST.__const _WGWidgetListEditViewControllerDidDisappearNotification
|| __DATA_CONST.__const _WGWidgetListEditViewControllerWillAppearNotification
|| __DATA_CONST.__const _WGWidgetListEditViewControllerWillDisappearNotification
|| __DATA_CONST.__const _WGWidgetListViewControllerWidgetContentStateDidChangeNotification
|| __DATA_CONST.__const _WGWidgetRowHeightDidChangeNotification
|| __DATA_CONST.__const _WGWidgetViewControllerAddRequestBundleIdentifierKey
|| __DATA_CONST.__const _WGWidgetViewControllerAddRequestNotification
|| __DATA_CONST.__const _WGWidgetViewControllerDidRemoveSnapshotNotification
|| __DATA_CONST.__const _WGWidgetViewControllerRemovedSnapshotURLKey
|| __DATA_CONST.__const _WGWidgetViewControllerRemovedSnapshotWidgetIdentifierKey
|| __DATA_CONST.__const _WGWidgetWantsTop
|| __DATA_CONST.__const _WGWidgetWantsVisibleFrame
|| __DATA_CONST.__const _kWGWidgetViewControllerHasContentKey
|| __DATA_CONST.__const _kWGWidgetViewControllerLargestAvailableDisplayMode
|| __DATA_CONST.__const _kWGWidgetViewControllerUserSpecifiedDisplayMode
|| __DATA_DIRTY.__common _WGLogWidgets
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WGCalendarWidgetInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WGCarouselListViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WGDataSourceManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WGMajorListViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WGNewWidgetsButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WGShortLookStyleButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WGWidgetAttributionView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WGWidgetDataSource
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WGWidgetDataSourceManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WGWidgetDatum
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WGWidgetDiscoveryController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WGWidgetEventTracker
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WGWidgetGroupViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WGWidgetHostingViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WGWidgetInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WGWidgetLifeCycleSequence
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WGWidgetListEditViewTableViewCell
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WGWidgetListFooterView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WGWidgetListHeaderView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WGWidgetListItemViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WGWidgetListViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WGWidgetPersistentStateController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WGWidgetPlatterView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WGWidgetStatsController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WGWidgetVisibilityManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WGWidgetWrapperView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__WGCAPackageView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__WGConcreteDataSource
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__WGWidgetListScrollView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__WGWidgetRemoteViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WGCalendarWidgetInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WGCarouselListViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WGDataSourceManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WGMajorListViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WGNewWidgetsButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WGPlatterHeaderContentView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WGShortLookStyleButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WGWidgetAttributionView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WGWidgetDataSource
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WGWidgetDataSourceManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WGWidgetDatum
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WGWidgetDiscoveryController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WGWidgetEventTracker
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WGWidgetGroupViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WGWidgetHostingViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WGWidgetInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WGWidgetLifeCycleSequence
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WGWidgetListEditViewTableViewCell
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WGWidgetListFooterView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WGWidgetListHeaderView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WGWidgetListItemViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WGWidgetListViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WGWidgetPersistentStateController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WGWidgetPlatterView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WGWidgetStatsController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WGWidgetViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WGWidgetVisibilityManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WGWidgetWrapperView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__WGCAPackageView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__WGConcreteDataSource
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__WGWidgetRemoteViewController
|| __TEXT.__const _WidgetsVersionNumber
|| __TEXT.__const _WidgetsVersionString
|| __TEXT.__text _NCBundleIDForPID
|| __TEXT.__text _NSStringFromWGWidgetPinningTeachingAnimationViewState
|| __TEXT.__text _WGApplicationIdentifierForWidgetWithBundleIdentifier
|| __TEXT.__text _WGCachedNSHomeDirectory
|| __TEXT.__text _WGCachesPathForSandboxPath
|| __TEXT.__text _WGContainingBundleCachePathForWidgetWithContainingBundleIdentifier
|| __TEXT.__text _WGContainingBundleIdentifierForWidgetWithBundleIdentifier
|| __TEXT.__text _WGContainingBundleProxyForWidgetWithBundleIdentifer
|| __TEXT.__text _WGConvertDampingRatioResponseToMassStiffnessDamping
|| __TEXT.__text _WGConvertTensionAndFrictionToDampingRatioResponseAndSettlingDuration
|| __TEXT.__text _WGEnsureDirectoryExistsAtPath
|| __TEXT.__text _WGIsBundleWithIdentifierFirstParty
|| __TEXT.__text _WGIsBundleWithIdentifierInternal
|| __TEXT.__text _WGIsWidgetWithBundleIdentifierBuiltOnOrAfterSystemVersion
|| __TEXT.__text _WGIsWidgetWithBundleIdentifierInternal
|| __TEXT.__text _WGIsWidgetWithBundleIdentifierWantsTop
|| __TEXT.__text _WGMainScreenReferenceBounds
|| __TEXT.__text _WGPersistedStateURLForWidgetWithBundleIdentifier
|| __TEXT.__text _WGPlugInBundleIdentifiersForContainingBundleIdentifier
|| __TEXT.__text _WGRectRoundForMainScreenScale
|| __TEXT.__text _WGRegisterWidgetsLogging
|| __TEXT.__text _WGRoundToMainScreenScale
|| __TEXT.__text _WGSafeCast
|| __TEXT.__text _WGShortStringFromLayoutMode
|| __TEXT.__text _WGStringForAppearState
|| __TEXT.__text _WGStringFromLayoutMode
|| __TEXT.__text _WGStringFromUserInterfaceStyle
|| __TEXT.__text _WGStringFromWidgetLifeCycleSequenceState
|| __TEXT.__text _WGTodayViewArchiveGetArchive
|| __TEXT.__text _WGTodayViewArchiveGetDisplayModeForIdentifier
|| __TEXT.__text _WGTodayViewArchiveGetKnownForIdentifier
|| __TEXT.__text _WGTodayViewArchiveGetOrderedIdentifiersInGroup
|| __TEXT.__text _WGTodayViewArchiveGetPenalizedForIdentifier
|| __TEXT.__text _WGTodayViewArchiveMigrateArchiveFromLegacy
|| __TEXT.__text _WGTodayViewArchiveRemoveFromOrderedIdentifiers
|| __TEXT.__text _WGTodayViewArchiveSave
|| __TEXT.__text _WGTodayViewArchiveSetDisplayModeForIdentifier
|| __TEXT.__text _WGTodayViewArchiveSetKnownForIdentifier
|| __TEXT.__text _WGTodayViewArchiveSetOrderedIdentifiersInGroup
|| __TEXT.__text _WGTodayViewArchiveSetPenalizedForIdentifier
|| __TEXT.__text _WGWidgetCachePathForWidgetWithBundleIdentifier
|| __TEXT.__text _WGWidgetListSettingsEqualsToWidgetListSettings
|| __TEXT.__text _WGWidgetListSettingsFullCarousel
|| __TEXT.__text _WGWidgetListSettingsTopCarousel
|| __TEXT.__text _WGWidgetPersistentStateResetHasContent
|| __TEXT.__text _WGWidgetsFrameworkBundle
|| __TEXT.__text __WGDataSourceIsEqualToDataSource
|| __TEXT.__text __WGGraphicsQuality
|| __TEXT.__text __WGIsQueueSuspended
|| __TEXT.__text __WGIsSystemVersionSameOrAfterSystemVersion
|| __TEXT.__text __WGMainScreenScale
|| __TEXT.__text __WGResumeQueue
|| __TEXT.__text __WGSupportsASTC
|| __TEXT.__text __WGSupportsMetal
|| __TEXT.__text __WGSuspendQueue
|| __TEXT.__text __WGTodayViewArchiveRemoveFromOrderedIdentifiersInGroup
|| __TEXT.__text _smoothDecelerationAnimation
__ AggregateDictionary: _ADClientAddValueForScalarKey
__ AggregateDictionary: _ADClientPushValueForDistributionKey
__ BaseBoard: _BSBundleIDForPID
__ BaseBoard: _BSDispatchQueueAssertMain
__ BaseBoard: _BSDispatchQueueAssertNotMain
__ BaseBoard: _BSDispatchQueueCreateSerial
__ BaseBoard: _BSFloatCeilForScale
__ BaseBoard: _BSFloatEqualToFloat
__ BaseBoard: _BSFloatFloorForScale
__ BaseBoard: _BSFloatIsOne
__ BaseBoard: _BSFloatIsZero
__ BaseBoard: _BSFloatLessThanFloat
__ BaseBoard: _BSFloatRoundForScale
__ BaseBoard: _BSIntervalMap
__ BaseBoard: _BSIntervalUnit
__ BaseBoard: _BSRectRoundForScale
__ BaseBoard: _BSRectWithSize
__ BaseBoard: _BSRunLoopPerformAfterCACommit
__ BaseBoard: _BSXPCConnectionHasEntitlement
__ BaseBoard: _OBJC_CLASS_$_BSAuditToken
__ BaseBoard: _OBJC_CLASS_$_BSPlatform
__ BaseBoardUI: _BSUIConstrainValueToIntervalWithRubberBand
__ BaseBoardUI: _OBJC_CLASS_$_BSUICAPackageView
__ BaseBoardUI: _OBJC_CLASS_$_BSUIFontProvider
__ BaseBoardUI: _OBJC_CLASS_$_BSUIMappedImageCache
__ BaseBoardUI: _OBJC_METACLASS_$_BSUICAPackageView
__ BaseBoardUI: _OBJC_METACLASS_$_BSUIMappedImageCache
__ BaseBoardUI: __BSUI_Private_IsN84
__ BulletinBoard: _BBRemoveSavedChronologicalSectionInfo
__ BulletinBoard: _BBSavedChronologicalSectionOrder
__ BulletinBoard: _BBSavedSectionInfo
__ CoreFoundation: _CFBooleanGetTypeID
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterRemoveEveryObserver
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCache
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__
__ CoreGraphics: _CGAffineTransformEqualToTransform
__ CoreGraphics: _CGAffineTransformIdentity
__ CoreGraphics: _CGAffineTransformMakeScale
__ CoreGraphics: _CGAffineTransformMakeTranslation
__ CoreGraphics: _CGAffineTransformRotate
__ CoreGraphics: _CGAffineTransformTranslate
__ CoreGraphics: _CGContextAddPath
__ CoreGraphics: _CGContextFillPath
__ CoreGraphics: _CGImageCreateWithImageInRect
__ CoreGraphics: _CGImageGetHeight
__ CoreGraphics: _CGImageGetTypeID
__ CoreGraphics: _CGImageGetWidth
__ CoreGraphics: _CGImageRelease
__ CoreGraphics: _CGPathAddLineToPoint
__ CoreGraphics: _CGPathCreateMutable
__ CoreGraphics: _CGPathCreateWithEllipseInRect
__ CoreGraphics: _CGPathMoveToPoint
__ CoreGraphics: _CGPathRelease
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectContainsPoint
__ CoreGraphics: _CGRectContainsRect
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetMidY
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectIntersection
__ CoreGraphics: _CGRectIntersectsRect
__ CoreGraphics: _CGRectIsEmpty
__ CoreGraphics: _CGRectIsNull
__ CoreGraphics: _CGRectOffset
__ CoreGraphics: _CGRectUnion
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ CoreServices: _LSInternalApplicationType
__ CoreServices: _LSSystemApplicationType
__ CoreServices: _LSUserApplicationType
__ CoreServices: _OBJC_CLASS_$_LSApplicationProxy
__ CoreServices: _OBJC_CLASS_$_LSApplicationWorkspace
__ CoreServices: _OBJC_CLASS_$_LSBundleProxy
__ CoreServices: _OBJC_CLASS_$_LSPlugInKitProxy
__ Foundation: _NSExtensionPointName
__ Foundation: _NSFileProtectionKey
__ Foundation: _NSFileProtectionNone
__ Foundation: _NSHomeDirectory
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSStringFromBOOL
__ Foundation: _NSStringFromClass
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSDistributedNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSExtension
__ Foundation: _OBJC_CLASS_$_NSExtensionContext
__ Foundation: _OBJC_CLASS_$_NSExtensionItem
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSIndexPath
__ Foundation: _OBJC_CLASS_$_NSIndexSet
__ Foundation: _OBJC_CLASS_$_NSLayoutConstraint
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableAttributedString
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPointerArray
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_CLASS_$_NSXPCListener
__ FrontBoardServices: _FBSOpenApplicationOptionKeyLaunchOrigin
__ FrontBoardServices: _FBSOpenApplicationOptionKeyPromptUnlockDevice
__ FrontBoardServices: _FBSOpenApplicationOptionKeyUnlockDevice
__ FrontBoardServices: _OBJC_CLASS_$_FBSOpenApplicationOptions
__ FrontBoardServices: _OBJC_CLASS_$_FBSOpenApplicationService
__ IconServices: _OBJC_CLASS_$_ISIcon
__ IconServices: _OBJC_CLASS_$_ISImage
__ IconServices: _OBJC_CLASS_$_ISImageDescriptor
__ IconServices: _kISImageDescriptorNotification
__ LockoutUI: _OBJC_CLASS_$_LOViewController
__ MaterialKit: _OBJC_CLASS_$_MTMaterialView
__ MobileKeyBag: _MKBDeviceUnlockedSinceBoot
__ MobileKeyBag: _MKBEventsRegister
__ MobileKeyBag: _MKBEventsUnregister
__ MobileKeyBag: _MKBGetDeviceLockState
__ NCLaunchStats: _OBJC_CLASS_$_NCLaunchStats
__ NotificationCenter: _NCAppLaunchOriginWidget
__ NotificationCenter: _NCExtensionItemUserInfoContainerIdentifierKey
__ NotificationCenter: _NCExtensionItemUserInfoDefaultMarginsKey
__ NotificationCenter: _NCExtensionItemUserInfoInitialActiveDisplayModeKey
__ NotificationCenter: _NCExtensionItemUserInfoInitialBoundsKey
__ NotificationCenter: _NCExtensionItemUserInfoInitialLayoutMarginsKey
__ NotificationCenter: _NCExtensionItemUserInfoInitialMaxCompactSizeKey
__ NotificationCenter: _NCExtensionItemUserInfoInitialMaxExpandedSizeKey
__ NotificationCenter: _NCExtensionItemUserInfoInitialVisibilityStateKey
__ NotificationCenter: _NCExtensionItemUserInfoSnapshotTimestampsEnabledKey
__ NotificationCenter: _NCExtensionItemUserInfoWidgetIdentifierKey
__ NotificationCenter: _NCStringFromWidgetDisplayMode
__ NotificationCenter: _NCWidgetControllerConnectionName
__ NotificationCenter: _NCWidgetControllerHasContentEntitlement
__ NotificationCenter: _NCWidgetControllerRequestRefreshEntitlement
__ NotificationCenter: _OBJC_CLASS_$_NCWidgetMetrics
__ NotificationCenter: _kNCDefaultWidgetLayoutMargins
__ PlatterKit: _OBJC_CLASS_$_PLPlatterHeaderContentView
__ PlatterKit: _OBJC_METACLASS_$_PLPlatterHeaderContentView
__ ProactiveEventTracker: _OBJC_CLASS_$_PETDistributionEventTracker
__ ProactiveEventTracker: _OBJC_CLASS_$_PETEventProperty
__ ProactiveEventTracker: _OBJC_CLASS_$_PETScalarEventTracker
__ QuartzCore: _OBJC_CLASS_$_CALayer
__ QuartzCore: _OBJC_CLASS_$_CAMediaTimingFunction
__ QuartzCore: _OBJC_CLASS_$_CAShapeLayer
__ QuartzCore: _OBJC_CLASS_$_CASpringAnimation
__ QuartzCore: _kCALayerSecurityModeUnrestricted
__ QuartzCore: _kCAMediaTimingFunctionEaseOut
__ Stocks: _StocksAttributionString
__ UIKit: _NSFontAttributeName
__ UIKit: _NSForegroundColorAttributeName
__ UIKit: _NSParagraphStyleAttributeName
__ UIKit: _NSStringFromCGRect
__ UIKit: _NSStringFromCGSize
__ UIKit: _NSStringFromUIEdgeInsets
__ UIKit: _NSUnderlineColorAttributeName
__ UIKit: _NSUnderlineStyleAttributeName
__ UIKit: _OBJC_CLASS_$_NSMutableParagraphStyle
__ UIKit: _OBJC_CLASS_$_NSParagraphStyle
__ UIKit: _OBJC_CLASS_$_NSTextAttachment
__ UIKit: _OBJC_CLASS_$_UIBarButtonItem
__ UIKit: _OBJC_CLASS_$_UIBezierPath
__ UIKit: _OBJC_CLASS_$_UIButton
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIControl
__ UIKit: _OBJC_CLASS_$_UIDevice
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIFontDescriptor
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageSymbolConfiguration
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UILabel
__ UIKit: _OBJC_CLASS_$_UINavigationController
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UIScrollView
__ UIKit: _OBJC_CLASS_$_UIStackView
__ UIKit: _OBJC_CLASS_$_UISwitch
__ UIKit: _OBJC_CLASS_$_UITableViewCell
__ UIKit: _OBJC_CLASS_$_UITableViewController
__ UIKit: _OBJC_CLASS_$_UITableViewHeaderFooterView
__ UIKit: _OBJC_CLASS_$_UITapGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UITextView
__ UIKit: _OBJC_CLASS_$_UITraitCollection
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_CLASS_$_UIViewFloatAnimatableProperty
__ UIKit: _OBJC_CLASS_$__UICAPackageView
__ UIKit: _OBJC_CLASS_$__UIRemoteViewController
__ UIKit: _OBJC_CLASS_$__UIViewControllerTransitionContext
__ UIKit: _OBJC_METACLASS_$_UIButton
__ UIKit: _OBJC_METACLASS_$_UIControl
__ UIKit: _OBJC_METACLASS_$_UIScrollView
__ UIKit: _OBJC_METACLASS_$_UITableViewCell
__ UIKit: _OBJC_METACLASS_$_UITableViewHeaderFooterView
__ UIKit: _OBJC_METACLASS_$_UITextView
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _OBJC_METACLASS_$__UICAPackageView
__ UIKit: _OBJC_METACLASS_$__UIRemoteViewController
__ UIKit: _UIApp
__ UIKit: _UIApplicationSignificantTimeChangeNotification
__ UIKit: _UIContentSizeCategoryDidChangeNotification
__ UIKit: _UIEdgeInsetsZero
__ UIKit: _UIFontTextStyleBody
__ UIKit: _UIFontTextStyleCaption1
__ UIKit: _UIFontTextStyleCaption2
__ UIKit: _UIFontTextStyleHeadline
__ UIKit: _UIFontTextStyleSubheadline
__ UIKit: _UIFontTextStyleTitle1
__ UIKit: _UIFontWeightBold
__ UIKit: _UIGraphicsBeginImageContextWithOptions
__ UIKit: _UIGraphicsEndImageContext
__ UIKit: _UIGraphicsGetCurrentContext
__ UIKit: _UIGraphicsGetImageFromCurrentImageContext
__ UIKit: _UIRectCenteredIntegralRectScale
__ UIKit: _UIRectCenteredXInRectScale
__ UIKit: _UIRectCenteredYInRectScale
__ UIKit: _UIRectInset
__ UIKit: _UIRectIntegralWithScale
__ UIKit: _UIRoundToScreenScale
__ UIKit: _UISizeRoundToScale
__ UIKit: _UITableViewAutomaticDimension
__ UIKit: _UIViewNoIntrinsicMetric
__ UIKit: __UIContentSizeCategoryIsAccessibilityContentSizeCategory
__ Weather: _WAAttributionString
__ libMobileGestalt.dylib: _MGCancelNotifications
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGCopyMultipleAnswers
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _MGIsQuestionValid
__ libMobileGestalt.dylib: _MGRegisterForUpdates
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_queue_get_specific
__ libSystem.B.dylib: _dispatch_queue_set_specific
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_suspend
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _mkdir
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _pow
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_removeAssociatedObjects
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
WGWidgetPinningTeachingAnimationView : BSUICAPackageView /System/Library/PrivateFrameworks/BulletinBoard.framework/BulletinBoard
 @property  unsigned long state
 @property  CALayer *materialsLayer
 @property  CALayer *pagesLayer
 @property  CALayer *page1Layer
 @property  NSTimer *timerToNextState
 @property  UILabel *debugLabel

  // instance methods
  -[WGWidgetPinningTeachingAnimationView init]
  -[WGWidgetPinningTeachingAnimationView .cxx_destruct]
  -[WGWidgetPinningTeachingAnimationView state]
  -[WGWidgetPinningTeachingAnimationView setDebugLabel:]
  -[WGWidgetPinningTeachingAnimationView _setState:]
  -[WGWidgetPinningTeachingAnimationView _dynamicUserInterfaceTraitDidChange]
  -[WGWidgetPinningTeachingAnimationView startAnimating]
  -[WGWidgetPinningTeachingAnimationView stopAnimating]
  -[WGWidgetPinningTeachingAnimationView debugLabel]
  -[WGWidgetPinningTeachingAnimationView _durationForState:]
  -[WGWidgetPinningTeachingAnimationView _stateFollowingState:]
  -[WGWidgetPinningTeachingAnimationView _setTimerToNextState:]
  -[WGWidgetPinningTeachingAnimationView _updateMaterials]
  -[WGWidgetPinningTeachingAnimationView materialsLayer]
  -[WGWidgetPinningTeachingAnimationView setMaterialsLayer:]
  -[WGWidgetPinningTeachingAnimationView pagesLayer]
  -[WGWidgetPinningTeachingAnimationView setPagesLayer:]
  -[WGWidgetPinningTeachingAnimationView page1Layer]
  -[WGWidgetPinningTeachingAnimationView setPage1Layer:]
  -[WGWidgetPinningTeachingAnimationView timerToNextState]


WGWidgetListHeaderView : UIView /System/Library/PrivateFrameworks/Weather.framework/Weather
 @property  UIView *contentView

  // instance methods
  -[WGWidgetListHeaderView .cxx_destruct]
  -[WGWidgetListHeaderView contentView]
  -[WGWidgetListHeaderView initWithContentView:]
  -[WGWidgetListHeaderView setContentView:]


WGWidgetVisibilityManager : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableDictionary *mobileGestaltAnswerByWidgetTag
 @property  <WGWidgetVisibilityDelegate> *delegate

  // instance methods
  -[WGWidgetVisibilityManager init]
  -[WGWidgetVisibilityManager dealloc]
  -[WGWidgetVisibilityManager delegate]
  -[WGWidgetVisibilityManager setDelegate:]
  -[WGWidgetVisibilityManager .cxx_destruct]
  -[WGWidgetVisibilityManager _registerForVisiblityPreferenceChanges]
  -[WGWidgetVisibilityManager _unregisterForVisiblityPreferenceChanges]
  -[WGWidgetVisibilityManager _updateWidgetTagsAndVisibilityForExtensions:]
  -[WGWidgetVisibilityManager _updateMobileGestaltQuestions]
  -[WGWidgetVisibilityManager _updateWidgetTagsAndIconVisibilityForExtension:]
  -[WGWidgetVisibilityManager _widgetTagsForWidgetExtensionInfoDictionary:]
  -[WGWidgetVisibilityManager _updateWidgetVisibilityPreference:]
  -[WGWidgetVisibilityManager _allWidgetTags]
  -[WGWidgetVisibilityManager _mobileGestaltAnswerByWidgetTag]
  -[WGWidgetVisibilityManager _widgetVisibilityChanged]
  -[WGWidgetVisibilityManager _updateWidgetVisibilityPreferences]
  -[WGWidgetVisibilityManager isWidgetWithIdentifierVisible:]
  -[WGWidgetVisibilityManager updateVisibilityForExtensions:]
  -[WGWidgetVisibilityManager _widgetVisibilityPreferencesChanged]
  -[WGWidgetVisibilityManager setMobileGestaltAnswerByWidgetTag:]


WGWidgetViewController : UIViewController /System/Library/PrivateFrameworks/Weather.framework/Weather <WGWidgetHostingViewControllerDelegate, WGWidgetHostingViewControllerHost, WGWidgetExtensionVisibilityProviding>
 @property  WGWidgetHostingViewController *widgetHost
 @property  <WGWidgetViewControllerDelegate> *delegate
 @property  UITraitCollection *requestedTraitCollectionOverride
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WGWidgetViewController delegate]
  -[WGWidgetViewController setDelegate:]
  -[WGWidgetViewController .cxx_destruct]
  -[WGWidgetViewController loadView]
  -[WGWidgetViewController preferredContentSizeDidChangeForChildContentContainer:]
  -[WGWidgetViewController viewDidAppear:]
  -[WGWidgetViewController viewDidDisappear:]
  -[WGWidgetViewController sizeForChildContentContainer:withParentContainerSize:]
  -[WGWidgetViewController viewDidMoveToWindow:shouldAppearOrDisappear:]
  -[WGWidgetViewController widgetHost]
  -[WGWidgetViewController setWidgetHost:]
  -[WGWidgetViewController requestedTraitCollectionOverride]
  -[WGWidgetViewController _addWidgetButtonTapped:]
  -[WGWidgetViewController _platterViewIfLoaded]
  -[WGWidgetViewController maxSizeForWidget:forDisplayMode:]
  -[WGWidgetViewController _platterViewLoadingIfNecessary:]
  -[WGWidgetViewController registerWidgetForRefreshEvents:]
  -[WGWidgetViewController unregisterWidgetForRefreshEvents:]
  -[WGWidgetViewController remoteViewControllerDidConnectForWidget:]
  -[WGWidgetViewController remoteViewControllerViewDidAppearForWidget:]
  -[WGWidgetViewController userSpecifiedDisplayModeForWidget:]
  -[WGWidgetViewController largestAvailableDisplayModeForWidget:]
  -[WGWidgetViewController widget:didRemoveSnapshotAtURL:]
  -[WGWidgetViewController isWidgetExtensionVisible:]
  -[WGWidgetViewController initWithWidgetInfo:]


_WGConcreteDataSource : NSObject /usr/lib/libSystem.B.dylib
 @property  NSArray *dataIdentifiers
 @property  NSArray *data

  // instance methods
  -[_WGConcreteDataSource init]
  -[_WGConcreteDataSource .cxx_destruct]
  -[_WGConcreteDataSource data]
  -[_WGConcreteDataSource addObserver:completion:]
  -[_WGConcreteDataSource removeObserver:completion:]
  -[_WGConcreteDataSource dataSource:replaceWithDatum:observerUpdateBlock:]
  -[_WGConcreteDataSource dataSource:removeDatumWithIdentifier:observerUpdateBlock:]
  -[_WGConcreteDataSource dataIdentifiers]
  -[_WGConcreteDataSource datumWithIdentifier:]


WGWidgetListEditViewTableHeaderView : UITableViewHeaderFooterView /System/Library/PrivateFrameworks/Weather.framework/Weather
 @property  double contentMinY

  // instance methods
  -[WGWidgetListEditViewTableHeaderView .cxx_destruct]
  -[WGWidgetListEditViewTableHeaderView sizeThatFits:]
  -[WGWidgetListEditViewTableHeaderView layoutSubviews]
  -[WGWidgetListEditViewTableHeaderView initWithReuseIdentifier:]
  -[WGWidgetListEditViewTableHeaderView initWithReuseIdentifier:forTodayView:]
  -[WGWidgetListEditViewTableHeaderView _headlineLabelFrameForBoundsWidth:]
  -[WGWidgetListEditViewTableHeaderView _explanationLabelFrameForBoundsWidth:withHeadlineLabelFrame:]
  -[WGWidgetListEditViewTableHeaderView contentMinY]


WGMappedImageCache : BSUIMappedImageCache /System/Library/PrivateFrameworks/BulletinBoard.framework/BulletinBoard
  // class methods
  +[WGMappedImageCache sharedCache]


WGWidgetDataSourceManager : NSObject /usr/lib/libSystem.B.dylib <WGWidgetVisibilityDelegate, _WGDataSourceManager>
 @property  id plugInDiscoveryToken
 @property  WGWidgetVisibilityManager *widgetVisbilityManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <_WGParentDataSourceManager> *parentDataSourceManager
 @property  NSArray *dataSources

  // class methods
  +[WGWidgetDataSourceManager _widgetExtensionsDiscoveryAttributes]
  +[WGWidgetDataSourceManager discoverAvailableWidgetsWithError:]

  // instance methods
  -[WGWidgetDataSourceManager init]
  -[WGWidgetDataSourceManager .cxx_destruct]
  -[WGWidgetDataSourceManager dataSources]
  -[WGWidgetDataSourceManager widgetVisibilityDidChange]
  -[WGWidgetDataSourceManager _beginContinuousPlugInDiscovery]
  -[WGWidgetDataSourceManager _endContinuousPlugInDiscovery]
  -[WGWidgetDataSourceManager _updatePublishedWidgetExtensions]
  -[WGWidgetDataSourceManager _shouldPublishWidgetExtension:]
  -[WGWidgetDataSourceManager _updateDataSourceWithExtension:]
  -[WGWidgetDataSourceManager _revokeExtensionWithIdentifier:]
  -[WGWidgetDataSourceManager _updatePublishedWidgetExtensions:]
  -[WGWidgetDataSourceManager _widgetVisbilityManager]
  -[WGWidgetDataSourceManager _setPlugInDiscoveryToken:]
  -[WGWidgetDataSourceManager _start:]
  -[WGWidgetDataSourceManager _stop:]
  -[WGWidgetDataSourceManager parentDataSourceManager]
  -[WGWidgetDataSourceManager setParentDataSourceManager:]
  -[WGWidgetDataSourceManager _plugInDiscoveryToken]
  -[WGWidgetDataSourceManager setWidgetVisbilityManager:]


WGCheckView : UIView /System/Library/PrivateFrameworks/Weather.framework/Weather
 @property  BOOL checked

  // class methods
  +[WGCheckView layerClass]

  // instance methods
  -[WGCheckView initWithFrame:]
  -[WGCheckView layoutSubviews]
  -[WGCheckView _shouldAnimatePropertyWithKey:]
  -[WGCheckView _shapeLayer]
  -[WGCheckView setChecked:]
  -[WGCheckView isChecked]
  -[WGCheckView _newPathForBounds:]
  -[WGCheckView _invalidatePath]


WGWidgetPinningTeachingView : UIView /System/Library/PrivateFrameworks/Weather.framework/Weather
 @property  UILabel *titleLabel
 @property  UILabel *bodyLabel
 @property  UIButton *yesButton
 @property  UIButton *noButton
 @property  WGWidgetPinningTeachingAnimationView *iconImageView
 @property  NSLayoutConstraint *titleLabelTopConstraint
 @property  NSLayoutConstraint *titleLabelToBodyLabelConstraint
 @property  UIView *contentView
 @property  <WGWidgetPinningTeachingViewDelegate> *delegate

  // instance methods
  -[WGWidgetPinningTeachingView init]
  -[WGWidgetPinningTeachingView delegate]
  -[WGWidgetPinningTeachingView setDelegate:]
  -[WGWidgetPinningTeachingView .cxx_destruct]
  -[WGWidgetPinningTeachingView contentView]
  -[WGWidgetPinningTeachingView setContentView:]
  -[WGWidgetPinningTeachingView titleLabel]
  -[WGWidgetPinningTeachingView setTitleLabel:]
  -[WGWidgetPinningTeachingView _dynamicUserInterfaceTraitDidChange]
  -[WGWidgetPinningTeachingView startAnimating]
  -[WGWidgetPinningTeachingView stopAnimating]
  -[WGWidgetPinningTeachingView _createConstraints]
  -[WGWidgetPinningTeachingView _updateAppearance]
  -[WGWidgetPinningTeachingView bodyLabel]
  -[WGWidgetPinningTeachingView setBodyLabel:]
  -[WGWidgetPinningTeachingView iconImageView]
  -[WGWidgetPinningTeachingView setIconImageView:]
  -[WGWidgetPinningTeachingView _updateFonts]
  -[WGWidgetPinningTeachingView _contentSizeCategoryDidChange]
  -[WGWidgetPinningTeachingView titleLabelTopConstraint]
  -[WGWidgetPinningTeachingView setTitleLabelTopConstraint:]
  -[WGWidgetPinningTeachingView yesButton]
  -[WGWidgetPinningTeachingView noButton]
  -[WGWidgetPinningTeachingView setYesButton:]
  -[WGWidgetPinningTeachingView setNoButton:]
  -[WGWidgetPinningTeachingView _createContainerViews]
  -[WGWidgetPinningTeachingView _createContentViews]
  -[WGWidgetPinningTeachingView _setupButtonsTargets]
  -[WGWidgetPinningTeachingView _updateFontDependantConstraints]
  -[WGWidgetPinningTeachingView _yesButtonTapped]
  -[WGWidgetPinningTeachingView _noButtonTapped]
  -[WGWidgetPinningTeachingView titleLabelToBodyLabelConstraint]
  -[WGWidgetPinningTeachingView setTitleLabelToBodyLabelConstraint:]


WGCalendarWidgetInfo : WGWidgetInfo
 @property  NSDate *date

  // class methods
  +[WGCalendarWidgetInfo isCalendarExtension:]

  // instance methods
  -[WGCalendarWidgetInfo .cxx_destruct]
  -[WGCalendarWidgetInfo date]
  -[WGCalendarWidgetInfo initWithExtension:]
  -[WGCalendarWidgetInfo _setDate:]
  -[WGCalendarWidgetInfo _handleSignificantTimeChange:]
  -[WGCalendarWidgetInfo _queue_iconWithSize:scale:forWidgetWithIdentifier:extension:]
  -[WGCalendarWidgetInfo _queue_iconWithOutlineForWidgetWithIdentifier:extension:]
  -[WGCalendarWidgetInfo _resetIconsImpl]


WGExplanatoryView : UIView /System/Library/PrivateFrameworks/Weather.framework/Weather
  // instance methods
  -[WGExplanatoryView .cxx_destruct]
  -[WGExplanatoryView addTarget:action:]
  -[WGExplanatoryView layoutSubviews]
  -[WGExplanatoryView willMoveToSuperview:]
  -[WGExplanatoryView _updateVisualStylingIfNecessary]
  -[WGExplanatoryView _invalidateVisualStyling]
  -[WGExplanatoryView _configureGlyphViewWithGlyph:]
  -[WGExplanatoryView _configureExplanationLabelWithExplanation:]
  -[WGExplanatoryView initWithGlyph:andExplanation:]


WGWidgetListEditViewController : UIViewController /System/Library/PrivateFrameworks/Weather.framework/Weather <UITableViewDelegate, UITableViewDataSource>
 @property  BOOL dismissingDueToInterfaceAction
 @property  id statusBarColorAssertion
 @property  BOOL showsPinSection
 @property  BOOL showsFavorites
 @property  BOOL widgetsPinnedOriginally
 @property  BOOL widgetsPinned
 @property  <WGWidgetListEditViewControllerDataSource> *dataSource
 @property  <WGWidgetListEditViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WGWidgetListEditViewController delegate]
  -[WGWidgetListEditViewController setDelegate:]
  -[WGWidgetListEditViewController .cxx_destruct]
  -[WGWidgetListEditViewController dataSource]
  -[WGWidgetListEditViewController setDataSource:]
  -[WGWidgetListEditViewController traitCollectionDidChange:]
  -[WGWidgetListEditViewController initWithNibName:bundle:]
  -[WGWidgetListEditViewController scrollViewDidScroll:]
  -[WGWidgetListEditViewController viewWillAppear:]
  -[WGWidgetListEditViewController viewWillDisappear:]
  -[WGWidgetListEditViewController viewDidLoad]
  -[WGWidgetListEditViewController viewWillLayoutSubviews]
  -[WGWidgetListEditViewController viewDidAppear:]
  -[WGWidgetListEditViewController viewDidDisappear:]
  -[WGWidgetListEditViewController tableView:numberOfRowsInSection:]
  -[WGWidgetListEditViewController tableView:cellForRowAtIndexPath:]
  -[WGWidgetListEditViewController numberOfSectionsInTableView:]
  -[WGWidgetListEditViewController tableView:titleForHeaderInSection:]
  -[WGWidgetListEditViewController tableView:titleForFooterInSection:]
  -[WGWidgetListEditViewController tableView:canEditRowAtIndexPath:]
  -[WGWidgetListEditViewController tableView:canMoveRowAtIndexPath:]
  -[WGWidgetListEditViewController tableView:commitEditingStyle:forRowAtIndexPath:]
  -[WGWidgetListEditViewController tableView:moveRowAtIndexPath:toIndexPath:]
  -[WGWidgetListEditViewController tableView:viewForHeaderInSection:]
  -[WGWidgetListEditViewController tableView:editingStyleForRowAtIndexPath:]
  -[WGWidgetListEditViewController tableView:titleForDeleteConfirmationButtonForRowAtIndexPath:]
  -[WGWidgetListEditViewController tableView:shouldIndentWhileEditingRowAtIndexPath:]
  -[WGWidgetListEditViewController tableView:targetIndexPathForMoveFromRowAtIndexPath:toProposedIndexPath:]
  -[WGWidgetListEditViewController _loadItems]
  -[WGWidgetListEditViewController _layoutMode]
  -[WGWidgetListEditViewController _cancelWidgetListEditView]
  -[WGWidgetListEditViewController _dismissWidgetListEditView]
  -[WGWidgetListEditViewController _acknowledgeItemsSavingItemState:]
  -[WGWidgetListEditViewController showsFavorites]
  -[WGWidgetListEditViewController areWidgetsPinned]
  -[WGWidgetListEditViewController showsPinSection]
  -[WGWidgetListEditViewController showsFavoritesSection]
  -[WGWidgetListEditViewController todaySection]
  -[WGWidgetListEditViewController favoritesSection]
  -[WGWidgetListEditViewController disabledWidgetsSection]
  -[WGWidgetListEditViewController pinSection]
  -[WGWidgetListEditViewController pinSwitchChanaged:]
  -[WGWidgetListEditViewController _itemIdentifierForIndexPath:]
  -[WGWidgetListEditViewController _indexPathForItemWithIdentifier:]
  -[WGWidgetListEditViewController _isNewItem:]
  -[WGWidgetListEditViewController _indexForInsertingItemWithIdentifier:intoArray:]
  -[WGWidgetListEditViewController _indexOfFirstEnabledWidgetInSection:]
  -[WGWidgetListEditViewController _indexOfLastEnabledWidgetInSection:]
  -[WGWidgetListEditViewController _itemIdentifiersInSection:]
  -[WGWidgetListEditViewController _enableItemAtIndexPath:inTableView:]
  -[WGWidgetListEditViewController _disableItemAtIndexPath:inTableView:]
  -[WGWidgetListEditViewController _widgetListEditViewTableHeaderView]
  -[WGWidgetListEditViewController _saveItemState]
  -[WGWidgetListEditViewController _saveItemArrangement]
  -[WGWidgetListEditViewController _acknowledgeItemsAndResetNewWidgetsCount]
  -[WGWidgetListEditViewController _setDismissingDueToInterfaceAction:]
  -[WGWidgetListEditViewController _dismissDueToInterfaceActionAndAcknowledgeItemsSavingItemState:]
  -[WGWidgetListEditViewController _enabledItemIdentifiersForGroupID:]
  -[WGWidgetListEditViewController _compareItemWithIdentifier:andItemWithIdentifierConsideringIsNew:]
  -[WGWidgetListEditViewController wereWidgetsPinnedOriginally]
  -[WGWidgetListEditViewController _sectionIndexForGroupKey:]
  -[WGWidgetListEditViewController setWidgetsPinned:]
  -[WGWidgetListEditViewController _groupKeyForSectionAtIndex:]
  -[WGWidgetListEditViewController _isDismissingDueToInterfaceAction]
  -[WGWidgetListEditViewController _statusBarColorAssertion]
  -[WGWidgetListEditViewController _setStatusBarColorAssertion:]
  -[WGWidgetListEditViewController setShowsPinSection:]
  -[WGWidgetListEditViewController setShowsFavorites:]
  -[WGWidgetListEditViewController setWidgetsPinnedOriginally:]


WGWidgetWrapperView : UIView /System/Library/PrivateFrameworks/Weather.framework/Weather
 @property  UIView *contentView
 @property  WGWidgetPlatterView *platterView
 @property  double overrideIntrinsicContentHeight
 @property  double topMarginForLayout

  // instance methods
  -[WGWidgetWrapperView .cxx_destruct]
  -[WGWidgetWrapperView contentView]
  -[WGWidgetWrapperView intrinsicContentSize]
  -[WGWidgetWrapperView layoutSubviews]
  -[WGWidgetWrapperView setPlatterView:]
  -[WGWidgetWrapperView platterView]
  -[WGWidgetWrapperView setTopMarginForLayout:]
  -[WGWidgetWrapperView initWithPlatterView:]
  -[WGWidgetWrapperView setOverrideIntrinsicContentHeight:]
  -[WGWidgetWrapperView overrideIntrinsicContentHeight]
  -[WGWidgetWrapperView topMarginForLayout]


WGWidgetDiscoveryController : NSObject /usr/lib/libSystem.B.dylib <WGWidgetViewControllerDelegate, WGWidgetDataSourceObserver, WGWidgetListEditViewControllerDataSource, WGWidgetListEditViewControllerDelegate, LSApplicationWorkspaceObserverProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSMutableDictionary *widgetIDsToWidgets
 @property  <WGWidgetDebugging> *debuggingHandler
 @property  WGWidgetListEditViewController *presentedEditViewController
 @property  id presentedEditViewControllerStatusBarAssertion
 @property  NSMutableDictionary *widgetIDsToPendingTestCompletions
 @property  NSMutableDictionary *widgetIDsToPendingTestTearDowns
 @property  <WGWidgetDiscoveryControllerDelegate> *delegate
 @property  BOOL bootstrapFavoriteWidgets
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WGWidgetDiscoveryController widgetViewControllerWithWidgetBundleID:containingBundleID:error:]
  +[WGWidgetDiscoveryController layoutModeForSize:]

  // instance methods
  -[WGWidgetDiscoveryController init]
  -[WGWidgetDiscoveryController delegate]
  -[WGWidgetDiscoveryController setDelegate:]
  -[WGWidgetDiscoveryController .cxx_destruct]
  -[WGWidgetDiscoveryController deviceManagementPolicyDidChange:]
  -[WGWidgetDiscoveryController beginDiscovery]
  -[WGWidgetDiscoveryController remoteViewControllerDidConnectForWidgetViewController:]
  -[WGWidgetDiscoveryController remoteViewControllerViewDidAppearForWidgetViewController:]
  -[WGWidgetDiscoveryController widgetViewControllerNeedsToBeUnregisteredForRefreshNotification:]
  -[WGWidgetDiscoveryController widgetViewControllerNeedsToBeRegisteredForRefreshNotification:]
  -[WGWidgetDiscoveryController userSpecifiedDisplayModeForWidget:]
  -[WGWidgetDiscoveryController widget:didChangeUserSpecifiedDisplayMode:]
  -[WGWidgetDiscoveryController largestAvailableDisplayModeForWidget:]
  -[WGWidgetDiscoveryController widget:didChangeLargestAvailableDisplayMode:]
  -[WGWidgetDiscoveryController widget:didEncounterProblematicSnapshotAtURL:]
  -[WGWidgetDiscoveryController widget:didRemoveSnapshotAtURL:]
  -[WGWidgetDiscoveryController shouldPurgeArchivedSnapshotsForWidget:]
  -[WGWidgetDiscoveryController shouldPurgeNonCAMLSnapshotsForWidget:]
  -[WGWidgetDiscoveryController shouldPurgeNonASTCSnapshotsForWidget:]
  -[WGWidgetDiscoveryController shouldRemoveSnapshotWhenNotVisibleForWidget:]
  -[WGWidgetDiscoveryController groupsForWidgetListEditViewController:]
  -[WGWidgetDiscoveryController widgetListEditViewControllerShouldShowFavorites:]
  -[WGWidgetDiscoveryController shouldShowWidgetsPinButtonForWidgetListEditViewController:]
  -[WGWidgetDiscoveryController areWidgetsPinnedForWidgetListEditViewController:]
  -[WGWidgetDiscoveryController layoutModeForWidgetListEditViewController:]
  -[WGWidgetDiscoveryController widgetEditListViewController:traitCollectionDidChange:]
  -[WGWidgetDiscoveryController areWidgetsPinned]
  -[WGWidgetDiscoveryController widgetListEditViewController:displayNameForItemWithIdentifier:]
  -[WGWidgetDiscoveryController widgetListEditViewController:requestsIconForItemWithIdentifier:withHandler:]
  -[WGWidgetDiscoveryController dismissWidgetListEditViewControllerAnimated:completion:]
  -[WGWidgetDiscoveryController dismissWidgetListEditViewController:animated:withCompletion:]
  -[WGWidgetDiscoveryController widgetListEditViewController:itemIdentifiersForGroup:]
  -[WGWidgetDiscoveryController disabledInterfaceItemIdentifiersForWidgetListEditViewController:]
  -[WGWidgetDiscoveryController widgetListEditViewControllerShouldIncludeInternalWidgets:]
  -[WGWidgetDiscoveryController widgetListEditViewController:isItemWithIdentifierFavorited:]
  -[WGWidgetDiscoveryController widgetListEditViewController:isItemWithIdentifierEnabled:]
  -[WGWidgetDiscoveryController widgetListEditViewController:didReorderItemsWithIdentifiersInGroups:]
  -[WGWidgetDiscoveryController widgetListEditViewController:acknowledgeInterfaceItemsWithIdentifiers:]
  -[WGWidgetDiscoveryController widgetListEditViewController:setEnabled:forItemsWithIdentifiers:]
  -[WGWidgetDiscoveryController widgetListEditViewController:updateFavoritesToIdentifiers:]
  -[WGWidgetDiscoveryController widgetListEditViewController:didChangeWidgetsPinning:]
  -[WGWidgetDiscoveryController widgetListEditViewController:defaultGroupForItemWithIdentifier:]
  -[WGWidgetDiscoveryController widgetListEditViewController:isItemWithIdentifierNew:]
  -[WGWidgetDiscoveryController _widgetViewControllerRequestsAdd:]
  -[WGWidgetDiscoveryController _widgetViewControllerDidRemoveSnapshot:]
  -[WGWidgetDiscoveryController _widgetListEditViewControllerWillDisappear:]
  -[WGWidgetDiscoveryController _applicationIconChanged:]
  -[WGWidgetDiscoveryController _orderedVisibleIdentifiersForTodayGroup]
  -[WGWidgetDiscoveryController _orderedVisibleIdentifiersForWidgetGroup]
  -[WGWidgetDiscoveryController setWidgetSnapshotTimestampsEnabled:]
  -[WGWidgetDiscoveryController _isApplicationLockedOutWithProxy:]
  -[WGWidgetDiscoveryController _updateLockedOutStateForWidget:withContainingAppProxy:]
  -[WGWidgetDiscoveryController _updateLockedOutStateForWidget:]
  -[WGWidgetDiscoveryController _newWidgetWithIdentifier:delegate:]
  -[WGWidgetDiscoveryController _orderedEnabledIdentifiersForGroup:]
  -[WGWidgetDiscoveryController _invalidateVisibleIdentifiersForGroup:]
  -[WGWidgetDiscoveryController _notifyObserversOfSignificantWidgetsChange]
  -[WGWidgetDiscoveryController _isElementWithIdentifierEnabled:]
  -[WGWidgetDiscoveryController _orderedVisibleIdentifiersForGroup:]
  -[WGWidgetDiscoveryController _orderedEnabledWidgetIdentifiersForGroup:includingNoContent:]
  -[WGWidgetDiscoveryController _disabledIdentifiers]
  -[WGWidgetDiscoveryController _updatePublicationStateOfDatumWithIdentifier:visibilityChanged:contentStateChanged:insertAtTop:notifyingObservers:]
  -[WGWidgetDiscoveryController largestAvailableDisplayModeForWidgetWithIdentifier:]
  -[WGWidgetDiscoveryController setLargestAvailableDisplayMode:forWidgetWithIdentifier:]
  -[WGWidgetDiscoveryController _setEnabled:forElementWithIdentifier:]
  -[WGWidgetDiscoveryController _defaultGroupForWidgetWithIdentifier:]
  -[WGWidgetDiscoveryController _externalSourceRequestsInsertionOfWidgetWithIdentifier:insertAtTop:]
  -[WGWidgetDiscoveryController _widget:withIdentifier:didRemoveSnapshotAtURL:]
  -[WGWidgetDiscoveryController _presentedEditViewControllerStatusBarAssertion]
  -[WGWidgetDiscoveryController _invalidateWidgetListEditViewControllerStatusBarAssertion:]
  -[WGWidgetDiscoveryController _setPresentedEditViewControllerStatusBarAssertion:]
  -[WGWidgetDiscoveryController widgetWithIdentifier:delegate:forRequesterWithIdentifier:]
  -[WGWidgetDiscoveryController _nextSequenceNumber]
  -[WGWidgetDiscoveryController requestRefreshForWidget:afterDate:]
  -[WGWidgetDiscoveryController _dataSourcesDidChange:]
  -[WGWidgetDiscoveryController _beginObservingDataSourcesIfNecessary]
  -[WGWidgetDiscoveryController _isElementWithIdentifierFavorited:]
  -[WGWidgetDiscoveryController _isElementWithIdentifierKnown:]
  -[WGWidgetDiscoveryController _groupForWidgetWithIdentifier:]
  -[WGWidgetDiscoveryController _insertWidgetWithIdentifier:atTop:]
  -[WGWidgetDiscoveryController _removeWidgetWithIdentifier:]
  -[WGWidgetDiscoveryController _notifyObserversOfVisibilityChange:ofWidgetWithIdentifier:inGroup:]
  -[WGWidgetDiscoveryController _calculateAndPostNewWidgetsCount]
  -[WGWidgetDiscoveryController presentWidgetListEditViewControllerFromViewController:animated:completion:]
  -[WGWidgetDiscoveryController _newWidgetListEditViewController]
  -[WGWidgetDiscoveryController _setPresentedEditViewController:]
  -[WGWidgetDiscoveryController _preferredViewControllerForPresentingFromViewController:]
  -[WGWidgetDiscoveryController _newWidgetListEditViewControllerStatusBarAssertion]
  -[WGWidgetDiscoveryController _requestUnlockWithCompletion:]
  -[WGWidgetDiscoveryController _widgetListEditViewControllerStatusBarLegibilityStyle]
  -[WGWidgetDiscoveryController userSpecifiedDisplayModeForWidgetWithIdentifier:]
  -[WGWidgetDiscoveryController setUserSpecifiedDisplayMode:forWidgetWithIdentifier:]
  -[WGWidgetDiscoveryController _updateFavoriteWidgetIDs:]
  -[WGWidgetDiscoveryController _setWidgetsPinned:]
  -[WGWidgetDiscoveryController _addDefaultPinnedWidgets]
  -[WGWidgetDiscoveryController _notifyObserversOfOrderChangeForWidgetIdentifiers:]
  -[WGWidgetDiscoveryController favoriteWidgetIdentifiers]
  -[WGWidgetDiscoveryController _widgetIDsToWidgets]
  -[WGWidgetDiscoveryController bootstrapFavoriteWidgets]
  -[WGWidgetDiscoveryController setBootstrapFavoriteWidgets:]
  -[WGWidgetDiscoveryController widgetDataSource:replaceWithDatum:]
  -[WGWidgetDiscoveryController widgetDataSource:removeDatum:]
  -[WGWidgetDiscoveryController visibleWidgetsCount]
  -[WGWidgetDiscoveryController setWidgetLoggingEnabled:]
  -[WGWidgetDiscoveryController addDiscoveryObserver:]
  -[WGWidgetDiscoveryController removeDiscoveryObserver:]
  -[WGWidgetDiscoveryController invalidateVisibleIdentifiers]
  -[WGWidgetDiscoveryController visibleWidgetIdentifiersForGroup:]
  -[WGWidgetDiscoveryController enabledWidgetIdentifiersForAllGroups]
  -[WGWidgetDiscoveryController disabledWidgetIdentifiers]
  -[WGWidgetDiscoveryController setHasContent:forWidgetWithIdentifier:]
  -[WGWidgetDiscoveryController alwaysShowsFavoriteWidgets]
  -[WGWidgetDiscoveryController handleWidgetLaunchRecommendation:completion:]
  -[WGWidgetDiscoveryController isElementWithIdentifierFavorited:]
  -[WGWidgetDiscoveryController shouldShowWidgetsPinningTeachingView]
  -[WGWidgetDiscoveryController noteWidgetsPinningViewControllerDidDismiss:]
  -[WGWidgetDiscoveryController debugWidgetWithBundleID:options:completion:]
  -[WGWidgetDiscoveryController registerIdentifierForRefreshEvents:]
  -[WGWidgetDiscoveryController unregisterIdentifierForRefreshEvents:]
  -[WGWidgetDiscoveryController debuggingHandler]
  -[WGWidgetDiscoveryController setDebuggingHandler:]
  -[WGWidgetDiscoveryController presentedEditViewController]
  -[WGWidgetDiscoveryController widgetIDsToPendingTestCompletions]
  -[WGWidgetDiscoveryController setWidgetIDsToPendingTestCompletions:]
  -[WGWidgetDiscoveryController widgetIDsToPendingTestTearDowns]
  -[WGWidgetDiscoveryController setWidgetIDsToPendingTestTearDowns:]
  -[WGWidgetDiscoveryController _widgetViewControllerWithBundleID:containingBundleID:didConnect:canTearDown:]


WGWidgetLifeCycleSequence : NSObject /usr/lib/libSystem.B.dylib
 @property  long long currentState
 @property  WGWidgetLifeCycleSequence *previousSequence
 @property  NSString *sequenceIdentifier

  // instance methods
  -[WGWidgetLifeCycleSequence .cxx_destruct]
  -[WGWidgetLifeCycleSequence currentState]
  -[WGWidgetLifeCycleSequence transitionToState:]
  -[WGWidgetLifeCycleSequence isCurrentStateAtLeast:]
  -[WGWidgetLifeCycleSequence initWithSequenceIdentifier:]
  -[WGWidgetLifeCycleSequence _setPreviousSequence:]
  -[WGWidgetLifeCycleSequence sequenceIdentifier]
  -[WGWidgetLifeCycleSequence _setCurrentState:]
  -[WGWidgetLifeCycleSequence isCurrentState:]
  -[WGWidgetLifeCycleSequence _isValidTransitionToState:]
  -[WGWidgetLifeCycleSequence beginTransitionToState:error:]
  -[WGWidgetLifeCycleSequence sequenceWithIdentifier:]
  -[WGWidgetLifeCycleSequence isCurrentStateNotYet:]
  -[WGWidgetLifeCycleSequence isCurrentStateAtMost:]
  -[WGWidgetLifeCycleSequence _previousSequence]


WGWidgetInfo : NSObject /usr/lib/libSystem.B.dylib
 @property  UIImage *icon
 @property  UIImage *outlineIcon
 @property  {CGSize=dd} preferredContentSize
 @property  NSString *displayName
 @property  NSString *sdkVersion
 @property  long long largestAllowedDisplayMode
 @property  BOOL wantsVisibleFrame
 @property  NSExtension *extension
 @property  NSString *widgetIdentifier
 @property  double initialHeight
 @property  long long initialDisplayMode

  // class methods
  +[WGWidgetInfo _productVersion]
  +[WGWidgetInfo maximumContentHeightForCompactDisplayMode]
  +[WGWidgetInfo widgetInfoWithExtension:]
  +[WGWidgetInfo _updateRowHeightForContentSizeCategory]

  // instance methods
  -[WGWidgetInfo .cxx_destruct]
  -[WGWidgetInfo _icon]
  -[WGWidgetInfo displayName]
  -[WGWidgetInfo _sdkVersion]
  -[WGWidgetInfo preferredContentSize]
  -[WGWidgetInfo setPreferredContentSize:]
  -[WGWidgetInfo extension]
  -[WGWidgetInfo initWithExtension:]
  -[WGWidgetInfo _setDisplayName:]
  -[WGWidgetInfo widgetIdentifier]
  -[WGWidgetInfo _queue_iconWithSize:scale:forWidgetWithIdentifier:extension:]
  -[WGWidgetInfo _queue_iconWithOutlineForWidgetWithIdentifier:extension:]
  -[WGWidgetInfo _resetIconsImpl]
  -[WGWidgetInfo _resetIcons]
  -[WGWidgetInfo widgetInfoWithExtension:]
  -[WGWidgetInfo _setLargestAllowedDisplayMode:]
  -[WGWidgetInfo isLinkedOnOrAfterSystemVersion:]
  -[WGWidgetInfo requestSettingsIconWithHandler:]
  -[WGWidgetInfo _queue_iconFromWidgetBundleForWidgetWithIdentifier:extension:]
  -[WGWidgetInfo _setIcon:]
  -[WGWidgetInfo _requestIcon:withHandler:]
  -[WGWidgetInfo _outlineIcon]
  -[WGWidgetInfo _setOutlineIcon:]
  -[WGWidgetInfo requestIconWithHandler:]
  -[WGWidgetInfo initialHeight]
  -[WGWidgetInfo wantsVisibleFrame]
  -[WGWidgetInfo _setWantsVisibleFrame:]
  -[WGWidgetInfo registerWidgetHost:]
  -[WGWidgetInfo updatePreferredContentSize:forWidgetHost:]
  -[WGWidgetInfo initialDisplayMode]
  -[WGWidgetInfo largestAllowedDisplayMode]


WGNewWidgetsButton : UIButton /System/Library/PrivateFrameworks/Weather.framework/Weather
 @property  NSString *text
 @property  NSString *numberText
 @property  unsigned long badgeNumber
 @property  _UILegibilitySettings *legibilitySettings

  // instance methods
  -[WGNewWidgetsButton init]
  -[WGNewWidgetsButton .cxx_destruct]
  -[WGNewWidgetsButton text]
  -[WGNewWidgetsButton setText:]
  -[WGNewWidgetsButton sizeThatFits:]
  -[WGNewWidgetsButton layoutSubviews]
  -[WGNewWidgetsButton setHighlighted:]
  -[WGNewWidgetsButton _updateButtons]
  -[WGNewWidgetsButton legibilitySettings]
  -[WGNewWidgetsButton setLegibilitySettings:]
  -[WGNewWidgetsButton badgeNumber]
  -[WGNewWidgetsButton _textFont]
  -[WGNewWidgetsButton _buttonStateChanged:]
  -[WGNewWidgetsButton _buttonPushed:]
  -[WGNewWidgetsButton setBadgeNumber:]
  -[WGNewWidgetsButton setNumberText:]
  -[WGNewWidgetsButton _setAttributeTitleForButton:withColor:]
  -[WGNewWidgetsButton _attributedStringWithColor:]
  -[WGNewWidgetsButton _numberFont]
  -[WGNewWidgetsButton numberText]
  -[WGNewWidgetsButton _numberTextAttributes]
  -[WGNewWidgetsButton _numberAttributedStringWithNumberText:attributes:]
  -[WGNewWidgetsButton _textAttributesWithColor:]
  -[WGNewWidgetsButton _numberImageForNumberText:withAttributes:]
  -[WGNewWidgetsButton _numberLabelSizeForText:withAttributes:]
  -[WGNewWidgetsButton updateForContentCategorySizeChange]


WGColorHighlightButton : UIButton /System/Library/PrivateFrameworks/Weather.framework/Weather
 @property  UIColor *savedBackgroundColor
 @property  UIColor *highlightedBackgroundColor

  // instance methods
  -[WGColorHighlightButton .cxx_destruct]
  -[WGColorHighlightButton setBackgroundColor:]
  -[WGColorHighlightButton intrinsicContentSize]
  -[WGColorHighlightButton layoutSubviews]
  -[WGColorHighlightButton setHighlighted:]
  -[WGColorHighlightButton highlightedBackgroundColor]
  -[WGColorHighlightButton setHighlightedBackgroundColor:]
  -[WGColorHighlightButton _updateRealBackgroundColor]
  -[WGColorHighlightButton setSavedBackgroundColor:]
  -[WGColorHighlightButton savedBackgroundColor]


WGWidgetPlatterView : UIView /System/Library/PrivateFrameworks/Weather.framework/Weather <PLContentSizeManaging, PLContentSizeCategoryAdjusting, MTMaterialGrouping, MTVisualStylingRequiring>
 @property  UIView *contentView
 @property  WGWidgetHostingViewController *widgetHost
 @property  WGWidgetListItemViewController *listItem
 @property  BOOL contentViewHitTestingDisabled
 @property  unsigned long clippingEdge
 @property  BOOL backgroundHidden
 @property  double overrideHeightForLayingOutContentView
 @property  double topMarginForLayout
 @property  long long buttonMode
 @property  UIButton *showMoreButton
 @property  BOOL showingMoreContent
 @property  BOOL showMoreButtonVisible
 @property  UIButton *addWidgetButton
 @property  BOOL addWidgetButtonVisible
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL adjustsFontForContentSizeCategory
 @property  NSString *preferredContentSizeCategory
 @property  NSString *materialGroupNameBase
 @property  NSArray *requiredVisualStyleCategories

  // class methods
  +[WGWidgetPlatterView contentBaselineToBoundsBottomWithWidth:]

  // instance methods
  -[WGWidgetPlatterView .cxx_destruct]
  -[WGWidgetPlatterView _contentSize]
  -[WGWidgetPlatterView contentView]
  -[WGWidgetPlatterView intrinsicContentSize]
  -[WGWidgetPlatterView initWithFrame:]
  -[WGWidgetPlatterView sizeThatFits:]
  -[WGWidgetPlatterView layoutSubviews]
  -[WGWidgetPlatterView _setContinuousCornerRadius:]
  -[WGWidgetPlatterView _continuousCornerRadius]
  -[WGWidgetPlatterView willRemoveSubview:]
  -[WGWidgetPlatterView setAdjustsFontForContentSizeCategory:]
  -[WGWidgetPlatterView _setContentView:]
  -[WGWidgetPlatterView adjustsFontForContentSizeCategory]
  -[WGWidgetPlatterView listItem]
  -[WGWidgetPlatterView setListItem:]
  -[WGWidgetPlatterView visualStylingProviderForCategory:]
  -[WGWidgetPlatterView buttonMode]
  -[WGWidgetPlatterView setButtonMode:]
  -[WGWidgetPlatterView widgetHost]
  -[WGWidgetPlatterView setWidgetHost:]
  -[WGWidgetPlatterView _layoutContentView]
  -[WGWidgetPlatterView setBackgroundHidden:]
  -[WGWidgetPlatterView setAddWidgetButtonVisible:]
  -[WGWidgetPlatterView addWidgetButton]
  -[WGWidgetPlatterView requiredVisualStyleCategories]
  -[WGWidgetPlatterView setVisualStylingProvider:forCategory:]
  -[WGWidgetPlatterView setTopMarginForLayout:]
  -[WGWidgetPlatterView topMarginForLayout]
  -[WGWidgetPlatterView iconDidInvalidate:]
  -[WGWidgetPlatterView _handleIconButton:]
  -[WGWidgetPlatterView _updateUtilityButtonForMode:]
  -[WGWidgetPlatterView sizeThatFitsContentWithSize:]
  -[WGWidgetPlatterView _configureHeaderViewsIfNecessary]
  -[WGWidgetPlatterView _isUtilityButtonVisible]
  -[WGWidgetPlatterView _setUtilityButtonVisible:]
  -[WGWidgetPlatterView _updateUtilityButtonForMoreContentState:]
  -[WGWidgetPlatterView _configureBackgroundMaterialViewIfNecessary]
  -[WGWidgetPlatterView _layoutHeaderViews]
  -[WGWidgetPlatterView showMoreButton]
  -[WGWidgetPlatterView _updateShowMoreButtonImage]
  -[WGWidgetPlatterView adjustForContentSizeCategoryChange]
  -[WGWidgetPlatterView _updateHeaderContentViewVisualStyling]
  -[WGWidgetPlatterView _headerFrameForBounds:]
  -[WGWidgetPlatterView setShowingMoreContent:]
  -[WGWidgetPlatterView _handleAddWidget:]
  -[WGWidgetPlatterView _toggleShowMore:]
  -[WGWidgetPlatterView setShowMoreButtonVisible:]
  -[WGWidgetPlatterView isShowingMoreContent]
  -[WGWidgetPlatterView contentSizeForSize:]
  -[WGWidgetPlatterView materialGroupNameBase]
  -[WGWidgetPlatterView setMaterialGroupNameBase:]
  -[WGWidgetPlatterView minimumSizeThatFits:]
  -[WGWidgetPlatterView setContentViewHitTestingDisabled:]
  -[WGWidgetPlatterView setClippingEdge:]
  -[WGWidgetPlatterView isShowMoreButtonVisible]
  -[WGWidgetPlatterView isAddWidgetButtonVisible]
  -[WGWidgetPlatterView setOverrideHeightForLayingOutContentView:]
  -[WGWidgetPlatterView isContentViewHitTestingDisabled]
  -[WGWidgetPlatterView clippingEdge]
  -[WGWidgetPlatterView isBackgroundHidden]
  -[WGWidgetPlatterView overrideHeightForLayingOutContentView]


WGCarouselCellThresholds : NSObject /usr/lib/libSystem.B.dylib

WGCarouselListViewController : WGMajorListViewController <WGWidgetPinningTeachingViewDelegate>
 @property  BOOL revealed
 @property  double revealProgress
 @property  double dismissProgress
 @property  BOOL visuallyRevealed
 @property  BOOL visuallyRevealedPriorToEditingIcons
 @property  NSMutableDictionary *catchupProperties
 @property  NSMutableDictionary *catchupTimers
 @property  BOOL footerVisible
 @property  WGWidgetPinningTeachingView *teachingView
 @property  NSMutableDictionary *resizeContexts
 @property  NSMutableDictionary *cachedThresholds
 @property  {WGWidgetListSettings=QBBB} listSettings
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WGCarouselListViewController dealloc]
  -[WGCarouselListViewController .cxx_destruct]
  -[WGCarouselListViewController setContainerView:]
  -[WGCarouselListViewController scrollViewDidScroll:]
  -[WGCarouselListViewController scrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[WGCarouselListViewController viewWillAppear:]
  -[WGCarouselListViewController viewDidLoad]
  -[WGCarouselListViewController viewDidLayoutSubviews]
  -[WGCarouselListViewController viewDidAppear:]
  -[WGCarouselListViewController viewDidDisappear:]
  -[WGCarouselListViewController setFooterVisible:]
  -[WGCarouselListViewController isFooterVisible]
  -[WGCarouselListViewController _isViewControllerVisible]
  -[WGCarouselListViewController setRevealed:]
  -[WGCarouselListViewController _updateScrollViewContentSize]
  -[WGCarouselListViewController extraViews]
  -[WGCarouselListViewController shouldAnimateFirstTwoViewsAsOne]
  -[WGCarouselListViewController setEditingIcons:]
  -[WGCarouselListViewController listSettings]
  -[WGCarouselListViewController widgetPinningTeachingViewDidSelectYes:]
  -[WGCarouselListViewController widgetPinningTeachingViewDidSelectNo:]
  -[WGCarouselListViewController setCachedThresholds:]
  -[WGCarouselListViewController _repopulateStackViewWithWidgetIdentifiers:]
  -[WGCarouselListViewController _updateTeachingViewVisibilityAnimated:withCompletion:]
  -[WGCarouselListViewController _didUpdateStackViewArrangedSubviews]
  -[WGCarouselListViewController _insertionIndexofListItem:intoWidgetViews:withOrderedIdentifiers:]
  -[WGCarouselListViewController _createProperties]
  -[WGCarouselListViewController _identifierForCell:]
  -[WGCarouselListViewController setVisuallyRevealed:]
  -[WGCarouselListViewController _updateCarouselAndRevealState]
  -[WGCarouselListViewController setVisuallyRevealed:withSlowAnimation:]
  -[WGCarouselListViewController _indexOfFirstNonFavoritedWidgetInStackView]
  -[WGCarouselListViewController catchupTimers]
  -[WGCarouselListViewController headerVisible]
  -[WGCarouselListViewController setHeaderVisible:]
  -[WGCarouselListViewController isVisuallyRevealed]
  -[WGCarouselListViewController setVisuallyRevealedPriorToEditingIcons:]
  -[WGCarouselListViewController visuallyRevealedPriorToEditingIcons]
  -[WGCarouselListViewController _updateCarouselEffect]
  -[WGCarouselListViewController _updateRevealState]
  -[WGCarouselListViewController isRevealed]
  -[WGCarouselListViewController _hasEnoughContentToScroll]
  -[WGCarouselListViewController _indexForNextCellAfterContentOffset:]
  -[WGCarouselListViewController _newCatchupPropertyForCell:]
  -[WGCarouselListViewController catchupProperties]
  -[WGCarouselListViewController resizeContexts]
  -[WGCarouselListViewController _cellFrameInScrollBoundsForCell:]
  -[WGCarouselListViewController _thresholdsForCell:]
  -[WGCarouselListViewController _styleFullyInvisibleTopCell:]
  -[WGCarouselListViewController _styleCroppedAndScaledCellForTopEdge:withCellFrameInScrollViewBounds:thresholds:]
  -[WGCarouselListViewController _styleCroppedCellForTopEdge:withCellFrameInScrollViewBounds:intersectionRect:thresholds:]
  -[WGCarouselListViewController _styleFullyVisibleCell:]
  -[WGCarouselListViewController _styleCroppedCellForBottomEdge:intersectionRect:thresholds:]
  -[WGCarouselListViewController _styleCroppedAndScaledCellForBottomEdge:withCellFrameInScrollViewBounds:intersectionRect:thresholds:]
  -[WGCarouselListViewController _styleDisapearingCellForBottomEdge:withCellFrameInScrollViewBounds:previousCellFrameInContainerView:thresholds:]
  -[WGCarouselListViewController _styleFullyInvisibleBottomCell:withCellFrameInScrollViewBounds:thresholds:]
  -[WGCarouselListViewController _styleHeaderView:withCellFrameInScrollViewBounds:intersectionRect:]
  -[WGCarouselListViewController _styleFooterView:withCellFrameInScrollViewBounds:intersectionRect:containerHeight:]
  -[WGCarouselListViewController _styleTeachingView:withCellFrameInScrollViewBounds:intersectionRect:]
  -[WGCarouselListViewController revealProgress]
  -[WGCarouselListViewController setRevealProgress:]
  -[WGCarouselListViewController setDismissProgress:]
  -[WGCarouselListViewController shouldShowTeachingView]
  -[WGCarouselListViewController easedOutValueForValue:]
  -[WGCarouselListViewController initWithWidgetDiscoveryController:listSettings:]
  -[WGCarouselListViewController resizeWidgetWrapperView:toSize:withTransitionContext:completion:]
  -[WGCarouselListViewController setListSettings:]
  -[WGCarouselListViewController dismissProgress]
  -[WGCarouselListViewController setCatchupProperties:]
  -[WGCarouselListViewController setCatchupTimers:]
  -[WGCarouselListViewController teachingView]
  -[WGCarouselListViewController setTeachingView:]
  -[WGCarouselListViewController setResizeContexts:]
  -[WGCarouselListViewController cachedThresholds]


_WGCarouselCellResizeContext : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL active
 @property  double compactHeight
 @property  double expandedHeight
 @property  UIViewFloatAnimatableProperty *resizeProgress

  // instance methods
  -[_WGCarouselCellResizeContext .cxx_destruct]
  -[_WGCarouselCellResizeContext isActive]
  -[_WGCarouselCellResizeContext setActive:]
  -[_WGCarouselCellResizeContext expandedHeight]
  -[_WGCarouselCellResizeContext resizeProgress]
  -[_WGCarouselCellResizeContext compactHeight]
  -[_WGCarouselCellResizeContext setCompactHeight:]
  -[_WGCarouselCellResizeContext setExpandedHeight:]
  -[_WGCarouselCellResizeContext setResizeProgress:]


WGWidgetListViewController : UIViewController /System/Library/PrivateFrameworks/Weather.framework/Weather <WGWidgetDebugging, UIScrollViewDelegate, WGWidgetDiscoveryObserving, WGWidgetHostingViewControllerDelegate, WGWidgetListItemViewControllerDelegate, WGWidgetExtensionVisibilityProviding>
 @property  <WGWidgetListViewControllerDelegatePrivate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *group
 @property  NSArray *previouslyVisibleWidgetIDs
 @property  NSLayoutConstraint *stackViewBottomConstraint
 @property  <WGWidgetListViewControllerDelegate> *delegate
 @property  UIScrollView *widgetListView
 @property  unsigned long widgetCount
 @property  BOOL shouldBlurContent
 @property  UIControl *editButton
 @property  BOOL editingIcons
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WGWidgetListViewController dealloc]
  -[WGWidgetListViewController delegate]
  -[WGWidgetListViewController setDelegate:]
  -[WGWidgetListViewController .cxx_destruct]
  -[WGWidgetListViewController _group]
  -[WGWidgetListViewController traitCollectionDidChange:]
  -[WGWidgetListViewController initWithNibName:bundle:]
  -[WGWidgetListViewController scrollViewDidScroll:]
  -[WGWidgetListViewController scrollViewWillBeginDragging:]
  -[WGWidgetListViewController scrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[WGWidgetListViewController scrollViewDidEndDragging:willDecelerate:]
  -[WGWidgetListViewController scrollViewWillBeginDecelerating:]
  -[WGWidgetListViewController scrollViewDidEndDecelerating:]
  -[WGWidgetListViewController scrollViewDidEndScrollingAnimation:]
  -[WGWidgetListViewController scrollViewShouldScrollToTop:]
  -[WGWidgetListViewController scrollViewDidScrollToTop:]
  -[WGWidgetListViewController viewWillAppear:]
  -[WGWidgetListViewController viewWillDisappear:]
  -[WGWidgetListViewController viewDidLoad]
  -[WGWidgetListViewController preferredContentSizeDidChangeForChildContentContainer:]
  -[WGWidgetListViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[WGWidgetListViewController viewDidAppear:]
  -[WGWidgetListViewController viewDidDisappear:]
  -[WGWidgetListViewController sizeForChildContentContainer:withParentContainerSize:]
  -[WGWidgetListViewController shouldAutomaticallyForwardAppearanceMethods]
  -[WGWidgetListViewController stackViewBottomConstraint]
  -[WGWidgetListViewController editButton]
  -[WGWidgetListViewController setEditButton:]
  -[WGWidgetListViewController setEditingIcons:]
  -[WGWidgetListViewController maxSizeForWidget:forDisplayMode:]
  -[WGWidgetListViewController registerWidgetForRefreshEvents:]
  -[WGWidgetListViewController unregisterWidgetForRefreshEvents:]
  -[WGWidgetListViewController remoteViewControllerDidDisconnectForWidget:]
  -[WGWidgetListViewController remoteViewControllerViewDidAppearForWidget:]
  -[WGWidgetListViewController remoteViewControllerViewDidHideForWidget:]
  -[WGWidgetListViewController brokenViewDidAppearForWidget:]
  -[WGWidgetListViewController widget:didChangeLargestSupportedDisplayMode:]
  -[WGWidgetListViewController marginInsetsForWidget:]
  -[WGWidgetListViewController layoutMarginForWidget:]
  -[WGWidgetListViewController managingContainerIsVisibleForWidget:]
  -[WGWidgetListViewController visibleFrameForWidget:]
  -[WGWidgetListViewController isWidgetExtensionVisible:]
  -[WGWidgetListViewController widgetDiscoveryControllerSignificantWidgetsChange:]
  -[WGWidgetListViewController widgetDiscoveryController:orderDidChangeForWidgetIdentifiers:]
  -[WGWidgetListViewController makeVisibleWidgetWithIdentifier:completion:]
  -[WGWidgetListViewController initWithWidgetDiscoveryController:]
  -[WGWidgetListViewController _repopulateStackViewWithWidgetIdentifiers:]
  -[WGWidgetListViewController _didUpdateStackViewArrangedSubviews]
  -[WGWidgetListViewController _insertionIndexofListItem:intoWidgetViews:withOrderedIdentifiers:]
  -[WGWidgetListViewController widgetListView]
  -[WGWidgetListViewController isEditingIcons]
  -[WGWidgetListViewController visibleWidgetIdentifiers]
  -[WGWidgetListViewController resizeWidgetWrapperView:toSize:withTransitionContext:completion:]
  -[WGWidgetListViewController _invalidateAllCancelTouchesAssertions]
  -[WGWidgetListViewController _scrollViewIfLoaded]
  -[WGWidgetListViewController _updateBackgroundViewForPlatter:]
  -[WGWidgetListViewController _listItemViewControllerForWidgetWithIdentifier:creatingIfNecessary:]
  -[WGWidgetListViewController _invalidateAllAlternateCaptureOnlyMaterialViews]
  -[WGWidgetListViewController _insert:listItem:withOrderedIdentifiers:animated:]
  -[WGWidgetListViewController _configureAlternateCaptureOnlyMaterialViewWithUserInterfaceStyle:]
  -[WGWidgetListViewController _wrapperViewForWidgetPlatterView:]
  -[WGWidgetListViewController _beginInsertion:ofListItem:withOrderedIdentifiers:removingViewIfPossible:]
  -[WGWidgetListViewController _invalidateAlternateCaptureOnlyMaterialViewWithUserInterfaceStyle:]
  -[WGWidgetListViewController _newCaptureOnlyMaterialView]
  -[WGWidgetListViewController _scrollViewLoadingIfNecessary:]
  -[WGWidgetListViewController _platterViewAtLocation:]
  -[WGWidgetListViewController _cancelTouchesForWidget:]
  -[WGWidgetListViewController _disableTouchesOnAllWidgets]
  -[WGWidgetListViewController _enableTouchesOnAllWidgets]
  -[WGWidgetListViewController _invokeBlockWithAllPlatterViews:]
  -[WGWidgetListViewController _configureCaptureOnlyMaterialView]
  -[WGWidgetListViewController _configureScrollView]
  -[WGWidgetListViewController _configureStackView]
  -[WGWidgetListViewController _repopulateStackView]
  -[WGWidgetListViewController _adjustContentOffsetToInsideContent:]
  -[WGWidgetListViewController _invokeBlockWithPlatterViewsVisibleInBounds:]
  -[WGWidgetListViewController _invokeBlock:withPlatterViewsPassingTest:]
  -[WGWidgetListViewController _platterViewForWidgetWithIdentifier:creatingIfNecessary:]
  -[WGWidgetListViewController _widgetIdentifiersForPlatterViewsVisibleInBounds]
  -[WGWidgetListViewController _setPreviouslyVisibleWidgetIDs:]
  -[WGWidgetListViewController _previouslyVisibleWidgetIDs]
  -[WGWidgetListViewController _updateWidgetViewStateWithPreviouslyVisibleWidgetIdentifiers:]
  -[WGWidgetListViewController _invokeBlockWithPlatterViewsVisibleInRect:block:]
  -[WGWidgetListViewController _presentEditViewController]
  -[WGWidgetListViewController _cancelTouchesForHitWidgetIfNecessaryAndDisableTouchesOnAllWidgets]
  -[WGWidgetListViewController _scrollViewDidStop]
  -[WGWidgetListViewController _visibleContentFrameForBounds:withContentOccludingInsets:]
  -[WGWidgetListViewController _maxVisibleContentSize]
  -[WGWidgetListViewController widgetListItemViewController:widgetHostWithIdentifier:]
  -[WGWidgetListViewController widgetCount]
  -[WGWidgetListViewController setShouldBlurContent:]
  -[WGWidgetListViewController _pruneAlternateCaptureOnlyMaterialViews]
  -[WGWidgetListViewController shouldBlurContent]


_WGWidgetListScrollView : UIScrollView /System/Library/PrivateFrameworks/Weather.framework/Weather
  // instance methods
  -[_WGWidgetListScrollView _edgesPropagatingSafeAreaInsetsToDescendants]


WGDataSourceManager : NSObject /usr/lib/libSystem.B.dylib <_WGParentDataSourceManager>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WGDataSourceManager requestSharedDataSourceManager:]
  +[WGDataSourceManager __sharedInstance]

  // instance methods
  -[WGDataSourceManager .cxx_destruct]
  -[WGDataSourceManager childDataSourceManagerDataSourcesDidChange:]
  -[WGDataSourceManager discoverAvailableWidgetsWithError:]
  -[WGDataSourceManager _start:]
  -[WGDataSourceManager _stop:]
  -[WGDataSourceManager addWidgetDataSourceChangeHandler:forIdentifier:]
  -[WGDataSourceManager _begin:]
  -[WGDataSourceManager removeChangeHandlersWithIdentifier:]


WGPlatterHeaderContentView : PLPlatterHeaderContentView /System/Library/PrivateFrameworks/ProactiveEventTracker.framework/ProactiveEventTracker
 @property  {CGAffineTransform=dddddd} utilityButtonTransform

  // instance methods
  -[WGPlatterHeaderContentView init]
  -[WGPlatterHeaderContentView setUtilityButtonTransform:]
  -[WGPlatterHeaderContentView _layoutUtilityButtonWithScale:]
  -[WGPlatterHeaderContentView utilityButtonTransform]


WGWidgetListFooterView : UIView /System/Library/PrivateFrameworks/Weather.framework/Weather <UITextViewDelegate, MTMaterialGrouping>
 @property  UIView *contentView
 @property  long long layoutMode
 @property  _UILegibilitySettings *legibilitySettings
 @property  BOOL shouldBlurContent
 @property  BOOL shouldSizeContent
 @property  <WGWidgetListFooterViewDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *materialGroupNameBase

  // instance methods
  -[WGWidgetListFooterView delegate]
  -[WGWidgetListFooterView setDelegate:]
  -[WGWidgetListFooterView .cxx_destruct]
  -[WGWidgetListFooterView contentView]
  -[WGWidgetListFooterView intrinsicContentSize]
  -[WGWidgetListFooterView initWithFrame:]
  -[WGWidgetListFooterView traitCollectionDidChange:]
  -[WGWidgetListFooterView addTarget:action:]
  -[WGWidgetListFooterView sizeThatFits:]
  -[WGWidgetListFooterView layoutSubviews]
  -[WGWidgetListFooterView legibilitySettings]
  -[WGWidgetListFooterView setLegibilitySettings:]
  -[WGWidgetListFooterView textView:shouldInteractWithURL:inRange:interaction:]
  -[WGWidgetListFooterView textView:shouldInteractWithTextAttachment:inRange:interaction:]
  -[WGWidgetListFooterView layoutMode]
  -[WGWidgetListFooterView setLayoutMode:]
  -[WGWidgetListFooterView setVisibleWidgetsIDs:]
  -[WGWidgetListFooterView materialGroupNameBase]
  -[WGWidgetListFooterView setMaterialGroupNameBase:]
  -[WGWidgetListFooterView setShouldSizeContent:]
  -[WGWidgetListFooterView setShouldBlurContent:]
  -[WGWidgetListFooterView shouldBlurContent]
  -[WGWidgetListFooterView _availableWidgetsUpdated:]
  -[WGWidgetListFooterView _updateForContentCategorySizeDidChange]
  -[WGWidgetListFooterView _setAttributedString:forWidgetIdentifier:]
  -[WGWidgetListFooterView _referenceFont]
  -[WGWidgetListFooterView invalidateSubviewGeometery]
  -[WGWidgetListFooterView shouldSizeContent]


WGWidgetListItemViewController : UIViewController /System/Library/PrivateFrameworks/Weather.framework/Weather <PLContentSizeCategoryAdjusting>
 @property  {CGSize=dd} pendingSize
 @property  NSString *widgetIdentifier
 @property  <WGWidgetHostingViewControllerDelegate><WGWidgetListItemViewControllerDelegate> *delegate
 @property  WGWidgetPlatterView *platterView
 @property  WGWidgetHostingViewController *widgetHost
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL adjustsFontForContentSizeCategory
 @property  NSString *preferredContentSizeCategory

  // instance methods
  -[WGWidgetListItemViewController delegate]
  -[WGWidgetListItemViewController setDelegate:]
  -[WGWidgetListItemViewController .cxx_destruct]
  -[WGWidgetListItemViewController loadView]
  -[WGWidgetListItemViewController viewWillAppear:]
  -[WGWidgetListItemViewController viewWillDisappear:]
  -[WGWidgetListItemViewController viewDidLoad]
  -[WGWidgetListItemViewController preferredContentSizeDidChangeForChildContentContainer:]
  -[WGWidgetListItemViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[WGWidgetListItemViewController viewDidAppear:]
  -[WGWidgetListItemViewController viewDidDisappear:]
  -[WGWidgetListItemViewController setAdjustsFontForContentSizeCategory:]
  -[WGWidgetListItemViewController platterView]
  -[WGWidgetListItemViewController sizeForChildContentContainer:withParentContainerSize:]
  -[WGWidgetListItemViewController removeChildViewController:]
  -[WGWidgetListItemViewController shouldAutomaticallyForwardAppearanceMethods]
  -[WGWidgetListItemViewController _canShowWhileLocked]
  -[WGWidgetListItemViewController adjustsFontForContentSizeCategory]
  -[WGWidgetListItemViewController _pendingSize]
  -[WGWidgetListItemViewController widgetHost]
  -[WGWidgetListItemViewController widgetIdentifier]
  -[WGWidgetListItemViewController _platterViewIfLoaded]
  -[WGWidgetListItemViewController _platterViewLoadingIfNecessary:]
  -[WGWidgetListItemViewController adjustForContentSizeCategoryChange]
  -[WGWidgetListItemViewController initWithWidgetIdentifier:]
  -[WGWidgetListItemViewController managingContainerWillAppear:]
  -[WGWidgetListItemViewController managingContainerDidDisappear:]
  -[WGWidgetListItemViewController contentSizeForPreferredContentSize:]
  -[WGWidgetListItemViewController preferredContentSizeForContentOfSize:]
  -[WGWidgetListItemViewController _addWidgetHostIfNecessary]
  -[WGWidgetListItemViewController _setPendingSize:]


WGWidgetAttributionView : UITextView /System/Library/PrivateFrameworks/Weather.framework/Weather
 @property  UIColor *legibilityTextColor

  // class methods
  +[WGWidgetAttributionView requestAttributedStringForIdentifier:withHandler:]
  +[WGWidgetAttributionView widgetAttributionIDsInOrder]

  // instance methods
  -[WGWidgetAttributionView .cxx_destruct]
  -[WGWidgetAttributionView layoutSubviews]
  -[WGWidgetAttributionView initWithWidgetAttributedString:]
  -[WGWidgetAttributionView setLegibilityTextColor:]
  -[WGWidgetAttributionView _configureAttributedString]
  -[WGWidgetAttributionView _attributionBackgroundColor]
  -[WGWidgetAttributionView _attributionFont]
  -[WGWidgetAttributionView _paragraphStyle]
  -[WGWidgetAttributionView legibilityTextColor]


WGWidgetStatsController : NSObject /usr/lib/libSystem.B.dylib
 @property  NCLaunchStats *launchStats
 @property  WGWidgetDiscoveryController *discoveryController
 @property  BOOL bootstrapFavoriteWidgets

  // instance methods
  -[WGWidgetStatsController dealloc]
  -[WGWidgetStatsController .cxx_destruct]
  -[WGWidgetStatsController initWithDiscoveryController:]
  -[WGWidgetStatsController notePreWarmHasStarted:withTriggerType:withSequence:]
  -[WGWidgetStatsController notePreWarmHasEnded:withResult:withTriggerType:withSequence:]
  -[WGWidgetStatsController requestRefreshForWidget:afterDate:]
  -[WGWidgetStatsController unregisterWidgetForPredictionEvents:]
  -[WGWidgetStatsController registerWidgetForPredictionEvents:]
  -[WGWidgetStatsController bootstrapFavoriteWidgets]
  -[WGWidgetStatsController setBootstrapFavoriteWidgets:]
  -[WGWidgetStatsController _favoriteWidgetIdentifiersDidUpdate:]
  -[WGWidgetStatsController _setupLaunchStats]
  -[WGWidgetStatsController _teardownLaunchStats]
  -[WGWidgetStatsController _updateFavoriteWidgetIdentifiers]
  -[WGWidgetStatsController launchStats:incomingRecommendationForBundleIDs:completion:]
  -[WGWidgetStatsController discoveryController]
  -[WGWidgetStatsController launchStats]


WGWidgetPersistentStateController : NSObject /usr/lib/libSystem.B.dylib <_NCWidgetController_Host_IPC, NSXPCListenerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WGWidgetPersistentStateController hasContentForWidgetWithIdentifier:containingBundleIdentifier:]
  +[WGWidgetPersistentStateController _persistentStateForWidgetWithIdentifier:containingBundleIdentifier:]

  // instance methods
  -[WGWidgetPersistentStateController dealloc]
  -[WGWidgetPersistentStateController .cxx_destruct]
  -[WGWidgetPersistentStateController listener:shouldAcceptNewConnection:]
  -[WGWidgetPersistentStateController __setHasContent:forWidgetWithBundleIdentifier:]
  -[WGWidgetPersistentStateController __requestRefreshAfterDate:forWidgetWithBundleIdentifier:]
  -[WGWidgetPersistentStateController initWithDiscoveryController:]
  -[WGWidgetPersistentStateController doesWidgetWithIdentifierHaveContent:]
  -[WGWidgetPersistentStateController largestAvailableDisplayModeForWidgetWithIdentifier:]
  -[WGWidgetPersistentStateController setLargestAvailableDisplayMode:forWidgetWithIdentifier:]
  -[WGWidgetPersistentStateController _updateCachedStateForWidgetWithIdentifier:containingBundleID:]
  -[WGWidgetPersistentStateController _synchronizePersistentStateForWidgetWithIdentifier:]
  -[WGWidgetPersistentStateController _valueForKey:forWidgetWithIdentifier:]
  -[WGWidgetPersistentStateController _setValue:forKey:forWidgetWithIdentifier:containingBundleID:]
  -[WGWidgetPersistentStateController _setHasContent:forWidgetWithIdentifier:]


WGWidgetDatum : NSObject /usr/lib/libSystem.B.dylib <WGDatum>
 @property  NSExtension *representedExtension
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *datumIdentifier

  // instance methods
  -[WGWidgetDatum isEqual:]
  -[WGWidgetDatum .cxx_destruct]
  -[WGWidgetDatum initWithExtension:]
  -[WGWidgetDatum datumIdentifier]
  -[WGWidgetDatum representedExtension]


_WGCAPackageView : _UICAPackageView /System/Library/PrivateFrameworks/Weather.framework/Weather
 @property  NSURL *archiveURL
 @property  NSString *snapshotIdentifier

  // class methods
  +[_WGCAPackageView loadPackageViewWithContentsOfURL:publishedObjectViewClassMap:completion:]

  // instance methods
  -[_WGCAPackageView .cxx_destruct]
  -[_WGCAPackageView _setContinuousCornerRadius:]
  -[_WGCAPackageView archiveURL]
  -[_WGCAPackageView setArchiveURL:]
  -[_WGCAPackageView _supportsPushingBottomCornerRadiusToSubviews:]
  -[_WGCAPackageView snapshotIdentifier]


WGCircleCheckView : UIView /System/Library/PrivateFrameworks/Weather.framework/Weather
 @property  UIImageView *circleView
 @property  WGCheckView *checkView
 @property  BOOL checked

  // instance methods
  -[WGCircleCheckView .cxx_destruct]
  -[WGCircleCheckView initWithFrame:]
  -[WGCircleCheckView sizeThatFits:]
  -[WGCircleCheckView layoutSubviews]
  -[WGCircleCheckView _checkView]
  -[WGCircleCheckView setChecked:]
  -[WGCircleCheckView isChecked]
  -[WGCircleCheckView _isFrozen]
  -[WGCircleCheckView _setFrozen:]
  -[WGCircleCheckView setCircleView:]
  -[WGCircleCheckView _circleView]
  -[WGCircleCheckView _setChecked:completion:]
  -[WGCircleCheckView _configureCircleViewIfNecessary]
  -[WGCircleCheckView _configureCheckViewIfNecessary]
  -[WGCircleCheckView setCheckView:]


WGWidgetListEditViewPinTableViewCell : UITableViewCell /System/Library/PrivateFrameworks/Weather.framework/Weather
 @property  UISwitch *pinSwitch

  // instance methods
  -[WGWidgetListEditViewPinTableViewCell .cxx_destruct]
  -[WGWidgetListEditViewPinTableViewCell prepareForReuse]
  -[WGWidgetListEditViewPinTableViewCell initWithStyle:reuseIdentifier:]
  -[WGWidgetListEditViewPinTableViewCell startAnimating]
  -[WGWidgetListEditViewPinTableViewCell stopAnimating]
  -[WGWidgetListEditViewPinTableViewCell pinSwitch]


WGWidgetListEditViewFavoritesTableCellView : UITableViewCell /System/Library/PrivateFrameworks/Weather.framework/Weather
  // instance methods
  -[WGWidgetListEditViewFavoritesTableCellView initWithStyle:reuseIdentifier:]


WGMajorListViewController : WGWidgetListViewController <WGWidgetListFooterViewDelegate, WGWidgetIconAnimationExtraViewsProviding>
 @property  BOOL _footerVisible
 @property  <WGMajorListViewControllerDelegate> *delegate
 @property  UIView *containerView
 @property  WGWidgetListFooterView *footerView
 @property  UIViewController *headerContentViewController
 @property  WGWidgetListHeaderView *headerView
 @property  BOOL headerVisible
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  UIView *extraViewsContainer
 @property  NSArray *extraViews
 @property  BOOL shouldAnimateLastTwoViewsAsOne
 @property  BOOL shouldAnimateFirstTwoViewsAsOne

  // instance methods
  -[WGMajorListViewController .cxx_destruct]
  -[WGMajorListViewController _group]
  -[WGMajorListViewController containerView]
  -[WGMajorListViewController setContainerView:]
  -[WGMajorListViewController scrollViewDidScroll:]
  -[WGMajorListViewController viewWillAppear:]
  -[WGMajorListViewController viewWillDisappear:]
  -[WGMajorListViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[WGMajorListViewController viewDidAppear:]
  -[WGMajorListViewController viewDidDisappear:]
  -[WGMajorListViewController headerView]
  -[WGMajorListViewController headerContentViewController]
  -[WGMajorListViewController _canShowWhileLocked]
  -[WGMajorListViewController footerView]
  -[WGMajorListViewController _isFooterVisible]
  -[WGMajorListViewController extraViewsContainer]
  -[WGMajorListViewController extraViews]
  -[WGMajorListViewController shouldAnimateLastTwoViewsAsOne]
  -[WGMajorListViewController shouldAnimateFirstTwoViewsAsOne]
  -[WGMajorListViewController setEditingIcons:]
  -[WGMajorListViewController setHeaderContentViewController:]
  -[WGMajorListViewController widgetDiscoveryController:widgetWithIdentifier:shouldBecomeVisibleInGroup:]
  -[WGMajorListViewController widgetDiscoveryController:widgetWithIdentifier:shouldBecomeHiddenInGroup:]
  -[WGMajorListViewController _repopulateStackViewWithWidgetIdentifiers:]
  -[WGMajorListViewController _insertionIndexofListItem:intoWidgetViews:withOrderedIdentifiers:]
  -[WGMajorListViewController setHeaderVisible:]
  -[WGMajorListViewController _configureStackView]
  -[WGMajorListViewController setShouldBlurContent:]
  -[WGMajorListViewController widgetListFooterViewAvailableNewWidgetsUpdated:]
  -[WGMajorListViewController _updateHeaderVisibility]
  -[WGMajorListViewController _updateFooterVisibility]
  -[WGMajorListViewController _updateEditButtonVisibilityAnimated:]
  -[WGMajorListViewController _insertHeaderView]
  -[WGMajorListViewController isHeaderVisible]
  -[WGMajorListViewController presentEditView:]
  -[WGMajorListViewController _updateFooterViewShouldBlurContent]
  -[WGMajorListViewController _setFooterVisible:]


WGWidgetEventTracker : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[WGWidgetEventTracker sharedInstance]

  // instance methods
  -[WGWidgetEventTracker init]
  -[WGWidgetEventTracker dealloc]
  -[WGWidgetEventTracker .cxx_destruct]
  -[WGWidgetEventTracker widgetViewDidAppearWithWidget:]
  -[WGWidgetEventTracker widgetViewDidDisappearWithWidget:]
  -[WGWidgetEventTracker widget:didChangeUserSpecifiedDisplayMode:]
  -[WGWidgetEventTracker widget:didAppearInMode:]
  -[WGWidgetEventTracker widget:didDisappearInMode:]
  -[WGWidgetEventTracker _lockedStateDidChange]
  -[WGWidgetEventTracker _trackWidgetStatusEventForWidget:withStatus:]
  -[WGWidgetEventTracker _trackWidgetListShownEventWithLocation:authenticated:]
  -[WGWidgetEventTracker _trackWidgetListLingerEventWithLocation:authenticated:duration:]
  -[WGWidgetEventTracker _trackWidgetShownEventForWidget:withLocation:authenticated:mode:]
  -[WGWidgetEventTracker _trackWidgetLingerEventForWidget:withLocation:authenticated:mode:duration:]
  -[WGWidgetEventTracker _trackWidgetContractEventForWidget:]
  -[WGWidgetEventTracker _trackWidgetExpandEventForWidget:]
  -[WGWidgetEventTracker _widgetProperty]
  -[WGWidgetEventTracker _locationProperty]
  -[WGWidgetEventTracker _authenticationProperty]
  -[WGWidgetEventTracker _modeProperty]
  -[WGWidgetEventTracker _widgetLingerTracker]
  -[WGWidgetEventTracker _widgetShownTracker]
  -[WGWidgetEventTracker _statusProperty]
  -[WGWidgetEventTracker _widgetStatusTracker]
  -[WGWidgetEventTracker _widgetToggleContractTracker]
  -[WGWidgetEventTracker widgetToggleExpandTracker]
  -[WGWidgetEventTracker _widgetListLingerTracker]
  -[WGWidgetEventTracker widgetListShownTracker]
  -[WGWidgetEventTracker widgetListDidAppearAtLocation:withEnabledWidgets:disabledWidgets:]
  -[WGWidgetEventTracker widgetListDidDisappearAtLocation:]


WGWidgetListEditViewTableViewCell : UITableViewCell /System/Library/PrivateFrameworks/Weather.framework/Weather
 @property  BOOL widgetEnabled
 @property  BOOL showsDot
 @property  UIButton *insertWidgetAccessoryButton

  // instance methods
  -[WGWidgetListEditViewTableViewCell .cxx_destruct]
  -[WGWidgetListEditViewTableViewCell layoutSubviews]
  -[WGWidgetListEditViewTableViewCell initWithStyle:reuseIdentifier:]
  -[WGWidgetListEditViewTableViewCell setWidgetEnabled:]
  -[WGWidgetListEditViewTableViewCell setShowsDot:]
  -[WGWidgetListEditViewTableViewCell showsDot]
  -[WGWidgetListEditViewTableViewCell isWidgetEnabled]
  -[WGWidgetListEditViewTableViewCell insertWidgetAccessoryButton]


WGWidgetDataSource : NSObject /usr/lib/libSystem.B.dylib <_WGDataSource, WGDataSource>
 @property  _WGConcreteDataSource *concreteDataSource
 @property  NSArray *widgetIdentifiers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *dataSourceIdentifier
 @property  NSString *parentDataSourceIdentifier

  // instance methods
  -[WGWidgetDataSource isEqual:]
  -[WGWidgetDataSource .cxx_destruct]
  -[WGWidgetDataSource initWithIdentifier:]
  -[WGWidgetDataSource dataSourceIdentifier]
  -[WGWidgetDataSource replaceWithDatum:]
  -[WGWidgetDataSource removeDatumWithIdentifier:]
  -[WGWidgetDataSource widgetIdentifiers]
  -[WGWidgetDataSource widgetDatumWithIdentifier:]
  -[WGWidgetDataSource removeWidgetObserver:completion:]
  -[WGWidgetDataSource addWidgetObserver:completion:]
  -[WGWidgetDataSource _concreteDataSource]
  -[WGWidgetDataSource parentDataSourceIdentifier]
  -[WGWidgetDataSource _setConcreteDataSource:]


WGWidgetHostingViewController : UIViewController /System/Library/PrivateFrameworks/Weather.framework/Weather
 @property  NSString *appBundleID
 @property  NSString *containerIdentifier
 @property  WGWidgetLifeCycleSequence *activeLifeCycleSequence
 @property  long long connectionState
 @property  NSObject<OS_dispatch_queue> *proxyConnectionQueue
 @property  NSObject<OS_dispatch_queue> *proxyRequestQueue
 @property  NSObject<OS_dispatch_queue> *diskWriteQueue
 @property  _WGWidgetRemoteViewController *remoteViewController
 @property  <NSCopying> *extensionRequest
 @property  UIView *contentProvidingView
 @property  _WGCAPackageView *snapshotView
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} snapshotViewBounds
 @property  BOOL encodingLayerTree
 @property  BOOL didRequestViewInset
 @property  NSTimer *disconnectionTimer
 @property  NSObject<OS_dispatch_semaphore> *viewWillAppearSemaphore
 @property  NSObject<OS_dispatch_semaphore> *viewWillDisappearSemaphore
 @property  @? remoteViewControllerConnectionHandler
 @property  @? remoteViewControllerDisconnectionHandler
 @property  NSDate *lastUnanticipatedDisconnectionDate
 @property  NSMapTable *openAppearanceTransactions
 @property  BOOL didUpdate
 @property  BOOL implementsPerformUpdate
 @property  BOOL blacklisted
 @property  _WGBrokenWidgetView *brokenView
 @property  _WGLockedOutWidgetView *lockedOutView
 @property  NSMutableDictionary *sequenceIDsToOutstandingWidgetUpdateCompletionHandlers
 @property  BOOL ignoringParentAppearState
 @property  WGWidgetInfo *widgetInfo
 @property  NSString *widgetIdentifier
 @property  NSString *displayName
 @property  BSAuditToken *auditToken
 @property  <WGWidgetHostingViewControllerDelegate> *delegate
 @property  <WGWidgetHostingViewControllerHost> *host
 @property  long long largestAvailableDisplayMode
 @property  long long activeDisplayMode
 @property  long long userSpecifiedDisplayMode
 @property  BOOL remoteViewVisible
 @property  BOOL snapshotLoaded
 @property  BOOL brokenViewVisible
 @property  BOOL lockedOut
 @property  double cornerRadius
 @property  unsigned long maskedCorners
 @property  BOOL disconnectsImmediately

  // class methods
  +[WGWidgetHostingViewController setWidgetSnapshotTimestampsEnabled:]
  +[WGWidgetHostingViewController _canWidgetHostConnectRemoteViewControllerByRequestingForSequence:disconnectionTimer:connectionState:]
  +[WGWidgetHostingViewController _canWidgetHostConnectRemoteViewControllerByCancellingDisappearanceForSequence:]
  +[WGWidgetHostingViewController _canWidgetHostRequestRemoteViewControllerForSequence:]
  +[WGWidgetHostingViewController _canWidgetHostCaptureSnapshotForSequence:]
  +[WGWidgetHostingViewController _canWidgetHostInsertRemoteViewForSequence:]
  +[WGWidgetHostingViewController _canWidgetHostEndSequenceByDisconnectingRemoteViewControllerForSequence:]
  +[WGWidgetHostingViewController _canWidgetHostDisconnectRemoteViewControllerForSequence:disconnectionTimer:coalesce:]

  // instance methods
  -[WGWidgetHostingViewController dealloc]
  -[WGWidgetHostingViewController delegate]
  -[WGWidgetHostingViewController setDelegate:]
  -[WGWidgetHostingViewController host]
  -[WGWidgetHostingViewController .cxx_destruct]
  -[WGWidgetHostingViewController appBundleID]
  -[WGWidgetHostingViewController auditToken]
  -[WGWidgetHostingViewController setHost:]
  -[WGWidgetHostingViewController displayName]
  -[WGWidgetHostingViewController _containerIdentifier]
  -[WGWidgetHostingViewController _connectionState]
  -[WGWidgetHostingViewController setCornerRadius:]
  -[WGWidgetHostingViewController traitCollectionDidChange:]
  -[WGWidgetHostingViewController viewWillAppear:]
  -[WGWidgetHostingViewController viewWillDisappear:]
  -[WGWidgetHostingViewController setMaskedCorners:]
  -[WGWidgetHostingViewController viewDidLoad]
  -[WGWidgetHostingViewController setPreferredContentSize:]
  -[WGWidgetHostingViewController viewDidAppear:]
  -[WGWidgetHostingViewController viewDidDisappear:]
  -[WGWidgetHostingViewController cornerRadius]
  -[WGWidgetHostingViewController _layoutMargins]
  -[WGWidgetHostingViewController _cancelTouches]
  -[WGWidgetHostingViewController _snapshotView]
  -[WGWidgetHostingViewController shouldAutomaticallyForwardAppearanceMethods]
  -[WGWidgetHostingViewController _canShowWhileLocked]
  -[WGWidgetHostingViewController _remoteViewController]
  -[WGWidgetHostingViewController maskedCorners]
  -[WGWidgetHostingViewController setAppBundleID:]
  -[WGWidgetHostingViewController _marginInsets]
  -[WGWidgetHostingViewController isLockedOut]
  -[WGWidgetHostingViewController widgetIdentifier]
  -[WGWidgetHostingViewController _setLargestAvailableDisplayMode:]
  -[WGWidgetHostingViewController _isBlacklisted]
  -[WGWidgetHostingViewController _diskWriteQueue]
  -[WGWidgetHostingViewController initWithWidgetInfo:delegate:host:]
  -[WGWidgetHostingViewController widgetInfo]
  -[WGWidgetHostingViewController isRemoteViewVisible]
  -[WGWidgetHostingViewController isSnapshotLoaded]
  -[WGWidgetHostingViewController setLockedOut:withExplanation:]
  -[WGWidgetHostingViewController invalidateCachedSnapshotWithCompletionHandler:]
  -[WGWidgetHostingViewController invalidateCachedSnapshotWithURL:completionHandler:]
  -[WGWidgetHostingViewController _updateWidgetWithCompletionHandler:]
  -[WGWidgetHostingViewController isLinkedOnOrAfterSystemVersion:]
  -[WGWidgetHostingViewController requestSettingsIconWithHandler:]
  -[WGWidgetHostingViewController requestIconWithHandler:]
  -[WGWidgetHostingViewController setUserSpecifiedDisplayMode:]
  -[WGWidgetHostingViewController userSpecifiedDisplayMode]
  -[WGWidgetHostingViewController largestAvailableDisplayMode]
  -[WGWidgetHostingViewController managingContainerWillAppear:]
  -[WGWidgetHostingViewController isBrokenViewVisible]
  -[WGWidgetHostingViewController activeDisplayMode]
  -[WGWidgetHostingViewController managingContainerDidDisappear:]
  -[WGWidgetHostingViewController maximumSizeDidChangeForDisplayMode:]
  -[WGWidgetHostingViewController _invalidateVisibleFrame]
  -[WGWidgetHostingViewController setDisconnectsImmediately:]
  -[WGWidgetHostingViewController _removeItemAsynchronouslyAtURL:]
  -[WGWidgetHostingViewController _removeAllSnapshotFilesDueToIssue:]
  -[WGWidgetHostingViewController _updatePreferredContentSizeWithHeight:]
  -[WGWidgetHostingViewController _purgeLegacySnapshotsIfNecessary]
  -[WGWidgetHostingViewController _shouldRemoveSnapshotWhenNotVisible]
  -[WGWidgetHostingViewController _isActiveSequence:]
  -[WGWidgetHostingViewController _insertSnapshotWithCompletionHandler:]
  -[WGWidgetHostingViewController _synchronizeGeometryWithSnapshot]
  -[WGWidgetHostingViewController _loadSnapshotViewFromDiskIfNecessary:]
  -[WGWidgetHostingViewController _maxSizeForDisplayMode:]
  -[WGWidgetHostingViewController _rowHeightDidChange:]
  -[WGWidgetHostingViewController _activeLifeCycleSequence]
  -[WGWidgetHostingViewController _enqueueRemoteServiceRequest:withDescription:]
  -[WGWidgetHostingViewController setActiveDisplayMode:]
  -[WGWidgetHostingViewController _invalidateSnapshotWithForce:removingSnapshotFilesForActiveDisplayMode:completionHandler:]
  -[WGWidgetHostingViewController _widgetSnapshotURLForSnapshotIdentifier:ensuringDirectoryExists:]
  -[WGWidgetHostingViewController _insertLockedOutViewWithExplanation:]
  -[WGWidgetHostingViewController _endSequence:withReason:completion:]
  -[WGWidgetHostingViewController _endRemoteViewControllerAppearanceTransitionIfNecessary]
  -[WGWidgetHostingViewController _lockedOutView]
  -[WGWidgetHostingViewController _setLockedOutView:]
  -[WGWidgetHostingViewController _beginSequenceWithReason:completion:updateHandler:]
  -[WGWidgetHostingViewController _openAppearanceTransactions]
  -[WGWidgetHostingViewController _endRemoteViewControllerAppearanceTransitionIfNecessaryWithCompletion:]
  -[WGWidgetHostingViewController _validateSnapshotViewForActiveLayoutMode]
  -[WGWidgetHostingViewController _insertSnapshotViewIfAppropriate]
  -[WGWidgetHostingViewController _requestVisibilityStateUpdateForPossiblyAppearing:sequence:]
  -[WGWidgetHostingViewController _contentProvidingView]
  -[WGWidgetHostingViewController _insertContentProvidingSubview:sequence:completion:]
  -[WGWidgetHostingViewController _insertAppropriateContentView]
  -[WGWidgetHostingViewController _removeAllSnapshotFilesInActiveDisplayModeForContentSizeCategory:]
  -[WGWidgetHostingViewController _layoutMarginsDidChange]
  -[WGWidgetHostingViewController _removeAllSnapshotFilesInActiveDisplayModeForAllButActiveUserInterfaceStyle]
  -[WGWidgetHostingViewController _proxyRequestQueue]
  -[WGWidgetHostingViewController _enqueueRequest:inQueue:trampolinedToMainQueue:withDescription:]
  -[WGWidgetHostingViewController _initiateNewSequenceIfNecessary]
  -[WGWidgetHostingViewController _noteOutstandingUpdateRequestForSequence:]
  -[WGWidgetHostingViewController _updateRequestForSequence:]
  -[WGWidgetHostingViewController _registerUpdateRequestCompletionHandler:forSequence:]
  -[WGWidgetHostingViewController _performUpdateForSequence:withCompletionHandler:]
  -[WGWidgetHostingViewController _requestInsertionOfRemoteViewAfterViewWillAppearForSequence:completionHandler:]
  -[WGWidgetHostingViewController _abortActiveSequence]
  -[WGWidgetHostingViewController _connectRemoteViewControllerForReason:sequence:completionHandler:]
  -[WGWidgetHostingViewController _requestRemoteViewControllerForSequence:completionHander:]
  -[WGWidgetHostingViewController _invalidateDisconnectionTimer]
  -[WGWidgetHostingViewController _remoteViewControllerConnectionHandler]
  -[WGWidgetHostingViewController _setRemoteViewControllerConnectionHandler:]
  -[WGWidgetHostingViewController _setConnectionState:]
  -[WGWidgetHostingViewController _setExtensionRequest:]
  -[WGWidgetHostingViewController _finishDisconnectingRemoteViewControllerForSequence:error:completion:]
  -[WGWidgetHostingViewController _proxyConnectionQueue]
  -[WGWidgetHostingViewController _extensionRequest]
  -[WGWidgetHostingViewController _setRemoteViewController:]
  -[WGWidgetHostingViewController implementsPerformUpdate]
  -[WGWidgetHostingViewController _didUpdate]
  -[WGWidgetHostingViewController _setDidUpdate:]
  -[WGWidgetHostingViewController _setImplementsPerformUpdate:]
  -[WGWidgetHostingViewController _setIgnoringParentAppearState:]
  -[WGWidgetHostingViewController _viewWillDisappearSemaphore]
  -[WGWidgetHostingViewController _setViewWillDisappearSemaphore:]
  -[WGWidgetHostingViewController _removeAllSnapshotFilesForActiveDisplayMode]
  -[WGWidgetHostingViewController _setSnapshotView:]
  -[WGWidgetHostingViewController _packageViewFromURL:reply:]
  -[WGWidgetHostingViewController _captureLayerTree:]
  -[WGWidgetHostingViewController _beginRemoteViewControllerAppearanceTransitionIfNecessary:semaphore:animated:completion:]
  -[WGWidgetHostingViewController _snapshotIdentifierForLayoutMode:]
  -[WGWidgetHostingViewController _removeItemAtURL:]
  -[WGWidgetHostingViewController _removeAllSnapshotFilesMatchingPredicate:dueToIssue:]
  -[WGWidgetHostingViewController _isEncodingLayerTree]
  -[WGWidgetHostingViewController _setEncodingLayerTree:]
  -[WGWidgetHostingViewController _widgetSnapshotURLForLayoutMode:ensuringDirectoryExists:]
  -[WGWidgetHostingViewController _packageViewWithBlock:reply:]
  -[WGWidgetHostingViewController _setContentProvidingView:]
  -[WGWidgetHostingViewController _setViewWillAppearSemaphore:]
  -[WGWidgetHostingViewController _viewWillAppearSemaphore]
  -[WGWidgetHostingViewController _canInsertRemoteView:]
  -[WGWidgetHostingViewController _snapshotViewBounds]
  -[WGWidgetHostingViewController _managingContainerIsVisible]
  -[WGWidgetHostingViewController disconnectsImmediately]
  -[WGWidgetHostingViewController _disconnectRemoteViewControllerForReason:sequence:coalesce:completionHandler:]
  -[WGWidgetHostingViewController _captureSnapshotAndBeginDisappearanceTransitionForSequence:completionHandler:]
  -[WGWidgetHostingViewController _hasOutstandingUpdateRequestForSequence:]
  -[WGWidgetHostingViewController _scheduleDisconnectionTimerForSequence:endTransitionBlock:completion:]
  -[WGWidgetHostingViewController _enqueueDisconnectionRequestForSequence:endTransitionBlock:completion:]
  -[WGWidgetHostingViewController _disconnectRemoteViewControllerForSequence:completion:]
  -[WGWidgetHostingViewController _setRemoteViewControllerDisconnectionHandler:]
  -[WGWidgetHostingViewController widget:didTerminateWithError:]
  -[WGWidgetHostingViewController _attemptReconnectionAfterUnanticipatedDisconnection]
  -[WGWidgetHostingViewController _disconnectionTimerDidFire:]
  -[WGWidgetHostingViewController _setBlacklisted:]
  -[WGWidgetHostingViewController _insertBrokenView]
  -[WGWidgetHostingViewController _setLastUnanticipatedDisconnectionDate:]
  -[WGWidgetHostingViewController _brokenView]
  -[WGWidgetHostingViewController _setBrokenView:]
  -[WGWidgetHostingViewController handleReconnectionRequest:]
  -[WGWidgetHostingViewController _remoteViewControllerDisconnectionHandler]
  -[WGWidgetHostingViewController _setupRequestQueue]
  -[WGWidgetHostingViewController _widgetSnapshotURLForSnapshotIdentifier:]
  -[WGWidgetHostingViewController _setSnapshotBounds:]
  -[WGWidgetHostingViewController _didRequestViewInset]
  -[WGWidgetHostingViewController _setDidRequestViewInset:]
  -[WGWidgetHostingViewController _disconnectionTimer]
  -[WGWidgetHostingViewController _setDisconnectionTimer:]
  -[WGWidgetHostingViewController _lastUnanticipatedDisconnectionDate]
  -[WGWidgetHostingViewController _sequenceIDsToOutstandingWidgetUpdateCompletionHandlers]
  -[WGWidgetHostingViewController _setSequenceIDsToOutstandingWidgetUpdateCompletionHandlers:]
  -[WGWidgetHostingViewController _isIgnoringParentAppearState]


_WGWidgetRemoteViewController : _UIRemoteViewController /System/Library/PrivateFrameworks/Weather.framework/Weather <_NCWidgetViewController_Host_IPC>
 @property  BOOL valid
 @property  WGWidgetHostingViewController *managingHost
 @property  NSObject<OS_dispatch_queue> *managingHostQueue

  // class methods
  +[_WGWidgetRemoteViewController exportedInterface]
  +[_WGWidgetRemoteViewController serviceViewControllerInterface]

  // instance methods
  -[_WGWidgetRemoteViewController dealloc]
  -[_WGWidgetRemoteViewController .cxx_destruct]
  -[_WGWidgetRemoteViewController disconnect]
  -[_WGWidgetRemoteViewController initWithNibName:bundle:]
  -[_WGWidgetRemoteViewController _isValid]
  -[_WGWidgetRemoteViewController _canShowWhileLocked]
  -[_WGWidgetRemoteViewController viewServiceDidTerminateWithError:]
  -[_WGWidgetRemoteViewController __shouldRemoteViewControllerFenceOperations]
  -[_WGWidgetRemoteViewController _serviceHasScrollToTopView]
  -[_WGWidgetRemoteViewController __viewServiceDidRegisterScrollToTopView]
  -[_WGWidgetRemoteViewController __viewServiceDidUnregisterScrollToTopView]
  -[_WGWidgetRemoteViewController _setValid:]
  -[_WGWidgetRemoteViewController __requestPreferredViewHeight:]
  -[_WGWidgetRemoteViewController __closeTransactionForAppearanceCallWithState:withIdentifier:]
  -[_WGWidgetRemoteViewController __setLargestAvailableDisplayMode:]
  -[_WGWidgetRemoteViewController _setActiveDisplayMode:]
  -[_WGWidgetRemoteViewController _setMaximumSize:forDisplayMode:]
  -[_WGWidgetRemoteViewController _openTransactionForAppearanceCallWithState:withIdentifier:]
  -[_WGWidgetRemoteViewController setManagingHost:]
  -[_WGWidgetRemoteViewController _performUpdateWithReplyHandler:]
  -[_WGWidgetRemoteViewController _requestEncodedLayerTreeAtURL:withReplyHandler:]
  -[_WGWidgetRemoteViewController _updateVisibilityState:]
  -[_WGWidgetRemoteViewController _updateLayoutMargins:]
  -[_WGWidgetRemoteViewController _updateVisibleFrame:withReplyHandler:]
  -[_WGWidgetRemoteViewController managingHostQueue]
  -[_WGWidgetRemoteViewController managingHost]


_WGBrokenWidgetView : WGExplanatoryView
  // instance methods
  -[_WGBrokenWidgetView init]


_WGLockedOutWidgetView : WGExplanatoryView
  // instance methods
  -[_WGLockedOutWidgetView initWithExplanation:]


WGShortLookStyleButton : UIControl /System/Library/PrivateFrameworks/Weather.framework/Weather <MTMaterialGrouping>
 @property  NSString *title
 @property  BOOL backgroundBlurred
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *materialGroupNameBase

  // instance methods
  -[WGShortLookStyleButton .cxx_destruct]
  -[WGShortLookStyleButton _size]
  -[WGShortLookStyleButton title]
  -[WGShortLookStyleButton setTitle:]
  -[WGShortLookStyleButton intrinsicContentSize]
  -[WGShortLookStyleButton traitCollectionDidChange:]
  -[WGShortLookStyleButton gestureRecognizerShouldBegin:]
  -[WGShortLookStyleButton sizeThatFits:]
  -[WGShortLookStyleButton layoutSubviews]
  -[WGShortLookStyleButton setHighlighted:]
  -[WGShortLookStyleButton pointInside:withEvent:]
  -[WGShortLookStyleButton _updateHighlight]
  -[WGShortLookStyleButton materialGroupNameBase]
  -[WGShortLookStyleButton setMaterialGroupNameBase:]
  -[WGShortLookStyleButton setBackgroundBlurred:]
  -[WGShortLookStyleButton isBackgroundBlurred]
  -[WGShortLookStyleButton fontForTitle:]
  -[WGShortLookStyleButton _updateTitleLabelFont]
  -[WGShortLookStyleButton _configureBackgroundViewIfNecessary]
  -[WGShortLookStyleButton _backgroundViewCornerRadius]
  -[WGShortLookStyleButton _setBackgroundViewCornerRadius:]
  -[WGShortLookStyleButton _configureTitleLabelIfNecessary]
  -[WGShortLookStyleButton invalidateCachedGeometry]
  -[WGShortLookStyleButton _layoutTitleLabel]
  -[WGShortLookStyleButton _configureMaskIfNecessary]
  -[WGShortLookStyleButton _updateTouchInsetsIfNecessary]
  -[WGShortLookStyleButton _fontProvider]


WGWidgetGroupViewController : UIViewController /System/Library/PrivateFrameworks/Weather.framework/Weather <WGWidgetDebugging, WGWidgetDiscoveryObserving, WGWidgetListViewControllerDelegatePrivate, WGMajorListViewControllerDelegate, WGWidgetExtensionVisibilityProviding, WGWidgetIconAnimationExtraViewsProviding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <WGWidgetGroupViewControllerDelegate> *delegate
 @property  unsigned long location
 @property  UIScrollView *majorScrollView
 @property  unsigned long widgetCount
 @property  BOOL shouldBlurContent
 @property  {UIEdgeInsets=dddd} contentOccludingInset
 @property  UIViewController *headerContentViewController
 @property  BOOL headerVisible
 @property  {WGWidgetListSettings=QBBB} listSettings
 @property  UIControl *editButton
 @property  BOOL editingIcons
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  UIView *extraViewsContainer
 @property  NSArray *extraViews
 @property  BOOL shouldAnimateLastTwoViewsAsOne
 @property  BOOL shouldAnimateFirstTwoViewsAsOne

  // instance methods
  -[WGWidgetGroupViewController delegate]
  -[WGWidgetGroupViewController setDelegate:]
  -[WGWidgetGroupViewController .cxx_destruct]
  -[WGWidgetGroupViewController location]
  -[WGWidgetGroupViewController setLocation:]
  -[WGWidgetGroupViewController scrollViewDidScroll:]
  -[WGWidgetGroupViewController scrollViewWillBeginDragging:]
  -[WGWidgetGroupViewController scrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[WGWidgetGroupViewController scrollViewDidEndDragging:willDecelerate:]
  -[WGWidgetGroupViewController scrollViewWillBeginDecelerating:]
  -[WGWidgetGroupViewController scrollViewDidEndDecelerating:]
  -[WGWidgetGroupViewController scrollViewDidEndScrollingAnimation:]
  -[WGWidgetGroupViewController scrollViewShouldScrollToTop:]
  -[WGWidgetGroupViewController scrollViewDidScrollToTop:]
  -[WGWidgetGroupViewController viewWillAppear:]
  -[WGWidgetGroupViewController viewWillDisappear:]
  -[WGWidgetGroupViewController viewDidLoad]
  -[WGWidgetGroupViewController viewDidAppear:]
  -[WGWidgetGroupViewController viewDidDisappear:]
  -[WGWidgetGroupViewController headerContentViewController]
  -[WGWidgetGroupViewController shouldAutomaticallyForwardAppearanceMethods]
  -[WGWidgetGroupViewController _canShowWhileLocked]
  -[WGWidgetGroupViewController setLegibilitySettings:]
  -[WGWidgetGroupViewController editButton]
  -[WGWidgetGroupViewController setEditButton:]
  -[WGWidgetGroupViewController extraViewsContainer]
  -[WGWidgetGroupViewController extraViews]
  -[WGWidgetGroupViewController shouldAnimateLastTwoViewsAsOne]
  -[WGWidgetGroupViewController shouldAnimateFirstTwoViewsAsOne]
  -[WGWidgetGroupViewController setEditingIcons:]
  -[WGWidgetGroupViewController listSettings]
  -[WGWidgetGroupViewController setHeaderContentViewController:]
  -[WGWidgetGroupViewController isWidgetExtensionVisible:]
  -[WGWidgetGroupViewController widgetDiscoveryController:widgetWithIdentifier:shouldBecomeVisibleInGroup:]
  -[WGWidgetGroupViewController widgetDiscoveryController:widgetWithIdentifier:shouldBecomeHiddenInGroup:]
  -[WGWidgetGroupViewController makeVisibleWidgetWithIdentifier:completion:]
  -[WGWidgetGroupViewController isEditingIcons]
  -[WGWidgetGroupViewController initWithWidgetDiscoveryController:listSettings:]
  -[WGWidgetGroupViewController setListSettings:]
  -[WGWidgetGroupViewController widgetListViewController:sizeForInterfaceOrientation:]
  -[WGWidgetGroupViewController widgetListViewController:contentOccludingInsetsForInterfaceOrientation:]
  -[WGWidgetGroupViewController widgetCount]
  -[WGWidgetGroupViewController setShouldBlurContent:]
  -[WGWidgetGroupViewController shouldBlurContent]
  -[WGWidgetGroupViewController majorListViewControllerDidChangeHeaderVisibility:]
  -[WGWidgetGroupViewController isHeaderVisible]
  -[WGWidgetGroupViewController editViewWillAppear:]
  -[WGWidgetGroupViewController editViewDidAppear:]
  -[WGWidgetGroupViewController editViewWillDisappear:]
  -[WGWidgetGroupViewController editViewDidDisappear:]
  -[WGWidgetGroupViewController _scrollViewForListViewController:]
  -[WGWidgetGroupViewController _loadWidgetListViewController]
  -[WGWidgetGroupViewController invalidateVisibleWidgets]
  -[WGWidgetGroupViewController _layoutModeForSize:]
  -[WGWidgetGroupViewController contentOccludingInset]
  -[WGWidgetGroupViewController majorScrollView]
  -[WGWidgetGroupViewController _activeLayoutMode]
  -[WGWidgetGroupViewController setContentOccludingInset:]
  -[WGWidgetGroupViewController presentEditViewWithCompletion:]


UIImage(Widgets)
	// instance methods
	-[UIImage(Widgets) imagesWithSpriteSize:]

NSExtension(WidgetAdditions)
	// instance methods
	-[NSExtension(WidgetAdditions) wg_description]
	-[NSExtension(WidgetAdditions) wg_hasExplicitUserElectionState]

NSExtensionContext(WidgetAdditions)
	// instance methods
	-[NSExtensionContext(WidgetAdditions) widgetMaximumSizeForDisplayMode:]
	-[NSExtensionContext(WidgetAdditions) widgetLargestAvailableDisplayMode]
	-[NSExtensionContext(WidgetAdditions) setWidgetLargestAvailableDisplayMode:]
	-[NSExtensionContext(WidgetAdditions) widgetActiveDisplayMode]

UIView(WGCAPackageViewAdditions)
	// instance methods
	-[UIView(WGCAPackageViewAdditions) wg_supportsBottomCornerRadiusGivenRootView:withCornerRadius:supportedCorners:]
	-[UIView(WGCAPackageViewAdditions) wg_walkSubviewTreeWithBlock:]
	-[UIView(WGCAPackageViewAdditions) _wg_innerWalkSubviewTreeWithBlock:stop:]
	-[UIView(WGCAPackageViewAdditions) wg_imageContentsDrawWithinBounds]

UIViewController(Widgets)
	// instance methods
	-[UIViewController(Widgets) wg_isAppearingOrAppeared]
	-[UIViewController(Widgets) wg_isAppearanceTransitioning]
	-[UIViewController(Widgets) wg_beginAppearanceTransitionIfNecessary:animated:]
	-[UIViewController(Widgets) wg_endAppearanceTransitionIfNecessary]
	-[UIViewController(Widgets) wg_isDisappearingOrDisappeared]

01 00 0500 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSAuditToken 
01 00 0500 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSPlatform 
01 00 0600 /System/Library/PrivateFrameworks/BaseBoardUI.framework/BaseBoardUI: BSUICAPackageView 
01 00 0600 /System/Library/PrivateFrameworks/BaseBoardUI.framework/BaseBoardUI: BSUIFontProvider 
01 00 0600 /System/Library/PrivateFrameworks/BaseBoardUI.framework/BaseBoardUI: BSUIMappedImageCache 
01 00 1300 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CALayer 
01 00 1300 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMediaTimingFunction 
01 00 1300 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAShapeLayer 
01 00 1300 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CASpringAnimation 
01 00 0b00 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: FBSOpenApplicationOptions 
01 00 0b00 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: FBSOpenApplicationService 
01 00 0300 /System/Library/PrivateFrameworks/IconServices.framework/IconServices: ISIcon 
01 00 0300 /System/Library/PrivateFrameworks/IconServices.framework/IconServices: ISImage 
01 00 0300 /System/Library/PrivateFrameworks/IconServices.framework/IconServices: ISImageDescriptor 
01 00 0d00 /System/Library/PrivateFrameworks/LockoutUI.framework/LockoutUI: LOViewController 
01 00 1b00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationProxy 
01 00 1b00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationWorkspace 
01 00 1b00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSBundleProxy 
01 00 1b00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSPlugInKitProxy 
01 00 0e00 /System/Library/PrivateFrameworks/MaterialKit.framework/MaterialKit: MTMaterialView 
01 00 0100 /System/Library/PrivateFrameworks/NCLaunchStats.framework/NCLaunchStats: NCLaunchStats 
01 00 1000 /System/Library/Frameworks/NotificationCenter.framework/NotificationCenter: NCWidgetMetrics 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1700 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 1700 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 1700 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCache 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1700 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1700 /System/Library/Frameworks/Foundation.framework/Foundation: NSDistributedNotificationCenter 
01 00 1700 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1700 /System/Library/Frameworks/Foundation.framework/Foundation: NSExtension 
01 00 1700 /System/Library/Frameworks/Foundation.framework/Foundation: NSExtensionContext 
01 00 1700 /System/Library/Frameworks/Foundation.framework/Foundation: NSExtensionItem 
01 00 1700 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 1700 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexPath 
01 00 1700 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexSet 
01 00 1700 /System/Library/Frameworks/Foundation.framework/Foundation: NSLayoutConstraint 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 1700 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1700 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableAttributedString 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1500 /System/Library/Frameworks/UIKit.framework/UIKit: NSMutableParagraphStyle 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 1700 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 1700 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1700 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1800 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1700 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 1500 /System/Library/Frameworks/UIKit.framework/UIKit: NSParagraphStyle 
01 00 1700 /System/Library/Frameworks/Foundation.framework/Foundation: NSPointerArray 
01 00 1700 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1700 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1500 /System/Library/Frameworks/UIKit.framework/UIKit: NSTextAttachment 
01 00 1700 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 1700 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 1700 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 1700 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 1700 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListener 
01 00 1200 /System/Library/PrivateFrameworks/ProactiveEventTracker.framework/ProactiveEventTracker: PETDistributionEventTracker 
01 00 1200 /System/Library/PrivateFrameworks/ProactiveEventTracker.framework/ProactiveEventTracker: PETEventProperty 
01 00 1200 /System/Library/PrivateFrameworks/ProactiveEventTracker.framework/ProactiveEventTracker: PETScalarEventTracker 
01 00 1100 /System/Library/PrivateFrameworks/PlatterKit.framework/PlatterKit: PLPlatterHeaderContentView 
01 00 1500 /System/Library/Frameworks/UIKit.framework/UIKit: UIBarButtonItem 
01 00 1500 /System/Library/Frameworks/UIKit.framework/UIKit: UIBezierPath 
01 00 1500 /System/Library/Frameworks/UIKit.framework/UIKit: UIButton 
01 00 1500 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 1500 /System/Library/Frameworks/UIKit.framework/UIKit: UIControl 
01 00 1500 /System/Library/Frameworks/UIKit.framework/UIKit: UIDevice 
01 00 1500 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 1500 /System/Library/Frameworks/UIKit.framework/UIKit: UIFontDescriptor 
01 00 1500 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 1500 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageSymbolConfiguration 
01 00 1500 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 1500 /System/Library/Frameworks/UIKit.framework/UIKit: UILabel 
01 00 1500 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationController 
01 00 1500 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 1500 /System/Library/Frameworks/UIKit.framework/UIKit: UIScrollView 
01 00 1500 /System/Library/Frameworks/UIKit.framework/UIKit: UIStackView 
01 00 1500 /System/Library/Frameworks/UIKit.framework/UIKit: UISwitch 
01 00 1500 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewCell 
01 00 1500 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewController 
01 00 1500 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewHeaderFooterView 
01 00 1500 /System/Library/Frameworks/UIKit.framework/UIKit: UITapGestureRecognizer 
01 00 1500 /System/Library/Frameworks/UIKit.framework/UIKit: UITextView 
01 00 1500 /System/Library/Frameworks/UIKit.framework/UIKit: UITraitCollection 
01 00 1500 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 1500 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 1500 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewFloatAnimatableProperty 
01 00 1500 /System/Library/Frameworks/UIKit.framework/UIKit: _UICAPackageView 
01 00 1500 /System/Library/Frameworks/UIKit.framework/UIKit: _UIRemoteViewController 
01 00 1500 /System/Library/Frameworks/UIKit.framework/UIKit: _UIViewControllerTransitionContext 
