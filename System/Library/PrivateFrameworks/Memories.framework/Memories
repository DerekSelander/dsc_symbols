|| __DATA.__common _MiroMusicPickerSongPreviewProgressChanged
|| __DATA.__common ___debugMode
|| __DATA.__common ___displayAsExport
|| __DATA.__common ___ignoreReadOnly
|| __DATA.__common ___scrubTestFrameCount
|| __DATA.__common ___scrubTestMode
|| __DATA.__common ___scrubTestStartTime
|| __DATA.__common ___scrubTestTextView
|| __DATA.__common ___showDuration
|| __DATA.__common __assetPropertyTypeSongUIDToMobileAssetMap
|| __DATA.__common __assetPropertyTypeToMobileAssetMap
|| __DATA.__common _gIOSPMRTime1
|| __DATA.__common _global_AtExitPMiOSMainViewController
|| __DATA.__common _s_livingGeneratorThrottle
|| __DATA.__data _PMFailedDownloadAssetCountKey
|| __DATA.__data _PMTotalAssetCountKey
|| __DATA.__data ___allowSaving
|| __DATA.__data _cSubFolderName_BodySegments
|| __DATA.__data _cSubFolderName_CrossfadeSegments
|| __DATA.__data _cSubFolderName_IntroSegments
|| __DATA.__data _cSubFolderName_OutroSegments
|| __DATA.__data _cSubFolderName_TransSegments
|| __DATA.__data _crossFadeFormatString
|| __DATA.__data _kMiroActivityItemProvide_TapToRadarInitated
|| __DATA.__data _kMiroActivityItemProvider_ExportDidCompleteSuccessfully
|| __DATA.__data _kMiroContentEditorWillShow
|| __DATA.__data _kPMActivityItemProvider_ExportDidEnd
|| __DATA.__data _kPMActivityItemProvider_ExportWillBegin
|| __DATA.__data _kPMPlayerControllingDidBeginPlayingNotification
|| __DATA.__data _kPMPlayerControllingDidPlayToEndTimeNotification
|| __DATA.__data _kSliderCellID
|| __DATA.__objc_data _OBJC_CLASS_$_DurationDisplayData
|| __DATA.__objc_data _OBJC_CLASS_$_FMClip
|| __DATA.__objc_data _OBJC_CLASS_$_FMDownloadOptions
|| __DATA.__objc_data _OBJC_CLASS_$_FMFetchOptions
|| __DATA.__objc_data _OBJC_CLASS_$_FMKeyFrame
|| __DATA.__objc_data _OBJC_CLASS_$_FMMixParameters
|| __DATA.__objc_data _OBJC_CLASS_$_FMSong
|| __DATA.__objc_data _OBJC_CLASS_$_FMSongAsset
|| __DATA.__objc_data _OBJC_CLASS_$_FMSongLibrary
|| __DATA.__objc_data _OBJC_CLASS_$_FMSongRendition
|| __DATA.__objc_data _OBJC_CLASS_$_FMTimedMetadataItem
|| __DATA.__objc_data _OBJC_CLASS_$_FMTrack
|| __DATA.__objc_data _OBJC_CLASS_$_FlexCloudFetchOptions
|| __DATA.__objc_data _OBJC_CLASS_$_FlexCloudManager
|| __DATA.__objc_data _OBJC_CLASS_$_FlexCloudSongAsset
|| __DATA.__objc_data _OBJC_CLASS_$_FlexLegacySongRendition
|| __DATA.__objc_data _OBJC_CLASS_$_FlexMLGainValue
|| __DATA.__objc_data _OBJC_CLASS_$_FlexMLSegment
|| __DATA.__objc_data _OBJC_CLASS_$_FlexMLSong
|| __DATA.__objc_data _OBJC_CLASS_$_FlexMLSongRendition
|| __DATA.__objc_data _OBJC_CLASS_$_FlexMLSummary
|| __DATA.__objc_data _OBJC_CLASS_$_FlexMLSummaryManager
|| __DATA.__objc_data _OBJC_CLASS_$_FlexMarker
|| __DATA.__objc_data _OBJC_CLASS_$_FlexMobileAssetManager
|| __DATA.__objc_data _OBJC_CLASS_$_FlexMobileAssetManagerV2
|| __DATA.__objc_data _OBJC_CLASS_$_FlexMobileAssetSongAsset
|| __DATA.__objc_data _OBJC_CLASS_$_FlexMobileAssetV2SongAsset
|| __DATA.__objc_data _OBJC_CLASS_$_FlexReachability
|| __DATA.__objc_data _OBJC_CLASS_$_FlexSegment
|| __DATA.__objc_data _OBJC_CLASS_$_FlexSegmentAssemblyInfo
|| __DATA.__objc_data _OBJC_CLASS_$_FlexSegmentAudioFileInfo
|| __DATA.__objc_data _OBJC_CLASS_$_FlexSong
|| __DATA.__objc_data _OBJC_CLASS_$_FlexSongAssetProvider_V1
|| __DATA.__objc_data _OBJC_CLASS_$_FlexSongAssetProvider_V2
|| __DATA.__objc_data _OBJC_CLASS_$_FlexSongBackend
|| __DATA.__objc_data _OBJC_CLASS_$_FlexSongMetaDataReader_V2
|| __DATA.__objc_data _OBJC_CLASS_$_FlexSongMetadataReaderUtils
|| __DATA.__objc_data _OBJC_CLASS_$_FlexSongProxy
|| __DATA.__objc_data _OBJC_CLASS_$_FlexTransition
|| __DATA.__objc_data _OBJC_CLASS_$_FlexUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_MemoriesHomeScreen
|| __DATA.__objc_data _OBJC_CLASS_$_MemoriesViewController
|| __DATA.__objc_data _OBJC_CLASS_$_MiroAppDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_MiroAssetSuggestionsCollectionViewCell
|| __DATA.__objc_data _OBJC_CLASS_$_MiroAssetSuggestionsCollectionViewController
|| __DATA.__objc_data _OBJC_CLASS_$_MiroAssetSuggestionsNavigationController
|| __DATA.__objc_data _OBJC_CLASS_$_MiroCircularProgressBar
|| __DATA.__objc_data _OBJC_CLASS_$_MiroCircularProgressLayer
|| __DATA.__objc_data _OBJC_CLASS_$_MiroContentEditorNavigationController
|| __DATA.__objc_data _OBJC_CLASS_$_MiroContentEditorViewController
|| __DATA.__objc_data _OBJC_CLASS_$_MiroDurationPickerCell
|| __DATA.__objc_data _OBJC_CLASS_$_MiroEditorClipCell
|| __DATA.__objc_data _OBJC_CLASS_$_MiroEditorClipCollectionViewController
|| __DATA.__objc_data _OBJC_CLASS_$_MiroEditorClipDebugView
|| __DATA.__objc_data _OBJC_CLASS_$_MiroEditorColorSwatchCell
|| __DATA.__objc_data _OBJC_CLASS_$_MiroEditorFlowLayout
|| __DATA.__objc_data _OBJC_CLASS_$_MiroExportController
|| __DATA.__objc_data _OBJC_CLASS_$_MiroKeyAssetSuggestionsCollectionsViewController
|| __DATA.__objc_data _OBJC_CLASS_$_MiroMovie
|| __DATA.__objc_data _OBJC_CLASS_$_MiroMovieView
|| __DATA.__objc_data _OBJC_CLASS_$_MiroMusicMenuCell
|| __DATA.__objc_data _OBJC_CLASS_$_MiroMusicMenuViewController
|| __DATA.__objc_data _OBJC_CLASS_$_MiroPPT
|| __DATA.__objc_data _OBJC_CLASS_$_MiroPlayerViewController
|| __DATA.__objc_data _OBJC_CLASS_$_MiroPlayheadView
|| __DATA.__objc_data _OBJC_CLASS_$_MiroProgressWatcher
|| __DATA.__objc_data _OBJC_CLASS_$_MiroProject
|| __DATA.__objc_data _OBJC_CLASS_$_MiroScrollViewSpeedometer
|| __DATA.__objc_data _OBJC_CLASS_$_MiroSmartMusicMenuCell
|| __DATA.__objc_data _OBJC_CLASS_$_MiroSmartMusicMenuHeaderView
|| __DATA.__objc_data _OBJC_CLASS_$_MiroSmartMusicMenuViewController
|| __DATA.__objc_data _OBJC_CLASS_$_MiroSongPreviewButton
|| __DATA.__objc_data _OBJC_CLASS_$_MiroTimelineClipCollectionViewController
|| __DATA.__objc_data _OBJC_CLASS_$_MiroTitleSubtitleView
|| __DATA.__objc_data _OBJC_CLASS_$_MiroTouchingGestureRecognizer
|| __DATA.__objc_data _OBJC_CLASS_$_MiroTwoLabelButton
|| __DATA.__objc_data _OBJC_CLASS_$_PMAVSynchronizedView
|| __DATA.__objc_data _OBJC_CLASS_$_PMActivityItemProvider
|| __DATA.__objc_data _OBJC_CLASS_$_PMActivityViewController
|| __DATA.__objc_data _OBJC_CLASS_$_PMAirplayActivity
|| __DATA.__objc_data _OBJC_CLASS_$_PMAnalyticsHelper
|| __DATA.__objc_data _OBJC_CLASS_$_PMClipCollectionProvider
|| __DATA.__objc_data _OBJC_CLASS_$_PMClipProvider
|| __DATA.__objc_data _OBJC_CLASS_$_PMCollectionViewGridLayout
|| __DATA.__objc_data _OBJC_CLASS_$_PMColorActivityIndicatorView
|| __DATA.__objc_data _OBJC_CLASS_$_PMCopyToPasteboardActivity
|| __DATA.__objc_data _OBJC_CLASS_$_PMCoreAnalyticsEvent
|| __DATA.__objc_data _OBJC_CLASS_$_PMDebugCollectionViewCell
|| __DATA.__objc_data _OBJC_CLASS_$_PMDebugCollectionViewController
|| __DATA.__objc_data _OBJC_CLASS_$_PMDebugPickerViewController
|| __DATA.__objc_data _OBJC_CLASS_$_PMDurationProvider
|| __DATA.__objc_data _OBJC_CLASS_$_PMEditorBasePlayerViewController
|| __DATA.__objc_data _OBJC_CLASS_$_PMEditorBottomToolbar
|| __DATA.__objc_data _OBJC_CLASS_$_PMEditorDebugContainerViewController
|| __DATA.__objc_data _OBJC_CLASS_$_PMEditorDurationViewController
|| __DATA.__objc_data _OBJC_CLASS_$_PMEditorMenuTableViewCell
|| __DATA.__objc_data _OBJC_CLASS_$_PMEditorMenuViewController
|| __DATA.__objc_data _OBJC_CLASS_$_PMEditorNavigationController
|| __DATA.__objc_data _OBJC_CLASS_$_PMEditorRootViewController
|| __DATA.__objc_data _OBJC_CLASS_$_PMEditorTitleTableViewCell
|| __DATA.__objc_data _OBJC_CLASS_$_PMEditorTitleViewController
|| __DATA.__objc_data _OBJC_CLASS_$_PMFlatVideoOverlayButton
|| __DATA.__objc_data _OBJC_CLASS_$_PMHighFidelityVideoOverlayButton
|| __DATA.__objc_data _OBJC_CLASS_$_PMInteractiveCollectionView
|| __DATA.__objc_data _OBJC_CLASS_$_PMMemoryDebugInfo
|| __DATA.__objc_data _OBJC_CLASS_$_PMMoodProvider
|| __DATA.__objc_data _OBJC_CLASS_$_PMMovieContainerViewController
|| __DATA.__objc_data _OBJC_CLASS_$_PMMovieProvider
|| __DATA.__objc_data _OBJC_CLASS_$_PMMovieProviderAnalyticsEvent
|| __DATA.__objc_data _OBJC_CLASS_$_PMMusicCategoryMenuViewController
|| __DATA.__objc_data _OBJC_CLASS_$_PMMusicMenuLabelCell
|| __DATA.__objc_data _OBJC_CLASS_$_PMMusicNavigationController
|| __DATA.__objc_data _OBJC_CLASS_$_PMMusicProvider
|| __DATA.__objc_data _OBJC_CLASS_$_PMOpenInIMovieActivity
|| __DATA.__objc_data _OBJC_CLASS_$_PMPXFeatureSpec
|| __DATA.__objc_data _OBJC_CLASS_$_PMPassthroughView
|| __DATA.__objc_data _OBJC_CLASS_$_PMPipelineAnalyticsEvent
|| __DATA.__objc_data _OBJC_CLASS_$_PMPosterContainerView
|| __DATA.__objc_data _OBJC_CLASS_$_PMPosterViewController
|| __DATA.__objc_data _OBJC_CLASS_$_PMRotationViewController
|| __DATA.__objc_data _OBJC_CLASS_$_PMRoundProgressLayer
|| __DATA.__objc_data _OBJC_CLASS_$_PMRoundProgressView
|| __DATA.__objc_data _OBJC_CLASS_$_PMRoundProgressViewController
|| __DATA.__objc_data _OBJC_CLASS_$_PMSaveProvider
|| __DATA.__objc_data _OBJC_CLASS_$_PMSaveVideoActivity
|| __DATA.__objc_data _OBJC_CLASS_$_PMScrubberImageSource
|| __DATA.__objc_data _OBJC_CLASS_$_PMScrubberProvider
|| __DATA.__objc_data _OBJC_CLASS_$_PMShareAnalyticsEvent
|| __DATA.__objc_data _OBJC_CLASS_$_PMShareOrientationSelectionViewController
|| __DATA.__objc_data _OBJC_CLASS_$_PMSpinnerPlayPauseOverlay
|| __DATA.__objc_data _OBJC_CLASS_$_PMTTRLoadingViewController
|| __DATA.__objc_data _OBJC_CLASS_$_PMTapToRadarActivity
|| __DATA.__objc_data _OBJC_CLASS_$_PMTitleEditorProvider
|| __DATA.__objc_data _OBJC_CLASS_$_PMTitleSubtitleView
|| __DATA.__objc_data _OBJC_CLASS_$_PMTrimmerDebugView
|| __DATA.__objc_data _OBJC_CLASS_$_PMTrimmerViewController
|| __DATA.__objc_data _OBJC_CLASS_$_PMiOSMainViewController
|| __DATA.__objc_data _OBJC_CLASS_$_PMiOSPlayheadView
|| __DATA.__objc_data _OBJC_CLASS_$_PMiOSProgressViewController
|| __DATA.__objc_data _OBJC_CLASS_$_PMiOSScrubberCollectionView
|| __DATA.__objc_data _OBJC_CLASS_$_PMiOSScrubberCollectionViewCell
|| __DATA.__objc_data _OBJC_CLASS_$_PMiOSScrubberViewController
|| __DATA.__objc_data _OBJC_CLASS_$_PMiOSSliderCell
|| __DATA.__objc_data _OBJC_CLASS_$_PMiOSTimeLabelView
|| __DATA.__objc_data _OBJC_CLASS_$_VEKAutoEditStage
|| __DATA.__objc_data _OBJC_CLASS_$_VEKBlueprint
|| __DATA.__objc_data _OBJC_CLASS_$_VEKClipSuggestion
|| __DATA.__objc_data _OBJC_CLASS_$_VEKDownloadStage
|| __DATA.__objc_data _OBJC_CLASS_$_VEKExportPreset
|| __DATA.__objc_data _OBJC_CLASS_$_VEKMovieCompositionStage
|| __DATA.__objc_data _OBJC_CLASS_$_VEKPicklistStage
|| __DATA.__objc_data _OBJC_CLASS_$_VEKPipeline
|| __DATA.__objc_data _OBJC_CLASS_$_VEKPipelineStage
|| __DATA.__objc_data _OBJC_CLASS_$_VEKPlayerItem
|| __DATA.__objc_data _OBJC_CLASS_$_VEKProduction
|| __DATA.__objc_data _OBJC_CLASS_$_VEKProgress
|| __DATA.__objc_data _OBJC_CLASS_$_VEKRangeSuggestion
|| __DATA.__objc_data _OBJC_CLASS_$_VEKResult
|| __DATA.__objc_data _OBJC_CLASS_$_VEKSuggestion
|| __DATA.__objc_data _OBJC_CLASS_$__PMTrimmerContainerView
|| __DATA.__objc_data _OBJC_METACLASS_$_DurationDisplayData
|| __DATA.__objc_data _OBJC_METACLASS_$_FMClip
|| __DATA.__objc_data _OBJC_METACLASS_$_FMDownloadOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_FMFetchOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_FMKeyFrame
|| __DATA.__objc_data _OBJC_METACLASS_$_FMMixParameters
|| __DATA.__objc_data _OBJC_METACLASS_$_FMSong
|| __DATA.__objc_data _OBJC_METACLASS_$_FMSongAsset
|| __DATA.__objc_data _OBJC_METACLASS_$_FMSongLibrary
|| __DATA.__objc_data _OBJC_METACLASS_$_FMSongRendition
|| __DATA.__objc_data _OBJC_METACLASS_$_FMTimedMetadataItem
|| __DATA.__objc_data _OBJC_METACLASS_$_FMTrack
|| __DATA.__objc_data _OBJC_METACLASS_$_FlexCloudFetchOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_FlexCloudManager
|| __DATA.__objc_data _OBJC_METACLASS_$_FlexCloudSongAsset
|| __DATA.__objc_data _OBJC_METACLASS_$_FlexLegacySongRendition
|| __DATA.__objc_data _OBJC_METACLASS_$_FlexMLGainValue
|| __DATA.__objc_data _OBJC_METACLASS_$_FlexMLSegment
|| __DATA.__objc_data _OBJC_METACLASS_$_FlexMLSong
|| __DATA.__objc_data _OBJC_METACLASS_$_FlexMLSongRendition
|| __DATA.__objc_data _OBJC_METACLASS_$_FlexMLSummary
|| __DATA.__objc_data _OBJC_METACLASS_$_FlexMLSummaryManager
|| __DATA.__objc_data _OBJC_METACLASS_$_FlexMarker
|| __DATA.__objc_data _OBJC_METACLASS_$_FlexMobileAssetManager
|| __DATA.__objc_data _OBJC_METACLASS_$_FlexMobileAssetManagerV2
|| __DATA.__objc_data _OBJC_METACLASS_$_FlexMobileAssetSongAsset
|| __DATA.__objc_data _OBJC_METACLASS_$_FlexMobileAssetV2SongAsset
|| __DATA.__objc_data _OBJC_METACLASS_$_FlexReachability
|| __DATA.__objc_data _OBJC_METACLASS_$_FlexSegment
|| __DATA.__objc_data _OBJC_METACLASS_$_FlexSegmentAssemblyInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_FlexSegmentAudioFileInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_FlexSong
|| __DATA.__objc_data _OBJC_METACLASS_$_FlexSongAssetProvider_V1
|| __DATA.__objc_data _OBJC_METACLASS_$_FlexSongAssetProvider_V2
|| __DATA.__objc_data _OBJC_METACLASS_$_FlexSongBackend
|| __DATA.__objc_data _OBJC_METACLASS_$_FlexSongMetaDataReader_V2
|| __DATA.__objc_data _OBJC_METACLASS_$_FlexSongMetadataReaderUtils
|| __DATA.__objc_data _OBJC_METACLASS_$_FlexSongProxy
|| __DATA.__objc_data _OBJC_METACLASS_$_FlexTransition
|| __DATA.__objc_data _OBJC_METACLASS_$_FlexUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_MemoriesHomeScreen
|| __DATA.__objc_data _OBJC_METACLASS_$_MemoriesViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_MiroAppDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_MiroAssetSuggestionsCollectionViewCell
|| __DATA.__objc_data _OBJC_METACLASS_$_MiroAssetSuggestionsCollectionViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_MiroAssetSuggestionsNavigationController
|| __DATA.__objc_data _OBJC_METACLASS_$_MiroCircularProgressBar
|| __DATA.__objc_data _OBJC_METACLASS_$_MiroCircularProgressLayer
|| __DATA.__objc_data _OBJC_METACLASS_$_MiroContentEditorNavigationController
|| __DATA.__objc_data _OBJC_METACLASS_$_MiroContentEditorViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_MiroDurationPickerCell
|| __DATA.__objc_data _OBJC_METACLASS_$_MiroEditorClipCell
|| __DATA.__objc_data _OBJC_METACLASS_$_MiroEditorClipCollectionViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_MiroEditorClipDebugView
|| __DATA.__objc_data _OBJC_METACLASS_$_MiroEditorColorSwatchCell
|| __DATA.__objc_data _OBJC_METACLASS_$_MiroEditorFlowLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_MiroExportController
|| __DATA.__objc_data _OBJC_METACLASS_$_MiroKeyAssetSuggestionsCollectionsViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_MiroMovie
|| __DATA.__objc_data _OBJC_METACLASS_$_MiroMovieView
|| __DATA.__objc_data _OBJC_METACLASS_$_MiroMusicMenuCell
|| __DATA.__objc_data _OBJC_METACLASS_$_MiroMusicMenuViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_MiroPPT
|| __DATA.__objc_data _OBJC_METACLASS_$_MiroPlayerViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_MiroPlayheadView
|| __DATA.__objc_data _OBJC_METACLASS_$_MiroProgressWatcher
|| __DATA.__objc_data _OBJC_METACLASS_$_MiroProject
|| __DATA.__objc_data _OBJC_METACLASS_$_MiroScrollViewSpeedometer
|| __DATA.__objc_data _OBJC_METACLASS_$_MiroSmartMusicMenuCell
|| __DATA.__objc_data _OBJC_METACLASS_$_MiroSmartMusicMenuHeaderView
|| __DATA.__objc_data _OBJC_METACLASS_$_MiroSmartMusicMenuViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_MiroSongPreviewButton
|| __DATA.__objc_data _OBJC_METACLASS_$_MiroTimelineClipCollectionViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_MiroTitleSubtitleView
|| __DATA.__objc_data _OBJC_METACLASS_$_MiroTouchingGestureRecognizer
|| __DATA.__objc_data _OBJC_METACLASS_$_MiroTwoLabelButton
|| __DATA.__objc_data _OBJC_METACLASS_$_PMAVSynchronizedView
|| __DATA.__objc_data _OBJC_METACLASS_$_PMActivityItemProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_PMActivityViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_PMAirplayActivity
|| __DATA.__objc_data _OBJC_METACLASS_$_PMAnalyticsHelper
|| __DATA.__objc_data _OBJC_METACLASS_$_PMClipCollectionProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_PMClipProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_PMCollectionViewGridLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_PMColorActivityIndicatorView
|| __DATA.__objc_data _OBJC_METACLASS_$_PMCopyToPasteboardActivity
|| __DATA.__objc_data _OBJC_METACLASS_$_PMCoreAnalyticsEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_PMDebugCollectionViewCell
|| __DATA.__objc_data _OBJC_METACLASS_$_PMDebugCollectionViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_PMDebugPickerViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_PMDurationProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_PMEditorBasePlayerViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_PMEditorBottomToolbar
|| __DATA.__objc_data _OBJC_METACLASS_$_PMEditorDebugContainerViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_PMEditorDurationViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_PMEditorMenuTableViewCell
|| __DATA.__objc_data _OBJC_METACLASS_$_PMEditorMenuViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_PMEditorNavigationController
|| __DATA.__objc_data _OBJC_METACLASS_$_PMEditorRootViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_PMEditorTitleTableViewCell
|| __DATA.__objc_data _OBJC_METACLASS_$_PMEditorTitleViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_PMFlatVideoOverlayButton
|| __DATA.__objc_data _OBJC_METACLASS_$_PMHighFidelityVideoOverlayButton
|| __DATA.__objc_data _OBJC_METACLASS_$_PMInteractiveCollectionView
|| __DATA.__objc_data _OBJC_METACLASS_$_PMMemoryDebugInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_PMMoodProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_PMMovieContainerViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_PMMovieProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_PMMovieProviderAnalyticsEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_PMMusicCategoryMenuViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_PMMusicMenuLabelCell
|| __DATA.__objc_data _OBJC_METACLASS_$_PMMusicNavigationController
|| __DATA.__objc_data _OBJC_METACLASS_$_PMMusicProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_PMOpenInIMovieActivity
|| __DATA.__objc_data _OBJC_METACLASS_$_PMPXFeatureSpec
|| __DATA.__objc_data _OBJC_METACLASS_$_PMPassthroughView
|| __DATA.__objc_data _OBJC_METACLASS_$_PMPipelineAnalyticsEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_PMPosterContainerView
|| __DATA.__objc_data _OBJC_METACLASS_$_PMPosterViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_PMRotationViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_PMRoundProgressLayer
|| __DATA.__objc_data _OBJC_METACLASS_$_PMRoundProgressView
|| __DATA.__objc_data _OBJC_METACLASS_$_PMRoundProgressViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_PMSaveProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_PMSaveVideoActivity
|| __DATA.__objc_data _OBJC_METACLASS_$_PMScrubberImageSource
|| __DATA.__objc_data _OBJC_METACLASS_$_PMScrubberProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_PMShareAnalyticsEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_PMShareOrientationSelectionViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_PMSpinnerPlayPauseOverlay
|| __DATA.__objc_data _OBJC_METACLASS_$_PMTTRLoadingViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_PMTapToRadarActivity
|| __DATA.__objc_data _OBJC_METACLASS_$_PMTitleEditorProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_PMTitleSubtitleView
|| __DATA.__objc_data _OBJC_METACLASS_$_PMTrimmerDebugView
|| __DATA.__objc_data _OBJC_METACLASS_$_PMTrimmerViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_PMiOSMainViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_PMiOSPlayheadView
|| __DATA.__objc_data _OBJC_METACLASS_$_PMiOSProgressViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_PMiOSScrubberCollectionView
|| __DATA.__objc_data _OBJC_METACLASS_$_PMiOSScrubberCollectionViewCell
|| __DATA.__objc_data _OBJC_METACLASS_$_PMiOSScrubberViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_PMiOSSliderCell
|| __DATA.__objc_data _OBJC_METACLASS_$_PMiOSSliderViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_PMiOSTimeLabelView
|| __DATA.__objc_data _OBJC_METACLASS_$_VEKAutoEditStage
|| __DATA.__objc_data _OBJC_METACLASS_$_VEKBlueprint
|| __DATA.__objc_data _OBJC_METACLASS_$_VEKClipSuggestion
|| __DATA.__objc_data _OBJC_METACLASS_$_VEKDownloadStage
|| __DATA.__objc_data _OBJC_METACLASS_$_VEKExportPreset
|| __DATA.__objc_data _OBJC_METACLASS_$_VEKMovieCompositionStage
|| __DATA.__objc_data _OBJC_METACLASS_$_VEKPicklistStage
|| __DATA.__objc_data _OBJC_METACLASS_$_VEKPipeline
|| __DATA.__objc_data _OBJC_METACLASS_$_VEKPipelineStage
|| __DATA.__objc_data _OBJC_METACLASS_$_VEKPlayerItem
|| __DATA.__objc_data _OBJC_METACLASS_$_VEKProduction
|| __DATA.__objc_data _OBJC_METACLASS_$_VEKProgress
|| __DATA.__objc_data _OBJC_METACLASS_$_VEKRangeSuggestion
|| __DATA.__objc_data _OBJC_METACLASS_$_VEKResult
|| __DATA.__objc_data _OBJC_METACLASS_$_VEKSuggestion
|| __DATA.__objc_data _OBJC_METACLASS_$__PMTrimmerContainerView
|| __DATA.__objc_ivar _OBJC_IVAR_$_PMTitleSubtitleView._ptOffset
|| __DATA_CONST.__const _FMEnableCloudKitManager
|| __DATA_CONST.__const _FMPurgeMobileAssetsFollowingFetch
|| __DATA_CONST.__const _FMPurgeMobileAssetsV2FollowingFetch
|| __DATA_CONST.__const _FMSongArtworkAssetID
|| __DATA_CONST.__const _FMSongAssetCompatibilityVersion
|| __DATA_CONST.__const _FMSongAssetContentVersion
|| __DATA_CONST.__const _FMSongAssetDownloadProgressChanged
|| __DATA_CONST.__const _FMSongAssetsChanged
|| __DATA_CONST.__const _FMSongBundleAssetID
|| __DATA_CONST.__const _FMSongBundleExtension
|| __DATA_CONST.__const _FMSongFormat_Legacy
|| __DATA_CONST.__const _FMSongFormat_ML
|| __DATA_CONST.__const _FMSongLibraryAvailableSongsChanged
|| __DATA_CONST.__const _FMSongLibraryInitOption_CloudSupportDisabled
|| __DATA_CONST.__const _FMSongLibraryInitOption_MobileAssets_AssetTypeIdentifier
|| __DATA_CONST.__const _FMSongLibraryInitOption_MobileAssets_ClientID
|| __DATA_CONST.__const _FMSongLibraryInitOption_NetworkingDisabled
|| __DATA_CONST.__const _FMSongLibrarySongDownloadInProgressChanged
|| __DATA_CONST.__const _FMSongLibrarySongDownloadInProgressState
|| __DATA_CONST.__const _FMSong_AudioPresetName_AAC_LC_128
|| __DATA_CONST.__const _FMSong_AudioPresetName_AAC_LC_192
|| __DATA_CONST.__const _FMSong_AudioPresetName_AAC_LC_256
|| __DATA_CONST.__const _FMSong_AudioPresetName_AAC_LC_80
|| __DATA_CONST.__const _FMSong_AudioPresetName_AAC_LC_96
|| __DATA_CONST.__const _FMSong_AudioPresetName_HE_AAC_v1_48
|| __DATA_CONST.__const _FMSong_AudioPresetName_HE_AAC_v1_64
|| __DATA_CONST.__const _FMSong_AudioPresetName_HE_AAC_v2_48
|| __DATA_CONST.__const _FMSong_AudioPresetName_PCM
|| __DATA_CONST.__const _FMSong_AudioPresetName_PCM_LEF32
|| __DATA_CONST.__const _FMSong_AudioPresetName_USAC_64
|| __DATA_CONST.__const _FMSong_AudioPresetName_USAC_96
|| __DATA_CONST.__const _FMSong_Option_DefaultEarlyFadeStartFromStinger
|| __DATA_CONST.__const _FMSong_Option_IgnoreEarlyFadeMarker
|| __DATA_CONST.__const _FMSong_Option_IgnoreStingerMarkerForShortening
|| __DATA_CONST.__const _FMSong_Option_LoopSongForLongDurations
|| __DATA_CONST.__const _FMSong_Option_MaxOutroLengthToReserve
|| __DATA_CONST.__const _FMSong_Option_MinLengthForEarlyFade
|| __DATA_CONST.__const _FMSong_Option_OutroCanBeShortened
|| __DATA_CONST.__const _FMSong_SegmentMarker_OutroEarlyFade
|| __DATA_CONST.__const _FMSong_SegmentMarker_OutroStinger
|| __DATA_CONST.__const _FMTagID_Genre_Alternative
|| __DATA_CONST.__const _FMTagID_Genre_Blues
|| __DATA_CONST.__const _FMTagID_Genre_Classical
|| __DATA_CONST.__const _FMTagID_Genre_Country
|| __DATA_CONST.__const _FMTagID_Genre_Dance
|| __DATA_CONST.__const _FMTagID_Genre_Downtempo
|| __DATA_CONST.__const _FMTagID_Genre_Electronic
|| __DATA_CONST.__const _FMTagID_Genre_HipHopRap
|| __DATA_CONST.__const _FMTagID_Genre_Holiday
|| __DATA_CONST.__const _FMTagID_Genre_Indie
|| __DATA_CONST.__const _FMTagID_Genre_Jazz
|| __DATA_CONST.__const _FMTagID_Genre_KidsFamily
|| __DATA_CONST.__const _FMTagID_Genre_Latin
|| __DATA_CONST.__const _FMTagID_Genre_Lounge
|| __DATA_CONST.__const _FMTagID_Genre_Metal
|| __DATA_CONST.__const _FMTagID_Genre_Pop
|| __DATA_CONST.__const _FMTagID_Genre_Prefix
|| __DATA_CONST.__const _FMTagID_Genre_RandB
|| __DATA_CONST.__const _FMTagID_Genre_Reggae
|| __DATA_CONST.__const _FMTagID_Genre_Rock
|| __DATA_CONST.__const _FMTagID_Genre_SingerSongwriter
|| __DATA_CONST.__const _FMTagID_Genre_SoulFunk
|| __DATA_CONST.__const _FMTagID_Genre_StageScreen
|| __DATA_CONST.__const _FMTagID_Genre_World
|| __DATA_CONST.__const _FMTagID_MoodAlt_Action
|| __DATA_CONST.__const _FMTagID_MoodAlt_Chill
|| __DATA_CONST.__const _FMTagID_MoodAlt_Event
|| __DATA_CONST.__const _FMTagID_MoodAlt_Playful
|| __DATA_CONST.__const _FMTagID_MoodAlt_Pop
|| __DATA_CONST.__const _FMTagID_MoodAlt_Prefix
|| __DATA_CONST.__const _FMTagID_MoodAlt_Retro
|| __DATA_CONST.__const _FMTagID_MoodAlt_Sentimental
|| __DATA_CONST.__const _FMTagID_Mood_Action
|| __DATA_CONST.__const _FMTagID_Mood_Chill
|| __DATA_CONST.__const _FMTagID_Mood_Epic
|| __DATA_CONST.__const _FMTagID_Mood_Ethereal
|| __DATA_CONST.__const _FMTagID_Mood_Gentle
|| __DATA_CONST.__const _FMTagID_Mood_Happy
|| __DATA_CONST.__const _FMTagID_Mood_Neutral
|| __DATA_CONST.__const _FMTagID_Mood_Party
|| __DATA_CONST.__const _FMTagID_Mood_Prefix
|| __DATA_CONST.__const _FMTagID_Mood_Sentimental
|| __DATA_CONST.__const _FMTagID_Mood_Uplifting
|| __DATA_CONST.__const _FMTagID_Region_Prefix
|| __DATA_CONST.__const _FMTagID_SongPace_Fast
|| __DATA_CONST.__const _FMTagID_SongPace_Medium
|| __DATA_CONST.__const _FMTagID_SongPace_Prefix
|| __DATA_CONST.__const _FMTagID_SongPace_Slow
|| __DATA_CONST.__const _FMTimedMetadataIdentifierBar
|| __DATA_CONST.__const _FMTimedMetadataIdentifierBarKeyBarIndex
|| __DATA_CONST.__const _FMTimedMetadataIdentifierBarKeyBeatsPerBar
|| __DATA_CONST.__const _FMTimedMetadataIdentifierBeat
|| __DATA_CONST.__const _FMTimedMetadataIdentifierBeatKeyBarIndex
|| __DATA_CONST.__const _FMTimedMetadataIdentifierBeatKeyBeatIndex
|| __DATA_CONST.__const _FMTimedMetadataIdentifierLoopPoints
|| __DATA_CONST.__const _FMTimedMetadataIdentifierOnset
|| __DATA_CONST.__const _FMTimedMetadataIdentifierSection
|| __DATA_CONST.__const _FMTimedMetadataIdentifierSectionKeyBodyNumber
|| __DATA_CONST.__const _FMTimedMetadataIdentifierSectionKeyFadeToBlackTime
|| __DATA_CONST.__const _FMTimedMetadataIdentifierSectionKeyOutroEarlyFade
|| __DATA_CONST.__const _FMTimedMetadataIdentifierSectionKeyOutroStinger
|| __DATA_CONST.__const _FMTimedMetadataIdentifierSectionKeyType
|| __DATA_CONST.__const _FMTimedMetadataIdentifierSegment
|| __DATA_CONST.__const _FMTimedMetadataIdentifierSegmentKeyBarsUsed
|| __DATA_CONST.__const _FMTimedMetadataIdentifierSegmentKeyBodyLetter
|| __DATA_CONST.__const _FMTimedMetadataIdentifierSegmentKeyBodyNumber
|| __DATA_CONST.__const _FMTimedMetadataIdentifierSegmentKeyEnergy
|| __DATA_CONST.__const _FMTimedMetadataIdentifierSegmentKeyFadeToBlackTime
|| __DATA_CONST.__const _FMTimedMetadataIdentifierSegmentKeyLoudness
|| __DATA_CONST.__const _FMTimedMetadataIdentifierSegmentKeyOutroEarlyFade
|| __DATA_CONST.__const _FMTimedMetadataIdentifierSegmentKeyOutroStinger
|| __DATA_CONST.__const _FMTimedMetadataIdentifierSegmentKeyPeakValue
|| __DATA_CONST.__const _FMTimedMetadataIdentifierSegmentKeyPriority
|| __DATA_CONST.__const _FMTimedMetadataIdentifierSegmentKeyType
|| __DATA_CONST.__const _FlexMLArtistNameKey
|| __DATA_CONST.__const _FlexMLAudioEncoderPresetKey
|| __DATA_CONST.__const _FlexMLAudioFileExtensionKey
|| __DATA_CONST.__const _FlexMLBarTimesKey
|| __DATA_CONST.__const _FlexMLBeatTimesKey
|| __DATA_CONST.__const _FlexMLCompatibilityVersionKey
|| __DATA_CONST.__const _FlexMLContentVersionKey
|| __DATA_CONST.__const _FlexMLCustomOptionsKey
|| __DATA_CONST.__const _FlexMLGainFunctionGainKey
|| __DATA_CONST.__const _FlexMLGainFunctionKey
|| __DATA_CONST.__const _FlexMLLoopTimesKey
|| __DATA_CONST.__const _FlexMLLoudnessKey
|| __DATA_CONST.__const _FlexMLPeakKey
|| __DATA_CONST.__const _FlexMLPlistRuntimeVersionKey
|| __DATA_CONST.__const _FlexMLSampleRateKey
|| __DATA_CONST.__const _FlexMLSegmentDurationKey
|| __DATA_CONST.__const _FlexMLSegmentTimeKey
|| __DATA_CONST.__const _FlexMLSegmentsKey
|| __DATA_CONST.__const _FlexMLSongBeatsKey
|| __DATA_CONST.__const _FlexMLSongFileKey
|| __DATA_CONST.__const _FlexMLSongIDKey
|| __DATA_CONST.__const _FlexMLSongMetadataFileExtension
|| __DATA_CONST.__const _FlexMLSongNameKey
|| __DATA_CONST.__const _FlexMLSongSummariesFolderName
|| __DATA_CONST.__const _FlexMLSongSummaryFileExtension
|| __DATA_CONST.__const _FlexMLSummaryDurationKey
|| __DATA_CONST.__const _FlexMLSummaryMappingKey
|| __DATA_CONST.__const _FlexMLSummaryTimeKey
|| __DATA_CONST.__const _FlexMLTagIDs
|| __DATA_CONST.__const _FlexMLTrackTimeKey
|| __DATA_CONST.__const _FlexMLVideoCuesFadeToBlackKey
|| __DATA_CONST.__const _FlexMLVideoCuesGoodCuesKey
|| __DATA_CONST.__const _FlexMLVideoCuesGreatCuesKey
|| __DATA_CONST.__const _FlexMLVideoCuesKey
|| __DATA_CONST.__const _FlexMobileAssetAttributeArtistName
|| __DATA_CONST.__const _FlexMobileAssetAttributeAssetType
|| __DATA_CONST.__const _FlexMobileAssetAttributeAudioEncoderPresetName
|| __DATA_CONST.__const _FlexMobileAssetAttributeClientIDs
|| __DATA_CONST.__const _FlexMobileAssetAttributeHiddenIDs
|| __DATA_CONST.__const _FlexMobileAssetAttributeKeywords
|| __DATA_CONST.__const _FlexMobileAssetAttributeRecalled
|| __DATA_CONST.__const _FlexMobileAssetAttributeSongBundleFormat
|| __DATA_CONST.__const _FlexMobileAssetAttributeSongName
|| __DATA_CONST.__const _FlexMobileAssetAttributeSongTags
|| __DATA_CONST.__const _FlexMobileAssetAttributeUUID
|| __DATA_CONST.__const _FlexMobileAssetCompatibilityVersion
|| __DATA_CONST.__const _FlexMobileAssetContentVersion
|| __DATA_CONST.__const _FlexMobileAssetDownloadDictAssetKey
|| __DATA_CONST.__const _FlexMobileAssetDownloadDictExistingSongKey
|| __DATA_CONST.__const _FlexMobileAssetDownloadDictQueryKey
|| __DATA_CONST.__const _FlexMobileAssetDownloadDictSongUIDKey
|| __DATA_CONST.__const _FlexMobileAssetJettyClientID
|| __DATA_CONST.__const _FlexMobileAssetMiroClientID
|| __DATA_CONST.__const _FlexMobileAssetOperationStateCompleted
|| __DATA_CONST.__const _FlexMobileAssetOperationStateKeyOperation
|| __DATA_CONST.__const _FlexMobileAssetOperationStateKeyProgressUpdate
|| __DATA_CONST.__const _FlexMobileAssetPropertyArtwork
|| __DATA_CONST.__const _FlexMobileAssetPropertyMetadata
|| __DATA_CONST.__const _FlexMobileAssetPropertySongBundle
|| __DATA_CONST.__const _FlexMobileAssetV2DownloadDictAssetKey
|| __DATA_CONST.__const _FlexMobileAssetV2DownloadDictAssetTypeKey
|| __DATA_CONST.__const _FlexMobileAssetV2DownloadDictExistingSongKey
|| __DATA_CONST.__const _FlexMobileAssetV2DownloadDictSongUIDKey
|| __DATA_CONST.__const _FlexMobileAssetV2OperationStateCompleted
|| __DATA_CONST.__const _FlexMobileAssetV2OperationStateKeyOperation
|| __DATA_CONST.__const _FlexMobileAssetV2OperationStateKeyProgressUpdate
|| __DATA_CONST.__const _MiroPlayerViewDidBeginPlaybackNotification
|| __DATA_CONST.__const _MiroPlayerViewDidPlayToEndNotification
|| __DATA_CONST.__const _MiroPlayerViewFailedToPlayToEndNotification
|| __DATA_CONST.__const _MiroSpecialMoodSection
|| __DATA_CONST.__const _MiroTapToRadarAction
|| __DATA_CONST.__const _OpenInIMovieActivityType
|| __DATA_CONST.__const _PMActivityTypeAirPlay
|| __DATA_CONST.__const _PMActivityTypeMoveToCameraRoll
|| __DATA_CONST.__const _VEKExportErrorDomain
|| __DATA_CONST.__const _VEKResultTypeKeyAssetList
|| __DATA_CONST.__const _VEKResultTypeKeyDownloadInfo
|| __DATA_CONST.__const _VEKResultTypeKeyDurations
|| __DATA_CONST.__const _VEKResultTypeKeyError
|| __DATA_CONST.__const _VEKResultTypeKeyPicklist
|| __DATA_CONST.__const _VEKResultTypeKeyPlayerItem
|| __DATA_CONST.__const _VEKResultTypeKeyProduction
|| __DATA_CONST.__const _VEKResultTypeKeyProject
|| __DATA_CONST.__const _kDefaultEventName
|| __DATA_CONST.__const _kDotConstant
|| __DATA_CONST.__const _kFlexReachabilityChangedNotification
|| __DATA_CONST.__const _kMiroAssetSuggestionsDebugMetadataHasUserDislikedKey
|| __DATA_CONST.__const _kMiroAssetSuggestionsDebugMetadataHasUserTrimKey
|| __DATA_CONST.__const _kMiroAssetSuggestionsDebugMetadataHasUserVolumeKey
|| __DATA_CONST.__const _kMiroAssetSuggestionsDebugMetadataIsMultiUpKey
|| __DATA_CONST.__const _kMiroAssetSuggestionsDebugMetadataIsMultiUpPeerKey
|| __DATA_CONST.__const _kMiroAssetSuggestionsDebugMetadataIsUserAddedKey
|| __DATA_CONST.__const _kMiroAssetSuggestionsDebugMetadataIsUserRemovedKey
|| __DATA_CONST.__const _kMiroAssetSuggestionsDebugMetadataPickListOrderKey
|| __DATA_CONST.__const _kMiroAssetSuggestionsDebugMetadataPickListOrderLastKey
|| __DATA_CONST.__const _kMiroAssetSuggestionsDebugMetadataPickListSegmentCountKey
|| __DATA_CONST.__const _kMiroAssetSuggestionsDebugMetadataPickListSplitDistanceKey
|| __DATA_CONST.__const _kMiroAssetSuggestionsDebugMetadataPickListSplitDistanceLastKey
|| __DATA_CONST.__const _kPMiOSScrubberCollectionViewCellReuseIdentifier
|| __DATA_DIRTY.__common _VEKSongNone
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MemoriesDelegate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PMiOSSliderViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VEKSong
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MemoriesDelegate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VEKSong
|| __TEXT.__const _FMIdealNaturalDurationPlaylistMultiple
|| __TEXT.__const _FMMinimumPlaylistMultiple
|| __TEXT.__const _FMSongPlaylistTimeQuantaInSamples
|| __TEXT.__const _FlexMobileAssetTimeoutIntervalForResource
|| __TEXT.__const _FlexSegment_MaxBodySegmentPriority
|| __TEXT.__const _FlexSegment_MinBodySegmentPriority
|| __TEXT.__const _FlexSegment_UseCustomBarMarkers
|| __TEXT.__const _VEKDurationAuto
|| __TEXT.__const _VEKDurationLong
|| __TEXT.__const _VEKDurationMedium
|| __TEXT.__const _VEKDurationShort
|| __TEXT.__const _VEKMoodSpecial
|| __TEXT.__const _kMaxLiveGeneratorCount
|| __TEXT.__text _CGRectFromCenterAndSize
|| __TEXT.__text _CGRoundToNearestPixel
|| __TEXT.__text _ConstrainPlayerToParent
|| __TEXT.__text _ConstrainToParent
|| __TEXT.__text _ConstrainToParentWith16x9AspectRatio
|| __TEXT.__text _ConstrainToParentWithAspectRatio
|| __TEXT.__text _ConstrainToSize
|| __TEXT.__text _FlexLogForCategory
|| __TEXT.__text _IsModernAspectScreen
|| __TEXT.__text _RangeFromClip
|| __TEXT.__text _ScaleForFullscreen
|| __TEXT.__text _ScaleForFullscreenPoster
|| __TEXT.__text _TargetDuration
|| __TEXT.__text _cmTimeFromNumber
|| __TEXT.__text _isCompatibleMobileAsset
|| __TEXT.__text _lerp
|| __TEXT.__text _miro_dispatch_on_main_queue
|| __TEXT.__text _miro_dispatch_on_main_queue_when_idle_after_delay
|| __TEXT.__text _readSampleRateAndLengthFromFileWithURL
|| __TEXT.__text _roundToNearestHalf
__ AVFoundation: _AVAssetExportPreset1280x720
__ AVFoundation: _AVAssetExportPreset1920x1080
__ AVFoundation: _AVAssetExportPreset3840x2160
__ AVFoundation: _AVAssetExportPreset640x480
__ AVFoundation: _AVAssetExportPreset960x540
__ AVFoundation: _AVAssetExportPresetPassthrough
__ AVFoundation: _AVAssetImageGeneratorApertureModeCleanAperture
__ AVFoundation: _AVAssetMediaServicesWereResetNotification
__ AVFoundation: _AVAudioSessionCategoryPlayAndRecord
__ AVFoundation: _AVAudioSessionCategoryPlayback
__ AVFoundation: _AVAudioTimePitchAlgorithmLowQualityZeroLatency
__ AVFoundation: _AVAudioTimePitchAlgorithmSpectral
__ AVFoundation: _AVAudioTimePitchAlgorithmTimeDomain
__ AVFoundation: _AVAudioTimePitchAlgorithmVarispeed
__ AVFoundation: _AVChannelLayoutKey
__ AVFoundation: _AVEncoderBitRateKey
__ AVFoundation: _AVFileTypeAppleM4A
__ AVFoundation: _AVFileTypeQuickTimeMovie
__ AVFoundation: _AVFormatIDKey
__ AVFoundation: _AVLayerVideoGravityResizeAspect
__ AVFoundation: _AVMakeRectWithAspectRatioInsideRect
__ AVFoundation: _AVMediaCharacteristicAudible
__ AVFoundation: _AVMediaCharacteristicVisual
__ AVFoundation: _AVMediaTypeAudio
__ AVFoundation: _AVMediaTypeVideo
__ AVFoundation: _AVMetadataCommonKeyCreationDate
__ AVFoundation: _AVMetadataCommonKeyLocation
__ AVFoundation: _AVMetadataKeySpaceCommon
__ AVFoundation: _AVMetadataKeySpaceQuickTimeMetadata
__ AVFoundation: _AVMetadataQuickTimeMetadataKeyArtwork
__ AVFoundation: _AVMetadataQuickTimeMetadataKeyCreationDate
__ AVFoundation: _AVMetadataQuickTimeMetadataKeyIsMontage
__ AVFoundation: _AVMetadataQuickTimeUserDataKeyCreationDate
__ AVFoundation: _AVNumberOfChannelsKey
__ AVFoundation: _AVOutputSettingsPreset3840x2160
__ AVFoundation: _AVPlayerItemDidPlayToEndTimeNotification
__ AVFoundation: _AVPlayerItemFailedToPlayToEndTimeNotification
__ AVFoundation: _AVSampleRateKey
__ AVFoundation: _AVURLAssetPreferPreciseDurationAndTimingKey
__ AVFoundation: _AVVideoAllowFrameReorderingKey
__ AVFoundation: _AVVideoAverageBitRateKey
__ AVFoundation: _AVVideoCodecH264
__ AVFoundation: _AVVideoCodecKey
__ AVFoundation: _AVVideoColorPrimaries_ITU_R_709_2
__ AVFoundation: _AVVideoColorPrimaries_P3_D65
__ AVFoundation: _AVVideoCompressionPropertiesKey
__ AVFoundation: _AVVideoH264EntropyModeCABAC
__ AVFoundation: _AVVideoH264EntropyModeKey
__ AVFoundation: _AVVideoHeightKey
__ AVFoundation: _AVVideoMaxKeyFrameIntervalKey
__ AVFoundation: _AVVideoProfileLevelH264Baseline30
__ AVFoundation: _AVVideoProfileLevelH264Baseline31
__ AVFoundation: _AVVideoProfileLevelH264Baseline41
__ AVFoundation: _AVVideoProfileLevelH264HighAutoLevel
__ AVFoundation: _AVVideoProfileLevelH264MainAutoLevel
__ AVFoundation: _AVVideoProfileLevelKey
__ AVFoundation: _AVVideoScalingModeKey
__ AVFoundation: _AVVideoScalingModeResizeAspectFill
__ AVFoundation: _AVVideoTransferFunction_ITU_R_709_2
__ AVFoundation: _AVVideoWidthKey
__ AVFoundation: _AVVideoYCbCrMatrix_ITU_R_601_4
__ AVFoundation: _AVVideoYCbCrMatrix_ITU_R_709_2
__ AVFoundation: _OBJC_CLASS_$_AVAsset
__ AVFoundation: _OBJC_CLASS_$_AVAssetExportSession
__ AVFoundation: _OBJC_CLASS_$_AVAssetImageGenerator
__ AVFoundation: _OBJC_CLASS_$_AVAssetReader
__ AVFoundation: _OBJC_CLASS_$_AVAssetReaderAudioMixOutput
__ AVFoundation: _OBJC_CLASS_$_AVAssetReaderSampleReferenceOutput
__ AVFoundation: _OBJC_CLASS_$_AVAssetReaderTrackOutput
__ AVFoundation: _OBJC_CLASS_$_AVAssetReaderVideoCompositionOutput
__ AVFoundation: _OBJC_CLASS_$_AVAssetWriter
__ AVFoundation: _OBJC_CLASS_$_AVAssetWriterInput
__ AVFoundation: _OBJC_CLASS_$_AVAudioSession
__ AVFoundation: _OBJC_CLASS_$_AVComposition
__ AVFoundation: _OBJC_CLASS_$_AVCompositionTrackSegment
__ AVFoundation: _OBJC_CLASS_$_AVMetadataItem
__ AVFoundation: _OBJC_CLASS_$_AVMutableAudioMix
__ AVFoundation: _OBJC_CLASS_$_AVMutableAudioMixInputParameters
__ AVFoundation: _OBJC_CLASS_$_AVMutableComposition
__ AVFoundation: _OBJC_CLASS_$_AVMutableMetadataItem
__ AVFoundation: _OBJC_CLASS_$_AVMutableVideoComposition
__ AVFoundation: _OBJC_CLASS_$_AVOutputSettingsAssistant
__ AVFoundation: _OBJC_CLASS_$_AVPlayer
__ AVFoundation: _OBJC_CLASS_$_AVPlayerItem
__ AVFoundation: _OBJC_CLASS_$_AVPlayerLayer
__ AVFoundation: _OBJC_CLASS_$_AVSynchronizedLayer
__ AVFoundation: _OBJC_CLASS_$_AVURLAsset
__ AVFoundation: _OBJC_CLASS_$_AVVideoComposition
__ AVFoundation: _OBJC_CLASS_$_AVVideoCompositionCoreAnimationTool
__ AVFoundation: _OBJC_CLASS_$_AVVideoCompositionInstruction
__ AVFoundation: _OBJC_CLASS_$_AVVideoCompositionLayerInstruction
__ AVFoundation: _OBJC_METACLASS_$_AVPlayerItem
__ AVKit: _OBJC_CLASS_$_AVPlayerViewController
__ Accelerate: _vDSP_deq22
__ Accelerate: _vDSP_maxmgv
__ Accelerate: _vDSP_svesq
__ Accelerate: _vDSP_vsadd
__ Accelerate: _vImageBoxConvolve_ARGB8888
__ Accelerate: _vImageMatrixMultiply_ARGB8888
__ Accounts: _OBJC_CLASS_$_ACAccountStore
__ Accounts: _kAccountDataclassCloudPhotos
__ AggregateDictionary: _ADClientAddValueForScalarKey
__ AggregateDictionary: _ADClientSetValueForScalarKey
__ AggregateDictionary: _ADPushTimeIntervalForDistributionKeySinceStartTime
__ AudioToolbox: _AudioComponentFindNext
__ AudioToolbox: _AudioComponentInstanceDispose
__ AudioToolbox: _AudioComponentInstanceNew
__ AudioToolbox: _AudioFileClose
__ AudioToolbox: _AudioFileGetProperty
__ AudioToolbox: _AudioFileGetPropertyInfo
__ AudioToolbox: _AudioFileOpenURL
__ AudioToolbox: _AudioSessionAddPropertyListener
__ AudioToolbox: _AudioSessionGetProperty
__ AudioToolbox: _AudioSessionSetProperty
__ AudioToolbox: _AudioUnitGetParameter
__ AudioToolbox: _AudioUnitGetProperty
__ AudioToolbox: _AudioUnitInitialize
__ AudioToolbox: _AudioUnitProcessMultiple
__ AudioToolbox: _AudioUnitSetProperty
__ AudioToolbox: _AudioUnitUninitialize
__ AudioToolbox: _ExtAudioFileDispose
__ AudioToolbox: _ExtAudioFileGetProperty
__ AudioToolbox: _ExtAudioFileOpenURL
__ AudioToolbox: _tkqMjk4y
__ CoreAnalytics: _AnalyticsSendEventLazy
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFArrayAppendValue
__ CoreFoundation: _CFArrayCreateMutable
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFEqual
__ CoreFoundation: _CFNumberGetValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRunLoopGetCurrent
__ CoreFoundation: _CFUUIDCreate
__ CoreFoundation: _CFUUIDCreateString
__ CoreFoundation: _NSDefaultRunLoopMode
__ CoreFoundation: _NSGenericException
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSLocaleCountryCode
__ CoreFoundation: _NSLocaleDecimalSeparator
__ CoreFoundation: _NSLocaleLanguageCode
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _NSURLContentAccessDateKey
__ CoreFoundation: _NSURLIsDirectoryKey
__ CoreFoundation: _NSURLNameKey
__ CoreFoundation: _NSURLUbiquitousItemDownloadingStatusCurrent
__ CoreFoundation: _NSURLUbiquitousItemDownloadingStatusKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCache
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSInvocation
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__
__ CoreFoundation: ___NSDictionary0__
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFAllocatorSystemDefault
__ CoreFoundation: _kCFRunLoopDefaultMode
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ CoreGraphics: _CGAffineTransformConcat
__ CoreGraphics: _CGAffineTransformEqualToTransform
__ CoreGraphics: _CGAffineTransformIdentity
__ CoreGraphics: _CGAffineTransformIsIdentity
__ CoreGraphics: _CGAffineTransformMakeRotation
__ CoreGraphics: _CGAffineTransformMakeScale
__ CoreGraphics: _CGAffineTransformMakeTranslation
__ CoreGraphics: _CGAffineTransformRotate
__ CoreGraphics: _CGAffineTransformScale
__ CoreGraphics: _CGAffineTransformTranslate
__ CoreGraphics: _CGBitmapContextCreate
__ CoreGraphics: _CGBitmapContextCreateImage
__ CoreGraphics: _CGBitmapContextGetBytesPerRow
__ CoreGraphics: _CGBitmapContextGetData
__ CoreGraphics: _CGBitmapContextGetHeight
__ CoreGraphics: _CGBitmapContextGetWidth
__ CoreGraphics: _CGColorCreate
__ CoreGraphics: _CGColorGetAlpha
__ CoreGraphics: _CGColorGetColorSpace
__ CoreGraphics: _CGColorGetComponents
__ CoreGraphics: _CGColorGetNumberOfComponents
__ CoreGraphics: _CGColorRelease
__ CoreGraphics: _CGColorSpaceCreateDeviceRGB
__ CoreGraphics: _CGColorSpaceCreateLab
__ CoreGraphics: _CGColorSpaceCreateWithName
__ CoreGraphics: _CGColorSpaceGetModel
__ CoreGraphics: _CGColorSpaceRelease
__ CoreGraphics: _CGContextAddArc
__ CoreGraphics: _CGContextAddEllipseInRect
__ CoreGraphics: _CGContextAddLineToPoint
__ CoreGraphics: _CGContextAddRect
__ CoreGraphics: _CGContextBeginPath
__ CoreGraphics: _CGContextClearRect
__ CoreGraphics: _CGContextClipToMask
__ CoreGraphics: _CGContextDrawImage
__ CoreGraphics: _CGContextFillPath
__ CoreGraphics: _CGContextFillRect
__ CoreGraphics: _CGContextMoveToPoint
__ CoreGraphics: _CGContextRelease
__ CoreGraphics: _CGContextRestoreGState
__ CoreGraphics: _CGContextSaveGState
__ CoreGraphics: _CGContextScaleCTM
__ CoreGraphics: _CGContextSetAlpha
__ CoreGraphics: _CGContextSetBlendMode
__ CoreGraphics: _CGContextSetFillColorWithColor
__ CoreGraphics: _CGContextSetLineWidth
__ CoreGraphics: _CGContextSetRGBFillColor
__ CoreGraphics: _CGContextSetStrokeColorWithColor
__ CoreGraphics: _CGContextStrokePath
__ CoreGraphics: _CGContextTranslateCTM
__ CoreGraphics: _CGDataProviderCreateWithCFData
__ CoreGraphics: _CGImageCreateWithImageInRect
__ CoreGraphics: _CGImageCreateWithJPEGDataProvider
__ CoreGraphics: _CGImageCreateWithPNGDataProvider
__ CoreGraphics: _CGImageGetColorSpace
__ CoreGraphics: _CGImageGetHeight
__ CoreGraphics: _CGImageGetWidth
__ CoreGraphics: _CGImageRelease
__ CoreGraphics: _CGImageRetain
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectApplyAffineTransform
__ CoreGraphics: _CGRectContainsPoint
__ CoreGraphics: _CGRectContainsRect
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetMidY
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectInfinite
__ CoreGraphics: _CGRectInset
__ CoreGraphics: _CGRectIntegral
__ CoreGraphics: _CGRectIntersection
__ CoreGraphics: _CGRectIntersectsRect
__ CoreGraphics: _CGRectIsEmpty
__ CoreGraphics: _CGRectIsInfinite
__ CoreGraphics: _CGRectIsNull
__ CoreGraphics: _CGRectNull
__ CoreGraphics: _CGRectOffset
__ CoreGraphics: _CGRectUnion
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ CoreGraphics: _kCGColorSpaceSRGB
__ CoreImage: _CIDetectorAccuracy
__ CoreImage: _CIDetectorAccuracyHigh
__ CoreImage: _CIDetectorAccuracyLow
__ CoreImage: _CIDetectorEyeBlink
__ CoreImage: _CIDetectorImageOrientation
__ CoreImage: _CIDetectorSmile
__ CoreImage: _CIDetectorTracking
__ CoreImage: _CIDetectorTypeFace
__ CoreImage: _CIFeatureTypeFace
__ CoreImage: _OBJC_CLASS_$_CIContext
__ CoreImage: _OBJC_CLASS_$_CIDetector
__ CoreImage: _OBJC_CLASS_$_CIFilter
__ CoreImage: _OBJC_CLASS_$_CIImage
__ CoreImage: _kCIInputImageKey
__ CoreLocation: _OBJC_CLASS_$_CLGeocoder
__ CoreLocation: _OBJC_CLASS_$_CLLocation
__ CoreLocation: _kCLErrorDomain
__ CoreLocation: _kCLLocationAccuracyHundredMeters
__ CoreMedia: _CMAudioFormatDescriptionEqual
__ CoreMedia: _CMAudioFormatDescriptionGetStreamBasicDescription
__ CoreMedia: _CMFormatDescriptionGetMediaSubType
__ CoreMedia: _CMSampleBufferGetAudioBufferListWithRetainedBlockBuffer
__ CoreMedia: _CMSampleBufferGetDuration
__ CoreMedia: _CMSampleBufferGetFormatDescription
__ CoreMedia: _CMSampleBufferGetNumSamples
__ CoreMedia: _CMSampleBufferGetOutputPresentationTimeStamp
__ CoreMedia: _CMSampleBufferGetPresentationTimeStamp
__ CoreMedia: _CMSampleBufferGetSampleTimingInfoArray
__ CoreMedia: _CMTimeAbsoluteValue
__ CoreMedia: _CMTimeAdd
__ CoreMedia: _CMTimeCompare
__ CoreMedia: _CMTimeConvertScale
__ CoreMedia: _CMTimeCopyAsDictionary
__ CoreMedia: _CMTimeCopyDescription
__ CoreMedia: _CMTimeGetSeconds
__ CoreMedia: _CMTimeMake
__ CoreMedia: _CMTimeMakeFromDictionary
__ CoreMedia: _CMTimeMakeWithSeconds
__ CoreMedia: _CMTimeMappingMake
__ CoreMedia: _CMTimeMaximum
__ CoreMedia: _CMTimeMinimum
__ CoreMedia: _CMTimeMultiply
__ CoreMedia: _CMTimeMultiplyByFloat64
__ CoreMedia: _CMTimeMultiplyByRatio
__ CoreMedia: _CMTimeRangeContainsTime
__ CoreMedia: _CMTimeRangeContainsTimeRange
__ CoreMedia: _CMTimeRangeCopyAsDictionary
__ CoreMedia: _CMTimeRangeCopyDescription
__ CoreMedia: _CMTimeRangeEqual
__ CoreMedia: _CMTimeRangeFromTimeToTime
__ CoreMedia: _CMTimeRangeGetEnd
__ CoreMedia: _CMTimeRangeGetIntersection
__ CoreMedia: _CMTimeRangeMake
__ CoreMedia: _CMTimeRangeMakeFromDictionary
__ CoreMedia: _CMTimeRangeShow
__ CoreMedia: _CMTimeSubtract
__ CoreMedia: _CMVideoFormatDescriptionGetDimensions
__ CoreMedia: _kCMTimeInvalid
__ CoreMedia: _kCMTimePositiveInfinity
__ CoreMedia: _kCMTimeRangeInvalid
__ CoreMedia: _kCMTimeRangeZero
__ CoreMedia: _kCMTimeZero
__ CoreServices: _OBJC_CLASS_$_LSApplicationWorkspace
__ CoreServices: _UTTypeConformsTo
__ CoreServices: _kUTTypeGIF
__ CoreServices: _kUTTypeImage
__ CoreServices: _kUTTypeJPEG
__ CoreServices: _kUTTypeJPEG2000
__ CoreServices: _kUTTypeMPEG4
__ CoreServices: _kUTTypeMovie
__ CoreServices: _kUTTypePNG
__ CoreServices: _kUTTypeQuickTimeMovie
__ CoreServices: _kUTTypeRawImage
__ CoreText: _CTFontCopyFontDescriptor
__ CoreText: _CTFontCreateWithName
__ CoreText: _CTFontDescriptorCopyAttribute
__ CoreText: _CTFontGetGlyphsForCharacters
__ CoreText: _CTFramesetterCreateWithAttributedString
__ CoreText: _CTFramesetterSuggestFrameSizeWithConstraints
__ CoreText: _kCTFontCharacterSetAttribute
__ CoreVideo: _kCVPixelBufferBytesPerRowAlignmentKey
__ CoreVideo: _kCVPixelBufferExtendedPixelsBottomKey
__ CoreVideo: _kCVPixelBufferHeightKey
__ CoreVideo: _kCVPixelBufferPixelFormatTypeKey
__ CoreVideo: _kCVPixelBufferPlaneAlignmentKey
__ CoreVideo: _kCVPixelBufferWidthKey
__ CrashReporterSupport: _CRIsAppleInternal
__ Foundation: _NSClassFromString
__ Foundation: _NSFileCreationDate
__ Foundation: _NSFileExtensionHidden
__ Foundation: _NSFileModificationDate
__ Foundation: _NSFileProtectionCompleteUntilFirstUserAuthentication
__ Foundation: _NSFileProtectionKey
__ Foundation: _NSFileSize
__ Foundation: _NSFileSystemFreeSize
__ Foundation: _NSFileType
__ Foundation: _NSFileTypeDirectory
__ Foundation: _NSFileTypeRegular
__ Foundation: _NSHomeDirectory
__ Foundation: _NSIntersectionRange
__ Foundation: _NSKeyValueChangeNewKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSLog
__ Foundation: _NSMetadataItemFSContentChangeDateKey
__ Foundation: _NSMetadataItemFSNameKey
__ Foundation: _NSMetadataItemFSSizeKey
__ Foundation: _NSMetadataItemPathKey
__ Foundation: _NSMetadataItemURLKey
__ Foundation: _NSMetadataQueryDidFinishGatheringNotification
__ Foundation: _NSMetadataQueryDidStartGatheringNotification
__ Foundation: _NSMetadataQueryDidUpdateNotification
__ Foundation: _NSMetadataQueryGatheringProgressNotification
__ Foundation: _NSMetadataQueryUbiquitousDataScope
__ Foundation: _NSMetadataQueryUbiquitousDocumentsScope
__ Foundation: _NSMetadataUbiquitousItemPercentDownloadedKey
__ Foundation: _NSOSStatusErrorDomain
__ Foundation: _NSRangeFromString
__ Foundation: _NSSelectorFromString
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromRange
__ Foundation: _NSStringFromSelector
__ Foundation: _NSTemporaryDirectory
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _NSUnionRange
__ Foundation: _NSZoneFromPointer
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSAutoreleasePool
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSCompoundPredicate
__ Foundation: _OBJC_CLASS_$_NSCondition
__ Foundation: _OBJC_CLASS_$_NSCountedSet
__ Foundation: _OBJC_CLASS_$_NSDateComponentsFormatter
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileCoordinator
__ Foundation: _OBJC_CLASS_$_NSFileHandle
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSIndexPath
__ Foundation: _OBJC_CLASS_$_NSIndexSet
__ Foundation: _OBJC_CLASS_$_NSItemProvider
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSLayoutConstraint
__ Foundation: _OBJC_CLASS_$_NSLock
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMetadataQuery
__ Foundation: _OBJC_CLASS_$_NSMutableAttributedString
__ Foundation: _OBJC_CLASS_$_NSMutableCharacterSet
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSOperation
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSRecursiveLock
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSScanner
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSUndoManager
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_METACLASS_$_NSOperation
__ Foundation: __NSDictionaryOfVariableBindings
__ ImageIO: _CGImageSourceCopyPropertiesAtIndex
__ ImageIO: _CGImageSourceCreateWithURL
__ ImageIO: _kCGImagePropertyGPSDictionary
__ ImageIO: _kCGImagePropertyGPSLatitude
__ ImageIO: _kCGImagePropertyGPSLatitudeRef
__ ImageIO: _kCGImagePropertyGPSLongitude
__ ImageIO: _kCGImagePropertyGPSLongitudeRef
__ LinkPresentation: _OBJC_CLASS_$_LPLinkMetadata
__ MapKit: _MKMapPointForCoordinate
__ MapKit: _MKMetersBetweenMapPoints
__ MediaPlayer: _MPMediaItemPropertyArtist
__ MediaPlayer: _MPMediaItemPropertyAssetURL
__ MediaPlayer: _MPMediaItemPropertyIsCloudItem
__ MediaPlayer: _MPMediaItemPropertyPersistentID
__ MediaPlayer: _MPMediaItemPropertyStoreSagaID
__ MediaPlayer: _MPMediaItemPropertyTitle
__ MediaPlayer: _MPMediaLibraryDidChangeNotification
__ MediaPlayer: _OBJC_CLASS_$_MPMediaItem
__ MediaPlayer: _OBJC_CLASS_$_MPMediaLibrary
__ MediaPlayer: _OBJC_CLASS_$_MPMediaPickerController
__ MediaPlayer: _OBJC_CLASS_$_MPMediaPropertyPredicate
__ MediaPlayer: _OBJC_CLASS_$_MPMediaQuery
__ MobileAsset: _ASDownloadOptionAllow2G
__ MobileAsset: _ASDownloadOptionAllow3G
__ MobileAsset: _ASDownloadOptionAllow4G
__ MobileAsset: _ASDownloadOptionAllowBatteryPower
__ MobileAsset: _ASDownloadOptionAllowWiFi
__ MobileAsset: _OBJC_CLASS_$_ASAsset
__ MobileAsset: _OBJC_CLASS_$_ASAssetQuery
__ MobileAsset: _OBJC_CLASS_$_MAAsset
__ MobileAsset: _OBJC_CLASS_$_MAAssetQuery
__ MobileAsset: _OBJC_CLASS_$_MADownloadOptions
__ OpenGLES: _OBJC_CLASS_$_EAGLContext
__ Photos: _OBJC_CLASS_$_PHAdjustmentData
__ Photos: _OBJC_CLASS_$_PHAsset
__ Photos: _OBJC_CLASS_$_PHAssetChangeRequest
__ Photos: _OBJC_CLASS_$_PHAssetCollection
__ Photos: _OBJC_CLASS_$_PHAssetCreationRequest
__ Photos: _OBJC_CLASS_$_PHAssetResource
__ Photos: _OBJC_CLASS_$_PHAssetResourceCreationOptions
__ Photos: _OBJC_CLASS_$_PHAssetResourceManager
__ Photos: _OBJC_CLASS_$_PHAssetResourceRequestOptions
__ Photos: _OBJC_CLASS_$_PHCachingImageManager
__ Photos: _OBJC_CLASS_$_PHContentEditingInputRequestOptions
__ Photos: _OBJC_CLASS_$_PHFace
__ Photos: _OBJC_CLASS_$_PHFetchOptions
__ Photos: _OBJC_CLASS_$_PHFetchResult
__ Photos: _OBJC_CLASS_$_PHFetchResultChangeDetails
__ Photos: _OBJC_CLASS_$_PHImageManager
__ Photos: _OBJC_CLASS_$_PHImageRequestOptions
__ Photos: _OBJC_CLASS_$_PHManualFetchResult
__ Photos: _OBJC_CLASS_$_PHMemory
__ Photos: _OBJC_CLASS_$_PHMemoryChangeRequest
__ Photos: _OBJC_CLASS_$_PHPerson
__ Photos: _OBJC_CLASS_$_PHPhotoLibrary
__ Photos: _OBJC_CLASS_$_PHVideoRequestOptions
__ Photos: _PHImageErrorKey
__ Photos: _PHImageManagerMaximumSize
__ PhotosUI: _OBJC_CLASS_$_PHActivityProgressViewController
__ PhotosUI: _OBJC_CLASS_$_PHAirPlayScreenController
__ PhotosUI: _OBJC_CLASS_$_PHPlaceholderView
__ PhotosUI: _OBJC_CLASS_$_PUPhotosGridViewControllerPhoneSpec
__ PhotosUI: _OBJC_CLASS_$_PUPhotosPickerViewController
__ PhotosUI: _PULocalizedString
__ PhotosUICore: _OBJC_CLASS_$_PXExtendedTraitCollection
__ PhotosUICore: _OBJC_CLASS_$_PXFeatureSpec
__ PhotosUICore: _OBJC_CLASS_$_PXKitSettings
__ PhotosUICore: _OBJC_CLASS_$_PXTitleSubtitleUILabel
__ PhotosUICore: _OBJC_CLASS_$_PXUIAssetBadgeView
__ PhotosUICore: _OBJC_METACLASS_$_PXFeatureSpec
__ PhotosUICore: _PXAssetBadgeInfoCreateWithBadges
__ PhotosUICore: _PXAssetBadgeInfoNull
__ PhotosUICore: _PXViewSpecContextForMemoryTile
__ PhotosUICore: _PXViewSpecOptionsWithTitleFontName
__ ProVideo: _OBJC_CLASS_$_PVEffect
__ ProVideo: _OBJC_CLASS_$_PVEffectPreviewGenerator
__ ProVideo: _OBJC_CLASS_$_PVEffectResources
__ ProVideo: _OBJC_CLASS_$_PVInstructionGraphEffectNode
__ ProVideo: _OBJC_CLASS_$_PVInstructionGraphGeneratorNode
__ ProVideo: _OBJC_CLASS_$_PVInstructionGraphImageSourceNode
__ ProVideo: _OBJC_CLASS_$_PVInstructionGraphOrientationEffectNode
__ ProVideo: _OBJC_CLASS_$_PVInstructionGraphSourceTrackNode
__ ProVideo: _OBJC_CLASS_$_PVOrientationEffect
__ ProVideo: _OBJC_CLASS_$_PVVideoCompositing
__ ProVideo: _OBJC_CLASS_$_PVVideoCompositingExporter
__ ProVideo: _OBJC_CLASS_$_PVVideoCompositionInstruction
__ ProVideo: _PVVideoCompositingContextGPURenderAPIKey
__ ProVideo: _kEffectID_Compositing_Orientation
__ ProVideo: _kEffectID_Effect_Action
__ ProVideo: _kEffectID_Effect_Archive
__ ProVideo: _kEffectID_Effect_Dance
__ ProVideo: _kEffectID_Effect_Drift
__ ProVideo: _kEffectID_Effect_EpicCool
__ ProVideo: _kEffectID_Effect_EpicWarm
__ ProVideo: _kEffectID_Effect_FocalShift
__ ProVideo: _kEffectID_Effect_FunColor
__ ProVideo: _kEffectID_Effect_MoBAndW
__ ProVideo: _kEffectID_Effect_MoBlast
__ ProVideo: _kEffectID_Effect_MoBlockbuster
__ ProVideo: _kEffectID_Effect_MoBlue
__ ProVideo: _kEffectID_Effect_MoCamo
__ ProVideo: _kEffectID_Effect_MoDreamy
__ ProVideo: _kEffectID_Effect_MoDuotone
__ ProVideo: _kEffectID_Effect_MoFadeThroughColor
__ ProVideo: _kEffectID_Effect_MoKenBurns
__ ProVideo: _kEffectID_Effect_MoNone
__ ProVideo: _kEffectID_Effect_MoSilentEra
__ ProVideo: _kEffectID_Effect_MoVintage
__ ProVideo: _kEffectID_Effect_MoWestern
__ ProVideo: _kEffectID_Effect_Organic
__ ProVideo: _kEffectID_Effect_Swaying
__ ProVideo: _kEffectID_Effect_VerticalBlur
__ ProVideo: _kEffectID_Generator_2Boxes
__ ProVideo: _kEffectID_Generator_2Columns
__ ProVideo: _kEffectID_Generator_3Boxes
__ ProVideo: _kEffectID_Generator_3Columns
__ ProVideo: _kEffectID_Generator_Iris
__ ProVideo: _kEffectID_Generator_IrisNoFB
__ ProVideo: _kEffectID_Generator_SolidColor
__ ProVideo: _kEffectID_Title_LowerThirdCleanStrap
__ ProVideo: _kEffectID_Title_LowerThirdFade
__ ProVideo: _kEffectID_Title_LowerThirdLeft
__ ProVideo: _kEffectID_Title_LowerThirdPlayful
__ ProVideo: _kEffectID_Title_LowerThirdStrap
__ ProVideo: _kEffectID_Title_LowerThirdTextured
__ ProVideo: _kEffectID_Title_MoNone
__ ProVideo: _kEffectID_Title_SimpleCentered
__ ProVideo: _kEffectID_Title_SimpleCentered10
__ ProVideo: _kEffectID_Title_SimpleCentered11
__ ProVideo: _kEffectID_Title_SimpleCentered2
__ ProVideo: _kEffectID_Title_SimpleCentered3
__ ProVideo: _kEffectID_Title_SimpleCentered4
__ ProVideo: _kEffectID_Title_SimpleCentered5
__ ProVideo: _kEffectID_Title_SimpleCentered6
__ ProVideo: _kEffectID_Title_SimpleCentered7
__ ProVideo: _kEffectID_Title_SimpleCentered8
__ ProVideo: _kEffectID_Title_SimpleCentered9
__ ProVideo: _kEffectID_Title_SpecialtyBackplate
__ ProVideo: _kEffectID_Title_SpecialtyBoldDynamic
__ ProVideo: _kEffectID_Title_SpecialtyCircle
__ ProVideo: _kEffectID_Title_SpecialtyDivided
__ ProVideo: _kEffectID_Title_SpecialtyFormal
__ ProVideo: _kEffectID_Title_SpecialtyTextured
__ ProVideo: _kEffectID_Title_SpecialtyZoomDown
__ ProVideo: _kEffectID_Transition_BarWipeAngle
__ ProVideo: _kEffectID_Transition_BarWipeAngleB
__ ProVideo: _kEffectID_Transition_BarWipeVerticalA
__ ProVideo: _kEffectID_Transition_BarWipeVerticalB
__ ProVideo: _kEffectID_Transition_BarWipeVerticalC
__ ProVideo: _kEffectID_Transition_BurstsFades
__ ProVideo: _kEffectID_Transition_BurstsFlashMid
__ ProVideo: _kEffectID_Transition_BurstsPops
__ ProVideo: _kEffectID_Transition_CenterFlip
__ ProVideo: _kEffectID_Transition_CircleWipeA
__ ProVideo: _kEffectID_Transition_CrossDissolve2HorizontalBars
__ ProVideo: _kEffectID_Transition_CrossDissolve3HorizontalBars
__ ProVideo: _kEffectID_Transition_CrossDissolve3VerticalBars
__ ProVideo: _kEffectID_Transition_CrossDissolveBarsCenter
__ ProVideo: _kEffectID_Transition_CrossDissolveBarsHorizontal
__ ProVideo: _kEffectID_Transition_CrossDissolveBarsRandom
__ ProVideo: _kEffectID_Transition_CrossDissolveColorBlur
__ ProVideo: _kEffectID_Transition_CrossDissolveLightBlur
__ ProVideo: _kEffectID_Transition_CrossDissolveScaleDown
__ ProVideo: _kEffectID_Transition_CrossDissolveSmooth
__ ProVideo: _kEffectID_Transition_CutFlashColor
__ ProVideo: _kEffectID_Transition_CutOrganicFlareA
__ ProVideo: _kEffectID_Transition_CutOrganicFlareB
__ ProVideo: _kEffectID_Transition_CutOrganicFlareC
__ ProVideo: _kEffectID_Transition_CutOrganicFlareD
__ ProVideo: _kEffectID_Transition_CutOrganicFlashA
__ ProVideo: _kEffectID_Transition_CutOrganicFlashB
__ ProVideo: _kEffectID_Transition_CutOrganicFlashC
__ ProVideo: _kEffectID_Transition_CutScaleDown
__ ProVideo: _kEffectID_Transition_FadeDissolveColorBlur
__ ProVideo: _kEffectID_Transition_FadeDissolveLightBlur
__ ProVideo: _kEffectID_Transition_FadeDissolveScaleDown
__ ProVideo: _kEffectID_Transition_FadeDissolveSmooth
__ ProVideo: _kEffectID_Transition_FadeOrganicFadeA
__ ProVideo: _kEffectID_Transition_FadeOrganicZoomA
__ ProVideo: _kEffectID_Transition_FadeOrganicZoomB
__ ProVideo: _kEffectID_Transition_FlipEdge
__ ProVideo: _kEffectID_Transition_HalfCut
__ ProVideo: _kEffectID_Transition_HardCutScaleDown
__ ProVideo: _kEffectID_Transition_HePush
__ ProVideo: _kEffectID_Transition_MoCrossDissolve
__ ProVideo: _kEffectID_Transition_MoPictureInPicture
__ ProVideo: _kEffectID_Transition_MoSlideDown
__ ProVideo: _kEffectID_Transition_MoSlideLeft
__ ProVideo: _kEffectID_Transition_MoSlideRight
__ ProVideo: _kEffectID_Transition_MoSlideUp
__ ProVideo: _kEffectID_Transition_MoSplitScreen
__ ProVideo: _kEffectID_Transition_MoWipeDown
__ ProVideo: _kEffectID_Transition_MoWipeLeft
__ ProVideo: _kEffectID_Transition_MoWipeRight
__ ProVideo: _kEffectID_Transition_MoWipeUp
__ ProVideo: _kEffectID_Transition_MultiFade
__ ProVideo: _kEffectID_Transition_MultiFadeA1
__ ProVideo: _kEffectID_Transition_MultiFadeB1
__ ProVideo: _kEffectID_Transition_MultiFlip
__ ProVideo: _kEffectID_Transition_MultiFlipA1
__ ProVideo: _kEffectID_Transition_MultiFlipA2
__ ProVideo: _kEffectID_Transition_MultiFlipA3
__ ProVideo: _kEffectID_Transition_MultiFlipB1
__ ProVideo: _kEffectID_Transition_MultiFlipB2
__ ProVideo: _kEffectID_Transition_MultiFlipB3
__ ProVideo: _kEffectID_Transition_MultiOrganic
__ ProVideo: _kEffectID_Transition_MultiOrganicA1
__ ProVideo: _kEffectID_Transition_MultiOrganicA2
__ ProVideo: _kEffectID_Transition_MultiOrganicB1
__ ProVideo: _kEffectID_Transition_MultiOrganicB2
__ ProVideo: _kEffectID_Transition_MultiPop
__ ProVideo: _kEffectID_Transition_MultiPopA1
__ ProVideo: _kEffectID_Transition_MultiPopB1
__ ProVideo: _kEffectID_Transition_MultiSequentialCut
__ ProVideo: _kEffectID_Transition_MultiSequentialDissolve
__ ProVideo: _kEffectID_Transition_MultiSlide
__ ProVideo: _kEffectID_Transition_MultiSlideA1
__ ProVideo: _kEffectID_Transition_MultiSlideA2
__ ProVideo: _kEffectID_Transition_MultiSlideA3
__ ProVideo: _kEffectID_Transition_MultiSlideB1
__ ProVideo: _kEffectID_Transition_MultiSlideB2
__ ProVideo: _kEffectID_Transition_MultiSlideB3
__ ProVideo: _kEffectID_Transition_MultiSlideB4
__ ProVideo: _kEffectID_Transition_MultiZoomA1
__ ProVideo: _kEffectID_Transition_MultiZoomB1
__ ProVideo: _kEffectID_Transition_Organic3upCloneCut
__ ProVideo: _kEffectID_Transition_OrganicCutA
__ ProVideo: _kEffectID_Transition_OrganicCutB
__ ProVideo: _kEffectID_Transition_OrganicCutC
__ ProVideo: _kEffectID_Transition_OrganicDissolveA
__ ProVideo: _kEffectID_Transition_OrganicFlip
__ ProVideo: _kEffectID_Transition_OrganicFlipA
__ ProVideo: _kEffectID_Transition_OrganicFlipB
__ ProVideo: _kEffectID_Transition_OrganicFlipC
__ ProVideo: _kEffectID_Transition_OrganicSplice3HorizBars
__ ProVideo: _kEffectID_Transition_OrganicSpliceA
__ ProVideo: _kEffectID_Transition_OrganicSpliceB
__ ProVideo: _kEffectID_Transition_OrganicSpliceC
__ ProVideo: _kEffectID_Transition_OrganicSpliceD
__ ProVideo: _kEffectID_Transition_OrganicSpliceE
__ ProVideo: _kEffectID_Transition_PopColorCut
__ ProVideo: _kEffectID_Transition_PopColorCutB
__ ProVideo: _kEffectID_Transition_ScaleZoomCut
__ ProVideo: _kEffectID_Transition_SlideBarsHorizontal
__ ProVideo: _kEffectID_Transition_SlideDynamic
__ ProVideo: _kEffectID_Transition_SlideMirror
__ ProVideo: _kEffectID_Transition_SlideMirrorB
__ ProVideo: _kEffectID_Transition_SlideOrganicHorizontal
__ ProVideo: _kEffectID_Transition_SlideOrganicUpA
__ ProVideo: _kEffectID_Transition_SlideOrganicUpB
__ ProVideo: _kEffectID_Transition_SlideOrganicUpC
__ ProVideo: _kEffectID_Transition_SlidePhotoDrop
__ ProVideo: _kEffectID_Transition_SlideSlides
__ ProVideo: _kEffectID_Transition_ThreeUpCloneCut
__ ProVideo: _kEffectID_Transition_WipeAngle
__ ProVideo: _kEffectID_Transition_WipeAngleB
__ ProVideo: _kEffectID_Transition_Wipes
__ ProVideo: _kEffectID_Transition_XWipe
__ ProVideo: _kFFEffectProperty_Theme
__ ProVideo: _kFFEffectProperty_ThumbnailImagePath
__ ProVideo: _kFFEffectType_VideoFilter
__ ProVideo: _kFFEffectType_VideoGenerator
__ ProVideo: _kFFEffectType_VideoTitle
__ ProVideo: _kFFEffectType_VideoTransition
__ ProVideo: _kPVAlignmentLeft
__ ProVideo: _kPVAlignmentRight
__ ProVideo: _kPVCrossDissolveRampKey
__ ProVideo: _kPVFilterSeedKey
__ ProVideo: _kPVInputANeedsBackgroundKey
__ ProVideo: _kPVInputBNeedsBackgroundKey
__ ProVideo: _kPVKenBurnsEndXFormKey
__ ProVideo: _kPVKenBurnsStartXFormKey
__ ProVideo: _kPVMotionEffectAdditionalTitleScale
__ ProVideo: _kPVMotionEffectSwapAspect
__ ProVideo: _kPVMultiEffect_AlignmentKey
__ ProVideo: _kPVMultiEffect_GapColorKey
__ ProVideo: _kPVPipCropRectKey
__ ProVideo: _kPVPipFadeInKey
__ ProVideo: _kPVPipFadeOutKey
__ ProVideo: _kPVPipRectKey
__ ProVideo: _kPVPipScaleFactorKey
__ ProVideo: _kPVPortraitEffect_ScaleBackgroundKey
__ ProVideo: _kPVPortraitEffect_ScaleForegroundKey
__ ProVideo: _kPVPortraitEffect_StyleKey
__ ProVideo: _kPVSlideACropRectKey
__ ProVideo: _kPVSlideBCropRectKey
__ ProVideo: _kPVSplitACropRectKey
__ ProVideo: _kPVSplitBCropRectKey
__ ProVideo: _kPVTitleEffect_AnimationKey
__ ProVideo: _kPVTitleEffect_BackgroundColorKey
__ ProVideo: _kPVTitleEffect_BuildInKey
__ ProVideo: _kPVTitleEffect_BuildOutKey
__ ProVideo: _kPVTitleEffect_DisplayKey
__ ProVideo: _kPVTitleEffect_MainTitleStringKey
__ ProVideo: _kPVTitleEffect_PosterKey
__ ProVideo: _kPVTitleEffect_PrimaryColorKey
__ ProVideo: _kPVTitleEffect_SecondaryColorKey
__ ProVideo: _kPVTitleEffect_SnapshotBGKey
__ ProVideo: _kPVTitleEffect_SnapshotKey
__ ProVideo: _kPVTitleEffect_SnapshotUseDZKey
__ ProVideo: _kPVTitleEffect_SubTitleStringKey
__ ProVideo: _kPVTitleEffect_TitleStyleKey
__ ProVideo: _kPVTransitionEffect_BarKey
__ ProVideo: _kPVTransitionEffect_BlurKey
__ ProVideo: _kPVTransitionEffect_DirectionKey
__ ProVideo: _kPVTransitionEffect_LightKey
__ ProVideo: _kPVTransitionEffect_ZoomKey
__ ProVideo: _kPVVideoCompositingTooManyLiveCompositorsWarning
__ ProVideo: _kPVVideoCompositingTooManyLiveCompositorsWarning_LiveCount
__ ProVideo: _kPVVideoCompositingTooManyLiveCompositorsWarning_MaxExpected
__ QuartzCore: _CACurrentMediaTime
__ QuartzCore: _CATransform3DIdentity
__ QuartzCore: _CATransform3DMakeRotation
__ QuartzCore: _CATransform3DScale
__ QuartzCore: _CATransform3DTranslate
__ QuartzCore: _OBJC_CLASS_$_CABasicAnimation
__ QuartzCore: _OBJC_CLASS_$_CALayer
__ QuartzCore: _OBJC_CLASS_$_CATransaction
__ QuartzCore: _OBJC_METACLASS_$_CALayer
__ QuartzCore: _kCACornerCurveContinuous
__ QuartzCore: _kCAFillModeBoth
__ StoreServices: _OBJC_CLASS_$_SSAccountStore
__ SystemConfiguration: _SCNetworkReachabilityCreateWithAddress
__ SystemConfiguration: _SCNetworkReachabilityCreateWithName
__ SystemConfiguration: _SCNetworkReachabilityGetFlags
__ SystemConfiguration: _SCNetworkReachabilityScheduleWithRunLoop
__ SystemConfiguration: _SCNetworkReachabilitySetCallback
__ SystemConfiguration: _SCNetworkReachabilitySetDispatchQueue
__ SystemConfiguration: _SCNetworkReachabilityUnscheduleFromRunLoop
__ UIKit: _CGAffineTransformFromString
__ UIKit: _CGPointFromString
__ UIKit: _CGRectFromString
__ UIKit: _CGSizeFromString
__ UIKit: _NSBackgroundColorAttributeName
__ UIKit: _NSFontAttributeName
__ UIKit: _NSForegroundColorAttributeName
__ UIKit: _NSKernAttributeName
__ UIKit: _NSParagraphStyleAttributeName
__ UIKit: _NSShadowAttributeName
__ UIKit: _NSStringFromCGAffineTransform
__ UIKit: _NSStringFromCGPoint
__ UIKit: _NSStringFromCGRect
__ UIKit: _NSStringFromCGSize
__ UIKit: _NSStrokeWidthAttributeName
__ UIKit: _OBJC_CLASS_$_NSMutableParagraphStyle
__ UIKit: _OBJC_CLASS_$_NSParagraphStyle
__ UIKit: _OBJC_CLASS_$_NSShadow
__ UIKit: _OBJC_CLASS_$_NSTextAttachment
__ UIKit: _OBJC_CLASS_$_UIActivity
__ UIKit: _OBJC_CLASS_$_UIActivityIndicatorView
__ UIKit: _OBJC_CLASS_$_UIActivityItemProvider
__ UIKit: _OBJC_CLASS_$_UIActivityViewController
__ UIKit: _OBJC_CLASS_$_UIAlertAction
__ UIKit: _OBJC_CLASS_$_UIAlertController
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIBarButtonItem
__ UIKit: _OBJC_CLASS_$_UIBezierPath
__ UIKit: _OBJC_CLASS_$_UIBlurEffect
__ UIKit: _OBJC_CLASS_$_UIButton
__ UIKit: _OBJC_CLASS_$_UICollectionView
__ UIKit: _OBJC_CLASS_$_UICollectionViewCell
__ UIKit: _OBJC_CLASS_$_UICollectionViewController
__ UIKit: _OBJC_CLASS_$_UICollectionViewFlowLayout
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UICopyToPasteboardActivity
__ UIKit: _OBJC_CLASS_$_UIDevice
__ UIKit: _OBJC_CLASS_$_UIDocumentInteractionController
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIGraphicsImageRenderer
__ UIKit: _OBJC_CLASS_$_UIGraphicsImageRendererFormat
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageSymbolConfiguration
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UILabel
__ UIKit: _OBJC_CLASS_$_UILocalNotification
__ UIKit: _OBJC_CLASS_$_UILongPressGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIMovieScrubber
__ UIKit: _OBJC_CLASS_$_UINavigationController
__ UIKit: _OBJC_CLASS_$_UIPickerView
__ UIKit: _OBJC_CLASS_$_UIProgressView
__ UIKit: _OBJC_CLASS_$_UIResponder
__ UIKit: _OBJC_CLASS_$_UISaveToCameraRollActivity
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UIScreenEdgePanGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UISplitViewController
__ UIKit: _OBJC_CLASS_$_UIStoryboard
__ UIKit: _OBJC_CLASS_$_UISwipeGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UISwitch
__ UIKit: _OBJC_CLASS_$_UITableView
__ UIKit: _OBJC_CLASS_$_UITableViewCell
__ UIKit: _OBJC_CLASS_$_UITableViewController
__ UIKit: _OBJC_CLASS_$_UITableViewHeaderFooterView
__ UIKit: _OBJC_CLASS_$_UITapGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UITextField
__ UIKit: _OBJC_CLASS_$_UITextView
__ UIKit: _OBJC_CLASS_$_UIToolbar
__ UIKit: _OBJC_CLASS_$_UITraitCollection
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_CLASS_$_UIVisualEffectView
__ UIKit: _OBJC_CLASS_$__UIActivityItemCustomization
__ UIKit: _OBJC_CLASS_$__UIActivityItemCustomizationGroup
__ UIKit: _OBJC_CLASS_$__UIBackdropView
__ UIKit: _OBJC_CLASS_$__UIScreenRoutePickerViewController
__ UIKit: _OBJC_METACLASS_$_UIActivity
__ UIKit: _OBJC_METACLASS_$_UIActivityIndicatorView
__ UIKit: _OBJC_METACLASS_$_UIActivityItemProvider
__ UIKit: _OBJC_METACLASS_$_UIActivityViewController
__ UIKit: _OBJC_METACLASS_$_UIAlertAction
__ UIKit: _OBJC_METACLASS_$_UIAlertController
__ UIKit: _OBJC_METACLASS_$_UIButton
__ UIKit: _OBJC_METACLASS_$_UICollectionView
__ UIKit: _OBJC_METACLASS_$_UICollectionViewCell
__ UIKit: _OBJC_METACLASS_$_UICollectionViewController
__ UIKit: _OBJC_METACLASS_$_UICollectionViewFlowLayout
__ UIKit: _OBJC_METACLASS_$_UICopyToPasteboardActivity
__ UIKit: _OBJC_METACLASS_$_UIGestureRecognizer
__ UIKit: _OBJC_METACLASS_$_UINavigationController
__ UIKit: _OBJC_METACLASS_$_UIResponder
__ UIKit: _OBJC_METACLASS_$_UISaveToCameraRollActivity
__ UIKit: _OBJC_METACLASS_$_UITableViewCell
__ UIKit: _OBJC_METACLASS_$_UITableViewController
__ UIKit: _OBJC_METACLASS_$_UITableViewHeaderFooterView
__ UIKit: _OBJC_METACLASS_$_UIToolbar
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _UIAccessibilityPostNotification
__ UIKit: _UIActivityTypeAssignToContact
__ UIKit: _UIActivityTypeCopyToPasteboard
__ UIKit: _UIActivityTypeMessage
__ UIKit: _UIActivityTypeOpenInIBooks
__ UIKit: _UIActivityTypePostToFacebook
__ UIKit: _UIActivityTypePostToFlickr
__ UIKit: _UIActivityTypePostToTencentWeibo
__ UIKit: _UIActivityTypePostToTwitter
__ UIKit: _UIActivityTypePostToVimeo
__ UIKit: _UIActivityTypePostToWeibo
__ UIKit: _UIActivityTypeSaveToCameraRoll
__ UIKit: _UIApplicationDidBecomeActiveNotification
__ UIKit: _UIApplicationWillResignActiveNotification
__ UIKit: _UIApplicationWillTerminateNotification
__ UIKit: _UIBackgroundTaskInvalid
__ UIKit: _UIContentSizeCategoryDidChangeNotification
__ UIKit: _UIEdgeInsetsZero
__ UIKit: _UIFontDescriptorFeatureSettingsAttribute
__ UIKit: _UIFontFeatureSelectorIdentifierKey
__ UIKit: _UIFontFeatureTypeIdentifierKey
__ UIKit: _UIFontTextStyleBody
__ UIKit: _UIFontTextStyleCallout
__ UIKit: _UIFontTextStyleCaption1
__ UIKit: _UIFontTextStyleCaption2
__ UIKit: _UIFontTextStyleFootnote
__ UIKit: _UIGraphicsBeginImageContext
__ UIKit: _UIGraphicsBeginImageContextWithOptions
__ UIKit: _UIGraphicsEndImageContext
__ UIKit: _UIGraphicsGetCurrentContext
__ UIKit: _UIGraphicsGetImageFromCurrentImageContext
__ UIKit: _UIGraphicsPopContext
__ UIKit: _UIGraphicsPushContext
__ UIKit: _UIImageJPEGRepresentation
__ UIKit: _UIImagePNGRepresentation
__ UIKit: _UIKeyboardAnimationDurationUserInfoKey
__ UIKit: _UIKeyboardFrameEndUserInfoKey
__ UIKit: _UIKeyboardWillHideNotification
__ UIKit: _UIKeyboardWillShowNotification
__ UIKit: _UIRectFrame
__ UIKit: _UIScrollViewDecelerationRateFast
__ UIKit: _UIScrollViewDecelerationRateNormal
__ UIKit: _UITextFieldTextDidChangeNotification
__ VideoProcessing: _MediaAnalysisAnalysisTypesKey
__ VideoProcessing: _MediaAnalysisBlurResultsKey
__ VideoProcessing: _MediaAnalysisCameraMotionResultsKey
__ VideoProcessing: _MediaAnalysisCompositionResultsKey
__ VideoProcessing: _MediaAnalysisDateAnalyzedKey
__ VideoProcessing: _MediaAnalysisDistanceResultsKey
__ VideoProcessing: _MediaAnalysisFaceResultsKey
__ VideoProcessing: _MediaAnalysisFineSubjectMotionResultsKey
__ VideoProcessing: _MediaAnalysisFlagsKey
__ VideoProcessing: _MediaAnalysisInterestingnessResultsKey
__ VideoProcessing: _MediaAnalysisJunkResultsKey
__ VideoProcessing: _MediaAnalysisMovingObjectResultsKey
__ VideoProcessing: _MediaAnalysisOrientationResultsKey
__ VideoProcessing: _MediaAnalysisQualityKey
__ VideoProcessing: _MediaAnalysisQualityResultsKey
__ VideoProcessing: _MediaAnalysisResultAttributesKey
__ VideoProcessing: _MediaAnalysisResultDistanceAttributeKey
__ VideoProcessing: _MediaAnalysisResultDurationKey
__ VideoProcessing: _MediaAnalysisResultFaceBoundsAttributeKey
__ VideoProcessing: _MediaAnalysisResultFacePositionAttributeKey
__ VideoProcessing: _MediaAnalysisResultFlagsKey
__ VideoProcessing: _MediaAnalysisResultOrientationAttributeKey
__ VideoProcessing: _MediaAnalysisResultQualityKey
__ VideoProcessing: _MediaAnalysisResultSaliencyBoundsAttributeKey
__ VideoProcessing: _MediaAnalysisResultSaliencyConfidenceAttributeKey
__ VideoProcessing: _MediaAnalysisResultSceneprintDistanceAttributeKey
__ VideoProcessing: _MediaAnalysisResultSharpnessAttributeKey
__ VideoProcessing: _MediaAnalysisResultSharpnessFacesAttributeKey
__ VideoProcessing: _MediaAnalysisResultShotTypeAttributeKey
__ VideoProcessing: _MediaAnalysisResultStartKey
__ VideoProcessing: _MediaAnalysisResultsKey
__ VideoProcessing: _MediaAnalysisSaliencyResultsKey
__ VideoProcessing: _MediaAnalysisSceneResultsKey
__ VideoProcessing: _MediaAnalysisShotTypeResultsKey
__ VideoProcessing: _MediaAnalysisSubjectMotionResultsKey
__ VideoProcessing: _MediaAnalysisVersionKey
__ VideoProcessing: _MediaAnalysisVoiceResultsKey
__ Vision: _OBJC_CLASS_$_VNFaceprint
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _kMGQDiskUsageAmountDataAvailable
__ libMobileGestalt.dylib: _kMGQDiskUsageTotalDataCapacity
__ libSystem.B.dylib: _CC_MD5
__ libSystem.B.dylib: _OSAtomicCompareAndSwap32Barrier
__ libSystem.B.dylib: _OSAtomicDecrement32Barrier
__ libSystem.B.dylib: _OSAtomicDecrement64
__ libSystem.B.dylib: _OSAtomicIncrement32Barrier
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___exp10
__ libSystem.B.dylib: ___exp10f
__ libSystem.B.dylib: ___sincos_stret
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___stderrp
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _arc4random_uniform
__ libSystem.B.dylib: _atan
__ libSystem.B.dylib: _atan2
__ libSystem.B.dylib: _atexit_b
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_barrier_async
__ libSystem.B.dylib: _dispatch_barrier_sync
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_async
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_release
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_suspend
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dup2
__ libSystem.B.dylib: _exit
__ libSystem.B.dylib: _fflush
__ libSystem.B.dylib: _fmod
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _getrusage
__ libSystem.B.dylib: _host_statistics
__ libSystem.B.dylib: _log
__ libSystem.B.dylib: _log10
__ libSystem.B.dylib: _log10f
__ libSystem.B.dylib: _log2f
__ libSystem.B.dylib: _lroundf
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _mach_host_self
__ libSystem.B.dylib: _mach_task_self_
__ libSystem.B.dylib: _mach_timebase_info
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memcmp
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _pow
__ libSystem.B.dylib: _printf
__ libSystem.B.dylib: _pthread_mutex_lock
__ libSystem.B.dylib: _pthread_mutex_unlock
__ libSystem.B.dylib: _putchar
__ libSystem.B.dylib: _rand
__ libSystem.B.dylib: _rand_r
__ libSystem.B.dylib: _sinh
__ libSystem.B.dylib: _snprintf
__ libSystem.B.dylib: _sprintf
__ libSystem.B.dylib: _srand
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _sysctl
__ libSystem.B.dylib: _sysctlbyname
__ libSystem.B.dylib: _tan
__ libSystem.B.dylib: _task_info
__ libSystem.B.dylib: _usleep
__ libSystem.B.dylib: _vm_page_size
__ libSystem.B.dylib: dyld_stub_binder
__ libc++.1.dylib: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNSt11logic_errorC2EPKc
__ libc++.1.dylib: __ZNSt12length_errorD1Ev
__ libc++.1.dylib: __ZSt9terminatev
__ libc++.1.dylib: __ZTISt12length_error
__ libc++.1.dylib: __ZTIi
__ libc++.1.dylib: __ZTVSt12length_error
__ libc++.1.dylib: __ZdaPv
__ libc++.1.dylib: __ZdlPv
__ libc++.1.dylib: __Znam
__ libc++.1.dylib: __Znwm
__ libc++.1.dylib: ___cxa_allocate_exception
__ libc++.1.dylib: ___cxa_begin_catch
__ libc++.1.dylib: ___cxa_free_exception
__ libc++.1.dylib: ___cxa_throw
__ libc++.1.dylib: ___gxx_personality_v0
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_EHTYPE_id
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_allocWithZone
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyStruct
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _object_getClassName
MiroPlayerViewController : UIViewController /System/Library/Frameworks/CoreMedia.framework/CoreMedia
 @property  <MemoryOwner> *memoryOwnerDelegate

  // instance methods
  -[MiroPlayerViewController .cxx_destruct]
  -[MiroPlayerViewController viewWillAppear:]
  -[MiroPlayerViewController viewWillDisappear:]
  -[MiroPlayerViewController viewDidLoad]
  -[MiroPlayerViewController didReceiveMemoryWarning]
  -[MiroPlayerViewController warnTooManyLiveCompositors:]
  -[MiroPlayerViewController memoryOwnerDelegate]
  -[MiroPlayerViewController setMemoryOwnerDelegate:]


MiroMovieView : UIView /System/Library/Frameworks/CoreMedia.framework/CoreMedia
  // class methods
  +[MiroMovieView layerClass]

  // instance methods
  -[MiroMovieView player]
  -[MiroMovieView setPlayer:]
  -[MiroMovieView avPlayerLayer]
  -[MiroMovieView configurePlayerLayerAttributes]
  -[MiroMovieView cleanupPlayerLayerAttributes]


MiroPlayheadView : UIView /System/Library/Frameworks/CoreMedia.framework/CoreMedia
  // instance methods
  -[MiroPlayheadView .cxx_destruct]
  -[MiroPlayheadView initWithFrame:]
  -[MiroPlayheadView layoutSubviews]
  -[MiroPlayheadView tintColorDidChange]


PMRoundProgressViewController : UIViewController /System/Library/Frameworks/CoreMedia.framework/CoreMedia <UIGestureRecognizerDelegate>
 @property  BOOL didFadeOut
 @property  UILabel *label
 @property  PMRoundProgressView *progressView
 @property  UIButton *leftCancelButton
 @property  UIButton *rightCancelButton
 @property  UIScreenEdgePanGestureRecognizer *screenEdgePanLeftGestureRecognizer
 @property  NSString *labelText
 @property  float progress
 @property  BOOL showCancelButton
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PMRoundProgressViewController .cxx_destruct]
  -[PMRoundProgressViewController progress]
  -[PMRoundProgressViewController setLabel:]
  -[PMRoundProgressViewController label]
  -[PMRoundProgressViewController setProgress:]
  -[PMRoundProgressViewController viewDidLoad]
  -[PMRoundProgressViewController viewDidAppear:]
  -[PMRoundProgressViewController viewDidDisappear:]
  -[PMRoundProgressViewController cancelButton]
  -[PMRoundProgressViewController nibBundle]
  -[PMRoundProgressViewController prefersStatusBarHidden]
  -[PMRoundProgressViewController showCancelButton]
  -[PMRoundProgressViewController setLabelText:]
  -[PMRoundProgressViewController labelText]
  -[PMRoundProgressViewController progressView]
  -[PMRoundProgressViewController setProgressView:]
  -[PMRoundProgressViewController setShowCancelButton:]
  -[PMRoundProgressViewController configureView]
  -[PMRoundProgressViewController rightCancelButton]
  -[PMRoundProgressViewController leftCancelButton]
  -[PMRoundProgressViewController handlePanFromEdge:]
  -[PMRoundProgressViewController setScreenEdgePanLeftGestureRecognizer:]
  -[PMRoundProgressViewController screenEdgePanLeftGestureRecognizer]
  -[PMRoundProgressViewController didFadeOut]
  -[PMRoundProgressViewController setDidFadeOut:]
  -[PMRoundProgressViewController setCancelTarget:action:]
  -[PMRoundProgressViewController setLeftCancelButton:]
  -[PMRoundProgressViewController setRightCancelButton:]


MiroAssetSuggestionsCollectionViewController : UIViewController /System/Library/Frameworks/CoreMedia.framework/CoreMedia <UICollectionViewDelegateFlowLayout, UICollectionViewDataSource>
 @property  NSMutableArray *allAssets
 @property  UIBarButtonItem *doneButton
 @property  UIBarButtonItem *cancelButton
 @property  UIBarButtonItem *showAllButton
 @property  BOOL showDebugInterfaces
 @property  UICollectionView *collectionView
 @property  NSString *memoryLocalizedTitle
 @property  NSArray *assets
 @property  <MiroAssetSuggestionsCollectionViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MiroAssetSuggestionsCollectionViewController _indexOAssetWithCreationDate:inChronologicallySortedAssets:insertionIndex:]

  // instance methods
  -[MiroAssetSuggestionsCollectionViewController delegate]
  -[MiroAssetSuggestionsCollectionViewController setDelegate:]
  -[MiroAssetSuggestionsCollectionViewController .cxx_destruct]
  -[MiroAssetSuggestionsCollectionViewController viewWillDisappear:]
  -[MiroAssetSuggestionsCollectionViewController collectionView]
  -[MiroAssetSuggestionsCollectionViewController viewDidLoad]
  -[MiroAssetSuggestionsCollectionViewController numberOfSectionsInCollectionView:]
  -[MiroAssetSuggestionsCollectionViewController collectionView:numberOfItemsInSection:]
  -[MiroAssetSuggestionsCollectionViewController collectionView:cellForItemAtIndexPath:]
  -[MiroAssetSuggestionsCollectionViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[MiroAssetSuggestionsCollectionViewController cancelButton]
  -[MiroAssetSuggestionsCollectionViewController setCancelButton:]
  -[MiroAssetSuggestionsCollectionViewController setCollectionView:]
  -[MiroAssetSuggestionsCollectionViewController collectionView:shouldDeselectItemAtIndexPath:]
  -[MiroAssetSuggestionsCollectionViewController done:]
  -[MiroAssetSuggestionsCollectionViewController setDoneButton:]
  -[MiroAssetSuggestionsCollectionViewController doneButton]
  -[MiroAssetSuggestionsCollectionViewController assets]
  -[MiroAssetSuggestionsCollectionViewController setAssets:]
  -[MiroAssetSuggestionsCollectionViewController cancel:]
  -[MiroAssetSuggestionsCollectionViewController showAllButton]
  -[MiroAssetSuggestionsCollectionViewController setShowAllButton:]
  -[MiroAssetSuggestionsCollectionViewController _selectedAssets]
  -[MiroAssetSuggestionsCollectionViewController allAssets]
  -[MiroAssetSuggestionsCollectionViewController _assetAtIndex:]
  -[MiroAssetSuggestionsCollectionViewController setShowDebugInterfaces:]
  -[MiroAssetSuggestionsCollectionViewController showAll:]
  -[MiroAssetSuggestionsCollectionViewController assetsArePhotosOnly]
  -[MiroAssetSuggestionsCollectionViewController showDebugInterfaces]
  -[MiroAssetSuggestionsCollectionViewController _indexOfAssetID:]
  -[MiroAssetSuggestionsCollectionViewController memoryLocalizedTitle]
  -[MiroAssetSuggestionsCollectionViewController _updateDebugLabelsOnCell:withAsset:]
  -[MiroAssetSuggestionsCollectionViewController _workaround_24890628_setupSplitScreenWidthConstraint:]
  -[MiroAssetSuggestionsCollectionViewController _setupPopoverPresentationIfNecessary:fromView:]
  -[MiroAssetSuggestionsCollectionViewController selectCellsWithAssetIDs:]
  -[MiroAssetSuggestionsCollectionViewController setMemoryLocalizedTitle:]


MiroAppDelegate : UIResponder /System/Library/Frameworks/CoreMedia.framework/CoreMedia <UIApplicationDelegate>
 @property  UIWindow *window
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MiroAppDelegate .cxx_destruct]
  -[MiroAppDelegate window]
  -[MiroAppDelegate setWindow:]
  -[MiroAppDelegate applicationDidReceiveMemoryWarning:]
  -[MiroAppDelegate applicationWillResignActive:]
  -[MiroAppDelegate applicationDidBecomeActive:]
  -[MiroAppDelegate applicationWillEnterForeground:]
  -[MiroAppDelegate applicationDidEnterBackground:]
  -[MiroAppDelegate applicationWillTerminate:]
  -[MiroAppDelegate application:didFinishLaunchingWithOptions:]


PMRoundProgressView : UIView /System/Library/Frameworks/CoreMedia.framework/CoreMedia
 @property  double progress
 @property  double displayedProgress

  // class methods
  +[PMRoundProgressView layerClass]

  // instance methods
  -[PMRoundProgressView initWithCoder:]
  -[PMRoundProgressView progress]
  -[PMRoundProgressView setProgress:]
  -[PMRoundProgressView initWithFrame:]
  -[PMRoundProgressView actionForLayer:forKey:]
  -[PMRoundProgressView displayedProgress]


PMRoundProgressLayer : CALayer /System/Library/Frameworks/Photos.framework/Photos
 @property  double progress

  // class methods
  +[PMRoundProgressLayer needsDisplayForKey:]

  // instance methods
  -[PMRoundProgressLayer drawInContext:]


PMScrubberImageSource : NSObject /usr/lib/libc++.1.dylib
 @property  {CGSize=dd} maximumThumbnailSize
 @property  NSObject<OS_dispatch_queue> *isolationQueue

  // instance methods
  -[PMScrubberImageSource init]
  -[PMScrubberImageSource dealloc]
  -[PMScrubberImageSource .cxx_destruct]
  -[PMScrubberImageSource isolationQueue]
  -[PMScrubberImageSource setIsolationQueue:]
  -[PMScrubberImageSource setMaximumThumbnailSize:]
  -[PMScrubberImageSource processPendingThumbnailRequests]
  -[PMScrubberImageSource maximumThumbnailSize]
  -[PMScrubberImageSource setupImageGeneratorWithAVAsset:]
  -[PMScrubberImageSource enqueueThumbnailRequestForTimestamp:withResultHandler:]
  -[PMScrubberImageSource cancelPendingThubmnailRequests]


PMCopyToPasteboardActivity : UICopyToPasteboardActivity /System/Library/Frameworks/CoreMedia.framework/CoreMedia
  // instance methods
  -[PMCopyToPasteboardActivity canPerformWithActivityItems:]


MiroEditorFlowLayout : UICollectionViewFlowLayout /System/Library/Frameworks/CoreMedia.framework/CoreMedia
 @property  NSIndexPath *currentIndexPath
 @property  NSIndexPath *neighboringIndexPath
 @property  double transitionProgress
 @property  double abscissa
 @property  NSMapTable *initalIndexPathToCGRectMap
 @property  NSMapTable *layoutIndexPathToCGRectMap
 @property  {UIEdgeInsets=dddd} sectionInsets
 @property  NSIndexPath *snappedIndexPath
 @property  NSIndexPath *centerCellIndexPath
 @property  double maximumCenterItemLoupeSpacing

  // instance methods
  -[MiroEditorFlowLayout .cxx_destruct]
  -[MiroEditorFlowLayout invalidateLayout]
  -[MiroEditorFlowLayout prepareLayout]
  -[MiroEditorFlowLayout layoutAttributesForElementsInRect:]
  -[MiroEditorFlowLayout layoutAttributesForItemAtIndexPath:]
  -[MiroEditorFlowLayout collectionViewContentSize]
  -[MiroEditorFlowLayout setTransitionProgress:]
  -[MiroEditorFlowLayout targetContentOffsetForProposedContentOffset:withScrollingVelocity:]
  -[MiroEditorFlowLayout transitionProgress]
  -[MiroEditorFlowLayout currentIndexPath]
  -[MiroEditorFlowLayout setCurrentIndexPath:]
  -[MiroEditorFlowLayout sectionInsets]
  -[MiroEditorFlowLayout setSectionInsets:]
  -[MiroEditorFlowLayout _sizeForItemAtIndexPath:]
  -[MiroEditorFlowLayout maximumCenterItemLoupeSpacing]
  -[MiroEditorFlowLayout _snappedContentOffsetForProposedContentOffset:chosenLayoutAttributes:]
  -[MiroEditorFlowLayout setSnappedIndexPath:]
  -[MiroEditorFlowLayout initalIndexPathToCGRectMap]
  -[MiroEditorFlowLayout layoutIndexPathToCGRectMap]
  -[MiroEditorFlowLayout setNeighboringIndexPath:]
  -[MiroEditorFlowLayout setInitalIndexPathToCGRectMap:]
  -[MiroEditorFlowLayout setLayoutIndexPathToCGRectMap:]
  -[MiroEditorFlowLayout _rectForItemAtIndexPath:withLoupe:]
  -[MiroEditorFlowLayout centerCellIndexPath]
  -[MiroEditorFlowLayout setAbscissa:]
  -[MiroEditorFlowLayout abscissa]
  -[MiroEditorFlowLayout _transitionProgressFrom:abscissa:outNeighborIndexPath:]
  -[MiroEditorFlowLayout wantsLoupe]
  -[MiroEditorFlowLayout neighboringIndexPath]
  -[MiroEditorFlowLayout _loupeAmountForIndexPath:]
  -[MiroEditorFlowLayout _horizontalOffsetForIndexPath:]
  -[MiroEditorFlowLayout snappedIndexPath]
  -[MiroEditorFlowLayout contentOffsetForScrollingToIndexPath:transitionProgress:]
  -[MiroEditorFlowLayout setMaximumCenterItemLoupeSpacing:]


PMMusicNavigationController : UINavigationController /System/Library/Frameworks/CoreMedia.framework/CoreMedia <UIAdaptivePresentationControllerDelegate>
 @property  <MusicChangeInformable> *musicDidChangeDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PMMusicNavigationController .cxx_destruct]
  -[PMMusicNavigationController viewDidLoad]
  -[PMMusicNavigationController presentationControllerShouldDismiss:]
  -[PMMusicNavigationController preferredUserInterfaceStyle]
  -[PMMusicNavigationController musicDidChangeDelegate]
  -[PMMusicNavigationController setMusicDidChangeDelegate:]


MiroDurationPickerCell : UIView /System/Library/Frameworks/CoreMedia.framework/CoreMedia
 @property  UILabel *textLabel
 @property  NSLayoutConstraint *textLabelLeadingConstraint
 @property  NSLayoutConstraint *textLabelTrailingConstraint

  // instance methods
  -[MiroDurationPickerCell .cxx_destruct]
  -[MiroDurationPickerCell textLabel]
  -[MiroDurationPickerCell setTextLabel:]
  -[MiroDurationPickerCell setTextLabelLeadingConstraint:]
  -[MiroDurationPickerCell setTextLabelTrailingConstraint:]
  -[MiroDurationPickerCell textLabelLeadingConstraint]
  -[MiroDurationPickerCell textLabelTrailingConstraint]


PMEditorDurationViewController : UIViewController /System/Library/Frameworks/CoreMedia.framework/CoreMedia <UIPickerViewDelegate, UIPickerViewDataSource, UITableViewDelegate, UITableViewDataSource>
 @property  UIPickerView *durationPicker
 @property  UILabel *minutesLabel
 @property  UILabel *secondsLabel
 @property  unsigned long minimumDuration
 @property  unsigned long maximumDuration
 @property  PMDurationProvider *durationProvider
 @property  UITableView *tableView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PMEditorDurationViewController .cxx_destruct]
  -[PMEditorDurationViewController tableView]
  -[PMEditorDurationViewController viewDidLoad]
  -[PMEditorDurationViewController viewWillLayoutSubviews]
  -[PMEditorDurationViewController tableView:numberOfRowsInSection:]
  -[PMEditorDurationViewController tableView:cellForRowAtIndexPath:]
  -[PMEditorDurationViewController numberOfSectionsInTableView:]
  -[PMEditorDurationViewController setTableView:]
  -[PMEditorDurationViewController tableView:heightForRowAtIndexPath:]
  -[PMEditorDurationViewController numberOfComponentsInPickerView:]
  -[PMEditorDurationViewController pickerView:numberOfRowsInComponent:]
  -[PMEditorDurationViewController pickerView:widthForComponent:]
  -[PMEditorDurationViewController pickerView:rowHeightForComponent:]
  -[PMEditorDurationViewController pickerView:viewForRow:forComponent:reusingView:]
  -[PMEditorDurationViewController pickerView:didSelectRow:inComponent:]
  -[PMEditorDurationViewController maximumDuration]
  -[PMEditorDurationViewController secondsLabel]
  -[PMEditorDurationViewController setSecondsLabel:]
  -[PMEditorDurationViewController minimumDuration]
  -[PMEditorDurationViewController durationProvider]
  -[PMEditorDurationViewController durationPicker]
  -[PMEditorDurationViewController setDurationPicker:]
  -[PMEditorDurationViewController setMinutesLabel:]
  -[PMEditorDurationViewController minutesLabel]
  -[PMEditorDurationViewController refreshPickerSelectionTime]
  -[PMEditorDurationViewController secondsComponentOffset]
  -[PMEditorDurationViewController isValidSelectionForRow:forComponent:]
  -[PMEditorDurationViewController pickerView:voiceOverStringForRow:forComponent:]
  -[PMEditorDurationViewController createDurationPickerView]
  -[PMEditorDurationViewController setDurationProvider:]


MiroMusicMenuViewController : UIViewController /System/Library/Frameworks/CoreMedia.framework/CoreMedia <MPMediaPickerControllerDelegate, UITableViewDelegate, UITableViewDataSource, MusicChangeInformable>
 @property  BOOL observingAppWillResignActive
 @property  VEKBlueprint *previousBlueprint
 @property  PMMusicNavigationController *soundtrackNavigationController
 @property  <NSObject> *artworkDownloadObserver
 @property  UITableView *tableView
 @property  <PMEditProviderDelegate> *delegate
 @property  PMMusicProvider *musicProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MiroMusicMenuViewController dealloc]
  -[MiroMusicMenuViewController delegate]
  -[MiroMusicMenuViewController setDelegate:]
  -[MiroMusicMenuViewController .cxx_destruct]
  -[MiroMusicMenuViewController tableView]
  -[MiroMusicMenuViewController viewWillAppear:]
  -[MiroMusicMenuViewController viewWillDisappear:]
  -[MiroMusicMenuViewController viewDidLoad]
  -[MiroMusicMenuViewController viewWillLayoutSubviews]
  -[MiroMusicMenuViewController viewDidLayoutSubviews]
  -[MiroMusicMenuViewController tableView:numberOfRowsInSection:]
  -[MiroMusicMenuViewController tableView:cellForRowAtIndexPath:]
  -[MiroMusicMenuViewController numberOfSectionsInTableView:]
  -[MiroMusicMenuViewController setTableView:]
  -[MiroMusicMenuViewController tableView:heightForRowAtIndexPath:]
  -[MiroMusicMenuViewController tableView:didSelectRowAtIndexPath:]
  -[MiroMusicMenuViewController mediaPicker:didPickMediaItems:]
  -[MiroMusicMenuViewController mediaPickerDidCancel:]
  -[MiroMusicMenuViewController popFromNavigationController]
  -[MiroMusicMenuViewController _addObserverForTextSizeDidChange]
  -[MiroMusicMenuViewController _removeObserverForTextSizeDidChange]
  -[MiroMusicMenuViewController artworkDownloadObserver]
  -[MiroMusicMenuViewController setArtworkDownloadObserver:]
  -[MiroMusicMenuViewController musicProvider]
  -[MiroMusicMenuViewController setPreviousBlueprint:]
  -[MiroMusicMenuViewController previousBlueprint]
  -[MiroMusicMenuViewController didChangeMusicSwitch:]
  -[MiroMusicMenuViewController fetchAlbumArtworkFromMediaIdentifier:]
  -[MiroMusicMenuViewController didTapEditMusic:]
  -[MiroMusicMenuViewController userTextSizeDidChange]
  -[MiroMusicMenuViewController setMusicProvider:]
  -[MiroMusicMenuViewController setSoundtrackNavigationController:]
  -[MiroMusicMenuViewController soundtrackNavigationController]
  -[MiroMusicMenuViewController _has_iTunesMusic]
  -[MiroMusicMenuViewController presentCategoryViewController]
  -[MiroMusicMenuViewController musicDidChange]
  -[MiroMusicMenuViewController albumArtworkForSong:]
  -[MiroMusicMenuViewController observingAppWillResignActive]
  -[MiroMusicMenuViewController setObservingAppWillResignActive:]


MiroMusicMenuCell : UITableViewCell /System/Library/Frameworks/CoreMedia.framework/CoreMedia
 @property  UILabel *upperDetailsLabel
 @property  UILabel *lowerDetailsLabel
 @property  UIImageView *artworkView
 @property  NSString *detailText
 @property  NSString *secondaryDetailText
 @property  NSLayoutConstraint *artworkLeadingConstraint

  // instance methods
  -[MiroMusicMenuCell .cxx_destruct]
  -[MiroMusicMenuCell prepareForReuse]
  -[MiroMusicMenuCell awakeFromNib]
  -[MiroMusicMenuCell setSelected:animated:]
  -[MiroMusicMenuCell detailText]
  -[MiroMusicMenuCell setDetailText:]
  -[MiroMusicMenuCell _updateFonts]
  -[MiroMusicMenuCell artworkView]
  -[MiroMusicMenuCell setArtworkView:]
  -[MiroMusicMenuCell artworkLeadingConstraint]
  -[MiroMusicMenuCell setSecondaryDetailText:]
  -[MiroMusicMenuCell upperDetailsLabel]
  -[MiroMusicMenuCell lowerDetailsLabel]
  -[MiroMusicMenuCell secondaryDetailText]
  -[MiroMusicMenuCell setArtworkLeadingConstraint:]
  -[MiroMusicMenuCell setUpperDetailsLabel:]
  -[MiroMusicMenuCell setLowerDetailsLabel:]


PMTrimmerDebugView : PMPassthroughView
 @property  PHAsset *asset
 @property  int duration
 @property  UILabel *label
 @property  <DebugDataSourceProtocol> *debugDataSource

  // class methods
  +[PMTrimmerDebugView createViewAndAddToParentView:]

  // instance methods
  -[PMTrimmerDebugView .cxx_destruct]
  -[PMTrimmerDebugView duration]
  -[PMTrimmerDebugView setBounds:]
  -[PMTrimmerDebugView setLabel:]
  -[PMTrimmerDebugView label]
  -[PMTrimmerDebugView asset]
  -[PMTrimmerDebugView setAsset:]
  -[PMTrimmerDebugView setDuration:]
  -[PMTrimmerDebugView _resetRangeModelLayers]
  -[PMTrimmerDebugView colorWithPatternColors:baseColor:]
  -[PMTrimmerDebugView _addRangeLayerWithColor:x:y:width:height:]
  -[PMTrimmerDebugView _addRangeLayerWithColor:x:y:width:markEnds:]
  -[PMTrimmerDebugView debugDataSource]
  -[PMTrimmerDebugView _addAnalysisIndicators]
  -[PMTrimmerDebugView addSuggestionsToRanges:]
  -[PMTrimmerDebugView addClipsToRanges:]
  -[PMTrimmerDebugView _rangeModelsByType:]
  -[PMTrimmerDebugView colorForMetadataRange:]
  -[PMTrimmerDebugView isOverlapWithPreviousRangeForIndex:inRangeModels:]
  -[PMTrimmerDebugView _attributedStringWithColoredLabelsForKeys:withRangeModelsByType:]
  -[PMTrimmerDebugView _addAutoEditScore:lastLaneOfTypeOffset:]
  -[PMTrimmerDebugView baseColorForMetadataRangeTypeKey:]
  -[PMTrimmerDebugView colorPatternForRatingRange:baseColor:]
  -[PMTrimmerDebugView colorPatternForCameraMotionRange:]
  -[PMTrimmerDebugView colorPatternForQualityRange:]
  -[PMTrimmerDebugView colorPatternForInterestingnessRange:]
  -[PMTrimmerDebugView colorPatternForFineActionRange:]
  -[PMTrimmerDebugView setDebugDataSource:]
  -[PMTrimmerDebugView reloadRanges]


MiroMovie : NSObject /usr/lib/libc++.1.dylib <ExportDelegate>
 @property  MiroMemory *memory
 @property  AVPlayerItem *playerItem
 @property  MiroAutoEditor *autoEditor
 @property  BOOL allowNonPHMemoryForUnitTesting
 @property  NSString *outputString
 @property  id associatedPlayerViewController
 @property  MiroExportController *exportController
 @property  PHAsset *keyAsset
 @property  PHAssetCollection *collection
 @property  UIViewController *playerViewController
 @property  NSSet *defaultAssets
 @property  <MiroMovieDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MiroMovie runTest:options:usingPlayerViewController:]

  // instance methods
  -[MiroMovie init]
  -[MiroMovie dealloc]
  -[MiroMovie delegate]
  -[MiroMovie setDelegate:]
  -[MiroMovie .cxx_destruct]
  -[MiroMovie collection]
  -[MiroMovie dataRepresentation]
  -[MiroMovie title]
  -[MiroMovie setTitle:]
  -[MiroMovie duration]
  -[MiroMovie initWithDataRepresentation:]
  -[MiroMovie memory]
  -[MiroMovie subtitle]
  -[MiroMovie setDuration:]
  -[MiroMovie setSubtitle:]
  -[MiroMovie maximumDuration]
  -[MiroMovie _backgroundInit]
  -[MiroMovie playerItem]
  -[MiroMovie setPlayerItem:]
  -[MiroMovie keyAsset]
  -[MiroMovie keyAsset]
  -[MiroMovie setKeyAsset:]
  -[MiroMovie setKeyAsset:]
  -[MiroMovie mood]
  -[MiroMovie setMemory:]
  -[MiroMovie addAsset:]
  -[MiroMovie initWithAssetCollection:]
  -[MiroMovie setMood:]
  -[MiroMovie removeAsset:]
  -[MiroMovie titleStyle]
  -[MiroMovie setTitleStyle:]
  -[MiroMovie playerViewController]
  -[MiroMovie outputString]
  -[MiroMovie setSongID:]
  -[MiroMovie songID]
  -[MiroMovie setCollection:]
  -[MiroMovie prepareForPlayback]
  -[MiroMovie production]
  -[MiroMovie initWithAssetCollection:keyAsset:]
  -[MiroMovie defaultAssets]
  -[MiroMovie diagnosticItemProvider]
  -[MiroMovie isCompelling]
  -[MiroMovie pregenerateMovieWithCompletionHandler:]
  -[MiroMovie cancelPregenerateMovie]
  -[MiroMovie setExportController:]
  -[MiroMovie exportController]
  -[MiroMovie associatedPlayerViewController]
  -[MiroMovie autoEditor]
  -[MiroMovie setAssociatedPlayerViewController:]
  -[MiroMovie allowNonPHMemoryForUnitTesting]
  -[MiroMovie _teardownInternals]
  -[MiroMovie setAutoEditor:]
  -[MiroMovie setOutputString:]
  -[MiroMovie didFinishExport]
  -[MiroMovie exportController:progressedTo:preventBackslide:]
  -[MiroMovie cancelPrepareForPlayback]
  -[MiroMovie createPHMemory]
  -[MiroMovie setAllowNonPHMemoryForUnitTesting:]
  -[MiroMovie _generateProjectWithProgressHandler:completionHandler:]
  -[MiroMovie _exportProject:presets:progressHandler:completionHandler:]
  -[MiroMovie moodIDmap]
  -[MiroMovie generateProjectWithProgressHandler:completionHandler:]
  -[MiroMovie playerItemWithProgressHandler:completionHandler:]
  -[MiroMovie exportWithPresets:progressHandler:completionHandler:]
  -[MiroMovie availableSongs]
  -[MiroMovie availableTitleStyles]
  -[MiroMovie removeClip:]
  -[MiroMovie setRangeOfInterest:forClip:]
  -[MiroMovie setVolume:forClip:]
  -[MiroMovie exportSessionWithPresetName:]
  -[MiroMovie _getMiroTapToRadarFilePath]
  -[MiroMovie _tapToRadarDebug]
  -[MiroMovie _tapToRadarMemory]
  -[MiroMovie _tapToRadarBlueprint]
  -[MiroMovie _tapToRadarPicklist]
  -[MiroMovie _tapToRadarRanges]
  -[MiroMovie _tapToRadarMediaanalysis_db]
  -[MiroMovie _tapToRadarMediaanalysis_db_shm]
  -[MiroMovie _tapToRadarMediaanalysis_db_wal]
  -[MiroMovie tapToRadar]
  -[MiroMovie _testPregenerateWithCompletion:]


MiroProgressWatcher : NSObject /usr/lib/libc++.1.dylib
 @property  @? progressHandler
 @property  float progress
 @property  id observedObject

  // instance methods
  -[MiroProgressWatcher dealloc]
  -[MiroProgressWatcher .cxx_destruct]
  -[MiroProgressWatcher observeValueForKeyPath:ofObject:change:context:]
  -[MiroProgressWatcher progress]
  -[MiroProgressWatcher progressHandler]
  -[MiroProgressWatcher setProgressHandler:]
  -[MiroProgressWatcher setProgress:]
  -[MiroProgressWatcher observedObject]
  -[MiroProgressWatcher initWithObservedObject:]
  -[MiroProgressWatcher setObservedObject:]


PMMovieContainerViewController : UIViewController /System/Library/Frameworks/CoreMedia.framework/CoreMedia <UIGestureRecognizerDelegate, PHAirPlayControllerContentProvider, PHAirPlayControllerRouteObserver, PMPlayerControlling>
 @property  NSString *savedAudioCategory
 @property  PMPosterViewController *parentAirplayPlaceholderPosterViewController
 @property  long long posterMoodIndex
 @property  long long secondaryPosterMoodIndex
 @property  NSLayoutConstraint *posterAspectConstraint
 @property  BOOL airplayActive
 @property  BOOL registeredAsAirPlayProvider
 @property  NSNumber *titleScale
 @property  UITapGestureRecognizer *visibilityTapGestureRecognizer
 @property  UITapGestureRecognizer *zoomDoubleTap
 @property  PMRotationViewController *rotationViewController
 @property  PMPosterContainerView *posterContainerView
 @property  PMPosterViewController *posterViewController
 @property  PMAVSynchronizedView *synchronizedView
 @property  PMTitleSubtitleView *titleView
 @property  id playbackProgressTimeObserver
 @property  <PMMovieContainerViewControllerDelegate> *delegate
 @property  BOOL preventRotation
 @property  BOOL playerReadyForDisplay
 @property  double posterAspect
 @property  AVPlayerItem *playerItem
 @property  float playerRate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL playing
 @property  int currentFrameTime

  // instance methods
  -[PMMovieContainerViewController dealloc]
  -[PMMovieContainerViewController delegate]
  -[PMMovieContainerViewController setDelegate:]
  -[PMMovieContainerViewController .cxx_destruct]
  -[PMMovieContainerViewController observeValueForKeyPath:ofObject:change:context:]
  -[PMMovieContainerViewController gestureRecognizer:shouldReceiveTouch:]
  -[PMMovieContainerViewController viewDidLoad]
  -[PMMovieContainerViewController didMoveToParentViewController:]
  -[PMMovieContainerViewController viewDidLayoutSubviews]
  -[PMMovieContainerViewController titleView]
  -[PMMovieContainerViewController isPlaying]
  -[PMMovieContainerViewController setPlaying:]
  -[PMMovieContainerViewController player]
  -[PMMovieContainerViewController playerItem]
  -[PMMovieContainerViewController setPlayerItem:]
  -[PMMovieContainerViewController setCurrentTime:]
  -[PMMovieContainerViewController currentFrameTime]
  -[PMMovieContainerViewController airPlayControllerRouteAvailabilityChanged:]
  -[PMMovieContainerViewController airPlayControllerScreenAvailabilityChanged:]
  -[PMMovieContainerViewController wantsContentVisibleAfterUnregisteringWithAirPlayController:]
  -[PMMovieContainerViewController contentViewControllerForAirPlayController:]
  -[PMMovieContainerViewController setRotationViewController:]
  -[PMMovieContainerViewController rotationViewController]
  -[PMMovieContainerViewController addObserversToPlayer]
  -[PMMovieContainerViewController toggleZoom:]
  -[PMMovieContainerViewController setZoomDoubleTap:]
  -[PMMovieContainerViewController zoomDoubleTap]
  -[PMMovieContainerViewController toggleControlVisibility:]
  -[PMMovieContainerViewController setVisibilityTapGestureRecognizer:]
  -[PMMovieContainerViewController visibilityTapGestureRecognizer]
  -[PMMovieContainerViewController setSynchronizedView:]
  -[PMMovieContainerViewController synchronizedView]
  -[PMMovieContainerViewController heightOfTitleArea]
  -[PMMovieContainerViewController removeObserversFromPlayer]
  -[PMMovieContainerViewController addTimeObserverToPlayer]
  -[PMMovieContainerViewController playbackProgressTimeObserver]
  -[PMMovieContainerViewController setPlaybackProgressTimeObserver:]
  -[PMMovieContainerViewController setPosterContainerView:]
  -[PMMovieContainerViewController posterContainerView]
  -[PMMovieContainerViewController setPosterAspectConstraint:]
  -[PMMovieContainerViewController posterAspectConstraint]
  -[PMMovieContainerViewController setPosterViewController:]
  -[PMMovieContainerViewController posterViewController]
  -[PMMovieContainerViewController updateAirplay]
  -[PMMovieContainerViewController activateAirplay]
  -[PMMovieContainerViewController deactivateAirplay]
  -[PMMovieContainerViewController airPlayScreenController]
  -[PMMovieContainerViewController setAirplayActive:]
  -[PMMovieContainerViewController registeredAsAirPlayProvider]
  -[PMMovieContainerViewController _saveAudioCategory]
  -[PMMovieContainerViewController _makeAudioCategoryPlayback]
  -[PMMovieContainerViewController setRegisteredAsAirPlayProvider:]
  -[PMMovieContainerViewController _restoreAudioCategory]
  -[PMMovieContainerViewController savedAudioCategory]
  -[PMMovieContainerViewController setSavedAudioCategory:]
  -[PMMovieContainerViewController setPreventRotation:]
  -[PMMovieContainerViewController _notifyTitleScaleChanged]
  -[PMMovieContainerViewController setTitleScale:]
  -[PMMovieContainerViewController titleScale]
  -[PMMovieContainerViewController isPlayerAtEndOfProject]
  -[PMMovieContainerViewController setCurrentTime:completionHandler:]
  -[PMMovieContainerViewController playerReadyForDisplay]
  -[PMMovieContainerViewController setPlayerRate:]
  -[PMMovieContainerViewController hidePosterAnimated:withCompletion:]
  -[PMMovieContainerViewController playerResumeActive]
  -[PMMovieContainerViewController setupPosterViews]
  -[PMMovieContainerViewController teardownPosterViews]
  -[PMMovieContainerViewController showPosterAnimated:withCompletion:]
  -[PMMovieContainerViewController hidePosterTitleAnimated:withCompletion:]
  -[PMMovieContainerViewController setPosterAspect:]
  -[PMMovieContainerViewController posterAspect]
  -[PMMovieContainerViewController registerAsAirPlayProvider]
  -[PMMovieContainerViewController unregisterAsAirPlayProvider]
  -[PMMovieContainerViewController addAirPlayPlaceholderViewToParentView:]
  -[PMMovieContainerViewController removeAirPlayPlaceholderViewFromParentView:]
  -[PMMovieContainerViewController updatePostersViewsWithProduction:]
  -[PMMovieContainerViewController updatePostersViewsWithImages:]
  -[PMMovieContainerViewController playerRate]
  -[PMMovieContainerViewController setPlayerRate:time:]
  -[PMMovieContainerViewController preventRotation]
  -[PMMovieContainerViewController airplayActive]
  -[PMMovieContainerViewController parentAirplayPlaceholderPosterViewController]
  -[PMMovieContainerViewController setParentAirplayPlaceholderPosterViewController:]
  -[PMMovieContainerViewController posterMoodIndex]
  -[PMMovieContainerViewController setPosterMoodIndex:]
  -[PMMovieContainerViewController secondaryPosterMoodIndex]
  -[PMMovieContainerViewController setSecondaryPosterMoodIndex:]


MiroCircularProgressLayer : CALayer /System/Library/Frameworks/Photos.framework/Photos
 @property  float progress
 @property  UIColor *progressColor
 @property  double animationDuration

  // class methods
  +[MiroCircularProgressLayer needsDisplayForKey:]

  // instance methods
  -[MiroCircularProgressLayer .cxx_destruct]
  -[MiroCircularProgressLayer progress]
  -[MiroCircularProgressLayer setProgress:]
  -[MiroCircularProgressLayer animationDuration]
  -[MiroCircularProgressLayer setAnimationDuration:]
  -[MiroCircularProgressLayer setProgressColor:]
  -[MiroCircularProgressLayer initWithLayer:]
  -[MiroCircularProgressLayer progressColor]
  -[MiroCircularProgressLayer drawInContext:]


MiroCircularProgressBar : UIView /System/Library/Frameworks/CoreMedia.framework/CoreMedia
 @property  float progress
 @property  UIColor *progressColor
 @property  double animationDuration

  // class methods
  +[MiroCircularProgressBar layerClass]

  // instance methods
  -[MiroCircularProgressBar initWithCoder:]
  -[MiroCircularProgressBar progress]
  -[MiroCircularProgressBar setProgress:]
  -[MiroCircularProgressBar animationDuration]
  -[MiroCircularProgressBar setAnimationDuration:]
  -[MiroCircularProgressBar setProgressColor:]
  -[MiroCircularProgressBar progressColor]


PMTrimmerViewController : UIViewController /System/Library/Frameworks/CoreMedia.framework/CoreMedia <UIMovieScrubberDelegate, UIMovieScrubberDataSource>
 @property  NSObject *playerPeriodicTimeObserver
 @property  NSObject *trimBoundaryTimeObserver
 @property  AVPlayerItem *_playerItemForObserving
 @property  UIView *scrubberView
 @property  UIMovieScrubber *movieScrubber
 @property  PMTrimmerDebugView *debugOverlay
 @property  PMScrubberImageSource *thumbnailSource
 @property  NSString *thumbnailSourceAssetID
 @property  NSMutableArray *otherRangeLayers
 @property  double videoDuration
 @property  double videoAspectRatio
 @property  BOOL scrubbing
 @property  int inUseScrubberHandle
 @property  double deferredSeekTime
 @property  double lastSeekWallClockTime
 @property  BOOL playerBusySeeking
 @property  PMClipProvider *clipProvider
 @property  <PMTrimmerDelegate> *delegate
 @property  int projectFrameRate
 @property  AVPlayer *player
 @property  BOOL showsDebugMetadataOverlay
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PMTrimmerViewController dealloc]
  -[PMTrimmerViewController _invalidate]
  -[PMTrimmerViewController initWithCoder:]
  -[PMTrimmerViewController delegate]
  -[PMTrimmerViewController setDelegate:]
  -[PMTrimmerViewController .cxx_destruct]
  -[PMTrimmerViewController observeValueForKeyPath:ofObject:change:context:]
  -[PMTrimmerViewController _commonInit]
  -[PMTrimmerViewController initWithNibName:bundle:]
  -[PMTrimmerViewController viewDidLoad]
  -[PMTrimmerViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[PMTrimmerViewController didReceiveMemoryWarning]
  -[PMTrimmerViewController movieScrubber:valueDidChange:]
  -[PMTrimmerViewController movieScrubber:editingStartValueDidChange:]
  -[PMTrimmerViewController movieScrubber:editingEndValueDidChange:]
  -[PMTrimmerViewController movieScrubberDidFinishRequestingThumbnails:]
  -[PMTrimmerViewController movieScrubberDidBeginAnimatingZoom:]
  -[PMTrimmerViewController movieScrubberDidEndAnimatingZoom:]
  -[PMTrimmerViewController movieScrubber:willZoomToMinimumValue:maximumValue:]
  -[PMTrimmerViewController movieScrubberDuration:]
  -[PMTrimmerViewController movieScrubberDidBeginScrubbing:withHandle:]
  -[PMTrimmerViewController movieScrubberDidEndScrubbing:withHandle:]
  -[PMTrimmerViewController movieScrubber:evenlySpacedTimestamps:startingAt:endingAt:]
  -[PMTrimmerViewController movieScrubber:requestThumbnailImageForTimestamp:]
  -[PMTrimmerViewController movieScrubberThumbnailAspectRatio:]
  -[PMTrimmerViewController player]
  -[PMTrimmerViewController setPlayer:]
  -[PMTrimmerViewController isScrubbing]
  -[PMTrimmerViewController videoDuration]
  -[PMTrimmerViewController setVideoDuration:]
  -[PMTrimmerViewController _updateDebugOverlay]
  -[PMTrimmerViewController setScrubbing:]
  -[PMTrimmerViewController movieScrubber]
  -[PMTrimmerViewController setMovieScrubber:]
  -[PMTrimmerViewController _updateTrimHandles]
  -[PMTrimmerViewController _playerIsPlaying]
  -[PMTrimmerViewController videoAspectRatio]
  -[PMTrimmerViewController scrubberView]
  -[PMTrimmerViewController setScrubberView:]
  -[PMTrimmerViewController clipProvider]
  -[PMTrimmerViewController setProjectFrameRate:]
  -[PMTrimmerViewController _setPlayerItemForObserving:]
  -[PMTrimmerViewController projectFrameRate]
  -[PMTrimmerViewController _createView]
  -[PMTrimmerViewController setVideoAspectRatio:]
  -[PMTrimmerViewController _updateScrubberThumbVisibility]
  -[PMTrimmerViewController thumbnailSourceAssetID]
  -[PMTrimmerViewController thumbnailSource]
  -[PMTrimmerViewController setThumbnailSource:]
  -[PMTrimmerViewController setThumbnailSourceAssetID:]
  -[PMTrimmerViewController otherRangeLayers]
  -[PMTrimmerViewController setOtherRangeLayers:]
  -[PMTrimmerViewController playerPeriodicTimeObserver]
  -[PMTrimmerViewController setPlayerPeriodicTimeObserver:]
  -[PMTrimmerViewController trimBoundaryTimeObserver]
  -[PMTrimmerViewController setTrimBoundaryTimeObserver:]
  -[PMTrimmerViewController _seekToTime:completionHandler:]
  -[PMTrimmerViewController _playerItemDidReachEnd:]
  -[PMTrimmerViewController debugOverlay]
  -[PMTrimmerViewController _deferredSeek]
  -[PMTrimmerViewController deferredSeekTime]
  -[PMTrimmerViewController lastSeekWallClockTime]
  -[PMTrimmerViewController playerBusySeeking]
  -[PMTrimmerViewController setPlayerBusySeeking:]
  -[PMTrimmerViewController setDeferredSeekTime:]
  -[PMTrimmerViewController setLastSeekWallClockTime:]
  -[PMTrimmerViewController _deferredSeekToTime:]
  -[PMTrimmerViewController _updateScrubberTime]
  -[PMTrimmerViewController _seekPlayerToBeginning]
  -[PMTrimmerViewController setDebugOverlay:]
  -[PMTrimmerViewController showsDebugMetadataOverlay]
  -[PMTrimmerViewController _updateOtherRanges]
  -[PMTrimmerViewController setClipProvider:]
  -[PMTrimmerViewController updateDebugMetadataOverlay]
  -[PMTrimmerViewController setShowsDebugMetadataOverlay:]
  -[PMTrimmerViewController _playerItemForObserving]
  -[PMTrimmerViewController inUseScrubberHandle]
  -[PMTrimmerViewController setInUseScrubberHandle:]


_PMTrimmerContainerView : UIView /System/Library/Frameworks/CoreMedia.framework/CoreMedia
 @property  UIView *movieScrubber
 @property  UIView *debugOverlay

  // instance methods
  -[_PMTrimmerContainerView .cxx_destruct]
  -[_PMTrimmerContainerView intrinsicContentSize]
  -[_PMTrimmerContainerView sizeThatFits:]
  -[_PMTrimmerContainerView layoutSubviews]
  -[_PMTrimmerContainerView movieScrubber]
  -[_PMTrimmerContainerView setMovieScrubber:]
  -[_PMTrimmerContainerView debugOverlay]
  -[_PMTrimmerContainerView setDebugOverlay:]


PMAirplayActivity : UIActivity /System/Library/Frameworks/CoreMedia.framework/CoreMedia <PHAirPlayControllerRouteObserver>
 @property  BOOL _routeAvailable
 @property  <PMAirplayActivityDelegate> *delegate
 @property  UIBarButtonItem *barButtonItem
 @property  UIViewController *parentViewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PMAirplayActivity init]
  -[PMAirplayActivity dealloc]
  -[PMAirplayActivity delegate]
  -[PMAirplayActivity setDelegate:]
  -[PMAirplayActivity .cxx_destruct]
  -[PMAirplayActivity activityType]
  -[PMAirplayActivity parentViewController]
  -[PMAirplayActivity barButtonItem]
  -[PMAirplayActivity setBarButtonItem:]
  -[PMAirplayActivity setParentViewController:]
  -[PMAirplayActivity _systemImageName]
  -[PMAirplayActivity activityTitle]
  -[PMAirplayActivity canPerformWithActivityItems:]
  -[PMAirplayActivity performActivity]
  -[PMAirplayActivity tearDownForCompletion]
  -[PMAirplayActivity airPlayControllerRouteAvailabilityChanged:]
  -[PMAirplayActivity _registerForAirPlayNotifications]
  -[PMAirplayActivity _unregisterForAirPlayNotifications]
  -[PMAirplayActivity set_routeAvailable:]
  -[PMAirplayActivity _routeAvailable]


MiroEditorClipDebugView : UIView /System/Library/Frameworks/CoreMedia.framework/CoreMedia <UICollectionViewDataSource>
 @property  MiroColorSelectionController *colorSelectionController
 @property  UICollectionView *colorSwatchCollectionView
 @property  UILabel *label1
 @property  UILabel *label2
 @property  UILabel *label3
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MiroEditorClipDebugView initialize]

  // instance methods
  -[MiroEditorClipDebugView .cxx_destruct]
  -[MiroEditorClipDebugView numberOfSectionsInCollectionView:]
  -[MiroEditorClipDebugView collectionView:numberOfItemsInSection:]
  -[MiroEditorClipDebugView collectionView:cellForItemAtIndexPath:]
  -[MiroEditorClipDebugView colorSwatchCollectionView]
  -[MiroEditorClipDebugView setColorSwatchCollectionView:]
  -[MiroEditorClipDebugView setColorSelectionController:]
  -[MiroEditorClipDebugView colorSelectionController]
  -[MiroEditorClipDebugView label2]
  -[MiroEditorClipDebugView label3]
  -[MiroEditorClipDebugView _configureCell:withColor:overrideBorderColor:emphasize:label:]
  -[MiroEditorClipDebugView _labelTextIfSafeDominantColor:]
  -[MiroEditorClipDebugView _labelTextIfSafeAccentColor:]
  -[MiroEditorClipDebugView setupWithClipProvider:]
  -[MiroEditorClipDebugView label1]
  -[MiroEditorClipDebugView setLabel1:]
  -[MiroEditorClipDebugView setLabel2:]
  -[MiroEditorClipDebugView setLabel3:]


MiroSmartMusicMenuViewController : UITableViewController /System/Library/Frameworks/CoreMedia.framework/CoreMedia
 @property  long long selectedSection
 @property  long long selectedRow
 @property  NSString *moodID
 @property  Reachability *reachability
 @property  AVPlayer *player
 @property  id timeObserver
 @property  id playbackObserver
 @property  VEKSong *productionSong
 @property  VEKSong *playingSong
 @property  long long playingSongRow
 @property  BOOL observingAppWillResign
 @property  PMMusicProvider *musicProvider
 @property  <PMEditorToolbarOwner> *toolbarOwner
 @property  <PMEditProviderDelegate> *delegate

  // instance methods
  -[MiroSmartMusicMenuViewController dealloc]
  -[MiroSmartMusicMenuViewController delegate]
  -[MiroSmartMusicMenuViewController setDelegate:]
  -[MiroSmartMusicMenuViewController .cxx_destruct]
  -[MiroSmartMusicMenuViewController viewWillAppear:]
  -[MiroSmartMusicMenuViewController viewWillDisappear:]
  -[MiroSmartMusicMenuViewController viewDidLoad]
  -[MiroSmartMusicMenuViewController viewWillLayoutSubviews]
  -[MiroSmartMusicMenuViewController viewDidAppear:]
  -[MiroSmartMusicMenuViewController canBecomeFirstResponder]
  -[MiroSmartMusicMenuViewController tableView:numberOfRowsInSection:]
  -[MiroSmartMusicMenuViewController tableView:cellForRowAtIndexPath:]
  -[MiroSmartMusicMenuViewController numberOfSectionsInTableView:]
  -[MiroSmartMusicMenuViewController tableView:didSelectRowAtIndexPath:]
  -[MiroSmartMusicMenuViewController didReceiveMemoryWarning]
  -[MiroSmartMusicMenuViewController motionEnded:withEvent:]
  -[MiroSmartMusicMenuViewController selectedSection]
  -[MiroSmartMusicMenuViewController reachability]
  -[MiroSmartMusicMenuViewController setReachability:]
  -[MiroSmartMusicMenuViewController setup]
  -[MiroSmartMusicMenuViewController networkStatus]
  -[MiroSmartMusicMenuViewController player]
  -[MiroSmartMusicMenuViewController setPlayer:]
  -[MiroSmartMusicMenuViewController selectedRow]
  -[MiroSmartMusicMenuViewController setSelectedSection:]
  -[MiroSmartMusicMenuViewController setTimeObserver:]
  -[MiroSmartMusicMenuViewController timeObserver]
  -[MiroSmartMusicMenuViewController playbackObserver]
  -[MiroSmartMusicMenuViewController setPlaybackObserver:]
  -[MiroSmartMusicMenuViewController setSelectedRow:]
  -[MiroSmartMusicMenuViewController _addObserverForTextSizeDidChange]
  -[MiroSmartMusicMenuViewController musicProvider]
  -[MiroSmartMusicMenuViewController userTextSizeDidChange]
  -[MiroSmartMusicMenuViewController setMusicProvider:]
  -[MiroSmartMusicMenuViewController moodID]
  -[MiroSmartMusicMenuViewController setProductionSong:]
  -[MiroSmartMusicMenuViewController productionSong]
  -[MiroSmartMusicMenuViewController _setSelectedSection:andRow:]
  -[MiroSmartMusicMenuViewController _setupReachabiliy]
  -[MiroSmartMusicMenuViewController setPlayingSongRow:]
  -[MiroSmartMusicMenuViewController _pausePreview]
  -[MiroSmartMusicMenuViewController setPlayingSong:]
  -[MiroSmartMusicMenuViewController scrollToSelectedIndexPath]
  -[MiroSmartMusicMenuViewController toolbarOwner]
  -[MiroSmartMusicMenuViewController networkStatusChanged:]
  -[MiroSmartMusicMenuViewController toggleDownloadInCell:]
  -[MiroSmartMusicMenuViewController playingSong]
  -[MiroSmartMusicMenuViewController _updateProductionWithSong:]
  -[MiroSmartMusicMenuViewController playingSongRow]
  -[MiroSmartMusicMenuViewController _getPlayingCell]
  -[MiroSmartMusicMenuViewController _removeObserverForPlaybackEnded]
  -[MiroSmartMusicMenuViewController _removeObserverForAppWillResign]
  -[MiroSmartMusicMenuViewController _addObserverForPlaybackEnded]
  -[MiroSmartMusicMenuViewController _addObserverForAppWillResign]
  -[MiroSmartMusicMenuViewController _postProgressUpdate:]
  -[MiroSmartMusicMenuViewController observingAppWillResign]
  -[MiroSmartMusicMenuViewController _applicationWillResign]
  -[MiroSmartMusicMenuViewController setObservingAppWillResign:]
  -[MiroSmartMusicMenuViewController statusForSong:]
  -[MiroSmartMusicMenuViewController resetPlayingCell]
  -[MiroSmartMusicMenuViewController _previewSong:]
  -[MiroSmartMusicMenuViewController _selectedTableViewCell]
  -[MiroSmartMusicMenuViewController shouldPreviewSong:]
  -[MiroSmartMusicMenuViewController setToolbarOwner:]


PMSpinnerPlayPauseOverlay : UIView /System/Library/Frameworks/CoreMedia.framework/CoreMedia
 @property  UIView *spinnerView
 @property  UIView *playPauseButton
 @property  unsigned long displayState

  // instance methods
  -[PMSpinnerPlayPauseOverlay initWithCoder:]
  -[PMSpinnerPlayPauseOverlay .cxx_destruct]
  -[PMSpinnerPlayPauseOverlay initWithFrame:]
  -[PMSpinnerPlayPauseOverlay setup]
  -[PMSpinnerPlayPauseOverlay spinnerView]
  -[PMSpinnerPlayPauseOverlay setSpinnerView:]
  -[PMSpinnerPlayPauseOverlay setPlayPauseButton:]
  -[PMSpinnerPlayPauseOverlay playPauseButton]
  -[PMSpinnerPlayPauseOverlay setShowAsPause:]
  -[PMSpinnerPlayPauseOverlay displayState]
  -[PMSpinnerPlayPauseOverlay setDisplayState:]


PMRotationViewController : UIViewController /System/Library/Frameworks/CoreMedia.framework/CoreMedia
 @property  BOOL preventRotation
 @property  {CGSize=dd} playerSize
 @property  @? playerDidSwapBlock
 @property  double orientationSwitchTime
 @property  id proVideoPeriodicCaller
 @property  UIView *playerRotationView
 @property  AVPlayerViewController *playerViewController
 @property  PMTitleSubtitleView *titleView
 @property  BOOL zoomedToFill

  // instance methods
  -[PMRotationViewController dealloc]
  -[PMRotationViewController .cxx_destruct]
  -[PMRotationViewController viewDidLoad]
  -[PMRotationViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[PMRotationViewController titleView]
  -[PMRotationViewController setTitleView:]
  -[PMRotationViewController playerItem]
  -[PMRotationViewController playerViewController]
  -[PMRotationViewController setPlayerViewController:]
  -[PMRotationViewController setZoomedToFill:]
  -[PMRotationViewController externalClientMessedWithPlayerItem]
  -[PMRotationViewController gentleRebuild]
  -[PMRotationViewController zoomedToFill]
  -[PMRotationViewController extremeRebuild]
  -[PMRotationViewController setPreventRotation:]
  -[PMRotationViewController ImAfraidOfStuckBlur]
  -[PMRotationViewController signalCustomCompositorScheduler]
  -[PMRotationViewController signalCustomCompositorScheduler:playerRate:]
  -[PMRotationViewController preventRotation]
  -[PMRotationViewController setPlayerRotationView:]
  -[PMRotationViewController playerRotationView]
  -[PMRotationViewController createAVPlayer]
  -[PMRotationViewController destroyAVPlayer]
  -[PMRotationViewController _snapshotPlayer]
  -[PMRotationViewController currentPlayerTime]
  -[PMRotationViewController setOrientationSwitchTime:]
  -[PMRotationViewController setPlayerSize:]
  -[PMRotationViewController refreshCompositionIfNotPlaying]
  -[PMRotationViewController playerDidSwapBlock]
  -[PMRotationViewController orientationSwitchTime]
  -[PMRotationViewController adjustPlayerSizeAndViewTransform:]
  -[PMRotationViewController setPlayerDidSwapBlock:]
  -[PMRotationViewController _snapshotPlayerWithAspect:]
  -[PMRotationViewController addProVideoTimeObserver]
  -[PMRotationViewController removeProVideoTimeObserver]
  -[PMRotationViewController proVideoPeriodicCaller]
  -[PMRotationViewController setProVideoPeriodicCaller:]
  -[PMRotationViewController effectRenderedTime:]
  -[PMRotationViewController playerSize]


PMShareAnalyticsEvent : PMCoreAnalyticsEvent <CoreAnalyticsEventProtocol>
 @property  NSString *activityType
 @property  NSString *orientation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PMShareAnalyticsEvent .cxx_destruct]
  -[PMShareAnalyticsEvent activityType]
  -[PMShareAnalyticsEvent orientation]
  -[PMShareAnalyticsEvent eventName]
  -[PMShareAnalyticsEvent setOrientation:]
  -[PMShareAnalyticsEvent setActivityType:]
  -[PMShareAnalyticsEvent eventPayload]
  -[PMShareAnalyticsEvent sendToCoreAnalytics]
  -[PMShareAnalyticsEvent initWithActivityType:isLandscape:]


PMEditorDebugContainerViewController : UIViewController /System/Library/Frameworks/CoreMedia.framework/CoreMedia
 @property  PMDebugPickerViewController *moodPartPicker
 @property  <PMPlayerControlling> *playerController
 @property  MiroMemory *memory
 @property  unsigned long pickerMode

  // instance methods
  -[PMEditorDebugContainerViewController .cxx_destruct]
  -[PMEditorDebugContainerViewController memory]
  -[PMEditorDebugContainerViewController viewDidLoad]
  -[PMEditorDebugContainerViewController didReceiveMemoryWarning]
  -[PMEditorDebugContainerViewController prepareForSegue:sender:]
  -[PMEditorDebugContainerViewController playerController]
  -[PMEditorDebugContainerViewController setPlayerController:]
  -[PMEditorDebugContainerViewController setMemory:]
  -[PMEditorDebugContainerViewController pickerMode]
  -[PMEditorDebugContainerViewController setPickerMode:]
  -[PMEditorDebugContainerViewController setMoodPartPicker:]
  -[PMEditorDebugContainerViewController moodPartPicker]


PMEditorNavigationController : UINavigationController /System/Library/Frameworks/CoreMedia.framework/CoreMedia <UIPresentationControllerDelegatePrivate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PMEditorNavigationController presentationControllerShouldDismiss:]
  -[PMEditorNavigationController presentationControllerWillDismiss:]
  -[PMEditorNavigationController presentationControllerDidDismiss:]
  -[PMEditorNavigationController presentationControllerDidAttemptToDismiss:]
  -[PMEditorNavigationController awakeFromNib]
  -[PMEditorNavigationController preferredUserInterfaceStyle]


PMDebugPickerViewController : UITableViewController /System/Library/Frameworks/CoreMedia.framework/CoreMedia
 @property  long long selectedSection
 @property  long long selectedRow
 @property  NSArray *sortedMoodIDs
 @property  <PMPlayerControlling> *playerController
 @property  NSObject<NSCopying> *originalEntryID
 @property  NSString *moodID
 @property  @? replaceMoodPartForEntryIDBlock
 @property  NSDictionary *entryIDsByMood
 @property  NSDictionary *displayNamesByEntryID

  // instance methods
  -[PMDebugPickerViewController .cxx_destruct]
  -[PMDebugPickerViewController viewWillAppear:]
  -[PMDebugPickerViewController viewWillDisappear:]
  -[PMDebugPickerViewController viewDidLoad]
  -[PMDebugPickerViewController _setSelected:]
  -[PMDebugPickerViewController tableView:numberOfRowsInSection:]
  -[PMDebugPickerViewController tableView:cellForRowAtIndexPath:]
  -[PMDebugPickerViewController numberOfSectionsInTableView:]
  -[PMDebugPickerViewController tableView:titleForHeaderInSection:]
  -[PMDebugPickerViewController tableView:didSelectRowAtIndexPath:]
  -[PMDebugPickerViewController didReceiveMemoryWarning]
  -[PMDebugPickerViewController prepareForSegue:sender:]
  -[PMDebugPickerViewController selectedSection]
  -[PMDebugPickerViewController playerController]
  -[PMDebugPickerViewController setPlayerController:]
  -[PMDebugPickerViewController selectedRow]
  -[PMDebugPickerViewController setSelectedSection:]
  -[PMDebugPickerViewController setSelectedRow:]
  -[PMDebugPickerViewController _addObserverForTextSizeDidChange]
  -[PMDebugPickerViewController _removeObserverForTextSizeDidChange]
  -[PMDebugPickerViewController userTextSizeDidChange]
  -[PMDebugPickerViewController moodID]
  -[PMDebugPickerViewController setMoodID:]
  -[PMDebugPickerViewController setEntryIDsByMood:]
  -[PMDebugPickerViewController setDisplayNamesByEntryID:]
  -[PMDebugPickerViewController setOriginalEntryID:]
  -[PMDebugPickerViewController setReplaceMoodPartForEntryIDBlock:]
  -[PMDebugPickerViewController entryIDsByMood]
  -[PMDebugPickerViewController setSortedMoodIDs:]
  -[PMDebugPickerViewController originalEntryID]
  -[PMDebugPickerViewController _indexPathForEntryID:]
  -[PMDebugPickerViewController _moodIDForSection:]
  -[PMDebugPickerViewController _entryIDForIndexPath:]
  -[PMDebugPickerViewController displayNamesByEntryID]
  -[PMDebugPickerViewController replaceMoodPartForEntryIDBlock]
  -[PMDebugPickerViewController sortedMoodIDs]


PMInteractiveCollectionView : UICollectionView /System/Library/Frameworks/CoreMedia.framework/CoreMedia
 @property  BOOL supportsReordering
 @property  BOOL checkedSupportsReordering
 @property  <MiroCollectionViewDelegate> *delegate

  // instance methods
  -[PMInteractiveCollectionView beginInteractiveMovementForItemAtIndexPath:]
  -[PMInteractiveCollectionView cancelInteractiveMovement]
  -[PMInteractiveCollectionView endInteractiveMovement]
  -[PMInteractiveCollectionView checkedSupportsReordering]
  -[PMInteractiveCollectionView setCheckedSupportsReordering:]
  -[PMInteractiveCollectionView supportsReordering]


PMSaveProvider : NSObject /usr/lib/libc++.1.dylib
 @property  VEKProduction *production

  // instance methods
  -[PMSaveProvider .cxx_destruct]
  -[PMSaveProvider save:]
  -[PMSaveProvider production]
  -[PMSaveProvider setProduction:]
  -[PMSaveProvider initWithProduction:]


MiroTitleSubtitleView : UIView /System/Library/Frameworks/CoreMedia.framework/CoreMedia
 @property  UILabel *titleLabel
 @property  UILabel *subtitleLabel
 @property  double titleFontSize
 @property  BOOL titleShouldCapitalize
 @property  double titleStroke
 @property  double titleTracking
 @property  double titleSpaceTracking
 @property  double titleBaselineDistance
 @property  double titleOffset
 @property  NSLayoutConstraint *titleWidthConstraint
 @property  NSLayoutConstraint *titleHeightConstraint
 @property  NSLayoutConstraint *titleCenterYConstraint
 @property  NSLayoutConstraint *titleCenterXConstraint
 @property  NSString *subtitleFontName
 @property  double subtitleFontSize
 @property  BOOL subtitleShouldCapitalize
 @property  double subtitleStroke
 @property  double subtitleTracking
 @property  double subtitleSpaceTracking
 @property  NSLayoutConstraint *subtitleWidthConstraint
 @property  NSLayoutConstraint *subtitleHeightConstraint
 @property  NSLayoutConstraint *subtitleCenterYConstraint
 @property  NSLayoutConstraint *subtitleCenterXConstraint
 @property  double titleScale
 @property  NSString *titleFontName
 @property  NSString *titleText
 @property  NSString *subtitleText

  // instance methods
  -[MiroTitleSubtitleView .cxx_destruct]
  -[MiroTitleSubtitleView initWithFrame:]
  -[MiroTitleSubtitleView titleLabel]
  -[MiroTitleSubtitleView setTitleLabel:]
  -[MiroTitleSubtitleView titleOffset]
  -[MiroTitleSubtitleView setTitleOffset:]
  -[MiroTitleSubtitleView titleFont]
  -[MiroTitleSubtitleView subtitleFont]
  -[MiroTitleSubtitleView setTitleText:]
  -[MiroTitleSubtitleView setSubtitleLabel:]
  -[MiroTitleSubtitleView subtitleLabel]
  -[MiroTitleSubtitleView titleText]
  -[MiroTitleSubtitleView subtitleText]
  -[MiroTitleSubtitleView setSubtitleText:]
  -[MiroTitleSubtitleView titleFontName]
  -[MiroTitleSubtitleView titleFontSize]
  -[MiroTitleSubtitleView setTitleFontName:]
  -[MiroTitleSubtitleView setTitleFontSize:]
  -[MiroTitleSubtitleView subtitleFontSize]
  -[MiroTitleSubtitleView setSubtitleFontSize:]
  -[MiroTitleSubtitleView titleLineHeight]
  -[MiroTitleSubtitleView setTitleWidthConstraint:]
  -[MiroTitleSubtitleView titleWidthConstraint]
  -[MiroTitleSubtitleView setTitleHeightConstraint:]
  -[MiroTitleSubtitleView titleHeightConstraint]
  -[MiroTitleSubtitleView setTitleScale:]
  -[MiroTitleSubtitleView titleScale]
  -[MiroTitleSubtitleView setSubtitleWidthConstraint:]
  -[MiroTitleSubtitleView setSubtitleHeightConstraint:]
  -[MiroTitleSubtitleView setSubtitleCenterXConstraint:]
  -[MiroTitleSubtitleView setSubtitleCenterYConstraint:]
  -[MiroTitleSubtitleView subtitleCenterXConstraint]
  -[MiroTitleSubtitleView subtitleCenterYConstraint]
  -[MiroTitleSubtitleView subtitleWidthConstraint]
  -[MiroTitleSubtitleView subtitleHeightConstraint]
  -[MiroTitleSubtitleView setTitleCenterXConstraint:]
  -[MiroTitleSubtitleView setTitleCenterYConstraint:]
  -[MiroTitleSubtitleView titleCenterXConstraint]
  -[MiroTitleSubtitleView titleCenterYConstraint]
  -[MiroTitleSubtitleView makeSubviewsWithSize:]
  -[MiroTitleSubtitleView titleLineCount]
  -[MiroTitleSubtitleView subtitleFontName]
  -[MiroTitleSubtitleView setTitleShouldCapitalize:]
  -[MiroTitleSubtitleView setTitleStroke:]
  -[MiroTitleSubtitleView setTitleTracking:]
  -[MiroTitleSubtitleView setTitleSpaceTracking:]
  -[MiroTitleSubtitleView setTitleBaselineDistance:]
  -[MiroTitleSubtitleView setSubtitleFontName:]
  -[MiroTitleSubtitleView setSubtitleShouldCapitalize:]
  -[MiroTitleSubtitleView setSubtitleStroke:]
  -[MiroTitleSubtitleView setSubtitleTracking:]
  -[MiroTitleSubtitleView setSubtitleSpaceTracking:]
  -[MiroTitleSubtitleView titleShouldCapitalize]
  -[MiroTitleSubtitleView titleTracking]
  -[MiroTitleSubtitleView subtitleShouldCapitalize]
  -[MiroTitleSubtitleView subtitleTracking]
  -[MiroTitleSubtitleView subtitleStroke]
  -[MiroTitleSubtitleView aspectCorrectedSizeForSize:]
  -[MiroTitleSubtitleView maxWidthForDisplayForSize:]
  -[MiroTitleSubtitleView maxHeightForDisplayForSize:]
  -[MiroTitleSubtitleView initialTitleMultiplierWithSize:]
  -[MiroTitleSubtitleView emulatePhotosTitleStylesWithSize:multiplier:]
  -[MiroTitleSubtitleView attributedTitleString]
  -[MiroTitleSubtitleView initialSubtitleMultiplierWithSize:titleMultiplier:]
  -[MiroTitleSubtitleView emulatePhotosSubtitleStylesWithSize:multiplier:]
  -[MiroTitleSubtitleView attributedSubTitleString]
  -[MiroTitleSubtitleView titleTotalHeight]
  -[MiroTitleSubtitleView titleLineAscender]
  -[MiroTitleSubtitleView subtitleTotalHeight]
  -[MiroTitleSubtitleView titleLineLeading]
  -[MiroTitleSubtitleView titleLineDesenderHeight]
  -[MiroTitleSubtitleView subtitleLineHeight]
  -[MiroTitleSubtitleView updateSubtitleTitleLabelForSize:]
  -[MiroTitleSubtitleView titleStroke]
  -[MiroTitleSubtitleView titleSpaceTracking]
  -[MiroTitleSubtitleView titleBaselineDistance]
  -[MiroTitleSubtitleView subtitleSpaceTracking]


MiroAssetSuggestionsNavigationController : UINavigationController /System/Library/Frameworks/CoreMedia.framework/CoreMedia <UIAdaptivePresentationControllerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MiroAssetSuggestionsNavigationController presentationControllerShouldDismiss:]
  -[MiroAssetSuggestionsNavigationController awakeFromNib]
  -[MiroAssetSuggestionsNavigationController preferredUserInterfaceStyle]


PMShareOrientationSelectionViewController : UIViewController /System/Library/Frameworks/CoreMedia.framework/CoreMedia
 @property  PMPosterViewController *posterViewController
 @property  NSLayoutConstraint *aspectRatioConstraint
 @property  PMActivityItemProvider *itemProvider
 @property  double exportAspect

  // instance methods
  -[PMShareOrientationSelectionViewController init]
  -[PMShareOrientationSelectionViewController .cxx_destruct]
  -[PMShareOrientationSelectionViewController itemProvider]
  -[PMShareOrientationSelectionViewController setItemProvider:]
  -[PMShareOrientationSelectionViewController viewDidLoad]
  -[PMShareOrientationSelectionViewController createConstraints]
  -[PMShareOrientationSelectionViewController aspectRatioConstraint]
  -[PMShareOrientationSelectionViewController setAspectRatioConstraint:]
  -[PMShareOrientationSelectionViewController setPosterViewController:]
  -[PMShareOrientationSelectionViewController posterViewController]
  -[PMShareOrientationSelectionViewController upScalingFactor]
  -[PMShareOrientationSelectionViewController _updateSharingHeaderIcons]
  -[PMShareOrientationSelectionViewController exportAspect]
  -[PMShareOrientationSelectionViewController setExportAspect:]


PMiOSPlayheadView : UIView /System/Library/Frameworks/CoreMedia.framework/CoreMedia
 @property  UIView *cursor

  // instance methods
  -[PMiOSPlayheadView .cxx_destruct]
  -[PMiOSPlayheadView cursor]
  -[PMiOSPlayheadView layoutSubviews]
  -[PMiOSPlayheadView setCursor:]


PMiOSSliderCell : UICollectionViewCell /System/Library/Frameworks/CoreMedia.framework/CoreMedia
 @property  UILabel *label

  // instance methods
  -[PMiOSSliderCell .cxx_destruct]
  -[PMiOSSliderCell setLabel:]
  -[PMiOSSliderCell label]
  -[PMiOSSliderCell applyLayoutAttributes:]


PMiOSSliderViewController : UICollectionViewController /System/Library/Frameworks/CoreMedia.framework/CoreMedia
 @property  UICollectionViewFlowLayout *flowLayout
 @property  long long selectedItem
 @property  BOOL needsMiddlePositionUpdate
 @property  BOOL ignoreScrolling
 @property  <PMSliderProviderProtocol> *provider

  // instance methods
  -[PMiOSSliderViewController init]
  -[PMiOSSliderViewController dealloc]
  -[PMiOSSliderViewController .cxx_destruct]
  -[PMiOSSliderViewController setProvider:]
  -[PMiOSSliderViewController provider]
  -[PMiOSSliderViewController scrollViewDidScroll:]
  -[PMiOSSliderViewController scrollViewWillBeginDragging:]
  -[PMiOSSliderViewController scrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[PMiOSSliderViewController scrollViewDidEndDragging:willDecelerate:]
  -[PMiOSSliderViewController scrollViewDidEndDecelerating:]
  -[PMiOSSliderViewController scrollViewDidEndScrollingAnimation:]
  -[PMiOSSliderViewController willTransitionToTraitCollection:withTransitionCoordinator:]
  -[PMiOSSliderViewController viewDidLoad]
  -[PMiOSSliderViewController viewWillLayoutSubviews]
  -[PMiOSSliderViewController numberOfSectionsInCollectionView:]
  -[PMiOSSliderViewController collectionView:numberOfItemsInSection:]
  -[PMiOSSliderViewController collectionView:cellForItemAtIndexPath:]
  -[PMiOSSliderViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[PMiOSSliderViewController viewDidLayoutSubviews]
  -[PMiOSSliderViewController setSelectedItem:]
  -[PMiOSSliderViewController selectedItem]
  -[PMiOSSliderViewController collectionView:didSelectItemAtIndexPath:]
  -[PMiOSSliderViewController collectionView:didDeselectItemAtIndexPath:]
  -[PMiOSSliderViewController collectionView:targetContentOffsetForProposedContentOffset:]
  -[PMiOSSliderViewController collectionView:layout:sizeForItemAtIndexPath:]
  -[PMiOSSliderViewController collectionView:layout:insetForSectionAtIndex:]
  -[PMiOSSliderViewController collectionView:layout:minimumInteritemSpacingForSectionAtIndex:]
  -[PMiOSSliderViewController flowLayout]
  -[PMiOSSliderViewController updateFonts]
  -[PMiOSSliderViewController setIgnoreScrolling:]
  -[PMiOSSliderViewController needsMiddlePositionUpdate]
  -[PMiOSSliderViewController setNeedsMiddlePositionUpdate:]
  -[PMiOSSliderViewController invalidateSelectedItemPostion]
  -[PMiOSSliderViewController _setFontStyleForCell:highlighted:]
  -[PMiOSSliderViewController indexPathToMiddleItemInCollectionView:]
  -[PMiOSSliderViewController ignoreScrolling]
  -[PMiOSSliderViewController pointForMiddleOfItemInCollectionView:withOffset:]
  -[PMiOSSliderViewController performScrollTest:iterations:delta:length:]


MiroSongPreviewButton : UIButton /System/Library/Frameworks/CoreMedia.framework/CoreMedia
 @property  NSIndexPath *indexPath

  // instance methods
  -[MiroSongPreviewButton .cxx_destruct]
  -[MiroSongPreviewButton indexPath]
  -[MiroSongPreviewButton setIndexPath:]


MiroTouchingGestureRecognizer : UIGestureRecognizer /System/Library/Frameworks/CoreMedia.framework/CoreMedia
 @property  unsigned long _touchCount

  // instance methods
  -[MiroTouchingGestureRecognizer reset]
  -[MiroTouchingGestureRecognizer touchesBegan:withEvent:]
  -[MiroTouchingGestureRecognizer touchesEnded:withEvent:]
  -[MiroTouchingGestureRecognizer touchesCancelled:withEvent:]
  -[MiroTouchingGestureRecognizer _touchCount]
  -[MiroTouchingGestureRecognizer _incrementTouchesBy:]
  -[MiroTouchingGestureRecognizer _decrementTouchesBy:]
  -[MiroTouchingGestureRecognizer _setTouchCount:]


MemoriesViewController : UIViewController /System/Library/Frameworks/CoreMedia.framework/CoreMedia
  // class methods
  +[MemoriesViewController photosLabel]

  // instance methods
  -[MemoriesViewController viewWillAppear:]
  -[MemoriesViewController viewWillDisappear:]
  -[MemoriesViewController viewDidLoad]
  -[MemoriesViewController didMoveToParentViewController:]
  -[MemoriesViewController didReceiveMemoryWarning]


MemoriesHomeScreen : UIViewController /System/Library/Frameworks/CoreMedia.framework/CoreMedia
  // instance methods
  -[MemoriesHomeScreen viewDidLoad]


PMDebugCollectionViewController : UICollectionViewController /System/Library/Frameworks/CoreMedia.framework/CoreMedia <PMDebugCollectionViewControllerProtocol>
 @property  unsigned long currentSortType
 @property  NSArray *sortTitles
 @property  MiroAutoEditController *autoEditController
 @property  NSMutableDictionary *projectMoodNamedTransitions
 @property  BOOL isSaveMode
 @property  BOOL textOnly
 @property  BOOL hackReuseCell
 @property  PHFetchResult *curatedAssets
 @property  BOOL cancelled
 @property  UIBarButtonItem *sortBarButton
 @property  UIProgressView *progressView
 @property  UIAlertController *alertController
 @property  UIView *textContainerView
 @property  BOOL syncPreview
 @property  MiroMemory *memory
 @property  Project *project
 @property  VEKProduction *production
 @property  VEKResult *result
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PMDebugCollectionViewController .cxx_destruct]
  -[PMDebugCollectionViewController result]
  -[PMDebugCollectionViewController memory]
  -[PMDebugCollectionViewController cancelled]
  -[PMDebugCollectionViewController setResult:]
  -[PMDebugCollectionViewController setAlertController:]
  -[PMDebugCollectionViewController alertController]
  -[PMDebugCollectionViewController viewWillAppear:]
  -[PMDebugCollectionViewController viewDidLoad]
  -[PMDebugCollectionViewController numberOfSectionsInCollectionView:]
  -[PMDebugCollectionViewController collectionView:numberOfItemsInSection:]
  -[PMDebugCollectionViewController collectionView:cellForItemAtIndexPath:]
  -[PMDebugCollectionViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[PMDebugCollectionViewController collectionView:didSelectItemAtIndexPath:]
  -[PMDebugCollectionViewController collectionView:layout:sizeForItemAtIndexPath:]
  -[PMDebugCollectionViewController didReceiveMemoryWarning]
  -[PMDebugCollectionViewController setCancelled:]
  -[PMDebugCollectionViewController done:]
  -[PMDebugCollectionViewController setMemory:]
  -[PMDebugCollectionViewController curatedAssets]
  -[PMDebugCollectionViewController setCuratedAssets:]
  -[PMDebugCollectionViewController setTextContainerView:]
  -[PMDebugCollectionViewController textContainerView]
  -[PMDebugCollectionViewController progressView]
  -[PMDebugCollectionViewController setProgressView:]
  -[PMDebugCollectionViewController setSortTitles:]
  -[PMDebugCollectionViewController sortTitles]
  -[PMDebugCollectionViewController production]
  -[PMDebugCollectionViewController setProduction:]
  -[PMDebugCollectionViewController image:didFinishSavingWithError:contextInfo:]
  -[PMDebugCollectionViewController textOnly]
  -[PMDebugCollectionViewController project]
  -[PMDebugCollectionViewController setCurrentSortType:]
  -[PMDebugCollectionViewController setSyncPreview:]
  -[PMDebugCollectionViewController sortBarButton]
  -[PMDebugCollectionViewController setProject:]
  -[PMDebugCollectionViewController createDebugGraphics]
  -[PMDebugCollectionViewController pickInfoAndAsset:asset:fromIndexPath:]
  -[PMDebugCollectionViewController syncPreview]
  -[PMDebugCollectionViewController closeMemoryTransition:]
  -[PMDebugCollectionViewController presentAirDropControllerWithDebugString:]
  -[PMDebugCollectionViewController requestedSongString]
  -[PMDebugCollectionViewController logFeaturedPeopleInMemory]
  -[PMDebugCollectionViewController replaceEmojiWithPrintName:]
  -[PMDebugCollectionViewController showTextViewWith:]
  -[PMDebugCollectionViewController projectMoodNamedTransitions]
  -[PMDebugCollectionViewController setProjectMoodNamedTransitions:]
  -[PMDebugCollectionViewController prettyTransitionNameFromID:fromBlueprint:]
  -[PMDebugCollectionViewController resetMemoryToCleanState:]
  -[PMDebugCollectionViewController saveDebugPanelForMemory:]
  -[PMDebugCollectionViewController showMemoryTransitions]
  -[PMDebugCollectionViewController showScoreLog]
  -[PMDebugCollectionViewController showTextVersion]
  -[PMDebugCollectionViewController showProject]
  -[PMDebugCollectionViewController makeEnhancedStringFromPlainOne:]
  -[PMDebugCollectionViewController drawImageInContext:andFrame:]
  -[PMDebugCollectionViewController drawSeperatingBorderInRect:withColor:]
  -[PMDebugCollectionViewController makeEnhancedStringFromPlainOne:size:]
  -[PMDebugCollectionViewController _getCurrentCountOfItems]
  -[PMDebugCollectionViewController writeTextToImageContextWithSize:]
  -[PMDebugCollectionViewController writeTextToImageContextWithSize:andCell:andLocation:]
  -[PMDebugCollectionViewController createDebugPageWithInfoWithStartingIndex:andEndingIndex:]
  -[PMDebugCollectionViewController presentAirdropControllerWithDebugImageArray:]
  -[PMDebugCollectionViewController autoEditController]
  -[PMDebugCollectionViewController bringUpActions:]
  -[PMDebugCollectionViewController bringUpSortOptions:]
  -[PMDebugCollectionViewController presentModelImageViewWithImage:]
  -[PMDebugCollectionViewController numberRowsWithCurrentCount]
  -[PMDebugCollectionViewController presentAirdropControllerWithDebugImage:]
  -[PMDebugCollectionViewController currentSortType]
  -[PMDebugCollectionViewController setAutoEditController:]
  -[PMDebugCollectionViewController isSaveMode]
  -[PMDebugCollectionViewController setIsSaveMode:]
  -[PMDebugCollectionViewController setTextOnly:]
  -[PMDebugCollectionViewController hackReuseCell]
  -[PMDebugCollectionViewController setHackReuseCell:]
  -[PMDebugCollectionViewController setSortBarButton:]


PMActivityItemProvider : UIActivityItemProvider /System/Library/Frameworks/CoreMedia.framework/CoreMedia
 @property  VEKProduction *production
 @property  PHActivityProgressViewController *progressController
 @property  NSString *preset
 @property  NSString *exportedFilePath
 @property  double progress
 @property  BOOL userCancelled
 @property  NSObject<OS_dispatch_semaphore> *readyToReturnItem
 @property  VEKResult *result
 @property  NSString *shareMetadataSummary
 @property  NSString *shareMetadataTitle
 @property  <PMActivityItemProviderDelegate> *delegate
 @property  <MiroPreventDismissalDelegate> *preventDismissalDelegate
 @property  UIViewController *presenter
 @property  MiroMovie *miroMovie
 @property  double exportAspect
 @property  LPLinkMetadata *shareHeaderMetadata

  // instance methods
  -[PMActivityItemProvider delegate]
  -[PMActivityItemProvider setDelegate:]
  -[PMActivityItemProvider .cxx_destruct]
  -[PMActivityItemProvider item]
  -[PMActivityItemProvider result]
  -[PMActivityItemProvider progress]
  -[PMActivityItemProvider setResult:]
  -[PMActivityItemProvider setProgress:]
  -[PMActivityItemProvider activityViewController:dataTypeIdentifierForActivityType:]
  -[PMActivityItemProvider activityViewControllerLinkMetadata:]
  -[PMActivityItemProvider initWithPlaceholderItem:]
  -[PMActivityItemProvider presenter]
  -[PMActivityItemProvider cancelExport]
  -[PMActivityItemProvider setPresenter:]
  -[PMActivityItemProvider setPreset:]
  -[PMActivityItemProvider preset]
  -[PMActivityItemProvider production]
  -[PMActivityItemProvider setProduction:]
  -[PMActivityItemProvider progressController]
  -[PMActivityItemProvider setProgressController:]
  -[PMActivityItemProvider _stringFromTimeInterval:]
  -[PMActivityItemProvider userCancelled]
  -[PMActivityItemProvider setUserCancelled:]
  -[PMActivityItemProvider exportAspect]
  -[PMActivityItemProvider setExportAspect:]
  -[PMActivityItemProvider shareHeaderMetadata]
  -[PMActivityItemProvider setShareHeaderMetadata:]
  -[PMActivityItemProvider shareMetadataTitle]
  -[PMActivityItemProvider setShareMetadataTitle:]
  -[PMActivityItemProvider shareMetadataSummary]
  -[PMActivityItemProvider setShareMetadataSummary:]
  -[PMActivityItemProvider preventDismissalDelegate]
  -[PMActivityItemProvider _unloadVEKObjects]
  -[PMActivityItemProvider miroMovie]
  -[PMActivityItemProvider setReadyToReturnItem:]
  -[PMActivityItemProvider beginExport]
  -[PMActivityItemProvider readyToReturnItem]
  -[PMActivityItemProvider exportedFilePath]
  -[PMActivityItemProvider setExportedFilePath:]
  -[PMActivityItemProvider initWithProduction:result:]
  -[PMActivityItemProvider setPreventDismissalDelegate:]
  -[PMActivityItemProvider setMiroMovie:]


MiroEditorColorSwatchCell : UICollectionViewCell /System/Library/Frameworks/CoreMedia.framework/CoreMedia
 @property  UILabel *label

  // instance methods
  -[MiroEditorColorSwatchCell .cxx_destruct]
  -[MiroEditorColorSwatchCell setLabel:]
  -[MiroEditorColorSwatchCell label]


PMHighFidelityVideoOverlayButton : UIView /System/Library/Frameworks/CoreMedia.framework/CoreMedia <PMVideoOverlayButton>
  // instance methods
  -[PMHighFidelityVideoOverlayButton .cxx_destruct]
  -[PMHighFidelityVideoOverlayButton style]
  -[PMHighFidelityVideoOverlayButton layoutSubviews]
  -[PMHighFidelityVideoOverlayButton initWithStyle:allowBackdropStatisticsSupression:]


PMFlatVideoOverlayButton : UIView /System/Library/Frameworks/CoreMedia.framework/CoreMedia <PMVideoOverlayButton>
  // instance methods
  -[PMFlatVideoOverlayButton style]
  -[PMFlatVideoOverlayButton layoutSubviews]
  -[PMFlatVideoOverlayButton initWithStyle:]


PMClipProvider : NSObject /usr/lib/libc++.1.dylib
 @property  <VEKClipProtocol> *clip
 @property  VEKProduction *production
 @property  double projectDuration
 @property  PHImageManager *imageManager
 @property  AVAsset *avAsset
 @property  <VEKClipProtocol> *introTransition
 @property  <VEKClipProtocol> *outroTransition
 @property  {?={?=qiIq}{?=qiIq}} trimTimeRange
 @property  <PMClipProviderDelegate> *delegate
 @property  <PMRelatedClipsDelegate> *relatedClipsDelegate
 @property  VEKSuggestion *suggestion
 @property  PHAsset *phAsset
 @property  double maxDuration
 @property  double aspectRatio
 @property  BOOL trimmable
 @property  long long usage
 @property  long long volume
 @property  long long specialTreatment
 @property  double reorderTimeOffset
 @property  {?={?=qiIq}{?=qiIq}} suggestionTrimTimeRange

  // class methods
  +[PMClipProvider getThumbnailQueue]

  // instance methods
  -[PMClipProvider delegate]
  -[PMClipProvider setDelegate:]
  -[PMClipProvider .cxx_destruct]
  -[PMClipProvider setUsage:]
  -[PMClipProvider usage]
  -[PMClipProvider aspectRatio]
  -[PMClipProvider clip]
  -[PMClipProvider volume]
  -[PMClipProvider setVolume:]
  -[PMClipProvider setSuggestion:]
  -[PMClipProvider maxDuration]
  -[PMClipProvider suggestion]
  -[PMClipProvider requestAVAssetWithResultHandler:]
  -[PMClipProvider requestPlayerItemWithResultHandler:]
  -[PMClipProvider imageManager]
  -[PMClipProvider avAsset]
  -[PMClipProvider setClip:]
  -[PMClipProvider production]
  -[PMClipProvider setProduction:]
  -[PMClipProvider setTrimTimeRange:]
  -[PMClipProvider trimTimeRange]
  -[PMClipProvider phAsset]
  -[PMClipProvider setAvAsset:]
  -[PMClipProvider relatedClipsDelegate]
  -[PMClipProvider setProjectDuration:]
  -[PMClipProvider setIntroTransition:]
  -[PMClipProvider introTransition]
  -[PMClipProvider setOutroTransition:]
  -[PMClipProvider outroTransition]
  -[PMClipProvider specialTreatment]
  -[PMClipProvider createSuggestionIfNeeded]
  -[PMClipProvider setSpecialTreatment:]
  -[PMClipProvider reorderTimeOffset]
  -[PMClipProvider setReorderTimeOffset:]
  -[PMClipProvider shouldTrimToProposedTimeRange:]
  -[PMClipProvider projectDuration]
  -[PMClipProvider replaceSuggestionWithSuggestion:]
  -[PMClipProvider suggestionTrimTimeRange]
  -[PMClipProvider addSuggestionToProduction]
  -[PMClipProvider suggestionsForAsset:]
  -[PMClipProvider createSlomoComposition:]
  -[PMClipProvider initWithClip:production:result:]
  -[PMClipProvider trimmable]
  -[PMClipProvider trimToTimeRange:]
  -[PMClipProvider requestStillImageForSize:atTime:withResultHandler:]
  -[PMClipProvider setRelatedClipsDelegate:]


PMiOSProgressViewController : UIViewController /System/Library/Frameworks/CoreMedia.framework/CoreMedia <UIGestureRecognizerDelegate>
 @property  UILabel *label
 @property  PMRoundProgressView *progressView
 @property  NSLayoutConstraint *verticalProgressLabelSpace
 @property  NSLayoutConstraint *verticalCenteredLabel
 @property  NSLayoutConstraint *horizontalCenteredLabel
 @property  NSLayoutConstraint *nonCompactRoundProgressCenterY
 @property  NSLayoutConstraint *cancelButtonTopConstraint
 @property  NSLayoutConstraint *cancelButtonLeadingConstraint
 @property  UIButton *cancelButton
 @property  NSString *description
 @property  float progress
 @property  BOOL showCancelButton
 @property  unsigned long cancelStyle
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *debugDescription

  // instance methods
  -[PMiOSProgressViewController .cxx_destruct]
  -[PMiOSProgressViewController progress]
  -[PMiOSProgressViewController setLabel:]
  -[PMiOSProgressViewController label]
  -[PMiOSProgressViewController setProgress:]
  -[PMiOSProgressViewController loadView]
  -[PMiOSProgressViewController willTransitionToTraitCollection:withTransitionCoordinator:]
  -[PMiOSProgressViewController viewWillAppear:]
  -[PMiOSProgressViewController viewDidLoad]
  -[PMiOSProgressViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[PMiOSProgressViewController cancelButton]
  -[PMiOSProgressViewController setCancelButton:]
  -[PMiOSProgressViewController setDescription:]
  -[PMiOSProgressViewController showCancelButton]
  -[PMiOSProgressViewController progressView]
  -[PMiOSProgressViewController setProgressView:]
  -[PMiOSProgressViewController setShowCancelButton:]
  -[PMiOSProgressViewController setCancelTarget:action:]
  -[PMiOSProgressViewController setVerticalProgressLabelSpace:]
  -[PMiOSProgressViewController setVerticalCenteredLabel:]
  -[PMiOSProgressViewController setHorizontalCenteredLabel:]
  -[PMiOSProgressViewController verticalProgressLabelSpace]
  -[PMiOSProgressViewController horizontalCenteredLabel]
  -[PMiOSProgressViewController attachCancelButton]
  -[PMiOSProgressViewController updateLayoutWithTraitCollection:]
  -[PMiOSProgressViewController nonCompactRoundProgressCenterY]
  -[PMiOSProgressViewController cancelButtonTopConstraint]
  -[PMiOSProgressViewController cancelButtonLeadingConstraint]
  -[PMiOSProgressViewController cancelStyle]
  -[PMiOSProgressViewController setCancelButtonTopConstraint:]
  -[PMiOSProgressViewController setCancelButtonLeadingConstraint:]
  -[PMiOSProgressViewController setCancelStyle:]
  -[PMiOSProgressViewController verticalCenteredLabel]
  -[PMiOSProgressViewController setNonCompactRoundProgressCenterY:]


PMEditorMenuTableViewCell : UITableViewCell /System/Library/Frameworks/CoreMedia.framework/CoreMedia
 @property  UILabel *titleLabel
 @property  UILabel *upperDetailsLabel
 @property  UILabel *centerDetailsLabel
 @property  UILabel *lowerDetailsLabel
 @property  UIActivityIndicatorView *activityIndicator
 @property  NSString *text
 @property  NSString *detailText
 @property  NSString *secondaryDetailText
 @property  BOOL showingActivityIndicator
 @property  NSLayoutConstraint *labelLeadingConstraint

  // class methods
  +[PMEditorMenuTableViewCell dynamicTypeHeight]

  // instance methods
  -[PMEditorMenuTableViewCell .cxx_destruct]
  -[PMEditorMenuTableViewCell prepareForReuse]
  -[PMEditorMenuTableViewCell text]
  -[PMEditorMenuTableViewCell setText:]
  -[PMEditorMenuTableViewCell titleLabel]
  -[PMEditorMenuTableViewCell setUserInteractionEnabled:]
  -[PMEditorMenuTableViewCell setTitleLabel:]
  -[PMEditorMenuTableViewCell awakeFromNib]
  -[PMEditorMenuTableViewCell setSelected:animated:]
  -[PMEditorMenuTableViewCell activityIndicator]
  -[PMEditorMenuTableViewCell setActivityIndicator:]
  -[PMEditorMenuTableViewCell _disclosureChevronImage:]
  -[PMEditorMenuTableViewCell detailText]
  -[PMEditorMenuTableViewCell setDetailText:]
  -[PMEditorMenuTableViewCell setLabelLeadingConstraint:]
  -[PMEditorMenuTableViewCell labelLeadingConstraint]
  -[PMEditorMenuTableViewCell _updateFonts]
  -[PMEditorMenuTableViewCell setSecondaryDetailText:]
  -[PMEditorMenuTableViewCell upperDetailsLabel]
  -[PMEditorMenuTableViewCell lowerDetailsLabel]
  -[PMEditorMenuTableViewCell secondaryDetailText]
  -[PMEditorMenuTableViewCell setUpperDetailsLabel:]
  -[PMEditorMenuTableViewCell setLowerDetailsLabel:]
  -[PMEditorMenuTableViewCell centerDetailsLabel]
  -[PMEditorMenuTableViewCell setShowingActivityIndicator:]
  -[PMEditorMenuTableViewCell isShowingActivityIndicator]
  -[PMEditorMenuTableViewCell setCenterDetailsLabel:]


MiroAssetSuggestionsCollectionViewCell : UICollectionViewCell /System/Library/Frameworks/CoreMedia.framework/CoreMedia
 @property  UIImageView *thumbnailView
 @property  UIView *debugView
 @property  UIView *debugGradient
 @property  UILabel *debugLabel
 @property  NSLayoutConstraint *videoIndicatorTopConstraint
 @property  NSLayoutConstraint *videoIndicatorBottomConstraint
 @property  NSLayoutConstraint *videoIndicatorLeadingConstraint
 @property  NSLayoutConstraint *videoIndicatorTrailingConstraint
 @property  UIView *selectionIndicator
 @property  UIView *selectionIndicatorImageView
 @property  NSArray *debugLabels
 @property  UILabel *videoDurationLabel
 @property  UIView *videoIndicator
 @property  UIView *slomoIndicator
 @property  UILabel *slomoDurationLabel
 @property  UIView *timelapseIndicator
 @property  UILabel *timelapseDurationLabel
 @property  BOOL isKeyAssetPicker

  // class methods
  +[MiroAssetSuggestionsCollectionViewCell circularGlyphViewWithName:backgroundColor:]

  // instance methods
  -[MiroAssetSuggestionsCollectionViewCell .cxx_destruct]
  -[MiroAssetSuggestionsCollectionViewCell prepareForReuse]
  -[MiroAssetSuggestionsCollectionViewCell setDebugLabel:]
  -[MiroAssetSuggestionsCollectionViewCell setSelected:]
  -[MiroAssetSuggestionsCollectionViewCell awakeFromNib]
  -[MiroAssetSuggestionsCollectionViewCell applyLayoutAttributes:]
  -[MiroAssetSuggestionsCollectionViewCell debugView]
  -[MiroAssetSuggestionsCollectionViewCell setDebugView:]
  -[MiroAssetSuggestionsCollectionViewCell debugLabel]
  -[MiroAssetSuggestionsCollectionViewCell thumbnailView]
  -[MiroAssetSuggestionsCollectionViewCell setThumbnailView:]
  -[MiroAssetSuggestionsCollectionViewCell setIsKeyAssetPicker:]
  -[MiroAssetSuggestionsCollectionViewCell configureWithAsset:selected:]
  -[MiroAssetSuggestionsCollectionViewCell setDebugLabels:]
  -[MiroAssetSuggestionsCollectionViewCell debugGradient]
  -[MiroAssetSuggestionsCollectionViewCell setSelectionIndicatorImageView:]
  -[MiroAssetSuggestionsCollectionViewCell selectionIndicatorImageView]
  -[MiroAssetSuggestionsCollectionViewCell selectionIndicator]
  -[MiroAssetSuggestionsCollectionViewCell videoIndicator]
  -[MiroAssetSuggestionsCollectionViewCell slomoIndicator]
  -[MiroAssetSuggestionsCollectionViewCell timelapseIndicator]
  -[MiroAssetSuggestionsCollectionViewCell videoIndicatorTopConstraint]
  -[MiroAssetSuggestionsCollectionViewCell videoIndicatorBottomConstraint]
  -[MiroAssetSuggestionsCollectionViewCell videoIndicatorLeadingConstraint]
  -[MiroAssetSuggestionsCollectionViewCell videoIndicatorTrailingConstraint]
  -[MiroAssetSuggestionsCollectionViewCell isKeyAssetPicker]
  -[MiroAssetSuggestionsCollectionViewCell videoDurationLabel]
  -[MiroAssetSuggestionsCollectionViewCell timelapseDurationLabel]
  -[MiroAssetSuggestionsCollectionViewCell slomoDurationLabel]
  -[MiroAssetSuggestionsCollectionViewCell debugLabels]
  -[MiroAssetSuggestionsCollectionViewCell setVideoDurationLabel:]
  -[MiroAssetSuggestionsCollectionViewCell setVideoIndicator:]
  -[MiroAssetSuggestionsCollectionViewCell setSlomoIndicator:]
  -[MiroAssetSuggestionsCollectionViewCell setSlomoDurationLabel:]
  -[MiroAssetSuggestionsCollectionViewCell setTimelapseIndicator:]
  -[MiroAssetSuggestionsCollectionViewCell setTimelapseDurationLabel:]
  -[MiroAssetSuggestionsCollectionViewCell setDebugGradient:]
  -[MiroAssetSuggestionsCollectionViewCell setVideoIndicatorTopConstraint:]
  -[MiroAssetSuggestionsCollectionViewCell setVideoIndicatorBottomConstraint:]
  -[MiroAssetSuggestionsCollectionViewCell setVideoIndicatorLeadingConstraint:]
  -[MiroAssetSuggestionsCollectionViewCell setVideoIndicatorTrailingConstraint:]
  -[MiroAssetSuggestionsCollectionViewCell setSelectionIndicator:]


PMiOSScrubberCollectionViewCell : UICollectionViewCell /System/Library/Frameworks/CoreMedia.framework/CoreMedia
 @property  UIImageView *imageview

  // instance methods
  -[PMiOSScrubberCollectionViewCell .cxx_destruct]
  -[PMiOSScrubberCollectionViewCell prepareForReuse]
  -[PMiOSScrubberCollectionViewCell setImage:]
  -[PMiOSScrubberCollectionViewCell imageview]
  -[PMiOSScrubberCollectionViewCell setImageview:]


MiroScrollViewSpeedometer : NSObject /usr/lib/libc++.1.dylib
 @property  {CGPoint=dd} scrollSpeed
 @property  long long regime
 @property  UIScrollView *_lastScrollView
 @property  {CGSize=dd} _lastContentSize
 @property  double _lastTime
 @property  {CGPoint=dd} _lastContentOffset
 @property  NSTimer *_timeoutTimer
 @property  long long _nextRegime
 @property  long long _nextRegimeCount
 @property  <MiroScrollViewSpeedometerDelegate> *delegate
 @property  double mediumUpperThreshold
 @property  double mediumLowerThreshold
 @property  double fastUpperThreshold
 @property  double fastLowerThreshold

  // instance methods
  -[MiroScrollViewSpeedometer delegate]
  -[MiroScrollViewSpeedometer setDelegate:]
  -[MiroScrollViewSpeedometer .cxx_destruct]
  -[MiroScrollViewSpeedometer scrollViewDidScroll:]
  -[MiroScrollViewSpeedometer scrollViewWillBeginDragging:]
  -[MiroScrollViewSpeedometer scrollViewDidEndDragging:willDecelerate:]
  -[MiroScrollViewSpeedometer scrollViewDidEndDecelerating:]
  -[MiroScrollViewSpeedometer scrollViewDidScrollToTop:]
  -[MiroScrollViewSpeedometer _lastContentOffset]
  -[MiroScrollViewSpeedometer _lastTime]
  -[MiroScrollViewSpeedometer _timeoutTimer]
  -[MiroScrollViewSpeedometer _lastContentSize]
  -[MiroScrollViewSpeedometer _setLastTime:]
  -[MiroScrollViewSpeedometer scrollSpeed]
  -[MiroScrollViewSpeedometer _setRegime:]
  -[MiroScrollViewSpeedometer mediumLowerThreshold]
  -[MiroScrollViewSpeedometer mediumUpperThreshold]
  -[MiroScrollViewSpeedometer fastLowerThreshold]
  -[MiroScrollViewSpeedometer fastUpperThreshold]
  -[MiroScrollViewSpeedometer _rescheduleTimeout]
  -[MiroScrollViewSpeedometer _handleTimeoutTimer:]
  -[MiroScrollViewSpeedometer regime]
  -[MiroScrollViewSpeedometer _setTimeoutTimer:]
  -[MiroScrollViewSpeedometer _nextRegime]
  -[MiroScrollViewSpeedometer _setNextRegime:]
  -[MiroScrollViewSpeedometer _nextRegimeCount]
  -[MiroScrollViewSpeedometer _setNextRegimeCount:]
  -[MiroScrollViewSpeedometer scrollViewWillScrollToTop:]
  -[MiroScrollViewSpeedometer _setScrollSpeed:]
  -[MiroScrollViewSpeedometer _newRegimeForScrollSpeed:]
  -[MiroScrollViewSpeedometer setMediumUpperThreshold:]
  -[MiroScrollViewSpeedometer setMediumLowerThreshold:]
  -[MiroScrollViewSpeedometer setFastUpperThreshold:]
  -[MiroScrollViewSpeedometer setFastLowerThreshold:]
  -[MiroScrollViewSpeedometer _lastScrollView]
  -[MiroScrollViewSpeedometer _setLastScrollView:]
  -[MiroScrollViewSpeedometer _setLastContentSize:]
  -[MiroScrollViewSpeedometer _setLastContentOffset:]


PMPosterViewController : UIViewController /System/Library/Frameworks/CoreMedia.framework/CoreMedia
 @property  UIImage *image
 @property  UIImageView *imageView
 @property  PMTitleSubtitleView *titleSubtitleView
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} landscapeFraming
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} portraitFraming
 @property  BOOL isRotating
 @property  NSString *titleText
 @property  NSString *subtitleText
 @property  PHAsset *asset
 @property  NSString *titleFontName
 @property  VEKProduction *production
 @property  double titleScale
 @property  BOOL preventRotation
 @property  double titleSubtitleAlpha

  // class methods
  +[PMPosterViewController biggestScreenPixelDimension]

  // instance methods
  -[PMPosterViewController init]
  -[PMPosterViewController .cxx_destruct]
  -[PMPosterViewController image]
  -[PMPosterViewController setImage:]
  -[PMPosterViewController asset]
  -[PMPosterViewController setAsset:]
  -[PMPosterViewController imageView]
  -[PMPosterViewController viewDidLoad]
  -[PMPosterViewController viewWillLayoutSubviews]
  -[PMPosterViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[PMPosterViewController isRotating]
  -[PMPosterViewController setImageView:]
  -[PMPosterViewController setTitleText:]
  -[PMPosterViewController titleText]
  -[PMPosterViewController subtitleText]
  -[PMPosterViewController setSubtitleText:]
  -[PMPosterViewController titleFontName]
  -[PMPosterViewController processedImageFromImage:]
  -[PMPosterViewController production]
  -[PMPosterViewController setProduction:]
  -[PMPosterViewController setTitleFontName:]
  -[PMPosterViewController setIsRotating:]
  -[PMPosterViewController renderToImage]
  -[PMPosterViewController setTitleSubtitleAlpha:]
  -[PMPosterViewController setPreventRotation:]
  -[PMPosterViewController setTitleScale:]
  -[PMPosterViewController titleScale]
  -[PMPosterViewController preventRotation]
  -[PMPosterViewController updateSubtitleTitleLabelForSize:]
  -[PMPosterViewController titleSubtitleView]
  -[PMPosterViewController assignImageFraming]
  -[PMPosterViewController setLandscapeFraming:]
  -[PMPosterViewController setPortraitFraming:]
  -[PMPosterViewController fetchImageSomewhatAsynchronously]
  -[PMPosterViewController landscapeFraming]
  -[PMPosterViewController portraitFraming]
  -[PMPosterViewController frameForImage]
  -[PMPosterViewController fetchImageAsynchronouslyWithCompletion:]
  -[PMPosterViewController sizeForImage]
  -[PMPosterViewController setTitleSubtitleView:]
  -[PMPosterViewController prewarmFraming]
  -[PMPosterViewController titleSubtitleAlpha]


PMTTRLoadingViewController : UIViewController /System/Library/Frameworks/CoreMedia.framework/CoreMedia
 @property  UILabel *radarCollectionInfoLabel
 @property  UIActivityIndicatorView *activityIndicatorView

  // instance methods
  -[PMTTRLoadingViewController .cxx_destruct]
  -[PMTTRLoadingViewController viewDidLoad]
  -[PMTTRLoadingViewController didReceiveMemoryWarning]
  -[PMTTRLoadingViewController activityIndicatorView]
  -[PMTTRLoadingViewController setActivityIndicatorView:]
  -[PMTTRLoadingViewController radarCollectionInfoLabel]
  -[PMTTRLoadingViewController setRadarCollectionInfoLabel:]


PMPosterContainerView : UIView /System/Library/Frameworks/CoreMedia.framework/CoreMedia
 @property  NSArray *imageViews
 @property  NSArray *images

  // instance methods
  -[PMPosterContainerView .cxx_destruct]
  -[PMPosterContainerView images]
  -[PMPosterContainerView setImages:]
  -[PMPosterContainerView layoutSubviews]
  -[PMPosterContainerView setImageViews:]
  -[PMPosterContainerView imageViews]


PMCoreAnalyticsEvent : NSObject /usr/lib/libc++.1.dylib <CoreAnalyticsEventProtocol>
 @property  BOOL appendBundleName
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PMCoreAnalyticsEvent bundleForAnalytics]

  // instance methods
  -[PMCoreAnalyticsEvent eventName]
  -[PMCoreAnalyticsEvent eventPayload]
  -[PMCoreAnalyticsEvent sendToCoreAnalytics]
  -[PMCoreAnalyticsEvent appendBundleName]
  -[PMCoreAnalyticsEvent setAppendBundleName:]


PMDebugCollectionViewCell : UICollectionViewCell /System/Library/Frameworks/CoreMedia.framework/CoreMedia
 @property  <PMDebugCollectionViewControllerProtocol> *delegate
 @property  PHAsset *asset
 @property  UIImageView *thumbnailView
 @property  UILabel *data1Label
 @property  UILabel *data2Label
 @property  UILabel *data3Label
 @property  UILabel *date1Label
 @property  UILabel *date2Label
 @property  UILabel *date3Label
 @property  NSString *editStyleStr

  // class methods
  +[PMDebugCollectionViewCell hasOneGBRAM]

  // instance methods
  -[PMDebugCollectionViewCell delegate]
  -[PMDebugCollectionViewCell setDelegate:]
  -[PMDebugCollectionViewCell .cxx_destruct]
  -[PMDebugCollectionViewCell asset]
  -[PMDebugCollectionViewCell setAsset:]
  -[PMDebugCollectionViewCell initWithFrame:]
  -[PMDebugCollectionViewCell awakeFromNib]
  -[PMDebugCollectionViewCell thumbnailView]
  -[PMDebugCollectionViewCell setThumbnailView:]
  -[PMDebugCollectionViewCell configureWithAsset:pickInfo:delegate:indexPath:isSaveMode:textOnly:curatedAssets:]
  -[PMDebugCollectionViewCell date1Label]
  -[PMDebugCollectionViewCell date2Label]
  -[PMDebugCollectionViewCell date3Label]
  -[PMDebugCollectionViewCell data1Label]
  -[PMDebugCollectionViewCell data2Label]
  -[PMDebugCollectionViewCell data3Label]
  -[PMDebugCollectionViewCell configureHeader:]
  -[PMDebugCollectionViewCell editStyleStr]
  -[PMDebugCollectionViewCell strokeToverMaxT:inRect:context:]
  -[PMDebugCollectionViewCell setEditStyleStr:]
  -[PMDebugCollectionViewCell _stingerTime]
  -[PMDebugCollectionViewCell countMediaClips:]
  -[PMDebugCollectionViewCell tVsDurationGraph]
  -[PMDebugCollectionViewCell stringForAssetCollectionSubType:]
  -[PMDebugCollectionViewCell stringForAssetCollectionTypeString:]
  -[PMDebugCollectionViewCell stringForSize:]
  -[PMDebugCollectionViewCell _printImageOrientationforAsset:]
  -[PMDebugCollectionViewCell determineDerivativeUsedFromAsset:]
  -[PMDebugCollectionViewCell setData1Label:]
  -[PMDebugCollectionViewCell setData2Label:]
  -[PMDebugCollectionViewCell setData3Label:]
  -[PMDebugCollectionViewCell setDate1Label:]
  -[PMDebugCollectionViewCell setDate2Label:]
  -[PMDebugCollectionViewCell setDate3Label:]


PMiOSTimeLabelView : UIView /System/Library/Frameworks/CoreMedia.framework/CoreMedia
 @property  UILabel *timeLabel
 @property  NSTimer *hideDelayTimer
 @property  double elapsedTime
 @property  double totalTime
 @property  BOOL showsRemainingTime
 @property  BOOL showsTotalTime

  // instance methods
  -[PMiOSTimeLabelView initWithCoder:]
  -[PMiOSTimeLabelView .cxx_destruct]
  -[PMiOSTimeLabelView initWithFrame:]
  -[PMiOSTimeLabelView elapsedTime]
  -[PMiOSTimeLabelView setup]
  -[PMiOSTimeLabelView totalTime]
  -[PMiOSTimeLabelView setTotalTime:]
  -[PMiOSTimeLabelView setElapsedTime:]
  -[PMiOSTimeLabelView setTimeLabel:]
  -[PMiOSTimeLabelView timeLabel]
  -[PMiOSTimeLabelView _stringFromTimeInterval:]
  -[PMiOSTimeLabelView _labelTextForElapsedInterval:]
  -[PMiOSTimeLabelView hideAfterDelay:]
  -[PMiOSTimeLabelView hideDelayTimer]
  -[PMiOSTimeLabelView setHideDelayTimer:]
  -[PMiOSTimeLabelView hideTimerAction]
  -[PMiOSTimeLabelView showsRemainingTime]
  -[PMiOSTimeLabelView showsTotalTime]
  -[PMiOSTimeLabelView showMomentarilyAnimated:]
  -[PMiOSTimeLabelView setShowsRemainingTime:]
  -[PMiOSTimeLabelView setShowsTotalTime:]


MiroSmartMusicMenuHeaderView : UITableViewHeaderFooterView /System/Library/Frameworks/CoreMedia.framework/CoreMedia
  // instance methods
  -[MiroSmartMusicMenuHeaderView initWithReuseIdentifier:]


PMActivityViewController : UIActivityViewController /System/Library/Frameworks/CoreMedia.framework/CoreMedia <PMAirplayActivityDelegate, UIActivityViewControllerObjectManipulationDelegate, PMActivityItemProviderDelegate, UIActivityViewControllerAirDropDelegate>
 @property  PMAirplayActivity *airplayActivity
 @property  unsigned long backgroundTask
 @property  UIBarButtonItem *doneButton
 @property  <PMActivityViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  UIViewController *presenter

  // instance methods
  -[PMActivityViewController delegate]
  -[PMActivityViewController setDelegate:]
  -[PMActivityViewController .cxx_destruct]
  -[PMActivityViewController cancel]
  -[PMActivityViewController viewWillLayoutSubviews]
  -[PMActivityViewController setModalPresentationStyle:]
  -[PMActivityViewController presenter]
  -[PMActivityViewController setDoneButton:]
  -[PMActivityViewController doneButton]
  -[PMActivityViewController setCompletionWithItemsHandler:]
  -[PMActivityViewController _customizationGroupsForActivityViewController:]
  -[PMActivityViewController activityViewControllerWillStartAirdropTransfer:]
  -[PMActivityViewController activityViewControllerDidFinishAirdropTransfer:]
  -[PMActivityViewController setPresenter:]
  -[PMActivityViewController setBackgroundTask:]
  -[PMActivityViewController exportFailed]
  -[PMActivityViewController updateVisibleShareActions]
  -[PMActivityViewController exportWillBegin]
  -[PMActivityViewController setAirplayActivity:]
  -[PMActivityViewController airplayActivity]
  -[PMActivityViewController backgroundTask]
  -[PMActivityViewController initWithActivityItems:applicationActivities:barButtonItem:parentViewController:]


PMEditorRootViewController : UIViewController /System/Library/Frameworks/CoreMedia.framework/CoreMedia <PMEditorPlayerViewDelegate, PMEditorToolbarOwner, PMEditProviderDelegate, PMMovieProviderDelegate, UISplitViewControllerDelegate, UIViewControllerTransitioningDelegate, PMMovieContainerViewControllerDelegate, MiroContentEditorViewControllerDelegate, PMEditorMenuViewControllerDelegate, MiroAssetSuggestionsCollectionViewControllerDelegate, TitleChangeInformable>
 @property  UIViewController *movieDisplayParentViewController
 @property  UISplitViewController *contentSplitViewController
 @property  PMEditorMenuViewController *menuViewController
 @property  PMEditorDurationViewController *durationViewController
 @property  PMMovieProvider *movieProvider
 @property  VEKProduction *production
 @property  VEKResult *lastResult
 @property  VEKProduction *previousProduction
 @property  VEKResult *previousResult
 @property  PMTitleEditorProvider *titleProvider
 @property  PMDurationProvider *durationProvider
 @property  PMMusicProvider *musicProvider
 @property  int splitViewState
 @property  BOOL previousZoomedToFill
 @property  BOOL didMakeEdits
 @property  BOOL needsCancelCalled
 @property  BOOL didFinishDismissingWasCalled
 @property  UIView *playerContainerView
 @property  UIView *splitViewContainerView
 @property  UIButton *orientationButton
 @property  PMSpinnerPlayPauseOverlay *playPauseOverlay
 @property  int pendingAction
 @property  NSLayoutConstraint *playerContainerYOffset
 @property  NSLayoutConstraint *playerContainerTargetHeight
 @property  PMEditorBottomToolbar *toolbar
 @property  NSLayoutConstraint *toolbarHeightConstraint
 @property  NSLayoutConstraint *toolbarYOffset
 @property  NSLayoutConstraint *aspectRatio
 @property  NSString *userEditedTitle
 @property  NSString *userEditedSubTitle
 @property  <MiroEditorViewControllerDelegate> *delegate
 @property  PMMovieContainerViewController *movieDisplayController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL isSeparatingOrCollapsing
 @property  double toolbarHeight
 @property  unsigned long numberOfClipsInMovie
 @property  double sequenceDuration

  // instance methods
  -[PMEditorRootViewController dealloc]
  -[PMEditorRootViewController delegate]
  -[PMEditorRootViewController setDelegate:]
  -[PMEditorRootViewController .cxx_destruct]
  -[PMEditorRootViewController cancel]
  -[PMEditorRootViewController aspectRatio]
  -[PMEditorRootViewController setAspectRatio:]
  -[PMEditorRootViewController done]
  -[PMEditorRootViewController viewWillAppear:]
  -[PMEditorRootViewController viewDidLoad]
  -[PMEditorRootViewController viewWillLayoutSubviews]
  -[PMEditorRootViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[PMEditorRootViewController presentationControllerShouldDismiss:]
  -[PMEditorRootViewController presentationControllerDidDismiss:]
  -[PMEditorRootViewController presentationControllerDidAttemptToDismiss:]
  -[PMEditorRootViewController viewController]
  -[PMEditorRootViewController toolbar]
  -[PMEditorRootViewController preferredStatusBarStyle]
  -[PMEditorRootViewController setToolbar:]
  -[PMEditorRootViewController splitViewController:collapseSecondaryViewController:ontoPrimaryViewController:]
  -[PMEditorRootViewController splitViewController:separateSecondaryViewControllerFromPrimaryViewController:]
  -[PMEditorRootViewController prepareForSegue:sender:]
  -[PMEditorRootViewController shouldDismiss]
  -[PMEditorRootViewController keyboardWillShow:]
  -[PMEditorRootViewController keyboardWillHide:]
  -[PMEditorRootViewController titleProvider]
  -[PMEditorRootViewController setTitleProvider:]
  -[PMEditorRootViewController cancelButtonAction]
  -[PMEditorRootViewController production]
  -[PMEditorRootViewController setProduction:]
  -[PMEditorRootViewController movieProvider]
  -[PMEditorRootViewController setMovieProvider:]
  -[PMEditorRootViewController _hideToolbar]
  -[PMEditorRootViewController lastResult]
  -[PMEditorRootViewController setLastResult:]
  -[PMEditorRootViewController toolbarHeight]
  -[PMEditorRootViewController playerContainerView]
  -[PMEditorRootViewController setPlayerContainerView:]
  -[PMEditorRootViewController assetSuggestionsControllerDidDismiss:]
  -[PMEditorRootViewController durationProvider]
  -[PMEditorRootViewController setDurationProvider:]
  -[PMEditorRootViewController musicProvider]
  -[PMEditorRootViewController editProvider:didChange:]
  -[PMEditorRootViewController setMusicProvider:]
  -[PMEditorRootViewController airPlayDidStart]
  -[PMEditorRootViewController airPlayDidEnd]
  -[PMEditorRootViewController playerRateChanged]
  -[PMEditorRootViewController hideToolbarIfNeeded]
  -[PMEditorRootViewController showToolbar]
  -[PMEditorRootViewController pausePlayer]
  -[PMEditorRootViewController setupWithProduction:andResult:]
  -[PMEditorRootViewController setPreviousProduction:]
  -[PMEditorRootViewController setPreviousResult:]
  -[PMEditorRootViewController contentSplitViewController]
  -[PMEditorRootViewController shouldPreventSplitViewSeperation]
  -[PMEditorRootViewController splitViewContainerView]
  -[PMEditorRootViewController movieDisplayController]
  -[PMEditorRootViewController setUserEditedTitle:]
  -[PMEditorRootViewController setUserEditedSubTitle:]
  -[PMEditorRootViewController menuViewController]
  -[PMEditorRootViewController orientationButton]
  -[PMEditorRootViewController playerViewShouldShowInChildViewControllers]
  -[PMEditorRootViewController setContentSplitViewController:]
  -[PMEditorRootViewController setMenuViewController:]
  -[PMEditorRootViewController setSplitViewState:]
  -[PMEditorRootViewController playerContainerYOffset]
  -[PMEditorRootViewController playerContainerTargetHeight]
  -[PMEditorRootViewController setMovieDisplayControllerParent:andSuperview:]
  -[PMEditorRootViewController playPauseOverlay]
  -[PMEditorRootViewController setPendingAction:]
  -[PMEditorRootViewController playerDidDoContentChange]
  -[PMEditorRootViewController setDidMakeEdits:]
  -[PMEditorRootViewController didFinishDismissingWasCalled]
  -[PMEditorRootViewController setDidFinishDismissingWasCalled:]
  -[PMEditorRootViewController cancelWithBlock:]
  -[PMEditorRootViewController setNeedsCancelCalled:]
  -[PMEditorRootViewController previousProduction]
  -[PMEditorRootViewController previousResult]
  -[PMEditorRootViewController prepareForDismissalWithBlock:]
  -[PMEditorRootViewController _containerViewForPlayer]
  -[PMEditorRootViewController placeSnapshotOfPlayerViewInContainerView:]
  -[PMEditorRootViewController setMovieDisplayParentViewController:]
  -[PMEditorRootViewController splitViewState]
  -[PMEditorRootViewController movieDisplayParentViewController]
  -[PMEditorRootViewController playPauseOverlayTapped:]
  -[PMEditorRootViewController _showToolbar]
  -[PMEditorRootViewController createNavigationWithViewController:]
  -[PMEditorRootViewController setDurationViewController:]
  -[PMEditorRootViewController _showContentEditorViewController]
  -[PMEditorRootViewController _showDebugPickerViewController:]
  -[PMEditorRootViewController setIsSeparatingOrCollapsing:]
  -[PMEditorRootViewController prepareLayoutForCollapsedMode]
  -[PMEditorRootViewController prepareLayoutForSpiltMode]
  -[PMEditorRootViewController durationViewController]
  -[PMEditorRootViewController pendingAction]
  -[PMEditorRootViewController showTitleEditorViewController]
  -[PMEditorRootViewController showMusicPickerViewController]
  -[PMEditorRootViewController showContentEditorViewController]
  -[PMEditorRootViewController _alertSomeAssetsFailedWithTitle:message:okActionBlock:]
  -[PMEditorRootViewController didMakeEdits]
  -[PMEditorRootViewController titlesHaveDiverged]
  -[PMEditorRootViewController userEditedTitle]
  -[PMEditorRootViewController subTitlesHaveDiverged]
  -[PMEditorRootViewController userEditedSubTitle]
  -[PMEditorRootViewController needsCancelCalled]
  -[PMEditorRootViewController alertUserOfCancellation]
  -[PMEditorRootViewController editorMenuVisibleInNavigationStackProceeding:]
  -[PMEditorRootViewController isSeparatingOrCollapsing]
  -[PMEditorRootViewController didRefreshPlayerItem:downloadError:]
  -[PMEditorRootViewController resultWasUpdated:]
  -[PMEditorRootViewController contentEditorViewController:didEditProduction:didTrim:]
  -[PMEditorRootViewController contentEditorViewControllerDidCancel:]
  -[PMEditorRootViewController showDurationEditorViewController]
  -[PMEditorRootViewController showKeyAssetSelectionPicker]
  -[PMEditorRootViewController showDebugTitleStylePickerViewController]
  -[PMEditorRootViewController showDebugEditStylePickerViewController]
  -[PMEditorRootViewController showDebugTransitionPickerViewController]
  -[PMEditorRootViewController showDebugFilterPickerViewController]
  -[PMEditorRootViewController numberOfClipsInMovie]
  -[PMEditorRootViewController sequenceDuration]
  -[PMEditorRootViewController assetSuggestionsController:didChangeSelectedAsset:]
  -[PMEditorRootViewController titleDidChangeTo:]
  -[PMEditorRootViewController subTitleDidChangeTo:]
  -[PMEditorRootViewController setupWithMovieProvider:]
  -[PMEditorRootViewController setMovieDisplayController:]
  -[PMEditorRootViewController switchPlaybackOrientation:]
  -[PMEditorRootViewController performTitleEditorViewControllerScrollTest:iterations:delta:length:]
  -[PMEditorRootViewController performMusicMenuViewControllerScrollTest:iterations:delta:length:]
  -[PMEditorRootViewController performSoundtrackMenuViewControllerScrollTest:iterations:delta:length:]
  -[PMEditorRootViewController performMainMenuViewControllerScrollTest:iterations:delta:length:]
  -[PMEditorRootViewController miroPPT]
  -[PMEditorRootViewController performScrubberScrollTestScrollTest:iterations:delta:length:]
  -[PMEditorRootViewController previousZoomedToFill]
  -[PMEditorRootViewController setPreviousZoomedToFill:]
  -[PMEditorRootViewController setSplitViewContainerView:]
  -[PMEditorRootViewController setOrientationButton:]
  -[PMEditorRootViewController setPlayPauseOverlay:]
  -[PMEditorRootViewController setPlayerContainerYOffset:]
  -[PMEditorRootViewController setPlayerContainerTargetHeight:]
  -[PMEditorRootViewController toolbarHeightConstraint]
  -[PMEditorRootViewController setToolbarHeightConstraint:]
  -[PMEditorRootViewController toolbarYOffset]
  -[PMEditorRootViewController setToolbarYOffset:]


PMSaveVideoActivity : UISaveToCameraRollActivity /System/Library/Frameworks/CoreMedia.framework/CoreMedia
 @property  PHObjectPlaceholder *placeholderForCreatedAsset

  // instance methods
  -[PMSaveVideoActivity .cxx_destruct]
  -[PMSaveVideoActivity activityType]
  -[PMSaveVideoActivity placeholderForCreatedAsset]
  -[PMSaveVideoActivity prepareWithActivityItems:]
  -[PMSaveVideoActivity setPlaceholderForCreatedAsset:]


PMTitleSubtitleView : UIView /System/Library/Frameworks/CoreMedia.framework/CoreMedia <PXChangeObserver>
 @property  NSLayoutConstraint *bottomConstraint
 @property  NSLayoutConstraint *leftConstraint
 @property  UIViewController *viewController
 @property  PXTitleSubtitleUILabel *label
 @property  UIView *dark
 @property  PXExtendedTraitCollection *extendedTraitCollection
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} specSize
 @property  double titleScale
 @property  {CGPoint=dd} ptOffset
 @property  double heightOfTitleArea
 @property  NSString *titleFontName
 @property  NSString *titleText
 @property  NSString *subtitleText
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PMTitleSubtitleView .cxx_destruct]
  -[PMTitleSubtitleView setLabel:]
  -[PMTitleSubtitleView label]
  -[PMTitleSubtitleView setViewController:]
  -[PMTitleSubtitleView initWithFrame:]
  -[PMTitleSubtitleView layoutSubviews]
  -[PMTitleSubtitleView bottomConstraint]
  -[PMTitleSubtitleView viewController]
  -[PMTitleSubtitleView setTitleText:]
  -[PMTitleSubtitleView titleText]
  -[PMTitleSubtitleView subtitleText]
  -[PMTitleSubtitleView setSubtitleText:]
  -[PMTitleSubtitleView titleFontName]
  -[PMTitleSubtitleView setBottomConstraint:]
  -[PMTitleSubtitleView observable:didChange:context:]
  -[PMTitleSubtitleView setTitleFontName:]
  -[PMTitleSubtitleView extendedTraitCollection]
  -[PMTitleSubtitleView setExtendedTraitCollection:]
  -[PMTitleSubtitleView toolbarHeight]
  -[PMTitleSubtitleView leftConstraint]
  -[PMTitleSubtitleView setLeftConstraint:]
  -[PMTitleSubtitleView registerForChangesFromViewController:]
  -[PMTitleSubtitleView heightOfTitleArea]
  -[PMTitleSubtitleView setTitleScale:]
  -[PMTitleSubtitleView titleScale]
  -[PMTitleSubtitleView updateTitleAnimationFromVideoComposition:]
  -[PMTitleSubtitleView setPtOffset:]
  -[PMTitleSubtitleView updateSubtitleTitleLabelForSize:]
  -[PMTitleSubtitleView setDark:]
  -[PMTitleSubtitleView dark]
  -[PMTitleSubtitleView ptOffset]
  -[PMTitleSubtitleView updateSpecIfNeeded]
  -[PMTitleSubtitleView updateDarkFrame]
  -[PMTitleSubtitleView specSize]
  -[PMTitleSubtitleView setSpecSize:]
  -[PMTitleSubtitleView updateFeatureSpecWithExtendedTraitCollection:]
  -[PMTitleSubtitleView updateSpecialConstraints]
  -[PMTitleSubtitleView setSpecForVerticalExport]


PMPXFeatureSpec : PXFeatureSpec /System/Library/Frameworks/UIKit.framework/UIKit
 @property  NSString *fontName
 @property  {CGSize=dd} size

  // instance methods
  -[PMPXFeatureSpec .cxx_destruct]
  -[PMPXFeatureSpec size]
  -[PMPXFeatureSpec setSize:]
  -[PMPXFeatureSpec fontName]
  -[PMPXFeatureSpec setFontName:]
  -[PMPXFeatureSpec viewSpecWithDescriptor:]
  -[PMPXFeatureSpec specForFont:size:]
  -[PMPXFeatureSpec verticalExportSpecForFont:size:]


PMMemoryDebugInfo : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[PMMemoryDebugInfo assetMediaType:itemStart:itemDuration:]
  +[PMMemoryDebugInfo memory:durationsForAsset:itemDuration:]
  +[PMMemoryDebugInfo memory:project:printDataForAssetAsString:andPickInfo:]


MiroSmartMusicMenuCell : UITableViewCell /System/Library/Frameworks/CoreMedia.framework/CoreMedia
 @property  UILabel *songName
 @property  UILabel *artistName
 @property  MiroCircularProgressBar *progressIndicator
 @property  UIImageView *cloudStatus
 @property  UIImageView *artwork
 @property  BOOL observingSong
 @property  Reachability *reachability
 @property  NSString *songUID
 @property  float progress
 @property  VEKSong *song
 @property  UIImageView *checkmark
 @property  MiroSongPreviewButton *previewSongButton

  // class methods
  +[MiroSmartMusicMenuCell dynamicTypeHeight]

  // instance methods
  -[MiroSmartMusicMenuCell dealloc]
  -[MiroSmartMusicMenuCell .cxx_destruct]
  -[MiroSmartMusicMenuCell progress]
  -[MiroSmartMusicMenuCell prepareForReuse]
  -[MiroSmartMusicMenuCell setProgress:]
  -[MiroSmartMusicMenuCell setUserInteractionEnabled:]
  -[MiroSmartMusicMenuCell awakeFromNib]
  -[MiroSmartMusicMenuCell _setProgress:]
  -[MiroSmartMusicMenuCell _updateTextColors]
  -[MiroSmartMusicMenuCell reachability]
  -[MiroSmartMusicMenuCell setReachability:]
  -[MiroSmartMusicMenuCell artwork]
  -[MiroSmartMusicMenuCell setArtwork:]
  -[MiroSmartMusicMenuCell networkStatus]
  -[MiroSmartMusicMenuCell artistName]
  -[MiroSmartMusicMenuCell setArtistName:]
  -[MiroSmartMusicMenuCell song]
  -[MiroSmartMusicMenuCell setSong:]
  -[MiroSmartMusicMenuCell checkmark]
  -[MiroSmartMusicMenuCell setCheckmark:]
  -[MiroSmartMusicMenuCell progressIndicator]
  -[MiroSmartMusicMenuCell setCloudStatus:]
  -[MiroSmartMusicMenuCell cloudStatus]
  -[MiroSmartMusicMenuCell setProgressIndicator:]
  -[MiroSmartMusicMenuCell songName]
  -[MiroSmartMusicMenuCell _setupReachabiliy]
  -[MiroSmartMusicMenuCell networkStatusChanged:]
  -[MiroSmartMusicMenuCell setSongUID:]
  -[MiroSmartMusicMenuCell previewSongButton]
  -[MiroSmartMusicMenuCell _updateCloudStatus]
  -[MiroSmartMusicMenuCell _updateProgressIndicator:]
  -[MiroSmartMusicMenuCell songUID]
  -[MiroSmartMusicMenuCell updateArtwork]
  -[MiroSmartMusicMenuCell updateSongNameForSong:]
  -[MiroSmartMusicMenuCell observingSong]
  -[MiroSmartMusicMenuCell setObservingSong:]
  -[MiroSmartMusicMenuCell _songAssetChanged:]
  -[MiroSmartMusicMenuCell _updateDownload:]
  -[MiroSmartMusicMenuCell setPreviewSongButton:]
  -[MiroSmartMusicMenuCell setSongName:]


PMMusicProvider : NSObject /usr/lib/libc++.1.dylib <PMEditProviderProtocol>
 @property  NSDictionary *songsByMoodGroupingType
 @property  NSDictionary *songsByGenreGroupingType
 @property  NSArray *moodSectionKeys
 @property  NSArray *genreSectionKeys
 @property  NSString *currentSelectedSectionKey
 @property  VEKSong *currentSong
 @property  unsigned long groupingStyle
 @property  long long selectedSection
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  VEKProduction *production
 @property  <PMEditProviderDelegate> *delegate

  // instance methods
  -[PMMusicProvider delegate]
  -[PMMusicProvider setDelegate:]
  -[PMMusicProvider .cxx_destruct]
  -[PMMusicProvider numberOfSections]
  -[PMMusicProvider selectedSection]
  -[PMMusicProvider setSelectedSection:]
  -[PMMusicProvider production]
  -[PMMusicProvider setProduction:]
  -[PMMusicProvider currentSong]
  -[PMMusicProvider setGroupingStyle:]
  -[PMMusicProvider initWithProduction:]
  -[PMMusicProvider indexPathOfSong:]
  -[PMMusicProvider displayNameForSection:]
  -[PMMusicProvider numberOfItemsinSection:]
  -[PMMusicProvider songAtIndex:section:]
  -[PMMusicProvider sortedMoodIDs]
  -[PMMusicProvider songsGroupedByMood]
  -[PMMusicProvider setSongsByMoodGroupingType:]
  -[PMMusicProvider setMoodSectionKeys:]
  -[PMMusicProvider sortedGenreIDs]
  -[PMMusicProvider setGenreSectionKeys:]
  -[PMMusicProvider groupingStyle]
  -[PMMusicProvider moodSectionKeys]
  -[PMMusicProvider genreSectionKeys]
  -[PMMusicProvider displayNameForGenreID:]
  -[PMMusicProvider songsByMoodGroupingType]
  -[PMMusicProvider songsByGenreGroupingType]
  -[PMMusicProvider displayNameForMood:]
  -[PMMusicProvider sectionKeyForIndex:]
  -[PMMusicProvider genreGroupContainsSongs]
  -[PMMusicProvider setSongsByGenreGroupingType:]
  -[PMMusicProvider currentSelectedSectionKey]
  -[PMMusicProvider setCurrentSelectedSectionKey:]


MiroKeyAssetSuggestionsCollectionsViewController : MiroAssetSuggestionsCollectionViewController
 @property  BOOL viewInitialLayout

  // instance methods
  -[MiroKeyAssetSuggestionsCollectionsViewController viewWillAppear:]
  -[MiroKeyAssetSuggestionsCollectionsViewController viewDidLoad]
  -[MiroKeyAssetSuggestionsCollectionsViewController collectionView:cellForItemAtIndexPath:]
  -[MiroKeyAssetSuggestionsCollectionsViewController viewDidLayoutSubviews]
  -[MiroKeyAssetSuggestionsCollectionsViewController viewDidAppear:]
  -[MiroKeyAssetSuggestionsCollectionsViewController collectionView:shouldDeselectItemAtIndexPath:]
  -[MiroKeyAssetSuggestionsCollectionsViewController collectionView:didSelectItemAtIndexPath:]
  -[MiroKeyAssetSuggestionsCollectionsViewController collectionView:layout:sizeForItemAtIndexPath:]
  -[MiroKeyAssetSuggestionsCollectionsViewController setViewInitialLayout:]
  -[MiroKeyAssetSuggestionsCollectionsViewController viewInitialLayout]
  -[MiroKeyAssetSuggestionsCollectionsViewController _customizeKeyAssetPickerLayoutWithSize:]


PMAVSynchronizedView : UIView /System/Library/Frameworks/CoreMedia.framework/CoreMedia
 @property  AVSynchronizedLayer *layer
 @property  AVPlayerItem *playerItem

  // class methods
  +[PMAVSynchronizedView layerClass]

  // instance methods
  -[PMAVSynchronizedView playerItem]
  -[PMAVSynchronizedView setPlayerItem:]
  -[PMAVSynchronizedView makeBackingLayer]


PMiOSMainViewController : MiroPlayerViewController <MiroEditorViewControllerDelegate, PMMovieProviderDelegate, PMEditProviderDelegate, PMMovieContainerViewControllerDelegate, UIPopoverPresentationControllerDelegate, PLDismissableViewController, MiroPreventDismissalDelegate, PMScrubberProviderActionDelegate, PMActivityViewControllerDelegate>
 @property  PMMovieProvider *movieProvider
 @property  PMSaveProvider *saveProvider
 @property  BOOL shouldPlayOnAppearance
 @property  BOOL sliderIsScrolling
 @property  unsigned long pendingActionState
 @property  BOOL controlVisibility
 @property  UIScreenEdgePanGestureRecognizer *screenEdgePanLeftGestureRecognizer
 @property  NSArray *durationDisplayNames
 @property  PMiOSProgressViewController *progressViewController
 @property  UIView *editorPresentationSnapshot
 @property  UIView *offscreenPresentationSnapshot
 @property  UIButton *loadErrorButton
 @property  NSError *downloadError
 @property  BOOL downloadInProgress
 @property  UIView *bottomBar
 @property  NSLayoutConstraint *toolbarHeightConstraint
 @property  NSLayoutConstraint *toolbarBottomConstraint
 @property  NSLayoutConstraint *toolbarBlurBottomConstraint
 @property  PMiOSTimeLabelView *playbackTimeView
 @property  UIVisualEffectView *bottomBarBackgroundView
 @property  {?=qiIq} timeAtTeardown
 @property  UITapGestureRecognizer *airplayVisibilityTapGestureRecognizer
 @property  UIBarButtonItem *playPauseBBItem
 @property  UIBarButtonItem *flexSpaceBBItem
 @property  UIBarButtonItem *activityBBItem
 @property  UIBarButtonItem *editBBItem
 @property  UIBarButtonItem *navBarShareBBItem
 @property  UIBarButtonItem *shareBBItem
 @property  UILabel *titleLabel
 @property  long long initialMood
 @property  double initialDuration
 @property  long long initialNumberOfAssetsInMovie
 @property  BOOL askedToCreateMemory
 @property  PMTTRLoadingViewController *ttrLoadingView
 @property  PMMovieContainerViewController *movieContainerViewController
 @property  PMiOSSliderViewController *moodSlider
 @property  PMiOSSliderViewController *durationSlider
 @property  PMiOSScrubberViewController *scrubber
 @property  PMEditorRootViewController *memoryEditor
 @property  VEKProduction *production
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL preventDismissalByPhotosIfPossible

  // instance methods
  -[PMiOSMainViewController dealloc]
  -[PMiOSMainViewController .cxx_destruct]
  -[PMiOSMainViewController _cancelProgress:]
  -[PMiOSMainViewController titleLabel]
  -[PMiOSMainViewController traitCollectionDidChange:]
  -[PMiOSMainViewController gestureRecognizer:shouldReceiveTouch:]
  -[PMiOSMainViewController willTransitionToTraitCollection:withTransitionCoordinator:]
  -[PMiOSMainViewController viewWillAppear:]
  -[PMiOSMainViewController viewWillDisappear:]
  -[PMiOSMainViewController viewDidLoad]
  -[PMiOSMainViewController setTitleLabel:]
  -[PMiOSMainViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[PMiOSMainViewController viewDidAppear:]
  -[PMiOSMainViewController prefersHomeIndicatorAutoHidden]
  -[PMiOSMainViewController _applicationWillResignActive:]
  -[PMiOSMainViewController _applicationDidBecomeActive:]
  -[PMiOSMainViewController setDownloadError:]
  -[PMiOSMainViewController downloadError]
  -[PMiOSMainViewController scrubber]
  -[PMiOSMainViewController back:]
  -[PMiOSMainViewController setScrubber:]
  -[PMiOSMainViewController setBottomBar:]
  -[PMiOSMainViewController bottomBar]
  -[PMiOSMainViewController production]
  -[PMiOSMainViewController setProduction:]
  -[PMiOSMainViewController movieProvider]
  -[PMiOSMainViewController setMovieProvider:]
  -[PMiOSMainViewController prepareForDismissingForced:]
  -[PMiOSMainViewController ph_preferredChromeAnimation]
  -[PMiOSMainViewController ph_preferredChrome]
  -[PMiOSMainViewController ph_isTransitionOverlayView:]
  -[PMiOSMainViewController ph_loadTransitionSourcePlaceholderViewUsingFactory:]
  -[PMiOSMainViewController ph_rectOfInterestForTransitionInCoordinateSpace:withInfo:]
  -[PMiOSMainViewController ph_rectOfInterestForTransitionInCoordinateSpace:]
  -[PMiOSMainViewController _updateControls]
  -[PMiOSMainViewController playerDidPlayToEnd]
  -[PMiOSMainViewController share:]
  -[PMiOSMainViewController _applicationWillTerminate:]
  -[PMiOSMainViewController setProgressViewController:]
  -[PMiOSMainViewController progressViewController]
  -[PMiOSMainViewController toolbarBottomConstraint]
  -[PMiOSMainViewController setToolbarBottomConstraint:]
  -[PMiOSMainViewController setScreenEdgePanLeftGestureRecognizer:]
  -[PMiOSMainViewController screenEdgePanLeftGestureRecognizer]
  -[PMiOSMainViewController editProvider:didChange:]
  -[PMiOSMainViewController initWithProduction:]
  -[PMiOSMainViewController playerProgressDidChange:]
  -[PMiOSMainViewController toggleControlVisibility]
  -[PMiOSMainViewController airPlayDidStart]
  -[PMiOSMainViewController airPlayDidEnd]
  -[PMiOSMainViewController playerRateChanged]
  -[PMiOSMainViewController playerReadyForDisplay]
  -[PMiOSMainViewController _snapshotPlayer]
  -[PMiOSMainViewController _snapshotPlayerWithAspect:]
  -[PMiOSMainViewController setPreventDismissalByPhotosIfPossible:]
  -[PMiOSMainViewController didShareActivity]
  -[PMiOSMainViewController playerDidDoContentChange]
  -[PMiOSMainViewController editorViewControllerDidFinishDismissing:]
  -[PMiOSMainViewController editorViewControllerDidCancel:]
  -[PMiOSMainViewController editorViewController:didEditProduction:withResult:]
  -[PMiOSMainViewController editProviderWillBeginChanging]
  -[PMiOSMainViewController didRefreshPlayerItem:downloadError:]
  -[PMiOSMainViewController resultWasUpdated:]
  -[PMiOSMainViewController progressDidChange:description:]
  -[PMiOSMainViewController playerWillRefreshMovie]
  -[PMiOSMainViewController playerNotReadyForDisplay]
  -[PMiOSMainViewController toolbarHeightConstraint]
  -[PMiOSMainViewController setToolbarHeightConstraint:]
  -[PMiOSMainViewController teardownMovieController]
  -[PMiOSMainViewController _atexitUninitialize]
  -[PMiOSMainViewController movieContainerViewController]
  -[PMiOSMainViewController setSaveProvider:]
  -[PMiOSMainViewController setShouldPlayOnAppearance:]
  -[PMiOSMainViewController setInitialMood:]
  -[PMiOSMainViewController setMovieContainerViewController:]
  -[PMiOSMainViewController rebuildToolbarsToTraitCollection:]
  -[PMiOSMainViewController _launchAutoEditDebugView:]
  -[PMiOSMainViewController _setupBottomToolbar]
  -[PMiOSMainViewController debugPrefsStart:]
  -[PMiOSMainViewController _exportWillBegin:]
  -[PMiOSMainViewController _reEnableToolbar:]
  -[PMiOSMainViewController _exportDidEnd:]
  -[PMiOSMainViewController _exportDidCompleteSuccessfully:]
  -[PMiOSMainViewController _atexitInitialize]
  -[PMiOSMainViewController _mediaServicesReset:]
  -[PMiOSMainViewController _autoEditOnLoad]
  -[PMiOSMainViewController shouldPlayOnAppearance]
  -[PMiOSMainViewController setControlVisibility:]
  -[PMiOSMainViewController _clearOffscreenPresentationSnapshot]
  -[PMiOSMainViewController swipeBack:]
  -[PMiOSMainViewController setPendingActionState:]
  -[PMiOSMainViewController initialMood]
  -[PMiOSMainViewController initialDuration]
  -[PMiOSMainViewController downloadInProgress]
  -[PMiOSMainViewController initialNumberOfAssetsInMovie]
  -[PMiOSMainViewController preventDismissalByPhotosIfPossible]
  -[PMiOSMainViewController dismissAllModalViewControllers]
  -[PMiOSMainViewController loadErrorButton]
  -[PMiOSMainViewController downloadErrorButtonTapped:]
  -[PMiOSMainViewController setTimeAtTeardown:]
  -[PMiOSMainViewController saveProvider]
  -[PMiOSMainViewController moodSlider]
  -[PMiOSMainViewController durationSlider]
  -[PMiOSMainViewController takeOwnershipOfMovieContainerViewController]
  -[PMiOSMainViewController _clearEditorPresentationSnapshot]
  -[PMiOSMainViewController playbackTimeView]
  -[PMiOSMainViewController updateDownloadErrorButton]
  -[PMiOSMainViewController _takeAndDisplayOffscreenPresentationSnapshot]
  -[PMiOSMainViewController setInitialDuration:]
  -[PMiOSMainViewController setInitialNumberOfAssetsInMovie:]
  -[PMiOSMainViewController setDownloadInProgress:]
  -[PMiOSMainViewController removeLoadErrorButton]
  -[PMiOSMainViewController setLoadErrorButton:]
  -[PMiOSMainViewController processPendingActionState]
  -[PMiOSMainViewController pendingActionState]
  -[PMiOSMainViewController shareBBItem]
  -[PMiOSMainViewController editBBItem]
  -[PMiOSMainViewController editSelector:]
  -[PMiOSMainViewController _updateTitleForTraitCollection:]
  -[PMiOSMainViewController sliderIsScrolling]
  -[PMiOSMainViewController _deviceIsRunningInternalOS]
  -[PMiOSMainViewController rebuildToolbarsToTraitCollection:withPlayRate:]
  -[PMiOSMainViewController playPauseBBItemWithRate:]
  -[PMiOSMainViewController playPause:]
  -[PMiOSMainViewController setShareBBItem:]
  -[PMiOSMainViewController askedToCreateMemory]
  -[PMiOSMainViewController _memoryEditorWithCompletion:]
  -[PMiOSMainViewController setAskedToCreateMemory:]
  -[PMiOSMainViewController memoryEditor]
  -[PMiOSMainViewController offscreenPresentationSnapshot]
  -[PMiOSMainViewController setOffscreenPresentationSnapshot:]
  -[PMiOSMainViewController editorPresentationSnapshot]
  -[PMiOSMainViewController setEditorPresentationSnapshot:]
  -[PMiOSMainViewController controlVisibility]
  -[PMiOSMainViewController _takeAndDisplayEditorPresentationSnapshot]
  -[PMiOSMainViewController setMemoryEditor:]
  -[PMiOSMainViewController _updateDurationSlider]
  -[PMiOSMainViewController _updateMoodSlider]
  -[PMiOSMainViewController setBottomBarBackgroundView:]
  -[PMiOSMainViewController bottomBarBackgroundView]
  -[PMiOSMainViewController setToolbarBlurBottomConstraint:]
  -[PMiOSMainViewController toolbarBlurBottomConstraint]
  -[PMiOSMainViewController setMoodSlider:]
  -[PMiOSMainViewController setDurationSlider:]
  -[PMiOSMainViewController _addHorizontalDividerToSuperView:constrainedToYAxisAnchor:]
  -[PMiOSMainViewController setPlaybackTimeView:]
  -[PMiOSMainViewController navBarShareBBItem]
  -[PMiOSMainViewController activityBBItem]
  -[PMiOSMainViewController flexSpaceBBItem]
  -[PMiOSMainViewController fillerSpaceBBItem]
  -[PMiOSMainViewController setControlVisibility:traitCollection:]
  -[PMiOSMainViewController setSliderIsScrolling:]
  -[PMiOSMainViewController _resetAudioSession]
  -[PMiOSMainViewController setTtrLoadingView:]
  -[PMiOSMainViewController ttrLoadingView]
  -[PMiOSMainViewController gentlyRefreshPlayerIfNeccesary]
  -[PMiOSMainViewController timeAtTeardown]
  -[PMiOSMainViewController scrubberTappedWithPlayState:time:]
  -[PMiOSMainViewController scrubberScrolledToTime:completionHandler:]
  -[PMiOSMainViewController _updateInitialAggdValues]
  -[PMiOSMainViewController playPauseBBItem]
  -[PMiOSMainViewController testMemoryEditorFor:withCompletion:]
  -[PMiOSMainViewController dismissEditor]
  -[PMiOSMainViewController _movePlayerToBeginning]
  -[PMiOSMainViewController durationDisplayNames]
  -[PMiOSMainViewController setDurationDisplayNames:]
  -[PMiOSMainViewController airplayVisibilityTapGestureRecognizer]
  -[PMiOSMainViewController setAirplayVisibilityTapGestureRecognizer:]


MiroProject : Project
  // instance methods
  -[MiroProject imageAtTime:withSize:]
  -[MiroProject didInitWithContentsOfFile]
  -[MiroProject videoPreviewImageOfSize:]
  -[MiroProject hasMissingAssets]


PMTapToRadarActivity : UIActivity /System/Library/Frameworks/CoreMedia.framework/CoreMedia
 @property  VEKProduction *production
 @property  MiroMovie *tapToRadarMovie
 @property  VEKResult *result

  // instance methods
  -[PMTapToRadarActivity .cxx_destruct]
  -[PMTapToRadarActivity result]
  -[PMTapToRadarActivity activityType]
  -[PMTapToRadarActivity setResult:]
  -[PMTapToRadarActivity activityTitle]
  -[PMTapToRadarActivity canPerformWithActivityItems:]
  -[PMTapToRadarActivity prepareWithActivityItems:]
  -[PMTapToRadarActivity activityImage]
  -[PMTapToRadarActivity performActivity]
  -[PMTapToRadarActivity production]
  -[PMTapToRadarActivity setProduction:]
  -[PMTapToRadarActivity initWithProduction:result:]
  -[PMTapToRadarActivity setTapToRadarMovie:]
  -[PMTapToRadarActivity _returnTextDebugAsString]
  -[PMTapToRadarActivity tapToRadarMovie]


PMColorActivityIndicatorView : UIActivityIndicatorView /System/Library/Frameworks/CoreMedia.framework/CoreMedia
 @property  UIColor *indicatorColor

  // instance methods
  -[PMColorActivityIndicatorView setIndicatorColor:]
  -[PMColorActivityIndicatorView indicatorColor]


MiroContentEditorViewController : UIViewController /System/Library/Frameworks/CoreMedia.framework/CoreMedia <UINavigationBarDelegate, MiroEditorClipCellDelegate, PMTrimmerDelegate, MiroAssetSuggestionsCollectionViewControllerDelegate, MiroEditorClipCollectionDataSource, MiroEditorClipCollectionDelegate, PMClipCollectionProviderDelegate, PMClipProviderDelegate, MiroApplicationTestingEditorControlling>
 @property  BOOL didCenterInitialClipOnFirstAppearance
 @property  MiroEditorClipCollectionViewController *editorViewController
 @property  BOOL isPerformingInteractiveMovement
 @property  long long removeClipEnteredCount
 @property  BOOL shouldNoteUserChangedAudioLevelForClip
 @property  BOOL didMakeEdits
 @property  double shouldNoteUserTrimmedClipWithPreviousDuration
 @property  NSString *assetIdentifierToSnapToAfterAutoEdit
 @property  int clipMidTimeToSnapToAfterAutoEdit
 @property  @? revertUserAssetChangesBlock
 @property  @? commitUserAssetChangesBlock
 @property  NSSet *currentAssetIDs
 @property  CALayer *maskLayerCompact
 @property  CALayer *maskLayerRegular
 @property  UITapGestureRecognizer *thumbnailTapGR
 @property  MiroEditorClipCell *trimmingCell
 @property  PMTrimmerViewController *trimmer
 @property  MiroAssetSuggestionsCollectionViewController *addRemoveCollectionPickerView
 @property  BOOL didTrim
 @property  UINavigationBar *topToolbar
 @property  UIToolbar *bottomToolbar
 @property  UIBarButtonItem *doneBarButtonItem
 @property  UIBarButtonItem *cancelBarButtonItem
 @property  UIBarButtonItem *bottomPlayPauseBarButtonItem
 @property  UIBarButtonItem *dislikeBarButtonItem
 @property  UIBarButtonItem *durationBarButtonItem
 @property  UILabel *toolbarDurationLabel
 @property  UIBarButtonItem *debugAutoEditBarButtonItem
 @property  UILabel *debugSongDescriptionLabel
 @property  UILabel *debugTitleDescriptionLabel
 @property  UILabel *debugEditStyleDescriptionLabel
 @property  UILabel *debugFilterDescriptionLabel
 @property  UIBarButtonItem *addBarButtonItem
 @property  UIView *trimmerContainerView
 @property  NSLayoutConstraint *trimmerTopConstraint
 @property  NSLayoutConstraint *trimmerLeadingConstraint
 @property  NSLayoutConstraint *trimmerTrailingConstraint
 @property  UIView *timelineMaskView
 @property  NSLayoutConstraint *timelineHeightConstraint
 @property  NSLayoutConstraint *timelineBottomConstraint
 @property  NSLayoutConstraint *timelineLeftConstraint
 @property  NSLayoutConstraint *timelineRightConstraint
 @property  NSLayoutConstraint *toolbarHeightConstraint
 @property  UIVisualEffectView *navBarBlurEffectView
 @property  UIVisualEffectView *trimmerBlurEffectView
 @property  NSLayoutConstraint *topBlurEffectViewTrimmerConstraint
 @property  UIVisualEffectView *bottomBlurEffectView
 @property  NSLayoutConstraint *bottomBlurEffectViewHeightConstraint
 @property  PMiOSProgressViewController *progressViewController
 @property  <MiroContentEditorViewControllerDelegate> *delegate
 @property  {?=qiIq} initialStartTime
 @property  MiroTimelineClipCollectionViewController *timelineViewController
 @property  VEKProduction *production
 @property  PMClipCollectionProvider *clipCollectionProvider
 @property  PMClipCollectionProvider *previousClipCollectionProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL shouldCancelDownload
 @property  PHCachingImageManager *imageManager

  // instance methods
  -[MiroContentEditorViewController dealloc]
  -[MiroContentEditorViewController initWithCoder:]
  -[MiroContentEditorViewController delegate]
  -[MiroContentEditorViewController setDelegate:]
  -[MiroContentEditorViewController .cxx_destruct]
  -[MiroContentEditorViewController willTransitionToTraitCollection:withTransitionCoordinator:]
  -[MiroContentEditorViewController viewWillAppear:]
  -[MiroContentEditorViewController viewDidLoad]
  -[MiroContentEditorViewController viewWillLayoutSubviews]
  -[MiroContentEditorViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[MiroContentEditorViewController viewDidLayoutSubviews]
  -[MiroContentEditorViewController navigationBar:shouldPopItem:]
  -[MiroContentEditorViewController cancelBarButtonItem]
  -[MiroContentEditorViewController preferredStatusBarStyle]
  -[MiroContentEditorViewController didReceiveMemoryWarning]
  -[MiroContentEditorViewController prefersStatusBarHidden]
  -[MiroContentEditorViewController prepareForSegue:sender:]
  -[MiroContentEditorViewController _cancelProgress]
  -[MiroContentEditorViewController imageManager]
  -[MiroContentEditorViewController setImageManager:]
  -[MiroContentEditorViewController production]
  -[MiroContentEditorViewController setProduction:]
  -[MiroContentEditorViewController setEditorViewController:]
  -[MiroContentEditorViewController editorViewController]
  -[MiroContentEditorViewController doneBarButtonItem]
  -[MiroContentEditorViewController setDoneBarButtonItem:]
  -[MiroContentEditorViewController setProgressViewController:]
  -[MiroContentEditorViewController progressViewController]
  -[MiroContentEditorViewController topToolbar]
  -[MiroContentEditorViewController bottomToolbar]
  -[MiroContentEditorViewController setTopToolbar:]
  -[MiroContentEditorViewController setBottomToolbar:]
  -[MiroContentEditorViewController assetSuggestionsControllerDidDismiss:]
  -[MiroContentEditorViewController assetSuggestionsController:didFinishPickingAssets:]
  -[MiroContentEditorViewController assetSuggestionsController:clipCountForAsset:]
  -[MiroContentEditorViewController clipCollectionProvider]
  -[MiroContentEditorViewController pickListSplitDistanceForAsset:]
  -[MiroContentEditorViewController pickedLocallyAvailableScenesContainAsset:]
  -[MiroContentEditorViewController timelineViewController]
  -[MiroContentEditorViewController _updateDebugLabelForClipCell:]
  -[MiroContentEditorViewController assetSuggestionsController:debugMetadataForAsset:]
  -[MiroContentEditorViewController debugAutoEditButtonTouchUpInside:]
  -[MiroContentEditorViewController _updateDebugLabelsForVisibleTimelineClips]
  -[MiroContentEditorViewController trimmer:willStartTrimmingWithClipProvider:]
  -[MiroContentEditorViewController trimmer:shouldContinueTrimmingWithClipProvider:startTime:endTime:]
  -[MiroContentEditorViewController trimmer:didContinueTrimmingWithClipProvider:startTime:endTime:]
  -[MiroContentEditorViewController trimmer:didEndTrimmingWithClipProvider:startTime:endTime:]
  -[MiroContentEditorViewController setupWithProduction:andResult:]
  -[MiroContentEditorViewController setDidMakeEdits:]
  -[MiroContentEditorViewController setInitialStartTime:]
  -[MiroContentEditorViewController _alertSomeAssetsFailedWithTitle:message:okActionBlock:]
  -[MiroContentEditorViewController didMakeEdits]
  -[MiroContentEditorViewController toolbarHeightConstraint]
  -[MiroContentEditorViewController setToolbarHeightConstraint:]
  -[MiroContentEditorViewController setDidTrim:]
  -[MiroContentEditorViewController setClipCollectionProvider:]
  -[MiroContentEditorViewController navBarBlurEffectView]
  -[MiroContentEditorViewController trimmerBlurEffectView]
  -[MiroContentEditorViewController bottomBlurEffectView]
  -[MiroContentEditorViewController handleTapOnSnappedClip:]
  -[MiroContentEditorViewController setThumbnailTapGR:]
  -[MiroContentEditorViewController _setupToolbars]
  -[MiroContentEditorViewController trimmer]
  -[MiroContentEditorViewController _adjustSnappedClipWhenSplitScreenClosesWorkaround]
  -[MiroContentEditorViewController didCenterInitialClipOnFirstAppearance]
  -[MiroContentEditorViewController initialStartTime]
  -[MiroContentEditorViewController _updateInterfaceElementVisibilityForCell:]
  -[MiroContentEditorViewController _updateTopToolbarVisibilityForCell:atIndexPath:animated:]
  -[MiroContentEditorViewController _configureToolbarsForTraitCollection:]
  -[MiroContentEditorViewController setDidCenterInitialClipOnFirstAppearance:]
  -[MiroContentEditorViewController _configureFadeMaskLayerForTraitCollection:]
  -[MiroContentEditorViewController _setupNavigationBarAppearanceForContentEditor:]
  -[MiroContentEditorViewController _setupEditorCollectionViewController:]
  -[MiroContentEditorViewController _setupTimelineCollectionViewController:]
  -[MiroContentEditorViewController _setupTrimmerInContainerView:]
  -[MiroContentEditorViewController _configureClipControlBarMinimumSpacingForCells:]
  -[MiroContentEditorViewController setTimelineViewController:]
  -[MiroContentEditorViewController setTrimmer:]
  -[MiroContentEditorViewController _setupTransparentBackgroundForNavigationBar:]
  -[MiroContentEditorViewController _setupTransparentBackgroundForToolbar:]
  -[MiroContentEditorViewController _commitEditChangesAndRefreshDebugOverlays:]
  -[MiroContentEditorViewController debugAutoEditBarButtonItem]
  -[MiroContentEditorViewController _updateDurationLabelVisibilityAnimated:]
  -[MiroContentEditorViewController bottomPlayPauseBarButtonItem]
  -[MiroContentEditorViewController _updateBottomBarConstraintsForTraitCollection:]
  -[MiroContentEditorViewController trimmerContainerView]
  -[MiroContentEditorViewController _updateItemNumberLabelForIndexPath:]
  -[MiroContentEditorViewController toolbarDurationLabel]
  -[MiroContentEditorViewController trimmingCell]
  -[MiroContentEditorViewController dislikeBarButtonItem]
  -[MiroContentEditorViewController thumbnailTapGR]
  -[MiroContentEditorViewController _updatePlayPauseButtonForCell:]
  -[MiroContentEditorViewController _updateTrimmerClipForCell:]
  -[MiroContentEditorViewController _updateDurationLabel:]
  -[MiroContentEditorViewController shouldNoteUserChangedAudioLevelForClip]
  -[MiroContentEditorViewController setShouldNoteUserChangedAudioLevelForClip:]
  -[MiroContentEditorViewController shouldNoteUserTrimmedClipWithPreviousDuration]
  -[MiroContentEditorViewController setShouldNoteUserTrimmedClipWithPreviousDuration:]
  -[MiroContentEditorViewController timelineMaskView]
  -[MiroContentEditorViewController maskLayerCompact]
  -[MiroContentEditorViewController maskLayerRegular]
  -[MiroContentEditorViewController _configureTopToolbarForTraitCollection:]
  -[MiroContentEditorViewController _configureBottomToolbarForTraitCollection:]
  -[MiroContentEditorViewController durationBarButtonItem]
  -[MiroContentEditorViewController trimmerTopConstraint]
  -[MiroContentEditorViewController trimmerLeadingConstraint]
  -[MiroContentEditorViewController trimmerTrailingConstraint]
  -[MiroContentEditorViewController _debugBarButtonItems]
  -[MiroContentEditorViewController addBarButtonItem]
  -[MiroContentEditorViewController timelineBottomConstraint]
  -[MiroContentEditorViewController timelineHeightConstraint]
  -[MiroContentEditorViewController timelineLeftConstraint]
  -[MiroContentEditorViewController timelineRightConstraint]
  -[MiroContentEditorViewController _editorCellForIndexPath:]
  -[MiroContentEditorViewController setAssetIdentifierToSnapToAfterAutoEdit:]
  -[MiroContentEditorViewController setClipMidTimeToSnapToAfterAutoEdit:]
  -[MiroContentEditorViewController _middleFrameTimeForClipProvider:]
  -[MiroContentEditorViewController _maskLayerWithFadeWidth:]
  -[MiroContentEditorViewController setAddRemoveCollectionPickerView:]
  -[MiroContentEditorViewController addRemoveCollectionPickerView]
  -[MiroContentEditorViewController removeClipEnteredCount]
  -[MiroContentEditorViewController setRemoveClipEnteredCount:]
  -[MiroContentEditorViewController _updateControlVisibilityOnCells:]
  -[MiroContentEditorViewController doneButtonTouchUpInside:]
  -[MiroContentEditorViewController _didEndEditingForClipProvider:]
  -[MiroContentEditorViewController _prepareForDismissalWithAggD:]
  -[MiroContentEditorViewController didTrim]
  -[MiroContentEditorViewController addWithCompletion:]
  -[MiroContentEditorViewController removeClipAtIndexPath:]
  -[MiroContentEditorViewController assetIdentifierToSnapToAfterAutoEdit]
  -[MiroContentEditorViewController clipMidTimeToSnapToAfterAutoEdit]
  -[MiroContentEditorViewController _nearestClipIndexForAssetID:andClipMidTime:]
  -[MiroContentEditorViewController _reloadCollectionViewsWithHintSnapToIndex:]
  -[MiroContentEditorViewController _alertSomeAssetsFailedToDownload:]
  -[MiroContentEditorViewController _updateThumbnailForCell:indexPath:startTime:]
  -[MiroContentEditorViewController setIsPerformingInteractiveMovement:]
  -[MiroContentEditorViewController isPerformingInteractiveMovement]
  -[MiroContentEditorViewController _scrollTimelineToTrackEditorContentOffset]
  -[MiroContentEditorViewController _updateTrimmerPlayerForCell:]
  -[MiroContentEditorViewController setShouldCancelDownload:]
  -[MiroContentEditorViewController currentAssetIDs]
  -[MiroContentEditorViewController setCurrentAssetIDs:]
  -[MiroContentEditorViewController setPreviousClipCollectionProvider:]
  -[MiroContentEditorViewController shouldCancelDownload]
  -[MiroContentEditorViewController handleChangedProgress:taskDescription:]
  -[MiroContentEditorViewController previousClipCollectionProvider]
  -[MiroContentEditorViewController setTrimmingCell:]
  -[MiroContentEditorViewController editorClipCellWillStartPlaying:]
  -[MiroContentEditorViewController editorClipCellDidStartPlaying:]
  -[MiroContentEditorViewController editorClipCellDidStopPlaying:]
  -[MiroContentEditorViewController editorClipCellShouldShowCircularPlayButton:]
  -[MiroContentEditorViewController editorClipCellDidChangeAudioLevel:]
  -[MiroContentEditorViewController editorClipCellDidChangeSpecialTreatment:]
  -[MiroContentEditorViewController clipCollection:clipProviderAtIndex:]
  -[MiroContentEditorViewController clipCollectionClipCount:]
  -[MiroContentEditorViewController clipCollection:willSetClipProvider:onCell:indexPath:]
  -[MiroContentEditorViewController clipCollection:didSetClipOnCell:indexPath:]
  -[MiroContentEditorViewController clipCollection:didSnapToIndexPath:]
  -[MiroContentEditorViewController clipCollection:didSelectIndexPath:]
  -[MiroContentEditorViewController clipCollection:didBeginDisplayingCell:indexPath:]
  -[MiroContentEditorViewController clipCollection:didEndDisplayingCell:indexPath:]
  -[MiroContentEditorViewController clipCollection:moveItemAtIndexPath:toIndexPath:]
  -[MiroContentEditorViewController clipCollectionDidScroll:]
  -[MiroContentEditorViewController clipCollection:willBeginInteractiveMovementForItemAtIndexPath:]
  -[MiroContentEditorViewController clipCollection:didEndInteractiveMovementForItemAtIndexPath:]
  -[MiroContentEditorViewController clipCollection:didCancelInteractiveMovementForItemAtIndexPath:]
  -[MiroContentEditorViewController clipCollectionProviderWillUpdateResults:]
  -[MiroContentEditorViewController clipCollectionProviderDidUpdateResults:error:]
  -[MiroContentEditorViewController _alertSomeAssetsFailed:unsupported:]
  -[MiroContentEditorViewController _addAssets:removeAssets:]
  -[MiroContentEditorViewController cancelButtonTouchUpInside:]
  -[MiroContentEditorViewController addButtonTouchUpInside:]
  -[MiroContentEditorViewController playPauseButtonTouchUpInside:]
  -[MiroContentEditorViewController dislikeButtonTouchUpInside:]
  -[MiroContentEditorViewController _assetsToAddToUsedAssetsForNewSelectedAssets:]
  -[MiroContentEditorViewController _assetsToRemoveFromUsedAssetsForNewSelectedAssets:]
  -[MiroContentEditorViewController revertUserAssetChangesBlock]
  -[MiroContentEditorViewController setRevertUserAssetChangesBlock:]
  -[MiroContentEditorViewController commitUserAssetChangesBlock]
  -[MiroContentEditorViewController setCommitUserAssetChangesBlock:]
  -[MiroContentEditorViewController setMaskLayerCompact:]
  -[MiroContentEditorViewController setMaskLayerRegular:]
  -[MiroContentEditorViewController setCancelBarButtonItem:]
  -[MiroContentEditorViewController setBottomPlayPauseBarButtonItem:]
  -[MiroContentEditorViewController setDislikeBarButtonItem:]
  -[MiroContentEditorViewController setDurationBarButtonItem:]
  -[MiroContentEditorViewController setToolbarDurationLabel:]
  -[MiroContentEditorViewController setDebugAutoEditBarButtonItem:]
  -[MiroContentEditorViewController debugSongDescriptionLabel]
  -[MiroContentEditorViewController setDebugSongDescriptionLabel:]
  -[MiroContentEditorViewController debugTitleDescriptionLabel]
  -[MiroContentEditorViewController setDebugTitleDescriptionLabel:]
  -[MiroContentEditorViewController debugEditStyleDescriptionLabel]
  -[MiroContentEditorViewController setDebugEditStyleDescriptionLabel:]
  -[MiroContentEditorViewController debugFilterDescriptionLabel]
  -[MiroContentEditorViewController setDebugFilterDescriptionLabel:]
  -[MiroContentEditorViewController setAddBarButtonItem:]
  -[MiroContentEditorViewController setTrimmerContainerView:]
  -[MiroContentEditorViewController setTrimmerTopConstraint:]
  -[MiroContentEditorViewController setTrimmerLeadingConstraint:]
  -[MiroContentEditorViewController setTrimmerTrailingConstraint:]
  -[MiroContentEditorViewController setTimelineMaskView:]
  -[MiroContentEditorViewController setTimelineHeightConstraint:]
  -[MiroContentEditorViewController setTimelineBottomConstraint:]
  -[MiroContentEditorViewController setTimelineLeftConstraint:]
  -[MiroContentEditorViewController setTimelineRightConstraint:]
  -[MiroContentEditorViewController setNavBarBlurEffectView:]
  -[MiroContentEditorViewController setTrimmerBlurEffectView:]
  -[MiroContentEditorViewController topBlurEffectViewTrimmerConstraint]
  -[MiroContentEditorViewController setTopBlurEffectViewTrimmerConstraint:]
  -[MiroContentEditorViewController setBottomBlurEffectView:]
  -[MiroContentEditorViewController bottomBlurEffectViewHeightConstraint]
  -[MiroContentEditorViewController setBottomBlurEffectViewHeightConstraint:]


PMPipelineAnalyticsEvent : PMCoreAnalyticsEvent <CoreAnalyticsEventProtocol>
 @property  NSString *songID
 @property  long long moodID
 @property  NSString *durationRequested
 @property  double durationAchieved
 @property  NSString *collectionClass
 @property  long long assetCountRequested
 @property  long long assetCountAchieved
 @property  long long unsuccessfulDownloadCount
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PMPipelineAnalyticsEvent init]
  -[PMPipelineAnalyticsEvent copy]
  -[PMPipelineAnalyticsEvent .cxx_destruct]
  -[PMPipelineAnalyticsEvent eventName]
  -[PMPipelineAnalyticsEvent eventPayload]
  -[PMPipelineAnalyticsEvent setSongID:]
  -[PMPipelineAnalyticsEvent songID]
  -[PMPipelineAnalyticsEvent moodID]
  -[PMPipelineAnalyticsEvent setMoodID:]
  -[PMPipelineAnalyticsEvent eventBySettingSongID:]
  -[PMPipelineAnalyticsEvent eventBySettingMoodID:]
  -[PMPipelineAnalyticsEvent eventBySettingDurationRequested:]
  -[PMPipelineAnalyticsEvent eventBySettingDurationAchieved:]
  -[PMPipelineAnalyticsEvent eventBySettingCollectionClass:]
  -[PMPipelineAnalyticsEvent eventBySettingAssetCountRequested:]
  -[PMPipelineAnalyticsEvent eventBySettingAssetCountAchieved:]
  -[PMPipelineAnalyticsEvent eventBySettingUnsuccessfulDownloadCount:]
  -[PMPipelineAnalyticsEvent setDurationRequested:]
  -[PMPipelineAnalyticsEvent setDurationAchieved:]
  -[PMPipelineAnalyticsEvent setCollectionClass:]
  -[PMPipelineAnalyticsEvent setAssetCountRequested:]
  -[PMPipelineAnalyticsEvent setAssetCountAchieved:]
  -[PMPipelineAnalyticsEvent setUnsuccessfulDownloadCount:]
  -[PMPipelineAnalyticsEvent durationAchieved]
  -[PMPipelineAnalyticsEvent assetCountRequested]
  -[PMPipelineAnalyticsEvent assetCountAchieved]
  -[PMPipelineAnalyticsEvent unsuccessfulDownloadCount]
  -[PMPipelineAnalyticsEvent collectionClass]
  -[PMPipelineAnalyticsEvent durationRequested]


PMEditorTitleViewController : UIViewController /System/Library/Frameworks/CoreMedia.framework/CoreMedia <UITableViewDelegate, UITableViewDataSource, UITextFieldDelegate>
 @property  UITableViewCell *collectionViewControllerCell
 @property  long long activeCellIndex
 @property  NSString *activeCellText
 @property  BOOL sizeIsTransitioning
 @property  PMTitleEditorProvider *titleProvider
 @property  <TitleChangeInformable> *titleChangeInformableDelegate
 @property  UITableView *tableView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PMEditorTitleViewController dealloc]
  -[PMEditorTitleViewController initWithCoder:]
  -[PMEditorTitleViewController .cxx_destruct]
  -[PMEditorTitleViewController tableView]
  -[PMEditorTitleViewController viewWillDisappear:]
  -[PMEditorTitleViewController viewDidLoad]
  -[PMEditorTitleViewController viewWillLayoutSubviews]
  -[PMEditorTitleViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[PMEditorTitleViewController viewDidAppear:]
  -[PMEditorTitleViewController textDidChange:]
  -[PMEditorTitleViewController tableView:numberOfRowsInSection:]
  -[PMEditorTitleViewController tableView:cellForRowAtIndexPath:]
  -[PMEditorTitleViewController numberOfSectionsInTableView:]
  -[PMEditorTitleViewController tableView:titleForHeaderInSection:]
  -[PMEditorTitleViewController setTableView:]
  -[PMEditorTitleViewController tableView:heightForRowAtIndexPath:]
  -[PMEditorTitleViewController tableView:didSelectRowAtIndexPath:]
  -[PMEditorTitleViewController _applicationDidBecomeActive:]
  -[PMEditorTitleViewController textFieldShouldReturn:]
  -[PMEditorTitleViewController textFieldDidBeginEditing:]
  -[PMEditorTitleViewController textFieldDidEndEditing:]
  -[PMEditorTitleViewController updateFonts]
  -[PMEditorTitleViewController titleProvider]
  -[PMEditorTitleViewController setTitleProvider:]
  -[PMEditorTitleViewController setTitleChangeInformableDelegate:]
  -[PMEditorTitleViewController setActiveCellIndex:]
  -[PMEditorTitleViewController setSizeIsTransitioning:]
  -[PMEditorTitleViewController activeCellIndex]
  -[PMEditorTitleViewController activeCellText]
  -[PMEditorTitleViewController setActiveCellText:]
  -[PMEditorTitleViewController titleChangeInformableDelegate]
  -[PMEditorTitleViewController collectionViewControllerCell]
  -[PMEditorTitleViewController setCollectionViewControllerCell:]
  -[PMEditorTitleViewController sizeIsTransitioning]


PMPassthroughView : UIView /System/Library/Frameworks/CoreMedia.framework/CoreMedia
 @property  <PMPassthroughViewDelegate> *delegate

  // instance methods
  -[PMPassthroughView delegate]
  -[PMPassthroughView setDelegate:]
  -[PMPassthroughView .cxx_destruct]
  -[PMPassthroughView hitTest:withEvent:]


PMMoodProvider : NSObject /usr/lib/libc++.1.dylib <PMSliderProviderProtocol>
 @property  NSMutableArray *blueprints
 @property  NSArray *blueprintNames
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  VEKProduction *production
 @property  <PMEditProviderDelegate> *delegate
 @property  unsigned long selectedIndex

  // instance methods
  -[PMMoodProvider delegate]
  -[PMMoodProvider setDelegate:]
  -[PMMoodProvider .cxx_destruct]
  -[PMMoodProvider numberOfItems]
  -[PMMoodProvider selectedIndex]
  -[PMMoodProvider setSelectedIndex:]
  -[PMMoodProvider blueprints]
  -[PMMoodProvider production]
  -[PMMoodProvider setProduction:]
  -[PMMoodProvider initWithProduction:]
  -[PMMoodProvider displayNameForIndex:]
  -[PMMoodProvider willBeginScrolling]
  -[PMMoodProvider blueprintNames]
  -[PMMoodProvider setCustomBlueprint:]
  -[PMMoodProvider customBlueprint]
  -[PMMoodProvider setBlueprints:]
  -[PMMoodProvider setBlueprintNames:]


PMiOSScrubberCollectionView : UICollectionView /System/Library/Frameworks/CoreMedia.framework/CoreMedia
 @property  <PMiOSScrubberCollectionViewDelegate> *collectionViewDelegate

  // instance methods
  -[PMiOSScrubberCollectionView .cxx_destruct]
  -[PMiOSScrubberCollectionView touchesBegan:withEvent:]
  -[PMiOSScrubberCollectionView touchesEnded:withEvent:]
  -[PMiOSScrubberCollectionView collectionViewDelegate]
  -[PMiOSScrubberCollectionView setCollectionViewDelegate:]


PMOpenInIMovieActivity : UIActivity /System/Library/Frameworks/CoreMedia.framework/CoreMedia
 @property  UIDocumentInteractionController *documentInteractionController
 @property  NSArray *activityItems

  // class methods
  +[PMOpenInIMovieActivity activityCategory]

  // instance methods
  -[PMOpenInIMovieActivity .cxx_destruct]
  -[PMOpenInIMovieActivity activityType]
  -[PMOpenInIMovieActivity activityTitle]
  -[PMOpenInIMovieActivity canPerformWithActivityItems:]
  -[PMOpenInIMovieActivity prepareWithActivityItems:]
  -[PMOpenInIMovieActivity activityDidFinish:]
  -[PMOpenInIMovieActivity activityViewController]
  -[PMOpenInIMovieActivity activityImage]
  -[PMOpenInIMovieActivity performActivity]
  -[PMOpenInIMovieActivity setActivityItems:]
  -[PMOpenInIMovieActivity activityItems]
  -[PMOpenInIMovieActivity documentInteractionController]
  -[PMOpenInIMovieActivity setDocumentInteractionController:]


PMMusicCategoryMenuViewController : UITableViewController /System/Library/Frameworks/CoreMedia.framework/CoreMedia
 @property  UIBarButtonItem *filterTypeButton
 @property  PMMusicProvider *musicProvider
 @property  <PMEditProviderDelegate> *delegate
 @property  <PMEditorToolbarOwner> *toolbarOwner

  // instance methods
  -[PMMusicCategoryMenuViewController delegate]
  -[PMMusicCategoryMenuViewController setDelegate:]
  -[PMMusicCategoryMenuViewController .cxx_destruct]
  -[PMMusicCategoryMenuViewController viewWillAppear:]
  -[PMMusicCategoryMenuViewController viewWillDisappear:]
  -[PMMusicCategoryMenuViewController viewDidLoad]
  -[PMMusicCategoryMenuViewController viewWillLayoutSubviews]
  -[PMMusicCategoryMenuViewController tableView:numberOfRowsInSection:]
  -[PMMusicCategoryMenuViewController tableView:cellForRowAtIndexPath:]
  -[PMMusicCategoryMenuViewController tableView:heightForHeaderInSection:]
  -[PMMusicCategoryMenuViewController tableView:viewForHeaderInSection:]
  -[PMMusicCategoryMenuViewController tableView:viewForFooterInSection:]
  -[PMMusicCategoryMenuViewController tableView:didSelectRowAtIndexPath:]
  -[PMMusicCategoryMenuViewController popFromNavigationController]
  -[PMMusicCategoryMenuViewController _addObserverForTextSizeDidChange]
  -[PMMusicCategoryMenuViewController musicProvider]
  -[PMMusicCategoryMenuViewController userTextSizeDidChange]
  -[PMMusicCategoryMenuViewController setMusicProvider:]
  -[PMMusicCategoryMenuViewController toolbarOwner]
  -[PMMusicCategoryMenuViewController setToolbarOwner:]
  -[PMMusicCategoryMenuViewController addFilterButtonToTopBar]
  -[PMMusicCategoryMenuViewController filterTypeButton]
  -[PMMusicCategoryMenuViewController changeFilterStyle:]
  -[PMMusicCategoryMenuViewController setFilterTypeButton:]


PMScrubberProvider : NSObject /usr/lib/libc++.1.dylib <PMScrubberProviderDataSource>
 @property  VEKResult *currentResult
 @property  double currentDuration
 @property  BOOL isPlayingCurrent
 @property  BOOL isPlayingPrevious
 @property  double currentProgress
 @property  BOOL isScrubbing
 @property  NSObject<OS_dispatch_queue> *serialQueue
 @property  <PMScrubberProviderDelegate> *delegate
 @property  <PMScrubberProviderActionDelegate> *actionDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PMScrubberProvider init]
  -[PMScrubberProvider delegate]
  -[PMScrubberProvider setDelegate:]
  -[PMScrubberProvider .cxx_destruct]
  -[PMScrubberProvider currentProgress]
  -[PMScrubberProvider serialQueue]
  -[PMScrubberProvider setCurrentResult:]
  -[PMScrubberProvider currentResult]
  -[PMScrubberProvider actionDelegate]
  -[PMScrubberProvider setActionDelegate:]
  -[PMScrubberProvider isScrubbing]
  -[PMScrubberProvider setSerialQueue:]
  -[PMScrubberProvider updateWithResult:]
  -[PMScrubberProvider setCurrentProgress:]
  -[PMScrubberProvider setIsScrubbing:]
  -[PMScrubberProvider currentDuration]
  -[PMScrubberProvider setCurrentDuration:]
  -[PMScrubberProvider playbackProgressDidChange:]
  -[PMScrubberProvider playbackStatusDidChange:]
  -[PMScrubberProvider willEnterEditMode]
  -[PMScrubberProvider setIsPlayingCurrent:]
  -[PMScrubberProvider setIsPlayingPrevious:]
  -[PMScrubberProvider clipIndexWithTime:]
  -[PMScrubberProvider isPlayingCurrent]
  -[PMScrubberProvider isPlayingPrevious]
  -[PMScrubberProvider imageForItem:withThumbnailCount:size:completionHandler:]
  -[PMScrubberProvider scrubberTapped]
  -[PMScrubberProvider scrubberReleasedWithProgress:]
  -[PMScrubberProvider scrubberToggled]
  -[PMScrubberProvider scrubberTouched]
  -[PMScrubberProvider scrubberScrolledWithProgress:]


PMMovieProviderAnalyticsEvent : PMCoreAnalyticsEvent <CoreAnalyticsEventProtocol>
 @property  long long changedMusicCount
 @property  BOOL didChangeMusic
 @property  long long changedTitleCount
 @property  BOOL didChangeTitle
 @property  long long changedSubTitleCount
 @property  BOOL didChangeSubTitle
 @property  long long changedMoodCount
 @property  BOOL didChangeMood
 @property  long long changedDurationCount
 @property  BOOL didChangeDuration
 @property  long long changedKeyAssetCount
 @property  BOOL didChangeKeyAsset
 @property  long long changedTrimRangeCount
 @property  BOOL didChangeTrimRange
 @property  long long playedAllTheWayThroughCount
 @property  BOOL didPlayAllTheWayThrough
 @property  long long startedPlaybackCount
 @property  BOOL didStartPlayback
 @property  long long sharedCount
 @property  BOOL didShare
 @property  long long editDoneCount
 @property  BOOL didEdit
 @property  long long abortedDuringDownloadCount
 @property  BOOL didAbortDuringDownload
 @property  long long assetCountDeltaFromEditing
 @property  NSDate *creationDate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PMMovieProviderAnalyticsEvent init]
  -[PMMovieProviderAnalyticsEvent copy]
  -[PMMovieProviderAnalyticsEvent .cxx_destruct]
  -[PMMovieProviderAnalyticsEvent creationDate]
  -[PMMovieProviderAnalyticsEvent eventName]
  -[PMMovieProviderAnalyticsEvent setCreationDate:]
  -[PMMovieProviderAnalyticsEvent eventPayload]
  -[PMMovieProviderAnalyticsEvent eventByIncreasingChangedMusicCount]
  -[PMMovieProviderAnalyticsEvent eventByAssigningDidChangeMusic]
  -[PMMovieProviderAnalyticsEvent eventByIncreasingEditDoneCount]
  -[PMMovieProviderAnalyticsEvent eventByAssigningDidEdit]
  -[PMMovieProviderAnalyticsEvent eventByIncreasingChangedTitleCount]
  -[PMMovieProviderAnalyticsEvent eventByAssigningDidChangeTitle]
  -[PMMovieProviderAnalyticsEvent eventByIncreasingChangedSubtitleCount]
  -[PMMovieProviderAnalyticsEvent eventByAssigningDidChangeSubTitle]
  -[PMMovieProviderAnalyticsEvent eventByIncreasingChangedTrimRangeCount]
  -[PMMovieProviderAnalyticsEvent eventByAssigningDidChangeTrimRange]
  -[PMMovieProviderAnalyticsEvent eventByIncreasingChangedKeyAssetCount]
  -[PMMovieProviderAnalyticsEvent eventByAssigningDidChangeKeyAsset]
  -[PMMovieProviderAnalyticsEvent eventByIncreasingAbortedDuringDownloadCount]
  -[PMMovieProviderAnalyticsEvent eventByAssigningDidAbortDuringDownload]
  -[PMMovieProviderAnalyticsEvent eventByAssigningAssetCountDeltaFromEditingWithCount:]
  -[PMMovieProviderAnalyticsEvent eventByIncreasingStartedPlaybackCount]
  -[PMMovieProviderAnalyticsEvent eventByAssigningDidStartPlayback]
  -[PMMovieProviderAnalyticsEvent eventByIncreasingPlayedAllTheWayThroughCount]
  -[PMMovieProviderAnalyticsEvent eventByAssigningDidPlayAllTheWayThrough]
  -[PMMovieProviderAnalyticsEvent eventByIncreasingChangedDurationCount]
  -[PMMovieProviderAnalyticsEvent eventByAssigningDidChangeDuration]
  -[PMMovieProviderAnalyticsEvent eventByIncreasingChangedMoodCount]
  -[PMMovieProviderAnalyticsEvent eventByAssigningDidChangeMood]
  -[PMMovieProviderAnalyticsEvent eventByIncreasingSharedCount]
  -[PMMovieProviderAnalyticsEvent eventByAssigningDidShare]
  -[PMMovieProviderAnalyticsEvent setChangedMusicCount:]
  -[PMMovieProviderAnalyticsEvent setDidChangeMusic:]
  -[PMMovieProviderAnalyticsEvent setChangedTitleCount:]
  -[PMMovieProviderAnalyticsEvent setDidChangeTitle:]
  -[PMMovieProviderAnalyticsEvent setChangedSubTitleCount:]
  -[PMMovieProviderAnalyticsEvent setDidChangeSubTitle:]
  -[PMMovieProviderAnalyticsEvent setChangedMoodCount:]
  -[PMMovieProviderAnalyticsEvent setDidChangeMood:]
  -[PMMovieProviderAnalyticsEvent setChangedDurationCount:]
  -[PMMovieProviderAnalyticsEvent setDidChangeDuration:]
  -[PMMovieProviderAnalyticsEvent setChangedKeyAssetCount:]
  -[PMMovieProviderAnalyticsEvent setDidChangeKeyAsset:]
  -[PMMovieProviderAnalyticsEvent setChangedTrimRangeCount:]
  -[PMMovieProviderAnalyticsEvent setDidChangeTrimRange:]
  -[PMMovieProviderAnalyticsEvent setPlayedAllTheWayThroughCount:]
  -[PMMovieProviderAnalyticsEvent setDidPlayAllTheWayThrough:]
  -[PMMovieProviderAnalyticsEvent setStartedPlaybackCount:]
  -[PMMovieProviderAnalyticsEvent setDidStartPlayback:]
  -[PMMovieProviderAnalyticsEvent setSharedCount:]
  -[PMMovieProviderAnalyticsEvent setDidShare:]
  -[PMMovieProviderAnalyticsEvent setEditDoneCount:]
  -[PMMovieProviderAnalyticsEvent setDidEdit:]
  -[PMMovieProviderAnalyticsEvent setAbortedDuringDownloadCount:]
  -[PMMovieProviderAnalyticsEvent setDidAbortDuringDownload:]
  -[PMMovieProviderAnalyticsEvent setAssetCountDeltaFromEditing:]
  -[PMMovieProviderAnalyticsEvent changedMusicCount]
  -[PMMovieProviderAnalyticsEvent changedTitleCount]
  -[PMMovieProviderAnalyticsEvent changedSubTitleCount]
  -[PMMovieProviderAnalyticsEvent changedMoodCount]
  -[PMMovieProviderAnalyticsEvent changedDurationCount]
  -[PMMovieProviderAnalyticsEvent changedKeyAssetCount]
  -[PMMovieProviderAnalyticsEvent changedTrimRangeCount]
  -[PMMovieProviderAnalyticsEvent playedAllTheWayThroughCount]
  -[PMMovieProviderAnalyticsEvent startedPlaybackCount]
  -[PMMovieProviderAnalyticsEvent sharedCount]
  -[PMMovieProviderAnalyticsEvent editDoneCount]
  -[PMMovieProviderAnalyticsEvent abortedDuringDownloadCount]
  -[PMMovieProviderAnalyticsEvent didChangeMusic]
  -[PMMovieProviderAnalyticsEvent didChangeTitle]
  -[PMMovieProviderAnalyticsEvent didChangeSubTitle]
  -[PMMovieProviderAnalyticsEvent didChangeMood]
  -[PMMovieProviderAnalyticsEvent didChangeDuration]
  -[PMMovieProviderAnalyticsEvent didChangeKeyAsset]
  -[PMMovieProviderAnalyticsEvent didChangeTrimRange]
  -[PMMovieProviderAnalyticsEvent didPlayAllTheWayThrough]
  -[PMMovieProviderAnalyticsEvent didStartPlayback]
  -[PMMovieProviderAnalyticsEvent didShare]
  -[PMMovieProviderAnalyticsEvent didEdit]
  -[PMMovieProviderAnalyticsEvent didAbortDuringDownload]
  -[PMMovieProviderAnalyticsEvent assetCountDeltaFromEditing]


MiroContentEditorNavigationController : UINavigationController /System/Library/Frameworks/CoreMedia.framework/CoreMedia <UIAdaptivePresentationControllerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MiroContentEditorNavigationController presentationControllerShouldDismiss:]
  -[MiroContentEditorNavigationController awakeFromNib]
  -[MiroContentEditorNavigationController preferredUserInterfaceStyle]


MiroEditorClipCell : UICollectionViewCell /System/Library/Frameworks/CoreMedia.framework/CoreMedia
 @property  AVPlayer *player
 @property  AVPlayerItem *playerItem
 @property  AVPlayerLayer *playerLayer
 @property  UIView *circularPlayButton
 @property  UIView *audioButtonContainerView
 @property  UILabel *audioButtonLabel
 @property  UIView *treatmentButtonContainerView
 @property  PXUIAssetBadgeView *photoIrisBadgeView
 @property  NSLayoutConstraint *thumbnailAspectConstraint
 @property  MiroEditorClipDebugView *debugInfoView
 @property  NSLayoutConstraint *treatmentButtonTopConstraint
 @property  <MiroEditorClipCellDelegate> *delegate
 @property  UIImage *thumbnail
 @property  PMClipProvider *clipProvider
 @property  BOOL isPlaying
 @property  UIImageView *thumbnailView
 @property  NSLayoutConstraint *bottomBarBottomSpaceConstraint
 @property  UILabel *debugLabel

  // instance methods
  -[MiroEditorClipCell dealloc]
  -[MiroEditorClipCell initWithCoder:]
  -[MiroEditorClipCell delegate]
  -[MiroEditorClipCell setDelegate:]
  -[MiroEditorClipCell .cxx_destruct]
  -[MiroEditorClipCell observeValueForKeyPath:ofObject:change:context:]
  -[MiroEditorClipCell prepareForReuse]
  -[MiroEditorClipCell setDebugLabel:]
  -[MiroEditorClipCell layoutSubviews]
  -[MiroEditorClipCell awakeFromNib]
  -[MiroEditorClipCell _applicationWillResignActive:]
  -[MiroEditorClipCell isPlaying]
  -[MiroEditorClipCell thumbnail]
  -[MiroEditorClipCell setThumbnail:]
  -[MiroEditorClipCell player]
  -[MiroEditorClipCell setPlayer:]
  -[MiroEditorClipCell play:]
  -[MiroEditorClipCell pause:]
  -[MiroEditorClipCell playerLayer]
  -[MiroEditorClipCell setPlayerLayer:]
  -[MiroEditorClipCell playerItem]
  -[MiroEditorClipCell setPlayerItem:]
  -[MiroEditorClipCell debugLabel]
  -[MiroEditorClipCell thumbnailView]
  -[MiroEditorClipCell assetBadgeView:userDidSelectBadges:]
  -[MiroEditorClipCell setThumbnailView:]
  -[MiroEditorClipCell clipProvider]
  -[MiroEditorClipCell setClipProvider:]
  -[MiroEditorClipCell _faceRectsInViewSpace]
  -[MiroEditorClipCell _highlightFacesForRects:]
  -[MiroEditorClipCell _highlightPOI]
  -[MiroEditorClipCell _poiRectInViewSpace]
  -[MiroEditorClipCell _removePOIsInRect:]
  -[MiroEditorClipCell _addPOIInRect:]
  -[MiroEditorClipCell _addHighlightRectsToThumbnail]
  -[MiroEditorClipCell handleTapAtLocation:]
  -[MiroEditorClipCell playPause:]
  -[MiroEditorClipCell circularPlayButtonIsHidden]
  -[MiroEditorClipCell updateControlVisibility]
  -[MiroEditorClipCell bottomBarBottomSpaceConstraint]
  -[MiroEditorClipCell stopPlayback:]
  -[MiroEditorClipCell showPlayerWithCompletionHandler:]
  -[MiroEditorClipCell _updateAudioButton]
  -[MiroEditorClipCell debugInfoView]
  -[MiroEditorClipCell audioButtonContainerView]
  -[MiroEditorClipCell treatmentButtonContainerView]
  -[MiroEditorClipCell setTreatmentButtonTopConstraint:]
  -[MiroEditorClipCell treatmentButtonTopConstraint]
  -[MiroEditorClipCell _setupCircularPlayButton]
  -[MiroEditorClipCell audioButtonTouchUpInside:]
  -[MiroEditorClipCell _updateThumbnailAspectIfNecessary]
  -[MiroEditorClipCell thumbnailAspectConstraint]
  -[MiroEditorClipCell setThumbnailAspectConstraint:]
  -[MiroEditorClipCell _updatePlayButton]
  -[MiroEditorClipCell _updateTreatmentButton]
  -[MiroEditorClipCell _updateDebugInfoView]
  -[MiroEditorClipCell _didPlayToEnd:]
  -[MiroEditorClipCell audioButtonLabel]
  -[MiroEditorClipCell treatmentButtonTouchUpInside:]
  -[MiroEditorClipCell photoIrisBadgeView]
  -[MiroEditorClipCell setPhotoIrisBadgeView:]
  -[MiroEditorClipCell circularPlayButton]
  -[MiroEditorClipCell playButtonTouchUpInside:]
  -[MiroEditorClipCell setCircularPlayButton:]
  -[MiroEditorClipCell _updateAudioVolume]
  -[MiroEditorClipCell _hidePlayer]
  -[MiroEditorClipCell _disableAudioTracks]
  -[MiroEditorClipCell setBottomBarBottomSpaceConstraint:]
  -[MiroEditorClipCell setAudioButtonContainerView:]
  -[MiroEditorClipCell setAudioButtonLabel:]
  -[MiroEditorClipCell setTreatmentButtonContainerView:]
  -[MiroEditorClipCell setDebugInfoView:]


MiroEditorClipCollectionViewController : UICollectionViewController /System/Library/Frameworks/CoreMedia.framework/CoreMedia <MiroEditorFlowLayoutDelegate, MiroEditorClipCollection>
 @property  BOOL isInViewWillTransitionToSize
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <MiroEditorClipCollectionDataSource> *dataSource
 @property  <MiroEditorClipCollectionDelegate> *delegate
 @property  NSIndexPath *initialIndexPath

  // instance methods
  -[MiroEditorClipCollectionViewController delegate]
  -[MiroEditorClipCollectionViewController setDelegate:]
  -[MiroEditorClipCollectionViewController .cxx_destruct]
  -[MiroEditorClipCollectionViewController dataSource]
  -[MiroEditorClipCollectionViewController setDataSource:]
  -[MiroEditorClipCollectionViewController scrollViewDidScroll:]
  -[MiroEditorClipCollectionViewController scrollViewDidEndScrollingAnimation:]
  -[MiroEditorClipCollectionViewController viewDidLoad]
  -[MiroEditorClipCollectionViewController viewWillLayoutSubviews]
  -[MiroEditorClipCollectionViewController collectionView:numberOfItemsInSection:]
  -[MiroEditorClipCollectionViewController collectionView:cellForItemAtIndexPath:]
  -[MiroEditorClipCollectionViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[MiroEditorClipCollectionViewController viewDidLayoutSubviews]
  -[MiroEditorClipCollectionViewController collectionView:shouldSelectItemAtIndexPath:]
  -[MiroEditorClipCollectionViewController collectionView:willDisplayCell:forItemAtIndexPath:]
  -[MiroEditorClipCollectionViewController collectionView:didEndDisplayingCell:forItemAtIndexPath:]
  -[MiroEditorClipCollectionViewController initialIndexPath]
  -[MiroEditorClipCollectionViewController collectionView:layout:didSnapToItemAtIndexPath:]
  -[MiroEditorClipCollectionViewController setInitialIndexPath:]
  -[MiroEditorClipCollectionViewController snapToIndexPath:animated:]
  -[MiroEditorClipCollectionViewController cellForClipProvider:]
  -[MiroEditorClipCollectionViewController isInViewWillTransitionToSize]
  -[MiroEditorClipCollectionViewController _snapToIndexPath:animated:]
  -[MiroEditorClipCollectionViewController setIsInViewWillTransitionToSize:]


PMEditorBasePlayerViewController : UIViewController /System/Library/Frameworks/CoreMedia.framework/CoreMedia
 @property  UIView *snapshotView
 @property  NSLayoutConstraint *playerContainerHeightConstraint
 @property  NSLayoutConstraint *playerContainerWidthConstraint
 @property  NSLayoutConstraint *tableHeaderHeightConstraint
 @property  <PMEditorPlayerViewDelegate> *playerViewDelegate
 @property  <PMEditorToolbarOwner> *toolbarOwner
 @property  UIView *playerContainerView
 @property  UIView *tableHeaderWithSpaceView

  // instance methods
  -[PMEditorBasePlayerViewController .cxx_destruct]
  -[PMEditorBasePlayerViewController viewWillAppear:]
  -[PMEditorBasePlayerViewController viewWillLayoutSubviews]
  -[PMEditorBasePlayerViewController viewDidLayoutSubviews]
  -[PMEditorBasePlayerViewController sizeForChildContentContainer:withParentContainerSize:]
  -[PMEditorBasePlayerViewController snapshotView]
  -[PMEditorBasePlayerViewController setSnapshotView:]
  -[PMEditorBasePlayerViewController playerViewDelegate]
  -[PMEditorBasePlayerViewController setPlayerViewDelegate:]
  -[PMEditorBasePlayerViewController playerContainerView]
  -[PMEditorBasePlayerViewController setPlayerContainerView:]
  -[PMEditorBasePlayerViewController toolbarOwner]
  -[PMEditorBasePlayerViewController setToolbarOwner:]
  -[PMEditorBasePlayerViewController heightForPlayerView]
  -[PMEditorBasePlayerViewController setTableHeaderWithSpaceView:]
  -[PMEditorBasePlayerViewController tableHeaderWithSpaceView]
  -[PMEditorBasePlayerViewController setPlayerContainerHeightConstraint:]
  -[PMEditorBasePlayerViewController playerContainerHeightConstraint]
  -[PMEditorBasePlayerViewController setPlayerContainerWidthConstraint:]
  -[PMEditorBasePlayerViewController playerContainerWidthConstraint]
  -[PMEditorBasePlayerViewController tableHeaderHeightConstraint]
  -[PMEditorBasePlayerViewController setTableHeaderHeightConstraint:]


MemoriesDelegate : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[MemoriesDelegate allowSaving]
  +[MemoriesDelegate ignoreReadOnly]
  +[MemoriesDelegate currentProject]
  +[MemoriesDelegate nukeCaches]
  +[MemoriesDelegate activeCoreProjectViewController]
  +[MemoriesDelegate shouldPlaySlowMoWhenPreviewing]
  +[MemoriesDelegate playbackFrameRateMode]
  +[MemoriesDelegate exportFrameRateMode]
  +[MemoriesDelegate duckingAmount]
  +[MemoriesDelegate forceTeardownDisplayOnProjectChange]
  +[MemoriesDelegate updateProjectAndCachesOnPhotosLibraryChange]
  +[MemoriesDelegate playbackPixelCount]
  +[MemoriesDelegate setCurrentProject:]


MiroPPT : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *currentTestName
 @property  NSDictionary *currentTestOptions
 @property  UIViewController *playerViewController

  // class methods
  +[MiroPPT sharedInstance]

  // instance methods
  -[MiroPPT .cxx_destruct]
  -[MiroPPT runTest:options:]
  -[MiroPPT playerViewController]
  -[MiroPPT setPlayerViewController:]
  -[MiroPPT currentTestName]
  -[MiroPPT setCurrentTestName:]
  -[MiroPPT currentTestOptions]
  -[MiroPPT setCurrentTestOptions:]
  -[MiroPPT dismissAllModalViewControllers]
  -[MiroPPT currentTestIterations]
  -[MiroPPT currentTestOffset]
  -[MiroPPT currentTestLength]
  -[MiroPPT startedCurrentTest]
  -[MiroPPT finishedCurrentTest]
  -[MiroPPT finishedCurrentTestWithExtraResults:]
  -[MiroPPT failedCurrentTest]


PMMusicMenuLabelCell : UITableViewCell /System/Library/Frameworks/CoreMedia.framework/CoreMedia
 @property  UILabel *label
 @property  NSLayoutConstraint *labelLeadingConstraint

  // instance methods
  -[PMMusicMenuLabelCell .cxx_destruct]
  -[PMMusicMenuLabelCell setLabel:]
  -[PMMusicMenuLabelCell label]
  -[PMMusicMenuLabelCell awakeFromNib]
  -[PMMusicMenuLabelCell setSelected:animated:]
  -[PMMusicMenuLabelCell setLabelLeadingConstraint:]
  -[PMMusicMenuLabelCell labelLeadingConstraint]


DurationDisplayData : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *localizedName
 @property  double duration

  // class methods
  +[DurationDisplayData pairWithDuration:]

  // instance methods
  -[DurationDisplayData .cxx_destruct]
  -[DurationDisplayData localizedName]
  -[DurationDisplayData duration]
  -[DurationDisplayData setDuration:]
  -[DurationDisplayData setLocalizedName:]


PMDurationProvider : NSObject /usr/lib/libc++.1.dylib <PMSliderProviderProtocol>
 @property  NSArray *localizedDurations
 @property  double currentDuration
 @property  double maxDuration
 @property  double customDuration
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  VEKProduction *production
 @property  <PMEditProviderDelegate> *delegate
 @property  unsigned long selectedIndex

  // instance methods
  -[PMDurationProvider delegate]
  -[PMDurationProvider setDelegate:]
  -[PMDurationProvider .cxx_destruct]
  -[PMDurationProvider numberOfItems]
  -[PMDurationProvider selectedIndex]
  -[PMDurationProvider setSelectedIndex:]
  -[PMDurationProvider maxDuration]
  -[PMDurationProvider updateWithResult:]
  -[PMDurationProvider production]
  -[PMDurationProvider setProduction:]
  -[PMDurationProvider currentDuration]
  -[PMDurationProvider setCurrentDuration:]
  -[PMDurationProvider customDuration]
  -[PMDurationProvider setCustomDuration:andEdit:]
  -[PMDurationProvider initWithProduction:]
  -[PMDurationProvider setCustomDuration:]
  -[PMDurationProvider displayNameForIndex:]
  -[PMDurationProvider willBeginScrolling]
  -[PMDurationProvider updateLocalizedNames]
  -[PMDurationProvider setLocalizedDurations:]
  -[PMDurationProvider localizedDurations]


PMiOSScrubberViewController : UIViewController /System/Library/Frameworks/CoreMedia.framework/CoreMedia <PMiOSScrubberCollectionViewDelegate, PMScrubberProviderDelegate>
 @property  PMiOSScrubberCollectionView *collectionView
 @property  UIView *playhead
 @property  PMScrubberProvider *provider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PMiOSScrubberViewController .cxx_destruct]
  -[PMiOSScrubberViewController setProvider:]
  -[PMiOSScrubberViewController provider]
  -[PMiOSScrubberViewController scrollViewDidScroll:]
  -[PMiOSScrubberViewController scrollViewWillBeginDragging:]
  -[PMiOSScrubberViewController scrollViewDidEndDragging:willDecelerate:]
  -[PMiOSScrubberViewController scrollViewDidEndDecelerating:]
  -[PMiOSScrubberViewController collectionView]
  -[PMiOSScrubberViewController collectionView:numberOfItemsInSection:]
  -[PMiOSScrubberViewController collectionView:cellForItemAtIndexPath:]
  -[PMiOSScrubberViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[PMiOSScrubberViewController viewDidAppear:]
  -[PMiOSScrubberViewController itemWidth]
  -[PMiOSScrubberViewController setCollectionView:]
  -[PMiOSScrubberViewController collectionView:layout:sizeForItemAtIndexPath:]
  -[PMiOSScrubberViewController playhead]
  -[PMiOSScrubberViewController touchesBegan]
  -[PMiOSScrubberViewController touchesEnded]
  -[PMiOSScrubberViewController playbackProgressDidChange:provider:]
  -[PMiOSScrubberViewController resultUpdated:]
  -[PMiOSScrubberViewController setContentInsetWithSize:]
  -[PMiOSScrubberViewController updateScrollWithProgress:]
  -[PMiOSScrubberViewController scrollViewPlayheadPosition]
  -[PMiOSScrubberViewController scrollViewProgress]
  -[PMiOSScrubberViewController setPlayhead:]


PMEditorBottomToolbar : UIToolbar /System/Library/Frameworks/CoreMedia.framework/CoreMedia <PMEditorAutoEditCompletionActionDelegate>
 @property  unsigned long spinnerState
 @property  BOOL autoEditingIsInProgress
 @property  UIBarButtonItem *doneButtonItem
 @property  <PMPlayerControlling> *playerController
 @property  <PMEditorToolbarDelegate> *toolbarDelegate
 @property  BOOL showDoneCancelButtons
 @property  BOOL fromTitle
 @property  BOOL fromMusic
 @property  BOOL fromDuration
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PMEditorBottomToolbar dealloc]
  -[PMEditorBottomToolbar initWithCoder:]
  -[PMEditorBottomToolbar .cxx_destruct]
  -[PMEditorBottomToolbar setItems:]
  -[PMEditorBottomToolbar setItems:animated:]
  -[PMEditorBottomToolbar updateItems]
  -[PMEditorBottomToolbar _applicationWillResignActive:]
  -[PMEditorBottomToolbar _flexibleSpaceItem]
  -[PMEditorBottomToolbar pause:]
  -[PMEditorBottomToolbar playerController]
  -[PMEditorBottomToolbar setPlayerController:]
  -[PMEditorBottomToolbar _done:]
  -[PMEditorBottomToolbar _cancelButtonItem]
  -[PMEditorBottomToolbar setDoneButtonItem:]
  -[PMEditorBottomToolbar doneButtonItem]
  -[PMEditorBottomToolbar spinnerState]
  -[PMEditorBottomToolbar setSpinnerState:]
  -[PMEditorBottomToolbar setToolbarDelegate:]
  -[PMEditorBottomToolbar toolbarDelegate]
  -[PMEditorBottomToolbar setShowDoneCancelButtons:]
  -[PMEditorBottomToolbar setFromTitle:]
  -[PMEditorBottomToolbar setFromDuration:]
  -[PMEditorBottomToolbar setFromMusic:]
  -[PMEditorBottomToolbar autoEditingDidEnd]
  -[PMEditorBottomToolbar _updateItemsAnimated:]
  -[PMEditorBottomToolbar setAutoEditingIsInProgress:]
  -[PMEditorBottomToolbar _handlePlayerDidBeginPlayingNotification:]
  -[PMEditorBottomToolbar _handlePlayerDidDidPlayToEndTimeNotification:]
  -[PMEditorBottomToolbar _doneActivityButtonRow]
  -[PMEditorBottomToolbar _playActivityButtonRow]
  -[PMEditorBottomToolbar _playButtonRow]
  -[PMEditorBottomToolbar _play:]
  -[PMEditorBottomToolbar autoEditingIsInProgress]
  -[PMEditorBottomToolbar _pauseButtonRow]
  -[PMEditorBottomToolbar _postAggDPlayerStatus:]
  -[PMEditorBottomToolbar showDoneCancelButtons]
  -[PMEditorBottomToolbar _playButtonItem]
  -[PMEditorBottomToolbar _pauseButtonItem]
  -[PMEditorBottomToolbar _fixedSpaceItem]
  -[PMEditorBottomToolbar _activityItem]
  -[PMEditorBottomToolbar fromMusic]
  -[PMEditorBottomToolbar fromTitle]
  -[PMEditorBottomToolbar fromDuration]
  -[PMEditorBottomToolbar startAutoEditWaitingBehavior]
  -[PMEditorBottomToolbar cancelAutoEditWaitingBehavior]
  -[PMEditorBottomToolbar performAutoEditDidCompleteAction]
  -[PMEditorBottomToolbar autoEditingWillBegin]


MiroTimelineClipCollectionViewController : UICollectionViewController /System/Library/Frameworks/CoreMedia.framework/CoreMedia <MiroEditorFlowLayoutDelegate, MiroCollectionViewDelegate, MiroEditorClipCollection>
 @property  NSIndexPath *collectionViewDraggingIndexPath
 @property  BOOL highlightCenterThumbnail
 @property  {UIEdgeInsets=dddd} collectionViewContentInsets
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <MiroEditorClipCollectionDataSource> *dataSource
 @property  <MiroEditorClipCollectionDelegate> *delegate
 @property  NSIndexPath *initialIndexPath

  // instance methods
  -[MiroTimelineClipCollectionViewController delegate]
  -[MiroTimelineClipCollectionViewController setDelegate:]
  -[MiroTimelineClipCollectionViewController .cxx_destruct]
  -[MiroTimelineClipCollectionViewController dataSource]
  -[MiroTimelineClipCollectionViewController setDataSource:]
  -[MiroTimelineClipCollectionViewController scrollViewDidScroll:]
  -[MiroTimelineClipCollectionViewController viewDidLoad]
  -[MiroTimelineClipCollectionViewController collectionView:numberOfItemsInSection:]
  -[MiroTimelineClipCollectionViewController collectionView:cellForItemAtIndexPath:]
  -[MiroTimelineClipCollectionViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[MiroTimelineClipCollectionViewController viewDidLayoutSubviews]
  -[MiroTimelineClipCollectionViewController collectionView:canMoveItemAtIndexPath:]
  -[MiroTimelineClipCollectionViewController collectionView:moveItemAtIndexPath:toIndexPath:]
  -[MiroTimelineClipCollectionViewController collectionView:shouldSelectItemAtIndexPath:]
  -[MiroTimelineClipCollectionViewController collectionView:didSelectItemAtIndexPath:]
  -[MiroTimelineClipCollectionViewController collectionView:layout:sizeForItemAtIndexPath:]
  -[MiroTimelineClipCollectionViewController collectionView:layout:insetForSectionAtIndex:]
  -[MiroTimelineClipCollectionViewController initialIndexPath]
  -[MiroTimelineClipCollectionViewController collectionView:layout:didSnapToItemAtIndexPath:]
  -[MiroTimelineClipCollectionViewController miroCollectionView:willBeginInteractiveMovementForItemAtIndexPath:]
  -[MiroTimelineClipCollectionViewController miroCollectionViewDidEndInteractiveMovement:]
  -[MiroTimelineClipCollectionViewController miroCollectionViewDidCancelInteractiveMovement:]
  -[MiroTimelineClipCollectionViewController setInitialIndexPath:]
  -[MiroTimelineClipCollectionViewController snapToIndexPath:animated:]
  -[MiroTimelineClipCollectionViewController cellForClipProvider:]
  -[MiroTimelineClipCollectionViewController _snapToIndexPath:animated:]
  -[MiroTimelineClipCollectionViewController highlightCenterThumbnail]
  -[MiroTimelineClipCollectionViewController _updateHighlightForVisibleCellsAnimated:]
  -[MiroTimelineClipCollectionViewController _cellSizeForClipAtIndex:]
  -[MiroTimelineClipCollectionViewController _updateHighlightForCell:atIndexPath:]
  -[MiroTimelineClipCollectionViewController collectionViewContentInsets]
  -[MiroTimelineClipCollectionViewController setCollectionViewDraggingIndexPath:]
  -[MiroTimelineClipCollectionViewController collectionViewDraggingIndexPath]
  -[MiroTimelineClipCollectionViewController _proximityToCenterForCellAtIndexPath:]
  -[MiroTimelineClipCollectionViewController setHighlightCenterThumbnail:]


PMEditorTitleTableViewCell : UITableViewCell /System/Library/Frameworks/CoreMedia.framework/CoreMedia
 @property  UITextField *textField
 @property  NSLayoutConstraint *textFieldLeadingConstraint

  // instance methods
  -[PMEditorTitleTableViewCell .cxx_destruct]
  -[PMEditorTitleTableViewCell textField]
  -[PMEditorTitleTableViewCell setTextField:]
  -[PMEditorTitleTableViewCell textFieldLeadingConstraint]
  -[PMEditorTitleTableViewCell setTextFieldLeadingConstraint:]


PMCollectionViewGridLayout : UICollectionViewFlowLayout /System/Library/Frameworks/CoreMedia.framework/CoreMedia
  // instance methods
  -[PMCollectionViewGridLayout prepareLayout]
  -[PMCollectionViewGridLayout shouldInvalidateLayoutForBoundsChange:]
  -[PMCollectionViewGridLayout updateItemSize]


PMMovieProvider : NSObject /usr/lib/libc++.1.dylib
 @property  VEKProduction *lastEditingProduction
 @property  unsigned long currentEditID
 @property  BOOL isEditing
 @property  VEKProduction *production
 @property  <PMMovieProviderDelegate> *providerDelegate
 @property  VEKResult *lastResult
 @property  PMMovieProviderAnalyticsEvent *analyticsEvent

  // class methods
  +[PMMovieProvider movieClipCountWithProduction:result:]

  // instance methods
  -[PMMovieProvider .cxx_destruct]
  -[PMMovieProvider analyticsEvent]
  -[PMMovieProvider isEditing]
  -[PMMovieProvider providerDelegate]
  -[PMMovieProvider setProviderDelegate:]
  -[PMMovieProvider setIsEditing:]
  -[PMMovieProvider production]
  -[PMMovieProvider setProduction:]
  -[PMMovieProvider lastResult]
  -[PMMovieProvider setLastResult:]
  -[PMMovieProvider initWithProduction:]
  -[PMMovieProvider setAnalyticsEvent:]
  -[PMMovieProvider refreshPlayerItem]
  -[PMMovieProvider cancelEdit]
  -[PMMovieProvider setLastEditingProduction:]
  -[PMMovieProvider currentEditID]
  -[PMMovieProvider setCurrentEditID:]
  -[PMMovieProvider lastEditingProduction]


MiroTwoLabelButton : UIButton /System/Library/Frameworks/CoreMedia.framework/CoreMedia
 @property  BOOL titleIsDirty
 @property  NSParagraphStyle *defaultParagraphStyle
 @property  NSString *primaryLabelText
 @property  NSString *secondaryLabelText
 @property  UIFont *primaryLabelFont
 @property  UIFont *secondaryLabelFont

  // instance methods
  -[MiroTwoLabelButton initWithCoder:]
  -[MiroTwoLabelButton .cxx_destruct]
  -[MiroTwoLabelButton defaultParagraphStyle]
  -[MiroTwoLabelButton _commonInit]
  -[MiroTwoLabelButton initWithFrame:]
  -[MiroTwoLabelButton setTitle:forState:]
  -[MiroTwoLabelButton layoutSubviews]
  -[MiroTwoLabelButton setAttributedTitle:forState:]
  -[MiroTwoLabelButton awakeFromNib]
  -[MiroTwoLabelButton beginTrackingWithTouch:withEvent:]
  -[MiroTwoLabelButton cancelTrackingWithEvent:]
  -[MiroTwoLabelButton continueTrackingWithTouch:withEvent:]
  -[MiroTwoLabelButton endTrackingWithTouch:withEvent:]
  -[MiroTwoLabelButton setPrimaryLabelText:]
  -[MiroTwoLabelButton primaryLabelText]
  -[MiroTwoLabelButton secondaryLabelText]
  -[MiroTwoLabelButton setSecondaryLabelText:]
  -[MiroTwoLabelButton primaryLabelFont]
  -[MiroTwoLabelButton setDefaultParagraphStyle:]
  -[MiroTwoLabelButton secondaryLabelFont]
  -[MiroTwoLabelButton setTitleIsDirty:]
  -[MiroTwoLabelButton _syncButtonState]
  -[MiroTwoLabelButton titleIsDirty]
  -[MiroTwoLabelButton _updateAttributedTitle]
  -[MiroTwoLabelButton setPrimaryLabelFont:]
  -[MiroTwoLabelButton setSecondaryLabelFont:]


PMTitleEditorProvider : NSObject /usr/lib/libc++.1.dylib <PMEditProviderProtocol>
 @property  NSString *title
 @property  NSString *subTitle
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  VEKProduction *production
 @property  <PMEditProviderDelegate> *delegate

  // instance methods
  -[PMTitleEditorProvider delegate]
  -[PMTitleEditorProvider setDelegate:]
  -[PMTitleEditorProvider .cxx_destruct]
  -[PMTitleEditorProvider title]
  -[PMTitleEditorProvider subTitle]
  -[PMTitleEditorProvider updateTitle:]
  -[PMTitleEditorProvider production]
  -[PMTitleEditorProvider setProduction:]
  -[PMTitleEditorProvider initWithProduction:]
  -[PMTitleEditorProvider updateSubtitle:]
  -[PMTitleEditorProvider defaultMemoriesTitleHelper]


PMAnalyticsHelper : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[PMAnalyticsHelper durationStringWithVEKDuration:]


MiroExportController : ReaderWriterExportController
 @property  PMTitleSubtitleView *titleView
 @property  NSDictionary *titleInformation
 @property  UIImage *posterImage
 @property  @? completionBlock
 @property  @? progressHandler

  // instance methods
  -[MiroExportController .cxx_destruct]
  -[MiroExportController completionBlock]
  -[MiroExportController setCompletionBlock:]
  -[MiroExportController progressHandler]
  -[MiroExportController setProgressHandler:]
  -[MiroExportController titleView]
  -[MiroExportController setTitleView:]
  -[MiroExportController posterImage]
  -[MiroExportController thumbnailImage]
  -[MiroExportController setPosterImage:]
  -[MiroExportController titleInformation]
  -[MiroExportController titleLayerForVideoComposition:]
  -[MiroExportController createMovieController]
  -[MiroExportController _setupMovieController]
  -[MiroExportController _compositionForExport]
  -[MiroExportController setTitleInformation:]


PMClipCollectionProvider : NSObject /usr/lib/libc++.1.dylib <PMEditProviderProtocol, PMRelatedClipsDelegate>
 @property  VEKProduction *production
 @property  NSMutableArray *assetClipProviders
 @property  <VEKProjectProtocol> *project
 @property  VEKResult *result
 @property  double currentDuration
 @property  NSMutableArray *assetClipProviders
 @property  NSMutableSet *projectAssets
 @property  BOOL shouldCancel
 @property  <PMClipCollectionProviderDelegate> *clipCollectionDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  VEKProduction *production
 @property  <PMEditProviderDelegate> *delegate

  // instance methods
  -[PMClipCollectionProvider copyWithZone:]
  -[PMClipCollectionProvider delegate]
  -[PMClipCollectionProvider setDelegate:]
  -[PMClipCollectionProvider .cxx_destruct]
  -[PMClipCollectionProvider result]
  -[PMClipCollectionProvider setResult:]
  -[PMClipCollectionProvider numberOfItems]
  -[PMClipCollectionProvider updateWithResult:]
  -[PMClipCollectionProvider shouldCancel]
  -[PMClipCollectionProvider setShouldCancel:]
  -[PMClipCollectionProvider production]
  -[PMClipCollectionProvider setProduction:]
  -[PMClipCollectionProvider currentDuration]
  -[PMClipCollectionProvider setCurrentDuration:]
  -[PMClipCollectionProvider assetHasUserModifiedAudioLevel:]
  -[PMClipCollectionProvider assetIsPartOfMultiUp:]
  -[PMClipCollectionProvider triggerEdit]
  -[PMClipCollectionProvider clipIsPartOfSplit:]
  -[PMClipCollectionProvider clipIsPartOfMultiUp:]
  -[PMClipCollectionProvider project]
  -[PMClipCollectionProvider initWithProduction:]
  -[PMClipCollectionProvider clipProvidersForAsset:]
  -[PMClipCollectionProvider setProject:]
  -[PMClipCollectionProvider suggestionsForAsset:]
  -[PMClipCollectionProvider initWithResult:production:]
  -[PMClipCollectionProvider clipProviderIndexForSequenceTime:]
  -[PMClipCollectionProvider setClipCollectionDelegate:]
  -[PMClipCollectionProvider clipProviderAtIndex:]
  -[PMClipCollectionProvider suggestedAssets]
  -[PMClipCollectionProvider currentProductionAssetIDs]
  -[PMClipCollectionProvider removeClipAtIndex:]
  -[PMClipCollectionProvider indexesForClipProvidersOfAssetID:]
  -[PMClipCollectionProvider currentProductionAssets]
  -[PMClipCollectionProvider updateClipProvidersForAssets:progressHandler:completionHandler:]
  -[PMClipCollectionProvider setProjectAssets:]
  -[PMClipCollectionProvider clipCollectionDelegate]
  -[PMClipCollectionProvider projectAssets]
  -[PMClipCollectionProvider assetClipProviders]
  -[PMClipCollectionProvider setAssetClipProviders:]
  -[PMClipCollectionProvider updateWithResult:error:]
  -[PMClipCollectionProvider allAssetsIncludingAllMomentsAssets:]
  -[PMClipCollectionProvider removeSuggestionsForAsset:]
  -[PMClipCollectionProvider updateSuggestionsForAddedAsset:]
  -[PMClipCollectionProvider clipSuggestionsForAsset:]
  -[PMClipCollectionProvider assetSetFromProject:]
  -[PMClipCollectionProvider validateRangeSuggestionMatching]
  -[PMClipCollectionProvider _otherSplitClipsForClip:]


PMEditorMenuViewController : PMEditorBasePlayerViewController <UITableViewDelegate, UITableViewDataSource>
 @property  VEKProduction *production
 @property  PMTitleEditorProvider *titleProvider
 @property  <PMEditorMenuViewControllerDelegate> *menuDelegate
 @property  BOOL showingActivityIndicatorForContentEditor
 @property  UITableView *tableView
 @property  NSIndexPath *selectedIndexPath
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PMEditorMenuViewController dealloc]
  -[PMEditorMenuViewController initWithCoder:]
  -[PMEditorMenuViewController .cxx_destruct]
  -[PMEditorMenuViewController tableView]
  -[PMEditorMenuViewController viewWillAppear:]
  -[PMEditorMenuViewController viewDidLoad]
  -[PMEditorMenuViewController viewWillLayoutSubviews]
  -[PMEditorMenuViewController tableView:numberOfRowsInSection:]
  -[PMEditorMenuViewController tableView:cellForRowAtIndexPath:]
  -[PMEditorMenuViewController numberOfSectionsInTableView:]
  -[PMEditorMenuViewController tableView:titleForHeaderInSection:]
  -[PMEditorMenuViewController setTableView:]
  -[PMEditorMenuViewController tableView:heightForRowAtIndexPath:]
  -[PMEditorMenuViewController tableView:willSelectRowAtIndexPath:]
  -[PMEditorMenuViewController tableView:didSelectRowAtIndexPath:]
  -[PMEditorMenuViewController setSelectedIndexPath:]
  -[PMEditorMenuViewController selectedIndexPath]
  -[PMEditorMenuViewController _updateFonts]
  -[PMEditorMenuViewController titleProvider]
  -[PMEditorMenuViewController setTitleProvider:]
  -[PMEditorMenuViewController production]
  -[PMEditorMenuViewController setProduction:]
  -[PMEditorMenuViewController popFromNavigationController]
  -[PMEditorMenuViewController setMenuDelegate:]
  -[PMEditorMenuViewController setShowingActivityIndicatorForContentEditor:]
  -[PMEditorMenuViewController menuDelegate]
  -[PMEditorMenuViewController _normalizedIndexPathForRow:inSection:]
  -[PMEditorMenuViewController _getTimeStringFromSeconds:]
  -[PMEditorMenuViewController showingActivityIndicatorForContentEditor]


VEKSuggestion : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  PHAsset *asset
 @property  long long usage
 @property  long long volume
 @property  long long specialTreatment
 @property  double reorderTimeOffset

  // instance methods
  -[VEKSuggestion .cxx_destruct]
  -[VEKSuggestion setUsage:]
  -[VEKSuggestion usage]
  -[VEKSuggestion asset]
  -[VEKSuggestion initWithAsset:]
  -[VEKSuggestion volume]
  -[VEKSuggestion setVolume:]
  -[VEKSuggestion specialTreatment]
  -[VEKSuggestion setSpecialTreatment:]
  -[VEKSuggestion reorderTimeOffset]
  -[VEKSuggestion setReorderTimeOffset:]


VEKRangeSuggestion : VEKSuggestion
 @property  {?={?=qiIq}{?=qiIq}} range

  // instance methods
  -[VEKRangeSuggestion range]
  -[VEKRangeSuggestion setRange:]


VEKClipSuggestion : VEKRangeSuggestion
 @property  <VEKClipProtocol> *clip

  // instance methods
  -[VEKClipSuggestion .cxx_destruct]
  -[VEKClipSuggestion clip]
  -[VEKClipSuggestion setClip:]
  -[VEKClipSuggestion initWithClipToEmulate:]


MiroAnalysisHelpers : VEiOSSharedObject
  // class methods
  +[MiroAnalysisHelpers timeInFramesWithDictionaryRepresentation:naturalFrameRate:]
  +[MiroAnalysisHelpers buildTransientAggregateRangeTreeWithPersistentRanges:masterSceneType:]

  // instance methods
  -[MiroAnalysisHelpers init]
  -[MiroAnalysisHelpers cancelAllAnalysisRequests]
  -[MiroAnalysisHelpers dispatchFullOutOfProcessAnalysisForAssets:]
  -[MiroAnalysisHelpers analyzeUsingClientSideAnalyzerWithAsset:performedAnalysisTypes:ranges:options:relatedSortedAssets:cancelGroup:progressHandler:completionHandler:]


MiroBeatMetadata : NSObject /usr/lib/libc++.1.dylib
 @property  FMTimedMetadataItem *metadataItem
 @property  long long priority

  // class methods
  +[MiroBeatMetadata beatWithMetadataItem:andPriority:]

  // instance methods
  -[MiroBeatMetadata .cxx_destruct]
  -[MiroBeatMetadata priority]
  -[MiroBeatMetadata setPriority:]
  -[MiroBeatMetadata metadataItem]
  -[MiroBeatMetadata setMetadataItem:]
  -[MiroBeatMetadata initWithMetadataItem:andPriority:]


MiroAutoEditAudioLayoutController : NSObject /usr/lib/libc++.1.dylib
 @property  {?=qiIq} lastBeatTime
 @property  Project *project
 @property  MiroMemory *activeMemory
 @property  NSArray *layoutClips
 @property  MiroAutoEditLogger *logger

  // instance methods
  -[MiroAutoEditAudioLayoutController .cxx_destruct]
  -[MiroAutoEditAudioLayoutController logger]
  -[MiroAutoEditAudioLayoutController setLogger:]
  -[MiroAutoEditAudioLayoutController project]
  -[MiroAutoEditAudioLayoutController setProject:]
  -[MiroAutoEditAudioLayoutController setActiveMemory:]
  -[MiroAutoEditAudioLayoutController setLayoutClips:]
  -[MiroAutoEditAudioLayoutController setLastBeatTime:]
  -[MiroAutoEditAudioLayoutController applyJAndLCuts]
  -[MiroAutoEditAudioLayoutController applyAudioFadeHandles]
  -[MiroAutoEditAudioLayoutController rollCutsToBeats]
  -[MiroAutoEditAudioLayoutController applyClipVolumes]
  -[MiroAutoEditAudioLayoutController applyBackgroundAudioVolume]
  -[MiroAutoEditAudioLayoutController _applyFrozenVolumeAndReturnRemainingItems]
  -[MiroAutoEditAudioLayoutController _applyComputedVolumesForClips:]
  -[MiroAutoEditAudioLayoutController _enumerateClipsWithAudio:usingBlock:]
  -[MiroAutoEditAudioLayoutController analyzeLoudness:]
  -[MiroAutoEditAudioLayoutController _hasVoiceAndFacesForClip:gatherLoudness:peak:voiceRanges:]
  -[MiroAutoEditAudioLayoutController _computeMuteStateForClip:hasAnalysis:hasVoice:hasVoiceAndFaces:]
  -[MiroAutoEditAudioLayoutController _computeVolumesForClip:loudnessValues:peakValues:returnNormalVolume:returnDimmedVolume:]
  -[MiroAutoEditAudioLayoutController layoutClips]
  -[MiroAutoEditAudioLayoutController _clipLimitsRoll:]
  -[MiroAutoEditAudioLayoutController lastBeatTime]
  -[MiroAutoEditAudioLayoutController _onsetDrivenInterestingBeatsForTime:metadataDict:]
  -[MiroAutoEditAudioLayoutController _segmentAndBeatsBasedInterestingBeatsForTime:metadataDict:]
  -[MiroAutoEditAudioLayoutController _rollCutsToBeatsWithGranularity:excludingTimes:]
  -[MiroAutoEditAudioLayoutController _interestingBeatTimedMetaItemsForFlexAudioClip:forFrameTime:withGranularity:]
  -[MiroAutoEditAudioLayoutController _attemptToRollEditFromTime:toTime:firstClip:secondClip:failureReasons:allowSlack:]
  -[MiroAutoEditAudioLayoutController indexOfClipInLayoutClips:]
  -[MiroAutoEditAudioLayoutController applyAudioPolishToProject:activeMemory:layoutClips:]
  -[MiroAutoEditAudioLayoutController _timedMetadataItemAtTime:forFlexAudioClip:withIdentifier:]
  -[MiroAutoEditAudioLayoutController activeMemory]


MiroBurstHelpers : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[MiroBurstHelpers isRealBurstClip:]
  +[MiroBurstHelpers isDateBasedBurstClip:memory:]
  +[MiroBurstHelpers photoAssetsForRealBurstAsset:]
  +[MiroBurstHelpers photoAssetsForDateBasedBurstAsset:memory:]
  +[MiroBurstHelpers isBurstClip:memory:]
  +[MiroBurstHelpers photoAssetsForBurstAsset:memory:]
  +[MiroBurstHelpers thinOutAssets:byKeepingOnlyOneAssetFromEachBurst:]


MiroAutoEdit_TrimController : NSObject /usr/lib/libc++.1.dylib
 @property  <MiroAutoEditDelegate> *delegate
 @property  Project *project
 @property  MiroMemory *memory
 @property  MiroBlueprint *blueprint
 @property  int duration
 @property  int lastClipInPoint
 @property  int lastClipOutPoint
 @property  MiroAutoEditLogger *logger
 @property  BOOL useNonSpecialDurations
 @property  BOOL allowMoreThanMaxVideo

  // class methods
  +[MiroAutoEdit_TrimController rangeModelsBySplittingRangeModels:outsideRange:]

  // instance methods
  -[MiroAutoEdit_TrimController delegate]
  -[MiroAutoEdit_TrimController setDelegate:]
  -[MiroAutoEdit_TrimController .cxx_destruct]
  -[MiroAutoEdit_TrimController duration]
  -[MiroAutoEdit_TrimController memory]
  -[MiroAutoEdit_TrimController logger]
  -[MiroAutoEdit_TrimController initWithDelegate:]
  -[MiroAutoEdit_TrimController setDuration:]
  -[MiroAutoEdit_TrimController blueprint]
  -[MiroAutoEdit_TrimController project]
  -[MiroAutoEdit_TrimController setupSongDuration]
  -[MiroAutoEdit_TrimController clipIsTitleCard:]
  -[MiroAutoEdit_TrimController setDuration:andStartTimeForClip:]
  -[MiroAutoEdit_TrimController durationOfUserTrimForClip:]
  -[MiroAutoEdit_TrimController lastClipInPoint]
  -[MiroAutoEdit_TrimController _fitToDuration]
  -[MiroAutoEdit_TrimController _saveFreezeBits]
  -[MiroAutoEdit_TrimController _clipClip:]
  -[MiroAutoEdit_TrimController _rangesForClipIncorporatingUserTrim:]
  -[MiroAutoEdit_TrimController useNonSpecialDurations]
  -[MiroAutoEdit_TrimController minimumBlueprintDurationForClip:]
  -[MiroAutoEdit_TrimController maximumBlueprintDurationForClip:]
  -[MiroAutoEdit_TrimController allowMoreThanMaxVideo]
  -[MiroAutoEdit_TrimController shrinkAndStretchClips:]
  -[MiroAutoEdit_TrimController setAllowMoreThanMaxVideo:]
  -[MiroAutoEdit_TrimController setLastClipInPoint:]
  -[MiroAutoEdit_TrimController setLastClipOutPoint:]
  -[MiroAutoEdit_TrimController lastClipOutPoint]
  -[MiroAutoEdit_TrimController calcLastClipInPointAndOutPoint]
  -[MiroAutoEdit_TrimController setUseNonSpecialDurations:]
  -[MiroAutoEdit_TrimController layoutProject]


VEKResult : NSObject /usr/lib/libc++.1.dylib
 @property  NSDictionary *results

  // instance methods
  -[VEKResult .cxx_destruct]
  -[VEKResult results]
  -[VEKResult setResults:]
  -[VEKResult initWithResults:]
  -[VEKResult appendResult:]


VEKProgress : NSObject /usr/lib/libc++.1.dylib
 @property  float percent
 @property  NSString *taskDescription

  // instance methods
  -[VEKProgress .cxx_destruct]
  -[VEKProgress setTaskDescription:]
  -[VEKProgress taskDescription]
  -[VEKProgress setPercent:]
  -[VEKProgress percent]


VEKPipeline : NSObject /usr/lib/libc++.1.dylib
 @property  @? progressBlock
 @property  NSArray *stages
 @property  VEKResult *initialResult

  // instance methods
  -[VEKPipeline .cxx_destruct]
  -[VEKPipeline progressBlock]
  -[VEKPipeline setProgressBlock:]
  -[VEKPipeline runPipeline]
  -[VEKPipeline stages]
  -[VEKPipeline initialResult]
  -[VEKPipeline runPipelineWithOptions:progressHandler:completionHandler:]
  -[VEKPipeline setStages:]
  -[VEKPipeline setInitialResult:]
  -[VEKPipeline initWithStages:]


VEKPipelineStage : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *inputTypes
 @property  NSArray *outputType
 @property  VEKProgress *progress
 @property  BOOL isCancelled

  // instance methods
  -[VEKPipelineStage .cxx_destruct]
  -[VEKPipelineStage isCancelled]
  -[VEKPipelineStage progress]
  -[VEKPipelineStage outputType]
  -[VEKPipelineStage setIsCancelled:]
  -[VEKPipelineStage outputTypes]
  -[VEKPipelineStage inputTypes]
  -[VEKPipelineStage runStageWithInput:]


MiroDetectedFace : DetectedFace
  // instance methods
  -[MiroDetectedFace initWithFaceRangeModel:imageSize:]


MiroAnalysisAudioHelpers : NSObject /usr/lib/libc++.1.dylib
 @property  long long projectNaturalFrameRate
 @property  NSArray *timeRanges

  // instance methods
  -[MiroAnalysisAudioHelpers init]
  -[MiroAnalysisAudioHelpers dealloc]
  -[MiroAnalysisAudioHelpers .cxx_destruct]
  -[MiroAnalysisAudioHelpers .cxx_construct]
  -[MiroAnalysisAudioHelpers timeRanges]
  -[MiroAnalysisAudioHelpers setTimeRanges:]
  -[MiroAnalysisAudioHelpers setProjectNaturalFrameRate:]
  -[MiroAnalysisAudioHelpers projectNaturalFrameRate]
  -[MiroAnalysisAudioHelpers _processSamplesForPeaksAndLoudness:numberOfFrames:sampleRate:]
  -[MiroAnalysisAudioHelpers _outputVoiceRangeWithDetectionTime:]
  -[MiroAnalysisAudioHelpers _setPropertiesWithNumberOfSamplesPerBuffer:]
  -[MiroAnalysisAudioHelpers _processFloatBufferWithNumberOfFrames:options:voiceRange:]
  -[MiroAnalysisAudioHelpers _outputLoudnessRangeWithDetectionTime:]
  -[MiroAnalysisAudioHelpers _setupAndStartReadingTrack:usingTimeRange:outputSettings:assetReader:trackOutput:error:]
  -[MiroAnalysisAudioHelpers _startProcessingWithStartTime:audioStreamDescription:numberOfSamplesPerBuffer:]
  -[MiroAnalysisAudioHelpers _startVoiceDetection]
  -[MiroAnalysisAudioHelpers _startLoudnessDetection]
  -[MiroAnalysisAudioHelpers _processAudioSampleBuffer:options:voiceRange:]
  -[MiroAnalysisAudioHelpers _stopDetectingVoiceWithEndTime:lastVoiceRanges:]
  -[MiroAnalysisAudioHelpers _stopDetectingLoudnessWithTimeRange:loudnessRanges:]
  -[MiroAnalysisAudioHelpers _stopProcessing]
  -[MiroAnalysisAudioHelpers processAVAsset:options:progressHandler:completionHandler:]


MiroResourceUsageMonitor : NSObject /usr/lib/libc++.1.dylib
 @property  {rusage={timeval=qi}{timeval=qi}qqqqqqqqqqqqqq} _rusageStart
 @property  double _timeStart
 @property  long long _initialResidentMemoryKBytes
 @property  long long _initialPeakResidentMemoryKBytes
 @property  long long _maxResidentMemoryKBytes
 @property  NSObject<OS_dispatch_source> *_pollingTimer
 @property  NSObject<OS_dispatch_queue> *_isolationQueue
 @property  double processorUsage
 @property  long long memoryUsage

  // class methods
  +[MiroResourceUsageMonitor _getResidentMemoryKBytes:]
  +[MiroResourceUsageMonitor sharedResourceUsageMonitor]

  // instance methods
  -[MiroResourceUsageMonitor init]
  -[MiroResourceUsageMonitor dealloc]
  -[MiroResourceUsageMonitor .cxx_destruct]
  -[MiroResourceUsageMonitor stop]
  -[MiroResourceUsageMonitor start]
  -[MiroResourceUsageMonitor isRunning]
  -[MiroResourceUsageMonitor _isolationQueue]
  -[MiroResourceUsageMonitor processorUsage]
  -[MiroResourceUsageMonitor memoryUsage]
  -[MiroResourceUsageMonitor _pollingTimer]
  -[MiroResourceUsageMonitor _maxResidentMemoryKBytes]
  -[MiroResourceUsageMonitor set_maxResidentMemoryKBytes:]
  -[MiroResourceUsageMonitor _inqueue_start]
  -[MiroResourceUsageMonitor _inqueue_stop]
  -[MiroResourceUsageMonitor _rusageStart]
  -[MiroResourceUsageMonitor set_rusageStart:]
  -[MiroResourceUsageMonitor _timeStart]
  -[MiroResourceUsageMonitor set_timeStart:]
  -[MiroResourceUsageMonitor _initialResidentMemoryKBytes]
  -[MiroResourceUsageMonitor set_initialResidentMemoryKBytes:]
  -[MiroResourceUsageMonitor _initialPeakResidentMemoryKBytes]
  -[MiroResourceUsageMonitor set_initialPeakResidentMemoryKBytes:]
  -[MiroResourceUsageMonitor set_pollingTimer:]
  -[MiroResourceUsageMonitor set_isolationQueue:]


VEKBlueprint : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  NSString *fontName
 @property  long long mood
 @property  VEKSong *song
 @property  long long titleStyle
 @property  long long editStyle
 @property  MiroBlueprint *data

  // class methods
  +[VEKBlueprint initialize]
  +[VEKBlueprint supportsSecureCoding]
  +[VEKBlueprint moodIDForVEKMood:]

  // instance methods
  -[VEKBlueprint isEqual:]
  -[VEKBlueprint copyWithZone:]
  -[VEKBlueprint encodeWithCoder:]
  -[VEKBlueprint initWithCoder:]
  -[VEKBlueprint initWithData:]
  -[VEKBlueprint .cxx_destruct]
  -[VEKBlueprint data]
  -[VEKBlueprint setData:]
  -[VEKBlueprint fontName]
  -[VEKBlueprint mood]
  -[VEKBlueprint song]
  -[VEKBlueprint setSong:]
  -[VEKBlueprint titleStyle]
  -[VEKBlueprint setTitleStyle:]
  -[VEKBlueprint moodIDmap]
  -[VEKBlueprint initWithMood:]
  -[VEKBlueprint editStyle]
  -[VEKBlueprint idealDurationForAsset:]
  -[VEKBlueprint moodForMoodID:]
  -[VEKBlueprint moodIDForMood:]
  -[VEKBlueprint setEditStyle:]


MiroDurationCalculations : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[MiroDurationCalculations durationForItemCount:inPickList:withBlueprint:respectTrim:localOnly:]
  +[MiroDurationCalculations rawDurationOfItems:inRange:]
  +[MiroDurationCalculations itemCountInPickList:forDuration:]
  +[MiroDurationCalculations biasedDurationOfItems:inRange:]
  +[MiroDurationCalculations _itemsForDuration:inPickList:blueprint:localOnly:respectTrim:]
  +[MiroDurationCalculations maxPleasantDurationOfItems:inRange:]
  +[MiroDurationCalculations durationRangeForFrozenPickList:]
  +[MiroDurationCalculations doAllTheThingsForPickList:]
  +[MiroDurationCalculations maxDurationForPickList:withBlueprint:]
  +[MiroDurationCalculations itemCountInPickList:forDuration:withBlueprint:respectTrim:outputResidual:]


OrientationInfo : NSObject /usr/lib/libc++.1.dylib <AltAspect>
 @property  double altAspect
 @property  BOOL isRotated
 @property  unsigned int inputID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[OrientationInfo isRotated]
  -[OrientationInfo inputID]
  -[OrientationInfo setInputID:]
  -[OrientationInfo setIsRotated:]
  -[OrientationInfo altAspect]
  -[OrientationInfo setAltAspect:]


VEKPlayerItem : AVPlayerItem /System/Library/PrivateFrameworks/ProVideo.framework/ProVideo
 @property  AltClipCollection *altInfo
 @property  OrientationInfo *currentAltInfo
 @property  {CGSize=dd} targetSize
 @property  BOOL isRotated
 @property  double aspect

  // instance methods
  -[VEKPlayerItem .cxx_destruct]
  -[VEKPlayerItem isRotated]
  -[VEKPlayerItem targetSize]
  -[VEKPlayerItem setTargetSize:]
  -[VEKPlayerItem aspect]
  -[VEKPlayerItem altInfo]
  -[VEKPlayerItem currentAltInfo]
  -[VEKPlayerItem setCurrentAltInfo:]
  -[VEKPlayerItem setAltInfo:]


MiroBlueprintUtilities : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[MiroBlueprintUtilities _averageBarDurationForBlueprint:]
  +[MiroBlueprintUtilities _beatsPerBarForBlueprint:]


MiroMemory : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  NSObject<OS_dispatch_queue> *saveQueue
 @property  NSString *keyAssetID
 @property  NSArray *autoPickedAssetIDs
 @property  NSDictionary *assetsRanges
 @property  MiroPickList *pickList
 @property  long long pickedItemCount
 @property  double savedDuration
 @property  double maximumPossibleMemoryDuration
 @property  {Buckets=qqqdddi} buckets
 @property  double duration
 @property  MiroBlueprint *customBlueprint
 @property  NSMutableDictionary *blueprints
 @property  NSDictionary *loadedFreezeRanges
 @property  NSArray *featuredPeople
 @property  NSURL *localPersistentFile
 @property  long long allAssetCount
 @property  long long schema
 @property  NSDate *viewedDate
 @property  NSString *localizedTitle
 @property  NSString *localizedSubTitle
 @property  NSString *displayName
 @property  NSString *displaySubtitle
 @property  double customDuration
 @property  long long durationRange
 @property  long long maxDurationRange
 @property  PHAsset *keyAsset
 @property  PHAssetCollection *assetCollection
 @property  double minimumPossibleMemoryDuration
 @property  MiroBlueprint *blueprint
 @property  BOOL hasBuildingPosterImageBegun
 @property  BOOL storedPosterExists
 @property  NSArray *posters
 @property  BOOL isPregenerating
 @property  BOOL needsTitleCard
 @property  NSArray *requestedKeywords
 @property  NSString *requestedMoodID
 @property  NSDictionary *requestedMusicGenreDistribution
 @property  NSString *keywordedSongID
 @property  NSString *initalKeyAssetIdentifier
 @property  NSSet *manuallyAddedAssetIDs
 @property  NSSet *manuallyRemovedAssetIDs
 @property  NSDictionary *freezeRanges
 @property  NSSet *suggestions
 @property  PHFetchResult *allAssets
 @property  NSArray *moodIDs
 @property  NSString *moodID

  // class methods
  +[MiroMemory initialize]
  +[MiroMemory supportsSecureCoding]
  +[MiroMemory _displayableUuidWithUuid:]
  +[MiroMemory _saveURL]
  +[MiroMemory memoryWithPHAssetCollection:]
  +[MiroMemory memoryWithPHAssetCollection:keyAsset:]
  +[MiroMemory _miroMoodIDForPHMemoryMood:]
  +[MiroMemory _assetCollectionUniqueLocalIdentifier:]
  +[MiroMemory fileURLWithUuid:]
  +[MiroMemory grabTestKeywords]

  // instance methods
  -[MiroMemory init]
  -[MiroMemory dealloc]
  -[MiroMemory isEqual:]
  -[MiroMemory copyWithZone:]
  -[MiroMemory encodeWithCoder:]
  -[MiroMemory initWithCoder:]
  -[MiroMemory initWithData:]
  -[MiroMemory .cxx_destruct]
  -[MiroMemory dataRepresentation]
  -[MiroMemory duration]
  -[MiroMemory displayName]
  -[MiroMemory schema]
  -[MiroMemory isPending]
  -[MiroMemory setDisplayName:]
  -[MiroMemory suggestions]
  -[MiroMemory setSuggestions:]
  -[MiroMemory localizedTitle]
  -[MiroMemory setLocalizedTitle:]
  -[MiroMemory setDuration:]
  -[MiroMemory buckets]
  -[MiroMemory isPersistable]
  -[MiroMemory setSchema:]
  -[MiroMemory keyAsset]
  -[MiroMemory setKeyAsset:]
  -[MiroMemory persist]
  -[MiroMemory _saveMetadata]
  -[MiroMemory setBuckets:]
  -[MiroMemory setBlueprint:]
  -[MiroMemory durationRange]
  -[MiroMemory setDurationRange:]
  -[MiroMemory blueprint]
  -[MiroMemory blueprints]
  -[MiroMemory assetCollection]
  -[MiroMemory displaySubtitle]
  -[MiroMemory setAssetCollection:]
  -[MiroMemory allAssets]
  -[MiroMemory customDuration]
  -[MiroMemory wasManuallyAdded:]
  -[MiroMemory wasManuallyRemoved:]
  -[MiroMemory pickList]
  -[MiroMemory pickedLocallyAvailableScenes]
  -[MiroMemory clearFreezeDataForPregenerate]
  -[MiroMemory pickedAssets]
  -[MiroMemory viewedDate]
  -[MiroMemory setIsPregenerating:]
  -[MiroMemory moodID]
  -[MiroMemory setMoodID:]
  -[MiroMemory setCustomDuration:]
  -[MiroMemory maximumPossibleMemoryDuration]
  -[MiroMemory localizedSubTitle]
  -[MiroMemory setLocalizedSubTitle:]
  -[MiroMemory setViewedDate:]
  -[MiroMemory persistWithoutFreeze]
  -[MiroMemory allAssetsAsArray]
  -[MiroMemory requestedKeywords]
  -[MiroMemory unPersist]
  -[MiroMemory memoryFeaturesPeople]
  -[MiroMemory featuredPeople]
  -[MiroMemory loadedFreezeRanges]
  -[MiroMemory localPersistentFile]
  -[MiroMemory needsTitleCard]
  -[MiroMemory pickedItemCount]
  -[MiroMemory setCustomBlueprint:]
  -[MiroMemory customBlueprint]
  -[MiroMemory setBlueprints:]
  -[MiroMemory allAssetsIncludingAllMomentsAssets:]
  -[MiroMemory currentVideoFreezeRangeForAssetID:index:]
  -[MiroMemory setSaveQueue:]
  -[MiroMemory _persistentRangesChanged:]
  -[MiroMemory autoPickedAssetIDs]
  -[MiroMemory setAutoPickedAssetIDs:]
  -[MiroMemory manuallyAddedAssetIDs]
  -[MiroMemory setManuallyAddedAssetIDs:]
  -[MiroMemory manuallyRemovedAssetIDs]
  -[MiroMemory setManuallyRemovedAssetIDs:]
  -[MiroMemory keyAssetID]
  -[MiroMemory setKeyAssetID:]
  -[MiroMemory setLoadedFreezeRanges:]
  -[MiroMemory _initAllAssetMetadata]
  -[MiroMemory setRequestedKeywords:]
  -[MiroMemory setRequestedMusicGenreDistribution:]
  -[MiroMemory setRequestedMoodID:]
  -[MiroMemory requestedMusicGenreDistribution]
  -[MiroMemory requestedMoodID]
  -[MiroMemory maxDurationRange]
  -[MiroMemory freezeRangesToEncode]
  -[MiroMemory _writeMetadata:]
  -[MiroMemory initalKeyAssetIdentifier]
  -[MiroMemory setInitalKeyAssetIdentifier:]
  -[MiroMemory setPickList:]
  -[MiroMemory saveQueue]
  -[MiroMemory _deleteMetadata]
  -[MiroMemory setLocalPersistentFile:]
  -[MiroMemory setRanges:replaceType:forAssetID:]
  -[MiroMemory rangesWithType:forAssetID:]
  -[MiroMemory addSuggestionForAssetID:freezeInfo:assets:]
  -[MiroMemory savedDuration]
  -[MiroMemory isPregenerating]
  -[MiroMemory minimumPossibleMemoryDuration]
  -[MiroMemory blueprintForMoodID:]
  -[MiroMemory _newBlueprintWithMoodID:]
  -[MiroMemory adornIrisUsableToAssets:]
  -[MiroMemory setFreezeRanges:]
  -[MiroMemory setPickedItemCount:]
  -[MiroMemory _updateAddedRemovedLists]
  -[MiroMemory assetsRanges]
  -[MiroMemory freezeRanges]
  -[MiroMemory invalidateCustomDuration]
  -[MiroMemory invalidateDuration]
  -[MiroMemory rawDurationRange]
  -[MiroMemory moodIDs]
  -[MiroMemory setDisplaySubtitle:]
  -[MiroMemory manuallyModify:changeInSegmentCount:]
  -[MiroMemory manuallyAdd:remove:]
  -[MiroMemory reportCollectionTypeForAggD:]
  -[MiroMemory memoryTypeDisablesCropping]
  -[MiroMemory assetHasFaces:]
  -[MiroMemory featuredPersonsInMemoryAsFaceRangesInAsset:]
  -[MiroMemory trimRangesForAsset:]
  -[MiroMemory hasBuildingPosterImageBegun]
  -[MiroMemory setHasBuildingPosterImageBegun:]
  -[MiroMemory storedPosterExists]
  -[MiroMemory setStoredPosterExists:]
  -[MiroMemory posters]
  -[MiroMemory setPosters:]
  -[MiroMemory keywordedSongID]
  -[MiroMemory setKeywordedSongID:]
  -[MiroMemory setAssetsRanges:]
  -[MiroMemory setSavedDuration:]
  -[MiroMemory setMaximumPossibleMemoryDuration:]
  -[MiroMemory allAssetCount]
  -[MiroMemory setAllAssetCount:]
  -[MiroMemory memoryFeaturesPersonInAsset:]
  -[MiroMemory memoryClassificationKeys]
  -[MiroMemory titleCardDuration]
  -[MiroMemory memoryClassificationBased]
  -[MiroMemory setFeaturedPeople:]


MiroVPAnalysisInfo : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  unsigned long flags
 @property  long long analysisVersion
 @property  unsigned long performedAnalysisTypes
 @property  NSDate *performedAnalysisDate
 @property  double qualityScore
 @property  double junkScore
 @property  NSArray<MiroVPMetadataRangeMergeable> *ranges
 @property  id context

  // class methods
  +[MiroVPAnalysisInfo descriptionForAnalysisTypes:]
  +[MiroVPAnalysisInfo analysisInfoWithFlags:analysisVersion:performedAnalysisTypes:performedAnalysisDate:qualityScore:junkScore:ranges:]

  // instance methods
  -[MiroVPAnalysisInfo copyWithZone:]
  -[MiroVPAnalysisInfo .cxx_destruct]
  -[MiroVPAnalysisInfo flags]
  -[MiroVPAnalysisInfo context]
  -[MiroVPAnalysisInfo setContext:]
  -[MiroVPAnalysisInfo ranges]
  -[MiroVPAnalysisInfo qualityScore]
  -[MiroVPAnalysisInfo junkScore]
  -[MiroVPAnalysisInfo analysisVersion]
  -[MiroVPAnalysisInfo performedAnalysisTypes]
  -[MiroVPAnalysisInfo performedAnalysisDate]


MiroAutoEditUtilities : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[MiroAutoEditUtilities hasRangeOfType:within:ofEdge:onClip:frameRate:]
  +[MiroAutoEditUtilities hasVoiceOrFaceRangeNearEndForClip:projectFrameRate:]
  +[MiroAutoEditUtilities hasVoiceOrFaceRangeNearStartForClip:projectFrameRate:]
  +[MiroAutoEditUtilities paddedRangeModelsOfType:clip:projectFrameRate:]
  +[MiroAutoEditUtilities endTimeForClip:]
  +[MiroAutoEditUtilities hasRangeOfType:overlappingRange:clip:frameRate:]
  +[MiroAutoEditUtilities distanceToRange:fromEdge:onClip:frameRate:]
  +[MiroAutoEditUtilities correctDuration:toBlueprint:videoIdeal:videoMin:videoMax:]
  +[MiroAutoEditUtilities maxDurationRespectingTrimmingForClip:projectFrameRate:blueprint:]
  +[MiroAutoEditUtilities distanceToRangeOfType:fromEdge:onClip:frameRate:]
  +[MiroAutoEditUtilities imageForVideoPHAsset:startTime:duration:]
  +[MiroAutoEditUtilities imageForImagePHAsset:]
  +[MiroAutoEditUtilities avAssetForPHAsset:]
  +[MiroAutoEditUtilities minutesBetween:and:]
  +[MiroAutoEditUtilities rangeModel:isNearEdgeOfClip:frameRate:]
  +[MiroAutoEditUtilities correctRangeModelDuration:forClip:toBlueprint:projectFrameRate:videoIdeal:videoMin:videoMax:]
  +[MiroAutoEditUtilities titleClipDurationIsShort:forFrameRate:]


MiroMoodTitleController : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[MiroMoodTitleController blueprintSupportingTitle:subtitle:blueprint:]
  +[MiroMoodTitleController titleDefinitionWithTitle:subtitle:effectID:parametersDictionary:additionalTitleEffectSettings:moodID:]
  +[MiroMoodTitleController blueprintSupportingTitle:subtitle:fontName:]
  +[MiroMoodTitleController titleDefinitionWithTitle:subtitle:blueprint:titleAdjustedBlueprint:additionalTitleEffectSettings:asset:analysisTime:timeToGetColorAnalysis:]


MiroRandomNumberGenerator : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long index
 @property  unsigned long seed

  // class methods
  +[MiroRandomNumberGenerator mapValue:fromRangeStart:fromRangeEnd:toRangeStart:toRangeEnd:clamp:]
  +[MiroRandomNumberGenerator randomNumberGeneratorWithSeed:]

  // instance methods
  -[MiroRandomNumberGenerator index]
  -[MiroRandomNumberGenerator seed]
  -[MiroRandomNumberGenerator setIndex:]
  -[MiroRandomNumberGenerator setSeed:]
  -[MiroRandomNumberGenerator randomNumberBetweenZeroAndOne]
  -[MiroRandomNumberGenerator randomNumberWithinRangeStart:rangeEnd:]


MiroAutoEditKenBurnsController : NSObject /usr/lib/libc++.1.dylib
 @property  KenBurnsClip *kbClip
 @property  unsigned long panStyle
 @property  unsigned long kbStyle
 @property  BOOL kbReassignment
 @property  double maximumZoomValue
 @property  BOOL targetSpecificPerson
 @property  BOOL interestingRegionsEstablished
 @property  BOOL hasAreasOfInterest
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} unionOfAllInterestingRegions
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} unionOfAllFaceRegions
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} unionOfAllSaliencyRegions
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} titleSafeInterestingRegions
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} finishAreaOfInterest
 @property  NSArray *featuredPersonsDetectedFaces
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} startRect
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} endRect
 @property  double horizonNormalizedFromTop
 @property  double projectAspect
 @property  Project *project
 @property  MiroMemory *memory
 @property  double targetAspect
 @property  BOOL disableCroppingWithoutPet

  // class methods
  +[MiroAutoEditKenBurnsController titleRectForAsset:targetAspect:memory:]
  +[MiroAutoEditKenBurnsController prepareKBClip:project:]

  // instance methods
  -[MiroAutoEditKenBurnsController .cxx_destruct]
  -[MiroAutoEditKenBurnsController memory]
  -[MiroAutoEditKenBurnsController setStartRect:]
  -[MiroAutoEditKenBurnsController setEndRect:]
  -[MiroAutoEditKenBurnsController startRect]
  -[MiroAutoEditKenBurnsController endRect]
  -[MiroAutoEditKenBurnsController setMemory:]
  -[MiroAutoEditKenBurnsController project]
  -[MiroAutoEditKenBurnsController setProject:]
  -[MiroAutoEditKenBurnsController setKbClip:]
  -[MiroAutoEditKenBurnsController targetAspect]
  -[MiroAutoEditKenBurnsController setProjectAspect:]
  -[MiroAutoEditKenBurnsController canSupportKB]
  -[MiroAutoEditKenBurnsController setInterestingRegionsEstablished:]
  -[MiroAutoEditKenBurnsController setFinishAreaOfInterest:]
  -[MiroAutoEditKenBurnsController clampZoomDifference:kenBurnsPace:]
  -[MiroAutoEditKenBurnsController setMaximumZoomValue:]
  -[MiroAutoEditKenBurnsController setKbStyle:]
  -[MiroAutoEditKenBurnsController assignStartAndEndRect]
  -[MiroAutoEditKenBurnsController backgroundTreatmentRequiredForStartEndRect]
  -[MiroAutoEditKenBurnsController setPanStyle:]
  -[MiroAutoEditKenBurnsController kbClip]
  -[MiroAutoEditKenBurnsController setTargetSpecificPerson:]
  -[MiroAutoEditKenBurnsController setKbReassignment:]
  -[MiroAutoEditKenBurnsController finishConfiguringKBInfo]
  -[MiroAutoEditKenBurnsController setFeaturedPersonsDetectedFaces:]
  -[MiroAutoEditKenBurnsController disableCroppingWithoutPet]
  -[MiroAutoEditKenBurnsController setUnionOfAllFaceRegions:]
  -[MiroAutoEditKenBurnsController unionOfAllFaceRegions]
  -[MiroAutoEditKenBurnsController roundValuesInRect:]
  -[MiroAutoEditKenBurnsController setUnionOfAllInterestingRegions:]
  -[MiroAutoEditKenBurnsController setUnionOfAllSaliencyRegions:]
  -[MiroAutoEditKenBurnsController unionOfAllSaliencyRegions]
  -[MiroAutoEditKenBurnsController unionOfAllInterestingRegions]
  -[MiroAutoEditKenBurnsController canCropRectSafelyFillFrame:]
  -[MiroAutoEditKenBurnsController forceFeaturedPersonZoomCrop]
  -[MiroAutoEditKenBurnsController isTitle]
  -[MiroAutoEditKenBurnsController kbStyle]
  -[MiroAutoEditKenBurnsController prepareInterestingRegions]
  -[MiroAutoEditKenBurnsController setHasAreasOfInterest:]
  -[MiroAutoEditKenBurnsController hasAreasOfInterest]
  -[MiroAutoEditKenBurnsController noInformationCrop]
  -[MiroAutoEditKenBurnsController forceTitleZoomCrop]
  -[MiroAutoEditKenBurnsController interestingRegionsEstablished]
  -[MiroAutoEditKenBurnsController establishInterestingRegions]
  -[MiroAutoEditKenBurnsController extendAllTheThings:]
  -[MiroAutoEditKenBurnsController featuredPersonsDetectedFaces]
  -[MiroAutoEditKenBurnsController finishAreaOfInterest]
  -[MiroAutoEditKenBurnsController projectAspect]
  -[MiroAutoEditKenBurnsController titleSafeInterestingRegions]
  -[MiroAutoEditKenBurnsController extendAllTheThings:alignment:]
  -[MiroAutoEditKenBurnsController maximumZoomValue]
  -[MiroAutoEditKenBurnsController interestingRegionsAdjusted]
  -[MiroAutoEditKenBurnsController kbReassignment]
  -[MiroAutoEditKenBurnsController targetSpecificPerson]
  -[MiroAutoEditKenBurnsController _adjustZoomSpeedOfKenBurnsClip]
  -[MiroAutoEditKenBurnsController _customizePanOnlyKenBurnsClip]
  -[MiroAutoEditKenBurnsController horizonNormalizedFromTop]
  -[MiroAutoEditKenBurnsController _customizePortraitKB:normalizedVerticalCenter:]
  -[MiroAutoEditKenBurnsController _panFrameForStart:]
  -[MiroAutoEditKenBurnsController _scaleToPanOffsetFromScale:]
  -[MiroAutoEditKenBurnsController panStyle]
  -[MiroAutoEditKenBurnsController setTitleSafeInterestingRegions:]
  -[MiroAutoEditKenBurnsController clipRequiresOneUp:]
  -[MiroAutoEditKenBurnsController setTargetAspect:]
  -[MiroAutoEditKenBurnsController clipEligibleForNUpFraming:]
  -[MiroAutoEditKenBurnsController setDisableCroppingWithoutPet:]
  -[MiroAutoEditKenBurnsController applyKenBurnsForClip:kenBurnsStyle:panStyle:kenBurnsPace:maxiumumZoomValue:]


MiroMetadataRange : NSObject /usr/lib/libc++.1.dylib
 @property  NSDictionary *dictionary
 @property  unsigned long type
 @property  unsigned long flags
 @property  int startTimeInFrames
 @property  int durationInFrames
 @property  NSDictionary *analysisDict
 @property  double score
 @property  unsigned long rating
 @property  NSArray *childRanges

  // class methods
  +[MiroMetadataRange descriptionForType:]
  +[MiroMetadataRange rangeWithRange:]
  +[MiroMetadataRange descriptionForFlags:]
  +[MiroMetadataRange rangeWithType:]
  +[MiroMetadataRange miro_computeAndSetStaticScoreWithFlags:forRanges:]
  +[MiroMetadataRange rangeWithVPMetadataRange:]
  +[MiroMetadataRange miro_computeStaticScoreWithFlags:]
  +[MiroMetadataRange enumerateByAscendingTypes:handler:]
  +[MiroMetadataRange mergeRanges:withRanges:]

  // instance methods
  -[MiroMetadataRange init]
  -[MiroMetadataRange isEqual:]
  -[MiroMetadataRange copyWithZone:]
  -[MiroMetadataRange type]
  -[MiroMetadataRange setType:]
  -[MiroMetadataRange .cxx_destruct]
  -[MiroMetadataRange dictionary]
  -[MiroMetadataRange initWithDictionary:]
  -[MiroMetadataRange flags]
  -[MiroMetadataRange score]
  -[MiroMetadataRange setScore:]
  -[MiroMetadataRange _description]
  -[MiroMetadataRange setFlags:]
  -[MiroMetadataRange rating]
  -[MiroMetadataRange setRating:]
  -[MiroMetadataRange durationInFrames]
  -[MiroMetadataRange setDurationInFrames:]
  -[MiroMetadataRange startTimeInFrames]
  -[MiroMetadataRange setStartTimeInFrames:]
  -[MiroMetadataRange analysisDict]
  -[MiroMetadataRange setAnalysisDict:]
  -[MiroMetadataRange durationOfOverlapWithStart:duration:]
  -[MiroMetadataRange _treeDescriptionWithDepthLevel:]
  -[MiroMetadataRange childRanges]
  -[MiroMetadataRange setChildRanges:]
  -[MiroMetadataRange durationOfOverlapWithRange:]


MiroSuggestionMetadataRange : MiroMetadataRange
 @property  VEKSuggestion *suggestion

  // instance methods
  -[MiroSuggestionMetadataRange .cxx_destruct]
  -[MiroSuggestionMetadataRange setSuggestion:]
  -[MiroSuggestionMetadataRange suggestion]
  -[MiroSuggestionMetadataRange initWithSuggestion:]


MiroPickListOperation : NSOperation /usr/lib/libobjc.A.dylib
 @property  MiroMemory *memory

  // instance methods
  -[MiroPickListOperation .cxx_destruct]
  -[MiroPickListOperation start]
  -[MiroPickListOperation isFinished]
  -[MiroPickListOperation isExecuting]
  -[MiroPickListOperation isAsynchronous]
  -[MiroPickListOperation memory]
  -[MiroPickListOperation setMemory:]


MiroPersistOperation : NSOperation /usr/lib/libobjc.A.dylib
 @property  MiroMemory *memory

  // instance methods
  -[MiroPersistOperation .cxx_destruct]
  -[MiroPersistOperation start]
  -[MiroPersistOperation isFinished]
  -[MiroPersistOperation isExecuting]
  -[MiroPersistOperation isAsynchronous]
  -[MiroPersistOperation memory]
  -[MiroPersistOperation setMemory:]


MiroAnalysisInfo : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long flags
 @property  long long analysisVersion
 @property  unsigned long performedAnalysisTypes
 @property  NSDate *performedAnalysisDate
 @property  double qualityScore
 @property  double junkScore
 @property  NSArray<MiroMetadataRangeMergeable> *ranges

  // class methods
  +[MiroAnalysisInfo analysisInfo]
  +[MiroAnalysisInfo descriptionForAnalysisTypes:]
  +[MiroAnalysisInfo analysisInfoWithVPAnalysisInfo:]

  // instance methods
  -[MiroAnalysisInfo copyWithZone:]
  -[MiroAnalysisInfo .cxx_destruct]
  -[MiroAnalysisInfo flags]
  -[MiroAnalysisInfo setFlags:]
  -[MiroAnalysisInfo setRanges:]
  -[MiroAnalysisInfo ranges]
  -[MiroAnalysisInfo mergeWith:]
  -[MiroAnalysisInfo qualityScore]
  -[MiroAnalysisInfo setQualityScore:]
  -[MiroAnalysisInfo junkScore]
  -[MiroAnalysisInfo setJunkScore:]
  -[MiroAnalysisInfo analysisVersion]
  -[MiroAnalysisInfo performedAnalysisTypes]
  -[MiroAnalysisInfo performedAnalysisDate]
  -[MiroAnalysisInfo setAnalysisVersion:]
  -[MiroAnalysisInfo setPerformedAnalysisTypes:]
  -[MiroAnalysisInfo setPerformedAnalysisDate:]


MiroMoodManager : VEiOSSharedObject
 @property  NSDictionary *rawSongList
 @property  NSArray *songList
 @property  NSDictionary *rawTitlesList
 @property  NSArray *titlesList
 @property  NSDictionary *rawEditStylesList
 @property  NSArray *editStylesList
 @property  NSDictionary *rawTransitionDetailsList
 @property  NSArray *titleStylesForTitlePicker

  // class methods
  +[MiroMoodManager blueprintForBlueprint:replaceSongByiTunesMediaID:]
  +[MiroMoodManager blueprintWithNewSongForBlueprint:]
  +[MiroMoodManager blueprintForBlueprint:replaceSongByID:shouldLockSong:]
  +[MiroMoodManager titleListForTitlePicker]
  +[MiroMoodManager fontNameFromTitleDictionary:]
  +[MiroMoodManager titleIDsByMoodIDSorted]
  +[MiroMoodManager displayNamesByTitleID]
  +[MiroMoodManager blueprintForBlueprint:replaceTitleByID:]
  +[MiroMoodManager editStyleIDsByMoodIDSorted]
  +[MiroMoodManager displayNamesByEditStyleID]
  +[MiroMoodManager blueprintForBlueprint:replaceEditStyleByID:]
  +[MiroMoodManager transitionsByMoodIDSortedForBlueprint:]
  +[MiroMoodManager displayNamesByTransitionForBlueprint:]
  +[MiroMoodManager blueprintForBlueprint:replaceEditStyleBySingleTransition:]
  +[MiroMoodManager projectFilterIDsByMoodIDSorted]
  +[MiroMoodManager displayNamesByProjectFilterID]
  +[MiroMoodManager blueprintForBlueprint:replaceProjectFilterByID:]
  +[MiroMoodManager allMoodIDsSorted]
  +[MiroMoodManager displayNameForMoodID:]
  +[MiroMoodManager transitionEndsAtEditPoint:]
  +[MiroMoodManager displayNameForSong:]
  +[MiroMoodManager displayNameForPacingOfSongID:]
  +[MiroMoodManager displayNameForTitle:]
  +[MiroMoodManager displayNameForEditStyle:]
  +[MiroMoodManager displayNameForSingleTransition:]
  +[MiroMoodManager displayNameForFilter:]
  +[MiroMoodManager fontNameFromBlueprint:]
  +[MiroMoodManager blueprintWithMood:keywords:musicGenreDistribution:allowNonLocalSongs:]
  +[MiroMoodManager allMoodIDs]
  +[MiroMoodManager blueprintForBlueprint:replaceSongWithKeywords:musicGenreDistribution:shouldLockSong:]
  +[MiroMoodManager _randomMoodID]
  +[MiroMoodManager _projectFilterForMood:]
  +[MiroMoodManager sharedMoodManager]
  +[MiroMoodManager randomBlueprint]
  +[MiroMoodManager replaceBlueprint:usingMoodID:]
  +[MiroMoodManager separateAnimationSpecifier:fromTitleStyleID:]
  +[MiroMoodManager incrementAnimationSpecifier:forTitleStyleID:by:]
  +[MiroMoodManager titleValid:forClipLength:]
  +[MiroMoodManager _availableProjectFilterIDsSorted]
  +[MiroMoodManager _moodIDsForProjectFilterID:]
  +[MiroMoodManager _displayNameForSingleTransition:]
  +[MiroMoodManager _projectFilterNameForID:]
  +[MiroMoodManager _fetchStoreItemForMediaID:]
  +[MiroMoodManager _fetchMediaItemForMediaID:]
  +[MiroMoodManager _storeItemFromBlueprint:]
  +[MiroMoodManager _pacingDescriptionForSongDict:]
  +[MiroMoodManager _effectIsACut:]
  +[MiroMoodManager _effectIsAFade:]
  +[MiroMoodManager _effectIsASlide:organicOnly:]
  +[MiroMoodManager _projectFiltersForMood:]
  +[MiroMoodManager _projectFilterCountForMood:]
  +[MiroMoodManager backstopEditValuesForPacing:]
  +[MiroMoodManager blueprintWithNewTitleStyleForBlueprint:]
  +[MiroMoodManager blueprintForBlueprint:replaceTitleByID:shouldLockTitle:]
  +[MiroMoodManager blueprintForBlueprint:replaceTitleByID:orChangeAnimation:]
  +[MiroMoodManager blueprintForBlueprint:titleValidforClipLength:]
  +[MiroMoodManager requestStyleBForBlueprint:]
  +[MiroMoodManager incrementAnimationStyleForBlueprint:by:]
  +[MiroMoodManager multiUpTransitionsForMood:]
  +[MiroMoodManager populateBlueprint:]
  +[MiroMoodManager titleList]
  +[MiroMoodManager displayNameForArtist:]
  +[MiroMoodManager allMoodsCount]
  +[MiroMoodManager blueprintTitleSupportsSubtitle:]
  +[MiroMoodManager titleHasPortraitContentOption:]
  +[MiroMoodManager minimumAllowedDurationForTitle:]
  +[MiroMoodManager buildInTitle:forClipLength:]
  +[MiroMoodManager buildOutTitle:forClipLength:]
  +[MiroMoodManager _randomPortraitSafeTitleForBlueprint:]
  +[MiroMoodManager blueprintWithPortraitSafeTitleForBlueprint:]
  +[MiroMoodManager blueprintForBlueprint:replaceTitleSettingsEffectIDOnly:]
  +[MiroMoodManager titlePartnerTransitionsFromTransitionSet:forTitleID:forClipLength:]
  +[MiroMoodManager logMoodPermutationTallies]

  // instance methods
  -[MiroMoodManager init]
  -[MiroMoodManager dealloc]
  -[MiroMoodManager .cxx_destruct]
  -[MiroMoodManager _ingestMoodPartLists]
  -[MiroMoodManager _addObserverForAvalaibleSongChange]
  -[MiroMoodManager _removeObserverForAvalaibleSongChange]
  -[MiroMoodManager _resetSongList]
  -[MiroMoodManager setSongList:]
  -[MiroMoodManager _buildSongList]
  -[MiroMoodManager updateTitleListsToIncludeOldContent:titleSettings:moodMatchList:moodCommentList:]
  -[MiroMoodManager setRawTitlesList:]
  -[MiroMoodManager rawTitlesList]
  -[MiroMoodManager setTitlesList:]
  -[MiroMoodManager updateEditStyleListsToIncludeAdditionalStyles:moodMatchList:moodCommentList:transitionSetList:effectSetList:multiUpTransitionsStyleList:burstStyleList:]
  -[MiroMoodManager setRawEditStylesList:]
  -[MiroMoodManager rawEditStylesList]
  -[MiroMoodManager setEditStylesList:]
  -[MiroMoodManager _useSet_VtoV:PtoP:PtoV:VtoP:MultiUp:Pano:intoOneUp:outOfOneUp:]
  -[MiroMoodManager _KenBurnsORFXUseSet_UseKB:fxSway:fxFS:fxDrift:transDir:kbType:]
  -[MiroMoodManager setRawTransitionDetailsList:]
  -[MiroMoodManager _totalTransitionWeightsForEditStyleDict:]
  -[MiroMoodManager _updateTransitionDurationsInTransitionDict:withPacing:withUsage:]
  -[MiroMoodManager minDurationForTransition:withPacing:]
  -[MiroMoodManager maxDurationForTransition:withPacing:]
  -[MiroMoodManager candenceForTransition:]
  -[MiroMoodManager useWhereSetForTransition:]
  -[MiroMoodManager useKenBurnsSetForTransition:]
  -[MiroMoodManager songList]
  -[MiroMoodManager setRawSongList:]
  -[MiroMoodManager rawSongList]
  -[MiroMoodManager titlesList]
  -[MiroMoodManager editStylesList]
  -[MiroMoodManager rawTransitionDetailsList]
  -[MiroMoodManager _constructTitleList]
  -[MiroMoodManager _constructEditStyleList]
  -[MiroMoodManager _constructTransitionDetailList]
  -[MiroMoodManager _prunedMoodPartList:forMood:defaultsOnly:]
  -[MiroMoodManager _prunedTitleList:forMood:defaultsOnly:]
  -[MiroMoodManager defaultTitleFrom:]
  -[MiroMoodManager _prunedList:usingPaceKeywordsInDict:]
  -[MiroMoodManager _updateTransitionDurationsInEditSytleDict:withPacing:]
  -[MiroMoodManager _allMoodIDsForMoodPart:prioritizingMood:]
  -[MiroMoodManager _randomBlueprintForMoodID:keywords:musicGenreDistribution:andSongID:excludingPartsInMood:defaultsOnly:]
  -[MiroMoodManager _prunedTitleList:forMood:andClipLength:]
  -[MiroMoodManager _availableTransitionsWithPacing:]
  -[MiroMoodManager _availableTitleIDsSorted]
  -[MiroMoodManager _availableEditStyleIDsSorted]
  -[MiroMoodManager _availableTransitionsSortedWithPacing:]
  -[MiroMoodManager titleStylesForTitlePicker]
  -[MiroMoodManager setTitleStylesForTitlePicker:]
  -[MiroMoodManager _prunedList:usingEffectInDict:]
  -[MiroMoodManager _uniqueStringForMoodID:]
  -[MiroMoodManager fontToDefaultStyleMap]
  -[MiroMoodManager fontToStandardMoodMap]
  -[MiroMoodManager _allSongIDsSorted]
  -[MiroMoodManager _dumpPartList:forMood:]
  -[MiroMoodManager _dumpProjectFiltersForMood:]
  -[MiroMoodManager _loadMoodPartListsFromFiles]
  -[MiroMoodManager _prunedTitlesRemovingDuplicateEffects:]
  -[MiroMoodManager _availableSongIDsSorted]


MiroMetadata : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *allRanges
 @property  NSArray *loudnessRanges
 @property  NSString *identifier

  // instance methods
  -[MiroMetadata .cxx_destruct]
  -[MiroMetadata identifier]
  -[MiroMetadata setIdentifier:]
  -[MiroMetadata setRanges:]
  -[MiroMetadata addRanges:]
  -[MiroMetadata allRanges]
  -[MiroMetadata removeRangesOfType:]
  -[MiroMetadata setAllRanges:]
  -[MiroMetadata loudnessRanges]
  -[MiroMetadata getMetadata]


VEKDownloadStage : VEKPipelineStage
 @property  MiroCloudDownloader *cloudDownloader
 @property  VEKResult *stageResults
 @property  int downloadPolicy

  // instance methods
  -[VEKDownloadStage .cxx_destruct]
  -[VEKDownloadStage setDownloadPolicy:]
  -[VEKDownloadStage downloadPolicy]
  -[VEKDownloadStage outputTypes]
  -[VEKDownloadStage inputTypes]
  -[VEKDownloadStage cloudDownloader]
  -[VEKDownloadStage stageResults]
  -[VEKDownloadStage setStageResults:]
  -[VEKDownloadStage _downloadAssets:withCompletionHandler:]
  -[VEKDownloadStage setCloudDownloader:]
  -[VEKDownloadStage shouldCancelOnNonLocalAssets]
  -[VEKDownloadStage tellPipelineThatItShouldCancelPlease]
  -[VEKDownloadStage runStageWithInput:]


MiroBlueprint : NSObject /usr/lib/libc++.1.dylib <MiroBlueprintTitleStyleProtocol, MiroBlueprintMusicInfoProtocol, MiroBlueprintEditStyleProtocol, NSCopying, NSSecureCoding, MiroBlueprintProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *effectID
 @property  NSString *fontName
 @property  NSDictionary *parametersDictionary
 @property  NSString *titleAndAnimationStyleDescription
 @property  BOOL titleRequestsColorAnalysis
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long songPace
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *burstStyleNames
 @property  NSDictionary *healingEditTransitionDictionary
 @property  NSArray *transitionsAsDictionaries
 @property  NSArray *multiUpTransitionsAsDictionaries
 @property  NSArray *multiUpTransitionDictionaries
 @property  NSArray *expandedMultiUpTransitionDictionaries
 @property  double maxZoomLevel
 @property  BOOL extremeZoomAllowed
 @property  NSArray *allowedCropTreatments
 @property  BOOL defaultCameraMotionIsPan
 @property  BOOL sweepingPansAllowed
 @property  BOOL centerOnFrame
 @property  BOOL healingTransitionsAllowed
 @property  NSString *sequentialNUpEffect
 @property  double hardCutPercentage
 @property  double kenBurnsAnyStillPercentage
 @property  BOOL isMoodDictionaryPopulated
 @property  NSArray *moodIDs
 @property  NSMutableDictionary *moodDictionary
 @property  NSString *flexMusicID
 @property  NSString *songID
 @property  NSArray *requestedKeywords
 @property  NSDictionary *requestedMusicGenreDistribution
 @property  unsigned long iTunesMediaID
 @property  unsigned long iCloudMusicMediaID
 @property  unsigned long iCloudMusicAccountID
 @property  NSString *projectFilterID
 @property  BOOL songIsLocked
 @property  BOOL titleIsLocked
 @property  unsigned int randomizerSeed
 @property  NSString *moodID
 @property  NSString *titleID
 @property  NSString *editStyleID
 @property  NSDictionary *titleStyleDictionary
 @property  id debugSingleTransitionID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  double videoMinDuration
 @property  double videoIdealDuration
 @property  double videoMaxDuration
 @property  double photoMinDuration
 @property  double photoIdealDuration
 @property  double photoMaxDuration
 @property  double titleMinDuration
 @property  double titleIdealDuration
 @property  double irisMinDuration
 @property  double irisIdealDuration
 @property  double irisMaxDuration
 @property  double burstMinDuration
 @property  double burstIdealDuration
 @property  double sloMoMinDuration
 @property  double sloMoIdealDuration
 @property  double timelapseMinDuration
 @property  double timelapseIdealDuration
 @property  double halfBarDuration
 @property  unsigned long toneTreatment
 @property  <MiroBlueprintMusicInfoProtocol> *musicInfo
 @property  <MiroBlueprintTitleStyleProtocol> *titleStyle
 @property  <MiroBlueprintEditStyleProtocol> *editStyle

  // class methods
  +[MiroBlueprint supportsSecureCoding]
  +[MiroBlueprint blueprint]
  +[MiroBlueprint blueprintWithMood:]
  +[MiroBlueprint emptyBlueprint]
  +[MiroBlueprint keysAffectingAutoEdit]
  +[MiroBlueprint blueprintFromSerializedDictionaryRepresentation:]
  +[MiroBlueprint nominalBlueprint]

  // instance methods
  -[MiroBlueprint isEqual:]
  -[MiroBlueprint copyWithZone:]
  -[MiroBlueprint encodeWithCoder:]
  -[MiroBlueprint initWithCoder:]
  -[MiroBlueprint .cxx_destruct]
  -[MiroBlueprint initWithDictionary:]
  -[MiroBlueprint fontName]
  -[MiroBlueprint maxZoomLevel]
  -[MiroBlueprint titleStyle]
  -[MiroBlueprint setSongID:]
  -[MiroBlueprint songID]
  -[MiroBlueprint effectID]
  -[MiroBlueprint moodID]
  -[MiroBlueprint iTunesMediaID]
  -[MiroBlueprint songIsLocked]
  -[MiroBlueprint titleStyleDictionary]
  -[MiroBlueprint titleID]
  -[MiroBlueprint blueprintDiffersFromBlueprint:]
  -[MiroBlueprint editStyleID]
  -[MiroBlueprint debugSingleTransitionID]
  -[MiroBlueprint projectFilterID]
  -[MiroBlueprint dictionaryRepresentationForSerialization]
  -[MiroBlueprint requestedKeywords]
  -[MiroBlueprint editStyle]
  -[MiroBlueprint transitionsAsDictionaries]
  -[MiroBlueprint expandedMultiUpTransitionDictionaries]
  -[MiroBlueprint healingEditTransitionDictionary]
  -[MiroBlueprint titleAndAnimationStyleDescription]
  -[MiroBlueprint musicInfo]
  -[MiroBlueprint songPace]
  -[MiroBlueprint idealDurationForAsset:]
  -[MiroBlueprint videoMinDuration]
  -[MiroBlueprint videoIdealDuration]
  -[MiroBlueprint videoMaxDuration]
  -[MiroBlueprint panoMinDurationWithMultiplier:]
  -[MiroBlueprint panoMaxDurationWithMultiplier:]
  -[MiroBlueprint panoIdealDurationWithMultiplier:]
  -[MiroBlueprint photoIdealDuration]
  -[MiroBlueprint photoMinDuration]
  -[MiroBlueprint photoMaxDuration]
  -[MiroBlueprint titleMinDuration]
  -[MiroBlueprint setRequestedKeywords:]
  -[MiroBlueprint setRequestedMusicGenreDistribution:]
  -[MiroBlueprint requestedMusicGenreDistribution]
  -[MiroBlueprint titleIdealDuration]
  -[MiroBlueprint titleIsLocked]
  -[MiroBlueprint blueprintWithMood:]
  -[MiroBlueprint moodIDs]
  -[MiroBlueprint halfBarDuration]
  -[MiroBlueprint parametersDictionary]
  -[MiroBlueprint titleRequestsColorAnalysis]
  -[MiroBlueprint titleStyleToFontMap]
  -[MiroBlueprint setITunesMediaID:]
  -[MiroBlueprint setMoodDictionary:]
  -[MiroBlueprint setMoodIDs:]
  -[MiroBlueprint setRandomizerSeed:]
  -[MiroBlueprint setProjectFilterID:]
  -[MiroBlueprint moodDictionary]
  -[MiroBlueprint iCloudMusicMediaID]
  -[MiroBlueprint setICloudMusicMediaID:]
  -[MiroBlueprint iCloudMusicAccountID]
  -[MiroBlueprint setICloudMusicAccountID:]
  -[MiroBlueprint setSongIsLocked:]
  -[MiroBlueprint setTitleIsLocked:]
  -[MiroBlueprint flexMusicID]
  -[MiroBlueprint sloMoMinDuration]
  -[MiroBlueprint sloMoIdealDuration]
  -[MiroBlueprint timelapseMinDuration]
  -[MiroBlueprint timelapseIdealDuration]
  -[MiroBlueprint irisMinDuration]
  -[MiroBlueprint irisIdealDuration]
  -[MiroBlueprint irisMaxDuration]
  -[MiroBlueprint burstMinDuration]
  -[MiroBlueprint burstIdealDuration]
  -[MiroBlueprint durationsForAsset:]
  -[MiroBlueprint _videoMinDuration]
  -[MiroBlueprint _videoIdealDuration]
  -[MiroBlueprint _videoMaxDuration]
  -[MiroBlueprint _pacingKey]
  -[MiroBlueprint _moodPaceKey]
  -[MiroBlueprint moodPacingMultiplier]
  -[MiroBlueprint _photoMinDuration]
  -[MiroBlueprint _photoIdealDuration]
  -[MiroBlueprint _photoMaxDuration]
  -[MiroBlueprint isMoodDictionaryPopulated]
  -[MiroBlueprint minimumDurationForAsset:]
  -[MiroBlueprint durationIsNearVideoIdeal:]
  -[MiroBlueprint maximumDurationForAsset:]
  -[MiroBlueprint multiUpTransitionsAsDictionaries]
  -[MiroBlueprint centerOnFrame]
  -[MiroBlueprint kenBurnsAnyStillPercentage]
  -[MiroBlueprint allowedCropTreatments]
  -[MiroBlueprint randomizerSeed]
  -[MiroBlueprint toneTreatment]
  -[MiroBlueprint sequentialNUpEffect]
  -[MiroBlueprint defaultCameraMotionIsPan]
  -[MiroBlueprint sweepingPansAllowed]
  -[MiroBlueprint healingTransitionsAllowed]
  -[MiroBlueprint hardCutPercentage]
  -[MiroBlueprint multiUpTransitionDictionaries]
  -[MiroBlueprint burstStyleNames]
  -[MiroBlueprint extremeZoomAllowed]


MiroMetadataManager : VEiOSSharedObject
 @property  NSSet *suggestions

  // class methods
  +[MiroMetadataManager sharedManager]

  // instance methods
  -[MiroMetadataManager init]
  -[MiroMetadataManager .cxx_destruct]
  -[MiroMetadataManager clearCaches]
  -[MiroMetadataManager suggestions]
  -[MiroMetadataManager setSuggestions:]
  -[MiroMetadataManager analyzeLoudnessForRanges:ofAssets:]
  -[MiroMetadataManager metadataForAssetID:]
  -[MiroMetadataManager setMetadata:forAssetID:]
  -[MiroMetadataManager analyzeLoudnessForRanges:ofAssets:progressHandler:completionHandler:]
  -[MiroMetadataManager analyzeAssets:ranges:types:progressHandler:completionHandler:]
  -[MiroMetadataManager analyzeAsset:ranges:types:progressHandler:completionHandler:]
  -[MiroMetadataManager analyzeColorForAsset:progressHandler:completionHandler:]
  -[MiroMetadataManager clipSuggestionRangesForAsset:]
  -[MiroMetadataManager analyzeColorForAsset:]


MiroPickList : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  NSArray *sourceAssets
 @property  NSArray *sourceOrder
 @property  NSArray *pickOrder
 @property  NSArray *splitOrder
 @property  NSArray *scoreOrder
 @property  NSArray *dateOrder
 @property  NSArray *adjustedPickOrder
 @property  NSArray *frozenSourceAssets
 @property  NSArray *frozenSourceOrder
 @property  NSArray *frozenAdjustedPickOrder
 @property  BOOL calculatingPickOrder
 @property  NSSet *requiredAssetIDs
 @property  NSSet *disallowedAssetIDs
 @property  NSSet *photosCuratedAssetIDs
 @property  NSDictionary *freezeRanges
 @property  BOOL prioritizeCuratedSetAssets
 @property  NSDictionary *specialInfo
 @property  BOOL skipDistanceCalculation
 @property  BOOL penalizeNonLocalAssets
 @property  int freezeState
 @property  BOOL isCompelling
 @property  int idealCount
 @property  int countAtOrAboveBadT

  // instance methods
  -[MiroPickList copyWithZone:]
  -[MiroPickList .cxx_destruct]
  -[MiroPickList _reset]
  -[MiroPickList people]
  -[MiroPickList photoLibrary]
  -[MiroPickList initWithAssets:]
  -[MiroPickList isCompelling]
  -[MiroPickList classifications]
  -[MiroPickList splitDistancesForAssetID:]
  -[MiroPickList freezeState]
  -[MiroPickList sourceOrder]
  -[MiroPickList pickOrder]
  -[MiroPickList adjustedPickOrder]
  -[MiroPickList splitOrder]
  -[MiroPickList scoreOrder]
  -[MiroPickList dateOrder]
  -[MiroPickList idealCount]
  -[MiroPickList countAtTValue:]
  -[MiroPickList setPenalizeNonLocalAssets:]
  -[MiroPickList setFreezeRanges:]
  -[MiroPickList scenesUpToCount:localOnly:]
  -[MiroPickList freezeRanges]
  -[MiroPickList setSourceOrder:]
  -[MiroPickList setPickOrder:]
  -[MiroPickList setAdjustedPickOrder:]
  -[MiroPickList calculateFreezeFromFrozenSourceAssets]
  -[MiroPickList setFrozenSourceAssets:]
  -[MiroPickList sourceAssets]
  -[MiroPickList setFrozenSourceOrder:]
  -[MiroPickList setFrozenAdjustedPickOrder:]
  -[MiroPickList sourceOrderFromSourceAssets]
  -[MiroPickList pickOrderFromSourceOrder]
  -[MiroPickList setSplitOrder:]
  -[MiroPickList calculatingPickOrder]
  -[MiroPickList frozenAdjustedPickOrder]
  -[MiroPickList calculatePickListFromVPFrameworkResults]
  -[MiroPickList expandVideoAssetsAndConvertToScenes:]
  -[MiroPickList mediaAnalyzer]
  -[MiroPickList sourceOrderFromSourceAssetsViaNewAPI]
  -[MiroPickList sourceOrderFromSourceAssetsViaOldAPI]
  -[MiroPickList sourceOrderFromSourceAssetsViaNewAPIStoppingAtCompelling:]
  -[MiroPickList frozenSourceAssets]
  -[MiroPickList rangesForAssets:]
  -[MiroPickList skipDistanceCalculation]
  -[MiroPickList photosCuratedAssetIDs]
  -[MiroPickList penalizeNonLocalAssets]
  -[MiroPickList setCalculatingPickOrder:]
  -[MiroPickList updateAssetsWithSpecialInfo]
  -[MiroPickList highestScoringItemFromIndex:lookingRight:]
  -[MiroPickList highestScoringItemToTheRightFromIndex:]
  -[MiroPickList highestScoringItemToTheLeftFromIndex:]
  -[MiroPickList _computeAdjustedPickOrder]
  -[MiroPickList prioritizeCuratedSetAssets]
  -[MiroPickList _assignTrimRangesIntelligentlyToPickInfos:]
  -[MiroPickList _fractionOfPickInfo:coveredByRanges:]
  -[MiroPickList _pickInfosForAssetID:]
  -[MiroPickList specialInfo]
  -[MiroPickList setSourceAssets:]
  -[MiroPickList _assignTrimRangesChronologicallyToPickInfos:]
  -[MiroPickList countAtOrAboveBadT]
  -[MiroPickList setScoreOrder:]
  -[MiroPickList setDateOrder:]
  -[MiroPickList frozenSourceOrder]
  -[MiroPickList disallowedAssetIDs]
  -[MiroPickList requiredAssetIDs]
  -[MiroPickList setSkipDistanceCalculation:]
  -[MiroPickList setRequiredAssetIDs:]
  -[MiroPickList setDisallowedAssetIDs:]
  -[MiroPickList setPhotosCuratedAssetIDs:]
  -[MiroPickList setPrioritizeCuratedSetAssets:]
  -[MiroPickList setSpecialInfo:]
  -[MiroPickList calculateFullPickList]
  -[MiroPickList assetsUpToSceneCount:]


MiroCropZoomUtilities : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[MiroCropZoomUtilities rectFromDesiredPosition:outputAspectRatio:image:]
  -[MiroCropZoomUtilities adjustKBRect:toContainRect:withinImageSize:]
  -[MiroCropZoomUtilities horizontallyClampedImageRect:imageSize:]
  -[MiroCropZoomUtilities verticallyClampedImageRect:imageSize:]
  -[MiroCropZoomUtilities hasCompletedAnalysis:]
  -[MiroCropZoomUtilities produceCroppingFrameforImage:withAsset:]
  -[MiroCropZoomUtilities clampImageRect:toImageSize:]


MiroFreezeInfo : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  BOOL isFreeze
 @property  BOOL isRemoved
 @property  BOOL isAdded
 @property  NSData *dataRepresentation

  // class methods
  +[MiroFreezeInfo supportsSecureCoding]
  +[MiroFreezeInfo freezeInfoWithData:]

  // instance methods
  -[MiroFreezeInfo copyWithZone:]
  -[MiroFreezeInfo encodeWithCoder:]
  -[MiroFreezeInfo initWithCoder:]
  -[MiroFreezeInfo initWithData:]
  -[MiroFreezeInfo dataRepresentation]
  -[MiroFreezeInfo isAdded]
  -[MiroFreezeInfo isRemoved]
  -[MiroFreezeInfo isFreeze]


MiroAssetFreezeInfo : MiroFreezeInfo
  // instance methods
  -[MiroAssetFreezeInfo isFreeze]


MiroPhotoFreezeInfo : MiroFreezeInfo
 @property  BOOL added
 @property  BOOL removed
 @property  BOOL used
 @property  BOOL iris
 @property  double duration

  // instance methods
  -[MiroPhotoFreezeInfo copyWithZone:]
  -[MiroPhotoFreezeInfo initWithData:]
  -[MiroPhotoFreezeInfo dataRepresentation]
  -[MiroPhotoFreezeInfo duration]
  -[MiroPhotoFreezeInfo setDuration:]
  -[MiroPhotoFreezeInfo used]
  -[MiroPhotoFreezeInfo setUsed:]
  -[MiroPhotoFreezeInfo setAdded:]
  -[MiroPhotoFreezeInfo added]
  -[MiroPhotoFreezeInfo isAdded]
  -[MiroPhotoFreezeInfo isRemoved]
  -[MiroPhotoFreezeInfo setRemoved:]
  -[MiroPhotoFreezeInfo removed]
  -[MiroPhotoFreezeInfo isFreeze]
  -[MiroPhotoFreezeInfo iris]
  -[MiroPhotoFreezeInfo setIris:]


MiroVideoRangeFreezeInfo : MiroFreezeInfo
 @property  BOOL added
 @property  BOOL removed
 @property  BOOL used
 @property  BOOL trimmed
 @property  unsigned long mute
 @property  float gain
 @property  float normalGain
 @property  float dimmedGain
 @property  double start
 @property  double duration
 @property  BOOL userModified

  // instance methods
  -[MiroVideoRangeFreezeInfo init]
  -[MiroVideoRangeFreezeInfo copyWithZone:]
  -[MiroVideoRangeFreezeInfo initWithData:]
  -[MiroVideoRangeFreezeInfo start]
  -[MiroVideoRangeFreezeInfo dataRepresentation]
  -[MiroVideoRangeFreezeInfo duration]
  -[MiroVideoRangeFreezeInfo setDuration:]
  -[MiroVideoRangeFreezeInfo setStart:]
  -[MiroVideoRangeFreezeInfo gain]
  -[MiroVideoRangeFreezeInfo used]
  -[MiroVideoRangeFreezeInfo setUsed:]
  -[MiroVideoRangeFreezeInfo setAdded:]
  -[MiroVideoRangeFreezeInfo added]
  -[MiroVideoRangeFreezeInfo setRemoved:]
  -[MiroVideoRangeFreezeInfo removed]
  -[MiroVideoRangeFreezeInfo trimmed]
  -[MiroVideoRangeFreezeInfo mute]
  -[MiroVideoRangeFreezeInfo setMute:]
  -[MiroVideoRangeFreezeInfo userModified]
  -[MiroVideoRangeFreezeInfo setTrimmed:]
  -[MiroVideoRangeFreezeInfo normalGain]
  -[MiroVideoRangeFreezeInfo setNormalGain:]
  -[MiroVideoRangeFreezeInfo dimmedGain]
  -[MiroVideoRangeFreezeInfo setDimmedGain:]
  -[MiroVideoRangeFreezeInfo setUserModified:]


MiroVideoFreezeInfo : MiroFreezeInfo
 @property  NSArray *ranges

  // instance methods
  -[MiroVideoFreezeInfo copyWithZone:]
  -[MiroVideoFreezeInfo token]
  -[MiroVideoFreezeInfo initWithData:]
  -[MiroVideoFreezeInfo .cxx_destruct]
  -[MiroVideoFreezeInfo dataRepresentation]
  -[MiroVideoFreezeInfo isAdded]
  -[MiroVideoFreezeInfo isRemoved]
  -[MiroVideoFreezeInfo setRanges:]
  -[MiroVideoFreezeInfo ranges]
  -[MiroVideoFreezeInfo isFreeze]


MiroColorConfiguration : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[MiroColorConfiguration colorConfigurationWithTitleStyleID:snapshotAspect:randomizerSeed:]


MiroAutoEditor : NSObject /usr/lib/libc++.1.dylib
 @property  MiroMemory *memory
 @property  Project *project
 @property  long long remainingAssetsToDownload
 @property  float downloadProgress
 @property  float progress
 @property  NSOperationQueue *operationQueue
 @property  <MiroSequence> *sequence
 @property  BOOL shouldBuildMovieController
 @property  MovieController *movieController
 @property  BOOL shouldSave
 @property  int downloadPolicy
 @property  BOOL topLevelCancel
 @property  id observer
 @property  @? downloadCompleted
 @property  NSDate *prepareStartedTime
 @property  NSDate *tapStartedTime
 @property  double autoEditStartedTimePPT
 @property  double autoEditFinishedTimePPT
 @property  double uiDidLoadTimePPT
 @property  double uiDidAppearTimePPT
 @property  double playbackStartedTimePPT
 @property  VEKProgressWatcher *watcherProperty

  // class methods
  +[MiroAutoEditor sharedInstanceForPregenerate]

  // instance methods
  -[MiroAutoEditor dealloc]
  -[MiroAutoEditor copyWithZone:]
  -[MiroAutoEditor observer]
  -[MiroAutoEditor .cxx_destruct]
  -[MiroAutoEditor operationQueue]
  -[MiroAutoEditor setOperationQueue:]
  -[MiroAutoEditor observeValueForKeyPath:ofObject:change:context:]
  -[MiroAutoEditor progress]
  -[MiroAutoEditor memory]
  -[MiroAutoEditor setObserver:]
  -[MiroAutoEditor setSequence:]
  -[MiroAutoEditor sequence]
  -[MiroAutoEditor isBusy]
  -[MiroAutoEditor setProgress:]
  -[MiroAutoEditor _cancel]
  -[MiroAutoEditor updateProgress:]
  -[MiroAutoEditor setMemory:]
  -[MiroAutoEditor downloadProgress]
  -[MiroAutoEditor setDownloadProgress:]
  -[MiroAutoEditor setDownloadPolicy:]
  -[MiroAutoEditor downloadPolicy]
  -[MiroAutoEditor setShouldSave:]
  -[MiroAutoEditor shouldSave]
  -[MiroAutoEditor setMovieController:]
  -[MiroAutoEditor movieController]
  -[MiroAutoEditor updateDownloadProgress:]
  -[MiroAutoEditor project]
  -[MiroAutoEditor cancelAutoEdit]
  -[MiroAutoEditor pregenerateMemory:withCompletionHandler:]
  -[MiroAutoEditor initWithMemory:shouldBuildMovieController:]
  -[MiroAutoEditor _autoEditMemory:withCompletionHandler:]
  -[MiroAutoEditor performPersistWithPersistableThing:]
  -[MiroAutoEditor setProject:]
  -[MiroAutoEditor initForPregenerate]
  -[MiroAutoEditor shouldBuildMovieController]
  -[MiroAutoEditor _downloadSongForPregenrateWithMemory:]
  -[MiroAutoEditor _logMemoryStuff:]
  -[MiroAutoEditor fetchAndPrintAssets:andMemory:]
  -[MiroAutoEditor logFreeze:message:]
  -[MiroAutoEditor setTopLevelCancel:]
  -[MiroAutoEditor autoEditStartedTimePPT]
  -[MiroAutoEditor setAutoEditStartedTimePPT:]
  -[MiroAutoEditor autoEditFinishedTimePPT]
  -[MiroAutoEditor setAutoEditFinishedTimePPT:]
  -[MiroAutoEditor setRemainingAssetsToDownload:]
  -[MiroAutoEditor shouldNotifyProgress]
  -[MiroAutoEditor performAutoEdit]
  -[MiroAutoEditor performAutoEditWithCompletionHandler:]
  -[MiroAutoEditor isAutoEditing]
  -[MiroAutoEditor updateProject:]
  -[MiroAutoEditor updateRemainingAssetsToDownload:]
  -[MiroAutoEditor updateMovieController:]
  -[MiroAutoEditor remainingAssetsToDownload]
  -[MiroAutoEditor setShouldBuildMovieController:]
  -[MiroAutoEditor topLevelCancel]
  -[MiroAutoEditor downloadCompleted]
  -[MiroAutoEditor setDownloadCompleted:]
  -[MiroAutoEditor prepareStartedTime]
  -[MiroAutoEditor setPrepareStartedTime:]
  -[MiroAutoEditor tapStartedTime]
  -[MiroAutoEditor setTapStartedTime:]
  -[MiroAutoEditor uiDidLoadTimePPT]
  -[MiroAutoEditor setUiDidLoadTimePPT:]
  -[MiroAutoEditor uiDidAppearTimePPT]
  -[MiroAutoEditor setUiDidAppearTimePPT:]
  -[MiroAutoEditor playbackStartedTimePPT]
  -[MiroAutoEditor setPlaybackStartedTimePPT:]
  -[MiroAutoEditor watcherProperty]
  -[MiroAutoEditor setWatcherProperty:]


MiroSmartMusicUtilities : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[MiroSmartMusicUtilities normalizeGainForRendition:]
  +[MiroSmartMusicUtilities metadataItemAtTime:fromMetadataItems:findNearest:]
  +[MiroSmartMusicUtilities beatMetadataItemForBeatIndex:andBarIndex:nearBeatMetadataItem:fromBeatMetadataItems:]
  +[MiroSmartMusicUtilities averageBarDurationForFlexAudioClipInSeconds:]
  +[MiroSmartMusicUtilities _peakAndLoudnessForRendition:]
  +[MiroSmartMusicUtilities metadataItemAtTime:fromMetadataItems:]
  +[MiroSmartMusicUtilities averageBarDurationForFlexAudioClip:]
  +[MiroSmartMusicUtilities durationOfOutroForFlexAudioClip:]
  +[MiroSmartMusicUtilities durationOfIntroForFlexAudioClip:]


VEKInitialPipelineStage : VEKPipelineStage
 @property  VEKProduction *production

  // instance methods
  -[VEKInitialPipelineStage .cxx_destruct]
  -[VEKInitialPipelineStage production]
  -[VEKInitialPipelineStage setProduction:]
  -[VEKInitialPipelineStage runStageWithInput:]


VEKProduction : VEKPipeline <PosterDataProtocol, NSSecureCoding, NSCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *fontName
 @property  VEKProduction_MiroMemory_Bridge *bridge
 @property  NSString *requestedMood
 @property  NSDate *memoryViewedDate
 @property  BOOL isPending
 @property  double maxDuration
 @property  PHAssetCollection *collection
 @property  double requestedDuration
 @property  NSString *title
 @property  NSString *subtitle
 @property  PHAsset *keyAsset
 @property  VEKBlueprint *blueprint
 @property  NSSet *suggestions

  // class methods
  +[VEKProduction supportsSecureCoding]

  // instance methods
  -[VEKProduction init]
  -[VEKProduction isEqual:]
  -[VEKProduction copyWithZone:]
  -[VEKProduction encodeWithCoder:]
  -[VEKProduction initWithCoder:]
  -[VEKProduction .cxx_destruct]
  -[VEKProduction collection]
  -[VEKProduction title]
  -[VEKProduction setTitle:]
  -[VEKProduction fontName]
  -[VEKProduction subtitle]
  -[VEKProduction isPending]
  -[VEKProduction setIsPending:]
  -[VEKProduction suggestions]
  -[VEKProduction setSuggestions:]
  -[VEKProduction setSubtitle:]
  -[VEKProduction maxDuration]
  -[VEKProduction setMaxDuration:]
  -[VEKProduction bridge]
  -[VEKProduction setBridge:]
  -[VEKProduction keyAsset]
  -[VEKProduction setKeyAsset:]
  -[VEKProduction initWithAssetCollection:]
  -[VEKProduction setBlueprint:]
  -[VEKProduction blueprint]
  -[VEKProduction exportWithPresets:progressHandler:completionHandler:]
  -[VEKProduction requestedDuration]
  -[VEKProduction setRequestedDuration:]
  -[VEKProduction pickedItemCount]
  -[VEKProduction requestedMood]
  -[VEKProduction memoryViewedDate]
  -[VEKProduction makePlayerItemWithProgressHandler:completionHandler:]
  -[VEKProduction makeProjectWithProgressHandler:completionHandler:]
  -[VEKProduction setRequestedMood:]
  -[VEKProduction setMemoryViewedDate:]


VEKExportPreset : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *avPreset
 @property  double aspect

  // class methods
  +[VEKExportPreset presetWithAVPreset:]

  // instance methods
  -[VEKExportPreset .cxx_destruct]
  -[VEKExportPreset setAspect:]
  -[VEKExportPreset aspect]
  -[VEKExportPreset setAvPreset:]
  -[VEKExportPreset avPreset]


MiroAutoEditOperation : NSOperation /usr/lib/libobjc.A.dylib
 @property  MiroCloudDownloader *cloudDownloader
 @property  MiroAutoEditController *autoEditController
 @property  int requestID
 @property  MiroAutoEditor *autoEditorParent
 @property  MiroMemory *memory
 @property  @? cleanupHandler
 @property  BOOL shouldSave

  // instance methods
  -[MiroAutoEditOperation .cxx_destruct]
  -[MiroAutoEditOperation start]
  -[MiroAutoEditOperation finished]
  -[MiroAutoEditOperation isFinished]
  -[MiroAutoEditOperation isExecuting]
  -[MiroAutoEditOperation isAsynchronous]
  -[MiroAutoEditOperation cleanupHandler]
  -[MiroAutoEditOperation memory]
  -[MiroAutoEditOperation setCleanupHandler:]
  -[MiroAutoEditOperation requestID]
  -[MiroAutoEditOperation setRequestID:]
  -[MiroAutoEditOperation setMemory:]
  -[MiroAutoEditOperation setShouldSave:]
  -[MiroAutoEditOperation shouldSave]
  -[MiroAutoEditOperation autoEditController]
  -[MiroAutoEditOperation setAutoEditController:]
  -[MiroAutoEditOperation cloudDownloader]
  -[MiroAutoEditOperation setCloudDownloader:]
  -[MiroAutoEditOperation shouldCancelOnNonLocalAssets]
  -[MiroAutoEditOperation setAutoEditorParent:]
  -[MiroAutoEditOperation autoEditorParent]
  -[MiroAutoEditOperation shouldDownload]
  -[MiroAutoEditOperation performAutoEditAsynchronously]
  -[MiroAutoEditOperation _downloadWithCompletionHandler:]


MiroCompositionDuckingTimes : CompositionDuckingTimes
  // class methods
  +[MiroCompositionDuckingTimes miroCompositionDuckingTimesWithProject:]

  // instance methods
  -[MiroCompositionDuckingTimes initWithProject:]
  -[MiroCompositionDuckingTimes clipIsAudible:]


MiroPickInfo : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  float score
 @property  float distance
 @property  float splitDistance
 @property  unsigned long pickOrder
 @property  unsigned long adjustedPickOrder
 @property  unsigned long sourceOrder
 @property  unsigned long splitOrder
 @property  <MiroMediaItem> *item
 @property  float imageDistance
 @property  unsigned long clipCompareResultFlags
 @property  double idealDuration
 @property  double idealDurationWithTrim
 @property  double biasedDuration
 @property  double maxPleasantDuration

  // class methods
  +[MiroPickInfo pickInfoWithItem:score:distance:splitDistance:pickOrder:adjustedPickOrder:sourceOrder:splitOrder:imageDistance:clipCompareResultFlags:]

  // instance methods
  -[MiroPickInfo copyWithZone:]
  -[MiroPickInfo .cxx_destruct]
  -[MiroPickInfo item]
  -[MiroPickInfo score]
  -[MiroPickInfo setScore:]
  -[MiroPickInfo setDistance:]
  -[MiroPickInfo distance]
  -[MiroPickInfo splitDistance]
  -[MiroPickInfo setSplitDistance:]
  -[MiroPickInfo sourceOrder]
  -[MiroPickInfo pickOrder]
  -[MiroPickInfo adjustedPickOrder]
  -[MiroPickInfo splitOrder]
  -[MiroPickInfo imageDistance]
  -[MiroPickInfo clipCompareResultFlags]
  -[MiroPickInfo idealDurationForBlueprint:respectTrim:]
  -[MiroPickInfo setSourceOrder:]
  -[MiroPickInfo setPickOrder:]
  -[MiroPickInfo setAdjustedPickOrder:]
  -[MiroPickInfo setSplitOrder:]
  -[MiroPickInfo idealDurationForBlueprint:biased:maxPleasant:respectTrim:]
  -[MiroPickInfo trimmedDuration]
  -[MiroPickInfo _idealDurationForBlueprint:biased:max:]
  -[MiroPickInfo voiceRangeDuration]
  -[MiroPickInfo idealDuration]
  -[MiroPickInfo idealDurationWithTrim]
  -[MiroPickInfo biasedDuration]
  -[MiroPickInfo maxPleasantDuration]


MiroColorSelectionController : NSObject /usr/lib/libc++.1.dylib
 @property  UIColor *backgroundColor
 @property  UIColor *primaryColor
 @property  UIColor *secondaryColor
 @property  UIColor *gapColor
 @property  NSArray *randomNumbers
 @property  NSDictionary *colorTitlePresets
 @property  NSArray *presetBackgroundColors
 @property  NSArray *presetTextOnBlackColors
 @property  NSArray *presetTextOnWhiteColors
 @property  NSArray *presetTextOverImageColors
 @property  NSArray *safeColorRanges
 @property  NSDictionary *colorAnalysis
 @property  unsigned long analysisRegion
 @property  NSArray *accentColors
 @property  NSArray *safeAccentColors
 @property  NSArray *imageDominantColors
 @property  NSArray *centerDominantColors
 @property  NSArray *lowerThirdDominantColors
 @property  BOOL hasWarnedOnceNilTitleID
 @property  <MiroTitleColorConfiguration> *debugTitleConfiguration
 @property  NSMutableArray *debugSafeAccentRanges
 @property  NSMutableArray *debugFilteredImageDominantRanges
 @property  MiroBlueprint *blueprint
 @property  int titleSnapshotAspect

  // class methods
  +[MiroColorSelectionController fetchColorAnalysisForAsset:atTime:completion:]
  +[MiroColorSelectionController colorIsDark:]
  +[MiroColorSelectionController colorIsLight:]
  +[MiroColorSelectionController _fetchColorAnalysisDictionaryForAsset:startTime:completion:]
  +[MiroColorSelectionController _colorAnalysisForStartTime:asset:]
  +[MiroColorSelectionController colorIsSaturated:]

  // instance methods
  -[MiroColorSelectionController init]
  -[MiroColorSelectionController .cxx_destruct]
  -[MiroColorSelectionController backgroundColor]
  -[MiroColorSelectionController setBackgroundColor:]
  -[MiroColorSelectionController setPrimaryColor:]
  -[MiroColorSelectionController setSecondaryColor:]
  -[MiroColorSelectionController primaryColor]
  -[MiroColorSelectionController secondaryColor]
  -[MiroColorSelectionController setBlueprint:]
  -[MiroColorSelectionController blueprint]
  -[MiroColorSelectionController debugImageDominantColors]
  -[MiroColorSelectionController debugCenterDominantColors]
  -[MiroColorSelectionController debugLowerThirdDominantColors]
  -[MiroColorSelectionController debugAccentColors]
  -[MiroColorSelectionController debugBackgroundColor]
  -[MiroColorSelectionController debugPrimaryColor]
  -[MiroColorSelectionController debugSecondaryColor]
  -[MiroColorSelectionController debugTitleConfiguration]
  -[MiroColorSelectionController safeAccentColors]
  -[MiroColorSelectionController debugSafeAccentRanges]
  -[MiroColorSelectionController debugFilteredImageDominantColors]
  -[MiroColorSelectionController debugFilteredImageDominantRanges]
  -[MiroColorSelectionController setTitleSnapshotAspect:]
  -[MiroColorSelectionController setColorAnalysis:]
  -[MiroColorSelectionController initWithColorAnalysis:]
  -[MiroColorSelectionController _generateRandomNumbersForRandomizerSeed:]
  -[MiroColorSelectionController _invalidateColors]
  -[MiroColorSelectionController _setupColorsIfNecessary]
  -[MiroColorSelectionController _randomPresetBackgroundColor]
  -[MiroColorSelectionController _dominantColorsForAnalysisRegion:]
  -[MiroColorSelectionController _analysisColorsForKey:]
  -[MiroColorSelectionController accentColors]
  -[MiroColorSelectionController _filterDominantColorsForAnalysisRegion:]
  -[MiroColorSelectionController _presetColorsForKey:]
  -[MiroColorSelectionController setRandomNumbers:]
  -[MiroColorSelectionController colorAnalysis]
  -[MiroColorSelectionController titleSnapshotAspect]
  -[MiroColorSelectionController randomNumbers]
  -[MiroColorSelectionController setDebugTitleConfiguration:]
  -[MiroColorSelectionController setAnalysisRegion:]
  -[MiroColorSelectionController _selectSafeDominantColorForAnalysisRegion:]
  -[MiroColorSelectionController _selectSafeAccentColor]
  -[MiroColorSelectionController _randomPresetColorOverWhiteColor]
  -[MiroColorSelectionController _randomPresetColorOverBlackColor]
  -[MiroColorSelectionController _selectSafeTextColorOverImageForAnalysisRegion:]
  -[MiroColorSelectionController colorTitlePresets]
  -[MiroColorSelectionController _presetHSVValuesForKey:]
  -[MiroColorSelectionController presetBackgroundColors]
  -[MiroColorSelectionController _colorsWithSimilarHue:fromPresets:usingHSVValues:]
  -[MiroColorSelectionController presetTextOverImageColors]
  -[MiroColorSelectionController setDebugFilteredImageDominantRanges:]
  -[MiroColorSelectionController _filterSafeBackgroundColorsForColors:withDebugArray:]
  -[MiroColorSelectionController setDebugSafeAccentRanges:]
  -[MiroColorSelectionController safeColorRanges]
  -[MiroColorSelectionController presetTextOnWhiteColors]
  -[MiroColorSelectionController presetTextOnBlackColors]
  -[MiroColorSelectionController _presetBackgroundColorWithSimilarHueForColor:]
  -[MiroColorSelectionController _analysisHSVValuesForAnalysisRegion:]
  -[MiroColorSelectionController _presetTextOverImageColorWithSimilarHue:]
  -[MiroColorSelectionController gapColor]
  -[MiroColorSelectionController setGapColor:]
  -[MiroColorSelectionController analysisRegion]
  -[MiroColorSelectionController setAccentColors:]
  -[MiroColorSelectionController setSafeAccentColors:]
  -[MiroColorSelectionController imageDominantColors]
  -[MiroColorSelectionController setImageDominantColors:]
  -[MiroColorSelectionController centerDominantColors]
  -[MiroColorSelectionController setCenterDominantColors:]
  -[MiroColorSelectionController lowerThirdDominantColors]
  -[MiroColorSelectionController setLowerThirdDominantColors:]
  -[MiroColorSelectionController hasWarnedOnceNilTitleID]
  -[MiroColorSelectionController setHasWarnedOnceNilTitleID:]


MiroContentScoring : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[MiroContentScoring isPortrait]
  +[MiroContentScoring hasSmile]
  +[MiroContentScoring isLandscape]
  +[MiroContentScoring posterAsset]
  +[MiroContentScoring liveValueForKey:]
  +[MiroContentScoring videoBaseScore]
  +[MiroContentScoring videoIsSloMo]
  +[MiroContentScoring videoIsTimelapse]
  +[MiroContentScoring videoHasVoiceRange]
  +[MiroContentScoring videoHasFaceRange]
  +[MiroContentScoring videoCloseToIdealDuration]
  +[MiroContentScoring videoCloseToIdealPadding]
  +[MiroContentScoring videoWithinBlueprintRange]
  +[MiroContentScoring videoNotWithinBlueprintRange]
  +[MiroContentScoring videoDurationTooShort]
  +[MiroContentScoring sloMoHasUserDefinedRange]
  +[MiroContentScoring nonPhotoAssetScore]
  +[MiroContentScoring assetResolutionTooSmall]
  +[MiroContentScoring imageBaseScore]
  +[MiroContentScoring imageIsPanorama]
  +[MiroContentScoring imageIsLandscapePanorama]
  +[MiroContentScoring imageIsPortraitPanorama]
  +[MiroContentScoring imageHDR]
  +[MiroContentScoring imageNonHDRofPair]
  +[MiroContentScoring imageIsBlurry]
  +[MiroContentScoring imageIsBurst]
  +[MiroContentScoring burstAutoPick]
  +[MiroContentScoring burstUserPick]
  +[MiroContentScoring burstRepresentativePick]
  +[MiroContentScoring photoIsFavorite]
  +[MiroContentScoring photoIsHidden]
  +[MiroContentScoring photoIsUserEdited]
  +[MiroContentScoring userAlbumPick]
  +[MiroContentScoring assetWasShared]
  +[MiroContentScoring assetWasUserAdded]
  +[MiroContentScoring assetWasUserRemoved]
  +[MiroContentScoring hasWink]
  +[MiroContentScoring hasBlink]
  +[MiroContentScoring hasCloseUpFace]
  +[MiroContentScoring assetWithTheGreatestNumberOfDesirableRanges]
  +[MiroContentScoring numberOfDesirableRangesToBoostScore]
  +[MiroContentScoring multipleDesirableRangesBoost]
  +[MiroContentScoring clusterBestVideo]
  +[MiroContentScoring clusterBestBurst]
  +[MiroContentScoring clusterBestVideoFoundCounterweight]
  +[MiroContentScoring clusterBest]
  +[MiroContentScoring clusterSecond]
  +[MiroContentScoring clusterThird]
  +[MiroContentScoring clusterFourth]
  +[MiroContentScoring clusterFifth]
  +[MiroContentScoring clusterOther]
  +[MiroContentScoring minTheoriticalScore]
  +[MiroContentScoring maxTheoriticalScore]


MiroContentFiltering : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[MiroContentFiltering liveValueForKey:]
  +[MiroContentFiltering minimumDurationToFilter]
  +[MiroContentFiltering maxiumumDurationToSendAll]
  +[MiroContentFiltering minimumScoreAllowedAsBRoll]
  +[MiroContentFiltering minimumScoreAllowed]
  +[MiroContentFiltering bRollAdjustPercentageDefault]
  +[MiroContentFiltering bRollAdjustPercentageSlow]
  +[MiroContentFiltering bRollAdjustPercentageMedium]
  +[MiroContentFiltering bRollAdjustPercentageFast]
  +[MiroContentFiltering bRollAdjustForRequiredBRollPercentage]
  +[MiroContentFiltering assumedPhotoDuration]
  +[MiroContentFiltering videoTooShortInSeconds]
  +[MiroContentFiltering postSelectionDupeTestDurationInSeconds]
  +[MiroContentFiltering sloMoClusterTimeDurationInSeconds]
  +[MiroContentFiltering addBackMoreAfterDurationInSecondsFast]
  +[MiroContentFiltering addBackMoreAfterDurationInSecondsMedium]
  +[MiroContentFiltering addBackMoreAfterDurationInSecondsSlow]
  +[MiroContentFiltering clusterCountToTrim]
  +[MiroContentFiltering clusterTooLargeTrim]
  +[MiroContentFiltering shootingRatioMinBestDuration]
  +[MiroContentFiltering shootingRatioSmallSetRatio]
  +[MiroContentFiltering shootingRatioMaxDurationRatioAbove]
  +[MiroContentFiltering shootingRatioMaxOverSuggestedMultiplier]
  +[MiroContentFiltering shootingRatioMaxDurationRatioBelow]
  +[MiroContentFiltering endingGroupingCount]
  +[MiroContentFiltering minCountToAllowEndGrouping]


MiroMetadataLoudnessRange : MiroMetadataRange
 @property  float loudness
 @property  float peakValue

  // instance methods
  -[MiroMetadataLoudnessRange loudness]
  -[MiroMetadataLoudnessRange peakValue]


MiroAutoEditLogger : NSObject /usr/lib/libc++.1.dylib
 @property  NSMutableString *log
 @property  long long loggingLevel
 @property  long long indentationLevel
 @property  NSRegularExpression *framesRegex
 @property  long long disableLoggingCount
 @property  BOOL logsToConsole

  // instance methods
  -[MiroAutoEditLogger init]
  -[MiroAutoEditLogger .cxx_destruct]
  -[MiroAutoEditLogger commit]
  -[MiroAutoEditLogger log]
  -[MiroAutoEditLogger setLog:]
  -[MiroAutoEditLogger indentationLevel]
  -[MiroAutoEditLogger setIndentationLevel:]
  -[MiroAutoEditLogger setLoggingLevel:]
  -[MiroAutoEditLogger loggingLevel]
  -[MiroAutoEditLogger disableLogging]
  -[MiroAutoEditLogger enableLogging]
  -[MiroAutoEditLogger logAndDescribeFrameCounts:level:formatString:]
  -[MiroAutoEditLogger setFramesRegex:]
  -[MiroAutoEditLogger disableLoggingCount]
  -[MiroAutoEditLogger framesRegex]
  -[MiroAutoEditLogger logsToConsole]
  -[MiroAutoEditLogger setDisableLoggingCount:]
  -[MiroAutoEditLogger incrementIndentationLevel]
  -[MiroAutoEditLogger decrementIndentationLevel]
  -[MiroAutoEditLogger setLogsToConsole:]


VEKMovieCompositionStage : VEKPipelineStage
  // instance methods
  -[VEKMovieCompositionStage outputTypes]
  -[VEKMovieCompositionStage inputTypes]
  -[VEKMovieCompositionStage runStageWithInput:]


MiroVPAnalysisHelpers : VEiOSSharedObject
  // class methods
  +[MiroVPAnalysisHelpers sharedHelpers]
  +[MiroVPAnalysisHelpers _extendedFlagsWithFlags:]
  +[MiroVPAnalysisHelpers _timeInFramesWithDictionaryRepresentation:naturalFrameRate:]
  +[MiroVPAnalysisHelpers _createAnalysisInfoWithVPResultDictionary:asset:]

  // instance methods
  -[MiroVPAnalysisHelpers init]
  -[MiroVPAnalysisHelpers .cxx_destruct]
  -[MiroVPAnalysisHelpers clearCaches]
  -[MiroVPAnalysisHelpers fetchAnalysisInfoWithAssets:completionHandler:]
  -[MiroVPAnalysisHelpers processResults:forAssets:intoInfos:]
  -[MiroVPAnalysisHelpers fetchAnalysisInfoWithAsset:completionHandler:]


MiroTreatmentInfo : NSObject /usr/lib/libc++.1.dylib <AltAspect>
 @property  double altAspect
 @property  int requiredTreatmentStyle
 @property  unsigned long assignedKBStyle
 @property  BOOL treatmentApplied
 @property  int assignedTreatmentStyle
 @property  NSDictionary *assignedTreatmentDict
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MiroTreatmentInfo .cxx_destruct]
  -[MiroTreatmentInfo altAspect]
  -[MiroTreatmentInfo setAltAspect:]
  -[MiroTreatmentInfo requiredTreatmentStyle]
  -[MiroTreatmentInfo setRequiredTreatmentStyle:]
  -[MiroTreatmentInfo assignedKBStyle]
  -[MiroTreatmentInfo setAssignedKBStyle:]
  -[MiroTreatmentInfo treatmentApplied]
  -[MiroTreatmentInfo setTreatmentApplied:]
  -[MiroTreatmentInfo assignedTreatmentStyle]
  -[MiroTreatmentInfo setAssignedTreatmentStyle:]
  -[MiroTreatmentInfo assignedTreatmentDict]
  -[MiroTreatmentInfo setAssignedTreatmentDict:]


MiroAutoLayoutClip : NSObject /usr/lib/libc++.1.dylib
 @property  AltClipCollection *treatmentInfo
 @property  KonaClip *projectClip
 @property  int clipType
 @property  int preferredDirection
 @property  BOOL canSupportPrecedingTransition
 @property  BOOL canSupportMultiUp
 @property  NSArray *multiUpPeers
 @property  MiroAutoLayoutClip *selectedPeer
 @property  MultiUpClip *multiUpClip
 @property  BOOL itemShouldHeroFeaturedPerson
 @property  int directionOfMovement
 @property  BOOL transitionAssigned
 @property  BOOL zoomToPersonCandidate
 @property  BOOL isPortrait
 @property  BOOL isSquare
 @property  int numberOfFaces
 @property  BOOL facesAreClose
 @property  BOOL durationIsFlexible
 @property  BOOL missedRollToBeats
 @property  BOOL couldSupportNUpBase
 @property  BOOL supportsHalf
 @property  BOOL supportsOneThird
 @property  BOOL supportsTwoThirds
 @property  MiroAutoEditKenBurnsController *kbController

  // class methods
  +[MiroAutoLayoutClip clipIsPortrait:]
  +[MiroAutoLayoutClip clipIsSquare:]
  +[MiroAutoLayoutClip clipIsPano:]
  +[MiroAutoLayoutClip clipAspectRatio:]
  +[MiroAutoLayoutClip clipIsPortraitOrSquare:]

  // instance methods
  -[MiroAutoLayoutClip isEqual:]
  -[MiroAutoLayoutClip .cxx_destruct]
  -[MiroAutoLayoutClip isPortrait]
  -[MiroAutoLayoutClip isVideo]
  -[MiroAutoLayoutClip hasMultipleFaces]
  -[MiroAutoLayoutClip isFavorite]
  -[MiroAutoLayoutClip isSquare]
  -[MiroAutoLayoutClip numberOfFaces]
  -[MiroAutoLayoutClip isEdited]
  -[MiroAutoLayoutClip isPano]
  -[MiroAutoLayoutClip clipType]
  -[MiroAutoLayoutClip setProjectClip:]
  -[MiroAutoLayoutClip setTreatmentInfo:]
  -[MiroAutoLayoutClip treatmentInfo]
  -[MiroAutoLayoutClip setZoomToPersonCandidate:]
  -[MiroAutoLayoutClip establishProjectClipType]
  -[MiroAutoLayoutClip isTransition]
  -[MiroAutoLayoutClip establishIsPortrait]
  -[MiroAutoLayoutClip establishIsSquare]
  -[MiroAutoLayoutClip establishFaceInfo:]
  -[MiroAutoLayoutClip establishDurationFlexibility]
  -[MiroAutoLayoutClip establishPreferredDirection]
  -[MiroAutoLayoutClip establishFacesAreClose]
  -[MiroAutoLayoutClip establishCanSupportPrecedingTransition]
  -[MiroAutoLayoutClip multiUpPeers]
  -[MiroAutoLayoutClip establishRequiredTreatmentForAspect:polishDelegate:]
  -[MiroAutoLayoutClip applyAssignedTreatmentsFromRequired]
  -[MiroAutoLayoutClip kbController]
  -[MiroAutoLayoutClip setKbController:]
  -[MiroAutoLayoutClip transitionAssigned]
  -[MiroAutoLayoutClip missedRollToBeats]
  -[MiroAutoLayoutClip projectClip]
  -[MiroAutoLayoutClip multiUpClip]
  -[MiroAutoLayoutClip setClipType:]
  -[MiroAutoLayoutClip clipCanZoomCrop:]
  -[MiroAutoLayoutClip canSupportMultiUp]
  -[MiroAutoLayoutClip zoomToPersonCandidate]
  -[MiroAutoLayoutClip itemShouldHeroFeaturedPerson]
  -[MiroAutoLayoutClip setPreferredDirection:]
  -[MiroAutoLayoutClip facesAreClose]
  -[MiroAutoLayoutClip supportsHalf]
  -[MiroAutoLayoutClip supportsOneThird]
  -[MiroAutoLayoutClip setItemShouldHeroFeaturedPerson:]
  -[MiroAutoLayoutClip setDurationIsFlexible:]
  -[MiroAutoLayoutClip setCanSupportPrecedingTransition:]
  -[MiroAutoLayoutClip locationForClip]
  -[MiroAutoLayoutClip initWithKonaClip:polishDelegate:zoomToPersonCandidate:]
  -[MiroAutoLayoutClip distanceToLayoutClip:]
  -[MiroAutoLayoutClip preferredDirection]
  -[MiroAutoLayoutClip canSupportPrecedingTransition]
  -[MiroAutoLayoutClip setCanSupportMultiUp:]
  -[MiroAutoLayoutClip setMultiUpPeers:]
  -[MiroAutoLayoutClip selectedPeer]
  -[MiroAutoLayoutClip setSelectedPeer:]
  -[MiroAutoLayoutClip setMultiUpClip:]
  -[MiroAutoLayoutClip directionOfMovement]
  -[MiroAutoLayoutClip setDirectionOfMovement:]
  -[MiroAutoLayoutClip setTransitionAssigned:]
  -[MiroAutoLayoutClip durationIsFlexible]
  -[MiroAutoLayoutClip setMissedRollToBeats:]
  -[MiroAutoLayoutClip couldSupportNUpBase]
  -[MiroAutoLayoutClip setCouldSupportNUpBase:]
  -[MiroAutoLayoutClip setSupportsHalf:]
  -[MiroAutoLayoutClip setSupportsOneThird:]
  -[MiroAutoLayoutClip supportsTwoThirds]
  -[MiroAutoLayoutClip setSupportsTwoThirds:]


MiroAutoEditController : NSObject /usr/lib/libc++.1.dylib <MiroAutoEditDelegate>
 @property  MiroAutoEdit_TrimController *trimController
 @property  MiroAutoEditProjectPolish *polisher
 @property  NSMapTable *trimRangeForClipMap
 @property  MiroAutoEditLogger *logger
 @property  Project *project
 @property  MiroMemory *activeMemory
 @property  BOOL shouldBuildMovieController
 @property  MovieController *movieController
 @property  MiroRandomNumberGenerator *kenBurnsRandomNumberGenerator
 @property  BOOL shouldSkipPolish
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL titleIsSupported

  // class methods
  +[MiroAutoEditController titleCardAssetSize]
  +[MiroAutoEditController localImageRequestOptions]

  // instance methods
  -[MiroAutoEditController .cxx_destruct]
  -[MiroAutoEditController logger]
  -[MiroAutoEditController setLogger:]
  -[MiroAutoEditController trimController]
  -[MiroAutoEditController setMovieController:]
  -[MiroAutoEditController movieController]
  -[MiroAutoEditController project]
  -[MiroAutoEditController setProject:]
  -[MiroAutoEditController autoEditProjectFromMemory:progressHandler:completionHandler:]
  -[MiroAutoEditController setActiveMemory:]
  -[MiroAutoEditController _fetchStoreItemForMediaID:]
  -[MiroAutoEditController _fetchMediaItemForMediaID:]
  -[MiroAutoEditController shouldBuildMovieController]
  -[MiroAutoEditController setShouldBuildMovieController:]
  -[MiroAutoEditController activeMemory]
  -[MiroAutoEditController shouldSkipPolish]
  -[MiroAutoEditController setPolisher:]
  -[MiroAutoEditController polisher]
  -[MiroAutoEditController _makePolisher]
  -[MiroAutoEditController setTrimController:]
  -[MiroAutoEditController _finishPolisher]
  -[MiroAutoEditController _applyBackgroundMusicWithClip:]
  -[MiroAutoEditController titleIsSupported]
  -[MiroAutoEditController autoEditToDuration:]
  -[MiroAutoEditController kenBurnsRandomNumberGenerator]
  -[MiroAutoEditController applyAutomaticThemeTitleToFirstClip]
  -[MiroAutoEditController _incrementCountForKey:inDictionary:]
  -[MiroAutoEditController applyBackgroundMusicWithSong:]
  -[MiroAutoEditController applyBackgroundMusicWithMediaItem:]
  -[MiroAutoEditController trimRangeForClipMap]
  -[MiroAutoEditController setTrimRangeForClipMap:]
  -[MiroAutoEditController setKenBurnsRandomNumberGenerator:]
  -[MiroAutoEditController setShouldSkipPolish:]
  -[MiroAutoEditController _addProjectPlaceholderWithScenes:name:progressHandler:]
  -[MiroAutoEditController applyMusic:]
  -[MiroAutoEditController _addPhotoAsset:assetRep:project:]
  -[MiroAutoEditController _applySpeedRangesToClip:asset:previousClip:]
  -[MiroAutoEditController _updateSelectedRangeOfClip:withScene:]
  -[MiroAutoEditController clipForAsset:project:]
  -[MiroAutoEditController _removeSpeedRampFromEndOfClip:]
  -[MiroAutoEditController _removeSpeedRampFromBeginningOfClip:]


VEKExportController : MiroExportController

VEKProgressWatcher : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL progressIncludesDownload
 @property  @? progressHandler
 @property  VEKProgress *progress
 @property  id observedObject

  // instance methods
  -[VEKProgressWatcher dealloc]
  -[VEKProgressWatcher .cxx_destruct]
  -[VEKProgressWatcher observeValueForKeyPath:ofObject:change:context:]
  -[VEKProgressWatcher progress]
  -[VEKProgressWatcher progressHandler]
  -[VEKProgressWatcher setProgressHandler:]
  -[VEKProgressWatcher setProgress:]
  -[VEKProgressWatcher observedObject]
  -[VEKProgressWatcher initWithObservedObject:]
  -[VEKProgressWatcher setObservedObject:]
  -[VEKProgressWatcher setProgressIncludesDownload:]
  -[VEKProgressWatcher progressIncludesDownload]


VEKProduction_MiroMemory_Bridge : NSObject /usr/lib/libc++.1.dylib
 @property  MiroMemory *memory
 @property  AVPlayerItem *playerItem
 @property  MiroAutoEditor *autoEditor
 @property  VEKProgressWatcher *watcherProperty
 @property  VEKExportController *exportController
 @property  unsigned long nonLocalPickedAssetCount
 @property  PHAsset *keyAsset
 @property  double requestedDuration
 @property  VEKBlueprint *blueprint
 @property  NSSet *suggestions
 @property  NSString *title
 @property  NSString *subtitle
 @property  NSString *songID

  // class methods
  +[VEKProduction_MiroMemory_Bridge initialize]

  // instance methods
  -[VEKProduction_MiroMemory_Bridge copyWithZone:]
  -[VEKProduction_MiroMemory_Bridge .cxx_destruct]
  -[VEKProduction_MiroMemory_Bridge dataRepresentation]
  -[VEKProduction_MiroMemory_Bridge title]
  -[VEKProduction_MiroMemory_Bridge setTitle:]
  -[VEKProduction_MiroMemory_Bridge initWithDataRepresentation:]
  -[VEKProduction_MiroMemory_Bridge memory]
  -[VEKProduction_MiroMemory_Bridge subtitle]
  -[VEKProduction_MiroMemory_Bridge isPending]
  -[VEKProduction_MiroMemory_Bridge suggestions]
  -[VEKProduction_MiroMemory_Bridge setSuggestions:]
  -[VEKProduction_MiroMemory_Bridge setSubtitle:]
  -[VEKProduction_MiroMemory_Bridge maximumDuration]
  -[VEKProduction_MiroMemory_Bridge playerItem]
  -[VEKProduction_MiroMemory_Bridge maxDuration]
  -[VEKProduction_MiroMemory_Bridge setPlayerItem:]
  -[VEKProduction_MiroMemory_Bridge keyAsset]
  -[VEKProduction_MiroMemory_Bridge setKeyAsset:]
  -[VEKProduction_MiroMemory_Bridge setMemory:]
  -[VEKProduction_MiroMemory_Bridge addAsset:]
  -[VEKProduction_MiroMemory_Bridge initWithAssetCollection:]
  -[VEKProduction_MiroMemory_Bridge removeAsset:]
  -[VEKProduction_MiroMemory_Bridge setBlueprint:]
  -[VEKProduction_MiroMemory_Bridge setSongID:]
  -[VEKProduction_MiroMemory_Bridge songID]
  -[VEKProduction_MiroMemory_Bridge blueprint]
  -[VEKProduction_MiroMemory_Bridge setExportController:]
  -[VEKProduction_MiroMemory_Bridge exportController]
  -[VEKProduction_MiroMemory_Bridge autoEditor]
  -[VEKProduction_MiroMemory_Bridge setAutoEditor:]
  -[VEKProduction_MiroMemory_Bridge didFinishExport]
  -[VEKProduction_MiroMemory_Bridge exportController:progressedTo:preventBackslide:]
  -[VEKProduction_MiroMemory_Bridge _generateProjectWithProgressHandler:completionHandler:]
  -[VEKProduction_MiroMemory_Bridge _exportProject:presets:progressHandler:completionHandler:]
  -[VEKProduction_MiroMemory_Bridge moodIDmap]
  -[VEKProduction_MiroMemory_Bridge generateProjectWithProgressHandler:completionHandler:]
  -[VEKProduction_MiroMemory_Bridge playerItemWithProgressHandler:completionHandler:]
  -[VEKProduction_MiroMemory_Bridge exportWithPresets:progressHandler:completionHandler:]
  -[VEKProduction_MiroMemory_Bridge removeClip:]
  -[VEKProduction_MiroMemory_Bridge setRangeOfInterest:forClip:]
  -[VEKProduction_MiroMemory_Bridge setVolume:forClip:]
  -[VEKProduction_MiroMemory_Bridge requestedDuration]
  -[VEKProduction_MiroMemory_Bridge setRequestedDuration:]
  -[VEKProduction_MiroMemory_Bridge pickedItemCount]
  -[VEKProduction_MiroMemory_Bridge requestedMood]
  -[VEKProduction_MiroMemory_Bridge memoryViewedDate]
  -[VEKProduction_MiroMemory_Bridge moodForMoodID:]
  -[VEKProduction_MiroMemory_Bridge moodIDForMood:]
  -[VEKProduction_MiroMemory_Bridge watcherProperty]
  -[VEKProduction_MiroMemory_Bridge setWatcherProperty:]
  -[VEKProduction_MiroMemory_Bridge updateBlueprintOnMemory]
  -[VEKProduction_MiroMemory_Bridge updateSuggestionsOnMemory]
  -[VEKProduction_MiroMemory_Bridge setupDownloadHandler]
  -[VEKProduction_MiroMemory_Bridge fudgedDurationInfo]
  -[VEKProduction_MiroMemory_Bridge fudgedDownloadInfo]
  -[VEKProduction_MiroMemory_Bridge setNonLocalPickedAssetCount:]
  -[VEKProduction_MiroMemory_Bridge updateNonLocalPickedAssetCount]
  -[VEKProduction_MiroMemory_Bridge nonLocalPickedAssetCount]


VEKSong : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  unsigned long iTunesID
 @property  MPMediaItem *iTunesMediaItem
 @property  FMSong *fmSong
 @property  id songID
 @property  BOOL isSmartMusic
 @property  BOOL isiTunesMusic
 @property  NSString *songName
 @property  NSString *artistName
 @property  NSString *artworkPath
 @property  NSSet *genres
 @property  long long mood
 @property  BOOL isLocal

  // class methods
  +[VEKSong initialize]
  +[VEKSong availableSmartSongs]

  // instance methods
  -[VEKSong isEqual:]
  -[VEKSong copyWithZone:]
  -[VEKSong .cxx_destruct]
  -[VEKSong isLocal]
  -[VEKSong mood]
  -[VEKSong artistName]
  -[VEKSong artworkPath]
  -[VEKSong genres]
  -[VEKSong songID]
  -[VEKSong songName]
  -[VEKSong isSmartMusic]
  -[VEKSong fmSong]
  -[VEKSong initWithiTunesMusicID:]
  -[VEKSong previewPlayerItemForDuration:normalizedVolume:]
  -[VEKSong initWithSmartMusicID:]
  -[VEKSong isiTunesMusic]
  -[VEKSong _fetchMediaItemForMediaID:]
  -[VEKSong setFmSong:]
  -[VEKSong setITunesID:]
  -[VEKSong setITunesMediaItem:]
  -[VEKSong iTunesID]
  -[VEKSong iTunesMediaItem]
  -[VEKSong fetchSmartSongArtwork]
  -[VEKSong moodForMoodString:]


VEKSongNoneClass : VEKSong
  // instance methods
  -[VEKSongNoneClass copyWithZone:]
  -[VEKSongNoneClass artistName]
  -[VEKSongNoneClass songName]


MiroSmartMusicRequestManager : VEiOSSharedObject
 @property  FMSongLibrary *library
 @property  NSSet *moodIDSet
 @property  double initTime
 @property  BOOL didLogSongs
 @property  MiroAutoEditLogger *logger
 @property  NSArray *observers
 @property  NSDate *dateM5Starts
 @property  NSDate *dateM5Ends
 @property  BOOL allowsDownloads

  // instance methods
  -[MiroSmartMusicRequestManager init]
  -[MiroSmartMusicRequestManager dealloc]
  -[MiroSmartMusicRequestManager .cxx_destruct]
  -[MiroSmartMusicRequestManager logger]
  -[MiroSmartMusicRequestManager _setup]
  -[MiroSmartMusicRequestManager setObservers:]
  -[MiroSmartMusicRequestManager observers]
  -[MiroSmartMusicRequestManager library]
  -[MiroSmartMusicRequestManager setLogger:]
  -[MiroSmartMusicRequestManager initTime]
  -[MiroSmartMusicRequestManager setInitTime:]
  -[MiroSmartMusicRequestManager fetchAllSongs]
  -[MiroSmartMusicRequestManager fetchSongWithUID:]
  -[MiroSmartMusicRequestManager songLibrary]
  -[MiroSmartMusicRequestManager bestLocalSongUIDForKeywords:musicGenreDistribution:moodID:excludingSongs:]
  -[MiroSmartMusicRequestManager hasEnoughLocalSongsForMoodID:]
  -[MiroSmartMusicRequestManager recommendSongUIDForKeywords:musicGenreDistribution:moodID:excludingSongs:]
  -[MiroSmartMusicRequestManager _removeObserversOnLibrary]
  -[MiroSmartMusicRequestManager setAllowsDownloads:]
  -[MiroSmartMusicRequestManager setMoodIDSet:]
  -[MiroSmartMusicRequestManager setDateM5Starts:]
  -[MiroSmartMusicRequestManager setDateM5Ends:]
  -[MiroSmartMusicRequestManager _downloadInProgressChanged:]
  -[MiroSmartMusicRequestManager _indexForMoodID:]
  -[MiroSmartMusicRequestManager _moodIDforSongUID:]
  -[MiroSmartMusicRequestManager storeDatePlayedForSongID:]
  -[MiroSmartMusicRequestManager _requestDownloadForMoodID:]
  -[MiroSmartMusicRequestManager _isDownloadingforMoodID:]
  -[MiroSmartMusicRequestManager allowsDownloads]
  -[MiroSmartMusicRequestManager bestSongToDownloadForMoodID:]
  -[MiroSmartMusicRequestManager _setDownloding:forMoodID:]
  -[MiroSmartMusicRequestManager _addObserversOnSongLibrary:indicateNetworkActivity:]
  -[MiroSmartMusicRequestManager moodIDSet]
  -[MiroSmartMusicRequestManager dateM5Starts]
  -[MiroSmartMusicRequestManager dateM5Ends]
  -[MiroSmartMusicRequestManager isNowWithinTheM5PromotionDateRange]
  -[MiroSmartMusicRequestManager allSongsScoredForKeywords:musicGenreDistribution:moodID:excludingSongs:localOptions:]
  -[MiroSmartMusicRequestManager didLogSongs]
  -[MiroSmartMusicRequestManager scoreSong:withKeywords:]
  -[MiroSmartMusicRequestManager scoreSong:forSpecialKeywords:]
  -[MiroSmartMusicRequestManager scoreSong:withRegionID:]
  -[MiroSmartMusicRequestManager scoreLocalityForSong:]
  -[MiroSmartMusicRequestManager scoreSong:withMusicGenreDistribution:]
  -[MiroSmartMusicRequestManager scoreSong:withDateLastSelected:]
  -[MiroSmartMusicRequestManager scoreSong:withMoodID:]
  -[MiroSmartMusicRequestManager setDidLogSongs:]
  -[MiroSmartMusicRequestManager _isDownloadingAnything]
  -[MiroSmartMusicRequestManager markSongUIDAsRequested:]
  -[MiroSmartMusicRequestManager logSongLibraryInitTimeWithLogger:]
  -[MiroSmartMusicRequestManager tearDownSongLibrary]
  -[MiroSmartMusicRequestManager moodIDForSong:]
  -[MiroSmartMusicRequestManager genreIDsForSong:]
  -[MiroSmartMusicRequestManager songHasSpecialKeyword:]
  -[MiroSmartMusicRequestManager purgeAllLocalCachedAssets]


MiroDownloadSongOperation : NSOperation /usr/lib/libobjc.A.dylib
 @property  MiroMemory *memory

  // instance methods
  -[MiroDownloadSongOperation .cxx_destruct]
  -[MiroDownloadSongOperation start]
  -[MiroDownloadSongOperation finished]
  -[MiroDownloadSongOperation isFinished]
  -[MiroDownloadSongOperation isExecuting]
  -[MiroDownloadSongOperation isAsynchronous]
  -[MiroDownloadSongOperation memory]
  -[MiroDownloadSongOperation setMemory:]
  -[MiroDownloadSongOperation markSongAsUsed]
  -[MiroDownloadSongOperation downloadSong]


MiroVPMetadataRange : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  NSDictionary *dictionary
 @property  unsigned long type
 @property  unsigned long flags
 @property  int startTimeInFrames
 @property  int durationInFrames
 @property  NSDictionary *analysisDict
 @property  double score

  // class methods
  +[MiroVPMetadataRange descriptionForType:]
  +[MiroVPMetadataRange descriptionForFlags:]
  +[MiroVPMetadataRange enumerateByAscendingTypes:handler:]
  +[MiroVPMetadataRange mergeRanges:withRanges:]
  +[MiroVPMetadataRange rangeWithType:flags:startTimeInFrames:durationInFrames:analysisDict:]

  // instance methods
  -[MiroVPMetadataRange init]
  -[MiroVPMetadataRange isEqual:]
  -[MiroVPMetadataRange copyWithZone:]
  -[MiroVPMetadataRange type]
  -[MiroVPMetadataRange .cxx_destruct]
  -[MiroVPMetadataRange dictionary]
  -[MiroVPMetadataRange initWithDictionary:]
  -[MiroVPMetadataRange flags]
  -[MiroVPMetadataRange score]
  -[MiroVPMetadataRange durationInFrames]
  -[MiroVPMetadataRange startTimeInFrames]
  -[MiroVPMetadataRange analysisDict]
  -[MiroVPMetadataRange _setScore:]


MiroVPFaceMetadataRange : MiroVPMetadataRange

MiroVPSaliencyMetadataRange : MiroVPMetadataRange

MiroVPPetMetadataRange : MiroVPMetadataRange

MiroVPCompositionMetadataRange : MiroVPMetadataRange

MiroVPShotTypeMetadataRange : MiroVPMetadataRange

MiroVPVoiceMetadataRange : MiroVPMetadataRange

MiroVPSceneMetadataRange : MiroVPMetadataRange

MiroVPQualityMetadataRange : MiroVPMetadataRange

MiroVPInterestingMetadataRange : MiroVPMetadataRange

MiroVPJunkMetadataRange : MiroVPMetadataRange

MiroVPSharpnessMetadataRange : MiroVPMetadataRange

MiroVPFaceSharpnessMetadataRange : MiroVPMetadataRange

MiroVPIrisSharpnesskMetadataRange : MiroVPMetadataRange

MiroVPIrisRecommendedMetadataRange : MiroVPMetadataRange

MiroVPOrientationMetadataRange : MiroVPMetadataRange

MiroVPFineActionMetadataRange : MiroVPMetadataRange

MiroVPCameraMotionMetadataRange : MiroVPMetadataRange

MiroVPClassificationMetadataRange : MiroVPMetadataRange

MiroAutoEditMultiUpController : NSObject /usr/lib/libc++.1.dylib
 @property  Project *project
 @property  MiroMemory *activeMemory
 @property  NSArray *chronologicallyOrderedAssets
 @property  NSArray *projectLayoutClips
 @property  NSMutableArray *selectedPeers
 @property  MiroAutoEditKenBurnsController *kbController
 @property  MiroAutoEditProjectPolish *polishController
 @property  unsigned long altStyle

  // instance methods
  -[MiroAutoEditMultiUpController .cxx_destruct]
  -[MiroAutoEditMultiUpController project]
  -[MiroAutoEditMultiUpController setProject:]
  -[MiroAutoEditMultiUpController setActiveMemory:]
  -[MiroAutoEditMultiUpController kbController]
  -[MiroAutoEditMultiUpController setKbController:]
  -[MiroAutoEditMultiUpController activeMemory]
  -[MiroAutoEditMultiUpController selectedPeers]
  -[MiroAutoEditMultiUpController setSelectedPeers:]
  -[MiroAutoEditMultiUpController bestPeersBetweenClip:and:withCurrent:]
  -[MiroAutoEditMultiUpController clipIsMultiCandidate:]
  -[MiroAutoEditMultiUpController appropriateDistancePeersFrom:comparingTo:]
  -[MiroAutoEditMultiUpController altStyle]
  -[MiroAutoEditMultiUpController setAltStyle:]
  -[MiroAutoEditMultiUpController selectLayoutPeerFrom:]
  -[MiroAutoEditMultiUpController multiUpTypeForLayoutClip:andPeer:]
  -[MiroAutoEditMultiUpController prepareAltClip:andClip:fromSelectedPeer:forAspect:]
  -[MiroAutoEditMultiUpController adjustKBRectanglesForClip:animationStyle:aspect:]
  -[MiroAutoEditMultiUpController chronologicallyOrderedAssets]
  -[MiroAutoEditMultiUpController setChronologicallyOrderedAssets:]
  -[MiroAutoEditMultiUpController selectedPeersContains:]
  -[MiroAutoEditMultiUpController allowedAssetsChronologically]
  -[MiroAutoEditMultiUpController pickBetweenClipA:andClipB:forLayoutClip:]
  -[MiroAutoEditMultiUpController findMultiUpPeers:forLayoutClip:]
  -[MiroAutoEditMultiUpController evaluatePossilbeInEditMultiUpPeers:forLayoutClip:]
  -[MiroAutoEditMultiUpController createAndReplaceMultiUpForLayoutClip:]
  -[MiroAutoEditMultiUpController ensureMultiUpMovieClipIsFirstClip:]
  -[MiroAutoEditMultiUpController peer:couldSupportAsset:]
  -[MiroAutoEditMultiUpController layoutClip:supportsMultiUpType:]
  -[MiroAutoEditMultiUpController projectLayoutClips]
  -[MiroAutoEditMultiUpController setProjectLayoutClips:]
  -[MiroAutoEditMultiUpController polishController]
  -[MiroAutoEditMultiUpController setPolishController:]


MiroAutoEditTransitionController : NSObject /usr/lib/libc++.1.dylib
 @property  Project *project
 @property  MiroBlueprint *activeBlueprint
 @property  NSMutableArray *layoutClips
 @property  MiroAutoEditKenBurnsController *kbController
 @property  NSMutableArray *kenBurnsPanZoomPatterns
 @property  NSMutableArray *transitions
 @property  NSMutableDictionary *groupingTransitions
 @property  NSMutableArray *specialTransitions
 @property  NSMutableArray *multiTransitions
 @property  int numberOfPotentialTransitionPoints
 @property  MiroMemory *activeMemory

  // instance methods
  -[MiroAutoEditTransitionController .cxx_destruct]
  -[MiroAutoEditTransitionController transitions]
  -[MiroAutoEditTransitionController setTransitions:]
  -[MiroAutoEditTransitionController project]
  -[MiroAutoEditTransitionController setProject:]
  -[MiroAutoEditTransitionController setActiveMemory:]
  -[MiroAutoEditTransitionController setLayoutClips:]
  -[MiroAutoEditTransitionController layoutClips]
  -[MiroAutoEditTransitionController kbController]
  -[MiroAutoEditTransitionController setKbController:]
  -[MiroAutoEditTransitionController activeMemory]
  -[MiroAutoEditTransitionController establishPanAndZoomPatterns]
  -[MiroAutoEditTransitionController numberOfTransitionClipsInLayoutClips]
  -[MiroAutoEditTransitionController setNumberOfPotentialTransitionPoints:]
  -[MiroAutoEditTransitionController numberOfMultiTransitionsNeeded]
  -[MiroAutoEditTransitionController activeBlueprint]
  -[MiroAutoEditTransitionController numberOfPotentialTransitionPoints]
  -[MiroAutoEditTransitionController prepareTransitionsFromBlueprint:forNumberOfEditPoints:numberOfMultiTransitions:]
  -[MiroAutoEditTransitionController assignTransitionsToLayoutClips]
  -[MiroAutoEditTransitionController kenBurnsPanZoomPatterns]
  -[MiroAutoEditTransitionController setKenBurnsPanZoomPatterns:]
  -[MiroAutoEditTransitionController applyTransitionToLayoutClip:]
  -[MiroAutoEditTransitionController nextKBPanAndZoomSetForNumberOfEdits:following:forAspect:]
  -[MiroAutoEditTransitionController kenBurnsPaceForBlueprint]
  -[MiroAutoEditTransitionController applyDeterminedKenBurnsTreatments:forAspect:]
  -[MiroAutoEditTransitionController applyPanoStyleToClip:]
  -[MiroAutoEditTransitionController applyKenBurnsForBurstClip:]
  -[MiroAutoEditTransitionController transitionDictatesKenBurnsMotion:]
  -[MiroAutoEditTransitionController applyKenBurnsOrEffectForKenBurnsClip:]
  -[MiroAutoEditTransitionController assignRemainingKenBurnsAnyClipTreatments]
  -[MiroAutoEditTransitionController multiTransitions]
  -[MiroAutoEditTransitionController specialTransitions]
  -[MiroAutoEditTransitionController convertMultiTransitionDictionary:basedOnMultiLayout:]
  -[MiroAutoEditTransitionController transitionCandidate:validForLayoutClip:]
  -[MiroAutoEditTransitionController groupingTransitions]
  -[MiroAutoEditTransitionController assignRequiredCutsAndMultiTransitionsIn:]
  -[MiroAutoEditTransitionController assignFirstAppropriateTransitionTo:]
  -[MiroAutoEditTransitionController updateNumberOfTransitionsToInclude:]
  -[MiroAutoEditTransitionController findAndAssignConsecutiveClipsIn:supportingTransitionGroup:]
  -[MiroAutoEditTransitionController shuffleTransitionsInArray:]
  -[MiroAutoEditTransitionController transitionForLayoutClip:]
  -[MiroAutoEditTransitionController transitionFromTransitions:leadingClipType:followingClipType:includesPano:]
  -[MiroAutoEditTransitionController attemptToTransitionFromClip:toClip:withSettingsFromLayoutClip:]
  -[MiroAutoEditTransitionController setSpecialTransitions:]
  -[MiroAutoEditTransitionController setGroupingTransitions:]
  -[MiroAutoEditTransitionController setMultiTransitions:]
  -[MiroAutoEditTransitionController transitionDictionaryForMultiFromBlueprint:]
  -[MiroAutoEditTransitionController kenBurnsPreferredMovementForClip:]
  -[MiroAutoEditTransitionController clipHasMediaLimitations:]
  -[MiroAutoEditTransitionController clipShouldTrimToSelection:]
  -[MiroAutoEditTransitionController clipBeforeClip:]
  -[MiroAutoEditTransitionController maxTransitionDurationFromClip:toClip:transitionName:]
  -[MiroAutoEditTransitionController applyMultiUpTransitionTreatmentToLayoutClip:]
  -[MiroAutoEditTransitionController prepareTransitionsForBlueprint]
  -[MiroAutoEditTransitionController applyTransitions]
  -[MiroAutoEditTransitionController applyClipEffectsBasedOnTransitions]
  -[MiroAutoEditTransitionController safeInsertIndexForTransition:inTransitions:]
  -[MiroAutoEditTransitionController adjustChosenTransitionsToAdhereToContentRules:]
  -[MiroAutoEditTransitionController transitionAcceptableBetween:secondClip:]
  -[MiroAutoEditTransitionController _everyTransitionDEBUG]
  -[MiroAutoEditTransitionController setActiveBlueprint:]


MiroAnalysisTitleColorFinder : NSObject /usr/lib/libc++.1.dylib
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} nativeImageBounds
 @property  NSArray *dominantColors
 @property  NSArray *popupColors

  // instance methods
  -[MiroAnalysisTitleColorFinder init]
  -[MiroAnalysisTitleColorFinder dealloc]
  -[MiroAnalysisTitleColorFinder .cxx_destruct]
  -[MiroAnalysisTitleColorFinder .cxx_construct]
  -[MiroAnalysisTitleColorFinder _commonInit]
  -[MiroAnalysisTitleColorFinder setRegionOfInterest:]
  -[MiroAnalysisTitleColorFinder buildModel:]
  -[MiroAnalysisTitleColorFinder initWithUIImage:]
  -[MiroAnalysisTitleColorFinder analyzeUIImage:]
  -[MiroAnalysisTitleColorFinder analyzeCGImage:orientation:]
  -[MiroAnalysisTitleColorFinder rgb2hsv:g:b:h:s:v:]
  -[MiroAnalysisTitleColorFinder mappingROI]
  -[MiroAnalysisTitleColorFinder findDominantPopupColor:]
  -[MiroAnalysisTitleColorFinder findColorHSV]
  -[MiroAnalysisTitleColorFinder findPeaks:startIndex:]
  -[MiroAnalysisTitleColorFinder initWithCGImage:orientation:]
  -[MiroAnalysisTitleColorFinder nativeImageBounds]
  -[MiroAnalysisTitleColorFinder dominantColors]
  -[MiroAnalysisTitleColorFinder popupColors]


VEKDurationBuckets : NSObject /usr/lib/libc++.1.dylib
 @property  {Buckets=qqqdddi} values

  // instance methods
  -[VEKDurationBuckets setValues:]
  -[VEKDurationBuckets values]


VEKPicklistStage : VEKPipelineStage
 @property  VEKProduction *production
 @property  NSArray *featuredPeople
 @property  double maximumPossibleMemoryDuration

  // instance methods
  -[VEKPicklistStage .cxx_destruct]
  -[VEKPicklistStage production]
  -[VEKPicklistStage setProduction:]
  -[VEKPicklistStage outputTypes]
  -[VEKPicklistStage inputTypes]
  -[VEKPicklistStage maximumPossibleMemoryDuration]
  -[VEKPicklistStage featuredPeople]
  -[VEKPicklistStage needsTitleCard]
  -[VEKPicklistStage runStageWithInput:]
  -[VEKPicklistStage memoryClassificationKeys]
  -[VEKPicklistStage fudgedDurationInfoWithBuckets:pickList:]
  -[VEKPicklistStage pickedItemCountForBuckets:pickList:]
  -[VEKPicklistStage durationRangeForBuckets:]
  -[VEKPicklistStage maximumPossibleMemoryDurationForPickList:]
  -[VEKPicklistStage maxDurationRangeForBuckets:]
  -[VEKPicklistStage titleCardDuration]
  -[VEKPicklistStage memoryClassificationBased]
  -[VEKPicklistStage setFeaturedPeople:]


MiroAutoEditProjectPolish : NSObject /usr/lib/libc++.1.dylib
 @property  Project *project
 @property  MiroMemory *activeMemory
 @property  NSMutableArray *layoutClips
 @property  MiroAutoEditTransitionController *transitionsController
 @property  MiroAutoEditMultiUpController *multiController
 @property  MiroAutoEditController *editController
 @property  MiroAutoEditLogger *logger
 @property  NSMutableArray *conversionNeeded

  // instance methods
  -[MiroAutoEditProjectPolish .cxx_destruct]
  -[MiroAutoEditProjectPolish logger]
  -[MiroAutoEditProjectPolish cleanup]
  -[MiroAutoEditProjectPolish setLogger:]
  -[MiroAutoEditProjectPolish project]
  -[MiroAutoEditProjectPolish setProject:]
  -[MiroAutoEditProjectPolish setActiveMemory:]
  -[MiroAutoEditProjectPolish setLayoutClips:]
  -[MiroAutoEditProjectPolish layoutClips]
  -[MiroAutoEditProjectPolish multiUpSupportedForAspect:]
  -[MiroAutoEditProjectPolish activeMemory]
  -[MiroAutoEditProjectPolish applyTransitions]
  -[MiroAutoEditProjectPolish applyIrisEffect]
  -[MiroAutoEditProjectPolish applyBurstEffect]
  -[MiroAutoEditProjectPolish conversionNeeded]
  -[MiroAutoEditProjectPolish batchConvertCompoundClipsToKenBurnsClips]
  -[MiroAutoEditProjectPolish adjustVideoPositioningBasedOnMetadata]
  -[MiroAutoEditProjectPolish createLayoutClips]
  -[MiroAutoEditProjectPolish applyAudioPolish]
  -[MiroAutoEditProjectPolish clearAllStandardClipEffects]
  -[MiroAutoEditProjectPolish applyMultiUpTreatments]
  -[MiroAutoEditProjectPolish createTransitionControllerAndPrepare]
  -[MiroAutoEditProjectPolish applyClipPolish]
  -[MiroAutoEditProjectPolish setMultiController:]
  -[MiroAutoEditProjectPolish multiController]
  -[MiroAutoEditProjectPolish clipIsViableZoomToPersonCandidate:]
  -[MiroAutoEditProjectPolish setTransitionsController:]
  -[MiroAutoEditProjectPolish transitionsController]
  -[MiroAutoEditProjectPolish applyAutomaticThemeTitleToClip:forPoster:]
  -[MiroAutoEditProjectPolish isPortraitSquareVideo:]
  -[MiroAutoEditProjectPolish sideScaleOffsetForScaleFactor:]
  -[MiroAutoEditProjectPolish videoFramingRangesFor:]
  -[MiroAutoEditProjectPolish setVideoScaleFactorYPostitionFor:boundingRect:]
  -[MiroAutoEditProjectPolish setVideoScaleFactorXPostitionFor:boundingRect:]
  -[MiroAutoEditProjectPolish setConversionNeeded:]
  -[MiroAutoEditProjectPolish convertSpecialClipTypeToKenBurnsClip:]
  -[MiroAutoEditProjectPolish allowedBurstStylesFromBlueprint:]
  -[MiroAutoEditProjectPolish _updateSpeedRampsForClip:beginningRampDurationSeconds:endingRampDurationSeconds:]
  -[MiroAutoEditProjectPolish polishProject]
  -[MiroAutoEditProjectPolish _everyTitleDEBUG]
  -[MiroAutoEditProjectPolish applyTitleToFirstClip]
  -[MiroAutoEditProjectPolish removeIrisStylesFromFirstThreeClips]
  -[MiroAutoEditProjectPolish adjustSlowMotionSpeedRamps]
  -[MiroAutoEditProjectPolish extremeCropAllowed]
  -[MiroAutoEditProjectPolish editController]
  -[MiroAutoEditProjectPolish setEditController:]


MiroAssetClusteringVideoSegment : NSObject /usr/lib/libc++.1.dylib <MiroMediaItem, NSCopying>
 @property  float frameRate
 @property  PHAsset *videoAsset
 @property  double startTime
 @property  double duration
 @property  NSDate *creationDate
 @property  MiroMetadataRange *sourceRange
 @property  MiroMetadataRange *trimRange
 @property  double rangeScore
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  PHAsset *asset

  // class methods
  +[MiroAssetClusteringVideoSegment videoSegmentFromAsset:starting:duration:]

  // instance methods
  -[MiroAssetClusteringVideoSegment init]
  -[MiroAssetClusteringVideoSegment isEqual:]
  -[MiroAssetClusteringVideoSegment copyWithZone:]
  -[MiroAssetClusteringVideoSegment .cxx_destruct]
  -[MiroAssetClusteringVideoSegment duration]
  -[MiroAssetClusteringVideoSegment creationDate]
  -[MiroAssetClusteringVideoSegment asset]
  -[MiroAssetClusteringVideoSegment setDuration:]
  -[MiroAssetClusteringVideoSegment startTime]
  -[MiroAssetClusteringVideoSegment setStartTime:]
  -[MiroAssetClusteringVideoSegment localIdentifier]
  -[MiroAssetClusteringVideoSegment videoAsset]
  -[MiroAssetClusteringVideoSegment setFrameRate:]
  -[MiroAssetClusteringVideoSegment frameRate]
  -[MiroAssetClusteringVideoSegment setVideoAsset:]
  -[MiroAssetClusteringVideoSegment trimRange]
  -[MiroAssetClusteringVideoSegment setTrimRange:]
  -[MiroAssetClusteringVideoSegment rangeScore]
  -[MiroAssetClusteringVideoSegment rangeScoreExplanation]
  -[MiroAssetClusteringVideoSegment setSourceRange:]
  -[MiroAssetClusteringVideoSegment sourceRange]


MiroTitleColorConfiguration : MiroColorConfiguration <MiroTitleColorConfiguration>
 @property  int snapshotAspect
 @property  NSDictionary *titleParameters
 @property  NSString *debugTitleName
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long titleColorTreatment
 @property  unsigned long subtitleColorTreatment
 @property  unsigned long backgroundShapeColorTreatment
 @property  BOOL titleStyleHasColorRigging
 @property  BOOL titleStyleHasStrap
 @property  BOOL titleStyleIsCentered
 @property  BOOL titleStyleIsLowerThird
 @property  BOOL titleStyleIsSideBySide

  // class methods
  +[MiroTitleColorConfiguration initialize]
  +[MiroTitleColorConfiguration titleColorConfigurationWithTitleStyleID:snapshotAspect:randomizerSeed:]

  // instance methods
  -[MiroTitleColorConfiguration .cxx_destruct]
  -[MiroTitleColorConfiguration titleStyleIsLowerThird]
  -[MiroTitleColorConfiguration titleStyleIsCentered]
  -[MiroTitleColorConfiguration titleStyleIsSideBySide]
  -[MiroTitleColorConfiguration initWithTitleStyleID:randomizerSeed:]
  -[MiroTitleColorConfiguration setSnapshotAspect:]
  -[MiroTitleColorConfiguration titleParameters]
  -[MiroTitleColorConfiguration _verifyTitleStylesAreCorrect:]
  -[MiroTitleColorConfiguration debugTitleName]
  -[MiroTitleColorConfiguration setTitleParameters:]
  -[MiroTitleColorConfiguration setDebugTitleName:]
  -[MiroTitleColorConfiguration snapshotAspect]
  -[MiroTitleColorConfiguration titleColorTreatment]
  -[MiroTitleColorConfiguration subtitleColorTreatment]
  -[MiroTitleColorConfiguration backgroundShapeColorTreatment]
  -[MiroTitleColorConfiguration titleStyleHasColorRigging]
  -[MiroTitleColorConfiguration titleStyleHasStrap]


MiroAnalysisImageHelpers : NSObject /usr/lib/libc++.1.dylib
 @property  long long projectNaturalFrameRate

  // class methods
  +[MiroAnalysisImageHelpers imageOrientationForEXIFOrientation:]
  +[MiroAnalysisImageHelpers exifOrientationForUIImageOrientation:]
  +[MiroAnalysisImageHelpers exifOrientationForVideoTrack:]

  // instance methods
  -[MiroAnalysisImageHelpers init]
  -[MiroAnalysisImageHelpers .cxx_destruct]
  -[MiroAnalysisImageHelpers setProjectNaturalFrameRate:]
  -[MiroAnalysisImageHelpers projectNaturalFrameRate]
  -[MiroAnalysisImageHelpers processAVAsset:options:progressHandler:completionHandler:]
  -[MiroAnalysisImageHelpers _shotTypeForFaceBoundsArray:]
  -[MiroAnalysisImageHelpers _positionForFaceBounds:]
  -[MiroAnalysisImageHelpers _updateFaceRangeWithFaceID:detectionTime:facePosition:flags:faceBounds:]
  -[MiroAnalysisImageHelpers _updateShotTypeMapWithFaceBoundsArray:]
  -[MiroAnalysisImageHelpers _outputFaceRangesWithRemovedFaceIDs:outputtedFaceRanges:]
  -[MiroAnalysisImageHelpers _primaryShotType]
  -[MiroAnalysisImageHelpers _makeColorAnalysisDictionary:forImageBounds:]
  -[MiroAnalysisImageHelpers _analyzeColorsInImage:]
  -[MiroAnalysisImageHelpers _startOutputtingFaceRangesWithStartTime:orientation:]
  -[MiroAnalysisImageHelpers _analyzeColorsInVideoFrame:withOrientation:]
  -[MiroAnalysisImageHelpers _processOutputtingFaceRangeWithCGImage:detectionTime:faceRanges:]
  -[MiroAnalysisImageHelpers _stopOutputtingFaceRangesWithEndTime:lastFaceRanges:]
  -[MiroAnalysisImageHelpers processUIImage:options:progressHandler:completionHandler:]


VEKAutoEditStage : VEKPipelineStage
  // instance methods
  -[VEKAutoEditStage outputTypes]
  -[VEKAutoEditStage inputTypes]
  -[VEKAutoEditStage runStageWithInput:]


BridgedMiroAutoEditStage : VEKAutoEditStage
  // instance methods
  -[BridgedMiroAutoEditStage runStageWithInput:]
  -[BridgedMiroAutoEditStage generateProjectWithProduction:pickList:durationInfo:]


MovieController : NSObject /usr/lib/libc++.1.dylib <MovieControllerExportProtocol>
 @property  long long customImageGenCount
 @property  AVAssetImageGenerator *customImageGen
 @property  Composition *composition
 @property  BOOL forExport
 @property  double exportAspect
 @property  AVPlayerItem *playerItem
 @property  @? playerReadyCompletionBlock
 @property  {CGSize=dd} temporarySize
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  AVMutableComposition *AVComposition
 @property  Project *project
 @property  CALayer *compositionLayer
 @property  CALayer *playerLayer
 @property  AVMutableVideoComposition *videoComposition
 @property  AVMutableAudioMix *audioMix
 @property  {CGSize=dd} size
 @property  @? progressUpdateBlock

  // class methods
  +[MovieController controllerWithProject:forExport:]
  +[MovieController imageFromProject:atTime:withSize:]

  // instance methods
  -[MovieController dealloc]
  -[MovieController .cxx_destruct]
  -[MovieController size]
  -[MovieController setSize:]
  -[MovieController playerLayer]
  -[MovieController setPlayerLayer:]
  -[MovieController videoComposition]
  -[MovieController audioMix]
  -[MovieController playerItem]
  -[MovieController composition]
  -[MovieController setForExport:]
  -[MovieController setComposition:]
  -[MovieController updateComposition]
  -[MovieController applyPlayerItemProperties]
  -[MovieController AVComposition]
  -[MovieController clearPlayerItemProperties]
  -[MovieController setProgressUpdateBlock:]
  -[MovieController progressUpdateBlock]
  -[MovieController project]
  -[MovieController resetSizeToDefault]
  -[MovieController exportAspect]
  -[MovieController setExportAspect:]
  -[MovieController setProject:]
  -[MovieController imageAtTime:withSize:]
  -[MovieController cancelAllUIImageGeneration]
  -[MovieController forExport]
  -[MovieController setProjectOnComposition]
  -[MovieController customImageGen]
  -[MovieController setCustomImageGen:]
  -[MovieController setCustomImageGenCount:]
  -[MovieController customImageGenCount]
  -[MovieController compositionLayer]
  -[MovieController tearDownProjectDisplay]
  -[MovieController updateForProjectTimeInSeconds:asynchronous:allowUnloading:]
  -[MovieController renderBothOrientationsOfFirstFrameAtSize:withCompletion:]
  -[MovieController temporarySize]
  -[MovieController generateUIImagesAsynchronouslyForSize:atTimes:completionHandler:]
  -[MovieController generateOrigUIImagesAsynchronouslyForSize:atTimes:completionHandler:]
  -[MovieController playerReadyCompletionBlock]
  -[MovieController setPlayerReadyCompletionBlock:]


CutawayClip : MovieClip
 @property  NSString *cutawayName
 @property  int cutawayDirection
 @property  BOOL startOffsetValidated
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} pipRect
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} pipRectWithAspectRatio
 @property  {CGAffineTransform=dddddd} transform
 @property  {CGPoint=dd} cutawayOffset
 @property  {CGPoint=dd} underlayOffset
 @property  int animateInDuration
 @property  int animateOutDuration
 @property  int cutawayType
 @property  int forcedDuration
 @property  BOOL forcedNoFadeIn
 @property  BOOL forcedNoFadeOut

  // class methods
  +[CutawayClip cutawayWithClip:type:]

  // instance methods
  -[CutawayClip transform]
  -[CutawayClip duration]
  -[CutawayClip aspectRatio]
  -[CutawayClip setTransform:]
  -[CutawayClip scaleFactor]
  -[CutawayClip startOffset]
  -[CutawayClip setStartOffset:]
  -[CutawayClip clipType]
  -[CutawayClip translateY]
  -[CutawayClip setStartOffsetValidated:]
  -[CutawayClip startOffsetValidated]
  -[CutawayClip cutawayName]
  -[CutawayClip cutawayType]
  -[CutawayClip cutawayDirection]
  -[CutawayClip translateX]
  -[CutawayClip maxTranslateX]
  -[CutawayClip clipValue:toMax:]
  -[CutawayClip maxTranslateY]
  -[CutawayClip setCutawayName:]
  -[CutawayClip pipRectWithAspectRatio]
  -[CutawayClip defaultPIPRect]
  -[CutawayClip pipRect]
  -[CutawayClip forcedNoFadeIn]
  -[CutawayClip forcedNoFadeOut]
  -[CutawayClip forcedDuration]
  -[CutawayClip didFinishTrimming]
  -[CutawayClip setForcedDuration:]
  -[CutawayClip setCutawayType:]
  -[CutawayClip rectInRect:]
  -[CutawayClip setPipRect:]
  -[CutawayClip animateInDuration]
  -[CutawayClip animateOutDuration]
  -[CutawayClip setCutawayDirection:]
  -[CutawayClip setCutawayOffset:]
  -[CutawayClip cutawayOffset]
  -[CutawayClip setUnderlayOffset:]
  -[CutawayClip underlayOffset]
  -[CutawayClip setForcedNoFadeIn:]
  -[CutawayClip setForcedNoFadeOut:]


KenBurnsMovie : Movie
  // instance methods
  -[KenBurnsMovie duration]
  -[KenBurnsMovie durationInSeconds]
  -[KenBurnsMovie updateLocation]
  -[KenBurnsMovie resetAssetAvailability]
  -[KenBurnsMovie updateAssetAvailability]
  -[KenBurnsMovie titleIsLocalizable]
  -[KenBurnsMovie isKenBurnsMovie]


Reachability : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[Reachability reachabilityWithAddress:]
  +[Reachability reachabilityWithHostName:]
  +[Reachability reachabilityForInternetConnection]
  +[Reachability reachabilityForLocalWiFi]

  // instance methods
  -[Reachability dealloc]
  -[Reachability localWiFiStatusForFlags:]
  -[Reachability networkStatusForFlags:]
  -[Reachability connectionRequired]
  -[Reachability currentReachabilityStatus]
  -[Reachability stopNotifier]
  -[Reachability startNotifier]
  -[Reachability interventionRequired]


iLifeDebug : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[iLifeDebug loadOnce]
  +[iLifeDebug debugAssertBehaviorFilePath]
  +[iLifeDebug writeDebugAssertBehaviorStringToDisk:]
  +[iLifeDebug removeDebugAssertBehaviorFile]
  +[iLifeDebug writeDebugAssertBehaviorValueToDisk:]
  +[iLifeDebug evaluateDebugAssertBehaviorSettings]
  +[iLifeDebug readDebugAssertBehaviorFromDisk]
  +[iLifeDebug handledAsDebugAssertBehaviorURL:]
  +[iLifeDebug drawViewBorder:withColor:]
  +[iLifeDebug drawBorder:withColor:]


MetadataRange : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  int type
 @property  int startTime
 @property  int duration
 @property  NSDictionary *attributes

  // class methods
  +[MetadataRange descriptionForFacePositions:]
  +[MetadataRange descriptionForShotType:]
  +[MetadataRange objectFromPlist:inProject:]

  // instance methods
  -[MetadataRange isEqual:]
  -[MetadataRange copyWithZone:]
  -[MetadataRange type]
  -[MetadataRange setType:]
  -[MetadataRange .cxx_destruct]
  -[MetadataRange attributes]
  -[MetadataRange setAttributes:]
  -[MetadataRange duration]
  -[MetadataRange setDuration:]
  -[MetadataRange startTime]
  -[MetadataRange setStartTime:]
  -[MetadataRange initWithType:startTime:duration:attributes:]
  -[MetadataRange plistRepresentation]


Project : NSObject /usr/lib/libc++.1.dylib <PVImageDelegate, NSKeyedUnarchiverDelegate>
 @property  <ProjectDelegate> *delegate
 @property  NSMutableDictionary *projectDictionary
 @property  NSString *path
 @property  NSString *persistedStorageName
 @property  NSString *displayName
 @property  NSArray *lastArchiveNameAndDate
 @property  NSString *assetsDirectory
 @property  NSString *exportDirectory
 @property  BOOL modifiedSincePublish
 @property  BOOL readOnly
 @property  NSString *identifier
 @property  NSString *temporaryUniqueIdentifier
 @property  int aspect
 @property  int projectID
 @property  NSString *projectVersion
 @property  NSDate *modificationDate
 @property  NSUndoManager *undoManager
 @property  TitleDefinition *defaultTitle
 @property  NSString *themeID
 @property  BOOL trailer
 @property  BOOL isMiro
 @property  BOOL isSimpleProject
 @property  BOOL useThemeAudio
 @property  BOOL allowOriginalMusicForNoneTheme
 @property  BOOL fadeInFromBlack
 @property  BOOL fadeOutToBlack
 @property  NSString *audioTimePitchAlgorithm
 @property  NSString *defaultTransitionType
 @property  BOOL allowsSplits
 @property  unsigned long frameRateMode
 @property  PVEffect *filterEffect
 @property  NSString *filterEffectID
 @property  unsigned int filterSeed
 @property  BOOL hasBeenModified
 @property  int currentTime
 @property  NSMutableArray *deletedMediaFiles
 @property  ProjectAssetManager *assetManager
 @property  NSArray *savedEditList
 @property  double fadeToBlackStartTime
 @property  double fadeToBlackDuration
 @property  BOOL fadeSongForce
 @property  BOOL isExportingPlist
 @property  NSMutableArray *editList
 @property  NSMutableArray *backgroundAudioClips
 @property  NSMutableArray *foregroundAudioClips
 @property  NSMutableArray *cutaways
 @property  NSMutableDictionary *trailerDict
 @property  double aspectRatio
 @property  BOOL playbackAt60fps
 @property  BOOL exportAt60fps
 @property  int durationForAllAssets
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[Project playBackImageSize:]
  +[Project exportImageSize:]
  +[Project sizeForMaxPixels:sourceSize:]
  +[Project thumbImageSize:]
  +[Project defaultAspectRatio]
  +[Project setProjectClass:]
  +[Project defaultProjectImage]
  +[Project sizeForRenderIntent:sourceSize:]
  +[Project findSharedMediaItems:inProjectPlist:addingToResultsMap:]
  +[Project replaceProjectsURL:withURL:inProjectPlist:]
  +[Project firstClipDictInEditListOfProjectPlist:]
  +[Project projectWithSingleMovieClip:]
  +[Project trailerIsSuitableForThisDevice:]
  +[Project projectFilePathFromProjectPath:forWriting:]
  +[Project projectHolderPathFromProjectPath:forWriting:]
  +[Project assetsDirectory:]

  // instance methods
  -[Project init]
  -[Project dealloc]
  -[Project copyWithZone:]
  -[Project isEmpty]
  -[Project endEditing]
  -[Project delegate]
  -[Project setDelegate:]
  -[Project initWithContentsOfFile:]
  -[Project identifier]
  -[Project path]
  -[Project setPath:]
  -[Project duration]
  -[Project modificationDate]
  -[Project displayName]
  -[Project save]
  -[Project aspectRatio]
  -[Project setAspectRatio:]
  -[Project setDisplayName:]
  -[Project readOnly]
  -[Project isDirty]
  -[Project setReadOnly:]
  -[Project isEditing]
  -[Project assetManager]
  -[Project undoManager]
  -[Project currentTime]
  -[Project validate]
  -[Project setModificationDate:]
  -[Project saveToPath:]
  -[Project naturalSize]
  -[Project setAudioTimePitchAlgorithm:]
  -[Project audioTimePitchAlgorithm]
  -[Project thumbnailImage]
  -[Project setCurrentTime:]
  -[Project durationInSeconds]
  -[Project startEditing]
  -[Project aspect]
  -[Project setAssetManager:]
  -[Project defaultTitle]
  -[Project hasBeenModified]
  -[Project clips]
  -[Project setDefaultTitle:]
  -[Project markDirty]
  -[Project use2160Pcontent:]
  -[Project imageForURL:renderingIntent:]
  -[Project isImageValid:renderingIntent:size:]
  -[Project hasExportedFile:]
  -[Project _keyForRenderingIntent:]
  -[Project _detectedFacesInImage:clip:]
  -[Project editList]
  -[Project backgroundAudioClips]
  -[Project naturalFrameRate]
  -[Project fadeInFromBlack]
  -[Project imageAtTime:withSize:]
  -[Project didInitWithContentsOfFile]
  -[Project videoPreviewImageOfSize:]
  -[Project hasMissingAssets]
  -[Project saveClipAssetToProject:withCompletionHandler:]
  -[Project beginUndoGroup:]
  -[Project endUndoGroup]
  -[Project captureContentsOfClip:needsDisplay:]
  -[Project backgroundAudioClipsInUseAtTime:]
  -[Project setFadeToBlackDuration:]
  -[Project setFadeSongForce:]
  -[Project fadeToBlackDuration]
  -[Project shouldUseDerivativesDirectly]
  -[Project saveClipAssetToProject:withCompletionHandler:excludedRenderingIntents:]
  -[Project adjustKBRect:toContainRect:withinImageSize:]
  -[Project _enumerateMediaClipsUsingBlock:]
  -[Project copyMediaClipsOmittingFirstClip:]
  -[Project mediaClipsInfoOmittingFirstClip:]
  -[Project setUseThemeAudio:]
  -[Project bytesNeededForExport:]
  -[Project setFilterEffect:]
  -[Project replaceClip:withClip:]
  -[Project removeClip:releaseAnchor:]
  -[Project previousClipOfType:beforeClip:]
  -[Project clipBeforeClip:]
  -[Project fadeToBlackStartTime]
  -[Project setFadeToBlackStartTime:]
  -[Project clipAfterClip:]
  -[Project setFadeInFromBlack:]
  -[Project setFadeOutToBlack:]
  -[Project setDefaultTransitionType:]
  -[Project setAllowsSplits:]
  -[Project setIsMiro:]
  -[Project appendVideoClip:]
  -[Project exportAt60fps]
  -[Project playbackAt60fps]
  -[Project isMiro]
  -[Project setEditList:]
  -[Project editListClipInUseAtTime:]
  -[Project clipBeforeClip:inClips:]
  -[Project clipAfterClip:inClips:]
  -[Project editListDuration]
  -[Project imageForIdentifierURL:renderingIntent:]
  -[Project setDeletedMediaFiles:]
  -[Project setupUndo]
  -[Project initWithValidState:]
  -[Project setLastArchiveNameAndDate:]
  -[Project useThemeAudio]
  -[Project cleanupMalformedAudioPaths:]
  -[Project convertPlistToCustomObjects:]
  -[Project cleanupProjectDictionary:]
  -[Project setProjectDictionary:validate:]
  -[Project createSubDirectories]
  -[Project checkForReadOnlyCookie]
  -[Project updateModificationDate]
  -[Project setModifiedSincePublish:]
  -[Project usesOriginalNoneThemeMusic]
  -[Project setAllowOriginalMusicForNoneTheme:]
  -[Project isURL:usedInList:]
  -[Project cleanupUnusedMediaFiles]
  -[Project exportDirectory]
  -[Project firstMovieClip]
  -[Project usedTrackNames]
  -[Project allowOriginalMusicForNoneTheme]
  -[Project defaultTransitionType]
  -[Project minimumClipDurationForValidation]
  -[Project validateEditListTrack]
  -[Project updateAnchors]
  -[Project validateCutaways]
  -[Project validateMusic]
  -[Project validateForegroundAudioTracks]
  -[Project validateBackgroundAudioTracks]
  -[Project convertToPlist]
  -[Project use1080Pcontent:]
  -[Project useHEVCcontent:]
  -[Project maxSourceFrameRate]
  -[Project lastArchiveNameAndDate]
  -[Project plistAsDataWithError:]
  -[Project setHasBeenModified:]
  -[Project trailerIsSavingToPath:]
  -[Project temporaryUniqueIdentifier]
  -[Project rename:to:withPath:]
  -[Project updateTrailerMovieNameFieldsFromUnformattedString:]
  -[Project saveAnchoredClipsInList:]
  -[Project restoredAnchoredClips:]
  -[Project setForegroundAudioClips:]
  -[Project setCutaways:]
  -[Project setBackgroundAudioClips:]
  -[Project clipsForClipType:]
  -[Project movieOrKBDurationGoodFor60fps:]
  -[Project clipDurationGoodFor60fps:]
  -[Project miroContainsSufficient60fpsContent]
  -[Project containsSufficient60fpsContent]
  -[Project has1080Content:clipType:onlyMovies:]
  -[Project has2160PContent:clipType:onlyMovies:]
  -[Project hasHEVCContent:clipType:onlyMovies:]
  -[Project sizeChanged]
  -[Project minClipDurationForLeftEatDuration:rightEatDuration:totalDuration:]
  -[Project detachTransitions]
  -[Project allowedTransitionDuration:]
  -[Project reattachTransitions]
  -[Project rebuildFingerprints:]
  -[Project deleteAllExportedFiles]
  -[Project undoProjectChanges:]
  -[Project noteClipsChangedInLog:]
  -[Project startOffsetForEditListClip:]
  -[Project indexOfEditListClipAtTime:]
  -[Project startOffsetForEditListIndex:]
  -[Project updateAnchorsForClip:]
  -[Project anchoredSegmentsIgnoringClip:clipType:]
  -[Project endEditingOfTrailer]
  -[Project addAutomaticTransitions]
  -[Project numberOfForegroundAudioTracks]
  -[Project snapToGuideTimeWithinInEditListWithStartOrEndPointsWithin:ofProjectTime:ignoringClip:]
  -[Project availableAnchoredRangesIgnoringClip:clipType:]
  -[Project availableAnchoredRangeAtTime:ignoringClip:clipType:]
  -[Project anchoredSlotAtTime:duration:inRange:]
  -[Project isMovie:usedInList:]
  -[Project nonEditListClipsIn:inUseAtTime:]
  -[Project editListClipInUseAtTime:timeFromPreviousEdit:]
  -[Project startOffsetForClip:]
  -[Project keyframeTimesForEditListClips:]
  -[Project keyframeTimesForClips:]
  -[Project moveClipsInArray:afterTime:duration:except:]
  -[Project moveClipsInArray:afterTime:duration:]
  -[Project audioClipsAnchoredToClip:]
  -[Project cutawaysAnchoredToClip:]
  -[Project removeAnchorForClip:]
  -[Project insertClip:atTime:]
  -[Project availableSpaceStartingAtTime:ignoringClip:clipType:]
  -[Project insertMovieClip:afterClip:]
  -[Project moveClipsAfterTime:duration:]
  -[Project clipIndexInArray:atTime:]
  -[Project insertClip:atTime:adjustOtherClips:]
  -[Project canMoveAudioToForegroundFromClip:]
  -[Project deleteMediaFileAtURL:]
  -[Project allowsSplits]
  -[Project audioOffsetBoundsForClip:minStart:maxStart:minEnd:maxEnd:]
  -[Project localExportDirectory]
  -[Project fileNameFromPreset:]
  -[Project hasKBOnly]
  -[Project deleteExportedFile:]
  -[Project trailerShotCacheDirectory]
  -[Project thumbnailTrailerKeyForURL:index:time:size:]
  -[Project assetTrailerShotCache]
  -[Project updateClipsForCapriWithKonaProject:]
  -[Project setFrameRateMode:]
  -[Project compareModificationDates:]
  -[Project clipsOnlyHaveAudioCharacteristics]
  -[Project projectDictionary]
  -[Project setProjectDictionary:]
  -[Project suspendMusicValidate]
  -[Project resumeMusicValidate]
  -[Project willBeginTrimmingClip:]
  -[Project didFinishTrimmingClip]
  -[Project numberOfNewsIntroTitlesUsed:matchesClip:]
  -[Project projectVersion]
  -[Project simpleEditInfo]
  -[Project suspendSave]
  -[Project resumeSave]
  -[Project flushMajorChanges]
  -[Project lastContentModeForOrientation:]
  -[Project setLastContentMode:forOrientation:]
  -[Project firstClip]
  -[Project lastClip]
  -[Project nextClipOfType:afterClip:]
  -[Project useClipWithRotation]
  -[Project isBiggerThan720]
  -[Project secondsFromProjectTime:]
  -[Project durationSecondsFromFrameTime:]
  -[Project minTotalDurationOfClip:]
  -[Project maxAllowedDurationOfTransition:simple:]
  -[Project suspendUpdateAnchors]
  -[Project resumeUpdateAnchors]
  -[Project updateAnchorsIfNeeded]
  -[Project snapToGuideTimeWithin:ofProjectTime:ignoringClip:forceSnap:]
  -[Project timeForNearestEdgeOfClip:projectTime:]
  -[Project availableSpaceEndingAtTime:ignoringClip:clipType:]
  -[Project nearestAnchoredSlotAtTime:duration:ignoringClip:clipType:]
  -[Project editedRangeList]
  -[Project isMovieUsed:]
  -[Project clipsInUseAtTime:]
  -[Project clipsOfType:inUseAtTime:]
  -[Project clipsOfType:inUseFromTime:toTime:]
  -[Project convertClipStartTimeToProjectTime:]
  -[Project editListClipInUseNearTime:]
  -[Project foregroundAudioClipsInUseAtTime:]
  -[Project clipBeforeTransitionClip:]
  -[Project clipAfterTransitionClip:]
  -[Project nonTransitionClipBeforeClip:]
  -[Project clip:isInUseAtTime:]
  -[Project keyframeTimes]
  -[Project canSplitClip:atTime:]
  -[Project splitClip:atTime:]
  -[Project moveTitleToBlack:]
  -[Project canDuplicateClip:]
  -[Project duplicateClip:]
  -[Project canDetachAudioFromClip:]
  -[Project detachMovieAudioFromClip:]
  -[Project addForegroundAudioClips:withAnchor:]
  -[Project durationOfEditListClipInSeconds:]
  -[Project audioRangeForClip:start:end:]
  -[Project displayedDurationOfClip:]
  -[Project setFilterEffectID:]
  -[Project filterEffectID]
  -[Project hasAnyExportedFile]
  -[Project exportPresetForATV]
  -[Project exportPresetForPlugin]
  -[Project thumbnailTrailerShotForURL:index:time:size:]
  -[Project saveThumbnailTrailerShot:forURL:index:time:size:]
  -[Project flushThumbnailTrailerShot]
  -[Project fixupShotThumbnailFileNameAfterImport]
  -[Project modifiedSincePublish]
  -[Project projectID]
  -[Project setDurationForAllAssets:]
  -[Project savedEditList]
  -[Project setSavedEditList:]
  -[Project setIsExportingPlist:]
  -[Project isTrailer]
  -[Project assetsDirectory]
  -[Project foregroundAudioClips]
  -[Project cutaways]
  -[Project editInfo]
  -[Project replaceURL:withURL:]
  -[Project markDirty:]
  -[Project replaceURL:inMovie:andEditItem:withURL:]
  -[Project trailerDict]
  -[Project estimatedBundleSizeIncludingExternalAssets:bundleSize:externalMap:]
  -[Project replacePhotosToKenBurnsURLs]
  -[Project okToDeleteFile:]
  -[Project audioOffsetsForClip:startOffset:endOffset:]
  -[Project durationForAllAssets]
  -[Project cacheKeyForAssetsLibraryURL:renderingIntent:]
  -[Project cacheKeyForPhotosIdentifierURL:renderingIntent:]
  -[Project cacheKeyForKenBurnsIdentifierURL:renderingIntent:]
  -[Project filePathForCacheKey:]
  -[Project shouldCopyImages]
  -[Project scaleDownOrRotateIfNeeded:]
  -[Project regenerateImagesIfNecessaryForIdentifierURL:kbInfo:exportOnly:]
  -[Project horizontallyClampedKenBurnsRect:imageSize:]
  -[Project verticallyClampedKenBurnsRect:imageSize:]
  -[Project detectedFacesInKenBurnsClip:]
  -[Project detectedFaceRectsInKenBurnsClip:]
  -[Project _addPanAndZoomForKenBurnsClip:image:]
  -[Project nextKenBurnsStart:end:]
  -[Project rectFromKenBurnsPosition:outputAspectRatio:image:]
  -[Project setKenBurnsImage:forCacheKey:renderingIntent:]
  -[Project markFacesInImage:highAccuracy:]
  -[Project saveImageOfAssetRepresentation:renderingIntent:]
  -[Project saveImageOfAssetRepresentation:]
  -[Project saveThumbnailOfAssetRepresentation:]
  -[Project savePlaybackImageOfAssetRepresentation:]
  -[Project adjustDurationForKBClip:imageSize:]
  -[Project scaleAndSaveImageToProject:cacheKey:renderingIntent:]
  -[Project cacheKeyForFileURL:renderingIntent:]
  -[Project imageMatchingCurrentDeviceSizeForIdentifierURL:sourceSize:renderingIntent:]
  -[Project regenerateKBimageFilesIfNecessary:]
  -[Project numberOfDetectedFacesInKenBurnsClip:]
  -[Project rectEnclosingAllFacesInKenBurnsClip:]
  -[Project addPanAndZoomForKenBurnsClip:]
  -[Project removePanAndZoomForKenBurnsClip:]
  -[Project zeroOutPanAndZoomForMultiUpClip:]
  -[Project md5StringFromData:]
  -[Project saveClipImageToProject:clip:]
  -[Project deletedMediaFiles]
  -[Project estimatedSizeOfPassThroughExport]
  -[Project willStartExport:]
  -[Project themeID]
  -[Project renameTo:]
  -[Project filePathForIdentifierURL:renderingIntent:]
  -[Project initWithContentsOfFile:validate:]
  -[Project hasExportedFileForFullScreen:]
  -[Project loadFromProjectData:]
  -[Project setThemeID:]
  -[Project prepareForCloudPersistence]
  -[Project persistedStorageName]
  -[Project bytesNeededForMultipleExports:]
  -[Project fadeOutToBlack]
  -[Project fadeSongForce]
  -[Project isSimpleProject]
  -[Project expandedEditList]
  -[Project cutawaysInUseAtTime:]
  -[Project frameRateMode]
  -[Project filterSeed]
  -[Project cacheKeyForIdentifierURL:renderingIntent:]
  -[Project applyAspectRatioTo16by9Size:]
  -[Project exportedFilePath:]
  -[Project didExport]
  -[Project filterEffect]
  -[Project clipsAnchoredToClip:]
  -[Project saveBackgroundAudioClips]
  -[Project saveForegroundAudioClips]
  -[Project saveCutaways]
  -[Project setTrailerDict:]
  -[Project restoreBackgroundAudioClips:]
  -[Project restoreForegroundAudioClips:]
  -[Project restoreCutaways:]
  -[Project isExportingPlist]


ProjectImportExportUtils : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[ProjectImportExportUtils getTrailingCount:delim:range:]
  +[ProjectImportExportUtils incrementTrailingCount:delim:]
  +[ProjectImportExportUtils doesProjectFileExistForProject:]
  +[ProjectImportExportUtils makeUniquePath:delimiter:]
  +[ProjectImportExportUtils isValidProjectName:]
  +[ProjectImportExportUtils exportPathForProject:]
  +[ProjectImportExportUtils reconnectSharedMediaToProject:usingDatemap:]


ProjectImportExport : NSObject /usr/lib/libc++.1.dylib
 @property  NSMutableArray *exportedProjectList

  // class methods
  +[ProjectImportExport sharedInstance]

  // instance methods
  -[ProjectImportExport init]
  -[ProjectImportExport setExportedProjectList:]
  -[ProjectImportExport exportedProjectList]
  -[ProjectImportExport refreshExportedProjectFileList]
  -[ProjectImportExport haveExportedProjectNamed:]
  -[ProjectImportExport undeleteExportedProject:]
  -[ProjectImportExport deleteExportedProject:]
  -[ProjectImportExport deleteExportedProjectWithName:]


RangeObject : NSObject /usr/lib/libc++.1.dylib
 @property  {?=qq} range

  // class methods
  +[RangeObject rangeObjectWithRange:]
  +[RangeObject rangesFromIndexSet:]

  // instance methods
  -[RangeObject isEqual:]
  -[RangeObject compare:]
  -[RangeObject encodeWithCoder:]
  -[RangeObject initWithCoder:]
  -[RangeObject range]
  -[RangeObject initWithRange:]
  -[RangeObject setRange:]


NoneTheme : Theme
  // instance methods
  -[NoneTheme musicName]
  -[NoneTheme micaFileBaseName]


BurstStyleThreeUp : BurstClipStylePhoto
 @property  UIColor *gapColor
 @property  UIColor *popBackgroundColor
 @property  int transitionFrameDuration

  // instance methods
  -[BurstStyleThreeUp .cxx_destruct]
  -[BurstStyleThreeUp maximumDuration]
  -[BurstStyleThreeUp popBackgroundColor]
  -[BurstStyleThreeUp isSupported]
  -[BurstStyleThreeUp transitionName]
  -[BurstStyleThreeUp idealDuration]
  -[BurstStyleThreeUp gapColor]
  -[BurstStyleThreeUp setGapColor:]
  -[BurstStyleThreeUp numberOfAvailableClips]
  -[BurstStyleThreeUp _minimumNumberOfContainedClips]
  -[BurstStyleThreeUp _idealNumberOfContainedClips]
  -[BurstStyleThreeUp idealContainedClipDuration]
  -[BurstStyleThreeUp maximumContainedClipDuration]
  -[BurstStyleThreeUp numberOfPossibleClips]
  -[BurstStyleThreeUp containedClipsWithoutTransitions]
  -[BurstStyleThreeUp _maximumNumberOfContainedClips]
  -[BurstStyleThreeUp minimumContainedClipDuration]
  -[BurstStyleThreeUp containedClipsWithInTransition:outTransition:]
  -[BurstStyleThreeUp setPopBackgroundColor:]


MiroAssetRequest : NSObject /usr/lib/libc++.1.dylib
 @property  PHAsset *asset
 @property  PHAssetResource *resource
 @property  int requestID
 @property  BOOL isLocal
 @property  double progress
 @property  double sizeFactor

  // instance methods
  -[MiroAssetRequest .cxx_destruct]
  -[MiroAssetRequest progress]
  -[MiroAssetRequest asset]
  -[MiroAssetRequest setAsset:]
  -[MiroAssetRequest setProgress:]
  -[MiroAssetRequest isLocal]
  -[MiroAssetRequest resource]
  -[MiroAssetRequest requestID]
  -[MiroAssetRequest setRequestID:]
  -[MiroAssetRequest setResource:]
  -[MiroAssetRequest setIsLocal:]
  -[MiroAssetRequest sizeFactor]
  -[MiroAssetRequest setSizeFactor:]


MiroCloudDownloader : NSObject /usr/lib/libc++.1.dylib
 @property  NSMutableArray *requests
 @property  NSObject<OS_dispatch_queue> *cancellationQueueFor26820423
 @property  double totalInitialDownloadSize
 @property  float progress
 @property  NSArray *localAssets
 @property  @? progressBlock
 @property  @? itemCompletedBlock
 @property  unsigned long nonLocalCount

  // class methods
  +[MiroCloudDownloader cloudDownloaderWithAssets:]

  // instance methods
  -[MiroCloudDownloader .cxx_destruct]
  -[MiroCloudDownloader progress]
  -[MiroCloudDownloader progressBlock]
  -[MiroCloudDownloader setProgressBlock:]
  -[MiroCloudDownloader requests]
  -[MiroCloudDownloader setRequests:]
  -[MiroCloudDownloader cancelDownloads]
  -[MiroCloudDownloader initWithAssets:]
  -[MiroCloudDownloader startDownloadsWithCompletionHandler:]
  -[MiroCloudDownloader localAssets]
  -[MiroCloudDownloader nonLocalCount]
  -[MiroCloudDownloader setItemCompletedBlock:]
  -[MiroCloudDownloader totalInitialDownloadSize]
  -[MiroCloudDownloader setTotalInitialDownloadSize:]
  -[MiroCloudDownloader itemCompletedBlock]
  -[MiroCloudDownloader cancellationQueueFor26820423]


PHAssetRepresentationPersistenceManager : VEiOSSharedObject <PHPhotoLibraryChangeObserver, PHAssetRepresentationDownloadOperationDelegate>
 @property  NSOperationQueue *downloadQueue
 @property  NSHashTable *universalPersistenceObservers
 @property  NSMapTable *assetRepresentationToPersistenceObserverMap
 @property  NSMapTable *localIdentifierToAssetRepresentationMap
 @property  BOOL bulkAssetRegistrationRequestCount
 @property  NSMutableArray *pendingRegistrationLocalIDs
 @property  NSMutableArray *fetchResults
 @property  NSMutableSet *deletedLocalIdentifiers
 @property  NSRecursiveLock *observerLock
 @property  Reachability *hostReachability
 @property  Reachability *wifiReachability
 @property  Reachability *internetReachability
 @property  BOOL online
 @property  unsigned long reachabilityStatus
 @property  NSRecursiveLock *downloadsLock
 @property  NSMutableSet *unreadDownloads
 @property  NSMutableSet *recentDownloads
 @property  NSMutableDictionary *recentDownloadsDict
 @property  NSMutableDictionary *requestedDownloadsDict
 @property  PHAssetRepresentation *pendingAssetRepresentation
 @property  unsigned long cellularAuthorization
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PHAssetRepresentationPersistenceManager sharedManager]
  +[PHAssetRepresentationPersistenceManager purgeSharedInstance]

  // instance methods
  -[PHAssetRepresentationPersistenceManager init]
  -[PHAssetRepresentationPersistenceManager dealloc]
  -[PHAssetRepresentationPersistenceManager .cxx_destruct]
  -[PHAssetRepresentationPersistenceManager reachabilityChanged:]
  -[PHAssetRepresentationPersistenceManager unregisterObserver:]
  -[PHAssetRepresentationPersistenceManager photoLibraryDidChange:]
  -[PHAssetRepresentationPersistenceManager fetchResults]
  -[PHAssetRepresentationPersistenceManager setFetchResults:]
  -[PHAssetRepresentationPersistenceManager isOnline]
  -[PHAssetRepresentationPersistenceManager reachabilityStatus]
  -[PHAssetRepresentationPersistenceManager setReachabilityStatus:]
  -[PHAssetRepresentationPersistenceManager cancelAllDownloads]
  -[PHAssetRepresentationPersistenceManager internetReachability]
  -[PHAssetRepresentationPersistenceManager setInternetReachability:]
  -[PHAssetRepresentationPersistenceManager hostReachability]
  -[PHAssetRepresentationPersistenceManager setHostReachability:]
  -[PHAssetRepresentationPersistenceManager setOnline:]
  -[PHAssetRepresentationPersistenceManager downloadQueue]
  -[PHAssetRepresentationPersistenceManager setObserverLock:]
  -[PHAssetRepresentationPersistenceManager setDownloadsLock:]
  -[PHAssetRepresentationPersistenceManager setDownloadQueue:]
  -[PHAssetRepresentationPersistenceManager setAssetRepresentationToPersistenceObserverMap:]
  -[PHAssetRepresentationPersistenceManager setLocalIdentifierToAssetRepresentationMap:]
  -[PHAssetRepresentationPersistenceManager setUniversalPersistenceObservers:]
  -[PHAssetRepresentationPersistenceManager setDeletedLocalIdentifiers:]
  -[PHAssetRepresentationPersistenceManager setCellularAuthorization:]
  -[PHAssetRepresentationPersistenceManager setWifiReachability:]
  -[PHAssetRepresentationPersistenceManager wifiReachability]
  -[PHAssetRepresentationPersistenceManager loadRequestedDownloads]
  -[PHAssetRepresentationPersistenceManager issueRequestedDownloads]
  -[PHAssetRepresentationPersistenceManager loadRecentDownloads]
  -[PHAssetRepresentationPersistenceManager downloadsLock]
  -[PHAssetRepresentationPersistenceManager unreadDownloads]
  -[PHAssetRepresentationPersistenceManager setUnreadDownloads:]
  -[PHAssetRepresentationPersistenceManager recentDownloadsPath]
  -[PHAssetRepresentationPersistenceManager setRecentDownloadsDict:]
  -[PHAssetRepresentationPersistenceManager saveRecentDownloads]
  -[PHAssetRepresentationPersistenceManager setRecentDownloads:]
  -[PHAssetRepresentationPersistenceManager recentDownloadsDict]
  -[PHAssetRepresentationPersistenceManager recentDownloads]
  -[PHAssetRepresentationPersistenceManager requestedDownloadsDict]
  -[PHAssetRepresentationPersistenceManager submitDownloadOperationForAssetRepresentation:userInitiated:]
  -[PHAssetRepresentationPersistenceManager requestedDownloadsPath]
  -[PHAssetRepresentationPersistenceManager saveRequestedDownloads]
  -[PHAssetRepresentationPersistenceManager setRequestedDownloadsDict:]
  -[PHAssetRepresentationPersistenceManager updateOnlineStatus]
  -[PHAssetRepresentationPersistenceManager cellularAuthorization]
  -[PHAssetRepresentationPersistenceManager localIdentifierToAssetRepresentationMap]
  -[PHAssetRepresentationPersistenceManager deletedLocalIdentifiers]
  -[PHAssetRepresentationPersistenceManager observerLock]
  -[PHAssetRepresentationPersistenceManager assetRepresentationToPersistenceObserverMap]
  -[PHAssetRepresentationPersistenceManager bulkAssetRegistrationRequestCount]
  -[PHAssetRepresentationPersistenceManager pendingRegistrationLocalIDs]
  -[PHAssetRepresentationPersistenceManager setPendingRegistrationLocalIDs:]
  -[PHAssetRepresentationPersistenceManager setBulkAssetRegistrationRequestCount:]
  -[PHAssetRepresentationPersistenceManager setPendingAssetRepresentation:]
  -[PHAssetRepresentationPersistenceManager pendingAssetRepresentation]
  -[PHAssetRepresentationPersistenceManager requestDownloadOfAssetRepresentation:]
  -[PHAssetRepresentationPersistenceManager markAssetRepresentationAsRecent:]
  -[PHAssetRepresentationPersistenceManager markAssetRepresentationAsRequested:]
  -[PHAssetRepresentationPersistenceManager enumerateObserversOfAssetRepresentation:withBlock:]
  -[PHAssetRepresentationPersistenceManager unmarkAssetRepresentationAsRecent:]
  -[PHAssetRepresentationPersistenceManager unmarkAssetRepresentationAsRequested:]
  -[PHAssetRepresentationPersistenceManager universalPersistenceObservers]
  -[PHAssetRepresentationPersistenceManager markAssetRepresentationAsUnread:]
  -[PHAssetRepresentationPersistenceManager downloadOperationDidStart:]
  -[PHAssetRepresentationPersistenceManager downloadOperationDidFinish:]
  -[PHAssetRepresentationPersistenceManager downloadOperation:didProgess:]
  -[PHAssetRepresentationPersistenceManager unreadDownloadedAssetRepresentations]
  -[PHAssetRepresentationPersistenceManager resetUnreadDownloads]
  -[PHAssetRepresentationPersistenceManager numberOfUnreadDownloads]
  -[PHAssetRepresentationPersistenceManager requestDownloadOfAssetRepresentation:userInitiated:]
  -[PHAssetRepresentationPersistenceManager cancelDownloadOfAssetRepresentation:]
  -[PHAssetRepresentationPersistenceManager clearStaticCaches]
  -[PHAssetRepresentationPersistenceManager registerAssetRepresentation:]
  -[PHAssetRepresentationPersistenceManager setPersistenceState:ofAssetRepresentation:]
  -[PHAssetRepresentationPersistenceManager unregisterAssetRepresentation:]
  -[PHAssetRepresentationPersistenceManager numberOfRequestedDownloads]
  -[PHAssetRepresentationPersistenceManager beginBulkAssetRegistration]
  -[PHAssetRepresentationPersistenceManager endBulkAssetRegistration]
  -[PHAssetRepresentationPersistenceManager recentlyDownloadedAssetRepresentations]
  -[PHAssetRepresentationPersistenceManager unregisterObserver:forAssetRepresentation:]
  -[PHAssetRepresentationPersistenceManager registerObserver:forAssetRepresentation:]


CompositionDuckingTimes : NSObject /usr/lib/libc++.1.dylib
 @property  NSMutableArray *duckingEvents
 @property  int projectDurationInFrames

  // class methods
  +[CompositionDuckingTimes compositionDuckingTimesWithProject:]

  // instance methods
  -[CompositionDuckingTimes dealloc]
  -[CompositionDuckingTimes initWithProject:]
  -[CompositionDuckingTimes clipIsAudible:]
  -[CompositionDuckingTimes duckingEvents]
  -[CompositionDuckingTimes shouldDuckAtTime:]
  -[CompositionDuckingTimes projectDurationInFrames]
  -[CompositionDuckingTimes addDuckingFromTime:toTime:]
  -[CompositionDuckingTimes setDuckingEvents:]
  -[CompositionDuckingTimes setProjectDurationInFrames:]
  -[CompositionDuckingTimes makeDuckingDataForEditListWithProject:]
  -[CompositionDuckingTimes makeDuckingDataForForegroundAudioClipsWithProject:]
  -[CompositionDuckingTimes appendDuckingChangeAtFrameTime:shouldDuck:]
  -[CompositionDuckingTimes nextDuckChangeTimeFromTime:]


BurstClipStyleNone : BurstClipStyle
  // instance methods
  -[BurstClipStyleNone maximumDuration]
  -[BurstClipStyleNone isSupported]
  -[BurstClipStyleNone minimumDuration]
  -[BurstClipStyleNone idealDuration]
  -[BurstClipStyleNone containedClipsWithoutTransitions]
  -[BurstClipStyleNone containedClipsWithInTransition:outTransition:]
  -[BurstClipStyleNone adjustDurationsOfClips:withInTransition:outTransition:]


MapUtils : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[MapUtils locationWithImageURL:]
  +[MapUtils bestEndingLongitude:forShortestTripFromLongitude:]
  +[MapUtils pixelFromLatitude:longitude:onEquirectangularMapWithSize:geographicBounds:]
  +[MapUtils geographicRectFromPixelRect:onEquirectangularMapWithSize:geographicBounds:]


BurstClip : CompoundClip <KonaClipMiroAutoEditAdditions, NSCopying, CompoundClipInformation>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *containedClips
 @property  NSArray *allSourceClips
 @property  BurstClipStyle *burstClipStyle
 @property  unsigned long allowedBurstStyles
 @property  unsigned long burstStyle
 @property  UIColor *threeUpStyleGapColor
 @property  UIColor *threeUpStylePopBackgroundColor
 @property  PHAsset *keyAsset
 @property  unsigned long assetCount
 @property  double minimumVideoDuration
 @property  double idealVideoDuration
 @property  double minimumDuration
 @property  double idealDuration
 @property  double maximumDuration
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[BurstClip init]
  -[BurstClip copyWithZone:]
  -[BurstClip .cxx_destruct]
  -[BurstClip aspectRatio]
  -[BurstClip setDuration:]
  -[BurstClip maximumDuration]
  -[BurstClip assetCount]
  -[BurstClip keyAsset]
  -[BurstClip isPhoto]
  -[BurstClip isBurst]
  -[BurstClip minimumDuration]
  -[BurstClip containedClips]
  -[BurstClip burstStyle]
  -[BurstClip autoEditShortestDurationWithBlueprint:]
  -[BurstClip autoEditLongestDurationWithBlueprint:]
  -[BurstClip idealDuration]
  -[BurstClip setAltAspect:]
  -[BurstClip setContainedClips:]
  -[BurstClip representingClip]
  -[BurstClip pickedKBClips]
  -[BurstClip setAllowedBurstStyles:]
  -[BurstClip setMinimumPhotoDuration:]
  -[BurstClip setMinimumVideoDuration:]
  -[BurstClip setIdealPhotoDuration:]
  -[BurstClip setIdealVideoDuration:]
  -[BurstClip supportedBurstStylesArray]
  -[BurstClip setBurstStyle:]
  -[BurstClip setThreeUpStylePopBackgroundColor:]
  -[BurstClip initWithKenBurnsClip:sourceClips:]
  -[BurstClip bestClipsForClipCount:]
  -[BurstClip pickedIndices]
  -[BurstClip containedClipsWithInTransition:outTransition:]
  -[BurstClip setAllSourceClips:]
  -[BurstClip setBurstClipStyle:]
  -[BurstClip burstClipStyle]
  -[BurstClip allSourceClips]
  -[BurstClip descriptionOfBurstStyle]
  -[BurstClip allowedBurstStyles]
  -[BurstClip supportedBurstStyles]
  -[BurstClip threeUpStyleGapColor]
  -[BurstClip threeUpStylePopBackgroundColor]
  -[BurstClip fetchIfNeeded]
  -[BurstClip userPickedIndices]
  -[BurstClip autoPickedIndices]
  -[BurstClip lastInterestingIndex]
  -[BurstClip indicesWithBurstSelectionType:]
  -[BurstClip setThreeUpStyleGapColor:]
  -[BurstClip lastInterestingClip]
  -[BurstClip plistRepresentationFromProject:]
  -[BurstClip setContentsFromPlist:inProject:]
  -[BurstClip minimumVideoDuration]
  -[BurstClip idealVideoDuration]


SpeedRange : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  int startMedia
 @property  int startClip
 @property  SpeedRange *prev
 @property  SpeedRange *next
 @property  SpeedRanges *container
 @property  SpeedRange *accurate
 @property  SpeedRange *accurateNext
 @property  int leftEdge
 @property  int rightEdge
 @property  double rate
 @property  int durationMedia
 @property  int durationClip
 @property  BOOL isFreeze
 @property  int accurateStartClip
 @property  int accurateDurationClip

  // class methods
  +[SpeedRange speedRangeWithRate:startMedia:startClip:]

  // instance methods
  -[SpeedRange copyWithZone:]
  -[SpeedRange container]
  -[SpeedRange setContainer:]
  -[SpeedRange .cxx_destruct]
  -[SpeedRange next]
  -[SpeedRange prev]
  -[SpeedRange setRate:]
  -[SpeedRange rate]
  -[SpeedRange setNext:]
  -[SpeedRange setPrev:]
  -[SpeedRange setAccurate:]
  -[SpeedRange leftEdge]
  -[SpeedRange rightEdge]
  -[SpeedRange accurate]
  -[SpeedRange applySpeed:]
  -[SpeedRange isFreeze]
  -[SpeedRange setLeftEdge:]
  -[SpeedRange setRightEdge:]
  -[SpeedRange durationClip]
  -[SpeedRange setStartClip:]
  -[SpeedRange setStartMedia:]
  -[SpeedRange rippleClipTimeDown]
  -[SpeedRange setAndRippleLeftEdge:]
  -[SpeedRange convertToMediaTimeAndUnrampedClipTime:]
  -[SpeedRange accurateStartClip]
  -[SpeedRange durationMedia]
  -[SpeedRange splitRangeAtClipTime:]
  -[SpeedRange accurateDurationClip]
  -[SpeedRange accurateNext]
  -[SpeedRange setAccurateNext:]
  -[SpeedRange insertFreezeAtClipTime:]
  -[SpeedRange startClip]
  -[SpeedRange startMedia]


FreezeRange : SpeedRange
  // instance methods
  -[FreezeRange rate]


SpeedRanges : NSObject /usr/lib/libc++.1.dylib <NSFastEnumeration, NSCopying>
 @property  SpeedRanges *ramped
 @property  NSMutableArray *array
 @property  SpeedRanges *old
 @property  int editCount
 @property  int mediaDuration
 @property  BOOL isEdited
 @property  NSObject<SpeedRangeDelegate> *delegate

  // class methods
  +[SpeedRanges objectFromPlist:]
  +[SpeedRanges rangesFromSloMoAsset:userAdjustedOnly:completion:]

  // instance methods
  -[SpeedRanges init]
  -[SpeedRanges copyWithZone:]
  -[SpeedRanges methodSignatureForSelector:]
  -[SpeedRanges forwardInvocation:]
  -[SpeedRanges count]
  -[SpeedRanges addObject:]
  -[SpeedRanges removeObject:]
  -[SpeedRanges array]
  -[SpeedRanges countByEnumeratingWithState:objects:count:]
  -[SpeedRanges insertObject:atIndex:]
  -[SpeedRanges removeObjectAtIndex:]
  -[SpeedRanges indexOfObject:]
  -[SpeedRanges containsObject:]
  -[SpeedRanges replaceObjectAtIndex:withObject:]
  -[SpeedRanges objectAtIndexedSubscript:]
  -[SpeedRanges removeLastObject]
  -[SpeedRanges setObject:atIndexedSubscript:]
  -[SpeedRanges delegate]
  -[SpeedRanges setDelegate:]
  -[SpeedRanges firstObject]
  -[SpeedRanges lastObject]
  -[SpeedRanges setArray:]
  -[SpeedRanges .cxx_destruct]
  -[SpeedRanges initWithDuration:]
  -[SpeedRanges willChange]
  -[SpeedRanges mediaDuration]
  -[SpeedRanges setMediaDuration:]
  -[SpeedRanges isEdited]
  -[SpeedRanges mediaTimeForClipTime:]
  -[SpeedRanges clipTimeForMediaTime:]
  -[SpeedRanges didChange]
  -[SpeedRanges mediaTimeFloatForClipTime:]
  -[SpeedRanges removeShortRanges]
  -[SpeedRanges updateLinks]
  -[SpeedRanges speedRangeAtClipTime:]
  -[SpeedRanges editCount]
  -[SpeedRanges setEditCount:]
  -[SpeedRanges setOld:]
  -[SpeedRanges old]
  -[SpeedRanges setRamped:]
  -[SpeedRanges _removeBackToBackFreezes]
  -[SpeedRanges generateRamps]
  -[SpeedRanges testRamps]
  -[SpeedRanges testUberRamp]
  -[SpeedRanges plistRepresentation]
  -[SpeedRanges setFromAdjustmentData:]
  -[SpeedRanges mapClipTime:fromMap:]
  -[SpeedRanges ramped]


BurstClipStylePhoto : BurstClipStyle
 @property  NSString *transitionName
 @property  int transitionFrameDuration

  // instance methods
  -[BurstClipStylePhoto .cxx_destruct]
  -[BurstClipStylePhoto maximumDuration]
  -[BurstClipStylePhoto isSupported]
  -[BurstClipStylePhoto transitionName]
  -[BurstClipStylePhoto minimumDuration]
  -[BurstClipStylePhoto idealDuration]
  -[BurstClipStylePhoto setTransitionName:]
  -[BurstClipStylePhoto numberOfAvailableClips]
  -[BurstClipStylePhoto _minimumNumberOfContainedClips]
  -[BurstClipStylePhoto _idealNumberOfContainedClips]
  -[BurstClipStylePhoto idealContainedClipDuration]
  -[BurstClipStylePhoto maximumContainedClipDuration]
  -[BurstClipStylePhoto containedClipsWithoutTransitions]
  -[BurstClipStylePhoto _maximumNumberOfContainedClips]
  -[BurstClipStylePhoto minimumContainedClipDuration]
  -[BurstClipStylePhoto containedClipsWithInTransition:outTransition:]
  -[BurstClipStylePhoto transitionFrameDuration]
  -[BurstClipStylePhoto adjustDurationsOfClips:withInTransition:outTransition:]
  -[BurstClipStylePhoto setTransitionFrameDuration:]


KenBurnsClip : KonaClip <KonaClipMiroAutoEditAdditions>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  PVEffect *kbGeneratorEffect
 @property  KenBurnsInfo *kbInfo
 @property  PVEffect *kbEffect
 @property  unsigned long animationStyle
 @property  BOOL originalIsHEIF

  // class methods
  +[KenBurnsClip kenBurnsClipWithURL:]
  +[KenBurnsClip kenBurnsClipWithAssetRepresentation:]
  +[KenBurnsClip kenBurnsClipWithMovie:]
  +[KenBurnsClip kenBurnsClipWithPath:]

  // instance methods
  -[KenBurnsClip dealloc]
  -[KenBurnsClip copyWithZone:]
  -[KenBurnsClip isPortrait]
  -[KenBurnsClip aspectRatio]
  -[KenBurnsClip setAnimationStyle:]
  -[KenBurnsClip animationStyle]
  -[KenBurnsClip isLandscape]
  -[KenBurnsClip isSquare]
  -[KenBurnsClip isTall]
  -[KenBurnsClip isPano]
  -[KenBurnsClip clipType]
  -[KenBurnsClip hasVisualCharacteristic]
  -[KenBurnsClip hasPhotoCharacteristic]
  -[KenBurnsClip transform:fillDest:]
  -[KenBurnsClip autoEditShortestDurationWithBlueprint:]
  -[KenBurnsClip autoEditShortestIdealDurationWithBlueprint:]
  -[KenBurnsClip autoEditLongestDurationWithBlueprint:]
  -[KenBurnsClip panoDurationMultiplier]
  -[KenBurnsClip kbInfo]
  -[KenBurnsClip animationEffectID]
  -[KenBurnsClip kbGeneratorEffect]
  -[KenBurnsClip plistRepresentationFromProject:]
  -[KenBurnsClip originalIsHEIF]
  -[KenBurnsClip setContentsFromPlist:inProject:]
  -[KenBurnsClip setKbInfo:]
  -[KenBurnsClip setOriginalIsHEIF:]
  -[KenBurnsClip validateEffectRange:inProject:]
  -[KenBurnsClip kbEffect]
  -[KenBurnsClip mediaAspectRatio]


ClipTrack : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[ClipTrack nameForClipType:trackID:]

  // instance methods
  -[ClipTrack .cxx_destruct]
  -[ClipTrack clips]
  -[ClipTrack clipType]
  -[ClipTrack indexOfClip:]
  -[ClipTrack removeClip:]
  -[ClipTrack initWithClipType:trackID:]
  -[ClipTrack trackName]
  -[ClipTrack addClip:]
  -[ClipTrack insertClip:atIndex:]


RandomNumberGenerator : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long index
 @property  unsigned long seed

  // class methods
  +[RandomNumberGenerator randomNumberGeneratorWithSeed:]

  // instance methods
  -[RandomNumberGenerator index]
  -[RandomNumberGenerator seed]
  -[RandomNumberGenerator setIndex:]
  -[RandomNumberGenerator setSeed:]
  -[RandomNumberGenerator randomNumberBetweenZeroAndOne]
  -[RandomNumberGenerator randomNumberWithinRangeStart:rangeEnd:]


FrameGeneratorCacheInfo : NSObject /usr/lib/libc++.1.dylib
 @property  VideoMovie *movie
 @property  {?=qiIq} time
 @property  {CGSize=dd} size
 @property  double rotation

  // instance methods
  -[FrameGeneratorCacheInfo dealloc]
  -[FrameGeneratorCacheInfo size]
  -[FrameGeneratorCacheInfo time]
  -[FrameGeneratorCacheInfo setSize:]
  -[FrameGeneratorCacheInfo setTime:]
  -[FrameGeneratorCacheInfo rotation]
  -[FrameGeneratorCacheInfo setRotation:]
  -[FrameGeneratorCacheInfo movie]
  -[FrameGeneratorCacheInfo setMovie:]


FrameGenerator : NSObject /usr/lib/libc++.1.dylib
 @property  VideoMovie *movie
 @property  {CGSize=dd} maximumSize
 @property  {CGSize=dd} naturalSize
 @property  BOOL isQueueEmpty
 @property  BOOL disablePosterFrame
 @property  float rotation
 @property  long long maximumCacheSize

  // class methods
  +[FrameGenerator ensureCacheDirectoryExists]
  +[FrameGenerator noteApplicationDidReceiveMemoryWarning]
  +[FrameGenerator nukeCaches]
  +[FrameGenerator cachedFrameForMovie:atTime:nearby:actualTime:size:withRotation:]
  +[FrameGenerator posterCacheKeyForMovie:]
  +[FrameGenerator posterCacheDirectory]
  +[FrameGenerator setupCaches]
  +[FrameGenerator posterFrameForMovie:]
  +[FrameGenerator imageKeyForTime:size:withRotation:]
  +[FrameGenerator queueOne:times:completionHandler:]
  +[FrameGenerator queueNextItem]
  +[FrameGenerator setCachedFrame:forMovie:atTime:canPoster:size:withRotation:maximumCacheSize:]
  +[FrameGenerator queueGenerator:forTimes:highPriority:completionBlock:]
  +[FrameGenerator removeQueueEntriesForGenerator:]
  +[FrameGenerator changeTimesToHighPriority:forGenerator:]
  +[FrameGenerator pauseFetching]
  +[FrameGenerator resumeFetching]
  +[FrameGenerator isAnythingFetching]
  +[FrameGenerator logAllQueuedTimes]

  // instance methods
  -[FrameGenerator dealloc]
  -[FrameGenerator rotation]
  -[FrameGenerator setRotation:]
  -[FrameGenerator maximumSize]
  -[FrameGenerator setMaximumSize:]
  -[FrameGenerator applyRotation:]
  -[FrameGenerator naturalSize]
  -[FrameGenerator movie]
  -[FrameGenerator setMovie:]
  -[FrameGenerator imageGenerator]
  -[FrameGenerator maximumCacheSize]
  -[FrameGenerator cropImage:]
  -[FrameGenerator initWithMovie:maximumCacheSize:]
  -[FrameGenerator imageAtTime:]
  -[FrameGenerator clearImageGenerator]
  -[FrameGenerator imageFrom:]
  -[FrameGenerator applyCrop:]
  -[FrameGenerator disablePosterFrame]
  -[FrameGenerator requestedTimeTolerance:after:]
  -[FrameGenerator fetchTime:highPriority:resultBlock:]
  -[FrameGenerator cancelAllFetching]
  -[FrameGenerator cancelFetchingOutsideActiveSegment:until:maxRequestInFlight:]
  -[FrameGenerator isFetching:]
  -[FrameGenerator isQueueEmpty]
  -[FrameGenerator logQueuedTimes]
  -[FrameGenerator fetchTimeInQueue:]
  -[FrameGenerator changeTimesToHighPriority:]
  -[FrameGenerator setDisablePosterFrame:]


FrameGeneratorQueueObject : NSObject /usr/lib/libc++.1.dylib
 @property  AVAssetImageGenerator *generator
 @property  @? completionBlock
 @property  NSArray *times

  // class methods
  +[FrameGeneratorQueueObject queueObjectForGenerator:withTimes:completionBlock:]

  // instance methods
  -[FrameGeneratorQueueObject dealloc]
  -[FrameGeneratorQueueObject completionBlock]
  -[FrameGeneratorQueueObject setCompletionBlock:]
  -[FrameGeneratorQueueObject generator]
  -[FrameGeneratorQueueObject setGenerator:]
  -[FrameGeneratorQueueObject setTimes:]
  -[FrameGeneratorQueueObject times]


AltClipCollection : NSObject /usr/lib/libc++.1.dylib <NSFastEnumeration, NSCopying>
 @property  NSMutableDictionary *clips
 @property  <AltAspect> *parentClip
 @property  NSArray *allKeys
 @property  NSArray *allValues
 @property  unsigned long count

  // class methods
  +[AltClipCollection recommendedAspects]
  +[AltClipCollection recommendedAdditionalAspects]

  // instance methods
  -[AltClipCollection init]
  -[AltClipCollection copyWithZone:]
  -[AltClipCollection count]
  -[AltClipCollection allKeys]
  -[AltClipCollection countByEnumeratingWithState:objects:count:]
  -[AltClipCollection initWithParent:]
  -[AltClipCollection allValues]
  -[AltClipCollection objectForKeyedSubscript:]
  -[AltClipCollection .cxx_destruct]
  -[AltClipCollection setObject:forKeyedSubscript:]
  -[AltClipCollection setClips:]
  -[AltClipCollection clips]
  -[AltClipCollection setParentClip:]
  -[AltClipCollection parentClip]
  -[AltClipCollection objectClosestToKeyedSubscript:]


CompoundClip : KenBurnsClip <CompoundClipInformation>
 @property  KenBurnsClip *kenBurnsClip
 @property  double minimumPhotoDuration
 @property  double idealPhotoDuration
 @property  double maximumPhotoDuration
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CompoundClip init]
  -[CompoundClip copyWithZone:]
  -[CompoundClip .cxx_destruct]
  -[CompoundClip containedClips]
  -[CompoundClip kenBurnsClip]
  -[CompoundClip setMinimumPhotoDuration:]
  -[CompoundClip setIdealPhotoDuration:]
  -[CompoundClip setMaximumPhotoDuration:]
  -[CompoundClip initWithKenBurnsClip:]
  -[CompoundClip turnOffKenBurnsForClips:]
  -[CompoundClip addTransitionsWithName:transitionDuration:transitionEffectProperties:betweenClips:]
  -[CompoundClip setKenBurnsClip:]
  -[CompoundClip takePropertiesFromKenBurnsClip:]
  -[CompoundClip minimumPhotoDuration]
  -[CompoundClip idealPhotoDuration]
  -[CompoundClip expandsEditList]
  -[CompoundClip addTransitionsWithName:transitionDuration:betweenClips:]
  -[CompoundClip maximumPhotoDuration]


CompositionTrackGroup : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *timePitchAlgorithm
 @property  NSMutableArray *extraAudioTrackGroups
 @property  ^{opaqueCMFormatDescription=} audioFormatDescription
 @property  BOOL seenSpeedClip
 @property  BOOL seenMoreThanOneASBD
 @property  AVMutableAudioMixInputParameters *audioParameters
 @property  NSDictionary *fmTrackInfoDict
 @property  {?=qiIq} lastRampToZeroEnd
 @property  BOOL isFlexMusic
 @property  NSString *label
 @property  AVMutableCompositionTrack *videoTrack
 @property  NSArray *videoSegments
 @property  AVMutableCompositionTrack *audioTrack
 @property  NSArray *audioSegments
 @property  NSString *preferredAudioTimePitchAlgorithm
 @property  int actualVideoTrackID
 @property  int usableVideoTrackID
 @property  {?=qiIq} cursor
 @property  {?=qiIq} cursorAtLastVideoInsertion
 @property  {?=qiIq} timeOfLastVolumeChange
 @property  {?=qiIq} timeOfLastRequest
 @property  float volumeAtLastVolumeChange
 @property  float volumeChangePending
 @property  {?=qiIq} fadeOutStart
 @property  {?=qiIq} fadeOutDuration
 @property  AVMutableComposition *composition
 @property  BOOL isExporting

  // class methods
  +[CompositionTrackGroup visualDescriptionForSegments:]

  // instance methods
  -[CompositionTrackGroup dealloc]
  -[CompositionTrackGroup cursor]
  -[CompositionTrackGroup setLabel:]
  -[CompositionTrackGroup apply:]
  -[CompositionTrackGroup label]
  -[CompositionTrackGroup initWithLabel:]
  -[CompositionTrackGroup audioParameters]
  -[CompositionTrackGroup setFadeOutDuration:]
  -[CompositionTrackGroup fadeOutDuration]
  -[CompositionTrackGroup validate]
  -[CompositionTrackGroup composition]
  -[CompositionTrackGroup audioFormatDescription]
  -[CompositionTrackGroup setComposition:]
  -[CompositionTrackGroup videoSegments]
  -[CompositionTrackGroup videoTrack]
  -[CompositionTrackGroup setVideoTrack:]
  -[CompositionTrackGroup markDirty]
  -[CompositionTrackGroup isExporting]
  -[CompositionTrackGroup setAudioTrack:]
  -[CompositionTrackGroup setFadeOutStart:]
  -[CompositionTrackGroup actualVideoTrackID]
  -[CompositionTrackGroup requestVolumeRampFromStartVolume:toEndVolume:timeRange:]
  -[CompositionTrackGroup requestVolume:atTime:]
  -[CompositionTrackGroup requestVolumeRampFromStartVolume:toEndVolume:timeRange:fillEmptySegment:]
  -[CompositionTrackGroup audioTrack]
  -[CompositionTrackGroup commitPendingVolumeToTime:]
  -[CompositionTrackGroup applyPaddingToTime:]
  -[CompositionTrackGroup applyAudioMixParameters:]
  -[CompositionTrackGroup applyCompositionItemAsLoopedAudio:forTimeRange:]
  -[CompositionTrackGroup applyCompositionItem:atTime:]
  -[CompositionTrackGroup setPreferredAudioTimePitchAlgorithm:]
  -[CompositionTrackGroup setIsExporting:]
  -[CompositionTrackGroup usableVideoTrackID]
  -[CompositionTrackGroup setAudioFormatDescription:]
  -[CompositionTrackGroup removeExtraAudioTrackGroups]
  -[CompositionTrackGroup containsVideoSegments]
  -[CompositionTrackGroup containsAudioSegments]
  -[CompositionTrackGroup setSeenSpeedClip:]
  -[CompositionTrackGroup setSeenMoreThanOneASBD:]
  -[CompositionTrackGroup resetVolumeState]
  -[CompositionTrackGroup extraAudioTrackGroups]
  -[CompositionTrackGroup setExtraAudioTrackGroups:]
  -[CompositionTrackGroup _updateIsFlexMusic:]
  -[CompositionTrackGroup lastRampToZeroEnd]
  -[CompositionTrackGroup preferredAudioTimePitchAlgorithm]
  -[CompositionTrackGroup apply_version2_to_track:withSegments:assets:]
  -[CompositionTrackGroup apply_version2:]
  -[CompositionTrackGroup setAudioParameters:]
  -[CompositionTrackGroup setTimeOfLastVolumeChange:]
  -[CompositionTrackGroup setVolumeAtLastVolumeChange:]
  -[CompositionTrackGroup setVolumeChangePending:]
  -[CompositionTrackGroup setTimeOfLastRequest:]
  -[CompositionTrackGroup setLastRampToZeroEnd:]
  -[CompositionTrackGroup fadeOutStart]
  -[CompositionTrackGroup linearFadeOutValueForTime:]
  -[CompositionTrackGroup volumeAtLastVolumeChange]
  -[CompositionTrackGroup timeOfLastVolumeChange]
  -[CompositionTrackGroup isFlexMusic]
  -[CompositionTrackGroup setFadedVolumeRampFromStartVolume:toEndVolume:timeRange:]
  -[CompositionTrackGroup volumeChangePending]
  -[CompositionTrackGroup commitVolumeRampFromStartVolume:toEndVolume:timeRange:]
  -[CompositionTrackGroup shouldCommitVolume:]
  -[CompositionTrackGroup containsSegments]
  -[CompositionTrackGroup addExtraAudioTrackGroup:]
  -[CompositionTrackGroup asbd:isEqualTo:]
  -[CompositionTrackGroup applyCompositionItem:]
  -[CompositionTrackGroup apply_version1]
  -[CompositionTrackGroup audioSegments]
  -[CompositionTrackGroup cursorAtLastVideoInsertion]
  -[CompositionTrackGroup timeOfLastRequest]
  -[CompositionTrackGroup timePitchAlgorithm]
  -[CompositionTrackGroup setTimePitchAlgorithm:]
  -[CompositionTrackGroup seenSpeedClip]
  -[CompositionTrackGroup seenMoreThanOneASBD]
  -[CompositionTrackGroup fmTrackInfoDict]
  -[CompositionTrackGroup setFmTrackInfoDict:]
  -[CompositionTrackGroup setIsFlexMusic:]
  -[CompositionTrackGroup shouldAddVolumePointsAsWorkaround]
  -[CompositionTrackGroup applyCompositionItem:videoOnly:]
  -[CompositionTrackGroup applyCompositionItem:atTime:videoOnly:]
  -[CompositionTrackGroup applyFlexAudioMix:]
  -[CompositionTrackGroup fixAVFoundationsMistake]


MBProjectClipsLoader : MBClipsLoader
 @property  NSMutableDictionary *identifierURLsToClipsMap
 @property  Project *project
 @property  NSMutableArray *assetURLs

  // class methods
  +[MBProjectClipsLoader clipFormatValid:validateVideoFormat:]

  // instance methods
  -[MBProjectClipsLoader dealloc]
  -[MBProjectClipsLoader load]
  -[MBProjectClipsLoader .cxx_destruct]
  -[MBProjectClipsLoader clips]
  -[MBProjectClipsLoader project]
  -[MBProjectClipsLoader setProject:]
  -[MBProjectClipsLoader setIdentifierURLsToClipsMap:]
  -[MBProjectClipsLoader projectMoviesDidChange:]
  -[MBProjectClipsLoader projectDidCleanupUnusedMediaFiles:]
  -[MBProjectClipsLoader identifierURLsToClipsMap]
  -[MBProjectClipsLoader removeClipWithURL:]
  -[MBProjectClipsLoader assetURLs]
  -[MBProjectClipsLoader setAssetURLs:]
  -[MBProjectClipsLoader initWithProject:showOnlyFavorites:]
  -[MBProjectClipsLoader loadClipAtPath:]
  -[MBProjectClipsLoader projectDidUndoOrRedo:]
  -[MBProjectClipsLoader countForAllClips]


MultiUpClip : MovieClip <CompoundClipInformation>
 @property  int type
 @property  NSArray *containedClips
 @property  PVEffect *multiUpEffect
 @property  NSMutableDictionary *multiUpEffectSettings
 @property  NSString *sequentialEffectID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MultiUpClip init]
  -[MultiUpClip copyWithZone:]
  -[MultiUpClip type]
  -[MultiUpClip setType:]
  -[MultiUpClip .cxx_destruct]
  -[MultiUpClip setDuration:]
  -[MultiUpClip setStartOffset:]
  -[MultiUpClip maxDuration]
  -[MultiUpClip movie]
  -[MultiUpClip initWithClip:]
  -[MultiUpClip containedClips]
  -[MultiUpClip speedRanges]
  -[MultiUpClip isMultiUp]
  -[MultiUpClip setContainedClips:]
  -[MultiUpClip setMultiUpEffectSettings:]
  -[MultiUpClip setSequentialEffectID:]
  -[MultiUpClip plistRepresentationFromProject:]
  -[MultiUpClip setContentsFromPlist:inProject:]
  -[MultiUpClip validateEffectRange:inProject:]
  -[MultiUpClip expandsEditList]
  -[MultiUpClip sequentialEffectID]
  -[MultiUpClip multiUpEffect]
  -[MultiUpClip multiUpEffectSettings]


IrisMovieClip : MovieClip
 @property  BOOL front
 @property  KenBurnsInfo *kenBurnsInfo
 @property  PVEffect *kenBurnsEffect
 @property  PVEffect *frameBlendEffect
 @property  IrisMovieClip *shiftedClip

  // class methods
  +[IrisMovieClip irisMovieClipWithURL:asset:front:]

  // instance methods
  -[IrisMovieClip copyWithZone:]
  -[IrisMovieClip .cxx_destruct]
  -[IrisMovieClip isFront]
  -[IrisMovieClip maxDuration]
  -[IrisMovieClip transform:fillDest:]
  -[IrisMovieClip validateEffectRange:inProject:]
  -[IrisMovieClip setFront:]
  -[IrisMovieClip kenBurnsEffect]
  -[IrisMovieClip setKenBurnsEffect:]
  -[IrisMovieClip kenBurnsInfo]
  -[IrisMovieClip setKenBurnsInfo:]
  -[IrisMovieClip frameBlendEffect]
  -[IrisMovieClip shiftedClip]
  -[IrisMovieClip setFrameBlendEffect:]


FIFOCache : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[FIFOCache noteApplicationDidReceiveMemoryWarning]

  // instance methods
  -[FIFOCache dealloc]
  -[FIFOCache copyWithZone:]
  -[FIFOCache initWithCapacity:]
  -[FIFOCache count]
  -[FIFOCache objectEnumerator]
  -[FIFOCache removeAllObjects]
  -[FIFOCache objectForKey:]
  -[FIFOCache removeObjectForKey:]
  -[FIFOCache setObject:forKey:]
  -[FIFOCache addObjectsFromDictionary:]


IrisClipStyleNone : IrisClipStyle
  // instance methods
  -[IrisClipStyleNone maximumDuration]
  -[IrisClipStyleNone minimumDuration]
  -[IrisClipStyleNone idealDuration]
  -[IrisClipStyleNone containedClipsWithInTransition:outTransition:]


DetectedFace : NSObject /usr/lib/libc++.1.dylib
 @property  NSNumber *size
 @property  {CGPoint=dd} leftEye
 @property  {CGPoint=dd} rightEye
 @property  {CGPoint=dd} mouthCenter
 @property  {CGPoint=dd} faceCenter
 @property  NSNumber *confidence
 @property  int trackID
 @property  int frames
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} faceRect
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} approximateFaceRect

  // instance methods
  -[DetectedFace .cxx_destruct]
  -[DetectedFace size]
  -[DetectedFace confidence]
  -[DetectedFace faceRect]
  -[DetectedFace setFaceRect:]
  -[DetectedFace setLeftEye:]
  -[DetectedFace setRightEye:]
  -[DetectedFace leftEye]
  -[DetectedFace rightEye]
  -[DetectedFace setSize:]
  -[DetectedFace trackID]
  -[DetectedFace setConfidence:]
  -[DetectedFace frames]
  -[DetectedFace setFrames:]
  -[DetectedFace setTrackID:]
  -[DetectedFace setFaceCenter:]
  -[DetectedFace setApproximateFaceRect:]
  -[DetectedFace approximateFaceRect]
  -[DetectedFace mouthCenter]
  -[DetectedFace faceCenter]
  -[DetectedFace initWithFaceSize:leftEye:rightEye:mouthCenter:faceCenter:confidence:trackID:frames:]
  -[DetectedFace initWithFaceFeature:withImageSize:]
  -[DetectedFace setMouthCenter:]


SolidColorGeneratorClip : MotionGeneratorClip
 @property  UIColor *color

  // instance methods
  -[SolidColorGeneratorClip copyWithZone:]
  -[SolidColorGeneratorClip .cxx_destruct]
  -[SolidColorGeneratorClip color]
  -[SolidColorGeneratorClip setColor:]
  -[SolidColorGeneratorClip generatorEffect]
  -[SolidColorGeneratorClip plistRepresentationFromProject:]
  -[SolidColorGeneratorClip setContentsFromPlist:inProject:]


TransitionClip : KonaClip
 @property  NSString *transitionName
 @property  int transitionDirection
 @property  int overlapType
 @property  int type
 @property  BOOL forcedNoOverlap
 @property  int audioEnabledType
 @property  float effectRangeBias
 @property  NSDictionary *transitionEffectSettings
 @property  {?={?=qiIq}{?=qiIq}} effectRange

  // class methods
  +[TransitionClip overlapTypeForName:]

  // instance methods
  -[TransitionClip copyWithZone:]
  -[TransitionClip type]
  -[TransitionClip setType:]
  -[TransitionClip .cxx_destruct]
  -[TransitionClip transitionDirection]
  -[TransitionClip setTransitionDirection:]
  -[TransitionClip audioEnabled]
  -[TransitionClip transitionName]
  -[TransitionClip clipType]
  -[TransitionClip effectRange]
  -[TransitionClip transitionEatLeft]
  -[TransitionClip transitionEatRight]
  -[TransitionClip biasedDuration]
  -[TransitionClip setTransitionName:]
  -[TransitionClip overlapType]
  -[TransitionClip setTransitionEffectSettings:]
  -[TransitionClip setEffectRangeBias:]
  -[TransitionClip transitionEffectSettings]
  -[TransitionClip plistRepresentationFromProject:]
  -[TransitionClip setContentsFromPlist:inProject:]
  -[TransitionClip forcedNoOverlap]
  -[TransitionClip overlapIsCurrentlyForced]
  -[TransitionClip setTransitionEatLeft:]
  -[TransitionClip setTransitionEatRight:]
  -[TransitionClip effectRangeBias]
  -[TransitionClip biasedStartOffset]
  -[TransitionClip setForcedNoOverlap:]
  -[TransitionClip transitionIDFromName:]
  -[TransitionClip setAudioEnabledType:]
  -[TransitionClip audioEnabledType]


ExportController : NSObject /usr/lib/libc++.1.dylib
 @property  Project *project
 @property  NSArray *presets
 @property  NSString *currentPreset
 @property  <ExportDelegate> *delegate
 @property  <MovieControllerExportProtocol> *movieController
 @property  NSString *exportPath
 @property  NSArray *exportedPaths
 @property  BOOL exportToPhotos
 @property  NSTimer *progressTimer
 @property  unsigned long exportingIndexPresets
 @property  double exportAspect
 @property  BEAlertController *testModeAutoExportCompletedAlert

  // class methods
  +[ExportController audioDataRateForPreset:]
  +[ExportController inTestMode]
  +[ExportController testModeProjectBundle]
  +[ExportController testModeRepeatCount]
  +[ExportController dataRateForPreset:]
  +[ExportController videoDataRateForPreset:]
  +[ExportController dataRateForiCloudHD]
  +[ExportController dataRateForiCloud4G]
  +[ExportController testModeCopyToCameraRoll]
  +[ExportController testModeNoDialogAtEnd]
  +[ExportController exitTestMode]
  +[ExportController exportControllerClass]
  +[ExportController testModeProjectPlaceholder]
  +[ExportController testModeProject:]
  +[ExportController testModeType]
  +[ExportController testModeMaxFrameToProcess]
  +[ExportController currentTitle:]
  +[ExportController estimatedVideoFileSizeForDuration:frameRate:preset:project:]

  // instance methods
  -[ExportController dealloc]
  -[ExportController delegate]
  -[ExportController setDelegate:]
  -[ExportController progress]
  -[ExportController cancelExport]
  -[ExportController thumbnailImage]
  -[ExportController currentPreset]
  -[ExportController setCurrentPreset:]
  -[ExportController closeSession]
  -[ExportController stopProgressTimer]
  -[ExportController startProgressTimer]
  -[ExportController presets]
  -[ExportController setMovieController:]
  -[ExportController movieController]
  -[ExportController progressTimer]
  -[ExportController setProgressTimer:]
  -[ExportController setPresets:]
  -[ExportController setExportingIndexPresets:]
  -[ExportController setExportPath:]
  -[ExportController exportingIndexPresets]
  -[ExportController nextPreset]
  -[ExportController hasExistingFile]
  -[ExportController updateProgressViewWithProgress:reduced:]
  -[ExportController continueExportAfterDelay]
  -[ExportController informDelegateOfCompletion]
  -[ExportController serviceProgressTimer:]
  -[ExportController beginAsynchronousExport]
  -[ExportController noteSessionProgressed:]
  -[ExportController metadataToAdd]
  -[ExportController exportPath]
  -[ExportController project]
  -[ExportController initWithWithProject:presets:exportToPhotos:delegate:]
  -[ExportController exportedPaths]
  -[ExportController exportAspect]
  -[ExportController setExportAspect:]
  -[ExportController setProject:]
  -[ExportController createMovieController]
  -[ExportController setExportToPhotos:]
  -[ExportController releaseMovieController]
  -[ExportController exportToPhotos]
  -[ExportController setExportedPaths:]
  -[ExportController writeVideoFileToSavedPhotoAlbum:]
  -[ExportController displayError:]
  -[ExportController displayExportedToPhotos]
  -[ExportController displayDiskSpaceError]
  -[ExportController displayAlertTitle:message:]
  -[ExportController setTestModeAutoExportCompletedAlert:]
  -[ExportController testModeAutoExportCompletedAlert]


GeocodeRequest : NSObject /usr/lib/libc++.1.dylib
 @property  NSMutableArray *completionHandlers

  // instance methods
  -[GeocodeRequest init]
  -[GeocodeRequest .cxx_destruct]
  -[GeocodeRequest addCompletionHandler:]
  -[GeocodeRequest completionHandlers]
  -[GeocodeRequest setCompletionHandlers:]


MovieCompositionItem : CompositionItem
 @property  AVAsset *asset
 @property  AVURLAsset *audioProxyAsset

  // instance methods
  -[MovieCompositionItem .cxx_destruct]
  -[MovieCompositionItem asset]
  -[MovieCompositionItem setAsset:]
  -[MovieCompositionItem audioAsset]
  -[MovieCompositionItem speedRangesForSourceRange:destinationRange:]
  -[MovieCompositionItem segmentWithCharacteristic:sourceRange:destinationRange:]
  -[MovieCompositionItem audioTrackSegmentsWithDestinationTime:paddedFromTime:]
  -[MovieCompositionItem audioTrackSegmentsLoopedForDestinationTimeRange:]
  -[MovieCompositionItem applySpeed:]
  -[MovieCompositionItem hasVideoContent]
  -[MovieCompositionItem videoTrackSegmentsWithDestinationRange:]
  -[MovieCompositionItem audioTrackSegmentsWithDestinationTime:]
  -[MovieCompositionItem initWithClip:]
  -[MovieCompositionItem setAudioProxyAsset:]
  -[MovieCompositionItem audioProxyAsset]


VEiOSSharedObject : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[VEiOSSharedObject sharedInstance]
  +[VEiOSSharedObject purgeSharedInstance]
  +[VEiOSSharedObject sharedInstanceExists]


ProjectListModel : NSObject /usr/lib/libc++.1.dylib
 @property  NSMetadataQuery *ubiquitousQuery
 @property  NSMutableArray *maybeInTheCloud
 @property  NSMutableArray *cloudDownloadsToRestart
 @property  <CloudSynchDelegate> *cloudSynchDelegate

  // class methods
  +[ProjectListModel sharedInstance]
  +[ProjectListModel unscannedMediaFromPaths:]

  // instance methods
  -[ProjectListModel dealloc]
  -[ProjectListModel projects]
  -[ProjectListModel queryTheCloud]
  -[ProjectListModel projectPathsInDirectory:otherPaths:]
  -[ProjectListModel projectPathsInDirectory:]
  -[ProjectListModel maybeInTheCloud]
  -[ProjectListModel removeQueryObservers]
  -[ProjectListModel projectPathsInPrivateDocumentsDirectory]
  -[ProjectListModel deleteProject:]
  -[ProjectListModel appendProject:]
  -[ProjectListModel cloudDownloadsToRestart]
  -[ProjectListModel iTunesSharedProjects]
  -[ProjectListModel jailedProjects]
  -[ProjectListModel projectPathsInImportExportDirectoryAndOtherPaths:]
  -[ProjectListModel appendJailedProject:]
  -[ProjectListModel appendiTunesSharedProject:]
  -[ProjectListModel unloadProjectAtIndex:]
  -[ProjectListModel cloudSynchDelegate]
  -[ProjectListModel ubiquitousQuery]
  -[ProjectListModel moveSafeSaveProject:]
  -[ProjectListModel startCloudQuery]
  -[ProjectListModel addProject:]
  -[ProjectListModel projectWithPath:]
  -[ProjectListModel removeProject:]
  -[ProjectListModel stopCloudQuery]
  -[ProjectListModel skeletalProjectDidDownload:]
  -[ProjectListModel projectPathDidChange:]
  -[ProjectListModel addQueryObservers]
  -[ProjectListModel setUbiquitousQuery:]
  -[ProjectListModel didStart:]
  -[ProjectListModel gathering:]
  -[ProjectListModel finishGathering:]
  -[ProjectListModel didUpdate:]
  -[ProjectListModel queueTrashOrphanedRenderedMovies]
  -[ProjectListModel pendingCloudProjectWithPath:]
  -[ProjectListModel trashOrphanedRenderedMovies]
  -[ProjectListModel noteApplicationWillTerminate:]
  -[ProjectListModel pendingCloudProjectsCount]
  -[ProjectListModel unscannedMedia]
  -[ProjectListModel createProjectPlaceholders]
  -[ProjectListModel loadProjectAtIndex:]
  -[ProjectListModel unloadAllExceptProject:]
  -[ProjectListModel unloadProject:]
  -[ProjectListModel undeleteProject:]
  -[ProjectListModel deleteUneditedProject:]
  -[ProjectListModel duplicateProject:completionHandler:]
  -[ProjectListModel moveJailedProjectToPrivateProject:]
  -[ProjectListModel placeHolderForProject:]
  -[ProjectListModel verifyCloudDownloads]
  -[ProjectListModel setCloudDownloadsToRestart:]
  -[ProjectListModel setCloudSynchDelegate:]
  -[ProjectListModel setMaybeInTheCloud:]


FavoriteManager : NSObject /usr/lib/libc++.1.dylib
 @property  NSMutableDictionary *favoriteDictionary
 @property  NSObject<OS_dispatch_queue> *serialQueue
 @property  NSObject<OS_dispatch_group> *serialQueueGroup
 @property  NSRecursiveLock *dictLock
 @property  BOOL migrating

  // class methods
  +[FavoriteManager sharedFavoriteManager]
  +[FavoriteManager trimRanges:toMovie:]
  +[FavoriteManager subtractRange:fromRange:]
  +[FavoriteManager favoriteRanges:containRange:]
  +[FavoriteManager collapseRanges:]

  // instance methods
  -[FavoriteManager .cxx_destruct]
  -[FavoriteManager _init]
  -[FavoriteManager serialQueue]
  -[FavoriteManager isMigrating]
  -[FavoriteManager migrate]
  -[FavoriteManager setSerialQueue:]
  -[FavoriteManager setMigrating:]
  -[FavoriteManager favoriteRangesForMovie:]
  -[FavoriteManager loadFavoriteDictionary]
  -[FavoriteManager propertyListFileURL]
  -[FavoriteManager serialQueueGroup]
  -[FavoriteManager dictLock]
  -[FavoriteManager favoriteDictionary]
  -[FavoriteManager _setFavoriteInfo:forURL:]
  -[FavoriteManager _removeFavoriteInfoForURL:]
  -[FavoriteManager FAILSAFE_isInvalidRangesArray:]
  -[FavoriteManager saveFavoriteDictionary]
  -[FavoriteManager _favoriteInfoForURL:]
  -[FavoriteManager _setFavoriteRanges:forURL:]
  -[FavoriteManager removeFavoriteRange:forMovie:]
  -[FavoriteManager addFavoriteRange:forMovie:shouldCollapse:]
  -[FavoriteManager waitForOutstandingWritingToComplete]
  -[FavoriteManager removeAllFavoritesForMovie:]
  -[FavoriteManager unfavoriteRange:forMovie:]
  -[FavoriteManager addFavoriteRange:forMovie:]
  -[FavoriteManager favoriteRange:existsForMovie:]
  -[FavoriteManager favoritesExistInRange:forMovie:]
  -[FavoriteManager _favoriteRangesForURL:]
  -[FavoriteManager combinedRCRangeArrayFromNSRangeArray:]
  -[FavoriteManager setFavoriteDictionary:]
  -[FavoriteManager setSerialQueueGroup:]
  -[FavoriteManager setDictLock:]


PlaybackCapabilities : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[PlaybackCapabilities canPlaybackThree1080P30Streams]
  +[PlaybackCapabilities canPlaybackThree1080P60Streams]
  +[PlaybackCapabilities canDropFrameWhenSpeedUp]


MapLocation : NSObject /usr/lib/libc++.1.dylib <NSCoding, NSCopying>
 @property  int state
 @property  NSString *name
 @property  NSString *countryName
 @property  double latitude
 @property  double longitude
 @property  NSMutableArray *completionHandlers
 @property  BOOL resolving
 @property  BOOL resolved
 @property  NSString *customName

  // class methods
  +[MapLocation defaultLocation]
  +[MapLocation objectFromPlist:inProject:]
  +[MapLocation mapLocationWithLatitude:longitude:]
  +[MapLocation mapLocationWithMapItem:]
  +[MapLocation mapLocationWithLocationCoordinate:]
  +[MapLocation mapLocationWithLocation:]

  // instance methods
  -[MapLocation init]
  -[MapLocation name]
  -[MapLocation copyWithZone:]
  -[MapLocation compare:]
  -[MapLocation encodeWithCoder:]
  -[MapLocation initWithCoder:]
  -[MapLocation .cxx_destruct]
  -[MapLocation setName:]
  -[MapLocation state]
  -[MapLocation setResolved:]
  -[MapLocation isResolved]
  -[MapLocation setState:]
  -[MapLocation stringRepresentation]
  -[MapLocation latitude]
  -[MapLocation longitude]
  -[MapLocation setCountryName:]
  -[MapLocation countryName]
  -[MapLocation setLongitude:]
  -[MapLocation setLatitude:]
  -[MapLocation completionHandlers]
  -[MapLocation setCompletionHandlers:]
  -[MapLocation resolveWithCompletionHandler:]
  -[MapLocation isEqualToLocation:]
  -[MapLocation _resolveWithCompletionHandler:]
  -[MapLocation setCustomName:]
  -[MapLocation customName]
  -[MapLocation plistRepresentation]
  -[MapLocation setResolving:]
  -[MapLocation hasSameCoordinateAsLocation:tolerance:]
  -[MapLocation isResolving]
  -[MapLocation hasValidCoordinate]


MBClipsLoader : NSObject /usr/lib/libc++.1.dylib
 @property  NSMutableArray *clips
 @property  BOOL showOnlyFavorites
 @property  BOOL loading
 @property  NSArray *previousClips

  // instance methods
  -[MBClipsLoader load]
  -[MBClipsLoader .cxx_destruct]
  -[MBClipsLoader stopLoading]
  -[MBClipsLoader startLoading]
  -[MBClipsLoader isLoading]
  -[MBClipsLoader setLoading:]
  -[MBClipsLoader setClips:]
  -[MBClipsLoader clips]
  -[MBClipsLoader initWithShowOnlyFavorites:]
  -[MBClipsLoader showOnlyFavorites]
  -[MBClipsLoader previousClips]
  -[MBClipsLoader setShowOnlyFavorites:]
  -[MBClipsLoader setPreviousClips:]


MovieClip : KonaClip
  // class methods
  +[MovieClip movieClipWithURL:]
  +[MovieClip movieClipWithURL:avAsset:]
  +[MovieClip audioEnabledByDefault]

  // instance methods
  -[MovieClip aspectRatio]
  -[MovieClip speed]
  -[MovieClip clipType]
  -[MovieClip isFreezeFrame]
  -[MovieClip hasVisualCharacteristic]
  -[MovieClip transform:fillDest:]
  -[MovieClip hasAudioCharacteristic]
  -[MovieClip rawSourceDuration]
  -[MovieClip transform:fillDest:applyAnamorphic:]
  -[MovieClip clearFreezeFrame]
  -[MovieClip initializeFromURL:asset:]


PHImageAssetWriter : PHAssetWriter
 @property  NSData *data

  // instance methods
  -[PHImageAssetWriter .cxx_destruct]
  -[PHImageAssetWriter data]
  -[PHImageAssetWriter setData:]
  -[PHImageAssetWriter request]
  -[PHImageAssetWriter transfer]
  -[PHImageAssetWriter estimatedOutputSizeWithError:]


ProjectAssetManagerRepair : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long numberOfBrokenEditItems
 @property  unsigned long numberOfRepairedEditItems
 @property  unsigned long numberOfUnrepairedEditItems
 @property  unsigned long numberOfOfflineMovies

  // instance methods
  -[ProjectAssetManagerRepair numberOfBrokenEditItems]
  -[ProjectAssetManagerRepair numberOfUnrepairedEditItems]
  -[ProjectAssetManagerRepair numberOfRepairedEditItems]
  -[ProjectAssetManagerRepair numberOfOfflineMovies]
  -[ProjectAssetManagerRepair setNumberOfBrokenEditItems:]
  -[ProjectAssetManagerRepair setNumberOfRepairedEditItems:]
  -[ProjectAssetManagerRepair setNumberOfUnrepairedEditItems:]
  -[ProjectAssetManagerRepair setNumberOfOfflineMovies:]


ProjectAssetManager : NSObject /usr/lib/libc++.1.dylib <PHAssetRepresentationDownloadObserver>
 @property  Project *project
 @property  NSDictionary *movieMatches
 @property  MBProjectClipsLoader *sharedClipsLoader
 @property  BOOL cacheRepairableEditItems
 @property  NSArray *cachedRepairableEditItems
 @property  unsigned long numberOfWorkItems
 @property  unsigned long numberOfCompletedWorkItems
 @property  double downloadProgress
 @property  BOOL downloading
 @property  NSSet *offlineAssetRepresentations
 @property  BOOL automaticallyStartDownloads
 @property  <ProjectAssetManagerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ProjectAssetManager dealloc]
  -[ProjectAssetManager delegate]
  -[ProjectAssetManager setDelegate:]
  -[ProjectAssetManager .cxx_destruct]
  -[ProjectAssetManager isDownloading]
  -[ProjectAssetManager initWithProject:]
  -[ProjectAssetManager cancelDownloads]
  -[ProjectAssetManager downloadProgress]
  -[ProjectAssetManager setDownloadProgress:]
  -[ProjectAssetManager setDownloading:]
  -[ProjectAssetManager project]
  -[ProjectAssetManager setProject:]
  -[ProjectAssetManager hasMissingAssets]
  -[ProjectAssetManager connectivityDidChange:]
  -[ProjectAssetManager projectDidFinishAllEditing:]
  -[ProjectAssetManager cacheRepairableEditItems]
  -[ProjectAssetManager cachedRepairableEditItems]
  -[ProjectAssetManager setCachedRepairableEditItems:]
  -[ProjectAssetManager repairableEditItems]
  -[ProjectAssetManager editItemsMatchingCriteria:breakOnFirst:]
  -[ProjectAssetManager assetURLsMatchingCriteria:breakOnFirst:]
  -[ProjectAssetManager numberOfAssetsMatchingCriteria:]
  -[ProjectAssetManager downloadOfflineAssetsIfNecessary]
  -[ProjectAssetManager hasOfflineAssets]
  -[ProjectAssetManager automaticallyStartDownloads]
  -[ProjectAssetManager setOfflineAssetRepresentations:]
  -[ProjectAssetManager updateDownloadProgress]
  -[ProjectAssetManager setAutomaticallyStartDownloads:]
  -[ProjectAssetManager offlineAssetRepresentations]
  -[ProjectAssetManager _updateDownloadProgress]
  -[ProjectAssetManager predicateForDuration:]
  -[ProjectAssetManager predicateForCreationDate:tolerance:]
  -[ProjectAssetManager fetchOptionsForEditItem:creationDateTolerance:]
  -[ProjectAssetManager mismatchedEditItems]
  -[ProjectAssetManager matchingAssetsForEditItem:creationDateTolerance:]
  -[ProjectAssetManager setSharedClipsLoader:]
  -[ProjectAssetManager sharedClipsLoader]
  -[ProjectAssetManager repairEditItems:]
  -[ProjectAssetManager setCacheRepairableEditItems:]
  -[ProjectAssetManager setNumberOfWorkItems:]
  -[ProjectAssetManager setNumberOfCompletedWorkItems:]
  -[ProjectAssetManager matchLocalMovies]
  -[ProjectAssetManager matchLibraryAssets]
  -[ProjectAssetManager numberOfCompletedWorkItems]
  -[ProjectAssetManager postProgressNotification]
  -[ProjectAssetManager numberOfWorkItems]
  -[ProjectAssetManager filePathForAdjustedVideoIdentifierURL:]
  -[ProjectAssetManager projectOriginalImageForIdentifierURL:]
  -[ProjectAssetManager localOriginalImageForIdentifierURL:]
  -[ProjectAssetManager downloadStateOfAssetRepresentationDidChange:previousState:currentState:]
  -[ProjectAssetManager downloadOfAssetRepresentation:didProgress:]
  -[ProjectAssetManager numberOfMissingAssets]
  -[ProjectAssetManager hasAssetsInPhotosTrash:]
  -[ProjectAssetManager numberOfMismatchedAssets]
  -[ProjectAssetManager mismatchedDurationEditItems]
  -[ProjectAssetManager hasMismatchedAssets]
  -[ProjectAssetManager hasMismatchedDurationAssets]
  -[ProjectAssetManager hasModifiedAssets]
  -[ProjectAssetManager numberOfOfflineAssets]
  -[ProjectAssetManager offlineEditItems]
  -[ProjectAssetManager repairMissingAssets]
  -[ProjectAssetManager repairMismatchedAssets]
  -[ProjectAssetManager hasProjectAssetForIdentifierURL:]
  -[ProjectAssetManager originalImageForIdentifierURL:]
  -[ProjectAssetManager movieMatches]
  -[ProjectAssetManager setMovieMatches:]
  -[ProjectAssetManager missingEditItems]


PHAssetWriter : NSObject /usr/lib/libc++.1.dylib
 @property  PHAssetRepresentation *assetRepresentation
 @property  NSURL *sourceUrl
 @property  BOOL stop
 @property  @? progressHandler
 @property  @? completionHandler
 @property  NSURL *destinationURL
 @property  BOOL networkAccessAllowed

  // class methods
  +[PHAssetWriter assetWriterForIdentifierURL:]
  +[PHAssetWriter assetWriterForAssetRepresentation:]

  // instance methods
  -[PHAssetWriter .cxx_destruct]
  -[PHAssetWriter stop]
  -[PHAssetWriter request]
  -[PHAssetWriter progressHandler]
  -[PHAssetWriter setProgressHandler:]
  -[PHAssetWriter completionHandler]
  -[PHAssetWriter setCompletionHandler:]
  -[PHAssetWriter setDestinationURL:]
  -[PHAssetWriter destinationURL]
  -[PHAssetWriter sourceUrl]
  -[PHAssetWriter setSourceUrl:]
  -[PHAssetWriter write]
  -[PHAssetWriter setNetworkAccessAllowed:]
  -[PHAssetWriter initWithSourceURL:]
  -[PHAssetWriter transfer]
  -[PHAssetWriter setStop:]
  -[PHAssetWriter initWithAssetRepresentation:]
  -[PHAssetWriter estimatedOutputSizeWithError:]
  -[PHAssetWriter setAssetRepresentation:]
  -[PHAssetWriter startWritingWithProgressHandler:completionHandler:]
  -[PHAssetWriter stopWriting]
  -[PHAssetWriter assetRepresentation]
  -[PHAssetWriter networkAccessAllowed]


VideoMovie : Movie <NSCoding, NSCopying>
 @property  {CGSize=dd} naturalSize
 @property  {CGAffineTransform=dddddd} transform
 @property  float frameRate
 @property  {CGSize=dd} cachedNaturalSize
 @property  {CGSize=dd} cachedEncodedPixelSize
 @property  float cachedFrameRate
 @property  {CGAffineTransform=dddddd} cachedTransform
 @property  unsigned int cachedCodec4cc
 @property  int cachedDuration
 @property  {?=qiIq} cachedPreciseAssetDuration
 @property  unsigned long cachedVideoTrackCount
 @property  unsigned long cachedAudioTrackCount
 @property  unsigned long cachedAudioTrackChannels
 @property  BOOL cachedAssetInformationValid
 @property  BOOL cacheMovieIsPlayable
 @property  BOOL cacheWillDieDuringLoad
 @property  AVAsset *weakAVAsset
 @property  NSURL *audioProxyURL
 @property  BOOL audioProxyExists

  // instance methods
  -[VideoMovie copyWithZone:]
  -[VideoMovie initWithCoder:]
  -[VideoMovie .cxx_destruct]
  -[VideoMovie transform]
  -[VideoMovie initWithPath:]
  -[VideoMovie duration]
  -[VideoMovie naturalSize]
  -[VideoMovie videoCodec]
  -[VideoMovie avAsset]
  -[VideoMovie durationInSeconds]
  -[VideoMovie updateMetadata]
  -[VideoMovie frameRate]
  -[VideoMovie updateLocation]
  -[VideoMovie isMono]
  -[VideoMovie naturalSizeWithTransform]
  -[VideoMovie cachedAssetInformationValid]
  -[VideoMovie setCachedAssetInformationValid:]
  -[VideoMovie setCachedVideoTrackCount:]
  -[VideoMovie setCachedNaturalSize:]
  -[VideoMovie setCachedFrameRate:]
  -[VideoMovie setCachedTransform:]
  -[VideoMovie cachedVideoTrackCount]
  -[VideoMovie cachedPreciseAssetDuration]
  -[VideoMovie setCachedPreciseAssetDuration:]
  -[VideoMovie setCachedCodec4cc:]
  -[VideoMovie setCachedAudioTrackCount:]
  -[VideoMovie cachedAudioTrackCount]
  -[VideoMovie setCacheWillDieDuringLoad:]
  -[VideoMovie cachedFrameRate]
  -[VideoMovie cachedCodec4cc]
  -[VideoMovie cachedNaturalSize]
  -[VideoMovie cacheWillDieDuringLoad]
  -[VideoMovie cachedTransform]
  -[VideoMovie hasVideoTracks]
  -[VideoMovie hasAudioTracks]
  -[VideoMovie setCachedDuration:]
  -[VideoMovie mediaserverdCrashed]
  -[VideoMovie cachedDuration]
  -[VideoMovie cacheAssetInformation]
  -[VideoMovie loadAVAssetWithCompletionHandler:]
  -[VideoMovie loadAVAsset]
  -[VideoMovie loadAVPlayerItemWithCompletionHander:progressHandler:networkAccessAllowed:]
  -[VideoMovie updateAssetAvailability]
  -[VideoMovie initWithIdentifierURL:]
  -[VideoMovie isUnsupportedFormat]
  -[VideoMovie initWithIdentifierURL:asset:userInfo:]
  -[VideoMovie weakAVAsset]
  -[VideoMovie setWeakAVAsset:]
  -[VideoMovie setCachedEncodedPixelSize:]
  -[VideoMovie setCachedAudioTrackChannels:]
  -[VideoMovie cacheVideoTrackInformationOfAsset:]
  -[VideoMovie cacheAudioTrackFormatInformationOfAsset:]
  -[VideoMovie resetCachedAssetInformation]
  -[VideoMovie cachedEncodedPixelSize]
  -[VideoMovie encodedPixelSize]
  -[VideoMovie cachedAudioTrackChannels]
  -[VideoMovie renderedAdjustmentsExist]
  -[VideoMovie updateCreationDate]
  -[VideoMovie initWithIdentifierURL:asset:]
  -[VideoMovie thumbnailImageWithSize:]
  -[VideoMovie cacheAssetInformationWithCompletionHandler:]
  -[VideoMovie encodedPixelSizeWithTransform]
  -[VideoMovie audioProxyURL]
  -[VideoMovie setAudioProxyURL:]
  -[VideoMovie audioProxyExists]
  -[VideoMovie setAudioProxyExists:]
  -[VideoMovie cacheMovieIsPlayable]
  -[VideoMovie setCacheMovieIsPlayable:]


KPersistentMovieInfo : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[KPersistentMovieInfo cacheCount]
  +[KPersistentMovieInfo ensureCacheDirectoryExists]
  +[KPersistentMovieInfo noteApplicationDidReceiveMemoryWarning]
  +[KPersistentMovieInfo nukeCaches]
  +[KPersistentMovieInfo cachedCreationDateForURL:]
  +[KPersistentMovieInfo addURL:withDate:]
  +[KPersistentMovieInfo infoCachePath]
  +[KPersistentMovieInfo reallySaveDict:]
  +[KPersistentMovieInfo createOrLoadPersistentDict]
  +[KPersistentMovieInfo savePersistentDict]


PHAssetRepresentationDownloadOperation : NSOperation /usr/lib/libobjc.A.dylib
 @property  BOOL failed
 @property  NSError *error
 @property  BOOL finished
 @property  BOOL executing
 @property  NSRecursiveLock *statusLock
 @property  double progress
 @property  int imageRequestID
 @property  NSURL *identifierURL
 @property  BOOL userInitiated
 @property  <PHAssetRepresentationDownloadOperationDelegate> *delegate
 @property  PHAssetRepresentation *representation

  // instance methods
  -[PHAssetRepresentationDownloadOperation delegate]
  -[PHAssetRepresentationDownloadOperation setDelegate:]
  -[PHAssetRepresentationDownloadOperation .cxx_destruct]
  -[PHAssetRepresentationDownloadOperation error]
  -[PHAssetRepresentationDownloadOperation cancel]
  -[PHAssetRepresentationDownloadOperation start]
  -[PHAssetRepresentationDownloadOperation setError:]
  -[PHAssetRepresentationDownloadOperation setFinished:]
  -[PHAssetRepresentationDownloadOperation isFinished]
  -[PHAssetRepresentationDownloadOperation isExecuting]
  -[PHAssetRepresentationDownloadOperation isConcurrent]
  -[PHAssetRepresentationDownloadOperation progress]
  -[PHAssetRepresentationDownloadOperation finish]
  -[PHAssetRepresentationDownloadOperation isFailed]
  -[PHAssetRepresentationDownloadOperation setFailed:]
  -[PHAssetRepresentationDownloadOperation setProgress:]
  -[PHAssetRepresentationDownloadOperation representation]
  -[PHAssetRepresentationDownloadOperation initWithRepresentation:]
  -[PHAssetRepresentationDownloadOperation setUserInitiated:]
  -[PHAssetRepresentationDownloadOperation setExecuting:]
  -[PHAssetRepresentationDownloadOperation isUserInitiated]
  -[PHAssetRepresentationDownloadOperation setRepresentation:]
  -[PHAssetRepresentationDownloadOperation setImageRequestID:]
  -[PHAssetRepresentationDownloadOperation imageRequestID]
  -[PHAssetRepresentationDownloadOperation identifierURL]
  -[PHAssetRepresentationDownloadOperation setIdentifierURL:]
  -[PHAssetRepresentationDownloadOperation setStatusLock:]
  -[PHAssetRepresentationDownloadOperation statusLock]


ProjectPlaceholder : NSObject /usr/lib/libc++.1.dylib <ProjectDelegate>
 @property  NSMetadataQuery *ubiquitousQuery
 @property  NSMutableDictionary *nonresidentURLs
 @property  NSMutableArray *essentialNrURLS
 @property  BOOL inihibitCoordinatedWrites
 @property  NSString *path
 @property  NSString *trashPath
 @property  NSString *exportedTrashPath
 @property  Project *project
 @property  NSString *themeID
 @property  BOOL trailer
 @property  NSString *theaterUUID
 @property  NSDate *theaterSavedDate
 @property  BOOL isInCloud
 @property  BOOL downloadStarted
 @property  BOOL restartCloudDownload
 @property  BOOL projectPreviewNeedsToBeRegenerated
 @property  BOOL unsynched
 @property  <NSFilePresenter> *filePresenter
 @property  NSString *persistedStorageName
 @property  NSString *displayName

  // class methods
  +[ProjectPlaceholder miroProjectPlaceholder]
  +[ProjectPlaceholder trashProjectPath:]
  +[ProjectPlaceholder tempProjectPlaceHolderAtPath:]
  +[ProjectPlaceholder tempProjectPath:]
  +[ProjectPlaceholder themeProjectPreviewPath:]
  +[ProjectPlaceholder documentPathForNewProject:]
  +[ProjectPlaceholder setProjectPlaceholderClass:]
  +[ProjectPlaceholder trashProjectPlaceHolderWithName:]
  +[ProjectPlaceholder tempProjectPlaceHolderWithName:]
  +[ProjectPlaceholder timelineProjectPlaceholderWithID:name:previewMode:]
  +[ProjectPlaceholder trailerPlaceholderWithID:previewMode:]

  // instance methods
  -[ProjectPlaceholder init]
  -[ProjectPlaceholder dealloc]
  -[ProjectPlaceholder copyWithZone:]
  -[ProjectPlaceholder path]
  -[ProjectPlaceholder initWithPath:]
  -[ProjectPlaceholder setPath:]
  -[ProjectPlaceholder modificationDate]
  -[ProjectPlaceholder displayName]
  -[ProjectPlaceholder dateFormatter]
  -[ProjectPlaceholder setDisplayName:]
  -[ProjectPlaceholder currentTime]
  -[ProjectPlaceholder isReadOnly]
  -[ProjectPlaceholder filePresenter]
  -[ProjectPlaceholder thumbnailImage]
  -[ProjectPlaceholder setIsInCloud:]
  -[ProjectPlaceholder isInCloud]
  -[ProjectPlaceholder frameRate]
  -[ProjectPlaceholder project]
  -[ProjectPlaceholder isTrailer]
  -[ProjectPlaceholder assetsDirectory]
  -[ProjectPlaceholder exportedTrashPath]
  -[ProjectPlaceholder setExportedTrashPath:]
  -[ProjectPlaceholder themeID]
  -[ProjectPlaceholder queryTheCloud]
  -[ProjectPlaceholder removeQueryObservers]
  -[ProjectPlaceholder setRestartCloudDownload:]
  -[ProjectPlaceholder loadProjectAndValidate:]
  -[ProjectPlaceholder unloadProject]
  -[ProjectPlaceholder setFilePresenter:]
  -[ProjectPlaceholder coordinateMove:]
  -[ProjectPlaceholder ubiquitousQuery]
  -[ProjectPlaceholder startCloudQuery]
  -[ProjectPlaceholder trashPath]
  -[ProjectPlaceholder setTrashPath:]
  -[ProjectPlaceholder stopCloudQuery]
  -[ProjectPlaceholder coordinateRenameFrom:to:renameHandler:]
  -[ProjectPlaceholder removeFilePresenter]
  -[ProjectPlaceholder removeCloudDownloadProject]
  -[ProjectPlaceholder renameTo:]
  -[ProjectPlaceholder updateFile]
  -[ProjectPlaceholder clearMicacheFolder]
  -[ProjectPlaceholder addQueryObservers]
  -[ProjectPlaceholder setUbiquitousQuery:]
  -[ProjectPlaceholder didStart:]
  -[ProjectPlaceholder gathering:]
  -[ProjectPlaceholder finishGathering:]
  -[ProjectPlaceholder didUpdate:]
  -[ProjectPlaceholder configureFilePresenter]
  -[ProjectPlaceholder isMissingAssets]
  -[ProjectPlaceholder didFinishDownload:]
  -[ProjectPlaceholder setUnsynched:]
  -[ProjectPlaceholder holderFilePath]
  -[ProjectPlaceholder coordinateWrite:]
  -[ProjectPlaceholder readFile]
  -[ProjectPlaceholder durationInFrame]
  -[ProjectPlaceholder theaterPosterImage]
  -[ProjectPlaceholder videoPreviewImage]
  -[ProjectPlaceholder previewImagesCacheFolder]
  -[ProjectPlaceholder videoPreviewImageAllowingLowQuality:lowQualityFetched:]
  -[ProjectPlaceholder videoPreviewImagePathForSize:]
  -[ProjectPlaceholder legacyThumbnailImagePath]
  -[ProjectPlaceholder projectPreviewNeedsToBeRegenerated]
  -[ProjectPlaceholder updateImage:atPath:]
  -[ProjectPlaceholder checkForEmoji:]
  -[ProjectPlaceholder isDuplicateProjectName:]
  -[ProjectPlaceholder resetCloudQuery]
  -[ProjectPlaceholder rebuildNonEssentialCacheForProjectURL:oldURL:]
  -[ProjectPlaceholder resync]
  -[ProjectPlaceholder movieFileSizeForPath:preset:]
  -[ProjectPlaceholder setTheaterUUID:]
  -[ProjectPlaceholder setTheaterSavedDate:]
  -[ProjectPlaceholder unloadAllProjectsExceptMe]
  -[ProjectPlaceholder initAsUnpersistable]
  -[ProjectPlaceholder loadPreviewProject]
  -[ProjectPlaceholder updateWithTrailerID:previewMode:]
  -[ProjectPlaceholder percentDownloaded]
  -[ProjectPlaceholder hasMissingCloudAssets]
  -[ProjectPlaceholder isEssentialURL:]
  -[ProjectPlaceholder essentialNrURLS]
  -[ProjectPlaceholder lowOnSpace]
  -[ProjectPlaceholder setInihibitCoordinatedWrites:]
  -[ProjectPlaceholder cacheItem:downloadImmediately:]
  -[ProjectPlaceholder downloadEssentials]
  -[ProjectPlaceholder restartCloudDownload]
  -[ProjectPlaceholder downloadEverything]
  -[ProjectPlaceholder notifyLowSpace]
  -[ProjectPlaceholder nonresidentURLs]
  -[ProjectPlaceholder addCloudDownloadProject]
  -[ProjectPlaceholder unsynched]
  -[ProjectPlaceholder inihibitCoordinatedWrites]
  -[ProjectPlaceholder filePresenterForURL:]
  -[ProjectPlaceholder coordinateWrite:withOptions:]
  -[ProjectPlaceholder projectWasSaved:]
  -[ProjectPlaceholder projectWasChanged:]
  -[ProjectPlaceholder projectDidInvalidateSharingInfo:]
  -[ProjectPlaceholder thumbnailImageForProject:]
  -[ProjectPlaceholder coordinateRemove:]
  -[ProjectPlaceholder updateCurrentTime]
  -[ProjectPlaceholder theaterUUID]
  -[ProjectPlaceholder theaterSavedDate]
  -[ProjectPlaceholder projectIsEmpty]
  -[ProjectPlaceholder projectNotOptimizedAndNotMissingAssets]
  -[ProjectPlaceholder deletable]
  -[ProjectPlaceholder durationDictionary]
  -[ProjectPlaceholder persistedStorageName]
  -[ProjectPlaceholder validateProposedName:minimumLength:]
  -[ProjectPlaceholder disablePreviewContent]
  -[ProjectPlaceholder sizeOfExportForPresets:]
  -[ProjectPlaceholder updateWithMediaURL:asset:adjustments:selectedRange:]
  -[ProjectPlaceholder startDownloading]
  -[ProjectPlaceholder pauseDownloading]
  -[ProjectPlaceholder downloadStarted]
  -[ProjectPlaceholder setProjectPreviewNeedsToBeRegenerated:]
  -[ProjectPlaceholder setNonresidentURLs:]
  -[ProjectPlaceholder setEssentialNrURLS:]


AssetModel : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[AssetModel sharedInstance]
  +[AssetModel imageScale]
  +[AssetModel thumbnailScale]
  +[AssetModel deviceCharacteristicsDict]
  +[AssetModel maxPixelsForImage:]
  +[AssetModel builtInAssetDirectoryForClipType:]
  +[AssetModel assetDirectory]

  // instance methods
  -[AssetModel init]
  -[AssetModel dealloc]
  -[AssetModel assetPathsForClipType:inProjectPath:excludingURLs:]
  -[AssetModel clearAssetsList]
  -[AssetModel invalidateAssetLibrary]
  -[AssetModel loadAssetsListIfNeeded]
  -[AssetModel mpMediaLibraryDidChange:]
  -[AssetModel builtInAssetPathsForClipType:]
  -[AssetModel fileTypesForClipType:]
  -[AssetModel files:atPath:filteredForTypes:]
  -[AssetModel filterURLs:fromPaths:]
  -[AssetModel pathForBuiltInAssetWithName:]
  -[AssetModel assetPathsForRecordedAudio]
  -[AssetModel assetPathsForProjectAudio]
  -[AssetModel assetPathsForSharedAudio]
  -[AssetModel imageViewWithThemeImageNamed:renderingIntent:allowProxies:]
  -[AssetModel ingestMovieAtPath:intoProject:asSharedAssets:]


VECSchedulingRequest : NSObject /usr/lib/libc++.1.dylib
 @property  NSObject<OS_dispatch_group> *doneOrCancelGroup
 @property  @? taskHandler
 @property  @? dellocHandler
 @property  int requestID
 @property  BOOL isCancelled

  // instance methods
  -[VECSchedulingRequest dealloc]
  -[VECSchedulingRequest .cxx_destruct]
  -[VECSchedulingRequest isCancelled]
  -[VECSchedulingRequest requestID]
  -[VECSchedulingRequest doneOrCancelGroup]
  -[VECSchedulingRequest initWithDoneOrCancelGroup:taskHandler:dellocHandler:]
  -[VECSchedulingRequest markAsQueued]
  -[VECSchedulingRequest markAsCompletedOrCancelled:]
  -[VECSchedulingRequest taskHandler]
  -[VECSchedulingRequest dellocHandler]


CompositionItem : NSObject /usr/lib/libc++.1.dylib
 @property  KonaClip *clip
 @property  BOOL isFinalClip
 @property  {?={?=qiIq}{?=qiIq}} sourceTimeRange
 @property  {?=qiIq} destinationDuration
 @property  {?=qiIq} leftTransitionExtension
 @property  {?=qiIq} rightTransitionExtension
 @property  {?=qiIq} audioStartOffset
 @property  {?=qiIq} audioEndOffset
 @property  BOOL hasVideoContent
 @property  BOOL isMuted
 @property  BOOL isFreezeFrame
 @property  float speed

  // class methods
  +[CompositionItem compositionItemWithClip:]

  // instance methods
  -[CompositionItem dealloc]
  -[CompositionItem speed]
  -[CompositionItem setSpeed:]
  -[CompositionItem clip]
  -[CompositionItem isMuted]
  -[CompositionItem setClip:]
  -[CompositionItem sourceTimeRange]
  -[CompositionItem isFreezeFrame]
  -[CompositionItem emptyTrackSegmentWithDestinationRange:]
  -[CompositionItem audioTrackSegmentsWithDestinationTime:paddedFromTime:]
  -[CompositionItem destinationDuration]
  -[CompositionItem audioStartOffset]
  -[CompositionItem audioEndOffset]
  -[CompositionItem audioTrackSegmentsLoopedForDestinationTimeRange:]
  -[CompositionItem emptyTrackSegmentWithDestinationTime:]
  -[CompositionItem hasVideoContent]
  -[CompositionItem videoTrackSegmentsWithDestinationRange:]
  -[CompositionItem audioTrackSegmentsWithDestinationTime:]
  -[CompositionItem setAudioStartOffset:]
  -[CompositionItem setAudioEndOffset:]
  -[CompositionItem setIsFinalClip:]
  -[CompositionItem setSourceTimeRange:]
  -[CompositionItem setDestinationDuration:]
  -[CompositionItem initWithClip:]
  -[CompositionItem isFinalClip]
  -[CompositionItem emptyVideoTrackSegmentsWithDestinationRange:]
  -[CompositionItem emptyAudioTrackSegmentsWithDestinationTime:]
  -[CompositionItem leftTransitionExtension]
  -[CompositionItem setLeftTransitionExtension:]
  -[CompositionItem rightTransitionExtension]
  -[CompositionItem setRightTransitionExtension:]


BurstClipStyle : NSObject /usr/lib/libc++.1.dylib
 @property  BurstClip *burstClip
 @property  double minimumPhotoDuration
 @property  double idealPhotoDuration
 @property  double maximumPhotoDuration
 @property  double minimumVideoDuration
 @property  double idealVideoDuration

  // instance methods
  -[BurstClipStyle .cxx_destruct]
  -[BurstClipStyle duration]
  -[BurstClipStyle maximumDuration]
  -[BurstClipStyle isSupported]
  -[BurstClipStyle minimumDuration]
  -[BurstClipStyle projectFrameRate]
  -[BurstClipStyle sourceClips]
  -[BurstClipStyle idealDuration]
  -[BurstClipStyle burstClip]
  -[BurstClipStyle turnOffKenBurnsForClips:]
  -[BurstClipStyle containedClipsWithoutTransitions]
  -[BurstClipStyle containedClipsWithInTransition:outTransition:]
  -[BurstClipStyle adjustDurationsOfClips:withInTransition:outTransition:]
  -[BurstClipStyle minimumPhotoDuration]
  -[BurstClipStyle idealPhotoDuration]
  -[BurstClipStyle maximumPhotoDuration]
  -[BurstClipStyle minimumVideoDuration]
  -[BurstClipStyle idealVideoDuration]
  -[BurstClipStyle projectAspectRatio]
  -[BurstClipStyle setBurstClip:]


ExtraClip : KonaClip
 @property  NSMutableDictionary *extraDefinition
 @property  NSString *name
 @property  NSString *text
 @property  double startRatio
 @property  double endRatio

  // instance methods
  -[ExtraClip name]
  -[ExtraClip setName:]
  -[ExtraClip text]
  -[ExtraClip setText:]
  -[ExtraClip maxDuration]
  -[ExtraClip clipType]
  -[ExtraClip hasVisualCharacteristic]
  -[ExtraClip extraDefinition]
  -[ExtraClip startRatio]
  -[ExtraClip setStartRatio:]
  -[ExtraClip endRatio]
  -[ExtraClip setEndRatio:]


BurstClipStylePhotoDissolvePop : BurstClipStylePhoto
  // instance methods
  -[BurstClipStylePhotoDissolvePop maximumDuration]
  -[BurstClipStylePhotoDissolvePop minimumDuration]
  -[BurstClipStylePhotoDissolvePop idealDuration]
  -[BurstClipStylePhotoDissolvePop _minimumNumberOfContainedClips]
  -[BurstClipStylePhotoDissolvePop _idealNumberOfContainedClips]
  -[BurstClipStylePhotoDissolvePop containedClipsWithoutTransitions]
  -[BurstClipStylePhotoDissolvePop _maximumNumberOfContainedClips]
  -[BurstClipStylePhotoDissolvePop containedClipsWithInTransition:outTransition:]
  -[BurstClipStylePhotoDissolvePop adjustDurationsOfClips:withInTransition:outTransition:]
  -[BurstClipStylePhotoDissolvePop minimumRegularClipDuration]
  -[BurstClipStylePhotoDissolvePop minimumLastClipDuration]
  -[BurstClipStylePhotoDissolvePop idealRegularClipDuration]
  -[BurstClipStylePhotoDissolvePop idealLastClipDuration]
  -[BurstClipStylePhotoDissolvePop maximumRegularClipDuration]
  -[BurstClipStylePhotoDissolvePop maximumLastClipDuration]
  -[BurstClipStylePhotoDissolvePop clipLastClipRatio]


IrisMovieCompositionItem : MovieCompositionItem
  // instance methods
  -[IrisMovieCompositionItem videoTrackSegmentsWithDestinationRange:]
  -[IrisMovieCompositionItem blendMappingsForSourceRange:destinationRange:]


EffectDataSource : NSObject /usr/lib/libc++.1.dylib <ItemStylePickerDataSource>
 @property  NSMutableArray *factoryFilterIDsArray
 @property  NSMutableDictionary *factoryFilterNamesDict
 @property  NSMutableDictionary *factoryFilterInternalNamesDict
 @property  NSMutableArray *allFilterIDsArray
 @property  NSMutableDictionary *allFilterNamesDict
 @property  NSMutableDictionary *allFilterPreviewsDict
 @property  NSMutableDictionary *allFilterDirtyPreviewsDict
 @property  int filterClientRefCount
 @property  NSMutableArray *factoryTitleIDsArray
 @property  NSMutableDictionary *factoryTitleNamesDict
 @property  NSMutableDictionary *factoryTitleInternalNamesDict
 @property  NSMutableArray *allTitleIDsArray
 @property  NSMutableDictionary *allTitleNamesDict
 @property  NSMutableDictionary *allTitlePreviewsDict
 @property  NSMutableDictionary *allTitleDirtyPreviewsDict
 @property  NSMutableArray *factoryGeneratorIDsArray
 @property  NSMutableDictionary *factoryGeneratorNamesDict
 @property  NSMutableArray *allGeneratorIDsArray
 @property  NSMutableDictionary *allGeneratorNamesDict
 @property  NSMutableDictionary *allGeneratorPreviewsDict
 @property  NSMutableDictionary *allGeneratorDirtyPreviewsDict
 @property  NSMutableArray *factoryTransitionIDsArray
 @property  NSMutableDictionary *factoryTransitionNamesDict
 @property  NSMutableArray *allTransitionIDsArray
 @property  NSMutableDictionary *allTransitionNamesDict
 @property  NSMutableDictionary *allTransitionPreviewsDict
 @property  NSMutableDictionary *allTransitionDirtyPreviewsDict
 @property  BOOL generatingThumbs
 @property  BOOL generatingThumbsInterrupted
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[EffectDataSource sharedDataSource]

  // instance methods
  -[EffectDataSource init]
  -[EffectDataSource .cxx_destruct]
  -[EffectDataSource numberOfItems]
  -[EffectDataSource effectsForType:]
  -[EffectDataSource getFactoryFilterIDs]
  -[EffectDataSource getAllFilterNames]
  -[EffectDataSource getFactoryFilterNames]
  -[EffectDataSource getAllFilterIDs]
  -[EffectDataSource getAllTitleIDs]
  -[EffectDataSource getAllTransitionIDs]
  -[EffectDataSource getAllGeneratorIDs]
  -[EffectDataSource initAllEffectPreviewsForImage:effectType:]
  -[EffectDataSource dirtyAllFilterPreviewsIncludingNone:]
  -[EffectDataSource dirtyAllTitlePreviewsIncludingNone:]
  -[EffectDataSource generatePreviewImageForEffectID:currentTime:effectRange:rawImage:previewSize:completion:]
  -[EffectDataSource getFactoryTitleIDs]
  -[EffectDataSource getAllTitleNames]
  -[EffectDataSource getFactoryTitleNames]
  -[EffectDataSource getFactoryTransitionIDs]
  -[EffectDataSource getAllTransitionNames]
  -[EffectDataSource getFactoryTransitionNames]
  -[EffectDataSource getAllGeneratorNames]
  -[EffectDataSource getEffectIDsForType:]
  -[EffectDataSource getEffectNamesForType:]
  -[EffectDataSource itemIDAtIndexPath:]
  -[EffectDataSource itemNameAtIndexPath:]
  -[EffectDataSource indexPathOfItemName:]
  -[EffectDataSource indexPathOfItemID:]
  -[EffectDataSource getFactoryFilterInternalNames]
  -[EffectDataSource initAllFilterPreviewsForImage:]
  -[EffectDataSource releaseAllFilterPreviewsIncludingNone:]
  -[EffectDataSource initAllTitlePreviewsForImage:]
  -[EffectDataSource releaseAllTitlePreviewsIncludingNone:]
  -[EffectDataSource generateAllFilterPreviewsAtTime:effectRange:rawImage:previewSize:]
  -[EffectDataSource getPreviewImageForFilterID:]
  -[EffectDataSource getPreviewImageForTitleID:]
  -[EffectDataSource getFactoryTitleInternalNames]
  -[EffectDataSource getFactoryTransitionInternalNames]
  -[EffectDataSource isGeneratingThumbs]
  -[EffectDataSource setGeneratingThumbs:]
  -[EffectDataSource isGeneratingThumbsInterrupted]
  -[EffectDataSource setGeneratingThumbsInterrupted:]
  -[EffectDataSource factoryFilterIDsArray]
  -[EffectDataSource setFactoryFilterIDsArray:]
  -[EffectDataSource factoryFilterNamesDict]
  -[EffectDataSource setFactoryFilterNamesDict:]
  -[EffectDataSource factoryFilterInternalNamesDict]
  -[EffectDataSource setFactoryFilterInternalNamesDict:]
  -[EffectDataSource allFilterIDsArray]
  -[EffectDataSource setAllFilterIDsArray:]
  -[EffectDataSource allFilterNamesDict]
  -[EffectDataSource setAllFilterNamesDict:]
  -[EffectDataSource allFilterPreviewsDict]
  -[EffectDataSource setAllFilterPreviewsDict:]
  -[EffectDataSource allFilterDirtyPreviewsDict]
  -[EffectDataSource setAllFilterDirtyPreviewsDict:]
  -[EffectDataSource filterClientRefCount]
  -[EffectDataSource setFilterClientRefCount:]
  -[EffectDataSource factoryTitleIDsArray]
  -[EffectDataSource setFactoryTitleIDsArray:]
  -[EffectDataSource factoryTitleNamesDict]
  -[EffectDataSource setFactoryTitleNamesDict:]
  -[EffectDataSource factoryTitleInternalNamesDict]
  -[EffectDataSource setFactoryTitleInternalNamesDict:]
  -[EffectDataSource allTitleIDsArray]
  -[EffectDataSource setAllTitleIDsArray:]
  -[EffectDataSource allTitleNamesDict]
  -[EffectDataSource setAllTitleNamesDict:]
  -[EffectDataSource allTitlePreviewsDict]
  -[EffectDataSource setAllTitlePreviewsDict:]
  -[EffectDataSource allTitleDirtyPreviewsDict]
  -[EffectDataSource setAllTitleDirtyPreviewsDict:]
  -[EffectDataSource factoryGeneratorIDsArray]
  -[EffectDataSource setFactoryGeneratorIDsArray:]
  -[EffectDataSource factoryGeneratorNamesDict]
  -[EffectDataSource setFactoryGeneratorNamesDict:]
  -[EffectDataSource allGeneratorIDsArray]
  -[EffectDataSource setAllGeneratorIDsArray:]
  -[EffectDataSource allGeneratorNamesDict]
  -[EffectDataSource setAllGeneratorNamesDict:]
  -[EffectDataSource allGeneratorPreviewsDict]
  -[EffectDataSource setAllGeneratorPreviewsDict:]
  -[EffectDataSource allGeneratorDirtyPreviewsDict]
  -[EffectDataSource setAllGeneratorDirtyPreviewsDict:]
  -[EffectDataSource factoryTransitionIDsArray]
  -[EffectDataSource setFactoryTransitionIDsArray:]
  -[EffectDataSource factoryTransitionNamesDict]
  -[EffectDataSource setFactoryTransitionNamesDict:]
  -[EffectDataSource allTransitionIDsArray]
  -[EffectDataSource setAllTransitionIDsArray:]
  -[EffectDataSource allTransitionNamesDict]
  -[EffectDataSource setAllTransitionNamesDict:]
  -[EffectDataSource allTransitionPreviewsDict]
  -[EffectDataSource setAllTransitionPreviewsDict:]
  -[EffectDataSource allTransitionDirtyPreviewsDict]
  -[EffectDataSource setAllTransitionDirtyPreviewsDict:]


TitleDefinition : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  int titleGroup
 @property  int titleType
 @property  NSString *displayName
 @property  BOOL generic
 @property  BOOL motion
 @property  NSString *titleName
 @property  NSString *text
 @property  NSString *text2
 @property  NSString *text3
 @property  UIColor *backgroundColor
 @property  UIColor *primaryColor
 @property  UIColor *secondaryColor
 @property  int duration
 @property  int anchorTargetOffset
 @property  int anchorLocalOffset
 @property  int introFadeDuration
 @property  int outroFadeDuration
 @property  BOOL durationExplicitlySet
 @property  BOOL anchorTargetOffsetExplicitlySet
 @property  BOOL anchorLocalOffsetExplicitlySet
 @property  NSDictionary *extendedDefinition
 @property  BOOL audioEnabled
 @property  int animationOutDuration
 @property  int nominalOverallDuration
 @property  PVEffect *titleEffect
 @property  NSString *titleEffectID
 @property  NSDictionary *titleEffectSettings
 @property  BOOL temporarilyDisabled

  // class methods
  +[TitleDefinition objectFromPlist:inProject:]
  +[TitleDefinition titleGroupForTitleName:]
  +[TitleDefinition titleTypeForTitleName:]
  +[TitleDefinition displayNameForTitleName:]
  +[TitleDefinition effectIDForTitleName:]
  +[TitleDefinition titleStyleRootForTitleName:]
  +[TitleDefinition titleStyleDisplayNameForTitleName:themeID:]
  +[TitleDefinition titleDefinitionPlaceholderForTheme:]
  +[TitleDefinition titleNameFromTitleStyleRoot:titleType:]

  // instance methods
  -[TitleDefinition copyWithZone:]
  -[TitleDefinition .cxx_destruct]
  -[TitleDefinition duration]
  -[TitleDefinition displayName]
  -[TitleDefinition text]
  -[TitleDefinition setText:]
  -[TitleDefinition setDuration:]
  -[TitleDefinition backgroundColor]
  -[TitleDefinition setBackgroundColor:]
  -[TitleDefinition titleType]
  -[TitleDefinition setPrimaryColor:]
  -[TitleDefinition setSecondaryColor:]
  -[TitleDefinition primaryColor]
  -[TitleDefinition secondaryColor]
  -[TitleDefinition setAudioEnabled:]
  -[TitleDefinition isMotion]
  -[TitleDefinition audioEnabled]
  -[TitleDefinition setTemporarilyDisabled:]
  -[TitleDefinition temporarilyDisabled]
  -[TitleDefinition titleEffectSettings]
  -[TitleDefinition initWithTitleName:]
  -[TitleDefinition setTitleEffectSettings:]
  -[TitleDefinition setText2:]
  -[TitleDefinition setText3:]
  -[TitleDefinition text2]
  -[TitleDefinition setOutroFadeDuration:]
  -[TitleDefinition titleEffect]
  -[TitleDefinition anchorTargetOffset]
  -[TitleDefinition anchorLocalOffset]
  -[TitleDefinition plistRepresentation]
  -[TitleDefinition titleEffectID]
  -[TitleDefinition setDurationExplicitlySet:]
  -[TitleDefinition setAnchorTargetOffsetExplicitlySet:]
  -[TitleDefinition setAnchorLocalOffsetExplicitlySet:]
  -[TitleDefinition outroFadeDuration]
  -[TitleDefinition text3]
  -[TitleDefinition isDurationExplicitlySet]
  -[TitleDefinition isAnchorTargetOffsetExplicitlySet]
  -[TitleDefinition isAnchorLocalOffsetExplicitlySet]
  -[TitleDefinition introFadeDuration]
  -[TitleDefinition extendedDefinition]
  -[TitleDefinition setTitleName:]
  -[TitleDefinition setAnchorTargetOffset:]
  -[TitleDefinition setAnchorLocalOffset:]
  -[TitleDefinition setIntroFadeDuration:]
  -[TitleDefinition setExtendedDefinition:]
  -[TitleDefinition isGeneric]
  -[TitleDefinition updateWithTitleDefinition:]
  -[TitleDefinition animationOutDuration]
  -[TitleDefinition nominalOverallDuration]
  -[TitleDefinition titleGroup]
  -[TitleDefinition titleName]


PHAssetRepresentation : NSObject /usr/lib/libc++.1.dylib
 @property  PHAsset *asset
 @property  NSString *localIdentifier
 @property  NSDate *modificationDate
 @property  long long mediaType
 @property  unsigned long lastKnownPersistenceState
 @property  unsigned long downloadState
 @property  double downloadProgress
 @property  NSDate *downloadRequestDate
 @property  BOOL adjustedVersion
 @property  PHAssetResource *mostUsefulResource
 @property  NSString *derivativeFilePath

  // class methods
  +[PHAssetRepresentation initialize]
  +[PHAssetRepresentation clearStaticCache]
  +[PHAssetRepresentation assetRepresentationWithAsset:adjustedVersion:]
  +[PHAssetRepresentation assetRepresentationWithIdentifierURL:]
  +[PHAssetRepresentation createStaticCache]
  +[PHAssetRepresentation _cachedAssetRepresentationWithIdentifier:adjustedVersion:]
  +[PHAssetRepresentation _cacheAssetRepresentation:]
  +[PHAssetRepresentation assetRepresentationWithPhotosIdentifierURL:]
  +[PHAssetRepresentation assetRepresentationWithAssetsLibraryPersistentURL:]

  // instance methods
  -[PHAssetRepresentation dealloc]
  -[PHAssetRepresentation isEqual:]
  -[PHAssetRepresentation .cxx_destruct]
  -[PHAssetRepresentation modificationDate]
  -[PHAssetRepresentation image]
  -[PHAssetRepresentation mediaType]
  -[PHAssetRepresentation asset]
  -[PHAssetRepresentation setAsset:]
  -[PHAssetRepresentation imageSize]
  -[PHAssetRepresentation localIdentifier]
  -[PHAssetRepresentation setLocalIdentifier:]
  -[PHAssetRepresentation setModificationDate:]
  -[PHAssetRepresentation isDownloading]
  -[PHAssetRepresentation imageData]
  -[PHAssetRepresentation setMediaType:]
  -[PHAssetRepresentation thumbnailImage]
  -[PHAssetRepresentation isHEIF]
  -[PHAssetRepresentation privateFileURL]
  -[PHAssetRepresentation avAsset]
  -[PHAssetRepresentation imageWithSize:]
  -[PHAssetRepresentation downloadProgress]
  -[PHAssetRepresentation setDownloadProgress:]
  -[PHAssetRepresentation downloadState]
  -[PHAssetRepresentation setDownloadState:]
  -[PHAssetRepresentation mostUsefulResource]
  -[PHAssetRepresentation identifierURL]
  -[PHAssetRepresentation queryLastKnownPersistenceState]
  -[PHAssetRepresentation lastKnownPersistenceState]
  -[PHAssetRepresentation requestVideoWithResultHandler:]
  -[PHAssetRepresentation requestPlayerItemWithResultHandler:progressHandler:networkAccessAllowed:]
  -[PHAssetRepresentation derivativeFilePath]
  -[PHAssetRepresentation privateFileURLForResource:]
  -[PHAssetRepresentation initWithAsset:adjustedVersion:]
  -[PHAssetRepresentation initWithLocalIdentifier:adjustedVersion:modificationDate:mediaType:]
  -[PHAssetRepresentation initWithAsset:localIdentifier:adjustedVersion:modificationDate:mediaType:]
  -[PHAssetRepresentation setAdjustedVersion:]
  -[PHAssetRepresentation requestThumbnailWithResultHandler:synchronous:networkAccessAllowed:]
  -[PHAssetRepresentation requestImageDataWithResultHandler:synchronous:]
  -[PHAssetRepresentation imageWithSize:imageManager:]
  -[PHAssetRepresentation cgimageWithSize:imageManager:]
  -[PHAssetRepresentation requestImageDataWithResultHandler:progressHandler:synchronous:]
  -[PHAssetRepresentation requestVideoWithResultHandler:progressHandler:]
  -[PHAssetRepresentation requestVideoWithResultHandler:progressHandler:imageManager:]
  -[PHAssetRepresentation privateVideoFileURL]
  -[PHAssetRepresentation handleVideoRequestCompletionWithResult:info:videoRequestOptions:]
  -[PHAssetRepresentation requestImageWithResultHandler:progressHandler:imageManager:]
  -[PHAssetRepresentation isDerivativeFilePathPointingToJPEGorRAWorHEIFFile]
  -[PHAssetRepresentation cgimageWithSize:]
  -[PHAssetRepresentation estimatedFileSize]
  -[PHAssetRepresentation requestMediaWithResultHandler:progressHandler:]
  -[PHAssetRepresentation requestExportSessionWithResultHandler:progressHandler:]
  -[PHAssetRepresentation requestImageDataWithResultHandler:]
  -[PHAssetRepresentation requestImageWithResultHandler:]
  -[PHAssetRepresentation requestImageWithResultHandler:progressHandler:]
  -[PHAssetRepresentation handlePlayerItemRequestCompletionWithResult:info:videoRequestOptions:]
  -[PHAssetRepresentation handleRequestCompletionWithResult:info:videoRequestOptions:]
  -[PHAssetRepresentation setLastKnownPersistenceState:]
  -[PHAssetRepresentation downloadRequestDate]
  -[PHAssetRepresentation setDownloadRequestDate:]
  -[PHAssetRepresentation isAdjustedVersion]


MBAssetLoaderOperation : NSOperation /usr/lib/libobjc.A.dylib
 @property  BOOL finished
 @property  BOOL executing
 @property  NSURL *identifierURL
 @property  AVAsset *asset
 @property  NSArray *prefetchKeys
 @property  @? preCompletionBlock

  // instance methods
  -[MBAssetLoaderOperation .cxx_destruct]
  -[MBAssetLoaderOperation start]
  -[MBAssetLoaderOperation setFinished:]
  -[MBAssetLoaderOperation isFinished]
  -[MBAssetLoaderOperation isExecuting]
  -[MBAssetLoaderOperation isConcurrent]
  -[MBAssetLoaderOperation finish]
  -[MBAssetLoaderOperation asset]
  -[MBAssetLoaderOperation setAsset:]
  -[MBAssetLoaderOperation setExecuting:]
  -[MBAssetLoaderOperation identifierURL]
  -[MBAssetLoaderOperation setIdentifierURL:]
  -[MBAssetLoaderOperation initWithIdentifierURL:]
  -[MBAssetLoaderOperation preCompletionBlock]
  -[MBAssetLoaderOperation setPrefetchKeys:]
  -[MBAssetLoaderOperation prefetchKeys]
  -[MBAssetLoaderOperation setPreCompletionBlock:]


TitleDataSource : NSObject /usr/lib/libc++.1.dylib <ItemStylePickerDataSource>
 @property  NSArray *genericTitleInfoItems
 @property  NSArray *themeTitleNames
 @property  NSMutableArray *genericTitleNames
 @property  NSMutableArray *motionTitleNames
 @property  NSArray *allTitleNames
 @property  BOOL includeThemeTitles
 @property  BOOL includeMotionTitles
 @property  BOOL includeNone
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TitleDataSource sharedDataSource]

  // instance methods
  -[TitleDataSource init]
  -[TitleDataSource dealloc]
  -[TitleDataSource numberOfItems]
  -[TitleDataSource itemNameAtIndexPath:]
  -[TitleDataSource indexPathOfItemName:]
  -[TitleDataSource allTitleNames]
  -[TitleDataSource genericTitleInfoItems]
  -[TitleDataSource themeTitleNames]
  -[TitleDataSource motionTitleNames]
  -[TitleDataSource genericTitleNames]
  -[TitleDataSource titleTypesForTitleDefinition:]
  -[TitleDataSource itemNames]
  -[TitleDataSource includeThemeTitles]
  -[TitleDataSource includeMotionTitles]
  -[TitleDataSource titleStylesIncludingTheme:includingMotion:]
  -[TitleDataSource includeNone]
  -[TitleDataSource numberOfTitles]
  -[TitleDataSource indexPathOfTitleName:]
  -[TitleDataSource titleNameAtIndex:]
  -[TitleDataSource representativeTitleNameForTitleDefinition:]
  -[TitleDataSource setThemeTitleNames:]
  -[TitleDataSource setIncludeThemeTitles:]
  -[TitleDataSource setIncludeMotionTitles:]
  -[TitleDataSource setIncludeNone:]
  -[TitleDataSource setGenericTitleInfoItems:]
  -[TitleDataSource setGenericTitleNames:]
  -[TitleDataSource setMotionTitleNames:]
  -[TitleDataSource setAllTitleNames:]
  -[TitleDataSource micaFileNameForTitleIdentifier:micaFileBaseName:]


KenBurnsCompositionItem : MovieCompositionItem
  // instance methods
  -[KenBurnsCompositionItem audioTrackSegmentsWithDestinationTime:paddedFromTime:]
  -[KenBurnsCompositionItem audioTrackSegmentsLoopedForDestinationTimeRange:]
  -[KenBurnsCompositionItem hasVideoContent]
  -[KenBurnsCompositionItem videoTrackSegmentsWithDestinationRange:]
  -[KenBurnsCompositionItem audioTrackSegmentsWithDestinationTime:]
  -[KenBurnsCompositionItem initWithClip:]


ExtraCompositionItem : MovieCompositionItem
  // instance methods
  -[ExtraCompositionItem audioTrackSegmentsWithDestinationTime:paddedFromTime:]
  -[ExtraCompositionItem audioTrackSegmentsLoopedForDestinationTimeRange:]
  -[ExtraCompositionItem hasVideoContent]
  -[ExtraCompositionItem videoTrackSegmentsWithDestinationRange:]
  -[ExtraCompositionItem audioTrackSegmentsWithDestinationTime:]
  -[ExtraCompositionItem initWithClip:]


FlexAudioClip : AudioClip
 @property  FMSong *song
 @property  FMSongRendition *songRendition
 @property  int sampleRate
 @property  BOOL lockedRendition

  // class methods
  +[FlexAudioClip backgroundClipWithSong:]
  +[FlexAudioClip optionsForSong:withDuration:]

  // instance methods
  -[FlexAudioClip init]
  -[FlexAudioClip copyWithZone:]
  -[FlexAudioClip .cxx_destruct]
  -[FlexAudioClip duration]
  -[FlexAudioClip setDuration:]
  -[FlexAudioClip sampleRate]
  -[FlexAudioClip song]
  -[FlexAudioClip setSong:]
  -[FlexAudioClip clipType]
  -[FlexAudioClip setSongUID:]
  -[FlexAudioClip songRendition]
  -[FlexAudioClip songUID]
  -[FlexAudioClip setLockedRendition:]
  -[FlexAudioClip rawSourceDuration]
  -[FlexAudioClip plistRepresentationFromProject:]
  -[FlexAudioClip setContentsFromPlist:inProject:]
  -[FlexAudioClip refreshSong]
  -[FlexAudioClip generateEdits]
  -[FlexAudioClip lockedRendition]
  -[FlexAudioClip setSongRendition:]
  -[FlexAudioClip outroStingerTime:earlyFadeStartTime:endTime:]


FaceRecognizer : VEiOSSharedObject
 @property  BOOL highAccuracy

  // class methods
  +[FaceRecognizer sharedRecognizer]

  // instance methods
  -[FaceRecognizer facesInImage:]
  -[FaceRecognizer containingRectForFaces:scaleEachFaceRectBy:]
  -[FaceRecognizer containingRect:]
  -[FaceRecognizer highAccuracy]
  -[FaceRecognizer setHighAccuracy:]


ClipBackground : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  int type
 @property  NSMutableDictionary *backgroundEffectSettings
 @property  NSString *effectID
 @property  PVEffect *backgroundEffect

  // instance methods
  -[ClipBackground init]
  -[ClipBackground copyWithZone:]
  -[ClipBackground type]
  -[ClipBackground setType:]
  -[ClipBackground .cxx_destruct]
  -[ClipBackground backgroundEffect]
  -[ClipBackground effectID]
  -[ClipBackground setBackgroundEffectSettings:]
  -[ClipBackground backgroundEffectSettings]


TransitionAudioCompositionItem : MovieCompositionItem
  // instance methods
  -[TransitionAudioCompositionItem initWithClip:themeID:]


TitleAudioCompositionItem : MovieCompositionItem
 @property  NSString *baseFilename

  // instance methods
  -[TitleAudioCompositionItem .cxx_destruct]
  -[TitleAudioCompositionItem speedRangesForSourceRange:destinationRange:]
  -[TitleAudioCompositionItem baseFilename]
  -[TitleAudioCompositionItem setBaseFilename:]
  -[TitleAudioCompositionItem initWithClip:themeID:]
  -[TitleAudioCompositionItem switchToAsset:]
  -[TitleAudioCompositionItem hasSeparateInOut]


FlexAudioCompositionItem : MovieCompositionItem
 @property  FlexAudioClip *clip

  // instance methods
  -[FlexAudioCompositionItem audioTrackSegmentsLoopedForDestinationTimeRange:]
  -[FlexAudioCompositionItem initWithClip:]
  -[FlexAudioCompositionItem trackInfoDict]
  -[FlexAudioCompositionItem segmentsForFMTrack:andTimeRange:]
  -[FlexAudioCompositionItem audioTrackSegmentsForDestinationTime:]


VEiOSCommonDelegate : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[VEiOSCommonDelegate mainBundle]
  +[VEiOSCommonDelegate fullScreenPlaybackOnExternalDisplay]
  +[VEiOSCommonDelegate setDelegateSubclass:]
  +[VEiOSCommonDelegate allowSaving]
  +[VEiOSCommonDelegate ignoreReadOnly]
  +[VEiOSCommonDelegate currentProject]
  +[VEiOSCommonDelegate nukeCaches]
  +[VEiOSCommonDelegate activeCoreProjectViewController]
  +[VEiOSCommonDelegate shouldPlaySlowMoWhenPreviewing]
  +[VEiOSCommonDelegate playbackFrameRateMode]
  +[VEiOSCommonDelegate exportFrameRateMode]
  +[VEiOSCommonDelegate duckingAmount]
  +[VEiOSCommonDelegate forceTeardownDisplayOnProjectChange]
  +[VEiOSCommonDelegate updateProjectAndCachesOnPhotosLibraryChange]
  +[VEiOSCommonDelegate playbackPixelCount]
  +[VEiOSCommonDelegate setCurrentProject:]
  +[VEiOSCommonDelegate notifyCPVCProjectChanged]
  +[VEiOSCommonDelegate videoScale]
  +[VEiOSCommonDelegate setVideoScale:]
  +[VEiOSCommonDelegate furtherConstrainVideoScale]
  +[VEiOSCommonDelegate setFullScreenPlaybackOnExternalDisplay:]


AudioSessionDelegate : NSObject /usr/lib/libc++.1.dylib <AVAudioSessionDelegate>
 @property  BOOL isUsingSpeaker
 @property  BOOL isUsingAudioInput
 @property  BOOL interruptions
 @property  BOOL preventSessionChanges
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AudioSessionDelegate sharedInstance]

  // instance methods
  -[AudioSessionDelegate init]
  -[AudioSessionDelegate dealloc]
  -[AudioSessionDelegate inputIsAvailable]
  -[AudioSessionDelegate beginInterruption]
  -[AudioSessionDelegate endInterruptionWithFlags:]
  -[AudioSessionDelegate inputIsAvailableChanged:]
  -[AudioSessionDelegate becomeInactive]
  -[AudioSessionDelegate becomeActiveWithWantsAudioInput:]
  -[AudioSessionDelegate setInterruptions:]
  -[AudioSessionDelegate preventSessionChanges]
  -[AudioSessionDelegate setIsUsingAudioInput:]
  -[AudioSessionDelegate routeDidChange]
  -[AudioSessionDelegate setIsUsingSpeaker:]
  -[AudioSessionDelegate interruptions]
  -[AudioSessionDelegate isUsingAudioInput]
  -[AudioSessionDelegate sdf]
  -[AudioSessionDelegate ignoreInterruptionsMode]
  -[AudioSessionDelegate normalInterruptionsMode]
  -[AudioSessionDelegate volumeDBtoSlider:]
  -[AudioSessionDelegate sliderToDB:]
  -[AudioSessionDelegate isUsingSpeaker]
  -[AudioSessionDelegate setPreventSessionChanges:]


EditListCompositionState : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  CompositionTrackGroup *currentTrackGroup
 @property  CompositionTrackGroup *alternateTrackGroup
 @property  KonaClip *previousClip
 @property  KonaClip *clip
 @property  KonaClip *nextClip
 @property  float previousClipVolume
 @property  float clipVolume
 @property  float nextClipVolume
 @property  int previousClipType
 @property  int clipType
 @property  int nextClipType
 @property  {CGSize=dd} previousClipNaturalSize
 @property  {CGSize=dd} clipNaturalSize
 @property  {CGSize=dd} nextClipNaturalSize
 @property  {CGAffineTransform=dddddd} previousClipTransform
 @property  {CGAffineTransform=dddddd} clipTransform
 @property  {CGAffineTransform=dddddd} nextClipTransform
 @property  {?={?=qiIq}{?=qiIq}} videoCompTimeRange
 @property  {?={?=qiIq}{?=qiIq}} audioCompTimeRange
 @property  BOOL previousClipRequiresCA
 @property  BOOL clipRequiresCA
 @property  BOOL nextClipRequiresCA
 @property  int audioStartOffset
 @property  int audioEndOffset

  // instance methods
  -[EditListCompositionState dealloc]
  -[EditListCompositionState copyWithZone:]
  -[EditListCompositionState clip]
  -[EditListCompositionState setClip:]
  -[EditListCompositionState clipType]
  -[EditListCompositionState setClipTransform:]
  -[EditListCompositionState clipTransform]
  -[EditListCompositionState audioStartOffset]
  -[EditListCompositionState audioEndOffset]
  -[EditListCompositionState currentTrackGroup]
  -[EditListCompositionState alternateTrackGroup]
  -[EditListCompositionState setCurrentTrackGroup:]
  -[EditListCompositionState setAlternateTrackGroup:]
  -[EditListCompositionState clipRequiresCA]
  -[EditListCompositionState setClipRequiresCA:]
  -[EditListCompositionState videoCompTimeRange]
  -[EditListCompositionState setVideoCompTimeRange:]
  -[EditListCompositionState audioCompTimeRange]
  -[EditListCompositionState setAudioCompTimeRange:]
  -[EditListCompositionState setAudioStartOffset:]
  -[EditListCompositionState setAudioEndOffset:]
  -[EditListCompositionState previousClip]
  -[EditListCompositionState setPreviousClip:]
  -[EditListCompositionState nextClip]
  -[EditListCompositionState setNextClip:]
  -[EditListCompositionState previousClipVolume]
  -[EditListCompositionState setPreviousClipVolume:]
  -[EditListCompositionState clipVolume]
  -[EditListCompositionState setClipVolume:]
  -[EditListCompositionState nextClipVolume]
  -[EditListCompositionState setNextClipVolume:]
  -[EditListCompositionState previousClipNaturalSize]
  -[EditListCompositionState setPreviousClipNaturalSize:]
  -[EditListCompositionState clipNaturalSize]
  -[EditListCompositionState setClipNaturalSize:]
  -[EditListCompositionState nextClipNaturalSize]
  -[EditListCompositionState setNextClipNaturalSize:]
  -[EditListCompositionState previousClipTransform]
  -[EditListCompositionState setPreviousClipTransform:]
  -[EditListCompositionState nextClipTransform]
  -[EditListCompositionState setNextClipTransform:]
  -[EditListCompositionState previousClipRequiresCA]
  -[EditListCompositionState setPreviousClipRequiresCA:]
  -[EditListCompositionState nextClipRequiresCA]
  -[EditListCompositionState setNextClipRequiresCA:]
  -[EditListCompositionState swapForTransition]
  -[EditListCompositionState previousClipType]
  -[EditListCompositionState nextClipType]


TransitionInput : NSObject /usr/lib/libc++.1.dylib
 @property  int ID
 @property  {CGAffineTransform=dddddd} transform
 @property  {CGSize=dd} naturalSize
 @property  KonaClip *clip

  // instance methods
  -[TransitionInput transform]
  -[TransitionInput setTransform:]
  -[TransitionInput clip]
  -[TransitionInput naturalSize]
  -[TransitionInput ID]
  -[TransitionInput setNaturalSize:]
  -[TransitionInput setClip:]
  -[TransitionInput setID:]


Composition : NSObject /usr/lib/libc++.1.dylib
 @property  Project *project
 @property  NSMutableArray *switchEffects
 @property  NSMutableArray *titleEffectCopies
 @property  AVPlayerItem *playerItem
 @property  AVMutableComposition *AVComposition
 @property  AVMutableVideoComposition *videoComposition
 @property  AVMutableAudioMix *audioMix
 @property  float globalAudioVolume
 @property  {?=qiIq} duration
 @property  NSArray *editList
 @property  CompositionDuckingTimes *compositionDuckingTimes
 @property  BOOL useShortenedCompositionToEditClip
 @property  int videotrackAStartAt
 @property  int videotrackBStartAt
 @property  BOOL isExporting
 @property  {CGSize=dd} viewSize
 @property  BOOL fullScreen
 @property  BOOL isDynamicPlayBack
 @property  float dynamicScale
 @property  double aspect
 @property  BOOL hasMemoryConstraints
 @property  BOOL fullScreenPlaybackOnExternalDisplay
 @property  NSArray *transitionInputs
 @property  @? compositionDuckingTimesCreationBlock

  // instance methods
  -[Composition init]
  -[Composition dealloc]
  -[Composition duration]
  -[Composition update]
  -[Composition fullScreen]
  -[Composition setViewSize:]
  -[Composition viewSize]
  -[Composition validate]
  -[Composition refresh:]
  -[Composition setFullScreen:]
  -[Composition videoComposition]
  -[Composition audioMix]
  -[Composition playerItem]
  -[Composition setAspect:]
  -[Composition aspect]
  -[Composition playerItemDidReachEnd:]
  -[Composition markDirty]
  -[Composition applyPlayerItemProperties]
  -[Composition isExporting]
  -[Composition setGlobalAudioVolume:]
  -[Composition globalAudioVolume]
  -[Composition volumeForClip:]
  -[Composition makeAudioPointsArrayForClip:shouldUseDuckingArrays:]
  -[Composition sourceTimeRangeForClip:endOfComposition:projectStartTime:]
  -[Composition assetUsed:]
  -[Composition addVolumeRampToTrackGroup:forClip:shouldUseDucking:]
  -[Composition sourceTimeRangeForAudioClip:endOfComposition:]
  -[Composition writeVolumeRampToCompositionFromTrackGroup:endOfComposition:]
  -[Composition emptySegments:]
  -[Composition removeTrackFromAudioMix:]
  -[Composition removeTrackIfEmpty:]
  -[Composition logRemovedTrack:trackID:]
  -[Composition setRenderScale]
  -[Composition logAddedTrack:trackID:]
  -[Composition addBackTracksIfRemoved]
  -[Composition setIsExporting:]
  -[Composition CARenderingRequiredForClip:]
  -[Composition compositionItemsForState:compositionItem:backfillCompositionItem:]
  -[Composition burnInPlaybackSettings:]
  -[Composition instructionToHideTrackID:whileHidingTrackID:timeRange:requiresCARendering:]
  -[Composition updateBackgroundAudioCompositionTracks:]
  -[Composition setCompositionDuckingTimes:]
  -[Composition removeEmptyTracks]
  -[Composition finalizeVideoComposition]
  -[Composition refreshCompositionInstructionsWithinRange:]
  -[Composition fullScreenPlaybackOnExternalDisplay]
  -[Composition outputFrameRate]
  -[Composition naturalSizeForClipAfterTransform:]
  -[Composition addAudioPointsToArray:atFrameTime:volume:]
  -[Composition AVComposition]
  -[Composition clearPlayerItemProperties]
  -[Composition compositionDuckingTimes]
  -[Composition project]
  -[Composition editList]
  -[Composition setCompositionDuckingTimesCreationBlock:]
  -[Composition setProject:frameDuration:viewSize:forFullScreen:]
  -[Composition setEditList:]
  -[Composition discardPlayerItem]
  -[Composition hasMemoryConstraints]
  -[Composition shouldInsertASilentAudioTrackAsWorkaround]
  -[Composition setTransitionInputs:]
  -[Composition noteEffectChanged:]
  -[Composition noteTitleScaleChanged:]
  -[Composition setSwitchEffects:]
  -[Composition setTitleEffectCopies:]
  -[Composition transitionInputs]
  -[Composition extensionForTransitionsSupportingEatLeftRight:leftSideOfTransition:splitClip:]
  -[Composition transitionExtensionForClip:left:splitClip:]
  -[Composition transitionTopTrack]
  -[Composition transitionBottomTrack]
  -[Composition newInstructionGraphNodeForClip:clipTransform:compositionTrackID:requiresTweening:isContainedClip:applyTitleEffect:]
  -[Composition instructionToShowClip:withTrackID:withTransform:timeRange:requiresCARendering:isFreezeFrame:applyTitleEffect:]
  -[Composition addVideoInstructionsForTransition:forRange:toInstructions:previousTrackID:previousClip:previousClipRequiresCA:nextTrackID:nextClip:nextClipRequiresCA:cutawaysIntersection:]
  -[Composition cutIsContiguous:transition:next:]
  -[Composition addTransitionSoundsForState:]
  -[Composition instructionToShowImageWithClip:withTransform:timeRange:requiresCARendering:applyTitleEffect:]
  -[Composition addTitleSoundsForState:]
  -[Composition addAlternatesForClip:toInstruction:trackID:]
  -[Composition fadeToBlackStartCMTime]
  -[Composition fadeToBlackDurationCMTime]
  -[Composition assembleAudioCompositionTrackGroups:destinationTrackGroupCount:audioItem:clip:shouldUseDucking:shouldLoopClipContents:]
  -[Composition percentBetweenRange:forTime:firstRange:secondRange:]
  -[Composition splitCompositionInstruction:atTime:options:]
  -[Composition compositeAlternateNodes:intoOriginalInstruction:]
  -[Composition switchEffects]
  -[Composition titleEffectCopies]
  -[Composition transformForCutaway:underlayTransform:forSize:]
  -[Composition addCutaway:toInstruction:transform:underlayTransform:]
  -[Composition newInstructionGraphNodeForClipTitleEffect:inputIGNode:]
  -[Composition compositionDuckingTimesCreationBlock]
  -[Composition splitCompositionState:forCutaways:searchIndex:projectDuration:]
  -[Composition updateVideoAndAudioInstructionForState:cutSwaped:originalState:]
  -[Composition updateCutawayCompositionTracks:]
  -[Composition updateInstructionsWithTitles:]
  -[Composition updateForegroundAudioCompositionTracks:]
  -[Composition insertASilentAudioTrackAsWorkaround]
  -[Composition splitCompositionState:atTime:]
  -[Composition addIntersectingCutaways:toInstruction:]
  -[Composition instructionToTransitionTracksForRange:requiresCARendering:incomingClipIsNarrower:incomingClipRequiresBG:outgoingClipRequiresBG:incomingClipIsZoomed:outgoingClipIsZoomed:transitionClip:applyTitleEffect:]
  -[Composition cutawaysIntersectingWithClip:previousTransition:nextTransition:cutaways:]
  -[Composition rebuildCompositionInstructionsForMovieKenBurnsExtra:]
  -[Composition rebuildCompositionInstructionsForClip:]
  -[Composition timeRangeForClipIncludingTransitions:]
  -[Composition newInstructionGraphNodeToShowImageWithClip:clipTransform:isContainedClip:]
  -[Composition newInstructionGraphNodeToShowMultiUpClip:clipTransform:compositionTrackID:requiresTweening:applyTitleEffect:]
  -[Composition newInstructionGraphNodeToShowGeneratorClip:]
  -[Composition newInstructionGraphNodeToShowMovieClip:clipTransform:compositionTrackID:]
  -[Composition newInstructionGraphNodeToShowKenBurnsEffect:withInfo:inputNode:]
  -[Composition transformKBForVisibleRect:imageSize:aspect:]
  -[Composition splitCompositionInstructionListAtTime:options:]
  -[Composition setDynamicPlayBack:]
  -[Composition lowerDynamicResolution]
  -[Composition raiseDynamicResolution]
  -[Composition newInstructionGraphNodeToShowIrisMovieClip:clipTransform:compositionTrackID:requiresTweening:applyTitleEffect:]
  -[Composition checkIt:timeRange:]
  -[Composition useShortenedCompositionToEditClip]
  -[Composition setUseShortenedCompositionToEditClip:]
  -[Composition videotrackAStartAt]
  -[Composition videotrackBStartAt]
  -[Composition isDynamicPlayBack]
  -[Composition setIsDynamicPlayBack:]
  -[Composition dynamicScale]
  -[Composition setDynamicScale:]
  -[Composition setHasMemoryConstraints:]
  -[Composition setFullScreenPlaybackOnExternalDisplay:]


IrisSampleInfo : NSObject /usr/lib/libc++.1.dylib
 @property  AVAsset *asset
 @property  NSObject<OS_dispatch_queue> *dispatchQueue
 @property  NSArray *timeRanges
 @property  NSArray *gapTimeRanges
 @property  {?=qiIq} dominantSampleDuration

  // class methods
  +[IrisSampleInfo initialize]
  +[IrisSampleInfo clearCache]
  +[IrisSampleInfo infoForAsset:]

  // instance methods
  -[IrisSampleInfo .cxx_destruct]
  -[IrisSampleInfo dispatchQueue]
  -[IrisSampleInfo setDispatchQueue:]
  -[IrisSampleInfo asset]
  -[IrisSampleInfo setAsset:]
  -[IrisSampleInfo initWithAsset:]
  -[IrisSampleInfo timeRanges]
  -[IrisSampleInfo setTimeRanges:]
  -[IrisSampleInfo setGapTimeRanges:]
  -[IrisSampleInfo setDominantSampleDuration:]
  -[IrisSampleInfo loadInfoWithCompletionHandler:]
  -[IrisSampleInfo loadInfoWithTrackOutput:completionHandler:]
  -[IrisSampleInfo gapTimeRanges]
  -[IrisSampleInfo dominantSampleDuration]


VECGCDCoalescer : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[VECGCDCoalescer coalescerWithDelay:]
  +[VECGCDCoalescer sharedFiveSecondCoalescer]

  // instance methods
  -[VECGCDCoalescer init]
  -[VECGCDCoalescer dealloc]
  -[VECGCDCoalescer .cxx_destruct]
  -[VECGCDCoalescer _applicationWillTerminate:]
  -[VECGCDCoalescer _processImmediately]
  -[VECGCDCoalescer _processTimer]
  -[VECGCDCoalescer initWithQueue:delay:]
  -[VECGCDCoalescer _addBlock:withKey:]
  -[VECGCDCoalescer debugWaitUntilBlocksHaveBeenProcessed]
  -[VECGCDCoalescer coalesceBlock:withKey:]


DebugPrefsViewController : UITableViewController /System/Library/Frameworks/CoreMedia.framework/CoreMedia
 @property  NSMutableDictionary *extraObjects
 @property  NSArray *sections

  // class methods
  +[DebugPrefsViewController hasDebugPrefs]
  +[DebugPrefsViewController isDebugPrefs:]

  // instance methods
  -[DebugPrefsViewController init]
  -[DebugPrefsViewController .cxx_destruct]
  -[DebugPrefsViewController viewWillAppear:]
  -[DebugPrefsViewController supportedInterfaceOrientations]
  -[DebugPrefsViewController sections]
  -[DebugPrefsViewController tableView:numberOfRowsInSection:]
  -[DebugPrefsViewController tableView:cellForRowAtIndexPath:]
  -[DebugPrefsViewController numberOfSectionsInTableView:]
  -[DebugPrefsViewController tableView:titleForHeaderInSection:]
  -[DebugPrefsViewController tableView:titleForFooterInSection:]
  -[DebugPrefsViewController setSections:]
  -[DebugPrefsViewController tableView:didSelectRowAtIndexPath:]
  -[DebugPrefsViewController presentOverViewController:]
  -[DebugPrefsViewController debugPrefsStop:]
  -[DebugPrefsViewController extraObjects]
  -[DebugPrefsViewController restoreDefaultsInSections:]
  -[DebugPrefsViewController restoreDefaults:]
  -[DebugPrefsViewController loadDebugMenu]
  -[DebugPrefsViewController switchChanged:]
  -[DebugPrefsViewController setExtraObjects:]
  -[DebugPrefsViewController addAccessory:forMenuItem:]


MultiValuePrefsController : UITableViewController /System/Library/Frameworks/CoreMedia.framework/CoreMedia
 @property  NSDictionary *menuDict

  // instance methods
  -[MultiValuePrefsController init]
  -[MultiValuePrefsController .cxx_destruct]
  -[MultiValuePrefsController viewWillAppear:]
  -[MultiValuePrefsController supportedInterfaceOrientations]
  -[MultiValuePrefsController tableView:numberOfRowsInSection:]
  -[MultiValuePrefsController tableView:cellForRowAtIndexPath:]
  -[MultiValuePrefsController tableView:willSelectRowAtIndexPath:]
  -[MultiValuePrefsController tableView:didSelectRowAtIndexPath:]
  -[MultiValuePrefsController setMenuDict:]
  -[MultiValuePrefsController setMultiValue:]
  -[MultiValuePrefsController menuDict]


MathHelpers : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[MathHelpers mapValue:fromRangeStart:fromRangeEnd:toRangeStart:toRangeEnd:clamp:]
  +[MathHelpers rectWithAspectRatio:thatFillsRectBiasedVertically:isTitle:sourceAspectRatio:]
  +[MathHelpers rectWithAspectRatio:thatFillsRect:]
  +[MathHelpers rectWithShortestWidthByComparingRect1:rect2:]
  +[MathHelpers scaleRect:horizontalScale:verticalScale:maintainCenterPoint:]
  +[MathHelpers rectWithLongestWidthByComparingRect1:rect2:]
  +[MathHelpers horizontallyCenterRect:overRect:]
  +[MathHelpers verticallyCenterRect:overRect:]
  +[MathHelpers horizontallyCenterRect:overPoint:]
  +[MathHelpers verticallyCenterRect:overPoint:]
  +[MathHelpers moveRectHorizontally:toKeepWithinRect:]
  +[MathHelpers moveRectVertically:toKeepWithinRect:]
  +[MathHelpers centerRect:overRect:]
  +[MathHelpers negatePoint:]
  +[MathHelpers endPointOfLineWithStartPoint:slope:distance:]
  +[MathHelpers centerRect:overPoint:]
  +[MathHelpers moveRect:toKeepWithinRect:]
  +[MathHelpers slopeOfLineWithStartPoint:endPoint:]
  +[MathHelpers lineWithMidPoint:slope:length:outStartPoint:outEndPoint:]
  +[MathHelpers midPointBetweenPoint1:point2:]


NSArrayIndexer : NSObject /usr/lib/libc++.1.dylib
 @property  NSIndexSet *insertedIndexesAfterDeletions
 @property  NSIndexSet *deletedIndexesBeforeInsertions
 @property  NSArray *initialArray
 @property  NSArray *finalArray

  // class methods
  +[NSArrayIndexer indexerWithInitialArray:finalArray:]

  // instance methods
  -[NSArrayIndexer .cxx_destruct]
  -[NSArrayIndexer analyze]
  -[NSArrayIndexer initWithInitialArray:finalArray:]
  -[NSArrayIndexer setInitialArray:]
  -[NSArrayIndexer setFinalArray:]
  -[NSArrayIndexer initialArray]
  -[NSArrayIndexer finalArray]
  -[NSArrayIndexer insertedIndexesAfterDeletions]
  -[NSArrayIndexer deletedIndexesBeforeInsertions]
  -[NSArrayIndexer setInsertedIndexesAfterDeletions:]
  -[NSArrayIndexer setDeletedIndexesBeforeInsertions:]


PHCloudActivityView : UIView /System/Library/Frameworks/CoreMedia.framework/CoreMedia
 @property  CALayer *cloudImageLayer
 @property  CALayer *completedImageLayer
 @property  CALayer *loadingImageLayer
 @property  CAPropertyAnimation *rotationAnimation
 @property  unsigned long state
 @property  double initialWidth

  // class methods
  +[PHCloudActivityView initialize]

  // instance methods
  -[PHCloudActivityView init]
  -[PHCloudActivityView dealloc]
  -[PHCloudActivityView .cxx_destruct]
  -[PHCloudActivityView state]
  -[PHCloudActivityView setState:]
  -[PHCloudActivityView initWithFrame:]
  -[PHCloudActivityView layoutSubviews]
  -[PHCloudActivityView registerForNotifications]
  -[PHCloudActivityView cloudImageLayer]
  -[PHCloudActivityView setCloudImageLayer:]
  -[PHCloudActivityView completedImageLayer]
  -[PHCloudActivityView setCompletedImageLayer:]
  -[PHCloudActivityView loadingImageLayer]
  -[PHCloudActivityView setLoadingImageLayer:]
  -[PHCloudActivityView persistenceManagerDidChange:]
  -[PHCloudActivityView streamingDidStart:]
  -[PHCloudActivityView streamingDidStop:]
  -[PHCloudActivityView updateViewVisibility]
  -[PHCloudActivityView stopRotationAnimation]
  -[PHCloudActivityView startRotationAnimation]
  -[PHCloudActivityView rotationAnimation]
  -[PHCloudActivityView setRotationAnimation:]
  -[PHCloudActivityView initialWidth]
  -[PHCloudActivityView setInitialWidth:]


PanoramaClip : KenBurnsClip <CompoundClipInformation>
 @property  NSArray *containedClips
 @property  KenBurnsClip *templateClip
 @property  int projectFrameRate
 @property  double projectAspectRatio
 @property  unsigned long panoramaStyle
 @property  unsigned long panoramaDirection
 @property  double panoramaTransitionDuration
 @property  double burstAcrossSubClipDuration
 @property  NSArray *detectedFaceRects
 @property  BOOL panSupportsDoublePan
 @property  BOOL panSupportsTriplePan
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PanoramaClip sharedRandomNumberGenerator]

  // instance methods
  -[PanoramaClip copyWithZone:]
  -[PanoramaClip .cxx_destruct]
  -[PanoramaClip setDuration:]
  -[PanoramaClip isPano]
  -[PanoramaClip projectFrameRate]
  -[PanoramaClip containedClips]
  -[PanoramaClip panoramaStyle]
  -[PanoramaClip setContainedClips:]
  -[PanoramaClip setPanoramaDirection:]
  -[PanoramaClip setPanoramaTransitionDuration:]
  -[PanoramaClip setPanoramaStyle:]
  -[PanoramaClip panSupportsDoublePan]
  -[PanoramaClip panSupportsTriplePan]
  -[PanoramaClip isBurstAcrossStyleSuitable]
  -[PanoramaClip setBurstAcrossSubClipDuration:]
  -[PanoramaClip initWithKenBurnsClip:]
  -[PanoramaClip containedClipsWithInTransition:outTransition:]
  -[PanoramaClip adjustDurationsOfClips:withInTransition:outTransition:]
  -[PanoramaClip plistRepresentationFromProject:]
  -[PanoramaClip setContentsFromPlist:inProject:]
  -[PanoramaClip takePropertiesFromKenBurnsClip:]
  -[PanoramaClip expandsEditList]
  -[PanoramaClip projectAspectRatio]
  -[PanoramaClip setTemplateClip:]
  -[PanoramaClip panoramaViewportSizeForImageSize:]
  -[PanoramaClip descriptionOfPanoramaStyle]
  -[PanoramaClip descriptionOfPanoramaDirection]
  -[PanoramaClip panoramaTransitionDuration]
  -[PanoramaClip burstAcrossSubClipDuration]
  -[PanoramaClip templateClip]
  -[PanoramaClip panoramaDirection]
  -[PanoramaClip buildClipsForSinglePanorama]
  -[PanoramaClip buildClipsForDoublePanorama]
  -[PanoramaClip buildClipsForTriplePanorama]
  -[PanoramaClip appendLetterboxZoomOutToClips:zoomOutFromLastClip:]
  -[PanoramaClip buildClipsForBurstAcrossPanorama]
  -[PanoramaClip computeBurstAcrossClipCount:minLeftEdge:maxLeftEdge:]
  -[PanoramaClip equalizeDurationsOfClips:totalDuration:]
  -[PanoramaClip lowLevelCustomizePanoramaKB:panRight:leftLimit:rightLimit:allowLeftCrop:allowRightCrop:leftZoom:rightZoom:]
  -[PanoramaClip offsetKenBurnsFramesForFaces:panRight:]
  -[PanoramaClip rectEnclosingAllFacesWithFaceScale:imageRect:]
  -[PanoramaClip totalDurationOfClips:]
  -[PanoramaClip logDetectedFaceRects]
  -[PanoramaClip detectedFaceRects]
  -[PanoramaClip setDetectedFaceRects:]


MotionGeneratorCompositionItem : MovieCompositionItem
  // instance methods
  -[MotionGeneratorCompositionItem audioTrackSegmentsLoopedForDestinationTimeRange:]
  -[MotionGeneratorCompositionItem hasVideoContent]
  -[MotionGeneratorCompositionItem videoTrackSegmentsWithDestinationRange:]
  -[MotionGeneratorCompositionItem audioTrackSegmentsWithDestinationTime:]
  -[MotionGeneratorCompositionItem initWithClip:]


NewMediaClip : KenBurnsClip <CompoundClipInformation>
 @property  NSArray *containedClips
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NewMediaClip .cxx_destruct]
  -[NewMediaClip setDuration:]
  -[NewMediaClip maxDuration]
  -[NewMediaClip containedClips]
  -[NewMediaClip setContainedClips:]
  -[NewMediaClip expandsEditList]
  -[NewMediaClip newMediaAssetVideoPiece]
  -[NewMediaClip initWithKBClip:]


MBAssetLoader : NSObject /usr/lib/libc++.1.dylib
 @property  NSOperationQueue *operationQueue
 @property  NSRecursiveLock *queuedOperationsLock
 @property  NSMutableArray *queuedOperations
 @property  unsigned long maxConcurrentOperationCount
 @property  NSArray *prefetchKeys

  // class methods
  +[MBAssetLoader sharedLoader]

  // instance methods
  -[MBAssetLoader init]
  -[MBAssetLoader .cxx_destruct]
  -[MBAssetLoader operationQueue]
  -[MBAssetLoader setOperationQueue:]
  -[MBAssetLoader maxConcurrentOperationCount]
  -[MBAssetLoader setMaxConcurrentOperationCount:]
  -[MBAssetLoader queuedOperations]
  -[MBAssetLoader setQueuedOperations:]
  -[MBAssetLoader loadAssetsFromURLs:withResultHandler:completionHandler:]
  -[MBAssetLoader setQueuedOperationsLock:]
  -[MBAssetLoader setPrefetchKeys:]
  -[MBAssetLoader suspendOperationQueue:]
  -[MBAssetLoader resumeOperationQueue:]
  -[MBAssetLoader _loadAssetsFromURLs:withResultHandler:completionHandler:]
  -[MBAssetLoader prefetchKeys]
  -[MBAssetLoader queuedOperationsLock]


MBLibraryClipsLoader : MBClipsLoader <PHPhotoLibraryChangeObserver>
 @property  NSMutableDictionary *identifierURLsToClipsMap
 @property  NSSet *insertedAssetURLs
 @property  NSSet *assetURLs
 @property  PHAssetCollection *assetCollection
 @property  PHFetchResult *fetchResult
 @property  NSRecursiveLock *updateLock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MBLibraryClipsLoader dealloc]
  -[MBLibraryClipsLoader load]
  -[MBLibraryClipsLoader .cxx_destruct]
  -[MBLibraryClipsLoader fetchResult]
  -[MBLibraryClipsLoader photoLibraryDidChange:]
  -[MBLibraryClipsLoader updateLock]
  -[MBLibraryClipsLoader assetCollection]
  -[MBLibraryClipsLoader setAssetCollection:]
  -[MBLibraryClipsLoader setFetchResult:]
  -[MBLibraryClipsLoader clips]
  -[MBLibraryClipsLoader fetchAssets]
  -[MBLibraryClipsLoader setIdentifierURLsToClipsMap:]
  -[MBLibraryClipsLoader identifierURLsToClipsMap]
  -[MBLibraryClipsLoader assetURLs]
  -[MBLibraryClipsLoader setAssetURLs:]
  -[MBLibraryClipsLoader countForAllClips]
  -[MBLibraryClipsLoader initWithAssetCollection:showOnlyFavorites:]
  -[MBLibraryClipsLoader addClipWithURL:completionHandler:]
  -[MBLibraryClipsLoader setInsertedAssetURLs:]
  -[MBLibraryClipsLoader fetchAssetURLs]
  -[MBLibraryClipsLoader insertedAssetURLs]
  -[MBLibraryClipsLoader loadClipsFromURLs:]
  -[MBLibraryClipsLoader setUpdateLock:]


CustomCompositorUtils : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[CustomCompositorUtils SetupVideoCompositionContext:]


AVEditSerializedOutput : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[AVEditSerializedOutput initialize]
  +[AVEditSerializedOutput sharedSerialOutput]

  // instance methods
  -[AVEditSerializedOutput serializeComposition:containingAssetURLs:]
  -[AVEditSerializedOutput serializeVideoComposition:]
  -[AVEditSerializedOutput serializeAudioMix:]
  -[AVEditSerializedOutput exportSerializedToURL:withComposition:andVideoComposition:andAudioMix:]


NSOrderedSetIndexer : NSObject /usr/lib/libc++.1.dylib
 @property  NSIndexSet *insertedIndexesAfterDeletions
 @property  NSIndexSet *deletedIndexesBeforeInsertions
 @property  NSOrderedSet *initialOrderedSet
 @property  NSOrderedSet *finalOrderedSet

  // class methods
  +[NSOrderedSetIndexer indexerWithInitialSet:finalSet:]

  // instance methods
  -[NSOrderedSetIndexer .cxx_destruct]
  -[NSOrderedSetIndexer analyze]
  -[NSOrderedSetIndexer insertedIndexesAfterDeletions]
  -[NSOrderedSetIndexer deletedIndexesBeforeInsertions]
  -[NSOrderedSetIndexer setInsertedIndexesAfterDeletions:]
  -[NSOrderedSetIndexer setDeletedIndexesBeforeInsertions:]
  -[NSOrderedSetIndexer initWithInitialSet:finalSet:]
  -[NSOrderedSetIndexer setInitialOrderedSet:]
  -[NSOrderedSetIndexer setFinalOrderedSet:]
  -[NSOrderedSetIndexer initialOrderedSet]
  -[NSOrderedSetIndexer finalOrderedSet]


TrailerTheme : Theme
  // instance methods
  -[TrailerTheme micaFileNameForTitleNamed:]


IrisClipStyleTransition : IrisClipStyle
 @property  int containedTransitionOverlapOffset
 @property  BOOL buildIntro
 @property  BOOL buildOutro
 @property  BOOL videoContainedWithinTransitions

  // instance methods
  -[IrisClipStyleTransition maximumDuration]
  -[IrisClipStyleTransition minimumDuration]
  -[IrisClipStyleTransition idealDuration]
  -[IrisClipStyleTransition containedClipsWithInTransition:outTransition:]
  -[IrisClipStyleTransition containedTransitionOverlapOffset]
  -[IrisClipStyleTransition videoContainedWithinTransitions]
  -[IrisClipStyleTransition minimumPhotoFrameDuration]
  -[IrisClipStyleTransition setBuildIntro:]
  -[IrisClipStyleTransition setVideoContainedWithinTransitions:]
  -[IrisClipStyleTransition setBuildOutro:]
  -[IrisClipStyleTransition preferredInTransitionDurationRange]
  -[IrisClipStyleTransition preferredOutTransitionDurationRange]
  -[IrisClipStyleTransition buildIntro]
  -[IrisClipStyleTransition buildOutro]


PHVideoAssetWriter : PHAssetWriter
 @property  AVAssetExportSession *exportSession

  // instance methods
  -[PHVideoAssetWriter .cxx_destruct]
  -[PHVideoAssetWriter request]
  -[PHVideoAssetWriter transfer]
  -[PHVideoAssetWriter setExportSession:]
  -[PHVideoAssetWriter exportSession]
  -[PHVideoAssetWriter estimatedOutputSizeWithError:]
  -[PHVideoAssetWriter _estimatedOutputSizeWithError:]
  -[PHVideoAssetWriter requestWithNetworkAccess:]


iOSPMR : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[iOSPMR sharedInstance]

  // instance methods
  -[iOSPMR init]
  -[iOSPMR dealloc]
  -[iOSPMR returnStartTime_Nanoseconds]
  -[iOSPMR returnDelta_Milliseconds:]
  -[iOSPMR stopTimerAndReportPMR:logFilename:pmrKey:comment:]
  -[iOSPMR returnDelta_Nanoseconds:]
  -[iOSPMR convertNanoSecondsToSeconds:]
  -[iOSPMR writePMRInfoToFile:pmrString:]
  -[iOSPMR addDelta:toArray:]


MotionGeneratorClip : KonaClip
 @property  PVEffect *generatorEffect

  // instance methods
  -[MotionGeneratorClip .cxx_destruct]
  -[MotionGeneratorClip maxDuration]
  -[MotionGeneratorClip clipType]
  -[MotionGeneratorClip isFreezeFrame]
  -[MotionGeneratorClip generatorEffect]
  -[MotionGeneratorClip hasVisualCharacteristic]
  -[MotionGeneratorClip hasAudioCharacteristic]
  -[MotionGeneratorClip plistRepresentationFromProject:]
  -[MotionGeneratorClip setContentsFromPlist:inProject:]
  -[MotionGeneratorClip validateEffectRange:inProject:]
  -[MotionGeneratorClip setGeneratorEffect:]


QueuedGeocoder : NSObject /usr/lib/libc++.1.dylib
 @property  CLGeocoder *geocoder
 @property  NSMapTable *locationToPlacemarksMap
 @property  NSMapTable *locationToResultMap
 @property  GeocodeRequest *currentRequest
 @property  Reachability *reachability
 @property  NSRecursiveLock *lock
 @property  double placemarkDifferentationDistance

  // class methods
  +[QueuedGeocoder sharedGeocoder]

  // instance methods
  -[QueuedGeocoder init]
  -[QueuedGeocoder lock]
  -[QueuedGeocoder .cxx_destruct]
  -[QueuedGeocoder _init]
  -[QueuedGeocoder currentRequest]
  -[QueuedGeocoder setLock:]
  -[QueuedGeocoder reverseGeocodeLocation:completionHandler:]
  -[QueuedGeocoder setCurrentRequest:]
  -[QueuedGeocoder reachability]
  -[QueuedGeocoder setReachability:]
  -[QueuedGeocoder geocoder]
  -[QueuedGeocoder setGeocoder:]
  -[QueuedGeocoder dequeueRequest]
  -[QueuedGeocoder setLocationToPlacemarksMap:]
  -[QueuedGeocoder setLocationToResultMap:]
  -[QueuedGeocoder setPlacemarkDifferentationDistance:]
  -[QueuedGeocoder locationToPlacemarksMap]
  -[QueuedGeocoder placemarkDifferentationDistance]
  -[QueuedGeocoder locationToResultMap]


VECSchedulingManager : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[VECSchedulingManager concurrentScheduler]
  +[VECSchedulingManager serialScheduler]
  +[VECSchedulingManager concurrentSchedulerWithBatchSize:]
  +[VECSchedulingManager sharedSerialScheduler]
  +[VECSchedulingManager sharedConcurrentScheduler]

  // instance methods
  -[VECSchedulingManager init]
  -[VECSchedulingManager .cxx_destruct]
  -[VECSchedulingManager resume]
  -[VECSchedulingManager suspend]
  -[VECSchedulingManager _processNextBatch]
  -[VECSchedulingManager registerRequest:]
  -[VECSchedulingManager _priorityIndexWithPriority:]
  -[VECSchedulingManager deregisterRequest:]
  -[VECSchedulingManager postSchedulingRequest:withPriority:]
  -[VECSchedulingManager setIsFIFO:]
  -[VECSchedulingManager processTaskWithPriority:taskHandler:]
  -[VECSchedulingManager cancelSchedulingRequestWithID:]
  -[VECSchedulingManager cancelAllSchedulingRequests]


MBDownloadClipsLoader : MBClipsLoader <PHAssetRepresentationDownloadObserver>
 @property  NSSet *assetURLs
 @property  NSSet *insertedAssetURLs
 @property  NSMutableDictionary *identifierURLsToClipsMap
 @property  NSRecursiveLock *updateLock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MBDownloadClipsLoader init]
  -[MBDownloadClipsLoader load]
  -[MBDownloadClipsLoader .cxx_destruct]
  -[MBDownloadClipsLoader updateLock]
  -[MBDownloadClipsLoader setIdentifierURLsToClipsMap:]
  -[MBDownloadClipsLoader identifierURLsToClipsMap]
  -[MBDownloadClipsLoader assetURLs]
  -[MBDownloadClipsLoader setAssetURLs:]
  -[MBDownloadClipsLoader downloadStateOfAssetRepresentationDidChange:previousState:currentState:]
  -[MBDownloadClipsLoader setInsertedAssetURLs:]
  -[MBDownloadClipsLoader fetchAssetURLs]
  -[MBDownloadClipsLoader insertedAssetURLs]
  -[MBDownloadClipsLoader loadClipsFromURLs:]
  -[MBDownloadClipsLoader setUpdateLock:]


KenBurnsInfo : NSObject /usr/lib/libc++.1.dylib <NSCoding, NSCopying>
 @property  BOOL allowEffect
 @property  BOOL effectDisabled
 @property  float outputAspectRatio
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} startFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} endFrame
 @property  {CGSize=dd} playbackImageSize

  // class methods
  +[KenBurnsInfo objectFromPlist:]
  +[KenBurnsInfo defaultKBInfo]

  // instance methods
  -[KenBurnsInfo init]
  -[KenBurnsInfo copyWithZone:]
  -[KenBurnsInfo encodeWithCoder:]
  -[KenBurnsInfo initWithCoder:]
  -[KenBurnsInfo setStartFrame:]
  -[KenBurnsInfo setEndFrame:]
  -[KenBurnsInfo endFrame]
  -[KenBurnsInfo startFrame]
  -[KenBurnsInfo playbackImageSize]
  -[KenBurnsInfo setPlaybackImageSize:]
  -[KenBurnsInfo setOutputAspectRatio:]
  -[KenBurnsInfo setEffectDisabled:]
  -[KenBurnsInfo plistRepresentation]
  -[KenBurnsInfo allowEffect]
  -[KenBurnsInfo effectDisabled]
  -[KenBurnsInfo outputAspectRatio]
  -[KenBurnsInfo adjustRect:forRenderingIntent:currentImageSize:]
  -[KenBurnsInfo transformForRect:toViewSize:]
  -[KenBurnsInfo setAllowEffect:]
  -[KenBurnsInfo updateKBInfoForNewPlaybackSize:]
  -[KenBurnsInfo startFrameForRenderingIntent:currentImageSize:]
  -[KenBurnsInfo endFrameForRenderingIntent:currentImageSize:]
  -[KenBurnsInfo startTransformToViewSize:]
  -[KenBurnsInfo endTransformToViewSize:]


CompoundClipHelper : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[CompoundClipHelper addTransitionsWithName:transitionDuration:transitionEffectProperties:betweenClips:]
  +[CompoundClipHelper addTransitionsWithName:transitionDuration:betweenClips:]


DefaultMapLocation : MapLocation
  // instance methods
  -[DefaultMapLocation isResolved]
  -[DefaultMapLocation resolveWithCompletionHandler:]
  -[DefaultMapLocation isResolving]
  -[DefaultMapLocation hasValidCoordinate]


BEAlertController : UIAlertController /System/Library/Frameworks/CoreMedia.framework/CoreMedia
 @property  BOOL isSheet
 @property  long long alertTag

  // class methods
  +[BEAlertController showOneButtonAlertWithTitle:message:buttonTitle:buttonHandler:]
  +[BEAlertController showOneButtonSheetOnViewController:withTitle:message:buttonTitle:buttonHandler:]
  +[BEAlertController showTwoButtonAlertWithTitle:message:button1Title:button1Style:button1Handler:button2Title:button2Style:button2Handler:]
  +[BEAlertController showTwoButtonSheetOnViewController:withTitle:message:button1Title:button1Style:button1Handler:button2Title:button2Style:button2Handler:]

  // instance methods
  -[BEAlertController textFieldCount]
  -[BEAlertController buttonCount]
  -[BEAlertController viewDidDisappear:]
  -[BEAlertController isSheet]
  -[BEAlertController setIsSheet:]
  -[BEAlertController cancelButtonAction]
  -[BEAlertController showAnimated:]
  -[BEAlertController dismissWithNoActionAnimated:]
  -[BEAlertController dismissWithCancelActionAnimated:]
  -[BEAlertController initAlertWithTitle:message:]
  -[BEAlertController addAlertCancelButtonWithTitle:tag:action:]
  -[BEAlertController initSheetWithTitle:message:]
  -[BEAlertController showOnViewController:animated:]
  -[BEAlertController addAlertButtonWithTitle:style:tag:action:]
  -[BEAlertController initWithStyle:title:message:]
  -[BEAlertController buttonActionWithTag:]
  -[BEAlertController textFieldWithTag:]
  -[BEAlertController addAlertButton:]
  -[BEAlertController addAlertButtonWithTitle:tag:action:]
  -[BEAlertController addAlertDestructiveButtonWithTitle:tag:action:]
  -[BEAlertController addAlertTextFieldWithTag:configurationBlock:]
  -[BEAlertController showInView:viewController:animated:]
  -[BEAlertController showFromRect:inView:viewController:arrowDirection:animated:]
  -[BEAlertController dismissWithActionForTag:animated:]
  -[BEAlertController textInFieldWithTag:]
  -[BEAlertController alertTag]
  -[BEAlertController setAlertTag:]


BEAlertAction : UIAlertAction /System/Library/Frameworks/CoreMedia.framework/CoreMedia
 @property  long long tag
 @property  @? actionHandler

  // instance methods
  -[BEAlertAction .cxx_destruct]
  -[BEAlertAction tag]
  -[BEAlertAction setActionHandler:]
  -[BEAlertAction actionHandler]
  -[BEAlertAction setTag:]
  -[BEAlertAction initWithTitle:style:tag:action:]
  -[BEAlertAction doActionHandler]


IrisMovie : VideoMovie
 @property  {?=qiIq} cachedPreciseAssetStart
 @property  BOOL front

  // instance methods
  -[IrisMovie copyWithZone:]
  -[IrisMovie duration]
  -[IrisMovie startTime]
  -[IrisMovie cacheVideoTrackInformationOfAsset:]
  -[IrisMovie cachedPreciseAssetStart]
  -[IrisMovie setCachedPreciseAssetStart:]
  -[IrisMovie front]
  -[IrisMovie initWithIdentifierURL:asset:front:]


ReaderWriterExportController : ExportController
  // class methods
  +[ReaderWriterExportController stringForStatus:]

  // instance methods
  -[ReaderWriterExportController progress]
  -[ReaderWriterExportController cancelExport]
  -[ReaderWriterExportController continueExportAfterDelay]
  -[ReaderWriterExportController noteSessionProgressed:]
  -[ReaderWriterExportController mapAssetReaderStatusToExportStatus:]
  -[ReaderWriterExportController mapAssetWriterStatusToExportStatus:]
  -[ReaderWriterExportController updateStatusAndErrorFromReader:andWriter:]
  -[ReaderWriterExportController fileTypeFromExtension]
  -[ReaderWriterExportController videoDecompressionSettingsForVideoCompressionSettings:]
  -[ReaderWriterExportController audioCompressionSettings]
  -[ReaderWriterExportController transferSampleBuffers:assetReader:assetWriterInput:assetWriter:timeRangeToExport:queue:pass:completionBlock:]
  -[ReaderWriterExportController continueExportForNextPreset]
  -[ReaderWriterExportController _setupMovieController]
  -[ReaderWriterExportController _compositionForExport]
  -[ReaderWriterExportController releaseMovieController]
  -[ReaderWriterExportController updateThemeImages]
  -[ReaderWriterExportController videoCompressionSettings]


KonaClip : NSObject /usr/lib/libc++.1.dylib <MiroClip, MiroClip_Shim, KonaClipMiroAutoEditAdditions, SpeedRangeDelegate, NSCopying, AltAspect>
 @property  int minStart
 @property  int maxEnd
 @property  int maxDur
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  float speed
 @property  SpeedRanges *speedRanges
 @property  float frameRate
 @property  VideoMovie *videoMovie
 @property  int startTime
 @property  int duration
 @property  int maxDuration
 @property  float sourceStartTime
 @property  float sourceDuration
 @property  int rawSourceDuration
 @property  NSArray *multiUpContainedClips
 @property  PHAsset *asset
 @property  {CGSize=dd} naturalSizeWithTransform
 @property  BOOL isSlomo
 @property  BOOL audioEnabled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  Movie *movie
 @property  int duration
 @property  int maxDuration
 @property  int rawSourceDuration
 @property  NSDate *creationDate
 @property  float rotation
 @property  NSURL *identifierURL
 @property  int startOffset
 @property  NSString *audioTitle
 @property  NSString *audioArtist
 @property  BOOL audioEnabled
 @property  NSDictionary *movieMapLocation
 @property  int startTime
 @property  NSString *name
 @property  int transitionEatLeft
 @property  int transitionEatRight
 @property  float audioVolume
 @property  NSURL *movieURL
 @property  KonaClip *anchorItem
 @property  int anchorLocalOffset
 @property  int anchorTargetOffset
 @property  KonaClip *precisionSourceClip
 @property  int precisionTrack
 @property  int freezeFrame
 @property  float scaleFactor
 @property  float translateX
 @property  float translateY
 @property  int audioStartOffset
 @property  int audioEndOffset
 @property  int audioFadeInDuration
 @property  int audioFadeOutDuration
 @property  float speed
 @property  SpeedRanges *speedRanges
 @property  PVEffect *filterEffect
 @property  unsigned int filterEffectSeed
 @property  PVEffect *titleEffect
 @property  BOOL projectMovie
 @property  KonaClip *nextTransition
 @property  int desiredDuration
 @property  BOOL userEditing
 @property  int userEditedSize
 @property  float sourceStartTime
 @property  float sourceDuration
 @property  SpeedRanges *speedRanges
 @property  unsigned int filterEffectSeed
 @property  NSString *uuid
 @property  int clipType
 @property  float frameRate
 @property  double aspectRatio
 @property  TitleDefinition *titleDefinition
 @property  BOOL hasTitle
 @property  int titleDuration
 @property  ClipBackground *clipBackground
 @property  BOOL placeholder
 @property  BOOL showActivity
 @property  BOOL transitionChanged
 @property  int selectionStart
 @property  int selectionEnd
 @property  BOOL hasSelection
 @property  long long anchorItemIndex
 @property  AltClipCollection *altClips
 @property  double altAspect
 @property  id suggestion
 @property  id freezeInfo
 @property  id scene
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[KonaClip clip]
  +[KonaClip objectFromPlist:inProject:]
  +[KonaClip clipWithAsset:]
  +[KonaClip classForClipType:]
  +[KonaClip audioEnabledByDefault]
  +[KonaClip clipFromPlist:]

  // instance methods
  -[KonaClip init]
  -[KonaClip dealloc]
  -[KonaClip isEqual:]
  -[KonaClip name]
  -[KonaClip copyWithZone:]
  -[KonaClip encodeWithCoder:]
  -[KonaClip initWithCoder:]
  -[KonaClip .cxx_destruct]
  -[KonaClip setName:]
  -[KonaClip identifier]
  -[KonaClip uuid]
  -[KonaClip duration]
  -[KonaClip fileURL]
  -[KonaClip creationDate]
  -[KonaClip aspectRatio]
  -[KonaClip rotation]
  -[KonaClip setRotation:]
  -[KonaClip scaleFactor]
  -[KonaClip setScaleFactor:]
  -[KonaClip setCreationDate:]
  -[KonaClip asset]
  -[KonaClip setDuration:]
  -[KonaClip speed]
  -[KonaClip setSpeed:]
  -[KonaClip startTime]
  -[KonaClip setStartTime:]
  -[KonaClip startOffset]
  -[KonaClip setPlaceholder:]
  -[KonaClip scene]
  -[KonaClip hasTitle]
  -[KonaClip placeholder]
  -[KonaClip setScene:]
  -[KonaClip volume]
  -[KonaClip clearSelection]
  -[KonaClip hasSelection]
  -[KonaClip nextTransition]
  -[KonaClip setStartOffset:]
  -[KonaClip setAudioEnabled:]
  -[KonaClip audioVolume]
  -[KonaClip setAudioVolume:]
  -[KonaClip setSuggestion:]
  -[KonaClip maxDuration]
  -[KonaClip setMaxDuration:]
  -[KonaClip movieURL]
  -[KonaClip movie]
  -[KonaClip setMovie:]
  -[KonaClip suggestion]
  -[KonaClip isBurst]
  -[KonaClip isPrimary]
  -[KonaClip selectionStart]
  -[KonaClip setSelectionStart:]
  -[KonaClip selectionEnd]
  -[KonaClip setSelectionEnd:]
  -[KonaClip audioEnabled]
  -[KonaClip frameRate]
  -[KonaClip canBeDeleted]
  -[KonaClip showActivity]
  -[KonaClip setShowActivity:]
  -[KonaClip setAnchorItem:]
  -[KonaClip anchorItem]
  -[KonaClip setMovieURL:]
  -[KonaClip isPano]
  -[KonaClip clipType]
  -[KonaClip naturalSizeWithTransform]
  -[KonaClip sourceTimeRange]
  -[KonaClip isFreezeFrame]
  -[KonaClip audioStartOffset]
  -[KonaClip audioEndOffset]
  -[KonaClip setAudioStartOffset:]
  -[KonaClip setAudioEndOffset:]
  -[KonaClip hasVisualCharacteristic]
  -[KonaClip hasPhotoCharacteristic]
  -[KonaClip transform:fillDest:]
  -[KonaClip targetTimeRange]
  -[KonaClip altClips]
  -[KonaClip transitionEatLeft]
  -[KonaClip transitionEatRight]
  -[KonaClip specialTreatment]
  -[KonaClip speedRanges]
  -[KonaClip hasAudioCharacteristic]
  -[KonaClip sourceClips]
  -[KonaClip identifierURL]
  -[KonaClip sourceStartTime]
  -[KonaClip sourceDuration]
  -[KonaClip freezeInfo]
  -[KonaClip isIris]
  -[KonaClip isMultiUp]
  -[KonaClip setAudioFadeOutDuration:]
  -[KonaClip setAudioFadeInDuration:]
  -[KonaClip audioFadeInDuration]
  -[KonaClip audioFadeOutDuration]
  -[KonaClip setFreezeInfo:]
  -[KonaClip maxEnd]
  -[KonaClip minStart]
  -[KonaClip paddedMaxEnd]
  -[KonaClip paddedMinStart]
  -[KonaClip maxDur]
  -[KonaClip paddedMaxDur]
  -[KonaClip videoMovie]
  -[KonaClip loadAVAsset]
  -[KonaClip loadAVPlayerItemWithCompletionHander:progressHandler:networkAccessAllowed:]
  -[KonaClip isSlomo]
  -[KonaClip multiUpContainedClips]
  -[KonaClip rawSourceDuration]
  -[KonaClip autoEditShortestDurationWithBlueprint:]
  -[KonaClip autoEditShortestIdealDurationWithBlueprint:]
  -[KonaClip autoEditLongestDurationWithBlueprint:]
  -[KonaClip altAspect]
  -[KonaClip setAltAspect:]
  -[KonaClip setFilterEffect:]
  -[KonaClip setTitleDefinition:]
  -[KonaClip titleDefinition]
  -[KonaClip titleEffect]
  -[KonaClip setTranslateY:]
  -[KonaClip setTranslateX:]
  -[KonaClip clipBackground]
  -[KonaClip isSpeedAdjustable]
  -[KonaClip setFreezeFrame:]
  -[KonaClip translateY]
  -[KonaClip anchorTargetOffset]
  -[KonaClip anchorLocalOffset]
  -[KonaClip validationInformation]
  -[KonaClip translateX]
  -[KonaClip didFinishTrimming]
  -[KonaClip deepCopyOntoClip:withZone:]
  -[KonaClip setIdentifierURL:]
  -[KonaClip plistRepresentationFromProject:]
  -[KonaClip setContentsFromPlist:inProject:]
  -[KonaClip validateEffectRange:inProject:]
  -[KonaClip setProjectMovie:]
  -[KonaClip setTransitionEatLeft:]
  -[KonaClip setTransitionEatRight:]
  -[KonaClip setAnchorTargetOffset:]
  -[KonaClip setAnchorLocalOffset:]
  -[KonaClip setAudioTitle:]
  -[KonaClip setSpeedRanges:]
  -[KonaClip transitionChanged]
  -[KonaClip setTransitionChanged:]
  -[KonaClip anchorItemIndex]
  -[KonaClip setAnchorItemIndex:]
  -[KonaClip filterEffectSeed]
  -[KonaClip setFilterEffectSeed:]
  -[KonaClip setClipBackground:]
  -[KonaClip clipContentsEqual:]
  -[KonaClip canBeDuplicated]
  -[KonaClip generateFilterEffectSeed]
  -[KonaClip stampNewUUID]
  -[KonaClip _addDefaultKeys]
  -[KonaClip filterEffect]
  -[KonaClip setAltClips:]
  -[KonaClip setSourceStartTime:]
  -[KonaClip setSourceDuration:]
  -[KonaClip changedMapFrom:to:]
  -[KonaClip allowsTitle]
  -[KonaClip isBackgroundAudio]
  -[KonaClip isVideoOverlay]
  -[KonaClip titleStartTimeForClipStartTime:]
  -[KonaClip titleDuration]
  -[KonaClip initializeFromURL:asset:]
  -[KonaClip updateSourceCaches]
  -[KonaClip audioTitle]
  -[KonaClip setAudioArtist:]
  -[KonaClip audioArtist]
  -[KonaClip setMovieMapLocation:]
  -[KonaClip movieMapLocation]
  -[KonaClip setPrecisionSourceClip:]
  -[KonaClip precisionSourceClip]
  -[KonaClip setPrecisionTrack:]
  -[KonaClip precisionTrack]
  -[KonaClip freezeFrame]
  -[KonaClip setUserEditedSize:]
  -[KonaClip userEditedSize]
  -[KonaClip setDesiredDuration:]
  -[KonaClip desiredDuration]
  -[KonaClip projectMovie]
  -[KonaClip setNextTransition:]
  -[KonaClip setUserEditing:]
  -[KonaClip userEditing]


AudioClip : KonaClip
 @property  int cachedFadeIn
 @property  int cachedFadeOut
 @property  BOOL cachedFades
 @property  int audioType
 @property  BOOL startOffsetValidated

  // class methods
  +[AudioClip defaultAudioTypeForClipType:]
  +[AudioClip audioEnabledByDefault]
  +[AudioClip defaultClipTypeForAudioType:]
  +[AudioClip backgroundClip]
  +[AudioClip soundEffectClip]

  // instance methods
  -[AudioClip init]
  -[AudioClip valueForUndefinedKey:]
  -[AudioClip setDuration:]
  -[AudioClip startOffset]
  -[AudioClip setStartOffset:]
  -[AudioClip audioType]
  -[AudioClip setAudioType:]
  -[AudioClip clipType]
  -[AudioClip hasAudioCharacteristic]
  -[AudioClip setAudioFadeOutDuration:]
  -[AudioClip setAudioFadeInDuration:]
  -[AudioClip audioFadeInDuration]
  -[AudioClip audioFadeOutDuration]
  -[AudioClip setStartOffsetValidated:]
  -[AudioClip startOffsetValidated]
  -[AudioClip setContentsFromPlist:inProject:]
  -[AudioClip themeID]
  -[AudioClip setThemeID:]
  -[AudioClip isBackgroundAudio]
  -[AudioClip setCachedFades:]
  -[AudioClip cachedFades]
  -[AudioClip setCachedFadeIn:]
  -[AudioClip setCachedFadeOut:]
  -[AudioClip validateFades]
  -[AudioClip cachedFadeIn]
  -[AudioClip cachedFadeOut]
  -[AudioClip asBackgroundAudioClip]
  -[AudioClip asForegroundAudioClip]


ClipChangeLog : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[ClipChangeLog dealloc]
  -[ClipChangeLog initWithClip:project:]
  -[ClipChangeLog restoreClipInProject:]


ProjectChangeLog : NSObject /usr/lib/libc++.1.dylib
 @property  NSSet *capturedClips
 @property  NSSet *clipsNeedingDisplay
 @property  BOOL hasChanges
 @property  PVEffect *filterEffect

  // instance methods
  -[ProjectChangeLog dealloc]
  -[ProjectChangeLog hasChanges]
  -[ProjectChangeLog initWithProject:]
  -[ProjectChangeLog setFilterEffect:]
  -[ProjectChangeLog filterEffect]
  -[ProjectChangeLog captureProject:]
  -[ProjectChangeLog captureClip:needsDisplay:]
  -[ProjectChangeLog redoProjectChangeLog]
  -[ProjectChangeLog restoreProject]
  -[ProjectChangeLog capturedClips]
  -[ProjectChangeLog clipsNeedingDisplay]


Movie : NSObject /usr/lib/libc++.1.dylib <PHAssetRepresentationPersistenceObserver, PHPhotoLibraryChangeObserver, NSCoding, NSCopying>
 @property  NSDate *creationDate
 @property  CLLocation *location
 @property  NSURL *identifierURL
 @property  double durationInSeconds
 @property  PHAsset *phAsset
 @property  PHAssetRepresentation *phAssetRepresentation
 @property  int availability
 @property  Project *weakProject
 @property  NSURL *URL
 @property  MapLocation *mapLocation
 @property  BOOL titleIsLocalizable
 @property  BOOL favorite
 @property  NSDictionary *userInfo
 @property  NSString *assetFingerprint
 @property  NSString *masterAssetFingerprint
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[Movie initialize]
  +[Movie mediaserverdCrashed]
  +[Movie replaceURL:withURL:]
  +[Movie objectFromPlist:inProject:]

  // instance methods
  -[Movie dealloc]
  -[Movie copyWithZone:]
  -[Movie userInfo]
  -[Movie encodeWithCoder:]
  -[Movie initWithCoder:]
  -[Movie .cxx_destruct]
  -[Movie transform]
  -[Movie awakeAfterUsingCoder:]
  -[Movie setUserInfo:]
  -[Movie URL]
  -[Movie duration]
  -[Movie location]
  -[Movie creationDate]
  -[Movie setCreationDate:]
  -[Movie setLocation:]
  -[Movie updateAsset]
  -[Movie isDeleted]
  -[Movie mapLocation]
  -[Movie setMapLocation:]
  -[Movie isFavorite]
  -[Movie removeFromList]
  -[Movie naturalSize]
  -[Movie isOffline]
  -[Movie videoCodec]
  -[Movie availability]
  -[Movie setAvailability:]
  -[Movie setFavorite:]
  -[Movie photoLibraryDidChange:]
  -[Movie isTimelapse]
  -[Movie durationInSeconds]
  -[Movie updateMetadata]
  -[Movie frameRate]
  -[Movie isOnline]
  -[Movie phAsset]
  -[Movie updateLocation]
  -[Movie setDurationInSeconds:]
  -[Movie isMono]
  -[Movie naturalSizeWithTransform]
  -[Movie hasVideoTracks]
  -[Movie hasAudioTracks]
  -[Movie mediaserverdCrashed]
  -[Movie isHighFrameRate]
  -[Movie identifierURL]
  -[Movie initWithAssetRepresentation:]
  -[Movie phAssetRepresentation]
  -[Movie updateAssetAvailability]
  -[Movie titleIsLocalizable]
  -[Movie isKenBurnsMovie]
  -[Movie replaceURL:withURL:]
  -[Movie setIdentifierURL:]
  -[Movie plistRepresentation]
  -[Movie initWithIdentifierURL:]
  -[Movie isUnsupportedFormat]
  -[Movie initWithIdentifierURL:userInfo:]
  -[Movie encodedPixelSize]
  -[Movie attemptRepairWithFingerprint]
  -[Movie updateCreationDate]
  -[Movie encodedPixelSizeWithTransform]
  -[Movie addToList]
  -[Movie setPhAssetRepresentation:]
  -[Movie setPhAsset:]
  -[Movie assetFingerprint]
  -[Movie masterAssetFingerprint]
  -[Movie weakProject]
  -[Movie stealthlySetIdentifierURL:]
  -[Movie setWeakProject:]
  -[Movie setAssetFingerprint:]
  -[Movie setMasterAssetFingerprint:]
  -[Movie setTitleIsLocalizable:]
  -[Movie resolveRelativePath:]
  -[Movie syncFavorite]
  -[Movie updateDuration]
  -[Movie updateFavorite]
  -[Movie persistenceStateOfAssetRepresentationDidChange:]
  -[Movie decodeIdentifierURLWithCoder:]


Theme : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *themeID
 @property  NSString *trailerID
 @property  UIImage *previewImage
 @property  NSString *displayName

  // class methods
  +[Theme themeIDIsTrailer:]
  +[Theme themeWithID:]
  +[Theme trailerIDFromThemeID:]
  +[Theme themeIDs]
  +[Theme themeIDFromTrailerID:]

  // instance methods
  -[Theme .cxx_destruct]
  -[Theme displayName]
  -[Theme previewImage]
  -[Theme posterImage]
  -[Theme musicName]
  -[Theme micaFileBaseName]
  -[Theme themeID]
  -[Theme micaFileNameForTitleNamed:]
  -[Theme initWithThemeID:]
  -[Theme trailerID]
  -[Theme micaFileNameForTransitionName:transitionDirection:]
  -[Theme micaFileNameForCutawayName:cutawayDirection:]
  -[Theme displayNameForTransitionName:]


IrisClipStyleVideo : IrisClipStyle
  // instance methods
  -[IrisClipStyleVideo maximumDuration]
  -[IrisClipStyleVideo minimumDuration]
  -[IrisClipStyleVideo idealDuration]
  -[IrisClipStyleVideo containedClipsWithInTransition:outTransition:]


Stopwatch : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[Stopwatch stop]
  +[Stopwatch start]
  +[Stopwatch elapsedTime]
  +[Stopwatch stopWithMessage:precision:]
  +[Stopwatch stopWithMessage:precision:elapsedtimeBiggerThan:]


RangeDataManager : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[RangeDataManager collapseRanges:]
  +[RangeDataManager unionOfRangeLists:]
  +[RangeDataManager intersectionOfRanges1:ranges2:]
  +[RangeDataManager unionOfRanges1:ranges2:]
  +[RangeDataManager intersectionOfRangeLists:]
  +[RangeDataManager stringForRanges:]
  +[RangeDataManager unionOfRangeLists:interleavedIntoList1:andList2:]
  +[RangeDataManager invertedRanges:duration:]
  +[RangeDataManager location:isInRanges:foundRange:]
  +[RangeDataManager ranges:addRange:forKey:]


IrisClip : CompoundClip <KonaClipMiroAutoEditAdditions, NSCopying, CompoundClipInformation>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  IrisClipStyle *irisClipStyle
 @property  NSArray *containedClips
 @property  IrisMovieClip *introClip
 @property  IrisMovieClip *outroClip
 @property  unsigned long irisStyle
 @property  double minimumDuration
 @property  double idealDuration
 @property  double maximumDuration
 @property  BOOL introClipAvailable
 @property  BOOL outroClipAvailable
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[IrisClip allowedTransitions]

  // instance methods
  -[IrisClip copyWithZone:]
  -[IrisClip .cxx_destruct]
  -[IrisClip maximumDuration]
  -[IrisClip setAudioVolume:]
  -[IrisClip maxDuration]
  -[IrisClip minimumDuration]
  -[IrisClip containedClips]
  -[IrisClip isIris]
  -[IrisClip irisStyle]
  -[IrisClip autoEditLongestDurationWithBlueprint:]
  -[IrisClip idealDuration]
  -[IrisClip setAltAspect:]
  -[IrisClip setIrisStyle:]
  -[IrisClip setContainedClips:]
  -[IrisClip setMinimumPhotoDuration:]
  -[IrisClip setIdealPhotoDuration:]
  -[IrisClip setMaximumPhotoDuration:]
  -[IrisClip containedClipsWithInTransition:outTransition:]
  -[IrisClip plistRepresentationFromProject:]
  -[IrisClip setContentsFromPlist:inProject:]
  -[IrisClip setIntroClip:]
  -[IrisClip setOutroClip:]
  -[IrisClip irisClipStyle]
  -[IrisClip setIrisClipStyle:]
  -[IrisClip preferredInTransitionDurationRange]
  -[IrisClip preferredOutTransitionDurationRange]
  -[IrisClip introClipAvailable]
  -[IrisClip outroClipAvailable]
  -[IrisClip introClip]
  -[IrisClip outroClip]


IrisClipStyle : NSObject /usr/lib/libc++.1.dylib
 @property  IrisClip *irisClip

  // instance methods
  -[IrisClipStyle .cxx_destruct]
  -[IrisClipStyle duration]
  -[IrisClipStyle maximumDuration]
  -[IrisClipStyle minimumDuration]
  -[IrisClipStyle projectFrameRate]
  -[IrisClipStyle idealDuration]
  -[IrisClipStyle containedClipsWithInTransition:outTransition:]
  -[IrisClipStyle minimumPhotoDuration]
  -[IrisClipStyle idealPhotoDuration]
  -[IrisClipStyle maximumPhotoDuration]
  -[IrisClipStyle irisClip]
  -[IrisClipStyle projectAspectRatio]
  -[IrisClipStyle adjustGeometryOfIntroClip:outroClip:]
  -[IrisClipStyle setIrisClip:]
  -[IrisClipStyle preferredInTransitionDurationRange]
  -[IrisClipStyle preferredOutTransitionDurationRange]
  -[IrisClipStyle buildIntro]
  -[IrisClipStyle buildOutro]


FMSongLibrary : NSObject /usr/lib/libc++.1.dylib
 @property  NSMutableArray *songs
 @property  NSDictionary *options
 @property  NSMutableDictionary *songsByUID
 @property  NSMutableSet *assetsInFlight
 @property  FlexCloudManager *cloudManager
 @property  FlexReachability *flexReachability
 @property  long long networkStatus
 @property  BOOL contactedCloud
 @property  BOOL networkingIsDisabled

  // instance methods
  -[FMSongLibrary dealloc]
  -[FMSongLibrary options]
  -[FMSongLibrary initWithOptions:]
  -[FMSongLibrary .cxx_destruct]
  -[FMSongLibrary _setupReachability]
  -[FMSongLibrary networkStatus]
  -[FMSongLibrary setNetworkStatus:]
  -[FMSongLibrary networkingIsDisabled]
  -[FMSongLibrary networkStatusChanged:]
  -[FMSongLibrary requestDownloadOfAllAssetsWithIDs:]
  -[FMSongLibrary fetchSongWithUID:]
  -[FMSongLibrary fetchSongsWithOptions:]
  -[FMSongLibrary purgeAllLocalCachedAssetsWithIDs:]
  -[FMSongLibrary contactedCloud]
  -[FMSongLibrary requestDownloadOfAllAssetsWithIDs:withOptions:]
  -[FMSongLibrary _createCloudManager]
  -[FMSongLibrary _loadBundledSongs]
  -[FMSongLibrary _loadCachedSongs]
  -[FMSongLibrary _updateFromCloud]
  -[FMSongLibrary songsByUID]
  -[FMSongLibrary songs]
  -[FMSongLibrary _notifySongsChanged:]
  -[FMSongLibrary _downloadProgressChanged:]
  -[FMSongLibrary assetsInFlight]
  -[FMSongLibrary _notifySongDownloadInProgressChanged:]
  -[FMSongLibrary setFlexReachability:]
  -[FMSongLibrary flexReachability]
  -[FMSongLibrary setCloudManager:]
  -[FMSongLibrary setContactedCloud:]
  -[FMSongLibrary registerSongBundleAtPath:]
  -[FMSongLibrary supportForCloud]
  -[FMSongLibrary setSongs:]
  -[FMSongLibrary setSongsByUID:]
  -[FMSongLibrary setAssetsInFlight:]
  -[FMSongLibrary cloudManager]
  -[FMSongLibrary unregisterSongWithID:]
  -[FMSongLibrary _registerSongs:]
  -[FMSongLibrary cancelDownloadOfAllAssets]


FMSong : NSObject /usr/lib/libc++.1.dylib
 @property  NSObject<FlexSongProtocol> *backend

  // class methods
  +[FMSong loadSongBundleAtPath:]
  +[FMSong availableTagIDs]
  +[FMSong localizedNameForTagWithID:]
  +[FMSong loadSongsAndArtworkInFolderAtPath:]
  +[FMSong hasValidTagIDs:]
  +[FMSong versionFromArtworkFilename:]

  // instance methods
  -[FMSong .cxx_destruct]
  -[FMSong isLoaded]
  -[FMSong _impl]
  -[FMSong keywords]
  -[FMSong uid]
  -[FMSong hidden]
  -[FMSong sampleRate]
  -[FMSong backend]
  -[FMSong artwork]
  -[FMSong canPlay]
  -[FMSong artistName]
  -[FMSong initWithBackend:]
  -[FMSong metadataVersion]
  -[FMSong tagIDs]
  -[FMSong updateAssets:]
  -[FMSong _loadIfNeeded]
  -[FMSong naturalDuration]
  -[FMSong minimumDuration]
  -[FMSong songName]
  -[FMSong assetWithID:]
  -[FMSong requestDownloadOfAllAssetsWithIDs:]
  -[FMSong cancelDownloadOfAllAssetsWithIDs:]
  -[FMSong recalled]
  -[FMSong mappedToVEK]
  -[FMSong renditionForDuration:withOptions:]
  -[FMSong requestDownloadOfAllAssetsWithIDs:withOptions:]
  -[FMSong _notifySongAssetsChanged]
  -[FMSong _loadFlexSong]
  -[FMSong idealDurations]
  -[FMSong renditionForDuration:withOptions:testingContext:]
  -[FMSong customOptions]
  -[FMSong existingAssetWithID:]
  -[FMSong updateBackend:]
  -[FMSong songFormat]
  -[FMSong audioEncoderPresetName]
  -[FMSong updateAsset:downloadProgress:]


FMSongRendition : NSObject /usr/lib/libc++.1.dylib
 @property  NSObject<FlexSongProtocol> *song
 @property  FMTrack *trackA
 @property  FMTrack *trackB
 @property  long long duration
 @property  long long durationOfSilence
 @property  long long durationOfMusic
 @property  NSDictionary *options

  // class methods
  +[FMSongRendition coalesceMixParamsA:withMixParamsB:]

  // instance methods
  -[FMSongRendition options]
  -[FMSongRendition .cxx_destruct]
  -[FMSongRendition duration]
  -[FMSongRendition setDuration:]
  -[FMSongRendition song]
  -[FMSongRendition setSong:]
  -[FMSongRendition timedMetadataItemsWithIdentifier:]
  -[FMSongRendition avCompositionWithAudioMix:includeShortenedOutroFadeOut:]
  -[FMSongRendition trackA]
  -[FMSongRendition trackB]
  -[FMSongRendition _maxPeakAndLoudness:missingPeakValueCount:missingLoudnessCount:]
  -[FMSongRendition initWithSong:andOptions:]
  -[FMSongRendition setDurationOfSilence:]
  -[FMSongRendition setDurationOfMusic:]
  -[FMSongRendition durationOfMusic]
  -[FMSongRendition durationOfSilence]
  -[FMSongRendition setTrackA:]
  -[FMSongRendition setTrackB:]
  -[FMSongRendition _buildOutroFadeoutMixParams]


FMFetchOptions : NSObject /usr/lib/libc++.1.dylib
 @property  NSPredicate *predicate
 @property  NSArray *sortDescriptors

  // instance methods
  -[FMFetchOptions init]
  -[FMFetchOptions .cxx_destruct]
  -[FMFetchOptions setPredicate:]
  -[FMFetchOptions predicate]
  -[FMFetchOptions sortDescriptors]
  -[FMFetchOptions setSortDescriptors:]


FMTimedMetadataItem : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  NSString *identifier
 @property  NSString *name
 @property  {?={?=qiIq}{?=qiIq}} timeRange
 @property  NSDictionary *values

  // instance methods
  -[FMTimedMetadataItem name]
  -[FMTimedMetadataItem copyWithZone:]
  -[FMTimedMetadataItem values]
  -[FMTimedMetadataItem .cxx_destruct]
  -[FMTimedMetadataItem identifier]
  -[FMTimedMetadataItem timeRange]
  -[FMTimedMetadataItem initWithIdentifier:name:timeRange:values:]
  -[FMTimedMetadataItem adjustDurationTo:]


FlexMarker : NSObject /usr/lib/libc++.1.dylib <NSDictionaryCoding>
 @property  NSString *name
 @property  long long markerID
 @property  long long position
 @property  unsigned long type
 @property  long long number

  // instance methods
  -[FlexMarker init]
  -[FlexMarker name]
  -[FlexMarker type]
  -[FlexMarker .cxx_destruct]
  -[FlexMarker initWithDictionary:]
  -[FlexMarker position]
  -[FlexMarker number]
  -[FlexMarker _decodeTypeAndBarsFromName]
  -[FlexMarker markerID]
  -[FlexMarker encodeAsDictionary]
  -[FlexMarker initWithName:markerID:position:]


FlexMobileAssetV2SongAsset : FlexCloudSongAsset
 @property  MAAsset *mobileAsset

  // instance methods
  -[FlexMobileAssetV2SongAsset .cxx_destruct]
  -[FlexMobileAssetV2SongAsset mobileAsset]
  -[FlexMobileAssetV2SongAsset contentUpdateAvaliable]
  -[FlexMobileAssetV2SongAsset assetStatus]
  -[FlexMobileAssetV2SongAsset contentVersionForAssetLocation:]
  -[FlexMobileAssetV2SongAsset _metadataForAssetWithNewestContentVersion]
  -[FlexMobileAssetV2SongAsset initWithAssetID:asset:localURL:cloudManager:contentVersion:compatibilityVersion:]
  -[FlexMobileAssetV2SongAsset compatibilityVersionForAssetLocation:]


FlexMobileAssetManagerV2 : FlexCloudManager
 @property  NSObject<OS_dispatch_queue> *purgeQueue
 @property  NSObject<OS_dispatch_queue> *triggerDownloadAndPurgeQueue
 @property  BOOL includeArtworkInQueries
 @property  BOOL XMLPresent

  // class methods
  +[FlexMobileAssetManagerV2 assetWithNewestContentVersionInAssets:preferInstalled:]
  +[FlexMobileAssetManagerV2 _assetURLForMobileAsset:]
  +[FlexMobileAssetManagerV2 compatibilityFilterPredicate]

  // instance methods
  -[FlexMobileAssetManagerV2 .cxx_destruct]
  -[FlexMobileAssetManagerV2 _purgeAsset:]
  -[FlexMobileAssetManagerV2 mobileAssetsForAssetPropertyType:songUID:]
  -[FlexMobileAssetManagerV2 _mobileAssetIsPurging:]
  -[FlexMobileAssetManagerV2 _mobileAssetIsDownloading:]
  -[FlexMobileAssetManagerV2 _requeryForMobileAssetTypes:forUUIDs:]
  -[FlexMobileAssetManagerV2 setXMLPresent:]
  -[FlexMobileAssetManagerV2 _mobileAssetQueryResultStringValue:]
  -[FlexMobileAssetManagerV2 _metadataMappingForUUIDSet:]
  -[FlexMobileAssetManagerV2 _updateMetadataOnExistingSong:usingAsset:metadataAsset:]
  -[FlexMobileAssetManagerV2 _requeryForMobileAssetTypes:]
  -[FlexMobileAssetManagerV2 mobileAssetsForAssetPropertyType:]
  -[FlexMobileAssetManagerV2 _newestContentSetFromAssets:metadataMapping:]
  -[FlexMobileAssetManagerV2 filterByClientIDForAssets:forMetadataMapping:]
  -[FlexMobileAssetManagerV2 _processResults:metadataMapping:]
  -[FlexMobileAssetManagerV2 _mobileAssetDownloadOptionsForClientOptions:]
  -[FlexMobileAssetManagerV2 XMLPresent]
  -[FlexMobileAssetManagerV2 _mobileAssetDownloadResultStringValue:]
  -[FlexMobileAssetManagerV2 _responseForDownloadResult:]
  -[FlexMobileAssetManagerV2 _updateExistingSong:usingAsset:metadataAsset:forceUpdate:]
  -[FlexMobileAssetManagerV2 _assetIDForMobileAsset:]
  -[FlexMobileAssetManagerV2 _existingSongForUID:]
  -[FlexMobileAssetManagerV2 _updateExistingSong:usingAsset:metadataAsset:]
  -[FlexMobileAssetManagerV2 _loadBundledArtworkForSongID:]
  -[FlexMobileAssetManagerV2 _runNextAsyncAssetDownloadAndPurge]
  -[FlexMobileAssetManagerV2 _runAsyncAssetDownloadForMobileAsset:]
  -[FlexMobileAssetManagerV2 _dispatchNextAsyncAssetDownloadAndPurge]
  -[FlexMobileAssetManagerV2 _mobileAssetCancelDownloadResultStringValue:]
  -[FlexMobileAssetManagerV2 cancelDownloadOfAsset:]
  -[FlexMobileAssetManagerV2 _loadBundledSongForSongID:]
  -[FlexMobileAssetManagerV2 _mobileAssetPurgeResultStringValue:]
  -[FlexMobileAssetManagerV2 initWithLibrary:options:]
  -[FlexMobileAssetManagerV2 loadCachedSongs]
  -[FlexMobileAssetManagerV2 fetchAllSongsWithCompletion:]
  -[FlexMobileAssetManagerV2 loadAssetWithID:forSongID:]
  -[FlexMobileAssetManagerV2 requestDownloadOfAsset:withOptions:]
  -[FlexMobileAssetManagerV2 cancelDownloadOfAllAssets]
  -[FlexMobileAssetManagerV2 requestPurgeOfAsset:]
  -[FlexMobileAssetManagerV2 assetStatus:]
  -[FlexMobileAssetManagerV2 purgeQueue]
  -[FlexMobileAssetManagerV2 setPurgeQueue:]
  -[FlexMobileAssetManagerV2 triggerDownloadAndPurgeQueue]
  -[FlexMobileAssetManagerV2 setTriggerDownloadAndPurgeQueue:]
  -[FlexMobileAssetManagerV2 includeArtworkInQueries]
  -[FlexMobileAssetManagerV2 setIncludeArtworkInQueries:]


FlexSegmentAudioFileInfo : NSObject /usr/lib/libc++.1.dylib
 @property  long long sampleRate
 @property  long long sampleCount
 @property  long long bpm
 @property  long long bars
 @property  long long samplesPerBar
 @property  NSArray *customBarMarkers

  // instance methods
  -[FlexSegmentAudioFileInfo .cxx_destruct]
  -[FlexSegmentAudioFileInfo bars]
  -[FlexSegmentAudioFileInfo sampleCount]
  -[FlexSegmentAudioFileInfo setSampleCount:]
  -[FlexSegmentAudioFileInfo setSampleRate:]
  -[FlexSegmentAudioFileInfo sampleRate]
  -[FlexSegmentAudioFileInfo setBars:]
  -[FlexSegmentAudioFileInfo bpm]
  -[FlexSegmentAudioFileInfo setBpm:]
  -[FlexSegmentAudioFileInfo samplesPerBar]
  -[FlexSegmentAudioFileInfo setSamplesPerBar:]
  -[FlexSegmentAudioFileInfo customBarMarkers]
  -[FlexSegmentAudioFileInfo setCustomBarMarkers:]


FlexSegment : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSDictionaryCoding>
 @property  NSString *namePrefix
 @property  NSString *nameStem
 @property  NSString *nameIndex
 @property  NSString *nameSuffix
 @property  NSString *name
 @property  long long priority
 @property  long long bars
 @property  long long beatsPerBar
 @property  long long samplesPerBar
 @property  NSArray *customBarMarkers
 @property  long long sampleRate
 @property  long long sampleCount
 @property  BOOL sliceable
 @property  NSDictionary *transitions
 @property  NSDictionary *markers
 @property  unsigned long type
 @property  unsigned long errors
 @property  NSDictionary *metadataValues

  // class methods
  +[FlexSegment readInfoFromAudioFileAtPath:]
  +[FlexSegment samplesForTimeInMsec:atSampleRate:]
  +[FlexSegment shortLabelForSegmentType:]
  +[FlexSegment longLabelForSegmentType:]
  +[FlexSegment canTransitionFromSegment:toSegment:fromBarIndex:checkIfPrevented:]
  +[FlexSegment segmentsWithType:inSegments:]
  +[FlexSegment segmentsWithType:nameIndex:nameSuffix:inSegments:]
  +[FlexSegment segmentWithName:inSegments:]
  +[FlexSegment crossfadeLengthInSamplesForFromSeg:toSeg:fadeOutTimeInMsec:fadeInTimeInMsec:validFadeOutSamples:validFadeInSamples:]

  // instance methods
  -[FlexSegment name]
  -[FlexSegment copyWithZone:]
  -[FlexSegment type]
  -[FlexSegment setType:]
  -[FlexSegment initWithFileAtPath:]
  -[FlexSegment .cxx_destruct]
  -[FlexSegment initWithDictionary:]
  -[FlexSegment setName:]
  -[FlexSegment namePrefix]
  -[FlexSegment nameSuffix]
  -[FlexSegment priority]
  -[FlexSegment setPriority:]
  -[FlexSegment bars]
  -[FlexSegment sampleCount]
  -[FlexSegment setSampleCount:]
  -[FlexSegment errors]
  -[FlexSegment setSampleRate:]
  -[FlexSegment sampleRate]
  -[FlexSegment setBars:]
  -[FlexSegment setErrors:]
  -[FlexSegment transitions]
  -[FlexSegment setTransitions:]
  -[FlexSegment metadataValueForKey:]
  -[FlexSegment nameIndex]
  -[FlexSegment addMetadataValue:forKey:]
  -[FlexSegment encodeAsDictionary]
  -[FlexSegment samplesPerBar]
  -[FlexSegment setSamplesPerBar:]
  -[FlexSegment customBarMarkers]
  -[FlexSegment setCustomBarMarkers:]
  -[FlexSegment _decodeTypeInfoFromSegmentName]
  -[FlexSegment sliceable]
  -[FlexSegment relinkAllTransitions]
  -[FlexSegment beatsPerBar]
  -[FlexSegment markers]
  -[FlexSegment barStartPositionForBarIndex:]
  -[FlexSegment barEndPositionForBarIndex:]
  -[FlexSegment metadataValues]
  -[FlexSegment linkedPerBarTransitionsToSegmentNamed:]
  -[FlexSegment transitionToSegmentNamed:fromBarIndex:]
  -[FlexSegment setLinkedPerBarTransitions:toSegmentNamed:]
  -[FlexSegment initAsCrossFade:sampleRate:sampleCount:beatsPerBar:]
  -[FlexSegment barDurationForBarIndex:]
  -[FlexSegment addOrReplaceTransition:toSegmentNamed:fromBarIndex:]
  -[FlexSegment removeTransitionToSegmentNamed:fromBarIndex:]
  -[FlexSegment isPriorityValid]
  -[FlexSegment setSliceable:]
  -[FlexSegment setBeatsPerBar:]
  -[FlexSegment setMarkers:]
  -[FlexSegment nameStem]


FlexMLSummary : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *segments
 @property  NSDictionary *videoCues
 @property  {?=qiIq} duration
 @property  double lkfsValue
 @property  float peakValue
 @property  NSArray *allBeats
 @property  NSArray *allBars
 @property  NSArray *loopPoints

  // class methods
  +[FlexMLSummary summaryFromSummaries:targetTimeScale:]

  // instance methods
  -[FlexMLSummary .cxx_destruct]
  -[FlexMLSummary duration]
  -[FlexMLSummary setDuration:]
  -[FlexMLSummary segments]
  -[FlexMLSummary setSegments:]
  -[FlexMLSummary peakValue]
  -[FlexMLSummary allBeats]
  -[FlexMLSummary allBars]
  -[FlexMLSummary videoCues]
  -[FlexMLSummary lkfsValue]
  -[FlexMLSummary initWithDictionary:targetTimeScale:]
  -[FlexMLSummary setVideoCues:]
  -[FlexMLSummary loopPoints]
  -[FlexMLSummary setLkfsValue:]
  -[FlexMLSummary setPeakValue:]


FlexMLSegment : NSObject /usr/lib/libc++.1.dylib
 @property  {?=qiIq} duration
 @property  {?=qiIq} trackTime
 @property  {?=qiIq} summaryTime
 @property  NSArray *gainFunction

  // instance methods
  -[FlexMLSegment .cxx_destruct]
  -[FlexMLSegment duration]
  -[FlexMLSegment gainFunction]
  -[FlexMLSegment trackTime]
  -[FlexMLSegment summaryTime]
  -[FlexMLSegment initWithDuration:trackTime:summaryTime:gainFunction:]


FlexMLGainValue : NSObject /usr/lib/libc++.1.dylib
 @property  float gain
 @property  {?=qiIq} segmentTime

  // instance methods
  -[FlexMLGainValue compare:]
  -[FlexMLGainValue gain]
  -[FlexMLGainValue segmentTime]
  -[FlexMLGainValue initWithGain:segmentTime:]


FlexSegmentAssemblyInfo : NSObject /usr/lib/libc++.1.dylib
 @property  FlexSegment *segment
 @property  long long barsUsed
 @property  NSURL *url
 @property  long long offset
 @property  long long duration

  // instance methods
  -[FlexSegmentAssemblyInfo copyWithZone:]
  -[FlexSegmentAssemblyInfo .cxx_destruct]
  -[FlexSegmentAssemblyInfo url]
  -[FlexSegmentAssemblyInfo duration]
  -[FlexSegmentAssemblyInfo setOffset:]
  -[FlexSegmentAssemblyInfo offset]
  -[FlexSegmentAssemblyInfo setUrl:]
  -[FlexSegmentAssemblyInfo setDuration:]
  -[FlexSegmentAssemblyInfo setSegment:]
  -[FlexSegmentAssemblyInfo segment]
  -[FlexSegmentAssemblyInfo barsUsed]
  -[FlexSegmentAssemblyInfo setBarsUsed:]


FlexMLSong : FlexSongBackend
 @property  FlexMLSummaryManager *summaryManager
 @property  NSString *rootPath
 @property  NSString *metadataPath
 @property  NSString *audioFileExtension
 @property  {?=qiIq} cachedNaturalDuration
 @property  NSURL *audioFileURL

  // class methods
  +[FlexMLSong loadSongAtPath:]

  // instance methods
  -[FlexMLSong initWithFileAtPath:]
  -[FlexMLSong .cxx_destruct]
  -[FlexMLSong isLoaded]
  -[FlexMLSong canPlay]
  -[FlexMLSong audioFileURL]
  -[FlexMLSong rootPath]
  -[FlexMLSong naturalDuration]
  -[FlexMLSong minimumDuration]
  -[FlexMLSong idealDurations]
  -[FlexMLSong renditionForDuration:withOptions:testingContext:]
  -[FlexMLSong _setupInitialAssets:]
  -[FlexMLSong summaryManager]
  -[FlexMLSong verifyRendition:forDuration:failureReason:]
  -[FlexMLSong timedMetadataItemsWithIdentifier:forRendition:]
  -[FlexMLSong setSummaryManager:]
  -[FlexMLSong metadataPath]
  -[FlexMLSong cachedNaturalDuration]
  -[FlexMLSong setCachedNaturalDuration:]
  -[FlexMLSong audioFileExtension]
  -[FlexMLSong setAudioFileExtension:]


FMTrack : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *clips
 @property  FMMixParameters *mixParameters

  // instance methods
  -[FMTrack .cxx_destruct]
  -[FMTrack setClips:]
  -[FMTrack clips]
  -[FMTrack mixParameters]
  -[FMTrack setMixParameters:]
  -[FMTrack initWithClips:mixParameters:]


FlexSongAssetProvider_V1 : NSObject /usr/lib/libc++.1.dylib <FlexSongAssetProviderProtocol>
 @property  NSString *rootFolderPath
 @property  NSString *audioFileExtension

  // instance methods
  -[FlexSongAssetProvider_V1 .cxx_destruct]
  -[FlexSongAssetProvider_V1 rootFolderPath]
  -[FlexSongAssetProvider_V1 audioFileExtension]
  -[FlexSongAssetProvider_V1 urlToRoot]
  -[FlexSongAssetProvider_V1 urlToAudioContainerForSegmentType:]
  -[FlexSongAssetProvider_V1 urlToAudioForSegment:]
  -[FlexSongAssetProvider_V1 setAudioFileExtension:]
  -[FlexSongAssetProvider_V1 initWithFolderPath:]
  -[FlexSongAssetProvider_V1 setRootFolderPath:]


FlexSongAssetProvider_V2 : NSObject /usr/lib/libc++.1.dylib <FlexSongAssetProviderProtocol>
 @property  NSString *rootFolderPath
 @property  NSString *audioFileExtension

  // instance methods
  -[FlexSongAssetProvider_V2 .cxx_destruct]
  -[FlexSongAssetProvider_V2 rootFolderPath]
  -[FlexSongAssetProvider_V2 audioFileExtension]
  -[FlexSongAssetProvider_V2 urlToRoot]
  -[FlexSongAssetProvider_V2 urlToAudioContainerForSegmentType:]
  -[FlexSongAssetProvider_V2 urlToAudioForSegment:]
  -[FlexSongAssetProvider_V2 setAudioFileExtension:]
  -[FlexSongAssetProvider_V2 setRootFolderPath:]
  -[FlexSongAssetProvider_V2 _folderNameForSegmentType:]
  -[FlexSongAssetProvider_V2 initWithFolderPath:audioFileExtension:]
  -[FlexSongAssetProvider_V2 assetsAreLocal]


FMKeyFrame : NSObject /usr/lib/libc++.1.dylib
 @property  long long sampleTime
 @property  float value

  // instance methods
  -[FMKeyFrame value]
  -[FMKeyFrame setValue:]
  -[FMKeyFrame sampleTime]
  -[FMKeyFrame setSampleTime:]
  -[FMKeyFrame initWithValue:atTime:]


FlexSongMetaDataReader_V2 : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[FlexSongMetaDataReader_V2 _pathToMetadata:]
  +[FlexSongMetaDataReader_V2 isSongAtPath:]
  +[FlexSongMetaDataReader_V2 songAtPath:]


FlexSongMetadataReaderUtils : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[FlexSongMetadataReaderUtils addAnalysisMetadataToDictionary:pathToRoot:]


FlexSongBackend : NSObject /usr/lib/libc++.1.dylib <FlexSongProtocol>
 @property  NSString *uid
 @property  NSString *audioEncoderPresetName
 @property  NSString *songName
 @property  NSString *artistName
 @property  NSSet *tagIDs
 @property  NSSet *keywords
 @property  NSArray *assets
 @property  UIImage *artwork
 @property  NSString *songFormat
 @property  long long sampleRate
 @property  BOOL hidden
 @property  BOOL recalled
 @property  long long metadataVersion
 @property  NSDictionary *customOptions

  // instance methods
  -[FlexSongBackend .cxx_destruct]
  -[FlexSongBackend isLoaded]
  -[FlexSongBackend keywords]
  -[FlexSongBackend setKeywords:]
  -[FlexSongBackend uid]
  -[FlexSongBackend setUid:]
  -[FlexSongBackend setHidden:]
  -[FlexSongBackend setSampleRate:]
  -[FlexSongBackend hidden]
  -[FlexSongBackend sampleRate]
  -[FlexSongBackend assets]
  -[FlexSongBackend setAssets:]
  -[FlexSongBackend artwork]
  -[FlexSongBackend setArtwork:]
  -[FlexSongBackend canPlay]
  -[FlexSongBackend artistName]
  -[FlexSongBackend setArtistName:]
  -[FlexSongBackend metadataVersion]
  -[FlexSongBackend setMetadataVersion:]
  -[FlexSongBackend setTagIDs:]
  -[FlexSongBackend tagIDs]
  -[FlexSongBackend updateAssets:]
  -[FlexSongBackend naturalDuration]
  -[FlexSongBackend minimumDuration]
  -[FlexSongBackend songName]
  -[FlexSongBackend assetWithID:]
  -[FlexSongBackend recalled]
  -[FlexSongBackend setSongName:]
  -[FlexSongBackend idealDurations]
  -[FlexSongBackend renditionForDuration:withOptions:testingContext:]
  -[FlexSongBackend customOptions]
  -[FlexSongBackend existingAssetWithID:]
  -[FlexSongBackend songFormat]
  -[FlexSongBackend updateSongArtist:title:tags:keywords:hidden:recalled:metadataVersion:]
  -[FlexSongBackend audioEncoderPresetName]
  -[FlexSongBackend initWithUID:songName:artistName:tagIDs:keywords:hidden:recalled:audioEncoderPresetName:metadataVersion:songFormat:sampleRate:customOptions:]
  -[FlexSongBackend updateSampleRate:]
  -[FlexSongBackend verifyRendition:forDuration:failureReason:]
  -[FlexSongBackend timedMetadataItemsWithIdentifier:forRendition:]
  -[FlexSongBackend _loadArtworkImage]
  -[FlexSongBackend _verifyClips:inRendition:failureReason:]
  -[FlexSongBackend _verifyKeyFrames:failureReason:]
  -[FlexSongBackend setAudioEncoderPresetName:]
  -[FlexSongBackend setSongFormat:]
  -[FlexSongBackend setRecalled:]
  -[FlexSongBackend setCustomOptions:]


FlexCloudFetchOptions : NSObject /usr/lib/libc++.1.dylib
 @property  NSPredicate *predicate
 @property  NSArray *sortDescriptors
 @property  BOOL localOnly

  // instance methods
  -[FlexCloudFetchOptions .cxx_destruct]
  -[FlexCloudFetchOptions setPredicate:]
  -[FlexCloudFetchOptions predicate]
  -[FlexCloudFetchOptions sortDescriptors]
  -[FlexCloudFetchOptions setSortDescriptors:]
  -[FlexCloudFetchOptions localOnly]
  -[FlexCloudFetchOptions setLocalOnly:]


FMMixParameters : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *volumeKeyFrames

  // instance methods
  -[FMMixParameters init]
  -[FMMixParameters .cxx_destruct]
  -[FMMixParameters appendVolumeKeyframe:]
  -[FMMixParameters volumeKeyFrames]
  -[FMMixParameters lastVolumeKeyFrame]
  -[FMMixParameters setVolumeKeyFrames:]
  -[FMMixParameters volumeValueAtTime:]
  -[FMMixParameters insertVolumeKeyframe:]
  -[FMMixParameters volumeKeyframesAreValid]
  -[FMMixParameters removeRedundantVolumeKeyFrames]


FlexLegacySongRendition : FMSongRendition
 @property  NSArray *segments
 @property  long long durationOfUsedOutro
 @property  long long durationOfFullOutro

  // class methods
  +[FlexLegacySongRendition _durationOfOutroForPlaylist:onlyUsedDuration:]

  // instance methods
  -[FlexLegacySongRendition .cxx_destruct]
  -[FlexLegacySongRendition segments]
  -[FlexLegacySongRendition setSegments:]
  -[FlexLegacySongRendition setDurationOfUsedOutro:]
  -[FlexLegacySongRendition setDurationOfFullOutro:]
  -[FlexLegacySongRendition _buildTracksFromSegments:]
  -[FlexLegacySongRendition durationOfUsedOutro]
  -[FlexLegacySongRendition durationOfFullOutro]
  -[FlexLegacySongRendition _buildOutroFadeoutMixParams]
  -[FlexLegacySongRendition initWithSong:segments:withOptions:]


FlexCloudManager : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long retryCount
 @property  FMSongLibrary *library
 @property  NSMutableArray *cloudManagedSongs
 @property  NSMutableDictionary *cloudManagedSongsByUID

  // class methods
  +[FlexCloudManager createCloudManager:withLibrary:options:]

  // instance methods
  -[FlexCloudManager .cxx_destruct]
  -[FlexCloudManager retryCount]
  -[FlexCloudManager setRetryCount:]
  -[FlexCloudManager library]
  -[FlexCloudManager initWithLibrary:]
  -[FlexCloudManager retryFetchAllSongs]
  -[FlexCloudManager cloudManagedSongsByUID]
  -[FlexCloudManager cloudManagedSongs]
  -[FlexCloudManager _registerSongs:]
  -[FlexCloudManager cancelDownloadOfAsset:]
  -[FlexCloudManager loadCachedSongs]
  -[FlexCloudManager fetchAllSongsWithCompletion:]
  -[FlexCloudManager loadAssetWithID:forSongID:]
  -[FlexCloudManager requestDownloadOfAsset:withOptions:]
  -[FlexCloudManager cancelDownloadOfAllAssets]
  -[FlexCloudManager requestPurgeOfAsset:]
  -[FlexCloudManager assetStatus:]
  -[FlexCloudManager _purgeAndReturnReplacementFor:]
  -[FlexCloudManager requestDownloadOfAsset:]


FMClip : NSObject /usr/lib/libc++.1.dylib
 @property  NSURL *url
 @property  long long position
 @property  long long offset
 @property  long long duration
 @property  long long fadeInLength
 @property  long long fadeOutLength

  // instance methods
  -[FMClip copyWithZone:]
  -[FMClip .cxx_destruct]
  -[FMClip url]
  -[FMClip position]
  -[FMClip duration]
  -[FMClip setOffset:]
  -[FMClip offset]
  -[FMClip setUrl:]
  -[FMClip setPosition:]
  -[FMClip setDuration:]
  -[FMClip fadeInLength]
  -[FMClip setFadeInLength:]
  -[FMClip fadeOutLength]
  -[FMClip setFadeOutLength:]


FlexTransition : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSDictionaryCoding>
 @property  BOOL prevented
 @property  long long fadeOut
 @property  long long fadeIn
 @property  NSString *transitionSegmentName
 @property  BOOL useNextSegmentForFadeOut

  // class methods
  +[FlexTransition validFadeLengthForLength:]

  // instance methods
  -[FlexTransition init]
  -[FlexTransition copyWithZone:]
  -[FlexTransition .cxx_destruct]
  -[FlexTransition initWithDictionary:]
  -[FlexTransition fadeOut]
  -[FlexTransition fadeIn]
  -[FlexTransition encodeAsDictionary]
  -[FlexTransition isDefaultTransition]
  -[FlexTransition prevented]
  -[FlexTransition transitionSegmentName]
  -[FlexTransition useNextSegmentForFadeOut]
  -[FlexTransition initWithTransitionSegmentNamed:prevented:fadeOut:fadeIn:useNextSegmentForFadeOut:]


FMDownloadOptions : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL allowsCellular
 @property  unsigned long downloadPriority

  // instance methods
  -[FMDownloadOptions init]
  -[FMDownloadOptions setDownloadPriority:]
  -[FMDownloadOptions allowsCellular]
  -[FMDownloadOptions downloadPriority]
  -[FMDownloadOptions _configureDefaults]
  -[FMDownloadOptions setAllowsCellular:]


FlexMobileAssetSongAsset : FlexCloudSongAsset
 @property  NSString *mobileAssetTypeIdentifier
 @property  NSString *mobileAssetPropertyType

  // instance methods
  -[FlexMobileAssetSongAsset .cxx_destruct]
  -[FlexMobileAssetSongAsset contentUpdateAvaliable]
  -[FlexMobileAssetSongAsset contentVersionForAssetLocation:]
  -[FlexMobileAssetSongAsset compatibilityVersionForAssetLocation:]
  -[FlexMobileAssetSongAsset mobileAssetPropertyType]
  -[FlexMobileAssetSongAsset mobileAssetTypeIdentifier]
  -[FlexMobileAssetSongAsset _assetCachedMetadata]
  -[FlexMobileAssetSongAsset initWithAssetID:assetStatus:localURL:cloudManager:mobileAssetTypeIdentifier:mobileAssetPropertyType:contentVersion:compatibilityVersion:]


FlexMobileAssetManager : FlexCloudManager
 @property  NSObject<OS_dispatch_queue> *purgeQueue
 @property  NSObject<OS_dispatch_queue> *downloadQueue

  // class methods
  +[FlexMobileAssetManager assetWithNewestContentVersionInAssets:preferInstalled:]
  +[FlexMobileAssetManager compatibilityFilterPredicate]

  // instance methods
  -[FlexMobileAssetManager .cxx_destruct]
  -[FlexMobileAssetManager _purgeAsset:]
  -[FlexMobileAssetManager downloadQueue]
  -[FlexMobileAssetManager setDownloadQueue:]
  -[FlexMobileAssetManager _metadataMappingForUUIDSet:]
  -[FlexMobileAssetManager _processResults:metadataMapping:]
  -[FlexMobileAssetManager _loadBundledArtworkForSongID:]
  -[FlexMobileAssetManager cancelDownloadOfAsset:]
  -[FlexMobileAssetManager _loadBundledSongForSongID:]
  -[FlexMobileAssetManager initWithLibrary:options:]
  -[FlexMobileAssetManager loadCachedSongs]
  -[FlexMobileAssetManager fetchAllSongsWithCompletion:]
  -[FlexMobileAssetManager loadAssetWithID:forSongID:]
  -[FlexMobileAssetManager requestDownloadOfAsset:withOptions:]
  -[FlexMobileAssetManager cancelDownloadOfAllAssets]
  -[FlexMobileAssetManager requestPurgeOfAsset:]
  -[FlexMobileAssetManager assetStatus:]
  -[FlexMobileAssetManager purgeQueue]
  -[FlexMobileAssetManager setPurgeQueue:]
  -[FlexMobileAssetManager _queryAssetsWithClientIDForAssetType:predicates:]
  -[FlexMobileAssetManager filteredResults:forMetadataMapping:]
  -[FlexMobileAssetManager _updateWithLocalArtwork]
  -[FlexMobileAssetManager _makeBundledArtworkCloudBacked]
  -[FlexMobileAssetManager _responseForError:]
  -[FlexMobileAssetManager _queryAssetsWithClientIDForAssetType:songUID:predicates:]
  -[FlexMobileAssetManager _runAsyncAssetDownloadQuery:existingSong:cloudAsset:]
  -[FlexMobileAssetManager _newQueryDictForQuery:songUID:existingSong:asset:]
  -[FlexMobileAssetManager _runNextAsyncAssetDownloadQuery]
  -[FlexMobileAssetManager mobileAssetForSongAsset:]
  -[FlexMobileAssetManager _statusForAssetState:]
  -[FlexMobileAssetManager _processArtwork]
  -[FlexMobileAssetManager _queryLocalAssetInformation]
  -[FlexMobileAssetManager _isCompatible:]


FlexMLSongRendition : FMSongRendition
 @property  FlexMLSummary *summary

  // instance methods
  -[FlexMLSongRendition .cxx_destruct]
  -[FlexMLSongRendition summary]
  -[FlexMLSongRendition setSummary:]
  -[FlexMLSongRendition _calculateDuration:]
  -[FlexMLSongRendition _buildTracks]
  -[FlexMLSongRendition initWithSong:options:andSummary:forDuration:]
  -[FlexMLSongRendition _buildOutroFadeoutMixParams]


FlexReachability : NSObject /usr/lib/libc++.1.dylib
 @property  NSObject<OS_dispatch_queue> *reachabilityQueue

  // class methods
  +[FlexReachability reachabilityWithAddress:]
  +[FlexReachability reachabilityWithHostName:]
  +[FlexReachability reachabilityForInternetConnection]
  +[FlexReachability reachabilityForLocalWiFi]

  // instance methods
  -[FlexReachability init]
  -[FlexReachability dealloc]
  -[FlexReachability .cxx_destruct]
  -[FlexReachability localWiFiStatusForFlags:]
  -[FlexReachability networkStatusForFlags:]
  -[FlexReachability connectionRequired]
  -[FlexReachability currentReachabilityStatus]
  -[FlexReachability stopNotifier]
  -[FlexReachability startNotifier]
  -[FlexReachability interventionRequired]
  -[FlexReachability reachabilityQueue]
  -[FlexReachability setReachabilityQueue:]


FlexUtilities : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[FlexUtilities pathToBundledResourceWithName:]
  +[FlexUtilities decodeItemsInArray:asClass:]
  +[FlexUtilities decodeItemsInDict:asClass:]
  +[FlexUtilities encodeItemsInArray:]
  +[FlexUtilities encodeItemsInDict:]
  +[FlexUtilities _decodeItem:asClass:]
  +[FlexUtilities songsFoundInDeepScanOfDirectory:]


FlexSongProxy : FlexSongBackend
  // instance methods
  -[FlexSongProxy canPlay]
  -[FlexSongProxy initWithUID:songName:artistName:tagIDs:keywords:hidden:recalled:assets:audioEncoderPresetName:metadataVersion:songFormat:]


FlexSong : FlexSongBackend
 @property  NSString *audioFileExtension
 @property  NSObject<FlexSongAssetProviderProtocol> *assetProvider
 @property  NSArray *mainSegments
 @property  NSArray *crossFadeSegments
 @property  NSArray *introSegments
 @property  NSArray *bodySegments
 @property  NSArray *outroSegments
 @property  NSArray *transSegments

  // class methods
  +[FlexSong loadSongInFolderWithPath:]
  +[FlexSong numberToString:]
  +[FlexSong _findMaxLengthInSamplesToReserveForOutroSegment:withOptions:]
  +[FlexSong _findEarlyFadeStartOffsetInSamplesForOutroSegment:withOptions:]
  +[FlexSong _findMinLengthInSamplesForEarlyFadeOutForOutroSegment:withOptions:]
  +[FlexSong _durationInSamplesToReserveForOutroSegment:withOptions:]
  +[FlexSong outroInfoForClipPlaylist:]
  +[FlexSong _transitionIsPossibleFromSegment:toSegment:forBodyClipPlaylist:]

  // instance methods
  -[FlexSong .cxx_destruct]
  -[FlexSong isLoaded]
  -[FlexSong canPlay]
  -[FlexSong naturalDuration]
  -[FlexSong minimumDuration]
  -[FlexSong idealDurations]
  -[FlexSong renditionForDuration:withOptions:testingContext:]
  -[FlexSong encodeAsDictionary]
  -[FlexSong _setupInitialAssets:]
  -[FlexSong verifyRendition:forDuration:failureReason:]
  -[FlexSong timedMetadataItemsWithIdentifier:forRendition:]
  -[FlexSong audioFileExtension]
  -[FlexSong initWithDictionary:assets:]
  -[FlexSong _cacheSegmentsByType]
  -[FlexSong initCommonWithUID:songName:artistName:tagIDs:keywords:hidden:sampleRate:mainSegments:crossFadeSegments:audioFileExtension:audioEncoderPresetName:metadataVersion:customOptions:]
  -[FlexSong _loadAnalysisData]
  -[FlexSong mainSegments]
  -[FlexSong crossFadeSegments]
  -[FlexSong assetProvider]
  -[FlexSong _naturalDurationAssemblyList]
  -[FlexSong _sampleDurationOfClipPlaylist:]
  -[FlexSong _loadSegments]
  -[FlexSong bodySegments]
  -[FlexSong introSegments]
  -[FlexSong outroSegments]
  -[FlexSong transSegments]
  -[FlexSong _segmentsforType:]
  -[FlexSong _highestIndexForSegmentType:]
  -[FlexSong _segmentsForIndex:andType:]
  -[FlexSong _sortFlexSegmentsShortestToLongest:]
  -[FlexSong _shortestSegmentsForType:]
  -[FlexSong _transitionSegmentForSegmentInfo:toSegmentInfo:fromBarIndex:inSegmentList:]
  -[FlexSong _shortestSegmentForType:]
  -[FlexSong _longestSegmentForType:]
  -[FlexSong _updateTransitionBodySegmentsForAssemblyList:usingNewSegment:indexOfNewTransitionSegment:]
  -[FlexSong _addOutroSegmentsToAssemblyList:forDuration:allowTrim:testingContext:]
  -[FlexSong _addIntroSegmentsToAssemblyList:forDuration:testingContext:]
  -[FlexSong _addSegment:withDuration:toAssemblyList:timeRemaining:reusedSegment:indexofNewSegment:]
  -[FlexSong _sequenceBodySegmentList:forIndexes:]
  -[FlexSong _addSegment:withDuration:toAssemblyList:indexOfNewSegment:]
  -[FlexSong _removeSegmentInfo:fromAssemblyList:]
  -[FlexSong _removeUnpermittedTransitionsInAssemblyList:final:testingContext:removedIndexes:conflictList:]
  -[FlexSong _removeUnpermittedTransitionsInAssemblyList:final:testingContext:removedIndexes:]
  -[FlexSong _addBodySegmentsForAssemblyList:forDuration:unusedDuration:testingContext:timedOut:]
  -[FlexSong _minOutroDuration]
  -[FlexSong _maxOutroDuration]
  -[FlexSong _buildIntroAndOutroOnlySegmentAssemblyList:forDuration:testingContext:]
  -[FlexSong _clipPlaylistForDuration:withOptions:testingContext:]
  -[FlexSong _fullSongLoopedClipPlaylistForDuration:withOptions:testingContext:]
  -[FlexSong _buildSegmentAssemblyList:forDuration:withOptions:testingContext:]
  -[FlexSong _samplesForDuration:]
  -[FlexSong _validateAuthoringIssuesInRendition:failureReason:]
  -[FlexSong _validateStructureForRendition:failureReason:]
  -[FlexSong _validateTransitionsInRendition:failureReason:]
  -[FlexSong _verifyAssetsForSegment:withFailureReason:]
  -[FlexSong analysisData]
  -[FlexSong initWithUID:songName:artistName:tagIDs:keywords:hidden:sampleRate:mainSegments:crossFadeSegments:assets:audioFileExtension:audioEncoderPresetName:metadataVersion:customOptions:]
  -[FlexSong _longestSegmentsForType:]
  -[FlexSong _transitionSegmentForSegmentInfo:fromBarIndex:inSegmentList:]
  -[FlexSong _minBodySegmentDuration]
  -[FlexSong _maxIntroDuration]
  -[FlexSong _minIntroDuration]
  -[FlexSong _actualOutroDurationForAssemblyList:currentDuration:]
  -[FlexSong _minimumPermittedIntroAndOutroDuration]
  -[FlexSong _rebuildBodySegmentsInAssemblyList:forDuration:unusedDuration:testingContext:]
  -[FlexSong verifyAssetsWithFailureReason:]


FlexMLSummaryManager : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *allFileNames
 @property  NSArray *allDurations
 @property  NSString *rootPath
 @property  NSString *metadataPath
 @property  int targetTimeScale

  // instance methods
  -[FlexMLSummaryManager .cxx_destruct]
  -[FlexMLSummaryManager rootPath]
  -[FlexMLSummaryManager initWithSummaryMapping:bundlePath:metadataPath:targetTimeScale:]
  -[FlexMLSummaryManager summaryForDuration:]
  -[FlexMLSummaryManager allSummaryDurations]
  -[FlexMLSummaryManager metadataPath]
  -[FlexMLSummaryManager allDurations]
  -[FlexMLSummaryManager averageGranularityBetweenSummaries]
  -[FlexMLSummaryManager _summaryForDuration:]
  -[FlexMLSummaryManager targetTimeScale]
  -[FlexMLSummaryManager allFileNames]


FlexCloudSongAsset : FMSongAsset
 @property  FlexCloudManager *cloudManager

  // instance methods
  -[FlexCloudSongAsset .cxx_destruct]
  -[FlexCloudSongAsset cancelDownload]
  -[FlexCloudSongAsset contentUpdateAvaliable]
  -[FlexCloudSongAsset assetStatus]
  -[FlexCloudSongAsset requestDownload]
  -[FlexCloudSongAsset contentVersionForAssetLocation:]
  -[FlexCloudSongAsset purgeLocalCache]
  -[FlexCloudSongAsset requestDownloadWithOptions:]
  -[FlexCloudSongAsset initWithAssetID:assetStatus:localURL:cloudManager:contentVersion:compatibilityVersion:]
  -[FlexCloudSongAsset cloudManager]
  -[FlexCloudSongAsset compatibilityVersionForAssetLocation:]
  -[FlexCloudSongAsset isCloudBacked]


FMSongAsset : NSObject /usr/lib/libc++.1.dylib
 @property  long long contentVersion
 @property  long long compatibilityVersion
 @property  NSString *assetID
 @property  NSString *songUID
 @property  unsigned long assetStatus
 @property  NSURL *localURL

  // instance methods
  -[FMSongAsset .cxx_destruct]
  -[FMSongAsset compatibilityVersion]
  -[FMSongAsset localURL]
  -[FMSongAsset cancelDownload]
  -[FMSongAsset contentVersion]
  -[FMSongAsset assetID]
  -[FMSongAsset downloadProgress]
  -[FMSongAsset updateDownloadProgress:]
  -[FMSongAsset contentUpdateAvaliable]
  -[FMSongAsset assetStatus]
  -[FMSongAsset requestDownload]
  -[FMSongAsset setSongUID:]
  -[FMSongAsset songUID]
  -[FMSongAsset contentVersionForAssetLocation:]
  -[FMSongAsset purgeLocalCache]
  -[FMSongAsset requestDownloadWithOptions:]
  -[FMSongAsset initWithAssetID:assetStatus:localURL:contentVersion:compatibilityVersion:]
  -[FMSongAsset compatibilityVersionForAssetLocation:]
  -[FMSongAsset isCloudBacked]
  -[FMSongAsset localURLExists]


UIApplication(KonaAppDelegateAdditions)
	// class methods
	+[UIApplication(KonaAppDelegateAdditions) localizedString:]
	+[UIApplication(KonaAppDelegateAdditions) konaDelegate]

	// instance methods
	-[UIApplication(KonaAppDelegateAdditions) topmostViewController]
	-[UIApplication(KonaAppDelegateAdditions) isAlertControllerPresenting]

UIView(MiroAdditions)
	// class methods
	+[UIView(MiroAdditions) pm_videoOverlayButtonWithStyle:]
	+[UIView(MiroAdditions) pm_videoOverlayButtonWithStyle:allowBackdropStatisticsSupression:]

	// instance methods
	-[UIView(MiroAdditions) constrainToSuperview]
	-[UIView(MiroAdditions) removeConstraintsWithSubView:]
	-[UIView(MiroAdditions) constrainToSuperviewWithInsets:]
	-[UIView(MiroAdditions) constrainToSuperviewWithAspectRatio:andFill:]

NSLayoutConstraint(MiroAdditions)
	// instance methods
	-[NSLayoutConstraint(MiroAdditions) updateConstraintForAspectMultiplier:]

PHAsset(miro_origFilename)
	// class methods
	+[PHAsset(miro_origFilename) miro_purgeAssetResourceCache]
	+[PHAsset(miro_origFilename) endTimeForRangeModel:]
	+[PHAsset(miro_origFilename) maxEndTimeRespectingTrimmingForClip:projectFrameRate:]
	+[PHAsset(miro_origFilename) rangeConformingToVoiceRangesSurroundingTime:forDuration:durationTolerance:inRanges:]
	+[PHAsset(miro_origFilename) _miro_faceScoreMaxForVideo:]
	+[PHAsset(miro_origFilename) _miro_voiceScoreMaxForVideo:]
	+[PHAsset(miro_origFilename) _miro_qualityScoreMaxForVideo:]
	+[PHAsset(miro_origFilename) _miro_junkScoreMaxForVideo:]
	+[PHAsset(miro_origFilename) _miro_camMotionScoreMaxForVideo:]
	+[PHAsset(miro_origFilename) _miro_nonAnalysisRelatedScoreMaxForVideo:]
	+[PHAsset(miro_origFilename) _miro_analysisRelatedScoreMaxForVideo:]
	+[PHAsset(miro_origFilename) _miro_scoreMaxForVideo:]
	+[PHAsset(miro_origFilename) globalMiroPhotoLibrary]
	+[PHAsset(miro_origFilename) rangeModelsByDeletingRangeModels:outsideClip:projectFrameRate:]
	+[PHAsset(miro_origFilename) mirobackend_isCloudPhotosEnabled]
	+[PHAsset(miro_origFilename) updateAssets:forPreferredClassificationKeys:]
	+[PHAsset(miro_origFilename) updateAssets:forFeaturedPeople:]
	+[PHAsset(miro_origFilename) rangeSurroundingTime:inRanges:]
	+[PHAsset(miro_origFilename) range:containsRange2:]
	+[PHAsset(miro_origFilename) _coalescedRangesFromRanges:]
	+[PHAsset(miro_origFilename) rangeIn:correspondingToRange:]
	+[PHAsset(miro_origFilename) newRangeFromRange:excludingRange:]
	+[PHAsset(miro_origFilename) rangeModels:deletingLowQualityRangesFrom:blueprint:frameRate:]
	+[PHAsset(miro_origFilename) rangeModels:deletingFastMotionRangesFrom:blueprint:frameRate:]
	+[PHAsset(miro_origFilename) changeGlobalMiroPhotoLibrary:]
	+[PHAsset(miro_origFilename) constrainRange:selectionStart:duration:]
	+[PHAsset(miro_origFilename) miro_cachedLocalMostUsefulResourceMap]
	+[PHAsset(miro_origFilename) miro_isOkayAssetResource:]
	+[PHAsset(miro_origFilename) miroMegaPixelLimit]
	+[PHAsset(miro_origFilename) fetchAssetWithURL:]
	+[PHAsset(miro_origFilename) fetchAssetWithLocalIdentifier:]
	+[PHAsset(miro_origFilename) fetchAssetsWithLocalIdentifierURLs:options:]
	+[PHAsset(miro_origFilename) fetchAssetsWithURLs:options:]
	+[PHAsset(miro_origFilename) fetchAssetLibraryURLsInAssetCollection:withMediaType:]

	// instance methods
	-[PHAsset(miro_origFilename) preferredRepresentation]
	-[PHAsset(miro_origFilename) pixelSize]
	-[PHAsset(miro_origFilename) defaultRepresentation]
	-[PHAsset(miro_origFilename) adjustmentData]
	-[PHAsset(miro_origFilename) miro_rangesWithType:predicate:]
	-[PHAsset(miro_origFilename) newAutoEditRanges]
	-[PHAsset(miro_origFilename) miro_rangesWithType:]
	-[PHAsset(miro_origFilename) miro_performedAnalysisTypes]
	-[PHAsset(miro_origFilename) pickListRanges]
	-[PHAsset(miro_origFilename) miro_isJunk]
	-[PHAsset(miro_origFilename) miro_isBlacklisted]
	-[PHAsset(miro_origFilename) mostUsefulResource]
	-[PHAsset(miro_origFilename) hasLocallyAvailableUsefulResource]
	-[PHAsset(miro_origFilename) miro_allRanges]
	-[PHAsset(miro_origFilename) miro_scoreLogForDebugDisplayWithScoreReasonString:scoreLog:]
	-[PHAsset(miro_origFilename) miro_setRanges:replaceType:]
	-[PHAsset(miro_origFilename) miro_originalFilename]
	-[PHAsset(miro_origFilename) miro_score]
	-[PHAsset(miro_origFilename) miro_junkValue]
	-[PHAsset(miro_origFilename) miro_IrisVideoUsableDuration]
	-[PHAsset(miro_origFilename) assetResourceForIrisIfNeeded]
	-[PHAsset(miro_origFilename) miro_faceCount]
	-[PHAsset(miro_origFilename) miro_flags]
	-[PHAsset(miro_origFilename) miro_deleteRangesWithType:]
	-[PHAsset(miro_origFilename) bestRangeFromRanges:requestedDuration:]
	-[PHAsset(miro_origFilename) newAutoEditRangesConstrainedToClip:]
	-[PHAsset(miro_origFilename) _miro_ignoreDoNotUseScore]
	-[PHAsset(miro_origFilename) miro_rawQualityScore]
	-[PHAsset(miro_origFilename) mirobackend_isScreenshotOrPNG]
	-[PHAsset(miro_origFilename) mirobackend_isGIF]
	-[PHAsset(miro_origFilename) burstIsValid]
	-[PHAsset(miro_origFilename) _miro_faceScore:]
	-[PHAsset(miro_origFilename) _miro_voiceScore:]
	-[PHAsset(miro_origFilename) _miro_qualityScore:]
	-[PHAsset(miro_origFilename) _miro_junkScore:]
	-[PHAsset(miro_origFilename) _miro_camMotionScore:]
	-[PHAsset(miro_origFilename) _miro_nonAnalysisRelatedScore:reasonString:]
	-[PHAsset(miro_origFilename) _miro_analysisRelatedScore:reasonString:]
	-[PHAsset(miro_origFilename) _miro_normalizedScoreForRawScore:]
	-[PHAsset(miro_origFilename) miro_computeStaticScoreWithScoreReasonString:scoreLog:writeToFile:ignoreSetting:]
	-[PHAsset(miro_origFilename) miro_computeStaticScoreWithScoreReasonString:]
	-[PHAsset(miro_origFilename) miro_transientRangesWithType:]
	-[PHAsset(miro_origFilename) avAssetWithOptions:]
	-[PHAsset(miro_origFilename) localIdentifierURL]
	-[PHAsset(miro_origFilename) miro_ingestServerSideAnalysisResults:]
	-[PHAsset(miro_origFilename) miro_IrisUsableRange]
	-[PHAsset(miro_origFilename) miro_voiceCount]
	-[PHAsset(miro_origFilename) miro_irisDoesNotContainFlash]
	-[PHAsset(miro_origFilename) miro_irisMeetsFacesRequirements]
	-[PHAsset(miro_origFilename) sceneRangesRemovingLowQualityRanges]
	-[PHAsset(miro_origFilename) scoreRanges:scoreForDuration:]
	-[PHAsset(miro_origFilename) scoreInterestingSubranges:]
	-[PHAsset(miro_origFilename) sceneRangesSplitByLowQualityAndVPScenes]
	-[PHAsset(miro_origFilename) miro_desirableRanges]
	-[PHAsset(miro_origFilename) allUsefulMetadataRanges]
	-[PHAsset(miro_origFilename) setMiro_desirableRanges:]
	-[PHAsset(miro_origFilename) qualityValueForAnalysisValue:]
	-[PHAsset(miro_origFilename) durationWeightedValue:]
	-[PHAsset(miro_origFilename) userSetSloMoRange]
	-[PHAsset(miro_origFilename) _intersectSplitAndCollectRanges:]
	-[PHAsset(miro_origFilename) scoreForAutoEditRange:resultChildVoiceRange:]
	-[PHAsset(miro_origFilename) badQualityThreshold]
	-[PHAsset(miro_origFilename) isSloMoAsset]
	-[PHAsset(miro_origFilename) arbitrarilySegmentLongUnanalyzedRanges:]
	-[PHAsset(miro_origFilename) _newRangeBySplittingRange:atTime:]
	-[PHAsset(miro_origFilename) _ranges:mergedAsChildRangesWhereOverlapingRanges:]
	-[PHAsset(miro_origFilename) numberOfNeededRangesForDuration:]
	-[PHAsset(miro_origFilename) rangesByTrimmingToBounds:selectionStart:duration:]
	-[PHAsset(miro_origFilename) maximumDurationInSecondsJunkAndUserTrim]
	-[PHAsset(miro_origFilename) irisVideoMeetsQualityRequirements]
	-[PHAsset(miro_origFilename) irisVideoMeetsActionRequirements]
	-[PHAsset(miro_origFilename) modifyForBadIrisSharpness]
	-[PHAsset(miro_origFilename) simplerSceneRangesRemovingLowQualityRanges]
	-[PHAsset(miro_origFilename) _intersectSplitAndCollectRangesInAWayThatDoesntWork:]
	-[PHAsset(miro_origFilename) CHECK_RANGES:]
	-[PHAsset(miro_origFilename) miro_IrisVideoUsable]
	-[PHAsset(miro_origFilename) miro_analysisVersion]
	-[PHAsset(miro_origFilename) miro_cachedLocalMostUsefulResource]
	-[PHAsset(miro_origFilename) setMiro_cachedLocalMostUsefulResource:]
	-[PHAsset(miro_origFilename) miro_cachedLocalMostUsefulIrisResource]
	-[PHAsset(miro_origFilename) setMiro_cachedLocalMostUsefulIrisResource:]
	-[PHAsset(miro_origFilename) _mostUsefulResourceForExport:]
	-[PHAsset(miro_origFilename) largeIfLocal_elseFullIfLocal_elseOriginalIfNotEditedAndLocal_elseMedium]
	-[PHAsset(miro_origFilename) miro_originalVideoKnownToBeBad]
	-[PHAsset(miro_origFilename) _minimumUsefulResourceWidth]
	-[PHAsset(miro_origFilename) _minimumUsefulResourceHeight]
	-[PHAsset(miro_origFilename) downloadResource:progressHandler:completionHandler:dataHandler:]
	-[PHAsset(miro_origFilename) mostUsefulResourceForExport]
	-[PHAsset(miro_origFilename) originalRepresentation]
	-[PHAsset(miro_origFilename) _requestAVAssetWithOptions:resultHandler:]
	-[PHAsset(miro_origFilename) requestPlayerItemWithOptions:resultHandler:]
	-[PHAsset(miro_origFilename) requestImageForTargetSize:contentMode:options:resultHandler:]
	-[PHAsset(miro_origFilename) imageForTargetSize:contentMode:options:]
	-[PHAsset(miro_origFilename) cancelImageRequestWithID:]
	-[PHAsset(miro_origFilename) requestExportSessionWithOptions:exportPreset:resultHandler:]
	-[PHAsset(miro_origFilename) requestAVAssetWithOptions:resultHandler:]
	-[PHAsset(miro_origFilename) avPlayerItemWithOptions:]
	-[PHAsset(miro_origFilename) adjustedRepresentation]

NSAttributedString(MiroAdditions)
	// class methods
	+[NSAttributedString(MiroAdditions) attributedStringConcatenatingString:withString:font:secondaryFont:paragraphStyle:]

UIFont(MiroAdditions)
	// class methods
	+[UIFont(MiroAdditions) miroPreferredFontForTextStyle:useBold:maxPointSize:]

UIColor(MiroAdditions)
	// class methods
	+[UIColor(MiroAdditions) popoverBackgroundColor]
	+[UIColor(MiroAdditions) colorWithHexString:]
	+[UIColor(MiroAdditions) randomColor]
	+[UIColor(MiroAdditions) colorFromPlist:]
	+[UIColor(MiroAdditions) iMovieBlueColor]
	+[UIColor(MiroAdditions) iMoviePluginTintColor]
	+[UIColor(MiroAdditions) iMovieTintColor]
	+[UIColor(MiroAdditions) iMovieDisabledColor]
	+[UIColor(MiroAdditions) blTableviewBackgroundColor]

	// instance methods
	-[UIColor(MiroAdditions) whiteComponent]
	-[UIColor(MiroAdditions) _getRed:green:blue:]
	-[UIColor(MiroAdditions) hexString]
	-[UIColor(MiroAdditions) isSimilarToColor:]
	-[UIColor(MiroAdditions) perceptualLuminance]
	-[UIColor(MiroAdditions) colorModel]
	-[UIColor(MiroAdditions) _getCIEL:a:b:]
	-[UIColor(MiroAdditions) _getX:y:z:]
	-[UIColor(MiroAdditions) _CreateCIELABColor]
	-[UIColor(MiroAdditions) isReallySimilarToColor:]
	-[UIColor(MiroAdditions) plistRepresentation]

NSArray(Additions)
	// instance methods
	-[NSArray(Additions) intAtIndex:]
	-[NSArray(Additions) doubleAtIndex:]
	-[NSArray(Additions) rectAtIndex:]
	-[NSArray(Additions) boolAtIndex:]
	-[NSArray(Additions) secondObject]
	-[NSArray(Additions) floatAtIndex:]
	-[NSArray(Additions) objectsInRange:]
	-[NSArray(Additions) mutableDeepCopy]
	-[NSArray(Additions) randomObject]
	-[NSArray(Additions) randomObjectWithSeed:]
	-[NSArray(Additions) thirdObject]
	-[NSArray(Additions) boolAtIndex:defaultValue:]
	-[NSArray(Additions) intAtIndex:defaultValue:]
	-[NSArray(Additions) floatAtIndex:defaultValue:]
	-[NSArray(Additions) doubleAtIndex:defaultValue:]
	-[NSArray(Additions) rectAtIndex:defaultValue:]
	-[NSArray(Additions) objectAtIndex:defaultValue:]
	-[NSArray(Additions) objectOrNullAtIndex:]
	-[NSArray(Additions) numberOfObjectsWithKindOfClass:]
	-[NSArray(Additions) objectAtIndexVEiOSNoThrow:]

NSMutableArray(Additions)
	// instance methods
	-[NSMutableArray(Additions) addObjectIfNotPresent:]

PHFetchResult(Array)
	// instance methods
	-[PHFetchResult(Array) allObjects]
	-[PHFetchResult(Array) objectsInRange:]

PHAssetResource(really)
	// instance methods
	-[PHAssetResource(really) miro_isReallyLocallyAvailable]

NSIndexSet(NSIndexPath)
	// class methods
	+[NSIndexSet(NSIndexPath) unionOf:with:]
	+[NSIndexSet(NSIndexPath) differenceOf:with:]
	+[NSIndexSet(NSIndexPath) indexSetWithIndexesInRCRange:]
	+[NSIndexSet(NSIndexPath) intersectionOf:with:]

	// instance methods
	-[NSIndexSet(NSIndexPath) largestContiguousIndexGreaterThanOrEqualTo:]
	-[NSIndexSet(NSIndexPath) indexPathsWithSection:]
	-[NSIndexSet(NSIndexPath) intersectsIndexesInRCRange:]
	-[NSIndexSet(NSIndexPath) lowestContiguousIndexLessThanOrEqualTo:]
	-[NSIndexSet(NSIndexPath) nextToLastIndex]
	-[NSIndexSet(NSIndexPath) indexesInRange:]
	-[NSIndexSet(NSIndexPath) nearestIndex:]
	-[NSIndexSet(NSIndexPath) indexArray]

UIImage(Additions)
	// class methods
	+[UIImage(Additions) imageWithColor:]
	+[UIImage(Additions) imageWithColor:andSize:]
	+[UIImage(Additions) isSizeSwappedForImageOrientation:]
	+[UIImage(Additions) transformForImageOrientation:andSize:]
	+[UIImage(Additions) saveToStretchyCache:forKey:]
	+[UIImage(Additions) stretchyVersionH:V:forImage:]
	+[UIImage(Additions) stretchyImageNamed:hStretch:vStretch:]
	+[UIImage(Additions) stretchyImageNamed:]
	+[UIImage(Additions) imageNamed:keepInCache:]
	+[UIImage(Additions) imageFlippedIfABLocaleWithName:]

	// instance methods
	-[UIImage(Additions) tintedImage]
	-[UIImage(Additions) adjustFitInSize:normalizeOrientation:]
	-[UIImage(Additions) drawImageIntoSize:maintainAspectRatio:normalizeOrientation:]
	-[UIImage(Additions) scaledSized:maintainAspectRatio:]
	-[UIImage(Additions) extendedRangeSafeDrawInRect:]
	-[UIImage(Additions) extendedRangeSafeDrawInRect:opaque:scale:]
	-[UIImage(Additions) cropImage:]
	-[UIImage(Additions) _isSRGB]
	-[UIImage(Additions) drawInRect:fromRect:blendMode:alpha:]
	-[UIImage(Additions) scaledImageEqualOrSmallerThanSize:maintainAspectRatio:normalizeOrientation:]
	-[UIImage(Additions) scaledSizeEqualOrSmallerThanSize:maintainAspectRatio:normalizeOrientation:]
	-[UIImage(Additions) scaledImageWithMaxDimension:]
	-[UIImage(Additions) cropped16X9Image]
	-[UIImage(Additions) stretchyVersionH:V:]
	-[UIImage(Additions) stretchyImageWithLeftCapWidth:topCapHeight:]
	-[UIImage(Additions) stretchyImageViewWithLeftCap:topCap:]
	-[UIImage(Additions) stretchyHVersion]
	-[UIImage(Additions) stretchyVVersion]
	-[UIImage(Additions) stretchyVersion]
	-[UIImage(Additions) applyBlurWithRadius:tintColor:saturationDeltaFactor:maskImage:]
	-[UIImage(Additions) applyBlurWithRadius:tintColor:saturationDeltaFactor:maskImage:scale:]
	-[UIImage(Additions) applyLightEffect]
	-[UIImage(Additions) applyExtraLightEffect]
	-[UIImage(Additions) applyDarkEffect]
	-[UIImage(Additions) applyTintEffectWithColor:]

PHImageManager(Identifiers)
AVURLAsset(Additions)
	// class methods
	+[AVURLAsset(Additions) mediaserverdCrashed]
	+[AVURLAsset(Additions) assetWithIdentifierURL:]
	+[AVURLAsset(Additions) newAssetWithIdentifierURL:]
	+[AVURLAsset(Additions) emptyAsset]

NSOrderedSet(Copy)
	// instance methods
	-[NSOrderedSet(Copy) deepCopy]
	-[NSOrderedSet(Copy) shallowCopy]

AVAsset(Plugin)
	// class methods
	+[AVAsset(Plugin) assetWithIdentifierURL:]
	+[AVAsset(Plugin) setPluginEditedAsset:]
	+[AVAsset(Plugin) pluginEditedAsset]

	// instance methods
	-[AVAsset(Plugin) creationDateFromMetadata]

UIViewController(Additions)
	// instance methods
	-[UIViewController(Additions) be_ensureViewIsLoaded]

NSBundle(Additions)
	// class methods
	+[NSBundle(Additions) localizedString:]
	+[NSBundle(Additions) localizedValue:]

PHAdjustmentData(iMovieTests)
	// instance methods
	-[PHAdjustmentData(iMovieTests) isUnderstandable]
	-[PHAdjustmentData(iMovieTests) isiMovieAdjustment]
	-[PHAdjustmentData(iMovieTests) isSloMoAdjustment]

NSString(NSRangeAdditions)
	// class methods
	+[NSString(NSRangeAdditions) stringFromSeconds:]
	+[NSString(NSRangeAdditions) disarmFilename:]
	+[NSString(NSRangeAdditions) stringFromDuration:showTenths:frameRate:showTimecode:readable:useShortReadable:]
	+[NSString(NSRangeAdditions) stringFromDuration:showTenths:frameRate:showTimecode:]
	+[NSString(NSRangeAdditions) stringFromDuration:showTenths:frameRate:]
	+[NSString(NSRangeAdditions) shortStyleStringFromDuration:]
	+[NSString(NSRangeAdditions) pathComponents:firstComponentIndex:lastComponentIndex:]
	+[NSString(NSRangeAdditions) pathComponent:componentIndex:]
	+[NSString(NSRangeAdditions) formattedDiskSpace:]
	+[NSString(NSRangeAdditions) stringFromDurationInHoursMinutesAndSeconds:frameRate:]
	+[NSString(NSRangeAdditions) stringFromDurationInSeconds:showTenths:frameRate:]
	+[NSString(NSRangeAdditions) stringFromDuration:showTenths:frameRate:readable:]
	+[NSString(NSRangeAdditions) stringFromSeconds:showTenths:]
	+[NSString(NSRangeAdditions) stringFromSeconds:showTenths:readable:]
	+[NSString(NSRangeAdditions) stringFromDuration:frameRate:]
	+[NSString(NSRangeAdditions) shortStyleStringFromFrameDuration:]
	+[NSString(NSRangeAdditions) stringFromOSErr:]

	// instance methods
	-[NSString(NSRangeAdditions) string]
	-[NSString(NSRangeAdditions) range]
	-[NSString(NSRangeAdditions) fileURL]
	-[NSString(NSRangeAdditions) isRTL]
	-[NSString(NSRangeAdditions) locationValue]
	-[NSString(NSRangeAdditions) stringByRemovingNewlines]
	-[NSString(NSRangeAdditions) md5String]
	-[NSString(NSRangeAdditions) pathIsInSharedMedia]
	-[NSString(NSRangeAdditions) stringByRemovingRedundantWhiteSpace]
	-[NSString(NSRangeAdditions) getTrailingCountWithDelimiter:range:]
	-[NSString(NSRangeAdditions) stringByChangingWhiteSpaceToSpace]
	-[NSString(NSRangeAdditions) rangeOfStringSurroundedBy:range:]
	-[NSString(NSRangeAdditions) stringByIncrementingTrailingCountWithDelimiter:]
	-[NSString(NSRangeAdditions) numericalCaseInsensitiveCompare:]
	-[NSString(NSRangeAdditions) isCaseInsensitiveEqualToString:]
	-[NSString(NSRangeAdditions) stringByRemovingTrailingOccurrencesOfCharactersInSet:]
	-[NSString(NSRangeAdditions) stringByPrefixingPathComponent:]
	-[NSString(NSRangeAdditions) stringByRemovingPathPrefix:]
	-[NSString(NSRangeAdditions) stringByRemovingSuffix:]
	-[NSString(NSRangeAdditions) stringByRemovingSingleCharacterWords]
	-[NSString(NSRangeAdditions) stringByReplacingRedundantWhiteSpaceWithSingleSpace]
	-[NSString(NSRangeAdditions) stringByDeletingPathExtensionInExtensions:]
	-[NSString(NSRangeAdditions) displayablePathString]
	-[NSString(NSRangeAdditions) compareLiteral:]
	-[NSString(NSRangeAdditions) rangeOfStringSurroundedBy:]
	-[NSString(NSRangeAdditions) rangesOfStringsSurroundedBy:]
	-[NSString(NSRangeAdditions) rangesOfString:]
	-[NSString(NSRangeAdditions) pathToUseToCheckModDate]
	-[NSString(NSRangeAdditions) stringByReplacingWord:withString:]
	-[NSString(NSRangeAdditions) filterErrorDescription]
	-[NSString(NSRangeAdditions) containsArabicCharacters]
	-[NSString(NSRangeAdditions) containsHebrewCharacters]
	-[NSString(NSRangeAdditions) containsRTLScript]
	-[NSString(NSRangeAdditions) appendToPathname:]
	-[NSString(NSRangeAdditions) stringByReplacingWords:withString:]
	-[NSString(NSRangeAdditions) rangeFromLocation:]
	-[NSString(NSRangeAdditions) localizedTextForAudioTitle]
	-[NSString(NSRangeAdditions) imContainsEmoji]
	-[NSString(NSRangeAdditions) imContainsArabic]
	-[NSString(NSRangeAdditions) stringByCenterTruncatingToCharCount:]
	-[NSString(NSRangeAdditions) _markupEscapedString:]
	-[NSString(NSRangeAdditions) propertyListXMLEncodedString]
	-[NSString(NSRangeAdditions) htmlEncodedString]
	-[NSString(NSRangeAdditions) suitableUTF8_XMLString]
	-[NSString(NSRangeAdditions) textSizeForMaximumSize:font:paragraphStyle:]
	-[NSString(NSRangeAdditions) widestWordWithFont:]
	-[NSString(NSRangeAdditions) parametersToFitInSize:font:minPointSize:maxPointSize:multiLine:actualFont:actualSize:]
	-[NSString(NSRangeAdditions) compareProjectPathModificationDates:]
	-[NSString(NSRangeAdditions) rangeCompare:]
	-[NSString(NSRangeAdditions) lengthWithComposedCharacters]
	-[NSString(NSRangeAdditions) uniquePath]
	-[NSString(NSRangeAdditions) stringByReplacingOccurancesOfString:withString:]
	-[NSString(NSRangeAdditions) stringByAbbreviatingAppOrUserSandboxWithTildeInPath]
	-[NSString(NSRangeAdditions) stringByRemovingPrefix:]

PVEffect(SecureArchiving)
	// class methods
	+[PVEffect(SecureArchiving) objectFromPlist:inProject:]

	// instance methods
	-[PVEffect(SecureArchiving) plistRepresentation]

NSURL(Identifiers)
	// class methods
	+[NSURL(Identifiers) perThreadPhotosQueryDateFormatter]
	+[NSURL(Identifiers) photosIdentifierURLWithQuery:]
	+[NSURL(Identifiers) pluginEditedAssetURL]
	+[NSURL(Identifiers) localIdentifierURLForAsset:]
	+[NSURL(Identifiers) generateImportedKenBurnsIdentifierURL]
	+[NSURL(Identifiers) generateRecordedKenBurnsIdentifierURL]
	+[NSURL(Identifiers) localIdentifierURLForAssetRepresentation:]

	// instance methods
	-[NSURL(Identifiers) modificationDate]
	-[NSURL(Identifiers) mediaType]
	-[NSURL(Identifiers) localIdentifier]
	-[NSURL(Identifiers) isImported]
	-[NSURL(Identifiers) modificationDateString]
	-[NSURL(Identifiers) isPluginEditedAssetURL]
	-[NSURL(Identifiers) isKenBurnsIdentifierURL]
	-[NSURL(Identifiers) isAssetsLibraryPersistentURL]
	-[NSURL(Identifiers) isPhotoKitCompatibleIdentifierURL]
	-[NSURL(Identifiers) isMediaPlayerPersistentURL]
	-[NSURL(Identifiers) isSharedMediaURL]
	-[NSURL(Identifiers) isSFXorThemeMusicURL]
	-[NSURL(Identifiers) shortQuery]
	-[NSURL(Identifiers) kenBurnsIdentifier]
	-[NSURL(Identifiers) localIdentifierURLWithModificationDate:]
	-[NSURL(Identifiers) localIdentifierURLByRemovingModificationDate]
	-[NSURL(Identifiers) valueForQueryKey:]
	-[NSURL(Identifiers) isKenBurnsFileURL]
	-[NSURL(Identifiers) isRecorded]
	-[NSURL(Identifiers) standardizedQuery]
	-[NSURL(Identifiers) isPhotosIdentifierURL]
	-[NSURL(Identifiers) isAdjustedVersion]

PHCachingImageManager(Additions)
	// instance methods
	-[PHCachingImageManager(Additions) startCachingImagesForAssets:targetSize:contentMode:version:networkAccessAllowed:]

NSDictionary(Additions)
	// instance methods
	-[NSDictionary(Additions) boolForKey:]
	-[NSDictionary(Additions) integerForKey:]
	-[NSDictionary(Additions) floatForKey:]
	-[NSDictionary(Additions) doubleForKey:]
	-[NSDictionary(Additions) boolForKey:defaultValue:]
	-[NSDictionary(Additions) intForKey:defaultValue:]
	-[NSDictionary(Additions) floatForKey:defaultValue:]
	-[NSDictionary(Additions) doubleForKey:defaultValue:]
	-[NSDictionary(Additions) objectForIndex:]
	-[NSDictionary(Additions) objectForKey:defaultValue:]
	-[NSDictionary(Additions) integerForKey:defaultValue:]
	-[NSDictionary(Additions) intForKey:]
	-[NSDictionary(Additions) rectForKey:]
	-[NSDictionary(Additions) mutableDeepCopy]
	-[NSDictionary(Additions) unsignedIntegerForKey:]
	-[NSDictionary(Additions) rectForKey:defaultValue:]
	-[NSDictionary(Additions) objectOrNullForKey:]

NSMutableDictionary(Additions)
	// instance methods
	-[NSMutableDictionary(Additions) setInteger:forKey:]
	-[NSMutableDictionary(Additions) setFloat:forKey:]
	-[NSMutableDictionary(Additions) setDouble:forKey:]
	-[NSMutableDictionary(Additions) setBool:forKey:]
	-[NSMutableDictionary(Additions) setInt:forKey:]
	-[NSMutableDictionary(Additions) setObject:forIndex:]
	-[NSMutableDictionary(Additions) setUnsignedInteger:forKey:]
	-[NSMutableDictionary(Additions) copyObjectFromDictionary:forKey:]
	-[NSMutableDictionary(Additions) setObjectOrRemoveIfNil:forKey:]
	-[NSMutableDictionary(Additions) copyObjectFromDictionaryRemoveIfNotPresent:forKey:]
	-[NSMutableDictionary(Additions) setRect:forKey:]
	-[NSMutableDictionary(Additions) setRectIfNotPresent:forKey:]
	-[NSMutableDictionary(Additions) setObjectIfNotNil:forKey:]
	-[NSMutableDictionary(Additions) setBoolIfNotPresent:forKey:]
	-[NSMutableDictionary(Additions) setIntIfNotPresent:forKey:]
	-[NSMutableDictionary(Additions) setFloatIfNotPresent:forKey:]
	-[NSMutableDictionary(Additions) setDoubleIfNotPresent:forKey:]
	-[NSMutableDictionary(Additions) setObjectIfNotPresent:forKey:]
	-[NSMutableDictionary(Additions) copyObjectsFromDictionary:forKeys:]
	-[NSMutableDictionary(Additions) copyObjectsFromDictionaryRemoveIfNotPresent:forKeys:]
	-[NSMutableDictionary(Additions) removeObjectsForKeysOtherThan:]

UIDevice(Additions)
	// instance methods
	-[UIDevice(Additions) memorySize]
	-[UIDevice(Additions) orientationString]
	-[UIDevice(Additions) numberOfCPU]
	-[UIDevice(Additions) hasMoreThan1GBOfMemory]
	-[UIDevice(Additions) osVersionAtLeast:]
	-[UIDevice(Additions) enoughPowerForLargerPhotoThumbnails]
	-[UIDevice(Additions) enoughMemoryFor2160P]
	-[UIDevice(Additions) enoughPowerFor2160P]
	-[UIDevice(Additions) hasPlentyOfMemory]
	-[UIDevice(Additions) enoughMemoryForRendering12MPPhoto]
	-[UIDevice(Additions) isLargePhone]
	-[UIDevice(Additions) isWidePhone]
	-[UIDevice(Additions) freeMemory]
	-[UIDevice(Additions) canEncode2160P]
	-[UIDevice(Additions) screenCanShow2160P]
	-[UIDevice(Additions) canSupportHEVC]
	-[UIDevice(Additions) sufficientOomphForZoomedRenderScale]

NSMutableIndexSet(Additions)
	// class methods
	+[NSMutableIndexSet(Additions) indexSetWithIndexesInRCRange:]

	// instance methods
	-[NSMutableIndexSet(Additions) closeGapsSmallerThan:]
	-[NSMutableIndexSet(Additions) removeBlocksSmallerThan:]
	-[NSMutableIndexSet(Additions) addIndexesInRCRange:]

NSDate(Additions)
	// instance methods
	-[NSDate(Additions) isBeforeDate:]
	-[NSDate(Additions) displayString]
	-[NSDate(Additions) beginningOfDay]
	-[NSDate(Additions) beginningOfPreviousDay]
	-[NSDate(Additions) displayStringWithTime:]
	-[NSDate(Additions) dateStringWithDotSeparators]
	-[NSDate(Additions) compareDay:]
	-[NSDate(Additions) daysOfTheYearFromDate:]
	-[NSDate(Additions) approximateDaysOfTheYearFromDate:]

NSObject(MutableDeepCopy)
	// instance methods
	-[NSObject(MutableDeepCopy) mutableDeepCopy]

NSSet(MutableDeepCopy)
	// instance methods
	-[NSSet(MutableDeepCopy) mutableDeepCopy]

NSFileManager(KonaAdditions)
	// class methods
	+[NSFileManager(KonaAdditions) multiUserDelegate]
	+[NSFileManager(KonaAdditions) setMultiUserDelegate:]

	// instance methods
	-[NSFileManager(KonaAdditions) importExportDirectory]
	-[NSFileManager(KonaAdditions) enoughSpaceToExportProject:]
	-[NSFileManager(KonaAdditions) contentsOfSharedMediaDirectory]
	-[NSFileManager(KonaAdditions) sharedMediaDirectory]
	-[NSFileManager(KonaAdditions) itunesExportedProjectsTrashDirectory]
	-[NSFileManager(KonaAdditions) trashDirectory]
	-[NSFileManager(KonaAdditions) modificationDate:]
	-[NSFileManager(KonaAdditions) privateDocumentsDirectory]
	-[NSFileManager(KonaAdditions) sizeOfFileAtPath:]
	-[NSFileManager(KonaAdditions) freeBytesOnDisk]
	-[NSFileManager(KonaAdditions) localPrivateDocumentsDirectory]
	-[NSFileManager(KonaAdditions) ubiquityContainer]
	-[NSFileManager(KonaAdditions) enoughSpaceToEditProjects]
	-[NSFileManager(KonaAdditions) sharedAudioDirectory]
	-[NSFileManager(KonaAdditions) pathAfterAssetLibraryCopy:dest:]
	-[NSFileManager(KonaAdditions) pathAfterMediaPlayerCopy:dest:]
	-[NSFileManager(KonaAdditions) enoughSpaceToRecordMedia]
	-[NSFileManager(KonaAdditions) cloudImportDirectory]
	-[NSFileManager(KonaAdditions) renderedAdjustmentsDirectory]
	-[NSFileManager(KonaAdditions) localTheaterDirectory]
	-[NSFileManager(KonaAdditions) contentsOfPrivateDocumentsDirectory]
	-[NSFileManager(KonaAdditions) contentsOfImportExportDirectory]
	-[NSFileManager(KonaAdditions) allProjectPlistPathsExcludingPath:]
	-[NSFileManager(KonaAdditions) uniquePathFromPath:]
	-[NSFileManager(KonaAdditions) copyFileFromAssetLibrary:toFolder:]
	-[NSFileManager(KonaAdditions) copyAudioFileFromMediaPlayerURL:toFolder:]

AVVideoCompositionLayerInstruction(konaseralize)
	// instance methods
	-[AVVideoCompositionLayerInstruction(konaseralize) konaSerializeVideoLayerInstruction]

AVVideoCompositionInstruction(konaseralize)
	// instance methods
	-[AVVideoCompositionInstruction(konaseralize) konaSerializeVideoInstruction]

AVVideoComposition(konaseralize)
	// instance methods
	-[AVVideoComposition(konaseralize) konaSerializeVideoComposition]

AVAssetReaderAudioMixOutput(AVAssetReaderAudioMixOutput_AudioMixConvenienceAdditions)
	// class methods
	+[AVAssetReaderAudioMixOutput(AVAssetReaderAudioMixOutput_AudioMixConvenienceAdditions) assetReaderAudioMixOutputWithAudioMix:appliedToAsset:audioSettings:]

AVAssetReaderVideoCompositionOutput(AVAssetReaderVideoCompositionOutput_VideoCompositionConvenienceAdditions)
	// class methods
	+[AVAssetReaderVideoCompositionOutput(AVAssetReaderVideoCompositionOutput_VideoCompositionConvenienceAdditions) assetReaderVideoCompositionOutputWithVideoComposition:appliedToAsset:videoSettings:]

MAAsset(MAAssetAdditions)
	// instance methods
	-[MAAsset(MAAssetAdditions) isPresent]

01 00 0d00 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountStore 
01 00 0240 /System/Library/PrivateFrameworks/MobileAsset.framework/MobileAsset: ASAsset 
01 00 0240 /System/Library/PrivateFrameworks/MobileAsset.framework/MobileAsset: ASAssetQuery 
01 00 2200 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAsset 
01 00 2200 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetExportSession 
01 00 2200 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetImageGenerator 
01 00 2200 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetReader 
01 00 2200 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetReaderAudioMixOutput 
01 00 2200 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetReaderSampleReferenceOutput 
01 00 2200 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetReaderTrackOutput 
01 00 2200 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetReaderVideoCompositionOutput 
01 00 2200 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetWriter 
01 00 2200 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetWriterInput 
01 00 2200 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAudioSession 
01 00 2200 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVComposition 
01 00 2200 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCompositionTrackSegment 
01 00 2200 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMetadataItem 
01 00 2200 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMutableAudioMix 
01 00 2200 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMutableAudioMixInputParameters 
01 00 2200 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMutableComposition 
01 00 2200 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMutableMetadataItem 
01 00 2200 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMutableVideoComposition 
01 00 2200 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVOutputSettingsAssistant 
01 00 2200 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVPlayer 
01 00 2200 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVPlayerItem 
01 00 2200 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVPlayerLayer 
01 00 1000 /System/Library/Frameworks/AVKit.framework/AVKit: AVPlayerViewController 
01 00 2200 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVSynchronizedLayer 
01 00 2200 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVURLAsset 
01 00 2200 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVVideoComposition 
01 00 2200 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVVideoCompositionCoreAnimationTool 
01 00 2200 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVVideoCompositionInstruction 
01 00 2200 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVVideoCompositionLayerInstruction 
01 00 1c00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CABasicAnimation 
01 00 1c00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CALayer 
01 00 1c00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransaction 
01 00 1300 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIContext 
01 00 1300 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIDetector 
01 00 1300 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIFilter 
01 00 1300 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIImage 
01 00 1700 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLGeocoder 
01 00 1700 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLLocation 
01 00 0e00 /System/Library/Frameworks/OpenGLES.framework/OpenGLES: EAGLContext 
01 00 0700 /System/Library/Frameworks/LinkPresentation.framework/LinkPresentation: LPLinkMetadata 
01 00 2b00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationWorkspace 
01 00 0240 /System/Library/PrivateFrameworks/MobileAsset.framework/MobileAsset: MAAsset 
01 00 0240 /System/Library/PrivateFrameworks/MobileAsset.framework/MobileAsset: MAAssetQuery 
01 00 0240 /System/Library/PrivateFrameworks/MobileAsset.framework/MobileAsset: MADownloadOptions 
01 00 1400 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPMediaItem 
01 00 1400 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPMediaLibrary 
01 00 1400 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPMediaPickerController 
01 00 1400 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPMediaPropertyPredicate 
01 00 1400 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPMediaQuery 
01 00 2a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSAutoreleasePool 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 2a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCache 
01 00 2a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSCompoundPredicate 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSCondition 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSCountedSet 
01 00 2a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 2a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateComponentsFormatter 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 2a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 2a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileCoordinator 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileHandle 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexPath 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexSet 
01 00 2a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSInvocation 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSItemProvider 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSLayoutConstraint 
01 00 2a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSLock 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSMetadataQuery 
01 00 2a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableAttributedString 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableCharacterSet 
01 00 2a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 2a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: NSMutableParagraphStyle 
01 00 2a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 2a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 2700 /usr/lib/libobjc.A.dylib: NSObject 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperation 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 2a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOrderedSet 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: NSParagraphStyle 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSRecursiveLock 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 2a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSScanner 
01 00 2a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: NSShadow 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: NSTextAttachment 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 2a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 2a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSUndoManager 
01 00 2a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 2600 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0400 /System/Library/Frameworks/PhotosUI.framework/PhotosUI: PHActivityProgressViewController 
01 00 1d40 /System/Library/Frameworks/Photos.framework/Photos: PHAdjustmentData 
01 00 0400 /System/Library/Frameworks/PhotosUI.framework/PhotosUI: PHAirPlayScreenController 
01 00 1d40 /System/Library/Frameworks/Photos.framework/Photos: PHAsset 
01 00 1d40 /System/Library/Frameworks/Photos.framework/Photos: PHAssetChangeRequest 
01 00 1d40 /System/Library/Frameworks/Photos.framework/Photos: PHAssetCollection 
01 00 1d40 /System/Library/Frameworks/Photos.framework/Photos: PHAssetCreationRequest 
01 00 1d40 /System/Library/Frameworks/Photos.framework/Photos: PHAssetResource 
01 00 1d40 /System/Library/Frameworks/Photos.framework/Photos: PHAssetResourceCreationOptions 
01 00 1d40 /System/Library/Frameworks/Photos.framework/Photos: PHAssetResourceManager 
01 00 1d40 /System/Library/Frameworks/Photos.framework/Photos: PHAssetResourceRequestOptions 
01 00 1d40 /System/Library/Frameworks/Photos.framework/Photos: PHCachingImageManager 
01 00 1d40 /System/Library/Frameworks/Photos.framework/Photos: PHContentEditingInputRequestOptions 
01 00 1d40 /System/Library/Frameworks/Photos.framework/Photos: PHFace 
01 00 1d40 /System/Library/Frameworks/Photos.framework/Photos: PHFetchOptions 
01 00 1d40 /System/Library/Frameworks/Photos.framework/Photos: PHFetchResult 
01 00 1d40 /System/Library/Frameworks/Photos.framework/Photos: PHFetchResultChangeDetails 
01 00 1d40 /System/Library/Frameworks/Photos.framework/Photos: PHImageManager 
01 00 1d40 /System/Library/Frameworks/Photos.framework/Photos: PHImageRequestOptions 
01 00 1d40 /System/Library/Frameworks/Photos.framework/Photos: PHManualFetchResult 
01 00 1d40 /System/Library/Frameworks/Photos.framework/Photos: PHMemory 
01 00 1d40 /System/Library/Frameworks/Photos.framework/Photos: PHMemoryChangeRequest 
01 00 1d40 /System/Library/Frameworks/Photos.framework/Photos: PHPerson 
01 00 1d40 /System/Library/Frameworks/Photos.framework/Photos: PHPhotoLibrary 
01 00 0400 /System/Library/Frameworks/PhotosUI.framework/PhotosUI: PHPlaceholderView 
01 00 1d40 /System/Library/Frameworks/Photos.framework/Photos: PHVideoRequestOptions 
01 00 0400 /System/Library/Frameworks/PhotosUI.framework/PhotosUI: PUPhotosGridViewControllerPhoneSpec 
01 00 0400 /System/Library/Frameworks/PhotosUI.framework/PhotosUI: PUPhotosPickerViewController 
01 00 2340 /System/Library/PrivateFrameworks/ProVideo.framework/ProVideo: PVEffect 
01 00 2340 /System/Library/PrivateFrameworks/ProVideo.framework/ProVideo: PVEffectPreviewGenerator 
01 00 2340 /System/Library/PrivateFrameworks/ProVideo.framework/ProVideo: PVEffectResources 
01 00 2340 /System/Library/PrivateFrameworks/ProVideo.framework/ProVideo: PVInstructionGraphEffectNode 
01 00 2340 /System/Library/PrivateFrameworks/ProVideo.framework/ProVideo: PVInstructionGraphGeneratorNode 
01 00 2340 /System/Library/PrivateFrameworks/ProVideo.framework/ProVideo: PVInstructionGraphImageSourceNode 
01 00 2340 /System/Library/PrivateFrameworks/ProVideo.framework/ProVideo: PVInstructionGraphOrientationEffectNode 
01 00 2340 /System/Library/PrivateFrameworks/ProVideo.framework/ProVideo: PVInstructionGraphSourceTrackNode 
01 00 2340 /System/Library/PrivateFrameworks/ProVideo.framework/ProVideo: PVOrientationEffect 
01 00 2340 /System/Library/PrivateFrameworks/ProVideo.framework/ProVideo: PVVideoCompositing 
01 00 2340 /System/Library/PrivateFrameworks/ProVideo.framework/ProVideo: PVVideoCompositingExporter 
01 00 2340 /System/Library/PrivateFrameworks/ProVideo.framework/ProVideo: PVVideoCompositionInstruction 
01 00 1e00 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXExtendedTraitCollection 
01 00 1e00 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXFeatureSpec 
01 00 1e00 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXKitSettings 
01 00 1e00 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXTitleSubtitleUILabel 
01 00 1e00 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXUIAssetBadgeView 
01 00 0a00 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSAccountStore 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivity 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivityIndicatorView 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivityItemProvider 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivityViewController 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertAction 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertController 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBarButtonItem 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBezierPath 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBlurEffect 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIButton 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionView 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewCell 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewController 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewFlowLayout 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UICopyToPasteboardActivity 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDevice 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDocumentInteractionController 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIGestureRecognizer 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIGraphicsImageRenderer 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIGraphicsImageRendererFormat 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageSymbolConfiguration 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UILabel 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UILocalNotification 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UILongPressGestureRecognizer 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIMovieScrubber 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationController 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPickerView 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIProgressView 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIResponder 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UISaveToCameraRollActivity 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreenEdgePanGestureRecognizer 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UISplitViewController 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIStoryboard 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UISwipeGestureRecognizer 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UISwitch 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UITableView 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewCell 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewController 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewHeaderFooterView 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UITapGestureRecognizer 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UITextField 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UITextView 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIToolbar 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UITraitCollection 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIVisualEffectView 
01 00 0800 /System/Library/Frameworks/Vision.framework/Vision: VNFaceprint 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIActivityItemCustomization 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIActivityItemCustomizationGroup 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIBackdropView 
01 00 1f00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIScreenRoutePickerViewController 
