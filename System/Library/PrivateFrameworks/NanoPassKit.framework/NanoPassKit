|| __DATA.__data _NPKGizmoDatabaseChangedNotificationName
|| __DATA.__data _NPKGizmoDatabaseChangedWasFirstUnlockKeyName
|| __DATA.__data _NPKGizmoDatabaseChangedWasNoOpKeyName
|| __DATA.__data _NPKGizmoDatabasePassAddedNotificationName
|| __DATA.__data _NPKGizmoDatabasePassKeyName
|| __DATA.__data _NPKGizmoDatabasePassRemovedNotificationName
|| __DATA.__data _NPKGizmoDatabasePassUpdatedNotificationName
|| __DATA.__data _NPKGizmoDatabaseTransactionAddedOrUpdatedNotificationName
|| __DATA.__data _NPKGizmoDatabaseTransactionExplicitlyRemovedNotificationName
|| __DATA.__data _NPKMaximumRelevancyResultsAge
|| __DATA.__data _NPKRemotePassActionMessageAbsoluteDataURLPrefix
|| __DATA.__data _NPKTransitValuePendingDefaultsKey
|| __DATA.__data __NPKGizmoDatabaseExternallyChangedNotificationName
|| __DATA.__objc_data _OBJC_CLASS_$_NPKAddPaymentPassController
|| __DATA.__objc_data _OBJC_CLASS_$_NPKApplicationRecordManager
|| __DATA.__objc_data _OBJC_CLASS_$_NPKAssertion
|| __DATA.__objc_data _OBJC_CLASS_$_NPKAssertionManager
|| __DATA.__objc_data _OBJC_CLASS_$_NPKAudioPlayer
|| __DATA.__objc_data _OBJC_CLASS_$_NPKBalanceField
|| __DATA.__objc_data _OBJC_CLASS_$_NPKBarcodePaymentSession
|| __DATA.__objc_data _OBJC_CLASS_$_NPKBiometricPassPreflightManager
|| __DATA.__objc_data _OBJC_CLASS_$_NPKBluetoothConnectivityCoordinator
|| __DATA.__objc_data _OBJC_CLASS_$_NPKButtonListener
|| __DATA.__objc_data _OBJC_CLASS_$_NPKCatalogUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_NPKCommutePlanField
|| __DATA.__objc_data _OBJC_CLASS_$_NPKCompanionAgentConnection
|| __DATA.__objc_data _OBJC_CLASS_$_NPKCompanionAgentConnectionDeferredActionHandler
|| __DATA.__objc_data _OBJC_CLASS_$_NPKCompanionSecureRangingCoordinator
|| __DATA.__objc_data _OBJC_CLASS_$_NPKCompanionViewServiceConnection
|| __DATA.__objc_data _OBJC_CLASS_$_NPKCompanionViewServiceConnectionServer
|| __DATA.__objc_data _OBJC_CLASS_$_NPKCompanionViewServiceConnectionServerService
|| __DATA.__objc_data _OBJC_CLASS_$_NPKContactlessPaymentSessionAnalyticsManager
|| __DATA.__objc_data _OBJC_CLASS_$_NPKContactlessPaymentSessionManager
|| __DATA.__objc_data _OBJC_CLASS_$_NPKContactlessPaymentSessionManagerTransactionContext
|| __DATA.__objc_data _OBJC_CLASS_$_NPKContactlessPaymentSessionSoundsManager
|| __DATA.__objc_data _OBJC_CLASS_$_NPKContactlessPaymentSessionState
|| __DATA.__objc_data _OBJC_CLASS_$_NPKContinuityCoordinator
|| __DATA.__objc_data _OBJC_CLASS_$_NPKDateRange
|| __DATA.__objc_data _OBJC_CLASS_$_NPKDoubleClickClientSuppressor
|| __DATA.__objc_data _OBJC_CLASS_$_NPKDoublePressDelegationAssertion
|| __DATA.__objc_data _OBJC_CLASS_$_NPKExpressGymKitAvailabilityManager
|| __DATA.__objc_data _OBJC_CLASS_$_NPKExpressModeSettingsCoordinator
|| __DATA.__objc_data _OBJC_CLASS_$_NPKExpressPassController
|| __DATA.__objc_data _OBJC_CLASS_$_NPKExpressPassesManager
|| __DATA.__objc_data _OBJC_CLASS_$_NPKFakePaymentSession
|| __DATA.__objc_data _OBJC_CLASS_$_NPKFidoAuthCoordinator
|| __DATA.__objc_data _OBJC_CLASS_$_NPKGizmoDatabase
|| __DATA.__objc_data _OBJC_CLASS_$_NPKGizmoDatabaseManifestEntry
|| __DATA.__objc_data _OBJC_CLASS_$_NPKGreenTeaDataUsageResolver
|| __DATA.__objc_data _OBJC_CLASS_$_NPKIDSHeartbeat
|| __DATA.__objc_data _OBJC_CLASS_$_NPKIDVRemoteDeviceConnectionCoordinator
|| __DATA.__objc_data _OBJC_CLASS_$_NPKIDVRemoteDeviceConnectionCoordinatorOutstandingRequestItem
|| __DATA.__objc_data _OBJC_CLASS_$_NPKIDVRemoteDeviceCredentialPreflightStatus
|| __DATA.__objc_data _OBJC_CLASS_$_NPKIDVRemoteDeviceProtoCreateCredentialRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKIDVRemoteDeviceProtoCreateCredentialResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKIDVRemoteDeviceProtoCredentialPropertiesRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKIDVRemoteDeviceProtoCredentialPropertiesResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKIDVRemoteDeviceProtoDeleteCredentialRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKIDVRemoteDeviceProtoDeleteCredentialResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKIDVRemoteDeviceProtoDeleteGlobalAuthACLRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKIDVRemoteDeviceProtoDeleteGlobalAuthACLResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKIDVRemoteDeviceProtoEstablishPrearmTrustRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKIDVRemoteDeviceProtoEstablishPrearmTrustResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKIDVRemoteDeviceProtoGenerateKeyRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKIDVRemoteDeviceProtoGenerateKeyResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKIDVRemoteDeviceProtoHeartbeatRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKIDVRemoteDeviceProtoNonceForAuthorizationTokenRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKIDVRemoteDeviceProtoNonceForAuthorizationTokenResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKIDVRemoteDeviceProtoNotificationRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKIDVRemoteDeviceProtoNotificationResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKIDVRemoteDeviceProtoPartitionsCredentialIdentifiersRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKIDVRemoteDeviceProtoPartitionsCredentialIdentifiersResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKIDVRemoteDeviceProtoPrearmCredentialRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKIDVRemoteDeviceProtoPrearmCredentialResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKIDVRemoteDeviceProtoPrearmStatusUpdate
|| __DATA.__objc_data _OBJC_CLASS_$_NPKIDVRemoteDeviceProtoProvisionCredentialRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKIDVRemoteDeviceProtoProvisionCredentialResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKIDVRemoteDeviceServiceClient
|| __DATA.__objc_data _OBJC_CLASS_$_NPKIDVRemoteDeviceServiceContext
|| __DATA.__objc_data _OBJC_CLASS_$_NPKIDVRemoteDeviceServiceEventsCoordinator
|| __DATA.__objc_data _OBJC_CLASS_$_NPKIDVRemoteDeviceServiceServer
|| __DATA.__objc_data _OBJC_CLASS_$_NPKIDVRemoteDeviceSession
|| __DATA.__objc_data _OBJC_CLASS_$_NPKIDVRemoteDeviceSessionServer
|| __DATA.__objc_data _OBJC_CLASS_$_NPKIDVRemoteDeviceSessionService
|| __DATA.__objc_data _OBJC_CLASS_$_NPKIDVRemoteDevicesManager
|| __DATA.__objc_data _OBJC_CLASS_$_NPKIdentityExtendedReviewUserNotification
|| __DATA.__objc_data _OBJC_CLASS_$_NPKLibrary
|| __DATA.__objc_data _OBJC_CLASS_$_NPKMessageCompositionManager
|| __DATA.__objc_data _OBJC_CLASS_$_NPKMockPeerPaymentAccountManager
|| __DATA.__objc_data _OBJC_CLASS_$_NPKNanoPassDaemonConnection
|| __DATA.__objc_data _OBJC_CLASS_$_NPKOSTransaction
|| __DATA.__objc_data _OBJC_CLASS_$_NPKObserverManager
|| __DATA.__objc_data _OBJC_CLASS_$_NPKOneShotLocationFetcher
|| __DATA.__objc_data _OBJC_CLASS_$_NPKOutstandingAssertionStatusUpdater
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPMUButtonListener
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPassAssociatedInfo
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPassAssociatedInfoManager
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPassAssociatedInfoModel
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPassDescription
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPassSelectionFieldDetectorAssertion
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPassSelectionFieldDetectorCoordinator
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPassSelectionFieldDetectorListener
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPassSelectionFieldDetectorManager
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPassSyncChange
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPassSyncEngine
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPassSyncService
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPassSyncServiceSyncStatus
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPassSyncState
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPassSyncStateItem
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPassUserNotification
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPassUserNotificationFactory
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPassesManager
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPaymentBarcode
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPaymentOptionsSerialization
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPaymentPreflighter
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPaymentProvisioningFlowController
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPaymentProvisioningFlowControllerAppleBalanceAccountDetailsStepContext
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPaymentProvisioningFlowControllerChooseCredentialsStepContext
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPaymentProvisioningFlowControllerChooseFlowStepContext
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPaymentProvisioningFlowControllerChooseProductStepContext
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPaymentProvisioningFlowControllerDigitalIssuanceAmountStepContext
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPaymentProvisioningFlowControllerDigitalIssuancePaymentStepContext
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPaymentProvisioningFlowControllerGetIssuerApplicationAddRequestStepContext
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPaymentProvisioningFlowControllerIssuerVerificationChannelsStepContext
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPaymentProvisioningFlowControllerIssuerVerificationCodeStepContext
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPaymentProvisioningFlowControllerIssuerVerificationFieldsStepContext
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPaymentProvisioningFlowControllerLocalDeviceManualEntryProgressStepContext
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPaymentProvisioningFlowControllerLocalDeviceManualEntryStepContext
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPaymentProvisioningFlowControllerManualEntryStepContext
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPaymentProvisioningFlowControllerMoreInformationStepContext
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPaymentProvisioningFlowControllerPasscodeUpgradeStepContext
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPaymentProvisioningFlowControllerPreconditionsStepContext
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPaymentProvisioningFlowControllerProductDisambiguationStepContext
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPaymentProvisioningFlowControllerProvisioningProgressStepContext
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPaymentProvisioningFlowControllerProvisioningResultStepContext
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPaymentProvisioningFlowControllerReaderModeEntryStepContext
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPaymentProvisioningFlowControllerReaderModeIngestionStepContext
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPaymentProvisioningFlowControllerRequestContext
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPaymentProvisioningFlowControllerSecondaryManualEntryStepContext
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPaymentProvisioningFlowControllerTermsAndConditionsStepContext
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPaymentProvisioningFlowControllerWelcomeStepContext
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPaymentProvisioningFlowPickerItem
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPaymentProvisioningFlowPickerSection
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPaymentProvisioningFlowStepContext
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPaymentWebServiceCompanionTargetDevice
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPaymentWebServiceStandaloneTargetDevice
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPeerPaymentAccountManager
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPeerPaymentConversationManager
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPeerPaymentMessagesTransactionsManager
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPeerPaymentNumberFormatter
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPeerPaymentQuickTypeParser
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPeerPaymentTransactionDetails
|| __DATA.__objc_data _OBJC_CLASS_$_NPKPeerPaymentWebServiceCompanionTargetDevice
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoAcceptSubcredentialInvitationRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoAcceptSubcredentialInvitationResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoAcceptSubcredentialInvitationWithIdentifierRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoAccountAttestationAnonymizationSaltRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoAccountAttestationAnonymizationSaltResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoAccountWithIdentifierRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoAccountWithIdentifierResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoAddISO18013BlobsRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoAddISO18013BlobsResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoAddPassRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoAssertionRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoAutomaticProvisioningRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoAvailableHomeKeyPassesRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoAvailableHomeKeyPassesResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoAvailableProductsRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoAvailableProductsResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoBalanceReminderForBalanceAndPassRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoBalanceReminderForBalanceAndPassResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoBarcodeApplicationRedirectRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoBarcodeEventRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoBarcodeEventResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoBitmap
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoCanAcceptInvitationRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoCanAcceptInvitationResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoCanAddSecureElementPassWithConfigurationRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoCanAddSecureElementPassWithConfigurationResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoCatalog
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoCatalogChangedRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoCheckCompanionPeerPaymentRegistrationStateRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoCheckFidoKeyPresenceRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoCheckFidoKeyPresenceResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoCheckPasscodePolicyComplianceRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoCheckPasscodePolicyComplianceResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoCheckTLKsMissingRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoCheckTLKsMissingResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoCloudStoreStatusRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoCloudStoreStatusResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoCommutePlanReminderForCommutePlanAndPassRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoCommutePlanReminderForCommutePlanAndPassResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoCompanionMigratedRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoCompanionMigratedResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoConfigurationDataRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoConfigurationDataResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoConflictingExpressPassIdentifiersForPassInformationRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoConflictingExpressPassIdentifiersForPassInformationResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoCreateFidoKeyRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoCreateFidoKeyResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoDeclineRelatedInvitationsIfNecessaryRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoDeclineRelatedInvitationsIfNecessaryResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoDeleteKeyMaterialForSubCredentialIdRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoDeviceDidRegisterRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoDeviceDidRegisterResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoDeviceMetadataWithFieldsReponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoDeviceMetadataWithFieldsRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoDeviceUnlockedForPendingProvisioningRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoDownloadAllPaymentPassesRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoDumpLogsRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoDumpLogsResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoEnableServiceModeRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoEnableServiceModeResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoFeatureApplicationsForAccountIdentifierRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoFeatureApplicationsForAccountIdentifierResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoFidoExternalizedAuthRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoFidoExternalizedAuthResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoGenerateSEEncryptionCertificateForSubCredentialIdRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoGenerateSEEncryptionCertificateForSubCredentialIdResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoGenerateTransactionKeyWithParametersRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoGenerateTransactionKeyWithParametersResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoGizmoInitiatedAddPassRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoGizmoInitiatedDeletePassRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoHandleAppletStateChangeRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoHandleBalanceChangeRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoHandleCompanionPeerPaymentRegistrationRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoHandleCompanioniCloudSignoutRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoHandleCredentialsChangeRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoHandlePaymentTransactionsRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoHandleRemoveTransactionsRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoHandleValueAddedServiceTransactionsRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoHash
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoInitializeCloudStoreIfNecessaryRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoInitializeCloudStoreIfNecessaryResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoInitializeCloudStoreIfNecessaryWithHandlerRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoInitializeCloudStoreIfNecessaryWithHandlerResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoListSubcredentialInvitationsRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoListSubcredentialInvitationsResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoMarkAllAppletsForDeletionRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoMarkAllAppletsForDeletionResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoMarkPaymentPassForDeleteRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoMarkPaymentPassForDeleteResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoMatchingInvitationOnDeviceRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoMatchingInvitationOnDeviceResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoNewLibraryHashReceivedRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoNewLibraryHashRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoOpenURLRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoOwnershipTokenRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoOwnershipTokenResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoPass
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoPassAssociatedDataRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoPassSettingsChangedRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoPassSyncProposedReconciledState
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoPassSyncReconciledStateAccepted
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoPassSyncReconciledStateUnrecognized
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoPassSyncState
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoPassSyncStateChange
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoPassSyncStateChangeProcessed
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoPassSyncStateItem
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoPassSyncStateManifestEntry
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoPasscodeUpgradeFlowApplyPasscodeRestrictionsRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoPasscodeUpgradeFlowApplyPasscodeRestrictionsResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoPasscodeUpgradeFlowPresentationRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoPasscodeUpgradeFlowShouldExitRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoPauseRangingForPairedReaderIdentifierRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoPaymentPreconditionsNotMetRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoPaymentWebServiceRegistrationRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoPaymentWebServiceRegistrationResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoPeerPaymentRegistrationRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoPeerPaymentRegistrationResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoPeerPaymentUnregistrationRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoPeerPaymentUnregistrationResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoPeerPaymentWebServiceContextDidChangeRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoPerformDeviceCheckInRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoPerformDeviceCheckInResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoPerformProductActionRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoPerformProductActionResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoPhotosForFamilyMembersWithDSIDsRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoPhotosForFamilyMembersWithDSIDsResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoPresentStandaloneTransactionRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoPresentStandaloneTransactionResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoProvisionHomeKeyPassForSerialNumbersRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoProvisionHomeKeyPassForSerialNumbersResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoProvisionPassForRemoteCredentialWithTypeAndIdentifierRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoProvisionPassForRemoteCredentialWithTypeAndIdentifierResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoProvisionPeerPaymentPassRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoProvisionPeerPaymentPassResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoProvisioningDataRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoProvisioningDataResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoQueueTSMConnectionRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoQueueTSMConnectionResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoRegisterSubcredentialsRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoRegisterSubcredentialsResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoRegistrationDataRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoRegistrationDataResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoRelevantPassTuple
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoRelevantPassesNeededRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoRelevantPassesPendingRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoRelevantPassesRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoRemoteAdminAvailabilityChangeRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoRemoteAdminAvailabilityRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoRemoteAdminAvailabilityResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoRemoteAdminPerformRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoRemoteAdminPerformResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoRemoteDevicePasscodeStateRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoRemoteDevicePasscodeStateResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoRemotePassActionEnterValueRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoRemotePassActionEnterValueResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoRemotePassActionEnvelope
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoRemotePassActionSelectItemRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoRemotePassActionSelectItemResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoRemotePassUpdateRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoRemotePassUpdateResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoRemoveExpressPassWithUniqueIdentifierRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoRemoveExpressPassWithUniqueIdentifierResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoRemoveExpressPassesWithCardTypeRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoRemoveExpressPassesWithCardTypeResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoRemovePassRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoRemoveSharingInvitationRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoRemoveSharingInvitationResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoRequestPeerAccountTermsAndConditionsAcceptance
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoRequestSubcredentialInvitationRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoRequestSubcredentialInvitationResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoResetApplePayManateeViewRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoResetApplePayManateeViewResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoResumeRangingForPairedReaderIdentifierRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoResyncNeededRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoRetrievePaymentTransactionsRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoRetrievePaymentTransactionsResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoRevokeSubcredentialsRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoRevokeSubcredentialsResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoSecureElementGetAppletsRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoSecureElementGetAppletsResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoSecureElementGetPairingInfoRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoSecureElementGetPairingInfoResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoSecureElementRemoveAppletsRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoSecureElementRemoveAppletsResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoSecureElementSetNewAuthRandomRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoSecureElementSetNewAuthRandomResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoServiceProviderDataForPassWithUniqueIdentifierRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoServiceProviderDataForPassWithUniqueIdentifierResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoSetAccountAttestationAnonymizationSaltRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoSetAccountAttestationAnonymizationSaltResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoSetBalanceReminderForBalanceAndPassRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoSetBalanceReminderForBalanceAndPassResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoSetCommutePlanReminderForCommutePlanAndPassRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoSetCommutePlanReminderForCommutePlanAndPassResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoSetExpressPassRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoSetExpressPassResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoSetPeerPaymentPreferencesRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoSetPeerPaymentPreferencesResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoSetPreferredPaymentApplicationRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoSetPreferredPaymentApplicationResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoSetTransactionDefaultsRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoShowPaymentSetupRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoSignDataRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoSignDataResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoSignWithFidoKeyRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoSignWithFidoKeyResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandaloneCreditAccountCredential
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandaloneError
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandaloneHelper
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandaloneImageSize
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandaloneInitializationRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandaloneInitializationResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePass
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentApplication
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentCredential
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentCredentialUnion
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentDigitalIssuanceMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentHeroImage
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentPass
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentPassListRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentPassListResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentProvisioningFlowAcceptTermsRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentProvisioningFlowAcknowledgeMoreInformationRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentProvisioningFlowAcknowledgeWelcomeRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsStepContext
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentProvisioningFlowChooseFlowRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentProvisioningFlowChooseFlowStepContext
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentProvisioningFlowChooseManualEntryRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentProvisioningFlowChooseProductRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentProvisioningFlowChooseProductStepContext
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentProvisioningFlowChooseReaderModeRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentProvisioningFlowDidEncounterErrorResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentProvisioningFlowDigitalIssuanceAmountStepContext
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentProvisioningFlowDigitalIssuancePaymentStepContext
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentProvisioningFlowHandleDigitalIssuanceAmountRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationChannelRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationCodeRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationFieldsRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentProvisioningFlowHandleManualEntryFieldsRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentProvisioningFlowHandleReaderModeFieldsRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationChannelsStepContext
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationCodeStepContext
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationFieldsStepContext
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentProvisioningFlowLocalDeviceManualEntryProgressStepContext
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentProvisioningFlowLocalDeviceManualEntryStepContext
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentProvisioningFlowManualEntryStepContext
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentProvisioningFlowMoreInformationStepContext
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentProvisioningFlowPasscodeUpgradeStepContext
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentProvisioningFlowPickerItem
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentProvisioningFlowPickerSection
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentProvisioningFlowProductDisambiguationStepContext
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentProvisioningFlowProvisioningProgressStepContext
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentProvisioningFlowProvisioningResultStepContext
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentProvisioningFlowReaderModeEntryStepContext
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentProvisioningFlowReaderModeIngestionStepContext
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentProvisioningFlowResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentProvisioningFlowSecondaryManualEntryStepContext
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentProvisioningFlowSessionCheckInRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentProvisioningFlowSessionEndedResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentProvisioningFlowSkipProvisioningRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentProvisioningFlowStartIssuerVerificationFlowForPaymentPassRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentProvisioningFlowStartProvisioningFlowRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentProvisioningFlowStepContext
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentProvisioningFlowTermsAndConditionsStepContext
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentProvisioningFlowWelcomeStepContext
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentProvisioningMethodMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentProvisioningMethodMetadataDictionaryEntry
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentRemoteCredential
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentSetupField
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentSetupMoreInfoItem
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentSetupProduct
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentSetupProductImageAssetURLs
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePaymentSetupProductPaymentOption
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePingRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandalonePingResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandaloneRequestHeader
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandaloneResponseHeader
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandaloneUserInfo
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoStandaloneVerificationChannel
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoTransactionDefaultsNeededRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoTriggerCloudStoreZoneCreationForAccountRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoTriggerCloudStoreZoneCreationForAccountResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoUpdateAccountWithIdentifierRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoUpdateAccountWithIdentifierResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoUpdatePassRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoUpdatePaymentPassRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoUpdatePeerPaymentAccountRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoUpdatePeerPaymentAccountResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoUpdatePushTokenRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoUpdateSubcredentialMetadataRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoUpdateSubcredentialMetadataResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoUpdatedAccountsForProvisioningRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoUpdatedAccountsForProvisioningResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoWebServiceContextDidChangeRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProtoWebServiceContextNeededRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKProvisioningServiceOutstandingRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKQuickPaymentSession
|| __DATA.__objc_data _OBJC_CLASS_$_NPKQuickPaymentSessionCleanupDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_NPKQuickPaymentSessionLocalAuthenticationCoordinator
|| __DATA.__objc_data _OBJC_CLASS_$_NPKQuickPaymentSessionSource
|| __DATA.__objc_data _OBJC_CLASS_$_NPKRemoteButtonListener
|| __DATA.__objc_data _OBJC_CLASS_$_NPKRemoteInterfacePresenter
|| __DATA.__objc_data _OBJC_CLASS_$_NPKRemotePassAction
|| __DATA.__objc_data _OBJC_CLASS_$_NPKRemotePassActionEnterValueRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKRemotePassActionEnterValueResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKRemotePassActionRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKRemotePassActionResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKRemotePassActionSelectItemRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKRemotePassActionSelectItemResponse
|| __DATA.__objc_data _OBJC_CLASS_$_NPKRemotePassActionUIService
|| __DATA.__objc_data _OBJC_CLASS_$_NPKRemotePassActionUIServicePresenterInterface
|| __DATA.__objc_data _OBJC_CLASS_$_NPKRemotePassSelectionFieldDetectorListener
|| __DATA.__objc_data _OBJC_CLASS_$_NPKSecureElement
|| __DATA.__objc_data _OBJC_CLASS_$_NPKSettingsPreservingFileDataAccessor
|| __DATA.__objc_data _OBJC_CLASS_$_NPKSharedPeerPaymentWebServiceArchiver
|| __DATA.__objc_data _OBJC_CLASS_$_NPKSharedWebServiceProvider
|| __DATA.__objc_data _OBJC_CLASS_$_NPKSimulatedPaymentProvisioningFlowController
|| __DATA.__objc_data _OBJC_CLASS_$_NPKStandaloneFirstUnlockCoordinator
|| __DATA.__objc_data _OBJC_CLASS_$_NPKStandaloneProvisioningNumericEntryCoordinator
|| __DATA.__objc_data _OBJC_CLASS_$_NPKSubcredentialInvitationCoordinator
|| __DATA.__objc_data _OBJC_CLASS_$_NPKSubcredentialProvisioningService
|| __DATA.__objc_data _OBJC_CLASS_$_NPKTapToRadarManager
|| __DATA.__objc_data _OBJC_CLASS_$_NPKTapToRadarRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NPKTargetDeviceAssertionManager
|| __DATA.__objc_data _OBJC_CLASS_$_NPKTestAddPaymentPassRequestContext
|| __DATA.__objc_data _OBJC_CLASS_$_NPKThreadSafeObserverManager
|| __DATA.__objc_data _OBJC_CLASS_$_NPKTransientAssertion
|| __DATA.__objc_data _OBJC_CLASS_$_NPKTransientPassAssertion
|| __DATA.__objc_data _OBJC_CLASS_$_NPKTransitAppletHistoryFetcher
|| __DATA.__objc_data _OBJC_CLASS_$_NPKUserNotification
|| __DATA.__objc_data _OBJC_CLASS_$_NPKUserNotificationCenter
|| __DATA.__objc_data _OBJC_CLASS_$_NPKUserNotificationExpressModeEnabled
|| __DATA.__objc_data _OBJC_CLASS_$_NPKValueAddedServiceAutomaticSelectionCoordinator
|| __DATA.__objc_data _OBJC_CLASS_$_NPKVehicleConnectivityCoordinator
|| __DATA.__objc_data _OBJC_CLASS_$_NPKWatchSecureRangingCoordinator
|| __DATA.__objc_data _OBJC_CLASS_$_NPKWatchSubcredentialProvisioningService
|| __DATA.__objc_data _OBJC_CLASS_$_NPKWifiObserver
|| __DATA.__objc_data _OBJC_CLASS_$_NPKWorkQueue
|| __DATA.__objc_data _OBJC_CLASS_$_NPKWorkQueueItem
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKAddPaymentPassController
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKApplicationRecordManager
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKAssertion
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKAssertionManager
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKAudioPlayer
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKBalanceField
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKBarcodePaymentSession
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKBiometricPassPreflightManager
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKBluetoothConnectivityCoordinator
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKButtonListener
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKCatalogUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKCommutePlanField
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKCompanionAgentConnection
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKCompanionAgentConnectionDeferredActionHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKCompanionSecureRangingCoordinator
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKCompanionViewServiceConnection
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKCompanionViewServiceConnectionServer
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKCompanionViewServiceConnectionServerService
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKContactlessPaymentSessionAnalyticsManager
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKContactlessPaymentSessionManager
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKContactlessPaymentSessionManagerTransactionContext
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKContactlessPaymentSessionSoundsManager
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKContactlessPaymentSessionState
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKContinuityCoordinator
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKDateRange
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKDoubleClickClientSuppressor
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKDoublePressDelegationAssertion
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKExpressGymKitAvailabilityManager
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKExpressModeSettingsCoordinator
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKExpressPassController
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKExpressPassesManager
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKFakePaymentSession
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKFidoAuthCoordinator
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKGizmoDatabase
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKGizmoDatabaseManifestEntry
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKGreenTeaDataUsageResolver
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKIDSHeartbeat
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKIDVRemoteDeviceConnectionCoordinator
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKIDVRemoteDeviceConnectionCoordinatorOutstandingRequestItem
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKIDVRemoteDeviceCredentialPreflightStatus
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKIDVRemoteDeviceProtoCreateCredentialRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKIDVRemoteDeviceProtoCreateCredentialResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKIDVRemoteDeviceProtoCredentialPropertiesRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKIDVRemoteDeviceProtoCredentialPropertiesResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKIDVRemoteDeviceProtoDeleteCredentialRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKIDVRemoteDeviceProtoDeleteCredentialResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKIDVRemoteDeviceProtoDeleteGlobalAuthACLRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKIDVRemoteDeviceProtoDeleteGlobalAuthACLResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKIDVRemoteDeviceProtoEstablishPrearmTrustRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKIDVRemoteDeviceProtoEstablishPrearmTrustResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKIDVRemoteDeviceProtoGenerateKeyRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKIDVRemoteDeviceProtoGenerateKeyResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKIDVRemoteDeviceProtoHeartbeatRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKIDVRemoteDeviceProtoNonceForAuthorizationTokenRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKIDVRemoteDeviceProtoNonceForAuthorizationTokenResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKIDVRemoteDeviceProtoNotificationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKIDVRemoteDeviceProtoNotificationResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKIDVRemoteDeviceProtoPartitionsCredentialIdentifiersRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKIDVRemoteDeviceProtoPartitionsCredentialIdentifiersResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKIDVRemoteDeviceProtoPrearmCredentialRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKIDVRemoteDeviceProtoPrearmCredentialResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKIDVRemoteDeviceProtoPrearmStatusUpdate
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKIDVRemoteDeviceProtoProvisionCredentialRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKIDVRemoteDeviceProtoProvisionCredentialResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKIDVRemoteDeviceServiceClient
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKIDVRemoteDeviceServiceContext
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKIDVRemoteDeviceServiceEventsCoordinator
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKIDVRemoteDeviceServiceServer
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKIDVRemoteDeviceSession
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKIDVRemoteDeviceSessionServer
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKIDVRemoteDeviceSessionService
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKIDVRemoteDevicesManager
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKIdentityExtendedReviewUserNotification
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKLibrary
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKMessageCompositionManager
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKMockPeerPaymentAccountManager
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKNanoPassDaemonConnection
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKOSTransaction
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKObserverManager
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKOneShotLocationFetcher
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKOutstandingAssertionStatusUpdater
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPMUButtonListener
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPassAssociatedInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPassAssociatedInfoManager
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPassAssociatedInfoModel
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPassDescription
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPassSelectionFieldDetectorAssertion
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPassSelectionFieldDetectorCoordinator
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPassSelectionFieldDetectorListener
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPassSelectionFieldDetectorManager
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPassSyncChange
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPassSyncEngine
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPassSyncService
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPassSyncServiceSyncStatus
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPassSyncState
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPassSyncStateItem
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPassUserNotification
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPassUserNotificationFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPassesManager
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPaymentBarcode
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPaymentOptionsSerialization
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPaymentPreflighter
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPaymentProvisioningFlowController
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPaymentProvisioningFlowControllerAppleBalanceAccountDetailsStepContext
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPaymentProvisioningFlowControllerChooseCredentialsStepContext
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPaymentProvisioningFlowControllerChooseFlowStepContext
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPaymentProvisioningFlowControllerChooseProductStepContext
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPaymentProvisioningFlowControllerDigitalIssuanceAmountStepContext
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPaymentProvisioningFlowControllerDigitalIssuancePaymentStepContext
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPaymentProvisioningFlowControllerGetIssuerApplicationAddRequestStepContext
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPaymentProvisioningFlowControllerIssuerVerificationChannelsStepContext
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPaymentProvisioningFlowControllerIssuerVerificationCodeStepContext
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPaymentProvisioningFlowControllerIssuerVerificationFieldsStepContext
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPaymentProvisioningFlowControllerLocalDeviceManualEntryProgressStepContext
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPaymentProvisioningFlowControllerLocalDeviceManualEntryStepContext
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPaymentProvisioningFlowControllerManualEntryStepContext
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPaymentProvisioningFlowControllerMoreInformationStepContext
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPaymentProvisioningFlowControllerPasscodeUpgradeStepContext
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPaymentProvisioningFlowControllerPreconditionsStepContext
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPaymentProvisioningFlowControllerProductDisambiguationStepContext
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPaymentProvisioningFlowControllerProvisioningProgressStepContext
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPaymentProvisioningFlowControllerProvisioningResultStepContext
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPaymentProvisioningFlowControllerReaderModeEntryStepContext
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPaymentProvisioningFlowControllerReaderModeIngestionStepContext
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPaymentProvisioningFlowControllerRequestContext
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPaymentProvisioningFlowControllerSecondaryManualEntryStepContext
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPaymentProvisioningFlowControllerTermsAndConditionsStepContext
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPaymentProvisioningFlowControllerWelcomeStepContext
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPaymentProvisioningFlowPickerItem
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPaymentProvisioningFlowPickerSection
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPaymentProvisioningFlowStepContext
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPaymentWebServiceCompanionTargetDevice
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPaymentWebServiceStandaloneTargetDevice
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPeerPaymentAccountManager
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPeerPaymentConversationManager
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPeerPaymentMessagesTransactionsManager
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPeerPaymentNumberFormatter
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPeerPaymentQuickTypeParser
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPeerPaymentTransactionDetails
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKPeerPaymentWebServiceCompanionTargetDevice
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoAcceptSubcredentialInvitationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoAcceptSubcredentialInvitationResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoAcceptSubcredentialInvitationWithIdentifierRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoAccountAttestationAnonymizationSaltRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoAccountAttestationAnonymizationSaltResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoAccountWithIdentifierRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoAccountWithIdentifierResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoAddISO18013BlobsRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoAddISO18013BlobsResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoAddPassRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoAssertionRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoAutomaticProvisioningRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoAvailableHomeKeyPassesRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoAvailableHomeKeyPassesResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoAvailableProductsRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoAvailableProductsResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoBalanceReminderForBalanceAndPassRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoBalanceReminderForBalanceAndPassResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoBarcodeApplicationRedirectRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoBarcodeEventRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoBarcodeEventResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoBitmap
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoCanAcceptInvitationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoCanAcceptInvitationResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoCanAddSecureElementPassWithConfigurationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoCanAddSecureElementPassWithConfigurationResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoCatalog
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoCatalogChangedRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoCheckCompanionPeerPaymentRegistrationStateRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoCheckFidoKeyPresenceRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoCheckFidoKeyPresenceResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoCheckPasscodePolicyComplianceRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoCheckPasscodePolicyComplianceResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoCheckTLKsMissingRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoCheckTLKsMissingResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoCloudStoreStatusRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoCloudStoreStatusResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoCommutePlanReminderForCommutePlanAndPassRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoCommutePlanReminderForCommutePlanAndPassResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoCompanionMigratedRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoCompanionMigratedResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoConfigurationDataRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoConfigurationDataResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoConflictingExpressPassIdentifiersForPassInformationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoConflictingExpressPassIdentifiersForPassInformationResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoCreateFidoKeyRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoCreateFidoKeyResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoDeclineRelatedInvitationsIfNecessaryRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoDeclineRelatedInvitationsIfNecessaryResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoDeleteKeyMaterialForSubCredentialIdRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoDeviceDidRegisterRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoDeviceDidRegisterResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoDeviceMetadataWithFieldsReponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoDeviceMetadataWithFieldsRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoDeviceUnlockedForPendingProvisioningRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoDownloadAllPaymentPassesRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoDumpLogsRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoDumpLogsResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoEnableServiceModeRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoEnableServiceModeResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoFeatureApplicationsForAccountIdentifierRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoFeatureApplicationsForAccountIdentifierResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoFidoExternalizedAuthRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoFidoExternalizedAuthResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoGenerateSEEncryptionCertificateForSubCredentialIdRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoGenerateSEEncryptionCertificateForSubCredentialIdResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoGenerateTransactionKeyWithParametersRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoGenerateTransactionKeyWithParametersResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoGizmoInitiatedAddPassRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoGizmoInitiatedDeletePassRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoHandleAppletStateChangeRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoHandleBalanceChangeRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoHandleCompanionPeerPaymentRegistrationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoHandleCompanioniCloudSignoutRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoHandleCredentialsChangeRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoHandlePaymentTransactionsRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoHandleRemoveTransactionsRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoHandleValueAddedServiceTransactionsRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoHash
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoInitializeCloudStoreIfNecessaryRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoInitializeCloudStoreIfNecessaryResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoInitializeCloudStoreIfNecessaryWithHandlerRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoInitializeCloudStoreIfNecessaryWithHandlerResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoListSubcredentialInvitationsRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoListSubcredentialInvitationsResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoMarkAllAppletsForDeletionRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoMarkAllAppletsForDeletionResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoMarkPaymentPassForDeleteRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoMarkPaymentPassForDeleteResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoMatchingInvitationOnDeviceRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoMatchingInvitationOnDeviceResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoNewLibraryHashReceivedRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoNewLibraryHashRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoOpenURLRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoOwnershipTokenRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoOwnershipTokenResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoPass
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoPassAssociatedDataRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoPassSettingsChangedRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoPassSyncProposedReconciledState
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoPassSyncReconciledStateAccepted
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoPassSyncReconciledStateUnrecognized
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoPassSyncState
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoPassSyncStateChange
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoPassSyncStateChangeProcessed
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoPassSyncStateItem
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoPassSyncStateManifestEntry
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoPasscodeUpgradeFlowApplyPasscodeRestrictionsRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoPasscodeUpgradeFlowApplyPasscodeRestrictionsResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoPasscodeUpgradeFlowPresentationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoPasscodeUpgradeFlowShouldExitRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoPauseRangingForPairedReaderIdentifierRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoPaymentPreconditionsNotMetRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoPaymentWebServiceRegistrationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoPaymentWebServiceRegistrationResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoPeerPaymentRegistrationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoPeerPaymentRegistrationResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoPeerPaymentUnregistrationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoPeerPaymentUnregistrationResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoPeerPaymentWebServiceContextDidChangeRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoPerformDeviceCheckInRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoPerformDeviceCheckInResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoPerformProductActionRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoPerformProductActionResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoPhotosForFamilyMembersWithDSIDsRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoPhotosForFamilyMembersWithDSIDsResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoPresentStandaloneTransactionRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoPresentStandaloneTransactionResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoProvisionHomeKeyPassForSerialNumbersRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoProvisionHomeKeyPassForSerialNumbersResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoProvisionPassForRemoteCredentialWithTypeAndIdentifierRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoProvisionPassForRemoteCredentialWithTypeAndIdentifierResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoProvisionPeerPaymentPassRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoProvisionPeerPaymentPassResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoProvisioningDataRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoProvisioningDataResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoQueueTSMConnectionRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoQueueTSMConnectionResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoRegisterSubcredentialsRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoRegisterSubcredentialsResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoRegistrationDataRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoRegistrationDataResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoRelevantPassTuple
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoRelevantPassesNeededRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoRelevantPassesPendingRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoRelevantPassesRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoRemoteAdminAvailabilityChangeRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoRemoteAdminAvailabilityRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoRemoteAdminAvailabilityResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoRemoteAdminPerformRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoRemoteAdminPerformResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoRemoteDevicePasscodeStateRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoRemoteDevicePasscodeStateResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoRemotePassActionEnterValueRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoRemotePassActionEnterValueResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoRemotePassActionEnvelope
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoRemotePassActionSelectItemRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoRemotePassActionSelectItemResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoRemotePassUpdateRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoRemotePassUpdateResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoRemoveExpressPassWithUniqueIdentifierRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoRemoveExpressPassWithUniqueIdentifierResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoRemoveExpressPassesWithCardTypeRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoRemoveExpressPassesWithCardTypeResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoRemovePassRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoRemoveSharingInvitationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoRemoveSharingInvitationResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoRequestPeerAccountTermsAndConditionsAcceptance
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoRequestSubcredentialInvitationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoRequestSubcredentialInvitationResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoResetApplePayManateeViewRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoResetApplePayManateeViewResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoResumeRangingForPairedReaderIdentifierRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoResyncNeededRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoRetrievePaymentTransactionsRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoRetrievePaymentTransactionsResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoRevokeSubcredentialsRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoRevokeSubcredentialsResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoSecureElementGetAppletsRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoSecureElementGetAppletsResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoSecureElementGetPairingInfoRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoSecureElementGetPairingInfoResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoSecureElementRemoveAppletsRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoSecureElementRemoveAppletsResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoSecureElementSetNewAuthRandomRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoSecureElementSetNewAuthRandomResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoServiceProviderDataForPassWithUniqueIdentifierRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoServiceProviderDataForPassWithUniqueIdentifierResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoSetAccountAttestationAnonymizationSaltRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoSetAccountAttestationAnonymizationSaltResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoSetBalanceReminderForBalanceAndPassRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoSetBalanceReminderForBalanceAndPassResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoSetCommutePlanReminderForCommutePlanAndPassRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoSetCommutePlanReminderForCommutePlanAndPassResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoSetExpressPassRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoSetExpressPassResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoSetPeerPaymentPreferencesRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoSetPeerPaymentPreferencesResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoSetPreferredPaymentApplicationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoSetPreferredPaymentApplicationResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoSetTransactionDefaultsRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoShowPaymentSetupRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoSignDataRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoSignDataResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoSignWithFidoKeyRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoSignWithFidoKeyResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandaloneCreditAccountCredential
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandaloneError
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandaloneHelper
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandaloneImageSize
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandaloneInitializationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandaloneInitializationResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePass
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentApplication
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentCredential
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentCredentialUnion
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentDigitalIssuanceMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentHeroImage
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentPass
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentPassListRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentPassListResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentProvisioningFlowAcceptTermsRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentProvisioningFlowAcknowledgeMoreInformationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentProvisioningFlowAcknowledgeWelcomeRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsStepContext
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentProvisioningFlowChooseFlowRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentProvisioningFlowChooseFlowStepContext
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentProvisioningFlowChooseManualEntryRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentProvisioningFlowChooseProductRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentProvisioningFlowChooseProductStepContext
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentProvisioningFlowChooseReaderModeRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentProvisioningFlowDidEncounterErrorResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentProvisioningFlowDigitalIssuanceAmountStepContext
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentProvisioningFlowDigitalIssuancePaymentStepContext
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentProvisioningFlowHandleDigitalIssuanceAmountRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationChannelRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationCodeRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationFieldsRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentProvisioningFlowHandleManualEntryFieldsRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentProvisioningFlowHandleReaderModeFieldsRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationChannelsStepContext
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationCodeStepContext
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationFieldsStepContext
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentProvisioningFlowLocalDeviceManualEntryProgressStepContext
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentProvisioningFlowLocalDeviceManualEntryStepContext
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentProvisioningFlowManualEntryStepContext
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentProvisioningFlowMoreInformationStepContext
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentProvisioningFlowPasscodeUpgradeStepContext
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentProvisioningFlowPickerItem
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentProvisioningFlowPickerSection
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentProvisioningFlowProductDisambiguationStepContext
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentProvisioningFlowProvisioningProgressStepContext
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentProvisioningFlowProvisioningResultStepContext
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentProvisioningFlowReaderModeEntryStepContext
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentProvisioningFlowReaderModeIngestionStepContext
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentProvisioningFlowResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentProvisioningFlowSecondaryManualEntryStepContext
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentProvisioningFlowSessionCheckInRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentProvisioningFlowSessionEndedResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentProvisioningFlowSkipProvisioningRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentProvisioningFlowStartIssuerVerificationFlowForPaymentPassRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentProvisioningFlowStartProvisioningFlowRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentProvisioningFlowStepContext
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentProvisioningFlowTermsAndConditionsStepContext
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentProvisioningFlowWelcomeStepContext
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentProvisioningMethodMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentProvisioningMethodMetadataDictionaryEntry
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentRemoteCredential
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentSetupField
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentSetupMoreInfoItem
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentSetupProduct
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentSetupProductImageAssetURLs
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePaymentSetupProductPaymentOption
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePingRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandalonePingResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandaloneRequestHeader
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandaloneResponseHeader
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandaloneUserInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoStandaloneVerificationChannel
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoTransactionDefaultsNeededRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoTriggerCloudStoreZoneCreationForAccountRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoTriggerCloudStoreZoneCreationForAccountResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoUpdateAccountWithIdentifierRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoUpdateAccountWithIdentifierResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoUpdatePassRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoUpdatePaymentPassRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoUpdatePeerPaymentAccountRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoUpdatePeerPaymentAccountResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoUpdatePushTokenRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoUpdateSubcredentialMetadataRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoUpdateSubcredentialMetadataResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoUpdatedAccountsForProvisioningRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoUpdatedAccountsForProvisioningResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoWebServiceContextDidChangeRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProtoWebServiceContextNeededRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKProvisioningServiceOutstandingRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKQuickPaymentSession
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKQuickPaymentSessionCleanupDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKQuickPaymentSessionLocalAuthenticationCoordinator
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKQuickPaymentSessionSource
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKRemoteButtonListener
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKRemoteInterfacePresenter
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKRemotePassAction
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKRemotePassActionEnterValueRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKRemotePassActionEnterValueResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKRemotePassActionRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKRemotePassActionResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKRemotePassActionSelectItemRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKRemotePassActionSelectItemResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKRemotePassActionUIService
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKRemotePassActionUIServicePresenterInterface
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKRemotePassSelectionFieldDetectorListener
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKSecureElement
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKSettingsPreservingFileDataAccessor
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKSharedPeerPaymentWebServiceArchiver
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKSharedWebServiceProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKSimulatedPaymentProvisioningFlowController
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKStandaloneFirstUnlockCoordinator
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKStandaloneProvisioningNumericEntryCoordinator
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKSubcredentialInvitationCoordinator
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKSubcredentialProvisioningService
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKTapToRadarManager
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKTapToRadarRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKTargetDeviceAssertionManager
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKTestAddPaymentPassRequestContext
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKThreadSafeObserverManager
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKTransientAssertion
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKTransientPassAssertion
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKTransitAppletHistoryFetcher
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKUserNotification
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKUserNotificationCenter
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKUserNotificationExpressModeEnabled
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKValueAddedServiceAutomaticSelectionCoordinator
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKVehicleConnectivityCoordinator
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKWatchSecureRangingCoordinator
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKWatchSubcredentialProvisioningService
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKWifiObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKWorkQueue
|| __DATA.__objc_data _OBJC_METACLASS_$_NPKWorkQueueItem
|| __DATA.__objc_ivar _OBJC_IVAR_$_NPKIDVRemoteDeviceConnectionCoordinatorOutstandingRequestItem._timeoutQueue
|| __DATA.__objc_ivar _OBJC_IVAR_$_NPKIDVRemoteDeviceConnectionCoordinatorOutstandingRequestItem._timeoutTimer
|| __DATA_CONST.__const _NPDBulletinProviderMachServiceName
|| __DATA_CONST.__const _NPDCompanionAgentStartedDarwinNotificationName
|| __DATA_CONST.__const _NPDWillSetExpressTransitCardNotificationName
|| __DATA_CONST.__const _NPKActiveDeviceChangedNotification
|| __DATA_CONST.__const _NPKAddPaymentPassMachServiceName
|| __DATA_CONST.__const _NPKAnalyticsReportCardAddedKey
|| __DATA_CONST.__const _NPKAnalyticsReportChannelTypeKey
|| __DATA_CONST.__const _NPKAnalyticsReportChannelTypesKey
|| __DATA_CONST.__const _NPKAnalyticsReportClientInputTypeAcceptTerms
|| __DATA_CONST.__const _NPKAnalyticsReportClientInputTypeAcknowledgeAppleBalanceDetails
|| __DATA_CONST.__const _NPKAnalyticsReportClientInputTypeAcknowledgeMoreInformation
|| __DATA_CONST.__const _NPKAnalyticsReportClientInputTypeAcknowledgeWelcome
|| __DATA_CONST.__const _NPKAnalyticsReportClientInputTypeChooseCredentials
|| __DATA_CONST.__const _NPKAnalyticsReportClientInputTypeChooseFlow
|| __DATA_CONST.__const _NPKAnalyticsReportClientInputTypeChooseIssuerVerificationChannel
|| __DATA_CONST.__const _NPKAnalyticsReportClientInputTypeChooseManualEntry
|| __DATA_CONST.__const _NPKAnalyticsReportClientInputTypeChooseProduct
|| __DATA_CONST.__const _NPKAnalyticsReportClientInputTypeChooseReaderMode
|| __DATA_CONST.__const _NPKAnalyticsReportClientInputTypeDigitalIssuanceAmount
|| __DATA_CONST.__const _NPKAnalyticsReportClientInputTypeIssuerApplicationAddRequest
|| __DATA_CONST.__const _NPKAnalyticsReportClientInputTypeIssuerVerificationCode
|| __DATA_CONST.__const _NPKAnalyticsReportClientInputTypeIssuerVerificationFields
|| __DATA_CONST.__const _NPKAnalyticsReportClientInputTypeKey
|| __DATA_CONST.__const _NPKAnalyticsReportClientInputTypeManualEntryFields
|| __DATA_CONST.__const _NPKAnalyticsReportClientInputTypePasscodeUpgradeComplete
|| __DATA_CONST.__const _NPKAnalyticsReportClientInputTypeProductSelection
|| __DATA_CONST.__const _NPKAnalyticsReportClientInputTypeReaderModeFields
|| __DATA_CONST.__const _NPKAnalyticsReportClientInputTypeReset
|| __DATA_CONST.__const _NPKAnalyticsReportClientInputTypeSkipIssuerVerification
|| __DATA_CONST.__const _NPKAnalyticsReportClientInputTypeSkipProvisioning
|| __DATA_CONST.__const _NPKAnalyticsReportClientInputTypeStartInAppProvisioningFlow
|| __DATA_CONST.__const _NPKAnalyticsReportClientInputTypeStartIssuerVerificationFlow
|| __DATA_CONST.__const _NPKAnalyticsReportClientInputTypeStartProvisioningFlow
|| __DATA_CONST.__const _NPKAnalyticsReportCredentialCountKey
|| __DATA_CONST.__const _NPKAnalyticsReportErrorTypeUnlockIPhone
|| __DATA_CONST.__const _NPKAnalyticsReportEventTypeBarcodePaymentTransactionLocalExtensionFailed
|| __DATA_CONST.__const _NPKAnalyticsReportEventTypeBarcodePaymentTransactionLocalExtensionSucceeded
|| __DATA_CONST.__const _NPKAnalyticsReportEventTypeBarcodePaymentTransactionRemoteExtensionFailed
|| __DATA_CONST.__const _NPKAnalyticsReportEventTypeBarcodePaymentTransactionRemoteExtensionSucceeded
|| __DATA_CONST.__const _NPKAnalyticsReportEventTypeClientInput
|| __DATA_CONST.__const _NPKAnalyticsReportEventTypeNonFatalError
|| __DATA_CONST.__const _NPKAnalyticsReportEventTypeStepTransition
|| __DATA_CONST.__const _NPKAnalyticsReportFieldIdentifiersKey
|| __DATA_CONST.__const _NPKAnalyticsReportFlowItemKey
|| __DATA_CONST.__const _NPKAnalyticsReportFlowItemsKey
|| __DATA_CONST.__const _NPKAnalyticsReportFromStepKey
|| __DATA_CONST.__const _NPKAnalyticsReportIngestionProgressKey
|| __DATA_CONST.__const _NPKAnalyticsReportIngestionStateKey
|| __DATA_CONST.__const _NPKAnalyticsReportMoreInformationItemsCountKey
|| __DATA_CONST.__const _NPKAnalyticsReportProductIdentifierKey
|| __DATA_CONST.__const _NPKAnalyticsReportProductIdentifiersKey
|| __DATA_CONST.__const _NPKAnalyticsReportToStepKey
|| __DATA_CONST.__const _NPKAnalyticsReportUnderlyingErrorCodeKey
|| __DATA_CONST.__const _NPKAnalyticsReportUnderlyingErrorDomainKey
|| __DATA_CONST.__const _NPKAnalyticsReportWebServiceErrorCodeKey
|| __DATA_CONST.__const _NPKAnalyticsReportWebServiceErrorDomainKey
|| __DATA_CONST.__const _NPKAnalyticsSubjectProvisioning
|| __DATA_CONST.__const _NPKAppletSubcredentialSharingInvitationNotificationActionContactNameParameter
|| __DATA_CONST.__const _NPKAssertionErrorDomain
|| __DATA_CONST.__const _NPKAssertionManagerErrorDomain
|| __DATA_CONST.__const _NPKBodyPrivateDataDisclosure
|| __DATA_CONST.__const _NPKCancelledServiceModeRequestDarwinNotification
|| __DATA_CONST.__const _NPKCompanionAgentConnectionActiveWatchPaymentWebServiceChanged
|| __DATA_CONST.__const _NPKCompanionAgentConnectionDefaultCardChanged
|| __DATA_CONST.__const _NPKCompanionAgentConnectionPaymentPassesChanged
|| __DATA_CONST.__const _NPKCompanionViewServiceConnectionServerServiceEntitlement
|| __DATA_CONST.__const _NPKCompanionViewServiceConnectionServerServiceErrorDomain
|| __DATA_CONST.__const _NPKCompanionViewServiceMachServiceName
|| __DATA_CONST.__const _NPKDefaultApplicationIdentifierKeyTemplate
|| __DATA_CONST.__const _NPKDefaultExpressPassUniqueIDKeyTemplate
|| __DATA_CONST.__const _NPKDefaultPaymentPassDefault
|| __DATA_CONST.__const _NPKDefaultsDomain
|| __DATA_CONST.__const _NPKDeviceUnlockedForPendingProvisioningDarwinNotification
|| __DATA_CONST.__const _NPKDisplayRedesignDefault
|| __DATA_CONST.__const _NPKDistributedNotificationCarKeyExpressEntered
|| __DATA_CONST.__const _NPKDistributedNotificationCarKeyExpressExited
|| __DATA_CONST.__const _NPKDistributedNotificationCarKeyRKEActionCompleted
|| __DATA_CONST.__const _NPKDistributedNotificationCarKeyRangingEnded
|| __DATA_CONST.__const _NPKDistributedNotificationCarKeyRangingStarted
|| __DATA_CONST.__const _NPKDistributedNotificationCarKeySessionEnded
|| __DATA_CONST.__const _NPKDistributedNotificationCarKeySessionEndedWithError
|| __DATA_CONST.__const _NPKDistributedNotificationCarKeyVehicleConnected
|| __DATA_CONST.__const _NPKDistributedNotificationCarKeyVehicleDisconnected
|| __DATA_CONST.__const _NPKDistributedNotificationCarKeyVehicleLocked
|| __DATA_CONST.__const _NPKDistributedNotificationCarKeyVehicleUnlocked
|| __DATA_CONST.__const _NPKDistributedNotificationStandaloneTransactionDone
|| __DATA_CONST.__const _NPKDoubleClickClientSuppressionChangedNotification
|| __DATA_CONST.__const _NPKEndedServiceModeRequestDarwinNotification
|| __DATA_CONST.__const _NPKErrorDomain
|| __DATA_CONST.__const _NPKExpressFelicaTransitPaymentApplicationIdentifierDefault
|| __DATA_CONST.__const _NPKExpressFelicaTransitPaymentPassUniqueIDDefault
|| __DATA_CONST.__const _NPKExpressGymKitAvailabilityManagerErrorDomain
|| __DATA_CONST.__const _NPKExpressGymKitAvailableDidChangeDarwinNotification
|| __DATA_CONST.__const _NPKExpressGymKitConflictPassUniqueIDDefaultsKey
|| __DATA_CONST.__const _NPKGizmoDatabaseMigrationDataSourceSetNotification
|| __DATA_CONST.__const _NPKIDVRemoteDeviceIDSServiceName
|| __DATA_CONST.__const _NPKIDVRemoteDeviceServiceConnectionEntitlement
|| __DATA_CONST.__const _NPKIDVRemoteDeviceServiceEventDidBecomeActiveString
|| __DATA_CONST.__const _NPKIDVRemoteDeviceServiceEventDidBecomeInactiveString
|| __DATA_CONST.__const _NPKIDVRemoteDeviceServiceEventDidUnpairString
|| __DATA_CONST.__const _NPKIDVRemoteDeviceServiceEventNoneString
|| __DATA_CONST.__const _NPKIDVRemoteDeviceServiceEventRequirePrearmCredentialString
|| __DATA_CONST.__const _NPKIDVRemoteDeviceServiceEventShouldBeDisarmedString
|| __DATA_CONST.__const _NPKIDVRemoteDeviceServiceEventUnknownString
|| __DATA_CONST.__const _NPKIDVRemoteDeviceServiceSessionMachServiceName
|| __DATA_CONST.__const _NPKIDVRemoteDeviceServiceSessionServiceName
|| __DATA_CONST.__const _NPKIDVRemoteDeviceSessionErrorDomain
|| __DATA_CONST.__const _NPKIDVRemoteDeviceSessionServiceConnectionEntitlement
|| __DATA_CONST.__const _NPKKnownPaymentPushTopicsDefault
|| __DATA_CONST.__const _NPKLibraryDisplayedRelevantPassesDidChangeNotification
|| __DATA_CONST.__const _NPKMirroredNotificationSectionIdentifier
|| __DATA_CONST.__const _NPKNeedsPaymentOptionsDefault
|| __DATA_CONST.__const _NPKPassSyncMethodCloudKitCompactString
|| __DATA_CONST.__const _NPKPassSyncMethodCloudKitString
|| __DATA_CONST.__const _NPKPassSyncMethodNoneCompactString
|| __DATA_CONST.__const _NPKPassSyncMethodNoneString
|| __DATA_CONST.__const _NPKPassSyncMethodStandaloneEngineCompactString
|| __DATA_CONST.__const _NPKPassSyncMethodStandaloneEngineString
|| __DATA_CONST.__const _NPKPassSyncStateVersionKey
|| __DATA_CONST.__const _NPKPasscodeChangedDarwinNotification
|| __DATA_CONST.__const _NPKPeerPaymentAccountChangedDarwinNotification
|| __DATA_CONST.__const _NPKPeerPaymentAccountManagerAccountDidChangeNotification
|| __DATA_CONST.__const _NPKPeerPaymentConversationManagerErrorDomain
|| __DATA_CONST.__const _NPKPeerPaymentConversationManagerRecipientUpdatedNotification
|| __DATA_CONST.__const _NPKPeerPaymentPreferencesDefault
|| __DATA_CONST.__const _NPKPeerPaymentTermsAndConditionsAcceptanceNeededDarwinNotification
|| __DATA_CONST.__const _NPKPepperUIApplePayComponentID
|| __DATA_CONST.__const _NPKPresentApplePaySetupAlertAppNameKey
|| __DATA_CONST.__const _NPKPresentApplePaySetupAlertDistributedNotification
|| __DATA_CONST.__const _NPKPresentTapToRadarDistributedNotification
|| __DATA_CONST.__const _NPKProvisionAccountPassOnUnlock
|| __DATA_CONST.__const _NPKRelevancySectionIdentifier
|| __DATA_CONST.__const _NPKRelevantPassesDistributedNotification
|| __DATA_CONST.__const _NPKRelevantPassesRequestDistributedNotification
|| __DATA_CONST.__const _NPKRelevantPassesRequestFakedPassUniqueIDsKey
|| __DATA_CONST.__const _NPKRelevantPassesTupleKey
|| __DATA_CONST.__const _NPKRelevantTransitNotificationsCheckDistributedNotification
|| __DATA_CONST.__const _NPKRemotePassActionAppExtensionIdentifier
|| __DATA_CONST.__const _NPKRemotePassActionRequestDestinationAppleID
|| __DATA_CONST.__const _NPKSandboxPassesUniqueIDsKey
|| __DATA_CONST.__const _NPKSandboxPresentationRequestNotification
|| __DATA_CONST.__const _NPKSandboxSelectedPassUniqueID
|| __DATA_CONST.__const _NPKSharedPaymentWebServiceChangedDarwinNotification
|| __DATA_CONST.__const _NPKSharedPeerPaymentAccountDidChangeNotification
|| __DATA_CONST.__const _NPKSharedPeerPaymentWebServiceChangedDarwinNotification
|| __DATA_CONST.__const _NPKSharedPeerPaymentWebServiceDidChangeNotification
|| __DATA_CONST.__const _NPKSharedWebServiceActiveDeviceDidChangeNotification
|| __DATA_CONST.__const _NPKSharedWebServiceDidChangeNotification
|| __DATA_CONST.__const _NPKStandaloneErrorDomain
|| __DATA_CONST.__const _NPKStandaloneProvisioningServiceName
|| __DATA_CONST.__const _NPKSubcredentialInvitationCoordinatorErrorDomain
|| __DATA_CONST.__const _NPKSurfaceRemoveButtonForHomeKeyDefault
|| __DATA_CONST.__const _NPKTapToRadarAttachmentsPathsNotificationKey
|| __DATA_CONST.__const _NPKTapToRadarBodyUserNotificationKey
|| __DATA_CONST.__const _NPKTapToRadarManagerErrorDomain
|| __DATA_CONST.__const _NPKTapToRadarRequestURLScheme
|| __DATA_CONST.__const _NPKTapToRadarTitleUserNotificationKey
|| __DATA_CONST.__const _NPKTransitRemindersDefaultsDomain
|| __DATA_CONST.__const _NPKUserNotificationsErrorDomain
|| __DATA_CONST.__const _NPKWatchSpecificAssetSuffix
|| __DATA_CONST.__const _NPSharedDefaultsDomain
|| __DATA_CONST.__const _PKPaymentCardEligbilityErrorDomain
|| __DATA_CONST.__const _PKPaymentProvisioningMethodCardImage2xScale
|| __DATA_CONST.__const _PKPaymentProvisioningMethodCardImage3xScale
|| __DATA_CONST.__const _PKPaymentProvisioningMethodCardImages
|| __DATA_CONST.__const __NPKCompanionServerDefaultCardChangedNotification
|| __DATA_CONST.__const __NPKCompanionServerMachServiceName
|| __DATA_CONST.__const __NPKCompanionServerPaymentPassesChangedNotification
|| __DATA_CONST.__const __NPKNanoPassDaemonConnectionMachServiceName
|| __DATA_CONST.__const _kHalfpipeA
|| __DATA_CONST.__const _kHalfpipeD
|| __DATA_CONST.__const _kHalfpipeF
|| __DATA_CONST.__const _kNPKIgnoreUserPreferenceTransactionsStatus
|| __DATA_CONST.__const _kNPKPeerPaymentConversationManagerError
|| __DATA_CONST.__const _kNPKPeerPaymentConversationManagerRecipient
|| __DATA_CONST.__const _kNPKPeerPaymentConversationManagerRecipientPhoneOrEmail
|| __DATA_CONST.__const _kNPKPeerPaymentMessagesTransactionsManagerAvailableActions
|| __DATA_CONST.__const _kNPKPeerPaymentMessagesTransactionsManagerTransactionStatus
|| __DATA_CONST.__const _kNPKUserPreferenceTransactionsStatus
|| __DATA_CONST.__const _kPNOAcadia
|| __DATA_CONST.__const _kPNOOrbit
|| __DATA_CONST.__const _kPNOPioneer
|| __DATA_CONST.__const _kSUICA_ANONYMOUS
|| __DATA_CONST.__const _kSUICA_COMMUTER_A_C
|| __DATA_CONST.__const _kSUICA_COMMUTER_A_D
|| __DATA_CONST.__const _kSUICA_COMMUTER_B_C
|| __DATA_CONST.__const _kSUICA_PERSONALIZED
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NPKIDVRemoteDeviceService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NPKIDVRemoteDeviceService
|| __TEXT.__const _NPKMockPeerPaymentAccountManagerInitialBalance
|| __TEXT.__const _NPKProtoRemotePassActionEnvelopeVersion
|| __TEXT.__text _ExpressPassesInformationDidChange
|| __TEXT.__text _NPKAccountUserCollectionWithCompletion
|| __TEXT.__text _NPKAcquireProvisioningAssertionWithDescription
|| __TEXT.__text _NPKAddPaymentPassControllerClientExportedInterface
|| __TEXT.__text _NPKAddPaymentPassControllerServerExportedInterface
|| __TEXT.__text _NPKAnalyticsEventEntriesForCredentials
|| __TEXT.__text _NPKAnalyticsEventEntriesForPaymentSetupFields
|| __TEXT.__text _NPKAnalyticsEventEntriesForProduct
|| __TEXT.__text _NPKAnalyticsEventEntriesForVerificationChannel
|| __TEXT.__text _NPKAnalyticsEventForError
|| __TEXT.__text _NPKAnalyticsEventForProvisioningFlowClientInput
|| __TEXT.__text _NPKAnalyticsEventForProvisioningFlowStepTransition
|| __TEXT.__text _NPKAutomaticProvisioningStateArchivePath
|| __TEXT.__text _NPKBalanceReminderIdentifierWithBalanceAndUniqueID
|| __TEXT.__text _NPKCancelNotifcationWithToken
|| __TEXT.__text _NPKCardNumberForPass
|| __TEXT.__text _NPKCardholderNameForPass
|| __TEXT.__text _NPKCatalogPathForDevice
|| __TEXT.__text _NPKCompanionClientProtocolInterface
|| __TEXT.__text _NPKCompanionServerProtocolInterface
|| __TEXT.__text _NPKCompanionViewServiceConnectionClientProtocolInterface
|| __TEXT.__text _NPKCompanionViewServiceConnectionServerProtocolInterface
|| __TEXT.__text _NPKCompanionViewServiceError
|| __TEXT.__text _NPKCopyFileAtPath
|| __TEXT.__text _NPKCopyFileAtURL
|| __TEXT.__text _NPKCreateImageByCroppingTransparentPadding
|| __TEXT.__text _NPKCreatePowerAssertion
|| __TEXT.__text _NPKDataForLargePassWithChangeUUID
|| __TEXT.__text _NPKDecimalNumberFormatterWithMinimalFractionDigitsExcludingCurrencySymbol
|| __TEXT.__text _NPKDeleteFileAtPath
|| __TEXT.__text _NPKDeleteFileAtURL
|| __TEXT.__text _NPKDescriptionOfRelevantPassTuples
|| __TEXT.__text _NPKDeviceClassFromDevice
|| __TEXT.__text _NPKDeviceIsUnlocked
|| __TEXT.__text _NPKDeviceOSVersionRequirementFromDevice
|| __TEXT.__text _NPKDeviceRegion
|| __TEXT.__text _NPKDeviceSupportsMead
|| __TEXT.__text _NPKDeviceWithPairingID
|| __TEXT.__text _NPKDisplayableError
|| __TEXT.__text _NPKDoesPassRequireTransientAuthorization
|| __TEXT.__text _NPKDoesPassSupportServiceMode
|| __TEXT.__text _NPKDoesSessionStateRepresentAuthorizationTimeoutForPassRequiringAuthorization
|| __TEXT.__text _NPKDomainAccessorForDomain
|| __TEXT.__text _NPKEmitDidTransactSignal
|| __TEXT.__text _NPKEnforcedPasscodePolicyFromApplyPasscodeRestrictionsRequestProto
|| __TEXT.__text _NPKEnforcedPasscodePolicyFromCheckPasscodePolicyComplianceRequestProto
|| __TEXT.__text _NPKExpressTransactionStatusIsComplete
|| __TEXT.__text _NPKFlushCFBundleCacheAtURL
|| __TEXT.__text _NPKGenerateDemoPaymentApplicationForSEID
|| __TEXT.__text _NPKGetIDSCommunicationError
|| __TEXT.__text _NPKGetMyProcessName
|| __TEXT.__text _NPKGetPDFImageFromBundle
|| __TEXT.__text _NPKGetPDFImageFromPath
|| __TEXT.__text _NPKGetProcessNameForPid
|| __TEXT.__text _NPKGizmoScreenScale
|| __TEXT.__text _NPKGlobalDomainPreferencesGetBooleanValue
|| __TEXT.__text _NPKGlobalDomainPreferencesGetValue
|| __TEXT.__text _NPKGlobalDomainPreferencesSetBooleanValue
|| __TEXT.__text _NPKGlobalDomainPreferencesSetValue
|| __TEXT.__text _NPKGuaranteeMainThread
|| __TEXT.__text _NPKHomeDirectoryPath
|| __TEXT.__text _NPKHomeDirectoryPathForDevice
|| __TEXT.__text _NPKHourOfDateIsSingular
|| __TEXT.__text _NPKIDVDeviceCredentialPrearmStatusFromString
|| __TEXT.__text _NPKIDVRemoteDeviceCredentialStorageKeyTypeFromString
|| __TEXT.__text _NPKIDVRemoteDeviceProtoCreateCredentialRequestReadFrom
|| __TEXT.__text _NPKIDVRemoteDeviceProtoCreateCredentialResponseReadFrom
|| __TEXT.__text _NPKIDVRemoteDeviceProtoCredentialPropertiesRequestReadFrom
|| __TEXT.__text _NPKIDVRemoteDeviceProtoCredentialPropertiesResponseReadFrom
|| __TEXT.__text _NPKIDVRemoteDeviceProtoDeleteCredentialRequestReadFrom
|| __TEXT.__text _NPKIDVRemoteDeviceProtoDeleteCredentialResponseReadFrom
|| __TEXT.__text _NPKIDVRemoteDeviceProtoDeleteGlobalAuthACLRequestReadFrom
|| __TEXT.__text _NPKIDVRemoteDeviceProtoDeleteGlobalAuthACLResponseReadFrom
|| __TEXT.__text _NPKIDVRemoteDeviceProtoEstablishPrearmTrustRequestReadFrom
|| __TEXT.__text _NPKIDVRemoteDeviceProtoEstablishPrearmTrustResponseReadFrom
|| __TEXT.__text _NPKIDVRemoteDeviceProtoGenerateKeyRequestReadFrom
|| __TEXT.__text _NPKIDVRemoteDeviceProtoGenerateKeyResponseReadFrom
|| __TEXT.__text _NPKIDVRemoteDeviceProtoHeartbeatRequestReadFrom
|| __TEXT.__text _NPKIDVRemoteDeviceProtoNonceForAuthorizationTokenRequestReadFrom
|| __TEXT.__text _NPKIDVRemoteDeviceProtoNonceForAuthorizationTokenResponseReadFrom
|| __TEXT.__text _NPKIDVRemoteDeviceProtoNotificationRequestReadFrom
|| __TEXT.__text _NPKIDVRemoteDeviceProtoNotificationResponseReadFrom
|| __TEXT.__text _NPKIDVRemoteDeviceProtoPartitionsCredentialIdentifiersRequestReadFrom
|| __TEXT.__text _NPKIDVRemoteDeviceProtoPartitionsCredentialIdentifiersResponseReadFrom
|| __TEXT.__text _NPKIDVRemoteDeviceProtoPrearmCredentialRequestReadFrom
|| __TEXT.__text _NPKIDVRemoteDeviceProtoPrearmCredentialResponseReadFrom
|| __TEXT.__text _NPKIDVRemoteDeviceProtoPrearmStatusUpdateReadFrom
|| __TEXT.__text _NPKIDVRemoteDeviceProtoProvisionCredentialRequestReadFrom
|| __TEXT.__text _NPKIDVRemoteDeviceProtoProvisionCredentialResponseReadFrom
|| __TEXT.__text _NPKIDVRemoteDeviceServiceEventsFromStringsArray
|| __TEXT.__text _NPKIDVRemoteDeviceServiceServerProtocolInterface
|| __TEXT.__text _NPKIDVRemoteDeviceServiceSessionServerProtocolInterface
|| __TEXT.__text _NPKIDVRemoteDeviceSessionError
|| __TEXT.__text _NPKIdentifyDevicePaymentApplicationsForPass
|| __TEXT.__text _NPKInitializeActiveDeviceChangedNotifications
|| __TEXT.__text _NPKInitiateTermsAndConditionsAcceptanceFlow
|| __TEXT.__text _NPKIsAddToWatchSupportedForCompanionPaymentPass
|| __TEXT.__text _NPKIsCompanionMigrationNeeded
|| __TEXT.__text _NPKIsConnectedToPairedOrPairingDeviceFromService
|| __TEXT.__text _NPKIsCurrentlyPairing
|| __TEXT.__text _NPKIsDoubleClickToConfirmDisabled
|| __TEXT.__text _NPKIsEqual
|| __TEXT.__text _NPKIsGymKitEnabled
|| __TEXT.__text _NPKIsPairedDeviceGloryOrLater
|| __TEXT.__text _NPKIsPairedDeviceGraceOrLater
|| __TEXT.__text _NPKIsPairedDeviceStandalone
|| __TEXT.__text _NPKIsPairedDeviceVersionGreaterThanOrEqual
|| __TEXT.__text _NPKIsPaymentSetupSupportedInRegion
|| __TEXT.__text _NPKIsRunningInCarousel
|| __TEXT.__text _NPKIsRunningInDemoMode
|| __TEXT.__text _NPKIsRunningInHandsOnDemoMode
|| __TEXT.__text _NPKIsRunningInNPKCompanionAgent
|| __TEXT.__text _NPKIsRunningInStoreDemoMode
|| __TEXT.__text _NPKIsRunningInUIOnlyDemoMode
|| __TEXT.__text _NPKIsTinkerDevice
|| __TEXT.__text _NPKIsTransactionAllowedInUI
|| __TEXT.__text _NPKIsTransactionPositiveBalanceAdjustment
|| __TEXT.__text _NPKIsTruthOnCard
|| __TEXT.__text _NPKIsTruthOnCardTransitPass
|| __TEXT.__text _NPKIsValidVASPass
|| __TEXT.__text _NPKLibraryHashForPassHashes
|| __TEXT.__text _NPKLocaleIs24HourMode
|| __TEXT.__text _NPKLocalizedNameForProcessWithPID
|| __TEXT.__text _NPKLocalizedString
|| __TEXT.__text _NPKLocalizedStringWithTableSuffix
|| __TEXT.__text _NPKManifestForPass
|| __TEXT.__text _NPKManifestHashForPass
|| __TEXT.__text _NPKMaxPaymentCards
|| __TEXT.__text _NPKMeadFieldDetectEnabled
|| __TEXT.__text _NPKMyPid
|| __TEXT.__text _NPKNRDeviceSupportsAppleBalance
|| __TEXT.__text _NPKNRDeviceSupportsCredentialType
|| __TEXT.__text _NPKNanoPassDaemonConnectionProtocolInterface
|| __TEXT.__text _NPKNotificationForExpressPassesInformationChange
|| __TEXT.__text _NPKNotificationForSyncedSettingsChange
|| __TEXT.__text _NPKNotifyForSyncedSettingsChange
|| __TEXT.__text _NPKPairedDeviceCurrentExpressPassInformation
|| __TEXT.__text _NPKPairedDeviceExpressPassInformationWithCardType
|| __TEXT.__text _NPKPairedDevicePeerPaymentPreferences
|| __TEXT.__text _NPKPairedDevicePrimarySecureElementIdentifier
|| __TEXT.__text _NPKPairedDeviceSecureElementIdentifiers
|| __TEXT.__text _NPKPairedDeviceSetPeerPaymentPreferences
|| __TEXT.__text _NPKPairedOrPairingDevice
|| __TEXT.__text _NPKPairedOrPairingDeviceCanProvisionSecureElementPasses
|| __TEXT.__text _NPKPairedOrPairingDeviceIsTinker
|| __TEXT.__text _NPKPairedOrPairingDeviceSupportsAppleBalance
|| __TEXT.__text _NPKPairedOrPairingDeviceSupportsCredentialType
|| __TEXT.__text _NPKPairedOrPairingDeviceSupportsExpressForAutomaticSelectionTechnologyType
|| __TEXT.__text _NPKPairedOrPairingDeviceSupportsHealthPass
|| __TEXT.__text _NPKPairedOrPairingDeviceSupportsHomeKeyProvisioning
|| __TEXT.__text _NPKPairedOrPairingDeviceSupportsSubcredentialProvisioning
|| __TEXT.__text _NPKPairedOrPairingDeviceSupportsSubcredentialProvisioningOverUWB
|| __TEXT.__text _NPKPairedOrPairingDeviceSupportsUnifiedAccessProvisioning
|| __TEXT.__text _NPKPairingDeviceAccountAltDSID
|| __TEXT.__text _NPKPairingParentAltDSIDFromTinkerDevice
|| __TEXT.__text _NPKPartialPassDataWithBaseManifest
|| __TEXT.__text _NPKPassBackupManagerDeleteRootDirectoryForDevice
|| __TEXT.__text _NPKPassDescriptionExpressTypesMaskWithPass
|| __TEXT.__text _NPKPassSyncChangeTypeFromProto
|| __TEXT.__text _NPKPassSyncChangeTypeToProto
|| __TEXT.__text _NPKPassSyncChangeTypeToString
|| __TEXT.__text _NPKPassSyncEngineArchivePath
|| __TEXT.__text _NPKPassSyncEngineRoleFromString
|| __TEXT.__text _NPKPassSyncEngineRoleToString
|| __TEXT.__text _NPKPassSyncMethodsForPassWithStateVersion
|| __TEXT.__text _NPKPassSyncMethodsFromString
|| __TEXT.__text _NPKPasscodeUpgradeChangeTypeFromPasscodeUpgradeChangeTypeProto
|| __TEXT.__text _NPKPasscodeUpgradeChangeTypeProtoFromPasscodeUpgradeChangeType
|| __TEXT.__text _NPKPaymentCardIneligibleReasonForEligibilityStatus
|| __TEXT.__text _NPKPaymentCardIneligibleReasonForRequirementsStatus
|| __TEXT.__text _NPKPaymentPassBalanceLabelDictionary
|| __TEXT.__text _NPKPaymentPassDirectoryPath
|| __TEXT.__text _NPKPaymentPassDirectoryPathForDevice
|| __TEXT.__text _NPKPaymentPassUnitDictionary
|| __TEXT.__text _NPKPaymentProvisioningFlowControllerReaderModeIngestionStateToString
|| __TEXT.__text _NPKPaymentProvisioningSetupContextIsBridge
|| __TEXT.__text _NPKPaymentProvisioningSetupContextIsIssuerApp
|| __TEXT.__text _NPKPaymentProvisioningSetupContextIsMerchantApp
|| __TEXT.__text _NPKPaymentProvisioningSetupContextIsPassbook
|| __TEXT.__text _NPKPaymentProvisioningSetupContextIsSetupAssistant
|| __TEXT.__text _NPKPaymentWebServiceBackgroundContextPath
|| __TEXT.__text _NPKPaymentWebServiceContextPath
|| __TEXT.__text _NPKPaymentWebServiceContextPathForDevice
|| __TEXT.__text _NPKPeerPaymentAccountPath
|| __TEXT.__text _NPKPeerPaymentDecimalNumberFormatterForCurrencyCode
|| __TEXT.__text _NPKPeerPaymentLocale
|| __TEXT.__text _NPKPeerPaymentLookupRecipientInformation
|| __TEXT.__text _NPKPeerPaymentNumberFormatterForCurrencyCode
|| __TEXT.__text _NPKPeerPaymentStatusWithNSString
|| __TEXT.__text _NPKPeerPaymentStatusWithNumber
|| __TEXT.__text _NPKPeerPaymentStatusWithPKPeerPaymentStatus
|| __TEXT.__text _NPKPeerPaymentStatusWithPKPeerPaymentStatusAndActions
|| __TEXT.__text _NPKPeerPaymentValueHasDecimals
|| __TEXT.__text _NPKPeerPaymentWebServiceContextPath
|| __TEXT.__text _NPKPendingTransactionsCachePath
|| __TEXT.__text _NPKPerformanceMetricEnd
|| __TEXT.__text _NPKPerformanceMetricInit
|| __TEXT.__text _NPKPerformanceMetricStart
|| __TEXT.__text _NPKPreferencesGetBooleanValue
|| __TEXT.__text _NPKPreferencesGetValue
|| __TEXT.__text _NPKPreferencesGetValueFromDomain
|| __TEXT.__text _NPKPreferencesSetBooleanValue
|| __TEXT.__text _NPKPreferencesSetValue
|| __TEXT.__text _NPKPreferencesSynchronize
|| __TEXT.__text _NPKPresentUserNotification
|| __TEXT.__text _NPKProtectedDataAvailable
|| __TEXT.__text _NPKProtoAcceptSubcredentialInvitationRequestReadFrom
|| __TEXT.__text _NPKProtoAcceptSubcredentialInvitationResponseReadFrom
|| __TEXT.__text _NPKProtoAcceptSubcredentialInvitationWithIdentifierRequestReadFrom
|| __TEXT.__text _NPKProtoAccountAttestationAnonymizationSaltRequestReadFrom
|| __TEXT.__text _NPKProtoAccountAttestationAnonymizationSaltResponseReadFrom
|| __TEXT.__text _NPKProtoAccountWithIdentifierRequestReadFrom
|| __TEXT.__text _NPKProtoAccountWithIdentifierResponseReadFrom
|| __TEXT.__text _NPKProtoAddISO18013BlobsRequestReadFrom
|| __TEXT.__text _NPKProtoAddISO18013BlobsResponseReadFrom
|| __TEXT.__text _NPKProtoAddPassRequestReadFrom
|| __TEXT.__text _NPKProtoAssertionRequestReadFrom
|| __TEXT.__text _NPKProtoAutomaticProvisioningRequestReadFrom
|| __TEXT.__text _NPKProtoAvailableHomeKeyPassesRequestReadFrom
|| __TEXT.__text _NPKProtoAvailableHomeKeyPassesResponseReadFrom
|| __TEXT.__text _NPKProtoAvailableProductsRequestReadFrom
|| __TEXT.__text _NPKProtoAvailableProductsResponseReadFrom
|| __TEXT.__text _NPKProtoBalanceReminderForBalanceAndPassRequestReadFrom
|| __TEXT.__text _NPKProtoBalanceReminderForBalanceAndPassResponseReadFrom
|| __TEXT.__text _NPKProtoBarcodeApplicationRedirectRequestReadFrom
|| __TEXT.__text _NPKProtoBarcodeEventRequestReadFrom
|| __TEXT.__text _NPKProtoBarcodeEventResponseReadFrom
|| __TEXT.__text _NPKProtoBitmapReadFrom
|| __TEXT.__text _NPKProtoCanAcceptInvitationRequestReadFrom
|| __TEXT.__text _NPKProtoCanAcceptInvitationResponseReadFrom
|| __TEXT.__text _NPKProtoCanAddSecureElementPassWithConfigurationRequestReadFrom
|| __TEXT.__text _NPKProtoCanAddSecureElementPassWithConfigurationResponseReadFrom
|| __TEXT.__text _NPKProtoCatalogChangedRequestReadFrom
|| __TEXT.__text _NPKProtoCatalogReadFrom
|| __TEXT.__text _NPKProtoCheckCompanionPeerPaymentRegistrationStateRequestReadFrom
|| __TEXT.__text _NPKProtoCheckFidoKeyPresenceRequestReadFrom
|| __TEXT.__text _NPKProtoCheckFidoKeyPresenceResponseReadFrom
|| __TEXT.__text _NPKProtoCheckPasscodePolicyComplianceRequestReadFrom
|| __TEXT.__text _NPKProtoCheckPasscodePolicyComplianceResponseReadFrom
|| __TEXT.__text _NPKProtoCheckTLKsMissingRequestReadFrom
|| __TEXT.__text _NPKProtoCheckTLKsMissingResponseReadFrom
|| __TEXT.__text _NPKProtoCloudStoreStatusRequestReadFrom
|| __TEXT.__text _NPKProtoCloudStoreStatusResponseReadFrom
|| __TEXT.__text _NPKProtoCommutePlanReminderForCommutePlanAndPassRequestReadFrom
|| __TEXT.__text _NPKProtoCommutePlanReminderForCommutePlanAndPassResponseReadFrom
|| __TEXT.__text _NPKProtoCompanionMigratedRequestReadFrom
|| __TEXT.__text _NPKProtoCompanionMigratedResponseReadFrom
|| __TEXT.__text _NPKProtoConfigurationDataRequestReadFrom
|| __TEXT.__text _NPKProtoConfigurationDataResponseReadFrom
|| __TEXT.__text _NPKProtoConflictingExpressPassIdentifiersForPassInformationRequestReadFrom
|| __TEXT.__text _NPKProtoConflictingExpressPassIdentifiersForPassInformationResponseReadFrom
|| __TEXT.__text _NPKProtoCreateFidoKeyRequestReadFrom
|| __TEXT.__text _NPKProtoCreateFidoKeyResponseReadFrom
|| __TEXT.__text _NPKProtoDeclineRelatedInvitationsIfNecessaryRequestReadFrom
|| __TEXT.__text _NPKProtoDeclineRelatedInvitationsIfNecessaryResponseReadFrom
|| __TEXT.__text _NPKProtoDeleteKeyMaterialForSubCredentialIdRequestReadFrom
|| __TEXT.__text _NPKProtoDeviceDidRegisterRequestReadFrom
|| __TEXT.__text _NPKProtoDeviceDidRegisterResponseReadFrom
|| __TEXT.__text _NPKProtoDeviceMetadataWithFieldsReponseReadFrom
|| __TEXT.__text _NPKProtoDeviceMetadataWithFieldsRequestReadFrom
|| __TEXT.__text _NPKProtoDeviceUnlockedForPendingProvisioningRequestReadFrom
|| __TEXT.__text _NPKProtoDownloadAllPaymentPassesRequestReadFrom
|| __TEXT.__text _NPKProtoDumpLogsRequestReadFrom
|| __TEXT.__text _NPKProtoDumpLogsResponseReadFrom
|| __TEXT.__text _NPKProtoEnableServiceModeRequestReadFrom
|| __TEXT.__text _NPKProtoEnableServiceModeResponseReadFrom
|| __TEXT.__text _NPKProtoFeatureApplicationsForAccountIdentifierRequestReadFrom
|| __TEXT.__text _NPKProtoFeatureApplicationsForAccountIdentifierResponseReadFrom
|| __TEXT.__text _NPKProtoFidoExternalizedAuthRequestReadFrom
|| __TEXT.__text _NPKProtoFidoExternalizedAuthResponseReadFrom
|| __TEXT.__text _NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdRequestReadFrom
|| __TEXT.__text _NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdResponseReadFrom
|| __TEXT.__text _NPKProtoGenerateSEEncryptionCertificateForSubCredentialIdRequestReadFrom
|| __TEXT.__text _NPKProtoGenerateSEEncryptionCertificateForSubCredentialIdResponseReadFrom
|| __TEXT.__text _NPKProtoGenerateTransactionKeyWithParametersRequestReadFrom
|| __TEXT.__text _NPKProtoGenerateTransactionKeyWithParametersResponseReadFrom
|| __TEXT.__text _NPKProtoGizmoInitiatedAddPassRequestReadFrom
|| __TEXT.__text _NPKProtoGizmoInitiatedDeletePassRequestReadFrom
|| __TEXT.__text _NPKProtoHandleAppletStateChangeRequestReadFrom
|| __TEXT.__text _NPKProtoHandleBalanceChangeRequestReadFrom
|| __TEXT.__text _NPKProtoHandleCompanionPeerPaymentRegistrationRequestReadFrom
|| __TEXT.__text _NPKProtoHandleCompanioniCloudSignoutRequestReadFrom
|| __TEXT.__text _NPKProtoHandleCredentialsChangeRequestReadFrom
|| __TEXT.__text _NPKProtoHandlePaymentTransactionsRequestReadFrom
|| __TEXT.__text _NPKProtoHandleRemoveTransactionsRequestReadFrom
|| __TEXT.__text _NPKProtoHandleValueAddedServiceTransactionsRequestReadFrom
|| __TEXT.__text _NPKProtoHashReadFrom
|| __TEXT.__text _NPKProtoInitializeCloudStoreIfNecessaryRequestReadFrom
|| __TEXT.__text _NPKProtoInitializeCloudStoreIfNecessaryResponseReadFrom
|| __TEXT.__text _NPKProtoInitializeCloudStoreIfNecessaryWithHandlerRequestReadFrom
|| __TEXT.__text _NPKProtoInitializeCloudStoreIfNecessaryWithHandlerResponseReadFrom
|| __TEXT.__text _NPKProtoListSubcredentialInvitationsRequestReadFrom
|| __TEXT.__text _NPKProtoListSubcredentialInvitationsResponseReadFrom
|| __TEXT.__text _NPKProtoMarkAllAppletsForDeletionRequestReadFrom
|| __TEXT.__text _NPKProtoMarkAllAppletsForDeletionResponseReadFrom
|| __TEXT.__text _NPKProtoMarkPaymentPassForDeleteRequestReadFrom
|| __TEXT.__text _NPKProtoMarkPaymentPassForDeleteResponseReadFrom
|| __TEXT.__text _NPKProtoMatchingInvitationOnDeviceRequestReadFrom
|| __TEXT.__text _NPKProtoMatchingInvitationOnDeviceResponseReadFrom
|| __TEXT.__text _NPKProtoNewLibraryHashReceivedRequestReadFrom
|| __TEXT.__text _NPKProtoNewLibraryHashRequestReadFrom
|| __TEXT.__text _NPKProtoOpenURLRequestReadFrom
|| __TEXT.__text _NPKProtoOwnershipTokenRequestReadFrom
|| __TEXT.__text _NPKProtoOwnershipTokenResponseReadFrom
|| __TEXT.__text _NPKProtoPassAssociatedDataRequestReadFrom
|| __TEXT.__text _NPKProtoPassReadFrom
|| __TEXT.__text _NPKProtoPassSettingsChangedRequestReadFrom
|| __TEXT.__text _NPKProtoPassSyncProposedReconciledStateReadFrom
|| __TEXT.__text _NPKProtoPassSyncReconciledStateAcceptedReadFrom
|| __TEXT.__text _NPKProtoPassSyncReconciledStateUnrecognizedReadFrom
|| __TEXT.__text _NPKProtoPassSyncStateChangeProcessedReadFrom
|| __TEXT.__text _NPKProtoPassSyncStateChangeReadFrom
|| __TEXT.__text _NPKProtoPassSyncStateItemReadFrom
|| __TEXT.__text _NPKProtoPassSyncStateManifestEntryReadFrom
|| __TEXT.__text _NPKProtoPassSyncStateReadFrom
|| __TEXT.__text _NPKProtoPasscodeUpgradeFlowApplyPasscodeRestrictionsRequestReadFrom
|| __TEXT.__text _NPKProtoPasscodeUpgradeFlowApplyPasscodeRestrictionsResponseReadFrom
|| __TEXT.__text _NPKProtoPasscodeUpgradeFlowPresentationRequestReadFrom
|| __TEXT.__text _NPKProtoPasscodeUpgradeFlowShouldExitRequestReadFrom
|| __TEXT.__text _NPKProtoPauseRangingForPairedReaderIdentifierRequestReadFrom
|| __TEXT.__text _NPKProtoPaymentPreconditionsNotMetRequestReadFrom
|| __TEXT.__text _NPKProtoPaymentWebServiceRegistrationRequestReadFrom
|| __TEXT.__text _NPKProtoPaymentWebServiceRegistrationResponseReadFrom
|| __TEXT.__text _NPKProtoPeerPaymentRegistrationRequestReadFrom
|| __TEXT.__text _NPKProtoPeerPaymentRegistrationResponseReadFrom
|| __TEXT.__text _NPKProtoPeerPaymentUnregistrationRequestReadFrom
|| __TEXT.__text _NPKProtoPeerPaymentUnregistrationResponseReadFrom
|| __TEXT.__text _NPKProtoPeerPaymentWebServiceContextDidChangeRequestReadFrom
|| __TEXT.__text _NPKProtoPerformDeviceCheckInRequestReadFrom
|| __TEXT.__text _NPKProtoPerformDeviceCheckInResponseReadFrom
|| __TEXT.__text _NPKProtoPerformProductActionRequestReadFrom
|| __TEXT.__text _NPKProtoPerformProductActionResponseReadFrom
|| __TEXT.__text _NPKProtoPhotosForFamilyMembersWithDSIDsRequestReadFrom
|| __TEXT.__text _NPKProtoPhotosForFamilyMembersWithDSIDsResponseReadFrom
|| __TEXT.__text _NPKProtoPresentStandaloneTransactionRequestReadFrom
|| __TEXT.__text _NPKProtoPresentStandaloneTransactionResponseReadFrom
|| __TEXT.__text _NPKProtoProvisionHomeKeyPassForSerialNumbersRequestReadFrom
|| __TEXT.__text _NPKProtoProvisionHomeKeyPassForSerialNumbersResponseReadFrom
|| __TEXT.__text _NPKProtoProvisionPassForRemoteCredentialWithTypeAndIdentifierRequestReadFrom
|| __TEXT.__text _NPKProtoProvisionPassForRemoteCredentialWithTypeAndIdentifierResponseReadFrom
|| __TEXT.__text _NPKProtoProvisionPeerPaymentPassRequestReadFrom
|| __TEXT.__text _NPKProtoProvisionPeerPaymentPassResponseReadFrom
|| __TEXT.__text _NPKProtoProvisioningDataRequestReadFrom
|| __TEXT.__text _NPKProtoProvisioningDataResponseReadFrom
|| __TEXT.__text _NPKProtoQueueTSMConnectionRequestReadFrom
|| __TEXT.__text _NPKProtoQueueTSMConnectionResponseReadFrom
|| __TEXT.__text _NPKProtoRegisterSubcredentialsRequestReadFrom
|| __TEXT.__text _NPKProtoRegisterSubcredentialsResponseReadFrom
|| __TEXT.__text _NPKProtoRegistrationDataRequestReadFrom
|| __TEXT.__text _NPKProtoRegistrationDataResponseReadFrom
|| __TEXT.__text _NPKProtoRelevantPassTupleReadFrom
|| __TEXT.__text _NPKProtoRelevantPassesNeededRequestReadFrom
|| __TEXT.__text _NPKProtoRelevantPassesPendingRequestReadFrom
|| __TEXT.__text _NPKProtoRelevantPassesRequestReadFrom
|| __TEXT.__text _NPKProtoRemoteAdminAvailabilityChangeRequestReadFrom
|| __TEXT.__text _NPKProtoRemoteAdminAvailabilityRequestReadFrom
|| __TEXT.__text _NPKProtoRemoteAdminAvailabilityResponseReadFrom
|| __TEXT.__text _NPKProtoRemoteAdminPerformRequestReadFrom
|| __TEXT.__text _NPKProtoRemoteAdminPerformResponseReadFrom
|| __TEXT.__text _NPKProtoRemoteDevicePasscodeStateRequestReadFrom
|| __TEXT.__text _NPKProtoRemoteDevicePasscodeStateResponseReadFrom
|| __TEXT.__text _NPKProtoRemotePassActionCardTypeForNPKRemotePassActionCardType
|| __TEXT.__text _NPKProtoRemotePassActionEnterValueRequestReadFrom
|| __TEXT.__text _NPKProtoRemotePassActionEnterValueResponseReadFrom
|| __TEXT.__text _NPKProtoRemotePassActionEnvelopeReadFrom
|| __TEXT.__text _NPKProtoRemotePassActionResultForNPKProtoRemotePassActionResponseResult
|| __TEXT.__text _NPKProtoRemotePassActionSelectItemRequestReadFrom
|| __TEXT.__text _NPKProtoRemotePassActionSelectItemResponseReadFrom
|| __TEXT.__text _NPKProtoRemotePassUpdateRequestReadFrom
|| __TEXT.__text _NPKProtoRemotePassUpdateResponseReadFrom
|| __TEXT.__text _NPKProtoRemoveExpressPassWithUniqueIdentifierRequestReadFrom
|| __TEXT.__text _NPKProtoRemoveExpressPassWithUniqueIdentifierResponseReadFrom
|| __TEXT.__text _NPKProtoRemoveExpressPassesWithCardTypeRequestReadFrom
|| __TEXT.__text _NPKProtoRemoveExpressPassesWithCardTypeResponseReadFrom
|| __TEXT.__text _NPKProtoRemovePassRequestReadFrom
|| __TEXT.__text _NPKProtoRemoveSharingInvitationRequestReadFrom
|| __TEXT.__text _NPKProtoRemoveSharingInvitationResponseReadFrom
|| __TEXT.__text _NPKProtoRequestPeerAccountTermsAndConditionsAcceptanceReadFrom
|| __TEXT.__text _NPKProtoRequestSubcredentialInvitationRequestReadFrom
|| __TEXT.__text _NPKProtoRequestSubcredentialInvitationResponseReadFrom
|| __TEXT.__text _NPKProtoResetApplePayManateeViewRequestReadFrom
|| __TEXT.__text _NPKProtoResetApplePayManateeViewResponseReadFrom
|| __TEXT.__text _NPKProtoResumeRangingForPairedReaderIdentifierRequestReadFrom
|| __TEXT.__text _NPKProtoResyncNeededRequestReadFrom
|| __TEXT.__text _NPKProtoRetrievePaymentTransactionsRequestReadFrom
|| __TEXT.__text _NPKProtoRetrievePaymentTransactionsResponseReadFrom
|| __TEXT.__text _NPKProtoRevokeSubcredentialsRequestReadFrom
|| __TEXT.__text _NPKProtoRevokeSubcredentialsResponseReadFrom
|| __TEXT.__text _NPKProtoSecureElementGetAppletsRequestReadFrom
|| __TEXT.__text _NPKProtoSecureElementGetAppletsResponseReadFrom
|| __TEXT.__text _NPKProtoSecureElementGetPairingInfoRequestReadFrom
|| __TEXT.__text _NPKProtoSecureElementGetPairingInfoResponseReadFrom
|| __TEXT.__text _NPKProtoSecureElementRemoveAppletsRequestReadFrom
|| __TEXT.__text _NPKProtoSecureElementRemoveAppletsResponseReadFrom
|| __TEXT.__text _NPKProtoSecureElementSetNewAuthRandomRequestReadFrom
|| __TEXT.__text _NPKProtoSecureElementSetNewAuthRandomResponseReadFrom
|| __TEXT.__text _NPKProtoSend
|| __TEXT.__text _NPKProtoSendSync
|| __TEXT.__text _NPKProtoSendWithOptions
|| __TEXT.__text _NPKProtoServiceProviderDataForPassWithUniqueIdentifierRequestReadFrom
|| __TEXT.__text _NPKProtoServiceProviderDataForPassWithUniqueIdentifierResponseReadFrom
|| __TEXT.__text _NPKProtoSetAccountAttestationAnonymizationSaltRequestReadFrom
|| __TEXT.__text _NPKProtoSetAccountAttestationAnonymizationSaltResponseReadFrom
|| __TEXT.__text _NPKProtoSetBalanceReminderForBalanceAndPassRequestReadFrom
|| __TEXT.__text _NPKProtoSetBalanceReminderForBalanceAndPassResponseReadFrom
|| __TEXT.__text _NPKProtoSetCommutePlanReminderForCommutePlanAndPassRequestReadFrom
|| __TEXT.__text _NPKProtoSetCommutePlanReminderForCommutePlanAndPassResponseReadFrom
|| __TEXT.__text _NPKProtoSetExpressPassRequestReadFrom
|| __TEXT.__text _NPKProtoSetExpressPassResponseReadFrom
|| __TEXT.__text _NPKProtoSetPeerPaymentPreferencesRequestReadFrom
|| __TEXT.__text _NPKProtoSetPeerPaymentPreferencesResponseReadFrom
|| __TEXT.__text _NPKProtoSetPreferredPaymentApplicationRequestReadFrom
|| __TEXT.__text _NPKProtoSetPreferredPaymentApplicationResponseReadFrom
|| __TEXT.__text _NPKProtoSetTransactionDefaultsRequestReadFrom
|| __TEXT.__text _NPKProtoShowPaymentSetupRequestReadFrom
|| __TEXT.__text _NPKProtoSignDataRequestReadFrom
|| __TEXT.__text _NPKProtoSignDataResponseReadFrom
|| __TEXT.__text _NPKProtoSignWithFidoKeyRequestReadFrom
|| __TEXT.__text _NPKProtoSignWithFidoKeyResponseReadFrom
|| __TEXT.__text _NPKProtoStandaloneCreditAccountCredentialReadFrom
|| __TEXT.__text _NPKProtoStandaloneErrorReadFrom
|| __TEXT.__text _NPKProtoStandaloneImageSizeReadFrom
|| __TEXT.__text _NPKProtoStandaloneInitializationRequestReadFrom
|| __TEXT.__text _NPKProtoStandaloneInitializationResponseReadFrom
|| __TEXT.__text _NPKProtoStandalonePassReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentApplicationReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentCredentialReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentCredentialUnionReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentDigitalIssuanceMetadataReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentHeroImageReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentPassListRequestReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentPassListResponseReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentPassReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentProvisioningFlowAcceptTermsRequestReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentProvisioningFlowAcknowledgeMoreInformationRequestReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentProvisioningFlowAcknowledgeWelcomeRequestReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsRequestReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsStepContextReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentProvisioningFlowChooseFlowRequestReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentProvisioningFlowChooseFlowStepContextReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentProvisioningFlowChooseManualEntryRequestReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentProvisioningFlowChooseProductRequestReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentProvisioningFlowChooseProductStepContextReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentProvisioningFlowChooseReaderModeRequestReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentProvisioningFlowDidEncounterErrorResponseReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentProvisioningFlowDigitalIssuanceAmountStepContextReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentProvisioningFlowDigitalIssuancePaymentStepContextReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentProvisioningFlowHandleDigitalIssuanceAmountRequestReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationChannelRequestReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationCodeRequestReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationFieldsRequestReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentProvisioningFlowHandleManualEntryFieldsRequestReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentProvisioningFlowHandleReaderModeFieldsRequestReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationChannelsStepContextReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationCodeStepContextReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationFieldsStepContextReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentProvisioningFlowLocalDeviceManualEntryProgressStepContextReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentProvisioningFlowLocalDeviceManualEntryStepContextReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentProvisioningFlowManualEntryStepContextReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentProvisioningFlowMoreInformationStepContextReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentProvisioningFlowPasscodeUpgradeStepContextReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentProvisioningFlowPickerItemReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentProvisioningFlowPickerSectionReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentProvisioningFlowProductDisambiguationStepContextReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentProvisioningFlowProvisioningProgressStepContextReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentProvisioningFlowProvisioningResultStepContextReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentProvisioningFlowReaderModeEntryStepContextReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentProvisioningFlowReaderModeIngestionStepContextReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentProvisioningFlowResponseReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentProvisioningFlowSecondaryManualEntryStepContextReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentProvisioningFlowSessionCheckInRequestReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentProvisioningFlowSessionEndedResponseReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentProvisioningFlowSkipProvisioningRequestReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentProvisioningFlowStartIssuerVerificationFlowForPaymentPassRequestReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentProvisioningFlowStartProvisioningFlowRequestReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentProvisioningFlowStepContextReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentProvisioningFlowTermsAndConditionsStepContextReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentProvisioningFlowWelcomeStepContextReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentProvisioningMethodMetadataDictionaryEntryReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentProvisioningMethodMetadataReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentRemoteCredentialReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentSetupFieldReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentSetupMoreInfoItemReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentSetupProductImageAssetURLsReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentSetupProductPaymentOptionReadFrom
|| __TEXT.__text _NPKProtoStandalonePaymentSetupProductReadFrom
|| __TEXT.__text _NPKProtoStandalonePingRequestReadFrom
|| __TEXT.__text _NPKProtoStandalonePingResponseReadFrom
|| __TEXT.__text _NPKProtoStandaloneRequestHeaderReadFrom
|| __TEXT.__text _NPKProtoStandaloneResponseHeaderReadFrom
|| __TEXT.__text _NPKProtoStandaloneUserInfoReadFrom
|| __TEXT.__text _NPKProtoStandaloneVerificationChannelReadFrom
|| __TEXT.__text _NPKProtoTransactionDefaultsNeededRequestReadFrom
|| __TEXT.__text _NPKProtoTriggerCloudStoreZoneCreationForAccountRequestReadFrom
|| __TEXT.__text _NPKProtoTriggerCloudStoreZoneCreationForAccountResponseReadFrom
|| __TEXT.__text _NPKProtoUpdateAccountWithIdentifierRequestReadFrom
|| __TEXT.__text _NPKProtoUpdateAccountWithIdentifierResponseReadFrom
|| __TEXT.__text _NPKProtoUpdatePassRequestReadFrom
|| __TEXT.__text _NPKProtoUpdatePaymentPassRequestReadFrom
|| __TEXT.__text _NPKProtoUpdatePeerPaymentAccountRequestReadFrom
|| __TEXT.__text _NPKProtoUpdatePeerPaymentAccountResponseReadFrom
|| __TEXT.__text _NPKProtoUpdatePushTokenRequestReadFrom
|| __TEXT.__text _NPKProtoUpdateSubcredentialMetadataRequestReadFrom
|| __TEXT.__text _NPKProtoUpdateSubcredentialMetadataResponseReadFrom
|| __TEXT.__text _NPKProtoUpdatedAccountsForProvisioningRequestReadFrom
|| __TEXT.__text _NPKProtoUpdatedAccountsForProvisioningResponseReadFrom
|| __TEXT.__text _NPKProtoWebServiceContextDidChangeRequestReadFrom
|| __TEXT.__text _NPKProtoWebServiceContextNeededRequestReadFrom
|| __TEXT.__text _NPKQuickPaymentSessionTypeForPass
|| __TEXT.__text _NPKRasterizedPassCachePath
|| __TEXT.__text _NPKReferredToAsAccount
|| __TEXT.__text _NPKReleasePowerAssertionWithIdentifier
|| __TEXT.__text _NPKRelevantTransitNotificationsCheckInterval
|| __TEXT.__text _NPKRemotePassActionCardTypeForNPKProtoRemotePassActionCardType
|| __TEXT.__text _NPKRemotePassActionCardTypeForPass
|| __TEXT.__text _NPKRemotePassActionResponseResultForNPKProtoRemotePassActionResult
|| __TEXT.__text _NPKRequireSTSSessionForPass
|| __TEXT.__text _NPKReverseGeocodedPlacemarkTextFromLocationCoordinatesWithCompletion
|| __TEXT.__text _NPKSecureArchiveObject
|| __TEXT.__text _NPKSecureRangingPowerOptimizationEnabled
|| __TEXT.__text _NPKSecureUnarchiveObject
|| __TEXT.__text _NPKSecureUnarchiveObjectOfClasses
|| __TEXT.__text _NPKSegmentsForLargePassDataNoCopy
|| __TEXT.__text _NPKSelectStringForDocumentType
|| __TEXT.__text _NPKSetCompanionMigrationNeeded
|| __TEXT.__text _NPKSetDefaults
|| __TEXT.__text _NPKSetMaxPaymentCards
|| __TEXT.__text _NPKSetShouldHonorUserPreferenceTransactionStatus
|| __TEXT.__text _NPKSetUseMockPeerPaymentServer
|| __TEXT.__text _NPKSharedPeerPaymentAccountManager
|| __TEXT.__text _NPKShortenedNotificationHeaderString
|| __TEXT.__text _NPKShouldAllowPeerPaymentRegistrationForWebService
|| __TEXT.__text _NPKShouldDisablePassSync
|| __TEXT.__text _NPKShouldHonorUserPreferenceTransactionStatus
|| __TEXT.__text _NPKShouldUseStandaloneSyncForPass
|| __TEXT.__text _NPKShouldUseStandaloneSyncForPassWithDevice
|| __TEXT.__text _NPKShowRedesignedUI
|| __TEXT.__text _NPKStandaloneProvisioningServiceClientExportedInterface
|| __TEXT.__text _NPKStandaloneProvisioningServiceServerExportedInterface
|| __TEXT.__text _NPKStoreLargePassDataSegmentForChangeUUID
|| __TEXT.__text _NPKStorePathForPaymentPassWithUniqueID
|| __TEXT.__text _NPKSubcredentialSharingInvitationStatusStringFromStatus
|| __TEXT.__text _NPKSupportedBarcodeFromDataAccessor
|| __TEXT.__text _NPKSupportedRegionsForWebServiceConfiguration
|| __TEXT.__text _NPKSupportsFeaturesForWebServiceConfiguration
|| __TEXT.__text _NPKTemporaryFilePath
|| __TEXT.__text _NPKTemporaryFileURL
|| __TEXT.__text _NPKTestAddPaymentPassRequest
|| __TEXT.__text _NPKTestAddPaymentPassRequestConfiguration
|| __TEXT.__text _NPKTestAddPaymentPassRequestDefaultContext
|| __TEXT.__text _NPKTestInAppPaymentRequest
|| __TEXT.__text _NPKTestInAppPaymentShippingMethods
|| __TEXT.__text _NPKTestInAppPaymentSummaryItems
|| __TEXT.__text _NPKTrackPassAction
|| __TEXT.__text _NPKTrackPassIngestionType
|| __TEXT.__text _NPKTrackPaymentProvisioningWebServicesCheck
|| __TEXT.__text _NPKTrackPaymentRequested
|| __TEXT.__text _NPKTrackPeerPaymentAction
|| __TEXT.__text _NPKTrackTransactionMode
|| __TEXT.__text _NPKTrackTransactionType
|| __TEXT.__text _NPKTrackTruthOnCard
|| __TEXT.__text _NPKTrackUWBRangingStatus
|| __TEXT.__text _NPKTransactionSourceCollectionWithCompletion
|| __TEXT.__text _NPKTranslateTransactionType
|| __TEXT.__text _NPKURLForPass
|| __TEXT.__text _NPKUniqueIDsForPasses
|| __TEXT.__text _NPKUnzipPartialPassDataToURL
|| __TEXT.__text _NPKUpdateDefaultsForRestrictedModeAndFailForward
|| __TEXT.__text _NPKUpdateTransactionSourceIdentifierForPass
|| __TEXT.__text _NPKUpdateTransitPassPropertiesForPass
|| __TEXT.__text _NPKUpdatedPassWithPartialPassData
|| __TEXT.__text _NPKUseWLAN
|| __TEXT.__text _NPKValidatePaymentWebServiceContextAgainstWatchSEIDs
|| __TEXT.__text _NPK_PKPeerPaymentStatusWithNPKPeerPaymentStatus
|| __TEXT.__text _NSStringFromNPKContactlessPaymentSessionFailureType
|| __TEXT.__text _NSStringFromNPKContactlessPaymentSessionTransactionType
|| __TEXT.__text _NSStringFromNPKDataReleaseStatus
|| __TEXT.__text _NSStringFromNPKEnforcedPasscodePolicy
|| __TEXT.__text _NSStringFromNPKExpressModeSettingsCoordinatorPassState
|| __TEXT.__text _NSStringFromNPKExpressTransactionStatus
|| __TEXT.__text _NSStringFromNPKIDVDeviceCredentialPrearmStatus
|| __TEXT.__text _NSStringFromNPKIDVRemoteDeviceCredentialStorageKeyType
|| __TEXT.__text _NSStringFromNPKIDVRemoteDeviceCredentialType
|| __TEXT.__text _NSStringFromNPKIDVRemoteDeviceDocumentType
|| __TEXT.__text _NSStringFromNPKIDVRemoteDeviceNotificationType
|| __TEXT.__text _NSStringFromNPKIDVRemoteDeviceSessionStatus
|| __TEXT.__text _NSStringFromNPKIDVRemoteDeviceTeardownReason
|| __TEXT.__text _NSStringFromNPKNanoPassbookUserNotificationType
|| __TEXT.__text _NSStringFromNPKPassSyncMethods
|| __TEXT.__text _NSStringFromNPKPasscodeUpgradeChangeType
|| __TEXT.__text _NSStringFromNPKQuickPaymentSessionCompletionReason
|| __TEXT.__text _NSStringFromNPKQuickPaymentSessionType
|| __TEXT.__text _NSStringFromNPKRemoteBiometricAuthenticationStatus
|| __TEXT.__text _NSStringFromNPKRemotePassUpgradeStatus
|| __TEXT.__text _NSStringFromNPKTransactionContextStatus
|| __TEXT.__text _NSStringWithNPKPeerPaymentStatus
|| __TEXT.__text _SyncedSettingsDidChange
|| __TEXT.__text __NPKAssertAbort
|| __TEXT.__text __OffsetRectForOpaqueRegionOfImage
|| __TEXT.__text ___IsDeviceDifferentFromLastReturnedDevice
|| __TEXT.__text ___NPKExpressSettingEffectiveState
|| __TEXT.__text ___NPKSwitchItemStateFromExpressModeSettingsCoordinatorState
|| __TEXT.__text _assertionTypeWithProtobufAssertionType
|| __TEXT.__text _isHardwarePlatformEqualToString
|| __TEXT.__text _isM8
|| __TEXT.__text _isM8p
|| __TEXT.__text _isM8pDevice
|| __TEXT.__text _isValidAssertionType
|| __TEXT.__text _pk_General_log
|| __TEXT.__text _pk_Payment_log
|| __TEXT.__text _pk_Relevance_log
|| __TEXT.__text _pk_RemotePassAction_log
|| __TEXT.__text _pk_Sync_log
|| __TEXT.__text _pk_ui_log
|| __TEXT.__text _protobufAssertionTypeWithPKAssertionType
|| __TEXT.__text _stringsArrayFromNPKIDVRemoteDeviceServiceEvents
__ Accounts: _OBJC_CLASS_$_ACAccountStore
__ AppConduit: _OBJC_CLASS_$_ACXDeviceConnection
__ AppSupport: _CPBitmapCreateImagesFromPath
__ AppSupport: _CPBitmapWriteImagesToPath
__ AssertionServices: _OBJC_CLASS_$_BKSApplicationStateMonitor
__ AssertionServices: _OBJC_CLASS_$_BKSProcessAssertion
__ AudioToolbox: _AudioServicesPlaySystemSoundWithCompletion
__ AuthKit: _AKSecurityUpgradeContextApplePay
__ AuthKit: _OBJC_CLASS_$_AKAccountManager
__ AuthKit: _OBJC_CLASS_$_AKAppleIDAuthenticationContext
__ BiomeStreams: _OBJC_CLASS_$_BMDiscoverabilitySignalEvent
__ BiomeStreams: _OBJC_CLASS_$_BMStreams
__ ChatKit: _CKMakeHandlesFromRecipients
__ ChatKit: _OBJC_CLASS_$_CKComposition
__ ChatKit: _OBJC_CLASS_$_CKConversation
__ CloudKit: _OBJC_CLASS_$_CKAccountInfo
__ CommonUtilities: _CUTWeakLinkSymbol
__ Contacts: _OBJC_CLASS_$_CNContact
__ Contacts: _OBJC_CLASS_$_CNMutablePostalAddress
__ Contacts: _OBJC_CLASS_$_CNPhoneNumber
__ CoreAnalytics: _AnalyticsSendEventLazy
__ CoreFoundation: _CFAllocatorGetDefault
__ CoreFoundation: _CFArrayCreate
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFBundleCreate
__ CoreFoundation: _CFDateFormatterCreate
__ CoreFoundation: _CFDateFormatterGetFormat
__ CoreFoundation: _CFEqual
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterGetLocalCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFNotificationCenterRemoveEveryObserver
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFPreferencesSetAppValue
__ CoreFoundation: _CFPreferencesSetValue
__ CoreFoundation: _CFPreferencesSynchronize
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRunLoopAddSource
__ CoreFoundation: _CFRunLoopGetMain
__ CoreFoundation: _CFStringCreateWithBytes
__ CoreFoundation: _CFStringFind
__ CoreFoundation: _CFUserNotificationCreate
__ CoreFoundation: _CFUserNotificationCreateRunLoopSource
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSLocaleCountryCode
__ CoreFoundation: _NSRangeException
__ CoreFoundation: _NSURLIsDirectoryKey
__ CoreFoundation: _NSURLIsSymbolicLinkKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: __CFBundleFlushBundleCaches
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBundleIdentifierKey
__ CoreFoundation: _kCFBundleVersionKey
__ CoreFoundation: _kCFPreferencesAnyApplication
__ CoreFoundation: _kCFPreferencesCurrentHost
__ CoreFoundation: _kCFPreferencesCurrentUser
__ CoreFoundation: _kCFRunLoopCommonModes
__ CoreFoundation: _kCFTypeArrayCallBacks
__ CoreFoundation: _kCFUserNotificationAlertHeaderKey
__ CoreFoundation: _kCFUserNotificationAlertMessageKey
__ CoreFoundation: _kCFUserNotificationAlternateButtonTitleKey
__ CoreFoundation: _kCFUserNotificationDefaultButtonTitleKey
__ CoreGraphics: _CGBitmapContextCreate
__ CoreGraphics: _CGBitmapContextCreateImage
__ CoreGraphics: _CGBitmapGetAlignedBytesPerRow
__ CoreGraphics: _CGColorSpaceCreateDeviceRGB
__ CoreGraphics: _CGColorSpaceCreateWithName
__ CoreGraphics: _CGColorSpaceRelease
__ CoreGraphics: _CGContextClearRect
__ CoreGraphics: _CGContextClipToRect
__ CoreGraphics: _CGContextConcatCTM
__ CoreGraphics: _CGContextDrawImage
__ CoreGraphics: _CGContextDrawPDFPage
__ CoreGraphics: _CGContextGetCTM
__ CoreGraphics: _CGContextRelease
__ CoreGraphics: _CGContextRestoreGState
__ CoreGraphics: _CGContextSaveGState
__ CoreGraphics: _CGContextScaleCTM
__ CoreGraphics: _CGContextSetBaseCTM
__ CoreGraphics: _CGContextTranslateCTM
__ CoreGraphics: _CGImageGetHeight
__ CoreGraphics: _CGImageGetWidth
__ CoreGraphics: _CGImageRelease
__ CoreGraphics: _CGPDFDocumentCreateWithURL
__ CoreGraphics: _CGPDFDocumentGetNumberOfPages
__ CoreGraphics: _CGPDFDocumentGetPage
__ CoreGraphics: _CGPDFDocumentRelease
__ CoreGraphics: _CGPDFPageGetBoxRect
__ CoreGraphics: _CGPDFPageGetDrawingTransform
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeCreateDictionaryRepresentation
__ CoreGraphics: _CGSizeZero
__ CoreGraphics: _kCGColorSpaceSRGB
__ CoreLocation: _OBJC_CLASS_$_CLGeocoder
__ CoreLocation: _OBJC_CLASS_$_CLInUseAssertion
__ CoreLocation: _OBJC_CLASS_$_CLLocation
__ CoreLocation: _OBJC_CLASS_$_CLLocationManager
__ CoreLocation: _kCLLocationAccuracyThreeKilometers
__ CoreServices: _OBJC_CLASS_$_LSApplicationProxy
__ CoreServices: _OBJC_CLASS_$_LSApplicationRecord
__ CoreServices: _OBJC_CLASS_$_LSApplicationWorkspace
__ CoreServices: _OBJC_CLASS_$_LSPlugInKitProxy
__ Foundation: _NSKeyedArchiveRootObjectKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSLocalizedRecoveryOptionsErrorKey
__ Foundation: _NSLocalizedRecoverySuggestionErrorKey
__ Foundation: _NSLog
__ Foundation: _NSStringFromClass
__ Foundation: _NSTemporaryDirectory
__ Foundation: _NSURLErrorDomain
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSCountedSet
__ Foundation: _OBJC_CLASS_$_NSDataDetector
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSDecimalNumber
__ Foundation: _OBJC_CLASS_$_NSDecimalNumberHandler
__ Foundation: _OBJC_CLASS_$_NSDistributedNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileHandle
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSFileWrapper
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSMutableURLRequest
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPersonNameComponents
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLQueryItem
__ Foundation: _OBJC_CLASS_$_NSURLSession
__ Foundation: _OBJC_CLASS_$_NSURLSessionConfiguration
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSUserActivity
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_CLASS_$_NSXPCListener
__ IDS: _IDSCopyIDForDevice
__ IDS: _IDSDefaultPairedDevice
__ IDS: _IDSMaxMessageTimeout
__ IDS: _IDSSendMessageOptionAllowCloudDeliveryKey
__ IDS: _IDSSendMessageOptionBypassDuetKey
__ IDS: _IDSSendMessageOptionEnforceRemoteTimeoutsKey
__ IDS: _IDSSendMessageOptionForceLocalDeliveryKey
__ IDS: _IDSSendMessageOptionNonWakingKey
__ IDS: _IDSSendMessageOptionPeerResponseIdentifierKey
__ IDS: _IDSSendMessageOptionQueueOneIdentifierKey
__ IDS: _IDSSendMessageOptionTimeoutKey
__ IDS: _OBJC_CLASS_$_IDSMessageContext
__ IDS: _OBJC_CLASS_$_IDSProtobuf
__ IDS: _OBJC_CLASS_$_IDSService
__ IMCore: _OBJC_CLASS_$_IMChatRegistry
__ IMCore: _OBJC_CLASS_$_IMDaemonController
__ IMCore: _OBJC_CLASS_$_IMService
__ IMCore: _kFZListenerCapChats
__ IMCore: _kFZListenerCapFileTransfers
__ IMCore: _kFZListenerCapMessageHistory
__ IOKit: _IOHIDEventGetIntegerValue
__ IOKit: _IOHIDEventSystemClientCreate
__ IOKit: _IOHIDEventSystemClientRegisterEventBlock
__ IOKit: _IOHIDEventSystemClientScheduleWithDispatchQueue
__ IOKit: _IOHIDEventSystemClientSetMatching
__ IOKit: _IOHIDEventSystemClientUnregisterEventBlock
__ IOKit: _IOHIDEventSystemClientUnscheduleFromDispatchQueue
__ IOKit: _IOPMAssertionCreateWithProperties
__ IOKit: _IOPMAssertionRelease
__ LocalAuthentication: _LAErrorDomain
__ LocalAuthentication: _OBJC_CLASS_$_LAContext
__ Messages: _OBJC_CLASS_$_MSMessage
__ Messages: _OBJC_CLASS_$_MSMessageLiveLayout
__ Messages: _OBJC_CLASS_$_MSMessageTemplateLayout
__ Messages: _OBJC_CLASS_$_MSSession
__ MobileKeyBag: _MKBDeviceUnlockedSinceBoot
__ MobileKeyBag: _MKBGetDeviceLockState
__ NanoPreferencesSync: _OBJC_CLASS_$_NPSDomainAccessor
__ NanoPreferencesSync: _OBJC_CLASS_$_NPSManager
__ NanoRegistry: _NRDevicePropertyAdditionalSEIDs
__ NanoRegistry: _NRDevicePropertyAdvertisedName
__ NanoRegistry: _NRDevicePropertyChipID
__ NanoRegistry: _NRDevicePropertyClass
__ NanoRegistry: _NRDevicePropertyHasSEP
__ NanoRegistry: _NRDevicePropertyIsAltAccount
__ NanoRegistry: _NRDevicePropertyIsArchived
__ NanoRegistry: _NRDevicePropertyIsPaired
__ NanoRegistry: _NRDevicePropertyLocalPairingDataStorePath
__ NanoRegistry: _NRDevicePropertyLocalizedModel
__ NanoRegistry: _NRDevicePropertyName
__ NanoRegistry: _NRDevicePropertyPairingID
__ NanoRegistry: _NRDevicePropertyProductType
__ NanoRegistry: _NRDevicePropertySEID
__ NanoRegistry: _NRDevicePropertyScreenScale
__ NanoRegistry: _NRDevicePropertySerialNumber
__ NanoRegistry: _NRDevicePropertySupportedFeatureIdentifiers
__ NanoRegistry: _NRDevicePropertySystemBuildVersion
__ NanoRegistry: _NRDevicePropertySystemName
__ NanoRegistry: _NRDevicePropertySystemVersion
__ NanoRegistry: _NRDevicePropertyUDID
__ NanoRegistry: _NRPairedDeviceRegistryDevice
__ NanoRegistry: _NRPairedDeviceRegistryDeviceDidBecomeActive
__ NanoRegistry: _NRPairedDeviceRegistryDeviceDidFailToPairNotification
__ NanoRegistry: _NRPairedDeviceRegistryDeviceDidPairNotification
__ NanoRegistry: _NRPairedDeviceRegistryDeviceDidUnpairDarwinNotification
__ NanoRegistry: _NRPairedDeviceRegistryDeviceDidUnpairNotification
__ NanoRegistry: _NRPairedDeviceRegistryWatchDidBecomeActiveDarwinNotification
__ NanoRegistry: _NRVersionIsGreaterThanOrEqual
__ NanoRegistry: _NRWatchOSVersionForRemoteDevice
__ NanoRegistry: _OBJC_CLASS_$_NRPairedDeviceRegistry
__ NanoRegistry: __NRDevicePropertyAltAccountAltDSID
__ NanoRegistry: __NRDevicePropertyPairingParentAltDSID
__ NanoSystemSettings: _OBJC_CLASS_$_NSSManager
__ NanoSystemSettings: _kNSSAccountDSIDKey
__ NanoSystemSettings: _kNSSAccountsKey
__ PassKitCore: _OBJC_CLASS_$_PDXPCService
__ PassKitCore: _OBJC_CLASS_$_PKAccount
__ PassKitCore: _OBJC_CLASS_$_PKAccountAttestationRequest
__ PassKitCore: _OBJC_CLASS_$_PKAccountService
__ PassKitCore: _OBJC_CLASS_$_PKAccountUserCollection
__ PassKitCore: _OBJC_CLASS_$_PKAccountWebServiceAccountsRequest
__ PassKitCore: _OBJC_CLASS_$_PKAddCarKeyPassConfiguration
__ PassKitCore: _OBJC_CLASS_$_PKAddPaymentPassController
__ PassKitCore: _OBJC_CLASS_$_PKAddPaymentPassRequest
__ PassKitCore: _OBJC_CLASS_$_PKAddPaymentPassRequestConfiguration
__ PassKitCore: _OBJC_CLASS_$_PKAnalyticsReporter
__ PassKitCore: _OBJC_CLASS_$_PKAppleAccountManager
__ PassKitCore: _OBJC_CLASS_$_PKAppleBalanceCredential
__ PassKitCore: _OBJC_CLASS_$_PKAppletSubcredential
__ PassKitCore: _OBJC_CLASS_$_PKAppletSubcredentialSharingInvitation
__ PassKitCore: _OBJC_CLASS_$_PKAppletSubcredentialSharingInvitationMetadata
__ PassKitCore: _OBJC_CLASS_$_PKAppletSubcredentialSharingSession
__ PassKitCore: _OBJC_CLASS_$_PKAssertion
__ PassKitCore: _OBJC_CLASS_$_PKAsyncUnaryOperationComposer
__ PassKitCore: _OBJC_CLASS_$_PKBarcode
__ PassKitCore: _OBJC_CLASS_$_PKBarcodeEventMetadataRequest
__ PassKitCore: _OBJC_CLASS_$_PKBarcodePaymentEvent
__ PassKitCore: _OBJC_CLASS_$_PKCatalog
__ PassKitCore: _OBJC_CLASS_$_PKCloudStoreService
__ PassKitCore: _OBJC_CLASS_$_PKColor
__ PassKitCore: _OBJC_CLASS_$_PKContact
__ PassKitCore: _OBJC_CLASS_$_PKContactlessCardIngester
__ PassKitCore: _OBJC_CLASS_$_PKContactlessInterfaceTransactionContext
__ PassKitCore: _OBJC_CLASS_$_PKCurrencyAmount
__ PassKitCore: _OBJC_CLASS_$_PKDiff
__ PassKitCore: _OBJC_CLASS_$_PKExpressPassInformation
__ PassKitCore: _OBJC_CLASS_$_PKExtensionProvider
__ PassKitCore: _OBJC_CLASS_$_PKFeatureApplication
__ PassKitCore: _OBJC_CLASS_$_PKFelicaAppletHistory
__ PassKitCore: _OBJC_CLASS_$_PKFieldDetector
__ PassKitCore: _OBJC_CLASS_$_PKFileDataAccessor
__ PassKitCore: _OBJC_CLASS_$_PKGroupsController
__ PassKitCore: _OBJC_CLASS_$_PKImage
__ PassKitCore: _OBJC_CLASS_$_PKImageResizingConstraints
__ PassKitCore: _OBJC_CLASS_$_PKLabeledValue
__ PassKitCore: _OBJC_CLASS_$_PKNFCPayload
__ PassKitCore: _OBJC_CLASS_$_PKOSVersionRequirement
__ PassKitCore: _OBJC_CLASS_$_PKOSVersionRequirementRange
__ PassKitCore: _OBJC_CLASS_$_PKObject
__ PassKitCore: _OBJC_CLASS_$_PKOpaqueDataServiceProviderOrder
__ PassKitCore: _OBJC_CLASS_$_PKPass
__ PassKitCore: _OBJC_CLASS_$_PKPassField
__ PassKitCore: _OBJC_CLASS_$_PKPassFrontFaceImageSet
__ PassKitCore: _OBJC_CLASS_$_PKPassLibrary
__ PassKitCore: _OBJC_CLASS_$_PKPassLogoImageSet
__ PassKitCore: _OBJC_CLASS_$_PKPaymentApplication
__ PassKitCore: _OBJC_CLASS_$_PKPaymentAuthorizationDataModel
__ PassKitCore: _OBJC_CLASS_$_PKPaymentAuthorizationResult
__ PassKitCore: _OBJC_CLASS_$_PKPaymentAvailableProductsRequest
__ PassKitCore: _OBJC_CLASS_$_PKPaymentAvailableProductsResponse
__ PassKitCore: _OBJC_CLASS_$_PKPaymentBalance
__ PassKitCore: _OBJC_CLASS_$_PKPaymentBalanceReminder
__ PassKitCore: _OBJC_CLASS_$_PKPaymentCommutePlanReminder
__ PassKitCore: _OBJC_CLASS_$_PKPaymentContactlessProductCredential
__ PassKitCore: _OBJC_CLASS_$_PKPaymentCredential
__ PassKitCore: _OBJC_CLASS_$_PKPaymentDeviceConfigurationData
__ PassKitCore: _OBJC_CLASS_$_PKPaymentDeviceMetadata
__ PassKitCore: _OBJC_CLASS_$_PKPaymentDeviceProvisioningData
__ PassKitCore: _OBJC_CLASS_$_PKPaymentDeviceRegistrationData
__ PassKitCore: _OBJC_CLASS_$_PKPaymentDigitalIssuanceProductCredential
__ PassKitCore: _OBJC_CLASS_$_PKPaymentEligibilityRequest
__ PassKitCore: _OBJC_CLASS_$_PKPaymentHeroImage
__ PassKitCore: _OBJC_CLASS_$_PKPaymentHeroImageController
__ PassKitCore: _OBJC_CLASS_$_PKPaymentInformationEventExtensionHostContext
__ PassKitCore: _OBJC_CLASS_$_PKPaymentIssuerProvisioningCertificatesRequest
__ PassKitCore: _OBJC_CLASS_$_PKPaymentLocalPassCredential
__ PassKitCore: _OBJC_CLASS_$_PKPaymentOptionsDefaults
__ PassKitCore: _OBJC_CLASS_$_PKPaymentPass
__ PassKitCore: _OBJC_CLASS_$_PKPaymentPassAction
__ PassKitCore: _OBJC_CLASS_$_PKPaymentProvisioningRequest
__ PassKitCore: _OBJC_CLASS_$_PKPaymentRegistrationUtilities
__ PassKitCore: _OBJC_CLASS_$_PKPaymentRemoteCredential
__ PassKitCore: _OBJC_CLASS_$_PKPaymentRemoteCredentialsRequest
__ PassKitCore: _OBJC_CLASS_$_PKPaymentRequest
__ PassKitCore: _OBJC_CLASS_$_PKPaymentRequirementsRequest
__ PassKitCore: _OBJC_CLASS_$_PKPaymentService
__ PassKitCore: _OBJC_CLASS_$_PKPaymentSession
__ PassKitCore: _OBJC_CLASS_$_PKPaymentSetupField
__ PassKitCore: _OBJC_CLASS_$_PKPaymentSetupFieldsModel
__ PassKitCore: _OBJC_CLASS_$_PKPaymentSetupProduct
__ PassKitCore: _OBJC_CLASS_$_PKPaymentSetupProductModel
__ PassKitCore: _OBJC_CLASS_$_PKPaymentSummaryItem
__ PassKitCore: _OBJC_CLASS_$_PKPaymentTransaction
__ PassKitCore: _OBJC_CLASS_$_PKPaymentVerificationOptionsRequest
__ PassKitCore: _OBJC_CLASS_$_PKPaymentVerificationUpdateRequest
__ PassKitCore: _OBJC_CLASS_$_PKPaymentWebService
__ PassKitCore: _OBJC_CLASS_$_PKPaymentWebServiceConfiguration
__ PassKitCore: _OBJC_CLASS_$_PKPaymentWebServiceContext
__ PassKitCore: _OBJC_CLASS_$_PKPaymentWebServiceTargetDevice
__ PassKitCore: _OBJC_CLASS_$_PKPeerPaymentAccount
__ PassKitCore: _OBJC_CLASS_$_PKPeerPaymentController
__ PassKitCore: _OBJC_CLASS_$_PKPeerPaymentIdentityVerificationResponse
__ PassKitCore: _OBJC_CLASS_$_PKPeerPaymentPreferences
__ PassKitCore: _OBJC_CLASS_$_PKPeerPaymentQuote
__ PassKitCore: _OBJC_CLASS_$_PKPeerPaymentService
__ PassKitCore: _OBJC_CLASS_$_PKPeerPaymentUpdatePreferencesRequest
__ PassKitCore: _OBJC_CLASS_$_PKPeerPaymentWebService
__ PassKitCore: _OBJC_CLASS_$_PKPeerPaymentWebServiceContext
__ PassKitCore: _OBJC_CLASS_$_PKRemoteAssetManifest
__ PassKitCore: _OBJC_CLASS_$_PKSecureElement
__ PassKitCore: _OBJC_CLASS_$_PKSecureElementApplet
__ PassKitCore: _OBJC_CLASS_$_PKSecureElementPass
__ PassKitCore: _OBJC_CLASS_$_PKSecureElementSignatureInfo
__ PassKitCore: _OBJC_CLASS_$_PKSerializedDataAccessor
__ PassKitCore: _OBJC_CLASS_$_PKServiceProviderPaymentRequest
__ PassKitCore: _OBJC_CLASS_$_PKSharedPaymentWebServiceArchiver
__ PassKitCore: _OBJC_CLASS_$_PKShippingMethod
__ PassKitCore: _OBJC_CLASS_$_PKSimulatorPaymentPass
__ PassKitCore: _OBJC_CLASS_$_PKSubcredentialProvisioningAcceptInvitationConfiguration
__ PassKitCore: _OBJC_CLASS_$_PKSubcredentialProvisioningController
__ PassKitCore: _OBJC_CLASS_$_PKTransactionSource
__ PassKitCore: _OBJC_CLASS_$_PKTransactionSourceCollection
__ PassKitCore: _OBJC_CLASS_$_PKTransitAppletBalance
__ PassKitCore: _OBJC_CLASS_$_PKTransitAppletHistory
__ PassKitCore: _OBJC_CLASS_$_PKTransitAppletState
__ PassKitCore: _OBJC_CLASS_$_PKTransitCommutePlan
__ PassKitCore: _OBJC_CLASS_$_PKTransitPassProperties
__ PassKitCore: _OBJC_CLASS_$_PKTrustedDeviceEnrollmentInfo
__ PassKitCore: _OBJC_CLASS_$_PKValueAddedServiceTransaction
__ PassKitCore: _OBJC_CLASS_$_PKXPCService
__ PassKitCore: _OBJC_METACLASS_$_PDXPCService
__ PassKitCore: _OBJC_METACLASS_$_PKAddPaymentPassController
__ PassKitCore: _OBJC_METACLASS_$_PKFileDataAccessor
__ PassKitCore: _OBJC_METACLASS_$_PKPaymentWebServiceTargetDevice
__ PassKitCore: _OBJC_METACLASS_$_PKSecureElement
__ PassKitCore: _PKAccountStateToString
__ PassKitCore: _PKAnalyticsReportBarcodeCredentialRetrievalStatusKey
__ PassKitCore: _PKAnalyticsReportBarcodeCredentialRetrivalStatusFromError
__ PassKitCore: _PKAnalyticsReportErrorCodeKey
__ PassKitCore: _PKAnalyticsReportErrorDomainKey
__ PassKitCore: _PKAnalyticsReportErrorTypeKey
__ PassKitCore: _PKAnalyticsReportErrorTypeUntrustedReader
__ PassKitCore: _PKAnalyticsReportEventKey
__ PassKitCore: _PKAnalyticsReportEventTypeAuthenticationCanceledByUser
__ PassKitCore: _PKAnalyticsReportEventTypeAuthenticationError
__ PassKitCore: _PKAnalyticsReportEventTypeAuthenticationSuccess
__ PassKitCore: _PKAnalyticsReportEventTypeBarcodeCredentialRetrieved
__ PassKitCore: _PKAnalyticsReportEventTypeBarcodePaymentTransactionApproved
__ PassKitCore: _PKAnalyticsReportEventTypeBarcodePaymentTransactionDeclined
__ PassKitCore: _PKAnalyticsReportEventTypeExtensionMatchFinished
__ PassKitCore: _PKAnalyticsReportEventTypeFieldEntered
__ PassKitCore: _PKAnalyticsReportEventTypeFieldExited
__ PassKitCore: _PKAnalyticsReportEventTypePaymentTransactionAuthorizationStatusUpdated
__ PassKitCore: _PKAnalyticsReportEventTypeReaderError
__ PassKitCore: _PKAnalyticsReportEventTypeStartAuthentication
__ PassKitCore: _PKAnalyticsReportEventTypeStateChange
__ PassKitCore: _PKAnalyticsReportExtensionPointKey
__ PassKitCore: _PKAnalyticsReportNotificationReceived
__ PassKitCore: _PKAnalyticsReportNotificationTypeTransactionCompleted
__ PassKitCore: _PKAnalyticsReportNumberOfMatchedExtensionsKey
__ PassKitCore: _PKAnalyticsReportPageTagKey
__ PassKitCore: _PKAnalyticsReportPassFooterTag
__ PassKitCore: _PKAnalyticsReportPassHasNFCKey
__ PassKitCore: _PKAnalyticsReportPassProductSubtypeKey
__ PassKitCore: _PKAnalyticsReportPassProductTypeKey
__ PassKitCore: _PKAnalyticsReportPassStyleKey
__ PassKitCore: _PKAnalyticsReportPassTypeKey
__ PassKitCore: _PKAnalyticsReportPaymentAuthorizationStatusKey
__ PassKitCore: _PKAnalyticsReportSwitchToggleResultValue
__ PassKitCore: _PKAnalyticsSubjectContactless
__ PassKitCore: _PKAnalyticsSubjectWallet
__ PassKitCore: _PKBypassStockholmRegionCheck
__ PassKitCore: _PKCacheDirectoryPath
__ PassKitCore: _PKCardsDirectoryURL
__ PassKitCore: _PKCloudKitPassSyncEnabled
__ PassKitCore: _PKCombinedHash
__ PassKitCore: _PKContactFieldEmailAddress
__ PassKitCore: _PKContactFieldPhoneNumber
__ PassKitCore: _PKContactFieldPostalAddress
__ PassKitCore: _PKCurrencyAmountMake
__ PassKitCore: _PKCurrencyDecimalToStorageInteger
__ PassKitCore: _PKCurrencyStorageIntegerToDecimal
__ PassKitCore: _PKCurrentMobileCarrierRegion
__ PassKitCore: _PKCurrentRegion
__ PassKitCore: _PKDarwinNotificationDefaultPaymentPassChanged
__ PassKitCore: _PKDarwinNotificationEventExpressPassesInformationChanged
__ PassKitCore: _PKDeviceClass
__ PassKitCore: _PKDevicePasscodeLocked
__ PassKitCore: _PKDevicePhoneNumber
__ PassKitCore: _PKDeviceSupportsFelicaDebitWithWebService
__ PassKitCore: _PKDisableStockholmInRegion
__ PassKitCore: _PKDisplayableErrorCustom
__ PassKitCore: _PKDisplayableErrorDomain
__ PassKitCore: _PKDisplayableErrorForCommonType
__ PassKitCore: _PKDisplayableErrorPreferredActionKey
__ PassKitCore: _PKDisplayablePaymentNetworkNameForPaymentCredentialType
__ PassKitCore: _PKDistributedNotificationExpressEntered
__ PassKitCore: _PKDistributedNotificationExpressExited
__ PassKitCore: _PKDistributedNotificationExpressTransactionEnded
__ PassKitCore: _PKDistributedNotificationExpressTransactionEndedFailure
__ PassKitCore: _PKDistributedNotificationExpressTransactionEndedIncompatible
__ PassKitCore: _PKDistributedNotificationExpressTransactionStarted
__ PassKitCore: _PKDistributedNotificationExpressTransactionTimeout
__ PassKitCore: _PKEncryptTransactionAuthenticationPasscode
__ PassKitCore: _PKEncryptionSchemeECC_V2
__ PassKitCore: _PKEqualObjects
__ PassKitCore: _PKErrorRecoveryURLKey
__ PassKitCore: _PKExpressPassCategoryIdentifier
__ PassKitCore: _PKExtensionPaymentInformationEventExtensionPointName
__ PassKitCore: _PKFakeCardholderName
__ PassKitCore: _PKFeatureIdentifierToString
__ PassKitCore: _PKFelicaSecureElementIsAvailable
__ PassKitCore: _PKForcePrivateLabelSetupDisambiguation
__ PassKitCore: _PKFormattedSanitizedPAN
__ PassKitCore: _PKGeneratePassUniqueID
__ PassKitCore: _PKGetClassNFDigitalCarKeySession
__ PassKitCore: _PKGetClassNFHardwareManager
__ PassKitCore: _PKHandsOnDemoModeEnabled
__ PassKitCore: _PKHasVerifiedPrimaryAppleAccount
__ PassKitCore: _PKHashStartingValue
__ PassKitCore: _PKHomeDirectoryPath
__ PassKitCore: _PKInAppSupportedPaymentNetworks
__ PassKitCore: _PKIsInternalInstall
__ PassKitCore: _PKIsOpenLoopCredentialType
__ PassKitCore: _PKIsPhone
__ PassKitCore: _PKIsPod
__ PassKitCore: _PKIsWatch
__ PassKitCore: _PKLocalizedLynxString
__ PassKitCore: _PKLocalizedPaymentString
__ PassKitCore: _PKLocalizedPaymentUnitKeyForType
__ PassKitCore: _PKLocalizedPeerPaymentString
__ PassKitCore: _PKLocalizedString
__ PassKitCore: _PKLogFacilityTypeGetObject
__ PassKitCore: _PKManifestHash
__ PassKitCore: _PKMaxExtendedPerPassPaymentTransactionHistory
__ PassKitCore: _PKMaxPaymentCards
__ PassKitCore: _PKMaxPaymentTransactionsForCredentialType
__ PassKitCore: _PKMerchantCapabilityFromStrings
__ PassKitCore: _PKMerchantCapabilityToStrings
__ PassKitCore: _PKMutableNumberFormatterForCurrencyCode
__ PassKitCore: _PKNFCPassKeyOptional
__ PassKitCore: _PKOSVersion
__ PassKitCore: _PKPassAutomaticSelectionTechnologyTypeForExpressEnteredObject
__ PassKitCore: _PKPassAutomaticSelectionTechnologyTypeFromType
__ PassKitCore: _PKPassBarcodeKeyFormat
__ PassKitCore: _PKPassBundleBankLogoImageName
__ PassKitCore: _PKPassBundleCardBackgroundCombinedImageName
__ PassKitCore: _PKPassBundleCardBackgroundImageName
__ PassKitCore: _PKPassBundleCobrandLogoImageName
__ PassKitCore: _PKPassBundleManifestJSONFileName
__ PassKitCore: _PKPassBundleNetworkLogoImageName
__ PassKitCore: _PKPassBundleSignatureName
__ PassKitCore: _PKPassKeyBarcode
__ PassKitCore: _PKPassKeyBarcodes
__ PassKitCore: _PKPassKeyPassDescription
__ PassKitCore: _PKPassKeyPaymentApplications
__ PassKitCore: _PKPassKeySerialNumber
__ PassKitCore: _PKPassKitBundle
__ PassKitCore: _PKPassKitCoreBundle
__ PassKitCore: _PKPassKitErrorDomain
__ PassKitCore: _PKPassLibraryDidAddPassNotification
__ PassKitCore: _PKPassLibraryDidChangeNotification
__ PassKitCore: _PKPassLibraryDidRemovePassNotification
__ PassKitCore: _PKPassLibraryDidUpdatePassNotification
__ PassKitCore: _PKPassLibrarySettingsUserInfoKey
__ PassKitCore: _PKPassLibraryUniqueIDUserInfoKey
__ PassKitCore: _PKPassListUserActivityType
__ PassKitCore: _PKPassPaymentApplicationsKeyPaymentNetworkIdentifier
__ PassKitCore: _PKPassSettingsDidChangeNotification
__ PassKitCore: _PKPassbookBulletinPassUniqueIdentifierKey
__ PassKitCore: _PKPaymentApplicationStateIsPersonalized
__ PassKitCore: _PKPaymentBalanceStoredValueDefaultIdentifier
__ PassKitCore: _PKPaymentCardTypeToString
__ PassKitCore: _PKPaymentCredentialTypeForPaymentNetworkName
__ PassKitCore: _PKPaymentExpressModeSuica
__ PassKitCore: _PKPaymentNetworkAmex
__ PassKitCore: _PKPaymentNetworkChinaUnionPay
__ PassKitCore: _PKPaymentNetworkDiscover
__ PassKitCore: _PKPaymentNetworkInterac
__ PassKitCore: _PKPaymentNetworkMasterCard
__ PassKitCore: _PKPaymentNetworkNameForPaymentCredentialType
__ PassKitCore: _PKPaymentNetworkPrivateLabel
__ PassKitCore: _PKPaymentNetworkSuica
__ PassKitCore: _PKPaymentNetworkVisa
__ PassKitCore: _PKPaymentPassActionTypeToString
__ PassKitCore: _PKPaymentPassCardHolderKey
__ PassKitCore: _PKPaymentPassCommuterRoute
__ PassKitCore: _PKPaymentProvisioningControllerLocalizedProgressDescriptionDidChangeNotification
__ PassKitCore: _PKPaymentProvisioningControllerStateToString
__ PassKitCore: _PKPaymentProvisioningMethodDigitalIssuance
__ PassKitCore: _PKPaymentProvisioningMethodLocalizedDescriptionKey
__ PassKitCore: _PKPaymentProvisioningMethodLocalizedTitleKey
__ PassKitCore: _PKPaymentProvisioningMethodReaderMode
__ PassKitCore: _PKPaymentProvisioningMethodReaderModeAnimationKey
__ PassKitCore: _PKPaymentProvisioningMethodScreensKey
__ PassKitCore: _PKPaymentSetupFieldIdentifierCardExpiration
__ PassKitCore: _PKPaymentSetupFieldIdentifierCardOnFilePrimaryAccountNumber
__ PassKitCore: _PKPaymentSetupFieldIdentifierCardSecurityCode
__ PassKitCore: _PKPaymentSetupFieldIdentifierCardholderName
__ PassKitCore: _PKPaymentSetupFieldIdentifierPrimaryAccountNumber
__ PassKitCore: _PKPaymentSetupFieldSubmissionDestinationActivation
__ PassKitCore: _PKPaymentSetupFieldSubmissionDestinationEligibility
__ PassKitCore: _PKPaymentSetupFieldSubmissionDestinationEnable
__ PassKitCore: _PKPaymentSetupProductStateToString
__ PassKitCore: _PKPaymentSetupProductTypeToString
__ PassKitCore: _PKPaymentTransactionShouldAuthenticateForMechanism
__ PassKitCore: _PKPaymentTransactionStatusToString
__ PassKitCore: _PKPaymentWebServiceErrorDomain
__ PassKitCore: _PKPeerPaymentActionAccept
__ PassKitCore: _PKPeerPaymentQuoteItemTypeToString
__ PassKitCore: _PKPeerPaymentRecipientStatusToString
__ PassKitCore: _PKPeerPaymentServiceAccountChangedNotification
__ PassKitCore: _PKPeerPaymentServiceOverrideURL
__ PassKitCore: _PKPeerPaymentTargetDeviceAccountDidChangeNotification
__ PassKitCore: _PKPeerPaymentWebServiceErrorDomain
__ PassKitCore: _PKPreferencesDidChangeNotification
__ PassKitCore: _PKPrimaryAppleAccountFormattedUsername
__ PassKitCore: _PKProvisioningErrorForAppleBalanceEligibilityStatus
__ PassKitCore: _PKRawPassExtension
__ PassKitCore: _PKRelativePathAfterResolvingSymlinks
__ PassKitCore: _PKSanitizedDeviceAccountNumberForPaymentApplication
__ PassKitCore: _PKSanitizedPrimaryAccountRepresentationForPass
__ PassKitCore: _PKScreenScale
__ PassKitCore: _PKScreenSize
__ PassKitCore: _PKSecureElementIsAvailable
__ PassKitCore: _PKServiceProviderOrderAmountKey
__ PassKitCore: _PKSimulatorPaymentPassResourceName
__ PassKitCore: _PKSizeAspectFit
__ PassKitCore: _PKSizeAspectFitToCover
__ PassKitCore: _PKSizeCeilToPixelWithScale
__ PassKitCore: _PKStockholmDomain
__ PassKitCore: _PKStockholmMaxPaymentCardsKey
__ PassKitCore: _PKStockholmSetupSupportedInRegion
__ PassKitCore: _PKStockholmSupportedRegionsKey
__ PassKitCore: _PKSubcredentialProvisioningErrorDomain
__ PassKitCore: _PKTemporaryItemURLWithExtension
__ PassKitCore: _PKTransactionAuthenticationMechanismToStrings
__ PassKitCore: _PKTransactionPaymentHashForBarcodeIdentifier
__ PassKitCore: _PKTransactionsUnlimitedForCredentialType
__ PassKitCore: _PKTransitAppletDataFormatBMAC
__ PassKitCore: _PKTransitAppletDataFormatMOT
__ PassKitCore: _PKTransitAppletDataFormatSPTCC
__ PassKitCore: _PKTransitCommutePlanGenericCountPlanAmountRemainingKey
__ PassKitCore: _PKUIApplicationWillEnterForegroundNotification
__ PassKitCore: _PKUIOnlyDemoModeEnabled
__ PassKitCore: _PKURLManifestExtension
__ PassKitCore: _PKUseMockSURFServer
__ PassKitCore: _PKUserHasDisabledPeerPaymentKey
__ PassKitCore: _PKUserNotificationExpressModeEnabledHideDisableActionKey
__ PassKitCore: _PKUserNotificationsBundleIdentifier
__ PassKitCore: _PKViewPassUserActivityPassKey
__ PassKitCore: _PKViewPassUserActivityType
__ PassKitCore: _PKWebServiceErrorDomain
__ PassKitCore: __PKEnumValueFromString
__ PassKitCore: __Z15PKUnarchiverZipP6NSDataP5NSURL
__ PassKitCore: __Z17PKArchiverZipDataP5NSURL
__ PassKitCore: __Z22PKCurrencyAmountCreateP15NSDecimalNumberP8NSStringl
__ ProtocolBuffer: _OBJC_CLASS_$_PBCodable
__ ProtocolBuffer: _OBJC_CLASS_$_PBRequest
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._bytes
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._error
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._length
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._pos
__ ProtocolBuffer: _OBJC_METACLASS_$_PBCodable
__ ProtocolBuffer: _OBJC_METACLASS_$_PBRequest
__ ProtocolBuffer: _PBDataWriterWriteBOOLField
__ ProtocolBuffer: _PBDataWriterWriteDataField
__ ProtocolBuffer: _PBDataWriterWriteDoubleField
__ ProtocolBuffer: _PBDataWriterWriteFloatField
__ ProtocolBuffer: _PBDataWriterWriteInt32Field
__ ProtocolBuffer: _PBDataWriterWriteInt64Field
__ ProtocolBuffer: _PBDataWriterWriteSint64Field
__ ProtocolBuffer: _PBDataWriterWriteStringField
__ ProtocolBuffer: _PBDataWriterWriteSubmessage
__ ProtocolBuffer: _PBDataWriterWriteUint32Field
__ ProtocolBuffer: _PBDataWriterWriteUint64Field
__ ProtocolBuffer: _PBReaderPlaceMark
__ ProtocolBuffer: _PBReaderReadData
__ ProtocolBuffer: _PBReaderReadString
__ ProtocolBuffer: _PBReaderRecallMark
__ ProtocolBuffer: _PBReaderSkipValueWithTag
__ ProtocolBuffer: _PBRepeatedInt32Add
__ ProtocolBuffer: _PBRepeatedInt32Clear
__ ProtocolBuffer: _PBRepeatedInt32Copy
__ ProtocolBuffer: _PBRepeatedInt32Hash
__ ProtocolBuffer: _PBRepeatedInt32IsEqual
__ ProtocolBuffer: _PBRepeatedInt32Set
__ ProtocolBuffer: _PBRepeatedUInt32Add
__ ProtocolBuffer: _PBRepeatedUInt32Clear
__ ProtocolBuffer: _PBRepeatedUInt32Copy
__ ProtocolBuffer: _PBRepeatedUInt32Hash
__ ProtocolBuffer: _PBRepeatedUInt32IsEqual
__ ProtocolBuffer: _PBRepeatedUInt32NSArray
__ ProtocolBuffer: _PBRepeatedUInt32Set
__ Security: _SecRandomCopyBytes
__ Security: _kSecRandomDefault
__ SoftLinking: __sl_dlopen
__ ToneLibrary: _TLAlertTopicAppNotificationFirstParty
__ UserNotifications: _OBJC_CLASS_$_UNMutableNotificationContent
__ UserNotifications: _OBJC_CLASS_$_UNMutableNotificationSound
__ UserNotifications: _OBJC_CLASS_$_UNNotificationCategory
__ UserNotifications: _OBJC_CLASS_$_UNNotificationIcon
__ UserNotifications: _OBJC_CLASS_$_UNNotificationRequest
__ UserNotifications: _OBJC_CLASS_$_UNUserNotificationCenter
__ UserNotifications: _UNAuthorizationStatusString
__ libAccessibility.dylib: __AXSAccessibilitySecureIntentProvider
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: _CC_SHA1
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _abort
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _arc4random_uniform
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_set_target_queue
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dispatch_walltime
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _fmod
__ libSystem.B.dylib: _fmodf
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _kdebug_trace
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _notify_is_valid_token
__ libSystem.B.dylib: _notify_post
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_transaction_create
__ libSystem.B.dylib: _os_unfair_lock_assert_owner
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _proc_name
__ libSystem.B.dylib: _sysctl
__ libSystem.B.dylib: _usleep
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_allocWithZone
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libsqlite3.dylib: _sqlite3_bind_blob
__ libsqlite3.dylib: _sqlite3_bind_int
__ libsqlite3.dylib: _sqlite3_bind_int64
__ libsqlite3.dylib: _sqlite3_bind_null
__ libsqlite3.dylib: _sqlite3_bind_text
__ libsqlite3.dylib: _sqlite3_clear_bindings
__ libsqlite3.dylib: _sqlite3_close
__ libsqlite3.dylib: _sqlite3_close_v2
__ libsqlite3.dylib: _sqlite3_column_blob
__ libsqlite3.dylib: _sqlite3_column_bytes
__ libsqlite3.dylib: _sqlite3_column_int
__ libsqlite3.dylib: _sqlite3_column_int64
__ libsqlite3.dylib: _sqlite3_column_text
__ libsqlite3.dylib: _sqlite3_errmsg
__ libsqlite3.dylib: _sqlite3_exec
__ libsqlite3.dylib: _sqlite3_finalize
__ libsqlite3.dylib: _sqlite3_open_v2
__ libsqlite3.dylib: _sqlite3_prepare_v2
__ libsqlite3.dylib: _sqlite3_reset
__ libsqlite3.dylib: _sqlite3_sql
__ libsqlite3.dylib: _sqlite3_step
NPKProtoCheckTLKsMissingRequest : PBRequest <NSCopying>
  // instance methods
  -[NPKProtoCheckTLKsMissingRequest mergeFrom:]
  -[NPKProtoCheckTLKsMissingRequest dictionaryRepresentation]
  -[NPKProtoCheckTLKsMissingRequest writeTo:]
  -[NPKProtoCheckTLKsMissingRequest isEqual:]
  -[NPKProtoCheckTLKsMissingRequest copyTo:]
  -[NPKProtoCheckTLKsMissingRequest readFrom:]
  -[NPKProtoCheckTLKsMissingRequest copyWithZone:]


NPKProtoAssertionRequest : PBRequest <NSCopying>
 @property  NSString *requestUUIDString
 @property  BOOL hasAssertionType
 @property  int assertionType
 @property  BOOL hasPending
 @property  BOOL pending

  // instance methods
  -[NPKProtoAssertionRequest pending]
  -[NPKProtoAssertionRequest mergeFrom:]
  -[NPKProtoAssertionRequest setPending:]
  -[NPKProtoAssertionRequest .cxx_destruct]
  -[NPKProtoAssertionRequest setAssertionType:]
  -[NPKProtoAssertionRequest dictionaryRepresentation]
  -[NPKProtoAssertionRequest writeTo:]
  -[NPKProtoAssertionRequest isEqual:]
  -[NPKProtoAssertionRequest assertionType]
  -[NPKProtoAssertionRequest copyTo:]
  -[NPKProtoAssertionRequest readFrom:]
  -[NPKProtoAssertionRequest copyWithZone:]
  -[NPKProtoAssertionRequest setHasAssertionType:]
  -[NPKProtoAssertionRequest hasAssertionType]
  -[NPKProtoAssertionRequest setRequestUUIDString:]
  -[NPKProtoAssertionRequest assertionTypeAsString:]
  -[NPKProtoAssertionRequest StringAsAssertionType:]
  -[NPKProtoAssertionRequest setHasPending:]
  -[NPKProtoAssertionRequest hasPending]
  -[NPKProtoAssertionRequest requestUUIDString]


NPKProtoPasscodeUpgradeFlowPresentationRequest : PBRequest <NSCopying>
 @property  BOOL hasChangeType
 @property  int changeType

  // instance methods
  -[NPKProtoPasscodeUpgradeFlowPresentationRequest changeType]
  -[NPKProtoPasscodeUpgradeFlowPresentationRequest mergeFrom:]
  -[NPKProtoPasscodeUpgradeFlowPresentationRequest StringAsChangeType:]
  -[NPKProtoPasscodeUpgradeFlowPresentationRequest changeTypeAsString:]
  -[NPKProtoPasscodeUpgradeFlowPresentationRequest dictionaryRepresentation]
  -[NPKProtoPasscodeUpgradeFlowPresentationRequest hasChangeType]
  -[NPKProtoPasscodeUpgradeFlowPresentationRequest writeTo:]
  -[NPKProtoPasscodeUpgradeFlowPresentationRequest isEqual:]
  -[NPKProtoPasscodeUpgradeFlowPresentationRequest setChangeType:]
  -[NPKProtoPasscodeUpgradeFlowPresentationRequest copyTo:]
  -[NPKProtoPasscodeUpgradeFlowPresentationRequest readFrom:]
  -[NPKProtoPasscodeUpgradeFlowPresentationRequest copyWithZone:]
  -[NPKProtoPasscodeUpgradeFlowPresentationRequest setHasChangeType:]


NPKIDVRemoteDeviceProtoCredentialPropertiesResponse : PBCodable <NSCopying>
 @property  BOOL hasCredentialPropertiesData
 @property  NSData *credentialPropertiesData
 @property  BOOL hasErrorData
 @property  NSData *errorData

  // instance methods
  -[NPKIDVRemoteDeviceProtoCredentialPropertiesResponse mergeFrom:]
  -[NPKIDVRemoteDeviceProtoCredentialPropertiesResponse .cxx_destruct]
  -[NPKIDVRemoteDeviceProtoCredentialPropertiesResponse dictionaryRepresentation]
  -[NPKIDVRemoteDeviceProtoCredentialPropertiesResponse writeTo:]
  -[NPKIDVRemoteDeviceProtoCredentialPropertiesResponse isEqual:]
  -[NPKIDVRemoteDeviceProtoCredentialPropertiesResponse copyTo:]
  -[NPKIDVRemoteDeviceProtoCredentialPropertiesResponse readFrom:]
  -[NPKIDVRemoteDeviceProtoCredentialPropertiesResponse copyWithZone:]
  -[NPKIDVRemoteDeviceProtoCredentialPropertiesResponse errorData]
  -[NPKIDVRemoteDeviceProtoCredentialPropertiesResponse hasErrorData]
  -[NPKIDVRemoteDeviceProtoCredentialPropertiesResponse setErrorData:]
  -[NPKIDVRemoteDeviceProtoCredentialPropertiesResponse setCredentialPropertiesData:]
  -[NPKIDVRemoteDeviceProtoCredentialPropertiesResponse hasCredentialPropertiesData]
  -[NPKIDVRemoteDeviceProtoCredentialPropertiesResponse credentialPropertiesData]


NPKProtoRemoveExpressPassWithUniqueIdentifierRequest : PBRequest <NSCopying>
 @property  BOOL hasUniqueID
 @property  NSString *uniqueID

  // instance methods
  -[NPKProtoRemoveExpressPassWithUniqueIdentifierRequest mergeFrom:]
  -[NPKProtoRemoveExpressPassWithUniqueIdentifierRequest uniqueID]
  -[NPKProtoRemoveExpressPassWithUniqueIdentifierRequest .cxx_destruct]
  -[NPKProtoRemoveExpressPassWithUniqueIdentifierRequest dictionaryRepresentation]
  -[NPKProtoRemoveExpressPassWithUniqueIdentifierRequest writeTo:]
  -[NPKProtoRemoveExpressPassWithUniqueIdentifierRequest isEqual:]
  -[NPKProtoRemoveExpressPassWithUniqueIdentifierRequest copyTo:]
  -[NPKProtoRemoveExpressPassWithUniqueIdentifierRequest readFrom:]
  -[NPKProtoRemoveExpressPassWithUniqueIdentifierRequest setUniqueID:]
  -[NPKProtoRemoveExpressPassWithUniqueIdentifierRequest copyWithZone:]
  -[NPKProtoRemoveExpressPassWithUniqueIdentifierRequest hasUniqueID]


NPKProtoProvisionPassForRemoteCredentialWithTypeAndIdentifierResponse : PBCodable <NSCopying>
 @property  BOOL hasPending
 @property  BOOL pending
 @property  BOOL hasSuccess
 @property  BOOL success
 @property  BOOL hasErrorData
 @property  NSData *errorData

  // instance methods
  -[NPKProtoProvisionPassForRemoteCredentialWithTypeAndIdentifierResponse setSuccess:]
  -[NPKProtoProvisionPassForRemoteCredentialWithTypeAndIdentifierResponse success]
  -[NPKProtoProvisionPassForRemoteCredentialWithTypeAndIdentifierResponse pending]
  -[NPKProtoProvisionPassForRemoteCredentialWithTypeAndIdentifierResponse mergeFrom:]
  -[NPKProtoProvisionPassForRemoteCredentialWithTypeAndIdentifierResponse setPending:]
  -[NPKProtoProvisionPassForRemoteCredentialWithTypeAndIdentifierResponse .cxx_destruct]
  -[NPKProtoProvisionPassForRemoteCredentialWithTypeAndIdentifierResponse hasSuccess]
  -[NPKProtoProvisionPassForRemoteCredentialWithTypeAndIdentifierResponse dictionaryRepresentation]
  -[NPKProtoProvisionPassForRemoteCredentialWithTypeAndIdentifierResponse writeTo:]
  -[NPKProtoProvisionPassForRemoteCredentialWithTypeAndIdentifierResponse setHasSuccess:]
  -[NPKProtoProvisionPassForRemoteCredentialWithTypeAndIdentifierResponse isEqual:]
  -[NPKProtoProvisionPassForRemoteCredentialWithTypeAndIdentifierResponse copyTo:]
  -[NPKProtoProvisionPassForRemoteCredentialWithTypeAndIdentifierResponse readFrom:]
  -[NPKProtoProvisionPassForRemoteCredentialWithTypeAndIdentifierResponse copyWithZone:]
  -[NPKProtoProvisionPassForRemoteCredentialWithTypeAndIdentifierResponse errorData]
  -[NPKProtoProvisionPassForRemoteCredentialWithTypeAndIdentifierResponse hasErrorData]
  -[NPKProtoProvisionPassForRemoteCredentialWithTypeAndIdentifierResponse setErrorData:]
  -[NPKProtoProvisionPassForRemoteCredentialWithTypeAndIdentifierResponse setHasPending:]
  -[NPKProtoProvisionPassForRemoteCredentialWithTypeAndIdentifierResponse hasPending]


NPKProtoRelevantPassesRequest : PBRequest <NSCopying>
 @property  NSMutableArray *passRelevancyTuples

  // class methods
  +[NPKProtoRelevantPassesRequest passRelevancyTuplesType]

  // instance methods
  -[NPKProtoRelevantPassesRequest mergeFrom:]
  -[NPKProtoRelevantPassesRequest .cxx_destruct]
  -[NPKProtoRelevantPassesRequest dictionaryRepresentation]
  -[NPKProtoRelevantPassesRequest writeTo:]
  -[NPKProtoRelevantPassesRequest isEqual:]
  -[NPKProtoRelevantPassesRequest copyTo:]
  -[NPKProtoRelevantPassesRequest readFrom:]
  -[NPKProtoRelevantPassesRequest copyWithZone:]
  -[NPKProtoRelevantPassesRequest addPassRelevancyTuples:]
  -[NPKProtoRelevantPassesRequest passRelevancyTuplesCount]
  -[NPKProtoRelevantPassesRequest clearPassRelevancyTuples]
  -[NPKProtoRelevantPassesRequest passRelevancyTuplesAtIndex:]
  -[NPKProtoRelevantPassesRequest passRelevancyTuples]
  -[NPKProtoRelevantPassesRequest setPassRelevancyTuples:]


NPKProtoStandalonePaymentProvisioningFlowTermsAndConditionsStepContext : PBCodable <NSCopying>
 @property  BOOL hasTermsURL
 @property  NSString *termsURL
 @property  BOOL hasAllowNonSecureHTTP
 @property  BOOL allowNonSecureHTTP
 @property  BOOL hasProduct
 @property  NPKProtoStandalonePaymentSetupProduct *product

  // instance methods
  -[NPKProtoStandalonePaymentProvisioningFlowTermsAndConditionsStepContext mergeFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowTermsAndConditionsStepContext termsURL]
  -[NPKProtoStandalonePaymentProvisioningFlowTermsAndConditionsStepContext setTermsURL:]
  -[NPKProtoStandalonePaymentProvisioningFlowTermsAndConditionsStepContext .cxx_destruct]
  -[NPKProtoStandalonePaymentProvisioningFlowTermsAndConditionsStepContext product]
  -[NPKProtoStandalonePaymentProvisioningFlowTermsAndConditionsStepContext dictionaryRepresentation]
  -[NPKProtoStandalonePaymentProvisioningFlowTermsAndConditionsStepContext writeTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowTermsAndConditionsStepContext isEqual:]
  -[NPKProtoStandalonePaymentProvisioningFlowTermsAndConditionsStepContext copyTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowTermsAndConditionsStepContext readFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowTermsAndConditionsStepContext setProduct:]
  -[NPKProtoStandalonePaymentProvisioningFlowTermsAndConditionsStepContext copyWithZone:]
  -[NPKProtoStandalonePaymentProvisioningFlowTermsAndConditionsStepContext setAllowNonSecureHTTP:]
  -[NPKProtoStandalonePaymentProvisioningFlowTermsAndConditionsStepContext hasTermsURL]
  -[NPKProtoStandalonePaymentProvisioningFlowTermsAndConditionsStepContext setHasAllowNonSecureHTTP:]
  -[NPKProtoStandalonePaymentProvisioningFlowTermsAndConditionsStepContext hasAllowNonSecureHTTP]
  -[NPKProtoStandalonePaymentProvisioningFlowTermsAndConditionsStepContext hasProduct]
  -[NPKProtoStandalonePaymentProvisioningFlowTermsAndConditionsStepContext allowNonSecureHTTP]


NPKVehicleConnectivityCoordinator : NSObject
 @property  <NPKVehicleConnectivityCoordinatorDelegate> *delegate

  // class methods
  +[NPKVehicleConnectivityCoordinator _subcredentialIdentifierForPass:]
  +[NPKVehicleConnectivityCoordinator _secureElementPassMatchingAID:subcredentialIdentifier:]

  // instance methods
  -[NPKVehicleConnectivityCoordinator .cxx_destruct]
  -[NPKVehicleConnectivityCoordinator setDelegate:]
  -[NPKVehicleConnectivityCoordinator init]
  -[NPKVehicleConnectivityCoordinator _registerObservers]
  -[NPKVehicleConnectivityCoordinator delegate]
  -[NPKVehicleConnectivityCoordinator initWithDistributedNotificationCenter:]
  -[NPKVehicleConnectivityCoordinator _handleCarKeyVehicleConnectedNotification:]
  -[NPKVehicleConnectivityCoordinator _handleCarKeyVehicleDisconnectedNotification:]
  -[NPKVehicleConnectivityCoordinator _parseVehicleConnectivityChangeNotificationObject:outApplicationIdentifier:outSubcredentialIdentifier:]
  -[NPKVehicleConnectivityCoordinator isVehicleConnectedForPass:]


NPKIDVRemoteDeviceProtoCreateCredentialResponse : PBCodable <NSCopying>
 @property  BOOL hasCredentialIdentifier
 @property  NSString *credentialIdentifier
 @property  BOOL hasErrorData
 @property  NSData *errorData

  // instance methods
  -[NPKIDVRemoteDeviceProtoCreateCredentialResponse mergeFrom:]
  -[NPKIDVRemoteDeviceProtoCreateCredentialResponse .cxx_destruct]
  -[NPKIDVRemoteDeviceProtoCreateCredentialResponse dictionaryRepresentation]
  -[NPKIDVRemoteDeviceProtoCreateCredentialResponse writeTo:]
  -[NPKIDVRemoteDeviceProtoCreateCredentialResponse credentialIdentifier]
  -[NPKIDVRemoteDeviceProtoCreateCredentialResponse setCredentialIdentifier:]
  -[NPKIDVRemoteDeviceProtoCreateCredentialResponse isEqual:]
  -[NPKIDVRemoteDeviceProtoCreateCredentialResponse copyTo:]
  -[NPKIDVRemoteDeviceProtoCreateCredentialResponse readFrom:]
  -[NPKIDVRemoteDeviceProtoCreateCredentialResponse copyWithZone:]
  -[NPKIDVRemoteDeviceProtoCreateCredentialResponse hasCredentialIdentifier]
  -[NPKIDVRemoteDeviceProtoCreateCredentialResponse errorData]
  -[NPKIDVRemoteDeviceProtoCreateCredentialResponse hasErrorData]
  -[NPKIDVRemoteDeviceProtoCreateCredentialResponse setErrorData:]


NPKProtoCanAddSecureElementPassWithConfigurationResponse : PBCodable <NSCopying>
 @property  BOOL hasCanAddPass
 @property  BOOL canAddPass
 @property  BOOL hasErrorData
 @property  NSData *errorData

  // instance methods
  -[NPKProtoCanAddSecureElementPassWithConfigurationResponse mergeFrom:]
  -[NPKProtoCanAddSecureElementPassWithConfigurationResponse .cxx_destruct]
  -[NPKProtoCanAddSecureElementPassWithConfigurationResponse dictionaryRepresentation]
  -[NPKProtoCanAddSecureElementPassWithConfigurationResponse writeTo:]
  -[NPKProtoCanAddSecureElementPassWithConfigurationResponse isEqual:]
  -[NPKProtoCanAddSecureElementPassWithConfigurationResponse copyTo:]
  -[NPKProtoCanAddSecureElementPassWithConfigurationResponse readFrom:]
  -[NPKProtoCanAddSecureElementPassWithConfigurationResponse copyWithZone:]
  -[NPKProtoCanAddSecureElementPassWithConfigurationResponse errorData]
  -[NPKProtoCanAddSecureElementPassWithConfigurationResponse hasErrorData]
  -[NPKProtoCanAddSecureElementPassWithConfigurationResponse setErrorData:]
  -[NPKProtoCanAddSecureElementPassWithConfigurationResponse setCanAddPass:]
  -[NPKProtoCanAddSecureElementPassWithConfigurationResponse setHasCanAddPass:]
  -[NPKProtoCanAddSecureElementPassWithConfigurationResponse hasCanAddPass]
  -[NPKProtoCanAddSecureElementPassWithConfigurationResponse canAddPass]


NPKProtoRetrievePaymentTransactionsResponse : PBCodable <NSCopying>
 @property  NSMutableArray *transactionsBytes
 @property  NSMutableArray *transactionPassIDs

  // class methods
  +[NPKProtoRetrievePaymentTransactionsResponse transactionsBytesType]
  +[NPKProtoRetrievePaymentTransactionsResponse transactionPassIDsType]

  // instance methods
  -[NPKProtoRetrievePaymentTransactionsResponse mergeFrom:]
  -[NPKProtoRetrievePaymentTransactionsResponse .cxx_destruct]
  -[NPKProtoRetrievePaymentTransactionsResponse dictionaryRepresentation]
  -[NPKProtoRetrievePaymentTransactionsResponse writeTo:]
  -[NPKProtoRetrievePaymentTransactionsResponse isEqual:]
  -[NPKProtoRetrievePaymentTransactionsResponse copyTo:]
  -[NPKProtoRetrievePaymentTransactionsResponse readFrom:]
  -[NPKProtoRetrievePaymentTransactionsResponse copyWithZone:]
  -[NPKProtoRetrievePaymentTransactionsResponse addTransactionsBytes:]
  -[NPKProtoRetrievePaymentTransactionsResponse addTransactionPassIDs:]
  -[NPKProtoRetrievePaymentTransactionsResponse transactionsBytesCount]
  -[NPKProtoRetrievePaymentTransactionsResponse clearTransactionsBytes]
  -[NPKProtoRetrievePaymentTransactionsResponse transactionsBytesAtIndex:]
  -[NPKProtoRetrievePaymentTransactionsResponse transactionPassIDsCount]
  -[NPKProtoRetrievePaymentTransactionsResponse clearTransactionPassIDs]
  -[NPKProtoRetrievePaymentTransactionsResponse transactionPassIDsAtIndex:]
  -[NPKProtoRetrievePaymentTransactionsResponse transactionsBytes]
  -[NPKProtoRetrievePaymentTransactionsResponse setTransactionsBytes:]
  -[NPKProtoRetrievePaymentTransactionsResponse transactionPassIDs]
  -[NPKProtoRetrievePaymentTransactionsResponse setTransactionPassIDs:]


NPKExpressGymKitAvailabilityManager : NSObject <NPKExpressGymKitConflictResolver>
 @property  BOOL isExpressGymKitAllowed
 @property  PKPaymentPass *conflictingPass
 @property  <NPKExpressGymKitAvailabilityManagerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NPKExpressGymKitAvailabilityManager .cxx_destruct]
  -[NPKExpressGymKitAvailabilityManager setDelegate:]
  -[NPKExpressGymKitAvailabilityManager init]
  -[NPKExpressGymKitAvailabilityManager initWithDelegate:]
  -[NPKExpressGymKitAvailabilityManager delegate]
  -[NPKExpressGymKitAvailabilityManager dealloc]
  -[NPKExpressGymKitAvailabilityManager isExpressGymKitAllowed]
  -[NPKExpressGymKitAvailabilityManager _conflictingPassUniqueID]
  -[NPKExpressGymKitAvailabilityManager allowEnableExpressGymKitWithVisibleViewController:completion:]
  -[NPKExpressGymKitAvailabilityManager conflictingPass]


NPKRemotePassAction : NSObject <NSSecureCoding>
 @property  NPKProtoRemotePassActionEnvelope *protoEnvelope
 @property  UIImage *image
 @property  NSString *passOrganizationName
 @property  NSString *passLocalizedDescription
 @property  NSString *caption
 @property  BOOL response
 @property  MSMessage *underlyingMessage
 @property  BOOL supportsTopUp
 @property  BOOL supportsCommutePlanRenewal
 @property  unsigned long cardType

  // class methods
  +[NPKRemotePassAction supportsSecureCoding]

  // instance methods
  -[NPKRemotePassAction cardType]
  -[NPKRemotePassAction caption]
  -[NPKRemotePassAction initWithCoder:]
  -[NPKRemotePassAction isResponse]
  -[NPKRemotePassAction image]
  -[NPKRemotePassAction .cxx_destruct]
  -[NPKRemotePassAction _updateSummaryText]
  -[NPKRemotePassAction supportsTopUp]
  -[NPKRemotePassAction encodeWithCoder:]
  -[NPKRemotePassAction initWithUnderlyingMessage:]
  -[NPKRemotePassAction _updateDataURL]
  -[NPKRemotePassAction underlyingMessage]
  -[NPKRemotePassAction _messageDataWithDataURL:]
  -[NPKRemotePassAction _imageForMessage:]
  -[NPKRemotePassAction initWithMessage:protoEnvelope:image:]
  -[NPKRemotePassAction _updateLayoutContentsWithImage:]
  -[NPKRemotePassAction passLocalizedDescription]
  -[NPKRemotePassAction passOrganizationName]
  -[NPKRemotePassAction _messageDataURLWithData:]
  -[NPKRemotePassAction protoEnvelope]
  -[NPKRemotePassAction initWithProtoEnvelope:image:]
  -[NPKRemotePassAction supportsCommutePlanRenewal]
  -[NPKRemotePassAction setUnderlyingMessage:]
  -[NPKRemotePassAction setProtoEnvelope:]


NPKProtoCatalog : PBCodable <NSCopying>
 @property  NSData *catalogData

  // instance methods
  -[NPKProtoCatalog mergeFrom:]
  -[NPKProtoCatalog .cxx_destruct]
  -[NPKProtoCatalog dictionaryRepresentation]
  -[NPKProtoCatalog writeTo:]
  -[NPKProtoCatalog isEqual:]
  -[NPKProtoCatalog copyTo:]
  -[NPKProtoCatalog readFrom:]
  -[NPKProtoCatalog copyWithZone:]
  -[NPKProtoCatalog setCatalogData:]
  -[NPKProtoCatalog catalogData]


NPKProtoRegisterSubcredentialsResponse : PBCodable <NSCopying>
 @property  NSMutableArray *passesDatas
 @property  NSMutableArray *errorsDatas

  // class methods
  +[NPKProtoRegisterSubcredentialsResponse passesDataType]
  +[NPKProtoRegisterSubcredentialsResponse errorsDataType]

  // instance methods
  -[NPKProtoRegisterSubcredentialsResponse mergeFrom:]
  -[NPKProtoRegisterSubcredentialsResponse .cxx_destruct]
  -[NPKProtoRegisterSubcredentialsResponse dictionaryRepresentation]
  -[NPKProtoRegisterSubcredentialsResponse writeTo:]
  -[NPKProtoRegisterSubcredentialsResponse isEqual:]
  -[NPKProtoRegisterSubcredentialsResponse copyTo:]
  -[NPKProtoRegisterSubcredentialsResponse readFrom:]
  -[NPKProtoRegisterSubcredentialsResponse copyWithZone:]
  -[NPKProtoRegisterSubcredentialsResponse addPassesData:]
  -[NPKProtoRegisterSubcredentialsResponse addErrorsData:]
  -[NPKProtoRegisterSubcredentialsResponse passesDatasCount]
  -[NPKProtoRegisterSubcredentialsResponse clearPassesDatas]
  -[NPKProtoRegisterSubcredentialsResponse passesDataAtIndex:]
  -[NPKProtoRegisterSubcredentialsResponse errorsDatasCount]
  -[NPKProtoRegisterSubcredentialsResponse clearErrorsDatas]
  -[NPKProtoRegisterSubcredentialsResponse errorsDataAtIndex:]
  -[NPKProtoRegisterSubcredentialsResponse passesDatas]
  -[NPKProtoRegisterSubcredentialsResponse setPassesDatas:]
  -[NPKProtoRegisterSubcredentialsResponse errorsDatas]
  -[NPKProtoRegisterSubcredentialsResponse setErrorsDatas:]


NPKProtoStandalonePaymentProvisioningFlowProvisioningProgressStepContext : PBCodable <NSCopying>
 @property  BOOL hasLocalizedProgressDescription
 @property  NSString *localizedProgressDescription
 @property  BOOL hasProduct
 @property  NPKProtoStandalonePaymentSetupProduct *product

  // instance methods
  -[NPKProtoStandalonePaymentProvisioningFlowProvisioningProgressStepContext mergeFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowProvisioningProgressStepContext .cxx_destruct]
  -[NPKProtoStandalonePaymentProvisioningFlowProvisioningProgressStepContext product]
  -[NPKProtoStandalonePaymentProvisioningFlowProvisioningProgressStepContext dictionaryRepresentation]
  -[NPKProtoStandalonePaymentProvisioningFlowProvisioningProgressStepContext writeTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowProvisioningProgressStepContext isEqual:]
  -[NPKProtoStandalonePaymentProvisioningFlowProvisioningProgressStepContext copyTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowProvisioningProgressStepContext readFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowProvisioningProgressStepContext localizedProgressDescription]
  -[NPKProtoStandalonePaymentProvisioningFlowProvisioningProgressStepContext setProduct:]
  -[NPKProtoStandalonePaymentProvisioningFlowProvisioningProgressStepContext copyWithZone:]
  -[NPKProtoStandalonePaymentProvisioningFlowProvisioningProgressStepContext hasProduct]
  -[NPKProtoStandalonePaymentProvisioningFlowProvisioningProgressStepContext setLocalizedProgressDescription:]
  -[NPKProtoStandalonePaymentProvisioningFlowProvisioningProgressStepContext hasLocalizedProgressDescription]


NPKProtoStandalonePaymentProvisioningFlowHandleManualEntryFieldsRequest : PBRequest <NSCopying>
 @property  NPKProtoStandaloneRequestHeader *requestHeader
 @property  NSMutableArray *manualEntryFields

  // class methods
  +[NPKProtoStandalonePaymentProvisioningFlowHandleManualEntryFieldsRequest manualEntryFieldsType]

  // instance methods
  -[NPKProtoStandalonePaymentProvisioningFlowHandleManualEntryFieldsRequest mergeFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleManualEntryFieldsRequest .cxx_destruct]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleManualEntryFieldsRequest dictionaryRepresentation]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleManualEntryFieldsRequest writeTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleManualEntryFieldsRequest isEqual:]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleManualEntryFieldsRequest copyTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleManualEntryFieldsRequest readFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleManualEntryFieldsRequest copyWithZone:]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleManualEntryFieldsRequest requestHeader]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleManualEntryFieldsRequest setRequestHeader:]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleManualEntryFieldsRequest addManualEntryFields:]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleManualEntryFieldsRequest manualEntryFieldsCount]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleManualEntryFieldsRequest clearManualEntryFields]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleManualEntryFieldsRequest manualEntryFieldsAtIndex:]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleManualEntryFieldsRequest manualEntryFields]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleManualEntryFieldsRequest setManualEntryFields:]


NPKPassSyncServiceSyncStatus : NSObject
 @property  NPKPassSyncChange *lastKnownOutgoingChange
 @property  NSDate *outgoingChangeDate
 @property  NPKPassSyncChange *lastKnownIncomingChange
 @property  NSDate *incomingChangeDate

  // instance methods
  -[NPKPassSyncServiceSyncStatus .cxx_destruct]
  -[NPKPassSyncServiceSyncStatus reset]
  -[NPKPassSyncServiceSyncStatus shouldSyncWithCurrentIncomingChange:currentOutgoingChange:currentDate:]
  -[NPKPassSyncServiceSyncStatus lastKnownOutgoingChange]
  -[NPKPassSyncServiceSyncStatus setLastKnownOutgoingChange:]
  -[NPKPassSyncServiceSyncStatus outgoingChangeDate]
  -[NPKPassSyncServiceSyncStatus setOutgoingChangeDate:]
  -[NPKPassSyncServiceSyncStatus lastKnownIncomingChange]
  -[NPKPassSyncServiceSyncStatus setLastKnownIncomingChange:]
  -[NPKPassSyncServiceSyncStatus incomingChangeDate]
  -[NPKPassSyncServiceSyncStatus setIncomingChangeDate:]


NPKPassSyncService : NSObject <IDSServiceDelegate, NPKPassSyncEngineDelegate, NPKPassSyncEngineDataSource>
 @property  NPKPassSyncEngine *passSyncEngine
 @property  IDSService *passSyncService
 @property  NSObject<OS_dispatch_queue> *passSyncQueue
 @property  NSObject<OS_dispatch_source> *passSyncEngineArchiveTimer
 @property  NSObject<OS_dispatch_source> *passSyncEngineSyncTimer
 @property  NPKPassSyncServiceSyncStatus *passSyncStatus
 @property  BOOL dropAllMessages
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NPKPassSyncService .cxx_destruct]
  -[NPKPassSyncService start]
  -[NPKPassSyncService syncStateChanged:]
  -[NPKPassSyncService syncStateChangeProcessed:]
  -[NPKPassSyncService reconciledStateUnrecognized:]
  -[NPKPassSyncService proposedReconciledState:]
  -[NPKPassSyncService reconciledStateAccepted:]
  -[NPKPassSyncService passSettingsChanged:]
  -[NPKPassSyncService catalogChanged:]
  -[NPKPassSyncService associatedPassDataRequested:]
  -[NPKPassSyncService _archiveTimerFired]
  -[NPKPassSyncService _archivedPassSyncEngine]
  -[NPKPassSyncService _provideUpdatedLibraryStateToSyncEngineAndSyncIfNecessary:]
  -[NPKPassSyncService updatePassLibrary]
  -[NPKPassSyncService _syncWhenAppropriate]
  -[NPKPassSyncService handleIncomingCompanionCatalog:watchCatalog:]
  -[NPKPassSyncService handleIncomingPassSettings:forPassWithUniqueID:]
  -[NPKPassSyncService handleAssociatedDataRequestedForPassWithUniqueID:]
  -[NPKPassSyncService companionCatalogToSendWithStateChange]
  -[NPKPassSyncService watchCatalogToSendWithStateChange]
  -[NPKPassSyncService settingsForPassWithUniqueID:]
  -[NPKPassSyncService handleSettingsChanged:forPassWithUniqueID:]
  -[NPKPassSyncService currentLibraryPassSyncStateWithReconciledState:]
  -[NPKPassSyncService _syncNow]
  -[NPKPassSyncService _ensureSyncTimerIsSet]
  -[NPKPassSyncService _syncTimerFired]
  -[NPKPassSyncService passSyncEngine:sendStateChange:]
  -[NPKPassSyncService passSyncEngine:sendStateChangeProcessedWithUUID:changeAccepted:fullPassRequired:]
  -[NPKPassSyncService passSyncEngine:sendReconciledStateUnrecognizedWithHash:version:currentPassSyncState:]
  -[NPKPassSyncService passSyncEngine:sendProposedReconciledState:]
  -[NPKPassSyncService passSyncEngine:sendReconciledStateAcceptedWithHash:]
  -[NPKPassSyncService passSyncEngine:requestsAddPassData:forSyncStateItem:completion:]
  -[NPKPassSyncService passSyncEngine:requestsUpdatePassData:forSyncStateItem:baseManifestHashForPartialUpdate:remoteAssetsForPartialUpdate:completion:]
  -[NPKPassSyncService passSyncEngine:requestsRemovePassWithUniqueID:completion:]
  -[NPKPassSyncService passSyncEngineStateChanged:]
  -[NPKPassSyncService passSyncEngine:receivedStateChangeProcessed:changeAccepted:]
  -[NPKPassSyncService passSyncEngine:finishedProcessingChange:]
  -[NPKPassSyncService passSyncEngine:partialDataForPassWithUniqueID:baseManifest:outRemoteAssets:]
  -[NPKPassSyncService passSyncEngine:dataForPassWithUniqueID:]
  -[NPKPassSyncService passSyncEngineNeedsUpdatedPassLibraryState:]
  -[NPKPassSyncService initWithPassSyncEngineRole:]
  -[NPKPassSyncService handlePassLibraryChanged]
  -[NPKPassSyncService requestAssociatedDataForPassWithUniqueID:]
  -[NPKPassSyncService handleCatalogChangeWithCompanionCatalog:watchCatalog:]
  -[NPKPassSyncService suggestSync]
  -[NPKPassSyncService dropAllMessages]
  -[NPKPassSyncService setDropAllMessages:]
  -[NPKPassSyncService passSyncEngine]
  -[NPKPassSyncService setPassSyncEngine:]
  -[NPKPassSyncService passSyncService]
  -[NPKPassSyncService setPassSyncService:]
  -[NPKPassSyncService passSyncQueue]
  -[NPKPassSyncService setPassSyncQueue:]
  -[NPKPassSyncService passSyncEngineArchiveTimer]
  -[NPKPassSyncService setPassSyncEngineArchiveTimer:]
  -[NPKPassSyncService passSyncEngineSyncTimer]
  -[NPKPassSyncService setPassSyncEngineSyncTimer:]
  -[NPKPassSyncService passSyncStatus]
  -[NPKPassSyncService setPassSyncStatus:]


NPKProtoPerformDeviceCheckInRequest : PBRequest <NSCopying>
  // instance methods
  -[NPKProtoPerformDeviceCheckInRequest mergeFrom:]
  -[NPKProtoPerformDeviceCheckInRequest dictionaryRepresentation]
  -[NPKProtoPerformDeviceCheckInRequest writeTo:]
  -[NPKProtoPerformDeviceCheckInRequest isEqual:]
  -[NPKProtoPerformDeviceCheckInRequest copyTo:]
  -[NPKProtoPerformDeviceCheckInRequest readFrom:]
  -[NPKProtoPerformDeviceCheckInRequest copyWithZone:]


NPKIDVRemoteDeviceSessionServer : PDXPCService <NPKIDVRemoteDeviceServiceSessionServerProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NPKIDVRemoteDeviceSessionServer credentialPreflightStatusForType:completion:]
  -[NPKIDVRemoteDeviceSessionServer configureWithPartition:ackHandler:]
  -[NPKIDVRemoteDeviceSessionServer registerForEvents:withRemoteProcessServiceName:completion:]
  -[NPKIDVRemoteDeviceSessionServer .cxx_destruct]
  -[NPKIDVRemoteDeviceSessionServer _checkCredentialProvisioningEntitlement]
  -[NPKIDVRemoteDeviceSessionServer initWithConnection:eventsCoordinator:connectionCoordinator:preflightManager:]
  -[NPKIDVRemoteDeviceSessionServer prearmCredentialWithAuthorizationToken:completion:]
  -[NPKIDVRemoteDeviceSessionServer credentialIdentifiersInPartitions:completion:]
  -[NPKIDVRemoteDeviceSessionServer provisionCredentialWithType:metadata:policyIdentifier:credentialIdentifier:attestations:completion:]
  -[NPKIDVRemoteDeviceSessionServer confirmRemoteDeviceID:withCompletion:]
  -[NPKIDVRemoteDeviceSessionServer _checkCredentialStoreEntitlementWithPartition:]
  -[NPKIDVRemoteDeviceSessionServer addNotificationWithType:documentType:issuerName:completion:]
  -[NPKIDVRemoteDeviceSessionServer createCredentialInPartition:options:completion:]
  -[NPKIDVRemoteDeviceSessionServer unregisterFromEvents:withRemoteProcessServiceName:completion:]
  -[NPKIDVRemoteDeviceSessionServer deleteCredential:completion:]
  -[NPKIDVRemoteDeviceSessionServer establishPrearmTrust:completion:]
  -[NPKIDVRemoteDeviceSessionServer _checkCredentialStoreBiometricsEntitlement]
  -[NPKIDVRemoteDeviceSessionServer nonceForAuthorizationTokenWithCompletion:]
  -[NPKIDVRemoteDeviceSessionServer deleteGlobalAuthACLWithCompletion:]
  -[NPKIDVRemoteDeviceSessionServer generateKeyWithType:credentialIdentifier:completion:]
  -[NPKIDVRemoteDeviceSessionServer propertiesOfCredential:completion:]


NPKProtoPhotosForFamilyMembersWithDSIDsRequest : PBRequest <NSCopying>
 @property  NSMutableArray *requestDSIDs

  // class methods
  +[NPKProtoPhotosForFamilyMembersWithDSIDsRequest requestDSIDsType]

  // instance methods
  -[NPKProtoPhotosForFamilyMembersWithDSIDsRequest mergeFrom:]
  -[NPKProtoPhotosForFamilyMembersWithDSIDsRequest .cxx_destruct]
  -[NPKProtoPhotosForFamilyMembersWithDSIDsRequest dictionaryRepresentation]
  -[NPKProtoPhotosForFamilyMembersWithDSIDsRequest writeTo:]
  -[NPKProtoPhotosForFamilyMembersWithDSIDsRequest isEqual:]
  -[NPKProtoPhotosForFamilyMembersWithDSIDsRequest copyTo:]
  -[NPKProtoPhotosForFamilyMembersWithDSIDsRequest readFrom:]
  -[NPKProtoPhotosForFamilyMembersWithDSIDsRequest copyWithZone:]
  -[NPKProtoPhotosForFamilyMembersWithDSIDsRequest addRequestDSIDs:]
  -[NPKProtoPhotosForFamilyMembersWithDSIDsRequest requestDSIDsCount]
  -[NPKProtoPhotosForFamilyMembersWithDSIDsRequest clearRequestDSIDs]
  -[NPKProtoPhotosForFamilyMembersWithDSIDsRequest requestDSIDsAtIndex:]
  -[NPKProtoPhotosForFamilyMembersWithDSIDsRequest requestDSIDs]
  -[NPKProtoPhotosForFamilyMembersWithDSIDsRequest setRequestDSIDs:]


NPKIDVRemoteDeviceProtoPartitionsCredentialIdentifiersResponse : PBCodable <NSCopying>
 @property  BOOL hasPartitionsCredentialIdentifiersData
 @property  NSData *partitionsCredentialIdentifiersData
 @property  BOOL hasErrorData
 @property  NSData *errorData

  // instance methods
  -[NPKIDVRemoteDeviceProtoPartitionsCredentialIdentifiersResponse mergeFrom:]
  -[NPKIDVRemoteDeviceProtoPartitionsCredentialIdentifiersResponse .cxx_destruct]
  -[NPKIDVRemoteDeviceProtoPartitionsCredentialIdentifiersResponse dictionaryRepresentation]
  -[NPKIDVRemoteDeviceProtoPartitionsCredentialIdentifiersResponse writeTo:]
  -[NPKIDVRemoteDeviceProtoPartitionsCredentialIdentifiersResponse isEqual:]
  -[NPKIDVRemoteDeviceProtoPartitionsCredentialIdentifiersResponse copyTo:]
  -[NPKIDVRemoteDeviceProtoPartitionsCredentialIdentifiersResponse readFrom:]
  -[NPKIDVRemoteDeviceProtoPartitionsCredentialIdentifiersResponse copyWithZone:]
  -[NPKIDVRemoteDeviceProtoPartitionsCredentialIdentifiersResponse errorData]
  -[NPKIDVRemoteDeviceProtoPartitionsCredentialIdentifiersResponse hasErrorData]
  -[NPKIDVRemoteDeviceProtoPartitionsCredentialIdentifiersResponse setErrorData:]
  -[NPKIDVRemoteDeviceProtoPartitionsCredentialIdentifiersResponse setPartitionsCredentialIdentifiersData:]
  -[NPKIDVRemoteDeviceProtoPartitionsCredentialIdentifiersResponse hasPartitionsCredentialIdentifiersData]
  -[NPKIDVRemoteDeviceProtoPartitionsCredentialIdentifiersResponse partitionsCredentialIdentifiersData]


NPKLibrary : NSObject
 @property  BOOL needsRelevancyInformation

  // class methods
  +[NPKLibrary sharedInstance]

  // instance methods
  -[NPKLibrary addPassData:completion:]
  -[NPKLibrary needsRelevancyInformation]
  -[NPKLibrary setNeedsRelevancyInformation:]


NPKPaymentWebServiceStandaloneTargetDevice : PKPaymentWebServiceTargetDevice
 @property  <NPKPaymentWebServiceStandaloneTargetDeviceDelegate> *delegate

  // class methods
  +[NPKPaymentWebServiceStandaloneTargetDevice standalonePaymentWebServiceWithDelegate:]

  // instance methods
  -[NPKPaymentWebServiceStandaloneTargetDevice .cxx_destruct]
  -[NPKPaymentWebServiceStandaloneTargetDevice enforceUpgradedPasscodePolicyWithCompletion:]
  -[NPKPaymentWebServiceStandaloneTargetDevice setDelegate:]
  -[NPKPaymentWebServiceStandaloneTargetDevice delegate]
  -[NPKPaymentWebServiceStandaloneTargetDevice startRequiringUpgradedPasscodeWithPasscodeMeetsPolicy:]
  -[NPKPaymentWebServiceStandaloneTargetDevice endRequiringUpgradedPasscodeIfNecessary]


NPKProtoCheckCompanionPeerPaymentRegistrationStateRequest : PBRequest <NSCopying>
  // instance methods
  -[NPKProtoCheckCompanionPeerPaymentRegistrationStateRequest mergeFrom:]
  -[NPKProtoCheckCompanionPeerPaymentRegistrationStateRequest dictionaryRepresentation]
  -[NPKProtoCheckCompanionPeerPaymentRegistrationStateRequest writeTo:]
  -[NPKProtoCheckCompanionPeerPaymentRegistrationStateRequest isEqual:]
  -[NPKProtoCheckCompanionPeerPaymentRegistrationStateRequest copyTo:]
  -[NPKProtoCheckCompanionPeerPaymentRegistrationStateRequest readFrom:]
  -[NPKProtoCheckCompanionPeerPaymentRegistrationStateRequest copyWithZone:]


NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdRequest : PBRequest <NSCopying>
 @property  BOOL hasSubCredentialId
 @property  NSString *subCredentialId

  // instance methods
  -[NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdRequest mergeFrom:]
  -[NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdRequest .cxx_destruct]
  -[NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdRequest dictionaryRepresentation]
  -[NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdRequest writeTo:]
  -[NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdRequest isEqual:]
  -[NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdRequest copyTo:]
  -[NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdRequest readFrom:]
  -[NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdRequest copyWithZone:]
  -[NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdRequest setSubCredentialId:]
  -[NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdRequest hasSubCredentialId]
  -[NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdRequest subCredentialId]


NPKProtoRemoteDevicePasscodeStateResponse : PBCodable <NSCopying>
 @property  BOOL hasHasPasscodeSet
 @property  BOOL hasPasscodeSet
 @property  BOOL hasIsPasscodeLocked
 @property  BOOL isPasscodeLocked
 @property  BOOL hasErrorData
 @property  NSData *errorData

  // instance methods
  -[NPKProtoRemoteDevicePasscodeStateResponse mergeFrom:]
  -[NPKProtoRemoteDevicePasscodeStateResponse .cxx_destruct]
  -[NPKProtoRemoteDevicePasscodeStateResponse setIsPasscodeLocked:]
  -[NPKProtoRemoteDevicePasscodeStateResponse dictionaryRepresentation]
  -[NPKProtoRemoteDevicePasscodeStateResponse writeTo:]
  -[NPKProtoRemoteDevicePasscodeStateResponse isEqual:]
  -[NPKProtoRemoteDevicePasscodeStateResponse copyTo:]
  -[NPKProtoRemoteDevicePasscodeStateResponse readFrom:]
  -[NPKProtoRemoteDevicePasscodeStateResponse isPasscodeLocked]
  -[NPKProtoRemoteDevicePasscodeStateResponse hasPasscodeSet]
  -[NPKProtoRemoteDevicePasscodeStateResponse copyWithZone:]
  -[NPKProtoRemoteDevicePasscodeStateResponse errorData]
  -[NPKProtoRemoteDevicePasscodeStateResponse hasErrorData]
  -[NPKProtoRemoteDevicePasscodeStateResponse setErrorData:]
  -[NPKProtoRemoteDevicePasscodeStateResponse setHasPasscodeSet:]
  -[NPKProtoRemoteDevicePasscodeStateResponse setHasHasPasscodeSet:]
  -[NPKProtoRemoteDevicePasscodeStateResponse hasHasPasscodeSet]
  -[NPKProtoRemoteDevicePasscodeStateResponse setHasIsPasscodeLocked:]
  -[NPKProtoRemoteDevicePasscodeStateResponse hasIsPasscodeLocked]


NPKProtoStandalonePaymentProvisioningFlowLocalDeviceManualEntryProgressStepContext : PBCodable <NSCopying>
 @property  BOOL hasNumericEntryPending
 @property  BOOL numericEntryPending

  // instance methods
  -[NPKProtoStandalonePaymentProvisioningFlowLocalDeviceManualEntryProgressStepContext mergeFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowLocalDeviceManualEntryProgressStepContext dictionaryRepresentation]
  -[NPKProtoStandalonePaymentProvisioningFlowLocalDeviceManualEntryProgressStepContext writeTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowLocalDeviceManualEntryProgressStepContext isEqual:]
  -[NPKProtoStandalonePaymentProvisioningFlowLocalDeviceManualEntryProgressStepContext copyTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowLocalDeviceManualEntryProgressStepContext readFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowLocalDeviceManualEntryProgressStepContext copyWithZone:]
  -[NPKProtoStandalonePaymentProvisioningFlowLocalDeviceManualEntryProgressStepContext setNumericEntryPending:]
  -[NPKProtoStandalonePaymentProvisioningFlowLocalDeviceManualEntryProgressStepContext setHasNumericEntryPending:]
  -[NPKProtoStandalonePaymentProvisioningFlowLocalDeviceManualEntryProgressStepContext hasNumericEntryPending]
  -[NPKProtoStandalonePaymentProvisioningFlowLocalDeviceManualEntryProgressStepContext numericEntryPending]


NPKRemotePassActionSelectItemRequest : NPKRemotePassActionRequest
 @property  NPKProtoRemotePassActionSelectItemRequest *protoRequest
 @property  <NPKCommutePlanField> *commutePlanField
 @property  NSString *deviceIdentifier
 @property  NSString *passTypeIdentifier
 @property  NSString *passSerialNumber

  // instance methods
  -[NPKRemotePassActionSelectItemRequest .cxx_destruct]
  -[NPKRemotePassActionSelectItemRequest action]
  -[NPKRemotePassActionSelectItemRequest protoRequest]
  -[NPKRemotePassActionSelectItemRequest identifier]
  -[NPKRemotePassActionSelectItemRequest passSerialNumber]
  -[NPKRemotePassActionSelectItemRequest passTypeIdentifier]
  -[NPKRemotePassActionSelectItemRequest deviceIdentifier]
  -[NPKRemotePassActionSelectItemRequest setProtoRequest:]
  -[NPKRemotePassActionSelectItemRequest actionText]
  -[NPKRemotePassActionSelectItemRequest initWithIdentifier:deviceIdentifier:cardType:passOrganizationName:passTypeIdentifier:passSerialNumber:commutePlanField:image:passLocalizedDesciption:caption:summaryText:]
  -[NPKRemotePassActionSelectItemRequest commutePlanField]
  -[NPKRemotePassActionSelectItemRequest initWithPass:image:commutePlanField:]


NPKCompanionViewServiceConnection : NSObject <PKXPCServiceDelegate, NPKCompanionViewServiceConnectionClientProtocol>
 @property  <NPKCompanionViewServiceConnectionDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NPKCompanionViewServiceConnection serviceSuspended]
  -[NPKCompanionViewServiceConnection serviceResumed]
  -[NPKCompanionViewServiceConnection .cxx_destruct]
  -[NPKCompanionViewServiceConnection setDelegate:]
  -[NPKCompanionViewServiceConnection remoteService:didEstablishConnection:]
  -[NPKCompanionViewServiceConnection init]
  -[NPKCompanionViewServiceConnection remoteService:didInterruptConnection:]
  -[NPKCompanionViewServiceConnection delegate]
  -[NPKCompanionViewServiceConnection dealloc]
  -[NPKCompanionViewServiceConnection _remoteObjectProxyWithFailureHandler:]
  -[NPKCompanionViewServiceConnection presentRemotePassValueEntryViewControllerForRequest:contact:completion:]
  -[NPKCompanionViewServiceConnection presentRemotePassItemSelectionViewControllerForRequest:contact:completion:]
  -[NPKCompanionViewServiceConnection _errorHandlerWithCompletion:]
  -[NPKCompanionViewServiceConnection handleCompanionValueEntryFinishedWithCurrencyAmount:forRequestIdentifier:]
  -[NPKCompanionViewServiceConnection handleCompanionValueEntryCancelledForRequestIdentifier:]
  -[NPKCompanionViewServiceConnection handleCompanionItemSelectionRequestFinishedWithRenewalAmount:serviceProviderData:forRequestIdentifier:]
  -[NPKCompanionViewServiceConnection handleCompanionItemSelectionRequestCancelledForRequestIdentifier:]


NPKProtoRemoveExpressPassWithUniqueIdentifierResponse : PBCodable <NSCopying>
 @property  BOOL hasPending
 @property  BOOL pending
 @property  BOOL hasSuccess
 @property  BOOL success
 @property  BOOL hasActualExpressPassInformation
 @property  NSData *actualExpressPassInformation
 @property  NSMutableArray *currentExpressPassesInformations

  // class methods
  +[NPKProtoRemoveExpressPassWithUniqueIdentifierResponse currentExpressPassesInformationType]

  // instance methods
  -[NPKProtoRemoveExpressPassWithUniqueIdentifierResponse setSuccess:]
  -[NPKProtoRemoveExpressPassWithUniqueIdentifierResponse success]
  -[NPKProtoRemoveExpressPassWithUniqueIdentifierResponse pending]
  -[NPKProtoRemoveExpressPassWithUniqueIdentifierResponse mergeFrom:]
  -[NPKProtoRemoveExpressPassWithUniqueIdentifierResponse setPending:]
  -[NPKProtoRemoveExpressPassWithUniqueIdentifierResponse .cxx_destruct]
  -[NPKProtoRemoveExpressPassWithUniqueIdentifierResponse hasSuccess]
  -[NPKProtoRemoveExpressPassWithUniqueIdentifierResponse dictionaryRepresentation]
  -[NPKProtoRemoveExpressPassWithUniqueIdentifierResponse writeTo:]
  -[NPKProtoRemoveExpressPassWithUniqueIdentifierResponse setHasSuccess:]
  -[NPKProtoRemoveExpressPassWithUniqueIdentifierResponse isEqual:]
  -[NPKProtoRemoveExpressPassWithUniqueIdentifierResponse copyTo:]
  -[NPKProtoRemoveExpressPassWithUniqueIdentifierResponse readFrom:]
  -[NPKProtoRemoveExpressPassWithUniqueIdentifierResponse copyWithZone:]
  -[NPKProtoRemoveExpressPassWithUniqueIdentifierResponse setHasPending:]
  -[NPKProtoRemoveExpressPassWithUniqueIdentifierResponse hasPending]
  -[NPKProtoRemoveExpressPassWithUniqueIdentifierResponse addCurrentExpressPassesInformation:]
  -[NPKProtoRemoveExpressPassWithUniqueIdentifierResponse setActualExpressPassInformation:]
  -[NPKProtoRemoveExpressPassWithUniqueIdentifierResponse currentExpressPassesInformationsCount]
  -[NPKProtoRemoveExpressPassWithUniqueIdentifierResponse clearCurrentExpressPassesInformations]
  -[NPKProtoRemoveExpressPassWithUniqueIdentifierResponse currentExpressPassesInformationAtIndex:]
  -[NPKProtoRemoveExpressPassWithUniqueIdentifierResponse hasActualExpressPassInformation]
  -[NPKProtoRemoveExpressPassWithUniqueIdentifierResponse actualExpressPassInformation]
  -[NPKProtoRemoveExpressPassWithUniqueIdentifierResponse currentExpressPassesInformations]
  -[NPKProtoRemoveExpressPassWithUniqueIdentifierResponse setCurrentExpressPassesInformations:]


NPKPassesManager : NSObject <PKGroupsControllerDelegate, PKGroupDelegate, NPKPassesDataSource>
 @property  NSHashTable *observers
 @property  PKGroupsController *groupsController
 @property  NSArray *currentPasses
 @property  NSArray *currentPaymentPasses
 @property  NSArray *currentSecureElementPasses
 @property  NSArray *currentExpiredPasses
 @property  NPKStandaloneFirstUnlockCoordinator *firstUnlockCoordinator
 @property  unsigned long options
 @property  int notifyToken
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NPKPassesManager notifyToken]
  -[NPKPassesManager unregisterObserver:]
  -[NPKPassesManager registerObserver:]
  -[NPKPassesManager setNotifyToken:]
  -[NPKPassesManager options]
  -[NPKPassesManager setOptions:]
  -[NPKPassesManager .cxx_destruct]
  -[NPKPassesManager initWithOptions:]
  -[NPKPassesManager _notifyObservers:]
  -[NPKPassesManager setObservers:]
  -[NPKPassesManager init]
  -[NPKPassesManager passes]
  -[NPKPassesManager group:didUpdatePass:atIndex:]
  -[NPKPassesManager group:didInsertPass:atIndex:]
  -[NPKPassesManager group:didMovePassFromIndex:toIndex:]
  -[NPKPassesManager group:didRemovePass:atIndex:]
  -[NPKPassesManager paymentPasses]
  -[NPKPassesManager groupsController:didInsertGroup:atIndex:]
  -[NPKPassesManager groupsController:didMoveGroup:fromIndex:toIndex:]
  -[NPKPassesManager groupsController:didRemoveGroup:atIndex:]
  -[NPKPassesManager enableRemoteUpdates]
  -[NPKPassesManager observers]
  -[NPKPassesManager dealloc]
  -[NPKPassesManager removePass:]
  -[NPKPassesManager setGroupsController:]
  -[NPKPassesManager reloadPasses]
  -[NPKPassesManager reloadPassesWithCompletion:]
  -[NPKPassesManager groupsController]
  -[NPKPassesManager _handleObjectSettingsChanged:]
  -[NPKPassesManager _loadPasses]
  -[NPKPassesManager _reloadPasses]
  -[NPKPassesManager _updateCurrentPasses]
  -[NPKPassesManager currentPasses]
  -[NPKPassesManager currentExpiredPasses]
  -[NPKPassesManager currentPaymentPasses]
  -[NPKPassesManager currentSecureElementPasses]
  -[NPKPassesManager _reloadPassesWithCompletion:]
  -[NPKPassesManager setCurrentPasses:]
  -[NPKPassesManager setCurrentPaymentPasses:]
  -[NPKPassesManager setCurrentSecureElementPasses:]
  -[NPKPassesManager setCurrentExpiredPasses:]
  -[NPKPassesManager _didFinishLoadPasses]
  -[NPKPassesManager _loadImageSetFromPasses:]
  -[NPKPassesManager _setGroupControllerGroupsDelegate]
  -[NPKPassesManager _loadContentAndImageSetsForPass:completion:]
  -[NPKPassesManager passForUniqueID:]
  -[NPKPassesManager secureElementPasses]
  -[NPKPassesManager expiredPasses]
  -[NPKPassesManager shouldAllowMovingItemAtIndex:toIndex:]
  -[NPKPassesManager movePassAtIndex:toIndex:]
  -[NPKPassesManager unarchivePass:]
  -[NPKPassesManager setDefaultPaymentPass:]
  -[NPKPassesManager suppressRemoteUpdates]
  -[NPKPassesManager firstUnlockCoordinator]
  -[NPKPassesManager setFirstUnlockCoordinator:]


NPKProtoConfigurationDataResponse : PBCodable <NSCopying>
 @property  BOOL hasPending
 @property  BOOL pending
 @property  BOOL hasConfigurationDataBytes
 @property  NSData *configurationDataBytes

  // instance methods
  -[NPKProtoConfigurationDataResponse pending]
  -[NPKProtoConfigurationDataResponse mergeFrom:]
  -[NPKProtoConfigurationDataResponse setPending:]
  -[NPKProtoConfigurationDataResponse .cxx_destruct]
  -[NPKProtoConfigurationDataResponse dictionaryRepresentation]
  -[NPKProtoConfigurationDataResponse writeTo:]
  -[NPKProtoConfigurationDataResponse isEqual:]
  -[NPKProtoConfigurationDataResponse copyTo:]
  -[NPKProtoConfigurationDataResponse readFrom:]
  -[NPKProtoConfigurationDataResponse copyWithZone:]
  -[NPKProtoConfigurationDataResponse setHasPending:]
  -[NPKProtoConfigurationDataResponse hasPending]
  -[NPKProtoConfigurationDataResponse setConfigurationDataBytes:]
  -[NPKProtoConfigurationDataResponse hasConfigurationDataBytes]
  -[NPKProtoConfigurationDataResponse configurationDataBytes]


NPKProtoDeclineRelatedInvitationsIfNecessaryRequest : PBRequest <NSCopying>
 @property  BOOL hasInvitationData
 @property  NSData *invitationData

  // instance methods
  -[NPKProtoDeclineRelatedInvitationsIfNecessaryRequest mergeFrom:]
  -[NPKProtoDeclineRelatedInvitationsIfNecessaryRequest .cxx_destruct]
  -[NPKProtoDeclineRelatedInvitationsIfNecessaryRequest dictionaryRepresentation]
  -[NPKProtoDeclineRelatedInvitationsIfNecessaryRequest writeTo:]
  -[NPKProtoDeclineRelatedInvitationsIfNecessaryRequest isEqual:]
  -[NPKProtoDeclineRelatedInvitationsIfNecessaryRequest copyTo:]
  -[NPKProtoDeclineRelatedInvitationsIfNecessaryRequest readFrom:]
  -[NPKProtoDeclineRelatedInvitationsIfNecessaryRequest copyWithZone:]
  -[NPKProtoDeclineRelatedInvitationsIfNecessaryRequest invitationData]
  -[NPKProtoDeclineRelatedInvitationsIfNecessaryRequest setInvitationData:]
  -[NPKProtoDeclineRelatedInvitationsIfNecessaryRequest hasInvitationData]


NPKProtoRemoteAdminPerformRequest : PBRequest <NSCopying>
 @property  NSData *url
 @property  NSString *seid
 @property  NSString *command
 @property  BOOL hasInfoDictionary
 @property  NSData *infoDictionary

  // instance methods
  -[NPKProtoRemoteAdminPerformRequest infoDictionary]
  -[NPKProtoRemoteAdminPerformRequest mergeFrom:]
  -[NPKProtoRemoteAdminPerformRequest setCommand:]
  -[NPKProtoRemoteAdminPerformRequest url]
  -[NPKProtoRemoteAdminPerformRequest seid]
  -[NPKProtoRemoteAdminPerformRequest setSeid:]
  -[NPKProtoRemoteAdminPerformRequest .cxx_destruct]
  -[NPKProtoRemoteAdminPerformRequest dictionaryRepresentation]
  -[NPKProtoRemoteAdminPerformRequest command]
  -[NPKProtoRemoteAdminPerformRequest writeTo:]
  -[NPKProtoRemoteAdminPerformRequest setUrl:]
  -[NPKProtoRemoteAdminPerformRequest isEqual:]
  -[NPKProtoRemoteAdminPerformRequest copyTo:]
  -[NPKProtoRemoteAdminPerformRequest readFrom:]
  -[NPKProtoRemoteAdminPerformRequest copyWithZone:]
  -[NPKProtoRemoteAdminPerformRequest setInfoDictionary:]
  -[NPKProtoRemoteAdminPerformRequest hasInfoDictionary]


NPKProtoStandalonePaymentProvisioningFlowChooseFlowRequest : PBRequest <NSCopying>
 @property  NPKProtoStandaloneRequestHeader *requestHeader
 @property  BOOL hasChosenFlowPickerItemIdentifier
 @property  NSString *chosenFlowPickerItemIdentifier

  // instance methods
  -[NPKProtoStandalonePaymentProvisioningFlowChooseFlowRequest mergeFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseFlowRequest .cxx_destruct]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseFlowRequest dictionaryRepresentation]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseFlowRequest writeTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseFlowRequest isEqual:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseFlowRequest copyTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseFlowRequest readFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseFlowRequest copyWithZone:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseFlowRequest requestHeader]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseFlowRequest setRequestHeader:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseFlowRequest setChosenFlowPickerItemIdentifier:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseFlowRequest hasChosenFlowPickerItemIdentifier]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseFlowRequest chosenFlowPickerItemIdentifier]


NPKProtoCommutePlanReminderForCommutePlanAndPassRequest : PBRequest <NSCopying>
 @property  BOOL hasUniqueID
 @property  NSString *uniqueID
 @property  BOOL hasCommutePlanBytes
 @property  NSData *commutePlanBytes

  // instance methods
  -[NPKProtoCommutePlanReminderForCommutePlanAndPassRequest mergeFrom:]
  -[NPKProtoCommutePlanReminderForCommutePlanAndPassRequest uniqueID]
  -[NPKProtoCommutePlanReminderForCommutePlanAndPassRequest .cxx_destruct]
  -[NPKProtoCommutePlanReminderForCommutePlanAndPassRequest dictionaryRepresentation]
  -[NPKProtoCommutePlanReminderForCommutePlanAndPassRequest writeTo:]
  -[NPKProtoCommutePlanReminderForCommutePlanAndPassRequest isEqual:]
  -[NPKProtoCommutePlanReminderForCommutePlanAndPassRequest copyTo:]
  -[NPKProtoCommutePlanReminderForCommutePlanAndPassRequest readFrom:]
  -[NPKProtoCommutePlanReminderForCommutePlanAndPassRequest setUniqueID:]
  -[NPKProtoCommutePlanReminderForCommutePlanAndPassRequest copyWithZone:]
  -[NPKProtoCommutePlanReminderForCommutePlanAndPassRequest hasUniqueID]
  -[NPKProtoCommutePlanReminderForCommutePlanAndPassRequest setCommutePlanBytes:]
  -[NPKProtoCommutePlanReminderForCommutePlanAndPassRequest hasCommutePlanBytes]
  -[NPKProtoCommutePlanReminderForCommutePlanAndPassRequest commutePlanBytes]


NPKProtoCanAcceptInvitationRequest : PBRequest <NSCopying>
 @property  BOOL hasInvitationData
 @property  NSData *invitationData

  // instance methods
  -[NPKProtoCanAcceptInvitationRequest mergeFrom:]
  -[NPKProtoCanAcceptInvitationRequest .cxx_destruct]
  -[NPKProtoCanAcceptInvitationRequest dictionaryRepresentation]
  -[NPKProtoCanAcceptInvitationRequest writeTo:]
  -[NPKProtoCanAcceptInvitationRequest isEqual:]
  -[NPKProtoCanAcceptInvitationRequest copyTo:]
  -[NPKProtoCanAcceptInvitationRequest readFrom:]
  -[NPKProtoCanAcceptInvitationRequest copyWithZone:]
  -[NPKProtoCanAcceptInvitationRequest invitationData]
  -[NPKProtoCanAcceptInvitationRequest setInvitationData:]
  -[NPKProtoCanAcceptInvitationRequest hasInvitationData]


NPKProtoAvailableProductsResponse : PBCodable <NSCopying>
 @property  BOOL hasPending
 @property  BOOL pending
 @property  BOOL hasAvailableProductsData
 @property  NSData *availableProductsData
 @property  BOOL hasErrorData
 @property  NSData *errorData

  // instance methods
  -[NPKProtoAvailableProductsResponse pending]
  -[NPKProtoAvailableProductsResponse mergeFrom:]
  -[NPKProtoAvailableProductsResponse setPending:]
  -[NPKProtoAvailableProductsResponse .cxx_destruct]
  -[NPKProtoAvailableProductsResponse dictionaryRepresentation]
  -[NPKProtoAvailableProductsResponse writeTo:]
  -[NPKProtoAvailableProductsResponse isEqual:]
  -[NPKProtoAvailableProductsResponse copyTo:]
  -[NPKProtoAvailableProductsResponse readFrom:]
  -[NPKProtoAvailableProductsResponse copyWithZone:]
  -[NPKProtoAvailableProductsResponse errorData]
  -[NPKProtoAvailableProductsResponse hasErrorData]
  -[NPKProtoAvailableProductsResponse setErrorData:]
  -[NPKProtoAvailableProductsResponse setHasPending:]
  -[NPKProtoAvailableProductsResponse hasPending]
  -[NPKProtoAvailableProductsResponse setAvailableProductsData:]
  -[NPKProtoAvailableProductsResponse hasAvailableProductsData]
  -[NPKProtoAvailableProductsResponse availableProductsData]


NPKProtoPerformDeviceCheckInResponse : PBCodable <NSCopying>
 @property  BOOL hasPending
 @property  BOOL pending
 @property  BOOL hasSuccess
 @property  BOOL success
 @property  BOOL hasErrorData
 @property  NSData *errorData

  // instance methods
  -[NPKProtoPerformDeviceCheckInResponse setSuccess:]
  -[NPKProtoPerformDeviceCheckInResponse success]
  -[NPKProtoPerformDeviceCheckInResponse pending]
  -[NPKProtoPerformDeviceCheckInResponse mergeFrom:]
  -[NPKProtoPerformDeviceCheckInResponse setPending:]
  -[NPKProtoPerformDeviceCheckInResponse .cxx_destruct]
  -[NPKProtoPerformDeviceCheckInResponse hasSuccess]
  -[NPKProtoPerformDeviceCheckInResponse dictionaryRepresentation]
  -[NPKProtoPerformDeviceCheckInResponse writeTo:]
  -[NPKProtoPerformDeviceCheckInResponse setHasSuccess:]
  -[NPKProtoPerformDeviceCheckInResponse isEqual:]
  -[NPKProtoPerformDeviceCheckInResponse copyTo:]
  -[NPKProtoPerformDeviceCheckInResponse readFrom:]
  -[NPKProtoPerformDeviceCheckInResponse copyWithZone:]
  -[NPKProtoPerformDeviceCheckInResponse errorData]
  -[NPKProtoPerformDeviceCheckInResponse hasErrorData]
  -[NPKProtoPerformDeviceCheckInResponse setErrorData:]
  -[NPKProtoPerformDeviceCheckInResponse setHasPending:]
  -[NPKProtoPerformDeviceCheckInResponse hasPending]


NPKPaymentBarcode : NSObject
 @property  NSString *barcodeIdentifier
 @property  NSData *decryptedBarcodeCredential
 @property  NSArray *barcodes
 @property  unsigned long state

  // instance methods
  -[NPKPaymentBarcode .cxx_destruct]
  -[NPKPaymentBarcode setState:]
  -[NPKPaymentBarcode barcodeIdentifier]
  -[NPKPaymentBarcode setBarcodeIdentifier:]
  -[NPKPaymentBarcode isEqual:]
  -[NPKPaymentBarcode barcodes]
  -[NPKPaymentBarcode state]
  -[NPKPaymentBarcode decryptedBarcodeCredential]
  -[NPKPaymentBarcode initWithBarcodeIdentifier:decryptedBarcodeCredential:error:]
  -[NPKPaymentBarcode setDecryptedBarcodeCredential:]
  -[NPKPaymentBarcode setBarcodes:]


NPKProtoAddISO18013BlobsRequest : PBRequest <NSCopying>
 @property  NSMutableArray *subcredentialDatas
 @property  NSMutableArray *isoblobs
 @property  BOOL hasCardType
 @property  int cardType

  // class methods
  +[NPKProtoAddISO18013BlobsRequest subcredentialDataType]
  +[NPKProtoAddISO18013BlobsRequest isoblobsType]

  // instance methods
  -[NPKProtoAddISO18013BlobsRequest cardType]
  -[NPKProtoAddISO18013BlobsRequest mergeFrom:]
  -[NPKProtoAddISO18013BlobsRequest .cxx_destruct]
  -[NPKProtoAddISO18013BlobsRequest dictionaryRepresentation]
  -[NPKProtoAddISO18013BlobsRequest writeTo:]
  -[NPKProtoAddISO18013BlobsRequest isEqual:]
  -[NPKProtoAddISO18013BlobsRequest copyTo:]
  -[NPKProtoAddISO18013BlobsRequest readFrom:]
  -[NPKProtoAddISO18013BlobsRequest setCardType:]
  -[NPKProtoAddISO18013BlobsRequest copyWithZone:]
  -[NPKProtoAddISO18013BlobsRequest hasCardType]
  -[NPKProtoAddISO18013BlobsRequest addSubcredentialData:]
  -[NPKProtoAddISO18013BlobsRequest addIsoblobs:]
  -[NPKProtoAddISO18013BlobsRequest subcredentialDatasCount]
  -[NPKProtoAddISO18013BlobsRequest clearSubcredentialDatas]
  -[NPKProtoAddISO18013BlobsRequest subcredentialDataAtIndex:]
  -[NPKProtoAddISO18013BlobsRequest isoblobsCount]
  -[NPKProtoAddISO18013BlobsRequest clearIsoblobs]
  -[NPKProtoAddISO18013BlobsRequest isoblobsAtIndex:]
  -[NPKProtoAddISO18013BlobsRequest setHasCardType:]
  -[NPKProtoAddISO18013BlobsRequest cardTypeAsString:]
  -[NPKProtoAddISO18013BlobsRequest StringAsCardType:]
  -[NPKProtoAddISO18013BlobsRequest subcredentialDatas]
  -[NPKProtoAddISO18013BlobsRequest setSubcredentialDatas:]
  -[NPKProtoAddISO18013BlobsRequest isoblobs]
  -[NPKProtoAddISO18013BlobsRequest setIsoblobs:]


NPKProtoStandalonePaymentProvisioningMethodMetadataDictionaryEntry : PBCodable <NSCopying>
 @property  BOOL hasType
 @property  NSString *type
 @property  BOOL hasMetadata
 @property  NPKProtoStandalonePaymentProvisioningMethodMetadata *metadata

  // instance methods
  -[NPKProtoStandalonePaymentProvisioningMethodMetadataDictionaryEntry mergeFrom:]
  -[NPKProtoStandalonePaymentProvisioningMethodMetadataDictionaryEntry hasMetadata]
  -[NPKProtoStandalonePaymentProvisioningMethodMetadataDictionaryEntry setType:]
  -[NPKProtoStandalonePaymentProvisioningMethodMetadataDictionaryEntry .cxx_destruct]
  -[NPKProtoStandalonePaymentProvisioningMethodMetadataDictionaryEntry dictionaryRepresentation]
  -[NPKProtoStandalonePaymentProvisioningMethodMetadataDictionaryEntry writeTo:]
  -[NPKProtoStandalonePaymentProvisioningMethodMetadataDictionaryEntry hasType]
  -[NPKProtoStandalonePaymentProvisioningMethodMetadataDictionaryEntry isEqual:]
  -[NPKProtoStandalonePaymentProvisioningMethodMetadataDictionaryEntry copyTo:]
  -[NPKProtoStandalonePaymentProvisioningMethodMetadataDictionaryEntry readFrom:]
  -[NPKProtoStandalonePaymentProvisioningMethodMetadataDictionaryEntry metadata]
  -[NPKProtoStandalonePaymentProvisioningMethodMetadataDictionaryEntry setMetadata:]
  -[NPKProtoStandalonePaymentProvisioningMethodMetadataDictionaryEntry type]
  -[NPKProtoStandalonePaymentProvisioningMethodMetadataDictionaryEntry copyWithZone:]


NPKProtoStandalonePaymentProvisioningFlowStepContext : PBCodable <NSCopying>
 @property  NSString *stepIdentifier
 @property  BOOL hasBackStepIdentifier
 @property  NSString *backStepIdentifier
 @property  BOOL hasAllowsAddLater
 @property  BOOL allowsAddLater
 @property  BOOL hasWelcomeStepContext
 @property  NPKProtoStandalonePaymentProvisioningFlowWelcomeStepContext *welcomeStepContext
 @property  BOOL hasChooseFlowStepContext
 @property  NPKProtoStandalonePaymentProvisioningFlowChooseFlowStepContext *chooseFlowStepContext
 @property  BOOL hasChooseProductStepContext
 @property  NPKProtoStandalonePaymentProvisioningFlowChooseProductStepContext *chooseProductStepContext
 @property  BOOL hasChooseCredentialsStepContext
 @property  NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsStepContext *chooseCredentialsStepContext
 @property  BOOL hasDigitalIssuanceAmountStepContext
 @property  NPKProtoStandalonePaymentProvisioningFlowDigitalIssuanceAmountStepContext *digitalIssuanceAmountStepContext
 @property  BOOL hasDigitalIssuancePaymentStepContext
 @property  NPKProtoStandalonePaymentProvisioningFlowDigitalIssuancePaymentStepContext *digitalIssuancePaymentStepContext
 @property  BOOL hasMoreInformationStepContext
 @property  NPKProtoStandalonePaymentProvisioningFlowMoreInformationStepContext *moreInformationStepContext
 @property  BOOL hasReaderModeEntryStepContext
 @property  NPKProtoStandalonePaymentProvisioningFlowReaderModeEntryStepContext *readerModeEntryStepContext
 @property  BOOL hasReaderModeIngestionStepContext
 @property  NPKProtoStandalonePaymentProvisioningFlowReaderModeIngestionStepContext *readerModeIngestionStepContext
 @property  BOOL hasManualEntryStepContext
 @property  NPKProtoStandalonePaymentProvisioningFlowManualEntryStepContext *manualEntryStepContext
 @property  BOOL hasSecondaryManualEntryStepContext
 @property  NPKProtoStandalonePaymentProvisioningFlowSecondaryManualEntryStepContext *secondaryManualEntryStepContext
 @property  BOOL hasLocalDeviceManualEntryStepContext
 @property  NPKProtoStandalonePaymentProvisioningFlowLocalDeviceManualEntryStepContext *localDeviceManualEntryStepContext
 @property  BOOL hasLocalDeviceManualEntryProgressStepContext
 @property  NPKProtoStandalonePaymentProvisioningFlowLocalDeviceManualEntryProgressStepContext *localDeviceManualEntryProgressStepContext
 @property  BOOL hasProductDisambiguationStepContext
 @property  NPKProtoStandalonePaymentProvisioningFlowProductDisambiguationStepContext *productDisambiguationStepContext
 @property  BOOL hasPasscodeUpgradeStepContext
 @property  NPKProtoStandalonePaymentProvisioningFlowPasscodeUpgradeStepContext *passcodeUpgradeStepContext
 @property  BOOL hasTermsAndConditionsStepContext
 @property  NPKProtoStandalonePaymentProvisioningFlowTermsAndConditionsStepContext *termsAndConditionsStepContext
 @property  BOOL hasProvisioningProgressStepContext
 @property  NPKProtoStandalonePaymentProvisioningFlowProvisioningProgressStepContext *provisioningProgressStepContext
 @property  BOOL hasProvisioningResultStepContext
 @property  NPKProtoStandalonePaymentProvisioningFlowProvisioningResultStepContext *provisioningResultStepContext
 @property  BOOL hasIssuerVerificationChannelsStepContext
 @property  NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationChannelsStepContext *issuerVerificationChannelsStepContext
 @property  BOOL hasIssuerVerificationFieldsStepContext
 @property  NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationFieldsStepContext *issuerVerificationFieldsStepContext
 @property  BOOL hasIssuerVerificationCodeStepContext
 @property  NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationCodeStepContext *issuerVerificationCodeStepContext

  // instance methods
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext mergeFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext .cxx_destruct]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext dictionaryRepresentation]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext writeTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext isEqual:]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext stepIdentifier]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext copyTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext setStepIdentifier:]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext readFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext copyWithZone:]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext setBackStepIdentifier:]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext setWelcomeStepContext:]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext setChooseFlowStepContext:]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext setChooseProductStepContext:]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext setChooseCredentialsStepContext:]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext setDigitalIssuanceAmountStepContext:]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext setDigitalIssuancePaymentStepContext:]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext setMoreInformationStepContext:]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext setReaderModeEntryStepContext:]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext setReaderModeIngestionStepContext:]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext setManualEntryStepContext:]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext setSecondaryManualEntryStepContext:]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext setLocalDeviceManualEntryStepContext:]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext setLocalDeviceManualEntryProgressStepContext:]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext setProductDisambiguationStepContext:]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext setPasscodeUpgradeStepContext:]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext setTermsAndConditionsStepContext:]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext setProvisioningProgressStepContext:]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext setProvisioningResultStepContext:]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext setIssuerVerificationChannelsStepContext:]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext setIssuerVerificationFieldsStepContext:]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext setIssuerVerificationCodeStepContext:]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext hasBackStepIdentifier]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext setAllowsAddLater:]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext setHasAllowsAddLater:]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext hasAllowsAddLater]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext hasWelcomeStepContext]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext hasChooseFlowStepContext]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext hasChooseProductStepContext]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext hasChooseCredentialsStepContext]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext hasDigitalIssuanceAmountStepContext]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext hasDigitalIssuancePaymentStepContext]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext hasMoreInformationStepContext]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext hasReaderModeEntryStepContext]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext hasReaderModeIngestionStepContext]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext hasManualEntryStepContext]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext hasSecondaryManualEntryStepContext]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext hasLocalDeviceManualEntryStepContext]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext hasLocalDeviceManualEntryProgressStepContext]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext hasProductDisambiguationStepContext]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext hasPasscodeUpgradeStepContext]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext hasTermsAndConditionsStepContext]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext hasProvisioningProgressStepContext]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext hasProvisioningResultStepContext]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext hasIssuerVerificationChannelsStepContext]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext hasIssuerVerificationFieldsStepContext]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext hasIssuerVerificationCodeStepContext]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext backStepIdentifier]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext allowsAddLater]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext welcomeStepContext]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext chooseFlowStepContext]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext chooseProductStepContext]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext chooseCredentialsStepContext]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext digitalIssuanceAmountStepContext]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext digitalIssuancePaymentStepContext]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext moreInformationStepContext]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext readerModeEntryStepContext]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext readerModeIngestionStepContext]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext manualEntryStepContext]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext secondaryManualEntryStepContext]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext localDeviceManualEntryStepContext]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext localDeviceManualEntryProgressStepContext]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext productDisambiguationStepContext]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext passcodeUpgradeStepContext]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext termsAndConditionsStepContext]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext provisioningProgressStepContext]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext provisioningResultStepContext]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext issuerVerificationChannelsStepContext]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext issuerVerificationFieldsStepContext]
  -[NPKProtoStandalonePaymentProvisioningFlowStepContext issuerVerificationCodeStepContext]


NPKProtoStandalonePaymentProvisioningFlowAcknowledgeMoreInformationRequest : PBRequest <NSCopying>
 @property  NPKProtoStandaloneRequestHeader *requestHeader

  // instance methods
  -[NPKProtoStandalonePaymentProvisioningFlowAcknowledgeMoreInformationRequest mergeFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowAcknowledgeMoreInformationRequest .cxx_destruct]
  -[NPKProtoStandalonePaymentProvisioningFlowAcknowledgeMoreInformationRequest dictionaryRepresentation]
  -[NPKProtoStandalonePaymentProvisioningFlowAcknowledgeMoreInformationRequest writeTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowAcknowledgeMoreInformationRequest isEqual:]
  -[NPKProtoStandalonePaymentProvisioningFlowAcknowledgeMoreInformationRequest copyTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowAcknowledgeMoreInformationRequest readFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowAcknowledgeMoreInformationRequest copyWithZone:]
  -[NPKProtoStandalonePaymentProvisioningFlowAcknowledgeMoreInformationRequest requestHeader]
  -[NPKProtoStandalonePaymentProvisioningFlowAcknowledgeMoreInformationRequest setRequestHeader:]


NPKIDVRemoteDeviceProtoNotificationRequest : PBRequest <NSCopying>
 @property  int notificationType
 @property  int documentType
 @property  BOOL hasIssuerName
 @property  NSString *issuerName

  // instance methods
  -[NPKIDVRemoteDeviceProtoNotificationRequest mergeFrom:]
  -[NPKIDVRemoteDeviceProtoNotificationRequest .cxx_destruct]
  -[NPKIDVRemoteDeviceProtoNotificationRequest setNotificationType:]
  -[NPKIDVRemoteDeviceProtoNotificationRequest dictionaryRepresentation]
  -[NPKIDVRemoteDeviceProtoNotificationRequest writeTo:]
  -[NPKIDVRemoteDeviceProtoNotificationRequest isEqual:]
  -[NPKIDVRemoteDeviceProtoNotificationRequest copyTo:]
  -[NPKIDVRemoteDeviceProtoNotificationRequest notificationType]
  -[NPKIDVRemoteDeviceProtoNotificationRequest readFrom:]
  -[NPKIDVRemoteDeviceProtoNotificationRequest setDocumentType:]
  -[NPKIDVRemoteDeviceProtoNotificationRequest issuerName]
  -[NPKIDVRemoteDeviceProtoNotificationRequest documentType]
  -[NPKIDVRemoteDeviceProtoNotificationRequest copyWithZone:]
  -[NPKIDVRemoteDeviceProtoNotificationRequest notificationTypeAsString:]
  -[NPKIDVRemoteDeviceProtoNotificationRequest StringAsNotificationType:]
  -[NPKIDVRemoteDeviceProtoNotificationRequest setIssuerName:]
  -[NPKIDVRemoteDeviceProtoNotificationRequest documentTypeAsString:]
  -[NPKIDVRemoteDeviceProtoNotificationRequest StringAsDocumentType:]
  -[NPKIDVRemoteDeviceProtoNotificationRequest hasIssuerName]


NPKProtoPeerPaymentWebServiceContextDidChangeRequest : PBRequest <NSCopying>
 @property  BOOL hasPeerPaymentWebServiceContextData
 @property  NSData *peerPaymentWebServiceContextData
 @property  BOOL hasPeerPaymentAccountData
 @property  NSData *peerPaymentAccountData

  // instance methods
  -[NPKProtoPeerPaymentWebServiceContextDidChangeRequest mergeFrom:]
  -[NPKProtoPeerPaymentWebServiceContextDidChangeRequest .cxx_destruct]
  -[NPKProtoPeerPaymentWebServiceContextDidChangeRequest dictionaryRepresentation]
  -[NPKProtoPeerPaymentWebServiceContextDidChangeRequest writeTo:]
  -[NPKProtoPeerPaymentWebServiceContextDidChangeRequest isEqual:]
  -[NPKProtoPeerPaymentWebServiceContextDidChangeRequest copyTo:]
  -[NPKProtoPeerPaymentWebServiceContextDidChangeRequest readFrom:]
  -[NPKProtoPeerPaymentWebServiceContextDidChangeRequest copyWithZone:]
  -[NPKProtoPeerPaymentWebServiceContextDidChangeRequest setPeerPaymentWebServiceContextData:]
  -[NPKProtoPeerPaymentWebServiceContextDidChangeRequest setPeerPaymentAccountData:]
  -[NPKProtoPeerPaymentWebServiceContextDidChangeRequest hasPeerPaymentWebServiceContextData]
  -[NPKProtoPeerPaymentWebServiceContextDidChangeRequest hasPeerPaymentAccountData]
  -[NPKProtoPeerPaymentWebServiceContextDidChangeRequest peerPaymentWebServiceContextData]
  -[NPKProtoPeerPaymentWebServiceContextDidChangeRequest peerPaymentAccountData]


NPKProtoSetCommutePlanReminderForCommutePlanAndPassRequest : PBRequest <NSCopying>
 @property  BOOL hasUniqueID
 @property  NSString *uniqueID
 @property  BOOL hasCommutePlanBytes
 @property  NSData *commutePlanBytes
 @property  BOOL hasReminderInterval
 @property  double reminderInterval

  // instance methods
  -[NPKProtoSetCommutePlanReminderForCommutePlanAndPassRequest mergeFrom:]
  -[NPKProtoSetCommutePlanReminderForCommutePlanAndPassRequest uniqueID]
  -[NPKProtoSetCommutePlanReminderForCommutePlanAndPassRequest .cxx_destruct]
  -[NPKProtoSetCommutePlanReminderForCommutePlanAndPassRequest dictionaryRepresentation]
  -[NPKProtoSetCommutePlanReminderForCommutePlanAndPassRequest writeTo:]
  -[NPKProtoSetCommutePlanReminderForCommutePlanAndPassRequest isEqual:]
  -[NPKProtoSetCommutePlanReminderForCommutePlanAndPassRequest copyTo:]
  -[NPKProtoSetCommutePlanReminderForCommutePlanAndPassRequest readFrom:]
  -[NPKProtoSetCommutePlanReminderForCommutePlanAndPassRequest setUniqueID:]
  -[NPKProtoSetCommutePlanReminderForCommutePlanAndPassRequest copyWithZone:]
  -[NPKProtoSetCommutePlanReminderForCommutePlanAndPassRequest hasUniqueID]
  -[NPKProtoSetCommutePlanReminderForCommutePlanAndPassRequest setCommutePlanBytes:]
  -[NPKProtoSetCommutePlanReminderForCommutePlanAndPassRequest hasCommutePlanBytes]
  -[NPKProtoSetCommutePlanReminderForCommutePlanAndPassRequest commutePlanBytes]
  -[NPKProtoSetCommutePlanReminderForCommutePlanAndPassRequest setReminderInterval:]
  -[NPKProtoSetCommutePlanReminderForCommutePlanAndPassRequest setHasReminderInterval:]
  -[NPKProtoSetCommutePlanReminderForCommutePlanAndPassRequest hasReminderInterval]
  -[NPKProtoSetCommutePlanReminderForCommutePlanAndPassRequest reminderInterval]


NPKProtoStandalonePaymentApplication : PBCodable <NSCopying>
 @property  BOOL hasState
 @property  int state

  // instance methods
  -[NPKProtoStandalonePaymentApplication mergeFrom:]
  -[NPKProtoStandalonePaymentApplication dictionaryRepresentation]
  -[NPKProtoStandalonePaymentApplication writeTo:]
  -[NPKProtoStandalonePaymentApplication setState:]
  -[NPKProtoStandalonePaymentApplication stateAsString:]
  -[NPKProtoStandalonePaymentApplication isEqual:]
  -[NPKProtoStandalonePaymentApplication copyTo:]
  -[NPKProtoStandalonePaymentApplication readFrom:]
  -[NPKProtoStandalonePaymentApplication state]
  -[NPKProtoStandalonePaymentApplication hasState]
  -[NPKProtoStandalonePaymentApplication copyWithZone:]
  -[NPKProtoStandalonePaymentApplication StringAsState:]
  -[NPKProtoStandalonePaymentApplication setHasState:]


NPKProtoStandalonePaymentPass : PBCodable <NSCopying>
 @property  NPKProtoStandalonePass *pass
 @property  BOOL hasPrimaryAccountIdentifier
 @property  NSString *primaryAccountIdentifier
 @property  BOOL hasPrimaryAccountNumberSuffix
 @property  NSString *primaryAccountNumberSuffix
 @property  BOOL hasDeviceAccountIdentifier
 @property  NSString *deviceAccountIdentifier
 @property  BOOL hasDeviceAccountNumberSuffix
 @property  NSString *deviceAccountNumberSuffix
 @property  BOOL hasActivationState
 @property  int activationState
 @property  BOOL hasDevicePrimaryPaymentApplication
 @property  NPKProtoStandalonePaymentApplication *devicePrimaryPaymentApplication

  // instance methods
  -[NPKProtoStandalonePaymentPass activationState]
  -[NPKProtoStandalonePaymentPass pass]
  -[NPKProtoStandalonePaymentPass primaryAccountIdentifier]
  -[NPKProtoStandalonePaymentPass mergeFrom:]
  -[NPKProtoStandalonePaymentPass hasPrimaryAccountNumberSuffix]
  -[NPKProtoStandalonePaymentPass hasPrimaryAccountIdentifier]
  -[NPKProtoStandalonePaymentPass .cxx_destruct]
  -[NPKProtoStandalonePaymentPass setPrimaryAccountNumberSuffix:]
  -[NPKProtoStandalonePaymentPass dictionaryRepresentation]
  -[NPKProtoStandalonePaymentPass setPrimaryAccountIdentifier:]
  -[NPKProtoStandalonePaymentPass writeTo:]
  -[NPKProtoStandalonePaymentPass setDeviceAccountIdentifier:]
  -[NPKProtoStandalonePaymentPass setPass:]
  -[NPKProtoStandalonePaymentPass isEqual:]
  -[NPKProtoStandalonePaymentPass copyTo:]
  -[NPKProtoStandalonePaymentPass readFrom:]
  -[NPKProtoStandalonePaymentPass deviceAccountNumberSuffix]
  -[NPKProtoStandalonePaymentPass setActivationState:]
  -[NPKProtoStandalonePaymentPass setDevicePrimaryPaymentApplication:]
  -[NPKProtoStandalonePaymentPass devicePrimaryPaymentApplication]
  -[NPKProtoStandalonePaymentPass copyWithZone:]
  -[NPKProtoStandalonePaymentPass deviceAccountIdentifier]
  -[NPKProtoStandalonePaymentPass primaryAccountNumberSuffix]
  -[NPKProtoStandalonePaymentPass setHasActivationState:]
  -[NPKProtoStandalonePaymentPass hasActivationState]
  -[NPKProtoStandalonePaymentPass activationStateAsString:]
  -[NPKProtoStandalonePaymentPass StringAsActivationState:]
  -[NPKProtoStandalonePaymentPass setDeviceAccountNumberSuffix:]
  -[NPKProtoStandalonePaymentPass hasDeviceAccountIdentifier]
  -[NPKProtoStandalonePaymentPass hasDeviceAccountNumberSuffix]
  -[NPKProtoStandalonePaymentPass hasDevicePrimaryPaymentApplication]


NPKNanoPassDaemonConnection : NSObject <PKXPCServiceDelegate>
 @property  PKXPCService *remoteService
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NPKNanoPassDaemonConnection .cxx_destruct]
  -[NPKNanoPassDaemonConnection remoteServiceDidResume:]
  -[NPKNanoPassDaemonConnection remoteService:didEstablishConnection:]
  -[NPKNanoPassDaemonConnection remoteServiceDidSuspend:]
  -[NPKNanoPassDaemonConnection init]
  -[NPKNanoPassDaemonConnection remoteService]
  -[NPKNanoPassDaemonConnection remoteService:didInterruptConnection:]
  -[NPKNanoPassDaemonConnection setRemoteService:]
  -[NPKNanoPassDaemonConnection canNotifyAboutExpressModeWithCompletion:]
  -[NPKNanoPassDaemonConnection _errorHandlerWithCompletion:]
  -[NPKNanoPassDaemonConnection _remoteObjectProxySynchronous:withFailureHandler:]
  -[NPKNanoPassDaemonConnection handleMetadataRequestOnPairedDevice:withAssociatedApplicationIdentifiers:completion:]
  -[NPKNanoPassDaemonConnection handleApplicationRedirectRequestOnPairedDeviceForPaymentPass:transaction:]
  -[NPKNanoPassDaemonConnection canAcceptInvitationOnRemoteDeviceForInvitation:completion:]
  -[NPKNanoPassDaemonConnection startSubcredentialProvisioningOnRemoteDeviceForInvitation:]
  -[NPKNanoPassDaemonConnection startSubcredentialProvisioningOnLocalDeviceMatchingInvitation:shouldFetchAnonymizationSaltFromRemoteDevice:completion:]
  -[NPKNanoPassDaemonConnection statusForSentInvitation:completion:]
  -[NPKNanoPassDaemonConnection statusForReceivedInvitation:completion:]
  -[NPKNanoPassDaemonConnection addUserNotificationOfType:passUniqueID:completion:]
  -[NPKNanoPassDaemonConnection noteWillDeleteAccountsSynchronous:completion:]
  -[NPKNanoPassDaemonConnection identityPassPrearmStatusSynchronous:completion:]


NPKProtoConfigurationDataRequest : PBRequest <NSCopying>
  // instance methods
  -[NPKProtoConfigurationDataRequest mergeFrom:]
  -[NPKProtoConfigurationDataRequest dictionaryRepresentation]
  -[NPKProtoConfigurationDataRequest writeTo:]
  -[NPKProtoConfigurationDataRequest isEqual:]
  -[NPKProtoConfigurationDataRequest copyTo:]
  -[NPKProtoConfigurationDataRequest readFrom:]
  -[NPKProtoConfigurationDataRequest copyWithZone:]


NPKProtoListSubcredentialInvitationsResponse : PBCodable <NSCopying>
 @property  NSMutableArray *subcredentialInvitationsDatas

  // class methods
  +[NPKProtoListSubcredentialInvitationsResponse subcredentialInvitationsDataType]

  // instance methods
  -[NPKProtoListSubcredentialInvitationsResponse mergeFrom:]
  -[NPKProtoListSubcredentialInvitationsResponse .cxx_destruct]
  -[NPKProtoListSubcredentialInvitationsResponse dictionaryRepresentation]
  -[NPKProtoListSubcredentialInvitationsResponse writeTo:]
  -[NPKProtoListSubcredentialInvitationsResponse isEqual:]
  -[NPKProtoListSubcredentialInvitationsResponse copyTo:]
  -[NPKProtoListSubcredentialInvitationsResponse readFrom:]
  -[NPKProtoListSubcredentialInvitationsResponse copyWithZone:]
  -[NPKProtoListSubcredentialInvitationsResponse addSubcredentialInvitationsData:]
  -[NPKProtoListSubcredentialInvitationsResponse subcredentialInvitationsDatasCount]
  -[NPKProtoListSubcredentialInvitationsResponse clearSubcredentialInvitationsDatas]
  -[NPKProtoListSubcredentialInvitationsResponse subcredentialInvitationsDataAtIndex:]
  -[NPKProtoListSubcredentialInvitationsResponse subcredentialInvitationsDatas]
  -[NPKProtoListSubcredentialInvitationsResponse setSubcredentialInvitationsDatas:]


NPKProtoStandaloneError : PBCodable <NSCopying>
 @property  BOOL hasDomain
 @property  NSString *domain
 @property  long long code
 @property  NSMutableArray *userInfos

  // class methods
  +[NPKProtoStandaloneError userInfosType]

  // instance methods
  -[NPKProtoStandaloneError setCode:]
  -[NPKProtoStandaloneError mergeFrom:]
  -[NPKProtoStandaloneError setDomain:]
  -[NPKProtoStandaloneError .cxx_destruct]
  -[NPKProtoStandaloneError code]
  -[NPKProtoStandaloneError hasDomain]
  -[NPKProtoStandaloneError dictionaryRepresentation]
  -[NPKProtoStandaloneError domain]
  -[NPKProtoStandaloneError writeTo:]
  -[NPKProtoStandaloneError isEqual:]
  -[NPKProtoStandaloneError copyTo:]
  -[NPKProtoStandaloneError readFrom:]
  -[NPKProtoStandaloneError copyWithZone:]
  -[NPKProtoStandaloneError userInfos]
  -[NPKProtoStandaloneError setUserInfos:]
  -[NPKProtoStandaloneError userInfosCount]
  -[NPKProtoStandaloneError clearUserInfos]
  -[NPKProtoStandaloneError addUserInfos:]
  -[NPKProtoStandaloneError userInfosAtIndex:]


NPKCatalogUtilities : NSObject
  // class methods
  +[NPKCatalogUtilities catalogByMergingCompanionCatalog:intoWatchCatalog:watchPasses:]


NPKIDVRemoteDeviceConnectionCoordinator : NSObject <IDSServiceDelegate, NPKIDVRemoteDeviceNotificationManager, NPKIDVRemoteDeviceCredentialStorageCoordinatorProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NPKIDVRemoteDeviceConnectionCoordinator service:account:identifier:didSendWithSuccess:error:]
  -[NPKIDVRemoteDeviceConnectionCoordinator service:account:incomingUnhandledProtobuf:fromID:context:]
  -[NPKIDVRemoteDeviceConnectionCoordinator service:activeAccountsChanged:]
  -[NPKIDVRemoteDeviceConnectionCoordinator service:devicesChanged:]
  -[NPKIDVRemoteDeviceConnectionCoordinator .cxx_destruct]
  -[NPKIDVRemoteDeviceConnectionCoordinator prearmCredentialWithAuthorizationToken:completion:]
  -[NPKIDVRemoteDeviceConnectionCoordinator init]
  -[NPKIDVRemoteDeviceConnectionCoordinator credentialIdentifiersInPartitions:completion:]
  -[NPKIDVRemoteDeviceConnectionCoordinator provisionCredentialWithType:metadata:policyIdentifier:credentialIdentifier:attestations:completion:]
  -[NPKIDVRemoteDeviceConnectionCoordinator addObserver:]
  -[NPKIDVRemoteDeviceConnectionCoordinator addNotificationWithType:documentType:issuerName:completion:]
  -[NPKIDVRemoteDeviceConnectionCoordinator createCredentialInPartition:options:completion:]
  -[NPKIDVRemoteDeviceConnectionCoordinator establishPrearmTrust:completion:]
  -[NPKIDVRemoteDeviceConnectionCoordinator removeObserver:]
  -[NPKIDVRemoteDeviceConnectionCoordinator nonceForAuthorizationTokenWithCompletion:]
  -[NPKIDVRemoteDeviceConnectionCoordinator deleteGlobalAuthACLWithCompletion:]
  -[NPKIDVRemoteDeviceConnectionCoordinator generateKeyWithType:credentialIdentifier:withConfiguredPartitions:completion:]
  -[NPKIDVRemoteDeviceConnectionCoordinator deleteCredential:withConfiguredPartitions:completion:]
  -[NPKIDVRemoteDeviceConnectionCoordinator propertiesOfCredential:withConfiguredPartitions:completion:]
  -[NPKIDVRemoteDeviceConnectionCoordinator _inQueue_teardownCurrentRemoteDeviceConnection]
  -[NPKIDVRemoteDeviceConnectionCoordinator createCredentialResponse:]
  -[NPKIDVRemoteDeviceConnectionCoordinator generateCredentialSigningKeyResponse:]
  -[NPKIDVRemoteDeviceConnectionCoordinator deleteCredentialResponse:]
  -[NPKIDVRemoteDeviceConnectionCoordinator fetchPropertiesOfCredentialResponse:]
  -[NPKIDVRemoteDeviceConnectionCoordinator fetchPartitionsCredentialIdentifiersResponse:]
  -[NPKIDVRemoteDeviceConnectionCoordinator nonceForAuthorizationTokenResponse:]
  -[NPKIDVRemoteDeviceConnectionCoordinator prearmCredentialWithAuthorizationTokenResponse:]
  -[NPKIDVRemoteDeviceConnectionCoordinator provisionCredentialResponse:]
  -[NPKIDVRemoteDeviceConnectionCoordinator handlePrearmStatusUpdate:service:account:fromID:context:]
  -[NPKIDVRemoteDeviceConnectionCoordinator establishPrearmTrustResponse:]
  -[NPKIDVRemoteDeviceConnectionCoordinator deleteGlobalAuthACLResponse:]
  -[NPKIDVRemoteDeviceConnectionCoordinator addNotificationResponse:]
  -[NPKIDVRemoteDeviceConnectionCoordinator handleHeartbeats:service:account:fromID:context:]
  -[NPKIDVRemoteDeviceConnectionCoordinator _safeQueue_outstandingRequestItemForIDSProtobuf:]
  -[NPKIDVRemoteDeviceConnectionCoordinator _outstandingRequestItemWithCompletion:errorHandler:]
  -[NPKIDVRemoteDeviceConnectionCoordinator _sendRequest:withType:queueIdentifier:requestItem:]
  -[NPKIDVRemoteDeviceConnectionCoordinator _sendRequest:withType:priority:queueIdentifier:requestItem:]
  -[NPKIDVRemoteDeviceConnectionCoordinator _safeQueue_resetCleanupTimerForOutstandingRequestItemWithMessageIdentifier:]
  -[NPKIDVRemoteDeviceConnectionCoordinator _safeQueue_outstandingRequestItemWithMessageIdentifier:remove:]
  -[NPKIDVRemoteDeviceConnectionCoordinator _safeQueue_outstandingRequestItemForIDSProtobuf:remove:]
  -[NPKIDVRemoteDeviceConnectionCoordinator startCurrentRemoteDeviceConnection]
  -[NPKIDVRemoteDeviceConnectionCoordinator teardownCurrentRemoteDeviceConnection]


NPKIDVRemoteDeviceConnectionCoordinatorOutstandingRequestItem : NSObject
 @property  NSString *messageIdentifier
 @property  id completion
 @property  @? errorHandler
 @property  @? timeoutHandler

  // instance methods
  -[NPKIDVRemoteDeviceConnectionCoordinatorOutstandingRequestItem completion]
  -[NPKIDVRemoteDeviceConnectionCoordinatorOutstandingRequestItem setCompletion:]
  -[NPKIDVRemoteDeviceConnectionCoordinatorOutstandingRequestItem .cxx_destruct]
  -[NPKIDVRemoteDeviceConnectionCoordinatorOutstandingRequestItem setMessageIdentifier:]
  -[NPKIDVRemoteDeviceConnectionCoordinatorOutstandingRequestItem setErrorHandler:]
  -[NPKIDVRemoteDeviceConnectionCoordinatorOutstandingRequestItem timeoutHandler]
  -[NPKIDVRemoteDeviceConnectionCoordinatorOutstandingRequestItem errorHandler]
  -[NPKIDVRemoteDeviceConnectionCoordinatorOutstandingRequestItem messageIdentifier]
  -[NPKIDVRemoteDeviceConnectionCoordinatorOutstandingRequestItem dealloc]
  -[NPKIDVRemoteDeviceConnectionCoordinatorOutstandingRequestItem setTimeoutHandler:]
  -[NPKIDVRemoteDeviceConnectionCoordinatorOutstandingRequestItem initWithtimeoutQueue:]
  -[NPKIDVRemoteDeviceConnectionCoordinatorOutstandingRequestItem setOrResetCleanupTimer]
  -[NPKIDVRemoteDeviceConnectionCoordinatorOutstandingRequestItem invalidateCleanupTimer]


NPKProtoOwnershipTokenRequest : PBRequest <NSCopying>
 @property  BOOL hasIdentifier
 @property  NSString *identifier

  // instance methods
  -[NPKProtoOwnershipTokenRequest mergeFrom:]
  -[NPKProtoOwnershipTokenRequest .cxx_destruct]
  -[NPKProtoOwnershipTokenRequest dictionaryRepresentation]
  -[NPKProtoOwnershipTokenRequest writeTo:]
  -[NPKProtoOwnershipTokenRequest isEqual:]
  -[NPKProtoOwnershipTokenRequest copyTo:]
  -[NPKProtoOwnershipTokenRequest readFrom:]
  -[NPKProtoOwnershipTokenRequest identifier]
  -[NPKProtoOwnershipTokenRequest setIdentifier:]
  -[NPKProtoOwnershipTokenRequest hasIdentifier]
  -[NPKProtoOwnershipTokenRequest copyWithZone:]


NPKProtoCheckFidoKeyPresenceResponse : PBCodable <NSCopying>
 @property  BOOL hasKeyExists
 @property  BOOL keyExists

  // instance methods
  -[NPKProtoCheckFidoKeyPresenceResponse mergeFrom:]
  -[NPKProtoCheckFidoKeyPresenceResponse dictionaryRepresentation]
  -[NPKProtoCheckFidoKeyPresenceResponse writeTo:]
  -[NPKProtoCheckFidoKeyPresenceResponse setKeyExists:]
  -[NPKProtoCheckFidoKeyPresenceResponse isEqual:]
  -[NPKProtoCheckFidoKeyPresenceResponse copyTo:]
  -[NPKProtoCheckFidoKeyPresenceResponse readFrom:]
  -[NPKProtoCheckFidoKeyPresenceResponse keyExists]
  -[NPKProtoCheckFidoKeyPresenceResponse copyWithZone:]
  -[NPKProtoCheckFidoKeyPresenceResponse setHasKeyExists:]
  -[NPKProtoCheckFidoKeyPresenceResponse hasKeyExists]


NPKIDVRemoteDeviceService : NSObject <NSXPCListenerDelegate, NPKIDVRemoteDeviceServiceServerDelegate>
 @property  NSString *serviceName
 @property  <NPKIDVRemoteDeviceServiceDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NPKIDVRemoteDeviceService serviceName]
  -[NPKIDVRemoteDeviceService initWithServiceName:delegate:callbackQueue:]
  -[NPKIDVRemoteDeviceService .cxx_destruct]
  -[NPKIDVRemoteDeviceService _addServer:]
  -[NPKIDVRemoteDeviceService identityRemoteDeviceServiceServer:didReceiveEvent:fromRemoteDeviceWithID:]
  -[NPKIDVRemoteDeviceService setDelegate:]
  -[NPKIDVRemoteDeviceService _addConnection:]
  -[NPKIDVRemoteDeviceService registerForEvents:withSession:completion:]
  -[NPKIDVRemoteDeviceService delegate]
  -[NPKIDVRemoteDeviceService _removeServer:]
  -[NPKIDVRemoteDeviceService dealloc]
  -[NPKIDVRemoteDeviceService listener:shouldAcceptNewConnection:]
  -[NPKIDVRemoteDeviceService unregisterFromEvents:withSession:completion:]


NPKIDVRemoteDeviceProtoNotificationResponse : PBCodable <NSCopying>
 @property  BOOL hasErrorData
 @property  NSData *errorData

  // instance methods
  -[NPKIDVRemoteDeviceProtoNotificationResponse mergeFrom:]
  -[NPKIDVRemoteDeviceProtoNotificationResponse .cxx_destruct]
  -[NPKIDVRemoteDeviceProtoNotificationResponse dictionaryRepresentation]
  -[NPKIDVRemoteDeviceProtoNotificationResponse writeTo:]
  -[NPKIDVRemoteDeviceProtoNotificationResponse isEqual:]
  -[NPKIDVRemoteDeviceProtoNotificationResponse copyTo:]
  -[NPKIDVRemoteDeviceProtoNotificationResponse readFrom:]
  -[NPKIDVRemoteDeviceProtoNotificationResponse copyWithZone:]
  -[NPKIDVRemoteDeviceProtoNotificationResponse errorData]
  -[NPKIDVRemoteDeviceProtoNotificationResponse hasErrorData]
  -[NPKIDVRemoteDeviceProtoNotificationResponse setErrorData:]


NPKIDVRemoteDeviceProtoPrearmCredentialResponse : PBCodable <NSCopying>
 @property  BOOL hasErrorData
 @property  NSData *errorData

  // instance methods
  -[NPKIDVRemoteDeviceProtoPrearmCredentialResponse mergeFrom:]
  -[NPKIDVRemoteDeviceProtoPrearmCredentialResponse .cxx_destruct]
  -[NPKIDVRemoteDeviceProtoPrearmCredentialResponse dictionaryRepresentation]
  -[NPKIDVRemoteDeviceProtoPrearmCredentialResponse writeTo:]
  -[NPKIDVRemoteDeviceProtoPrearmCredentialResponse isEqual:]
  -[NPKIDVRemoteDeviceProtoPrearmCredentialResponse copyTo:]
  -[NPKIDVRemoteDeviceProtoPrearmCredentialResponse readFrom:]
  -[NPKIDVRemoteDeviceProtoPrearmCredentialResponse copyWithZone:]
  -[NPKIDVRemoteDeviceProtoPrearmCredentialResponse errorData]
  -[NPKIDVRemoteDeviceProtoPrearmCredentialResponse hasErrorData]
  -[NPKIDVRemoteDeviceProtoPrearmCredentialResponse setErrorData:]


NPKIDVRemoteDeviceProtoDeleteCredentialRequest : PBRequest <NSCopying>
 @property  BOOL hasCredentialIdentifier
 @property  NSString *credentialIdentifier
 @property  NSMutableArray *configuredPartitionsIdentifiers

  // class methods
  +[NPKIDVRemoteDeviceProtoDeleteCredentialRequest configuredPartitionsIdentifiersType]

  // instance methods
  -[NPKIDVRemoteDeviceProtoDeleteCredentialRequest mergeFrom:]
  -[NPKIDVRemoteDeviceProtoDeleteCredentialRequest .cxx_destruct]
  -[NPKIDVRemoteDeviceProtoDeleteCredentialRequest dictionaryRepresentation]
  -[NPKIDVRemoteDeviceProtoDeleteCredentialRequest writeTo:]
  -[NPKIDVRemoteDeviceProtoDeleteCredentialRequest credentialIdentifier]
  -[NPKIDVRemoteDeviceProtoDeleteCredentialRequest setCredentialIdentifier:]
  -[NPKIDVRemoteDeviceProtoDeleteCredentialRequest isEqual:]
  -[NPKIDVRemoteDeviceProtoDeleteCredentialRequest copyTo:]
  -[NPKIDVRemoteDeviceProtoDeleteCredentialRequest readFrom:]
  -[NPKIDVRemoteDeviceProtoDeleteCredentialRequest copyWithZone:]
  -[NPKIDVRemoteDeviceProtoDeleteCredentialRequest hasCredentialIdentifier]
  -[NPKIDVRemoteDeviceProtoDeleteCredentialRequest setConfiguredPartitionsIdentifiers:]
  -[NPKIDVRemoteDeviceProtoDeleteCredentialRequest addConfiguredPartitionsIdentifiers:]
  -[NPKIDVRemoteDeviceProtoDeleteCredentialRequest configuredPartitionsIdentifiersCount]
  -[NPKIDVRemoteDeviceProtoDeleteCredentialRequest clearConfiguredPartitionsIdentifiers]
  -[NPKIDVRemoteDeviceProtoDeleteCredentialRequest configuredPartitionsIdentifiersAtIndex:]
  -[NPKIDVRemoteDeviceProtoDeleteCredentialRequest configuredPartitionsIdentifiers]


NPKProtoInitializeCloudStoreIfNecessaryWithHandlerRequest : PBRequest <NSCopying>
  // instance methods
  -[NPKProtoInitializeCloudStoreIfNecessaryWithHandlerRequest mergeFrom:]
  -[NPKProtoInitializeCloudStoreIfNecessaryWithHandlerRequest dictionaryRepresentation]
  -[NPKProtoInitializeCloudStoreIfNecessaryWithHandlerRequest writeTo:]
  -[NPKProtoInitializeCloudStoreIfNecessaryWithHandlerRequest isEqual:]
  -[NPKProtoInitializeCloudStoreIfNecessaryWithHandlerRequest copyTo:]
  -[NPKProtoInitializeCloudStoreIfNecessaryWithHandlerRequest readFrom:]
  -[NPKProtoInitializeCloudStoreIfNecessaryWithHandlerRequest copyWithZone:]


NPKProtoRemotePassActionSelectItemResponse : PBCodable <NSCopying>
 @property  NSString *requestUniqueID
 @property  int result
 @property  BOOL hasIncrementCurrency
 @property  NSString *incrementCurrency
 @property  BOOL hasIncrementAmount
 @property  long long incrementAmount
 @property  BOOL hasServiceProviderDataData
 @property  NSData *serviceProviderDataData

  // instance methods
  -[NPKProtoRemotePassActionSelectItemResponse mergeFrom:]
  -[NPKProtoRemotePassActionSelectItemResponse .cxx_destruct]
  -[NPKProtoRemotePassActionSelectItemResponse dictionaryRepresentation]
  -[NPKProtoRemotePassActionSelectItemResponse writeTo:]
  -[NPKProtoRemotePassActionSelectItemResponse resultAsString:]
  -[NPKProtoRemotePassActionSelectItemResponse isEqual:]
  -[NPKProtoRemotePassActionSelectItemResponse copyTo:]
  -[NPKProtoRemotePassActionSelectItemResponse result]
  -[NPKProtoRemotePassActionSelectItemResponse readFrom:]
  -[NPKProtoRemotePassActionSelectItemResponse StringAsResult:]
  -[NPKProtoRemotePassActionSelectItemResponse setResult:]
  -[NPKProtoRemotePassActionSelectItemResponse copyWithZone:]
  -[NPKProtoRemotePassActionSelectItemResponse setRequestUniqueID:]
  -[NPKProtoRemotePassActionSelectItemResponse requestUniqueID]
  -[NPKProtoRemotePassActionSelectItemResponse setIncrementCurrency:]
  -[NPKProtoRemotePassActionSelectItemResponse setServiceProviderDataData:]
  -[NPKProtoRemotePassActionSelectItemResponse hasIncrementCurrency]
  -[NPKProtoRemotePassActionSelectItemResponse setIncrementAmount:]
  -[NPKProtoRemotePassActionSelectItemResponse setHasIncrementAmount:]
  -[NPKProtoRemotePassActionSelectItemResponse hasIncrementAmount]
  -[NPKProtoRemotePassActionSelectItemResponse hasServiceProviderDataData]
  -[NPKProtoRemotePassActionSelectItemResponse incrementCurrency]
  -[NPKProtoRemotePassActionSelectItemResponse incrementAmount]
  -[NPKProtoRemotePassActionSelectItemResponse serviceProviderDataData]


NPKProtoPeerPaymentRegistrationRequest : PBRequest <NSCopying>
 @property  BOOL hasServiceURL
 @property  NSString *serviceURL
 @property  BOOL hasForceReRegistration
 @property  BOOL forceReRegistration

  // instance methods
  -[NPKProtoPeerPaymentRegistrationRequest mergeFrom:]
  -[NPKProtoPeerPaymentRegistrationRequest .cxx_destruct]
  -[NPKProtoPeerPaymentRegistrationRequest dictionaryRepresentation]
  -[NPKProtoPeerPaymentRegistrationRequest writeTo:]
  -[NPKProtoPeerPaymentRegistrationRequest isEqual:]
  -[NPKProtoPeerPaymentRegistrationRequest copyTo:]
  -[NPKProtoPeerPaymentRegistrationRequest serviceURL]
  -[NPKProtoPeerPaymentRegistrationRequest readFrom:]
  -[NPKProtoPeerPaymentRegistrationRequest setServiceURL:]
  -[NPKProtoPeerPaymentRegistrationRequest copyWithZone:]
  -[NPKProtoPeerPaymentRegistrationRequest hasServiceURL]
  -[NPKProtoPeerPaymentRegistrationRequest setForceReRegistration:]
  -[NPKProtoPeerPaymentRegistrationRequest setHasForceReRegistration:]
  -[NPKProtoPeerPaymentRegistrationRequest hasForceReRegistration]
  -[NPKProtoPeerPaymentRegistrationRequest forceReRegistration]


NPKProtoWebServiceContextDidChangeRequest : PBRequest <NSCopying>
 @property  BOOL hasWebServiceContextBytes
 @property  NSData *webServiceContextBytes

  // instance methods
  -[NPKProtoWebServiceContextDidChangeRequest mergeFrom:]
  -[NPKProtoWebServiceContextDidChangeRequest .cxx_destruct]
  -[NPKProtoWebServiceContextDidChangeRequest dictionaryRepresentation]
  -[NPKProtoWebServiceContextDidChangeRequest writeTo:]
  -[NPKProtoWebServiceContextDidChangeRequest isEqual:]
  -[NPKProtoWebServiceContextDidChangeRequest copyTo:]
  -[NPKProtoWebServiceContextDidChangeRequest readFrom:]
  -[NPKProtoWebServiceContextDidChangeRequest copyWithZone:]
  -[NPKProtoWebServiceContextDidChangeRequest setWebServiceContextBytes:]
  -[NPKProtoWebServiceContextDidChangeRequest hasWebServiceContextBytes]
  -[NPKProtoWebServiceContextDidChangeRequest webServiceContextBytes]


NPKProtoHandleCompanionPeerPaymentRegistrationRequest : PBRequest <NSCopying>
  // instance methods
  -[NPKProtoHandleCompanionPeerPaymentRegistrationRequest mergeFrom:]
  -[NPKProtoHandleCompanionPeerPaymentRegistrationRequest dictionaryRepresentation]
  -[NPKProtoHandleCompanionPeerPaymentRegistrationRequest writeTo:]
  -[NPKProtoHandleCompanionPeerPaymentRegistrationRequest isEqual:]
  -[NPKProtoHandleCompanionPeerPaymentRegistrationRequest copyTo:]
  -[NPKProtoHandleCompanionPeerPaymentRegistrationRequest readFrom:]
  -[NPKProtoHandleCompanionPeerPaymentRegistrationRequest copyWithZone:]


NPKProtoStandalonePaymentProvisioningFlowHandleDigitalIssuanceAmountRequest : PBRequest <NSCopying>
 @property  NPKProtoStandaloneRequestHeader *requestHeader
 @property  BOOL hasAmount
 @property  NSString *amount

  // instance methods
  -[NPKProtoStandalonePaymentProvisioningFlowHandleDigitalIssuanceAmountRequest mergeFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleDigitalIssuanceAmountRequest amount]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleDigitalIssuanceAmountRequest .cxx_destruct]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleDigitalIssuanceAmountRequest dictionaryRepresentation]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleDigitalIssuanceAmountRequest writeTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleDigitalIssuanceAmountRequest isEqual:]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleDigitalIssuanceAmountRequest copyTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleDigitalIssuanceAmountRequest readFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleDigitalIssuanceAmountRequest hasAmount]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleDigitalIssuanceAmountRequest setAmount:]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleDigitalIssuanceAmountRequest copyWithZone:]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleDigitalIssuanceAmountRequest requestHeader]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleDigitalIssuanceAmountRequest setRequestHeader:]


NPKPaymentProvisioningFlowPickerItem : NSObject
 @property  NSString *title
 @property  NSArray *products
 @property  NSString *identifier

  // class methods
  +[NPKPaymentProvisioningFlowPickerItem itemWithIdentifier:title:products:]
  +[NPKPaymentProvisioningFlowPickerItem itemWithIdentifier:products:]

  // instance methods
  -[NPKPaymentProvisioningFlowPickerItem setTitle:]
  -[NPKPaymentProvisioningFlowPickerItem .cxx_destruct]
  -[NPKPaymentProvisioningFlowPickerItem identifier]
  -[NPKPaymentProvisioningFlowPickerItem products]
  -[NPKPaymentProvisioningFlowPickerItem title]
  -[NPKPaymentProvisioningFlowPickerItem setProducts:]


NPKPaymentProvisioningFlowPickerSection : NSObject
 @property  NSString *title
 @property  NSString *footer
 @property  NSMutableArray *items
 @property  NSNumber *productType
 @property  BOOL isTransitSection
 @property  BOOL isPaymentSection
 @property  BOOL isEMoneySection
 @property  BOOL isAppleBalanceSection

  // class methods
  +[NPKPaymentProvisioningFlowPickerSection sectionWithTitle:footer:productType:items:]
  +[NPKPaymentProvisioningFlowPickerSection sectionWithTitle:productType:]
  +[NPKPaymentProvisioningFlowPickerSection sectionWithTitle:productType:items:]
  +[NPKPaymentProvisioningFlowPickerSection sectionWithTitle:footer:productType:]

  // instance methods
  -[NPKPaymentProvisioningFlowPickerSection footer]
  -[NPKPaymentProvisioningFlowPickerSection setFooter:]
  -[NPKPaymentProvisioningFlowPickerSection setTitle:]
  -[NPKPaymentProvisioningFlowPickerSection items]
  -[NPKPaymentProvisioningFlowPickerSection .cxx_destruct]
  -[NPKPaymentProvisioningFlowPickerSection productType]
  -[NPKPaymentProvisioningFlowPickerSection title]
  -[NPKPaymentProvisioningFlowPickerSection isTransitSection]
  -[NPKPaymentProvisioningFlowPickerSection isPaymentSection]
  -[NPKPaymentProvisioningFlowPickerSection isEMoneySection]
  -[NPKPaymentProvisioningFlowPickerSection isAppleBalanceSection]


NPKProtoQueueTSMConnectionResponse : PBCodable <NSCopying>
 @property  BOOL hasPending
 @property  BOOL pending

  // instance methods
  -[NPKProtoQueueTSMConnectionResponse pending]
  -[NPKProtoQueueTSMConnectionResponse mergeFrom:]
  -[NPKProtoQueueTSMConnectionResponse setPending:]
  -[NPKProtoQueueTSMConnectionResponse dictionaryRepresentation]
  -[NPKProtoQueueTSMConnectionResponse writeTo:]
  -[NPKProtoQueueTSMConnectionResponse isEqual:]
  -[NPKProtoQueueTSMConnectionResponse copyTo:]
  -[NPKProtoQueueTSMConnectionResponse readFrom:]
  -[NPKProtoQueueTSMConnectionResponse copyWithZone:]
  -[NPKProtoQueueTSMConnectionResponse setHasPending:]
  -[NPKProtoQueueTSMConnectionResponse hasPending]


NPKProtoUpdatePushTokenRequest : PBRequest <NSCopying>
 @property  BOOL hasPushToken
 @property  NSString *pushToken

  // instance methods
  -[NPKProtoUpdatePushTokenRequest mergeFrom:]
  -[NPKProtoUpdatePushTokenRequest .cxx_destruct]
  -[NPKProtoUpdatePushTokenRequest dictionaryRepresentation]
  -[NPKProtoUpdatePushTokenRequest pushToken]
  -[NPKProtoUpdatePushTokenRequest writeTo:]
  -[NPKProtoUpdatePushTokenRequest isEqual:]
  -[NPKProtoUpdatePushTokenRequest copyTo:]
  -[NPKProtoUpdatePushTokenRequest setPushToken:]
  -[NPKProtoUpdatePushTokenRequest readFrom:]
  -[NPKProtoUpdatePushTokenRequest copyWithZone:]
  -[NPKProtoUpdatePushTokenRequest hasPushToken]


NPKSubcredentialInvitationCoordinator : NSObject <PKSubcredentialProvisioningControllerDelegate>
 @property  NSObject<OS_dispatch_queue> *internalQueue
 @property  NSObject<OS_dispatch_queue> *callbackQueue
 @property  PKPaymentService *paymentService
 @property  PKSubcredentialProvisioningController *subcredentialProvisioningController
 @property  PKAppletSubcredentialSharingSession *sharingSession
 @property  @? completion
 @property  NPKStandaloneFirstUnlockCoordinator *firstUnlockCoordinator
 @property  NPKWatchSubcredentialProvisioningService *subcredentialProvisioningService
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NPKSubcredentialInvitationCoordinator canAddSecureElementPassWithConfiguration:outError:]
  +[NPKSubcredentialInvitationCoordinator canAddSecureElementPassWithInvitation:]

  // instance methods
  -[NPKSubcredentialInvitationCoordinator completion]
  -[NPKSubcredentialInvitationCoordinator setCompletion:]
  -[NPKSubcredentialInvitationCoordinator setInternalQueue:]
  -[NPKSubcredentialInvitationCoordinator initWithCallbackQueue:]
  -[NPKSubcredentialInvitationCoordinator _paymentWebService]
  -[NPKSubcredentialInvitationCoordinator .cxx_destruct]
  -[NPKSubcredentialInvitationCoordinator callbackQueue]
  -[NPKSubcredentialInvitationCoordinator sharingSession]
  -[NPKSubcredentialInvitationCoordinator init]
  -[NPKSubcredentialInvitationCoordinator registerCredentialsWithIdentifiers:completion:]
  -[NPKSubcredentialInvitationCoordinator setPaymentService:]
  -[NPKSubcredentialInvitationCoordinator setCallbackQueue:]
  -[NPKSubcredentialInvitationCoordinator revokeCredentialsWithIdentifiers:completion:]
  -[NPKSubcredentialInvitationCoordinator paymentService]
  -[NPKSubcredentialInvitationCoordinator subcredentialProvisioningController:didFinishWithPass:]
  -[NPKSubcredentialInvitationCoordinator subcredentialProvisioningController:didFinishWithError:inState:]
  -[NPKSubcredentialInvitationCoordinator accountAttestationAnonymizationSaltWithCompletion:]
  -[NPKSubcredentialInvitationCoordinator internalQueue]
  -[NPKSubcredentialInvitationCoordinator _errorWithCode:message:]
  -[NPKSubcredentialInvitationCoordinator firstUnlockCoordinator]
  -[NPKSubcredentialInvitationCoordinator setFirstUnlockCoordinator:]
  -[NPKSubcredentialInvitationCoordinator canAcceptInvitationOnRemoteDeviceForInvitation:completion:]
  -[NPKSubcredentialInvitationCoordinator startSubcredentialProvisioningOnRemoteDeviceForInvitation:]
  -[NPKSubcredentialInvitationCoordinator startSubcredentialProvisioningOnLocalDeviceMatchingInvitation:shouldFetchAnonymizationSaltFromRemoteDevice:completion:]
  -[NPKSubcredentialInvitationCoordinator statusForSentInvitation:completion:]
  -[NPKSubcredentialInvitationCoordinator statusForReceivedInvitation:completion:]
  -[NPKSubcredentialInvitationCoordinator _queue_canAcceptInvitation:completion:]
  -[NPKSubcredentialInvitationCoordinator _queue_listSubcredentialInvitationsWithCompletion:]
  -[NPKSubcredentialInvitationCoordinator _setUpSubcredentialProvisioningController]
  -[NPKSubcredentialInvitationCoordinator subcredentialProvisioningController]
  -[NPKSubcredentialInvitationCoordinator _setUpSharingSessionWithSubcredentialProvisioningController:]
  -[NPKSubcredentialInvitationCoordinator _handleProvisioningAttemptForConfiguration:error:]
  -[NPKSubcredentialInvitationCoordinator _makeConfigurationForInvitation:session:metadata:paymentWebService:completion:]
  -[NPKSubcredentialInvitationCoordinator canAcceptInvitation:completion:]
  -[NPKSubcredentialInvitationCoordinator _fetchInvitationWithIdentifier:completion:]
  -[NPKSubcredentialInvitationCoordinator _performBlockFollowingFirstUnlockWithBlock:]
  -[NPKSubcredentialInvitationCoordinator deviceContainsInvitationMatchingInvitation:withTimeout:completion:]
  -[NPKSubcredentialInvitationCoordinator _queue_deviceContainsInvitationMatchingInvitation:withTimeout:completion:]
  -[NPKSubcredentialInvitationCoordinator _queue_accountAttestationAnonymizationSaltWithCompletion:]
  -[NPKSubcredentialInvitationCoordinator _queue_setAccountAttestationAnonymizationSalt:completion:]
  -[NPKSubcredentialInvitationCoordinator _queue_requestSubcredentialInvitation:fromIDSHandle:completion:]
  -[NPKSubcredentialInvitationCoordinator _queue_updateSubcredentialMetadataOnPass:withCredential:completion:]
  -[NPKSubcredentialInvitationCoordinator _queue_registerCredentialsWithIdentifiers:completion:]
  -[NPKSubcredentialInvitationCoordinator _queue_revokeCredentialsWithIdentifiers:completion:]
  -[NPKSubcredentialInvitationCoordinator _queue_removeSharingInvitation:completion:]
  -[NPKSubcredentialInvitationCoordinator _queue_declineRelatedInvitationsIfNecessaryForInvitation:completion:]
  -[NPKSubcredentialInvitationCoordinator _queue_fetchOrInitializeAccountAttestationAnonymizationSaltIfNecessaryWithCompletion:]
  -[NPKSubcredentialInvitationCoordinator subcredentialProvisioningService]
  -[NPKSubcredentialInvitationCoordinator startProvisioningWithInvitation:metadata:completion:]
  -[NPKSubcredentialInvitationCoordinator setAccountAttestationAnonymizationSalt:completion:]
  -[NPKSubcredentialInvitationCoordinator fetchOrInitializeAccountAttestationAnonymizationSaltIfNecessaryWithCompletion:]
  -[NPKSubcredentialInvitationCoordinator _queue_statusForSentInvitation:completion:]
  -[NPKSubcredentialInvitationCoordinator _queue_statusForReceivedInvitation:completion:]
  -[NPKSubcredentialInvitationCoordinator _endProvisioningWithPassForInvitation:error:]
  -[NPKSubcredentialInvitationCoordinator _isInvitationUniqueForPairedReaderIdentifier:]
  -[NPKSubcredentialInvitationCoordinator _fetchInvitationMatchingInvitation:completion:]
  -[NPKSubcredentialInvitationCoordinator setSubcredentialProvisioningController:]
  -[NPKSubcredentialInvitationCoordinator setSharingSession:]
  -[NPKSubcredentialInvitationCoordinator listSubcredentialInvitationsWithCompletion:]
  -[NPKSubcredentialInvitationCoordinator _startProvisioningForProvisioningController:withConfiguration:]
  -[NPKSubcredentialInvitationCoordinator _invokeCompletionWithPassForInvitation:error:]
  -[NPKSubcredentialInvitationCoordinator startProvisioningWithInvitationIdentifier:metadata:completion:]
  -[NPKSubcredentialInvitationCoordinator requestSubcredentialInvitation:completion:]
  -[NPKSubcredentialInvitationCoordinator updateSubcredentialMetadataOnPass:withCredential:completion:]
  -[NPKSubcredentialInvitationCoordinator removeSharingInvitation:completion:]
  -[NPKSubcredentialInvitationCoordinator declineRelatedInvitationsIfNecessaryForInvitation:completion:]
  -[NPKSubcredentialInvitationCoordinator setSubcredentialProvisioningService:]


NPKProtoPeerPaymentRegistrationResponse : PBCodable <NSCopying>
 @property  BOOL hasPending
 @property  BOOL pending
 @property  BOOL hasSuccess
 @property  BOOL success
 @property  BOOL hasErrorData
 @property  NSData *errorData
 @property  BOOL hasPeerPaymentWebServiceContextData
 @property  NSData *peerPaymentWebServiceContextData
 @property  BOOL hasPeerPaymentAccountData
 @property  NSData *peerPaymentAccountData

  // instance methods
  -[NPKProtoPeerPaymentRegistrationResponse setSuccess:]
  -[NPKProtoPeerPaymentRegistrationResponse success]
  -[NPKProtoPeerPaymentRegistrationResponse pending]
  -[NPKProtoPeerPaymentRegistrationResponse mergeFrom:]
  -[NPKProtoPeerPaymentRegistrationResponse setPending:]
  -[NPKProtoPeerPaymentRegistrationResponse .cxx_destruct]
  -[NPKProtoPeerPaymentRegistrationResponse hasSuccess]
  -[NPKProtoPeerPaymentRegistrationResponse dictionaryRepresentation]
  -[NPKProtoPeerPaymentRegistrationResponse writeTo:]
  -[NPKProtoPeerPaymentRegistrationResponse setHasSuccess:]
  -[NPKProtoPeerPaymentRegistrationResponse isEqual:]
  -[NPKProtoPeerPaymentRegistrationResponse copyTo:]
  -[NPKProtoPeerPaymentRegistrationResponse readFrom:]
  -[NPKProtoPeerPaymentRegistrationResponse copyWithZone:]
  -[NPKProtoPeerPaymentRegistrationResponse errorData]
  -[NPKProtoPeerPaymentRegistrationResponse hasErrorData]
  -[NPKProtoPeerPaymentRegistrationResponse setErrorData:]
  -[NPKProtoPeerPaymentRegistrationResponse setHasPending:]
  -[NPKProtoPeerPaymentRegistrationResponse hasPending]
  -[NPKProtoPeerPaymentRegistrationResponse setPeerPaymentWebServiceContextData:]
  -[NPKProtoPeerPaymentRegistrationResponse setPeerPaymentAccountData:]
  -[NPKProtoPeerPaymentRegistrationResponse hasPeerPaymentWebServiceContextData]
  -[NPKProtoPeerPaymentRegistrationResponse hasPeerPaymentAccountData]
  -[NPKProtoPeerPaymentRegistrationResponse peerPaymentWebServiceContextData]
  -[NPKProtoPeerPaymentRegistrationResponse peerPaymentAccountData]


NPKIDVRemoteDeviceProtoDeleteGlobalAuthACLRequest : PBRequest <NSCopying>
  // instance methods
  -[NPKIDVRemoteDeviceProtoDeleteGlobalAuthACLRequest mergeFrom:]
  -[NPKIDVRemoteDeviceProtoDeleteGlobalAuthACLRequest dictionaryRepresentation]
  -[NPKIDVRemoteDeviceProtoDeleteGlobalAuthACLRequest writeTo:]
  -[NPKIDVRemoteDeviceProtoDeleteGlobalAuthACLRequest isEqual:]
  -[NPKIDVRemoteDeviceProtoDeleteGlobalAuthACLRequest copyTo:]
  -[NPKIDVRemoteDeviceProtoDeleteGlobalAuthACLRequest readFrom:]
  -[NPKIDVRemoteDeviceProtoDeleteGlobalAuthACLRequest copyWithZone:]


NPKProtoPaymentWebServiceRegistrationResponse : PBCodable <NSCopying>
 @property  BOOL hasPending
 @property  BOOL pending
 @property  BOOL hasRegistrationResult
 @property  unsigned int registrationResult
 @property  BOOL hasErrorData
 @property  NSData *errorData
 @property  BOOL hasWebServiceContextData
 @property  NSData *webServiceContextData

  // instance methods
  -[NPKProtoPaymentWebServiceRegistrationResponse pending]
  -[NPKProtoPaymentWebServiceRegistrationResponse mergeFrom:]
  -[NPKProtoPaymentWebServiceRegistrationResponse setPending:]
  -[NPKProtoPaymentWebServiceRegistrationResponse .cxx_destruct]
  -[NPKProtoPaymentWebServiceRegistrationResponse dictionaryRepresentation]
  -[NPKProtoPaymentWebServiceRegistrationResponse writeTo:]
  -[NPKProtoPaymentWebServiceRegistrationResponse isEqual:]
  -[NPKProtoPaymentWebServiceRegistrationResponse copyTo:]
  -[NPKProtoPaymentWebServiceRegistrationResponse readFrom:]
  -[NPKProtoPaymentWebServiceRegistrationResponse registrationResult]
  -[NPKProtoPaymentWebServiceRegistrationResponse setRegistrationResult:]
  -[NPKProtoPaymentWebServiceRegistrationResponse copyWithZone:]
  -[NPKProtoPaymentWebServiceRegistrationResponse errorData]
  -[NPKProtoPaymentWebServiceRegistrationResponse hasErrorData]
  -[NPKProtoPaymentWebServiceRegistrationResponse setErrorData:]
  -[NPKProtoPaymentWebServiceRegistrationResponse setHasPending:]
  -[NPKProtoPaymentWebServiceRegistrationResponse hasPending]
  -[NPKProtoPaymentWebServiceRegistrationResponse setWebServiceContextData:]
  -[NPKProtoPaymentWebServiceRegistrationResponse setHasRegistrationResult:]
  -[NPKProtoPaymentWebServiceRegistrationResponse hasRegistrationResult]
  -[NPKProtoPaymentWebServiceRegistrationResponse hasWebServiceContextData]
  -[NPKProtoPaymentWebServiceRegistrationResponse webServiceContextData]


NPKProtoPassSyncProposedReconciledState : PBCodable <NSCopying>
 @property  BOOL hasProposedReconciledState
 @property  NPKProtoPassSyncState *proposedReconciledState

  // instance methods
  -[NPKProtoPassSyncProposedReconciledState mergeFrom:]
  -[NPKProtoPassSyncProposedReconciledState .cxx_destruct]
  -[NPKProtoPassSyncProposedReconciledState dictionaryRepresentation]
  -[NPKProtoPassSyncProposedReconciledState writeTo:]
  -[NPKProtoPassSyncProposedReconciledState isEqual:]
  -[NPKProtoPassSyncProposedReconciledState copyTo:]
  -[NPKProtoPassSyncProposedReconciledState readFrom:]
  -[NPKProtoPassSyncProposedReconciledState copyWithZone:]
  -[NPKProtoPassSyncProposedReconciledState proposedReconciledState]
  -[NPKProtoPassSyncProposedReconciledState setProposedReconciledState:]
  -[NPKProtoPassSyncProposedReconciledState hasProposedReconciledState]


NPKProtoSetCommutePlanReminderForCommutePlanAndPassResponse : PBCodable <NSCopying>
 @property  BOOL hasPending
 @property  BOOL pending
 @property  BOOL hasSuccess
 @property  BOOL success

  // instance methods
  -[NPKProtoSetCommutePlanReminderForCommutePlanAndPassResponse setSuccess:]
  -[NPKProtoSetCommutePlanReminderForCommutePlanAndPassResponse success]
  -[NPKProtoSetCommutePlanReminderForCommutePlanAndPassResponse pending]
  -[NPKProtoSetCommutePlanReminderForCommutePlanAndPassResponse mergeFrom:]
  -[NPKProtoSetCommutePlanReminderForCommutePlanAndPassResponse setPending:]
  -[NPKProtoSetCommutePlanReminderForCommutePlanAndPassResponse hasSuccess]
  -[NPKProtoSetCommutePlanReminderForCommutePlanAndPassResponse dictionaryRepresentation]
  -[NPKProtoSetCommutePlanReminderForCommutePlanAndPassResponse writeTo:]
  -[NPKProtoSetCommutePlanReminderForCommutePlanAndPassResponse setHasSuccess:]
  -[NPKProtoSetCommutePlanReminderForCommutePlanAndPassResponse isEqual:]
  -[NPKProtoSetCommutePlanReminderForCommutePlanAndPassResponse copyTo:]
  -[NPKProtoSetCommutePlanReminderForCommutePlanAndPassResponse readFrom:]
  -[NPKProtoSetCommutePlanReminderForCommutePlanAndPassResponse copyWithZone:]
  -[NPKProtoSetCommutePlanReminderForCommutePlanAndPassResponse setHasPending:]
  -[NPKProtoSetCommutePlanReminderForCommutePlanAndPassResponse hasPending]


NPKProtoAutomaticProvisioningRequest : PBRequest <NSCopying>
 @property  BOOL hasPassTypeIdentifier
 @property  NSString *passTypeIdentifier
 @property  BOOL hasSerialNumber
 @property  NSString *serialNumber
 @property  BOOL hasCredentialType
 @property  unsigned long credentialType
 @property  BOOL hasPrimaryAccountNumberSuffix
 @property  NSString *primaryAccountNumberSuffix
 @property  BOOL hasLocalizedName
 @property  NSString *localizedName
 @property  BOOL hasCardType
 @property  int cardType

  // instance methods
  -[NPKProtoAutomaticProvisioningRequest localizedName]
  -[NPKProtoAutomaticProvisioningRequest serialNumber]
  -[NPKProtoAutomaticProvisioningRequest cardType]
  -[NPKProtoAutomaticProvisioningRequest setSerialNumber:]
  -[NPKProtoAutomaticProvisioningRequest mergeFrom:]
  -[NPKProtoAutomaticProvisioningRequest setLocalizedName:]
  -[NPKProtoAutomaticProvisioningRequest credentialType]
  -[NPKProtoAutomaticProvisioningRequest hasPrimaryAccountNumberSuffix]
  -[NPKProtoAutomaticProvisioningRequest .cxx_destruct]
  -[NPKProtoAutomaticProvisioningRequest setCredentialType:]
  -[NPKProtoAutomaticProvisioningRequest setPrimaryAccountNumberSuffix:]
  -[NPKProtoAutomaticProvisioningRequest dictionaryRepresentation]
  -[NPKProtoAutomaticProvisioningRequest hasCredentialType]
  -[NPKProtoAutomaticProvisioningRequest writeTo:]
  -[NPKProtoAutomaticProvisioningRequest isEqual:]
  -[NPKProtoAutomaticProvisioningRequest copyTo:]
  -[NPKProtoAutomaticProvisioningRequest setPassTypeIdentifier:]
  -[NPKProtoAutomaticProvisioningRequest readFrom:]
  -[NPKProtoAutomaticProvisioningRequest passTypeIdentifier]
  -[NPKProtoAutomaticProvisioningRequest setCardType:]
  -[NPKProtoAutomaticProvisioningRequest copyWithZone:]
  -[NPKProtoAutomaticProvisioningRequest primaryAccountNumberSuffix]
  -[NPKProtoAutomaticProvisioningRequest hasSerialNumber]
  -[NPKProtoAutomaticProvisioningRequest setHasCredentialType:]
  -[NPKProtoAutomaticProvisioningRequest hasCardType]
  -[NPKProtoAutomaticProvisioningRequest setHasCardType:]
  -[NPKProtoAutomaticProvisioningRequest cardTypeAsString:]
  -[NPKProtoAutomaticProvisioningRequest StringAsCardType:]
  -[NPKProtoAutomaticProvisioningRequest hasPassTypeIdentifier]
  -[NPKProtoAutomaticProvisioningRequest hasLocalizedName]


NPKPeerPaymentQuickTypeParser : NSObject
 @property  NSSet *supportedCurrencyCodes
 @property  NSSet *allowedPayloadIDs

  // instance methods
  -[NPKPeerPaymentQuickTypeParser .cxx_destruct]
  -[NPKPeerPaymentQuickTypeParser parsePayload:payloadID:maxCount:]
  -[NPKPeerPaymentQuickTypeParser allowedPayloadIDs]
  -[NPKPeerPaymentQuickTypeParser supportedCurrencyCodes]
  -[NPKPeerPaymentQuickTypeParser initWithSupportedCurrencyCodes:allowedPayloadIDs:]
  -[NPKPeerPaymentQuickTypeParser parsePayload:payloadID:]


NPKProtoListSubcredentialInvitationsRequest : PBRequest <NSCopying>
  // instance methods
  -[NPKProtoListSubcredentialInvitationsRequest mergeFrom:]
  -[NPKProtoListSubcredentialInvitationsRequest dictionaryRepresentation]
  -[NPKProtoListSubcredentialInvitationsRequest writeTo:]
  -[NPKProtoListSubcredentialInvitationsRequest isEqual:]
  -[NPKProtoListSubcredentialInvitationsRequest copyTo:]
  -[NPKProtoListSubcredentialInvitationsRequest readFrom:]
  -[NPKProtoListSubcredentialInvitationsRequest copyWithZone:]


NPKProtoSetAccountAttestationAnonymizationSaltResponse : PBCodable <NSCopying>
 @property  BOOL hasErrorData
 @property  NSData *errorData

  // instance methods
  -[NPKProtoSetAccountAttestationAnonymizationSaltResponse mergeFrom:]
  -[NPKProtoSetAccountAttestationAnonymizationSaltResponse .cxx_destruct]
  -[NPKProtoSetAccountAttestationAnonymizationSaltResponse dictionaryRepresentation]
  -[NPKProtoSetAccountAttestationAnonymizationSaltResponse writeTo:]
  -[NPKProtoSetAccountAttestationAnonymizationSaltResponse isEqual:]
  -[NPKProtoSetAccountAttestationAnonymizationSaltResponse copyTo:]
  -[NPKProtoSetAccountAttestationAnonymizationSaltResponse readFrom:]
  -[NPKProtoSetAccountAttestationAnonymizationSaltResponse copyWithZone:]
  -[NPKProtoSetAccountAttestationAnonymizationSaltResponse errorData]
  -[NPKProtoSetAccountAttestationAnonymizationSaltResponse hasErrorData]
  -[NPKProtoSetAccountAttestationAnonymizationSaltResponse setErrorData:]


NPKProtoRegisterSubcredentialsRequest : PBRequest <NSCopying>
 @property  NSMutableArray *identifiers

  // class methods
  +[NPKProtoRegisterSubcredentialsRequest identifiersType]

  // instance methods
  -[NPKProtoRegisterSubcredentialsRequest mergeFrom:]
  -[NPKProtoRegisterSubcredentialsRequest .cxx_destruct]
  -[NPKProtoRegisterSubcredentialsRequest identifiers]
  -[NPKProtoRegisterSubcredentialsRequest dictionaryRepresentation]
  -[NPKProtoRegisterSubcredentialsRequest writeTo:]
  -[NPKProtoRegisterSubcredentialsRequest isEqual:]
  -[NPKProtoRegisterSubcredentialsRequest copyTo:]
  -[NPKProtoRegisterSubcredentialsRequest readFrom:]
  -[NPKProtoRegisterSubcredentialsRequest identifiersCount]
  -[NPKProtoRegisterSubcredentialsRequest clearIdentifiers]
  -[NPKProtoRegisterSubcredentialsRequest copyWithZone:]
  -[NPKProtoRegisterSubcredentialsRequest setIdentifiers:]
  -[NPKProtoRegisterSubcredentialsRequest addIdentifiers:]
  -[NPKProtoRegisterSubcredentialsRequest identifiersAtIndex:]


NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationFieldsStepContext : PBCodable <NSCopying>
  // instance methods
  -[NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationFieldsStepContext mergeFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationFieldsStepContext dictionaryRepresentation]
  -[NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationFieldsStepContext writeTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationFieldsStepContext isEqual:]
  -[NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationFieldsStepContext copyTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationFieldsStepContext readFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationFieldsStepContext copyWithZone:]


NPKProtoRemoveExpressPassesWithCardTypeResponse : PBCodable <NSCopying>
 @property  BOOL hasPending
 @property  BOOL pending
 @property  BOOL hasSuccess
 @property  BOOL success
 @property  NSMutableArray *actualExpressPassInformations

  // class methods
  +[NPKProtoRemoveExpressPassesWithCardTypeResponse actualExpressPassInformationType]

  // instance methods
  -[NPKProtoRemoveExpressPassesWithCardTypeResponse setSuccess:]
  -[NPKProtoRemoveExpressPassesWithCardTypeResponse success]
  -[NPKProtoRemoveExpressPassesWithCardTypeResponse pending]
  -[NPKProtoRemoveExpressPassesWithCardTypeResponse mergeFrom:]
  -[NPKProtoRemoveExpressPassesWithCardTypeResponse setPending:]
  -[NPKProtoRemoveExpressPassesWithCardTypeResponse .cxx_destruct]
  -[NPKProtoRemoveExpressPassesWithCardTypeResponse hasSuccess]
  -[NPKProtoRemoveExpressPassesWithCardTypeResponse dictionaryRepresentation]
  -[NPKProtoRemoveExpressPassesWithCardTypeResponse writeTo:]
  -[NPKProtoRemoveExpressPassesWithCardTypeResponse setHasSuccess:]
  -[NPKProtoRemoveExpressPassesWithCardTypeResponse isEqual:]
  -[NPKProtoRemoveExpressPassesWithCardTypeResponse copyTo:]
  -[NPKProtoRemoveExpressPassesWithCardTypeResponse readFrom:]
  -[NPKProtoRemoveExpressPassesWithCardTypeResponse copyWithZone:]
  -[NPKProtoRemoveExpressPassesWithCardTypeResponse setHasPending:]
  -[NPKProtoRemoveExpressPassesWithCardTypeResponse hasPending]
  -[NPKProtoRemoveExpressPassesWithCardTypeResponse addActualExpressPassInformation:]
  -[NPKProtoRemoveExpressPassesWithCardTypeResponse actualExpressPassInformationsCount]
  -[NPKProtoRemoveExpressPassesWithCardTypeResponse clearActualExpressPassInformations]
  -[NPKProtoRemoveExpressPassesWithCardTypeResponse actualExpressPassInformationAtIndex:]
  -[NPKProtoRemoveExpressPassesWithCardTypeResponse actualExpressPassInformations]
  -[NPKProtoRemoveExpressPassesWithCardTypeResponse setActualExpressPassInformations:]


NPKProtoStandalonePaymentProvisioningFlowResponse : PBCodable <NSCopying>
 @property  NPKProtoStandaloneResponseHeader *responseHeader
 @property  int fromStep
 @property  int toStep
 @property  BOOL hasContext
 @property  NPKProtoStandalonePaymentProvisioningFlowStepContext *context

  // instance methods
  -[NPKProtoStandalonePaymentProvisioningFlowResponse mergeFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowResponse hasContext]
  -[NPKProtoStandalonePaymentProvisioningFlowResponse .cxx_destruct]
  -[NPKProtoStandalonePaymentProvisioningFlowResponse dictionaryRepresentation]
  -[NPKProtoStandalonePaymentProvisioningFlowResponse writeTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowResponse isEqual:]
  -[NPKProtoStandalonePaymentProvisioningFlowResponse copyTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowResponse readFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowResponse setContext:]
  -[NPKProtoStandalonePaymentProvisioningFlowResponse copyWithZone:]
  -[NPKProtoStandalonePaymentProvisioningFlowResponse toStep]
  -[NPKProtoStandalonePaymentProvisioningFlowResponse context]
  -[NPKProtoStandalonePaymentProvisioningFlowResponse responseHeader]
  -[NPKProtoStandalonePaymentProvisioningFlowResponse setResponseHeader:]
  -[NPKProtoStandalonePaymentProvisioningFlowResponse fromStepAsString:]
  -[NPKProtoStandalonePaymentProvisioningFlowResponse StringAsFromStep:]
  -[NPKProtoStandalonePaymentProvisioningFlowResponse toStepAsString:]
  -[NPKProtoStandalonePaymentProvisioningFlowResponse StringAsToStep:]
  -[NPKProtoStandalonePaymentProvisioningFlowResponse fromStep]
  -[NPKProtoStandalonePaymentProvisioningFlowResponse setFromStep:]
  -[NPKProtoStandalonePaymentProvisioningFlowResponse setToStep:]


NPKProtoCommutePlanReminderForCommutePlanAndPassResponse : PBCodable <NSCopying>
 @property  BOOL hasPending
 @property  BOOL pending
 @property  BOOL hasReminderInterval
 @property  double reminderInterval
 @property  BOOL hasErrorData
 @property  NSData *errorData

  // instance methods
  -[NPKProtoCommutePlanReminderForCommutePlanAndPassResponse pending]
  -[NPKProtoCommutePlanReminderForCommutePlanAndPassResponse mergeFrom:]
  -[NPKProtoCommutePlanReminderForCommutePlanAndPassResponse setPending:]
  -[NPKProtoCommutePlanReminderForCommutePlanAndPassResponse .cxx_destruct]
  -[NPKProtoCommutePlanReminderForCommutePlanAndPassResponse dictionaryRepresentation]
  -[NPKProtoCommutePlanReminderForCommutePlanAndPassResponse writeTo:]
  -[NPKProtoCommutePlanReminderForCommutePlanAndPassResponse isEqual:]
  -[NPKProtoCommutePlanReminderForCommutePlanAndPassResponse copyTo:]
  -[NPKProtoCommutePlanReminderForCommutePlanAndPassResponse readFrom:]
  -[NPKProtoCommutePlanReminderForCommutePlanAndPassResponse copyWithZone:]
  -[NPKProtoCommutePlanReminderForCommutePlanAndPassResponse errorData]
  -[NPKProtoCommutePlanReminderForCommutePlanAndPassResponse hasErrorData]
  -[NPKProtoCommutePlanReminderForCommutePlanAndPassResponse setErrorData:]
  -[NPKProtoCommutePlanReminderForCommutePlanAndPassResponse setHasPending:]
  -[NPKProtoCommutePlanReminderForCommutePlanAndPassResponse hasPending]
  -[NPKProtoCommutePlanReminderForCommutePlanAndPassResponse setReminderInterval:]
  -[NPKProtoCommutePlanReminderForCommutePlanAndPassResponse setHasReminderInterval:]
  -[NPKProtoCommutePlanReminderForCommutePlanAndPassResponse hasReminderInterval]
  -[NPKProtoCommutePlanReminderForCommutePlanAndPassResponse reminderInterval]


NPKProtoSignDataRequest : PBRequest <NSCopying>
 @property  BOOL hasDataToSign
 @property  NSData *dataToSign
 @property  BOOL hasDigestToSign
 @property  NSData *digestToSign
 @property  BOOL hasEntanglementMode
 @property  int entanglementMode
 @property  BOOL hasAid
 @property  NSString *aid

  // instance methods
  -[NPKProtoSignDataRequest mergeFrom:]
  -[NPKProtoSignDataRequest aid]
  -[NPKProtoSignDataRequest .cxx_destruct]
  -[NPKProtoSignDataRequest dictionaryRepresentation]
  -[NPKProtoSignDataRequest writeTo:]
  -[NPKProtoSignDataRequest isEqual:]
  -[NPKProtoSignDataRequest copyTo:]
  -[NPKProtoSignDataRequest readFrom:]
  -[NPKProtoSignDataRequest setAid:]
  -[NPKProtoSignDataRequest copyWithZone:]
  -[NPKProtoSignDataRequest hasAid]
  -[NPKProtoSignDataRequest setDataToSign:]
  -[NPKProtoSignDataRequest dataToSign]
  -[NPKProtoSignDataRequest setDigestToSign:]
  -[NPKProtoSignDataRequest hasDataToSign]
  -[NPKProtoSignDataRequest hasDigestToSign]
  -[NPKProtoSignDataRequest entanglementMode]
  -[NPKProtoSignDataRequest setEntanglementMode:]
  -[NPKProtoSignDataRequest setHasEntanglementMode:]
  -[NPKProtoSignDataRequest hasEntanglementMode]
  -[NPKProtoSignDataRequest entanglementModeAsString:]
  -[NPKProtoSignDataRequest StringAsEntanglementMode:]
  -[NPKProtoSignDataRequest digestToSign]


NPKProtoMarkAllAppletsForDeletionResponse : PBCodable <NSCopying>
 @property  BOOL hasPending
 @property  BOOL pending
 @property  BOOL hasSuccess
 @property  BOOL success
 @property  BOOL hasErrorData
 @property  NSData *errorData

  // instance methods
  -[NPKProtoMarkAllAppletsForDeletionResponse setSuccess:]
  -[NPKProtoMarkAllAppletsForDeletionResponse success]
  -[NPKProtoMarkAllAppletsForDeletionResponse pending]
  -[NPKProtoMarkAllAppletsForDeletionResponse mergeFrom:]
  -[NPKProtoMarkAllAppletsForDeletionResponse setPending:]
  -[NPKProtoMarkAllAppletsForDeletionResponse .cxx_destruct]
  -[NPKProtoMarkAllAppletsForDeletionResponse hasSuccess]
  -[NPKProtoMarkAllAppletsForDeletionResponse dictionaryRepresentation]
  -[NPKProtoMarkAllAppletsForDeletionResponse writeTo:]
  -[NPKProtoMarkAllAppletsForDeletionResponse setHasSuccess:]
  -[NPKProtoMarkAllAppletsForDeletionResponse isEqual:]
  -[NPKProtoMarkAllAppletsForDeletionResponse copyTo:]
  -[NPKProtoMarkAllAppletsForDeletionResponse readFrom:]
  -[NPKProtoMarkAllAppletsForDeletionResponse copyWithZone:]
  -[NPKProtoMarkAllAppletsForDeletionResponse errorData]
  -[NPKProtoMarkAllAppletsForDeletionResponse hasErrorData]
  -[NPKProtoMarkAllAppletsForDeletionResponse setErrorData:]
  -[NPKProtoMarkAllAppletsForDeletionResponse setHasPending:]
  -[NPKProtoMarkAllAppletsForDeletionResponse hasPending]


NPKProtoDeviceUnlockedForPendingProvisioningRequest : PBRequest <NSCopying>
  // instance methods
  -[NPKProtoDeviceUnlockedForPendingProvisioningRequest mergeFrom:]
  -[NPKProtoDeviceUnlockedForPendingProvisioningRequest dictionaryRepresentation]
  -[NPKProtoDeviceUnlockedForPendingProvisioningRequest writeTo:]
  -[NPKProtoDeviceUnlockedForPendingProvisioningRequest isEqual:]
  -[NPKProtoDeviceUnlockedForPendingProvisioningRequest copyTo:]
  -[NPKProtoDeviceUnlockedForPendingProvisioningRequest readFrom:]
  -[NPKProtoDeviceUnlockedForPendingProvisioningRequest copyWithZone:]


NPKProtoRequestSubcredentialInvitationRequest : PBRequest <NSCopying>
 @property  BOOL hasInvitationData
 @property  NSData *invitationData

  // instance methods
  -[NPKProtoRequestSubcredentialInvitationRequest mergeFrom:]
  -[NPKProtoRequestSubcredentialInvitationRequest .cxx_destruct]
  -[NPKProtoRequestSubcredentialInvitationRequest dictionaryRepresentation]
  -[NPKProtoRequestSubcredentialInvitationRequest writeTo:]
  -[NPKProtoRequestSubcredentialInvitationRequest isEqual:]
  -[NPKProtoRequestSubcredentialInvitationRequest copyTo:]
  -[NPKProtoRequestSubcredentialInvitationRequest readFrom:]
  -[NPKProtoRequestSubcredentialInvitationRequest copyWithZone:]
  -[NPKProtoRequestSubcredentialInvitationRequest invitationData]
  -[NPKProtoRequestSubcredentialInvitationRequest setInvitationData:]
  -[NPKProtoRequestSubcredentialInvitationRequest hasInvitationData]


NPKProtoDeclineRelatedInvitationsIfNecessaryResponse : PBCodable <NSCopying>
 @property  BOOL hasDidDeclineInvitations
 @property  BOOL didDeclineInvitations

  // instance methods
  -[NPKProtoDeclineRelatedInvitationsIfNecessaryResponse mergeFrom:]
  -[NPKProtoDeclineRelatedInvitationsIfNecessaryResponse dictionaryRepresentation]
  -[NPKProtoDeclineRelatedInvitationsIfNecessaryResponse writeTo:]
  -[NPKProtoDeclineRelatedInvitationsIfNecessaryResponse isEqual:]
  -[NPKProtoDeclineRelatedInvitationsIfNecessaryResponse copyTo:]
  -[NPKProtoDeclineRelatedInvitationsIfNecessaryResponse readFrom:]
  -[NPKProtoDeclineRelatedInvitationsIfNecessaryResponse copyWithZone:]
  -[NPKProtoDeclineRelatedInvitationsIfNecessaryResponse setDidDeclineInvitations:]
  -[NPKProtoDeclineRelatedInvitationsIfNecessaryResponse setHasDidDeclineInvitations:]
  -[NPKProtoDeclineRelatedInvitationsIfNecessaryResponse hasDidDeclineInvitations]
  -[NPKProtoDeclineRelatedInvitationsIfNecessaryResponse didDeclineInvitations]


NPKProtoMatchingInvitationOnDeviceRequest : PBRequest <NSCopying>
 @property  BOOL hasInvitationData
 @property  NSData *invitationData
 @property  BOOL hasTimeoutInSeconds
 @property  unsigned long timeoutInSeconds

  // instance methods
  -[NPKProtoMatchingInvitationOnDeviceRequest mergeFrom:]
  -[NPKProtoMatchingInvitationOnDeviceRequest setTimeoutInSeconds:]
  -[NPKProtoMatchingInvitationOnDeviceRequest .cxx_destruct]
  -[NPKProtoMatchingInvitationOnDeviceRequest dictionaryRepresentation]
  -[NPKProtoMatchingInvitationOnDeviceRequest writeTo:]
  -[NPKProtoMatchingInvitationOnDeviceRequest timeoutInSeconds]
  -[NPKProtoMatchingInvitationOnDeviceRequest isEqual:]
  -[NPKProtoMatchingInvitationOnDeviceRequest copyTo:]
  -[NPKProtoMatchingInvitationOnDeviceRequest readFrom:]
  -[NPKProtoMatchingInvitationOnDeviceRequest copyWithZone:]
  -[NPKProtoMatchingInvitationOnDeviceRequest invitationData]
  -[NPKProtoMatchingInvitationOnDeviceRequest setInvitationData:]
  -[NPKProtoMatchingInvitationOnDeviceRequest hasInvitationData]
  -[NPKProtoMatchingInvitationOnDeviceRequest setHasTimeoutInSeconds:]
  -[NPKProtoMatchingInvitationOnDeviceRequest hasTimeoutInSeconds]


NPKProtoUpdatePaymentPassRequest : PBRequest <NSCopying>
 @property  NSString *passTypeIdentifier

  // instance methods
  -[NPKProtoUpdatePaymentPassRequest mergeFrom:]
  -[NPKProtoUpdatePaymentPassRequest .cxx_destruct]
  -[NPKProtoUpdatePaymentPassRequest dictionaryRepresentation]
  -[NPKProtoUpdatePaymentPassRequest writeTo:]
  -[NPKProtoUpdatePaymentPassRequest isEqual:]
  -[NPKProtoUpdatePaymentPassRequest copyTo:]
  -[NPKProtoUpdatePaymentPassRequest setPassTypeIdentifier:]
  -[NPKProtoUpdatePaymentPassRequest readFrom:]
  -[NPKProtoUpdatePaymentPassRequest passTypeIdentifier]
  -[NPKProtoUpdatePaymentPassRequest copyWithZone:]


NPKProtoMarkPaymentPassForDeleteResponse : PBCodable <NSCopying>
 @property  BOOL hasPending
 @property  BOOL pending
 @property  BOOL hasSuccess
 @property  BOOL success

  // instance methods
  -[NPKProtoMarkPaymentPassForDeleteResponse setSuccess:]
  -[NPKProtoMarkPaymentPassForDeleteResponse success]
  -[NPKProtoMarkPaymentPassForDeleteResponse pending]
  -[NPKProtoMarkPaymentPassForDeleteResponse mergeFrom:]
  -[NPKProtoMarkPaymentPassForDeleteResponse setPending:]
  -[NPKProtoMarkPaymentPassForDeleteResponse hasSuccess]
  -[NPKProtoMarkPaymentPassForDeleteResponse dictionaryRepresentation]
  -[NPKProtoMarkPaymentPassForDeleteResponse writeTo:]
  -[NPKProtoMarkPaymentPassForDeleteResponse setHasSuccess:]
  -[NPKProtoMarkPaymentPassForDeleteResponse isEqual:]
  -[NPKProtoMarkPaymentPassForDeleteResponse copyTo:]
  -[NPKProtoMarkPaymentPassForDeleteResponse readFrom:]
  -[NPKProtoMarkPaymentPassForDeleteResponse copyWithZone:]
  -[NPKProtoMarkPaymentPassForDeleteResponse setHasPending:]
  -[NPKProtoMarkPaymentPassForDeleteResponse hasPending]


NPKProtoRemoteAdminAvailabilityChangeRequest : PBRequest <NSCopying>
 @property  BOOL hasIsAvailable
 @property  BOOL isAvailable

  // instance methods
  -[NPKProtoRemoteAdminAvailabilityChangeRequest mergeFrom:]
  -[NPKProtoRemoteAdminAvailabilityChangeRequest setIsAvailable:]
  -[NPKProtoRemoteAdminAvailabilityChangeRequest isAvailable]
  -[NPKProtoRemoteAdminAvailabilityChangeRequest dictionaryRepresentation]
  -[NPKProtoRemoteAdminAvailabilityChangeRequest writeTo:]
  -[NPKProtoRemoteAdminAvailabilityChangeRequest isEqual:]
  -[NPKProtoRemoteAdminAvailabilityChangeRequest copyTo:]
  -[NPKProtoRemoteAdminAvailabilityChangeRequest readFrom:]
  -[NPKProtoRemoteAdminAvailabilityChangeRequest hasIsAvailable]
  -[NPKProtoRemoteAdminAvailabilityChangeRequest setHasIsAvailable:]
  -[NPKProtoRemoteAdminAvailabilityChangeRequest copyWithZone:]


NPKGreenTeaDataUsageResolver : NSObject
 @property  NSObject<OS_dispatch_queue> *internalQueue
 @property  BOOL currentlyResolving

  // class methods
  +[NPKGreenTeaDataUsageResolver resolveGreenTeaDataUsageIfNecessary]

  // instance methods
  -[NPKGreenTeaDataUsageResolver setInternalQueue:]
  -[NPKGreenTeaDataUsageResolver .cxx_destruct]
  -[NPKGreenTeaDataUsageResolver init]
  -[NPKGreenTeaDataUsageResolver internalQueue]
  -[NPKGreenTeaDataUsageResolver resolveGreenTeaDataUsageIfNecessary]
  -[NPKGreenTeaDataUsageResolver _resolveGreenTeaDataUsageIfNecessaryWithCompletion:]
  -[NPKGreenTeaDataUsageResolver currentlyResolving]
  -[NPKGreenTeaDataUsageResolver setCurrentlyResolving:]


NPKProtoDumpLogsRequest : PBRequest <NSCopying>
  // instance methods
  -[NPKProtoDumpLogsRequest mergeFrom:]
  -[NPKProtoDumpLogsRequest dictionaryRepresentation]
  -[NPKProtoDumpLogsRequest writeTo:]
  -[NPKProtoDumpLogsRequest isEqual:]
  -[NPKProtoDumpLogsRequest copyTo:]
  -[NPKProtoDumpLogsRequest readFrom:]
  -[NPKProtoDumpLogsRequest copyWithZone:]


NPKProtoGizmoInitiatedAddPassRequest : PBRequest <NSCopying>
 @property  NSData *passData

  // instance methods
  -[NPKProtoGizmoInitiatedAddPassRequest mergeFrom:]
  -[NPKProtoGizmoInitiatedAddPassRequest .cxx_destruct]
  -[NPKProtoGizmoInitiatedAddPassRequest dictionaryRepresentation]
  -[NPKProtoGizmoInitiatedAddPassRequest writeTo:]
  -[NPKProtoGizmoInitiatedAddPassRequest isEqual:]
  -[NPKProtoGizmoInitiatedAddPassRequest copyTo:]
  -[NPKProtoGizmoInitiatedAddPassRequest readFrom:]
  -[NPKProtoGizmoInitiatedAddPassRequest copyWithZone:]
  -[NPKProtoGizmoInitiatedAddPassRequest passData]
  -[NPKProtoGizmoInitiatedAddPassRequest setPassData:]


NPKQuickPaymentSessionSource : NSObject
  // instance methods
  -[NPKQuickPaymentSessionSource .cxx_destruct]
  -[NPKQuickPaymentSessionSource _performDelegateCallback:]
  -[NPKQuickPaymentSessionSource _handlePMUButtonEvent]
  -[NPKQuickPaymentSessionSource setVasPasses:]
  -[NPKQuickPaymentSessionSource setRequireFirstInQueue:]
  -[NPKQuickPaymentSessionSource setDeferAuthorization:]
  -[NPKQuickPaymentSessionSource initWithDelegate:buttonListener:callbackQueue:]
  -[NPKQuickPaymentSessionSource handleDoublePressEvent]
  -[NPKQuickPaymentSessionSource setDelegateHandlingButtonEvents:]
  -[NPKQuickPaymentSessionSource setPreconditionState:]
  -[NPKQuickPaymentSessionSource setInitialPass:]
  -[NPKQuickPaymentSessionSource setLocalAuthenticationCoordinator:]


NPKProtoPerformProductActionRequest : PBRequest <NSCopying>
 @property  BOOL hasProductsActionData
 @property  NSData *productsActionData

  // instance methods
  -[NPKProtoPerformProductActionRequest mergeFrom:]
  -[NPKProtoPerformProductActionRequest .cxx_destruct]
  -[NPKProtoPerformProductActionRequest dictionaryRepresentation]
  -[NPKProtoPerformProductActionRequest writeTo:]
  -[NPKProtoPerformProductActionRequest isEqual:]
  -[NPKProtoPerformProductActionRequest copyTo:]
  -[NPKProtoPerformProductActionRequest readFrom:]
  -[NPKProtoPerformProductActionRequest copyWithZone:]
  -[NPKProtoPerformProductActionRequest setProductsActionData:]
  -[NPKProtoPerformProductActionRequest hasProductsActionData]
  -[NPKProtoPerformProductActionRequest productsActionData]


NPKProtoRelevantPassesPendingRequest : PBRequest <NSCopying>
  // instance methods
  -[NPKProtoRelevantPassesPendingRequest mergeFrom:]
  -[NPKProtoRelevantPassesPendingRequest dictionaryRepresentation]
  -[NPKProtoRelevantPassesPendingRequest writeTo:]
  -[NPKProtoRelevantPassesPendingRequest isEqual:]
  -[NPKProtoRelevantPassesPendingRequest copyTo:]
  -[NPKProtoRelevantPassesPendingRequest readFrom:]
  -[NPKProtoRelevantPassesPendingRequest copyWithZone:]


NPKProtoGenerateTransactionKeyWithParametersRequest : PBRequest <NSCopying>
 @property  BOOL hasParameters
 @property  NSData *parameters

  // instance methods
  -[NPKProtoGenerateTransactionKeyWithParametersRequest mergeFrom:]
  -[NPKProtoGenerateTransactionKeyWithParametersRequest .cxx_destruct]
  -[NPKProtoGenerateTransactionKeyWithParametersRequest dictionaryRepresentation]
  -[NPKProtoGenerateTransactionKeyWithParametersRequest setParameters:]
  -[NPKProtoGenerateTransactionKeyWithParametersRequest writeTo:]
  -[NPKProtoGenerateTransactionKeyWithParametersRequest hasParameters]
  -[NPKProtoGenerateTransactionKeyWithParametersRequest isEqual:]
  -[NPKProtoGenerateTransactionKeyWithParametersRequest copyTo:]
  -[NPKProtoGenerateTransactionKeyWithParametersRequest readFrom:]
  -[NPKProtoGenerateTransactionKeyWithParametersRequest copyWithZone:]
  -[NPKProtoGenerateTransactionKeyWithParametersRequest parameters]


NPKProtoAccountAttestationAnonymizationSaltRequest : PBRequest <NSCopying>
  // instance methods
  -[NPKProtoAccountAttestationAnonymizationSaltRequest mergeFrom:]
  -[NPKProtoAccountAttestationAnonymizationSaltRequest dictionaryRepresentation]
  -[NPKProtoAccountAttestationAnonymizationSaltRequest writeTo:]
  -[NPKProtoAccountAttestationAnonymizationSaltRequest isEqual:]
  -[NPKProtoAccountAttestationAnonymizationSaltRequest copyTo:]
  -[NPKProtoAccountAttestationAnonymizationSaltRequest readFrom:]
  -[NPKProtoAccountAttestationAnonymizationSaltRequest copyWithZone:]


NPKProtoPassSyncState : PBCodable <NSCopying>
 @property  NSMutableArray *passSyncStateItems
 @property  BOOL hasVersion
 @property  unsigned int version

  // class methods
  +[NPKProtoPassSyncState passSyncStateItemsType]

  // instance methods
  -[NPKProtoPassSyncState mergeFrom:]
  -[NPKProtoPassSyncState hasVersion]
  -[NPKProtoPassSyncState .cxx_destruct]
  -[NPKProtoPassSyncState dictionaryRepresentation]
  -[NPKProtoPassSyncState setHasVersion:]
  -[NPKProtoPassSyncState writeTo:]
  -[NPKProtoPassSyncState setVersion:]
  -[NPKProtoPassSyncState isEqual:]
  -[NPKProtoPassSyncState copyTo:]
  -[NPKProtoPassSyncState readFrom:]
  -[NPKProtoPassSyncState version]
  -[NPKProtoPassSyncState copyWithZone:]
  -[NPKProtoPassSyncState addPassSyncStateItems:]
  -[NPKProtoPassSyncState passSyncStateItemsCount]
  -[NPKProtoPassSyncState clearPassSyncStateItems]
  -[NPKProtoPassSyncState passSyncStateItemsAtIndex:]
  -[NPKProtoPassSyncState passSyncStateItems]
  -[NPKProtoPassSyncState setPassSyncStateItems:]


NPKProtoStandalonePaymentProvisioningFlowChooseFlowStepContext : PBCodable <NSCopying>
 @property  NSMutableArray *sections

  // class methods
  +[NPKProtoStandalonePaymentProvisioningFlowChooseFlowStepContext sectionsType]

  // instance methods
  -[NPKProtoStandalonePaymentProvisioningFlowChooseFlowStepContext setSections:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseFlowStepContext sectionsAtIndex:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseFlowStepContext mergeFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseFlowStepContext sections]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseFlowStepContext sectionsCount]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseFlowStepContext .cxx_destruct]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseFlowStepContext dictionaryRepresentation]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseFlowStepContext writeTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseFlowStepContext isEqual:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseFlowStepContext copyTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseFlowStepContext readFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseFlowStepContext addSections:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseFlowStepContext copyWithZone:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseFlowStepContext clearSections]


NPKButtonListener : NSObject
 @property  @? buttonHandler
 @property  NSObject<OS_dispatch_queue> *handlerQueue

  // instance methods
  -[NPKButtonListener handlerQueue]
  -[NPKButtonListener .cxx_destruct]
  -[NPKButtonListener setHandlerQueue:]
  -[NPKButtonListener setButtonHandler:]
  -[NPKButtonListener buttonHandler]
  -[NPKButtonListener initWithHandlerQueue:]
  -[NPKButtonListener _handlerQueue_buttonHandler]


NPKProtoResyncNeededRequest : PBRequest <NSCopying>
 @property  BOOL hasExpectedHash
 @property  NPKProtoHash *expectedHash
 @property  NSMutableArray *uniqueIDs
 @property  NSMutableArray *manifestHashes
 @property  BOOL hasFullResyncNeeded
 @property  BOOL fullResyncNeeded
 @property  BOOL hasResyncID
 @property  unsigned int resyncID

  // class methods
  +[NPKProtoResyncNeededRequest uniqueIDsType]
  +[NPKProtoResyncNeededRequest manifestHashesType]

  // instance methods
  -[NPKProtoResyncNeededRequest mergeFrom:]
  -[NPKProtoResyncNeededRequest setExpectedHash:]
  -[NPKProtoResyncNeededRequest .cxx_destruct]
  -[NPKProtoResyncNeededRequest dictionaryRepresentation]
  -[NPKProtoResyncNeededRequest writeTo:]
  -[NPKProtoResyncNeededRequest isEqual:]
  -[NPKProtoResyncNeededRequest copyTo:]
  -[NPKProtoResyncNeededRequest readFrom:]
  -[NPKProtoResyncNeededRequest uniqueIDs]
  -[NPKProtoResyncNeededRequest copyWithZone:]
  -[NPKProtoResyncNeededRequest setUniqueIDs:]
  -[NPKProtoResyncNeededRequest expectedHash]
  -[NPKProtoResyncNeededRequest addUniqueIDs:]
  -[NPKProtoResyncNeededRequest addManifestHashes:]
  -[NPKProtoResyncNeededRequest uniqueIDsCount]
  -[NPKProtoResyncNeededRequest clearUniqueIDs]
  -[NPKProtoResyncNeededRequest uniqueIDsAtIndex:]
  -[NPKProtoResyncNeededRequest manifestHashesCount]
  -[NPKProtoResyncNeededRequest clearManifestHashes]
  -[NPKProtoResyncNeededRequest manifestHashesAtIndex:]
  -[NPKProtoResyncNeededRequest hasExpectedHash]
  -[NPKProtoResyncNeededRequest setFullResyncNeeded:]
  -[NPKProtoResyncNeededRequest setHasFullResyncNeeded:]
  -[NPKProtoResyncNeededRequest hasFullResyncNeeded]
  -[NPKProtoResyncNeededRequest setResyncID:]
  -[NPKProtoResyncNeededRequest setHasResyncID:]
  -[NPKProtoResyncNeededRequest hasResyncID]
  -[NPKProtoResyncNeededRequest manifestHashes]
  -[NPKProtoResyncNeededRequest setManifestHashes:]
  -[NPKProtoResyncNeededRequest fullResyncNeeded]
  -[NPKProtoResyncNeededRequest resyncID]


NPKProtoSecureElementSetNewAuthRandomResponse : PBCodable <NSCopying>
 @property  BOOL hasPending
 @property  BOOL pending
 @property  BOOL hasSuccess
 @property  BOOL success
 @property  BOOL hasCryptogram
 @property  NSData *cryptogram
 @property  BOOL hasChallengeResponse
 @property  NSData *challengeResponse

  // instance methods
  -[NPKProtoSecureElementSetNewAuthRandomResponse setSuccess:]
  -[NPKProtoSecureElementSetNewAuthRandomResponse success]
  -[NPKProtoSecureElementSetNewAuthRandomResponse pending]
  -[NPKProtoSecureElementSetNewAuthRandomResponse mergeFrom:]
  -[NPKProtoSecureElementSetNewAuthRandomResponse setPending:]
  -[NPKProtoSecureElementSetNewAuthRandomResponse .cxx_destruct]
  -[NPKProtoSecureElementSetNewAuthRandomResponse hasSuccess]
  -[NPKProtoSecureElementSetNewAuthRandomResponse dictionaryRepresentation]
  -[NPKProtoSecureElementSetNewAuthRandomResponse writeTo:]
  -[NPKProtoSecureElementSetNewAuthRandomResponse setHasSuccess:]
  -[NPKProtoSecureElementSetNewAuthRandomResponse setCryptogram:]
  -[NPKProtoSecureElementSetNewAuthRandomResponse isEqual:]
  -[NPKProtoSecureElementSetNewAuthRandomResponse copyTo:]
  -[NPKProtoSecureElementSetNewAuthRandomResponse readFrom:]
  -[NPKProtoSecureElementSetNewAuthRandomResponse setChallengeResponse:]
  -[NPKProtoSecureElementSetNewAuthRandomResponse challengeResponse]
  -[NPKProtoSecureElementSetNewAuthRandomResponse copyWithZone:]
  -[NPKProtoSecureElementSetNewAuthRandomResponse cryptogram]
  -[NPKProtoSecureElementSetNewAuthRandomResponse setHasPending:]
  -[NPKProtoSecureElementSetNewAuthRandomResponse hasPending]
  -[NPKProtoSecureElementSetNewAuthRandomResponse hasCryptogram]
  -[NPKProtoSecureElementSetNewAuthRandomResponse hasChallengeResponse]


NPKProtoBarcodeApplicationRedirectRequest : PBRequest <NSCopying>
 @property  BOOL hasPassData
 @property  NSData *passData
 @property  BOOL hasTransactionData
 @property  NSData *transactionData
 @property  BOOL hasAppLaunchToken
 @property  NSString *appLaunchToken

  // instance methods
  -[NPKProtoBarcodeApplicationRedirectRequest mergeFrom:]
  -[NPKProtoBarcodeApplicationRedirectRequest setTransactionData:]
  -[NPKProtoBarcodeApplicationRedirectRequest .cxx_destruct]
  -[NPKProtoBarcodeApplicationRedirectRequest dictionaryRepresentation]
  -[NPKProtoBarcodeApplicationRedirectRequest writeTo:]
  -[NPKProtoBarcodeApplicationRedirectRequest transactionData]
  -[NPKProtoBarcodeApplicationRedirectRequest isEqual:]
  -[NPKProtoBarcodeApplicationRedirectRequest copyTo:]
  -[NPKProtoBarcodeApplicationRedirectRequest readFrom:]
  -[NPKProtoBarcodeApplicationRedirectRequest copyWithZone:]
  -[NPKProtoBarcodeApplicationRedirectRequest passData]
  -[NPKProtoBarcodeApplicationRedirectRequest setPassData:]
  -[NPKProtoBarcodeApplicationRedirectRequest setAppLaunchToken:]
  -[NPKProtoBarcodeApplicationRedirectRequest hasPassData]
  -[NPKProtoBarcodeApplicationRedirectRequest hasTransactionData]
  -[NPKProtoBarcodeApplicationRedirectRequest hasAppLaunchToken]
  -[NPKProtoBarcodeApplicationRedirectRequest appLaunchToken]


NPKIDVRemoteDeviceProtoDeleteCredentialResponse : PBCodable <NSCopying>
 @property  BOOL hasErrorData
 @property  NSData *errorData

  // instance methods
  -[NPKIDVRemoteDeviceProtoDeleteCredentialResponse mergeFrom:]
  -[NPKIDVRemoteDeviceProtoDeleteCredentialResponse .cxx_destruct]
  -[NPKIDVRemoteDeviceProtoDeleteCredentialResponse dictionaryRepresentation]
  -[NPKIDVRemoteDeviceProtoDeleteCredentialResponse writeTo:]
  -[NPKIDVRemoteDeviceProtoDeleteCredentialResponse isEqual:]
  -[NPKIDVRemoteDeviceProtoDeleteCredentialResponse copyTo:]
  -[NPKIDVRemoteDeviceProtoDeleteCredentialResponse readFrom:]
  -[NPKIDVRemoteDeviceProtoDeleteCredentialResponse copyWithZone:]
  -[NPKIDVRemoteDeviceProtoDeleteCredentialResponse errorData]
  -[NPKIDVRemoteDeviceProtoDeleteCredentialResponse hasErrorData]
  -[NPKIDVRemoteDeviceProtoDeleteCredentialResponse setErrorData:]


NPKProtoCanAcceptInvitationResponse : PBCodable <NSCopying>
 @property  BOOL hasErrorData
 @property  NSData *errorData

  // instance methods
  -[NPKProtoCanAcceptInvitationResponse mergeFrom:]
  -[NPKProtoCanAcceptInvitationResponse .cxx_destruct]
  -[NPKProtoCanAcceptInvitationResponse dictionaryRepresentation]
  -[NPKProtoCanAcceptInvitationResponse writeTo:]
  -[NPKProtoCanAcceptInvitationResponse isEqual:]
  -[NPKProtoCanAcceptInvitationResponse copyTo:]
  -[NPKProtoCanAcceptInvitationResponse readFrom:]
  -[NPKProtoCanAcceptInvitationResponse copyWithZone:]
  -[NPKProtoCanAcceptInvitationResponse errorData]
  -[NPKProtoCanAcceptInvitationResponse hasErrorData]
  -[NPKProtoCanAcceptInvitationResponse setErrorData:]


NPKProtoStandalonePaymentProvisioningFlowStartIssuerVerificationFlowForPaymentPassRequest : PBRequest <NSCopying>
 @property  NPKProtoStandaloneRequestHeader *requestHeader
 @property  BOOL hasSerialNumber
 @property  NSString *serialNumber
 @property  BOOL hasPassTypeIdentifier
 @property  NSString *passTypeIdentifier

  // instance methods
  -[NPKProtoStandalonePaymentProvisioningFlowStartIssuerVerificationFlowForPaymentPassRequest serialNumber]
  -[NPKProtoStandalonePaymentProvisioningFlowStartIssuerVerificationFlowForPaymentPassRequest setSerialNumber:]
  -[NPKProtoStandalonePaymentProvisioningFlowStartIssuerVerificationFlowForPaymentPassRequest mergeFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowStartIssuerVerificationFlowForPaymentPassRequest .cxx_destruct]
  -[NPKProtoStandalonePaymentProvisioningFlowStartIssuerVerificationFlowForPaymentPassRequest dictionaryRepresentation]
  -[NPKProtoStandalonePaymentProvisioningFlowStartIssuerVerificationFlowForPaymentPassRequest writeTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowStartIssuerVerificationFlowForPaymentPassRequest isEqual:]
  -[NPKProtoStandalonePaymentProvisioningFlowStartIssuerVerificationFlowForPaymentPassRequest copyTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowStartIssuerVerificationFlowForPaymentPassRequest setPassTypeIdentifier:]
  -[NPKProtoStandalonePaymentProvisioningFlowStartIssuerVerificationFlowForPaymentPassRequest readFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowStartIssuerVerificationFlowForPaymentPassRequest passTypeIdentifier]
  -[NPKProtoStandalonePaymentProvisioningFlowStartIssuerVerificationFlowForPaymentPassRequest copyWithZone:]
  -[NPKProtoStandalonePaymentProvisioningFlowStartIssuerVerificationFlowForPaymentPassRequest hasSerialNumber]
  -[NPKProtoStandalonePaymentProvisioningFlowStartIssuerVerificationFlowForPaymentPassRequest requestHeader]
  -[NPKProtoStandalonePaymentProvisioningFlowStartIssuerVerificationFlowForPaymentPassRequest setRequestHeader:]
  -[NPKProtoStandalonePaymentProvisioningFlowStartIssuerVerificationFlowForPaymentPassRequest hasPassTypeIdentifier]


NPKProtoPresentStandaloneTransactionResponse : PBCodable <NSCopying>
 @property  BOOL hasSuccess
 @property  BOOL success

  // instance methods
  -[NPKProtoPresentStandaloneTransactionResponse setSuccess:]
  -[NPKProtoPresentStandaloneTransactionResponse success]
  -[NPKProtoPresentStandaloneTransactionResponse mergeFrom:]
  -[NPKProtoPresentStandaloneTransactionResponse hasSuccess]
  -[NPKProtoPresentStandaloneTransactionResponse dictionaryRepresentation]
  -[NPKProtoPresentStandaloneTransactionResponse writeTo:]
  -[NPKProtoPresentStandaloneTransactionResponse setHasSuccess:]
  -[NPKProtoPresentStandaloneTransactionResponse isEqual:]
  -[NPKProtoPresentStandaloneTransactionResponse copyTo:]
  -[NPKProtoPresentStandaloneTransactionResponse readFrom:]
  -[NPKProtoPresentStandaloneTransactionResponse copyWithZone:]


NPKValueAddedServiceAutomaticSelectionCoordinator : NSObject <NPKPassesDataSourceObserver>
 @property  <NPKValueAddedServiceAutomaticSelectionCoordinatorDelegate> *delegate
 @property  <NPKPassesDataSource> *dataSource
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NPKValueAddedServiceAutomaticSelectionCoordinator setDataSource:]
  -[NPKValueAddedServiceAutomaticSelectionCoordinator .cxx_destruct]
  -[NPKValueAddedServiceAutomaticSelectionCoordinator setDelegate:]
  -[NPKValueAddedServiceAutomaticSelectionCoordinator dataSource]
  -[NPKValueAddedServiceAutomaticSelectionCoordinator delegate]
  -[NPKValueAddedServiceAutomaticSelectionCoordinator passesDataSource:didAddPasses:]
  -[NPKValueAddedServiceAutomaticSelectionCoordinator passesDataSourceDidReorderPasses:]
  -[NPKValueAddedServiceAutomaticSelectionCoordinator passesDataSource:didRemovePasses:]
  -[NPKValueAddedServiceAutomaticSelectionCoordinator passesDataSource:didUpdatePasses:]
  -[NPKValueAddedServiceAutomaticSelectionCoordinator passesDataSourceDidReloadPasses:]
  -[NPKValueAddedServiceAutomaticSelectionCoordinator passesDataSource:didUpdateSettingsForPass:]
  -[NPKValueAddedServiceAutomaticSelectionCoordinator _handleWalletPreferencesChanged:]
  -[NPKValueAddedServiceAutomaticSelectionCoordinator _updateAutomaticSelectionPasses]
  -[NPKValueAddedServiceAutomaticSelectionCoordinator initWithDelegate:passesDataSource:]


NPKPaymentProvisioningFlowController : NSObject <PKPaymentAuthorizationControllerDelegate, PKPaymentAuthorizationControllerPrivateDelegate, PKContactlessCardIngesterDelegate, NPKPaymentProvisioningFlowControllerProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  PKAddPaymentPassRequestConfiguration *inAppProvisioningRequestConfiguration
 @property  PKAddPaymentPassRequest *inAppProvisioningRequest
 @property  NSData *inAppProvisioningPublicKeyHash
 @property  NSData *inAppProvisioningNonce
 @property  NSObject<OS_dispatch_source> *inAppProvisioningGetRequestTimer
 @property  NPKFidoAuthCoordinator *fidoAuthCoordinator
 @property  PKPaymentWebService *webService
 @property  int currentStep
 @property  NPKPaymentProvisioningFlowControllerPreconditionsStepContext *preconditionsRequestContext
 @property  NSString *chooseCredentialsStepIdentifier
 @property  NSString *immediatelyBeforeTermsStepIdentifier
 @property  PKPaymentSetupFieldsModel *fieldsModel
 @property  <NSObject> *progressNotificationToken
 @property  NPKPaymentProvisioningFlowControllerRequestContext *provisioningProgressRequestContext
 @property  PKPaymentPass *issuerVerificationPass
 @property  PKPaymentCredential *currentCredential
 @property  PKAppleBalanceCredential *currentAppleBalanceCredential
 @property  PKPaymentSetupProduct *currentProduct
 @property  unsigned long termsReason
 @property  BOOL termsAcceptedOutOfBand
 @property  PKPaymentRequest *digitalIssuancePaymentRequest
 @property  NSDecimalNumber *digitalIssuanceAmount
 @property  PKServiceProviderPurchase *digitalIssuancePurchase
 @property  NPKPaymentProvisioningFlowControllerRequestContext *digitalIssuanceAmountRequestContext
 @property  NPKPaymentProvisioningFlowControllerRequestContext *digitalIssuancePaymentRequestContext
 @property  PKPaymentAuthorizationController *authorizationController
 @property  PKContactlessCardIngester *cardIngester
 @property  unsigned long internalIngestionState
 @property  unsigned long flowIngestionState
 @property  double ingestionProgress
 @property  unsigned long ingestionStateOnRetry
 @property  NSString *ingestionCardSessionToken
 @property  NSObject<OS_dispatch_source> *ingestionCardNotFoundTimer
 @property  PKPaymentProvisioningMethodMetadata *ingestionMethodMetadata
 @property  NPKPaymentProvisioningFlowControllerRequestContext *readerModeRequestContext
 @property  <NPKPaymentProvisioningFlowControllerDelegate> *delegate
 @property  PKPaymentProvisioningController *provisioningController
 @property  long long setupContext
 @property  BOOL readerModeProvisioningSupported
 @property  BOOL digitalIssuanceSupported
 @property  BOOL separateLocalDeviceEntryRequired
 @property  PKPaymentAuthorizationController *unitTestingAuthorizationController
 @property  PKContactlessCardIngester *unitTestingCardIngester
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NPKPaymentProvisioningFlowController _authContext]
  +[NPKPaymentProvisioningFlowController _readerModeResources]
  +[NPKPaymentProvisioningFlowController _localCredentials:containProduct:]
  +[NPKPaymentProvisioningFlowController _flowPickerSectionsWithContext:provisioningController:readerModeSupported:digitalIssuanceSupported:]
  +[NPKPaymentProvisioningFlowController _filterAssociatedCredentials:forProduct:]
  +[NPKPaymentProvisioningFlowController _productsArrayFromPickerSection:]
  +[NPKPaymentProvisioningFlowController _displayableErrorWithIneligibilityReason:learnMoreURL:]
  +[NPKPaymentProvisioningFlowController _displayableErrorWithUnderlyingVerificationError:]
  +[NPKPaymentProvisioningFlowController _filteredPaymentSetupProducts:localCredentials:setupContext:webService:mobileCarrierRegion:readerModeSupported:digitalIssuanceSupported:]
  +[NPKPaymentProvisioningFlowController _addGroupedItemsToSections:fromModel:webService:paymentSection:]
  +[NPKPaymentProvisioningFlowController _addAppleBalanceToSections:fromModel:]
  +[NPKPaymentProvisioningFlowController _addCreditDebitItemToSection:webService:]
  +[NPKPaymentProvisioningFlowController _isHSA2Enabled]
  +[NPKPaymentProvisioningFlowController _readerModeEntryAllowedForProduct:]
  +[NPKPaymentProvisioningFlowController _displayableCouldNotAddCardErrorWithUnderlyingError:]
  +[NPKPaymentProvisioningFlowController _physicalCardURLFromMetadata:forScale:]

  // instance methods
  -[NPKPaymentProvisioningFlowController setCurrentStep:]
  -[NPKPaymentProvisioningFlowController .cxx_destruct]
  -[NPKPaymentProvisioningFlowController setCurrentCredential:]
  -[NPKPaymentProvisioningFlowController setDelegate:]
  -[NPKPaymentProvisioningFlowController webService]
  -[NPKPaymentProvisioningFlowController currentStep]
  -[NPKPaymentProvisioningFlowController paymentAuthorizationControllerDidFinish:]
  -[NPKPaymentProvisioningFlowController paymentAuthorizationController:didAuthorizePayment:handler:]
  -[NPKPaymentProvisioningFlowController reset]
  -[NPKPaymentProvisioningFlowController paymentAuthorizationController:didAuthorizePurchase:completion:]
  -[NPKPaymentProvisioningFlowController contactlessCardIngester:didUpdateCardIngestionStatus:]
  -[NPKPaymentProvisioningFlowController _titleForState:]
  -[NPKPaymentProvisioningFlowController contactlessCardIngester:didFailToIngestCardWithError:resetProvisioning:isRecoverable:]
  -[NPKPaymentProvisioningFlowController _subtitleForState:]
  -[NPKPaymentProvisioningFlowController delegate]
  -[NPKPaymentProvisioningFlowController dealloc]
  -[NPKPaymentProvisioningFlowController setupContext]
  -[NPKPaymentProvisioningFlowController setAuthorizationController:]
  -[NPKPaymentProvisioningFlowController provisioningController]
  -[NPKPaymentProvisioningFlowController fieldsModel]
  -[NPKPaymentProvisioningFlowController setWebService:]
  -[NPKPaymentProvisioningFlowController setFieldsModel:]
  -[NPKPaymentProvisioningFlowController _startIngestion]
  -[NPKPaymentProvisioningFlowController _tearDownCardIngester]
  -[NPKPaymentProvisioningFlowController _removePassIfNecessary]
  -[NPKPaymentProvisioningFlowController _invalidateCardNotFoundTimer]
  -[NPKPaymentProvisioningFlowController _startCardNotFoundTimer]
  -[NPKPaymentProvisioningFlowController _setupCardIngester]
  -[NPKPaymentProvisioningFlowController _startReadingCard]
  -[NPKPaymentProvisioningFlowController _startTransferringCard]
  -[NPKPaymentProvisioningFlowController _provisioningLocalizedProgressDescriptionDidChange:]
  -[NPKPaymentProvisioningFlowController _performTerms:]
  -[NPKPaymentProvisioningFlowController authorizationController]
  -[NPKPaymentProvisioningFlowController currentCredential]
  -[NPKPaymentProvisioningFlowController _handleProvisioningFlowStarted:]
  -[NPKPaymentProvisioningFlowController _performNextActionForProvisioningState:]
  -[NPKPaymentProvisioningFlowController _transitionToChooseFlowWithSections:requestContext:]
  -[NPKPaymentProvisioningFlowController _canMakeDigitalIssuancePaymentsForTransitProductsWithCompletion:]
  -[NPKPaymentProvisioningFlowController _transitionToChooseProductWithProducts:requestContext:]
  -[NPKPaymentProvisioningFlowController _handleProductChosen:includeCardsOnFile:requestContext:]
  -[NPKPaymentProvisioningFlowController _ensureMetadataForCredentials:updateHandler:completionHandler:]
  -[NPKPaymentProvisioningFlowController _sendDidEncounterError:requestContext:]
  -[NPKPaymentProvisioningFlowController _transitionBasedOnCredentials:product:requestContext:]
  -[NPKPaymentProvisioningFlowController _cardsOnFileForProduct:updateHandler:completionHandler:]
  -[NPKPaymentProvisioningFlowController _performTransitionToStep:withContext:]
  -[NPKPaymentProvisioningFlowController _chooseProductFromFlowPickerSection:requestContext:transitioningToStep:]
  -[NPKPaymentProvisioningFlowController _handleAppleBalanceProductChosen:requestContext:]
  -[NPKPaymentProvisioningFlowController chooseProduct:includeCardsOnFile:requestContext:]
  -[NPKPaymentProvisioningFlowController _startDigitalIssuancePaymentWithAmount:requestContext:]
  -[NPKPaymentProvisioningFlowController _transitionToReaderModeForProduct:requestContext:]
  -[NPKPaymentProvisioningFlowController _transitionToTermsForReason:URL:requestContext:]
  -[NPKPaymentProvisioningFlowController _handleProceedWithCredentials:chosenByUser:requestContext:]
  -[NPKPaymentProvisioningFlowController _localRequiredFieldsFromRequirementsResponse]
  -[NPKPaymentProvisioningFlowController _requiredFieldsFromRequirementsResponseExcludingLocalFields]
  -[NPKPaymentProvisioningFlowController _curatedDefaultPaymentSetupProvisioningFields]
  -[NPKPaymentProvisioningFlowController _fieldsModelCompleteExceptForLocalFields:]
  -[NPKPaymentProvisioningFlowController _transitionToSecondaryManualEntryWithFields:credential:requestContext:]
  -[NPKPaymentProvisioningFlowController _handlePasscodeUpgradeCompleteWithSuccess:error:requestContext:]
  -[NPKPaymentProvisioningFlowController _handleAppleBalanceAccountDetailsAcknowledgedWithProduct:requestContext:]
  -[NPKPaymentProvisioningFlowController _handleReaderModeTermsAccepted:]
  -[NPKPaymentProvisioningFlowController _handleDigitalIssuanceTermsAccepted:]
  -[NPKPaymentProvisioningFlowController _handleEndOfProvisioningFlowForCurrentPass:requestContext:]
  -[NPKPaymentProvisioningFlowController _performNextStepForProvisionedPass:moreInfoAcknowledged:requestContext:]
  -[NPKPaymentProvisioningFlowController _requestVerificationOptionsForPass:context:]
  -[NPKPaymentProvisioningFlowController _updateVerificationForPass:channel:context:]
  -[NPKPaymentProvisioningFlowController _handleVerificationFieldsForPass:context:]
  -[NPKPaymentProvisioningFlowController _handleVerificationCode:forPass:context:]
  -[NPKPaymentProvisioningFlowController _endProvisioningFlowWithError:requestContext:]
  -[NPKPaymentProvisioningFlowController _performEligibility:]
  -[NPKPaymentProvisioningFlowController _fetchInAppProvisioningCertificates:]
  -[NPKPaymentProvisioningFlowController _fetchAddRequestWithCertificatesResponse:requestContext:]
  -[NPKPaymentProvisioningFlowController _handlePreconditionsVerified:]
  -[NPKPaymentProvisioningFlowController _verifyPasscodeStateIfNecessaryWithCompletion:]
  -[NPKPaymentProvisioningFlowController _configureWebServiceIfNecessary:completion:]
  -[NPKPaymentProvisioningFlowController setCurrentAppleBalanceCredential:]
  -[NPKPaymentProvisioningFlowController currentAppleBalanceCredential]
  -[NPKPaymentProvisioningFlowController _transitionToAppleBalanceAccountDetailsWithProduct:requestContext:]
  -[NPKPaymentProvisioningFlowController _newPaymentEligibilityRequest]
  -[NPKPaymentProvisioningFlowController _startProvisioningForCredential:requestContext:]
  -[NPKPaymentProvisioningFlowController setTermsAcceptedOutOfBand:]
  -[NPKPaymentProvisioningFlowController _requestRequirements:]
  -[NPKPaymentProvisioningFlowController _requestPassDetailsForAccountCredential:withCompletionHandler:]
  -[NPKPaymentProvisioningFlowController _noteProvisioningStateChangeForReaderMode:]
  -[NPKPaymentProvisioningFlowController _performRequirementsOrEligibilityForInAppProvisioning:]
  -[NPKPaymentProvisioningFlowController _isPasscodeUpgradeRequired]
  -[NPKPaymentProvisioningFlowController _performPasscodeUpgrade:]
  -[NPKPaymentProvisioningFlowController _performProvision:]
  -[NPKPaymentProvisioningFlowController _handleFinished:]
  -[NPKPaymentProvisioningFlowController _newPaymentRequirementsRequest]
  -[NPKPaymentProvisioningFlowController _transitionToProductDisambiguationWithProducts:requestContext:]
  -[NPKPaymentProvisioningFlowController _isResolveLocalEligibilityRequired]
  -[NPKPaymentProvisioningFlowController _performProvisioningEligibility:]
  -[NPKPaymentProvisioningFlowController _performResolveLocalEligibilityARequirements:completion:]
  -[NPKPaymentProvisioningFlowController _isValidateSecurityRequirementsRequired]
  -[NPKPaymentProvisioningFlowController _performValidateSecurityRequirements:completion:]
  -[NPKPaymentProvisioningFlowController _transitionToProvisioningProgressWithRequestContext:]
  -[NPKPaymentProvisioningFlowController _newPaymentProvisioningRequest]
  -[NPKPaymentProvisioningFlowController fidoAuthCoordinator]
  -[NPKPaymentProvisioningFlowController _performProvisionWithRequest:requestContext:assertion:]
  -[NPKPaymentProvisioningFlowController internalIngestionState]
  -[NPKPaymentProvisioningFlowController _performNextStepForProvisionedPass:requestContext:]
  -[NPKPaymentProvisioningFlowController _transitionToMoreInformationWithItems:pass:requestContext:]
  -[NPKPaymentProvisioningFlowController _transitionToVerificationFieldsWithPaymentPass:fields:requestContext:]
  -[NPKPaymentProvisioningFlowController _transitionToVerificationCodeWithPaymentPass:channel:requestContext:]
  -[NPKPaymentProvisioningFlowController _downloadAndAddUpdatedPassForPaymentPass:completion:]
  -[NPKPaymentProvisioningFlowController _transitionToVerificationChannelsWithPaymentPass:channels:requestContext:]
  -[NPKPaymentProvisioningFlowController _handleVerificationResponseForPass:context:]
  -[NPKPaymentProvisioningFlowController _downloadRemoteAssetsAndAddPaymentPass:completion:]
  -[NPKPaymentProvisioningFlowController currentProduct]
  -[NPKPaymentProvisioningFlowController _transitionToChooseCredentials:product:requestContext:]
  -[NPKPaymentProvisioningFlowController _transitionToDigitalIssuanceForProduct:requestContext:]
  -[NPKPaymentProvisioningFlowController _transitionToManualEntry:]
  -[NPKPaymentProvisioningFlowController _credentialReadonlyFieldIdentifiers]
  -[NPKPaymentProvisioningFlowController _filteredPaymentSetupFields:forLocalDeviceEntry:]
  -[NPKPaymentProvisioningFlowController _secondaryFilteredFields:forCredential:]
  -[NPKPaymentProvisioningFlowController _endProvisioningFlowWithSuccessForPass:requestContext:]
  -[NPKPaymentProvisioningFlowController _sendDidTransitionFromStep:toStep:withContext:]
  -[NPKPaymentProvisioningFlowController _requiredFieldsFromRequirementsResponse]
  -[NPKPaymentProvisioningFlowController _fieldRequiresLocalEntry:]
  -[NPKPaymentProvisioningFlowController setReaderModeProvisioningSupported:]
  -[NPKPaymentProvisioningFlowController setDigitalIssuanceSupported:]
  -[NPKPaymentProvisioningFlowController setSeparateLocalDeviceEntryRequired:]
  -[NPKPaymentProvisioningFlowController startProvisioningFlow:]
  -[NPKPaymentProvisioningFlowController startIssuerVerificationFlowForPaymentPass:requestContext:]
  -[NPKPaymentProvisioningFlowController startInAppProvisioningFlowWithConfiguration:requestContext:]
  -[NPKPaymentProvisioningFlowController acknowledgeWelcome:]
  -[NPKPaymentProvisioningFlowController chooseFlowForPickerItem:requestContext:]
  -[NPKPaymentProvisioningFlowController chooseProduct:requestContext:]
  -[NPKPaymentProvisioningFlowController handleDigitalIssuanceAmount:requestContext:]
  -[NPKPaymentProvisioningFlowController chooseReaderMode:]
  -[NPKPaymentProvisioningFlowController handleReaderModeFields:requestContext:]
  -[NPKPaymentProvisioningFlowController chooseCredentials:requestContext:]
  -[NPKPaymentProvisioningFlowController chooseManualEntry:]
  -[NPKPaymentProvisioningFlowController handleManualEntryFields:credential:requestContext:]
  -[NPKPaymentProvisioningFlowController handleProductSelection:requestContext:]
  -[NPKPaymentProvisioningFlowController handlePasscodeUpgradeCompleteWithSuccess:error:requestContext:]
  -[NPKPaymentProvisioningFlowController acceptTerms:]
  -[NPKPaymentProvisioningFlowController skipProvisioning:]
  -[NPKPaymentProvisioningFlowController acknowledgeMoreInformation:]
  -[NPKPaymentProvisioningFlowController handleIssuerVerificationChannel:requestContext:]
  -[NPKPaymentProvisioningFlowController handleIssuerVerificationFields:requestContext:]
  -[NPKPaymentProvisioningFlowController handleIssuerVerificationCode:requestContext:]
  -[NPKPaymentProvisioningFlowController skipIssuerVerification:]
  -[NPKPaymentProvisioningFlowController handleIssuerApplicationAddRequest:requestContext:]
  -[NPKPaymentProvisioningFlowController chooseCardsOnFileFlowForProduct:requestContext:preloadMetadata:]
  -[NPKPaymentProvisioningFlowController chooseTransitProductFromFlowPickerSection:requestContext:]
  -[NPKPaymentProvisioningFlowController chooseEMoneyProductFromFlowPickerSection:requestContext:]
  -[NPKPaymentProvisioningFlowController acknowledgeAppleBalanceAccountDetailsWithProduct:requestContext:]
  -[NPKPaymentProvisioningFlowController initWithProvisioningController:setupContext:]
  -[NPKPaymentProvisioningFlowController hasCredentialsAssociatedWithProduct:]
  -[NPKPaymentProvisioningFlowController ensureMetadataForCredentials:requestContext:updateHandler:completionHandler:]
  -[NPKPaymentProvisioningFlowController prefetchCredentialsForProduct:requestContext:completionHandler:]
  -[NPKPaymentProvisioningFlowController chooseProductAndCredentialsFlowForProduct:credentials:requestContext:]
  -[NPKPaymentProvisioningFlowController _transitionToProvisioningForCredential:product:requestContext:]
  -[NPKPaymentProvisioningFlowController isReaderModeProvisioningSupported]
  -[NPKPaymentProvisioningFlowController isDigitalIssuanceSupported]
  -[NPKPaymentProvisioningFlowController isSeparateLocalDeviceEntryRequired]
  -[NPKPaymentProvisioningFlowController unitTestingAuthorizationController]
  -[NPKPaymentProvisioningFlowController setUnitTestingAuthorizationController:]
  -[NPKPaymentProvisioningFlowController unitTestingCardIngester]
  -[NPKPaymentProvisioningFlowController setUnitTestingCardIngester:]
  -[NPKPaymentProvisioningFlowController inAppProvisioningRequestConfiguration]
  -[NPKPaymentProvisioningFlowController setInAppProvisioningRequestConfiguration:]
  -[NPKPaymentProvisioningFlowController inAppProvisioningRequest]
  -[NPKPaymentProvisioningFlowController setInAppProvisioningRequest:]
  -[NPKPaymentProvisioningFlowController inAppProvisioningPublicKeyHash]
  -[NPKPaymentProvisioningFlowController setInAppProvisioningPublicKeyHash:]
  -[NPKPaymentProvisioningFlowController inAppProvisioningNonce]
  -[NPKPaymentProvisioningFlowController setInAppProvisioningNonce:]
  -[NPKPaymentProvisioningFlowController inAppProvisioningGetRequestTimer]
  -[NPKPaymentProvisioningFlowController setInAppProvisioningGetRequestTimer:]
  -[NPKPaymentProvisioningFlowController setFidoAuthCoordinator:]
  -[NPKPaymentProvisioningFlowController preconditionsRequestContext]
  -[NPKPaymentProvisioningFlowController setPreconditionsRequestContext:]
  -[NPKPaymentProvisioningFlowController chooseCredentialsStepIdentifier]
  -[NPKPaymentProvisioningFlowController setChooseCredentialsStepIdentifier:]
  -[NPKPaymentProvisioningFlowController immediatelyBeforeTermsStepIdentifier]
  -[NPKPaymentProvisioningFlowController setImmediatelyBeforeTermsStepIdentifier:]
  -[NPKPaymentProvisioningFlowController progressNotificationToken]
  -[NPKPaymentProvisioningFlowController setProgressNotificationToken:]
  -[NPKPaymentProvisioningFlowController provisioningProgressRequestContext]
  -[NPKPaymentProvisioningFlowController setProvisioningProgressRequestContext:]
  -[NPKPaymentProvisioningFlowController issuerVerificationPass]
  -[NPKPaymentProvisioningFlowController setIssuerVerificationPass:]
  -[NPKPaymentProvisioningFlowController setCurrentProduct:]
  -[NPKPaymentProvisioningFlowController termsReason]
  -[NPKPaymentProvisioningFlowController setTermsReason:]
  -[NPKPaymentProvisioningFlowController termsAcceptedOutOfBand]
  -[NPKPaymentProvisioningFlowController digitalIssuancePaymentRequest]
  -[NPKPaymentProvisioningFlowController setDigitalIssuancePaymentRequest:]
  -[NPKPaymentProvisioningFlowController digitalIssuanceAmount]
  -[NPKPaymentProvisioningFlowController setDigitalIssuanceAmount:]
  -[NPKPaymentProvisioningFlowController digitalIssuancePurchase]
  -[NPKPaymentProvisioningFlowController setDigitalIssuancePurchase:]
  -[NPKPaymentProvisioningFlowController digitalIssuanceAmountRequestContext]
  -[NPKPaymentProvisioningFlowController setDigitalIssuanceAmountRequestContext:]
  -[NPKPaymentProvisioningFlowController digitalIssuancePaymentRequestContext]
  -[NPKPaymentProvisioningFlowController setDigitalIssuancePaymentRequestContext:]
  -[NPKPaymentProvisioningFlowController cardIngester]
  -[NPKPaymentProvisioningFlowController setCardIngester:]
  -[NPKPaymentProvisioningFlowController setInternalIngestionState:]
  -[NPKPaymentProvisioningFlowController flowIngestionState]
  -[NPKPaymentProvisioningFlowController setFlowIngestionState:]
  -[NPKPaymentProvisioningFlowController ingestionProgress]
  -[NPKPaymentProvisioningFlowController setIngestionProgress:]
  -[NPKPaymentProvisioningFlowController ingestionStateOnRetry]
  -[NPKPaymentProvisioningFlowController setIngestionStateOnRetry:]
  -[NPKPaymentProvisioningFlowController ingestionCardSessionToken]
  -[NPKPaymentProvisioningFlowController setIngestionCardSessionToken:]
  -[NPKPaymentProvisioningFlowController ingestionCardNotFoundTimer]
  -[NPKPaymentProvisioningFlowController setIngestionCardNotFoundTimer:]
  -[NPKPaymentProvisioningFlowController ingestionMethodMetadata]
  -[NPKPaymentProvisioningFlowController setIngestionMethodMetadata:]
  -[NPKPaymentProvisioningFlowController readerModeRequestContext]
  -[NPKPaymentProvisioningFlowController setReaderModeRequestContext:]
  -[NPKPaymentProvisioningFlowController _paymentRequestForAmount:]
  -[NPKPaymentProvisioningFlowController _addCardErrorForPaymentRequest:]
  -[NPKPaymentProvisioningFlowController _canMakeDigitalIssuancePaymentsForTransitProducts:withCompletion:]
  -[NPKPaymentProvisioningFlowController _startReaderModeIngestion:]
  -[NPKPaymentProvisioningFlowController _transitionToIngestionProgress:]
  -[NPKPaymentProvisioningFlowController _transitionToFlowIngestionState:]
  -[NPKPaymentProvisioningFlowController _resetReaderModeProvisioningState]
  -[NPKPaymentProvisioningFlowController _transitionToFlowIngestionState:progress:]
  -[NPKPaymentProvisioningFlowController _cardNotFoundTimerFired]


NPKIDSHeartbeat : NSObject
 @property  IDSService *service
 @property  IDSProtobuf *pendingStatusProtobuf
 @property  long long messagePriority
 @property  NSString *responseIdentifier
 @property  NSObject<OS_dispatch_source> *statusTimer
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSDictionary *sendOptions
 @property  unsigned long updatesSent
 @property  unsigned long maxUpdates

  // instance methods
  -[NPKIDSHeartbeat .cxx_destruct]
  -[NPKIDSHeartbeat setQueue:]
  -[NPKIDSHeartbeat responseIdentifier]
  -[NPKIDSHeartbeat service]
  -[NPKIDSHeartbeat setStatusTimer:]
  -[NPKIDSHeartbeat queue]
  -[NPKIDSHeartbeat sendOptions]
  -[NPKIDSHeartbeat setSendOptions:]
  -[NPKIDSHeartbeat dealloc]
  -[NPKIDSHeartbeat invalidate]
  -[NPKIDSHeartbeat statusTimer]
  -[NPKIDSHeartbeat setService:]
  -[NPKIDSHeartbeat _sendHeartbeat]
  -[NPKIDSHeartbeat initWithPendingStatusProtobuf:service:priority:maxUpdates:responseIdentifier:sendOptions:queue:updateInterval:]
  -[NPKIDSHeartbeat pendingStatusProtobuf]
  -[NPKIDSHeartbeat messagePriority]
  -[NPKIDSHeartbeat updatesSent]
  -[NPKIDSHeartbeat setUpdatesSent:]
  -[NPKIDSHeartbeat maxUpdates]
  -[NPKIDSHeartbeat initWithPendingStatusProtobuf:service:priority:maxUpdates:responseIdentifier:sendOptions:queue:]
  -[NPKIDSHeartbeat setPendingStatusProtobuf:]
  -[NPKIDSHeartbeat setMessagePriority:]
  -[NPKIDSHeartbeat setResponseIdentifier:]
  -[NPKIDSHeartbeat setMaxUpdates:]


NPKProtoBalanceReminderForBalanceAndPassResponse : PBCodable <NSCopying>
 @property  BOOL hasPending
 @property  BOOL pending
 @property  BOOL hasBalanceReminderBytes
 @property  NSData *balanceReminderBytes
 @property  BOOL hasErrorData
 @property  NSData *errorData

  // instance methods
  -[NPKProtoBalanceReminderForBalanceAndPassResponse pending]
  -[NPKProtoBalanceReminderForBalanceAndPassResponse mergeFrom:]
  -[NPKProtoBalanceReminderForBalanceAndPassResponse setPending:]
  -[NPKProtoBalanceReminderForBalanceAndPassResponse .cxx_destruct]
  -[NPKProtoBalanceReminderForBalanceAndPassResponse dictionaryRepresentation]
  -[NPKProtoBalanceReminderForBalanceAndPassResponse writeTo:]
  -[NPKProtoBalanceReminderForBalanceAndPassResponse isEqual:]
  -[NPKProtoBalanceReminderForBalanceAndPassResponse copyTo:]
  -[NPKProtoBalanceReminderForBalanceAndPassResponse readFrom:]
  -[NPKProtoBalanceReminderForBalanceAndPassResponse copyWithZone:]
  -[NPKProtoBalanceReminderForBalanceAndPassResponse errorData]
  -[NPKProtoBalanceReminderForBalanceAndPassResponse hasErrorData]
  -[NPKProtoBalanceReminderForBalanceAndPassResponse setErrorData:]
  -[NPKProtoBalanceReminderForBalanceAndPassResponse setHasPending:]
  -[NPKProtoBalanceReminderForBalanceAndPassResponse hasPending]
  -[NPKProtoBalanceReminderForBalanceAndPassResponse setBalanceReminderBytes:]
  -[NPKProtoBalanceReminderForBalanceAndPassResponse hasBalanceReminderBytes]
  -[NPKProtoBalanceReminderForBalanceAndPassResponse balanceReminderBytes]


NPKProtoRegistrationDataRequest : PBRequest <NSCopying>
 @property  BOOL hasAuthToken
 @property  NSString *authToken

  // instance methods
  -[NPKProtoRegistrationDataRequest setAuthToken:]
  -[NPKProtoRegistrationDataRequest mergeFrom:]
  -[NPKProtoRegistrationDataRequest hasAuthToken]
  -[NPKProtoRegistrationDataRequest authToken]
  -[NPKProtoRegistrationDataRequest .cxx_destruct]
  -[NPKProtoRegistrationDataRequest dictionaryRepresentation]
  -[NPKProtoRegistrationDataRequest writeTo:]
  -[NPKProtoRegistrationDataRequest isEqual:]
  -[NPKProtoRegistrationDataRequest copyTo:]
  -[NPKProtoRegistrationDataRequest readFrom:]
  -[NPKProtoRegistrationDataRequest copyWithZone:]


NPKPassSelectionFieldDetectorManager : NSObject <PKFieldDetectorDelegate, PKFieldDetectorObserver, NPKPassesDataSourceObserver>
 @property  BOOL fieldDetectEnabled
 @property  <NPKPassSelectionFieldDetectorManagerDelegate> *delegate
 @property  <NPKPassesDataSource> *dataSource
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NPKPassSelectionFieldDetectorManager _shouldEnableFieldDetectWithPasses:]

  // instance methods
  -[NPKPassSelectionFieldDetectorManager initWithDataSource:]
  -[NPKPassSelectionFieldDetectorManager setDataSource:]
  -[NPKPassSelectionFieldDetectorManager .cxx_destruct]
  -[NPKPassSelectionFieldDetectorManager setFieldDetectEnabled:]
  -[NPKPassSelectionFieldDetectorManager setDelegate:]
  -[NPKPassSelectionFieldDetectorManager dataSource]
  -[NPKPassSelectionFieldDetectorManager init]
  -[NPKPassSelectionFieldDetectorManager fieldDetectorShouldProcessFieldEvents:]
  -[NPKPassSelectionFieldDetectorManager fieldDetectorDidEnterField:withProperties:]
  -[NPKPassSelectionFieldDetectorManager delegate]
  -[NPKPassSelectionFieldDetectorManager initWithDataSource:delegate:]
  -[NPKPassSelectionFieldDetectorManager passesDataSource:didAddPasses:]
  -[NPKPassSelectionFieldDetectorManager passesDataSourceDidReorderPasses:]
  -[NPKPassSelectionFieldDetectorManager passesDataSource:didRemovePasses:]
  -[NPKPassSelectionFieldDetectorManager passesDataSource:didUpdatePasses:]
  -[NPKPassSelectionFieldDetectorManager passesDataSourceDidReloadPasses:]
  -[NPKPassSelectionFieldDetectorManager initWithDataSource:delegate:fieldDetector:]
  -[NPKPassSelectionFieldDetectorManager fieldDetectEnabled]
  -[NPKPassSelectionFieldDetectorManager _applicablePassUniqueIDsWithFieldProperties:]


NPKProtoGenerateTransactionKeyWithParametersResponse : PBCodable <NSCopying>
 @property  BOOL hasTransactionKeyIdentifier
 @property  NSString *transactionKeyIdentifier
 @property  NSMutableArray *transactionKeyCertChains
 @property  BOOL hasAppletIdentifier
 @property  NSData *appletIdentifier
 @property  BOOL hasErrorData
 @property  NSData *errorData

  // class methods
  +[NPKProtoGenerateTransactionKeyWithParametersResponse transactionKeyCertChainType]

  // instance methods
  -[NPKProtoGenerateTransactionKeyWithParametersResponse mergeFrom:]
  -[NPKProtoGenerateTransactionKeyWithParametersResponse .cxx_destruct]
  -[NPKProtoGenerateTransactionKeyWithParametersResponse dictionaryRepresentation]
  -[NPKProtoGenerateTransactionKeyWithParametersResponse writeTo:]
  -[NPKProtoGenerateTransactionKeyWithParametersResponse appletIdentifier]
  -[NPKProtoGenerateTransactionKeyWithParametersResponse setAppletIdentifier:]
  -[NPKProtoGenerateTransactionKeyWithParametersResponse isEqual:]
  -[NPKProtoGenerateTransactionKeyWithParametersResponse copyTo:]
  -[NPKProtoGenerateTransactionKeyWithParametersResponse readFrom:]
  -[NPKProtoGenerateTransactionKeyWithParametersResponse copyWithZone:]
  -[NPKProtoGenerateTransactionKeyWithParametersResponse errorData]
  -[NPKProtoGenerateTransactionKeyWithParametersResponse hasErrorData]
  -[NPKProtoGenerateTransactionKeyWithParametersResponse setErrorData:]
  -[NPKProtoGenerateTransactionKeyWithParametersResponse addTransactionKeyCertChain:]
  -[NPKProtoGenerateTransactionKeyWithParametersResponse setTransactionKeyIdentifier:]
  -[NPKProtoGenerateTransactionKeyWithParametersResponse transactionKeyCertChainsCount]
  -[NPKProtoGenerateTransactionKeyWithParametersResponse clearTransactionKeyCertChains]
  -[NPKProtoGenerateTransactionKeyWithParametersResponse transactionKeyCertChainAtIndex:]
  -[NPKProtoGenerateTransactionKeyWithParametersResponse hasTransactionKeyIdentifier]
  -[NPKProtoGenerateTransactionKeyWithParametersResponse hasAppletIdentifier]
  -[NPKProtoGenerateTransactionKeyWithParametersResponse transactionKeyIdentifier]
  -[NPKProtoGenerateTransactionKeyWithParametersResponse transactionKeyCertChains]
  -[NPKProtoGenerateTransactionKeyWithParametersResponse setTransactionKeyCertChains:]


NPKProtoSetPreferredPaymentApplicationResponse : PBCodable <NSCopying>
 @property  BOOL hasPassID
 @property  NSString *passID
 @property  BOOL hasPreferredApplicationAID
 @property  NSString *preferredApplicationAID

  // instance methods
  -[NPKProtoSetPreferredPaymentApplicationResponse mergeFrom:]
  -[NPKProtoSetPreferredPaymentApplicationResponse passID]
  -[NPKProtoSetPreferredPaymentApplicationResponse .cxx_destruct]
  -[NPKProtoSetPreferredPaymentApplicationResponse dictionaryRepresentation]
  -[NPKProtoSetPreferredPaymentApplicationResponse writeTo:]
  -[NPKProtoSetPreferredPaymentApplicationResponse isEqual:]
  -[NPKProtoSetPreferredPaymentApplicationResponse copyTo:]
  -[NPKProtoSetPreferredPaymentApplicationResponse readFrom:]
  -[NPKProtoSetPreferredPaymentApplicationResponse setPassID:]
  -[NPKProtoSetPreferredPaymentApplicationResponse hasPassID]
  -[NPKProtoSetPreferredPaymentApplicationResponse copyWithZone:]
  -[NPKProtoSetPreferredPaymentApplicationResponse setPreferredApplicationAID:]
  -[NPKProtoSetPreferredPaymentApplicationResponse hasPreferredApplicationAID]
  -[NPKProtoSetPreferredPaymentApplicationResponse preferredApplicationAID]


NPKProtoStandaloneInitializationRequest : PBRequest <NSCopying>
 @property  NPKProtoStandaloneRequestHeader *requestHeader
 @property  BOOL hasUseSimulatedFlowController
 @property  BOOL useSimulatedFlowController
 @property  BOOL hasUserLanguageCode
 @property  NSString *userLanguageCode
 @property  BOOL hasPassImageSize
 @property  NPKProtoStandaloneImageSize *passImageSize
 @property  BOOL hasPassThumbnailImageSize
 @property  NPKProtoStandaloneImageSize *passThumbnailImageSize

  // instance methods
  -[NPKProtoStandaloneInitializationRequest mergeFrom:]
  -[NPKProtoStandaloneInitializationRequest .cxx_destruct]
  -[NPKProtoStandaloneInitializationRequest dictionaryRepresentation]
  -[NPKProtoStandaloneInitializationRequest writeTo:]
  -[NPKProtoStandaloneInitializationRequest isEqual:]
  -[NPKProtoStandaloneInitializationRequest copyTo:]
  -[NPKProtoStandaloneInitializationRequest readFrom:]
  -[NPKProtoStandaloneInitializationRequest copyWithZone:]
  -[NPKProtoStandaloneInitializationRequest userLanguageCode]
  -[NPKProtoStandaloneInitializationRequest setUserLanguageCode:]
  -[NPKProtoStandaloneInitializationRequest requestHeader]
  -[NPKProtoStandaloneInitializationRequest setRequestHeader:]
  -[NPKProtoStandaloneInitializationRequest setPassImageSize:]
  -[NPKProtoStandaloneInitializationRequest setPassThumbnailImageSize:]
  -[NPKProtoStandaloneInitializationRequest setUseSimulatedFlowController:]
  -[NPKProtoStandaloneInitializationRequest setHasUseSimulatedFlowController:]
  -[NPKProtoStandaloneInitializationRequest hasUseSimulatedFlowController]
  -[NPKProtoStandaloneInitializationRequest hasUserLanguageCode]
  -[NPKProtoStandaloneInitializationRequest hasPassImageSize]
  -[NPKProtoStandaloneInitializationRequest hasPassThumbnailImageSize]
  -[NPKProtoStandaloneInitializationRequest useSimulatedFlowController]
  -[NPKProtoStandaloneInitializationRequest passImageSize]
  -[NPKProtoStandaloneInitializationRequest passThumbnailImageSize]


NPKProtoPeerPaymentUnregistrationResponse : PBCodable <NSCopying>
 @property  BOOL hasPending
 @property  BOOL pending
 @property  BOOL hasSuccess
 @property  BOOL success
 @property  BOOL hasErrorData
 @property  NSData *errorData
 @property  BOOL hasPeerPaymentWebServiceContextData
 @property  NSData *peerPaymentWebServiceContextData
 @property  BOOL hasPeerPaymentAccountData
 @property  NSData *peerPaymentAccountData

  // instance methods
  -[NPKProtoPeerPaymentUnregistrationResponse setSuccess:]
  -[NPKProtoPeerPaymentUnregistrationResponse success]
  -[NPKProtoPeerPaymentUnregistrationResponse pending]
  -[NPKProtoPeerPaymentUnregistrationResponse mergeFrom:]
  -[NPKProtoPeerPaymentUnregistrationResponse setPending:]
  -[NPKProtoPeerPaymentUnregistrationResponse .cxx_destruct]
  -[NPKProtoPeerPaymentUnregistrationResponse hasSuccess]
  -[NPKProtoPeerPaymentUnregistrationResponse dictionaryRepresentation]
  -[NPKProtoPeerPaymentUnregistrationResponse writeTo:]
  -[NPKProtoPeerPaymentUnregistrationResponse setHasSuccess:]
  -[NPKProtoPeerPaymentUnregistrationResponse isEqual:]
  -[NPKProtoPeerPaymentUnregistrationResponse copyTo:]
  -[NPKProtoPeerPaymentUnregistrationResponse readFrom:]
  -[NPKProtoPeerPaymentUnregistrationResponse copyWithZone:]
  -[NPKProtoPeerPaymentUnregistrationResponse errorData]
  -[NPKProtoPeerPaymentUnregistrationResponse hasErrorData]
  -[NPKProtoPeerPaymentUnregistrationResponse setErrorData:]
  -[NPKProtoPeerPaymentUnregistrationResponse setHasPending:]
  -[NPKProtoPeerPaymentUnregistrationResponse hasPending]
  -[NPKProtoPeerPaymentUnregistrationResponse setPeerPaymentWebServiceContextData:]
  -[NPKProtoPeerPaymentUnregistrationResponse setPeerPaymentAccountData:]
  -[NPKProtoPeerPaymentUnregistrationResponse hasPeerPaymentWebServiceContextData]
  -[NPKProtoPeerPaymentUnregistrationResponse hasPeerPaymentAccountData]
  -[NPKProtoPeerPaymentUnregistrationResponse peerPaymentWebServiceContextData]
  -[NPKProtoPeerPaymentUnregistrationResponse peerPaymentAccountData]


NPKProtoStandalonePaymentProvisioningFlowDigitalIssuancePaymentStepContext : PBCodable <NSCopying>
 @property  BOOL hasProduct
 @property  NPKProtoStandalonePaymentSetupProduct *product

  // instance methods
  -[NPKProtoStandalonePaymentProvisioningFlowDigitalIssuancePaymentStepContext mergeFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowDigitalIssuancePaymentStepContext .cxx_destruct]
  -[NPKProtoStandalonePaymentProvisioningFlowDigitalIssuancePaymentStepContext product]
  -[NPKProtoStandalonePaymentProvisioningFlowDigitalIssuancePaymentStepContext dictionaryRepresentation]
  -[NPKProtoStandalonePaymentProvisioningFlowDigitalIssuancePaymentStepContext writeTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowDigitalIssuancePaymentStepContext isEqual:]
  -[NPKProtoStandalonePaymentProvisioningFlowDigitalIssuancePaymentStepContext copyTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowDigitalIssuancePaymentStepContext readFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowDigitalIssuancePaymentStepContext setProduct:]
  -[NPKProtoStandalonePaymentProvisioningFlowDigitalIssuancePaymentStepContext copyWithZone:]
  -[NPKProtoStandalonePaymentProvisioningFlowDigitalIssuancePaymentStepContext hasProduct]


NPKIDVRemoteDeviceProtoPrearmCredentialRequest : PBRequest <NSCopying>
 @property  BOOL hasAuthorizationTokenData
 @property  NSData *authorizationTokenData

  // instance methods
  -[NPKIDVRemoteDeviceProtoPrearmCredentialRequest mergeFrom:]
  -[NPKIDVRemoteDeviceProtoPrearmCredentialRequest .cxx_destruct]
  -[NPKIDVRemoteDeviceProtoPrearmCredentialRequest dictionaryRepresentation]
  -[NPKIDVRemoteDeviceProtoPrearmCredentialRequest writeTo:]
  -[NPKIDVRemoteDeviceProtoPrearmCredentialRequest isEqual:]
  -[NPKIDVRemoteDeviceProtoPrearmCredentialRequest copyTo:]
  -[NPKIDVRemoteDeviceProtoPrearmCredentialRequest readFrom:]
  -[NPKIDVRemoteDeviceProtoPrearmCredentialRequest copyWithZone:]
  -[NPKIDVRemoteDeviceProtoPrearmCredentialRequest setAuthorizationTokenData:]
  -[NPKIDVRemoteDeviceProtoPrearmCredentialRequest hasAuthorizationTokenData]
  -[NPKIDVRemoteDeviceProtoPrearmCredentialRequest authorizationTokenData]


NPKProtoRegistrationDataResponse : PBCodable <NSCopying>
 @property  BOOL hasPending
 @property  BOOL pending
 @property  BOOL hasRegistrationDataBytes
 @property  NSData *registrationDataBytes
 @property  BOOL hasPushToken
 @property  NSString *pushToken

  // instance methods
  -[NPKProtoRegistrationDataResponse pending]
  -[NPKProtoRegistrationDataResponse mergeFrom:]
  -[NPKProtoRegistrationDataResponse setPending:]
  -[NPKProtoRegistrationDataResponse .cxx_destruct]
  -[NPKProtoRegistrationDataResponse dictionaryRepresentation]
  -[NPKProtoRegistrationDataResponse pushToken]
  -[NPKProtoRegistrationDataResponse writeTo:]
  -[NPKProtoRegistrationDataResponse isEqual:]
  -[NPKProtoRegistrationDataResponse copyTo:]
  -[NPKProtoRegistrationDataResponse setPushToken:]
  -[NPKProtoRegistrationDataResponse readFrom:]
  -[NPKProtoRegistrationDataResponse copyWithZone:]
  -[NPKProtoRegistrationDataResponse setHasPending:]
  -[NPKProtoRegistrationDataResponse hasPending]
  -[NPKProtoRegistrationDataResponse hasPushToken]
  -[NPKProtoRegistrationDataResponse setRegistrationDataBytes:]
  -[NPKProtoRegistrationDataResponse hasRegistrationDataBytes]
  -[NPKProtoRegistrationDataResponse registrationDataBytes]


NPKProtoResetApplePayManateeViewRequest : PBRequest <NSCopying>
  // instance methods
  -[NPKProtoResetApplePayManateeViewRequest mergeFrom:]
  -[NPKProtoResetApplePayManateeViewRequest dictionaryRepresentation]
  -[NPKProtoResetApplePayManateeViewRequest writeTo:]
  -[NPKProtoResetApplePayManateeViewRequest isEqual:]
  -[NPKProtoResetApplePayManateeViewRequest copyTo:]
  -[NPKProtoResetApplePayManateeViewRequest readFrom:]
  -[NPKProtoResetApplePayManateeViewRequest copyWithZone:]


NPKIDVRemoteDeviceProtoProvisionCredentialRequest : PBRequest <NSCopying>
 @property  int credentialType
 @property  BOOL hasMetadataData
 @property  NSData *metadataData
 @property  BOOL hasPolicyIdentifier
 @property  NSString *policyIdentifier
 @property  BOOL hasCredentialIdentifier
 @property  NSString *credentialIdentifier
 @property  BOOL hasAttestationsData
 @property  NSData *attestationsData

  // instance methods
  -[NPKIDVRemoteDeviceProtoProvisionCredentialRequest mergeFrom:]
  -[NPKIDVRemoteDeviceProtoProvisionCredentialRequest credentialType]
  -[NPKIDVRemoteDeviceProtoProvisionCredentialRequest setPolicyIdentifier:]
  -[NPKIDVRemoteDeviceProtoProvisionCredentialRequest hasPolicyIdentifier]
  -[NPKIDVRemoteDeviceProtoProvisionCredentialRequest policyIdentifier]
  -[NPKIDVRemoteDeviceProtoProvisionCredentialRequest .cxx_destruct]
  -[NPKIDVRemoteDeviceProtoProvisionCredentialRequest setCredentialType:]
  -[NPKIDVRemoteDeviceProtoProvisionCredentialRequest dictionaryRepresentation]
  -[NPKIDVRemoteDeviceProtoProvisionCredentialRequest writeTo:]
  -[NPKIDVRemoteDeviceProtoProvisionCredentialRequest credentialIdentifier]
  -[NPKIDVRemoteDeviceProtoProvisionCredentialRequest setCredentialIdentifier:]
  -[NPKIDVRemoteDeviceProtoProvisionCredentialRequest isEqual:]
  -[NPKIDVRemoteDeviceProtoProvisionCredentialRequest copyTo:]
  -[NPKIDVRemoteDeviceProtoProvisionCredentialRequest readFrom:]
  -[NPKIDVRemoteDeviceProtoProvisionCredentialRequest copyWithZone:]
  -[NPKIDVRemoteDeviceProtoProvisionCredentialRequest hasCredentialIdentifier]
  -[NPKIDVRemoteDeviceProtoProvisionCredentialRequest setMetadataData:]
  -[NPKIDVRemoteDeviceProtoProvisionCredentialRequest metadataData]
  -[NPKIDVRemoteDeviceProtoProvisionCredentialRequest credentialTypeAsString:]
  -[NPKIDVRemoteDeviceProtoProvisionCredentialRequest StringAsCredentialType:]
  -[NPKIDVRemoteDeviceProtoProvisionCredentialRequest setAttestationsData:]
  -[NPKIDVRemoteDeviceProtoProvisionCredentialRequest hasMetadataData]
  -[NPKIDVRemoteDeviceProtoProvisionCredentialRequest hasAttestationsData]
  -[NPKIDVRemoteDeviceProtoProvisionCredentialRequest attestationsData]


NPKIDVRemoteDeviceProtoGenerateKeyRequest : PBRequest <NSCopying>
 @property  BOOL hasCredentialIdentifier
 @property  NSString *credentialIdentifier
 @property  BOOL hasKeyTypeString
 @property  NSString *keyTypeString
 @property  NSMutableArray *configuredPartitionsIdentifiers

  // class methods
  +[NPKIDVRemoteDeviceProtoGenerateKeyRequest configuredPartitionsIdentifiersType]

  // instance methods
  -[NPKIDVRemoteDeviceProtoGenerateKeyRequest mergeFrom:]
  -[NPKIDVRemoteDeviceProtoGenerateKeyRequest .cxx_destruct]
  -[NPKIDVRemoteDeviceProtoGenerateKeyRequest dictionaryRepresentation]
  -[NPKIDVRemoteDeviceProtoGenerateKeyRequest writeTo:]
  -[NPKIDVRemoteDeviceProtoGenerateKeyRequest credentialIdentifier]
  -[NPKIDVRemoteDeviceProtoGenerateKeyRequest setCredentialIdentifier:]
  -[NPKIDVRemoteDeviceProtoGenerateKeyRequest isEqual:]
  -[NPKIDVRemoteDeviceProtoGenerateKeyRequest copyTo:]
  -[NPKIDVRemoteDeviceProtoGenerateKeyRequest readFrom:]
  -[NPKIDVRemoteDeviceProtoGenerateKeyRequest copyWithZone:]
  -[NPKIDVRemoteDeviceProtoGenerateKeyRequest hasCredentialIdentifier]
  -[NPKIDVRemoteDeviceProtoGenerateKeyRequest setKeyTypeString:]
  -[NPKIDVRemoteDeviceProtoGenerateKeyRequest setConfiguredPartitionsIdentifiers:]
  -[NPKIDVRemoteDeviceProtoGenerateKeyRequest addConfiguredPartitionsIdentifiers:]
  -[NPKIDVRemoteDeviceProtoGenerateKeyRequest configuredPartitionsIdentifiersCount]
  -[NPKIDVRemoteDeviceProtoGenerateKeyRequest clearConfiguredPartitionsIdentifiers]
  -[NPKIDVRemoteDeviceProtoGenerateKeyRequest configuredPartitionsIdentifiersAtIndex:]
  -[NPKIDVRemoteDeviceProtoGenerateKeyRequest configuredPartitionsIdentifiers]
  -[NPKIDVRemoteDeviceProtoGenerateKeyRequest hasKeyTypeString]
  -[NPKIDVRemoteDeviceProtoGenerateKeyRequest keyTypeString]


NPKProtoMatchingInvitationOnDeviceResponse : PBCodable <NSCopying>
 @property  BOOL hasInvitationData
 @property  NSData *invitationData
 @property  BOOL hasErrorData
 @property  NSData *errorData

  // instance methods
  -[NPKProtoMatchingInvitationOnDeviceResponse mergeFrom:]
  -[NPKProtoMatchingInvitationOnDeviceResponse .cxx_destruct]
  -[NPKProtoMatchingInvitationOnDeviceResponse dictionaryRepresentation]
  -[NPKProtoMatchingInvitationOnDeviceResponse writeTo:]
  -[NPKProtoMatchingInvitationOnDeviceResponse isEqual:]
  -[NPKProtoMatchingInvitationOnDeviceResponse copyTo:]
  -[NPKProtoMatchingInvitationOnDeviceResponse readFrom:]
  -[NPKProtoMatchingInvitationOnDeviceResponse copyWithZone:]
  -[NPKProtoMatchingInvitationOnDeviceResponse errorData]
  -[NPKProtoMatchingInvitationOnDeviceResponse hasErrorData]
  -[NPKProtoMatchingInvitationOnDeviceResponse setErrorData:]
  -[NPKProtoMatchingInvitationOnDeviceResponse invitationData]
  -[NPKProtoMatchingInvitationOnDeviceResponse setInvitationData:]
  -[NPKProtoMatchingInvitationOnDeviceResponse hasInvitationData]


NPKPassDescription : NSObject <NSSecureCoding, NSCopying>
 @property  NSData *logoImageEncoded
 @property  NSData *backgroundImageEncoded
 @property  BOOL lazyLoadEncodedImages
 @property  NSString *uniqueID
 @property  NSNumber *groupID
 @property  NSString *passTypeIdentifier
 @property  NSData *manifestHash
 @property  long long style
 @property  NSDate *relevantDate
 @property  NSDate *ingestionDate
 @property  PKNFCPayload *nfcPayload
 @property  BOOL hasStoredValue
 @property  NSData *completeHash
 @property  unsigned long settings
 @property  NSString *logoText
 @property  PKImage *logoImage
 @property  PKColor *backgroundColor
 @property  PKColor *foregroundColor
 @property  PKColor *labelColor
 @property  PKImage *backgroundImage
 @property  NSString *localizedDescription
 @property  NSSet *devicePaymentApplications
 @property  PKPaymentApplication *devicePrimaryPaymentApplication
 @property  PKPaymentApplication *devicePrimaryContactlessPaymentApplication
 @property  PKPaymentApplication *devicePrimaryInAppPaymentApplication
 @property  PKPaymentApplication *preferredPaymentApplication
 @property  long long effectivePaymentApplicationState
 @property  BOOL privateLabel
 @property  BOOL cobranded
 @property  BOOL deletePending
 @property  BOOL hasUserSelectableContactlessPaymentApplications
 @property  NSString *issuerCountryCode
 @property  long long effectiveContactlessPaymentApplicationState
 @property  NSArray *availableActions
 @property  NSString *organizationName
 @property  PKTransitAppletState *transitAppletState
 @property  NSArray *frontFieldBuckets
 @property  NSArray *backFieldBuckets
 @property  NSDecimalNumber *lastAddValueAmount
 @property  NSDate *pendingAddValueDate
 @property  BOOL hasAssociatedPeerPaymentAccount
 @property  NSSet *subcredentials
 @property  unsigned long expressPassTypesMask

  // class methods
  +[NPKPassDescription supportsSecureCoding]
  +[NPKPassDescription setCachingEnabled:]
  +[NPKPassDescription isCachingEnabled]

  // instance methods
  -[NPKPassDescription logoImage]
  -[NPKPassDescription organizationName]
  -[NPKPassDescription fieldForKey:]
  -[NPKPassDescription setLocalizedDescription:]
  -[NPKPassDescription hasStoredValue]
  -[NPKPassDescription setOrganizationName:]
  -[NPKPassDescription setIssuerCountryCode:]
  -[NPKPassDescription setCobranded:]
  -[NPKPassDescription groupID]
  -[NPKPassDescription setRelevantDate:]
  -[NPKPassDescription frontFieldBuckets]
  -[NPKPassDescription backFieldBuckets]
  -[NPKPassDescription setManifestHash:]
  -[NPKPassDescription setLogoText:]
  -[NPKPassDescription setGroupID:]
  -[NPKPassDescription setBackFieldBuckets:]
  -[NPKPassDescription logoText]
  -[NPKPassDescription setFrontFieldBuckets:]
  -[NPKPassDescription backgroundImage]
  -[NPKPassDescription setAvailableActions:]
  -[NPKPassDescription availableActions]
  -[NPKPassDescription localizedDescription]
  -[NPKPassDescription setDevicePrimaryContactlessPaymentApplication:]
  -[NPKPassDescription foregroundColor]
  -[NPKPassDescription initWithCoder:]
  -[NPKPassDescription setBackgroundImage:]
  -[NPKPassDescription uniqueID]
  -[NPKPassDescription manifestHash]
  -[NPKPassDescription backgroundColor]
  -[NPKPassDescription labelColor]
  -[NPKPassDescription devicePrimaryContactlessPaymentApplication]
  -[NPKPassDescription setHasStoredValue:]
  -[NPKPassDescription .cxx_destruct]
  -[NPKPassDescription initWithPass:]
  -[NPKPassDescription setForegroundColor:]
  -[NPKPassDescription setStyle:]
  -[NPKPassDescription setSettings:]
  -[NPKPassDescription relevantDate]
  -[NPKPassDescription effectiveContactlessPaymentApplicationState]
  -[NPKPassDescription isCobranded]
  -[NPKPassDescription devicePaymentApplications]
  -[NPKPassDescription isEqual:]
  -[NPKPassDescription subcredentials]
  -[NPKPassDescription setPassTypeIdentifier:]
  -[NPKPassDescription hasAssociatedPeerPaymentAccount]
  -[NPKPassDescription isPrivateLabel]
  -[NPKPassDescription setBackgroundColor:]
  -[NPKPassDescription setDevicePaymentApplications:]
  -[NPKPassDescription setDevicePrimaryInAppPaymentApplication:]
  -[NPKPassDescription hasValidNFCPayload]
  -[NPKPassDescription passTypeIdentifier]
  -[NPKPassDescription setSubcredentials:]
  -[NPKPassDescription setDevicePrimaryPaymentApplication:]
  -[NPKPassDescription transitAppletState]
  -[NPKPassDescription transitProperties]
  -[NPKPassDescription issuerCountryCode]
  -[NPKPassDescription devicePrimaryPaymentApplication]
  -[NPKPassDescription setUniqueID:]
  -[NPKPassDescription copyWithZone:]
  -[NPKPassDescription setLogoImage:]
  -[NPKPassDescription setHasAssociatedPeerPaymentAccount:]
  -[NPKPassDescription devicePrimaryInAppPaymentApplication]
  -[NPKPassDescription style]
  -[NPKPassDescription encodeWithCoder:]
  -[NPKPassDescription settings]
  -[NPKPassDescription setLabelColor:]
  -[NPKPassDescription nfcPayload]
  -[NPKPassDescription initWithPass:lazyLoadEncodedImages:]
  -[NPKPassDescription setLazyLoadEncodedImages:]
  -[NPKPassDescription setIngestionDate:]
  -[NPKPassDescription setPrivateLabel:]
  -[NPKPassDescription setDeletePending:]
  -[NPKPassDescription setNfcPayload:]
  -[NPKPassDescription setCompleteHash:]
  -[NPKPassDescription setExpressPassTypesMask:]
  -[NPKPassDescription setPreferredPaymentApplication:]
  -[NPKPassDescription setEffectivePaymentApplicationState:]
  -[NPKPassDescription setHasUserSelectableContactlessPaymentApplications:]
  -[NPKPassDescription setLogoImageEncoded:]
  -[NPKPassDescription setBackgroundImageEncoded:]
  -[NPKPassDescription setTransitAppletState:]
  -[NPKPassDescription setLastAddValueAmount:]
  -[NPKPassDescription setPendingAddValueDate:]
  -[NPKPassDescription ingestionDate]
  -[NPKPassDescription preferredPaymentApplication]
  -[NPKPassDescription effectivePaymentApplicationState]
  -[NPKPassDescription deletePending]
  -[NPKPassDescription hasUserSelectableContactlessPaymentApplications]
  -[NPKPassDescription logoImageEncoded]
  -[NPKPassDescription backgroundImageEncoded]
  -[NPKPassDescription completeHash]
  -[NPKPassDescription lastAddValueAmount]
  -[NPKPassDescription pendingAddValueDate]
  -[NPKPassDescription expressPassTypesMask]
  -[NPKPassDescription encodeAsData:]
  -[NPKPassDescription lazyLoadEncodedImages]
  -[NPKPassDescription encodeObject:asDataInCoder:withKey:]
  -[NPKPassDescription isAddValuePending]
  -[NPKPassDescription isEnroute]


NPKAddPaymentPassController : PKAddPaymentPassController <NPKAddPaymentPassControllerClientProtocol, PKXPCServiceDelegate>
 @property  PKAddPaymentPassRequestConfiguration *configuration
 @property  PKXPCService *remoteService
 @property  BOOL didFinishCallbackSent
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NPKAddPaymentPassController canAddPaymentPass]

  // instance methods
  -[NPKAddPaymentPassController initWithRequestConfiguration:delegate:]
  -[NPKAddPaymentPassController configuration]
  -[NPKAddPaymentPassController .cxx_destruct]
  -[NPKAddPaymentPassController remoteService:didEstablishConnection:]
  -[NPKAddPaymentPassController remoteService]
  -[NPKAddPaymentPassController presentWithCompletion:]
  -[NPKAddPaymentPassController dismissWithCompletion:]
  -[NPKAddPaymentPassController remoteService:didInterruptConnection:]
  -[NPKAddPaymentPassController setRemoteService:]
  -[NPKAddPaymentPassController _remoteObjectProxyWithErrorHandler:]
  -[NPKAddPaymentPassController setConfiguration:]
  -[NPKAddPaymentPassController didFinishWithPass:error:]
  -[NPKAddPaymentPassController generateRequestWithCertificateChain:nonce:nonceSignature:completionHandler:]
  -[NPKAddPaymentPassController _sendDidFinishWithPass:error:]
  -[NPKAddPaymentPassController didFinishCallbackSent]
  -[NPKAddPaymentPassController setDidFinishCallbackSent:]


NPKPassUserNotification : NPKUserNotification
 @property  PKPass *pass
 @property  NSArray *identifierHashComponents

  // instance methods
  -[NPKPassUserNotification pass]
  -[NPKPassUserNotification .cxx_destruct]
  -[NPKPassUserNotification initWithPass:]
  -[NPKPassUserNotification identifierHashComponents]


NPKProtoStandalonePaymentSetupProductImageAssetURLs : PBCodable <NSCopying>
 @property  BOOL hasDigitalCardImageUrl
 @property  NSString *digitalCardImageUrl
 @property  BOOL hasThumbnailImageUrl
 @property  NSString *thumbnailImageUrl
 @property  BOOL hasLogoImageUrl
 @property  NSString *logoImageUrl

  // instance methods
  -[NPKProtoStandalonePaymentSetupProductImageAssetURLs mergeFrom:]
  -[NPKProtoStandalonePaymentSetupProductImageAssetURLs .cxx_destruct]
  -[NPKProtoStandalonePaymentSetupProductImageAssetURLs dictionaryRepresentation]
  -[NPKProtoStandalonePaymentSetupProductImageAssetURLs writeTo:]
  -[NPKProtoStandalonePaymentSetupProductImageAssetURLs isEqual:]
  -[NPKProtoStandalonePaymentSetupProductImageAssetURLs copyTo:]
  -[NPKProtoStandalonePaymentSetupProductImageAssetURLs readFrom:]
  -[NPKProtoStandalonePaymentSetupProductImageAssetURLs logoImageUrl]
  -[NPKProtoStandalonePaymentSetupProductImageAssetURLs digitalCardImageUrl]
  -[NPKProtoStandalonePaymentSetupProductImageAssetURLs thumbnailImageUrl]
  -[NPKProtoStandalonePaymentSetupProductImageAssetURLs copyWithZone:]
  -[NPKProtoStandalonePaymentSetupProductImageAssetURLs setDigitalCardImageUrl:]
  -[NPKProtoStandalonePaymentSetupProductImageAssetURLs setThumbnailImageUrl:]
  -[NPKProtoStandalonePaymentSetupProductImageAssetURLs setLogoImageUrl:]
  -[NPKProtoStandalonePaymentSetupProductImageAssetURLs hasDigitalCardImageUrl]
  -[NPKProtoStandalonePaymentSetupProductImageAssetURLs hasThumbnailImageUrl]
  -[NPKProtoStandalonePaymentSetupProductImageAssetURLs hasLogoImageUrl]


NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsStepContext : PBCodable <NSCopying>
 @property  NSMutableArray *remoteCredentials
 @property  NSMutableArray *credentials
 @property  BOOL hasAllowsManualEntry
 @property  BOOL allowsManualEntry

  // class methods
  +[NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsStepContext remoteCredentialsType]
  +[NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsStepContext credentialsType]

  // instance methods
  -[NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsStepContext mergeFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsStepContext .cxx_destruct]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsStepContext dictionaryRepresentation]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsStepContext writeTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsStepContext isEqual:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsStepContext copyTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsStepContext readFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsStepContext credentials]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsStepContext copyWithZone:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsStepContext setCredentials:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsStepContext allowsManualEntry]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsStepContext setAllowsManualEntry:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsStepContext addCredentials:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsStepContext addRemoteCredentials:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsStepContext remoteCredentialsCount]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsStepContext clearRemoteCredentials]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsStepContext remoteCredentialsAtIndex:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsStepContext credentialsCount]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsStepContext clearCredentials]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsStepContext credentialsAtIndex:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsStepContext setHasAllowsManualEntry:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsStepContext hasAllowsManualEntry]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsStepContext remoteCredentials]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsStepContext setRemoteCredentials:]


NPKProtoUpdatePassRequest : PBRequest <NSCopying>
 @property  NPKProtoPass *pass
 @property  BOOL hasLibraryHash
 @property  NPKProtoHash *libraryHash
 @property  BOOL hasPreviousManifestHash
 @property  NSData *previousManifestHash
 @property  BOOL hasResyncID
 @property  unsigned int resyncID
 @property  BOOL hasCatalog
 @property  NPKProtoCatalog *catalog
 @property  BOOL hasLastKnownResyncID
 @property  unsigned int lastKnownResyncID
 @property  BOOL hasSyncID
 @property  unsigned int syncID

  // instance methods
  -[NPKProtoUpdatePassRequest catalog]
  -[NPKProtoUpdatePassRequest setCatalog:]
  -[NPKProtoUpdatePassRequest pass]
  -[NPKProtoUpdatePassRequest mergeFrom:]
  -[NPKProtoUpdatePassRequest syncID]
  -[NPKProtoUpdatePassRequest .cxx_destruct]
  -[NPKProtoUpdatePassRequest setSyncID:]
  -[NPKProtoUpdatePassRequest dictionaryRepresentation]
  -[NPKProtoUpdatePassRequest writeTo:]
  -[NPKProtoUpdatePassRequest setPass:]
  -[NPKProtoUpdatePassRequest isEqual:]
  -[NPKProtoUpdatePassRequest copyTo:]
  -[NPKProtoUpdatePassRequest readFrom:]
  -[NPKProtoUpdatePassRequest copyWithZone:]
  -[NPKProtoUpdatePassRequest setResyncID:]
  -[NPKProtoUpdatePassRequest setHasResyncID:]
  -[NPKProtoUpdatePassRequest hasResyncID]
  -[NPKProtoUpdatePassRequest resyncID]
  -[NPKProtoUpdatePassRequest setLibraryHash:]
  -[NPKProtoUpdatePassRequest setPreviousManifestHash:]
  -[NPKProtoUpdatePassRequest hasLibraryHash]
  -[NPKProtoUpdatePassRequest hasPreviousManifestHash]
  -[NPKProtoUpdatePassRequest hasCatalog]
  -[NPKProtoUpdatePassRequest setLastKnownResyncID:]
  -[NPKProtoUpdatePassRequest setHasLastKnownResyncID:]
  -[NPKProtoUpdatePassRequest hasLastKnownResyncID]
  -[NPKProtoUpdatePassRequest setHasSyncID:]
  -[NPKProtoUpdatePassRequest hasSyncID]
  -[NPKProtoUpdatePassRequest libraryHash]
  -[NPKProtoUpdatePassRequest previousManifestHash]
  -[NPKProtoUpdatePassRequest lastKnownResyncID]


NPKTapToRadarManager : NSObject
  // instance methods
  -[NPKTapToRadarManager _openTapToRadarWithRequest:completion:]
  -[NPKTapToRadarManager _requestUserPermisionToFileRadarWithRequest:completion:]
  -[NPKTapToRadarManager _applicationWorkSpace]
  -[NPKTapToRadarManager fileRadarWithRequest:requestUserPermision:completion:]


NPKAudioPlayer : NSObject
  // class methods
  +[NPKAudioPlayer _playSoundsWithIdentifier:]
  +[NPKAudioPlayer _playSoundsWithFallbackHapticIfNecessaryForSoundIdentifier:]
  +[NPKAudioPlayer playProvisioningSuccessHaptic]
  +[NPKAudioPlayer playProvisioningFailureHaptic]
  +[NPKAudioPlayer playTransactionSuccessHaptic]
  +[NPKAudioPlayer playTransactionFailureHaptic]
  +[NPKAudioPlayer playAccessScanCompleteHaptic]
  +[NPKAudioPlayer playSessionStartFailureHaptic]
  +[NPKAudioPlayer playSessionTimeoutHaptic]
  +[NPKAudioPlayer playWarsawHaptic]
  +[NPKAudioPlayer playTerminalRequestedAuthenticationHaptic]
  +[NPKAudioPlayer playInAppPaymentSuccessHaptic]
  +[NPKAudioPlayer playInAppPaymentFailureHaptic]
  +[NPKAudioPlayer playTransactionAuthenticationHaptic]
  +[NPKAudioPlayer playIdentityReaderConnectionStartHaptic]
  +[NPKAudioPlayer playIdentityReaderConnectionCompleteHaptic]


NPKProtoStandaloneResponseHeader : PBCodable <NSCopying>
 @property  int protocolVersion
 @property  BOOL hasSessionIdentifier
 @property  NSString *sessionIdentifier

  // instance methods
  -[NPKProtoStandaloneResponseHeader mergeFrom:]
  -[NPKProtoStandaloneResponseHeader setSessionIdentifier:]
  -[NPKProtoStandaloneResponseHeader protocolVersion]
  -[NPKProtoStandaloneResponseHeader .cxx_destruct]
  -[NPKProtoStandaloneResponseHeader setProtocolVersion:]
  -[NPKProtoStandaloneResponseHeader dictionaryRepresentation]
  -[NPKProtoStandaloneResponseHeader sessionIdentifier]
  -[NPKProtoStandaloneResponseHeader writeTo:]
  -[NPKProtoStandaloneResponseHeader isEqual:]
  -[NPKProtoStandaloneResponseHeader copyTo:]
  -[NPKProtoStandaloneResponseHeader hasSessionIdentifier]
  -[NPKProtoStandaloneResponseHeader readFrom:]
  -[NPKProtoStandaloneResponseHeader copyWithZone:]
  -[NPKProtoStandaloneResponseHeader protocolVersionAsString:]
  -[NPKProtoStandaloneResponseHeader StringAsProtocolVersion:]


NPKAssertion : NSObject
 @property  NSString *reason
 @property  BOOL acquired
 @property  unsigned long type
 @property  unsigned long state

  // instance methods
  -[NPKAssertion .cxx_destruct]
  -[NPKAssertion state]
  -[NPKAssertion reason]
  -[NPKAssertion type]
  -[NPKAssertion invalidateWithCompletion:]
  -[NPKAssertion isAcquired]
  -[NPKAssertion acquireWithCompletion:]
  -[NPKAssertion initWithType:reason:]
  -[NPKAssertion _errorWithUnderlyingError:]


NPKProtoStandalonePaymentPassListRequest : PBRequest <NSCopying>
 @property  NPKProtoStandaloneRequestHeader *requestHeader

  // instance methods
  -[NPKProtoStandalonePaymentPassListRequest mergeFrom:]
  -[NPKProtoStandalonePaymentPassListRequest .cxx_destruct]
  -[NPKProtoStandalonePaymentPassListRequest dictionaryRepresentation]
  -[NPKProtoStandalonePaymentPassListRequest writeTo:]
  -[NPKProtoStandalonePaymentPassListRequest isEqual:]
  -[NPKProtoStandalonePaymentPassListRequest copyTo:]
  -[NPKProtoStandalonePaymentPassListRequest readFrom:]
  -[NPKProtoStandalonePaymentPassListRequest copyWithZone:]
  -[NPKProtoStandalonePaymentPassListRequest requestHeader]
  -[NPKProtoStandalonePaymentPassListRequest setRequestHeader:]


NPKCompanionAgentConnectionDeferredActionHandler : NSObject
 @property  NSMutableDictionary *deferredActions
 @property  NSObject<OS_dispatch_queue> *internalQueue
 @property  NSMutableDictionary *deferredSharedPaymentWebServiceContexts
 @property  NSMutableDictionary *deferredAddedPaymentPasses

  // class methods
  +[NPKCompanionAgentConnectionDeferredActionHandler sharedDeferredActionHandler]

  // instance methods
  -[NPKCompanionAgentConnectionDeferredActionHandler setInternalQueue:]
  -[NPKCompanionAgentConnectionDeferredActionHandler .cxx_destruct]
  -[NPKCompanionAgentConnectionDeferredActionHandler init]
  -[NPKCompanionAgentConnectionDeferredActionHandler internalQueue]
  -[NPKCompanionAgentConnectionDeferredActionHandler dealloc]
  -[NPKCompanionAgentConnectionDeferredActionHandler _handleDeviceUnpaired:]
  -[NPKCompanionAgentConnectionDeferredActionHandler _handleDevicePaired:]
  -[NPKCompanionAgentConnectionDeferredActionHandler _handleDeviceBecameActive:]
  -[NPKCompanionAgentConnectionDeferredActionHandler _handleDevicePairingFailure:]
  -[NPKCompanionAgentConnectionDeferredActionHandler _handleCompanionAgentStarted]
  -[NPKCompanionAgentConnectionDeferredActionHandler deferredActions]
  -[NPKCompanionAgentConnectionDeferredActionHandler deferredSharedPaymentWebServiceContexts]
  -[NPKCompanionAgentConnectionDeferredActionHandler deferredAddedPaymentPasses]
  -[NPKCompanionAgentConnectionDeferredActionHandler deferredPaymentPassesForDevice:]
  -[NPKCompanionAgentConnectionDeferredActionHandler _performDeferredActions]
  -[NPKCompanionAgentConnectionDeferredActionHandler _cleanUpDeferredDataForPairingID:]
  -[NPKCompanionAgentConnectionDeferredActionHandler performActionWhenCompanionAgentIsAvailable:forDevice:]
  -[NPKCompanionAgentConnectionDeferredActionHandler deferredSharedPaymentWebServiceContextForDevice:]
  -[NPKCompanionAgentConnectionDeferredActionHandler setDeferredSharedPaymentWebServiceContext:forDevice:]
  -[NPKCompanionAgentConnectionDeferredActionHandler addDeferredPaymentPass:forDevice:]
  -[NPKCompanionAgentConnectionDeferredActionHandler deferredPaymentPassUniqueIDsForDevice:excludingDeactivated:]
  -[NPKCompanionAgentConnectionDeferredActionHandler deferredPaymentPassWithUniqueID:forDevice:]
  -[NPKCompanionAgentConnectionDeferredActionHandler setDeferredActions:]
  -[NPKCompanionAgentConnectionDeferredActionHandler setDeferredSharedPaymentWebServiceContexts:]
  -[NPKCompanionAgentConnectionDeferredActionHandler setDeferredAddedPaymentPasses:]


NPKProtoRemoteAdminAvailabilityRequest : PBRequest <NSCopying>
  // instance methods
  -[NPKProtoRemoteAdminAvailabilityRequest mergeFrom:]
  -[NPKProtoRemoteAdminAvailabilityRequest dictionaryRepresentation]
  -[NPKProtoRemoteAdminAvailabilityRequest writeTo:]
  -[NPKProtoRemoteAdminAvailabilityRequest isEqual:]
  -[NPKProtoRemoteAdminAvailabilityRequest copyTo:]
  -[NPKProtoRemoteAdminAvailabilityRequest readFrom:]
  -[NPKProtoRemoteAdminAvailabilityRequest copyWithZone:]


NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsRequest : PBRequest <NSCopying>
 @property  NPKProtoStandaloneRequestHeader *requestHeader
 @property  NSMutableArray *chosenPaymentCredentialIdentifiers

  // class methods
  +[NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsRequest chosenPaymentCredentialIdentifiersType]

  // instance methods
  -[NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsRequest mergeFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsRequest .cxx_destruct]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsRequest dictionaryRepresentation]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsRequest writeTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsRequest isEqual:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsRequest copyTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsRequest readFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsRequest copyWithZone:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsRequest requestHeader]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsRequest setRequestHeader:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsRequest addChosenPaymentCredentialIdentifiers:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsRequest chosenPaymentCredentialIdentifiersCount]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsRequest clearChosenPaymentCredentialIdentifiers]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsRequest chosenPaymentCredentialIdentifiersAtIndex:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsRequest chosenPaymentCredentialIdentifiers]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsRequest setChosenPaymentCredentialIdentifiers:]


NPKProtoBitmap : PBCodable <NSCopying>
 @property  unsigned long width
 @property  unsigned long height
 @property  unsigned long bitsPerComponent
 @property  unsigned long bitsPerPixel
 @property  unsigned long bytesPerRow
 @property  unsigned int bitmapInfo
 @property  NSData *bitmapData

  // instance methods
  -[NPKProtoBitmap width]
  -[NPKProtoBitmap mergeFrom:]
  -[NPKProtoBitmap setWidth:]
  -[NPKProtoBitmap .cxx_destruct]
  -[NPKProtoBitmap dictionaryRepresentation]
  -[NPKProtoBitmap writeTo:]
  -[NPKProtoBitmap setHeight:]
  -[NPKProtoBitmap height]
  -[NPKProtoBitmap isEqual:]
  -[NPKProtoBitmap copyTo:]
  -[NPKProtoBitmap readFrom:]
  -[NPKProtoBitmap bitsPerComponent]
  -[NPKProtoBitmap setBytesPerRow:]
  -[NPKProtoBitmap setBitsPerComponent:]
  -[NPKProtoBitmap bitmapInfo]
  -[NPKProtoBitmap copyWithZone:]
  -[NPKProtoBitmap bytesPerRow]
  -[NPKProtoBitmap bitmapData]
  -[NPKProtoBitmap bitsPerPixel]
  -[NPKProtoBitmap setBitsPerPixel:]
  -[NPKProtoBitmap setBitmapInfo:]
  -[NPKProtoBitmap setBitmapData:]


NPKProtoStandalonePaymentHeroImage : PBCodable <NSCopying>
 @property  NSString *identifier
 @property  BOOL hasImageHash
 @property  NSString *imageHash
 @property  BOOL hasImageData
 @property  NSData *imageData
 @property  BOOL hasImageURL
 @property  NSString *imageURL

  // instance methods
  -[NPKProtoStandalonePaymentHeroImage mergeFrom:]
  -[NPKProtoStandalonePaymentHeroImage imageURL]
  -[NPKProtoStandalonePaymentHeroImage imageHash]
  -[NPKProtoStandalonePaymentHeroImage setImageData:]
  -[NPKProtoStandalonePaymentHeroImage .cxx_destruct]
  -[NPKProtoStandalonePaymentHeroImage imageData]
  -[NPKProtoStandalonePaymentHeroImage setImageURL:]
  -[NPKProtoStandalonePaymentHeroImage dictionaryRepresentation]
  -[NPKProtoStandalonePaymentHeroImage writeTo:]
  -[NPKProtoStandalonePaymentHeroImage setImageHash:]
  -[NPKProtoStandalonePaymentHeroImage isEqual:]
  -[NPKProtoStandalonePaymentHeroImage copyTo:]
  -[NPKProtoStandalonePaymentHeroImage readFrom:]
  -[NPKProtoStandalonePaymentHeroImage identifier]
  -[NPKProtoStandalonePaymentHeroImage setIdentifier:]
  -[NPKProtoStandalonePaymentHeroImage copyWithZone:]
  -[NPKProtoStandalonePaymentHeroImage hasImageData]
  -[NPKProtoStandalonePaymentHeroImage hasImageURL]
  -[NPKProtoStandalonePaymentHeroImage hasImageHash]


NPKPassUserNotificationFactory : NSObject
 @property  <NPKPassUserNotificationFactoryDataSource> *dataSource

  // instance methods
  -[NPKPassUserNotificationFactory initWithDataSource:]
  -[NPKPassUserNotificationFactory setDataSource:]
  -[NPKPassUserNotificationFactory .cxx_destruct]
  -[NPKPassUserNotificationFactory dataSource]
  -[NPKPassUserNotificationFactory init]
  -[NPKPassUserNotificationFactory passNotificationWithType:passUniqueID:]


NPKProtoFidoExternalizedAuthResponse : PBCodable <NSCopying>
 @property  BOOL hasErrorData
 @property  NSData *errorData

  // instance methods
  -[NPKProtoFidoExternalizedAuthResponse mergeFrom:]
  -[NPKProtoFidoExternalizedAuthResponse .cxx_destruct]
  -[NPKProtoFidoExternalizedAuthResponse dictionaryRepresentation]
  -[NPKProtoFidoExternalizedAuthResponse writeTo:]
  -[NPKProtoFidoExternalizedAuthResponse isEqual:]
  -[NPKProtoFidoExternalizedAuthResponse copyTo:]
  -[NPKProtoFidoExternalizedAuthResponse readFrom:]
  -[NPKProtoFidoExternalizedAuthResponse copyWithZone:]
  -[NPKProtoFidoExternalizedAuthResponse errorData]
  -[NPKProtoFidoExternalizedAuthResponse hasErrorData]
  -[NPKProtoFidoExternalizedAuthResponse setErrorData:]


NPKRemotePassActionSelectItemResponse : NPKRemotePassActionResponse
 @property  NPKProtoRemotePassActionSelectItemResponse *protoResponse

  // instance methods
  -[NPKRemotePassActionSelectItemResponse .cxx_destruct]
  -[NPKRemotePassActionSelectItemResponse protoResponse]
  -[NPKRemotePassActionSelectItemResponse result]
  -[NPKRemotePassActionSelectItemResponse identifier]
  -[NPKRemotePassActionSelectItemResponse serviceProviderData]
  -[NPKRemotePassActionSelectItemResponse setProtoResponse:]
  -[NPKRemotePassActionSelectItemResponse currencyAmount]
  -[NPKRemotePassActionSelectItemResponse initWithIdentifier:cardType:passOrganizationName:result:incrementAmount:currencyCode:serviceProviderDataData:image:passLocalizedDesciption:caption:summaryText:message:]
  -[NPKRemotePassActionSelectItemResponse initWithRenewalAmount:serviceProviderData:fromRequest:withResult:]


NPKPaymentPreflighter : NSObject
 @property  PUConnection *passcodeConnection
 @property  NSSManager *systemSettingsManager
 @property  BOOL checkedWatchPasscodeAndUnlockedStatus
 @property  BOOL checkedCompanioniCloudStatus
 @property  BOOL checkedWatchiCloudStatus
 @property  BOOL checkedWristDetectionStatus
 @property  BOOL authRandomSetIfNecessary
 @property  BOOL watchConnected
 @property  BOOL spaceAvailableOnSecureElement
 @property  BOOL needsPasscode
 @property  BOOL needsUnlock
 @property  BOOL needsCompanioniCloudAccount
 @property  BOOL needsWatchiCloudAccount
 @property  BOOL needsWristDetection
 @property  BOOL needsSetAuthRandom
 @property  @? preflightCompletionHandler
 @property  PKPaymentWebService *webService
 @property  <PKPaymentWebServiceTargetDeviceProtocol> *targetDevice
 @property  NPKCompanionAgentConnection *companionAgentConnection
 @property  BOOL preflighting
 @property  NSDate *watchPasscodeAndUnlockedQueryDate

  // class methods
  +[NPKPaymentPreflighter watchConnected]

  // instance methods
  -[NPKPaymentPreflighter targetDevice]
  -[NPKPaymentPreflighter .cxx_destruct]
  -[NPKPaymentPreflighter setTargetDevice:]
  -[NPKPaymentPreflighter webService]
  -[NPKPaymentPreflighter preflightCompletionHandler]
  -[NPKPaymentPreflighter setPreflightCompletionHandler:]
  -[NPKPaymentPreflighter setWebService:]
  -[NPKPaymentPreflighter setPasscodeConnection:]
  -[NPKPaymentPreflighter setSystemSettingsManager:]
  -[NPKPaymentPreflighter setPreflighting:]
  -[NPKPaymentPreflighter _checkSpaceAvailableOnSecureElement]
  -[NPKPaymentPreflighter _checkWatchConnected]
  -[NPKPaymentPreflighter _checkCompanioniCloudAccount]
  -[NPKPaymentPreflighter _checkWatchiCloudAccount]
  -[NPKPaymentPreflighter _checkPasscodeEnabledAndUnlockedState]
  -[NPKPaymentPreflighter _checkWristDetectEnabledState]
  -[NPKPaymentPreflighter _finishPresentingSetupControllerIfReadyWithSuccess:error:]
  -[NPKPaymentPreflighter watchConnected]
  -[NPKPaymentPreflighter _errorForConnectionIssue]
  -[NPKPaymentPreflighter _checkPasscodeEnabledState]
  -[NPKPaymentPreflighter setNeedsSetAuthRandom:]
  -[NPKPaymentPreflighter companionAgentConnection]
  -[NPKPaymentPreflighter setSpaceAvailableOnSecureElement:]
  -[NPKPaymentPreflighter setWatchConnected:]
  -[NPKPaymentPreflighter setNeedsCompanioniCloudAccount:]
  -[NPKPaymentPreflighter setCheckedCompanioniCloudStatus:]
  -[NPKPaymentPreflighter _errorForCompanionAccountNeeded]
  -[NPKPaymentPreflighter setCheckedWatchiCloudStatus:]
  -[NPKPaymentPreflighter setNeedsWatchiCloudAccount:]
  -[NPKPaymentPreflighter systemSettingsManager]
  -[NPKPaymentPreflighter checkedWatchiCloudStatus]
  -[NPKPaymentPreflighter _checkPasscodeEnabledAndUnlockedStateRequiringPasscode:requiringUnlock:]
  -[NPKPaymentPreflighter setCheckedWatchPasscodeAndUnlockedStatus:]
  -[NPKPaymentPreflighter setNeedsPasscode:]
  -[NPKPaymentPreflighter setNeedsUnlock:]
  -[NPKPaymentPreflighter setAuthRandomSetIfNecessary:]
  -[NPKPaymentPreflighter setWatchPasscodeAndUnlockedQueryDate:]
  -[NPKPaymentPreflighter checkedWatchPasscodeAndUnlockedStatus]
  -[NPKPaymentPreflighter needsPasscode]
  -[NPKPaymentPreflighter needsUnlock]
  -[NPKPaymentPreflighter _setAuthRandomIfNecessary]
  -[NPKPaymentPreflighter passcodeConnection]
  -[NPKPaymentPreflighter watchPasscodeAndUnlockedQueryDate]
  -[NPKPaymentPreflighter setNeedsWristDetection:]
  -[NPKPaymentPreflighter setCheckedWristDetectionStatus:]
  -[NPKPaymentPreflighter needsSetAuthRandom]
  -[NPKPaymentPreflighter _errorForGenericIssue]
  -[NPKPaymentPreflighter isPreflighting]
  -[NPKPaymentPreflighter checkedWristDetectionStatus]
  -[NPKPaymentPreflighter needsWristDetection]
  -[NPKPaymentPreflighter _errorForWristDetectNeeded]
  -[NPKPaymentPreflighter checkedCompanioniCloudStatus]
  -[NPKPaymentPreflighter needsCompanioniCloudAccount]
  -[NPKPaymentPreflighter needsWatchiCloudAccount]
  -[NPKPaymentPreflighter _errorForGizmoAccountNeeded]
  -[NPKPaymentPreflighter _errorForPasscodeNeeded]
  -[NPKPaymentPreflighter _errorForUnlockNeeded]
  -[NPKPaymentPreflighter spaceAvailableOnSecureElement]
  -[NPKPaymentPreflighter authRandomSetIfNecessary]
  -[NPKPaymentPreflighter initWithWebService:targetDevice:companionAgentConnection:]
  -[NPKPaymentPreflighter addCardPreflightWithCompletion:]
  -[NPKPaymentPreflighter transferToCompanionPreflightWithCompletion:]
  -[NPKPaymentPreflighter addSecureElementPassPreflightWithCompletion:]
  -[NPKPaymentPreflighter addBiometricPassPreflightWithCompletion:]
  -[NPKPaymentPreflighter setCompanionAgentConnection:]


NPKProtoRetrievePaymentTransactionsRequest : PBRequest <NSCopying>
 @property  BOOL hasPassID
 @property  NSString *passID

  // instance methods
  -[NPKProtoRetrievePaymentTransactionsRequest mergeFrom:]
  -[NPKProtoRetrievePaymentTransactionsRequest passID]
  -[NPKProtoRetrievePaymentTransactionsRequest .cxx_destruct]
  -[NPKProtoRetrievePaymentTransactionsRequest dictionaryRepresentation]
  -[NPKProtoRetrievePaymentTransactionsRequest writeTo:]
  -[NPKProtoRetrievePaymentTransactionsRequest isEqual:]
  -[NPKProtoRetrievePaymentTransactionsRequest copyTo:]
  -[NPKProtoRetrievePaymentTransactionsRequest readFrom:]
  -[NPKProtoRetrievePaymentTransactionsRequest setPassID:]
  -[NPKProtoRetrievePaymentTransactionsRequest hasPassID]
  -[NPKProtoRetrievePaymentTransactionsRequest copyWithZone:]


NPKProtoSecureElementGetAppletsRequest : PBRequest <NSCopying>
  // instance methods
  -[NPKProtoSecureElementGetAppletsRequest mergeFrom:]
  -[NPKProtoSecureElementGetAppletsRequest dictionaryRepresentation]
  -[NPKProtoSecureElementGetAppletsRequest writeTo:]
  -[NPKProtoSecureElementGetAppletsRequest isEqual:]
  -[NPKProtoSecureElementGetAppletsRequest copyTo:]
  -[NPKProtoSecureElementGetAppletsRequest readFrom:]
  -[NPKProtoSecureElementGetAppletsRequest copyWithZone:]


NPKProtoHash : PBCodable <NSCopying>
 @property  BOOL hasHashData
 @property  NSData *hashData

  // instance methods
  -[NPKProtoHash mergeFrom:]
  -[NPKProtoHash .cxx_destruct]
  -[NPKProtoHash dictionaryRepresentation]
  -[NPKProtoHash writeTo:]
  -[NPKProtoHash isEqual:]
  -[NPKProtoHash copyTo:]
  -[NPKProtoHash readFrom:]
  -[NPKProtoHash copyWithZone:]
  -[NPKProtoHash setHashData:]
  -[NPKProtoHash hasHashData]
  -[NPKProtoHash hashData]


NPKContactlessPaymentSessionAnalyticsManager : NSObject <NPKContactlessPaymentSessionManagerObserver>
 @property  NPKContactlessPaymentSessionState *previousState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NPKContactlessPaymentSessionAnalyticsManager previousState]
  -[NPKContactlessPaymentSessionAnalyticsManager setPreviousState:]
  -[NPKContactlessPaymentSessionAnalyticsManager .cxx_destruct]
  -[NPKContactlessPaymentSessionAnalyticsManager init]
  -[NPKContactlessPaymentSessionAnalyticsManager contactlessPaymentSessionManager:didChangeSessionState:]


NPKProtoNewLibraryHashReceivedRequest : PBRequest <NSCopying>
  // instance methods
  -[NPKProtoNewLibraryHashReceivedRequest mergeFrom:]
  -[NPKProtoNewLibraryHashReceivedRequest dictionaryRepresentation]
  -[NPKProtoNewLibraryHashReceivedRequest writeTo:]
  -[NPKProtoNewLibraryHashReceivedRequest isEqual:]
  -[NPKProtoNewLibraryHashReceivedRequest copyTo:]
  -[NPKProtoNewLibraryHashReceivedRequest readFrom:]
  -[NPKProtoNewLibraryHashReceivedRequest copyWithZone:]


NPKWatchSubcredentialProvisioningService : NPKSubcredentialProvisioningService
  // instance methods
  -[NPKWatchSubcredentialProvisioningService init]
  -[NPKWatchSubcredentialProvisioningService sendCanAcceptInvitationOnRemoteDeviceRequestForInvitation:completion:]
  -[NPKWatchSubcredentialProvisioningService sendAcceptSubcredentialProvisioningRequestForInvitation:metadata:]
  -[NPKWatchSubcredentialProvisioningService fetchAccountAttestationAnonymizationSaltOnRemoteDeviceWithCompletion:]
  -[NPKWatchSubcredentialProvisioningService canAcceptInvitationOnRemoteDeviceResponse:]
  -[NPKWatchSubcredentialProvisioningService fetchAccountAttestationAnonymizationSaltResponse:]
  -[NPKWatchSubcredentialProvisioningService registerProtobufActionsForService:]


NPKProtoPerformProductActionResponse : PBCodable <NSCopying>
 @property  BOOL hasPending
 @property  BOOL pending
 @property  BOOL hasAvailableProductsData
 @property  NSData *availableProductsData
 @property  BOOL hasErrorData
 @property  NSData *errorData

  // instance methods
  -[NPKProtoPerformProductActionResponse pending]
  -[NPKProtoPerformProductActionResponse mergeFrom:]
  -[NPKProtoPerformProductActionResponse setPending:]
  -[NPKProtoPerformProductActionResponse .cxx_destruct]
  -[NPKProtoPerformProductActionResponse dictionaryRepresentation]
  -[NPKProtoPerformProductActionResponse writeTo:]
  -[NPKProtoPerformProductActionResponse isEqual:]
  -[NPKProtoPerformProductActionResponse copyTo:]
  -[NPKProtoPerformProductActionResponse readFrom:]
  -[NPKProtoPerformProductActionResponse copyWithZone:]
  -[NPKProtoPerformProductActionResponse errorData]
  -[NPKProtoPerformProductActionResponse hasErrorData]
  -[NPKProtoPerformProductActionResponse setErrorData:]
  -[NPKProtoPerformProductActionResponse setHasPending:]
  -[NPKProtoPerformProductActionResponse hasPending]
  -[NPKProtoPerformProductActionResponse setAvailableProductsData:]
  -[NPKProtoPerformProductActionResponse hasAvailableProductsData]
  -[NPKProtoPerformProductActionResponse availableProductsData]


NPKProtoNewLibraryHashRequest : PBRequest <NSCopying>
 @property  NPKProtoHash *libraryHash
 @property  BOOL hasResyncID
 @property  unsigned int resyncID
 @property  BOOL hasLastKnownResyncID
 @property  unsigned int lastKnownResyncID
 @property  BOOL hasSyncID
 @property  unsigned int syncID

  // instance methods
  -[NPKProtoNewLibraryHashRequest mergeFrom:]
  -[NPKProtoNewLibraryHashRequest syncID]
  -[NPKProtoNewLibraryHashRequest .cxx_destruct]
  -[NPKProtoNewLibraryHashRequest setSyncID:]
  -[NPKProtoNewLibraryHashRequest dictionaryRepresentation]
  -[NPKProtoNewLibraryHashRequest writeTo:]
  -[NPKProtoNewLibraryHashRequest isEqual:]
  -[NPKProtoNewLibraryHashRequest copyTo:]
  -[NPKProtoNewLibraryHashRequest readFrom:]
  -[NPKProtoNewLibraryHashRequest copyWithZone:]
  -[NPKProtoNewLibraryHashRequest setResyncID:]
  -[NPKProtoNewLibraryHashRequest setHasResyncID:]
  -[NPKProtoNewLibraryHashRequest hasResyncID]
  -[NPKProtoNewLibraryHashRequest resyncID]
  -[NPKProtoNewLibraryHashRequest setLibraryHash:]
  -[NPKProtoNewLibraryHashRequest setLastKnownResyncID:]
  -[NPKProtoNewLibraryHashRequest setHasLastKnownResyncID:]
  -[NPKProtoNewLibraryHashRequest hasLastKnownResyncID]
  -[NPKProtoNewLibraryHashRequest setHasSyncID:]
  -[NPKProtoNewLibraryHashRequest hasSyncID]
  -[NPKProtoNewLibraryHashRequest libraryHash]
  -[NPKProtoNewLibraryHashRequest lastKnownResyncID]


NPKProtoPauseRangingForPairedReaderIdentifierRequest : PBRequest <NSCopying>
 @property  BOOL hasPairedReaderIdentifier
 @property  NSString *pairedReaderIdentifier
 @property  BOOL hasDurationInSeconds
 @property  unsigned long durationInSeconds

  // instance methods
  -[NPKProtoPauseRangingForPairedReaderIdentifierRequest mergeFrom:]
  -[NPKProtoPauseRangingForPairedReaderIdentifierRequest .cxx_destruct]
  -[NPKProtoPauseRangingForPairedReaderIdentifierRequest dictionaryRepresentation]
  -[NPKProtoPauseRangingForPairedReaderIdentifierRequest writeTo:]
  -[NPKProtoPauseRangingForPairedReaderIdentifierRequest hasPairedReaderIdentifier]
  -[NPKProtoPauseRangingForPairedReaderIdentifierRequest isEqual:]
  -[NPKProtoPauseRangingForPairedReaderIdentifierRequest copyTo:]
  -[NPKProtoPauseRangingForPairedReaderIdentifierRequest durationInSeconds]
  -[NPKProtoPauseRangingForPairedReaderIdentifierRequest readFrom:]
  -[NPKProtoPauseRangingForPairedReaderIdentifierRequest setPairedReaderIdentifier:]
  -[NPKProtoPauseRangingForPairedReaderIdentifierRequest copyWithZone:]
  -[NPKProtoPauseRangingForPairedReaderIdentifierRequest pairedReaderIdentifier]
  -[NPKProtoPauseRangingForPairedReaderIdentifierRequest setDurationInSeconds:]
  -[NPKProtoPauseRangingForPairedReaderIdentifierRequest setHasDurationInSeconds:]
  -[NPKProtoPauseRangingForPairedReaderIdentifierRequest hasDurationInSeconds]


NPKProtoStandalonePass : PBCodable <NSCopying>
 @property  BOOL hasPassType
 @property  int passType
 @property  BOOL hasSerialNumber
 @property  NSString *serialNumber
 @property  BOOL hasPassTypeIdentifier
 @property  NSString *passTypeIdentifier
 @property  BOOL hasImageData
 @property  NSData *imageData
 @property  BOOL hasLocalizedName
 @property  NSString *localizedName
 @property  BOOL hasLocalizedDescription
 @property  NSString *localizedDescription
 @property  BOOL hasOrganizationName
 @property  NSString *organizationName
 @property  NSMutableArray *userInfos
 @property  BOOL hasRemotePass
 @property  BOOL remotePass
 @property  BOOL hasDeviceName
 @property  NSString *deviceName

  // class methods
  +[NPKProtoStandalonePass userInfosType]

  // instance methods
  -[NPKProtoStandalonePass organizationName]
  -[NPKProtoStandalonePass setLocalizedDescription:]
  -[NPKProtoStandalonePass setPassType:]
  -[NPKProtoStandalonePass localizedName]
  -[NPKProtoStandalonePass setOrganizationName:]
  -[NPKProtoStandalonePass serialNumber]
  -[NPKProtoStandalonePass passType]
  -[NPKProtoStandalonePass setSerialNumber:]
  -[NPKProtoStandalonePass mergeFrom:]
  -[NPKProtoStandalonePass localizedDescription]
  -[NPKProtoStandalonePass setLocalizedName:]
  -[NPKProtoStandalonePass deviceName]
  -[NPKProtoStandalonePass hasDeviceName]
  -[NPKProtoStandalonePass setImageData:]
  -[NPKProtoStandalonePass .cxx_destruct]
  -[NPKProtoStandalonePass imageData]
  -[NPKProtoStandalonePass dictionaryRepresentation]
  -[NPKProtoStandalonePass setDeviceName:]
  -[NPKProtoStandalonePass writeTo:]
  -[NPKProtoStandalonePass isEqual:]
  -[NPKProtoStandalonePass copyTo:]
  -[NPKProtoStandalonePass hasOrganizationName]
  -[NPKProtoStandalonePass setPassTypeIdentifier:]
  -[NPKProtoStandalonePass readFrom:]
  -[NPKProtoStandalonePass setRemotePass:]
  -[NPKProtoStandalonePass passTypeIdentifier]
  -[NPKProtoStandalonePass hasLocalizedDescription]
  -[NPKProtoStandalonePass copyWithZone:]
  -[NPKProtoStandalonePass hasImageData]
  -[NPKProtoStandalonePass remotePass]
  -[NPKProtoStandalonePass userInfos]
  -[NPKProtoStandalonePass setUserInfos:]
  -[NPKProtoStandalonePass hasSerialNumber]
  -[NPKProtoStandalonePass userInfosCount]
  -[NPKProtoStandalonePass clearUserInfos]
  -[NPKProtoStandalonePass addUserInfos:]
  -[NPKProtoStandalonePass userInfosAtIndex:]
  -[NPKProtoStandalonePass hasPassTypeIdentifier]
  -[NPKProtoStandalonePass hasLocalizedName]
  -[NPKProtoStandalonePass setHasPassType:]
  -[NPKProtoStandalonePass hasPassType]
  -[NPKProtoStandalonePass passTypeAsString:]
  -[NPKProtoStandalonePass StringAsPassType:]
  -[NPKProtoStandalonePass setHasRemotePass:]
  -[NPKProtoStandalonePass hasRemotePass]


NPKProtoFidoExternalizedAuthRequest : PBRequest <NSCopying>
  // instance methods
  -[NPKProtoFidoExternalizedAuthRequest mergeFrom:]
  -[NPKProtoFidoExternalizedAuthRequest dictionaryRepresentation]
  -[NPKProtoFidoExternalizedAuthRequest writeTo:]
  -[NPKProtoFidoExternalizedAuthRequest isEqual:]
  -[NPKProtoFidoExternalizedAuthRequest copyTo:]
  -[NPKProtoFidoExternalizedAuthRequest readFrom:]
  -[NPKProtoFidoExternalizedAuthRequest copyWithZone:]


NPKTransitAppletHistoryFetcher : NSObject
 @property  NSString *aidToFetch
 @property  NSObject<OS_dispatch_queue> *internalQueue
 @property  NSObject<OS_dispatch_queue> *callbackQueue
 @property  NSObject<NFSession> *pendingSessionHandle
 @property  <NPKTransitAppletHistoryFetcherDelegate> *delegate

  // instance methods
  -[NPKTransitAppletHistoryFetcher setInternalQueue:]
  -[NPKTransitAppletHistoryFetcher initWithCallbackQueue:]
  -[NPKTransitAppletHistoryFetcher .cxx_destruct]
  -[NPKTransitAppletHistoryFetcher callbackQueue]
  -[NPKTransitAppletHistoryFetcher setDelegate:]
  -[NPKTransitAppletHistoryFetcher setCallbackQueue:]
  -[NPKTransitAppletHistoryFetcher internalQueue]
  -[NPKTransitAppletHistoryFetcher delegate]
  -[NPKTransitAppletHistoryFetcher pendingSessionHandle]
  -[NPKTransitAppletHistoryFetcher _handleActiveSecureElementManagerSession:]
  -[NPKTransitAppletHistoryFetcher _handleSecureElementSessionFailureWithError:]
  -[NPKTransitAppletHistoryFetcher setPendingSessionHandle:]
  -[NPKTransitAppletHistoryFetcher setAIDToFetch:]
  -[NPKTransitAppletHistoryFetcher requestTransitHistoryFetch]
  -[NPKTransitAppletHistoryFetcher aidToFetch]
  -[NPKTransitAppletHistoryFetcher setAidToFetch:]


NPKProtoPresentStandaloneTransactionRequest : PBRequest <NSCopying>
 @property  BOOL hasTransactionType
 @property  unsigned int transactionType
 @property  BOOL hasWatchPassUniqueID
 @property  NSString *watchPassUniqueID
 @property  BOOL hasValidUntilEpochTimeInterval
 @property  double validUntilEpochTimeInterval

  // instance methods
  -[NPKProtoPresentStandaloneTransactionRequest mergeFrom:]
  -[NPKProtoPresentStandaloneTransactionRequest .cxx_destruct]
  -[NPKProtoPresentStandaloneTransactionRequest dictionaryRepresentation]
  -[NPKProtoPresentStandaloneTransactionRequest writeTo:]
  -[NPKProtoPresentStandaloneTransactionRequest isEqual:]
  -[NPKProtoPresentStandaloneTransactionRequest copyTo:]
  -[NPKProtoPresentStandaloneTransactionRequest readFrom:]
  -[NPKProtoPresentStandaloneTransactionRequest transactionType]
  -[NPKProtoPresentStandaloneTransactionRequest setTransactionType:]
  -[NPKProtoPresentStandaloneTransactionRequest copyWithZone:]
  -[NPKProtoPresentStandaloneTransactionRequest hasTransactionType]
  -[NPKProtoPresentStandaloneTransactionRequest setWatchPassUniqueID:]
  -[NPKProtoPresentStandaloneTransactionRequest setHasTransactionType:]
  -[NPKProtoPresentStandaloneTransactionRequest hasWatchPassUniqueID]
  -[NPKProtoPresentStandaloneTransactionRequest setValidUntilEpochTimeInterval:]
  -[NPKProtoPresentStandaloneTransactionRequest setHasValidUntilEpochTimeInterval:]
  -[NPKProtoPresentStandaloneTransactionRequest hasValidUntilEpochTimeInterval]
  -[NPKProtoPresentStandaloneTransactionRequest watchPassUniqueID]
  -[NPKProtoPresentStandaloneTransactionRequest validUntilEpochTimeInterval]


NPKProtoBarcodeEventRequest : PBRequest <NSCopying>
 @property  BOOL hasRequestData
 @property  NSData *requestData
 @property  NSMutableArray *associatedApplicationIdentifiers

  // class methods
  +[NPKProtoBarcodeEventRequest associatedApplicationIdentifiersType]

  // instance methods
  -[NPKProtoBarcodeEventRequest requestData]
  -[NPKProtoBarcodeEventRequest mergeFrom:]
  -[NPKProtoBarcodeEventRequest hasRequestData]
  -[NPKProtoBarcodeEventRequest .cxx_destruct]
  -[NPKProtoBarcodeEventRequest associatedApplicationIdentifiers]
  -[NPKProtoBarcodeEventRequest dictionaryRepresentation]
  -[NPKProtoBarcodeEventRequest writeTo:]
  -[NPKProtoBarcodeEventRequest setAssociatedApplicationIdentifiers:]
  -[NPKProtoBarcodeEventRequest isEqual:]
  -[NPKProtoBarcodeEventRequest copyTo:]
  -[NPKProtoBarcodeEventRequest readFrom:]
  -[NPKProtoBarcodeEventRequest setRequestData:]
  -[NPKProtoBarcodeEventRequest copyWithZone:]
  -[NPKProtoBarcodeEventRequest addAssociatedApplicationIdentifiers:]
  -[NPKProtoBarcodeEventRequest associatedApplicationIdentifiersCount]
  -[NPKProtoBarcodeEventRequest clearAssociatedApplicationIdentifiers]
  -[NPKProtoBarcodeEventRequest associatedApplicationIdentifiersAtIndex:]


NPKContactlessPaymentSessionState : NSObject <NSCopying>
 @property  NSDate *timestamp
 @property  PKPass *currentPass
 @property  NSUUID *uniqueID
 @property  BOOL hasSession
 @property  unsigned long sessionType
 @property  BOOL sessionStarted
 @property  BOOL sessionWaitingToStart
 @property  BOOL isSwitchingSessionType
 @property  BOOL doublePressReceived
 @property  NSDate *doublePressTimestamp
 @property  BOOL sessionAuthorized
 @property  BOOL passActivating
 @property  BOOL contactlessInterfaceReady
 @property  BOOL canChangePass
 @property  PKPass *serviceModeRequestedPass
 @property  BOOL inServiceMode
 @property  unsigned long expressTransactionStatus
 @property  unsigned long failureType
 @property  unsigned long completionReason
 @property  NPKContactlessPaymentSessionManagerTransactionContext *transactionContext

  // class methods
  +[NPKContactlessPaymentSessionState _timestampDateFormatter]

  // instance methods
  -[NPKContactlessPaymentSessionState sessionType]
  -[NPKContactlessPaymentSessionState setSessionType:]
  -[NPKContactlessPaymentSessionState uniqueID]
  -[NPKContactlessPaymentSessionState .cxx_destruct]
  -[NPKContactlessPaymentSessionState failureType]
  -[NPKContactlessPaymentSessionState hasSession]
  -[NPKContactlessPaymentSessionState timestamp]
  -[NPKContactlessPaymentSessionState setUniqueID:]
  -[NPKContactlessPaymentSessionState copyWithZone:]
  -[NPKContactlessPaymentSessionState setTimestamp:]
  -[NPKContactlessPaymentSessionState completionReason]
  -[NPKContactlessPaymentSessionState setCompletionReason:]
  -[NPKContactlessPaymentSessionState setSessionStarted:]
  -[NPKContactlessPaymentSessionState sessionStarted]
  -[NPKContactlessPaymentSessionState transactionContext]
  -[NPKContactlessPaymentSessionState validityInterval]
  -[NPKContactlessPaymentSessionState setFailureType:]
  -[NPKContactlessPaymentSessionState setCurrentPass:]
  -[NPKContactlessPaymentSessionState currentPass]
  -[NPKContactlessPaymentSessionState sessionWaitingToStart]
  -[NPKContactlessPaymentSessionState isSwitchingSessionType]
  -[NPKContactlessPaymentSessionState doublePressReceived]
  -[NPKContactlessPaymentSessionState doublePressTimestamp]
  -[NPKContactlessPaymentSessionState sessionAuthorized]
  -[NPKContactlessPaymentSessionState passActivating]
  -[NPKContactlessPaymentSessionState contactlessInterfaceReady]
  -[NPKContactlessPaymentSessionState canChangePass]
  -[NPKContactlessPaymentSessionState serviceModeRequestedPass]
  -[NPKContactlessPaymentSessionState inServiceMode]
  -[NPKContactlessPaymentSessionState expressTransactionStatus]
  -[NPKContactlessPaymentSessionState setTransactionContext:]
  -[NPKContactlessPaymentSessionState stateForNonModalDisplay]
  -[NPKContactlessPaymentSessionState isSessionStateValid]
  -[NPKContactlessPaymentSessionState setHasSession:]
  -[NPKContactlessPaymentSessionState setSessionWaitingToStart:]
  -[NPKContactlessPaymentSessionState setIsSwitchingSessionType:]
  -[NPKContactlessPaymentSessionState setDoublePressReceived:]
  -[NPKContactlessPaymentSessionState setDoublePressTimestamp:]
  -[NPKContactlessPaymentSessionState setSessionAuthorized:]
  -[NPKContactlessPaymentSessionState setPassActivating:]
  -[NPKContactlessPaymentSessionState setContactlessInterfaceReady:]
  -[NPKContactlessPaymentSessionState setCanChangePass:]
  -[NPKContactlessPaymentSessionState setServiceModeRequestedPass:]
  -[NPKContactlessPaymentSessionState setInServiceMode:]
  -[NPKContactlessPaymentSessionState setExpressTransactionStatus:]


NPKContactlessPaymentSessionManagerTransactionContext : NSObject
 @property  PKPass *transactionPass
 @property  PKPass *valueAddedServicePass
 @property  NSString *paymentMethodDescription
 @property  PKPaymentTransaction *paymentTransaction
 @property  unsigned long transactionStatus
 @property  unsigned long transactionType
 @property  unsigned long action
 @property  NSString *transactionDescription
 @property  NSArray *displayablePassItems
 @property  NPKPaymentBarcode *paymentBarcode
 @property  BOOL authenticationRequested
 @property  unsigned long releaseDataStatus
 @property  STSTransaction18013Request *releaseDataRequest
 @property  STS18013ReaderAuthInfo *readerAuthInfo
 @property  PKPassTile *passTile

  // class methods
  +[NPKContactlessPaymentSessionManagerTransactionContext _NPKTransactionContextActionDescriptionForNPKTransactionContextAction:]

  // instance methods
  -[NPKContactlessPaymentSessionManagerTransactionContext .cxx_destruct]
  -[NPKContactlessPaymentSessionManagerTransactionContext setAction:]
  -[NPKContactlessPaymentSessionManagerTransactionContext init]
  -[NPKContactlessPaymentSessionManagerTransactionContext action]
  -[NPKContactlessPaymentSessionManagerTransactionContext setTransactionStatus:]
  -[NPKContactlessPaymentSessionManagerTransactionContext transactionStatus]
  -[NPKContactlessPaymentSessionManagerTransactionContext transactionType]
  -[NPKContactlessPaymentSessionManagerTransactionContext setTransactionType:]
  -[NPKContactlessPaymentSessionManagerTransactionContext releaseDataStatus]
  -[NPKContactlessPaymentSessionManagerTransactionContext setPaymentTransaction:]
  -[NPKContactlessPaymentSessionManagerTransactionContext setTransactionDescription:]
  -[NPKContactlessPaymentSessionManagerTransactionContext setDisplayablePassItems:]
  -[NPKContactlessPaymentSessionManagerTransactionContext transactionPass]
  -[NPKContactlessPaymentSessionManagerTransactionContext valueAddedServicePass]
  -[NPKContactlessPaymentSessionManagerTransactionContext transactionDescription]
  -[NPKContactlessPaymentSessionManagerTransactionContext displayablePassItems]
  -[NPKContactlessPaymentSessionManagerTransactionContext paymentBarcode]
  -[NPKContactlessPaymentSessionManagerTransactionContext authenticationRequested]
  -[NPKContactlessPaymentSessionManagerTransactionContext updateWithConcreteTransactions:ephemeralTransaction:updatedPassTransitItems:paymentApplication:]
  -[NPKContactlessPaymentSessionManagerTransactionContext forceToTransitTypeTransactionWithTransactionStatus:]
  -[NPKContactlessPaymentSessionManagerTransactionContext setTransactionPass:]
  -[NPKContactlessPaymentSessionManagerTransactionContext setValueAddedServicePass:]
  -[NPKContactlessPaymentSessionManagerTransactionContext paymentMethodDescription]
  -[NPKContactlessPaymentSessionManagerTransactionContext setPaymentMethodDescription:]
  -[NPKContactlessPaymentSessionManagerTransactionContext paymentTransaction]
  -[NPKContactlessPaymentSessionManagerTransactionContext setPaymentBarcode:]
  -[NPKContactlessPaymentSessionManagerTransactionContext setAuthenticationRequested:]
  -[NPKContactlessPaymentSessionManagerTransactionContext setReleaseDataStatus:]
  -[NPKContactlessPaymentSessionManagerTransactionContext releaseDataRequest]
  -[NPKContactlessPaymentSessionManagerTransactionContext setReleaseDataRequest:]
  -[NPKContactlessPaymentSessionManagerTransactionContext readerAuthInfo]
  -[NPKContactlessPaymentSessionManagerTransactionContext setReaderAuthInfo:]
  -[NPKContactlessPaymentSessionManagerTransactionContext passTile]
  -[NPKContactlessPaymentSessionManagerTransactionContext setPassTile:]


NPKContactlessPaymentSessionManager : NSObject <NPKBarcodePaymentSessionDelegate, NPKQuickPaymentSessionDelegate, NPKPassesDataSourceObserver>
 @property  NSData *credential
 @property  NPKQuickPaymentSession *quickPaymentSession
 @property  NPKQuickPaymentSessionCleanupDelegate *cleanupDelegate
 @property  NPKContactlessPaymentSessionState *lastSessionState
 @property  NPKObserverManager *observersManager
 @property  PKPass *userSelectedPass
 @property  BOOL contactlessPaymentInterfaceVisible
 @property  NSObject<OS_dispatch_source> *contactlessInterfaceVisibilityTimeoutTimer
 @property  int serviceModeRequestNotifyToken
 @property  NPKBarcodePaymentSession *barcodePaymentSession
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NPKContactlessPaymentSessionManager unregisterObserver:]
  -[NPKContactlessPaymentSessionManager credential]
  -[NPKContactlessPaymentSessionManager registerObserver:]
  -[NPKContactlessPaymentSessionManager .cxx_destruct]
  -[NPKContactlessPaymentSessionManager setCredential:]
  -[NPKContactlessPaymentSessionManager init]
  -[NPKContactlessPaymentSessionManager cleanupDelegate]
  -[NPKContactlessPaymentSessionManager passesDataSource:didAddPasses:]
  -[NPKContactlessPaymentSessionManager passesDataSourceDidReorderPasses:]
  -[NPKContactlessPaymentSessionManager passesDataSource:didRemovePasses:]
  -[NPKContactlessPaymentSessionManager passesDataSource:didUpdatePasses:]
  -[NPKContactlessPaymentSessionManager passesDataSourceDidReloadPasses:]
  -[NPKContactlessPaymentSessionManager _handleContactlessInterfaceVisibilityTimeoutTimer]
  -[NPKContactlessPaymentSessionManager _registerForServiceModeRequestNotification]
  -[NPKContactlessPaymentSessionManager _cleanupBarcodePaymentSession]
  -[NPKContactlessPaymentSessionManager _cleanupQuickPaymentSession]
  -[NPKContactlessPaymentSessionManager _handleServiceModeRequestEnded]
  -[NPKContactlessPaymentSessionManager _startContactlessInterfaceVisibilityTimeoutTimer]
  -[NPKContactlessPaymentSessionManager _baseSessionStateForUpdate]
  -[NPKContactlessPaymentSessionManager _sendSessionStateToObservers:]
  -[NPKContactlessPaymentSessionManager _stopContactlessInterfaceVisibilityTimeoutTimer]
  -[NPKContactlessPaymentSessionManager quickPaymentSession]
  -[NPKContactlessPaymentSessionManager _sessionStateForTransactionContext:]
  -[NPKContactlessPaymentSessionManager barcodePaymentSession]
  -[NPKContactlessPaymentSessionManager handleUserSelectedPass:]
  -[NPKContactlessPaymentSessionManager _canHandleRKEActionForTileItem:pass:outAction:outFunction:outError:]
  -[NPKContactlessPaymentSessionManager setQuickPaymentSession:]
  -[NPKContactlessPaymentSessionManager _handleRKEActionRequestedForPass:action:function:withSession:completion:]
  -[NPKContactlessPaymentSessionManager _sessionStateForUserCanceledBarcodeTransaction]
  -[NPKContactlessPaymentSessionManager _sessionStateForExpressTransactionStatus:pass:paymentApplication:concreteTransactions:ephemeralTransaction:mutatedBalances:appletState:]
  -[NPKContactlessPaymentSessionManager handleExpressTransactionStatus:forPass:paymentApplication:concreteTransactions:ephemeralTransaction:mutatedBalances:appletState:]
  -[NPKContactlessPaymentSessionManager userSelectedPass]
  -[NPKContactlessPaymentSessionManager setBarcodePaymentSession:]
  -[NPKContactlessPaymentSessionManager _sessionStateForPaymentBarcode:]
  -[NPKContactlessPaymentSessionManager lastSessionState]
  -[NPKContactlessPaymentSessionManager _sessionStateForBarcodeTransactionStatus:paymentBarcode:transaction:]
  -[NPKContactlessPaymentSessionManager registerObserver:withRelativePriority:]
  -[NPKContactlessPaymentSessionManager _prepareSessionStateForSendingToObservers:]
  -[NPKContactlessPaymentSessionManager paymentSession:didMakePassCurrent:]
  -[NPKContactlessPaymentSessionManager _handleValueAddedServiceTransactions:forValueAddedServicePasses:paymentTransaction:outUserInterventionRequiredPasses:]
  -[NPKContactlessPaymentSessionManager handleISO18013Request:withReaderAuthInfo:]
  -[NPKContactlessPaymentSessionManager _updatedPassItemFieldWithPaymentPass:transitAppletBalances:appletState:paymentApplication:]
  -[NPKContactlessPaymentSessionManager _managerContextForContactlessInterfaceTransactionContext:]
  -[NPKContactlessPaymentSessionManager _paymentBalancesFromTransitAppletBalances:]
  -[NPKContactlessPaymentSessionManager barcodePaymentSession:didReceivePaymentBarcode:]
  -[NPKContactlessPaymentSessionManager barcodePaymentSession:didUpdateTransactionStatus:withTransaction:]
  -[NPKContactlessPaymentSessionManager paymentSession:willActivatePass:]
  -[NPKContactlessPaymentSessionManager paymentSession:didActivatePass:]
  -[NPKContactlessPaymentSessionManager paymentSession:didFailTransactionForPass:withValueAddedServiceTransactions:forValueAddedServicePasses:]
  -[NPKContactlessPaymentSessionManager paymentSession:didCompleteForReason:withTransactionContext:]
  -[NPKContactlessPaymentSessionManager paymentSessionDidEnterField:]
  -[NPKContactlessPaymentSessionManager paymentSessionDidExitField:]
  -[NPKContactlessPaymentSessionManager paymentSession:didCompleteTransactionWithContext:]
  -[NPKContactlessPaymentSessionManager paymentSessionDidReceiveAuthorizationTimeout:]
  -[NPKContactlessPaymentSessionManager paymentSessionDidReceiveActivationError:]
  -[NPKContactlessPaymentSessionManager paymentSessionDidReceiveTransactionError:]
  -[NPKContactlessPaymentSessionManager paymentSessionIsWaitingToStart:]
  -[NPKContactlessPaymentSessionManager paymentSessionDidStart:]
  -[NPKContactlessPaymentSessionManager paymentSession:didReceive18013Request:readerAuthInfo:]
  -[NPKContactlessPaymentSessionManager paymentSessionDidSelectPayment:]
  -[NPKContactlessPaymentSessionManager paymentSessionDidSelectValueAddedService:]
  -[NPKContactlessPaymentSessionManager paymentSessionDidReceiveStartTransaction:]
  -[NPKContactlessPaymentSessionManager paymentSessionDidReceiveActivityTimeout:]
  -[NPKContactlessPaymentSessionManager paymentSessionDidReceiveCredential:]
  -[NPKContactlessPaymentSessionManager handleContactlessPaymentSession:authenticationExpected:]
  -[NPKContactlessPaymentSessionManager handleDidPresentPasscodeAuthentication]
  -[NPKContactlessPaymentSessionManager handleContactlessPaymentInterfaceDidAppear]
  -[NPKContactlessPaymentSessionManager handleContactlessPaymentInterfaceDidDisappear]
  -[NPKContactlessPaymentSessionManager handleCredential:]
  -[NPKContactlessPaymentSessionManager handleDoublePressReceivedAtDate:]
  -[NPKContactlessPaymentSessionManager handleServiceModeRequestedForPass:]
  -[NPKContactlessPaymentSessionManager handleRKEActionRequestedForTileItem:pass:completion:]
  -[NPKContactlessPaymentSessionManager handleEndSessionRequested]
  -[NPKContactlessPaymentSessionManager handleAutomaticSelectionValueAddedServicePasses:]
  -[NPKContactlessPaymentSessionManager handleStandaloneTransactionWithAction:forPass:]
  -[NPKContactlessPaymentSessionManager handleRKETransactionForPass:fromTile:]
  -[NPKContactlessPaymentSessionManager handleExpressTransactionStatus:forPass:]
  -[NPKContactlessPaymentSessionManager handleLocalAuthenticationError:]
  -[NPKContactlessPaymentSessionManager handleEndQuickPaymentSessionRequestedByUI]
  -[NPKContactlessPaymentSessionManager handlePaymentBarcodeRequested]
  -[NPKContactlessPaymentSessionManager handleRetryLoadingPaymentBarcodeRequested]
  -[NPKContactlessPaymentSessionManager handleBarcodePaymentUserIntentionConfirmation:]
  -[NPKContactlessPaymentSessionManager handleBarcodePaymentPinCodeEntry:]
  -[NPKContactlessPaymentSessionManager handleEndBarcodePaymentSessionRequestedByUI]
  -[NPKContactlessPaymentSessionManager handleTransactionStarted]
  -[NPKContactlessPaymentSessionManager _handleIfPossibleIdentityUnavailablePassWithSession:]
  -[NPKContactlessPaymentSessionManager handleISO18013TransactionStarted]
  -[NPKContactlessPaymentSessionManager handleISO18013DataReleaseCanceled]
  -[NPKContactlessPaymentSessionManager handleAuthorize18013RequestWithDataToRelease:credential:]
  -[NPKContactlessPaymentSessionManager handleFailureToReleaseDataWithError:]
  -[NPKContactlessPaymentSessionManager setLastSessionState:]
  -[NPKContactlessPaymentSessionManager setCleanupDelegate:]
  -[NPKContactlessPaymentSessionManager observersManager]
  -[NPKContactlessPaymentSessionManager setObserversManager:]
  -[NPKContactlessPaymentSessionManager setUserSelectedPass:]
  -[NPKContactlessPaymentSessionManager contactlessPaymentInterfaceVisible]
  -[NPKContactlessPaymentSessionManager setContactlessPaymentInterfaceVisible:]
  -[NPKContactlessPaymentSessionManager contactlessInterfaceVisibilityTimeoutTimer]
  -[NPKContactlessPaymentSessionManager setContactlessInterfaceVisibilityTimeoutTimer:]
  -[NPKContactlessPaymentSessionManager serviceModeRequestNotifyToken]
  -[NPKContactlessPaymentSessionManager setServiceModeRequestNotifyToken:]


NPKObserverManager : NSObject
  // instance methods
  -[NPKObserverManager unregisterObserver:]
  -[NPKObserverManager registerObserver:]
  -[NPKObserverManager .cxx_destruct]
  -[NPKObserverManager enumerateObserversUsingBlock:]
  -[NPKObserverManager init]
  -[NPKObserverManager _enumerateObserversUsingBlock:]
  -[NPKObserverManager registerObserver:withRelativePriority:]
  -[NPKObserverManager _registerObserver:withRelativePriority:]
  -[NPKObserverManager _registerObserver:]
  -[NPKObserverManager _unregisterObserver:]
  -[NPKObserverManager _enumerateObserversTablesUsingBlock:]


NPKThreadSafeObserverManager : NPKObserverManager
  // instance methods
  -[NPKThreadSafeObserverManager unregisterObserver:]
  -[NPKThreadSafeObserverManager enumerateObserversUsingBlock:]
  -[NPKThreadSafeObserverManager init]
  -[NPKThreadSafeObserverManager registerObserver:withRelativePriority:]


NPKProtoOpenURLRequest : PBRequest <NSCopying>
 @property  BOOL hasUrlString
 @property  NSString *urlString

  // instance methods
  -[NPKProtoOpenURLRequest urlString]
  -[NPKProtoOpenURLRequest setUrlString:]
  -[NPKProtoOpenURLRequest mergeFrom:]
  -[NPKProtoOpenURLRequest .cxx_destruct]
  -[NPKProtoOpenURLRequest dictionaryRepresentation]
  -[NPKProtoOpenURLRequest writeTo:]
  -[NPKProtoOpenURLRequest isEqual:]
  -[NPKProtoOpenURLRequest copyTo:]
  -[NPKProtoOpenURLRequest readFrom:]
  -[NPKProtoOpenURLRequest copyWithZone:]
  -[NPKProtoOpenURLRequest hasUrlString]


NPKPassAssociatedInfo : NSObject
 @property  PKTransitPassProperties *transitProperties
 @property  PKTransitAppletState *transitAppletState
 @property  NSArray *balanceFields
 @property  NSArray *commutePlanFields
 @property  NSArray *tiles
 @property  unsigned long rangingSuspensionReason

  // instance methods
  -[NPKPassAssociatedInfo balanceFields]
  -[NPKPassAssociatedInfo .cxx_destruct]
  -[NPKPassAssociatedInfo transitAppletState]
  -[NPKPassAssociatedInfo transitProperties]
  -[NPKPassAssociatedInfo tiles]
  -[NPKPassAssociatedInfo initWithTransitProperties:appletState:balanceFields:commutePlanFields:tiles:rangingSuspensionReason:]
  -[NPKPassAssociatedInfo commutePlanFields]
  -[NPKPassAssociatedInfo rangingSuspensionReason]


NPKProtoHandleBalanceChangeRequest : PBRequest <NSCopying>
 @property  BOOL hasPassID
 @property  NSString *passID
 @property  NSMutableArray *balanceBytes

  // class methods
  +[NPKProtoHandleBalanceChangeRequest balanceBytesType]

  // instance methods
  -[NPKProtoHandleBalanceChangeRequest mergeFrom:]
  -[NPKProtoHandleBalanceChangeRequest passID]
  -[NPKProtoHandleBalanceChangeRequest .cxx_destruct]
  -[NPKProtoHandleBalanceChangeRequest dictionaryRepresentation]
  -[NPKProtoHandleBalanceChangeRequest writeTo:]
  -[NPKProtoHandleBalanceChangeRequest isEqual:]
  -[NPKProtoHandleBalanceChangeRequest copyTo:]
  -[NPKProtoHandleBalanceChangeRequest readFrom:]
  -[NPKProtoHandleBalanceChangeRequest setPassID:]
  -[NPKProtoHandleBalanceChangeRequest hasPassID]
  -[NPKProtoHandleBalanceChangeRequest copyWithZone:]
  -[NPKProtoHandleBalanceChangeRequest addBalanceBytes:]
  -[NPKProtoHandleBalanceChangeRequest balanceBytesCount]
  -[NPKProtoHandleBalanceChangeRequest clearBalanceBytes]
  -[NPKProtoHandleBalanceChangeRequest balanceBytesAtIndex:]
  -[NPKProtoHandleBalanceChangeRequest balanceBytes]
  -[NPKProtoHandleBalanceChangeRequest setBalanceBytes:]


NPKProtoPassAssociatedDataRequest : PBRequest <NSCopying>
 @property  NSString *passUniqueID

  // instance methods
  -[NPKProtoPassAssociatedDataRequest mergeFrom:]
  -[NPKProtoPassAssociatedDataRequest .cxx_destruct]
  -[NPKProtoPassAssociatedDataRequest dictionaryRepresentation]
  -[NPKProtoPassAssociatedDataRequest writeTo:]
  -[NPKProtoPassAssociatedDataRequest isEqual:]
  -[NPKProtoPassAssociatedDataRequest copyTo:]
  -[NPKProtoPassAssociatedDataRequest readFrom:]
  -[NPKProtoPassAssociatedDataRequest passUniqueID]
  -[NPKProtoPassAssociatedDataRequest setPassUniqueID:]
  -[NPKProtoPassAssociatedDataRequest copyWithZone:]


NPKProtoRemoteAdminPerformResponse : PBCodable <NSCopying>
 @property  unsigned int resultCode
 @property  BOOL hasResponseDictionary
 @property  NSData *responseDictionary
 @property  BOOL hasHttpStatus
 @property  int httpStatus

  // instance methods
  -[NPKProtoRemoteAdminPerformResponse mergeFrom:]
  -[NPKProtoRemoteAdminPerformResponse responseDictionary]
  -[NPKProtoRemoteAdminPerformResponse resultCode]
  -[NPKProtoRemoteAdminPerformResponse .cxx_destruct]
  -[NPKProtoRemoteAdminPerformResponse dictionaryRepresentation]
  -[NPKProtoRemoteAdminPerformResponse writeTo:]
  -[NPKProtoRemoteAdminPerformResponse isEqual:]
  -[NPKProtoRemoteAdminPerformResponse copyTo:]
  -[NPKProtoRemoteAdminPerformResponse readFrom:]
  -[NPKProtoRemoteAdminPerformResponse setHttpStatus:]
  -[NPKProtoRemoteAdminPerformResponse setResponseDictionary:]
  -[NPKProtoRemoteAdminPerformResponse copyWithZone:]
  -[NPKProtoRemoteAdminPerformResponse httpStatus]
  -[NPKProtoRemoteAdminPerformResponse setResultCode:]
  -[NPKProtoRemoteAdminPerformResponse hasHttpStatus]
  -[NPKProtoRemoteAdminPerformResponse setHasHttpStatus:]
  -[NPKProtoRemoteAdminPerformResponse hasResponseDictionary]


NPKSubcredentialProvisioningService : NSObject <IDSServiceDelegate>
 @property  IDSService *subcredentialService
 @property  NSObject<OS_dispatch_queue> *subcredentialProvisioningQueue
 @property  NSMutableDictionary *outstandingRequests
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NPKSubcredentialProvisioningService service:account:identifier:didSendWithSuccess:error:]
  -[NPKSubcredentialProvisioningService service:activeAccountsChanged:]
  -[NPKSubcredentialProvisioningService service:devicesChanged:]
  -[NPKSubcredentialProvisioningService .cxx_destruct]
  -[NPKSubcredentialProvisioningService init]
  -[NPKSubcredentialProvisioningService outstandingRequests]
  -[NPKSubcredentialProvisioningService setOutstandingRequests:]
  -[NPKSubcredentialProvisioningService _sendOptions]
  -[NPKSubcredentialProvisioningService isPairedDeviceConnected]
  -[NPKSubcredentialProvisioningService subcredentialProvisioningQueue]
  -[NPKSubcredentialProvisioningService sendProtobuf:responseExpected:]
  -[NPKSubcredentialProvisioningService trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:]
  -[NPKSubcredentialProvisioningService sendProtobuf:responseExpected:extraOptions:]
  -[NPKSubcredentialProvisioningService registerProtobufActionsForService:]
  -[NPKSubcredentialProvisioningService _setUpSubcredentialProvisioningQueue]
  -[NPKSubcredentialProvisioningService _setUpSubcredentialProvisioningService]
  -[NPKSubcredentialProvisioningService _sendProtobuf:responseExpected:extraOptions:]
  -[NPKSubcredentialProvisioningService _trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:]
  -[NPKSubcredentialProvisioningService subcredentialService]
  -[NPKSubcredentialProvisioningService setSubcredentialService:]


NPKIDVRemoteDeviceServiceContext : NSObject <NSSecureCoding>
 @property  NSString *remoteDeviceID

  // class methods
  +[NPKIDVRemoteDeviceServiceContext supportsSecureCoding]

  // instance methods
  -[NPKIDVRemoteDeviceServiceContext initWithCoder:]
  -[NPKIDVRemoteDeviceServiceContext .cxx_destruct]
  -[NPKIDVRemoteDeviceServiceContext init]
  -[NPKIDVRemoteDeviceServiceContext encodeWithCoder:]
  -[NPKIDVRemoteDeviceServiceContext remoteDeviceID]
  -[NPKIDVRemoteDeviceServiceContext registerEvents:forServiceName:]
  -[NPKIDVRemoteDeviceServiceContext unregisterEvents:forServiceName:]
  -[NPKIDVRemoteDeviceServiceContext _serviceNamesForEventString:]
  -[NPKIDVRemoteDeviceServiceContext _setServiceNames:forEventString:]
  -[NPKIDVRemoteDeviceServiceContext _registeredEventsForServiceName:]
  -[NPKIDVRemoteDeviceServiceContext serviceNamesForEvent:]


NPKProtoAvailableProductsRequest : PBRequest <NSCopying>
 @property  BOOL hasProductsRequestData
 @property  NSData *productsRequestData

  // instance methods
  -[NPKProtoAvailableProductsRequest mergeFrom:]
  -[NPKProtoAvailableProductsRequest .cxx_destruct]
  -[NPKProtoAvailableProductsRequest dictionaryRepresentation]
  -[NPKProtoAvailableProductsRequest writeTo:]
  -[NPKProtoAvailableProductsRequest isEqual:]
  -[NPKProtoAvailableProductsRequest copyTo:]
  -[NPKProtoAvailableProductsRequest readFrom:]
  -[NPKProtoAvailableProductsRequest copyWithZone:]
  -[NPKProtoAvailableProductsRequest setProductsRequestData:]
  -[NPKProtoAvailableProductsRequest hasProductsRequestData]
  -[NPKProtoAvailableProductsRequest productsRequestData]


NPKTransientAssertion : NSObject <NPKTransientPassAssertionServerClientProtocol>
 @property  NSXPCConnection *xpcConnection
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NPKTransientAssertion setXpcConnection:]
  -[NPKTransientAssertion xpcConnection]
  -[NPKTransientAssertion .cxx_destruct]
  -[NPKTransientAssertion initWithQueue:]
  -[NPKTransientAssertion _remoteObjectProxy]
  -[NPKTransientAssertion invalidate]
  -[NPKTransientAssertion handleDelegatedDoublePressEvent]
  -[NPKTransientAssertion handleTerminalAuthenticationRequestedForPassWithUniqueID:]
  -[NPKTransientAssertion didEnterFieldForPassWithUniqueID:]
  -[NPKTransientAssertion _resyncState]


NPKTransientPassAssertion : NPKTransientAssertion
 @property  NSString *uniqueID
 @property  BOOL requestServiceMode
 @property  BOOL disableCardSelection

  // instance methods
  -[NPKTransientPassAssertion uniqueID]
  -[NPKTransientPassAssertion .cxx_destruct]
  -[NPKTransientPassAssertion setUniqueID:]
  -[NPKTransientPassAssertion setDisableCardSelection:]
  -[NPKTransientPassAssertion _resyncState]
  -[NPKTransientPassAssertion initWithPassWithUniqueID:]
  -[NPKTransientPassAssertion setRequestServiceMode:]
  -[NPKTransientPassAssertion requestServiceMode]
  -[NPKTransientPassAssertion disableCardSelection]


NPKDoublePressDelegationAssertion : NPKTransientAssertion
 @property  <NPKDoublePressDelegationAssertionDelegate> *delegate

  // instance methods
  -[NPKDoublePressDelegationAssertion .cxx_destruct]
  -[NPKDoublePressDelegationAssertion setDelegate:]
  -[NPKDoublePressDelegationAssertion initWithQueue:]
  -[NPKDoublePressDelegationAssertion delegate]
  -[NPKDoublePressDelegationAssertion handleDelegatedDoublePressEvent]
  -[NPKDoublePressDelegationAssertion handleTerminalAuthenticationRequestedForPassWithUniqueID:]
  -[NPKDoublePressDelegationAssertion _resyncState]


NPKPassSelectionFieldDetectorAssertion : NPKTransientAssertion
 @property  <NPKPassSelectionFieldDetectorAssertionDelegate> *delegate

  // instance methods
  -[NPKPassSelectionFieldDetectorAssertion .cxx_destruct]
  -[NPKPassSelectionFieldDetectorAssertion setDelegate:]
  -[NPKPassSelectionFieldDetectorAssertion initWithQueue:]
  -[NPKPassSelectionFieldDetectorAssertion delegate]
  -[NPKPassSelectionFieldDetectorAssertion didEnterFieldForPassWithUniqueID:]
  -[NPKPassSelectionFieldDetectorAssertion _resyncState]


NPKProtoRemotePassUpdateRequest : PBRequest <NSCopying>
 @property  NSString *passID
 @property  BOOL hasUpdateRequestData
 @property  NSData *updateRequestData
 @property  BOOL hasCancelUpdate
 @property  BOOL cancelUpdate
 @property  BOOL hasPass
 @property  NPKProtoPass *pass
 @property  BOOL hasRequestAuthorization
 @property  BOOL requestAuthorization
 @property  BOOL hasShouldNotifyUser
 @property  BOOL shouldNotifyUser

  // instance methods
  -[NPKProtoRemotePassUpdateRequest pass]
  -[NPKProtoRemotePassUpdateRequest mergeFrom:]
  -[NPKProtoRemotePassUpdateRequest passID]
  -[NPKProtoRemotePassUpdateRequest .cxx_destruct]
  -[NPKProtoRemotePassUpdateRequest dictionaryRepresentation]
  -[NPKProtoRemotePassUpdateRequest cancelUpdate]
  -[NPKProtoRemotePassUpdateRequest writeTo:]
  -[NPKProtoRemotePassUpdateRequest setPass:]
  -[NPKProtoRemotePassUpdateRequest isEqual:]
  -[NPKProtoRemotePassUpdateRequest copyTo:]
  -[NPKProtoRemotePassUpdateRequest readFrom:]
  -[NPKProtoRemotePassUpdateRequest setPassID:]
  -[NPKProtoRemotePassUpdateRequest requestAuthorization]
  -[NPKProtoRemotePassUpdateRequest copyWithZone:]
  -[NPKProtoRemotePassUpdateRequest hasPass]
  -[NPKProtoRemotePassUpdateRequest setUpdateRequestData:]
  -[NPKProtoRemotePassUpdateRequest hasUpdateRequestData]
  -[NPKProtoRemotePassUpdateRequest setCancelUpdate:]
  -[NPKProtoRemotePassUpdateRequest setHasCancelUpdate:]
  -[NPKProtoRemotePassUpdateRequest hasCancelUpdate]
  -[NPKProtoRemotePassUpdateRequest setRequestAuthorization:]
  -[NPKProtoRemotePassUpdateRequest setHasRequestAuthorization:]
  -[NPKProtoRemotePassUpdateRequest hasRequestAuthorization]
  -[NPKProtoRemotePassUpdateRequest setShouldNotifyUser:]
  -[NPKProtoRemotePassUpdateRequest setHasShouldNotifyUser:]
  -[NPKProtoRemotePassUpdateRequest hasShouldNotifyUser]
  -[NPKProtoRemotePassUpdateRequest updateRequestData]
  -[NPKProtoRemotePassUpdateRequest shouldNotifyUser]


NPKWifiObserver : NSObject
 @property  <NPKWiFiObserverDelegate> *delegate

  // instance methods
  -[NPKWifiObserver initWithCallbackQueue:]
  -[NPKWifiObserver .cxx_destruct]
  -[NPKWifiObserver setDelegate:]
  -[NPKWifiObserver delegate]
  -[NPKWifiObserver isWifiEnabled]
  -[NPKWifiObserver dealloc]
  -[NPKWifiObserver _setupInterface]
  -[NPKWifiObserver _updateWiFiStateAndNotifiyObserver:]


NPKIDVRemoteDeviceProtoPartitionsCredentialIdentifiersRequest : PBRequest <NSCopying>
 @property  NSMutableArray *partitionsIdentifiers

  // class methods
  +[NPKIDVRemoteDeviceProtoPartitionsCredentialIdentifiersRequest partitionsIdentifiersType]

  // instance methods
  -[NPKIDVRemoteDeviceProtoPartitionsCredentialIdentifiersRequest mergeFrom:]
  -[NPKIDVRemoteDeviceProtoPartitionsCredentialIdentifiersRequest .cxx_destruct]
  -[NPKIDVRemoteDeviceProtoPartitionsCredentialIdentifiersRequest dictionaryRepresentation]
  -[NPKIDVRemoteDeviceProtoPartitionsCredentialIdentifiersRequest writeTo:]
  -[NPKIDVRemoteDeviceProtoPartitionsCredentialIdentifiersRequest isEqual:]
  -[NPKIDVRemoteDeviceProtoPartitionsCredentialIdentifiersRequest copyTo:]
  -[NPKIDVRemoteDeviceProtoPartitionsCredentialIdentifiersRequest readFrom:]
  -[NPKIDVRemoteDeviceProtoPartitionsCredentialIdentifiersRequest copyWithZone:]
  -[NPKIDVRemoteDeviceProtoPartitionsCredentialIdentifiersRequest setPartitionsIdentifiers:]
  -[NPKIDVRemoteDeviceProtoPartitionsCredentialIdentifiersRequest addPartitionsIdentifiers:]
  -[NPKIDVRemoteDeviceProtoPartitionsCredentialIdentifiersRequest partitionsIdentifiersCount]
  -[NPKIDVRemoteDeviceProtoPartitionsCredentialIdentifiersRequest clearPartitionsIdentifiers]
  -[NPKIDVRemoteDeviceProtoPartitionsCredentialIdentifiersRequest partitionsIdentifiersAtIndex:]
  -[NPKIDVRemoteDeviceProtoPartitionsCredentialIdentifiersRequest partitionsIdentifiers]


NPKProtoCatalogChangedRequest : PBRequest <NSCopying>
 @property  NPKProtoCatalog *companionCatalog
 @property  BOOL hasResyncID
 @property  unsigned int resyncID
 @property  BOOL hasLastKnownResyncID
 @property  unsigned int lastKnownResyncID
 @property  BOOL hasSyncID
 @property  unsigned int syncID
 @property  BOOL hasWatchCatalog
 @property  NPKProtoCatalog *watchCatalog

  // instance methods
  -[NPKProtoCatalogChangedRequest mergeFrom:]
  -[NPKProtoCatalogChangedRequest syncID]
  -[NPKProtoCatalogChangedRequest .cxx_destruct]
  -[NPKProtoCatalogChangedRequest setSyncID:]
  -[NPKProtoCatalogChangedRequest dictionaryRepresentation]
  -[NPKProtoCatalogChangedRequest writeTo:]
  -[NPKProtoCatalogChangedRequest isEqual:]
  -[NPKProtoCatalogChangedRequest copyTo:]
  -[NPKProtoCatalogChangedRequest readFrom:]
  -[NPKProtoCatalogChangedRequest copyWithZone:]
  -[NPKProtoCatalogChangedRequest setCompanionCatalog:]
  -[NPKProtoCatalogChangedRequest setWatchCatalog:]
  -[NPKProtoCatalogChangedRequest hasWatchCatalog]
  -[NPKProtoCatalogChangedRequest companionCatalog]
  -[NPKProtoCatalogChangedRequest watchCatalog]
  -[NPKProtoCatalogChangedRequest setResyncID:]
  -[NPKProtoCatalogChangedRequest setHasResyncID:]
  -[NPKProtoCatalogChangedRequest hasResyncID]
  -[NPKProtoCatalogChangedRequest resyncID]
  -[NPKProtoCatalogChangedRequest setLastKnownResyncID:]
  -[NPKProtoCatalogChangedRequest setHasLastKnownResyncID:]
  -[NPKProtoCatalogChangedRequest hasLastKnownResyncID]
  -[NPKProtoCatalogChangedRequest setHasSyncID:]
  -[NPKProtoCatalogChangedRequest hasSyncID]
  -[NPKProtoCatalogChangedRequest lastKnownResyncID]


NPKIDVRemoteDevicesManager : NSObject <NPKIDVRemoteDeviceConnectionCoordinatorObserver, NPKBiometricPassPreflightManagerDataSource>
 @property  <NPKIDVRemoteDevicesManagerDataSource> *dataSource
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NPKIDVRemoteDevicesManager initWithDataSource:]
  -[NPKIDVRemoteDevicesManager .cxx_destruct]
  -[NPKIDVRemoteDevicesManager dataSource]
  -[NPKIDVRemoteDevicesManager remoteDeviceConnectionCoordinator:didReceivePrearmStatusUpdate:]
  -[NPKIDVRemoteDevicesManager _registerForDeviceEvents]
  -[NPKIDVRemoteDevicesManager _teardownConnections]
  -[NPKIDVRemoteDevicesManager _handleDeviceDidUnpair:]
  -[NPKIDVRemoteDevicesManager biometricPassPreflightManager:provisionedCredentialCountsForType:completion:]
  -[NPKIDVRemoteDevicesManager deviceDidBecomeActive:]
  -[NPKIDVRemoteDevicesManager deviceDidBecomeInactive]


NPKProtoHandlePaymentTransactionsRequest : PBRequest <NSCopying>
 @property  NSMutableArray *transactionsBytes
 @property  NSMutableArray *transactionPassIDs
 @property  NSMutableArray *passAppletStates

  // class methods
  +[NPKProtoHandlePaymentTransactionsRequest transactionsBytesType]
  +[NPKProtoHandlePaymentTransactionsRequest transactionPassIDsType]
  +[NPKProtoHandlePaymentTransactionsRequest passAppletStatesType]

  // instance methods
  -[NPKProtoHandlePaymentTransactionsRequest mergeFrom:]
  -[NPKProtoHandlePaymentTransactionsRequest .cxx_destruct]
  -[NPKProtoHandlePaymentTransactionsRequest dictionaryRepresentation]
  -[NPKProtoHandlePaymentTransactionsRequest writeTo:]
  -[NPKProtoHandlePaymentTransactionsRequest isEqual:]
  -[NPKProtoHandlePaymentTransactionsRequest copyTo:]
  -[NPKProtoHandlePaymentTransactionsRequest readFrom:]
  -[NPKProtoHandlePaymentTransactionsRequest copyWithZone:]
  -[NPKProtoHandlePaymentTransactionsRequest addTransactionsBytes:]
  -[NPKProtoHandlePaymentTransactionsRequest addTransactionPassIDs:]
  -[NPKProtoHandlePaymentTransactionsRequest transactionsBytesCount]
  -[NPKProtoHandlePaymentTransactionsRequest clearTransactionsBytes]
  -[NPKProtoHandlePaymentTransactionsRequest transactionsBytesAtIndex:]
  -[NPKProtoHandlePaymentTransactionsRequest transactionPassIDsCount]
  -[NPKProtoHandlePaymentTransactionsRequest clearTransactionPassIDs]
  -[NPKProtoHandlePaymentTransactionsRequest transactionPassIDsAtIndex:]
  -[NPKProtoHandlePaymentTransactionsRequest transactionsBytes]
  -[NPKProtoHandlePaymentTransactionsRequest setTransactionsBytes:]
  -[NPKProtoHandlePaymentTransactionsRequest transactionPassIDs]
  -[NPKProtoHandlePaymentTransactionsRequest setTransactionPassIDs:]
  -[NPKProtoHandlePaymentTransactionsRequest addPassAppletStates:]
  -[NPKProtoHandlePaymentTransactionsRequest passAppletStatesCount]
  -[NPKProtoHandlePaymentTransactionsRequest clearPassAppletStates]
  -[NPKProtoHandlePaymentTransactionsRequest passAppletStatesAtIndex:]
  -[NPKProtoHandlePaymentTransactionsRequest passAppletStates]
  -[NPKProtoHandlePaymentTransactionsRequest setPassAppletStates:]


NPKProtoCanAddSecureElementPassWithConfigurationRequest : PBRequest <NSCopying>
 @property  BOOL hasConfigurationData
 @property  NSData *configurationData

  // instance methods
  -[NPKProtoCanAddSecureElementPassWithConfigurationRequest mergeFrom:]
  -[NPKProtoCanAddSecureElementPassWithConfigurationRequest .cxx_destruct]
  -[NPKProtoCanAddSecureElementPassWithConfigurationRequest setConfigurationData:]
  -[NPKProtoCanAddSecureElementPassWithConfigurationRequest dictionaryRepresentation]
  -[NPKProtoCanAddSecureElementPassWithConfigurationRequest writeTo:]
  -[NPKProtoCanAddSecureElementPassWithConfigurationRequest isEqual:]
  -[NPKProtoCanAddSecureElementPassWithConfigurationRequest copyTo:]
  -[NPKProtoCanAddSecureElementPassWithConfigurationRequest readFrom:]
  -[NPKProtoCanAddSecureElementPassWithConfigurationRequest copyWithZone:]
  -[NPKProtoCanAddSecureElementPassWithConfigurationRequest configurationData]
  -[NPKProtoCanAddSecureElementPassWithConfigurationRequest hasConfigurationData]


NPKProtoConflictingExpressPassIdentifiersForPassInformationRequest : PBRequest <NSCopying>
 @property  BOOL hasExpressPassInformation
 @property  NSData *expressPassInformation
 @property  NSMutableArray *referenceExpressPassesInformations

  // class methods
  +[NPKProtoConflictingExpressPassIdentifiersForPassInformationRequest referenceExpressPassesInformationType]

  // instance methods
  -[NPKProtoConflictingExpressPassIdentifiersForPassInformationRequest mergeFrom:]
  -[NPKProtoConflictingExpressPassIdentifiersForPassInformationRequest .cxx_destruct]
  -[NPKProtoConflictingExpressPassIdentifiersForPassInformationRequest dictionaryRepresentation]
  -[NPKProtoConflictingExpressPassIdentifiersForPassInformationRequest writeTo:]
  -[NPKProtoConflictingExpressPassIdentifiersForPassInformationRequest isEqual:]
  -[NPKProtoConflictingExpressPassIdentifiersForPassInformationRequest copyTo:]
  -[NPKProtoConflictingExpressPassIdentifiersForPassInformationRequest readFrom:]
  -[NPKProtoConflictingExpressPassIdentifiersForPassInformationRequest copyWithZone:]
  -[NPKProtoConflictingExpressPassIdentifiersForPassInformationRequest addReferenceExpressPassesInformation:]
  -[NPKProtoConflictingExpressPassIdentifiersForPassInformationRequest setExpressPassInformation:]
  -[NPKProtoConflictingExpressPassIdentifiersForPassInformationRequest referenceExpressPassesInformationsCount]
  -[NPKProtoConflictingExpressPassIdentifiersForPassInformationRequest clearReferenceExpressPassesInformations]
  -[NPKProtoConflictingExpressPassIdentifiersForPassInformationRequest referenceExpressPassesInformationAtIndex:]
  -[NPKProtoConflictingExpressPassIdentifiersForPassInformationRequest hasExpressPassInformation]
  -[NPKProtoConflictingExpressPassIdentifiersForPassInformationRequest expressPassInformation]
  -[NPKProtoConflictingExpressPassIdentifiersForPassInformationRequest referenceExpressPassesInformations]
  -[NPKProtoConflictingExpressPassIdentifiersForPassInformationRequest setReferenceExpressPassesInformations:]


NPKProtoSecureElementGetPairingInfoResponse : PBCodable <NSCopying>
 @property  BOOL hasPending
 @property  BOOL pending
 @property  BOOL hasSuccess
 @property  BOOL success
 @property  BOOL hasCryptogram
 @property  NSData *cryptogram
 @property  BOOL hasChallengeResponse
 @property  NSData *challengeResponse
 @property  BOOL hasAuthRandomSet
 @property  BOOL authRandomSet

  // instance methods
  -[NPKProtoSecureElementGetPairingInfoResponse setSuccess:]
  -[NPKProtoSecureElementGetPairingInfoResponse success]
  -[NPKProtoSecureElementGetPairingInfoResponse pending]
  -[NPKProtoSecureElementGetPairingInfoResponse mergeFrom:]
  -[NPKProtoSecureElementGetPairingInfoResponse setPending:]
  -[NPKProtoSecureElementGetPairingInfoResponse .cxx_destruct]
  -[NPKProtoSecureElementGetPairingInfoResponse hasSuccess]
  -[NPKProtoSecureElementGetPairingInfoResponse dictionaryRepresentation]
  -[NPKProtoSecureElementGetPairingInfoResponse writeTo:]
  -[NPKProtoSecureElementGetPairingInfoResponse setHasSuccess:]
  -[NPKProtoSecureElementGetPairingInfoResponse setCryptogram:]
  -[NPKProtoSecureElementGetPairingInfoResponse isEqual:]
  -[NPKProtoSecureElementGetPairingInfoResponse copyTo:]
  -[NPKProtoSecureElementGetPairingInfoResponse readFrom:]
  -[NPKProtoSecureElementGetPairingInfoResponse setChallengeResponse:]
  -[NPKProtoSecureElementGetPairingInfoResponse challengeResponse]
  -[NPKProtoSecureElementGetPairingInfoResponse copyWithZone:]
  -[NPKProtoSecureElementGetPairingInfoResponse cryptogram]
  -[NPKProtoSecureElementGetPairingInfoResponse setHasPending:]
  -[NPKProtoSecureElementGetPairingInfoResponse hasPending]
  -[NPKProtoSecureElementGetPairingInfoResponse hasCryptogram]
  -[NPKProtoSecureElementGetPairingInfoResponse hasChallengeResponse]
  -[NPKProtoSecureElementGetPairingInfoResponse setAuthRandomSet:]
  -[NPKProtoSecureElementGetPairingInfoResponse setHasAuthRandomSet:]
  -[NPKProtoSecureElementGetPairingInfoResponse hasAuthRandomSet]
  -[NPKProtoSecureElementGetPairingInfoResponse authRandomSet]


NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationCodeRequest : PBRequest <NSCopying>
 @property  NPKProtoStandaloneRequestHeader *requestHeader
 @property  BOOL hasVerificationCode
 @property  NSString *verificationCode

  // instance methods
  -[NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationCodeRequest mergeFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationCodeRequest .cxx_destruct]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationCodeRequest dictionaryRepresentation]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationCodeRequest writeTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationCodeRequest isEqual:]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationCodeRequest copyTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationCodeRequest verificationCode]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationCodeRequest setVerificationCode:]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationCodeRequest readFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationCodeRequest copyWithZone:]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationCodeRequest requestHeader]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationCodeRequest setRequestHeader:]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationCodeRequest hasVerificationCode]


NPKProtoServiceProviderDataForPassWithUniqueIdentifierResponse : PBCodable <NSCopying>
 @property  BOOL hasServiceProviderData
 @property  NSData *serviceProviderData
 @property  BOOL hasErrorData
 @property  NSData *errorData

  // instance methods
  -[NPKProtoServiceProviderDataForPassWithUniqueIdentifierResponse mergeFrom:]
  -[NPKProtoServiceProviderDataForPassWithUniqueIdentifierResponse .cxx_destruct]
  -[NPKProtoServiceProviderDataForPassWithUniqueIdentifierResponse dictionaryRepresentation]
  -[NPKProtoServiceProviderDataForPassWithUniqueIdentifierResponse writeTo:]
  -[NPKProtoServiceProviderDataForPassWithUniqueIdentifierResponse setServiceProviderData:]
  -[NPKProtoServiceProviderDataForPassWithUniqueIdentifierResponse isEqual:]
  -[NPKProtoServiceProviderDataForPassWithUniqueIdentifierResponse copyTo:]
  -[NPKProtoServiceProviderDataForPassWithUniqueIdentifierResponse readFrom:]
  -[NPKProtoServiceProviderDataForPassWithUniqueIdentifierResponse serviceProviderData]
  -[NPKProtoServiceProviderDataForPassWithUniqueIdentifierResponse copyWithZone:]
  -[NPKProtoServiceProviderDataForPassWithUniqueIdentifierResponse errorData]
  -[NPKProtoServiceProviderDataForPassWithUniqueIdentifierResponse hasErrorData]
  -[NPKProtoServiceProviderDataForPassWithUniqueIdentifierResponse setErrorData:]
  -[NPKProtoServiceProviderDataForPassWithUniqueIdentifierResponse hasServiceProviderData]


NPKProtoStandaloneUserInfo : PBCodable <NSCopying>
 @property  NSString *key
 @property  BOOL hasValue
 @property  NSString *value

  // instance methods
  -[NPKProtoStandaloneUserInfo mergeFrom:]
  -[NPKProtoStandaloneUserInfo setKey:]
  -[NPKProtoStandaloneUserInfo hasValue]
  -[NPKProtoStandaloneUserInfo .cxx_destruct]
  -[NPKProtoStandaloneUserInfo dictionaryRepresentation]
  -[NPKProtoStandaloneUserInfo writeTo:]
  -[NPKProtoStandaloneUserInfo isEqual:]
  -[NPKProtoStandaloneUserInfo copyTo:]
  -[NPKProtoStandaloneUserInfo readFrom:]
  -[NPKProtoStandaloneUserInfo setValue:]
  -[NPKProtoStandaloneUserInfo value]
  -[NPKProtoStandaloneUserInfo key]
  -[NPKProtoStandaloneUserInfo copyWithZone:]


NPKProtoDownloadAllPaymentPassesRequest : PBRequest <NSCopying>
  // instance methods
  -[NPKProtoDownloadAllPaymentPassesRequest mergeFrom:]
  -[NPKProtoDownloadAllPaymentPassesRequest dictionaryRepresentation]
  -[NPKProtoDownloadAllPaymentPassesRequest writeTo:]
  -[NPKProtoDownloadAllPaymentPassesRequest isEqual:]
  -[NPKProtoDownloadAllPaymentPassesRequest copyTo:]
  -[NPKProtoDownloadAllPaymentPassesRequest readFrom:]
  -[NPKProtoDownloadAllPaymentPassesRequest copyWithZone:]


NPKProtoAccountWithIdentifierRequest : PBRequest <NSCopying>
 @property  NSString *accountIdentifier

  // instance methods
  -[NPKProtoAccountWithIdentifierRequest mergeFrom:]
  -[NPKProtoAccountWithIdentifierRequest .cxx_destruct]
  -[NPKProtoAccountWithIdentifierRequest dictionaryRepresentation]
  -[NPKProtoAccountWithIdentifierRequest writeTo:]
  -[NPKProtoAccountWithIdentifierRequest isEqual:]
  -[NPKProtoAccountWithIdentifierRequest copyTo:]
  -[NPKProtoAccountWithIdentifierRequest readFrom:]
  -[NPKProtoAccountWithIdentifierRequest accountIdentifier]
  -[NPKProtoAccountWithIdentifierRequest setAccountIdentifier:]
  -[NPKProtoAccountWithIdentifierRequest copyWithZone:]


NPKProtoPaymentWebServiceRegistrationRequest : PBRequest <NSCopying>
 @property  BOOL hasBrokerURLString
 @property  NSString *brokerURLString
 @property  BOOL hasReason
 @property  NSString *reason

  // instance methods
  -[NPKProtoPaymentWebServiceRegistrationRequest mergeFrom:]
  -[NPKProtoPaymentWebServiceRegistrationRequest hasReason]
  -[NPKProtoPaymentWebServiceRegistrationRequest .cxx_destruct]
  -[NPKProtoPaymentWebServiceRegistrationRequest dictionaryRepresentation]
  -[NPKProtoPaymentWebServiceRegistrationRequest writeTo:]
  -[NPKProtoPaymentWebServiceRegistrationRequest isEqual:]
  -[NPKProtoPaymentWebServiceRegistrationRequest copyTo:]
  -[NPKProtoPaymentWebServiceRegistrationRequest readFrom:]
  -[NPKProtoPaymentWebServiceRegistrationRequest reason]
  -[NPKProtoPaymentWebServiceRegistrationRequest setReason:]
  -[NPKProtoPaymentWebServiceRegistrationRequest copyWithZone:]
  -[NPKProtoPaymentWebServiceRegistrationRequest setBrokerURLString:]
  -[NPKProtoPaymentWebServiceRegistrationRequest hasBrokerURLString]
  -[NPKProtoPaymentWebServiceRegistrationRequest brokerURLString]


NPKPaymentProvisioningFlowStepContext : NSObject <NSSecureCoding>
 @property  NPKPaymentProvisioningFlowControllerRequestContext *requestContext
 @property  NSString *stepIdentifier
 @property  NSString *backStepIdentifier
 @property  BOOL allowsAddLater

  // class methods
  +[NPKPaymentProvisioningFlowStepContext supportsSecureCoding]

  // instance methods
  -[NPKPaymentProvisioningFlowStepContext initWithCoder:]
  -[NPKPaymentProvisioningFlowStepContext .cxx_destruct]
  -[NPKPaymentProvisioningFlowStepContext initWithRequestContext:]
  -[NPKPaymentProvisioningFlowStepContext stepIdentifier]
  -[NPKPaymentProvisioningFlowStepContext setStepIdentifier:]
  -[NPKPaymentProvisioningFlowStepContext requestContext]
  -[NPKPaymentProvisioningFlowStepContext encodeWithCoder:]
  -[NPKPaymentProvisioningFlowStepContext setBackStepIdentifier:]
  -[NPKPaymentProvisioningFlowStepContext setAllowsAddLater:]
  -[NPKPaymentProvisioningFlowStepContext backStepIdentifier]
  -[NPKPaymentProvisioningFlowStepContext allowsAddLater]
  -[NPKPaymentProvisioningFlowStepContext welcomeStepContext]
  -[NPKPaymentProvisioningFlowStepContext chooseFlowStepContext]
  -[NPKPaymentProvisioningFlowStepContext chooseProductStepContext]
  -[NPKPaymentProvisioningFlowStepContext chooseCredentialsStepContext]
  -[NPKPaymentProvisioningFlowStepContext digitalIssuanceAmountStepContext]
  -[NPKPaymentProvisioningFlowStepContext digitalIssuancePaymentStepContext]
  -[NPKPaymentProvisioningFlowStepContext moreInformationStepContext]
  -[NPKPaymentProvisioningFlowStepContext readerModeEntryStepContext]
  -[NPKPaymentProvisioningFlowStepContext readerModeIngestionStepContext]
  -[NPKPaymentProvisioningFlowStepContext manualEntryStepContext]
  -[NPKPaymentProvisioningFlowStepContext secondaryManualEntryStepContext]
  -[NPKPaymentProvisioningFlowStepContext localDeviceManualEntryStepContext]
  -[NPKPaymentProvisioningFlowStepContext localDeviceManualEntryProgressStepContext]
  -[NPKPaymentProvisioningFlowStepContext productDisambiguationStepContext]
  -[NPKPaymentProvisioningFlowStepContext passcodeUpgradeStepContext]
  -[NPKPaymentProvisioningFlowStepContext termsAndConditionsStepContext]
  -[NPKPaymentProvisioningFlowStepContext provisioningProgressStepContext]
  -[NPKPaymentProvisioningFlowStepContext provisioningResultStepContext]
  -[NPKPaymentProvisioningFlowStepContext _baseFlowStepDescription]
  -[NPKPaymentProvisioningFlowStepContext preconditionsStepContext]
  -[NPKPaymentProvisioningFlowStepContext verificationChannelsStepContext]
  -[NPKPaymentProvisioningFlowStepContext verificationFieldsStepContext]
  -[NPKPaymentProvisioningFlowStepContext verificationCodeStepContext]
  -[NPKPaymentProvisioningFlowStepContext getIssuerApplicationAddRequestStepContext]
  -[NPKPaymentProvisioningFlowStepContext chooseTransitProductStepContext]
  -[NPKPaymentProvisioningFlowStepContext chooseEMoneyProductStepContext]
  -[NPKPaymentProvisioningFlowStepContext appleBalanceAccountDetailsStepContext]


NPKPaymentProvisioningFlowControllerRequestContext : NSObject <NSSecureCoding>
 @property  NPKProtoStandaloneRequestHeader *requestHeader
 @property  NSString *currentStepIdentifier

  // class methods
  +[NPKPaymentProvisioningFlowControllerRequestContext supportsSecureCoding]

  // instance methods
  -[NPKPaymentProvisioningFlowControllerRequestContext initWithCoder:]
  -[NPKPaymentProvisioningFlowControllerRequestContext currentStepIdentifier]
  -[NPKPaymentProvisioningFlowControllerRequestContext .cxx_destruct]
  -[NPKPaymentProvisioningFlowControllerRequestContext encodeWithCoder:]
  -[NPKPaymentProvisioningFlowControllerRequestContext requestHeader]
  -[NPKPaymentProvisioningFlowControllerRequestContext initWithRequestHeader:]


NPKPaymentProvisioningFlowControllerPreconditionsStepContext : NPKPaymentProvisioningFlowStepContext
 @property  unsigned long preconditionsState

  // class methods
  +[NPKPaymentProvisioningFlowControllerPreconditionsStepContext supportsSecureCoding]

  // instance methods
  -[NPKPaymentProvisioningFlowControllerPreconditionsStepContext initWithCoder:]
  -[NPKPaymentProvisioningFlowControllerPreconditionsStepContext initWithRequestContext:]
  -[NPKPaymentProvisioningFlowControllerPreconditionsStepContext encodeWithCoder:]
  -[NPKPaymentProvisioningFlowControllerPreconditionsStepContext setPreconditionsState:]
  -[NPKPaymentProvisioningFlowControllerPreconditionsStepContext preconditionsState]


NPKPaymentProvisioningFlowControllerWelcomeStepContext : NPKPaymentProvisioningFlowStepContext
 @property  NSArray *heroImages
 @property  BOOL defaultImagesUsed

  // class methods
  +[NPKPaymentProvisioningFlowControllerWelcomeStepContext supportsSecureCoding]

  // instance methods
  -[NPKPaymentProvisioningFlowControllerWelcomeStepContext initWithCoder:]
  -[NPKPaymentProvisioningFlowControllerWelcomeStepContext .cxx_destruct]
  -[NPKPaymentProvisioningFlowControllerWelcomeStepContext initWithRequestContext:]
  -[NPKPaymentProvisioningFlowControllerWelcomeStepContext encodeWithCoder:]
  -[NPKPaymentProvisioningFlowControllerWelcomeStepContext heroImages]
  -[NPKPaymentProvisioningFlowControllerWelcomeStepContext setHeroImages:]
  -[NPKPaymentProvisioningFlowControllerWelcomeStepContext defaultImagesUsed]
  -[NPKPaymentProvisioningFlowControllerWelcomeStepContext setDefaultImagesUsed:]


NPKPaymentProvisioningFlowControllerChooseFlowStepContext : NPKPaymentProvisioningFlowStepContext
 @property  NSArray *sections

  // class methods
  +[NPKPaymentProvisioningFlowControllerChooseFlowStepContext supportsSecureCoding]

  // instance methods
  -[NPKPaymentProvisioningFlowControllerChooseFlowStepContext setSections:]
  -[NPKPaymentProvisioningFlowControllerChooseFlowStepContext sections]
  -[NPKPaymentProvisioningFlowControllerChooseFlowStepContext initWithCoder:]
  -[NPKPaymentProvisioningFlowControllerChooseFlowStepContext .cxx_destruct]
  -[NPKPaymentProvisioningFlowControllerChooseFlowStepContext initWithRequestContext:]
  -[NPKPaymentProvisioningFlowControllerChooseFlowStepContext encodeWithCoder:]


NPKPaymentProvisioningFlowControllerChooseProductStepContext : NPKPaymentProvisioningFlowStepContext
 @property  NSArray *products

  // class methods
  +[NPKPaymentProvisioningFlowControllerChooseProductStepContext supportsSecureCoding]

  // instance methods
  -[NPKPaymentProvisioningFlowControllerChooseProductStepContext initWithCoder:]
  -[NPKPaymentProvisioningFlowControllerChooseProductStepContext .cxx_destruct]
  -[NPKPaymentProvisioningFlowControllerChooseProductStepContext initWithRequestContext:]
  -[NPKPaymentProvisioningFlowControllerChooseProductStepContext products]
  -[NPKPaymentProvisioningFlowControllerChooseProductStepContext encodeWithCoder:]
  -[NPKPaymentProvisioningFlowControllerChooseProductStepContext setProducts:]


NPKPaymentProvisioningFlowControllerChooseCredentialsStepContext : NPKPaymentProvisioningFlowStepContext
 @property  NSDictionary *flowIdentifierToCredential
 @property  NSArray *flowIdentifiers
 @property  NSArray *credentials
 @property  BOOL allowsManualEntry
 @property  PKPaymentSetupProduct *product

  // class methods
  +[NPKPaymentProvisioningFlowControllerChooseCredentialsStepContext supportsSecureCoding]

  // instance methods
  -[NPKPaymentProvisioningFlowControllerChooseCredentialsStepContext initWithCoder:]
  -[NPKPaymentProvisioningFlowControllerChooseCredentialsStepContext .cxx_destruct]
  -[NPKPaymentProvisioningFlowControllerChooseCredentialsStepContext product]
  -[NPKPaymentProvisioningFlowControllerChooseCredentialsStepContext initWithRequestContext:]
  -[NPKPaymentProvisioningFlowControllerChooseCredentialsStepContext setProduct:]
  -[NPKPaymentProvisioningFlowControllerChooseCredentialsStepContext credentials]
  -[NPKPaymentProvisioningFlowControllerChooseCredentialsStepContext encodeWithCoder:]
  -[NPKPaymentProvisioningFlowControllerChooseCredentialsStepContext setCredentials:]
  -[NPKPaymentProvisioningFlowControllerChooseCredentialsStepContext allowsManualEntry]
  -[NPKPaymentProvisioningFlowControllerChooseCredentialsStepContext setAllowsManualEntry:]
  -[NPKPaymentProvisioningFlowControllerChooseCredentialsStepContext setFlowIdentifiers:]
  -[NPKPaymentProvisioningFlowControllerChooseCredentialsStepContext setFlowIdentifierToCredential:]
  -[NPKPaymentProvisioningFlowControllerChooseCredentialsStepContext flowIdentifiers]
  -[NPKPaymentProvisioningFlowControllerChooseCredentialsStepContext flowIdentifierToCredential]


NPKPaymentProvisioningFlowControllerDigitalIssuanceAmountStepContext : NPKPaymentProvisioningFlowStepContext
 @property  PKPaymentSetupProduct *product
 @property  BOOL allowsReaderModeEntry

  // class methods
  +[NPKPaymentProvisioningFlowControllerDigitalIssuanceAmountStepContext supportsSecureCoding]

  // instance methods
  -[NPKPaymentProvisioningFlowControllerDigitalIssuanceAmountStepContext initWithCoder:]
  -[NPKPaymentProvisioningFlowControllerDigitalIssuanceAmountStepContext .cxx_destruct]
  -[NPKPaymentProvisioningFlowControllerDigitalIssuanceAmountStepContext product]
  -[NPKPaymentProvisioningFlowControllerDigitalIssuanceAmountStepContext initWithRequestContext:]
  -[NPKPaymentProvisioningFlowControllerDigitalIssuanceAmountStepContext setProduct:]
  -[NPKPaymentProvisioningFlowControllerDigitalIssuanceAmountStepContext encodeWithCoder:]
  -[NPKPaymentProvisioningFlowControllerDigitalIssuanceAmountStepContext allowsReaderModeEntry]
  -[NPKPaymentProvisioningFlowControllerDigitalIssuanceAmountStepContext setAllowsReaderModeEntry:]


NPKPaymentProvisioningFlowControllerDigitalIssuancePaymentStepContext : NPKPaymentProvisioningFlowStepContext
 @property  PKPaymentSetupProduct *product

  // class methods
  +[NPKPaymentProvisioningFlowControllerDigitalIssuancePaymentStepContext supportsSecureCoding]

  // instance methods
  -[NPKPaymentProvisioningFlowControllerDigitalIssuancePaymentStepContext initWithCoder:]
  -[NPKPaymentProvisioningFlowControllerDigitalIssuancePaymentStepContext .cxx_destruct]
  -[NPKPaymentProvisioningFlowControllerDigitalIssuancePaymentStepContext product]
  -[NPKPaymentProvisioningFlowControllerDigitalIssuancePaymentStepContext initWithRequestContext:]
  -[NPKPaymentProvisioningFlowControllerDigitalIssuancePaymentStepContext setProduct:]
  -[NPKPaymentProvisioningFlowControllerDigitalIssuancePaymentStepContext encodeWithCoder:]


NPKPaymentProvisioningFlowControllerReaderModeEntryStepContext : NPKPaymentProvisioningFlowStepContext
 @property  NSString *title
 @property  NSString *subtitle
 @property  NSArray *setupFields
 @property  PKPaymentSetupProduct *product

  // class methods
  +[NPKPaymentProvisioningFlowControllerReaderModeEntryStepContext supportsSecureCoding]

  // instance methods
  -[NPKPaymentProvisioningFlowControllerReaderModeEntryStepContext initWithCoder:]
  -[NPKPaymentProvisioningFlowControllerReaderModeEntryStepContext setTitle:]
  -[NPKPaymentProvisioningFlowControllerReaderModeEntryStepContext .cxx_destruct]
  -[NPKPaymentProvisioningFlowControllerReaderModeEntryStepContext product]
  -[NPKPaymentProvisioningFlowControllerReaderModeEntryStepContext setSubtitle:]
  -[NPKPaymentProvisioningFlowControllerReaderModeEntryStepContext initWithRequestContext:]
  -[NPKPaymentProvisioningFlowControllerReaderModeEntryStepContext subtitle]
  -[NPKPaymentProvisioningFlowControllerReaderModeEntryStepContext setProduct:]
  -[NPKPaymentProvisioningFlowControllerReaderModeEntryStepContext title]
  -[NPKPaymentProvisioningFlowControllerReaderModeEntryStepContext encodeWithCoder:]
  -[NPKPaymentProvisioningFlowControllerReaderModeEntryStepContext setSetupFields:]
  -[NPKPaymentProvisioningFlowControllerReaderModeEntryStepContext setupFields]


NPKPaymentProvisioningFlowControllerReaderModeIngestionStepContext : NPKPaymentProvisioningFlowStepContext
 @property  NSURL *physicalCardImageURL
 @property  NSString *title
 @property  NSString *subtitle
 @property  unsigned long ingestionState
 @property  double ingestionProgress

  // class methods
  +[NPKPaymentProvisioningFlowControllerReaderModeIngestionStepContext supportsSecureCoding]

  // instance methods
  -[NPKPaymentProvisioningFlowControllerReaderModeIngestionStepContext initWithCoder:]
  -[NPKPaymentProvisioningFlowControllerReaderModeIngestionStepContext setTitle:]
  -[NPKPaymentProvisioningFlowControllerReaderModeIngestionStepContext .cxx_destruct]
  -[NPKPaymentProvisioningFlowControllerReaderModeIngestionStepContext setSubtitle:]
  -[NPKPaymentProvisioningFlowControllerReaderModeIngestionStepContext initWithRequestContext:]
  -[NPKPaymentProvisioningFlowControllerReaderModeIngestionStepContext subtitle]
  -[NPKPaymentProvisioningFlowControllerReaderModeIngestionStepContext title]
  -[NPKPaymentProvisioningFlowControllerReaderModeIngestionStepContext encodeWithCoder:]
  -[NPKPaymentProvisioningFlowControllerReaderModeIngestionStepContext ingestionState]
  -[NPKPaymentProvisioningFlowControllerReaderModeIngestionStepContext setIngestionState:]
  -[NPKPaymentProvisioningFlowControllerReaderModeIngestionStepContext ingestionProgress]
  -[NPKPaymentProvisioningFlowControllerReaderModeIngestionStepContext setIngestionProgress:]
  -[NPKPaymentProvisioningFlowControllerReaderModeIngestionStepContext physicalCardImageURL]
  -[NPKPaymentProvisioningFlowControllerReaderModeIngestionStepContext setPhysicalCardImageURL:]


NPKPaymentProvisioningFlowControllerManualEntryStepContext : NPKPaymentProvisioningFlowStepContext
 @property  BOOL cameraFirstProvisioningEnabled
 @property  NSArray *setupFields

  // class methods
  +[NPKPaymentProvisioningFlowControllerManualEntryStepContext supportsSecureCoding]

  // instance methods
  -[NPKPaymentProvisioningFlowControllerManualEntryStepContext initWithCoder:]
  -[NPKPaymentProvisioningFlowControllerManualEntryStepContext .cxx_destruct]
  -[NPKPaymentProvisioningFlowControllerManualEntryStepContext initWithRequestContext:]
  -[NPKPaymentProvisioningFlowControllerManualEntryStepContext encodeWithCoder:]
  -[NPKPaymentProvisioningFlowControllerManualEntryStepContext setCameraFirstProvisioningEnabled:]
  -[NPKPaymentProvisioningFlowControllerManualEntryStepContext setSetupFields:]
  -[NPKPaymentProvisioningFlowControllerManualEntryStepContext setupFields]
  -[NPKPaymentProvisioningFlowControllerManualEntryStepContext cameraFirstProvisioningEnabled]


NPKPaymentProvisioningFlowControllerSecondaryManualEntryStepContext : NPKPaymentProvisioningFlowControllerManualEntryStepContext
 @property  PKPaymentCredential *credential
 @property  BOOL allowsAddingDifferentCard

  // class methods
  +[NPKPaymentProvisioningFlowControllerSecondaryManualEntryStepContext supportsSecureCoding]

  // instance methods
  -[NPKPaymentProvisioningFlowControllerSecondaryManualEntryStepContext credential]
  -[NPKPaymentProvisioningFlowControllerSecondaryManualEntryStepContext initWithCoder:]
  -[NPKPaymentProvisioningFlowControllerSecondaryManualEntryStepContext .cxx_destruct]
  -[NPKPaymentProvisioningFlowControllerSecondaryManualEntryStepContext setCredential:]
  -[NPKPaymentProvisioningFlowControllerSecondaryManualEntryStepContext initWithRequestContext:]
  -[NPKPaymentProvisioningFlowControllerSecondaryManualEntryStepContext encodeWithCoder:]
  -[NPKPaymentProvisioningFlowControllerSecondaryManualEntryStepContext setAllowsAddingDifferentCard:]
  -[NPKPaymentProvisioningFlowControllerSecondaryManualEntryStepContext allowsAddingDifferentCard]


NPKPaymentProvisioningFlowControllerLocalDeviceManualEntryStepContext : NPKPaymentProvisioningFlowControllerSecondaryManualEntryStepContext
  // instance methods
  -[NPKPaymentProvisioningFlowControllerLocalDeviceManualEntryStepContext initWithRequestContext:]


NPKPaymentProvisioningFlowControllerLocalDeviceManualEntryProgressStepContext : NPKPaymentProvisioningFlowStepContext
 @property  BOOL numericEntryPending

  // instance methods
  -[NPKPaymentProvisioningFlowControllerLocalDeviceManualEntryProgressStepContext initWithRequestContext:]
  -[NPKPaymentProvisioningFlowControllerLocalDeviceManualEntryProgressStepContext setNumericEntryPending:]
  -[NPKPaymentProvisioningFlowControllerLocalDeviceManualEntryProgressStepContext numericEntryPending]


NPKPaymentProvisioningFlowControllerProductDisambiguationStepContext : NPKPaymentProvisioningFlowStepContext
 @property  NSArray *products

  // instance methods
  -[NPKPaymentProvisioningFlowControllerProductDisambiguationStepContext .cxx_destruct]
  -[NPKPaymentProvisioningFlowControllerProductDisambiguationStepContext initWithRequestContext:]
  -[NPKPaymentProvisioningFlowControllerProductDisambiguationStepContext products]
  -[NPKPaymentProvisioningFlowControllerProductDisambiguationStepContext setProducts:]


NPKPaymentProvisioningFlowControllerPasscodeUpgradeStepContext : NPKPaymentProvisioningFlowStepContext
  // instance methods
  -[NPKPaymentProvisioningFlowControllerPasscodeUpgradeStepContext initWithRequestContext:]


NPKPaymentProvisioningFlowControllerTermsAndConditionsStepContext : NPKPaymentProvisioningFlowStepContext
 @property  PKPaymentSetupProduct *product
 @property  NSURL *termsURL
 @property  BOOL allowNonSecureHTTP

  // instance methods
  -[NPKPaymentProvisioningFlowControllerTermsAndConditionsStepContext termsURL]
  -[NPKPaymentProvisioningFlowControllerTermsAndConditionsStepContext setTermsURL:]
  -[NPKPaymentProvisioningFlowControllerTermsAndConditionsStepContext .cxx_destruct]
  -[NPKPaymentProvisioningFlowControllerTermsAndConditionsStepContext product]
  -[NPKPaymentProvisioningFlowControllerTermsAndConditionsStepContext initWithRequestContext:]
  -[NPKPaymentProvisioningFlowControllerTermsAndConditionsStepContext setProduct:]
  -[NPKPaymentProvisioningFlowControllerTermsAndConditionsStepContext setAllowNonSecureHTTP:]
  -[NPKPaymentProvisioningFlowControllerTermsAndConditionsStepContext allowNonSecureHTTP]


NPKPaymentProvisioningFlowControllerProvisioningProgressStepContext : NPKPaymentProvisioningFlowStepContext
 @property  PKPaymentSetupProduct *product
 @property  NSString *localizedProgressDescription

  // instance methods
  -[NPKPaymentProvisioningFlowControllerProvisioningProgressStepContext .cxx_destruct]
  -[NPKPaymentProvisioningFlowControllerProvisioningProgressStepContext product]
  -[NPKPaymentProvisioningFlowControllerProvisioningProgressStepContext initWithRequestContext:]
  -[NPKPaymentProvisioningFlowControllerProvisioningProgressStepContext localizedProgressDescription]
  -[NPKPaymentProvisioningFlowControllerProvisioningProgressStepContext setProduct:]
  -[NPKPaymentProvisioningFlowControllerProvisioningProgressStepContext setLocalizedProgressDescription:]


NPKPaymentProvisioningFlowControllerMoreInformationStepContext : NPKPaymentProvisioningFlowStepContext
 @property  NSArray *moreInfoItems
 @property  PKPaymentPass *paymentPass

  // instance methods
  -[NPKPaymentProvisioningFlowControllerMoreInformationStepContext paymentPass]
  -[NPKPaymentProvisioningFlowControllerMoreInformationStepContext .cxx_destruct]
  -[NPKPaymentProvisioningFlowControllerMoreInformationStepContext initWithRequestContext:]
  -[NPKPaymentProvisioningFlowControllerMoreInformationStepContext setPaymentPass:]
  -[NPKPaymentProvisioningFlowControllerMoreInformationStepContext moreInfoItems]
  -[NPKPaymentProvisioningFlowControllerMoreInformationStepContext setMoreInfoItems:]


NPKPaymentProvisioningFlowControllerProvisioningResultStepContext : NPKPaymentProvisioningFlowStepContext
 @property  BOOL cardAdded
 @property  PKPaymentPass *provisionedPass
 @property  NSError *error

  // instance methods
  -[NPKPaymentProvisioningFlowControllerProvisioningResultStepContext .cxx_destruct]
  -[NPKPaymentProvisioningFlowControllerProvisioningResultStepContext initWithRequestContext:]
  -[NPKPaymentProvisioningFlowControllerProvisioningResultStepContext provisionedPass]
  -[NPKPaymentProvisioningFlowControllerProvisioningResultStepContext setError:]
  -[NPKPaymentProvisioningFlowControllerProvisioningResultStepContext error]
  -[NPKPaymentProvisioningFlowControllerProvisioningResultStepContext setProvisionedPass:]
  -[NPKPaymentProvisioningFlowControllerProvisioningResultStepContext setCardAdded:]
  -[NPKPaymentProvisioningFlowControllerProvisioningResultStepContext cardAdded]


NPKPaymentProvisioningFlowControllerIssuerVerificationChannelsStepContext : NPKPaymentProvisioningFlowStepContext
 @property  PKPaymentPass *paymentPass
 @property  NSArray *verificationChannels

  // instance methods
  -[NPKPaymentProvisioningFlowControllerIssuerVerificationChannelsStepContext paymentPass]
  -[NPKPaymentProvisioningFlowControllerIssuerVerificationChannelsStepContext .cxx_destruct]
  -[NPKPaymentProvisioningFlowControllerIssuerVerificationChannelsStepContext initWithRequestContext:]
  -[NPKPaymentProvisioningFlowControllerIssuerVerificationChannelsStepContext setPaymentPass:]
  -[NPKPaymentProvisioningFlowControllerIssuerVerificationChannelsStepContext verificationChannels]
  -[NPKPaymentProvisioningFlowControllerIssuerVerificationChannelsStepContext setVerificationChannels:]


NPKPaymentProvisioningFlowControllerIssuerVerificationFieldsStepContext : NPKPaymentProvisioningFlowStepContext
 @property  PKPaymentPass *paymentPass
 @property  NSArray *verificationFields

  // instance methods
  -[NPKPaymentProvisioningFlowControllerIssuerVerificationFieldsStepContext paymentPass]
  -[NPKPaymentProvisioningFlowControllerIssuerVerificationFieldsStepContext .cxx_destruct]
  -[NPKPaymentProvisioningFlowControllerIssuerVerificationFieldsStepContext initWithRequestContext:]
  -[NPKPaymentProvisioningFlowControllerIssuerVerificationFieldsStepContext setPaymentPass:]
  -[NPKPaymentProvisioningFlowControllerIssuerVerificationFieldsStepContext setVerificationFields:]
  -[NPKPaymentProvisioningFlowControllerIssuerVerificationFieldsStepContext verificationFields]


NPKPaymentProvisioningFlowControllerIssuerVerificationCodeStepContext : NPKPaymentProvisioningFlowStepContext
 @property  PKPaymentPass *paymentPass
 @property  PKVerificationChannel *verificationChannel

  // instance methods
  -[NPKPaymentProvisioningFlowControllerIssuerVerificationCodeStepContext paymentPass]
  -[NPKPaymentProvisioningFlowControllerIssuerVerificationCodeStepContext .cxx_destruct]
  -[NPKPaymentProvisioningFlowControllerIssuerVerificationCodeStepContext initWithRequestContext:]
  -[NPKPaymentProvisioningFlowControllerIssuerVerificationCodeStepContext setPaymentPass:]
  -[NPKPaymentProvisioningFlowControllerIssuerVerificationCodeStepContext verificationChannel]
  -[NPKPaymentProvisioningFlowControllerIssuerVerificationCodeStepContext setVerificationChannel:]


NPKPaymentProvisioningFlowControllerGetIssuerApplicationAddRequestStepContext : NPKPaymentProvisioningFlowStepContext
 @property  NSArray *certificates
 @property  NSData *nonce
 @property  NSData *nonceSignature

  // instance methods
  -[NPKPaymentProvisioningFlowControllerGetIssuerApplicationAddRequestStepContext certificates]
  -[NPKPaymentProvisioningFlowControllerGetIssuerApplicationAddRequestStepContext setCertificates:]
  -[NPKPaymentProvisioningFlowControllerGetIssuerApplicationAddRequestStepContext .cxx_destruct]
  -[NPKPaymentProvisioningFlowControllerGetIssuerApplicationAddRequestStepContext initWithRequestContext:]
  -[NPKPaymentProvisioningFlowControllerGetIssuerApplicationAddRequestStepContext setNonce:]
  -[NPKPaymentProvisioningFlowControllerGetIssuerApplicationAddRequestStepContext nonceSignature]
  -[NPKPaymentProvisioningFlowControllerGetIssuerApplicationAddRequestStepContext setNonceSignature:]
  -[NPKPaymentProvisioningFlowControllerGetIssuerApplicationAddRequestStepContext nonce]


NPKPaymentProvisioningFlowControllerAppleBalanceAccountDetailsStepContext : NPKPaymentProvisioningFlowStepContext
 @property  PKCurrencyAmount *balance
 @property  NSString *appleID

  // instance methods
  -[NPKPaymentProvisioningFlowControllerAppleBalanceAccountDetailsStepContext setAppleID:]
  -[NPKPaymentProvisioningFlowControllerAppleBalanceAccountDetailsStepContext appleID]
  -[NPKPaymentProvisioningFlowControllerAppleBalanceAccountDetailsStepContext .cxx_destruct]
  -[NPKPaymentProvisioningFlowControllerAppleBalanceAccountDetailsStepContext balance]
  -[NPKPaymentProvisioningFlowControllerAppleBalanceAccountDetailsStepContext initWithRequestContext:]
  -[NPKPaymentProvisioningFlowControllerAppleBalanceAccountDetailsStepContext setBalance:]


NPKIDVRemoteDeviceProtoCredentialPropertiesRequest : PBRequest <NSCopying>
 @property  BOOL hasCredentialIdentifier
 @property  NSString *credentialIdentifier
 @property  NSMutableArray *configuredPartitionsIdentifiers

  // class methods
  +[NPKIDVRemoteDeviceProtoCredentialPropertiesRequest configuredPartitionsIdentifiersType]

  // instance methods
  -[NPKIDVRemoteDeviceProtoCredentialPropertiesRequest mergeFrom:]
  -[NPKIDVRemoteDeviceProtoCredentialPropertiesRequest .cxx_destruct]
  -[NPKIDVRemoteDeviceProtoCredentialPropertiesRequest dictionaryRepresentation]
  -[NPKIDVRemoteDeviceProtoCredentialPropertiesRequest writeTo:]
  -[NPKIDVRemoteDeviceProtoCredentialPropertiesRequest credentialIdentifier]
  -[NPKIDVRemoteDeviceProtoCredentialPropertiesRequest setCredentialIdentifier:]
  -[NPKIDVRemoteDeviceProtoCredentialPropertiesRequest isEqual:]
  -[NPKIDVRemoteDeviceProtoCredentialPropertiesRequest copyTo:]
  -[NPKIDVRemoteDeviceProtoCredentialPropertiesRequest readFrom:]
  -[NPKIDVRemoteDeviceProtoCredentialPropertiesRequest copyWithZone:]
  -[NPKIDVRemoteDeviceProtoCredentialPropertiesRequest hasCredentialIdentifier]
  -[NPKIDVRemoteDeviceProtoCredentialPropertiesRequest setConfiguredPartitionsIdentifiers:]
  -[NPKIDVRemoteDeviceProtoCredentialPropertiesRequest addConfiguredPartitionsIdentifiers:]
  -[NPKIDVRemoteDeviceProtoCredentialPropertiesRequest configuredPartitionsIdentifiersCount]
  -[NPKIDVRemoteDeviceProtoCredentialPropertiesRequest clearConfiguredPartitionsIdentifiers]
  -[NPKIDVRemoteDeviceProtoCredentialPropertiesRequest configuredPartitionsIdentifiersAtIndex:]
  -[NPKIDVRemoteDeviceProtoCredentialPropertiesRequest configuredPartitionsIdentifiers]


NPKProtoPasscodeUpgradeFlowApplyPasscodeRestrictionsResponse : PBCodable <NSCopying>
 @property  BOOL hasSuccess
 @property  BOOL success
 @property  BOOL hasErrorData
 @property  NSData *errorData

  // instance methods
  -[NPKProtoPasscodeUpgradeFlowApplyPasscodeRestrictionsResponse setSuccess:]
  -[NPKProtoPasscodeUpgradeFlowApplyPasscodeRestrictionsResponse success]
  -[NPKProtoPasscodeUpgradeFlowApplyPasscodeRestrictionsResponse mergeFrom:]
  -[NPKProtoPasscodeUpgradeFlowApplyPasscodeRestrictionsResponse .cxx_destruct]
  -[NPKProtoPasscodeUpgradeFlowApplyPasscodeRestrictionsResponse hasSuccess]
  -[NPKProtoPasscodeUpgradeFlowApplyPasscodeRestrictionsResponse dictionaryRepresentation]
  -[NPKProtoPasscodeUpgradeFlowApplyPasscodeRestrictionsResponse writeTo:]
  -[NPKProtoPasscodeUpgradeFlowApplyPasscodeRestrictionsResponse setHasSuccess:]
  -[NPKProtoPasscodeUpgradeFlowApplyPasscodeRestrictionsResponse isEqual:]
  -[NPKProtoPasscodeUpgradeFlowApplyPasscodeRestrictionsResponse copyTo:]
  -[NPKProtoPasscodeUpgradeFlowApplyPasscodeRestrictionsResponse readFrom:]
  -[NPKProtoPasscodeUpgradeFlowApplyPasscodeRestrictionsResponse copyWithZone:]
  -[NPKProtoPasscodeUpgradeFlowApplyPasscodeRestrictionsResponse errorData]
  -[NPKProtoPasscodeUpgradeFlowApplyPasscodeRestrictionsResponse hasErrorData]
  -[NPKProtoPasscodeUpgradeFlowApplyPasscodeRestrictionsResponse setErrorData:]


NPKProtoDeleteKeyMaterialForSubCredentialIdRequest : PBRequest <NSCopying>
 @property  BOOL hasCredentialIdentifier
 @property  NSString *credentialIdentifier

  // instance methods
  -[NPKProtoDeleteKeyMaterialForSubCredentialIdRequest mergeFrom:]
  -[NPKProtoDeleteKeyMaterialForSubCredentialIdRequest .cxx_destruct]
  -[NPKProtoDeleteKeyMaterialForSubCredentialIdRequest dictionaryRepresentation]
  -[NPKProtoDeleteKeyMaterialForSubCredentialIdRequest writeTo:]
  -[NPKProtoDeleteKeyMaterialForSubCredentialIdRequest credentialIdentifier]
  -[NPKProtoDeleteKeyMaterialForSubCredentialIdRequest setCredentialIdentifier:]
  -[NPKProtoDeleteKeyMaterialForSubCredentialIdRequest isEqual:]
  -[NPKProtoDeleteKeyMaterialForSubCredentialIdRequest copyTo:]
  -[NPKProtoDeleteKeyMaterialForSubCredentialIdRequest readFrom:]
  -[NPKProtoDeleteKeyMaterialForSubCredentialIdRequest copyWithZone:]
  -[NPKProtoDeleteKeyMaterialForSubCredentialIdRequest hasCredentialIdentifier]


NPKFakePaymentSession : NPKQuickPaymentSession <PKFieldDetectorObserver>
 @property  PKPass *ourCurrentPass
 @property  NSDictionary *ourVasPasses
 @property  NSObject<OS_dispatch_queue> *ourCallbackQueue
 @property  NSObject<OS_dispatch_queue> *ourInternalQueue
 @property  BOOL ourConfirmed
 @property  BOOL ourInServiceMode
 @property  BOOL ourPerformedFirstActivation
 @property  NSObject<OS_dispatch_source> *timeoutTimer
 @property  PKFieldDetector *fieldDetector
 @property  BOOL invalidated
 @property  unsigned long changeCardToken
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NPKFakePaymentSession setTimeoutTimer:]
  -[NPKFakePaymentSession timeoutTimer]
  -[NPKFakePaymentSession .cxx_destruct]
  -[NPKFakePaymentSession setCredential:]
  -[NPKFakePaymentSession setInvalidated:]
  -[NPKFakePaymentSession fieldDetectorDidEnterField:withProperties:]
  -[NPKFakePaymentSession initWithQueue:]
  -[NPKFakePaymentSession startSession]
  -[NPKFakePaymentSession dealloc]
  -[NPKFakePaymentSession invalidated]
  -[NPKFakePaymentSession sessionStarted]
  -[NPKFakePaymentSession vasPasses]
  -[NPKFakePaymentSession setCurrentPass:]
  -[NPKFakePaymentSession setVasPasses:]
  -[NPKFakePaymentSession setDeferAuthorization:]
  -[NPKFakePaymentSession currentPass]
  -[NPKFakePaymentSession inServiceMode]
  -[NPKFakePaymentSession setInServiceMode:]
  -[NPKFakePaymentSession confirmSessionExpectingCredential:]
  -[NPKFakePaymentSession deactivateSessionWithCompletion:]
  -[NPKFakePaymentSession _handleTimeoutTimer]
  -[NPKFakePaymentSession _setTimeoutTimer]
  -[NPKFakePaymentSession _handleTransactionCompleteDarwinNotification]
  -[NPKFakePaymentSession ourInternalQueue]
  -[NPKFakePaymentSession setOurCurrentPass:]
  -[NPKFakePaymentSession ourCallbackQueue]
  -[NPKFakePaymentSession _scheduleDidActivateEventForPass:]
  -[NPKFakePaymentSession ourCurrentPass]
  -[NPKFakePaymentSession setOurVasPasses:]
  -[NPKFakePaymentSession _handleSessionHasCredentialIfNecessaryWithCurrentPass:]
  -[NPKFakePaymentSession ourVasPasses]
  -[NPKFakePaymentSession setOurInServiceMode:]
  -[NPKFakePaymentSession ourInServiceMode]
  -[NPKFakePaymentSession _sendTransactionCompleteToDelegate]
  -[NPKFakePaymentSession ourConfirmed]
  -[NPKFakePaymentSession setOurConfirmed:]
  -[NPKFakePaymentSession changeCardToken]
  -[NPKFakePaymentSession setChangeCardToken:]
  -[NPKFakePaymentSession ourPerformedFirstActivation]
  -[NPKFakePaymentSession setOurPerformedFirstActivation:]
  -[NPKFakePaymentSession deferAuthorization]
  -[NPKFakePaymentSession setOurCallbackQueue:]
  -[NPKFakePaymentSession setOurInternalQueue:]
  -[NPKFakePaymentSession fieldDetector]
  -[NPKFakePaymentSession setFieldDetector:]


NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationFieldsRequest : PBRequest <NSCopying>
 @property  NPKProtoStandaloneRequestHeader *requestHeader
 @property  NSMutableArray *verificationFields

  // class methods
  +[NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationFieldsRequest verificationFieldsType]

  // instance methods
  -[NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationFieldsRequest mergeFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationFieldsRequest .cxx_destruct]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationFieldsRequest dictionaryRepresentation]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationFieldsRequest writeTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationFieldsRequest isEqual:]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationFieldsRequest copyTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationFieldsRequest readFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationFieldsRequest copyWithZone:]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationFieldsRequest requestHeader]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationFieldsRequest setRequestHeader:]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationFieldsRequest setVerificationFields:]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationFieldsRequest verificationFields]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationFieldsRequest addVerificationFields:]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationFieldsRequest verificationFieldsCount]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationFieldsRequest clearVerificationFields]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationFieldsRequest verificationFieldsAtIndex:]


NPKIDVRemoteDeviceProtoEstablishPrearmTrustRequest : PBRequest <NSCopying>
 @property  BOOL hasTrustData
 @property  NSData *trustData

  // instance methods
  -[NPKIDVRemoteDeviceProtoEstablishPrearmTrustRequest mergeFrom:]
  -[NPKIDVRemoteDeviceProtoEstablishPrearmTrustRequest .cxx_destruct]
  -[NPKIDVRemoteDeviceProtoEstablishPrearmTrustRequest dictionaryRepresentation]
  -[NPKIDVRemoteDeviceProtoEstablishPrearmTrustRequest writeTo:]
  -[NPKIDVRemoteDeviceProtoEstablishPrearmTrustRequest isEqual:]
  -[NPKIDVRemoteDeviceProtoEstablishPrearmTrustRequest copyTo:]
  -[NPKIDVRemoteDeviceProtoEstablishPrearmTrustRequest readFrom:]
  -[NPKIDVRemoteDeviceProtoEstablishPrearmTrustRequest copyWithZone:]
  -[NPKIDVRemoteDeviceProtoEstablishPrearmTrustRequest setTrustData:]
  -[NPKIDVRemoteDeviceProtoEstablishPrearmTrustRequest hasTrustData]
  -[NPKIDVRemoteDeviceProtoEstablishPrearmTrustRequest trustData]


NPKProtoAvailableHomeKeyPassesResponse : PBCodable <NSCopying>
 @property  NSMutableArray *passesDatas
 @property  BOOL hasErrorData
 @property  NSData *errorData

  // class methods
  +[NPKProtoAvailableHomeKeyPassesResponse passesDataType]

  // instance methods
  -[NPKProtoAvailableHomeKeyPassesResponse mergeFrom:]
  -[NPKProtoAvailableHomeKeyPassesResponse .cxx_destruct]
  -[NPKProtoAvailableHomeKeyPassesResponse dictionaryRepresentation]
  -[NPKProtoAvailableHomeKeyPassesResponse writeTo:]
  -[NPKProtoAvailableHomeKeyPassesResponse isEqual:]
  -[NPKProtoAvailableHomeKeyPassesResponse copyTo:]
  -[NPKProtoAvailableHomeKeyPassesResponse readFrom:]
  -[NPKProtoAvailableHomeKeyPassesResponse copyWithZone:]
  -[NPKProtoAvailableHomeKeyPassesResponse errorData]
  -[NPKProtoAvailableHomeKeyPassesResponse hasErrorData]
  -[NPKProtoAvailableHomeKeyPassesResponse setErrorData:]
  -[NPKProtoAvailableHomeKeyPassesResponse addPassesData:]
  -[NPKProtoAvailableHomeKeyPassesResponse passesDatasCount]
  -[NPKProtoAvailableHomeKeyPassesResponse clearPassesDatas]
  -[NPKProtoAvailableHomeKeyPassesResponse passesDataAtIndex:]
  -[NPKProtoAvailableHomeKeyPassesResponse passesDatas]
  -[NPKProtoAvailableHomeKeyPassesResponse setPassesDatas:]


NPKIDVRemoteDeviceProtoCreateCredentialRequest : PBRequest <NSCopying>
 @property  BOOL hasPartitionIdentifier
 @property  NSString *partitionIdentifier
 @property  BOOL hasCredentialOptionsData
 @property  NSData *credentialOptionsData

  // instance methods
  -[NPKIDVRemoteDeviceProtoCreateCredentialRequest mergeFrom:]
  -[NPKIDVRemoteDeviceProtoCreateCredentialRequest .cxx_destruct]
  -[NPKIDVRemoteDeviceProtoCreateCredentialRequest dictionaryRepresentation]
  -[NPKIDVRemoteDeviceProtoCreateCredentialRequest writeTo:]
  -[NPKIDVRemoteDeviceProtoCreateCredentialRequest isEqual:]
  -[NPKIDVRemoteDeviceProtoCreateCredentialRequest copyTo:]
  -[NPKIDVRemoteDeviceProtoCreateCredentialRequest readFrom:]
  -[NPKIDVRemoteDeviceProtoCreateCredentialRequest copyWithZone:]
  -[NPKIDVRemoteDeviceProtoCreateCredentialRequest setPartitionIdentifier:]
  -[NPKIDVRemoteDeviceProtoCreateCredentialRequest setCredentialOptionsData:]
  -[NPKIDVRemoteDeviceProtoCreateCredentialRequest hasPartitionIdentifier]
  -[NPKIDVRemoteDeviceProtoCreateCredentialRequest hasCredentialOptionsData]
  -[NPKIDVRemoteDeviceProtoCreateCredentialRequest partitionIdentifier]
  -[NPKIDVRemoteDeviceProtoCreateCredentialRequest credentialOptionsData]


NPKProtoStandaloneImageSize : PBCodable <NSCopying>
 @property  int width
 @property  int height

  // instance methods
  -[NPKProtoStandaloneImageSize width]
  -[NPKProtoStandaloneImageSize mergeFrom:]
  -[NPKProtoStandaloneImageSize setWidth:]
  -[NPKProtoStandaloneImageSize dictionaryRepresentation]
  -[NPKProtoStandaloneImageSize writeTo:]
  -[NPKProtoStandaloneImageSize setHeight:]
  -[NPKProtoStandaloneImageSize height]
  -[NPKProtoStandaloneImageSize isEqual:]
  -[NPKProtoStandaloneImageSize copyTo:]
  -[NPKProtoStandaloneImageSize readFrom:]
  -[NPKProtoStandaloneImageSize copyWithZone:]


NPKProtoCompanionMigratedResponse : PBCodable <NSCopying>
 @property  BOOL hasPending
 @property  BOOL pending
 @property  BOOL hasSuccess
 @property  BOOL success
 @property  BOOL hasErrorData
 @property  NSData *errorData
 @property  BOOL hasPaymentWebServiceContextData
 @property  NSData *paymentWebServiceContextData
 @property  BOOL hasPeerPaymentWebServiceContextData
 @property  NSData *peerPaymentWebServiceContextData
 @property  BOOL hasPeerPaymentAccountData
 @property  NSData *peerPaymentAccountData

  // instance methods
  -[NPKProtoCompanionMigratedResponse setSuccess:]
  -[NPKProtoCompanionMigratedResponse success]
  -[NPKProtoCompanionMigratedResponse pending]
  -[NPKProtoCompanionMigratedResponse mergeFrom:]
  -[NPKProtoCompanionMigratedResponse setPending:]
  -[NPKProtoCompanionMigratedResponse .cxx_destruct]
  -[NPKProtoCompanionMigratedResponse hasSuccess]
  -[NPKProtoCompanionMigratedResponse dictionaryRepresentation]
  -[NPKProtoCompanionMigratedResponse writeTo:]
  -[NPKProtoCompanionMigratedResponse setHasSuccess:]
  -[NPKProtoCompanionMigratedResponse isEqual:]
  -[NPKProtoCompanionMigratedResponse copyTo:]
  -[NPKProtoCompanionMigratedResponse readFrom:]
  -[NPKProtoCompanionMigratedResponse copyWithZone:]
  -[NPKProtoCompanionMigratedResponse errorData]
  -[NPKProtoCompanionMigratedResponse hasErrorData]
  -[NPKProtoCompanionMigratedResponse setErrorData:]
  -[NPKProtoCompanionMigratedResponse setHasPending:]
  -[NPKProtoCompanionMigratedResponse hasPending]
  -[NPKProtoCompanionMigratedResponse setPeerPaymentWebServiceContextData:]
  -[NPKProtoCompanionMigratedResponse setPeerPaymentAccountData:]
  -[NPKProtoCompanionMigratedResponse hasPeerPaymentWebServiceContextData]
  -[NPKProtoCompanionMigratedResponse hasPeerPaymentAccountData]
  -[NPKProtoCompanionMigratedResponse peerPaymentWebServiceContextData]
  -[NPKProtoCompanionMigratedResponse peerPaymentAccountData]
  -[NPKProtoCompanionMigratedResponse setPaymentWebServiceContextData:]
  -[NPKProtoCompanionMigratedResponse hasPaymentWebServiceContextData]
  -[NPKProtoCompanionMigratedResponse paymentWebServiceContextData]


NPKPeerPaymentNumberFormatter : NSObject
 @property  NSString *currencyCode

  // instance methods
  -[NPKPeerPaymentNumberFormatter currencySymbol]
  -[NPKPeerPaymentNumberFormatter .cxx_destruct]
  -[NPKPeerPaymentNumberFormatter currencyCode]
  -[NPKPeerPaymentNumberFormatter stringFromNumber:]
  -[NPKPeerPaymentNumberFormatter init]
  -[NPKPeerPaymentNumberFormatter setCurrencyCode:]
  -[NPKPeerPaymentNumberFormatter initWithCurrencyCode:]


NPKProvisioningServiceOutstandingRequest : NSObject
 @property  NSString *messageIdentifier
 @property  id completionHandler
 @property  @? errorHandler
 @property  @? timeoutHandler
 @property  NSObject<OS_dispatch_source> *timeoutTimer
 @property  NSObject<OS_dispatch_queue> *timeoutQueue

  // instance methods
  -[NPKProvisioningServiceOutstandingRequest setTimeoutTimer:]
  -[NPKProvisioningServiceOutstandingRequest timeoutTimer]
  -[NPKProvisioningServiceOutstandingRequest .cxx_destruct]
  -[NPKProvisioningServiceOutstandingRequest setMessageIdentifier:]
  -[NPKProvisioningServiceOutstandingRequest setErrorHandler:]
  -[NPKProvisioningServiceOutstandingRequest timeoutHandler]
  -[NPKProvisioningServiceOutstandingRequest errorHandler]
  -[NPKProvisioningServiceOutstandingRequest setCompletionHandler:]
  -[NPKProvisioningServiceOutstandingRequest messageIdentifier]
  -[NPKProvisioningServiceOutstandingRequest completionHandler]
  -[NPKProvisioningServiceOutstandingRequest setTimeoutHandler:]
  -[NPKProvisioningServiceOutstandingRequest setOrResetCleanupTimer]
  -[NPKProvisioningServiceOutstandingRequest invalidateCleanupTimer]
  -[NPKProvisioningServiceOutstandingRequest setTimeoutQueue:]
  -[NPKProvisioningServiceOutstandingRequest timeoutQueue]


NPKContinuityCoordinator : NSObject
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSUserActivity *provisionPassUserActivity
 @property  NSUserActivity *getPaymentPassesUserActivity
 @property  NSUserActivity *passListUserActivity
 @property  NSUserActivity *individualPassUserActivity
 @property  NSUserActivity *setUpPeerPaymentUserActivity
 @property  NSUserActivity *viewPeerPaymentUserActivity
 @property  NSUserActivity *currentUserActivity

  // class methods
  +[NPKContinuityCoordinator sharedContinuityCoordinator]

  // instance methods
  -[NPKContinuityCoordinator .cxx_destruct]
  -[NPKContinuityCoordinator currentUserActivity]
  -[NPKContinuityCoordinator setCurrentUserActivity:]
  -[NPKContinuityCoordinator init]
  -[NPKContinuityCoordinator setQueue:]
  -[NPKContinuityCoordinator queue]
  -[NPKContinuityCoordinator _init]
  -[NPKContinuityCoordinator dealloc]
  -[NPKContinuityCoordinator passListUserActivity]
  -[NPKContinuityCoordinator setPassListUserActivity:]
  -[NPKContinuityCoordinator _saveUserActivity:]
  -[NPKContinuityCoordinator provisionPassUserActivity]
  -[NPKContinuityCoordinator _skeletonBridgeUserActivity]
  -[NPKContinuityCoordinator setProvisionPassUserActivity:]
  -[NPKContinuityCoordinator individualPassUserActivity]
  -[NPKContinuityCoordinator setIndividualPassUserActivity:]
  -[NPKContinuityCoordinator getPaymentPassesUserActivity]
  -[NPKContinuityCoordinator setGetPaymentPassesUserActivity:]
  -[NPKContinuityCoordinator setUpPeerPaymentUserActivity]
  -[NPKContinuityCoordinator setSetUpPeerPaymentUserActivity:]
  -[NPKContinuityCoordinator viewPeerPaymentUserActivity]
  -[NPKContinuityCoordinator setViewPeerPaymentUserActivity:]
  -[NPKContinuityCoordinator userViewingPassList]
  -[NPKContinuityCoordinator userViewingPassWithUniqueID:isPaymentPass:]
  -[NPKContinuityCoordinator userNeedsToProvisionPassWithUniqueID:]
  -[NPKContinuityCoordinator userNeedsPaymentPasses]
  -[NPKContinuityCoordinator userNeedsToSetUpPeerPayment]
  -[NPKContinuityCoordinator userNeedsToViewPeerPaymentForHandle:]
  -[NPKContinuityCoordinator userActivityForPassWithUniqueID:]
  -[NPKContinuityCoordinator invalidateAllActivities]


NPKAssertionManager : NSObject
 @property  NSHashTable *acquiredAssertions

  // class methods
  +[NPKAssertionManager sharedManager]

  // instance methods
  -[NPKAssertionManager .cxx_destruct]
  -[NPKAssertionManager removeAssertion:]
  -[NPKAssertionManager init]
  -[NPKAssertionManager addAssertion:]
  -[NPKAssertionManager _errorWithUnderlyingError:]
  -[NPKAssertionManager acquiredAssertions]
  -[NPKAssertionManager acquiredAssertionWithType:]
  -[NPKAssertionManager _queue_acquireAssertionWithType:reason:completion:]
  -[NPKAssertionManager _queue_invalidateAssertionWithType:completion:]
  -[NPKAssertionManager containsAssertionWithType:]
  -[NPKAssertionManager acquireAssertionWithType:reason:completion:]
  -[NPKAssertionManager invalidateAssertionWithType:completion:]
  -[NPKAssertionManager setAcquiredAssertions:]


NPKProtoProvisioningDataRequest : PBRequest <NSCopying>
 @property  BOOL hasIncludeDeviceMetadata
 @property  BOOL includeDeviceMetadata

  // instance methods
  -[NPKProtoProvisioningDataRequest mergeFrom:]
  -[NPKProtoProvisioningDataRequest dictionaryRepresentation]
  -[NPKProtoProvisioningDataRequest writeTo:]
  -[NPKProtoProvisioningDataRequest isEqual:]
  -[NPKProtoProvisioningDataRequest copyTo:]
  -[NPKProtoProvisioningDataRequest readFrom:]
  -[NPKProtoProvisioningDataRequest copyWithZone:]
  -[NPKProtoProvisioningDataRequest setIncludeDeviceMetadata:]
  -[NPKProtoProvisioningDataRequest setHasIncludeDeviceMetadata:]
  -[NPKProtoProvisioningDataRequest hasIncludeDeviceMetadata]
  -[NPKProtoProvisioningDataRequest includeDeviceMetadata]


NPKOutstandingAssertionStatusUpdater : NPKIDSHeartbeat
 @property  NSUUID *assertionUUID
 @property  int assertType

  // instance methods
  -[NPKOutstandingAssertionStatusUpdater .cxx_destruct]
  -[NPKOutstandingAssertionStatusUpdater assertionUUID]
  -[NPKOutstandingAssertionStatusUpdater setAssertionUUID:]
  -[NPKOutstandingAssertionStatusUpdater assertType]
  -[NPKOutstandingAssertionStatusUpdater setAssertType:]


NPKTargetDeviceAssertionManager : NSObject
 @property  NSMutableDictionary *outstandingAssertionStatusUpdaters
 @property  NSMutableDictionary *assertTypesUUIDsMap
 @property  IDSService *transportationService

  // instance methods
  -[NPKTargetDeviceAssertionManager .cxx_destruct]
  -[NPKTargetDeviceAssertionManager _sendAssertionRequest:]
  -[NPKTargetDeviceAssertionManager _outstandingAssertionStatusUpdaterWithRequest:assertionType:assertionUUID:]
  -[NPKTargetDeviceAssertionManager _addOutstandingAssertionStatusUpdater:withAssertType:]
  -[NPKTargetDeviceAssertionManager _removeOutstandingAssertionStatusUpdaterWithUUID:]
  -[NPKTargetDeviceAssertionManager assertTypesUUIDsMap]
  -[NPKTargetDeviceAssertionManager transportationService]
  -[NPKTargetDeviceAssertionManager _IDSSendOptions]
  -[NPKTargetDeviceAssertionManager outstandingAssertionStatusUpdaters]
  -[NPKTargetDeviceAssertionManager initWithTransportationService:]
  -[NPKTargetDeviceAssertionManager acquireAssertionOfType:]
  -[NPKTargetDeviceAssertionManager invalidateAssertionWithUUID:]
  -[NPKTargetDeviceAssertionManager assertionsUUIDsOfType:]
  -[NPKTargetDeviceAssertionManager setOutstandingAssertionStatusUpdaters:]
  -[NPKTargetDeviceAssertionManager setAssertTypesUUIDsMap:]


NPKProtoRelevantPassesNeededRequest : PBRequest <NSCopying>
  // instance methods
  -[NPKProtoRelevantPassesNeededRequest mergeFrom:]
  -[NPKProtoRelevantPassesNeededRequest dictionaryRepresentation]
  -[NPKProtoRelevantPassesNeededRequest writeTo:]
  -[NPKProtoRelevantPassesNeededRequest isEqual:]
  -[NPKProtoRelevantPassesNeededRequest copyTo:]
  -[NPKProtoRelevantPassesNeededRequest readFrom:]
  -[NPKProtoRelevantPassesNeededRequest copyWithZone:]


NPKPeerPaymentWebServiceCompanionTargetDevice : NSObject <PKPeerPaymentWebServiceTargetDeviceProtocol>
 @property  PKPeerPaymentWebService *peerPaymentWebService
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NPKPeerPaymentWebServiceCompanionTargetDevice attemptToDownloadPeerPaymentPassAtURL:withWebService:completion:]

  // instance methods
  -[NPKPeerPaymentWebServiceCompanionTargetDevice userHasDisabledPeerPayment]
  -[NPKPeerPaymentWebServiceCompanionTargetDevice account]
  -[NPKPeerPaymentWebServiceCompanionTargetDevice checkTLKsMissingWithCompletion:]
  -[NPKPeerPaymentWebServiceCompanionTargetDevice preferences]
  -[NPKPeerPaymentWebServiceCompanionTargetDevice _handleAccountChanged:]
  -[NPKPeerPaymentWebServiceCompanionTargetDevice secureElementIdentifiers]
  -[NPKPeerPaymentWebServiceCompanionTargetDevice .cxx_destruct]
  -[NPKPeerPaymentWebServiceCompanionTargetDevice appleAccountInformation]
  -[NPKPeerPaymentWebServiceCompanionTargetDevice deviceClass]
  -[NPKPeerPaymentWebServiceCompanionTargetDevice setPreferences:completion:]
  -[NPKPeerPaymentWebServiceCompanionTargetDevice setUserHasDisabledPeerPayment:]
  -[NPKPeerPaymentWebServiceCompanionTargetDevice peerPaymentReRegisterWithURL:pushToken:peerPaymentWebService:completion:]
  -[NPKPeerPaymentWebServiceCompanionTargetDevice cloudStoreStatusWithCompletion:]
  -[NPKPeerPaymentWebServiceCompanionTargetDevice provisionPeerPaymentPassWithProvisioningController:credential:completion:]
  -[NPKPeerPaymentWebServiceCompanionTargetDevice init]
  -[NPKPeerPaymentWebServiceCompanionTargetDevice resetApplePayManateeViewWithCompletion:]
  -[NPKPeerPaymentWebServiceCompanionTargetDevice bridgedClientInfo]
  -[NPKPeerPaymentWebServiceCompanionTargetDevice downloadPassIfNecessaryWithCompletion:]
  -[NPKPeerPaymentWebServiceCompanionTargetDevice initalizeCloudStoreIfNecessaryWithHandler:]
  -[NPKPeerPaymentWebServiceCompanionTargetDevice dealloc]
  -[NPKPeerPaymentWebServiceCompanionTargetDevice updateAccountWithCompletion:]
  -[NPKPeerPaymentWebServiceCompanionTargetDevice deviceRegion]
  -[NPKPeerPaymentWebServiceCompanionTargetDevice peerPaymentWebService]
  -[NPKPeerPaymentWebServiceCompanionTargetDevice setPeerPaymentWebService:]
  -[NPKPeerPaymentWebServiceCompanionTargetDevice initalizeCloudStoreIfNecessaryWithCompletion:]


NPKProtoStandalonePaymentProvisioningFlowChooseProductRequest : PBRequest <NSCopying>
 @property  NPKProtoStandaloneRequestHeader *requestHeader
 @property  BOOL hasChosenProductIdentifier
 @property  NSString *chosenProductIdentifier

  // instance methods
  -[NPKProtoStandalonePaymentProvisioningFlowChooseProductRequest mergeFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseProductRequest .cxx_destruct]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseProductRequest dictionaryRepresentation]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseProductRequest writeTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseProductRequest isEqual:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseProductRequest copyTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseProductRequest readFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseProductRequest copyWithZone:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseProductRequest requestHeader]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseProductRequest setRequestHeader:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseProductRequest setChosenProductIdentifier:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseProductRequest hasChosenProductIdentifier]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseProductRequest chosenProductIdentifier]


NPKProtoRequestSubcredentialInvitationResponse : PBCodable <NSCopying>
 @property  BOOL hasErrorData
 @property  NSData *errorData

  // instance methods
  -[NPKProtoRequestSubcredentialInvitationResponse mergeFrom:]
  -[NPKProtoRequestSubcredentialInvitationResponse .cxx_destruct]
  -[NPKProtoRequestSubcredentialInvitationResponse dictionaryRepresentation]
  -[NPKProtoRequestSubcredentialInvitationResponse writeTo:]
  -[NPKProtoRequestSubcredentialInvitationResponse isEqual:]
  -[NPKProtoRequestSubcredentialInvitationResponse copyTo:]
  -[NPKProtoRequestSubcredentialInvitationResponse readFrom:]
  -[NPKProtoRequestSubcredentialInvitationResponse copyWithZone:]
  -[NPKProtoRequestSubcredentialInvitationResponse errorData]
  -[NPKProtoRequestSubcredentialInvitationResponse hasErrorData]
  -[NPKProtoRequestSubcredentialInvitationResponse setErrorData:]


NPKProtoShowPaymentSetupRequest : PBRequest <NSCopying>
 @property  BOOL hasAppDisplayName
 @property  NSString *appDisplayName

  // instance methods
  -[NPKProtoShowPaymentSetupRequest mergeFrom:]
  -[NPKProtoShowPaymentSetupRequest .cxx_destruct]
  -[NPKProtoShowPaymentSetupRequest dictionaryRepresentation]
  -[NPKProtoShowPaymentSetupRequest writeTo:]
  -[NPKProtoShowPaymentSetupRequest isEqual:]
  -[NPKProtoShowPaymentSetupRequest copyTo:]
  -[NPKProtoShowPaymentSetupRequest readFrom:]
  -[NPKProtoShowPaymentSetupRequest copyWithZone:]
  -[NPKProtoShowPaymentSetupRequest appDisplayName]
  -[NPKProtoShowPaymentSetupRequest setAppDisplayName:]
  -[NPKProtoShowPaymentSetupRequest hasAppDisplayName]


NPKIDVRemoteDeviceProtoNonceForAuthorizationTokenResponse : PBCodable <NSCopying>
 @property  BOOL hasNonceData
 @property  NSData *nonceData
 @property  BOOL hasErrorData
 @property  NSData *errorData

  // instance methods
  -[NPKIDVRemoteDeviceProtoNonceForAuthorizationTokenResponse mergeFrom:]
  -[NPKIDVRemoteDeviceProtoNonceForAuthorizationTokenResponse nonceData]
  -[NPKIDVRemoteDeviceProtoNonceForAuthorizationTokenResponse setNonceData:]
  -[NPKIDVRemoteDeviceProtoNonceForAuthorizationTokenResponse .cxx_destruct]
  -[NPKIDVRemoteDeviceProtoNonceForAuthorizationTokenResponse dictionaryRepresentation]
  -[NPKIDVRemoteDeviceProtoNonceForAuthorizationTokenResponse writeTo:]
  -[NPKIDVRemoteDeviceProtoNonceForAuthorizationTokenResponse isEqual:]
  -[NPKIDVRemoteDeviceProtoNonceForAuthorizationTokenResponse copyTo:]
  -[NPKIDVRemoteDeviceProtoNonceForAuthorizationTokenResponse readFrom:]
  -[NPKIDVRemoteDeviceProtoNonceForAuthorizationTokenResponse copyWithZone:]
  -[NPKIDVRemoteDeviceProtoNonceForAuthorizationTokenResponse errorData]
  -[NPKIDVRemoteDeviceProtoNonceForAuthorizationTokenResponse hasErrorData]
  -[NPKIDVRemoteDeviceProtoNonceForAuthorizationTokenResponse setErrorData:]
  -[NPKIDVRemoteDeviceProtoNonceForAuthorizationTokenResponse hasNonceData]


NPKProtoEnableServiceModeRequest : PBRequest <NSCopying>
 @property  BOOL hasUniqueID
 @property  NSString *uniqueID
 @property  BOOL hasCancelOutstandingRequests
 @property  BOOL cancelOutstandingRequests

  // instance methods
  -[NPKProtoEnableServiceModeRequest mergeFrom:]
  -[NPKProtoEnableServiceModeRequest uniqueID]
  -[NPKProtoEnableServiceModeRequest .cxx_destruct]
  -[NPKProtoEnableServiceModeRequest dictionaryRepresentation]
  -[NPKProtoEnableServiceModeRequest writeTo:]
  -[NPKProtoEnableServiceModeRequest isEqual:]
  -[NPKProtoEnableServiceModeRequest copyTo:]
  -[NPKProtoEnableServiceModeRequest readFrom:]
  -[NPKProtoEnableServiceModeRequest cancelOutstandingRequests]
  -[NPKProtoEnableServiceModeRequest setUniqueID:]
  -[NPKProtoEnableServiceModeRequest copyWithZone:]
  -[NPKProtoEnableServiceModeRequest hasUniqueID]
  -[NPKProtoEnableServiceModeRequest setCancelOutstandingRequests:]
  -[NPKProtoEnableServiceModeRequest setHasCancelOutstandingRequests:]
  -[NPKProtoEnableServiceModeRequest hasCancelOutstandingRequests]


NPKQuickPaymentSession : NSObject <PKContactlessInterfaceSessionDelegate, STSSessionDelegate>
 @property  NSObject<OS_dispatch_queue> *paymentSessionQueue
 @property  NSObject<OS_dispatch_queue> *internalQueue
 @property  NSObject<OS_dispatch_queue> *callbackQueue
 @property  PKPaymentSessionHandle *contactlessSessionHandle
 @property  PKContactlessInterfaceSession *contactlessSession
 @property  unsigned long contactlessValidity
 @property  unsigned long authorizationValidity
 @property  BOOL confirmed
 @property  BOOL performedFirstActivation
 @property  BOOL deactivating
 @property  BOOL deactivated
 @property  NSMutableArray *deactivationCompletionBlocks
 @property  PKFieldDetector *fieldDetector
 @property  <NPKQuickPaymentSessionDelegate> *delegate
 @property  PKPass *currentPass
 @property  BOOL sessionStarted
 @property  BOOL isSwitchingSessionType
 @property  unsigned long sessionType
 @property  NSDictionary *vasPasses
 @property  BOOL deferAuthorization
 @property  BOOL requireFirstInQueue
 @property  BOOL inServiceMode
 @property  BOOL endSessionWhenAuthorizationIsConsumed
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NPKQuickPaymentSession hasOutstandingSessions]
  +[NPKQuickPaymentSession sessionWithQueue:]
  +[NPKQuickPaymentSession _outstandingSessionHashTable]
  +[NPKQuickPaymentSession _handleNewContactlessSession:]

  // instance methods
  -[NPKQuickPaymentSession sessionType]
  -[NPKQuickPaymentSession setConfirmed:]
  -[NPKQuickPaymentSession setInternalQueue:]
  -[NPKQuickPaymentSession .cxx_destruct]
  -[NPKQuickPaymentSession setCredential:]
  -[NPKQuickPaymentSession callbackQueue]
  -[NPKQuickPaymentSession setDelegate:]
  -[NPKQuickPaymentSession setCallbackQueue:]
  -[NPKQuickPaymentSession contactlessInterfaceSessionHasPendingServerRequest:]
  -[NPKQuickPaymentSession contactlessInterfaceSession:didEndPersistentCardEmulationWithContext:]
  -[NPKQuickPaymentSession contactlessInterfaceSession:didFinishTransactionWithContext:]
  -[NPKQuickPaymentSession contactlessInterfaceSessionDidFailTransaction:forPaymentApplication:paymentPass:]
  -[NPKQuickPaymentSession contactlessInterfaceSessionDidFail:forPaymentApplication:paymentPass:valueAddedServicePasses:]
  -[NPKQuickPaymentSession contactlessInterfaceSessionDidStartTransaction:]
  -[NPKQuickPaymentSession contactlessInterfaceSessionDidSelectValueAddedService:]
  -[NPKQuickPaymentSession contactlessInterfaceSessionDidTerminate:withErrorCode:]
  -[NPKQuickPaymentSession initWithQueue:]
  -[NPKQuickPaymentSession startSession]
  -[NPKQuickPaymentSession contactlessInterfaceSessionDidReceiveUntrustedTerminal:]
  -[NPKQuickPaymentSession contactlessInterfaceSession:didReceive18013Request:readerAuthInfo:]
  -[NPKQuickPaymentSession setDeactivating:]
  -[NPKQuickPaymentSession contactlessInterfaceSessionDidExitField:]
  -[NPKQuickPaymentSession contactlessInterfaceSessionDidSelectPayment:]
  -[NPKQuickPaymentSession contactlessInterfaceSessionDidTimeout:forPaymentApplication:paymentPass:valueAddedServicePasses:]
  -[NPKQuickPaymentSession contactlessInterfaceSessionDidTerminate:]
  -[NPKQuickPaymentSession contactlessInterfaceSessionDidFailDeferredAuthorization:]
  -[NPKQuickPaymentSession contactlessInterfaceSessionDidReceiveActivityTimeout:]
  -[NPKQuickPaymentSession contactlessInterfaceSessionDidEnterField:withProperties:]
  -[NPKQuickPaymentSession internalQueue]
  -[NPKQuickPaymentSession authorize18013RequestWithDataToRelease:credential:]
  -[NPKQuickPaymentSession isConfirmed]
  -[NPKQuickPaymentSession delegate]
  -[NPKQuickPaymentSession dealloc]
  -[NPKQuickPaymentSession sessionStarted]
  -[NPKQuickPaymentSession vasPasses]
  -[NPKQuickPaymentSession setDeactivated:]
  -[NPKQuickPaymentSession setCurrentPass:]
  -[NPKQuickPaymentSession setVasPasses:]
  -[NPKQuickPaymentSession setRequireFirstInQueue:]
  -[NPKQuickPaymentSession setDeferAuthorization:]
  -[NPKQuickPaymentSession currentPass]
  -[NPKQuickPaymentSession isSwitchingSessionType]
  -[NPKQuickPaymentSession inServiceMode]
  -[NPKQuickPaymentSession setInServiceMode:]
  -[NPKQuickPaymentSession confirmSessionExpectingCredential:]
  -[NPKQuickPaymentSession deactivateSessionWithCompletion:]
  -[NPKQuickPaymentSession executeRKEActionForPass:function:action:withCompletion:]
  -[NPKQuickPaymentSession endSessionWhenAuthorizationIsConsumed]
  -[NPKQuickPaymentSession deferAuthorization]
  -[NPKQuickPaymentSession fieldDetector]
  -[NPKQuickPaymentSession setFieldDetector:]
  -[NPKQuickPaymentSession isDeactivated]
  -[NPKQuickPaymentSession startSessionWithCompletion:]
  -[NPKQuickPaymentSession _internalQueue_updateSessionWithCurrentPassAndLoyaltyState]
  -[NPKQuickPaymentSession _sessionQueue_enablePersistentCardEmulation]
  -[NPKQuickPaymentSession _sessionQueue_startContactlessSessionWithSuccessfulCompletionOnInternalQueue:]
  -[NPKQuickPaymentSession paymentSessionQueue]
  -[NPKQuickPaymentSession contactlessSession]
  -[NPKQuickPaymentSession requireFirstInQueue]
  -[NPKQuickPaymentSession _internalQueue_deactivateSessionWithCompletion:]
  -[NPKQuickPaymentSession _internalQueue_setCurrentPass:]
  -[NPKQuickPaymentSession _updateSessionWithCredentialAndActivate]
  -[NPKQuickPaymentSession _sessionQueue_authorizeWithDeferredAuthorization:useCredential:]
  -[NPKQuickPaymentSession _sessionQueue_invokeAppropriateCallbackForActivationWithSuccess:invokeOnSuccess:contactlessValidity:forPass:]
  -[NPKQuickPaymentSession _checkContactlessValidity:authorizationValidity:performWork:]
  -[NPKQuickPaymentSession _internalQueue_getContactlessAndAuthorizationValidityAndPerformWork:]
  -[NPKQuickPaymentSession isDeactivating]
  -[NPKQuickPaymentSession _callbackQueue_invokeDidCompleteForReason:withTransactionContext:]
  -[NPKQuickPaymentSession contactlessSessionHandle]
  -[NPKQuickPaymentSession deactivationCompletionBlocks]
  -[NPKQuickPaymentSession setDeactivationCompletionBlocks:]
  -[NPKQuickPaymentSession _internalQueue_invokeDeactivationCompletionBlocks]
  -[NPKQuickPaymentSession setContactlessSessionHandle:]
  -[NPKQuickPaymentSession setContactlessSession:]
  -[NPKQuickPaymentSession _internalQueue_updateContactlessValidityAndPerformWork:]
  -[NPKQuickPaymentSession _sessionQueue_updateContactlessSessionForPass:paymentApplication:vasPasses:sessionConfirmed:deferAuthorization:]
  -[NPKQuickPaymentSession _checkContactlessValidity:performWork:]
  -[NPKQuickPaymentSession _updateAuthorizationValidity]
  -[NPKQuickPaymentSession _internalQueue_updateContactlessSessionForPass:vasPasses:deferAuthorization:]
  -[NPKQuickPaymentSession _handleTransitTransactionWithContext:]
  -[NPKQuickPaymentSession _handleConventionalTransactionWithContext:]
  -[NPKQuickPaymentSession _loyaltyEngineConfigurationChanged:]
  -[NPKQuickPaymentSession setEndSessionWhenAuthorizationIsConsumed:]
  -[NPKQuickPaymentSession setPaymentSessionQueue:]
  -[NPKQuickPaymentSession contactlessValidity]
  -[NPKQuickPaymentSession setContactlessValidity:]
  -[NPKQuickPaymentSession authorizationValidity]
  -[NPKQuickPaymentSession setAuthorizationValidity:]
  -[NPKQuickPaymentSession hasPerformedFirstActivation]
  -[NPKQuickPaymentSession setPerformedFirstActivation:]


NPKProtoDeviceMetadataWithFieldsReponse : PBCodable <NSCopying>
 @property  BOOL hasPending
 @property  BOOL pending
 @property  BOOL hasDeviceMetadata
 @property  NSData *deviceMetadata

  // instance methods
  -[NPKProtoDeviceMetadataWithFieldsReponse pending]
  -[NPKProtoDeviceMetadataWithFieldsReponse mergeFrom:]
  -[NPKProtoDeviceMetadataWithFieldsReponse setPending:]
  -[NPKProtoDeviceMetadataWithFieldsReponse .cxx_destruct]
  -[NPKProtoDeviceMetadataWithFieldsReponse dictionaryRepresentation]
  -[NPKProtoDeviceMetadataWithFieldsReponse writeTo:]
  -[NPKProtoDeviceMetadataWithFieldsReponse isEqual:]
  -[NPKProtoDeviceMetadataWithFieldsReponse copyTo:]
  -[NPKProtoDeviceMetadataWithFieldsReponse readFrom:]
  -[NPKProtoDeviceMetadataWithFieldsReponse deviceMetadata]
  -[NPKProtoDeviceMetadataWithFieldsReponse setDeviceMetadata:]
  -[NPKProtoDeviceMetadataWithFieldsReponse copyWithZone:]
  -[NPKProtoDeviceMetadataWithFieldsReponse hasDeviceMetadata]
  -[NPKProtoDeviceMetadataWithFieldsReponse setHasPending:]
  -[NPKProtoDeviceMetadataWithFieldsReponse hasPending]


NPKProtoFeatureApplicationsForAccountIdentifierRequest : PBRequest <NSCopying>
 @property  BOOL hasAccountIdentifier
 @property  NSString *accountIdentifier

  // instance methods
  -[NPKProtoFeatureApplicationsForAccountIdentifierRequest mergeFrom:]
  -[NPKProtoFeatureApplicationsForAccountIdentifierRequest .cxx_destruct]
  -[NPKProtoFeatureApplicationsForAccountIdentifierRequest dictionaryRepresentation]
  -[NPKProtoFeatureApplicationsForAccountIdentifierRequest writeTo:]
  -[NPKProtoFeatureApplicationsForAccountIdentifierRequest isEqual:]
  -[NPKProtoFeatureApplicationsForAccountIdentifierRequest hasAccountIdentifier]
  -[NPKProtoFeatureApplicationsForAccountIdentifierRequest copyTo:]
  -[NPKProtoFeatureApplicationsForAccountIdentifierRequest readFrom:]
  -[NPKProtoFeatureApplicationsForAccountIdentifierRequest accountIdentifier]
  -[NPKProtoFeatureApplicationsForAccountIdentifierRequest setAccountIdentifier:]
  -[NPKProtoFeatureApplicationsForAccountIdentifierRequest copyWithZone:]


NPKProtoUpdateAccountWithIdentifierResponse : PBCodable <NSCopying>
 @property  BOOL hasPending
 @property  BOOL pending
 @property  BOOL hasAccountData
 @property  NSData *accountData
 @property  BOOL hasErrorData
 @property  NSData *errorData

  // instance methods
  -[NPKProtoUpdateAccountWithIdentifierResponse pending]
  -[NPKProtoUpdateAccountWithIdentifierResponse mergeFrom:]
  -[NPKProtoUpdateAccountWithIdentifierResponse setPending:]
  -[NPKProtoUpdateAccountWithIdentifierResponse .cxx_destruct]
  -[NPKProtoUpdateAccountWithIdentifierResponse dictionaryRepresentation]
  -[NPKProtoUpdateAccountWithIdentifierResponse writeTo:]
  -[NPKProtoUpdateAccountWithIdentifierResponse isEqual:]
  -[NPKProtoUpdateAccountWithIdentifierResponse copyTo:]
  -[NPKProtoUpdateAccountWithIdentifierResponse readFrom:]
  -[NPKProtoUpdateAccountWithIdentifierResponse copyWithZone:]
  -[NPKProtoUpdateAccountWithIdentifierResponse errorData]
  -[NPKProtoUpdateAccountWithIdentifierResponse hasErrorData]
  -[NPKProtoUpdateAccountWithIdentifierResponse setErrorData:]
  -[NPKProtoUpdateAccountWithIdentifierResponse accountData]
  -[NPKProtoUpdateAccountWithIdentifierResponse setAccountData:]
  -[NPKProtoUpdateAccountWithIdentifierResponse setHasPending:]
  -[NPKProtoUpdateAccountWithIdentifierResponse hasPending]
  -[NPKProtoUpdateAccountWithIdentifierResponse hasAccountData]


NPKProtoGenerateSEEncryptionCertificateForSubCredentialIdRequest : PBRequest <NSCopying>
 @property  BOOL hasSubCredentialId
 @property  NSString *subCredentialId

  // instance methods
  -[NPKProtoGenerateSEEncryptionCertificateForSubCredentialIdRequest mergeFrom:]
  -[NPKProtoGenerateSEEncryptionCertificateForSubCredentialIdRequest .cxx_destruct]
  -[NPKProtoGenerateSEEncryptionCertificateForSubCredentialIdRequest dictionaryRepresentation]
  -[NPKProtoGenerateSEEncryptionCertificateForSubCredentialIdRequest writeTo:]
  -[NPKProtoGenerateSEEncryptionCertificateForSubCredentialIdRequest isEqual:]
  -[NPKProtoGenerateSEEncryptionCertificateForSubCredentialIdRequest copyTo:]
  -[NPKProtoGenerateSEEncryptionCertificateForSubCredentialIdRequest readFrom:]
  -[NPKProtoGenerateSEEncryptionCertificateForSubCredentialIdRequest copyWithZone:]
  -[NPKProtoGenerateSEEncryptionCertificateForSubCredentialIdRequest setSubCredentialId:]
  -[NPKProtoGenerateSEEncryptionCertificateForSubCredentialIdRequest hasSubCredentialId]
  -[NPKProtoGenerateSEEncryptionCertificateForSubCredentialIdRequest subCredentialId]


NPKOneShotLocationFetcher : NSObject <CLLocationManagerDelegate>
 @property  @? completionHandler
 @property  NSObject<OS_dispatch_source> *locationFixTimeout
 @property  CLLocationManager *locationManager
 @property  CLInUseAssertion *inUseAssertion
 @property  NSObject<OS_dispatch_queue> *locationManagerQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NPKOneShotLocationFetcher .cxx_destruct]
  -[NPKOneShotLocationFetcher locationManager]
  -[NPKOneShotLocationFetcher locationManager:didFailWithError:]
  -[NPKOneShotLocationFetcher init]
  -[NPKOneShotLocationFetcher setCompletionHandler:]
  -[NPKOneShotLocationFetcher locationManager:didUpdateLocations:]
  -[NPKOneShotLocationFetcher dealloc]
  -[NPKOneShotLocationFetcher completionHandler]
  -[NPKOneShotLocationFetcher setLocationManager:]
  -[NPKOneShotLocationFetcher _finishLocationFixWithLocation:]
  -[NPKOneShotLocationFetcher setInUseAssertion:]
  -[NPKOneShotLocationFetcher inUseAssertion]
  -[NPKOneShotLocationFetcher locationManagerQueue]
  -[NPKOneShotLocationFetcher setLocationFixTimeout:]
  -[NPKOneShotLocationFetcher locationFixTimeout]
  -[NPKOneShotLocationFetcher fetchLocationWithCompletion:]
  -[NPKOneShotLocationFetcher setLocationManagerQueue:]


NPKPassSyncEngine : NSObject <NSSecureCoding>
 @property  BOOL requireAppleAccountForPaymentPasses
 @property  NPKPassSyncState *backupState
 @property  <NPKPassSyncEngineDelegate> *delegate
 @property  <NPKPassSyncEngineDataSource> *dataSource
 @property  NPKPassSyncState *libraryState
 @property  NPKPassSyncState *reconciledState
 @property  NPKPassSyncState *candidateState
 @property  NPKPassSyncChange *candidateChange
 @property  NPKPassSyncChange *processingChange
 @property  NSString *engineName
 @property  unsigned long engineRole

  // class methods
  +[NPKPassSyncEngine supportsSecureCoding]

  // instance methods
  -[NPKPassSyncEngine setBackupState:]
  -[NPKPassSyncEngine backupState]
  -[NPKPassSyncEngine initWithCoder:]
  -[NPKPassSyncEngine setDataSource:]
  -[NPKPassSyncEngine _sendStateChange:]
  -[NPKPassSyncEngine .cxx_destruct]
  -[NPKPassSyncEngine libraryState]
  -[NPKPassSyncEngine setDelegate:]
  -[NPKPassSyncEngine dataSource]
  -[NPKPassSyncEngine setLibraryState:]
  -[NPKPassSyncEngine delegate]
  -[NPKPassSyncEngine encodeWithCoder:]
  -[NPKPassSyncEngine initWithRole:]
  -[NPKPassSyncEngine handleStateChange:]
  -[NPKPassSyncEngine handleStateChangeProcessedWithUUID:changeAccepted:fullPassRequired:]
  -[NPKPassSyncEngine handleReconciledStateUnrecognizedWithHash:version:passSyncState:]
  -[NPKPassSyncEngine handleProposedReconciledState:]
  -[NPKPassSyncEngine handleReconciledStateAcceptedWithHash:]
  -[NPKPassSyncEngine reconciledState]
  -[NPKPassSyncEngine setReconciledState:]
  -[NPKPassSyncEngine processingChange]
  -[NPKPassSyncEngine candidateChange]
  -[NPKPassSyncEngine syncIfNecessary]
  -[NPKPassSyncEngine engineName]
  -[NPKPassSyncEngine _sendNextStateChange]
  -[NPKPassSyncEngine _unexpectedEventOccurred]
  -[NPKPassSyncEngine _sendStateChangeProcessedWithUUID:changeAccepted:fullPassRequired:]
  -[NPKPassSyncEngine _requestAddPassData:forSyncStateItem:completion:]
  -[NPKPassSyncEngine _requestUpdatePassData:forSyncStateItem:baseManifestHashForPartialUpdate:remoteAssetsForPartialUpdate:completion:]
  -[NPKPassSyncEngine _requestRemovePassWithUniqueID:completion:]
  -[NPKPassSyncEngine _shouldProcessAddOrUpdateChangeOfType:changeSyncStateItem:librarySyncStateItem:reconciledSyncStateItem:candidateChange:shouldApplyToPassLibrary:shouldApplyToReconciledState:]
  -[NPKPassSyncEngine setProcessingChange:]
  -[NPKPassSyncEngine _finishedProcessingChange:]
  -[NPKPassSyncEngine _sendReconciledStateUnrecognizedWithHash:version:currentPassSyncState:]
  -[NPKPassSyncEngine setCandidateChange:]
  -[NPKPassSyncEngine _receivedStateChangeProcessed:changeAccepted:]
  -[NPKPassSyncEngine setCandidateState:]
  -[NPKPassSyncEngine _sendProposedReconciledState:]
  -[NPKPassSyncEngine candidateState]
  -[NPKPassSyncEngine _sendReconciledStateAcceptedWithHash:]
  -[NPKPassSyncEngine _engineStateChanged]
  -[NPKPassSyncEngine engineRole]
  -[NPKPassSyncEngine requireAppleAccountForPaymentPasses]
  -[NPKPassSyncEngine setRequireAppleAccountForPaymentPasses:]


NPKProtoCloudStoreStatusResponse : PBCodable <NSCopying>
 @property  BOOL hasPending
 @property  BOOL pending
 @property  BOOL hasAccountInfoData
 @property  NSData *accountInfoData
 @property  BOOL hasCloudStoreIsSetup
 @property  BOOL cloudStoreIsSetup
 @property  BOOL hasErrorData
 @property  NSData *errorData

  // instance methods
  -[NPKProtoCloudStoreStatusResponse pending]
  -[NPKProtoCloudStoreStatusResponse mergeFrom:]
  -[NPKProtoCloudStoreStatusResponse setPending:]
  -[NPKProtoCloudStoreStatusResponse .cxx_destruct]
  -[NPKProtoCloudStoreStatusResponse dictionaryRepresentation]
  -[NPKProtoCloudStoreStatusResponse writeTo:]
  -[NPKProtoCloudStoreStatusResponse isEqual:]
  -[NPKProtoCloudStoreStatusResponse copyTo:]
  -[NPKProtoCloudStoreStatusResponse readFrom:]
  -[NPKProtoCloudStoreStatusResponse copyWithZone:]
  -[NPKProtoCloudStoreStatusResponse errorData]
  -[NPKProtoCloudStoreStatusResponse hasErrorData]
  -[NPKProtoCloudStoreStatusResponse setErrorData:]
  -[NPKProtoCloudStoreStatusResponse setHasPending:]
  -[NPKProtoCloudStoreStatusResponse hasPending]
  -[NPKProtoCloudStoreStatusResponse setAccountInfoData:]
  -[NPKProtoCloudStoreStatusResponse hasAccountInfoData]
  -[NPKProtoCloudStoreStatusResponse setCloudStoreIsSetup:]
  -[NPKProtoCloudStoreStatusResponse setHasCloudStoreIsSetup:]
  -[NPKProtoCloudStoreStatusResponse hasCloudStoreIsSetup]
  -[NPKProtoCloudStoreStatusResponse accountInfoData]
  -[NPKProtoCloudStoreStatusResponse cloudStoreIsSetup]


NPKProtoServiceProviderDataForPassWithUniqueIdentifierRequest : PBRequest <NSCopying>
 @property  NSString *passUniqueID

  // instance methods
  -[NPKProtoServiceProviderDataForPassWithUniqueIdentifierRequest mergeFrom:]
  -[NPKProtoServiceProviderDataForPassWithUniqueIdentifierRequest .cxx_destruct]
  -[NPKProtoServiceProviderDataForPassWithUniqueIdentifierRequest dictionaryRepresentation]
  -[NPKProtoServiceProviderDataForPassWithUniqueIdentifierRequest writeTo:]
  -[NPKProtoServiceProviderDataForPassWithUniqueIdentifierRequest isEqual:]
  -[NPKProtoServiceProviderDataForPassWithUniqueIdentifierRequest copyTo:]
  -[NPKProtoServiceProviderDataForPassWithUniqueIdentifierRequest readFrom:]
  -[NPKProtoServiceProviderDataForPassWithUniqueIdentifierRequest passUniqueID]
  -[NPKProtoServiceProviderDataForPassWithUniqueIdentifierRequest setPassUniqueID:]
  -[NPKProtoServiceProviderDataForPassWithUniqueIdentifierRequest copyWithZone:]


NPKSimulatedPaymentProvisioningFlowController : NPKPaymentProvisioningFlowController
  // class methods
  +[NPKSimulatedPaymentProvisioningFlowController _passWithDescription:credentialType:]
  +[NPKSimulatedPaymentProvisioningFlowController _broadwayCredential]
  +[NPKSimulatedPaymentProvisioningFlowController _easyProvisioningCredentials]

  // instance methods
  -[NPKSimulatedPaymentProvisioningFlowController _performTerms:]
  -[NPKSimulatedPaymentProvisioningFlowController _performEligibility:]
  -[NPKSimulatedPaymentProvisioningFlowController _startProvisioningForCredential:requestContext:]
  -[NPKSimulatedPaymentProvisioningFlowController _requestRequirements:]
  -[NPKSimulatedPaymentProvisioningFlowController _performProvision:]
  -[NPKSimulatedPaymentProvisioningFlowController startProvisioningFlow:]
  -[NPKSimulatedPaymentProvisioningFlowController acknowledgeWelcome:]
  -[NPKSimulatedPaymentProvisioningFlowController chooseFlowForPickerItem:requestContext:]
  -[NPKSimulatedPaymentProvisioningFlowController handleManualEntryFields:credential:requestContext:]


NPKProtoRemoteAdminAvailabilityResponse : PBCodable <NSCopying>
 @property  BOOL hasIsAvailable
 @property  BOOL isAvailable

  // instance methods
  -[NPKProtoRemoteAdminAvailabilityResponse mergeFrom:]
  -[NPKProtoRemoteAdminAvailabilityResponse setIsAvailable:]
  -[NPKProtoRemoteAdminAvailabilityResponse isAvailable]
  -[NPKProtoRemoteAdminAvailabilityResponse dictionaryRepresentation]
  -[NPKProtoRemoteAdminAvailabilityResponse writeTo:]
  -[NPKProtoRemoteAdminAvailabilityResponse isEqual:]
  -[NPKProtoRemoteAdminAvailabilityResponse copyTo:]
  -[NPKProtoRemoteAdminAvailabilityResponse readFrom:]
  -[NPKProtoRemoteAdminAvailabilityResponse hasIsAvailable]
  -[NPKProtoRemoteAdminAvailabilityResponse setHasIsAvailable:]
  -[NPKProtoRemoteAdminAvailabilityResponse copyWithZone:]


NPKProtoHandleAppletStateChangeRequest : PBRequest <NSCopying>
 @property  BOOL hasPassID
 @property  NSString *passID
 @property  BOOL hasPassAppletState
 @property  NSData *passAppletState

  // instance methods
  -[NPKProtoHandleAppletStateChangeRequest mergeFrom:]
  -[NPKProtoHandleAppletStateChangeRequest passID]
  -[NPKProtoHandleAppletStateChangeRequest .cxx_destruct]
  -[NPKProtoHandleAppletStateChangeRequest dictionaryRepresentation]
  -[NPKProtoHandleAppletStateChangeRequest writeTo:]
  -[NPKProtoHandleAppletStateChangeRequest isEqual:]
  -[NPKProtoHandleAppletStateChangeRequest copyTo:]
  -[NPKProtoHandleAppletStateChangeRequest readFrom:]
  -[NPKProtoHandleAppletStateChangeRequest setPassID:]
  -[NPKProtoHandleAppletStateChangeRequest hasPassID]
  -[NPKProtoHandleAppletStateChangeRequest copyWithZone:]
  -[NPKProtoHandleAppletStateChangeRequest setPassAppletState:]
  -[NPKProtoHandleAppletStateChangeRequest hasPassAppletState]
  -[NPKProtoHandleAppletStateChangeRequest passAppletState]


NPKProtoStandalonePaymentProvisioningFlowSessionEndedResponse : PBCodable <NSCopying>
 @property  NPKProtoStandaloneResponseHeader *responseHeader

  // instance methods
  -[NPKProtoStandalonePaymentProvisioningFlowSessionEndedResponse mergeFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowSessionEndedResponse .cxx_destruct]
  -[NPKProtoStandalonePaymentProvisioningFlowSessionEndedResponse dictionaryRepresentation]
  -[NPKProtoStandalonePaymentProvisioningFlowSessionEndedResponse writeTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowSessionEndedResponse isEqual:]
  -[NPKProtoStandalonePaymentProvisioningFlowSessionEndedResponse copyTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowSessionEndedResponse readFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowSessionEndedResponse copyWithZone:]
  -[NPKProtoStandalonePaymentProvisioningFlowSessionEndedResponse responseHeader]
  -[NPKProtoStandalonePaymentProvisioningFlowSessionEndedResponse setResponseHeader:]


NPKProtoDeviceDidRegisterRequest : PBRequest <NSCopying>
 @property  NSMutableArray *tsmRegionPushTopics
 @property  NSMutableArray *tsmRegionURLs
 @property  NSMutableArray *brokerRegionPushTopics
 @property  BOOL hasPrimaryRegionTopic
 @property  NSString *primaryRegionTopic

  // class methods
  +[NPKProtoDeviceDidRegisterRequest tsmRegionPushTopicsType]
  +[NPKProtoDeviceDidRegisterRequest tsmRegionURLsType]
  +[NPKProtoDeviceDidRegisterRequest brokerRegionPushTopicsType]

  // instance methods
  -[NPKProtoDeviceDidRegisterRequest mergeFrom:]
  -[NPKProtoDeviceDidRegisterRequest .cxx_destruct]
  -[NPKProtoDeviceDidRegisterRequest dictionaryRepresentation]
  -[NPKProtoDeviceDidRegisterRequest writeTo:]
  -[NPKProtoDeviceDidRegisterRequest primaryRegionTopic]
  -[NPKProtoDeviceDidRegisterRequest isEqual:]
  -[NPKProtoDeviceDidRegisterRequest copyTo:]
  -[NPKProtoDeviceDidRegisterRequest readFrom:]
  -[NPKProtoDeviceDidRegisterRequest copyWithZone:]
  -[NPKProtoDeviceDidRegisterRequest addTsmRegionPushTopics:]
  -[NPKProtoDeviceDidRegisterRequest addTsmRegionURLs:]
  -[NPKProtoDeviceDidRegisterRequest addBrokerRegionPushTopics:]
  -[NPKProtoDeviceDidRegisterRequest tsmRegionPushTopicsCount]
  -[NPKProtoDeviceDidRegisterRequest clearTsmRegionPushTopics]
  -[NPKProtoDeviceDidRegisterRequest tsmRegionPushTopicsAtIndex:]
  -[NPKProtoDeviceDidRegisterRequest tsmRegionURLsCount]
  -[NPKProtoDeviceDidRegisterRequest clearTsmRegionURLs]
  -[NPKProtoDeviceDidRegisterRequest tsmRegionURLsAtIndex:]
  -[NPKProtoDeviceDidRegisterRequest brokerRegionPushTopicsCount]
  -[NPKProtoDeviceDidRegisterRequest clearBrokerRegionPushTopics]
  -[NPKProtoDeviceDidRegisterRequest brokerRegionPushTopicsAtIndex:]
  -[NPKProtoDeviceDidRegisterRequest setPrimaryRegionTopic:]
  -[NPKProtoDeviceDidRegisterRequest hasPrimaryRegionTopic]
  -[NPKProtoDeviceDidRegisterRequest tsmRegionPushTopics]
  -[NPKProtoDeviceDidRegisterRequest setTsmRegionPushTopics:]
  -[NPKProtoDeviceDidRegisterRequest tsmRegionURLs]
  -[NPKProtoDeviceDidRegisterRequest setTsmRegionURLs:]
  -[NPKProtoDeviceDidRegisterRequest brokerRegionPushTopics]
  -[NPKProtoDeviceDidRegisterRequest setBrokerRegionPushTopics:]


NPKDateRange : NSObject <NPKDateRange>
 @property  NSDate *startDate
 @property  NSDate *expiryDate
 @property  NSString *startDateString
 @property  NSString *expiryDateString
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NPKDateRange _dateStringWithDate:style:]

  // instance methods
  -[NPKDateRange .cxx_destruct]
  -[NPKDateRange startDateString]
  -[NPKDateRange expiryDateString]
  -[NPKDateRange startDate]
  -[NPKDateRange expiryDate]
  -[NPKDateRange initWithStartDate:expirationDate:formatterStyle:]


NPKProtoStandalonePaymentProvisioningFlowSessionCheckInRequest : PBRequest <NSCopying>
 @property  NPKProtoStandaloneResponseHeader *requestHeader

  // instance methods
  -[NPKProtoStandalonePaymentProvisioningFlowSessionCheckInRequest mergeFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowSessionCheckInRequest .cxx_destruct]
  -[NPKProtoStandalonePaymentProvisioningFlowSessionCheckInRequest dictionaryRepresentation]
  -[NPKProtoStandalonePaymentProvisioningFlowSessionCheckInRequest writeTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowSessionCheckInRequest isEqual:]
  -[NPKProtoStandalonePaymentProvisioningFlowSessionCheckInRequest copyTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowSessionCheckInRequest readFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowSessionCheckInRequest copyWithZone:]
  -[NPKProtoStandalonePaymentProvisioningFlowSessionCheckInRequest requestHeader]
  -[NPKProtoStandalonePaymentProvisioningFlowSessionCheckInRequest setRequestHeader:]


NPKProtoStandalonePaymentProvisioningFlowProductDisambiguationStepContext : PBCodable <NSCopying>
  // instance methods
  -[NPKProtoStandalonePaymentProvisioningFlowProductDisambiguationStepContext mergeFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowProductDisambiguationStepContext dictionaryRepresentation]
  -[NPKProtoStandalonePaymentProvisioningFlowProductDisambiguationStepContext writeTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowProductDisambiguationStepContext isEqual:]
  -[NPKProtoStandalonePaymentProvisioningFlowProductDisambiguationStepContext copyTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowProductDisambiguationStepContext readFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowProductDisambiguationStepContext copyWithZone:]


NPKProtoCheckFidoKeyPresenceRequest : PBRequest <NSCopying>
 @property  BOOL hasRelyingParty
 @property  NSString *relyingParty
 @property  BOOL hasRelyingPartyAccountHash
 @property  NSString *relyingPartyAccountHash
 @property  BOOL hasFidoKeyHash
 @property  NSData *fidoKeyHash

  // instance methods
  -[NPKProtoCheckFidoKeyPresenceRequest mergeFrom:]
  -[NPKProtoCheckFidoKeyPresenceRequest .cxx_destruct]
  -[NPKProtoCheckFidoKeyPresenceRequest dictionaryRepresentation]
  -[NPKProtoCheckFidoKeyPresenceRequest writeTo:]
  -[NPKProtoCheckFidoKeyPresenceRequest isEqual:]
  -[NPKProtoCheckFidoKeyPresenceRequest copyTo:]
  -[NPKProtoCheckFidoKeyPresenceRequest readFrom:]
  -[NPKProtoCheckFidoKeyPresenceRequest setRelyingParty:]
  -[NPKProtoCheckFidoKeyPresenceRequest relyingParty]
  -[NPKProtoCheckFidoKeyPresenceRequest copyWithZone:]
  -[NPKProtoCheckFidoKeyPresenceRequest fidoKeyHash]
  -[NPKProtoCheckFidoKeyPresenceRequest setRelyingPartyAccountHash:]
  -[NPKProtoCheckFidoKeyPresenceRequest setFidoKeyHash:]
  -[NPKProtoCheckFidoKeyPresenceRequest hasRelyingParty]
  -[NPKProtoCheckFidoKeyPresenceRequest hasRelyingPartyAccountHash]
  -[NPKProtoCheckFidoKeyPresenceRequest hasFidoKeyHash]
  -[NPKProtoCheckFidoKeyPresenceRequest relyingPartyAccountHash]


NPKProtoStandalonePaymentProvisioningFlowStartProvisioningFlowRequest : PBRequest <NSCopying>
 @property  NPKProtoStandaloneRequestHeader *requestHeader

  // instance methods
  -[NPKProtoStandalonePaymentProvisioningFlowStartProvisioningFlowRequest mergeFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowStartProvisioningFlowRequest .cxx_destruct]
  -[NPKProtoStandalonePaymentProvisioningFlowStartProvisioningFlowRequest dictionaryRepresentation]
  -[NPKProtoStandalonePaymentProvisioningFlowStartProvisioningFlowRequest writeTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowStartProvisioningFlowRequest isEqual:]
  -[NPKProtoStandalonePaymentProvisioningFlowStartProvisioningFlowRequest copyTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowStartProvisioningFlowRequest readFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowStartProvisioningFlowRequest copyWithZone:]
  -[NPKProtoStandalonePaymentProvisioningFlowStartProvisioningFlowRequest requestHeader]
  -[NPKProtoStandalonePaymentProvisioningFlowStartProvisioningFlowRequest setRequestHeader:]


NPKPeerPaymentTransactionDetails : NSObject
 @property  PKPaymentTransaction *transaction
 @property  NSString *serviceIdentifier
 @property  unsigned long paymentStatus
 @property  NSArray *availableActions
 @property  NSDate *availableActionsFetchDate

  // instance methods
  -[NPKPeerPaymentTransactionDetails setAvailableActions:]
  -[NPKPeerPaymentTransactionDetails paymentStatus]
  -[NPKPeerPaymentTransactionDetails setPaymentStatus:]
  -[NPKPeerPaymentTransactionDetails availableActions]
  -[NPKPeerPaymentTransactionDetails setServiceIdentifier:]
  -[NPKPeerPaymentTransactionDetails serviceIdentifier]
  -[NPKPeerPaymentTransactionDetails transaction]
  -[NPKPeerPaymentTransactionDetails .cxx_destruct]
  -[NPKPeerPaymentTransactionDetails setTransaction:]
  -[NPKPeerPaymentTransactionDetails availableActionsFetchDate]
  -[NPKPeerPaymentTransactionDetails setAvailableActionsFetchDate:]


NPKPeerPaymentMessagesTransactionsManager : NSObject <PKPaymentServiceDelegate>
 @property  PKPaymentService *paymentService
 @property  NSMutableDictionary *transactionDetails
 @property  NSMutableSet *currentLookupIdentifiers
 @property  NSString *peerPaymentPassUniqueID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NPKPeerPaymentMessagesTransactionsManager sharedInstance]

  // instance methods
  -[NPKPeerPaymentMessagesTransactionsManager transactionSourceIdentifier:didReceiveTransaction:]
  -[NPKPeerPaymentMessagesTransactionsManager .cxx_destruct]
  -[NPKPeerPaymentMessagesTransactionsManager transactionSourceIdentifier:didRemoveTransactionWithIdentifier:]
  -[NPKPeerPaymentMessagesTransactionsManager paymentService]
  -[NPKPeerPaymentMessagesTransactionsManager peerPaymentPassUniqueID]
  -[NPKPeerPaymentMessagesTransactionsManager _applicationWillEnterForeground:]
  -[NPKPeerPaymentMessagesTransactionsManager dealloc]
  -[NPKPeerPaymentMessagesTransactionsManager transactionDetails]
  -[NPKPeerPaymentMessagesTransactionsManager initWithPeerPaymentPassUniqueID:]
  -[NPKPeerPaymentMessagesTransactionsManager initWithPeerPaymentPassUniqueID:paymentService:]
  -[NPKPeerPaymentMessagesTransactionsManager _fetchAllPeerPaymentTransactionsWithPeerPaymentPassID:]
  -[NPKPeerPaymentMessagesTransactionsManager _passLibraryChanged:]
  -[NPKPeerPaymentMessagesTransactionsManager setPeerPaymentPassUniqueID:]
  -[NPKPeerPaymentMessagesTransactionsManager _transactionQueue_statusOfPaymentTransactionWithServiceIdentifier:]
  -[NPKPeerPaymentMessagesTransactionsManager _transactionsQueue_setStatus:forPaymentTransactionWithServiceIdentifier:notifyUpdate:]
  -[NPKPeerPaymentMessagesTransactionsManager _transactionsQueue_transactionDetailsCreatedIfNecessaryForServiceIdentifier:]
  -[NPKPeerPaymentMessagesTransactionsManager _transactionsQueue_notifyStatusUpdateOfTransactionWithServiceIdentifier:]
  -[NPKPeerPaymentMessagesTransactionsManager currentLookupIdentifiers]
  -[NPKPeerPaymentMessagesTransactionsManager _sharedPeerPaymentWebService]
  -[NPKPeerPaymentMessagesTransactionsManager statusOfPaymentTransactionWithServiceIdentifier:]
  -[NPKPeerPaymentMessagesTransactionsManager availableActionsForPaymentTransactionWithServiceIdentifier:]
  -[NPKPeerPaymentMessagesTransactionsManager setStatus:forPaymentTransactionWithServiceIdentifier:]
  -[NPKPeerPaymentMessagesTransactionsManager peerPaymentTransactionWithServiceIdentifier:]
  -[NPKPeerPaymentMessagesTransactionsManager lookupTransactionActionsIfNeededWithServiceIdentifier:]


NPKProtoDumpLogsResponse : PBCodable <NSCopying>
 @property  BOOL hasSuccess
 @property  BOOL success

  // instance methods
  -[NPKProtoDumpLogsResponse setSuccess:]
  -[NPKProtoDumpLogsResponse success]
  -[NPKProtoDumpLogsResponse mergeFrom:]
  -[NPKProtoDumpLogsResponse hasSuccess]
  -[NPKProtoDumpLogsResponse dictionaryRepresentation]
  -[NPKProtoDumpLogsResponse writeTo:]
  -[NPKProtoDumpLogsResponse setHasSuccess:]
  -[NPKProtoDumpLogsResponse isEqual:]
  -[NPKProtoDumpLogsResponse copyTo:]
  -[NPKProtoDumpLogsResponse readFrom:]
  -[NPKProtoDumpLogsResponse copyWithZone:]


NPKProtoSetTransactionDefaultsRequest : PBRequest <NSCopying>
 @property  BOOL hasDefaultShippingAddress
 @property  NSData *defaultShippingAddress
 @property  BOOL hasDefaultBillingAddresses
 @property  NSData *defaultBillingAddresses
 @property  BOOL hasDefaultContactEmail
 @property  NSData *defaultContactEmail
 @property  BOOL hasDefaultContactPhone
 @property  NSData *defaultContactPhone
 @property  BOOL hasDefaultContactName
 @property  NSData *defaultContactName

  // instance methods
  -[NPKProtoSetTransactionDefaultsRequest mergeFrom:]
  -[NPKProtoSetTransactionDefaultsRequest .cxx_destruct]
  -[NPKProtoSetTransactionDefaultsRequest dictionaryRepresentation]
  -[NPKProtoSetTransactionDefaultsRequest defaultContactName]
  -[NPKProtoSetTransactionDefaultsRequest setDefaultContactName:]
  -[NPKProtoSetTransactionDefaultsRequest defaultBillingAddresses]
  -[NPKProtoSetTransactionDefaultsRequest defaultContactEmail]
  -[NPKProtoSetTransactionDefaultsRequest setDefaultContactEmail:]
  -[NPKProtoSetTransactionDefaultsRequest defaultContactPhone]
  -[NPKProtoSetTransactionDefaultsRequest setDefaultContactPhone:]
  -[NPKProtoSetTransactionDefaultsRequest defaultShippingAddress]
  -[NPKProtoSetTransactionDefaultsRequest setDefaultShippingAddress:]
  -[NPKProtoSetTransactionDefaultsRequest writeTo:]
  -[NPKProtoSetTransactionDefaultsRequest isEqual:]
  -[NPKProtoSetTransactionDefaultsRequest copyTo:]
  -[NPKProtoSetTransactionDefaultsRequest readFrom:]
  -[NPKProtoSetTransactionDefaultsRequest copyWithZone:]
  -[NPKProtoSetTransactionDefaultsRequest setDefaultBillingAddresses:]
  -[NPKProtoSetTransactionDefaultsRequest hasDefaultShippingAddress]
  -[NPKProtoSetTransactionDefaultsRequest hasDefaultBillingAddresses]
  -[NPKProtoSetTransactionDefaultsRequest hasDefaultContactEmail]
  -[NPKProtoSetTransactionDefaultsRequest hasDefaultContactPhone]
  -[NPKProtoSetTransactionDefaultsRequest hasDefaultContactName]


NPKProtoPhotosForFamilyMembersWithDSIDsResponse : PBCodable <NSCopying>
 @property  BOOL hasSuccess
 @property  BOOL success
 @property  NSMutableArray *familyPhotosIDs
 @property  NSMutableArray *familyPhotos

  // class methods
  +[NPKProtoPhotosForFamilyMembersWithDSIDsResponse familyPhotosIDsType]
  +[NPKProtoPhotosForFamilyMembersWithDSIDsResponse familyPhotosType]

  // instance methods
  -[NPKProtoPhotosForFamilyMembersWithDSIDsResponse setSuccess:]
  -[NPKProtoPhotosForFamilyMembersWithDSIDsResponse success]
  -[NPKProtoPhotosForFamilyMembersWithDSIDsResponse mergeFrom:]
  -[NPKProtoPhotosForFamilyMembersWithDSIDsResponse .cxx_destruct]
  -[NPKProtoPhotosForFamilyMembersWithDSIDsResponse hasSuccess]
  -[NPKProtoPhotosForFamilyMembersWithDSIDsResponse dictionaryRepresentation]
  -[NPKProtoPhotosForFamilyMembersWithDSIDsResponse writeTo:]
  -[NPKProtoPhotosForFamilyMembersWithDSIDsResponse setHasSuccess:]
  -[NPKProtoPhotosForFamilyMembersWithDSIDsResponse isEqual:]
  -[NPKProtoPhotosForFamilyMembersWithDSIDsResponse copyTo:]
  -[NPKProtoPhotosForFamilyMembersWithDSIDsResponse readFrom:]
  -[NPKProtoPhotosForFamilyMembersWithDSIDsResponse copyWithZone:]
  -[NPKProtoPhotosForFamilyMembersWithDSIDsResponse addFamilyPhotosIDs:]
  -[NPKProtoPhotosForFamilyMembersWithDSIDsResponse addFamilyPhotos:]
  -[NPKProtoPhotosForFamilyMembersWithDSIDsResponse familyPhotosIDsCount]
  -[NPKProtoPhotosForFamilyMembersWithDSIDsResponse clearFamilyPhotosIDs]
  -[NPKProtoPhotosForFamilyMembersWithDSIDsResponse familyPhotosIDsAtIndex:]
  -[NPKProtoPhotosForFamilyMembersWithDSIDsResponse familyPhotosCount]
  -[NPKProtoPhotosForFamilyMembersWithDSIDsResponse clearFamilyPhotos]
  -[NPKProtoPhotosForFamilyMembersWithDSIDsResponse familyPhotosAtIndex:]
  -[NPKProtoPhotosForFamilyMembersWithDSIDsResponse familyPhotosIDs]
  -[NPKProtoPhotosForFamilyMembersWithDSIDsResponse setFamilyPhotosIDs:]
  -[NPKProtoPhotosForFamilyMembersWithDSIDsResponse familyPhotos]
  -[NPKProtoPhotosForFamilyMembersWithDSIDsResponse setFamilyPhotos:]


NPKCompanionSecureRangingCoordinator : NSObject
 @property  <NPKCompanionSecureRangingCoordinatorDelegate> *delegate

  // instance methods
  -[NPKCompanionSecureRangingCoordinator .cxx_destruct]
  -[NPKCompanionSecureRangingCoordinator setDelegate:]
  -[NPKCompanionSecureRangingCoordinator _registerObservers]
  -[NPKCompanionSecureRangingCoordinator delegate]
  -[NPKCompanionSecureRangingCoordinator initWithDistributedNotificationCenter:]
  -[NPKCompanionSecureRangingCoordinator _handleCarKeyRangingStartedNotification:]
  -[NPKCompanionSecureRangingCoordinator _handleCarKeyRangingEndedNotification:]
  -[NPKCompanionSecureRangingCoordinator _parseRangingStartedNotificationObject:outApplicationIdentifier:outApplicationKeyIdentifier:outPairedReaderIdentifier:outRangingTimeoutInSeconds:]
  -[NPKCompanionSecureRangingCoordinator _parseRangingEndedNotificationObject:outApplicationIdentifier:outApplicationKeyIdentifier:outPairedReaderIdentifier:]


NPKProtoQueueTSMConnectionRequest : PBRequest <NSCopying>
 @property  BOOL hasPushTopic
 @property  NSString *pushTopic

  // instance methods
  -[NPKProtoQueueTSMConnectionRequest pushTopic]
  -[NPKProtoQueueTSMConnectionRequest mergeFrom:]
  -[NPKProtoQueueTSMConnectionRequest .cxx_destruct]
  -[NPKProtoQueueTSMConnectionRequest dictionaryRepresentation]
  -[NPKProtoQueueTSMConnectionRequest writeTo:]
  -[NPKProtoQueueTSMConnectionRequest isEqual:]
  -[NPKProtoQueueTSMConnectionRequest copyTo:]
  -[NPKProtoQueueTSMConnectionRequest readFrom:]
  -[NPKProtoQueueTSMConnectionRequest copyWithZone:]
  -[NPKProtoQueueTSMConnectionRequest setPushTopic:]
  -[NPKProtoQueueTSMConnectionRequest hasPushTopic]


NPKProtoStandalonePaymentCredential : PBCodable <NSCopying>
 @property  BOOL hasSanitizedPrimaryAccountNumber
 @property  NSString *sanitizedPrimaryAccountNumber
 @property  BOOL hasExpiration
 @property  NSString *expiration
 @property  BOOL hasLongDescription
 @property  NSString *longDescription

  // instance methods
  -[NPKProtoStandalonePaymentCredential mergeFrom:]
  -[NPKProtoStandalonePaymentCredential .cxx_destruct]
  -[NPKProtoStandalonePaymentCredential setSanitizedPrimaryAccountNumber:]
  -[NPKProtoStandalonePaymentCredential dictionaryRepresentation]
  -[NPKProtoStandalonePaymentCredential expiration]
  -[NPKProtoStandalonePaymentCredential writeTo:]
  -[NPKProtoStandalonePaymentCredential sanitizedPrimaryAccountNumber]
  -[NPKProtoStandalonePaymentCredential isEqual:]
  -[NPKProtoStandalonePaymentCredential copyTo:]
  -[NPKProtoStandalonePaymentCredential readFrom:]
  -[NPKProtoStandalonePaymentCredential longDescription]
  -[NPKProtoStandalonePaymentCredential setLongDescription:]
  -[NPKProtoStandalonePaymentCredential copyWithZone:]
  -[NPKProtoStandalonePaymentCredential setExpiration:]
  -[NPKProtoStandalonePaymentCredential hasLongDescription]
  -[NPKProtoStandalonePaymentCredential hasSanitizedPrimaryAccountNumber]
  -[NPKProtoStandalonePaymentCredential hasExpiration]


NPKProtoStandalonePaymentProvisioningFlowPickerSection : PBCodable <NSCopying>
 @property  BOOL hasTitle
 @property  NSString *title
 @property  BOOL hasFooter
 @property  NSString *footer
 @property  NSMutableArray *items

  // class methods
  +[NPKProtoStandalonePaymentProvisioningFlowPickerSection itemsType]

  // instance methods
  -[NPKProtoStandalonePaymentProvisioningFlowPickerSection mergeFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowPickerSection footer]
  -[NPKProtoStandalonePaymentProvisioningFlowPickerSection setFooter:]
  -[NPKProtoStandalonePaymentProvisioningFlowPickerSection hasTitle]
  -[NPKProtoStandalonePaymentProvisioningFlowPickerSection setTitle:]
  -[NPKProtoStandalonePaymentProvisioningFlowPickerSection items]
  -[NPKProtoStandalonePaymentProvisioningFlowPickerSection .cxx_destruct]
  -[NPKProtoStandalonePaymentProvisioningFlowPickerSection dictionaryRepresentation]
  -[NPKProtoStandalonePaymentProvisioningFlowPickerSection writeTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowPickerSection addItems:]
  -[NPKProtoStandalonePaymentProvisioningFlowPickerSection isEqual:]
  -[NPKProtoStandalonePaymentProvisioningFlowPickerSection copyTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowPickerSection readFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowPickerSection setItems:]
  -[NPKProtoStandalonePaymentProvisioningFlowPickerSection title]
  -[NPKProtoStandalonePaymentProvisioningFlowPickerSection itemsCount]
  -[NPKProtoStandalonePaymentProvisioningFlowPickerSection copyWithZone:]
  -[NPKProtoStandalonePaymentProvisioningFlowPickerSection clearItems]
  -[NPKProtoStandalonePaymentProvisioningFlowPickerSection itemsAtIndex:]
  -[NPKProtoStandalonePaymentProvisioningFlowPickerSection hasFooter]


NPKStandaloneProvisioningNumericEntryCoordinator : NSObject
 @property  NSArray *providedFields
 @property  NSMutableArray *completedFields
 @property  unsigned long currentIndex
 @property  @? completionHandler

  // instance methods
  -[NPKStandaloneProvisioningNumericEntryCoordinator .cxx_destruct]
  -[NPKStandaloneProvisioningNumericEntryCoordinator setCompletionHandler:]
  -[NPKStandaloneProvisioningNumericEntryCoordinator setCurrentIndex:]
  -[NPKStandaloneProvisioningNumericEntryCoordinator invalidate]
  -[NPKStandaloneProvisioningNumericEntryCoordinator completionHandler]
  -[NPKStandaloneProvisioningNumericEntryCoordinator currentIndex]
  -[NPKStandaloneProvisioningNumericEntryCoordinator _showCurrentPasscodePromptOrComplete]
  -[NPKStandaloneProvisioningNumericEntryCoordinator _invokeCompletionHandler]
  -[NPKStandaloneProvisioningNumericEntryCoordinator requestNumericInputForFields:completion:]
  -[NPKStandaloneProvisioningNumericEntryCoordinator _showNextPasscodePromptOrComplete]
  -[NPKStandaloneProvisioningNumericEntryCoordinator providedFields]
  -[NPKStandaloneProvisioningNumericEntryCoordinator setProvidedFields:]
  -[NPKStandaloneProvisioningNumericEntryCoordinator completedFields]
  -[NPKStandaloneProvisioningNumericEntryCoordinator setCompletedFields:]


NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationCodeStepContext : PBCodable <NSCopying>
  // instance methods
  -[NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationCodeStepContext mergeFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationCodeStepContext dictionaryRepresentation]
  -[NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationCodeStepContext writeTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationCodeStepContext isEqual:]
  -[NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationCodeStepContext copyTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationCodeStepContext readFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationCodeStepContext copyWithZone:]


NPKRemoteInterfacePresenter : NSObject
 @property  NSXPCConnection *xpcConnection
 @property  <NPKRemoteInterfacePresenterDelegate> *delegate

  // instance methods
  -[NPKRemoteInterfacePresenter setXpcConnection:]
  -[NPKRemoteInterfacePresenter xpcConnection]
  -[NPKRemoteInterfacePresenter .cxx_destruct]
  -[NPKRemoteInterfacePresenter setDelegate:]
  -[NPKRemoteInterfacePresenter init]
  -[NPKRemoteInterfacePresenter delegate]
  -[NPKRemoteInterfacePresenter presentContactlessInterfaceForPassWithUniqueIdentifier:fromSource:completion:]
  -[NPKRemoteInterfacePresenter clearInAppInterfaceForSkeletonPeerPaymentQuote:withError:]
  -[NPKRemoteInterfacePresenter presentPasscodeUpgradeRequestWithChangeType:completion:]
  -[NPKRemoteInterfacePresenter tearDownPasscodeUpgradeRequestWithPasscodeChanged:error:]
  -[NPKRemoteInterfacePresenter presentInAppPaymentInterfaceWithPaymentRequest:forHostApplicationName:hostBundleIdentifier:hostProcessIdentifier:hostIdentifier:orientation:completion:]
  -[NPKRemoteInterfacePresenter presentContinuityPaymentInterfaceWithRemotePaymentRequest:completion:]
  -[NPKRemoteInterfacePresenter showInAppInterfaceWithSkeletonPeerPaymentQuote:completion:]
  -[NPKRemoteInterfacePresenter presentSetupApplePayAlert:]


NPKProtoOwnershipTokenResponse : PBCodable <NSCopying>
 @property  BOOL hasIdentifier
 @property  NSString *identifier
 @property  BOOL hasToken
 @property  NSString *token

  // instance methods
  -[NPKProtoOwnershipTokenResponse setToken:]
  -[NPKProtoOwnershipTokenResponse mergeFrom:]
  -[NPKProtoOwnershipTokenResponse .cxx_destruct]
  -[NPKProtoOwnershipTokenResponse hasToken]
  -[NPKProtoOwnershipTokenResponse dictionaryRepresentation]
  -[NPKProtoOwnershipTokenResponse writeTo:]
  -[NPKProtoOwnershipTokenResponse isEqual:]
  -[NPKProtoOwnershipTokenResponse copyTo:]
  -[NPKProtoOwnershipTokenResponse readFrom:]
  -[NPKProtoOwnershipTokenResponse identifier]
  -[NPKProtoOwnershipTokenResponse token]
  -[NPKProtoOwnershipTokenResponse setIdentifier:]
  -[NPKProtoOwnershipTokenResponse hasIdentifier]
  -[NPKProtoOwnershipTokenResponse copyWithZone:]


NPKPassSyncChange : NSObject <NSCopying, NSSecureCoding>
 @property  NSUUID *changeUUID
 @property  NSData *reconciledStateHash
 @property  unsigned long reconciledStateVersion
 @property  unsigned long changeType
 @property  NSString *uniqueID
 @property  NPKPassSyncStateItem *syncStateItem
 @property  NSData *passData
 @property  NSData *baseManifestHashForPartialUpdate
 @property  NSDictionary *remoteAssetsForPartialUpdate

  // class methods
  +[NPKPassSyncChange supportsSecureCoding]

  // instance methods
  -[NPKPassSyncChange changeType]
  -[NPKPassSyncChange initWithCoder:]
  -[NPKPassSyncChange uniqueID]
  -[NPKPassSyncChange .cxx_destruct]
  -[NPKPassSyncChange isEqual:]
  -[NPKPassSyncChange setChangeType:]
  -[NPKPassSyncChange setUniqueID:]
  -[NPKPassSyncChange copyWithZone:]
  -[NPKPassSyncChange encodeWithCoder:]
  -[NPKPassSyncChange passData]
  -[NPKPassSyncChange initWithProtoPassSyncChange:]
  -[NPKPassSyncChange changeUUID]
  -[NPKPassSyncChange setPassData:]
  -[NPKPassSyncChange reconciledStateHash]
  -[NPKPassSyncChange protoPassSyncChange]
  -[NPKPassSyncChange setReconciledStateHash:]
  -[NPKPassSyncChange reconciledStateVersion]
  -[NPKPassSyncChange syncStateItem]
  -[NPKPassSyncChange baseManifestHashForPartialUpdate]
  -[NPKPassSyncChange remoteAssetsForPartialUpdate]
  -[NPKPassSyncChange setBaseManifestHashForPartialUpdate:]
  -[NPKPassSyncChange setRemoteAssetsForPartialUpdate:]
  -[NPKPassSyncChange initWithChangeUUID:reconciledStateHash:reconciledStateVersion:changeType:uniqueID:syncStateItem:passData:baseManifestHashForPartialUpdate:remoteAssetsForPartialUpdate:]
  -[NPKPassSyncChange initWithChangeUUID:reconciledStateHash:reconciledStateVersion:changeType:uniqueID:syncStateItem:passData:]
  -[NPKPassSyncChange isEqualToChangeIgnoringUUID:]
  -[NPKPassSyncChange setChangeUUID:]
  -[NPKPassSyncChange isEqualToChange:]
  -[NPKPassSyncChange setReconciledStateVersion:]
  -[NPKPassSyncChange setSyncStateItem:]


NPKProtoStandalonePaymentSetupMoreInfoItem : PBCodable <NSCopying>
 @property  BOOL hasTitle
 @property  NSString *title
 @property  BOOL hasBody
 @property  NSString *body
 @property  BOOL hasLinkText
 @property  NSString *linkText
 @property  BOOL hasLinkURL
 @property  NSString *linkURL
 @property  BOOL hasImageURL
 @property  NSString *imageURL
 @property  BOOL hasImageData
 @property  NSData *imageData

  // instance methods
  -[NPKProtoStandalonePaymentSetupMoreInfoItem mergeFrom:]
  -[NPKProtoStandalonePaymentSetupMoreInfoItem hasTitle]
  -[NPKProtoStandalonePaymentSetupMoreInfoItem linkText]
  -[NPKProtoStandalonePaymentSetupMoreInfoItem body]
  -[NPKProtoStandalonePaymentSetupMoreInfoItem setTitle:]
  -[NPKProtoStandalonePaymentSetupMoreInfoItem imageURL]
  -[NPKProtoStandalonePaymentSetupMoreInfoItem setImageData:]
  -[NPKProtoStandalonePaymentSetupMoreInfoItem .cxx_destruct]
  -[NPKProtoStandalonePaymentSetupMoreInfoItem imageData]
  -[NPKProtoStandalonePaymentSetupMoreInfoItem setImageURL:]
  -[NPKProtoStandalonePaymentSetupMoreInfoItem dictionaryRepresentation]
  -[NPKProtoStandalonePaymentSetupMoreInfoItem hasBody]
  -[NPKProtoStandalonePaymentSetupMoreInfoItem writeTo:]
  -[NPKProtoStandalonePaymentSetupMoreInfoItem linkURL]
  -[NPKProtoStandalonePaymentSetupMoreInfoItem isEqual:]
  -[NPKProtoStandalonePaymentSetupMoreInfoItem copyTo:]
  -[NPKProtoStandalonePaymentSetupMoreInfoItem setLinkURL:]
  -[NPKProtoStandalonePaymentSetupMoreInfoItem readFrom:]
  -[NPKProtoStandalonePaymentSetupMoreInfoItem title]
  -[NPKProtoStandalonePaymentSetupMoreInfoItem setBody:]
  -[NPKProtoStandalonePaymentSetupMoreInfoItem copyWithZone:]
  -[NPKProtoStandalonePaymentSetupMoreInfoItem hasImageData]
  -[NPKProtoStandalonePaymentSetupMoreInfoItem setLinkText:]
  -[NPKProtoStandalonePaymentSetupMoreInfoItem hasImageURL]
  -[NPKProtoStandalonePaymentSetupMoreInfoItem hasLinkText]
  -[NPKProtoStandalonePaymentSetupMoreInfoItem hasLinkURL]


NPKProtoTriggerCloudStoreZoneCreationForAccountRequest : PBRequest <NSCopying>
 @property  NSData *accountData

  // instance methods
  -[NPKProtoTriggerCloudStoreZoneCreationForAccountRequest mergeFrom:]
  -[NPKProtoTriggerCloudStoreZoneCreationForAccountRequest .cxx_destruct]
  -[NPKProtoTriggerCloudStoreZoneCreationForAccountRequest dictionaryRepresentation]
  -[NPKProtoTriggerCloudStoreZoneCreationForAccountRequest writeTo:]
  -[NPKProtoTriggerCloudStoreZoneCreationForAccountRequest isEqual:]
  -[NPKProtoTriggerCloudStoreZoneCreationForAccountRequest copyTo:]
  -[NPKProtoTriggerCloudStoreZoneCreationForAccountRequest readFrom:]
  -[NPKProtoTriggerCloudStoreZoneCreationForAccountRequest copyWithZone:]
  -[NPKProtoTriggerCloudStoreZoneCreationForAccountRequest accountData]
  -[NPKProtoTriggerCloudStoreZoneCreationForAccountRequest setAccountData:]


NPKProtoProvisionPeerPaymentPassRequest : PBRequest <NSCopying>
  // instance methods
  -[NPKProtoProvisionPeerPaymentPassRequest mergeFrom:]
  -[NPKProtoProvisionPeerPaymentPassRequest dictionaryRepresentation]
  -[NPKProtoProvisionPeerPaymentPassRequest writeTo:]
  -[NPKProtoProvisionPeerPaymentPassRequest isEqual:]
  -[NPKProtoProvisionPeerPaymentPassRequest copyTo:]
  -[NPKProtoProvisionPeerPaymentPassRequest readFrom:]
  -[NPKProtoProvisionPeerPaymentPassRequest copyWithZone:]


NPKPeerPaymentAccountManager : NSObject
 @property  PKPeerPaymentAccount *account
 @property  PKPeerPaymentService *peerPaymentService

  // class methods
  +[NPKPeerPaymentAccountManager sharedInstance]

  // instance methods
  -[NPKPeerPaymentAccountManager setAccount:]
  -[NPKPeerPaymentAccountManager account]
  -[NPKPeerPaymentAccountManager _handleAccountChanged:]
  -[NPKPeerPaymentAccountManager .cxx_destruct]
  -[NPKPeerPaymentAccountManager init]
  -[NPKPeerPaymentAccountManager peerPaymentService]
  -[NPKPeerPaymentAccountManager initWithPeerPaymentService:]
  -[NPKPeerPaymentAccountManager _updateAccount]


NPKIDVRemoteDeviceSession : NSObject <PKXPCServiceDelegate, NPKIDVRemoteDeviceNotificationManager>
 @property  NSString *deviceID
 @property  unsigned long status
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NPKIDVRemoteDeviceSession sessionForDeviceID:completion:]

  // instance methods
  -[NPKIDVRemoteDeviceSession credentialPreflightStatusForType:completion:]
  -[NPKIDVRemoteDeviceSession configureWithPartition:ackHandler:]
  -[NPKIDVRemoteDeviceSession registerForEvents:withRemoteProcessServiceName:completion:]
  -[NPKIDVRemoteDeviceSession .cxx_destruct]
  -[NPKIDVRemoteDeviceSession deviceID]
  -[NPKIDVRemoteDeviceSession invalidateSession]
  -[NPKIDVRemoteDeviceSession prearmCredentialWithAuthorizationToken:completion:]
  -[NPKIDVRemoteDeviceSession remoteService:didEstablishConnection:]
  -[NPKIDVRemoteDeviceSession init]
  -[NPKIDVRemoteDeviceSession credentialIdentifiersInPartitions:completion:]
  -[NPKIDVRemoteDeviceSession provisionCredentialWithType:metadata:policyIdentifier:credentialIdentifier:attestations:completion:]
  -[NPKIDVRemoteDeviceSession addNotificationWithType:documentType:issuerName:completion:]
  -[NPKIDVRemoteDeviceSession remoteService:didInterruptConnection:]
  -[NPKIDVRemoteDeviceSession status]
  -[NPKIDVRemoteDeviceSession createCredentialInPartition:options:completion:]
  -[NPKIDVRemoteDeviceSession unregisterFromEvents:withRemoteProcessServiceName:completion:]
  -[NPKIDVRemoteDeviceSession setStatus:]
  -[NPKIDVRemoteDeviceSession deleteCredential:completion:]
  -[NPKIDVRemoteDeviceSession setDeviceID:]
  -[NPKIDVRemoteDeviceSession dealloc]
  -[NPKIDVRemoteDeviceSession establishPrearmTrust:completion:]
  -[NPKIDVRemoteDeviceSession nonceForAuthorizationTokenWithCompletion:]
  -[NPKIDVRemoteDeviceSession _remoteObjectProxyWithFailureHandler:]
  -[NPKIDVRemoteDeviceSession deleteGlobalAuthACLWithCompletion:]
  -[NPKIDVRemoteDeviceSession propertiesOfCredential:completion:]
  -[NPKIDVRemoteDeviceSession _errorHandlerWithCompletion:]
  -[NPKIDVRemoteDeviceSession _confirmRemoteDeviceID:withCompletion:]
  -[NPKIDVRemoteDeviceSession _generateKeyWithType:credentialIdentifier:completion:]
  -[NPKIDVRemoteDeviceSession generateKeySigningKeyForCredential:completion:]
  -[NPKIDVRemoteDeviceSession generateDeviceEncryptionKeyForCredential:completion:]
  -[NPKIDVRemoteDeviceSession generatePresentmentKeyForCredential:completion:]
  -[NPKIDVRemoteDeviceSession elementsOfCredential:elementIdentifiers:completion:]


NPKIDVRemoteDeviceServiceEventsCoordinator : NSObject
 @property  NSString *remoteDeviceID

  // instance methods
  -[NPKIDVRemoteDeviceServiceEventsCoordinator .cxx_destruct]
  -[NPKIDVRemoteDeviceServiceEventsCoordinator init]
  -[NPKIDVRemoteDeviceServiceEventsCoordinator remoteDeviceID]
  -[NPKIDVRemoteDeviceServiceEventsCoordinator registerEvents:forServiceName:]
  -[NPKIDVRemoteDeviceServiceEventsCoordinator unregisterEvents:forServiceName:]
  -[NPKIDVRemoteDeviceServiceEventsCoordinator initializeWithDevice:]
  -[NPKIDVRemoteDeviceServiceEventsCoordinator teardownCurrentRemoteDeviceContextWithReason:]
  -[NPKIDVRemoteDeviceServiceEventsCoordinator setNeedsPrearmCredential:]
  -[NPKIDVRemoteDeviceServiceEventsCoordinator insideLockTeardownCurrentRemoteDeviceContextWithReason:]
  -[NPKIDVRemoteDeviceServiceEventsCoordinator _notifyProcessWithServiceNames:deviceEvent:forDeviceID:]
  -[NPKIDVRemoteDeviceServiceEventsCoordinator _insideLockPersistServiceContext]


NPKProtoPasscodeUpgradeFlowApplyPasscodeRestrictionsRequest : PBRequest <NSCopying>
 @property  BOOL hasEnforcedPolicy
 @property  int enforcedPolicy

  // instance methods
  -[NPKProtoPasscodeUpgradeFlowApplyPasscodeRestrictionsRequest mergeFrom:]
  -[NPKProtoPasscodeUpgradeFlowApplyPasscodeRestrictionsRequest dictionaryRepresentation]
  -[NPKProtoPasscodeUpgradeFlowApplyPasscodeRestrictionsRequest writeTo:]
  -[NPKProtoPasscodeUpgradeFlowApplyPasscodeRestrictionsRequest isEqual:]
  -[NPKProtoPasscodeUpgradeFlowApplyPasscodeRestrictionsRequest copyTo:]
  -[NPKProtoPasscodeUpgradeFlowApplyPasscodeRestrictionsRequest readFrom:]
  -[NPKProtoPasscodeUpgradeFlowApplyPasscodeRestrictionsRequest copyWithZone:]
  -[NPKProtoPasscodeUpgradeFlowApplyPasscodeRestrictionsRequest enforcedPolicy]
  -[NPKProtoPasscodeUpgradeFlowApplyPasscodeRestrictionsRequest setEnforcedPolicy:]
  -[NPKProtoPasscodeUpgradeFlowApplyPasscodeRestrictionsRequest setHasEnforcedPolicy:]
  -[NPKProtoPasscodeUpgradeFlowApplyPasscodeRestrictionsRequest hasEnforcedPolicy]
  -[NPKProtoPasscodeUpgradeFlowApplyPasscodeRestrictionsRequest enforcedPolicyAsString:]
  -[NPKProtoPasscodeUpgradeFlowApplyPasscodeRestrictionsRequest StringAsEnforcedPolicy:]


NPKProtoGizmoInitiatedDeletePassRequest : PBRequest <NSCopying>
 @property  NSString *passID

  // instance methods
  -[NPKProtoGizmoInitiatedDeletePassRequest mergeFrom:]
  -[NPKProtoGizmoInitiatedDeletePassRequest passID]
  -[NPKProtoGizmoInitiatedDeletePassRequest .cxx_destruct]
  -[NPKProtoGizmoInitiatedDeletePassRequest dictionaryRepresentation]
  -[NPKProtoGizmoInitiatedDeletePassRequest writeTo:]
  -[NPKProtoGizmoInitiatedDeletePassRequest isEqual:]
  -[NPKProtoGizmoInitiatedDeletePassRequest copyTo:]
  -[NPKProtoGizmoInitiatedDeletePassRequest readFrom:]
  -[NPKProtoGizmoInitiatedDeletePassRequest setPassID:]
  -[NPKProtoGizmoInitiatedDeletePassRequest copyWithZone:]


NPKExpressPassesManager : NSObject <NPKPassesDataSource>
 @property  NSHashTable *observers
 @property  NSArray *currentPasses
 @property  NSArray *currentPaymentPasses
 @property  NSArray *currentSecureElementPasses
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NPKExpressPassesManager unregisterObserver:]
  -[NPKExpressPassesManager registerObserver:]
  -[NPKExpressPassesManager .cxx_destruct]
  -[NPKExpressPassesManager setObservers:]
  -[NPKExpressPassesManager init]
  -[NPKExpressPassesManager passes]
  -[NPKExpressPassesManager paymentPasses]
  -[NPKExpressPassesManager enableRemoteUpdates]
  -[NPKExpressPassesManager observers]
  -[NPKExpressPassesManager removePass:]
  -[NPKExpressPassesManager reloadPasses]
  -[NPKExpressPassesManager reloadPassesWithCompletion:]
  -[NPKExpressPassesManager currentPasses]
  -[NPKExpressPassesManager currentPaymentPasses]
  -[NPKExpressPassesManager currentSecureElementPasses]
  -[NPKExpressPassesManager setCurrentPasses:]
  -[NPKExpressPassesManager setCurrentPaymentPasses:]
  -[NPKExpressPassesManager setCurrentSecureElementPasses:]
  -[NPKExpressPassesManager passForUniqueID:]
  -[NPKExpressPassesManager secureElementPasses]
  -[NPKExpressPassesManager expiredPasses]
  -[NPKExpressPassesManager shouldAllowMovingItemAtIndex:toIndex:]
  -[NPKExpressPassesManager movePassAtIndex:toIndex:]
  -[NPKExpressPassesManager unarchivePass:]
  -[NPKExpressPassesManager setDefaultPaymentPass:]
  -[NPKExpressPassesManager suppressRemoteUpdates]
  -[NPKExpressPassesManager updateWithExpressPass:siblingExpressPasses:]


NPKMessageCompositionManager : NSObject
  // instance methods
  -[NPKMessageCompositionManager .cxx_destruct]
  -[NPKMessageCompositionManager init]
  -[NPKMessageCompositionManager dealloc]
  -[NPKMessageCompositionManager _sendComposition:toRecipient:completion:]
  -[NPKMessageCompositionManager sendMessage:withAppExtensionIdentifier:toRecipient:completion:]


NPKProtoPassSyncReconciledStateAccepted : PBCodable <NSCopying>
 @property  BOOL hasReconciledStateHash
 @property  NSData *reconciledStateHash

  // instance methods
  -[NPKProtoPassSyncReconciledStateAccepted mergeFrom:]
  -[NPKProtoPassSyncReconciledStateAccepted .cxx_destruct]
  -[NPKProtoPassSyncReconciledStateAccepted dictionaryRepresentation]
  -[NPKProtoPassSyncReconciledStateAccepted writeTo:]
  -[NPKProtoPassSyncReconciledStateAccepted isEqual:]
  -[NPKProtoPassSyncReconciledStateAccepted copyTo:]
  -[NPKProtoPassSyncReconciledStateAccepted readFrom:]
  -[NPKProtoPassSyncReconciledStateAccepted copyWithZone:]
  -[NPKProtoPassSyncReconciledStateAccepted reconciledStateHash]
  -[NPKProtoPassSyncReconciledStateAccepted setReconciledStateHash:]
  -[NPKProtoPassSyncReconciledStateAccepted hasReconciledStateHash]


NPKProtoAcceptSubcredentialInvitationWithIdentifierRequest : PBRequest <NSCopying>
 @property  BOOL hasInvitationIdentifier
 @property  NSString *invitationIdentifier
 @property  BOOL hasMetadataData
 @property  NSData *metadataData

  // instance methods
  -[NPKProtoAcceptSubcredentialInvitationWithIdentifierRequest mergeFrom:]
  -[NPKProtoAcceptSubcredentialInvitationWithIdentifierRequest .cxx_destruct]
  -[NPKProtoAcceptSubcredentialInvitationWithIdentifierRequest dictionaryRepresentation]
  -[NPKProtoAcceptSubcredentialInvitationWithIdentifierRequest writeTo:]
  -[NPKProtoAcceptSubcredentialInvitationWithIdentifierRequest isEqual:]
  -[NPKProtoAcceptSubcredentialInvitationWithIdentifierRequest copyTo:]
  -[NPKProtoAcceptSubcredentialInvitationWithIdentifierRequest readFrom:]
  -[NPKProtoAcceptSubcredentialInvitationWithIdentifierRequest invitationIdentifier]
  -[NPKProtoAcceptSubcredentialInvitationWithIdentifierRequest setInvitationIdentifier:]
  -[NPKProtoAcceptSubcredentialInvitationWithIdentifierRequest copyWithZone:]
  -[NPKProtoAcceptSubcredentialInvitationWithIdentifierRequest setMetadataData:]
  -[NPKProtoAcceptSubcredentialInvitationWithIdentifierRequest metadataData]
  -[NPKProtoAcceptSubcredentialInvitationWithIdentifierRequest hasMetadataData]
  -[NPKProtoAcceptSubcredentialInvitationWithIdentifierRequest hasInvitationIdentifier]


NPKProtoStandalonePaymentProvisioningFlowSecondaryManualEntryStepContext : PBCodable <NSCopying>
 @property  NPKProtoStandalonePaymentProvisioningFlowManualEntryStepContext *manualEntryStepContext
 @property  BOOL hasRemoteCredential
 @property  NPKProtoStandalonePaymentRemoteCredential *remoteCredential
 @property  BOOL hasCredential
 @property  NPKProtoStandalonePaymentCredentialUnion *credential
 @property  BOOL hasAllowsAddingDifferentCard
 @property  BOOL allowsAddingDifferentCard

  // instance methods
  -[NPKProtoStandalonePaymentProvisioningFlowSecondaryManualEntryStepContext credential]
  -[NPKProtoStandalonePaymentProvisioningFlowSecondaryManualEntryStepContext mergeFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowSecondaryManualEntryStepContext .cxx_destruct]
  -[NPKProtoStandalonePaymentProvisioningFlowSecondaryManualEntryStepContext hasCredential]
  -[NPKProtoStandalonePaymentProvisioningFlowSecondaryManualEntryStepContext dictionaryRepresentation]
  -[NPKProtoStandalonePaymentProvisioningFlowSecondaryManualEntryStepContext setCredential:]
  -[NPKProtoStandalonePaymentProvisioningFlowSecondaryManualEntryStepContext writeTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowSecondaryManualEntryStepContext isEqual:]
  -[NPKProtoStandalonePaymentProvisioningFlowSecondaryManualEntryStepContext copyTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowSecondaryManualEntryStepContext setRemoteCredential:]
  -[NPKProtoStandalonePaymentProvisioningFlowSecondaryManualEntryStepContext readFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowSecondaryManualEntryStepContext remoteCredential]
  -[NPKProtoStandalonePaymentProvisioningFlowSecondaryManualEntryStepContext copyWithZone:]
  -[NPKProtoStandalonePaymentProvisioningFlowSecondaryManualEntryStepContext setManualEntryStepContext:]
  -[NPKProtoStandalonePaymentProvisioningFlowSecondaryManualEntryStepContext manualEntryStepContext]
  -[NPKProtoStandalonePaymentProvisioningFlowSecondaryManualEntryStepContext setAllowsAddingDifferentCard:]
  -[NPKProtoStandalonePaymentProvisioningFlowSecondaryManualEntryStepContext allowsAddingDifferentCard]
  -[NPKProtoStandalonePaymentProvisioningFlowSecondaryManualEntryStepContext hasRemoteCredential]
  -[NPKProtoStandalonePaymentProvisioningFlowSecondaryManualEntryStepContext setHasAllowsAddingDifferentCard:]
  -[NPKProtoStandalonePaymentProvisioningFlowSecondaryManualEntryStepContext hasAllowsAddingDifferentCard]


NPKProtoStandaloneVerificationChannel : PBCodable <NSCopying>
 @property  BOOL hasIdentifier
 @property  NSString *identifier
 @property  BOOL hasType
 @property  int type
 @property  BOOL hasTypeDescriptionUnlocalized
 @property  NSString *typeDescriptionUnlocalized
 @property  BOOL hasTypeDescription
 @property  NSString *typeDescription
 @property  BOOL hasOrganizationName
 @property  NSString *organizationName
 @property  BOOL hasRequiresUserInteraction
 @property  BOOL requiresUserInteraction
 @property  BOOL hasContactPoint
 @property  NSString *contactPoint
 @property  BOOL hasSourceAddress
 @property  NSString *sourceAddress

  // instance methods
  -[NPKProtoStandaloneVerificationChannel organizationName]
  -[NPKProtoStandaloneVerificationChannel setOrganizationName:]
  -[NPKProtoStandaloneVerificationChannel mergeFrom:]
  -[NPKProtoStandaloneVerificationChannel setType:]
  -[NPKProtoStandaloneVerificationChannel .cxx_destruct]
  -[NPKProtoStandaloneVerificationChannel dictionaryRepresentation]
  -[NPKProtoStandaloneVerificationChannel writeTo:]
  -[NPKProtoStandaloneVerificationChannel setHasType:]
  -[NPKProtoStandaloneVerificationChannel hasType]
  -[NPKProtoStandaloneVerificationChannel isEqual:]
  -[NPKProtoStandaloneVerificationChannel copyTo:]
  -[NPKProtoStandaloneVerificationChannel hasOrganizationName]
  -[NPKProtoStandaloneVerificationChannel typeAsString:]
  -[NPKProtoStandaloneVerificationChannel readFrom:]
  -[NPKProtoStandaloneVerificationChannel setTypeDescription:]
  -[NPKProtoStandaloneVerificationChannel identifier]
  -[NPKProtoStandaloneVerificationChannel StringAsType:]
  -[NPKProtoStandaloneVerificationChannel contactPoint]
  -[NPKProtoStandaloneVerificationChannel typeDescription]
  -[NPKProtoStandaloneVerificationChannel setContactPoint:]
  -[NPKProtoStandaloneVerificationChannel sourceAddress]
  -[NPKProtoStandaloneVerificationChannel setRequiresUserInteraction:]
  -[NPKProtoStandaloneVerificationChannel setSourceAddress:]
  -[NPKProtoStandaloneVerificationChannel requiresUserInteraction]
  -[NPKProtoStandaloneVerificationChannel typeDescriptionUnlocalized]
  -[NPKProtoStandaloneVerificationChannel type]
  -[NPKProtoStandaloneVerificationChannel setIdentifier:]
  -[NPKProtoStandaloneVerificationChannel hasIdentifier]
  -[NPKProtoStandaloneVerificationChannel copyWithZone:]
  -[NPKProtoStandaloneVerificationChannel setTypeDescriptionUnlocalized:]
  -[NPKProtoStandaloneVerificationChannel hasTypeDescriptionUnlocalized]
  -[NPKProtoStandaloneVerificationChannel hasTypeDescription]
  -[NPKProtoStandaloneVerificationChannel setHasRequiresUserInteraction:]
  -[NPKProtoStandaloneVerificationChannel hasRequiresUserInteraction]
  -[NPKProtoStandaloneVerificationChannel hasContactPoint]
  -[NPKProtoStandaloneVerificationChannel hasSourceAddress]


NPKGizmoDatabaseManifestEntry : NSObject
 @property  NSString *uniqueID
 @property  NSArray *localManifestHashes
 @property  NSArray *remoteManifestHashes

  // instance methods
  -[NPKGizmoDatabaseManifestEntry uniqueID]
  -[NPKGizmoDatabaseManifestEntry .cxx_destruct]
  -[NPKGizmoDatabaseManifestEntry setUniqueID:]
  -[NPKGizmoDatabaseManifestEntry localManifestHashes]
  -[NPKGizmoDatabaseManifestEntry remoteManifestHashes]
  -[NPKGizmoDatabaseManifestEntry setLocalManifestHashes:]
  -[NPKGizmoDatabaseManifestEntry setRemoteManifestHashes:]


NPKGizmoDatabase : NSObject
 @property  BOOL passDBIsAvailable
 @property  NSData *libraryHash
 @property  NSDictionary *manifestHashes
 @property  ^{sqlite3=} database
 @property  ^{sqlite3_stmt=} deleteStatement
 @property  ^{sqlite3_stmt=} insertStatement
 @property  ^{sqlite3_stmt=} selectPassDataStatement
 @property  ^{sqlite3_stmt=} selectPassAndImageSetsDataStatement
 @property  ^{sqlite3_stmt=} selectPassDiffStatement
 @property  ^{sqlite3_stmt=} insertDiffStatement
 @property  ^{sqlite3_stmt=} updateDeletePendingStatement
 @property  ^{sqlite3_stmt=} updatePreferredAIDStatement
 @property  ^{sqlite3_stmt=} selectPreferredAIDStatement
 @property  ^{sqlite3_stmt=} selectTransactionWithIdentifierStatement
 @property  ^{sqlite3_stmt=} selectTransactionWithServiceIdentifierStatement
 @property  ^{sqlite3_stmt=} insertTransactionSourceIdentifierForPassStatement
 @property  ^{sqlite3_stmt=} deleteTransactionSourceIdentifierForPassStatement
 @property  ^{sqlite3_stmt=} deleteTransactionsForTransactionSourceStatement
 @property  ^{sqlite3_stmt=} trimTransactionsForTransactionSourceStatement
 @property  ^{sqlite3_stmt=} selectTransitAppletStateForPassStatement
 @property  ^{sqlite3_stmt=} updateTransitAppletStateForPassStatement
 @property  ^{sqlite3_stmt=} insertEphemeralTransactionStatement
 @property  ^{sqlite3_stmt=} deleteEphemeralTransactionByTransactionSourceIdentifierStatement
 @property  ^{sqlite3_stmt=} currentEphemeralTransactionIdentifierStatement
 @property  ^{sqlite3_stmt=} selectLastAddValueAmountForPassStatement
 @property  ^{sqlite3_stmt=} updateLastAddValueAmountForPassStatement
 @property  ^{sqlite3_stmt=} selectPendingAddValueDateForPassStatement
 @property  ^{sqlite3_stmt=} updatePendingAddValueDateForPassStatement
 @property  NSArray *passDescriptions
 @property  unsigned long numberOfPasses

  // class methods
  +[NPKGizmoDatabase sharedDatabase]
  +[NPKGizmoDatabase _migrationDataSource]
  +[NPKGizmoDatabase _migrationDelegateQueue]
  +[NPKGizmoDatabase latestWatchOSMajorVersion]
  +[NPKGizmoDatabase maxDatabaseVersion]
  +[NPKGizmoDatabase setMigrationDataSource:]

  // instance methods
  -[NPKGizmoDatabase database]
  -[NPKGizmoDatabase .cxx_destruct]
  -[NPKGizmoDatabase init]
  -[NPKGizmoDatabase dealloc]
  -[NPKGizmoDatabase _executeSQL:]
  -[NPKGizmoDatabase passForUniqueID:]
  -[NPKGizmoDatabase manifestHashes]
  -[NPKGizmoDatabase libraryHash]
  -[NPKGizmoDatabase _handleHasMigrationDataSource]
  -[NPKGizmoDatabase setPassDBIsAvailable:]
  -[NPKGizmoDatabase _preconditionsMetForDatabaseOpen]
  -[NPKGizmoDatabase _table:containsColumn:]
  -[NPKGizmoDatabase _enumerateAllPassesForMigration:]
  -[NPKGizmoDatabase _updateNFCPayloadDuringMigration:]
  -[NPKGizmoDatabase _updatePrivateLabelAndCobrandDuringMigration:]
  -[NPKGizmoDatabase _updateDeviceAndPreferredPaymentApplicationsDuringMigration:]
  -[NPKGizmoDatabase _updateIngestedDatesDuringMigration:]
  -[NPKGizmoDatabase _updateEffectivePaymentApplicationStateDuringMigration:]
  -[NPKGizmoDatabase _updateHasUserSelectableContactlessPaymentApplications:]
  -[NPKGizmoDatabase _updateEncodedPaymentPassDuringMigration:]
  -[NPKGizmoDatabase _updateHasStoredValueDuringMigration:]
  -[NPKGizmoDatabase _updateSettingsDuringMigration:]
  -[NPKGizmoDatabase _updateCompleteLocalHashesDuringMigration:]
  -[NPKGizmoDatabase _updateAvailableActionsDuringMigration:]
  -[NPKGizmoDatabase _updateOrganizationNamesDuringMigration:]
  -[NPKGizmoDatabase _updateFrontAndBackFieldBucketsDuringMigration:]
  -[NPKGizmoDatabase _updateLocalizedDescriptionDuringMigration:]
  -[NPKGizmoDatabase _updateDevicePaymentApplicationsDuringMigration:]
  -[NPKGizmoDatabase _updatePrimaryContactlessAndInAppPaymentApplicationsDuringMigration:]
  -[NPKGizmoDatabase _updateEncodedImageSetsDuringMigration:]
  -[NPKGizmoDatabase _repairEncodedImagesDuringMigration:]
  -[NPKGizmoDatabase _updateIssuerCountryCodesDuringMigration:]
  -[NPKGizmoDatabase _updateExpressPassTypesMaskDuringMigration:]
  -[NPKGizmoDatabase _updateCompleteRemoteHashesDuringMigration]
  -[NPKGizmoDatabase _updateTransactionSourceIdentifiersDuringMigration:]
  -[NPKGizmoDatabase _migrateDatabase:]
  -[NPKGizmoDatabase _notifyDatabaseChangedExternally]
  -[NPKGizmoDatabase _notifyForFirstUnlock]
  -[NPKGizmoDatabase _decodeObjectOfClass:fromStatement:column:]
  -[NPKGizmoDatabase _decodeObjectOfClasses:fromStatement:column:]
  -[NPKGizmoDatabase _loadInitialManifestLocked]
  -[NPKGizmoDatabase _savePassLocked:locallyAdded:wasUpdate:]
  -[NPKGizmoDatabase _libraryHashLockedForWatchOSMajorVersion:]
  -[NPKGizmoDatabase _notifyDatabaseChangedWithNoop:]
  -[NPKGizmoDatabase _saveDiffLocked:forPassWithUniqueID:]
  -[NPKGizmoDatabase _removePassWithUniqueIDLocked:]
  -[NPKGizmoDatabase _performTransactionWithBlock:]
  -[NPKGizmoDatabase _saveTransaction:forTransactionSourceIdentifier:withPaymentCredentialType:shouldTrim:]
  -[NPKGizmoDatabase _saveTransactionLocked:forTransactionSourceIdentifier:]
  -[NPKGizmoDatabase _trimTransactionsForTransactionSourceIdentifierLocked:withPaymentCredentialType:]
  -[NPKGizmoDatabase _removeTransactionWithIdentifier:]
  -[NPKGizmoDatabase _removeTransactionsForTransactionSource:]
  -[NPKGizmoDatabase _transactionsForTransactionSourceIdentifierLocked:withTransactionSource:withBackingData:startDate:endDate:orderByDate:limit:]
  -[NPKGizmoDatabase _transactionWithIdentifierLocked:]
  -[NPKGizmoDatabase _transactionWithServiceIdentifierLocked:]
  -[NPKGizmoDatabase _transactionSourceIdentifierForTransactionWithIdentifierLocked:]
  -[NPKGizmoDatabase _transactionSourceIdentifierForTransactionWithServiceIdentifierLocked:]
  -[NPKGizmoDatabase _transactionSourceIdentifierForPassUniqueIdentifierLocked:]
  -[NPKGizmoDatabase _passUniqueIdentifierForTransactionSourceIdentifierLocked:]
  -[NPKGizmoDatabase _transitAppletStateForPassWithUniqueIDLocked:]
  -[NPKGizmoDatabase _setTransitAppletStateLocked:forPassWithUniqueID:]
  -[NPKGizmoDatabase _paymentBalancesForPassWithUniqueIDLocked:]
  -[NPKGizmoDatabase _setPaymentBalancesLocked:forPassWithUniqueID:]
  -[NPKGizmoDatabase _subcredentialsForPassWithUniqueIDLocked:]
  -[NPKGizmoDatabase _setSubcredentialsLocked:forPassWithUniqueID:]
  -[NPKGizmoDatabase _setCurrentEphemeralTransactionIdentifier:forTransactionSourceIdentifier:]
  -[NPKGizmoDatabase _currentEphemeralTransactionIdentifierForTransactionSourceIdentifier:]
  -[NPKGizmoDatabase _setLastAddValueAmountLocked:forPassWithUniqueID:]
  -[NPKGizmoDatabase _lastAddValueAmountForPassWithUniqueIDLocked:]
  -[NPKGizmoDatabase _setPendingAddValueDateLocked:forPassWithUniqueID:]
  -[NPKGizmoDatabase _pendingAddValueDateForPassWithUniqueIDLocked:]
  -[NPKGizmoDatabase passDescriptions]
  -[NPKGizmoDatabase transactionSourceIdentifierForPassWithUniqueID:]
  -[NPKGizmoDatabase transactionsForTransactionSourceIdentifier:withTransactionSource:withBackingData:startDate:endDate:orderedByDate:limit:]
  -[NPKGizmoDatabase currentEphemeralTransactionIdentifierForTransactionSourceIdentifier:]
  -[NPKGizmoDatabase paymentBalancesForPassWithUniqueID:]
  -[NPKGizmoDatabase subcredentialsForPassWithUniqueID:]
  -[NPKGizmoDatabase setTransitAppletState:forPassWithUniqueID:]
  -[NPKGizmoDatabase setLastAddValueAmount:forPassWithUniqueID:]
  -[NPKGizmoDatabase setPendingAddValueDate:forPassWithUniqueID:]
  -[NPKGizmoDatabase setPreferredPaymentApplication:forPaymentPass:]
  -[NPKGizmoDatabase setCurrentEphemeralTransactionIdentifier:forTransactionSourceIdentifier:]
  -[NPKGizmoDatabase setPaymentBalances:forPassWithUniqueID:]
  -[NPKGizmoDatabase setSubcredentials:forPassWithUniqueID:]
  -[NPKGizmoDatabase _notifyDatabaseChangedWithNoop:firstUnlock:]
  -[NPKGizmoDatabase _passDBIsAvailableLocked]
  -[NPKGizmoDatabase _passForUniqueIDLocked:includeImageSets:]
  -[NPKGizmoDatabase _getPreferredPaymentApplicationForPaymentPass:aid:]
  -[NPKGizmoDatabase _getDeletePendingForUniqueID:]
  -[NPKGizmoDatabase deleteStatement]
  -[NPKGizmoDatabase insertStatement]
  -[NPKGizmoDatabase _createTransactionSourceIdentifierIfNecessaryForPassWithUniqueIDLocked:]
  -[NPKGizmoDatabase deleteTransactionsForTransactionSourceStatement]
  -[NPKGizmoDatabase _removeTransactionSourceIdentifierForPassWithUniqueIDLocked:]
  -[NPKGizmoDatabase insertTransactionStatement]
  -[NPKGizmoDatabase removeTransactionWithServiceIdentifierStatement]
  -[NPKGizmoDatabase removeTransactionStatement]
  -[NPKGizmoDatabase trimTransactionsForTransactionSourceStatement]
  -[NPKGizmoDatabase selectTransactionsStatementWithTransactionSource:orderByDate:]
  -[NPKGizmoDatabase selectTransactionWithIdentifierStatement]
  -[NPKGizmoDatabase selectTransactionWithServiceIdentifierStatement]
  -[NPKGizmoDatabase selectTransactionSourceIdentifierForTransactionWithIdentifierStatement]
  -[NPKGizmoDatabase insertTransactionSourceIdentifierForPassStatement]
  -[NPKGizmoDatabase deleteTransactionSourceIdentifierForPassStatement]
  -[NPKGizmoDatabase selectTransactionSourceIdentifierForTransactionWithServiceIdentifierStatement]
  -[NPKGizmoDatabase selectTransactionSourceIdentifierForPassUniqueIdentifierStatement]
  -[NPKGizmoDatabase selectPassUniqueIdentifierForTransactionSourceIdentifierStatement]
  -[NPKGizmoDatabase selectTransitAppletStateForPassStatement]
  -[NPKGizmoDatabase updateTransitAppletStateForPassStatement]
  -[NPKGizmoDatabase insertEphemeralTransactionStatement]
  -[NPKGizmoDatabase deleteEphemeralTransactionByTransactionSourceIdentifierStatement]
  -[NPKGizmoDatabase currentEphemeralTransactionIdentifierStatement]
  -[NPKGizmoDatabase selectLastAddValueAmountForPassStatement]
  -[NPKGizmoDatabase updateLastAddValueAmountForPassStatement]
  -[NPKGizmoDatabase selectPendingAddValueDateForPassStatement]
  -[NPKGizmoDatabase updatePendingAddValueDateForPassStatement]
  -[NPKGizmoDatabase selectBalancesForPassStatement]
  -[NPKGizmoDatabase updateBalancesForPassStatement]
  -[NPKGizmoDatabase selectSubcredentialsForPassStatement]
  -[NPKGizmoDatabase updateSubcredentialsForPassStatement]
  -[NPKGizmoDatabase _executeSQLQuery:processResultsBlock:]
  -[NPKGizmoDatabase selectPassAndImageSetsDataStatement]
  -[NPKGizmoDatabase selectPassDataStatement]
  -[NPKGizmoDatabase selectPassDiffStatement]
  -[NPKGizmoDatabase insertDiffStatement]
  -[NPKGizmoDatabase passForUniqueID:includeImageSets:]
  -[NPKGizmoDatabase _diffForUniqueIDLocked:]
  -[NPKGizmoDatabase updateDeletePendingStatement]
  -[NPKGizmoDatabase selectDeletePendingStatement]
  -[NPKGizmoDatabase updatePreferredAIDStatement]
  -[NPKGizmoDatabase selectPreferredAIDStatement]
  -[NPKGizmoDatabase libraryHashForWatchOSMajorVersion:]
  -[NPKGizmoDatabase manifestHashesForWatchOSMajorVersion:]
  -[NPKGizmoDatabase enumerateAllPassesAndDescriptionsWithBlock:includeImageSets:]
  -[NPKGizmoDatabase _databaseVersionExists:valid:]
  -[NPKGizmoDatabase _updateDatabaseVersionRow:]
  -[NPKGizmoDatabase _insertDatabaseVersionRow:]
  -[NPKGizmoDatabase _inQueue_teardownDB]
  -[NPKGizmoDatabase _attemptDatabaseOpen]
  -[NPKGizmoDatabase savePass:isLocalPass:]
  -[NPKGizmoDatabase saveDiff:forPassWithUniqueID:]
  -[NPKGizmoDatabase removePassWithUniqueID:]
  -[NPKGizmoDatabase rebuildDatabaseWithPasses:]
  -[NPKGizmoDatabase saveTransaction:forPass:]
  -[NPKGizmoDatabase removeTransactionWithIdentifier:]
  -[NPKGizmoDatabase removeTransactionsForTransactionSource:]
  -[NPKGizmoDatabase transactionSourcesForPassWithUniqueID:]
  -[NPKGizmoDatabase transactionWithIdentifier:]
  -[NPKGizmoDatabase transactionWithServiceIdentifier:]
  -[NPKGizmoDatabase transactionSourceIdentifierForTransactionWithIdentifier:]
  -[NPKGizmoDatabase transactionSourceIdentifierForTransactionWithServiceIdentifier:]
  -[NPKGizmoDatabase passUniqueIDForTransactionSourceIdentifier:]
  -[NPKGizmoDatabase transitAppletStateForPassWithUniqueID:]
  -[NPKGizmoDatabase lastAddValueAmountForPassWithUniqueID:]
  -[NPKGizmoDatabase pendingAddValueDateForPassWithUniqueID:]
  -[NPKGizmoDatabase restoreBlockForVolatilePassData]
  -[NPKGizmoDatabase passDBIsAvailable]
  -[NPKGizmoDatabase numberOfPasses]
  -[NPKGizmoDatabase _removeTransactionWithServiceIdentifierLocked:forTransactionSourceIdentifier:]
  -[NPKGizmoDatabase diffForUniqueID:]
  -[NPKGizmoDatabase setDeletePending:forUniqueID:]
  -[NPKGizmoDatabase preferredPaymentApplicationForPaymentPass:]
  -[NPKGizmoDatabase enumerateAllPassesWithBlock:includeImageSets:]
  -[NPKGizmoDatabase hasPassesMatchingPassDescriptionPredicate:]
  -[NPKGizmoDatabase filteredPassesUsingPassDescriptionPredicate:includeImageSets:]
  -[NPKGizmoDatabase _handleDatabaseChangedExternally]
  -[NPKGizmoDatabase teardownDB]
  -[NPKGizmoDatabase _handleFirstUnlock]


NPKPMUButtonListener : NPKButtonListener
 @property  ^{__IOHIDEventSystemClient=} hidSystemClient

  // instance methods
  -[NPKPMUButtonListener init]
  -[NPKPMUButtonListener dealloc]
  -[NPKPMUButtonListener _handleButtonEvent:]
  -[NPKPMUButtonListener _initializeHIDClient]
  -[NPKPMUButtonListener setHidSystemClient:]
  -[NPKPMUButtonListener hidSystemClient]


NPKProtoSetPeerPaymentPreferencesResponse : PBCodable <NSCopying>
 @property  BOOL hasPending
 @property  BOOL pending
 @property  BOOL hasPeerPaymentPreferencesData
 @property  NSData *peerPaymentPreferencesData
 @property  BOOL hasErrorData
 @property  NSData *errorData

  // instance methods
  -[NPKProtoSetPeerPaymentPreferencesResponse pending]
  -[NPKProtoSetPeerPaymentPreferencesResponse mergeFrom:]
  -[NPKProtoSetPeerPaymentPreferencesResponse setPending:]
  -[NPKProtoSetPeerPaymentPreferencesResponse .cxx_destruct]
  -[NPKProtoSetPeerPaymentPreferencesResponse dictionaryRepresentation]
  -[NPKProtoSetPeerPaymentPreferencesResponse writeTo:]
  -[NPKProtoSetPeerPaymentPreferencesResponse isEqual:]
  -[NPKProtoSetPeerPaymentPreferencesResponse copyTo:]
  -[NPKProtoSetPeerPaymentPreferencesResponse readFrom:]
  -[NPKProtoSetPeerPaymentPreferencesResponse copyWithZone:]
  -[NPKProtoSetPeerPaymentPreferencesResponse errorData]
  -[NPKProtoSetPeerPaymentPreferencesResponse hasErrorData]
  -[NPKProtoSetPeerPaymentPreferencesResponse setErrorData:]
  -[NPKProtoSetPeerPaymentPreferencesResponse setHasPending:]
  -[NPKProtoSetPeerPaymentPreferencesResponse hasPending]
  -[NPKProtoSetPeerPaymentPreferencesResponse setPeerPaymentPreferencesData:]
  -[NPKProtoSetPeerPaymentPreferencesResponse hasPeerPaymentPreferencesData]
  -[NPKProtoSetPeerPaymentPreferencesResponse peerPaymentPreferencesData]


NPKProtoBarcodeEventResponse : PBCodable <NSCopying>
 @property  BOOL hasResponseData
 @property  NSData *responseData
 @property  BOOL hasErrorData
 @property  NSData *errorData

  // instance methods
  -[NPKProtoBarcodeEventResponse mergeFrom:]
  -[NPKProtoBarcodeEventResponse .cxx_destruct]
  -[NPKProtoBarcodeEventResponse dictionaryRepresentation]
  -[NPKProtoBarcodeEventResponse writeTo:]
  -[NPKProtoBarcodeEventResponse isEqual:]
  -[NPKProtoBarcodeEventResponse copyTo:]
  -[NPKProtoBarcodeEventResponse readFrom:]
  -[NPKProtoBarcodeEventResponse responseData]
  -[NPKProtoBarcodeEventResponse setResponseData:]
  -[NPKProtoBarcodeEventResponse copyWithZone:]
  -[NPKProtoBarcodeEventResponse errorData]
  -[NPKProtoBarcodeEventResponse hasErrorData]
  -[NPKProtoBarcodeEventResponse setErrorData:]
  -[NPKProtoBarcodeEventResponse hasResponseData]


NPKProtoCreateFidoKeyResponse : PBCodable <NSCopying>
 @property  BOOL hasFidoKeyHash
 @property  NSData *fidoKeyHash
 @property  BOOL hasFidoAttestation
 @property  NSData *fidoAttestation
 @property  BOOL hasErrorData
 @property  NSData *errorData

  // instance methods
  -[NPKProtoCreateFidoKeyResponse mergeFrom:]
  -[NPKProtoCreateFidoKeyResponse .cxx_destruct]
  -[NPKProtoCreateFidoKeyResponse dictionaryRepresentation]
  -[NPKProtoCreateFidoKeyResponse writeTo:]
  -[NPKProtoCreateFidoKeyResponse setFidoAttestation:]
  -[NPKProtoCreateFidoKeyResponse isEqual:]
  -[NPKProtoCreateFidoKeyResponse copyTo:]
  -[NPKProtoCreateFidoKeyResponse readFrom:]
  -[NPKProtoCreateFidoKeyResponse copyWithZone:]
  -[NPKProtoCreateFidoKeyResponse fidoKeyHash]
  -[NPKProtoCreateFidoKeyResponse fidoAttestation]
  -[NPKProtoCreateFidoKeyResponse errorData]
  -[NPKProtoCreateFidoKeyResponse hasErrorData]
  -[NPKProtoCreateFidoKeyResponse setErrorData:]
  -[NPKProtoCreateFidoKeyResponse setFidoKeyHash:]
  -[NPKProtoCreateFidoKeyResponse hasFidoKeyHash]
  -[NPKProtoCreateFidoKeyResponse hasFidoAttestation]


NPKRemotePassSelectionFieldDetectorListener : NPKPassSelectionFieldDetectorListener <NPKPassSelectionFieldDetectorAssertionDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NPKRemotePassSelectionFieldDetectorListener .cxx_destruct]
  -[NPKRemotePassSelectionFieldDetectorListener init]
  -[NPKRemotePassSelectionFieldDetectorListener passSelectionFieldDetectorAssertion:didEnterFieldForPassWithUniqueID:]


NPKProtoAddISO18013BlobsResponse : PBCodable <NSCopying>
 @property  BOOL hasErrorData
 @property  NSData *errorData

  // instance methods
  -[NPKProtoAddISO18013BlobsResponse mergeFrom:]
  -[NPKProtoAddISO18013BlobsResponse .cxx_destruct]
  -[NPKProtoAddISO18013BlobsResponse dictionaryRepresentation]
  -[NPKProtoAddISO18013BlobsResponse writeTo:]
  -[NPKProtoAddISO18013BlobsResponse isEqual:]
  -[NPKProtoAddISO18013BlobsResponse copyTo:]
  -[NPKProtoAddISO18013BlobsResponse readFrom:]
  -[NPKProtoAddISO18013BlobsResponse copyWithZone:]
  -[NPKProtoAddISO18013BlobsResponse errorData]
  -[NPKProtoAddISO18013BlobsResponse hasErrorData]
  -[NPKProtoAddISO18013BlobsResponse setErrorData:]


NPKProtoRemovePassRequest : PBRequest <NSCopying>
 @property  NSString *passID
 @property  BOOL hasLibraryHash
 @property  NPKProtoHash *libraryHash
 @property  BOOL hasResyncID
 @property  unsigned int resyncID
 @property  BOOL hasCatalog
 @property  NPKProtoCatalog *catalog
 @property  BOOL hasLastKnownResyncID
 @property  unsigned int lastKnownResyncID
 @property  BOOL hasSyncID
 @property  unsigned int syncID

  // instance methods
  -[NPKProtoRemovePassRequest catalog]
  -[NPKProtoRemovePassRequest setCatalog:]
  -[NPKProtoRemovePassRequest mergeFrom:]
  -[NPKProtoRemovePassRequest passID]
  -[NPKProtoRemovePassRequest syncID]
  -[NPKProtoRemovePassRequest .cxx_destruct]
  -[NPKProtoRemovePassRequest setSyncID:]
  -[NPKProtoRemovePassRequest dictionaryRepresentation]
  -[NPKProtoRemovePassRequest writeTo:]
  -[NPKProtoRemovePassRequest isEqual:]
  -[NPKProtoRemovePassRequest copyTo:]
  -[NPKProtoRemovePassRequest readFrom:]
  -[NPKProtoRemovePassRequest setPassID:]
  -[NPKProtoRemovePassRequest copyWithZone:]
  -[NPKProtoRemovePassRequest setResyncID:]
  -[NPKProtoRemovePassRequest setHasResyncID:]
  -[NPKProtoRemovePassRequest hasResyncID]
  -[NPKProtoRemovePassRequest resyncID]
  -[NPKProtoRemovePassRequest setLibraryHash:]
  -[NPKProtoRemovePassRequest hasLibraryHash]
  -[NPKProtoRemovePassRequest hasCatalog]
  -[NPKProtoRemovePassRequest setLastKnownResyncID:]
  -[NPKProtoRemovePassRequest setHasLastKnownResyncID:]
  -[NPKProtoRemovePassRequest hasLastKnownResyncID]
  -[NPKProtoRemovePassRequest setHasSyncID:]
  -[NPKProtoRemovePassRequest hasSyncID]
  -[NPKProtoRemovePassRequest libraryHash]
  -[NPKProtoRemovePassRequest lastKnownResyncID]


NPKRemotePassActionEnterValueResponse : NPKRemotePassActionResponse
 @property  NPKProtoRemotePassActionEnterValueResponse *protoResponse

  // instance methods
  -[NPKRemotePassActionEnterValueResponse .cxx_destruct]
  -[NPKRemotePassActionEnterValueResponse protoResponse]
  -[NPKRemotePassActionEnterValueResponse result]
  -[NPKRemotePassActionEnterValueResponse identifier]
  -[NPKRemotePassActionEnterValueResponse setProtoResponse:]
  -[NPKRemotePassActionEnterValueResponse currencyAmount]
  -[NPKRemotePassActionEnterValueResponse initWithIdentifier:cardType:passOrganizationName:result:incrementAmount:currencyCode:image:passLocalizedDesciption:caption:summaryText:message:]
  -[NPKRemotePassActionEnterValueResponse initWithTopUpAmount:fromRequest:withResult:]


NPKIDVRemoteDeviceProtoProvisionCredentialResponse : PBCodable <NSCopying>
 @property  BOOL hasErrorData
 @property  NSData *errorData

  // instance methods
  -[NPKIDVRemoteDeviceProtoProvisionCredentialResponse mergeFrom:]
  -[NPKIDVRemoteDeviceProtoProvisionCredentialResponse .cxx_destruct]
  -[NPKIDVRemoteDeviceProtoProvisionCredentialResponse dictionaryRepresentation]
  -[NPKIDVRemoteDeviceProtoProvisionCredentialResponse writeTo:]
  -[NPKIDVRemoteDeviceProtoProvisionCredentialResponse isEqual:]
  -[NPKIDVRemoteDeviceProtoProvisionCredentialResponse copyTo:]
  -[NPKIDVRemoteDeviceProtoProvisionCredentialResponse readFrom:]
  -[NPKIDVRemoteDeviceProtoProvisionCredentialResponse copyWithZone:]
  -[NPKIDVRemoteDeviceProtoProvisionCredentialResponse errorData]
  -[NPKIDVRemoteDeviceProtoProvisionCredentialResponse hasErrorData]
  -[NPKIDVRemoteDeviceProtoProvisionCredentialResponse setErrorData:]


NPKProtoPassSyncReconciledStateUnrecognized : PBCodable <NSCopying>
 @property  BOOL hasUnrecognizedReconciledStateHash
 @property  NSData *unrecognizedReconciledStateHash
 @property  BOOL hasLibraryPassSyncState
 @property  NPKProtoPassSyncState *libraryPassSyncState
 @property  BOOL hasUnrecognizedReconciledStateVersion
 @property  unsigned int unrecognizedReconciledStateVersion

  // instance methods
  -[NPKProtoPassSyncReconciledStateUnrecognized mergeFrom:]
  -[NPKProtoPassSyncReconciledStateUnrecognized .cxx_destruct]
  -[NPKProtoPassSyncReconciledStateUnrecognized dictionaryRepresentation]
  -[NPKProtoPassSyncReconciledStateUnrecognized writeTo:]
  -[NPKProtoPassSyncReconciledStateUnrecognized isEqual:]
  -[NPKProtoPassSyncReconciledStateUnrecognized copyTo:]
  -[NPKProtoPassSyncReconciledStateUnrecognized readFrom:]
  -[NPKProtoPassSyncReconciledStateUnrecognized copyWithZone:]
  -[NPKProtoPassSyncReconciledStateUnrecognized unrecognizedReconciledStateHash]
  -[NPKProtoPassSyncReconciledStateUnrecognized hasUnrecognizedReconciledStateVersion]
  -[NPKProtoPassSyncReconciledStateUnrecognized libraryPassSyncState]
  -[NPKProtoPassSyncReconciledStateUnrecognized setUnrecognizedReconciledStateHash:]
  -[NPKProtoPassSyncReconciledStateUnrecognized setUnrecognizedReconciledStateVersion:]
  -[NPKProtoPassSyncReconciledStateUnrecognized setLibraryPassSyncState:]
  -[NPKProtoPassSyncReconciledStateUnrecognized hasUnrecognizedReconciledStateHash]
  -[NPKProtoPassSyncReconciledStateUnrecognized hasLibraryPassSyncState]
  -[NPKProtoPassSyncReconciledStateUnrecognized setHasUnrecognizedReconciledStateVersion:]
  -[NPKProtoPassSyncReconciledStateUnrecognized unrecognizedReconciledStateVersion]


NPKProtoRemotePassActionSelectItemRequest : PBRequest <NSCopying>
 @property  NSString *requestUniqueID
 @property  BOOL hasPlanIdentifier
 @property  NSString *planIdentifier
 @property  BOOL hasPlanLabel
 @property  NSString *planLabel
 @property  BOOL hasPlanDetailLabel
 @property  NSString *planDetailLabel
 @property  BOOL hasStartDateData
 @property  NSData *startDateData
 @property  BOOL hasExpiryDateData
 @property  NSData *expiryDateData
 @property  BOOL hasPaymentPassActionData
 @property  NSData *paymentPassActionData
 @property  BOOL hasDeviceIdentifier
 @property  NSString *deviceIdentifier
 @property  BOOL hasPassTypeIdentifier
 @property  NSString *passTypeIdentifier
 @property  BOOL hasPassSerialNumber
 @property  NSString *passSerialNumber

  // instance methods
  -[NPKProtoRemotePassActionSelectItemRequest planLabel]
  -[NPKProtoRemotePassActionSelectItemRequest setPlanLabel:]
  -[NPKProtoRemotePassActionSelectItemRequest mergeFrom:]
  -[NPKProtoRemotePassActionSelectItemRequest .cxx_destruct]
  -[NPKProtoRemotePassActionSelectItemRequest dictionaryRepresentation]
  -[NPKProtoRemotePassActionSelectItemRequest writeTo:]
  -[NPKProtoRemotePassActionSelectItemRequest isEqual:]
  -[NPKProtoRemotePassActionSelectItemRequest copyTo:]
  -[NPKProtoRemotePassActionSelectItemRequest setPassTypeIdentifier:]
  -[NPKProtoRemotePassActionSelectItemRequest readFrom:]
  -[NPKProtoRemotePassActionSelectItemRequest passSerialNumber]
  -[NPKProtoRemotePassActionSelectItemRequest setPassSerialNumber:]
  -[NPKProtoRemotePassActionSelectItemRequest passTypeIdentifier]
  -[NPKProtoRemotePassActionSelectItemRequest hasDeviceIdentifier]
  -[NPKProtoRemotePassActionSelectItemRequest deviceIdentifier]
  -[NPKProtoRemotePassActionSelectItemRequest copyWithZone:]
  -[NPKProtoRemotePassActionSelectItemRequest setDeviceIdentifier:]
  -[NPKProtoRemotePassActionSelectItemRequest setPaymentPassActionData:]
  -[NPKProtoRemotePassActionSelectItemRequest setPlanIdentifier:]
  -[NPKProtoRemotePassActionSelectItemRequest setPlanDetailLabel:]
  -[NPKProtoRemotePassActionSelectItemRequest setStartDateData:]
  -[NPKProtoRemotePassActionSelectItemRequest setExpiryDateData:]
  -[NPKProtoRemotePassActionSelectItemRequest setRequestUniqueID:]
  -[NPKProtoRemotePassActionSelectItemRequest requestUniqueID]
  -[NPKProtoRemotePassActionSelectItemRequest paymentPassActionData]
  -[NPKProtoRemotePassActionSelectItemRequest startDateData]
  -[NPKProtoRemotePassActionSelectItemRequest expiryDateData]
  -[NPKProtoRemotePassActionSelectItemRequest planDetailLabel]
  -[NPKProtoRemotePassActionSelectItemRequest planIdentifier]
  -[NPKProtoRemotePassActionSelectItemRequest hasPassTypeIdentifier]
  -[NPKProtoRemotePassActionSelectItemRequest hasPlanIdentifier]
  -[NPKProtoRemotePassActionSelectItemRequest hasPlanLabel]
  -[NPKProtoRemotePassActionSelectItemRequest hasPlanDetailLabel]
  -[NPKProtoRemotePassActionSelectItemRequest hasStartDateData]
  -[NPKProtoRemotePassActionSelectItemRequest hasExpiryDateData]
  -[NPKProtoRemotePassActionSelectItemRequest hasPaymentPassActionData]
  -[NPKProtoRemotePassActionSelectItemRequest hasPassSerialNumber]


NPKRemotePassActionUIServicePresenterInterface : NSObject
  // class methods
  +[NPKRemotePassActionUIServicePresenterInterface interface]


NPKUserNotificationExpressModeEnabled : NPKPassUserNotification
  // instance methods
  -[NPKUserNotificationExpressModeEnabled body]
  -[NPKUserNotificationExpressModeEnabled initWithPass:]
  -[NPKUserNotificationExpressModeEnabled title]
  -[NPKUserNotificationExpressModeEnabled userInfo]
  -[NPKUserNotificationExpressModeEnabled notificationCategoryIdentifier]


NPKProtoStandalonePaymentRemoteCredential : PBCodable <NSCopying>
 @property  NPKProtoStandalonePaymentCredential *paymentCredential
 @property  BOOL hasIdentifier
 @property  NSString *identifier
 @property  BOOL hasPassURL
 @property  NSString *passURL
 @property  BOOL hasSummaryMetadataDescription
 @property  NSString *summaryMetadataDescription
 @property  BOOL hasStatusDescription
 @property  NSString *statusDescription
 @property  BOOL hasPaymentPass
 @property  NPKProtoStandalonePaymentPass *paymentPass
 @property  BOOL hasRank
 @property  unsigned int rank
 @property  BOOL hasProductIdentifier
 @property  NSString *productIdentifier

  // instance methods
  -[NPKProtoStandalonePaymentRemoteCredential passURL]
  -[NPKProtoStandalonePaymentRemoteCredential paymentPass]
  -[NPKProtoStandalonePaymentRemoteCredential mergeFrom:]
  -[NPKProtoStandalonePaymentRemoteCredential rank]
  -[NPKProtoStandalonePaymentRemoteCredential .cxx_destruct]
  -[NPKProtoStandalonePaymentRemoteCredential hasRank]
  -[NPKProtoStandalonePaymentRemoteCredential setProductIdentifier:]
  -[NPKProtoStandalonePaymentRemoteCredential dictionaryRepresentation]
  -[NPKProtoStandalonePaymentRemoteCredential setRank:]
  -[NPKProtoStandalonePaymentRemoteCredential writeTo:]
  -[NPKProtoStandalonePaymentRemoteCredential setPaymentCredential:]
  -[NPKProtoStandalonePaymentRemoteCredential paymentCredential]
  -[NPKProtoStandalonePaymentRemoteCredential setPaymentPass:]
  -[NPKProtoStandalonePaymentRemoteCredential hasPaymentPass]
  -[NPKProtoStandalonePaymentRemoteCredential isEqual:]
  -[NPKProtoStandalonePaymentRemoteCredential copyTo:]
  -[NPKProtoStandalonePaymentRemoteCredential statusDescription]
  -[NPKProtoStandalonePaymentRemoteCredential readFrom:]
  -[NPKProtoStandalonePaymentRemoteCredential identifier]
  -[NPKProtoStandalonePaymentRemoteCredential summaryMetadataDescription]
  -[NPKProtoStandalonePaymentRemoteCredential setStatusDescription:]
  -[NPKProtoStandalonePaymentRemoteCredential setIdentifier:]
  -[NPKProtoStandalonePaymentRemoteCredential hasIdentifier]
  -[NPKProtoStandalonePaymentRemoteCredential copyWithZone:]
  -[NPKProtoStandalonePaymentRemoteCredential setHasRank:]
  -[NPKProtoStandalonePaymentRemoteCredential setPassURL:]
  -[NPKProtoStandalonePaymentRemoteCredential productIdentifier]
  -[NPKProtoStandalonePaymentRemoteCredential hasProductIdentifier]
  -[NPKProtoStandalonePaymentRemoteCredential setSummaryMetadataDescription:]
  -[NPKProtoStandalonePaymentRemoteCredential hasPassURL]
  -[NPKProtoStandalonePaymentRemoteCredential hasSummaryMetadataDescription]
  -[NPKProtoStandalonePaymentRemoteCredential hasStatusDescription]


NPKProtoStandalonePaymentProvisioningFlowChooseProductStepContext : PBCodable <NSCopying>
 @property  NSMutableArray *products

  // class methods
  +[NPKProtoStandalonePaymentProvisioningFlowChooseProductStepContext productsType]

  // instance methods
  -[NPKProtoStandalonePaymentProvisioningFlowChooseProductStepContext mergeFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseProductStepContext .cxx_destruct]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseProductStepContext dictionaryRepresentation]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseProductStepContext writeTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseProductStepContext isEqual:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseProductStepContext copyTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseProductStepContext readFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseProductStepContext products]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseProductStepContext copyWithZone:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseProductStepContext setProducts:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseProductStepContext addProducts:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseProductStepContext productsCount]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseProductStepContext clearProducts]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseProductStepContext productsAtIndex:]


NPKProtoUpdatePeerPaymentAccountResponse : PBCodable <NSCopying>
 @property  BOOL hasPeerPaymentAccountData
 @property  NSData *peerPaymentAccountData

  // instance methods
  -[NPKProtoUpdatePeerPaymentAccountResponse mergeFrom:]
  -[NPKProtoUpdatePeerPaymentAccountResponse .cxx_destruct]
  -[NPKProtoUpdatePeerPaymentAccountResponse dictionaryRepresentation]
  -[NPKProtoUpdatePeerPaymentAccountResponse writeTo:]
  -[NPKProtoUpdatePeerPaymentAccountResponse isEqual:]
  -[NPKProtoUpdatePeerPaymentAccountResponse copyTo:]
  -[NPKProtoUpdatePeerPaymentAccountResponse readFrom:]
  -[NPKProtoUpdatePeerPaymentAccountResponse copyWithZone:]
  -[NPKProtoUpdatePeerPaymentAccountResponse setPeerPaymentAccountData:]
  -[NPKProtoUpdatePeerPaymentAccountResponse hasPeerPaymentAccountData]
  -[NPKProtoUpdatePeerPaymentAccountResponse peerPaymentAccountData]


NPKApplicationRecordManager : NSObject <LSApplicationWorkspaceObserverProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NPKApplicationRecordManager registerObserver:]
  -[NPKApplicationRecordManager .cxx_destruct]
  -[NPKApplicationRecordManager applicationStateDidChange:]
  -[NPKApplicationRecordManager init]
  -[NPKApplicationRecordManager isAppInRestrictedMode:]
  -[NPKApplicationRecordManager _updateStatusWithApplicationState:completion:]
  -[NPKApplicationRecordManager cachedIsAppInRestrictedMode]


NPKTestAddPaymentPassRequestContext : NSObject
 @property  NSString *cardPNO
 @property  NSString *cardFlow
 @property  NSString *cardID
 @property  NSString *cardType
 @property  NSString *cardIssuer
 @property  NSString *cardProduct
 @property  NSString *cardEncryptionScheme

  // instance methods
  -[NPKTestAddPaymentPassRequestContext cardType]
  -[NPKTestAddPaymentPassRequestContext .cxx_destruct]
  -[NPKTestAddPaymentPassRequestContext setCardType:]
  -[NPKTestAddPaymentPassRequestContext cardID]
  -[NPKTestAddPaymentPassRequestContext cardPNO]
  -[NPKTestAddPaymentPassRequestContext setCardPNO:]
  -[NPKTestAddPaymentPassRequestContext cardFlow]
  -[NPKTestAddPaymentPassRequestContext setCardFlow:]
  -[NPKTestAddPaymentPassRequestContext setCardID:]
  -[NPKTestAddPaymentPassRequestContext cardIssuer]
  -[NPKTestAddPaymentPassRequestContext setCardIssuer:]
  -[NPKTestAddPaymentPassRequestContext cardProduct]
  -[NPKTestAddPaymentPassRequestContext setCardProduct:]
  -[NPKTestAddPaymentPassRequestContext cardEncryptionScheme]
  -[NPKTestAddPaymentPassRequestContext setCardEncryptionScheme:]


NPKProtoPeerPaymentUnregistrationRequest : PBRequest <NSCopying>
  // instance methods
  -[NPKProtoPeerPaymentUnregistrationRequest mergeFrom:]
  -[NPKProtoPeerPaymentUnregistrationRequest dictionaryRepresentation]
  -[NPKProtoPeerPaymentUnregistrationRequest writeTo:]
  -[NPKProtoPeerPaymentUnregistrationRequest isEqual:]
  -[NPKProtoPeerPaymentUnregistrationRequest copyTo:]
  -[NPKProtoPeerPaymentUnregistrationRequest readFrom:]
  -[NPKProtoPeerPaymentUnregistrationRequest copyWithZone:]


NPKStandaloneFirstUnlockCoordinator : NSObject
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSMutableArray *blocksToPerformAfterFirstDeviceUnlock
 @property  int firstDeviceUnlockRegistrationToken

  // instance methods
  -[NPKStandaloneFirstUnlockCoordinator .cxx_destruct]
  -[NPKStandaloneFirstUnlockCoordinator setQueue:]
  -[NPKStandaloneFirstUnlockCoordinator initWithQueue:]
  -[NPKStandaloneFirstUnlockCoordinator queue]
  -[NPKStandaloneFirstUnlockCoordinator dealloc]
  -[NPKStandaloneFirstUnlockCoordinator performSubjectToFirstUnlock:]
  -[NPKStandaloneFirstUnlockCoordinator _performFirstUnlockWork]
  -[NPKStandaloneFirstUnlockCoordinator firstDeviceUnlockRegistrationToken]
  -[NPKStandaloneFirstUnlockCoordinator setFirstDeviceUnlockRegistrationToken:]
  -[NPKStandaloneFirstUnlockCoordinator blocksToPerformAfterFirstDeviceUnlock]
  -[NPKStandaloneFirstUnlockCoordinator setBlocksToPerformAfterFirstDeviceUnlock:]


NPKProtoProvisioningDataResponse : PBCodable <NSCopying>
 @property  BOOL hasPending
 @property  BOOL pending
 @property  BOOL hasProvisioningDataBytes
 @property  NSData *provisioningDataBytes

  // instance methods
  -[NPKProtoProvisioningDataResponse pending]
  -[NPKProtoProvisioningDataResponse mergeFrom:]
  -[NPKProtoProvisioningDataResponse setPending:]
  -[NPKProtoProvisioningDataResponse .cxx_destruct]
  -[NPKProtoProvisioningDataResponse dictionaryRepresentation]
  -[NPKProtoProvisioningDataResponse writeTo:]
  -[NPKProtoProvisioningDataResponse isEqual:]
  -[NPKProtoProvisioningDataResponse copyTo:]
  -[NPKProtoProvisioningDataResponse readFrom:]
  -[NPKProtoProvisioningDataResponse copyWithZone:]
  -[NPKProtoProvisioningDataResponse setHasPending:]
  -[NPKProtoProvisioningDataResponse hasPending]
  -[NPKProtoProvisioningDataResponse setProvisioningDataBytes:]
  -[NPKProtoProvisioningDataResponse hasProvisioningDataBytes]
  -[NPKProtoProvisioningDataResponse provisioningDataBytes]


NPKProtoCloudStoreStatusRequest : PBRequest <NSCopying>
  // instance methods
  -[NPKProtoCloudStoreStatusRequest mergeFrom:]
  -[NPKProtoCloudStoreStatusRequest dictionaryRepresentation]
  -[NPKProtoCloudStoreStatusRequest writeTo:]
  -[NPKProtoCloudStoreStatusRequest isEqual:]
  -[NPKProtoCloudStoreStatusRequest copyTo:]
  -[NPKProtoCloudStoreStatusRequest readFrom:]
  -[NPKProtoCloudStoreStatusRequest copyWithZone:]


NPKProtoStandalonePaymentPassListResponse : PBCodable <NSCopying>
 @property  NPKProtoStandaloneResponseHeader *responseHeader
 @property  NSMutableArray *paymentPasses

  // class methods
  +[NPKProtoStandalonePaymentPassListResponse paymentPassesType]

  // instance methods
  -[NPKProtoStandalonePaymentPassListResponse mergeFrom:]
  -[NPKProtoStandalonePaymentPassListResponse .cxx_destruct]
  -[NPKProtoStandalonePaymentPassListResponse dictionaryRepresentation]
  -[NPKProtoStandalonePaymentPassListResponse writeTo:]
  -[NPKProtoStandalonePaymentPassListResponse isEqual:]
  -[NPKProtoStandalonePaymentPassListResponse copyTo:]
  -[NPKProtoStandalonePaymentPassListResponse readFrom:]
  -[NPKProtoStandalonePaymentPassListResponse paymentPasses]
  -[NPKProtoStandalonePaymentPassListResponse copyWithZone:]
  -[NPKProtoStandalonePaymentPassListResponse responseHeader]
  -[NPKProtoStandalonePaymentPassListResponse setResponseHeader:]
  -[NPKProtoStandalonePaymentPassListResponse addPaymentPasses:]
  -[NPKProtoStandalonePaymentPassListResponse paymentPassesCount]
  -[NPKProtoStandalonePaymentPassListResponse clearPaymentPasses]
  -[NPKProtoStandalonePaymentPassListResponse paymentPassesAtIndex:]
  -[NPKProtoStandalonePaymentPassListResponse setPaymentPasses:]


NPKProtoSecureElementGetPairingInfoRequest : PBRequest <NSCopying>
 @property  BOOL hasSetAuthRandomIfNotPaired
 @property  BOOL setAuthRandomIfNotPaired

  // instance methods
  -[NPKProtoSecureElementGetPairingInfoRequest mergeFrom:]
  -[NPKProtoSecureElementGetPairingInfoRequest dictionaryRepresentation]
  -[NPKProtoSecureElementGetPairingInfoRequest writeTo:]
  -[NPKProtoSecureElementGetPairingInfoRequest isEqual:]
  -[NPKProtoSecureElementGetPairingInfoRequest copyTo:]
  -[NPKProtoSecureElementGetPairingInfoRequest readFrom:]
  -[NPKProtoSecureElementGetPairingInfoRequest copyWithZone:]
  -[NPKProtoSecureElementGetPairingInfoRequest setSetAuthRandomIfNotPaired:]
  -[NPKProtoSecureElementGetPairingInfoRequest setHasSetAuthRandomIfNotPaired:]
  -[NPKProtoSecureElementGetPairingInfoRequest hasSetAuthRandomIfNotPaired]
  -[NPKProtoSecureElementGetPairingInfoRequest setAuthRandomIfNotPaired]


NPKProtoStandaloneCreditAccountCredential : PBCodable <NSCopying>
 @property  NPKProtoStandalonePaymentCredential *paymentCredential
 @property  BOOL hasPaymentPass
 @property  NPKProtoStandalonePaymentPass *paymentPass
 @property  BOOL hasCurrencyCode
 @property  NSString *currencyCode
 @property  BOOL hasCurrentBalance
 @property  double currentBalance
 @property  BOOL hasCreditLimit
 @property  double creditLimit

  // instance methods
  -[NPKProtoStandaloneCreditAccountCredential paymentPass]
  -[NPKProtoStandaloneCreditAccountCredential mergeFrom:]
  -[NPKProtoStandaloneCreditAccountCredential .cxx_destruct]
  -[NPKProtoStandaloneCreditAccountCredential dictionaryRepresentation]
  -[NPKProtoStandaloneCreditAccountCredential currencyCode]
  -[NPKProtoStandaloneCreditAccountCredential writeTo:]
  -[NPKProtoStandaloneCreditAccountCredential setPaymentCredential:]
  -[NPKProtoStandaloneCreditAccountCredential paymentCredential]
  -[NPKProtoStandaloneCreditAccountCredential setPaymentPass:]
  -[NPKProtoStandaloneCreditAccountCredential hasPaymentPass]
  -[NPKProtoStandaloneCreditAccountCredential isEqual:]
  -[NPKProtoStandaloneCreditAccountCredential copyTo:]
  -[NPKProtoStandaloneCreditAccountCredential creditLimit]
  -[NPKProtoStandaloneCreditAccountCredential readFrom:]
  -[NPKProtoStandaloneCreditAccountCredential setCreditLimit:]
  -[NPKProtoStandaloneCreditAccountCredential currentBalance]
  -[NPKProtoStandaloneCreditAccountCredential setCurrentBalance:]
  -[NPKProtoStandaloneCreditAccountCredential copyWithZone:]
  -[NPKProtoStandaloneCreditAccountCredential hasCurrencyCode]
  -[NPKProtoStandaloneCreditAccountCredential setCurrencyCode:]
  -[NPKProtoStandaloneCreditAccountCredential setHasCurrentBalance:]
  -[NPKProtoStandaloneCreditAccountCredential hasCurrentBalance]
  -[NPKProtoStandaloneCreditAccountCredential setHasCreditLimit:]
  -[NPKProtoStandaloneCreditAccountCredential hasCreditLimit]


NPKPaymentOptionsSerialization : NSObject
  // class methods
  +[NPKPaymentOptionsSerialization _contactFromEncodedData:]
  +[NPKPaymentOptionsSerialization _billingAddressDictionaryFromEncodedData:]
  +[NPKPaymentOptionsSerialization _deleteAllDefaultBillingAddresses:]
  +[NPKPaymentOptionsSerialization setTransactionDefaultsRequest]
  +[NPKPaymentOptionsSerialization handleSetTransactionDefaultsRequest:]


NPKWorkQueue : NSObject
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSMutableArray *remainingWork
 @property  BOOL performingWork
 @property  NSObject<OS_dispatch_queue> *callbackQueue
 @property  BOOL takeOutTransactions
 @property  NSString *workQueueName

  // instance methods
  -[NPKWorkQueue .cxx_destruct]
  -[NPKWorkQueue callbackQueue]
  -[NPKWorkQueue init]
  -[NPKWorkQueue setQueue:]
  -[NPKWorkQueue setCallbackQueue:]
  -[NPKWorkQueue initWithQueue:]
  -[NPKWorkQueue queue]
  -[NPKWorkQueue dealloc]
  -[NPKWorkQueue initWithQueue:takeOutTransactions:]
  -[NPKWorkQueue setRemainingWork:]
  -[NPKWorkQueue setTakeOutTransactions:]
  -[NPKWorkQueue performingWork]
  -[NPKWorkQueue remainingWork]
  -[NPKWorkQueue setPerformingWork:]
  -[NPKWorkQueue workQueueName]
  -[NPKWorkQueue _onQueue_doWorkIfNecessary]
  -[NPKWorkQueue takeOutTransactions]
  -[NPKWorkQueue performWork:]
  -[NPKWorkQueue setWorkQueueName:]


NPKWorkQueueItem : NSObject
 @property  NPKOSTransaction *transaction
 @property  @? workBlock

  // class methods
  +[NPKWorkQueueItem itemWithTransaction:work:]

  // instance methods
  -[NPKWorkQueueItem transaction]
  -[NPKWorkQueueItem .cxx_destruct]
  -[NPKWorkQueueItem workBlock]
  -[NPKWorkQueueItem initWithTransaction:work:]


NPKProtoWebServiceContextNeededRequest : PBRequest <NSCopying>
  // instance methods
  -[NPKProtoWebServiceContextNeededRequest mergeFrom:]
  -[NPKProtoWebServiceContextNeededRequest dictionaryRepresentation]
  -[NPKProtoWebServiceContextNeededRequest writeTo:]
  -[NPKProtoWebServiceContextNeededRequest isEqual:]
  -[NPKProtoWebServiceContextNeededRequest copyTo:]
  -[NPKProtoWebServiceContextNeededRequest readFrom:]
  -[NPKProtoWebServiceContextNeededRequest copyWithZone:]


NPKProtoStandalonePaymentProvisioningFlowReaderModeEntryStepContext : PBCodable <NSCopying>
 @property  BOOL hasTitle
 @property  NSString *title
 @property  BOOL hasSubtitle
 @property  NSString *subtitle
 @property  NSMutableArray *setupFields
 @property  BOOL hasProduct
 @property  NPKProtoStandalonePaymentSetupProduct *product

  // class methods
  +[NPKProtoStandalonePaymentProvisioningFlowReaderModeEntryStepContext setupFieldsType]

  // instance methods
  -[NPKProtoStandalonePaymentProvisioningFlowReaderModeEntryStepContext hasSubtitle]
  -[NPKProtoStandalonePaymentProvisioningFlowReaderModeEntryStepContext mergeFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowReaderModeEntryStepContext hasTitle]
  -[NPKProtoStandalonePaymentProvisioningFlowReaderModeEntryStepContext setTitle:]
  -[NPKProtoStandalonePaymentProvisioningFlowReaderModeEntryStepContext .cxx_destruct]
  -[NPKProtoStandalonePaymentProvisioningFlowReaderModeEntryStepContext product]
  -[NPKProtoStandalonePaymentProvisioningFlowReaderModeEntryStepContext dictionaryRepresentation]
  -[NPKProtoStandalonePaymentProvisioningFlowReaderModeEntryStepContext setSubtitle:]
  -[NPKProtoStandalonePaymentProvisioningFlowReaderModeEntryStepContext writeTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowReaderModeEntryStepContext isEqual:]
  -[NPKProtoStandalonePaymentProvisioningFlowReaderModeEntryStepContext copyTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowReaderModeEntryStepContext readFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowReaderModeEntryStepContext subtitle]
  -[NPKProtoStandalonePaymentProvisioningFlowReaderModeEntryStepContext setProduct:]
  -[NPKProtoStandalonePaymentProvisioningFlowReaderModeEntryStepContext title]
  -[NPKProtoStandalonePaymentProvisioningFlowReaderModeEntryStepContext copyWithZone:]
  -[NPKProtoStandalonePaymentProvisioningFlowReaderModeEntryStepContext hasProduct]
  -[NPKProtoStandalonePaymentProvisioningFlowReaderModeEntryStepContext setSetupFields:]
  -[NPKProtoStandalonePaymentProvisioningFlowReaderModeEntryStepContext setupFields]
  -[NPKProtoStandalonePaymentProvisioningFlowReaderModeEntryStepContext addSetupFields:]
  -[NPKProtoStandalonePaymentProvisioningFlowReaderModeEntryStepContext setupFieldsCount]
  -[NPKProtoStandalonePaymentProvisioningFlowReaderModeEntryStepContext clearSetupFields]
  -[NPKProtoStandalonePaymentProvisioningFlowReaderModeEntryStepContext setupFieldsAtIndex:]


NPKProtoProvisionHomeKeyPassForSerialNumbersRequest : PBRequest <NSCopying>
 @property  NSMutableArray *serialNumbers

  // class methods
  +[NPKProtoProvisionHomeKeyPassForSerialNumbersRequest serialNumbersType]

  // instance methods
  -[NPKProtoProvisionHomeKeyPassForSerialNumbersRequest mergeFrom:]
  -[NPKProtoProvisionHomeKeyPassForSerialNumbersRequest .cxx_destruct]
  -[NPKProtoProvisionHomeKeyPassForSerialNumbersRequest dictionaryRepresentation]
  -[NPKProtoProvisionHomeKeyPassForSerialNumbersRequest writeTo:]
  -[NPKProtoProvisionHomeKeyPassForSerialNumbersRequest isEqual:]
  -[NPKProtoProvisionHomeKeyPassForSerialNumbersRequest copyTo:]
  -[NPKProtoProvisionHomeKeyPassForSerialNumbersRequest readFrom:]
  -[NPKProtoProvisionHomeKeyPassForSerialNumbersRequest serialNumbers]
  -[NPKProtoProvisionHomeKeyPassForSerialNumbersRequest setSerialNumbers:]
  -[NPKProtoProvisionHomeKeyPassForSerialNumbersRequest copyWithZone:]
  -[NPKProtoProvisionHomeKeyPassForSerialNumbersRequest addSerialNumbers:]
  -[NPKProtoProvisionHomeKeyPassForSerialNumbersRequest serialNumbersCount]
  -[NPKProtoProvisionHomeKeyPassForSerialNumbersRequest clearSerialNumbers]
  -[NPKProtoProvisionHomeKeyPassForSerialNumbersRequest serialNumbersAtIndex:]


NPKProtoInitializeCloudStoreIfNecessaryRequest : PBRequest <NSCopying>
  // instance methods
  -[NPKProtoInitializeCloudStoreIfNecessaryRequest mergeFrom:]
  -[NPKProtoInitializeCloudStoreIfNecessaryRequest dictionaryRepresentation]
  -[NPKProtoInitializeCloudStoreIfNecessaryRequest writeTo:]
  -[NPKProtoInitializeCloudStoreIfNecessaryRequest isEqual:]
  -[NPKProtoInitializeCloudStoreIfNecessaryRequest copyTo:]
  -[NPKProtoInitializeCloudStoreIfNecessaryRequest readFrom:]
  -[NPKProtoInitializeCloudStoreIfNecessaryRequest copyWithZone:]


NPKProtoSetAccountAttestationAnonymizationSaltRequest : PBRequest <NSCopying>
 @property  BOOL hasAnonymizationSalt
 @property  NSString *anonymizationSalt

  // instance methods
  -[NPKProtoSetAccountAttestationAnonymizationSaltRequest mergeFrom:]
  -[NPKProtoSetAccountAttestationAnonymizationSaltRequest .cxx_destruct]
  -[NPKProtoSetAccountAttestationAnonymizationSaltRequest dictionaryRepresentation]
  -[NPKProtoSetAccountAttestationAnonymizationSaltRequest writeTo:]
  -[NPKProtoSetAccountAttestationAnonymizationSaltRequest anonymizationSalt]
  -[NPKProtoSetAccountAttestationAnonymizationSaltRequest setAnonymizationSalt:]
  -[NPKProtoSetAccountAttestationAnonymizationSaltRequest isEqual:]
  -[NPKProtoSetAccountAttestationAnonymizationSaltRequest copyTo:]
  -[NPKProtoSetAccountAttestationAnonymizationSaltRequest readFrom:]
  -[NPKProtoSetAccountAttestationAnonymizationSaltRequest copyWithZone:]
  -[NPKProtoSetAccountAttestationAnonymizationSaltRequest hasAnonymizationSalt]


NPKProtoStandalonePaymentProvisioningFlowChooseReaderModeRequest : PBRequest <NSCopying>
 @property  NPKProtoStandaloneRequestHeader *requestHeader

  // instance methods
  -[NPKProtoStandalonePaymentProvisioningFlowChooseReaderModeRequest mergeFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseReaderModeRequest .cxx_destruct]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseReaderModeRequest dictionaryRepresentation]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseReaderModeRequest writeTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseReaderModeRequest isEqual:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseReaderModeRequest copyTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseReaderModeRequest readFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseReaderModeRequest copyWithZone:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseReaderModeRequest requestHeader]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseReaderModeRequest setRequestHeader:]


NPKProtoSecureElementRemoveAppletsRequest : PBRequest <NSCopying>
 @property  NSMutableArray *cardAIDs

  // class methods
  +[NPKProtoSecureElementRemoveAppletsRequest cardAIDsType]

  // instance methods
  -[NPKProtoSecureElementRemoveAppletsRequest mergeFrom:]
  -[NPKProtoSecureElementRemoveAppletsRequest .cxx_destruct]
  -[NPKProtoSecureElementRemoveAppletsRequest dictionaryRepresentation]
  -[NPKProtoSecureElementRemoveAppletsRequest writeTo:]
  -[NPKProtoSecureElementRemoveAppletsRequest isEqual:]
  -[NPKProtoSecureElementRemoveAppletsRequest copyTo:]
  -[NPKProtoSecureElementRemoveAppletsRequest readFrom:]
  -[NPKProtoSecureElementRemoveAppletsRequest copyWithZone:]
  -[NPKProtoSecureElementRemoveAppletsRequest addCardAIDs:]
  -[NPKProtoSecureElementRemoveAppletsRequest cardAIDsCount]
  -[NPKProtoSecureElementRemoveAppletsRequest clearCardAIDs]
  -[NPKProtoSecureElementRemoveAppletsRequest cardAIDsAtIndex:]
  -[NPKProtoSecureElementRemoveAppletsRequest cardAIDs]
  -[NPKProtoSecureElementRemoveAppletsRequest setCardAIDs:]


NPKExpressPassController : NSObject <PKFieldDetectorObserver>
 @property  PKPass *currentTransactionPass
 @property  PKPassLibrary *passLibrary
 @property  NSSet *expressPassesInformation
 @property  NSDictionary *expressPasses
 @property  NSDistributedNotificationCenter *distributedNotificationCenter
 @property  PKExpressPassInformation *currentTransactionExpressPassInformation
 @property  PKFieldDetector *fieldDetector
 @property  <NPKExpressPassControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NPKExpressPassController distributedNotificationCenter]
  -[NPKExpressPassController .cxx_destruct]
  -[NPKExpressPassController setDelegate:]
  -[NPKExpressPassController expressPassesInformation]
  -[NPKExpressPassController passLibrary]
  -[NPKExpressPassController fieldDetectorDidEnterField:withProperties:]
  -[NPKExpressPassController paymentService]
  -[NPKExpressPassController reset]
  -[NPKExpressPassController initWithDelegate:]
  -[NPKExpressPassController delegate]
  -[NPKExpressPassController dealloc]
  -[NPKExpressPassController _handleCarKeyVehicleConnectedNotification:]
  -[NPKExpressPassController _handleCarKeyVehicleDisconnectedNotification:]
  -[NPKExpressPassController fieldDetector]
  -[NPKExpressPassController setFieldDetector:]
  -[NPKExpressPassController _handleCarKeyRangingStartedNotification:]
  -[NPKExpressPassController _handleCarKeyRangingEndedNotification:]
  -[NPKExpressPassController _updatePassesQueue_updateExpressPasses]
  -[NPKExpressPassController updateExpressPasses]
  -[NPKExpressPassController initWithPaymentService:passLibrary:distributedNotificationCenter:delegate:]
  -[NPKExpressPassController _transitionToStatus:forExpressPass:paymentApplicationIdentifier:]
  -[NPKExpressPassController _queue_siblingExpressPassesForExpressPass:applicationIdentifier:]
  -[NPKExpressPassController _handleEnterNearFieldNotification:]
  -[NPKExpressPassController _handleExpressTransactionStartNotification:]
  -[NPKExpressPassController _handleExpressTransactionTimeOutNotification:]
  -[NPKExpressPassController _handleExpressTransactionEndNotification:]
  -[NPKExpressPassController _handleExpressTransactionFailedNotification:]
  -[NPKExpressPassController _handleExitNearFieldNotification:]
  -[NPKExpressPassController _handleCarKeyExpressEnteredNotification:]
  -[NPKExpressPassController _handleCarKeyExpressExitedNotification:]
  -[NPKExpressPassController _handleCarKeySessionEndedNotification:]
  -[NPKExpressPassController _handleCarKeySessionEndedWithErrorNotification:]
  -[NPKExpressPassController _handleCarKeyVehicleLockedNotification:]
  -[NPKExpressPassController _handleCarKeyVehicleUnlockedNotification:]
  -[NPKExpressPassController _handleCarKeyRKEActionCompletedNotification:]
  -[NPKExpressPassController _handleStandaloneTransactionDoneNotification:]
  -[NPKExpressPassController _handlePassesLibraryChangedNotification:]
  -[NPKExpressPassController _expressPassesInformationWithAutomaticSelectionTechnologyType:]
  -[NPKExpressPassController setCurrentTransactionExpressPassInformation:]
  -[NPKExpressPassController _hasNoTransactionStartOrEndNotificationForTechnologyType:]
  -[NPKExpressPassController currentTransactionExpressPassInformation]
  -[NPKExpressPassController expressPasses]
  -[NPKExpressPassController _parseExpressNotificationObject:outApplicationIdentifier:outApplicationKeyIdentifier:]
  -[NPKExpressPassController _onqueue_transactionStartedWithApplicationIdentifier:applicationKeyIdentifier:]
  -[NPKExpressPassController _onqueue_transactionEndedWithApplicationIdentifier:applicationKeyIdentifier:]
  -[NPKExpressPassController _onqueue_transactionFailedWithApplicationIdentifier:applicationKeyIdentifier:]
  -[NPKExpressPassController _queue_expressPassForTransactionApplicationIdentifier:transactionApplicationKeyIdentifier:]
  -[NPKExpressPassController _onqueue_transactionCompletedForStandaloneTransactionEvent:withApplicationIdentifier:applicationKeyIdentifier:]
  -[NPKExpressPassController _parseRKEActionNotificationObject:outApplicationIdentifier:outApplicationKeyIdentifier:outFunctionNumber:outActionNumber:outExecutionStatusNumber:outErrorMessage:]
  -[NPKExpressPassController _onqueue_transactionCompletedForRKEAction:function:withApplicationIdentifier:applicationKeyIdentifier:]
  -[NPKExpressPassController _transitionToStandaloneTransactionEvent:forExpressPass:]
  -[NPKExpressPassController _transitionToCompletedRKEAction:function:forExpressPass:]
  -[NPKExpressPassController _startListeningForExpressNotifications]
  -[NPKExpressPassController _stopListeningForExpressNotifications]
  -[NPKExpressPassController _startFieldDetector]
  -[NPKExpressPassController _stopFieldDetector]
  -[NPKExpressPassController setExpressPassesInformation:]
  -[NPKExpressPassController setExpressPasses:]
  -[NPKExpressPassController _expressPassesInformationWithTCIs:]
  -[NPKExpressPassController _expressPassInformationWithTechnologyType:]
  -[NPKExpressPassController currentTransactionPass]
  -[NPKExpressPassController setCurrentTransactionPass:]


NPKProtoProvisionPassForRemoteCredentialWithTypeAndIdentifierRequest : PBRequest <NSCopying>
 @property  long long credentialType
 @property  BOOL hasCredentialIdentifier
 @property  NSString *credentialIdentifier

  // instance methods
  -[NPKProtoProvisionPassForRemoteCredentialWithTypeAndIdentifierRequest mergeFrom:]
  -[NPKProtoProvisionPassForRemoteCredentialWithTypeAndIdentifierRequest credentialType]
  -[NPKProtoProvisionPassForRemoteCredentialWithTypeAndIdentifierRequest .cxx_destruct]
  -[NPKProtoProvisionPassForRemoteCredentialWithTypeAndIdentifierRequest setCredentialType:]
  -[NPKProtoProvisionPassForRemoteCredentialWithTypeAndIdentifierRequest dictionaryRepresentation]
  -[NPKProtoProvisionPassForRemoteCredentialWithTypeAndIdentifierRequest writeTo:]
  -[NPKProtoProvisionPassForRemoteCredentialWithTypeAndIdentifierRequest credentialIdentifier]
  -[NPKProtoProvisionPassForRemoteCredentialWithTypeAndIdentifierRequest setCredentialIdentifier:]
  -[NPKProtoProvisionPassForRemoteCredentialWithTypeAndIdentifierRequest isEqual:]
  -[NPKProtoProvisionPassForRemoteCredentialWithTypeAndIdentifierRequest copyTo:]
  -[NPKProtoProvisionPassForRemoteCredentialWithTypeAndIdentifierRequest readFrom:]
  -[NPKProtoProvisionPassForRemoteCredentialWithTypeAndIdentifierRequest copyWithZone:]
  -[NPKProtoProvisionPassForRemoteCredentialWithTypeAndIdentifierRequest hasCredentialIdentifier]


NPKProtoCheckTLKsMissingResponse : PBCodable <NSCopying>
 @property  BOOL hasPending
 @property  BOOL pending
 @property  BOOL hasMissing
 @property  BOOL missing
 @property  BOOL hasErrorData
 @property  NSData *errorData

  // instance methods
  -[NPKProtoCheckTLKsMissingResponse pending]
  -[NPKProtoCheckTLKsMissingResponse mergeFrom:]
  -[NPKProtoCheckTLKsMissingResponse setPending:]
  -[NPKProtoCheckTLKsMissingResponse .cxx_destruct]
  -[NPKProtoCheckTLKsMissingResponse dictionaryRepresentation]
  -[NPKProtoCheckTLKsMissingResponse writeTo:]
  -[NPKProtoCheckTLKsMissingResponse isEqual:]
  -[NPKProtoCheckTLKsMissingResponse copyTo:]
  -[NPKProtoCheckTLKsMissingResponse readFrom:]
  -[NPKProtoCheckTLKsMissingResponse missing]
  -[NPKProtoCheckTLKsMissingResponse copyWithZone:]
  -[NPKProtoCheckTLKsMissingResponse errorData]
  -[NPKProtoCheckTLKsMissingResponse hasErrorData]
  -[NPKProtoCheckTLKsMissingResponse setErrorData:]
  -[NPKProtoCheckTLKsMissingResponse setHasPending:]
  -[NPKProtoCheckTLKsMissingResponse hasPending]
  -[NPKProtoCheckTLKsMissingResponse setMissing:]
  -[NPKProtoCheckTLKsMissingResponse setHasMissing:]
  -[NPKProtoCheckTLKsMissingResponse hasMissing]


NPKProtoCheckPasscodePolicyComplianceRequest : PBRequest <NSCopying>
 @property  BOOL hasEnforcedPolicy
 @property  int enforcedPolicy
 @property  BOOL hasApplyRestrictions
 @property  BOOL applyRestrictions

  // instance methods
  -[NPKProtoCheckPasscodePolicyComplianceRequest mergeFrom:]
  -[NPKProtoCheckPasscodePolicyComplianceRequest dictionaryRepresentation]
  -[NPKProtoCheckPasscodePolicyComplianceRequest writeTo:]
  -[NPKProtoCheckPasscodePolicyComplianceRequest isEqual:]
  -[NPKProtoCheckPasscodePolicyComplianceRequest copyTo:]
  -[NPKProtoCheckPasscodePolicyComplianceRequest readFrom:]
  -[NPKProtoCheckPasscodePolicyComplianceRequest copyWithZone:]
  -[NPKProtoCheckPasscodePolicyComplianceRequest enforcedPolicy]
  -[NPKProtoCheckPasscodePolicyComplianceRequest setEnforcedPolicy:]
  -[NPKProtoCheckPasscodePolicyComplianceRequest setHasEnforcedPolicy:]
  -[NPKProtoCheckPasscodePolicyComplianceRequest hasEnforcedPolicy]
  -[NPKProtoCheckPasscodePolicyComplianceRequest enforcedPolicyAsString:]
  -[NPKProtoCheckPasscodePolicyComplianceRequest StringAsEnforcedPolicy:]
  -[NPKProtoCheckPasscodePolicyComplianceRequest setApplyRestrictions:]
  -[NPKProtoCheckPasscodePolicyComplianceRequest setHasApplyRestrictions:]
  -[NPKProtoCheckPasscodePolicyComplianceRequest hasApplyRestrictions]
  -[NPKProtoCheckPasscodePolicyComplianceRequest applyRestrictions]


NPKProtoBalanceReminderForBalanceAndPassRequest : PBRequest <NSCopying>
 @property  BOOL hasUniqueID
 @property  NSString *uniqueID
 @property  BOOL hasBalanceBytes
 @property  NSData *balanceBytes

  // instance methods
  -[NPKProtoBalanceReminderForBalanceAndPassRequest mergeFrom:]
  -[NPKProtoBalanceReminderForBalanceAndPassRequest uniqueID]
  -[NPKProtoBalanceReminderForBalanceAndPassRequest .cxx_destruct]
  -[NPKProtoBalanceReminderForBalanceAndPassRequest dictionaryRepresentation]
  -[NPKProtoBalanceReminderForBalanceAndPassRequest writeTo:]
  -[NPKProtoBalanceReminderForBalanceAndPassRequest isEqual:]
  -[NPKProtoBalanceReminderForBalanceAndPassRequest copyTo:]
  -[NPKProtoBalanceReminderForBalanceAndPassRequest readFrom:]
  -[NPKProtoBalanceReminderForBalanceAndPassRequest setUniqueID:]
  -[NPKProtoBalanceReminderForBalanceAndPassRequest copyWithZone:]
  -[NPKProtoBalanceReminderForBalanceAndPassRequest hasUniqueID]
  -[NPKProtoBalanceReminderForBalanceAndPassRequest balanceBytes]
  -[NPKProtoBalanceReminderForBalanceAndPassRequest setBalanceBytes:]
  -[NPKProtoBalanceReminderForBalanceAndPassRequest hasBalanceBytes]


NPKProtoStandalonePaymentProvisioningFlowPickerItem : PBCodable <NSCopying>
 @property  BOOL hasIdentifier
 @property  NSString *identifier
 @property  BOOL hasTitle
 @property  NSString *title
 @property  NSMutableArray *products

  // class methods
  +[NPKProtoStandalonePaymentProvisioningFlowPickerItem productsType]

  // instance methods
  -[NPKProtoStandalonePaymentProvisioningFlowPickerItem mergeFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowPickerItem hasTitle]
  -[NPKProtoStandalonePaymentProvisioningFlowPickerItem setTitle:]
  -[NPKProtoStandalonePaymentProvisioningFlowPickerItem .cxx_destruct]
  -[NPKProtoStandalonePaymentProvisioningFlowPickerItem dictionaryRepresentation]
  -[NPKProtoStandalonePaymentProvisioningFlowPickerItem writeTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowPickerItem isEqual:]
  -[NPKProtoStandalonePaymentProvisioningFlowPickerItem copyTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowPickerItem readFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowPickerItem identifier]
  -[NPKProtoStandalonePaymentProvisioningFlowPickerItem products]
  -[NPKProtoStandalonePaymentProvisioningFlowPickerItem title]
  -[NPKProtoStandalonePaymentProvisioningFlowPickerItem setIdentifier:]
  -[NPKProtoStandalonePaymentProvisioningFlowPickerItem hasIdentifier]
  -[NPKProtoStandalonePaymentProvisioningFlowPickerItem copyWithZone:]
  -[NPKProtoStandalonePaymentProvisioningFlowPickerItem setProducts:]
  -[NPKProtoStandalonePaymentProvisioningFlowPickerItem addProducts:]
  -[NPKProtoStandalonePaymentProvisioningFlowPickerItem productsCount]
  -[NPKProtoStandalonePaymentProvisioningFlowPickerItem clearProducts]
  -[NPKProtoStandalonePaymentProvisioningFlowPickerItem productsAtIndex:]


NPKIDVRemoteDeviceCredentialPreflightStatus : NSObject <NSSecureCoding>
 @property  unsigned long credentialType
 @property  unsigned long provisionedPassesCount
 @property  BOOL preflightSuccessful

  // class methods
  +[NPKIDVRemoteDeviceCredentialPreflightStatus supportsSecureCoding]

  // instance methods
  -[NPKIDVRemoteDeviceCredentialPreflightStatus initWithCoder:]
  -[NPKIDVRemoteDeviceCredentialPreflightStatus credentialType]
  -[NPKIDVRemoteDeviceCredentialPreflightStatus encodeWithCoder:]
  -[NPKIDVRemoteDeviceCredentialPreflightStatus initWithCredentialType:provisionedPassesCount:preflightSuccessful:]
  -[NPKIDVRemoteDeviceCredentialPreflightStatus provisionedPassesCount]
  -[NPKIDVRemoteDeviceCredentialPreflightStatus preflightSuccessful]


NPKProtoStandalonePaymentProvisioningFlowLocalDeviceManualEntryStepContext : PBCodable <NSCopying>
 @property  NPKProtoStandalonePaymentProvisioningFlowSecondaryManualEntryStepContext *secondaryManualEntryStepContext

  // instance methods
  -[NPKProtoStandalonePaymentProvisioningFlowLocalDeviceManualEntryStepContext mergeFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowLocalDeviceManualEntryStepContext .cxx_destruct]
  -[NPKProtoStandalonePaymentProvisioningFlowLocalDeviceManualEntryStepContext dictionaryRepresentation]
  -[NPKProtoStandalonePaymentProvisioningFlowLocalDeviceManualEntryStepContext writeTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowLocalDeviceManualEntryStepContext isEqual:]
  -[NPKProtoStandalonePaymentProvisioningFlowLocalDeviceManualEntryStepContext copyTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowLocalDeviceManualEntryStepContext readFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowLocalDeviceManualEntryStepContext copyWithZone:]
  -[NPKProtoStandalonePaymentProvisioningFlowLocalDeviceManualEntryStepContext setSecondaryManualEntryStepContext:]
  -[NPKProtoStandalonePaymentProvisioningFlowLocalDeviceManualEntryStepContext secondaryManualEntryStepContext]


NPKProtoSetPreferredPaymentApplicationRequest : PBRequest <NSCopying>
 @property  BOOL hasPassID
 @property  NSString *passID
 @property  BOOL hasPreferredApplicationAID
 @property  NSString *preferredApplicationAID

  // instance methods
  -[NPKProtoSetPreferredPaymentApplicationRequest mergeFrom:]
  -[NPKProtoSetPreferredPaymentApplicationRequest passID]
  -[NPKProtoSetPreferredPaymentApplicationRequest .cxx_destruct]
  -[NPKProtoSetPreferredPaymentApplicationRequest dictionaryRepresentation]
  -[NPKProtoSetPreferredPaymentApplicationRequest writeTo:]
  -[NPKProtoSetPreferredPaymentApplicationRequest isEqual:]
  -[NPKProtoSetPreferredPaymentApplicationRequest copyTo:]
  -[NPKProtoSetPreferredPaymentApplicationRequest readFrom:]
  -[NPKProtoSetPreferredPaymentApplicationRequest setPassID:]
  -[NPKProtoSetPreferredPaymentApplicationRequest hasPassID]
  -[NPKProtoSetPreferredPaymentApplicationRequest copyWithZone:]
  -[NPKProtoSetPreferredPaymentApplicationRequest setPreferredApplicationAID:]
  -[NPKProtoSetPreferredPaymentApplicationRequest hasPreferredApplicationAID]
  -[NPKProtoSetPreferredPaymentApplicationRequest preferredApplicationAID]


NPKIDVRemoteDeviceProtoGenerateKeyResponse : PBCodable <NSCopying>
 @property  BOOL hasSigningKeyData
 @property  NSData *signingKeyData
 @property  BOOL hasErrorData
 @property  NSData *errorData

  // instance methods
  -[NPKIDVRemoteDeviceProtoGenerateKeyResponse mergeFrom:]
  -[NPKIDVRemoteDeviceProtoGenerateKeyResponse .cxx_destruct]
  -[NPKIDVRemoteDeviceProtoGenerateKeyResponse dictionaryRepresentation]
  -[NPKIDVRemoteDeviceProtoGenerateKeyResponse writeTo:]
  -[NPKIDVRemoteDeviceProtoGenerateKeyResponse isEqual:]
  -[NPKIDVRemoteDeviceProtoGenerateKeyResponse copyTo:]
  -[NPKIDVRemoteDeviceProtoGenerateKeyResponse readFrom:]
  -[NPKIDVRemoteDeviceProtoGenerateKeyResponse copyWithZone:]
  -[NPKIDVRemoteDeviceProtoGenerateKeyResponse errorData]
  -[NPKIDVRemoteDeviceProtoGenerateKeyResponse hasErrorData]
  -[NPKIDVRemoteDeviceProtoGenerateKeyResponse setErrorData:]
  -[NPKIDVRemoteDeviceProtoGenerateKeyResponse signingKeyData]
  -[NPKIDVRemoteDeviceProtoGenerateKeyResponse setSigningKeyData:]
  -[NPKIDVRemoteDeviceProtoGenerateKeyResponse hasSigningKeyData]


NPKQuickPaymentSessionLocalAuthenticationCoordinator : NSObject <LAUIDelegate>
 @property  NSObject<OS_dispatch_queue> *localAuthenticationQueue
 @property  NSObject<OS_dispatch_queue> *callbackQueue
 @property  @? completionHandler
 @property  LAContext *completedContext
 @property  NSData *completedCredential
 @property  NSError *completedError
 @property  LAContext *inProgressContext
 @property  NSMutableArray *pendingLocalAuthenticationEvents
 @property  NSNumber *activeLocalAuthenticationEvent
 @property  <NPKQuickPaymentSessionLocalAuthenticationCoordinatorCredentialDelegate> *credentialDelegate

  // instance methods
  -[NPKQuickPaymentSessionLocalAuthenticationCoordinator initWithCallbackQueue:]
  -[NPKQuickPaymentSessionLocalAuthenticationCoordinator .cxx_destruct]
  -[NPKQuickPaymentSessionLocalAuthenticationCoordinator _performDelegateCallback:]
  -[NPKQuickPaymentSessionLocalAuthenticationCoordinator callbackQueue]
  -[NPKQuickPaymentSessionLocalAuthenticationCoordinator setCallbackQueue:]
  -[NPKQuickPaymentSessionLocalAuthenticationCoordinator setCompletionHandler:]
  -[NPKQuickPaymentSessionLocalAuthenticationCoordinator completionHandler]
  -[NPKQuickPaymentSessionLocalAuthenticationCoordinator event:params:reply:]
  -[NPKQuickPaymentSessionLocalAuthenticationCoordinator beginLocalAuthenticationWithCompletion:]
  -[NPKQuickPaymentSessionLocalAuthenticationCoordinator invalidateLocalAuthenticationContexts]
  -[NPKQuickPaymentSessionLocalAuthenticationCoordinator beginLocalAuthenticationWithPolicy:completion:]
  -[NPKQuickPaymentSessionLocalAuthenticationCoordinator _invokeCompletionHandlerForInvalidationWithError:]
  -[NPKQuickPaymentSessionLocalAuthenticationCoordinator _handleLocalAuthenticationPolicyEvaluatedWithContext:error:]
  -[NPKQuickPaymentSessionLocalAuthenticationCoordinator _nameForLocalAuthenticationEvent:]
  -[NPKQuickPaymentSessionLocalAuthenticationCoordinator _activateLocalAuthenticationEvent:]
  -[NPKQuickPaymentSessionLocalAuthenticationCoordinator _deactivateLocalAuthenticationEvent:]
  -[NPKQuickPaymentSessionLocalAuthenticationCoordinator pendingLocalAuthenticationEvents]
  -[NPKQuickPaymentSessionLocalAuthenticationCoordinator setPendingLocalAuthenticationEvents:]
  -[NPKQuickPaymentSessionLocalAuthenticationCoordinator _presentNextLocalAuthenticationEvent]
  -[NPKQuickPaymentSessionLocalAuthenticationCoordinator activeLocalAuthenticationEvent]
  -[NPKQuickPaymentSessionLocalAuthenticationCoordinator credentialDelegate]
  -[NPKQuickPaymentSessionLocalAuthenticationCoordinator _credentialTypeForEvent:]
  -[NPKQuickPaymentSessionLocalAuthenticationCoordinator setActiveLocalAuthenticationEvent:]
  -[NPKQuickPaymentSessionLocalAuthenticationCoordinator inProgressContext]
  -[NPKQuickPaymentSessionLocalAuthenticationCoordinator _cancelLocalAuthentication]
  -[NPKQuickPaymentSessionLocalAuthenticationCoordinator setInProgressContext:]
  -[NPKQuickPaymentSessionLocalAuthenticationCoordinator beginLocalAuthenticationWithAccessControl:operation:completion:]
  -[NPKQuickPaymentSessionLocalAuthenticationCoordinator setCredentialDelegate:]
  -[NPKQuickPaymentSessionLocalAuthenticationCoordinator localAuthenticationQueue]
  -[NPKQuickPaymentSessionLocalAuthenticationCoordinator setLocalAuthenticationQueue:]
  -[NPKQuickPaymentSessionLocalAuthenticationCoordinator completedContext]
  -[NPKQuickPaymentSessionLocalAuthenticationCoordinator setCompletedContext:]
  -[NPKQuickPaymentSessionLocalAuthenticationCoordinator completedCredential]
  -[NPKQuickPaymentSessionLocalAuthenticationCoordinator setCompletedCredential:]
  -[NPKQuickPaymentSessionLocalAuthenticationCoordinator completedError]
  -[NPKQuickPaymentSessionLocalAuthenticationCoordinator setCompletedError:]


NPKProtoPass : PBCodable <NSCopying>
 @property  NSData *passData

  // instance methods
  -[NPKProtoPass mergeFrom:]
  -[NPKProtoPass .cxx_destruct]
  -[NPKProtoPass dictionaryRepresentation]
  -[NPKProtoPass writeTo:]
  -[NPKProtoPass isEqual:]
  -[NPKProtoPass copyTo:]
  -[NPKProtoPass readFrom:]
  -[NPKProtoPass copyWithZone:]
  -[NPKProtoPass passData]
  -[NPKProtoPass setPassData:]


NPKProtoStandalonePaymentSetupField : PBCodable <NSCopying>
 @property  NSString *identifier
 @property  int fieldType
 @property  BOOL hasCurrentValue
 @property  NSString *currentValue

  // instance methods
  -[NPKProtoStandalonePaymentSetupField currentValue]
  -[NPKProtoStandalonePaymentSetupField mergeFrom:]
  -[NPKProtoStandalonePaymentSetupField .cxx_destruct]
  -[NPKProtoStandalonePaymentSetupField dictionaryRepresentation]
  -[NPKProtoStandalonePaymentSetupField writeTo:]
  -[NPKProtoStandalonePaymentSetupField isEqual:]
  -[NPKProtoStandalonePaymentSetupField copyTo:]
  -[NPKProtoStandalonePaymentSetupField readFrom:]
  -[NPKProtoStandalonePaymentSetupField identifier]
  -[NPKProtoStandalonePaymentSetupField setIdentifier:]
  -[NPKProtoStandalonePaymentSetupField copyWithZone:]
  -[NPKProtoStandalonePaymentSetupField setCurrentValue:]
  -[NPKProtoStandalonePaymentSetupField fieldType]
  -[NPKProtoStandalonePaymentSetupField setFieldType:]
  -[NPKProtoStandalonePaymentSetupField fieldTypeAsString:]
  -[NPKProtoStandalonePaymentSetupField StringAsFieldType:]
  -[NPKProtoStandalonePaymentSetupField hasCurrentValue]


NPKRemoteButtonListener : NPKButtonListener <NPKDoublePressDelegationAssertionDelegate>
 @property  NPKDoublePressDelegationAssertion *delegationAssertion
 @property  <NPKRemoteButtonListenerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NPKRemoteButtonListener .cxx_destruct]
  -[NPKRemoteButtonListener setDelegate:]
  -[NPKRemoteButtonListener init]
  -[NPKRemoteButtonListener delegate]
  -[NPKRemoteButtonListener dealloc]
  -[NPKRemoteButtonListener doublePressDelegationAssertionDidReceiveDelegatedDoublePressEvent:]
  -[NPKRemoteButtonListener doublePressDelegationAssertion:didReceiveTerminalAuthenticationRequestForPassWithUniqueID:]
  -[NPKRemoteButtonListener delegationAssertion]
  -[NPKRemoteButtonListener setDelegationAssertion:]


NPKProtoStandalonePaymentProvisioningFlowAcknowledgeWelcomeRequest : PBRequest <NSCopying>
 @property  NPKProtoStandaloneRequestHeader *requestHeader

  // instance methods
  -[NPKProtoStandalonePaymentProvisioningFlowAcknowledgeWelcomeRequest mergeFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowAcknowledgeWelcomeRequest .cxx_destruct]
  -[NPKProtoStandalonePaymentProvisioningFlowAcknowledgeWelcomeRequest dictionaryRepresentation]
  -[NPKProtoStandalonePaymentProvisioningFlowAcknowledgeWelcomeRequest writeTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowAcknowledgeWelcomeRequest isEqual:]
  -[NPKProtoStandalonePaymentProvisioningFlowAcknowledgeWelcomeRequest copyTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowAcknowledgeWelcomeRequest readFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowAcknowledgeWelcomeRequest copyWithZone:]
  -[NPKProtoStandalonePaymentProvisioningFlowAcknowledgeWelcomeRequest requestHeader]
  -[NPKProtoStandalonePaymentProvisioningFlowAcknowledgeWelcomeRequest setRequestHeader:]


NPKProtoEnableServiceModeResponse : PBCodable <NSCopying>
 @property  BOOL hasPending
 @property  BOOL pending
 @property  BOOL hasUnlockRequired
 @property  BOOL unlockRequired

  // instance methods
  -[NPKProtoEnableServiceModeResponse pending]
  -[NPKProtoEnableServiceModeResponse mergeFrom:]
  -[NPKProtoEnableServiceModeResponse setPending:]
  -[NPKProtoEnableServiceModeResponse dictionaryRepresentation]
  -[NPKProtoEnableServiceModeResponse writeTo:]
  -[NPKProtoEnableServiceModeResponse isEqual:]
  -[NPKProtoEnableServiceModeResponse copyTo:]
  -[NPKProtoEnableServiceModeResponse readFrom:]
  -[NPKProtoEnableServiceModeResponse copyWithZone:]
  -[NPKProtoEnableServiceModeResponse setHasPending:]
  -[NPKProtoEnableServiceModeResponse hasPending]
  -[NPKProtoEnableServiceModeResponse setUnlockRequired:]
  -[NPKProtoEnableServiceModeResponse setHasUnlockRequired:]
  -[NPKProtoEnableServiceModeResponse hasUnlockRequired]
  -[NPKProtoEnableServiceModeResponse unlockRequired]


NPKProtoAccountAttestationAnonymizationSaltResponse : PBCodable <NSCopying>
 @property  BOOL hasAnonymizationSalt
 @property  NSString *anonymizationSalt
 @property  BOOL hasErrorData
 @property  NSData *errorData

  // instance methods
  -[NPKProtoAccountAttestationAnonymizationSaltResponse mergeFrom:]
  -[NPKProtoAccountAttestationAnonymizationSaltResponse .cxx_destruct]
  -[NPKProtoAccountAttestationAnonymizationSaltResponse dictionaryRepresentation]
  -[NPKProtoAccountAttestationAnonymizationSaltResponse writeTo:]
  -[NPKProtoAccountAttestationAnonymizationSaltResponse anonymizationSalt]
  -[NPKProtoAccountAttestationAnonymizationSaltResponse setAnonymizationSalt:]
  -[NPKProtoAccountAttestationAnonymizationSaltResponse isEqual:]
  -[NPKProtoAccountAttestationAnonymizationSaltResponse copyTo:]
  -[NPKProtoAccountAttestationAnonymizationSaltResponse readFrom:]
  -[NPKProtoAccountAttestationAnonymizationSaltResponse copyWithZone:]
  -[NPKProtoAccountAttestationAnonymizationSaltResponse errorData]
  -[NPKProtoAccountAttestationAnonymizationSaltResponse hasErrorData]
  -[NPKProtoAccountAttestationAnonymizationSaltResponse setErrorData:]
  -[NPKProtoAccountAttestationAnonymizationSaltResponse hasAnonymizationSalt]


NPKProtoRequestPeerAccountTermsAndConditionsAcceptance : PBCodable <NSCopying>
  // instance methods
  -[NPKProtoRequestPeerAccountTermsAndConditionsAcceptance mergeFrom:]
  -[NPKProtoRequestPeerAccountTermsAndConditionsAcceptance dictionaryRepresentation]
  -[NPKProtoRequestPeerAccountTermsAndConditionsAcceptance writeTo:]
  -[NPKProtoRequestPeerAccountTermsAndConditionsAcceptance isEqual:]
  -[NPKProtoRequestPeerAccountTermsAndConditionsAcceptance copyTo:]
  -[NPKProtoRequestPeerAccountTermsAndConditionsAcceptance readFrom:]
  -[NPKProtoRequestPeerAccountTermsAndConditionsAcceptance copyWithZone:]


NPKIDVRemoteDeviceProtoHeartbeatRequest : PBRequest <NSCopying>
 @property  NSMutableArray *inProgressResponseIdentifiers

  // class methods
  +[NPKIDVRemoteDeviceProtoHeartbeatRequest inProgressResponseIdentifiersType]

  // instance methods
  -[NPKIDVRemoteDeviceProtoHeartbeatRequest mergeFrom:]
  -[NPKIDVRemoteDeviceProtoHeartbeatRequest .cxx_destruct]
  -[NPKIDVRemoteDeviceProtoHeartbeatRequest dictionaryRepresentation]
  -[NPKIDVRemoteDeviceProtoHeartbeatRequest writeTo:]
  -[NPKIDVRemoteDeviceProtoHeartbeatRequest isEqual:]
  -[NPKIDVRemoteDeviceProtoHeartbeatRequest copyTo:]
  -[NPKIDVRemoteDeviceProtoHeartbeatRequest readFrom:]
  -[NPKIDVRemoteDeviceProtoHeartbeatRequest copyWithZone:]
  -[NPKIDVRemoteDeviceProtoHeartbeatRequest inProgressResponseIdentifiers]
  -[NPKIDVRemoteDeviceProtoHeartbeatRequest addInProgressResponseIdentifiers:]
  -[NPKIDVRemoteDeviceProtoHeartbeatRequest inProgressResponseIdentifiersCount]
  -[NPKIDVRemoteDeviceProtoHeartbeatRequest clearInProgressResponseIdentifiers]
  -[NPKIDVRemoteDeviceProtoHeartbeatRequest inProgressResponseIdentifiersAtIndex:]
  -[NPKIDVRemoteDeviceProtoHeartbeatRequest setInProgressResponseIdentifiers:]


NPKProtoStandaloneHelper : NSObject
  // class methods
  +[NPKProtoStandaloneHelper setPassImageSize:]
  +[NPKProtoStandaloneHelper setPassThumbnailImageSize:]
  +[NPKProtoStandaloneHelper passImageSize]
  +[NPKProtoStandaloneHelper passThumbnailImageSize]
  +[NPKProtoStandaloneHelper _convertWelcomeStepContext:protoContext:]
  +[NPKProtoStandaloneHelper _convertChooseFlowStepContext:protoContext:]
  +[NPKProtoStandaloneHelper _convertChooseProductStepContext:protoContext:]
  +[NPKProtoStandaloneHelper _convertChooseCredentialsStepContext:protoContext:]
  +[NPKProtoStandaloneHelper _convertManualEntryStepContext:protoContext:]
  +[NPKProtoStandaloneHelper _convertSecondaryManualEntryStepContext:protoContext:]
  +[NPKProtoStandaloneHelper _convertPasscodeUpgradeStepContext:protoContext:]
  +[NPKProtoStandaloneHelper _convertTermsAndConditionsStepContext:protoContext:]
  +[NPKProtoStandaloneHelper _convertProvisioningProgressStepContext:protoContext:]
  +[NPKProtoStandaloneHelper _convertProvisioningResultStepContext:protoContext:]
  +[NPKProtoStandaloneHelper _convertIssuerVerificationChannelsStepContext:protoContext:]
  +[NPKProtoStandaloneHelper _convertIssuerVerificationFieldsStepContext:protoContext:]
  +[NPKProtoStandaloneHelper _convertIssuerVerificationCodeStepContext:protoContext:]
  +[NPKProtoStandaloneHelper _convertMoreInformationStepContext:protoContext:]
  +[NPKProtoStandaloneHelper _convertLocalDeviceManualEntry:protoContext:]
  +[NPKProtoStandaloneHelper _convertLocalDeviceManualEntryProgress:protoContext:]
  +[NPKProtoStandaloneHelper _convertDigitalIssuanceAmountStepContext:protoContext:]
  +[NPKProtoStandaloneHelper _convertDigitalIssuancePaymentStepContext:protoContext:]
  +[NPKProtoStandaloneHelper _convertReaderModeEntryStepContext:protoContext:]
  +[NPKProtoStandaloneHelper _convertReaderModeIngestionStepContext:protoContext:]
  +[NPKProtoStandaloneHelper toStringValue:]
  +[NPKProtoStandaloneHelper toNPKProtoStandalonePaymentProvisioningFlowPickerSection:]
  +[NPKProtoStandaloneHelper toNPKProtoStandalonePaymentSetupProduct:]
  +[NPKProtoStandaloneHelper toNPKProtoStandalonePaymentCredentialUnion:withFlowIdentifier:thumbnailSize:]
  +[NPKProtoStandaloneHelper toNPKProtoStandalonePaymentRemoteCredential:thumbnailSize:]
  +[NPKProtoStandaloneHelper toNPKProtoStandalonePaymentSetupField:]
  +[NPKProtoStandaloneHelper toNPKProtoStandaloneReaderModeIngestionState:]
  +[NPKProtoStandaloneHelper toNPKProtoStandalonePaymentProvisioningFlowManualEntryStepContext:]
  +[NPKProtoStandaloneHelper toNPKProtoStandalonePaymentSetupFieldType:]
  +[NPKProtoStandaloneHelper toNPKProtoStandaloneError:]
  +[NPKProtoStandaloneHelper toNPKProtoStandalonePaymentPass:thumbnailSize:]
  +[NPKProtoStandaloneHelper toNPKProtoStandaloneVerificationChannel:]
  +[NPKProtoStandaloneHelper toNPKProtoStandalonePaymentSetupMoreInfoItem:]
  +[NPKProtoStandaloneHelper _convertProtoWelcomeStepContext:requestContext:]
  +[NPKProtoStandaloneHelper toNPKProtoStandalonePassType:]
  +[NPKProtoStandaloneHelper toNPKProtoStandalonePass:thumbnailSize:]
  +[NPKProtoStandaloneHelper toNPKProtoStandalonePaymentPassActivationState:]
  +[NPKProtoStandaloneHelper toNPKProtoStandalonePaymentApplicationState:]
  +[NPKProtoStandaloneHelper toNPKProtoStandaloneVerificationChannelType:]
  +[NPKProtoStandaloneHelper toNPKProtoStandaloneCreditAccountCredential:thumbnailSize:]
  +[NPKProtoStandaloneHelper toNPKProtoStandalonePaymentCredential:]
  +[NPKProtoStandaloneHelper toNPKProtoStandalonePaymentProvisioningFlowPickerItem:]
  +[NPKProtoStandaloneHelper toJsonString:]
  +[NPKProtoStandaloneHelper toNPKProtoStandalonePaymentSetupProductImageAssetURLs:]
  +[NPKProtoStandaloneHelper toNPKProtoStandalonePaymentSetupProductPaymentOption:]
  +[NPKProtoStandaloneHelper toNPKProtoStandalonePaymentProvisioningMethodMetadata:]
  +[NPKProtoStandaloneHelper toNPKProtoStandalonePaymentDigitalIssuanceMetadata:]
  +[NPKProtoStandaloneHelper toPKPaymentSetupFieldType:]
  +[NPKProtoStandaloneHelper toNPKProtoStandalonePaymentProvisioningFlowStepContext:fromStep:toStep:]
  +[NPKProtoStandaloneHelper fromNPKProtoStandalonePaymentProvisioningFlowStepContext:requestContext:]
  +[NPKProtoStandaloneHelper sha1hash:]
  +[NPKProtoStandaloneHelper toPKPaymentSetupField:]


NPKFidoAuthCoordinator : NSObject
 @property  LAContext *context

  // instance methods
  -[NPKFidoAuthCoordinator .cxx_destruct]
  -[NPKFidoAuthCoordinator clearContext]
  -[NPKFidoAuthCoordinator context]
  -[NPKFidoAuthCoordinator _isDeviceLocked]
  -[NPKFidoAuthCoordinator _isWristDetectDisabled]
  -[NPKFidoAuthCoordinator requestAuthorizationWithCompletion:]


NPKProtoMarkPaymentPassForDeleteRequest : PBRequest <NSCopying>
 @property  NSString *passID
 @property  NSMutableArray *paymentApplicationAIDs

  // class methods
  +[NPKProtoMarkPaymentPassForDeleteRequest paymentApplicationAIDsType]

  // instance methods
  -[NPKProtoMarkPaymentPassForDeleteRequest mergeFrom:]
  -[NPKProtoMarkPaymentPassForDeleteRequest passID]
  -[NPKProtoMarkPaymentPassForDeleteRequest .cxx_destruct]
  -[NPKProtoMarkPaymentPassForDeleteRequest dictionaryRepresentation]
  -[NPKProtoMarkPaymentPassForDeleteRequest writeTo:]
  -[NPKProtoMarkPaymentPassForDeleteRequest isEqual:]
  -[NPKProtoMarkPaymentPassForDeleteRequest copyTo:]
  -[NPKProtoMarkPaymentPassForDeleteRequest readFrom:]
  -[NPKProtoMarkPaymentPassForDeleteRequest setPassID:]
  -[NPKProtoMarkPaymentPassForDeleteRequest copyWithZone:]
  -[NPKProtoMarkPaymentPassForDeleteRequest addPaymentApplicationAIDs:]
  -[NPKProtoMarkPaymentPassForDeleteRequest paymentApplicationAIDsCount]
  -[NPKProtoMarkPaymentPassForDeleteRequest clearPaymentApplicationAIDs]
  -[NPKProtoMarkPaymentPassForDeleteRequest paymentApplicationAIDsAtIndex:]
  -[NPKProtoMarkPaymentPassForDeleteRequest paymentApplicationAIDs]
  -[NPKProtoMarkPaymentPassForDeleteRequest setPaymentApplicationAIDs:]


NPKIdentityExtendedReviewUserNotification : NPKUserNotification
 @property  unsigned long notificationType
 @property  unsigned long documentType
 @property  NSString *issuerName

  // instance methods
  -[NPKIdentityExtendedReviewUserNotification body]
  -[NPKIdentityExtendedReviewUserNotification .cxx_destruct]
  -[NPKIdentityExtendedReviewUserNotification notificationType]
  -[NPKIdentityExtendedReviewUserNotification title]
  -[NPKIdentityExtendedReviewUserNotification issuerName]
  -[NPKIdentityExtendedReviewUserNotification documentType]
  -[NPKIdentityExtendedReviewUserNotification identifierHashComponents]
  -[NPKIdentityExtendedReviewUserNotification initWithNotificationType:documentType:issuerName:]


NPKPassSelectionFieldDetectorListener : NSObject <NPKPassSelectionFieldDetectorListener>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NPKPassSelectionFieldDetectorListener registerObserver:]
  -[NPKPassSelectionFieldDetectorListener .cxx_destruct]
  -[NPKPassSelectionFieldDetectorListener init]
  -[NPKPassSelectionFieldDetectorListener _notifyObserverDidEnterFieldForPassWithUniqueID:]


NPKProtoRelevantPassTuple : PBCodable <NSCopying>
 @property  NSString *passID
 @property  BOOL hasRelevantText
 @property  NSString *relevantText

  // instance methods
  -[NPKProtoRelevantPassTuple mergeFrom:]
  -[NPKProtoRelevantPassTuple passID]
  -[NPKProtoRelevantPassTuple .cxx_destruct]
  -[NPKProtoRelevantPassTuple dictionaryRepresentation]
  -[NPKProtoRelevantPassTuple writeTo:]
  -[NPKProtoRelevantPassTuple isEqual:]
  -[NPKProtoRelevantPassTuple copyTo:]
  -[NPKProtoRelevantPassTuple readFrom:]
  -[NPKProtoRelevantPassTuple setPassID:]
  -[NPKProtoRelevantPassTuple relevantText]
  -[NPKProtoRelevantPassTuple copyWithZone:]
  -[NPKProtoRelevantPassTuple setRelevantText:]
  -[NPKProtoRelevantPassTuple hasRelevantText]


NPKProtoStandalonePingRequest : PBRequest <NSCopying>
 @property  NSString *content

  // instance methods
  -[NPKProtoStandalonePingRequest setContent:]
  -[NPKProtoStandalonePingRequest content]
  -[NPKProtoStandalonePingRequest mergeFrom:]
  -[NPKProtoStandalonePingRequest .cxx_destruct]
  -[NPKProtoStandalonePingRequest dictionaryRepresentation]
  -[NPKProtoStandalonePingRequest writeTo:]
  -[NPKProtoStandalonePingRequest isEqual:]
  -[NPKProtoStandalonePingRequest copyTo:]
  -[NPKProtoStandalonePingRequest readFrom:]
  -[NPKProtoStandalonePingRequest copyWithZone:]


NPKIDVRemoteDeviceProtoDeleteGlobalAuthACLResponse : PBCodable <NSCopying>
 @property  BOOL hasErrorData
 @property  NSData *errorData

  // instance methods
  -[NPKIDVRemoteDeviceProtoDeleteGlobalAuthACLResponse mergeFrom:]
  -[NPKIDVRemoteDeviceProtoDeleteGlobalAuthACLResponse .cxx_destruct]
  -[NPKIDVRemoteDeviceProtoDeleteGlobalAuthACLResponse dictionaryRepresentation]
  -[NPKIDVRemoteDeviceProtoDeleteGlobalAuthACLResponse writeTo:]
  -[NPKIDVRemoteDeviceProtoDeleteGlobalAuthACLResponse isEqual:]
  -[NPKIDVRemoteDeviceProtoDeleteGlobalAuthACLResponse copyTo:]
  -[NPKIDVRemoteDeviceProtoDeleteGlobalAuthACLResponse readFrom:]
  -[NPKIDVRemoteDeviceProtoDeleteGlobalAuthACLResponse copyWithZone:]
  -[NPKIDVRemoteDeviceProtoDeleteGlobalAuthACLResponse errorData]
  -[NPKIDVRemoteDeviceProtoDeleteGlobalAuthACLResponse hasErrorData]
  -[NPKIDVRemoteDeviceProtoDeleteGlobalAuthACLResponse setErrorData:]


NPKDoubleClickClientSuppressor : NSObject
 @property  NPKAssertion *suppressionAssertion
 @property  NSMutableIndexSet *suppressionRequestTokens
 @property  unsigned long nextSuppressionRequestToken
 @property  NSObject<OS_dispatch_queue> *suppressorQueue

  // class methods
  +[NPKDoubleClickClientSuppressor sharedInstance]
  +[NPKDoubleClickClientSuppressor requestDoubleClickClientSuppressionWithResponseHandler:]
  +[NPKDoubleClickClientSuppressor endDoubleClickClientSuppressionWithRequestToken:]
  +[NPKDoubleClickClientSuppressor isSuppressingDoubleClickClients]

  // instance methods
  -[NPKDoubleClickClientSuppressor .cxx_destruct]
  -[NPKDoubleClickClientSuppressor init]
  -[NPKDoubleClickClientSuppressor _acquireSuppressionAssertionIfNeededWithCompletion:]
  -[NPKDoubleClickClientSuppressor _acquireSuppressionAssertionWithCompletion:]
  -[NPKDoubleClickClientSuppressor dealloc]
  -[NPKDoubleClickClientSuppressor suppressionAssertion]
  -[NPKDoubleClickClientSuppressor requestDoubleClickClientSuppressionWithResponseHandler:]
  -[NPKDoubleClickClientSuppressor endDoubleClickClientSuppressionWithRequestToken:]
  -[NPKDoubleClickClientSuppressor isSuppressingDoubleClickClients]
  -[NPKDoubleClickClientSuppressor suppressorQueue]
  -[NPKDoubleClickClientSuppressor nextSuppressionRequestToken]
  -[NPKDoubleClickClientSuppressor setNextSuppressionRequestToken:]
  -[NPKDoubleClickClientSuppressor _postSuppressionStateChanged]
  -[NPKDoubleClickClientSuppressor suppressionRequestTokens]
  -[NPKDoubleClickClientSuppressor setSuppressionAssertion:]
  -[NPKDoubleClickClientSuppressor setSuppressionRequestTokens:]
  -[NPKDoubleClickClientSuppressor setSuppressorQueue:]


NPKProtoStandalonePaymentProvisioningFlowHandleReaderModeFieldsRequest : PBRequest <NSCopying>
 @property  NPKProtoStandaloneRequestHeader *requestHeader
 @property  NSMutableArray *readerModeFields

  // class methods
  +[NPKProtoStandalonePaymentProvisioningFlowHandleReaderModeFieldsRequest readerModeFieldsType]

  // instance methods
  -[NPKProtoStandalonePaymentProvisioningFlowHandleReaderModeFieldsRequest mergeFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleReaderModeFieldsRequest .cxx_destruct]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleReaderModeFieldsRequest dictionaryRepresentation]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleReaderModeFieldsRequest writeTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleReaderModeFieldsRequest isEqual:]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleReaderModeFieldsRequest copyTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleReaderModeFieldsRequest readFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleReaderModeFieldsRequest copyWithZone:]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleReaderModeFieldsRequest requestHeader]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleReaderModeFieldsRequest setRequestHeader:]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleReaderModeFieldsRequest addReaderModeFields:]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleReaderModeFieldsRequest readerModeFieldsCount]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleReaderModeFieldsRequest clearReaderModeFields]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleReaderModeFieldsRequest readerModeFieldsAtIndex:]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleReaderModeFieldsRequest readerModeFields]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleReaderModeFieldsRequest setReaderModeFields:]


NPKProtoSignDataResponse : PBCodable <NSCopying>
 @property  BOOL hasPending
 @property  BOOL pending
 @property  BOOL hasSignedData
 @property  NSData *signedData
 @property  BOOL hasCertsBytes
 @property  NSData *certsBytes
 @property  BOOL hasSignatureInfoBytes
 @property  NSData *signatureInfoBytes

  // instance methods
  -[NPKProtoSignDataResponse pending]
  -[NPKProtoSignDataResponse mergeFrom:]
  -[NPKProtoSignDataResponse setPending:]
  -[NPKProtoSignDataResponse .cxx_destruct]
  -[NPKProtoSignDataResponse dictionaryRepresentation]
  -[NPKProtoSignDataResponse writeTo:]
  -[NPKProtoSignDataResponse setSignedData:]
  -[NPKProtoSignDataResponse isEqual:]
  -[NPKProtoSignDataResponse copyTo:]
  -[NPKProtoSignDataResponse readFrom:]
  -[NPKProtoSignDataResponse signedData]
  -[NPKProtoSignDataResponse copyWithZone:]
  -[NPKProtoSignDataResponse setHasPending:]
  -[NPKProtoSignDataResponse hasPending]
  -[NPKProtoSignDataResponse setCertsBytes:]
  -[NPKProtoSignDataResponse setSignatureInfoBytes:]
  -[NPKProtoSignDataResponse hasSignedData]
  -[NPKProtoSignDataResponse hasCertsBytes]
  -[NPKProtoSignDataResponse hasSignatureInfoBytes]
  -[NPKProtoSignDataResponse certsBytes]
  -[NPKProtoSignDataResponse signatureInfoBytes]


NPKQuickPaymentSessionCleanupDelegate : NSObject <NPKQuickPaymentSessionDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NPKQuickPaymentSessionCleanupDelegate paymentSession:didCompleteForReason:withTransactionContext:]
  -[NPKQuickPaymentSessionCleanupDelegate paymentSession:didCompleteTransactionWithContext:]
  -[NPKQuickPaymentSessionCleanupDelegate _saveTransactionFromContext:]


NPKProtoStandalonePaymentProvisioningFlowDigitalIssuanceAmountStepContext : PBCodable <NSCopying>
 @property  BOOL hasProduct
 @property  NPKProtoStandalonePaymentSetupProduct *product
 @property  BOOL hasAllowsReaderModeEntry
 @property  BOOL allowsReaderModeEntry

  // instance methods
  -[NPKProtoStandalonePaymentProvisioningFlowDigitalIssuanceAmountStepContext mergeFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowDigitalIssuanceAmountStepContext .cxx_destruct]
  -[NPKProtoStandalonePaymentProvisioningFlowDigitalIssuanceAmountStepContext product]
  -[NPKProtoStandalonePaymentProvisioningFlowDigitalIssuanceAmountStepContext dictionaryRepresentation]
  -[NPKProtoStandalonePaymentProvisioningFlowDigitalIssuanceAmountStepContext writeTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowDigitalIssuanceAmountStepContext isEqual:]
  -[NPKProtoStandalonePaymentProvisioningFlowDigitalIssuanceAmountStepContext copyTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowDigitalIssuanceAmountStepContext readFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowDigitalIssuanceAmountStepContext setProduct:]
  -[NPKProtoStandalonePaymentProvisioningFlowDigitalIssuanceAmountStepContext copyWithZone:]
  -[NPKProtoStandalonePaymentProvisioningFlowDigitalIssuanceAmountStepContext hasProduct]
  -[NPKProtoStandalonePaymentProvisioningFlowDigitalIssuanceAmountStepContext allowsReaderModeEntry]
  -[NPKProtoStandalonePaymentProvisioningFlowDigitalIssuanceAmountStepContext setAllowsReaderModeEntry:]
  -[NPKProtoStandalonePaymentProvisioningFlowDigitalIssuanceAmountStepContext setHasAllowsReaderModeEntry:]
  -[NPKProtoStandalonePaymentProvisioningFlowDigitalIssuanceAmountStepContext hasAllowsReaderModeEntry]


NPKProtoFeatureApplicationsForAccountIdentifierResponse : PBCodable <NSCopying>
 @property  NSMutableArray *featureApplications

  // class methods
  +[NPKProtoFeatureApplicationsForAccountIdentifierResponse featureApplicationsType]

  // instance methods
  -[NPKProtoFeatureApplicationsForAccountIdentifierResponse mergeFrom:]
  -[NPKProtoFeatureApplicationsForAccountIdentifierResponse .cxx_destruct]
  -[NPKProtoFeatureApplicationsForAccountIdentifierResponse dictionaryRepresentation]
  -[NPKProtoFeatureApplicationsForAccountIdentifierResponse setFeatureApplications:]
  -[NPKProtoFeatureApplicationsForAccountIdentifierResponse writeTo:]
  -[NPKProtoFeatureApplicationsForAccountIdentifierResponse isEqual:]
  -[NPKProtoFeatureApplicationsForAccountIdentifierResponse featureApplications]
  -[NPKProtoFeatureApplicationsForAccountIdentifierResponse copyTo:]
  -[NPKProtoFeatureApplicationsForAccountIdentifierResponse readFrom:]
  -[NPKProtoFeatureApplicationsForAccountIdentifierResponse copyWithZone:]
  -[NPKProtoFeatureApplicationsForAccountIdentifierResponse addFeatureApplications:]
  -[NPKProtoFeatureApplicationsForAccountIdentifierResponse featureApplicationsCount]
  -[NPKProtoFeatureApplicationsForAccountIdentifierResponse clearFeatureApplications]
  -[NPKProtoFeatureApplicationsForAccountIdentifierResponse featureApplicationsAtIndex:]


NPKProtoRemoveExpressPassesWithCardTypeRequest : PBRequest <NSCopying>
 @property  BOOL hasCardType
 @property  NSString *cardType

  // instance methods
  -[NPKProtoRemoveExpressPassesWithCardTypeRequest cardType]
  -[NPKProtoRemoveExpressPassesWithCardTypeRequest mergeFrom:]
  -[NPKProtoRemoveExpressPassesWithCardTypeRequest .cxx_destruct]
  -[NPKProtoRemoveExpressPassesWithCardTypeRequest dictionaryRepresentation]
  -[NPKProtoRemoveExpressPassesWithCardTypeRequest writeTo:]
  -[NPKProtoRemoveExpressPassesWithCardTypeRequest isEqual:]
  -[NPKProtoRemoveExpressPassesWithCardTypeRequest copyTo:]
  -[NPKProtoRemoveExpressPassesWithCardTypeRequest readFrom:]
  -[NPKProtoRemoveExpressPassesWithCardTypeRequest setCardType:]
  -[NPKProtoRemoveExpressPassesWithCardTypeRequest copyWithZone:]
  -[NPKProtoRemoveExpressPassesWithCardTypeRequest hasCardType]


NPKProtoStandalonePaymentProvisioningFlowWelcomeStepContext : PBCodable <NSCopying>
 @property  NSMutableArray *heroImages

  // class methods
  +[NPKProtoStandalonePaymentProvisioningFlowWelcomeStepContext heroImagesType]

  // instance methods
  -[NPKProtoStandalonePaymentProvisioningFlowWelcomeStepContext mergeFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowWelcomeStepContext .cxx_destruct]
  -[NPKProtoStandalonePaymentProvisioningFlowWelcomeStepContext dictionaryRepresentation]
  -[NPKProtoStandalonePaymentProvisioningFlowWelcomeStepContext writeTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowWelcomeStepContext isEqual:]
  -[NPKProtoStandalonePaymentProvisioningFlowWelcomeStepContext copyTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowWelcomeStepContext readFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowWelcomeStepContext copyWithZone:]
  -[NPKProtoStandalonePaymentProvisioningFlowWelcomeStepContext heroImages]
  -[NPKProtoStandalonePaymentProvisioningFlowWelcomeStepContext setHeroImages:]
  -[NPKProtoStandalonePaymentProvisioningFlowWelcomeStepContext addHeroImages:]
  -[NPKProtoStandalonePaymentProvisioningFlowWelcomeStepContext heroImagesCount]
  -[NPKProtoStandalonePaymentProvisioningFlowWelcomeStepContext clearHeroImages]
  -[NPKProtoStandalonePaymentProvisioningFlowWelcomeStepContext heroImagesAtIndex:]


NPKIDVRemoteDeviceServiceServer : PDXPCService <NPKIDVRemoteDeviceServiceServerProtocol>
 @property  <NPKIDVRemoteDeviceServiceServerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NPKIDVRemoteDeviceServiceServer .cxx_destruct]
  -[NPKIDVRemoteDeviceServiceServer initWithConnection:delegate:]
  -[NPKIDVRemoteDeviceServiceServer setDelegate:]
  -[NPKIDVRemoteDeviceServiceServer delegate]
  -[NPKIDVRemoteDeviceServiceServer didReceiveEvent:fromRemoteDeviceWithID:ackHandler:]


NPKProtoMarkAllAppletsForDeletionRequest : PBRequest <NSCopying>
  // instance methods
  -[NPKProtoMarkAllAppletsForDeletionRequest mergeFrom:]
  -[NPKProtoMarkAllAppletsForDeletionRequest dictionaryRepresentation]
  -[NPKProtoMarkAllAppletsForDeletionRequest writeTo:]
  -[NPKProtoMarkAllAppletsForDeletionRequest isEqual:]
  -[NPKProtoMarkAllAppletsForDeletionRequest copyTo:]
  -[NPKProtoMarkAllAppletsForDeletionRequest readFrom:]
  -[NPKProtoMarkAllAppletsForDeletionRequest copyWithZone:]


NPKProtoSignWithFidoKeyResponse : PBCodable <NSCopying>
 @property  BOOL hasFidoAttestation
 @property  NSData *fidoAttestation
 @property  BOOL hasErrorData
 @property  NSData *errorData

  // instance methods
  -[NPKProtoSignWithFidoKeyResponse mergeFrom:]
  -[NPKProtoSignWithFidoKeyResponse .cxx_destruct]
  -[NPKProtoSignWithFidoKeyResponse dictionaryRepresentation]
  -[NPKProtoSignWithFidoKeyResponse writeTo:]
  -[NPKProtoSignWithFidoKeyResponse setFidoAttestation:]
  -[NPKProtoSignWithFidoKeyResponse isEqual:]
  -[NPKProtoSignWithFidoKeyResponse copyTo:]
  -[NPKProtoSignWithFidoKeyResponse readFrom:]
  -[NPKProtoSignWithFidoKeyResponse copyWithZone:]
  -[NPKProtoSignWithFidoKeyResponse fidoAttestation]
  -[NPKProtoSignWithFidoKeyResponse errorData]
  -[NPKProtoSignWithFidoKeyResponse hasErrorData]
  -[NPKProtoSignWithFidoKeyResponse setErrorData:]
  -[NPKProtoSignWithFidoKeyResponse hasFidoAttestation]


NPKPassAssociatedInfoModel : NSObject
 @property  PKPaymentPass *pass
 @property  NSArray *balanceFields
 @property  NSArray *commutePlanFields
 @property  NSArray *allPassItemsFields
 @property  PKTransitAppletState *transitAppletState
 @property  PKTransitPassProperties *transitPassProperties
 @property  NSSet *balances
 @property  NSArray *tiles
 @property  unsigned long rangingSuspensionReason
 @property  BOOL commutePlanValueRequired

  // instance methods
  -[NPKPassAssociatedInfoModel pass]
  -[NPKPassAssociatedInfoModel balanceFields]
  -[NPKPassAssociatedInfoModel setBalances:]
  -[NPKPassAssociatedInfoModel .cxx_destruct]
  -[NPKPassAssociatedInfoModel initWithPass:]
  -[NPKPassAssociatedInfoModel setTiles:]
  -[NPKPassAssociatedInfoModel isEqual:]
  -[NPKPassAssociatedInfoModel balances]
  -[NPKPassAssociatedInfoModel transitAppletState]
  -[NPKPassAssociatedInfoModel tiles]
  -[NPKPassAssociatedInfoModel setTransitAppletState:]
  -[NPKPassAssociatedInfoModel initWithPass:transitProperties:balances:commutePlanValueRequired:]
  -[NPKPassAssociatedInfoModel allPassItemsFields]
  -[NPKPassAssociatedInfoModel commutePlanFields]
  -[NPKPassAssociatedInfoModel rangingSuspensionReason]
  -[NPKPassAssociatedInfoModel updateItemFields]
  -[NPKPassAssociatedInfoModel _balanceByIDWithBalances:]
  -[NPKPassAssociatedInfoModel _primaryDisplayableBalanceFieldWithBalancesByID:]
  -[NPKPassAssociatedInfoModel _allPassBalanceFieldsWithBalancesByID:]
  -[NPKPassAssociatedInfoModel _commutePlanFieldsWithBalancesByID:]
  -[NPKPassAssociatedInfoModel _balancePassFieldsFromPass:]
  -[NPKPassAssociatedInfoModel _balanceFieldsWithBalancesByID:passFields:maximumCount:]
  -[NPKPassAssociatedInfoModel _actionWithIdentifier:type:]
  -[NPKPassAssociatedInfoModel _balanceFieldWithPassField:balance:isPrimaryBalance:]
  -[NPKPassAssociatedInfoModel _actionWithIdentifiers:type:]
  -[NPKPassAssociatedInfoModel _shouldAddCommutePlan:action:withBalancesByID:]
  -[NPKPassAssociatedInfoModel _formattedValueWithCommutePlan:balancesByID:]
  -[NPKPassAssociatedInfoModel transitPassProperties]
  -[NPKPassAssociatedInfoModel _commutePlanWithFelicaPassProperties:]
  -[NPKPassAssociatedInfoModel isCommutePlanValueRequired]
  -[NPKPassAssociatedInfoModel _identifierFromAction:type:]
  -[NPKPassAssociatedInfoModel setTransitPassProperties:]
  -[NPKPassAssociatedInfoModel setCommutePlanValueRequired:]
  -[NPKPassAssociatedInfoModel setRangingSuspensionReason:]


NPKProtoPasscodeUpgradeFlowShouldExitRequest : PBRequest <NSCopying>
 @property  BOOL hasPasscodeChanged
 @property  BOOL passcodeChanged
 @property  BOOL hasErrorData
 @property  NSData *errorData
 @property  BOOL hasPending
 @property  BOOL pending

  // instance methods
  -[NPKProtoPasscodeUpgradeFlowShouldExitRequest pending]
  -[NPKProtoPasscodeUpgradeFlowShouldExitRequest mergeFrom:]
  -[NPKProtoPasscodeUpgradeFlowShouldExitRequest setPending:]
  -[NPKProtoPasscodeUpgradeFlowShouldExitRequest .cxx_destruct]
  -[NPKProtoPasscodeUpgradeFlowShouldExitRequest dictionaryRepresentation]
  -[NPKProtoPasscodeUpgradeFlowShouldExitRequest writeTo:]
  -[NPKProtoPasscodeUpgradeFlowShouldExitRequest isEqual:]
  -[NPKProtoPasscodeUpgradeFlowShouldExitRequest copyTo:]
  -[NPKProtoPasscodeUpgradeFlowShouldExitRequest readFrom:]
  -[NPKProtoPasscodeUpgradeFlowShouldExitRequest copyWithZone:]
  -[NPKProtoPasscodeUpgradeFlowShouldExitRequest errorData]
  -[NPKProtoPasscodeUpgradeFlowShouldExitRequest hasErrorData]
  -[NPKProtoPasscodeUpgradeFlowShouldExitRequest setErrorData:]
  -[NPKProtoPasscodeUpgradeFlowShouldExitRequest setHasPending:]
  -[NPKProtoPasscodeUpgradeFlowShouldExitRequest hasPending]
  -[NPKProtoPasscodeUpgradeFlowShouldExitRequest setPasscodeChanged:]
  -[NPKProtoPasscodeUpgradeFlowShouldExitRequest setHasPasscodeChanged:]
  -[NPKProtoPasscodeUpgradeFlowShouldExitRequest hasPasscodeChanged]
  -[NPKProtoPasscodeUpgradeFlowShouldExitRequest passcodeChanged]


NPKProtoRemotePassActionEnterValueRequest : PBRequest <NSCopying>
 @property  NSString *requestUniqueID
 @property  NSString *balanceIdentifier
 @property  NSString *balanceLabel
 @property  NSString *currentBalanceCurrency
 @property  long long currentBalanceAmount
 @property  BOOL hasPaymentPassActionData
 @property  NSData *paymentPassActionData

  // instance methods
  -[NPKProtoRemotePassActionEnterValueRequest mergeFrom:]
  -[NPKProtoRemotePassActionEnterValueRequest .cxx_destruct]
  -[NPKProtoRemotePassActionEnterValueRequest dictionaryRepresentation]
  -[NPKProtoRemotePassActionEnterValueRequest writeTo:]
  -[NPKProtoRemotePassActionEnterValueRequest isEqual:]
  -[NPKProtoRemotePassActionEnterValueRequest copyTo:]
  -[NPKProtoRemotePassActionEnterValueRequest readFrom:]
  -[NPKProtoRemotePassActionEnterValueRequest setBalanceIdentifier:]
  -[NPKProtoRemotePassActionEnterValueRequest balanceIdentifier]
  -[NPKProtoRemotePassActionEnterValueRequest copyWithZone:]
  -[NPKProtoRemotePassActionEnterValueRequest currentBalanceCurrency]
  -[NPKProtoRemotePassActionEnterValueRequest balanceLabel]
  -[NPKProtoRemotePassActionEnterValueRequest setBalanceLabel:]
  -[NPKProtoRemotePassActionEnterValueRequest setPaymentPassActionData:]
  -[NPKProtoRemotePassActionEnterValueRequest setRequestUniqueID:]
  -[NPKProtoRemotePassActionEnterValueRequest requestUniqueID]
  -[NPKProtoRemotePassActionEnterValueRequest paymentPassActionData]
  -[NPKProtoRemotePassActionEnterValueRequest hasPaymentPassActionData]
  -[NPKProtoRemotePassActionEnterValueRequest setCurrentBalanceCurrency:]
  -[NPKProtoRemotePassActionEnterValueRequest currentBalanceAmount]
  -[NPKProtoRemotePassActionEnterValueRequest setCurrentBalanceAmount:]


NPKSharedWebServiceProvider : NSObject <NPKPaymentWebServiceCompanionTargetDeviceDelegate>
 @property  PKPaymentWebService *webService
 @property  PKPeerPaymentWebService *peerPaymentWebService
 @property  PKPeerPaymentAccount *peerPaymentAccount
 @property  NPKCompanionAgentConnection *companionAgentConnection
 @property  NPKPaymentWebServiceCompanionTargetDevice *targetDevice
 @property  NPKPeerPaymentWebServiceCompanionTargetDevice *peerPaymentTargetDevice
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NPKSharedWebServiceProvider sharedWebServiceProvider]

  // instance methods
  -[NPKSharedWebServiceProvider targetDevice]
  -[NPKSharedWebServiceProvider peerPaymentAccount]
  -[NPKSharedWebServiceProvider setPeerPaymentAccount:]
  -[NPKSharedWebServiceProvider .cxx_destruct]
  -[NPKSharedWebServiceProvider setTargetDevice:]
  -[NPKSharedWebServiceProvider webService]
  -[NPKSharedWebServiceProvider init]
  -[NPKSharedWebServiceProvider startBackgroundVerificationObserverForPass:verificationMethod:]
  -[NPKSharedWebServiceProvider _peerPaymentAccount]
  -[NPKSharedWebServiceProvider dealloc]
  -[NPKSharedWebServiceProvider setNewAuthRandom:]
  -[NPKSharedWebServiceProvider noteForegroundVerificationObserverActive:]
  -[NPKSharedWebServiceProvider peerPaymentWebService]
  -[NPKSharedWebServiceProvider setWebService:]
  -[NPKSharedWebServiceProvider setPeerPaymentWebService:]
  -[NPKSharedWebServiceProvider companionAgentConnection]
  -[NPKSharedWebServiceProvider setCompanionAgentConnection:]
  -[NPKSharedWebServiceProvider _webServiceContext]
  -[NPKSharedWebServiceProvider _peerPaymentWebServiceContext]
  -[NPKSharedWebServiceProvider _deviceFailedToPair:]
  -[NPKSharedWebServiceProvider peerPaymentTargetDevice]
  -[NPKSharedWebServiceProvider handlePreconditionNotMetWithUniqueIDs:preconditionDescription:shouldUnregister:]
  -[NPKSharedWebServiceProvider handlePushToken:]
  -[NPKSharedWebServiceProvider handleUpdatePaymentPassWithTypeIdentifier:]
  -[NPKSharedWebServiceProvider handlePreferredAID:forPassWithUniqueID:]
  -[NPKSharedWebServiceProvider handlePaymentTransactions:appletStates:forUniqueIDs:]
  -[NPKSharedWebServiceProvider handleAppletState:forUniqueID:]
  -[NPKSharedWebServiceProvider handleRemoveTransactionsWithIdentifiers:]
  -[NPKSharedWebServiceProvider handleBalanceUpdate:forUniqueID:]
  -[NPKSharedWebServiceProvider handleBalanceReminderUpdate:balance:forUniqueID:]
  -[NPKSharedWebServiceProvider handleCredentialsUpdate:forUniqueID:]
  -[NPKSharedWebServiceProvider archiveWebServiceContext:]
  -[NPKSharedWebServiceProvider archiveWebServiceBackgroundContext:]
  -[NPKSharedWebServiceProvider handlePaymentWebServiceContextFromWatch:]
  -[NPKSharedWebServiceProvider sendWebServiceContextToWatch]
  -[NPKSharedWebServiceProvider showPaymentSetupForAppDisplayName:]
  -[NPKSharedWebServiceProvider sendPaymentOptionsDefaultsToWatch]
  -[NPKSharedWebServiceProvider handleUpdatedPeerPaymentWebServiceContext:account:]
  -[NPKSharedWebServiceProvider handleDownloadAllPaymentPasses]
  -[NPKSharedWebServiceProvider checkCompanionPeerPaymentRegistrationState]
  -[NPKSharedWebServiceProvider loadWebService]
  -[NPKSharedWebServiceProvider setPeerPaymentTargetDevice:]


NPKSharedPeerPaymentWebServiceArchiver : NSObject <PKPeerPaymentWebServiceArchiver>
 @property  NPKCompanionAgentConnection *connection
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NPKSharedPeerPaymentWebServiceArchiver archiveContext:]
  -[NPKSharedPeerPaymentWebServiceArchiver .cxx_destruct]
  -[NPKSharedPeerPaymentWebServiceArchiver setConnection:]
  -[NPKSharedPeerPaymentWebServiceArchiver connection]
  -[NPKSharedPeerPaymentWebServiceArchiver initWithCompanionAgentConnection:]


NPKProtoUpdatePeerPaymentAccountRequest : PBRequest <NSCopying>
  // instance methods
  -[NPKProtoUpdatePeerPaymentAccountRequest mergeFrom:]
  -[NPKProtoUpdatePeerPaymentAccountRequest dictionaryRepresentation]
  -[NPKProtoUpdatePeerPaymentAccountRequest writeTo:]
  -[NPKProtoUpdatePeerPaymentAccountRequest isEqual:]
  -[NPKProtoUpdatePeerPaymentAccountRequest copyTo:]
  -[NPKProtoUpdatePeerPaymentAccountRequest readFrom:]
  -[NPKProtoUpdatePeerPaymentAccountRequest copyWithZone:]


NPKRemotePassActionEnterValueRequest : NPKRemotePassActionRequest
 @property  NPKProtoRemotePassActionEnterValueRequest *protoRequest
 @property  <NPKBalanceField> *balanceField

  // instance methods
  -[NPKRemotePassActionEnterValueRequest .cxx_destruct]
  -[NPKRemotePassActionEnterValueRequest action]
  -[NPKRemotePassActionEnterValueRequest protoRequest]
  -[NPKRemotePassActionEnterValueRequest identifier]
  -[NPKRemotePassActionEnterValueRequest setProtoRequest:]
  -[NPKRemotePassActionEnterValueRequest initWithIdentifier:cardType:passOrganizationName:balanceField:image:passLocalizedDesciption:caption:summaryText:]
  -[NPKRemotePassActionEnterValueRequest balanceField]
  -[NPKRemotePassActionEnterValueRequest initWithPass:image:balanceField:]


NPKProtoSetExpressPassRequest : PBRequest <NSCopying>
 @property  BOOL hasUniqueID
 @property  NSString *uniqueID
 @property  BOOL hasCancelOutstandingRequests
 @property  BOOL cancelOutstandingRequests
 @property  BOOL hasApplicationIdentifier
 @property  NSString *applicationIdentifier
 @property  BOOL hasRequestAuthorization
 @property  BOOL requestAuthorization
 @property  BOOL hasExpressPassInformation
 @property  NSData *expressPassInformation

  // instance methods
  -[NPKProtoSetExpressPassRequest applicationIdentifier]
  -[NPKProtoSetExpressPassRequest mergeFrom:]
  -[NPKProtoSetExpressPassRequest setApplicationIdentifier:]
  -[NPKProtoSetExpressPassRequest uniqueID]
  -[NPKProtoSetExpressPassRequest .cxx_destruct]
  -[NPKProtoSetExpressPassRequest dictionaryRepresentation]
  -[NPKProtoSetExpressPassRequest writeTo:]
  -[NPKProtoSetExpressPassRequest hasApplicationIdentifier]
  -[NPKProtoSetExpressPassRequest isEqual:]
  -[NPKProtoSetExpressPassRequest copyTo:]
  -[NPKProtoSetExpressPassRequest readFrom:]
  -[NPKProtoSetExpressPassRequest cancelOutstandingRequests]
  -[NPKProtoSetExpressPassRequest setUniqueID:]
  -[NPKProtoSetExpressPassRequest requestAuthorization]
  -[NPKProtoSetExpressPassRequest copyWithZone:]
  -[NPKProtoSetExpressPassRequest hasUniqueID]
  -[NPKProtoSetExpressPassRequest setRequestAuthorization:]
  -[NPKProtoSetExpressPassRequest setHasRequestAuthorization:]
  -[NPKProtoSetExpressPassRequest hasRequestAuthorization]
  -[NPKProtoSetExpressPassRequest setExpressPassInformation:]
  -[NPKProtoSetExpressPassRequest hasExpressPassInformation]
  -[NPKProtoSetExpressPassRequest expressPassInformation]
  -[NPKProtoSetExpressPassRequest setCancelOutstandingRequests:]
  -[NPKProtoSetExpressPassRequest setHasCancelOutstandingRequests:]
  -[NPKProtoSetExpressPassRequest hasCancelOutstandingRequests]


NPKProtoConflictingExpressPassIdentifiersForPassInformationResponse : PBCodable <NSCopying>
 @property  BOOL hasPending
 @property  BOOL pending
 @property  NSMutableArray *conflictingExpressPassIdentifiers
 @property  NSMutableArray *conflictingReferenceExpressPassIdentifiers

  // class methods
  +[NPKProtoConflictingExpressPassIdentifiersForPassInformationResponse conflictingExpressPassIdentifiersType]
  +[NPKProtoConflictingExpressPassIdentifiersForPassInformationResponse conflictingReferenceExpressPassIdentifiersType]

  // instance methods
  -[NPKProtoConflictingExpressPassIdentifiersForPassInformationResponse pending]
  -[NPKProtoConflictingExpressPassIdentifiersForPassInformationResponse mergeFrom:]
  -[NPKProtoConflictingExpressPassIdentifiersForPassInformationResponse setPending:]
  -[NPKProtoConflictingExpressPassIdentifiersForPassInformationResponse .cxx_destruct]
  -[NPKProtoConflictingExpressPassIdentifiersForPassInformationResponse dictionaryRepresentation]
  -[NPKProtoConflictingExpressPassIdentifiersForPassInformationResponse writeTo:]
  -[NPKProtoConflictingExpressPassIdentifiersForPassInformationResponse isEqual:]
  -[NPKProtoConflictingExpressPassIdentifiersForPassInformationResponse copyTo:]
  -[NPKProtoConflictingExpressPassIdentifiersForPassInformationResponse readFrom:]
  -[NPKProtoConflictingExpressPassIdentifiersForPassInformationResponse copyWithZone:]
  -[NPKProtoConflictingExpressPassIdentifiersForPassInformationResponse setHasPending:]
  -[NPKProtoConflictingExpressPassIdentifiersForPassInformationResponse hasPending]
  -[NPKProtoConflictingExpressPassIdentifiersForPassInformationResponse addConflictingExpressPassIdentifiers:]
  -[NPKProtoConflictingExpressPassIdentifiersForPassInformationResponse addConflictingReferenceExpressPassIdentifiers:]
  -[NPKProtoConflictingExpressPassIdentifiersForPassInformationResponse conflictingExpressPassIdentifiersCount]
  -[NPKProtoConflictingExpressPassIdentifiersForPassInformationResponse clearConflictingExpressPassIdentifiers]
  -[NPKProtoConflictingExpressPassIdentifiersForPassInformationResponse conflictingExpressPassIdentifiersAtIndex:]
  -[NPKProtoConflictingExpressPassIdentifiersForPassInformationResponse conflictingReferenceExpressPassIdentifiersCount]
  -[NPKProtoConflictingExpressPassIdentifiersForPassInformationResponse clearConflictingReferenceExpressPassIdentifiers]
  -[NPKProtoConflictingExpressPassIdentifiersForPassInformationResponse conflictingReferenceExpressPassIdentifiersAtIndex:]
  -[NPKProtoConflictingExpressPassIdentifiersForPassInformationResponse conflictingExpressPassIdentifiers]
  -[NPKProtoConflictingExpressPassIdentifiersForPassInformationResponse setConflictingExpressPassIdentifiers:]
  -[NPKProtoConflictingExpressPassIdentifiersForPassInformationResponse conflictingReferenceExpressPassIdentifiers]
  -[NPKProtoConflictingExpressPassIdentifiersForPassInformationResponse setConflictingReferenceExpressPassIdentifiers:]


NPKProtoTransactionDefaultsNeededRequest : PBRequest <NSCopying>
  // instance methods
  -[NPKProtoTransactionDefaultsNeededRequest mergeFrom:]
  -[NPKProtoTransactionDefaultsNeededRequest dictionaryRepresentation]
  -[NPKProtoTransactionDefaultsNeededRequest writeTo:]
  -[NPKProtoTransactionDefaultsNeededRequest isEqual:]
  -[NPKProtoTransactionDefaultsNeededRequest copyTo:]
  -[NPKProtoTransactionDefaultsNeededRequest readFrom:]
  -[NPKProtoTransactionDefaultsNeededRequest copyWithZone:]


NPKProtoStandalonePaymentProvisioningFlowManualEntryStepContext : PBCodable <NSCopying>
 @property  BOOL hasCameraFirstProvisioningEnabled
 @property  BOOL cameraFirstProvisioningEnabled
 @property  NSMutableArray *setupFields

  // class methods
  +[NPKProtoStandalonePaymentProvisioningFlowManualEntryStepContext setupFieldsType]

  // instance methods
  -[NPKProtoStandalonePaymentProvisioningFlowManualEntryStepContext mergeFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowManualEntryStepContext .cxx_destruct]
  -[NPKProtoStandalonePaymentProvisioningFlowManualEntryStepContext dictionaryRepresentation]
  -[NPKProtoStandalonePaymentProvisioningFlowManualEntryStepContext writeTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowManualEntryStepContext isEqual:]
  -[NPKProtoStandalonePaymentProvisioningFlowManualEntryStepContext copyTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowManualEntryStepContext readFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowManualEntryStepContext copyWithZone:]
  -[NPKProtoStandalonePaymentProvisioningFlowManualEntryStepContext setCameraFirstProvisioningEnabled:]
  -[NPKProtoStandalonePaymentProvisioningFlowManualEntryStepContext setSetupFields:]
  -[NPKProtoStandalonePaymentProvisioningFlowManualEntryStepContext setupFields]
  -[NPKProtoStandalonePaymentProvisioningFlowManualEntryStepContext cameraFirstProvisioningEnabled]
  -[NPKProtoStandalonePaymentProvisioningFlowManualEntryStepContext addSetupFields:]
  -[NPKProtoStandalonePaymentProvisioningFlowManualEntryStepContext setupFieldsCount]
  -[NPKProtoStandalonePaymentProvisioningFlowManualEntryStepContext clearSetupFields]
  -[NPKProtoStandalonePaymentProvisioningFlowManualEntryStepContext setupFieldsAtIndex:]
  -[NPKProtoStandalonePaymentProvisioningFlowManualEntryStepContext setHasCameraFirstProvisioningEnabled:]
  -[NPKProtoStandalonePaymentProvisioningFlowManualEntryStepContext hasCameraFirstProvisioningEnabled]


NPKProtoSetBalanceReminderForBalanceAndPassRequest : PBRequest <NSCopying>
 @property  BOOL hasUniqueID
 @property  NSString *uniqueID
 @property  BOOL hasBalanceBytes
 @property  NSData *balanceBytes
 @property  BOOL hasBalanceReminderBytes
 @property  NSData *balanceReminderBytes

  // instance methods
  -[NPKProtoSetBalanceReminderForBalanceAndPassRequest mergeFrom:]
  -[NPKProtoSetBalanceReminderForBalanceAndPassRequest uniqueID]
  -[NPKProtoSetBalanceReminderForBalanceAndPassRequest .cxx_destruct]
  -[NPKProtoSetBalanceReminderForBalanceAndPassRequest dictionaryRepresentation]
  -[NPKProtoSetBalanceReminderForBalanceAndPassRequest writeTo:]
  -[NPKProtoSetBalanceReminderForBalanceAndPassRequest isEqual:]
  -[NPKProtoSetBalanceReminderForBalanceAndPassRequest copyTo:]
  -[NPKProtoSetBalanceReminderForBalanceAndPassRequest readFrom:]
  -[NPKProtoSetBalanceReminderForBalanceAndPassRequest setUniqueID:]
  -[NPKProtoSetBalanceReminderForBalanceAndPassRequest copyWithZone:]
  -[NPKProtoSetBalanceReminderForBalanceAndPassRequest hasUniqueID]
  -[NPKProtoSetBalanceReminderForBalanceAndPassRequest setBalanceReminderBytes:]
  -[NPKProtoSetBalanceReminderForBalanceAndPassRequest hasBalanceReminderBytes]
  -[NPKProtoSetBalanceReminderForBalanceAndPassRequest balanceReminderBytes]
  -[NPKProtoSetBalanceReminderForBalanceAndPassRequest balanceBytes]
  -[NPKProtoSetBalanceReminderForBalanceAndPassRequest setBalanceBytes:]
  -[NPKProtoSetBalanceReminderForBalanceAndPassRequest hasBalanceBytes]


NPKProtoUpdateSubcredentialMetadataResponse : PBCodable <NSCopying>
 @property  BOOL hasPassData
 @property  NSData *passData

  // instance methods
  -[NPKProtoUpdateSubcredentialMetadataResponse mergeFrom:]
  -[NPKProtoUpdateSubcredentialMetadataResponse .cxx_destruct]
  -[NPKProtoUpdateSubcredentialMetadataResponse dictionaryRepresentation]
  -[NPKProtoUpdateSubcredentialMetadataResponse writeTo:]
  -[NPKProtoUpdateSubcredentialMetadataResponse isEqual:]
  -[NPKProtoUpdateSubcredentialMetadataResponse copyTo:]
  -[NPKProtoUpdateSubcredentialMetadataResponse readFrom:]
  -[NPKProtoUpdateSubcredentialMetadataResponse copyWithZone:]
  -[NPKProtoUpdateSubcredentialMetadataResponse passData]
  -[NPKProtoUpdateSubcredentialMetadataResponse setPassData:]
  -[NPKProtoUpdateSubcredentialMetadataResponse hasPassData]


NPKProtoAccountWithIdentifierResponse : PBCodable <NSCopying>
 @property  BOOL hasAccountData
 @property  NSData *accountData
 @property  BOOL hasErrorData
 @property  NSData *errorData

  // instance methods
  -[NPKProtoAccountWithIdentifierResponse mergeFrom:]
  -[NPKProtoAccountWithIdentifierResponse .cxx_destruct]
  -[NPKProtoAccountWithIdentifierResponse dictionaryRepresentation]
  -[NPKProtoAccountWithIdentifierResponse writeTo:]
  -[NPKProtoAccountWithIdentifierResponse isEqual:]
  -[NPKProtoAccountWithIdentifierResponse copyTo:]
  -[NPKProtoAccountWithIdentifierResponse readFrom:]
  -[NPKProtoAccountWithIdentifierResponse copyWithZone:]
  -[NPKProtoAccountWithIdentifierResponse errorData]
  -[NPKProtoAccountWithIdentifierResponse hasErrorData]
  -[NPKProtoAccountWithIdentifierResponse setErrorData:]
  -[NPKProtoAccountWithIdentifierResponse accountData]
  -[NPKProtoAccountWithIdentifierResponse setAccountData:]
  -[NPKProtoAccountWithIdentifierResponse hasAccountData]


NPKProtoRemoteDevicePasscodeStateRequest : PBRequest <NSCopying>
  // instance methods
  -[NPKProtoRemoteDevicePasscodeStateRequest mergeFrom:]
  -[NPKProtoRemoteDevicePasscodeStateRequest dictionaryRepresentation]
  -[NPKProtoRemoteDevicePasscodeStateRequest writeTo:]
  -[NPKProtoRemoteDevicePasscodeStateRequest isEqual:]
  -[NPKProtoRemoteDevicePasscodeStateRequest copyTo:]
  -[NPKProtoRemoteDevicePasscodeStateRequest readFrom:]
  -[NPKProtoRemoteDevicePasscodeStateRequest copyWithZone:]


NPKOSTransaction : NSObject
 @property  NSString *name

  // class methods
  +[NPKOSTransaction transactionWithName:]

  // instance methods
  -[NPKOSTransaction name]
  -[NPKOSTransaction _initWithName:]
  -[NPKOSTransaction .cxx_destruct]
  -[NPKOSTransaction dealloc]
  -[NPKOSTransaction invalidate]


NPKRemotePassActionRequest : NPKRemotePassAction
 @property  NSString *identifier
 @property  PKPaymentPassAction *action
 @property  NSString *actionText

  // instance methods
  -[NPKRemotePassActionRequest action]
  -[NPKRemotePassActionRequest identifier]
  -[NPKRemotePassActionRequest actionText]


NPKPeerPaymentConversationManager : NSObject
 @property  NSString *currentRecipientAddressLookup
 @property  PKPeerPaymentController *currentPeerPaymentController
 @property  PKPeerPaymentService *peerPaymentService
 @property  MSConversation *activeConversation
 @property  NSString *senderPhoneOrEmail
 @property  NSString *recipientPhoneOrEmail
 @property  NSString *recipientDisplayName
 @property  BOOL recipientFoundInContacts
 @property  PKPeerPaymentRecipient *recipient
 @property  NPKPeerPaymentConversationContext *conversationContext

  // class methods
  +[NPKPeerPaymentConversationManager sharedInstance]

  // instance methods
  -[NPKPeerPaymentConversationManager recipientDisplayName]
  -[NPKPeerPaymentConversationManager recipient]
  -[NPKPeerPaymentConversationManager .cxx_destruct]
  -[NPKPeerPaymentConversationManager senderPhoneOrEmail]
  -[NPKPeerPaymentConversationManager init]
  -[NPKPeerPaymentConversationManager _accountDidChange]
  -[NPKPeerPaymentConversationManager peerPaymentService]
  -[NPKPeerPaymentConversationManager setPeerPaymentService:]
  -[NPKPeerPaymentConversationManager activeConversation]
  -[NPKPeerPaymentConversationManager recipientPhoneOrEmail]
  -[NPKPeerPaymentConversationManager setConversationContext:]
  -[NPKPeerPaymentConversationManager conversationContext]
  -[NPKPeerPaymentConversationManager setActiveConversation:]
  -[NPKPeerPaymentConversationManager _sharedPeerPaymentWebService]
  -[NPKPeerPaymentConversationManager _internalQueue_lookupRecipientInformationWithAddress:senderAddress:]
  -[NPKPeerPaymentConversationManager _newPeerPaymentController]
  -[NPKPeerPaymentConversationManager _internalQueue_performPaymentWithAmount:requestToken:completion:]
  -[NPKPeerPaymentConversationManager currentPeerPaymentController]
  -[NPKPeerPaymentConversationManager _newPeerPaymentControllerWithQueue:]
  -[NPKPeerPaymentConversationManager setCurrentPeerPaymentController:]
  -[NPKPeerPaymentConversationManager _displayableErrorWithError:]
  -[NPKPeerPaymentConversationManager _skeletonPeerPaymentQuoteWithPeerPaymentController:selectedAmount:recipient:]
  -[NPKPeerPaymentConversationManager currentRecipientAddressLookup]
  -[NPKPeerPaymentConversationManager setCurrentRecipientAddressLookup:]
  -[NPKPeerPaymentConversationManager _postNotificationWithRecipient:error:]
  -[NPKPeerPaymentConversationManager _internalQueue_performRequestWithAmount:completion:]
  -[NPKPeerPaymentConversationManager _internalQueue_forceLookupRecipientInformation]
  -[NPKPeerPaymentConversationManager _negativeBalanceErrorWithUnderlyingError:]
  -[NPKPeerPaymentConversationManager _ambiguousSenderAddressErrorWithUnderlyingError:]
  -[NPKPeerPaymentConversationManager _lockedOrRestrictedAccountErrorWithUnderlyingError:]
  -[NPKPeerPaymentConversationManager _unknownPaymentErrorWithUnderlyingError:]
  -[NPKPeerPaymentConversationManager recipientFoundInContacts]
  -[NPKPeerPaymentConversationManager lookupRecipientInformationIfNecessary]
  -[NPKPeerPaymentConversationManager performPaymentWithAmount:requestToken:completion:]
  -[NPKPeerPaymentConversationManager lookupRecipientInformationWithAddress:senderAddress:]
  -[NPKPeerPaymentConversationManager performRequestWithAmount:completion:]


NPKCompanionViewServiceConnectionServer : PDXPCService <NPKCompanionViewServiceConnectionServerProtocol>
 @property  <NPKCompanionViewServiceConnectionServerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NPKCompanionViewServiceConnectionServer .cxx_destruct]
  -[NPKCompanionViewServiceConnectionServer setDelegate:]
  -[NPKCompanionViewServiceConnectionServer delegate]
  -[NPKCompanionViewServiceConnectionServer presentRemotePassValueEntryViewControllerForRequest:contact:completion:]
  -[NPKCompanionViewServiceConnectionServer presentRemotePassItemSelectionViewControllerForRequest:contact:completion:]
  -[NPKCompanionViewServiceConnectionServer _checkCompanionViewServiceConnectionEntitlement]


NPKProtoUpdateSubcredentialMetadataRequest : PBRequest <NSCopying>
 @property  BOOL hasPassData
 @property  NSData *passData
 @property  BOOL hasCredentialData
 @property  NSData *credentialData

  // instance methods
  -[NPKProtoUpdateSubcredentialMetadataRequest mergeFrom:]
  -[NPKProtoUpdateSubcredentialMetadataRequest .cxx_destruct]
  -[NPKProtoUpdateSubcredentialMetadataRequest dictionaryRepresentation]
  -[NPKProtoUpdateSubcredentialMetadataRequest writeTo:]
  -[NPKProtoUpdateSubcredentialMetadataRequest credentialData]
  -[NPKProtoUpdateSubcredentialMetadataRequest isEqual:]
  -[NPKProtoUpdateSubcredentialMetadataRequest copyTo:]
  -[NPKProtoUpdateSubcredentialMetadataRequest readFrom:]
  -[NPKProtoUpdateSubcredentialMetadataRequest copyWithZone:]
  -[NPKProtoUpdateSubcredentialMetadataRequest passData]
  -[NPKProtoUpdateSubcredentialMetadataRequest setPassData:]
  -[NPKProtoUpdateSubcredentialMetadataRequest hasPassData]
  -[NPKProtoUpdateSubcredentialMetadataRequest setCredentialData:]
  -[NPKProtoUpdateSubcredentialMetadataRequest hasCredentialData]


NPKProtoRemotePassActionEnterValueResponse : PBCodable <NSCopying>
 @property  NSString *requestUniqueID
 @property  int result
 @property  BOOL hasIncrementCurrency
 @property  NSString *incrementCurrency
 @property  BOOL hasIncrementAmount
 @property  long long incrementAmount

  // instance methods
  -[NPKProtoRemotePassActionEnterValueResponse mergeFrom:]
  -[NPKProtoRemotePassActionEnterValueResponse .cxx_destruct]
  -[NPKProtoRemotePassActionEnterValueResponse dictionaryRepresentation]
  -[NPKProtoRemotePassActionEnterValueResponse writeTo:]
  -[NPKProtoRemotePassActionEnterValueResponse resultAsString:]
  -[NPKProtoRemotePassActionEnterValueResponse isEqual:]
  -[NPKProtoRemotePassActionEnterValueResponse copyTo:]
  -[NPKProtoRemotePassActionEnterValueResponse result]
  -[NPKProtoRemotePassActionEnterValueResponse readFrom:]
  -[NPKProtoRemotePassActionEnterValueResponse StringAsResult:]
  -[NPKProtoRemotePassActionEnterValueResponse setResult:]
  -[NPKProtoRemotePassActionEnterValueResponse copyWithZone:]
  -[NPKProtoRemotePassActionEnterValueResponse setRequestUniqueID:]
  -[NPKProtoRemotePassActionEnterValueResponse requestUniqueID]
  -[NPKProtoRemotePassActionEnterValueResponse setIncrementCurrency:]
  -[NPKProtoRemotePassActionEnterValueResponse hasIncrementCurrency]
  -[NPKProtoRemotePassActionEnterValueResponse setIncrementAmount:]
  -[NPKProtoRemotePassActionEnterValueResponse setHasIncrementAmount:]
  -[NPKProtoRemotePassActionEnterValueResponse hasIncrementAmount]
  -[NPKProtoRemotePassActionEnterValueResponse incrementCurrency]
  -[NPKProtoRemotePassActionEnterValueResponse incrementAmount]


NPKProtoInitializeCloudStoreIfNecessaryResponse : PBCodable <NSCopying>
 @property  BOOL hasPending
 @property  BOOL pending
 @property  BOOL hasSuccess
 @property  BOOL success
 @property  BOOL hasErrorData
 @property  NSData *errorData

  // instance methods
  -[NPKProtoInitializeCloudStoreIfNecessaryResponse setSuccess:]
  -[NPKProtoInitializeCloudStoreIfNecessaryResponse success]
  -[NPKProtoInitializeCloudStoreIfNecessaryResponse pending]
  -[NPKProtoInitializeCloudStoreIfNecessaryResponse mergeFrom:]
  -[NPKProtoInitializeCloudStoreIfNecessaryResponse setPending:]
  -[NPKProtoInitializeCloudStoreIfNecessaryResponse .cxx_destruct]
  -[NPKProtoInitializeCloudStoreIfNecessaryResponse hasSuccess]
  -[NPKProtoInitializeCloudStoreIfNecessaryResponse dictionaryRepresentation]
  -[NPKProtoInitializeCloudStoreIfNecessaryResponse writeTo:]
  -[NPKProtoInitializeCloudStoreIfNecessaryResponse setHasSuccess:]
  -[NPKProtoInitializeCloudStoreIfNecessaryResponse isEqual:]
  -[NPKProtoInitializeCloudStoreIfNecessaryResponse copyTo:]
  -[NPKProtoInitializeCloudStoreIfNecessaryResponse readFrom:]
  -[NPKProtoInitializeCloudStoreIfNecessaryResponse copyWithZone:]
  -[NPKProtoInitializeCloudStoreIfNecessaryResponse errorData]
  -[NPKProtoInitializeCloudStoreIfNecessaryResponse hasErrorData]
  -[NPKProtoInitializeCloudStoreIfNecessaryResponse setErrorData:]
  -[NPKProtoInitializeCloudStoreIfNecessaryResponse setHasPending:]
  -[NPKProtoInitializeCloudStoreIfNecessaryResponse hasPending]


NPKProtoAddPassRequest : PBRequest <NSCopying>
 @property  NPKProtoPass *pass
 @property  BOOL hasLibraryHash
 @property  NPKProtoHash *libraryHash
 @property  BOOL hasResyncID
 @property  unsigned int resyncID
 @property  BOOL hasCatalog
 @property  NPKProtoCatalog *catalog
 @property  BOOL hasLastKnownResyncID
 @property  unsigned int lastKnownResyncID
 @property  BOOL hasSyncID
 @property  unsigned int syncID

  // instance methods
  -[NPKProtoAddPassRequest catalog]
  -[NPKProtoAddPassRequest setCatalog:]
  -[NPKProtoAddPassRequest pass]
  -[NPKProtoAddPassRequest mergeFrom:]
  -[NPKProtoAddPassRequest syncID]
  -[NPKProtoAddPassRequest .cxx_destruct]
  -[NPKProtoAddPassRequest setSyncID:]
  -[NPKProtoAddPassRequest dictionaryRepresentation]
  -[NPKProtoAddPassRequest writeTo:]
  -[NPKProtoAddPassRequest setPass:]
  -[NPKProtoAddPassRequest isEqual:]
  -[NPKProtoAddPassRequest copyTo:]
  -[NPKProtoAddPassRequest readFrom:]
  -[NPKProtoAddPassRequest copyWithZone:]
  -[NPKProtoAddPassRequest setResyncID:]
  -[NPKProtoAddPassRequest setHasResyncID:]
  -[NPKProtoAddPassRequest hasResyncID]
  -[NPKProtoAddPassRequest resyncID]
  -[NPKProtoAddPassRequest setLibraryHash:]
  -[NPKProtoAddPassRequest hasLibraryHash]
  -[NPKProtoAddPassRequest hasCatalog]
  -[NPKProtoAddPassRequest setLastKnownResyncID:]
  -[NPKProtoAddPassRequest setHasLastKnownResyncID:]
  -[NPKProtoAddPassRequest hasLastKnownResyncID]
  -[NPKProtoAddPassRequest setHasSyncID:]
  -[NPKProtoAddPassRequest hasSyncID]
  -[NPKProtoAddPassRequest libraryHash]
  -[NPKProtoAddPassRequest lastKnownResyncID]


NPKProtoUpdateAccountWithIdentifierRequest : PBRequest <NSCopying>
 @property  BOOL hasAccountIdentifier
 @property  NSString *accountIdentifier

  // instance methods
  -[NPKProtoUpdateAccountWithIdentifierRequest mergeFrom:]
  -[NPKProtoUpdateAccountWithIdentifierRequest .cxx_destruct]
  -[NPKProtoUpdateAccountWithIdentifierRequest dictionaryRepresentation]
  -[NPKProtoUpdateAccountWithIdentifierRequest writeTo:]
  -[NPKProtoUpdateAccountWithIdentifierRequest isEqual:]
  -[NPKProtoUpdateAccountWithIdentifierRequest hasAccountIdentifier]
  -[NPKProtoUpdateAccountWithIdentifierRequest copyTo:]
  -[NPKProtoUpdateAccountWithIdentifierRequest readFrom:]
  -[NPKProtoUpdateAccountWithIdentifierRequest accountIdentifier]
  -[NPKProtoUpdateAccountWithIdentifierRequest setAccountIdentifier:]
  -[NPKProtoUpdateAccountWithIdentifierRequest copyWithZone:]


NPKProtoRemoveSharingInvitationRequest : PBRequest <NSCopying>
 @property  BOOL hasInvitationData
 @property  NSData *invitationData

  // instance methods
  -[NPKProtoRemoveSharingInvitationRequest mergeFrom:]
  -[NPKProtoRemoveSharingInvitationRequest .cxx_destruct]
  -[NPKProtoRemoveSharingInvitationRequest dictionaryRepresentation]
  -[NPKProtoRemoveSharingInvitationRequest writeTo:]
  -[NPKProtoRemoveSharingInvitationRequest isEqual:]
  -[NPKProtoRemoveSharingInvitationRequest copyTo:]
  -[NPKProtoRemoveSharingInvitationRequest readFrom:]
  -[NPKProtoRemoveSharingInvitationRequest copyWithZone:]
  -[NPKProtoRemoveSharingInvitationRequest invitationData]
  -[NPKProtoRemoveSharingInvitationRequest setInvitationData:]
  -[NPKProtoRemoveSharingInvitationRequest hasInvitationData]


NPKProtoAcceptSubcredentialInvitationRequest : PBRequest <NSCopying>
 @property  BOOL hasInvitationData
 @property  NSData *invitationData
 @property  BOOL hasMetadataData
 @property  NSData *metadataData

  // instance methods
  -[NPKProtoAcceptSubcredentialInvitationRequest mergeFrom:]
  -[NPKProtoAcceptSubcredentialInvitationRequest .cxx_destruct]
  -[NPKProtoAcceptSubcredentialInvitationRequest dictionaryRepresentation]
  -[NPKProtoAcceptSubcredentialInvitationRequest writeTo:]
  -[NPKProtoAcceptSubcredentialInvitationRequest isEqual:]
  -[NPKProtoAcceptSubcredentialInvitationRequest copyTo:]
  -[NPKProtoAcceptSubcredentialInvitationRequest readFrom:]
  -[NPKProtoAcceptSubcredentialInvitationRequest copyWithZone:]
  -[NPKProtoAcceptSubcredentialInvitationRequest invitationData]
  -[NPKProtoAcceptSubcredentialInvitationRequest setInvitationData:]
  -[NPKProtoAcceptSubcredentialInvitationRequest setMetadataData:]
  -[NPKProtoAcceptSubcredentialInvitationRequest metadataData]
  -[NPKProtoAcceptSubcredentialInvitationRequest hasInvitationData]
  -[NPKProtoAcceptSubcredentialInvitationRequest hasMetadataData]


NPKPassSyncStateItem : NSObject <NSSecureCoding>
 @property  NSString *passTypeIdentifier
 @property  NSString *serialNumber
 @property  NSString *uniqueID
 @property  NSNumber *sequenceCounter
 @property  NSData *manifestHash
 @property  NSDictionary *manifest

  // class methods
  +[NPKPassSyncStateItem supportsSecureCoding]

  // instance methods
  -[NPKPassSyncStateItem sequenceCounter]
  -[NPKPassSyncStateItem serialNumber]
  -[NPKPassSyncStateItem setManifestHash:]
  -[NPKPassSyncStateItem setSerialNumber:]
  -[NPKPassSyncStateItem initWithCoder:]
  -[NPKPassSyncStateItem uniqueID]
  -[NPKPassSyncStateItem manifestHash]
  -[NPKPassSyncStateItem .cxx_destruct]
  -[NPKPassSyncStateItem initWithPass:]
  -[NPKPassSyncStateItem manifest]
  -[NPKPassSyncStateItem setSequenceCounter:]
  -[NPKPassSyncStateItem isEqual:]
  -[NPKPassSyncStateItem setPassTypeIdentifier:]
  -[NPKPassSyncStateItem setManifest:]
  -[NPKPassSyncStateItem passTypeIdentifier]
  -[NPKPassSyncStateItem shortDescription]
  -[NPKPassSyncStateItem encodeWithCoder:]
  -[NPKPassSyncStateItem initWithPassTypeIdentifier:serialNumber:sequenceCounter:manifestHash:manifest:]
  -[NPKPassSyncStateItem initWithProtoSyncStateItem:]
  -[NPKPassSyncStateItem protoSyncStateItem]
  -[NPKPassSyncStateItem isEqualToPassSyncStateItem:]


NPKPassSyncState : NSObject <NSCopying, NSSecureCoding>
 @property  NSMutableDictionary *syncStateItems
 @property  NSData *syncStateHash
 @property  unsigned long version

  // class methods
  +[NPKPassSyncState supportsSecureCoding]
  +[NPKPassSyncState setMinRemoteDevicePassSyncStateVersionSupport:]
  +[NPKPassSyncState minRemoteDevicePassSyncStateVersionSupport]
  +[NPKPassSyncState _deviceDomainAccessor]
  +[NPKPassSyncState _currentActiveDevice]

  // instance methods
  -[NPKPassSyncState initWithCoder:]
  -[NPKPassSyncState .cxx_destruct]
  -[NPKPassSyncState initWithVersion:]
  -[NPKPassSyncState init]
  -[NPKPassSyncState isEqual:]
  -[NPKPassSyncState version]
  -[NPKPassSyncState copyWithZone:]
  -[NPKPassSyncState encodeWithCoder:]
  -[NPKPassSyncState initWithPasses:]
  -[NPKPassSyncState initWithProtoSyncState:]
  -[NPKPassSyncState protoSyncState]
  -[NPKPassSyncState commonBaselinePassSyncStateWithState:version:]
  -[NPKPassSyncState diffWithBaselineState:representsMaterialDifferenceFromState:]
  -[NPKPassSyncState passSyncStateByApplyingChange:]
  -[NPKPassSyncState syncStateHash]
  -[NPKPassSyncState passSyncStateByAddingOrUpdatingSyncStateItem:]
  -[NPKPassSyncState passSyncStateByRemovingPassWithUniqueID:]
  -[NPKPassSyncState syncStateItems]
  -[NPKPassSyncState stateIsSubsetOfUnionOfPassSyncStates:]
  -[NPKPassSyncState compareWithBaselinePassSyncState:outAddedSyncItems:outUpdatedSyncItems:outRemovedSyncItems:]
  -[NPKPassSyncState initWithSyncStateItems:version:]
  -[NPKPassSyncState initWithPasses:version:]
  -[NPKPassSyncState _commonInitWithVersion:]
  -[NPKPassSyncState isEqualToPassSyncState:]
  -[NPKPassSyncState setSyncStateItems:]
  -[NPKPassSyncState initWithSyncStateItems:]
  -[NPKPassSyncState stateContainsSyncStateItem:]


NPKProtoPassSettingsChangedRequest : PBRequest <NSCopying>
 @property  BOOL hasUniqueID
 @property  NSString *uniqueID
 @property  BOOL hasPassSettings
 @property  unsigned long passSettings

  // instance methods
  -[NPKProtoPassSettingsChangedRequest mergeFrom:]
  -[NPKProtoPassSettingsChangedRequest uniqueID]
  -[NPKProtoPassSettingsChangedRequest .cxx_destruct]
  -[NPKProtoPassSettingsChangedRequest dictionaryRepresentation]
  -[NPKProtoPassSettingsChangedRequest writeTo:]
  -[NPKProtoPassSettingsChangedRequest isEqual:]
  -[NPKProtoPassSettingsChangedRequest copyTo:]
  -[NPKProtoPassSettingsChangedRequest readFrom:]
  -[NPKProtoPassSettingsChangedRequest setUniqueID:]
  -[NPKProtoPassSettingsChangedRequest copyWithZone:]
  -[NPKProtoPassSettingsChangedRequest hasUniqueID]
  -[NPKProtoPassSettingsChangedRequest setPassSettings:]
  -[NPKProtoPassSettingsChangedRequest hasPassSettings]
  -[NPKProtoPassSettingsChangedRequest passSettings]
  -[NPKProtoPassSettingsChangedRequest setHasPassSettings:]


NPKIDVRemoteDeviceServiceClient : NSObject <PKXPCServiceDelegate>
 @property  NSString *serviceName
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NPKIDVRemoteDeviceServiceClient serviceName]
  -[NPKIDVRemoteDeviceServiceClient .cxx_destruct]
  -[NPKIDVRemoteDeviceServiceClient remoteService:didEstablishConnection:]
  -[NPKIDVRemoteDeviceServiceClient remoteService:didInterruptConnection:]
  -[NPKIDVRemoteDeviceServiceClient _remoteObjectProxyWithFailureHandler:]
  -[NPKIDVRemoteDeviceServiceClient _errorHandlerWithCompletion:]
  -[NPKIDVRemoteDeviceServiceClient initWithRemoteServiceName:]
  -[NPKIDVRemoteDeviceServiceClient didReceiveEvent:fromRemoteDeviceWithID:]


NPKProtoStandalonePaymentProvisioningFlowReaderModeIngestionStepContext : PBCodable <NSCopying>
 @property  BOOL hasPhysicalCardImageURL
 @property  NSString *physicalCardImageURL
 @property  BOOL hasTitle
 @property  NSString *title
 @property  BOOL hasSubtitle
 @property  NSString *subtitle
 @property  BOOL hasIngestionState
 @property  int ingestionState
 @property  BOOL hasIngestionProgress
 @property  float ingestionProgress

  // instance methods
  -[NPKProtoStandalonePaymentProvisioningFlowReaderModeIngestionStepContext hasSubtitle]
  -[NPKProtoStandalonePaymentProvisioningFlowReaderModeIngestionStepContext mergeFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowReaderModeIngestionStepContext hasTitle]
  -[NPKProtoStandalonePaymentProvisioningFlowReaderModeIngestionStepContext setTitle:]
  -[NPKProtoStandalonePaymentProvisioningFlowReaderModeIngestionStepContext .cxx_destruct]
  -[NPKProtoStandalonePaymentProvisioningFlowReaderModeIngestionStepContext dictionaryRepresentation]
  -[NPKProtoStandalonePaymentProvisioningFlowReaderModeIngestionStepContext setSubtitle:]
  -[NPKProtoStandalonePaymentProvisioningFlowReaderModeIngestionStepContext writeTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowReaderModeIngestionStepContext isEqual:]
  -[NPKProtoStandalonePaymentProvisioningFlowReaderModeIngestionStepContext copyTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowReaderModeIngestionStepContext readFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowReaderModeIngestionStepContext subtitle]
  -[NPKProtoStandalonePaymentProvisioningFlowReaderModeIngestionStepContext title]
  -[NPKProtoStandalonePaymentProvisioningFlowReaderModeIngestionStepContext copyWithZone:]
  -[NPKProtoStandalonePaymentProvisioningFlowReaderModeIngestionStepContext ingestionState]
  -[NPKProtoStandalonePaymentProvisioningFlowReaderModeIngestionStepContext setIngestionState:]
  -[NPKProtoStandalonePaymentProvisioningFlowReaderModeIngestionStepContext ingestionProgress]
  -[NPKProtoStandalonePaymentProvisioningFlowReaderModeIngestionStepContext setIngestionProgress:]
  -[NPKProtoStandalonePaymentProvisioningFlowReaderModeIngestionStepContext physicalCardImageURL]
  -[NPKProtoStandalonePaymentProvisioningFlowReaderModeIngestionStepContext setPhysicalCardImageURL:]
  -[NPKProtoStandalonePaymentProvisioningFlowReaderModeIngestionStepContext hasPhysicalCardImageURL]
  -[NPKProtoStandalonePaymentProvisioningFlowReaderModeIngestionStepContext setHasIngestionState:]
  -[NPKProtoStandalonePaymentProvisioningFlowReaderModeIngestionStepContext hasIngestionState]
  -[NPKProtoStandalonePaymentProvisioningFlowReaderModeIngestionStepContext ingestionStateAsString:]
  -[NPKProtoStandalonePaymentProvisioningFlowReaderModeIngestionStepContext StringAsIngestionState:]
  -[NPKProtoStandalonePaymentProvisioningFlowReaderModeIngestionStepContext setHasIngestionProgress:]
  -[NPKProtoStandalonePaymentProvisioningFlowReaderModeIngestionStepContext hasIngestionProgress]


NPKProtoSignWithFidoKeyRequest : PBRequest <NSCopying>
 @property  BOOL hasRelyingParty
 @property  NSString *relyingParty
 @property  BOOL hasRelyingPartyAccountHash
 @property  NSString *relyingPartyAccountHash
 @property  BOOL hasFidoKeyHash
 @property  NSData *fidoKeyHash
 @property  BOOL hasChallenge
 @property  NSData *challenge
 @property  BOOL hasPublicKeyIdentifier
 @property  NSString *publicKeyIdentifier
 @property  BOOL hasExternalizedAuth
 @property  NSData *externalizedAuth

  // instance methods
  -[NPKProtoSignWithFidoKeyRequest mergeFrom:]
  -[NPKProtoSignWithFidoKeyRequest .cxx_destruct]
  -[NPKProtoSignWithFidoKeyRequest dictionaryRepresentation]
  -[NPKProtoSignWithFidoKeyRequest writeTo:]
  -[NPKProtoSignWithFidoKeyRequest isEqual:]
  -[NPKProtoSignWithFidoKeyRequest copyTo:]
  -[NPKProtoSignWithFidoKeyRequest readFrom:]
  -[NPKProtoSignWithFidoKeyRequest hasExternalizedAuth]
  -[NPKProtoSignWithFidoKeyRequest publicKeyIdentifier]
  -[NPKProtoSignWithFidoKeyRequest externalizedAuth]
  -[NPKProtoSignWithFidoKeyRequest setExternalizedAuth:]
  -[NPKProtoSignWithFidoKeyRequest challenge]
  -[NPKProtoSignWithFidoKeyRequest setRelyingParty:]
  -[NPKProtoSignWithFidoKeyRequest relyingParty]
  -[NPKProtoSignWithFidoKeyRequest copyWithZone:]
  -[NPKProtoSignWithFidoKeyRequest setChallenge:]
  -[NPKProtoSignWithFidoKeyRequest fidoKeyHash]
  -[NPKProtoSignWithFidoKeyRequest setRelyingPartyAccountHash:]
  -[NPKProtoSignWithFidoKeyRequest setFidoKeyHash:]
  -[NPKProtoSignWithFidoKeyRequest hasRelyingParty]
  -[NPKProtoSignWithFidoKeyRequest hasRelyingPartyAccountHash]
  -[NPKProtoSignWithFidoKeyRequest hasFidoKeyHash]
  -[NPKProtoSignWithFidoKeyRequest relyingPartyAccountHash]
  -[NPKProtoSignWithFidoKeyRequest setPublicKeyIdentifier:]
  -[NPKProtoSignWithFidoKeyRequest hasChallenge]
  -[NPKProtoSignWithFidoKeyRequest hasPublicKeyIdentifier]


NPKProtoPassSyncStateChangeProcessed : PBCodable <NSCopying>
 @property  NSData *acceptedChangeUUID
 @property  BOOL hasChangeAccepted
 @property  BOOL changeAccepted
 @property  BOOL hasFullPassRequired
 @property  BOOL fullPassRequired

  // instance methods
  -[NPKProtoPassSyncStateChangeProcessed mergeFrom:]
  -[NPKProtoPassSyncStateChangeProcessed .cxx_destruct]
  -[NPKProtoPassSyncStateChangeProcessed dictionaryRepresentation]
  -[NPKProtoPassSyncStateChangeProcessed writeTo:]
  -[NPKProtoPassSyncStateChangeProcessed isEqual:]
  -[NPKProtoPassSyncStateChangeProcessed copyTo:]
  -[NPKProtoPassSyncStateChangeProcessed readFrom:]
  -[NPKProtoPassSyncStateChangeProcessed copyWithZone:]
  -[NPKProtoPassSyncStateChangeProcessed acceptedChangeUUID]
  -[NPKProtoPassSyncStateChangeProcessed hasChangeAccepted]
  -[NPKProtoPassSyncStateChangeProcessed changeAccepted]
  -[NPKProtoPassSyncStateChangeProcessed fullPassRequired]
  -[NPKProtoPassSyncStateChangeProcessed setAcceptedChangeUUID:]
  -[NPKProtoPassSyncStateChangeProcessed setChangeAccepted:]
  -[NPKProtoPassSyncStateChangeProcessed setFullPassRequired:]
  -[NPKProtoPassSyncStateChangeProcessed setHasChangeAccepted:]
  -[NPKProtoPassSyncStateChangeProcessed setHasFullPassRequired:]
  -[NPKProtoPassSyncStateChangeProcessed hasFullPassRequired]


NPKProtoRemotePassActionEnvelope : PBCodable <NSCopying>
 @property  unsigned int version
 @property  int messageType
 @property  NSData *messageProtoData
 @property  BOOL isResponse
 @property  BOOL hasCaption
 @property  NSString *caption
 @property  BOOL hasPassLocalizedDescription
 @property  NSString *passLocalizedDescription
 @property  BOOL hasSummaryText
 @property  NSString *summaryText
 @property  BOOL hasPassOrganizationName
 @property  NSString *passOrganizationName
 @property  BOOL hasCardType
 @property  int cardType

  // instance methods
  -[NPKProtoRemotePassActionEnvelope setMessageType:]
  -[NPKProtoRemotePassActionEnvelope cardType]
  -[NPKProtoRemotePassActionEnvelope caption]
  -[NPKProtoRemotePassActionEnvelope messageType]
  -[NPKProtoRemotePassActionEnvelope messageTypeAsString:]
  -[NPKProtoRemotePassActionEnvelope setCaption:]
  -[NPKProtoRemotePassActionEnvelope mergeFrom:]
  -[NPKProtoRemotePassActionEnvelope isResponse]
  -[NPKProtoRemotePassActionEnvelope StringAsMessageType:]
  -[NPKProtoRemotePassActionEnvelope summaryText]
  -[NPKProtoRemotePassActionEnvelope .cxx_destruct]
  -[NPKProtoRemotePassActionEnvelope dictionaryRepresentation]
  -[NPKProtoRemotePassActionEnvelope setSummaryText:]
  -[NPKProtoRemotePassActionEnvelope writeTo:]
  -[NPKProtoRemotePassActionEnvelope setVersion:]
  -[NPKProtoRemotePassActionEnvelope isEqual:]
  -[NPKProtoRemotePassActionEnvelope copyTo:]
  -[NPKProtoRemotePassActionEnvelope readFrom:]
  -[NPKProtoRemotePassActionEnvelope version]
  -[NPKProtoRemotePassActionEnvelope setCardType:]
  -[NPKProtoRemotePassActionEnvelope copyWithZone:]
  -[NPKProtoRemotePassActionEnvelope setIsResponse:]
  -[NPKProtoRemotePassActionEnvelope passLocalizedDescription]
  -[NPKProtoRemotePassActionEnvelope passOrganizationName]
  -[NPKProtoRemotePassActionEnvelope hasCardType]
  -[NPKProtoRemotePassActionEnvelope setPassLocalizedDescription:]
  -[NPKProtoRemotePassActionEnvelope setPassOrganizationName:]
  -[NPKProtoRemotePassActionEnvelope setMessageProtoData:]
  -[NPKProtoRemotePassActionEnvelope messageProtoData]
  -[NPKProtoRemotePassActionEnvelope setHasCardType:]
  -[NPKProtoRemotePassActionEnvelope cardTypeAsString:]
  -[NPKProtoRemotePassActionEnvelope StringAsCardType:]
  -[NPKProtoRemotePassActionEnvelope hasCaption]
  -[NPKProtoRemotePassActionEnvelope hasPassLocalizedDescription]
  -[NPKProtoRemotePassActionEnvelope hasSummaryText]
  -[NPKProtoRemotePassActionEnvelope hasPassOrganizationName]


NPKTapToRadarRequest : NSObject
 @property  NSString *title
 @property  NSString *body
 @property  NSSet *attachmentsPaths
 @property  NSURL *tapToRadarURL

  // instance methods
  -[NPKTapToRadarRequest body]
  -[NPKTapToRadarRequest .cxx_destruct]
  -[NPKTapToRadarRequest title]
  -[NPKTapToRadarRequest initWithURL:]
  -[NPKTapToRadarRequest _attachmentURLs]
  -[NPKTapToRadarRequest tapToRadarURL]
  -[NPKTapToRadarRequest initWithTitle:body:attachmentPaths:]
  -[NPKTapToRadarRequest attachmentsPaths]


NPKProtoStandalonePaymentProvisioningFlowProvisioningResultStepContext : PBCodable <NSCopying>
 @property  BOOL hasCardAdded
 @property  BOOL cardAdded
 @property  BOOL hasError
 @property  NPKProtoStandaloneError *error

  // instance methods
  -[NPKProtoStandalonePaymentProvisioningFlowProvisioningResultStepContext mergeFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowProvisioningResultStepContext hasError]
  -[NPKProtoStandalonePaymentProvisioningFlowProvisioningResultStepContext .cxx_destruct]
  -[NPKProtoStandalonePaymentProvisioningFlowProvisioningResultStepContext dictionaryRepresentation]
  -[NPKProtoStandalonePaymentProvisioningFlowProvisioningResultStepContext writeTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowProvisioningResultStepContext isEqual:]
  -[NPKProtoStandalonePaymentProvisioningFlowProvisioningResultStepContext copyTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowProvisioningResultStepContext readFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowProvisioningResultStepContext copyWithZone:]
  -[NPKProtoStandalonePaymentProvisioningFlowProvisioningResultStepContext setError:]
  -[NPKProtoStandalonePaymentProvisioningFlowProvisioningResultStepContext error]
  -[NPKProtoStandalonePaymentProvisioningFlowProvisioningResultStepContext setCardAdded:]
  -[NPKProtoStandalonePaymentProvisioningFlowProvisioningResultStepContext cardAdded]
  -[NPKProtoStandalonePaymentProvisioningFlowProvisioningResultStepContext setHasCardAdded:]
  -[NPKProtoStandalonePaymentProvisioningFlowProvisioningResultStepContext hasCardAdded]


NPKPassAssociatedInfoManager : NSObject <PKPaymentServiceDelegate>
 @property  PKPaymentService *paymentService
 @property  BOOL paymentServiceWasInterrupted
 @property  NSHashTable *observers
 @property  NSSet *passes
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NPKPassAssociatedInfoManager unregisterObserver:]
  -[NPKPassAssociatedInfoManager registerObserver:]
  -[NPKPassAssociatedInfoManager .cxx_destruct]
  -[NPKPassAssociatedInfoManager _notifyObservers:]
  -[NPKPassAssociatedInfoManager paymentServiceEstablishedConnection]
  -[NPKPassAssociatedInfoManager paymentServiceReceivedInterruption]
  -[NPKPassAssociatedInfoManager setObservers:]
  -[NPKPassAssociatedInfoManager init]
  -[NPKPassAssociatedInfoManager credential:forPaymentApplication:didUpdateRangingSuspensionReasons:]
  -[NPKPassAssociatedInfoManager paymentPassWithUniqueIdentifier:didReceiveBalanceUpdate:]
  -[NPKPassAssociatedInfoManager paymentService]
  -[NPKPassAssociatedInfoManager passes]
  -[NPKPassAssociatedInfoManager paymentPassWithUniqueIdentifier:didUpdateWithTransitPassProperties:]
  -[NPKPassAssociatedInfoManager observers]
  -[NPKPassAssociatedInfoManager passWithUniqueIdentifier:didUpdateTiles:]
  -[NPKPassAssociatedInfoManager setPasses:]
  -[NPKPassAssociatedInfoManager removePassWithUniqueID:]
  -[NPKPassAssociatedInfoManager initWithPaymentService:]
  -[NPKPassAssociatedInfoManager _updateAllPassesItemsFieldsPendingUpdateStatus]
  -[NPKPassAssociatedInfoManager _isPassEligible:]
  -[NPKPassAssociatedInfoManager _internalQueue_regenerateAssociatedInfoModelForPass:inModelsByID:]
  -[NPKPassAssociatedInfoManager _notifyObserversOfUpdatedTransitPassInfoForModel:]
  -[NPKPassAssociatedInfoManager _fetchMostRecentInfoForPass:]
  -[NPKPassAssociatedInfoManager _updatePassTransitPassesInfoManagerForPassUniqueID:updateBlock:]
  -[NPKPassAssociatedInfoManager _fetchMostRecentTransitPropertiesAndAppletStateForPass:]
  -[NPKPassAssociatedInfoManager refreshAllPasses]
  -[NPKPassAssociatedInfoManager _fetchMostRecentBalancesForPass:]
  -[NPKPassAssociatedInfoManager _fetchMostRecentTilesForPass:]
  -[NPKPassAssociatedInfoManager _fetchMostRecentRangingSuspensionReasonForPass:]
  -[NPKPassAssociatedInfoManager _transitPassBalanceModelWithPass:currentModel:]
  -[NPKPassAssociatedInfoManager _loadPassContentIfNeeded:]
  -[NPKPassAssociatedInfoManager addPass:]
  -[NPKPassAssociatedInfoManager setPendingAmount:forBalanceField:passWithUniqueID:]
  -[NPKPassAssociatedInfoManager passInfoForPassWithUniqueID:]
  -[NPKPassAssociatedInfoManager canPerformRKEActionsForPassWithUniqueID:]
  -[NPKPassAssociatedInfoManager rangingSuspensionReasonForPassWithUniqueID:]
  -[NPKPassAssociatedInfoManager paymentServiceWasInterrupted]
  -[NPKPassAssociatedInfoManager setPaymentServiceWasInterrupted:]


NPKSettingsPreservingFileDataAccessor : PKFileDataAccessor
 @property  NPKCompanionAgentConnection *connection
 @property  NSString *objectUniqueID

  // instance methods
  -[NPKSettingsPreservingFileDataAccessor updateSettings:]
  -[NPKSettingsPreservingFileDataAccessor objectUniqueID]
  -[NPKSettingsPreservingFileDataAccessor .cxx_destruct]
  -[NPKSettingsPreservingFileDataAccessor setObjectUniqueID:]
  -[NPKSettingsPreservingFileDataAccessor setConnection:]
  -[NPKSettingsPreservingFileDataAccessor connection]


NPKProtoAcceptSubcredentialInvitationResponse : PBCodable <NSCopying>
 @property  BOOL hasPassForInvitation
 @property  NPKProtoPass *passForInvitation
 @property  BOOL hasErrorData
 @property  NSData *errorData

  // instance methods
  -[NPKProtoAcceptSubcredentialInvitationResponse mergeFrom:]
  -[NPKProtoAcceptSubcredentialInvitationResponse .cxx_destruct]
  -[NPKProtoAcceptSubcredentialInvitationResponse dictionaryRepresentation]
  -[NPKProtoAcceptSubcredentialInvitationResponse writeTo:]
  -[NPKProtoAcceptSubcredentialInvitationResponse isEqual:]
  -[NPKProtoAcceptSubcredentialInvitationResponse copyTo:]
  -[NPKProtoAcceptSubcredentialInvitationResponse readFrom:]
  -[NPKProtoAcceptSubcredentialInvitationResponse copyWithZone:]
  -[NPKProtoAcceptSubcredentialInvitationResponse errorData]
  -[NPKProtoAcceptSubcredentialInvitationResponse hasErrorData]
  -[NPKProtoAcceptSubcredentialInvitationResponse setErrorData:]
  -[NPKProtoAcceptSubcredentialInvitationResponse setPassForInvitation:]
  -[NPKProtoAcceptSubcredentialInvitationResponse hasPassForInvitation]
  -[NPKProtoAcceptSubcredentialInvitationResponse passForInvitation]


NPKProtoTriggerCloudStoreZoneCreationForAccountResponse : PBCodable <NSCopying>
 @property  BOOL success

  // instance methods
  -[NPKProtoTriggerCloudStoreZoneCreationForAccountResponse setSuccess:]
  -[NPKProtoTriggerCloudStoreZoneCreationForAccountResponse success]
  -[NPKProtoTriggerCloudStoreZoneCreationForAccountResponse mergeFrom:]
  -[NPKProtoTriggerCloudStoreZoneCreationForAccountResponse dictionaryRepresentation]
  -[NPKProtoTriggerCloudStoreZoneCreationForAccountResponse writeTo:]
  -[NPKProtoTriggerCloudStoreZoneCreationForAccountResponse isEqual:]
  -[NPKProtoTriggerCloudStoreZoneCreationForAccountResponse copyTo:]
  -[NPKProtoTriggerCloudStoreZoneCreationForAccountResponse readFrom:]
  -[NPKProtoTriggerCloudStoreZoneCreationForAccountResponse copyWithZone:]


NPKProtoUpdatedAccountsForProvisioningResponse : PBCodable <NSCopying>
 @property  BOOL hasPending
 @property  BOOL pending
 @property  BOOL hasAccountsRequiringProvisioningData
 @property  NSData *accountsRequiringProvisioningData
 @property  BOOL hasAccountsOnDeviceData
 @property  NSData *accountsOnDeviceData

  // instance methods
  -[NPKProtoUpdatedAccountsForProvisioningResponse pending]
  -[NPKProtoUpdatedAccountsForProvisioningResponse mergeFrom:]
  -[NPKProtoUpdatedAccountsForProvisioningResponse setPending:]
  -[NPKProtoUpdatedAccountsForProvisioningResponse .cxx_destruct]
  -[NPKProtoUpdatedAccountsForProvisioningResponse dictionaryRepresentation]
  -[NPKProtoUpdatedAccountsForProvisioningResponse writeTo:]
  -[NPKProtoUpdatedAccountsForProvisioningResponse isEqual:]
  -[NPKProtoUpdatedAccountsForProvisioningResponse copyTo:]
  -[NPKProtoUpdatedAccountsForProvisioningResponse readFrom:]
  -[NPKProtoUpdatedAccountsForProvisioningResponse copyWithZone:]
  -[NPKProtoUpdatedAccountsForProvisioningResponse setHasPending:]
  -[NPKProtoUpdatedAccountsForProvisioningResponse hasPending]
  -[NPKProtoUpdatedAccountsForProvisioningResponse setAccountsRequiringProvisioningData:]
  -[NPKProtoUpdatedAccountsForProvisioningResponse setAccountsOnDeviceData:]
  -[NPKProtoUpdatedAccountsForProvisioningResponse hasAccountsRequiringProvisioningData]
  -[NPKProtoUpdatedAccountsForProvisioningResponse hasAccountsOnDeviceData]
  -[NPKProtoUpdatedAccountsForProvisioningResponse accountsRequiringProvisioningData]
  -[NPKProtoUpdatedAccountsForProvisioningResponse accountsOnDeviceData]


NPKProtoRemoveSharingInvitationResponse : PBCodable <NSCopying>
 @property  BOOL hasSuccess
 @property  BOOL success

  // instance methods
  -[NPKProtoRemoveSharingInvitationResponse setSuccess:]
  -[NPKProtoRemoveSharingInvitationResponse success]
  -[NPKProtoRemoveSharingInvitationResponse mergeFrom:]
  -[NPKProtoRemoveSharingInvitationResponse hasSuccess]
  -[NPKProtoRemoveSharingInvitationResponse dictionaryRepresentation]
  -[NPKProtoRemoveSharingInvitationResponse writeTo:]
  -[NPKProtoRemoveSharingInvitationResponse setHasSuccess:]
  -[NPKProtoRemoveSharingInvitationResponse isEqual:]
  -[NPKProtoRemoveSharingInvitationResponse copyTo:]
  -[NPKProtoRemoveSharingInvitationResponse readFrom:]
  -[NPKProtoRemoveSharingInvitationResponse copyWithZone:]


NPKProtoStandalonePaymentProvisioningFlowChooseManualEntryRequest : PBRequest <NSCopying>
 @property  NPKProtoStandaloneRequestHeader *requestHeader

  // instance methods
  -[NPKProtoStandalonePaymentProvisioningFlowChooseManualEntryRequest mergeFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseManualEntryRequest .cxx_destruct]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseManualEntryRequest dictionaryRepresentation]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseManualEntryRequest writeTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseManualEntryRequest isEqual:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseManualEntryRequest copyTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseManualEntryRequest readFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseManualEntryRequest copyWithZone:]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseManualEntryRequest requestHeader]
  -[NPKProtoStandalonePaymentProvisioningFlowChooseManualEntryRequest setRequestHeader:]


NPKIDVRemoteDeviceProtoPrearmStatusUpdate : PBCodable <NSCopying>
 @property  int prearmStatus

  // instance methods
  -[NPKIDVRemoteDeviceProtoPrearmStatusUpdate mergeFrom:]
  -[NPKIDVRemoteDeviceProtoPrearmStatusUpdate dictionaryRepresentation]
  -[NPKIDVRemoteDeviceProtoPrearmStatusUpdate writeTo:]
  -[NPKIDVRemoteDeviceProtoPrearmStatusUpdate isEqual:]
  -[NPKIDVRemoteDeviceProtoPrearmStatusUpdate copyTo:]
  -[NPKIDVRemoteDeviceProtoPrearmStatusUpdate readFrom:]
  -[NPKIDVRemoteDeviceProtoPrearmStatusUpdate copyWithZone:]
  -[NPKIDVRemoteDeviceProtoPrearmStatusUpdate prearmStatus]
  -[NPKIDVRemoteDeviceProtoPrearmStatusUpdate prearmStatusAsString:]
  -[NPKIDVRemoteDeviceProtoPrearmStatusUpdate StringAsPrearmStatus:]
  -[NPKIDVRemoteDeviceProtoPrearmStatusUpdate setPrearmStatus:]


NPKProtoSetBalanceReminderForBalanceAndPassResponse : PBCodable <NSCopying>
 @property  BOOL hasPending
 @property  BOOL pending
 @property  BOOL hasSuccess
 @property  BOOL success

  // instance methods
  -[NPKProtoSetBalanceReminderForBalanceAndPassResponse setSuccess:]
  -[NPKProtoSetBalanceReminderForBalanceAndPassResponse success]
  -[NPKProtoSetBalanceReminderForBalanceAndPassResponse pending]
  -[NPKProtoSetBalanceReminderForBalanceAndPassResponse mergeFrom:]
  -[NPKProtoSetBalanceReminderForBalanceAndPassResponse setPending:]
  -[NPKProtoSetBalanceReminderForBalanceAndPassResponse hasSuccess]
  -[NPKProtoSetBalanceReminderForBalanceAndPassResponse dictionaryRepresentation]
  -[NPKProtoSetBalanceReminderForBalanceAndPassResponse writeTo:]
  -[NPKProtoSetBalanceReminderForBalanceAndPassResponse setHasSuccess:]
  -[NPKProtoSetBalanceReminderForBalanceAndPassResponse isEqual:]
  -[NPKProtoSetBalanceReminderForBalanceAndPassResponse copyTo:]
  -[NPKProtoSetBalanceReminderForBalanceAndPassResponse readFrom:]
  -[NPKProtoSetBalanceReminderForBalanceAndPassResponse copyWithZone:]
  -[NPKProtoSetBalanceReminderForBalanceAndPassResponse setHasPending:]
  -[NPKProtoSetBalanceReminderForBalanceAndPassResponse hasPending]


NPKRemotePassActionResponse : NPKRemotePassAction
 @property  NSString *identifier
 @property  int result
 @property  PKCurrencyAmount *currencyAmount

  // instance methods
  -[NPKRemotePassActionResponse result]
  -[NPKRemotePassActionResponse identifier]
  -[NPKRemotePassActionResponse currencyAmount]


NPKProtoResumeRangingForPairedReaderIdentifierRequest : PBRequest <NSCopying>
 @property  BOOL hasPairedReaderIdentifier
 @property  NSString *pairedReaderIdentifier

  // instance methods
  -[NPKProtoResumeRangingForPairedReaderIdentifierRequest mergeFrom:]
  -[NPKProtoResumeRangingForPairedReaderIdentifierRequest .cxx_destruct]
  -[NPKProtoResumeRangingForPairedReaderIdentifierRequest dictionaryRepresentation]
  -[NPKProtoResumeRangingForPairedReaderIdentifierRequest writeTo:]
  -[NPKProtoResumeRangingForPairedReaderIdentifierRequest hasPairedReaderIdentifier]
  -[NPKProtoResumeRangingForPairedReaderIdentifierRequest isEqual:]
  -[NPKProtoResumeRangingForPairedReaderIdentifierRequest copyTo:]
  -[NPKProtoResumeRangingForPairedReaderIdentifierRequest readFrom:]
  -[NPKProtoResumeRangingForPairedReaderIdentifierRequest setPairedReaderIdentifier:]
  -[NPKProtoResumeRangingForPairedReaderIdentifierRequest copyWithZone:]
  -[NPKProtoResumeRangingForPairedReaderIdentifierRequest pairedReaderIdentifier]


NPKContactlessPaymentSessionSoundsManager : NSObject <NPKContactlessPaymentSessionManagerObserver>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NPKContactlessPaymentSessionSoundsManager contactlessPaymentSessionManager:didChangeSessionState:]


NPKProtoRevokeSubcredentialsResponse : PBCodable <NSCopying>
 @property  BOOL hasSuccess
 @property  BOOL success

  // instance methods
  -[NPKProtoRevokeSubcredentialsResponse setSuccess:]
  -[NPKProtoRevokeSubcredentialsResponse success]
  -[NPKProtoRevokeSubcredentialsResponse mergeFrom:]
  -[NPKProtoRevokeSubcredentialsResponse hasSuccess]
  -[NPKProtoRevokeSubcredentialsResponse dictionaryRepresentation]
  -[NPKProtoRevokeSubcredentialsResponse writeTo:]
  -[NPKProtoRevokeSubcredentialsResponse setHasSuccess:]
  -[NPKProtoRevokeSubcredentialsResponse isEqual:]
  -[NPKProtoRevokeSubcredentialsResponse copyTo:]
  -[NPKProtoRevokeSubcredentialsResponse readFrom:]
  -[NPKProtoRevokeSubcredentialsResponse copyWithZone:]


NPKProtoStandalonePingResponse : PBCodable <NSCopying>
 @property  NSString *content

  // instance methods
  -[NPKProtoStandalonePingResponse setContent:]
  -[NPKProtoStandalonePingResponse content]
  -[NPKProtoStandalonePingResponse mergeFrom:]
  -[NPKProtoStandalonePingResponse .cxx_destruct]
  -[NPKProtoStandalonePingResponse dictionaryRepresentation]
  -[NPKProtoStandalonePingResponse writeTo:]
  -[NPKProtoStandalonePingResponse isEqual:]
  -[NPKProtoStandalonePingResponse copyTo:]
  -[NPKProtoStandalonePingResponse readFrom:]
  -[NPKProtoStandalonePingResponse copyWithZone:]


NPKProtoPassSyncStateChange : PBCodable <NSCopying>
 @property  NSData *changeUUID
 @property  BOOL hasLastKnownReconciledPassSyncStateHash
 @property  NSData *lastKnownReconciledPassSyncStateHash
 @property  int changeType
 @property  NSString *uniqueID
 @property  BOOL hasSyncStateItem
 @property  NPKProtoPassSyncStateItem *syncStateItem
 @property  BOOL hasPassData
 @property  NSData *passData
 @property  BOOL hasPassSegmentIndex
 @property  unsigned int passSegmentIndex
 @property  BOOL hasPassSegmentTotal
 @property  unsigned int passSegmentTotal
 @property  BOOL hasCompanionCatalog
 @property  NPKProtoCatalog *companionCatalog
 @property  BOOL hasBaseManifestHashForPartialUpdate
 @property  NSData *baseManifestHashForPartialUpdate
 @property  NSMutableArray *remoteAssetsForPartialUpdates
 @property  BOOL hasWatchCatalog
 @property  NPKProtoCatalog *watchCatalog
 @property  BOOL hasLastKnownReconciledPassSyncStateHashVersion
 @property  unsigned int lastKnownReconciledPassSyncStateHashVersion

  // class methods
  +[NPKProtoPassSyncStateChange remoteAssetsForPartialUpdateType]

  // instance methods
  -[NPKProtoPassSyncStateChange changeType]
  -[NPKProtoPassSyncStateChange mergeFrom:]
  -[NPKProtoPassSyncStateChange StringAsChangeType:]
  -[NPKProtoPassSyncStateChange uniqueID]
  -[NPKProtoPassSyncStateChange changeTypeAsString:]
  -[NPKProtoPassSyncStateChange .cxx_destruct]
  -[NPKProtoPassSyncStateChange dictionaryRepresentation]
  -[NPKProtoPassSyncStateChange writeTo:]
  -[NPKProtoPassSyncStateChange isEqual:]
  -[NPKProtoPassSyncStateChange setChangeType:]
  -[NPKProtoPassSyncStateChange copyTo:]
  -[NPKProtoPassSyncStateChange readFrom:]
  -[NPKProtoPassSyncStateChange setUniqueID:]
  -[NPKProtoPassSyncStateChange copyWithZone:]
  -[NPKProtoPassSyncStateChange passData]
  -[NPKProtoPassSyncStateChange setCompanionCatalog:]
  -[NPKProtoPassSyncStateChange setWatchCatalog:]
  -[NPKProtoPassSyncStateChange hasPassSegmentIndex]
  -[NPKProtoPassSyncStateChange passSegmentIndex]
  -[NPKProtoPassSyncStateChange changeUUID]
  -[NPKProtoPassSyncStateChange passSegmentTotal]
  -[NPKProtoPassSyncStateChange hasPassSegmentTotal]
  -[NPKProtoPassSyncStateChange npkDescription]
  -[NPKProtoPassSyncStateChange setPassData:]
  -[NPKProtoPassSyncStateChange hasCompanionCatalog]
  -[NPKProtoPassSyncStateChange hasWatchCatalog]
  -[NPKProtoPassSyncStateChange companionCatalog]
  -[NPKProtoPassSyncStateChange watchCatalog]
  -[NPKProtoPassSyncStateChange setPassSegmentIndex:]
  -[NPKProtoPassSyncStateChange setPassSegmentTotal:]
  -[NPKProtoPassSyncStateChange hasPassData]
  -[NPKProtoPassSyncStateChange syncStateItem]
  -[NPKProtoPassSyncStateChange baseManifestHashForPartialUpdate]
  -[NPKProtoPassSyncStateChange setBaseManifestHashForPartialUpdate:]
  -[NPKProtoPassSyncStateChange setChangeUUID:]
  -[NPKProtoPassSyncStateChange setSyncStateItem:]
  -[NPKProtoPassSyncStateChange addRemoteAssetsForPartialUpdate:]
  -[NPKProtoPassSyncStateChange setLastKnownReconciledPassSyncStateHash:]
  -[NPKProtoPassSyncStateChange remoteAssetsForPartialUpdatesCount]
  -[NPKProtoPassSyncStateChange clearRemoteAssetsForPartialUpdates]
  -[NPKProtoPassSyncStateChange remoteAssetsForPartialUpdateAtIndex:]
  -[NPKProtoPassSyncStateChange hasLastKnownReconciledPassSyncStateHash]
  -[NPKProtoPassSyncStateChange hasSyncStateItem]
  -[NPKProtoPassSyncStateChange setHasPassSegmentIndex:]
  -[NPKProtoPassSyncStateChange setHasPassSegmentTotal:]
  -[NPKProtoPassSyncStateChange hasBaseManifestHashForPartialUpdate]
  -[NPKProtoPassSyncStateChange setLastKnownReconciledPassSyncStateHashVersion:]
  -[NPKProtoPassSyncStateChange setHasLastKnownReconciledPassSyncStateHashVersion:]
  -[NPKProtoPassSyncStateChange hasLastKnownReconciledPassSyncStateHashVersion]
  -[NPKProtoPassSyncStateChange lastKnownReconciledPassSyncStateHash]
  -[NPKProtoPassSyncStateChange remoteAssetsForPartialUpdates]
  -[NPKProtoPassSyncStateChange setRemoteAssetsForPartialUpdates:]
  -[NPKProtoPassSyncStateChange lastKnownReconciledPassSyncStateHashVersion]


NPKProtoStandalonePaymentDigitalIssuanceMetadata : PBCodable <NSCopying>
 @property  BOOL hasServiceProviderIdentifier
 @property  NSString *serviceProviderIdentifier
 @property  BOOL hasServiceProviderCountryCode
 @property  NSString *serviceProviderCountryCode
 @property  NSMutableArray *serviceProviderAcceptedNetworks
 @property  NSMutableArray *serviceProviderCapabilities
 @property  BOOL hasServiceProviderDictJson
 @property  NSString *serviceProviderDictJson
 @property  BOOL hasAction
 @property  NSString *action
 @property  BOOL hasMerchantID
 @property  NSString *merchantID
 @property  NSMutableArray *defaultSuggestions

  // class methods
  +[NPKProtoStandalonePaymentDigitalIssuanceMetadata serviceProviderAcceptedNetworksType]
  +[NPKProtoStandalonePaymentDigitalIssuanceMetadata serviceProviderCapabilitiesType]
  +[NPKProtoStandalonePaymentDigitalIssuanceMetadata defaultSuggestionsType]

  // instance methods
  -[NPKProtoStandalonePaymentDigitalIssuanceMetadata mergeFrom:]
  -[NPKProtoStandalonePaymentDigitalIssuanceMetadata .cxx_destruct]
  -[NPKProtoStandalonePaymentDigitalIssuanceMetadata dictionaryRepresentation]
  -[NPKProtoStandalonePaymentDigitalIssuanceMetadata writeTo:]
  -[NPKProtoStandalonePaymentDigitalIssuanceMetadata setAction:]
  -[NPKProtoStandalonePaymentDigitalIssuanceMetadata hasAction]
  -[NPKProtoStandalonePaymentDigitalIssuanceMetadata action]
  -[NPKProtoStandalonePaymentDigitalIssuanceMetadata isEqual:]
  -[NPKProtoStandalonePaymentDigitalIssuanceMetadata copyTo:]
  -[NPKProtoStandalonePaymentDigitalIssuanceMetadata readFrom:]
  -[NPKProtoStandalonePaymentDigitalIssuanceMetadata setServiceProviderIdentifier:]
  -[NPKProtoStandalonePaymentDigitalIssuanceMetadata merchantID]
  -[NPKProtoStandalonePaymentDigitalIssuanceMetadata setServiceProviderCountryCode:]
  -[NPKProtoStandalonePaymentDigitalIssuanceMetadata setServiceProviderAcceptedNetworks:]
  -[NPKProtoStandalonePaymentDigitalIssuanceMetadata setServiceProviderCapabilities:]
  -[NPKProtoStandalonePaymentDigitalIssuanceMetadata serviceProviderIdentifier]
  -[NPKProtoStandalonePaymentDigitalIssuanceMetadata serviceProviderCountryCode]
  -[NPKProtoStandalonePaymentDigitalIssuanceMetadata serviceProviderAcceptedNetworks]
  -[NPKProtoStandalonePaymentDigitalIssuanceMetadata serviceProviderCapabilities]
  -[NPKProtoStandalonePaymentDigitalIssuanceMetadata defaultSuggestions]
  -[NPKProtoStandalonePaymentDigitalIssuanceMetadata copyWithZone:]
  -[NPKProtoStandalonePaymentDigitalIssuanceMetadata setMerchantID:]
  -[NPKProtoStandalonePaymentDigitalIssuanceMetadata addServiceProviderAcceptedNetworks:]
  -[NPKProtoStandalonePaymentDigitalIssuanceMetadata addServiceProviderCapabilities:]
  -[NPKProtoStandalonePaymentDigitalIssuanceMetadata setServiceProviderDictJson:]
  -[NPKProtoStandalonePaymentDigitalIssuanceMetadata addDefaultSuggestions:]
  -[NPKProtoStandalonePaymentDigitalIssuanceMetadata serviceProviderAcceptedNetworksCount]
  -[NPKProtoStandalonePaymentDigitalIssuanceMetadata clearServiceProviderAcceptedNetworks]
  -[NPKProtoStandalonePaymentDigitalIssuanceMetadata serviceProviderAcceptedNetworksAtIndex:]
  -[NPKProtoStandalonePaymentDigitalIssuanceMetadata serviceProviderCapabilitiesCount]
  -[NPKProtoStandalonePaymentDigitalIssuanceMetadata clearServiceProviderCapabilities]
  -[NPKProtoStandalonePaymentDigitalIssuanceMetadata serviceProviderCapabilitiesAtIndex:]
  -[NPKProtoStandalonePaymentDigitalIssuanceMetadata defaultSuggestionsCount]
  -[NPKProtoStandalonePaymentDigitalIssuanceMetadata clearDefaultSuggestions]
  -[NPKProtoStandalonePaymentDigitalIssuanceMetadata defaultSuggestionsAtIndex:]
  -[NPKProtoStandalonePaymentDigitalIssuanceMetadata hasServiceProviderIdentifier]
  -[NPKProtoStandalonePaymentDigitalIssuanceMetadata hasServiceProviderCountryCode]
  -[NPKProtoStandalonePaymentDigitalIssuanceMetadata hasServiceProviderDictJson]
  -[NPKProtoStandalonePaymentDigitalIssuanceMetadata hasMerchantID]
  -[NPKProtoStandalonePaymentDigitalIssuanceMetadata serviceProviderDictJson]
  -[NPKProtoStandalonePaymentDigitalIssuanceMetadata setDefaultSuggestions:]


NPKProtoUpdatedAccountsForProvisioningRequest : PBRequest <NSCopying>
  // instance methods
  -[NPKProtoUpdatedAccountsForProvisioningRequest mergeFrom:]
  -[NPKProtoUpdatedAccountsForProvisioningRequest dictionaryRepresentation]
  -[NPKProtoUpdatedAccountsForProvisioningRequest writeTo:]
  -[NPKProtoUpdatedAccountsForProvisioningRequest isEqual:]
  -[NPKProtoUpdatedAccountsForProvisioningRequest copyTo:]
  -[NPKProtoUpdatedAccountsForProvisioningRequest readFrom:]
  -[NPKProtoUpdatedAccountsForProvisioningRequest copyWithZone:]


NPKProtoSecureElementGetAppletsResponse : PBCodable <NSCopying>
 @property  BOOL hasPending
 @property  BOOL pending
 @property  NSMutableArray *cardAIDs
 @property  unsigned long lifecycleStatesCount
 @property  ^I lifecycleStates
 @property  unsigned long activationStatesCount
 @property  ^I activationStates
 @property  NSMutableArray *appletsBytes

  // class methods
  +[NPKProtoSecureElementGetAppletsResponse cardAIDsType]
  +[NPKProtoSecureElementGetAppletsResponse appletsBytesType]

  // instance methods
  -[NPKProtoSecureElementGetAppletsResponse pending]
  -[NPKProtoSecureElementGetAppletsResponse mergeFrom:]
  -[NPKProtoSecureElementGetAppletsResponse setPending:]
  -[NPKProtoSecureElementGetAppletsResponse .cxx_destruct]
  -[NPKProtoSecureElementGetAppletsResponse dictionaryRepresentation]
  -[NPKProtoSecureElementGetAppletsResponse writeTo:]
  -[NPKProtoSecureElementGetAppletsResponse isEqual:]
  -[NPKProtoSecureElementGetAppletsResponse copyTo:]
  -[NPKProtoSecureElementGetAppletsResponse readFrom:]
  -[NPKProtoSecureElementGetAppletsResponse dealloc]
  -[NPKProtoSecureElementGetAppletsResponse copyWithZone:]
  -[NPKProtoSecureElementGetAppletsResponse setHasPending:]
  -[NPKProtoSecureElementGetAppletsResponse hasPending]
  -[NPKProtoSecureElementGetAppletsResponse addCardAIDs:]
  -[NPKProtoSecureElementGetAppletsResponse cardAIDsCount]
  -[NPKProtoSecureElementGetAppletsResponse clearCardAIDs]
  -[NPKProtoSecureElementGetAppletsResponse cardAIDsAtIndex:]
  -[NPKProtoSecureElementGetAppletsResponse cardAIDs]
  -[NPKProtoSecureElementGetAppletsResponse setCardAIDs:]
  -[NPKProtoSecureElementGetAppletsResponse addAppletsBytes:]
  -[NPKProtoSecureElementGetAppletsResponse lifecycleStatesCount]
  -[NPKProtoSecureElementGetAppletsResponse clearLifecycleStates]
  -[NPKProtoSecureElementGetAppletsResponse lifecycleStatesAtIndex:]
  -[NPKProtoSecureElementGetAppletsResponse addLifecycleStates:]
  -[NPKProtoSecureElementGetAppletsResponse activationStatesCount]
  -[NPKProtoSecureElementGetAppletsResponse clearActivationStates]
  -[NPKProtoSecureElementGetAppletsResponse activationStatesAtIndex:]
  -[NPKProtoSecureElementGetAppletsResponse addActivationStates:]
  -[NPKProtoSecureElementGetAppletsResponse appletsBytesCount]
  -[NPKProtoSecureElementGetAppletsResponse clearAppletsBytes]
  -[NPKProtoSecureElementGetAppletsResponse appletsBytesAtIndex:]
  -[NPKProtoSecureElementGetAppletsResponse lifecycleStates]
  -[NPKProtoSecureElementGetAppletsResponse setLifecycleStates:count:]
  -[NPKProtoSecureElementGetAppletsResponse activationStates]
  -[NPKProtoSecureElementGetAppletsResponse setActivationStates:count:]
  -[NPKProtoSecureElementGetAppletsResponse appletsBytes]
  -[NPKProtoSecureElementGetAppletsResponse setAppletsBytes:]


NPKProtoInitializeCloudStoreIfNecessaryWithHandlerResponse : PBCodable <NSCopying>
 @property  BOOL hasPending
 @property  BOOL pending
 @property  BOOL hasSuccess
 @property  BOOL success
 @property  BOOL hasErrorData
 @property  NSData *errorData

  // instance methods
  -[NPKProtoInitializeCloudStoreIfNecessaryWithHandlerResponse setSuccess:]
  -[NPKProtoInitializeCloudStoreIfNecessaryWithHandlerResponse success]
  -[NPKProtoInitializeCloudStoreIfNecessaryWithHandlerResponse pending]
  -[NPKProtoInitializeCloudStoreIfNecessaryWithHandlerResponse mergeFrom:]
  -[NPKProtoInitializeCloudStoreIfNecessaryWithHandlerResponse setPending:]
  -[NPKProtoInitializeCloudStoreIfNecessaryWithHandlerResponse .cxx_destruct]
  -[NPKProtoInitializeCloudStoreIfNecessaryWithHandlerResponse hasSuccess]
  -[NPKProtoInitializeCloudStoreIfNecessaryWithHandlerResponse dictionaryRepresentation]
  -[NPKProtoInitializeCloudStoreIfNecessaryWithHandlerResponse writeTo:]
  -[NPKProtoInitializeCloudStoreIfNecessaryWithHandlerResponse setHasSuccess:]
  -[NPKProtoInitializeCloudStoreIfNecessaryWithHandlerResponse isEqual:]
  -[NPKProtoInitializeCloudStoreIfNecessaryWithHandlerResponse copyTo:]
  -[NPKProtoInitializeCloudStoreIfNecessaryWithHandlerResponse readFrom:]
  -[NPKProtoInitializeCloudStoreIfNecessaryWithHandlerResponse copyWithZone:]
  -[NPKProtoInitializeCloudStoreIfNecessaryWithHandlerResponse errorData]
  -[NPKProtoInitializeCloudStoreIfNecessaryWithHandlerResponse hasErrorData]
  -[NPKProtoInitializeCloudStoreIfNecessaryWithHandlerResponse setErrorData:]
  -[NPKProtoInitializeCloudStoreIfNecessaryWithHandlerResponse setHasPending:]
  -[NPKProtoInitializeCloudStoreIfNecessaryWithHandlerResponse hasPending]


NPKProtoResetApplePayManateeViewResponse : PBCodable <NSCopying>
 @property  BOOL hasPending
 @property  BOOL pending
 @property  BOOL hasSuccess
 @property  BOOL success
 @property  BOOL hasErrorData
 @property  NSData *errorData

  // instance methods
  -[NPKProtoResetApplePayManateeViewResponse setSuccess:]
  -[NPKProtoResetApplePayManateeViewResponse success]
  -[NPKProtoResetApplePayManateeViewResponse pending]
  -[NPKProtoResetApplePayManateeViewResponse mergeFrom:]
  -[NPKProtoResetApplePayManateeViewResponse setPending:]
  -[NPKProtoResetApplePayManateeViewResponse .cxx_destruct]
  -[NPKProtoResetApplePayManateeViewResponse hasSuccess]
  -[NPKProtoResetApplePayManateeViewResponse dictionaryRepresentation]
  -[NPKProtoResetApplePayManateeViewResponse writeTo:]
  -[NPKProtoResetApplePayManateeViewResponse setHasSuccess:]
  -[NPKProtoResetApplePayManateeViewResponse isEqual:]
  -[NPKProtoResetApplePayManateeViewResponse copyTo:]
  -[NPKProtoResetApplePayManateeViewResponse readFrom:]
  -[NPKProtoResetApplePayManateeViewResponse copyWithZone:]
  -[NPKProtoResetApplePayManateeViewResponse errorData]
  -[NPKProtoResetApplePayManateeViewResponse hasErrorData]
  -[NPKProtoResetApplePayManateeViewResponse setErrorData:]
  -[NPKProtoResetApplePayManateeViewResponse setHasPending:]
  -[NPKProtoResetApplePayManateeViewResponse hasPending]


NPKUserNotification : NSObject <NPKUserNotificationModel>
 @property  NSString *title
 @property  NSString *body
 @property  NSString *notificationCategoryIdentifier
 @property  NSDictionary *userInfo
 @property  NSArray *identifierHashComponents
 @property  NSString *identifier
 @property  BOOL isSuppressed
 @property  BOOL suppressed
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NPKUserNotification generateModelIdentifierWith:]

  // instance methods
  -[NPKUserNotification body]
  -[NPKUserNotification identifier]
  -[NPKUserNotification title]
  -[NPKUserNotification userInfo]
  -[NPKUserNotification isSuppressed]
  -[NPKUserNotification identifierHashComponents]
  -[NPKUserNotification notificationCategoryIdentifier]


NPKPassSelectionFieldDetectorCoordinator : NSObject <NPKPassSelectionFieldDetectorManagerDelegate>
 @property  NPKPassSelectionFieldDetectorManager *passSelectionFieldDetectorManager
 @property  <NPKPassSelectionFieldDetectorListener> *localFieldDetectorListener
 @property  <NPKRemotePassSelectionFieldDetectorListenerCoordinator> *remoteFieldDetectListenerCoordinator
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NPKPassSelectionFieldDetectorCoordinator .cxx_destruct]
  -[NPKPassSelectionFieldDetectorCoordinator passSelectionFieldDetectManager:didEnterFieldForPassWithUniqueID:]
  -[NPKPassSelectionFieldDetectorCoordinator remoteFieldDetectListenerCoordinator]
  -[NPKPassSelectionFieldDetectorCoordinator initWithNPKPassSelectionFieldDetectorManager:remoteFieldDetectListenerCoordinator:]
  -[NPKPassSelectionFieldDetectorCoordinator localFieldDetectorListener]
  -[NPKPassSelectionFieldDetectorCoordinator passSelectionFieldDetectorManager]


NPKRemotePassActionUIService : NSObject <NPKCompanionViewServiceConnectionDelegate>
 @property  NPKCompanionViewServiceConnection *connection
 @property  <NPKRemotePassActionUIServiceDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NPKRemotePassActionUIService .cxx_destruct]
  -[NPKRemotePassActionUIService setConnection:]
  -[NPKRemotePassActionUIService setDelegate:]
  -[NPKRemotePassActionUIService connection]
  -[NPKRemotePassActionUIService delegate]
  -[NPKRemotePassActionUIService presentRemotePassValueEntryViewControllerForRequest:contact:completion:]
  -[NPKRemotePassActionUIService presentRemotePassItemSelectionViewControllerForRequest:contact:completion:]
  -[NPKRemotePassActionUIService companionViewServiceConnection:handleCompanionValueEntryDidFinishWithCurrencyAmount:forRequestWithIdentifier:]
  -[NPKRemotePassActionUIService companionViewServiceConnection:handleCompanionValueEntryDidCancelForRequestIdentifier:]
  -[NPKRemotePassActionUIService companionViewServiceConnection:handleCompanionItemSelectionDidFinishWithRenewalAmount:serviceProviderData:forRequestWithIdentifier:]
  -[NPKRemotePassActionUIService companionViewServiceConnection:handleCompanionItemSelectionDidCancelForRequestIdentifier:]


NPKProtoStandaloneRequestHeader : PBCodable <NSCopying>
 @property  int protocolVersion
 @property  BOOL hasSessionIdentifier
 @property  NSString *sessionIdentifier
 @property  BOOL hasStepIdentifier
 @property  NSString *stepIdentifier
 @property  NSMutableArray *cachedHeroImages

  // class methods
  +[NPKProtoStandaloneRequestHeader cachedHeroImagesType]

  // instance methods
  -[NPKProtoStandaloneRequestHeader mergeFrom:]
  -[NPKProtoStandaloneRequestHeader setSessionIdentifier:]
  -[NPKProtoStandaloneRequestHeader protocolVersion]
  -[NPKProtoStandaloneRequestHeader .cxx_destruct]
  -[NPKProtoStandaloneRequestHeader setProtocolVersion:]
  -[NPKProtoStandaloneRequestHeader dictionaryRepresentation]
  -[NPKProtoStandaloneRequestHeader sessionIdentifier]
  -[NPKProtoStandaloneRequestHeader writeTo:]
  -[NPKProtoStandaloneRequestHeader isEqual:]
  -[NPKProtoStandaloneRequestHeader stepIdentifier]
  -[NPKProtoStandaloneRequestHeader copyTo:]
  -[NPKProtoStandaloneRequestHeader hasSessionIdentifier]
  -[NPKProtoStandaloneRequestHeader setStepIdentifier:]
  -[NPKProtoStandaloneRequestHeader readFrom:]
  -[NPKProtoStandaloneRequestHeader copyWithZone:]
  -[NPKProtoStandaloneRequestHeader protocolVersionAsString:]
  -[NPKProtoStandaloneRequestHeader StringAsProtocolVersion:]
  -[NPKProtoStandaloneRequestHeader addCachedHeroImages:]
  -[NPKProtoStandaloneRequestHeader cachedHeroImagesCount]
  -[NPKProtoStandaloneRequestHeader clearCachedHeroImages]
  -[NPKProtoStandaloneRequestHeader cachedHeroImagesAtIndex:]
  -[NPKProtoStandaloneRequestHeader hasStepIdentifier]
  -[NPKProtoStandaloneRequestHeader cachedHeroImages]
  -[NPKProtoStandaloneRequestHeader setCachedHeroImages:]


NPKBalanceField : NSObject <NPKBalanceField>
 @property  NSString *formattedValue
 @property  BOOL isPrimaryBalance
 @property  PKPaymentBalance *balance
 @property  NSString *label
 @property  NSString *detailLabel
 @property  NSString *identifier
 @property  PKPaymentPassAction *action
 @property  BOOL hasPendingUpdate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NPKBalanceField label]
  -[NPKBalanceField .cxx_destruct]
  -[NPKBalanceField balance]
  -[NPKBalanceField formattedValue]
  -[NPKBalanceField action]
  -[NPKBalanceField isEqual:]
  -[NPKBalanceField identifier]
  -[NPKBalanceField detailLabel]
  -[NPKBalanceField hasPendingUpdate]
  -[NPKBalanceField isPrimaryBalance]
  -[NPKBalanceField initWithBalance:label:formattedValue:identifier:primaryBalance:action:pendingUpdateExpireDate:]


NPKCommutePlanField : NSObject <NPKCommutePlanField>
 @property  NSString *detailLabel
 @property  <NPKDateRange> *usageDateRange
 @property  BOOL isCountBasedCommutePlan
 @property  NSArray *details
 @property  NSString *label
 @property  NSString *formattedValue
 @property  NSString *identifier
 @property  PKPaymentPassAction *action
 @property  BOOL hasPendingUpdate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NPKCommutePlanField label]
  -[NPKCommutePlanField .cxx_destruct]
  -[NPKCommutePlanField formattedValue]
  -[NPKCommutePlanField action]
  -[NPKCommutePlanField identifier]
  -[NPKCommutePlanField details]
  -[NPKCommutePlanField detailLabel]
  -[NPKCommutePlanField usageDateRange]
  -[NPKCommutePlanField initWithLabel:detailLabel:formattedValue:usageDateRange:identifier:details:action:]
  -[NPKCommutePlanField hasPendingUpdate]
  -[NPKCommutePlanField isCountBasedCommutePlan]


NPKExpressModeSettingsCoordinator : NSObject
 @property  PKExpressPassController *expressPassController
 @property  PKPass *currentPass
 @property  unsigned long currentOperation
 @property  LAContext *currentContext
 @property  @? completionHandler
 @property  NSObject<OS_dispatch_queue> *queue
 @property  int notifyToken
 @property  BOOL expressStateUpdatePending
 @property  NSMutableDictionary *previousPassStates
 @property  <NPKExpressModeSettingsCoordinatorDelegate> *delegate

  // instance methods
  -[NPKExpressModeSettingsCoordinator notifyToken]
  -[NPKExpressModeSettingsCoordinator setNotifyToken:]
  -[NPKExpressModeSettingsCoordinator .cxx_destruct]
  -[NPKExpressModeSettingsCoordinator currentContext]
  -[NPKExpressModeSettingsCoordinator setDelegate:]
  -[NPKExpressModeSettingsCoordinator setCurrentContext:]
  -[NPKExpressModeSettingsCoordinator setQueue:]
  -[NPKExpressModeSettingsCoordinator setCompletionHandler:]
  -[NPKExpressModeSettingsCoordinator currentOperation]
  -[NPKExpressModeSettingsCoordinator delegate]
  -[NPKExpressModeSettingsCoordinator queue]
  -[NPKExpressModeSettingsCoordinator completionHandler]
  -[NPKExpressModeSettingsCoordinator setCurrentOperation:]
  -[NPKExpressModeSettingsCoordinator setCurrentPass:]
  -[NPKExpressModeSettingsCoordinator currentPass]
  -[NPKExpressModeSettingsCoordinator _handleExpressStateChange]
  -[NPKExpressModeSettingsCoordinator expressPassController]
  -[NPKExpressModeSettingsCoordinator _expressModeStateForPassWithUniqueID:]
  -[NPKExpressModeSettingsCoordinator _checkForConflictsInEnablingExpressForPass:]
  -[NPKExpressModeSettingsCoordinator _invokeCompletionHandlerWithSuccess:]
  -[NPKExpressModeSettingsCoordinator _requestUserAuthenticationForPass:]
  -[NPKExpressModeSettingsCoordinator _handleUserCancelled]
  -[NPKExpressModeSettingsCoordinator _handleSuccessfulUserAuthenticationWithCredential:forPass:]
  -[NPKExpressModeSettingsCoordinator _handleFailedUserAuthentication]
  -[NPKExpressModeSettingsCoordinator _upgradeExpressModeForPass:withCredential:]
  -[NPKExpressModeSettingsCoordinator _enableExpressModeForPass:withCredential:]
  -[NPKExpressModeSettingsCoordinator _handleSuccessForPass:]
  -[NPKExpressModeSettingsCoordinator _handleFailedPassUpgrade]
  -[NPKExpressModeSettingsCoordinator _handleFailedEnableExpress]
  -[NPKExpressModeSettingsCoordinator _expressModeStateForPassWithUniqueID:fromControllerState:]
  -[NPKExpressModeSettingsCoordinator initWithExpressPassController:queue:]
  -[NPKExpressModeSettingsCoordinator isExpressModeSupportedForPass:]
  -[NPKExpressModeSettingsCoordinator needUpgradeForPass:]
  -[NPKExpressModeSettingsCoordinator expressModeStateForPass:]
  -[NPKExpressModeSettingsCoordinator enableExpressModeForPass:completionHandler:]
  -[NPKExpressModeSettingsCoordinator disableExpressModeForPass:completionHandler:]
  -[NPKExpressModeSettingsCoordinator setExpressPassController:]
  -[NPKExpressModeSettingsCoordinator expressStateUpdatePending]
  -[NPKExpressModeSettingsCoordinator setExpressStateUpdatePending:]
  -[NPKExpressModeSettingsCoordinator previousPassStates]
  -[NPKExpressModeSettingsCoordinator setPreviousPassStates:]


NPKCompanionViewServiceConnectionServerService : NSObject <NSXPCListenerDelegate, NPKCompanionViewServiceConnectionServerDelegate>
 @property  <NPKCompanionViewServiceConnectionServerServiceDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NPKCompanionViewServiceConnectionServerService .cxx_destruct]
  -[NPKCompanionViewServiceConnectionServerService _addServer:]
  -[NPKCompanionViewServiceConnectionServerService setDelegate:]
  -[NPKCompanionViewServiceConnectionServerService init]
  -[NPKCompanionViewServiceConnectionServerService _addConnection:]
  -[NPKCompanionViewServiceConnectionServerService delegate]
  -[NPKCompanionViewServiceConnectionServerService _removeServer:]
  -[NPKCompanionViewServiceConnectionServerService dealloc]
  -[NPKCompanionViewServiceConnectionServerService listener:shouldAcceptNewConnection:]
  -[NPKCompanionViewServiceConnectionServerService handleCompanionItemSelectionRequestFinishedWithRenewalAmount:serviceProviderData:forRequestIdentifier:]
  -[NPKCompanionViewServiceConnectionServerService viewServiceConnectionServer:didRequestPresentRemotePassValueEntryViewControllerForRequest:contact:completion:]
  -[NPKCompanionViewServiceConnectionServerService viewServiceConnectionServer:didRequestPresentRemotePassItemSelectionViewControllerForRequest:contact:completion:]
  -[NPKCompanionViewServiceConnectionServerService handleCompanionValueEntryRequestFinishedWithCurrencyAmount:forRequestIdentifier:]
  -[NPKCompanionViewServiceConnectionServerService handleCompanionValueEntryRequestDidCancelForRequestIdentifier:]
  -[NPKCompanionViewServiceConnectionServerService handleCompanionItemSelectionRequestDidCancelForRequestIdentifier:]


NPKProtoProvisionHomeKeyPassForSerialNumbersResponse : PBCodable <NSCopying>
 @property  NSMutableArray *provisionedPassesDatas
 @property  BOOL hasErrorData
 @property  NSData *errorData

  // class methods
  +[NPKProtoProvisionHomeKeyPassForSerialNumbersResponse provisionedPassesDataType]

  // instance methods
  -[NPKProtoProvisionHomeKeyPassForSerialNumbersResponse mergeFrom:]
  -[NPKProtoProvisionHomeKeyPassForSerialNumbersResponse .cxx_destruct]
  -[NPKProtoProvisionHomeKeyPassForSerialNumbersResponse dictionaryRepresentation]
  -[NPKProtoProvisionHomeKeyPassForSerialNumbersResponse writeTo:]
  -[NPKProtoProvisionHomeKeyPassForSerialNumbersResponse isEqual:]
  -[NPKProtoProvisionHomeKeyPassForSerialNumbersResponse copyTo:]
  -[NPKProtoProvisionHomeKeyPassForSerialNumbersResponse readFrom:]
  -[NPKProtoProvisionHomeKeyPassForSerialNumbersResponse copyWithZone:]
  -[NPKProtoProvisionHomeKeyPassForSerialNumbersResponse errorData]
  -[NPKProtoProvisionHomeKeyPassForSerialNumbersResponse hasErrorData]
  -[NPKProtoProvisionHomeKeyPassForSerialNumbersResponse setErrorData:]
  -[NPKProtoProvisionHomeKeyPassForSerialNumbersResponse addProvisionedPassesData:]
  -[NPKProtoProvisionHomeKeyPassForSerialNumbersResponse provisionedPassesDatasCount]
  -[NPKProtoProvisionHomeKeyPassForSerialNumbersResponse clearProvisionedPassesDatas]
  -[NPKProtoProvisionHomeKeyPassForSerialNumbersResponse provisionedPassesDataAtIndex:]
  -[NPKProtoProvisionHomeKeyPassForSerialNumbersResponse provisionedPassesDatas]
  -[NPKProtoProvisionHomeKeyPassForSerialNumbersResponse setProvisionedPassesDatas:]


NPKProtoStandalonePaymentProvisioningMethodMetadata : PBCodable <NSCopying>
 @property  BOOL hasProductIdentifier
 @property  NSString *productIdentifier
 @property  BOOL hasCurrency
 @property  NSString *currency
 @property  BOOL hasDepositAmount
 @property  NSString *depositAmount
 @property  BOOL hasMinLoadedBalance
 @property  NSString *minLoadedBalance
 @property  BOOL hasMaxLoadedBalance
 @property  NSString *maxLoadedBalance
 @property  NSMutableArray *requiredFields
 @property  BOOL hasReaderModeMetadataJson
 @property  NSString *readerModeMetadataJson
 @property  BOOL hasDigitalIssuanceMetadata
 @property  NPKProtoStandalonePaymentDigitalIssuanceMetadata *digitalIssuanceMetadata
 @property  BOOL hasReaderModeResourcesJson
 @property  NSString *readerModeResourcesJson
 @property  BOOL hasMinimumReaderModeBalance
 @property  NSString *minimumReaderModeBalance

  // class methods
  +[NPKProtoStandalonePaymentProvisioningMethodMetadata requiredFieldsType]

  // instance methods
  -[NPKProtoStandalonePaymentProvisioningMethodMetadata mergeFrom:]
  -[NPKProtoStandalonePaymentProvisioningMethodMetadata setRequiredFields:]
  -[NPKProtoStandalonePaymentProvisioningMethodMetadata .cxx_destruct]
  -[NPKProtoStandalonePaymentProvisioningMethodMetadata setProductIdentifier:]
  -[NPKProtoStandalonePaymentProvisioningMethodMetadata dictionaryRepresentation]
  -[NPKProtoStandalonePaymentProvisioningMethodMetadata writeTo:]
  -[NPKProtoStandalonePaymentProvisioningMethodMetadata isEqual:]
  -[NPKProtoStandalonePaymentProvisioningMethodMetadata currency]
  -[NPKProtoStandalonePaymentProvisioningMethodMetadata copyTo:]
  -[NPKProtoStandalonePaymentProvisioningMethodMetadata readFrom:]
  -[NPKProtoStandalonePaymentProvisioningMethodMetadata hasCurrency]
  -[NPKProtoStandalonePaymentProvisioningMethodMetadata copyWithZone:]
  -[NPKProtoStandalonePaymentProvisioningMethodMetadata setCurrency:]
  -[NPKProtoStandalonePaymentProvisioningMethodMetadata depositAmount]
  -[NPKProtoStandalonePaymentProvisioningMethodMetadata minLoadedBalance]
  -[NPKProtoStandalonePaymentProvisioningMethodMetadata maxLoadedBalance]
  -[NPKProtoStandalonePaymentProvisioningMethodMetadata requiredFields]
  -[NPKProtoStandalonePaymentProvisioningMethodMetadata digitalIssuanceMetadata]
  -[NPKProtoStandalonePaymentProvisioningMethodMetadata minimumReaderModeBalance]
  -[NPKProtoStandalonePaymentProvisioningMethodMetadata productIdentifier]
  -[NPKProtoStandalonePaymentProvisioningMethodMetadata setDepositAmount:]
  -[NPKProtoStandalonePaymentProvisioningMethodMetadata setMinLoadedBalance:]
  -[NPKProtoStandalonePaymentProvisioningMethodMetadata setMaxLoadedBalance:]
  -[NPKProtoStandalonePaymentProvisioningMethodMetadata hasProductIdentifier]
  -[NPKProtoStandalonePaymentProvisioningMethodMetadata addRequiredFields:]
  -[NPKProtoStandalonePaymentProvisioningMethodMetadata setReaderModeMetadataJson:]
  -[NPKProtoStandalonePaymentProvisioningMethodMetadata setDigitalIssuanceMetadata:]
  -[NPKProtoStandalonePaymentProvisioningMethodMetadata setReaderModeResourcesJson:]
  -[NPKProtoStandalonePaymentProvisioningMethodMetadata setMinimumReaderModeBalance:]
  -[NPKProtoStandalonePaymentProvisioningMethodMetadata requiredFieldsCount]
  -[NPKProtoStandalonePaymentProvisioningMethodMetadata clearRequiredFields]
  -[NPKProtoStandalonePaymentProvisioningMethodMetadata requiredFieldsAtIndex:]
  -[NPKProtoStandalonePaymentProvisioningMethodMetadata hasDepositAmount]
  -[NPKProtoStandalonePaymentProvisioningMethodMetadata hasMinLoadedBalance]
  -[NPKProtoStandalonePaymentProvisioningMethodMetadata hasMaxLoadedBalance]
  -[NPKProtoStandalonePaymentProvisioningMethodMetadata hasReaderModeMetadataJson]
  -[NPKProtoStandalonePaymentProvisioningMethodMetadata hasDigitalIssuanceMetadata]
  -[NPKProtoStandalonePaymentProvisioningMethodMetadata hasReaderModeResourcesJson]
  -[NPKProtoStandalonePaymentProvisioningMethodMetadata hasMinimumReaderModeBalance]
  -[NPKProtoStandalonePaymentProvisioningMethodMetadata readerModeMetadataJson]
  -[NPKProtoStandalonePaymentProvisioningMethodMetadata readerModeResourcesJson]


NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdResponse : PBCodable <NSCopying>
 @property  NSMutableArray *attestations
 @property  BOOL hasAuthorization
 @property  NSData *authorization
 @property  BOOL hasErrorData
 @property  NSData *errorData

  // class methods
  +[NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdResponse attestationType]

  // instance methods
  -[NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdResponse setAuthorization:]
  -[NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdResponse mergeFrom:]
  -[NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdResponse .cxx_destruct]
  -[NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdResponse dictionaryRepresentation]
  -[NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdResponse writeTo:]
  -[NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdResponse isEqual:]
  -[NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdResponse copyTo:]
  -[NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdResponse authorization]
  -[NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdResponse readFrom:]
  -[NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdResponse copyWithZone:]
  -[NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdResponse errorData]
  -[NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdResponse hasErrorData]
  -[NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdResponse setErrorData:]
  -[NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdResponse attestationsCount]
  -[NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdResponse clearAttestations]
  -[NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdResponse attestations]
  -[NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdResponse setAttestations:]
  -[NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdResponse addAttestation:]
  -[NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdResponse attestationAtIndex:]
  -[NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdResponse hasAuthorization]


NPKProtoSetPeerPaymentPreferencesRequest : PBRequest <NSCopying>
 @property  BOOL hasPeerPaymentPreferencesData
 @property  NSData *peerPaymentPreferencesData

  // instance methods
  -[NPKProtoSetPeerPaymentPreferencesRequest mergeFrom:]
  -[NPKProtoSetPeerPaymentPreferencesRequest .cxx_destruct]
  -[NPKProtoSetPeerPaymentPreferencesRequest dictionaryRepresentation]
  -[NPKProtoSetPeerPaymentPreferencesRequest writeTo:]
  -[NPKProtoSetPeerPaymentPreferencesRequest isEqual:]
  -[NPKProtoSetPeerPaymentPreferencesRequest copyTo:]
  -[NPKProtoSetPeerPaymentPreferencesRequest readFrom:]
  -[NPKProtoSetPeerPaymentPreferencesRequest copyWithZone:]
  -[NPKProtoSetPeerPaymentPreferencesRequest setPeerPaymentPreferencesData:]
  -[NPKProtoSetPeerPaymentPreferencesRequest hasPeerPaymentPreferencesData]
  -[NPKProtoSetPeerPaymentPreferencesRequest peerPaymentPreferencesData]


NPKProtoHandleCredentialsChangeRequest : PBRequest <NSCopying>
 @property  BOOL hasPassID
 @property  NSString *passID
 @property  NSMutableArray *credentialsBytes

  // class methods
  +[NPKProtoHandleCredentialsChangeRequest credentialsBytesType]

  // instance methods
  -[NPKProtoHandleCredentialsChangeRequest mergeFrom:]
  -[NPKProtoHandleCredentialsChangeRequest passID]
  -[NPKProtoHandleCredentialsChangeRequest .cxx_destruct]
  -[NPKProtoHandleCredentialsChangeRequest dictionaryRepresentation]
  -[NPKProtoHandleCredentialsChangeRequest writeTo:]
  -[NPKProtoHandleCredentialsChangeRequest isEqual:]
  -[NPKProtoHandleCredentialsChangeRequest copyTo:]
  -[NPKProtoHandleCredentialsChangeRequest readFrom:]
  -[NPKProtoHandleCredentialsChangeRequest setPassID:]
  -[NPKProtoHandleCredentialsChangeRequest hasPassID]
  -[NPKProtoHandleCredentialsChangeRequest copyWithZone:]
  -[NPKProtoHandleCredentialsChangeRequest addCredentialsBytes:]
  -[NPKProtoHandleCredentialsChangeRequest credentialsBytesCount]
  -[NPKProtoHandleCredentialsChangeRequest clearCredentialsBytes]
  -[NPKProtoHandleCredentialsChangeRequest credentialsBytesAtIndex:]
  -[NPKProtoHandleCredentialsChangeRequest credentialsBytes]
  -[NPKProtoHandleCredentialsChangeRequest setCredentialsBytes:]


NPKPaymentWebServiceCompanionTargetDevice : NSObject <IDSServiceDelegate, NPKCompanionPasscodeChangeCoordinatorDelegate, PKPaymentWebServiceTargetDeviceProtocol, PKPaymentWebServiceArchiver>
 @property  unsigned long context
 @property  IDSService *provisioningService
 @property  NPKCompanionAgentConnection *companionAgentConnection
 @property  NSMutableDictionary *outstandingRequests
 @property  NSObject<OS_dispatch_queue> *internalQueue
 @property  NSObject<OS_dispatch_queue> *responseQueue
 @property  NRActiveDeviceAssertion *provisioningActiveDeviceAssertion
 @property  NPKTargetDeviceAssertionManager *remoteDeviceAssertionManager
 @property  NPKTapToRadarManager *manager
 @property  <NPKCompanionPasscodeChangeCoordinatorProtocol> *passcodeChangeCoordinator
 @property  id passcodeUpgradeFlowController
 @property  NPKSubcredentialInvitationCoordinator *subcredentialInvitationCoordinator
 @property  PUConnection *passcodeConnection
 @property  <NPKPaymentWebServiceCompanionTargetDeviceDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NPKPaymentWebServiceCompanionTargetDevice bridgedClientInfoHTTPHeader]

  // instance methods
  -[NPKPaymentWebServiceCompanionTargetDevice service:account:identifier:didSendWithSuccess:error:]
  -[NPKPaymentWebServiceCompanionTargetDevice service:account:incomingUnhandledProtobuf:fromID:context:]
  -[NPKPaymentWebServiceCompanionTargetDevice service:activeAccountsChanged:]
  -[NPKPaymentWebServiceCompanionTargetDevice consistencyCheck]
  -[NPKPaymentWebServiceCompanionTargetDevice removeExpressPassWithUniqueIdentifier:completion:]
  -[NPKPaymentWebServiceCompanionTargetDevice service:devicesChanged:]
  -[NPKPaymentWebServiceCompanionTargetDevice paymentWebService:updateAccountWithIdentifier:completion:]
  -[NPKPaymentWebServiceCompanionTargetDevice requestPasscodeUpgradeForPasscodeUpgradeFlowController:withVisibleViewController:completion:]
  -[NPKPaymentWebServiceCompanionTargetDevice exitPasscodeUpgradeForPasscodeUpgradeFlowController:withShouldContinue:error:]
  -[NPKPaymentWebServiceCompanionTargetDevice paymentWebService:accountAttestationAnonymizationSaltWithCompletion:]
  -[NPKPaymentWebServiceCompanionTargetDevice paymentWebService:setAccountAttestationAnonymizationSalt:withCompletion:]
  -[NPKPaymentWebServiceCompanionTargetDevice paymentWebService:updateMetadataOnPass:withCredential:completion:]
  -[NPKPaymentWebServiceCompanionTargetDevice availableProductsWithCompletion:]
  -[NPKPaymentWebServiceCompanionTargetDevice osVersion]
  -[NPKPaymentWebServiceCompanionTargetDevice setInternalQueue:]
  -[NPKPaymentWebServiceCompanionTargetDevice paymentWebService:declineRelatedSharingInvitationsIfNecessary:withCompletion:]
  -[NPKPaymentWebServiceCompanionTargetDevice paymentWebService:removeSharingInvitation:withCompletion:]
  -[NPKPaymentWebServiceCompanionTargetDevice paymentWebService:canAddSecureElementPassWithConfiguration:completion:]
  -[NPKPaymentWebServiceCompanionTargetDevice paymentWebService:supportedRegionFeatureOfType:]
  -[NPKPaymentWebServiceCompanionTargetDevice paymentWebService:canAcceptInvitation:withCompletionV2:]
  -[NPKPaymentWebServiceCompanionTargetDevice paymentWebService:subcredentialInvitationsWithCompletion:]
  -[NPKPaymentWebServiceCompanionTargetDevice paymentWebService:requestSubcredentialInvitation:completion:]
  -[NPKPaymentWebServiceCompanionTargetDevice paymentWebService:acceptSubcredentialInvitationWithIdentifier:metadata:completion:]
  -[NPKPaymentWebServiceCompanionTargetDevice paymentWebService:matchingInvitationOnDevice:withTimeout:completion:]
  -[NPKPaymentWebServiceCompanionTargetDevice paymentWebService:generateTransactionKeyWithParameters:withCompletion:]
  -[NPKPaymentWebServiceCompanionTargetDevice paymentWebService:setDefaultPaymentPassUniqueIdentifier:]
  -[NPKPaymentWebServiceCompanionTargetDevice requestAndStoreExternalizedAuthWithCompletion:]
  -[NPKPaymentWebServiceCompanionTargetDevice addISO18013Blobs:cardType:completion:]
  -[NPKPaymentWebServiceCompanionTargetDevice deviceName]
  -[NPKPaymentWebServiceCompanionTargetDevice paymentWebService:passOwnershipTokenWithIdentifier:completion:]
  -[NPKPaymentWebServiceCompanionTargetDevice familyMembersWithCompletion:]
  -[NPKPaymentWebServiceCompanionTargetDevice signWithFidoKeyForRelyingParty:relyingPartyAccountHash:fidoKeyHash:challenge:publicKeyIdentifier:externalizedAuth:completion:]
  -[NPKPaymentWebServiceCompanionTargetDevice availableHomeKeyPassesWithCompletionHandler:]
  -[NPKPaymentWebServiceCompanionTargetDevice setManager:]
  -[NPKPaymentWebServiceCompanionTargetDevice setBalanceReminder:forBalance:pass:completion:]
  -[NPKPaymentWebServiceCompanionTargetDevice checkTLKsMissingWithCompletion:]
  -[NPKPaymentWebServiceCompanionTargetDevice secureElementIdentifiers]
  -[NPKPaymentWebServiceCompanionTargetDevice accountWithIdentifier:completion:]
  -[NPKPaymentWebServiceCompanionTargetDevice peerPaymentUnregisterWithCompletion:]
  -[NPKPaymentWebServiceCompanionTargetDevice archiveContext:]
  -[NPKPaymentWebServiceCompanionTargetDevice .cxx_destruct]
  -[NPKPaymentWebServiceCompanionTargetDevice appleAccountInformation]
  -[NPKPaymentWebServiceCompanionTargetDevice commutePlanReminderForCommutePlan:pass:withCompletion:]
  -[NPKPaymentWebServiceCompanionTargetDevice deviceClass]
  -[NPKPaymentWebServiceCompanionTargetDevice enforceUpgradedPasscodePolicyWithCompletion:]
  -[NPKPaymentWebServiceCompanionTargetDevice _canAddSecureElementPassWithConfiguration:completion:]
  -[NPKPaymentWebServiceCompanionTargetDevice willPassWithUniqueIdentifierAutomaticallyBecomeDefault:]
  -[NPKPaymentWebServiceCompanionTargetDevice setDelegate:]
  -[NPKPaymentWebServiceCompanionTargetDevice createFidoKeyForRelyingParty:relyingPartyAccountHash:challenge:externalizedAuth:completion:]
  -[NPKPaymentWebServiceCompanionTargetDevice provisionHomeKeyPassForSerialNumbers:completionHandler:]
  -[NPKPaymentWebServiceCompanionTargetDevice cloudStoreStatusWithCompletion:]
  -[NPKPaymentWebServiceCompanionTargetDevice featureApplicationsForAccountIdentifier:completion:]
  -[NPKPaymentWebServiceCompanionTargetDevice init]
  -[NPKPaymentWebServiceCompanionTargetDevice registerCredentialsWithIdentifiers:completion:]
  -[NPKPaymentWebServiceCompanionTargetDevice revokeCredentialsWithIdentifiers:completion:]
  -[NPKPaymentWebServiceCompanionTargetDevice startBackgroundVerificationObserverForPass:verificationMethod:]
  -[NPKPaymentWebServiceCompanionTargetDevice deviceVersion]
  -[NPKPaymentWebServiceCompanionTargetDevice outstandingRequests]
  -[NPKPaymentWebServiceCompanionTargetDevice resetApplePayManateeViewWithCompletion:]
  -[NPKPaymentWebServiceCompanionTargetDevice bridgedClientInfo]
  -[NPKPaymentWebServiceCompanionTargetDevice performProductActionRequest:completion:]
  -[NPKPaymentWebServiceCompanionTargetDevice manager]
  -[NPKPaymentWebServiceCompanionTargetDevice generateISOEncryptionCertificateForSubCredentialId:completion:]
  -[NPKPaymentWebServiceCompanionTargetDevice internalQueue]
  -[NPKPaymentWebServiceCompanionTargetDevice setOutstandingRequests:]
  -[NPKPaymentWebServiceCompanionTargetDevice renewAppleAccountWithCompletionHandler:]
  -[NPKPaymentWebServiceCompanionTargetDevice deleteKeyMaterialForSubCredentialId:]
  -[NPKPaymentWebServiceCompanionTargetDevice delegate]
  -[NPKPaymentWebServiceCompanionTargetDevice setCommutePlanReminder:forCommutePlan:pass:completion:]
  -[NPKPaymentWebServiceCompanionTargetDevice setResponseQueue:]
  -[NPKPaymentWebServiceCompanionTargetDevice supportsExpressForAutomaticSelectionTechnologyType:]
  -[NPKPaymentWebServiceCompanionTargetDevice generateSEEncryptionCertificateForSubCredentialId:completion:]
  -[NPKPaymentWebServiceCompanionTargetDevice setContext:]
  -[NPKPaymentWebServiceCompanionTargetDevice checkFidoKeyPresenceForRelyingParty:relyingPartyAccountHash:fidoKeyHash:completion:]
  -[NPKPaymentWebServiceCompanionTargetDevice noteProvisioningDidBegin]
  -[NPKPaymentWebServiceCompanionTargetDevice removeExpressPassesWithCardType:completion:]
  -[NPKPaymentWebServiceCompanionTargetDevice performDeviceCheckInWithCompletion:]
  -[NPKPaymentWebServiceCompanionTargetDevice noteProvisioningDidEnd]
  -[NPKPaymentWebServiceCompanionTargetDevice noteProvisioningUserInterfaceDidAppear]
  -[NPKPaymentWebServiceCompanionTargetDevice noteProvisioningUserInterfaceDidDisappear]
  -[NPKPaymentWebServiceCompanionTargetDevice conflictingExpressPassIdentifiersForPassInformation:withReferenceExpressState:completion:]
  -[NPKPaymentWebServiceCompanionTargetDevice claimSecureElementForCurrentUserWithCompletion:]
  -[NPKPaymentWebServiceCompanionTargetDevice productsWithRequest:completion:]
  -[NPKPaymentWebServiceCompanionTargetDevice startRequiringUpgradedPasscodeWithPasscodeMeetsPolicy:]
  -[NPKPaymentWebServiceCompanionTargetDevice endRequiringUpgradedPasscodeIfNecessary]
  -[NPKPaymentWebServiceCompanionTargetDevice updatedAccountsForProvisioningWithCompletion:]
  -[NPKPaymentWebServiceCompanionTargetDevice photosForFamilyMembersWithDSIDs:completion:]
  -[NPKPaymentWebServiceCompanionTargetDevice triggerCloudStoreZoneCreationForAccount:withCompletion:]
  -[NPKPaymentWebServiceCompanionTargetDevice areUnifiedAccessPassesSupported]
  -[NPKPaymentWebServiceCompanionTargetDevice archiveBackgroundContext:]
  -[NPKPaymentWebServiceCompanionTargetDevice performDeviceRegistrationForReason:brokerURL:completion:]
  -[NPKPaymentWebServiceCompanionTargetDevice paymentWebServiceDidUpdateConfiguration:]
  -[NPKPaymentWebServiceCompanionTargetDevice paymentWebService:queueConnectionToTrustedServiceManagerForPushTopic:withCompletion:]
  -[NPKPaymentWebServiceCompanionTargetDevice responseQueue]
  -[NPKPaymentWebServiceCompanionTargetDevice paymentWebService:configurationDataWithCompletionHandler:]
  -[NPKPaymentWebServiceCompanionTargetDevice paymentWebService:registrationDataWithCompletionHandler:]
  -[NPKPaymentWebServiceCompanionTargetDevice paymentWebService:deleteApplicationWithAID:]
  -[NPKPaymentWebServiceCompanionTargetDevice paymentWebService:signData:signatureEntanglementMode:withCompletionHandler:]
  -[NPKPaymentWebServiceCompanionTargetDevice paymentWebService:provisioningDataIncludingDeviceMetadata:withCompletionHandler:]
  -[NPKPaymentWebServiceCompanionTargetDevice maximumPaymentCards]
  -[NPKPaymentWebServiceCompanionTargetDevice paymentWebService:didRegisterWithRegionMap:primaryRegionTopic:]
  -[NPKPaymentWebServiceCompanionTargetDevice paymentWebService:filterVerificationChannels:]
  -[NPKPaymentWebServiceCompanionTargetDevice paymentSupportedInCurrentRegionForWebService:]
  -[NPKPaymentWebServiceCompanionTargetDevice registrationSupportedInCurrentRegionForWebService:]
  -[NPKPaymentWebServiceCompanionTargetDevice deviceDescriptionForPaymentWebService:]
  -[NPKPaymentWebServiceCompanionTargetDevice supportsAutomaticPassPresentation]
  -[NPKPaymentWebServiceCompanionTargetDevice paymentWebService:setNewAuthRandom:]
  -[NPKPaymentWebServiceCompanionTargetDevice isGymKitEnabled]
  -[NPKPaymentWebServiceCompanionTargetDevice deviceRegion]
  -[NPKPaymentWebServiceCompanionTargetDevice paymentWebService:setNewAuthRandomIfNecessaryReturningPairingState:]
  -[NPKPaymentWebServiceCompanionTargetDevice paymentWebService:hasPassesOfType:]
  -[NPKPaymentWebServiceCompanionTargetDevice paymentWebService:canProvisionPaymentPassWithPrimaryAccountIdentifier:]
  -[NPKPaymentWebServiceCompanionTargetDevice paymentWebService:validateAddPreconditionsWithCompletion:]
  -[NPKPaymentWebServiceCompanionTargetDevice paymentWebService:addPaymentPass:withCompletionHandler:]
  -[NPKPaymentWebServiceCompanionTargetDevice downloadAllPaymentPassesForPaymentWebService:]
  -[NPKPaymentWebServiceCompanionTargetDevice paymentWebService:validateTransferPreconditionsWithCompletion:]
  -[NPKPaymentWebServiceCompanionTargetDevice paymentWebService:requestPassUpgrade:pass:completion:]
  -[NPKPaymentWebServiceCompanionTargetDevice claimSecureElementForCurrentUser]
  -[NPKPaymentWebServiceCompanionTargetDevice deviceIDSIdentifier]
  -[NPKPaymentWebServiceCompanionTargetDevice secureElementOwnershipStateForCurrentUser]
  -[NPKPaymentWebServiceCompanionTargetDevice trustedDeviceEnrollmentInfoForWebService:]
  -[NPKPaymentWebServiceCompanionTargetDevice setMaximumPaymentCards:]
  -[NPKPaymentWebServiceCompanionTargetDevice noteForegroundVerificationObserverActive:]
  -[NPKPaymentWebServiceCompanionTargetDevice paymentWebService:passesOfType:]
  -[NPKPaymentWebServiceCompanionTargetDevice paymentWebService:handlePotentialExpressPass:withCompletionHandler:]
  -[NPKPaymentWebServiceCompanionTargetDevice paymentWebService:canHandlePotentialExpressPass:withCompletionHandler:]
  -[NPKPaymentWebServiceCompanionTargetDevice felicaSecureElementIsAvailable]
  -[NPKPaymentWebServiceCompanionTargetDevice supportsCredentialType:]
  -[NPKPaymentWebServiceCompanionTargetDevice paymentWebService:removePass:withCompletionHandler:]
  -[NPKPaymentWebServiceCompanionTargetDevice paymentWebServiceSupportsPeerPaymentRegistration:]
  -[NPKPaymentWebServiceCompanionTargetDevice paymentWebServiceSupportsAccounts:]
  -[NPKPaymentWebServiceCompanionTargetDevice supportedFeatureIdentifiersWithPaymentWebService:]
  -[NPKPaymentWebServiceCompanionTargetDevice supportedFeatureIdentifiersForAccountProvisioningWithPaymentWebService:]
  -[NPKPaymentWebServiceCompanionTargetDevice paymentWebService:deviceMetadataWithFields:completion:]
  -[NPKPaymentWebServiceCompanionTargetDevice context]
  -[NPKPaymentWebServiceCompanionTargetDevice provisionPassForRemoteCredentialWithType:andIdentifier:completion:]
  -[NPKPaymentWebServiceCompanionTargetDevice markAllAppletsForDeletionWithCompletion:]
  -[NPKPaymentWebServiceCompanionTargetDevice setPasscodeConnection:]
  -[NPKPaymentWebServiceCompanionTargetDevice companionAgentConnection]
  -[NPKPaymentWebServiceCompanionTargetDevice fetchRemoteDevicePasscodeStateWithCompletion:]
  -[NPKPaymentWebServiceCompanionTargetDevice passcodeConnection]
  -[NPKPaymentWebServiceCompanionTargetDevice setNewAuthRandomIfNecessaryAtBeginningOfProvisioningFlow:]
  -[NPKPaymentWebServiceCompanionTargetDevice setCompanionAgentConnection:]
  -[NPKPaymentWebServiceCompanionTargetDevice _sendProtobuf:responseExpected:extraOptions:]
  -[NPKPaymentWebServiceCompanionTargetDevice _trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:]
  -[NPKPaymentWebServiceCompanionTargetDevice updatePeerPaymentAccountWithCompletion:]
  -[NPKPaymentWebServiceCompanionTargetDevice provisionPeerPaymentPassWithCompletion:]
  -[NPKPaymentWebServiceCompanionTargetDevice initializeCloudStoreIfNecessaryWithCompletion:]
  -[NPKPaymentWebServiceCompanionTargetDevice initializeCloudStoreIfNecessaryWithHandler:]
  -[NPKPaymentWebServiceCompanionTargetDevice peerPaymentRegisterWithURL:forceReRegistration:completion:]
  -[NPKPaymentWebServiceCompanionTargetDevice setPeerPaymentPreferences:completion:]
  -[NPKPaymentWebServiceCompanionTargetDevice initWithContext:responseQueue:]
  -[NPKPaymentWebServiceCompanionTargetDevice sendWebServiceContextToWatch:]
  -[NPKPaymentWebServiceCompanionTargetDevice sendPaymentOptionsDefaultsToWatch]
  -[NPKPaymentWebServiceCompanionTargetDevice queueTSMConnectionResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice provisioningDataResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice registrationDataResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice configurationDataResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice signDataResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice secureElementGetAppletsResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice secureElementRemoveAppletsResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice setNewAuthRandomResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice didRegisterResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice dumpLogsResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice pendingRemovalResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice updatePaymentPass:]
  -[NPKPaymentWebServiceCompanionTargetDevice updatePushToken:]
  -[NPKPaymentWebServiceCompanionTargetDevice preconditionNotMet:]
  -[NPKPaymentWebServiceCompanionTargetDevice handleValueAddedServiceTransactions:]
  -[NPKPaymentWebServiceCompanionTargetDevice preferredAIDRequest:]
  -[NPKPaymentWebServiceCompanionTargetDevice preferredAIDResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice handleWebServiceContextDidChangeRequest:]
  -[NPKPaymentWebServiceCompanionTargetDevice handleWebServiceContextNeededRequest:]
  -[NPKPaymentWebServiceCompanionTargetDevice handlePaymentTransactions:]
  -[NPKPaymentWebServiceCompanionTargetDevice handleRemovedTransaction:]
  -[NPKPaymentWebServiceCompanionTargetDevice setExpressPassResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice removeExpressPassesWithCardTypeResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice removeExpressPassWithUniqueIdentifierResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice conflictingExpressPassIdentifiersForPassInformationResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice handleBalanceReminderWithBalanceAndPassRequest:]
  -[NPKPaymentWebServiceCompanionTargetDevice setBalanceReminderWithBalanceAndPassResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice setCommutePlanReminderWithCommutePlanAndPassResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice balanceReminderWithBalanceAndPassResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice commutePlanReminderWithCommutePlanAndPassResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice handleUpdatedAppletState:]
  -[NPKPaymentWebServiceCompanionTargetDevice getPairingInfoResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice handleShowPaymentSetupRequest:]
  -[NPKPaymentWebServiceCompanionTargetDevice enableServiceModeResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice handleTransactionDefaultsNeededRequest:]
  -[NPKPaymentWebServiceCompanionTargetDevice handleCompanionMigrationResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice peerPaymentRegisterResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice peerPaymentUnregisterResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice handleUpdatedPeerPaymentWebServiceContext:]
  -[NPKPaymentWebServiceCompanionTargetDevice provisionPeerPaymentPassResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice updatePeerPaymentAccountResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice setPeerPaymentPreferencesResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice triggerCloudStoreZoneCreationForAccountResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice provisionPassForRemoteCredentialWithTypeAndIdentifierResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice openURLWithRequest:]
  -[NPKPaymentWebServiceCompanionTargetDevice handlePeerPaymentTermsAndConditionsAcceptanceRequest:]
  -[NPKPaymentWebServiceCompanionTargetDevice deviceMetadataResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice updateAccountWithIdentifierResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice accountWithIdentifierResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice handleDeviceUnlockedForPendingProvisioningRequest:]
  -[NPKPaymentWebServiceCompanionTargetDevice performDeviceCheckInResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice availableProductsResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice performProductActionResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice checkTLKsMissingResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice initializeCloudStoreIfNecessaryWithHandlerResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice resetApplePayManateeViewResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice downloadAllPaymentPasses:]
  -[NPKPaymentWebServiceCompanionTargetDevice checkCompanionPeerPaymentRegistrationState:]
  -[NPKPaymentWebServiceCompanionTargetDevice initializeCloudStoreIfNecessaryResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice cloudStoreStatusResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice markAllAppletsForDeletionResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice handleBalanceChange:]
  -[NPKPaymentWebServiceCompanionTargetDevice remotePassUpgradeResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice handleEnforceUpgradedPasscodePolicyResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice handleRemoteDevicePasscodeUpgradePresentationPromptResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice handlePasscodeUpgradeFlowShouldExitRequest:]
  -[NPKPaymentWebServiceCompanionTargetDevice handleApplyRestrictionsForPasscodeUpgradeFlowControllerResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice handleRemoteDevicePasscodeStateResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice subcredentialInvitationsResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice acceptSubcredentialInvitationResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice matchingCredentialOnDeviceResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice canAddSecureElementPassWithConfigurationResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice canAcceptInvitationRequest:]
  -[NPKPaymentWebServiceCompanionTargetDevice canAcceptInvitationResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice handleAcceptSubcredentialProvisioningRequest:]
  -[NPKPaymentWebServiceCompanionTargetDevice fetchOrInitializeAccountAttestationAnonymizationSaltRequest:]
  -[NPKPaymentWebServiceCompanionTargetDevice accountAttestationAnonymizationSaltResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice setAccountAttestationAnonymizationSaltResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice requestSubcredentialInvitationResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice updateSubcredentialMetadataResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice registerCredentialsResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice revokeCredentialsResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice removeSharingInvitationResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice handleCredentialsChange:]
  -[NPKPaymentWebServiceCompanionTargetDevice declineRelatedSharingInvitationsIfNecessaryRequest:]
  -[NPKPaymentWebServiceCompanionTargetDevice declineRelatedSharingInvitationsIfNecessaryResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice photosForFamilyMembersWithDSIDsResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice featureApplicationsForAccountIdentifierResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice provisionHomeKeyPassForSerialNumbersResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice availableHomeKeyPassesResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice paymentWebServiceRegisterResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice createFidoKeyResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice checkFidoKeyResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice signWithFidoKeyResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice generateISOEncryptionCertificateForSubCredentialIdResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice requestAndStoreExternalizedAuthWithCompletionResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice generateTransactionKeyWithParametersResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice generateSEEncryptionCertificateForSubCredentialIdResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice addISO18013BlobsResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice presentStandaloneTransactionForPassUniqueIdentifierResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice serviceProviderDataForPassWithUniqueIdentifierResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice paymentWebServiceOwnershipTokenResponse:]
  -[NPKPaymentWebServiceCompanionTargetDevice setProvisioningService:]
  -[NPKPaymentWebServiceCompanionTargetDevice _acquireAssertionOfType:]
  -[NPKPaymentWebServiceCompanionTargetDevice _invalidateAssertionOfType:]
  -[NPKPaymentWebServiceCompanionTargetDevice provisioningActiveDeviceAssertion]
  -[NPKPaymentWebServiceCompanionTargetDevice setProvisioningActiveDeviceAssertion:]
  -[NPKPaymentWebServiceCompanionTargetDevice _sendProtobuf:responseExpected:]
  -[NPKPaymentWebServiceCompanionTargetDevice _getPairingInfoAndSetAuthRandomIfNotPaired:completion:]
  -[NPKPaymentWebServiceCompanionTargetDevice _setNewAuthRandomIfNecessaryReturningPairingState:]
  -[NPKPaymentWebServiceCompanionTargetDevice _setNewAuthRandomReturningPairingState:]
  -[NPKPaymentWebServiceCompanionTargetDevice _serialNumbersOfAllPairedDevices]
  -[NPKPaymentWebServiceCompanionTargetDevice _paymentWebService:registrationDataWithAuthToken:completionHandler:]
  -[NPKPaymentWebServiceCompanionTargetDevice _supportedRegionsForWebService:]
  -[NPKPaymentWebServiceCompanionTargetDevice _supportsFeaturesForWebService:]
  -[NPKPaymentWebServiceCompanionTargetDevice removeAIDsFromSecureElement:withCompletion:]
  -[NPKPaymentWebServiceCompanionTargetDevice provisioningService]
  -[NPKPaymentWebServiceCompanionTargetDevice _expressPassesInformationFromDataArray:]
  -[NPKPaymentWebServiceCompanionTargetDevice _deviceSupportedFeatureIdentifiers]
  -[NPKPaymentWebServiceCompanionTargetDevice _upgradeExpressAutomaticSelectionCriteriaRequestForPass:]
  -[NPKPaymentWebServiceCompanionTargetDevice _expressPassInformationWithPass:upgradeRequst:]
  -[NPKPaymentWebServiceCompanionTargetDevice deviceSupportMultipleExpressPasses]
  -[NPKPaymentWebServiceCompanionTargetDevice _multipleExpressTransitPassPaymentWebService:handlePotentialExpressPassInformation:upgradeRequest:pass:withCompletionHandler:]
  -[NPKPaymentWebServiceCompanionTargetDevice _singleExpressTransitPassPaymentWebService:handlePotentialExpressPassInformation:withCompletionHandler:]
  -[NPKPaymentWebServiceCompanionTargetDevice _categoryIdentifierForPass:]
  -[NPKPaymentWebServiceCompanionTargetDevice _expressModesFromExpressPassesInformation:]
  -[NPKPaymentWebServiceCompanionTargetDevice remotePassUpgradeWithRequest:pass:requireAuthorization:notifyUserOnPairedDevice:updateBlock:]
  -[NPKPaymentWebServiceCompanionTargetDevice setExpressWithPassInformation:requestAuthorization:completion:]
  -[NPKPaymentWebServiceCompanionTargetDevice _upgradeExpressAutomaticSelectionCriteriaRequestForPass:deviceClass:OSVersion:SEID:]
  -[NPKPaymentWebServiceCompanionTargetDevice setPasscodeUpgradeFlowController:]
  -[NPKPaymentWebServiceCompanionTargetDevice passcodeChangeCoordinator]
  -[NPKPaymentWebServiceCompanionTargetDevice setPasscodeChangeCoordinator:]
  -[NPKPaymentWebServiceCompanionTargetDevice _sendProtobuf:responseExpected:extraOptions:priority:]
  -[NPKPaymentWebServiceCompanionTargetDevice _isSubcredentialProvisioningSupportedOverUWB]
  -[NPKPaymentWebServiceCompanionTargetDevice _deviceIsConnected]
  -[NPKPaymentWebServiceCompanionTargetDevice _isSubcredentialProvisioningSupported]
  -[NPKPaymentWebServiceCompanionTargetDevice subcredentialInvitationCoordinator]
  -[NPKPaymentWebServiceCompanionTargetDevice _sendProtobuf:responseIdentifier:]
  -[NPKPaymentWebServiceCompanionTargetDevice _paymentWebService:presentStandaloneTransaction:forPassUniqueIdentifier:validUntilDate:completion:]
  -[NPKPaymentWebServiceCompanionTargetDevice _isHomeKeyProvisioningSupported]
  -[NPKPaymentWebServiceCompanionTargetDevice _isUnifiedAccessProvisioningSupported]
  -[NPKPaymentWebServiceCompanionTargetDevice presentRemoteDevicePasscodeUpgradePromptForChangeType:completion:]
  -[NPKPaymentWebServiceCompanionTargetDevice dismissRemoteDevicePasscodeUpgradePromptWithCompletion:]
  -[NPKPaymentWebServiceCompanionTargetDevice remoteDeviceAssertionManager]
  -[NPKPaymentWebServiceCompanionTargetDevice passcodeUpgradeFlowController]
  -[NPKPaymentWebServiceCompanionTargetDevice passcodeChangeCoordinator:remoteDeviceShouldInitiatePasscodeChangeForType:completion:]
  -[NPKPaymentWebServiceCompanionTargetDevice passcodeChangeCoordinator:remoteDeviceShouldCancelPasscodeChangeWithCompletion:]
  -[NPKPaymentWebServiceCompanionTargetDevice passcodeChangeCoordinator:checkRemoteDeviceLockStateWithCompletion:]
  -[NPKPaymentWebServiceCompanionTargetDevice paymentWebService:validateAddBiometricPassPreconditionsWithCompletion:]
  -[NPKPaymentWebServiceCompanionTargetDevice paymentWebService:signData:withCompletionHandler:]
  -[NPKPaymentWebServiceCompanionTargetDevice paymentWebService:didRegisterWithRegionMap:]
  -[NPKPaymentWebServiceCompanionTargetDevice secureElementAppletsWithCompletion:]
  -[NPKPaymentWebServiceCompanionTargetDevice dumpLogsWithCompletion:]
  -[NPKPaymentWebServiceCompanionTargetDevice handlePendingRemovalOfPaymentPass:uniqueID:completion:]
  -[NPKPaymentWebServiceCompanionTargetDevice handlePreferredAID:forPassWithUniqueID:completion:]
  -[NPKPaymentWebServiceCompanionTargetDevice retrieveTransactionsForPassWithUniqueID:]
  -[NPKPaymentWebServiceCompanionTargetDevice handleDeletePaymentTransactionWithIdentifier:passUniqueIdentifier:]
  -[NPKPaymentWebServiceCompanionTargetDevice conflictingExpressPassIdentifiersForPassInformation:completion:]
  -[NPKPaymentWebServiceCompanionTargetDevice balanceReminderForBalance:pass:completion:]
  -[NPKPaymentWebServiceCompanionTargetDevice cancelOutstandingSetDefaultExpressPassRequestsWithExpressMode:]
  -[NPKPaymentWebServiceCompanionTargetDevice enableServiceModeForPassWithUniqueIdentifier:completion:]
  -[NPKPaymentWebServiceCompanionTargetDevice cancelOutstandingEnableServiceModeRequests]
  -[NPKPaymentWebServiceCompanionTargetDevice cancelOutstandingRemotePassUpdateRequest:pass:]
  -[NPKPaymentWebServiceCompanionTargetDevice handleCompanionMigrationWithCompletion:]
  -[NPKPaymentWebServiceCompanionTargetDevice handleCompanionPeerPaymentRegistration]
  -[NPKPaymentWebServiceCompanionTargetDevice handleCompanioniCloudSignout]
  -[NPKPaymentWebServiceCompanionTargetDevice paymentWebService:presentStandaloneTransaction:forPassUniqueIdentifier:completion:]
  -[NPKPaymentWebServiceCompanionTargetDevice paymentWebService:pauseRangingForPairedReaderIdentifier:durationInSeconds:]
  -[NPKPaymentWebServiceCompanionTargetDevice paymentWebService:resumeRangingForPairedReaderIdentifier:]
  -[NPKPaymentWebServiceCompanionTargetDevice requestAutomaticProvisioningForCompanionPaymentPass:]
  -[NPKPaymentWebServiceCompanionTargetDevice serviceProviderDataForPassWithUniqueIdentifier:completion:]
  -[NPKPaymentWebServiceCompanionTargetDevice deviceSupportTransitReminderSetting]
  -[NPKPaymentWebServiceCompanionTargetDevice _statusUpdaterWithResponseClass:type:responseIdentifier:]
  -[NPKPaymentWebServiceCompanionTargetDevice setRemoteDeviceAssertionManager:]
  -[NPKPaymentWebServiceCompanionTargetDevice setSubcredentialInvitationCoordinator:]


NPKProtoHandleValueAddedServiceTransactionsRequest : PBRequest <NSCopying>
 @property  NSMutableArray *transactionsBytes
 @property  NSMutableArray *transactionPassIDs

  // class methods
  +[NPKProtoHandleValueAddedServiceTransactionsRequest transactionsBytesType]
  +[NPKProtoHandleValueAddedServiceTransactionsRequest transactionPassIDsType]

  // instance methods
  -[NPKProtoHandleValueAddedServiceTransactionsRequest mergeFrom:]
  -[NPKProtoHandleValueAddedServiceTransactionsRequest .cxx_destruct]
  -[NPKProtoHandleValueAddedServiceTransactionsRequest dictionaryRepresentation]
  -[NPKProtoHandleValueAddedServiceTransactionsRequest writeTo:]
  -[NPKProtoHandleValueAddedServiceTransactionsRequest isEqual:]
  -[NPKProtoHandleValueAddedServiceTransactionsRequest copyTo:]
  -[NPKProtoHandleValueAddedServiceTransactionsRequest readFrom:]
  -[NPKProtoHandleValueAddedServiceTransactionsRequest copyWithZone:]
  -[NPKProtoHandleValueAddedServiceTransactionsRequest addTransactionsBytes:]
  -[NPKProtoHandleValueAddedServiceTransactionsRequest addTransactionPassIDs:]
  -[NPKProtoHandleValueAddedServiceTransactionsRequest transactionsBytesCount]
  -[NPKProtoHandleValueAddedServiceTransactionsRequest clearTransactionsBytes]
  -[NPKProtoHandleValueAddedServiceTransactionsRequest transactionsBytesAtIndex:]
  -[NPKProtoHandleValueAddedServiceTransactionsRequest transactionPassIDsCount]
  -[NPKProtoHandleValueAddedServiceTransactionsRequest clearTransactionPassIDs]
  -[NPKProtoHandleValueAddedServiceTransactionsRequest transactionPassIDsAtIndex:]
  -[NPKProtoHandleValueAddedServiceTransactionsRequest transactionsBytes]
  -[NPKProtoHandleValueAddedServiceTransactionsRequest setTransactionsBytes:]
  -[NPKProtoHandleValueAddedServiceTransactionsRequest transactionPassIDs]
  -[NPKProtoHandleValueAddedServiceTransactionsRequest setTransactionPassIDs:]


NPKIDVRemoteDeviceProtoNonceForAuthorizationTokenRequest : PBRequest <NSCopying>
  // instance methods
  -[NPKIDVRemoteDeviceProtoNonceForAuthorizationTokenRequest mergeFrom:]
  -[NPKIDVRemoteDeviceProtoNonceForAuthorizationTokenRequest dictionaryRepresentation]
  -[NPKIDVRemoteDeviceProtoNonceForAuthorizationTokenRequest writeTo:]
  -[NPKIDVRemoteDeviceProtoNonceForAuthorizationTokenRequest isEqual:]
  -[NPKIDVRemoteDeviceProtoNonceForAuthorizationTokenRequest copyTo:]
  -[NPKIDVRemoteDeviceProtoNonceForAuthorizationTokenRequest readFrom:]
  -[NPKIDVRemoteDeviceProtoNonceForAuthorizationTokenRequest copyWithZone:]


NPKProtoStandalonePaymentCredentialUnion : PBCodable <NSCopying>
 @property  BOOL hasFlowIdentifier
 @property  NSString *flowIdentifier
 @property  BOOL hasRemoteCredential
 @property  NPKProtoStandalonePaymentRemoteCredential *remoteCredential
 @property  BOOL hasCreditAccountCredential
 @property  NPKProtoStandaloneCreditAccountCredential *creditAccountCredential

  // instance methods
  -[NPKProtoStandalonePaymentCredentialUnion mergeFrom:]
  -[NPKProtoStandalonePaymentCredentialUnion .cxx_destruct]
  -[NPKProtoStandalonePaymentCredentialUnion dictionaryRepresentation]
  -[NPKProtoStandalonePaymentCredentialUnion flowIdentifier]
  -[NPKProtoStandalonePaymentCredentialUnion writeTo:]
  -[NPKProtoStandalonePaymentCredentialUnion isEqual:]
  -[NPKProtoStandalonePaymentCredentialUnion copyTo:]
  -[NPKProtoStandalonePaymentCredentialUnion setRemoteCredential:]
  -[NPKProtoStandalonePaymentCredentialUnion readFrom:]
  -[NPKProtoStandalonePaymentCredentialUnion remoteCredential]
  -[NPKProtoStandalonePaymentCredentialUnion copyWithZone:]
  -[NPKProtoStandalonePaymentCredentialUnion setFlowIdentifier:]
  -[NPKProtoStandalonePaymentCredentialUnion hasRemoteCredential]
  -[NPKProtoStandalonePaymentCredentialUnion setCreditAccountCredential:]
  -[NPKProtoStandalonePaymentCredentialUnion hasFlowIdentifier]
  -[NPKProtoStandalonePaymentCredentialUnion hasCreditAccountCredential]
  -[NPKProtoStandalonePaymentCredentialUnion creditAccountCredential]


NPKProtoSecureElementSetNewAuthRandomRequest : PBRequest <NSCopying>
  // instance methods
  -[NPKProtoSecureElementSetNewAuthRandomRequest mergeFrom:]
  -[NPKProtoSecureElementSetNewAuthRandomRequest dictionaryRepresentation]
  -[NPKProtoSecureElementSetNewAuthRandomRequest writeTo:]
  -[NPKProtoSecureElementSetNewAuthRandomRequest isEqual:]
  -[NPKProtoSecureElementSetNewAuthRandomRequest copyTo:]
  -[NPKProtoSecureElementSetNewAuthRandomRequest readFrom:]
  -[NPKProtoSecureElementSetNewAuthRandomRequest copyWithZone:]


NPKUserNotificationCenter : NSObject <UNUserNotificationCenterDelegatePrivate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NPKUserNotificationCenter sharedInstance]

  // instance methods
  -[NPKUserNotificationCenter .cxx_destruct]
  -[NPKUserNotificationCenter init]
  -[NPKUserNotificationCenter userNotificationCenter:didChangeSettings:]
  -[NPKUserNotificationCenter requestAuthorizationWithCompletion:]
  -[NPKUserNotificationCenter initWithNotificationBundleIdentifier:]
  -[NPKUserNotificationCenter fetchAuthorizationStatusWithCompletion:]
  -[NPKUserNotificationCenter _requestNotificationAuthorizationWithPreconditionCheck:completion:]
  -[NPKUserNotificationCenter _addNotificationWithNotificationIdentifier:title:body:categoryIdentifier:userInfo:suppressed:completion:]
  -[NPKUserNotificationCenter _requestWithNotificationIdentifier:title:body:categoryIdentifier:userInfo:suppressed:]
  -[NPKUserNotificationCenter _requestNotificationAuthorizationWithOptions:completion:]
  -[NPKUserNotificationCenter requestAuthorizationIfNecessaryWithCompletion:]
  -[NPKUserNotificationCenter setNotificationCategoryWithIdentifier:intentIdentifier:actions:options:]
  -[NPKUserNotificationCenter addNotification:completion:]


NPKProtoStandalonePaymentSetupProduct : PBCodable <NSCopying>
 @property  BOOL hasDisplayName
 @property  NSString *displayName
 @property  NSMutableArray *regions
 @property  BOOL hasProductIdentifier
 @property  NSString *productIdentifier
 @property  BOOL hasPartnerIdentifier
 @property  NSString *partnerIdentifier
 @property  BOOL hasPartnerName
 @property  NSString *partnerName
 @property  NSMutableArray *requiredFields
 @property  NSMutableArray *supportedProtocols
 @property  BOOL hasTermsURL
 @property  NSString *termsURL
 @property  BOOL hasSupportedProvisioningMethods
 @property  long long supportedProvisioningMethods
 @property  BOOL hasReaderModeMetadataJson
 @property  NSString *readerModeMetadataJson
 @property  BOOL hasFlags
 @property  long long flags
 @property  BOOL hasHsa2Requirement
 @property  long long hsa2Requirement
 @property  BOOL hasImageAssetURLs
 @property  NPKProtoStandalonePaymentSetupProductImageAssetURLs *imageAssetURLs
 @property  BOOL hasSuppressPendingPurchases
 @property  BOOL suppressPendingPurchases
 @property  NSMutableArray *paymentOptions
 @property  NSMutableArray *requestedProvisioningMethods

  // class methods
  +[NPKProtoStandalonePaymentSetupProduct regionsType]
  +[NPKProtoStandalonePaymentSetupProduct requiredFieldsType]
  +[NPKProtoStandalonePaymentSetupProduct supportedProtocolsType]
  +[NPKProtoStandalonePaymentSetupProduct paymentOptionsType]
  +[NPKProtoStandalonePaymentSetupProduct requestedProvisioningMethodsType]

  // instance methods
  -[NPKProtoStandalonePaymentSetupProduct displayName]
  -[NPKProtoStandalonePaymentSetupProduct setFlags:]
  -[NPKProtoStandalonePaymentSetupProduct mergeFrom:]
  -[NPKProtoStandalonePaymentSetupProduct regionsCount]
  -[NPKProtoStandalonePaymentSetupProduct termsURL]
  -[NPKProtoStandalonePaymentSetupProduct regions]
  -[NPKProtoStandalonePaymentSetupProduct setTermsURL:]
  -[NPKProtoStandalonePaymentSetupProduct setRequiredFields:]
  -[NPKProtoStandalonePaymentSetupProduct .cxx_destruct]
  -[NPKProtoStandalonePaymentSetupProduct clearRegions]
  -[NPKProtoStandalonePaymentSetupProduct setRegions:]
  -[NPKProtoStandalonePaymentSetupProduct setProductIdentifier:]
  -[NPKProtoStandalonePaymentSetupProduct dictionaryRepresentation]
  -[NPKProtoStandalonePaymentSetupProduct writeTo:]
  -[NPKProtoStandalonePaymentSetupProduct hasFlags]
  -[NPKProtoStandalonePaymentSetupProduct supportedProtocols]
  -[NPKProtoStandalonePaymentSetupProduct paymentOptions]
  -[NPKProtoStandalonePaymentSetupProduct suppressPendingPurchases]
  -[NPKProtoStandalonePaymentSetupProduct hasPartnerIdentifier]
  -[NPKProtoStandalonePaymentSetupProduct hasDisplayName]
  -[NPKProtoStandalonePaymentSetupProduct partnerName]
  -[NPKProtoStandalonePaymentSetupProduct setHasFlags:]
  -[NPKProtoStandalonePaymentSetupProduct isEqual:]
  -[NPKProtoStandalonePaymentSetupProduct copyTo:]
  -[NPKProtoStandalonePaymentSetupProduct readFrom:]
  -[NPKProtoStandalonePaymentSetupProduct setDisplayName:]
  -[NPKProtoStandalonePaymentSetupProduct regionsAtIndex:]
  -[NPKProtoStandalonePaymentSetupProduct imageAssetURLs]
  -[NPKProtoStandalonePaymentSetupProduct setImageAssetURLs:]
  -[NPKProtoStandalonePaymentSetupProduct hsa2Requirement]
  -[NPKProtoStandalonePaymentSetupProduct setSupportedProvisioningMethods:]
  -[NPKProtoStandalonePaymentSetupProduct setHsa2Requirement:]
  -[NPKProtoStandalonePaymentSetupProduct partnerIdentifier]
  -[NPKProtoStandalonePaymentSetupProduct requestedProvisioningMethods]
  -[NPKProtoStandalonePaymentSetupProduct setRequestedProvisioningMethods:]
  -[NPKProtoStandalonePaymentSetupProduct supportedProvisioningMethods]
  -[NPKProtoStandalonePaymentSetupProduct flags]
  -[NPKProtoStandalonePaymentSetupProduct setPartnerIdentifier:]
  -[NPKProtoStandalonePaymentSetupProduct addRegions:]
  -[NPKProtoStandalonePaymentSetupProduct copyWithZone:]
  -[NPKProtoStandalonePaymentSetupProduct setSupportedProtocols:]
  -[NPKProtoStandalonePaymentSetupProduct requiredFields]
  -[NPKProtoStandalonePaymentSetupProduct productIdentifier]
  -[NPKProtoStandalonePaymentSetupProduct hasProductIdentifier]
  -[NPKProtoStandalonePaymentSetupProduct hasTermsURL]
  -[NPKProtoStandalonePaymentSetupProduct setPartnerName:]
  -[NPKProtoStandalonePaymentSetupProduct addRequiredFields:]
  -[NPKProtoStandalonePaymentSetupProduct addSupportedProtocols:]
  -[NPKProtoStandalonePaymentSetupProduct setReaderModeMetadataJson:]
  -[NPKProtoStandalonePaymentSetupProduct setSuppressPendingPurchases:]
  -[NPKProtoStandalonePaymentSetupProduct addPaymentOptions:]
  -[NPKProtoStandalonePaymentSetupProduct addRequestedProvisioningMethods:]
  -[NPKProtoStandalonePaymentSetupProduct requiredFieldsCount]
  -[NPKProtoStandalonePaymentSetupProduct clearRequiredFields]
  -[NPKProtoStandalonePaymentSetupProduct requiredFieldsAtIndex:]
  -[NPKProtoStandalonePaymentSetupProduct hasReaderModeMetadataJson]
  -[NPKProtoStandalonePaymentSetupProduct readerModeMetadataJson]
  -[NPKProtoStandalonePaymentSetupProduct supportedProtocolsCount]
  -[NPKProtoStandalonePaymentSetupProduct clearSupportedProtocols]
  -[NPKProtoStandalonePaymentSetupProduct supportedProtocolsAtIndex:]
  -[NPKProtoStandalonePaymentSetupProduct paymentOptionsCount]
  -[NPKProtoStandalonePaymentSetupProduct clearPaymentOptions]
  -[NPKProtoStandalonePaymentSetupProduct paymentOptionsAtIndex:]
  -[NPKProtoStandalonePaymentSetupProduct requestedProvisioningMethodsCount]
  -[NPKProtoStandalonePaymentSetupProduct clearRequestedProvisioningMethods]
  -[NPKProtoStandalonePaymentSetupProduct requestedProvisioningMethodsAtIndex:]
  -[NPKProtoStandalonePaymentSetupProduct hasPartnerName]
  -[NPKProtoStandalonePaymentSetupProduct setHasSupportedProvisioningMethods:]
  -[NPKProtoStandalonePaymentSetupProduct hasSupportedProvisioningMethods]
  -[NPKProtoStandalonePaymentSetupProduct setHasHsa2Requirement:]
  -[NPKProtoStandalonePaymentSetupProduct hasHsa2Requirement]
  -[NPKProtoStandalonePaymentSetupProduct hasImageAssetURLs]
  -[NPKProtoStandalonePaymentSetupProduct setHasSuppressPendingPurchases:]
  -[NPKProtoStandalonePaymentSetupProduct hasSuppressPendingPurchases]
  -[NPKProtoStandalonePaymentSetupProduct setPaymentOptions:]


NPKProtoStandalonePaymentProvisioningFlowAcceptTermsRequest : PBRequest <NSCopying>
 @property  NPKProtoStandaloneRequestHeader *requestHeader

  // instance methods
  -[NPKProtoStandalonePaymentProvisioningFlowAcceptTermsRequest mergeFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowAcceptTermsRequest .cxx_destruct]
  -[NPKProtoStandalonePaymentProvisioningFlowAcceptTermsRequest dictionaryRepresentation]
  -[NPKProtoStandalonePaymentProvisioningFlowAcceptTermsRequest writeTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowAcceptTermsRequest isEqual:]
  -[NPKProtoStandalonePaymentProvisioningFlowAcceptTermsRequest copyTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowAcceptTermsRequest readFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowAcceptTermsRequest copyWithZone:]
  -[NPKProtoStandalonePaymentProvisioningFlowAcceptTermsRequest requestHeader]
  -[NPKProtoStandalonePaymentProvisioningFlowAcceptTermsRequest setRequestHeader:]


NPKProtoCreateFidoKeyRequest : PBRequest <NSCopying>
 @property  BOOL hasRelyingParty
 @property  NSString *relyingParty
 @property  BOOL hasRelyingPartyAccountHash
 @property  NSString *relyingPartyAccountHash
 @property  BOOL hasChallenge
 @property  NSData *challenge
 @property  BOOL hasExternalizedAuth
 @property  NSData *externalizedAuth

  // instance methods
  -[NPKProtoCreateFidoKeyRequest mergeFrom:]
  -[NPKProtoCreateFidoKeyRequest .cxx_destruct]
  -[NPKProtoCreateFidoKeyRequest dictionaryRepresentation]
  -[NPKProtoCreateFidoKeyRequest writeTo:]
  -[NPKProtoCreateFidoKeyRequest isEqual:]
  -[NPKProtoCreateFidoKeyRequest copyTo:]
  -[NPKProtoCreateFidoKeyRequest readFrom:]
  -[NPKProtoCreateFidoKeyRequest hasExternalizedAuth]
  -[NPKProtoCreateFidoKeyRequest externalizedAuth]
  -[NPKProtoCreateFidoKeyRequest setExternalizedAuth:]
  -[NPKProtoCreateFidoKeyRequest challenge]
  -[NPKProtoCreateFidoKeyRequest setRelyingParty:]
  -[NPKProtoCreateFidoKeyRequest relyingParty]
  -[NPKProtoCreateFidoKeyRequest copyWithZone:]
  -[NPKProtoCreateFidoKeyRequest setChallenge:]
  -[NPKProtoCreateFidoKeyRequest setRelyingPartyAccountHash:]
  -[NPKProtoCreateFidoKeyRequest hasRelyingParty]
  -[NPKProtoCreateFidoKeyRequest hasRelyingPartyAccountHash]
  -[NPKProtoCreateFidoKeyRequest relyingPartyAccountHash]
  -[NPKProtoCreateFidoKeyRequest hasChallenge]


NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationChannelsStepContext : PBCodable <NSCopying>
 @property  BOOL hasPaymentPass
 @property  NPKProtoStandalonePaymentPass *paymentPass
 @property  NSMutableArray *verificationChannels

  // class methods
  +[NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationChannelsStepContext verificationChannelsType]

  // instance methods
  -[NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationChannelsStepContext paymentPass]
  -[NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationChannelsStepContext mergeFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationChannelsStepContext .cxx_destruct]
  -[NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationChannelsStepContext dictionaryRepresentation]
  -[NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationChannelsStepContext writeTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationChannelsStepContext setPaymentPass:]
  -[NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationChannelsStepContext hasPaymentPass]
  -[NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationChannelsStepContext isEqual:]
  -[NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationChannelsStepContext copyTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationChannelsStepContext readFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationChannelsStepContext verificationChannels]
  -[NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationChannelsStepContext setVerificationChannels:]
  -[NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationChannelsStepContext copyWithZone:]
  -[NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationChannelsStepContext addVerificationChannels:]
  -[NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationChannelsStepContext verificationChannelsCount]
  -[NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationChannelsStepContext clearVerificationChannels]
  -[NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationChannelsStepContext verificationChannelsAtIndex:]


NPKProtoDeviceDidRegisterResponse : PBCodable <NSCopying>
 @property  BOOL hasPending
 @property  BOOL pending
 @property  BOOL hasSuccess
 @property  BOOL success

  // instance methods
  -[NPKProtoDeviceDidRegisterResponse setSuccess:]
  -[NPKProtoDeviceDidRegisterResponse success]
  -[NPKProtoDeviceDidRegisterResponse pending]
  -[NPKProtoDeviceDidRegisterResponse mergeFrom:]
  -[NPKProtoDeviceDidRegisterResponse setPending:]
  -[NPKProtoDeviceDidRegisterResponse hasSuccess]
  -[NPKProtoDeviceDidRegisterResponse dictionaryRepresentation]
  -[NPKProtoDeviceDidRegisterResponse writeTo:]
  -[NPKProtoDeviceDidRegisterResponse setHasSuccess:]
  -[NPKProtoDeviceDidRegisterResponse isEqual:]
  -[NPKProtoDeviceDidRegisterResponse copyTo:]
  -[NPKProtoDeviceDidRegisterResponse readFrom:]
  -[NPKProtoDeviceDidRegisterResponse copyWithZone:]
  -[NPKProtoDeviceDidRegisterResponse setHasPending:]
  -[NPKProtoDeviceDidRegisterResponse hasPending]


NPKBluetoothConnectivityCoordinator : NSObject
 @property  unsigned long bluetoothAvailableAndEnabled
 @property  <NPKBluetoothConnectivityCoordinatorDelegate> *delegate

  // instance methods
  -[NPKBluetoothConnectivityCoordinator .cxx_destruct]
  -[NPKBluetoothConnectivityCoordinator setDelegate:]
  -[NPKBluetoothConnectivityCoordinator init]
  -[NPKBluetoothConnectivityCoordinator isBluetoothEnabled]
  -[NPKBluetoothConnectivityCoordinator delegate]
  -[NPKBluetoothConnectivityCoordinator bluetoothAvailableAndEnabled]
  -[NPKBluetoothConnectivityCoordinator setBluetoothAvailableAndEnabled:]


NPKProtoGenerateSEEncryptionCertificateForSubCredentialIdResponse : PBCodable <NSCopying>
 @property  BOOL hasCertificate
 @property  NSData *certificate
 @property  BOOL hasErrorData
 @property  NSData *errorData

  // instance methods
  -[NPKProtoGenerateSEEncryptionCertificateForSubCredentialIdResponse mergeFrom:]
  -[NPKProtoGenerateSEEncryptionCertificateForSubCredentialIdResponse hasCertificate]
  -[NPKProtoGenerateSEEncryptionCertificateForSubCredentialIdResponse .cxx_destruct]
  -[NPKProtoGenerateSEEncryptionCertificateForSubCredentialIdResponse dictionaryRepresentation]
  -[NPKProtoGenerateSEEncryptionCertificateForSubCredentialIdResponse writeTo:]
  -[NPKProtoGenerateSEEncryptionCertificateForSubCredentialIdResponse setCertificate:]
  -[NPKProtoGenerateSEEncryptionCertificateForSubCredentialIdResponse isEqual:]
  -[NPKProtoGenerateSEEncryptionCertificateForSubCredentialIdResponse copyTo:]
  -[NPKProtoGenerateSEEncryptionCertificateForSubCredentialIdResponse readFrom:]
  -[NPKProtoGenerateSEEncryptionCertificateForSubCredentialIdResponse certificate]
  -[NPKProtoGenerateSEEncryptionCertificateForSubCredentialIdResponse copyWithZone:]
  -[NPKProtoGenerateSEEncryptionCertificateForSubCredentialIdResponse errorData]
  -[NPKProtoGenerateSEEncryptionCertificateForSubCredentialIdResponse hasErrorData]
  -[NPKProtoGenerateSEEncryptionCertificateForSubCredentialIdResponse setErrorData:]


NPKProtoRemotePassUpdateResponse : PBCodable <NSCopying>
 @property  BOOL hasPending
 @property  BOOL pending
 @property  BOOL hasPass
 @property  NPKProtoPass *pass
 @property  BOOL hasErrorData
 @property  NSData *errorData
 @property  BOOL hasUpgradeStatus
 @property  int upgradeStatus
 @property  NSMutableArray *expressPassInformations

  // class methods
  +[NPKProtoRemotePassUpdateResponse expressPassInformationType]

  // instance methods
  -[NPKProtoRemotePassUpdateResponse pending]
  -[NPKProtoRemotePassUpdateResponse pass]
  -[NPKProtoRemotePassUpdateResponse mergeFrom:]
  -[NPKProtoRemotePassUpdateResponse setPending:]
  -[NPKProtoRemotePassUpdateResponse upgradeStatus]
  -[NPKProtoRemotePassUpdateResponse .cxx_destruct]
  -[NPKProtoRemotePassUpdateResponse dictionaryRepresentation]
  -[NPKProtoRemotePassUpdateResponse writeTo:]
  -[NPKProtoRemotePassUpdateResponse setPass:]
  -[NPKProtoRemotePassUpdateResponse isEqual:]
  -[NPKProtoRemotePassUpdateResponse copyTo:]
  -[NPKProtoRemotePassUpdateResponse readFrom:]
  -[NPKProtoRemotePassUpdateResponse copyWithZone:]
  -[NPKProtoRemotePassUpdateResponse errorData]
  -[NPKProtoRemotePassUpdateResponse hasPass]
  -[NPKProtoRemotePassUpdateResponse hasErrorData]
  -[NPKProtoRemotePassUpdateResponse setErrorData:]
  -[NPKProtoRemotePassUpdateResponse setHasPending:]
  -[NPKProtoRemotePassUpdateResponse hasPending]
  -[NPKProtoRemotePassUpdateResponse expressPassInformations]
  -[NPKProtoRemotePassUpdateResponse addExpressPassInformation:]
  -[NPKProtoRemotePassUpdateResponse expressPassInformationsCount]
  -[NPKProtoRemotePassUpdateResponse clearExpressPassInformations]
  -[NPKProtoRemotePassUpdateResponse expressPassInformationAtIndex:]
  -[NPKProtoRemotePassUpdateResponse setUpgradeStatus:]
  -[NPKProtoRemotePassUpdateResponse setHasUpgradeStatus:]
  -[NPKProtoRemotePassUpdateResponse hasUpgradeStatus]
  -[NPKProtoRemotePassUpdateResponse upgradeStatusAsString:]
  -[NPKProtoRemotePassUpdateResponse StringAsUpgradeStatus:]
  -[NPKProtoRemotePassUpdateResponse setExpressPassInformations:]


NPKProtoStandaloneInitializationResponse : PBCodable <NSCopying>
 @property  NPKProtoStandaloneResponseHeader *responseHeader
 @property  unsigned long supportedServerVersionsCount
 @property  ^i supportedServerVersions
 @property  BOOL hasClientInfoHTTPHeader
 @property  NSString *clientInfoHTTPHeader
 @property  BOOL hasError
 @property  NPKProtoStandaloneError *error

  // instance methods
  -[NPKProtoStandaloneInitializationResponse mergeFrom:]
  -[NPKProtoStandaloneInitializationResponse hasError]
  -[NPKProtoStandaloneInitializationResponse .cxx_destruct]
  -[NPKProtoStandaloneInitializationResponse clientInfoHTTPHeader]
  -[NPKProtoStandaloneInitializationResponse dictionaryRepresentation]
  -[NPKProtoStandaloneInitializationResponse writeTo:]
  -[NPKProtoStandaloneInitializationResponse isEqual:]
  -[NPKProtoStandaloneInitializationResponse copyTo:]
  -[NPKProtoStandaloneInitializationResponse readFrom:]
  -[NPKProtoStandaloneInitializationResponse dealloc]
  -[NPKProtoStandaloneInitializationResponse copyWithZone:]
  -[NPKProtoStandaloneInitializationResponse setError:]
  -[NPKProtoStandaloneInitializationResponse error]
  -[NPKProtoStandaloneInitializationResponse responseHeader]
  -[NPKProtoStandaloneInitializationResponse setResponseHeader:]
  -[NPKProtoStandaloneInitializationResponse supportedServerVersionsCount]
  -[NPKProtoStandaloneInitializationResponse clearSupportedServerVersions]
  -[NPKProtoStandaloneInitializationResponse supportedServerVersionsAtIndex:]
  -[NPKProtoStandaloneInitializationResponse addSupportedServerVersions:]
  -[NPKProtoStandaloneInitializationResponse setClientInfoHTTPHeader:]
  -[NPKProtoStandaloneInitializationResponse supportedServerVersions]
  -[NPKProtoStandaloneInitializationResponse setSupportedServerVersions:count:]
  -[NPKProtoStandaloneInitializationResponse supportedServerVersionsAsString:]
  -[NPKProtoStandaloneInitializationResponse StringAsSupportedServerVersions:]
  -[NPKProtoStandaloneInitializationResponse hasClientInfoHTTPHeader]


NPKProtoStandalonePaymentSetupProductPaymentOption : PBCodable <NSCopying>
 @property  BOOL hasPriority
 @property  unsigned long priority
 @property  BOOL hasCardType
 @property  long long cardType
 @property  BOOL hasSupportedProtocols
 @property  long long supportedProtocols

  // instance methods
  -[NPKProtoStandalonePaymentSetupProductPaymentOption cardType]
  -[NPKProtoStandalonePaymentSetupProductPaymentOption mergeFrom:]
  -[NPKProtoStandalonePaymentSetupProductPaymentOption dictionaryRepresentation]
  -[NPKProtoStandalonePaymentSetupProductPaymentOption writeTo:]
  -[NPKProtoStandalonePaymentSetupProductPaymentOption supportedProtocols]
  -[NPKProtoStandalonePaymentSetupProductPaymentOption setPriority:]
  -[NPKProtoStandalonePaymentSetupProductPaymentOption isEqual:]
  -[NPKProtoStandalonePaymentSetupProductPaymentOption copyTo:]
  -[NPKProtoStandalonePaymentSetupProductPaymentOption readFrom:]
  -[NPKProtoStandalonePaymentSetupProductPaymentOption priority]
  -[NPKProtoStandalonePaymentSetupProductPaymentOption setHasPriority:]
  -[NPKProtoStandalonePaymentSetupProductPaymentOption hasPriority]
  -[NPKProtoStandalonePaymentSetupProductPaymentOption setCardType:]
  -[NPKProtoStandalonePaymentSetupProductPaymentOption copyWithZone:]
  -[NPKProtoStandalonePaymentSetupProductPaymentOption setSupportedProtocols:]
  -[NPKProtoStandalonePaymentSetupProductPaymentOption hasCardType]
  -[NPKProtoStandalonePaymentSetupProductPaymentOption setHasCardType:]
  -[NPKProtoStandalonePaymentSetupProductPaymentOption setHasSupportedProtocols:]
  -[NPKProtoStandalonePaymentSetupProductPaymentOption hasSupportedProtocols]


NPKCompanionAgentConnection : NSObject <NPKCompanionClientProtocol, PKXPCServiceDelegate>
 @property  NSMutableSet *cachedUniqueIDs
 @property  NSMutableDictionary *cachedPasses
 @property  NSMutableDictionary *connectionAvailableActions
 @property  PKPaymentWebServiceContext *connectionUnavailableWebServiceContext
 @property  PKXPCService *remoteService
 @property  BOOL queueAppropriateFailedActions
 @property  BOOL hasQueuedPaymentPasses
 @property  <NPKCompanionAgentConnectionDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NPKCompanionAgentConnection isIssuerAppProvisioningSupported]
  +[NPKCompanionAgentConnection isSetupAssistantProvisioningSupported]
  +[NPKCompanionAgentConnection watchPaymentWebService]
  +[NPKCompanionAgentConnection watchPeerPaymentWebService]
  +[NPKCompanionAgentConnection watchProvisioningURL]
  +[NPKCompanionAgentConnection watchProvisioningURLForPaymentPass:]

  // instance methods
  -[NPKCompanionAgentConnection transactionSourceIdentifier:didReceiveTransaction:]
  -[NPKCompanionAgentConnection setBalanceReminder:forBalance:pass:completion:]
  -[NPKCompanionAgentConnection .cxx_destruct]
  -[NPKCompanionAgentConnection balancesForPaymentPassWithUniqueIdentifier:completion:]
  -[NPKCompanionAgentConnection commutePlanReminderForCommutePlan:pass:withCompletion:]
  -[NPKCompanionAgentConnection transactionSourceIdentifier:didRemoveTransactionWithIdentifier:]
  -[NPKCompanionAgentConnection setDelegate:]
  -[NPKCompanionAgentConnection provisionPassForAccountIdentifier:makeDefault:completion:]
  -[NPKCompanionAgentConnection remoteService:didEstablishConnection:]
  -[NPKCompanionAgentConnection init]
  -[NPKCompanionAgentConnection remoteService]
  -[NPKCompanionAgentConnection initiateLostModeExitAuthWithCompletion:]
  -[NPKCompanionAgentConnection startBackgroundVerificationObserverForPass:verificationMethod:]
  -[NPKCompanionAgentConnection transitStateWithPassUniqueIdentifier:paymentApplication:completion:]
  -[NPKCompanionAgentConnection paymentPassWithUniqueIdentifier:didUpdateWithTransitPassProperties:]
  -[NPKCompanionAgentConnection registerDeviceWithCompletion:]
  -[NPKCompanionAgentConnection remoteService:didInterruptConnection:]
  -[NPKCompanionAgentConnection setRemoteService:]
  -[NPKCompanionAgentConnection provisionIdentityPassWithPassMetadata:policyIdentifier:targetDeviceIdentifier:credentialIdentifier:attestations:completion:]
  -[NPKCompanionAgentConnection delegate]
  -[NPKCompanionAgentConnection setCommutePlanReminder:forCommutePlan:pass:completion:]
  -[NPKCompanionAgentConnection dealloc]
  -[NPKCompanionAgentConnection sharedPaymentWebServiceContext]
  -[NPKCompanionAgentConnection _clearCaches]
  -[NPKCompanionAgentConnection paymentPassWithUniqueIdentifier:didEnableTransactionService:]
  -[NPKCompanionAgentConnection willPassWithUniqueIdentifierAutomaticallyBecomeDefault:completion:]
  -[NPKCompanionAgentConnection _remoteObjectProxyWithFailureHandler:]
  -[NPKCompanionAgentConnection transactionsForTransactionSourceIdentifiers:withTransactionSource:withBackingData:startDate:endDate:orderedByDate:limit:completion:]
  -[NPKCompanionAgentConnection paymentPassWithUniqueIdentifier:didEnableMessageService:]
  -[NPKCompanionAgentConnection noteForegroundVerificationObserverActive:]
  -[NPKCompanionAgentConnection watchPaymentWebService]
  -[NPKCompanionAgentConnection provisionPassForRemoteCredentialWithType:andIdentifier:completion:]
  -[NPKCompanionAgentConnection shouldShowWatchExtensionInstallationForPaymentPass:]
  -[NPKCompanionAgentConnection beginPairedWatchInstallationOfApplicationForPaymentPass:completion:]
  -[NPKCompanionAgentConnection shouldShowWatchOfferForPaymentPass:withCompletion:]
  -[NPKCompanionAgentConnection noteWatchOfferShownForPaymentPass:]
  -[NPKCompanionAgentConnection beginProvisioningFromWatchOfferForPaymentPass:withCompletion:]
  -[NPKCompanionAgentConnection defaultCardUniqueID:]
  -[NPKCompanionAgentConnection markAllAppletsForDeletionWithCompletion:]
  -[NPKCompanionAgentConnection paymentPassWithUniqueID:synchronous:reply:]
  -[NPKCompanionAgentConnection _errorHandlerWithCompletion:]
  -[NPKCompanionAgentConnection setQueueAppropriateFailedActions:]
  -[NPKCompanionAgentConnection paymentPassUniqueIDsSynchronous:excludingDeactivated:reply:]
  -[NPKCompanionAgentConnection sharedPaymentWebServiceContextForDevice:]
  -[NPKCompanionAgentConnection sharedPeerPaymentWebServiceContextForDevice:]
  -[NPKCompanionAgentConnection peerPaymentAccountForDevice:]
  -[NPKCompanionAgentConnection setSharedPaymentWebServiceContext:forDevice:]
  -[NPKCompanionAgentConnection paymentPassUniqueIDsSynchronous:reply:]
  -[NPKCompanionAgentConnection setSharedPeerPaymentWebServiceContext:forDevice:]
  -[NPKCompanionAgentConnection updateSettings:forPassWithUniqueID:]
  -[NPKCompanionAgentConnection paymentPassesWithPrimaryAccountIdentifier:completion:]
  -[NPKCompanionAgentConnection savePaymentPass:forDevice:completion:]
  -[NPKCompanionAgentConnection removePaymentPassWithUniqueID:forDevice:waitForConfirmation:completion:]
  -[NPKCompanionAgentConnection redownloadAllPaymentPassesWithCompletion:]
  -[NPKCompanionAgentConnection handlePeerPaymentTermsAndConditionsRequestFromGizmo]
  -[NPKCompanionAgentConnection handleDeviceUnlockedForPendingProvisioningRequestFromGizmo]
  -[NPKCompanionAgentConnection setDefaultCardUniqueID:completion:]
  -[NPKCompanionAgentConnection consistencyCheckWithCompletion:]
  -[NPKCompanionAgentConnection paymentPassWithPairedTerminalIdentifier:completion:]
  -[NPKCompanionAgentConnection noteProvisioningPreflightCompleteWithSuccess:error:completion:]
  -[NPKCompanionAgentConnection paymentPassWithUniqueID:reply:]
  -[NPKCompanionAgentConnection paymentPassWithDeviceAccountIdentifier:completion:]
  -[NPKCompanionAgentConnection defaultPaymentApplicationForPassWithUniqueID:completion:]
  -[NPKCompanionAgentConnection setDefaultPaymentApplication:forPassWithUniqueID:completion:]
  -[NPKCompanionAgentConnection handlePendingUnpairingWithCompletion:]
  -[NPKCompanionAgentConnection handlePendingiCloudSignoutWithCompletion:]
  -[NPKCompanionAgentConnection balanceReminderForBalance:pass:withCompletion:]
  -[NPKCompanionAgentConnection fetchPendingTransactionForPassWithUniqueID:completion:]
  -[NPKCompanionAgentConnection markPendingTransactionAsProcessedForPassWithUniqueID:]
  -[NPKCompanionAgentConnection presentStandaloneTransaction:forPassUniqueIdentifier:completion:]
  -[NPKCompanionAgentConnection trustedDeviceEnrollmentSignatureWithAccountDSID:sessionData:handler:]
  -[NPKCompanionAgentConnection paymentPassWithUniqueIdentifier:didUpdateWithBalances:]
  -[NPKCompanionAgentConnection paymentPassWithUniqueIdentifier:didUpdateBalanceReminder:forBalance:]
  -[NPKCompanionAgentConnection paymentPassWithUniqueIdentifier:didUpdateWithCredentials:]
  -[NPKCompanionAgentConnection _handleServerPaymentPassesChanged:]
  -[NPKCompanionAgentConnection _handleDefaultCardChanged:]
  -[NPKCompanionAgentConnection _isApplePaySupportedInCurrentRegion]
  -[NPKCompanionAgentConnection _cachedUniqueIDs]
  -[NPKCompanionAgentConnection queueAppropriateFailedActions]
  -[NPKCompanionAgentConnection _remoteObjectProxySynchronize:withFailureHandler:]
  -[NPKCompanionAgentConnection _setCachedUniqueIDs:]
  -[NPKCompanionAgentConnection _cachedPassForUniqueID:]
  -[NPKCompanionAgentConnection _applyPropertiesToPass:]
  -[NPKCompanionAgentConnection _addPassToCache:]
  -[NPKCompanionAgentConnection _removePassWithUniqueIDFromCache:]
  -[NPKCompanionAgentConnection _savePaymentPass:atURL:forDevice:completion:]
  -[NPKCompanionAgentConnection _sharedPaymentWebServiceContextForDevice:withCompletion:]
  -[NPKCompanionAgentConnection _shouldShowApplePaySettingsWithCompletion:]
  -[NPKCompanionAgentConnection _shouldShowApplePaySettingsForTinkerWithCompletion:]
  -[NPKCompanionAgentConnection cachedUniqueIDs]
  -[NPKCompanionAgentConnection setCachedUniqueIDs:]
  -[NPKCompanionAgentConnection cachedPasses]
  -[NPKCompanionAgentConnection setCachedPasses:]
  -[NPKCompanionAgentConnection _invalidateCachedPassWithUniqueID:]
  -[NPKCompanionAgentConnection _installedCompanionApplicationBundleIDForPaymentPass:]
  -[NPKCompanionAgentConnection pairedWatchHasApplicationWithBundleID:]
  -[NPKCompanionAgentConnection paymentPassUniqueIDs:]
  -[NPKCompanionAgentConnection credentialedPassUniqueIDsSynchronous:reply:]
  -[NPKCompanionAgentConnection setPeerPaymentAccount:forDevice:]
  -[NPKCompanionAgentConnection shouldShowApplePaySettingsWithCompletion:]
  -[NPKCompanionAgentConnection countOfPassesSynchronous:completion:]
  -[NPKCompanionAgentConnection passesSynchronous:completion:]
  -[NPKCompanionAgentConnection deviceIDSIdentifierSynchronous:completion:]
  -[NPKCompanionAgentConnection deletePaymentTransactionWithIdentifier:fromDevice:completion:]
  -[NPKCompanionAgentConnection reloadPaymentPassesWithCompletion:]
  -[NPKCompanionAgentConnection hasQueuedPaymentPasses]
  -[NPKCompanionAgentConnection setHasQueuedPaymentPasses:]
  -[NPKCompanionAgentConnection connectionAvailableActions]
  -[NPKCompanionAgentConnection setConnectionAvailableActions:]
  -[NPKCompanionAgentConnection connectionUnavailableWebServiceContext]
  -[NPKCompanionAgentConnection setConnectionUnavailableWebServiceContext:]


NPKSecureElement : PKSecureElement
  // class methods
  +[NPKSecureElement cachedIsInFailForward]
  +[NPKSecureElement isInFailForward:]


NPKProtoStandalonePaymentProvisioningFlowPasscodeUpgradeStepContext : PBCodable <NSCopying>
  // instance methods
  -[NPKProtoStandalonePaymentProvisioningFlowPasscodeUpgradeStepContext mergeFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowPasscodeUpgradeStepContext dictionaryRepresentation]
  -[NPKProtoStandalonePaymentProvisioningFlowPasscodeUpgradeStepContext writeTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowPasscodeUpgradeStepContext isEqual:]
  -[NPKProtoStandalonePaymentProvisioningFlowPasscodeUpgradeStepContext copyTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowPasscodeUpgradeStepContext readFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowPasscodeUpgradeStepContext copyWithZone:]


NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationChannelRequest : PBRequest <NSCopying>
 @property  NPKProtoStandaloneRequestHeader *requestHeader
 @property  BOOL hasSelectedVerificationChannelIdentifier
 @property  NSString *selectedVerificationChannelIdentifier

  // instance methods
  -[NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationChannelRequest mergeFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationChannelRequest .cxx_destruct]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationChannelRequest dictionaryRepresentation]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationChannelRequest writeTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationChannelRequest isEqual:]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationChannelRequest copyTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationChannelRequest readFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationChannelRequest copyWithZone:]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationChannelRequest requestHeader]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationChannelRequest setRequestHeader:]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationChannelRequest setSelectedVerificationChannelIdentifier:]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationChannelRequest hasSelectedVerificationChannelIdentifier]
  -[NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationChannelRequest selectedVerificationChannelIdentifier]


NPKProtoDeviceMetadataWithFieldsRequest : PBRequest <NSCopying>
 @property  unsigned int metadataFields

  // instance methods
  -[NPKProtoDeviceMetadataWithFieldsRequest mergeFrom:]
  -[NPKProtoDeviceMetadataWithFieldsRequest dictionaryRepresentation]
  -[NPKProtoDeviceMetadataWithFieldsRequest writeTo:]
  -[NPKProtoDeviceMetadataWithFieldsRequest isEqual:]
  -[NPKProtoDeviceMetadataWithFieldsRequest copyTo:]
  -[NPKProtoDeviceMetadataWithFieldsRequest readFrom:]
  -[NPKProtoDeviceMetadataWithFieldsRequest copyWithZone:]
  -[NPKProtoDeviceMetadataWithFieldsRequest setMetadataFields:]
  -[NPKProtoDeviceMetadataWithFieldsRequest metadataFields]


NPKProtoCheckPasscodePolicyComplianceResponse : PBCodable <NSCopying>
 @property  BOOL hasPasscodeMeetsPolicy
 @property  BOOL passcodeMeetsPolicy
 @property  BOOL hasErrorData
 @property  NSData *errorData

  // instance methods
  -[NPKProtoCheckPasscodePolicyComplianceResponse mergeFrom:]
  -[NPKProtoCheckPasscodePolicyComplianceResponse .cxx_destruct]
  -[NPKProtoCheckPasscodePolicyComplianceResponse dictionaryRepresentation]
  -[NPKProtoCheckPasscodePolicyComplianceResponse writeTo:]
  -[NPKProtoCheckPasscodePolicyComplianceResponse isEqual:]
  -[NPKProtoCheckPasscodePolicyComplianceResponse copyTo:]
  -[NPKProtoCheckPasscodePolicyComplianceResponse readFrom:]
  -[NPKProtoCheckPasscodePolicyComplianceResponse copyWithZone:]
  -[NPKProtoCheckPasscodePolicyComplianceResponse errorData]
  -[NPKProtoCheckPasscodePolicyComplianceResponse hasErrorData]
  -[NPKProtoCheckPasscodePolicyComplianceResponse setErrorData:]
  -[NPKProtoCheckPasscodePolicyComplianceResponse passcodeMeetsPolicy]
  -[NPKProtoCheckPasscodePolicyComplianceResponse setPasscodeMeetsPolicy:]
  -[NPKProtoCheckPasscodePolicyComplianceResponse setHasPasscodeMeetsPolicy:]
  -[NPKProtoCheckPasscodePolicyComplianceResponse hasPasscodeMeetsPolicy]


NPKProtoSecureElementRemoveAppletsResponse : PBCodable <NSCopying>
 @property  BOOL hasPending
 @property  BOOL pending
 @property  BOOL hasSuccess
 @property  BOOL success

  // instance methods
  -[NPKProtoSecureElementRemoveAppletsResponse setSuccess:]
  -[NPKProtoSecureElementRemoveAppletsResponse success]
  -[NPKProtoSecureElementRemoveAppletsResponse pending]
  -[NPKProtoSecureElementRemoveAppletsResponse mergeFrom:]
  -[NPKProtoSecureElementRemoveAppletsResponse setPending:]
  -[NPKProtoSecureElementRemoveAppletsResponse hasSuccess]
  -[NPKProtoSecureElementRemoveAppletsResponse dictionaryRepresentation]
  -[NPKProtoSecureElementRemoveAppletsResponse writeTo:]
  -[NPKProtoSecureElementRemoveAppletsResponse setHasSuccess:]
  -[NPKProtoSecureElementRemoveAppletsResponse isEqual:]
  -[NPKProtoSecureElementRemoveAppletsResponse copyTo:]
  -[NPKProtoSecureElementRemoveAppletsResponse readFrom:]
  -[NPKProtoSecureElementRemoveAppletsResponse copyWithZone:]
  -[NPKProtoSecureElementRemoveAppletsResponse setHasPending:]
  -[NPKProtoSecureElementRemoveAppletsResponse hasPending]


NPKProtoPassSyncStateItem : PBCodable <NSCopying>
 @property  NSString *passTypeIdentifier
 @property  NSString *serialNumber
 @property  BOOL hasSequenceCounter
 @property  unsigned int sequenceCounter
 @property  NSData *manifestHash
 @property  NSMutableArray *manifestEntrys

  // class methods
  +[NPKProtoPassSyncStateItem manifestEntryType]

  // instance methods
  -[NPKProtoPassSyncStateItem sequenceCounter]
  -[NPKProtoPassSyncStateItem serialNumber]
  -[NPKProtoPassSyncStateItem setManifestHash:]
  -[NPKProtoPassSyncStateItem setSerialNumber:]
  -[NPKProtoPassSyncStateItem mergeFrom:]
  -[NPKProtoPassSyncStateItem manifestHash]
  -[NPKProtoPassSyncStateItem .cxx_destruct]
  -[NPKProtoPassSyncStateItem dictionaryRepresentation]
  -[NPKProtoPassSyncStateItem setSequenceCounter:]
  -[NPKProtoPassSyncStateItem writeTo:]
  -[NPKProtoPassSyncStateItem isEqual:]
  -[NPKProtoPassSyncStateItem copyTo:]
  -[NPKProtoPassSyncStateItem setPassTypeIdentifier:]
  -[NPKProtoPassSyncStateItem readFrom:]
  -[NPKProtoPassSyncStateItem passTypeIdentifier]
  -[NPKProtoPassSyncStateItem copyWithZone:]
  -[NPKProtoPassSyncStateItem hasSequenceCounter]
  -[NPKProtoPassSyncStateItem manifestEntrys]
  -[NPKProtoPassSyncStateItem setHasSequenceCounter:]
  -[NPKProtoPassSyncStateItem addManifestEntry:]
  -[NPKProtoPassSyncStateItem manifestEntrysCount]
  -[NPKProtoPassSyncStateItem clearManifestEntrys]
  -[NPKProtoPassSyncStateItem manifestEntryAtIndex:]
  -[NPKProtoPassSyncStateItem setManifestEntrys:]


NPKProtoProvisionPeerPaymentPassResponse : PBCodable <NSCopying>
 @property  BOOL hasPending
 @property  BOOL pending
 @property  BOOL hasSuccess
 @property  BOOL success
 @property  BOOL hasErrorData
 @property  NSData *errorData

  // instance methods
  -[NPKProtoProvisionPeerPaymentPassResponse setSuccess:]
  -[NPKProtoProvisionPeerPaymentPassResponse success]
  -[NPKProtoProvisionPeerPaymentPassResponse pending]
  -[NPKProtoProvisionPeerPaymentPassResponse mergeFrom:]
  -[NPKProtoProvisionPeerPaymentPassResponse setPending:]
  -[NPKProtoProvisionPeerPaymentPassResponse .cxx_destruct]
  -[NPKProtoProvisionPeerPaymentPassResponse hasSuccess]
  -[NPKProtoProvisionPeerPaymentPassResponse dictionaryRepresentation]
  -[NPKProtoProvisionPeerPaymentPassResponse writeTo:]
  -[NPKProtoProvisionPeerPaymentPassResponse setHasSuccess:]
  -[NPKProtoProvisionPeerPaymentPassResponse isEqual:]
  -[NPKProtoProvisionPeerPaymentPassResponse copyTo:]
  -[NPKProtoProvisionPeerPaymentPassResponse readFrom:]
  -[NPKProtoProvisionPeerPaymentPassResponse copyWithZone:]
  -[NPKProtoProvisionPeerPaymentPassResponse errorData]
  -[NPKProtoProvisionPeerPaymentPassResponse hasErrorData]
  -[NPKProtoProvisionPeerPaymentPassResponse setErrorData:]
  -[NPKProtoProvisionPeerPaymentPassResponse setHasPending:]
  -[NPKProtoProvisionPeerPaymentPassResponse hasPending]


NPKProtoStandalonePaymentProvisioningFlowSkipProvisioningRequest : PBRequest <NSCopying>
 @property  NPKProtoStandaloneRequestHeader *requestHeader

  // instance methods
  -[NPKProtoStandalonePaymentProvisioningFlowSkipProvisioningRequest mergeFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowSkipProvisioningRequest .cxx_destruct]
  -[NPKProtoStandalonePaymentProvisioningFlowSkipProvisioningRequest dictionaryRepresentation]
  -[NPKProtoStandalonePaymentProvisioningFlowSkipProvisioningRequest writeTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowSkipProvisioningRequest isEqual:]
  -[NPKProtoStandalonePaymentProvisioningFlowSkipProvisioningRequest copyTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowSkipProvisioningRequest readFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowSkipProvisioningRequest copyWithZone:]
  -[NPKProtoStandalonePaymentProvisioningFlowSkipProvisioningRequest requestHeader]
  -[NPKProtoStandalonePaymentProvisioningFlowSkipProvisioningRequest setRequestHeader:]


NPKProtoPaymentPreconditionsNotMetRequest : PBRequest <NSCopying>
 @property  int failedPrecondition
 @property  NSMutableArray *passIDs

  // class methods
  +[NPKProtoPaymentPreconditionsNotMetRequest passIDsType]

  // instance methods
  -[NPKProtoPaymentPreconditionsNotMetRequest mergeFrom:]
  -[NPKProtoPaymentPreconditionsNotMetRequest .cxx_destruct]
  -[NPKProtoPaymentPreconditionsNotMetRequest dictionaryRepresentation]
  -[NPKProtoPaymentPreconditionsNotMetRequest writeTo:]
  -[NPKProtoPaymentPreconditionsNotMetRequest isEqual:]
  -[NPKProtoPaymentPreconditionsNotMetRequest copyTo:]
  -[NPKProtoPaymentPreconditionsNotMetRequest readFrom:]
  -[NPKProtoPaymentPreconditionsNotMetRequest copyWithZone:]
  -[NPKProtoPaymentPreconditionsNotMetRequest passIDs]
  -[NPKProtoPaymentPreconditionsNotMetRequest failedPrecondition]
  -[NPKProtoPaymentPreconditionsNotMetRequest setPassIDs:]
  -[NPKProtoPaymentPreconditionsNotMetRequest addPassIDs:]
  -[NPKProtoPaymentPreconditionsNotMetRequest passIDsCount]
  -[NPKProtoPaymentPreconditionsNotMetRequest clearPassIDs]
  -[NPKProtoPaymentPreconditionsNotMetRequest passIDsAtIndex:]
  -[NPKProtoPaymentPreconditionsNotMetRequest failedPreconditionAsString:]
  -[NPKProtoPaymentPreconditionsNotMetRequest StringAsFailedPrecondition:]
  -[NPKProtoPaymentPreconditionsNotMetRequest setFailedPrecondition:]


NPKProtoStandalonePaymentProvisioningFlowDidEncounterErrorResponse : PBCodable <NSCopying>
 @property  NPKProtoStandaloneResponseHeader *responseHeader
 @property  BOOL hasError
 @property  NPKProtoStandaloneError *error

  // instance methods
  -[NPKProtoStandalonePaymentProvisioningFlowDidEncounterErrorResponse mergeFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowDidEncounterErrorResponse hasError]
  -[NPKProtoStandalonePaymentProvisioningFlowDidEncounterErrorResponse .cxx_destruct]
  -[NPKProtoStandalonePaymentProvisioningFlowDidEncounterErrorResponse dictionaryRepresentation]
  -[NPKProtoStandalonePaymentProvisioningFlowDidEncounterErrorResponse writeTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowDidEncounterErrorResponse isEqual:]
  -[NPKProtoStandalonePaymentProvisioningFlowDidEncounterErrorResponse copyTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowDidEncounterErrorResponse readFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowDidEncounterErrorResponse copyWithZone:]
  -[NPKProtoStandalonePaymentProvisioningFlowDidEncounterErrorResponse setError:]
  -[NPKProtoStandalonePaymentProvisioningFlowDidEncounterErrorResponse error]
  -[NPKProtoStandalonePaymentProvisioningFlowDidEncounterErrorResponse responseHeader]
  -[NPKProtoStandalonePaymentProvisioningFlowDidEncounterErrorResponse setResponseHeader:]


NPKProtoCompanionMigratedRequest : PBRequest <NSCopying>
  // instance methods
  -[NPKProtoCompanionMigratedRequest mergeFrom:]
  -[NPKProtoCompanionMigratedRequest dictionaryRepresentation]
  -[NPKProtoCompanionMigratedRequest writeTo:]
  -[NPKProtoCompanionMigratedRequest isEqual:]
  -[NPKProtoCompanionMigratedRequest copyTo:]
  -[NPKProtoCompanionMigratedRequest readFrom:]
  -[NPKProtoCompanionMigratedRequest copyWithZone:]


NPKProtoStandalonePaymentProvisioningFlowMoreInformationStepContext : PBCodable <NSCopying>
 @property  NSMutableArray *moreInfoItems
 @property  BOOL hasPaymentPass
 @property  NPKProtoStandalonePaymentPass *paymentPass

  // class methods
  +[NPKProtoStandalonePaymentProvisioningFlowMoreInformationStepContext moreInfoItemsType]

  // instance methods
  -[NPKProtoStandalonePaymentProvisioningFlowMoreInformationStepContext paymentPass]
  -[NPKProtoStandalonePaymentProvisioningFlowMoreInformationStepContext mergeFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowMoreInformationStepContext .cxx_destruct]
  -[NPKProtoStandalonePaymentProvisioningFlowMoreInformationStepContext dictionaryRepresentation]
  -[NPKProtoStandalonePaymentProvisioningFlowMoreInformationStepContext writeTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowMoreInformationStepContext setPaymentPass:]
  -[NPKProtoStandalonePaymentProvisioningFlowMoreInformationStepContext hasPaymentPass]
  -[NPKProtoStandalonePaymentProvisioningFlowMoreInformationStepContext isEqual:]
  -[NPKProtoStandalonePaymentProvisioningFlowMoreInformationStepContext copyTo:]
  -[NPKProtoStandalonePaymentProvisioningFlowMoreInformationStepContext readFrom:]
  -[NPKProtoStandalonePaymentProvisioningFlowMoreInformationStepContext moreInfoItems]
  -[NPKProtoStandalonePaymentProvisioningFlowMoreInformationStepContext copyWithZone:]
  -[NPKProtoStandalonePaymentProvisioningFlowMoreInformationStepContext setMoreInfoItems:]
  -[NPKProtoStandalonePaymentProvisioningFlowMoreInformationStepContext addMoreInfoItems:]
  -[NPKProtoStandalonePaymentProvisioningFlowMoreInformationStepContext moreInfoItemsCount]
  -[NPKProtoStandalonePaymentProvisioningFlowMoreInformationStepContext clearMoreInfoItems]
  -[NPKProtoStandalonePaymentProvisioningFlowMoreInformationStepContext moreInfoItemsAtIndex:]


NPKProtoPassSyncStateManifestEntry : PBCodable <NSCopying>
 @property  NSString *relativePath
 @property  NSString *fileHash

  // instance methods
  -[NPKProtoPassSyncStateManifestEntry mergeFrom:]
  -[NPKProtoPassSyncStateManifestEntry relativePath]
  -[NPKProtoPassSyncStateManifestEntry .cxx_destruct]
  -[NPKProtoPassSyncStateManifestEntry dictionaryRepresentation]
  -[NPKProtoPassSyncStateManifestEntry writeTo:]
  -[NPKProtoPassSyncStateManifestEntry setFileHash:]
  -[NPKProtoPassSyncStateManifestEntry isEqual:]
  -[NPKProtoPassSyncStateManifestEntry copyTo:]
  -[NPKProtoPassSyncStateManifestEntry fileHash]
  -[NPKProtoPassSyncStateManifestEntry readFrom:]
  -[NPKProtoPassSyncStateManifestEntry copyWithZone:]
  -[NPKProtoPassSyncStateManifestEntry setRelativePath:]


NPKIDVRemoteDeviceProtoEstablishPrearmTrustResponse : PBCodable <NSCopying>
 @property  BOOL hasErrorData
 @property  NSData *errorData

  // instance methods
  -[NPKIDVRemoteDeviceProtoEstablishPrearmTrustResponse mergeFrom:]
  -[NPKIDVRemoteDeviceProtoEstablishPrearmTrustResponse .cxx_destruct]
  -[NPKIDVRemoteDeviceProtoEstablishPrearmTrustResponse dictionaryRepresentation]
  -[NPKIDVRemoteDeviceProtoEstablishPrearmTrustResponse writeTo:]
  -[NPKIDVRemoteDeviceProtoEstablishPrearmTrustResponse isEqual:]
  -[NPKIDVRemoteDeviceProtoEstablishPrearmTrustResponse copyTo:]
  -[NPKIDVRemoteDeviceProtoEstablishPrearmTrustResponse readFrom:]
  -[NPKIDVRemoteDeviceProtoEstablishPrearmTrustResponse copyWithZone:]
  -[NPKIDVRemoteDeviceProtoEstablishPrearmTrustResponse errorData]
  -[NPKIDVRemoteDeviceProtoEstablishPrearmTrustResponse hasErrorData]
  -[NPKIDVRemoteDeviceProtoEstablishPrearmTrustResponse setErrorData:]


NPKProtoHandleRemoveTransactionsRequest : PBRequest <NSCopying>
 @property  NSMutableArray *identifiers
 @property  NSMutableArray *passIDs

  // class methods
  +[NPKProtoHandleRemoveTransactionsRequest identifiersType]
  +[NPKProtoHandleRemoveTransactionsRequest passIDsType]

  // instance methods
  -[NPKProtoHandleRemoveTransactionsRequest mergeFrom:]
  -[NPKProtoHandleRemoveTransactionsRequest .cxx_destruct]
  -[NPKProtoHandleRemoveTransactionsRequest identifiers]
  -[NPKProtoHandleRemoveTransactionsRequest dictionaryRepresentation]
  -[NPKProtoHandleRemoveTransactionsRequest writeTo:]
  -[NPKProtoHandleRemoveTransactionsRequest isEqual:]
  -[NPKProtoHandleRemoveTransactionsRequest copyTo:]
  -[NPKProtoHandleRemoveTransactionsRequest readFrom:]
  -[NPKProtoHandleRemoveTransactionsRequest identifiersCount]
  -[NPKProtoHandleRemoveTransactionsRequest clearIdentifiers]
  -[NPKProtoHandleRemoveTransactionsRequest copyWithZone:]
  -[NPKProtoHandleRemoveTransactionsRequest setIdentifiers:]
  -[NPKProtoHandleRemoveTransactionsRequest passIDs]
  -[NPKProtoHandleRemoveTransactionsRequest addIdentifiers:]
  -[NPKProtoHandleRemoveTransactionsRequest identifiersAtIndex:]
  -[NPKProtoHandleRemoveTransactionsRequest setPassIDs:]
  -[NPKProtoHandleRemoveTransactionsRequest addPassIDs:]
  -[NPKProtoHandleRemoveTransactionsRequest passIDsCount]
  -[NPKProtoHandleRemoveTransactionsRequest clearPassIDs]
  -[NPKProtoHandleRemoveTransactionsRequest passIDsAtIndex:]


NPKProtoHandleCompanioniCloudSignoutRequest : PBRequest <NSCopying>
  // instance methods
  -[NPKProtoHandleCompanioniCloudSignoutRequest mergeFrom:]
  -[NPKProtoHandleCompanioniCloudSignoutRequest dictionaryRepresentation]
  -[NPKProtoHandleCompanioniCloudSignoutRequest writeTo:]
  -[NPKProtoHandleCompanioniCloudSignoutRequest isEqual:]
  -[NPKProtoHandleCompanioniCloudSignoutRequest copyTo:]
  -[NPKProtoHandleCompanioniCloudSignoutRequest readFrom:]
  -[NPKProtoHandleCompanioniCloudSignoutRequest copyWithZone:]


NPKProtoRevokeSubcredentialsRequest : PBRequest <NSCopying>
 @property  NSMutableArray *identifiers

  // class methods
  +[NPKProtoRevokeSubcredentialsRequest identifiersType]

  // instance methods
  -[NPKProtoRevokeSubcredentialsRequest mergeFrom:]
  -[NPKProtoRevokeSubcredentialsRequest .cxx_destruct]
  -[NPKProtoRevokeSubcredentialsRequest identifiers]
  -[NPKProtoRevokeSubcredentialsRequest dictionaryRepresentation]
  -[NPKProtoRevokeSubcredentialsRequest writeTo:]
  -[NPKProtoRevokeSubcredentialsRequest isEqual:]
  -[NPKProtoRevokeSubcredentialsRequest copyTo:]
  -[NPKProtoRevokeSubcredentialsRequest readFrom:]
  -[NPKProtoRevokeSubcredentialsRequest identifiersCount]
  -[NPKProtoRevokeSubcredentialsRequest clearIdentifiers]
  -[NPKProtoRevokeSubcredentialsRequest copyWithZone:]
  -[NPKProtoRevokeSubcredentialsRequest setIdentifiers:]
  -[NPKProtoRevokeSubcredentialsRequest addIdentifiers:]
  -[NPKProtoRevokeSubcredentialsRequest identifiersAtIndex:]


NPKIDVRemoteDeviceSessionService : NSObject <NSXPCListenerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NPKIDVRemoteDeviceSessionService .cxx_destruct]
  -[NPKIDVRemoteDeviceSessionService _addServer:]
  -[NPKIDVRemoteDeviceSessionService _addConnection:]
  -[NPKIDVRemoteDeviceSessionService _removeServer:]
  -[NPKIDVRemoteDeviceSessionService dealloc]
  -[NPKIDVRemoteDeviceSessionService listener:shouldAcceptNewConnection:]
  -[NPKIDVRemoteDeviceSessionService initWithRemoteDeviceEventsCoordinator:connectionCoordinator:preflightManager:]
  -[NPKIDVRemoteDeviceSessionService teardownCurrentRemoteDeviceSessions]


NPKProtoSetExpressPassResponse : PBCodable <NSCopying>
 @property  BOOL hasPending
 @property  BOOL pending
 @property  BOOL hasSuccess
 @property  BOOL success
 @property  BOOL hasCancelled
 @property  BOOL cancelled
 @property  BOOL hasNeedsUnlock
 @property  BOOL needsUnlock
 @property  BOOL hasActualUniqueID
 @property  NSString *actualUniqueID
 @property  NSMutableArray *currentUniqueIDs
 @property  BOOL hasActualExpressPassInformation
 @property  NSData *actualExpressPassInformation
 @property  NSMutableArray *currentExpressPassesInformations

  // class methods
  +[NPKProtoSetExpressPassResponse currentExpressPassesInformationType]
  +[NPKProtoSetExpressPassResponse currentUniqueIDsType]

  // instance methods
  -[NPKProtoSetExpressPassResponse setSuccess:]
  -[NPKProtoSetExpressPassResponse success]
  -[NPKProtoSetExpressPassResponse pending]
  -[NPKProtoSetExpressPassResponse mergeFrom:]
  -[NPKProtoSetExpressPassResponse cancelled]
  -[NPKProtoSetExpressPassResponse setPending:]
  -[NPKProtoSetExpressPassResponse .cxx_destruct]
  -[NPKProtoSetExpressPassResponse hasSuccess]
  -[NPKProtoSetExpressPassResponse dictionaryRepresentation]
  -[NPKProtoSetExpressPassResponse setCancelled:]
  -[NPKProtoSetExpressPassResponse writeTo:]
  -[NPKProtoSetExpressPassResponse setHasSuccess:]
  -[NPKProtoSetExpressPassResponse setHasCancelled:]
  -[NPKProtoSetExpressPassResponse hasCancelled]
  -[NPKProtoSetExpressPassResponse isEqual:]
  -[NPKProtoSetExpressPassResponse copyTo:]
  -[NPKProtoSetExpressPassResponse readFrom:]
  -[NPKProtoSetExpressPassResponse copyWithZone:]
  -[NPKProtoSetExpressPassResponse setHasPending:]
  -[NPKProtoSetExpressPassResponse hasPending]
  -[NPKProtoSetExpressPassResponse addCurrentExpressPassesInformation:]
  -[NPKProtoSetExpressPassResponse setActualExpressPassInformation:]
  -[NPKProtoSetExpressPassResponse currentExpressPassesInformationsCount]
  -[NPKProtoSetExpressPassResponse clearCurrentExpressPassesInformations]
  -[NPKProtoSetExpressPassResponse currentExpressPassesInformationAtIndex:]
  -[NPKProtoSetExpressPassResponse hasActualExpressPassInformation]
  -[NPKProtoSetExpressPassResponse actualExpressPassInformation]
  -[NPKProtoSetExpressPassResponse currentExpressPassesInformations]
  -[NPKProtoSetExpressPassResponse setCurrentExpressPassesInformations:]
  -[NPKProtoSetExpressPassResponse setNeedsUnlock:]
  -[NPKProtoSetExpressPassResponse needsUnlock]
  -[NPKProtoSetExpressPassResponse actualUniqueID]
  -[NPKProtoSetExpressPassResponse addCurrentUniqueIDs:]
  -[NPKProtoSetExpressPassResponse setActualUniqueID:]
  -[NPKProtoSetExpressPassResponse currentUniqueIDsCount]
  -[NPKProtoSetExpressPassResponse clearCurrentUniqueIDs]
  -[NPKProtoSetExpressPassResponse currentUniqueIDsAtIndex:]
  -[NPKProtoSetExpressPassResponse setHasNeedsUnlock:]
  -[NPKProtoSetExpressPassResponse hasNeedsUnlock]
  -[NPKProtoSetExpressPassResponse hasActualUniqueID]
  -[NPKProtoSetExpressPassResponse currentUniqueIDs]
  -[NPKProtoSetExpressPassResponse setCurrentUniqueIDs:]


NPKBiometricPassPreflightManager : NSObject
 @property  <NPKBiometricPassPreflightManagerDataSource> *dataSource

  // instance methods
  -[NPKBiometricPassPreflightManager initWithDataSource:]
  -[NPKBiometricPassPreflightManager .cxx_destruct]
  -[NPKBiometricPassPreflightManager dataSource]
  -[NPKBiometricPassPreflightManager preflightStatusForType:completion:]


NPKBarcodePaymentSession : NSObject <PKPaymentServiceDelegate>
 @property  NPKPaymentBarcode *currentPaymentBarcode
 @property  unsigned long currentTransactionStatus
 @property  PKPaymentTransaction *currentTransaction
 @property  BOOL sessionStarted
 @property  BOOL submittingAuthenticationResult
 @property  NSData *authorizationCredential
 @property  PKPaymentService *paymentService
 @property  NSObject<OS_dispatch_source> *sessionTimeoutTimer
 @property  PKAssertion *notificationSuppressionAssertion
 @property  PKAssertion *expressTransactionSuppressionAssertion
 @property  NSObject<OS_dispatch_queue> *serialQueue
 @property  <NPKBarcodePaymentSessionDelegate> *delegate
 @property  PKPaymentPass *paymentPass
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NPKBarcodePaymentSession paymentPass]
  -[NPKBarcodePaymentSession setSerialQueue:]
  -[NPKBarcodePaymentSession currentTransaction]
  -[NPKBarcodePaymentSession transactionSourceIdentifier:didReceiveTransaction:]
  -[NPKBarcodePaymentSession .cxx_destruct]
  -[NPKBarcodePaymentSession invalidateSession]
  -[NPKBarcodePaymentSession setDelegate:]
  -[NPKBarcodePaymentSession serialQueue]
  -[NPKBarcodePaymentSession setPaymentService:]
  -[NPKBarcodePaymentSession paymentService]
  -[NPKBarcodePaymentSession startSession]
  -[NPKBarcodePaymentSession delegate]
  -[NPKBarcodePaymentSession setCurrentTransaction:]
  -[NPKBarcodePaymentSession authorizationCredential]
  -[NPKBarcodePaymentSession setSessionStarted:]
  -[NPKBarcodePaymentSession sessionStarted]
  -[NPKBarcodePaymentSession _insertPaymentTransactionForActiveBarcode]
  -[NPKBarcodePaymentSession initWithPaymentPass:authorizationCredential:]
  -[NPKBarcodePaymentSession currentPaymentBarcode]
  -[NPKBarcodePaymentSession retryFetchingBarcode]
  -[NPKBarcodePaymentSession submitUserIntentionConfirmation:]
  -[NPKBarcodePaymentSession submitPinCode:]
  -[NPKBarcodePaymentSession _startSessionTimeoutTimer]
  -[NPKBarcodePaymentSession _updateCurrentPaymentBarcodeWithBarcodeIdentifier:decryptedBarcodeCredential:error:]
  -[NPKBarcodePaymentSession _fetchDecryptedBarcodeWithCredential:]
  -[NPKBarcodePaymentSession _acquireNotificationSuppressionAssertion]
  -[NPKBarcodePaymentSession _acquireExpressTransactionSuppressAssertion]
  -[NPKBarcodePaymentSession _extendSessionTimeoutTimer]
  -[NPKBarcodePaymentSession _stopSessionTimeoutTimer]
  -[NPKBarcodePaymentSession _releaseNotificationSuppressionAssertion]
  -[NPKBarcodePaymentSession _releaseExpressTransactionSuppressionAssertion]
  -[NPKBarcodePaymentSession setSubmittingAuthenticationResult:]
  -[NPKBarcodePaymentSession _handleUpdatedPaymentTransaction:]
  -[NPKBarcodePaymentSession _completedAuthenticationForTransaction:]
  -[NPKBarcodePaymentSession _handleUpdatedTransactionStatus:]
  -[NPKBarcodePaymentSession submittingAuthenticationResult]
  -[NPKBarcodePaymentSession setCurrentPaymentBarcode:]
  -[NPKBarcodePaymentSession _invokeExtensionToCollectPaymentInformation]
  -[NPKBarcodePaymentSession _processedAuthenticationMechanismForTransaction:]
  -[NPKBarcodePaymentSession _updateCurrentTransactionStatus:transaction:]
  -[NPKBarcodePaymentSession currentTransactionStatus]
  -[NPKBarcodePaymentSession setCurrentTransactionStatus:]
  -[NPKBarcodePaymentSession notificationSuppressionAssertion]
  -[NPKBarcodePaymentSession setNotificationSuppressionAssertion:]
  -[NPKBarcodePaymentSession expressTransactionSuppressionAssertion]
  -[NPKBarcodePaymentSession setExpressTransactionSuppressionAssertion:]
  -[NPKBarcodePaymentSession sessionTimeoutTimer]
  -[NPKBarcodePaymentSession setSessionTimeoutTimer:]
  -[NPKBarcodePaymentSession _handleSessionTimeout]
  -[NPKBarcodePaymentSession setAuthorizationCredential:]


NPKWatchSecureRangingCoordinator : NSObject
  // instance methods
  -[NPKWatchSecureRangingCoordinator init]
  -[NPKWatchSecureRangingCoordinator resumeRangingForReaderIdentifier:]
  -[NPKWatchSecureRangingCoordinator pauseRangingForReaderIdentifier:durationInSeconds:]


NPKMockPeerPaymentAccountManager : NPKPeerPaymentAccountManager
  // class methods
  +[NPKMockPeerPaymentAccountManager sharedInstance]

  // instance methods
  -[NPKMockPeerPaymentAccountManager account]
  -[NPKMockPeerPaymentAccountManager .cxx_destruct]
  -[NPKMockPeerPaymentAccountManager dealloc]
  -[NPKMockPeerPaymentAccountManager initWithPeerPaymentService:]
  -[NPKMockPeerPaymentAccountManager _updateMockBalance]


NPKProtoAvailableHomeKeyPassesRequest : PBRequest <NSCopying>
  // instance methods
  -[NPKProtoAvailableHomeKeyPassesRequest mergeFrom:]
  -[NPKProtoAvailableHomeKeyPassesRequest dictionaryRepresentation]
  -[NPKProtoAvailableHomeKeyPassesRequest writeTo:]
  -[NPKProtoAvailableHomeKeyPassesRequest isEqual:]
  -[NPKProtoAvailableHomeKeyPassesRequest copyTo:]
  -[NPKProtoAvailableHomeKeyPassesRequest readFrom:]
  -[NPKProtoAvailableHomeKeyPassesRequest copyWithZone:]


MSMessage(NPKRemotePassActionAdditions)
	// instance methods
	-[MSMessage(NPKRemotePassActionAdditions) request]
	-[MSMessage(NPKRemotePassActionAdditions) response]
	-[MSMessage(NPKRemotePassActionAdditions) remotePassAction]
	-[MSMessage(NPKRemotePassActionAdditions) updateDataURLForRemoteAction:]
	-[MSMessage(NPKRemotePassActionAdditions) selectItemRequest]
	-[MSMessage(NPKRemotePassActionAdditions) selectItemResponse]
	-[MSMessage(NPKRemotePassActionAdditions) enterValueResponse]
	-[MSMessage(NPKRemotePassActionAdditions) enterValueRequest]

PKAppletSubcredential(NanoPassKit)
	// instance methods
	-[PKAppletSubcredential(NanoPassKit) npkSupportsBluetoothRadio]
	-[PKAppletSubcredential(NanoPassKit) npkSupportsMultipleRadioTypes]
	-[PKAppletSubcredential(NanoPassKit) npkSupportsNFCRadio]
	-[PKAppletSubcredential(NanoPassKit) npkSupportsBluetoothRadioOnly]
	-[PKAppletSubcredential(NanoPassKit) npkSupportsNFCRadioOnly]

PKPass(NanoPassKit)
	// class methods
	+[PKPass(NanoPassKit) npkHandleTransitValuePendingAmount:forBalanceField:passWithUniqueID:]
	+[PKPass(NanoPassKit) npkClearTransitValuePendingStateIfNecessaryForPassWithID:withBalanceFields:]

	// instance methods
	-[PKPass(NanoPassKit) npkWatchBarcode]
	-[PKPass(NanoPassKit) npkAccessoryType]
	-[PKPass(NanoPassKit) npkCompleteHashForWatchOSVersion:]
	-[PKPass(NanoPassKit) npkSupportsHidingAccessory]
	-[PKPass(NanoPassKit) npkCompleteHash]
	-[PKPass(NanoPassKit) hasLogoImageSet]
	-[PKPass(NanoPassKit) npkHasValidNFCPayload]
	-[PKPass(NanoPassKit) npkIsAddValuePending]
	-[PKPass(NanoPassKit) npkPendingAddValueStateExpireDateForBalanceFieldWithIdentifier:currentBalance:]

PKSecureElementPass(NanoPassKit)
	// instance methods
	-[PKSecureElementPass(NanoPassKit) npkSupportsBluetooth]
	-[PKSecureElementPass(NanoPassKit) npkSupportsNFC]
	-[PKSecureElementPass(NanoPassKit) npkExclusivelyTransactsOverBluetooth]
	-[PKSecureElementPass(NanoPassKit) npkExclusivelyTransactsOverNFC]
	-[PKSecureElementPass(NanoPassKit) npkSubcredentials]

PKPaymentPass(NanoPassKit)
	// instance methods
	-[PKPaymentPass(NanoPassKit) npkHasUserSelectableContactlessPaymentApplications]
	-[PKPaymentPass(NanoPassKit) npkHasMultiplePaymentApplications]
	-[PKPaymentPass(NanoPassKit) npkSortedDeviceContactlessPaymentApplications]
	-[PKPaymentPass(NanoPassKit) npkDevicePaymentApplicationForAID:]
	-[PKPaymentPass(NanoPassKit) npkPreferredContactlessPaymentApplication]
	-[PKPaymentPass(NanoPassKit) npkSetPreferredPaymentApplication:]
	-[PKPaymentPass(NanoPassKit) npkIsInLostMode]

(NanoPassKit)
	// instance methods
	-[(NanoPassKit) npkDescription]

(NPKRelevancy)
	// class methods
	+[(NPKRelevancy) npkRelevancyTupleWithUniqueID:relevantText:]

	// instance methods
	-[(NPKRelevancy) npkRelevancyUniqueID]
	-[(NPKRelevancy) npkRelevancyRelevantText]
	-[(NPKRelevancy) npk_objectForKey:class:]

PKTransitAppletState(NanoPassKit)
	// instance methods
	-[PKTransitAppletState(NanoPassKit) npk_processUpdateWithAppletHistory:concreteTransactions:ephemeralTransaction:mutatedBalances:pass:]

PKPaymentBalance(NanoPassKit)
	// class methods
	+[PKPaymentBalance(NanoPassKit) NPK_paymentBalanceWithAppletBalance:]

(NanoPassKit)
	// instance methods
	-[(NanoPassKit) npk_errorWithDomain:code:]

NSDistributedNotificationCenter(WeakObservers)
	// instance methods
	-[NSDistributedNotificationCenter(WeakObservers) _handleNotification:]
	-[NSDistributedNotificationCenter(WeakObservers) _internalNameForNotificationName:]
	-[NSDistributedNotificationCenter(WeakObservers) weak_removeObserver:name:object:]
	-[NSDistributedNotificationCenter(WeakObservers) weak_addObserver:selector:name:object:]
	-[NSDistributedNotificationCenter(WeakObservers) weak_removeObserver:]

(NanoPassKit)
	// instance methods
	-[(NanoPassKit) isAllCaps]
	-[(NanoPassKit) matchesInStringWithType:]
	-[(NanoPassKit) npkIsPhoneNumber]
	-[(NanoPassKit) npkIsEmailAddress]
	-[(NanoPassKit) npkBaseAddress]
	-[(NanoPassKit) npkHasContent]

PKPassLogoImageSet(NanoPassKit)
	// instance methods
	-[PKPassLogoImageSet(NanoPassKit) memoryMapImageData]
	-[PKPassLogoImageSet(NanoPassKit) loadPDFArtFromBundle:targetSize:scale:]
	-[PKPassLogoImageSet(NanoPassKit) resizeWithScreenSize:]
	-[PKPassLogoImageSet(NanoPassKit) loadPDFArtFromBundle:]
	-[PKPassLogoImageSet(NanoPassKit) npkHasValidPaymentCardAssets]

PKPaymentAuthorizationDataModel(NanoPassKit)
	// instance methods
	-[PKPaymentAuthorizationDataModel(NanoPassKit) npkIsPeerPayment]
	-[PKPaymentAuthorizationDataModel(NanoPassKit) npkIsSplitPeerPayment]
	-[PKPaymentAuthorizationDataModel(NanoPassKit) _hasNonPeerPaymentAcceptedPasses]
	-[PKPaymentAuthorizationDataModel(NanoPassKit) npkSetPassAndPaymentApplicationForAID:]
	-[PKPaymentAuthorizationDataModel(NanoPassKit) npkIsSkeletonPeerPayment]
	-[PKPaymentAuthorizationDataModel(NanoPassKit) npkIsTopUp]
	-[PKPaymentAuthorizationDataModel(NanoPassKit) npkIsSplitPeerPaymentWithAnotherPaymentMethod]
	-[PKPaymentAuthorizationDataModel(NanoPassKit) npkIsSplitPeerPaymentWithoutAnotherPaymentMethod]
	-[PKPaymentAuthorizationDataModel(NanoPassKit) npkIsCardOnFilePayment]
	-[PKPaymentAuthorizationDataModel(NanoPassKit) npkIsExternalContextAuthorization]
	-[PKPaymentAuthorizationDataModel(NanoPassKit) npkIsCompanionAuthForTvOS]

PKTransitPassProperties(NanoPassKit)
	// instance methods
	-[PKTransitPassProperties(NanoPassKit) npkHasTransitBalance]

PKPaymentSetupProduct(NanoPassKit)
	// instance methods
	-[PKPaymentSetupProduct(NanoPassKit) isAppleBalanceProduct]

PKPassFrontFaceImageSet(NanoPassKit)
	// class methods
	+[PKPassFrontFaceImageSet(NanoPassKit) _bundleForPass:]
	+[PKPassFrontFaceImageSet(NanoPassKit) isDrawnUsingAssetOptions:fromBundle:]
	+[PKPassFrontFaceImageSet(NanoPassKit) _assetNamesForAssetOption:]
	+[PKPassFrontFaceImageSet(NanoPassKit) _containsAssetForImageName:fromBundle:]
	+[PKPassFrontFaceImageSet(NanoPassKit) isDrawnUsingAssetOptions:forPass:]

	// instance methods
	-[PKPassFrontFaceImageSet(NanoPassKit) memoryMapImageData]

PKPaymentWebServiceContext(NanoPassKit)
	// instance methods
	-[PKPaymentWebServiceContext(NanoPassKit) npkPossiblyOverriddenPeerPaymentServiceURL]

IDSMessageContext(NPKProtoAdditions)
	// instance methods
	-[IDSMessageContext(NPKProtoAdditions) npkDescription]

IDSProtobuf(NPKProtoAdditions)
	// instance methods
	-[IDSProtobuf(NPKProtoAdditions) npkDescription]

PKTransitCommutePlan(NPKDateRange)
PKPaymentLocalPassCredential(NanoPassKit)
	// instance methods
	-[PKPaymentLocalPassCredential(NanoPassKit) _initWithPassTypeIdentifier:serialNumber:credentialType:sanitizedPrimaryAccountNumber:longDescription:cardType:]

PKImage(NanoPassKit)
	// instance methods
	-[PKImage(NanoPassKit) resizedImageToFit:]
	-[PKImage(NanoPassKit) resizedImageToCover:]
	-[PKImage(NanoPassKit) npkImageByMemoryMappingDataWithTemporaryFilePrefix:]
	-[PKImage(NanoPassKit) _npkMemoryMappedImageWithPath:]
	-[PKImage(NanoPassKit) resizedImageWithSize:shouldCover:]

PKExpressPassInformation(NanoPassKit)
	// instance methods
	-[PKExpressPassInformation(NanoPassKit) npk_hasImmediateAutomaticSelectionCriterion]

<DEREK BUG Categories!>(NilProtection)
	// class methods
	+[<DEREK BUG Categories!>(NilProtection) _processArgumentWithMutableDictionary:object:key:]
	+[<DEREK BUG Categories!>(NilProtection) npkDictionaryWithObjectsAndKeys:]

	// instance methods
	-[<DEREK BUG Categories!>(NilProtection) npkSetObject:forKey:]

(NPK)
	// instance methods
	-[(NPK) npkFindFirstObjectMatchingCondition:]
	-[(NPK) npkComprehension:]
	-[(NPK) npkSafeObjectAtIndex:]

<DEREK BUG Categories!>(NPKMutableArrayAdditions)
	// instance methods
	-[<DEREK BUG Categories!>(NPKMutableArrayAdditions) npkSafelyAddObject:]

(NPK)
	// instance methods
	-[(NPK) npkFakeArcRetain]

(NPK)
	// instance methods
	-[(NPK) npkComprehension:]

01 00 0f00 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountStore 
01 00 0200 /System/Library/PrivateFrameworks/AppConduit.framework/AppConduit: ACXDeviceConnection 
01 00 1c00 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAccountManager 
01 00 1c00 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAppleIDAuthenticationContext 
01 00 1600 /System/Library/PrivateFrameworks/AssertionServices.framework/AssertionServices: BKSApplicationStateMonitor 
01 00 1600 /System/Library/PrivateFrameworks/AssertionServices.framework/AssertionServices: BKSProcessAssertion 
01 00 0d00 /System/Library/PrivateFrameworks/BiomeStreams.framework/BiomeStreams: BMDiscoverabilitySignalEvent 
01 00 0d00 /System/Library/PrivateFrameworks/BiomeStreams.framework/BiomeStreams: BMStreams 
01 00 0a00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKAccountInfo 
01 00 1800 /System/Library/PrivateFrameworks/ChatKit.framework/ChatKit: CKComposition 
01 00 1800 /System/Library/PrivateFrameworks/ChatKit.framework/ChatKit: CKConversation 
01 00 1300 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLGeocoder 
01 00 1300 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLInUseAssertion 
01 00 1300 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLLocation 
01 00 1300 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLLocationManager 
01 00 0c00 /System/Library/Frameworks/Contacts.framework/Contacts: CNContact 
01 00 0c00 /System/Library/Frameworks/Contacts.framework/Contacts: CNMutablePostalAddress 
01 00 0c00 /System/Library/Frameworks/Contacts.framework/Contacts: CNPhoneNumber 
01 00 1a00 /System/Library/PrivateFrameworks/IDS.framework/IDS: IDSMessageContext 
01 00 1a00 /System/Library/PrivateFrameworks/IDS.framework/IDS: IDSProtobuf 
01 00 1a00 /System/Library/PrivateFrameworks/IDS.framework/IDS: IDSService 
01 00 0b00 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMChatRegistry 
01 00 0b00 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMDaemonController 
01 00 0b00 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMService 
01 00 1500 /System/Library/Frameworks/LocalAuthentication.framework/LocalAuthentication: LAContext 
01 00 2200 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationProxy 
01 00 2200 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationRecord 
01 00 2200 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationWorkspace 
01 00 2200 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSPlugInKitProxy 
01 00 0900 /System/Library/Frameworks/Messages.framework/Messages: MSMessage 
01 00 0900 /System/Library/Frameworks/Messages.framework/Messages: MSMessageLiveLayout 
01 00 0900 /System/Library/Frameworks/Messages.framework/Messages: MSMessageTemplateLayout 
01 00 0900 /System/Library/Frameworks/Messages.framework/Messages: MSSession 
01 00 1700 /System/Library/PrivateFrameworks/NanoPreferencesSync.framework/NanoPreferencesSync: NPSDomainAccessor 
01 00 1700 /System/Library/PrivateFrameworks/NanoPreferencesSync.framework/NanoPreferencesSync: NPSManager 
01 00 1200 /System/Library/PrivateFrameworks/NanoRegistry.framework/NanoRegistry: NRPairedDeviceRegistry 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCountedSet 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDataDetector 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDecimalNumber 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDecimalNumberHandler 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDistributedNotificationCenter 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileHandle 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileWrapper 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableURLRequest 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 2300 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPersonNameComponents 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0e00 /System/Library/PrivateFrameworks/NanoSystemSettings.framework/NanoSystemSettings: NSSManager 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLQueryItem 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSession 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSessionConfiguration 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUserActivity 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListener 
01 00 1900 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBCodable 
01 00 1900 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBRequest 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PDXPCService 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKAccount 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKAccountAttestationRequest 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKAccountService 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKAccountUserCollection 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKAccountWebServiceAccountsRequest 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKAddCarKeyPassConfiguration 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKAddPaymentPassController 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKAddPaymentPassRequest 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKAddPaymentPassRequestConfiguration 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKAnalyticsReporter 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKAppleAccountManager 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKAppleBalanceCredential 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKAppletSubcredential 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKAppletSubcredentialSharingInvitation 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKAppletSubcredentialSharingInvitationMetadata 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKAppletSubcredentialSharingSession 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKAssertion 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKAsyncUnaryOperationComposer 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKBarcode 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKBarcodeEventMetadataRequest 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKBarcodePaymentEvent 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKCatalog 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKCloudStoreService 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKColor 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKContact 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKContactlessCardIngester 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKContactlessInterfaceTransactionContext 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKCurrencyAmount 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKDiff 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKExpressPassInformation 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKExtensionProvider 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKFeatureApplication 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKFelicaAppletHistory 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKFieldDetector 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKFileDataAccessor 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKGroupsController 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKImage 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKImageResizingConstraints 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKLabeledValue 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKNFCPayload 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKOSVersionRequirement 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKOSVersionRequirementRange 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKObject 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKOpaqueDataServiceProviderOrder 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPass 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPassField 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPassFrontFaceImageSet 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPassLibrary 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPassLogoImageSet 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPaymentApplication 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPaymentAuthorizationDataModel 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPaymentAuthorizationResult 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPaymentAvailableProductsRequest 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPaymentAvailableProductsResponse 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPaymentBalance 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPaymentBalanceReminder 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPaymentCommutePlanReminder 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPaymentContactlessProductCredential 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPaymentCredential 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPaymentDeviceConfigurationData 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPaymentDeviceMetadata 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPaymentDeviceProvisioningData 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPaymentDeviceRegistrationData 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPaymentDigitalIssuanceProductCredential 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPaymentEligibilityRequest 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPaymentHeroImage 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPaymentHeroImageController 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPaymentInformationEventExtensionHostContext 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPaymentIssuerProvisioningCertificatesRequest 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPaymentLocalPassCredential 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPaymentOptionsDefaults 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPaymentPass 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPaymentPassAction 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPaymentProvisioningRequest 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPaymentRegistrationUtilities 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPaymentRemoteCredential 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPaymentRemoteCredentialsRequest 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPaymentRequest 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPaymentRequirementsRequest 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPaymentService 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPaymentSession 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPaymentSetupField 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPaymentSetupFieldsModel 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPaymentSetupProduct 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPaymentSetupProductModel 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPaymentSummaryItem 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPaymentTransaction 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPaymentVerificationOptionsRequest 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPaymentVerificationUpdateRequest 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPaymentWebService 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPaymentWebServiceConfiguration 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPaymentWebServiceContext 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPaymentWebServiceTargetDevice 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPeerPaymentAccount 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPeerPaymentController 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPeerPaymentIdentityVerificationResponse 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPeerPaymentPreferences 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPeerPaymentQuote 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPeerPaymentService 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPeerPaymentUpdatePreferencesRequest 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPeerPaymentWebService 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKPeerPaymentWebServiceContext 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKRemoteAssetManifest 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKSecureElement 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKSecureElementApplet 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKSecureElementPass 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKSecureElementSignatureInfo 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKSerializedDataAccessor 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKServiceProviderPaymentRequest 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKSharedPaymentWebServiceArchiver 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKShippingMethod 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKSimulatorPaymentPass 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKSubcredentialProvisioningAcceptInvitationConfiguration 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKSubcredentialProvisioningController 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKTransactionSource 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKTransactionSourceCollection 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKTransitAppletBalance 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKTransitAppletHistory 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKTransitAppletState 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKTransitCommutePlan 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKTransitPassProperties 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKTrustedDeviceEnrollmentInfo 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKValueAddedServiceTransaction 
01 00 0700 /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore: PKXPCService 
01 00 0400 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNMutableNotificationContent 
01 00 0400 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNMutableNotificationSound 
01 00 0400 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNNotificationCategory 
01 00 0400 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNNotificationIcon 
01 00 0400 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNNotificationRequest 
01 00 0400 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNUserNotificationCenter 
