|| __DATA.__common _g_ctx
|| __DATA.__common _sessionName
|| __DATA.__common _systemDidWakeFromSleep
|| __DATA.__common _systemIsSleeping
|| __DATA.__data _HAPCharacteristicEventsUserInfoKey
|| __DATA.__data _HAPDeviceIDLength
|| __DATA.__data _blacklistedStatus
|| __DATA.__data _certifiedStatus
|| __DATA.__data _kMetadataBTLEUUIDLength
|| __DATA.__data _kMetadataBaseUUIDSuffixLength
|| __DATA.__data _kMetadataCurrentSchemaVersion
|| __DATA.__data _kMetadataShortUUIDLength
|| __DATA.__objc_data _OBJC_CLASS_$_ATVModel
|| __DATA.__objc_data _OBJC_CLASS_$_CBConnectionsObserver
|| __DATA.__objc_data _OBJC_CLASS_$_HAPAccessory
|| __DATA.__objc_data _OBJC_CLASS_$_HAPAccessoryConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HAPAccessoryInfo
|| __DATA.__objc_data _OBJC_CLASS_$_HAPAccessoryProtocolInfo
|| __DATA.__objc_data _OBJC_CLASS_$_HAPAccessoryServer
|| __DATA.__objc_data _OBJC_CLASS_$_HAPAccessoryServerBTLE
|| __DATA.__objc_data _OBJC_CLASS_$_HAPAccessoryServerBrowserWiProxBTLE
|| __DATA.__objc_data _OBJC_CLASS_$_HAPAccessoryServerIP
|| __DATA.__objc_data _OBJC_CLASS_$_HAPAccessoryServerRelay
|| __DATA.__objc_data _OBJC_CLASS_$_HAPAccessoryWiFiConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HAPAddRemovePairingOperation
|| __DATA.__objc_data _OBJC_CLASS_$_HAPAuthSession
|| __DATA.__objc_data _OBJC_CLASS_$_HAPBLEAccessoryCache
|| __DATA.__objc_data _OBJC_CLASS_$_HAPBLECharacteristicCache
|| __DATA.__objc_data _OBJC_CLASS_$_HAPBLEPeripheral
|| __DATA.__objc_data _OBJC_CLASS_$_HAPBLEPeripheralInfo
|| __DATA.__objc_data _OBJC_CLASS_$_HAPBLEServiceCache
|| __DATA.__objc_data _OBJC_CLASS_$_HAPBTLECentralManager
|| __DATA.__objc_data _OBJC_CLASS_$_HAPBTLECharacteristicSignature
|| __DATA.__objc_data _OBJC_CLASS_$_HAPBTLEControlOutputStream
|| __DATA.__objc_data _OBJC_CLASS_$_HAPBTLEControlPacket
|| __DATA.__objc_data _OBJC_CLASS_$_HAPBTLEReachabilityScanTuple
|| __DATA.__objc_data _OBJC_CLASS_$_HAPBTLERequest
|| __DATA.__objc_data _OBJC_CLASS_$_HAPBTLEResponse
|| __DATA.__objc_data _OBJC_CLASS_$_HAPBTLEServiceSignature
|| __DATA.__objc_data _OBJC_CLASS_$_HAPBTLETransactionIdentifier
|| __DATA.__objc_data _OBJC_CLASS_$_HAPBTLETuple
|| __DATA.__objc_data _OBJC_CLASS_$_HAPBridgedAccessory
|| __DATA.__objc_data _OBJC_CLASS_$_HAPCharacteristic
|| __DATA.__objc_data _OBJC_CLASS_$_HAPCharacteristicConfigurationRequestTuple
|| __DATA.__objc_data _OBJC_CLASS_$_HAPCharacteristicEnableEventCompletionTuple
|| __DATA.__objc_data _OBJC_CLASS_$_HAPCharacteristicEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HAPCharacteristicMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_HAPCharacteristicReadCompletionTuple
|| __DATA.__objc_data _OBJC_CLASS_$_HAPCharacteristicResponseTuple
|| __DATA.__objc_data _OBJC_CLASS_$_HAPCharacteristicWriteRequestTuple
|| __DATA.__objc_data _OBJC_CLASS_$_HAPComponent
|| __DATA.__objc_data _OBJC_CLASS_$_HAPDataValueTransformer
|| __DATA.__objc_data _OBJC_CLASS_$_HAPDeviceID
|| __DATA.__objc_data _OBJC_CLASS_$_HAPDiscoveredBTLEAccessoryServerTuple
|| __DATA.__objc_data _OBJC_CLASS_$_HAPFragmentationPacket
|| __DATA.__objc_data _OBJC_CLASS_$_HAPFragmentationStream
|| __DATA.__objc_data _OBJC_CLASS_$_HAPHTTPClient
|| __DATA.__objc_data _OBJC_CLASS_$_HAPJSONValueTransformer
|| __DATA.__objc_data _OBJC_CLASS_$_HAPKeychainStoreRemovedAccessory
|| __DATA.__objc_data _OBJC_CLASS_$_HAPMetadataConstraints
|| __DATA.__objc_data _OBJC_CLASS_$_HAPPairSetupSession
|| __DATA.__objc_data _OBJC_CLASS_$_HAPPairingUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_HAPProtocolMessages
|| __DATA.__objc_data _OBJC_CLASS_$_HAPRecentlySeenPairedBTLEPeripheralTuple
|| __DATA.__objc_data _OBJC_CLASS_$_HAPRelayAccessory
|| __DATA.__objc_data _OBJC_CLASS_$_HAPRelayActivationClient
|| __DATA.__objc_data _OBJC_CLASS_$_HAPRelayPairingClient
|| __DATA.__objc_data _OBJC_CLASS_$_HAPRelayRequestMessage
|| __DATA.__objc_data _OBJC_CLASS_$_HAPRelayResponseMessage
|| __DATA.__objc_data _OBJC_CLASS_$_HAPRelayStream
|| __DATA.__objc_data _OBJC_CLASS_$_HAPSecuritySession
|| __DATA.__objc_data _OBJC_CLASS_$_HAPSecuritySessionEncryption
|| __DATA.__objc_data _OBJC_CLASS_$_HAPService
|| __DATA.__objc_data _OBJC_CLASS_$_HAPTunneledAccessoryBTLE
|| __DATA.__objc_data _OBJC_CLASS_$_HAPValueTransformer
|| __DATA.__objc_data _OBJC_CLASS_$_HAPWACAccessory
|| __DATA.__objc_data _OBJC_CLASS_$_HAPWACAccessoryClient
|| __DATA.__objc_data _OBJC_CLASS_$__HAPAccessoryServerBTLE100
|| __DATA.__objc_data _OBJC_CLASS_$__HAPAccessoryServerBTLE200
|| __DATA.__objc_data _OBJC_CLASS_$__HAPBTLEDiscoveryContext
|| __DATA.__objc_data _OBJC_METACLASS_$_ATVModel
|| __DATA.__objc_data _OBJC_METACLASS_$_CBConnectionsObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPAccessory
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPAccessoryConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPAccessoryInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPAccessoryProtocolInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPAccessoryServer
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPAccessoryServerBTLE
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPAccessoryServerBrowserWiProxBTLE
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPAccessoryServerIP
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPAccessoryServerRelay
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPAccessoryWiFiConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPAddRemovePairingOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPAuthSession
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPBLEAccessoryCache
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPBLECharacteristicCache
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPBLEPeripheral
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPBLEPeripheralInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPBLEServiceCache
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPBTLECentralManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPBTLECharacteristicSignature
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPBTLEControlOutputStream
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPBTLEControlPacket
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPBTLEReachabilityScanTuple
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPBTLERequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPBTLEResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPBTLEServiceSignature
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPBTLETransactionIdentifier
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPBTLETuple
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPBridgedAccessory
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPCharacteristic
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPCharacteristicConfigurationRequestTuple
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPCharacteristicEnableEventCompletionTuple
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPCharacteristicEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPCharacteristicMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPCharacteristicReadCompletionTuple
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPCharacteristicResponseTuple
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPCharacteristicWriteRequestTuple
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPComponent
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPDataValueTransformer
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPDeviceID
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPDiscoveredBTLEAccessoryServerTuple
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPFragmentationPacket
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPFragmentationStream
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPHTTPClient
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPJSONValueTransformer
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPKeychainStoreRemovedAccessory
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPMetadataConstraints
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPPairSetupSession
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPPairingUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPProtocolMessages
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPRecentlySeenPairedBTLEPeripheralTuple
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPRelayAccessory
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPRelayActivationClient
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPRelayPairingClient
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPRelayRequestMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPRelayResponseMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPRelayStream
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPSecuritySession
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPSecuritySessionEncryption
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPService
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPTunneledAccessoryBTLE
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPValueTransformer
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPWACAccessory
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPWACAccessoryClient
|| __DATA.__objc_data _OBJC_METACLASS_$__HAPAccessoryServerBTLE100
|| __DATA.__objc_data _OBJC_METACLASS_$__HAPAccessoryServerBTLE200
|| __DATA.__objc_data _OBJC_METACLASS_$__HAPBTLEDiscoveryContext
|| __DATA.__objc_ivar _OBJC_IVAR_$_HAPAccessoryServer._identifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_HAPAccessoryServer._lock
|| __DATA.__objc_ivar _OBJC_IVAR_$_HAPAccessoryServer._name
|| __DATA_CONST.__const _CBConnectionsObserverErrorDomain
|| __DATA_CONST.__const _CBUUIDCharacteristicValidRange
|| __DATA_CONST.__const _HAPAttributeDatabaseKey_Accessories
|| __DATA_CONST.__const _HAPAttributeDatabaseKey_AccessoryInstanceID
|| __DATA_CONST.__const _HAPAttributeDatabaseKey_AuthorizationData
|| __DATA_CONST.__const _HAPAttributeDatabaseKey_Characteristics
|| __DATA_CONST.__const _HAPAttributeDatabaseKey_Description
|| __DATA_CONST.__const _HAPAttributeDatabaseKey_Events
|| __DATA_CONST.__const _HAPAttributeDatabaseKey_Format
|| __DATA_CONST.__const _HAPAttributeDatabaseKey_InstanceID
|| __DATA_CONST.__const _HAPAttributeDatabaseKey_LinkedServices
|| __DATA_CONST.__const _HAPAttributeDatabaseKey_Permissions
|| __DATA_CONST.__const _HAPAttributeDatabaseKey_PrepareID
|| __DATA_CONST.__const _HAPAttributeDatabaseKey_Remote
|| __DATA_CONST.__const _HAPAttributeDatabaseKey_ServiceHidden
|| __DATA_CONST.__const _HAPAttributeDatabaseKey_ServicePrimary
|| __DATA_CONST.__const _HAPAttributeDatabaseKey_Services
|| __DATA_CONST.__const _HAPAttributeDatabaseKey_TTL
|| __DATA_CONST.__const _HAPAttributeDatabaseKey_Type
|| __DATA_CONST.__const _HAPAttributeDatabaseKey_Value
|| __DATA_CONST.__const _HAPBaseUUIDString
|| __DATA_CONST.__const _HAPBonjourDomain
|| __DATA_CONST.__const _HAPBonjourServiceType
|| __DATA_CONST.__const _HAPCharacteristicEventNotification
|| __DATA_CONST.__const _HAPCharacteristicFormatType_Array
|| __DATA_CONST.__const _HAPCharacteristicFormatType_Bool
|| __DATA_CONST.__const _HAPCharacteristicFormatType_Data
|| __DATA_CONST.__const _HAPCharacteristicFormatType_Date
|| __DATA_CONST.__const _HAPCharacteristicFormatType_Dictionary
|| __DATA_CONST.__const _HAPCharacteristicFormatType_Float
|| __DATA_CONST.__const _HAPCharacteristicFormatType_Int
|| __DATA_CONST.__const _HAPCharacteristicFormatType_Int16
|| __DATA_CONST.__const _HAPCharacteristicFormatType_Int64
|| __DATA_CONST.__const _HAPCharacteristicFormatType_Int8
|| __DATA_CONST.__const _HAPCharacteristicFormatType_String
|| __DATA_CONST.__const _HAPCharacteristicFormatType_TLV8
|| __DATA_CONST.__const _HAPCharacteristicFormatType_UInt16
|| __DATA_CONST.__const _HAPCharacteristicFormatType_UInt32
|| __DATA_CONST.__const _HAPCharacteristicFormatType_UInt64
|| __DATA_CONST.__const _HAPCharacteristicFormatType_UInt8
|| __DATA_CONST.__const _HAPCharacteristicPropertyName_AdditionalAuthorization
|| __DATA_CONST.__const _HAPCharacteristicPropertyName_Bonjour
|| __DATA_CONST.__const _HAPCharacteristicPropertyName_Events
|| __DATA_CONST.__const _HAPCharacteristicPropertyName_Hidden
|| __DATA_CONST.__const _HAPCharacteristicPropertyName_LegacyHidden
|| __DATA_CONST.__const _HAPCharacteristicPropertyName_Read
|| __DATA_CONST.__const _HAPCharacteristicPropertyName_SecureRead
|| __DATA_CONST.__const _HAPCharacteristicPropertyName_SecureWrite
|| __DATA_CONST.__const _HAPCharacteristicPropertyName_TimedWrite
|| __DATA_CONST.__const _HAPCharacteristicPropertyName_Write
|| __DATA_CONST.__const _HAPCharacteristicPropertyName_WriteResponse
|| __DATA_CONST.__const _HAPCharacteristicUUID_AccessoryIdentifier
|| __DATA_CONST.__const _HAPCharacteristicUUID_Active
|| __DATA_CONST.__const _HAPCharacteristicUUID_AdminOnlyAccess
|| __DATA_CONST.__const _HAPCharacteristicUUID_AirParticulateDensity
|| __DATA_CONST.__const _HAPCharacteristicUUID_AirParticulateSize
|| __DATA_CONST.__const _HAPCharacteristicUUID_AirQuality
|| __DATA_CONST.__const _HAPCharacteristicUUID_ApplicationMatchingIdentifier
|| __DATA_CONST.__const _HAPCharacteristicUUID_AudioFeedback
|| __DATA_CONST.__const _HAPCharacteristicUUID_BatteryLevel
|| __DATA_CONST.__const _HAPCharacteristicUUID_Brightness
|| __DATA_CONST.__const _HAPCharacteristicUUID_CarbonDioxideDetected
|| __DATA_CONST.__const _HAPCharacteristicUUID_CarbonDioxideLevel
|| __DATA_CONST.__const _HAPCharacteristicUUID_CarbonDioxidePeakLevel
|| __DATA_CONST.__const _HAPCharacteristicUUID_CarbonMonoxideDetected
|| __DATA_CONST.__const _HAPCharacteristicUUID_CarbonMonoxideLevel
|| __DATA_CONST.__const _HAPCharacteristicUUID_CarbonMonoxidePeakLevel
|| __DATA_CONST.__const _HAPCharacteristicUUID_Category
|| __DATA_CONST.__const _HAPCharacteristicUUID_ChargingState
|| __DATA_CONST.__const _HAPCharacteristicUUID_ColorTemperature
|| __DATA_CONST.__const _HAPCharacteristicUUID_ContactState
|| __DATA_CONST.__const _HAPCharacteristicUUID_CoolingThreshold
|| __DATA_CONST.__const _HAPCharacteristicUUID_CurrentDoorState
|| __DATA_CONST.__const _HAPCharacteristicUUID_CurrentHeaterCoolerState
|| __DATA_CONST.__const _HAPCharacteristicUUID_CurrentHeatingCooling
|| __DATA_CONST.__const _HAPCharacteristicUUID_CurrentHorizontalTilt
|| __DATA_CONST.__const _HAPCharacteristicUUID_CurrentLightLevel
|| __DATA_CONST.__const _HAPCharacteristicUUID_CurrentLockMechanismState
|| __DATA_CONST.__const _HAPCharacteristicUUID_CurrentPosition
|| __DATA_CONST.__const _HAPCharacteristicUUID_CurrentRelativeHumidity
|| __DATA_CONST.__const _HAPCharacteristicUUID_CurrentSecuritySystemState
|| __DATA_CONST.__const _HAPCharacteristicUUID_CurrentTemperature
|| __DATA_CONST.__const _HAPCharacteristicUUID_CurrentTilt
|| __DATA_CONST.__const _HAPCharacteristicUUID_CurrentTime
|| __DATA_CONST.__const _HAPCharacteristicUUID_CurrentVerticalTilt
|| __DATA_CONST.__const _HAPCharacteristicUUID_DayOfTheWeek
|| __DATA_CONST.__const _HAPCharacteristicUUID_DigitalZoom
|| __DATA_CONST.__const _HAPCharacteristicUUID_FirmwareRevision
|| __DATA_CONST.__const _HAPCharacteristicUUID_HardwareRevision
|| __DATA_CONST.__const _HAPCharacteristicUUID_HeatingThreshold
|| __DATA_CONST.__const _HAPCharacteristicUUID_HoldPosition
|| __DATA_CONST.__const _HAPCharacteristicUUID_Hue
|| __DATA_CONST.__const _HAPCharacteristicUUID_Identify
|| __DATA_CONST.__const _HAPCharacteristicUUID_ImageMirroring
|| __DATA_CONST.__const _HAPCharacteristicUUID_ImageRotation
|| __DATA_CONST.__const _HAPCharacteristicUUID_InUse
|| __DATA_CONST.__const _HAPCharacteristicUUID_InputEvent
|| __DATA_CONST.__const _HAPCharacteristicUUID_IsConfigured
|| __DATA_CONST.__const _HAPCharacteristicUUID_LabelIndex
|| __DATA_CONST.__const _HAPCharacteristicUUID_LabelNamespace
|| __DATA_CONST.__const _HAPCharacteristicUUID_LeakDetected
|| __DATA_CONST.__const _HAPCharacteristicUUID_LinkQuality
|| __DATA_CONST.__const _HAPCharacteristicUUID_LockManagementAutoSecureTimeout
|| __DATA_CONST.__const _HAPCharacteristicUUID_LockManagementControlPoint
|| __DATA_CONST.__const _HAPCharacteristicUUID_LockMechanismLastKnownAction
|| __DATA_CONST.__const _HAPCharacteristicUUID_Logs
|| __DATA_CONST.__const _HAPCharacteristicUUID_MFiPairSetup
|| __DATA_CONST.__const _HAPCharacteristicUUID_Manufacturer
|| __DATA_CONST.__const _HAPCharacteristicUUID_Model
|| __DATA_CONST.__const _HAPCharacteristicUUID_MotionDetected
|| __DATA_CONST.__const _HAPCharacteristicUUID_Mute
|| __DATA_CONST.__const _HAPCharacteristicUUID_Name
|| __DATA_CONST.__const _HAPCharacteristicUUID_NightVision
|| __DATA_CONST.__const _HAPCharacteristicUUID_ObstructionDetected
|| __DATA_CONST.__const _HAPCharacteristicUUID_OccupancyDetected
|| __DATA_CONST.__const _HAPCharacteristicUUID_On
|| __DATA_CONST.__const _HAPCharacteristicUUID_OpticalZoom
|| __DATA_CONST.__const _HAPCharacteristicUUID_OutletInUse
|| __DATA_CONST.__const _HAPCharacteristicUUID_OutputState
|| __DATA_CONST.__const _HAPCharacteristicUUID_PM10Density
|| __DATA_CONST.__const _HAPCharacteristicUUID_PM2_5Density
|| __DATA_CONST.__const _HAPCharacteristicUUID_PairSetup
|| __DATA_CONST.__const _HAPCharacteristicUUID_PairVerify
|| __DATA_CONST.__const _HAPCharacteristicUUID_PairingFeatures
|| __DATA_CONST.__const _HAPCharacteristicUUID_Pairings
|| __DATA_CONST.__const _HAPCharacteristicUUID_PositionState
|| __DATA_CONST.__const _HAPCharacteristicUUID_ProgramMode
|| __DATA_CONST.__const _HAPCharacteristicUUID_Reachable
|| __DATA_CONST.__const _HAPCharacteristicUUID_RelayControlPoint
|| __DATA_CONST.__const _HAPCharacteristicUUID_RelayEnabled
|| __DATA_CONST.__const _HAPCharacteristicUUID_RelayState
|| __DATA_CONST.__const _HAPCharacteristicUUID_RemainingDuration
|| __DATA_CONST.__const _HAPCharacteristicUUID_RotationDirection
|| __DATA_CONST.__const _HAPCharacteristicUUID_RotationSpeed
|| __DATA_CONST.__const _HAPCharacteristicUUID_Saturation
|| __DATA_CONST.__const _HAPCharacteristicUUID_SecuritySystemAlarmType
|| __DATA_CONST.__const _HAPCharacteristicUUID_SelectedStreamConfiguration
|| __DATA_CONST.__const _HAPCharacteristicUUID_SerialNumber
|| __DATA_CONST.__const _HAPCharacteristicUUID_ServiceInstanceID
|| __DATA_CONST.__const _HAPCharacteristicUUID_ServiceSignature
|| __DATA_CONST.__const _HAPCharacteristicUUID_SetDuration
|| __DATA_CONST.__const _HAPCharacteristicUUID_SetupStreamEndpoint
|| __DATA_CONST.__const _HAPCharacteristicUUID_SmokeDetected
|| __DATA_CONST.__const _HAPCharacteristicUUID_SoftwareRevision
|| __DATA_CONST.__const _HAPCharacteristicUUID_StatusActive
|| __DATA_CONST.__const _HAPCharacteristicUUID_StatusFault
|| __DATA_CONST.__const _HAPCharacteristicUUID_StatusJammed
|| __DATA_CONST.__const _HAPCharacteristicUUID_StatusLowBattery
|| __DATA_CONST.__const _HAPCharacteristicUUID_StatusTampered
|| __DATA_CONST.__const _HAPCharacteristicUUID_StreamingStatus
|| __DATA_CONST.__const _HAPCharacteristicUUID_SupportedAudioStreamConfiguration
|| __DATA_CONST.__const _HAPCharacteristicUUID_SupportedRTPConfiguration
|| __DATA_CONST.__const _HAPCharacteristicUUID_SupportedVideoStreamConfiguration
|| __DATA_CONST.__const _HAPCharacteristicUUID_TargetDoorState
|| __DATA_CONST.__const _HAPCharacteristicUUID_TargetHeaterCoolerState
|| __DATA_CONST.__const _HAPCharacteristicUUID_TargetHeatingCooling
|| __DATA_CONST.__const _HAPCharacteristicUUID_TargetHorizontalTilt
|| __DATA_CONST.__const _HAPCharacteristicUUID_TargetLockMechanismState
|| __DATA_CONST.__const _HAPCharacteristicUUID_TargetPosition
|| __DATA_CONST.__const _HAPCharacteristicUUID_TargetRelativeHumidity
|| __DATA_CONST.__const _HAPCharacteristicUUID_TargetSecuritySystemState
|| __DATA_CONST.__const _HAPCharacteristicUUID_TargetTemperature
|| __DATA_CONST.__const _HAPCharacteristicUUID_TargetTilt
|| __DATA_CONST.__const _HAPCharacteristicUUID_TargetVerticalTilt
|| __DATA_CONST.__const _HAPCharacteristicUUID_TemperatureUnits
|| __DATA_CONST.__const _HAPCharacteristicUUID_TimeUpdate
|| __DATA_CONST.__const _HAPCharacteristicUUID_TunnelConnectionTimeout
|| __DATA_CONST.__const _HAPCharacteristicUUID_TunneledAccessoryAdvertising
|| __DATA_CONST.__const _HAPCharacteristicUUID_TunneledAccessoryConnected
|| __DATA_CONST.__const _HAPCharacteristicUUID_TunneledAccessoryStateNumber
|| __DATA_CONST.__const _HAPCharacteristicUUID_ValveType
|| __DATA_CONST.__const _HAPCharacteristicUUID_Version
|| __DATA_CONST.__const _HAPCharacteristicUUID_Volume
|| __DATA_CONST.__const _HAPCharacteristicUnitType_ArcDegrees
|| __DATA_CONST.__const _HAPCharacteristicUnitType_Celsius
|| __DATA_CONST.__const _HAPCharacteristicUnitType_Enum
|| __DATA_CONST.__const _HAPCharacteristicUnitType_Fahrenheit
|| __DATA_CONST.__const _HAPCharacteristicUnitType_Lux
|| __DATA_CONST.__const _HAPCharacteristicUnitType_Percentage
|| __DATA_CONST.__const _HAPCharacteristicUnitType_Seconds
|| __DATA_CONST.__const _HAPConstraintsPropertyName_MaximumLength
|| __DATA_CONST.__const _HAPConstraintsPropertyName_MaximumValue
|| __DATA_CONST.__const _HAPConstraintsPropertyName_MinimumStep
|| __DATA_CONST.__const _HAPConstraintsPropertyName_MinimumValue
|| __DATA_CONST.__const _HAPConstraintsPropertyName_ReportingInterval
|| __DATA_CONST.__const _HAPConstraintsPropertyName_Unit
|| __DATA_CONST.__const _HAPConstraintsPropertyName_ValidValues
|| __DATA_CONST.__const _HAPConstraintsPropertyName_ValidValuesRange
|| __DATA_CONST.__const _HAPDescriptorUUID_CharacteristicInstanceID
|| __DATA_CONST.__const _HAPDescriptorUUID_CharacteristicProperties
|| __DATA_CONST.__const _HAPDescriptorUUID_CharacteristicStepValue
|| __DATA_CONST.__const _HAPErrorDomain
|| __DATA_CONST.__const _HAPHTTPClientErrorDomain
|| __DATA_CONST.__const _HAPProtocolVersionStr
|| __DATA_CONST.__const _HAPQueryStringDelimiter_AccessoryInstanceID
|| __DATA_CONST.__const _HAPQueryStringDelimiter_InstanceIDs
|| __DATA_CONST.__const _HAPQueryStringKey_InstanceIDs
|| __DATA_CONST.__const _HAPRelayCharacteristicAccessoryIDKey
|| __DATA_CONST.__const _HAPRelayCharacteristicAuthDataKey
|| __DATA_CONST.__const _HAPRelayCharacteristicEventsKey
|| __DATA_CONST.__const _HAPRelayCharacteristicInstanceIDKey
|| __DATA_CONST.__const _HAPRelayCharacteristicStatusKey
|| __DATA_CONST.__const _HAPRelayCharacteristicTTLKey
|| __DATA_CONST.__const _HAPRelayCharacteristicValueKey
|| __DATA_CONST.__const _HAPRelayCharacteristicValueResponseKey
|| __DATA_CONST.__const _HAPRelayCharacteristicsKey
|| __DATA_CONST.__const _HAPRelayDiscoveryAttributeDatabaseKey
|| __DATA_CONST.__const _HAPRelayDiscoveryConfigurationNumberKey
|| __DATA_CONST.__const _HAPRelayMessageBodyKey
|| __DATA_CONST.__const _HAPRelayMessageEncryptedKey
|| __DATA_CONST.__const _HAPRelayMessageStatusCodeKey
|| __DATA_CONST.__const _HAPRelayMessageTypeDiscoveryKey
|| __DATA_CONST.__const _HAPRelayMessageTypeIdentifierKey
|| __DATA_CONST.__const _HAPRelayMessageTypeNotificationKey
|| __DATA_CONST.__const _HAPRelayMessageTypePairVerifyKey
|| __DATA_CONST.__const _HAPRelayMessageTypeReadCharacteristicsKey
|| __DATA_CONST.__const _HAPRelayMessageTypeWriteCharacteristicsKey
|| __DATA_CONST.__const _HAPRelayMessageTypeWritePrepareKey
|| __DATA_CONST.__const _HAPRelayMessageVersionKey
|| __DATA_CONST.__const _HAPRelayNotificationCharacteristicsKey
|| __DATA_CONST.__const _HAPRelayNotificationConfigurationNumberKey
|| __DATA_CONST.__const _HAPRelayPrepareIDKey
|| __DATA_CONST.__const _HAPResponseKey_Status
|| __DATA_CONST.__const _HAPServiceType_Lightbulb
|| __DATA_CONST.__const _HAPServiceType_LockMechanism
|| __DATA_CONST.__const _HAPServiceType_SecuritySystem
|| __DATA_CONST.__const _HAPServiceUUID_AccessoryInformation
|| __DATA_CONST.__const _HAPServiceUUID_AccessoryInformation_BTLE
|| __DATA_CONST.__const _HAPServiceUUID_AirPurifier
|| __DATA_CONST.__const _HAPServiceUUID_BridgingState
|| __DATA_CONST.__const _HAPServiceUUID_CameraControl
|| __DATA_CONST.__const _HAPServiceUUID_CameraRTPStreamManagement
|| __DATA_CONST.__const _HAPServiceUUID_Door
|| __DATA_CONST.__const _HAPServiceUUID_Doorbell
|| __DATA_CONST.__const _HAPServiceUUID_Fan
|| __DATA_CONST.__const _HAPServiceUUID_Faucet
|| __DATA_CONST.__const _HAPServiceUUID_GarageDoorOpener
|| __DATA_CONST.__const _HAPServiceUUID_HeaterCooler
|| __DATA_CONST.__const _HAPServiceUUID_HumidifierDehumidifier
|| __DATA_CONST.__const _HAPServiceUUID_IrrigationSystem
|| __DATA_CONST.__const _HAPServiceUUID_Label
|| __DATA_CONST.__const _HAPServiceUUID_Lightbulb
|| __DATA_CONST.__const _HAPServiceUUID_LockManagement
|| __DATA_CONST.__const _HAPServiceUUID_LockMechanism
|| __DATA_CONST.__const _HAPServiceUUID_Microphone
|| __DATA_CONST.__const _HAPServiceUUID_Outlet
|| __DATA_CONST.__const _HAPServiceUUID_Pairing
|| __DATA_CONST.__const _HAPServiceUUID_Pairing_BTLE
|| __DATA_CONST.__const _HAPServiceUUID_ProgrammableSwitch_Stateful
|| __DATA_CONST.__const _HAPServiceUUID_ProgrammableSwitch_Stateless
|| __DATA_CONST.__const _HAPServiceUUID_ProtocolInformation
|| __DATA_CONST.__const _HAPServiceUUID_Relay
|| __DATA_CONST.__const _HAPServiceUUID_SecuritySystem
|| __DATA_CONST.__const _HAPServiceUUID_Sensor_AirQuality
|| __DATA_CONST.__const _HAPServiceUUID_Sensor_Battery
|| __DATA_CONST.__const _HAPServiceUUID_Sensor_CarbonDioxide
|| __DATA_CONST.__const _HAPServiceUUID_Sensor_CarbonMonoxide
|| __DATA_CONST.__const _HAPServiceUUID_Sensor_Contact
|| __DATA_CONST.__const _HAPServiceUUID_Sensor_Humidity
|| __DATA_CONST.__const _HAPServiceUUID_Sensor_Leak
|| __DATA_CONST.__const _HAPServiceUUID_Sensor_Light
|| __DATA_CONST.__const _HAPServiceUUID_Sensor_Motion
|| __DATA_CONST.__const _HAPServiceUUID_Sensor_Occupancy
|| __DATA_CONST.__const _HAPServiceUUID_Sensor_Smoke
|| __DATA_CONST.__const _HAPServiceUUID_Sensor_Temperature
|| __DATA_CONST.__const _HAPServiceUUID_Speaker
|| __DATA_CONST.__const _HAPServiceUUID_Switch
|| __DATA_CONST.__const _HAPServiceUUID_Thermostat
|| __DATA_CONST.__const _HAPServiceUUID_TimeInformation
|| __DATA_CONST.__const _HAPServiceUUID_Tunnel
|| __DATA_CONST.__const _HAPServiceUUID_Valve
|| __DATA_CONST.__const _HAPServiceUUID_VentilationFan
|| __DATA_CONST.__const _HAPServiceUUID_Window
|| __DATA_CONST.__const _HAPServiceUUID_WindowCovering
|| __DATA_CONST.__const _HAPTXTKey_CategoryID
|| __DATA_CONST.__const _HAPTXTKey_ConfigNumber
|| __DATA_CONST.__const _HAPTXTKey_DeviceID
|| __DATA_CONST.__const _HAPTXTKey_FeaturesFlags
|| __DATA_CONST.__const _HAPTXTKey_LeaderMetrics
|| __DATA_CONST.__const _HAPTXTKey_Model
|| __DATA_CONST.__const _HAPTXTKey_ProtocolVersion
|| __DATA_CONST.__const _HAPTXTKey_SetupHash
|| __DATA_CONST.__const _HAPTXTKey_SourceVersion
|| __DATA_CONST.__const _HAPTXTKey_StateNumber
|| __DATA_CONST.__const _HAPTXTKey_StatusFlags
|| __DATA_CONST.__const _HAPURLComponent_Accessories
|| __DATA_CONST.__const _HAPURLComponent_Characteristics
|| __DATA_CONST.__const _HAPURLComponent_Identify
|| __DATA_CONST.__const _HAPURLComponent_Pairings
|| __DATA_CONST.__const _HAPURLComponent_Prepare
|| __DATA_CONST.__const _HAPURLComponent_Resource
|| __DATA_CONST.__const _HAPURLComponent_ResourceImage
|| __DATA_CONST.__const _HAPURLComponent_ResourceImageHeight
|| __DATA_CONST.__const _HAPURLComponent_ResourceImageWidth
|| __DATA_CONST.__const _HAPURLComponent_ResourceRequestReason
|| __DATA_CONST.__const _HAPURLComponent_ResourceType
|| __DATA_CONST.__const _HAPURLComponent_Services
|| __DATA_CONST.__const _HAPUUIDSuffix
|| __DATA_CONST.__const _HAPWriteRequestKey_ResponseValue
|| __DATA_CONST.__const _HMDDidReceiveRemoteMessageWithNoListenerNotification
|| __DATA_CONST.__const _HMErrorCodeNilEventDescription
|| __DATA_CONST.__const _HMErrorDomain
|| __DATA_CONST.__const _kAccessAllowedWhenLockedKey
|| __DATA_CONST.__const _kAccessAllowedWhenLockedUpdatedNotificationKey
|| __DATA_CONST.__const _kAccessoryUniqueIdentifierSeparator
|| __DATA_CONST.__const _kApplyDeviceUnlockKey
|| __DATA_CONST.__const _kAssistantCommandActiveNotification
|| __DATA_CONST.__const _kAssistantCommandNotActiveNotification
|| __DATA_CONST.__const _kCanCacheHomeConfigurationKey
|| __DATA_CONST.__const _kCanUseCachedHomeConfigurationKey
|| __DATA_CONST.__const _kCloudDataSyncInProgressUpdatedNotification
|| __DATA_CONST.__const _kCloudDataSyncTimerExpiredNotification
|| __DATA_CONST.__const _kCloudServerTokenDataResetNotification
|| __DATA_CONST.__const _kConfigTestingModeKey
|| __DATA_CONST.__const _kControllerKeyPairGeneratedNotification
|| __DATA_CONST.__const _kFilenameKey
|| __DATA_CONST.__const _kHAPMetadataKey
|| __DATA_CONST.__const _kHMMetadataKey
|| __DATA_CONST.__const _kHomeCountKey
|| __DATA_CONST.__const _kHomeKitAppInForegroundNotification
|| __DATA_CONST.__const _kHomeKitAppTerminatedNotification
|| __DATA_CONST.__const _kMetadataAllowAssociatedServiceKey
|| __DATA_CONST.__const _kMetadataAllowableSecuringWritesKey
|| __DATA_CONST.__const _kMetadataAssistantKey
|| __DATA_CONST.__const _kMetadataBTLE_ShortUUIDKey
|| __DATA_CONST.__const _kMetadataBlacklistFromApplicationsKey
|| __DATA_CONST.__const _kMetadataBlacklistKey
|| __DATA_CONST.__const _kMetadataBulletinBoardEnabledKey
|| __DATA_CONST.__const _kMetadataCategoriesKey
|| __DATA_CONST.__const _kMetadataCharacteristicsKey
|| __DATA_CONST.__const _kMetadataCoalesceNotificationsKey
|| __DATA_CONST.__const _kMetadataCompletenessKey
|| __DATA_CONST.__const _kMetadataDefaultDescriptionKey
|| __DATA_CONST.__const _kMetadataFormatKey
|| __DATA_CONST.__const _kMetadataHAPBaseUUIDSuffixKey
|| __DATA_CONST.__const _kMetadataIdentifierKey
|| __DATA_CONST.__const _kMetadataLegacyV3CloudDataKey
|| __DATA_CONST.__const _kMetadataLegacyV3IDSDataKey
|| __DATA_CONST.__const _kMetadataLinkedServicesKey
|| __DATA_CONST.__const _kMetadataLocalizationKey
|| __DATA_CONST.__const _kMetadataMaxLengthKey
|| __DATA_CONST.__const _kMetadataMaxValueKey
|| __DATA_CONST.__const _kMetadataMinLengthKey
|| __DATA_CONST.__const _kMetadataMinValueKey
|| __DATA_CONST.__const _kMetadataNotificationAutoEnabledKey
|| __DATA_CONST.__const _kMetadataNotificationKey
|| __DATA_CONST.__const _kMetadataOptionalKey
|| __DATA_CONST.__const _kMetadataOutValuesKey
|| __DATA_CONST.__const _kMetadataPlistDictionaryKey
|| __DATA_CONST.__const _kMetadataPowerOnWriteFilter
|| __DATA_CONST.__const _kMetadataPropertiesKey
|| __DATA_CONST.__const _kMetadataPropertyBitPositionKey
|| __DATA_CONST.__const _kMetadataReadKey
|| __DATA_CONST.__const _kMetadataReadWriteKey
|| __DATA_CONST.__const _kMetadataRequiredKey
|| __DATA_CONST.__const _kMetadataRequiresDeviceUnlockKey
|| __DATA_CONST.__const _kMetadataSchemaVersionKey
|| __DATA_CONST.__const _kMetadataServicePropertiesKey
|| __DATA_CONST.__const _kMetadataServicesKey
|| __DATA_CONST.__const _kMetadataShortUUIDKey
|| __DATA_CONST.__const _kMetadataStepValueKey
|| __DATA_CONST.__const _kMetadataSupportsAuthorizationDataKey
|| __DATA_CONST.__const _kMetadataSupportsLocalizationKey
|| __DATA_CONST.__const _kMetadataUUIDKey
|| __DATA_CONST.__const _kMetadataUnitsKey
|| __DATA_CONST.__const _kMetadataValidValuesKey
|| __DATA_CONST.__const _kMetadataValuesKey
|| __DATA_CONST.__const _kMetadataVersionKey
|| __DATA_CONST.__const _kMetadataWriteKey
|| __DATA_CONST.__const _kNetworkIdentifierKey
|| __DATA_CONST.__const _kNoActiveHomeKitAppNotification
|| __DATA_CONST.__const _kPrimaryAccessoryInstanceIDString
|| __DATA_CONST.__const _kProvisioningStatusKey
|| __DATA_CONST.__const _kRemoteUsersDeregisteredKey
|| __DATA_CONST.__const _kResidentProvisioningStatusChangedNotificationKey
|| __DATA_CONST.__const _kUpdateAccessAllowedWhenLockedRequestKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HAPAccessoryServerBrowser
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HAPAccessoryServerBrowserBTLE
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HAPAccessoryServerBrowserIP
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HAPAccessoryServerBrowserRelay
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HAPKeychainItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HAPMetadata
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HAPMetadataCharacteristic
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HAPMetadataCharacteristicValue
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HAPMetadataProperty
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HAPMetadataService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HAPMetadataTuple
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HAPMetadataUnit
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HAPPairingIdentity
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HAPSystemKeychainStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HAPWACAccessoryBrowser
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HAPAccessoryServerBrowser
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HAPAccessoryServerBrowserBTLE
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HAPAccessoryServerBrowserIP
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HAPAccessoryServerBrowserRelay
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HAPKeychainItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HAPMetadata
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HAPMetadataCharacteristic
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HAPMetadataCharacteristicValue
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HAPMetadataProperty
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HAPMetadataService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HAPMetadataTuple
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HAPMetadataUnit
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HAPPairingIdentity
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HAPSystemKeychainStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HAPWACAccessoryBrowser
|| __TEXT.__const _BANDWIDTH_PERCENT_CAP
|| __TEXT.__const _HAPAccessoryServerRelayMaximumReachabilityProbeTimeInterval
|| __TEXT.__const _HAPAccessoryServerRelayMinimumReachabilityProbeTimeInterval
|| __TEXT.__const _HAPAccessoryServerRelayReachabilityProbeFactor
|| __TEXT.__const _HAPBonjourEventProcessDelayTime
|| __TEXT.__const _HAPBonjourEventProcessTick
|| __TEXT.__const _HAPEncryption256BitKeySizeBytes
|| __TEXT.__const _HAPEncryptionNonceSizeBytes
|| __TEXT.__const _HAPTunnelledAccessoryBTLEMaximumVerificationRetryTimeInterval
|| __TEXT.__const _HAPTunnelledAccessoryBTLEMinimumVerificationRetryTimeInterval
|| __TEXT.__const _HAPTunnelledAccessoryBTLEVerificationRetryFactor
|| __TEXT.__const _HAPWACScanStopCheckInterval
|| __TEXT.__const _kBandwidthPercentCap
|| __TEXT.__const _kBluetoothGSNMaxValue
|| __TEXT.__const _kHAPAccessoryConnectionLifetimeInSeconds
|| __TEXT.__const _kHAPAccessoryConnectionLifetimeLeewayInMilliseconds
|| __TEXT.__const _kHAPAccessoryConnectionTimeoutInSeconds
|| __TEXT.__const _kHAPAccessoryConnectionTimeoutLeewayInMilliseconds
|| __TEXT.__const _kHAPAccessoryPairSetupConnectionLifetimeInSeconds
|| __TEXT.__const _kHAPBTLELostAccessoryTimeoutInSeconds
|| __TEXT.__const _kHAPBTLELostAccessoryTimeoutLeewayInMilliseconds
|| __TEXT.__const _kHAPBTLETargetedScanTimeoutInSeconds
|| __TEXT.__const _kHAPBTLETargetedScanTimeoutLeewayInMilliseconds
|| __TEXT.__const _kHAPDefaultMaxLengthValue
|| __TEXT.__const _kHAPHTTPClientHTTPRequestTimeoutSeconds
|| __TEXT.__const _kHAPHTTPClientTCPConnectionTimeoutSeconds
|| __TEXT.__const _kHAPMaxAllowedMaxLengthValue
|| __TEXT.__const _kHAPMaxAllowedTypeNameLength
|| __TEXT.__const _kHAPMaximumAccessoriesPerBridge
|| __TEXT.__const _kHAPMaximumCharacteristicsPerService
|| __TEXT.__const _kHAPMaximumServicesPerAccessory
|| __TEXT.__const _kHAPNewAccessoryAvailabilityTimeoutInSeconds
|| __TEXT.__const _kHAPPairingsCharacteristicDummyInstanceID
|| __TEXT.__const _kHAPPrimaryAccessoryInstanceID
|| __TEXT.__const _kMaxBandwidthA2DP
|| __TEXT.__const _kMaxBandwidthBTGC
|| __TEXT.__const _kMaxBandwidthBTKB
|| __TEXT.__const _kMaxBandwidthEAcc
|| __TEXT.__const _kMaxBandwidthHK
|| __TEXT.__const _kMaxBandwidthLEAcc
|| __TEXT.__const _kMaxBandwidthLERemote
|| __TEXT.__const _kMinBandwidthA2DP
|| __TEXT.__const _kMinBandwidthBTGC
|| __TEXT.__const _kMinBandwidthBTKB
|| __TEXT.__const _kMinBandwidthEAcc
|| __TEXT.__const _kMinBandwidthHK
|| __TEXT.__const _kMinBandwidthLEAcc
|| __TEXT.__const _kMinBandwidthLERemote
|| __TEXT.__text _HAPAccessoryHasPairings
|| __TEXT.__text _HAPAuthFeaturesToString
|| __TEXT.__text _HAPAuthMethodToString
|| __TEXT.__text _HAPBTLEControlTypeString
|| __TEXT.__text _HAPCharacteristicFormatFromString
|| __TEXT.__text _HAPCharacteristicFormatToString
|| __TEXT.__text _HAPCharacteristicUnitFromString
|| __TEXT.__text _HAPCharacteristicUnitToString
|| __TEXT.__text _HAPDispatchQueueName
|| __TEXT.__text _HAPErrorCodeFromHAPBLEStatusErrorCode
|| __TEXT.__text _HAPGetPreferredAuthMethod
|| __TEXT.__text _HAPHTTPSerializationTypeDescription
|| __TEXT.__text _HAPWACWiFiBandToString
|| __TEXT.__text _HMErrorCodeFromHAPErrorCode
|| __TEXT.__text _HMErrorFromHAPIPStatusErrorCode
|| __TEXT.__text _HMErrorFromOSStatus
|| __TEXT.__text __HAPAccessoryServerBTLEStateDescription
|| __TEXT.__text __hasValidPropertiesForType
|| __TEXT.__text __parseAccessoryInformationServiceForAccessory
|| __TEXT.__text __parseLinkedServices
|| __TEXT.__text __parseSerializedAccessory
|| __TEXT.__text __parseServiceProperties
|| __TEXT.__text _arraysAreNotEqualNilSafe
|| __TEXT.__text _characteristicPropertiesString
|| __TEXT.__text _compareStateNumberWithRollover
|| __TEXT.__text _errorAsString
|| __TEXT.__text _isValidInstanceID
|| __TEXT.__text _isValidTypeName
|| __TEXT.__text _localizedDescriptionKeyForError
|| __TEXT.__text _mapInternalCameraErrorCodes
|| __TEXT.__text _numbersAreNotEqualNilSafe
|| __TEXT.__text _servicePropertiesString
|| __TEXT.__text _sizeForHAPCharacteristicFormat
|| __TEXT.__text _stringsAreNotEqualNilSafe
|| __TEXT.__text _validateAndNormalizeUUIDString
__ CloudServices: _OBJC_CLASS_$_SecureBackup
__ CoreAnalytics: _AnalyticsSendEventLazy
__ CoreBluetooth: _CBAdvertisementDataLocalNameKey
__ CoreBluetooth: _CBAdvertisementDataManufacturerDataKey
__ CoreBluetooth: _CBAdvertisementDataServiceDataKey
__ CoreBluetooth: _CBCentralManagerScanOptionActive
__ CoreBluetooth: _CBCentralManagerScanOptionAllowDuplicatesKey
__ CoreBluetooth: _CBCentralManagerScanOptionScanInterval
__ CoreBluetooth: _CBCentralManagerScanOptionScanWindow
__ CoreBluetooth: _CBErrorDomain
__ CoreBluetooth: _CBManagerIsPrivilegedDaemonKey
__ CoreBluetooth: _CBUUIDAppleAccessoryReconnectServiceString
__ CoreBluetooth: _CBUUIDAppleMediaServiceString
__ CoreBluetooth: _CBUUIDAppleNotificationCenterServiceString
__ CoreBluetooth: _CBUUIDBatteryServiceString
__ CoreBluetooth: _CBUUIDCharacteristicFormatString
__ CoreBluetooth: _CBUUIDCharacteristicUserDescriptionString
__ CoreBluetooth: _CBUUIDContinuityServiceString
__ CoreBluetooth: _CBUUIDDeviceInformationServiceString
__ CoreBluetooth: _CBUUIDGenericAccessProfileString
__ CoreBluetooth: _CBUUIDGenericAttributeProfileString
__ CoreBluetooth: _OBJC_CLASS_$_CBCentralManager
__ CoreBluetooth: _OBJC_CLASS_$_CBCharacteristic
__ CoreBluetooth: _OBJC_CLASS_$_CBService
__ CoreBluetooth: _OBJC_CLASS_$_CBUUID
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetTypeID
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFDataCreate
__ CoreFoundation: _CFDataCreateCopy
__ CoreFoundation: _CFDataGetTypeID
__ CoreFoundation: _CFDateGetTypeID
__ CoreFoundation: _CFDictionaryAddValue
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionaryGetTypeID
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFNumberGetValue
__ CoreFoundation: _CFNumberIsFloatType
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFStringCreateCopy
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__
__ CoreFoundation: ___NSDictionary0__
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanFalse
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ CoreUtils: _BonjourBrowser_Create
__ CoreUtils: _BonjourBrowser_SetDispatchQueue
__ CoreUtils: _BonjourBrowser_SetEventHandlerBlock
__ CoreUtils: _BonjourBrowser_Start
__ CoreUtils: _BonjourBrowser_Stop
__ CoreUtils: _BonjourDevice_CopyCFString
__ CoreUtils: _BonjourDevice_GetDNSName
__ CoreUtils: _BonjourDevice_Reconfirm
__ CoreUtils: _CFDictionaryGetTypedValue
__ CoreUtils: _DataToHexCStringEx
__ CoreUtils: _DebugGetErrorString
__ CoreUtils: _HTTPClientCreate
__ CoreUtils: _HTTPClientGetPeerAddress
__ CoreUtils: _HTTPClientInvalidate
__ CoreUtils: _HTTPClientSendMessage
__ CoreUtils: _HTTPClientSetDebugDelegate
__ CoreUtils: _HTTPClientSetDelegate
__ CoreUtils: _HTTPClientSetDestination
__ CoreUtils: _HTTPClientSetDispatchQueue
__ CoreUtils: _HTTPClientSetFlags
__ CoreUtils: _HTTPClientSetTimeout
__ CoreUtils: _HTTPClientSetTransportDelegate
__ CoreUtils: _HTTPGetHeaderField
__ CoreUtils: _HTTPGetReasonPhrase
__ CoreUtils: _HTTPHeader_InitRequest
__ CoreUtils: _HTTPHeader_SetField
__ CoreUtils: _HTTPMessageCreate
__ CoreUtils: _HTTPMessageSetBody
__ CoreUtils: _HTTPMessageSetCompletionBlock
__ CoreUtils: _HardwareAddressToCString
__ CoreUtils: _HexToData
__ CoreUtils: _IsAppleTV
__ CoreUtils: _NetTransportChaCha20Poly1305Configure
__ CoreUtils: _NormalizeUUIDString
__ CoreUtils: _OBJC_CLASS_$_CUWiFiScanner
__ CoreUtils: _PairingSessionCopyProperty
__ CoreUtils: _PairingSessionCreate
__ CoreUtils: _PairingSessionDeriveKey
__ CoreUtils: _PairingSessionExchange
__ CoreUtils: _PairingSessionGetPeerFlags
__ CoreUtils: _PairingSessionGetResumeInfo
__ CoreUtils: _PairingSessionSetEventHandler
__ CoreUtils: _PairingSessionSetFlags
__ CoreUtils: _PairingSessionSetIdentifier
__ CoreUtils: _PairingSessionSetMTU
__ CoreUtils: _PairingSessionSetProperty
__ CoreUtils: _PairingSessionSetResumeInfo
__ CoreUtils: _PairingSessionSetSetupCode
__ CoreUtils: _SNScanF
__ CoreUtils: _SockAddrToString
__ CoreUtils: _TLV8BufferAppend
__ CoreUtils: _TLV8BufferAppendUInt64
__ CoreUtils: _TLV8BufferDetach
__ CoreUtils: _TLV8BufferFree
__ CoreUtils: _TLV8BufferInit
__ CoreUtils: _TLV8Get
__ CoreUtils: _TLV8GetBytes
__ CoreUtils: _TLV8GetOrCopyCoalesced
__ CoreUtils: _TLV8GetUInt64
__ CoreUtils: _TextToHardwareAddress
__ CoreUtils: _WiFiCopyCurrentNetworkInfoEx
__ CoreUtils: _WiFiJoinNetwork
__ CoreUtils: _WiFiRestoreNetwork
__ CoreUtils: __HTTPClientSetProperty
__ CoreUtils: _cced25519_make_key_pair_compat
__ CoreUtils: _chacha20_poly1305_decrypt_all_64x64
__ CoreUtils: _chacha20_poly1305_decrypt_all_64x64_ex
__ CoreUtils: _chacha20_poly1305_encrypt_all_64x64
__ CoreUtils: _strnicmp_prefix
__ CoreUtils: _strnicmpx
__ EasyConfig: _EasyConfigKey_AllowPairing
__ EasyConfig: _EasyConfigKey_CountryCode
__ EasyConfig: _EasyConfigKey_DeviceID
__ EasyConfig: _EasyConfigKey_Flags
__ EasyConfig: _EasyConfigKey_Name
__ EasyConfig: _EasyConfigKey_ReasonError
__ EasyConfig: _EasyConfigKey_WiFiPSK
__ EasyConfig: _EasyConfigKey_WiFiSSID
__ EasyConfig: _OBJC_CLASS_$_EasyConfigDevice
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSLocalizedRecoverySuggestionErrorKey
__ Foundation: _NSOSStatusErrorDomain
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNetService
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ HMFoundation: _HMFBooleanToString
__ HMFoundation: _HMFEqualObjects
__ HMFoundation: _HMFGetLogCategory
__ HMFoundation: _HMFGetLogIdentifier
__ HMFoundation: _HMFHomeKitLoggingSubsystem
__ HMFoundation: _HMFMethodDescription
__ HMFoundation: _HMFPairingKeyLength
__ HMFoundation: _OBJC_CLASS_$_HMFActivity
__ HMFoundation: _OBJC_CLASS_$_HMFBlockOperation
__ HMFoundation: _OBJC_CLASS_$_HMFExponentialBackoffTimer
__ HMFoundation: _OBJC_CLASS_$_HMFLogCategory
__ HMFoundation: _OBJC_CLASS_$_HMFNetAddress
__ HMFoundation: _OBJC_CLASS_$_HMFNetMonitor
__ HMFoundation: _OBJC_CLASS_$_HMFNetService
__ HMFoundation: _OBJC_CLASS_$_HMFOSTransaction
__ HMFoundation: _OBJC_CLASS_$_HMFObject
__ HMFoundation: _OBJC_CLASS_$_HMFPairingIdentity
__ HMFoundation: _OBJC_CLASS_$_HMFPairingKey
__ HMFoundation: _OBJC_CLASS_$_HMFPowerLogger
__ HMFoundation: _OBJC_CLASS_$_HMFPreferences
__ HMFoundation: _OBJC_CLASS_$_HMFSystemInfo
__ HMFoundation: _OBJC_CLASS_$_HMFTimer
__ HMFoundation: _OBJC_CLASS_$_HMFUnfairLock
__ HMFoundation: _OBJC_CLASS_$_HMFVersion
__ HMFoundation: _OBJC_METACLASS_$_HMFObject
__ HMFoundation: _OBJC_METACLASS_$_HMFPairingIdentity
__ HMFoundation: _checkMatchingSetupHash
__ HMFoundation: _kDumpStateKeychainItemKey
__ HMFoundation: _randomDataWithLength
__ MobileBluetooth: _BTDeviceGetConnectedServices
__ MobileBluetooth: _BTDeviceGetDeviceId
__ MobileBluetooth: _BTLocalDeviceGetConnectable
__ MobileBluetooth: _BTLocalDeviceGetConnectedDevices
__ MobileBluetooth: _BTLocalDeviceGetDefault
__ MobileBluetooth: _BTLocalDeviceGetDiscoverable
__ MobileBluetooth: _BTLocalDeviceGetModulePower
__ MobileBluetooth: _BTLocalDeviceGetScanning
__ MobileBluetooth: _BTSessionAttachWithQueue
__ MobileBluetooth: _BTSessionDetachWithQueue
__ MobileWiFi: _WiFiManagerClientCreate
__ MobileWiFi: _WiFiManagerClientRemoveNetwork
__ MobileWiFi: _WiFiNetworkDisableAutoJoinUntilFirstUserJoin
__ MobileWiFi: _WiFiNetworkGetOperatingBand
__ Security: _SecCMSCertificatesOnlyMessageCopyCertificates
__ Security: _SecCertificateGetBytePtr
__ Security: _SecCertificateGetLength
__ Security: _SecCertificateGetTypeID
__ Security: _SecItemAdd
__ Security: _SecItemCopyMatching
__ Security: _SecItemDelete
__ Security: _SecItemUpdate
__ Security: _kCKKSViewHome
__ Security: _kSOSViewHomeKit
__ Security: _kSecAttrAccessGroup
__ Security: _kSecAttrAccessible
__ Security: _kSecAttrAccessibleAlways
__ Security: _kSecAttrAccount
__ Security: _kSecAttrCreationDate
__ Security: _kSecAttrDescription
__ Security: _kSecAttrGeneric
__ Security: _kSecAttrIsInvisible
__ Security: _kSecAttrLabel
__ Security: _kSecAttrService
__ Security: _kSecAttrSyncViewHint
__ Security: _kSecAttrSynchronizable
__ Security: _kSecAttrSynchronizableAny
__ Security: _kSecAttrType
__ Security: _kSecClass
__ Security: _kSecClassGenericPassword
__ Security: _kSecMatchLimit
__ Security: _kSecMatchLimitAll
__ Security: _kSecReturnAttributes
__ Security: _kSecReturnData
__ Security: _kSecReturnPersistentRef
__ Security: _kSecUseTombstones
__ Security: _kSecValueData
__ Security: _kSecValuePersistentRef
__ WirelessProximity: _OBJC_CLASS_$_WPHomeKit
__ WirelessProximity: _WPHomeKitScanDutyCycle
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___strlcpy_chk
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dispatch_walltime
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _getprogname
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memset_s
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _strncpy
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
HAPAuthSession : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit <HMFLogging>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  unsigned long currentState
 @property  unsigned char currentTID
 @property  NSNumber *instanceId
 @property  NSData *token1
 @property  NSData *token2
 @property  NSUUID *provisionUUID
 @property  <HAPAuthSessionDelegate> *delegate
 @property  long long role
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPAuthSession logCategory]

  // instance methods
  -[HAPAuthSession delegate]
  -[HAPAuthSession role]
  -[HAPAuthSession .cxx_destruct]
  -[HAPAuthSession currentState]
  -[HAPAuthSession workQueue]
  -[HAPAuthSession setCurrentState:]
  -[HAPAuthSession _resetSession]
  -[HAPAuthSession setInstanceId:]
  -[HAPAuthSession instanceId]
  -[HAPAuthSession setToken2:]
  -[HAPAuthSession setToken1:]
  -[HAPAuthSession _handleAuthExchangeData:withHeader:]
  -[HAPAuthSession _sendTokenRequest]
  -[HAPAuthSession _handleTokenResponse:withHeader:]
  -[HAPAuthSession _handleTokenUpdateResponse:withHeader:]
  -[HAPAuthSession provisionUUID]
  -[HAPAuthSession token1]
  -[HAPAuthSession _reportAuthFailure]
  -[HAPAuthSession setCurrentTID:]
  -[HAPAuthSession currentTID]
  -[HAPAuthSession setProvisionUUID:]
  -[HAPAuthSession _sendTokenUpdateRequest:]
  -[HAPAuthSession initWithRole:instanceId:delegate:]
  -[HAPAuthSession resetSession]
  -[HAPAuthSession handleAuthExchangeData:withHeader:]
  -[HAPAuthSession continueAuthAfterValidation:]
  -[HAPAuthSession sendTokenUpdateRequest:]
  -[HAPAuthSession getToken:uuid:]
  -[HAPAuthSession token2]


HAPBLEPeripheralInfo : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit <NSSecureCoding>
 @property  unsigned long advertisedProtocolVersion
 @property  unsigned long previousProtocolVersion
 @property  unsigned long resumeSessionId
 @property  NSNumber *stateNumber
 @property  NSString *accessoryName
 @property  NSData *broadcastKey
 @property  double keyUpdatedTime
 @property  NSNumber *keyUpdatedStateNumber
 @property  NSUUID *peripheralUUID
 @property  double lastSeen
 @property  NSNumber *statusFlags
 @property  NSNumber *configNumber
 @property  NSNumber *categoryIdentifier

  // class methods
  +[HAPBLEPeripheralInfo supportsSecureCoding]

  // instance methods
  -[HAPBLEPeripheralInfo isEqual:]
  -[HAPBLEPeripheralInfo encodeWithCoder:]
  -[HAPBLEPeripheralInfo initWithCoder:]
  -[HAPBLEPeripheralInfo .cxx_destruct]
  -[HAPBLEPeripheralInfo accessoryName]
  -[HAPBLEPeripheralInfo statusFlags]
  -[HAPBLEPeripheralInfo categoryIdentifier]
  -[HAPBLEPeripheralInfo lastSeen]
  -[HAPBLEPeripheralInfo setAccessoryName:]
  -[HAPBLEPeripheralInfo advertisedProtocolVersion]
  -[HAPBLEPeripheralInfo setPreviousProtocolVersion:]
  -[HAPBLEPeripheralInfo setAdvertisedProtocolVersion:]
  -[HAPBLEPeripheralInfo setResumeSessionId:]
  -[HAPBLEPeripheralInfo setStateNumber:]
  -[HAPBLEPeripheralInfo broadcastKey]
  -[HAPBLEPeripheralInfo setBroadcastKey:]
  -[HAPBLEPeripheralInfo setKeyUpdatedTime:]
  -[HAPBLEPeripheralInfo setKeyUpdatedStateNumber:]
  -[HAPBLEPeripheralInfo peripheralUUID]
  -[HAPBLEPeripheralInfo previousProtocolVersion]
  -[HAPBLEPeripheralInfo resumeSessionId]
  -[HAPBLEPeripheralInfo stateNumber]
  -[HAPBLEPeripheralInfo configNumber]
  -[HAPBLEPeripheralInfo keyUpdatedTime]
  -[HAPBLEPeripheralInfo keyUpdatedStateNumber]
  -[HAPBLEPeripheralInfo initWithPeripheralInfo:advertisedProtocolVersion:previousProtocolVersion:resumeSessionId:lastSeen:statusFlags:stateNumber:configNumber:categoryIdentifier:accessoryName:]
  -[HAPBLEPeripheralInfo updateProtocolVersion:]
  -[HAPBLEPeripheralInfo updateResumeSessionId:]
  -[HAPBLEPeripheralInfo updateStateNumber:]
  -[HAPBLEPeripheralInfo saveBroadcastKey:keyUpdatedStateNumber:updatedTime:]
  -[HAPBLEPeripheralInfo updateBroadcastKey:]
  -[HAPBLEPeripheralInfo updateAccessoryName:]


HAPBLECharacteristicCache : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit <NSSecureCoding>
 @property  unsigned long characteristicProperties
 @property  HAPCharacteristicMetadata *characteristicMetadata
 @property  NSUUID *characteristicUUID
 @property  NSNumber *characteristicInstanceId

  // class methods
  +[HAPBLECharacteristicCache supportsSecureCoding]

  // instance methods
  -[HAPBLECharacteristicCache isEqual:]
  -[HAPBLECharacteristicCache encodeWithCoder:]
  -[HAPBLECharacteristicCache initWithCoder:]
  -[HAPBLECharacteristicCache .cxx_destruct]
  -[HAPBLECharacteristicCache characteristicUUID]
  -[HAPBLECharacteristicCache characteristicInstanceId]
  -[HAPBLECharacteristicCache characteristicProperties]
  -[HAPBLECharacteristicCache setCharacteristicProperties:]
  -[HAPBLECharacteristicCache characteristicMetadata]
  -[HAPBLECharacteristicCache setCharacteristicMetadata:]
  -[HAPBLECharacteristicCache initWithCharacteristicUUID:instanceId:characteristicProperties:characteristicMetadata:]
  -[HAPBLECharacteristicCache updateWithCharacteristic:]


HAPBLEServiceCache : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit <NSSecureCoding>
 @property  unsigned long serviceInstanceOrder
 @property  unsigned long serviceProperties
 @property  NSArray *linkedServices
 @property  NSMutableArray *cachedCharacteristics
 @property  NSUUID *serviceUUID
 @property  NSNumber *serviceInstanceId

  // class methods
  +[HAPBLEServiceCache supportsSecureCoding]

  // instance methods
  -[HAPBLEServiceCache isEqual:]
  -[HAPBLEServiceCache encodeWithCoder:]
  -[HAPBLEServiceCache initWithCoder:]
  -[HAPBLEServiceCache .cxx_destruct]
  -[HAPBLEServiceCache updateWithService:]
  -[HAPBLEServiceCache serviceUUID]
  -[HAPBLEServiceCache setServiceProperties:]
  -[HAPBLEServiceCache serviceProperties]
  -[HAPBLEServiceCache linkedServices]
  -[HAPBLEServiceCache updateWithCharacteristic:]
  -[HAPBLEServiceCache serviceInstanceId]
  -[HAPBLEServiceCache serviceInstanceOrder]
  -[HAPBLEServiceCache setServiceInstanceOrder:]
  -[HAPBLEServiceCache setLinkedServices:]
  -[HAPBLEServiceCache cachedCharacteristics]
  -[HAPBLEServiceCache setCachedCharacteristics:]
  -[HAPBLEServiceCache initWithServiceUUID:instanceId:instanceOrder:serviceProperties:linkedServices:]


HAPBLEAccessoryCache : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit <NSSecureCoding>
 @property  HAPBLEPeripheralInfo *peripheralInfo
 @property  NSString *pairingIdentifier
 @property  NSMutableArray *cachedServices

  // class methods
  +[HAPBLEAccessoryCache supportsSecureCoding]

  // instance methods
  -[HAPBLEAccessoryCache isEqual:]
  -[HAPBLEAccessoryCache encodeWithCoder:]
  -[HAPBLEAccessoryCache initWithCoder:]
  -[HAPBLEAccessoryCache .cxx_destruct]
  -[HAPBLEAccessoryCache updateWithService:]
  -[HAPBLEAccessoryCache pairingIdentifier]
  -[HAPBLEAccessoryCache peripheralInfo]
  -[HAPBLEAccessoryCache setPeripheralInfo:]
  -[HAPBLEAccessoryCache cachedServices]
  -[HAPBLEAccessoryCache initWithPairingIdentifier:]
  -[HAPBLEAccessoryCache updateWithPeripheralInfo:]
  -[HAPBLEAccessoryCache getCachedServiceWithUUID:]


HAPBTLEControlPacket : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
 @property  unsigned char type
 @property  HAPBTLETransactionIdentifier *transactionIdentifier
 @property  NSData *payload
 @property  BOOL continuationPacket

  // class methods
  +[HAPBTLEControlPacket shortDescription]
  +[HAPBTLEControlPacket packetWithSerializedData:error:]

  // instance methods
  -[HAPBTLEControlPacket init]
  -[HAPBTLEControlPacket type]
  -[HAPBTLEControlPacket .cxx_destruct]
  -[HAPBTLEControlPacket serialize]
  -[HAPBTLEControlPacket payload]
  -[HAPBTLEControlPacket shortDescription]
  -[HAPBTLEControlPacket descriptionWithPointer:]
  -[HAPBTLEControlPacket transactionIdentifier]
  -[HAPBTLEControlPacket initWithControlType:transactionIdentifier:continuationPacket:packetPayload:maximumLength:]
  -[HAPBTLEControlPacket isContinuationPacket]


HAPDeviceID : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSData *data
 @property  NSString *deviceIDString

  // class methods
  +[HAPDeviceID supportsSecureCoding]

  // instance methods
  -[HAPDeviceID init]
  -[HAPDeviceID isEqual:]
  -[HAPDeviceID copyWithZone:]
  -[HAPDeviceID encodeWithCoder:]
  -[HAPDeviceID initWithCoder:]
  -[HAPDeviceID .cxx_destruct]
  -[HAPDeviceID data]
  -[HAPDeviceID deviceIDString]
  -[HAPDeviceID initWithDeviceIDData:]
  -[HAPDeviceID isEqualToDeviceID:]
  -[HAPDeviceID initWithDeviceIDString:]


HAPDataValueTransformer : HAPValueTransformer
  // class methods
  +[HAPDataValueTransformer initialize]
  +[HAPDataValueTransformer isValidFormat:]
  +[HAPDataValueTransformer expectedTransformedClassForFormat:]
  +[HAPDataValueTransformer defaultDataValueTransformer]

  // instance methods
  -[HAPDataValueTransformer transformedValue:format:error:]
  -[HAPDataValueTransformer reverseTransformedValue:format:error:]


HAPAccessoryServerIP : HAPAccessoryServer <HAPHTTPClientDelegate, HAPHTTPClientDebugDelegate, HMFTimerDelegate, HAPAuthSessionDelegate, HMFNetMonitorDelegate>
 @property  NSDictionary *bonjourDeviceInfo
 @property  BOOL hasUpdatedBonjour
 @property  HAPAccessoryServerBrowserIP *browser
 @property  NSArray *ipServices
 @property  NSMutableArray *queuedOperations
 @property  HAPAccessory *primaryAccessoryForServer
 @property  NSString *model
 @property  NSString *sourceVersion
 @property  unsigned long statusFlags
 @property  HAPHTTPClient *httpClient
 @property  HAPAuthSession *authSession
 @property  HAPAccessoryProtocolInfo *authenticatedProtocolInfo
 @property  BOOL authenticated
 @property  NSString *productData
 @property  @? pairVerifyCompletionBlock
 @property  NSString *controllerUsername
 @property  @? netServiceResolveCompletionBlock
 @property  BOOL establishingSecureConnection
 @property  BOOL hasAttributeDatabase
 @property  BOOL hasTunnelService
 @property  BOOL econnresetRetryInProgress
 @property  NSMutableSet *resolvers
 @property  HMFBlockOperation *pairOperation
 @property  NSOperationQueue *clientOperationQueue
 @property  BOOL wacAccessory
 @property  BOOL wacComplete
 @property  BOOL wacLegacy
 @property  BOOL preSoftAuthWacStarted
 @property  BOOL postSoftAuthWacStarted
 @property  NSData *ownershipToken
 @property  HAPAccessoryWiFiConfiguration *wifiConfiguration
 @property  HAPWACAccessory *hapWACAccessory
 @property  HAPWACAccessoryClient *hapWACAccessoryClient
 @property  BOOL continuingLegacyWACpairing
 @property  BOOL wacStarted
 @property  HMFTimer *bonjourEventTimer
 @property  BOOL hasStartedPairing
 @property  HMFNetMonitor *networkMonitor
 @property  BOOL pairingRequestPending
 @property  BOOL tokenValidationPending
 @property  int cancelPairingErr
 @property  BOOL wacNeeded
 @property  NSData *token
 @property  HMFNetAddress *peerAddress
 @property  NSString *peerEndpointDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPAccessoryServerIP sharedPairOperationQueue]

  // instance methods
  -[HAPAccessoryServerIP dealloc]
  -[HAPAccessoryServerIP token]
  -[HAPAccessoryServerIP .cxx_destruct]
  -[HAPAccessoryServerIP _reset]
  -[HAPAccessoryServerIP model]
  -[HAPAccessoryServerIP setModel:]
  -[HAPAccessoryServerIP statusFlags]
  -[HAPAccessoryServerIP setAuthenticated:]
  -[HAPAccessoryServerIP authenticated]
  -[HAPAccessoryServerIP setToken:]
  -[HAPAccessoryServerIP services]
  -[HAPAccessoryServerIP browser]
  -[HAPAccessoryServerIP setBrowser:]
  -[HAPAccessoryServerIP sourceVersion]
  -[HAPAccessoryServerIP setSourceVersion:]
  -[HAPAccessoryServerIP peerAddress]
  -[HAPAccessoryServerIP setStatusFlags:]
  -[HAPAccessoryServerIP updateWithBonjourDeviceInfo:]
  -[HAPAccessoryServerIP reconfirm]
  -[HAPAccessoryServerIP linkType]
  -[HAPAccessoryServerIP timerDidFire:]
  -[HAPAccessoryServerIP networkMonitorIsReachable:]
  -[HAPAccessoryServerIP networkMonitorIsUnreachable:]
  -[HAPAccessoryServerIP _delegateRespondsToSelector:]
  -[HAPAccessoryServerIP ownershipToken]
  -[HAPAccessoryServerIP networkMonitor]
  -[HAPAccessoryServerIP authSession:sendAuthExchangeData:]
  -[HAPAccessoryServerIP authSession:validateUUID:token:]
  -[HAPAccessoryServerIP authSession:authenticateUUID:token:]
  -[HAPAccessoryServerIP authSession:confirmUUID:token:]
  -[HAPAccessoryServerIP authSession:authComplete:]
  -[HAPAccessoryServerIP continueAuthAfterValidation:]
  -[HAPAccessoryServerIP initCommon:browser:]
  -[HAPAccessoryServerIP _parseAndValidateTXTRecord]
  -[HAPAccessoryServerIP _tearDownSession]
  -[HAPAccessoryServerIP isWacAccessory]
  -[HAPAccessoryServerIP isWacComplete]
  -[HAPAccessoryServerIP _invalidateWAC]
  -[HAPAccessoryServerIP httpClient]
  -[HAPAccessoryServerIP setHttpClient:]
  -[HAPAccessoryServerIP isWacLegacy]
  -[HAPAccessoryServerIP setWacStarted:]
  -[HAPAccessoryServerIP setHasStartedPairing:]
  -[HAPAccessoryServerIP hapWACAccessoryClient]
  -[HAPAccessoryServerIP setWacComplete:]
  -[HAPAccessoryServerIP _notifyDelegatesPairingStopped:]
  -[HAPAccessoryServerIP _hasBonjourDeviceInfo]
  -[HAPAccessoryServerIP bonjourDeviceInfo]
  -[HAPAccessoryServerIP _updateWithBonjourDeviceInfo:]
  -[HAPAccessoryServerIP isContinuingLegacyWACpairing]
  -[HAPAccessoryServerIP hasStartedPairing]
  -[HAPAccessoryServerIP bonjourEventTimer]
  -[HAPAccessoryServerIP setBonjourEventTimer:]
  -[HAPAccessoryServerIP setContinuingLegacyWACpairing:]
  -[HAPAccessoryServerIP _pairSetupStartWithConsentRequired:]
  -[HAPAccessoryServerIP _notifyDelegatesOfAddAccessoryFailure]
  -[HAPAccessoryServerIP isPairingRequestPending]
  -[HAPAccessoryServerIP setPairingRequestPending:]
  -[HAPAccessoryServerIP setBonjourDeviceInfo:]
  -[HAPAccessoryServerIP setHasUpdatedBonjour:]
  -[HAPAccessoryServerIP _isSessionEstablished]
  -[HAPAccessoryServerIP _getAttributeDatabase]
  -[HAPAccessoryServerIP _establishSecureConnectionAndFetchAttributeDatabase]
  -[HAPAccessoryServerIP updateWithHAPWACAccessory:]
  -[HAPAccessoryServerIP setWacLegacy:]
  -[HAPAccessoryServerIP _pairVerifyStartWAC:]
  -[HAPAccessoryServerIP setPostSoftAuthWacStarted:]
  -[HAPAccessoryServerIP pairOperation]
  -[HAPAccessoryServerIP hapWACAccessory]
  -[HAPAccessoryServerIP setHapWACAccessoryClient:]
  -[HAPAccessoryServerIP _continuePairingUsingWAC]
  -[HAPAccessoryServerIP setPairOperation:]
  -[HAPAccessoryServerIP _joinAccessoryNetworkWithCompletion:]
  -[HAPAccessoryServerIP _continuePairingAfterWAC:]
  -[HAPAccessoryServerIP isWacStarted]
  -[HAPAccessoryServerIP wifiConfiguration]
  -[HAPAccessoryServerIP isPostSoftAuthWacStarted]
  -[HAPAccessoryServerIP _continuePairingAfterConfirmingSecureWAC:]
  -[HAPAccessoryServerIP isPreSoftAuthWacStarted]
  -[HAPAccessoryServerIP setPreSoftAuthWacStarted:]
  -[HAPAccessoryServerIP _pairSetupContinueWAC]
  -[HAPAccessoryServerIP resolvers]
  -[HAPAccessoryServerIP setResolvers:]
  -[HAPAccessoryServerIP ipServices]
  -[HAPAccessoryServerIP peerEndpointDescription]
  -[HAPAccessoryServerIP hasAttributeDatabase]
  -[HAPAccessoryServerIP isEstablishingSecureConnection]
  -[HAPAccessoryServerIP setEstablishingSecureConnection:]
  -[HAPAccessoryServerIP setHasAttributeDatabase:]
  -[HAPAccessoryServerIP provisionToken:]
  -[HAPAccessoryServerIP setPairVerifyCompletionBlock:]
  -[HAPAccessoryServerIP _establishSecureSession]
  -[HAPAccessoryServerIP setWifiConfiguration:]
  -[HAPAccessoryServerIP continuePairingAfterAuthPrompt]
  -[HAPAccessoryServerIP _continuePairingAfterAuthPromptWithRetry:]
  -[HAPAccessoryServerIP _continuePairingWithSetupCode:]
  -[HAPAccessoryServerIP _pairSetupTryPassword:]
  -[HAPAccessoryServerIP hasUpdatedBonjour]
  -[HAPAccessoryServerIP _tearDownSessionAndReconfirm]
  -[HAPAccessoryServerIP _tearDownWAC]
  -[HAPAccessoryServerIP queuedOperations]
  -[HAPAccessoryServerIP removePairingForCurrentControllerOnQueue:completion:]
  -[HAPAccessoryServerIP _processQueuedOperationsWithError:]
  -[HAPAccessoryServerIP tearDownSessionOnAuthCompletion]
  -[HAPAccessoryServerIP pairSetupStartSoftAuthWAC]
  -[HAPAccessoryServerIP startPairingWithConsentRequired:config:ownershipToken:]
  -[HAPAccessoryServerIP _error:forReadCharacteristicValues:queue:completionHandler:]
  -[HAPAccessoryServerIP _readCharacteristicValues:timeout:queue:completionHandler:]
  -[HAPAccessoryServerIP _queuedReadOperationBlock:timeout:queue:completionHandler:]
  -[HAPAccessoryServerIP _error:forWriteCharacteristicValues:queue:completionHandler:]
  -[HAPAccessoryServerIP _writeCharacteristicValues:timeout:queue:completionHandler:]
  -[HAPAccessoryServerIP _queuedWriteOperationBlock:timeout:queue:completionHandler:]
  -[HAPAccessoryServerIP _startAddPairingWithIdentifier:publicKey:admin:queue:completion:]
  -[HAPAccessoryServerIP _listPairingsWithCompletionQueue:completionHandler:]
  -[HAPAccessoryServerIP _enableEvents:forCharacteristics:withCompletionHandler:queue:]
  -[HAPAccessoryServerIP econnresetRetryInProgress]
  -[HAPAccessoryServerIP _insertReadCharacteristicValues:timeout:queue:completionHandler:]
  -[HAPAccessoryServerIP setEconnresetRetryInProgress:]
  -[HAPAccessoryServerIP _queueReadCharacteristicValues:timeout:queue:completionHandler:]
  -[HAPAccessoryServerIP _handleReadECONNRESETError:readCharacteristics:responses:timeout:queue:completionHandler:]
  -[HAPAccessoryServerIP _handleReadResponseObject:type:httpStatus:error:characteristics:queue:completion:]
  -[HAPAccessoryServerIP clientOperationQueue]
  -[HAPAccessoryServerIP _queueWriteCharacteristicValues:timeout:queue:withCompletionHandler:]
  -[HAPAccessoryServerIP _performTimedWriteValues:timeout:queue:completionHandler:]
  -[HAPAccessoryServerIP _performWriteValues:timeout:queue:completionHandler:]
  -[HAPAccessoryServerIP _insertWriteCharacteristicValues:timeout:queue:withCompletionHandler:]
  -[HAPAccessoryServerIP _handleWriteECONNResetError:writeRequests:responses:timeout:queue:completionHandler:]
  -[HAPAccessoryServerIP _handleWriteResponseObject:type:httpStatus:error:requestTuples:queue:completion:]
  -[HAPAccessoryServerIP _handlePrepareWriteResponseObject:type:prepareIdentifier:httpStatus:error:requestTuples:timeout:queue:completion:]
  -[HAPAccessoryServerIP _performExecuteWriteValues:prepareIdentifier:timeout:queue:completionHandler:]
  -[HAPAccessoryServerIP _handleUpdatesForCharacteristics:stateNumber:]
  -[HAPAccessoryServerIP _queueEnableEvents:forCharacteristics:withCompletionHandler:queue:]
  -[HAPAccessoryServerIP _handleEventResponseObject:type:httpStatus:error:characteristics:requestedEventState:completion:queue:]
  -[HAPAccessoryServerIP _processEvent:matchedCharacteristic:]
  -[HAPAccessoryServerIP _parseTXTRecordDictionary:]
  -[HAPAccessoryServerIP _parseAttributeDatabase:transaction:]
  -[HAPAccessoryServerIP setPrimaryAccessoryForServer:]
  -[HAPAccessoryServerIP _updateProtocolVersionFromPrimaryAccessory:]
  -[HAPAccessoryServerIP _updateAccessories:]
  -[HAPAccessoryServerIP __registerForInternalCharacteristicNotifications]
  -[HAPAccessoryServerIP enableEvents:forCharacteristics:withCompletionHandler:queue:]
  -[HAPAccessoryServerIP setHasTunnelService:]
  -[HAPAccessoryServerIP _mergeExistingService:withNewService:]
  -[HAPAccessoryServerIP pairVerifyCompletionBlock]
  -[HAPAccessoryServerIP _invokePairVerifyCompletionBlock:]
  -[HAPAccessoryServerIP _pairVerifyStartWithRetry:]
  -[HAPAccessoryServerIP _ensureHTTPClientSetUp]
  -[HAPAccessoryServerIP _getBonjourDeviceDNSName:]
  -[HAPAccessoryServerIP setCancelPairingErr:]
  -[HAPAccessoryServerIP controllerUsername]
  -[HAPAccessoryServerIP _isAccessoryPublicKeyPresent:registeredWithHomeKit:]
  -[HAPAccessoryServerIP _ensurePairingSessionIsInitializedWithType:]
  -[HAPAccessoryServerIP _handlePairSetupCompletionWithData:]
  -[HAPAccessoryServerIP cancelPairingErr]
  -[HAPAccessoryServerIP authenticateAccessory]
  -[HAPAccessoryServerIP authSession]
  -[HAPAccessoryServerIP getAccessoryInfo:]
  -[HAPAccessoryServerIP _handleMFiCertValidation]
  -[HAPAccessoryServerIP setProductData:]
  -[HAPAccessoryServerIP _notifyDelegateNeedsOwnershipToken]
  -[HAPAccessoryServerIP invokePairVerifyCompletionBlock:]
  -[HAPAccessoryServerIP _handlePairVerifyCompletionWithData:]
  -[HAPAccessoryServerIP isTokenValidationPending]
  -[HAPAccessoryServerIP setTokenValidationPending:]
  -[HAPAccessoryServerIP authenticatedProtocolInfo]
  -[HAPAccessoryServerIP setAuthenticatedProtocolInfo:]
  -[HAPAccessoryServerIP _validateProtocolInfo:]
  -[HAPAccessoryServerIP _continuePairingAfterMFiCertValidation]
  -[HAPAccessoryServerIP _queueAddPairingWithIdentifier:publicKey:admin:queue:completion:]
  -[HAPAccessoryServerIP _handlePairingsResponseObject:type:httpStatus:httpError:removeRequest:completionQueue:completionBlock:]
  -[HAPAccessoryServerIP _removePairingWithIdentifier:publicKey:queue:completion:]
  -[HAPAccessoryServerIP _establishSecureSessionAndRemovePairing:queue:completion:]
  -[HAPAccessoryServerIP _sendRemovePairingWithData:queue:completion:]
  -[HAPAccessoryServerIP _queueListPairingWithCompletionQueue:completionHandler:]
  -[HAPAccessoryServerIP _handleListPairingsResponseObject:type:httpStatus:httpError:completionQueue:completionHandler:]
  -[HAPAccessoryServerIP httpClient:didReceiveEvent:]
  -[HAPAccessoryServerIP httpClientDidCloseConnectionDueToServer:]
  -[HAPAccessoryServerIP httpClient:didReceiveHTTPMessageWithHeaders:body:]
  -[HAPAccessoryServerIP httpClient:willSendHTTPMessageWithHeaders:body:]
  -[HAPAccessoryServerIP initWithBonjourDeviceInfo:keyStore:browser:]
  -[HAPAccessoryServerIP invalidateWithCompletionHandler:]
  -[HAPAccessoryServerIP hasBonjourDeviceInfo]
  -[HAPAccessoryServerIP initWithHAPWACAccessory:keystore:browser:]
  -[HAPAccessoryServerIP setWacAccessory:]
  -[HAPAccessoryServerIP isWacNeeded]
  -[HAPAccessoryServerIP startReprovisioningWiFiConfig:]
  -[HAPAccessoryServerIP resetPostSoftAuthWAC]
  -[HAPAccessoryServerIP continuePairingUsingWAC]
  -[HAPAccessoryServerIP resolveLocalHostnameWithCompletionHandler:]
  -[HAPAccessoryServerIP createKeysForDataStreamWithKeySalt:completionHandler:]
  -[HAPAccessoryServerIP primaryAccessory]
  -[HAPAccessoryServerIP discoverAccessories]
  -[HAPAccessoryServerIP tryPairingPassword:error:]
  -[HAPAccessoryServerIP tearDownAndRestablishSession]
  -[HAPAccessoryServerIP stopPairingWithError:]
  -[HAPAccessoryServerIP readCharacteristicValues:timeout:completionQueue:completionHandler:]
  -[HAPAccessoryServerIP writeCharacteristicValues:timeout:completionQueue:completionHandler:]
  -[HAPAccessoryServerIP handleUpdatesForCharacteristics:stateNumber:]
  -[HAPAccessoryServerIP _mergeExistingAccessory:withNewAccessory:]
  -[HAPAccessoryServerIP isSessionEstablised]
  -[HAPAccessoryServerIP _handlePairSetupAfterM4Callback]
  -[HAPAccessoryServerIP addPairing:completionQueue:completionHandler:]
  -[HAPAccessoryServerIP removePairing:completionQueue:completionHandler:]
  -[HAPAccessoryServerIP listPairingsWithCompletionQueue:completionHandler:]
  -[HAPAccessoryServerIP identifyWithCompletion:]
  -[HAPAccessoryServerIP productData]
  -[HAPAccessoryServerIP setIpServices:]
  -[HAPAccessoryServerIP setQueuedOperations:]
  -[HAPAccessoryServerIP primaryAccessoryForServer]
  -[HAPAccessoryServerIP setControllerUsername:]
  -[HAPAccessoryServerIP netServiceResolveCompletionBlock]
  -[HAPAccessoryServerIP setNetServiceResolveCompletionBlock:]
  -[HAPAccessoryServerIP hasTunnelService]
  -[HAPAccessoryServerIP _requestResource:queue:completionHandler:]
  -[HAPAccessoryServerIP requestResource:queue:completionHandler:]


HAPBTLEResponse : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
 @property  BOOL headerComplete
 @property  NSData *body
 @property  NSMutableData *_internalBody
 @property  HAPBTLERequest *request
 @property  HAPBTLETransactionIdentifier *identifier
 @property  BOOL encrypted
 @property  BOOL bodyComplete
 @property  BOOL complete
 @property  BOOL valid
 @property  unsigned long bodyLength
 @property  unsigned char statusCode

  // instance methods
  -[HAPBTLEResponse init]
  -[HAPBTLEResponse isValid]
  -[HAPBTLEResponse .cxx_destruct]
  -[HAPBTLEResponse identifier]
  -[HAPBTLEResponse statusCode]
  -[HAPBTLEResponse request]
  -[HAPBTLEResponse isEncrypted]
  -[HAPBTLEResponse shortDescription]
  -[HAPBTLEResponse isComplete]
  -[HAPBTLEResponse setBody:]
  -[HAPBTLEResponse body]
  -[HAPBTLEResponse initWithRequest:]
  -[HAPBTLEResponse descriptionWithPointer:]
  -[HAPBTLEResponse appendData:error:]
  -[HAPBTLEResponse bodyLength]
  -[HAPBTLEResponse isHeaderComplete]
  -[HAPBTLEResponse isBodyComplete]
  -[HAPBTLEResponse _internalBody]
  -[HAPBTLEResponse _deserializeHeaderWithData:error:]
  -[HAPBTLEResponse _remainingBodyLength]
  -[HAPBTLEResponse _setInternalBody:]
  -[HAPBTLEResponse _deserializeHeaderBodyLengthWithData:error:]
  -[HAPBTLEResponse setHeaderComplete:]


HAPSecuritySessionEncryption : NSObject /usr/lib/libSystem.B.dylib
 @property  NSData *inputKey
 @property  NSMutableData *inputNonce
 @property  NSData *outputKey
 @property  NSMutableData *outputNonce

  // instance methods
  -[HAPSecuritySessionEncryption init]
  -[HAPSecuritySessionEncryption .cxx_destruct]
  -[HAPSecuritySessionEncryption outputKey]
  -[HAPSecuritySessionEncryption setOutputKey:]
  -[HAPSecuritySessionEncryption setInputKey:]
  -[HAPSecuritySessionEncryption setInputNonce:]
  -[HAPSecuritySessionEncryption setOutputNonce:]
  -[HAPSecuritySessionEncryption inputKey]
  -[HAPSecuritySessionEncryption inputNonce]
  -[HAPSecuritySessionEncryption outputNonce]
  -[HAPSecuritySessionEncryption initWithInputKey:outputKey:]
  -[HAPSecuritySessionEncryption encrypt:additionalAuthenticatedData:]
  -[HAPSecuritySessionEncryption decrypt:additionalAuthenticatedData:error:]
  -[HAPSecuritySessionEncryption decrypt:length:additionalAuthData:additionalAuthDataLength:authTagData:authTagDataLength:error:]


HAPAccessoryConfiguration : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
  // instance methods
  -[HAPAccessoryConfiguration _init]


HAPAccessoryWiFiConfiguration : HAPAccessoryConfiguration
 @property  NSString *ssid
 @property  NSData *psk
 @property  NSString *isoCountryCode

  // class methods
  +[HAPAccessoryWiFiConfiguration accessoryConfigurationWithSsid:psk:country:]

  // instance methods
  -[HAPAccessoryWiFiConfiguration .cxx_destruct]
  -[HAPAccessoryWiFiConfiguration isoCountryCode]
  -[HAPAccessoryWiFiConfiguration ssid]
  -[HAPAccessoryWiFiConfiguration psk]
  -[HAPAccessoryWiFiConfiguration initWithSSID:psk:country:]


HAPPairingUtilities : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
  // class methods
  +[HAPPairingUtilities createAddPairingRequetForPairingIdentity:error:]
  +[HAPPairingUtilities createRemovePairingRequetForPairingIdentity:error:]
  +[HAPPairingUtilities parseRemovePairingResponse:error:]
  +[HAPPairingUtilities parseAddPairingResponse:error:]
  +[HAPPairingUtilities createListPairingsRequest:]
  +[HAPPairingUtilities parseListPairingsResponse:error:]


HAPValueTransformer : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
  // class methods
  +[HAPValueTransformer expectedTransformedClassForFormat:]
  +[HAPValueTransformer expectedClassForFormat:]

  // instance methods
  -[HAPValueTransformer transformedValue:format:error:]
  -[HAPValueTransformer reverseTransformedValue:format:error:]


HAPTunneledAccessoryBTLE : HAPAccessory <HAPBTLEControlOutputStreamDelegate, HAPSecuritySessionDelegate, HMFTimerDelegate, HAPAccessoryServerInternalDelegate>
 @property  NSNumber *stateNumber
 @property  <HAPKeyStore> *keyStore
 @property  HAPService *tunneledBTLEAccessoryService
 @property  HAPService *pairingService
 @property  HAPCharacteristic *pairVerifyCharacteristic
 @property  HAPCharacteristic *pairingsCharacteristic
 @property  HAPCharacteristic *advertisingCharacteristic
 @property  HAPSecuritySession *securitySession
 @property  BOOL securitySessionOpen
 @property  BOOL securitySessionOpening
 @property  NSOperationQueue *pairVerifyOperationQueue
 @property  NSNumber *sessionLifetimeTimeout
 @property  HMFTimer *connectionIdleTimer
 @property  NSOperationQueue *clientOperationQueue
 @property  NSMutableArray *pendingRequests
 @property  NSOperationQueue *requestOperationQueue
 @property  NSMutableArray *pendingResponses
 @property  BOOL verifying
 @property  HMFExponentialBackoffTimer *verificationBackoffTimer
 @property  BOOL verified
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPTunneledAccessoryBTLE shouldVerifyCharacteristic:]

  // instance methods
  -[HAPTunneledAccessoryBTLE invalidate]
  -[HAPTunneledAccessoryBTLE .cxx_destruct]
  -[HAPTunneledAccessoryBTLE uniqueIdentifier]
  -[HAPTunneledAccessoryBTLE shortDescription]
  -[HAPTunneledAccessoryBTLE _outstandingRequests]
  -[HAPTunneledAccessoryBTLE _enqueueRequest:]
  -[HAPTunneledAccessoryBTLE requestOperationQueue]
  -[HAPTunneledAccessoryBTLE isVerified]
  -[HAPTunneledAccessoryBTLE pendingRequests]
  -[HAPTunneledAccessoryBTLE timerDidFire:]
  -[HAPTunneledAccessoryBTLE setReachable:]
  -[HAPTunneledAccessoryBTLE mergeObject:]
  -[HAPTunneledAccessoryBTLE isPaired]
  -[HAPTunneledAccessoryBTLE setVerified:]
  -[HAPTunneledAccessoryBTLE setStateNumber:]
  -[HAPTunneledAccessoryBTLE stateNumber]
  -[HAPTunneledAccessoryBTLE keyStore]
  -[HAPTunneledAccessoryBTLE setSecuritySessionOpen:]
  -[HAPTunneledAccessoryBTLE clientOperationQueue]
  -[HAPTunneledAccessoryBTLE accessoryServer:didUpdateValueForCharacteristic:]
  -[HAPTunneledAccessoryBTLE initWithServer:instanceID:parsedServices:]
  -[HAPTunneledAccessoryBTLE initWithServer:instanceID:parsedServices:keyStore:]
  -[HAPTunneledAccessoryBTLE verify]
  -[HAPTunneledAccessoryBTLE readCharacteristicValues:timeout:completionQueue:completionHandler:]
  -[HAPTunneledAccessoryBTLE writeCharacteristicValues:timeout:completionQueue:completionHandler:]
  -[HAPTunneledAccessoryBTLE addPairing:completionQueue:completionHandler:]
  -[HAPTunneledAccessoryBTLE removePairing:completionQueue:completionHandler:]
  -[HAPTunneledAccessoryBTLE listPairingsWithCompletionQueue:completionHandler:]
  -[HAPTunneledAccessoryBTLE _parseServices]
  -[HAPTunneledAccessoryBTLE _sanitizeAllTunneledCharacteristics]
  -[HAPTunneledAccessoryBTLE _registerForTunnelCharacteristicNotifications]
  -[HAPTunneledAccessoryBTLE __isAdvertising]
  -[HAPTunneledAccessoryBTLE advertisingCharacteristic]
  -[HAPTunneledAccessoryBTLE _tearDownSessionWithError:]
  -[HAPTunneledAccessoryBTLE _suspendConnectionIdleTimer]
  -[HAPTunneledAccessoryBTLE isVerifying]
  -[HAPTunneledAccessoryBTLE verificationBackoffTimer]
  -[HAPTunneledAccessoryBTLE setVerificationBackoffTimer:]
  -[HAPTunneledAccessoryBTLE setVerifying:]
  -[HAPTunneledAccessoryBTLE _verifyServiceSignature:completionHandler:]
  -[HAPTunneledAccessoryBTLE _verifyCharacteristicSignature:completionHandler:]
  -[HAPTunneledAccessoryBTLE _sendRequest:completionHandler:]
  -[HAPTunneledAccessoryBTLE _readValueForCharacteristic:options:completionHandler:]
  -[HAPTunneledAccessoryBTLE _writeValue:toCharacteristic:authorizationData:options:completionHandler:]
  -[HAPTunneledAccessoryBTLE _performTimedWriteValue:toCharacteristic:authorizationData:options:completionHandler:]
  -[HAPTunneledAccessoryBTLE _performWriteValue:toCharacteristic:authorizationData:options:completionHandler:]
  -[HAPTunneledAccessoryBTLE _markNotifyingCharacteristicUpdatedForCharacteristic:]
  -[HAPTunneledAccessoryBTLE _performTimedWriteExecuteForCharacteristic:value:options:completionHandler:]
  -[HAPTunneledAccessoryBTLE _performTimedWritePrepareWithValue:toCharacteristic:authorizationData:options:completionHandler:]
  -[HAPTunneledAccessoryBTLE _sendPairingRequestData:completionHandler:]
  -[HAPTunneledAccessoryBTLE pairingsCharacteristic]
  -[HAPTunneledAccessoryBTLE setSecuritySession:]
  -[HAPTunneledAccessoryBTLE setSecuritySessionOpening:]
  -[HAPTunneledAccessoryBTLE pairVerifyCharacteristic]
  -[HAPTunneledAccessoryBTLE securitySession]
  -[HAPTunneledAccessoryBTLE _cancelAllQueuedOperationsWithError:]
  -[HAPTunneledAccessoryBTLE _resumeAllOperations]
  -[HAPTunneledAccessoryBTLE _requestResponseForRequest:]
  -[HAPTunneledAccessoryBTLE _reallySendRequest:completionHandler:]
  -[HAPTunneledAccessoryBTLE _pendingResponseForRequest:]
  -[HAPTunneledAccessoryBTLE pendingResponses]
  -[HAPTunneledAccessoryBTLE _resumeConnectionIdleTimer]
  -[HAPTunneledAccessoryBTLE _encryptDataAndGenerateAuthTag:error:]
  -[HAPTunneledAccessoryBTLE _kickConnectionIdleTimer]
  -[HAPTunneledAccessoryBTLE writeCharacteristicValue:timeout:completionQueue:completionHandler:]
  -[HAPTunneledAccessoryBTLE _decryptData:error:]
  -[HAPTunneledAccessoryBTLE readValueForCharacteristic:timeout:completionQueue:completionHandler:]
  -[HAPTunneledAccessoryBTLE pairVerifyOperationQueue]
  -[HAPTunneledAccessoryBTLE isSecuritySessionOpen]
  -[HAPTunneledAccessoryBTLE isSecuritySessionOpening]
  -[HAPTunneledAccessoryBTLE _suspendAllOperations]
  -[HAPTunneledAccessoryBTLE _establishSecureSessionWithError:]
  -[HAPTunneledAccessoryBTLE connectionIdleTimer]
  -[HAPTunneledAccessoryBTLE _parseTunneledBTLEAccessoryService:]
  -[HAPTunneledAccessoryBTLE _parsePairingService:]
  -[HAPTunneledAccessoryBTLE setAdvertisingCharacteristic:]
  -[HAPTunneledAccessoryBTLE setSessionLifetimeTimeout:]
  -[HAPTunneledAccessoryBTLE sessionLifetimeTimeout]
  -[HAPTunneledAccessoryBTLE setPairVerifyCharacteristic:]
  -[HAPTunneledAccessoryBTLE setPairingsCharacteristic:]
  -[HAPTunneledAccessoryBTLE _updateOnStateNumberChange]
  -[HAPTunneledAccessoryBTLE _readUpdatedCharacteristics:queue:]
  -[HAPTunneledAccessoryBTLE _sendControlPacket:forRequest:completionHandler:]
  -[HAPTunneledAccessoryBTLE getLocalPairingIdentityAndAllowCreation:error:]
  -[HAPTunneledAccessoryBTLE _handleSecuritySession:setupExchangeData:]
  -[HAPTunneledAccessoryBTLE _handleConnectionIdleTimeout]
  -[HAPTunneledAccessoryBTLE controlOutputStream:didReceiveRequestToSendControlPacket:completionHandler:]
  -[HAPTunneledAccessoryBTLE controlOutputStreamDidOpen:]
  -[HAPTunneledAccessoryBTLE controlOutputStream:didCloseWithError:]
  -[HAPTunneledAccessoryBTLE controlOutputStreamDidComplete:]
  -[HAPTunneledAccessoryBTLE securitySession:didReceiveLocalPairingIdentityRequestWithError:]
  -[HAPTunneledAccessoryBTLE securitySession:didReceiveRequestForPeerPairingIdentityWithIdentifier:error:]
  -[HAPTunneledAccessoryBTLE securitySession:didReceiveSetupExchangeData:]
  -[HAPTunneledAccessoryBTLE securitySessionIsOpening:]
  -[HAPTunneledAccessoryBTLE securitySessionDidOpen:]
  -[HAPTunneledAccessoryBTLE securitySession:didCloseWithError:]
  -[HAPTunneledAccessoryBTLE removePairingForCurrentControllerWithCompletionQueue:completionHandler:]
  -[HAPTunneledAccessoryBTLE _pendingRequestForCharacteristic:]
  -[HAPTunneledAccessoryBTLE setKeyStore:]
  -[HAPTunneledAccessoryBTLE tunneledBTLEAccessoryService]
  -[HAPTunneledAccessoryBTLE setTunneledBTLEAccessoryService:]
  -[HAPTunneledAccessoryBTLE pairingService]
  -[HAPTunneledAccessoryBTLE setPairingService:]
  -[HAPTunneledAccessoryBTLE setConnectionIdleTimer:]


HAPComponent : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
 @property  <HAPBTLECentralManagerDelegate> *centralManagerDelegate

  // instance methods
  -[HAPComponent .cxx_destruct]
  -[HAPComponent initWithDelegate:]
  -[HAPComponent setCentralManagerDelegate:]
  -[HAPComponent centralManagerDelegate]


HAPBTLECentralManager : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit <CBCentralManagerDelegate>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  CBCentralManager *centralManager
 @property  NSMutableSet *delegates
 @property  long long state
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPBTLECentralManager getInstance]

  // instance methods
  -[HAPBTLECentralManager init]
  -[HAPBTLECentralManager .cxx_destruct]
  -[HAPBTLECentralManager state]
  -[HAPBTLECentralManager setState:]
  -[HAPBTLECentralManager workQueue]
  -[HAPBTLECentralManager setWorkQueue:]
  -[HAPBTLECentralManager centralManagerDidUpdateState:]
  -[HAPBTLECentralManager delegates]
  -[HAPBTLECentralManager setDelegates:]
  -[HAPBTLECentralManager setCentralManager:]
  -[HAPBTLECentralManager centralManager]
  -[HAPBTLECentralManager _getCentralManager]
  -[HAPBTLECentralManager registerCentralManagerDelegate:]


HAPSecuritySession : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit <HMFLogging>
 @property  NSObject<OS_dispatch_queue> *queue
 @property  unsigned long state
 @property  ^{PairingSessionPrivate=} pairingSession
 @property  HAPSecuritySessionEncryption *encryption
 @property  <HAPSecuritySessionDelegate> *delegate
 @property  unsigned long role
 @property  BOOL open
 @property  BOOL opening
 @property  unsigned long resumeSessionID
 @property  NSData *broadcastKey
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPSecuritySession logCategory]

  // instance methods
  -[HAPSecuritySession dealloc]
  -[HAPSecuritySession queue]
  -[HAPSecuritySession open]
  -[HAPSecuritySession close]
  -[HAPSecuritySession delegate]
  -[HAPSecuritySession role]
  -[HAPSecuritySession .cxx_destruct]
  -[HAPSecuritySession state]
  -[HAPSecuritySession setState:]
  -[HAPSecuritySession isOpen]
  -[HAPSecuritySession encryption]
  -[HAPSecuritySession closeWithError:]
  -[HAPSecuritySession _handleSetupExchangeComplete]
  -[HAPSecuritySession setPairingSession:]
  -[HAPSecuritySession pairingSession]
  -[HAPSecuritySession _inputInfo]
  -[HAPSecuritySession _closeWithError:]
  -[HAPSecuritySession broadcastKey]
  -[HAPSecuritySession setBroadcastKey:]
  -[HAPSecuritySession initWithRole:resumeSessionID:delegate:]
  -[HAPSecuritySession receivedSetupExchangeData:error:]
  -[HAPSecuritySession encryptData:additionalAuthenticatedData:error:]
  -[HAPSecuritySession decryptData:additionalAuthenticatedData:error:]
  -[HAPSecuritySession _initializeSetupSession:]
  -[HAPSecuritySession _notifyOpening]
  -[HAPSecuritySession _processSetupExchangeData:error:]
  -[HAPSecuritySession _outputInfo]
  -[HAPSecuritySession setResumeSessionID:]
  -[HAPSecuritySession _broadcastInfo]
  -[HAPSecuritySession _handleLocalPairingIdentityRequestWithStatus:]
  -[HAPSecuritySession setEncryption:]
  -[HAPSecuritySession _notifyOpened]
  -[HAPSecuritySession reallyOpen]
  -[HAPSecuritySession _initiateClientSessionSetupExchange]
  -[HAPSecuritySession resumeSessionID]
  -[HAPSecuritySession isOpening]
  -[HAPSecuritySession _handlePeerPairingIdentityRequestWithIdentifier:status:]


HAPBTLETransactionIdentifier : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
 @property  unsigned char unsignedCharValue

  // class methods
  +[HAPBTLETransactionIdentifier generateRequestIdentifier]
  +[HAPBTLETransactionIdentifier randomTransactionIdentifier]

  // instance methods
  -[HAPBTLETransactionIdentifier unsignedCharValue]
  -[HAPBTLETransactionIdentifier isEqual:]
  -[HAPBTLETransactionIdentifier shortDescription]
  -[HAPBTLETransactionIdentifier descriptionWithPointer:]
  -[HAPBTLETransactionIdentifier initWithUnsignedCharValue:]


HAPService : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit <HMFMerging>
 @property  CBService *cbService
 @property  NSArray *linkedServices
 @property  unsigned long serviceProperties
 @property  NSString *type
 @property  NSNumber *instanceID
 @property  HAPAccessory *accessory
 @property  NSArray *characteristics
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HAPService isEqual:]
  -[HAPService type]
  -[HAPService setType:]
  -[HAPService .cxx_destruct]
  -[HAPService accessory]
  -[HAPService setAccessory:]
  -[HAPService mergeObject:]
  -[HAPService shouldMergeObject:]
  -[HAPService isEqualToService:]
  -[HAPService setCharacteristics:]
  -[HAPService setServiceProperties:]
  -[HAPService characteristics]
  -[HAPService serviceProperties]
  -[HAPService instanceID]
  -[HAPService linkedServices]
  -[HAPService setLinkedServices:]
  -[HAPService initWithType:instanceID:parsedCharacteristics:serviceProperties:linkedServices:]
  -[HAPService _updateAndValidateCharacteristics]
  -[HAPService propertiesDescription]
  -[HAPService _validateServiceCharacteristics]
  -[HAPService _updateCharacteristic:]
  -[HAPService _validateMandatoryCharacteristics]
  -[HAPService initWithType:instanceID:]
  -[HAPService characteristicsOfType:]
  -[HAPService setInstanceID:]
  -[HAPService cbService]
  -[HAPService setCBService:]


HAPKeychainItem : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
 @property  NSString *accessGroup
 @property  NSNumber *type
 @property  NSString *label
 @property  NSString *itemDescription
 @property  NSString *account
 @property  NSData *valueData
 @property  BOOL syncable
 @property  BOOL invisible
 @property  ^v platformReference
 @property  NSData *genericData
 @property  NSString *viewHint
 @property  NSDate *creationDate

  // instance methods
  -[HAPKeychainItem dealloc]
  -[HAPKeychainItem type]
  -[HAPKeychainItem setType:]
  -[HAPKeychainItem .cxx_destruct]
  -[HAPKeychainItem creationDate]
  -[HAPKeychainItem setLabel:]
  -[HAPKeychainItem label]
  -[HAPKeychainItem account]
  -[HAPKeychainItem setAccount:]
  -[HAPKeychainItem setCreationDate:]
  -[HAPKeychainItem valueData]
  -[HAPKeychainItem isInvisible]
  -[HAPKeychainItem accessGroup]
  -[HAPKeychainItem setAccessGroup:]
  -[HAPKeychainItem viewHint]
  -[HAPKeychainItem setViewHint:]
  -[HAPKeychainItem isSyncable]
  -[HAPKeychainItem itemDescription]
  -[HAPKeychainItem setItemDescription:]
  -[HAPKeychainItem initWithQueryResult:shouldIncludeData:]
  -[HAPKeychainItem setValueData:]
  -[HAPKeychainItem setSyncable:]
  -[HAPKeychainItem platformReference]
  -[HAPKeychainItem setPlatformReference:]
  -[HAPKeychainItem genericData]
  -[HAPKeychainItem setGenericData:]


HAPKeychainStoreRemovedAccessory : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
 @property  NSString *accessoryName
 @property  NSDate *creationDate
 @property  NSError *removeError

  // instance methods
  -[HAPKeychainStoreRemovedAccessory .cxx_destruct]
  -[HAPKeychainStoreRemovedAccessory creationDate]
  -[HAPKeychainStoreRemovedAccessory accessoryName]
  -[HAPKeychainStoreRemovedAccessory removeError]
  -[HAPKeychainStoreRemovedAccessory initWithName:creationDate:]
  -[HAPKeychainStoreRemovedAccessory setRemoveError:]


HAPSystemKeychainStore : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit <HAPKeyStore, HMFDumpState>
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSString *activeControllerIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *activeControllerPairingIdentifier

  // class methods
  +[HAPSystemKeychainStore allocWithZone:]
  +[HAPSystemKeychainStore systemStore]

  // instance methods
  -[HAPSystemKeychainStore setQueue:]
  -[HAPSystemKeychainStore queue]
  -[HAPSystemKeychainStore .cxx_destruct]
  -[HAPSystemKeychainStore getLocalPairingIdentity:]
  -[HAPSystemKeychainStore dumpState]
  -[HAPSystemKeychainStore registerAccessoryWithHomeKit:error:]
  -[HAPSystemKeychainStore getControllerPublicKey:secretKey:username:allowCreation:error:]
  -[HAPSystemKeychainStore readPublicKeyForAccessoryName:registeredWithHomeKit:error:]
  -[HAPSystemKeychainStore removeAccessoryKeyForName:error:]
  -[HAPSystemKeychainStore savePublicKey:forAccessoryName:error:]
  -[HAPSystemKeychainStore _getKeychainItemsForAccessGroup:type:account:shouldReturnData:error:]
  -[HAPSystemKeychainStore _getControllerKeychainItemError:]
  -[HAPSystemKeychainStore _saveKeyPair:username:syncable:keyType:]
  -[HAPSystemKeychainStore _getControllerKeychainItemForKeyType:error:]
  -[HAPSystemKeychainStore _removeControllerKeyPairForKeyType:identifier:leaveTombstone:]
  -[HAPSystemKeychainStore _getLocalPairingIdentityAllowingCreation:error:]
  -[HAPSystemKeychainStore getControllerPublicKey:secretKey:keyPair:username:allowCreation:error:]
  -[HAPSystemKeychainStore _getControllerPublicKey:secretKey:keyPair:username:]
  -[HAPSystemKeychainStore _createControllerPublicKey:secretKey:keyPair:username:]
  -[HAPSystemKeychainStore activeControllerIdentifier]
  -[HAPSystemKeychainStore saveKeyPair:username:syncable:error:]
  -[HAPSystemKeychainStore _addKeychainItem:logDuplicateItemError:]
  -[HAPSystemKeychainStore setActiveControllerIdentifier:]
  -[HAPSystemKeychainStore _getAllAvailableControllerPublicKeys:secretKeys:userNames:]
  -[HAPSystemKeychainStore _updateCurrentiCloudIdentifier:controllerPairingIdentifier:]
  -[HAPSystemKeychainStore _removeKeychainItem:leaveTombstone:]
  -[HAPSystemKeychainStore removeControllerKeyPairLeaveTombstone:error:]
  -[HAPSystemKeychainStore _removeControllerKeyPairForIdentifier:leaveTombstone:]
  -[HAPSystemKeychainStore _getMetadataSecretKey:]
  -[HAPSystemKeychainStore _createMetadataSecretKey:]
  -[HAPSystemKeychainStore _getPublicKey:registeredWithHomeKit:forAccessoryName:]
  -[HAPSystemKeychainStore _savePublicKey:forAccessoryName:]
  -[HAPSystemKeychainStore _removeAccessoryKeyForName:]
  -[HAPSystemKeychainStore _auditAccessoryKeys:]
  -[HAPSystemKeychainStore _updateKeychainItemToInvisible:]
  -[HAPSystemKeychainStore _savePeripheralIdentifier:forAccessoryIdentifier:protocolVersion:resumeSessionID:]
  -[HAPSystemKeychainStore _getPeripheralIdentifier:forAccessoryIdentifier:protocolVersion:resumeSessionID:]
  -[HAPSystemKeychainStore _deletePeripheralIdentifierForAccessoryIdentifier:]
  -[HAPSystemKeychainStore _deleteAllPeripheralIdentifiers]
  -[HAPSystemKeychainStore getOrCreateLocalPairingIdentity:]
  -[HAPSystemKeychainStore saveLocalPairingIdentity:syncable:error:]
  -[HAPSystemKeychainStore deserializeKeyPair:publicKey:secretKey:error:]
  -[HAPSystemKeychainStore getAllAvailableControllerPublicKeys:secretKeys:userNames:error:]
  -[HAPSystemKeychainStore updateActiveControllerPairingIdentifier:]
  -[HAPSystemKeychainStore removeControllerKeyPairWithError:]
  -[HAPSystemKeychainStore updateCurrentiCloudIdentifier:controllerPairingIdentifier:error:]
  -[HAPSystemKeychainStore getCurrentiCloudIdentifier:controllerPairingIdentifier:error:]
  -[HAPSystemKeychainStore removeControllerKeyPairForIdentifier:leaveTombstone:error:]
  -[HAPSystemKeychainStore getMetadataSecretKey:error:]
  -[HAPSystemKeychainStore removeAllAccessoryKeys:]
  -[HAPSystemKeychainStore activeControllerPairingIdentifier]
  -[HAPSystemKeychainStore updatePeripheralIdentifier:forAccessoryIdentifier:protocolVersion:previousVersion:resumeSessionID:error:]
  -[HAPSystemKeychainStore deletePeripheralIdentifierForAccessoryIdentifier:error:]
  -[HAPSystemKeychainStore deleteAllPeripheralIdentifiers:]
  -[HAPSystemKeychainStore readPeripheralIdentifierForAccessoryIdentifier:protocolVersion:resumeSessionID:error:]
  -[HAPSystemKeychainStore getPeripherialIdentifiersAndAccessoryNames]
  -[HAPSystemKeychainStore ensureControllerKeyExistsForAllViews]
  -[HAPSystemKeychainStore auditAccessoryKeys:]
  -[HAPSystemKeychainStore savePeripheralIdentifier:forAccessoryIdentifier:protocolVersion:resumeSessionID:error:]


HAPWACAccessoryClient : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit <HMFLogging>
 @property  HMFUnfairLock *lock
 @property  HAPWACAccessory *hapWACAccessory
 @property  NSMutableSet *compatible2Pt4Networks
 @property  NSDictionary *currentNetworkInfo
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  @? completionHandler
 @property  EasyConfigDevice *ezConfigDevice
 @property  HAPAccessoryServer *server
 @property  HAPWACAccessoryBrowser *brower
 @property  double joinLatency
 @property  double restoreLatency
 @property  double configurationLatency
 @property  double preConfigDiscoveryTime
 @property  double postConfigDiscoveryTime
 @property  double setupCodeDelay
 @property  NSDate *setupCodeRequestTime
 @property  unsigned long retryCount
 @property  unsigned long state
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPWACAccessoryClient logCategory]

  // instance methods
  -[HAPWACAccessoryClient init]
  -[HAPWACAccessoryClient lock]
  -[HAPWACAccessoryClient .cxx_destruct]
  -[HAPWACAccessoryClient state]
  -[HAPWACAccessoryClient setState:]
  -[HAPWACAccessoryClient server]
  -[HAPWACAccessoryClient workQueue]
  -[HAPWACAccessoryClient completionHandler]
  -[HAPWACAccessoryClient setCompletionHandler:]
  -[HAPWACAccessoryClient retryCount]
  -[HAPWACAccessoryClient setRetryCount:]
  -[HAPWACAccessoryClient dumpStatsWithError:]
  -[HAPWACAccessoryClient hapWACAccessory]
  -[HAPWACAccessoryClient initWithWACAccessory:server:browser:compatible2Pt4Networks:]
  -[HAPWACAccessoryClient joinAccessoryNetworkWithCompletion:]
  -[HAPWACAccessoryClient performEasyConfigWithParingPrompt:performPairSetup:isSplit:wacWiFiConfig:completion:]
  -[HAPWACAccessoryClient _joinAccessoryNetworkWithCompletion:]
  -[HAPWACAccessoryClient continuePairingWithSetupCode:]
  -[HAPWACAccessoryClient stopEasyConfig]
  -[HAPWACAccessoryClient restoreNetworkWithCompletion:]
  -[HAPWACAccessoryClient _continuePairingWithSetupCode:]
  -[HAPWACAccessoryClient joinLatency]
  -[HAPWACAccessoryClient restoreLatency]
  -[HAPWACAccessoryClient configurationLatency]
  -[HAPWACAccessoryClient preConfigDiscoveryTime]
  -[HAPWACAccessoryClient postConfigDiscoveryTime]
  -[HAPWACAccessoryClient setupCodeDelay]
  -[HAPWACAccessoryClient _callJoinCompletion:withError:]
  -[HAPWACAccessoryClient _restoreNetworkWithCompletion:]
  -[HAPWACAccessoryClient setCurrentNetworkInfo:]
  -[HAPWACAccessoryClient currentNetworkInfo]
  -[HAPWACAccessoryClient setJoinLatency:]
  -[HAPWACAccessoryClient compatible2Pt4Networks]
  -[HAPWACAccessoryClient brower]
  -[HAPWACAccessoryClient _joinAccessory:completion:]
  -[HAPWACAccessoryClient setRestoreLatency:]
  -[HAPWACAccessoryClient _callRestoreCompletion:withError:]
  -[HAPWACAccessoryClient setConfigurationLatency:]
  -[HAPWACAccessoryClient _performEasyConfigWithParingPrompt:performPairSetup:isSplit:wacWiFiConfig:completion:]
  -[HAPWACAccessoryClient setEzConfigDevice:]
  -[HAPWACAccessoryClient ezConfigDevice]
  -[HAPWACAccessoryClient setSetupCodeRequestTime:]
  -[HAPWACAccessoryClient _retoreNetworkAndReportErrorWithCompletion:]
  -[HAPWACAccessoryClient setPreConfigDiscoveryTime:]
  -[HAPWACAccessoryClient setPostConfigDiscoveryTime:]
  -[HAPWACAccessoryClient _performPostConfig]
  -[HAPWACAccessoryClient setupCodeRequestTime]
  -[HAPWACAccessoryClient setSetupCodeDelay:]
  -[HAPWACAccessoryClient _joinCompleteWithStatus:]


ATVModel : NSObject /usr/lib/libSystem.B.dylib
 @property  NSDictionary *atvLUT

  // class methods
  +[ATVModel addTuple:ToLUT:]
  +[ATVModel atvStateFromState:]

  // instance methods
  -[ATVModel init]
  -[ATVModel .cxx_destruct]
  -[ATVModel atvLUT]
  -[ATVModel findTupleForATVState:]
  -[ATVModel setAtvLUT:]


HAPBTLEReachabilityScanTuple : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
 @property  @? completion
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSString *identifier

  // class methods
  +[HAPBTLEReachabilityScanTuple reachabilityScanTupleWithCompletion:workQueue:identifier:]

  // instance methods
  -[HAPBTLEReachabilityScanTuple setQueue:]
  -[HAPBTLEReachabilityScanTuple queue]
  -[HAPBTLEReachabilityScanTuple .cxx_destruct]
  -[HAPBTLEReachabilityScanTuple identifier]
  -[HAPBTLEReachabilityScanTuple setIdentifier:]
  -[HAPBTLEReachabilityScanTuple setCompletion:]
  -[HAPBTLEReachabilityScanTuple completion]


HAPDiscoveredBTLEAccessoryServerTuple : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
 @property  HAPAccessoryServerBTLE *accessoryServer
 @property  double lastSeen

  // class methods
  +[HAPDiscoveredBTLEAccessoryServerTuple discoveredAccessoryServerTupleWithAccessoryServer:]

  // instance methods
  -[HAPDiscoveredBTLEAccessoryServerTuple .cxx_destruct]
  -[HAPDiscoveredBTLEAccessoryServerTuple lastSeen]
  -[HAPDiscoveredBTLEAccessoryServerTuple setLastSeen:]
  -[HAPDiscoveredBTLEAccessoryServerTuple accessoryServer]


HAPRecentlySeenPairedBTLEPeripheralTuple : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
 @property  double lastSeen
 @property  CBPeripheral *peripheral
 @property  NSNumber *statusFlags
 @property  NSNumber *stateNumber
 @property  NSNumber *configNumber
 @property  NSNumber *categoryIdentifier
 @property  NSString *identifier
 @property  NSData *setupHash
 @property  unsigned long advertisementFormat
 @property  BOOL notifyingCharacteristicUpdated
 @property  NSMutableDictionary *cachedDescriptors
 @property  NSMapTable *cachedCharacteristicSignatures
 @property  NSMapTable *cachedServiceSignatures
 @property  BOOL monitorState
 @property  unsigned long connectionPriority

  // instance methods
  -[HAPRecentlySeenPairedBTLEPeripheralTuple .cxx_destruct]
  -[HAPRecentlySeenPairedBTLEPeripheralTuple identifier]
  -[HAPRecentlySeenPairedBTLEPeripheralTuple statusFlags]
  -[HAPRecentlySeenPairedBTLEPeripheralTuple setCategoryIdentifier:]
  -[HAPRecentlySeenPairedBTLEPeripheralTuple categoryIdentifier]
  -[HAPRecentlySeenPairedBTLEPeripheralTuple monitorState]
  -[HAPRecentlySeenPairedBTLEPeripheralTuple setMonitorState:]
  -[HAPRecentlySeenPairedBTLEPeripheralTuple setStatusFlags:]
  -[HAPRecentlySeenPairedBTLEPeripheralTuple lastSeen]
  -[HAPRecentlySeenPairedBTLEPeripheralTuple peripheral]
  -[HAPRecentlySeenPairedBTLEPeripheralTuple setPeripheral:]
  -[HAPRecentlySeenPairedBTLEPeripheralTuple setStateNumber:]
  -[HAPRecentlySeenPairedBTLEPeripheralTuple stateNumber]
  -[HAPRecentlySeenPairedBTLEPeripheralTuple configNumber]
  -[HAPRecentlySeenPairedBTLEPeripheralTuple setupHash]
  -[HAPRecentlySeenPairedBTLEPeripheralTuple setConfigNumber:]
  -[HAPRecentlySeenPairedBTLEPeripheralTuple setConnectionPriority:]
  -[HAPRecentlySeenPairedBTLEPeripheralTuple initRecentlySeenPairedBTLEPeripheral:statusFlags:stateNumber:category:configNumber:identifier:advertisementFormat:setupHash:]
  -[HAPRecentlySeenPairedBTLEPeripheralTuple updatePairedPeripheralConfiguration:connectionPriority:]
  -[HAPRecentlySeenPairedBTLEPeripheralTuple advertisementFormat]
  -[HAPRecentlySeenPairedBTLEPeripheralTuple setAdvertisementFormat:]
  -[HAPRecentlySeenPairedBTLEPeripheralTuple notifyingCharacteristicUpdated]
  -[HAPRecentlySeenPairedBTLEPeripheralTuple setNotifyingCharacteristicUpdated:]
  -[HAPRecentlySeenPairedBTLEPeripheralTuple cachedDescriptors]
  -[HAPRecentlySeenPairedBTLEPeripheralTuple cachedCharacteristicSignatures]
  -[HAPRecentlySeenPairedBTLEPeripheralTuple cachedServiceSignatures]
  -[HAPRecentlySeenPairedBTLEPeripheralTuple connectionPriority]


HAPAccessoryServerBrowserBTLE : HAPAccessoryServerBrowser <CBCentralManagerDelegate, HAPAccessoryServerBrowserWiProxBTLEDelegate, HMFLogging>
 @property  unsigned long qosLimits
 @property  <HAPAccessoryServerBrowserBTLEDelegate> *delegate
 @property  NSObject<OS_dispatch_queue> *delegateQueue
 @property  CBCentralManager *centralManager
 @property  CBConnectionsObserver *connectionsObserver
 @property  HAPAccessoryServerBrowserWiProxBTLE *hapWiProxBLEBrowser
 @property  NSMapTable *discoveredPeripheralsWithAccessories
 @property  NSMutableSet *pairedAccessoryIdentifiers
 @property  NSMapTable *recentlySeenPairedPeripherals
 @property  BOOL performingGeneralScan
 @property  NSMutableArray *powerOnCentralManagerCompletions
 @property  @? reachabilityCompletion
 @property  NSMutableOrderedSet *peripheralsWithConnectionRequests
 @property  NSMutableArray *peripheralsPendingConnection
 @property  NSObject<OS_dispatch_source> *targetedScanTimer
 @property  NSMutableArray *targetedScanAccessoryIdentifiers
 @property  NSMapTable *identifersWithReachabilityScanTuples
 @property  long long scanState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPAccessoryServerBrowserBTLE logCategory]

  // instance methods
  -[HAPAccessoryServerBrowserBTLE delegate]
  -[HAPAccessoryServerBrowserBTLE setDelegate:]
  -[HAPAccessoryServerBrowserBTLE .cxx_destruct]
  -[HAPAccessoryServerBrowserBTLE initWithQueue:]
  -[HAPAccessoryServerBrowserBTLE setDelegate:queue:]
  -[HAPAccessoryServerBrowserBTLE setDelegateQueue:]
  -[HAPAccessoryServerBrowserBTLE delegateQueue]
  -[HAPAccessoryServerBrowserBTLE centralManager:didDiscoverPeripheral:advertisementData:RSSI:]
  -[HAPAccessoryServerBrowserBTLE centralManager:didConnectPeripheral:]
  -[HAPAccessoryServerBrowserBTLE centralManager:didFailToConnectPeripheral:error:]
  -[HAPAccessoryServerBrowserBTLE centralManager:didDisconnectPeripheral:error:]
  -[HAPAccessoryServerBrowserBTLE centralManagerDidUpdateState:]
  -[HAPAccessoryServerBrowserBTLE linkType]
  -[HAPAccessoryServerBrowserBTLE scanState]
  -[HAPAccessoryServerBrowserBTLE _delegateRespondsToSelector:]
  -[HAPAccessoryServerBrowserBTLE setScanState:]
  -[HAPAccessoryServerBrowserBTLE pauseScans]
  -[HAPAccessoryServerBrowserBTLE setCentralManager:]
  -[HAPAccessoryServerBrowserBTLE centralManager]
  -[HAPAccessoryServerBrowserBTLE discoveredPeripheralsWithAccessories]
  -[HAPAccessoryServerBrowserBTLE _connectHAPPeripheralWhenAllowed:]
  -[HAPAccessoryServerBrowserBTLE recentlySeenPairedPeripherals]
  -[HAPAccessoryServerBrowserBTLE hapWiProxBLEBrowser]
  -[HAPAccessoryServerBrowserBTLE _removeFromPendingConnections:]
  -[HAPAccessoryServerBrowserBTLE _disconectFromHAPPeripheral:]
  -[HAPAccessoryServerBrowserBTLE saveCacheToDisk:]
  -[HAPAccessoryServerBrowserBTLE cachedAccessoryForIdentifier:]
  -[HAPAccessoryServerBrowserBTLE _startDiscoveringAccessoryServers]
  -[HAPAccessoryServerBrowserBTLE setPerformingGeneralScan:]
  -[HAPAccessoryServerBrowserBTLE setHapWiProxBLEBrowser:]
  -[HAPAccessoryServerBrowserBTLE _startScanningForPairingPeers]
  -[HAPAccessoryServerBrowserBTLE _powerOnCentralManagerWithCompletion:]
  -[HAPAccessoryServerBrowserBTLE targetedScanAccessoryIdentifiers]
  -[HAPAccessoryServerBrowserBTLE _stopActiveScan]
  -[HAPAccessoryServerBrowserBTLE _matchAccessoryServerWithSetupID:serverIdentifier:completionHandler:]
  -[HAPAccessoryServerBrowserBTLE pairedAccessoryIdentifiers]
  -[HAPAccessoryServerBrowserBTLE _hasRecentlySeenAccessoriesWithIdentifiers:]
  -[HAPAccessoryServerBrowserBTLE _hasPairedAccessoriesOfType:]
  -[HAPAccessoryServerBrowserBTLE powerOnCentralManagerCompletions]
  -[HAPAccessoryServerBrowserBTLE setConnectionsObserver:]
  -[HAPAccessoryServerBrowserBTLE connectionsObserver]
  -[HAPAccessoryServerBrowserBTLE _discoverAccessoryServerWithIdentifier:]
  -[HAPAccessoryServerBrowserBTLE _performTimedConnectionRequestForIdentifier:]
  -[HAPAccessoryServerBrowserBTLE setReachabilityCompletion:]
  -[HAPAccessoryServerBrowserBTLE _probeReachabilityForAccessoryServersWithIdentifiers:onQueue:withCompletion:]
  -[HAPAccessoryServerBrowserBTLE _performTimedScanForIdentifiers:workQueue:withCompletion:]
  -[HAPAccessoryServerBrowserBTLE updateCachedStateForIdentifier:stateNumber:]
  -[HAPAccessoryServerBrowserBTLE updateStateForIdentifier:stateNumber:]
  -[HAPAccessoryServerBrowserBTLE setQosLimits:]
  -[HAPAccessoryServerBrowserBTLE _forgetPairedAccesoryWithIdentifier:]
  -[HAPAccessoryServerBrowserBTLE identifersWithReachabilityScanTuples]
  -[HAPAccessoryServerBrowserBTLE _getDiscoveredPeripheralMatchingIdentifier:]
  -[HAPAccessoryServerBrowserBTLE _startScanningForReachability:]
  -[HAPAccessoryServerBrowserBTLE _updateTargetedScanTimer]
  -[HAPAccessoryServerBrowserBTLE _reportReachabilityForAccessoryWithIdentifier:]
  -[HAPAccessoryServerBrowserBTLE hapCharacteristicsForEncryptedPayload:identifier:shouldConnect:]
  -[HAPAccessoryServerBrowserBTLE _notifyDelegatesOfRemovedAccessoryServer:error:]
  -[HAPAccessoryServerBrowserBTLE _shouldCreateHAPAccessoryServerWithIdentifier:statusFlags:stateNumber:category:configNumber:forPeripheral:advertisementFormat:setupHash:stateChanged:connectReason:]
  -[HAPAccessoryServerBrowserBTLE _createHAPAccessoryAndNotifyDelegateWithPeripheral:name:pairingUsername:statusFlags:stateNumber:stateChanged:connectReason:configNumber:category:connectionIdleTime:format:setupHash:encryptedPayload:]
  -[HAPAccessoryServerBrowserBTLE _callPowerOnCompletionsWithError:]
  -[HAPAccessoryServerBrowserBTLE isPerformingGeneralScan]
  -[HAPAccessoryServerBrowserBTLE reachabilityCompletion]
  -[HAPAccessoryServerBrowserBTLE peripheralsPendingConnection]
  -[HAPAccessoryServerBrowserBTLE peripheralsWithConnectionRequests]
  -[HAPAccessoryServerBrowserBTLE failedToConnectHAPPeripheral:error:]
  -[HAPAccessoryServerBrowserBTLE _parseAdvertisementData:forPeripheral:name:pairingUsername:statusFlags:stateNumber:category:configNumber:setupHash:]
  -[HAPAccessoryServerBrowserBTLE _didDiscoverPeripheral:accessoryName:pairingIdentifier:format:statusFlags:stateNumber:category:configNumber:setupHash:encryptedPayload:]
  -[HAPAccessoryServerBrowserBTLE connectedHAPPeripheral:]
  -[HAPAccessoryServerBrowserBTLE _connectPendingConnections]
  -[HAPAccessoryServerBrowserBTLE disconnectedHAPPeripheral:error:]
  -[HAPAccessoryServerBrowserBTLE updateBroadcastKeyForIdentifer:key:keyUpdatedStateNumber:keyUpdatedTime:]
  -[HAPAccessoryServerBrowserBTLE _cachedCharacteristicForInstanceID:identifier:]
  -[HAPAccessoryServerBrowserBTLE _performTargetedScanForAccessoryWithIdentifier:]
  -[HAPAccessoryServerBrowserBTLE qosLimits]
  -[HAPAccessoryServerBrowserBTLE _addToPendingConnections:]
  -[HAPAccessoryServerBrowserBTLE targetedScanTimer]
  -[HAPAccessoryServerBrowserBTLE setTargetedScanTimer:]
  -[HAPAccessoryServerBrowserBTLE _handleTargetedScanTimeout]
  -[HAPAccessoryServerBrowserBTLE _removeIdentifiersForReachabilityScan]
  -[HAPAccessoryServerBrowserBTLE accessoryServerBrowserBTLE:didDiscoverHAPPeripheral:accessoryName:pairingIdentifier:advertisementFormat:statusFlags:stateNumber:category:configurationNumber:setupHash:encryptedPayload:]
  -[HAPAccessoryServerBrowserBTLE connectToBTLEAccessoryServer:]
  -[HAPAccessoryServerBrowserBTLE disconnectFromBTLEAccessoryServer:]
  -[HAPAccessoryServerBrowserBTLE setConnectionLatency:forPeripheral:]
  -[HAPAccessoryServerBrowserBTLE removeCachedAccessoryWithIdentifier:]
  -[HAPAccessoryServerBrowserBTLE startDiscoveringAccessoryServers]
  -[HAPAccessoryServerBrowserBTLE stopDiscoveringAccessoryServers]
  -[HAPAccessoryServerBrowserBTLE matchAccessoryServerWithSetupID:serverIdentifier:completionHandler:]
  -[HAPAccessoryServerBrowserBTLE discoverAccessoryServerWithIdentifier:]
  -[HAPAccessoryServerBrowserBTLE setReachabilityCompletionHandler:]
  -[HAPAccessoryServerBrowserBTLE probeReachabilityForAccessoryServersWithIdentifiers:onQueue:withCompletion:]
  -[HAPAccessoryServerBrowserBTLE resetLastSeenForAccessoryServersWithIdentifers:]
  -[HAPAccessoryServerBrowserBTLE configureAccessoryWithIdentifier:trackState:connectionPriority:]
  -[HAPAccessoryServerBrowserBTLE retrieveCurrentStateForIdentifer:onQueue:withCompletion:]
  -[HAPAccessoryServerBrowserBTLE stopTrackingBTLEAccessoriesWithIdentifiers:]
  -[HAPAccessoryServerBrowserBTLE configureBTLEQoSLimits:]
  -[HAPAccessoryServerBrowserBTLE markNotifyingCharacteristicUpdatedForIdentifier:]
  -[HAPAccessoryServerBrowserBTLE registerPairedAccessoryWithIdentifier:]
  -[HAPAccessoryServerBrowserBTLE forgetPairedAccesoryWithIdentifier:]
  -[HAPAccessoryServerBrowserBTLE setDiscoveredPeripheralsWithAccessories:]
  -[HAPAccessoryServerBrowserBTLE setPairedAccessoryIdentifiers:]
  -[HAPAccessoryServerBrowserBTLE setRecentlySeenPairedPeripherals:]
  -[HAPAccessoryServerBrowserBTLE setPowerOnCentralManagerCompletions:]
  -[HAPAccessoryServerBrowserBTLE setPeripheralsWithConnectionRequests:]
  -[HAPAccessoryServerBrowserBTLE setPeripheralsPendingConnection:]
  -[HAPAccessoryServerBrowserBTLE setTargetedScanAccessoryIdentifiers:]
  -[HAPAccessoryServerBrowserBTLE setIdentifersWithReachabilityScanTuples:]


HAPBTLECharacteristicSignature : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
 @property  NSUUID *characteristicType
 @property  NSNumber *serviceInstanceID
 @property  NSUUID *serviceType
 @property  unsigned long characteristicProperties
 @property  HAPCharacteristicMetadata *characteristicMetadata
 @property  BOOL authenticated

  // instance methods
  -[HAPBTLECharacteristicSignature .cxx_destruct]
  -[HAPBTLECharacteristicSignature serviceType]
  -[HAPBTLECharacteristicSignature characteristicType]
  -[HAPBTLECharacteristicSignature isAuthenticated]
  -[HAPBTLECharacteristicSignature characteristicProperties]
  -[HAPBTLECharacteristicSignature characteristicMetadata]
  -[HAPBTLECharacteristicSignature serviceInstanceID]
  -[HAPBTLECharacteristicSignature initWithCharacteristicType:serviceInstanceID:serviceType:characteristicProperties:characteristicMetadata:authenticated:]


HAPBTLEServiceSignature : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
 @property  NSUUID *serviceType
 @property  NSNumber *serviceInstanceID
 @property  unsigned long serviceProperties
 @property  NSArray *linkedServices
 @property  BOOL authenticated

  // instance methods
  -[HAPBTLEServiceSignature .cxx_destruct]
  -[HAPBTLEServiceSignature serviceType]
  -[HAPBTLEServiceSignature isAuthenticated]
  -[HAPBTLEServiceSignature serviceProperties]
  -[HAPBTLEServiceSignature linkedServices]
  -[HAPBTLEServiceSignature serviceInstanceID]
  -[HAPBTLEServiceSignature initWithServiceType:serviceInstanceID:serviceProperties:linkedServices:authenticated:]


_HAPBTLEDiscoveryContext : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
 @property  long long discoveryType
 @property  NSMutableArray *discoveringServices
 @property  NSMutableArray *discoveringCharacteristics
 @property  NSMutableArray *readingCharacteristics
 @property  NSMutableArray *discoveringDescriptors
 @property  NSMutableArray *readingDescriptors
 @property  NSMutableArray *readingSignatureCharacteristics
 @property  NSMutableArray *readingSignatureServices
 @property  NSMapTable *characteristicSignatures
 @property  NSMapTable *serviceSignatures
 @property  long long retries
 @property  BOOL complete
 @property  @? completionHandler

  // instance methods
  -[_HAPBTLEDiscoveryContext init]
  -[_HAPBTLEDiscoveryContext .cxx_destruct]
  -[_HAPBTLEDiscoveryContext reset]
  -[_HAPBTLEDiscoveryContext retries]
  -[_HAPBTLEDiscoveryContext setRetries:]
  -[_HAPBTLEDiscoveryContext completionHandler]
  -[_HAPBTLEDiscoveryContext setCompletionHandler:]
  -[_HAPBTLEDiscoveryContext isComplete]
  -[_HAPBTLEDiscoveryContext discoveringServices]
  -[_HAPBTLEDiscoveryContext discoveringCharacteristics]
  -[_HAPBTLEDiscoveryContext readingCharacteristics]
  -[_HAPBTLEDiscoveryContext discoveringDescriptors]
  -[_HAPBTLEDiscoveryContext readingDescriptors]
  -[_HAPBTLEDiscoveryContext readingSignatureCharacteristics]
  -[_HAPBTLEDiscoveryContext readingSignatureServices]
  -[_HAPBTLEDiscoveryContext characteristicSignatures]
  -[_HAPBTLEDiscoveryContext serviceSignatures]
  -[_HAPBTLEDiscoveryContext initWithDiscoveryType:]
  -[_HAPBTLEDiscoveryContext discoveryType]


_HAPAccessoryServerBTLE200 : HAPAccessoryServerBTLE <CBPeripheralDelegate, HAPBTLEControlOutputStreamDelegate, HAPPairSetupSessionClientDelegate, HAPSecuritySessionDelegate, HMFTimerDelegate, HAPAuthSessionDelegate, HMFLogging>
 @property  HAPBLEAccessoryCache *accessoryCache
 @property  BOOL hasValidCache
 @property  long long connectionState
 @property  @? connectionCompletionHandler
 @property  HMFTimer *connectionIdleTimer
 @property  _HAPBTLEDiscoveryContext *discoveryContext
 @property  BOOL verified
 @property  HAPCharacteristic *identifyCharacteristic
 @property  HAPPairSetupSession *pairSetupSession
 @property  double pairSetupBackoffTimeInterval
 @property  BOOL badPairSetupCode
 @property  @? setupCodeCompletionHandler
 @property  BOOL pairing
 @property  BOOL authenticated
 @property  HAPAuthSession *authSession
 @property  HAPAccessoryProtocolInfo *authenticatedProtocolInfo
 @property  HAPCharacteristic *pairingFeaturesCharacteristic
 @property  HAPCharacteristic *pairSetupCharacteristic
 @property  HAPSecuritySession *securitySession
 @property  HAPCharacteristic *pairVerifyCharacteristic
 @property  NSOperationQueue *pairVerifyOperationQueue
 @property  HAPCharacteristic *pairingsCharacteristic
 @property  NSMutableArray *pendingRequests
 @property  NSOperationQueue *requestOperationQueue
 @property  NSMutableArray *pendingResponses
 @property  NSOperationQueue *clientOperationQueue
 @property  NSMapTable *characteristicWriteCompletionHandlers
 @property  NSMapTable *characteristicEnableEventCompletionHandlers
 @property  unsigned char featureFlags
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_HAPAccessoryServerBTLE200 logCategory]
  +[_HAPAccessoryServerBTLE200 signatureRequestForCharacteristic:requiresAuthentication:error:]
  +[_HAPAccessoryServerBTLE200 parseSignatureResponse:error:]
  +[_HAPAccessoryServerBTLE200 signatureRequestForService:characteristic:requiresAuthentication:error:]
  +[_HAPAccessoryServerBTLE200 parseServiceSignatureResponse:serviceInstanceID:serviceType:error:]
  +[_HAPAccessoryServerBTLE200 parseReadResponse:value:error:]
  +[_HAPAccessoryServerBTLE200 readRequestForCharacteristic:options:error:]
  +[_HAPAccessoryServerBTLE200 parseWriteResponse:value:error:]
  +[_HAPAccessoryServerBTLE200 writeRequestForCharacteristic:value:authorizationData:options:error:]
  +[_HAPAccessoryServerBTLE200 prepareWriteRequestForCharacteristic:value:authorizationData:options:error:]
  +[_HAPAccessoryServerBTLE200 executeWriteRequestForCharacteristic:options:error:]
  +[_HAPAccessoryServerBTLE200 isHAPService:]
  +[_HAPAccessoryServerBTLE200 isHAPDescriptor:]
  +[_HAPAccessoryServerBTLE200 parseProtocolConfigurationResponse:key:stateNumber:error:]
  +[_HAPAccessoryServerBTLE200 configurationRequestForService:configRequestType:error:]
  +[_HAPAccessoryServerBTLE200 parseCharacteristicConfigurationResponse:error:]
  +[_HAPAccessoryServerBTLE200 configurationRequestForCharacteristic:isBroadcasted:interval:error:]

  // instance methods
  -[_HAPAccessoryServerBTLE200 dealloc]
  -[_HAPAccessoryServerBTLE200 .cxx_destruct]
  -[_HAPAccessoryServerBTLE200 shortDescription]
  -[_HAPAccessoryServerBTLE200 setAuthenticated:]
  -[_HAPAccessoryServerBTLE200 authenticated]
  -[_HAPAccessoryServerBTLE200 _outstandingRequests]
  -[_HAPAccessoryServerBTLE200 _enqueueRequest:]
  -[_HAPAccessoryServerBTLE200 requestOperationQueue]
  -[_HAPAccessoryServerBTLE200 connectionState]
  -[_HAPAccessoryServerBTLE200 isVerified]
  -[_HAPAccessoryServerBTLE200 peripheral:didModifyServices:]
  -[_HAPAccessoryServerBTLE200 peripheral:didDiscoverServices:]
  -[_HAPAccessoryServerBTLE200 peripheral:didDiscoverCharacteristicsForService:error:]
  -[_HAPAccessoryServerBTLE200 peripheral:didUpdateValueForCharacteristic:error:]
  -[_HAPAccessoryServerBTLE200 peripheral:didWriteValueForCharacteristic:error:]
  -[_HAPAccessoryServerBTLE200 peripheral:didUpdateNotificationStateForCharacteristic:error:]
  -[_HAPAccessoryServerBTLE200 peripheral:didDiscoverDescriptorsForCharacteristic:error:]
  -[_HAPAccessoryServerBTLE200 peripheral:didUpdateValueForDescriptor:error:]
  -[_HAPAccessoryServerBTLE200 pendingRequests]
  -[_HAPAccessoryServerBTLE200 disconnectWithCompletionHandler:]
  -[_HAPAccessoryServerBTLE200 timerDidFire:]
  -[_HAPAccessoryServerBTLE200 descriptionWithPointer:]
  -[_HAPAccessoryServerBTLE200 setVerified:]
  -[_HAPAccessoryServerBTLE200 _delegateRespondsToSelector:]
  -[_HAPAccessoryServerBTLE200 connectWithCompletionHandler:]
  -[_HAPAccessoryServerBTLE200 setConnectionState:]
  -[_HAPAccessoryServerBTLE200 featureFlags]
  -[_HAPAccessoryServerBTLE200 setFeatureFlags:]
  -[_HAPAccessoryServerBTLE200 authSession:sendAuthExchangeData:]
  -[_HAPAccessoryServerBTLE200 authSession:validateUUID:token:]
  -[_HAPAccessoryServerBTLE200 authSession:authenticateUUID:token:]
  -[_HAPAccessoryServerBTLE200 authSession:confirmUUID:token:]
  -[_HAPAccessoryServerBTLE200 authSession:authComplete:]
  -[_HAPAccessoryServerBTLE200 continueAuthAfterValidation:]
  -[_HAPAccessoryServerBTLE200 provisionToken:]
  -[_HAPAccessoryServerBTLE200 _establishSecureSession]
  -[_HAPAccessoryServerBTLE200 continuePairingAfterAuthPrompt]
  -[_HAPAccessoryServerBTLE200 setSecuritySessionOpen:]
  -[_HAPAccessoryServerBTLE200 removePairingForCurrentControllerOnQueue:completion:]
  -[_HAPAccessoryServerBTLE200 tearDownSessionOnAuthCompletion]
  -[_HAPAccessoryServerBTLE200 startPairingWithConsentRequired:config:ownershipToken:]
  -[_HAPAccessoryServerBTLE200 _enableEvents:forCharacteristics:withCompletionHandler:queue:]
  -[_HAPAccessoryServerBTLE200 clientOperationQueue]
  -[_HAPAccessoryServerBTLE200 enableEvents:forCharacteristics:withCompletionHandler:queue:]
  -[_HAPAccessoryServerBTLE200 authenticateAccessory]
  -[_HAPAccessoryServerBTLE200 authSession]
  -[_HAPAccessoryServerBTLE200 getAccessoryInfo:]
  -[_HAPAccessoryServerBTLE200 authenticatedProtocolInfo]
  -[_HAPAccessoryServerBTLE200 setAuthenticatedProtocolInfo:]
  -[_HAPAccessoryServerBTLE200 _validateProtocolInfo:]
  -[_HAPAccessoryServerBTLE200 _continuePairingAfterMFiCertValidation]
  -[_HAPAccessoryServerBTLE200 discoverAccessories]
  -[_HAPAccessoryServerBTLE200 tryPairingPassword:error:]
  -[_HAPAccessoryServerBTLE200 stopPairingWithError:]
  -[_HAPAccessoryServerBTLE200 readCharacteristicValues:timeout:completionQueue:completionHandler:]
  -[_HAPAccessoryServerBTLE200 writeCharacteristicValues:timeout:completionQueue:completionHandler:]
  -[_HAPAccessoryServerBTLE200 addPairing:completionQueue:completionHandler:]
  -[_HAPAccessoryServerBTLE200 removePairing:completionQueue:completionHandler:]
  -[_HAPAccessoryServerBTLE200 listPairingsWithCompletionQueue:completionHandler:]
  -[_HAPAccessoryServerBTLE200 identifyWithCompletion:]
  -[_HAPAccessoryServerBTLE200 _suspendConnectionIdleTimer]
  -[_HAPAccessoryServerBTLE200 _sendRequest:completionHandler:]
  -[_HAPAccessoryServerBTLE200 _readValueForCharacteristic:options:completionHandler:]
  -[_HAPAccessoryServerBTLE200 _writeValue:toCharacteristic:authorizationData:options:completionHandler:]
  -[_HAPAccessoryServerBTLE200 _performTimedWriteValue:toCharacteristic:authorizationData:options:completionHandler:]
  -[_HAPAccessoryServerBTLE200 _performWriteValue:toCharacteristic:authorizationData:options:completionHandler:]
  -[_HAPAccessoryServerBTLE200 _performTimedWriteExecuteForCharacteristic:value:options:completionHandler:]
  -[_HAPAccessoryServerBTLE200 _performTimedWritePrepareWithValue:toCharacteristic:authorizationData:options:completionHandler:]
  -[_HAPAccessoryServerBTLE200 _sendPairingRequestData:completionHandler:]
  -[_HAPAccessoryServerBTLE200 pairingsCharacteristic]
  -[_HAPAccessoryServerBTLE200 setSecuritySession:]
  -[_HAPAccessoryServerBTLE200 pairVerifyCharacteristic]
  -[_HAPAccessoryServerBTLE200 securitySession]
  -[_HAPAccessoryServerBTLE200 _cancelAllQueuedOperationsWithError:]
  -[_HAPAccessoryServerBTLE200 _resumeAllOperations]
  -[_HAPAccessoryServerBTLE200 _requestResponseForRequest:]
  -[_HAPAccessoryServerBTLE200 _reallySendRequest:completionHandler:]
  -[_HAPAccessoryServerBTLE200 _pendingResponseForRequest:]
  -[_HAPAccessoryServerBTLE200 pendingResponses]
  -[_HAPAccessoryServerBTLE200 _resumeConnectionIdleTimer]
  -[_HAPAccessoryServerBTLE200 _encryptDataAndGenerateAuthTag:error:]
  -[_HAPAccessoryServerBTLE200 _kickConnectionIdleTimer]
  -[_HAPAccessoryServerBTLE200 _decryptData:error:]
  -[_HAPAccessoryServerBTLE200 pairVerifyOperationQueue]
  -[_HAPAccessoryServerBTLE200 isSecuritySessionOpen]
  -[_HAPAccessoryServerBTLE200 _suspendAllOperations]
  -[_HAPAccessoryServerBTLE200 connectionIdleTimer]
  -[_HAPAccessoryServerBTLE200 setPairVerifyCharacteristic:]
  -[_HAPAccessoryServerBTLE200 setPairingsCharacteristic:]
  -[_HAPAccessoryServerBTLE200 _sendControlPacket:forRequest:completionHandler:]
  -[_HAPAccessoryServerBTLE200 _handleConnectionIdleTimeout]
  -[_HAPAccessoryServerBTLE200 controlOutputStream:didReceiveRequestToSendControlPacket:completionHandler:]
  -[_HAPAccessoryServerBTLE200 controlOutputStreamDidOpen:]
  -[_HAPAccessoryServerBTLE200 controlOutputStream:didCloseWithError:]
  -[_HAPAccessoryServerBTLE200 controlOutputStreamDidComplete:]
  -[_HAPAccessoryServerBTLE200 securitySession:didReceiveLocalPairingIdentityRequestWithError:]
  -[_HAPAccessoryServerBTLE200 securitySession:didReceiveRequestForPeerPairingIdentityWithIdentifier:error:]
  -[_HAPAccessoryServerBTLE200 securitySession:didReceiveSetupExchangeData:]
  -[_HAPAccessoryServerBTLE200 securitySessionIsOpening:]
  -[_HAPAccessoryServerBTLE200 securitySessionDidOpen:]
  -[_HAPAccessoryServerBTLE200 securitySession:didCloseWithError:]
  -[_HAPAccessoryServerBTLE200 _pendingRequestForCharacteristic:]
  -[_HAPAccessoryServerBTLE200 setConnectionIdleTimer:]
  -[_HAPAccessoryServerBTLE200 handleDisconnectionWithError:completionQueue:completionHandler:]
  -[_HAPAccessoryServerBTLE200 updateConnectionIdleTime:]
  -[_HAPAccessoryServerBTLE200 handleConnectionWithPeripheral:withError:]
  -[_HAPAccessoryServerBTLE200 initWithPeripheral:name:pairingUsername:statusFlags:stateNumber:stateChanged:connectReason:configNumber:category:setupHash:connectionIdleTime:browser:keyStore:]
  -[_HAPAccessoryServerBTLE200 _createPrimaryAccessoryFromAdvertisementData]
  -[_HAPAccessoryServerBTLE200 characteristicWriteCompletionHandlers]
  -[_HAPAccessoryServerBTLE200 characteristicEnableEventCompletionHandlers]
  -[_HAPAccessoryServerBTLE200 _cancelDiscoveryWithError:]
  -[_HAPAccessoryServerBTLE200 isPairing]
  -[_HAPAccessoryServerBTLE200 _pairingCompletedWithError:]
  -[_HAPAccessoryServerBTLE200 pairSetupSession]
  -[_HAPAccessoryServerBTLE200 setPairSetupSession:]
  -[_HAPAccessoryServerBTLE200 _serviceForCBService:]
  -[_HAPAccessoryServerBTLE200 _discoverWithType:completionHandler:]
  -[_HAPAccessoryServerBTLE200 discoveryContext]
  -[_HAPAccessoryServerBTLE200 setDiscoveryContext:]
  -[_HAPAccessoryServerBTLE200 _discoverServices]
  -[_HAPAccessoryServerBTLE200 _retryDiscovery]
  -[_HAPAccessoryServerBTLE200 hasValidCache]
  -[_HAPAccessoryServerBTLE200 _parseService:error:]
  -[_HAPAccessoryServerBTLE200 _cacheServices:]
  -[_HAPAccessoryServerBTLE200 accessoryCache]
  -[_HAPAccessoryServerBTLE200 _hapServicesFromCache]
  -[_HAPAccessoryServerBTLE200 setHasValidCache:]
  -[_HAPAccessoryServerBTLE200 _getCachedService:]
  -[_HAPAccessoryServerBTLE200 _getCBService:instanceOrder:]
  -[_HAPAccessoryServerBTLE200 _getCBCharacteristic:instanceId:service:]
  -[_HAPAccessoryServerBTLE200 _serviceCacheFromHAPService:serviceOrder:]
  -[_HAPAccessoryServerBTLE200 _discoverCharacteristicsForService:]
  -[_HAPAccessoryServerBTLE200 _readCharacteristicValue:]
  -[_HAPAccessoryServerBTLE200 _readCharacteristicSignatures]
  -[_HAPAccessoryServerBTLE200 _handleCompletedDiscovery]
  -[_HAPAccessoryServerBTLE200 isHAPCharacteristic:]
  -[_HAPAccessoryServerBTLE200 _discoverCharacteristic:]
  -[_HAPAccessoryServerBTLE200 _handleDiscoveredDescriptors:]
  -[_HAPAccessoryServerBTLE200 _readDescriptorValue:]
  -[_HAPAccessoryServerBTLE200 _handleReadCharacteristicValue:error:]
  -[_HAPAccessoryServerBTLE200 _handleReadServiceInstanceId:]
  -[_HAPAccessoryServerBTLE200 _readServiceSignature:]
  -[_HAPAccessoryServerBTLE200 _readCharacteristicSignature:]
  -[_HAPAccessoryServerBTLE200 _handleReadCharacteristicSignature:error:]
  -[_HAPAccessoryServerBTLE200 _getCharacteristicInstanceID:error:]
  -[_HAPAccessoryServerBTLE200 shouldVerifyHAPCharacteristic:]
  -[_HAPAccessoryServerBTLE200 _characteristicForCBCharacteristic:]
  -[_HAPAccessoryServerBTLE200 _handleReadServiceSignature:error:]
  -[_HAPAccessoryServerBTLE200 _getServiceInstanceID:]
  -[_HAPAccessoryServerBTLE200 shouldVerifyHAPService:]
  -[_HAPAccessoryServerBTLE200 _parseCharacteristic:error:]
  -[_HAPAccessoryServerBTLE200 _readCharacteristicValues:queue:completionHandler:]
  -[_HAPAccessoryServerBTLE200 markNotifyingCharacteristicUpdatedforCharacteristic:]
  -[_HAPAccessoryServerBTLE200 _enableEvent:forCharacteristic:withCompletionHandler:queue:]
  -[_HAPAccessoryServerBTLE200 _performEnableEvent:toCharacteristic:completionHandler:]
  -[_HAPAccessoryServerBTLE200 _enableEvent:toCharacteristic:completionHandler:]
  -[_HAPAccessoryServerBTLE200 _getProtocolInfoService]
  -[_HAPAccessoryServerBTLE200 _generateBroadcastKey:queue:withCompletionHandler:]
  -[_HAPAccessoryServerBTLE200 _configureBroadcastKeyGeneration:service:withCompletion:]
  -[_HAPAccessoryServerBTLE200 _configureCharacteristics:queue:withCompletionHandler:]
  -[_HAPAccessoryServerBTLE200 _enableBroadcastEvent:interval:forCharacteristic:completionHandler:]
  -[_HAPAccessoryServerBTLE200 setPairing:]
  -[_HAPAccessoryServerBTLE200 _checkForAuthPrompt:]
  -[_HAPAccessoryServerBTLE200 _getPairingFeaturesWithCompletionHandler:]
  -[_HAPAccessoryServerBTLE200 pairingFeaturesCharacteristic]
  -[_HAPAccessoryServerBTLE200 _parsePairingFeaturesCharacteristic:authMethod:error:]
  -[_HAPAccessoryServerBTLE200 setBadPairSetupCode:]
  -[_HAPAccessoryServerBTLE200 _getPairSetupType]
  -[_HAPAccessoryServerBTLE200 pairSetupCharacteristic]
  -[_HAPAccessoryServerBTLE200 isBadSetupCode]
  -[_HAPAccessoryServerBTLE200 setSetupCodeCompletionHandler:]
  -[_HAPAccessoryServerBTLE200 pairSetupBackoffTimeInterval]
  -[_HAPAccessoryServerBTLE200 setupCodeCompletionHandler]
  -[_HAPAccessoryServerBTLE200 setPairSetupBackoffTimeInterval:]
  -[_HAPAccessoryServerBTLE200 protocolInfoServiceSignatureCharacteristics]
  -[_HAPAccessoryServerBTLE200 setAuthSession:]
  -[_HAPAccessoryServerBTLE200 identifyCharacteristic]
  -[_HAPAccessoryServerBTLE200 _resetWithError:]
  -[_HAPAccessoryServerBTLE200 _maximumControlWriteLengthForRequest:]
  -[_HAPAccessoryServerBTLE200 _sendData:toCharacteristic:completionHandler:]
  -[_HAPAccessoryServerBTLE200 setConnectionCompletionHandler:]
  -[_HAPAccessoryServerBTLE200 _restartConnectionIdleTimer:]
  -[_HAPAccessoryServerBTLE200 connectionCompletionHandler]
  -[_HAPAccessoryServerBTLE200 _updateConnectionIdleTime:]
  -[_HAPAccessoryServerBTLE200 _handleConnectionWithError:]
  -[_HAPAccessoryServerBTLE200 _cancelConnectionWithError:]
  -[_HAPAccessoryServerBTLE200 _handleDiscoveredServices:error:]
  -[_HAPAccessoryServerBTLE200 _handleDiscoveredCharacteristicsForService:error:]
  -[_HAPAccessoryServerBTLE200 _handleDiscoveredCharactersitic:error:]
  -[_HAPAccessoryServerBTLE200 _handleReadDescriptorValue:error:]
  -[_HAPAccessoryServerBTLE200 _handleEventIndicationForCharacteristic:]
  -[_HAPAccessoryServerBTLE200 _handleResponseData:fromCharacteristic:error:]
  -[_HAPAccessoryServerBTLE200 _handleWriteCompletionForCharacteristic:error:]
  -[_HAPAccessoryServerBTLE200 _handleHAPNotificationStateUpdateForCharacteristic:error:]
  -[_HAPAccessoryServerBTLE200 _handlePairSetupSessionExchangeData:]
  -[_HAPAccessoryServerBTLE200 getLocalPairingIdentityWithError:]
  -[_HAPAccessoryServerBTLE200 _handlePairingSetupCodeRequestWithCompletionHandler:]
  -[_HAPAccessoryServerBTLE200 _sendProtocolInfoServiceExchangeData:completion:]
  -[_HAPAccessoryServerBTLE200 _handleSecuritySessionSetupExchangeData:]
  -[_HAPAccessoryServerBTLE200 pairSetupSession:didReceiveLocalPairingIdentityRequestWithError:]
  -[_HAPAccessoryServerBTLE200 pairSetupSession:didPairWithPeer:error:]
  -[_HAPAccessoryServerBTLE200 pairSetupSession:didReceiveSetupExchangeData:]
  -[_HAPAccessoryServerBTLE200 pairSetupSession:didStopWithError:]
  -[_HAPAccessoryServerBTLE200 pairSetupSession:didReceiveSetupCodeRequestWithCompletionHandler:]
  -[_HAPAccessoryServerBTLE200 pairSetupSessionDidReceiveInvalidSetupCode:]
  -[_HAPAccessoryServerBTLE200 pairSetupSession:didReceiveBackoffRequestWithTimeInterval:]
  -[_HAPAccessoryServerBTLE200 hapBLEProtocolVersion]
  -[_HAPAccessoryServerBTLE200 generateBroadcastKey:queue:withCompletionHandler:]
  -[_HAPAccessoryServerBTLE200 configureCharacteristics:queue:withCompletionHandler:]
  -[_HAPAccessoryServerBTLE200 isBLELinkConnected]
  -[_HAPAccessoryServerBTLE200 _notifyDelegateOfReceivedEncryptedAuthenticatedData:forCharacteristic:]
  -[_HAPAccessoryServerBTLE200 _notifyDelegateOfReceivedPlaintextData:forCharacteristic:]
  -[_HAPAccessoryServerBTLE200 _notifyDelegateOfSentEncryptedAuthenticatedData:forCharacteristic:]
  -[_HAPAccessoryServerBTLE200 _notifyDelegateOfSentPlaintextData:forCharacteristic:]
  -[_HAPAccessoryServerBTLE200 setAccessoryCache:]
  -[_HAPAccessoryServerBTLE200 setIdentifyCharacteristic:]
  -[_HAPAccessoryServerBTLE200 setPairingFeaturesCharacteristic:]
  -[_HAPAccessoryServerBTLE200 setPairSetupCharacteristic:]


HAPJSONValueTransformer : HAPValueTransformer
  // class methods
  +[HAPJSONValueTransformer initialize]
  +[HAPJSONValueTransformer expectedTransformedClassForFormat:]
  +[HAPJSONValueTransformer defaultJSONValueTransformer]

  // instance methods
  -[HAPJSONValueTransformer transformedValue:format:error:]
  -[HAPJSONValueTransformer reverseTransformedValue:format:error:]


HAPAccessoryServerBrowserIP : HAPAccessoryServerBrowser <HMFTimerDelegate, HAPWACAccessoryBrowserDelegate>
 @property  NSMutableSet *discoveredAccessoryServers
 @property  <HAPAccessoryServerBrowserDelegate> *delegate
 @property  NSObject<OS_dispatch_queue> *delegateQueue
 @property  NSMutableSet *pendingBonjourEvents
 @property  HMFTimer *bonjourEventTimer
 @property  HAPWACAccessoryBrowser *hapWACBrowser
 @property  NSArray *scanResults
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HAPAccessoryServerBrowserIP delegate]
  -[HAPAccessoryServerBrowserIP setDelegate:]
  -[HAPAccessoryServerBrowserIP .cxx_destruct]
  -[HAPAccessoryServerBrowserIP initWithQueue:]
  -[HAPAccessoryServerBrowserIP setDelegate:queue:]
  -[HAPAccessoryServerBrowserIP setDelegateQueue:]
  -[HAPAccessoryServerBrowserIP delegateQueue]
  -[HAPAccessoryServerBrowserIP linkType]
  -[HAPAccessoryServerBrowserIP timerDidFire:]
  -[HAPAccessoryServerBrowserIP _delegateRespondsToSelector:]
  -[HAPAccessoryServerBrowserIP bonjourEventTimer]
  -[HAPAccessoryServerBrowserIP setBonjourEventTimer:]
  -[HAPAccessoryServerBrowserIP visible2Pt4Networks]
  -[HAPAccessoryServerBrowserIP stopDiscoveringWACAccessoryServersWithInvalidation:]
  -[HAPAccessoryServerBrowserIP wacBrowser]
  -[HAPAccessoryServerBrowserIP notifyDelegatesOfWACCompletionWithIdentifier:error:]
  -[HAPAccessoryServerBrowserIP startDiscoveringWACAccessoryServers]
  -[HAPAccessoryServerBrowserIP processPendingBonjourRemoveEvents:]
  -[HAPAccessoryServerBrowserIP _matchAccessoryServerWithSetupID:serverIdentifier:completionHandler:]
  -[HAPAccessoryServerBrowserIP startDiscoveringAccessoryServers]
  -[HAPAccessoryServerBrowserIP stopDiscoveringAccessoryServers]
  -[HAPAccessoryServerBrowserIP matchAccessoryServerWithSetupID:serverIdentifier:completionHandler:]
  -[HAPAccessoryServerBrowserIP discoverAccessoryServerWithIdentifier:]
  -[HAPAccessoryServerBrowserIP _handleBonjourBrowserEvent:eventInfo:]
  -[HAPAccessoryServerBrowserIP _initializeAndStartBonjourBrowser]
  -[HAPAccessoryServerBrowserIP hapWACBrowser]
  -[HAPAccessoryServerBrowserIP startDiscoveringAirPlayAccessoriesWithDelegate:]
  -[HAPAccessoryServerBrowserIP _invalidateWACServers]
  -[HAPAccessoryServerBrowserIP discoveredAccessoryServers]
  -[HAPAccessoryServerBrowserIP _processPendingBonjourEvent:]
  -[HAPAccessoryServerBrowserIP _purgePendingBonjourEvents:withProcessing:]
  -[HAPAccessoryServerBrowserIP _handleBonjourAddOrUpdateWithEventInfo:]
  -[HAPAccessoryServerBrowserIP _server:forBonjourDevice:]
  -[HAPAccessoryServerBrowserIP _pendBonjourRemoveEvent:]
  -[HAPAccessoryServerBrowserIP _handleBonjourRemoveWithEventInfo:]
  -[HAPAccessoryServerBrowserIP _invalidateAccessoryServers:]
  -[HAPAccessoryServerBrowserIP _setReachability:forServer:]
  -[HAPAccessoryServerBrowserIP _invalidateAndRemoveAccessoryServer:]
  -[HAPAccessoryServerBrowserIP pendingBonjourEvents]
  -[HAPAccessoryServerBrowserIP _pendBonjourEvent:]
  -[HAPAccessoryServerBrowserIP _timerDidExpire:]
  -[HAPAccessoryServerBrowserIP setScanResults:]
  -[HAPAccessoryServerBrowserIP _server:forHAPWACAccessory:]
  -[HAPAccessoryServerBrowserIP serverWithIdentifier:]
  -[HAPAccessoryServerBrowserIP wacBrowser:didFindHAPWACAccessory:]
  -[HAPAccessoryServerBrowserIP wacBrowser:didRemoveHAPWACAccessory:]
  -[HAPAccessoryServerBrowserIP wacBrowser:didFindUnconfiguredPairedHAPWACAccessory:]
  -[HAPAccessoryServerBrowserIP startDiscoveringWACAccessoryServerWithIdentifier:]
  -[HAPAccessoryServerBrowserIP scanResults]
  -[HAPAccessoryServerBrowserIP setDiscoveredAccessoryServers:]
  -[HAPAccessoryServerBrowserIP setPendingBonjourEvents:]
  -[HAPAccessoryServerBrowserIP setHapWACBrowser:]


HAPRelayRequestMessage : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
 @property  unsigned short transactionIdentifier
 @property  NSSet *requestIdentifiers
 @property  NSData *body
 @property  BOOL encrypted
 @property  BOOL sent
 @property  BOOL finished
 @property  unsigned long type
 @property  double timeout
 @property  HMFBlockOperation *operation

  // instance methods
  -[HAPRelayRequestMessage type]
  -[HAPRelayRequestMessage .cxx_destruct]
  -[HAPRelayRequestMessage operation]
  -[HAPRelayRequestMessage setOperation:]
  -[HAPRelayRequestMessage isFinished]
  -[HAPRelayRequestMessage timeout]
  -[HAPRelayRequestMessage isEncrypted]
  -[HAPRelayRequestMessage shortDescription]
  -[HAPRelayRequestMessage body]
  -[HAPRelayRequestMessage transactionIdentifier]
  -[HAPRelayRequestMessage setTransactionIdentifier:]
  -[HAPRelayRequestMessage requestIdentifiers]
  -[HAPRelayRequestMessage initWithRequestData:messageType:timeout:]
  -[HAPRelayRequestMessage sent]
  -[HAPRelayRequestMessage addRequestIdentifier:]


HAPRelayResponseMessage : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
 @property  HAPRelayRequestMessage *request
 @property  BOOL encrypted
 @property  unsigned long type
 @property  long long statusCode
 @property  NSData *body

  // instance methods
  -[HAPRelayResponseMessage type]
  -[HAPRelayResponseMessage .cxx_destruct]
  -[HAPRelayResponseMessage statusCode]
  -[HAPRelayResponseMessage request]
  -[HAPRelayResponseMessage isEncrypted]
  -[HAPRelayResponseMessage shortDescription]
  -[HAPRelayResponseMessage setBody:]
  -[HAPRelayResponseMessage body]
  -[HAPRelayResponseMessage _deserializeResponseMessage:]
  -[HAPRelayResponseMessage initWithRequest:serializedMessage:]


HAPAccessoryServerRelay : HAPAccessoryServer <HAPSecuritySessionDelegate, HAPFragmentationStreamDelegate, HMFTimerDelegate, HAPStreamDelegate>
 @property  NSMutableArray *pendingRequests
 @property  NSMapTable *pendingResponses
 @property  NSOperationQueue *requestOperationQueue
 @property  NSOperationQueue *clientOperationQueue
 @property  HAPFragmentationStream *fragmentationStream
 @property  unsigned short nextRequestTransactionIdentifier
 @property  HAPSecuritySession *securitySession
 @property  BOOL securitySessionOpening
 @property  NSOperationQueue *pairVerifyOperationQueue
 @property  HMFExponentialBackoffTimer *reachabilityProbeTimer
 @property  unsigned long configurationNumber
 @property  BOOL discovered
 @property  BOOL shouldDiscover
 @property  HAPCharacteristic *pairingsCharacteristic
 @property  HAPRelayStream *stream
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HAPAccessoryServerRelay dealloc]
  -[HAPAccessoryServerRelay .cxx_destruct]
  -[HAPAccessoryServerRelay stream]
  -[HAPAccessoryServerRelay _enqueueRequest:]
  -[HAPAccessoryServerRelay requestOperationQueue]
  -[HAPAccessoryServerRelay pendingRequests]
  -[HAPAccessoryServerRelay linkType]
  -[HAPAccessoryServerRelay timerDidFire:]
  -[HAPAccessoryServerRelay isPaired]
  -[HAPAccessoryServerRelay hasPairings]
  -[HAPAccessoryServerRelay continuePairingAfterAuthPrompt]
  -[HAPAccessoryServerRelay removePairingForCurrentControllerOnQueue:completion:]
  -[HAPAccessoryServerRelay startPairingWithConsentRequired:config:ownershipToken:]
  -[HAPAccessoryServerRelay clientOperationQueue]
  -[HAPAccessoryServerRelay enableEvents:forCharacteristics:withCompletionHandler:queue:]
  -[HAPAccessoryServerRelay discoverAccessories]
  -[HAPAccessoryServerRelay tryPairingPassword:error:]
  -[HAPAccessoryServerRelay stopPairingWithError:]
  -[HAPAccessoryServerRelay readCharacteristicValues:timeout:completionQueue:completionHandler:]
  -[HAPAccessoryServerRelay writeCharacteristicValues:timeout:completionQueue:completionHandler:]
  -[HAPAccessoryServerRelay addPairing:completionQueue:completionHandler:]
  -[HAPAccessoryServerRelay removePairing:completionQueue:completionHandler:]
  -[HAPAccessoryServerRelay listPairingsWithCompletionQueue:completionHandler:]
  -[HAPAccessoryServerRelay identifyWithCompletion:]
  -[HAPAccessoryServerRelay _tearDownSessionWithError:]
  -[HAPAccessoryServerRelay _sendRequest:completionHandler:]
  -[HAPAccessoryServerRelay pairingsCharacteristic]
  -[HAPAccessoryServerRelay setSecuritySession:]
  -[HAPAccessoryServerRelay setSecuritySessionOpening:]
  -[HAPAccessoryServerRelay securitySession]
  -[HAPAccessoryServerRelay _cancelAllQueuedOperationsWithError:]
  -[HAPAccessoryServerRelay _resumeAllOperations]
  -[HAPAccessoryServerRelay pendingResponses]
  -[HAPAccessoryServerRelay _decryptData:error:]
  -[HAPAccessoryServerRelay pairVerifyOperationQueue]
  -[HAPAccessoryServerRelay isSecuritySessionOpening]
  -[HAPAccessoryServerRelay _suspendAllOperations]
  -[HAPAccessoryServerRelay setPairingsCharacteristic:]
  -[HAPAccessoryServerRelay getLocalPairingIdentityAndAllowCreation:error:]
  -[HAPAccessoryServerRelay securitySession:didReceiveLocalPairingIdentityRequestWithError:]
  -[HAPAccessoryServerRelay securitySession:didReceiveRequestForPeerPairingIdentityWithIdentifier:error:]
  -[HAPAccessoryServerRelay securitySession:didReceiveSetupExchangeData:]
  -[HAPAccessoryServerRelay securitySessionIsOpening:]
  -[HAPAccessoryServerRelay securitySessionDidOpen:]
  -[HAPAccessoryServerRelay securitySession:didCloseWithError:]
  -[HAPAccessoryServerRelay _handleSecuritySessionSetupExchangeData:]
  -[HAPAccessoryServerRelay reachabilityProbeTimer]
  -[HAPAccessoryServerRelay setReachabilityProbeTimer:]
  -[HAPAccessoryServerRelay shouldDiscover]
  -[HAPAccessoryServerRelay _establishSecuritySession]
  -[HAPAccessoryServerRelay _parseAttributeDatabase:configurationNumber:]
  -[HAPAccessoryServerRelay setShouldDiscover:]
  -[HAPAccessoryServerRelay _parseServicesFromPrimaryAccessory:]
  -[HAPAccessoryServerRelay setDiscovered:]
  -[HAPAccessoryServerRelay setConfigurationNumber:]
  -[HAPAccessoryServerRelay _readCharacteristicValues:timeout:completionQueue:completionHandler:]
  -[HAPAccessoryServerRelay _handleCharacteristicReadResponse:characteristics:error:completionQueue:completionHandler:]
  -[HAPAccessoryServerRelay _writeCharacteristicValues:timeout:completionQueue:completionHandler:]
  -[HAPAccessoryServerRelay _performTimedWriteValues:timeout:completionQueue:completionHandler:]
  -[HAPAccessoryServerRelay _performWriteValues:timeout:completionQueue:completionHandler:]
  -[HAPAccessoryServerRelay _handleCharacteristicWriteResponse:characteristicWriteRequestTuples:error:completionQueue:completionHandler:]
  -[HAPAccessoryServerRelay _handleCharacteristicPrepareWriteResponse:characteristicWriteRequestTuples:prepareIdentifier:error:timeout:completionQueue:completionHandler:]
  -[HAPAccessoryServerRelay _performExecuteWriteValues:prepareIdentifier:timeout:completionQueue:completionHandler:]
  -[HAPAccessoryServerRelay configurationNumber]
  -[HAPAccessoryServerRelay _startAddPairingWithIdentifier:publicKey:admin:pairingsCharacteristic:queue:completion:]
  -[HAPAccessoryServerRelay _removePairingWithIdentifier:publicKey:pairingsCharacteristic:queue:completion:]
  -[HAPAccessoryServerRelay _listPairingWithCompletionQueue:pairingsCharacteristic:completion:]
  -[HAPAccessoryServerRelay _encryptData:error:]
  -[HAPAccessoryServerRelay _nextTransactionIdentifier]
  -[HAPAccessoryServerRelay fragmentationStream]
  -[HAPAccessoryServerRelay _handleNotificationResponse:]
  -[HAPAccessoryServerRelay _handleReceivedMessageData:withIdentifier:error:]
  -[HAPAccessoryServerRelay _startReachabilityProbe]
  -[HAPAccessoryServerRelay _endReachabilityProbe]
  -[HAPAccessoryServerRelay _handleFragmentedResponse:transactionIdentifier:error:]
  -[HAPAccessoryServerRelay _handleReachabilityProbeFire]
  -[HAPAccessoryServerRelay fragmentationStream:didCloseWithError:]
  -[HAPAccessoryServerRelay fragmentationStream:didReceiveData:transactionIdentifier:error:]
  -[HAPAccessoryServerRelay streamDidSuspend:]
  -[HAPAccessoryServerRelay streamDidResume:]
  -[HAPAccessoryServerRelay stream:didCloseWithError:]
  -[HAPAccessoryServerRelay stream:didFailToWriteDataWithIdentifier:error:]
  -[HAPAccessoryServerRelay stream:didReceiveData:withIdentifier:]
  -[HAPAccessoryServerRelay initWithStream:name:identifier:keyStore:]
  -[HAPAccessoryServerRelay nextRequestTransactionIdentifier]
  -[HAPAccessoryServerRelay hasDiscovered]


HAPRelayActivationClient : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
 @property  <HAPRelayActivationClientDelegate> *delegate

  // instance methods
  -[HAPRelayActivationClient open]
  -[HAPRelayActivationClient close]
  -[HAPRelayActivationClient delegate]
  -[HAPRelayActivationClient setDelegate:]
  -[HAPRelayActivationClient .cxx_destruct]
  -[HAPRelayActivationClient requestChallenge]
  -[HAPRelayActivationClient requestCertificateWithPublicKey:challengeCertificate:challengeResponse:]


HAPFragmentationPacket : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
 @property  unsigned short transactionIdentifier
 @property  unsigned int length
 @property  unsigned int offset
 @property  NSData *data

  // instance methods
  -[HAPFragmentationPacket init]
  -[HAPFragmentationPacket length]
  -[HAPFragmentationPacket isEqual:]
  -[HAPFragmentationPacket .cxx_destruct]
  -[HAPFragmentationPacket data]
  -[HAPFragmentationPacket serialize]
  -[HAPFragmentationPacket offset]
  -[HAPFragmentationPacket shortDescription]
  -[HAPFragmentationPacket transactionIdentifier]
  -[HAPFragmentationPacket initWithFragmentedPacketData:]
  -[HAPFragmentationPacket initWithData:transactionIdentifier:length:offset:]


HAPFragmentationStream : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  NSMutableOrderedSet *pendingPackets
 @property  NSNumber *currentPacketTransactionIdentifier
 @property  <HAPFragmentationStreamDelegate> *delegate

  // class methods
  +[HAPFragmentationStream fragmentationPacketsForData:maxLength:transactionIdentifier:]

  // instance methods
  -[HAPFragmentationStream init]
  -[HAPFragmentationStream open]
  -[HAPFragmentationStream close]
  -[HAPFragmentationStream delegate]
  -[HAPFragmentationStream setDelegate:]
  -[HAPFragmentationStream .cxx_destruct]
  -[HAPFragmentationStream clientQueue]
  -[HAPFragmentationStream receivedFragmentedPacket:]
  -[HAPFragmentationStream currentPacketTransactionIdentifier]
  -[HAPFragmentationStream __removeAllPendingPacketsWithTransactionIdentifier:]
  -[HAPFragmentationStream __addFragmentationPacket:]
  -[HAPFragmentationStream __isTransactionCompleteWithTransactionIdentifier:]
  -[HAPFragmentationStream __transactionDataWithTransactionIdentifier:]
  -[HAPFragmentationStream setCurrentPacketTransactionIdentifier:]
  -[HAPFragmentationStream __filteredPacketsWithTransactionIdentifier:]
  -[HAPFragmentationStream pendingPackets]


HAPBridgedAccessory : HAPAccessory <HAPAccessoryServerInternalDelegate>
 @property  HAPCharacteristic *reachabilityCharacteristic
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HAPBridgedAccessory .cxx_destruct]
  -[HAPBridgedAccessory shortDescription]
  -[HAPBridgedAccessory setReachable:]
  -[HAPBridgedAccessory mergeObject:]
  -[HAPBridgedAccessory shouldMergeObject:]
  -[HAPBridgedAccessory isPrimary]
  -[HAPBridgedAccessory accessoryServer:didUpdateValueForCharacteristic:]
  -[HAPBridgedAccessory accessoryServerDidRequestCharacteristicsToRegisterForNotifications:]
  -[HAPBridgedAccessory initWithServer:instanceID:parsedServices:]
  -[HAPBridgedAccessory mergeWithAccessory:]
  -[HAPBridgedAccessory __parseServices]
  -[HAPBridgedAccessory __isReachable]
  -[HAPBridgedAccessory reachabilityCharacteristic]
  -[HAPBridgedAccessory __parseBridgeService:]
  -[HAPBridgedAccessory setReachabilityCharacteristic:]


HAPRelayAccessory : HAPAccessory <HAPAccessoryServerInternalDelegate, HAPRelayActivationClientDelegate, HAPRelayPairingClientDelegate>
 @property  HAPCharacteristic *relayControlPointCharacteristic
 @property  HAPCharacteristic *relayEnabledCharacteristic
 @property  NSString *relayAccessoryIdentifier
 @property  BOOL relayEnabled
 @property  unsigned long relayState
 @property  HAPRelayActivationClient *relayActivationClient
 @property  HAPRelayPairingClient *relayPairingClient
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPRelayAccessory requiredRelayServiceCharacteristics]

  // instance methods
  -[HAPRelayAccessory .cxx_destruct]
  -[HAPRelayAccessory supportsRelay]
  -[HAPRelayAccessory accessoryServer:didUpdateValueForCharacteristic:]
  -[HAPRelayAccessory initWithServer:instanceID:parsedServices:]
  -[HAPRelayAccessory _parseServices]
  -[HAPRelayAccessory relayControlPointCharacteristic]
  -[HAPRelayAccessory _setRelayEnabled:]
  -[HAPRelayAccessory _updateRelayEnabled:]
  -[HAPRelayAccessory relayEnabledCharacteristic]
  -[HAPRelayAccessory _relayState]
  -[HAPRelayAccessory _relayActivationClient]
  -[HAPRelayAccessory _stopRelayActivationWithError:]
  -[HAPRelayAccessory _setRelayActivationClient:]
  -[HAPRelayAccessory _handleRelayControlPointCharacteristicTransactionWithTLV8Data:completionHandler:]
  -[HAPRelayAccessory _handleRelayActivationChallenge:]
  -[HAPRelayAccessory _handleRelayActivationCertificate:]
  -[HAPRelayAccessory _relayPairingClient]
  -[HAPRelayAccessory _stopRelayPairingWithError:]
  -[HAPRelayAccessory _setRelayPairingClient:]
  -[HAPRelayAccessory _handleRelayPairingIdentifierRequest]
  -[HAPRelayAccessory setRelayAccessoryIdentifier:]
  -[HAPRelayAccessory relayAccessoryIdentifier]
  -[HAPRelayAccessory _handleRelayPairingPairingTokenRequestForControllerIdentifier:]
  -[HAPRelayAccessory _handleRelayPairingAccessTokenRequestWithAccessToken:accessoryIdentifier:]
  -[HAPRelayAccessory _parseRelayService:]
  -[HAPRelayAccessory setRelayControlPointCharacteristic:]
  -[HAPRelayAccessory _setRelayState:]
  -[HAPRelayAccessory setRelayEnabledCharacteristic:]
  -[HAPRelayAccessory relayActivationClient:didCloseWithError:]
  -[HAPRelayAccessory relayActivationClient:didReceiveChallenge:]
  -[HAPRelayAccessory relayActivationClient:didReceiveRelayCertificate:]
  -[HAPRelayAccessory relayPairingClient:didCloseWithError:]
  -[HAPRelayAccessory relayPairingClient:didReceiveControllerIdentifier:]
  -[HAPRelayAccessory relayPairingClient:didReceiveAccessToken:accessoryIdentifier:]
  -[HAPRelayAccessory isRelayEnabled]
  -[HAPRelayAccessory setRelayEnabled:]
  -[HAPRelayAccessory relayState]
  -[HAPRelayAccessory relayActivationClient]
  -[HAPRelayAccessory startRelayActivationWithActivationClient:]
  -[HAPRelayAccessory relayPairingClient]
  -[HAPRelayAccessory startRelayPairingWithPairingClient:]
  -[HAPRelayAccessory addRelayPairingWithIdentifier:accessToken:admin:queue:completionHandler:]
  -[HAPRelayAccessory removeRelayPairingWithIdentifier:queue:completionHandler:]


HAPHTTPClient : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit <HAPHTTPClientDebugDelegate, HMFLogging>
 @property  NSString *dnsName
 @property  NSObject<OS_dispatch_queue> *queue
 @property  <HAPHTTPClientDelegate> *delegate
 @property  NSObject<OS_dispatch_queue> *delegateQueue
 @property  <HAPHTTPClientDebugDelegate> *debugDelegate
 @property  NSObject<OS_dispatch_queue> *debugDelegateQueue
 @property  BOOL invalidateRequested
 @property  BOOL invalidated
 @property  long long port
 @property  HMFNetAddress *peerAddress
 @property  NSString *peerEndpointDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPHTTPClient logCategory]

  // instance methods
  -[HAPHTTPClient setQueue:]
  -[HAPHTTPClient invalidate]
  -[HAPHTTPClient queue]
  -[HAPHTTPClient delegate]
  -[HAPHTTPClient setDelegate:]
  -[HAPHTTPClient port]
  -[HAPHTTPClient .cxx_destruct]
  -[HAPHTTPClient isInvalidated]
  -[HAPHTTPClient setDelegate:queue:]
  -[HAPHTTPClient setDelegateQueue:]
  -[HAPHTTPClient delegateQueue]
  -[HAPHTTPClient setInvalidated:]
  -[HAPHTTPClient peerAddress]
  -[HAPHTTPClient logIdentifier]
  -[HAPHTTPClient _delegateRespondsToSelector:]
  -[HAPHTTPClient debugDelegate]
  -[HAPHTTPClient setDebugDelegate:]
  -[HAPHTTPClient peerEndpointDescription]
  -[HAPHTTPClient sendGETRequestToURL:timeout:completionHandler:]
  -[HAPHTTPClient sendPUTRequestToURL:withRequestObject:serializationType:timeout:completionHandler:]
  -[HAPHTTPClient initWithDNSName:queue:]
  -[HAPHTTPClient setDebugDelegate:queue:]
  -[HAPHTTPClient sendPOSTRequestToURL:withRequestObject:serializationType:completionHandler:]
  -[HAPHTTPClient enableUAPSessionSecurityWithReadKey:writeKey:error:]
  -[HAPHTTPClient httpClient:didReceiveHTTPMessageWithHeaders:body:]
  -[HAPHTTPClient httpClient:willSendHTTPMessageWithHeaders:body:]
  -[HAPHTTPClient initWithDNSName:port:eventsEnabled:queue:]
  -[HAPHTTPClient _initializeCoreUtilsHTTPClientWithPort:withEventsEnabled:]
  -[HAPHTTPClient setDebugDelegateQueue:]
  -[HAPHTTPClient dnsName]
  -[HAPHTTPClient setInvalidateRequested:]
  -[HAPHTTPClient _sendHTTPRequestToURL:withMethod:requestObject:serializationType:timeout:activity:completionHandler:]
  -[HAPHTTPClient _handleHTTPResponseForMessage:completionHandler:]
  -[HAPHTTPClient _serializeUAPJSONObject:error:]
  -[HAPHTTPClient _deserializeUAPJSONData:error:]
  -[HAPHTTPClient debugDelegateQueue]
  -[HAPHTTPClient sendDELETERequestToURL:withRequestObject:serializationType:completionHandler:]
  -[HAPHTTPClient _debugDelegateRespondsToSelector:]
  -[HAPHTTPClient setDnsName:]
  -[HAPHTTPClient invalidateRequested]


HAPBTLERequest : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
 @property  HAPBTLETransactionIdentifier *identifier
 @property  unsigned char type
 @property  HAPService *service
 @property  HAPCharacteristic *characteristic
 @property  BOOL encrypted
 @property  BOOL finished
 @property  NSData *body
 @property  double timeoutInterval
 @property  HMFBlockOperation *operation
 @property  HAPBTLEControlOutputStream *controlOutputStream
 @property  HMFTimer *responseTimer

  // instance methods
  -[HAPBTLERequest init]
  -[HAPBTLERequest type]
  -[HAPBTLERequest .cxx_destruct]
  -[HAPBTLERequest identifier]
  -[HAPBTLERequest operation]
  -[HAPBTLERequest setOperation:]
  -[HAPBTLERequest isFinished]
  -[HAPBTLERequest serialize]
  -[HAPBTLERequest service]
  -[HAPBTLERequest isEncrypted]
  -[HAPBTLERequest shortDescription]
  -[HAPBTLERequest cancelWithError:]
  -[HAPBTLERequest timeoutInterval]
  -[HAPBTLERequest body]
  -[HAPBTLERequest descriptionWithPointer:]
  -[HAPBTLERequest characteristic]
  -[HAPBTLERequest setResponseTimer:]
  -[HAPBTLERequest setControlOutputStream:]
  -[HAPBTLERequest responseTimer]
  -[HAPBTLERequest controlOutputStream]
  -[HAPBTLERequest initWithCharacteristic:requestType:bodyData:shouldEncrypt:timeoutInterval:]
  -[HAPBTLERequest _serializeHeader]


HAPPairSetupSession : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit <HMFTimerDelegate>
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  unsigned long state
 @property  ^{PairingSessionPrivate=} pairingSession
 @property  HMFTimer *backoffTimer
 @property  unsigned long pairSetupType
 @property  NSData *sessionReadKey
 @property  NSData *sessionWriteKey
 @property  NSMutableData *sessionReadNonce
 @property  NSMutableData *sessionWriteNonce
 @property  NSData *certificate
 @property  <HAPPairSetupSessionDelegate> *delegate
 @property  long long role
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPPairSetupSession initialize]
  +[HAPPairSetupSession isValidSetupCode:]

  // instance methods
  -[HAPPairSetupSession init]
  -[HAPPairSetupSession dealloc]
  -[HAPPairSetupSession _invalidate]
  -[HAPPairSetupSession delegate]
  -[HAPPairSetupSession role]
  -[HAPPairSetupSession .cxx_destruct]
  -[HAPPairSetupSession stop]
  -[HAPPairSetupSession start]
  -[HAPPairSetupSession state]
  -[HAPPairSetupSession setState:]
  -[HAPPairSetupSession certificate]
  -[HAPPairSetupSession shortDescription]
  -[HAPPairSetupSession clientQueue]
  -[HAPPairSetupSession timerDidFire:]
  -[HAPPairSetupSession descriptionWithPointer:]
  -[HAPPairSetupSession stopWithError:]
  -[HAPPairSetupSession _stopWithError:]
  -[HAPPairSetupSession setCertificate:]
  -[HAPPairSetupSession pairingSession]
  -[HAPPairSetupSession backoffTimer]
  -[HAPPairSetupSession setBackoffTimer:]
  -[HAPPairSetupSession pairSetupType]
  -[HAPPairSetupSession setPairSetupType:]
  -[HAPPairSetupSession receivedSetupExchangeData:error:]
  -[HAPPairSetupSession encryptData:additionalAuthenticatedData:error:]
  -[HAPPairSetupSession decryptData:additionalAuthenticatedData:error:]
  -[HAPPairSetupSession _processSetupExchangeData:error:]
  -[HAPPairSetupSession _handleLocalPairingIdentityRequestWithStatus:]
  -[HAPPairSetupSession initWithRole:pairSetupType:delegate:]
  -[HAPPairSetupSession generateSessionKeys]
  -[HAPPairSetupSession getCertificate]
  -[HAPPairSetupSession isSecureSession]
  -[HAPPairSetupSession _initializeSession]
  -[HAPPairSetupSession setSessionReadKey:]
  -[HAPPairSetupSession setSessionWriteKey:]
  -[HAPPairSetupSession setSessionReadNonce:]
  -[HAPPairSetupSession setSessionWriteNonce:]
  -[HAPPairSetupSession _handlePairSetupExchangeComplete]
  -[HAPPairSetupSession _processSetupCode:error:]
  -[HAPPairSetupSession handleInvalidSetupCode]
  -[HAPPairSetupSession handleSetupCodeRequest]
  -[HAPPairSetupSession _initiateClientPairSetupExchange]
  -[HAPPairSetupSession sessionReadKey]
  -[HAPPairSetupSession sessionWriteKey]
  -[HAPPairSetupSession sessionWriteNonce]
  -[HAPPairSetupSession sessionReadNonce]
  -[HAPPairSetupSession _handleBackoffExpiration]
  -[HAPPairSetupSession handleBackoffRequestWithTimeout:]
  -[HAPPairSetupSession handleSavePeerRequestWithPeerIdentity:error:]


HAPMetadataConstraints : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit <NSCopying, NSSecureCoding>
 @property  NSNumber *minimumValue
 @property  NSNumber *maximumValue
 @property  NSNumber *stepValue
 @property  NSNumber *minLength
 @property  NSNumber *maxLength
 @property  NSArray *validValues

  // class methods
  +[HAPMetadataConstraints supportsSecureCoding]

  // instance methods
  -[HAPMetadataConstraints copyWithZone:]
  -[HAPMetadataConstraints encodeWithCoder:]
  -[HAPMetadataConstraints initWithCoder:]
  -[HAPMetadataConstraints .cxx_destruct]
  -[HAPMetadataConstraints minLength]
  -[HAPMetadataConstraints setMinimumValue:]
  -[HAPMetadataConstraints setMaximumValue:]
  -[HAPMetadataConstraints minimumValue]
  -[HAPMetadataConstraints maximumValue]
  -[HAPMetadataConstraints setStepValue:]
  -[HAPMetadataConstraints stepValue]
  -[HAPMetadataConstraints maxLength]
  -[HAPMetadataConstraints setMaxLength:]
  -[HAPMetadataConstraints setMinLength:]
  -[HAPMetadataConstraints validValues]
  -[HAPMetadataConstraints setValidValues:]
  -[HAPMetadataConstraints isEqualToMetadataConstraints:]


HAPAccessoryServer : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
 @property  NSHashTable *internalDelegates
 @property  NSObject<OS_dispatch_queue> *internalDelegateQueue
 @property  <HAPAccessoryServerDelegate> *delegate
 @property  NSObject<OS_dispatch_queue> *delegateQueue
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  NSString *name
 @property  BOOL paired
 @property  BOOL hasPairings
 @property  BOOL reachable
 @property  BOOL securitySessionOpen
 @property  NSString *identifier
 @property  NSNumber *category
 @property  unsigned long configNumber
 @property  unsigned long stateNumber
 @property  BOOL incompatibleUpdate
 @property  HAPAccessory *primaryAccessory
 @property  NSArray *accessories
 @property  <HAPKeyStore> *keyStore
 @property  NSData *setupHash
 @property  HMFVersion *version
 @property  unsigned long pairSetupType
 @property  HAPDeviceID *deviceID
 @property  long long linkType
 @property  BOOL supportsTimedWrite
 @property  unsigned long authMethod
 @property  BOOL bleLinkConnected

  // class methods
  +[HAPAccessoryServer isAccessoryServerWithIdentifierPaired:keyStore:]

  // instance methods
  -[HAPAccessoryServer init]
  -[HAPAccessoryServer name]
  -[HAPAccessoryServer delegate]
  -[HAPAccessoryServer .cxx_destruct]
  -[HAPAccessoryServer setName:]
  -[HAPAccessoryServer identifier]
  -[HAPAccessoryServer category]
  -[HAPAccessoryServer setCategory:]
  -[HAPAccessoryServer setIdentifier:]
  -[HAPAccessoryServer version]
  -[HAPAccessoryServer setVersion:]
  -[HAPAccessoryServer setDelegate:queue:]
  -[HAPAccessoryServer deviceID]
  -[HAPAccessoryServer delegateQueue]
  -[HAPAccessoryServer clientQueue]
  -[HAPAccessoryServer reconfirm]
  -[HAPAccessoryServer accessories]
  -[HAPAccessoryServer linkType]
  -[HAPAccessoryServer isReachable]
  -[HAPAccessoryServer setReachable:]
  -[HAPAccessoryServer isPaired]
  -[HAPAccessoryServer internalDelegateQueue]
  -[HAPAccessoryServer setAccessories:]
  -[HAPAccessoryServer setStateNumber:]
  -[HAPAccessoryServer stateNumber]
  -[HAPAccessoryServer configNumber]
  -[HAPAccessoryServer initWithKeystore:]
  -[HAPAccessoryServer setupHash]
  -[HAPAccessoryServer setSetupHash:]
  -[HAPAccessoryServer keyStore]
  -[HAPAccessoryServer setHasPairings:]
  -[HAPAccessoryServer hasPairings]
  -[HAPAccessoryServer authMethod]
  -[HAPAccessoryServer continuePairingAfterAuthPrompt]
  -[HAPAccessoryServer setSecuritySessionOpen:]
  -[HAPAccessoryServer removePairingForCurrentControllerOnQueue:completion:]
  -[HAPAccessoryServer pairSetupType]
  -[HAPAccessoryServer startPairingWithConsentRequired:config:ownershipToken:]
  -[HAPAccessoryServer requiresTimedWrite:]
  -[HAPAccessoryServer enumerateInternalDelegatesUsingBlock:]
  -[HAPAccessoryServer setConfigNumber:]
  -[HAPAccessoryServer enableEvents:forCharacteristics:withCompletionHandler:queue:]
  -[HAPAccessoryServer setSupportsTimedWrite:]
  -[HAPAccessoryServer setPairSetupType:]
  -[HAPAccessoryServer setAuthMethod:]
  -[HAPAccessoryServer continuePairingUsingWAC]
  -[HAPAccessoryServer primaryAccessory]
  -[HAPAccessoryServer discoverAccessories]
  -[HAPAccessoryServer tryPairingPassword:error:]
  -[HAPAccessoryServer tearDownAndRestablishSession]
  -[HAPAccessoryServer stopPairingWithError:]
  -[HAPAccessoryServer readCharacteristicValues:timeout:completionQueue:completionHandler:]
  -[HAPAccessoryServer writeCharacteristicValues:timeout:completionQueue:completionHandler:]
  -[HAPAccessoryServer handleUpdatesForCharacteristics:stateNumber:]
  -[HAPAccessoryServer addPairing:completionQueue:completionHandler:]
  -[HAPAccessoryServer removePairing:completionQueue:completionHandler:]
  -[HAPAccessoryServer listPairingsWithCompletionQueue:completionHandler:]
  -[HAPAccessoryServer identifyWithCompletion:]
  -[HAPAccessoryServer productData]
  -[HAPAccessoryServer addInternalDelegate:]
  -[HAPAccessoryServer isSecuritySessionOpen]
  -[HAPAccessoryServer matchesSetupID:serverIdentifier:]
  -[HAPAccessoryServer setPrimaryAccessory:]
  -[HAPAccessoryServer isIncompatibleUpdate]
  -[HAPAccessoryServer isBLELinkConnected]
  -[HAPAccessoryServer matchesSetupID:]
  -[HAPAccessoryServer supportsTimedWrite]
  -[HAPAccessoryServer internalDelegates]
  -[HAPAccessoryServer removeInternalDelegate:]
  -[HAPAccessoryServer setIncompatibleUpdate:]


HAPMetadataUnit : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
 @property  NSString *name
 @property  NSString *unitDescription

  // class methods
  +[HAPMetadataUnit init:withDictionary:]

  // instance methods
  -[HAPMetadataUnit name]
  -[HAPMetadataUnit .cxx_destruct]
  -[HAPMetadataUnit setName:]
  -[HAPMetadataUnit dump]
  -[HAPMetadataUnit initWithName:description:]
  -[HAPMetadataUnit unitDescription]
  -[HAPMetadataUnit generateDictionary]
  -[HAPMetadataUnit setUnitDescription:]


HAPMetadataProperty : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
 @property  NSString *propertyType
 @property  NSNumber *bitPosition
 @property  NSString *propertyDescription

  // class methods
  +[HAPMetadataProperty init:withDictionary:]

  // instance methods
  -[HAPMetadataProperty .cxx_destruct]
  -[HAPMetadataProperty dump]
  -[HAPMetadataProperty propertyDescription]
  -[HAPMetadataProperty propertyType]
  -[HAPMetadataProperty setPropertyDescription:]
  -[HAPMetadataProperty setPropertyType:]
  -[HAPMetadataProperty generateDictionary]
  -[HAPMetadataProperty initWithType:bitPosition:description:]
  -[HAPMetadataProperty bitPosition]
  -[HAPMetadataProperty setBitPosition:]


HAPMetadataCharacteristicValue : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
 @property  NSNumber *minValue
 @property  NSNumber *maxValue
 @property  NSNumber *stepValue
 @property  NSNumber *minLength
 @property  NSNumber *maxLength
 @property  NSArray *validValues

  // class methods
  +[HAPMetadataCharacteristicValue initWithDictionary:]

  // instance methods
  -[HAPMetadataCharacteristicValue .cxx_destruct]
  -[HAPMetadataCharacteristicValue dump]
  -[HAPMetadataCharacteristicValue minLength]
  -[HAPMetadataCharacteristicValue setStepValue:]
  -[HAPMetadataCharacteristicValue stepValue]
  -[HAPMetadataCharacteristicValue maxLength]
  -[HAPMetadataCharacteristicValue setMaxLength:]
  -[HAPMetadataCharacteristicValue maxValue]
  -[HAPMetadataCharacteristicValue setMaxValue:]
  -[HAPMetadataCharacteristicValue setMinLength:]
  -[HAPMetadataCharacteristicValue minValue]
  -[HAPMetadataCharacteristicValue setMinValue:]
  -[HAPMetadataCharacteristicValue validValues]
  -[HAPMetadataCharacteristicValue generateDictionary]
  -[HAPMetadataCharacteristicValue initWithMinLength:maxLength:]
  -[HAPMetadataCharacteristicValue initWithMinValue:maxValue:stepValue:validValues:]


HAPMetadataCharacteristic : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
 @property  NSString *name
 @property  NSString *chrDescription
 @property  NSString *uuidStr
 @property  NSNumber *properties
 @property  NSString *format
 @property  NSString *units
 @property  HAPMetadataCharacteristicValue *valueMetadata

  // instance methods
  -[HAPMetadataCharacteristic name]
  -[HAPMetadataCharacteristic .cxx_destruct]
  -[HAPMetadataCharacteristic setName:]
  -[HAPMetadataCharacteristic dump]
  -[HAPMetadataCharacteristic format]
  -[HAPMetadataCharacteristic properties]
  -[HAPMetadataCharacteristic setProperties:]
  -[HAPMetadataCharacteristic setFormat:]
  -[HAPMetadataCharacteristic units]
  -[HAPMetadataCharacteristic setUnits:]
  -[HAPMetadataCharacteristic valueMetadata]
  -[HAPMetadataCharacteristic setValueMetadata:]
  -[HAPMetadataCharacteristic chrDescription]
  -[HAPMetadataCharacteristic setChrDescription:]
  -[HAPMetadataCharacteristic uuidStr]
  -[HAPMetadataCharacteristic initWithName:uuid:description:format:properties:]
  -[HAPMetadataCharacteristic generateDictionary:]
  -[HAPMetadataCharacteristic setUuidStr:]


HAPMetadataService : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
 @property  NSString *name
 @property  NSString *svcDescription
 @property  NSString *uuidStr
 @property  NSString *btleuuidStr
 @property  NSNumber *properties
 @property  NSArray *linkedServices
 @property  NSSet *mandatoryCharacteristics
 @property  NSSet *optionalCharacteristics
 @property  BOOL allowAssociatedService

  // instance methods
  -[HAPMetadataService name]
  -[HAPMetadataService .cxx_destruct]
  -[HAPMetadataService setName:]
  -[HAPMetadataService dump]
  -[HAPMetadataService properties]
  -[HAPMetadataService setProperties:]
  -[HAPMetadataService svcDescription]
  -[HAPMetadataService setSvcDescription:]
  -[HAPMetadataService linkedServices]
  -[HAPMetadataService setLinkedServices:]
  -[HAPMetadataService uuidStr]
  -[HAPMetadataService setUuidStr:]
  -[HAPMetadataService btleuuidStr]
  -[HAPMetadataService mandatoryCharacteristics]
  -[HAPMetadataService allowAssociatedService]
  -[HAPMetadataService optionalCharacteristics]
  -[HAPMetadataService initWithName:uuid:description:mandatoryChrTypes:properties:linkedServices:]
  -[HAPMetadataService generateDictionary:metadata:]
  -[HAPMetadataService setBtleuuidStr:]
  -[HAPMetadataService setMandatoryCharacteristics:]
  -[HAPMetadataService setOptionalCharacteristics:]
  -[HAPMetadataService setAllowAssociatedService:]


HAPMetadataTuple : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
 @property  NSString *characteristicType
 @property  NSString *serviceType
 @property  NSString *index

  // instance methods
  -[HAPMetadataTuple isEqual:]
  -[HAPMetadataTuple .cxx_destruct]
  -[HAPMetadataTuple index]
  -[HAPMetadataTuple serviceType]
  -[HAPMetadataTuple characteristicType]
  -[HAPMetadataTuple initWithCharacteristicType:serviceType:]


HAPMetadata : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
 @property  NSNumber *version
 @property  NSNumber *schemaVersion
 @property  NSString *hapBaseUUIDSuffix
 @property  NSMutableArray *parsedUUIDs
 @property  NSDictionary *hapUnitMap
 @property  NSDictionary *hapPropertyMap
 @property  NSDictionary *hapCharacteristicMap
 @property  NSDictionary *hapServiceMap
 @property  NSSet *hapSupportsAuthDataSet
 @property  NSDictionary *hapCharacteristicNameTypeMap
 @property  NSDictionary *hapServiceNameTypeMap
 @property  NSDictionary *rawPlist
 @property  NSArray *hapValueUnits
 @property  NSArray *hapProperties
 @property  NSArray *hapCharacteristics
 @property  NSArray *hapServices
 @property  NSArray *hapSupportsAuthDataTuples

  // class methods
  +[HAPMetadata getSharedInstance]
  +[HAPMetadata shortenHAPType:baseUUIDSuffix:]
  +[HAPMetadata getBuiltinInstance]
  +[HAPMetadata setBuiltinInstanceWithDictionary:]
  +[HAPMetadata setSharedInstance:version:schemaVersion:]

  // instance methods
  -[HAPMetadata .cxx_destruct]
  -[HAPMetadata version]
  -[HAPMetadata setVersion:]
  -[HAPMetadata schemaVersion]
  -[HAPMetadata initWithDictionary:error:]
  -[HAPMetadata setSchemaVersion:]
  -[HAPMetadata hapCharacteristics]
  -[HAPMetadata hapServices]
  -[HAPMetadata btleToServiceType:]
  -[HAPMetadata serviceUTIFromType:]
  -[HAPMetadata validateMandatoryCharacteristics:forService:]
  -[HAPMetadata getDefaultCharacteristicProperties:]
  -[HAPMetadata getDefaultServiceProperties:]
  -[HAPMetadata generateDictionary]
  -[HAPMetadata characteristicUTIFromType:]
  -[HAPMetadata setParsedUUIDs:]
  -[HAPMetadata parseVersion:]
  -[HAPMetadata parseMetadata:]
  -[HAPMetadata parsedUUIDs]
  -[HAPMetadata hapBaseUUIDSuffix]
  -[HAPMetadata parseCharacteristicValue:]
  -[HAPMetadata setHapCharacteristicNameTypeMap:]
  -[HAPMetadata characteristicTypeFromUTI:]
  -[HAPMetadata hapCharacteristicMap]
  -[HAPMetadata parseServiceCharacteristics:]
  -[HAPMetadata setHapServiceNameTypeMap:]
  -[HAPMetadata serviceTypeFromUTI:]
  -[HAPMetadata setHapBaseUUIDSuffix:]
  -[HAPMetadata parseUnits:]
  -[HAPMetadata setHapUnitMap:]
  -[HAPMetadata parseProperties:]
  -[HAPMetadata setHapPropertyMap:]
  -[HAPMetadata parseCharacteristics:]
  -[HAPMetadata setHapCharacteristicMap:]
  -[HAPMetadata parseServices:]
  -[HAPMetadata setHapServiceMap:]
  -[HAPMetadata parseCharacteristicServiceTuples:]
  -[HAPMetadata setHapSupportsAuthDataSet:]
  -[HAPMetadata hapServiceFromType:]
  -[HAPMetadata hapServiceNameTypeMap]
  -[HAPMetadata hapCharacteristicFromType:]
  -[HAPMetadata hapCharacteristicNameTypeMap]
  -[HAPMetadata hapUnitFromName:]
  -[HAPMetadata hapServiceMap]
  -[HAPMetadata hapSupportsAuthDataSet]
  -[HAPMetadata hapUnitMap]
  -[HAPMetadata hapPropertyMap]
  -[HAPMetadata updateRawPlist]
  -[HAPMetadata hapValueUnits]
  -[HAPMetadata hapProperties]
  -[HAPMetadata generateHAPMetadataTuplesDictionary:]
  -[HAPMetadata isStandardHAPService:]
  -[HAPMetadata isStandardHAPServiceName:]
  -[HAPMetadata isStandardHAPCharacteristic:]
  -[HAPMetadata isStandardHAPCharacteristicName:]
  -[HAPMetadata isStandardHAPUnitName:]
  -[HAPMetadata allowAssociatedService:]
  -[HAPMetadata descriptionFromServiceType:]
  -[HAPMetadata descriptionFromCharacteristicType:]
  -[HAPMetadata isMandatoryCharacteristic:forService:]
  -[HAPMetadata characteristicValueUnitOfType:]
  -[HAPMetadata serviceTypeToBTLE:]
  -[HAPMetadata supportsAdditionalAuthorizationData:forService:]
  -[HAPMetadata getDefaultCharacteristicMetadata:]
  -[HAPMetadata hapCharacteristicFromName:]
  -[HAPMetadata hapServiceFromName:]
  -[HAPMetadata hapSupportsAuthDataTuples]
  -[HAPMetadata initWithServices:characteristics:units:properties:addAuthDataTuples:hapBaseUUIDSuffix:]
  -[HAPMetadata rawPlist]


HAPCharacteristicMetadata : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit <NSCopying, NSSecureCoding>
 @property  HAPMetadataConstraints *constraints
 @property  NSString *manufacturerDescription
 @property  NSString *format
 @property  NSString *units

  // class methods
  +[HAPCharacteristicMetadata supportsSecureCoding]

  // instance methods
  -[HAPCharacteristicMetadata copyWithZone:]
  -[HAPCharacteristicMetadata encodeWithCoder:]
  -[HAPCharacteristicMetadata initWithCoder:]
  -[HAPCharacteristicMetadata .cxx_destruct]
  -[HAPCharacteristicMetadata constraints]
  -[HAPCharacteristicMetadata format]
  -[HAPCharacteristicMetadata setFormat:]
  -[HAPCharacteristicMetadata setConstraints:]
  -[HAPCharacteristicMetadata units]
  -[HAPCharacteristicMetadata setUnits:]
  -[HAPCharacteristicMetadata manufacturerDescription]
  -[HAPCharacteristicMetadata setManufacturerDescription:]
  -[HAPCharacteristicMetadata isEqualToCharacteristicMetadata:]
  -[HAPCharacteristicMetadata initWithConstraints:description:format:units:]
  -[HAPCharacteristicMetadata _generateValidConstraints:]


HAPAccessoryServerBrowser : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  <HAPKeyStore> *keyStore
 @property  long long linkType

  // instance methods
  -[HAPAccessoryServerBrowser .cxx_destruct]
  -[HAPAccessoryServerBrowser initWithQueue:]
  -[HAPAccessoryServerBrowser setDelegate:queue:]
  -[HAPAccessoryServerBrowser workQueue]
  -[HAPAccessoryServerBrowser setWorkQueue:]
  -[HAPAccessoryServerBrowser linkType]
  -[HAPAccessoryServerBrowser keyStore]
  -[HAPAccessoryServerBrowser setKeyStore:]
  -[HAPAccessoryServerBrowser startDiscoveringAccessoryServers]
  -[HAPAccessoryServerBrowser stopDiscoveringAccessoryServers]
  -[HAPAccessoryServerBrowser matchAccessoryServerWithSetupID:serverIdentifier:completionHandler:]
  -[HAPAccessoryServerBrowser discoverAccessoryServerWithIdentifier:]


HAPAccessory : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit <HMFMerging>
 @property  HAPAccessoryServer *server
 @property  BOOL primary
 @property  BOOL reachable
 @property  BOOL supportsRelay
 @property  NSNumber *instanceID
 @property  NSString *identifier
 @property  NSString *uniqueIdentifier
 @property  NSArray *services
 @property  NSString *serverIdentifier
 @property  NSString *name
 @property  NSString *model
 @property  NSString *manufacturer
 @property  NSString *serialNumber
 @property  NSString *firmwareVersion
 @property  NSString *productData
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  <HAPAccessoryDelegate> *delegate
 @property  BOOL paired
 @property  NSNumber *category
 @property  long long linkType
 @property  HMFMACAddress *bluetoothClassicMacAddress
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPAccessory productDataStringFromData:]
  +[HAPAccessory isAccessoryPairedWithIdentifier:]
  +[HAPAccessory serverIdentifierWithUniqueIdentifier:]
  +[HAPAccessory instanceIDForUniqueIdentifier:]
  +[HAPAccessory isAccessoryPrimaryWithUniqueIdentifier:]

  // instance methods
  -[HAPAccessory init]
  -[HAPAccessory isEqual:]
  -[HAPAccessory name]
  -[HAPAccessory invalidate]
  -[HAPAccessory delegate]
  -[HAPAccessory setDelegate:]
  -[HAPAccessory .cxx_destruct]
  -[HAPAccessory setName:]
  -[HAPAccessory identifier]
  -[HAPAccessory category]
  -[HAPAccessory setIdentifier:]
  -[HAPAccessory uniqueIdentifier]
  -[HAPAccessory setServer:]
  -[HAPAccessory model]
  -[HAPAccessory server]
  -[HAPAccessory setModel:]
  -[HAPAccessory workQueue]
  -[HAPAccessory setWorkQueue:]
  -[HAPAccessory setUniqueIdentifier:]
  -[HAPAccessory _isReachable]
  -[HAPAccessory serialNumber]
  -[HAPAccessory firmwareVersion]
  -[HAPAccessory services]
  -[HAPAccessory manufacturer]
  -[HAPAccessory setManufacturer:]
  -[HAPAccessory linkType]
  -[HAPAccessory isReachable]
  -[HAPAccessory setReachable:]
  -[HAPAccessory mergeObject:]
  -[HAPAccessory shouldMergeObject:]
  -[HAPAccessory setServices:]
  -[HAPAccessory setSerialNumber:]
  -[HAPAccessory isPaired]
  -[HAPAccessory serverIdentifier]
  -[HAPAccessory setServerIdentifier:]
  -[HAPAccessory isPrimary]
  -[HAPAccessory setPrimary:]
  -[HAPAccessory supportsRelay]
  -[HAPAccessory setSupportsRelay:]
  -[HAPAccessory setFirmwareVersion:]
  -[HAPAccessory instanceID]
  -[HAPAccessory initWithServer:instanceID:]
  -[HAPAccessory initWithServer:instanceID:parsedServices:]
  -[HAPAccessory setProductData:]
  -[HAPAccessory readCharacteristicValues:timeout:completionQueue:completionHandler:]
  -[HAPAccessory writeCharacteristicValues:timeout:completionQueue:completionHandler:]
  -[HAPAccessory productData]
  -[HAPAccessory writeCharacteristicValue:timeout:completionQueue:completionHandler:]
  -[HAPAccessory readValueForCharacteristic:timeout:completionQueue:completionHandler:]
  -[HAPAccessory characteristicsOfType:]
  -[HAPAccessory setInstanceID:]
  -[HAPAccessory servicesOfType:]
  -[HAPAccessory _validateCharacteristicValues]
  -[HAPAccessory _updateAndValidateServices]
  -[HAPAccessory _setReachable:]
  -[HAPAccessory _updateService:]
  -[HAPAccessory _updateForAccessoryInformationService]
  -[HAPAccessory characteristicOfType:serviceType:]
  -[HAPAccessory bluetoothClassicMacAddress]
  -[HAPAccessory setBluetoothClassicMacAddress:]


HAPPairingIdentity : HMFPairingIdentity /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
 @property  unsigned long permissions

  // class methods
  +[HAPPairingIdentity supportsSecureCoding]

  // instance methods
  -[HAPPairingIdentity copyWithZone:]
  -[HAPPairingIdentity encodeWithCoder:]
  -[HAPPairingIdentity initWithCoder:]
  -[HAPPairingIdentity initWithIdentifier:publicKey:privateKey:]
  -[HAPPairingIdentity permissions]
  -[HAPPairingIdentity initWithIdentifier:publicKey:privateKey:permissions:]


HAPBLEPeripheral : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
 @property  NSString *accessoryName
 @property  NSUUID *peripheralUUID
 @property  NSNumber *hkType
 @property  NSNumber *advInterval
 @property  NSNumber *pairingStatusFlag
 @property  NSString *pairingIdentifier
 @property  NSNumber *category
 @property  NSNumber *stateNumber
 @property  NSNumber *configNumber
 @property  NSNumber *compatibleVersion
 @property  NSData *encryptedPayload
 @property  NSNumber *averageRSSI
 @property  NSData *setupHash
 @property  double lastSeen

  // instance methods
  -[HAPBLEPeripheral isEqual:]
  -[HAPBLEPeripheral .cxx_destruct]
  -[HAPBLEPeripheral category]
  -[HAPBLEPeripheral setCategory:]
  -[HAPBLEPeripheral accessoryName]
  -[HAPBLEPeripheral encryptedPayload]
  -[HAPBLEPeripheral lastSeen]
  -[HAPBLEPeripheral setLastSeen:]
  -[HAPBLEPeripheral pairingIdentifier]
  -[HAPBLEPeripheral setPairingIdentifier:]
  -[HAPBLEPeripheral setEncryptedPayload:]
  -[HAPBLEPeripheral setAccessoryName:]
  -[HAPBLEPeripheral setStateNumber:]
  -[HAPBLEPeripheral peripheralUUID]
  -[HAPBLEPeripheral stateNumber]
  -[HAPBLEPeripheral configNumber]
  -[HAPBLEPeripheral updateStateNumber:]
  -[HAPBLEPeripheral setupHash]
  -[HAPBLEPeripheral setConfigNumber:]
  -[HAPBLEPeripheral hkType]
  -[HAPBLEPeripheral advInterval]
  -[HAPBLEPeripheral pairingStatusFlag]
  -[HAPBLEPeripheral compatibleVersion]
  -[HAPBLEPeripheral setPeripheralUUID:]
  -[HAPBLEPeripheral setHkType:]
  -[HAPBLEPeripheral setAdvInterval:]
  -[HAPBLEPeripheral setCompatibleVersion:]
  -[HAPBLEPeripheral setPairingStatusFlag:]
  -[HAPBLEPeripheral setAverageRSSI:]
  -[HAPBLEPeripheral initWithName:peripheralUUID:hkType:advInterval:pairingStatusFlag:pairingIdentifier:category:stateNumber:configNumber:hapBLECompatibleVersion:setupHash:encryptedPayload:]
  -[HAPBLEPeripheral updateWithPeripheral:]
  -[HAPBLEPeripheral _resetAverageRSSI]
  -[HAPBLEPeripheral averageRSSI]


HAPAccessoryServerBrowserWiProxBTLE : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit <WPHomeKitDelegate, HMFLogging>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  <HAPAccessoryServerBrowserWiProxBTLEDelegate> *delegate
 @property  NSObject<OS_dispatch_queue> *delegateQueue
 @property  WPHomeKit *wpHomeKit
 @property  long long currentScanState
 @property  BOOL scanInBackground
 @property  NSMutableSet *trackedIdentifiers
 @property  NSMutableSet *trackedPeripherals
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPAccessoryServerBrowserWiProxBTLE logCategory]

  // instance methods
  -[HAPAccessoryServerBrowserWiProxBTLE delegate]
  -[HAPAccessoryServerBrowserWiProxBTLE .cxx_destruct]
  -[HAPAccessoryServerBrowserWiProxBTLE workQueue]
  -[HAPAccessoryServerBrowserWiProxBTLE delegateQueue]
  -[HAPAccessoryServerBrowserWiProxBTLE initWithDelegate:queue:]
  -[HAPAccessoryServerBrowserWiProxBTLE pauseScans]
  -[HAPAccessoryServerBrowserWiProxBTLE homeKitDidUpdateState:]
  -[HAPAccessoryServerBrowserWiProxBTLE homeKit:foundDevice:withData:RSSI:type:]
  -[HAPAccessoryServerBrowserWiProxBTLE resetLastSeenForTrackedAccessories:]
  -[HAPAccessoryServerBrowserWiProxBTLE startBrowsingForHAPBLEAccessories]
  -[HAPAccessoryServerBrowserWiProxBTLE stopBrowsingForHAPBLEAccessories]
  -[HAPAccessoryServerBrowserWiProxBTLE startTrackingHAPBLEAccessoriesWithIdentifiers:]
  -[HAPAccessoryServerBrowserWiProxBTLE retrieveStateForTrackedAccessoryWithIdentifier:onQueue:withCompletion:]
  -[HAPAccessoryServerBrowserWiProxBTLE updateStateForIdentifier:stateNumber:]
  -[HAPAccessoryServerBrowserWiProxBTLE stopTrackingHAPBLEAccessoriesWithIdentifiers:]
  -[HAPAccessoryServerBrowserWiProxBTLE probeReachabilityForTrackedAccessories]
  -[HAPAccessoryServerBrowserWiProxBTLE wpHomeKit]
  -[HAPAccessoryServerBrowserWiProxBTLE _stopScanning]
  -[HAPAccessoryServerBrowserWiProxBTLE setCurrentScanState:]
  -[HAPAccessoryServerBrowserWiProxBTLE _startBrowsingForHAPBLEAccessories]
  -[HAPAccessoryServerBrowserWiProxBTLE _startScanningWithData:]
  -[HAPAccessoryServerBrowserWiProxBTLE _stopBrowsingForHAPBLEAccessories]
  -[HAPAccessoryServerBrowserWiProxBTLE trackedIdentifiers]
  -[HAPAccessoryServerBrowserWiProxBTLE scanInBackground]
  -[HAPAccessoryServerBrowserWiProxBTLE _startTrackingHAPBLEAccessoriesWithIdentifiers:restartScan:]
  -[HAPAccessoryServerBrowserWiProxBTLE currentScanState]
  -[HAPAccessoryServerBrowserWiProxBTLE _stopTrackingHAPBLEAccessoriesWithIdentifiers:]
  -[HAPAccessoryServerBrowserWiProxBTLE _removeTrackedPeripheral:]
  -[HAPAccessoryServerBrowserWiProxBTLE trackedPeripherals]
  -[HAPAccessoryServerBrowserWiProxBTLE _getTrackedPeripheralWithIdentifier:]
  -[HAPAccessoryServerBrowserWiProxBTLE _getLinkQuality:]
  -[HAPAccessoryServerBrowserWiProxBTLE _probeReachabilityForTrackedAccessories]
  -[HAPAccessoryServerBrowserWiProxBTLE _reportHAPPeripheral:]
  -[HAPAccessoryServerBrowserWiProxBTLE homeKit:foundDevice:withData:RSSI:]
  -[HAPAccessoryServerBrowserWiProxBTLE _parseAdvertisementData:forPeripheral:RSSI:]
  -[HAPAccessoryServerBrowserWiProxBTLE homeKit:foundDevice:withData:]
  -[HAPAccessoryServerBrowserWiProxBTLE homeKitStartedScanning:]
  -[HAPAccessoryServerBrowserWiProxBTLE homeKitStoppedScanning:]
  -[HAPAccessoryServerBrowserWiProxBTLE homeKit:failedToStartScanningWithError:]
  -[HAPAccessoryServerBrowserWiProxBTLE setScanInBackground:]


HAPBTLEControlOutputStream : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
 @property  @? completionHandler
 @property  BOOL complete
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  BOOL open
 @property  unsigned long controlPayloadWrittenLength
 @property  NSOperationQueue *operationQueue
 @property  <HAPBTLEControlOutputStreamDelegate> *delegate
 @property  unsigned char type
 @property  HAPBTLETransactionIdentifier *transactionIdentifier
 @property  NSData *payload
 @property  unsigned long mtuLength
 @property  double timeoutInterval

  // class methods
  +[HAPBTLEControlOutputStream shortDescription]

  // instance methods
  -[HAPBTLEControlOutputStream init]
  -[HAPBTLEControlOutputStream type]
  -[HAPBTLEControlOutputStream open]
  -[HAPBTLEControlOutputStream close]
  -[HAPBTLEControlOutputStream delegate]
  -[HAPBTLEControlOutputStream setDelegate:]
  -[HAPBTLEControlOutputStream .cxx_destruct]
  -[HAPBTLEControlOutputStream operationQueue]
  -[HAPBTLEControlOutputStream isOpen]
  -[HAPBTLEControlOutputStream payload]
  -[HAPBTLEControlOutputStream completionHandler]
  -[HAPBTLEControlOutputStream setCompletionHandler:]
  -[HAPBTLEControlOutputStream shortDescription]
  -[HAPBTLEControlOutputStream isComplete]
  -[HAPBTLEControlOutputStream setComplete:]
  -[HAPBTLEControlOutputStream _complete]
  -[HAPBTLEControlOutputStream timeoutInterval]
  -[HAPBTLEControlOutputStream clientQueue]
  -[HAPBTLEControlOutputStream setOpen:]
  -[HAPBTLEControlOutputStream descriptionWithPointer:]
  -[HAPBTLEControlOutputStream transactionIdentifier]
  -[HAPBTLEControlOutputStream mtuLength]
  -[HAPBTLEControlOutputStream _closeWithError:]
  -[HAPBTLEControlOutputStream initWithControlType:transactionIdentifier:controlPayload:mtuLength:timeoutInterval:]
  -[HAPBTLEControlOutputStream remainingControlPayloadLength]
  -[HAPBTLEControlOutputStream controlPayloadWrittenLength]
  -[HAPBTLEControlOutputStream sendNextPayloadFragment]
  -[HAPBTLEControlOutputStream _sendNextPayloadFragmentWithCompletionHandler:]
  -[HAPBTLEControlOutputStream _nextPacketWithMaximumLength:error:]
  -[HAPBTLEControlOutputStream setControlPayloadWrittenLength:]


HAPBTLETuple : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned long atvState
 @property  {BTStatus=QQQQQQQQQQQQQQQQBBB} state
 @property  int maxHAPConnections
 @property  float minBandwidth
 @property  float maxBandwidth

  // class methods
  +[HAPBTLETuple makeTupleWithATVState:MaxHAPConnections:]
  +[HAPBTLETuple atvState2String:]
  +[HAPBTLETuple bandwidthFromATVState:MinBandwidth:MaxBandwidth:]
  +[HAPBTLETuple makeTupleWithATVState:MaxHAPConnections:MinBandwidth:MaxBandwidth:]
  +[HAPBTLETuple state2String:]
  +[HAPBTLETuple makeTupleWithState:MaxHAPConnections:MinBandwidth:MaxBandwidth:]

  // instance methods
  -[HAPBTLETuple state]
  -[HAPBTLETuple setState:]
  -[HAPBTLETuple atvState]
  -[HAPBTLETuple maxHAPConnections]
  -[HAPBTLETuple setAtvState:]
  -[HAPBTLETuple setMinBandwidth:]
  -[HAPBTLETuple setMaxBandwidth:]
  -[HAPBTLETuple setMaxHAPConnections:]
  -[HAPBTLETuple minBandwidth]
  -[HAPBTLETuple maxBandwidth]


HAPCharacteristicReadCompletionTuple : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
 @property  @? handler
 @property  NSObject<OS_dispatch_queue> *completionQueue

  // class methods
  +[HAPCharacteristicReadCompletionTuple readCompletionTupleWithHandler:queue:]

  // instance methods
  -[HAPCharacteristicReadCompletionTuple handler]
  -[HAPCharacteristicReadCompletionTuple .cxx_destruct]
  -[HAPCharacteristicReadCompletionTuple setHandler:]
  -[HAPCharacteristicReadCompletionTuple setCompletionQueue:]
  -[HAPCharacteristicReadCompletionTuple completionQueue]


HAPAddRemovePairingOperation : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
 @property  long long operation
 @property  NSString *identifier
 @property  NSData *publicKey
 @property  BOOL admin
 @property  NSObject<OS_dispatch_queue> *queue
 @property  @? completionHandler
 @property  BOOL operationExecuting

  // instance methods
  -[HAPAddRemovePairingOperation setQueue:]
  -[HAPAddRemovePairingOperation queue]
  -[HAPAddRemovePairingOperation .cxx_destruct]
  -[HAPAddRemovePairingOperation identifier]
  -[HAPAddRemovePairingOperation operation]
  -[HAPAddRemovePairingOperation setOperation:]
  -[HAPAddRemovePairingOperation setIdentifier:]
  -[HAPAddRemovePairingOperation publicKey]
  -[HAPAddRemovePairingOperation completionHandler]
  -[HAPAddRemovePairingOperation setCompletionHandler:]
  -[HAPAddRemovePairingOperation setPublicKey:]
  -[HAPAddRemovePairingOperation setAdmin:]
  -[HAPAddRemovePairingOperation setOperationExecuting:]
  -[HAPAddRemovePairingOperation initWith:identifier:publicKey:admin:queue:completion:]
  -[HAPAddRemovePairingOperation admin]
  -[HAPAddRemovePairingOperation operationExecuting]


_HAPAccessoryServerBTLE100 : HAPAccessoryServerBTLE <HAPSecuritySessionDelegate, CBPeripheralDelegate>
 @property  unsigned long state
 @property  unsigned long connectionRetryCount
 @property  NSMapTable *btleServiceToHAPServiceMap
 @property  unsigned long characteristicDiscoveryRequestCount
 @property  unsigned long characteristicValueReadCount
 @property  unsigned long metadataDiscoveryRequestCount
 @property  unsigned long metadataValueReadCount
 @property  unsigned long availableInstanceID
 @property  NSMapTable *btleCharacteristicToHAPCharacteristicMap
 @property  NSMapTable *hapCharacteristicReadCompletionQueues
 @property  NSMapTable *hapCharacteristicWriteCompletionQueues
 @property  NSMapTable *hapCharacteristicEnableEventCompletionQueues
 @property  NSMutableArray *addRemovePairingOperationsQueue
 @property  CBService *pairingService
 @property  CBCharacteristic *pairSetupCharacteristic
 @property  CBCharacteristic *pairVerifyCharacteristic
 @property  CBCharacteristic *pairingFeaturesCharacteristic
 @property  CBCharacteristic *pairingsCharacteristic
 @property  CBService *accessoryInfoService
 @property  CBCharacteristic *identifyCharacteristic
 @property  CBCharacteristic *modelCharacteristic
 @property  CBCharacteristic *serialNumberCharacteristic
 @property  CBCharacteristic *manufacturerCharacteristic
 @property  NSString *controllerUsername
 @property  @? pairVerifyCompletionBlock
 @property  BOOL startPairingRequested
 @property  BOOL pairingFeaturesRead
 @property  unsigned long pairingFeatureFlags
 @property  HAPSecuritySession *securitySession
 @property  BOOL securitySessionOpening
 @property  NSObject<OS_dispatch_source> *connectionLifetimeTimer
 @property  double idleConnectionTimeoutInSec
 @property  BOOL disconnecting
 @property  BOOL unpairedIdentifyRequested
 @property  @? unpairedIdentifyCompletionBlock
 @property  BOOL removeOnDisconnect
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_HAPAccessoryServerBTLE100 serializeCharacteristicWriteValue:characteristicFormat:supportsAdditonalAuthentication:authenticationData:error:]
  +[_HAPAccessoryServerBTLE100 deserializeCharacteristicReadData:characteristicFormat:supportsAdditonalAuthentication:error:]
  +[_HAPAccessoryServerBTLE100 _convertFromBTLEToHAPUUID:]

  // instance methods
  -[_HAPAccessoryServerBTLE100 dealloc]
  -[_HAPAccessoryServerBTLE100 .cxx_destruct]
  -[_HAPAccessoryServerBTLE100 state]
  -[_HAPAccessoryServerBTLE100 setState:]
  -[_HAPAccessoryServerBTLE100 peripheral:didModifyServices:]
  -[_HAPAccessoryServerBTLE100 peripheral:didDiscoverServices:]
  -[_HAPAccessoryServerBTLE100 peripheral:didDiscoverCharacteristicsForService:error:]
  -[_HAPAccessoryServerBTLE100 peripheral:didUpdateValueForCharacteristic:error:]
  -[_HAPAccessoryServerBTLE100 peripheral:didWriteValueForCharacteristic:error:]
  -[_HAPAccessoryServerBTLE100 peripheral:didUpdateNotificationStateForCharacteristic:error:]
  -[_HAPAccessoryServerBTLE100 peripheral:didDiscoverDescriptorsForCharacteristic:error:]
  -[_HAPAccessoryServerBTLE100 peripheral:didUpdateValueForDescriptor:error:]
  -[_HAPAccessoryServerBTLE100 isDisconnecting]
  -[_HAPAccessoryServerBTLE100 _resetState]
  -[_HAPAccessoryServerBTLE100 _delegateRespondsToSelector:]
  -[_HAPAccessoryServerBTLE100 _getAttributeDatabase]
  -[_HAPAccessoryServerBTLE100 setPairVerifyCompletionBlock:]
  -[_HAPAccessoryServerBTLE100 _establishSecureSession]
  -[_HAPAccessoryServerBTLE100 continuePairingAfterAuthPrompt]
  -[_HAPAccessoryServerBTLE100 _pairSetupTryPassword:]
  -[_HAPAccessoryServerBTLE100 removePairingForCurrentControllerOnQueue:completion:]
  -[_HAPAccessoryServerBTLE100 startPairingWithConsentRequired:config:ownershipToken:]
  -[_HAPAccessoryServerBTLE100 _enableEvents:forCharacteristics:withCompletionHandler:queue:]
  -[_HAPAccessoryServerBTLE100 enableEvents:forCharacteristics:withCompletionHandler:queue:]
  -[_HAPAccessoryServerBTLE100 pairVerifyCompletionBlock]
  -[_HAPAccessoryServerBTLE100 controllerUsername]
  -[_HAPAccessoryServerBTLE100 _ensurePairingSessionIsInitializedWithType:]
  -[_HAPAccessoryServerBTLE100 _removePairingWithIdentifier:publicKey:queue:completion:]
  -[_HAPAccessoryServerBTLE100 discoverAccessories]
  -[_HAPAccessoryServerBTLE100 tryPairingPassword:error:]
  -[_HAPAccessoryServerBTLE100 stopPairingWithError:]
  -[_HAPAccessoryServerBTLE100 readCharacteristicValues:timeout:completionQueue:completionHandler:]
  -[_HAPAccessoryServerBTLE100 writeCharacteristicValues:timeout:completionQueue:completionHandler:]
  -[_HAPAccessoryServerBTLE100 addPairing:completionQueue:completionHandler:]
  -[_HAPAccessoryServerBTLE100 removePairing:completionQueue:completionHandler:]
  -[_HAPAccessoryServerBTLE100 listPairingsWithCompletionQueue:completionHandler:]
  -[_HAPAccessoryServerBTLE100 identifyWithCompletion:]
  -[_HAPAccessoryServerBTLE100 setControllerUsername:]
  -[_HAPAccessoryServerBTLE100 pairingsCharacteristic]
  -[_HAPAccessoryServerBTLE100 setSecuritySession:]
  -[_HAPAccessoryServerBTLE100 setSecuritySessionOpening:]
  -[_HAPAccessoryServerBTLE100 pairVerifyCharacteristic]
  -[_HAPAccessoryServerBTLE100 securitySession]
  -[_HAPAccessoryServerBTLE100 _encryptDataAndGenerateAuthTag:error:]
  -[_HAPAccessoryServerBTLE100 _decryptData:error:]
  -[_HAPAccessoryServerBTLE100 isSecuritySessionOpening]
  -[_HAPAccessoryServerBTLE100 setPairVerifyCharacteristic:]
  -[_HAPAccessoryServerBTLE100 setPairingsCharacteristic:]
  -[_HAPAccessoryServerBTLE100 getLocalPairingIdentityAndAllowCreation:error:]
  -[_HAPAccessoryServerBTLE100 securitySession:didReceiveLocalPairingIdentityRequestWithError:]
  -[_HAPAccessoryServerBTLE100 securitySession:didReceiveRequestForPeerPairingIdentityWithIdentifier:error:]
  -[_HAPAccessoryServerBTLE100 securitySession:didReceiveSetupExchangeData:]
  -[_HAPAccessoryServerBTLE100 securitySessionIsOpening:]
  -[_HAPAccessoryServerBTLE100 securitySessionDidOpen:]
  -[_HAPAccessoryServerBTLE100 securitySession:didCloseWithError:]
  -[_HAPAccessoryServerBTLE100 pairingService]
  -[_HAPAccessoryServerBTLE100 setPairingService:]
  -[_HAPAccessoryServerBTLE100 handleDisconnectionWithError:completionQueue:completionHandler:]
  -[_HAPAccessoryServerBTLE100 updateConnectionIdleTime:]
  -[_HAPAccessoryServerBTLE100 handleConnectionWithPeripheral:withError:]
  -[_HAPAccessoryServerBTLE100 initWithPeripheral:name:pairingUsername:statusFlags:stateNumber:stateChanged:connectReason:configNumber:category:setupHash:connectionIdleTime:browser:keyStore:]
  -[_HAPAccessoryServerBTLE100 _createPrimaryAccessoryFromAdvertisementData]
  -[_HAPAccessoryServerBTLE100 _enableEvent:forCharacteristic:withCompletionHandler:queue:]
  -[_HAPAccessoryServerBTLE100 pairingFeaturesCharacteristic]
  -[_HAPAccessoryServerBTLE100 pairSetupCharacteristic]
  -[_HAPAccessoryServerBTLE100 identifyCharacteristic]
  -[_HAPAccessoryServerBTLE100 _handleConnectionWithError:]
  -[_HAPAccessoryServerBTLE100 _handleHAPNotificationStateUpdateForCharacteristic:error:]
  -[_HAPAccessoryServerBTLE100 hapBLEProtocolVersion]
  -[_HAPAccessoryServerBTLE100 generateBroadcastKey:queue:withCompletionHandler:]
  -[_HAPAccessoryServerBTLE100 configureCharacteristics:queue:withCompletionHandler:]
  -[_HAPAccessoryServerBTLE100 isBLELinkConnected]
  -[_HAPAccessoryServerBTLE100 _notifyDelegateOfReceivedEncryptedAuthenticatedData:forCharacteristic:]
  -[_HAPAccessoryServerBTLE100 _notifyDelegateOfReceivedPlaintextData:forCharacteristic:]
  -[_HAPAccessoryServerBTLE100 _notifyDelegateOfSentEncryptedAuthenticatedData:forCharacteristic:]
  -[_HAPAccessoryServerBTLE100 _notifyDelegateOfSentPlaintextData:forCharacteristic:]
  -[_HAPAccessoryServerBTLE100 setIdentifyCharacteristic:]
  -[_HAPAccessoryServerBTLE100 setPairingFeaturesCharacteristic:]
  -[_HAPAccessoryServerBTLE100 setPairSetupCharacteristic:]
  -[_HAPAccessoryServerBTLE100 setBtleServiceToHAPServiceMap:]
  -[_HAPAccessoryServerBTLE100 setBtleCharacteristicToHAPCharacteristicMap:]
  -[_HAPAccessoryServerBTLE100 setHapCharacteristicReadCompletionQueues:]
  -[_HAPAccessoryServerBTLE100 setHapCharacteristicWriteCompletionQueues:]
  -[_HAPAccessoryServerBTLE100 setHapCharacteristicEnableEventCompletionQueues:]
  -[_HAPAccessoryServerBTLE100 setAddRemovePairingOperationsQueue:]
  -[_HAPAccessoryServerBTLE100 setModelCharacteristic:]
  -[_HAPAccessoryServerBTLE100 setSerialNumberCharacteristic:]
  -[_HAPAccessoryServerBTLE100 setManufacturerCharacteristic:]
  -[_HAPAccessoryServerBTLE100 setConnectionRetryCount:]
  -[_HAPAccessoryServerBTLE100 setCharacteristicDiscoveryRequestCount:]
  -[_HAPAccessoryServerBTLE100 setCharacteristicValueReadCount:]
  -[_HAPAccessoryServerBTLE100 setMetadataDiscoveryRequestCount:]
  -[_HAPAccessoryServerBTLE100 setMetadataValueReadCount:]
  -[_HAPAccessoryServerBTLE100 setAvailableInstanceID:]
  -[_HAPAccessoryServerBTLE100 setStartPairingRequested:]
  -[_HAPAccessoryServerBTLE100 unpairedIdentifyRequested]
  -[_HAPAccessoryServerBTLE100 setRemoveOnDisconnect:]
  -[_HAPAccessoryServerBTLE100 setUnpairedIdentifyRequested:]
  -[_HAPAccessoryServerBTLE100 connectionLifetimeTimer]
  -[_HAPAccessoryServerBTLE100 setConnectionLifetimeTimer:]
  -[_HAPAccessoryServerBTLE100 setIdleConnectionTimeoutInSec:]
  -[_HAPAccessoryServerBTLE100 _handlePairingStateMachine]
  -[_HAPAccessoryServerBTLE100 _updateConnectionLifetimeTimer]
  -[_HAPAccessoryServerBTLE100 _setupBTLEConnectionToPeripheral]
  -[_HAPAccessoryServerBTLE100 setAccessoryInfoService:]
  -[_HAPAccessoryServerBTLE100 accessoryInfoService]
  -[_HAPAccessoryServerBTLE100 pairingFeaturesRead]
  -[_HAPAccessoryServerBTLE100 startPairingRequested]
  -[_HAPAccessoryServerBTLE100 _cancelConnectionLifetimeTimer]
  -[_HAPAccessoryServerBTLE100 _checkForAuthPrompt]
  -[_HAPAccessoryServerBTLE100 modelCharacteristic]
  -[_HAPAccessoryServerBTLE100 manufacturerCharacteristic]
  -[_HAPAccessoryServerBTLE100 serialNumberCharacteristic]
  -[_HAPAccessoryServerBTLE100 _pairSetupStart]
  -[_HAPAccessoryServerBTLE100 _reallyEstablishSecureSession]
  -[_HAPAccessoryServerBTLE100 _handleHAPServiceDiscovery]
  -[_HAPAccessoryServerBTLE100 _handleDescriptorDiscovery]
  -[_HAPAccessoryServerBTLE100 _handleReadDescriptorValues]
  -[_HAPAccessoryServerBTLE100 setDisconnecting:]
  -[_HAPAccessoryServerBTLE100 _readCharacteristicValues:completionQueue:completionHandler:]
  -[_HAPAccessoryServerBTLE100 _btleCharacteristicForHAPCharacteristic:]
  -[_HAPAccessoryServerBTLE100 _enqueueEnableEventCompletionHandler:queue:forCharacteristic:]
  -[_HAPAccessoryServerBTLE100 _hapCharacteristicForBTLECharacteristic:]
  -[_HAPAccessoryServerBTLE100 _dequeueEnableEventCompletionTupleForCharacteristic:]
  -[_HAPAccessoryServerBTLE100 _handleSuccessfulBTLEConnection]
  -[_HAPAccessoryServerBTLE100 connectionRetryCount]
  -[_HAPAccessoryServerBTLE100 _handleDisconnectionWithQueue:withCompletion:]
  -[_HAPAccessoryServerBTLE100 unpairedIdentifyCompletionBlock]
  -[_HAPAccessoryServerBTLE100 setUnpairedIdentifyCompletionBlock:]
  -[_HAPAccessoryServerBTLE100 btleCharacteristicToHAPCharacteristicMap]
  -[_HAPAccessoryServerBTLE100 _dequeueReadCompletionTupleForCharacteristic:]
  -[_HAPAccessoryServerBTLE100 _dequeueWriteCompletionHandlerForCharacteristic:]
  -[_HAPAccessoryServerBTLE100 addRemovePairingOperationsQueue]
  -[_HAPAccessoryServerBTLE100 removeOnDisconnect]
  -[_HAPAccessoryServerBTLE100 hapCharacteristicWriteCompletionQueues]
  -[_HAPAccessoryServerBTLE100 hapCharacteristicReadCompletionQueues]
  -[_HAPAccessoryServerBTLE100 hapCharacteristicEnableEventCompletionQueues]
  -[_HAPAccessoryServerBTLE100 _writeCharacteristicValues:queue:completionHandler:]
  -[_HAPAccessoryServerBTLE100 _writeValue:forCharacteristic:authorizationData:withCompletionHandler:queue:]
  -[_HAPAccessoryServerBTLE100 _shouldEnableSessionSecurity]
  -[_HAPAccessoryServerBTLE100 _enqueueWriteCompletionHandler:forCharacteristic:]
  -[_HAPAccessoryServerBTLE100 _readValueForCharacteristic:completionQueue:completionHandler:]
  -[_HAPAccessoryServerBTLE100 _enqueueReadCompletionHandler:queue:forCharacteristic:]
  -[_HAPAccessoryServerBTLE100 readValueForCharacteristic:queue:completionHandler:]
  -[_HAPAccessoryServerBTLE100 _pairVerifyHAPCharacteristic]
  -[_HAPAccessoryServerBTLE100 characteristicDiscoveryRequestCount]
  -[_HAPAccessoryServerBTLE100 metadataDiscoveryRequestCount]
  -[_HAPAccessoryServerBTLE100 metadataValueReadCount]
  -[_HAPAccessoryServerBTLE100 characteristicValueReadCount]
  -[_HAPAccessoryServerBTLE100 _parseBTLEService:withInstanceId:]
  -[_HAPAccessoryServerBTLE100 btleServiceToHAPServiceMap]
  -[_HAPAccessoryServerBTLE100 _nextInstanceID]
  -[_HAPAccessoryServerBTLE100 availableInstanceID]
  -[_HAPAccessoryServerBTLE100 _handleConnectionLifetimeTimeout]
  -[_HAPAccessoryServerBTLE100 _handleHAPCharacteristicDiscoveryForService:error:]
  -[_HAPAccessoryServerBTLE100 _parseBTLECharacteristicDescriptor:existingDescriptors:characteristics:]
  -[_HAPAccessoryServerBTLE100 _pairSetupHAPCharacteristic]
  -[_HAPAccessoryServerBTLE100 _handlePairSetupExchangeWithData:]
  -[_HAPAccessoryServerBTLE100 _handleReceivedSecuritySessionSetupExchangeData:]
  -[_HAPAccessoryServerBTLE100 setPairingFeaturesRead:]
  -[_HAPAccessoryServerBTLE100 _handleHAPServiceDiscoveryCompletionForService:withInstanceId:]
  -[_HAPAccessoryServerBTLE100 _handleUpdatedValueForBTLECharacteristic:error:]
  -[_HAPAccessoryServerBTLE100 _handleHAPWriteConfirmationForCharacteristic:error:]
  -[_HAPAccessoryServerBTLE100 idleConnectionTimeoutInSec]
  -[_HAPAccessoryServerBTLE100 _addPairingWithIdentifier:publicKey:admin:queue:completion:]
  -[_HAPAccessoryServerBTLE100 _enqueueOperation:identifier:publicKey:admin:queue:completion:]
  -[_HAPAccessoryServerBTLE100 _dequeueAndContinueOperation]
  -[_HAPAccessoryServerBTLE100 _handlePairingsWriteForCharacteristic:writeError:removing:queue:completion:]
  -[_HAPAccessoryServerBTLE100 _handlePairingsReadForCharacteristic:readError:removing:queue:completion:]
  -[_HAPAccessoryServerBTLE100 pairingFeatureFlags]
  -[_HAPAccessoryServerBTLE100 setPairingFeatureFlags:]


HAPCharacteristic : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit <HMFMerging>
 @property  CBCharacteristic *cbCharacteristic
 @property  NSString *type
 @property  NSNumber *instanceID
 @property  HAPService *service
 @property  unsigned long properties
 @property  BOOL eventNotificationsEnabled
 @property  HAPCharacteristicMetadata *metadata
 @property  HAPCharacteristicMetadata *accessoryMetadata
 @property  NSDate *valueUpdatedTime
 @property  BOOL shouldValidateValueAfterReading
 @property  id value
 @property  NSNumber *stateNumber
 @property  BOOL supportsAdditionalAuthorizationData
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HAPCharacteristic isEqual:]
  -[HAPCharacteristic type]
  -[HAPCharacteristic setType:]
  -[HAPCharacteristic .cxx_destruct]
  -[HAPCharacteristic value]
  -[HAPCharacteristic setValue:]
  -[HAPCharacteristic properties]
  -[HAPCharacteristic setMetadata:]
  -[HAPCharacteristic metadata]
  -[HAPCharacteristic setProperties:]
  -[HAPCharacteristic service]
  -[HAPCharacteristic setService:]
  -[HAPCharacteristic mergeObject:]
  -[HAPCharacteristic shouldMergeObject:]
  -[HAPCharacteristic instanceID]
  -[HAPCharacteristic valueUpdatedTime]
  -[HAPCharacteristic setValueUpdatedTime:]
  -[HAPCharacteristic setStateNumber:]
  -[HAPCharacteristic stateNumber]
  -[HAPCharacteristic setEventNotificationsEnabled:]
  -[HAPCharacteristic shouldValidateValueAfterReading]
  -[HAPCharacteristic validateValue:outValue:]
  -[HAPCharacteristic eventNotificationsEnabled]
  -[HAPCharacteristic isEqualToCharacteristic:]
  -[HAPCharacteristic setShouldValidateValueAfterReading:]
  -[HAPCharacteristic initWithType:instanceID:value:stateNumber:properties:eventNotificationsEnabled:metadata:]
  -[HAPCharacteristic accessoryMetadata]
  -[HAPCharacteristic propertiesDescription]
  -[HAPCharacteristic setInstanceID:]
  -[HAPCharacteristic cbCharacteristic]
  -[HAPCharacteristic setCBCharacteristic:]
  -[HAPCharacteristic _updateMetadata:withProvidedMetadata:]
  -[HAPCharacteristic _generateValidMetadata:]
  -[HAPCharacteristic supportsAdditionalAuthorizationData]


HAPCharacteristicEvent : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
 @property  NSString *serverIdentifier
 @property  NSNumber *accessoryInstanceID
 @property  NSNumber *serviceInstanceID
 @property  NSNumber *characteristicInstanceID
 @property  id value
 @property  NSDate *updateTime
 @property  NSNumber *stateNumber

  // class methods
  +[HAPCharacteristicEvent eventWithCharacteristic:]

  // instance methods
  -[HAPCharacteristicEvent init]
  -[HAPCharacteristicEvent .cxx_destruct]
  -[HAPCharacteristicEvent value]
  -[HAPCharacteristicEvent updateTime]
  -[HAPCharacteristicEvent serverIdentifier]
  -[HAPCharacteristicEvent initWithCharacteristic:]
  -[HAPCharacteristicEvent stateNumber]
  -[HAPCharacteristicEvent serviceInstanceID]
  -[HAPCharacteristicEvent accessoryInstanceID]
  -[HAPCharacteristicEvent characteristicInstanceID]


HAPWACAccessory : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
 @property  CUWiFiDevice *cuWiFiDevice
 @property  HMFUnfairLock *lock
 @property  double discoveryTime
 @property  NSString *name
 @property  NSString *model
 @property  NSString *manufacturer
 @property  NSNumber *wacCategory
 @property  NSNumber *rssi
 @property  NSData *bssid
 @property  NSString *ssid
 @property  NSUUID *identifier
 @property  NSString *deviceId
 @property  NSData *setupHash
 @property  NSDictionary *rawScanResult
 @property  BOOL supportsAirPlay
 @property  BOOL supportsLegacyWAC
 @property  BOOL supportsWAC2
 @property  BOOL supportsTokenAuth
 @property  BOOL supportsCertAuth
 @property  BOOL requiresOwnershipToken
 @property  BOOL isHomeKitAccessory
 @property  BOOL isAirPlayAccessory
 @property  unsigned long supportedWiFiBands
 @property  BOOL homeKitPaired
 @property  BOOL pairSetupWAC
 @property  unsigned long authFeatures
 @property  unsigned long version

  // instance methods
  -[HAPWACAccessory name]
  -[HAPWACAccessory lock]
  -[HAPWACAccessory .cxx_destruct]
  -[HAPWACAccessory identifier]
  -[HAPWACAccessory version]
  -[HAPWACAccessory model]
  -[HAPWACAccessory ssid]
  -[HAPWACAccessory rssi]
  -[HAPWACAccessory manufacturer]
  -[HAPWACAccessory deviceId]
  -[HAPWACAccessory rawScanResult]
  -[HAPWACAccessory bssid]
  -[HAPWACAccessory requiresOwnershipToken]
  -[HAPWACAccessory updateWithHAPWACAccessory:]
  -[HAPWACAccessory pairSetupWAC]
  -[HAPWACAccessory setupHash]
  -[HAPWACAccessory wacCategory]
  -[HAPWACAccessory supportsTokenAuth]
  -[HAPWACAccessory supportsCertAuth]
  -[HAPWACAccessory supportsLegacyWAC]
  -[HAPWACAccessory supportsWAC2]
  -[HAPWACAccessory discoveryTime]
  -[HAPWACAccessory supportedWiFiBands]
  -[HAPWACAccessory isHomeKitAccessory]
  -[HAPWACAccessory __setupSupportedFlags:]
  -[HAPWACAccessory supportsAirPlay]
  -[HAPWACAccessory homeKitPaired]
  -[HAPWACAccessory authFeatures]
  -[HAPWACAccessory cuWiFiDevice]
  -[HAPWACAccessory initWithWiFiDevice:]
  -[HAPWACAccessory initWithName:identifier:category:ssid:deviceId:flags:]
  -[HAPWACAccessory isAirPlayAccessory]
  -[HAPWACAccessory setDiscoveryTime:]


HAPWACAccessoryBrowser : HAPAccessoryServerBrowser <HMFTimerDelegate, HMFLogging>
 @property  NSString *browsingIdentifier
 @property  NSDate *browsingStartTime
 @property  <HAPAirPlayAccessoryBrowserDelegate> *airplayDelegate
 @property  NSString *scanning2Pt4SSID
 @property  @? found2Pt4Completion
 @property  <HAPWACAccessoryBrowserDelegate> *delegate
 @property  NSMutableSet *foundUnconfiguredUnpairedAccessories
 @property  NSMutableSet *foundUnconfiguredPairedAccessories
 @property  NSMutableSet *found2Pt4Networks
 @property  CUWiFiScanner *cuWiFiScanner
 @property  unsigned long state
 @property  HMFTimer *backoffTimer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPWACAccessoryBrowser logCategory]

  // instance methods
  -[HAPWACAccessoryBrowser delegate]
  -[HAPWACAccessoryBrowser .cxx_destruct]
  -[HAPWACAccessoryBrowser state]
  -[HAPWACAccessoryBrowser setState:]
  -[HAPWACAccessoryBrowser initWithDelegate:queue:]
  -[HAPWACAccessoryBrowser timerDidFire:]
  -[HAPWACAccessoryBrowser backoffTimer]
  -[HAPWACAccessoryBrowser visible2Pt4Networks]
  -[HAPWACAccessoryBrowser scan2Pt4APWithSSID:completion:]
  -[HAPWACAccessoryBrowser startDiscoveringAccessoryServers]
  -[HAPWACAccessoryBrowser stopDiscoveringAccessoryServers]
  -[HAPWACAccessoryBrowser discoverAccessoryServerWithIdentifier:]
  -[HAPWACAccessoryBrowser startDiscoveringAirPlayAccessoriesWithDelegate:]
  -[HAPWACAccessoryBrowser _initWiFiScannerWithScanner:]
  -[HAPWACAccessoryBrowser setCuWiFiScanner:]
  -[HAPWACAccessoryBrowser handleFoundUnconfiguredUnpairedWACDevice:]
  -[HAPWACAccessoryBrowser handleFoundAPDevice:]
  -[HAPWACAccessoryBrowser handleFoundUnconfiguredPairedWACDevice:]
  -[HAPWACAccessoryBrowser handleRemovedUnconfiguredWACDevice:]
  -[HAPWACAccessoryBrowser handleChangeUnconfiguredWACDevice:]
  -[HAPWACAccessoryBrowser _handleBrowsingBackOffTimerExpiry]
  -[HAPWACAccessoryBrowser cuWiFiScanner]
  -[HAPWACAccessoryBrowser scanning2Pt4SSID]
  -[HAPWACAccessoryBrowser _reportFound2Pt4Network:]
  -[HAPWACAccessoryBrowser _restartBrowsingWithAllNetworks]
  -[HAPWACAccessoryBrowser foundUnconfiguredUnpairedAccessories]
  -[HAPWACAccessoryBrowser found2Pt4Networks]
  -[HAPWACAccessoryBrowser foundUnconfiguredPairedAccessories]
  -[HAPWACAccessoryBrowser setBrowsingIdentifier:]
  -[HAPWACAccessoryBrowser _startBrowsingForWACAccessories]
  -[HAPWACAccessoryBrowser setAirplayDelegate:]
  -[HAPWACAccessoryBrowser setBrowsingStartTime:]
  -[HAPWACAccessoryBrowser _stopBrowsingForWACAccessories]
  -[HAPWACAccessoryBrowser browsingStartTime]
  -[HAPWACAccessoryBrowser _addFoundUnconfiguredUnpairedWACDevice:]
  -[HAPWACAccessoryBrowser airplayDelegate]
  -[HAPWACAccessoryBrowser _handleNewUnconfiguredUnpairedWACDevice:]
  -[HAPWACAccessoryBrowser _removeUnconfiguredWACDevice:]
  -[HAPWACAccessoryBrowser browsingIdentifier]
  -[HAPWACAccessoryBrowser _handleUnconfiguredPairedWACDevice:]
  -[HAPWACAccessoryBrowser _handleChangeUnconfiguredPairedWACAccessory:]
  -[HAPWACAccessoryBrowser _handleChangeUnconfiguredUnpairedWACAccessory:]
  -[HAPWACAccessoryBrowser setScanning2Pt4SSID:]
  -[HAPWACAccessoryBrowser setFound2Pt4Completion:]
  -[HAPWACAccessoryBrowser found2Pt4Completion]
  -[HAPWACAccessoryBrowser initWiFiScannerWithScanner:]
  -[HAPWACAccessoryBrowser setFoundUnconfiguredUnpairedAccessories:]
  -[HAPWACAccessoryBrowser setFoundUnconfiguredPairedAccessories:]
  -[HAPWACAccessoryBrowser setFound2Pt4Networks:]


HAPRelayStream : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
 @property  <HAPStreamDelegate> *delegate
 @property  unsigned long mtu

  // instance methods
  -[HAPRelayStream open]
  -[HAPRelayStream close]
  -[HAPRelayStream delegate]
  -[HAPRelayStream setDelegate:]
  -[HAPRelayStream .cxx_destruct]
  -[HAPRelayStream writeData:error:]
  -[HAPRelayStream mtu]


HAPRelayPairingClient : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
 @property  <HAPRelayPairingClientDelegate> *delegate
 @property  NSURL *accessoryBagURL

  // instance methods
  -[HAPRelayPairingClient open]
  -[HAPRelayPairingClient close]
  -[HAPRelayPairingClient delegate]
  -[HAPRelayPairingClient setDelegate:]
  -[HAPRelayPairingClient .cxx_destruct]
  -[HAPRelayPairingClient accessoryBagURL]
  -[HAPRelayPairingClient requestControllerIdentifier]
  -[HAPRelayPairingClient requestAccessTokenForAccessoryIdentifier:pairingToken:]


HAPAccessoryServerBrowserRelay : HAPAccessoryServerBrowser
 @property  NSMutableArray *discoveredAccessoryServers
 @property  <HAPAccessoryServerBrowserDelegate> *delegate
 @property  NSObject<OS_dispatch_queue> *delegateQueue

  // instance methods
  -[HAPAccessoryServerBrowserRelay delegate]
  -[HAPAccessoryServerBrowserRelay setDelegate:]
  -[HAPAccessoryServerBrowserRelay .cxx_destruct]
  -[HAPAccessoryServerBrowserRelay initWithQueue:]
  -[HAPAccessoryServerBrowserRelay setDelegate:queue:]
  -[HAPAccessoryServerBrowserRelay setDelegateQueue:]
  -[HAPAccessoryServerBrowserRelay delegateQueue]
  -[HAPAccessoryServerBrowserRelay linkType]
  -[HAPAccessoryServerBrowserRelay startDiscoveringAccessoryServers]
  -[HAPAccessoryServerBrowserRelay stopDiscoveringAccessoryServers]
  -[HAPAccessoryServerBrowserRelay discoverAccessoryServerWithIdentifier:]
  -[HAPAccessoryServerBrowserRelay discoveredAccessoryServers]
  -[HAPAccessoryServerBrowserRelay _setDelegate:queue:]
  -[HAPAccessoryServerBrowserRelay addAccessoryServerWithStream:name:identifier:]
  -[HAPAccessoryServerBrowserRelay removeAccessoryServerWithStream:]


CBConnectionsObserver : NSObject /usr/lib/libSystem.B.dylib <CBCentralManagerDelegate>
 @property  CBCentralManager *central
 @property  NSObject<OS_dispatch_queue> *dispatchQueue
 @property  BOOL hasStarted
 @property  ATVModel *model
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CBConnectionsObserver initialize]

  // instance methods
  -[CBConnectionsObserver .cxx_destruct]
  -[CBConnectionsObserver model]
  -[CBConnectionsObserver dispatchQueue]
  -[CBConnectionsObserver setModel:]
  -[CBConnectionsObserver setDispatchQueue:]
  -[CBConnectionsObserver hasStarted]
  -[CBConnectionsObserver setHasStarted:]
  -[CBConnectionsObserver centralManagerDidUpdateState:]
  -[CBConnectionsObserver central]
  -[CBConnectionsObserver getStatus]
  -[CBConnectionsObserver initWithCentralManager:Queue:Error:]
  -[CBConnectionsObserver cleanupWithError:]
  -[CBConnectionsObserver getAvailableHAPConnections]
  -[CBConnectionsObserver attachSessionWithError:]
  -[CBConnectionsObserver setCentral:]
  -[CBConnectionsObserver updateBleStatus:]


HAPCharacteristicEnableEventCompletionTuple : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
 @property  @? handler
 @property  NSObject<OS_dispatch_queue> *completionQueue

  // class methods
  +[HAPCharacteristicEnableEventCompletionTuple enableEventCompletionTupleWithHandler:queue:]

  // instance methods
  -[HAPCharacteristicEnableEventCompletionTuple handler]
  -[HAPCharacteristicEnableEventCompletionTuple .cxx_destruct]
  -[HAPCharacteristicEnableEventCompletionTuple setHandler:]
  -[HAPCharacteristicEnableEventCompletionTuple setCompletionQueue:]
  -[HAPCharacteristicEnableEventCompletionTuple completionQueue]


HAPAccessoryServerBTLE : HAPAccessoryServer
 @property  HAPAccessoryServerBrowserBTLE *browser
 @property  unsigned char connectionIdleTime
 @property  NSNumber *stateNumber
 @property  BOOL stateChanged
 @property  unsigned char connectReason
 @property  BOOL notifyingCharacteristicUpdated
 @property  CBPeripheral *peripheral
 @property  unsigned long hapBLEProtocolVersion
 @property  unsigned long resumeSessionID

  // class methods
  +[HAPAccessoryServerBTLE hapUUIDFromBTLEUUID:]

  // instance methods
  -[HAPAccessoryServerBTLE .cxx_destruct]
  -[HAPAccessoryServerBTLE browser]
  -[HAPAccessoryServerBTLE linkType]
  -[HAPAccessoryServerBTLE setStateChanged:]
  -[HAPAccessoryServerBTLE stateChanged]
  -[HAPAccessoryServerBTLE peripheral]
  -[HAPAccessoryServerBTLE setStateNumber:]
  -[HAPAccessoryServerBTLE stateNumber]
  -[HAPAccessoryServerBTLE resumeSessionID]
  -[HAPAccessoryServerBTLE notifyingCharacteristicUpdated]
  -[HAPAccessoryServerBTLE setNotifyingCharacteristicUpdated:]
  -[HAPAccessoryServerBTLE handleDisconnectionWithError:completionQueue:completionHandler:]
  -[HAPAccessoryServerBTLE updateConnectionIdleTime:]
  -[HAPAccessoryServerBTLE handleConnectionWithPeripheral:withError:]
  -[HAPAccessoryServerBTLE initWithPeripheral:name:pairingUsername:statusFlags:stateNumber:stateChanged:connectReason:configNumber:category:setupHash:connectionIdleTime:browser:keyStore:]
  -[HAPAccessoryServerBTLE connectReason]
  -[HAPAccessoryServerBTLE setConnectionIdleTime:]
  -[HAPAccessoryServerBTLE updatePeripheral:]
  -[HAPAccessoryServerBTLE connectionIdleTime]
  -[HAPAccessoryServerBTLE updatePeripheralIdentifier:]
  -[HAPAccessoryServerBTLE updateResumeSessionID:]
  -[HAPAccessoryServerBTLE hapBLEProtocolVersion]
  -[HAPAccessoryServerBTLE generateBroadcastKey:queue:withCompletionHandler:]
  -[HAPAccessoryServerBTLE configureCharacteristics:queue:withCompletionHandler:]
  -[HAPAccessoryServerBTLE setConnectReason:]


HAPAccessoryInfo : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
 @property  NSString *name
 @property  NSString *modelName
 @property  NSString *manufacturer
 @property  NSNumber *category
 @property  NSString *certificationStatus
 @property  NSString *blacklisted
 @property  NSString *ppid
 @property  BOOL authenticated

  // instance methods
  -[HAPAccessoryInfo name]
  -[HAPAccessoryInfo .cxx_destruct]
  -[HAPAccessoryInfo category]
  -[HAPAccessoryInfo authenticated]
  -[HAPAccessoryInfo modelName]
  -[HAPAccessoryInfo manufacturer]
  -[HAPAccessoryInfo isBlacklisted]
  -[HAPAccessoryInfo ppid]
  -[HAPAccessoryInfo blacklisted]
  -[HAPAccessoryInfo certificationStatus]
  -[HAPAccessoryInfo initWithName:manufacturer:modelName:category:certificationStatus:blacklisted:ppid:]
  -[HAPAccessoryInfo isCertified]


HAPAccessoryProtocolInfo : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
 @property  NSString *deviceIdentifer
 @property  NSNumber *currentStateNumber
 @property  NSNumber *currentConfigNumber
 @property  NSString *modelName
 @property  HMFVersion *protocolVersion
 @property  unsigned char featureFlags
 @property  unsigned char statusFlags
 @property  unsigned short categoryIdentifier
 @property  NSData *setupHash

  // instance methods
  -[HAPAccessoryProtocolInfo .cxx_destruct]
  -[HAPAccessoryProtocolInfo statusFlags]
  -[HAPAccessoryProtocolInfo categoryIdentifier]
  -[HAPAccessoryProtocolInfo modelName]
  -[HAPAccessoryProtocolInfo protocolVersion]
  -[HAPAccessoryProtocolInfo featureFlags]
  -[HAPAccessoryProtocolInfo setupHash]
  -[HAPAccessoryProtocolInfo deviceIdentifer]
  -[HAPAccessoryProtocolInfo initWithIdentifier:currentStateNumber:currentConfigNumber:modelName:protocolVersion:authMethods:statusFlags:categoryIdentifier:setupHash:]
  -[HAPAccessoryProtocolInfo currentStateNumber]
  -[HAPAccessoryProtocolInfo currentConfigNumber]


HAPProtocolMessages : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
  // class methods
  +[HAPProtocolMessages logCategory]
  +[HAPProtocolMessages constructTokenRequest:outTID:]
  +[HAPProtocolMessages parseTokenResponse:expectedTID:withHeader:outToken:outUUID:]
  +[HAPProtocolMessages constructTokenUpdateRequest:token:outTID:]
  +[HAPProtocolMessages parseTokenUpdateResponse:expectedTID:withHeader:]
  +[HAPProtocolMessages parseInfoResponse:expectedTID:withHeader:]
  +[HAPProtocolMessages constructInfoRequest:outTID:]
  +[HAPProtocolMessages constructRequestHeaderFor:instanceID:outTID:]
  +[HAPProtocolMessages constructInfoRequest:serviceUUID:outTID:]


HAPCharacteristicWriteRequestTuple : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
 @property  HAPCharacteristic *characteristic
 @property  id value
 @property  NSData *authorizationData
 @property  BOOL timedWrite
 @property  unsigned long writeType
 @property  BOOL includeResponseValue
 @property  NSNumber *enableEvents

  // class methods
  +[HAPCharacteristicWriteRequestTuple writeRequestTupleForCharacteristic:value:authorizationData:timedWrite:responseValue:type:]

  // instance methods
  -[HAPCharacteristicWriteRequestTuple .cxx_destruct]
  -[HAPCharacteristicWriteRequestTuple value]
  -[HAPCharacteristicWriteRequestTuple setValue:]
  -[HAPCharacteristicWriteRequestTuple setCharacteristic:]
  -[HAPCharacteristicWriteRequestTuple characteristic]
  -[HAPCharacteristicWriteRequestTuple writeType]
  -[HAPCharacteristicWriteRequestTuple setWriteType:]
  -[HAPCharacteristicWriteRequestTuple includeResponseValue]
  -[HAPCharacteristicWriteRequestTuple authorizationData]
  -[HAPCharacteristicWriteRequestTuple timedWrite]
  -[HAPCharacteristicWriteRequestTuple setEnableEvents:]
  -[HAPCharacteristicWriteRequestTuple enableEvents]
  -[HAPCharacteristicWriteRequestTuple setAuthorizationData:]
  -[HAPCharacteristicWriteRequestTuple setTimedWrite:]
  -[HAPCharacteristicWriteRequestTuple setIncludeResponseValue:]


HAPCharacteristicResponseTuple : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
 @property  HAPCharacteristic *characteristic
 @property  id value
 @property  NSNumber *stateNumber
 @property  NSDate *valueUpdatedTime
 @property  NSError *error

  // class methods
  +[HAPCharacteristicResponseTuple responseTupleForCharacteristic:error:]

  // instance methods
  -[HAPCharacteristicResponseTuple .cxx_destruct]
  -[HAPCharacteristicResponseTuple error]
  -[HAPCharacteristicResponseTuple value]
  -[HAPCharacteristicResponseTuple setValue:]
  -[HAPCharacteristicResponseTuple setError:]
  -[HAPCharacteristicResponseTuple setCharacteristic:]
  -[HAPCharacteristicResponseTuple characteristic]
  -[HAPCharacteristicResponseTuple valueUpdatedTime]
  -[HAPCharacteristicResponseTuple setValueUpdatedTime:]
  -[HAPCharacteristicResponseTuple setStateNumber:]
  -[HAPCharacteristicResponseTuple stateNumber]


HAPCharacteristicConfigurationRequestTuple : HMFObject /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
 @property  HAPCharacteristic *characteristic
 @property  BOOL broadcastEnable
 @property  unsigned long broadcastInterval

  // class methods
  +[HAPCharacteristicConfigurationRequestTuple configurationTupleForCharacteristic:broadcastEnable:broadcastInterval:]

  // instance methods
  -[HAPCharacteristicConfigurationRequestTuple .cxx_destruct]
  -[HAPCharacteristicConfigurationRequestTuple setCharacteristic:]
  -[HAPCharacteristicConfigurationRequestTuple characteristic]
  -[HAPCharacteristicConfigurationRequestTuple broadcastEnable]
  -[HAPCharacteristicConfigurationRequestTuple broadcastInterval]
  -[HAPCharacteristicConfigurationRequestTuple setBroadcastEnable:]
  -[HAPCharacteristicConfigurationRequestTuple setBroadcastInterval:]


NSError(HMError)
	// class methods
	+[NSError(HMError) errorWithOSStatus:]
	+[NSError(HMError) hmErrorWithCode:]
	+[NSError(HMError) hmErrorWithCode:description:reason:suggestion:underlyingError:]
	+[NSError(HMError) hmErrorWithCode:userInfo:]
	+[NSError(HMError) hmInternalErrorWithCode:underlyingError:]
	+[NSError(HMError) hmErrorWithCode:description:reason:suggestion:]
	+[NSError(HMError) hmInternalErrorWithCode:]
	+[NSError(HMError) hmPrivateErrorWithCode:]
	+[NSError(HMError) hmInternalErrorWithCode:userInfo:]
	+[NSError(HMError) hmPrivateErrorWithCode:underlyingError:]
	+[NSError(HMError) hapErrorWithcode:description:reason:suggestion:underlyingError:]

	// instance methods
	-[NSError(HMError) isHMError]
	-[NSError(HMError) isHMError]
	-[NSError(HMError) isHAPError]

01 00 0500 /System/Library/Frameworks/CoreBluetooth.framework/CoreBluetooth: CBCentralManager 
01 00 0500 /System/Library/Frameworks/CoreBluetooth.framework/CoreBluetooth: CBCharacteristic 
01 00 0500 /System/Library/Frameworks/CoreBluetooth.framework/CoreBluetooth: CBService 
01 00 0500 /System/Library/Frameworks/CoreBluetooth.framework/CoreBluetooth: CBUUID 
01 00 0700 /System/Library/PrivateFrameworks/CoreUtils.framework/CoreUtils: CUWiFiScanner 
01 00 0900 /System/Library/PrivateFrameworks/EasyConfig.framework/EasyConfig: EasyConfigDevice 
01 00 0b00 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFActivity 
01 00 0b00 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFBlockOperation 
01 00 0b00 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFExponentialBackoffTimer 
01 00 0b00 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFLogCategory 
01 00 0b00 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFNetAddress 
01 00 0b00 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFNetMonitor 
01 00 0b00 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFNetService 
01 00 0b00 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFOSTransaction 
01 00 0b00 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFObject 
01 00 0b00 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFPairingIdentity 
01 00 0b00 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFPairingKey 
01 00 0b00 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFPowerLogger 
01 00 0b00 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFPreferences 
01 00 0b00 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFSystemInfo 
01 00 0b00 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFTimer 
01 00 0b00 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFUnfairLock 
01 00 0b00 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFVersion 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNetService 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 0f00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0600 /System/Library/PrivateFrameworks/CloudServices.framework/CloudServices: SecureBackup 
01 00 0200 /System/Library/PrivateFrameworks/WirelessProximity.framework/WirelessProximity: WPHomeKit 
