|| __DATA.__common _g_ctx
|| __DATA.__common _sessionName
|| __DATA.__common _systemDidWakeFromSleep
|| __DATA.__common _systemIsSleeping
|| __DATA.__data _HAP2AccessoryServerDiscoveryBonjourDiscoveryInfoServiceDomainKey
|| __DATA.__data _HAP2AccessoryServerDiscoveryBonjourDiscoveryInfoServiceNameKey
|| __DATA.__data _HAP2AccessoryServerDiscoveryBonjourDiscoveryInfoServiceTypeKey
|| __DATA.__data _HAP2AccessoryServerDiscoveryBonjourDiscoveryInfoTXTRecordKey
|| __DATA.__data _HAP2AccessoryServerDiscoveryBonjourHAPServiceDomain
|| __DATA.__data _HAP2AccessoryServerDiscoveryBonjourHAPServiceTypeUDP
|| __DATA.__data _HAPCharacteristicEventsUserInfoKey
|| __DATA.__data _HAPDeviceIDLength
|| __DATA.__data _certifiedStatus
|| __DATA.__data _coap_error
|| __DATA.__data _denylistedStatus
|| __DATA.__data _kMetadataBTLEUUIDLength
|| __DATA.__data _kMetadataBaseUUIDSuffixLength
|| __DATA.__data _kMetadataCurrentSchemaVersion
|| __DATA.__data _kMetadataShortUUIDLength
|| __DATA.__objc_data _OBJC_CLASS_$_ATVModel
|| __DATA.__objc_data _OBJC_CLASS_$_CBConnectionsObserver
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2Accessory
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2AccessoryServer
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2AccessoryServerAccessoryCache
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2AccessoryServerBrowserOperation
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2AccessoryServerController
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2AccessoryServerControllerAttributeRequestOperation
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2AccessoryServerControllerOperation
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2AccessoryServerControllerReadOperation
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2AccessoryServerControllerTimedWriteOperation
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2AccessoryServerDefaultAccessoryFactory
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2AccessoryServerDiscoveryAccessoryInfo
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2AccessoryServerDiscoveryBonjour
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2AccessoryServerDiscoveryBonjourBrowseResultTuple
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2AccessoryServerDiscoveryHAPAccessoryInfo
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2AccessoryServerEncodingThread
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2AccessoryServerEncodingThreadBTLERequest
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2AccessoryServerMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2AccessoryServerPairingDriver
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2AccessoryServerPairingDriverAuthPromptWorkItem
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2AccessoryServerPairingDriverMFiCertWorkItem
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2AccessoryServerPairingDriverPairSetupWorkItem
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2AccessoryServerPairingDriverSoftwareAuthWorkItem
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2AccessoryServerPairingDriverTransportControlWorkItem
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2AccessoryServerPairingDriverWorkItem
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2AccessoryServerSecureTransportBase
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2AccessoryServerSecureTransportBaseDefaultEncryptedSession
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2AccessoryServerSecureTransportPairSetup
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2AccessoryServerSecureTransportPairSetupPassThroughEncryptedSession
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2AccessoryServerSecureTransportPairVerify
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2AccessoryServerSecureTransportThreadPaired
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2AccessoryServerTransportBase
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2AccessoryServerTransportBaseOperation
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2AccessoryServerTransportBaseOperationClose
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2AccessoryServerTransportBaseOperationOpen
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2AccessoryServerTransportBaseOperationSendRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2AccessoryServerTransportBaseWithDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2AccessoryServerTransportCoAP
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2AccessoryServerTransportRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2AsynchronousBlockOperation
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2AsynchronousOperation
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2Cancelable
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2CancelableObject
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2CharacteristicTuple
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2CoAPClient
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2CoAPIO
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2CoAPIOConsumerInfo
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2CoAPIOConsumerWeakHolder
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2CoAPIOThread
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2CoAPIOThreadQueueEntry
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2CoAPIOThreadSessionQueueEntry
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2ControllerReadRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2EncodedAttributeDatabaseResponseCached
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2EncodedAttributeDatabaseResponseThread
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2EncodedCharacteristicEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2EncodedCharacteristicRequestThread
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2EncodedCharacteristicResponse
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2EncodedEmptyRequestThread
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2EncodedEmptyResponseThread
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2EncodedEnableNotificationResponse
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2EncodedListPairingsResponseThread
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2EncodedRequestThread
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2EncodedResponseThread
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2EncodingUtils
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2TLVAccessorySignatureReadRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2TLVAddOrRemovePairingResponse
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2TLVAddPairingRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2TLVCharacteristicPropertiesWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2TLVErrorsWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2TLVOldServiceList
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2TLVPairingMethodWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2TLVPairingStateWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2TLVParamAccessoryList
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2TLVParamAccessorySignature
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2TLVParamCharacteristicList
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2TLVParamCharacteristicSignature
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2TLVParamServiceList
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2TLVParamServiceSignature
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2TLVRemovePairingRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2TLVServicePropertiesWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2TLVThreadControl
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2TLVThreadNetworkCredentials
|| __DATA.__objc_data _OBJC_CLASS_$_HAP2TLVThreadOperationTypeWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_HAPAccessCodeCharacterSetWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_HAPAccessCodeConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HAPAccessCodeControl
|| __DATA.__objc_data _OBJC_CLASS_$_HAPAccessCodeControlRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HAPAccessCodeControlResponse
|| __DATA.__objc_data _OBJC_CLASS_$_HAPAccessCodeFlagsWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_HAPAccessCodeOperationTypeWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_HAPAccessCodeResponseStatusWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_HAPAccessory
|| __DATA.__objc_data _OBJC_CLASS_$_HAPAccessoryInfo
|| __DATA.__objc_data _OBJC_CLASS_$_HAPAccessoryPairingRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HAPAccessoryProtocolInfo
|| __DATA.__objc_data _OBJC_CLASS_$_HAPAccessoryReachabilityClient
|| __DATA.__objc_data _OBJC_CLASS_$_HAPAccessoryReachabilityProfile
|| __DATA.__objc_data _OBJC_CLASS_$_HAPAccessoryServer
|| __DATA.__objc_data _OBJC_CLASS_$_HAPAccessoryServerBTLE
|| __DATA.__objc_data _OBJC_CLASS_$_HAPAccessoryServerHAP2Adapter
|| __DATA.__objc_data _OBJC_CLASS_$_HAPAccessoryServerIP
|| __DATA.__objc_data _OBJC_CLASS_$_HAPAccessoryWakeTuple
|| __DATA.__objc_data _OBJC_CLASS_$_HAPAddRemovePairingOperation
|| __DATA.__objc_data _OBJC_CLASS_$_HAPArrayWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_HAPAudioCodecBitRateWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_HAPAudioCodecSampleRateWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_HAPAudioCodecTypeWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_HAPAudioStreamCodecConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HAPAudioStreamCodecParameters
|| __DATA.__objc_data _OBJC_CLASS_$_HAPAuthSession
|| __DATA.__objc_data _OBJC_CLASS_$_HAPBLEAccessoryCache
|| __DATA.__objc_data _OBJC_CLASS_$_HAPBLECharacteristicCache
|| __DATA.__objc_data _OBJC_CLASS_$_HAPBLEPeripheral
|| __DATA.__objc_data _OBJC_CLASS_$_HAPBLEPeripheralInfo
|| __DATA.__objc_data _OBJC_CLASS_$_HAPBLEServiceCache
|| __DATA.__objc_data _OBJC_CLASS_$_HAPBTLECentralManager
|| __DATA.__objc_data _OBJC_CLASS_$_HAPBTLECharacteristicSignature
|| __DATA.__objc_data _OBJC_CLASS_$_HAPBTLEControlOutputStream
|| __DATA.__objc_data _OBJC_CLASS_$_HAPBTLEControlPacket
|| __DATA.__objc_data _OBJC_CLASS_$_HAPBTLEReachabilityScanTuple
|| __DATA.__objc_data _OBJC_CLASS_$_HAPBTLERequest
|| __DATA.__objc_data _OBJC_CLASS_$_HAPBTLEResponse
|| __DATA.__objc_data _OBJC_CLASS_$_HAPBTLEServiceSignature
|| __DATA.__objc_data _OBJC_CLASS_$_HAPBTLETransactionIdentifier
|| __DATA.__objc_data _OBJC_CLASS_$_HAPBTLETuple
|| __DATA.__objc_data _OBJC_CLASS_$_HAPBridgedAccessory
|| __DATA.__objc_data _OBJC_CLASS_$_HAPCharacteristic
|| __DATA.__objc_data _OBJC_CLASS_$_HAPCharacteristicConfigurationRequestTuple
|| __DATA.__objc_data _OBJC_CLASS_$_HAPCharacteristicContextData
|| __DATA.__objc_data _OBJC_CLASS_$_HAPCharacteristicEnableEventCompletionTuple
|| __DATA.__objc_data _OBJC_CLASS_$_HAPCharacteristicEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HAPCharacteristicMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_HAPCharacteristicNotificationContext
|| __DATA.__objc_data _OBJC_CLASS_$_HAPCharacteristicReadCompletionTuple
|| __DATA.__objc_data _OBJC_CLASS_$_HAPCharacteristicResponseTuple
|| __DATA.__objc_data _OBJC_CLASS_$_HAPCharacteristicValueActiveTransitionContext
|| __DATA.__objc_data _OBJC_CLASS_$_HAPCharacteristicValueLinearDerivedTransition
|| __DATA.__objc_data _OBJC_CLASS_$_HAPCharacteristicValueLinearDerivedTransitionPoint
|| __DATA.__objc_data _OBJC_CLASS_$_HAPCharacteristicValueLinearTransition
|| __DATA.__objc_data _OBJC_CLASS_$_HAPCharacteristicValueRange
|| __DATA.__objc_data _OBJC_CLASS_$_HAPCharacteristicValueTransition
|| __DATA.__objc_data _OBJC_CLASS_$_HAPCharacteristicValueTransitionControl
|| __DATA.__objc_data _OBJC_CLASS_$_HAPCharacteristicValueTransitionControlResponse
|| __DATA.__objc_data _OBJC_CLASS_$_HAPCharacteristicValueTransitionControllerContext
|| __DATA.__objc_data _OBJC_CLASS_$_HAPCharacteristicValueTransitionEndBehaviorWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_HAPCharacteristicValueTransitionFetch
|| __DATA.__objc_data _OBJC_CLASS_$_HAPCharacteristicValueTransitionLinearStartConditionWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_HAPCharacteristicValueTransitionPoint
|| __DATA.__objc_data _OBJC_CLASS_$_HAPCharacteristicValueTransitionStart
|| __DATA.__objc_data _OBJC_CLASS_$_HAPCharacteristicValueTransitionState
|| __DATA.__objc_data _OBJC_CLASS_$_HAPCharacteristicValueTransitionTypesWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_HAPCharacteristicWriteRequestTuple
|| __DATA.__objc_data _OBJC_CLASS_$_HAPComponent
|| __DATA.__objc_data _OBJC_CLASS_$_HAPDataStreamHAPAccessoryPayload
|| __DATA.__objc_data _OBJC_CLASS_$_HAPDataStreamHAPControllerPayload
|| __DATA.__objc_data _OBJC_CLASS_$_HAPDataStreamTransportCommandStatusWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_HAPDataStreamTransportCommandWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_HAPDataStreamTransportConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HAPDataStreamTransportInterruptPayload
|| __DATA.__objc_data _OBJC_CLASS_$_HAPDataStreamTransportParameters
|| __DATA.__objc_data _OBJC_CLASS_$_HAPDataStreamTransportProtocolWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_HAPDataStreamTransportSetup
|| __DATA.__objc_data _OBJC_CLASS_$_HAPDataStreamTransportSetupResponse
|| __DATA.__objc_data _OBJC_CLASS_$_HAPDataStreamTransportSupportedConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HAPDataValueTransformer
|| __DATA.__objc_data _OBJC_CLASS_$_HAPDataWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_HAPDeviceID
|| __DATA.__objc_data _OBJC_CLASS_$_HAPDiagnosticsSnapshotAudioWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_HAPDiagnosticsSnapshotFormatWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_HAPDiagnosticsSnapshotOptionsWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_HAPDiagnosticsSnapshotTypeWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_HAPDiscoveredBTLEAccessoryServerTuple
|| __DATA.__objc_data _OBJC_CLASS_$_HAPFieldWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_HAPFirmwareUpdateReadiness
|| __DATA.__objc_data _OBJC_CLASS_$_HAPFirmwareUpdateStateWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_HAPFirmwareUpdateStatus
|| __DATA.__objc_data _OBJC_CLASS_$_HAPFragmentationPacket
|| __DATA.__objc_data _OBJC_CLASS_$_HAPFragmentationStream
|| __DATA.__objc_data _OBJC_CLASS_$_HAPHTTPClient
|| __DATA.__objc_data _OBJC_CLASS_$_HAPHardwareFinish
|| __DATA.__objc_data _OBJC_CLASS_$_HAPJSONValueTransformer
|| __DATA.__objc_data _OBJC_CLASS_$_HAPKeyBag
|| __DATA.__objc_data _OBJC_CLASS_$_HAPKeychainStoreRemovedAccessory
|| __DATA.__objc_data _OBJC_CLASS_$_HAPMetadataConstraints
|| __DATA.__objc_data _OBJC_CLASS_$_HAPMutableKeychainItem
|| __DATA.__objc_data _OBJC_CLASS_$_HAPNFCAccessControl
|| __DATA.__objc_data _OBJC_CLASS_$_HAPNFCAccessDeviceCredentialKeyRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HAPNFCAccessDeviceCredentialKeyResponse
|| __DATA.__objc_data _OBJC_CLASS_$_HAPNFCAccessIssuerKeyRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HAPNFCAccessIssuerKeyResponse
|| __DATA.__objc_data _OBJC_CLASS_$_HAPNFCAccessKeyStateWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_HAPNFCAccessKeyTypeWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_HAPNFCAccessOperationTypeWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_HAPNFCAccessReaderKeyRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HAPNFCAccessReaderKeyResponse
|| __DATA.__objc_data _OBJC_CLASS_$_HAPNFCAccessResponseStatusWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_HAPNFCAccessSupportedConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HAPNotification
|| __DATA.__objc_data _OBJC_CLASS_$_HAPNotificationContextSourceWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_HAPNumberParser
|| __DATA.__objc_data _OBJC_CLASS_$_HAPNumberWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_HAPOperatingStateAbnormalReasonsWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_HAPOperatingStateResponse
|| __DATA.__objc_data _OBJC_CLASS_$_HAPOperatingStateWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_HAPPairSetupSession
|| __DATA.__objc_data _OBJC_CLASS_$_HAPPairSetupSessionServerInfo
|| __DATA.__objc_data _OBJC_CLASS_$_HAPPairingUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_HAPPowerManager
|| __DATA.__objc_data _OBJC_CLASS_$_HAPProtocolMessages
|| __DATA.__objc_data _OBJC_CLASS_$_HAPRecentlySeenPairedBTLEPeripheralTuple
|| __DATA.__objc_data _OBJC_CLASS_$_HAPSecuritySession
|| __DATA.__objc_data _OBJC_CLASS_$_HAPSecuritySessionDelegateAdditionalDerivedKeyTuple
|| __DATA.__objc_data _OBJC_CLASS_$_HAPSecuritySessionEncryption
|| __DATA.__objc_data _OBJC_CLASS_$_HAPSelectedAudioStreamConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HAPService
|| __DATA.__objc_data _OBJC_CLASS_$_HAPStagingNotReadyReasonsWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_HAPStringWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_HAPSupportedAudioStreamConfigurations
|| __DATA.__objc_data _OBJC_CLASS_$_HAPSupportedCharacteristicValueTransition
|| __DATA.__objc_data _OBJC_CLASS_$_HAPSupportedCharacteristicValueTransitionConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HAPSupportedDiagnosticsSnapshot
|| __DATA.__objc_data _OBJC_CLASS_$_HAPSupportedFirmwareUpdateConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HAPSuspendedAccessory
|| __DATA.__objc_data _OBJC_CLASS_$_HAPSuspendedAccessoryIP
|| __DATA.__objc_data _OBJC_CLASS_$_HAPTLVBase
|| __DATA.__objc_data _OBJC_CLASS_$_HAPTLVCreator
|| __DATA.__objc_data _OBJC_CLASS_$_HAPTLVDescription
|| __DATA.__objc_data _OBJC_CLASS_$_HAPTLVFloatNumberValue
|| __DATA.__objc_data _OBJC_CLASS_$_HAPTLVNumberValueBase
|| __DATA.__objc_data _OBJC_CLASS_$_HAPTLVParser
|| __DATA.__objc_data _OBJC_CLASS_$_HAPTLVSignedNumberValue
|| __DATA.__objc_data _OBJC_CLASS_$_HAPTLVUnsignedNumberValue
|| __DATA.__objc_data _OBJC_CLASS_$_HAPUUIDWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_HAPUint16Wrapper
|| __DATA.__objc_data _OBJC_CLASS_$_HAPUint8Wrapper
|| __DATA.__objc_data _OBJC_CLASS_$_HAPUpdateNotReadyReasonsWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_HAPValueTransformer
|| __DATA.__objc_data _OBJC_CLASS_$_HAPWACAccessory
|| __DATA.__objc_data _OBJC_CLASS_$_HAPWACAccessoryClient
|| __DATA.__objc_data _OBJC_CLASS_$_HAPWiFiConfigurationControl
|| __DATA.__objc_data _OBJC_CLASS_$_HAPWiFiConfigurationOperationTypeWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_HAPWiFiConfigurationUpdateStatusWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_HAPWiFiSecurityModeWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_HAPWiFiStationConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HMFObjectCacheHAPCharacteristicMetadata
|| __DATA.__objc_data _OBJC_CLASS_$__HAPAccessoryServerBTLE100
|| __DATA.__objc_data _OBJC_CLASS_$__HAPAccessoryServerBTLE200
|| __DATA.__objc_data _OBJC_CLASS_$__HAPBTLEDiscoveryContext
|| __DATA.__objc_data _OBJC_METACLASS_$_ATVModel
|| __DATA.__objc_data _OBJC_METACLASS_$_CBConnectionsObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2Accessory
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2AccessoryServer
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2AccessoryServerAccessoryCache
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2AccessoryServerBrowserOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2AccessoryServerController
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2AccessoryServerControllerAttributeRequestOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2AccessoryServerControllerOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2AccessoryServerControllerReadOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2AccessoryServerControllerTimedWriteOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2AccessoryServerDefaultAccessoryFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2AccessoryServerDiscoveryAccessoryInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2AccessoryServerDiscoveryBonjour
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2AccessoryServerDiscoveryBonjourBrowseResultTuple
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2AccessoryServerDiscoveryHAPAccessoryInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2AccessoryServerEncodingThread
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2AccessoryServerEncodingThreadBTLERequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2AccessoryServerMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2AccessoryServerPairingDriver
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2AccessoryServerPairingDriverAuthPromptWorkItem
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2AccessoryServerPairingDriverMFiCertWorkItem
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2AccessoryServerPairingDriverPairSetupWorkItem
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2AccessoryServerPairingDriverSoftwareAuthWorkItem
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2AccessoryServerPairingDriverTransportControlWorkItem
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2AccessoryServerPairingDriverWorkItem
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2AccessoryServerSecureTransportBase
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2AccessoryServerSecureTransportBaseDefaultEncryptedSession
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2AccessoryServerSecureTransportPairSetup
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2AccessoryServerSecureTransportPairSetupPassThroughEncryptedSession
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2AccessoryServerSecureTransportPairVerify
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2AccessoryServerSecureTransportThreadPaired
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2AccessoryServerTransportBase
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2AccessoryServerTransportBaseOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2AccessoryServerTransportBaseOperationClose
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2AccessoryServerTransportBaseOperationOpen
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2AccessoryServerTransportBaseOperationSendRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2AccessoryServerTransportBaseWithDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2AccessoryServerTransportCoAP
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2AccessoryServerTransportRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2AsynchronousBlockOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2AsynchronousOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2Cancelable
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2CancelableObject
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2CharacteristicTuple
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2CoAPClient
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2CoAPIO
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2CoAPIOConsumerInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2CoAPIOConsumerWeakHolder
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2CoAPIOThread
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2CoAPIOThreadQueueEntry
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2CoAPIOThreadSessionQueueEntry
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2ControllerReadRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2EncodedAttributeDatabaseResponseCached
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2EncodedAttributeDatabaseResponseThread
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2EncodedCharacteristicEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2EncodedCharacteristicRequestThread
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2EncodedCharacteristicResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2EncodedEmptyRequestThread
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2EncodedEmptyResponseThread
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2EncodedEnableNotificationResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2EncodedListPairingsResponseThread
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2EncodedRequestThread
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2EncodedResponseThread
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2EncodingUtils
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2TLVAccessorySignatureReadRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2TLVAddOrRemovePairingResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2TLVAddPairingRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2TLVCharacteristicPropertiesWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2TLVErrorsWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2TLVOldServiceList
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2TLVPairingMethodWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2TLVPairingStateWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2TLVParamAccessoryList
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2TLVParamAccessorySignature
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2TLVParamCharacteristicList
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2TLVParamCharacteristicSignature
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2TLVParamServiceList
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2TLVParamServiceSignature
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2TLVRemovePairingRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2TLVServicePropertiesWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2TLVThreadControl
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2TLVThreadNetworkCredentials
|| __DATA.__objc_data _OBJC_METACLASS_$_HAP2TLVThreadOperationTypeWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPAccessCodeCharacterSetWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPAccessCodeConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPAccessCodeControl
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPAccessCodeControlRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPAccessCodeControlResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPAccessCodeFlagsWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPAccessCodeOperationTypeWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPAccessCodeResponseStatusWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPAccessory
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPAccessoryInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPAccessoryPairingRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPAccessoryProtocolInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPAccessoryReachabilityClient
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPAccessoryReachabilityProfile
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPAccessoryServer
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPAccessoryServerBTLE
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPAccessoryServerHAP2Adapter
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPAccessoryServerIP
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPAccessoryWakeTuple
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPAddRemovePairingOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPArrayWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPAudioCodecBitRateWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPAudioCodecSampleRateWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPAudioCodecTypeWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPAudioStreamCodecConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPAudioStreamCodecParameters
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPAuthSession
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPBLEAccessoryCache
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPBLECharacteristicCache
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPBLEPeripheral
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPBLEPeripheralInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPBLEServiceCache
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPBTLECentralManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPBTLECharacteristicSignature
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPBTLEControlOutputStream
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPBTLEControlPacket
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPBTLEReachabilityScanTuple
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPBTLERequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPBTLEResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPBTLEServiceSignature
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPBTLETransactionIdentifier
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPBTLETuple
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPBridgedAccessory
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPCharacteristic
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPCharacteristicConfigurationRequestTuple
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPCharacteristicContextData
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPCharacteristicEnableEventCompletionTuple
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPCharacteristicEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPCharacteristicMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPCharacteristicNotificationContext
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPCharacteristicReadCompletionTuple
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPCharacteristicResponseTuple
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPCharacteristicValueActiveTransitionContext
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPCharacteristicValueLinearDerivedTransition
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPCharacteristicValueLinearDerivedTransitionPoint
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPCharacteristicValueLinearTransition
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPCharacteristicValueRange
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPCharacteristicValueTransition
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPCharacteristicValueTransitionControl
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPCharacteristicValueTransitionControlResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPCharacteristicValueTransitionControllerContext
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPCharacteristicValueTransitionEndBehaviorWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPCharacteristicValueTransitionFetch
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPCharacteristicValueTransitionLinearStartConditionWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPCharacteristicValueTransitionPoint
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPCharacteristicValueTransitionStart
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPCharacteristicValueTransitionState
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPCharacteristicValueTransitionTypesWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPCharacteristicWriteRequestTuple
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPComponent
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPDataStreamHAPAccessoryPayload
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPDataStreamHAPControllerPayload
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPDataStreamTransportCommandStatusWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPDataStreamTransportCommandWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPDataStreamTransportConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPDataStreamTransportInterruptPayload
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPDataStreamTransportParameters
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPDataStreamTransportProtocolWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPDataStreamTransportSetup
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPDataStreamTransportSetupResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPDataStreamTransportSupportedConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPDataValueTransformer
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPDataWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPDeviceID
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPDiagnosticsSnapshotAudioWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPDiagnosticsSnapshotFormatWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPDiagnosticsSnapshotOptionsWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPDiagnosticsSnapshotTypeWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPDiscoveredBTLEAccessoryServerTuple
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPFieldWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPFirmwareUpdateReadiness
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPFirmwareUpdateStateWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPFirmwareUpdateStatus
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPFragmentationPacket
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPFragmentationStream
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPHTTPClient
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPHardwareFinish
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPJSONValueTransformer
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPKeyBag
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPKeychainStoreRemovedAccessory
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPMetadataConstraints
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPMutableKeychainItem
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPNFCAccessControl
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPNFCAccessDeviceCredentialKeyRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPNFCAccessDeviceCredentialKeyResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPNFCAccessIssuerKeyRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPNFCAccessIssuerKeyResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPNFCAccessKeyStateWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPNFCAccessKeyTypeWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPNFCAccessOperationTypeWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPNFCAccessReaderKeyRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPNFCAccessReaderKeyResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPNFCAccessResponseStatusWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPNFCAccessSupportedConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPNotification
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPNotificationContextSourceWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPNumberParser
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPNumberWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPOperatingStateAbnormalReasonsWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPOperatingStateResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPOperatingStateWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPPairSetupSession
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPPairSetupSessionServerInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPPairingUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPPowerManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPProtocolMessages
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPRecentlySeenPairedBTLEPeripheralTuple
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPSecuritySession
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPSecuritySessionDelegateAdditionalDerivedKeyTuple
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPSecuritySessionEncryption
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPSelectedAudioStreamConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPService
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPStagingNotReadyReasonsWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPStringWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPSupportedAudioStreamConfigurations
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPSupportedCharacteristicValueTransition
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPSupportedCharacteristicValueTransitionConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPSupportedDiagnosticsSnapshot
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPSupportedFirmwareUpdateConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPSuspendedAccessory
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPSuspendedAccessoryIP
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPTLVBase
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPTLVCreator
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPTLVDescription
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPTLVFloatNumberValue
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPTLVNumberValueBase
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPTLVParser
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPTLVSignedNumberValue
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPTLVUnsignedNumberValue
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPUUIDWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPUint16Wrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPUint8Wrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPUpdateNotReadyReasonsWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPValueTransformer
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPWACAccessory
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPWACAccessoryClient
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPWiFiConfigurationControl
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPWiFiConfigurationOperationTypeWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPWiFiConfigurationUpdateStatusWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPWiFiSecurityModeWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPWiFiStationConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFObjectCacheHAPCharacteristicMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$__HAPAccessoryServerBTLE100
|| __DATA.__objc_data _OBJC_METACLASS_$__HAPAccessoryServerBTLE200
|| __DATA.__objc_data _OBJC_METACLASS_$__HAPBTLEDiscoveryContext
|| __DATA.__objc_ivar _OBJC_IVAR_$_HAP2Lock._lockCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_HAPAccessoryServer._identifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_HAPAccessoryServer._lock
|| __DATA.__objc_ivar _OBJC_IVAR_$_HAPAccessoryServer._name
|| __DATA.__objc_ivar _OBJC_IVAR_$_HAPAccessoryServerBrowser._lock
|| __DATA_CONST.__const _CBConnectionsObserverErrorDomain
|| __DATA_CONST.__const _CBUUIDCharacteristicValidRange
|| __DATA_CONST.__const _HAP2AccessoryServerSecureTransportThreadPairedEventInfo
|| __DATA_CONST.__const _HAP2AccessoryServerSecureTransportThreadPairedEventSalt
|| __DATA_CONST.__const _HAPAccessoryAutoConnect
|| __DATA_CONST.__const _HAPAccessoryCategory
|| __DATA_CONST.__const _HAPAccessoryCharacteristic
|| __DATA_CONST.__const _HAPAccessoryDuration
|| __DATA_CONST.__const _HAPAccessoryError
|| __DATA_CONST.__const _HAPAccessoryErrorCode
|| __DATA_CONST.__const _HAPAccessoryErrorDomain
|| __DATA_CONST.__const _HAPAccessoryExpectedDuration
|| __DATA_CONST.__const _HAPAccessoryFailedPingCount
|| __DATA_CONST.__const _HAPAccessoryFirmwareVersion
|| __DATA_CONST.__const _HAPAccessoryIdentifier
|| __DATA_CONST.__const _HAPAccessoryInstance
|| __DATA_CONST.__const _HAPAccessoryInstanceID
|| __DATA_CONST.__const _HAPAccessoryLinkType
|| __DATA_CONST.__const _HAPAccessoryManufacturer
|| __DATA_CONST.__const _HAPAccessoryPingFailedCount
|| __DATA_CONST.__const _HAPAccessoryPingSuccessCount
|| __DATA_CONST.__const _HAPAccessoryProduct
|| __DATA_CONST.__const _HAPAccessoryReachable
|| __DATA_CONST.__const _HAPAccessoryReason
|| __DATA_CONST.__const _HAPAccessoryServerPairVerifyNotification
|| __DATA_CONST.__const _HAPAccessoryService
|| __DATA_CONST.__const _HAPAccessorySuccessfulPingCount
|| __DATA_CONST.__const _HAPAccessorySuspendedStatePostfixName
|| __DATA_CONST.__const _HAPAccessoryUptimeDuration
|| __DATA_CONST.__const _HAPAttributeDatabaseKey_Accessories
|| __DATA_CONST.__const _HAPAttributeDatabaseKey_AccessoryInstanceID
|| __DATA_CONST.__const _HAPAttributeDatabaseKey_AuthorizationData
|| __DATA_CONST.__const _HAPAttributeDatabaseKey_Characteristics
|| __DATA_CONST.__const _HAPAttributeDatabaseKey_Context
|| __DATA_CONST.__const _HAPAttributeDatabaseKey_ContextData
|| __DATA_CONST.__const _HAPAttributeDatabaseKey_Description
|| __DATA_CONST.__const _HAPAttributeDatabaseKey_Events
|| __DATA_CONST.__const _HAPAttributeDatabaseKey_Format
|| __DATA_CONST.__const _HAPAttributeDatabaseKey_InstanceID
|| __DATA_CONST.__const _HAPAttributeDatabaseKey_LinkedServices
|| __DATA_CONST.__const _HAPAttributeDatabaseKey_Permissions
|| __DATA_CONST.__const _HAPAttributeDatabaseKey_PrepareID
|| __DATA_CONST.__const _HAPAttributeDatabaseKey_Remote
|| __DATA_CONST.__const _HAPAttributeDatabaseKey_ServiceHidden
|| __DATA_CONST.__const _HAPAttributeDatabaseKey_ServicePrimary
|| __DATA_CONST.__const _HAPAttributeDatabaseKey_Services
|| __DATA_CONST.__const _HAPAttributeDatabaseKey_TTL
|| __DATA_CONST.__const _HAPAttributeDatabaseKey_Type
|| __DATA_CONST.__const _HAPAttributeDatabaseKey_Value
|| __DATA_CONST.__const _HAPBaseUUIDString
|| __DATA_CONST.__const _HAPBonjourDomain
|| __DATA_CONST.__const _HAPBonjourServiceType
|| __DATA_CONST.__const _HAPCharacteristicEventNotification
|| __DATA_CONST.__const _HAPCharacteristicFormatType_Array
|| __DATA_CONST.__const _HAPCharacteristicFormatType_Bool
|| __DATA_CONST.__const _HAPCharacteristicFormatType_Data
|| __DATA_CONST.__const _HAPCharacteristicFormatType_Date
|| __DATA_CONST.__const _HAPCharacteristicFormatType_Dictionary
|| __DATA_CONST.__const _HAPCharacteristicFormatType_Float
|| __DATA_CONST.__const _HAPCharacteristicFormatType_Int
|| __DATA_CONST.__const _HAPCharacteristicFormatType_Int16
|| __DATA_CONST.__const _HAPCharacteristicFormatType_Int64
|| __DATA_CONST.__const _HAPCharacteristicFormatType_Int8
|| __DATA_CONST.__const _HAPCharacteristicFormatType_String
|| __DATA_CONST.__const _HAPCharacteristicFormatType_TLV8
|| __DATA_CONST.__const _HAPCharacteristicFormatType_UInt16
|| __DATA_CONST.__const _HAPCharacteristicFormatType_UInt32
|| __DATA_CONST.__const _HAPCharacteristicFormatType_UInt64
|| __DATA_CONST.__const _HAPCharacteristicFormatType_UInt8
|| __DATA_CONST.__const _HAPCharacteristicPropertyName_AdditionalAuthorization
|| __DATA_CONST.__const _HAPCharacteristicPropertyName_Bonjour
|| __DATA_CONST.__const _HAPCharacteristicPropertyName_EventNotificationContext
|| __DATA_CONST.__const _HAPCharacteristicPropertyName_Events
|| __DATA_CONST.__const _HAPCharacteristicPropertyName_Hidden
|| __DATA_CONST.__const _HAPCharacteristicPropertyName_LegacyHidden
|| __DATA_CONST.__const _HAPCharacteristicPropertyName_Read
|| __DATA_CONST.__const _HAPCharacteristicPropertyName_SecureRead
|| __DATA_CONST.__const _HAPCharacteristicPropertyName_SecureWrite
|| __DATA_CONST.__const _HAPCharacteristicPropertyName_TimedWrite
|| __DATA_CONST.__const _HAPCharacteristicPropertyName_Write
|| __DATA_CONST.__const _HAPCharacteristicPropertyName_WriteResponse
|| __DATA_CONST.__const _HAPCharacteristicUUID_AccessoryIdentifier
|| __DATA_CONST.__const _HAPCharacteristicUUID_Active
|| __DATA_CONST.__const _HAPCharacteristicUUID_ActivityInterval
|| __DATA_CONST.__const _HAPCharacteristicUUID_AdminOnlyAccess
|| __DATA_CONST.__const _HAPCharacteristicUUID_AirParticulateDensity
|| __DATA_CONST.__const _HAPCharacteristicUUID_AirParticulateSize
|| __DATA_CONST.__const _HAPCharacteristicUUID_AirQuality
|| __DATA_CONST.__const _HAPCharacteristicUUID_ApplicationMatchingIdentifier
|| __DATA_CONST.__const _HAPCharacteristicUUID_AudioFeedback
|| __DATA_CONST.__const _HAPCharacteristicUUID_BatteryLevel
|| __DATA_CONST.__const _HAPCharacteristicUUID_Brightness
|| __DATA_CONST.__const _HAPCharacteristicUUID_CarbonDioxideDetected
|| __DATA_CONST.__const _HAPCharacteristicUUID_CarbonDioxideLevel
|| __DATA_CONST.__const _HAPCharacteristicUUID_CarbonDioxidePeakLevel
|| __DATA_CONST.__const _HAPCharacteristicUUID_CarbonMonoxideDetected
|| __DATA_CONST.__const _HAPCharacteristicUUID_CarbonMonoxideLevel
|| __DATA_CONST.__const _HAPCharacteristicUUID_CarbonMonoxidePeakLevel
|| __DATA_CONST.__const _HAPCharacteristicUUID_Category
|| __DATA_CONST.__const _HAPCharacteristicUUID_ChargingState
|| __DATA_CONST.__const _HAPCharacteristicUUID_ColorTemperature
|| __DATA_CONST.__const _HAPCharacteristicUUID_ContactState
|| __DATA_CONST.__const _HAPCharacteristicUUID_CoolingThreshold
|| __DATA_CONST.__const _HAPCharacteristicUUID_CurrentDoorState
|| __DATA_CONST.__const _HAPCharacteristicUUID_CurrentHeaterCoolerState
|| __DATA_CONST.__const _HAPCharacteristicUUID_CurrentHeatingCooling
|| __DATA_CONST.__const _HAPCharacteristicUUID_CurrentHorizontalTilt
|| __DATA_CONST.__const _HAPCharacteristicUUID_CurrentLightLevel
|| __DATA_CONST.__const _HAPCharacteristicUUID_CurrentLockMechanismState
|| __DATA_CONST.__const _HAPCharacteristicUUID_CurrentPosition
|| __DATA_CONST.__const _HAPCharacteristicUUID_CurrentRelativeHumidity
|| __DATA_CONST.__const _HAPCharacteristicUUID_CurrentSecuritySystemState
|| __DATA_CONST.__const _HAPCharacteristicUUID_CurrentTemperature
|| __DATA_CONST.__const _HAPCharacteristicUUID_CurrentTilt
|| __DATA_CONST.__const _HAPCharacteristicUUID_CurrentTime
|| __DATA_CONST.__const _HAPCharacteristicUUID_CurrentVerticalTilt
|| __DATA_CONST.__const _HAPCharacteristicUUID_DayOfTheWeek
|| __DATA_CONST.__const _HAPCharacteristicUUID_DigitalZoom
|| __DATA_CONST.__const _HAPCharacteristicUUID_FirmwareRevision
|| __DATA_CONST.__const _HAPCharacteristicUUID_HardwareRevision
|| __DATA_CONST.__const _HAPCharacteristicUUID_HeatingThreshold
|| __DATA_CONST.__const _HAPCharacteristicUUID_HoldPosition
|| __DATA_CONST.__const _HAPCharacteristicUUID_Hue
|| __DATA_CONST.__const _HAPCharacteristicUUID_Identify
|| __DATA_CONST.__const _HAPCharacteristicUUID_ImageMirroring
|| __DATA_CONST.__const _HAPCharacteristicUUID_ImageRotation
|| __DATA_CONST.__const _HAPCharacteristicUUID_InUse
|| __DATA_CONST.__const _HAPCharacteristicUUID_InputEvent
|| __DATA_CONST.__const _HAPCharacteristicUUID_IsConfigured
|| __DATA_CONST.__const _HAPCharacteristicUUID_LabelIndex
|| __DATA_CONST.__const _HAPCharacteristicUUID_LabelNamespace
|| __DATA_CONST.__const _HAPCharacteristicUUID_LeakDetected
|| __DATA_CONST.__const _HAPCharacteristicUUID_LinkQuality
|| __DATA_CONST.__const _HAPCharacteristicUUID_LockManagementAutoSecureTimeout
|| __DATA_CONST.__const _HAPCharacteristicUUID_LockManagementControlPoint
|| __DATA_CONST.__const _HAPCharacteristicUUID_LockMechanismLastKnownAction
|| __DATA_CONST.__const _HAPCharacteristicUUID_Logs
|| __DATA_CONST.__const _HAPCharacteristicUUID_MFiPairSetup
|| __DATA_CONST.__const _HAPCharacteristicUUID_Manufacturer
|| __DATA_CONST.__const _HAPCharacteristicUUID_Model
|| __DATA_CONST.__const _HAPCharacteristicUUID_MotionDetected
|| __DATA_CONST.__const _HAPCharacteristicUUID_Mute
|| __DATA_CONST.__const _HAPCharacteristicUUID_Name
|| __DATA_CONST.__const _HAPCharacteristicUUID_NightVision
|| __DATA_CONST.__const _HAPCharacteristicUUID_ObstructionDetected
|| __DATA_CONST.__const _HAPCharacteristicUUID_OccupancyDetected
|| __DATA_CONST.__const _HAPCharacteristicUUID_On
|| __DATA_CONST.__const _HAPCharacteristicUUID_OpticalZoom
|| __DATA_CONST.__const _HAPCharacteristicUUID_OutletInUse
|| __DATA_CONST.__const _HAPCharacteristicUUID_OutputState
|| __DATA_CONST.__const _HAPCharacteristicUUID_PM10Density
|| __DATA_CONST.__const _HAPCharacteristicUUID_PM2_5Density
|| __DATA_CONST.__const _HAPCharacteristicUUID_PairSetup
|| __DATA_CONST.__const _HAPCharacteristicUUID_PairVerify
|| __DATA_CONST.__const _HAPCharacteristicUUID_PairingFeatures
|| __DATA_CONST.__const _HAPCharacteristicUUID_Pairings
|| __DATA_CONST.__const _HAPCharacteristicUUID_Ping
|| __DATA_CONST.__const _HAPCharacteristicUUID_PositionState
|| __DATA_CONST.__const _HAPCharacteristicUUID_ProgramMode
|| __DATA_CONST.__const _HAPCharacteristicUUID_Reachable
|| __DATA_CONST.__const _HAPCharacteristicUUID_RemainingDuration
|| __DATA_CONST.__const _HAPCharacteristicUUID_RotationDirection
|| __DATA_CONST.__const _HAPCharacteristicUUID_RotationSpeed
|| __DATA_CONST.__const _HAPCharacteristicUUID_Saturation
|| __DATA_CONST.__const _HAPCharacteristicUUID_SecuritySystemAlarmType
|| __DATA_CONST.__const _HAPCharacteristicUUID_SelectedStreamConfiguration
|| __DATA_CONST.__const _HAPCharacteristicUUID_SerialNumber
|| __DATA_CONST.__const _HAPCharacteristicUUID_ServiceInstanceID
|| __DATA_CONST.__const _HAPCharacteristicUUID_ServiceSignature
|| __DATA_CONST.__const _HAPCharacteristicUUID_SetDuration
|| __DATA_CONST.__const _HAPCharacteristicUUID_SetupStreamEndpoint
|| __DATA_CONST.__const _HAPCharacteristicUUID_SleepInterval
|| __DATA_CONST.__const _HAPCharacteristicUUID_SmokeDetected
|| __DATA_CONST.__const _HAPCharacteristicUUID_SoftwareRevision
|| __DATA_CONST.__const _HAPCharacteristicUUID_StatusActive
|| __DATA_CONST.__const _HAPCharacteristicUUID_StatusFault
|| __DATA_CONST.__const _HAPCharacteristicUUID_StatusJammed
|| __DATA_CONST.__const _HAPCharacteristicUUID_StatusLowBattery
|| __DATA_CONST.__const _HAPCharacteristicUUID_StatusTampered
|| __DATA_CONST.__const _HAPCharacteristicUUID_StreamingStatus
|| __DATA_CONST.__const _HAPCharacteristicUUID_SupportedAudioStreamConfiguration
|| __DATA_CONST.__const _HAPCharacteristicUUID_SupportedRTPConfiguration
|| __DATA_CONST.__const _HAPCharacteristicUUID_SupportedVideoStreamConfiguration
|| __DATA_CONST.__const _HAPCharacteristicUUID_TargetDoorState
|| __DATA_CONST.__const _HAPCharacteristicUUID_TargetHeaterCoolerState
|| __DATA_CONST.__const _HAPCharacteristicUUID_TargetHeatingCooling
|| __DATA_CONST.__const _HAPCharacteristicUUID_TargetHorizontalTilt
|| __DATA_CONST.__const _HAPCharacteristicUUID_TargetLockMechanismState
|| __DATA_CONST.__const _HAPCharacteristicUUID_TargetPosition
|| __DATA_CONST.__const _HAPCharacteristicUUID_TargetRelativeHumidity
|| __DATA_CONST.__const _HAPCharacteristicUUID_TargetSecuritySystemState
|| __DATA_CONST.__const _HAPCharacteristicUUID_TargetTemperature
|| __DATA_CONST.__const _HAPCharacteristicUUID_TargetTilt
|| __DATA_CONST.__const _HAPCharacteristicUUID_TargetVerticalTilt
|| __DATA_CONST.__const _HAPCharacteristicUUID_TemperatureUnits
|| __DATA_CONST.__const _HAPCharacteristicUUID_TimeUpdate
|| __DATA_CONST.__const _HAPCharacteristicUUID_ValveType
|| __DATA_CONST.__const _HAPCharacteristicUUID_Version
|| __DATA_CONST.__const _HAPCharacteristicUUID_Volume
|| __DATA_CONST.__const _HAPCharacteristicUnitType_ArcDegrees
|| __DATA_CONST.__const _HAPCharacteristicUnitType_Celsius
|| __DATA_CONST.__const _HAPCharacteristicUnitType_Enum
|| __DATA_CONST.__const _HAPCharacteristicUnitType_Fahrenheit
|| __DATA_CONST.__const _HAPCharacteristicUnitType_Lux
|| __DATA_CONST.__const _HAPCharacteristicUnitType_Percentage
|| __DATA_CONST.__const _HAPCharacteristicUnitType_Seconds
|| __DATA_CONST.__const _HAPConstraintsPropertyName_MaximumLength
|| __DATA_CONST.__const _HAPConstraintsPropertyName_MaximumValue
|| __DATA_CONST.__const _HAPConstraintsPropertyName_MinimumStep
|| __DATA_CONST.__const _HAPConstraintsPropertyName_MinimumValue
|| __DATA_CONST.__const _HAPConstraintsPropertyName_ReportingInterval
|| __DATA_CONST.__const _HAPConstraintsPropertyName_Unit
|| __DATA_CONST.__const _HAPConstraintsPropertyName_ValidValues
|| __DATA_CONST.__const _HAPConstraintsPropertyName_ValidValuesRange
|| __DATA_CONST.__const _HAPDescriptorUUID_CharacteristicInstanceID
|| __DATA_CONST.__const _HAPDescriptorUUID_CharacteristicProperties
|| __DATA_CONST.__const _HAPDescriptorUUID_CharacteristicStepValue
|| __DATA_CONST.__const _HAPErrorDomain
|| __DATA_CONST.__const _HAPHTTPClientErrorDomain
|| __DATA_CONST.__const _HAPMetadataFirmwareUpdateAutoApplyPolicyKey
|| __DATA_CONST.__const _HAPMetadataFirmwareUpdatePoliciesKey
|| __DATA_CONST.__const _HAPMetadataFirmwareUpdatePolicyAnyUserAtHomeKey
|| __DATA_CONST.__const _HAPMetadataFirmwareUpdatePolicyCharacteristicValueSettlingTimeKey
|| __DATA_CONST.__const _HAPMetadataFirmwareUpdatePolicyCharacteristicValuesKey
|| __DATA_CONST.__const _HAPMetadataFirmwareUpdatePolicyCharacteristicsKey
|| __DATA_CONST.__const _HAPMetadataFirmwareUpdatePolicyCheckForScheduledAutomationKey
|| __DATA_CONST.__const _HAPMetadataFirmwareUpdatePolicyDefaultCategoryKey
|| __DATA_CONST.__const _HAPMetadataFirmwareUpdatePolicyNoUserAtHomeKey
|| __DATA_CONST.__const _HAPMetadataFirmwareUpdatePolicyServicesKey
|| __DATA_CONST.__const _HAPMetadataFirmwareUpdatePolicyTimeWindowEndKey
|| __DATA_CONST.__const _HAPMetadataFirmwareUpdatePolicyTimeWindowKey
|| __DATA_CONST.__const _HAPMetadataFirmwareUpdatePolicyTimeWindowStartKey
|| __DATA_CONST.__const _HAPMetadataFirmwareUpdateStagingPolicyKey
|| __DATA_CONST.__const _HAPNFCData
|| __DATA_CONST.__const _HAPNFCProxSetupNotification
|| __DATA_CONST.__const _HAPNotificationPingFailedAccessoryNotReachable
|| __DATA_CONST.__const _HAPNotificationPingSucceededAccessoryReachable
|| __DATA_CONST.__const _HAPProtocolVersionStr
|| __DATA_CONST.__const _HAPQueryStringDelimiter_AccessoryInstanceID
|| __DATA_CONST.__const _HAPQueryStringDelimiter_InstanceIDs
|| __DATA_CONST.__const _HAPQueryStringKey_InstanceIDs
|| __DATA_CONST.__const _HAPResponseKey_Status
|| __DATA_CONST.__const _HAPServiceType_Lightbulb
|| __DATA_CONST.__const _HAPServiceType_LockMechanism
|| __DATA_CONST.__const _HAPServiceType_SecuritySystem
|| __DATA_CONST.__const _HAPServiceUUID_AccessoryInformation
|| __DATA_CONST.__const _HAPServiceUUID_AccessoryInformation_BTLE
|| __DATA_CONST.__const _HAPServiceUUID_AccessoryRuntimeInformation
|| __DATA_CONST.__const _HAPServiceUUID_AirPurifier
|| __DATA_CONST.__const _HAPServiceUUID_BridgingState
|| __DATA_CONST.__const _HAPServiceUUID_CameraControl
|| __DATA_CONST.__const _HAPServiceUUID_CameraRTPStreamManagement
|| __DATA_CONST.__const _HAPServiceUUID_Door
|| __DATA_CONST.__const _HAPServiceUUID_Doorbell
|| __DATA_CONST.__const _HAPServiceUUID_Fan
|| __DATA_CONST.__const _HAPServiceUUID_Faucet
|| __DATA_CONST.__const _HAPServiceUUID_GarageDoorOpener
|| __DATA_CONST.__const _HAPServiceUUID_HeaterCooler
|| __DATA_CONST.__const _HAPServiceUUID_HumidifierDehumidifier
|| __DATA_CONST.__const _HAPServiceUUID_IrrigationSystem
|| __DATA_CONST.__const _HAPServiceUUID_Label
|| __DATA_CONST.__const _HAPServiceUUID_Lightbulb
|| __DATA_CONST.__const _HAPServiceUUID_LockManagement
|| __DATA_CONST.__const _HAPServiceUUID_LockMechanism
|| __DATA_CONST.__const _HAPServiceUUID_Microphone
|| __DATA_CONST.__const _HAPServiceUUID_Outlet
|| __DATA_CONST.__const _HAPServiceUUID_Pairing
|| __DATA_CONST.__const _HAPServiceUUID_Pairing_BTLE
|| __DATA_CONST.__const _HAPServiceUUID_ProgrammableSwitch_Stateful
|| __DATA_CONST.__const _HAPServiceUUID_ProgrammableSwitch_Stateless
|| __DATA_CONST.__const _HAPServiceUUID_ProtocolInformation
|| __DATA_CONST.__const _HAPServiceUUID_SecuritySystem
|| __DATA_CONST.__const _HAPServiceUUID_Sensor_AirQuality
|| __DATA_CONST.__const _HAPServiceUUID_Sensor_Battery
|| __DATA_CONST.__const _HAPServiceUUID_Sensor_CarbonDioxide
|| __DATA_CONST.__const _HAPServiceUUID_Sensor_CarbonMonoxide
|| __DATA_CONST.__const _HAPServiceUUID_Sensor_Contact
|| __DATA_CONST.__const _HAPServiceUUID_Sensor_Humidity
|| __DATA_CONST.__const _HAPServiceUUID_Sensor_Leak
|| __DATA_CONST.__const _HAPServiceUUID_Sensor_Light
|| __DATA_CONST.__const _HAPServiceUUID_Sensor_Motion
|| __DATA_CONST.__const _HAPServiceUUID_Sensor_Occupancy
|| __DATA_CONST.__const _HAPServiceUUID_Sensor_Smoke
|| __DATA_CONST.__const _HAPServiceUUID_Sensor_Temperature
|| __DATA_CONST.__const _HAPServiceUUID_Speaker
|| __DATA_CONST.__const _HAPServiceUUID_Switch
|| __DATA_CONST.__const _HAPServiceUUID_Thermostat
|| __DATA_CONST.__const _HAPServiceUUID_TimeInformation
|| __DATA_CONST.__const _HAPServiceUUID_Valve
|| __DATA_CONST.__const _HAPServiceUUID_VentilationFan
|| __DATA_CONST.__const _HAPServiceUUID_Window
|| __DATA_CONST.__const _HAPServiceUUID_WindowCovering
|| __DATA_CONST.__const _HAPSystemKeychainStoreUpdatedNotification
|| __DATA_CONST.__const _HAPTXTKey_CategoryID
|| __DATA_CONST.__const _HAPTXTKey_CompatibilityFeatures
|| __DATA_CONST.__const _HAPTXTKey_ConfigNumber
|| __DATA_CONST.__const _HAPTXTKey_DeviceID
|| __DATA_CONST.__const _HAPTXTKey_FeaturesFlags
|| __DATA_CONST.__const _HAPTXTKey_LeaderMetrics
|| __DATA_CONST.__const _HAPTXTKey_Model
|| __DATA_CONST.__const _HAPTXTKey_ProtocolVersion
|| __DATA_CONST.__const _HAPTXTKey_SetupHash
|| __DATA_CONST.__const _HAPTXTKey_SourceVersion
|| __DATA_CONST.__const _HAPTXTKey_StateNumber
|| __DATA_CONST.__const _HAPTXTKey_StatusFlags
|| __DATA_CONST.__const _HAPTapNotification
|| __DATA_CONST.__const _HAPURLComponent_Accessories
|| __DATA_CONST.__const _HAPURLComponent_Characteristics
|| __DATA_CONST.__const _HAPURLComponent_Identify
|| __DATA_CONST.__const _HAPURLComponent_Pairings
|| __DATA_CONST.__const _HAPURLComponent_Prepare
|| __DATA_CONST.__const _HAPURLComponent_Resource
|| __DATA_CONST.__const _HAPURLComponent_ResourceImage
|| __DATA_CONST.__const _HAPURLComponent_ResourceImageHeight
|| __DATA_CONST.__const _HAPURLComponent_ResourceImageWidth
|| __DATA_CONST.__const _HAPURLComponent_ResourceRequestReason
|| __DATA_CONST.__const _HAPURLComponent_ResourceType
|| __DATA_CONST.__const _HAPURLComponent_Services
|| __DATA_CONST.__const _HAPUUIDSuffix
|| __DATA_CONST.__const _HAPWriteRequestKey_ResponseValue
|| __DATA_CONST.__const _HMErrorDomain
|| __DATA_CONST.__const _HOMEKIT_NFC_STREAM
|| __DATA_CONST.__const _HOMEKIT_PROX_CARD_STREAM
|| __DATA_CONST.__const _kAccessoryUniqueIdentifierSeparator
|| __DATA_CONST.__const _kControllerKeyPairGeneratedNotification
|| __DATA_CONST.__const _kHAPMetadataKey
|| __DATA_CONST.__const _kHMMetadataKey
|| __DATA_CONST.__const _kIndentLevel
|| __DATA_CONST.__const _kMetadataAllowAssociatedServiceKey
|| __DATA_CONST.__const _kMetadataAllowableSecuringWritesKey
|| __DATA_CONST.__const _kMetadataAssistantKey
|| __DATA_CONST.__const _kMetadataBTLE_ShortUUIDKey
|| __DATA_CONST.__const _kMetadataBulletinBoardEnabledKey
|| __DATA_CONST.__const _kMetadataCategoriesKey
|| __DATA_CONST.__const _kMetadataCharacteristicsKey
|| __DATA_CONST.__const _kMetadataCoalesceNotificationsKey
|| __DATA_CONST.__const _kMetadataCompletenessKey
|| __DATA_CONST.__const _kMetadataDefaultDescriptionKey
|| __DATA_CONST.__const _kMetadataDenylistFromApplicationsKey
|| __DATA_CONST.__const _kMetadataDenylistKey
|| __DATA_CONST.__const _kMetadataFormatKey
|| __DATA_CONST.__const _kMetadataHAPBaseUUIDSuffixKey
|| __DATA_CONST.__const _kMetadataIdentifierKey
|| __DATA_CONST.__const _kMetadataLegacyV3CloudDataKey
|| __DATA_CONST.__const _kMetadataLegacyV3IDSDataKey
|| __DATA_CONST.__const _kMetadataLinkedServicesKey
|| __DATA_CONST.__const _kMetadataLocalizationKey
|| __DATA_CONST.__const _kMetadataMaxLengthKey
|| __DATA_CONST.__const _kMetadataMaxValueKey
|| __DATA_CONST.__const _kMetadataMinLengthKey
|| __DATA_CONST.__const _kMetadataMinValueKey
|| __DATA_CONST.__const _kMetadataNotificationAutoEnabledKey
|| __DATA_CONST.__const _kMetadataNotificationKey
|| __DATA_CONST.__const _kMetadataOptionalKey
|| __DATA_CONST.__const _kMetadataOutValuesKey
|| __DATA_CONST.__const _kMetadataPlistDictionaryKey
|| __DATA_CONST.__const _kMetadataPropertiesKey
|| __DATA_CONST.__const _kMetadataPropertyBitPositionKey
|| __DATA_CONST.__const _kMetadataReadKey
|| __DATA_CONST.__const _kMetadataReadWriteKey
|| __DATA_CONST.__const _kMetadataRequiredKey
|| __DATA_CONST.__const _kMetadataRequiresDeviceUnlockKey
|| __DATA_CONST.__const _kMetadataSchemaVersionKey
|| __DATA_CONST.__const _kMetadataServicePropertiesKey
|| __DATA_CONST.__const _kMetadataServicesKey
|| __DATA_CONST.__const _kMetadataShortUUIDKey
|| __DATA_CONST.__const _kMetadataStepValueKey
|| __DATA_CONST.__const _kMetadataSupportsAuthorizationDataKey
|| __DATA_CONST.__const _kMetadataSupportsLocalizationKey
|| __DATA_CONST.__const _kMetadataTapEventAccessory
|| __DATA_CONST.__const _kMetadataUUIDKey
|| __DATA_CONST.__const _kMetadataUnitsKey
|| __DATA_CONST.__const _kMetadataValidValuesKey
|| __DATA_CONST.__const _kMetadataValuesKey
|| __DATA_CONST.__const _kMetadataVersionKey
|| __DATA_CONST.__const _kMetadataWakeOnOperationsFilter
|| __DATA_CONST.__const _kMetadataWakeOnOperationsKey
|| __DATA_CONST.__const _kMetadataWriteKey
|| __DATA_CONST.__const _kPrimaryAccessoryInstanceIDString
|| __DATA_DIRTY.__common _hap2Log_accessory
|| __DATA_DIRTY.__common _hap2Log_browser
|| __DATA_DIRTY.__common _hap2Log_coap
|| __DATA_DIRTY.__common _hap2Log_default
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HAP2AccessoryServerBrowser
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HAP2AccessoryServerBrowserCoordinatorInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HAP2AccessoryServerControllerFactory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HAP2AccessoryServerCoordinator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HAP2AccessoryServerCoordinatorThread
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HAP2AccessoryServerDiscoveryBonjourLegacy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HAP2AccessoryServerEncodingFactoryThread
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HAP2AccessoryServerPairingFactoryHAP
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HAP2AccessoryServerSecureTransportFactoryThread
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HAP2AccessoryServerTransportFactoryThread
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HAP2Lock
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HAP2LoggingObject
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HAP2PropertyLock
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HAP2SerializedOperationQueue
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HAPAccessoryServerBrowser
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HAPAccessoryServerBrowserBTLE
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HAPAccessoryServerBrowserHAP2Adapter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HAPAccessoryServerBrowserIP
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HAPAccessoryServerBrowserWiProxBTLE
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HAPKeychainItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HAPMetadata
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HAPMetadataCharacteristic
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HAPMetadataCharacteristicValue
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HAPMetadataProperty
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HAPMetadataService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HAPMetadataTuple
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HAPMetadataUnit
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HAPMetricsDispatcher
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HAPMetricsPairVerifyEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HAPNFCReaderNotification
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HAPNFCReaderXPC
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HAPPairingIdentity
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HAPSystemKeychainStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HAPWACAccessoryBrowser
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HAP2AccessoryServerBrowser
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HAP2AccessoryServerBrowserCoordinatorInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HAP2AccessoryServerControllerFactory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HAP2AccessoryServerCoordinator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HAP2AccessoryServerCoordinatorThread
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HAP2AccessoryServerDiscoveryBonjourLegacy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HAP2AccessoryServerEncodingFactoryThread
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HAP2AccessoryServerPairingFactoryHAP
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HAP2AccessoryServerSecureTransportFactoryThread
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HAP2AccessoryServerTransportFactoryThread
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HAP2Lock
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HAP2LoggingObject
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HAP2PropertyLock
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HAP2SerializedOperationQueue
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HAPAccessoryServerBrowser
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HAPAccessoryServerBrowserBTLE
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HAPAccessoryServerBrowserHAP2Adapter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HAPAccessoryServerBrowserIP
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HAPAccessoryServerBrowserWiProxBTLE
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HAPKeychainItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HAPMetadata
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HAPMetadataCharacteristic
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HAPMetadataCharacteristicValue
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HAPMetadataProperty
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HAPMetadataService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HAPMetadataTuple
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HAPMetadataUnit
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HAPMetricsDispatcher
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HAPMetricsPairVerifyEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HAPNFCReaderNotification
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HAPNFCReaderXPC
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HAPPairingIdentity
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HAPSystemKeychainStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HAPWACAccessoryBrowser
|| __TEXT.__const _BANDWIDTH_PERCENT_CAP
|| __TEXT.__const _HAP2MaximumSecureSessionLength
|| __TEXT.__const _HAPAccessoryReachabilityDefaultConfirmInterval
|| __TEXT.__const _HAPAccessoryReachabilityDefaultSleepyConfirmInterval
|| __TEXT.__const _HAPBonjourEventProcessDelayTime
|| __TEXT.__const _HAPBonjourEventProcessTick
|| __TEXT.__const _HAPWACScanStopCheckInterval
|| __TEXT.__const _kBandwidthPercentCap
|| __TEXT.__const _kBluetoothGSNMaxValue
|| __TEXT.__const _kHAPAccessoryConnectionLifetimeInSeconds
|| __TEXT.__const _kHAPAccessoryConnectionLifetimeLeewayInMilliseconds
|| __TEXT.__const _kHAPAccessoryConnectionTimeoutInSeconds
|| __TEXT.__const _kHAPAccessoryConnectionTimeoutLeewayInMilliseconds
|| __TEXT.__const _kHAPAccessoryPairSetupConnectionLifetimeInSeconds
|| __TEXT.__const _kHAPBTLELostAccessoryTimeoutInSeconds
|| __TEXT.__const _kHAPBTLELostAccessoryTimeoutLeewayInMilliseconds
|| __TEXT.__const _kHAPBTLETargetedScanTimeoutInSeconds
|| __TEXT.__const _kHAPBTLETargetedScanTimeoutLeewayInMilliseconds
|| __TEXT.__const _kHAPDefaultMaxLengthValue
|| __TEXT.__const _kHAPHTTPClientHTTPRequestTimeoutSeconds
|| __TEXT.__const _kHAPHTTPClientTCPConnectionTimeoutSeconds
|| __TEXT.__const _kHAPMaxAllowedMaxLengthValue
|| __TEXT.__const _kHAPMaxAllowedTypeNameLength
|| __TEXT.__const _kHAPMaximumAccessoriesPerBridge
|| __TEXT.__const _kHAPMaximumCharacteristicsPerService
|| __TEXT.__const _kHAPMaximumServicesPerAccessory
|| __TEXT.__const _kHAPNewAccessoryAvailabilityTimeoutInSeconds
|| __TEXT.__const _kHAPPairingsCharacteristicDummyInstanceID
|| __TEXT.__const _kHAPPrimaryAccessoryInstanceID
|| __TEXT.__const _kMaxBandwidthA2DP
|| __TEXT.__const _kMaxBandwidthBTGC
|| __TEXT.__const _kMaxBandwidthBTKB
|| __TEXT.__const _kMaxBandwidthEAcc
|| __TEXT.__const _kMaxBandwidthHK
|| __TEXT.__const _kMaxBandwidthLEAcc
|| __TEXT.__const _kMaxBandwidthLERemote
|| __TEXT.__const _kMinBandwidthA2DP
|| __TEXT.__const _kMinBandwidthBTGC
|| __TEXT.__const _kMinBandwidthBTKB
|| __TEXT.__const _kMinBandwidthEAcc
|| __TEXT.__const _kMinBandwidthHK
|| __TEXT.__const _kMinBandwidthLEAcc
|| __TEXT.__const _kMinBandwidthLERemote
|| __TEXT.__text _HAP2CoAPMessageTypeToString
|| __TEXT.__text _HAP2CoAPRequestMethodToString
|| __TEXT.__text _HAP2CoAPResponseClassToString
|| __TEXT.__text _HAP2ConnectionStateToString
|| __TEXT.__text _HAP2TLVCharacteristicPropertiesAsString
|| __TEXT.__text _HAP2TLVErrorsAsString
|| __TEXT.__text _HAP2TLVPairingMethodAsString
|| __TEXT.__text _HAP2TLVPairingStateAsString
|| __TEXT.__text _HAP2TLVServicePropertiesAsString
|| __TEXT.__text _HAP2TLVThreadOperationTypeAsString
|| __TEXT.__text _HAP2UnpairedAccessoryServerPermissionTypeToString
|| __TEXT.__text _HAPAccessCodeCharacterSetAsString
|| __TEXT.__text _HAPAccessCodeFlagsAsString
|| __TEXT.__text _HAPAccessCodeOperationTypeAsString
|| __TEXT.__text _HAPAccessCodeResponseStatusAsString
|| __TEXT.__text _HAPAccessoryHasPairings
|| __TEXT.__text _HAPAccessoryServerPairSetupTypeToString
|| __TEXT.__text _HAPAccessorySuspendedStateDescription
|| __TEXT.__text _HAPAudioCodecBitRateAsString
|| __TEXT.__text _HAPAudioCodecSampleRateAsString
|| __TEXT.__text _HAPAudioCodecTypeAsString
|| __TEXT.__text _HAPAuthFeaturesToString
|| __TEXT.__text _HAPAuthMethodToString
|| __TEXT.__text _HAPBTLEControlTypeString
|| __TEXT.__text _HAPCharacteristicFormatFromString
|| __TEXT.__text _HAPCharacteristicFormatToString
|| __TEXT.__text _HAPCharacteristicUnitFromString
|| __TEXT.__text _HAPCharacteristicUnitToString
|| __TEXT.__text _HAPCharacteristicValueTransitionEndBehaviorAsString
|| __TEXT.__text _HAPCharacteristicValueTransitionLinearStartConditionAsString
|| __TEXT.__text _HAPCharacteristicValueTransitionTypesAsString
|| __TEXT.__text _HAPCommunicationProtocolDescription
|| __TEXT.__text _HAPDataStreamTransportCommandAsString
|| __TEXT.__text _HAPDataStreamTransportCommandStatusAsString
|| __TEXT.__text _HAPDataStreamTransportProtocolAsString
|| __TEXT.__text _HAPDiagnosticsSnapshotAudioAsString
|| __TEXT.__text _HAPDiagnosticsSnapshotFormatAsString
|| __TEXT.__text _HAPDiagnosticsSnapshotOptionsAsString
|| __TEXT.__text _HAPDiagnosticsSnapshotTypeAsString
|| __TEXT.__text _HAPDispatchQueueName
|| __TEXT.__text _HAPErrorCodeFromHAPBLEStatusErrorCode
|| __TEXT.__text _HAPFirmwareUpdateStateAsString
|| __TEXT.__text _HAPGetHAPMetadataVersion
|| __TEXT.__text _HAPGetPreferredAuthMethod
|| __TEXT.__text _HAPHTTPSerializationTypeDescription
|| __TEXT.__text _HAPLinkTypeDescription
|| __TEXT.__text _HAPNFCAccessKeyStateAsString
|| __TEXT.__text _HAPNFCAccessKeyTypeAsString
|| __TEXT.__text _HAPNFCAccessOperationTypeAsString
|| __TEXT.__text _HAPNFCAccessResponseStatusAsString
|| __TEXT.__text _HAPNotificationContextSourceAsString
|| __TEXT.__text _HAPOperatingStateAbnormalReasonsAsString
|| __TEXT.__text _HAPOperatingStateAsString
|| __TEXT.__text _HAPPairingStateFromData
|| __TEXT.__text _HAPStagingNotReadyReasonsAsString
|| __TEXT.__text _HAPStringFromAccessoryServerSession
|| __TEXT.__text _HAPTLVCreateParseArrayToString
|| __TEXT.__text _HAPTLVParseContiguousTlvs
|| __TEXT.__text _HAPTLVParseSInt64
|| __TEXT.__text _HAPTLVParseUInt64
|| __TEXT.__text _HAPTLVWriteSInt64
|| __TEXT.__text _HAPTLVWriteUInt64
|| __TEXT.__text _HAPUpdateNotReadyReasonsAsString
|| __TEXT.__text _HAPUserPermissionTypeDescription
|| __TEXT.__text _HAPValidateSetupHash
|| __TEXT.__text _HAPWACWiFiBandToString
|| __TEXT.__text _HAPWiFiConfigurationOperationTypeAsString
|| __TEXT.__text _HAPWiFiConfigurationUpdateStatusAsString
|| __TEXT.__text _HAPWiFiSecurityModeAsString
|| __TEXT.__text _HMErrorCodeFromHAPErrorCode
|| __TEXT.__text _HMErrorFromHAPIPStatusErrorCode
|| __TEXT.__text _HMErrorFromOSStatus
|| __TEXT.__text __HAPAccessoryServerBTLEStateDescription
|| __TEXT.__text __deserializeDataToKeyPair
|| __TEXT.__text __deserializePublicKey
|| __TEXT.__text __deserializeSecretKey
|| __TEXT.__text __hasValidPropertiesForType
|| __TEXT.__text __parseBTLEPresentationFormat
|| __TEXT.__text __parseCharacteristicStepValue
|| __TEXT.__text __parseCharacteristicValidRange
|| __TEXT.__text __parseCharacteristicValidValues
|| __TEXT.__text __parseHAPCharacteristicFormat
|| __TEXT.__text __parseHAPCharacteristicUnit
|| __TEXT.__text __parseLinkedServices
|| __TEXT.__text __parseSerializedAccessory
|| __TEXT.__text __parseServiceProperties
|| __TEXT.__text __serializeKeyPairToData
|| __TEXT.__text __serializePublicKey
|| __TEXT.__text __serializeSecretKey
|| __TEXT.__text _arraysAreNotEqualNilSafe
|| __TEXT.__text _characteristicPropertiesString
|| __TEXT.__text _coap_add_attr
|| __TEXT.__text _coap_add_block
|| __TEXT.__text _coap_add_data
|| __TEXT.__text _coap_add_data_after
|| __TEXT.__text _coap_add_data_blocked_response
|| __TEXT.__text _coap_add_observer
|| __TEXT.__text _coap_add_option
|| __TEXT.__text _coap_add_option_later
|| __TEXT.__text _coap_add_optlist_pdu
|| __TEXT.__text _coap_add_resource
|| __TEXT.__text _coap_add_token
|| __TEXT.__text _coap_address_equals
|| __TEXT.__text _coap_address_init
|| __TEXT.__text _coap_adjust_basetime
|| __TEXT.__text _coap_calc_timeout
|| __TEXT.__text _coap_can_exit
|| __TEXT.__text _coap_cancel_all_messages
|| __TEXT.__text _coap_cancel_session_messages
|| __TEXT.__text _coap_check_notify
|| __TEXT.__text _coap_check_option
|| __TEXT.__text _coap_cleanup
|| __TEXT.__text _coap_clear_event_handler
|| __TEXT.__text _coap_clock_init
|| __TEXT.__text _coap_clone_uri
|| __TEXT.__text _coap_context_get_coap_fd
|| __TEXT.__text _coap_context_set_keepalive
|| __TEXT.__text _coap_context_set_pki
|| __TEXT.__text _coap_context_set_pki_root_cas
|| __TEXT.__text _coap_context_set_psk
|| __TEXT.__text _coap_debug_send_packet
|| __TEXT.__text _coap_debug_set_packet_loss
|| __TEXT.__text _coap_decode_var_bytes
|| __TEXT.__text _coap_decode_var_bytes8
|| __TEXT.__text _coap_delete_all
|| __TEXT.__text _coap_delete_all_resources
|| __TEXT.__text _coap_delete_attr
|| __TEXT.__text _coap_delete_node
|| __TEXT.__text _coap_delete_observer
|| __TEXT.__text _coap_delete_observers
|| __TEXT.__text _coap_delete_optlist
|| __TEXT.__text _coap_delete_pdu
|| __TEXT.__text _coap_delete_resource
|| __TEXT.__text _coap_delete_str_const
|| __TEXT.__text _coap_delete_string
|| __TEXT.__text _coap_dispatch
|| __TEXT.__text _coap_dtls_context_check_keys_enabled
|| __TEXT.__text _coap_dtls_context_set_pki
|| __TEXT.__text _coap_dtls_context_set_pki_root_cas
|| __TEXT.__text _coap_dtls_context_set_psk
|| __TEXT.__text _coap_dtls_free_context
|| __TEXT.__text _coap_dtls_free_session
|| __TEXT.__text _coap_dtls_get_context_timeout
|| __TEXT.__text _coap_dtls_get_log_level
|| __TEXT.__text _coap_dtls_get_overhead
|| __TEXT.__text _coap_dtls_get_timeout
|| __TEXT.__text _coap_dtls_handle_timeout
|| __TEXT.__text _coap_dtls_hello
|| __TEXT.__text _coap_dtls_is_context_timeout
|| __TEXT.__text _coap_dtls_is_supported
|| __TEXT.__text _coap_dtls_new_client_session
|| __TEXT.__text _coap_dtls_new_context
|| __TEXT.__text _coap_dtls_new_server_session
|| __TEXT.__text _coap_dtls_receive
|| __TEXT.__text _coap_dtls_send
|| __TEXT.__text _coap_dtls_session_update_mtu
|| __TEXT.__text _coap_dtls_set_log_level
|| __TEXT.__text _coap_dtls_startup
|| __TEXT.__text _coap_encode_var_safe
|| __TEXT.__text _coap_encode_var_safe8
|| __TEXT.__text _coap_endpoint_get_session
|| __TEXT.__text _coap_endpoint_set_default_mtu
|| __TEXT.__text _coap_endpoint_str
|| __TEXT.__text _coap_find_attr
|| __TEXT.__text _coap_find_observer
|| __TEXT.__text _coap_find_transaction
|| __TEXT.__text _coap_fls
|| __TEXT.__text _coap_flsll
|| __TEXT.__text _coap_free_context
|| __TEXT.__text _coap_free_endpoint
|| __TEXT.__text _coap_free_type
|| __TEXT.__text _coap_get_app_data
|| __TEXT.__text _coap_get_block
|| __TEXT.__text _coap_get_data
|| __TEXT.__text _coap_get_log_level
|| __TEXT.__text _coap_get_query
|| __TEXT.__text _coap_get_resource_from_uri_path
|| __TEXT.__text _coap_get_tls_library_version
|| __TEXT.__text _coap_get_uri_path
|| __TEXT.__text _coap_handle_dgram
|| __TEXT.__text _coap_handle_event
|| __TEXT.__text _coap_handle_failed_notify
|| __TEXT.__text _coap_hash_impl
|| __TEXT.__text _coap_insert_node
|| __TEXT.__text _coap_insert_optlist
|| __TEXT.__text _coap_io_do_events
|| __TEXT.__text _coap_io_prepare_epoll
|| __TEXT.__text _coap_is_mcast
|| __TEXT.__text _coap_join_mcast_group
|| __TEXT.__text _coap_log_impl
|| __TEXT.__text _coap_make_str_const
|| __TEXT.__text _coap_malloc_endpoint
|| __TEXT.__text _coap_malloc_type
|| __TEXT.__text _coap_memory_init
|| __TEXT.__text _coap_mfree_endpoint
|| __TEXT.__text _coap_network_read
|| __TEXT.__text _coap_network_send
|| __TEXT.__text _coap_new_client_session
|| __TEXT.__text _coap_new_client_session_pki
|| __TEXT.__text _coap_new_client_session_psk
|| __TEXT.__text _coap_new_context
|| __TEXT.__text _coap_new_endpoint
|| __TEXT.__text _coap_new_error_response
|| __TEXT.__text _coap_new_node
|| __TEXT.__text _coap_new_optlist
|| __TEXT.__text _coap_new_pdu
|| __TEXT.__text _coap_new_server_session
|| __TEXT.__text _coap_new_str_const
|| __TEXT.__text _coap_new_string
|| __TEXT.__text _coap_new_uri
|| __TEXT.__text _coap_opt_block_num
|| __TEXT.__text _coap_opt_delta
|| __TEXT.__text _coap_opt_encode
|| __TEXT.__text _coap_opt_encode_size
|| __TEXT.__text _coap_opt_length
|| __TEXT.__text _coap_opt_parse
|| __TEXT.__text _coap_opt_setheader
|| __TEXT.__text _coap_opt_size
|| __TEXT.__text _coap_opt_value
|| __TEXT.__text _coap_option_check_critical
|| __TEXT.__text _coap_option_filter_get
|| __TEXT.__text _coap_option_filter_set
|| __TEXT.__text _coap_option_filter_unset
|| __TEXT.__text _coap_option_iterator_init
|| __TEXT.__text _coap_option_next
|| __TEXT.__text _coap_package_name
|| __TEXT.__text _coap_package_version
|| __TEXT.__text _coap_packet_get_memmapped
|| __TEXT.__text _coap_pdu_clear
|| __TEXT.__text _coap_pdu_encode_header
|| __TEXT.__text _coap_pdu_init
|| __TEXT.__text _coap_pdu_parse
|| __TEXT.__text _coap_pdu_parse_header
|| __TEXT.__text _coap_pdu_parse_header_size
|| __TEXT.__text _coap_pdu_parse_opt
|| __TEXT.__text _coap_pdu_parse_size
|| __TEXT.__text _coap_pdu_resize
|| __TEXT.__text _coap_peek_next
|| __TEXT.__text _coap_pop_next
|| __TEXT.__text _coap_print_addr
|| __TEXT.__text _coap_print_link
|| __TEXT.__text _coap_print_wellknown
|| __TEXT.__text _coap_read
|| __TEXT.__text _coap_register_event_handler
|| __TEXT.__text _coap_register_handler
|| __TEXT.__text _coap_remove_from_queue
|| __TEXT.__text _coap_resource_init
|| __TEXT.__text _coap_resource_notify_observers
|| __TEXT.__text _coap_resource_set_dirty
|| __TEXT.__text _coap_resource_unknown_init
|| __TEXT.__text _coap_response_phrase
|| __TEXT.__text _coap_retransmit
|| __TEXT.__text _coap_run_once
|| __TEXT.__text _coap_send
|| __TEXT.__text _coap_send_ack
|| __TEXT.__text _coap_send_error
|| __TEXT.__text _coap_send_message_type
|| __TEXT.__text _coap_session_connected
|| __TEXT.__text _coap_session_delay_pdu
|| __TEXT.__text _coap_session_disconnected
|| __TEXT.__text _coap_session_free
|| __TEXT.__text _coap_session_get_ack_random_factor
|| __TEXT.__text _coap_session_get_ack_timeout
|| __TEXT.__text _coap_session_get_app_data
|| __TEXT.__text _coap_session_get_by_peer
|| __TEXT.__text _coap_session_get_max_transmit
|| __TEXT.__text _coap_session_max_pdu_size
|| __TEXT.__text _coap_session_mfree
|| __TEXT.__text _coap_session_new_dtls_session
|| __TEXT.__text _coap_session_reference
|| __TEXT.__text _coap_session_release
|| __TEXT.__text _coap_session_send
|| __TEXT.__text _coap_session_send_csm
|| __TEXT.__text _coap_session_send_pdu
|| __TEXT.__text _coap_session_send_ping
|| __TEXT.__text _coap_session_set_ack_random_factor
|| __TEXT.__text _coap_session_set_ack_timeout
|| __TEXT.__text _coap_session_set_app_data
|| __TEXT.__text _coap_session_set_max_retransmit
|| __TEXT.__text _coap_session_set_mtu
|| __TEXT.__text _coap_session_str
|| __TEXT.__text _coap_session_write
|| __TEXT.__text _coap_set_app_data
|| __TEXT.__text _coap_set_event_handler
|| __TEXT.__text _coap_set_log_handler
|| __TEXT.__text _coap_set_log_level
|| __TEXT.__text _coap_set_show_pdu_output
|| __TEXT.__text _coap_show_pdu
|| __TEXT.__text _coap_show_tls_version
|| __TEXT.__text _coap_socket_accept_tcp
|| __TEXT.__text _coap_socket_bind_tcp
|| __TEXT.__text _coap_socket_bind_udp
|| __TEXT.__text _coap_socket_close
|| __TEXT.__text _coap_socket_connect_tcp1
|| __TEXT.__text _coap_socket_connect_tcp2
|| __TEXT.__text _coap_socket_connect_udp
|| __TEXT.__text _coap_socket_read
|| __TEXT.__text _coap_socket_send
|| __TEXT.__text _coap_socket_strerror
|| __TEXT.__text _coap_socket_write
|| __TEXT.__text _coap_split_path
|| __TEXT.__text _coap_split_query
|| __TEXT.__text _coap_split_uri
|| __TEXT.__text _coap_startup
|| __TEXT.__text _coap_string_tls_version
|| __TEXT.__text _coap_subscription_init
|| __TEXT.__text _coap_ticks
|| __TEXT.__text _coap_ticks_from_rt_us
|| __TEXT.__text _coap_ticks_to_rt
|| __TEXT.__text _coap_ticks_to_rt_us
|| __TEXT.__text _coap_tls_free_session
|| __TEXT.__text _coap_tls_is_supported
|| __TEXT.__text _coap_tls_new_client_session
|| __TEXT.__text _coap_tls_new_server_session
|| __TEXT.__text _coap_tls_read
|| __TEXT.__text _coap_tls_write
|| __TEXT.__text _coap_touch_observer
|| __TEXT.__text _coap_wait_ack
|| __TEXT.__text _coap_wellknown_response
|| __TEXT.__text _coap_write
|| __TEXT.__text _coap_write_block_opt
|| __TEXT.__text _compareStateNumberWithRollover
|| __TEXT.__text _dateWithTimeIntervalSince1970
|| __TEXT.__text _errorAsString
|| __TEXT.__text _hap2LogInitialize
|| __TEXT.__text _isValidInstanceID
|| __TEXT.__text _isValidTypeName
|| __TEXT.__text _localizedDescriptionKeyForError
|| __TEXT.__text _numbersAreNotEqualNilSafe
|| __TEXT.__text _servicePropertiesString
|| __TEXT.__text _sizeForHAPCharacteristicFormat
|| __TEXT.__text _stringsAreNotEqualNilSafe
|| __TEXT.__text _validateAndNormalizeUUIDString
__ CloudServices: _OBJC_CLASS_$_SecureBackup
__ CoreAnalytics: _AnalyticsSendEventLazy
__ CoreBluetooth: _CBAdvertisementDataLocalNameKey
__ CoreBluetooth: _CBAdvertisementDataManufacturerDataKey
__ CoreBluetooth: _CBAdvertisementDataServiceDataKey
__ CoreBluetooth: _CBCentralManagerScanOptionActive
__ CoreBluetooth: _CBCentralManagerScanOptionAllowDuplicatesKey
__ CoreBluetooth: _CBCentralManagerScanOptionScanInterval
__ CoreBluetooth: _CBCentralManagerScanOptionScanWindow
__ CoreBluetooth: _CBErrorDomain
__ CoreBluetooth: _CBManagerIsPrivilegedDaemonKey
__ CoreBluetooth: _CBUUIDAppleAccessoryReconnectServiceString
__ CoreBluetooth: _CBUUIDAppleMediaServiceString
__ CoreBluetooth: _CBUUIDAppleNotificationCenterServiceString
__ CoreBluetooth: _CBUUIDBatteryServiceString
__ CoreBluetooth: _CBUUIDCharacteristicFormatString
__ CoreBluetooth: _CBUUIDCharacteristicUserDescriptionString
__ CoreBluetooth: _CBUUIDContinuityServiceString
__ CoreBluetooth: _CBUUIDDeviceInformationServiceString
__ CoreBluetooth: _CBUUIDGenericAccessProfileString
__ CoreBluetooth: _CBUUIDGenericAttributeProfileString
__ CoreBluetooth: _OBJC_CLASS_$_CBCentralManager
__ CoreBluetooth: _OBJC_CLASS_$_CBCharacteristic
__ CoreBluetooth: _OBJC_CLASS_$_CBService
__ CoreBluetooth: _OBJC_CLASS_$_CBUUID
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetTypeID
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFDataCreateCopy
__ CoreFoundation: _CFDataGetTypeID
__ CoreFoundation: _CFDateGetTypeID
__ CoreFoundation: _CFDictionaryAddValue
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionaryGetTypeID
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFNumberGetTypeID
__ CoreFoundation: _CFNumberGetValue
__ CoreFoundation: _CFNumberIsFloatType
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFStringCreateCopy
__ CoreFoundation: _CFStringGetTypeID
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanFalse
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ CoreUtils: _AsyncConnection_Connect
__ CoreUtils: _AsyncConnection_Release
__ CoreUtils: _BonjourBrowser_Create
__ CoreUtils: _BonjourBrowser_SetDispatchQueue
__ CoreUtils: _BonjourBrowser_SetEventHandlerBlock
__ CoreUtils: _BonjourBrowser_Start
__ CoreUtils: _BonjourBrowser_Stop
__ CoreUtils: _BonjourDevice_CopyCFString
__ CoreUtils: _BonjourDevice_GetDNSName
__ CoreUtils: _BonjourDevice_Reconfirm
__ CoreUtils: _CFDictionaryGetTypedValue
__ CoreUtils: _DataToHexCStringEx
__ CoreUtils: _DebugGetErrorString
__ CoreUtils: _HTTPClientCreate
__ CoreUtils: _HTTPClientGetPeerAddress
__ CoreUtils: _HTTPClientInvalidate
__ CoreUtils: _HTTPClientSendMessage
__ CoreUtils: _HTTPClientSetDebugDelegate
__ CoreUtils: _HTTPClientSetDelegate
__ CoreUtils: _HTTPClientSetDestination
__ CoreUtils: _HTTPClientSetDispatchQueue
__ CoreUtils: _HTTPClientSetFlags
__ CoreUtils: _HTTPClientSetTimeout
__ CoreUtils: _HTTPClientSetTransportDelegate
__ CoreUtils: _HTTPGetHeaderField
__ CoreUtils: _HTTPGetReasonPhrase
__ CoreUtils: _HTTPHeader_InitRequest
__ CoreUtils: _HTTPHeader_SetField
__ CoreUtils: _HTTPMessageCreate
__ CoreUtils: _HTTPMessageSetBody
__ CoreUtils: _HTTPMessageSetCompletionBlock
__ CoreUtils: _HardwareAddressToCString
__ CoreUtils: _HexToData
__ CoreUtils: _IsAppleTV
__ CoreUtils: _MFiPlatform_VerifySignature
__ CoreUtils: _NetTransportChaCha20Poly1305Configure
__ CoreUtils: _NormalizeUUIDString
__ CoreUtils: _OBJC_CLASS_$_CUBonjourBrowser
__ CoreUtils: _OBJC_CLASS_$_CUWiFiScanner
__ CoreUtils: _PairingSessionCopyProperty
__ CoreUtils: _PairingSessionCreate
__ CoreUtils: _PairingSessionDeriveKey
__ CoreUtils: _PairingSessionExchange
__ CoreUtils: _PairingSessionGetPeerFlags
__ CoreUtils: _PairingSessionGetResumeInfo
__ CoreUtils: _PairingSessionSetEventHandler
__ CoreUtils: _PairingSessionSetFlags
__ CoreUtils: _PairingSessionSetIdentifier
__ CoreUtils: _PairingSessionSetMTU
__ CoreUtils: _PairingSessionSetProperty
__ CoreUtils: _PairingSessionSetResumeInfo
__ CoreUtils: _PairingSessionSetSetupCode
__ CoreUtils: _SNScanF
__ CoreUtils: _SockAddrToString
__ CoreUtils: _TLV8BufferAppend
__ CoreUtils: _TLV8BufferAppendUInt64
__ CoreUtils: _TLV8BufferDetach
__ CoreUtils: _TLV8BufferFree
__ CoreUtils: _TLV8BufferInit
__ CoreUtils: _TLV8Get
__ CoreUtils: _TLV8GetBytes
__ CoreUtils: _TLV8GetNext
__ CoreUtils: _TLV8GetOrCopyCoalesced
__ CoreUtils: _TLV8GetUInt64
__ CoreUtils: _TextToHardwareAddress
__ CoreUtils: _WiFiCopyCurrentNetworkInfoEx
__ CoreUtils: _WiFiJoinNetwork
__ CoreUtils: _WiFiRestoreNetwork
__ CoreUtils: __HTTPClientSetProperty
__ CoreUtils: _cced25519_make_key_pair_compat
__ CoreUtils: _chacha20_poly1305_decrypt_all_64x64
__ CoreUtils: _chacha20_poly1305_decrypt_all_64x64_ex
__ CoreUtils: _chacha20_poly1305_encrypt_all_64x64
__ CoreUtils: _strnicmp_prefix
__ CoreUtils: _strnicmpx
__ EasyConfig: _EasyConfigKey_AllowPairing
__ EasyConfig: _EasyConfigKey_CountryCode
__ EasyConfig: _EasyConfigKey_DeviceID
__ EasyConfig: _EasyConfigKey_Flags
__ EasyConfig: _EasyConfigKey_Name
__ EasyConfig: _EasyConfigKey_ReasonError
__ EasyConfig: _EasyConfigKey_WiFiPSK
__ EasyConfig: _EasyConfigKey_WiFiSSID
__ EasyConfig: _OBJC_CLASS_$_EasyConfigDevice
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSLocalizedRecoverySuggestionErrorKey
__ Foundation: _NSOSStatusErrorDomain
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSBackgroundActivityScheduler
__ Foundation: _OBJC_CLASS_$_NSBlockOperation
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantFloatNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSIndexSet
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSLock
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMultiReadUniWriteLock
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNetService
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSOperation
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_METACLASS_$_NSOperation
__ Foundation: _OBJC_METACLASS_$_NSThread
__ HMFoundation: _HMFBooleanToString
__ HMFoundation: _HMFCreateOsLogHandle
__ HMFoundation: _HMFEqualObjects
__ HMFoundation: _HMFErrorDomain
__ HMFoundation: _HMFEventDictionaryFromFormatWithUUID
__ HMFoundation: _HMFGetLogIdentifier
__ HMFoundation: _HMFGetOsLogHandle
__ HMFoundation: _HMFHomeKitLoggingSubsystem
__ HMFoundation: _HMFMethodDescription
__ HMFoundation: _HMFPairingKeyLength
__ HMFoundation: _HMFWiFiManagerCurrentNetworkDidChangeNotification
__ HMFoundation: _OBJC_CLASS_$_HMFActivity
__ HMFoundation: _OBJC_CLASS_$_HMFAttributeDescription
__ HMFoundation: _OBJC_CLASS_$_HMFBlockOperation
__ HMFoundation: _OBJC_CLASS_$_HMFNetAddress
__ HMFoundation: _OBJC_CLASS_$_HMFNetManager
__ HMFoundation: _OBJC_CLASS_$_HMFNetMonitor
__ HMFoundation: _OBJC_CLASS_$_HMFOSTransaction
__ HMFoundation: _OBJC_CLASS_$_HMFObject
__ HMFoundation: _OBJC_CLASS_$_HMFObjectCacheNSString
__ HMFoundation: _OBJC_CLASS_$_HMFPairingIdentity
__ HMFoundation: _OBJC_CLASS_$_HMFPairingKey
__ HMFoundation: _OBJC_CLASS_$_HMFPowerAssertion
__ HMFoundation: _OBJC_CLASS_$_HMFPowerLogger
__ HMFoundation: _OBJC_CLASS_$_HMFPreferences
__ HMFoundation: _OBJC_CLASS_$_HMFStringIndentation
__ HMFoundation: _OBJC_CLASS_$_HMFSystemInfo
__ HMFoundation: _OBJC_CLASS_$_HMFTimer
__ HMFoundation: _OBJC_CLASS_$_HMFUnfairLock
__ HMFoundation: _OBJC_CLASS_$_HMFVersion
__ HMFoundation: _OBJC_METACLASS_$_HMFObject
__ HMFoundation: _OBJC_METACLASS_$_HMFPairingIdentity
__ HMFoundation: __HMFPreconditionFailure
__ HMFoundation: ___HMFActivityScopeLeave
__ HMFoundation: _kDumpStateKeychainItemKey
__ HMFoundation: _randomDataWithLength
__ HomeKitMetrics: _OBJC_CLASS_$_HMMLogEvent
__ HomeKitMetrics: _OBJC_METACLASS_$_HMMLogEvent
__ IOKit: _IOAllowPowerChange
__ IOKit: _IODeregisterForSystemPower
__ IOKit: _IONotificationPortDestroy
__ IOKit: _IONotificationPortSetDispatchQueue
__ IOKit: _IORegisterForSystemPower
__ IOKit: _IOServiceClose
__ MobileBluetooth: _BTDeviceGetConnectedServices
__ MobileBluetooth: _BTDeviceGetDeviceId
__ MobileBluetooth: _BTLocalDeviceGetConnectable
__ MobileBluetooth: _BTLocalDeviceGetConnectedDevices
__ MobileBluetooth: _BTLocalDeviceGetDefault
__ MobileBluetooth: _BTLocalDeviceGetDiscoverable
__ MobileBluetooth: _BTLocalDeviceGetModulePower
__ MobileBluetooth: _BTLocalDeviceGetScanning
__ MobileBluetooth: _BTSessionAttachWithQueue
__ MobileBluetooth: _BTSessionDetachWithQueue
__ MobileWiFi: _WiFiManagerClientCreate
__ MobileWiFi: _WiFiManagerClientRemoveNetwork
__ MobileWiFi: _WiFiNetworkDisableAutoJoinUntilFirstUserJoin
__ MobileWiFi: _WiFiNetworkGetOperatingBand
__ NearField: _OBJC_CLASS_$_NFHardwareManager
__ Security: _SecItemAdd
__ Security: _SecItemCopyMatching
__ Security: _SecItemDelete
__ Security: _SecItemUpdate
__ Security: _SecRandomCopyBytes
__ Security: _kCKKSViewHome
__ Security: _kSOSViewHomeKit
__ Security: _kSecAttrAccessGroup
__ Security: _kSecAttrAccessible
__ Security: _kSecAttrAccessibleAlways
__ Security: _kSecAttrAccount
__ Security: _kSecAttrCreationDate
__ Security: _kSecAttrDescription
__ Security: _kSecAttrGeneric
__ Security: _kSecAttrIsInvisible
__ Security: _kSecAttrLabel
__ Security: _kSecAttrService
__ Security: _kSecAttrSyncViewHint
__ Security: _kSecAttrSynchronizable
__ Security: _kSecAttrSynchronizableAny
__ Security: _kSecAttrType
__ Security: _kSecClass
__ Security: _kSecClassGenericPassword
__ Security: _kSecMatchLimit
__ Security: _kSecMatchLimitAll
__ Security: _kSecRandomDefault
__ Security: _kSecReturnAttributes
__ Security: _kSecReturnData
__ Security: _kSecReturnPersistentRef
__ Security: _kSecUseTombstones
__ Security: _kSecValueData
__ Security: _kSecValuePersistentRef
__ SoftLinking: __sl_dlopen
__ WirelessProximity: _OBJC_CLASS_$_WPHomeKit
__ WirelessProximity: _WPHomeKitScanDutyCycle
__ WirelessProximity: _WPHomeKitScanOptionRange
__ WirelessProximity: _WPHomeKitScanOptionRetainDuplicates
__ libSystem.B.dylib: _CC_SHA512
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __DefaultRuneLocale
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___darwin_check_fd_set_overflow
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___maskrune
__ libSystem.B.dylib: ___memcpy_chk
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___stderrp
__ libSystem.B.dylib: ___stdoutp
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __xpc_type_dictionary
__ libSystem.B.dylib: __xpc_type_error
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _accept
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _arc4random_buf
__ libSystem.B.dylib: _bind
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _connect
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_queue_create_with_target$V2
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dispatch_walltime
__ libSystem.B.dylib: _exit
__ libSystem.B.dylib: _fcntl
__ libSystem.B.dylib: _fflush
__ libSystem.B.dylib: _fprintf
__ libSystem.B.dylib: _fputs
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _freeaddrinfo
__ libSystem.B.dylib: _gai_strerror
__ libSystem.B.dylib: _getaddrinfo
__ libSystem.B.dylib: _getpeername
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _getprogname
__ libSystem.B.dylib: _getsockname
__ libSystem.B.dylib: _getsockopt
__ libSystem.B.dylib: _gettimeofday
__ libSystem.B.dylib: _in6addr_any
__ libSystem.B.dylib: _inet_ntop
__ libSystem.B.dylib: _inet_pton
__ libSystem.B.dylib: _ioctl
__ libSystem.B.dylib: _listen
__ libSystem.B.dylib: _localtime
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memchr
__ libSystem.B.dylib: _memcmp
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memset_s
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_unfair_lock_lock_with_options
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _perror
__ libSystem.B.dylib: _pipe
__ libSystem.B.dylib: _read
__ libSystem.B.dylib: _realloc
__ libSystem.B.dylib: _recv
__ libSystem.B.dylib: _recvmsg
__ libSystem.B.dylib: _select
__ libSystem.B.dylib: _send
__ libSystem.B.dylib: _sendmsg
__ libSystem.B.dylib: _setsockopt
__ libSystem.B.dylib: _snprintf
__ libSystem.B.dylib: _socket
__ libSystem.B.dylib: _strerror
__ libSystem.B.dylib: _strftime
__ libSystem.B.dylib: _strlcpy
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _strnlen
__ libSystem.B.dylib: _strtol
__ libSystem.B.dylib: _vfprintf
__ libSystem.B.dylib: _vsnprintf
__ libSystem.B.dylib: _write
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_get_string
__ libSystem.B.dylib: _xpc_dictionary_set_string
__ libSystem.B.dylib: _xpc_get_type
__ libSystem.B.dylib: _xpc_set_event
__ libSystem.B.dylib: _xpc_set_event_stream_handler
__ libnetwork.dylib: __nw_parameters_configure_protocol_disable
__ libnetwork.dylib: _nw_browse_descriptor_create_bonjour_service
__ libnetwork.dylib: _nw_browse_descriptor_set_include_txt_record
__ libnetwork.dylib: _nw_browse_result_copy_endpoint
__ libnetwork.dylib: _nw_browse_result_copy_txt_record_object
__ libnetwork.dylib: _nw_browse_result_get_changes
__ libnetwork.dylib: _nw_browser_cancel
__ libnetwork.dylib: _nw_browser_create
__ libnetwork.dylib: _nw_browser_set_browse_results_changed_handler
__ libnetwork.dylib: _nw_browser_set_queue
__ libnetwork.dylib: _nw_browser_set_state_changed_handler
__ libnetwork.dylib: _nw_browser_start
__ libnetwork.dylib: _nw_connection_cancel
__ libnetwork.dylib: _nw_connection_copy_current_path
__ libnetwork.dylib: _nw_connection_create
__ libnetwork.dylib: _nw_connection_set_queue
__ libnetwork.dylib: _nw_connection_set_state_changed_handler
__ libnetwork.dylib: _nw_connection_start
__ libnetwork.dylib: _nw_endpoint_create_srv
__ libnetwork.dylib: _nw_endpoint_get_address
__ libnetwork.dylib: _nw_endpoint_get_bonjour_service_domain
__ libnetwork.dylib: _nw_endpoint_get_bonjour_service_name
__ libnetwork.dylib: _nw_endpoint_get_bonjour_service_type
__ libnetwork.dylib: _nw_endpoint_get_type
__ libnetwork.dylib: _nw_error_copy_cf_error
__ libnetwork.dylib: _nw_interface_create_with_name
__ libnetwork.dylib: _nw_parameters_create_secure_udp
__ libnetwork.dylib: _nw_parameters_prohibit_interface
__ libnetwork.dylib: _nw_path_copy_endpoint
__ libnetwork.dylib: _nw_txt_record_access_bytes
__ libnetwork.dylib: _nw_txt_record_apply
__ libnetwork.dylib: _nw_txt_record_get_key_count
__ libnetwork.dylib: _nw_txt_record_is_dictionary
__ libnetwork.dylib: _nw_udp_options_set_no_metadata
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
HAPKeyBag : NSObject <HMFLogging>
 @property  NSString *accessoryIdentifier
 @property  NSArray *availableKeysToTry
 @property  <HAPKeyStore> *keyStore
 @property  long long currentIndexInBag
 @property  BOOL empty
 @property  unsigned long totalIdentities
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPKeyBag logCategory]

  // instance methods
  -[HAPKeyBag currentIdentity]
  -[HAPKeyBag isEmpty]
  -[HAPKeyBag .cxx_destruct]
  -[HAPKeyBag accessoryIdentifier]
  -[HAPKeyBag setAccessoryIdentifier:]
  -[HAPKeyBag keyStore]
  -[HAPKeyBag _populateBagWithPairingIdentitiesForAccessory:fromStore:]
  -[HAPKeyBag initWithAccessoryIdentifier:keyStore:controllerKeyList:]
  -[HAPKeyBag availableKeysToTry]
  -[HAPKeyBag currentIndexInBag]
  -[HAPKeyBag setCurrentIndexInBag:]
  -[HAPKeyBag isValidIndex:]
  -[HAPKeyBag initWithAccessoryIdentifier:keyStore:]
  -[HAPKeyBag refreshKeys]
  -[HAPKeyBag getCurrentIndexInBag]
  -[HAPKeyBag nextIdentity]
  -[HAPKeyBag totalIdentities]
  -[HAPKeyBag setAvailableKeysToTry:]


HAPAuthSession : HMFObject <HMFLogging>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  unsigned long currentState
 @property  unsigned char currentTID
 @property  NSNumber *instanceId
 @property  NSData *token1
 @property  NSData *token2
 @property  NSUUID *provisionUUID
 @property  <HAPAuthSessionDelegate> *delegate
 @property  long long role
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPAuthSession logCategory]

  // instance methods
  -[HAPAuthSession resetSession]
  -[HAPAuthSession setToken2:]
  -[HAPAuthSession provisionUUID]
  -[HAPAuthSession .cxx_destruct]
  -[HAPAuthSession _handleTokenUpdateResponse:withHeader:]
  -[HAPAuthSession setCurrentTID:]
  -[HAPAuthSession setToken1:]
  -[HAPAuthSession _handleAuthExchangeData:withHeader:]
  -[HAPAuthSession _sendTokenRequest]
  -[HAPAuthSession token1]
  -[HAPAuthSession handleAuthExchangeData:withHeader:]
  -[HAPAuthSession initWithRole:instanceId:delegate:]
  -[HAPAuthSession setProvisionUUID:]
  -[HAPAuthSession currentState]
  -[HAPAuthSession sendTokenUpdateRequest:]
  -[HAPAuthSession role]
  -[HAPAuthSession workQueue]
  -[HAPAuthSession setInstanceId:]
  -[HAPAuthSession delegate]
  -[HAPAuthSession _handleTokenResponse:withHeader:]
  -[HAPAuthSession _resetSession]
  -[HAPAuthSession continueAuthAfterValidation:]
  -[HAPAuthSession instanceId]
  -[HAPAuthSession _reportAuthFailure]
  -[HAPAuthSession token2]
  -[HAPAuthSession currentTID]
  -[HAPAuthSession getToken:uuid:]
  -[HAPAuthSession setCurrentState:]
  -[HAPAuthSession _sendTokenUpdateRequest:]


HAPMetricsDispatcher : HMFObject
 @property  <HMMLogEventSubmitting> *logDispatcher

  // class methods
  +[HAPMetricsDispatcher sharedInstance]

  // instance methods
  -[HAPMetricsDispatcher .cxx_destruct]
  -[HAPMetricsDispatcher submitLogEvent:]
  -[HAPMetricsDispatcher setLogDispatcher:]
  -[HAPMetricsDispatcher logDispatcher]


HAPBLEPeripheralInfo : HMFObject <NSSecureCoding>
 @property  unsigned long advertisedProtocolVersion
 @property  unsigned long previousProtocolVersion
 @property  unsigned long resumeSessionId
 @property  NSNumber *stateNumber
 @property  NSString *accessoryName
 @property  NSData *broadcastKey
 @property  double keyUpdatedTime
 @property  NSNumber *keyUpdatedStateNumber
 @property  NSUUID *peripheralUUID
 @property  double lastSeen
 @property  NSNumber *statusFlags
 @property  NSNumber *configNumber
 @property  NSNumber *categoryIdentifier

  // class methods
  +[HAPBLEPeripheralInfo supportsSecureCoding]

  // instance methods
  -[HAPBLEPeripheralInfo statusFlags]
  -[HAPBLEPeripheralInfo initWithCoder:]
  -[HAPBLEPeripheralInfo .cxx_destruct]
  -[HAPBLEPeripheralInfo isEqual:]
  -[HAPBLEPeripheralInfo accessoryName]
  -[HAPBLEPeripheralInfo lastSeen]
  -[HAPBLEPeripheralInfo categoryIdentifier]
  -[HAPBLEPeripheralInfo encodeWithCoder:]
  -[HAPBLEPeripheralInfo setAccessoryName:]
  -[HAPBLEPeripheralInfo peripheralUUID]
  -[HAPBLEPeripheralInfo stateNumber]
  -[HAPBLEPeripheralInfo setStateNumber:]
  -[HAPBLEPeripheralInfo configNumber]
  -[HAPBLEPeripheralInfo broadcastKey]
  -[HAPBLEPeripheralInfo keyUpdatedTime]
  -[HAPBLEPeripheralInfo keyUpdatedStateNumber]
  -[HAPBLEPeripheralInfo setBroadcastKey:]
  -[HAPBLEPeripheralInfo setKeyUpdatedStateNumber:]
  -[HAPBLEPeripheralInfo setKeyUpdatedTime:]
  -[HAPBLEPeripheralInfo advertisedProtocolVersion]
  -[HAPBLEPeripheralInfo setPreviousProtocolVersion:]
  -[HAPBLEPeripheralInfo setAdvertisedProtocolVersion:]
  -[HAPBLEPeripheralInfo setResumeSessionId:]
  -[HAPBLEPeripheralInfo previousProtocolVersion]
  -[HAPBLEPeripheralInfo resumeSessionId]
  -[HAPBLEPeripheralInfo initWithPeripheralInfo:advertisedProtocolVersion:previousProtocolVersion:resumeSessionId:lastSeen:statusFlags:stateNumber:configNumber:categoryIdentifier:accessoryName:]
  -[HAPBLEPeripheralInfo updateProtocolVersion:]
  -[HAPBLEPeripheralInfo updateResumeSessionId:]
  -[HAPBLEPeripheralInfo updateStateNumber:]
  -[HAPBLEPeripheralInfo saveBroadcastKey:keyUpdatedStateNumber:updatedTime:]
  -[HAPBLEPeripheralInfo updateBroadcastKey:]
  -[HAPBLEPeripheralInfo updateAccessoryName:]
  -[HAPBLEPeripheralInfo resetBroadcastKeyConfig]


HAPBLECharacteristicCache : HMFObject <NSSecureCoding>
 @property  unsigned long characteristicProperties
 @property  HAPCharacteristicMetadata *characteristicMetadata
 @property  NSUUID *characteristicUUID
 @property  NSNumber *characteristicInstanceId

  // class methods
  +[HAPBLECharacteristicCache supportsSecureCoding]

  // instance methods
  -[HAPBLECharacteristicCache initWithCoder:]
  -[HAPBLECharacteristicCache .cxx_destruct]
  -[HAPBLECharacteristicCache isEqual:]
  -[HAPBLECharacteristicCache encodeWithCoder:]
  -[HAPBLECharacteristicCache characteristicMetadata]
  -[HAPBLECharacteristicCache characteristicUUID]
  -[HAPBLECharacteristicCache characteristicProperties]
  -[HAPBLECharacteristicCache setCharacteristicProperties:]
  -[HAPBLECharacteristicCache characteristicInstanceId]
  -[HAPBLECharacteristicCache setCharacteristicMetadata:]
  -[HAPBLECharacteristicCache initWithCharacteristicUUID:instanceId:characteristicProperties:characteristicMetadata:]
  -[HAPBLECharacteristicCache updateWithCharacteristic:]


HAPBLEServiceCache : HMFObject <NSSecureCoding>
 @property  unsigned long serviceInstanceOrder
 @property  unsigned long serviceProperties
 @property  NSArray *linkedServices
 @property  NSMutableArray *cachedCharacteristics
 @property  NSUUID *serviceUUID
 @property  NSNumber *serviceInstanceId

  // class methods
  +[HAPBLEServiceCache supportsSecureCoding]

  // instance methods
  -[HAPBLEServiceCache serviceUUID]
  -[HAPBLEServiceCache serviceProperties]
  -[HAPBLEServiceCache initWithCoder:]
  -[HAPBLEServiceCache .cxx_destruct]
  -[HAPBLEServiceCache setServiceProperties:]
  -[HAPBLEServiceCache isEqual:]
  -[HAPBLEServiceCache linkedServices]
  -[HAPBLEServiceCache setLinkedServices:]
  -[HAPBLEServiceCache updateWithService:]
  -[HAPBLEServiceCache encodeWithCoder:]
  -[HAPBLEServiceCache updateWithCharacteristic:]
  -[HAPBLEServiceCache serviceInstanceId]
  -[HAPBLEServiceCache serviceInstanceOrder]
  -[HAPBLEServiceCache setServiceInstanceOrder:]
  -[HAPBLEServiceCache cachedCharacteristics]
  -[HAPBLEServiceCache setCachedCharacteristics:]
  -[HAPBLEServiceCache initWithServiceUUID:instanceId:instanceOrder:serviceProperties:linkedServices:]


HAPBLEAccessoryCache : HMFObject <NSSecureCoding>
 @property  HAPBLEPeripheralInfo *peripheralInfo
 @property  @? saveBlock
 @property  NSNumber *metadataVersion
 @property  NSString *pairingIdentifier
 @property  NSMutableArray *cachedServices
 @property  NSNumber *lastKeyBagIdentityIndexFailingPV

  // class methods
  +[HAPBLEAccessoryCache supportsSecureCoding]

  // instance methods
  -[HAPBLEAccessoryCache initWithCoder:]
  -[HAPBLEAccessoryCache save]
  -[HAPBLEAccessoryCache metadataVersion]
  -[HAPBLEAccessoryCache .cxx_destruct]
  -[HAPBLEAccessoryCache isEqual:]
  -[HAPBLEAccessoryCache pairingIdentifier]
  -[HAPBLEAccessoryCache updateWithService:]
  -[HAPBLEAccessoryCache encodeWithCoder:]
  -[HAPBLEAccessoryCache peripheralInfo]
  -[HAPBLEAccessoryCache setPeripheralInfo:]
  -[HAPBLEAccessoryCache cachedServices]
  -[HAPBLEAccessoryCache lastKeyBagIdentityIndexFailingPV]
  -[HAPBLEAccessoryCache saveBlock]
  -[HAPBLEAccessoryCache initWithPairingIdentifier:saveBlock:]
  -[HAPBLEAccessoryCache updateWithPeripheralInfo:]
  -[HAPBLEAccessoryCache getCachedServiceWithUUID:]
  -[HAPBLEAccessoryCache setLastKeyBagIdentityIndexFailingPV:]
  -[HAPBLEAccessoryCache updateCurrentPairingIdentityIndexIfNeededForKeyBag:]
  -[HAPBLEAccessoryCache setSaveBlock:]


HAPBTLEControlPacket : HMFObject
 @property  unsigned char type
 @property  HAPBTLETransactionIdentifier *transactionIdentifier
 @property  NSData *payload
 @property  BOOL continuationPacket

  // class methods
  +[HAPBTLEControlPacket shortDescription]
  +[HAPBTLEControlPacket packetWithSerializedData:error:]

  // instance methods
  -[HAPBTLEControlPacket payload]
  -[HAPBTLEControlPacket .cxx_destruct]
  -[HAPBTLEControlPacket descriptionWithPointer:]
  -[HAPBTLEControlPacket init]
  -[HAPBTLEControlPacket transactionIdentifier]
  -[HAPBTLEControlPacket serialize]
  -[HAPBTLEControlPacket type]
  -[HAPBTLEControlPacket shortDescription]
  -[HAPBTLEControlPacket initWithControlType:transactionIdentifier:continuationPacket:packetPayload:maximumLength:]
  -[HAPBTLEControlPacket isContinuationPacket]


HAP2AccessoryServerCoordinator : HAP2LoggingObject <HAP2AccessoryServerDiscoveryDelegate, HAP2AccessoryServerCoordinatorPrivate, HAP2AccessoryServerCoordinator>
 @property  <HAP2AccessoryServerBrowserPrivate> *browser
 @property  <HAP2AccessoryServerDiscovery> *discovery
 @property  <HAP2AccessoryServerPairingFactory> *pairingFactory
 @property  <HAP2AccessoryServerTransportFactory> *transportFactory
 @property  <HAP2AccessoryServerSecureTransportFactory> *secureTransportFactory
 @property  <HAP2AccessoryServerEncodingFactory> *encodingFactory
 @property  <HAP2AccessoryServerControllerFactory> *controllerFactory
 @property  HAP2SerializedOperationQueue *operationQueue
 @property  NSOperationQueue *localOperationQueue
 @property  HAP2PropertyLock *propertyLock
 @property  BOOL discovering
 @property  BOOL startDiscoveringPending
 @property  BOOL stopDiscoveringPending
 @property  NSMutableDictionary *discoveredAccessoryServers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <HAP2AccessoryServerCoordinatorDelegate> *delegate

  // instance methods
  -[HAP2AccessoryServerCoordinator stopDiscovering]
  -[HAP2AccessoryServerCoordinator startDiscovering]
  -[HAP2AccessoryServerCoordinator isDiscovering]
  -[HAP2AccessoryServerCoordinator _startDiscovering]
  -[HAP2AccessoryServerCoordinator propertyLock]
  -[HAP2AccessoryServerCoordinator _stopDiscovering]
  -[HAP2AccessoryServerCoordinator discovery]
  -[HAP2AccessoryServerCoordinator setDiscovering:]
  -[HAP2AccessoryServerCoordinator operationQueue]
  -[HAP2AccessoryServerCoordinator discoveredAccessoryServers]
  -[HAP2AccessoryServerCoordinator .cxx_destruct]
  -[HAP2AccessoryServerCoordinator browser]
  -[HAP2AccessoryServerCoordinator setDelegate:]
  -[HAP2AccessoryServerCoordinator delegate]
  -[HAP2AccessoryServerCoordinator transportFactory]
  -[HAP2AccessoryServerCoordinator _didDiscoverAccessory:completion:]
  -[HAP2AccessoryServerCoordinator localOperationQueue]
  -[HAP2AccessoryServerCoordinator _didStartDiscoveringWithError:]
  -[HAP2AccessoryServerCoordinator _didStopDiscoveringWithError:]
  -[HAP2AccessoryServerCoordinator _didLoseAccessory:error:]
  -[HAP2AccessoryServerCoordinator isStartDiscoveringPending]
  -[HAP2AccessoryServerCoordinator setStartDiscoveringPending:]
  -[HAP2AccessoryServerCoordinator isStopDiscoveringPending]
  -[HAP2AccessoryServerCoordinator setStopDiscoveringPending:]
  -[HAP2AccessoryServerCoordinator _didDeterminePairingStateForAccessory:isPaired:completion:]
  -[HAP2AccessoryServerCoordinator _didDiscoverPairedAccessory:transport:operationQueue:completion:]
  -[HAP2AccessoryServerCoordinator _didDiscoverUnpairedAccessory:transport:operationQueue:completion:]
  -[HAP2AccessoryServerCoordinator _createUnpairedAccessoryServerWithAccessoryInfo:transport:operationQueue:]
  -[HAP2AccessoryServerCoordinator _createPairedAccessoryServerWithAccessoryInfo:transport:operationQueue:]
  -[HAP2AccessoryServerCoordinator _createMetadataForAccessoryServerWithAccessoryInfo:]
  -[HAP2AccessoryServerCoordinator encodingFactory]
  -[HAP2AccessoryServerCoordinator secureTransportFactory]
  -[HAP2AccessoryServerCoordinator controllerFactory]
  -[HAP2AccessoryServerCoordinator pairingFactory]
  -[HAP2AccessoryServerCoordinator discovery:didDiscoverAccessory:]
  -[HAP2AccessoryServerCoordinator discovery:didStartDiscoveringWithError:]
  -[HAP2AccessoryServerCoordinator discovery:didStopDiscoveringWithError:]
  -[HAP2AccessoryServerCoordinator discovery:didLoseAccessory:error:]
  -[HAP2AccessoryServerCoordinator setBrowser:operationQueue:]
  -[HAP2AccessoryServerCoordinator resurfaceDiscoveryInfoForDeviceID:]
  -[HAP2AccessoryServerCoordinator initWithDiscovery:pairingFactory:transportFactory:secureTransportFactory:encodingFactory:controllerFactory:]


HAP2AccessoryServerControllerFactory : HAP2LoggingObject <HAP2AccessoryServerControllerFactory>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HAP2AccessoryServerControllerFactory createControllerWithEncoding:secureTransport:operationQueue:]


HAP2AccessoryServerMetadata : HAP2LoggingObject <HAP2AccessoryServerMetadata>
 @property  HAPDeviceID *deviceID
 @property  BOOL hasPairings
 @property  HMFVersion *protocolVersion
 @property  NSString *name
 @property  NSString *model
 @property  unsigned long category
 @property  unsigned short stateNumber
 @property  unsigned short configNumber
 @property  NSData *setupHash
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAP2AccessoryServerMetadata new]

  // instance methods
  -[HAP2AccessoryServerMetadata name]
  -[HAP2AccessoryServerMetadata protocolVersion]
  -[HAP2AccessoryServerMetadata .cxx_destruct]
  -[HAP2AccessoryServerMetadata deviceID]
  -[HAP2AccessoryServerMetadata init]
  -[HAP2AccessoryServerMetadata model]
  -[HAP2AccessoryServerMetadata category]
  -[HAP2AccessoryServerMetadata setupHash]
  -[HAP2AccessoryServerMetadata stateNumber]
  -[HAP2AccessoryServerMetadata configNumber]
  -[HAP2AccessoryServerMetadata hasPairings]
  -[HAP2AccessoryServerMetadata initWithDeviceID:hasPairings:protocolVersion:name:model:category:stateNumber:configNumber:setupHash:]


HAP2PropertyLock : HAP2Lock
  // class methods
  +[HAP2PropertyLock lockWithName:]

  // instance methods
  -[HAP2PropertyLock performBlock:]
  -[HAP2PropertyLock performReadingBlock:]
  -[HAP2PropertyLock performWritingBlock:]


HAPDeviceID : NSObject <NSCopying, NSSecureCoding>
 @property  NSData *data
 @property  NSString *deviceIDString

  // class methods
  +[HAPDeviceID supportsSecureCoding]

  // instance methods
  -[HAPDeviceID initWithCoder:]
  -[HAPDeviceID deviceIDString]
  -[HAPDeviceID .cxx_destruct]
  -[HAPDeviceID data]
  -[HAPDeviceID init]
  -[HAPDeviceID isEqual:]
  -[HAPDeviceID initWithDeviceIDString:]
  -[HAPDeviceID copyWithZone:]
  -[HAPDeviceID initWithDeviceIDData:]
  -[HAPDeviceID encodeWithCoder:]
  -[HAPDeviceID isEqualToDeviceID:]


HAPDataValueTransformer : HAPValueTransformer
  // class methods
  +[HAPDataValueTransformer initialize]
  +[HAPDataValueTransformer expectedTransformedClassForFormat:]
  +[HAPDataValueTransformer isValidFormat:]
  +[HAPDataValueTransformer defaultDataValueTransformer]

  // instance methods
  -[HAPDataValueTransformer transformedValue:format:error:]
  -[HAPDataValueTransformer reverseTransformedValue:format:error:]


HAPAccessoryServerIP : HAPAccessoryServer <HAPAccessoryServerMetricProtocol, HAPHTTPClientDelegate, HAPHTTPClientDebugDelegate, HMFTimerDelegate, HAPAuthSessionDelegate, HMFNetMonitorDelegate, HAPWACAccessoryClientDelegate>
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long metricHAPIPInvalidationCount
 @property  unsigned long metricHAPIPHTTPEventsCount
 @property  unsigned long metricHAPIPHTTPRequestsCount
 @property  unsigned long metricHAPIPHTTPResponsesCount
 @property  double minimumReachabilityPingInterval
 @property  NSDate *reachabilityStartTime
 @property  NSDictionary *bonjourDeviceInfo
 @property  BOOL hasUpdatedBonjour
 @property  HAPAccessoryServerBrowserIP *browser
 @property  NSArray *ipServices
 @property  NSMutableArray *queuedOperations
 @property  HAPAccessory *primaryAccessoryForServer
 @property  NSString *model
 @property  NSString *sourceVersion
 @property  unsigned long statusFlags
 @property  HAPAuthSession *authSession
 @property  HAPAccessoryProtocolInfo *authenticatedProtocolInfo
 @property  BOOL authenticated
 @property  @? pairVerifyCompletionBlock
 @property  @? netServiceResolveCompletionBlock
 @property  BOOL establishingSecureConnection
 @property  BOOL hasAttributeDatabase
 @property  BOOL econnresetRetryInProgress
 @property  HMFBlockOperation *pairOperation
 @property  NSOperationQueue *clientOperationQueue
 @property  BOOL wacAccessory
 @property  BOOL wacComplete
 @property  BOOL wacLegacy
 @property  BOOL preSoftAuthWacStarted
 @property  BOOL postSoftAuthWacStarted
 @property  NSData *ownershipToken
 @property  BOOL invalidated
 @property  HAPAccessoryPairingRequest *pairingRequest
 @property  HAPWACAccessoryClient *hapWACAccessoryClient
 @property  BOOL continuingLegacyWACpairing
 @property  BOOL wacStarted
 @property  HMFTimer *bonjourEventTimer
 @property  BOOL hasStartedPairing
 @property  HMFNetMonitor *networkMonitor
 @property  BOOL pairingRequestPending
 @property  BOOL tokenValidationPending
 @property  BOOL handlingInvalidSetupCode
 @property  int cancelPairingErr
 @property  NSObject<OS_dispatch_queue> *reachabilityQueue
 @property  HMFTimer *reachabilityEventTimer
 @property  HMFTimer *connectionIdleTimer
 @property  double disconnectOnIdleTimeout
 @property  BOOL bonjourDiscoveryPending
 @property  unsigned long abruptDisconnectionCounter
 @property  HAPHTTPClient *httpClient
 @property  HAPWACAccessory *hapWACAccessory
 @property  BOOL wacNeeded
 @property  NSData *token
 @property  HMFNetAddress *peerAddress
 @property  HMFNetAddress *peerAddressEx
 @property  NSString *peerEndpointDescription
 @property  NSString *identifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPAccessoryServerIP initialize]
  +[HAPAccessoryServerIP sharedPairOperationQueue]

  // instance methods
  -[HAPAccessoryServerIP networkMonitor]
  -[HAPAccessoryServerIP setBonjourEventTimer:]
  -[HAPAccessoryServerIP isPaired]
  -[HAPAccessoryServerIP pairOperation]
  -[HAPAccessoryServerIP isPostSoftAuthWacStarted]
  -[HAPAccessoryServerIP httpClient:didReceiveHTTPMessageWithHeaders:body:]
  -[HAPAccessoryServerIP initWithBonjourDeviceInfo:keyStore:browser:]
  -[HAPAccessoryServerIP invalidateWithCompletionHandler:]
  -[HAPAccessoryServerIP peerAddress]
  -[HAPAccessoryServerIP sourceVersion]
  -[HAPAccessoryServerIP setIpServices:]
  -[HAPAccessoryServerIP statusFlags]
  -[HAPAccessoryServerIP setBrowser:]
  -[HAPAccessoryServerIP validateReachabilityTimer]
  -[HAPAccessoryServerIP disconnect]
  -[HAPAccessoryServerIP _getReachabilityTimeoutValue]
  -[HAPAccessoryServerIP _submitStateNumberChangeEvent:]
  -[HAPAccessoryServerIP setToken:]
  -[HAPAccessoryServerIP authSession:confirmUUID:token:]
  -[HAPAccessoryServerIP minimumReachabilityPingInterval]
  -[HAPAccessoryServerIP reachabilityQueue]
  -[HAPAccessoryServerIP services]
  -[HAPAccessoryServerIP cancelPairingErr]
  -[HAPAccessoryServerIP _doReachabilityWithError:forAccessory:]
  -[HAPAccessoryServerIP timerDidFire:]
  -[HAPAccessoryServerIP httpClient:willSendHTTPMessageWithHeaders:body:]
  -[HAPAccessoryServerIP updateWithBonjourDeviceInfo:]
  -[HAPAccessoryServerIP continuePairingAfterAuthPrompt]
  -[HAPAccessoryServerIP reachabilityStartTime]
  -[HAPAccessoryServerIP validatePairingAuthMethod:]
  -[HAPAccessoryServerIP authenticatedProtocolInfo]
  -[HAPAccessoryServerIP setAuthenticatedProtocolInfo:]
  -[HAPAccessoryServerIP invokePairVerifyCompletionBlock:]
  -[HAPAccessoryServerIP _performTimedWriteValues:timeout:queue:completionHandler:]
  -[HAPAccessoryServerIP setHasStartedPairing:]
  -[HAPAccessoryServerIP _continuePairingWithSetupCode:]
  -[HAPAccessoryServerIP _sendRemovePairingWithData:queue:completion:]
  -[HAPAccessoryServerIP metricHAPIPHTTPRequestsCount]
  -[HAPAccessoryServerIP setPairingRequest:]
  -[HAPAccessoryServerIP setSourceVersion:]
  -[HAPAccessoryServerIP _doBonjourReconfirm]
  -[HAPAccessoryServerIP _promptForSetupCodeWithFlags:delaySeconds:pairingFlags:isWAC:]
  -[HAPAccessoryServerIP startPing]
  -[HAPAccessoryServerIP tearDownSessionOnAuthCompletion]
  -[HAPAccessoryServerIP hapWACAccessoryClient:wacProgress:]
  -[HAPAccessoryServerIP _readCharacteristicValues:timeout:queue:completionHandler:]
  -[HAPAccessoryServerIP setAuthenticated:]
  -[HAPAccessoryServerIP isSessionEstablised]
  -[HAPAccessoryServerIP removeActiveSession:]
  -[HAPAccessoryServerIP tryPairingPassword:error:]
  -[HAPAccessoryServerIP _reset]
  -[HAPAccessoryServerIP _handleConnectionIdleTimeout]
  -[HAPAccessoryServerIP setHttpClient:]
  -[HAPAccessoryServerIP _kickConnectionIdleTimer]
  -[HAPAccessoryServerIP _handlePrepareWriteResponseObject:type:prepareIdentifier:httpStatus:error:requestTuples:timeout:queue:originalCompletion:completion:]
  -[HAPAccessoryServerIP startPairingWithRequest:]
  -[HAPAccessoryServerIP _handleReadECONNRESETError:readCharacteristics:responses:timeout:queue:completionHandler:]
  -[HAPAccessoryServerIP setMetricHAPIPHTTPRequestsCount:]
  -[HAPAccessoryServerIP _writeCharacteristicValues:timeout:queue:completionHandler:]
  -[HAPAccessoryServerIP enableEvents:forCharacteristics:withCompletionHandler:queue:]
  -[HAPAccessoryServerIP _joinAccessoryNetworkWithCompletion:]
  -[HAPAccessoryServerIP setPrimaryAccessoryForServer:]
  -[HAPAccessoryServerIP setTokenValidationPending:]
  -[HAPAccessoryServerIP .cxx_destruct]
  -[HAPAccessoryServerIP hasBonjourDeviceInfo]
  -[HAPAccessoryServerIP _pairSetupTryPassword:]
  -[HAPAccessoryServerIP setNetServiceResolveCompletionBlock:]
  -[HAPAccessoryServerIP stopPairingWithError:]
  -[HAPAccessoryServerIP writeCharacteristicValues:timeout:completionQueue:completionHandler:]
  -[HAPAccessoryServerIP _startConnectionIdleTimer]
  -[HAPAccessoryServerIP isWacLegacy]
  -[HAPAccessoryServerIP authenticateAccessory]
  -[HAPAccessoryServerIP setMetricHAPIPHTTPResponsesCount:]
  -[HAPAccessoryServerIP _tearDownSessionAndReconfirm]
  -[HAPAccessoryServerIP econnresetRetryInProgress]
  -[HAPAccessoryServerIP bonjourDeviceInfo]
  -[HAPAccessoryServerIP isContinuingLegacyWACpairing]
  -[HAPAccessoryServerIP hasAttributeDatabase]
  -[HAPAccessoryServerIP browser]
  -[HAPAccessoryServerIP _handleReadResponseObject:type:httpStatus:error:characteristics:completion:]
  -[HAPAccessoryServerIP setReachabilityStartTime:]
  -[HAPAccessoryServerIP _tearDownSessionAndReconfirmWithError:]
  -[HAPAccessoryServerIP _suspendConnectionIdleTimer]
  -[HAPAccessoryServerIP _pairSetupStartWithConsentRequired:]
  -[HAPAccessoryServerIP _stopReachability]
  -[HAPAccessoryServerIP metricHAPIPHTTPResponsesCount]
  -[HAPAccessoryServerIP networkMonitorIsUnreachable:]
  -[HAPAccessoryServerIP _updateAccessories:]
  -[HAPAccessoryServerIP incrementHAPIPHTTPResponsesCount]
  -[HAPAccessoryServerIP pairSetupStartSoftAuthWAC]
  -[HAPAccessoryServerIP peerEndpointDescription]
  -[HAPAccessoryServerIP _insertReadCharacteristicValues:timeout:queue:completionHandler:]
  -[HAPAccessoryServerIP incrementHAPIPHTTPRequestsCount]
  -[HAPAccessoryServerIP isHandlingInvalidSetupCode]
  -[HAPAccessoryServerIP netServiceResolveCompletionBlock]
  -[HAPAccessoryServerIP _parseTXTRecordDictionary:]
  -[HAPAccessoryServerIP _removePairingWithIdentifier:publicKey:queue:completion:]
  -[HAPAccessoryServerIP hapWACAccessoryClient:setBonjourInfo:]
  -[HAPAccessoryServerIP setStatusFlags:]
  -[HAPAccessoryServerIP _accessoryDidBecomeUnreachable:]
  -[HAPAccessoryServerIP pairVerifyCompletionBlock]
  -[HAPAccessoryServerIP linkType]
  -[HAPAccessoryServerIP setHasAttributeDatabase:]
  -[HAPAccessoryServerIP initWithHAPWACAccessory:keystore:browser:]
  -[HAPAccessoryServerIP setContinuingLegacyWACpairing:]
  -[HAPAccessoryServerIP _doPollForAccessory:]
  -[HAPAccessoryServerIP _processEvent:matchedCharacteristic:]
  -[HAPAccessoryServerIP setBonjourDiscoveryPending:]
  -[HAPAccessoryServerIP authSession:authComplete:]
  -[HAPAccessoryServerIP _delegateRespondsToSelector:]
  -[HAPAccessoryServerIP _isAccessoryPublicKeyPresent:registeredWithHomeKit:]
  -[HAPAccessoryServerIP setBonjourDeviceInfo:]
  -[HAPAccessoryServerIP handleHTTPClientUnavailableErrorWithCompletion:serializationType:]
  -[HAPAccessoryServerIP disconnectOnIdleUpdated]
  -[HAPAccessoryServerIP _continuePairingUsingWAC]
  -[HAPAccessoryServerIP setDisconnectOnIdleTimeout:]
  -[HAPAccessoryServerIP handleUpdatesForCharacteristics:stateNumber:]
  -[HAPAccessoryServerIP disconnectOnIdleTimeout]
  -[HAPAccessoryServerIP setPairOperation:]
  -[HAPAccessoryServerIP authenticated]
  -[HAPAccessoryServerIP _handleWriteResponseObject:type:httpStatus:error:requestTuples:completion:]
  -[HAPAccessoryServerIP initWithKeyStore:browser:]
  -[HAPAccessoryServerIP peerAddressEx]
  -[HAPAccessoryServerIP setMinimumReachabilityPingInterval:]
  -[HAPAccessoryServerIP identifyWithCompletion:]
  -[HAPAccessoryServerIP isEstablishingSecureConnection]
  -[HAPAccessoryServerIP __registerForInternalCharacteristicNotifications]
  -[HAPAccessoryServerIP httpClient:didReceiveEvent:]
  -[HAPAccessoryServerIP _notifyDelegatesPairingStopped:]
  -[HAPAccessoryServerIP setInvalidated:]
  -[HAPAccessoryServerIP setReachabilityEventTimer:]
  -[HAPAccessoryServerIP setHapWACAccessoryClient:]
  -[HAPAccessoryServerIP listPairingsWithCompletionQueue:completionHandler:]
  -[HAPAccessoryServerIP removePairingForCurrentControllerOnQueue:completion:]
  -[HAPAccessoryServerIP _validateProtocolInfo:]
  -[HAPAccessoryServerIP _continuePairingAfterWAC:]
  -[HAPAccessoryServerIP _handleMFiCertValidation]
  -[HAPAccessoryServerIP _startReachability]
  -[HAPAccessoryServerIP readAndResetHAPMetrics:]
  -[HAPAccessoryServerIP _validateAuthChallengeResponse:expectedTID:error:]
  -[HAPAccessoryServerIP setWacLegacy:]
  -[HAPAccessoryServerIP authSession:validateUUID:token:]
  -[HAPAccessoryServerIP _skipReconfirm]
  -[HAPAccessoryServerIP _ensurePairingSessionIsInitializedWithType:]
  -[HAPAccessoryServerIP _tearDownSession]
  -[HAPAccessoryServerIP _updateProtocolVersionFromPrimaryAccessory:]
  -[HAPAccessoryServerIP _indicateSessionActivityWithReason:]
  -[HAPAccessoryServerIP metricHAPIPHTTPEventsCount]
  -[HAPAccessoryServerIP requestResource:queue:completionHandler:]
  -[HAPAccessoryServerIP _insertWriteCharacteristicValues:timeout:queue:withCompletionHandler:]
  -[HAPAccessoryServerIP _queuedReadOperationBlock:timeout:queue:completionHandler:]
  -[HAPAccessoryServerIP isWacAccessory]
  -[HAPAccessoryServerIP isWacNeeded]
  -[HAPAccessoryServerIP queuedOperations]
  -[HAPAccessoryServerIP httpClient]
  -[HAPAccessoryServerIP getAccessoryInfo:]
  -[HAPAccessoryServerIP bonjourEventTimer]
  -[HAPAccessoryServerIP metricHAPIPInvalidationCount]
  -[HAPAccessoryServerIP setHasUpdatedBonjour:]
  -[HAPAccessoryServerIP _notifyDelegateOfPairingProgress:]
  -[HAPAccessoryServerIP _tearDownWAC]
  -[HAPAccessoryServerIP incrementHAPIPInvalidationCount]
  -[HAPAccessoryServerIP pairingRequest]
  -[HAPAccessoryServerIP processPendingBonjourRemoveEvents]
  -[HAPAccessoryServerIP setPairVerifyCompletionBlock:]
  -[HAPAccessoryServerIP _handlePairSetupCompletionWithData:]
  -[HAPAccessoryServerIP sendPUTRequestToURL:request:serializationType:timeout:completionHandler:]
  -[HAPAccessoryServerIP token]
  -[HAPAccessoryServerIP startReprovisioningWithPairingRequest:]
  -[HAPAccessoryServerIP reconfirm]
  -[HAPAccessoryServerIP discoverAccessories]
  -[HAPAccessoryServerIP _continuePairingAfterConfirmingSecureWAC:]
  -[HAPAccessoryServerIP connectionIdleTimer]
  -[HAPAccessoryServerIP resetPostSoftAuthWAC]
  -[HAPAccessoryServerIP _notifyDelegateOfDiscoveryFailureWithError:]
  -[HAPAccessoryServerIP _performWriteValues:timeout:queue:completionHandler:]
  -[HAPAccessoryServerIP model]
  -[HAPAccessoryServerIP hapWACAccessoryClient]
  -[HAPAccessoryServerIP _handlePairingsResponseObject:type:httpStatus:httpError:removeRequest:completionQueue:completionBlock:]
  -[HAPAccessoryServerIP _queueListPairingWithCompletionQueue:completionHandler:]
  -[HAPAccessoryServerIP setConnectionIdleTimer:]
  -[HAPAccessoryServerIP continuePairingUsingWAC]
  -[HAPAccessoryServerIP setEstablishingSecureConnection:]
  -[HAPAccessoryServerIP _getReachabilityTimeoutValueWithSleepInterval:]
  -[HAPAccessoryServerIP _listPairingsWithCompletionQueue:completionHandler:]
  -[HAPAccessoryServerIP addPairing:completionQueue:completionHandler:]
  -[HAPAccessoryServerIP updateWithHAPWACAccessory:]
  -[HAPAccessoryServerIP _handlePairSetupAfterM4Callback]
  -[HAPAccessoryServerIP _notifyDelegatesOfAddAccessoryFailureWithError:]
  -[HAPAccessoryServerIP _establishSecureConnectionAndFetchAttributeDatabaseWithReason:]
  -[HAPAccessoryServerIP _parseAttributeDatabase:transaction:]
  -[HAPAccessoryServerIP ownershipToken]
  -[HAPAccessoryServerIP reachabilityEventTimer]
  -[HAPAccessoryServerIP _stopReachabilityTimer]
  -[HAPAccessoryServerIP _pairSetupContinueWAC]
  -[HAPAccessoryServerIP addActiveSession:]
  -[HAPAccessoryServerIP _queuedWriteOperationBlock:timeout:queue:completionHandler:]
  -[HAPAccessoryServerIP setModel:]
  -[HAPAccessoryServerIP _handleEventResponseObject:type:httpStatus:error:characteristics:requestedEventState:completion:queue:]
  -[HAPAccessoryServerIP _startAddPairingWithIdentifier:publicKey:admin:queue:completion:]
  -[HAPAccessoryServerIP _getAttributeDatabase]
  -[HAPAccessoryServerIP incrementHAPIPHTTPEventsCount]
  -[HAPAccessoryServerIP _continuePairingAfterMFiCertValidation]
  -[HAPAccessoryServerIP continueAuthAfterValidation:]
  -[HAPAccessoryServerIP isPreSoftAuthWacStarted]
  -[HAPAccessoryServerIP isWacComplete]
  -[HAPAccessoryServerIP _handleWriteECONNResetError:writeRequests:responses:timeout:queue:completionHandler:]
  -[HAPAccessoryServerIP getBonjourDeviceDNSName:]
  -[HAPAccessoryServerIP sendGETRequestToURL:timeout:completionHandler:]
  -[HAPAccessoryServerIP setMetricHAPIPInvalidationCount:]
  -[HAPAccessoryServerIP setPreSoftAuthWacStarted:]
  -[HAPAccessoryServerIP abruptDisconnectionCounter]
  -[HAPAccessoryServerIP isPairingRequestPending]
  -[HAPAccessoryServerIP isWacStarted]
  -[HAPAccessoryServerIP setEconnresetRetryInProgress:]
  -[HAPAccessoryServerIP setPairingRequestPending:]
  -[HAPAccessoryServerIP clientOperationQueue]
  -[HAPAccessoryServerIP setWacAccessory:]
  -[HAPAccessoryServerIP _parseAndValidateTXTRecord]
  -[HAPAccessoryServerIP _error:forReadCharacteristicValues:queue:completionHandler:]
  -[HAPAccessoryServerIP dealloc]
  -[HAPAccessoryServerIP _establishSecureSessionAndRemovePairing:queue:completion:]
  -[HAPAccessoryServerIP _queueEnableEvents:forCharacteristics:withCompletionHandler:queue:]
  -[HAPAccessoryServerIP setQueuedOperations:]
  -[HAPAccessoryServerIP updateActiveDisconnectOnIdleTimeout:]
  -[HAPAccessoryServerIP pingSupported]
  -[HAPAccessoryServerIP hasStartedPairing]
  -[HAPAccessoryServerIP setAbruptDisconnectionCounter:]
  -[HAPAccessoryServerIP _matchWithError:domain:code:]
  -[HAPAccessoryServerIP isBonjourDiscoveryPending]
  -[HAPAccessoryServerIP _queueAddPairingWithIdentifier:publicKey:admin:queue:completion:]
  -[HAPAccessoryServerIP sendPOSTRequestToURL:request:serializationType:completionHandler:]
  -[HAPAccessoryServerIP _pairVerifyStartWithRetry:]
  -[HAPAccessoryServerIP createKeysForDataStreamWithKeySalt:completionHandler:]
  -[HAPAccessoryServerIP _handleUpdatesForCharacteristics:stateNumber:]
  -[HAPAccessoryServerIP invalidated]
  -[HAPAccessoryServerIP _validatePairingAuthMethod:activity:]
  -[HAPAccessoryServerIP httpClientDidCloseConnectionDueToServer:]
  -[HAPAccessoryServerIP _invalidateWAC]
  -[HAPAccessoryServerIP authSession:authenticateUUID:token:]
  -[HAPAccessoryServerIP hapWACAccessory]
  -[HAPAccessoryServerIP provisionToken:]
  -[HAPAccessoryServerIP setWacStarted:]
  -[HAPAccessoryServerIP disconnectWithError:]
  -[HAPAccessoryServerIP _enableEvents:forCharacteristics:withCompletionHandler:queue:]
  -[HAPAccessoryServerIP setMetricHAPIPHTTPEventsCount:]
  -[HAPAccessoryServerIP networkMonitorIsReachable:]
  -[HAPAccessoryServerIP _continuePairingAfterAuthPromptWithRetry:]
  -[HAPAccessoryServerIP stopPing]
  -[HAPAccessoryServerIP _performEasyConfigWithPairingPrompt:performPairSetup:isSplit:completion:]
  -[HAPAccessoryServerIP setHandlingInvalidSetupCode:]
  -[HAPAccessoryServerIP setPostSoftAuthWacStarted:]
  -[HAPAccessoryServerIP hasUpdatedBonjour]
  -[HAPAccessoryServerIP _queueWriteCharacteristicValues:timeout:queue:withCompletionHandler:]
  -[HAPAccessoryServerIP setWacComplete:]
  -[HAPAccessoryServerIP _isSessionEstablished]
  -[HAPAccessoryServerIP controllerUsername]
  -[HAPAccessoryServerIP ipServices]
  -[HAPAccessoryServerIP readCharacteristicValues:timeout:completionQueue:completionHandler:]
  -[HAPAccessoryServerIP _updateWithBonjourDeviceInfo:]
  -[HAPAccessoryServerIP _invokePairVerifyCompletionBlock:]
  -[HAPAccessoryServerIP authSession]
  -[HAPAccessoryServerIP setReachabilityQueue:]
  -[HAPAccessoryServerIP _error:forWriteCharacteristicValues:queue:completionHandler:]
  -[HAPAccessoryServerIP primaryAccessory]
  -[HAPAccessoryServerIP _requestResource:queue:completionHandler:]
  -[HAPAccessoryServerIP primaryAccessoryForServer]
  -[HAPAccessoryServerIP _handlePairVerifyCompletionWithData:]
  -[HAPAccessoryServerIP _performExecuteWriteValues:prepareIdentifier:timeout:queue:completionHandler:]
  -[HAPAccessoryServerIP removePairing:completionQueue:completionHandler:]
  -[HAPAccessoryServerIP _pairVerifyStartWAC:]
  -[HAPAccessoryServerIP _processQueuedOperationsWithError:]
  -[HAPAccessoryServerIP _notifyDelegateNeedsOwnershipToken]
  -[HAPAccessoryServerIP _tearDownSessionWithError:]
  -[HAPAccessoryServerIP authSession:sendAuthExchangeData:]
  -[HAPAccessoryServerIP _establishSecureSession]
  -[HAPAccessoryServerIP _handleListPairingsResponseObject:type:httpStatus:httpError:completionQueue:completionHandler:]
  -[HAPAccessoryServerIP pollAccessory]
  -[HAPAccessoryServerIP _ensureHTTPClientSetUp]
  -[HAPAccessoryServerIP _queueReadCharacteristicValues:timeout:queue:completionHandler:]
  -[HAPAccessoryServerIP isTokenValidationPending]
  -[HAPAccessoryServerIP setCancelPairingErr:]


HAPNotification : HMFObject
  // class methods
  +[HAPNotification typeToString:]
  +[HAPNotification postNotification:object:userInfo:]


HAP2ControllerReadRequest : HAP2LoggingObject <HAP2EncodedCharacteristicRequest>
 @property  NSArray *originalCharacteristics
 @property  NSArray *characteristics
 @property  unsigned long type
 @property  BOOL encrypted
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HAP2ControllerReadRequest characteristics]
  -[HAP2ControllerReadRequest .cxx_destruct]
  -[HAP2ControllerReadRequest isEncrypted]
  -[HAP2ControllerReadRequest serialize]
  -[HAP2ControllerReadRequest type]
  -[HAP2ControllerReadRequest initWithCharacteristics:]
  -[HAP2ControllerReadRequest originalCharacteristics]


HAPBTLEResponse : HMFObject
 @property  BOOL headerComplete
 @property  NSData *body
 @property  NSMutableData *_internalBody
 @property  HAPBTLERequest *request
 @property  HAPBTLETransactionIdentifier *identifier
 @property  BOOL encrypted
 @property  BOOL bodyComplete
 @property  BOOL complete
 @property  BOOL valid
 @property  unsigned long bodyLength
 @property  unsigned char statusCode

  // instance methods
  -[HAPBTLEResponse body]
  -[HAPBTLEResponse initWithRequest:]
  -[HAPBTLEResponse isValid]
  -[HAPBTLEResponse .cxx_destruct]
  -[HAPBTLEResponse descriptionWithPointer:]
  -[HAPBTLEResponse isEncrypted]
  -[HAPBTLEResponse init]
  -[HAPBTLEResponse request]
  -[HAPBTLEResponse identifier]
  -[HAPBTLEResponse setBody:]
  -[HAPBTLEResponse isComplete]
  -[HAPBTLEResponse shortDescription]
  -[HAPBTLEResponse statusCode]
  -[HAPBTLEResponse appendData:error:]
  -[HAPBTLEResponse bodyLength]
  -[HAPBTLEResponse isHeaderComplete]
  -[HAPBTLEResponse isBodyComplete]
  -[HAPBTLEResponse _internalBody]
  -[HAPBTLEResponse _deserializeHeaderWithData:error:]
  -[HAPBTLEResponse _remainingBodyLength]
  -[HAPBTLEResponse _setInternalBody:]
  -[HAPBTLEResponse _deserializeHeaderBodyLengthWithData:error:]
  -[HAPBTLEResponse setHeaderComplete:]


HAP2EncodingUtils : NSObject
  // class methods
  +[HAP2EncodingUtils removePairingRequestWithIdentifier:error:]
  +[HAP2EncodingUtils addPairingRequestWithIdentity:error:]
  +[HAP2EncodingUtils parseAddOrRemovePairingRequestResponse:error:]


HAPSecuritySessionEncryption : NSObject
 @property  NSData *inputKey
 @property  NSMutableData *inputNonce
 @property  NSData *outputKey
 @property  NSMutableData *outputNonce

  // instance methods
  -[HAPSecuritySessionEncryption outputKey]
  -[HAPSecuritySessionEncryption .cxx_destruct]
  -[HAPSecuritySessionEncryption setInputKey:]
  -[HAPSecuritySessionEncryption setInputNonce:]
  -[HAPSecuritySessionEncryption setOutputNonce:]
  -[HAPSecuritySessionEncryption inputNonce]
  -[HAPSecuritySessionEncryption outputNonce]
  -[HAPSecuritySessionEncryption init]
  -[HAPSecuritySessionEncryption inputKey]
  -[HAPSecuritySessionEncryption setOutputKey:]
  -[HAPSecuritySessionEncryption decrypt:length:additionalAuthData:additionalAuthDataLength:authTagData:authTagDataLength:error:]
  -[HAPSecuritySessionEncryption encrypt:additionalAuthenticatedData:]
  -[HAPSecuritySessionEncryption initWithInputKey:outputKey:]
  -[HAPSecuritySessionEncryption decrypt:additionalAuthenticatedData:error:]


HAP2AccessoryServerControllerOperation : HAP2AsynchronousOperation <HMFTimerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HAP2AccessoryServerControllerOperation timerDidFire:]
  -[HAP2AccessoryServerControllerOperation main]
  -[HAP2AccessoryServerControllerOperation .cxx_destruct]
  -[HAP2AccessoryServerControllerOperation cancel]
  -[HAP2AccessoryServerControllerOperation finish]
  -[HAP2AccessoryServerControllerOperation cancelWithError:]
  -[HAP2AccessoryServerControllerOperation _cleanUp]
  -[HAP2AccessoryServerControllerOperation finishWithError:]
  -[HAP2AccessoryServerControllerOperation _openTransport]
  -[HAP2AccessoryServerControllerOperation _sendRequest]
  -[HAP2AccessoryServerControllerOperation _parseResponseData:]
  -[HAP2AccessoryServerControllerOperation initWithName:controller:encoding:transport:request:endpoint:mimeType:timeout:options:]


HAP2AccessoryServerPairingDriverMFiCertWorkItem : HAP2AccessoryServerPairingDriverWorkItem
 @property  NSError *cancelError

  // class methods
  +[HAP2AccessoryServerPairingDriverMFiCertWorkItem checkCertificate]

  // instance methods
  -[HAP2AccessoryServerPairingDriverMFiCertWorkItem .cxx_destruct]
  -[HAP2AccessoryServerPairingDriverMFiCertWorkItem cancelWithError:]
  -[HAP2AccessoryServerPairingDriverMFiCertWorkItem cancelError]
  -[HAP2AccessoryServerPairingDriverMFiCertWorkItem setCancelError:]
  -[HAP2AccessoryServerPairingDriverMFiCertWorkItem runForPairingDriver:]


HAPOperatingStateResponse : NSObject <NSCopying, HAPTLVProtocol>
 @property  HAPOperatingStateWrapper *state
 @property  HAPOperatingStateAbnormalReasonsWrapper *abnormalReasons
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPOperatingStateResponse parsedFromData:error:]

  // instance methods
  -[HAPOperatingStateResponse .cxx_destruct]
  -[HAPOperatingStateResponse setState:]
  -[HAPOperatingStateResponse init]
  -[HAPOperatingStateResponse isEqual:]
  -[HAPOperatingStateResponse state]
  -[HAPOperatingStateResponse parseFromData:error:]
  -[HAPOperatingStateResponse copyWithZone:]
  -[HAPOperatingStateResponse serializeWithError:]
  -[HAPOperatingStateResponse abnormalReasons]
  -[HAPOperatingStateResponse setAbnormalReasons:]
  -[HAPOperatingStateResponse initWithState:abnormalReasons:]


HAPCharacteristicValueTransitionEndBehaviorWrapper : NSObject <NSCopying, HAPTLVProtocol>
 @property  long long value
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPCharacteristicValueTransitionEndBehaviorWrapper parsedFromData:error:]

  // instance methods
  -[HAPCharacteristicValueTransitionEndBehaviorWrapper init]
  -[HAPCharacteristicValueTransitionEndBehaviorWrapper isEqual:]
  -[HAPCharacteristicValueTransitionEndBehaviorWrapper initWithValue:]
  -[HAPCharacteristicValueTransitionEndBehaviorWrapper setValue:]
  -[HAPCharacteristicValueTransitionEndBehaviorWrapper value]
  -[HAPCharacteristicValueTransitionEndBehaviorWrapper parseFromData:error:]
  -[HAPCharacteristicValueTransitionEndBehaviorWrapper copyWithZone:]
  -[HAPCharacteristicValueTransitionEndBehaviorWrapper serializeWithError:]


HAPCharacteristicValueTransitionLinearStartConditionWrapper : NSObject <NSCopying, HAPTLVProtocol>
 @property  long long value
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPCharacteristicValueTransitionLinearStartConditionWrapper parsedFromData:error:]

  // instance methods
  -[HAPCharacteristicValueTransitionLinearStartConditionWrapper init]
  -[HAPCharacteristicValueTransitionLinearStartConditionWrapper isEqual:]
  -[HAPCharacteristicValueTransitionLinearStartConditionWrapper initWithValue:]
  -[HAPCharacteristicValueTransitionLinearStartConditionWrapper setValue:]
  -[HAPCharacteristicValueTransitionLinearStartConditionWrapper value]
  -[HAPCharacteristicValueTransitionLinearStartConditionWrapper parseFromData:error:]
  -[HAPCharacteristicValueTransitionLinearStartConditionWrapper copyWithZone:]
  -[HAPCharacteristicValueTransitionLinearStartConditionWrapper serializeWithError:]


HAPAudioStreamCodecConfiguration : NSObject <NSCopying, HAPTLVProtocol>
 @property  HAPAudioCodecTypeWrapper *codecType
 @property  HAPAudioStreamCodecParameters *codecParameters
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPAudioStreamCodecConfiguration parsedFromData:error:]

  // instance methods
  -[HAPAudioStreamCodecConfiguration .cxx_destruct]
  -[HAPAudioStreamCodecConfiguration init]
  -[HAPAudioStreamCodecConfiguration isEqual:]
  -[HAPAudioStreamCodecConfiguration parseFromData:error:]
  -[HAPAudioStreamCodecConfiguration copyWithZone:]
  -[HAPAudioStreamCodecConfiguration codecType]
  -[HAPAudioStreamCodecConfiguration setCodecType:]
  -[HAPAudioStreamCodecConfiguration serializeWithError:]
  -[HAPAudioStreamCodecConfiguration codecParameters]
  -[HAPAudioStreamCodecConfiguration setCodecParameters:]
  -[HAPAudioStreamCodecConfiguration initWithCodecType:codecParameters:]


HAPAudioStreamCodecParameters : NSObject <NSCopying, HAPTLVProtocol>
 @property  HAPTLVUnsignedNumberValue *numAudioChannels
 @property  HAPAudioCodecBitRateWrapper *bitRate
 @property  HAPAudioCodecSampleRateWrapper *sampleRate
 @property  HAPTLVUnsignedNumberValue *packetTime
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPAudioStreamCodecParameters parsedFromData:error:]

  // instance methods
  -[HAPAudioStreamCodecParameters sampleRate]
  -[HAPAudioStreamCodecParameters .cxx_destruct]
  -[HAPAudioStreamCodecParameters init]
  -[HAPAudioStreamCodecParameters isEqual:]
  -[HAPAudioStreamCodecParameters bitRate]
  -[HAPAudioStreamCodecParameters parseFromData:error:]
  -[HAPAudioStreamCodecParameters copyWithZone:]
  -[HAPAudioStreamCodecParameters setSampleRate:]
  -[HAPAudioStreamCodecParameters setBitRate:]
  -[HAPAudioStreamCodecParameters serializeWithError:]
  -[HAPAudioStreamCodecParameters setNumAudioChannels:]
  -[HAPAudioStreamCodecParameters setPacketTime:]
  -[HAPAudioStreamCodecParameters numAudioChannels]
  -[HAPAudioStreamCodecParameters packetTime]
  -[HAPAudioStreamCodecParameters initWithNumAudioChannels:bitRate:sampleRate:packetTime:]


HAPSelectedAudioStreamConfiguration : NSObject <NSCopying, HAPTLVProtocol>
 @property  HAPAudioStreamCodecConfiguration *configuration
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPSelectedAudioStreamConfiguration parsedFromData:error:]

  // instance methods
  -[HAPSelectedAudioStreamConfiguration configuration]
  -[HAPSelectedAudioStreamConfiguration .cxx_destruct]
  -[HAPSelectedAudioStreamConfiguration init]
  -[HAPSelectedAudioStreamConfiguration isEqual:]
  -[HAPSelectedAudioStreamConfiguration initWithConfiguration:]
  -[HAPSelectedAudioStreamConfiguration parseFromData:error:]
  -[HAPSelectedAudioStreamConfiguration copyWithZone:]
  -[HAPSelectedAudioStreamConfiguration setConfiguration:]
  -[HAPSelectedAudioStreamConfiguration serializeWithError:]


HAPSupportedAudioStreamConfigurations : NSObject <NSCopying, HAPTLVProtocol>
 @property  NSMutableArray *configurations
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPSupportedAudioStreamConfigurations parsedFromData:error:]

  // instance methods
  -[HAPSupportedAudioStreamConfigurations configurations]
  -[HAPSupportedAudioStreamConfigurations .cxx_destruct]
  -[HAPSupportedAudioStreamConfigurations init]
  -[HAPSupportedAudioStreamConfigurations isEqual:]
  -[HAPSupportedAudioStreamConfigurations initWithConfigurations:]
  -[HAPSupportedAudioStreamConfigurations setConfigurations:]
  -[HAPSupportedAudioStreamConfigurations parseFromData:error:]
  -[HAPSupportedAudioStreamConfigurations copyWithZone:]
  -[HAPSupportedAudioStreamConfigurations serializeWithError:]


HAPPairingUtilities : HMFObject
  // class methods
  +[HAPPairingUtilities createAddPairingRequestForPairingIdentity:error:]
  +[HAPPairingUtilities createRemovePairingRequestForPairingIdentity:error:]
  +[HAPPairingUtilities parseRemovePairingResponse:error:]
  +[HAPPairingUtilities parseAddPairingResponse:error:]
  +[HAPPairingUtilities createListPairingsRequest:]
  +[HAPPairingUtilities parseListPairingsResponse:error:]


HAPValueTransformer : HMFObject
  // class methods
  +[HAPValueTransformer expectedTransformedClassForFormat:]
  +[HAPValueTransformer expectedClassForFormat:]

  // instance methods
  -[HAPValueTransformer transformedValue:format:error:]
  -[HAPValueTransformer reverseTransformedValue:format:error:]


HAP2AccessoryServerEncodingThread : HAP2LoggingObject <HAP2AccessoryServerEncoding>
 @property  unsigned long encodingFeatures
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAP2AccessoryServerEncodingThread _parseShortFormUUID:error:]

  // instance methods
  -[HAP2AccessoryServerEncodingThread .cxx_destruct]
  -[HAP2AccessoryServerEncodingThread responseForRequest:bodyData:error:]
  -[HAP2AccessoryServerEncodingThread encodingFeatures]
  -[HAP2AccessoryServerEncodingThread _parseCharacteristicResponsesWithBodyData:request:error:]
  -[HAP2AccessoryServerEncodingThread _parseCharacteristicMetadata:error:]
  -[HAP2AccessoryServerEncodingThread _parseCharacteristics:error:]
  -[HAP2AccessoryServerEncodingThread _parseTopLevelAttributeDatabaseFromData:error:]
  -[HAP2AccessoryServerEncodingThread _parseServiceList:error:]
  -[HAP2AccessoryServerEncodingThread decodeBodyData:format:error:]
  -[HAP2AccessoryServerEncodingThread encodeBodyValue:format:error:]
  -[HAP2AccessoryServerEncodingThread readRequestForAttributeDatabaseWithEncryption:error:]
  -[HAP2AccessoryServerEncodingThread groupingsForReadRequestsForCharacteristics:]
  -[HAP2AccessoryServerEncodingThread readRequestForCharacteristics:shouldEncrypt:error:]
  -[HAP2AccessoryServerEncodingThread unpairedIdentifyRequestWithError:]
  -[HAP2AccessoryServerEncodingThread requestToRemovePairing:characteristic:error:]
  -[HAP2AccessoryServerEncodingThread requestToAddPairing:characteristic:error:]
  -[HAP2AccessoryServerEncodingThread requestToListPairingsWithCharacteristic:error:]
  -[HAP2AccessoryServerEncodingThread groupingsForWriteRequestsForCharacteristics:]
  -[HAP2AccessoryServerEncodingThread writeRequestForCharacteristics:shouldEncrypt:error:]
  -[HAP2AccessoryServerEncodingThread prepareWriteRequestForCharacteristics:ttl:error:]
  -[HAP2AccessoryServerEncodingThread executeWriteRequestForCharacteristics:error:]
  -[HAP2AccessoryServerEncodingThread notificationRequestsForCharacteristics:type:error:]
  -[HAP2AccessoryServerEncodingThread eventsForData:error:]
  -[HAP2AccessoryServerEncodingThread initWithEncodingFeatures:accessoryDescription:]


HAPComponent : HMFObject
 @property  <HAPBTLECentralManagerDelegate> *centralManagerDelegate

  // instance methods
  -[HAPComponent setCentralManagerDelegate:]
  -[HAPComponent .cxx_destruct]
  -[HAPComponent centralManagerDelegate]
  -[HAPComponent initWithDelegate:]


HAPBTLECentralManager : HMFObject <CBCentralManagerDelegate>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  CBCentralManager *centralManager
 @property  NSMutableSet *delegates
 @property  long long state
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPBTLECentralManager getInstance]

  // instance methods
  -[HAPBTLECentralManager setDelegates:]
  -[HAPBTLECentralManager setWorkQueue:]
  -[HAPBTLECentralManager registerCentralManagerDelegate:]
  -[HAPBTLECentralManager setCentralManager:]
  -[HAPBTLECentralManager .cxx_destruct]
  -[HAPBTLECentralManager delegates]
  -[HAPBTLECentralManager centralManagerDidUpdateState:]
  -[HAPBTLECentralManager _getCentralManager]
  -[HAPBTLECentralManager setState:]
  -[HAPBTLECentralManager centralManager]
  -[HAPBTLECentralManager init]
  -[HAPBTLECentralManager state]
  -[HAPBTLECentralManager workQueue]


HAPOperatingStateAbnormalReasonsWrapper : NSObject <NSCopying, HAPTLVProtocol>
 @property  unsigned long value
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPOperatingStateAbnormalReasonsWrapper parsedFromData:error:]

  // instance methods
  -[HAPOperatingStateAbnormalReasonsWrapper init]
  -[HAPOperatingStateAbnormalReasonsWrapper isEqual:]
  -[HAPOperatingStateAbnormalReasonsWrapper initWithValue:]
  -[HAPOperatingStateAbnormalReasonsWrapper setValue:]
  -[HAPOperatingStateAbnormalReasonsWrapper value]
  -[HAPOperatingStateAbnormalReasonsWrapper parseFromData:error:]
  -[HAPOperatingStateAbnormalReasonsWrapper copyWithZone:]
  -[HAPOperatingStateAbnormalReasonsWrapper serializeWithError:]


HAPWiFiConfigurationOperationTypeWrapper : NSObject <NSCopying, HAPTLVProtocol>
 @property  long long value
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPWiFiConfigurationOperationTypeWrapper parsedFromData:error:]

  // instance methods
  -[HAPWiFiConfigurationOperationTypeWrapper init]
  -[HAPWiFiConfigurationOperationTypeWrapper isEqual:]
  -[HAPWiFiConfigurationOperationTypeWrapper initWithValue:]
  -[HAPWiFiConfigurationOperationTypeWrapper setValue:]
  -[HAPWiFiConfigurationOperationTypeWrapper value]
  -[HAPWiFiConfigurationOperationTypeWrapper parseFromData:error:]
  -[HAPWiFiConfigurationOperationTypeWrapper copyWithZone:]
  -[HAPWiFiConfigurationOperationTypeWrapper serializeWithError:]


HAPWiFiSecurityModeWrapper : NSObject <NSCopying, HAPTLVProtocol>
 @property  long long value
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPWiFiSecurityModeWrapper parsedFromData:error:]

  // instance methods
  -[HAPWiFiSecurityModeWrapper init]
  -[HAPWiFiSecurityModeWrapper isEqual:]
  -[HAPWiFiSecurityModeWrapper initWithValue:]
  -[HAPWiFiSecurityModeWrapper setValue:]
  -[HAPWiFiSecurityModeWrapper value]
  -[HAPWiFiSecurityModeWrapper parseFromData:error:]
  -[HAPWiFiSecurityModeWrapper copyWithZone:]
  -[HAPWiFiSecurityModeWrapper serializeWithError:]


HAPFirmwareUpdateReadiness : NSObject <NSCopying, HAPTLVProtocol>
 @property  HAPStagingNotReadyReasonsWrapper *stagingNotReadyReasons
 @property  HAPUpdateNotReadyReasonsWrapper *updateNotReadyReasons
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPFirmwareUpdateReadiness parsedFromData:error:]

  // instance methods
  -[HAPFirmwareUpdateReadiness .cxx_destruct]
  -[HAPFirmwareUpdateReadiness init]
  -[HAPFirmwareUpdateReadiness isEqual:]
  -[HAPFirmwareUpdateReadiness parseFromData:error:]
  -[HAPFirmwareUpdateReadiness copyWithZone:]
  -[HAPFirmwareUpdateReadiness serializeWithError:]
  -[HAPFirmwareUpdateReadiness stagingNotReadyReasons]
  -[HAPFirmwareUpdateReadiness updateNotReadyReasons]
  -[HAPFirmwareUpdateReadiness setStagingNotReadyReasons:]
  -[HAPFirmwareUpdateReadiness setUpdateNotReadyReasons:]
  -[HAPFirmwareUpdateReadiness initWithStagingNotReadyReasons:updateNotReadyReasons:]


HAPFirmwareUpdateStatus : NSObject <NSCopying, HAPTLVProtocol>
 @property  HAPFirmwareUpdateStateWrapper *state
 @property  HAPTLVUnsignedNumberValue *updateDuration
 @property  NSString *stagedFirmwareVersion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPFirmwareUpdateStatus parsedFromData:error:]

  // instance methods
  -[HAPFirmwareUpdateStatus .cxx_destruct]
  -[HAPFirmwareUpdateStatus setState:]
  -[HAPFirmwareUpdateStatus init]
  -[HAPFirmwareUpdateStatus isEqual:]
  -[HAPFirmwareUpdateStatus state]
  -[HAPFirmwareUpdateStatus parseFromData:error:]
  -[HAPFirmwareUpdateStatus copyWithZone:]
  -[HAPFirmwareUpdateStatus serializeWithError:]
  -[HAPFirmwareUpdateStatus stagedFirmwareVersion]
  -[HAPFirmwareUpdateStatus updateDuration]
  -[HAPFirmwareUpdateStatus setUpdateDuration:]
  -[HAPFirmwareUpdateStatus setStagedFirmwareVersion:]
  -[HAPFirmwareUpdateStatus initWithState:updateDuration:stagedFirmwareVersion:]


HAPSupportedFirmwareUpdateConfiguration : NSObject <NSCopying, HAPTLVProtocol>
 @property  HAPTLVUnsignedNumberValue *updateDuration
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPSupportedFirmwareUpdateConfiguration parsedFromData:error:]

  // instance methods
  -[HAPSupportedFirmwareUpdateConfiguration .cxx_destruct]
  -[HAPSupportedFirmwareUpdateConfiguration init]
  -[HAPSupportedFirmwareUpdateConfiguration isEqual:]
  -[HAPSupportedFirmwareUpdateConfiguration parseFromData:error:]
  -[HAPSupportedFirmwareUpdateConfiguration copyWithZone:]
  -[HAPSupportedFirmwareUpdateConfiguration serializeWithError:]
  -[HAPSupportedFirmwareUpdateConfiguration updateDuration]
  -[HAPSupportedFirmwareUpdateConfiguration setUpdateDuration:]
  -[HAPSupportedFirmwareUpdateConfiguration initWithUpdateDuration:]


HAPSecuritySession : HMFObject <HMFLogging, HAPEncryptedSession>
 @property  NSObject<OS_dispatch_queue> *queue
 @property  unsigned long state
 @property  ^{PairingSessionPrivate=} pairingSession
 @property  HAPSecuritySessionEncryption *encryption
 @property  <HAPSecuritySessionDelegate> *delegate
 @property  unsigned long role
 @property  BOOL open
 @property  BOOL opening
 @property  unsigned long resumeSessionID
 @property  NSData *broadcastKey
 @property  NSDictionary *additionalDerivedKeys
 @property  NSDate *sessionStartTime
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPSecuritySession logCategory]

  // instance methods
  -[HAPSecuritySession closeWithError:]
  -[HAPSecuritySession _closeWithError:]
  -[HAPSecuritySession sessionStartTime]
  -[HAPSecuritySession .cxx_destruct]
  -[HAPSecuritySession encryption]
  -[HAPSecuritySession setPairingSession:]
  -[HAPSecuritySession setState:]
  -[HAPSecuritySession isOpen]
  -[HAPSecuritySession pairingSession]
  -[HAPSecuritySession state]
  -[HAPSecuritySession role]
  -[HAPSecuritySession delegate]
  -[HAPSecuritySession queue]
  -[HAPSecuritySession close]
  -[HAPSecuritySession dealloc]
  -[HAPSecuritySession open]
  -[HAPSecuritySession _inputInfo]
  -[HAPSecuritySession broadcastKey]
  -[HAPSecuritySession setBroadcastKey:]
  -[HAPSecuritySession _initializeSetupSession:]
  -[HAPSecuritySession _notifyOpening]
  -[HAPSecuritySession _processSetupExchangeData:error:]
  -[HAPSecuritySession _handleSetupExchangeComplete]
  -[HAPSecuritySession _outputInfo]
  -[HAPSecuritySession setResumeSessionID:]
  -[HAPSecuritySession _broadcastInfo]
  -[HAPSecuritySession _handleLocalPairingIdentityRequestWithStatus:]
  -[HAPSecuritySession setAdditionalDerivedKeys:]
  -[HAPSecuritySession setEncryption:]
  -[HAPSecuritySession _notifyOpened]
  -[HAPSecuritySession reallyOpen]
  -[HAPSecuritySession _initiateClientSessionSetupExchange]
  -[HAPSecuritySession encryptData:additionalAuthenticatedData:error:]
  -[HAPSecuritySession decryptData:additionalAuthenticatedData:error:]
  -[HAPSecuritySession initWithRole:resumeSessionID:delegate:]
  -[HAPSecuritySession additionalDerivedKeys]
  -[HAPSecuritySession resumeSessionID]
  -[HAPSecuritySession isOpening]
  -[HAPSecuritySession _handlePeerPairingIdentityRequestWithIdentifier:status:]
  -[HAPSecuritySession receivedSetupExchangeData:error:]


HAPSecuritySessionDelegateAdditionalDerivedKeyTuple : NSObject
 @property  NSString *name
 @property  NSData *saltData
 @property  NSData *infoData

  // class methods
  +[HAPSecuritySessionDelegateAdditionalDerivedKeyTuple new]

  // instance methods
  -[HAPSecuritySessionDelegateAdditionalDerivedKeyTuple name]
  -[HAPSecuritySessionDelegateAdditionalDerivedKeyTuple .cxx_destruct]
  -[HAPSecuritySessionDelegateAdditionalDerivedKeyTuple init]
  -[HAPSecuritySessionDelegateAdditionalDerivedKeyTuple saltData]
  -[HAPSecuritySessionDelegateAdditionalDerivedKeyTuple infoData]
  -[HAPSecuritySessionDelegateAdditionalDerivedKeyTuple initWithName:saltData:infoData:]


HAP2EncodedEnableNotificationResponse : HAP2EncodedCharacteristicResponse <HAP2EncodedEnableNotificationResponse>
 @property  NSSet *updatedValues
 @property  NSArray *characteristics
 @property  BOOL encrypted
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HAP2EncodedEnableNotificationResponse .cxx_destruct]
  -[HAP2EncodedEnableNotificationResponse initWithNotificationResponses:updatedValues:]
  -[HAP2EncodedEnableNotificationResponse updatedValues]
  -[HAP2EncodedEnableNotificationResponse initWithNotificationResponses:]


HAPNFCAccessKeyStateWrapper : NSObject <NSCopying, HAPTLVProtocol>
 @property  long long value
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPNFCAccessKeyStateWrapper parsedFromData:error:]

  // instance methods
  -[HAPNFCAccessKeyStateWrapper init]
  -[HAPNFCAccessKeyStateWrapper isEqual:]
  -[HAPNFCAccessKeyStateWrapper initWithValue:]
  -[HAPNFCAccessKeyStateWrapper setValue:]
  -[HAPNFCAccessKeyStateWrapper value]
  -[HAPNFCAccessKeyStateWrapper parseFromData:error:]
  -[HAPNFCAccessKeyStateWrapper copyWithZone:]
  -[HAPNFCAccessKeyStateWrapper serializeWithError:]


HAPNFCAccessKeyTypeWrapper : NSObject <NSCopying, HAPTLVProtocol>
 @property  long long value
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPNFCAccessKeyTypeWrapper parsedFromData:error:]

  // instance methods
  -[HAPNFCAccessKeyTypeWrapper init]
  -[HAPNFCAccessKeyTypeWrapper isEqual:]
  -[HAPNFCAccessKeyTypeWrapper initWithValue:]
  -[HAPNFCAccessKeyTypeWrapper setValue:]
  -[HAPNFCAccessKeyTypeWrapper value]
  -[HAPNFCAccessKeyTypeWrapper parseFromData:error:]
  -[HAPNFCAccessKeyTypeWrapper copyWithZone:]
  -[HAPNFCAccessKeyTypeWrapper serializeWithError:]


HAPNFCAccessOperationTypeWrapper : NSObject <NSCopying, HAPTLVProtocol>
 @property  long long value
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPNFCAccessOperationTypeWrapper parsedFromData:error:]

  // instance methods
  -[HAPNFCAccessOperationTypeWrapper init]
  -[HAPNFCAccessOperationTypeWrapper isEqual:]
  -[HAPNFCAccessOperationTypeWrapper initWithValue:]
  -[HAPNFCAccessOperationTypeWrapper setValue:]
  -[HAPNFCAccessOperationTypeWrapper value]
  -[HAPNFCAccessOperationTypeWrapper parseFromData:error:]
  -[HAPNFCAccessOperationTypeWrapper copyWithZone:]
  -[HAPNFCAccessOperationTypeWrapper serializeWithError:]


HAPNFCAccessResponseStatusWrapper : NSObject <NSCopying, HAPTLVProtocol>
 @property  long long value
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPNFCAccessResponseStatusWrapper parsedFromData:error:]

  // instance methods
  -[HAPNFCAccessResponseStatusWrapper init]
  -[HAPNFCAccessResponseStatusWrapper isEqual:]
  -[HAPNFCAccessResponseStatusWrapper initWithValue:]
  -[HAPNFCAccessResponseStatusWrapper setValue:]
  -[HAPNFCAccessResponseStatusWrapper value]
  -[HAPNFCAccessResponseStatusWrapper parseFromData:error:]
  -[HAPNFCAccessResponseStatusWrapper copyWithZone:]
  -[HAPNFCAccessResponseStatusWrapper serializeWithError:]


HAP2AccessoryServerAccessoryCache : HAP2LoggingObject <NSSecureCoding>
 @property  HAPBLEPeripheralInfo *peripheralInfo
 @property  NSDictionary *accessoryCache
 @property  NSNumber *sleepInterval
 @property  NSNumber *metadataVersion

  // class methods
  +[HAP2AccessoryServerAccessoryCache supportsSecureCoding]
  +[HAP2AccessoryServerAccessoryCache peripheralInfoFromMetadata:]
  +[HAP2AccessoryServerAccessoryCache accessoryCacheForAccessories:]

  // instance methods
  -[HAP2AccessoryServerAccessoryCache initWithCoder:]
  -[HAP2AccessoryServerAccessoryCache metadataVersion]
  -[HAP2AccessoryServerAccessoryCache .cxx_destruct]
  -[HAP2AccessoryServerAccessoryCache sleepInterval]
  -[HAP2AccessoryServerAccessoryCache setSleepInterval:]
  -[HAP2AccessoryServerAccessoryCache encodeWithCoder:]
  -[HAP2AccessoryServerAccessoryCache peripheralInfo]
  -[HAP2AccessoryServerAccessoryCache setPeripheralInfo:]
  -[HAP2AccessoryServerAccessoryCache initWithBLEPeripheralInfo:cachedAccessories:sleepInterval:metadataVersion:]
  -[HAP2AccessoryServerAccessoryCache setAccessoryCache:]
  -[HAP2AccessoryServerAccessoryCache accessoryCache]
  -[HAP2AccessoryServerAccessoryCache initWithMetadata:discoveredAccessories:sleepInterval:]
  -[HAP2AccessoryServerAccessoryCache updateWithMetadata:discoveredAccessories:]
  -[HAP2AccessoryServerAccessoryCache invalidateAccessoryCache]


HAPBTLETransactionIdentifier : HMFObject
 @property  unsigned char unsignedCharValue

  // class methods
  +[HAPBTLETransactionIdentifier generateRequestIdentifier]
  +[HAPBTLETransactionIdentifier randomTransactionIdentifier]

  // instance methods
  -[HAPBTLETransactionIdentifier descriptionWithPointer:]
  -[HAPBTLETransactionIdentifier isEqual:]
  -[HAPBTLETransactionIdentifier shortDescription]
  -[HAPBTLETransactionIdentifier unsignedCharValue]
  -[HAPBTLETransactionIdentifier initWithUnsignedCharValue:]


HAP2AccessoryServerPairingFactoryHAP : NSObject <HAP2AccessoryServerPairingFactory>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HAP2AccessoryServerPairingFactoryHAP createPairingDriverWithAccessoryInfo:transport:secureTransportFactory:encoding:operationQueue:]


HAPWiFiConfigurationUpdateStatusWrapper : NSObject <NSCopying, HAPTLVProtocol>
 @property  unsigned long value
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPWiFiConfigurationUpdateStatusWrapper parsedFromData:error:]

  // instance methods
  -[HAPWiFiConfigurationUpdateStatusWrapper init]
  -[HAPWiFiConfigurationUpdateStatusWrapper isEqual:]
  -[HAPWiFiConfigurationUpdateStatusWrapper initWithValue:]
  -[HAPWiFiConfigurationUpdateStatusWrapper setValue:]
  -[HAPWiFiConfigurationUpdateStatusWrapper value]
  -[HAPWiFiConfigurationUpdateStatusWrapper parseFromData:error:]
  -[HAPWiFiConfigurationUpdateStatusWrapper copyWithZone:]
  -[HAPWiFiConfigurationUpdateStatusWrapper serializeWithError:]


HAP2AccessoryServerEncodingThreadBTLERequest : HAPBTLERequest
 @property  unsigned char threadRequestType
 @property  id requestedValue
 @property  BOOL expectsResponseBody
 @property  long long writeOptions

  // class methods
  +[HAP2AccessoryServerEncodingThreadBTLERequest attributeDatabaseRequest]
  +[HAP2AccessoryServerEncodingThreadBTLERequest readRequestForCharacteristic:]
  +[HAP2AccessoryServerEncodingThreadBTLERequest writeRequestForCharacteristic:value:authorizationData:contextData:options:error:]
  +[HAP2AccessoryServerEncodingThreadBTLERequest prepareWriteRequestForCharacteristic:value:authorizationData:contextData:options:error:]
  +[HAP2AccessoryServerEncodingThreadBTLERequest executeWriteRequestForCharacteristic:value:options:error:]
  +[HAP2AccessoryServerEncodingThreadBTLERequest notificationRequestForCharacteristic:threadRequestType:enforcePDUBodyLength:]

  // instance methods
  -[HAP2AccessoryServerEncodingThreadBTLERequest .cxx_destruct]
  -[HAP2AccessoryServerEncodingThreadBTLERequest expectsResponseBody]
  -[HAP2AccessoryServerEncodingThreadBTLERequest writeOptions]
  -[HAP2AccessoryServerEncodingThreadBTLERequest requestedValue]
  -[HAP2AccessoryServerEncodingThreadBTLERequest threadRequestType]


HAP2AccessoryServerTransportRequest : HAP2LoggingObject
 @property  <HAP2AccessoryServerTransportRequestEndpoint> *endpoint
 @property  BOOL forReading
 @property  BOOL forWriting
 @property  BOOL encrypted
 @property  NSString *mimeType
 @property  NSData *data

  // class methods
  +[HAP2AccessoryServerTransportRequest new]

  // instance methods
  -[HAP2AccessoryServerTransportRequest .cxx_destruct]
  -[HAP2AccessoryServerTransportRequest mimeType]
  -[HAP2AccessoryServerTransportRequest data]
  -[HAP2AccessoryServerTransportRequest isEncrypted]
  -[HAP2AccessoryServerTransportRequest init]
  -[HAP2AccessoryServerTransportRequest endpoint]
  -[HAP2AccessoryServerTransportRequest initForReadingWithEndpoint:data:encrypted:mimeType:]
  -[HAP2AccessoryServerTransportRequest initForWritingWithEndpoint:data:encrypted:mimeType:]
  -[HAP2AccessoryServerTransportRequest isForReading]
  -[HAP2AccessoryServerTransportRequest isForWriting]


HAPCharacteristicContextData : NSObject <NSCopying, HAPTLVProtocol>
 @property  HAPTLVUnsignedNumberValue *contextIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPCharacteristicContextData parsedFromData:error:]

  // instance methods
  -[HAPCharacteristicContextData .cxx_destruct]
  -[HAPCharacteristicContextData contextIdentifier]
  -[HAPCharacteristicContextData init]
  -[HAPCharacteristicContextData isEqual:]
  -[HAPCharacteristicContextData parseFromData:error:]
  -[HAPCharacteristicContextData copyWithZone:]
  -[HAPCharacteristicContextData setContextIdentifier:]
  -[HAPCharacteristicContextData serializeWithError:]
  -[HAPCharacteristicContextData initWithContextIdentifier:]


HAPCharacteristicNotificationContext : NSObject <NSCopying, HAPTLVProtocol>
 @property  HAPTLVUnsignedNumberValue *contextIdentifier
 @property  HAPNotificationContextSourceWrapper *source
 @property  HAPTLVUnsignedNumberValue *clockTickCounter
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPCharacteristicNotificationContext parsedFromData:error:]

  // instance methods
  -[HAPCharacteristicNotificationContext .cxx_destruct]
  -[HAPCharacteristicNotificationContext contextIdentifier]
  -[HAPCharacteristicNotificationContext init]
  -[HAPCharacteristicNotificationContext isEqual:]
  -[HAPCharacteristicNotificationContext setSource:]
  -[HAPCharacteristicNotificationContext parseFromData:error:]
  -[HAPCharacteristicNotificationContext copyWithZone:]
  -[HAPCharacteristicNotificationContext setContextIdentifier:]
  -[HAPCharacteristicNotificationContext source]
  -[HAPCharacteristicNotificationContext serializeWithError:]
  -[HAPCharacteristicNotificationContext setClockTickCounter:]
  -[HAPCharacteristicNotificationContext clockTickCounter]
  -[HAPCharacteristicNotificationContext initWithContextIdentifier:source:clockTickCounter:]


HAP2EncodedAttributeDatabaseResponseThread : HAP2EncodedResponseThread <HAP2EncodedAttributeDatabaseResponse>
 @property  NSDictionary *attributeDatabase
 @property  BOOL encrypted
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HAP2EncodedAttributeDatabaseResponseThread .cxx_destruct]
  -[HAP2EncodedAttributeDatabaseResponseThread attributeDatabase]
  -[HAP2EncodedAttributeDatabaseResponseThread initWithBTLEResponse:attributeDatabase:]


HAP2TLVAccessorySignatureReadRequest : NSObject <NSCopying, HAPTLVProtocol>
 @property  HAP2TLVParamAccessoryList *accessoryList
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAP2TLVAccessorySignatureReadRequest parsedFromData:error:]

  // instance methods
  -[HAP2TLVAccessorySignatureReadRequest .cxx_destruct]
  -[HAP2TLVAccessorySignatureReadRequest accessoryList]
  -[HAP2TLVAccessorySignatureReadRequest init]
  -[HAP2TLVAccessorySignatureReadRequest isEqual:]
  -[HAP2TLVAccessorySignatureReadRequest parseFromData:error:]
  -[HAP2TLVAccessorySignatureReadRequest setAccessoryList:]
  -[HAP2TLVAccessorySignatureReadRequest copyWithZone:]
  -[HAP2TLVAccessorySignatureReadRequest serializeWithError:]
  -[HAP2TLVAccessorySignatureReadRequest initWithAccessoryList:]


HAP2TLVAddOrRemovePairingResponse : NSObject <NSCopying, HAPTLVProtocol>
 @property  HAP2TLVPairingStateWrapper *state
 @property  HAP2TLVErrorsWrapper *responseError
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAP2TLVAddOrRemovePairingResponse parsedFromData:error:]

  // instance methods
  -[HAP2TLVAddOrRemovePairingResponse responseError]
  -[HAP2TLVAddOrRemovePairingResponse setResponseError:]
  -[HAP2TLVAddOrRemovePairingResponse .cxx_destruct]
  -[HAP2TLVAddOrRemovePairingResponse setState:]
  -[HAP2TLVAddOrRemovePairingResponse init]
  -[HAP2TLVAddOrRemovePairingResponse isEqual:]
  -[HAP2TLVAddOrRemovePairingResponse state]
  -[HAP2TLVAddOrRemovePairingResponse parseFromData:error:]
  -[HAP2TLVAddOrRemovePairingResponse copyWithZone:]
  -[HAP2TLVAddOrRemovePairingResponse serializeWithError:]
  -[HAP2TLVAddOrRemovePairingResponse initWithState:responseError:]


HAP2TLVAddPairingRequest : NSObject <NSCopying, HAPTLVProtocol>
 @property  HAP2TLVPairingStateWrapper *state
 @property  HAP2TLVPairingMethodWrapper *method
 @property  NSString *identifier
 @property  NSData *publicKey
 @property  HAPTLVUnsignedNumberValue *permissions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAP2TLVAddPairingRequest parsedFromData:error:]

  // instance methods
  -[HAP2TLVAddPairingRequest setPermissions:]
  -[HAP2TLVAddPairingRequest publicKey]
  -[HAP2TLVAddPairingRequest method]
  -[HAP2TLVAddPairingRequest .cxx_destruct]
  -[HAP2TLVAddPairingRequest setState:]
  -[HAP2TLVAddPairingRequest init]
  -[HAP2TLVAddPairingRequest isEqual:]
  -[HAP2TLVAddPairingRequest permissions]
  -[HAP2TLVAddPairingRequest identifier]
  -[HAP2TLVAddPairingRequest setMethod:]
  -[HAP2TLVAddPairingRequest state]
  -[HAP2TLVAddPairingRequest parseFromData:error:]
  -[HAP2TLVAddPairingRequest setIdentifier:]
  -[HAP2TLVAddPairingRequest setPublicKey:]
  -[HAP2TLVAddPairingRequest copyWithZone:]
  -[HAP2TLVAddPairingRequest serializeWithError:]
  -[HAP2TLVAddPairingRequest initWithState:method:identifier:publicKey:permissions:]


HAP2TLVOldServiceList : NSObject <NSCopying, HAPTLVProtocol>
 @property  HAP2TLVParamServiceList *serviceList
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAP2TLVOldServiceList parsedFromData:error:]

  // instance methods
  -[HAP2TLVOldServiceList .cxx_destruct]
  -[HAP2TLVOldServiceList init]
  -[HAP2TLVOldServiceList isEqual:]
  -[HAP2TLVOldServiceList parseFromData:error:]
  -[HAP2TLVOldServiceList copyWithZone:]
  -[HAP2TLVOldServiceList serializeWithError:]
  -[HAP2TLVOldServiceList serviceList]
  -[HAP2TLVOldServiceList setServiceList:]
  -[HAP2TLVOldServiceList initWithServiceList:]


HAP2TLVParamAccessoryList : NSObject <NSCopying, HAPTLVProtocol>
 @property  NSMutableArray *accessorySignatureList
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAP2TLVParamAccessoryList parsedFromData:error:]

  // instance methods
  -[HAP2TLVParamAccessoryList .cxx_destruct]
  -[HAP2TLVParamAccessoryList init]
  -[HAP2TLVParamAccessoryList isEqual:]
  -[HAP2TLVParamAccessoryList parseFromData:error:]
  -[HAP2TLVParamAccessoryList copyWithZone:]
  -[HAP2TLVParamAccessoryList serializeWithError:]
  -[HAP2TLVParamAccessoryList initWithAccessorySignatureList:]
  -[HAP2TLVParamAccessoryList accessorySignatureList]
  -[HAP2TLVParamAccessoryList setAccessorySignatureList:]


HAP2TLVParamAccessorySignature : NSObject <NSCopying, HAPTLVProtocol>
 @property  HAPTLVUnsignedNumberValue *accessoryID
 @property  HAP2TLVParamServiceList *serviceList
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAP2TLVParamAccessorySignature parsedFromData:error:]

  // instance methods
  -[HAP2TLVParamAccessorySignature accessoryID]
  -[HAP2TLVParamAccessorySignature setAccessoryID:]
  -[HAP2TLVParamAccessorySignature .cxx_destruct]
  -[HAP2TLVParamAccessorySignature init]
  -[HAP2TLVParamAccessorySignature isEqual:]
  -[HAP2TLVParamAccessorySignature parseFromData:error:]
  -[HAP2TLVParamAccessorySignature copyWithZone:]
  -[HAP2TLVParamAccessorySignature serializeWithError:]
  -[HAP2TLVParamAccessorySignature serviceList]
  -[HAP2TLVParamAccessorySignature initWithAccessoryID:serviceList:]
  -[HAP2TLVParamAccessorySignature setServiceList:]


HAP2TLVParamCharacteristicList : NSObject <NSCopying, HAPTLVProtocol>
 @property  NSMutableArray *characteristicSignatureList
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAP2TLVParamCharacteristicList parsedFromData:error:]

  // instance methods
  -[HAP2TLVParamCharacteristicList .cxx_destruct]
  -[HAP2TLVParamCharacteristicList init]
  -[HAP2TLVParamCharacteristicList isEqual:]
  -[HAP2TLVParamCharacteristicList parseFromData:error:]
  -[HAP2TLVParamCharacteristicList copyWithZone:]
  -[HAP2TLVParamCharacteristicList serializeWithError:]
  -[HAP2TLVParamCharacteristicList characteristicSignatureList]
  -[HAP2TLVParamCharacteristicList setCharacteristicSignatureList:]
  -[HAP2TLVParamCharacteristicList initWithCharacteristicSignatureList:]


HAP2TLVParamCharacteristicSignature : NSObject <NSCopying, HAPTLVProtocol>
 @property  HAPTLVUnsignedNumberValue *instanceID
 @property  NSData *characteristicType
 @property  HAP2TLVCharacteristicPropertiesWrapper *characteristicProperties
 @property  NSString *userDescription
 @property  NSData *bluetoothFormat
 @property  NSData *validRange
 @property  NSData *stepValue
 @property  NSData *validValues
 @property  NSData *validValuesRange
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAP2TLVParamCharacteristicSignature parsedFromData:error:]

  // instance methods
  -[HAP2TLVParamCharacteristicSignature instanceID]
  -[HAP2TLVParamCharacteristicSignature stepValue]
  -[HAP2TLVParamCharacteristicSignature validValues]
  -[HAP2TLVParamCharacteristicSignature setCharacteristicType:]
  -[HAP2TLVParamCharacteristicSignature .cxx_destruct]
  -[HAP2TLVParamCharacteristicSignature setStepValue:]
  -[HAP2TLVParamCharacteristicSignature init]
  -[HAP2TLVParamCharacteristicSignature isEqual:]
  -[HAP2TLVParamCharacteristicSignature userDescription]
  -[HAP2TLVParamCharacteristicSignature setUserDescription:]
  -[HAP2TLVParamCharacteristicSignature characteristicType]
  -[HAP2TLVParamCharacteristicSignature validRange]
  -[HAP2TLVParamCharacteristicSignature parseFromData:error:]
  -[HAP2TLVParamCharacteristicSignature copyWithZone:]
  -[HAP2TLVParamCharacteristicSignature setInstanceID:]
  -[HAP2TLVParamCharacteristicSignature setValidValues:]
  -[HAP2TLVParamCharacteristicSignature serializeWithError:]
  -[HAP2TLVParamCharacteristicSignature characteristicProperties]
  -[HAP2TLVParamCharacteristicSignature setCharacteristicProperties:]
  -[HAP2TLVParamCharacteristicSignature bluetoothFormat]
  -[HAP2TLVParamCharacteristicSignature validValuesRange]
  -[HAP2TLVParamCharacteristicSignature setBluetoothFormat:]
  -[HAP2TLVParamCharacteristicSignature setValidRange:]
  -[HAP2TLVParamCharacteristicSignature setValidValuesRange:]
  -[HAP2TLVParamCharacteristicSignature initWithInstanceID:characteristicType:characteristicProperties:userDescription:bluetoothFormat:validRange:stepValue:validValues:validValuesRange:]


HAP2TLVParamServiceList : NSObject <NSCopying, HAPTLVProtocol>
 @property  NSMutableArray *serviceSignatureList
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAP2TLVParamServiceList parsedFromData:error:]

  // instance methods
  -[HAP2TLVParamServiceList .cxx_destruct]
  -[HAP2TLVParamServiceList init]
  -[HAP2TLVParamServiceList isEqual:]
  -[HAP2TLVParamServiceList parseFromData:error:]
  -[HAP2TLVParamServiceList copyWithZone:]
  -[HAP2TLVParamServiceList serializeWithError:]
  -[HAP2TLVParamServiceList serviceSignatureList]
  -[HAP2TLVParamServiceList setServiceSignatureList:]
  -[HAP2TLVParamServiceList initWithServiceSignatureList:]


HAP2TLVParamServiceSignature : NSObject <NSCopying, HAPTLVProtocol>
 @property  HAPTLVUnsignedNumberValue *instanceID
 @property  NSData *serviceType
 @property  HAP2TLVServicePropertiesWrapper *properties
 @property  NSData *linkedServices
 @property  HAP2TLVParamCharacteristicList *characteristicList
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAP2TLVParamServiceSignature parsedFromData:error:]

  // instance methods
  -[HAP2TLVParamServiceSignature instanceID]
  -[HAP2TLVParamServiceSignature setServiceType:]
  -[HAP2TLVParamServiceSignature .cxx_destruct]
  -[HAP2TLVParamServiceSignature properties]
  -[HAP2TLVParamServiceSignature init]
  -[HAP2TLVParamServiceSignature isEqual:]
  -[HAP2TLVParamServiceSignature setProperties:]
  -[HAP2TLVParamServiceSignature linkedServices]
  -[HAP2TLVParamServiceSignature parseFromData:error:]
  -[HAP2TLVParamServiceSignature setLinkedServices:]
  -[HAP2TLVParamServiceSignature copyWithZone:]
  -[HAP2TLVParamServiceSignature setInstanceID:]
  -[HAP2TLVParamServiceSignature serviceType]
  -[HAP2TLVParamServiceSignature serializeWithError:]
  -[HAP2TLVParamServiceSignature characteristicList]
  -[HAP2TLVParamServiceSignature setCharacteristicList:]
  -[HAP2TLVParamServiceSignature initWithInstanceID:serviceType:properties:linkedServices:characteristicList:]


HAP2TLVRemovePairingRequest : NSObject <NSCopying, HAPTLVProtocol>
 @property  HAP2TLVPairingStateWrapper *state
 @property  HAP2TLVPairingMethodWrapper *method
 @property  NSString *identifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAP2TLVRemovePairingRequest parsedFromData:error:]

  // instance methods
  -[HAP2TLVRemovePairingRequest method]
  -[HAP2TLVRemovePairingRequest .cxx_destruct]
  -[HAP2TLVRemovePairingRequest setState:]
  -[HAP2TLVRemovePairingRequest init]
  -[HAP2TLVRemovePairingRequest isEqual:]
  -[HAP2TLVRemovePairingRequest identifier]
  -[HAP2TLVRemovePairingRequest setMethod:]
  -[HAP2TLVRemovePairingRequest state]
  -[HAP2TLVRemovePairingRequest parseFromData:error:]
  -[HAP2TLVRemovePairingRequest setIdentifier:]
  -[HAP2TLVRemovePairingRequest copyWithZone:]
  -[HAP2TLVRemovePairingRequest serializeWithError:]
  -[HAP2TLVRemovePairingRequest initWithState:method:identifier:]


HAP2EncodedCharacteristicRequestThread : HAP2LoggingObject <HAP2EncodedCharacteristicRequest>
 @property  NSArray *btleRequests
 @property  NSArray *characteristics
 @property  unsigned long type
 @property  BOOL encrypted
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HAP2EncodedCharacteristicRequestThread characteristics]
  -[HAP2EncodedCharacteristicRequestThread .cxx_destruct]
  -[HAP2EncodedCharacteristicRequestThread isEncrypted]
  -[HAP2EncodedCharacteristicRequestThread serialize]
  -[HAP2EncodedCharacteristicRequestThread type]
  -[HAP2EncodedCharacteristicRequestThread initWithBTLERequests:requestType:enforcePDUBodyLength:]
  -[HAP2EncodedCharacteristicRequestThread btleRequests]


HAP2AccessoryServer : HAP2LoggingObject <HAP2PairedAccessoryServerPrivate, HAPAccessoryReachabilityDelegate, HAP2UnpairedAccessoryServerPrivate, HAP2AccessoryServerPairingDriverDelegate, HAP2AccessoryServerPrivate, HAP2AccessoryServer>
 @property  <HAP2AccessoryServerBrowserPrivate> *browser
 @property  <HAP2AccessoryServerControllerPrivate> *controller
 @property  HAP2SerializedOperationQueue *operationQueue
 @property  NSString *productData
 @property  <HAP2AccessoryServerDelegate> *delegate
 @property  unsigned long connectionState
 @property  BOOL hasDiscoveryAdvertisement
 @property  NSString *reachabilityChangedReason
 @property  HAPDeviceID *deviceID
 @property  BOOL hasPairings
 @property  HMFVersion *protocolVersion
 @property  NSString *name
 @property  NSString *model
 @property  unsigned long category
 @property  unsigned short stateNumber
 @property  unsigned short configNumber
 @property  NSData *setupHash
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL paired
 @property  <HAP2Accessory> *primaryAccessory
 @property  NSArray *accessories
 @property  <HAP2AccessoryServerPairingDriver> *pairingDriver
 @property  <HAP2AccessoryServerBrowserPrivate> *browser
 @property  <HAP2AccessoryServerControllerPrivate> *controller
 @property  HAP2SerializedOperationQueue *operationQueue
 @property  NSString *productData
 @property  <HAP2AccessoryServerDelegate> *delegate
 @property  unsigned long connectionState
 @property  BOOL hasDiscoveryAdvertisement
 @property  NSString *reachabilityChangedReason
 @property  HAPDeviceID *deviceID
 @property  BOOL hasPairings
 @property  HMFVersion *protocolVersion
 @property  NSString *name
 @property  NSString *model
 @property  unsigned long category
 @property  unsigned short stateNumber
 @property  unsigned short configNumber
 @property  NSData *setupHash
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *setupID
 @property  NSString *setupID
 @property  BOOL hasDiscoveryAdvertisement
 @property  NSString *reachabilityChangedReason
 @property  <HAP2AccessoryServerBrowserPrivate> *browser
 @property  <HAP2AccessoryServerControllerPrivate> *controller
 @property  HAP2SerializedOperationQueue *operationQueue
 @property  NSString *productData
 @property  <HAP2AccessoryServerDelegate> *delegate
 @property  unsigned long connectionState
 @property  HAPDeviceID *deviceID
 @property  BOOL hasPairings
 @property  HMFVersion *protocolVersion
 @property  NSString *name
 @property  NSString *model
 @property  unsigned long category
 @property  unsigned short stateNumber
 @property  unsigned short configNumber
 @property  NSData *setupHash
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAP2AccessoryServer new]
  +[HAP2AccessoryServer unpairedAccessoryServerWithMetadata:browser:controller:pairingDriver:operationQueue:]
  +[HAP2AccessoryServer pairedAccessoryServerWithMetadata:browser:controller:operationQueue:]

  // instance methods
  -[HAP2AccessoryServer isPaired]
  -[HAP2AccessoryServer connectionState]
  -[HAP2AccessoryServer operationQueue]
  -[HAP2AccessoryServer name]
  -[HAP2AccessoryServer controller]
  -[HAP2AccessoryServer protocolVersion]
  -[HAP2AccessoryServer isConfirming]
  -[HAP2AccessoryServer .cxx_destruct]
  -[HAP2AccessoryServer deviceID]
  -[HAP2AccessoryServer browser]
  -[HAP2AccessoryServer setDelegate:]
  -[HAP2AccessoryServer init]
  -[HAP2AccessoryServer identifyWithCompletion:]
  -[HAP2AccessoryServer setupID]
  -[HAP2AccessoryServer unpairWithCompletion:]
  -[HAP2AccessoryServer model]
  -[HAP2AccessoryServer delegate]
  -[HAP2AccessoryServer dealloc]
  -[HAP2AccessoryServer category]
  -[HAP2AccessoryServer accessories]
  -[HAP2AccessoryServer primaryAccessory]
  -[HAP2AccessoryServer closeSession]
  -[HAP2AccessoryServer pollAccessory]
  -[HAP2AccessoryServer setSetupID:]
  -[HAP2AccessoryServer productData]
  -[HAP2AccessoryServer setProductData:]
  -[HAP2AccessoryServer setupHash]
  -[HAP2AccessoryServer stateNumber]
  -[HAP2AccessoryServer configNumber]
  -[HAP2AccessoryServer reachabilityChangedReason]
  -[HAP2AccessoryServer hasPairings]
  -[HAP2AccessoryServer setReachabilityChangedReason:]
  -[HAP2AccessoryServer pairingDriver:validatePairingCert:model:completion:]
  -[HAP2AccessoryServer addPairing:completion:]
  -[HAP2AccessoryServer hasDiscoveryAdvertisement]
  -[HAP2AccessoryServer setHasDiscoveryAdvertisement:]
  -[HAP2AccessoryServer pairingDriver]
  -[HAP2AccessoryServer startConfirming]
  -[HAP2AccessoryServer stopConfirming]
  -[HAP2AccessoryServer pairWithDelegate:]
  -[HAP2AccessoryServer becomePairedWithAccessoryServer:]
  -[HAP2AccessoryServer mergeWithNewlyDiscoveredUnpairedAccessoryServer:]
  -[HAP2AccessoryServer becomeUnpairedWithAccessoryServer:]
  -[HAP2AccessoryServer removePairing:completion:]
  -[HAP2AccessoryServer getPairingsWithCompletion:]
  -[HAP2AccessoryServer updateAccessoriesWithReason:]
  -[HAP2AccessoryServer handleNetworkChanged]
  -[HAP2AccessoryServer mergeWithNewlyDiscoveredPairedAccessoryServer:]
  -[HAP2AccessoryServer readValuesForCharacteristics:timeout:completion:]
  -[HAP2AccessoryServer writeValuesForCharacteristics:timeout:completion:]
  -[HAP2AccessoryServer enableNotificationsForCharacteristics:completion:]
  -[HAP2AccessoryServer disableNotificationsForCharacteristics:completion:]
  -[HAP2AccessoryServer handleEvents:]
  -[HAP2AccessoryServer handleUpdatedCharacteristicValues:]
  -[HAP2AccessoryServer handleReestablishedSession]
  -[HAP2AccessoryServer handleLostDiscoveryAdvertisement]
  -[HAP2AccessoryServer handleLostDiscoveryAdvertisementWithWillSleep:]
  -[HAP2AccessoryServer verifyConnection]
  -[HAP2AccessoryServer clearAccessories]
  -[HAP2AccessoryServer pairingDriver:didCompleteWithError:]
  -[HAP2AccessoryServer _performBackgroundPollWithCompletion:]
  -[HAP2AccessoryServer _setBackgroundActivityScheduler:]
  -[HAP2AccessoryServer pairingDriver:doesRequirePermission:accessory:completion:]
  -[HAP2AccessoryServer pairingDriver:didRejectSetupCodeForAccessory:backoffInterval:completion:]
  -[HAP2AccessoryServer pairingDriver:didRequestLocalPairingIdentityWithCompletion:]
  -[HAP2AccessoryServer pairingDriver:didSaveRemotePairingIdentity:completion:]
  -[HAP2AccessoryServer pairingDriver:doesRequireSetupCodeForAccessory:completion:]
  -[HAP2AccessoryServer pairingDriver:authenticateSoftwareAuthUUID:token:completion:]
  -[HAP2AccessoryServer pairingDriver:confirmSoftwareAuthUUID:token:completion:]
  -[HAP2AccessoryServer pairingDriver:didFinishAuthWithError:]
  -[HAP2AccessoryServer pairingDriver:validateSoftwareAuthUUID:token:model:completion:]


HAP2AccessoryServerControllerTimedWriteOperation : HAP2AccessoryServerControllerOperation
 @property  <HAP2EncodedRequest> *executeRequest

  // instance methods
  -[HAP2AccessoryServerControllerTimedWriteOperation .cxx_destruct]
  -[HAP2AccessoryServerControllerTimedWriteOperation _cleanUp]
  -[HAP2AccessoryServerControllerTimedWriteOperation executeRequest]
  -[HAP2AccessoryServerControllerTimedWriteOperation _sendRequest]
  -[HAP2AccessoryServerControllerTimedWriteOperation _parseResponseData:]
  -[HAP2AccessoryServerControllerTimedWriteOperation _sendPrepareRequest]
  -[HAP2AccessoryServerControllerTimedWriteOperation _parsePrepareResponseData:]
  -[HAP2AccessoryServerControllerTimedWriteOperation _sendExecuteRequest]
  -[HAP2AccessoryServerControllerTimedWriteOperation _parseExecuteResponseData:]
  -[HAP2AccessoryServerControllerTimedWriteOperation initWithName:controller:encoding:transport:prepareRequest:executeRequest:endpoint:mimeType:timeout:options:]


HAPService : HMFObject <NSCopying, HMFMerging>
 @property  CBService *cbService
 @property  NSArray *linkedServices
 @property  unsigned long serviceProperties
 @property  NSString *type
 @property  NSNumber *instanceID
 @property  HAPAccessory *accessory
 @property  NSArray *characteristics
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPService hap2_mergeServices:discoveredServices:mergedServices:]

  // instance methods
  -[HAPService serviceProperties]
  -[HAPService instanceID]
  -[HAPService accessory]
  -[HAPService characteristics]
  -[HAPService setCharacteristics:]
  -[HAPService setAccessory:]
  -[HAPService setType:]
  -[HAPService .cxx_destruct]
  -[HAPService isEqualToService:]
  -[HAPService setServiceProperties:]
  -[HAPService isEqual:]
  -[HAPService linkedServices]
  -[HAPService type]
  -[HAPService setLinkedServices:]
  -[HAPService copyWithZone:]
  -[HAPService setInstanceID:]
  -[HAPService mergeObject:]
  -[HAPService shouldMergeObject:]
  -[HAPService propertiesDescription]
  -[HAPService characteristicsOfType:]
  -[HAPService initWithType:instanceID:parsedCharacteristics:serviceProperties:linkedServices:]
  -[HAPService updateAndValidateCharacteristics]
  -[HAPService _validateServiceCharacteristics]
  -[HAPService _updateCharacteristic:]
  -[HAPService _validateMandatoryCharacteristics]
  -[HAPService initWithType:instanceID:]
  -[HAPService cbService]
  -[HAPService setCBService:]
  -[HAPService hap2_mergeWithService:]


HAP2AccessoryServerPairingDriverWorkItem : HAP2LoggingObject <HAP2AccessoryServerPairingDriverWorkItem>
 @property  <HAP2AccessoryServerPairingDriverWorkItemInfo> *pairingDriver
 @property  HAP2SerializedOperationQueue *operationQueue
 @property  HMFActivity *pairingActivity
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HAP2AccessoryServerPairingDriverWorkItem operationQueue]
  -[HAP2AccessoryServerPairingDriverWorkItem .cxx_destruct]
  -[HAP2AccessoryServerPairingDriverWorkItem cancelWithError:]
  -[HAP2AccessoryServerPairingDriverWorkItem finishWithError:]
  -[HAP2AccessoryServerPairingDriverWorkItem pairingActivity]
  -[HAP2AccessoryServerPairingDriverWorkItem runForPairingDriver:]
  -[HAP2AccessoryServerPairingDriverWorkItem pairingDriver]
  -[HAP2AccessoryServerPairingDriverWorkItem maybePairingDriver]
  -[HAP2AccessoryServerPairingDriverWorkItem startWithPairingDriver:]


HAPKeychainItem : HMFObject <NSMutableCopying>
 @property  NSString *accessGroup
 @property  NSNumber *type
 @property  NSString *label
 @property  NSString *itemDescription
 @property  NSString *account
 @property  NSData *valueData
 @property  BOOL syncable
 @property  BOOL invisible
 @property  ^v platformReference
 @property  NSData *genericData
 @property  NSString *viewHint
 @property  NSDate *creationDate

  // class methods
  +[HAPKeychainItem isQueryResultValid:shouldIncludeData:]

  // instance methods
  -[HAPKeychainItem label]
  -[HAPKeychainItem setAccessGroup:]
  -[HAPKeychainItem valueData]
  -[HAPKeychainItem setAccount:]
  -[HAPKeychainItem isSyncable]
  -[HAPKeychainItem account]
  -[HAPKeychainItem setValueData:]
  -[HAPKeychainItem setCreationDate:]
  -[HAPKeychainItem isInvisible]
  -[HAPKeychainItem accessGroup]
  -[HAPKeychainItem setType:]
  -[HAPKeychainItem setSyncable:]
  -[HAPKeychainItem .cxx_destruct]
  -[HAPKeychainItem setGenericData:]
  -[HAPKeychainItem matchesPublicKeyData:]
  -[HAPKeychainItem viewHint]
  -[HAPKeychainItem setItemDescription:]
  -[HAPKeychainItem setPlatformReference:]
  -[HAPKeychainItem mutableCopy]
  -[HAPKeychainItem creationDate]
  -[HAPKeychainItem itemDescription]
  -[HAPKeychainItem type]
  -[HAPKeychainItem mutableCopyWithZone:]
  -[HAPKeychainItem initWithQueryResult:shouldIncludeData:]
  -[HAPKeychainItem dealloc]
  -[HAPKeychainItem setLabel:]
  -[HAPKeychainItem copyWithZone:]
  -[HAPKeychainItem setViewHint:]
  -[HAPKeychainItem genericData]
  -[HAPKeychainItem platformReference]


HAPKeychainStoreRemovedAccessory : HMFObject <HMFLogging>
 @property  NSString *accessoryName
 @property  NSDate *creationDate
 @property  NSError *removeError
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPKeychainStoreRemovedAccessory logCategory]

  // instance methods
  -[HAPKeychainStoreRemovedAccessory .cxx_destruct]
  -[HAPKeychainStoreRemovedAccessory accessoryName]
  -[HAPKeychainStoreRemovedAccessory creationDate]
  -[HAPKeychainStoreRemovedAccessory removeError]
  -[HAPKeychainStoreRemovedAccessory initWithName:creationDate:]
  -[HAPKeychainStoreRemovedAccessory setRemoveError:]


HAPSystemKeychainStore : HMFObject <HAPKeyStore, HMFDumpState, HMFLogging, HAPSystemKeychainStore>
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSString *activeControllerIdentifier
 @property  int keychainStoreUpdatedNotificationToken
 @property  NSString *activeControllerPairingIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPSystemKeychainStore updateAccessoryPairingGenericData:updatedControllerKeyIdentifier:]
  +[HAPSystemKeychainStore serializeDictionary:]
  +[HAPSystemKeychainStore getDictionaryFromGenericData:]
  +[HAPSystemKeychainStore logCategory]
  +[HAPSystemKeychainStore systemStore]
  +[HAPSystemKeychainStore viewHintForType:]

  // instance methods
  -[HAPSystemKeychainStore configure]
  -[HAPSystemKeychainStore allAccessoryPairingKeys]
  -[HAPSystemKeychainStore deletePairingKeysForAccessory:error:]
  -[HAPSystemKeychainStore readPublicKeyForAccessoryName:registeredWithHomeKit:error:]
  -[HAPSystemKeychainStore setActiveControllerIdentifier:]
  -[HAPSystemKeychainStore _auditKeychainItems:managedAccessories:]
  -[HAPSystemKeychainStore _getControllerPublicKey:secretKey:keyPair:username:]
  -[HAPSystemKeychainStore _savePeripheralIdentifier:forAccessoryIdentifier:protocolVersion:resumeSessionID:]
  -[HAPSystemKeychainStore getCurrentiCloudIdentifier:controllerPairingIdentifier:error:]
  -[HAPSystemKeychainStore _deletePeripheralIdentifierForAccessoryIdentifier:]
  -[HAPSystemKeychainStore .cxx_destruct]
  -[HAPSystemKeychainStore saveLocalPairingIdentity:syncable:error:]
  -[HAPSystemKeychainStore getControllerPublicKey:secretKey:username:allowCreation:error:]
  -[HAPSystemKeychainStore _removeControllerKeyPairForKeyType:identifier:leaveTombstone:]
  -[HAPSystemKeychainStore savePublicKey:forAccessoryName:error:]
  -[HAPSystemKeychainStore removeControllerKeyPairLeaveTombstone:error:]
  -[HAPSystemKeychainStore activeControllerIdentifier]
  -[HAPSystemKeychainStore registerAccessoryWithHomeKit:error:]
  -[HAPSystemKeychainStore allKeychainItemsForType:identifier:syncable:error:]
  -[HAPSystemKeychainStore getPeripherialIdentifiersAndAccessoryNames]
  -[HAPSystemKeychainStore establishRelationshipBetweenAccessoryAndControllerKey:error:]
  -[HAPSystemKeychainStore updateAccessoryPairingKey:error:]
  -[HAPSystemKeychainStore _removeAccessoryKeyForName:]
  -[HAPSystemKeychainStore _getControllerPublicKey:secretKey:keyPair:username:allowCreation:forAccessory:error:]
  -[HAPSystemKeychainStore _createControllerPublicKey:secretKey:keyPair:username:]
  -[HAPSystemKeychainStore _getAllAvailableControllerPublicKeys:secretKeys:userNames:]
  -[HAPSystemKeychainStore init]
  -[HAPSystemKeychainStore _getKeychainItemsForAccessGroup:type:account:shouldReturnData:error:]
  -[HAPSystemKeychainStore getOrCreateHH2ControllerKey:secretKey:keyPair:username:]
  -[HAPSystemKeychainStore setQueue:]
  -[HAPSystemKeychainStore _getControllerKeychainItemForKeyType:error:]
  -[HAPSystemKeychainStore _savePublicKey:forAccessoryName:]
  -[HAPSystemKeychainStore removeAllAccessoryKeys:]
  -[HAPSystemKeychainStore getControllerPublicKey:secretKey:keyPair:username:allowCreation:error:]
  -[HAPSystemKeychainStore removeControllerKeyPairForIdentifier:leaveTombstone:error:]
  -[HAPSystemKeychainStore _addKeychainItem:logDuplicateItemError:]
  -[HAPSystemKeychainStore readAccessoryPairingKeyForAccessory:error:]
  -[HAPSystemKeychainStore getHH2ControllerKey]
  -[HAPSystemKeychainStore getAssociatedControllerKeyForAccessory:]
  -[HAPSystemKeychainStore _removeControllerKeyPairForIdentifier:leaveTombstone:]
  -[HAPSystemKeychainStore _getLocalPairingIdentityAllowingCreation:error:]
  -[HAPSystemKeychainStore removeAccessoryKeyForName:error:]
  -[HAPSystemKeychainStore _getPeripheralIdentifier:forAccessoryIdentifier:protocolVersion:resumeSessionID:]
  -[HAPSystemKeychainStore deserializeKeyPair:publicKey:secretKey:error:]
  -[HAPSystemKeychainStore readPeripheralIdentifierForAccessoryIdentifier:protocolVersion:resumeSessionID:error:]
  -[HAPSystemKeychainStore dumpState]
  -[HAPSystemKeychainStore updateCurrentiCloudIdentifier:controllerPairingIdentifier:error:]
  -[HAPSystemKeychainStore keychainStoreUpdatedNotificationToken]
  -[HAPSystemKeychainStore getControllerPublicKey:secretKey:username:allowCreation:forAccessory:error:]
  -[HAPSystemKeychainStore deletePeripheralIdentifierForAccessoryIdentifier:error:]
  -[HAPSystemKeychainStore queue]
  -[HAPSystemKeychainStore _removeKeychainItem:leaveTombstone:]
  -[HAPSystemKeychainStore updatePeripheralIdentifier:forAccessoryIdentifier:protocolVersion:previousVersion:resumeSessionID:error:]
  -[HAPSystemKeychainStore activeControllerPairingIdentifier]
  -[HAPSystemKeychainStore updateActiveControllerPairingIdentifier:]
  -[HAPSystemKeychainStore _getControllerKeychainItemError:]
  -[HAPSystemKeychainStore getOrCreateLocalPairingIdentity:]
  -[HAPSystemKeychainStore dealloc]
  -[HAPSystemKeychainStore deleteKeychainItem:error:]
  -[HAPSystemKeychainStore saveHH2PairingIdentity:syncable:]
  -[HAPSystemKeychainStore _updateCurrentiCloudIdentifier:controllerPairingIdentifier:]
  -[HAPSystemKeychainStore getAllAvailableControllerPublicKeys:secretKeys:userNames:error:]
  -[HAPSystemKeychainStore isAccessoryAssociatedWithControllerKey:controllerID:]
  -[HAPSystemKeychainStore readControllerPairingKeyForAccessory:error:]
  -[HAPSystemKeychainStore getLocalPairingIdentity:]
  -[HAPSystemKeychainStore saveKeyPair:username:syncable:error:]
  -[HAPSystemKeychainStore deleteAllPeripheralIdentifiers:]
  -[HAPSystemKeychainStore getControllerPublicKey:secretKey:keyPair:username:allowCreation:forAccessory:error:]
  -[HAPSystemKeychainStore createAccessoryPairingKey:error:]
  -[HAPSystemKeychainStore _saveKeyPair:username:syncable:keyType:]
  -[HAPSystemKeychainStore removeControllerKeyPairWithError:]
  -[HAPSystemKeychainStore savePeripheralIdentifier:forAccessoryIdentifier:protocolVersion:resumeSessionID:error:]
  -[HAPSystemKeychainStore auditKeysOfManagedAccessories:]
  -[HAPSystemKeychainStore allKeysForType:error:]
  -[HAPSystemKeychainStore _getFirstAvailableControllerKeyChainItemForAccount:publicKey:secretKey:userName:keyPair:error:]
  -[HAPSystemKeychainStore _deleteAllPeripheralIdentifiers]
  -[HAPSystemKeychainStore createHH2ControllerKey:secretKey:keyPair:username:]
  -[HAPSystemKeychainStore _updateKeychainItemToInvisible:]
  -[HAPSystemKeychainStore ensureControllerKeyExistsForAllViews]
  -[HAPSystemKeychainStore _getPublicKey:registeredWithHomeKit:forAccessoryName:]
  -[HAPSystemKeychainStore setKeychainStoreUpdatedNotificationToken:]
  -[HAPSystemKeychainStore _updateKeychainItemWithPlatformIdentifier:keychainItem:error:]
  -[HAPSystemKeychainStore updateKeychainItem:createIfNeeded:error:]


HAPMutableKeychainItem : HAPKeychainItem
 @property  NSString *accessGroup
 @property  NSNumber *type
 @property  NSString *account
 @property  NSData *valueData
 @property  NSString *label
 @property  NSString *itemDescription
 @property  BOOL syncable
 @property  NSString *viewHint
 @property  NSDate *creationDate
 @property  NSData *genericData

  // instance methods
  -[HAPMutableKeychainItem initWithPairingIdentity:]


HAP2AccessoryServerSecureTransportPairVerify : HAP2AccessoryServerSecureTransportBase <HAP2AccessoryServerTransportDelegate, HAPSecuritySessionDelegate>
 @property  @? stateChangeCompletion
 @property  HAPSecuritySession *securitySession
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HAP2AccessoryServerSecureTransportPairVerify _closeWithError:]
  -[HAP2AccessoryServerSecureTransportPairVerify .cxx_destruct]
  -[HAP2AccessoryServerSecureTransportPairVerify _openTransport]
  -[HAP2AccessoryServerSecureTransportPairVerify securitySession:didReceiveLocalPairingIdentityRequestWithError:]
  -[HAP2AccessoryServerSecureTransportPairVerify securitySession:didReceiveRequestForPeerPairingIdentityWithIdentifier:error:]
  -[HAP2AccessoryServerSecureTransportPairVerify securitySession:didReceiveSetupExchangeData:]
  -[HAP2AccessoryServerSecureTransportPairVerify securitySessionDidOpen:]
  -[HAP2AccessoryServerSecureTransportPairVerify securitySession:didCloseWithError:]
  -[HAP2AccessoryServerSecureTransportPairVerify setStateChangeCompletion:]
  -[HAP2AccessoryServerSecureTransportPairVerify _sendSetupExchangeData:]
  -[HAP2AccessoryServerSecureTransportPairVerify stateChangeCompletion]
  -[HAP2AccessoryServerSecureTransportPairVerify securitySession]
  -[HAP2AccessoryServerSecureTransportPairVerify setSecuritySession:]
  -[HAP2AccessoryServerSecureTransportPairVerify _secureTransport]
  -[HAP2AccessoryServerSecureTransportPairVerify initWithTransport:operationQueue:]
  -[HAP2AccessoryServerSecureTransportPairVerify doOpenWithCompletion:]
  -[HAP2AccessoryServerSecureTransportPairVerify doCloseWithError:completion:]


HAPDataStreamHAPAccessoryPayload : NSObject <NSCopying, HAPTLVProtocol>
 @property  NSData *payload
 @property  HAPTLVUnsignedNumberValue *forceClose
 @property  HAPTLVUnsignedNumberValue *accessoryRequestToSend
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPDataStreamHAPAccessoryPayload parsedFromData:error:]

  // instance methods
  -[HAPDataStreamHAPAccessoryPayload setPayload:]
  -[HAPDataStreamHAPAccessoryPayload payload]
  -[HAPDataStreamHAPAccessoryPayload .cxx_destruct]
  -[HAPDataStreamHAPAccessoryPayload init]
  -[HAPDataStreamHAPAccessoryPayload isEqual:]
  -[HAPDataStreamHAPAccessoryPayload parseFromData:error:]
  -[HAPDataStreamHAPAccessoryPayload copyWithZone:]
  -[HAPDataStreamHAPAccessoryPayload serializeWithError:]
  -[HAPDataStreamHAPAccessoryPayload accessoryRequestToSend]
  -[HAPDataStreamHAPAccessoryPayload setForceClose:]
  -[HAPDataStreamHAPAccessoryPayload setAccessoryRequestToSend:]
  -[HAPDataStreamHAPAccessoryPayload forceClose]
  -[HAPDataStreamHAPAccessoryPayload initWithPayload:forceClose:accessoryRequestToSend:]


HAPDataStreamHAPControllerPayload : NSObject <NSCopying, HAPTLVProtocol>
 @property  NSData *payload
 @property  HAPTLVUnsignedNumberValue *sessionIdentifier
 @property  HAPTLVUnsignedNumberValue *forceClose
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPDataStreamHAPControllerPayload parsedFromData:error:]

  // instance methods
  -[HAPDataStreamHAPControllerPayload setPayload:]
  -[HAPDataStreamHAPControllerPayload setSessionIdentifier:]
  -[HAPDataStreamHAPControllerPayload payload]
  -[HAPDataStreamHAPControllerPayload .cxx_destruct]
  -[HAPDataStreamHAPControllerPayload sessionIdentifier]
  -[HAPDataStreamHAPControllerPayload init]
  -[HAPDataStreamHAPControllerPayload isEqual:]
  -[HAPDataStreamHAPControllerPayload parseFromData:error:]
  -[HAPDataStreamHAPControllerPayload copyWithZone:]
  -[HAPDataStreamHAPControllerPayload serializeWithError:]
  -[HAPDataStreamHAPControllerPayload initWithPayload:sessionIdentifier:forceClose:]
  -[HAPDataStreamHAPControllerPayload setForceClose:]
  -[HAPDataStreamHAPControllerPayload forceClose]


HAPDataStreamTransportConfiguration : NSObject <NSCopying, HAPTLVProtocol>
 @property  HAPDataStreamTransportProtocolWrapper *transport
 @property  HAPTLVUnsignedNumberValue *maximumControllerTransportMTU
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPDataStreamTransportConfiguration parsedFromData:error:]

  // instance methods
  -[HAPDataStreamTransportConfiguration setTransport:]
  -[HAPDataStreamTransportConfiguration transport]
  -[HAPDataStreamTransportConfiguration .cxx_destruct]
  -[HAPDataStreamTransportConfiguration init]
  -[HAPDataStreamTransportConfiguration isEqual:]
  -[HAPDataStreamTransportConfiguration parseFromData:error:]
  -[HAPDataStreamTransportConfiguration copyWithZone:]
  -[HAPDataStreamTransportConfiguration serializeWithError:]
  -[HAPDataStreamTransportConfiguration maximumControllerTransportMTU]
  -[HAPDataStreamTransportConfiguration setMaximumControllerTransportMTU:]
  -[HAPDataStreamTransportConfiguration initWithTransport:maximumControllerTransportMTU:]


HAPDataStreamTransportInterruptPayload : NSObject <NSCopying, HAPTLVProtocol>
 @property  NSData *requestToSendIdentifiers
 @property  HAPTLVUnsignedNumberValue *dataStreamTransportInterruptSequenceNumber
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPDataStreamTransportInterruptPayload parsedFromData:error:]

  // instance methods
  -[HAPDataStreamTransportInterruptPayload .cxx_destruct]
  -[HAPDataStreamTransportInterruptPayload init]
  -[HAPDataStreamTransportInterruptPayload isEqual:]
  -[HAPDataStreamTransportInterruptPayload parseFromData:error:]
  -[HAPDataStreamTransportInterruptPayload copyWithZone:]
  -[HAPDataStreamTransportInterruptPayload serializeWithError:]
  -[HAPDataStreamTransportInterruptPayload requestToSendIdentifiers]
  -[HAPDataStreamTransportInterruptPayload setRequestToSendIdentifiers:]
  -[HAPDataStreamTransportInterruptPayload setDataStreamTransportInterruptSequenceNumber:]
  -[HAPDataStreamTransportInterruptPayload dataStreamTransportInterruptSequenceNumber]
  -[HAPDataStreamTransportInterruptPayload initWithRequestToSendIdentifiers:dataStreamTransportInterruptSequenceNumber:]


HAPDataStreamTransportParameters : NSObject <NSCopying, HAPTLVProtocol>
 @property  HAPTLVUnsignedNumberValue *tcpListeningPort
 @property  HAPTLVUnsignedNumberValue *sessionIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPDataStreamTransportParameters parsedFromData:error:]

  // instance methods
  -[HAPDataStreamTransportParameters setSessionIdentifier:]
  -[HAPDataStreamTransportParameters tcpListeningPort]
  -[HAPDataStreamTransportParameters .cxx_destruct]
  -[HAPDataStreamTransportParameters sessionIdentifier]
  -[HAPDataStreamTransportParameters init]
  -[HAPDataStreamTransportParameters isEqual:]
  -[HAPDataStreamTransportParameters setTcpListeningPort:]
  -[HAPDataStreamTransportParameters parseFromData:error:]
  -[HAPDataStreamTransportParameters copyWithZone:]
  -[HAPDataStreamTransportParameters serializeWithError:]
  -[HAPDataStreamTransportParameters initWithTcpListeningPort:sessionIdentifier:]


HAPDataStreamTransportSetup : NSObject <NSCopying, HAPTLVProtocol>
 @property  HAPDataStreamTransportCommandWrapper *command
 @property  HAPDataStreamTransportProtocolWrapper *transportType
 @property  NSData *controllerKeySalt
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPDataStreamTransportSetup parsedFromData:error:]

  // instance methods
  -[HAPDataStreamTransportSetup setTransportType:]
  -[HAPDataStreamTransportSetup transportType]
  -[HAPDataStreamTransportSetup setCommand:]
  -[HAPDataStreamTransportSetup .cxx_destruct]
  -[HAPDataStreamTransportSetup command]
  -[HAPDataStreamTransportSetup init]
  -[HAPDataStreamTransportSetup isEqual:]
  -[HAPDataStreamTransportSetup parseFromData:error:]
  -[HAPDataStreamTransportSetup copyWithZone:]
  -[HAPDataStreamTransportSetup serializeWithError:]
  -[HAPDataStreamTransportSetup controllerKeySalt]
  -[HAPDataStreamTransportSetup initWithCommand:transportType:controllerKeySalt:]
  -[HAPDataStreamTransportSetup setControllerKeySalt:]


HAPDataStreamTransportSetupResponse : NSObject <NSCopying, HAPTLVProtocol>
 @property  HAPDataStreamTransportCommandStatusWrapper *status
 @property  HAPDataStreamTransportParameters *parameters
 @property  NSData *accessoryKeySalt
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPDataStreamTransportSetupResponse parsedFromData:error:]

  // instance methods
  -[HAPDataStreamTransportSetupResponse .cxx_destruct]
  -[HAPDataStreamTransportSetupResponse setParameters:]
  -[HAPDataStreamTransportSetupResponse init]
  -[HAPDataStreamTransportSetupResponse isEqual:]
  -[HAPDataStreamTransportSetupResponse status]
  -[HAPDataStreamTransportSetupResponse parseFromData:error:]
  -[HAPDataStreamTransportSetupResponse setStatus:]
  -[HAPDataStreamTransportSetupResponse copyWithZone:]
  -[HAPDataStreamTransportSetupResponse parameters]
  -[HAPDataStreamTransportSetupResponse serializeWithError:]
  -[HAPDataStreamTransportSetupResponse accessoryKeySalt]
  -[HAPDataStreamTransportSetupResponse setAccessoryKeySalt:]
  -[HAPDataStreamTransportSetupResponse initWithStatus:parameters:accessoryKeySalt:]


HAPDataStreamTransportSupportedConfiguration : NSObject <NSCopying, HAPTLVProtocol>
 @property  NSMutableArray *configurations
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPDataStreamTransportSupportedConfiguration parsedFromData:error:]

  // instance methods
  -[HAPDataStreamTransportSupportedConfiguration configurations]
  -[HAPDataStreamTransportSupportedConfiguration .cxx_destruct]
  -[HAPDataStreamTransportSupportedConfiguration init]
  -[HAPDataStreamTransportSupportedConfiguration isEqual:]
  -[HAPDataStreamTransportSupportedConfiguration initWithConfigurations:]
  -[HAPDataStreamTransportSupportedConfiguration setConfigurations:]
  -[HAPDataStreamTransportSupportedConfiguration parseFromData:error:]
  -[HAPDataStreamTransportSupportedConfiguration copyWithZone:]
  -[HAPDataStreamTransportSupportedConfiguration serializeWithError:]


HAPWACAccessoryClient : HMFObject <HMFLogging>
 @property  HMFUnfairLock *lock
 @property  HAPWACAccessory *hapWACAccessory
 @property  NSMutableSet *compatible2Pt4Networks
 @property  NSDictionary *currentNetworkInfo
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  @? completionHandler
 @property  EasyConfigDevice *ezConfigDevice
 @property  HAPAccessoryServer *server
 @property  HAPWACAccessoryBrowser *brower
 @property  unsigned long restartPairingCount
 @property  @? restartEasyConfigBlock
 @property  <HAPWACAccessoryClientDelegate> *clientDelegate
 @property  BOOL metricSubmitted
 @property  double joinLatency
 @property  double restoreLatency
 @property  double configurationLatency
 @property  double preConfigDiscoveryTime
 @property  double postConfigDiscoveryTime
 @property  double setupCodeDelay
 @property  NSDate *setupCodeRequestTime
 @property  unsigned long retryCount
 @property  unsigned long state
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPWACAccessoryClient logCategory]

  // instance methods
  -[HAPWACAccessoryClient _continuePairingWithSetupCode:]
  -[HAPWACAccessoryClient restart]
  -[HAPWACAccessoryClient _joinAccessoryNetworkWithCompletion:]
  -[HAPWACAccessoryClient .cxx_destruct]
  -[HAPWACAccessoryClient setState:]
  -[HAPWACAccessoryClient init]
  -[HAPWACAccessoryClient setCompletionHandler:]
  -[HAPWACAccessoryClient state]
  -[HAPWACAccessoryClient server]
  -[HAPWACAccessoryClient clientDelegate]
  -[HAPWACAccessoryClient workQueue]
  -[HAPWACAccessoryClient setRetryCount:]
  -[HAPWACAccessoryClient retryCount]
  -[HAPWACAccessoryClient completionHandler]
  -[HAPWACAccessoryClient lock]
  -[HAPWACAccessoryClient hapWACAccessory]
  -[HAPWACAccessoryClient brower]
  -[HAPWACAccessoryClient _reportProgress:]
  -[HAPWACAccessoryClient setMetricSubmitted:]
  -[HAPWACAccessoryClient metricSubmitted]
  -[HAPWACAccessoryClient dumpStatsWithError:]
  -[HAPWACAccessoryClient initWithWACAccessory:server:browser:compatible2Pt4Networks:]
  -[HAPWACAccessoryClient registerClientDelegate:]
  -[HAPWACAccessoryClient joinAccessoryNetworkWithCompletion:]
  -[HAPWACAccessoryClient performEasyConfigWithParingPrompt:performPairSetup:isSplit:pairingRequest:completion:]
  -[HAPWACAccessoryClient continuePairingWithSetupCode:]
  -[HAPWACAccessoryClient stopEasyConfig]
  -[HAPWACAccessoryClient restoreNetworkWithCompletion:]
  -[HAPWACAccessoryClient joinLatency]
  -[HAPWACAccessoryClient restoreLatency]
  -[HAPWACAccessoryClient configurationLatency]
  -[HAPWACAccessoryClient preConfigDiscoveryTime]
  -[HAPWACAccessoryClient postConfigDiscoveryTime]
  -[HAPWACAccessoryClient setupCodeDelay]
  -[HAPWACAccessoryClient _callJoinCompletion:withError:]
  -[HAPWACAccessoryClient _restoreNetworkWithCompletion:]
  -[HAPWACAccessoryClient setCurrentNetworkInfo:]
  -[HAPWACAccessoryClient currentNetworkInfo]
  -[HAPWACAccessoryClient setJoinLatency:]
  -[HAPWACAccessoryClient compatible2Pt4Networks]
  -[HAPWACAccessoryClient _joinAccessory:completion:]
  -[HAPWACAccessoryClient setRestoreLatency:]
  -[HAPWACAccessoryClient _callRestoreCompletion:withError:]
  -[HAPWACAccessoryClient setConfigurationLatency:]
  -[HAPWACAccessoryClient _performEasyConfigWithPairingPrompt:performPairSetup:isSplit:pairingRequest:completion:]
  -[HAPWACAccessoryClient ezConfigDevice]
  -[HAPWACAccessoryClient setRestartEasyConfigBlock:]
  -[HAPWACAccessoryClient setEzConfigDevice:]
  -[HAPWACAccessoryClient setSetupCodeRequestTime:]
  -[HAPWACAccessoryClient restartPairingCount]
  -[HAPWACAccessoryClient _retoreNetworkAndReportError:withCompletion:]
  -[HAPWACAccessoryClient setPreConfigDiscoveryTime:]
  -[HAPWACAccessoryClient setPostConfigDiscoveryTime:]
  -[HAPWACAccessoryClient _performPostConfig]
  -[HAPWACAccessoryClient setupCodeRequestTime]
  -[HAPWACAccessoryClient setSetupCodeDelay:]
  -[HAPWACAccessoryClient restartEasyConfigBlock]
  -[HAPWACAccessoryClient setRestartPairingCount:]
  -[HAPWACAccessoryClient _joinCompleteWithStatus:]


HAP2AccessoryServerControllerReadOperation : HAP2AccessoryServerControllerOperation
  // instance methods
  -[HAP2AccessoryServerControllerReadOperation .cxx_destruct]
  -[HAP2AccessoryServerControllerReadOperation _cleanUp]
  -[HAP2AccessoryServerControllerReadOperation _sendRequest]
  -[HAP2AccessoryServerControllerReadOperation initWithName:controller:encoding:transport:readRequest:endpoint:mimeType:timeout:options:]


ATVModel : NSObject
 @property  NSDictionary *atvLUT

  // class methods
  +[ATVModel addTuple:ToLUT:]
  +[ATVModel atvStateFromState:]

  // instance methods
  -[ATVModel .cxx_destruct]
  -[ATVModel init]
  -[ATVModel atvLUT]
  -[ATVModel findTupleForATVState:]
  -[ATVModel setAtvLUT:]


HAPBTLEReachabilityScanTuple : HMFObject
 @property  @? completion
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSString *identifier

  // class methods
  +[HAPBTLEReachabilityScanTuple reachabilityScanTupleWithCompletion:workQueue:identifier:]

  // instance methods
  -[HAPBTLEReachabilityScanTuple completion]
  -[HAPBTLEReachabilityScanTuple .cxx_destruct]
  -[HAPBTLEReachabilityScanTuple identifier]
  -[HAPBTLEReachabilityScanTuple queue]


HAPDiscoveredBTLEAccessoryServerTuple : HMFObject
 @property  HAPAccessoryServerBTLE *accessoryServer
 @property  double lastSeen

  // class methods
  +[HAPDiscoveredBTLEAccessoryServerTuple discoveredAccessoryServerTupleWithAccessoryServer:]

  // instance methods
  -[HAPDiscoveredBTLEAccessoryServerTuple setLastSeen:]
  -[HAPDiscoveredBTLEAccessoryServerTuple .cxx_destruct]
  -[HAPDiscoveredBTLEAccessoryServerTuple lastSeen]
  -[HAPDiscoveredBTLEAccessoryServerTuple accessoryServer]


HAPRecentlySeenPairedBTLEPeripheralTuple : HMFObject
 @property  HAPBLEPeripheral *blePeripheral
 @property  BOOL notifyingCharacteristicUpdated
 @property  BOOL monitorState
 @property  unsigned long connectionPriority
 @property  NSNumber *stateNumber
 @property  NSNumber *configNumber
 @property  NSNumber *category

  // instance methods
  -[HAPRecentlySeenPairedBTLEPeripheralTuple .cxx_destruct]
  -[HAPRecentlySeenPairedBTLEPeripheralTuple category]
  -[HAPRecentlySeenPairedBTLEPeripheralTuple setCategory:]
  -[HAPRecentlySeenPairedBTLEPeripheralTuple stateNumber]
  -[HAPRecentlySeenPairedBTLEPeripheralTuple setStateNumber:]
  -[HAPRecentlySeenPairedBTLEPeripheralTuple configNumber]
  -[HAPRecentlySeenPairedBTLEPeripheralTuple setConfigNumber:]
  -[HAPRecentlySeenPairedBTLEPeripheralTuple updateWithPeripheral:]
  -[HAPRecentlySeenPairedBTLEPeripheralTuple blePeripheral]
  -[HAPRecentlySeenPairedBTLEPeripheralTuple setMonitorState:]
  -[HAPRecentlySeenPairedBTLEPeripheralTuple setConnectionPriority:]
  -[HAPRecentlySeenPairedBTLEPeripheralTuple monitorState]
  -[HAPRecentlySeenPairedBTLEPeripheralTuple connectionPriority]
  -[HAPRecentlySeenPairedBTLEPeripheralTuple initRecentlySeenPairedHAPBLEPeripheral:]
  -[HAPRecentlySeenPairedBTLEPeripheralTuple updatePairedPeripheralConfiguration:connectionPriority:]
  -[HAPRecentlySeenPairedBTLEPeripheralTuple setBlePeripheral:]
  -[HAPRecentlySeenPairedBTLEPeripheralTuple notifyingCharacteristicUpdated]
  -[HAPRecentlySeenPairedBTLEPeripheralTuple setNotifyingCharacteristicUpdated:]


HAPAccessoryServerBrowserBTLE : HAPAccessoryServerBrowser <CBCentralManagerDelegate, HAPAccessoryServerBrowserWiProxBTLEDelegate, HMFLogging>
 @property  unsigned long qosLimits
 @property  <HAPAccessoryServerBrowserBTLEDelegate> *delegate
 @property  NSObject<OS_dispatch_queue> *delegateQueue
 @property  CBCentralManager *centralManager
 @property  CBConnectionsObserver *connectionsObserver
 @property  HAPAccessoryServerBrowserWiProxBTLE *hapWiProxBLEBrowser
 @property  NSMapTable *discoveredPeripheralsWithAccessories
 @property  NSMapTable *recentlySeenPairedPeripherals
 @property  NSMutableArray *powerOnCentralManagerCompletions
 @property  @? reachabilityCompletion
 @property  NSMutableOrderedSet *peripheralsWithConnectionRequests
 @property  NSMutableArray *peripheralsPendingConnection
 @property  NSObject<OS_dispatch_source> *targetedScanTimer
 @property  HMFActivity *targetedScanActivity
 @property  NSMutableArray *targetedScanAccessoryIdentifiers
 @property  NSMapTable *identifersWithReachabilityScanTuples
 @property  long long peripheralDisconnectionTimeout
 @property  NSMapTable *peripheralDisconnectionMonitorMap
 @property  long long scanState
 @property  BOOL performingGeneralScan
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPAccessoryServerBrowserBTLE HAPBluetoothRouteModeToString:]
  +[HAPAccessoryServerBrowserBTLE logCategory]

  // instance methods
  -[HAPAccessoryServerBrowserBTLE setDelegate:queue:]
  -[HAPAccessoryServerBrowserBTLE connectionsObserver]
  -[HAPAccessoryServerBrowserBTLE setTargetedScanTimer:]
  -[HAPAccessoryServerBrowserBTLE resetPairedAccessories]
  -[HAPAccessoryServerBrowserBTLE probeReachabilityForAccessoryServersWithIdentifiers:onQueue:withCompletion:]
  -[HAPAccessoryServerBrowserBTLE peripheralsPendingConnection]
  -[HAPAccessoryServerBrowserBTLE _probeReachabilityForAccessoryServersWithIdentifiers:onQueue:withCompletion:]
  -[HAPAccessoryServerBrowserBTLE isPerformingGeneralScan]
  -[HAPAccessoryServerBrowserBTLE _startScanningForPairingPeers]
  -[HAPAccessoryServerBrowserBTLE delegateQueue]
  -[HAPAccessoryServerBrowserBTLE targetedScanTimer]
  -[HAPAccessoryServerBrowserBTLE retrieveCurrentStateForIdentifer:stateNumber:isReachable:linkQuality:lastSeen:]
  -[HAPAccessoryServerBrowserBTLE centralManager:didFailToConnectPeripheral:error:]
  -[HAPAccessoryServerBrowserBTLE stopDiscoveringAccessoryServers]
  -[HAPAccessoryServerBrowserBTLE scanState]
  -[HAPAccessoryServerBrowserBTLE _discoverAccessoryServerWithIdentifier:]
  -[HAPAccessoryServerBrowserBTLE _invalidTargettedScanActivity]
  -[HAPAccessoryServerBrowserBTLE setPowerOnCentralManagerCompletions:]
  -[HAPAccessoryServerBrowserBTLE setDelegateQueue:]
  -[HAPAccessoryServerBrowserBTLE _hasPairedAccessoriesOfType:]
  -[HAPAccessoryServerBrowserBTLE setCentralManager:]
  -[HAPAccessoryServerBrowserBTLE _cbPeripheralForHAPBLEPeripheral:routeMode:]
  -[HAPAccessoryServerBrowserBTLE centralManager:didDisconnectPeripheral:error:]
  -[HAPAccessoryServerBrowserBTLE _matchAccessoryServerWithSetupID:serverIdentifier:completionHandler:]
  -[HAPAccessoryServerBrowserBTLE targetedScanActivity]
  -[HAPAccessoryServerBrowserBTLE _connectHAPPeripheralWhenAllowed:]
  -[HAPAccessoryServerBrowserBTLE configureAccessoryWithIdentifier:trackState:connectionPriority:]
  -[HAPAccessoryServerBrowserBTLE _disconectFromHAPBLEPeripheral:cbPeripheral:]
  -[HAPAccessoryServerBrowserBTLE .cxx_destruct]
  -[HAPAccessoryServerBrowserBTLE _forgetPairedAccesoryWithIdentifier:]
  -[HAPAccessoryServerBrowserBTLE _removeIdentifiersForReachabilityScan]
  -[HAPAccessoryServerBrowserBTLE setPerformingGeneralScan:]
  -[HAPAccessoryServerBrowserBTLE _createHAPAccessoryAndNotifyDelegateWithPeripheral:name:pairingUsername:statusFlags:stateNumber:stateChanged:connectReason:configNumber:category:connectionIdleTime:format:setupHash:encryptedPayload:whbStableIdentifier:]
  -[HAPAccessoryServerBrowserBTLE _stopActiveScanWithForce:]
  -[HAPAccessoryServerBrowserBTLE centralManager:didConnectPeripheral:]
  -[HAPAccessoryServerBrowserBTLE _cachedCharacteristicForInstanceID:identifier:]
  -[HAPAccessoryServerBrowserBTLE peripheralsWithConnectionRequests]
  -[HAPAccessoryServerBrowserBTLE centralManagerDidUpdateState:]
  -[HAPAccessoryServerBrowserBTLE setRecentlySeenPairedPeripherals:]
  -[HAPAccessoryServerBrowserBTLE _blePeripheralForCBPeripheral:]
  -[HAPAccessoryServerBrowserBTLE setPeripheralDisconnectionTimeout:]
  -[HAPAccessoryServerBrowserBTLE setDelegate:]
  -[HAPAccessoryServerBrowserBTLE _shouldCreateHAPAccessoryServerWithIdentifier:statusFlags:stateNumber:category:configNumber:name:forPeripheral:advertisementFormat:setupHash:stateChanged:connectReason:]
  -[HAPAccessoryServerBrowserBTLE discoveredPeripheralsWithAccessories]
  -[HAPAccessoryServerBrowserBTLE _startScanningForReachability:]
  -[HAPAccessoryServerBrowserBTLE startDiscoveringAccessoryServers]
  -[HAPAccessoryServerBrowserBTLE markNotifyingCharacteristicUpdatedForIdentifier:]
  -[HAPAccessoryServerBrowserBTLE linkType]
  -[HAPAccessoryServerBrowserBTLE _didDiscoverPeripheral:accessoryName:pairingIdentifier:format:statusFlags:stateNumber:category:configNumber:setupHash:encryptedPayload:whbStableIdentifier:]
  -[HAPAccessoryServerBrowserBTLE failedToConnectHAPPeripheral:error:]
  -[HAPAccessoryServerBrowserBTLE _removeFromPendingConnections:]
  -[HAPAccessoryServerBrowserBTLE setConnectionsObserver:]
  -[HAPAccessoryServerBrowserBTLE centralManager]
  -[HAPAccessoryServerBrowserBTLE _delegateRespondsToSelector:]
  -[HAPAccessoryServerBrowserBTLE _canStartScan]
  -[HAPAccessoryServerBrowserBTLE _connectPendingConnections]
  -[HAPAccessoryServerBrowserBTLE setTargetedScanActivity:]
  -[HAPAccessoryServerBrowserBTLE resetLastSeenForAccessoryServersWithIdentifers:]
  -[HAPAccessoryServerBrowserBTLE setTargetedScanAccessoryIdentifiers:]
  -[HAPAccessoryServerBrowserBTLE _callPowerOnCompletionsWithError:]
  -[HAPAccessoryServerBrowserBTLE _startDiscoveringAccessoryServers]
  -[HAPAccessoryServerBrowserBTLE _stopMonitorDisconnectionOfCBPeripheral:]
  -[HAPAccessoryServerBrowserBTLE removeCachedAccessoryWithIdentifier:]
  -[HAPAccessoryServerBrowserBTLE initWithQueue:]
  -[HAPAccessoryServerBrowserBTLE _performTimedConnectionRequestForIdentifier:]
  -[HAPAccessoryServerBrowserBTLE _notifyDelegatesOfRemovedAccessoryServer:error:]
  -[HAPAccessoryServerBrowserBTLE disconnectedHAPPeripheral:error:]
  -[HAPAccessoryServerBrowserBTLE setReachabilityCompletionHandler:]
  -[HAPAccessoryServerBrowserBTLE setConnectionLatency:forPeripheral:]
  -[HAPAccessoryServerBrowserBTLE updateCachedStateForIdentifier:stateNumber:]
  -[HAPAccessoryServerBrowserBTLE _recentlySeenPairedPeripheralTupleWithPeripheral:]
  -[HAPAccessoryServerBrowserBTLE identifersWithReachabilityScanTuples]
  -[HAPAccessoryServerBrowserBTLE _addToPendingConnections:]
  -[HAPAccessoryServerBrowserBTLE connectToBTLEAccessoryServer:]
  -[HAPAccessoryServerBrowserBTLE matchAccessoryServerWithSetupID:serverIdentifier:completionHandler:]
  -[HAPAccessoryServerBrowserBTLE remoteBrowsingEnabledUpdated]
  -[HAPAccessoryServerBrowserBTLE recentlySeenPairedPeripherals]
  -[HAPAccessoryServerBrowserBTLE disconnectFromBTLEAccessoryServer:]
  -[HAPAccessoryServerBrowserBTLE hapWiProxBLEBrowser]
  -[HAPAccessoryServerBrowserBTLE delegate]
  -[HAPAccessoryServerBrowserBTLE stopTrackingBTLEAccessoriesWithIdentifiers:]
  -[HAPAccessoryServerBrowserBTLE setHapWiProxBLEBrowser:]
  -[HAPAccessoryServerBrowserBTLE _monitorDisconnectionOfHAPPeripheral:peripheral:]
  -[HAPAccessoryServerBrowserBTLE _blePeripheralForAccessoryServerIdentifier:]
  -[HAPAccessoryServerBrowserBTLE configureBTLEQoSLimits:]
  -[HAPAccessoryServerBrowserBTLE _cbPeripheralForPeripheralUUID:stableIdentifier:routeMode:]
  -[HAPAccessoryServerBrowserBTLE _performTargetedScanForAccessoryWithIdentifier:]
  -[HAPAccessoryServerBrowserBTLE targetedScanAccessoryIdentifiers]
  -[HAPAccessoryServerBrowserBTLE _discoveredServerForCBPeripheral:]
  -[HAPAccessoryServerBrowserBTLE reachabilityCompletion]
  -[HAPAccessoryServerBrowserBTLE _updateTargetedScanTimer]
  -[HAPAccessoryServerBrowserBTLE hapCharacteristicsForEncryptedPayload:identifier:shouldConnect:]
  -[HAPAccessoryServerBrowserBTLE cachedAccessoryForIdentifier:]
  -[HAPAccessoryServerBrowserBTLE setReachabilityCompletion:]
  -[HAPAccessoryServerBrowserBTLE pauseScans]
  -[HAPAccessoryServerBrowserBTLE _getDiscoveredPeripheralMatchingIdentifier:]
  -[HAPAccessoryServerBrowserBTLE _handleTargetedScanTimeout]
  -[HAPAccessoryServerBrowserBTLE _hasRecentlySeenAccessoriesWithIdentifiers:]
  -[HAPAccessoryServerBrowserBTLE setScanState:]
  -[HAPAccessoryServerBrowserBTLE discoverAccessoryServerWithIdentifier:]
  -[HAPAccessoryServerBrowserBTLE powerOnCentralManagerCompletions]
  -[HAPAccessoryServerBrowserBTLE updateStateForIdentifier:stateNumber:]
  -[HAPAccessoryServerBrowserBTLE accessoryServerBrowserBTLE:didDiscoverHAPPeripheral:]
  -[HAPAccessoryServerBrowserBTLE peripheralDisconnectionTimeout]
  -[HAPAccessoryServerBrowserBTLE setQosLimits:]
  -[HAPAccessoryServerBrowserBTLE connectedHAPPeripheral:]
  -[HAPAccessoryServerBrowserBTLE setPeripheralsPendingConnection:]
  -[HAPAccessoryServerBrowserBTLE _parseAdvertisementData:forPeripheral:name:pairingUsername:statusFlags:stateNumber:category:configNumber:setupHash:]
  -[HAPAccessoryServerBrowserBTLE peripheralDisconnectionMonitorMap]
  -[HAPAccessoryServerBrowserBTLE _powerOnCentralManagerWithCompletion:]
  -[HAPAccessoryServerBrowserBTLE retrieveCBPeripheralWithUUID:blePeripheral:]
  -[HAPAccessoryServerBrowserBTLE setDiscoveredPeripheralsWithAccessories:]
  -[HAPAccessoryServerBrowserBTLE centralManager:didDiscoverPeripheral:advertisementData:RSSI:]
  -[HAPAccessoryServerBrowserBTLE _reportReachabilityForAccessoryWithIdentifier:]
  -[HAPAccessoryServerBrowserBTLE qosLimits]
  -[HAPAccessoryServerBrowserBTLE setPeripheralDisconnectionMonitorMap:]
  -[HAPAccessoryServerBrowserBTLE setIdentifersWithReachabilityScanTuples:]
  -[HAPAccessoryServerBrowserBTLE _performTimedScanForIdentifiers:workQueue:withCompletion:]
  -[HAPAccessoryServerBrowserBTLE updateBroadcastKeyForIdentifer:key:keyUpdatedStateNumber:keyUpdatedTime:]
  -[HAPAccessoryServerBrowserBTLE setPeripheralsWithConnectionRequests:]
  -[HAPAccessoryServerBrowserBTLE deRegisterAccessoryWithIdentifier:]
  -[HAPAccessoryServerBrowserBTLE saveCacheToDisk:]


HAP2AccessoryServerTransportBase : HAP2LoggingObject <HAP2AccessoryServerTransportCommon>
 @property  HAP2PropertyLock *propertyLock
 @property  HAP2SerializedOperationQueue *operationQueue
 @property  NSObject<OS_dispatch_queue> *delegateQueue
 @property  double maxRequestTimeout
 @property  unsigned long state
 @property  <HAP2AccessoryServerTransportCommon> *underlyingTransport
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAP2AccessoryServerTransportBase new]

  // instance methods
  -[HAP2AccessoryServerTransportBase propertyLock]
  -[HAP2AccessoryServerTransportBase operationQueue]
  -[HAP2AccessoryServerTransportBase delegateQueue]
  -[HAP2AccessoryServerTransportBase .cxx_destruct]
  -[HAP2AccessoryServerTransportBase init]
  -[HAP2AccessoryServerTransportBase state]
  -[HAP2AccessoryServerTransportBase protocolFeaturesForVersion:]
  -[HAP2AccessoryServerTransportBase sendRequest:completion:]
  -[HAP2AccessoryServerTransportBase closeWithError:completion:]
  -[HAP2AccessoryServerTransportBase updateMaxRequestTimeout:]
  -[HAP2AccessoryServerTransportBase openWithCompletion:]
  -[HAP2AccessoryServerTransportBase wellKnownEndpoint:]
  -[HAP2AccessoryServerTransportBase mimeTypeForWellKnownEndpoint:]
  -[HAP2AccessoryServerTransportBase doOpenWithCompletion:]
  -[HAP2AccessoryServerTransportBase doCloseWithError:completion:]
  -[HAP2AccessoryServerTransportBase doUpdateMaxRequestTimeout:]
  -[HAP2AccessoryServerTransportBase setMaxRequestTimeout:]
  -[HAP2AccessoryServerTransportBase didChangeStateWithError:]
  -[HAP2AccessoryServerTransportBase doSendRequest:completion:]
  -[HAP2AccessoryServerTransportBase endpointForCharacteristic:]
  -[HAP2AccessoryServerTransportBase endpointForCharacteristics:]
  -[HAP2AccessoryServerTransportBase mimeTypeForCharacteristicRequests]
  -[HAP2AccessoryServerTransportBase mergeWithNewTransport:]
  -[HAP2AccessoryServerTransportBase maxRequestTimeout]
  -[HAP2AccessoryServerTransportBase underlyingTransport]
  -[HAP2AccessoryServerTransportBase initWithOperationQueue:delegateQueue:]
  -[HAP2AccessoryServerTransportBase didDisconnectWithError:]


HAP2AccessoryServerTransportBaseOperation : HAP2AsynchronousOperation
  // instance methods
  -[HAP2AccessoryServerTransportBaseOperation .cxx_destruct]
  -[HAP2AccessoryServerTransportBaseOperation initWithName:transport:]


HAP2AccessoryServerTransportBaseOperationOpen : HAP2AccessoryServerTransportBaseOperation
  // instance methods
  -[HAP2AccessoryServerTransportBaseOperationOpen main]
  -[HAP2AccessoryServerTransportBaseOperationOpen .cxx_destruct]
  -[HAP2AccessoryServerTransportBaseOperationOpen initWithTransport:completion:]


HAP2AccessoryServerTransportBaseOperationSendRequest : HAP2AccessoryServerTransportBaseOperation
  // instance methods
  -[HAP2AccessoryServerTransportBaseOperationSendRequest main]
  -[HAP2AccessoryServerTransportBaseOperationSendRequest .cxx_destruct]
  -[HAP2AccessoryServerTransportBaseOperationSendRequest initWithTransport:request:completion:]


HAP2AccessoryServerTransportBaseOperationClose : HAP2AccessoryServerTransportBaseOperation
  // instance methods
  -[HAP2AccessoryServerTransportBaseOperationClose main]
  -[HAP2AccessoryServerTransportBaseOperationClose .cxx_destruct]
  -[HAP2AccessoryServerTransportBaseOperationClose initWithTransport:desiredError:completion:]


HAPStagingNotReadyReasonsWrapper : NSObject <NSCopying, HAPTLVProtocol>
 @property  unsigned long value
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPStagingNotReadyReasonsWrapper parsedFromData:error:]

  // instance methods
  -[HAPStagingNotReadyReasonsWrapper init]
  -[HAPStagingNotReadyReasonsWrapper isEqual:]
  -[HAPStagingNotReadyReasonsWrapper initWithValue:]
  -[HAPStagingNotReadyReasonsWrapper setValue:]
  -[HAPStagingNotReadyReasonsWrapper value]
  -[HAPStagingNotReadyReasonsWrapper parseFromData:error:]
  -[HAPStagingNotReadyReasonsWrapper copyWithZone:]
  -[HAPStagingNotReadyReasonsWrapper serializeWithError:]


HAPUpdateNotReadyReasonsWrapper : NSObject <NSCopying, HAPTLVProtocol>
 @property  unsigned long value
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPUpdateNotReadyReasonsWrapper parsedFromData:error:]

  // instance methods
  -[HAPUpdateNotReadyReasonsWrapper init]
  -[HAPUpdateNotReadyReasonsWrapper isEqual:]
  -[HAPUpdateNotReadyReasonsWrapper initWithValue:]
  -[HAPUpdateNotReadyReasonsWrapper setValue:]
  -[HAPUpdateNotReadyReasonsWrapper value]
  -[HAPUpdateNotReadyReasonsWrapper parseFromData:error:]
  -[HAPUpdateNotReadyReasonsWrapper copyWithZone:]
  -[HAPUpdateNotReadyReasonsWrapper serializeWithError:]


HAPHardwareFinish : NSObject <NSCopying, HAPTLVProtocol>
 @property  HAPTLVUnsignedNumberValue *RGBColorValue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPHardwareFinish parsedFromData:error:]

  // instance methods
  -[HAPHardwareFinish .cxx_destruct]
  -[HAPHardwareFinish init]
  -[HAPHardwareFinish isEqual:]
  -[HAPHardwareFinish parseFromData:error:]
  -[HAPHardwareFinish copyWithZone:]
  -[HAPHardwareFinish serializeWithError:]
  -[HAPHardwareFinish RGBColorValue]
  -[HAPHardwareFinish setRGBColorValue:]
  -[HAPHardwareFinish initWithRGBColorValue:]


HAPBTLECharacteristicSignature : HMFObject
 @property  NSUUID *characteristicType
 @property  NSNumber *serviceInstanceID
 @property  NSUUID *serviceType
 @property  unsigned long characteristicProperties
 @property  HAPCharacteristicMetadata *characteristicMetadata
 @property  BOOL authenticated

  // instance methods
  -[HAPBTLECharacteristicSignature isAuthenticated]
  -[HAPBTLECharacteristicSignature .cxx_destruct]
  -[HAPBTLECharacteristicSignature characteristicType]
  -[HAPBTLECharacteristicSignature serviceType]
  -[HAPBTLECharacteristicSignature characteristicMetadata]
  -[HAPBTLECharacteristicSignature characteristicProperties]
  -[HAPBTLECharacteristicSignature serviceInstanceID]
  -[HAPBTLECharacteristicSignature initWithCharacteristicType:serviceInstanceID:serviceType:characteristicProperties:characteristicMetadata:authenticated:]


HAPBTLEServiceSignature : HMFObject
 @property  NSUUID *serviceType
 @property  NSNumber *serviceInstanceID
 @property  unsigned long serviceProperties
 @property  NSArray *linkedServices
 @property  BOOL authenticated

  // instance methods
  -[HAPBTLEServiceSignature serviceProperties]
  -[HAPBTLEServiceSignature isAuthenticated]
  -[HAPBTLEServiceSignature .cxx_destruct]
  -[HAPBTLEServiceSignature linkedServices]
  -[HAPBTLEServiceSignature serviceType]
  -[HAPBTLEServiceSignature serviceInstanceID]
  -[HAPBTLEServiceSignature initWithServiceType:serviceInstanceID:serviceProperties:linkedServices:authenticated:]


_HAPBTLEDiscoveryContext : HMFObject
 @property  long long discoveryType
 @property  NSMutableArray *discoveringServices
 @property  NSMutableArray *discoveringCharacteristics
 @property  NSMutableArray *readingCharacteristics
 @property  NSMutableArray *discoveringDescriptors
 @property  NSMutableArray *readingDescriptors
 @property  NSMutableArray *readingSignatureCharacteristics
 @property  NSMutableArray *readingSignatureServices
 @property  NSMapTable *characteristicSignatures
 @property  NSMapTable *serviceSignatures
 @property  NSMutableArray *discoveredAccessoryCharacteriticsPendingRead
 @property  long long retries
 @property  BOOL complete
 @property  @? completionHandler

  // instance methods
  -[_HAPBTLEDiscoveryContext .cxx_destruct]
  -[_HAPBTLEDiscoveryContext setRetries:]
  -[_HAPBTLEDiscoveryContext init]
  -[_HAPBTLEDiscoveryContext reset]
  -[_HAPBTLEDiscoveryContext setCompletionHandler:]
  -[_HAPBTLEDiscoveryContext isComplete]
  -[_HAPBTLEDiscoveryContext retries]
  -[_HAPBTLEDiscoveryContext completionHandler]
  -[_HAPBTLEDiscoveryContext discoveringServices]
  -[_HAPBTLEDiscoveryContext discoveringCharacteristics]
  -[_HAPBTLEDiscoveryContext readingCharacteristics]
  -[_HAPBTLEDiscoveryContext discoveringDescriptors]
  -[_HAPBTLEDiscoveryContext readingDescriptors]
  -[_HAPBTLEDiscoveryContext readingSignatureCharacteristics]
  -[_HAPBTLEDiscoveryContext readingSignatureServices]
  -[_HAPBTLEDiscoveryContext characteristicSignatures]
  -[_HAPBTLEDiscoveryContext serviceSignatures]
  -[_HAPBTLEDiscoveryContext initWithDiscoveryType:]
  -[_HAPBTLEDiscoveryContext discoveryType]
  -[_HAPBTLEDiscoveryContext discoveredAccessoryCharacteriticsPendingRead]
  -[_HAPBTLEDiscoveryContext setDiscoveredAccessoryCharacteriticsPendingRead:]


_HAPAccessoryServerBTLE200 : HAPAccessoryServerBTLE <CBPeripheralDelegate, HAPBTLEControlOutputStreamDelegate, HAPPairSetupSessionClientDelegate, HAPSecuritySessionDelegate, HMFTimerDelegate, HAPAuthSessionDelegate, HMFLogging>
 @property  HAPBLEAccessoryCache *accessoryCache
 @property  BOOL hasValidCache
 @property  @? connectionCompletionHandler
 @property  HMFTimer *connectionIdleTimer
 @property  _HAPBTLEDiscoveryContext *discoveryContext
 @property  BOOL discovering
 @property  BOOL verified
 @property  HAPCharacteristic *identifyCharacteristic
 @property  HAPPairSetupSession *pairSetupSession
 @property  double pairSetupBackoffTimeInterval
 @property  BOOL badPairSetupCode
 @property  @? setupCodeCompletionHandler
 @property  BOOL pairing
 @property  NSError *pairingDisconnectionError
 @property  BOOL authenticated
 @property  HAPAuthSession *authSession
 @property  HAPAccessoryProtocolInfo *authenticatedProtocolInfo
 @property  HAPCharacteristic *pairingFeaturesCharacteristic
 @property  HAPCharacteristic *pairSetupCharacteristic
 @property  HAPCharacteristic *pairVerifyCharacteristic
 @property  NSOperationQueue *pairVerifyOperationQueue
 @property  HAPCharacteristic *pairingsCharacteristic
 @property  NSMutableArray *pendingRequests
 @property  NSOperationQueue *requestOperationQueue
 @property  NSMutableArray *pendingResponses
 @property  NSMapTable *characteristicWriteCompletionHandlers
 @property  NSMapTable *characteristicEnableEventCompletionHandlers
 @property  unsigned char featureFlags
 @property  HAPSecuritySession *securitySession
 @property  long long connectionState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_HAPAccessoryServerBTLE200 logCategory]
  +[_HAPAccessoryServerBTLE200 writeRequestForCharacteristic:value:authorizationData:contextData:options:error:]
  +[_HAPAccessoryServerBTLE200 prepareWriteRequestForCharacteristic:value:authorizationData:contextData:options:error:]
  +[_HAPAccessoryServerBTLE200 extractSerializedRequestValueFromBodyData:error:]
  +[_HAPAccessoryServerBTLE200 extractNotificationContextFromBodyData:error:]
  +[_HAPAccessoryServerBTLE200 executeWriteRequestForCharacteristic:options:error:]
  +[_HAPAccessoryServerBTLE200 isHAPService:]
  +[_HAPAccessoryServerBTLE200 isHAPDescriptor:]
  +[_HAPAccessoryServerBTLE200 signatureRequestForCharacteristic:requiresAuthentication:error:]
  +[_HAPAccessoryServerBTLE200 parseSignatureResponse:error:]
  +[_HAPAccessoryServerBTLE200 signatureRequestForService:characteristic:requiresAuthentication:error:]
  +[_HAPAccessoryServerBTLE200 parseServiceSignatureResponse:serviceInstanceID:serviceType:error:]
  +[_HAPAccessoryServerBTLE200 readRequestForCharacteristic:options:error:]
  +[_HAPAccessoryServerBTLE200 parseReadResponse:value:notificationContext:error:]
  +[_HAPAccessoryServerBTLE200 parseWriteResponse:value:error:]
  +[_HAPAccessoryServerBTLE200 parseProtocolConfigurationResponse:key:stateNumber:error:]
  +[_HAPAccessoryServerBTLE200 configurationRequestForService:configRequestType:error:]
  +[_HAPAccessoryServerBTLE200 parseCharacteristicConfigurationResponse:error:]
  +[_HAPAccessoryServerBTLE200 configurationRequestForCharacteristic:isBroadcasted:interval:error:]

  // instance methods
  -[_HAPAccessoryServerBTLE200 isDiscovering]
  -[_HAPAccessoryServerBTLE200 connectionState]
  -[_HAPAccessoryServerBTLE200 setDiscovering:]
  -[_HAPAccessoryServerBTLE200 disconnect]
  -[_HAPAccessoryServerBTLE200 authSession:confirmUUID:token:]
  -[_HAPAccessoryServerBTLE200 timerDidFire:]
  -[_HAPAccessoryServerBTLE200 pendingRequests]
  -[_HAPAccessoryServerBTLE200 continuePairingAfterAuthPrompt]
  -[_HAPAccessoryServerBTLE200 authenticatedProtocolInfo]
  -[_HAPAccessoryServerBTLE200 setAuthenticatedProtocolInfo:]
  -[_HAPAccessoryServerBTLE200 tearDownSessionOnAuthCompletion]
  -[_HAPAccessoryServerBTLE200 setAuthenticated:]
  -[_HAPAccessoryServerBTLE200 tryPairingPassword:error:]
  -[_HAPAccessoryServerBTLE200 _handleConnectionIdleTimeout]
  -[_HAPAccessoryServerBTLE200 disconnectWithCompletionHandler:]
  -[_HAPAccessoryServerBTLE200 _kickConnectionIdleTimer]
  -[_HAPAccessoryServerBTLE200 startPairingWithRequest:]
  -[_HAPAccessoryServerBTLE200 isVerified]
  -[_HAPAccessoryServerBTLE200 enableEvents:forCharacteristics:withCompletionHandler:queue:]
  -[_HAPAccessoryServerBTLE200 .cxx_destruct]
  -[_HAPAccessoryServerBTLE200 stopPairingWithError:]
  -[_HAPAccessoryServerBTLE200 writeCharacteristicValues:timeout:completionQueue:completionHandler:]
  -[_HAPAccessoryServerBTLE200 authenticateAccessory]
  -[_HAPAccessoryServerBTLE200 setFeatureFlags:]
  -[_HAPAccessoryServerBTLE200 _suspendConnectionIdleTimer]
  -[_HAPAccessoryServerBTLE200 featureFlags]
  -[_HAPAccessoryServerBTLE200 descriptionWithPointer:]
  -[_HAPAccessoryServerBTLE200 authSession:authComplete:]
  -[_HAPAccessoryServerBTLE200 _delegateRespondsToSelector:]
  -[_HAPAccessoryServerBTLE200 authenticated]
  -[_HAPAccessoryServerBTLE200 identifyWithCompletion:]
  -[_HAPAccessoryServerBTLE200 _notifyDelegatesPairingStopped:]
  -[_HAPAccessoryServerBTLE200 setVerified:]
  -[_HAPAccessoryServerBTLE200 listPairingsWithCompletionQueue:completionHandler:]
  -[_HAPAccessoryServerBTLE200 removePairingForCurrentControllerOnQueue:completion:]
  -[_HAPAccessoryServerBTLE200 _validateProtocolInfo:]
  -[_HAPAccessoryServerBTLE200 authSession:validateUUID:token:]
  -[_HAPAccessoryServerBTLE200 setConnectionState:]
  -[_HAPAccessoryServerBTLE200 _outstandingRequests]
  -[_HAPAccessoryServerBTLE200 getAccessoryInfo:]
  -[_HAPAccessoryServerBTLE200 discoverAccessories]
  -[_HAPAccessoryServerBTLE200 connectionIdleTimer]
  -[_HAPAccessoryServerBTLE200 setConnectionIdleTimer:]
  -[_HAPAccessoryServerBTLE200 setDiscoveryContext:]
  -[_HAPAccessoryServerBTLE200 addPairing:completionQueue:completionHandler:]
  -[_HAPAccessoryServerBTLE200 _continuePairingAfterMFiCertValidation]
  -[_HAPAccessoryServerBTLE200 continueAuthAfterValidation:]
  -[_HAPAccessoryServerBTLE200 connectWithCompletionHandler:]
  -[_HAPAccessoryServerBTLE200 dealloc]
  -[_HAPAccessoryServerBTLE200 authSession:authenticateUUID:token:]
  -[_HAPAccessoryServerBTLE200 provisionToken:]
  -[_HAPAccessoryServerBTLE200 _enableEvents:forCharacteristics:withCompletionHandler:queue:]
  -[_HAPAccessoryServerBTLE200 peripheral:didModifyServices:]
  -[_HAPAccessoryServerBTLE200 peripheral:didDiscoverServices:]
  -[_HAPAccessoryServerBTLE200 peripheral:didDiscoverCharacteristicsForService:error:]
  -[_HAPAccessoryServerBTLE200 peripheral:didUpdateValueForCharacteristic:error:]
  -[_HAPAccessoryServerBTLE200 peripheral:didWriteValueForCharacteristic:error:]
  -[_HAPAccessoryServerBTLE200 peripheral:didUpdateNotificationStateForCharacteristic:error:]
  -[_HAPAccessoryServerBTLE200 peripheral:didDiscoverDescriptorsForCharacteristic:error:]
  -[_HAPAccessoryServerBTLE200 peripheral:didUpdateValueForDescriptor:error:]
  -[_HAPAccessoryServerBTLE200 readCharacteristicValues:timeout:completionQueue:completionHandler:]
  -[_HAPAccessoryServerBTLE200 authSession]
  -[_HAPAccessoryServerBTLE200 removePairing:completionQueue:completionHandler:]
  -[_HAPAccessoryServerBTLE200 authSession:sendAuthExchangeData:]
  -[_HAPAccessoryServerBTLE200 discoveryContext]
  -[_HAPAccessoryServerBTLE200 _establishSecureSession]
  -[_HAPAccessoryServerBTLE200 isSecuritySessionOpen]
  -[_HAPAccessoryServerBTLE200 pendingResponses]
  -[_HAPAccessoryServerBTLE200 isBLELinkConnected]
  -[_HAPAccessoryServerBTLE200 configureCharacteristics:queue:withCompletionHandler:]
  -[_HAPAccessoryServerBTLE200 generateBroadcastKey:queue:withCompletionHandler:]
  -[_HAPAccessoryServerBTLE200 requestOperationQueue]
  -[_HAPAccessoryServerBTLE200 discoverAccessoriesAndReadCharacteristicTypes:]
  -[_HAPAccessoryServerBTLE200 setSecuritySessionOpen:]
  -[_HAPAccessoryServerBTLE200 submitPairVerifyMetricWithError:]
  -[_HAPAccessoryServerBTLE200 securitySession:didReceiveLocalPairingIdentityRequestWithError:]
  -[_HAPAccessoryServerBTLE200 securitySession:didReceiveRequestForPeerPairingIdentityWithIdentifier:error:]
  -[_HAPAccessoryServerBTLE200 securitySession:didReceiveSetupExchangeData:]
  -[_HAPAccessoryServerBTLE200 securitySessionIsOpening:]
  -[_HAPAccessoryServerBTLE200 securitySessionDidOpen:]
  -[_HAPAccessoryServerBTLE200 securitySession:didCloseWithError:]
  -[_HAPAccessoryServerBTLE200 setAccessoryCache:]
  -[_HAPAccessoryServerBTLE200 accessoryCache]
  -[_HAPAccessoryServerBTLE200 securitySession]
  -[_HAPAccessoryServerBTLE200 setSecuritySession:]
  -[_HAPAccessoryServerBTLE200 handleConnectionWithPeripheral:withError:]
  -[_HAPAccessoryServerBTLE200 handleDisconnectionWithError:completionQueue:completionHandler:]
  -[_HAPAccessoryServerBTLE200 updateConnectionIdleTime:]
  -[_HAPAccessoryServerBTLE200 initWithPeripheral:name:pairingUsername:statusFlags:stateNumber:stateChanged:connectReason:configNumber:category:setupHash:connectionIdleTime:browser:keyStore:whbStableIdentifier:]
  -[_HAPAccessoryServerBTLE200 _createPrimaryAccessoryFromAdvertisementData]
  -[_HAPAccessoryServerBTLE200 isPairing]
  -[_HAPAccessoryServerBTLE200 pairingDisconnectionError]
  -[_HAPAccessoryServerBTLE200 _cancelAllQueuedOperationsWithError:]
  -[_HAPAccessoryServerBTLE200 _resumeAllOperations]
  -[_HAPAccessoryServerBTLE200 characteristicWriteCompletionHandlers]
  -[_HAPAccessoryServerBTLE200 characteristicEnableEventCompletionHandlers]
  -[_HAPAccessoryServerBTLE200 _cancelDiscoveryWithError:]
  -[_HAPAccessoryServerBTLE200 _pairingCompletedWithError:]
  -[_HAPAccessoryServerBTLE200 pairSetupSession]
  -[_HAPAccessoryServerBTLE200 setPairSetupSession:]
  -[_HAPAccessoryServerBTLE200 _serviceForCBService:]
  -[_HAPAccessoryServerBTLE200 removePairingForCurrentControllerOnQueue:completion:serverPairingCompletion:]
  -[_HAPAccessoryServerBTLE200 _removePairingOfAccessoryServerCancelledMidPairing]
  -[_HAPAccessoryServerBTLE200 _discoverWithType:completionHandler:]
  -[_HAPAccessoryServerBTLE200 _readPendingCharacteritiscTypes:completion:]
  -[_HAPAccessoryServerBTLE200 _readValueForCharacteristic:options:completionHandler:]
  -[_HAPAccessoryServerBTLE200 _discoverServices]
  -[_HAPAccessoryServerBTLE200 _retryDiscovery]
  -[_HAPAccessoryServerBTLE200 hasValidCache]
  -[_HAPAccessoryServerBTLE200 _parseService:error:]
  -[_HAPAccessoryServerBTLE200 _cacheServices:]
  -[_HAPAccessoryServerBTLE200 _hapServicesFromCache]
  -[_HAPAccessoryServerBTLE200 setHasValidCache:]
  -[_HAPAccessoryServerBTLE200 _getCachedService:]
  -[_HAPAccessoryServerBTLE200 _getCBService:instanceOrder:]
  -[_HAPAccessoryServerBTLE200 _getCBCharacteristic:instanceId:service:]
  -[_HAPAccessoryServerBTLE200 _serviceCacheFromHAPService:serviceOrder:]
  -[_HAPAccessoryServerBTLE200 _discoverCharacteristicsForService:]
  -[_HAPAccessoryServerBTLE200 _readCharacteristicValue:]
  -[_HAPAccessoryServerBTLE200 _readCharacteristicSignatures]
  -[_HAPAccessoryServerBTLE200 _handleCompletedDiscovery]
  -[_HAPAccessoryServerBTLE200 isHAPCharacteristic:]
  -[_HAPAccessoryServerBTLE200 _discoverCharacteristic:]
  -[_HAPAccessoryServerBTLE200 _handleDiscoveredDescriptors:]
  -[_HAPAccessoryServerBTLE200 _readDescriptorValue:]
  -[_HAPAccessoryServerBTLE200 _handleReadCharacteristicValue:error:]
  -[_HAPAccessoryServerBTLE200 _handleReadServiceInstanceId:]
  -[_HAPAccessoryServerBTLE200 _characteristicForCBCharacteristic:]
  -[_HAPAccessoryServerBTLE200 _handleEventIndicationForCharacteristic:]
  -[_HAPAccessoryServerBTLE200 _handleResponseData:fromCharacteristic:error:]
  -[_HAPAccessoryServerBTLE200 _readServiceSignature:]
  -[_HAPAccessoryServerBTLE200 _readCharacteristicSignature:]
  -[_HAPAccessoryServerBTLE200 _handleReadCharacteristicSignature:error:]
  -[_HAPAccessoryServerBTLE200 _getCharacteristicInstanceID:error:]
  -[_HAPAccessoryServerBTLE200 shouldVerifyHAPCharacteristic:]
  -[_HAPAccessoryServerBTLE200 _sendRequest:shouldPrioritize:responseHandler:]
  -[_HAPAccessoryServerBTLE200 _handleReadServiceSignature:error:]
  -[_HAPAccessoryServerBTLE200 _getServiceInstanceID:]
  -[_HAPAccessoryServerBTLE200 shouldVerifyHAPService:]
  -[_HAPAccessoryServerBTLE200 _parseCharacteristic:error:]
  -[_HAPAccessoryServerBTLE200 _readCharacteristicValues:queue:completionHandler:]
  -[_HAPAccessoryServerBTLE200 _updatePropertiesFromCharacteristic:]
  -[_HAPAccessoryServerBTLE200 _writeValue:toCharacteristic:authorizationData:contextData:options:completionHandler:]
  -[_HAPAccessoryServerBTLE200 _performTimedWriteValue:toCharacteristic:authorizationData:contextData:options:completionHandler:]
  -[_HAPAccessoryServerBTLE200 _performWriteValue:toCharacteristic:authorizationData:contextData:options:completionHandler:]
  -[_HAPAccessoryServerBTLE200 markNotifyingCharacteristicUpdatedforCharacteristic:]
  -[_HAPAccessoryServerBTLE200 _performTimedWriteExecuteForCharacteristic:value:options:completionHandler:]
  -[_HAPAccessoryServerBTLE200 _performTimedWritePrepareWithValue:toCharacteristic:authorizationData:contextData:options:completionHandler:]
  -[_HAPAccessoryServerBTLE200 _enableEvent:forCharacteristic:withCompletionHandler:queue:]
  -[_HAPAccessoryServerBTLE200 _performEnableEvent:toCharacteristic:completionHandler:]
  -[_HAPAccessoryServerBTLE200 _enableEvent:toCharacteristic:completionHandler:]
  -[_HAPAccessoryServerBTLE200 _suspendAllOperations]
  -[_HAPAccessoryServerBTLE200 _configureCharacteristics:queue:withCompletionHandler:]
  -[_HAPAccessoryServerBTLE200 _enableBroadcastEvent:interval:forCharacteristic:completionHandler:]
  -[_HAPAccessoryServerBTLE200 setPairingDisconnectionError:]
  -[_HAPAccessoryServerBTLE200 setPairing:]
  -[_HAPAccessoryServerBTLE200 _checkForAuthPrompt:]
  -[_HAPAccessoryServerBTLE200 _getPairingFeaturesWithCompletionHandler:]
  -[_HAPAccessoryServerBTLE200 pairingFeaturesCharacteristic]
  -[_HAPAccessoryServerBTLE200 _parsePairingFeaturesCharacteristic:authMethod:error:]
  -[_HAPAccessoryServerBTLE200 setBadPairSetupCode:]
  -[_HAPAccessoryServerBTLE200 _getPairSetupType]
  -[_HAPAccessoryServerBTLE200 pairSetupCharacteristic]
  -[_HAPAccessoryServerBTLE200 isBadSetupCode]
  -[_HAPAccessoryServerBTLE200 setSetupCodeCompletionHandler:]
  -[_HAPAccessoryServerBTLE200 pairSetupBackoffTimeInterval]
  -[_HAPAccessoryServerBTLE200 setupCodeCompletionHandler]
  -[_HAPAccessoryServerBTLE200 _resumeConnectionIdleTimer]
  -[_HAPAccessoryServerBTLE200 setPairSetupBackoffTimeInterval:]
  -[_HAPAccessoryServerBTLE200 disconnectWithCompletionHandler:disconnectionError:]
  -[_HAPAccessoryServerBTLE200 protocolInfoServiceSignatureCharacteristics]
  -[_HAPAccessoryServerBTLE200 setAuthSession:]
  -[_HAPAccessoryServerBTLE200 _sendPairingRequestData:completionHandler:]
  -[_HAPAccessoryServerBTLE200 pairingsCharacteristic]
  -[_HAPAccessoryServerBTLE200 identifyCharacteristic]
  -[_HAPAccessoryServerBTLE200 _requestResponseForRequest:]
  -[_HAPAccessoryServerBTLE200 _reallySendRequest:completionHandler:]
  -[_HAPAccessoryServerBTLE200 _pendingResponseForRequest:]
  -[_HAPAccessoryServerBTLE200 _resetWithError:]
  -[_HAPAccessoryServerBTLE200 _enqueueRequest:shouldPrioritize:]
  -[_HAPAccessoryServerBTLE200 _maximumControlWriteLengthForRequest:]
  -[_HAPAccessoryServerBTLE200 _encryptDataAndGenerateAuthTag:error:]
  -[_HAPAccessoryServerBTLE200 _sendData:toCharacteristic:completionHandler:]
  -[_HAPAccessoryServerBTLE200 _pendingRequestForCharacteristic:]
  -[_HAPAccessoryServerBTLE200 _decryptData:error:]
  -[_HAPAccessoryServerBTLE200 pairVerifyCharacteristic]
  -[_HAPAccessoryServerBTLE200 pairVerifyOperationQueue]
  -[_HAPAccessoryServerBTLE200 setConnectionCompletionHandler:]
  -[_HAPAccessoryServerBTLE200 _restartConnectionIdleTimer:]
  -[_HAPAccessoryServerBTLE200 connectionCompletionHandler]
  -[_HAPAccessoryServerBTLE200 _updateConnectionIdleTime:]
  -[_HAPAccessoryServerBTLE200 _handleConnectionWithError:]
  -[_HAPAccessoryServerBTLE200 _cancelConnectionWithError:]
  -[_HAPAccessoryServerBTLE200 _getProtocolInfoService]
  -[_HAPAccessoryServerBTLE200 _generateBroadcastKey:queue:withCompletionHandler:]
  -[_HAPAccessoryServerBTLE200 _validateGeneratedBroadcastKey:]
  -[_HAPAccessoryServerBTLE200 _configureBroadcastKeyGeneration:service:withCompletion:]
  -[_HAPAccessoryServerBTLE200 _handleDiscoveredServices:error:]
  -[_HAPAccessoryServerBTLE200 _handleDiscoveredCharacteristicsForService:error:]
  -[_HAPAccessoryServerBTLE200 _handleDiscoveredCharactersitic:error:]
  -[_HAPAccessoryServerBTLE200 _handleReadDescriptorValue:error:]
  -[_HAPAccessoryServerBTLE200 _handleUpdateValueForCharacteristic:error:]
  -[_HAPAccessoryServerBTLE200 _handleWriteCompletionForCharacteristic:error:]
  -[_HAPAccessoryServerBTLE200 _handleHAPNotificationStateUpdateForCharacteristic:error:]
  -[_HAPAccessoryServerBTLE200 _sendControlPacket:forRequest:completionHandler:]
  -[_HAPAccessoryServerBTLE200 _handlePairSetupSessionExchangeData:]
  -[_HAPAccessoryServerBTLE200 _handlePairingSetupCodeRequestWithCompletionHandler:]
  -[_HAPAccessoryServerBTLE200 _sendProtocolInfoServiceExchangeData:completion:]
  -[_HAPAccessoryServerBTLE200 getLocalPairingIdentityWithError:]
  -[_HAPAccessoryServerBTLE200 _handleSecuritySessionSetupExchangeData:]
  -[_HAPAccessoryServerBTLE200 controlOutputStream:didReceiveRequestToSendControlPacket:completionHandler:]
  -[_HAPAccessoryServerBTLE200 controlOutputStreamDidOpen:]
  -[_HAPAccessoryServerBTLE200 controlOutputStream:didCloseWithError:]
  -[_HAPAccessoryServerBTLE200 controlOutputStreamDidComplete:]
  -[_HAPAccessoryServerBTLE200 pairSetupSession:didReceiveLocalPairingIdentityRequestWithError:]
  -[_HAPAccessoryServerBTLE200 pairSetupSession:didPairWithPeer:error:]
  -[_HAPAccessoryServerBTLE200 pairSetupSession:didReceiveSetupExchangeData:]
  -[_HAPAccessoryServerBTLE200 pairSetupSession:didStopWithError:]
  -[_HAPAccessoryServerBTLE200 pairSetupSession:didReceiveSetupCodeRequestWithCompletionHandler:]
  -[_HAPAccessoryServerBTLE200 pairSetupSession:didReceiveProductData:]
  -[_HAPAccessoryServerBTLE200 pairSetupSessionDidReceiveInvalidSetupCode:]
  -[_HAPAccessoryServerBTLE200 pairSetupSession:didReceiveBackoffRequestWithTimeInterval:]
  -[_HAPAccessoryServerBTLE200 hapBLEProtocolVersion]
  -[_HAPAccessoryServerBTLE200 _notifyDelegateOfReceivedEncryptedAuthenticatedData:forCharacteristic:]
  -[_HAPAccessoryServerBTLE200 _notifyDelegateOfReceivedPlaintextData:forCharacteristic:]
  -[_HAPAccessoryServerBTLE200 _notifyDelegateOfSentEncryptedAuthenticatedData:forCharacteristic:]
  -[_HAPAccessoryServerBTLE200 _notifyDelegateOfSentPlaintextData:forCharacteristic:]
  -[_HAPAccessoryServerBTLE200 setIdentifyCharacteristic:]
  -[_HAPAccessoryServerBTLE200 setPairingFeaturesCharacteristic:]
  -[_HAPAccessoryServerBTLE200 setPairSetupCharacteristic:]
  -[_HAPAccessoryServerBTLE200 setPairVerifyCharacteristic:]
  -[_HAPAccessoryServerBTLE200 setPairingsCharacteristic:]


HAP2TLVErrorsWrapper : NSObject <NSCopying, HAPTLVProtocol>
 @property  long long value
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAP2TLVErrorsWrapper parsedFromData:error:]

  // instance methods
  -[HAP2TLVErrorsWrapper init]
  -[HAP2TLVErrorsWrapper isEqual:]
  -[HAP2TLVErrorsWrapper initWithValue:]
  -[HAP2TLVErrorsWrapper setValue:]
  -[HAP2TLVErrorsWrapper value]
  -[HAP2TLVErrorsWrapper parseFromData:error:]
  -[HAP2TLVErrorsWrapper copyWithZone:]
  -[HAP2TLVErrorsWrapper serializeWithError:]


HAP2TLVPairingMethodWrapper : NSObject <NSCopying, HAPTLVProtocol>
 @property  long long value
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAP2TLVPairingMethodWrapper parsedFromData:error:]

  // instance methods
  -[HAP2TLVPairingMethodWrapper init]
  -[HAP2TLVPairingMethodWrapper isEqual:]
  -[HAP2TLVPairingMethodWrapper initWithValue:]
  -[HAP2TLVPairingMethodWrapper setValue:]
  -[HAP2TLVPairingMethodWrapper value]
  -[HAP2TLVPairingMethodWrapper parseFromData:error:]
  -[HAP2TLVPairingMethodWrapper copyWithZone:]
  -[HAP2TLVPairingMethodWrapper serializeWithError:]


HAP2TLVPairingStateWrapper : NSObject <NSCopying, HAPTLVProtocol>
 @property  long long value
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAP2TLVPairingStateWrapper parsedFromData:error:]

  // instance methods
  -[HAP2TLVPairingStateWrapper init]
  -[HAP2TLVPairingStateWrapper isEqual:]
  -[HAP2TLVPairingStateWrapper initWithValue:]
  -[HAP2TLVPairingStateWrapper setValue:]
  -[HAP2TLVPairingStateWrapper value]
  -[HAP2TLVPairingStateWrapper parseFromData:error:]
  -[HAP2TLVPairingStateWrapper copyWithZone:]
  -[HAP2TLVPairingStateWrapper serializeWithError:]


HAPJSONValueTransformer : HAPValueTransformer
  // class methods
  +[HAPJSONValueTransformer initialize]
  +[HAPJSONValueTransformer defaultJSONValueTransformer]
  +[HAPJSONValueTransformer expectedTransformedClassForFormat:]

  // instance methods
  -[HAPJSONValueTransformer transformedValue:format:error:]
  -[HAPJSONValueTransformer reverseTransformedValue:format:error:]


HAPDataStreamTransportCommandWrapper : NSObject <NSCopying, HAPTLVProtocol>
 @property  long long value
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPDataStreamTransportCommandWrapper parsedFromData:error:]

  // instance methods
  -[HAPDataStreamTransportCommandWrapper init]
  -[HAPDataStreamTransportCommandWrapper isEqual:]
  -[HAPDataStreamTransportCommandWrapper initWithValue:]
  -[HAPDataStreamTransportCommandWrapper setValue:]
  -[HAPDataStreamTransportCommandWrapper value]
  -[HAPDataStreamTransportCommandWrapper parseFromData:error:]
  -[HAPDataStreamTransportCommandWrapper copyWithZone:]
  -[HAPDataStreamTransportCommandWrapper serializeWithError:]


HAPDataStreamTransportCommandStatusWrapper : NSObject <NSCopying, HAPTLVProtocol>
 @property  long long value
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPDataStreamTransportCommandStatusWrapper parsedFromData:error:]

  // instance methods
  -[HAPDataStreamTransportCommandStatusWrapper init]
  -[HAPDataStreamTransportCommandStatusWrapper isEqual:]
  -[HAPDataStreamTransportCommandStatusWrapper initWithValue:]
  -[HAPDataStreamTransportCommandStatusWrapper setValue:]
  -[HAPDataStreamTransportCommandStatusWrapper value]
  -[HAPDataStreamTransportCommandStatusWrapper parseFromData:error:]
  -[HAPDataStreamTransportCommandStatusWrapper copyWithZone:]
  -[HAPDataStreamTransportCommandStatusWrapper serializeWithError:]


HAPDataStreamTransportProtocolWrapper : NSObject <NSCopying, HAPTLVProtocol>
 @property  long long value
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPDataStreamTransportProtocolWrapper parsedFromData:error:]

  // instance methods
  -[HAPDataStreamTransportProtocolWrapper init]
  -[HAPDataStreamTransportProtocolWrapper isEqual:]
  -[HAPDataStreamTransportProtocolWrapper initWithValue:]
  -[HAPDataStreamTransportProtocolWrapper setValue:]
  -[HAPDataStreamTransportProtocolWrapper value]
  -[HAPDataStreamTransportProtocolWrapper parseFromData:error:]
  -[HAPDataStreamTransportProtocolWrapper copyWithZone:]
  -[HAPDataStreamTransportProtocolWrapper serializeWithError:]


HAPSupportedDiagnosticsSnapshot : NSObject <NSCopying, HAPTLVProtocol>
 @property  HAPDiagnosticsSnapshotFormatWrapper *format
 @property  HAPDiagnosticsSnapshotTypeWrapper *type
 @property  HAPDiagnosticsSnapshotAudioWrapper *audioDiagnostics
 @property  HAPDiagnosticsSnapshotOptionsWrapper *options
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPSupportedDiagnosticsSnapshot parsedFromData:error:]

  // instance methods
  -[HAPSupportedDiagnosticsSnapshot options]
  -[HAPSupportedDiagnosticsSnapshot setType:]
  -[HAPSupportedDiagnosticsSnapshot setOptions:]
  -[HAPSupportedDiagnosticsSnapshot .cxx_destruct]
  -[HAPSupportedDiagnosticsSnapshot setFormat:]
  -[HAPSupportedDiagnosticsSnapshot init]
  -[HAPSupportedDiagnosticsSnapshot isEqual:]
  -[HAPSupportedDiagnosticsSnapshot format]
  -[HAPSupportedDiagnosticsSnapshot type]
  -[HAPSupportedDiagnosticsSnapshot parseFromData:error:]
  -[HAPSupportedDiagnosticsSnapshot copyWithZone:]
  -[HAPSupportedDiagnosticsSnapshot serializeWithError:]
  -[HAPSupportedDiagnosticsSnapshot audioDiagnostics]
  -[HAPSupportedDiagnosticsSnapshot setAudioDiagnostics:]
  -[HAPSupportedDiagnosticsSnapshot initWithFormat:type:audioDiagnostics:options:]


HAPFieldWrapper : HMFObject
 @property  long long tlvid
 @property  NSString *name

  // instance methods
  -[HAPFieldWrapper name]
  -[HAPFieldWrapper .cxx_destruct]
  -[HAPFieldWrapper tlvid]
  -[HAPFieldWrapper setName:]
  -[HAPFieldWrapper initWithTlvId:name:]
  -[HAPFieldWrapper setTlvid:]


HAPNumberWrapper : HAPFieldWrapper
 @property  NSNumber *field

  // class methods
  +[HAPNumberWrapper wrappertlv:name:]

  // instance methods
  -[HAPNumberWrapper field]
  -[HAPNumberWrapper setField:]
  -[HAPNumberWrapper .cxx_destruct]


HAPUint8Wrapper : HAPFieldWrapper
 @property  NSNumber *field

  // class methods
  +[HAPUint8Wrapper wrappertlv:name:]

  // instance methods
  -[HAPUint8Wrapper field]
  -[HAPUint8Wrapper setField:]
  -[HAPUint8Wrapper .cxx_destruct]


HAPUint16Wrapper : HAPFieldWrapper
 @property  NSNumber *field

  // class methods
  +[HAPUint16Wrapper wrappertlv:name:]

  // instance methods
  -[HAPUint16Wrapper field]
  -[HAPUint16Wrapper setField:]
  -[HAPUint16Wrapper .cxx_destruct]


HAPStringWrapper : HAPFieldWrapper
 @property  NSString *field

  // class methods
  +[HAPStringWrapper wrappertlv:name:]

  // instance methods
  -[HAPStringWrapper field]
  -[HAPStringWrapper setField:]
  -[HAPStringWrapper .cxx_destruct]


HAPDataWrapper : HAPFieldWrapper
 @property  NSData *field

  // class methods
  +[HAPDataWrapper wrappertlv:name:]

  // instance methods
  -[HAPDataWrapper field]
  -[HAPDataWrapper setField:]
  -[HAPDataWrapper .cxx_destruct]


HAPArrayWrapper : HAPFieldWrapper
 @property  NSArray *field
 @property  @? objectCreator

  // class methods
  +[HAPArrayWrapper wrappertlv:name:objectCreator:]

  // instance methods
  -[HAPArrayWrapper field]
  -[HAPArrayWrapper setField:]
  -[HAPArrayWrapper .cxx_destruct]
  -[HAPArrayWrapper setObjectCreator:]
  -[HAPArrayWrapper objectCreator]


HAPUUIDWrapper : HAPFieldWrapper
 @property  NSUUID *field

  // class methods
  +[HAPUUIDWrapper wrappertlv:name:]

  // instance methods
  -[HAPUUIDWrapper field]
  -[HAPUUIDWrapper setField:]
  -[HAPUUIDWrapper .cxx_destruct]


HAPTLVBase : HAPTLVDescription
 @property  NSData *tlvDatablob

  // instance methods
  -[HAPTLVBase .cxx_destruct]
  -[HAPTLVBase _parse:]
  -[HAPTLVBase _parseFromTLVData]
  -[HAPTLVBase initWithTLVData:]
  -[HAPTLVBase tlvDatablob]
  -[HAPTLVBase _parseMandatory:optional:]
  -[HAPTLVBase _parseArray:result:objectCreator:]
  -[HAPTLVBase _parseFields:]


HAPNumberParser : HAPTLVDescription
 @property  unsigned long decodedNumber

  // instance methods
  -[HAPNumberParser initWithTLVData:]
  -[HAPNumberParser decodedNumber]


HAPTLVDescription : HMFObject
  // instance methods
  -[HAPTLVDescription descriptionWithIndent:]
  -[HAPTLVDescription description:indent:]


HAPTLVNumberValueBase : NSObject <NSCopying, HAPTLVProtocol>
 @property  NSNumber *value
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HAPTLVNumberValueBase .cxx_destruct]
  -[HAPTLVNumberValueBase init]
  -[HAPTLVNumberValueBase isEqual:]
  -[HAPTLVNumberValueBase initWithValue:]
  -[HAPTLVNumberValueBase setValue:]
  -[HAPTLVNumberValueBase value]
  -[HAPTLVNumberValueBase parseFromData:error:]
  -[HAPTLVNumberValueBase copyWithZone:]
  -[HAPTLVNumberValueBase serializeWithError:]
  -[HAPTLVNumberValueBase _parseFromData:length:status:]
  -[HAPTLVNumberValueBase _serialize]


HAPTLVSignedNumberValue : HAPTLVNumberValueBase
  // class methods
  +[HAPTLVSignedNumberValue parsedFromData:error:]

  // instance methods
  -[HAPTLVSignedNumberValue _parseFromData:length:status:]
  -[HAPTLVSignedNumberValue _serialize]


HAPTLVUnsignedNumberValue : HAPTLVNumberValueBase
  // class methods
  +[HAPTLVUnsignedNumberValue parsedFromData:error:]

  // instance methods
  -[HAPTLVUnsignedNumberValue _parseFromData:length:status:]
  -[HAPTLVUnsignedNumberValue _serialize]


HAPTLVFloatNumberValue : HAPTLVNumberValueBase
  // class methods
  +[HAPTLVFloatNumberValue parsedFromData:error:]

  // instance methods
  -[HAPTLVFloatNumberValue _parseFromData:length:status:]
  -[HAPTLVFloatNumberValue _serialize]


HAPAccessoryReachabilityProfile : HMFObject <HAPAccessoryReachabilityProfile>
 @property  HAPCharacteristic *sleepIntervalCharacteristic
 @property  HAPCharacteristic *pollCharacteristic
 @property  double sleepInterval
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPAccessoryReachabilityProfile shortDescription]
  +[HAPAccessoryReachabilityProfile timeIntervalFromMillisecondNumberValue:]

  // instance methods
  -[HAPAccessoryReachabilityProfile initWithProfile:]
  -[HAPAccessoryReachabilityProfile .cxx_destruct]
  -[HAPAccessoryReachabilityProfile sleepInterval]
  -[HAPAccessoryReachabilityProfile setSleepInterval:]
  -[HAPAccessoryReachabilityProfile attributeDescriptions]
  -[HAPAccessoryReachabilityProfile init]
  -[HAPAccessoryReachabilityProfile copyWithZone:]
  -[HAPAccessoryReachabilityProfile pollCharacteristic]
  -[HAPAccessoryReachabilityProfile sleepIntervalCharacteristic]
  -[HAPAccessoryReachabilityProfile setSleepIntervalCharacteristic:]
  -[HAPAccessoryReachabilityProfile setPollCharacteristic:]
  -[HAPAccessoryReachabilityProfile initWithDiscoveredServices:]


HAPAccessoryReachabilityClient : HMFObject <HMFLogging, HMFTimerDelegate, HAPAccessoryReachabilityClient>
 @property  long long state
 @property  double confirmInterval
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <HAPAccessoryReachabilityDelegate> *delegate
 @property  <HAPAccessoryReachabilityProfile> *profile

  // class methods
  +[HAPAccessoryReachabilityClient initialize]
  +[HAPAccessoryReachabilityClient new]
  +[HAPAccessoryReachabilityClient logCategory]
  +[HAPAccessoryReachabilityClient shortDescription]

  // instance methods
  -[HAPAccessoryReachabilityClient kick]
  -[HAPAccessoryReachabilityClient setProfile:]
  -[HAPAccessoryReachabilityClient _stop]
  -[HAPAccessoryReachabilityClient _wait]
  -[HAPAccessoryReachabilityClient timerDidFire:]
  -[HAPAccessoryReachabilityClient confirm]
  -[HAPAccessoryReachabilityClient .cxx_destruct]
  -[HAPAccessoryReachabilityClient isRunning]
  -[HAPAccessoryReachabilityClient _poll]
  -[HAPAccessoryReachabilityClient setDelegate:]
  -[HAPAccessoryReachabilityClient setState:]
  -[HAPAccessoryReachabilityClient _enterState:]
  -[HAPAccessoryReachabilityClient init]
  -[HAPAccessoryReachabilityClient state]
  -[HAPAccessoryReachabilityClient startWithCompletionHandler:]
  -[HAPAccessoryReachabilityClient profile]
  -[HAPAccessoryReachabilityClient stopWithCompletionHandler:]
  -[HAPAccessoryReachabilityClient delegate]
  -[HAPAccessoryReachabilityClient shortDescription]
  -[HAPAccessoryReachabilityClient _timerDidFire:]
  -[HAPAccessoryReachabilityClient _runStateMachine]
  -[HAPAccessoryReachabilityClient initWithIdentifier:profile:operationQueue:]
  -[HAPAccessoryReachabilityClient _processProfile]
  -[HAPAccessoryReachabilityClient confirmInterval]


HAP2AccessoryServerBrowser : HAP2LoggingObject <HAP2AccessoryServerCoordinatorDelegate, HAP2AccessoryServerDelegate, HAP2StorageDelegate, HAPPowerManagerProtocol, HAP2AccessoryServerBrowserPrivate, HAP2AccessoryServerBrowser>
 @property  HAP2PropertyLock *propertyLock
 @property  NSArray *coordinatorInfo
 @property  NSOperationQueue *operationQueue
 @property  HAP2SerializedOperationQueue *workQueue
 @property  NSObject<OS_dispatch_queue> *dispatchWorkQueue
 @property  NSMutableArray *liveUnpairedAccessoryServers
 @property  NSMutableArray *livePairedAccessoryServers
 @property  NSMapTable *weakOperationQueuesByDeviceID
 @property  NSMutableArray *browserOperationQueue
 @property  HAP2AccessoryServerBrowserOperation *currentOperation
 @property  BOOL discovering
 @property  BOOL confirming
 @property  HAPPowerManager *powerManager
 @property  unsigned long powerState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <HAP2Storage> *storage
 @property  <HAP2AccessoryServerBrowserDelegate> *delegate
 @property  NSArray *unpairedAccessoryServers
 @property  NSArray *pairedAccessoryServers

  // class methods
  +[HAP2AccessoryServerBrowser new]

  // instance methods
  -[HAP2AccessoryServerBrowser stopDiscovering]
  -[HAP2AccessoryServerBrowser startDiscovering]
  -[HAP2AccessoryServerBrowser isDiscovering]
  -[HAP2AccessoryServerBrowser _startDiscovering]
  -[HAP2AccessoryServerBrowser propertyLock]
  -[HAP2AccessoryServerBrowser currentIdentity]
  -[HAP2AccessoryServerBrowser _stopDiscovering]
  -[HAP2AccessoryServerBrowser setDiscovering:]
  -[HAP2AccessoryServerBrowser setPowerState:]
  -[HAP2AccessoryServerBrowser operationQueue]
  -[HAP2AccessoryServerBrowser _finishStopDiscovering]
  -[HAP2AccessoryServerBrowser setPowerManager:]
  -[HAP2AccessoryServerBrowser coordinator:didLoseAccessory:error:]
  -[HAP2AccessoryServerBrowser powerManager]
  -[HAP2AccessoryServerBrowser initWithCoordinators:storage:]
  -[HAP2AccessoryServerBrowser isConfirming]
  -[HAP2AccessoryServerBrowser .cxx_destruct]
  -[HAP2AccessoryServerBrowser _removeAccessoryServerFromArray:withDeviceID:]
  -[HAP2AccessoryServerBrowser storage]
  -[HAP2AccessoryServerBrowser coordinator:didCreateUnpairedAccessoryServer:]
  -[HAP2AccessoryServerBrowser setDelegate:]
  -[HAP2AccessoryServerBrowser dispatchWorkQueue]
  -[HAP2AccessoryServerBrowser associateAccessoryWithControllerKeyUsingAccessoryPublicKey:]
  -[HAP2AccessoryServerBrowser coordinator:didStartDiscoveringWithError:]
  -[HAP2AccessoryServerBrowser operationQueueForDeviceID:]
  -[HAP2AccessoryServerBrowser init]
  -[HAP2AccessoryServerBrowser _lookupPairedAccessoryServerWithDeviceID:]
  -[HAP2AccessoryServerBrowser accessoryWithDeviceIDIsPaired:completion:]
  -[HAP2AccessoryServerBrowser handleCurrentNetworkChangedNotification:]
  -[HAP2AccessoryServerBrowser associateAccessoryWithControllerKeyUsingAccessoryIdentifier:]
  -[HAP2AccessoryServerBrowser devicePowerStateChanged:]
  -[HAP2AccessoryServerBrowser powerState]
  -[HAP2AccessoryServerBrowser liveUnpairedAccessoryServers]
  -[HAP2AccessoryServerBrowser initializeKeyBagIfNecessary]
  -[HAP2AccessoryServerBrowser onDemandConnectionsAreEnabled]
  -[HAP2AccessoryServerBrowser coordinator:didStopDiscoveringWithError:]
  -[HAP2AccessoryServerBrowser livePairedAccessoryServers]
  -[HAP2AccessoryServerBrowser currentOperation]
  -[HAP2AccessoryServerBrowser _beginOperation]
  -[HAP2AccessoryServerBrowser workQueue]
  -[HAP2AccessoryServerBrowser unpairedAccessoryServers]
  -[HAP2AccessoryServerBrowser browserOperationQueue]
  -[HAP2AccessoryServerBrowser weakOperationQueuesByDeviceID]
  -[HAP2AccessoryServerBrowser accessoryServerDidUpdateConnectionState:]
  -[HAP2AccessoryServerBrowser savePublicKey:forAccessoryWithID:completion:]
  -[HAP2AccessoryServerBrowser delegate]
  -[HAP2AccessoryServerBrowser _notifyCoordinatorsOfAccessoryWithDeviceID:]
  -[HAP2AccessoryServerBrowser startConfirmingPairedAccessoryReachability]
  -[HAP2AccessoryServerBrowser _updateArraysForDiscoveredAccessoryServer:paired:lost:existing:]
  -[HAP2AccessoryServerBrowser _finishStartDiscovering]
  -[HAP2AccessoryServerBrowser _finishOperation]
  -[HAP2AccessoryServerBrowser retrieveLocalPairingIdentityForDeviceID:completion:]
  -[HAP2AccessoryServerBrowser pairedAccessoryServers]
  -[HAP2AccessoryServerBrowser storage:didRemoveKeyWithIdentifier:]
  -[HAP2AccessoryServerBrowser shouldRetryPVDueToAuthenticationError:]
  -[HAP2AccessoryServerBrowser _enqueueOperation:]
  -[HAP2AccessoryServerBrowser removePublicKeyForAccessoryWithID:completion:]
  -[HAP2AccessoryServerBrowser stopConfirmingPairedAccessoryReachability]
  -[HAP2AccessoryServerBrowser coordinator:didCreatePairedAccessoryServer:]
  -[HAP2AccessoryServerBrowser setLiveUnpairedAccessoryServers:]
  -[HAP2AccessoryServerBrowser setLivePairedAccessoryServers:]
  -[HAP2AccessoryServerBrowser storage:didSaveKeyWithIdentifier:]
  -[HAP2AccessoryServerBrowser coordinatorInfo]
  -[HAP2AccessoryServerBrowser setConfirming:]


HAP2AccessoryServerBrowserOperation : HAP2LoggingObject
 @property  unsigned long type
 @property  NSMutableSet *pendingCoordinators
 @property  NSError *error

  // instance methods
  -[HAP2AccessoryServerBrowserOperation initWithType:]
  -[HAP2AccessoryServerBrowserOperation .cxx_destruct]
  -[HAP2AccessoryServerBrowserOperation setPendingCoordinators:]
  -[HAP2AccessoryServerBrowserOperation pendingCoordinators]
  -[HAP2AccessoryServerBrowserOperation type]
  -[HAP2AccessoryServerBrowserOperation setError:]
  -[HAP2AccessoryServerBrowserOperation error]


HAP2AccessoryServerBrowserCoordinatorInfo : NSObject
 @property  <HAP2AccessoryServerCoordinatorPrivate> *coordinator
 @property  NSError *error

  // instance methods
  -[HAP2AccessoryServerBrowserCoordinatorInfo initWithCoordinator:]
  -[HAP2AccessoryServerBrowserCoordinatorInfo coordinator]
  -[HAP2AccessoryServerBrowserCoordinatorInfo .cxx_destruct]
  -[HAP2AccessoryServerBrowserCoordinatorInfo setError:]
  -[HAP2AccessoryServerBrowserCoordinatorInfo error]


HAP2Cancelable : HAP2LoggingObject <HAP2Cancelable>
 @property  @? block
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAP2Cancelable ignore]
  +[HAP2Cancelable new]
  +[HAP2Cancelable cancelableWithBlock:]

  // instance methods
  -[HAP2Cancelable setBlock:]
  -[HAP2Cancelable .cxx_destruct]
  -[HAP2Cancelable init]
  -[HAP2Cancelable initWithBlock:]
  -[HAP2Cancelable cancelWithError:]
  -[HAP2Cancelable block]


HAP2CancelableObject : HAP2LoggingObject <HAP2Cancelable>
 @property  HAP2PropertyLock *propertyLock
 @property  NSError *cancelError
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HAP2CancelableObject propertyLock]
  -[HAP2CancelableObject .cxx_destruct]
  -[HAP2CancelableObject init]
  -[HAP2CancelableObject cancelWithError:]
  -[HAP2CancelableObject cancelError]
  -[HAP2CancelableObject setCancelError:]


HAP2EncodedEmptyResponseThread : HAP2LoggingObject <HAP2EncodedResponse>
 @property  BOOL encrypted
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HAP2EncodedEmptyResponseThread isEncrypted]


HAP2AsynchronousOperation : NSOperation
 @property  BOOL executing
 @property  BOOL finished
 @property  BOOL cancelled
 @property  HMFActivity *activity
 @property  NSError *error

  // class methods
  +[HAP2AsynchronousOperation automaticallyNotifiesObserversForKey:]

  // instance methods
  -[HAP2AsynchronousOperation isAsynchronous]
  -[HAP2AsynchronousOperation isFinished]
  -[HAP2AsynchronousOperation initWithName:activity:]
  -[HAP2AsynchronousOperation main]
  -[HAP2AsynchronousOperation initWithName:optionalActivity:]
  -[HAP2AsynchronousOperation .cxx_destruct]
  -[HAP2AsynchronousOperation isExecuting]
  -[HAP2AsynchronousOperation isCancelled]
  -[HAP2AsynchronousOperation initWithName:]
  -[HAP2AsynchronousOperation init]
  -[HAP2AsynchronousOperation activity]
  -[HAP2AsynchronousOperation cancel]
  -[HAP2AsynchronousOperation finish]
  -[HAP2AsynchronousOperation start]
  -[HAP2AsynchronousOperation cancelWithError:]
  -[HAP2AsynchronousOperation finishWithError:]
  -[HAP2AsynchronousOperation error]


HAPSuspendedAccessory : HMFObject
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSString *name
 @property  NSString *identifier
 @property  unsigned long type

  // instance methods
  -[HAPSuspendedAccessory name]
  -[HAPSuspendedAccessory .cxx_destruct]
  -[HAPSuspendedAccessory setQueue:]
  -[HAPSuspendedAccessory identifier]
  -[HAPSuspendedAccessory type]
  -[HAPSuspendedAccessory queue]
  -[HAPSuspendedAccessory wakeWithCompletion:]
  -[HAPSuspendedAccessory initWithName:identifier:type:queue:]


HAPSuspendedAccessoryIP : HAPSuspendedAccessory
 @property  unsigned long timeout
 @property  NSArray *wakeTuples
 @property  NSString *dnsName

  // class methods
  +[HAPSuspendedAccessoryIP logCategory]

  // instance methods
  -[HAPSuspendedAccessoryIP _closeConnection]
  -[HAPSuspendedAccessoryIP .cxx_destruct]
  -[HAPSuspendedAccessoryIP setTimeout:]
  -[HAPSuspendedAccessoryIP timeout]
  -[HAPSuspendedAccessoryIP dealloc]
  -[HAPSuspendedAccessoryIP dnsName]
  -[HAPSuspendedAccessoryIP setDnsName:]
  -[HAPSuspendedAccessoryIP wakeWithCompletion:]
  -[HAPSuspendedAccessoryIP initWithName:identifier:wakeTuples:queue:]
  -[HAPSuspendedAccessoryIP wakeTuples]
  -[HAPSuspendedAccessoryIP _wakeWithTuple:dnsName:]


HAPAccessoryWakeTuple : HMFObject
 @property  NSString *wakeAddress
 @property  long long wakePort
 @property  NSData *wakePattern

  // instance methods
  -[HAPAccessoryWakeTuple .cxx_destruct]
  -[HAPAccessoryWakeTuple isEqual:]
  -[HAPAccessoryWakeTuple wakePort]
  -[HAPAccessoryWakeTuple wakePattern]
  -[HAPAccessoryWakeTuple initWithPort:wakeAddress:wakePattern:]
  -[HAPAccessoryWakeTuple wakeAddress]


HAPNotificationContextSourceWrapper : NSObject <NSCopying, HAPTLVProtocol>
 @property  long long value
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPNotificationContextSourceWrapper parsedFromData:error:]

  // instance methods
  -[HAPNotificationContextSourceWrapper init]
  -[HAPNotificationContextSourceWrapper isEqual:]
  -[HAPNotificationContextSourceWrapper initWithValue:]
  -[HAPNotificationContextSourceWrapper setValue:]
  -[HAPNotificationContextSourceWrapper value]
  -[HAPNotificationContextSourceWrapper parseFromData:error:]
  -[HAPNotificationContextSourceWrapper copyWithZone:]
  -[HAPNotificationContextSourceWrapper serializeWithError:]


HAPAccessoryPairingRequest : HMFObject <NSCopying>
 @property  HAPPairingIdentity *pairingIdentity
 @property  BOOL requiresUserConsent
 @property  NSData *ownershipToken
 @property  NSString *ssid
 @property  NSData *psk
 @property  NSString *isoCountryCode
 @property  NSNumber *chipFabricIndex

  // instance methods
  -[HAPAccessoryPairingRequest ssid]
  -[HAPAccessoryPairingRequest psk]
  -[HAPAccessoryPairingRequest setIsoCountryCode:]
  -[HAPAccessoryPairingRequest isoCountryCode]
  -[HAPAccessoryPairingRequest pairingIdentity]
  -[HAPAccessoryPairingRequest setOwnershipToken:]
  -[HAPAccessoryPairingRequest .cxx_destruct]
  -[HAPAccessoryPairingRequest attributeDescriptions]
  -[HAPAccessoryPairingRequest setPsk:]
  -[HAPAccessoryPairingRequest isEqual:]
  -[HAPAccessoryPairingRequest setSsid:]
  -[HAPAccessoryPairingRequest ownershipToken]
  -[HAPAccessoryPairingRequest copyWithZone:]
  -[HAPAccessoryPairingRequest setPairingIdentity:]
  -[HAPAccessoryPairingRequest setChipFabricIndex:]
  -[HAPAccessoryPairingRequest requiresUserConsent]
  -[HAPAccessoryPairingRequest setRequiresUserConsent:]
  -[HAPAccessoryPairingRequest chipFabricIndex]


HAPAccessoryServerBrowserIP : HAPAccessoryServerBrowser <HMFTimerDelegate, HAPPowerManagerProtocol, HAPWACAccessoryBrowserDelegate, HAPAccessoryServerNotification>
 @property  NSMutableSet *discoveredAccessoryServers
 @property  <HAPAccessoryServerBrowserDelegate> *delegate
 @property  NSObject<OS_dispatch_queue> *delegateQueue
 @property  NSMutableSet *pendingBonjourEvents
 @property  HMFTimer *bonjourEventTimer
 @property  HAPWACAccessoryBrowser *hapWACBrowser
 @property  HAPPowerManager *powerManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions

  // instance methods
  -[HAPAccessoryServerBrowserIP setDelegate:queue:]
  -[HAPAccessoryServerBrowserIP setBonjourEventTimer:]
  -[HAPAccessoryServerBrowserIP indicateNotificationFromServer:notifyType:withDictionary:]
  -[HAPAccessoryServerBrowserIP processPendingBonjourRemoveEvents:]
  -[HAPAccessoryServerBrowserIP timerDidFire:]
  -[HAPAccessoryServerBrowserIP delegateQueue]
  -[HAPAccessoryServerBrowserIP _server:forHAPWACAccessory:]
  -[HAPAccessoryServerBrowserIP stopDiscoveringAccessoryServers]
  -[HAPAccessoryServerBrowserIP _invalidateAccessoryServers:]
  -[HAPAccessoryServerBrowserIP setDelegateQueue:]
  -[HAPAccessoryServerBrowserIP setPowerManager:]
  -[HAPAccessoryServerBrowserIP stopDiscoveringWACAccessoryServersWithInvalidation:]
  -[HAPAccessoryServerBrowserIP startDiscoveringWACAccessoryServerWithIdentifier:]
  -[HAPAccessoryServerBrowserIP wacBrowser:didFindHAPWACAccessory:]
  -[HAPAccessoryServerBrowserIP _matchAccessoryServerWithSetupID:serverIdentifier:completionHandler:]
  -[HAPAccessoryServerBrowserIP _timerDidExpire:]
  -[HAPAccessoryServerBrowserIP powerManager]
  -[HAPAccessoryServerBrowserIP _handleBonjourRemoveWithEventInfo:]
  -[HAPAccessoryServerBrowserIP discoveredAccessoryServers]
  -[HAPAccessoryServerBrowserIP setDiscoveredAccessoryServers:]
  -[HAPAccessoryServerBrowserIP _initializeAndStartBonjourBrowser]
  -[HAPAccessoryServerBrowserIP .cxx_destruct]
  -[HAPAccessoryServerBrowserIP _pendBonjourEvent:]
  -[HAPAccessoryServerBrowserIP wacBrowser:didRemoveHAPWACAccessory:]
  -[HAPAccessoryServerBrowserIP setDelegate:]
  -[HAPAccessoryServerBrowserIP startDiscoveringAccessoryServers]
  -[HAPAccessoryServerBrowserIP linkType]
  -[HAPAccessoryServerBrowserIP _delegateRespondsToSelector:]
  -[HAPAccessoryServerBrowserIP visible2Pt4Networks]
  -[HAPAccessoryServerBrowserIP unitTest_handleBonjourBrowserEvent:eventInfo:]
  -[HAPAccessoryServerBrowserIP serverWithIdentifier:ignoreLPM:]
  -[HAPAccessoryServerBrowserIP startDiscoveringWACAccessoryServers]
  -[HAPAccessoryServerBrowserIP _purgePendingBonjourEvents:withProcessing:]
  -[HAPAccessoryServerBrowserIP devicePowerStateChanged:]
  -[HAPAccessoryServerBrowserIP initWithQueue:]
  -[HAPAccessoryServerBrowserIP _handleBonjourBrowserEvent:eventInfo:]
  -[HAPAccessoryServerBrowserIP wacBrowser:didFindUnconfiguredPairedHAPWACAccessory:]
  -[HAPAccessoryServerBrowserIP bonjourEventTimer]
  -[HAPAccessoryServerBrowserIP startDiscoveringAirPlayAccessoriesWithDelegate:]
  -[HAPAccessoryServerBrowserIP matchAccessoryServerWithSetupID:serverIdentifier:completionHandler:]
  -[HAPAccessoryServerBrowserIP _doReachabilityUpdateForServer:withDictionary:]
  -[HAPAccessoryServerBrowserIP setPendingBonjourEvents:]
  -[HAPAccessoryServerBrowserIP delegate]
  -[HAPAccessoryServerBrowserIP notifyDelegatesOfWACCompletionWithIdentifier:error:]
  -[HAPAccessoryServerBrowserIP setHapWACBrowser:]
  -[HAPAccessoryServerBrowserIP _invalidateWACServers]
  -[HAPAccessoryServerBrowserIP hapWACBrowser]
  -[HAPAccessoryServerBrowserIP _server:forBonjourDevice:]
  -[HAPAccessoryServerBrowserIP _processPendingBonjourEvent:]
  -[HAPAccessoryServerBrowserIP _invalidateAndRemoveAccessoryServer:]
  -[HAPAccessoryServerBrowserIP processPendingBonjourRemoveEventsForDeviceID:]
  -[HAPAccessoryServerBrowserIP discoverAccessoryServerWithIdentifier:]
  -[HAPAccessoryServerBrowserIP _pendBonjourRemoveEvent:]
  -[HAPAccessoryServerBrowserIP _handleBonjourAddOrUpdateWithEventInfo:]
  -[HAPAccessoryServerBrowserIP wacBrowser]
  -[HAPAccessoryServerBrowserIP _setReachability:forServer:]
  -[HAPAccessoryServerBrowserIP pendingBonjourEvents]


HAP2AccessoryServerSecureTransportFactoryThread : NSObject <HAP2AccessoryServerSecureTransportFactory>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HAP2AccessoryServerSecureTransportFactoryThread createSecureTransportWithTransport:isPaired:encryptedSession:]


HAPCharacteristicValueTransitionTypesWrapper : NSObject <NSCopying, HAPTLVProtocol>
 @property  unsigned long value
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPCharacteristicValueTransitionTypesWrapper parsedFromData:error:]

  // instance methods
  -[HAPCharacteristicValueTransitionTypesWrapper init]
  -[HAPCharacteristicValueTransitionTypesWrapper isEqual:]
  -[HAPCharacteristicValueTransitionTypesWrapper initWithValue:]
  -[HAPCharacteristicValueTransitionTypesWrapper setValue:]
  -[HAPCharacteristicValueTransitionTypesWrapper value]
  -[HAPCharacteristicValueTransitionTypesWrapper parseFromData:error:]
  -[HAPCharacteristicValueTransitionTypesWrapper copyWithZone:]
  -[HAPCharacteristicValueTransitionTypesWrapper serializeWithError:]


HAP2AccessoryServerSecureTransportBase : HAP2AccessoryServerTransportBase <HAP2AccessoryServerTransportDelegate, HAP2AccessoryServerSecureTransport>
 @property  <HAPEncryptedSession> *encryptedSession
 @property  <HAP2AccessoryServerTransport> *transport
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <HAP2AccessoryServerSecureTransportDelegate> *delegate
 @property  unsigned long state
 @property  double maxRequestTimeout
 @property  <HAP2AccessoryServerTransportCommon> *underlyingTransport

  // class methods
  +[HAP2AccessoryServerSecureTransportBase defaultEncryptedSession]

  // instance methods
  -[HAP2AccessoryServerSecureTransportBase transport]
  -[HAP2AccessoryServerSecureTransportBase .cxx_destruct]
  -[HAP2AccessoryServerSecureTransportBase setDelegate:]
  -[HAP2AccessoryServerSecureTransportBase encryptData:error:]
  -[HAP2AccessoryServerSecureTransportBase delegate]
  -[HAP2AccessoryServerSecureTransportBase protocolFeaturesForVersion:]
  -[HAP2AccessoryServerSecureTransportBase initWithOperationQueue:delegateQueue:transport:]
  -[HAP2AccessoryServerSecureTransportBase setEncryptedSession:]
  -[HAP2AccessoryServerSecureTransportBase wellKnownEndpoint:]
  -[HAP2AccessoryServerSecureTransportBase mimeTypeForWellKnownEndpoint:]
  -[HAP2AccessoryServerSecureTransportBase transport:didChangeState:error:]
  -[HAP2AccessoryServerSecureTransportBase transport:didReceiveEvent:]
  -[HAP2AccessoryServerSecureTransportBase doOpenWithCompletion:]
  -[HAP2AccessoryServerSecureTransportBase doCloseWithError:completion:]
  -[HAP2AccessoryServerSecureTransportBase doUpdateMaxRequestTimeout:]
  -[HAP2AccessoryServerSecureTransportBase didChangeStateWithError:]
  -[HAP2AccessoryServerSecureTransportBase doSendRequest:completion:]
  -[HAP2AccessoryServerSecureTransportBase endpointForCharacteristic:]
  -[HAP2AccessoryServerSecureTransportBase endpointForCharacteristics:]
  -[HAP2AccessoryServerSecureTransportBase mimeTypeForCharacteristicRequests]
  -[HAP2AccessoryServerSecureTransportBase mergeWithNewTransport:]
  -[HAP2AccessoryServerSecureTransportBase underlyingTransport]
  -[HAP2AccessoryServerSecureTransportBase initWithOperationQueue:delegateQueue:transport:encryptedSession:]
  -[HAP2AccessoryServerSecureTransportBase _encryptRequest:completion:]
  -[HAP2AccessoryServerSecureTransportBase encryptedSession]
  -[HAP2AccessoryServerSecureTransportBase decryptData:type:error:]
  -[HAP2AccessoryServerSecureTransportBase _sendRequest:completion:]
  -[HAP2AccessoryServerSecureTransportBase _decryptResponse:request:completion:]


HAP2AccessoryServerSecureTransportBaseDefaultEncryptedSession : NSObject <HAPEncryptedSession>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HAP2AccessoryServerSecureTransportBaseDefaultEncryptedSession encryptData:additionalAuthenticatedData:error:]
  -[HAP2AccessoryServerSecureTransportBaseDefaultEncryptedSession decryptData:additionalAuthenticatedData:error:]


HAPAccessoryServerHAP2Adapter : HAPAccessoryServer <HAP2AccessoryDelegate, HAP2PairedAccessoryServerDelegate, HAP2UnpairedAccessoryServerDelegate, HAP2UnpairedAccessoryServerPairDelegate, HMFTimerDelegate, HAP2AccessoryServerDelegate>
 @property  HAP2SerializedOperationQueue *operationQueue
 @property  <HAP2UnpairedAccessoryServer> *unpairedServer
 @property  <HAP2PairedAccessoryServer> *pairedServer
 @property  BOOL internallyPaired
 @property  <HAP2Cancelable> *pairingSessionCancelable
 @property  @? setupCodeCompletion
 @property  @? userConsentCompletion
 @property  BOOL skipUserConsent
 @property  @? authValidationCompletion
 @property  @? softwareAuthFinishedCompletion
 @property  @? authenticateUUIDCompletion
 @property  BOOL discoverAccessoriesOncePaired
 @property  HMFTimer *connectionIdleTimer
 @property  double disconnectOnIdleTimeout
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPAccessoryServerHAP2Adapter initialize]

  // instance methods
  -[HAPAccessoryServerHAP2Adapter isPaired]
  -[HAPAccessoryServerHAP2Adapter currentIdentity]
  -[HAPAccessoryServerHAP2Adapter setAccessories:]
  -[HAPAccessoryServerHAP2Adapter operationQueue]
  -[HAPAccessoryServerHAP2Adapter clientQueue]
  -[HAPAccessoryServerHAP2Adapter disconnect]
  -[HAPAccessoryServerHAP2Adapter timerDidFire:]
  -[HAPAccessoryServerHAP2Adapter continuePairingAfterAuthPrompt]
  -[HAPAccessoryServerHAP2Adapter validatePairingAuthMethod:]
  -[HAPAccessoryServerHAP2Adapter startPing]
  -[HAPAccessoryServerHAP2Adapter tearDownSessionOnAuthCompletion]
  -[HAPAccessoryServerHAP2Adapter tryPairingPassword:error:]
  -[HAPAccessoryServerHAP2Adapter _handleConnectionIdleTimeout]
  -[HAPAccessoryServerHAP2Adapter _kickConnectionIdleTimer]
  -[HAPAccessoryServerHAP2Adapter startPairingWithRequest:]
  -[HAPAccessoryServerHAP2Adapter enableEvents:forCharacteristics:withCompletionHandler:queue:]
  -[HAPAccessoryServerHAP2Adapter .cxx_destruct]
  -[HAPAccessoryServerHAP2Adapter stopPairingWithError:]
  -[HAPAccessoryServerHAP2Adapter writeCharacteristicValues:timeout:completionQueue:completionHandler:]
  -[HAPAccessoryServerHAP2Adapter _startConnectionIdleTimer]
  -[HAPAccessoryServerHAP2Adapter authenticateAccessory]
  -[HAPAccessoryServerHAP2Adapter _suspendConnectionIdleTimer]
  -[HAPAccessoryServerHAP2Adapter linkType]
  -[HAPAccessoryServerHAP2Adapter disconnectOnIdleUpdated]
  -[HAPAccessoryServerHAP2Adapter setDisconnectOnIdleTimeout:]
  -[HAPAccessoryServerHAP2Adapter handleUpdatesForCharacteristics:stateNumber:]
  -[HAPAccessoryServerHAP2Adapter disconnectOnIdleTimeout]
  -[HAPAccessoryServerHAP2Adapter identifyWithCompletion:]
  -[HAPAccessoryServerHAP2Adapter listPairingsWithCompletionQueue:completionHandler:]
  -[HAPAccessoryServerHAP2Adapter removePairingForCurrentControllerOnQueue:completion:]
  -[HAPAccessoryServerHAP2Adapter isReachable]
  -[HAPAccessoryServerHAP2Adapter onDemandConnectionsAreEnabled]
  -[HAPAccessoryServerHAP2Adapter discoverAccessories]
  -[HAPAccessoryServerHAP2Adapter connectionIdleTimer]
  -[HAPAccessoryServerHAP2Adapter setConnectionIdleTimer:]
  -[HAPAccessoryServerHAP2Adapter continuePairingUsingWAC]
  -[HAPAccessoryServerHAP2Adapter addPairing:completionQueue:completionHandler:]
  -[HAPAccessoryServerHAP2Adapter accessoryServerDidUpdateConnectionState:]
  -[HAPAccessoryServerHAP2Adapter version]
  -[HAPAccessoryServerHAP2Adapter continueAuthAfterValidation:]
  -[HAPAccessoryServerHAP2Adapter updateActiveDisconnectOnIdleTimeout:]
  -[HAPAccessoryServerHAP2Adapter category]
  -[HAPAccessoryServerHAP2Adapter provisionToken:]
  -[HAPAccessoryServerHAP2Adapter _enableEvents:forCharacteristics:withCompletionHandler:queue:]
  -[HAPAccessoryServerHAP2Adapter accessories]
  -[HAPAccessoryServerHAP2Adapter stopPing]
  -[HAPAccessoryServerHAP2Adapter hasAdvertisement]
  -[HAPAccessoryServerHAP2Adapter readCharacteristicValues:timeout:completionQueue:completionHandler:]
  -[HAPAccessoryServerHAP2Adapter primaryAccessory]
  -[HAPAccessoryServerHAP2Adapter removePairing:completionQueue:completionHandler:]
  -[HAPAccessoryServerHAP2Adapter productData]
  -[HAPAccessoryServerHAP2Adapter setPrimaryAccessory:]
  -[HAPAccessoryServerHAP2Adapter setupHash]
  -[HAPAccessoryServerHAP2Adapter isSecuritySessionOpen]
  -[HAPAccessoryServerHAP2Adapter configNumber]
  -[HAPAccessoryServerHAP2Adapter reachabilityChangedReason]
  -[HAPAccessoryServerHAP2Adapter setSecuritySessionOpen:]
  -[HAPAccessoryServerHAP2Adapter accessoryServerDidUpdateHasPairings:]
  -[HAPAccessoryServerHAP2Adapter accessoryServerDidUpdateName:]
  -[HAPAccessoryServerHAP2Adapter accessoryServerDidUpdateCategory:]
  -[HAPAccessoryServerHAP2Adapter initWithOperationQueue:accessoryServer:]
  -[HAPAccessoryServerHAP2Adapter shouldDiscoverAccessoriesOncePaired]
  -[HAPAccessoryServerHAP2Adapter setDiscoverAccessoriesOncePaired:]
  -[HAPAccessoryServerHAP2Adapter closeSessions]
  -[HAPAccessoryServerHAP2Adapter isInternallyPaired]
  -[HAPAccessoryServerHAP2Adapter activeServer]
  -[HAPAccessoryServerHAP2Adapter pairedServer]
  -[HAPAccessoryServerHAP2Adapter _hap2CharacteristicTuplesForHAPCharacteristics:tuples:error:]
  -[HAPAccessoryServerHAP2Adapter unpairedServer]
  -[HAPAccessoryServerHAP2Adapter authValidationCompletion]
  -[HAPAccessoryServerHAP2Adapter _continuePairingAfterAuthPromptWithError:]
  -[HAPAccessoryServerHAP2Adapter setAuthValidationCompletion:]
  -[HAPAccessoryServerHAP2Adapter authenticateUUIDCompletion]
  -[HAPAccessoryServerHAP2Adapter setAuthenticateUUIDCompletion:]
  -[HAPAccessoryServerHAP2Adapter pairingSessionCancelable]
  -[HAPAccessoryServerHAP2Adapter _notifyDelegatePairingStoppedWithError:]
  -[HAPAccessoryServerHAP2Adapter setPairingSessionCancelable:]
  -[HAPAccessoryServerHAP2Adapter userConsentCompletion]
  -[HAPAccessoryServerHAP2Adapter _handleIncorrectStartPairingCall]
  -[HAPAccessoryServerHAP2Adapter setUserConsentCompletion:]
  -[HAPAccessoryServerHAP2Adapter softwareAuthFinishedCompletion]
  -[HAPAccessoryServerHAP2Adapter setSoftwareAuthFinishedCompletion:]
  -[HAPAccessoryServerHAP2Adapter setSkipUserConsent:]
  -[HAPAccessoryServerHAP2Adapter setupCodeCompletion]
  -[HAPAccessoryServerHAP2Adapter setSetupCodeCompletion:]
  -[HAPAccessoryServerHAP2Adapter _readCharacteristicValues:timeout:completionQueue:completionHandler:]
  -[HAPAccessoryServerHAP2Adapter _writeCharacteristicValues:timeout:completionQueue:completionHandler:]
  -[HAPAccessoryServerHAP2Adapter _printMissingValues:]
  -[HAPAccessoryServerHAP2Adapter _isActiveServer:]
  -[HAPAccessoryServerHAP2Adapter _accessoryFromHAP2Accessory:]
  -[HAPAccessoryServerHAP2Adapter _informDelegateOfUpdatedAccessories:error:]
  -[HAPAccessoryServerHAP2Adapter _resetPairingState]
  -[HAPAccessoryServerHAP2Adapter shouldSkipUserConsent]
  -[HAPAccessoryServerHAP2Adapter _firedConnectionIdleTimer:]
  -[HAPAccessoryServerHAP2Adapter accessory:didNotifyForUpdatedValuesOnCharacteristic:]
  -[HAPAccessoryServerHAP2Adapter accessoryServerDidBecomeUnpaired:]
  -[HAPAccessoryServerHAP2Adapter accessoryServerDidUpdateAccessories:]
  -[HAPAccessoryServerHAP2Adapter accessoryServer:didFailToUpdateAccessoriesWithError:]
  -[HAPAccessoryServerHAP2Adapter accessoryServer:doesRequirePermission:completion:]
  -[HAPAccessoryServerHAP2Adapter accessoryServer:doesRequireSetupCodeWithCompletion:]
  -[HAPAccessoryServerHAP2Adapter accessoryServer:didRejectSetupCodeWithBackoffInterval:completion:]
  -[HAPAccessoryServerHAP2Adapter accessoryServer:didCompleteWithError:]
  -[HAPAccessoryServerHAP2Adapter accessoryServer:validateSoftwareAuthUUID:token:model:completion:]
  -[HAPAccessoryServerHAP2Adapter accessoryServer:validatePairingCert:model:completion:]
  -[HAPAccessoryServerHAP2Adapter accessoryServer:authenticateSoftwareAuthUUID:token:completion:]
  -[HAPAccessoryServerHAP2Adapter accessoryServer:confirmSoftwareAuthUUID:token:completion:]
  -[HAPAccessoryServerHAP2Adapter accessoryServer:didFinishAuthWithError:]
  -[HAPAccessoryServerHAP2Adapter initWithUnpairedServer:]
  -[HAPAccessoryServerHAP2Adapter initWithPairedServer:]
  -[HAPAccessoryServerHAP2Adapter setUnpairedServer:]
  -[HAPAccessoryServerHAP2Adapter setPairedServer:]
  -[HAPAccessoryServerHAP2Adapter setShouldBePaired:]
  -[HAPAccessoryServerHAP2Adapter supportsTimedWrite]
  -[HAPAccessoryServerHAP2Adapter _hapIdentifierForAccessory:]
  -[HAPAccessoryServerHAP2Adapter setInternallyPaired:]


HAP2CharacteristicTuple : NSObject
 @property  <HAP2Accessory> *accessory
 @property  NSMutableArray *values

  // instance methods
  -[HAP2CharacteristicTuple values]
  -[HAP2CharacteristicTuple accessory]
  -[HAP2CharacteristicTuple .cxx_destruct]
  -[HAP2CharacteristicTuple initWithAccessory:]


HAPCharacteristicValueActiveTransitionContext : NSObject <NSCopying, HAPTLVProtocol>
 @property  HAPTLVUnsignedNumberValue *HAPInstanceID
 @property  NSData *controllerContext
 @property  HAPTLVUnsignedNumberValue *timeElapsedSinceStart
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPCharacteristicValueActiveTransitionContext parsedFromData:error:]

  // instance methods
  -[HAPCharacteristicValueActiveTransitionContext .cxx_destruct]
  -[HAPCharacteristicValueActiveTransitionContext init]
  -[HAPCharacteristicValueActiveTransitionContext isEqual:]
  -[HAPCharacteristicValueActiveTransitionContext parseFromData:error:]
  -[HAPCharacteristicValueActiveTransitionContext copyWithZone:]
  -[HAPCharacteristicValueActiveTransitionContext serializeWithError:]
  -[HAPCharacteristicValueActiveTransitionContext controllerContext]
  -[HAPCharacteristicValueActiveTransitionContext HAPInstanceID]
  -[HAPCharacteristicValueActiveTransitionContext timeElapsedSinceStart]
  -[HAPCharacteristicValueActiveTransitionContext setHAPInstanceID:]
  -[HAPCharacteristicValueActiveTransitionContext setControllerContext:]
  -[HAPCharacteristicValueActiveTransitionContext setTimeElapsedSinceStart:]
  -[HAPCharacteristicValueActiveTransitionContext initWithHAPInstanceID:controllerContext:timeElapsedSinceStart:]


HAPCharacteristicValueLinearDerivedTransition : NSObject <NSCopying, HAPTLVProtocol>
 @property  NSMutableArray *transitionPoints
 @property  HAPTLVUnsignedNumberValue *sourceHAPInstanceID
 @property  HAPCharacteristicValueRange *sourceValueRange
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPCharacteristicValueLinearDerivedTransition parsedFromData:error:]

  // instance methods
  -[HAPCharacteristicValueLinearDerivedTransition .cxx_destruct]
  -[HAPCharacteristicValueLinearDerivedTransition init]
  -[HAPCharacteristicValueLinearDerivedTransition isEqual:]
  -[HAPCharacteristicValueLinearDerivedTransition parseFromData:error:]
  -[HAPCharacteristicValueLinearDerivedTransition copyWithZone:]
  -[HAPCharacteristicValueLinearDerivedTransition serializeWithError:]
  -[HAPCharacteristicValueLinearDerivedTransition transitionPoints]
  -[HAPCharacteristicValueLinearDerivedTransition initWithTransitionPoints:sourceHAPInstanceID:sourceValueRange:]
  -[HAPCharacteristicValueLinearDerivedTransition setTransitionPoints:]
  -[HAPCharacteristicValueLinearDerivedTransition setSourceHAPInstanceID:]
  -[HAPCharacteristicValueLinearDerivedTransition setSourceValueRange:]
  -[HAPCharacteristicValueLinearDerivedTransition sourceHAPInstanceID]
  -[HAPCharacteristicValueLinearDerivedTransition sourceValueRange]


HAPCharacteristicValueLinearDerivedTransitionPoint : NSObject <NSCopying, HAPTLVProtocol>
 @property  HAPTLVFloatNumberValue *scale
 @property  HAPTLVFloatNumberValue *offset
 @property  HAPTLVUnsignedNumberValue *targetCompletionDuration
 @property  HAPTLVUnsignedNumberValue *startDelayDuration
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPCharacteristicValueLinearDerivedTransitionPoint parsedFromData:error:]

  // instance methods
  -[HAPCharacteristicValueLinearDerivedTransitionPoint offset]
  -[HAPCharacteristicValueLinearDerivedTransitionPoint .cxx_destruct]
  -[HAPCharacteristicValueLinearDerivedTransitionPoint init]
  -[HAPCharacteristicValueLinearDerivedTransitionPoint isEqual:]
  -[HAPCharacteristicValueLinearDerivedTransitionPoint setScale:]
  -[HAPCharacteristicValueLinearDerivedTransitionPoint parseFromData:error:]
  -[HAPCharacteristicValueLinearDerivedTransitionPoint setOffset:]
  -[HAPCharacteristicValueLinearDerivedTransitionPoint copyWithZone:]
  -[HAPCharacteristicValueLinearDerivedTransitionPoint scale]
  -[HAPCharacteristicValueLinearDerivedTransitionPoint serializeWithError:]
  -[HAPCharacteristicValueLinearDerivedTransitionPoint targetCompletionDuration]
  -[HAPCharacteristicValueLinearDerivedTransitionPoint initWithScale:offset:targetCompletionDuration:startDelayDuration:]
  -[HAPCharacteristicValueLinearDerivedTransitionPoint setStartDelayDuration:]
  -[HAPCharacteristicValueLinearDerivedTransitionPoint setTargetCompletionDuration:]
  -[HAPCharacteristicValueLinearDerivedTransitionPoint startDelayDuration]


HAPCharacteristicValueLinearTransition : NSObject <NSCopying, HAPTLVProtocol>
 @property  NSMutableArray *transitionPoints
 @property  HAPCharacteristicValueTransitionLinearStartConditionWrapper *startBehavior
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPCharacteristicValueLinearTransition parsedFromData:error:]

  // instance methods
  -[HAPCharacteristicValueLinearTransition startBehavior]
  -[HAPCharacteristicValueLinearTransition .cxx_destruct]
  -[HAPCharacteristicValueLinearTransition init]
  -[HAPCharacteristicValueLinearTransition isEqual:]
  -[HAPCharacteristicValueLinearTransition parseFromData:error:]
  -[HAPCharacteristicValueLinearTransition copyWithZone:]
  -[HAPCharacteristicValueLinearTransition setStartBehavior:]
  -[HAPCharacteristicValueLinearTransition serializeWithError:]
  -[HAPCharacteristicValueLinearTransition transitionPoints]
  -[HAPCharacteristicValueLinearTransition setTransitionPoints:]
  -[HAPCharacteristicValueLinearTransition initWithTransitionPoints:startBehavior:]


HAPCharacteristicValueRange : NSObject <NSCopying, HAPTLVProtocol>
 @property  NSData *lowerBound
 @property  NSData *upperBound
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPCharacteristicValueRange parsedFromData:error:]

  // instance methods
  -[HAPCharacteristicValueRange .cxx_destruct]
  -[HAPCharacteristicValueRange init]
  -[HAPCharacteristicValueRange isEqual:]
  -[HAPCharacteristicValueRange lowerBound]
  -[HAPCharacteristicValueRange parseFromData:error:]
  -[HAPCharacteristicValueRange copyWithZone:]
  -[HAPCharacteristicValueRange upperBound]
  -[HAPCharacteristicValueRange setLowerBound:]
  -[HAPCharacteristicValueRange setUpperBound:]
  -[HAPCharacteristicValueRange initWithLowerBound:upperBound:]
  -[HAPCharacteristicValueRange serializeWithError:]


HAPCharacteristicValueTransition : NSObject <NSCopying, HAPTLVProtocol>
 @property  HAPTLVUnsignedNumberValue *HAPInstanceID
 @property  NSData *controllerContext
 @property  HAPCharacteristicValueTransitionEndBehaviorWrapper *endBehavior
 @property  HAPCharacteristicValueLinearTransition *linearTransition
 @property  HAPCharacteristicValueLinearDerivedTransition *linearDerivedTransition
 @property  HAPTLVUnsignedNumberValue *valueUpdateTimeInterval
 @property  NSData *notifyValueChangeThreshold
 @property  HAPTLVUnsignedNumberValue *notifyTimeIntervalThreshold
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPCharacteristicValueTransition parsedFromData:error:]

  // instance methods
  -[HAPCharacteristicValueTransition .cxx_destruct]
  -[HAPCharacteristicValueTransition init]
  -[HAPCharacteristicValueTransition isEqual:]
  -[HAPCharacteristicValueTransition parseFromData:error:]
  -[HAPCharacteristicValueTransition copyWithZone:]
  -[HAPCharacteristicValueTransition endBehavior]
  -[HAPCharacteristicValueTransition serializeWithError:]
  -[HAPCharacteristicValueTransition controllerContext]
  -[HAPCharacteristicValueTransition HAPInstanceID]
  -[HAPCharacteristicValueTransition linearTransition]
  -[HAPCharacteristicValueTransition linearDerivedTransition]
  -[HAPCharacteristicValueTransition setHAPInstanceID:]
  -[HAPCharacteristicValueTransition setNotifyTimeIntervalThreshold:]
  -[HAPCharacteristicValueTransition setValueUpdateTimeInterval:]
  -[HAPCharacteristicValueTransition setNotifyValueChangeThreshold:]
  -[HAPCharacteristicValueTransition setControllerContext:]
  -[HAPCharacteristicValueTransition setEndBehavior:]
  -[HAPCharacteristicValueTransition setLinearDerivedTransition:]
  -[HAPCharacteristicValueTransition setLinearTransition:]
  -[HAPCharacteristicValueTransition valueUpdateTimeInterval]
  -[HAPCharacteristicValueTransition notifyValueChangeThreshold]
  -[HAPCharacteristicValueTransition notifyTimeIntervalThreshold]
  -[HAPCharacteristicValueTransition initWithHAPInstanceID:controllerContext:endBehavior:linearTransition:linearDerivedTransition:valueUpdateTimeInterval:notifyValueChangeThreshold:notifyTimeIntervalThreshold:]


HAPCharacteristicValueTransitionControl : NSObject <NSCopying, HAPTLVProtocol>
 @property  HAPCharacteristicValueTransitionFetch *transitionFetch
 @property  HAPCharacteristicValueTransitionStart *transitionStart
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPCharacteristicValueTransitionControl parsedFromData:error:]

  // instance methods
  -[HAPCharacteristicValueTransitionControl .cxx_destruct]
  -[HAPCharacteristicValueTransitionControl init]
  -[HAPCharacteristicValueTransitionControl isEqual:]
  -[HAPCharacteristicValueTransitionControl parseFromData:error:]
  -[HAPCharacteristicValueTransitionControl copyWithZone:]
  -[HAPCharacteristicValueTransitionControl serializeWithError:]
  -[HAPCharacteristicValueTransitionControl setTransitionStart:]
  -[HAPCharacteristicValueTransitionControl initWithTransitionFetch:transitionStart:]
  -[HAPCharacteristicValueTransitionControl transitionStart]
  -[HAPCharacteristicValueTransitionControl setTransitionFetch:]
  -[HAPCharacteristicValueTransitionControl transitionFetch]


HAPCharacteristicValueTransitionControlResponse : NSObject <NSCopying, HAPTLVProtocol>
 @property  HAPCharacteristicValueTransition *valueTransition
 @property  HAPCharacteristicValueTransitionState *transitionState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPCharacteristicValueTransitionControlResponse parsedFromData:error:]

  // instance methods
  -[HAPCharacteristicValueTransitionControlResponse setTransitionState:]
  -[HAPCharacteristicValueTransitionControlResponse .cxx_destruct]
  -[HAPCharacteristicValueTransitionControlResponse init]
  -[HAPCharacteristicValueTransitionControlResponse isEqual:]
  -[HAPCharacteristicValueTransitionControlResponse parseFromData:error:]
  -[HAPCharacteristicValueTransitionControlResponse copyWithZone:]
  -[HAPCharacteristicValueTransitionControlResponse transitionState]
  -[HAPCharacteristicValueTransitionControlResponse serializeWithError:]
  -[HAPCharacteristicValueTransitionControlResponse valueTransition]
  -[HAPCharacteristicValueTransitionControlResponse setValueTransition:]
  -[HAPCharacteristicValueTransitionControlResponse initWithValueTransition:transitionState:]


HAPCharacteristicValueTransitionControllerContext : NSObject <NSCopying, HAPTLVProtocol>
 @property  NSData *identifier
 @property  HAPTLVUnsignedNumberValue *startTime
 @property  HAPTLVUnsignedNumberValue *transitionChecksum
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPCharacteristicValueTransitionControllerContext parsedFromData:error:]

  // instance methods
  -[HAPCharacteristicValueTransitionControllerContext setStartTime:]
  -[HAPCharacteristicValueTransitionControllerContext .cxx_destruct]
  -[HAPCharacteristicValueTransitionControllerContext init]
  -[HAPCharacteristicValueTransitionControllerContext isEqual:]
  -[HAPCharacteristicValueTransitionControllerContext identifier]
  -[HAPCharacteristicValueTransitionControllerContext startTime]
  -[HAPCharacteristicValueTransitionControllerContext parseFromData:error:]
  -[HAPCharacteristicValueTransitionControllerContext setIdentifier:]
  -[HAPCharacteristicValueTransitionControllerContext copyWithZone:]
  -[HAPCharacteristicValueTransitionControllerContext serializeWithError:]
  -[HAPCharacteristicValueTransitionControllerContext transitionChecksum]
  -[HAPCharacteristicValueTransitionControllerContext initWithIdentifier:startTime:transitionChecksum:]
  -[HAPCharacteristicValueTransitionControllerContext setTransitionChecksum:]


HAPCharacteristicValueTransitionFetch : NSObject <NSCopying, HAPTLVProtocol>
 @property  HAPTLVUnsignedNumberValue *HAPInstanceID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPCharacteristicValueTransitionFetch parsedFromData:error:]

  // instance methods
  -[HAPCharacteristicValueTransitionFetch .cxx_destruct]
  -[HAPCharacteristicValueTransitionFetch init]
  -[HAPCharacteristicValueTransitionFetch isEqual:]
  -[HAPCharacteristicValueTransitionFetch parseFromData:error:]
  -[HAPCharacteristicValueTransitionFetch copyWithZone:]
  -[HAPCharacteristicValueTransitionFetch serializeWithError:]
  -[HAPCharacteristicValueTransitionFetch initWithHAPInstanceID:]
  -[HAPCharacteristicValueTransitionFetch HAPInstanceID]
  -[HAPCharacteristicValueTransitionFetch setHAPInstanceID:]


HAPCharacteristicValueTransitionPoint : NSObject <NSCopying, HAPTLVProtocol>
 @property  NSData *targetValue
 @property  HAPTLVUnsignedNumberValue *targetCompletionDuration
 @property  HAPTLVUnsignedNumberValue *startDelayDuration
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPCharacteristicValueTransitionPoint parsedFromData:error:]

  // instance methods
  -[HAPCharacteristicValueTransitionPoint targetValue]
  -[HAPCharacteristicValueTransitionPoint .cxx_destruct]
  -[HAPCharacteristicValueTransitionPoint init]
  -[HAPCharacteristicValueTransitionPoint isEqual:]
  -[HAPCharacteristicValueTransitionPoint setTargetValue:]
  -[HAPCharacteristicValueTransitionPoint parseFromData:error:]
  -[HAPCharacteristicValueTransitionPoint copyWithZone:]
  -[HAPCharacteristicValueTransitionPoint serializeWithError:]
  -[HAPCharacteristicValueTransitionPoint targetCompletionDuration]
  -[HAPCharacteristicValueTransitionPoint setStartDelayDuration:]
  -[HAPCharacteristicValueTransitionPoint setTargetCompletionDuration:]
  -[HAPCharacteristicValueTransitionPoint startDelayDuration]
  -[HAPCharacteristicValueTransitionPoint initWithTargetValue:targetCompletionDuration:startDelayDuration:]


HAPCharacteristicValueTransitionStart : NSObject <NSCopying, HAPTLVProtocol>
 @property  NSMutableArray *transitions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPCharacteristicValueTransitionStart parsedFromData:error:]

  // instance methods
  -[HAPCharacteristicValueTransitionStart setTransitions:]
  -[HAPCharacteristicValueTransitionStart transitions]
  -[HAPCharacteristicValueTransitionStart .cxx_destruct]
  -[HAPCharacteristicValueTransitionStart init]
  -[HAPCharacteristicValueTransitionStart isEqual:]
  -[HAPCharacteristicValueTransitionStart parseFromData:error:]
  -[HAPCharacteristicValueTransitionStart copyWithZone:]
  -[HAPCharacteristicValueTransitionStart serializeWithError:]
  -[HAPCharacteristicValueTransitionStart initWithTransitions:]


HAPCharacteristicValueTransitionState : NSObject <NSCopying, HAPTLVProtocol>
 @property  NSMutableArray *activeTransitionContexts
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPCharacteristicValueTransitionState parsedFromData:error:]

  // instance methods
  -[HAPCharacteristicValueTransitionState .cxx_destruct]
  -[HAPCharacteristicValueTransitionState init]
  -[HAPCharacteristicValueTransitionState isEqual:]
  -[HAPCharacteristicValueTransitionState parseFromData:error:]
  -[HAPCharacteristicValueTransitionState copyWithZone:]
  -[HAPCharacteristicValueTransitionState serializeWithError:]
  -[HAPCharacteristicValueTransitionState activeTransitionContexts]
  -[HAPCharacteristicValueTransitionState setActiveTransitionContexts:]
  -[HAPCharacteristicValueTransitionState initWithActiveTransitionContexts:]


HAPSupportedCharacteristicValueTransition : NSObject <NSCopying, HAPTLVProtocol>
 @property  HAPTLVSignedNumberValue *HAPInstanceID
 @property  HAPCharacteristicValueTransitionTypesWrapper *transitionTypes
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPSupportedCharacteristicValueTransition parsedFromData:error:]

  // instance methods
  -[HAPSupportedCharacteristicValueTransition .cxx_destruct]
  -[HAPSupportedCharacteristicValueTransition init]
  -[HAPSupportedCharacteristicValueTransition isEqual:]
  -[HAPSupportedCharacteristicValueTransition parseFromData:error:]
  -[HAPSupportedCharacteristicValueTransition copyWithZone:]
  -[HAPSupportedCharacteristicValueTransition serializeWithError:]
  -[HAPSupportedCharacteristicValueTransition HAPInstanceID]
  -[HAPSupportedCharacteristicValueTransition transitionTypes]
  -[HAPSupportedCharacteristicValueTransition setHAPInstanceID:]
  -[HAPSupportedCharacteristicValueTransition setTransitionTypes:]
  -[HAPSupportedCharacteristicValueTransition initWithHAPInstanceID:transitionTypes:]


HAPSupportedCharacteristicValueTransitionConfiguration : NSObject <NSCopying, HAPTLVProtocol>
 @property  NSMutableArray *transitions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPSupportedCharacteristicValueTransitionConfiguration parsedFromData:error:]

  // instance methods
  -[HAPSupportedCharacteristicValueTransitionConfiguration setTransitions:]
  -[HAPSupportedCharacteristicValueTransitionConfiguration transitions]
  -[HAPSupportedCharacteristicValueTransitionConfiguration .cxx_destruct]
  -[HAPSupportedCharacteristicValueTransitionConfiguration init]
  -[HAPSupportedCharacteristicValueTransitionConfiguration isEqual:]
  -[HAPSupportedCharacteristicValueTransitionConfiguration parseFromData:error:]
  -[HAPSupportedCharacteristicValueTransitionConfiguration copyWithZone:]
  -[HAPSupportedCharacteristicValueTransitionConfiguration serializeWithError:]
  -[HAPSupportedCharacteristicValueTransitionConfiguration initWithTransitions:]


HAP2TLVThreadOperationTypeWrapper : NSObject <NSCopying, HAPTLVProtocol>
 @property  long long value
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAP2TLVThreadOperationTypeWrapper parsedFromData:error:]

  // instance methods
  -[HAP2TLVThreadOperationTypeWrapper init]
  -[HAP2TLVThreadOperationTypeWrapper isEqual:]
  -[HAP2TLVThreadOperationTypeWrapper initWithValue:]
  -[HAP2TLVThreadOperationTypeWrapper setValue:]
  -[HAP2TLVThreadOperationTypeWrapper value]
  -[HAP2TLVThreadOperationTypeWrapper parseFromData:error:]
  -[HAP2TLVThreadOperationTypeWrapper copyWithZone:]
  -[HAP2TLVThreadOperationTypeWrapper serializeWithError:]


HAP2AccessoryServerDiscoveryBonjourLegacy : HAP2LoggingObject <HAP2AccessoryServerDiscovery>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HAP2PropertyLock *propertyLock
 @property  BOOL discovering
 @property  CUBonjourBrowser *browser
 @property  NSObject<OS_dispatch_queue> *delegateQueue
 @property  NSString *type
 @property  NSString *domain
 @property  <HAP2AccessoryServerDiscoveryDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAP2AccessoryServerDiscoveryBonjourLegacy new]

  // instance methods
  -[HAP2AccessoryServerDiscoveryBonjourLegacy stopDiscovering]
  -[HAP2AccessoryServerDiscoveryBonjourLegacy startDiscovering]
  -[HAP2AccessoryServerDiscoveryBonjourLegacy isDiscovering]
  -[HAP2AccessoryServerDiscoveryBonjourLegacy _startDiscovering]
  -[HAP2AccessoryServerDiscoveryBonjourLegacy propertyLock]
  -[HAP2AccessoryServerDiscoveryBonjourLegacy _stopDiscovering]
  -[HAP2AccessoryServerDiscoveryBonjourLegacy setBrowser:]
  -[HAP2AccessoryServerDiscoveryBonjourLegacy setDiscovering:]
  -[HAP2AccessoryServerDiscoveryBonjourLegacy delegateQueue]
  -[HAP2AccessoryServerDiscoveryBonjourLegacy _startBrowser]
  -[HAP2AccessoryServerDiscoveryBonjourLegacy _handleDeviceFoundOrChanged:]
  -[HAP2AccessoryServerDiscoveryBonjourLegacy .cxx_destruct]
  -[HAP2AccessoryServerDiscoveryBonjourLegacy initWithLocalDomainAndServiceType:]
  -[HAP2AccessoryServerDiscoveryBonjourLegacy browser]
  -[HAP2AccessoryServerDiscoveryBonjourLegacy domain]
  -[HAP2AccessoryServerDiscoveryBonjourLegacy setDelegate:]
  -[HAP2AccessoryServerDiscoveryBonjourLegacy reconfirmAccessory:]
  -[HAP2AccessoryServerDiscoveryBonjourLegacy init]
  -[HAP2AccessoryServerDiscoveryBonjourLegacy _reconfirmAccessory:]
  -[HAP2AccessoryServerDiscoveryBonjourLegacy _stopBrowser]
  -[HAP2AccessoryServerDiscoveryBonjourLegacy workQueue]
  -[HAP2AccessoryServerDiscoveryBonjourLegacy type]
  -[HAP2AccessoryServerDiscoveryBonjourLegacy delegate]
  -[HAP2AccessoryServerDiscoveryBonjourLegacy initWithServiceType:domain:]
  -[HAP2AccessoryServerDiscoveryBonjourLegacy _handleBrowserStopped:]
  -[HAP2AccessoryServerDiscoveryBonjourLegacy dealloc]
  -[HAP2AccessoryServerDiscoveryBonjourLegacy _handleDeviceLost:]


HAP2AccessoryServerDiscoveryBonjour : HAP2LoggingObject <HAP2AccessoryServerDiscovery>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HAP2PropertyLock *propertyLock
 @property  BOOL discovering
 @property  NSObject<OS_nw_browser> *browser
 @property  NSMutableArray *browseResults
 @property  NSString *type
 @property  NSString *domain
 @property  <HAP2AccessoryServerDiscoveryDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAP2AccessoryServerDiscoveryBonjour new]

  // instance methods
  -[HAP2AccessoryServerDiscoveryBonjour stopDiscovering]
  -[HAP2AccessoryServerDiscoveryBonjour startDiscovering]
  -[HAP2AccessoryServerDiscoveryBonjour isDiscovering]
  -[HAP2AccessoryServerDiscoveryBonjour _startDiscovering]
  -[HAP2AccessoryServerDiscoveryBonjour propertyLock]
  -[HAP2AccessoryServerDiscoveryBonjour _stopDiscovering]
  -[HAP2AccessoryServerDiscoveryBonjour setBrowser:]
  -[HAP2AccessoryServerDiscoveryBonjour setDiscovering:]
  -[HAP2AccessoryServerDiscoveryBonjour _startBrowser]
  -[HAP2AccessoryServerDiscoveryBonjour .cxx_destruct]
  -[HAP2AccessoryServerDiscoveryBonjour initWithLocalDomainAndServiceType:]
  -[HAP2AccessoryServerDiscoveryBonjour browser]
  -[HAP2AccessoryServerDiscoveryBonjour domain]
  -[HAP2AccessoryServerDiscoveryBonjour setDelegate:]
  -[HAP2AccessoryServerDiscoveryBonjour reconfirmAccessory:]
  -[HAP2AccessoryServerDiscoveryBonjour init]
  -[HAP2AccessoryServerDiscoveryBonjour _stopBrowser]
  -[HAP2AccessoryServerDiscoveryBonjour workQueue]
  -[HAP2AccessoryServerDiscoveryBonjour type]
  -[HAP2AccessoryServerDiscoveryBonjour delegate]
  -[HAP2AccessoryServerDiscoveryBonjour initWithServiceType:domain:]
  -[HAP2AccessoryServerDiscoveryBonjour dealloc]
  -[HAP2AccessoryServerDiscoveryBonjour browseResults]
  -[HAP2AccessoryServerDiscoveryBonjour setBrowseResults:]
  -[HAP2AccessoryServerDiscoveryBonjour _handleStateChange:error:]
  -[HAP2AccessoryServerDiscoveryBonjour _handleBrowseResultsChange:curent:batchComplete:]
  -[HAP2AccessoryServerDiscoveryBonjour _handleBrowseResults:]


HAP2AccessoryServerDiscoveryBonjourBrowseResultTuple : NSObject
 @property  NSObject<OS_nw_browse_result> *previousResult
 @property  NSObject<OS_nw_browse_result> *currentResult
 @property  unsigned long changes

  // instance methods
  -[HAP2AccessoryServerDiscoveryBonjourBrowseResultTuple changes]
  -[HAP2AccessoryServerDiscoveryBonjourBrowseResultTuple .cxx_destruct]
  -[HAP2AccessoryServerDiscoveryBonjourBrowseResultTuple currentResult]
  -[HAP2AccessoryServerDiscoveryBonjourBrowseResultTuple initWithPreviousResult:currentResult:changes:]
  -[HAP2AccessoryServerDiscoveryBonjourBrowseResultTuple previousResult]


HAP2TLVThreadControl : NSObject <NSCopying, HAPTLVProtocol>
 @property  HAP2TLVThreadOperationTypeWrapper *operationType
 @property  HAP2TLVThreadNetworkCredentials *threadNetworkCredentials
 @property  HAPTLVUnsignedNumberValue *formingAllowed
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAP2TLVThreadControl parsedFromData:error:]

  // instance methods
  -[HAP2TLVThreadControl setOperationType:]
  -[HAP2TLVThreadControl operationType]
  -[HAP2TLVThreadControl .cxx_destruct]
  -[HAP2TLVThreadControl init]
  -[HAP2TLVThreadControl isEqual:]
  -[HAP2TLVThreadControl parseFromData:error:]
  -[HAP2TLVThreadControl copyWithZone:]
  -[HAP2TLVThreadControl serializeWithError:]
  -[HAP2TLVThreadControl initWithOperationType:threadNetworkCredentials:formingAllowed:]
  -[HAP2TLVThreadControl threadNetworkCredentials]
  -[HAP2TLVThreadControl setThreadNetworkCredentials:]
  -[HAP2TLVThreadControl setFormingAllowed:]
  -[HAP2TLVThreadControl formingAllowed]


HAP2TLVThreadNetworkCredentials : NSObject <NSCopying, HAPTLVProtocol>
 @property  NSString *networkName
 @property  HAPTLVUnsignedNumberValue *channel
 @property  HAPTLVUnsignedNumberValue *panID
 @property  NSData *extendedPanID
 @property  NSData *masterKey
 @property  HAPTLVUnsignedNumberValue *reattachPeriod
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAP2TLVThreadNetworkCredentials parsedFromData:error:]

  // instance methods
  -[HAP2TLVThreadNetworkCredentials masterKey]
  -[HAP2TLVThreadNetworkCredentials setNetworkName:]
  -[HAP2TLVThreadNetworkCredentials setChannel:]
  -[HAP2TLVThreadNetworkCredentials setMasterKey:]
  -[HAP2TLVThreadNetworkCredentials .cxx_destruct]
  -[HAP2TLVThreadNetworkCredentials panID]
  -[HAP2TLVThreadNetworkCredentials init]
  -[HAP2TLVThreadNetworkCredentials isEqual:]
  -[HAP2TLVThreadNetworkCredentials channel]
  -[HAP2TLVThreadNetworkCredentials parseFromData:error:]
  -[HAP2TLVThreadNetworkCredentials copyWithZone:]
  -[HAP2TLVThreadNetworkCredentials networkName]
  -[HAP2TLVThreadNetworkCredentials serializeWithError:]
  -[HAP2TLVThreadNetworkCredentials extendedPanID]
  -[HAP2TLVThreadNetworkCredentials initWithNetworkName:channel:panID:extendedPanID:masterKey:reattachPeriod:]
  -[HAP2TLVThreadNetworkCredentials setPanID:]
  -[HAP2TLVThreadNetworkCredentials setExtendedPanID:]
  -[HAP2TLVThreadNetworkCredentials setReattachPeriod:]
  -[HAP2TLVThreadNetworkCredentials reattachPeriod]


HAPTLVParser : HMFObject
  // class methods
  +[HAPTLVParser parserWithData:]

  // instance methods
  -[HAPTLVParser .cxx_destruct]
  -[HAPTLVParser initWithData:]
  -[HAPTLVParser parseResponseForNumber:]
  -[HAPTLVParser parseResponseForUInt8:]
  -[HAPTLVParser parseResponseForUInt16:]
  -[HAPTLVParser parseResponseForString:]
  -[HAPTLVParser parseResponseForData:]
  -[HAPTLVParser parseResponseForArray:]
  -[HAPTLVParser parseResponseForUUID:]


HAPTLVCreator : HMFObject
  // class methods
  +[HAPTLVCreator creator]
  +[HAPTLVCreator creatorWithBufferSize:]

  // instance methods
  -[HAPTLVCreator serialize]
  -[HAPTLVCreator dealloc]
  -[HAPTLVCreator addTLV:number:]
  -[HAPTLVCreator addTLV:length:number:]
  -[HAPTLVCreator addTLV:data:]
  -[HAPTLVCreator addTLV:string:]
  -[HAPTLVCreator addTLV:uuid:]
  -[HAPTLVCreator addTLV:length:floatNumber:]
  -[HAPTLVCreator initWithBufferSize:]


HAPFragmentationPacket : HMFObject
 @property  unsigned short transactionIdentifier
 @property  unsigned int length
 @property  unsigned int offset
 @property  NSData *data

  // instance methods
  -[HAPFragmentationPacket offset]
  -[HAPFragmentationPacket .cxx_destruct]
  -[HAPFragmentationPacket data]
  -[HAPFragmentationPacket init]
  -[HAPFragmentationPacket length]
  -[HAPFragmentationPacket isEqual:]
  -[HAPFragmentationPacket transactionIdentifier]
  -[HAPFragmentationPacket serialize]
  -[HAPFragmentationPacket shortDescription]
  -[HAPFragmentationPacket initWithFragmentedPacketData:]
  -[HAPFragmentationPacket initWithData:transactionIdentifier:length:offset:]


HAPFragmentationStream : HMFObject
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  NSMutableOrderedSet *pendingPackets
 @property  NSNumber *currentPacketTransactionIdentifier
 @property  <HAPFragmentationStreamDelegate> *delegate

  // class methods
  +[HAPFragmentationStream fragmentationPacketsForData:maxLength:transactionIdentifier:]

  // instance methods
  -[HAPFragmentationStream clientQueue]
  -[HAPFragmentationStream .cxx_destruct]
  -[HAPFragmentationStream setDelegate:]
  -[HAPFragmentationStream init]
  -[HAPFragmentationStream delegate]
  -[HAPFragmentationStream close]
  -[HAPFragmentationStream open]
  -[HAPFragmentationStream receivedFragmentedPacket:]
  -[HAPFragmentationStream currentPacketTransactionIdentifier]
  -[HAPFragmentationStream __removeAllPendingPacketsWithTransactionIdentifier:]
  -[HAPFragmentationStream __addFragmentationPacket:]
  -[HAPFragmentationStream __isTransactionCompleteWithTransactionIdentifier:]
  -[HAPFragmentationStream __transactionDataWithTransactionIdentifier:]
  -[HAPFragmentationStream setCurrentPacketTransactionIdentifier:]
  -[HAPFragmentationStream __filteredPacketsWithTransactionIdentifier:]
  -[HAPFragmentationStream pendingPackets]


HAP2EncodedCharacteristicEvent : HAP2LoggingObject <HAP2EncodedCharacteristicEvent>
 @property  NSNumber *instanceID
 @property  <HAP2AccessoryCharacteristicEncodedData> *encodedValueData
 @property  NSData *encodedContextData
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAP2EncodedCharacteristicEvent new]

  // instance methods
  -[HAP2EncodedCharacteristicEvent instanceID]
  -[HAP2EncodedCharacteristicEvent .cxx_destruct]
  -[HAP2EncodedCharacteristicEvent init]
  -[HAP2EncodedCharacteristicEvent initWithInstanceID:encodedValueData:encodedContextData:]
  -[HAP2EncodedCharacteristicEvent encodedValueData]
  -[HAP2EncodedCharacteristicEvent encodedContextData]


HAPAccessCodeOperationTypeWrapper : NSObject <NSCopying, HAPTLVProtocol>
 @property  long long value
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPAccessCodeOperationTypeWrapper parsedFromData:error:]

  // instance methods
  -[HAPAccessCodeOperationTypeWrapper init]
  -[HAPAccessCodeOperationTypeWrapper isEqual:]
  -[HAPAccessCodeOperationTypeWrapper initWithValue:]
  -[HAPAccessCodeOperationTypeWrapper setValue:]
  -[HAPAccessCodeOperationTypeWrapper value]
  -[HAPAccessCodeOperationTypeWrapper parseFromData:error:]
  -[HAPAccessCodeOperationTypeWrapper copyWithZone:]
  -[HAPAccessCodeOperationTypeWrapper serializeWithError:]


HAPAccessCodeResponseStatusWrapper : NSObject <NSCopying, HAPTLVProtocol>
 @property  long long value
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPAccessCodeResponseStatusWrapper parsedFromData:error:]

  // instance methods
  -[HAPAccessCodeResponseStatusWrapper init]
  -[HAPAccessCodeResponseStatusWrapper isEqual:]
  -[HAPAccessCodeResponseStatusWrapper initWithValue:]
  -[HAPAccessCodeResponseStatusWrapper setValue:]
  -[HAPAccessCodeResponseStatusWrapper value]
  -[HAPAccessCodeResponseStatusWrapper parseFromData:error:]
  -[HAPAccessCodeResponseStatusWrapper copyWithZone:]
  -[HAPAccessCodeResponseStatusWrapper serializeWithError:]


HAPNFCReaderNotification : HMFObject <HAPNFCReaderStream>
 @property  HAPNFCReaderXPC *nfcHomeKit
 @property  HAPNFCReaderXPC *tagProxCard

  // class methods
  +[HAPNFCReaderNotification start]

  // instance methods
  -[HAPNFCReaderNotification setupNotificationDictionaryWithNFCData:]
  -[HAPNFCReaderNotification .cxx_destruct]
  -[HAPNFCReaderNotification _sendHomeNotificationForSource:withDictionary:]
  -[HAPNFCReaderNotification tagProxCard]
  -[HAPNFCReaderNotification _initializeHomeKitNFCStreamWithQueue:]
  -[HAPNFCReaderNotification setTagProxCard:]
  -[HAPNFCReaderNotification nfcHomeKit]
  -[HAPNFCReaderNotification init]
  -[HAPNFCReaderNotification nfcStreamIndicationFromSource:withPayload:]
  -[HAPNFCReaderNotification _initializeNFCStream:withSource:workQueue:]
  -[HAPNFCReaderNotification setNfcHomeKit:]
  -[HAPNFCReaderNotification _initializeProxCardStreamWithQueue:]
  -[HAPNFCReaderNotification _supportsBackgroundReading]


HAPBridgedAccessory : HAPAccessory <HAPAccessoryServerInternalDelegate>
 @property  HAPCharacteristic *reachabilityCharacteristic
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HAPBridgedAccessory .cxx_destruct]
  -[HAPBridgedAccessory isPrimary]
  -[HAPBridgedAccessory setReachable:]
  -[HAPBridgedAccessory shortDescription]
  -[HAPBridgedAccessory mergeObject:]
  -[HAPBridgedAccessory shouldMergeObject:]
  -[HAPBridgedAccessory accessoryServer:didUpdateValueForCharacteristic:]
  -[HAPBridgedAccessory accessoryServerDidRequestCharacteristicsToRegisterForNotifications:]
  -[HAPBridgedAccessory initWithServer:instanceID:parsedServices:]
  -[HAPBridgedAccessory __parseServices]
  -[HAPBridgedAccessory __isReachable]
  -[HAPBridgedAccessory reachabilityCharacteristic]
  -[HAPBridgedAccessory __parseBridgeService:]
  -[HAPBridgedAccessory setReachabilityCharacteristic:]
  -[HAPBridgedAccessory mergeWithAccessory:]


HAP2SerializedOperationQueue : HAP2LoggingObject
 @property  HAP2Lock *lock
 @property  NSOperationQueue *queue
 @property  NSOperation *lastOperation
 @property  NSString *name

  // class methods
  +[HAP2SerializedOperationQueue commonOperationQueue]

  // instance methods
  -[HAP2SerializedOperationQueue name]
  -[HAP2SerializedOperationQueue lastOperation]
  -[HAP2SerializedOperationQueue .cxx_destruct]
  -[HAP2SerializedOperationQueue addBlock:]
  -[HAP2SerializedOperationQueue initWithName:]
  -[HAP2SerializedOperationQueue init]
  -[HAP2SerializedOperationQueue addConcurrentBlock:]
  -[HAP2SerializedOperationQueue addOperation:]
  -[HAP2SerializedOperationQueue setLastOperation:]
  -[HAP2SerializedOperationQueue queue]
  -[HAP2SerializedOperationQueue _swapLastOperation:]
  -[HAP2SerializedOperationQueue assertCurrentQueue]
  -[HAP2SerializedOperationQueue lock]
  -[HAP2SerializedOperationQueue initWithName:operationQueue:]
  -[HAP2SerializedOperationQueue addConcurrentOperation:]


HAPHTTPClient : HMFObject <HAPHTTPClientDebugDelegate, HMFLogging>
 @property  NSString *dnsName
 @property  NSObject<OS_dispatch_queue> *queue
 @property  <HAPHTTPClientDelegate> *delegate
 @property  NSObject<OS_dispatch_queue> *delegateQueue
 @property  <HAPHTTPClientDebugDelegate> *debugDelegate
 @property  NSObject<OS_dispatch_queue> *debugDelegateQueue
 @property  BOOL invalidateRequested
 @property  BOOL invalidated
 @property  NSString *wakeAddress
 @property  long long port
 @property  HMFNetAddress *peerAddress
 @property  HMFNetAddress *peerAddressEx
 @property  NSString *peerEndpointDescription
 @property  NSError *invalidateReason
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPHTTPClient logCategory]

  // instance methods
  -[HAPHTTPClient setDelegate:queue:]
  -[HAPHTTPClient httpClient:didReceiveHTTPMessageWithHeaders:body:]
  -[HAPHTTPClient peerAddress]
  -[HAPHTTPClient isInvalidated]
  -[HAPHTTPClient httpClient:willSendHTTPMessageWithHeaders:body:]
  -[HAPHTTPClient delegateQueue]
  -[HAPHTTPClient setDelegateQueue:]
  -[HAPHTTPClient port]
  -[HAPHTTPClient .cxx_destruct]
  -[HAPHTTPClient peerEndpointDescription]
  -[HAPHTTPClient invalidateWithError:]
  -[HAPHTTPClient setDelegate:]
  -[HAPHTTPClient _delegateRespondsToSelector:]
  -[HAPHTTPClient setQueue:]
  -[HAPHTTPClient peerAddressEx]
  -[HAPHTTPClient setInvalidated:]
  -[HAPHTTPClient delegate]
  -[HAPHTTPClient queue]
  -[HAPHTTPClient sendGETRequestToURL:timeout:completionHandler:]
  -[HAPHTTPClient dealloc]
  -[HAPHTTPClient invalidate]
  -[HAPHTTPClient logIdentifier]
  -[HAPHTTPClient dnsName]
  -[HAPHTTPClient debugDelegate]
  -[HAPHTTPClient setDebugDelegate:]
  -[HAPHTTPClient setDnsName:]
  -[HAPHTTPClient wakeAddress]
  -[HAPHTTPClient setWakeAddress:]
  -[HAPHTTPClient sendPUTRequestToURL:withRequestObject:serializationType:timeout:completionHandler:]
  -[HAPHTTPClient sendPOSTRequestToURL:withRequestObject:serializationType:completionHandler:]
  -[HAPHTTPClient invalidateReason]
  -[HAPHTTPClient initWithDNSName:port:eventsEnabled:queue:wakeAddress:]
  -[HAPHTTPClient setDebugDelegate:queue:]
  -[HAPHTTPClient enableUAPSessionSecurityWithReadKey:writeKey:error:]
  -[HAPHTTPClient initWithDNSName:port:eventsEnabled:queue:]
  -[HAPHTTPClient _initializeCoreUtilsHTTPClientWithPort:withEventsEnabled:]
  -[HAPHTTPClient setDebugDelegateQueue:]
  -[HAPHTTPClient _connectionDestination]
  -[HAPHTTPClient setInvalidateRequested:]
  -[HAPHTTPClient setInvalidateReason:]
  -[HAPHTTPClient _sendHTTPRequestToURL:withMethod:requestObject:serializationType:timeout:activity:completionHandler:]
  -[HAPHTTPClient _handleHTTPResponseForMessage:completionHandler:]
  -[HAPHTTPClient _serializeUAPJSONObject:error:]
  -[HAPHTTPClient _supportsWoL]
  -[HAPHTTPClient _deserializeUAPJSONData:error:]
  -[HAPHTTPClient debugDelegateQueue]
  -[HAPHTTPClient initWithDNSName:queue:]
  -[HAPHTTPClient sendDELETERequestToURL:withRequestObject:serializationType:completionHandler:]
  -[HAPHTTPClient _debugDelegateRespondsToSelector:]
  -[HAPHTTPClient invalidateRequested]


HAPNFCReaderXPC : HMFObject
 @property  NSString *stream
 @property  unsigned long source
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSObject<OS_xpc_object> *event
 @property  <HAPNFCReaderStream> *readerStream
 @property  BOOL supportsBackgroundReading

  // instance methods
  -[HAPNFCReaderXPC stream]
  -[HAPNFCReaderXPC setWorkQueue:]
  -[HAPNFCReaderXPC .cxx_destruct]
  -[HAPNFCReaderXPC setReaderStream:]
  -[HAPNFCReaderXPC setEvent:]
  -[HAPNFCReaderXPC supportsBackgroundReading]
  -[HAPNFCReaderXPC setStream:]
  -[HAPNFCReaderXPC setSource:]
  -[HAPNFCReaderXPC workQueue]
  -[HAPNFCReaderXPC readerStream]
  -[HAPNFCReaderXPC initReaderWithStream:fromSource:workQueue:readerStream:]
  -[HAPNFCReaderXPC beginSession]
  -[HAPNFCReaderXPC source]
  -[HAPNFCReaderXPC event]


HAPAudioCodecBitRateWrapper : NSObject <NSCopying, HAPTLVProtocol>
 @property  long long value
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPAudioCodecBitRateWrapper parsedFromData:error:]

  // instance methods
  -[HAPAudioCodecBitRateWrapper init]
  -[HAPAudioCodecBitRateWrapper isEqual:]
  -[HAPAudioCodecBitRateWrapper initWithValue:]
  -[HAPAudioCodecBitRateWrapper setValue:]
  -[HAPAudioCodecBitRateWrapper value]
  -[HAPAudioCodecBitRateWrapper parseFromData:error:]
  -[HAPAudioCodecBitRateWrapper copyWithZone:]
  -[HAPAudioCodecBitRateWrapper serializeWithError:]


HAPAudioCodecSampleRateWrapper : NSObject <NSCopying, HAPTLVProtocol>
 @property  long long value
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPAudioCodecSampleRateWrapper parsedFromData:error:]

  // instance methods
  -[HAPAudioCodecSampleRateWrapper init]
  -[HAPAudioCodecSampleRateWrapper isEqual:]
  -[HAPAudioCodecSampleRateWrapper initWithValue:]
  -[HAPAudioCodecSampleRateWrapper setValue:]
  -[HAPAudioCodecSampleRateWrapper value]
  -[HAPAudioCodecSampleRateWrapper parseFromData:error:]
  -[HAPAudioCodecSampleRateWrapper copyWithZone:]
  -[HAPAudioCodecSampleRateWrapper serializeWithError:]


HAPAudioCodecTypeWrapper : NSObject <NSCopying, HAPTLVProtocol>
 @property  long long value
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPAudioCodecTypeWrapper parsedFromData:error:]

  // instance methods
  -[HAPAudioCodecTypeWrapper init]
  -[HAPAudioCodecTypeWrapper isEqual:]
  -[HAPAudioCodecTypeWrapper initWithValue:]
  -[HAPAudioCodecTypeWrapper setValue:]
  -[HAPAudioCodecTypeWrapper value]
  -[HAPAudioCodecTypeWrapper parseFromData:error:]
  -[HAPAudioCodecTypeWrapper copyWithZone:]
  -[HAPAudioCodecTypeWrapper serializeWithError:]


HAP2CoAPClient : HAP2LoggingObject <HAP2CoAPIOConsumer, HAP2CoAPClient>
 @property  BOOL connected
 @property  unsigned long maxTransmitAttempts
 @property  double initialACKTimeout
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <HAP2CoAPClientDelegate> *delegate

  // instance methods
  -[HAP2CoAPClient .cxx_destruct]
  -[HAP2CoAPClient setDelegate:]
  -[HAP2CoAPClient setConnected:]
  -[HAP2CoAPClient connected]
  -[HAP2CoAPClient delegate]
  -[HAP2CoAPClient initWithSocketAddress:]
  -[HAP2CoAPClient initWithIPAddress:port:]
  -[HAP2CoAPClient closeWithError:completion:]
  -[HAP2CoAPClient openWithCompletion:]
  -[HAP2CoAPClient initWithSocketAddress:maxTransmitAttempts:initialACKTimeout:]
  -[HAP2CoAPClient initWithIPAddress:port:maxTransmitAttempts:initialACKTimeout:]
  -[HAP2CoAPClient setMaxTransmitAttempts:]
  -[HAP2CoAPClient setInitialACKTimeout:]
  -[HAP2CoAPClient initialACKTimeout]
  -[HAP2CoAPClient maxTransmitAttempts]
  -[HAP2CoAPClient shouldOpenSessionWithContext:]
  -[HAP2CoAPClient didReceiveResponseInSession:messageID:response:]
  -[HAP2CoAPClient didFailToSendMessageInSession:messageID:message:reason:]
  -[HAP2CoAPClient didReceivePongInSession:messageID:]
  -[HAP2CoAPClient didReceiveRequestInSession:messageID:request:response:]
  -[HAP2CoAPClient didCloseSession]
  -[HAP2CoAPClient didRegister]
  -[HAP2CoAPClient didUnregister]
  -[HAP2CoAPClient sendRequestWithMethod:path:payload:completion:]
  -[HAP2CoAPClient alterMaxTransmitAttempts:initialACKTimeout:]
  -[HAP2CoAPClient initWithIPAddress:port:maxTransmitAttempts:initialACKTimeout:workQueue:]
  -[HAP2CoAPClient initWithIPAddress:]


HAP2EncodedAttributeDatabaseResponseCached : HAP2LoggingObject <HAP2EncodedAttributeDatabaseResponse>
 @property  NSDictionary *attributeDatabase
 @property  BOOL encrypted
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HAP2EncodedAttributeDatabaseResponseCached .cxx_destruct]
  -[HAP2EncodedAttributeDatabaseResponseCached isEncrypted]
  -[HAP2EncodedAttributeDatabaseResponseCached attributeDatabase]
  -[HAP2EncodedAttributeDatabaseResponseCached initWithAttributeDatabase:]


HAP2AccessoryServerControllerAttributeRequestOperation : HAP2AccessoryServerControllerOperation
  // class methods
  +[HAP2AccessoryServerControllerAttributeRequestOperation _parseCache:]
  +[HAP2AccessoryServerControllerAttributeRequestOperation _characteristicsFromCachedCharacteristics:]

  // instance methods
  -[HAP2AccessoryServerControllerAttributeRequestOperation main]
  -[HAP2AccessoryServerControllerAttributeRequestOperation .cxx_destruct]
  -[HAP2AccessoryServerControllerAttributeRequestOperation _cleanUp]
  -[HAP2AccessoryServerControllerAttributeRequestOperation _sendRequest]


HAPAccessoryServerBrowserHAP2Adapter : HAPAccessoryServerBrowser <HAP2AccessoryServerBrowserDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HAPAccessoryServerBrowserHAP2Adapter setDelegate:queue:]
  -[HAPAccessoryServerBrowserHAP2Adapter accessoryServerBrowser:didStopDiscoveringWithError:]
  -[HAPAccessoryServerBrowserHAP2Adapter stopDiscoveringAccessoryServers]
  -[HAPAccessoryServerBrowserHAP2Adapter accessoryServerBrowser:didStartDiscoveringWithError:]
  -[HAPAccessoryServerBrowserHAP2Adapter isPaired:]
  -[HAPAccessoryServerBrowserHAP2Adapter initWithHAP2Browser:queue:]
  -[HAPAccessoryServerBrowserHAP2Adapter .cxx_destruct]
  -[HAPAccessoryServerBrowserHAP2Adapter registerPairedAccessoryWithIdentifier:]
  -[HAPAccessoryServerBrowserHAP2Adapter startDiscoveringAccessoryServers]
  -[HAPAccessoryServerBrowserHAP2Adapter linkType]
  -[HAPAccessoryServerBrowserHAP2Adapter accessoryServerBrowser:didLoseUnpairedAccessoryServer:error:]
  -[HAPAccessoryServerBrowserHAP2Adapter initWithQueue:]
  -[HAPAccessoryServerBrowserHAP2Adapter accessoryServerBrowser:didDiscoverPairedAccessoryServer:withCompletion:]
  -[HAPAccessoryServerBrowserHAP2Adapter matchAccessoryServerWithSetupID:serverIdentifier:completionHandler:]
  -[HAPAccessoryServerBrowserHAP2Adapter accessoryServerBrowser:didLosePairedAccessoryServer:error:]
  -[HAPAccessoryServerBrowserHAP2Adapter startConfirmingPairedAccessoryReachability]
  -[HAPAccessoryServerBrowserHAP2Adapter accessoryServerBrowser:didDiscoverUnpairedAccessoryServer:withCompletion:]
  -[HAPAccessoryServerBrowserHAP2Adapter discoverAccessoryServerWithIdentifier:]
  -[HAPAccessoryServerBrowserHAP2Adapter initWithQueue:storage:]
  -[HAPAccessoryServerBrowserHAP2Adapter stopConfirmingPairedAccessoryReachability]
  -[HAPAccessoryServerBrowserHAP2Adapter deRegisterAccessoryWithIdentifier:]


HAPBTLERequest : HMFObject
 @property  HAPBTLETransactionIdentifier *identifier
 @property  unsigned char type
 @property  HAPService *service
 @property  HAPCharacteristic *characteristic
 @property  BOOL encrypted
 @property  BOOL finished
 @property  NSData *body
 @property  double timeoutInterval
 @property  HMFBlockOperation *operation
 @property  HAPBTLEControlOutputStream *controlOutputStream
 @property  HMFTimer *responseTimer

  // instance methods
  -[HAPBTLERequest operation]
  -[HAPBTLERequest setOperation:]
  -[HAPBTLERequest isFinished]
  -[HAPBTLERequest body]
  -[HAPBTLERequest .cxx_destruct]
  -[HAPBTLERequest descriptionWithPointer:]
  -[HAPBTLERequest isEncrypted]
  -[HAPBTLERequest init]
  -[HAPBTLERequest identifier]
  -[HAPBTLERequest timeoutInterval]
  -[HAPBTLERequest serialize]
  -[HAPBTLERequest service]
  -[HAPBTLERequest type]
  -[HAPBTLERequest shortDescription]
  -[HAPBTLERequest cancelWithError:]
  -[HAPBTLERequest characteristic]
  -[HAPBTLERequest responseTimer]
  -[HAPBTLERequest setResponseTimer:]
  -[HAPBTLERequest initWithCharacteristic:requestType:bodyData:shouldEncrypt:timeoutInterval:]
  -[HAPBTLERequest initWithRequestType:bodyData:shouldEncrypt:timeoutInterval:]
  -[HAPBTLERequest setControlOutputStream:]
  -[HAPBTLERequest controlOutputStream]
  -[HAPBTLERequest _initWithCharacteristic:requestType:bodyData:shouldEncrypt:timeoutInterval:]
  -[HAPBTLERequest _serializeHeader]


HAPDiagnosticsSnapshotFormatWrapper : NSObject <NSCopying, HAPTLVProtocol>
 @property  long long value
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPDiagnosticsSnapshotFormatWrapper parsedFromData:error:]

  // instance methods
  -[HAPDiagnosticsSnapshotFormatWrapper init]
  -[HAPDiagnosticsSnapshotFormatWrapper isEqual:]
  -[HAPDiagnosticsSnapshotFormatWrapper initWithValue:]
  -[HAPDiagnosticsSnapshotFormatWrapper setValue:]
  -[HAPDiagnosticsSnapshotFormatWrapper value]
  -[HAPDiagnosticsSnapshotFormatWrapper parseFromData:error:]
  -[HAPDiagnosticsSnapshotFormatWrapper copyWithZone:]
  -[HAPDiagnosticsSnapshotFormatWrapper serializeWithError:]


HAPNFCAccessControl : NSObject <NSCopying, HAPTLVProtocol>
 @property  HAPNFCAccessOperationTypeWrapper *operationType
 @property  HAPNFCAccessIssuerKeyRequest *issuerKeyRequest
 @property  HAPNFCAccessIssuerKeyResponse *issuerKeyResponse
 @property  HAPNFCAccessDeviceCredentialKeyRequest *deviceCredentialKeyRequest
 @property  HAPNFCAccessDeviceCredentialKeyResponse *deviceCredentialKeyResponse
 @property  HAPNFCAccessReaderKeyRequest *readerKeyRequest
 @property  HAPNFCAccessReaderKeyResponse *readerKeyResponse
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPNFCAccessControl parsedFromData:error:]

  // instance methods
  -[HAPNFCAccessControl setOperationType:]
  -[HAPNFCAccessControl operationType]
  -[HAPNFCAccessControl .cxx_destruct]
  -[HAPNFCAccessControl init]
  -[HAPNFCAccessControl isEqual:]
  -[HAPNFCAccessControl parseFromData:error:]
  -[HAPNFCAccessControl copyWithZone:]
  -[HAPNFCAccessControl serializeWithError:]
  -[HAPNFCAccessControl initWithOperationType:issuerKeyRequest:issuerKeyResponse:deviceCredentialKeyRequest:deviceCredentialKeyResponse:readerKeyRequest:readerKeyResponse:]
  -[HAPNFCAccessControl readerKeyResponse]
  -[HAPNFCAccessControl deviceCredentialKeyResponse]
  -[HAPNFCAccessControl setIssuerKeyRequest:]
  -[HAPNFCAccessControl setIssuerKeyResponse:]
  -[HAPNFCAccessControl setDeviceCredentialKeyRequest:]
  -[HAPNFCAccessControl setDeviceCredentialKeyResponse:]
  -[HAPNFCAccessControl setReaderKeyRequest:]
  -[HAPNFCAccessControl setReaderKeyResponse:]
  -[HAPNFCAccessControl issuerKeyRequest]
  -[HAPNFCAccessControl issuerKeyResponse]
  -[HAPNFCAccessControl deviceCredentialKeyRequest]
  -[HAPNFCAccessControl readerKeyRequest]


HAPNFCAccessDeviceCredentialKeyRequest : NSObject <NSCopying, HAPTLVProtocol>
 @property  HAPNFCAccessKeyTypeWrapper *type
 @property  NSData *key
 @property  NSData *issuerKeyIdentifier
 @property  HAPNFCAccessKeyStateWrapper *state
 @property  NSData *identifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPNFCAccessDeviceCredentialKeyRequest parsedFromData:error:]

  // instance methods
  -[HAPNFCAccessDeviceCredentialKeyRequest setKey:]
  -[HAPNFCAccessDeviceCredentialKeyRequest setType:]
  -[HAPNFCAccessDeviceCredentialKeyRequest .cxx_destruct]
  -[HAPNFCAccessDeviceCredentialKeyRequest setState:]
  -[HAPNFCAccessDeviceCredentialKeyRequest init]
  -[HAPNFCAccessDeviceCredentialKeyRequest isEqual:]
  -[HAPNFCAccessDeviceCredentialKeyRequest identifier]
  -[HAPNFCAccessDeviceCredentialKeyRequest state]
  -[HAPNFCAccessDeviceCredentialKeyRequest type]
  -[HAPNFCAccessDeviceCredentialKeyRequest parseFromData:error:]
  -[HAPNFCAccessDeviceCredentialKeyRequest setIdentifier:]
  -[HAPNFCAccessDeviceCredentialKeyRequest key]
  -[HAPNFCAccessDeviceCredentialKeyRequest copyWithZone:]
  -[HAPNFCAccessDeviceCredentialKeyRequest serializeWithError:]
  -[HAPNFCAccessDeviceCredentialKeyRequest setIssuerKeyIdentifier:]
  -[HAPNFCAccessDeviceCredentialKeyRequest issuerKeyIdentifier]
  -[HAPNFCAccessDeviceCredentialKeyRequest initWithType:key:issuerKeyIdentifier:state:identifier:]


HAPNFCAccessDeviceCredentialKeyResponse : NSObject <NSCopying, HAPTLVProtocol>
 @property  NSData *identifier
 @property  NSData *issuerKeyIdentifier
 @property  HAPNFCAccessResponseStatusWrapper *statusCode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPNFCAccessDeviceCredentialKeyResponse parsedFromData:error:]

  // instance methods
  -[HAPNFCAccessDeviceCredentialKeyResponse .cxx_destruct]
  -[HAPNFCAccessDeviceCredentialKeyResponse init]
  -[HAPNFCAccessDeviceCredentialKeyResponse isEqual:]
  -[HAPNFCAccessDeviceCredentialKeyResponse identifier]
  -[HAPNFCAccessDeviceCredentialKeyResponse setStatusCode:]
  -[HAPNFCAccessDeviceCredentialKeyResponse parseFromData:error:]
  -[HAPNFCAccessDeviceCredentialKeyResponse setIdentifier:]
  -[HAPNFCAccessDeviceCredentialKeyResponse statusCode]
  -[HAPNFCAccessDeviceCredentialKeyResponse copyWithZone:]
  -[HAPNFCAccessDeviceCredentialKeyResponse serializeWithError:]
  -[HAPNFCAccessDeviceCredentialKeyResponse setIssuerKeyIdentifier:]
  -[HAPNFCAccessDeviceCredentialKeyResponse issuerKeyIdentifier]
  -[HAPNFCAccessDeviceCredentialKeyResponse initWithIdentifier:issuerKeyIdentifier:statusCode:]


HAPNFCAccessIssuerKeyRequest : NSObject <NSCopying, HAPTLVProtocol>
 @property  HAPNFCAccessKeyTypeWrapper *type
 @property  NSData *key
 @property  NSData *identifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPNFCAccessIssuerKeyRequest parsedFromData:error:]

  // instance methods
  -[HAPNFCAccessIssuerKeyRequest setKey:]
  -[HAPNFCAccessIssuerKeyRequest setType:]
  -[HAPNFCAccessIssuerKeyRequest .cxx_destruct]
  -[HAPNFCAccessIssuerKeyRequest init]
  -[HAPNFCAccessIssuerKeyRequest isEqual:]
  -[HAPNFCAccessIssuerKeyRequest identifier]
  -[HAPNFCAccessIssuerKeyRequest type]
  -[HAPNFCAccessIssuerKeyRequest parseFromData:error:]
  -[HAPNFCAccessIssuerKeyRequest setIdentifier:]
  -[HAPNFCAccessIssuerKeyRequest key]
  -[HAPNFCAccessIssuerKeyRequest copyWithZone:]
  -[HAPNFCAccessIssuerKeyRequest serializeWithError:]
  -[HAPNFCAccessIssuerKeyRequest initWithType:key:identifier:]


HAPNFCAccessIssuerKeyResponse : NSObject <NSCopying, HAPTLVProtocol>
 @property  NSData *identifier
 @property  HAPNFCAccessResponseStatusWrapper *statusCode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPNFCAccessIssuerKeyResponse parsedFromData:error:]

  // instance methods
  -[HAPNFCAccessIssuerKeyResponse .cxx_destruct]
  -[HAPNFCAccessIssuerKeyResponse init]
  -[HAPNFCAccessIssuerKeyResponse isEqual:]
  -[HAPNFCAccessIssuerKeyResponse identifier]
  -[HAPNFCAccessIssuerKeyResponse setStatusCode:]
  -[HAPNFCAccessIssuerKeyResponse parseFromData:error:]
  -[HAPNFCAccessIssuerKeyResponse setIdentifier:]
  -[HAPNFCAccessIssuerKeyResponse statusCode]
  -[HAPNFCAccessIssuerKeyResponse copyWithZone:]
  -[HAPNFCAccessIssuerKeyResponse serializeWithError:]
  -[HAPNFCAccessIssuerKeyResponse initWithIdentifier:statusCode:]


HAPNFCAccessReaderKeyRequest : NSObject <NSCopying, HAPTLVProtocol>
 @property  HAPNFCAccessKeyTypeWrapper *type
 @property  NSData *key
 @property  NSData *readerIdentifier
 @property  NSData *identifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPNFCAccessReaderKeyRequest parsedFromData:error:]

  // instance methods
  -[HAPNFCAccessReaderKeyRequest setKey:]
  -[HAPNFCAccessReaderKeyRequest setType:]
  -[HAPNFCAccessReaderKeyRequest .cxx_destruct]
  -[HAPNFCAccessReaderKeyRequest init]
  -[HAPNFCAccessReaderKeyRequest isEqual:]
  -[HAPNFCAccessReaderKeyRequest identifier]
  -[HAPNFCAccessReaderKeyRequest readerIdentifier]
  -[HAPNFCAccessReaderKeyRequest type]
  -[HAPNFCAccessReaderKeyRequest parseFromData:error:]
  -[HAPNFCAccessReaderKeyRequest setIdentifier:]
  -[HAPNFCAccessReaderKeyRequest key]
  -[HAPNFCAccessReaderKeyRequest setReaderIdentifier:]
  -[HAPNFCAccessReaderKeyRequest copyWithZone:]
  -[HAPNFCAccessReaderKeyRequest serializeWithError:]
  -[HAPNFCAccessReaderKeyRequest initWithType:key:readerIdentifier:identifier:]


HAPNFCAccessReaderKeyResponse : NSObject <NSCopying, HAPTLVProtocol>
 @property  NSData *identifier
 @property  HAPNFCAccessResponseStatusWrapper *statusCode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPNFCAccessReaderKeyResponse parsedFromData:error:]

  // instance methods
  -[HAPNFCAccessReaderKeyResponse .cxx_destruct]
  -[HAPNFCAccessReaderKeyResponse init]
  -[HAPNFCAccessReaderKeyResponse isEqual:]
  -[HAPNFCAccessReaderKeyResponse identifier]
  -[HAPNFCAccessReaderKeyResponse setStatusCode:]
  -[HAPNFCAccessReaderKeyResponse parseFromData:error:]
  -[HAPNFCAccessReaderKeyResponse setIdentifier:]
  -[HAPNFCAccessReaderKeyResponse statusCode]
  -[HAPNFCAccessReaderKeyResponse copyWithZone:]
  -[HAPNFCAccessReaderKeyResponse serializeWithError:]
  -[HAPNFCAccessReaderKeyResponse initWithIdentifier:statusCode:]


HAPNFCAccessSupportedConfiguration : NSObject <NSCopying, HAPTLVProtocol>
 @property  HAPTLVUnsignedNumberValue *maximumNumberOfIssuerKeys
 @property  HAPTLVUnsignedNumberValue *maximumNumberOfSuspendedDeviceCredentialKeys
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPNFCAccessSupportedConfiguration parsedFromData:error:]

  // instance methods
  -[HAPNFCAccessSupportedConfiguration .cxx_destruct]
  -[HAPNFCAccessSupportedConfiguration init]
  -[HAPNFCAccessSupportedConfiguration isEqual:]
  -[HAPNFCAccessSupportedConfiguration parseFromData:error:]
  -[HAPNFCAccessSupportedConfiguration copyWithZone:]
  -[HAPNFCAccessSupportedConfiguration serializeWithError:]
  -[HAPNFCAccessSupportedConfiguration setMaximumNumberOfIssuerKeys:]
  -[HAPNFCAccessSupportedConfiguration setMaximumNumberOfSuspendedDeviceCredentialKeys:]
  -[HAPNFCAccessSupportedConfiguration maximumNumberOfIssuerKeys]
  -[HAPNFCAccessSupportedConfiguration maximumNumberOfSuspendedDeviceCredentialKeys]
  -[HAPNFCAccessSupportedConfiguration initWithMaximumNumberOfIssuerKeys:maximumNumberOfSuspendedDeviceCredentialKeys:]


HAPMetricsPairVerifyEvent : HMMLogEvent
 @property  NSString *accessoryIdentifier
 @property  NSNumber *linkType
 @property  NSNumber *duration
 @property  NSString *reason
 @property  NSError *pvError

  // instance methods
  -[HAPMetricsPairVerifyEvent .cxx_destruct]
  -[HAPMetricsPairVerifyEvent linkType]
  -[HAPMetricsPairVerifyEvent accessoryIdentifier]
  -[HAPMetricsPairVerifyEvent reason]
  -[HAPMetricsPairVerifyEvent pvError]
  -[HAPMetricsPairVerifyEvent duration]
  -[HAPMetricsPairVerifyEvent initWithAccessory:forLinkType:duration:reason:pvError:]


HAPOperatingStateWrapper : NSObject <NSCopying, HAPTLVProtocol>
 @property  long long value
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPOperatingStateWrapper parsedFromData:error:]

  // instance methods
  -[HAPOperatingStateWrapper init]
  -[HAPOperatingStateWrapper isEqual:]
  -[HAPOperatingStateWrapper initWithValue:]
  -[HAPOperatingStateWrapper setValue:]
  -[HAPOperatingStateWrapper value]
  -[HAPOperatingStateWrapper parseFromData:error:]
  -[HAPOperatingStateWrapper copyWithZone:]
  -[HAPOperatingStateWrapper serializeWithError:]


HAPPairSetupSessionServerInfo : NSObject
 @property  NSString *productData
 @property  int maxTries

  // instance methods
  -[HAPPairSetupSessionServerInfo .cxx_destruct]
  -[HAPPairSetupSessionServerInfo productData]
  -[HAPPairSetupSessionServerInfo setProductData:]
  -[HAPPairSetupSessionServerInfo setMaxTries:]
  -[HAPPairSetupSessionServerInfo initWithProductData:maxTries:]
  -[HAPPairSetupSessionServerInfo maxTries]


HAPPairSetupSession : HMFObject <HMFTimerDelegate, HAPEncryptedSession>
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  unsigned long state
 @property  HMFTimer *backoffTimer
 @property  BOOL handlingInvalidSetupCode
 @property  unsigned long pairSetupType
 @property  NSData *sessionReadKey
 @property  NSData *sessionWriteKey
 @property  NSMutableData *sessionReadNonce
 @property  NSMutableData *sessionWriteNonce
 @property  NSData *certificate
 @property  ^{PairingSessionPrivate=} pairingSession
 @property  <HAPPairSetupSessionDelegate> *delegate
 @property  long long role
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPPairSetupSession initialize]
  +[HAPPairSetupSession isValidSetupCode:]

  // instance methods
  -[HAPPairSetupSession backoffTimer]
  -[HAPPairSetupSession clientQueue]
  -[HAPPairSetupSession timerDidFire:]
  -[HAPPairSetupSession .cxx_destruct]
  -[HAPPairSetupSession stop]
  -[HAPPairSetupSession isHandlingInvalidSetupCode]
  -[HAPPairSetupSession setCertificate:]
  -[HAPPairSetupSession setState:]
  -[HAPPairSetupSession descriptionWithPointer:]
  -[HAPPairSetupSession pairingSession]
  -[HAPPairSetupSession init]
  -[HAPPairSetupSession state]
  -[HAPPairSetupSession _initializeServer]
  -[HAPPairSetupSession _invalidate]
  -[HAPPairSetupSession role]
  -[HAPPairSetupSession delegate]
  -[HAPPairSetupSession stopWithError:]
  -[HAPPairSetupSession start]
  -[HAPPairSetupSession shortDescription]
  -[HAPPairSetupSession dealloc]
  -[HAPPairSetupSession certificate]
  -[HAPPairSetupSession setHandlingInvalidSetupCode:]
  -[HAPPairSetupSession setBackoffTimer:]
  -[HAPPairSetupSession _stopWithError:]
  -[HAPPairSetupSession pairSetupType]
  -[HAPPairSetupSession setPairSetupType:]
  -[HAPPairSetupSession getCertificate]
  -[HAPPairSetupSession _processSetupExchangeData:error:]
  -[HAPPairSetupSession _handleLocalPairingIdentityRequestWithStatus:]
  -[HAPPairSetupSession encryptData:additionalAuthenticatedData:error:]
  -[HAPPairSetupSession decryptData:additionalAuthenticatedData:error:]
  -[HAPPairSetupSession receivedSetupExchangeData:error:]
  -[HAPPairSetupSession initWithRole:pairSetupType:delegate:]
  -[HAPPairSetupSession generateSessionKeys]
  -[HAPPairSetupSession isSecureSession]
  -[HAPPairSetupSession _initializeSession]
  -[HAPPairSetupSession setSessionReadKey:]
  -[HAPPairSetupSession setSessionWriteKey:]
  -[HAPPairSetupSession setSessionReadNonce:]
  -[HAPPairSetupSession setSessionWriteNonce:]
  -[HAPPairSetupSession _handlePairSetupExchangeComplete]
  -[HAPPairSetupSession _processSetupCode:error:]
  -[HAPPairSetupSession handleInvalidSetupCodeAndRestart:]
  -[HAPPairSetupSession handleSetupCodeRequest]
  -[HAPPairSetupSession _initiateClientPairSetupExchange]
  -[HAPPairSetupSession sessionReadKey]
  -[HAPPairSetupSession sessionWriteKey]
  -[HAPPairSetupSession sessionWriteNonce]
  -[HAPPairSetupSession sessionReadNonce]
  -[HAPPairSetupSession _handleBackoffExpiration]
  -[HAPPairSetupSession handleBackoffRequestWithTimeout:]
  -[HAPPairSetupSession handleSavePeerRequestWithPeerIdentity:error:]
  -[HAPPairSetupSession _showSetupCodeWithError:]
  -[HAPPairSetupSession _handleProductData:]


HAPMetadataConstraints : HMFObject <NSCopying, NSSecureCoding>
 @property  NSNumber *minimumValue
 @property  NSNumber *maximumValue
 @property  NSNumber *stepValue
 @property  NSNumber *minLength
 @property  NSNumber *maxLength
 @property  NSArray *validValues

  // class methods
  +[HAPMetadataConstraints supportsSecureCoding]

  // instance methods
  -[HAPMetadataConstraints setMaximumValue:]
  -[HAPMetadataConstraints minimumValue]
  -[HAPMetadataConstraints stepValue]
  -[HAPMetadataConstraints setMinimumValue:]
  -[HAPMetadataConstraints maxLength]
  -[HAPMetadataConstraints validValues]
  -[HAPMetadataConstraints initWithCoder:]
  -[HAPMetadataConstraints .cxx_destruct]
  -[HAPMetadataConstraints setStepValue:]
  -[HAPMetadataConstraints minLength]
  -[HAPMetadataConstraints maximumValue]
  -[HAPMetadataConstraints copyWithZone:]
  -[HAPMetadataConstraints setMaxLength:]
  -[HAPMetadataConstraints encodeWithCoder:]
  -[HAPMetadataConstraints setMinLength:]
  -[HAPMetadataConstraints setValidValues:]
  -[HAPMetadataConstraints isEqualToMetadataConstraints:]


HAP2EncodedEmptyRequestThread : HAP2LoggingObject <HAP2EncodedRequest>
 @property  unsigned long requestType
 @property  unsigned long type
 @property  BOOL encrypted
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HAP2EncodedEmptyRequestThread body]
  -[HAP2EncodedEmptyRequestThread isEncrypted]
  -[HAP2EncodedEmptyRequestThread requestType]
  -[HAP2EncodedEmptyRequestThread initWithRequestType:]
  -[HAP2EncodedEmptyRequestThread serialize]
  -[HAP2EncodedEmptyRequestThread type]


HAPPowerManager : NSObject <HMFLogging>
 @property  unsigned int systemPowerMgr
 @property  ^{IONotificationPort=} systemPowerPort
 @property  unsigned int systemPowerNotifier
 @property  NSMapTable *delegatesMap
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPPowerManager sharedInstance]
  +[HAPPowerManager logCategory]

  // instance methods
  -[HAPPowerManager systemPowerPort]
  -[HAPPowerManager .cxx_destruct]
  -[HAPPowerManager systemPowerNotifier]
  -[HAPPowerManager systemPowerChanged:notificationID:]
  -[HAPPowerManager init]
  -[HAPPowerManager setDelegatesMap:]
  -[HAPPowerManager delegatesMap]
  -[HAPPowerManager dealloc]
  -[HAPPowerManager systemPowerMgr]
  -[HAPPowerManager registerForSleepWake:queue:]
  -[HAPPowerManager deRegisterFromSleepWake:]


HAP2EncodedRequestThread : HAP2LoggingObject <HAP2EncodedRequest>
 @property  HAP2AccessoryServerEncodingThreadBTLERequest *btleRequest
 @property  unsigned long type
 @property  BOOL encrypted
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAP2EncodedRequestThread hap2RequestTypeFromBTLERequestType:]
  +[HAP2EncodedRequestThread btleRequestTypeFromHAP2RequestType:]

  // instance methods
  -[HAP2EncodedRequestThread .cxx_destruct]
  -[HAP2EncodedRequestThread isEncrypted]
  -[HAP2EncodedRequestThread serialize]
  -[HAP2EncodedRequestThread type]
  -[HAP2EncodedRequestThread initWithBTLERequest:enforcePDUBodyLength:]
  -[HAP2EncodedRequestThread btleRequest]


HAP2EncodedListPairingsResponseThread : HAP2EncodedResponseThread <HAP2EncodedListPairingsResponse>
 @property  NSArray *pairings
 @property  BOOL encrypted
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HAP2EncodedListPairingsResponseThread .cxx_destruct]
  -[HAP2EncodedListPairingsResponseThread pairings]
  -[HAP2EncodedListPairingsResponseThread initWithBTLEResponse:pairings:]


HAPAccessoryServer : HMFObject
 @property  NSHashTable *internalDelegates
 @property  NSObject<OS_dispatch_queue> *internalDelegateQueue
 @property  NSHashTable *notificationClients
 @property  int successfulPingCount
 @property  int failedPingCount
 @property  <HAPAccessoryServerDelegate> *delegate
 @property  NSObject<OS_dispatch_queue> *delegateQueue
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  NSString *name
 @property  BOOL hasPairings
 @property  HAPSuspendedAccessory *suspendedAccessory
 @property  unsigned long pendingRemovePairing
 @property  BOOL reachable
 @property  BOOL securitySessionOpen
 @property  NSString *identifier
 @property  NSNumber *category
 @property  unsigned long configNumber
 @property  unsigned long stateNumber
 @property  unsigned long wakeNumber
 @property  unsigned long compatibilityFeatures
 @property  BOOL incompatibleUpdate
 @property  HAPAccessory *primaryAccessory
 @property  NSArray *accessories
 @property  <HAPKeyStore> *keyStore
 @property  NSData *setupHash
 @property  HMFVersion *version
 @property  unsigned long pairSetupType
 @property  NSString *productData
 @property  NSString *reachabilityChangedReason
 @property  BOOL hasAdvertisement
 @property  HAPKeyBag *keyBag
 @property  HMFActivity *pairingActivity
 @property  BOOL supportsUnreachablePing
 @property  NSNumber *metric_pairVerifyDuration
 @property  NSString *metric_pairVerifyReason
 @property  HAPDeviceID *deviceID
 @property  long long linkType
 @property  BOOL supportsTimedWrite
 @property  unsigned long authMethod
 @property  BOOL bleLinkConnected
 @property  BOOL reachabilityPingEnabled
 @property  BOOL sessionRestoreActive
 @property  NSDate *connectionStartTime
 @property  BOOL shouldDisconnectOnIdle
 @property  long long communicationProtocol

  // instance methods
  -[HAPAccessoryServer setDelegate:queue:]
  -[HAPAccessoryServer isPaired]
  -[HAPAccessoryServer setAccessories:]
  -[HAPAccessoryServer clientQueue]
  -[HAPAccessoryServer disconnect]
  -[HAPAccessoryServer name]
  -[HAPAccessoryServer continuePairingAfterAuthPrompt]
  -[HAPAccessoryServer validatePairingAuthMethod:]
  -[HAPAccessoryServer delegateQueue]
  -[HAPAccessoryServer startPing]
  -[HAPAccessoryServer tearDownSessionOnAuthCompletion]
  -[HAPAccessoryServer tryPairingPassword:error:]
  -[HAPAccessoryServer startPairingWithRequest:]
  -[HAPAccessoryServer enableEvents:forCharacteristics:withCompletionHandler:queue:]
  -[HAPAccessoryServer .cxx_destruct]
  -[HAPAccessoryServer stopPairingWithError:]
  -[HAPAccessoryServer writeCharacteristicValues:timeout:completionQueue:completionHandler:]
  -[HAPAccessoryServer deviceID]
  -[HAPAccessoryServer authenticateAccessory]
  -[HAPAccessoryServer setHasAdvertisement:]
  -[HAPAccessoryServer setName:]
  -[HAPAccessoryServer linkType]
  -[HAPAccessoryServer associateAccessoryWithControllerKeyUsingAccessoryPublicKey:]
  -[HAPAccessoryServer init]
  -[HAPAccessoryServer disconnectOnIdleUpdated]
  -[HAPAccessoryServer handleUpdatesForCharacteristics:stateNumber:]
  -[HAPAccessoryServer setVersion:]
  -[HAPAccessoryServer identifyWithCompletion:]
  -[HAPAccessoryServer listPairingsWithCompletionQueue:completionHandler:]
  -[HAPAccessoryServer removePairingForCurrentControllerOnQueue:completion:]
  -[HAPAccessoryServer associateAccessoryWithControllerKeyUsingAccessoryIdentifier:]
  -[HAPAccessoryServer isReachable]
  -[HAPAccessoryServer identifier]
  -[HAPAccessoryServer initializeKeyBagIfNecessary]
  -[HAPAccessoryServer reconfirm]
  -[HAPAccessoryServer discoverAccessories]
  -[HAPAccessoryServer continuePairingUsingWAC]
  -[HAPAccessoryServer addPairing:completionQueue:completionHandler:]
  -[HAPAccessoryServer delegate]
  -[HAPAccessoryServer setReachable:]
  -[HAPAccessoryServer setIdentifier:]
  -[HAPAccessoryServer version]
  -[HAPAccessoryServer continueAuthAfterValidation:]
  -[HAPAccessoryServer shortDescription]
  -[HAPAccessoryServer registerForNotifications:]
  -[HAPAccessoryServer updateActiveDisconnectOnIdleTimeout:]
  -[HAPAccessoryServer pingSupported]
  -[HAPAccessoryServer category]
  -[HAPAccessoryServer internalDelegateQueue]
  -[HAPAccessoryServer connectionStartTime]
  -[HAPAccessoryServer provisionToken:]
  -[HAPAccessoryServer setCategory:]
  -[HAPAccessoryServer disconnectWithError:]
  -[HAPAccessoryServer shouldRetryPVDueToAuthenticationError:]
  -[HAPAccessoryServer accessories]
  -[HAPAccessoryServer stopPing]
  -[HAPAccessoryServer keyBag]
  -[HAPAccessoryServer hasAdvertisement]
  -[HAPAccessoryServer readCharacteristicValues:timeout:completionQueue:completionHandler:]
  -[HAPAccessoryServer setConnectionStartTime:]
  -[HAPAccessoryServer primaryAccessory]
  -[HAPAccessoryServer keyStore]
  -[HAPAccessoryServer removePairing:completionQueue:completionHandler:]
  -[HAPAccessoryServer communicationProtocol]
  -[HAPAccessoryServer productData]
  -[HAPAccessoryServer setProductData:]
  -[HAPAccessoryServer setPrimaryAccessory:]
  -[HAPAccessoryServer setupHash]
  -[HAPAccessoryServer setSetupHash:]
  -[HAPAccessoryServer stateNumber]
  -[HAPAccessoryServer isSecuritySessionOpen]
  -[HAPAccessoryServer isBLELinkConnected]
  -[HAPAccessoryServer wakeNumber]
  -[HAPAccessoryServer shouldDisconnectOnIdle]
  -[HAPAccessoryServer setShouldDisconnectOnIdle:]
  -[HAPAccessoryServer setStateNumber:]
  -[HAPAccessoryServer configNumber]
  -[HAPAccessoryServer authMethod]
  -[HAPAccessoryServer supportsUnreachablePing]
  -[HAPAccessoryServer reachabilityPingEnabled]
  -[HAPAccessoryServer setReachabilityPingEnabled:]
  -[HAPAccessoryServer setConfigNumber:]
  -[HAPAccessoryServer unregisterForNotifications:]
  -[HAPAccessoryServer requiresTimedWrite:]
  -[HAPAccessoryServer setSessionRestoreActive:]
  -[HAPAccessoryServer reachabilityChangedReason]
  -[HAPAccessoryServer suspendedAccessory]
  -[HAPAccessoryServer setSuspendedAccessory:]
  -[HAPAccessoryServer setAuthMethod:]
  -[HAPAccessoryServer initWithKeystore:]
  -[HAPAccessoryServer hasPairings]
  -[HAPAccessoryServer matchesSetupID:serverIdentifier:]
  -[HAPAccessoryServer pairingActivity]
  -[HAPAccessoryServer setPairingActivity:]
  -[HAPAccessoryServer compatibilityFeatures]
  -[HAPAccessoryServer pendingRemovePairing]
  -[HAPAccessoryServer removePairingIdentifier:pairingPublicKey:completionQueue:completionHandler:]
  -[HAPAccessoryServer isPinging]
  -[HAPAccessoryServer buildReachabilityNotificationDictionary:reachable:linkType:withError:]
  -[HAPAccessoryServer notifyClients:withDictionary:]
  -[HAPAccessoryServer setHasPairings:]
  -[HAPAccessoryServer setMetric_pairVerifyReason:]
  -[HAPAccessoryServer getControllerUserName]
  -[HAPAccessoryServer setSecuritySessionOpen:]
  -[HAPAccessoryServer pairSetupType]
  -[HAPAccessoryServer enumerateInternalDelegatesUsingBlock:]
  -[HAPAccessoryServer setReachabilityChangedReason:]
  -[HAPAccessoryServer setWakeNumber:]
  -[HAPAccessoryServer setCompatibilityFeatures:]
  -[HAPAccessoryServer setSupportsTimedWrite:]
  -[HAPAccessoryServer metric_pairVerifyReason]
  -[HAPAccessoryServer setMetric_pairVerifyDuration:]
  -[HAPAccessoryServer submitPairVerifyMetricWithError:]
  -[HAPAccessoryServer setPairSetupType:]
  -[HAPAccessoryServer incrementFailedPing]
  -[HAPAccessoryServer incrementSuccessfulPing]
  -[HAPAccessoryServer securitySessionWillCloseWithResponseData:error:]
  -[HAPAccessoryServer setPendingRemovePairing:]
  -[HAPAccessoryServer isIncompatibleUpdate]
  -[HAPAccessoryServer isSessionRestoreActive]
  -[HAPAccessoryServer setSupportsUnreachablePing:]
  -[HAPAccessoryServer supportsTimedWrite]
  -[HAPAccessoryServer addInternalDelegate:]
  -[HAPAccessoryServer matchesSetupID:]
  -[HAPAccessoryServer startPairingWithConsentRequired:config:ownershipToken:]
  -[HAPAccessoryServer refreshKeyBag]
  -[HAPAccessoryServer internalDelegates]
  -[HAPAccessoryServer metric_pairVerifyDuration]
  -[HAPAccessoryServer removeInternalDelegate:]
  -[HAPAccessoryServer updateAccessoryInfoDictionary:]
  -[HAPAccessoryServer notificationClients]
  -[HAPAccessoryServer setNotificationClients:]
  -[HAPAccessoryServer successfulPingCount]
  -[HAPAccessoryServer setSuccessfulPingCount:]
  -[HAPAccessoryServer failedPingCount]
  -[HAPAccessoryServer setFailedPingCount:]
  -[HAPAccessoryServer setIncompatibleUpdate:]
  -[HAPAccessoryServer setKeyBag:]


HAPMetadataUnit : HMFObject
 @property  NSString *name
 @property  NSString *unitDescription

  // class methods
  +[HAPMetadataUnit init:withDictionary:]

  // instance methods
  -[HAPMetadataUnit dump]
  -[HAPMetadataUnit unitDescription]
  -[HAPMetadataUnit initWithName:description:]
  -[HAPMetadataUnit name]
  -[HAPMetadataUnit .cxx_destruct]
  -[HAPMetadataUnit generateDictionary]
  -[HAPMetadataUnit setUnitDescription:]
  -[HAPMetadataUnit setName:]


HAPMetadataProperty : HMFObject
 @property  NSString *propertyType
 @property  NSNumber *bitPosition
 @property  NSString *propertyDescription

  // class methods
  +[HAPMetadataProperty init:withDictionary:]

  // instance methods
  -[HAPMetadataProperty dump]
  -[HAPMetadataProperty propertyDescription]
  -[HAPMetadataProperty setPropertyDescription:]
  -[HAPMetadataProperty bitPosition]
  -[HAPMetadataProperty .cxx_destruct]
  -[HAPMetadataProperty generateDictionary]
  -[HAPMetadataProperty propertyType]
  -[HAPMetadataProperty setPropertyType:]
  -[HAPMetadataProperty initWithType:bitPosition:description:]
  -[HAPMetadataProperty setBitPosition:]


HAPMetadataCharacteristicValue : HMFObject
 @property  NSNumber *minValue
 @property  NSNumber *maxValue
 @property  NSNumber *stepValue
 @property  NSNumber *minLength
 @property  NSNumber *maxLength
 @property  NSArray *validValues

  // class methods
  +[HAPMetadataCharacteristicValue initWithDictionary:]

  // instance methods
  -[HAPMetadataCharacteristicValue dump]
  -[HAPMetadataCharacteristicValue stepValue]
  -[HAPMetadataCharacteristicValue maxLength]
  -[HAPMetadataCharacteristicValue validValues]
  -[HAPMetadataCharacteristicValue .cxx_destruct]
  -[HAPMetadataCharacteristicValue setMaxValue:]
  -[HAPMetadataCharacteristicValue generateDictionary]
  -[HAPMetadataCharacteristicValue setMinValue:]
  -[HAPMetadataCharacteristicValue setStepValue:]
  -[HAPMetadataCharacteristicValue minLength]
  -[HAPMetadataCharacteristicValue minValue]
  -[HAPMetadataCharacteristicValue maxValue]
  -[HAPMetadataCharacteristicValue initWithMinLength:maxLength:]
  -[HAPMetadataCharacteristicValue initWithMinValue:maxValue:stepValue:validValues:]
  -[HAPMetadataCharacteristicValue setMaxLength:]
  -[HAPMetadataCharacteristicValue setMinLength:]


HAPMetadataCharacteristic : HMFObject
 @property  NSString *name
 @property  NSString *chrDescription
 @property  NSString *uuidStr
 @property  NSNumber *properties
 @property  NSString *format
 @property  NSString *units
 @property  HAPMetadataCharacteristicValue *valueMetadata

  // instance methods
  -[HAPMetadataCharacteristic dump]
  -[HAPMetadataCharacteristic valueMetadata]
  -[HAPMetadataCharacteristic setValueMetadata:]
  -[HAPMetadataCharacteristic name]
  -[HAPMetadataCharacteristic .cxx_destruct]
  -[HAPMetadataCharacteristic uuidStr]
  -[HAPMetadataCharacteristic properties]
  -[HAPMetadataCharacteristic setFormat:]
  -[HAPMetadataCharacteristic setName:]
  -[HAPMetadataCharacteristic chrDescription]
  -[HAPMetadataCharacteristic setUuidStr:]
  -[HAPMetadataCharacteristic initWithName:uuid:description:format:properties:]
  -[HAPMetadataCharacteristic setProperties:]
  -[HAPMetadataCharacteristic format]
  -[HAPMetadataCharacteristic units]
  -[HAPMetadataCharacteristic setUnits:]
  -[HAPMetadataCharacteristic generateDictionary:]
  -[HAPMetadataCharacteristic setChrDescription:]


HAPMetadataService : HMFObject
 @property  NSString *name
 @property  NSString *svcDescription
 @property  NSString *uuidStr
 @property  NSString *btleuuidStr
 @property  NSNumber *properties
 @property  NSArray *linkedServices
 @property  NSSet *mandatoryCharacteristics
 @property  NSSet *optionalCharacteristics
 @property  BOOL allowAssociatedService

  // instance methods
  -[HAPMetadataService dump]
  -[HAPMetadataService svcDescription]
  -[HAPMetadataService name]
  -[HAPMetadataService setBtleuuidStr:]
  -[HAPMetadataService .cxx_destruct]
  -[HAPMetadataService uuidStr]
  -[HAPMetadataService properties]
  -[HAPMetadataService setAllowAssociatedService:]
  -[HAPMetadataService setName:]
  -[HAPMetadataService mandatoryCharacteristics]
  -[HAPMetadataService setUuidStr:]
  -[HAPMetadataService setSvcDescription:]
  -[HAPMetadataService setProperties:]
  -[HAPMetadataService linkedServices]
  -[HAPMetadataService initWithName:uuid:description:mandatoryChrTypes:properties:linkedServices:]
  -[HAPMetadataService setLinkedServices:]
  -[HAPMetadataService setOptionalCharacteristics:]
  -[HAPMetadataService btleuuidStr]
  -[HAPMetadataService allowAssociatedService]
  -[HAPMetadataService optionalCharacteristics]
  -[HAPMetadataService generateDictionary:metadata:]
  -[HAPMetadataService setMandatoryCharacteristics:]


HAPMetadataTuple : HMFObject
 @property  NSString *characteristicType
 @property  NSString *serviceType
 @property  NSString *index

  // instance methods
  -[HAPMetadataTuple .cxx_destruct]
  -[HAPMetadataTuple isEqual:]
  -[HAPMetadataTuple characteristicType]
  -[HAPMetadataTuple index]
  -[HAPMetadataTuple initWithCharacteristicType:serviceType:]
  -[HAPMetadataTuple serviceType]


HAPMetadata : HMFObject
 @property  NSNumber *version
 @property  NSNumber *schemaVersion
 @property  NSString *hapBaseUUIDSuffix
 @property  NSMutableArray *parsedUUIDs
 @property  NSDictionary *hapUnitMap
 @property  NSDictionary *hapPropertyMap
 @property  NSDictionary *hapCharacteristicMap
 @property  NSDictionary *hapServiceMap
 @property  NSSet *hapSupportsAuthDataSet
 @property  NSDictionary *hapCharacteristicNameTypeMap
 @property  NSDictionary *hapServiceNameTypeMap
 @property  NSDictionary *rawPlist
 @property  NSArray *hapValueUnits
 @property  NSArray *hapProperties
 @property  NSArray *hapCharacteristics
 @property  NSArray *hapServices
 @property  NSArray *hapSupportsAuthDataTuples

  // class methods
  +[HAPMetadata setCurrentMetadataHook:]
  +[HAPMetadata shortenHAPType:baseUUIDSuffix:]
  +[HAPMetadata getSharedInstance]

  // instance methods
  -[HAPMetadata descriptionFromServiceType:]
  -[HAPMetadata parseCharacteristicValue:]
  -[HAPMetadata initWithDictionary:error:]
  -[HAPMetadata setSchemaVersion:]
  -[HAPMetadata allowAssociatedService:]
  -[HAPMetadata hapServices]
  -[HAPMetadata getDefaultCharacteristicProperties:]
  -[HAPMetadata hapServiceMap]
  -[HAPMetadata serviceUTIFromType:]
  -[HAPMetadata parseUnits:]
  -[HAPMetadata hapCharacteristicFromName:]
  -[HAPMetadata initWithServices:characteristics:units:properties:addAuthDataTuples:hapBaseUUIDSuffix:]
  -[HAPMetadata .cxx_destruct]
  -[HAPMetadata parseCharacteristics:]
  -[HAPMetadata schemaVersion]
  -[HAPMetadata generateDictionary]
  -[HAPMetadata isMandatoryCharacteristic:forService:]
  -[HAPMetadata characteristicValueUnitOfType:]
  -[HAPMetadata parseCharacteristicServiceTuples:]
  -[HAPMetadata btleToServiceType:]
  -[HAPMetadata rawPlist]
  -[HAPMetadata hapCharacteristicFromType:]
  -[HAPMetadata parseProperties:]
  -[HAPMetadata isStandardHAPUnitName:]
  -[HAPMetadata hapSupportsAuthDataTuples]
  -[HAPMetadata hapSupportsAuthDataSet]
  -[HAPMetadata setVersion:]
  -[HAPMetadata hapProperties]
  -[HAPMetadata setHapSupportsAuthDataSet:]
  -[HAPMetadata characteristicUTIFromType:]
  -[HAPMetadata setHapServiceNameTypeMap:]
  -[HAPMetadata parseServices:]
  -[HAPMetadata hapCharacteristicMap]
  -[HAPMetadata validateMandatoryCharacteristics:forService:]
  -[HAPMetadata isStandardHAPService:]
  -[HAPMetadata isStandardHAPServiceName:]
  -[HAPMetadata supportsAdditionalAuthorizationData:forService:]
  -[HAPMetadata getDefaultCharacteristicMetadata:]
  -[HAPMetadata generateHAPMetadataTuplesDictionary:]
  -[HAPMetadata serviceTypeFromUTI:]
  -[HAPMetadata hapCharacteristicNameTypeMap]
  -[HAPMetadata hapBaseUUIDSuffix]
  -[HAPMetadata hapUnitFromName:]
  -[HAPMetadata parseMetadata:]
  -[HAPMetadata setHapBaseUUIDSuffix:]
  -[HAPMetadata characteristicTypeFromUTI:]
  -[HAPMetadata setHapCharacteristicNameTypeMap:]
  -[HAPMetadata getDefaultServiceProperties:]
  -[HAPMetadata serviceTypeToBTLE:]
  -[HAPMetadata setHapServiceMap:]
  -[HAPMetadata hapServiceFromName:]
  -[HAPMetadata parseVersion:]
  -[HAPMetadata descriptionFromCharacteristicType:]
  -[HAPMetadata version]
  -[HAPMetadata setHapUnitMap:]
  -[HAPMetadata hapPropertyMap]
  -[HAPMetadata parsedUUIDs]
  -[HAPMetadata hapValueUnits]
  -[HAPMetadata hapServiceFromType:]
  -[HAPMetadata setHapCharacteristicMap:]
  -[HAPMetadata setHapPropertyMap:]
  -[HAPMetadata setParsedUUIDs:]
  -[HAPMetadata hapServiceNameTypeMap]
  -[HAPMetadata isStandardHAPCharacteristic:]
  -[HAPMetadata hapUnitMap]
  -[HAPMetadata isStandardHAPCharacteristicName:]
  -[HAPMetadata hapCharacteristics]
  -[HAPMetadata parseServiceCharacteristics:]
  -[HAPMetadata updateRawPlist]


HMFObjectCacheHAPCharacteristicMetadata : NSObject
  // class methods
  +[HMFObjectCacheHAPCharacteristicMetadata hap_cacheInstanceForMetadata:]


HAPCharacteristicMetadata : HMFObject <NSCopying, NSSecureCoding>
 @property  HAPMetadataConstraints *constraints
 @property  NSString *manufacturerDescription
 @property  NSString *format
 @property  NSString *units

  // class methods
  +[HAPCharacteristicMetadata supportsSecureCoding]

  // instance methods
  -[HAPCharacteristicMetadata initWithCoder:]
  -[HAPCharacteristicMetadata constraints]
  -[HAPCharacteristicMetadata .cxx_destruct]
  -[HAPCharacteristicMetadata setFormat:]
  -[HAPCharacteristicMetadata setConstraints:]
  -[HAPCharacteristicMetadata format]
  -[HAPCharacteristicMetadata units]
  -[HAPCharacteristicMetadata setUnits:]
  -[HAPCharacteristicMetadata copyWithZone:]
  -[HAPCharacteristicMetadata encodeWithCoder:]
  -[HAPCharacteristicMetadata manufacturerDescription]
  -[HAPCharacteristicMetadata setManufacturerDescription:]
  -[HAPCharacteristicMetadata initWithConstraints:description:format:units:]
  -[HAPCharacteristicMetadata isEqualToCharacteristicMetadata:]
  -[HAPCharacteristicMetadata _generateValidConstraints:]


HAP2CoAPIO : NSObject
  // class methods
  +[HAP2CoAPIO unregisterConsumer:]
  +[HAP2CoAPIO thread]
  +[HAP2CoAPIO new]
  +[HAP2CoAPIO isRunning]
  +[HAP2CoAPIO consumers]
  +[HAP2CoAPIO lock]
  +[HAP2CoAPIO registerConsumer:]
  +[HAP2CoAPIO setThread:]
  +[HAP2CoAPIO setCoapAddressFromString:port:coapAddress:]
  +[HAP2CoAPIO queueSessionBlockForConsumer:sessionBlock:withTimeout:requiresCompletion:]
  +[HAP2CoAPIO queueSessionCompletionForConsumer:]
  +[HAP2CoAPIO setConsumers:]

  // instance methods
  -[HAP2CoAPIO init]


HAP2CoAPIOConsumerWeakHolder : NSObject
 @property  <HAP2CoAPIOConsumer> *consumer

  // class methods
  +[HAP2CoAPIOConsumerWeakHolder new]

  // instance methods
  -[HAP2CoAPIOConsumerWeakHolder consumer]
  -[HAP2CoAPIOConsumerWeakHolder .cxx_destruct]
  -[HAP2CoAPIOConsumerWeakHolder init]
  -[HAP2CoAPIOConsumerWeakHolder initWithConsumer:]


HAP2AsynchronousBlockOperation : HAP2AsynchronousOperation
  // instance methods
  -[HAP2AsynchronousBlockOperation initWithName:activity:]
  -[HAP2AsynchronousBlockOperation main]
  -[HAP2AsynchronousBlockOperation initWithName:optionalActivity:]
  -[HAP2AsynchronousBlockOperation .cxx_destruct]
  -[HAP2AsynchronousBlockOperation initWithName:]
  -[HAP2AsynchronousBlockOperation init]
  -[HAP2AsynchronousBlockOperation initWithBlock:]
  -[HAP2AsynchronousBlockOperation initWithName:activity:block:]
  -[HAP2AsynchronousBlockOperation initWithName:block:]


HAP2AccessoryServerCoordinatorThread : HAP2AccessoryServerCoordinator
  // class methods
  +[HAP2AccessoryServerCoordinatorThread new]


HAP2Accessory : HAP2LoggingObject <HAP2AccessoryPrivate, HAP2Accessory>
 @property  <HAP2PairedAccessoryServerPrivate> *accessoryServerPrivate
 @property  NSString *name
 @property  NSString *model
 @property  NSString *manufacturer
 @property  NSString *serialNumber
 @property  NSString *firmwareVersion
 @property  NSString *productData
 @property  NSArray *services
 @property  HAP2PropertyLock *propertyLock
 @property  NSNumber *internalSleepIntervalMs
 @property  <HAP2AccessoryDelegate> *delegate
 @property  <HAP2PairedAccessoryServer> *accessoryServer
 @property  BOOL primary
 @property  unsigned long connectionState
 @property  NSString *identifier
 @property  unsigned long instanceID
 @property  unsigned long category
 @property  double sleepInterval
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAP2Accessory validateAccessoryInformationService:]
  +[HAP2Accessory validateProtocolInformationService:]
  +[HAP2Accessory validateDiscoveredServices:isPrimary:]
  +[HAP2Accessory accessoryWithAccessoryServer:instanceID:discoveredServices:]

  // instance methods
  -[HAP2Accessory connectionState]
  -[HAP2Accessory propertyLock]
  -[HAP2Accessory instanceID]
  -[HAP2Accessory serialNumber]
  -[HAP2Accessory services]
  -[HAP2Accessory setSerialNumber:]
  -[HAP2Accessory setServices:]
  -[HAP2Accessory name]
  -[HAP2Accessory setFirmwareVersion:]
  -[HAP2Accessory firmwareVersion]
  -[HAP2Accessory .cxx_destruct]
  -[HAP2Accessory manufacturer]
  -[HAP2Accessory sleepInterval]
  -[HAP2Accessory setName:]
  -[HAP2Accessory setDelegate:]
  -[HAP2Accessory isPrimary]
  -[HAP2Accessory identifyWithCompletion:]
  -[HAP2Accessory identifier]
  -[HAP2Accessory setManufacturer:]
  -[HAP2Accessory model]
  -[HAP2Accessory delegate]
  -[HAP2Accessory setModel:]
  -[HAP2Accessory category]
  -[HAP2Accessory productData]
  -[HAP2Accessory setProductData:]
  -[HAP2Accessory accessoryServer]
  -[HAP2Accessory readValuesForCharacteristics:timeout:completion:]
  -[HAP2Accessory writeValuesForCharacteristics:timeout:completion:]
  -[HAP2Accessory enableNotificationsForCharacteristics:completion:]
  -[HAP2Accessory disableNotificationsForCharacteristics:completion:]
  -[HAP2Accessory initWithAccessoryServer:instanceID:discoveredServices:]
  -[HAP2Accessory _updateDiscoveredServices:]
  -[HAP2Accessory accessoryServerPrivate]
  -[HAP2Accessory internalSleepIntervalMs]
  -[HAP2Accessory setInternalSleepIntervalMs:]
  -[HAP2Accessory _handleUpdatedAccessoryInformationService:]
  -[HAP2Accessory _handleUpdatedAccessoryRuntimeInformationService:]
  -[HAP2Accessory updateConnectionState:]
  -[HAP2Accessory updateDiscoveredServices:]
  -[HAP2Accessory characteristicValueChanged:]
  -[HAP2Accessory internalSleepInterval]
  -[HAP2Accessory setInternalSleepInterval:]


HAP2TLVCharacteristicPropertiesWrapper : NSObject <NSCopying, HAPTLVProtocol>
 @property  unsigned long value
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAP2TLVCharacteristicPropertiesWrapper parsedFromData:error:]

  // instance methods
  -[HAP2TLVCharacteristicPropertiesWrapper init]
  -[HAP2TLVCharacteristicPropertiesWrapper isEqual:]
  -[HAP2TLVCharacteristicPropertiesWrapper initWithValue:]
  -[HAP2TLVCharacteristicPropertiesWrapper setValue:]
  -[HAP2TLVCharacteristicPropertiesWrapper value]
  -[HAP2TLVCharacteristicPropertiesWrapper parseFromData:error:]
  -[HAP2TLVCharacteristicPropertiesWrapper copyWithZone:]
  -[HAP2TLVCharacteristicPropertiesWrapper serializeWithError:]


HAP2TLVServicePropertiesWrapper : NSObject <NSCopying, HAPTLVProtocol>
 @property  unsigned long value
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAP2TLVServicePropertiesWrapper parsedFromData:error:]

  // instance methods
  -[HAP2TLVServicePropertiesWrapper init]
  -[HAP2TLVServicePropertiesWrapper isEqual:]
  -[HAP2TLVServicePropertiesWrapper initWithValue:]
  -[HAP2TLVServicePropertiesWrapper setValue:]
  -[HAP2TLVServicePropertiesWrapper value]
  -[HAP2TLVServicePropertiesWrapper parseFromData:error:]
  -[HAP2TLVServicePropertiesWrapper copyWithZone:]
  -[HAP2TLVServicePropertiesWrapper serializeWithError:]


HAP2AccessoryServerDiscoveryAccessoryInfo : HAP2LoggingObject
 @property  HAPDeviceID *deviceID
 @property  NSDictionary *rawDiscoveryInfo

  // class methods
  +[HAP2AccessoryServerDiscoveryAccessoryInfo new]

  // instance methods
  -[HAP2AccessoryServerDiscoveryAccessoryInfo .cxx_destruct]
  -[HAP2AccessoryServerDiscoveryAccessoryInfo deviceID]
  -[HAP2AccessoryServerDiscoveryAccessoryInfo init]
  -[HAP2AccessoryServerDiscoveryAccessoryInfo rawDiscoveryInfo]
  -[HAP2AccessoryServerDiscoveryAccessoryInfo initWithDeviceID:rawDiscoveryInfo:]


HAP2Lock : HAP2LoggingObject
 @property  <NSLocking> *internalLock
 @property  NSString *name

  // class methods
  +[HAP2Lock new]
  +[HAP2Lock lockWithName:]

  // instance methods
  -[HAP2Lock name]
  -[HAP2Lock performBlock:]
  -[HAP2Lock initWithLock:name:]
  -[HAP2Lock .cxx_destruct]
  -[HAP2Lock internalLock]
  -[HAP2Lock init]
  -[HAP2Lock assertOwner]
  -[HAP2Lock _performBlock:allowRecursive:]


HAPAccessoryServerBrowser : HMFObject <HAPAccessoryServerNotification>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSMutableSet *pairedAccessoryIdentifiers
 @property  <HAPKeyStore> *keyStore
 @property  HAPMetricsDispatcher *logEvent
 @property  BOOL remoteBrowsingEnabled
 @property  long long linkType
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HAPAccessoryServerBrowser setDelegate:queue:]
  -[HAPAccessoryServerBrowser setWorkQueue:]
  -[HAPAccessoryServerBrowser indicateNotificationFromServer:notifyType:withDictionary:]
  -[HAPAccessoryServerBrowser resetPairedAccessories]
  -[HAPAccessoryServerBrowser stopDiscoveringAccessoryServers]
  -[HAPAccessoryServerBrowser isPaired:]
  -[HAPAccessoryServerBrowser .cxx_destruct]
  -[HAPAccessoryServerBrowser registerPairedAccessoryWithIdentifier:]
  -[HAPAccessoryServerBrowser startDiscoveringAccessoryServers]
  -[HAPAccessoryServerBrowser linkType]
  -[HAPAccessoryServerBrowser logEvent]
  -[HAPAccessoryServerBrowser initWithQueue:]
  -[HAPAccessoryServerBrowser matchAccessoryServerWithSetupID:serverIdentifier:completionHandler:]
  -[HAPAccessoryServerBrowser remoteBrowsingEnabledUpdated]
  -[HAPAccessoryServerBrowser workQueue]
  -[HAPAccessoryServerBrowser startConfirmingPairedAccessoryReachability]
  -[HAPAccessoryServerBrowser setKeyStore:]
  -[HAPAccessoryServerBrowser discoverAccessoryServerWithIdentifier:]
  -[HAPAccessoryServerBrowser stopConfirmingPairedAccessoryReachability]
  -[HAPAccessoryServerBrowser keyStore]
  -[HAPAccessoryServerBrowser deRegisterAccessoryWithIdentifier:]
  -[HAPAccessoryServerBrowser setRemoteBrowsingEnabled:]
  -[HAPAccessoryServerBrowser remoteBrowsingEnabled]
  -[HAPAccessoryServerBrowser pairedAccessoryIdentifiers]
  -[HAPAccessoryServerBrowser setPairedAccessoryIdentifiers:]


HAP2AccessoryServerSecureTransportPairSetup : HAP2AccessoryServerSecureTransportBase <HAP2AccessoryServerTransportDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAP2AccessoryServerSecureTransportPairSetup defaultEncryptedSession]

  // instance methods
  -[HAP2AccessoryServerSecureTransportPairSetup transport:didReceiveEvent:]
  -[HAP2AccessoryServerSecureTransportPairSetup initWithTransport:operationQueue:encryptedSession:]


HAP2AccessoryServerSecureTransportPairSetupPassThroughEncryptedSession : NSObject <HAPEncryptedSession>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HAP2AccessoryServerSecureTransportPairSetupPassThroughEncryptedSession encryptData:additionalAuthenticatedData:error:]
  -[HAP2AccessoryServerSecureTransportPairSetupPassThroughEncryptedSession decryptData:additionalAuthenticatedData:error:]


HAP2EncodedResponseThread : HAP2LoggingObject <HAP2EncodedResponse>
 @property  HAPBTLEResponse *btleResponse
 @property  BOOL encrypted
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HAP2EncodedResponseThread .cxx_destruct]
  -[HAP2EncodedResponseThread isEncrypted]
  -[HAP2EncodedResponseThread initWithBTLEResponse:]
  -[HAP2EncodedResponseThread btleResponse]


HAPDiagnosticsSnapshotAudioWrapper : NSObject <NSCopying, HAPTLVProtocol>
 @property  unsigned long value
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPDiagnosticsSnapshotAudioWrapper parsedFromData:error:]

  // instance methods
  -[HAPDiagnosticsSnapshotAudioWrapper init]
  -[HAPDiagnosticsSnapshotAudioWrapper isEqual:]
  -[HAPDiagnosticsSnapshotAudioWrapper initWithValue:]
  -[HAPDiagnosticsSnapshotAudioWrapper setValue:]
  -[HAPDiagnosticsSnapshotAudioWrapper value]
  -[HAPDiagnosticsSnapshotAudioWrapper parseFromData:error:]
  -[HAPDiagnosticsSnapshotAudioWrapper copyWithZone:]
  -[HAPDiagnosticsSnapshotAudioWrapper serializeWithError:]


HAPDiagnosticsSnapshotOptionsWrapper : NSObject <NSCopying, HAPTLVProtocol>
 @property  unsigned long value
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPDiagnosticsSnapshotOptionsWrapper parsedFromData:error:]

  // instance methods
  -[HAPDiagnosticsSnapshotOptionsWrapper init]
  -[HAPDiagnosticsSnapshotOptionsWrapper isEqual:]
  -[HAPDiagnosticsSnapshotOptionsWrapper initWithValue:]
  -[HAPDiagnosticsSnapshotOptionsWrapper setValue:]
  -[HAPDiagnosticsSnapshotOptionsWrapper value]
  -[HAPDiagnosticsSnapshotOptionsWrapper parseFromData:error:]
  -[HAPDiagnosticsSnapshotOptionsWrapper copyWithZone:]
  -[HAPDiagnosticsSnapshotOptionsWrapper serializeWithError:]


HAPDiagnosticsSnapshotTypeWrapper : NSObject <NSCopying, HAPTLVProtocol>
 @property  unsigned long value
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPDiagnosticsSnapshotTypeWrapper parsedFromData:error:]

  // instance methods
  -[HAPDiagnosticsSnapshotTypeWrapper init]
  -[HAPDiagnosticsSnapshotTypeWrapper isEqual:]
  -[HAPDiagnosticsSnapshotTypeWrapper initWithValue:]
  -[HAPDiagnosticsSnapshotTypeWrapper setValue:]
  -[HAPDiagnosticsSnapshotTypeWrapper value]
  -[HAPDiagnosticsSnapshotTypeWrapper parseFromData:error:]
  -[HAPDiagnosticsSnapshotTypeWrapper copyWithZone:]
  -[HAPDiagnosticsSnapshotTypeWrapper serializeWithError:]


HAP2AccessoryServerDefaultAccessoryFactory : NSObject <HAP2AccessoryServerAccessoryFactory>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HAP2AccessoryServerDefaultAccessoryFactory accessoryWithAccessoryServer:instanceID:discoveredServices:]


HAP2AccessoryServerController : HAP2LoggingObject <HAP2AccessoryServerSecureTransportDelegate, HAP2AccessoryServerControllerPrivate, HAP2AccessoryServerController>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <HAP2AccessoryServerPrivate> *accessoryServer
 @property  <HAP2AccessoryServerEncoding> *encoding
 @property  <HAP2AccessoryServerSecureTransport> *transport

  // class methods
  +[HAP2AccessoryServerController new]
  +[HAP2AccessoryServerController controllerIdentifier]

  // instance methods
  -[HAP2AccessoryServerController transport]
  -[HAP2AccessoryServerController .cxx_destruct]
  -[HAP2AccessoryServerController encoding]
  -[HAP2AccessoryServerController init]
  -[HAP2AccessoryServerController dealloc]
  -[HAP2AccessoryServerController closeSession]
  -[HAP2AccessoryServerController initWithEncoding:secureTransport:operationQueue:]
  -[HAP2AccessoryServerController accessoryServer]
  -[HAP2AccessoryServerController readAttributeDatabaseWithCompletion:]
  -[HAP2AccessoryServerController readValuesForCharacteristics:timeout:options:completion:]
  -[HAP2AccessoryServerController writeValuesForCharacteristics:timeout:options:completion:]
  -[HAP2AccessoryServerController enableNotificationsForCharacteristics:options:completion:]
  -[HAP2AccessoryServerController disableNotificationsForCharacteristics:options:completion:]
  -[HAP2AccessoryServerController removePairing:cleanupLocalData:completion:]
  -[HAP2AccessoryServerController addPairing:completion:]
  -[HAP2AccessoryServerController listPairingsWithCompletion:]
  -[HAP2AccessoryServerController unpairedIdentifyWithCompletion:]
  -[HAP2AccessoryServerController handleUpdatedMetadataWithOldMetadata:]
  -[HAP2AccessoryServerController updateMaxRequestTimeout:]
  -[HAP2AccessoryServerController mergeWithNewController:]
  -[HAP2AccessoryServerController setAccessoryServer:]
  -[HAP2AccessoryServerController secureTransport:needsLocalPairingIdentityWithCompletion:]
  -[HAP2AccessoryServerController secureTransport:needsRemotePairingIdentityForDeviceID:completion:]
  -[HAP2AccessoryServerController secureTransport:didChangeState:error:]
  -[HAP2AccessoryServerController secureTransport:didReceiveEvent:]
  -[HAP2AccessoryServerController initWithEncoding:secureTransport:operationQueue:accessoryFactory:]


HAP2AccessoryServerPairingDriver : HAP2LoggingObject <HAP2Cancelable, HAP2AccessoryServerPairingDriverWorkItemInfo, HAP2AccessoryServerPairingDriver>
 @property  unsigned long authMethod
 @property  HAP2SerializedOperationQueue *operationQueue
 @property  <HAP2UnpairedAccessoryServer> *accessoryServer
 @property  <HAP2AccessoryServerPairingDriverDelegate> *delegate
 @property  unsigned long currentWorkItemIndex
 @property  NSArray *workItems
 @property  NSError *cancelError
 @property  HMFActivity *pairingActivity
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  HAP2PropertyLock *propertyLock
 @property  HAPPairSetupSession *pairingSession
 @property  <HAP2AccessoryServerTransport> *transport
 @property  <HAP2AccessoryServerSecureTransportFactory> *secureTransportFactory
 @property  <HAP2AccessoryServerEncoding> *encoding
 @property  unsigned long featureFlags

  // class methods
  +[HAP2AccessoryServerPairingDriver _generateWorkItemsForAuthMethod:]

  // instance methods
  -[HAP2AccessoryServerPairingDriver setOperationQueue:]
  -[HAP2AccessoryServerPairingDriver propertyLock]
  -[HAP2AccessoryServerPairingDriver transport]
  -[HAP2AccessoryServerPairingDriver operationQueue]
  -[HAP2AccessoryServerPairingDriver .cxx_destruct]
  -[HAP2AccessoryServerPairingDriver _cancelWithError:]
  -[HAP2AccessoryServerPairingDriver encoding]
  -[HAP2AccessoryServerPairingDriver featureFlags]
  -[HAP2AccessoryServerPairingDriver setDelegate:]
  -[HAP2AccessoryServerPairingDriver setPairingSession:]
  -[HAP2AccessoryServerPairingDriver pairingSession]
  -[HAP2AccessoryServerPairingDriver delegate]
  -[HAP2AccessoryServerPairingDriver cancelWithError:]
  -[HAP2AccessoryServerPairingDriver cancelError]
  -[HAP2AccessoryServerPairingDriver setCancelError:]
  -[HAP2AccessoryServerPairingDriver authMethod]
  -[HAP2AccessoryServerPairingDriver pairingActivity]
  -[HAP2AccessoryServerPairingDriver setPairingActivity:]
  -[HAP2AccessoryServerPairingDriver secureTransportFactory]
  -[HAP2AccessoryServerPairingDriver accessoryServer]
  -[HAP2AccessoryServerPairingDriver initWithTransport:secureTransportFactory:encoding:featureFlags:]
  -[HAP2AccessoryServerPairingDriver setAccessoryServer:]
  -[HAP2AccessoryServerPairingDriver workItem:finishedWithError:]
  -[HAP2AccessoryServerPairingDriver initWithTransport:secureTransportFactory:encoding:featureFlags:workItems:]
  -[HAP2AccessoryServerPairingDriver setCurrentWorkItemIndex:]
  -[HAP2AccessoryServerPairingDriver currentWorkItem]
  -[HAP2AccessoryServerPairingDriver currentWorkItemIndex]
  -[HAP2AccessoryServerPairingDriver workItems]
  -[HAP2AccessoryServerPairingDriver _pairingFinishedWithError:]
  -[HAP2AccessoryServerPairingDriver moveToNextWorkItem]
  -[HAP2AccessoryServerPairingDriver pairAccessory:delegate:]


HAP2AccessoryServerTransportFactoryThread : NSObject <HAP2AccessoryServerTransportFactory>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HAP2AccessoryServerTransportFactoryThread createTransportWithAccessoryInfo:discovery:]


HAP2EncodedCharacteristicResponse : HAP2LoggingObject <HAP2EncodedCharacteristicResponse>
 @property  NSArray *characteristics
 @property  BOOL encrypted
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HAP2EncodedCharacteristicResponse characteristics]
  -[HAP2EncodedCharacteristicResponse .cxx_destruct]
  -[HAP2EncodedCharacteristicResponse isEncrypted]
  -[HAP2EncodedCharacteristicResponse initWithCharacteristics:]


HAPAccessCodeConfiguration : NSObject <NSCopying, HAPTLVProtocol>
 @property  HAPAccessCodeCharacterSetWrapper *characterSet
 @property  HAPTLVUnsignedNumberValue *minimumValueLength
 @property  HAPTLVUnsignedNumberValue *maximumValueLength
 @property  HAPTLVUnsignedNumberValue *maximumAccessCodes
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPAccessCodeConfiguration parsedFromData:error:]

  // instance methods
  -[HAPAccessCodeConfiguration setMaximumValueLength:]
  -[HAPAccessCodeConfiguration .cxx_destruct]
  -[HAPAccessCodeConfiguration characterSet]
  -[HAPAccessCodeConfiguration init]
  -[HAPAccessCodeConfiguration isEqual:]
  -[HAPAccessCodeConfiguration parseFromData:error:]
  -[HAPAccessCodeConfiguration setCharacterSet:]
  -[HAPAccessCodeConfiguration copyWithZone:]
  -[HAPAccessCodeConfiguration serializeWithError:]
  -[HAPAccessCodeConfiguration minimumValueLength]
  -[HAPAccessCodeConfiguration maximumValueLength]
  -[HAPAccessCodeConfiguration maximumAccessCodes]
  -[HAPAccessCodeConfiguration initWithCharacterSet:minimumValueLength:maximumValueLength:maximumAccessCodes:]
  -[HAPAccessCodeConfiguration setMinimumValueLength:]
  -[HAPAccessCodeConfiguration setMaximumAccessCodes:]


HAPAccessCodeControl : NSObject <NSCopying, HAPTLVProtocol>
 @property  HAPAccessCodeOperationTypeWrapper *operationType
 @property  NSMutableArray *accessCodeControlRequest
 @property  NSMutableArray *accessCodeControlResponse
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPAccessCodeControl parsedFromData:error:]

  // instance methods
  -[HAPAccessCodeControl setOperationType:]
  -[HAPAccessCodeControl operationType]
  -[HAPAccessCodeControl .cxx_destruct]
  -[HAPAccessCodeControl init]
  -[HAPAccessCodeControl isEqual:]
  -[HAPAccessCodeControl parseFromData:error:]
  -[HAPAccessCodeControl copyWithZone:]
  -[HAPAccessCodeControl initWithOperationType:accessCodeControlRequest:accessCodeControlResponse:]
  -[HAPAccessCodeControl serializeWithError:]
  -[HAPAccessCodeControl accessCodeControlResponse]
  -[HAPAccessCodeControl accessCodeControlRequest]
  -[HAPAccessCodeControl setAccessCodeControlRequest:]
  -[HAPAccessCodeControl setAccessCodeControlResponse:]


HAPAccessCodeControlRequest : NSObject <NSCopying, HAPTLVProtocol>
 @property  HAPTLVUnsignedNumberValue *identifier
 @property  NSString *accessCode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPAccessCodeControlRequest parsedFromData:error:]

  // instance methods
  -[HAPAccessCodeControlRequest .cxx_destruct]
  -[HAPAccessCodeControlRequest init]
  -[HAPAccessCodeControlRequest isEqual:]
  -[HAPAccessCodeControlRequest identifier]
  -[HAPAccessCodeControlRequest parseFromData:error:]
  -[HAPAccessCodeControlRequest setIdentifier:]
  -[HAPAccessCodeControlRequest copyWithZone:]
  -[HAPAccessCodeControlRequest accessCode]
  -[HAPAccessCodeControlRequest serializeWithError:]
  -[HAPAccessCodeControlRequest initWithIdentifier:accessCode:]
  -[HAPAccessCodeControlRequest setAccessCode:]


HAPAccessCodeControlResponse : NSObject <NSCopying, HAPTLVProtocol>
 @property  HAPTLVUnsignedNumberValue *identifier
 @property  NSString *accessCode
 @property  HAPAccessCodeFlagsWrapper *flags
 @property  HAPAccessCodeResponseStatusWrapper *statusCode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPAccessCodeControlResponse parsedFromData:error:]

  // instance methods
  -[HAPAccessCodeControlResponse setFlags:]
  -[HAPAccessCodeControlResponse .cxx_destruct]
  -[HAPAccessCodeControlResponse init]
  -[HAPAccessCodeControlResponse isEqual:]
  -[HAPAccessCodeControlResponse identifier]
  -[HAPAccessCodeControlResponse setStatusCode:]
  -[HAPAccessCodeControlResponse flags]
  -[HAPAccessCodeControlResponse parseFromData:error:]
  -[HAPAccessCodeControlResponse setIdentifier:]
  -[HAPAccessCodeControlResponse statusCode]
  -[HAPAccessCodeControlResponse copyWithZone:]
  -[HAPAccessCodeControlResponse accessCode]
  -[HAPAccessCodeControlResponse serializeWithError:]
  -[HAPAccessCodeControlResponse setAccessCode:]
  -[HAPAccessCodeControlResponse initWithIdentifier:accessCode:flags:statusCode:]


HAPAccessory : HMFObject <HMFMerging>
 @property  HAPAccessoryServer *server
 @property  BOOL primary
 @property  BOOL reachable
 @property  unsigned long suspendedState
 @property  NSNumber *instanceID
 @property  NSString *identifier
 @property  NSString *uniqueIdentifier
 @property  NSArray *services
 @property  NSString *serverIdentifier
 @property  NSString *name
 @property  NSString *model
 @property  NSString *manufacturer
 @property  NSString *serialNumber
 @property  NSString *firmwareVersion
 @property  NSString *productData
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSNumber *sleepInterval
 @property  <HAPAccessoryDelegate> *delegate
 @property  BOOL paired
 @property  NSNumber *category
 @property  long long linkType
 @property  long long communicationProtocol
 @property  HMFMACAddress *bluetoothClassicMacAddress
 @property  int consecutiveFailedPingCount
 @property  NSDate *timeBecameReachable
 @property  BOOL shouldDisconnectOnIdle
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPAccessory instanceIDForUniqueIdentifier:]
  +[HAPAccessory serverIdentifierWithUniqueIdentifier:]
  +[HAPAccessory productDataStringFromData:]
  +[HAPAccessory isAccessoryPairedWithIdentifier:]
  +[HAPAccessory isAccessoryPrimaryWithUniqueIdentifier:]

  // instance methods
  -[HAPAccessory isPaired]
  -[HAPAccessory setServer:]
  -[HAPAccessory setPrimary:]
  -[HAPAccessory instanceID]
  -[HAPAccessory serialNumber]
  -[HAPAccessory setUniqueIdentifier:]
  -[HAPAccessory setWorkQueue:]
  -[HAPAccessory serverIdentifier]
  -[HAPAccessory services]
  -[HAPAccessory setSerialNumber:]
  -[HAPAccessory setServices:]
  -[HAPAccessory name]
  -[HAPAccessory uniqueIdentifier]
  -[HAPAccessory setServerIdentifier:]
  -[HAPAccessory setFirmwareVersion:]
  -[HAPAccessory firmwareVersion]
  -[HAPAccessory .cxx_destruct]
  -[HAPAccessory writeCharacteristicValues:timeout:completionQueue:completionHandler:]
  -[HAPAccessory manufacturer]
  -[HAPAccessory sleepInterval]
  -[HAPAccessory setSleepInterval:]
  -[HAPAccessory setName:]
  -[HAPAccessory setDelegate:]
  -[HAPAccessory isPrimary]
  -[HAPAccessory linkType]
  -[HAPAccessory init]
  -[HAPAccessory isEqual:]
  -[HAPAccessory isReachable]
  -[HAPAccessory identifier]
  -[HAPAccessory setManufacturer:]
  -[HAPAccessory model]
  -[HAPAccessory server]
  -[HAPAccessory workQueue]
  -[HAPAccessory delegate]
  -[HAPAccessory setReachable:]
  -[HAPAccessory setIdentifier:]
  -[HAPAccessory setModel:]
  -[HAPAccessory shortDescription]
  -[HAPAccessory invalidate]
  -[HAPAccessory category]
  -[HAPAccessory readCharacteristicValues:timeout:completionQueue:completionHandler:]
  -[HAPAccessory setInstanceID:]
  -[HAPAccessory suspendedState]
  -[HAPAccessory mergeObject:]
  -[HAPAccessory setSuspendedState:]
  -[HAPAccessory shouldMergeObject:]
  -[HAPAccessory communicationProtocol]
  -[HAPAccessory productData]
  -[HAPAccessory setProductData:]
  -[HAPAccessory servicesOfType:]
  -[HAPAccessory shouldDisconnectOnIdle]
  -[HAPAccessory setShouldDisconnectOnIdle:]
  -[HAPAccessory setTimeBecameReachable:]
  -[HAPAccessory timeBecameReachable]
  -[HAPAccessory readValueForCharacteristic:timeout:completionQueue:completionHandler:]
  -[HAPAccessory setBluetoothClassicMacAddress:]
  -[HAPAccessory bluetoothClassicMacAddress]
  -[HAPAccessory writeCharacteristicValue:timeout:completionQueue:completionHandler:]
  -[HAPAccessory characteristicOfType:serviceType:]
  -[HAPAccessory characteristicsOfType:]
  -[HAPAccessory initWithServer:instanceID:]
  -[HAPAccessory initWithServer:instanceID:parsedServices:]
  -[HAPAccessory consecutiveFailedPingCount]
  -[HAPAccessory setConsecutiveFailedPingCount:]
  -[HAPAccessory updateForAccessoryInformationService]
  -[HAPAccessory _validateCharacteristicValues]
  -[HAPAccessory _updateAndValidateServices]
  -[HAPAccessory _updateService:]


HAPPairingIdentity : HMFPairingIdentity
 @property  NSString *controllerKeyIdentifier
 @property  unsigned long permissions

  // class methods
  +[HAPPairingIdentity supportsSecureCoding]

  // instance methods
  -[HAPPairingIdentity initWithCoder:]
  -[HAPPairingIdentity .cxx_destruct]
  -[HAPPairingIdentity initWithIdentifier:publicKey:privateKey:]
  -[HAPPairingIdentity attributeDescriptions]
  -[HAPPairingIdentity permissions]
  -[HAPPairingIdentity copyWithZone:]
  -[HAPPairingIdentity encodeWithCoder:]
  -[HAPPairingIdentity initWithIdentifier:publicKey:privateKey:permissions:]
  -[HAPPairingIdentity controllerKeyIdentifier]
  -[HAPPairingIdentity initWithIdentifier:controllerKeyIdentifier:publicKey:privateKey:permissions:]
  -[HAPPairingIdentity initWithKeychainItem:]
  -[HAPPairingIdentity isStrictlyEqual:]


HAP2AccessoryServerDiscoveryHAPAccessoryInfo : HAP2AccessoryServerDiscoveryAccessoryInfo
 @property  NSString *name
 @property  NSString *model
 @property  unsigned char status
 @property  unsigned long category
 @property  unsigned long configurationNumber
 @property  unsigned long stateNumber
 @property  HMFVersion *protocolVersion
 @property  unsigned long featureFlags
 @property  NSData *setupHash

  // instance methods
  -[HAP2AccessoryServerDiscoveryHAPAccessoryInfo name]
  -[HAP2AccessoryServerDiscoveryHAPAccessoryInfo protocolVersion]
  -[HAP2AccessoryServerDiscoveryHAPAccessoryInfo .cxx_destruct]
  -[HAP2AccessoryServerDiscoveryHAPAccessoryInfo featureFlags]
  -[HAP2AccessoryServerDiscoveryHAPAccessoryInfo model]
  -[HAP2AccessoryServerDiscoveryHAPAccessoryInfo status]
  -[HAP2AccessoryServerDiscoveryHAPAccessoryInfo category]
  -[HAP2AccessoryServerDiscoveryHAPAccessoryInfo setupHash]
  -[HAP2AccessoryServerDiscoveryHAPAccessoryInfo stateNumber]
  -[HAP2AccessoryServerDiscoveryHAPAccessoryInfo configurationNumber]
  -[HAP2AccessoryServerDiscoveryHAPAccessoryInfo initWithDeviceID:rawDiscoveryInfo:]
  -[HAP2AccessoryServerDiscoveryHAPAccessoryInfo initWithDeviceID:rawDiscoveryInfo:name:model:status:category:configurationNumber:stateNumber:protocolVersion:featureFlags:setupHash:]


HAP2CoAPIOThreadSessionQueueEntry : NSObject
 @property  ^{coap_session_t=CCCIII{coap_address_t=I(?={sockaddr=CC[14c]}{sockaddr_in=CCS{in_addr=I}[8c]}{sockaddr_in6=CCSI{in6_addr=(?=[16C][8S][4I])}I})}{UT_hash_handle=^{UT_hash_table}^v^v^{UT_hash_handle}^{UT_hash_handle}^vII}{coap_addr_tuple_t={coap_address_t=I(?={sockaddr=CC[14c]}{sockaddr_in=CCS{in_addr=I}[8c]}{sockaddr_in6=CCSI{in6_addr=(?=[16C][8S][4I])}I})}{coap_address_t=I(?={sockaddr=CC[14c]}{sockaddr_in=CCS{in_addr=I}[8c]}{sockaddr_in6=CCSI{in6_addr=(?=[16C][8S][4I])}I})}}i{coap_socket_t=iS^{coap_session_t}^{coap_endpoint_t}}^{coap_endpoint_t}^{coap_context_t}^vSCi^{coap_queue_t}Q[8C]Q^{coap_pdu_t}QQQQQ*Q*Q^vI{coap_fixed_point_t=SS}{coap_fixed_point_t=SS}Ii} session
 @property  NSDate *startTime

  // instance methods
  -[HAP2CoAPIOThreadSessionQueueEntry .cxx_destruct]
  -[HAP2CoAPIOThreadSessionQueueEntry startTime]
  -[HAP2CoAPIOThreadSessionQueueEntry session]
  -[HAP2CoAPIOThreadSessionQueueEntry initWithSession:startTime:]
  -[HAP2CoAPIOThreadSessionQueueEntry reapSession:]


HAP2CoAPIOThread : NSThread
  // class methods
  +[HAP2CoAPIOThread initialize]

  // instance methods
  -[HAP2CoAPIOThread unregisterConsumer:]
  -[HAP2CoAPIOThread main]
  -[HAP2CoAPIOThread .cxx_destruct]
  -[HAP2CoAPIOThread init]
  -[HAP2CoAPIOThread cancel]
  -[HAP2CoAPIOThread _enqueue:]
  -[HAP2CoAPIOThread dealloc]
  -[HAP2CoAPIOThread registerConsumer:]
  -[HAP2CoAPIOThread queueSessionBlockForConsumer:sessionBlock:withTimeout:requiresCompletion:]
  -[HAP2CoAPIOThread queueSessionCompletionForConsumer:]
  -[HAP2CoAPIOThread initWithQualityOfService:delegate:]
  -[HAP2CoAPIOThread _assertIsCurrentThread]
  -[HAP2CoAPIOThread _wakeUpThread]
  -[HAP2CoAPIOThread _createContext]
  -[HAP2CoAPIOThread _processQueueWithContext:]
  -[HAP2CoAPIOThread _cleanupWithContext:]
  -[HAP2CoAPIOThread _processQueueEntry:context:]
  -[HAP2CoAPIOThread _registerConsumer:context:]
  -[HAP2CoAPIOThread _unregisterConsumer:]
  -[HAP2CoAPIOThread _processSessionBlock:consumer:context:]


HAP2CoAPIOConsumerInfo : HAP2CoAPIOConsumerWeakHolder
 @property  ^{coap_session_t=CCCIII{coap_address_t=I(?={sockaddr=CC[14c]}{sockaddr_in=CCS{in_addr=I}[8c]}{sockaddr_in6=CCSI{in6_addr=(?=[16C][8S][4I])}I})}{UT_hash_handle=^{UT_hash_table}^v^v^{UT_hash_handle}^{UT_hash_handle}^vII}{coap_addr_tuple_t={coap_address_t=I(?={sockaddr=CC[14c]}{sockaddr_in=CCS{in_addr=I}[8c]}{sockaddr_in6=CCSI{in6_addr=(?=[16C][8S][4I])}I})}{coap_address_t=I(?={sockaddr=CC[14c]}{sockaddr_in=CCS{in_addr=I}[8c]}{sockaddr_in6=CCSI{in6_addr=(?=[16C][8S][4I])}I})}}i{coap_socket_t=iS^{coap_session_t}^{coap_endpoint_t}}^{coap_endpoint_t}^{coap_context_t}^vSCi^{coap_queue_t}Q[8C]Q^{coap_pdu_t}QQQQQ*Q*Q^vI{coap_fixed_point_t=SS}{coap_fixed_point_t=SS}Ii} session

  // instance methods
  -[HAP2CoAPIOConsumerInfo setSession:]
  -[HAP2CoAPIOConsumerInfo initWithConsumer:]
  -[HAP2CoAPIOConsumerInfo session]


HAP2CoAPIOThreadQueueEntry : NSObject
  // instance methods
  -[HAP2CoAPIOThreadQueueEntry .cxx_destruct]
  -[HAP2CoAPIOThreadQueueEntry compare:]


HAPBLEPeripheral : HMFObject
 @property  NSMutableArray *uuids
 @property  NSString *name
 @property  NSString *identifier
 @property  NSUUID *uniqueBTIdentifier
 @property  NSNumber *hkType
 @property  NSNumber *advInterval
 @property  NSString *advDeviceAddress
 @property  NSNumber *statusFlags
 @property  NSNumber *category
 @property  NSNumber *stateNumber
 @property  NSNumber *configNumber
 @property  NSData *setupHash
 @property  NSData *encryptedPayload
 @property  NSNumber *averageRSSI
 @property  double lastSeen
 @property  BOOL isCached
 @property  unsigned long advertisementFormat
 @property  CBPeripheral *cbPeripheral
 @property  NSString *whbStableIdentifier
 @property  NSArray *peripheralUUIDs

  // class methods
  +[HAPBLEPeripheral uuidForBTLEPeripheral:]

  // instance methods
  -[HAPBLEPeripheral statusFlags]
  -[HAPBLEPeripheral name]
  -[HAPBLEPeripheral setLastSeen:]
  -[HAPBLEPeripheral encryptedPayload]
  -[HAPBLEPeripheral setIsCached:]
  -[HAPBLEPeripheral setUuids:]
  -[HAPBLEPeripheral .cxx_destruct]
  -[HAPBLEPeripheral setName:]
  -[HAPBLEPeripheral setStatusFlags:]
  -[HAPBLEPeripheral setEncryptedPayload:]
  -[HAPBLEPeripheral isCached]
  -[HAPBLEPeripheral isEqual:]
  -[HAPBLEPeripheral lastSeen]
  -[HAPBLEPeripheral identifier]
  -[HAPBLEPeripheral setIdentifier:]
  -[HAPBLEPeripheral shortDescription]
  -[HAPBLEPeripheral category]
  -[HAPBLEPeripheral isBroadcasting]
  -[HAPBLEPeripheral setCategory:]
  -[HAPBLEPeripheral hkType]
  -[HAPBLEPeripheral uuids]
  -[HAPBLEPeripheral cbPeripheral]
  -[HAPBLEPeripheral setupHash]
  -[HAPBLEPeripheral setSetupHash:]
  -[HAPBLEPeripheral stateNumber]
  -[HAPBLEPeripheral setStateNumber:]
  -[HAPBLEPeripheral configNumber]
  -[HAPBLEPeripheral setConfigNumber:]
  -[HAPBLEPeripheral updateStateNumber:]
  -[HAPBLEPeripheral updateWithPeripheral:]
  -[HAPBLEPeripheral mergeWithPeripheral:]
  -[HAPBLEPeripheral advertisementFormat]
  -[HAPBLEPeripheral initWithName:peripheralUUID:identifier:hapVersion:hkType:advInterval:statusFlags:category:stateNumber:configNumber:setupHash:encryptedPayload:whbStableIdentifier:advDeviceAddress:]
  -[HAPBLEPeripheral setCbPeripheral:]
  -[HAPBLEPeripheral connectedToCBPeripheral:error:]
  -[HAPBLEPeripheral disconnectedFromCBPeripheral:error:]
  -[HAPBLEPeripheral peripheralUUIDs]
  -[HAPBLEPeripheral whbStableIdentifier]
  -[HAPBLEPeripheral uniqueBTIdentifier]
  -[HAPBLEPeripheral advDeviceAddress]
  -[HAPBLEPeripheral setAverageRSSI:]
  -[HAPBLEPeripheral averageRSSI]
  -[HAPBLEPeripheral _updateAverageRSSIWithRSSI:]
  -[HAPBLEPeripheral setWhbStableIdentifier:]
  -[HAPBLEPeripheral setHkType:]
  -[HAPBLEPeripheral advInterval]
  -[HAPBLEPeripheral setAdvInterval:]
  -[HAPBLEPeripheral setAdvertisementFormat:]
  -[HAPBLEPeripheral _resetAverageRSSI]
  -[HAPBLEPeripheral setAdvDeviceAddress:]


HAPAccessoryServerBrowserWiProxBTLE : HMFObject <WPHomeKitDelegate, HMFLogging>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  <HAPAccessoryServerBrowserWiProxBTLEDelegate> *delegate
 @property  WPHomeKit *wpHomeKit
 @property  long long currentScanState
 @property  BOOL scanInBackground
 @property  NSMapTable *reachabilityScanTuples
 @property  unsigned char wholeHomeBluetooth
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPAccessoryServerBrowserWiProxBTLE logCategory]

  // instance methods
  -[HAPAccessoryServerBrowserWiProxBTLE initWithDelegate:queue:]
  -[HAPAccessoryServerBrowserWiProxBTLE .cxx_destruct]
  -[HAPAccessoryServerBrowserWiProxBTLE workQueue]
  -[HAPAccessoryServerBrowserWiProxBTLE delegate]
  -[HAPAccessoryServerBrowserWiProxBTLE pauseScans]
  -[HAPAccessoryServerBrowserWiProxBTLE updateStateForIdentifier:stateNumber:]
  -[HAPAccessoryServerBrowserWiProxBTLE homeKitDidUpdateState:]
  -[HAPAccessoryServerBrowserWiProxBTLE homeKit:foundDevice:withData:RSSI:type:]
  -[HAPAccessoryServerBrowserWiProxBTLE resetLastSeenForTrackedAccessories:]
  -[HAPAccessoryServerBrowserWiProxBTLE startBrowsingForHAPBLEAccessories]
  -[HAPAccessoryServerBrowserWiProxBTLE stopBrowsingForHAPBLEAccessories:]
  -[HAPAccessoryServerBrowserWiProxBTLE setWholeHomeBluetooth:]
  -[HAPAccessoryServerBrowserWiProxBTLE startTrackingHAPBLEAccessoriesWithIdentifiers:]
  -[HAPAccessoryServerBrowserWiProxBTLE retrieveStateForTrackedAccessoryWithIdentifier:stateNumber:isReachable:linkQuality:lastSeen:]
  -[HAPAccessoryServerBrowserWiProxBTLE stopTrackingHAPBLEAccessoriesWithIdentifiers:]
  -[HAPAccessoryServerBrowserWiProxBTLE probeReachabilityForTrackedAccessoriesWithScanTuples:]
  -[HAPAccessoryServerBrowserWiProxBTLE trackedPeripheralForIdentifier:]
  -[HAPAccessoryServerBrowserWiProxBTLE wholeHomeBluetooth]
  -[HAPAccessoryServerBrowserWiProxBTLE _stopScanning]
  -[HAPAccessoryServerBrowserWiProxBTLE wpHomeKit]
  -[HAPAccessoryServerBrowserWiProxBTLE setCurrentScanState:]
  -[HAPAccessoryServerBrowserWiProxBTLE _startBrowsingForHAPBLEAccessories]
  -[HAPAccessoryServerBrowserWiProxBTLE _startScanningWithData:]
  -[HAPAccessoryServerBrowserWiProxBTLE _stopBrowsingForHAPBLEAccessories:]
  -[HAPAccessoryServerBrowserWiProxBTLE trackedIdentifiers]
  -[HAPAccessoryServerBrowserWiProxBTLE scanInBackground]
  -[HAPAccessoryServerBrowserWiProxBTLE _startTrackingHAPBLEAccessoriesWithIdentifiers:restartScan:]
  -[HAPAccessoryServerBrowserWiProxBTLE currentScanState]
  -[HAPAccessoryServerBrowserWiProxBTLE _stopTrackingHAPBLEAccessoriesWithIdentifiers:]
  -[HAPAccessoryServerBrowserWiProxBTLE _removeTrackedPeripheral:]
  -[HAPAccessoryServerBrowserWiProxBTLE _getTrackedPeripheralWithIdentifier:]
  -[HAPAccessoryServerBrowserWiProxBTLE _getLinkQuality:]
  -[HAPAccessoryServerBrowserWiProxBTLE _probeReachabilityForTrackedAccessories]
  -[HAPAccessoryServerBrowserWiProxBTLE trackedPeripherals]
  -[HAPAccessoryServerBrowserWiProxBTLE _reportHAPPeripheral:]
  -[HAPAccessoryServerBrowserWiProxBTLE homeKit:foundDevice:withData:RSSI:]
  -[HAPAccessoryServerBrowserWiProxBTLE _parseAdvertisementData:forPeripheral:RSSI:]
  -[HAPAccessoryServerBrowserWiProxBTLE reachabilityScanTuples]
  -[HAPAccessoryServerBrowserWiProxBTLE homeKit:foundDevice:withData:]
  -[HAPAccessoryServerBrowserWiProxBTLE homeKitStartedScanning:]
  -[HAPAccessoryServerBrowserWiProxBTLE homeKitStoppedScanning:]
  -[HAPAccessoryServerBrowserWiProxBTLE homeKit:failedToStartScanningWithError:]
  -[HAPAccessoryServerBrowserWiProxBTLE setScanInBackground:]


HAP2AccessoryServerPairingDriverAuthPromptWorkItem : HAP2AccessoryServerPairingDriverWorkItem
 @property  unsigned long permissionType
 @property  NSError *cancelError

  // class methods
  +[HAP2AccessoryServerPairingDriverAuthPromptWorkItem promptForType:]

  // instance methods
  -[HAP2AccessoryServerPairingDriverAuthPromptWorkItem .cxx_destruct]
  -[HAP2AccessoryServerPairingDriverAuthPromptWorkItem cancelWithError:]
  -[HAP2AccessoryServerPairingDriverAuthPromptWorkItem cancelError]
  -[HAP2AccessoryServerPairingDriverAuthPromptWorkItem setCancelError:]
  -[HAP2AccessoryServerPairingDriverAuthPromptWorkItem permissionType]
  -[HAP2AccessoryServerPairingDriverAuthPromptWorkItem runForPairingDriver:]
  -[HAP2AccessoryServerPairingDriverAuthPromptWorkItem initWithPermissionType:]


HAPBTLEControlOutputStream : HMFObject
 @property  @? completionHandler
 @property  BOOL complete
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  BOOL open
 @property  unsigned long controlPayloadWrittenLength
 @property  NSOperationQueue *operationQueue
 @property  <HAPBTLEControlOutputStreamDelegate> *delegate
 @property  unsigned char type
 @property  HAPBTLETransactionIdentifier *transactionIdentifier
 @property  NSData *payload
 @property  unsigned long mtuLength
 @property  double timeoutInterval

  // class methods
  +[HAPBTLEControlOutputStream shortDescription]

  // instance methods
  -[HAPBTLEControlOutputStream operationQueue]
  -[HAPBTLEControlOutputStream clientQueue]
  -[HAPBTLEControlOutputStream _closeWithError:]
  -[HAPBTLEControlOutputStream payload]
  -[HAPBTLEControlOutputStream mtuLength]
  -[HAPBTLEControlOutputStream .cxx_destruct]
  -[HAPBTLEControlOutputStream _complete]
  -[HAPBTLEControlOutputStream setDelegate:]
  -[HAPBTLEControlOutputStream isOpen]
  -[HAPBTLEControlOutputStream descriptionWithPointer:]
  -[HAPBTLEControlOutputStream init]
  -[HAPBTLEControlOutputStream transactionIdentifier]
  -[HAPBTLEControlOutputStream setOpen:]
  -[HAPBTLEControlOutputStream timeoutInterval]
  -[HAPBTLEControlOutputStream setCompletionHandler:]
  -[HAPBTLEControlOutputStream setComplete:]
  -[HAPBTLEControlOutputStream type]
  -[HAPBTLEControlOutputStream delegate]
  -[HAPBTLEControlOutputStream isComplete]
  -[HAPBTLEControlOutputStream shortDescription]
  -[HAPBTLEControlOutputStream close]
  -[HAPBTLEControlOutputStream completionHandler]
  -[HAPBTLEControlOutputStream open]
  -[HAPBTLEControlOutputStream initWithControlType:transactionIdentifier:controlPayload:mtuLength:timeoutInterval:]
  -[HAPBTLEControlOutputStream remainingControlPayloadLength]
  -[HAPBTLEControlOutputStream controlPayloadWrittenLength]
  -[HAPBTLEControlOutputStream sendNextPayloadFragment]
  -[HAPBTLEControlOutputStream _sendNextPayloadFragmentWithCompletionHandler:]
  -[HAPBTLEControlOutputStream _nextPacketWithMaximumLength:error:]
  -[HAPBTLEControlOutputStream setControlPayloadWrittenLength:]


HAPBTLETuple : NSObject
 @property  unsigned long atvState
 @property  {BTStatus=QQQQQQQQQQQQQQQQBBB} state
 @property  int maxHAPConnections
 @property  float minBandwidth
 @property  float maxBandwidth

  // class methods
  +[HAPBTLETuple makeTupleWithATVState:MaxHAPConnections:]
  +[HAPBTLETuple atvState2String:]
  +[HAPBTLETuple bandwidthFromATVState:MinBandwidth:MaxBandwidth:]
  +[HAPBTLETuple makeTupleWithATVState:MaxHAPConnections:MinBandwidth:MaxBandwidth:]
  +[HAPBTLETuple state2String:]
  +[HAPBTLETuple makeTupleWithState:MaxHAPConnections:MinBandwidth:MaxBandwidth:]

  // instance methods
  -[HAPBTLETuple setState:]
  -[HAPBTLETuple state]
  -[HAPBTLETuple maxBandwidth]
  -[HAPBTLETuple setMaxBandwidth:]
  -[HAPBTLETuple atvState]
  -[HAPBTLETuple maxHAPConnections]
  -[HAPBTLETuple setAtvState:]
  -[HAPBTLETuple setMinBandwidth:]
  -[HAPBTLETuple setMaxHAPConnections:]
  -[HAPBTLETuple minBandwidth]


HAP2LoggingObject : NSObject
  // instance methods


HAPCharacteristicReadCompletionTuple : HMFObject
 @property  @? handler
 @property  NSObject<OS_dispatch_queue> *completionQueue

  // class methods
  +[HAPCharacteristicReadCompletionTuple readCompletionTupleWithHandler:queue:]

  // instance methods
  -[HAPCharacteristicReadCompletionTuple completionQueue]
  -[HAPCharacteristicReadCompletionTuple .cxx_destruct]
  -[HAPCharacteristicReadCompletionTuple setCompletionQueue:]
  -[HAPCharacteristicReadCompletionTuple setHandler:]
  -[HAPCharacteristicReadCompletionTuple handler]


HAPAddRemovePairingOperation : HMFObject
 @property  long long operation
 @property  NSString *identifier
 @property  NSData *publicKey
 @property  BOOL admin
 @property  NSObject<OS_dispatch_queue> *queue
 @property  @? completionHandler
 @property  BOOL operationExecuting

  // instance methods
  -[HAPAddRemovePairingOperation operation]
  -[HAPAddRemovePairingOperation setOperation:]
  -[HAPAddRemovePairingOperation publicKey]
  -[HAPAddRemovePairingOperation admin]
  -[HAPAddRemovePairingOperation .cxx_destruct]
  -[HAPAddRemovePairingOperation setQueue:]
  -[HAPAddRemovePairingOperation identifier]
  -[HAPAddRemovePairingOperation setCompletionHandler:]
  -[HAPAddRemovePairingOperation setIdentifier:]
  -[HAPAddRemovePairingOperation queue]
  -[HAPAddRemovePairingOperation setPublicKey:]
  -[HAPAddRemovePairingOperation completionHandler]
  -[HAPAddRemovePairingOperation setAdmin:]
  -[HAPAddRemovePairingOperation setOperationExecuting:]
  -[HAPAddRemovePairingOperation initWith:identifier:publicKey:admin:queue:completion:]
  -[HAPAddRemovePairingOperation operationExecuting]


_HAPAccessoryServerBTLE100 : HAPAccessoryServerBTLE <HAPSecuritySessionDelegate, CBPeripheralDelegate>
 @property  unsigned long state
 @property  unsigned long connectionRetryCount
 @property  NSMapTable *btleServiceToHAPServiceMap
 @property  unsigned long characteristicDiscoveryRequestCount
 @property  unsigned long characteristicValueReadCount
 @property  unsigned long metadataDiscoveryRequestCount
 @property  unsigned long metadataValueReadCount
 @property  unsigned long availableInstanceID
 @property  NSMapTable *btleCharacteristicToHAPCharacteristicMap
 @property  NSMapTable *hapCharacteristicReadCompletionQueues
 @property  NSMapTable *hapCharacteristicWriteCompletionQueues
 @property  NSMapTable *hapCharacteristicEnableEventCompletionQueues
 @property  NSMutableArray *addRemovePairingOperationsQueue
 @property  CBService *pairingService
 @property  CBCharacteristic *pairSetupCharacteristic
 @property  CBCharacteristic *pairVerifyCharacteristic
 @property  CBCharacteristic *pairingFeaturesCharacteristic
 @property  CBCharacteristic *pairingsCharacteristic
 @property  CBService *accessoryInfoService
 @property  CBCharacteristic *identifyCharacteristic
 @property  CBCharacteristic *modelCharacteristic
 @property  CBCharacteristic *serialNumberCharacteristic
 @property  CBCharacteristic *manufacturerCharacteristic
 @property  @? pairVerifyCompletionBlock
 @property  BOOL startPairingRequested
 @property  BOOL pairingFeaturesRead
 @property  unsigned long pairingFeatureFlags
 @property  HAPSecuritySession *securitySession
 @property  BOOL securitySessionOpening
 @property  NSObject<OS_dispatch_source> *connectionLifetimeTimer
 @property  double idleConnectionTimeoutInSec
 @property  BOOL disconnecting
 @property  BOOL unpairedIdentifyRequested
 @property  @? unpairedIdentifyCompletionBlock
 @property  BOOL removeOnDisconnect
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_HAPAccessoryServerBTLE100 serializeCharacteristicWriteValue:characteristicFormat:supportsAdditonalAuthentication:authenticationData:error:]
  +[_HAPAccessoryServerBTLE100 deserializeCharacteristicReadData:characteristicFormat:supportsAdditonalAuthentication:error:]
  +[_HAPAccessoryServerBTLE100 _convertFromBTLEToHAPUUID:]

  // instance methods
  -[_HAPAccessoryServerBTLE100 _disconnect]
  -[_HAPAccessoryServerBTLE100 disconnect]
  -[_HAPAccessoryServerBTLE100 continuePairingAfterAuthPrompt]
  -[_HAPAccessoryServerBTLE100 tryPairingPassword:error:]
  -[_HAPAccessoryServerBTLE100 startPairingWithRequest:]
  -[_HAPAccessoryServerBTLE100 enableEvents:forCharacteristics:withCompletionHandler:queue:]
  -[_HAPAccessoryServerBTLE100 .cxx_destruct]
  -[_HAPAccessoryServerBTLE100 _pairSetupTryPassword:]
  -[_HAPAccessoryServerBTLE100 stopPairingWithError:]
  -[_HAPAccessoryServerBTLE100 writeCharacteristicValues:timeout:completionQueue:completionHandler:]
  -[_HAPAccessoryServerBTLE100 _removePairingWithIdentifier:publicKey:queue:completion:]
  -[_HAPAccessoryServerBTLE100 setState:]
  -[_HAPAccessoryServerBTLE100 isDisconnecting]
  -[_HAPAccessoryServerBTLE100 pairVerifyCompletionBlock]
  -[_HAPAccessoryServerBTLE100 _delegateRespondsToSelector:]
  -[_HAPAccessoryServerBTLE100 identifyWithCompletion:]
  -[_HAPAccessoryServerBTLE100 listPairingsWithCompletionQueue:completionHandler:]
  -[_HAPAccessoryServerBTLE100 removePairingForCurrentControllerOnQueue:completion:]
  -[_HAPAccessoryServerBTLE100 _ensurePairingSessionIsInitializedWithType:]
  -[_HAPAccessoryServerBTLE100 state]
  -[_HAPAccessoryServerBTLE100 setPairVerifyCompletionBlock:]
  -[_HAPAccessoryServerBTLE100 discoverAccessories]
  -[_HAPAccessoryServerBTLE100 addPairing:completionQueue:completionHandler:]
  -[_HAPAccessoryServerBTLE100 _getAttributeDatabase]
  -[_HAPAccessoryServerBTLE100 continueAuthAfterValidation:]
  -[_HAPAccessoryServerBTLE100 dealloc]
  -[_HAPAccessoryServerBTLE100 _resetState]
  -[_HAPAccessoryServerBTLE100 _enableEvents:forCharacteristics:withCompletionHandler:queue:]
  -[_HAPAccessoryServerBTLE100 peripheral:didModifyServices:]
  -[_HAPAccessoryServerBTLE100 peripheral:didDiscoverServices:]
  -[_HAPAccessoryServerBTLE100 peripheral:didDiscoverCharacteristicsForService:error:]
  -[_HAPAccessoryServerBTLE100 peripheral:didUpdateValueForCharacteristic:error:]
  -[_HAPAccessoryServerBTLE100 peripheral:didWriteValueForCharacteristic:error:]
  -[_HAPAccessoryServerBTLE100 peripheral:didUpdateNotificationStateForCharacteristic:error:]
  -[_HAPAccessoryServerBTLE100 peripheral:didDiscoverDescriptorsForCharacteristic:error:]
  -[_HAPAccessoryServerBTLE100 peripheral:didUpdateValueForDescriptor:error:]
  -[_HAPAccessoryServerBTLE100 controllerUsername]
  -[_HAPAccessoryServerBTLE100 readCharacteristicValues:timeout:completionQueue:completionHandler:]
  -[_HAPAccessoryServerBTLE100 removePairing:completionQueue:completionHandler:]
  -[_HAPAccessoryServerBTLE100 _establishSecureSession]
  -[_HAPAccessoryServerBTLE100 isBLELinkConnected]
  -[_HAPAccessoryServerBTLE100 configureCharacteristics:queue:withCompletionHandler:]
  -[_HAPAccessoryServerBTLE100 generateBroadcastKey:queue:withCompletionHandler:]
  -[_HAPAccessoryServerBTLE100 securitySession:didReceiveLocalPairingIdentityRequestWithError:]
  -[_HAPAccessoryServerBTLE100 securitySession:didReceiveRequestForPeerPairingIdentityWithIdentifier:error:]
  -[_HAPAccessoryServerBTLE100 securitySession:didReceiveSetupExchangeData:]
  -[_HAPAccessoryServerBTLE100 securitySessionIsOpening:]
  -[_HAPAccessoryServerBTLE100 securitySessionDidOpen:]
  -[_HAPAccessoryServerBTLE100 securitySession:didCloseWithError:]
  -[_HAPAccessoryServerBTLE100 securitySession]
  -[_HAPAccessoryServerBTLE100 setSecuritySession:]
  -[_HAPAccessoryServerBTLE100 handleConnectionWithPeripheral:withError:]
  -[_HAPAccessoryServerBTLE100 handleDisconnectionWithError:completionQueue:completionHandler:]
  -[_HAPAccessoryServerBTLE100 updateConnectionIdleTime:]
  -[_HAPAccessoryServerBTLE100 initWithPeripheral:name:pairingUsername:statusFlags:stateNumber:stateChanged:connectReason:configNumber:category:setupHash:connectionIdleTime:browser:keyStore:whbStableIdentifier:]
  -[_HAPAccessoryServerBTLE100 _createPrimaryAccessoryFromAdvertisementData]
  -[_HAPAccessoryServerBTLE100 _enableEvent:forCharacteristic:withCompletionHandler:queue:]
  -[_HAPAccessoryServerBTLE100 pairingFeaturesCharacteristic]
  -[_HAPAccessoryServerBTLE100 pairSetupCharacteristic]
  -[_HAPAccessoryServerBTLE100 pairingsCharacteristic]
  -[_HAPAccessoryServerBTLE100 identifyCharacteristic]
  -[_HAPAccessoryServerBTLE100 _encryptDataAndGenerateAuthTag:error:]
  -[_HAPAccessoryServerBTLE100 _decryptData:error:]
  -[_HAPAccessoryServerBTLE100 pairVerifyCharacteristic]
  -[_HAPAccessoryServerBTLE100 _handleConnectionWithError:]
  -[_HAPAccessoryServerBTLE100 _handleHAPNotificationStateUpdateForCharacteristic:error:]
  -[_HAPAccessoryServerBTLE100 hapBLEProtocolVersion]
  -[_HAPAccessoryServerBTLE100 _notifyDelegateOfReceivedEncryptedAuthenticatedData:forCharacteristic:]
  -[_HAPAccessoryServerBTLE100 _notifyDelegateOfReceivedPlaintextData:forCharacteristic:]
  -[_HAPAccessoryServerBTLE100 _notifyDelegateOfSentEncryptedAuthenticatedData:forCharacteristic:]
  -[_HAPAccessoryServerBTLE100 _notifyDelegateOfSentPlaintextData:forCharacteristic:]
  -[_HAPAccessoryServerBTLE100 setIdentifyCharacteristic:]
  -[_HAPAccessoryServerBTLE100 setPairingFeaturesCharacteristic:]
  -[_HAPAccessoryServerBTLE100 setPairSetupCharacteristic:]
  -[_HAPAccessoryServerBTLE100 setPairVerifyCharacteristic:]
  -[_HAPAccessoryServerBTLE100 setPairingsCharacteristic:]
  -[_HAPAccessoryServerBTLE100 setBtleServiceToHAPServiceMap:]
  -[_HAPAccessoryServerBTLE100 setBtleCharacteristicToHAPCharacteristicMap:]
  -[_HAPAccessoryServerBTLE100 setHapCharacteristicReadCompletionQueues:]
  -[_HAPAccessoryServerBTLE100 setHapCharacteristicWriteCompletionQueues:]
  -[_HAPAccessoryServerBTLE100 setHapCharacteristicEnableEventCompletionQueues:]
  -[_HAPAccessoryServerBTLE100 setAddRemovePairingOperationsQueue:]
  -[_HAPAccessoryServerBTLE100 setPairingService:]
  -[_HAPAccessoryServerBTLE100 setModelCharacteristic:]
  -[_HAPAccessoryServerBTLE100 setSerialNumberCharacteristic:]
  -[_HAPAccessoryServerBTLE100 setManufacturerCharacteristic:]
  -[_HAPAccessoryServerBTLE100 setConnectionRetryCount:]
  -[_HAPAccessoryServerBTLE100 setCharacteristicDiscoveryRequestCount:]
  -[_HAPAccessoryServerBTLE100 setCharacteristicValueReadCount:]
  -[_HAPAccessoryServerBTLE100 setMetadataDiscoveryRequestCount:]
  -[_HAPAccessoryServerBTLE100 setMetadataValueReadCount:]
  -[_HAPAccessoryServerBTLE100 setAvailableInstanceID:]
  -[_HAPAccessoryServerBTLE100 setStartPairingRequested:]
  -[_HAPAccessoryServerBTLE100 unpairedIdentifyRequested]
  -[_HAPAccessoryServerBTLE100 setRemoveOnDisconnect:]
  -[_HAPAccessoryServerBTLE100 setUnpairedIdentifyRequested:]
  -[_HAPAccessoryServerBTLE100 connectionLifetimeTimer]
  -[_HAPAccessoryServerBTLE100 setConnectionLifetimeTimer:]
  -[_HAPAccessoryServerBTLE100 setIdleConnectionTimeoutInSec:]
  -[_HAPAccessoryServerBTLE100 setSecuritySessionOpening:]
  -[_HAPAccessoryServerBTLE100 _handlePairingStateMachine]
  -[_HAPAccessoryServerBTLE100 _updateConnectionLifetimeTimer]
  -[_HAPAccessoryServerBTLE100 _setupBTLEConnectionToPeripheral]
  -[_HAPAccessoryServerBTLE100 setAccessoryInfoService:]
  -[_HAPAccessoryServerBTLE100 pairingService]
  -[_HAPAccessoryServerBTLE100 accessoryInfoService]
  -[_HAPAccessoryServerBTLE100 pairingFeaturesRead]
  -[_HAPAccessoryServerBTLE100 startPairingRequested]
  -[_HAPAccessoryServerBTLE100 _cancelConnectionLifetimeTimer]
  -[_HAPAccessoryServerBTLE100 _checkForAuthPrompt]
  -[_HAPAccessoryServerBTLE100 modelCharacteristic]
  -[_HAPAccessoryServerBTLE100 manufacturerCharacteristic]
  -[_HAPAccessoryServerBTLE100 serialNumberCharacteristic]
  -[_HAPAccessoryServerBTLE100 _pairSetupStart]
  -[_HAPAccessoryServerBTLE100 _reallyEstablishSecureSession]
  -[_HAPAccessoryServerBTLE100 _handleHAPServiceDiscovery]
  -[_HAPAccessoryServerBTLE100 _handleDescriptorDiscovery]
  -[_HAPAccessoryServerBTLE100 _handleReadDescriptorValues]
  -[_HAPAccessoryServerBTLE100 setDisconnecting:]
  -[_HAPAccessoryServerBTLE100 _readCharacteristicValues:completionQueue:completionHandler:]
  -[_HAPAccessoryServerBTLE100 _btleCharacteristicForHAPCharacteristic:]
  -[_HAPAccessoryServerBTLE100 _enqueueEnableEventCompletionHandler:queue:forCharacteristic:]
  -[_HAPAccessoryServerBTLE100 _hapCharacteristicForBTLECharacteristic:]
  -[_HAPAccessoryServerBTLE100 _dequeueEnableEventCompletionTupleForCharacteristic:]
  -[_HAPAccessoryServerBTLE100 _handleSuccessfulBTLEConnection]
  -[_HAPAccessoryServerBTLE100 connectionRetryCount]
  -[_HAPAccessoryServerBTLE100 _handleDisconnectionWithQueue:withCompletion:]
  -[_HAPAccessoryServerBTLE100 unpairedIdentifyCompletionBlock]
  -[_HAPAccessoryServerBTLE100 setUnpairedIdentifyCompletionBlock:]
  -[_HAPAccessoryServerBTLE100 btleCharacteristicToHAPCharacteristicMap]
  -[_HAPAccessoryServerBTLE100 _dequeueReadCompletionTupleForCharacteristic:]
  -[_HAPAccessoryServerBTLE100 _dequeueWriteCompletionHandlerForCharacteristic:]
  -[_HAPAccessoryServerBTLE100 addRemovePairingOperationsQueue]
  -[_HAPAccessoryServerBTLE100 removeOnDisconnect]
  -[_HAPAccessoryServerBTLE100 hapCharacteristicWriteCompletionQueues]
  -[_HAPAccessoryServerBTLE100 hapCharacteristicReadCompletionQueues]
  -[_HAPAccessoryServerBTLE100 hapCharacteristicEnableEventCompletionQueues]
  -[_HAPAccessoryServerBTLE100 _writeCharacteristicValues:queue:completionHandler:]
  -[_HAPAccessoryServerBTLE100 _writeValue:forCharacteristic:authorizationData:withCompletionHandler:queue:]
  -[_HAPAccessoryServerBTLE100 _shouldEnableSessionSecurity]
  -[_HAPAccessoryServerBTLE100 _enqueueWriteCompletionHandler:forCharacteristic:]
  -[_HAPAccessoryServerBTLE100 _readValueForCharacteristic:completionQueue:completionHandler:]
  -[_HAPAccessoryServerBTLE100 _enqueueReadCompletionHandler:queue:forCharacteristic:]
  -[_HAPAccessoryServerBTLE100 readValueForCharacteristic:queue:completionHandler:]
  -[_HAPAccessoryServerBTLE100 _pairVerifyHAPCharacteristic]
  -[_HAPAccessoryServerBTLE100 characteristicDiscoveryRequestCount]
  -[_HAPAccessoryServerBTLE100 metadataDiscoveryRequestCount]
  -[_HAPAccessoryServerBTLE100 metadataValueReadCount]
  -[_HAPAccessoryServerBTLE100 characteristicValueReadCount]
  -[_HAPAccessoryServerBTLE100 _parseBTLEService:withInstanceId:]
  -[_HAPAccessoryServerBTLE100 btleServiceToHAPServiceMap]
  -[_HAPAccessoryServerBTLE100 _nextInstanceID]
  -[_HAPAccessoryServerBTLE100 availableInstanceID]
  -[_HAPAccessoryServerBTLE100 _handleConnectionLifetimeTimeout]
  -[_HAPAccessoryServerBTLE100 _handleHAPCharacteristicDiscoveryForService:error:]
  -[_HAPAccessoryServerBTLE100 _parseBTLECharacteristicDescriptor:existingDescriptors:characteristics:]
  -[_HAPAccessoryServerBTLE100 _pairSetupHAPCharacteristic]
  -[_HAPAccessoryServerBTLE100 _handlePairSetupExchangeWithData:]
  -[_HAPAccessoryServerBTLE100 _handleReceivedSecuritySessionSetupExchangeData:]
  -[_HAPAccessoryServerBTLE100 setPairingFeaturesRead:]
  -[_HAPAccessoryServerBTLE100 _handleHAPServiceDiscoveryCompletionForService:withInstanceId:]
  -[_HAPAccessoryServerBTLE100 _handleUpdatedValueForBTLECharacteristic:error:]
  -[_HAPAccessoryServerBTLE100 _handleHAPWriteConfirmationForCharacteristic:error:]
  -[_HAPAccessoryServerBTLE100 idleConnectionTimeoutInSec]
  -[_HAPAccessoryServerBTLE100 _addPairingWithIdentifier:publicKey:admin:queue:completion:]
  -[_HAPAccessoryServerBTLE100 _enqueueOperation:identifier:publicKey:admin:queue:completion:]
  -[_HAPAccessoryServerBTLE100 _dequeueAndContinueOperation]
  -[_HAPAccessoryServerBTLE100 _handlePairingsWriteForCharacteristic:writeError:removing:queue:completion:]
  -[_HAPAccessoryServerBTLE100 _handlePairingsReadForCharacteristic:readError:removing:queue:completion:]
  -[_HAPAccessoryServerBTLE100 pairingFeatureFlags]
  -[_HAPAccessoryServerBTLE100 setPairingFeatureFlags:]
  -[_HAPAccessoryServerBTLE100 isSecuritySessionOpening]


HAPCharacteristic : HMFObject <HAP2CharacteristicTupleValue, HMFMerging, NSCopying>
 @property  CBCharacteristic *cbCharacteristic
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *type
 @property  NSNumber *instanceID
 @property  HAPService *service
 @property  unsigned long properties
 @property  BOOL eventNotificationsEnabled
 @property  HAPCharacteristicMetadata *metadata
 @property  HAPCharacteristicMetadata *accessoryMetadata
 @property  NSDate *valueUpdatedTime
 @property  BOOL shouldValidateValueAfterReading
 @property  BOOL implicitWriteWithResponse
 @property  id value
 @property  NSNumber *stateNumber
 @property  BOOL supportsAdditionalAuthorizationData
 @property  BOOL supportsWriteWithResponse
 @property  BOOL prohibitCaching
 @property  BOOL supportsEventNotificationContext
 @property  NSData *notificationContext
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPCharacteristic hap2_shortTypeFromUUID:]

  // instance methods
  -[HAPCharacteristic instanceID]
  -[HAPCharacteristic setType:]
  -[HAPCharacteristic .cxx_destruct]
  -[HAPCharacteristic properties]
  -[HAPCharacteristic isEqual:]
  -[HAPCharacteristic setValue:]
  -[HAPCharacteristic setProperties:]
  -[HAPCharacteristic metadata]
  -[HAPCharacteristic notificationContext]
  -[HAPCharacteristic service]
  -[HAPCharacteristic value]
  -[HAPCharacteristic setMetadata:]
  -[HAPCharacteristic type]
  -[HAPCharacteristic copyWithZone:]
  -[HAPCharacteristic setService:]
  -[HAPCharacteristic setInstanceID:]
  -[HAPCharacteristic valueUpdatedTime]
  -[HAPCharacteristic setValueUpdatedTime:]
  -[HAPCharacteristic mergeObject:]
  -[HAPCharacteristic shouldMergeObject:]
  -[HAPCharacteristic propertiesDescription]
  -[HAPCharacteristic stateNumber]
  -[HAPCharacteristic setStateNumber:]
  -[HAPCharacteristic supportsWriteWithResponse]
  -[HAPCharacteristic setProhibitCaching:]
  -[HAPCharacteristic setNotificationContext:]
  -[HAPCharacteristic validateValue:outValue:]
  -[HAPCharacteristic setEventNotificationsEnabled:]
  -[HAPCharacteristic shouldValidateValueAfterReading]
  -[HAPCharacteristic eventNotificationsEnabled]
  -[HAPCharacteristic initWithType:instanceID:value:stateNumber:properties:eventNotificationsEnabled:metadata:]
  -[HAPCharacteristic initWithType:instanceID:value:stateNumber:properties:eventNotificationsEnabled:implicitWriteWithResponse:metadata:]
  -[HAPCharacteristic accessoryMetadata]
  -[HAPCharacteristic setShouldValidateValueAfterReading:]
  -[HAPCharacteristic hap2_canUseCachedValue]
  -[HAPCharacteristic cbCharacteristic]
  -[HAPCharacteristic setCBCharacteristic:]
  -[HAPCharacteristic isEqualToCharacteristic:]
  -[HAPCharacteristic hap2_mergeWithCharacteristic:]
  -[HAPCharacteristic prohibitCaching]
  -[HAPCharacteristic _updateMetadata:withProvidedMetadata:]
  -[HAPCharacteristic _generateValidMetadata:]
  -[HAPCharacteristic supportsAdditionalAuthorizationData]
  -[HAPCharacteristic isWriteWithResponseImplicitlySupported]
  -[HAPCharacteristic supportsEventNotificationContext]


HAPCharacteristicEvent : HMFObject
 @property  NSString *serverIdentifier
 @property  NSNumber *accessoryInstanceID
 @property  NSNumber *serviceInstanceID
 @property  NSNumber *characteristicInstanceID
 @property  id value
 @property  NSDate *updateTime
 @property  NSNumber *stateNumber

  // class methods
  +[HAPCharacteristicEvent eventWithCharacteristic:]

  // instance methods
  -[HAPCharacteristicEvent serverIdentifier]
  -[HAPCharacteristicEvent .cxx_destruct]
  -[HAPCharacteristicEvent init]
  -[HAPCharacteristicEvent value]
  -[HAPCharacteristicEvent updateTime]
  -[HAPCharacteristicEvent initWithCharacteristic:]
  -[HAPCharacteristicEvent characteristicInstanceID]
  -[HAPCharacteristicEvent stateNumber]
  -[HAPCharacteristicEvent accessoryInstanceID]
  -[HAPCharacteristicEvent serviceInstanceID]


HAPWACAccessory : HMFObject
 @property  CUWiFiDevice *cuWiFiDevice
 @property  HMFUnfairLock *lock
 @property  double discoveryTime
 @property  NSString *name
 @property  NSString *model
 @property  NSString *manufacturer
 @property  NSNumber *wacCategory
 @property  NSNumber *rssi
 @property  NSData *bssid
 @property  NSString *ssid
 @property  NSUUID *identifier
 @property  NSString *deviceId
 @property  NSData *setupHash
 @property  NSDictionary *rawScanResult
 @property  BOOL supportsAirPlay
 @property  BOOL supportsLegacyWAC
 @property  BOOL supportsWAC2
 @property  BOOL supportsTokenAuth
 @property  BOOL supportsCertAuth
 @property  BOOL requiresOwnershipToken
 @property  BOOL isHomeKitAccessory
 @property  BOOL isAirPlayAccessory
 @property  unsigned long supportedWiFiBands
 @property  BOOL homeKitPaired
 @property  BOOL pairSetupWAC
 @property  unsigned long authFeatures
 @property  unsigned long version

  // instance methods
  -[HAPWACAccessory rssi]
  -[HAPWACAccessory ssid]
  -[HAPWACAccessory name]
  -[HAPWACAccessory deviceId]
  -[HAPWACAccessory .cxx_destruct]
  -[HAPWACAccessory manufacturer]
  -[HAPWACAccessory identifier]
  -[HAPWACAccessory rawScanResult]
  -[HAPWACAccessory model]
  -[HAPWACAccessory updateWithHAPWACAccessory:]
  -[HAPWACAccessory bssid]
  -[HAPWACAccessory version]
  -[HAPWACAccessory lock]
  -[HAPWACAccessory requiresOwnershipToken]
  -[HAPWACAccessory setupHash]
  -[HAPWACAccessory authFeatures]
  -[HAPWACAccessory pairSetupWAC]
  -[HAPWACAccessory wacCategory]
  -[HAPWACAccessory supportsTokenAuth]
  -[HAPWACAccessory supportsCertAuth]
  -[HAPWACAccessory supportsLegacyWAC]
  -[HAPWACAccessory supportsWAC2]
  -[HAPWACAccessory supportedWiFiBands]
  -[HAPWACAccessory isAirPlayAccessory]
  -[HAPWACAccessory isHomeKitAccessory]
  -[HAPWACAccessory discoveryTime]
  -[HAPWACAccessory __setupSupportedFlags:]
  -[HAPWACAccessory supportsAirPlay]
  -[HAPWACAccessory homeKitPaired]
  -[HAPWACAccessory cuWiFiDevice]
  -[HAPWACAccessory initWithWiFiDevice:]
  -[HAPWACAccessory initWithName:identifier:category:ssid:deviceId:flags:]
  -[HAPWACAccessory setDiscoveryTime:]


HAPWACAccessoryBrowser : HAPAccessoryServerBrowser <HMFTimerDelegate, HMFLogging>
 @property  NSString *browsingIdentifier
 @property  NSDate *browsingStartTime
 @property  <HAPAirPlayAccessoryBrowserDelegate> *airplayDelegate
 @property  NSString *scanning2Pt4SSID
 @property  @? found2Pt4Completion
 @property  <HAPWACAccessoryBrowserDelegate> *delegate
 @property  NSMutableSet *foundUnconfiguredUnpairedAccessories
 @property  NSMutableSet *foundUnconfiguredPairedAccessories
 @property  NSMutableSet *found2Pt4Networks
 @property  CUWiFiScanner *cuWiFiScanner
 @property  unsigned long state
 @property  HMFTimer *backoffTimer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPWACAccessoryBrowser logCategory]

  // instance methods
  -[HAPWACAccessoryBrowser initWithDelegate:queue:]
  -[HAPWACAccessoryBrowser backoffTimer]
  -[HAPWACAccessoryBrowser scan2Pt4APWithSSID:completion:]
  -[HAPWACAccessoryBrowser foundUnconfiguredPairedAccessories]
  -[HAPWACAccessoryBrowser found2Pt4Completion]
  -[HAPWACAccessoryBrowser timerDidFire:]
  -[HAPWACAccessoryBrowser stopDiscoveringAccessoryServers]
  -[HAPWACAccessoryBrowser setFoundUnconfiguredUnpairedAccessories:]
  -[HAPWACAccessoryBrowser _startBrowsingForWACAccessories]
  -[HAPWACAccessoryBrowser browsingStartTime]
  -[HAPWACAccessoryBrowser setScanning2Pt4SSID:]
  -[HAPWACAccessoryBrowser airplayDelegate]
  -[HAPWACAccessoryBrowser .cxx_destruct]
  -[HAPWACAccessoryBrowser handleChangeUnconfiguredWACDevice:]
  -[HAPWACAccessoryBrowser initWiFiScannerWithScanner:]
  -[HAPWACAccessoryBrowser handleFoundUnconfiguredUnpairedWACDevice:]
  -[HAPWACAccessoryBrowser _reportFound2Pt4Network:]
  -[HAPWACAccessoryBrowser scanning2Pt4SSID]
  -[HAPWACAccessoryBrowser _removeUnconfiguredWACDevice:]
  -[HAPWACAccessoryBrowser found2Pt4Networks]
  -[HAPWACAccessoryBrowser _handleChangeUnconfiguredPairedWACAccessory:]
  -[HAPWACAccessoryBrowser cuWiFiScanner]
  -[HAPWACAccessoryBrowser setState:]
  -[HAPWACAccessoryBrowser startDiscoveringAccessoryServers]
  -[HAPWACAccessoryBrowser _handleUnconfiguredPairedWACDevice:]
  -[HAPWACAccessoryBrowser setFoundUnconfiguredPairedAccessories:]
  -[HAPWACAccessoryBrowser visible2Pt4Networks]
  -[HAPWACAccessoryBrowser _initWiFiScannerWithScanner:]
  -[HAPWACAccessoryBrowser _addFoundUnconfiguredUnpairedWACDevice:]
  -[HAPWACAccessoryBrowser handleFoundAPDevice:]
  -[HAPWACAccessoryBrowser _handleNewUnconfiguredUnpairedWACDevice:]
  -[HAPWACAccessoryBrowser state]
  -[HAPWACAccessoryBrowser startDiscoveringAirPlayAccessoriesWithDelegate:]
  -[HAPWACAccessoryBrowser _handleChangeUnconfiguredUnpairedWACAccessory:]
  -[HAPWACAccessoryBrowser delegate]
  -[HAPWACAccessoryBrowser foundUnconfiguredUnpairedAccessories]
  -[HAPWACAccessoryBrowser handleFoundUnconfiguredPairedWACDevice:]
  -[HAPWACAccessoryBrowser setAirplayDelegate:]
  -[HAPWACAccessoryBrowser discoverAccessoryServerWithIdentifier:]
  -[HAPWACAccessoryBrowser _restartBrowsingWithAllNetworks]
  -[HAPWACAccessoryBrowser _stopBrowsingForWACAccessories]
  -[HAPWACAccessoryBrowser browsingIdentifier]
  -[HAPWACAccessoryBrowser setBrowsingStartTime:]
  -[HAPWACAccessoryBrowser setFound2Pt4Completion:]
  -[HAPWACAccessoryBrowser setBrowsingIdentifier:]
  -[HAPWACAccessoryBrowser _handleBrowsingBackOffTimerExpiry]
  -[HAPWACAccessoryBrowser handleRemovedUnconfiguredWACDevice:]
  -[HAPWACAccessoryBrowser setCuWiFiScanner:]
  -[HAPWACAccessoryBrowser setFound2Pt4Networks:]


HAPWiFiConfigurationControl : NSObject <NSCopying, HAPTLVProtocol>
 @property  HAPWiFiConfigurationOperationTypeWrapper *operationType
 @property  HAPTLVUnsignedNumberValue *cookie
 @property  HAPWiFiConfigurationUpdateStatusWrapper *updateStatus
 @property  HAPTLVUnsignedNumberValue *operationTimeout
 @property  NSString *countryCodeConfiguration
 @property  HAPWiFiStationConfiguration *stationConfiguration
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPWiFiConfigurationControl parsedFromData:error:]

  // instance methods
  -[HAPWiFiConfigurationControl setOperationType:]
  -[HAPWiFiConfigurationControl setCookie:]
  -[HAPWiFiConfigurationControl operationType]
  -[HAPWiFiConfigurationControl operationTimeout]
  -[HAPWiFiConfigurationControl cookie]
  -[HAPWiFiConfigurationControl .cxx_destruct]
  -[HAPWiFiConfigurationControl init]
  -[HAPWiFiConfigurationControl isEqual:]
  -[HAPWiFiConfigurationControl updateStatus]
  -[HAPWiFiConfigurationControl parseFromData:error:]
  -[HAPWiFiConfigurationControl copyWithZone:]
  -[HAPWiFiConfigurationControl setUpdateStatus:]
  -[HAPWiFiConfigurationControl setOperationTimeout:]
  -[HAPWiFiConfigurationControl serializeWithError:]
  -[HAPWiFiConfigurationControl setStationConfiguration:]
  -[HAPWiFiConfigurationControl setCountryCodeConfiguration:]
  -[HAPWiFiConfigurationControl countryCodeConfiguration]
  -[HAPWiFiConfigurationControl stationConfiguration]
  -[HAPWiFiConfigurationControl initWithOperationType:cookie:updateStatus:operationTimeout:countryCodeConfiguration:stationConfiguration:]


HAPWiFiStationConfiguration : NSObject <NSCopying, HAPTLVProtocol>
 @property  NSString *SSID
 @property  HAPWiFiSecurityModeWrapper *securityMode
 @property  NSData *PSK
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPWiFiStationConfiguration parsedFromData:error:]

  // instance methods
  -[HAPWiFiStationConfiguration PSK]
  -[HAPWiFiStationConfiguration .cxx_destruct]
  -[HAPWiFiStationConfiguration init]
  -[HAPWiFiStationConfiguration isEqual:]
  -[HAPWiFiStationConfiguration setSecurityMode:]
  -[HAPWiFiStationConfiguration SSID]
  -[HAPWiFiStationConfiguration parseFromData:error:]
  -[HAPWiFiStationConfiguration setPSK:]
  -[HAPWiFiStationConfiguration copyWithZone:]
  -[HAPWiFiStationConfiguration setSSID:]
  -[HAPWiFiStationConfiguration securityMode]
  -[HAPWiFiStationConfiguration serializeWithError:]
  -[HAPWiFiStationConfiguration initWithSSID:securityMode:PSK:]


HAP2AccessoryServerTransportCoAP : HAP2AccessoryServerTransportBaseWithDelegate <HAP2CoAPClientDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HAP2AccessoryServerTransportCoAP clientDidDisconnect:error:]
  -[HAP2AccessoryServerTransportCoAP .cxx_destruct]
  -[HAP2AccessoryServerTransportCoAP protocolFeaturesForVersion:]
  -[HAP2AccessoryServerTransportCoAP wellKnownEndpoint:]
  -[HAP2AccessoryServerTransportCoAP mimeTypeForWellKnownEndpoint:]
  -[HAP2AccessoryServerTransportCoAP doOpenWithCompletion:]
  -[HAP2AccessoryServerTransportCoAP doCloseWithError:completion:]
  -[HAP2AccessoryServerTransportCoAP doUpdateMaxRequestTimeout:]
  -[HAP2AccessoryServerTransportCoAP doSendRequest:completion:]
  -[HAP2AccessoryServerTransportCoAP endpointForCharacteristic:]
  -[HAP2AccessoryServerTransportCoAP endpointForCharacteristics:]
  -[HAP2AccessoryServerTransportCoAP mimeTypeForCharacteristicRequests]
  -[HAP2AccessoryServerTransportCoAP mergeWithNewTransport:]
  -[HAP2AccessoryServerTransportCoAP underlyingTransport]
  -[HAP2AccessoryServerTransportCoAP initWithOperationQueue:delegateQueue:]
  -[HAP2AccessoryServerTransportCoAP client:didReceiveEvent:]
  -[HAP2AccessoryServerTransportCoAP initWithAccessoryInfo:discovery:operationQueue:]
  -[HAP2AccessoryServerTransportCoAP initWithOperationQueue:delegateQueue:serviceName:serviceType:serviceDomain:addressResolutionTimeout:discovery:accessoryInfo:coapClient:coapClientFactory:]
  -[HAP2AccessoryServerTransportCoAP initWithServiceName:type:domain:operationQueue:]


HAPFirmwareUpdateStateWrapper : NSObject <NSCopying, HAPTLVProtocol>
 @property  long long value
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPFirmwareUpdateStateWrapper parsedFromData:error:]

  // instance methods
  -[HAPFirmwareUpdateStateWrapper init]
  -[HAPFirmwareUpdateStateWrapper isEqual:]
  -[HAPFirmwareUpdateStateWrapper initWithValue:]
  -[HAPFirmwareUpdateStateWrapper setValue:]
  -[HAPFirmwareUpdateStateWrapper value]
  -[HAPFirmwareUpdateStateWrapper parseFromData:error:]
  -[HAPFirmwareUpdateStateWrapper copyWithZone:]
  -[HAPFirmwareUpdateStateWrapper serializeWithError:]


HAPAccessCodeCharacterSetWrapper : NSObject <NSCopying, HAPTLVProtocol>
 @property  unsigned long value
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPAccessCodeCharacterSetWrapper parsedFromData:error:]

  // instance methods
  -[HAPAccessCodeCharacterSetWrapper init]
  -[HAPAccessCodeCharacterSetWrapper isEqual:]
  -[HAPAccessCodeCharacterSetWrapper initWithValue:]
  -[HAPAccessCodeCharacterSetWrapper setValue:]
  -[HAPAccessCodeCharacterSetWrapper value]
  -[HAPAccessCodeCharacterSetWrapper parseFromData:error:]
  -[HAPAccessCodeCharacterSetWrapper copyWithZone:]
  -[HAPAccessCodeCharacterSetWrapper serializeWithError:]


HAPAccessCodeFlagsWrapper : NSObject <NSCopying, HAPTLVProtocol>
 @property  unsigned long value
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPAccessCodeFlagsWrapper parsedFromData:error:]

  // instance methods
  -[HAPAccessCodeFlagsWrapper init]
  -[HAPAccessCodeFlagsWrapper isEqual:]
  -[HAPAccessCodeFlagsWrapper initWithValue:]
  -[HAPAccessCodeFlagsWrapper setValue:]
  -[HAPAccessCodeFlagsWrapper value]
  -[HAPAccessCodeFlagsWrapper parseFromData:error:]
  -[HAPAccessCodeFlagsWrapper copyWithZone:]
  -[HAPAccessCodeFlagsWrapper serializeWithError:]


HAP2AccessoryServerPairingDriverTransportControlWorkItem : HAP2AccessoryServerPairingDriverWorkItem
 @property  BOOL connect
 @property  NSError *cancelError

  // class methods
  +[HAP2AccessoryServerPairingDriverTransportControlWorkItem openConnection]
  +[HAP2AccessoryServerPairingDriverTransportControlWorkItem closeConnection]

  // instance methods
  -[HAP2AccessoryServerPairingDriverTransportControlWorkItem connect]
  -[HAP2AccessoryServerPairingDriverTransportControlWorkItem .cxx_destruct]
  -[HAP2AccessoryServerPairingDriverTransportControlWorkItem _finishWithError:]
  -[HAP2AccessoryServerPairingDriverTransportControlWorkItem cancelWithError:]
  -[HAP2AccessoryServerPairingDriverTransportControlWorkItem cancelError]
  -[HAP2AccessoryServerPairingDriverTransportControlWorkItem setCancelError:]
  -[HAP2AccessoryServerPairingDriverTransportControlWorkItem runForPairingDriver:]
  -[HAP2AccessoryServerPairingDriverTransportControlWorkItem initWithConnect:]
  -[HAP2AccessoryServerPairingDriverTransportControlWorkItem initForOpening]
  -[HAP2AccessoryServerPairingDriverTransportControlWorkItem initForClosing]


CBConnectionsObserver : NSObject <CBCentralManagerDelegate>
 @property  CBCentralManager *central
 @property  NSObject<OS_dispatch_queue> *dispatchQueue
 @property  BOOL hasStarted
 @property  ATVModel *model
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CBConnectionsObserver initialize]

  // instance methods
  -[CBConnectionsObserver setHasStarted:]
  -[CBConnectionsObserver .cxx_destruct]
  -[CBConnectionsObserver centralManagerDidUpdateState:]
  -[CBConnectionsObserver cleanupWithError:]
  -[CBConnectionsObserver central]
  -[CBConnectionsObserver hasStarted]
  -[CBConnectionsObserver dispatchQueue]
  -[CBConnectionsObserver model]
  -[CBConnectionsObserver setModel:]
  -[CBConnectionsObserver setDispatchQueue:]
  -[CBConnectionsObserver getStatus]
  -[CBConnectionsObserver initWithCentralManager:Queue:Error:]
  -[CBConnectionsObserver getAvailableHAPConnections]
  -[CBConnectionsObserver attachSessionWithError:]
  -[CBConnectionsObserver setCentral:]
  -[CBConnectionsObserver updateBleStatus:]


HAP2AccessoryServerPairingDriverSoftwareAuthWorkItem : HAP2AccessoryServerPairingDriverWorkItem <HAPAuthSessionDelegate>
 @property  <HAP2AccessoryServerSecureTransport> *transport
 @property  <HAP2AccessoryServerEncoding> *encoding
 @property  HAPPairSetupSession *pairingSession
 @property  HAPAccessoryProtocolInfo *authenticatedProtocolInfo
 @property  NSError *cancelError
 @property  HAPAuthSession *authSession
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAP2AccessoryServerPairingDriverSoftwareAuthWorkItem doSoftwareAuth]

  // instance methods
  -[HAP2AccessoryServerPairingDriverSoftwareAuthWorkItem transport]
  -[HAP2AccessoryServerPairingDriverSoftwareAuthWorkItem authSession:confirmUUID:token:]
  -[HAP2AccessoryServerPairingDriverSoftwareAuthWorkItem authenticatedProtocolInfo]
  -[HAP2AccessoryServerPairingDriverSoftwareAuthWorkItem setAuthenticatedProtocolInfo:]
  -[HAP2AccessoryServerPairingDriverSoftwareAuthWorkItem .cxx_destruct]
  -[HAP2AccessoryServerPairingDriverSoftwareAuthWorkItem encoding]
  -[HAP2AccessoryServerPairingDriverSoftwareAuthWorkItem setPairingSession:]
  -[HAP2AccessoryServerPairingDriverSoftwareAuthWorkItem pairingSession]
  -[HAP2AccessoryServerPairingDriverSoftwareAuthWorkItem authSession:authComplete:]
  -[HAP2AccessoryServerPairingDriverSoftwareAuthWorkItem authSession:validateUUID:token:]
  -[HAP2AccessoryServerPairingDriverSoftwareAuthWorkItem cancelWithError:]
  -[HAP2AccessoryServerPairingDriverSoftwareAuthWorkItem authSession:authenticateUUID:token:]
  -[HAP2AccessoryServerPairingDriverSoftwareAuthWorkItem authSession]
  -[HAP2AccessoryServerPairingDriverSoftwareAuthWorkItem authSession:sendAuthExchangeData:]
  -[HAP2AccessoryServerPairingDriverSoftwareAuthWorkItem cancelError]
  -[HAP2AccessoryServerPairingDriverSoftwareAuthWorkItem setCancelError:]
  -[HAP2AccessoryServerPairingDriverSoftwareAuthWorkItem runForPairingDriver:]
  -[HAP2AccessoryServerPairingDriverSoftwareAuthWorkItem setAuthSession:]
  -[HAP2AccessoryServerPairingDriverSoftwareAuthWorkItem _startSoftwareAuth]
  -[HAP2AccessoryServerPairingDriverSoftwareAuthWorkItem _validateAccessoryInfoWithCompletion:]
  -[HAP2AccessoryServerPairingDriverSoftwareAuthWorkItem _isProtocolInfoValid:]
  -[HAP2AccessoryServerPairingDriverSoftwareAuthWorkItem _sendSoftwareAuthMessageWithData:completion:]
  -[HAP2AccessoryServerPairingDriverSoftwareAuthWorkItem _handleAuthCompleteWithError:]
  -[HAP2AccessoryServerPairingDriverSoftwareAuthWorkItem _softwareAuthFinished]


HAPCharacteristicEnableEventCompletionTuple : HMFObject
 @property  @? handler
 @property  NSObject<OS_dispatch_queue> *completionQueue

  // class methods
  +[HAPCharacteristicEnableEventCompletionTuple enableEventCompletionTupleWithHandler:queue:]

  // instance methods
  -[HAPCharacteristicEnableEventCompletionTuple completionQueue]
  -[HAPCharacteristicEnableEventCompletionTuple .cxx_destruct]
  -[HAPCharacteristicEnableEventCompletionTuple setCompletionQueue:]
  -[HAPCharacteristicEnableEventCompletionTuple setHandler:]
  -[HAPCharacteristicEnableEventCompletionTuple handler]


HAPAccessoryServerBTLE : HAPAccessoryServer <HAPAccessoryServerMetricProtocol>
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long metricHAPBTLEConnectionCount
 @property  unsigned long metricHAPBTLEDiscoveryCount
 @property  unsigned long metricHAPBTLEConnectionPerReasonCount
 @property  HAPAccessoryServerBrowserBTLE *browser
 @property  unsigned char connectionIdleTime
 @property  HAPBLEPeripheral *blePeripheral
 @property  NSNumber *stateNumber
 @property  BOOL stateChanged
 @property  unsigned char connectReason
 @property  BOOL notifyingCharacteristicUpdated
 @property  CBPeripheral *peripheral
 @property  unsigned long hapBLEProtocolVersion
 @property  unsigned long resumeSessionID
 @property  NSString *whbStableIdentifier

  // class methods
  +[HAPAccessoryServerBTLE hapUUIDFromBTLEUUID:]

  // instance methods
  -[HAPAccessoryServerBTLE isPaired]
  -[HAPAccessoryServerBTLE peripheral]
  -[HAPAccessoryServerBTLE setStateChanged:]
  -[HAPAccessoryServerBTLE .cxx_destruct]
  -[HAPAccessoryServerBTLE stateChanged]
  -[HAPAccessoryServerBTLE browser]
  -[HAPAccessoryServerBTLE linkType]
  -[HAPAccessoryServerBTLE isCached]
  -[HAPAccessoryServerBTLE readAndResetHAPMetrics:]
  -[HAPAccessoryServerBTLE shortDescription]
  -[HAPAccessoryServerBTLE stateNumber]
  -[HAPAccessoryServerBTLE setStateNumber:]
  -[HAPAccessoryServerBTLE setConnectReason:]
  -[HAPAccessoryServerBTLE configureCharacteristics:queue:withCompletionHandler:]
  -[HAPAccessoryServerBTLE generateBroadcastKey:queue:withCompletionHandler:]
  -[HAPAccessoryServerBTLE discoverAccessoriesAndReadCharacteristicTypes:]
  -[HAPAccessoryServerBTLE resumeSessionID]
  -[HAPAccessoryServerBTLE blePeripheral]
  -[HAPAccessoryServerBTLE setBlePeripheral:]
  -[HAPAccessoryServerBTLE notifyingCharacteristicUpdated]
  -[HAPAccessoryServerBTLE setNotifyingCharacteristicUpdated:]
  -[HAPAccessoryServerBTLE handleConnectionWithPeripheral:withError:]
  -[HAPAccessoryServerBTLE handleDisconnectionWithError:completionQueue:completionHandler:]
  -[HAPAccessoryServerBTLE updateConnectionIdleTime:]
  -[HAPAccessoryServerBTLE whbStableIdentifier]
  -[HAPAccessoryServerBTLE initWithPeripheral:name:pairingUsername:statusFlags:stateNumber:stateChanged:connectReason:configNumber:category:setupHash:connectionIdleTime:browser:keyStore:whbStableIdentifier:]
  -[HAPAccessoryServerBTLE connectReason]
  -[HAPAccessoryServerBTLE incrementHAPBTLEMetricsDiscoveryCount]
  -[HAPAccessoryServerBTLE setConnectionIdleTime:]
  -[HAPAccessoryServerBTLE updatePeripheral:]
  -[HAPAccessoryServerBTLE connectionIdleTime]
  -[HAPAccessoryServerBTLE incrementHAPBTLEMetricsConnectionCount]
  -[HAPAccessoryServerBTLE updatePeripheralIdentifier:isPairing:]
  -[HAPAccessoryServerBTLE updateResumeSessionID:]
  -[HAPAccessoryServerBTLE hapBLEProtocolVersion]
  -[HAPAccessoryServerBTLE metricHAPBTLEConnectionCount]
  -[HAPAccessoryServerBTLE setMetricHAPBTLEConnectionCount:]
  -[HAPAccessoryServerBTLE metricHAPBTLEDiscoveryCount]
  -[HAPAccessoryServerBTLE setMetricHAPBTLEDiscoveryCount:]
  -[HAPAccessoryServerBTLE metricHAPBTLEConnectionPerReasonCount]
  -[HAPAccessoryServerBTLE setMetricHAPBTLEConnectionPerReasonCount:]


HAP2AccessoryServerEncodingFactoryThread : NSObject <HAP2AccessoryServerEncodingFactory>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HAP2AccessoryServerEncodingFactoryThread createEncodingWithOperationQueue:accessoryServerMetadata:encodingFeatures:]


HAPAccessoryInfo : HMFObject
 @property  NSString *name
 @property  NSString *modelName
 @property  NSString *manufacturer
 @property  NSNumber *category
 @property  NSString *certificationStatus
 @property  NSString *denylisted
 @property  NSString *ppid
 @property  BOOL authenticated

  // instance methods
  -[HAPAccessoryInfo modelName]
  -[HAPAccessoryInfo name]
  -[HAPAccessoryInfo .cxx_destruct]
  -[HAPAccessoryInfo manufacturer]
  -[HAPAccessoryInfo ppid]
  -[HAPAccessoryInfo authenticated]
  -[HAPAccessoryInfo category]
  -[HAPAccessoryInfo certificationStatus]
  -[HAPAccessoryInfo isDenylisted]
  -[HAPAccessoryInfo isCertified]
  -[HAPAccessoryInfo initWithName:manufacturer:modelName:category:certificationStatus:denylisted:ppid:]
  -[HAPAccessoryInfo denylisted]


HAPAccessoryProtocolInfo : HMFObject
 @property  NSString *deviceIdentifer
 @property  NSNumber *currentStateNumber
 @property  NSNumber *currentConfigNumber
 @property  NSString *modelName
 @property  HMFVersion *protocolVersion
 @property  unsigned char featureFlags
 @property  unsigned char statusFlags
 @property  unsigned short categoryIdentifier
 @property  NSData *setupHash

  // instance methods
  -[HAPAccessoryProtocolInfo modelName]
  -[HAPAccessoryProtocolInfo statusFlags]
  -[HAPAccessoryProtocolInfo protocolVersion]
  -[HAPAccessoryProtocolInfo .cxx_destruct]
  -[HAPAccessoryProtocolInfo featureFlags]
  -[HAPAccessoryProtocolInfo categoryIdentifier]
  -[HAPAccessoryProtocolInfo setupHash]
  -[HAPAccessoryProtocolInfo deviceIdentifer]
  -[HAPAccessoryProtocolInfo initWithIdentifier:currentStateNumber:currentConfigNumber:modelName:protocolVersion:authMethods:statusFlags:categoryIdentifier:setupHash:]
  -[HAPAccessoryProtocolInfo currentStateNumber]
  -[HAPAccessoryProtocolInfo currentConfigNumber]


HAPProtocolMessages : HMFObject
  // class methods
  +[HAPProtocolMessages logCategory]
  +[HAPProtocolMessages constructTokenRequest:outTID:]
  +[HAPProtocolMessages parseTokenResponse:expectedTID:withHeader:outToken:outUUID:]
  +[HAPProtocolMessages constructTokenUpdateRequest:token:outTID:]
  +[HAPProtocolMessages parseTokenUpdateResponse:expectedTID:withHeader:]
  +[HAPProtocolMessages parseInfoResponse:expectedTID:withHeader:]
  +[HAPProtocolMessages constructInfoRequest:outTID:]
  +[HAPProtocolMessages constructAuthChallengeRequest:nonce:outTID:]
  +[HAPProtocolMessages parseAuthChallengeResponse:expectedTID:outChallengeResponse:outMFICert:withHeader:]
  +[HAPProtocolMessages constructRequestHeaderFor:instanceID:outTID:]
  +[HAPProtocolMessages _parseEmptyResponse:expectedTID:withHeader:]
  +[HAPProtocolMessages constructInfoRequest:serviceUUID:outTID:]


HAPCharacteristicWriteRequestTuple : HMFObject <HAP2CharacteristicTupleValue, NSCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  HAPCharacteristic *characteristic
 @property  id value
 @property  NSData *authorizationData
 @property  BOOL timedWrite
 @property  unsigned long writeType
 @property  BOOL includeResponseValue
 @property  NSNumber *enableEvents
 @property  NSData *contextData

  // class methods
  +[HAPCharacteristicWriteRequestTuple writeRequestTupleForCharacteristic:value:authorizationData:timedWrite:responseValue:type:contextData:]
  +[HAPCharacteristicWriteRequestTuple writeRequestTupleForCharacteristic:value:authorizationData:timedWrite:responseValue:type:]

  // instance methods
  -[HAPCharacteristicWriteRequestTuple contextData]
  -[HAPCharacteristicWriteRequestTuple .cxx_destruct]
  -[HAPCharacteristicWriteRequestTuple setContextData:]
  -[HAPCharacteristicWriteRequestTuple setValue:]
  -[HAPCharacteristicWriteRequestTuple value]
  -[HAPCharacteristicWriteRequestTuple copyWithZone:]
  -[HAPCharacteristicWriteRequestTuple characteristic]
  -[HAPCharacteristicWriteRequestTuple setCharacteristic:]
  -[HAPCharacteristicWriteRequestTuple authorizationData]
  -[HAPCharacteristicWriteRequestTuple includeResponseValue]
  -[HAPCharacteristicWriteRequestTuple setAuthorizationData:]
  -[HAPCharacteristicWriteRequestTuple writeType]
  -[HAPCharacteristicWriteRequestTuple setWriteType:]
  -[HAPCharacteristicWriteRequestTuple timedWrite]
  -[HAPCharacteristicWriteRequestTuple setIncludeResponseValue:]
  -[HAPCharacteristicWriteRequestTuple enableEvents]
  -[HAPCharacteristicWriteRequestTuple setEnableEvents:]
  -[HAPCharacteristicWriteRequestTuple setTimedWrite:]


HAPCharacteristicResponseTuple : HMFObject
 @property  HAPCharacteristic *characteristic
 @property  id value
 @property  NSNumber *stateNumber
 @property  NSDate *valueUpdatedTime
 @property  NSData *notificationContext
 @property  NSError *error

  // class methods
  +[HAPCharacteristicResponseTuple responseTupleForCharacteristic:error:]

  // instance methods
  -[HAPCharacteristicResponseTuple .cxx_destruct]
  -[HAPCharacteristicResponseTuple setValue:]
  -[HAPCharacteristicResponseTuple notificationContext]
  -[HAPCharacteristicResponseTuple value]
  -[HAPCharacteristicResponseTuple setError:]
  -[HAPCharacteristicResponseTuple error]
  -[HAPCharacteristicResponseTuple valueUpdatedTime]
  -[HAPCharacteristicResponseTuple setValueUpdatedTime:]
  -[HAPCharacteristicResponseTuple characteristic]
  -[HAPCharacteristicResponseTuple setCharacteristic:]
  -[HAPCharacteristicResponseTuple stateNumber]
  -[HAPCharacteristicResponseTuple setStateNumber:]
  -[HAPCharacteristicResponseTuple setNotificationContext:]


HAPCharacteristicConfigurationRequestTuple : HMFObject
 @property  HAPCharacteristic *characteristic
 @property  BOOL broadcastEnable
 @property  unsigned long broadcastInterval

  // class methods
  +[HAPCharacteristicConfigurationRequestTuple configurationTupleForCharacteristic:broadcastEnable:broadcastInterval:]

  // instance methods
  -[HAPCharacteristicConfigurationRequestTuple .cxx_destruct]
  -[HAPCharacteristicConfigurationRequestTuple characteristic]
  -[HAPCharacteristicConfigurationRequestTuple setCharacteristic:]
  -[HAPCharacteristicConfigurationRequestTuple broadcastEnable]
  -[HAPCharacteristicConfigurationRequestTuple broadcastInterval]
  -[HAPCharacteristicConfigurationRequestTuple setBroadcastEnable:]
  -[HAPCharacteristicConfigurationRequestTuple setBroadcastInterval:]


HAP2AccessoryServerTransportBaseWithDelegate : HAP2AccessoryServerTransportBase <HAP2AccessoryServerTransport>
 @property  <HAP2AccessoryServerTransportDelegate> *delegate
 @property  unsigned long state
 @property  double maxRequestTimeout
 @property  <HAP2AccessoryServerTransportCommon> *underlyingTransport
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HAP2AccessoryServerTransportBaseWithDelegate .cxx_destruct]
  -[HAP2AccessoryServerTransportBaseWithDelegate setDelegate:]
  -[HAP2AccessoryServerTransportBaseWithDelegate delegate]
  -[HAP2AccessoryServerTransportBaseWithDelegate didChangeStateWithError:]


HAP2AccessoryServerPairingDriverPairSetupWorkItem : HAP2AccessoryServerPairingDriverWorkItem <HAPPairSetupSessionClientDelegate>
 @property  <HAP2AccessoryServerPairingDriverDelegate> *delegate
 @property  <HAP2AccessoryServerTransport> *transport
 @property  HAPPairSetupSession *pairingSession
 @property  unsigned long pairSetupType
 @property  BOOL invalidSetupCode
 @property  double backoffInterval
 @property  NSError *cancelError
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAP2AccessoryServerPairingDriverPairSetupWorkItem pairSetupWithType:]

  // instance methods
  -[HAP2AccessoryServerPairingDriverPairSetupWorkItem transport]
  -[HAP2AccessoryServerPairingDriverPairSetupWorkItem .cxx_destruct]
  -[HAP2AccessoryServerPairingDriverPairSetupWorkItem setPairingSession:]
  -[HAP2AccessoryServerPairingDriverPairSetupWorkItem pairingSession]
  -[HAP2AccessoryServerPairingDriverPairSetupWorkItem delegate]
  -[HAP2AccessoryServerPairingDriverPairSetupWorkItem cancelWithError:]
  -[HAP2AccessoryServerPairingDriverPairSetupWorkItem cancelError]
  -[HAP2AccessoryServerPairingDriverPairSetupWorkItem setCancelError:]
  -[HAP2AccessoryServerPairingDriverPairSetupWorkItem pairSetupType]
  -[HAP2AccessoryServerPairingDriverPairSetupWorkItem runForPairingDriver:]
  -[HAP2AccessoryServerPairingDriverPairSetupWorkItem pairSetupSession:didReceiveLocalPairingIdentityRequestWithError:]
  -[HAP2AccessoryServerPairingDriverPairSetupWorkItem pairSetupSession:didPairWithPeer:error:]
  -[HAP2AccessoryServerPairingDriverPairSetupWorkItem pairSetupSession:didReceiveSetupExchangeData:]
  -[HAP2AccessoryServerPairingDriverPairSetupWorkItem pairSetupSessionDidStart:]
  -[HAP2AccessoryServerPairingDriverPairSetupWorkItem pairSetupSession:didStopWithError:]
  -[HAP2AccessoryServerPairingDriverPairSetupWorkItem pairSetupSession:didReceiveSetupCodeRequestWithCompletionHandler:]
  -[HAP2AccessoryServerPairingDriverPairSetupWorkItem pairSetupSession:didReceiveProductData:]
  -[HAP2AccessoryServerPairingDriverPairSetupWorkItem pairSetupSessionDidReceiveInvalidSetupCode:]
  -[HAP2AccessoryServerPairingDriverPairSetupWorkItem pairSetupSession:didReceiveBackoffRequestWithTimeInterval:]
  -[HAP2AccessoryServerPairingDriverPairSetupWorkItem _resetPairingState]
  -[HAP2AccessoryServerPairingDriverPairSetupWorkItem initWithPairSetupType:]
  -[HAP2AccessoryServerPairingDriverPairSetupWorkItem setInvalidSetupCode:]
  -[HAP2AccessoryServerPairingDriverPairSetupWorkItem setBackoffInterval:]
  -[HAP2AccessoryServerPairingDriverPairSetupWorkItem _pairingStoppedWithError:]
  -[HAP2AccessoryServerPairingDriverPairSetupWorkItem isInvalidSetupCode]
  -[HAP2AccessoryServerPairingDriverPairSetupWorkItem backoffInterval]


HAP2AccessoryServerSecureTransportThreadPaired : HAP2AccessoryServerSecureTransportPairVerify
 @property  HAPSecuritySessionEncryption *eventEncryption

  // instance methods
  -[HAP2AccessoryServerSecureTransportThreadPaired .cxx_destruct]
  -[HAP2AccessoryServerSecureTransportThreadPaired securitySessionDidRequestAdditionalDerivedKeyTuples:]
  -[HAP2AccessoryServerSecureTransportThreadPaired securitySessionDidOpen:]
  -[HAP2AccessoryServerSecureTransportThreadPaired securitySession:didCloseWithError:]
  -[HAP2AccessoryServerSecureTransportThreadPaired decryptData:type:error:]
  -[HAP2AccessoryServerSecureTransportThreadPaired eventEncryption]
  -[HAP2AccessoryServerSecureTransportThreadPaired setEventEncryption:]


(HMError)
	// class methods
	+[(HMError) hmErrorWithCode:]
	+[(HMError) hmErrorWithCode:description:reason:suggestion:underlyingError:]
	+[(HMError) hmErrorWithCode:userInfo:]
	+[(HMError) hmInternalErrorWithCode:underlyingError:]
	+[(HMError) hmPrivateErrorWithCode:description:underlyingError:]
	+[(HMError) hmErrorWithCode:description:reason:suggestion:]
	+[(HMError) hmInternalErrorWithCode:]
	+[(HMError) hmPrivateErrorWithCode:]
	+[(HMError) hmInternalErrorWithCode:userInfo:]
	+[(HMError) hmPrivateErrorWithCode:underlyingError:]
	+[(HMError) errorWithOSStatus:]
	+[(HMError) hapErrorWithCode:]
	+[(HMError) hapErrorWithcode:]
	+[(HMError) hapErrorWithcode:description:reason:suggestion:underlyingError:]

	// instance methods
	-[(HMError) isHMError]
	-[(HMError) hmPublicError]
	-[(HMError) isHAPError]

HMFPairingIdentity(HAPKeyStore)
	// instance methods
	-[HMFPairingIdentity(HAPKeyStore) isControllerKey]

(HAPTLVHelpers)
	// class methods
	+[(HAPTLVHelpers) parsedFromData:error:]

	// instance methods
	-[(HAPTLVHelpers) serializeWithError:]

(HAPTLVHelpers)
	// class methods
	+[(HAPTLVHelpers) parsedFromData:error:]

	// instance methods
	-[(HAPTLVHelpers) serializeWithError:]

(HAP2AccessoryServerEncoding)
(HAP2AccessoryServerEncoding)
01 00 0800 /System/Library/Frameworks/CoreBluetooth.framework/CoreBluetooth: CBCentralManager 
01 00 0800 /System/Library/Frameworks/CoreBluetooth.framework/CoreBluetooth: CBCharacteristic 
01 00 0800 /System/Library/Frameworks/CoreBluetooth.framework/CoreBluetooth: CBService 
01 00 0800 /System/Library/Frameworks/CoreBluetooth.framework/CoreBluetooth: CBUUID 
01 00 0a00 /System/Library/PrivateFrameworks/CoreUtils.framework/CoreUtils: CUBonjourBrowser 
01 00 0a00 /System/Library/PrivateFrameworks/CoreUtils.framework/CoreUtils: CUWiFiScanner 
01 00 0500 /System/Library/PrivateFrameworks/EasyConfig.framework/EasyConfig: EasyConfigDevice 
01 00 0e00 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFActivity 
01 00 0e00 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFAttributeDescription 
01 00 0e00 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFBlockOperation 
01 00 0e00 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFNetAddress 
01 00 0e00 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFNetManager 
01 00 0e00 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFNetMonitor 
01 00 0e00 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFOSTransaction 
01 00 0e00 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFObject 
01 00 0e00 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFObjectCacheNSString 
01 00 0e00 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFPairingIdentity 
01 00 0e00 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFPairingKey 
01 00 0e00 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFPowerAssertion 
01 00 0e00 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFPowerLogger 
01 00 0e00 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFPreferences 
01 00 0e00 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFStringIndentation 
01 00 0e00 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFSystemInfo 
01 00 0e00 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFTimer 
01 00 0e00 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFUnfairLock 
01 00 0e00 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFVersion 
01 00 0f00 /System/Library/PrivateFrameworks/HomeKitMetrics.framework/HomeKitMetrics: HMMLogEvent 
01 00 0400 /System/Library/PrivateFrameworks/NearField.framework/NearField: NFHardwareManager 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBackgroundActivityScheduler 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBlockOperation 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantFloatNumber 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexSet 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSLock 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMultiReadUniWriteLock 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNetService 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 1000 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperation 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0900 /System/Library/PrivateFrameworks/CloudServices.framework/CloudServices: SecureBackup 
01 00 0100 /System/Library/PrivateFrameworks/WirelessProximity.framework/WirelessProximity: WPHomeKit 
