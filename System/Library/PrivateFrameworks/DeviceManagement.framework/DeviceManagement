|| __DATA.__data _DMFHighestPolicyPriority
|| __DATA.__data _DMFLowestPolicyPriority
|| __DATA.__objc_data _OBJC_CLASS_$_DMFActivityTransactionRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFApp
|| __DATA.__objc_data _OBJC_CLASS_$_DMFAppManagementInformation
|| __DATA.__objc_data _OBJC_CLASS_$_DMFAppRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFApplication
|| __DATA.__objc_data _OBJC_CLASS_$_DMFApplicationInstallProgress
|| __DATA.__objc_data _OBJC_CLASS_$_DMFAssignUserRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFBatchRequestOperation
|| __DATA.__objc_data _OBJC_CLASS_$_DMFBeginTransactionRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFBeginTransactionResultObject
|| __DATA.__objc_data _OBJC_CLASS_$_DMFBook
|| __DATA.__objc_data _OBJC_CLASS_$_DMFBookmark
|| __DATA.__objc_data _OBJC_CLASS_$_DMFCategoryPolicyMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_DMFCertificate
|| __DATA.__objc_data _OBJC_CLASS_$_DMFClearActivationLockBypassCodeRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFClearRestrictionsPasswordRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFConfigurationOrganization
|| __DATA.__objc_data _OBJC_CLASS_$_DMFConfigurationSource
|| __DATA.__objc_data _OBJC_CLASS_$_DMFControlGroupIdentifier
|| __DATA.__objc_data _OBJC_CLASS_$_DMFControlSessionIdentifier
|| __DATA.__objc_data _OBJC_CLASS_$_DMFDeactivateConfigurationOrganizationRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFDeleteUserRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFDevice
|| __DATA.__objc_data _OBJC_CLASS_$_DMFDevicePropertiesResultObject
|| __DATA.__objc_data _OBJC_CLASS_$_DMFDevicePropertyNotificationSubscriptionRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFDisableLostModeRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFEchoRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFEchoResultObject
|| __DATA.__objc_data _OBJC_CLASS_$_DMFEnableLostModeRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFEndTransactionRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchActivationLockBypassCodeRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchActivationLockBypassCodeResultObject
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchApplicationsRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchApplicationsResultObject
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchAppsRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchAppsResultObject
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchAvailableOSUpdatesRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchAvailableOSUpdatesResultObject
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchCertificatesRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchCertificatesResultObject
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchClassroomInstructorEndpointRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchClassroomInstructorEndpointResultObject
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchConfigurationOrganizationsRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchConfigurationOrganizationsResultObject
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchConfigurationSourceSyncTokenRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchConfigurationSourceSyncTokenResultObject
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchControlGroupIdentifiersRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchControlGroupIdentifiersResultObject
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchDMDStateRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchDMDStateResultObject
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchDeclarationCapabilitiesRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchDeclarationCapabilitiesResultObject
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchDeclarationsRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchDeclarationsResultObject
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchDevicePropertiesRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchDevicePropertiesResultObject
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchGlobalRestrictionsRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchGlobalRestrictionsResultObject
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchInstalledApplicationsRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchInstalledApplicationsResultObject
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchInstalledCertificatesRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchInstalledCertificatesResultObject
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchInstalledProfilesRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchInstalledProfilesResultObject
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchInstalledProvisioningProfilesRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchInstalledProvisioningProfilesResultObject
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchLastLoginDateRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchLastLoginDateResultObject
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchLocationRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchLocationResultObject
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchManagedBooksRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchManagedBooksResultObject
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchOSUpdateStatusRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchOSUpdateStatusResultObject
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchProfilesRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchProfilesResultObject
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchProvisioningProfilesRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchProvisioningProfilesResultObject
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchRestrictionsRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchRestrictionsResultObject
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchSafariBookmarksRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchSafariBookmarksResultObject
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchScreenshotRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchScreenshotResultObject
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchSecurityInformationRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchSecurityInformationResultObject
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchStreamEventsRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchStreamEventsResultObject
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchUsersRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFFetchUsersResultObject
|| __DATA.__objc_data _OBJC_CLASS_$_DMFInstallAppRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFInstallConfigurationRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFInstallManagedBookRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFInstallManagedBookResultObject
|| __DATA.__objc_data _OBJC_CLASS_$_DMFInstallProfileRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFInstallProvisioningProfileRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFInstalledApplication
|| __DATA.__objc_data _OBJC_CLASS_$_DMFInstalledApplicationInstallProgress
|| __DATA.__objc_data _OBJC_CLASS_$_DMFInstalledCertificate
|| __DATA.__objc_data _OBJC_CLASS_$_DMFInstalledPayload
|| __DATA.__objc_data _OBJC_CLASS_$_DMFInstalledProfile
|| __DATA.__objc_data _OBJC_CLASS_$_DMFInstalledProvisioningProfile
|| __DATA.__objc_data _OBJC_CLASS_$_DMFInviteUserToVPPRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFJoinControlGroupRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFLeaveControlGroupRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFLockDeviceRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFLogOutUserRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFLogoutUserRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFMDMv1InstallAppRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFMDMv1InstallAppResultObject
|| __DATA.__objc_data _OBJC_CLASS_$_DMFMDMv1StartManagingAppRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFMDMv1UpdateAppRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFManagementLockRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFManagementUnlockRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFOSUpdate
|| __DATA.__objc_data _OBJC_CLASS_$_DMFOpenAppRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFOpenURLRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFPlayLostModeSoundRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFProcessDeclarationsRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFProcessStatusRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFProfile
|| __DATA.__objc_data _OBJC_CLASS_$_DMFProfilePayload
|| __DATA.__objc_data _OBJC_CLASS_$_DMFProvisioningProfile
|| __DATA.__objc_data _OBJC_CLASS_$_DMFRefreshCellularPlansRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFRefreshStatusRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFRefreshStatusResultObject
|| __DATA.__objc_data _OBJC_CLASS_$_DMFRemoveAppRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFRemoveConfigurationRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFRemoveManagedBookRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFRemoveOSUpdateRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFRemoveProfileRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFRemoveProtectedProfileRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFRemoveProvisioningProfileRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFRequestAirPlayMirroringRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFRequestAirPlayMirroringResultObject
|| __DATA.__objc_data _OBJC_CLASS_$_DMFRestartDeviceRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFScheduleOSUpdateRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFScheduleOSUpdateResultObject
|| __DATA.__objc_data _OBJC_CLASS_$_DMFSecurityInformation
|| __DATA.__objc_data _OBJC_CLASS_$_DMFSendEventRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFSetAirPlayRouteRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFSetAppAnalyticsEnabledRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFSetAppAssociatedDomainsEnableDirectDownloadsRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFSetAppAssociatedDomainsRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFSetAppConfigurationRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFSetAppExtensionUUIDsRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFSetAppRemovabilityRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFSetAppVPNUUIDRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFSetBluetoothEnabledRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFSetDataRoamingEnabledRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFSetDeviceNameRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFSetDiagnosticSubmissionEnabledRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFSetInterfaceOrientationRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFSetMaximumResidentUsersRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFSetPasscodeLockGracePeriodRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFSetPersonalHotspotEnabledRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFSetVoiceRoamingEnabledRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFSetVolumeRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFShutDownDeviceRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFStartAppLockRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFStopAirPlayMirroringRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFStopAppLockRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFStopManagingAppRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFStopManagingBooksRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFTriggerDiagnosticsRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFUpdateAppRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFUpdateDeclarationsRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFUpdateEnqueuedCommandsRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFUpdatePickableAirPlayRoutesRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFUser
|| __DATA.__objc_data _OBJC_CLASS_$_DMFValidateApplicationsRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DMFWebsitePolicyMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_DMFiCloudPolicyMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFActivityTransactionRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFApp
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFAppManagementInformation
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFAppRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFApplication
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFApplicationInstallProgress
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFAssignUserRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFBatchRequestOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFBeginTransactionRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFBeginTransactionResultObject
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFBook
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFBookmark
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFCategoryPolicyMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFCertificate
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFClearActivationLockBypassCodeRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFClearRestrictionsPasswordRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFConfigurationOrganization
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFConfigurationSource
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFControlGroupIdentifier
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFControlSessionIdentifier
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFDeactivateConfigurationOrganizationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFDeleteUserRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFDevice
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFDevicePropertiesResultObject
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFDevicePropertyNotificationSubscriptionRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFDisableLostModeRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFEchoRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFEchoResultObject
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFEnableLostModeRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFEndTransactionRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchActivationLockBypassCodeRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchActivationLockBypassCodeResultObject
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchApplicationsRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchApplicationsResultObject
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchAppsRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchAppsResultObject
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchAvailableOSUpdatesRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchAvailableOSUpdatesResultObject
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchCertificatesRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchCertificatesResultObject
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchClassroomInstructorEndpointRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchClassroomInstructorEndpointResultObject
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchConfigurationOrganizationsRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchConfigurationOrganizationsResultObject
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchConfigurationSourceSyncTokenRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchConfigurationSourceSyncTokenResultObject
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchControlGroupIdentifiersRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchControlGroupIdentifiersResultObject
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchDMDStateRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchDMDStateResultObject
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchDeclarationCapabilitiesRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchDeclarationCapabilitiesResultObject
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchDeclarationsRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchDeclarationsResultObject
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchDevicePropertiesRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchDevicePropertiesResultObject
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchGlobalRestrictionsRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchGlobalRestrictionsResultObject
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchInstalledApplicationsRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchInstalledApplicationsResultObject
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchInstalledCertificatesRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchInstalledCertificatesResultObject
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchInstalledProfilesRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchInstalledProfilesResultObject
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchInstalledProvisioningProfilesRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchInstalledProvisioningProfilesResultObject
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchLastLoginDateRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchLastLoginDateResultObject
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchLocationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchLocationResultObject
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchManagedBooksRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchManagedBooksResultObject
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchOSUpdateStatusRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchOSUpdateStatusResultObject
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchProfilesRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchProfilesResultObject
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchProvisioningProfilesRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchProvisioningProfilesResultObject
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchRestrictionsRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchRestrictionsResultObject
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchSafariBookmarksRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchSafariBookmarksResultObject
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchScreenshotRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchScreenshotResultObject
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchSecurityInformationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchSecurityInformationResultObject
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchStreamEventsRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchStreamEventsResultObject
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchUsersRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFFetchUsersResultObject
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFInstallAppRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFInstallConfigurationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFInstallManagedBookRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFInstallManagedBookResultObject
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFInstallProfileRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFInstallProvisioningProfileRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFInstalledApplication
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFInstalledApplicationInstallProgress
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFInstalledCertificate
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFInstalledPayload
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFInstalledProfile
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFInstalledProvisioningProfile
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFInviteUserToVPPRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFJoinControlGroupRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFLeaveControlGroupRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFLockDeviceRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFLogOutUserRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFLogoutUserRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFMDMv1InstallAppRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFMDMv1InstallAppResultObject
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFMDMv1StartManagingAppRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFMDMv1UpdateAppRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFManagementLockRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFManagementUnlockRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFOSUpdate
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFOpenAppRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFOpenURLRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFPlayLostModeSoundRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFProcessDeclarationsRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFProcessStatusRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFProfile
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFProfilePayload
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFProvisioningProfile
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFRefreshCellularPlansRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFRefreshStatusRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFRefreshStatusResultObject
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFRemoveAppRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFRemoveConfigurationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFRemoveManagedBookRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFRemoveOSUpdateRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFRemoveProfileRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFRemoveProtectedProfileRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFRemoveProvisioningProfileRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFRequestAirPlayMirroringRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFRequestAirPlayMirroringResultObject
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFRestartDeviceRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFScheduleOSUpdateRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFScheduleOSUpdateResultObject
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFSecurityInformation
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFSendEventRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFSetAirPlayRouteRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFSetAppAnalyticsEnabledRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFSetAppAssociatedDomainsEnableDirectDownloadsRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFSetAppAssociatedDomainsRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFSetAppConfigurationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFSetAppExtensionUUIDsRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFSetAppRemovabilityRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFSetAppVPNUUIDRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFSetBluetoothEnabledRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFSetDataRoamingEnabledRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFSetDeviceNameRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFSetDiagnosticSubmissionEnabledRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFSetInterfaceOrientationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFSetMaximumResidentUsersRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFSetPasscodeLockGracePeriodRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFSetPersonalHotspotEnabledRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFSetVoiceRoamingEnabledRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFSetVolumeRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFShutDownDeviceRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFStartAppLockRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFStopAirPlayMirroringRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFStopAppLockRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFStopManagingAppRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFStopManagingBooksRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFTriggerDiagnosticsRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFUpdateAppRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFUpdateDeclarationsRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFUpdateEnqueuedCommandsRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFUpdatePickableAirPlayRoutesRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFUser
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFValidateApplicationsRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFWebsitePolicyMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_DMFiCloudPolicyMonitor
|| __DATA_CONST.__const _DMFAppStatusDidChangeNotificationName
|| __DATA_CONST.__const _DMFBundleIdentifierErrorKey
|| __DATA_CONST.__const _DMFCEMReasonCodeBad
|| __DATA_CONST.__const _DMFCEMReasonCodeConflict
|| __DATA_CONST.__const _DMFCEMReasonCodeCouldNotDecrypt
|| __DATA_CONST.__const _DMFCEMReasonCodeInvalidSignature
|| __DATA_CONST.__const _DMFCEMReasonCodeOtherConflict
|| __DATA_CONST.__const _DMFCEMReasonCodePayloadPhase
|| __DATA_CONST.__const _DMFCEMReasonCodePendingConfigurations
|| __DATA_CONST.__const _DMFCEMReasonCodePendingTether
|| __DATA_CONST.__const _DMFCEMReasonCodePermissionDenied
|| __DATA_CONST.__const _DMFCEMReasonCodeUnknown
|| __DATA_CONST.__const _DMFCEMReasonCodeUnknownPayloadKeys
|| __DATA_CONST.__const _DMFCommandPayloadDictionaryKey
|| __DATA_CONST.__const _DMFCommandPayloadIdentifierKey
|| __DATA_CONST.__const _DMFCommandPayloadRequiresNetworkTetherKey
|| __DATA_CONST.__const _DMFCommandPayloadStatusKey
|| __DATA_CONST.__const _DMFCommandPayloadTypeKey
|| __DATA_CONST.__const _DMFCommandStateAssetsUsedKey
|| __DATA_CONST.__const _DMFCommandStateErrorChainErrorCodeKey
|| __DATA_CONST.__const _DMFCommandStateErrorChainErrorDomainKey
|| __DATA_CONST.__const _DMFCommandStateErrorChainKey
|| __DATA_CONST.__const _DMFCommandStateErrorChainLocalizedDescriptionKey
|| __DATA_CONST.__const _DMFCommandStateErrorChainUSEnglishDescriptionKey
|| __DATA_CONST.__const _DMFCommandStatePayloadKey
|| __DATA_CONST.__const _DMFCommandStateReasonCodeKey
|| __DATA_CONST.__const _DMFCommandStateReasonKey
|| __DATA_CONST.__const _DMFCommandStateServerHashKey
|| __DATA_CONST.__const _DMFCommandStateStatusKey
|| __DATA_CONST.__const _DMFCommandStateTimestampKey
|| __DATA_CONST.__const _DMFCommandStatusExecuted
|| __DATA_CONST.__const _DMFCommandStatusFailed
|| __DATA_CONST.__const _DMFCommandStatusMessageInReplyToKey
|| __DATA_CONST.__const _DMFCommandStatusMessageStatesKey
|| __DATA_CONST.__const _DMFCommandStatusMessagesKey
|| __DATA_CONST.__const _DMFCommandStatusPendingClient
|| __DATA_CONST.__const _DMFCommandStatusQueued
|| __DATA_CONST.__const _DMFCommandStatusRemoved
|| __DATA_CONST.__const _DMFConfigurationOrganizationIdentifierErrorKey
|| __DATA_CONST.__const _DMFConfigurationOrganizationTypeFamily
|| __DATA_CONST.__const _DMFConfigurationOrganizationTypeInternal
|| __DATA_CONST.__const _DMFConfigurationOrganizationTypePersonal
|| __DATA_CONST.__const _DMFConfigurationOrganizationTypeScreenTime
|| __DATA_CONST.__const _DMFConfigurationPayloadIdentifierErrorKey
|| __DATA_CONST.__const _DMFConnectionAppleIDKey
|| __DATA_CONST.__const _DMFConnectionSenderPIDKey
|| __DATA_CONST.__const _DMFConnectionTargetUIDKey
|| __DATA_CONST.__const _DMFCoreTelephonyErrorCodeKey
|| __DATA_CONST.__const _DMFCoreTelephonyErrorDomainKey
|| __DATA_CONST.__const _DMFCoreTelephonyErrorResponseKey
|| __DATA_CONST.__const _DMFDeclarationEventsMessageEventPayloadKey
|| __DATA_CONST.__const _DMFDeclarationEventsMessageEventTimestampKey
|| __DATA_CONST.__const _DMFDeclarationEventsMessageEventTypeKey
|| __DATA_CONST.__const _DMFDeclarationEventsMessageInReplyToKey
|| __DATA_CONST.__const _DMFDeclarationEventsMessagesKey
|| __DATA_CONST.__const _DMFDeclarationPayloadAppsKey
|| __DATA_CONST.__const _DMFDeclarationPayloadCategoriesKey
|| __DATA_CONST.__const _DMFDeclarationPayloadDataKey
|| __DATA_CONST.__const _DMFDeclarationPayloadHostnamesKey
|| __DATA_CONST.__const _DMFDeclarationPayloadIdentifierKey
|| __DATA_CONST.__const _DMFDeclarationPayloadModeAllowed
|| __DATA_CONST.__const _DMFDeclarationPayloadModeAsk
|| __DATA_CONST.__const _DMFDeclarationPayloadModeDisallowed
|| __DATA_CONST.__const _DMFDeclarationPayloadModeKey
|| __DATA_CONST.__const _DMFDeclarationPayloadModeOverride
|| __DATA_CONST.__const _DMFDeclarationPayloadModeWarn
|| __DATA_CONST.__const _DMFDeclarationPayloadRequiresNetworkTetherKey
|| __DATA_CONST.__const _DMFDeclarationPayloadServerHashKey
|| __DATA_CONST.__const _DMFDeclarationPayloadTypeKey
|| __DATA_CONST.__const _DMFDeclarationStateAssetsUsedKey
|| __DATA_CONST.__const _DMFDeclarationStateErrorChainErrorCodeKey
|| __DATA_CONST.__const _DMFDeclarationStateErrorChainErrorDomainKey
|| __DATA_CONST.__const _DMFDeclarationStateErrorChainKey
|| __DATA_CONST.__const _DMFDeclarationStateErrorChainLocalizedDescriptionKey
|| __DATA_CONST.__const _DMFDeclarationStateErrorChainUSEnglishDescriptionKey
|| __DATA_CONST.__const _DMFDeclarationStatePayloadKey
|| __DATA_CONST.__const _DMFDeclarationStatePredicateErrorKey
|| __DATA_CONST.__const _DMFDeclarationStatePredicateLastEvaluationValueKey
|| __DATA_CONST.__const _DMFDeclarationStatePredicatePayloadStatusExpiredNotificationTimesKey
|| __DATA_CONST.__const _DMFDeclarationStatePredicatePayloadStatusKey
|| __DATA_CONST.__const _DMFDeclarationStatePredicatePayloadStatusRemainingTimeKey
|| __DATA_CONST.__const _DMFDeclarationStatePredicateSubPredicatesKey
|| __DATA_CONST.__const _DMFDeclarationStatePredicateTypeKey
|| __DATA_CONST.__const _DMFDeclarationStateReasonCodeKey
|| __DATA_CONST.__const _DMFDeclarationStateReasonKey
|| __DATA_CONST.__const _DMFDeclarationStateServerHashKey
|| __DATA_CONST.__const _DMFDeclarationStateStatusKey
|| __DATA_CONST.__const _DMFDeclarationStateTimestampKey
|| __DATA_CONST.__const _DMFDeclarationStatusActive
|| __DATA_CONST.__const _DMFDeclarationStatusFailed
|| __DATA_CONST.__const _DMFDeclarationStatusFailedRemove
|| __DATA_CONST.__const _DMFDeclarationStatusInactive
|| __DATA_CONST.__const _DMFDeclarationStatusInstalled
|| __DATA_CONST.__const _DMFDeclarationStatusMessageInReplyToKey
|| __DATA_CONST.__const _DMFDeclarationStatusMessageStateKey
|| __DATA_CONST.__const _DMFDeclarationStatusMessageStatesKey
|| __DATA_CONST.__const _DMFDeclarationStatusMessagesKey
|| __DATA_CONST.__const _DMFDeclarationStatusPendingClient
|| __DATA_CONST.__const _DMFDeclarationStatusPendingServer
|| __DATA_CONST.__const _DMFDeclarationStatusQueued
|| __DATA_CONST.__const _DMFDeclarationStatusRemoved
|| __DATA_CONST.__const _DMFDeclarationStatusUninstalled
|| __DATA_CONST.__const _DMFDeviceActiveAirPlayRouteKey
|| __DATA_CONST.__const _DMFDeviceActiveManagedUsersKey
|| __DATA_CONST.__const _DMFDeviceAppAnalyticsEnabledKey
|| __DATA_CONST.__const _DMFDeviceApplicationsKey
|| __DATA_CONST.__const _DMFDeviceAutoSetupAdminAccountsKey
|| __DATA_CONST.__const _DMFDeviceAvailableAirPlayRoutesKey
|| __DATA_CONST.__const _DMFDeviceAvailableBytesKey
|| __DATA_CONST.__const _DMFDeviceAvailableCapacityKey
|| __DATA_CONST.__const _DMFDeviceAwaitingConfigurationKey
|| __DATA_CONST.__const _DMFDeviceBatteryLevelKey
|| __DATA_CONST.__const _DMFDeviceBluetoothMACKey
|| __DATA_CONST.__const _DMFDeviceBuildVersionKey
|| __DATA_CONST.__const _DMFDeviceCapacityKey
|| __DATA_CONST.__const _DMFDeviceCarrierSettingsVersionKey
|| __DATA_CONST.__const _DMFDeviceCellularTechnologyKey
|| __DATA_CONST.__const _DMFDeviceChargingStateKey
|| __DATA_CONST.__const _DMFDeviceCurrentCarrierNetworkKey
|| __DATA_CONST.__const _DMFDeviceCurrentMCCKey
|| __DATA_CONST.__const _DMFDeviceCurrentMNCKey
|| __DATA_CONST.__const _DMFDeviceDataRoamingEnabledKey
|| __DATA_CONST.__const _DMFDeviceDestinationIdentifierKey
|| __DATA_CONST.__const _DMFDeviceDeviceOrientationKey
|| __DATA_CONST.__const _DMFDeviceDiagnosticSubmissionEnabledKey
|| __DATA_CONST.__const _DMFDeviceEASIdentifierKey
|| __DATA_CONST.__const _DMFDeviceEIDKey
|| __DATA_CONST.__const _DMFDeviceEnforcedSoftwareUpdateDelayKey
|| __DATA_CONST.__const _DMFDeviceHostNameKey
|| __DATA_CONST.__const _DMFDeviceICCIDKey
|| __DATA_CONST.__const _DMFDeviceIMEIKey
|| __DATA_CONST.__const _DMFDeviceIdentifierKey
|| __DATA_CONST.__const _DMFDeviceInSingleAppModeKey
|| __DATA_CONST.__const _DMFDeviceInstalledApplicationsKey
|| __DATA_CONST.__const _DMFDeviceInstalledExtensionsKey
|| __DATA_CONST.__const _DMFDeviceInterfaceOrientationKey
|| __DATA_CONST.__const _DMFDeviceIsActivationLockEnabledKey
|| __DATA_CONST.__const _DMFDeviceIsAppleInternalKey
|| __DATA_CONST.__const _DMFDeviceIsCloudBackupEnabledKey
|| __DATA_CONST.__const _DMFDeviceIsDNDInEffectKey
|| __DATA_CONST.__const _DMFDeviceIsDeviceLocatorServiceEnabledKey
|| __DATA_CONST.__const _DMFDeviceIsEphemeralMultiUserKey
|| __DATA_CONST.__const _DMFDeviceIsLostModeEnabledKey
|| __DATA_CONST.__const _DMFDeviceIsNetworkTetheredKey
|| __DATA_CONST.__const _DMFDeviceIsRoamingKey
|| __DATA_CONST.__const _DMFDeviceIsSupervisedKey
|| __DATA_CONST.__const _DMFDeviceLanguagesKey
|| __DATA_CONST.__const _DMFDeviceLastCloudBackupDateKey
|| __DATA_CONST.__const _DMFDeviceLocalHostNameKey
|| __DATA_CONST.__const _DMFDeviceLocalesKey
|| __DATA_CONST.__const _DMFDeviceLockStateKey
|| __DATA_CONST.__const _DMFDeviceMEIDKey
|| __DATA_CONST.__const _DMFDeviceManagementLockPasscodeKey
|| __DATA_CONST.__const _DMFDeviceMarketingNameKey
|| __DATA_CONST.__const _DMFDeviceMaximumResidentUsersKey
|| __DATA_CONST.__const _DMFDeviceModelKey
|| __DATA_CONST.__const _DMFDeviceModelNameKey
|| __DATA_CONST.__const _DMFDeviceModemFirmwareVersionKey
|| __DATA_CONST.__const _DMFDeviceNameKey
|| __DATA_CONST.__const _DMFDeviceOSUpdateSettingsKey
|| __DATA_CONST.__const _DMFDeviceOSVersionKey
|| __DATA_CONST.__const _DMFDeviceOrientationLockedKey
|| __DATA_CONST.__const _DMFDevicePasscodeEnabledKey
|| __DATA_CONST.__const _DMFDevicePersonalHotspotEnabledKey
|| __DATA_CONST.__const _DMFDevicePhoneNumberKey
|| __DATA_CONST.__const _DMFDevicePlatformKey
|| __DATA_CONST.__const _DMFDevicePrimaryOpenApplicationKey
|| __DATA_CONST.__const _DMFDeviceProductNameKey
|| __DATA_CONST.__const _DMFDevicePropertiesDidChangeNotificationName
|| __DATA_CONST.__const _DMFDeviceSIMCarrierNetworkKey
|| __DATA_CONST.__const _DMFDeviceScreenStateKey
|| __DATA_CONST.__const _DMFDeviceSecondaryOpenApplicationKey
|| __DATA_CONST.__const _DMFDeviceSerialNumberKey
|| __DATA_CONST.__const _DMFDeviceServiceSubscriptionIsDataPreferredKey
|| __DATA_CONST.__const _DMFDeviceServiceSubscriptionIsVoicePreferredKey
|| __DATA_CONST.__const _DMFDeviceServiceSubscriptionLabelIDKey
|| __DATA_CONST.__const _DMFDeviceServiceSubscriptionLabelKey
|| __DATA_CONST.__const _DMFDeviceServiceSubscriptionSlotKey
|| __DATA_CONST.__const _DMFDeviceServiceSubscriptionsKey
|| __DATA_CONST.__const _DMFDeviceSkippedSetupPanesKey
|| __DATA_CONST.__const _DMFDeviceSubscriberCarrierNetworkKey
|| __DATA_CONST.__const _DMFDeviceSubscriberMCCKey
|| __DATA_CONST.__const _DMFDeviceSubscriberMNCKey
|| __DATA_CONST.__const _DMFDeviceSystemIntegrityProtectionEnabledKey
|| __DATA_CONST.__const _DMFDeviceSystemNameKey
|| __DATA_CONST.__const _DMFDeviceSystemVersionKey
|| __DATA_CONST.__const _DMFDeviceTypeKey
|| __DATA_CONST.__const _DMFDeviceUniqueIdentifierKey
|| __DATA_CONST.__const _DMFDeviceUserDisplayNameKey
|| __DATA_CONST.__const _DMFDeviceUserFamilyNameKey
|| __DATA_CONST.__const _DMFDeviceUserGivenNameKey
|| __DATA_CONST.__const _DMFDeviceUserIdentifierKey
|| __DATA_CONST.__const _DMFDeviceUserImageURLKey
|| __DATA_CONST.__const _DMFDeviceUserLoginStateKey
|| __DATA_CONST.__const _DMFDeviceVoiceRoamingEnabledKey
|| __DATA_CONST.__const _DMFDeviceVolumeKey
|| __DATA_CONST.__const _DMFDeviceWiFiMACKey
|| __DATA_CONST.__const _DMFDeviceXsanConfigurationKey
|| __DATA_CONST.__const _DMFDeviceiTunesStoreAccountHashKey
|| __DATA_CONST.__const _DMFDeviceiTunesStoreAccountIsActiveKey
|| __DATA_CONST.__const _DMFEffectivePolicyTypeApplication
|| __DATA_CONST.__const _DMFEffectivePolicyTypeApplicationCategory
|| __DATA_CONST.__const _DMFEffectivePolicyTypeCategory
|| __DATA_CONST.__const _DMFEffectivePolicyTypeWeb
|| __DATA_CONST.__const _DMFEffectivePolicyTypeWebCategory
|| __DATA_CONST.__const _DMFEffectivePolicyTypeiCloudAccountLogout
|| __DATA_CONST.__const _DMFEmergencyModeChangedNotification
|| __DATA_CONST.__const _DMFEmergencyModeMachServiceName
|| __DATA_CONST.__const _DMFEntitlementsApplicationIdentifierKey
|| __DATA_CONST.__const _DMFErrorDomain
|| __DATA_CONST.__const _DMFErrorFailedConfigurationDatabaseStoreKey
|| __DATA_CONST.__const _DMFInvalidParameterErrorKey
|| __DATA_CONST.__const _DMFInvalidPropertyErrorKey
|| __DATA_CONST.__const _DMFItemNameErrorKey
|| __DATA_CONST.__const _DMFItemPathErrorKey
|| __DATA_CONST.__const _DMFMachServiceName
|| __DATA_CONST.__const _DMFPolicyMachServiceName
|| __DATA_CONST.__const _DMFProfileIdentifierErrorKey
|| __DATA_CONST.__const _DMFRMEchoStatusFail
|| __DATA_CONST.__const _DMFRMEchoStatusOK
|| __DATA_CONST.__const _DMFRMEchoStatusPending
|| __DATA_CONST.__const _DMFSecuirtySupportsFileLevelEncryptionKey
|| __DATA_CONST.__const _DMFSecurityFirewallSettingsKey
|| __DATA_CONST.__const _DMFSecurityFirmwarePasswordStatusKey
|| __DATA_CONST.__const _DMFSecurityFullDiskEncryptionEnabledKey
|| __DATA_CONST.__const _DMFSecurityFullDiskEncryptionHasInstitutionalRecoveryKey
|| __DATA_CONST.__const _DMFSecurityFullDiskEncryptionHasPersonalRecoveryKey
|| __DATA_CONST.__const _DMFSecurityPasscodeIsCompliantWithGlobalRestrictionsKey
|| __DATA_CONST.__const _DMFSecurityPasscodeIsCompliantWithProfileRestrictionsKey
|| __DATA_CONST.__const _DMFSecurityPasscodeIsSetKey
|| __DATA_CONST.__const _DMFSecurityPasscodeLockGracePeriodEnforcedKey
|| __DATA_CONST.__const _DMFSecurityPasscodeLockGracePeriodKey
|| __DATA_CONST.__const _DMFSecuritySupportsBlockLevelEncryptionKey
|| __DATA_CONST.__const _DMFSecuritySystemIntegrityProtectionEnabledKey
|| __DATA_CONST.__const _DMFURLStringErrorKey
|| __DATA_CONST.__const _DMFiCloudAccountDidChangeDarwinNotification
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DMFApplicationPolicyMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DMFCommunicationPolicyMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DMFConfigurationSourceClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DMFConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DMFCreateConfigurationOrganizationRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DMFEffectivePolicy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DMFEmergencyModeMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DMFOSStateHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DMFPolicyMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DMFPolicyRegistration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DMFPrioritizedPolicy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DMFRegisterConfigurationSourceRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DMFReportingRequirements
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DMFSetDeclarationsRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DMFTaskRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DMFApplicationPolicyMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DMFCommunicationPolicyMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DMFConfigurationSourceClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DMFConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DMFCreateConfigurationOrganizationRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DMFEffectivePolicy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DMFEmergencyModeMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DMFOSStateHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DMFPolicyMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DMFPolicyRegistration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DMFPrioritizedPolicy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DMFRegisterConfigurationSourceRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DMFReportingRequirements
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DMFSetDeclarationsRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DMFTaskRequest
|| __TEXT.__const _DMFReportingRequirementsUpdateCoalescenceIntervalDefault
|| __TEXT.__text _DMFAllConfigurationOrganizationTypes
|| __TEXT.__text _DMFAppLog
|| __TEXT.__text _DMFConfigurationEngineLog
|| __TEXT.__text _DMFConfigurationSourceClientXPCInterface
|| __TEXT.__text _DMFEmergencyModeLog
|| __TEXT.__text _DMFErrorWithCodeAndUserInfo
|| __TEXT.__text _DMFInterfaceOrientationIsValid
|| __TEXT.__text _DMFOSUpdateLog
|| __TEXT.__text _DMFObjectDescription
|| __TEXT.__text _DMFObjectDescriptionWithProperties
|| __TEXT.__text _DMFPersonalHotspotLog
|| __TEXT.__text _DMFPolicyLog
|| __TEXT.__text _DMFPolicyUnlocalizedDisplayName
|| __TEXT.__text _DMFServerLog
__ AppSupport: _CPCopyBundleIdentifierAndTeamFromApplicationIdentifier
__ Catalyst: _CATErrorWithDomainCodeAndUserInfo
__ Catalyst: _CATFormattedStringForKey
__ Catalyst: _OBJC_CLASS_$_CATOperation
__ Catalyst: _OBJC_CLASS_$_CATOperationQueue
__ Catalyst: _OBJC_CLASS_$_CATTaskClient
__ Catalyst: _OBJC_CLASS_$_CATTaskRequest
__ Catalyst: _OBJC_CLASS_$_CATTaskResultObject
__ Catalyst: _OBJC_CLASS_$_CATXPCTransport
__ Catalyst: _OBJC_METACLASS_$_CATOperation
__ Catalyst: _OBJC_METACLASS_$_CATTaskRequest
__ Catalyst: _OBJC_METACLASS_$_CATTaskResultObject
__ Categories: _CTCategoryIdentifierProductivity
__ Categories: _CTCategoryIdentifierSocialNetworking
__ Categories: _CTCategoryIdentifierSystemBlockable
__ Categories: _CTCategoryIdentifierSystemHidden
__ Categories: _CTCategoryIdentifierSystemUnblockable
__ Categories: _OBJC_CLASS_$_CTCategories
__ CoreData: _OBJC_CLASS_$_NSManagedObject
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSInvocation
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreLocation: _OBJC_CLASS_$_CLLocation
__ CoreServices: _OBJC_CLASS_$_LSApplicationRecord
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSHomeDirectoryForUser
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSSelectorFromString
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBlockOperation
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSConditionLock
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_CLASS_$_NSXPCListener
__ Foundation: _OBJC_CLASS_$_NSXPCListenerEndpoint
__ MobileKeyBag: _MKBUserUnlockedSinceBoot
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __dispatch_source_type_data_or
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_merge_data
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_suspend
__ libSystem.B.dylib: _getuid
__ libSystem.B.dylib: _inet_addr
__ libSystem.B.dylib: _inet_ntoa
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_is_valid_token
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_state_add_handler
__ libSystem.B.dylib: _os_state_remove_handler
__ libSystem.B.dylib: _os_transaction_create
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x27
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
DMFActivityTransactionRequest : DMFTaskRequest
 @property  NSString *name

  // class methods
  +[DMFActivityTransactionRequest supportsSecureCoding]
  +[DMFActivityTransactionRequest isPermittedOnUserConnection]
  +[DMFActivityTransactionRequest isPermittedOnSystemConnection]
  +[DMFActivityTransactionRequest permittedPlatforms]

  // instance methods
  -[DMFActivityTransactionRequest encodeWithCoder:]
  -[DMFActivityTransactionRequest .cxx_destruct]
  -[DMFActivityTransactionRequest setName:]
  -[DMFActivityTransactionRequest name]
  -[DMFActivityTransactionRequest initWithCoder:]


DMFApp : NSObject <NSCopying, NSSecureCoding>
 @property  unsigned long type
 @property  NSString *displayName
 @property  NSString *bundleIdentifier
 @property  NSNumber *storeItemIdentifier
 @property  NSNumber *externalVersionIdentifier
 @property  NSString *version
 @property  NSString *shortVersion
 @property  NSNumber *staticUsage
 @property  NSNumber *dynamicUsage
 @property  NSNumber *onDemandResourcesUsage
 @property  NSNumber *sharedUsage
 @property  unsigned long installationState
 @property  BOOL isPlaceholder
 @property  BOOL isRestricted
 @property  BOOL isBlocked
 @property  BOOL isUserBasedVPP
 @property  BOOL isDeviceBasedVPP
 @property  BOOL isLicenseExpired
 @property  BOOL isLicenseRevoked
 @property  BOOL isUPP
 @property  BOOL isValidated
 @property  BOOL isAppClip
 @property  BOOL isAppStoreVendable
 @property  BOOL isBetaApp
 @property  BOOL isAdHocCodeSigned
 @property  BOOL hasUpdateAvailable
 @property  NSString *VPNUUIDString
 @property  NSString *contentFilterUUIDString
 @property  NSString *DNSProxyUUIDString
 @property  NSArray *associatedDomains
 @property  NSNumber *associatedDomainsEnableDirectDownloads
 @property  NSNumber *removable
 @property  NSDictionary *configuration
 @property  NSDictionary *feedback
 @property  DMFAppManagementInformation *managementInformation

  // class methods
  +[DMFApp supportsSecureCoding]
  +[DMFApp stringForInstallationState:]

  // instance methods
  -[DMFApp isBlocked]
  -[DMFApp isRestricted]
  -[DMFApp setConfiguration:]
  -[DMFApp sharedUsage]
  -[DMFApp feedback]
  -[DMFApp isAppStoreVendable]
  -[DMFApp storeItemIdentifier]
  -[DMFApp encodeWithCoder:]
  -[DMFApp type]
  -[DMFApp configuration]
  -[DMFApp dynamicUsage]
  -[DMFApp isPlaceholder]
  -[DMFApp isBetaApp]
  -[DMFApp .cxx_destruct]
  -[DMFApp setIsAppClip:]
  -[DMFApp setDisplayName:]
  -[DMFApp setBundleIdentifier:]
  -[DMFApp setType:]
  -[DMFApp version]
  -[DMFApp bundleIdentifier]
  -[DMFApp setStoreItemIdentifier:]
  -[DMFApp staticUsage]
  -[DMFApp copyWithZone:]
  -[DMFApp isAppClip]
  -[DMFApp displayName]
  -[DMFApp setVersion:]
  -[DMFApp isDeviceBasedVPP]
  -[DMFApp associatedDomains]
  -[DMFApp setAssociatedDomains:]
  -[DMFApp isEqual:]
  -[DMFApp onDemandResourcesUsage]
  -[DMFApp setFeedback:]
  -[DMFApp setIsPlaceholder:]
  -[DMFApp initWithCoder:]
  -[DMFApp removable]
  -[DMFApp externalVersionIdentifier]
  -[DMFApp isAdHocCodeSigned]
  -[DMFApp setIsRestricted:]
  -[DMFApp setRemovable:]
  -[DMFApp setIsBlocked:]
  -[DMFApp _stringForType:]
  -[DMFApp setExternalVersionIdentifier:]
  -[DMFApp shortVersion]
  -[DMFApp setShortVersion:]
  -[DMFApp setIsDeviceBasedVPP:]
  -[DMFApp isValidated]
  -[DMFApp setStaticUsage:]
  -[DMFApp setDynamicUsage:]
  -[DMFApp setOnDemandResourcesUsage:]
  -[DMFApp setSharedUsage:]
  -[DMFApp installationState]
  -[DMFApp setInstallationState:]
  -[DMFApp isUserBasedVPP]
  -[DMFApp setIsUserBasedVPP:]
  -[DMFApp isLicenseExpired]
  -[DMFApp setIsLicenseExpired:]
  -[DMFApp isLicenseRevoked]
  -[DMFApp setIsLicenseRevoked:]
  -[DMFApp isUPP]
  -[DMFApp setIsUPP:]
  -[DMFApp setIsValidated:]
  -[DMFApp setIsAppStoreVendable:]
  -[DMFApp setIsBetaApp:]
  -[DMFApp setIsAdHocCodeSigned:]
  -[DMFApp hasUpdateAvailable]
  -[DMFApp setHasUpdateAvailable:]
  -[DMFApp VPNUUIDString]
  -[DMFApp setVPNUUIDString:]
  -[DMFApp contentFilterUUIDString]
  -[DMFApp setContentFilterUUIDString:]
  -[DMFApp DNSProxyUUIDString]
  -[DMFApp setDNSProxyUUIDString:]
  -[DMFApp associatedDomainsEnableDirectDownloads]
  -[DMFApp setAssociatedDomainsEnableDirectDownloads:]
  -[DMFApp managementInformation]
  -[DMFApp setManagementInformation:]


DMFAppManagementInformation : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *displayName
 @property  unsigned long state
 @property  unsigned long options
 @property  NSString *redemptionCode
 @property  NSString *unusedRedemptionCode

  // class methods
  +[DMFAppManagementInformation supportsSecureCoding]
  +[DMFAppManagementInformation stringForState:]

  // instance methods
  -[DMFAppManagementInformation encodeWithCoder:]
  -[DMFAppManagementInformation state]
  -[DMFAppManagementInformation .cxx_destruct]
  -[DMFAppManagementInformation setDisplayName:]
  -[DMFAppManagementInformation options]
  -[DMFAppManagementInformation copyWithZone:]
  -[DMFAppManagementInformation setOptions:]
  -[DMFAppManagementInformation displayName]
  -[DMFAppManagementInformation setState:]
  -[DMFAppManagementInformation initWithCoder:]
  -[DMFAppManagementInformation _stringForOptions:]
  -[DMFAppManagementInformation redemptionCode]
  -[DMFAppManagementInformation setRedemptionCode:]
  -[DMFAppManagementInformation unusedRedemptionCode]
  -[DMFAppManagementInformation setUnusedRedemptionCode:]


DMFApplication : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *applicationIdentifier
 @property  NSString *bundleIdentifier
 @property  NSString *name
 @property  NSData *iconData
 @property  NSString *bundleVersion
 @property  NSString *shortVersionString
 @property  NSString *applicationType
 @property  NSNumber *adamID
 @property  NSNumber *externalVersionIdentifier
 @property  NSNumber *betaExternalVersionIdentifier
 @property  NSNumber *staticUsage
 @property  NSNumber *dynamicUsage
 @property  NSNumber *onDemandResourcesUsage
 @property  NSString *unusedRedemptionCode
 @property  NSDictionary *attributes
 @property  NSDictionary *configuration
 @property  NSDictionary *feedback
 @property  unsigned long state
 @property  unsigned long managementFlags
 @property  BOOL isManaged
 @property  BOOL isValidated
 @property  BOOL isInstalled
 @property  BOOL isPlaceholder
 @property  BOOL isAppUpdate
 @property  BOOL isBetaApp
 @property  BOOL isRemoveable
 @property  BOOL fileSharingEnabled
 @property  DMFApplicationInstallProgress *progress

  // class methods
  +[DMFApplication supportsSecureCoding]

  // instance methods
  -[DMFApplication progress]
  -[DMFApplication isInstalled]
  -[DMFApplication feedback]
  -[DMFApplication attributes]
  -[DMFApplication bundleVersion]
  -[DMFApplication applicationIdentifier]
  -[DMFApplication isManaged]
  -[DMFApplication encodeWithCoder:]
  -[DMFApplication configuration]
  -[DMFApplication state]
  -[DMFApplication dynamicUsage]
  -[DMFApplication isPlaceholder]
  -[DMFApplication shortVersionString]
  -[DMFApplication isBetaApp]
  -[DMFApplication .cxx_destruct]
  -[DMFApplication classForCoder]
  -[DMFApplication applicationType]
  -[DMFApplication bundleIdentifier]
  -[DMFApplication staticUsage]
  -[DMFApplication copyWithZone:]
  -[DMFApplication name]
  -[DMFApplication adamID]
  -[DMFApplication isEqual:]
  -[DMFApplication onDemandResourcesUsage]
  -[DMFApplication initWithCoder:]
  -[DMFApplication externalVersionIdentifier]
  -[DMFApplication betaExternalVersionIdentifier]
  -[DMFApplication isAppUpdate]
  -[DMFApplication fileSharingEnabled]
  -[DMFApplication iconData]
  -[DMFApplication isValidated]
  -[DMFApplication unusedRedemptionCode]
  -[DMFApplication initWithApplicationIdentifier:bundleIdentifier:name:iconData:bundleVersion:shortVersionString:applicationType:adamID:externalVersionIdentifier:betaExternalVersionIdentifier:staticUsage:dynamicUsage:onDemandResourcesUsage:unusedRedemptionCode:attributes:configuration:feedback:state:managementFlags:isManaged:isValidated:isInstalled:isPlaceholder:isAppUpdate:isBetaApp:isRemoveable:fileSharingEnabled:progress:]
  -[DMFApplication initWithBundleIdentifier:name:iconData:applicationType:adamID:externalVersionNumber:betaExternalVersionIdentifier:isInstalled:isPlaceholder:isAppUpdate:isBetaApp:isRemoveable:fileSharingEnabled:progress:]
  -[DMFApplication managementFlags]
  -[DMFApplication isRemoveable]


DMFApplicationInstallProgress : NSObject <NSCopying, NSSecureCoding>
 @property  unsigned long state
 @property  unsigned long phase
 @property  double fractionCompleted

  // class methods
  +[DMFApplicationInstallProgress supportsSecureCoding]

  // instance methods
  -[DMFApplicationInstallProgress phase]
  -[DMFApplicationInstallProgress encodeWithCoder:]
  -[DMFApplicationInstallProgress state]
  -[DMFApplicationInstallProgress copyWithZone:]
  -[DMFApplicationInstallProgress fractionCompleted]
  -[DMFApplicationInstallProgress isEqual:]
  -[DMFApplicationInstallProgress initWithCoder:]
  -[DMFApplicationInstallProgress initWithState:phase:fractionCompleted:]


DMFApplicationPolicyMonitor : NSObject
 @property  NSArray *policyTypes
 @property  NSUUID *identifier
 @property  DMFPolicyRegistration *registration

  // class methods
  +[DMFApplicationPolicyMonitor createPolicyMonitorWithPolicyChangeHandler:completionHandler:]
  +[DMFApplicationPolicyMonitor fetchParentBundleIdentifiersForBundleIdentifiers:]
  +[DMFApplicationPolicyMonitor _fetchCategoriesForBundleIdentifiers:withError:]
  +[DMFApplicationPolicyMonitor _fetchCategoriesForBundleIdentifiers:completionHandler:]

  // instance methods
  -[DMFApplicationPolicyMonitor policyTypes]
  -[DMFApplicationPolicyMonitor identifier]
  -[DMFApplicationPolicyMonitor _initWithPolicyChangeHandler:addingRegistration:]
  -[DMFApplicationPolicyMonitor requestPoliciesForBundleIdentifiers:withError:]
  -[DMFApplicationPolicyMonitor dealloc]
  -[DMFApplicationPolicyMonitor .cxx_destruct]
  -[DMFApplicationPolicyMonitor registration]
  -[DMFApplicationPolicyMonitor initWithPolicyChangeHandler:]
  -[DMFApplicationPolicyMonitor requestPoliciesForBundleIdentifiers:completionHandler:]


DMFAppRequest : DMFTaskRequest
 @property  NSString *bundleIdentifier
 @property  NSNumber *storeItemIdentifier
 @property  NSURL *manifestURL
 @property  NSString *personaIdentifier

  // class methods
  +[DMFAppRequest supportsSecureCoding]

  // instance methods
  -[DMFAppRequest setPersonaIdentifier:]
  -[DMFAppRequest personaIdentifier]
  -[DMFAppRequest storeItemIdentifier]
  -[DMFAppRequest encodeWithCoder:]
  -[DMFAppRequest .cxx_destruct]
  -[DMFAppRequest setBundleIdentifier:]
  -[DMFAppRequest bundleIdentifier]
  -[DMFAppRequest setStoreItemIdentifier:]
  -[DMFAppRequest initWithCoder:]
  -[DMFAppRequest manifestURL]
  -[DMFAppRequest setManifestURL:]


DMFAssignUserRequest : DMFTaskRequest
 @property  NSString *userIdentifier
 @property  NSNumber *groupID
 @property  NSString *displayName
 @property  NSString *givenName
 @property  NSString *familyName
 @property  NSString *imageURL
 @property  NSString *fullScreenImageURL
 @property  NSString *appleID
 @property  NSString *passcodeType
 @property  NSString *password
 @property  NSArray *enrolledGroupIdentifiers

  // class methods
  +[DMFAssignUserRequest supportsSecureCoding]

  // instance methods
  -[DMFAssignUserRequest setGroupID:]
  -[DMFAssignUserRequest familyName]
  -[DMFAssignUserRequest setUserIdentifier:]
  -[DMFAssignUserRequest setGivenName:]
  -[DMFAssignUserRequest passcodeType]
  -[DMFAssignUserRequest encodeWithCoder:]
  -[DMFAssignUserRequest givenName]
  -[DMFAssignUserRequest groupID]
  -[DMFAssignUserRequest userIdentifier]
  -[DMFAssignUserRequest setPasscodeType:]
  -[DMFAssignUserRequest setFamilyName:]
  -[DMFAssignUserRequest .cxx_destruct]
  -[DMFAssignUserRequest setDisplayName:]
  -[DMFAssignUserRequest setImageURL:]
  -[DMFAssignUserRequest password]
  -[DMFAssignUserRequest setPassword:]
  -[DMFAssignUserRequest appleID]
  -[DMFAssignUserRequest displayName]
  -[DMFAssignUserRequest setAppleID:]
  -[DMFAssignUserRequest imageURL]
  -[DMFAssignUserRequest initWithCoder:]
  -[DMFAssignUserRequest fullScreenImageURL]
  -[DMFAssignUserRequest setFullScreenImageURL:]
  -[DMFAssignUserRequest enrolledGroupIdentifiers]
  -[DMFAssignUserRequest setEnrolledGroupIdentifiers:]


DMFBatchRequestOperation : CATOperation
 @property  CATOperationQueue *queue
 @property  CATRemoteTaskOperation *activityTransactionOperation
 @property  NSArray *subOperations

  // instance methods
  -[DMFBatchRequestOperation .cxx_destruct]
  -[DMFBatchRequestOperation setQueue:]
  -[DMFBatchRequestOperation setName:]
  -[DMFBatchRequestOperation isAsynchronous]
  -[DMFBatchRequestOperation queue]
  -[DMFBatchRequestOperation main]
  -[DMFBatchRequestOperation activityTransactionOperationDidStart:]
  -[DMFBatchRequestOperation activityTransactionOperationDidFinish:]
  -[DMFBatchRequestOperation initWithActivityTransactionOperation:subOperations:]
  -[DMFBatchRequestOperation activityTransactionOperation]
  -[DMFBatchRequestOperation setActivityTransactionOperation:]
  -[DMFBatchRequestOperation subOperations]
  -[DMFBatchRequestOperation setSubOperations:]


DMFBeginTransactionRequest : DMFTaskRequest
 @property  NSString *name

  // class methods
  +[DMFBeginTransactionRequest supportsSecureCoding]
  +[DMFBeginTransactionRequest isPermittedOnUserConnection]
  +[DMFBeginTransactionRequest isPermittedOnSystemConnection]
  +[DMFBeginTransactionRequest permittedPlatforms]
  +[DMFBeginTransactionRequest allowlistedClassForResultObject]

  // instance methods
  -[DMFBeginTransactionRequest encodeWithCoder:]
  -[DMFBeginTransactionRequest .cxx_destruct]
  -[DMFBeginTransactionRequest setName:]
  -[DMFBeginTransactionRequest name]
  -[DMFBeginTransactionRequest initWithCoder:]


DMFBeginTransactionResultObject : CATTaskResultObject
 @property  NSUUID *UUID

  // class methods
  +[DMFBeginTransactionResultObject supportsSecureCoding]

  // instance methods
  -[DMFBeginTransactionResultObject encodeWithCoder:]
  -[DMFBeginTransactionResultObject .cxx_destruct]
  -[DMFBeginTransactionResultObject UUID]
  -[DMFBeginTransactionResultObject initWithUUID:]
  -[DMFBeginTransactionResultObject initWithCoder:]


DMFBook : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *persistentID
 @property  NSNumber *iTunesStoreID
 @property  NSString *author
 @property  NSString *title
 @property  NSString *version
 @property  unsigned long type
 @property  unsigned long state

  // class methods
  +[DMFBook supportsSecureCoding]

  // instance methods
  -[DMFBook encodeWithCoder:]
  -[DMFBook type]
  -[DMFBook state]
  -[DMFBook .cxx_destruct]
  -[DMFBook title]
  -[DMFBook version]
  -[DMFBook author]
  -[DMFBook copyWithZone:]
  -[DMFBook isEqual:]
  -[DMFBook initWithCoder:]
  -[DMFBook persistentID]
  -[DMFBook initWithPersistentID:iTunesStoreID:author:title:version:type:state:]
  -[DMFBook iTunesStoreID]


DMFBookmark : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *identifier
 @property  NSString *name
 @property  NSURL *URL
 @property  NSArray *children
 @property  BOOL folder
 @property  BOOL favoritesFolder
 @property  BOOL readingListFolder

  // class methods
  +[DMFBookmark supportsSecureCoding]
  +[DMFBookmark favoritesFolderWithChildren:]
  +[DMFBookmark readingListFolderWithChildren:]
  +[DMFBookmark folderWithName:children:]
  +[DMFBookmark folderWithName:children:identifier:]
  +[DMFBookmark leafBookmarkWithName:URL:]

  // instance methods
  -[DMFBookmark children]
  -[DMFBookmark identifier]
  -[DMFBookmark encodeWithCoder:]
  -[DMFBookmark .cxx_destruct]
  -[DMFBookmark copyWithZone:]
  -[DMFBookmark isFolder]
  -[DMFBookmark name]
  -[DMFBookmark URL]
  -[DMFBookmark isEqual:]
  -[DMFBookmark initWithCoder:]
  -[DMFBookmark initWithName:URL:children:identifier:]
  -[DMFBookmark isFavoritesFolder]
  -[DMFBookmark isReadingListFolder]
  -[DMFBookmark _isFolderWithIdentifier:]


DMFCategoryPolicyMonitor : NSObject
 @property  NSArray *policyTypes
 @property  NSUUID *identifier

  // instance methods
  -[DMFCategoryPolicyMonitor policyTypes]
  -[DMFCategoryPolicyMonitor identifier]
  -[DMFCategoryPolicyMonitor dealloc]
  -[DMFCategoryPolicyMonitor .cxx_destruct]
  -[DMFCategoryPolicyMonitor initWithPolicyChangeHandler:]
  -[DMFCategoryPolicyMonitor requestPoliciesForCategoryIdentifiers:completionHandler:]


DMFCertificate : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *commonName
 @property  NSData *data
 @property  BOOL isIdentity

  // class methods
  +[DMFCertificate supportsSecureCoding]

  // instance methods
  -[DMFCertificate encodeWithCoder:]
  -[DMFCertificate .cxx_destruct]
  -[DMFCertificate copyWithZone:]
  -[DMFCertificate isEqual:]
  -[DMFCertificate data]
  -[DMFCertificate initWithCoder:]
  -[DMFCertificate isIdentity]
  -[DMFCertificate commonName]
  -[DMFCertificate initWithCommonName:data:isIdentity:]


DMFClearActivationLockBypassCodeRequest : DMFTaskRequest
  // class methods
  +[DMFClearActivationLockBypassCodeRequest isPermittedOnUserConnection]
  +[DMFClearActivationLockBypassCodeRequest isPermittedOnSystemConnection]
  +[DMFClearActivationLockBypassCodeRequest permittedPlatforms]


DMFClearRestrictionsPasswordRequest : DMFTaskRequest
  // class methods
  +[DMFClearRestrictionsPasswordRequest isPermittedOnUserConnection]
  +[DMFClearRestrictionsPasswordRequest isPermittedOnSystemConnection]
  +[DMFClearRestrictionsPasswordRequest permittedPlatforms]


DMFCommunicationPolicyMonitor : NSObject
 @property  NSDictionary *policiesByBundleIdentifier
 @property  DMFApplicationPolicyMonitor *applicationPolicyMonitor
 @property  BOOL didFetchInitialPolicies
 @property  NSArray *policyTypes
 @property  NSUUID *identifier

  // class methods
  +[DMFCommunicationPolicyMonitor new]
  +[DMFCommunicationPolicyMonitor _categoryForCommunicationBundleIdentifier:]
  +[DMFCommunicationPolicyMonitor _calculateCommunicationPoliciesWithApplicationPoliciesByBundleIdentifier:categoryEffectivePolicy:]
  +[DMFCommunicationPolicyMonitor _equivalentCommunicationBundleIdentifiersForCommunicationBundleIdentifier:]
  +[DMFCommunicationPolicyMonitor _transformEffectivePoliciesIntoCommunicationPolicies:]
  +[DMFCommunicationPolicyMonitor communicationPolicyForApplicationPolicy:downtimeEnforced:]
  +[DMFCommunicationPolicyMonitor communicationBundleIdentifiers]

  // instance methods
  -[DMFCommunicationPolicyMonitor policyTypes]
  -[DMFCommunicationPolicyMonitor applicationPolicyMonitor]
  -[DMFCommunicationPolicyMonitor identifier]
  -[DMFCommunicationPolicyMonitor requestPoliciesByBundleIdentifierWithCompletionHandler:]
  -[DMFCommunicationPolicyMonitor dealloc]
  -[DMFCommunicationPolicyMonitor .cxx_destruct]
  -[DMFCommunicationPolicyMonitor setDidFetchInitialPolicies:]
  -[DMFCommunicationPolicyMonitor setPoliciesByBundleIdentifier:]
  -[DMFCommunicationPolicyMonitor initWithPolicyChangeHandler:]
  -[DMFCommunicationPolicyMonitor didFetchInitialPolicies]
  -[DMFCommunicationPolicyMonitor _updatePoliciesByBundleIdentifier]
  -[DMFCommunicationPolicyMonitor policiesByBundleIdentifier]
  -[DMFCommunicationPolicyMonitor requestPoliciesByBundleIdentifierWithError:]
  -[DMFCommunicationPolicyMonitor init]
  -[DMFCommunicationPolicyMonitor _updateWithPoliciesByBundleIdentifier:categoryEffectivePolicy:]


DMFConfigurationOrganization : NSObject <NSSecureCoding>
 @property  NSString *identifier
 @property  NSString *displayName
 @property  NSString *type
 @property  BOOL active
 @property  NSArray *registeredConfigurationSources

  // class methods
  +[DMFConfigurationOrganization supportsSecureCoding]

  // instance methods
  -[DMFConfigurationOrganization active]
  -[DMFConfigurationOrganization identifier]
  -[DMFConfigurationOrganization encodeWithCoder:]
  -[DMFConfigurationOrganization type]
  -[DMFConfigurationOrganization .cxx_destruct]
  -[DMFConfigurationOrganization setDisplayName:]
  -[DMFConfigurationOrganization setType:]
  -[DMFConfigurationOrganization setActive:]
  -[DMFConfigurationOrganization setIdentifier:]
  -[DMFConfigurationOrganization displayName]
  -[DMFConfigurationOrganization init]
  -[DMFConfigurationOrganization initWithCoder:]
  -[DMFConfigurationOrganization registeredConfigurationSources]
  -[DMFConfigurationOrganization setRegisteredConfigurationSources:]


DMFConfigurationSource : NSObject <NSSecureCoding>
 @property  NSString *identifier
 @property  NSString *displayName
 @property  NSString *organizationIdentifier
 @property  NSString *machServiceName
 @property  DMFReportingRequirements *reportingRequirements

  // class methods
  +[DMFConfigurationSource supportsSecureCoding]

  // instance methods
  -[DMFConfigurationSource identifier]
  -[DMFConfigurationSource organizationIdentifier]
  -[DMFConfigurationSource setReportingRequirements:]
  -[DMFConfigurationSource encodeWithCoder:]
  -[DMFConfigurationSource setOrganizationIdentifier:]
  -[DMFConfigurationSource setMachServiceName:]
  -[DMFConfigurationSource .cxx_destruct]
  -[DMFConfigurationSource setDisplayName:]
  -[DMFConfigurationSource reportingRequirements]
  -[DMFConfigurationSource setIdentifier:]
  -[DMFConfigurationSource machServiceName]
  -[DMFConfigurationSource displayName]
  -[DMFConfigurationSource init]
  -[DMFConfigurationSource initWithCoder:]


DMFConfigurationSourceClient : NSObject <NSXPCListenerDelegate, NSXPCConnectionDelegate, DMFConfigurationSourceClientInterface>
 @property  unsigned long state
 @property  DMFConnection *connection
 @property  NSXPCListener *listener
 @property  NSXPCConnection *incomingConnection
 @property  NSObject *reportingRequirementsLock
 @property  NSString *configurationSourceName
 @property  NSString *organizationIdentifier
 @property  NSString *machServiceName
 @property  NSObject<OS_dispatch_queue> *serialQueue
 @property  CATOperationQueue *operationQueue
 @property  NSObject<OS_dispatch_source> *registerConfigurationSource
 @property  BOOL invalid
 @property  <DMFConfigurationSourceClientDelegate> *delegate
 @property  DMFReportingRequirements *reportingRequirements
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DMFConfigurationSourceClient activeRestrictionsURL]
  +[DMFConfigurationSourceClient setOfActiveRestrictionUUIDs]

  // instance methods
  -[DMFConfigurationSourceClient stateDescription]
  -[DMFConfigurationSourceClient configurationStatusDidChange:completion:]
  -[DMFConfigurationSourceClient setSerialQueue:]
  -[DMFConfigurationSourceClient eventsReportingOperationDidFinish:completion:]
  -[DMFConfigurationSourceClient organizationIdentifier]
  -[DMFConfigurationSourceClient serialQueue]
  -[DMFConfigurationSourceClient configurationSourceName]
  -[DMFConfigurationSourceClient registrationOperationDidFinish:]
  -[DMFConfigurationSourceClient setDelegate:]
  -[DMFConfigurationSourceClient setConfigurationSourceName:]
  -[DMFConfigurationSourceClient incomingConnection]
  -[DMFConfigurationSourceClient setIncomingConnection:]
  -[DMFConfigurationSourceClient operationQueue]
  -[DMFConfigurationSourceClient setReportingRequirements:]
  -[DMFConfigurationSourceClient setOperationQueue:]
  -[DMFConfigurationSourceClient delegate]
  -[DMFConfigurationSourceClient isInvalid]
  -[DMFConfigurationSourceClient state]
  -[DMFConfigurationSourceClient enqueueOperationToReportEvents:completion:]
  -[DMFConfigurationSourceClient setOrganizationIdentifier:]
  -[DMFConfigurationSourceClient dealloc]
  -[DMFConfigurationSourceClient setMachServiceName:]
  -[DMFConfigurationSourceClient configurationEventsDidChange:completion:]
  -[DMFConfigurationSourceClient .cxx_destruct]
  -[DMFConfigurationSourceClient probe:]
  -[DMFConfigurationSourceClient resume]
  -[DMFConfigurationSourceClient machService]
  -[DMFConfigurationSourceClient connection]
  -[DMFConfigurationSourceClient assetResolutionOperationDidFinish:completion:]
  -[DMFConfigurationSourceClient setListener:]
  -[DMFConfigurationSourceClient reportingRequirementsLock]
  -[DMFConfigurationSourceClient registerConfigurationSource]
  -[DMFConfigurationSourceClient setRegisterConfigurationSource:]
  -[DMFConfigurationSourceClient reportingRequirements]
  -[DMFConfigurationSourceClient initWithConnection:organizationIdentifier:displayName:localMachServiceName:]
  -[DMFConfigurationSourceClient statusReportingOperationDidFinish:completion:]
  -[DMFConfigurationSourceClient machServiceName]
  -[DMFConfigurationSourceClient invalidate]
  -[DMFConfigurationSourceClient name]
  -[DMFConfigurationSourceClient enqueueOperationToReportStatusChange:completion:]
  -[DMFConfigurationSourceClient enqueueOperationToResolveAsset:completion:]
  -[DMFConfigurationSourceClient listener]
  -[DMFConfigurationSourceClient configurationEngineRequestedAsset:completion:]
  -[DMFConfigurationSourceClient registerConfigurationSourceIfNeeded]
  -[DMFConfigurationSourceClient listener:shouldAcceptNewConnection:]
  -[DMFConfigurationSourceClient init]
  -[DMFConfigurationSourceClient setReportingRequirementsLock:]
  -[DMFConfigurationSourceClient setState:]
  -[DMFConfigurationSourceClient setConnection:]


DMFConnection : NSObject <CATTaskClientDelegate, DMFTransportProvider>
 @property  <DMFTransportProvider> *transportProvider
 @property  CATTaskClient *taskClient
 @property  CATOperationQueue *operationQueue
 @property  unsigned long connectionState
 @property  BOOL isSystemConnection
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DMFConnection currentUserConnection]
  +[DMFConnection connectionForAppleID:]
  +[DMFConnection sharedConnection]
  +[DMFConnection systemConnection]
  +[DMFConnection connectionForUID:]

  // instance methods
  -[DMFConnection connectionState]
  -[DMFConnection makeNewTransport]
  -[DMFConnection taskClient]
  -[DMFConnection transportProvider]
  -[DMFConnection operationQueue]
  -[DMFConnection _reconnectTaskClient]
  -[DMFConnection clientDidDisconnect:]
  -[DMFConnection clientDidConnect:]
  -[DMFConnection _operationDidFinish:completion:]
  -[DMFConnection setConnectionState:]
  -[DMFConnection dealloc]
  -[DMFConnection .cxx_destruct]
  -[DMFConnection clientDidInvalidate:]
  -[DMFConnection batchOperationToPerformOperations:]
  -[DMFConnection client:didInterruptWithError:]
  -[DMFConnection setIsSystemConnection:]
  -[DMFConnection initWithTransportProvider:userInfo:]
  -[DMFConnection initWithUserInfo:]
  -[DMFConnection prepareOperationForRequest:]
  -[DMFConnection invalidate]
  -[DMFConnection isSystemConnection]
  -[DMFConnection performRequest:completion:]


DMFControlGroupIdentifier : NSObject <NSCopying, NSSecureCoding>
 @property  NSUUID *organizationUUID
 @property  unsigned short groupID
 @property  NSString *stringValue

  // class methods
  +[DMFControlGroupIdentifier new]
  +[DMFControlGroupIdentifier supportsSecureCoding]

  // instance methods
  -[DMFControlGroupIdentifier encodeWithCoder:]
  -[DMFControlGroupIdentifier groupID]
  -[DMFControlGroupIdentifier stringValue]
  -[DMFControlGroupIdentifier .cxx_destruct]
  -[DMFControlGroupIdentifier initWithString:]
  -[DMFControlGroupIdentifier copyWithZone:]
  -[DMFControlGroupIdentifier isEqual:]
  -[DMFControlGroupIdentifier init]
  -[DMFControlGroupIdentifier initWithCoder:]
  -[DMFControlGroupIdentifier organizationUUID]
  -[DMFControlGroupIdentifier initWithOrganizationUUID:groupID:]
  -[DMFControlGroupIdentifier isEqualToGroupIdentifier:]


DMFControlSessionIdentifier : DMFControlGroupIdentifier
 @property  unsigned int leaderIP
 @property  unsigned short port
 @property  DMFControlGroupIdentifier *groupIdentifier

  // class methods
  +[DMFControlSessionIdentifier supportsSecureCoding]

  // instance methods
  -[DMFControlSessionIdentifier port]
  -[DMFControlSessionIdentifier groupIdentifier]
  -[DMFControlSessionIdentifier encodeWithCoder:]
  -[DMFControlSessionIdentifier stringValue]
  -[DMFControlSessionIdentifier initWithString:]
  -[DMFControlSessionIdentifier copyWithZone:]
  -[DMFControlSessionIdentifier isEqual:]
  -[DMFControlSessionIdentifier initWithCoder:]
  -[DMFControlSessionIdentifier initWithOrganizationUUID:groupID:]
  -[DMFControlSessionIdentifier initWithOrganizationUUID:groupID:leaderIP:]
  -[DMFControlSessionIdentifier initWithOrganizationUUID:groupID:leaderIP:port:]
  -[DMFControlSessionIdentifier isEqualToControlSessionIdentifier:]
  -[DMFControlSessionIdentifier leaderIP]


DMFCreateConfigurationOrganizationRequest : DMFTaskRequest
 @property  NSString *organizationIdentifier
 @property  NSString *organizationDisplayName
 @property  NSString *organizationType

  // class methods
  +[DMFCreateConfigurationOrganizationRequest supportsSecureCoding]
  +[DMFCreateConfigurationOrganizationRequest isPermittedOnUserConnection]
  +[DMFCreateConfigurationOrganizationRequest isPermittedOnSystemConnection]
  +[DMFCreateConfigurationOrganizationRequest permittedPlatforms]

  // instance methods
  -[DMFCreateConfigurationOrganizationRequest organizationIdentifier]
  -[DMFCreateConfigurationOrganizationRequest encodeWithCoder:]
  -[DMFCreateConfigurationOrganizationRequest setOrganizationIdentifier:]
  -[DMFCreateConfigurationOrganizationRequest .cxx_destruct]
  -[DMFCreateConfigurationOrganizationRequest organizationType]
  -[DMFCreateConfigurationOrganizationRequest setOrganizationDisplayName:]
  -[DMFCreateConfigurationOrganizationRequest organizationDisplayName]
  -[DMFCreateConfigurationOrganizationRequest setOrganizationType:]
  -[DMFCreateConfigurationOrganizationRequest initWithCoder:]


DMFDeactivateConfigurationOrganizationRequest : DMFTaskRequest
 @property  NSString *organizationIdentifier

  // class methods
  +[DMFDeactivateConfigurationOrganizationRequest supportsSecureCoding]
  +[DMFDeactivateConfigurationOrganizationRequest isPermittedOnUserConnection]
  +[DMFDeactivateConfigurationOrganizationRequest isPermittedOnSystemConnection]
  +[DMFDeactivateConfigurationOrganizationRequest permittedPlatforms]

  // instance methods
  -[DMFDeactivateConfigurationOrganizationRequest organizationIdentifier]
  -[DMFDeactivateConfigurationOrganizationRequest encodeWithCoder:]
  -[DMFDeactivateConfigurationOrganizationRequest setOrganizationIdentifier:]
  -[DMFDeactivateConfigurationOrganizationRequest .cxx_destruct]
  -[DMFDeactivateConfigurationOrganizationRequest initWithCoder:]


DMFDeleteUserRequest : DMFTaskRequest
 @property  NSString *username
 @property  BOOL forceDeletion

  // class methods
  +[DMFDeleteUserRequest supportsSecureCoding]
  +[DMFDeleteUserRequest isPermittedOnUserConnection]
  +[DMFDeleteUserRequest isPermittedOnSystemConnection]
  +[DMFDeleteUserRequest permittedPlatforms]

  // instance methods
  -[DMFDeleteUserRequest setUsername:]
  -[DMFDeleteUserRequest encodeWithCoder:]
  -[DMFDeleteUserRequest .cxx_destruct]
  -[DMFDeleteUserRequest username]
  -[DMFDeleteUserRequest initWithCoder:]
  -[DMFDeleteUserRequest forceDeletion]
  -[DMFDeleteUserRequest setForceDeletion:]


DMFDevice : NSObject
 @property  NSDictionary *errorsForKeys
 @property  NSNumber *availableCapacity
 @property  NSNumber *batteryLevel
 @property  NSString *bluetoothAddress
 @property  NSString *buildVersion
 @property  NSNumber *capacity
 @property  NSString *deviceName
 @property  NSNumber *deviceType
 @property  NSNumber *isAppleInternal
 @property  NSNumber *isAwaitingConfiguration
 @property  NSNumber *isDeviceLocatorServiceEnabled
 @property  NSNumber *isDoNotDisturbInEffect
 @property  NSNumber *isInSingleAppMode
 @property  NSNumber *isLostModeEnabled
 @property  NSString *iTunesStoreAccountHash
 @property  NSNumber *iTunesStoreAccountIsActive
 @property  NSString *marketingName
 @property  NSString *model
 @property  NSString *modelName
 @property  NSString *osVersion
 @property  NSString *productName
 @property  NSString *serialNumber
 @property  NSString *wifiAddress
 @property  NSNumber *isAppAnalyticsEnabled
 @property  NSNumber *isCloudBackupEnabled
 @property  NSNumber *isDiagnosticSubmissionEnabled
 @property  NSNumber *isSupervised
 @property  NSDate *lastCloudBackupDate
 @property  NSString *uniqueIdentifier
 @property  NSString *carrierSettingsVersion
 @property  NSNumber *cellularTechnology
 @property  NSString *currentCarrierNetwork
 @property  NSString *currentMCC
 @property  NSString *currentMNC
 @property  NSString *EASIdentifier
 @property  NSNumber *enforcedSoftwareUpdateDelay
 @property  NSString *ICCID
 @property  NSString *IMEI
 @property  NSNumber *isActivationLockEnabled
 @property  NSNumber *isDataRoamingEnabled
 @property  NSNumber *isEphemeralMultiUser
 @property  NSNumber *isNetworkTethered
 @property  NSNumber *isPersonalHotspotEnabled
 @property  NSNumber *isRoaming
 @property  NSNumber *isVoiceRoamingEnabled
 @property  NSNumber *maximumResidentUsers
 @property  NSString *MEID
 @property  NSString *modemFirmwareVersion
 @property  NSString *phoneNumber
 @property  NSDictionary *serviceSubscriptions
 @property  NSArray *skippedSetupPanes
 @property  NSString *subscriberCarrierNetwork
 @property  NSString *subscriberMCC
 @property  NSString *subscriberMNC
 @property  NSArray *activeManagedUsers
 @property  NSArray *autoSetupAdminAccounts
 @property  NSString *hostName
 @property  NSDictionary *installedExtensions
 @property  NSNumber *isSystemIntegrityProtectionEnabled
 @property  NSString *localHostName
 @property  NSDictionary *osUpdateSettings
 @property  NSDictionary *xsanConfiguration
 @property  NSString *destinationIdentifier

  // class methods
  +[DMFDevice propertyNameForKey:]
  +[DMFDevice _sanitizedDeviceKey:]

  // instance methods
  -[DMFDevice setValue:forUndefinedKey:]
  -[DMFDevice serialNumber]
  -[DMFDevice bluetoothAddress]
  -[DMFDevice isInSingleAppMode]
  -[DMFDevice valueForUndefinedKey:]
  -[DMFDevice buildVersion]
  -[DMFDevice batteryLevel]
  -[DMFDevice isAppAnalyticsEnabled]
  -[DMFDevice phoneNumber]
  -[DMFDevice model]
  -[DMFDevice capacity]
  -[DMFDevice marketingName]
  -[DMFDevice modelName]
  -[DMFDevice isAppleInternal]
  -[DMFDevice ICCID]
  -[DMFDevice hostName]
  -[DMFDevice productName]
  -[DMFDevice .cxx_destruct]
  -[DMFDevice deviceType]
  -[DMFDevice isAwaitingConfiguration]
  -[DMFDevice MEID]
  -[DMFDevice osVersion]
  -[DMFDevice initPrivate]
  -[DMFDevice isEphemeralMultiUser]
  -[DMFDevice uniqueIdentifier]
  -[DMFDevice IMEI]
  -[DMFDevice isCloudBackupEnabled]
  -[DMFDevice deviceName]
  -[DMFDevice valueForKey:error:]
  -[DMFDevice destinationIdentifier]
  -[DMFDevice isSupervised]
  -[DMFDevice isRoaming]
  -[DMFDevice wifiAddress]
  -[DMFDevice availableCapacity]
  -[DMFDevice isDeviceLocatorServiceEnabled]
  -[DMFDevice isDoNotDisturbInEffect]
  -[DMFDevice isLostModeEnabled]
  -[DMFDevice iTunesStoreAccountHash]
  -[DMFDevice iTunesStoreAccountIsActive]
  -[DMFDevice isDiagnosticSubmissionEnabled]
  -[DMFDevice lastCloudBackupDate]
  -[DMFDevice carrierSettingsVersion]
  -[DMFDevice cellularTechnology]
  -[DMFDevice currentCarrierNetwork]
  -[DMFDevice currentMCC]
  -[DMFDevice currentMNC]
  -[DMFDevice EASIdentifier]
  -[DMFDevice enforcedSoftwareUpdateDelay]
  -[DMFDevice isActivationLockEnabled]
  -[DMFDevice isDataRoamingEnabled]
  -[DMFDevice isNetworkTethered]
  -[DMFDevice isPersonalHotspotEnabled]
  -[DMFDevice isVoiceRoamingEnabled]
  -[DMFDevice maximumResidentUsers]
  -[DMFDevice modemFirmwareVersion]
  -[DMFDevice serviceSubscriptions]
  -[DMFDevice skippedSetupPanes]
  -[DMFDevice subscriberCarrierNetwork]
  -[DMFDevice subscriberMCC]
  -[DMFDevice subscriberMNC]
  -[DMFDevice activeManagedUsers]
  -[DMFDevice autoSetupAdminAccounts]
  -[DMFDevice installedExtensions]
  -[DMFDevice isSystemIntegrityProtectionEnabled]
  -[DMFDevice localHostName]
  -[DMFDevice osUpdateSettings]
  -[DMFDevice xsanConfiguration]
  -[DMFDevice errorsForKeys]
  -[DMFDevice setErrorsForKeys:]


DMFDevicePropertyNotificationSubscriptionRequest : DMFTaskRequest
 @property  NSArray *propertyKeys

  // class methods
  +[DMFDevicePropertyNotificationSubscriptionRequest supportsSecureCoding]

  // instance methods
  -[DMFDevicePropertyNotificationSubscriptionRequest encodeWithCoder:]
  -[DMFDevicePropertyNotificationSubscriptionRequest .cxx_destruct]
  -[DMFDevicePropertyNotificationSubscriptionRequest initWithCoder:]
  -[DMFDevicePropertyNotificationSubscriptionRequest setPropertyKeys:]
  -[DMFDevicePropertyNotificationSubscriptionRequest propertyKeys]


DMFDisableLostModeRequest : DMFTaskRequest
  // class methods
  +[DMFDisableLostModeRequest isPermittedOnUserConnection]
  +[DMFDisableLostModeRequest isPermittedOnSystemConnection]
  +[DMFDisableLostModeRequest permittedPlatforms]


DMFEchoRequest : DMFTaskRequest
 @property  NSString *echo
 @property  NSString *resultStatus

  // class methods
  +[DMFEchoRequest supportsSecureCoding]
  +[DMFEchoRequest isPermittedOnUserConnection]
  +[DMFEchoRequest isPermittedOnSystemConnection]
  +[DMFEchoRequest permittedPlatforms]
  +[DMFEchoRequest allowlistedClassForResultObject]

  // instance methods
  -[DMFEchoRequest resultStatus]
  -[DMFEchoRequest setResultStatus:]
  -[DMFEchoRequest encodeWithCoder:]
  -[DMFEchoRequest .cxx_destruct]
  -[DMFEchoRequest initWithCoder:]
  -[DMFEchoRequest echo]
  -[DMFEchoRequest setEcho:]


DMFEchoResultObject : CATTaskResultObject
 @property  NSString *echo
 @property  NSString *resultStatus

  // class methods
  +[DMFEchoResultObject supportsSecureCoding]

  // instance methods
  -[DMFEchoResultObject resultStatus]
  -[DMFEchoResultObject setResultStatus:]
  -[DMFEchoResultObject encodeWithCoder:]
  -[DMFEchoResultObject .cxx_destruct]
  -[DMFEchoResultObject initWithCoder:]
  -[DMFEchoResultObject echo]
  -[DMFEchoResultObject setEcho:]


DMFEffectivePolicy : NSObject <NSCopying, NSSecureCoding>
 @property  NSDictionary *currentPoliciesByIdentifier
 @property  NSDictionary *prioritiesByIdentifier
 @property  long long defaultPolicy
 @property  unsigned long defaultPriority
 @property  NSString *type
 @property  BOOL downtimeEnforced
 @property  NSSet *excludedIdentifiers

  // class methods
  +[DMFEffectivePolicy supportsSecureCoding]
  +[DMFEffectivePolicy downtimeCategoryIdentifiers]
  +[DMFEffectivePolicy systemCategoryIdentifiers]
  +[DMFEffectivePolicy unblockableBundleIdentifiers]
  +[DMFEffectivePolicy unblockableCategoryIdentifiers]

  // instance methods
  -[DMFEffectivePolicy encodeWithCoder:]
  -[DMFEffectivePolicy type]
  -[DMFEffectivePolicy .cxx_destruct]
  -[DMFEffectivePolicy defaultPolicy]
  -[DMFEffectivePolicy copyWithZone:]
  -[DMFEffectivePolicy isEqual:]
  -[DMFEffectivePolicy initWithCoder:]
  -[DMFEffectivePolicy defaultPriority]
  -[DMFEffectivePolicy initWithType:defaultPolicy:currentPoliciesByIdentifier:defaultPriority:prioritiesByIdentifier:excludedIdentifiers:]
  -[DMFEffectivePolicy downtimeEnforced]
  -[DMFEffectivePolicy policyForIdentifier:excludableIdentifiers:]
  -[DMFEffectivePolicy priorityForIdentifier:]
  -[DMFEffectivePolicy _valueForMatchingHostName:inRegisteredHostNames:]
  -[DMFEffectivePolicy excludedIdentifiers]
  -[DMFEffectivePolicy currentPoliciesByIdentifier]
  -[DMFEffectivePolicy prioritiesByIdentifier]
  -[DMFEffectivePolicy policyForHostName:]
  -[DMFEffectivePolicy priorityForHostName:]


DMFPrioritizedPolicy : NSObject
 @property  long long priority
 @property  long long policy

  // class methods
  +[DMFPrioritizedPolicy arbitratePolicyForPrioritizedPolicies:]
  +[DMFPrioritizedPolicy prioritizedPoliciesForAppPolicy:appCategoryPolicy:bundleIdentifiers:categoryPolicy:categoryIdentifiers:webPolicy:webCategoryPolicy:webDomains:]

  // instance methods
  -[DMFPrioritizedPolicy setPriority:]
  -[DMFPrioritizedPolicy compare:]
  -[DMFPrioritizedPolicy priority]
  -[DMFPrioritizedPolicy setPolicy:]
  -[DMFPrioritizedPolicy isEqual:]
  -[DMFPrioritizedPolicy policy]
  -[DMFPrioritizedPolicy initWithEffectivePolicy:identifier:excludableIdentifiers:]
  -[DMFPrioritizedPolicy isEqualToPrioritizedPolicy:]


DMFEmergencyModeMonitor : NSObject
 @property  NSXPCConnection *xpcConnection

  // class methods
  +[DMFEmergencyModeMonitor remoteInterface]
  +[DMFEmergencyModeMonitor sharedMonitor]

  // instance methods
  -[DMFEmergencyModeMonitor disableEmergencyModeWithError:]
  -[DMFEmergencyModeMonitor xpcConnection]
  -[DMFEmergencyModeMonitor initWithXPCConnection:]
  -[DMFEmergencyModeMonitor dealloc]
  -[DMFEmergencyModeMonitor .cxx_destruct]
  -[DMFEmergencyModeMonitor emergencyModeStatusWithCompletionHandler:]
  -[DMFEmergencyModeMonitor enableEmergencyModeWithError:]
  -[DMFEmergencyModeMonitor emergencyModeStatusWithError:]
  -[DMFEmergencyModeMonitor init]
  -[DMFEmergencyModeMonitor enableEmergencyModeForDuration:withError:]


DMFEnableLostModeRequest : DMFTaskRequest
 @property  NSString *message
 @property  NSString *phoneNumber
 @property  NSString *footnote

  // class methods
  +[DMFEnableLostModeRequest supportsSecureCoding]
  +[DMFEnableLostModeRequest isPermittedOnUserConnection]
  +[DMFEnableLostModeRequest isPermittedOnSystemConnection]
  +[DMFEnableLostModeRequest permittedPlatforms]

  // instance methods
  -[DMFEnableLostModeRequest setMessage:]
  -[DMFEnableLostModeRequest phoneNumber]
  -[DMFEnableLostModeRequest encodeWithCoder:]
  -[DMFEnableLostModeRequest setPhoneNumber:]
  -[DMFEnableLostModeRequest .cxx_destruct]
  -[DMFEnableLostModeRequest message]
  -[DMFEnableLostModeRequest initWithCoder:]
  -[DMFEnableLostModeRequest setFootnote:]
  -[DMFEnableLostModeRequest footnote]


DMFEndTransactionRequest : DMFTaskRequest
 @property  NSUUID *UUID

  // class methods
  +[DMFEndTransactionRequest supportsSecureCoding]
  +[DMFEndTransactionRequest isPermittedOnUserConnection]
  +[DMFEndTransactionRequest isPermittedOnSystemConnection]
  +[DMFEndTransactionRequest permittedPlatforms]

  // instance methods
  -[DMFEndTransactionRequest encodeWithCoder:]
  -[DMFEndTransactionRequest setUUID:]
  -[DMFEndTransactionRequest .cxx_destruct]
  -[DMFEndTransactionRequest UUID]
  -[DMFEndTransactionRequest initWithCoder:]


DMFFetchActivationLockBypassCodeRequest : DMFTaskRequest
  // class methods
  +[DMFFetchActivationLockBypassCodeRequest isPermittedOnUserConnection]
  +[DMFFetchActivationLockBypassCodeRequest isPermittedOnSystemConnection]
  +[DMFFetchActivationLockBypassCodeRequest permittedPlatforms]
  +[DMFFetchActivationLockBypassCodeRequest allowlistedClassForResultObject]


DMFFetchActivationLockBypassCodeResultObject : CATTaskResultObject
 @property  NSString *bypassCode

  // class methods
  +[DMFFetchActivationLockBypassCodeResultObject supportsSecureCoding]

  // instance methods
  -[DMFFetchActivationLockBypassCodeResultObject encodeWithCoder:]
  -[DMFFetchActivationLockBypassCodeResultObject .cxx_destruct]
  -[DMFFetchActivationLockBypassCodeResultObject initWithCoder:]
  -[DMFFetchActivationLockBypassCodeResultObject initWithBypassCode:]
  -[DMFFetchActivationLockBypassCodeResultObject bypassCode]


DMFFetchApplicationsRequest : DMFTaskRequest
 @property  BOOL excludeIcon
 @property  BOOL excludeUnmanagedApps
 @property  BOOL deleteFeedback
 @property  unsigned long typeFilter
 @property  unsigned long stateFilter
 @property  NSArray *bundleIdentifiers

  // class methods
  +[DMFFetchApplicationsRequest supportsSecureCoding]
  +[DMFFetchApplicationsRequest allowlistedClassForResultObject]

  // instance methods
  -[DMFFetchApplicationsRequest encodeWithCoder:]
  -[DMFFetchApplicationsRequest .cxx_destruct]
  -[DMFFetchApplicationsRequest init]
  -[DMFFetchApplicationsRequest initWithCoder:]
  -[DMFFetchApplicationsRequest bundleIdentifiers]
  -[DMFFetchApplicationsRequest setBundleIdentifiers:]
  -[DMFFetchApplicationsRequest excludeIcon]
  -[DMFFetchApplicationsRequest setExcludeIcon:]
  -[DMFFetchApplicationsRequest excludeUnmanagedApps]
  -[DMFFetchApplicationsRequest setExcludeUnmanagedApps:]
  -[DMFFetchApplicationsRequest deleteFeedback]
  -[DMFFetchApplicationsRequest setDeleteFeedback:]
  -[DMFFetchApplicationsRequest typeFilter]
  -[DMFFetchApplicationsRequest setTypeFilter:]
  -[DMFFetchApplicationsRequest stateFilter]
  -[DMFFetchApplicationsRequest setStateFilter:]


DMFFetchApplicationsResultObject : CATTaskResultObject
 @property  NSDictionary *applicationsByIdentifier

  // class methods
  +[DMFFetchApplicationsResultObject supportsSecureCoding]

  // instance methods
  -[DMFFetchApplicationsResultObject encodeWithCoder:]
  -[DMFFetchApplicationsResultObject .cxx_destruct]
  -[DMFFetchApplicationsResultObject initWithCoder:]
  -[DMFFetchApplicationsResultObject initWithApplicationsByIdentifier:]
  -[DMFFetchApplicationsResultObject applicationsByIdentifier]


DMFFetchAppsRequest : DMFTaskRequest
 @property  unsigned long type
 @property  NSArray *bundleIdentifiers
 @property  BOOL deleteFeedback
 @property  NSNumber *storeItemIdentifier
 @property  NSURL *manifestURL
 @property  BOOL managedAppsOnly
 @property  BOOL advanceTransientStates
 @property  NSArray *propertyKeys

  // class methods
  +[DMFFetchAppsRequest supportsSecureCoding]
  +[DMFFetchAppsRequest isPermittedOnUserConnection]
  +[DMFFetchAppsRequest isPermittedOnSystemConnection]
  +[DMFFetchAppsRequest permittedPlatforms]
  +[DMFFetchAppsRequest allowlistedClassForResultObject]

  // instance methods
  -[DMFFetchAppsRequest storeItemIdentifier]
  -[DMFFetchAppsRequest encodeWithCoder:]
  -[DMFFetchAppsRequest type]
  -[DMFFetchAppsRequest .cxx_destruct]
  -[DMFFetchAppsRequest setType:]
  -[DMFFetchAppsRequest setStoreItemIdentifier:]
  -[DMFFetchAppsRequest init]
  -[DMFFetchAppsRequest initWithCoder:]
  -[DMFFetchAppsRequest bundleIdentifiers]
  -[DMFFetchAppsRequest setBundleIdentifiers:]
  -[DMFFetchAppsRequest manifestURL]
  -[DMFFetchAppsRequest setManifestURL:]
  -[DMFFetchAppsRequest setPropertyKeys:]
  -[DMFFetchAppsRequest propertyKeys]
  -[DMFFetchAppsRequest deleteFeedback]
  -[DMFFetchAppsRequest setDeleteFeedback:]
  -[DMFFetchAppsRequest managedAppsOnly]
  -[DMFFetchAppsRequest setManagedAppsOnly:]
  -[DMFFetchAppsRequest advanceTransientStates]
  -[DMFFetchAppsRequest setAdvanceTransientStates:]


DMFFetchAppsResultObject : CATTaskResultObject
 @property  NSDictionary *appsByBundleIdentifier

  // class methods
  +[DMFFetchAppsResultObject supportsSecureCoding]

  // instance methods
  -[DMFFetchAppsResultObject encodeWithCoder:]
  -[DMFFetchAppsResultObject .cxx_destruct]
  -[DMFFetchAppsResultObject initWithCoder:]
  -[DMFFetchAppsResultObject initWithAppsByBundleIdentifier:]
  -[DMFFetchAppsResultObject appsByBundleIdentifier]


DMFFetchAvailableOSUpdatesRequest : DMFTaskRequest
 @property  NSString *productVersion
 @property  BOOL useDelay

  // class methods
  +[DMFFetchAvailableOSUpdatesRequest supportsSecureCoding]
  +[DMFFetchAvailableOSUpdatesRequest isPermittedOnUserConnection]
  +[DMFFetchAvailableOSUpdatesRequest isPermittedOnSystemConnection]
  +[DMFFetchAvailableOSUpdatesRequest permittedPlatforms]
  +[DMFFetchAvailableOSUpdatesRequest allowlistedClassForResultObject]

  // instance methods
  -[DMFFetchAvailableOSUpdatesRequest encodeWithCoder:]
  -[DMFFetchAvailableOSUpdatesRequest .cxx_destruct]
  -[DMFFetchAvailableOSUpdatesRequest setProductVersion:]
  -[DMFFetchAvailableOSUpdatesRequest productVersion]
  -[DMFFetchAvailableOSUpdatesRequest init]
  -[DMFFetchAvailableOSUpdatesRequest initWithCoder:]
  -[DMFFetchAvailableOSUpdatesRequest useDelay]
  -[DMFFetchAvailableOSUpdatesRequest setUseDelay:]


DMFFetchAvailableOSUpdatesResultObject : CATTaskResultObject
 @property  DMFOSUpdate *update

  // class methods
  +[DMFFetchAvailableOSUpdatesResultObject supportsSecureCoding]

  // instance methods
  -[DMFFetchAvailableOSUpdatesResultObject encodeWithCoder:]
  -[DMFFetchAvailableOSUpdatesResultObject .cxx_destruct]
  -[DMFFetchAvailableOSUpdatesResultObject update]
  -[DMFFetchAvailableOSUpdatesResultObject init]
  -[DMFFetchAvailableOSUpdatesResultObject initWithCoder:]
  -[DMFFetchAvailableOSUpdatesResultObject initWithUpdate:]


DMFFetchCertificatesRequest : DMFTaskRequest
 @property  BOOL managedOnly

  // class methods
  +[DMFFetchCertificatesRequest supportsSecureCoding]
  +[DMFFetchCertificatesRequest isPermittedOnUserConnection]
  +[DMFFetchCertificatesRequest isPermittedOnSystemConnection]
  +[DMFFetchCertificatesRequest permittedPlatforms]
  +[DMFFetchCertificatesRequest allowlistedClassForResultObject]

  // instance methods
  -[DMFFetchCertificatesRequest encodeWithCoder:]
  -[DMFFetchCertificatesRequest initWithCoder:]
  -[DMFFetchCertificatesRequest managedOnly]
  -[DMFFetchCertificatesRequest setManagedOnly:]


DMFFetchCertificatesResultObject : CATTaskResultObject
 @property  NSArray *certificates

  // class methods
  +[DMFFetchCertificatesResultObject supportsSecureCoding]

  // instance methods
  -[DMFFetchCertificatesResultObject certificates]
  -[DMFFetchCertificatesResultObject encodeWithCoder:]
  -[DMFFetchCertificatesResultObject .cxx_destruct]
  -[DMFFetchCertificatesResultObject initWithCoder:]
  -[DMFFetchCertificatesResultObject initWithCertificates:]


DMFFetchClassroomInstructorEndpointRequest : DMFTaskRequest
  // class methods
  +[DMFFetchClassroomInstructorEndpointRequest supportsSecureCoding]
  +[DMFFetchClassroomInstructorEndpointRequest isPermittedOnUserConnection]
  +[DMFFetchClassroomInstructorEndpointRequest isPermittedOnSystemConnection]
  +[DMFFetchClassroomInstructorEndpointRequest permittedPlatforms]
  +[DMFFetchClassroomInstructorEndpointRequest allowlistedClassForResultObject]


DMFFetchClassroomInstructorEndpointResultObject : CATTaskResultObject
 @property  NSXPCListenerEndpoint *endpoint

  // class methods
  +[DMFFetchClassroomInstructorEndpointResultObject supportsSecureCoding]

  // instance methods
  -[DMFFetchClassroomInstructorEndpointResultObject initWithEndpoint:]
  -[DMFFetchClassroomInstructorEndpointResultObject encodeWithCoder:]
  -[DMFFetchClassroomInstructorEndpointResultObject endpoint]
  -[DMFFetchClassroomInstructorEndpointResultObject .cxx_destruct]
  -[DMFFetchClassroomInstructorEndpointResultObject initWithCoder:]


DMFFetchConfigurationOrganizationsRequest : DMFTaskRequest
  // class methods
  +[DMFFetchConfigurationOrganizationsRequest supportsSecureCoding]
  +[DMFFetchConfigurationOrganizationsRequest isPermittedOnUserConnection]
  +[DMFFetchConfigurationOrganizationsRequest isPermittedOnSystemConnection]
  +[DMFFetchConfigurationOrganizationsRequest permittedPlatforms]
  +[DMFFetchConfigurationOrganizationsRequest allowlistedClassForResultObject]


DMFFetchConfigurationOrganizationsResultObject : CATTaskResultObject
 @property  NSDictionary *organizationsByIdentifier

  // class methods
  +[DMFFetchConfigurationOrganizationsResultObject supportsSecureCoding]

  // instance methods
  -[DMFFetchConfigurationOrganizationsResultObject encodeWithCoder:]
  -[DMFFetchConfigurationOrganizationsResultObject .cxx_destruct]
  -[DMFFetchConfigurationOrganizationsResultObject initWithCoder:]
  -[DMFFetchConfigurationOrganizationsResultObject organizationsByIdentifier]
  -[DMFFetchConfigurationOrganizationsResultObject setOrganizationsByIdentifier:]


DMFFetchConfigurationSourceSyncTokenRequest : DMFTaskRequest
 @property  NSString *configurationSource

  // class methods
  +[DMFFetchConfigurationSourceSyncTokenRequest supportsSecureCoding]

  // instance methods
  -[DMFFetchConfigurationSourceSyncTokenRequest configurationSource]
  -[DMFFetchConfigurationSourceSyncTokenRequest encodeWithCoder:]
  -[DMFFetchConfigurationSourceSyncTokenRequest .cxx_destruct]
  -[DMFFetchConfigurationSourceSyncTokenRequest initWithCoder:]
  -[DMFFetchConfigurationSourceSyncTokenRequest setConfigurationSource:]


DMFFetchConfigurationSourceSyncTokenResultObject : CATTaskResultObject
 @property  NSString *syncToken

  // class methods
  +[DMFFetchConfigurationSourceSyncTokenResultObject supportsSecureCoding]

  // instance methods
  -[DMFFetchConfigurationSourceSyncTokenResultObject syncToken]
  -[DMFFetchConfigurationSourceSyncTokenResultObject encodeWithCoder:]
  -[DMFFetchConfigurationSourceSyncTokenResultObject setSyncToken:]
  -[DMFFetchConfigurationSourceSyncTokenResultObject .cxx_destruct]
  -[DMFFetchConfigurationSourceSyncTokenResultObject initWithCoder:]


DMFFetchControlGroupIdentifiersRequest : DMFTaskRequest
 @property  NSString *leaderIdentifier
 @property  BOOL includeTemporary

  // class methods
  +[DMFFetchControlGroupIdentifiersRequest supportsSecureCoding]
  +[DMFFetchControlGroupIdentifiersRequest allowlistedClassForResultObject]

  // instance methods
  -[DMFFetchControlGroupIdentifiersRequest encodeWithCoder:]
  -[DMFFetchControlGroupIdentifiersRequest .cxx_destruct]
  -[DMFFetchControlGroupIdentifiersRequest initWithCoder:]
  -[DMFFetchControlGroupIdentifiersRequest leaderIdentifier]
  -[DMFFetchControlGroupIdentifiersRequest setLeaderIdentifier:]
  -[DMFFetchControlGroupIdentifiersRequest includeTemporary]
  -[DMFFetchControlGroupIdentifiersRequest setIncludeTemporary:]


DMFFetchControlGroupIdentifiersResultObject : CATTaskResultObject
 @property  NSArray *groupIdentifiers

  // class methods
  +[DMFFetchControlGroupIdentifiersResultObject supportsSecureCoding]

  // instance methods
  -[DMFFetchControlGroupIdentifiersResultObject encodeWithCoder:]
  -[DMFFetchControlGroupIdentifiersResultObject .cxx_destruct]
  -[DMFFetchControlGroupIdentifiersResultObject groupIdentifiers]
  -[DMFFetchControlGroupIdentifiersResultObject initWithCoder:]
  -[DMFFetchControlGroupIdentifiersResultObject initWithGroupIdentifiers:]


DMFFetchDeclarationCapabilitiesRequest : DMFTaskRequest
  // class methods
  +[DMFFetchDeclarationCapabilitiesRequest supportsSecureCoding]
  +[DMFFetchDeclarationCapabilitiesRequest isPermittedOnUserConnection]
  +[DMFFetchDeclarationCapabilitiesRequest isPermittedOnSystemConnection]
  +[DMFFetchDeclarationCapabilitiesRequest permittedPlatforms]
  +[DMFFetchDeclarationCapabilitiesRequest allowlistedClassForResultObject]


DMFFetchDeclarationCapabilitiesResultObject : CATTaskResultObject
 @property  NSArray *supportedCommands
 @property  NSArray *supportedAssets
 @property  NSArray *supportedConfigurations
 @property  NSArray *supportedEvents
 @property  NSArray *supportedActivations
 @property  NSArray *supportedPredicates
 @property  NSArray *supportedMessages

  // class methods
  +[DMFFetchDeclarationCapabilitiesResultObject supportsSecureCoding]

  // instance methods
  -[DMFFetchDeclarationCapabilitiesResultObject encodeWithCoder:]
  -[DMFFetchDeclarationCapabilitiesResultObject supportedCommands]
  -[DMFFetchDeclarationCapabilitiesResultObject .cxx_destruct]
  -[DMFFetchDeclarationCapabilitiesResultObject setSupportedCommands:]
  -[DMFFetchDeclarationCapabilitiesResultObject supportedEvents]
  -[DMFFetchDeclarationCapabilitiesResultObject initWithCoder:]
  -[DMFFetchDeclarationCapabilitiesResultObject supportedMessages]
  -[DMFFetchDeclarationCapabilitiesResultObject setSupportedMessages:]
  -[DMFFetchDeclarationCapabilitiesResultObject supportedAssets]
  -[DMFFetchDeclarationCapabilitiesResultObject setSupportedAssets:]
  -[DMFFetchDeclarationCapabilitiesResultObject supportedConfigurations]
  -[DMFFetchDeclarationCapabilitiesResultObject setSupportedConfigurations:]
  -[DMFFetchDeclarationCapabilitiesResultObject setSupportedEvents:]
  -[DMFFetchDeclarationCapabilitiesResultObject supportedActivations]
  -[DMFFetchDeclarationCapabilitiesResultObject setSupportedActivations:]
  -[DMFFetchDeclarationCapabilitiesResultObject supportedPredicates]
  -[DMFFetchDeclarationCapabilitiesResultObject setSupportedPredicates:]


DMFFetchDeclarationsRequest : DMFTaskRequest
 @property  BOOL includeInternalState
 @property  BOOL includePayloadContents
 @property  NSString *organizationIdentifier
 @property  NSArray *payloadIdentifiers

  // class methods
  +[DMFFetchDeclarationsRequest supportsSecureCoding]
  +[DMFFetchDeclarationsRequest isPermittedOnUserConnection]
  +[DMFFetchDeclarationsRequest isPermittedOnSystemConnection]
  +[DMFFetchDeclarationsRequest permittedPlatforms]
  +[DMFFetchDeclarationsRequest allowlistedClassForResultObject]

  // instance methods
  -[DMFFetchDeclarationsRequest organizationIdentifier]
  -[DMFFetchDeclarationsRequest encodeWithCoder:]
  -[DMFFetchDeclarationsRequest setOrganizationIdentifier:]
  -[DMFFetchDeclarationsRequest .cxx_destruct]
  -[DMFFetchDeclarationsRequest payloadIdentifiers]
  -[DMFFetchDeclarationsRequest initWithCoder:]
  -[DMFFetchDeclarationsRequest setPayloadIdentifiers:]
  -[DMFFetchDeclarationsRequest includeInternalState]
  -[DMFFetchDeclarationsRequest setIncludeInternalState:]
  -[DMFFetchDeclarationsRequest includePayloadContents]
  -[DMFFetchDeclarationsRequest setIncludePayloadContents:]


DMFFetchDeclarationsResultObject : CATTaskResultObject
 @property  NSArray *payloadDescriptions

  // class methods
  +[DMFFetchDeclarationsResultObject supportsSecureCoding]

  // instance methods
  -[DMFFetchDeclarationsResultObject encodeWithCoder:]
  -[DMFFetchDeclarationsResultObject .cxx_destruct]
  -[DMFFetchDeclarationsResultObject initWithCoder:]
  -[DMFFetchDeclarationsResultObject payloadDescriptions]
  -[DMFFetchDeclarationsResultObject setPayloadDescriptions:]


DMFFetchDevicePropertiesRequest : DMFTaskRequest
 @property  NSArray *propertyKeys

  // class methods
  +[DMFFetchDevicePropertiesRequest supportsSecureCoding]
  +[DMFFetchDevicePropertiesRequest isPermittedOnUserConnection]
  +[DMFFetchDevicePropertiesRequest isPermittedOnSystemConnection]
  +[DMFFetchDevicePropertiesRequest permittedPlatforms]
  +[DMFFetchDevicePropertiesRequest allowlistedClassForResultObject]
  +[DMFFetchDevicePropertiesRequest currentDevicePropertyKeys]
  +[DMFFetchDevicePropertiesRequest devicePropertyKeysForPlatform:]

  // instance methods
  -[DMFFetchDevicePropertiesRequest encodeWithCoder:]
  -[DMFFetchDevicePropertiesRequest .cxx_destruct]
  -[DMFFetchDevicePropertiesRequest initWithCoder:]
  -[DMFFetchDevicePropertiesRequest setPropertyKeys:]
  -[DMFFetchDevicePropertiesRequest propertyKeys]


DMFFetchDevicePropertiesResultObject : CATTaskResultObject
 @property  NSDictionary *valuesByPropertyKey
 @property  NSDictionary *errorsByPropertyKey
 @property  DMFDevice *device

  // class methods
  +[DMFFetchDevicePropertiesResultObject supportsSecureCoding]

  // instance methods
  -[DMFFetchDevicePropertiesResultObject encodeWithCoder:]
  -[DMFFetchDevicePropertiesResultObject .cxx_destruct]
  -[DMFFetchDevicePropertiesResultObject device]
  -[DMFFetchDevicePropertiesResultObject classForCoder]
  -[DMFFetchDevicePropertiesResultObject initWithCoder:]
  -[DMFFetchDevicePropertiesResultObject initWithValuesByPropertyKey:errorsByPropertyKey:]
  -[DMFFetchDevicePropertiesResultObject valueForPropertyKey:error:]
  -[DMFFetchDevicePropertiesResultObject valuesByPropertyKey]
  -[DMFFetchDevicePropertiesResultObject errorsByPropertyKey]


DMFDevicePropertiesResultObject : DMFFetchDevicePropertiesResultObject
  // instance methods
  -[DMFDevicePropertiesResultObject classForCoder]


DMFFetchDMDStateRequest : DMFTaskRequest
  // class methods
  +[DMFFetchDMDStateRequest isPermittedOnUserConnection]
  +[DMFFetchDMDStateRequest isPermittedOnSystemConnection]
  +[DMFFetchDMDStateRequest permittedPlatforms]
  +[DMFFetchDMDStateRequest allowlistedClassForResultObject]


DMFFetchDMDStateResultObject : CATTaskResultObject
 @property  NSString *dmdStateDescription

  // class methods
  +[DMFFetchDMDStateResultObject supportsSecureCoding]

  // instance methods
  -[DMFFetchDMDStateResultObject encodeWithCoder:]
  -[DMFFetchDMDStateResultObject .cxx_destruct]
  -[DMFFetchDMDStateResultObject initWithCoder:]
  -[DMFFetchDMDStateResultObject initWithStateDescription:]
  -[DMFFetchDMDStateResultObject dmdStateDescription]
  -[DMFFetchDMDStateResultObject setDmdStateDescription:]


DMFFetchGlobalRestrictionsRequest : DMFFetchRestrictionsRequest

DMFFetchGlobalRestrictionsResultObject : DMFFetchRestrictionsResultObject

DMFFetchInstalledApplicationsRequest : DMFFetchApplicationsRequest
  // class methods
  +[DMFFetchInstalledApplicationsRequest isPermittedOnUserConnection]
  +[DMFFetchInstalledApplicationsRequest isPermittedOnSystemConnection]
  +[DMFFetchInstalledApplicationsRequest permittedPlatforms]


DMFFetchInstalledApplicationsResultObject : DMFFetchApplicationsResultObject

DMFFetchInstalledCertificatesRequest : DMFFetchCertificatesRequest
  // class methods
  +[DMFFetchInstalledCertificatesRequest isPermittedOnUserConnection]
  +[DMFFetchInstalledCertificatesRequest isPermittedOnSystemConnection]
  +[DMFFetchInstalledCertificatesRequest permittedPlatforms]


DMFFetchInstalledCertificatesResultObject : DMFFetchCertificatesResultObject

DMFFetchInstalledProfilesRequest : DMFFetchProfilesRequest

DMFFetchInstalledProfilesResultObject : DMFFetchProfilesResultObject

DMFFetchInstalledProvisioningProfilesRequest : DMFFetchProvisioningProfilesRequest

DMFFetchInstalledProvisioningProfilesResultObject : DMFFetchProvisioningProfilesResultObject

DMFFetchLastLoginDateRequest : DMFTaskRequest
 @property  NSSet *appleIDs

  // class methods
  +[DMFFetchLastLoginDateRequest supportsSecureCoding]
  +[DMFFetchLastLoginDateRequest allowlistedClassForResultObject]

  // instance methods
  -[DMFFetchLastLoginDateRequest encodeWithCoder:]
  -[DMFFetchLastLoginDateRequest .cxx_destruct]
  -[DMFFetchLastLoginDateRequest initWithCoder:]
  -[DMFFetchLastLoginDateRequest appleIDs]
  -[DMFFetchLastLoginDateRequest setAppleIDs:]


DMFFetchLastLoginDateResultObject : CATTaskResultObject
 @property  NSDictionary *lastLoginDatesByAppleID

  // class methods
  +[DMFFetchLastLoginDateResultObject supportsSecureCoding]

  // instance methods
  -[DMFFetchLastLoginDateResultObject encodeWithCoder:]
  -[DMFFetchLastLoginDateResultObject .cxx_destruct]
  -[DMFFetchLastLoginDateResultObject initWithCoder:]
  -[DMFFetchLastLoginDateResultObject initWithDatesByAppleID:]
  -[DMFFetchLastLoginDateResultObject lastLoginDatesByAppleID]


DMFFetchLocationRequest : DMFTaskRequest
 @property  NSString *originator

  // class methods
  +[DMFFetchLocationRequest supportsSecureCoding]
  +[DMFFetchLocationRequest isPermittedOnUserConnection]
  +[DMFFetchLocationRequest isPermittedOnSystemConnection]
  +[DMFFetchLocationRequest permittedPlatforms]
  +[DMFFetchLocationRequest allowlistedClassForResultObject]

  // instance methods
  -[DMFFetchLocationRequest encodeWithCoder:]
  -[DMFFetchLocationRequest .cxx_destruct]
  -[DMFFetchLocationRequest setOriginator:]
  -[DMFFetchLocationRequest originator]
  -[DMFFetchLocationRequest initWithCoder:]


DMFFetchLocationResultObject : CATTaskResultObject
 @property  CLLocation *location

  // class methods
  +[DMFFetchLocationResultObject supportsSecureCoding]

  // instance methods
  -[DMFFetchLocationResultObject initWithLocation:]
  -[DMFFetchLocationResultObject encodeWithCoder:]
  -[DMFFetchLocationResultObject .cxx_destruct]
  -[DMFFetchLocationResultObject location]
  -[DMFFetchLocationResultObject initWithCoder:]


DMFFetchManagedBooksRequest : DMFTaskRequest
  // class methods
  +[DMFFetchManagedBooksRequest isPermittedOnUserConnection]
  +[DMFFetchManagedBooksRequest isPermittedOnSystemConnection]
  +[DMFFetchManagedBooksRequest permittedPlatforms]
  +[DMFFetchManagedBooksRequest allowlistedClassForResultObject]


DMFFetchManagedBooksResultObject : CATTaskResultObject
 @property  NSArray *books

  // class methods
  +[DMFFetchManagedBooksResultObject supportsSecureCoding]

  // instance methods
  -[DMFFetchManagedBooksResultObject encodeWithCoder:]
  -[DMFFetchManagedBooksResultObject .cxx_destruct]
  -[DMFFetchManagedBooksResultObject initWithCoder:]
  -[DMFFetchManagedBooksResultObject initWithBooks:]
  -[DMFFetchManagedBooksResultObject books]


DMFFetchOSUpdateStatusRequest : DMFTaskRequest
  // class methods
  +[DMFFetchOSUpdateStatusRequest isPermittedOnUserConnection]
  +[DMFFetchOSUpdateStatusRequest isPermittedOnSystemConnection]
  +[DMFFetchOSUpdateStatusRequest permittedPlatforms]
  +[DMFFetchOSUpdateStatusRequest allowlistedClassForResultObject]


DMFFetchOSUpdateStatusResultObject : CATTaskResultObject
 @property  NSString *productKey
 @property  unsigned long status
 @property  double downloadPercentComplete

  // class methods
  +[DMFFetchOSUpdateStatusResultObject supportsSecureCoding]
  +[DMFFetchOSUpdateStatusResultObject descriptionForStatus:]

  // instance methods
  -[DMFFetchOSUpdateStatusResultObject encodeWithCoder:]
  -[DMFFetchOSUpdateStatusResultObject status]
  -[DMFFetchOSUpdateStatusResultObject setStatus:]
  -[DMFFetchOSUpdateStatusResultObject .cxx_destruct]
  -[DMFFetchOSUpdateStatusResultObject initWithCoder:]
  -[DMFFetchOSUpdateStatusResultObject initWithProductKey:status:downloadPercentComplete:]
  -[DMFFetchOSUpdateStatusResultObject productKey]
  -[DMFFetchOSUpdateStatusResultObject setProductKey:]
  -[DMFFetchOSUpdateStatusResultObject downloadPercentComplete]
  -[DMFFetchOSUpdateStatusResultObject setDownloadPercentComplete:]


DMFFetchProfilesRequest : DMFTaskRequest
 @property  unsigned long filterFlags

  // class methods
  +[DMFFetchProfilesRequest supportsSecureCoding]
  +[DMFFetchProfilesRequest isPermittedOnUserConnection]
  +[DMFFetchProfilesRequest isPermittedOnSystemConnection]
  +[DMFFetchProfilesRequest permittedPlatforms]
  +[DMFFetchProfilesRequest allowlistedClassForResultObject]

  // instance methods
  -[DMFFetchProfilesRequest encodeWithCoder:]
  -[DMFFetchProfilesRequest init]
  -[DMFFetchProfilesRequest initWithCoder:]
  -[DMFFetchProfilesRequest filterFlags]
  -[DMFFetchProfilesRequest setFilterFlags:]


DMFFetchProfilesResultObject : CATTaskResultObject
 @property  NSArray *profiles

  // class methods
  +[DMFFetchProfilesResultObject supportsSecureCoding]

  // instance methods
  -[DMFFetchProfilesResultObject profiles]
  -[DMFFetchProfilesResultObject encodeWithCoder:]
  -[DMFFetchProfilesResultObject .cxx_destruct]
  -[DMFFetchProfilesResultObject initWithProfiles:]
  -[DMFFetchProfilesResultObject initWithCoder:]


DMFFetchProvisioningProfilesRequest : DMFTaskRequest
 @property  BOOL managedOnly

  // class methods
  +[DMFFetchProvisioningProfilesRequest supportsSecureCoding]
  +[DMFFetchProvisioningProfilesRequest isPermittedOnUserConnection]
  +[DMFFetchProvisioningProfilesRequest isPermittedOnSystemConnection]
  +[DMFFetchProvisioningProfilesRequest permittedPlatforms]
  +[DMFFetchProvisioningProfilesRequest allowlistedClassForResultObject]

  // instance methods
  -[DMFFetchProvisioningProfilesRequest encodeWithCoder:]
  -[DMFFetchProvisioningProfilesRequest initWithCoder:]
  -[DMFFetchProvisioningProfilesRequest managedOnly]
  -[DMFFetchProvisioningProfilesRequest setManagedOnly:]


DMFFetchProvisioningProfilesResultObject : CATTaskResultObject
 @property  NSArray *profiles

  // class methods
  +[DMFFetchProvisioningProfilesResultObject supportsSecureCoding]

  // instance methods
  -[DMFFetchProvisioningProfilesResultObject profiles]
  -[DMFFetchProvisioningProfilesResultObject encodeWithCoder:]
  -[DMFFetchProvisioningProfilesResultObject .cxx_destruct]
  -[DMFFetchProvisioningProfilesResultObject initWithProfiles:]
  -[DMFFetchProvisioningProfilesResultObject initWithCoder:]


DMFFetchRestrictionsRequest : DMFTaskRequest
 @property  BOOL includeProfileRestrictions
 @property  unsigned long profileFilterFlags

  // class methods
  +[DMFFetchRestrictionsRequest supportsSecureCoding]
  +[DMFFetchRestrictionsRequest isPermittedOnUserConnection]
  +[DMFFetchRestrictionsRequest isPermittedOnSystemConnection]
  +[DMFFetchRestrictionsRequest permittedPlatforms]
  +[DMFFetchRestrictionsRequest allowlistedClassForResultObject]

  // instance methods
  -[DMFFetchRestrictionsRequest encodeWithCoder:]
  -[DMFFetchRestrictionsRequest init]
  -[DMFFetchRestrictionsRequest initWithCoder:]
  -[DMFFetchRestrictionsRequest includeProfileRestrictions]
  -[DMFFetchRestrictionsRequest setIncludeProfileRestrictions:]
  -[DMFFetchRestrictionsRequest profileFilterFlags]
  -[DMFFetchRestrictionsRequest setProfileFilterFlags:]


DMFFetchRestrictionsResultObject : CATTaskResultObject
 @property  NSDictionary *restrictions
 @property  NSDictionary *globalRestrictions
 @property  NSDictionary *profileRestrictions

  // class methods
  +[DMFFetchRestrictionsResultObject supportsSecureCoding]

  // instance methods
  -[DMFFetchRestrictionsResultObject encodeWithCoder:]
  -[DMFFetchRestrictionsResultObject .cxx_destruct]
  -[DMFFetchRestrictionsResultObject initWithCoder:]
  -[DMFFetchRestrictionsResultObject restrictions]
  -[DMFFetchRestrictionsResultObject initWithRestrictions:]
  -[DMFFetchRestrictionsResultObject globalRestrictions]
  -[DMFFetchRestrictionsResultObject profileRestrictions]


DMFFetchSafariBookmarksRequest : DMFTaskRequest
  // class methods
  +[DMFFetchSafariBookmarksRequest supportsSecureCoding]
  +[DMFFetchSafariBookmarksRequest isPermittedOnUserConnection]
  +[DMFFetchSafariBookmarksRequest isPermittedOnSystemConnection]
  +[DMFFetchSafariBookmarksRequest permittedPlatforms]
  +[DMFFetchSafariBookmarksRequest allowlistedClassForResultObject]


DMFFetchSafariBookmarksResultObject : CATTaskResultObject
 @property  NSArray *bookmarks

  // class methods
  +[DMFFetchSafariBookmarksResultObject supportsSecureCoding]

  // instance methods
  -[DMFFetchSafariBookmarksResultObject encodeWithCoder:]
  -[DMFFetchSafariBookmarksResultObject .cxx_destruct]
  -[DMFFetchSafariBookmarksResultObject initWithCoder:]
  -[DMFFetchSafariBookmarksResultObject bookmarks]
  -[DMFFetchSafariBookmarksResultObject initWithBookmarks:]
  -[DMFFetchSafariBookmarksResultObject _appendDescriptionOfBookmark:toString:level:]


DMFFetchScreenshotRequest : DMFTaskRequest
 @property  unsigned long maxWidth
 @property  unsigned long maxHeight
 @property  BOOL usesPixels
 @property  NSString *sessionToken

  // class methods
  +[DMFFetchScreenshotRequest supportsSecureCoding]
  +[DMFFetchScreenshotRequest allowlistedClassForResultObject]

  // instance methods
  -[DMFFetchScreenshotRequest setMaxHeight:]
  -[DMFFetchScreenshotRequest setMaxWidth:]
  -[DMFFetchScreenshotRequest encodeWithCoder:]
  -[DMFFetchScreenshotRequest sessionToken]
  -[DMFFetchScreenshotRequest .cxx_destruct]
  -[DMFFetchScreenshotRequest maxHeight]
  -[DMFFetchScreenshotRequest maxWidth]
  -[DMFFetchScreenshotRequest initWithCoder:]
  -[DMFFetchScreenshotRequest setSessionToken:]
  -[DMFFetchScreenshotRequest usesPixels]
  -[DMFFetchScreenshotRequest setUsesPixels:]


DMFFetchScreenshotResultObject : CATTaskResultObject
 @property  NSData *screenshotData

  // class methods
  +[DMFFetchScreenshotResultObject supportsSecureCoding]

  // instance methods
  -[DMFFetchScreenshotResultObject encodeWithCoder:]
  -[DMFFetchScreenshotResultObject .cxx_destruct]
  -[DMFFetchScreenshotResultObject initWithData:]
  -[DMFFetchScreenshotResultObject initWithCoder:]
  -[DMFFetchScreenshotResultObject screenshotData]


DMFFetchSecurityInformationRequest : DMFTaskRequest
 @property  NSArray *infoKeys

  // class methods
  +[DMFFetchSecurityInformationRequest supportsSecureCoding]
  +[DMFFetchSecurityInformationRequest isPermittedOnUserConnection]
  +[DMFFetchSecurityInformationRequest isPermittedOnSystemConnection]
  +[DMFFetchSecurityInformationRequest permittedPlatforms]
  +[DMFFetchSecurityInformationRequest allowlistedClassForResultObject]
  +[DMFFetchSecurityInformationRequest currentPlatformSecurityInfoKeys]
  +[DMFFetchSecurityInformationRequest allPlatformSecurityInfoKeys]
  +[DMFFetchSecurityInformationRequest iOSSecurityInfoKeys]
  +[DMFFetchSecurityInformationRequest macOSSecurityInfoKeys]
  +[DMFFetchSecurityInformationRequest tvOSSecurityInfoKeys]
  +[DMFFetchSecurityInformationRequest watchOSSecurityInfoKeys]

  // instance methods
  -[DMFFetchSecurityInformationRequest encodeWithCoder:]
  -[DMFFetchSecurityInformationRequest .cxx_destruct]
  -[DMFFetchSecurityInformationRequest initWithCoder:]
  -[DMFFetchSecurityInformationRequest infoKeys]
  -[DMFFetchSecurityInformationRequest setInfoKeys:]


DMFFetchSecurityInformationResultObject : CATTaskResultObject
 @property  DMFSecurityInformation *securityInformation
 @property  NSDictionary *valuesByPropertyKey
 @property  NSDictionary *errorsByPropertyKey

  // class methods
  +[DMFFetchSecurityInformationResultObject supportsSecureCoding]

  // instance methods
  -[DMFFetchSecurityInformationResultObject encodeWithCoder:]
  -[DMFFetchSecurityInformationResultObject .cxx_destruct]
  -[DMFFetchSecurityInformationResultObject initWithCoder:]
  -[DMFFetchSecurityInformationResultObject securityInformation]
  -[DMFFetchSecurityInformationResultObject initWithValuesByPropertyKey:errorsByPropertyKey:]
  -[DMFFetchSecurityInformationResultObject valuesByPropertyKey]
  -[DMFFetchSecurityInformationResultObject errorsByPropertyKey]
  -[DMFFetchSecurityInformationResultObject initWithSecurityInformation:]


DMFFetchStreamEventsRequest : DMFTaskRequest
 @property  NSString *organizationIdentifier
 @property  NSArray *eventIdentifiers
 @property  NSDate *startDate

  // class methods
  +[DMFFetchStreamEventsRequest supportsSecureCoding]
  +[DMFFetchStreamEventsRequest isPermittedOnUserConnection]
  +[DMFFetchStreamEventsRequest isPermittedOnSystemConnection]
  +[DMFFetchStreamEventsRequest permittedPlatforms]
  +[DMFFetchStreamEventsRequest allowlistedClassForResultObject]

  // instance methods
  -[DMFFetchStreamEventsRequest organizationIdentifier]
  -[DMFFetchStreamEventsRequest eventIdentifiers]
  -[DMFFetchStreamEventsRequest encodeWithCoder:]
  -[DMFFetchStreamEventsRequest setOrganizationIdentifier:]
  -[DMFFetchStreamEventsRequest .cxx_destruct]
  -[DMFFetchStreamEventsRequest setStartDate:]
  -[DMFFetchStreamEventsRequest startDate]
  -[DMFFetchStreamEventsRequest initWithCoder:]
  -[DMFFetchStreamEventsRequest setEventIdentifiers:]


DMFFetchStreamEventsResultObject : CATTaskResultObject
 @property  NSArray *eventStatuses

  // class methods
  +[DMFFetchStreamEventsResultObject supportsSecureCoding]

  // instance methods
  -[DMFFetchStreamEventsResultObject encodeWithCoder:]
  -[DMFFetchStreamEventsResultObject .cxx_destruct]
  -[DMFFetchStreamEventsResultObject initWithCoder:]
  -[DMFFetchStreamEventsResultObject eventStatuses]
  -[DMFFetchStreamEventsResultObject setEventStatuses:]


DMFFetchUsersRequest : DMFTaskRequest
  // class methods
  +[DMFFetchUsersRequest isPermittedOnUserConnection]
  +[DMFFetchUsersRequest isPermittedOnSystemConnection]
  +[DMFFetchUsersRequest permittedPlatforms]
  +[DMFFetchUsersRequest allowlistedClassForResultObject]


DMFFetchUsersResultObject : CATTaskResultObject
 @property  NSArray *users

  // class methods
  +[DMFFetchUsersResultObject supportsSecureCoding]

  // instance methods
  -[DMFFetchUsersResultObject encodeWithCoder:]
  -[DMFFetchUsersResultObject .cxx_destruct]
  -[DMFFetchUsersResultObject users]
  -[DMFFetchUsersResultObject initWithCoder:]
  -[DMFFetchUsersResultObject initWithUsers:]


DMFiCloudPolicyMonitor : NSObject
 @property  NSArray *policyTypes
 @property  NSUUID *identifier
 @property  long long iCloudLogoutPolicy

  // class methods
  +[DMFiCloudPolicyMonitor new]
  +[DMFiCloudPolicyMonitor iCloudLogoutPolicyForPoliciesByType:]

  // instance methods
  -[DMFiCloudPolicyMonitor policyTypes]
  -[DMFiCloudPolicyMonitor identifier]
  -[DMFiCloudPolicyMonitor dealloc]
  -[DMFiCloudPolicyMonitor .cxx_destruct]
  -[DMFiCloudPolicyMonitor setICloudLogoutPolicy:]
  -[DMFiCloudPolicyMonitor iCloudLogoutPolicy]
  -[DMFiCloudPolicyMonitor requestiCloudLogoutPolicyWithError:]
  -[DMFiCloudPolicyMonitor initWithPolicyChangeHandler:]
  -[DMFiCloudPolicyMonitor requestiCloudLogoutPolicyWithCompletionHandler:]
  -[DMFiCloudPolicyMonitor init]


DMFInstallAppRequest : DMFAppRequest
 @property  unsigned long licenseType
 @property  BOOL allowFreePurchases

  // class methods
  +[DMFInstallAppRequest supportsSecureCoding]
  +[DMFInstallAppRequest isPermittedOnUserConnection]
  +[DMFInstallAppRequest isPermittedOnSystemConnection]
  +[DMFInstallAppRequest permittedPlatforms]

  // instance methods
  -[DMFInstallAppRequest encodeWithCoder:]
  -[DMFInstallAppRequest initWithCoder:]
  -[DMFInstallAppRequest licenseType]
  -[DMFInstallAppRequest setLicenseType:]
  -[DMFInstallAppRequest allowFreePurchases]
  -[DMFInstallAppRequest setAllowFreePurchases:]


DMFInstallConfigurationRequest : DMFTaskRequest
 @property  unsigned long type
 @property  NSString *managingProfileIdentifier
 @property  NSDictionary *profile

  // class methods
  +[DMFInstallConfigurationRequest supportsSecureCoding]
  +[DMFInstallConfigurationRequest isPermittedOnUserConnection]
  +[DMFInstallConfigurationRequest isPermittedOnSystemConnection]
  +[DMFInstallConfigurationRequest permittedPlatforms]

  // instance methods
  -[DMFInstallConfigurationRequest setProfile:]
  -[DMFInstallConfigurationRequest encodeWithCoder:]
  -[DMFInstallConfigurationRequest type]
  -[DMFInstallConfigurationRequest profile]
  -[DMFInstallConfigurationRequest .cxx_destruct]
  -[DMFInstallConfigurationRequest setType:]
  -[DMFInstallConfigurationRequest initWithCoder:]
  -[DMFInstallConfigurationRequest managingProfileIdentifier]
  -[DMFInstallConfigurationRequest setManagingProfileIdentifier:]


DMFInstalledApplication : DMFApplication
  // instance methods
  -[DMFInstalledApplication classForCoder]


DMFInstalledApplicationInstallProgress : DMFApplicationInstallProgress
  // instance methods
  -[DMFInstalledApplicationInstallProgress classForCoder]


DMFInstalledCertificate : DMFCertificate

DMFInstalledProfile : DMFProfile

DMFInstalledPayload : DMFProfilePayload

DMFInstalledProvisioningProfile : DMFProvisioningProfile

DMFInstallManagedBookRequest : DMFTaskRequest
 @property  NSString *originator
 @property  NSNumber *iTunesStoreID
 @property  NSString *persistentID
 @property  NSString *author
 @property  NSString *title
 @property  NSString *version
 @property  NSURL *URL
 @property  unsigned long type

  // class methods
  +[DMFInstallManagedBookRequest supportsSecureCoding]
  +[DMFInstallManagedBookRequest isPermittedOnUserConnection]
  +[DMFInstallManagedBookRequest isPermittedOnSystemConnection]
  +[DMFInstallManagedBookRequest permittedPlatforms]
  +[DMFInstallManagedBookRequest allowlistedClassForResultObject]

  // instance methods
  -[DMFInstallManagedBookRequest encodeWithCoder:]
  -[DMFInstallManagedBookRequest type]
  -[DMFInstallManagedBookRequest setURL:]
  -[DMFInstallManagedBookRequest .cxx_destruct]
  -[DMFInstallManagedBookRequest setOriginator:]
  -[DMFInstallManagedBookRequest originator]
  -[DMFInstallManagedBookRequest setType:]
  -[DMFInstallManagedBookRequest title]
  -[DMFInstallManagedBookRequest version]
  -[DMFInstallManagedBookRequest author]
  -[DMFInstallManagedBookRequest URL]
  -[DMFInstallManagedBookRequest setVersion:]
  -[DMFInstallManagedBookRequest setTitle:]
  -[DMFInstallManagedBookRequest initWithCoder:]
  -[DMFInstallManagedBookRequest setAuthor:]
  -[DMFInstallManagedBookRequest persistentID]
  -[DMFInstallManagedBookRequest setPersistentID:]
  -[DMFInstallManagedBookRequest iTunesStoreID]
  -[DMFInstallManagedBookRequest setITunesStoreID:]


DMFInstallManagedBookResultObject : CATTaskResultObject
 @property  DMFBook *book

  // class methods
  +[DMFInstallManagedBookResultObject supportsSecureCoding]

  // instance methods
  -[DMFInstallManagedBookResultObject encodeWithCoder:]
  -[DMFInstallManagedBookResultObject .cxx_destruct]
  -[DMFInstallManagedBookResultObject initWithCoder:]
  -[DMFInstallManagedBookResultObject initWithBook:]
  -[DMFInstallManagedBookResultObject book]


DMFInstallProfileRequest : DMFTaskRequest
 @property  unsigned long style
 @property  unsigned long type
 @property  NSString *managingProfileIdentifier
 @property  NSData *profileData
 @property  NSString *personaID

  // class methods
  +[DMFInstallProfileRequest supportsSecureCoding]
  +[DMFInstallProfileRequest isPermittedOnUserConnection]
  +[DMFInstallProfileRequest isPermittedOnSystemConnection]
  +[DMFInstallProfileRequest permittedPlatforms]

  // instance methods
  -[DMFInstallProfileRequest setProfileData:]
  -[DMFInstallProfileRequest personaID]
  -[DMFInstallProfileRequest setPersonaID:]
  -[DMFInstallProfileRequest encodeWithCoder:]
  -[DMFInstallProfileRequest type]
  -[DMFInstallProfileRequest style]
  -[DMFInstallProfileRequest .cxx_destruct]
  -[DMFInstallProfileRequest profileData]
  -[DMFInstallProfileRequest setType:]
  -[DMFInstallProfileRequest setStyle:]
  -[DMFInstallProfileRequest initWithCoder:]
  -[DMFInstallProfileRequest managingProfileIdentifier]
  -[DMFInstallProfileRequest setManagingProfileIdentifier:]


DMFInstallProvisioningProfileRequest : DMFTaskRequest
 @property  NSString *managingProfileIdentifier
 @property  NSData *profileData

  // class methods
  +[DMFInstallProvisioningProfileRequest supportsSecureCoding]
  +[DMFInstallProvisioningProfileRequest isPermittedOnUserConnection]
  +[DMFInstallProvisioningProfileRequest isPermittedOnSystemConnection]
  +[DMFInstallProvisioningProfileRequest permittedPlatforms]

  // instance methods
  -[DMFInstallProvisioningProfileRequest setProfileData:]
  -[DMFInstallProvisioningProfileRequest encodeWithCoder:]
  -[DMFInstallProvisioningProfileRequest .cxx_destruct]
  -[DMFInstallProvisioningProfileRequest profileData]
  -[DMFInstallProvisioningProfileRequest initWithCoder:]
  -[DMFInstallProvisioningProfileRequest managingProfileIdentifier]
  -[DMFInstallProvisioningProfileRequest setManagingProfileIdentifier:]


DMFInviteUserToVPPRequest : DMFTaskRequest
 @property  NSURL *URL
 @property  NSString *originator

  // class methods
  +[DMFInviteUserToVPPRequest supportsSecureCoding]
  +[DMFInviteUserToVPPRequest isPermittedOnUserConnection]
  +[DMFInviteUserToVPPRequest isPermittedOnSystemConnection]
  +[DMFInviteUserToVPPRequest permittedPlatforms]

  // instance methods
  -[DMFInviteUserToVPPRequest encodeWithCoder:]
  -[DMFInviteUserToVPPRequest setURL:]
  -[DMFInviteUserToVPPRequest .cxx_destruct]
  -[DMFInviteUserToVPPRequest setOriginator:]
  -[DMFInviteUserToVPPRequest originator]
  -[DMFInviteUserToVPPRequest URL]
  -[DMFInviteUserToVPPRequest initWithCoder:]


DMFJoinControlGroupRequest : DMFTaskRequest
 @property  DMFControlGroupIdentifier *groupIdentifier
 @property  NSArray *leaderIdentifiers
 @property  NSDate *expirationDate

  // class methods
  +[DMFJoinControlGroupRequest supportsSecureCoding]

  // instance methods
  -[DMFJoinControlGroupRequest expirationDate]
  -[DMFJoinControlGroupRequest groupIdentifier]
  -[DMFJoinControlGroupRequest setExpirationDate:]
  -[DMFJoinControlGroupRequest encodeWithCoder:]
  -[DMFJoinControlGroupRequest .cxx_destruct]
  -[DMFJoinControlGroupRequest setGroupIdentifier:]
  -[DMFJoinControlGroupRequest initWithCoder:]
  -[DMFJoinControlGroupRequest leaderIdentifiers]
  -[DMFJoinControlGroupRequest setLeaderIdentifiers:]


DMFLeaveControlGroupRequest : DMFTaskRequest
 @property  DMFControlGroupIdentifier *groupIdentifier
 @property  NSArray *leaderIdentifiers

  // class methods
  +[DMFLeaveControlGroupRequest supportsSecureCoding]

  // instance methods
  -[DMFLeaveControlGroupRequest groupIdentifier]
  -[DMFLeaveControlGroupRequest encodeWithCoder:]
  -[DMFLeaveControlGroupRequest .cxx_destruct]
  -[DMFLeaveControlGroupRequest setGroupIdentifier:]
  -[DMFLeaveControlGroupRequest initWithCoder:]
  -[DMFLeaveControlGroupRequest leaderIdentifiers]
  -[DMFLeaveControlGroupRequest setLeaderIdentifiers:]


DMFSetAppExtensionUUIDsRequest : DMFAppRequest
 @property  NSString *VPNUUIDString
 @property  NSString *contentFilterUUIDString
 @property  NSString *DNSProxyUUIDString

  // class methods
  +[DMFSetAppExtensionUUIDsRequest supportsSecureCoding]
  +[DMFSetAppExtensionUUIDsRequest isPermittedOnUserConnection]
  +[DMFSetAppExtensionUUIDsRequest isPermittedOnSystemConnection]
  +[DMFSetAppExtensionUUIDsRequest permittedPlatforms]

  // instance methods
  -[DMFSetAppExtensionUUIDsRequest encodeWithCoder:]
  -[DMFSetAppExtensionUUIDsRequest .cxx_destruct]
  -[DMFSetAppExtensionUUIDsRequest initWithCoder:]
  -[DMFSetAppExtensionUUIDsRequest VPNUUIDString]
  -[DMFSetAppExtensionUUIDsRequest setVPNUUIDString:]
  -[DMFSetAppExtensionUUIDsRequest contentFilterUUIDString]
  -[DMFSetAppExtensionUUIDsRequest setContentFilterUUIDString:]
  -[DMFSetAppExtensionUUIDsRequest DNSProxyUUIDString]
  -[DMFSetAppExtensionUUIDsRequest setDNSProxyUUIDString:]


DMFLockDeviceRequest : DMFTaskRequest
 @property  NSString *message
 @property  NSString *phoneNumber
 @property  NSString *pin

  // class methods
  +[DMFLockDeviceRequest supportsSecureCoding]
  +[DMFLockDeviceRequest isPermittedOnUserConnection]
  +[DMFLockDeviceRequest isPermittedOnSystemConnection]
  +[DMFLockDeviceRequest permittedPlatforms]

  // instance methods
  -[DMFLockDeviceRequest setMessage:]
  -[DMFLockDeviceRequest phoneNumber]
  -[DMFLockDeviceRequest encodeWithCoder:]
  -[DMFLockDeviceRequest setPhoneNumber:]
  -[DMFLockDeviceRequest .cxx_destruct]
  -[DMFLockDeviceRequest message]
  -[DMFLockDeviceRequest initWithCoder:]
  -[DMFLockDeviceRequest pin]
  -[DMFLockDeviceRequest setPin:]


DMFLogOutUserRequest : DMFTaskRequest
 @property  BOOL forceLogout

  // class methods
  +[DMFLogOutUserRequest supportsSecureCoding]
  +[DMFLogOutUserRequest isPermittedOnUserConnection]
  +[DMFLogOutUserRequest isPermittedOnSystemConnection]
  +[DMFLogOutUserRequest permittedPlatforms]

  // instance methods
  -[DMFLogOutUserRequest encodeWithCoder:]
  -[DMFLogOutUserRequest classForCoder]
  -[DMFLogOutUserRequest initWithCoder:]
  -[DMFLogOutUserRequest forceLogout]
  -[DMFLogOutUserRequest setForceLogout:]


DMFLogoutUserRequest : DMFLogOutUserRequest
  // instance methods
  -[DMFLogoutUserRequest classForCoder]


DMFManagementLockRequest : DMFTaskRequest
 @property  NSString *lockedByLabel
 @property  NSString *passcode

  // class methods
  +[DMFManagementLockRequest supportsSecureCoding]

  // instance methods
  -[DMFManagementLockRequest passcode]
  -[DMFManagementLockRequest encodeWithCoder:]
  -[DMFManagementLockRequest .cxx_destruct]
  -[DMFManagementLockRequest setPasscode:]
  -[DMFManagementLockRequest initWithCoder:]
  -[DMFManagementLockRequest lockedByLabel]
  -[DMFManagementLockRequest setLockedByLabel:]


DMFManagementUnlockRequest : DMFTaskRequest

DMFMDMv1InstallAppRequest : DMFInstallAppRequest
 @property  NSString *redemptionCode
 @property  NSString *originator
 @property  BOOL manage
 @property  unsigned long managementOptions
 @property  NSString *VPNUUIDString
 @property  NSString *contentFilterUUIDString
 @property  NSString *DNSProxyUUIDString
 @property  NSArray *associatedDomains
 @property  NSNumber *associatedDomainsEnableDirectDownloads
 @property  NSNumber *removable
 @property  NSDictionary *configuration

  // class methods
  +[DMFMDMv1InstallAppRequest supportsSecureCoding]
  +[DMFMDMv1InstallAppRequest isPermittedOnUserConnection]
  +[DMFMDMv1InstallAppRequest isPermittedOnSystemConnection]
  +[DMFMDMv1InstallAppRequest permittedPlatforms]
  +[DMFMDMv1InstallAppRequest allowlistedClassForResultObject]

  // instance methods
  -[DMFMDMv1InstallAppRequest setConfiguration:]
  -[DMFMDMv1InstallAppRequest encodeWithCoder:]
  -[DMFMDMv1InstallAppRequest configuration]
  -[DMFMDMv1InstallAppRequest .cxx_destruct]
  -[DMFMDMv1InstallAppRequest setOriginator:]
  -[DMFMDMv1InstallAppRequest originator]
  -[DMFMDMv1InstallAppRequest associatedDomains]
  -[DMFMDMv1InstallAppRequest setAssociatedDomains:]
  -[DMFMDMv1InstallAppRequest initWithCoder:]
  -[DMFMDMv1InstallAppRequest removable]
  -[DMFMDMv1InstallAppRequest setRemovable:]
  -[DMFMDMv1InstallAppRequest VPNUUIDString]
  -[DMFMDMv1InstallAppRequest setVPNUUIDString:]
  -[DMFMDMv1InstallAppRequest contentFilterUUIDString]
  -[DMFMDMv1InstallAppRequest setContentFilterUUIDString:]
  -[DMFMDMv1InstallAppRequest DNSProxyUUIDString]
  -[DMFMDMv1InstallAppRequest setDNSProxyUUIDString:]
  -[DMFMDMv1InstallAppRequest associatedDomainsEnableDirectDownloads]
  -[DMFMDMv1InstallAppRequest setAssociatedDomainsEnableDirectDownloads:]
  -[DMFMDMv1InstallAppRequest redemptionCode]
  -[DMFMDMv1InstallAppRequest setRedemptionCode:]
  -[DMFMDMv1InstallAppRequest manage]
  -[DMFMDMv1InstallAppRequest setManage:]
  -[DMFMDMv1InstallAppRequest managementOptions]
  -[DMFMDMv1InstallAppRequest setManagementOptions:]


DMFMDMv1InstallAppResultObject : CATTaskResultObject
 @property  NSString *bundleIdentifier
 @property  unsigned long state

  // class methods
  +[DMFMDMv1InstallAppResultObject supportsSecureCoding]

  // instance methods
  -[DMFMDMv1InstallAppResultObject encodeWithCoder:]
  -[DMFMDMv1InstallAppResultObject state]
  -[DMFMDMv1InstallAppResultObject .cxx_destruct]
  -[DMFMDMv1InstallAppResultObject bundleIdentifier]
  -[DMFMDMv1InstallAppResultObject initWithCoder:]
  -[DMFMDMv1InstallAppResultObject initWithBundleIdentifier:state:]


DMFMDMv1StartManagingAppRequest : DMFAppRequest
 @property  NSString *originator
 @property  unsigned long managementOptions
 @property  NSString *VPNUUIDString
 @property  NSString *contentFilterUUIDString
 @property  NSString *DNSProxyUUIDString
 @property  NSArray *associatedDomains
 @property  NSNumber *associatedDomainsEnableDirectDownloads
 @property  NSNumber *removable
 @property  NSDictionary *configuration
 @property  NSNumber *internal

  // class methods
  +[DMFMDMv1StartManagingAppRequest supportsSecureCoding]
  +[DMFMDMv1StartManagingAppRequest isPermittedOnUserConnection]
  +[DMFMDMv1StartManagingAppRequest isPermittedOnSystemConnection]
  +[DMFMDMv1StartManagingAppRequest permittedPlatforms]
  +[DMFMDMv1StartManagingAppRequest allowlistedClassForResultObject]

  // instance methods
  -[DMFMDMv1StartManagingAppRequest setConfiguration:]
  -[DMFMDMv1StartManagingAppRequest encodeWithCoder:]
  -[DMFMDMv1StartManagingAppRequest configuration]
  -[DMFMDMv1StartManagingAppRequest .cxx_destruct]
  -[DMFMDMv1StartManagingAppRequest setInternal:]
  -[DMFMDMv1StartManagingAppRequest setOriginator:]
  -[DMFMDMv1StartManagingAppRequest originator]
  -[DMFMDMv1StartManagingAppRequest associatedDomains]
  -[DMFMDMv1StartManagingAppRequest setAssociatedDomains:]
  -[DMFMDMv1StartManagingAppRequest internal]
  -[DMFMDMv1StartManagingAppRequest initWithCoder:]
  -[DMFMDMv1StartManagingAppRequest removable]
  -[DMFMDMv1StartManagingAppRequest setRemovable:]
  -[DMFMDMv1StartManagingAppRequest VPNUUIDString]
  -[DMFMDMv1StartManagingAppRequest setVPNUUIDString:]
  -[DMFMDMv1StartManagingAppRequest contentFilterUUIDString]
  -[DMFMDMv1StartManagingAppRequest setContentFilterUUIDString:]
  -[DMFMDMv1StartManagingAppRequest DNSProxyUUIDString]
  -[DMFMDMv1StartManagingAppRequest setDNSProxyUUIDString:]
  -[DMFMDMv1StartManagingAppRequest associatedDomainsEnableDirectDownloads]
  -[DMFMDMv1StartManagingAppRequest setAssociatedDomainsEnableDirectDownloads:]
  -[DMFMDMv1StartManagingAppRequest managementOptions]
  -[DMFMDMv1StartManagingAppRequest setManagementOptions:]


DMFMDMv1UpdateAppRequest : DMFUpdateAppRequest
 @property  NSString *originator
 @property  unsigned long managementOptions
 @property  NSString *VPNUUIDString
 @property  NSString *contentFilterUUIDString
 @property  NSString *DNSProxyUUIDString
 @property  NSArray *associatedDomains
 @property  NSNumber *associatedDomainsEnableDirectDownloads
 @property  NSNumber *removable
 @property  NSDictionary *configuration

  // class methods
  +[DMFMDMv1UpdateAppRequest supportsSecureCoding]
  +[DMFMDMv1UpdateAppRequest allowlistedClassForResultObject]

  // instance methods
  -[DMFMDMv1UpdateAppRequest setConfiguration:]
  -[DMFMDMv1UpdateAppRequest encodeWithCoder:]
  -[DMFMDMv1UpdateAppRequest configuration]
  -[DMFMDMv1UpdateAppRequest .cxx_destruct]
  -[DMFMDMv1UpdateAppRequest setOriginator:]
  -[DMFMDMv1UpdateAppRequest originator]
  -[DMFMDMv1UpdateAppRequest associatedDomains]
  -[DMFMDMv1UpdateAppRequest setAssociatedDomains:]
  -[DMFMDMv1UpdateAppRequest initWithCoder:]
  -[DMFMDMv1UpdateAppRequest removable]
  -[DMFMDMv1UpdateAppRequest setRemovable:]
  -[DMFMDMv1UpdateAppRequest VPNUUIDString]
  -[DMFMDMv1UpdateAppRequest setVPNUUIDString:]
  -[DMFMDMv1UpdateAppRequest contentFilterUUIDString]
  -[DMFMDMv1UpdateAppRequest setContentFilterUUIDString:]
  -[DMFMDMv1UpdateAppRequest DNSProxyUUIDString]
  -[DMFMDMv1UpdateAppRequest setDNSProxyUUIDString:]
  -[DMFMDMv1UpdateAppRequest associatedDomainsEnableDirectDownloads]
  -[DMFMDMv1UpdateAppRequest setAssociatedDomainsEnableDirectDownloads:]
  -[DMFMDMv1UpdateAppRequest managementOptions]
  -[DMFMDMv1UpdateAppRequest setManagementOptions:]


DMFOpenAppRequest : DMFTaskRequest
 @property  NSString *bundleIdentifier
 @property  NSString *activityType
 @property  NSData *activityData
 @property  BOOL lockInApp

  // class methods
  +[DMFOpenAppRequest supportsSecureCoding]
  +[DMFOpenAppRequest isPermittedOnUserConnection]
  +[DMFOpenAppRequest isPermittedOnSystemConnection]
  +[DMFOpenAppRequest permittedPlatforms]

  // instance methods
  -[DMFOpenAppRequest setActivityType:]
  -[DMFOpenAppRequest encodeWithCoder:]
  -[DMFOpenAppRequest activityType]
  -[DMFOpenAppRequest .cxx_destruct]
  -[DMFOpenAppRequest setBundleIdentifier:]
  -[DMFOpenAppRequest bundleIdentifier]
  -[DMFOpenAppRequest initWithCoder:]
  -[DMFOpenAppRequest activityData]
  -[DMFOpenAppRequest setActivityData:]
  -[DMFOpenAppRequest lockInApp]
  -[DMFOpenAppRequest setLockInApp:]


DMFOpenURLRequest : DMFTaskRequest
 @property  NSURL *url
 @property  NSString *URLDisplayName
 @property  BOOL lockInApp
 @property  NSArray *handlingBundleIdentifiers

  // class methods
  +[DMFOpenURLRequest supportsSecureCoding]
  +[DMFOpenURLRequest isPermittedOnUserConnection]
  +[DMFOpenURLRequest isPermittedOnSystemConnection]
  +[DMFOpenURLRequest permittedPlatforms]

  // instance methods
  -[DMFOpenURLRequest setUrl:]
  -[DMFOpenURLRequest encodeWithCoder:]
  -[DMFOpenURLRequest .cxx_destruct]
  -[DMFOpenURLRequest url]
  -[DMFOpenURLRequest initWithCoder:]
  -[DMFOpenURLRequest lockInApp]
  -[DMFOpenURLRequest setLockInApp:]
  -[DMFOpenURLRequest URLDisplayName]
  -[DMFOpenURLRequest setURLDisplayName:]
  -[DMFOpenURLRequest handlingBundleIdentifiers]
  -[DMFOpenURLRequest setHandlingBundleIdentifiers:]


DMFOSStateHandler : NSObject
 @property  @? block
 @property  NSString *name
 @property  unsigned long handle
 @property  NSObject<OS_os_transaction> *transaction

  // instance methods
  -[DMFOSStateHandler setHandle:]
  -[DMFOSStateHandler transaction]
  -[DMFOSStateHandler dealloc]
  -[DMFOSStateHandler handle]
  -[DMFOSStateHandler .cxx_destruct]
  -[DMFOSStateHandler setBlock:]
  -[DMFOSStateHandler initWithQueue:name:stateHandlerBlock:]
  -[DMFOSStateHandler _serializeState]
  -[DMFOSStateHandler setTransaction:]
  -[DMFOSStateHandler setName:]
  -[DMFOSStateHandler block]
  -[DMFOSStateHandler name]


DMFOSUpdate : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *productKey
 @property  NSString *humanReadableName
 @property  NSString *productName
 @property  NSString *version
 @property  NSString *build
 @property  unsigned long downloadSize
 @property  unsigned long installSize
 @property  BOOL isCritical
 @property  BOOL restartRequired
 @property  BOOL allowsInstallLater

  // class methods
  +[DMFOSUpdate supportsSecureCoding]

  // instance methods
  -[DMFOSUpdate encodeWithCoder:]
  -[DMFOSUpdate build]
  -[DMFOSUpdate productName]
  -[DMFOSUpdate .cxx_destruct]
  -[DMFOSUpdate version]
  -[DMFOSUpdate copyWithZone:]
  -[DMFOSUpdate restartRequired]
  -[DMFOSUpdate isCritical]
  -[DMFOSUpdate downloadSize]
  -[DMFOSUpdate isEqual:]
  -[DMFOSUpdate initWithCoder:]
  -[DMFOSUpdate humanReadableName]
  -[DMFOSUpdate productKey]
  -[DMFOSUpdate initWithProductKey:humanReadableName:productName:version:build:downloadSize:installSize:isCritical:restartRequired:allowsInstallLater:]
  -[DMFOSUpdate installSize]
  -[DMFOSUpdate allowsInstallLater]


DMFPlayLostModeSoundRequest : DMFTaskRequest
  // class methods
  +[DMFPlayLostModeSoundRequest isPermittedOnUserConnection]
  +[DMFPlayLostModeSoundRequest isPermittedOnSystemConnection]
  +[DMFPlayLostModeSoundRequest permittedPlatforms]


DMFPolicyMonitor : NSObject
 @property  NSXPCConnection *xpcConnection
 @property  int firstUnlockToken
 @property  NSObject<OS_dispatch_queue> *firstUnlockQueue
 @property  NSObject<OS_dispatch_queue> *registrationCallbackQueue
 @property  NSMutableDictionary *notificationTokensByPolicyMonitorIdentifier
 @property  NSMutableArray *pendingRequests

  // class methods
  +[DMFPolicyMonitor remoteInterface]
  +[DMFPolicyMonitor mobileKeyBagFirstUnlockNotificationName]
  +[DMFPolicyMonitor policyMonitor]
  +[DMFPolicyMonitor hasFirstUnlocked]

  // instance methods
  -[DMFPolicyMonitor registrationCallbackQueue]
  -[DMFPolicyMonitor notificationTokensByPolicyMonitorIdentifier]
  -[DMFPolicyMonitor xpcConnection]
  -[DMFPolicyMonitor initWithXPCConnection:]
  -[DMFPolicyMonitor pendingRequests]
  -[DMFPolicyMonitor firstUnlockQueue]
  -[DMFPolicyMonitor dealloc]
  -[DMFPolicyMonitor .cxx_destruct]
  -[DMFPolicyMonitor _dispatchRequest:]
  -[DMFPolicyMonitor invalidatePolicyMonitor:]
  -[DMFPolicyMonitor firstUnlockToken]
  -[DMFPolicyMonitor addRegistration:forPolicyMonitorIdentifier:completionHandler:]
  -[DMFPolicyMonitor requestPoliciesForTypes:withError:]
  -[DMFPolicyMonitor requestPoliciesForTypes:completionHandler:]
  -[DMFPolicyMonitor init]


DMFPolicyRegistration : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *identifier
 @property  NSSet *policyTypes
 @property  @? callback

  // class methods
  +[DMFPolicyRegistration supportsSecureCoding]

  // instance methods
  -[DMFPolicyRegistration policyTypes]
  -[DMFPolicyRegistration callback]
  -[DMFPolicyRegistration setCallback:]
  -[DMFPolicyRegistration identifier]
  -[DMFPolicyRegistration initWithIdentifier:policyTypes:callback:]
  -[DMFPolicyRegistration encodeWithCoder:]
  -[DMFPolicyRegistration .cxx_destruct]
  -[DMFPolicyRegistration copyWithZone:]
  -[DMFPolicyRegistration isEqual:]
  -[DMFPolicyRegistration initWithCoder:]


DMFProcessDeclarationsRequest : DMFTaskRequest
 @property  NSString *organizationIdentifier

  // class methods
  +[DMFProcessDeclarationsRequest supportsSecureCoding]
  +[DMFProcessDeclarationsRequest isPermittedOnUserConnection]
  +[DMFProcessDeclarationsRequest isPermittedOnSystemConnection]
  +[DMFProcessDeclarationsRequest permittedPlatforms]

  // instance methods
  -[DMFProcessDeclarationsRequest organizationIdentifier]
  -[DMFProcessDeclarationsRequest encodeWithCoder:]
  -[DMFProcessDeclarationsRequest setOrganizationIdentifier:]
  -[DMFProcessDeclarationsRequest .cxx_destruct]
  -[DMFProcessDeclarationsRequest initWithCoder:]


DMFProcessStatusRequest : DMFTaskRequest
 @property  NSString *organizationIdentifier

  // class methods
  +[DMFProcessStatusRequest supportsSecureCoding]
  +[DMFProcessStatusRequest isPermittedOnUserConnection]
  +[DMFProcessStatusRequest isPermittedOnSystemConnection]
  +[DMFProcessStatusRequest permittedPlatforms]

  // instance methods
  -[DMFProcessStatusRequest organizationIdentifier]
  -[DMFProcessStatusRequest encodeWithCoder:]
  -[DMFProcessStatusRequest setOrganizationIdentifier:]
  -[DMFProcessStatusRequest .cxx_destruct]
  -[DMFProcessStatusRequest initWithCoder:]


DMFProfile : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *UUID
 @property  unsigned long type
 @property  NSString *identifier
 @property  long long profileVersion
 @property  NSString *displayName
 @property  NSString *organization
 @property  NSString *profileDescription
 @property  BOOL isManaged
 @property  BOOL isLocked
 @property  BOOL hasRemovalPasscode
 @property  BOOL isEncrypted
 @property  NSArray *signerCertificates
 @property  NSArray *payloads
 @property  NSDictionary *restrictions

  // class methods
  +[DMFProfile supportsSecureCoding]

  // instance methods
  -[DMFProfile isLocked]
  -[DMFProfile identifier]
  -[DMFProfile isManaged]
  -[DMFProfile encodeWithCoder:]
  -[DMFProfile type]
  -[DMFProfile isEncrypted]
  -[DMFProfile payloads]
  -[DMFProfile .cxx_destruct]
  -[DMFProfile UUID]
  -[DMFProfile profileDescription]
  -[DMFProfile profileVersion]
  -[DMFProfile organization]
  -[DMFProfile copyWithZone:]
  -[DMFProfile displayName]
  -[DMFProfile isEqual:]
  -[DMFProfile initWithCoder:]
  -[DMFProfile restrictions]
  -[DMFProfile signerCertificates]
  -[DMFProfile initWithUUID:type:identifier:profileVersion:displayName:organization:profileDescription:isManaged:isLocked:hasRemovalPasscode:isEncrypted:signerCertificates:payloads:restrictions:]
  -[DMFProfile hasRemovalPasscode]


DMFProfilePayload : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *type
 @property  NSString *identifier
 @property  long long payloadVersion
 @property  NSString *displayName
 @property  NSString *organization
 @property  NSString *payloadDescription

  // class methods
  +[DMFProfilePayload supportsSecureCoding]

  // instance methods
  -[DMFProfilePayload identifier]
  -[DMFProfilePayload encodeWithCoder:]
  -[DMFProfilePayload type]
  -[DMFProfilePayload .cxx_destruct]
  -[DMFProfilePayload payloadVersion]
  -[DMFProfilePayload organization]
  -[DMFProfilePayload copyWithZone:]
  -[DMFProfilePayload displayName]
  -[DMFProfilePayload isEqual:]
  -[DMFProfilePayload initWithCoder:]
  -[DMFProfilePayload payloadDescription]
  -[DMFProfilePayload initWithType:identifier:payloadVersion:displayName:organization:payloadDescription:]


DMFProvisioningProfile : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *UUID
 @property  NSString *name
 @property  NSDate *expirationDate

  // class methods
  +[DMFProvisioningProfile supportsSecureCoding]

  // instance methods
  -[DMFProvisioningProfile expirationDate]
  -[DMFProvisioningProfile encodeWithCoder:]
  -[DMFProvisioningProfile .cxx_destruct]
  -[DMFProvisioningProfile UUID]
  -[DMFProvisioningProfile copyWithZone:]
  -[DMFProvisioningProfile name]
  -[DMFProvisioningProfile isEqual:]
  -[DMFProvisioningProfile initWithCoder:]
  -[DMFProvisioningProfile initWithUUID:name:expirationDate:]


DMFRefreshCellularPlansRequest : DMFTaskRequest
 @property  NSURL *eSIMServerURL

  // class methods
  +[DMFRefreshCellularPlansRequest supportsSecureCoding]
  +[DMFRefreshCellularPlansRequest isPermittedOnUserConnection]
  +[DMFRefreshCellularPlansRequest isPermittedOnSystemConnection]
  +[DMFRefreshCellularPlansRequest permittedPlatforms]

  // instance methods
  -[DMFRefreshCellularPlansRequest encodeWithCoder:]
  -[DMFRefreshCellularPlansRequest .cxx_destruct]
  -[DMFRefreshCellularPlansRequest initWithCoder:]
  -[DMFRefreshCellularPlansRequest eSIMServerURL]
  -[DMFRefreshCellularPlansRequest setESIMServerURL:]


DMFRefreshStatusRequest : DMFTaskRequest
 @property  NSString *organizationIdentifier

  // class methods
  +[DMFRefreshStatusRequest supportsSecureCoding]
  +[DMFRefreshStatusRequest isPermittedOnUserConnection]
  +[DMFRefreshStatusRequest isPermittedOnSystemConnection]
  +[DMFRefreshStatusRequest permittedPlatforms]
  +[DMFRefreshStatusRequest allowlistedClassForResultObject]

  // instance methods
  -[DMFRefreshStatusRequest organizationIdentifier]
  -[DMFRefreshStatusRequest encodeWithCoder:]
  -[DMFRefreshStatusRequest setOrganizationIdentifier:]
  -[DMFRefreshStatusRequest .cxx_destruct]
  -[DMFRefreshStatusRequest initWithCoder:]


DMFRefreshStatusResultObject : CATTaskResultObject
 @property  NSNumber *numberOfUpdates

  // class methods
  +[DMFRefreshStatusResultObject supportsSecureCoding]

  // instance methods
  -[DMFRefreshStatusResultObject numberOfUpdates]
  -[DMFRefreshStatusResultObject encodeWithCoder:]
  -[DMFRefreshStatusResultObject setNumberOfUpdates:]
  -[DMFRefreshStatusResultObject .cxx_destruct]
  -[DMFRefreshStatusResultObject initWithCoder:]


DMFRegisterConfigurationSourceRequest : DMFTaskRequest
 @property  NSString *configurationSourceName
 @property  NSString *organizationIdentifier
 @property  NSString *machServiceName
 @property  NSXPCListenerEndpoint *listenerEndpoint
 @property  DMFReportingRequirements *reportingRequirements

  // class methods
  +[DMFRegisterConfigurationSourceRequest supportsSecureCoding]
  +[DMFRegisterConfigurationSourceRequest isPermittedOnUserConnection]
  +[DMFRegisterConfigurationSourceRequest isPermittedOnSystemConnection]
  +[DMFRegisterConfigurationSourceRequest permittedPlatforms]

  // instance methods
  -[DMFRegisterConfigurationSourceRequest listenerEndpoint]
  -[DMFRegisterConfigurationSourceRequest organizationIdentifier]
  -[DMFRegisterConfigurationSourceRequest setListenerEndpoint:]
  -[DMFRegisterConfigurationSourceRequest configurationSourceName]
  -[DMFRegisterConfigurationSourceRequest setConfigurationSourceName:]
  -[DMFRegisterConfigurationSourceRequest setReportingRequirements:]
  -[DMFRegisterConfigurationSourceRequest encodeWithCoder:]
  -[DMFRegisterConfigurationSourceRequest setOrganizationIdentifier:]
  -[DMFRegisterConfigurationSourceRequest setMachServiceName:]
  -[DMFRegisterConfigurationSourceRequest .cxx_destruct]
  -[DMFRegisterConfigurationSourceRequest reportingRequirements]
  -[DMFRegisterConfigurationSourceRequest machServiceName]
  -[DMFRegisterConfigurationSourceRequest initWithCoder:]


DMFRemoveAppRequest : DMFAppRequest
  // class methods
  +[DMFRemoveAppRequest isPermittedOnUserConnection]
  +[DMFRemoveAppRequest isPermittedOnSystemConnection]
  +[DMFRemoveAppRequest permittedPlatforms]


DMFRemoveConfigurationRequest : DMFTaskRequest
 @property  unsigned long type
 @property  NSDictionary *profile

  // class methods
  +[DMFRemoveConfigurationRequest supportsSecureCoding]
  +[DMFRemoveConfigurationRequest isPermittedOnUserConnection]
  +[DMFRemoveConfigurationRequest isPermittedOnSystemConnection]
  +[DMFRemoveConfigurationRequest permittedPlatforms]

  // instance methods
  -[DMFRemoveConfigurationRequest setProfile:]
  -[DMFRemoveConfigurationRequest encodeWithCoder:]
  -[DMFRemoveConfigurationRequest type]
  -[DMFRemoveConfigurationRequest profile]
  -[DMFRemoveConfigurationRequest .cxx_destruct]
  -[DMFRemoveConfigurationRequest setType:]
  -[DMFRemoveConfigurationRequest initWithCoder:]


DMFRemoveManagedBookRequest : DMFTaskRequest
 @property  NSNumber *iTunesStoreID
 @property  NSString *persistentID

  // class methods
  +[DMFRemoveManagedBookRequest supportsSecureCoding]
  +[DMFRemoveManagedBookRequest isPermittedOnUserConnection]
  +[DMFRemoveManagedBookRequest isPermittedOnSystemConnection]
  +[DMFRemoveManagedBookRequest permittedPlatforms]

  // instance methods
  -[DMFRemoveManagedBookRequest encodeWithCoder:]
  -[DMFRemoveManagedBookRequest .cxx_destruct]
  -[DMFRemoveManagedBookRequest initWithCoder:]
  -[DMFRemoveManagedBookRequest persistentID]
  -[DMFRemoveManagedBookRequest setPersistentID:]
  -[DMFRemoveManagedBookRequest iTunesStoreID]
  -[DMFRemoveManagedBookRequest setITunesStoreID:]


DMFRemoveOSUpdateRequest : DMFTaskRequest
  // class methods
  +[DMFRemoveOSUpdateRequest isPermittedOnUserConnection]
  +[DMFRemoveOSUpdateRequest isPermittedOnSystemConnection]
  +[DMFRemoveOSUpdateRequest permittedPlatforms]


DMFRemoveProfileRequest : DMFTaskRequest
 @property  unsigned long type
 @property  NSString *profileIdentifier

  // class methods
  +[DMFRemoveProfileRequest supportsSecureCoding]
  +[DMFRemoveProfileRequest isPermittedOnUserConnection]
  +[DMFRemoveProfileRequest isPermittedOnSystemConnection]
  +[DMFRemoveProfileRequest permittedPlatforms]

  // instance methods
  -[DMFRemoveProfileRequest setProfileIdentifier:]
  -[DMFRemoveProfileRequest encodeWithCoder:]
  -[DMFRemoveProfileRequest type]
  -[DMFRemoveProfileRequest .cxx_destruct]
  -[DMFRemoveProfileRequest profileIdentifier]
  -[DMFRemoveProfileRequest setType:]
  -[DMFRemoveProfileRequest initWithCoder:]


DMFRemoveProtectedProfileRequest : DMFRemoveProfileRequest
  // class methods
  +[DMFRemoveProtectedProfileRequest isPermittedOnUserConnection]
  +[DMFRemoveProtectedProfileRequest isPermittedOnSystemConnection]
  +[DMFRemoveProtectedProfileRequest permittedPlatforms]


DMFRemoveProvisioningProfileRequest : DMFTaskRequest
 @property  NSString *profileIdentifier
 @property  NSString *managingProfileIdentifier

  // class methods
  +[DMFRemoveProvisioningProfileRequest supportsSecureCoding]
  +[DMFRemoveProvisioningProfileRequest isPermittedOnUserConnection]
  +[DMFRemoveProvisioningProfileRequest isPermittedOnSystemConnection]
  +[DMFRemoveProvisioningProfileRequest permittedPlatforms]

  // instance methods
  -[DMFRemoveProvisioningProfileRequest setProfileIdentifier:]
  -[DMFRemoveProvisioningProfileRequest encodeWithCoder:]
  -[DMFRemoveProvisioningProfileRequest .cxx_destruct]
  -[DMFRemoveProvisioningProfileRequest profileIdentifier]
  -[DMFRemoveProvisioningProfileRequest initWithCoder:]
  -[DMFRemoveProvisioningProfileRequest managingProfileIdentifier]
  -[DMFRemoveProvisioningProfileRequest setManagingProfileIdentifier:]


DMFReportingRequirements : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *reachableHostName
 @property  double updateCoalescenceInterval
 @property  BOOL requireActiveConnection

  // class methods
  +[DMFReportingRequirements supportsSecureCoding]

  // instance methods
  -[DMFReportingRequirements encodeWithCoder:]
  -[DMFReportingRequirements .cxx_destruct]
  -[DMFReportingRequirements copyWithZone:]
  -[DMFReportingRequirements init]
  -[DMFReportingRequirements initWithCoder:]
  -[DMFReportingRequirements reachableHostName]
  -[DMFReportingRequirements setReachableHostName:]
  -[DMFReportingRequirements updateCoalescenceInterval]
  -[DMFReportingRequirements setUpdateCoalescenceInterval:]
  -[DMFReportingRequirements requireActiveConnection]
  -[DMFReportingRequirements setRequireActiveConnection:]


DMFRequestAirPlayMirroringRequest : DMFTaskRequest
 @property  NSString *destinationName
 @property  NSString *destinationDeviceID
 @property  NSString *password
 @property  BOOL force
 @property  double scanWaitInterval

  // class methods
  +[DMFRequestAirPlayMirroringRequest supportsSecureCoding]
  +[DMFRequestAirPlayMirroringRequest isPermittedOnUserConnection]
  +[DMFRequestAirPlayMirroringRequest isPermittedOnSystemConnection]
  +[DMFRequestAirPlayMirroringRequest permittedPlatforms]
  +[DMFRequestAirPlayMirroringRequest allowlistedClassForResultObject]

  // instance methods
  -[DMFRequestAirPlayMirroringRequest force]
  -[DMFRequestAirPlayMirroringRequest encodeWithCoder:]
  -[DMFRequestAirPlayMirroringRequest setForce:]
  -[DMFRequestAirPlayMirroringRequest .cxx_destruct]
  -[DMFRequestAirPlayMirroringRequest password]
  -[DMFRequestAirPlayMirroringRequest setPassword:]
  -[DMFRequestAirPlayMirroringRequest initWithCoder:]
  -[DMFRequestAirPlayMirroringRequest destinationName]
  -[DMFRequestAirPlayMirroringRequest setDestinationName:]
  -[DMFRequestAirPlayMirroringRequest destinationDeviceID]
  -[DMFRequestAirPlayMirroringRequest setDestinationDeviceID:]
  -[DMFRequestAirPlayMirroringRequest scanWaitInterval]
  -[DMFRequestAirPlayMirroringRequest setScanWaitInterval:]


DMFRequestAirPlayMirroringResultObject : CATTaskResultObject
 @property  unsigned long status

  // class methods
  +[DMFRequestAirPlayMirroringResultObject supportsSecureCoding]

  // instance methods
  -[DMFRequestAirPlayMirroringResultObject encodeWithCoder:]
  -[DMFRequestAirPlayMirroringResultObject status]
  -[DMFRequestAirPlayMirroringResultObject initWithStatus:]
  -[DMFRequestAirPlayMirroringResultObject initWithCoder:]


DMFRestartDeviceRequest : DMFTaskRequest
  // class methods
  +[DMFRestartDeviceRequest isPermittedOnUserConnection]
  +[DMFRestartDeviceRequest isPermittedOnSystemConnection]
  +[DMFRestartDeviceRequest permittedPlatforms]


DMFScheduleOSUpdateRequest : DMFTaskRequest
 @property  unsigned long action
 @property  NSString *productKey
 @property  NSString *productVersion
 @property  BOOL useDelay

  // class methods
  +[DMFScheduleOSUpdateRequest supportsSecureCoding]
  +[DMFScheduleOSUpdateRequest isPermittedOnUserConnection]
  +[DMFScheduleOSUpdateRequest isPermittedOnSystemConnection]
  +[DMFScheduleOSUpdateRequest permittedPlatforms]
  +[DMFScheduleOSUpdateRequest allowlistedClassForResultObject]
  +[DMFScheduleOSUpdateRequest _action:fromString:]
  +[DMFScheduleOSUpdateRequest _descriptionForAction:]

  // instance methods
  -[DMFScheduleOSUpdateRequest encodeWithCoder:]
  -[DMFScheduleOSUpdateRequest .cxx_destruct]
  -[DMFScheduleOSUpdateRequest setProductVersion:]
  -[DMFScheduleOSUpdateRequest action]
  -[DMFScheduleOSUpdateRequest productVersion]
  -[DMFScheduleOSUpdateRequest setAction:]
  -[DMFScheduleOSUpdateRequest init]
  -[DMFScheduleOSUpdateRequest initWithCoder:]
  -[DMFScheduleOSUpdateRequest useDelay]
  -[DMFScheduleOSUpdateRequest setUseDelay:]
  -[DMFScheduleOSUpdateRequest productKey]
  -[DMFScheduleOSUpdateRequest setProductKey:]


DMFScheduleOSUpdateResultObject : CATTaskResultObject
 @property  unsigned long action
 @property  NSString *productKey
 @property  NSError *error

  // class methods
  +[DMFScheduleOSUpdateResultObject supportsSecureCoding]

  // instance methods
  -[DMFScheduleOSUpdateResultObject encodeWithCoder:]
  -[DMFScheduleOSUpdateResultObject error]
  -[DMFScheduleOSUpdateResultObject .cxx_destruct]
  -[DMFScheduleOSUpdateResultObject action]
  -[DMFScheduleOSUpdateResultObject initWithCoder:]
  -[DMFScheduleOSUpdateResultObject productKey]
  -[DMFScheduleOSUpdateResultObject initWithAction:productKey:error:]


DMFSecurityInformation : NSObject <NSCopying, NSSecureCoding>
 @property  BOOL supportsBlockLevelEncryption
 @property  BOOL supportsFileLevelEncryption
 @property  BOOL passcodeIsSet
 @property  BOOL passcodeIsCompliantWithGlobalRestrictions
 @property  BOOL passcodeIsCompliantWithProfileRestrictions
 @property  unsigned long passcodeLockGracePeriod
 @property  unsigned long passcodeLockGracePeriodEnforced

  // class methods
  +[DMFSecurityInformation supportsSecureCoding]

  // instance methods
  -[DMFSecurityInformation encodeWithCoder:]
  -[DMFSecurityInformation passcodeLockGracePeriod]
  -[DMFSecurityInformation supportsBlockLevelEncryption]
  -[DMFSecurityInformation copyWithZone:]
  -[DMFSecurityInformation supportsFileLevelEncryption]
  -[DMFSecurityInformation isEqual:]
  -[DMFSecurityInformation initWithCoder:]
  -[DMFSecurityInformation initWithSupportsBlockLevelEncryption:supportsFileLevelEncryption:passcodeIsSet:passcodeIsCompliantWithGlobalRestrictions:passcodeIsCompliantWithProfileRestrictions:passcodeLockGracePeriodEnforced:passcodeLockGracePeriod:]
  -[DMFSecurityInformation passcodeIsSet]
  -[DMFSecurityInformation passcodeIsCompliantWithGlobalRestrictions]
  -[DMFSecurityInformation passcodeIsCompliantWithProfileRestrictions]
  -[DMFSecurityInformation passcodeLockGracePeriodEnforced]


DMFSendEventRequest : DMFTaskRequest
 @property  NSString *organizationIdentifier
 @property  NSString *inReplyTo
 @property  NSString *eventType
 @property  NSDictionary *details

  // class methods
  +[DMFSendEventRequest supportsSecureCoding]
  +[DMFSendEventRequest isPermittedOnUserConnection]
  +[DMFSendEventRequest isPermittedOnSystemConnection]
  +[DMFSendEventRequest permittedPlatforms]

  // instance methods
  -[DMFSendEventRequest setDetails:]
  -[DMFSendEventRequest organizationIdentifier]
  -[DMFSendEventRequest setEventType:]
  -[DMFSendEventRequest encodeWithCoder:]
  -[DMFSendEventRequest setOrganizationIdentifier:]
  -[DMFSendEventRequest details]
  -[DMFSendEventRequest .cxx_destruct]
  -[DMFSendEventRequest eventType]
  -[DMFSendEventRequest initWithCoder:]
  -[DMFSendEventRequest inReplyTo]
  -[DMFSendEventRequest setInReplyTo:]


DMFSetAirPlayRouteRequest : DMFTaskRequest
 @property  NSString *routeUID
 @property  NSString *password
 @property  BOOL suppressPasscodePrompt

  // class methods
  +[DMFSetAirPlayRouteRequest supportsSecureCoding]

  // instance methods
  -[DMFSetAirPlayRouteRequest encodeWithCoder:]
  -[DMFSetAirPlayRouteRequest routeUID]
  -[DMFSetAirPlayRouteRequest setRouteUID:]
  -[DMFSetAirPlayRouteRequest .cxx_destruct]
  -[DMFSetAirPlayRouteRequest password]
  -[DMFSetAirPlayRouteRequest setPassword:]
  -[DMFSetAirPlayRouteRequest initWithCoder:]
  -[DMFSetAirPlayRouteRequest suppressPasscodePrompt]
  -[DMFSetAirPlayRouteRequest setSuppressPasscodePrompt:]


DMFSetAppAnalyticsEnabledRequest : DMFTaskRequest
 @property  BOOL enabled

  // class methods
  +[DMFSetAppAnalyticsEnabledRequest supportsSecureCoding]
  +[DMFSetAppAnalyticsEnabledRequest isPermittedOnUserConnection]
  +[DMFSetAppAnalyticsEnabledRequest isPermittedOnSystemConnection]
  +[DMFSetAppAnalyticsEnabledRequest permittedPlatforms]

  // instance methods
  -[DMFSetAppAnalyticsEnabledRequest encodeWithCoder:]
  -[DMFSetAppAnalyticsEnabledRequest setEnabled:]
  -[DMFSetAppAnalyticsEnabledRequest enabled]
  -[DMFSetAppAnalyticsEnabledRequest initWithCoder:]


DMFSetAppAssociatedDomainsEnableDirectDownloadsRequest : DMFAppRequest
 @property  NSNumber *associatedDomainsEnableDirectDownloads

  // class methods
  +[DMFSetAppAssociatedDomainsEnableDirectDownloadsRequest supportsSecureCoding]
  +[DMFSetAppAssociatedDomainsEnableDirectDownloadsRequest isPermittedOnUserConnection]
  +[DMFSetAppAssociatedDomainsEnableDirectDownloadsRequest isPermittedOnSystemConnection]
  +[DMFSetAppAssociatedDomainsEnableDirectDownloadsRequest permittedPlatforms]

  // instance methods
  -[DMFSetAppAssociatedDomainsEnableDirectDownloadsRequest encodeWithCoder:]
  -[DMFSetAppAssociatedDomainsEnableDirectDownloadsRequest .cxx_destruct]
  -[DMFSetAppAssociatedDomainsEnableDirectDownloadsRequest initWithCoder:]
  -[DMFSetAppAssociatedDomainsEnableDirectDownloadsRequest associatedDomainsEnableDirectDownloads]
  -[DMFSetAppAssociatedDomainsEnableDirectDownloadsRequest setAssociatedDomainsEnableDirectDownloads:]


DMFSetAppAssociatedDomainsRequest : DMFAppRequest
 @property  NSArray *associatedDomains

  // class methods
  +[DMFSetAppAssociatedDomainsRequest supportsSecureCoding]
  +[DMFSetAppAssociatedDomainsRequest isPermittedOnUserConnection]
  +[DMFSetAppAssociatedDomainsRequest isPermittedOnSystemConnection]
  +[DMFSetAppAssociatedDomainsRequest permittedPlatforms]

  // instance methods
  -[DMFSetAppAssociatedDomainsRequest encodeWithCoder:]
  -[DMFSetAppAssociatedDomainsRequest .cxx_destruct]
  -[DMFSetAppAssociatedDomainsRequest associatedDomains]
  -[DMFSetAppAssociatedDomainsRequest setAssociatedDomains:]
  -[DMFSetAppAssociatedDomainsRequest initWithCoder:]


DMFSetAppConfigurationRequest : DMFAppRequest
 @property  NSDictionary *configuration

  // class methods
  +[DMFSetAppConfigurationRequest supportsSecureCoding]
  +[DMFSetAppConfigurationRequest isPermittedOnUserConnection]
  +[DMFSetAppConfigurationRequest isPermittedOnSystemConnection]
  +[DMFSetAppConfigurationRequest permittedPlatforms]

  // instance methods
  -[DMFSetAppConfigurationRequest setConfiguration:]
  -[DMFSetAppConfigurationRequest encodeWithCoder:]
  -[DMFSetAppConfigurationRequest configuration]
  -[DMFSetAppConfigurationRequest .cxx_destruct]
  -[DMFSetAppConfigurationRequest initWithCoder:]


DMFSetAppRemovabilityRequest : DMFAppRequest
 @property  NSNumber *removable

  // class methods
  +[DMFSetAppRemovabilityRequest supportsSecureCoding]
  +[DMFSetAppRemovabilityRequest isPermittedOnUserConnection]
  +[DMFSetAppRemovabilityRequest isPermittedOnSystemConnection]
  +[DMFSetAppRemovabilityRequest permittedPlatforms]

  // instance methods
  -[DMFSetAppRemovabilityRequest encodeWithCoder:]
  -[DMFSetAppRemovabilityRequest .cxx_destruct]
  -[DMFSetAppRemovabilityRequest initWithCoder:]
  -[DMFSetAppRemovabilityRequest removable]
  -[DMFSetAppRemovabilityRequest setRemovable:]


DMFSetAppVPNUUIDRequest : DMFAppRequest
 @property  NSString *UUIDString

  // class methods
  +[DMFSetAppVPNUUIDRequest supportsSecureCoding]
  +[DMFSetAppVPNUUIDRequest isPermittedOnUserConnection]
  +[DMFSetAppVPNUUIDRequest isPermittedOnSystemConnection]
  +[DMFSetAppVPNUUIDRequest permittedPlatforms]

  // instance methods
  -[DMFSetAppVPNUUIDRequest encodeWithCoder:]
  -[DMFSetAppVPNUUIDRequest .cxx_destruct]
  -[DMFSetAppVPNUUIDRequest setUUIDString:]
  -[DMFSetAppVPNUUIDRequest UUIDString]
  -[DMFSetAppVPNUUIDRequest initWithCoder:]


DMFSetBluetoothEnabledRequest : DMFTaskRequest
 @property  BOOL enabled

  // class methods
  +[DMFSetBluetoothEnabledRequest supportsSecureCoding]
  +[DMFSetBluetoothEnabledRequest isPermittedOnUserConnection]
  +[DMFSetBluetoothEnabledRequest isPermittedOnSystemConnection]
  +[DMFSetBluetoothEnabledRequest permittedPlatforms]

  // instance methods
  -[DMFSetBluetoothEnabledRequest encodeWithCoder:]
  -[DMFSetBluetoothEnabledRequest setEnabled:]
  -[DMFSetBluetoothEnabledRequest enabled]
  -[DMFSetBluetoothEnabledRequest initWithCoder:]


DMFSetDataRoamingEnabledRequest : DMFTaskRequest
 @property  BOOL enabled

  // class methods
  +[DMFSetDataRoamingEnabledRequest supportsSecureCoding]
  +[DMFSetDataRoamingEnabledRequest isPermittedOnUserConnection]
  +[DMFSetDataRoamingEnabledRequest isPermittedOnSystemConnection]
  +[DMFSetDataRoamingEnabledRequest permittedPlatforms]

  // instance methods
  -[DMFSetDataRoamingEnabledRequest encodeWithCoder:]
  -[DMFSetDataRoamingEnabledRequest setEnabled:]
  -[DMFSetDataRoamingEnabledRequest enabled]
  -[DMFSetDataRoamingEnabledRequest initWithCoder:]


DMFSetDeclarationsRequest : DMFTaskRequest
 @property  NSString *organizationIdentifier
 @property  NSString *syncToken
 @property  NSArray *declarations

  // class methods
  +[DMFSetDeclarationsRequest supportsSecureCoding]
  +[DMFSetDeclarationsRequest isPermittedOnUserConnection]
  +[DMFSetDeclarationsRequest isPermittedOnSystemConnection]
  +[DMFSetDeclarationsRequest permittedPlatforms]

  // instance methods
  -[DMFSetDeclarationsRequest syncToken]
  -[DMFSetDeclarationsRequest declarations]
  -[DMFSetDeclarationsRequest organizationIdentifier]
  -[DMFSetDeclarationsRequest encodeWithCoder:]
  -[DMFSetDeclarationsRequest setSyncToken:]
  -[DMFSetDeclarationsRequest setOrganizationIdentifier:]
  -[DMFSetDeclarationsRequest .cxx_destruct]
  -[DMFSetDeclarationsRequest setDeclarations:]
  -[DMFSetDeclarationsRequest initWithCoder:]


DMFSetDeviceNameRequest : DMFTaskRequest
 @property  NSString *name

  // class methods
  +[DMFSetDeviceNameRequest supportsSecureCoding]
  +[DMFSetDeviceNameRequest isPermittedOnUserConnection]
  +[DMFSetDeviceNameRequest isPermittedOnSystemConnection]
  +[DMFSetDeviceNameRequest permittedPlatforms]

  // instance methods
  -[DMFSetDeviceNameRequest encodeWithCoder:]
  -[DMFSetDeviceNameRequest .cxx_destruct]
  -[DMFSetDeviceNameRequest setName:]
  -[DMFSetDeviceNameRequest name]
  -[DMFSetDeviceNameRequest initWithCoder:]


DMFSetDiagnosticSubmissionEnabledRequest : DMFTaskRequest
 @property  BOOL enabled

  // class methods
  +[DMFSetDiagnosticSubmissionEnabledRequest supportsSecureCoding]
  +[DMFSetDiagnosticSubmissionEnabledRequest isPermittedOnUserConnection]
  +[DMFSetDiagnosticSubmissionEnabledRequest isPermittedOnSystemConnection]
  +[DMFSetDiagnosticSubmissionEnabledRequest permittedPlatforms]

  // instance methods
  -[DMFSetDiagnosticSubmissionEnabledRequest encodeWithCoder:]
  -[DMFSetDiagnosticSubmissionEnabledRequest setEnabled:]
  -[DMFSetDiagnosticSubmissionEnabledRequest enabled]
  -[DMFSetDiagnosticSubmissionEnabledRequest initWithCoder:]


DMFSetInterfaceOrientationRequest : DMFTaskRequest
 @property  BOOL lockOrientation
 @property  unsigned long interfaceOrientation

  // class methods
  +[DMFSetInterfaceOrientationRequest supportsSecureCoding]

  // instance methods
  -[DMFSetInterfaceOrientationRequest setInterfaceOrientation:]
  -[DMFSetInterfaceOrientationRequest encodeWithCoder:]
  -[DMFSetInterfaceOrientationRequest lockOrientation]
  -[DMFSetInterfaceOrientationRequest interfaceOrientation]
  -[DMFSetInterfaceOrientationRequest setLockOrientation:]
  -[DMFSetInterfaceOrientationRequest init]
  -[DMFSetInterfaceOrientationRequest initWithCoder:]


DMFSetMaximumResidentUsersRequest : DMFTaskRequest
 @property  unsigned long count

  // class methods
  +[DMFSetMaximumResidentUsersRequest supportsSecureCoding]
  +[DMFSetMaximumResidentUsersRequest isPermittedOnUserConnection]
  +[DMFSetMaximumResidentUsersRequest isPermittedOnSystemConnection]
  +[DMFSetMaximumResidentUsersRequest permittedPlatforms]

  // instance methods
  -[DMFSetMaximumResidentUsersRequest setCount:]
  -[DMFSetMaximumResidentUsersRequest encodeWithCoder:]
  -[DMFSetMaximumResidentUsersRequest count]
  -[DMFSetMaximumResidentUsersRequest initWithCoder:]


DMFSetPasscodeLockGracePeriodRequest : DMFTaskRequest
 @property  double seconds

  // class methods
  +[DMFSetPasscodeLockGracePeriodRequest supportsSecureCoding]
  +[DMFSetPasscodeLockGracePeriodRequest isPermittedOnUserConnection]
  +[DMFSetPasscodeLockGracePeriodRequest isPermittedOnSystemConnection]
  +[DMFSetPasscodeLockGracePeriodRequest permittedPlatforms]

  // instance methods
  -[DMFSetPasscodeLockGracePeriodRequest encodeWithCoder:]
  -[DMFSetPasscodeLockGracePeriodRequest setSeconds:]
  -[DMFSetPasscodeLockGracePeriodRequest seconds]
  -[DMFSetPasscodeLockGracePeriodRequest initWithCoder:]


DMFSetPersonalHotspotEnabledRequest : DMFTaskRequest
 @property  BOOL enabled

  // class methods
  +[DMFSetPersonalHotspotEnabledRequest supportsSecureCoding]
  +[DMFSetPersonalHotspotEnabledRequest isPermittedOnUserConnection]
  +[DMFSetPersonalHotspotEnabledRequest isPermittedOnSystemConnection]
  +[DMFSetPersonalHotspotEnabledRequest permittedPlatforms]

  // instance methods
  -[DMFSetPersonalHotspotEnabledRequest encodeWithCoder:]
  -[DMFSetPersonalHotspotEnabledRequest setEnabled:]
  -[DMFSetPersonalHotspotEnabledRequest enabled]
  -[DMFSetPersonalHotspotEnabledRequest initWithCoder:]


DMFSetVoiceRoamingEnabledRequest : DMFTaskRequest
 @property  BOOL enabled

  // class methods
  +[DMFSetVoiceRoamingEnabledRequest supportsSecureCoding]
  +[DMFSetVoiceRoamingEnabledRequest isPermittedOnUserConnection]
  +[DMFSetVoiceRoamingEnabledRequest isPermittedOnSystemConnection]
  +[DMFSetVoiceRoamingEnabledRequest permittedPlatforms]

  // instance methods
  -[DMFSetVoiceRoamingEnabledRequest encodeWithCoder:]
  -[DMFSetVoiceRoamingEnabledRequest setEnabled:]
  -[DMFSetVoiceRoamingEnabledRequest enabled]
  -[DMFSetVoiceRoamingEnabledRequest initWithCoder:]


DMFSetVolumeRequest : DMFTaskRequest
 @property  float volume

  // class methods
  +[DMFSetVolumeRequest supportsSecureCoding]

  // instance methods
  -[DMFSetVolumeRequest encodeWithCoder:]
  -[DMFSetVolumeRequest setVolume:]
  -[DMFSetVolumeRequest volume]
  -[DMFSetVolumeRequest initWithCoder:]


DMFShutDownDeviceRequest : DMFTaskRequest
  // class methods
  +[DMFShutDownDeviceRequest isPermittedOnUserConnection]
  +[DMFShutDownDeviceRequest isPermittedOnSystemConnection]
  +[DMFShutDownDeviceRequest permittedPlatforms]


DMFStartAppLockRequest : DMFTaskRequest
 @property  NSString *bundleIdentifier

  // class methods
  +[DMFStartAppLockRequest supportsSecureCoding]

  // instance methods
  -[DMFStartAppLockRequest encodeWithCoder:]
  -[DMFStartAppLockRequest .cxx_destruct]
  -[DMFStartAppLockRequest setBundleIdentifier:]
  -[DMFStartAppLockRequest bundleIdentifier]
  -[DMFStartAppLockRequest initWithCoder:]


DMFStopAirPlayMirroringRequest : DMFTaskRequest
  // class methods
  +[DMFStopAirPlayMirroringRequest isPermittedOnUserConnection]
  +[DMFStopAirPlayMirroringRequest isPermittedOnSystemConnection]
  +[DMFStopAirPlayMirroringRequest permittedPlatforms]


DMFStopAppLockRequest : DMFTaskRequest

DMFStopManagingAppRequest : DMFAppRequest
  // class methods
  +[DMFStopManagingAppRequest isPermittedOnUserConnection]
  +[DMFStopManagingAppRequest isPermittedOnSystemConnection]
  +[DMFStopManagingAppRequest permittedPlatforms]


DMFStopManagingBooksRequest : DMFTaskRequest
  // class methods
  +[DMFStopManagingBooksRequest isPermittedOnUserConnection]
  +[DMFStopManagingBooksRequest isPermittedOnSystemConnection]
  +[DMFStopManagingBooksRequest permittedPlatforms]


DMFTaskRequest : CATTaskRequest
  // class methods
  +[DMFTaskRequest isPermittedOnUserConnection]
  +[DMFTaskRequest isPermittedOnSystemConnection]
  +[DMFTaskRequest permittedPlatforms]
  +[DMFTaskRequest isPermittedOnCurrentPlatform]
  +[DMFTaskRequest isPermittedOnPlatform:]


DMFTriggerDiagnosticsRequest : DMFTaskRequest
  // class methods
  +[DMFTriggerDiagnosticsRequest isPermittedOnUserConnection]
  +[DMFTriggerDiagnosticsRequest isPermittedOnSystemConnection]
  +[DMFTriggerDiagnosticsRequest permittedPlatforms]


DMFUpdateAppRequest : DMFAppRequest
  // class methods
  +[DMFUpdateAppRequest isPermittedOnUserConnection]
  +[DMFUpdateAppRequest isPermittedOnSystemConnection]
  +[DMFUpdateAppRequest permittedPlatforms]


DMFUpdateDeclarationsRequest : DMFTaskRequest
 @property  NSString *organizationIdentifier
 @property  NSString *syncToken
 @property  NSArray *upsertDeclarations
 @property  NSArray *removeDeclarations

  // class methods
  +[DMFUpdateDeclarationsRequest supportsSecureCoding]
  +[DMFUpdateDeclarationsRequest isPermittedOnUserConnection]
  +[DMFUpdateDeclarationsRequest isPermittedOnSystemConnection]
  +[DMFUpdateDeclarationsRequest permittedPlatforms]

  // instance methods
  -[DMFUpdateDeclarationsRequest syncToken]
  -[DMFUpdateDeclarationsRequest organizationIdentifier]
  -[DMFUpdateDeclarationsRequest encodeWithCoder:]
  -[DMFUpdateDeclarationsRequest setSyncToken:]
  -[DMFUpdateDeclarationsRequest setOrganizationIdentifier:]
  -[DMFUpdateDeclarationsRequest .cxx_destruct]
  -[DMFUpdateDeclarationsRequest initWithCoder:]
  -[DMFUpdateDeclarationsRequest upsertDeclarations]
  -[DMFUpdateDeclarationsRequest setUpsertDeclarations:]
  -[DMFUpdateDeclarationsRequest removeDeclarations]
  -[DMFUpdateDeclarationsRequest setRemoveDeclarations:]


DMFUpdateEnqueuedCommandsRequest : DMFTaskRequest
 @property  NSString *organizationIdentifier
 @property  NSArray *addCommands
 @property  NSArray *removeCommands

  // class methods
  +[DMFUpdateEnqueuedCommandsRequest supportsSecureCoding]
  +[DMFUpdateEnqueuedCommandsRequest isPermittedOnUserConnection]
  +[DMFUpdateEnqueuedCommandsRequest isPermittedOnSystemConnection]
  +[DMFUpdateEnqueuedCommandsRequest permittedPlatforms]

  // instance methods
  -[DMFUpdateEnqueuedCommandsRequest organizationIdentifier]
  -[DMFUpdateEnqueuedCommandsRequest encodeWithCoder:]
  -[DMFUpdateEnqueuedCommandsRequest setOrganizationIdentifier:]
  -[DMFUpdateEnqueuedCommandsRequest .cxx_destruct]
  -[DMFUpdateEnqueuedCommandsRequest initWithCoder:]
  -[DMFUpdateEnqueuedCommandsRequest addCommands]
  -[DMFUpdateEnqueuedCommandsRequest setAddCommands:]
  -[DMFUpdateEnqueuedCommandsRequest removeCommands]
  -[DMFUpdateEnqueuedCommandsRequest setRemoveCommands:]


DMFUpdatePickableAirPlayRoutesRequest : DMFTaskRequest

DMFUser : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *username
 @property  unsigned long dataQuota
 @property  unsigned long dataUsed
 @property  BOOL hasDataToSync
 @property  BOOL isCurrentUser

  // class methods
  +[DMFUser supportsSecureCoding]

  // instance methods
  -[DMFUser dataUsed]
  -[DMFUser dataQuota]
  -[DMFUser hasDataToSync]
  -[DMFUser encodeWithCoder:]
  -[DMFUser .cxx_destruct]
  -[DMFUser username]
  -[DMFUser copyWithZone:]
  -[DMFUser isEqual:]
  -[DMFUser initWithCoder:]
  -[DMFUser isCurrentUser]
  -[DMFUser initWithUsername:dataQuota:dataUsed:hasDataToSync:isCurrentUser:]


DMFValidateApplicationsRequest : DMFTaskRequest
 @property  NSArray *bundleIdentifiers

  // class methods
  +[DMFValidateApplicationsRequest supportsSecureCoding]
  +[DMFValidateApplicationsRequest isPermittedOnUserConnection]
  +[DMFValidateApplicationsRequest isPermittedOnSystemConnection]
  +[DMFValidateApplicationsRequest permittedPlatforms]

  // instance methods
  -[DMFValidateApplicationsRequest encodeWithCoder:]
  -[DMFValidateApplicationsRequest .cxx_destruct]
  -[DMFValidateApplicationsRequest initWithCoder:]
  -[DMFValidateApplicationsRequest bundleIdentifiers]
  -[DMFValidateApplicationsRequest setBundleIdentifiers:]


DMFWebsitePolicyMonitor : NSObject
 @property  NSArray *policyTypes
 @property  NSUUID *identifier

  // instance methods
  -[DMFWebsitePolicyMonitor policyTypes]
  -[DMFWebsitePolicyMonitor identifier]
  -[DMFWebsitePolicyMonitor dealloc]
  -[DMFWebsitePolicyMonitor .cxx_destruct]
  -[DMFWebsitePolicyMonitor requestPoliciesForWebsites:completionHandler:]
  -[DMFWebsitePolicyMonitor initWithPolicyChangeHandler:]
  -[DMFWebsitePolicyMonitor _fetchCategoriesIfNeededForWebsiteURLs:response:]


NSError(DMFAdditions)
	// instance methods
	-[NSError(DMFAdditions) serializableError]

01 00 0100 /System/Library/PrivateFrameworks/Catalyst.framework/Catalyst: CATOperation 
01 00 0100 /System/Library/PrivateFrameworks/Catalyst.framework/Catalyst: CATOperationQueue 
01 00 0100 /System/Library/PrivateFrameworks/Catalyst.framework/Catalyst: CATTaskClient 
01 00 0100 /System/Library/PrivateFrameworks/Catalyst.framework/Catalyst: CATTaskRequest 
01 00 0100 /System/Library/PrivateFrameworks/Catalyst.framework/Catalyst: CATTaskResultObject 
01 00 0100 /System/Library/PrivateFrameworks/Catalyst.framework/Catalyst: CATXPCTransport 
01 00 0700 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLLocation 
01 00 0440 /System/Library/PrivateFrameworks/Categories.framework/Categories: CTCategories 
01 00 0500 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationRecord 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSBlockOperation 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSConditionLock 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSInvocation 
01 00 0600 /System/Library/Frameworks/CoreData.framework/CoreData: NSManagedObject 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0900 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListener 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListenerEndpoint 
