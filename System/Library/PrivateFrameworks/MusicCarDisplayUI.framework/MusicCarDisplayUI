|| __DATA.__objc_data _OBJC_CLASS_$_MCDAlertController
|| __DATA.__objc_data _OBJC_CLASS_$_MCDBrowsableContentNavigationController
|| __DATA.__objc_data _OBJC_CLASS_$_MCDBrowsableContentTableViewController
|| __DATA.__objc_data _OBJC_CLASS_$_MCDBrowsableContentUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_MCDErrorLoadingView
|| __DATA.__objc_data _OBJC_CLASS_$_MCDGlyph
|| __DATA.__objc_data _OBJC_CLASS_$_MCDLoadingContentView
|| __DATA.__objc_data _OBJC_CLASS_$_MCDMediaRemoteSerialQueueManager
|| __DATA.__objc_data _OBJC_CLASS_$_MCDNoContentView
|| __DATA.__objc_data _OBJC_CLASS_$_MCDNowPlayingObserver
|| __DATA.__objc_data _OBJC_CLASS_$_MCDNowPlayingViewController
|| __DATA.__objc_data _OBJC_CLASS_$_MCDPCContainer
|| __DATA.__objc_data _OBJC_CLASS_$_MCDPCItem
|| __DATA.__objc_data _OBJC_CLASS_$_MCDPCModel
|| __DATA.__objc_data _OBJC_CLASS_$_MCDPlayableContentNowPlayingDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_MCDPlayableContentPlaybackManager
|| __DATA.__objc_data _OBJC_CLASS_$_MCDPlayableContentQueueTableViewController
|| __DATA.__objc_data _OBJC_CLASS_$_MCDPlayableContentViewController
|| __DATA.__objc_data _OBJC_CLASS_$__MCDBrowsableTableView
|| __DATA.__objc_data _OBJC_CLASS_$__MCDNowPlayingContentManager
|| __DATA.__objc_data _OBJC_CLASS_$__MCDStackItem
|| __DATA.__objc_data _OBJC_METACLASS_$_MCDAlertController
|| __DATA.__objc_data _OBJC_METACLASS_$_MCDBrowsableContentNavigationController
|| __DATA.__objc_data _OBJC_METACLASS_$_MCDBrowsableContentTableViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_MCDBrowsableContentUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_MCDErrorLoadingView
|| __DATA.__objc_data _OBJC_METACLASS_$_MCDGlyph
|| __DATA.__objc_data _OBJC_METACLASS_$_MCDLoadingContentView
|| __DATA.__objc_data _OBJC_METACLASS_$_MCDMediaRemoteSerialQueueManager
|| __DATA.__objc_data _OBJC_METACLASS_$_MCDNoContentView
|| __DATA.__objc_data _OBJC_METACLASS_$_MCDNowPlayingObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_MCDNowPlayingViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_MCDPCContainer
|| __DATA.__objc_data _OBJC_METACLASS_$_MCDPCItem
|| __DATA.__objc_data _OBJC_METACLASS_$_MCDPCModel
|| __DATA.__objc_data _OBJC_METACLASS_$_MCDPlayableContentNowPlayingDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_MCDPlayableContentPlaybackManager
|| __DATA.__objc_data _OBJC_METACLASS_$_MCDPlayableContentQueueTableViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_MCDPlayableContentViewController
|| __DATA.__objc_data _OBJC_METACLASS_$__MCDBrowsableTableView
|| __DATA.__objc_data _OBJC_METACLASS_$__MCDNowPlayingContentManager
|| __DATA.__objc_data _OBJC_METACLASS_$__MCDStackItem
|| __DATA_CONST.__const _MCDAlbumsDetailViewControllerIdentifier
|| __DATA_CONST.__const _MCDAlbumsViewControllerIdentifier
|| __DATA_CONST.__const _MCDArtistsViewControllerIdentifier
|| __DATA_CONST.__const _MCDBooksBundleIdentifier
|| __DATA_CONST.__const _MCDBrowsableContentNowPlayingIdentifiersUpdatedNotification
|| __DATA_CONST.__const _MCDBrowseViewControllerIdentifier
|| __DATA_CONST.__const _MCDCompilationsViewControllerIdentifier
|| __DATA_CONST.__const _MCDComposersViewControllerIdentifier
|| __DATA_CONST.__const _MCDContentItemsChangedNotification
|| __DATA_CONST.__const _MCDDownloadedMusicViewControllerIdentifier
|| __DATA_CONST.__const _MCDForYouTableViewControllerIdentifier
|| __DATA_CONST.__const _MCDGenresViewControllerIdentifier
|| __DATA_CONST.__const _MCDLibraryViewControllerIdentifier
|| __DATA_CONST.__const _MCDLovedMusicViewControllerIdentifier
|| __DATA_CONST.__const _MCDMusicApplicationBundleIdentifier
|| __DATA_CONST.__const _MCDMusicBundleIdentifier
|| __DATA_CONST.__const _MCDMusicCarPlayBundleIdentifier
|| __DATA_CONST.__const _MCDMusicCarPlayPlatformIdentifier
|| __DATA_CONST.__const _MCDMusicCarPlayVersion
|| __DATA_CONST.__const _MCDNowPlayingWillAppearNotification
|| __DATA_CONST.__const _MCDNowPlayingWillDisappearNotification
|| __DATA_CONST.__const _MCDPCAppReadyToFetchNotificationName
|| __DATA_CONST.__const _MCDPCDidInitiatePlaybackNotificationName
|| __DATA_CONST.__const _MCDPCDidInvalidateNotificationName
|| __DATA_CONST.__const _MCDPCDidUpdateContentNotificationName
|| __DATA_CONST.__const _MCDPCErrorDomain
|| __DATA_CONST.__const _MCDPCErrorKey
|| __DATA_CONST.__const _MCDPCIndexPathKey
|| __DATA_CONST.__const _MCDPCItemKey
|| __DATA_CONST.__const _MCDPCItemsKey
|| __DATA_CONST.__const _MCDPCModelKey
|| __DATA_CONST.__const _MCDPCNowPlayingDidChangeNotificationName
|| __DATA_CONST.__const _MCDPlaybackStateChangedNotification
|| __DATA_CONST.__const _MCDPlaylistTracksViewControllerIdentifier
|| __DATA_CONST.__const _MCDPlaylistsViewControllerIdentifier
|| __DATA_CONST.__const _MCDRadioViewControllerIdentifier
|| __DATA_CONST.__const _MCDRecentlyAddedControllerIdentifier
|| __DATA_CONST.__const _MCDSongsViewControllerIdentifier
|| __DATA_CONST.__const _MCDSortByArtist
|| __DATA_CONST.__const _MCDSortByPlaylistType
|| __DATA_CONST.__const _MCDSortByRecentlyAdded
|| __DATA_CONST.__const _MCDSortByRecentlyPlayed
|| __DATA_CONST.__const _MCDSortByTitle
|| __DATA_CONST.__const _MCDSortByYearAscending
|| __DATA_CONST.__const _MCDSortByYearDescending
|| __TEXT.__text _MCDAlbumDetailFormat
|| __TEXT.__text _MCDAlbumPlaceholderImageWithStyle
|| __TEXT.__text _MCDBarButtonItemForNegativeSpacer
|| __TEXT.__text _MCDCarDisplayBundle
|| __TEXT.__text _MCDCarDisplayScreen
|| __TEXT.__text _MCDCarDisplayUIMode
|| __TEXT.__text _MCDClearTableViewSelection
|| __TEXT.__text _MCDFilteredStringForString
|| __TEXT.__text _MCDFormatArtistAlbumString
|| __TEXT.__text _MCDFormattedNumberString
|| __TEXT.__text _MCDFormattedPlaybackRateString
|| __TEXT.__text _MCDGeneralLogging
|| __TEXT.__text _MCDGetNowPlayingButton
|| __TEXT.__text _MCDGetNowPlayingObserver
|| __TEXT.__text _MCDLocalizedExplicitImage
|| __TEXT.__text _MCDLocalizedExplicitString
|| __TEXT.__text _MCDMPModelObjectForGenericObject
|| __TEXT.__text _MCDMusicBundle
|| __TEXT.__text _MCDMusicGeneralLogging
|| __TEXT.__text _MCDNetworkConnectionAvailable
|| __TEXT.__text _MCDNetworkRestrictedCellularData
|| __TEXT.__text _MCDNowPlayingControlWithTag
|| __TEXT.__text _MCDNowPlayingStateCallback
|| __TEXT.__text _MCDPerformColorUpdateWithCurrentTraitCollection
|| __TEXT.__text _MCDSetAllowsCellularData
|| __TEXT.__text _MCDSetChargeOnDescendantsOfView
|| __TEXT.__text _MCDSetupTableHeaderView
|| __TEXT.__text _MCDTiledArtworkForPlaylist
|| __TEXT.__text _MCDTimeDurationForSeconds
|| __TEXT.__text __MCDStringFromIndexPath
__ AVFoundation: _OBJC_CLASS_$_AVTimeFormatter
__ CarKit: _CARSessionLimitUserInterfacesChangedNotification
__ CarKit: _OBJC_CLASS_$_CARSessionStatus
__ CarPlayUI: _OBJC_CLASS_$_CPUILabelButton
__ CarPlayUI: _OBJC_CLASS_$_CPUIMediaButton
__ CarPlayUI: _OBJC_CLASS_$_CPUINowPlayingButton
__ CarPlayUI: _OBJC_CLASS_$_CPUINowPlayingButtonWrapperView
__ CarPlayUI: _OBJC_CLASS_$_CPUINowPlayingViewController
__ CarPlayUI: _OBJC_CLASS_$_CPUIRoundedLabelButton
__ CarPlayUI: _OBJC_CLASS_$_CPUITableCell
__ CarPlayUI: _OBJC_CLASS_$_CPUITableCellAccessory
__ CarPlayUI: _OBJC_CLASS_$_CPUITableCellConfiguration
__ CarPlayUI: _OBJC_METACLASS_$_CPUINowPlayingViewController
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetLocalCenter
__ CoreFoundation: _CFNotificationCenterRemoveEveryObserver
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectZero
__ CoreServices: _OBJC_CLASS_$_LSApplicationProxy
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSStringFromClass
__ Foundation: _OBJC_CLASS_$_NSBlockOperation
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSIndexPath
__ Foundation: _OBJC_CLASS_$_NSLayoutConstraint
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotification
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ MediaPlaybackCore: _OBJC_CLASS_$_MPCPlayerChangeRequest
__ MediaPlaybackCore: _OBJC_CLASS_$_MPCPlayerPath
__ MediaPlaybackCore: _OBJC_CLASS_$_MPCPlayerRequest
__ MediaPlayer: _MPErrorDomain
__ MediaPlayer: _MPModelPropertyAlbumTitle
__ MediaPlayer: _MPModelPropertyArtistName
__ MediaPlayer: _MPModelPropertyComposerName
__ MediaPlayer: _MPModelPropertySongArtwork
__ MediaPlayer: _MPModelPropertySongDuration
__ MediaPlayer: _MPModelPropertySongExplicit
__ MediaPlayer: _MPModelPropertySongLibraryAddEligible
__ MediaPlayer: _MPModelPropertySongLibraryAdded
__ MediaPlayer: _MPModelPropertySongTitle
__ MediaPlayer: _MPModelRelationshipAlbumArtist
__ MediaPlayer: _MPModelRelationshipGenericSong
__ MediaPlayer: _MPModelRelationshipSongAlbum
__ MediaPlayer: _MPModelRelationshipSongArtist
__ MediaPlayer: _MPModelRelationshipSongComposer
__ MediaPlayer: _MPModelResponseDidInvalidateNotification
__ MediaPlayer: _OBJC_CLASS_$_MPMediaItem
__ MediaPlayer: _OBJC_CLASS_$_MPNetworkObserver
__ MediaPlayer: _OBJC_CLASS_$_MPPropertySet
__ MediaPlayer: _OBJC_CLASS_$_MPRequestResponseController
__ MediaPlayer: _OBJC_CLASS_$_MPWeakTimer
__ MediaPlayerUI: _OBJC_CLASS_$_MPUNowPlayingIndicatorView
__ MediaRemote: _MRContentItemGetArtworkData
__ MediaRemote: _MRContentItemGetIdentifier
__ MediaRemote: _MRContentItemGetIsContainer
__ MediaRemote: _MRContentItemGetIsExplicitItem
__ MediaRemote: _MRContentItemGetIsPlayable
__ MediaRemote: _MRContentItemGetIsStreamingContent
__ MediaRemote: _MRContentItemGetPlaybackProgress
__ MediaRemote: _MRContentItemGetSubtitle
__ MediaRemote: _MRContentItemGetTitle
__ MediaRemote: _MRMediaRemoteApplicationSupportsBrowsableContent
__ MediaRemote: _MRMediaRemoteApplicationSupportsImmediatePlayback
__ MediaRemote: _MRMediaRemoteApplicationSupportsSectionedBrowsing
__ MediaRemote: _MRMediaRemoteBeginLoadingBrowsableContent
__ MediaRemote: _MRMediaRemoteBrowsableContentGetNowPlayingContentIdentifiers
__ MediaRemote: _MRMediaRemoteBrowsableContentSupportsPlaybackProgress
__ MediaRemote: _MRMediaRemoteGetBrowsableContentChildItems
__ MediaRemote: _MRMediaRemoteGetCountOfBrowsableContentChildItems
__ MediaRemote: _MRMediaRemoteGetLocalOrigin
__ MediaRemote: _MRMediaRemoteGetNowPlayingApplicationPlaybackState
__ MediaRemote: _MRMediaRemoteGetNowPlayingClientForOrigin
__ MediaRemote: _MRMediaRemoteGetSupportedBrowsableContentAPIs
__ MediaRemote: _MRMediaRemoteRegisterForNowPlayingNotifications
__ MediaRemote: _MRMediaRemoteRequestPlaybackInitialization
__ MediaRemote: _MRMediaRemoteSendCommandToApp
__ MediaRemote: _MRMediaRemoteSetWantsNowPlayingNotifications
__ MediaRemote: _MRMediaRemoteUnregisterForNowPlayingNotifications
__ MediaRemote: _MRNowPlayingClientGetBundleIdentifier
__ MediaRemote: _MRNowPlayingPlayerPathGetClient
__ MediaRemote: _kMRMediaRemoteApplicationFinishedLoadingContentNotification
__ MediaRemote: _kMRMediaRemoteApplicationInitiatedPlaybackOfContentItemNotification
__ MediaRemote: _kMRMediaRemoteApplicationInvalidatedBrowsableContentDataSourceNotification
__ MediaRemote: _kMRMediaRemoteBrowsableContentAPIChangedNotification
__ MediaRemote: _kMRMediaRemoteBrowsableContentBundleIdentifierUserInfoKey
__ MediaRemote: _kMRMediaRemoteBrowsableContentErrorCodeKey
__ MediaRemote: _kMRMediaRemoteBrowsableContentErrorDomainKey
__ MediaRemote: _kMRMediaRemoteBrowsableContentErrorLocalizedDescriptionKey
__ MediaRemote: _kMRMediaRemoteBrowsableContentNowPlayingIdentifiersUpdatedNotification
__ MediaRemote: _kMRMediaRemoteContentItemsUpdatedNotification
__ MediaRemote: _kMRMediaRemoteIndexPathDataUserInfoKey
__ MediaRemote: _kMRMediaRemoteNowPlayingApplicationIsPlayingDidChangeNotification
__ MediaRemote: _kMRMediaRemoteNowPlayingApplicationIsPlayingUserInfoKey
__ MediaRemote: _kMRMediaRemoteNowPlayingApplicationPlaybackStateDidChangeNotification
__ MediaRemote: _kMRMediaRemoteNowPlayingInfoDidChangeNotification
__ MediaRemote: _kMRMediaRemoteOriginNowPlayingInfoDidChangeNotification
__ MediaRemote: _kMRMediaRemoteUpdatedContentItemsUserInfoKey
__ MediaRemote: _kMRMediaRemoteUpdatedNowPlayingIdentifiersInfoKey
__ MediaRemote: _kMRNowPlayingPlayerPathUserInfoKey
__ MediaServices: _OBJC_CLASS_$_MSVTimer
__ MediaServices: _msv_dispatch_async_on_queue
__ UIKit: _OBJC_CLASS_$_UIActivityIndicatorView
__ UIKit: _OBJC_CLASS_$_UIAlertAction
__ UIKit: _OBJC_CLASS_$_UIAlertController
__ UIKit: _OBJC_CLASS_$_UIBarButtonItem
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIFontDescriptor
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageSymbolConfiguration
__ UIKit: _OBJC_CLASS_$_UILabel
__ UIKit: _OBJC_CLASS_$_UILayoutGuide
__ UIKit: _OBJC_CLASS_$_UINavigationController
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UITabBarController
__ UIKit: _OBJC_CLASS_$_UITabBarItem
__ UIKit: _OBJC_CLASS_$_UITableView
__ UIKit: _OBJC_CLASS_$_UITableViewController
__ UIKit: _OBJC_CLASS_$_UITraitCollection
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_CLASS_$__UIFilteredDataSource
__ UIKit: _OBJC_METACLASS_$_UIAlertController
__ UIKit: _OBJC_METACLASS_$_UINavigationController
__ UIKit: _OBJC_METACLASS_$_UITabBarController
__ UIKit: _OBJC_METACLASS_$_UITableView
__ UIKit: _OBJC_METACLASS_$_UITableViewController
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _UIFontTextStyleCallout
__ UIKit: _UIFontTextStyleTitle2
__ UIKit: _UIGraphicsBeginImageContextWithOptions
__ UIKit: _UIGraphicsEndImageContext
__ UIKit: _UIGraphicsGetImageFromCurrentImageContext
__ UIKit: __UIScreenCapabilityInteractionModelsKey
__ UIKit: __UIScreenCapabilityTouchLevelsKey
__ iTunesCloud: _ICEnvironmentNetworkTypeIsCellular
__ iTunesCloud: _OBJC_CLASS_$_ICAgeVerificationManager
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
MCDBrowsableContentUtilities : NSObject /usr/lib/libSystem.B.dylib
 @property  NSArray *nowPlayingIdentifiers
 @property  NSArray *firstPartyAppBundleIDs

  // class methods
  +[MCDBrowsableContentUtilities sharedInstance]

  // instance methods
  -[MCDBrowsableContentUtilities .cxx_destruct]
  -[MCDBrowsableContentUtilities setNowPlayingIdentifiers:]
  -[MCDBrowsableContentUtilities nowPlayingIdentifiers]
  -[MCDBrowsableContentUtilities firstPartyAppBundleIDs]


MCDBrowsableContentTableViewController : UIViewController /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer <UITableViewDataSource, UITableViewDelegate, UIGestureRecognizerDelegate, MCDPCContainerDelegate, MCDErrorViewDelegate, CARSessionObserving>
 @property  BOOL visible
 @property  NSIndexPath *selectedIndexPath
 @property  UIView *placeholderView
 @property  BOOL currentlyPlayingApp
 @property  MPWeakTimer *loadingTimer
 @property  UIAlertController *alertController
 @property  BOOL pushToNowPlaying
 @property  MCDPCContainer *container
 @property  BOOL didFinishInitialLoad
 @property  BOOL didFinishInitialViewAppear
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MCDBrowsableContentTableViewController viewDidLoad]
  -[MCDBrowsableContentTableViewController preferredFocusEnvironments]
  -[MCDBrowsableContentTableViewController setVisible:]
  -[MCDBrowsableContentTableViewController isVisible]
  -[MCDBrowsableContentTableViewController placeholderView]
  -[MCDBrowsableContentTableViewController _limitedUIChanged:]
  -[MCDBrowsableContentTableViewController setPlaceholderView:]
  -[MCDBrowsableContentTableViewController _playbackStateChanged:]
  -[MCDBrowsableContentTableViewController tableView:numberOfRowsInSection:]
  -[MCDBrowsableContentTableViewController tableView:didSelectRowAtIndexPath:]
  -[MCDBrowsableContentTableViewController dealloc]
  -[MCDBrowsableContentTableViewController .cxx_destruct]
  -[MCDBrowsableContentTableViewController container]
  -[MCDBrowsableContentTableViewController tableView:didFocusRowAtIndexPath:]
  -[MCDBrowsableContentTableViewController tableView:cellForRowAtIndexPath:]
  -[MCDBrowsableContentTableViewController setContainer:]
  -[MCDBrowsableContentTableViewController alertController]
  -[MCDBrowsableContentTableViewController initWithNibName:bundle:]
  -[MCDBrowsableContentTableViewController traitCollectionDidChange:]
  -[MCDBrowsableContentTableViewController viewDidAppear:]
  -[MCDBrowsableContentTableViewController _configureCell:forIndexPath:]
  -[MCDBrowsableContentTableViewController viewWillAppear:]
  -[MCDBrowsableContentTableViewController initWithContainer:]
  -[MCDBrowsableContentTableViewController viewDidDisappear:]
  -[MCDBrowsableContentTableViewController viewWillDisappear:]
  -[MCDBrowsableContentTableViewController setAlertController:]
  -[MCDBrowsableContentTableViewController viewDidLayoutSubviews]
  -[MCDBrowsableContentTableViewController reloadTable]
  -[MCDBrowsableContentTableViewController selectedIndexPath]
  -[MCDBrowsableContentTableViewController setSelectedIndexPath:]
  -[MCDBrowsableContentTableViewController contentScrollView]
  -[MCDBrowsableContentTableViewController didFinishInitialLoad]
  -[MCDBrowsableContentTableViewController setDidFinishInitialLoad:]
  -[MCDBrowsableContentTableViewController reloadWithCompletion:]
  -[MCDBrowsableContentTableViewController _nowPlayingButtonTapped:]
  -[MCDBrowsableContentTableViewController _nowPlayingDidChange:]
  -[MCDBrowsableContentTableViewController _appRegisteredForContent:]
  -[MCDBrowsableContentTableViewController _clearTableViewSelectionAnimated:]
  -[MCDBrowsableContentTableViewController _updateNowPlayingButtonVisibility]
  -[MCDBrowsableContentTableViewController setDidFinishInitialViewAppear:]
  -[MCDBrowsableContentTableViewController _showTimeoutScreen]
  -[MCDBrowsableContentTableViewController _replacePlaceholderViewWithView:]
  -[MCDBrowsableContentTableViewController _showLoadingScreen]
  -[MCDBrowsableContentTableViewController currentlyPlayingApp]
  -[MCDBrowsableContentTableViewController _displayErrorAlertController:]
  -[MCDBrowsableContentTableViewController loadingTimer]
  -[MCDBrowsableContentTableViewController setLoadingTimer:]
  -[MCDBrowsableContentTableViewController _clearLoadingActivity]
  -[MCDBrowsableContentTableViewController setPushToNowPlaying:]
  -[MCDBrowsableContentTableViewController initWithContainer:tabbedBrowsing:]
  -[MCDBrowsableContentTableViewController _displayLoadingActivity]
  -[MCDBrowsableContentTableViewController _shouldLimitLists]
  -[MCDBrowsableContentTableViewController setCurrentlyPlayingApp:]
  -[MCDBrowsableContentTableViewController _pushToNowPlaying:]
  -[MCDBrowsableContentTableViewController pushToNowPlaying]
  -[MCDBrowsableContentTableViewController container:didInvalidateIndicies:]
  -[MCDBrowsableContentTableViewController containerDidChangeCount:]
  -[MCDBrowsableContentTableViewController errorViewDidTapButton:]
  -[MCDBrowsableContentTableViewController didFinishInitialViewAppear]


_MCDBrowsableTableView : UITableView /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
  // instance methods
  -[_MCDBrowsableTableView canBecomeFirstResponder]


MCDPlayableContentNowPlayingDataSource : NSObject /usr/lib/libSystem.B.dylib <MCDNowPlayingDataSource>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MCDPlayableContentNowPlayingDataSource playingItemProperties]
  -[MCDPlayableContentNowPlayingDataSource _itemProperties]
  -[MCDPlayableContentNowPlayingDataSource queueItemProperties]
  -[MCDPlayableContentNowPlayingDataSource requestLabel]


MCDPlayableContentViewController : UINavigationController /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer <UINavigationControllerDelegate>
 @property  NSOperationQueue *modelInvalidationQueue
 @property  NSString *bundleID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MCDPlayableContentViewController initWithBundleID:]
  -[MCDPlayableContentViewController setViewControllers:animated:]
  -[MCDPlayableContentViewController .cxx_destruct]
  -[MCDPlayableContentViewController _setupView]
  -[MCDPlayableContentViewController viewWillAppear:]
  -[MCDPlayableContentViewController viewWillDisappear:]
  -[MCDPlayableContentViewController bundleID]
  -[MCDPlayableContentViewController _modelDidInvalidate:]
  -[MCDPlayableContentViewController _nowPlayingIdentifiersChanged:]
  -[MCDPlayableContentViewController initWithBundleID:stack:]
  -[MCDPlayableContentViewController _populateStack]
  -[MCDPlayableContentViewController _createSectionedRootViewController]
  -[MCDPlayableContentViewController _createRootViewController]
  -[MCDPlayableContentViewController modelInvalidationQueue]
  -[MCDPlayableContentViewController refreshNavigationStackForLaunch]
  -[MCDPlayableContentViewController currentStack]
  -[MCDPlayableContentViewController setModelInvalidationQueue:]


_MCDStackItem : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *identifier
 @property  NSIndexPath *indexPath

  // class methods
  +[_MCDStackItem stackItemWithContainer:]

  // instance methods
  -[_MCDStackItem .cxx_destruct]
  -[_MCDStackItem identifier]
  -[_MCDStackItem indexPath]


MCDNowPlayingViewController : CPUINowPlayingViewController /usr/lib/libobjc.A.dylib <MCDNowPlayingContentManagerDelegate>
 @property  UIBarButtonItem *backButton
 @property  UIActivityIndicatorView *activityIndicator
 @property  UIBarButtonItem *activityIndicatorBarButtonItem
 @property  BOOL trackBuffering
 @property  NSString *appName
 @property  MPWeakTimer *activityTimer
 @property  UILabel *rightTitleLabel
 @property  UIBarButtonItem *rightTitleLabelBarButtonItem
 @property  UIBarButtonItem *playbackQueueBarButtonItem
 @property  BOOL handledWillAppear
 @property  BOOL shouldShowPlaybackQueue
 @property  BOOL showNavigationBar
 @property  UITableViewController *playbackQueueViewController
 @property  <MCDNowPlayingContentManagerProtocol> *contentManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MCDNowPlayingViewController viewDidLoad]
  -[MCDNowPlayingViewController willMoveToParentViewController:]
  -[MCDNowPlayingViewController setAppName:]
  -[MCDNowPlayingViewController dealloc]
  -[MCDNowPlayingViewController .cxx_destruct]
  -[MCDNowPlayingViewController viewDidAppear:]
  -[MCDNowPlayingViewController viewWillAppear:]
  -[MCDNowPlayingViewController setShowNavigationBar:]
  -[MCDNowPlayingViewController showNavigationBar]
  -[MCDNowPlayingViewController backButton]
  -[MCDNowPlayingViewController viewDidDisappear:]
  -[MCDNowPlayingViewController viewWillDisappear:]
  -[MCDNowPlayingViewController activityIndicator]
  -[MCDNowPlayingViewController setActivityIndicator:]
  -[MCDNowPlayingViewController setBackButton:]
  -[MCDNowPlayingViewController appName]
  -[MCDNowPlayingViewController setRightTitle:]
  -[MCDNowPlayingViewController _updateBackButton]
  -[MCDNowPlayingViewController _handleWillAppear]
  -[MCDNowPlayingViewController contentManager]
  -[MCDNowPlayingViewController setRightTitleLabel:]
  -[MCDNowPlayingViewController rightTitleLabel]
  -[MCDNowPlayingViewController _adjustRightTitleLabelToFit]
  -[MCDNowPlayingViewController setActivityIndicatorBarButtonItem:]
  -[MCDNowPlayingViewController setRightTitleLabelBarButtonItem:]
  -[MCDNowPlayingViewController upNextButtonTapped:]
  -[MCDNowPlayingViewController setPlaybackQueueBarButtonItem:]
  -[MCDNowPlayingViewController rightTitleLabelBarButtonItem]
  -[MCDNowPlayingViewController activityIndicatorBarButtonItem]
  -[MCDNowPlayingViewController playbackQueueBarButtonItem]
  -[MCDNowPlayingViewController initWithPlayableBundleID:appName:]
  -[MCDNowPlayingViewController initWithBundleID:appName:]
  -[MCDNowPlayingViewController setContentManager:]
  -[MCDNowPlayingViewController setPlaybackQueueViewController:]
  -[MCDNowPlayingViewController _setupActivityTimer]
  -[MCDNowPlayingViewController contentManager:shouldShowPlaybackQueue:]
  -[MCDNowPlayingViewController playbackQueueViewController]
  -[MCDNowPlayingViewController setHandledWillAppear:]
  -[MCDNowPlayingViewController setTrackBuffering:]
  -[MCDNowPlayingViewController trackBuffering]
  -[MCDNowPlayingViewController setShouldShowPlaybackQueue:]
  -[MCDNowPlayingViewController handledWillAppear]
  -[MCDNowPlayingViewController shouldShowPlaybackQueue]
  -[MCDNowPlayingViewController _popViewControllerAnimated]
  -[MCDNowPlayingViewController _invalidateActivityTimer]
  -[MCDNowPlayingViewController setActivityTimer:]
  -[MCDNowPlayingViewController activityTimer]
  -[MCDNowPlayingViewController contentManagerReloadData:]
  -[MCDNowPlayingViewController contentManager:presentViewController:]
  -[MCDNowPlayingViewController contentManager:bufferingItem:]
  -[MCDNowPlayingViewController contentManagerInitiatedPlaybackFromPlaybackQueue:]
  -[MCDNowPlayingViewController contentManager:displayItemIndex:totalItemCount:]
  -[MCDNowPlayingViewController contentManagerCompletedAllPlayback:]
  -[MCDNowPlayingViewController contentManager:sectionName:]


MCDPCModel : NSObject /usr/lib/libSystem.B.dylib <MCDNowPlayingContentManagerDelegate>
 @property  MCDPlayableContentPlaybackManager *playableContentPlaybackManager
 @property  BOOL currentPlayingApp
 @property  @? playbackCompletion
 @property  @? containerCompletion
 @property  NSIndexPath *selectedIndexPath
 @property  NSMutableDictionary *items
 @property  BOOL didFinishInitialLoad
 @property  unsigned int supportedAPIMask
 @property  NSMutableDictionary *beginLoadingBlocks
 @property  MPWeakTimer *beginLoadingTimeoutTimer
 @property  MPWeakTimer *playbackProgressTimeoutTimer
 @property  NSObject<OS_dispatch_queue> *mediaRemoteNotificationQueue
 @property  NSObject<OS_dispatch_queue> *mediaRemoteItemQueue
 @property  NSString *bundleID
 @property  MCDPCItem *rootItem
 @property  NSString *appTitle
 @property  {CGSize=dd} imageSize
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MCDPCModel setItems:]
  -[MCDPCModel imageSize]
  -[MCDPCModel items]
  -[MCDPCModel initWithBundleID:]
  -[MCDPCModel dealloc]
  -[MCDPCModel .cxx_destruct]
  -[MCDPCModel _registerNotifications]
  -[MCDPCModel rootItem]
  -[MCDPCModel setImageSize:]
  -[MCDPCModel selectedIndexPath]
  -[MCDPCModel setSelectedIndexPath:]
  -[MCDPCModel bundleID]
  -[MCDPCModel didFinishInitialLoad]
  -[MCDPCModel setDidFinishInitialLoad:]
  -[MCDPCModel appTitle]
  -[MCDPCModel playableContentPlaybackManager]
  -[MCDPCModel initiatePlaybackAtIndexPath:completion:]
  -[MCDPCModel isCurrentPlayingApp]
  -[MCDPCModel containerForRoot]
  -[MCDPCModel contentManager:itemDidChange:response:]
  -[MCDPCModel _registerForClientContent]
  -[MCDPCModel setCurrentPlayingApp:]
  -[MCDPCModel setSupportedAPIMask:]
  -[MCDPCModel _browsableContentDidRegisterNotification:]
  -[MCDPCModel _dataSourceInvalidated:]
  -[MCDPCModel _contentItemsUpdated:]
  -[MCDPCModel _nowPlayingDidChangeNotification:]
  -[MCDPCModel itemsFromMRContentItems:]
  -[MCDPCModel supportedAPIMask]
  -[MCDPCModel _finishBeginLoadingNotification:]
  -[MCDPCModel beginLoadingBlocks]
  -[MCDPCModel _setupBeginLoadingTimeoutTimerWithCompletion:]
  -[MCDPCModel _errorForNotification:]
  -[MCDPCModel _invalidateBeginLoadingTimeoutTimer]
  -[MCDPCModel _invalidatePlaybackProgressTimeoutTimer]
  -[MCDPCModel _setupPlaybackProgressTimeoutTimerWithCompletion:]
  -[MCDPCModel setPlaybackCompletion:]
  -[MCDPCModel _finishPlaybackNotification:]
  -[MCDPCModel playbackCompletion]
  -[MCDPCModel setBeginLoadingTimeoutTimer:]
  -[MCDPCModel beginLoadingTimeoutTimer]
  -[MCDPCModel setPlaybackProgressTimeoutTimer:]
  -[MCDPCModel playbackProgressTimeoutTimer]
  -[MCDPCModel beginLoadingItemAtIndexPath:completion:]
  -[MCDPCModel getChildrenSupportsPlaybackProgressForIndexPath:withCompletion:]
  -[MCDPCModel getNowPlayingIdentifiersWithCompletion:]
  -[MCDPCModel getCountOfChildrenAtIndexPath:withCompletion:]
  -[MCDPCModel getChildrenAtIndexPath:inRange:completion:]
  -[MCDPCModel setPlayableContentPlaybackManager:]
  -[MCDPCModel containerCompletion]
  -[MCDPCModel setContainerCompletion:]
  -[MCDPCModel setBeginLoadingBlocks:]
  -[MCDPCModel mediaRemoteNotificationQueue]
  -[MCDPCModel setMediaRemoteNotificationQueue:]
  -[MCDPCModel mediaRemoteItemQueue]
  -[MCDPCModel setMediaRemoteItemQueue:]


MCDPCItem : NSObject /usr/lib/libSystem.B.dylib
 @property  MCDPCModel *model
 @property  ^v contentItem
 @property  BOOL currentlyPlaying
 @property  UIImage *artworkImage
 @property  NSString *identifier
 @property  NSString *title
 @property  NSString *subtitle
 @property  NSData *artworkData
 @property  float playbackProgress
 @property  BOOL isPlayable
 @property  BOOL isContainer
 @property  BOOL isCloudItem
 @property  BOOL isExplicitItem

  // instance methods
  -[MCDPCItem isPlayable]
  -[MCDPCItem playbackProgress]
  -[MCDPCItem setContentItem:]
  -[MCDPCItem dealloc]
  -[MCDPCItem .cxx_destruct]
  -[MCDPCItem isCloudItem]
  -[MCDPCItem identifier]
  -[MCDPCItem artworkData]
  -[MCDPCItem setArtworkImage:]
  -[MCDPCItem title]
  -[MCDPCItem contentItem]
  -[MCDPCItem setCurrentlyPlaying:]
  -[MCDPCItem isExplicitItem]
  -[MCDPCItem artworkImage]
  -[MCDPCItem subtitle]
  -[MCDPCItem isContainer]
  -[MCDPCItem model]
  -[MCDPCItem currentlyPlaying]
  -[MCDPCItem _initWithModel:MRContentItem:]


MCDPCContainer : NSObject /usr/lib/libSystem.B.dylib
 @property  long long cachedCount
 @property  NSObject<OS_dispatch_queue> *serialAccessContainerQueue
 @property  NSMutableDictionary *cachedIndiciesByIdentifier
 @property  NSMutableDictionary *cachedItemsByIndicies
 @property  MCDPCItem *rootItem
 @property  NSIndexPath *indexPath
 @property  NSString *identifier
 @property  NSString *appTitle
 @property  NSString *title
 @property  MCDPCModel *model
 @property  BOOL showPlaybackProgress
 @property  long long showCurrentlyPlayingIndex
 @property  <MCDPCContainerDelegate> *delegate

  // instance methods
  -[MCDPCContainer setCount:]
  -[MCDPCContainer dealloc]
  -[MCDPCContainer refreshWithCompletion:]
  -[MCDPCContainer fetchContentWithCompletion:]
  -[MCDPCContainer .cxx_destruct]
  -[MCDPCContainer identifier]
  -[MCDPCContainer title]
  -[MCDPCContainer rootItem]
  -[MCDPCContainer indexPath]
  -[MCDPCContainer setDelegate:]
  -[MCDPCContainer model]
  -[MCDPCContainer cachedCount]
  -[MCDPCContainer setCachedCount:]
  -[MCDPCContainer invalidate]
  -[MCDPCContainer delegate]
  -[MCDPCContainer containerAtIndex:]
  -[MCDPCContainer appTitle]
  -[MCDPCContainer cachedItemForIndex:]
  -[MCDPCContainer showCurrentlyPlayingIndex]
  -[MCDPCContainer showPlaybackProgress]
  -[MCDPCContainer beginLoadingItem:completion:]
  -[MCDPCContainer isValidForRefreshedParent:]
  -[MCDPCContainer _contentItemsUpdated:]
  -[MCDPCContainer _initWithModel:rootItem:indexPath:]
  -[MCDPCContainer getNowPlayingIdentifiersWithCompletion:]
  -[MCDPCContainer _nowPlayingIdentifiersDidChange:]
  -[MCDPCContainer serialAccessContainerQueue]
  -[MCDPCContainer setCachedItemsByIndicies:]
  -[MCDPCContainer setCachedIndiciesByIdentifier:]
  -[MCDPCContainer cachedIndiciesByIdentifier]
  -[MCDPCContainer cachedItemsByIndicies]
  -[MCDPCContainer cachedIndexByIdentifier:]
  -[MCDPCContainer getChildrenInRange:completion:]
  -[MCDPCContainer getCountOfChildrenWithCompletion:]
  -[MCDPCContainer getPlaybackProgressSupportForChildrenWithCompletion:]
  -[MCDPCContainer beginLoadingItemWithCompletion:]
  -[MCDPCContainer containerForItem:]
  -[MCDPCContainer setShowPlaybackProgress:]
  -[MCDPCContainer updateRootItemWithCompletion:]
  -[MCDPCContainer cachedItemForIdentifier:]
  -[MCDPCContainer setSerialAccessContainerQueue:]


MCDMediaRemoteSerialQueueManager : NSObject /usr/lib/libSystem.B.dylib
 @property  NSOperationQueue *mediaRemoteSerialQueue

  // class methods
  +[MCDMediaRemoteSerialQueueManager sharedInstance]

  // instance methods
  -[MCDMediaRemoteSerialQueueManager cancelAllOperations]
  -[MCDMediaRemoteSerialQueueManager init]
  -[MCDMediaRemoteSerialQueueManager .cxx_destruct]
  -[MCDMediaRemoteSerialQueueManager addOperation:cancelAllOperations:]
  -[MCDMediaRemoteSerialQueueManager mediaRemoteSerialQueue]
  -[MCDMediaRemoteSerialQueueManager setMediaRemoteSerialQueue:]


_MCDNowPlayingContentManager : NSObject /usr/lib/libSystem.B.dylib <MPRequestResponseControllerDelegate, UITableViewDelegate, UITableViewDataSource, CARSessionObserving, MCDNowPlayingContentManagerProtocol, CPUINowPlayingViewControllerDataSource, CPUINowPlayingViewControllerDelegate>
 @property  <MCDNowPlayingContentManagerDelegate> *delegate
 @property  MPCPlayerResponse *lastReceivedResponse
 @property  UITableView *tableView
 @property  MPCPlayerResponseItem *nowPlayingItem
 @property  MPRequestResponseController *requestController
 @property  UIImage *albumArtwork
 @property  MPArtworkCatalog *artworkCatalog
 @property  <MCDNowPlayingDataSource> *dataSource
 @property  NSString *bundleID
 @property  CARSessionStatus *carSessionStatus
 @property  UIAlertController *alertController
 @property  long long playerState
 @property  MPModelSong *currentPlayingSong
 @property  MPModelPlaylistEntry *currentPlayingPlaylistEntry
 @property  MPModelPlaylist *currentPlayingPlaylist
 @property  MPModelRadioStation *currentPlayingRadioStation
 @property  NSMutableDictionary *artworkCache
 @property  MSVTimer *artworkTimer
 @property  BOOL allowsAlbumArt
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL limitedUI
 @property  Class tableCellClass
 @property  NSString *nowPlayingBundleID

  // instance methods
  -[_MCDNowPlayingContentManager setBundleID:]
  -[_MCDNowPlayingContentManager artworkCatalog]
  -[_MCDNowPlayingContentManager _showPlaceholderArtwork]
  -[_MCDNowPlayingContentManager setDataSource:]
  -[_MCDNowPlayingContentManager _limitedUIChanged:]
  -[_MCDNowPlayingContentManager artworkCache]
  -[_MCDNowPlayingContentManager setTableView:]
  -[_MCDNowPlayingContentManager tableView:numberOfRowsInSection:]
  -[_MCDNowPlayingContentManager tableView:didSelectRowAtIndexPath:]
  -[_MCDNowPlayingContentManager tableView]
  -[_MCDNowPlayingContentManager dealloc]
  -[_MCDNowPlayingContentManager tableView:canEditRowAtIndexPath:]
  -[_MCDNowPlayingContentManager _setupRequest]
  -[_MCDNowPlayingContentManager artworkTimer]
  -[_MCDNowPlayingContentManager .cxx_destruct]
  -[_MCDNowPlayingContentManager setArtworkCache:]
  -[_MCDNowPlayingContentManager nowPlayingItem]
  -[_MCDNowPlayingContentManager setNowPlayingItem:]
  -[_MCDNowPlayingContentManager setArtworkCatalog:]
  -[_MCDNowPlayingContentManager controller:defersResponseReplacement:]
  -[_MCDNowPlayingContentManager tableView:cellForRowAtIndexPath:]
  -[_MCDNowPlayingContentManager setCarSessionStatus:]
  -[_MCDNowPlayingContentManager alertController]
  -[_MCDNowPlayingContentManager numberOfSectionsInTableView:]
  -[_MCDNowPlayingContentManager session:didUpdateConfiguration:]
  -[_MCDNowPlayingContentManager requestController]
  -[_MCDNowPlayingContentManager playerState]
  -[_MCDNowPlayingContentManager dataSource]
  -[_MCDNowPlayingContentManager lastReceivedResponse]
  -[_MCDNowPlayingContentManager setLastReceivedResponse:]
  -[_MCDNowPlayingContentManager setLimitedUI:]
  -[_MCDNowPlayingContentManager sessionDidConnect:]
  -[_MCDNowPlayingContentManager setDelegate:]
  -[_MCDNowPlayingContentManager setArtworkTimer:]
  -[_MCDNowPlayingContentManager limitedUI]
  -[_MCDNowPlayingContentManager carSessionStatus]
  -[_MCDNowPlayingContentManager setPlayerState:]
  -[_MCDNowPlayingContentManager setAlertController:]
  -[_MCDNowPlayingContentManager tableView:canMoveRowAtIndexPath:]
  -[_MCDNowPlayingContentManager delegate]
  -[_MCDNowPlayingContentManager bundleID]
  -[_MCDNowPlayingContentManager nowPlayingBundleID]
  -[_MCDNowPlayingContentManager _performRequest]
  -[_MCDNowPlayingContentManager viewWillDisappear]
  -[_MCDNowPlayingContentManager nowPlayingViewControllerIsPlaying:]
  -[_MCDNowPlayingContentManager artistTextForNowPlayingController:]
  -[_MCDNowPlayingContentManager albumTextForNowPlayingController:]
  -[_MCDNowPlayingContentManager titleForNowPlayingController:]
  -[_MCDNowPlayingContentManager backgroundArtForNowPlayingController:]
  -[_MCDNowPlayingContentManager nowPlayingViewControllerIsShowingExplicitTrack:]
  -[_MCDNowPlayingContentManager durationSnapshotForNowPlayingViewController:]
  -[_MCDNowPlayingContentManager placeholderTypeForNowPlayingViewController:]
  -[_MCDNowPlayingContentManager shuffleTypeForNowPlayingViewController:]
  -[_MCDNowPlayingContentManager repeatTypeForNowPlayingViewController:]
  -[_MCDNowPlayingContentManager nowPlayingViewControllerCanShuffle:]
  -[_MCDNowPlayingContentManager nowPlayingViewControllerToggleShuffle:]
  -[_MCDNowPlayingContentManager nowPlayingViewControllerCanRepeat:]
  -[_MCDNowPlayingContentManager nowPlayingViewControllerToggleRepeat:]
  -[_MCDNowPlayingContentManager nowPlayingViewControllerCanShowAlbumLink:]
  -[_MCDNowPlayingContentManager nowPlayingViewControllerCanShowUpNext:]
  -[_MCDNowPlayingContentManager nowPlayingViewControllerUpNextButtonTapped:]
  -[_MCDNowPlayingContentManager nowPlayingViewControllerCanShowChangePlaybackRate:]
  -[_MCDNowPlayingContentManager nowPlayingViewControllerChangePlaybackRate:]
  -[_MCDNowPlayingContentManager nowPlayingViewControllerGetPlaybackRate:]
  -[_MCDNowPlayingContentManager nowPlayingViewControllerCanShowAlbumArt:]
  -[_MCDNowPlayingContentManager nowPlayingViewControllerShouldUseMusicExplicitGlyph:]
  -[_MCDNowPlayingContentManager setRequestController:]
  -[_MCDNowPlayingContentManager currentPlayingSong]
  -[_MCDNowPlayingContentManager initWithDelegate:dataSource:bundleID:]
  -[_MCDNowPlayingContentManager beginRequestObservation]
  -[_MCDNowPlayingContentManager endRequestObservation]
  -[_MCDNowPlayingContentManager tableCellClass]
  -[_MCDNowPlayingContentManager _sessionAllowsAlbumArt:]
  -[_MCDNowPlayingContentManager setAllowsAlbumArt:]
  -[_MCDNowPlayingContentManager _shouldShowPlaybackQueueForItemCount:]
  -[_MCDNowPlayingContentManager setCurrentPlayingPlaylist:]
  -[_MCDNowPlayingContentManager setCurrentPlayingRadioStation:]
  -[_MCDNowPlayingContentManager setCurrentPlayingSong:]
  -[_MCDNowPlayingContentManager processArtworkForCurrentlyPlayingSong]
  -[_MCDNowPlayingContentManager setCurrentPlayingPlaylistEntry:]
  -[_MCDNowPlayingContentManager _processResponse:error:]
  -[_MCDNowPlayingContentManager setAlbumArtwork:]
  -[_MCDNowPlayingContentManager albumArtwork]
  -[_MCDNowPlayingContentManager _performChangeRequest:]
  -[_MCDNowPlayingContentManager currentPlayingPlaylistEntry]
  -[_MCDNowPlayingContentManager currentPlayingPlaylist]
  -[_MCDNowPlayingContentManager currentPlayingRadioStation]
  -[_MCDNowPlayingContentManager setTableCellClass:]
  -[_MCDNowPlayingContentManager modelResponseDidInvalidate:]
  -[_MCDNowPlayingContentManager allowsAlbumArt]


MCDPlayableContentPlaybackManager : _MCDNowPlayingContentManager <MPRequestResponseControllerDelegate, UITableViewDelegate, UITableViewDataSource>
 @property  BOOL seeking
 @property  MCDPCModel *model
 @property  long long playingItemIndex
 @property  long long totalItemCount
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MCDPlayableContentPlaybackManager totalItemCount]
  -[MCDPlayableContentPlaybackManager setTotalItemCount:]
  -[MCDPlayableContentPlaybackManager tableView:numberOfRowsInSection:]
  -[MCDPlayableContentPlaybackManager tableView:didSelectRowAtIndexPath:]
  -[MCDPlayableContentPlaybackManager .cxx_destruct]
  -[MCDPlayableContentPlaybackManager setModel:]
  -[MCDPlayableContentPlaybackManager tableView:cellForRowAtIndexPath:]
  -[MCDPlayableContentPlaybackManager model]
  -[MCDPlayableContentPlaybackManager isSeeking]
  -[MCDPlayableContentPlaybackManager setSeeking:]
  -[MCDPlayableContentPlaybackManager _itemAtIndexPath:]
  -[MCDPlayableContentPlaybackManager nowPlayingViewController:shouldDisplayButton:withImage:existingIdentifier:tinted:]
  -[MCDPlayableContentPlaybackManager nowPlayingViewController:buttonShouldBeActive:]
  -[MCDPlayableContentPlaybackManager nowPlayingViewController:didSendAction:state:]
  -[MCDPlayableContentPlaybackManager nowPlayingViewControllerCanShowAddToLibrary:]
  -[MCDPlayableContentPlaybackManager nowPlayingViewControllerAddToLibrary:]
  -[MCDPlayableContentPlaybackManager nowPlayingViewControllerCanShowMore:]
  -[MCDPlayableContentPlaybackManager nowPlayingViewControllerMore:]
  -[MCDPlayableContentPlaybackManager _processResponse:error:]
  -[MCDPlayableContentPlaybackManager _numberOfItemsInPlaybackQueue]
  -[MCDPlayableContentPlaybackManager _updateTrackQueueIndex]
  -[MCDPlayableContentPlaybackManager playingItemIndex]
  -[MCDPlayableContentPlaybackManager _adjustedIndexPathForPlaybackQueue:]
  -[MCDPlayableContentPlaybackManager _jumpBackwardInterval]
  -[MCDPlayableContentPlaybackManager _skipIntervalButtonImageForInterval:size:]
  -[MCDPlayableContentPlaybackManager _jumpForwardInterval]
  -[MCDPlayableContentPlaybackManager _handleHamburgerActionSheet]
  -[MCDPlayableContentPlaybackManager _alertActionForFeedbackCommand:fallbackTitle:]
  -[MCDPlayableContentPlaybackManager setPlayingItemIndex:]


MCDNowPlayingObserver : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *bundleIdentifier
 @property  unsigned int playbackState

  // class methods
  +[MCDNowPlayingObserver sharedInstance]

  // instance methods
  -[MCDNowPlayingObserver playbackState]
  -[MCDNowPlayingObserver init]
  -[MCDNowPlayingObserver dealloc]
  -[MCDNowPlayingObserver .cxx_destruct]
  -[MCDNowPlayingObserver setBundleIdentifier:]
  -[MCDNowPlayingObserver setPlaybackState:]
  -[MCDNowPlayingObserver removeObserver:]
  -[MCDNowPlayingObserver bundleIdentifier]
  -[MCDNowPlayingObserver addObserver:]
  -[MCDNowPlayingObserver _notifyObservers]
  -[MCDNowPlayingObserver queryPlaybackState]
  -[MCDNowPlayingObserver playbackStateChanged:]


MCDNoContentView : UIView /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
  // instance methods
  -[MCDNoContentView initWithFrame:]
  -[MCDNoContentView initWithTitle:subtitle:]


MCDLoadingContentView : UIView /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
  // instance methods
  -[MCDLoadingContentView initWithFrame:]


MCDErrorLoadingView : UIView /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 @property  <MCDErrorViewDelegate> *delegate
 @property  BOOL shouldEnableNetwork

  // instance methods
  -[MCDErrorLoadingView .cxx_destruct]
  -[MCDErrorLoadingView setDelegate:]
  -[MCDErrorLoadingView delegate]
  -[MCDErrorLoadingView initWithTitle:buttonText:]
  -[MCDErrorLoadingView retryButtonPressed:]
  -[MCDErrorLoadingView shouldEnableNetwork]
  -[MCDErrorLoadingView setShouldEnableNetwork:]


MCDGlyph : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[MCDGlyph imageNamed:ofSize:]
  +[MCDGlyph glyphFactory:pointSize:weight:scale:]


MCDBrowsableContentNavigationController : UITabBarController /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer <UITabBarControllerDelegate, MCDPCContainerDelegate>
 @property  UITabBarController *tabBarController
 @property  UITabBarController *hostTabBarController
 @property  MCDPCModel *model
 @property  NSString *bundleID
 @property  CPUINowPlayingButtonWrapperView *nowPlayingButtonView
 @property  BOOL hasCarScreen
 @property  MCDPCContainer *container
 @property  BOOL didFinishInitialLoad
 @property  BOOL didFinishInitialViewAppear
 @property  BOOL visible
 @property  BOOL hasInvalidatedDummyTabs
 @property  NSObject<OS_dispatch_queue> *serialQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MCDBrowsableContentNavigationController setVisible:]
  -[MCDBrowsableContentNavigationController setBundleID:]
  -[MCDBrowsableContentNavigationController serialQueue]
  -[MCDBrowsableContentNavigationController setSerialQueue:]
  -[MCDBrowsableContentNavigationController .cxx_destruct]
  -[MCDBrowsableContentNavigationController setModel:]
  -[MCDBrowsableContentNavigationController container]
  -[MCDBrowsableContentNavigationController setContainer:]
  -[MCDBrowsableContentNavigationController traitCollectionDidChange:]
  -[MCDBrowsableContentNavigationController viewDidAppear:]
  -[MCDBrowsableContentNavigationController tabBarController]
  -[MCDBrowsableContentNavigationController viewWillAppear:]
  -[MCDBrowsableContentNavigationController tabBarController:didSelectViewController:]
  -[MCDBrowsableContentNavigationController model]
  -[MCDBrowsableContentNavigationController viewWillDisappear:]
  -[MCDBrowsableContentNavigationController visible]
  -[MCDBrowsableContentNavigationController bundleID]
  -[MCDBrowsableContentNavigationController didFinishInitialLoad]
  -[MCDBrowsableContentNavigationController setDidFinishInitialLoad:]
  -[MCDBrowsableContentNavigationController _nowPlayingButtonTapped:]
  -[MCDBrowsableContentNavigationController _nowPlayingDidChange:]
  -[MCDBrowsableContentNavigationController _appRegisteredForContent:]
  -[MCDBrowsableContentNavigationController _updateNowPlayingButtonVisibility]
  -[MCDBrowsableContentNavigationController setDidFinishInitialViewAppear:]
  -[MCDBrowsableContentNavigationController container:didInvalidateIndicies:]
  -[MCDBrowsableContentNavigationController didFinishInitialViewAppear]
  -[MCDBrowsableContentNavigationController initWithBundleID:model:]
  -[MCDBrowsableContentNavigationController invalidateAndReloadTabsWithCompletion:]
  -[MCDBrowsableContentNavigationController _loadAllHostTabs]
  -[MCDBrowsableContentNavigationController updateTitleAndTabBarItemsAtIndexes:]
  -[MCDBrowsableContentNavigationController hasInvalidatedDummyTabs]
  -[MCDBrowsableContentNavigationController setHasInvalidatedDummyTabs:]
  -[MCDBrowsableContentNavigationController _hostTabAtIndex:dummyTab:]
  -[MCDBrowsableContentNavigationController _tabBarItemForViewController:fromItem:]
  -[MCDBrowsableContentNavigationController setHasCarScreen:]
  -[MCDBrowsableContentNavigationController setTabBarController:]
  -[MCDBrowsableContentNavigationController hostTabBarController]
  -[MCDBrowsableContentNavigationController setHostTabBarController:]
  -[MCDBrowsableContentNavigationController nowPlayingButtonView]
  -[MCDBrowsableContentNavigationController setNowPlayingButtonView:]
  -[MCDBrowsableContentNavigationController hasCarScreen]


MCDPlayableContentQueueTableViewController : UITableViewController /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 @property  MCDPlayableContentPlaybackManager *contentManager

  // instance methods
  -[MCDPlayableContentQueueTableViewController viewDidLoad]
  -[MCDPlayableContentQueueTableViewController .cxx_destruct]
  -[MCDPlayableContentQueueTableViewController contentManager]
  -[MCDPlayableContentQueueTableViewController setContentManager:]
  -[MCDPlayableContentQueueTableViewController initWithContentManager:]


MCDAlertController : UIAlertController /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
  // instance methods
  -[MCDAlertController .cxx_destruct]
  -[MCDAlertController viewDidAppear:]
  -[MCDAlertController viewDidDisappear:]


MPMediaItem(CarDisplay)
	// instance methods
	-[MPMediaItem(CarDisplay) albumImageWithFallbackForSize:doubleLineRow:]

UIImage(CarDisplay)
	// instance methods
	-[UIImage(CarDisplay) car_scaledImageWithSize:]

01 00 0500 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVTimeFormatter 
01 00 0100 /System/Library/PrivateFrameworks/CarKit.framework/CarKit: CARSessionStatus 
01 00 1200 /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI: CPUILabelButton 
01 00 1200 /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI: CPUIMediaButton 
01 00 1200 /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI: CPUINowPlayingButton 
01 00 1200 /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI: CPUINowPlayingButtonWrapperView 
01 00 1200 /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI: CPUINowPlayingViewController 
01 00 1200 /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI: CPUIRoundedLabelButton 
01 00 1200 /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI: CPUITableCell 
01 00 1200 /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI: CPUITableCellAccessory 
01 00 1200 /System/Library/PrivateFrameworks/CarPlayUI.framework/CarPlayUI: CPUITableCellConfiguration 
01 00 0200 /System/Library/PrivateFrameworks/iTunesCloud.framework/iTunesCloud: ICAgeVerificationManager 
01 00 0800 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationProxy 
01 00 0300 /System/Library/PrivateFrameworks/MediaPlaybackCore.framework/MediaPlaybackCore: MPCPlayerChangeRequest 
01 00 0300 /System/Library/PrivateFrameworks/MediaPlaybackCore.framework/MediaPlaybackCore: MPCPlayerPath 
01 00 0300 /System/Library/PrivateFrameworks/MediaPlaybackCore.framework/MediaPlaybackCore: MPCPlayerRequest 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPMediaItem 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPNetworkObserver 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPPropertySet 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPRequestResponseController 
01 00 0c00 /System/Library/PrivateFrameworks/MediaPlayerUI.framework/MediaPlayerUI: MPUNowPlayingIndicatorView 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPWeakTimer 
01 00 0400 /System/Library/PrivateFrameworks/MediaServices.framework/MediaServices: MSVTimer 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBlockOperation 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexPath 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSLayoutConstraint 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotification 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 1300 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivityIndicatorView 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertAction 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertController 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBarButtonItem 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFontDescriptor 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageSymbolConfiguration 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UILabel 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UILayoutGuide 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationController 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UITabBarController 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UITabBarItem 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UITableView 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewController 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UITraitCollection 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 0f00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIFilteredDataSource 
