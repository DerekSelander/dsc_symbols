|| __DATA.__common ___gMCDSharedDefaults
|| __DATA.__data __nonCapturedPressType
|| __DATA.__objc_data _OBJC_CLASS_$_MCDAlertController
|| __DATA.__objc_data _OBJC_CLASS_$_MCDBarButton
|| __DATA.__objc_data _OBJC_CLASS_$_MCDBrowsableContentNavigationController
|| __DATA.__objc_data _OBJC_CLASS_$_MCDBrowsableContentTableViewController
|| __DATA.__objc_data _OBJC_CLASS_$_MCDBrowsableContentUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_MCDButton
|| __DATA.__objc_data _OBJC_CLASS_$_MCDErrorLoadingView
|| __DATA.__objc_data _OBJC_CLASS_$_MCDGlyph
|| __DATA.__objc_data _OBJC_CLASS_$_MCDLabelButton
|| __DATA.__objc_data _OBJC_CLASS_$_MCDLoadingContentView
|| __DATA.__objc_data _OBJC_CLASS_$_MCDMediaButton
|| __DATA.__objc_data _OBJC_CLASS_$_MCDMediaRemoteSerialQueueManager
|| __DATA.__objc_data _OBJC_CLASS_$_MCDNoContentView
|| __DATA.__objc_data _OBJC_CLASS_$_MCDNowPlayingButton
|| __DATA.__objc_data _OBJC_CLASS_$_MCDNowPlayingButtonView
|| __DATA.__objc_data _OBJC_CLASS_$_MCDNowPlayingButtonWrapperView
|| __DATA.__objc_data _OBJC_CLASS_$_MCDNowPlayingObserver
|| __DATA.__objc_data _OBJC_CLASS_$_MCDNowPlayingViewController
|| __DATA.__objc_data _OBJC_CLASS_$_MCDPCContainer
|| __DATA.__objc_data _OBJC_CLASS_$_MCDPCItem
|| __DATA.__objc_data _OBJC_CLASS_$_MCDPCModel
|| __DATA.__objc_data _OBJC_CLASS_$_MCDPlayModeButton
|| __DATA.__objc_data _OBJC_CLASS_$_MCDPlayModeControlView
|| __DATA.__objc_data _OBJC_CLASS_$_MCDPlayableContentNowPlayingDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_MCDPlayableContentPlaybackManager
|| __DATA.__objc_data _OBJC_CLASS_$_MCDPlayableContentQueueTableViewController
|| __DATA.__objc_data _OBJC_CLASS_$_MCDPlayableContentTableViewCell
|| __DATA.__objc_data _OBJC_CLASS_$_MCDPlayableContentViewController
|| __DATA.__objc_data _OBJC_CLASS_$_MCDPlaybackProgressView
|| __DATA.__objc_data _OBJC_CLASS_$_MCDProgressBarView
|| __DATA.__objc_data _OBJC_CLASS_$_MCDProgressView
|| __DATA.__objc_data _OBJC_CLASS_$_MCDRepeatButton
|| __DATA.__objc_data _OBJC_CLASS_$_MCDRoundedLabelButton
|| __DATA.__objc_data _OBJC_CLASS_$_MCDShadowImageView
|| __DATA.__objc_data _OBJC_CLASS_$_MCDSongDetailsView
|| __DATA.__objc_data _OBJC_CLASS_$_MCDTitleView
|| __DATA.__objc_data _OBJC_CLASS_$_MCDTransportControlView
|| __DATA.__objc_data _OBJC_CLASS_$__MCDBrowsableTableView
|| __DATA.__objc_data _OBJC_CLASS_$__MCDNowPlayingContentManager
|| __DATA.__objc_data _OBJC_CLASS_$__MCDNowPlayingHostView
|| __DATA.__objc_data _OBJC_CLASS_$__MCDNowPlayingViewController
|| __DATA.__objc_data _OBJC_CLASS_$__MCDStackItem
|| __DATA.__objc_data _OBJC_METACLASS_$_MCDAlertController
|| __DATA.__objc_data _OBJC_METACLASS_$_MCDBarButton
|| __DATA.__objc_data _OBJC_METACLASS_$_MCDBrowsableContentNavigationController
|| __DATA.__objc_data _OBJC_METACLASS_$_MCDBrowsableContentTableViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_MCDBrowsableContentUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_MCDButton
|| __DATA.__objc_data _OBJC_METACLASS_$_MCDErrorLoadingView
|| __DATA.__objc_data _OBJC_METACLASS_$_MCDGlyph
|| __DATA.__objc_data _OBJC_METACLASS_$_MCDLabelButton
|| __DATA.__objc_data _OBJC_METACLASS_$_MCDLoadingContentView
|| __DATA.__objc_data _OBJC_METACLASS_$_MCDMediaButton
|| __DATA.__objc_data _OBJC_METACLASS_$_MCDMediaRemoteSerialQueueManager
|| __DATA.__objc_data _OBJC_METACLASS_$_MCDNoContentView
|| __DATA.__objc_data _OBJC_METACLASS_$_MCDNowPlayingButton
|| __DATA.__objc_data _OBJC_METACLASS_$_MCDNowPlayingButtonView
|| __DATA.__objc_data _OBJC_METACLASS_$_MCDNowPlayingButtonWrapperView
|| __DATA.__objc_data _OBJC_METACLASS_$_MCDNowPlayingObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_MCDNowPlayingViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_MCDPCContainer
|| __DATA.__objc_data _OBJC_METACLASS_$_MCDPCItem
|| __DATA.__objc_data _OBJC_METACLASS_$_MCDPCModel
|| __DATA.__objc_data _OBJC_METACLASS_$_MCDPlayModeButton
|| __DATA.__objc_data _OBJC_METACLASS_$_MCDPlayModeControlView
|| __DATA.__objc_data _OBJC_METACLASS_$_MCDPlayableContentNowPlayingDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_MCDPlayableContentPlaybackManager
|| __DATA.__objc_data _OBJC_METACLASS_$_MCDPlayableContentQueueTableViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_MCDPlayableContentTableViewCell
|| __DATA.__objc_data _OBJC_METACLASS_$_MCDPlayableContentViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_MCDPlaybackProgressView
|| __DATA.__objc_data _OBJC_METACLASS_$_MCDProgressBarView
|| __DATA.__objc_data _OBJC_METACLASS_$_MCDProgressView
|| __DATA.__objc_data _OBJC_METACLASS_$_MCDRepeatButton
|| __DATA.__objc_data _OBJC_METACLASS_$_MCDRoundedLabelButton
|| __DATA.__objc_data _OBJC_METACLASS_$_MCDShadowImageView
|| __DATA.__objc_data _OBJC_METACLASS_$_MCDSongDetailsView
|| __DATA.__objc_data _OBJC_METACLASS_$_MCDTitleView
|| __DATA.__objc_data _OBJC_METACLASS_$_MCDTransportControlView
|| __DATA.__objc_data _OBJC_METACLASS_$__MCDBrowsableTableView
|| __DATA.__objc_data _OBJC_METACLASS_$__MCDNowPlayingContentManager
|| __DATA.__objc_data _OBJC_METACLASS_$__MCDNowPlayingHostView
|| __DATA.__objc_data _OBJC_METACLASS_$__MCDNowPlayingViewController
|| __DATA.__objc_data _OBJC_METACLASS_$__MCDStackItem
|| __DATA_CONST.__const _MCDAlbumsDetailViewControllerIdentifier
|| __DATA_CONST.__const _MCDAlbumsViewControllerIdentifier
|| __DATA_CONST.__const _MCDArtistsViewControllerIdentifier
|| __DATA_CONST.__const _MCDBooksBundleIdentifier
|| __DATA_CONST.__const _MCDBrowsableContentNowPlayingIdentifiersUpdatedNotification
|| __DATA_CONST.__const _MCDBrowseViewControllerIdentifier
|| __DATA_CONST.__const _MCDCompilationsViewControllerIdentifier
|| __DATA_CONST.__const _MCDComposersViewControllerIdentifier
|| __DATA_CONST.__const _MCDContentItemsChangedNotification
|| __DATA_CONST.__const _MCDDownloadedMusicViewControllerIdentifier
|| __DATA_CONST.__const _MCDForYouTableViewControllerIdentifier
|| __DATA_CONST.__const _MCDGenresViewControllerIdentifier
|| __DATA_CONST.__const _MCDLibraryViewControllerIdentifier
|| __DATA_CONST.__const _MCDLovedMusicViewControllerIdentifier
|| __DATA_CONST.__const _MCDMusicApplicationBundleIdentifier
|| __DATA_CONST.__const _MCDMusicBundleIdentifier
|| __DATA_CONST.__const _MCDMusicCarPlayBundleIdentifier
|| __DATA_CONST.__const _MCDMusicCarPlayPlatformIdentifier
|| __DATA_CONST.__const _MCDMusicCarPlayVersion
|| __DATA_CONST.__const _MCDNowPlayingButtonStateNamePlaying
|| __DATA_CONST.__const _MCDNowPlayingButtonStateNameStopped
|| __DATA_CONST.__const _MCDNowPlayingWillAppearNotification
|| __DATA_CONST.__const _MCDNowPlayingWillDisappearNotification
|| __DATA_CONST.__const _MCDPCAppReadyToFetchNotificationName
|| __DATA_CONST.__const _MCDPCDidInitiatePlaybackNotificationName
|| __DATA_CONST.__const _MCDPCDidInvalidateNotificationName
|| __DATA_CONST.__const _MCDPCDidUpdateContentNotificationName
|| __DATA_CONST.__const _MCDPCErrorDomain
|| __DATA_CONST.__const _MCDPCErrorKey
|| __DATA_CONST.__const _MCDPCIndexPathKey
|| __DATA_CONST.__const _MCDPCItemKey
|| __DATA_CONST.__const _MCDPCItemsKey
|| __DATA_CONST.__const _MCDPCModelKey
|| __DATA_CONST.__const _MCDPCNowPlayingDidChangeNotificationName
|| __DATA_CONST.__const _MCDPlaylistTracksViewControllerIdentifier
|| __DATA_CONST.__const _MCDPlaylistsViewControllerIdentifier
|| __DATA_CONST.__const _MCDRadioViewControllerIdentifier
|| __DATA_CONST.__const _MCDRecentlyAddedControllerIdentifier
|| __DATA_CONST.__const _MCDSongsViewControllerIdentifier
|| __DATA_CONST.__const _MCDSortByArtist
|| __DATA_CONST.__const _MCDSortByPlaylistType
|| __DATA_CONST.__const _MCDSortByRecentlyAdded
|| __DATA_CONST.__const _MCDSortByRecentlyPlayed
|| __DATA_CONST.__const _MCDSortByTitle
|| __DATA_CONST.__const _MCDSortByYearAscending
|| __DATA_CONST.__const _MCDSortByYearDescending
|| __TEXT.__text _MCDAlbumDetailFormat
|| __TEXT.__text _MCDAlbumPlaceholderImageWithStyle
|| __TEXT.__text _MCDBarButtonItemForNegativeSpacer
|| __TEXT.__text _MCDCarDisplayBundle
|| __TEXT.__text _MCDCarDisplayScreen
|| __TEXT.__text _MCDCarDisplayUIMode
|| __TEXT.__text _MCDClearTableViewSelection
|| __TEXT.__text _MCDFilteredStringForString
|| __TEXT.__text _MCDFormatArtistAlbumString
|| __TEXT.__text _MCDFormattedNumberString
|| __TEXT.__text _MCDFormattedPlaybackRateString
|| __TEXT.__text _MCDGeneralLogging
|| __TEXT.__text _MCDGetNowPlayingButton
|| __TEXT.__text _MCDGetNowPlayingObserver
|| __TEXT.__text _MCDLocalizedExplicitImage
|| __TEXT.__text _MCDLocalizedExplicitString
|| __TEXT.__text _MCDMPModelObjectForGenericObject
|| __TEXT.__text _MCDMusicBundle
|| __TEXT.__text _MCDMusicGeneralLogging
|| __TEXT.__text _MCDNetworkConnectionAvailable
|| __TEXT.__text _MCDNetworkRestrictedCellularData
|| __TEXT.__text _MCDNowPlayingStateCallback
|| __TEXT.__text _MCDPerformColorUpdateWithCurrentTraitCollection
|| __TEXT.__text _MCDSetAllowsCellularData
|| __TEXT.__text _MCDSetChargeOnDescendantsOfView
|| __TEXT.__text _MCDSetSharedDefaults
|| __TEXT.__text _MCDSetupTableHeaderView
|| __TEXT.__text _MCDSharedDefaults
|| __TEXT.__text _MCDTiledArtworkForPlaylist
|| __TEXT.__text _MCDTimeDurationForSeconds
|| __TEXT.__text __MCDStringFromIndexPath
__ AVFoundation: _OBJC_CLASS_$_AVTimeFormatter
__ CarKit: _CARSessionLimitUserInterfacesChangedNotification
__ CarKit: _OBJC_CLASS_$_CARSessionStatus
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterGetLocalCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFNotificationCenterRemoveEveryObserver
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFPreferencesSetAppValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__
__ CoreFoundation: _kCFBooleanFalse
__ CoreFoundation: _kCFBooleanTrue
__ CoreGraphics: _CGAffineTransformIdentity
__ CoreGraphics: _CGAffineTransformScale
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMidY
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectIntersectsRect
__ CoreGraphics: _CGRectIsEmpty
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ CoreServices: _OBJC_CLASS_$_LSApplicationProxy
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSStringFromClass
__ Foundation: _OBJC_CLASS_$_NSBlockOperation
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSDistributedNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSIndexPath
__ Foundation: _OBJC_CLASS_$_NSLayoutConstraint
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotification
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ MediaPlaybackCore: _OBJC_CLASS_$_MPCPlayerChangeRequest
__ MediaPlaybackCore: _OBJC_CLASS_$_MPCPlayerPath
__ MediaPlaybackCore: _OBJC_CLASS_$_MPCPlayerRequest
__ MediaPlayer: _MPErrorDomain
__ MediaPlayer: _MPModelPropertyAlbumTitle
__ MediaPlayer: _MPModelPropertyArtistName
__ MediaPlayer: _MPModelPropertyComposerName
__ MediaPlayer: _MPModelPropertySongArtwork
__ MediaPlayer: _MPModelPropertySongDuration
__ MediaPlayer: _MPModelPropertySongExplicit
__ MediaPlayer: _MPModelPropertySongTitle
__ MediaPlayer: _MPModelRelationshipAlbumArtist
__ MediaPlayer: _MPModelRelationshipGenericSong
__ MediaPlayer: _MPModelRelationshipSongAlbum
__ MediaPlayer: _MPModelRelationshipSongArtist
__ MediaPlayer: _MPModelRelationshipSongComposer
__ MediaPlayer: _MPModelResponseDidInvalidateNotification
__ MediaPlayer: _OBJC_CLASS_$_MPMediaItem
__ MediaPlayer: _OBJC_CLASS_$_MPNetworkObserver
__ MediaPlayer: _OBJC_CLASS_$_MPPropertySet
__ MediaPlayer: _OBJC_CLASS_$_MPRequestResponseController
__ MediaPlayer: _OBJC_CLASS_$_MPWeakTimer
__ MediaPlayerUI: _MPURectByApplyingUserInterfaceLayoutDirectionInRect
__ MediaRemote: _MRContentItemGetArtworkData
__ MediaRemote: _MRContentItemGetIdentifier
__ MediaRemote: _MRContentItemGetIsContainer
__ MediaRemote: _MRContentItemGetIsExplicitItem
__ MediaRemote: _MRContentItemGetIsPlayable
__ MediaRemote: _MRContentItemGetIsStreamingContent
__ MediaRemote: _MRContentItemGetPlaybackProgress
__ MediaRemote: _MRContentItemGetSubtitle
__ MediaRemote: _MRContentItemGetTitle
__ MediaRemote: _MRMediaRemoteApplicationSupportsBrowsableContent
__ MediaRemote: _MRMediaRemoteApplicationSupportsImmediatePlayback
__ MediaRemote: _MRMediaRemoteApplicationSupportsSectionedBrowsing
__ MediaRemote: _MRMediaRemoteBeginLoadingBrowsableContent
__ MediaRemote: _MRMediaRemoteBrowsableContentGetNowPlayingContentIdentifiers
__ MediaRemote: _MRMediaRemoteBrowsableContentSupportsPlaybackProgress
__ MediaRemote: _MRMediaRemoteGetBrowsableContentChildItems
__ MediaRemote: _MRMediaRemoteGetCountOfBrowsableContentChildItems
__ MediaRemote: _MRMediaRemoteGetLocalOrigin
__ MediaRemote: _MRMediaRemoteGetNowPlayingApplicationPlaybackState
__ MediaRemote: _MRMediaRemoteGetNowPlayingClientForOrigin
__ MediaRemote: _MRMediaRemoteGetSupportedBrowsableContentAPIs
__ MediaRemote: _MRMediaRemoteRegisterForNowPlayingNotifications
__ MediaRemote: _MRMediaRemoteRequestPlaybackInitialization
__ MediaRemote: _MRMediaRemoteSendCommandToApp
__ MediaRemote: _MRMediaRemoteSetWantsNowPlayingNotifications
__ MediaRemote: _MRMediaRemoteUnregisterForNowPlayingNotifications
__ MediaRemote: _MRNowPlayingClientGetBundleIdentifier
__ MediaRemote: _MRNowPlayingPlayerPathGetClient
__ MediaRemote: _kMRMediaRemoteApplicationFinishedLoadingContentNotification
__ MediaRemote: _kMRMediaRemoteApplicationInitiatedPlaybackOfContentItemNotification
__ MediaRemote: _kMRMediaRemoteApplicationInvalidatedBrowsableContentDataSourceNotification
__ MediaRemote: _kMRMediaRemoteBrowsableContentAPIChangedNotification
__ MediaRemote: _kMRMediaRemoteBrowsableContentBundleIdentifierUserInfoKey
__ MediaRemote: _kMRMediaRemoteBrowsableContentErrorCodeKey
__ MediaRemote: _kMRMediaRemoteBrowsableContentErrorDomainKey
__ MediaRemote: _kMRMediaRemoteBrowsableContentErrorLocalizedDescriptionKey
__ MediaRemote: _kMRMediaRemoteBrowsableContentNowPlayingIdentifiersUpdatedNotification
__ MediaRemote: _kMRMediaRemoteContentItemsUpdatedNotification
__ MediaRemote: _kMRMediaRemoteIndexPathDataUserInfoKey
__ MediaRemote: _kMRMediaRemoteNowPlayingApplicationIsPlayingDidChangeNotification
__ MediaRemote: _kMRMediaRemoteNowPlayingApplicationIsPlayingUserInfoKey
__ MediaRemote: _kMRMediaRemoteNowPlayingApplicationPlaybackStateDidChangeNotification
__ MediaRemote: _kMRMediaRemoteNowPlayingInfoDidChangeNotification
__ MediaRemote: _kMRMediaRemoteOriginNowPlayingInfoDidChangeNotification
__ MediaRemote: _kMRMediaRemoteUpdatedContentItemsUserInfoKey
__ MediaRemote: _kMRMediaRemoteUpdatedNowPlayingIdentifiersInfoKey
__ MediaRemote: _kMRNowPlayingPlayerPathUserInfoKey
__ MediaServices: _OBJC_CLASS_$_MSVTimer
__ MediaServices: _msv_dispatch_async_on_queue
__ QuartzCore: _OBJC_CLASS_$_CAFilter
__ QuartzCore: _OBJC_CLASS_$_CALayer
__ QuartzCore: _OBJC_CLASS_$_CAMLParser
__ QuartzCore: _OBJC_CLASS_$_CAShapeLayer
__ QuartzCore: _OBJC_CLASS_$_CAState
__ QuartzCore: _OBJC_CLASS_$_CAStateAddAnimation
__ QuartzCore: _OBJC_CLASS_$_CAStateAddElement
__ QuartzCore: _OBJC_CLASS_$_CAStateController
__ QuartzCore: _OBJC_CLASS_$_CAStateElement
__ QuartzCore: _OBJC_CLASS_$_CAStateRemoveAnimation
__ QuartzCore: _OBJC_CLASS_$_CAStateRemoveElement
__ QuartzCore: _OBJC_CLASS_$_CAStateSetValue
__ QuartzCore: _OBJC_CLASS_$_CAStateTransition
__ QuartzCore: _OBJC_CLASS_$_CAStateTransitionElement
__ QuartzCore: _OBJC_CLASS_$_CATransaction
__ QuartzCore: _kCACornerCurveContinuous
__ QuartzCore: _kCAFilterColorAdd
__ QuartzCore: _kCAFilterColorSaturate
__ QuartzCore: _kCAFilterDestOut
__ QuartzCore: _kCAFilterGaussianBlur
__ QuartzCore: _kCAFilterMultiplyColor
__ QuartzCore: _kCAFilterSourceOver
__ UIKit: _OBJC_CLASS_$_UIActivityIndicatorView
__ UIKit: _OBJC_CLASS_$_UIAlertAction
__ UIKit: _OBJC_CLASS_$_UIAlertController
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIBarButtonItem
__ UIKit: _OBJC_CLASS_$_UIBezierPath
__ UIKit: _OBJC_CLASS_$_UIButton
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIFocusContainerGuide
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIFontDescriptor
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageSymbolConfiguration
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UILabel
__ UIKit: _OBJC_CLASS_$_UILayoutGuide
__ UIKit: _OBJC_CLASS_$_UILongPressGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UINavigationController
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UIStackView
__ UIKit: _OBJC_CLASS_$_UITabBarController
__ UIKit: _OBJC_CLASS_$_UITabBarItem
__ UIKit: _OBJC_CLASS_$_UITableView
__ UIKit: _OBJC_CLASS_$_UITableViewCell
__ UIKit: _OBJC_CLASS_$_UITableViewController
__ UIKit: _OBJC_CLASS_$_UITapGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UITraitCollection
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_CLASS_$__UIFilteredDataSource
__ UIKit: _OBJC_METACLASS_$_UIAlertController
__ UIKit: _OBJC_METACLASS_$_UIButton
__ UIKit: _OBJC_METACLASS_$_UINavigationController
__ UIKit: _OBJC_METACLASS_$_UITabBarController
__ UIKit: _OBJC_METACLASS_$_UITableView
__ UIKit: _OBJC_METACLASS_$_UITableViewCell
__ UIKit: _OBJC_METACLASS_$_UITableViewController
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _UIFontTextStyleBody
__ UIKit: _UIFontTextStyleCallout
__ UIKit: _UIFontTextStyleCaption1
__ UIKit: _UIFontTextStyleSubheadline
__ UIKit: _UIFontTextStyleTitle2
__ UIKit: _UIFontWeightRegular
__ UIKit: _UIGraphicsBeginImageContextWithOptions
__ UIKit: _UIGraphicsEndImageContext
__ UIKit: _UIGraphicsGetImageFromCurrentImageContext
__ UIKit: _UIRectGetCenter
__ UIKit: _UIViewNoIntrinsicMetric
__ UIKit: __UIScreenCapabilityInteractionModelsKey
__ UIKit: __UIScreenCapabilityTouchLevelsKey
__ iTunesCloud: _ICAgeVerificationStateDidChangeNotification
__ iTunesCloud: _ICEnvironmentNetworkTypeIsCellular
__ iTunesCloud: _OBJC_CLASS_$_ICAgeVerificationManager
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
MCDBrowsableContentUtilities : NSObject /usr/lib/libSystem.B.dylib
 @property  NSArray *nowPlayingIdentifiers
 @property  NSArray *firstPartyAppBundleIDs

  // class methods
  +[MCDBrowsableContentUtilities sharedInstance]

  // instance methods
  -[MCDBrowsableContentUtilities .cxx_destruct]
  -[MCDBrowsableContentUtilities setNowPlayingIdentifiers:]
  -[MCDBrowsableContentUtilities nowPlayingIdentifiers]
  -[MCDBrowsableContentUtilities firstPartyAppBundleIDs]


MCDBrowsableContentTableViewController : UIViewController /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer <UITableViewDataSource, UITableViewDelegate, UIGestureRecognizerDelegate, MCDPCContainerDelegate, MCDErrorViewDelegate, CARSessionObserving>
 @property  BOOL visible
 @property  NSIndexPath *selectedIndexPath
 @property  UIView *placeholderView
 @property  BOOL currentlyPlayingApp
 @property  MPWeakTimer *loadingTimer
 @property  UIAlertController *alertController
 @property  BOOL pushToNowPlaying
 @property  MCDPCContainer *container
 @property  BOOL didFinishInitialLoad
 @property  BOOL didFinishInitialViewAppear
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MCDBrowsableContentTableViewController dealloc]
  -[MCDBrowsableContentTableViewController container]
  -[MCDBrowsableContentTableViewController setContainer:]
  -[MCDBrowsableContentTableViewController .cxx_destruct]
  -[MCDBrowsableContentTableViewController setVisible:]
  -[MCDBrowsableContentTableViewController isVisible]
  -[MCDBrowsableContentTableViewController traitCollectionDidChange:]
  -[MCDBrowsableContentTableViewController preferredFocusEnvironments]
  -[MCDBrowsableContentTableViewController setAlertController:]
  -[MCDBrowsableContentTableViewController alertController]
  -[MCDBrowsableContentTableViewController initWithNibName:bundle:]
  -[MCDBrowsableContentTableViewController viewWillAppear:]
  -[MCDBrowsableContentTableViewController viewWillDisappear:]
  -[MCDBrowsableContentTableViewController viewDidLoad]
  -[MCDBrowsableContentTableViewController viewDidLayoutSubviews]
  -[MCDBrowsableContentTableViewController viewDidAppear:]
  -[MCDBrowsableContentTableViewController viewDidDisappear:]
  -[MCDBrowsableContentTableViewController tableView:numberOfRowsInSection:]
  -[MCDBrowsableContentTableViewController tableView:cellForRowAtIndexPath:]
  -[MCDBrowsableContentTableViewController tableView:didSelectRowAtIndexPath:]
  -[MCDBrowsableContentTableViewController contentScrollView]
  -[MCDBrowsableContentTableViewController tableView:didFocusRowAtIndexPath:]
  -[MCDBrowsableContentTableViewController setSelectedIndexPath:]
  -[MCDBrowsableContentTableViewController selectedIndexPath]
  -[MCDBrowsableContentTableViewController initWithContainer:]
  -[MCDBrowsableContentTableViewController _limitedUIChanged:]
  -[MCDBrowsableContentTableViewController _configureCell:forIndexPath:]
  -[MCDBrowsableContentTableViewController setPlaceholderView:]
  -[MCDBrowsableContentTableViewController placeholderView]
  -[MCDBrowsableContentTableViewController reloadWithCompletion:]
  -[MCDBrowsableContentTableViewController didFinishInitialLoad]
  -[MCDBrowsableContentTableViewController setDidFinishInitialLoad:]
  -[MCDBrowsableContentTableViewController reloadTable]
  -[MCDBrowsableContentTableViewController _nowPlayingDidChange:]
  -[MCDBrowsableContentTableViewController _appRegisteredForContent:]
  -[MCDBrowsableContentTableViewController _clearTableViewSelectionAnimated:]
  -[MCDBrowsableContentTableViewController _updateNowPlayingButtonVisibility]
  -[MCDBrowsableContentTableViewController setDidFinishInitialViewAppear:]
  -[MCDBrowsableContentTableViewController _showTimeoutScreen]
  -[MCDBrowsableContentTableViewController _replacePlaceholderViewWithView:]
  -[MCDBrowsableContentTableViewController _showLoadingScreen]
  -[MCDBrowsableContentTableViewController currentlyPlayingApp]
  -[MCDBrowsableContentTableViewController _displayErrorAlertController:]
  -[MCDBrowsableContentTableViewController loadingTimer]
  -[MCDBrowsableContentTableViewController setLoadingTimer:]
  -[MCDBrowsableContentTableViewController _clearLoadingActivity]
  -[MCDBrowsableContentTableViewController setPushToNowPlaying:]
  -[MCDBrowsableContentTableViewController initWithContainer:tabbedBrowsing:]
  -[MCDBrowsableContentTableViewController _displayLoadingActivity]
  -[MCDBrowsableContentTableViewController _shouldLimitLists]
  -[MCDBrowsableContentTableViewController setCurrentlyPlayingApp:]
  -[MCDBrowsableContentTableViewController _nowPlayingButtonTapped:]
  -[MCDBrowsableContentTableViewController _pushToNowPlaying:]
  -[MCDBrowsableContentTableViewController pushToNowPlaying]
  -[MCDBrowsableContentTableViewController container:didInvalidateIndicies:]
  -[MCDBrowsableContentTableViewController containerDidChangeCount:]
  -[MCDBrowsableContentTableViewController errorViewDidTapButton:]
  -[MCDBrowsableContentTableViewController didFinishInitialViewAppear]


_MCDBrowsableTableView : UITableView /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
  // instance methods
  -[_MCDBrowsableTableView canBecomeFirstResponder]


MCDProgressBarView : UIView /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 @property  UIView *overallBarView
 @property  UIView *progressBarView
 @property  double progress

  // instance methods
  -[MCDProgressBarView .cxx_destruct]
  -[MCDProgressBarView progress]
  -[MCDProgressBarView setProgress:]
  -[MCDProgressBarView initWithFrame:]
  -[MCDProgressBarView layoutSubviews]
  -[MCDProgressBarView overallBarView]
  -[MCDProgressBarView progressBarView]
  -[MCDProgressBarView setOverallBarView:]
  -[MCDProgressBarView setProgressBarView:]


MCDPlaybackProgressView : UIView /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 @property  UIView *overallProgressView
 @property  UIView *currentProgressView
 @property  BOOL shouldResizeCurrentProgress
 @property  double playbackProgress
 @property  BOOL highlighted

  // instance methods
  -[MCDPlaybackProgressView init]
  -[MCDPlaybackProgressView .cxx_destruct]
  -[MCDPlaybackProgressView layoutSubviews]
  -[MCDPlaybackProgressView setHighlighted:]
  -[MCDPlaybackProgressView highlighted]
  -[MCDPlaybackProgressView playbackProgress]
  -[MCDPlaybackProgressView setPlaybackProgress:]
  -[MCDPlaybackProgressView setProgressViewHighlighted:]
  -[MCDPlaybackProgressView setShouldResizeCurrentProgress:]
  -[MCDPlaybackProgressView currentProgressView]
  -[MCDPlaybackProgressView overallProgressView]
  -[MCDPlaybackProgressView shouldResizeCurrentProgress]
  -[MCDPlaybackProgressView setOverallProgressView:]
  -[MCDPlaybackProgressView setCurrentProgressView:]


MCDTitleView : UIView /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 @property  UILabel *explicitLabel
 @property  UILabel *titleLabel
 @property  UIFont *font
 @property  BOOL explicitTrack
 @property  BOOL shouldUseMusicExplicitGlyph

  // instance methods
  -[MCDTitleView .cxx_destruct]
  -[MCDTitleView intrinsicContentSize]
  -[MCDTitleView initWithFrame:]
  -[MCDTitleView setFont:]
  -[MCDTitleView titleLabel]
  -[MCDTitleView font]
  -[MCDTitleView updateConstraints]
  -[MCDTitleView setupConstraints]
  -[MCDTitleView isExplicitTrack]
  -[MCDTitleView setExplicitTrack:]
  -[MCDTitleView _updateExplicitTreatmentString]
  -[MCDTitleView _createLabelWithTextAlignment:]
  -[MCDTitleView explicitLabel]
  -[MCDTitleView setShouldUseMusicExplicitGlyph:]
  -[MCDTitleView shouldUseMusicExplicitGlyph]
  -[MCDTitleView setExplicitLabel:]


MCDPlayModeControlView : UIView /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 @property  NSArray *activeButtonLayoutConstraints
 @property  MCDRepeatButton *repeatButton
 @property  MCDPlayModeButton *moreButton
 @property  MCDPlayModeButton *shuffleButton
 @property  MCDPlayModeButton *addToLibraryButton
 @property  MCDPlayModeButton *playbackRateButton
 @property  BOOL fuseSubscriberLayout
 @property  UIStackView *stackView
 @property  double maximumButtonWidth
 @property  BOOL showsArtwork

  // instance methods
  -[MCDPlayModeControlView .cxx_destruct]
  -[MCDPlayModeControlView intrinsicContentSize]
  -[MCDPlayModeControlView initWithFrame:]
  -[MCDPlayModeControlView layoutSubviews]
  -[MCDPlayModeControlView stackView]
  -[MCDPlayModeControlView moreButton]
  -[MCDPlayModeControlView shuffleButton]
  -[MCDPlayModeControlView addToLibraryButton]
  -[MCDPlayModeControlView playbackRateButton]
  -[MCDPlayModeControlView repeatButton]
  -[MCDPlayModeControlView _updateButtonLayouts]
  -[MCDPlayModeControlView showsArtwork]
  -[MCDPlayModeControlView _visibleControlButtons]
  -[MCDPlayModeControlView maximumButtonWidth]
  -[MCDPlayModeControlView setShowsArtwork:]
  -[MCDPlayModeControlView fuseSubscriberLayout]
  -[MCDPlayModeControlView setFuseSubscriberLayout:]
  -[MCDPlayModeControlView activeButtonLayoutConstraints]
  -[MCDPlayModeControlView setActiveButtonLayoutConstraints:]


MCDButton : UIButton /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 @property  BOOL selected
 @property  BOOL showBezelInTouch
 @property  BOOL showHighlight

  // instance methods
  -[MCDButton .cxx_destruct]
  -[MCDButton setHidden:]
  -[MCDButton intrinsicContentSize]
  -[MCDButton initWithFrame:]
  -[MCDButton didUpdateFocusInContext:withAnimationCoordinator:]
  -[MCDButton canBecomeFocused]
  -[MCDButton layoutSubviews]
  -[MCDButton setSelected:]
  -[MCDButton willMoveToWindow:]
  -[MCDButton _updateButtonStyle]
  -[MCDButton setShowHighlight:]
  -[MCDButton showHighlight]
  -[MCDButton canShowHighlight]
  -[MCDButton tintColorForUnhighlightedTextLabel]
  -[MCDButton showBezelInTouch]
  -[MCDButton focusLayerCornerRadius]
  -[MCDButton colorForKnobFocusLayer]
  -[MCDButton colorForKnobFocusLayerSelected]
  -[MCDButton shouldUpdateButtonOpacityForKnobUnfocused]
  -[MCDButton updateButtonOpacityForKnobUnfocused]
  -[MCDButton colorForKnobContentSelected]
  -[MCDButton colorForKnobFocused]
  -[MCDButton colorForTouchContentSelected]
  -[MCDButton colorForTouchFocusLayerSelected]
  -[MCDButton colorForTouchFocusLayer]
  -[MCDButton setShowBezelInTouch:]
  -[MCDButton _buttonBackGroundColorTouch]


MCDLabelButton : MCDButton
 @property  UIColor *disabledTextColor

  // instance methods
  -[MCDLabelButton setEnabled:]
  -[MCDLabelButton .cxx_destruct]
  -[MCDLabelButton tintColor]
  -[MCDLabelButton disabledTextColor]
  -[MCDLabelButton setDisabledTextColor:]
  -[MCDLabelButton colorForKnobFocusLayer]
  -[MCDLabelButton updateButtonOpacityForKnobUnfocused]


MCDRoundedLabelButton : MCDLabelButton
  // instance methods
  -[MCDRoundedLabelButton initWithFrame:]
  -[MCDRoundedLabelButton colorForKnobFocusLayer]
  -[MCDRoundedLabelButton colorForKnobFocusLayerSelected]
  -[MCDRoundedLabelButton colorForKnobContentSelected]
  -[MCDRoundedLabelButton colorForTouchContentSelected]
  -[MCDRoundedLabelButton colorForTouchFocusLayerSelected]


MCDBarButton : MCDButton
  // instance methods
  -[MCDBarButton colorForKnobFocusLayer]


MCDMediaButton : MCDButton
 @property  double cornerRadius

  // instance methods
  -[MCDMediaButton initWithFrame:]
  -[MCDMediaButton setCornerRadius:]
  -[MCDMediaButton cornerRadius]
  -[MCDMediaButton canShowHighlight]
  -[MCDMediaButton focusLayerCornerRadius]
  -[MCDMediaButton colorForKnobFocusLayer]


MCDPlayModeButton : MCDButton
  // instance methods
  -[MCDPlayModeButton tintColorForUnhighlightedTextLabel]
  -[MCDPlayModeButton showBezelInTouch]
  -[MCDPlayModeButton colorForKnobFocusLayerSelected]
  -[MCDPlayModeButton shouldUpdateButtonOpacityForKnobUnfocused]
  -[MCDPlayModeButton colorForKnobContentSelected]
  -[MCDPlayModeButton colorForTouchContentSelected]
  -[MCDPlayModeButton colorForTouchFocusLayerSelected]
  -[MCDPlayModeButton colorForTouchFocusLayer]


MCDPlayableContentNowPlayingDataSource : NSObject /usr/lib/libSystem.B.dylib <MCDNowPlayingDataSource>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MCDPlayableContentNowPlayingDataSource _itemProperties]
  -[MCDPlayableContentNowPlayingDataSource queueItemProperties]
  -[MCDPlayableContentNowPlayingDataSource playingItemProperties]
  -[MCDPlayableContentNowPlayingDataSource requestLabel]


MCDPlayableContentViewController : UINavigationController /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer <UINavigationControllerDelegate>
 @property  NSOperationQueue *modelInvalidationQueue
 @property  NSString *bundleID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MCDPlayableContentViewController .cxx_destruct]
  -[MCDPlayableContentViewController bundleID]
  -[MCDPlayableContentViewController viewWillAppear:]
  -[MCDPlayableContentViewController viewWillDisappear:]
  -[MCDPlayableContentViewController setViewControllers:animated:]
  -[MCDPlayableContentViewController initWithBundleID:]
  -[MCDPlayableContentViewController _setupView]
  -[MCDPlayableContentViewController _modelDidInvalidate:]
  -[MCDPlayableContentViewController _nowPlayingIdentifiersChanged:]
  -[MCDPlayableContentViewController initWithBundleID:stack:]
  -[MCDPlayableContentViewController _populateStack]
  -[MCDPlayableContentViewController _createSectionedRootViewController]
  -[MCDPlayableContentViewController _createRootViewController]
  -[MCDPlayableContentViewController modelInvalidationQueue]
  -[MCDPlayableContentViewController refreshNavigationStackForLaunch]
  -[MCDPlayableContentViewController currentStack]
  -[MCDPlayableContentViewController setModelInvalidationQueue:]


_MCDStackItem : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *identifier
 @property  NSIndexPath *indexPath

  // class methods
  +[_MCDStackItem stackItemWithContainer:]

  // instance methods
  -[_MCDStackItem .cxx_destruct]
  -[_MCDStackItem identifier]
  -[_MCDStackItem indexPath]


MCDTransportControlView : UIView /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 @property  UIImage *playImage
 @property  UIImage *pauseImage
 @property  UIImage *defaultLeftButtonImage
 @property  UIImage *defaultFastForwardButtonImage
 @property  NSLayoutConstraint *containerHeightConstraint
 @property  {CGSize=dd} buttonSize
 @property  UIButton *leftButton
 @property  UIButton *playPauseButton
 @property  UIButton *fastForwardButton
 @property  BOOL progressActive
 @property  NSString *playButtonImageName
 @property  NSString *pauseButtonImageName

  // instance methods
  -[MCDTransportControlView .cxx_destruct]
  -[MCDTransportControlView initWithFrame:]
  -[MCDTransportControlView updateConstraints]
  -[MCDTransportControlView leftButton]
  -[MCDTransportControlView setupConstraints]
  -[MCDTransportControlView buttonSize]
  -[MCDTransportControlView playImage]
  -[MCDTransportControlView pauseImage]
  -[MCDTransportControlView setPlayImage:]
  -[MCDTransportControlView setPauseImage:]
  -[MCDTransportControlView playPauseButton]
  -[MCDTransportControlView setButtonSize:]
  -[MCDTransportControlView defaultLeftButtonImage]
  -[MCDTransportControlView defaultFastForwardButtonImage]
  -[MCDTransportControlView _updateProgressActive]
  -[MCDTransportControlView setProgressActive:]
  -[MCDTransportControlView _defaultImageForIdentifier:]
  -[MCDTransportControlView setPlayButtonImageName:]
  -[MCDTransportControlView setPauseButtonImageName:]
  -[MCDTransportControlView fastForwardButton]
  -[MCDTransportControlView progressActive]
  -[MCDTransportControlView playButtonImageName]
  -[MCDTransportControlView pauseButtonImageName]
  -[MCDTransportControlView setDefaultLeftButtonImage:]
  -[MCDTransportControlView setDefaultFastForwardButtonImage:]
  -[MCDTransportControlView containerHeightConstraint]
  -[MCDTransportControlView setContainerHeightConstraint:]


MCDProgressView : UIView /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 @property  {?=dddddffBB} durationSnapshot

  // instance methods
  -[MCDProgressView .cxx_destruct]
  -[MCDProgressView initWithFrame:]
  -[MCDProgressView layoutSubviews]
  -[MCDProgressView didMoveToWindow]
  -[MCDProgressView _displayLinkTick:]
  -[MCDProgressView setupConstraints]
  -[MCDProgressView durationSnapshot]
  -[MCDProgressView setDurationSnapshot:]
  -[MCDProgressView _updateLabelsForElapsedTime:duration:]
  -[MCDProgressView _updateProgressForElapsedTime:duration:]
  -[MCDProgressView runUntilNextDisplayLinkEvent]
  -[MCDProgressView pauseDisplayLinkIfNeeded]


MCDNowPlayingViewController : UIViewController /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer <CARSessionObserving, MCDNowPlayingContentManagerDelegate>
 @property  _MCDNowPlayingViewController *nowPlayingViewController
 @property  UIBarButtonItem *backButton
 @property  UIActivityIndicatorView *activityIndicator
 @property  UIBarButtonItem *activityIndicatorBarButtonItem
 @property  BOOL trackBuffering
 @property  NSString *bundleID
 @property  NSString *appName
 @property  MPWeakTimer *activityTimer
 @property  UILabel *rightTitleLabel
 @property  UIBarButtonItem *rightTitleLabelBarButtonItem
 @property  UIBarButtonItem *playbackQueueBarButtonItem
 @property  BOOL handledWillAppear
 @property  BOOL shouldShowPlaybackQueue
 @property  CARSessionStatus *carSessionStatus
 @property  <MCDNowPlayingContentManagerProtocol> *contentManager
 @property  UITableViewController *playbackQueueViewController
 @property  @? albumViewControllerProvider
 @property  BOOL showNavigationBar
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MCDNowPlayingViewController dealloc]
  -[MCDNowPlayingViewController .cxx_destruct]
  -[MCDNowPlayingViewController bundleID]
  -[MCDNowPlayingViewController setBundleID:]
  -[MCDNowPlayingViewController preferredFocusEnvironments]
  -[MCDNowPlayingViewController viewWillAppear:]
  -[MCDNowPlayingViewController viewWillDisappear:]
  -[MCDNowPlayingViewController viewDidLoad]
  -[MCDNowPlayingViewController willMoveToParentViewController:]
  -[MCDNowPlayingViewController viewDidAppear:]
  -[MCDNowPlayingViewController viewDidDisappear:]
  -[MCDNowPlayingViewController backButton]
  -[MCDNowPlayingViewController setBackButton:]
  -[MCDNowPlayingViewController appName]
  -[MCDNowPlayingViewController activityIndicator]
  -[MCDNowPlayingViewController setActivityIndicator:]
  -[MCDNowPlayingViewController setAppName:]
  -[MCDNowPlayingViewController session:didUpdateConfiguration:]
  -[MCDNowPlayingViewController setShowNavigationBar:]
  -[MCDNowPlayingViewController showNavigationBar]
  -[MCDNowPlayingViewController contentManager]
  -[MCDNowPlayingViewController carSessionStatus]
  -[MCDNowPlayingViewController setNowPlayingViewController:]
  -[MCDNowPlayingViewController nowPlayingViewController]
  -[MCDNowPlayingViewController _updateBackButton]
  -[MCDNowPlayingViewController initWithPlayableBundleID:appName:]
  -[MCDNowPlayingViewController initWithBundleID:appName:]
  -[MCDNowPlayingViewController setContentManager:]
  -[MCDNowPlayingViewController setPlaybackQueueViewController:]
  -[MCDNowPlayingViewController setRightTitleLabel:]
  -[MCDNowPlayingViewController rightTitleLabel]
  -[MCDNowPlayingViewController _adjustRightTitleLabelToFit]
  -[MCDNowPlayingViewController setActivityIndicatorBarButtonItem:]
  -[MCDNowPlayingViewController _setupActivityTimer]
  -[MCDNowPlayingViewController setRightTitleLabelBarButtonItem:]
  -[MCDNowPlayingViewController upNextButtonTapped:]
  -[MCDNowPlayingViewController setPlaybackQueueBarButtonItem:]
  -[MCDNowPlayingViewController setRightTitle:]
  -[MCDNowPlayingViewController shouldShowPlaybackQueue]
  -[MCDNowPlayingViewController contentManager:shouldShowPlaybackQueue:]
  -[MCDNowPlayingViewController albumArtistButtonTapped:]
  -[MCDNowPlayingViewController playbackQueueViewController]
  -[MCDNowPlayingViewController _handleWillAppear]
  -[MCDNowPlayingViewController setHandledWillAppear:]
  -[MCDNowPlayingViewController setTrackBuffering:]
  -[MCDNowPlayingViewController trackBuffering]
  -[MCDNowPlayingViewController albumViewControllerProvider]
  -[MCDNowPlayingViewController setShouldShowPlaybackQueue:]
  -[MCDNowPlayingViewController handledWillAppear]
  -[MCDNowPlayingViewController playbackQueueBarButtonItem]
  -[MCDNowPlayingViewController rightTitleLabelBarButtonItem]
  -[MCDNowPlayingViewController activityIndicatorBarButtonItem]
  -[MCDNowPlayingViewController _popViewControllerAnimated]
  -[MCDNowPlayingViewController _invalidateActivityTimer]
  -[MCDNowPlayingViewController setActivityTimer:]
  -[MCDNowPlayingViewController activityTimer]
  -[MCDNowPlayingViewController contentManagerReloadData:]
  -[MCDNowPlayingViewController contentManager:presentViewController:]
  -[MCDNowPlayingViewController contentManager:bufferingItem:]
  -[MCDNowPlayingViewController contentManagerInitiatedPlaybackFromPlaybackQueue:]
  -[MCDNowPlayingViewController contentManager:displayItemIndex:totalItemCount:]
  -[MCDNowPlayingViewController contentManagerCompletedAllPlayback:]
  -[MCDNowPlayingViewController contentManager:sectionName:]
  -[MCDNowPlayingViewController setCarSessionStatus:]
  -[MCDNowPlayingViewController setAlbumViewControllerProvider:]


MCDPCModel : NSObject /usr/lib/libSystem.B.dylib <MCDNowPlayingContentManagerDelegate>
 @property  MCDPlayableContentPlaybackManager *playableContentPlaybackManager
 @property  BOOL currentPlayingApp
 @property  @? playbackCompletion
 @property  @? containerCompletion
 @property  NSIndexPath *selectedIndexPath
 @property  NSMutableDictionary *items
 @property  BOOL didFinishInitialLoad
 @property  unsigned int supportedAPIMask
 @property  NSMutableDictionary *beginLoadingBlocks
 @property  MPWeakTimer *beginLoadingTimeoutTimer
 @property  MPWeakTimer *playbackProgressTimeoutTimer
 @property  NSObject<OS_dispatch_queue> *mediaRemoteNotificationQueue
 @property  NSObject<OS_dispatch_queue> *mediaRemoteItemQueue
 @property  NSString *bundleID
 @property  MCDPCItem *rootItem
 @property  NSString *appTitle
 @property  {CGSize=dd} imageSize
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MCDPCModel dealloc]
  -[MCDPCModel .cxx_destruct]
  -[MCDPCModel bundleID]
  -[MCDPCModel items]
  -[MCDPCModel setItems:]
  -[MCDPCModel _registerNotifications]
  -[MCDPCModel imageSize]
  -[MCDPCModel setSelectedIndexPath:]
  -[MCDPCModel selectedIndexPath]
  -[MCDPCModel setImageSize:]
  -[MCDPCModel initWithBundleID:]
  -[MCDPCModel rootItem]
  -[MCDPCModel appTitle]
  -[MCDPCModel didFinishInitialLoad]
  -[MCDPCModel setDidFinishInitialLoad:]
  -[MCDPCModel initiatePlaybackAtIndexPath:completion:]
  -[MCDPCModel playableContentPlaybackManager]
  -[MCDPCModel isCurrentPlayingApp]
  -[MCDPCModel containerForRoot]
  -[MCDPCModel contentManager:itemDidChange:response:]
  -[MCDPCModel _registerForClientContent]
  -[MCDPCModel setCurrentPlayingApp:]
  -[MCDPCModel setSupportedAPIMask:]
  -[MCDPCModel _browsableContentDidRegisterNotification:]
  -[MCDPCModel _dataSourceInvalidated:]
  -[MCDPCModel _contentItemsUpdated:]
  -[MCDPCModel _nowPlayingDidChangeNotification:]
  -[MCDPCModel itemsFromMRContentItems:]
  -[MCDPCModel supportedAPIMask]
  -[MCDPCModel _finishBeginLoadingNotification:]
  -[MCDPCModel beginLoadingBlocks]
  -[MCDPCModel _setupBeginLoadingTimeoutTimerWithCompletion:]
  -[MCDPCModel _errorForNotification:]
  -[MCDPCModel _invalidateBeginLoadingTimeoutTimer]
  -[MCDPCModel _invalidatePlaybackProgressTimeoutTimer]
  -[MCDPCModel _setupPlaybackProgressTimeoutTimerWithCompletion:]
  -[MCDPCModel setPlaybackCompletion:]
  -[MCDPCModel _finishPlaybackNotification:]
  -[MCDPCModel playbackCompletion]
  -[MCDPCModel setBeginLoadingTimeoutTimer:]
  -[MCDPCModel beginLoadingTimeoutTimer]
  -[MCDPCModel setPlaybackProgressTimeoutTimer:]
  -[MCDPCModel playbackProgressTimeoutTimer]
  -[MCDPCModel beginLoadingItemAtIndexPath:completion:]
  -[MCDPCModel getChildrenSupportsPlaybackProgressForIndexPath:withCompletion:]
  -[MCDPCModel getNowPlayingIdentifiersWithCompletion:]
  -[MCDPCModel getCountOfChildrenAtIndexPath:withCompletion:]
  -[MCDPCModel getChildrenAtIndexPath:inRange:completion:]
  -[MCDPCModel setPlayableContentPlaybackManager:]
  -[MCDPCModel containerCompletion]
  -[MCDPCModel setContainerCompletion:]
  -[MCDPCModel setBeginLoadingBlocks:]
  -[MCDPCModel mediaRemoteNotificationQueue]
  -[MCDPCModel setMediaRemoteNotificationQueue:]
  -[MCDPCModel mediaRemoteItemQueue]
  -[MCDPCModel setMediaRemoteItemQueue:]


MCDPCItem : NSObject /usr/lib/libSystem.B.dylib
 @property  MCDPCModel *model
 @property  ^v contentItem
 @property  BOOL currentlyPlaying
 @property  UIImage *artworkImage
 @property  NSString *identifier
 @property  NSString *title
 @property  NSString *subtitle
 @property  NSData *artworkData
 @property  float playbackProgress
 @property  BOOL isPlayable
 @property  BOOL isContainer
 @property  BOOL isCloudItem
 @property  BOOL isExplicitItem

  // instance methods
  -[MCDPCItem dealloc]
  -[MCDPCItem .cxx_destruct]
  -[MCDPCItem identifier]
  -[MCDPCItem title]
  -[MCDPCItem model]
  -[MCDPCItem subtitle]
  -[MCDPCItem isPlayable]
  -[MCDPCItem isCloudItem]
  -[MCDPCItem contentItem]
  -[MCDPCItem playbackProgress]
  -[MCDPCItem isExplicitItem]
  -[MCDPCItem artworkData]
  -[MCDPCItem isContainer]
  -[MCDPCItem artworkImage]
  -[MCDPCItem setContentItem:]
  -[MCDPCItem setArtworkImage:]
  -[MCDPCItem currentlyPlaying]
  -[MCDPCItem setCurrentlyPlaying:]
  -[MCDPCItem _initWithModel:MRContentItem:]


MCDPCContainer : NSObject /usr/lib/libSystem.B.dylib
 @property  long long cachedCount
 @property  NSObject<OS_dispatch_queue> *serialAccessContainerQueue
 @property  NSMutableDictionary *cachedIndiciesByIdentifier
 @property  NSMutableDictionary *cachedItemsByIndicies
 @property  MCDPCItem *rootItem
 @property  NSIndexPath *indexPath
 @property  NSString *identifier
 @property  NSString *appTitle
 @property  NSString *title
 @property  MCDPCModel *model
 @property  BOOL showPlaybackProgress
 @property  long long showCurrentlyPlayingIndex
 @property  <MCDPCContainerDelegate> *delegate

  // instance methods
  -[MCDPCContainer dealloc]
  -[MCDPCContainer invalidate]
  -[MCDPCContainer delegate]
  -[MCDPCContainer setDelegate:]
  -[MCDPCContainer .cxx_destruct]
  -[MCDPCContainer identifier]
  -[MCDPCContainer setCount:]
  -[MCDPCContainer indexPath]
  -[MCDPCContainer title]
  -[MCDPCContainer model]
  -[MCDPCContainer cachedCount]
  -[MCDPCContainer setCachedCount:]
  -[MCDPCContainer rootItem]
  -[MCDPCContainer refreshWithCompletion:]
  -[MCDPCContainer fetchContentWithCompletion:]
  -[MCDPCContainer containerAtIndex:]
  -[MCDPCContainer appTitle]
  -[MCDPCContainer cachedItemForIndex:]
  -[MCDPCContainer showPlaybackProgress]
  -[MCDPCContainer showCurrentlyPlayingIndex]
  -[MCDPCContainer beginLoadingItem:completion:]
  -[MCDPCContainer isValidForRefreshedParent:]
  -[MCDPCContainer _contentItemsUpdated:]
  -[MCDPCContainer _initWithModel:rootItem:indexPath:]
  -[MCDPCContainer getNowPlayingIdentifiersWithCompletion:]
  -[MCDPCContainer _nowPlayingIdentifiersDidChange:]
  -[MCDPCContainer serialAccessContainerQueue]
  -[MCDPCContainer setCachedItemsByIndicies:]
  -[MCDPCContainer setCachedIndiciesByIdentifier:]
  -[MCDPCContainer cachedIndiciesByIdentifier]
  -[MCDPCContainer cachedItemsByIndicies]
  -[MCDPCContainer cachedIndexByIdentifier:]
  -[MCDPCContainer getChildrenInRange:completion:]
  -[MCDPCContainer getCountOfChildrenWithCompletion:]
  -[MCDPCContainer getPlaybackProgressSupportForChildrenWithCompletion:]
  -[MCDPCContainer beginLoadingItemWithCompletion:]
  -[MCDPCContainer containerForItem:]
  -[MCDPCContainer setShowPlaybackProgress:]
  -[MCDPCContainer updateRootItemWithCompletion:]
  -[MCDPCContainer cachedItemForIdentifier:]
  -[MCDPCContainer setSerialAccessContainerQueue:]


MCDMediaRemoteSerialQueueManager : NSObject /usr/lib/libSystem.B.dylib
 @property  NSOperationQueue *mediaRemoteSerialQueue

  // class methods
  +[MCDMediaRemoteSerialQueueManager sharedInstance]

  // instance methods
  -[MCDMediaRemoteSerialQueueManager init]
  -[MCDMediaRemoteSerialQueueManager .cxx_destruct]
  -[MCDMediaRemoteSerialQueueManager cancelAllOperations]
  -[MCDMediaRemoteSerialQueueManager addOperation:cancelAllOperations:]
  -[MCDMediaRemoteSerialQueueManager mediaRemoteSerialQueue]
  -[MCDMediaRemoteSerialQueueManager setMediaRemoteSerialQueue:]


MCDNowPlayingButtonWrapperView : UIView /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 @property  MCDNowPlayingButton *nowPlayingButton

  // instance methods
  -[MCDNowPlayingButtonWrapperView .cxx_destruct]
  -[MCDNowPlayingButtonWrapperView initWithFrame:]
  -[MCDNowPlayingButtonWrapperView nowPlayingButton]


MCDNowPlayingButton : UIButton /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer <MCDNowPlayingObserverDelegate>
 @property  double height
 @property  NSString *stateName
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MCDNowPlayingButton buttonWithHeight:]

  // instance methods
  -[MCDNowPlayingButton .cxx_destruct]
  -[MCDNowPlayingButton height]
  -[MCDNowPlayingButton setHeight:]
  -[MCDNowPlayingButton intrinsicContentSize]
  -[MCDNowPlayingButton initWithFrame:]
  -[MCDNowPlayingButton didUpdateFocusInContext:withAnimationCoordinator:]
  -[MCDNowPlayingButton canBecomeFocused]
  -[MCDNowPlayingButton setHighlighted:]
  -[MCDNowPlayingButton setStateName:]
  -[MCDNowPlayingButton stateName]
  -[MCDNowPlayingButton nowPlayingObserver:stateDidChanged:]


MCDNowPlayingButtonView : UIView /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer <CAMLParserDelegate>
 @property  NSString *stateName
 @property  BOOL highlighted
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MCDNowPlayingButtonView classSubstitions]

  // instance methods
  -[MCDNowPlayingButtonView .cxx_destruct]
  -[MCDNowPlayingButtonView traitCollectionDidChange:]
  -[MCDNowPlayingButtonView layoutSubviews]
  -[MCDNowPlayingButtonView isHighlighted]
  -[MCDNowPlayingButtonView setHighlighted:]
  -[MCDNowPlayingButtonView _updateColors]
  -[MCDNowPlayingButtonView CAMLParser:didFailToFindClassWithName:]
  -[MCDNowPlayingButtonView setStateName:]
  -[MCDNowPlayingButtonView stateName]
  -[MCDNowPlayingButtonView _handleGlyphLayerDidLoad:]
  -[MCDNowPlayingButtonView initWithCAML:]


_MCDNowPlayingContentManager : NSObject /usr/lib/libSystem.B.dylib <MPRequestResponseControllerDelegate, UITableViewDelegate, UITableViewDataSource, CARSessionObserving, MCDNowPlayingContentManagerProtocol, MCDNowPlayingViewControllerDataSource, MCDNowPlayingViewControllerDelegate>
 @property  MPRequestResponseController *requestController
 @property  UIImage *albumArtwork
 @property  MPArtworkCatalog *artworkCatalog
 @property  <MCDNowPlayingDataSource> *dataSource
 @property  NSString *bundleID
 @property  CARSessionStatus *carSessionStatus
 @property  UIAlertController *alertController
 @property  MPModelSong *currentPlayingSong
 @property  MPModelPlaylistEntry *currentPlayingPlaylistEntry
 @property  MPModelPlaylist *currentPlayingPlaylist
 @property  MPModelRadioStation *currentPlayingRadioStation
 @property  MSVTimer *artworkTimer
 @property  <MCDNowPlayingContentManagerDelegate> *delegate
 @property  MPCPlayerResponse *lastReceivedResponse
 @property  UITableView *tableView
 @property  MPCPlayerResponseItem *nowPlayingItem
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL limitedUI
 @property  Class tableCellClass
 @property  NSString *nowPlayingBundleID

  // instance methods
  -[_MCDNowPlayingContentManager dealloc]
  -[_MCDNowPlayingContentManager delegate]
  -[_MCDNowPlayingContentManager setDelegate:]
  -[_MCDNowPlayingContentManager .cxx_destruct]
  -[_MCDNowPlayingContentManager bundleID]
  -[_MCDNowPlayingContentManager setBundleID:]
  -[_MCDNowPlayingContentManager dataSource]
  -[_MCDNowPlayingContentManager setDataSource:]
  -[_MCDNowPlayingContentManager setAlertController:]
  -[_MCDNowPlayingContentManager alertController]
  -[_MCDNowPlayingContentManager tableView]
  -[_MCDNowPlayingContentManager tableView:numberOfRowsInSection:]
  -[_MCDNowPlayingContentManager tableView:cellForRowAtIndexPath:]
  -[_MCDNowPlayingContentManager numberOfSectionsInTableView:]
  -[_MCDNowPlayingContentManager tableView:canEditRowAtIndexPath:]
  -[_MCDNowPlayingContentManager tableView:canMoveRowAtIndexPath:]
  -[_MCDNowPlayingContentManager setTableView:]
  -[_MCDNowPlayingContentManager tableView:didSelectRowAtIndexPath:]
  -[_MCDNowPlayingContentManager limitedUI]
  -[_MCDNowPlayingContentManager setLimitedUI:]
  -[_MCDNowPlayingContentManager artworkCatalog]
  -[_MCDNowPlayingContentManager controller:defersResponseReplacement:]
  -[_MCDNowPlayingContentManager nowPlayingItem]
  -[_MCDNowPlayingContentManager setNowPlayingItem:]
  -[_MCDNowPlayingContentManager requestController]
  -[_MCDNowPlayingContentManager setRequestController:]
  -[_MCDNowPlayingContentManager sessionDidConnect:]
  -[_MCDNowPlayingContentManager _limitedUIChanged:]
  -[_MCDNowPlayingContentManager tableCellClass]
  -[_MCDNowPlayingContentManager lastReceivedResponse]
  -[_MCDNowPlayingContentManager setLastReceivedResponse:]
  -[_MCDNowPlayingContentManager _performRequest]
  -[_MCDNowPlayingContentManager carSessionStatus]
  -[_MCDNowPlayingContentManager _setupRequest]
  -[_MCDNowPlayingContentManager nowPlayingBundleID]
  -[_MCDNowPlayingContentManager setArtworkCatalog:]
  -[_MCDNowPlayingContentManager _showPlaceholderArtwork]
  -[_MCDNowPlayingContentManager setArtworkTimer:]
  -[_MCDNowPlayingContentManager artworkTimer]
  -[_MCDNowPlayingContentManager viewWillDisappear]
  -[_MCDNowPlayingContentManager currentPlayingSong]
  -[_MCDNowPlayingContentManager initWithDelegate:dataSource:bundleID:]
  -[_MCDNowPlayingContentManager beginRequestObservation]
  -[_MCDNowPlayingContentManager endRequestObservation]
  -[_MCDNowPlayingContentManager setCarSessionStatus:]
  -[_MCDNowPlayingContentManager _shouldShowPlaybackQueueForItemCount:]
  -[_MCDNowPlayingContentManager setCurrentPlayingPlaylist:]
  -[_MCDNowPlayingContentManager setCurrentPlayingRadioStation:]
  -[_MCDNowPlayingContentManager setCurrentPlayingSong:]
  -[_MCDNowPlayingContentManager processArtworkForCurrentlyPlayingSong]
  -[_MCDNowPlayingContentManager setCurrentPlayingPlaylistEntry:]
  -[_MCDNowPlayingContentManager _processResponse:error:]
  -[_MCDNowPlayingContentManager setAlbumArtwork:]
  -[_MCDNowPlayingContentManager albumArtwork]
  -[_MCDNowPlayingContentManager _performChangeRequest:]
  -[_MCDNowPlayingContentManager nowPlayingViewControllerGetPlaybackRate:]
  -[_MCDNowPlayingContentManager currentPlayingPlaylistEntry]
  -[_MCDNowPlayingContentManager currentPlayingPlaylist]
  -[_MCDNowPlayingContentManager currentPlayingRadioStation]
  -[_MCDNowPlayingContentManager setTableCellClass:]
  -[_MCDNowPlayingContentManager artistTextForNowPlayingController:]
  -[_MCDNowPlayingContentManager albumTextForNowPlayingController:]
  -[_MCDNowPlayingContentManager titleForNowPlayingController:]
  -[_MCDNowPlayingContentManager backgroundArtForNowPlayingController:]
  -[_MCDNowPlayingContentManager nowPlayingViewControllerIsShowingExplicitTrack:]
  -[_MCDNowPlayingContentManager durationSnapshotForNowPlayingViewController:]
  -[_MCDNowPlayingContentManager nowPlayingViewControllerIsPlaying:]
  -[_MCDNowPlayingContentManager shuffleTypeForNowPlayingViewController:]
  -[_MCDNowPlayingContentManager repeatTypeForNowPlayingViewController:]
  -[_MCDNowPlayingContentManager nowPlayingViewControllerCanShuffle:]
  -[_MCDNowPlayingContentManager nowPlayingViewControllerToggleShuffle:]
  -[_MCDNowPlayingContentManager nowPlayingViewControllerCanRepeat:]
  -[_MCDNowPlayingContentManager nowPlayingViewControllerToggleRepeat:]
  -[_MCDNowPlayingContentManager nowPlayingViewControllerCanShowChangePlaybackRate:]
  -[_MCDNowPlayingContentManager nowPlayingViewControllerChangePlaybackRate:]
  -[_MCDNowPlayingContentManager modelResponseDidInvalidate:]


MCDPlayableContentPlaybackManager : _MCDNowPlayingContentManager <MPRequestResponseControllerDelegate, UITableViewDelegate, UITableViewDataSource>
 @property  BOOL seeking
 @property  MCDPCModel *model
 @property  long long playingItemIndex
 @property  long long totalItemCount
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MCDPlayableContentPlaybackManager .cxx_destruct]
  -[MCDPlayableContentPlaybackManager model]
  -[MCDPlayableContentPlaybackManager setModel:]
  -[MCDPlayableContentPlaybackManager tableView:numberOfRowsInSection:]
  -[MCDPlayableContentPlaybackManager tableView:cellForRowAtIndexPath:]
  -[MCDPlayableContentPlaybackManager tableView:didSelectRowAtIndexPath:]
  -[MCDPlayableContentPlaybackManager totalItemCount]
  -[MCDPlayableContentPlaybackManager _itemAtIndexPath:]
  -[MCDPlayableContentPlaybackManager isSeeking]
  -[MCDPlayableContentPlaybackManager setSeeking:]
  -[MCDPlayableContentPlaybackManager setTotalItemCount:]
  -[MCDPlayableContentPlaybackManager initWithDelegate:dataSource:bundleID:]
  -[MCDPlayableContentPlaybackManager _processResponse:error:]
  -[MCDPlayableContentPlaybackManager nowPlayingViewController:shouldDisplayButton:withImage:existingIdentifier:tinted:]
  -[MCDPlayableContentPlaybackManager nowPlayingViewController:buttonShouldBeActive:]
  -[MCDPlayableContentPlaybackManager nowPlayingViewController:didSendAction:state:]
  -[MCDPlayableContentPlaybackManager nowPlayingViewControllerCanShowAddToLibrary:]
  -[MCDPlayableContentPlaybackManager nowPlayingViewControllerAddToLibrary:]
  -[MCDPlayableContentPlaybackManager nowPlayingViewControllerCanShowMore:]
  -[MCDPlayableContentPlaybackManager nowPlayingViewControllerMore:]
  -[MCDPlayableContentPlaybackManager _numberOfItemsInPlaybackQueue]
  -[MCDPlayableContentPlaybackManager _updateTrackQueueIndex]
  -[MCDPlayableContentPlaybackManager playingItemIndex]
  -[MCDPlayableContentPlaybackManager _adjustedIndexPathForPlaybackQueue:]
  -[MCDPlayableContentPlaybackManager _jumpBackwardInterval]
  -[MCDPlayableContentPlaybackManager _skipIntervalButtonImageForInterval:size:]
  -[MCDPlayableContentPlaybackManager _jumpForwardInterval]
  -[MCDPlayableContentPlaybackManager _handleHamburgerActionSheet]
  -[MCDPlayableContentPlaybackManager _alertActionForFeedbackCommand:fallbackTitle:]
  -[MCDPlayableContentPlaybackManager setPlayingItemIndex:]


MCDNowPlayingObserver : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *bundleIdentifier
 @property  unsigned int playbackState

  // class methods
  +[MCDNowPlayingObserver sharedInstance]

  // instance methods
  -[MCDNowPlayingObserver init]
  -[MCDNowPlayingObserver dealloc]
  -[MCDNowPlayingObserver .cxx_destruct]
  -[MCDNowPlayingObserver bundleIdentifier]
  -[MCDNowPlayingObserver addObserver:]
  -[MCDNowPlayingObserver removeObserver:]
  -[MCDNowPlayingObserver setBundleIdentifier:]
  -[MCDNowPlayingObserver playbackState]
  -[MCDNowPlayingObserver setPlaybackState:]
  -[MCDNowPlayingObserver _notifyObservers]
  -[MCDNowPlayingObserver queryPlaybackState]
  -[MCDNowPlayingObserver playbackStateChanged:]


MCDPlayableContentTableViewCell : UITableViewCell /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 @property  UIView *playbackProgressView
 @property  UIImageView *artworkImageView
 @property  UIImageView *explicitItemView
 @property  UIActivityIndicatorView *activityIndicatorView
 @property  BOOL showExplicit
 @property  BOOL showCloud
 @property  BOOL showActivityIndicator
 @property  double playbackProgress
 @property  BOOL shouldShowPlaybackProgress
 @property  BOOL container
 @property  UIImage *artwork
 @property  BOOL currentlyPlaying

  // class methods
  +[MCDPlayableContentTableViewCell reuseIdentifier]

  // instance methods
  -[MCDPlayableContentTableViewCell container]
  -[MCDPlayableContentTableViewCell setContainer:]
  -[MCDPlayableContentTableViewCell .cxx_destruct]
  -[MCDPlayableContentTableViewCell traitCollectionDidChange:]
  -[MCDPlayableContentTableViewCell didUpdateFocusInContext:withAnimationCoordinator:]
  -[MCDPlayableContentTableViewCell layoutSubviews]
  -[MCDPlayableContentTableViewCell initWithStyle:reuseIdentifier:]
  -[MCDPlayableContentTableViewCell setHighlighted:animated:]
  -[MCDPlayableContentTableViewCell activityIndicatorView]
  -[MCDPlayableContentTableViewCell setActivityIndicatorView:]
  -[MCDPlayableContentTableViewCell setShowActivityIndicator:]
  -[MCDPlayableContentTableViewCell artwork]
  -[MCDPlayableContentTableViewCell setArtwork:]
  -[MCDPlayableContentTableViewCell showActivityIndicator]
  -[MCDPlayableContentTableViewCell artworkImageView]
  -[MCDPlayableContentTableViewCell playbackProgress]
  -[MCDPlayableContentTableViewCell setPlaybackProgress:]
  -[MCDPlayableContentTableViewCell playbackProgressView]
  -[MCDPlayableContentTableViewCell setPlaybackProgressView:]
  -[MCDPlayableContentTableViewCell setShowExplicit:]
  -[MCDPlayableContentTableViewCell setShowCloud:]
  -[MCDPlayableContentTableViewCell setShouldShowPlaybackProgress:]
  -[MCDPlayableContentTableViewCell currentlyPlaying]
  -[MCDPlayableContentTableViewCell setCurrentlyPlaying:]
  -[MCDPlayableContentTableViewCell _setCloudAccessoryView:]
  -[MCDPlayableContentTableViewCell explicitItemView]
  -[MCDPlayableContentTableViewCell setExplicitItemView:]
  -[MCDPlayableContentTableViewCell isShowCloud]
  -[MCDPlayableContentTableViewCell setArtworkImageView:]
  -[MCDPlayableContentTableViewCell _updatePlayingArtworkIfNeeded]
  -[MCDPlayableContentTableViewCell shouldShowPlaybackProgress]
  -[MCDPlayableContentTableViewCell isShowExplicit]
  -[MCDPlayableContentTableViewCell _setExplicitView:]


MCDNoContentView : UIView /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
  // instance methods
  -[MCDNoContentView initWithFrame:]
  -[MCDNoContentView initWithTitle:subtitle:]


MCDLoadingContentView : UIView /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
  // instance methods
  -[MCDLoadingContentView initWithFrame:]


MCDErrorLoadingView : UIView /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 @property  <MCDErrorViewDelegate> *delegate
 @property  BOOL shouldEnableNetwork

  // instance methods
  -[MCDErrorLoadingView delegate]
  -[MCDErrorLoadingView setDelegate:]
  -[MCDErrorLoadingView .cxx_destruct]
  -[MCDErrorLoadingView initWithTitle:buttonText:]
  -[MCDErrorLoadingView retryButtonPressed:]
  -[MCDErrorLoadingView shouldEnableNetwork]
  -[MCDErrorLoadingView setShouldEnableNetwork:]


MCDGlyph : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[MCDGlyph nowPlayingEllipsis]
  +[MCDGlyph nowPlayingShuffle]
  +[MCDGlyph nowPlayingAdd]
  +[MCDGlyph nowPlayingPauseWithSize:]
  +[MCDGlyph nowPlayingBackWithSize:]
  +[MCDGlyph nowPlayingForwardWithSize:]
  +[MCDGlyph imageNamed:ofSize:]
  +[MCDGlyph playbackProgressCompleteWithSize:]
  +[MCDGlyph glyphFactory:pointSize:weight:scale:]
  +[MCDGlyph nowPlayingRepeat]
  +[MCDGlyph nowPlayingRepeatOne]


MCDBrowsableContentNavigationController : UITabBarController /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer <UITabBarControllerDelegate, MCDPCContainerDelegate>
 @property  UITabBarController *tabBarController
 @property  UITabBarController *hostTabBarController
 @property  MCDPCModel *model
 @property  NSString *bundleID
 @property  MCDNowPlayingButtonWrapperView *nowPlayingButtonView
 @property  BOOL hasCarScreen
 @property  MCDPCContainer *container
 @property  BOOL didFinishInitialLoad
 @property  BOOL didFinishInitialViewAppear
 @property  BOOL visible
 @property  BOOL hasInvalidatedDummyTabs
 @property  NSObject<OS_dispatch_queue> *serialQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MCDBrowsableContentNavigationController container]
  -[MCDBrowsableContentNavigationController setContainer:]
  -[MCDBrowsableContentNavigationController .cxx_destruct]
  -[MCDBrowsableContentNavigationController bundleID]
  -[MCDBrowsableContentNavigationController setBundleID:]
  -[MCDBrowsableContentNavigationController serialQueue]
  -[MCDBrowsableContentNavigationController model]
  -[MCDBrowsableContentNavigationController setModel:]
  -[MCDBrowsableContentNavigationController visible]
  -[MCDBrowsableContentNavigationController setVisible:]
  -[MCDBrowsableContentNavigationController traitCollectionDidChange:]
  -[MCDBrowsableContentNavigationController viewWillAppear:]
  -[MCDBrowsableContentNavigationController viewWillDisappear:]
  -[MCDBrowsableContentNavigationController viewDidAppear:]
  -[MCDBrowsableContentNavigationController tabBarController]
  -[MCDBrowsableContentNavigationController tabBarController:didSelectViewController:]
  -[MCDBrowsableContentNavigationController setSerialQueue:]
  -[MCDBrowsableContentNavigationController didFinishInitialLoad]
  -[MCDBrowsableContentNavigationController setDidFinishInitialLoad:]
  -[MCDBrowsableContentNavigationController _nowPlayingDidChange:]
  -[MCDBrowsableContentNavigationController _appRegisteredForContent:]
  -[MCDBrowsableContentNavigationController _updateNowPlayingButtonVisibility]
  -[MCDBrowsableContentNavigationController setDidFinishInitialViewAppear:]
  -[MCDBrowsableContentNavigationController _nowPlayingButtonTapped:]
  -[MCDBrowsableContentNavigationController container:didInvalidateIndicies:]
  -[MCDBrowsableContentNavigationController didFinishInitialViewAppear]
  -[MCDBrowsableContentNavigationController initWithBundleID:model:]
  -[MCDBrowsableContentNavigationController invalidateAndReloadTabsWithCompletion:]
  -[MCDBrowsableContentNavigationController _loadAllHostTabs]
  -[MCDBrowsableContentNavigationController updateTitleAndTabBarItemsAtIndexes:]
  -[MCDBrowsableContentNavigationController hasInvalidatedDummyTabs]
  -[MCDBrowsableContentNavigationController setHasInvalidatedDummyTabs:]
  -[MCDBrowsableContentNavigationController _hostTabAtIndex:dummyTab:]
  -[MCDBrowsableContentNavigationController _tabBarItemForViewController:fromItem:]
  -[MCDBrowsableContentNavigationController setHasCarScreen:]
  -[MCDBrowsableContentNavigationController setTabBarController:]
  -[MCDBrowsableContentNavigationController hostTabBarController]
  -[MCDBrowsableContentNavigationController setHostTabBarController:]
  -[MCDBrowsableContentNavigationController nowPlayingButtonView]
  -[MCDBrowsableContentNavigationController setNowPlayingButtonView:]
  -[MCDBrowsableContentNavigationController hasCarScreen]


MCDShadowImageView : UIView /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 @property  UIImageView *imageView
 @property  UIImage *image

  // instance methods
  -[MCDShadowImageView .cxx_destruct]
  -[MCDShadowImageView image]
  -[MCDShadowImageView setImage:]
  -[MCDShadowImageView initWithFrame:]
  -[MCDShadowImageView setContentMode:]
  -[MCDShadowImageView imageView]
  -[MCDShadowImageView contentMode]
  -[MCDShadowImageView setupConstraints]
  -[MCDShadowImageView setupEffects]


_MCDNowPlayingViewController : UIViewController /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 @property  MCDProgressView *progressView
 @property  UIImageView *artworkView
 @property  UITapGestureRecognizer *knobPressRecognizer
 @property  UITapGestureRecognizer *backPressRecognizer
 @property  UITapGestureRecognizer *leftNudgePressRecognizer
 @property  UITapGestureRecognizer *rightNudgePressRecognizer
 @property  UILongPressGestureRecognizer *leftNudgeLongPressRecognizer
 @property  UILongPressGestureRecognizer *rightNudgeLongPressRecognizer
 @property  UILongPressGestureRecognizer *leftButtonLongPressRecognizer
 @property  UILongPressGestureRecognizer *fastForwardButtonLongPressRecognizer
 @property  UIFocusContainerGuide *controlsFocusContainerGuide
 @property  NSString *previousTransportButtonImageIdentifier
 @property  NSString *forwardTransportButtonImageIdentifier
 @property  NSString *playPauseTransportButtonImageIdentifier
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} nowPlayingContentRect
 @property  long long layoutType
 @property  MCDShadowImageView *artworkViewBrick
 @property  NSArray *activeConstraints
 @property  MCDTransportControlView *transportControlView
 @property  MCDPlayModeControlView *playModeControlView
 @property  MCDSongDetailsView *songDetailsView
 @property  <MCDNowPlayingViewControllerDelegate> *delegate
 @property  <MCDNowPlayingViewControllerDataSource> *dataSource
 @property  BOOL albumArtAllowed

  // instance methods
  -[_MCDNowPlayingViewController delegate]
  -[_MCDNowPlayingViewController setDelegate:]
  -[_MCDNowPlayingViewController .cxx_destruct]
  -[_MCDNowPlayingViewController dataSource]
  -[_MCDNowPlayingViewController setDataSource:]
  -[_MCDNowPlayingViewController loadView]
  -[_MCDNowPlayingViewController traitCollectionDidChange:]
  -[_MCDNowPlayingViewController initWithNibName:bundle:]
  -[_MCDNowPlayingViewController viewWillAppear:]
  -[_MCDNowPlayingViewController viewWillDisappear:]
  -[_MCDNowPlayingViewController pressesBegan:withEvent:]
  -[_MCDNowPlayingViewController pressesChanged:withEvent:]
  -[_MCDNowPlayingViewController pressesEnded:withEvent:]
  -[_MCDNowPlayingViewController pressesCancelled:withEvent:]
  -[_MCDNowPlayingViewController reloadData]
  -[_MCDNowPlayingViewController viewDidLayoutSubviews]
  -[_MCDNowPlayingViewController viewDidAppear:]
  -[_MCDNowPlayingViewController viewDidDisappear:]
  -[_MCDNowPlayingViewController updateViewConstraints]
  -[_MCDNowPlayingViewController activeConstraints]
  -[_MCDNowPlayingViewController setActiveConstraints:]
  -[_MCDNowPlayingViewController progressView]
  -[_MCDNowPlayingViewController layoutType]
  -[_MCDNowPlayingViewController setLayoutType:]
  -[_MCDNowPlayingViewController isCompactHeight]
  -[_MCDNowPlayingViewController artworkView]
  -[_MCDNowPlayingViewController isCompactWidth]
  -[_MCDNowPlayingViewController setAlbumArtAllowed:]
  -[_MCDNowPlayingViewController songDetailsView]
  -[_MCDNowPlayingViewController _handleWillAppear]
  -[_MCDNowPlayingViewController transportControlView]
  -[_MCDNowPlayingViewController updateLayoutStyle]
  -[_MCDNowPlayingViewController _repeatButtonTouchUp:]
  -[_MCDNowPlayingViewController _shuffleButtonTouchUp:]
  -[_MCDNowPlayingViewController _moreButtonTouchUp:]
  -[_MCDNowPlayingViewController _addToLibraryButtonTouchUp:]
  -[_MCDNowPlayingViewController _playbackButtonTouchUp:]
  -[_MCDNowPlayingViewController _leftNudgePress:]
  -[_MCDNowPlayingViewController setLeftNudgePressRecognizer:]
  -[_MCDNowPlayingViewController leftNudgePressRecognizer]
  -[_MCDNowPlayingViewController _rightNudgePress:]
  -[_MCDNowPlayingViewController setRightNudgePressRecognizer:]
  -[_MCDNowPlayingViewController rightNudgePressRecognizer]
  -[_MCDNowPlayingViewController _leftButtonLongPress:]
  -[_MCDNowPlayingViewController setLeftNudgeLongPressRecognizer:]
  -[_MCDNowPlayingViewController leftNudgeLongPressRecognizer]
  -[_MCDNowPlayingViewController _fastForwardButtonLongPress:]
  -[_MCDNowPlayingViewController setRightNudgeLongPressRecognizer:]
  -[_MCDNowPlayingViewController rightNudgeLongPressRecognizer]
  -[_MCDNowPlayingViewController controlsFocusContainerGuide]
  -[_MCDNowPlayingViewController _updateBackgroundEffect]
  -[_MCDNowPlayingViewController _initializeTransportControls]
  -[_MCDNowPlayingViewController _recalculateLayout:]
  -[_MCDNowPlayingViewController _showsButtonSelectionsForTouch]
  -[_MCDNowPlayingViewController constraintsForLayoutType:]
  -[_MCDNowPlayingViewController artworkViewBrick]
  -[_MCDNowPlayingViewController updatePlayControls]
  -[_MCDNowPlayingViewController _artBrickScale]
  -[_MCDNowPlayingViewController _updateTransportControl:withDefaultImage:actionType:]
  -[_MCDNowPlayingViewController _updatePlayModesState]
  -[_MCDNowPlayingViewController _updateShuffleStateWithType:]
  -[_MCDNowPlayingViewController _updateRepeatStateWithType:]
  -[_MCDNowPlayingViewController _updatePlaybackRate]
  -[_MCDNowPlayingViewController _sendAction:withState:]
  -[_MCDNowPlayingViewController _respondToHeldAction]
  -[_MCDNowPlayingViewController _sendHeldAction]
  -[_MCDNowPlayingViewController _playPauseButtonTouchDown:]
  -[_MCDNowPlayingViewController _playPauseButtonTouchUp:]
  -[_MCDNowPlayingViewController _leftButtonTouchDown:]
  -[_MCDNowPlayingViewController _leftButtonTouchUp:]
  -[_MCDNowPlayingViewController _fastForwardButtonTouchDown:]
  -[_MCDNowPlayingViewController _fastForwardButtonTouchUp:]
  -[_MCDNowPlayingViewController setLeftButtonLongPressRecognizer:]
  -[_MCDNowPlayingViewController leftButtonLongPressRecognizer]
  -[_MCDNowPlayingViewController setFastForwardButtonLongPressRecognizer:]
  -[_MCDNowPlayingViewController fastForwardButtonLongPressRecognizer]
  -[_MCDNowPlayingViewController updateLayoutStyle:]
  -[_MCDNowPlayingViewController isAlbumArtAllowed]
  -[_MCDNowPlayingViewController playModeControlView]
  -[_MCDNowPlayingViewController setNowPlayingLayout:forceChange:]
  -[_MCDNowPlayingViewController nowPlayingContentRect]
  -[_MCDNowPlayingViewController layoutStyleDidChange]
  -[_MCDNowPlayingViewController _invalidateConstraintCache]
  -[_MCDNowPlayingViewController _didUpdateSupportedCommandsNotification:]
  -[_MCDNowPlayingViewController knobPressRecognizer]
  -[_MCDNowPlayingViewController backPressRecognizer]
  -[_MCDNowPlayingViewController setControlsFocusContainerGuide:]
  -[_MCDNowPlayingViewController previousTransportButtonImageIdentifier]
  -[_MCDNowPlayingViewController setPreviousTransportButtonImageIdentifier:]
  -[_MCDNowPlayingViewController forwardTransportButtonImageIdentifier]
  -[_MCDNowPlayingViewController setForwardTransportButtonImageIdentifier:]
  -[_MCDNowPlayingViewController playPauseTransportButtonImageIdentifier]
  -[_MCDNowPlayingViewController setPlayPauseTransportButtonImageIdentifier:]
  -[_MCDNowPlayingViewController setNowPlayingContentRect:]


_MCDNowPlayingHostView : UIView /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 @property  NSArray *responderViews

  // instance methods
  -[_MCDNowPlayingHostView .cxx_destruct]
  -[_MCDNowPlayingHostView setResponderViews:]
  -[_MCDNowPlayingHostView responderViews]


MCDRepeatButton : MCDPlayModeButton
 @property  UIImage *repeatImage
 @property  UIImage *repeatOneImage

  // instance methods
  -[MCDRepeatButton .cxx_destruct]
  -[MCDRepeatButton initWithFrame:]
  -[MCDRepeatButton setRepeatType:]
  -[MCDRepeatButton repeatOneImage]
  -[MCDRepeatButton repeatImage]
  -[MCDRepeatButton setRepeatImage:]
  -[MCDRepeatButton setRepeatOneImage:]


MCDSongDetailsView : UIView /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 @property  UIStackView *stackView
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} infoRect
 @property  BOOL isCompactHeight
 @property  unsigned long fontStyle
 @property  MCDTitleView *titleView
 @property  UILabel *artistLabel
 @property  MCDLabelButton *albumArtistLabelButton
 @property  NSString *trackTitle
 @property  NSString *albumTitle
 @property  NSString *artistName

  // instance methods
  -[MCDSongDetailsView .cxx_destruct]
  -[MCDSongDetailsView initWithFrame:]
  -[MCDSongDetailsView layoutSubviews]
  -[MCDSongDetailsView _preferredHeight]
  -[MCDSongDetailsView stackView]
  -[MCDSongDetailsView titleView]
  -[MCDSongDetailsView setFontStyle:]
  -[MCDSongDetailsView setStackView:]
  -[MCDSongDetailsView fontStyle]
  -[MCDSongDetailsView artistName]
  -[MCDSongDetailsView setArtistName:]
  -[MCDSongDetailsView albumTitle]
  -[MCDSongDetailsView _updateFont]
  -[MCDSongDetailsView setAlbumTitle:]
  -[MCDSongDetailsView isCompactHeight]
  -[MCDSongDetailsView albumArtistLabelButton]
  -[MCDSongDetailsView setTrackTitle:]
  -[MCDSongDetailsView infoRect]
  -[MCDSongDetailsView setInfoRect:]
  -[MCDSongDetailsView setIsCompactHeight:]
  -[MCDSongDetailsView _updateNumberOfLines]
  -[MCDSongDetailsView artistLabel]
  -[MCDSongDetailsView setArtistLabel:]
  -[MCDSongDetailsView trackTitle]


MCDPlayableContentQueueTableViewController : UITableViewController /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 @property  MCDPlayableContentPlaybackManager *contentManager

  // instance methods
  -[MCDPlayableContentQueueTableViewController .cxx_destruct]
  -[MCDPlayableContentQueueTableViewController viewDidLoad]
  -[MCDPlayableContentQueueTableViewController contentManager]
  -[MCDPlayableContentQueueTableViewController setContentManager:]
  -[MCDPlayableContentQueueTableViewController initWithContentManager:]


MCDAlertController : UIAlertController /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
  // instance methods
  -[MCDAlertController .cxx_destruct]
  -[MCDAlertController viewDidAppear:]
  -[MCDAlertController viewDidDisappear:]


MPMediaItem(CarDisplay)
	// instance methods
	-[MPMediaItem(CarDisplay) albumImageWithFallbackForSize:doubleLineRow:]

UIImage(CarDisplay)
	// instance methods
	-[UIImage(CarDisplay) car_scaledImageWithSize:]
	-[UIImage(CarDisplay) setMCD_identifier:]
	-[UIImage(CarDisplay) MCD_identifier]

CALayer(MCDAdditions)
	// instance methods
	-[CALayer(MCDAdditions) mcd_enumerateSublayersWithBlock:]
	-[CALayer(MCDAdditions) mcd_startAnimating]

01 00 0600 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVTimeFormatter 
01 00 0a00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAFilter 
01 00 0a00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CALayer 
01 00 0a00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMLParser 
01 00 0100 /System/Library/PrivateFrameworks/CarKit.framework/CarKit: CARSessionStatus 
01 00 0a00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAShapeLayer 
01 00 0a00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAState 
01 00 0a00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAStateAddAnimation 
01 00 0a00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAStateAddElement 
01 00 0a00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAStateController 
01 00 0a00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAStateElement 
01 00 0a00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAStateRemoveAnimation 
01 00 0a00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAStateRemoveElement 
01 00 0a00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAStateSetValue 
01 00 0a00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAStateTransition 
01 00 0a00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAStateTransitionElement 
01 00 0a00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransaction 
01 00 0200 /System/Library/PrivateFrameworks/iTunesCloud.framework/iTunesCloud: ICAgeVerificationManager 
01 00 1800 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationProxy 
01 00 0300 /System/Library/PrivateFrameworks/MediaPlaybackCore.framework/MediaPlaybackCore: MPCPlayerChangeRequest 
01 00 0300 /System/Library/PrivateFrameworks/MediaPlaybackCore.framework/MediaPlaybackCore: MPCPlayerPath 
01 00 0300 /System/Library/PrivateFrameworks/MediaPlaybackCore.framework/MediaPlaybackCore: MPCPlayerRequest 
01 00 1200 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPMediaItem 
01 00 1200 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPNetworkObserver 
01 00 1200 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPPropertySet 
01 00 1200 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPRequestResponseController 
01 00 1200 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPWeakTimer 
01 00 0400 /System/Library/PrivateFrameworks/MediaServices.framework/MediaServices: MSVTimer 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSBlockOperation 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSDistributedNotificationCenter 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexPath 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSLayoutConstraint 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotification 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 1500 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivityIndicatorView 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertAction 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertController 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIBarButtonItem 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIBezierPath 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIButton 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIFocusContainerGuide 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIFontDescriptor 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageSymbolConfiguration 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UILabel 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UILayoutGuide 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UILongPressGestureRecognizer 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationController 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIStackView 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UITabBarController 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UITabBarItem 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UITableView 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewCell 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewController 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UITapGestureRecognizer 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UITraitCollection 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: _UIFilteredDataSource 
