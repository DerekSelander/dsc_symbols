|| __DATA.__objc_data _OBJC_CLASS_$_NRActiveDeviceAssertion
|| __DATA.__objc_data _OBJC_CLASS_$_NRActiveDeviceAssertionMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_NRBypassQueue
|| __DATA.__objc_data _OBJC_CLASS_$_NRConnectivitySubscriber
|| __DATA.__objc_data _OBJC_CLASS_$_NRDataFileHistoryHelpers
|| __DATA.__objc_data _OBJC_CLASS_$_NRDataFilePaths
|| __DATA.__objc_data _OBJC_CLASS_$_NRDevice
|| __DATA.__objc_data _OBJC_CLASS_$_NRDeviceCollectionHistoryEntry
|| __DATA.__objc_data _OBJC_CLASS_$_NRDeviceDiff
|| __DATA.__objc_data _OBJC_CLASS_$_NRDeviceDiffType
|| __DATA.__objc_data _OBJC_CLASS_$_NRDeviceDiscoveryController
|| __DATA.__objc_data _OBJC_CLASS_$_NRDevicePropertyDiff
|| __DATA.__objc_data _OBJC_CLASS_$_NRDevicePropertyDiffType
|| __DATA.__objc_data _OBJC_CLASS_$_NRKeyedUnarchiver
|| __DATA.__objc_data _OBJC_CLASS_$_NRMagicSwitchHelper
|| __DATA.__objc_data _OBJC_CLASS_$_NRMigrator
|| __DATA.__objc_data _OBJC_CLASS_$_NRMockClientNSXPCConnection
|| __DATA.__objc_data _OBJC_CLASS_$_NRMockNSXPCListener
|| __DATA.__objc_data _OBJC_CLASS_$_NRMockRegistryClient
|| __DATA.__objc_data _OBJC_CLASS_$_NRMockServerNSXPCConnection
|| __DATA.__objc_data _OBJC_CLASS_$_NRMutableDevice
|| __DATA.__objc_data _OBJC_CLASS_$_NRNSXPCListener
|| __DATA.__objc_data _OBJC_CLASS_$_NRPBCompressedData
|| __DATA.__objc_data _OBJC_CLASS_$_NRPBDeviceCollectionDiff
|| __DATA.__objc_data _OBJC_CLASS_$_NRPBDeviceCollectionHistory
|| __DATA.__objc_data _OBJC_CLASS_$_NRPBDeviceCollectionHistoryEntry
|| __DATA.__objc_data _OBJC_CLASS_$_NRPBDeviceDiff
|| __DATA.__objc_data _OBJC_CLASS_$_NRPBDeviceDiffType
|| __DATA.__objc_data _OBJC_CLASS_$_NRPBDevicePropertyDiff
|| __DATA.__objc_data _OBJC_CLASS_$_NRPBDevicePropertyDiffType
|| __DATA.__objc_data _OBJC_CLASS_$_NRPBMigrationDeviceInfo
|| __DATA.__objc_data _OBJC_CLASS_$_NRPBMigrationDevices
|| __DATA.__objc_data _OBJC_CLASS_$_NRPBMutableDevice
|| __DATA.__objc_data _OBJC_CLASS_$_NRPBMutableDeviceProperty
|| __DATA.__objc_data _OBJC_CLASS_$_NRPBNumber
|| __DATA.__objc_data _OBJC_CLASS_$_NRPBProperty
|| __DATA.__objc_data _OBJC_CLASS_$_NRPBPropertyValue
|| __DATA.__objc_data _OBJC_CLASS_$_NRPBSize
|| __DATA.__objc_data _OBJC_CLASS_$_NRPBSwitchRecord
|| __DATA.__objc_data _OBJC_CLASS_$_NRPBSwitchRecordCollection
|| __DATA.__objc_data _OBJC_CLASS_$_NRPBTermsEvent
|| __DATA.__objc_data _OBJC_CLASS_$_NRPairingCompatibilityVersionInfo
|| __DATA.__objc_data _OBJC_CLASS_$_NRRegistryHistoryStore
|| __DATA.__objc_data _OBJC_CLASS_$_NRServerRequestReporter
|| __DATA.__objc_data _OBJC_CLASS_$_NRSystemVersionRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NRTermsAcknowledgementRegistry
|| __DATA.__objc_data _OBJC_CLASS_$_NRTermsEvent
|| __DATA.__objc_data _OBJC_CLASS_$_NRTextFormattingUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_NRUnarchivedObjectVerifier
|| __DATA.__objc_data _OBJC_METACLASS_$_NRActiveDeviceAssertion
|| __DATA.__objc_data _OBJC_METACLASS_$_NRActiveDeviceAssertionMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_NRBypassQueue
|| __DATA.__objc_data _OBJC_METACLASS_$_NRConnectivitySubscriber
|| __DATA.__objc_data _OBJC_METACLASS_$_NRDataFileHistoryHelpers
|| __DATA.__objc_data _OBJC_METACLASS_$_NRDataFilePaths
|| __DATA.__objc_data _OBJC_METACLASS_$_NRDevice
|| __DATA.__objc_data _OBJC_METACLASS_$_NRDeviceCollectionHistoryEntry
|| __DATA.__objc_data _OBJC_METACLASS_$_NRDeviceDiff
|| __DATA.__objc_data _OBJC_METACLASS_$_NRDeviceDiffType
|| __DATA.__objc_data _OBJC_METACLASS_$_NRDeviceDiscoveryController
|| __DATA.__objc_data _OBJC_METACLASS_$_NRDevicePropertyDiff
|| __DATA.__objc_data _OBJC_METACLASS_$_NRDevicePropertyDiffType
|| __DATA.__objc_data _OBJC_METACLASS_$_NRKeyedUnarchiver
|| __DATA.__objc_data _OBJC_METACLASS_$_NRMagicSwitchHelper
|| __DATA.__objc_data _OBJC_METACLASS_$_NRMigrator
|| __DATA.__objc_data _OBJC_METACLASS_$_NRMockClientNSXPCConnection
|| __DATA.__objc_data _OBJC_METACLASS_$_NRMockNSXPCListener
|| __DATA.__objc_data _OBJC_METACLASS_$_NRMockRegistryClient
|| __DATA.__objc_data _OBJC_METACLASS_$_NRMockServerNSXPCConnection
|| __DATA.__objc_data _OBJC_METACLASS_$_NRMutableDevice
|| __DATA.__objc_data _OBJC_METACLASS_$_NRNSXPCListener
|| __DATA.__objc_data _OBJC_METACLASS_$_NRPBCompressedData
|| __DATA.__objc_data _OBJC_METACLASS_$_NRPBDeviceCollectionDiff
|| __DATA.__objc_data _OBJC_METACLASS_$_NRPBDeviceCollectionHistory
|| __DATA.__objc_data _OBJC_METACLASS_$_NRPBDeviceCollectionHistoryEntry
|| __DATA.__objc_data _OBJC_METACLASS_$_NRPBDeviceDiff
|| __DATA.__objc_data _OBJC_METACLASS_$_NRPBDeviceDiffType
|| __DATA.__objc_data _OBJC_METACLASS_$_NRPBDevicePropertyDiff
|| __DATA.__objc_data _OBJC_METACLASS_$_NRPBDevicePropertyDiffType
|| __DATA.__objc_data _OBJC_METACLASS_$_NRPBMigrationDeviceInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_NRPBMigrationDevices
|| __DATA.__objc_data _OBJC_METACLASS_$_NRPBMutableDevice
|| __DATA.__objc_data _OBJC_METACLASS_$_NRPBMutableDeviceProperty
|| __DATA.__objc_data _OBJC_METACLASS_$_NRPBNumber
|| __DATA.__objc_data _OBJC_METACLASS_$_NRPBProperty
|| __DATA.__objc_data _OBJC_METACLASS_$_NRPBPropertyValue
|| __DATA.__objc_data _OBJC_METACLASS_$_NRPBSize
|| __DATA.__objc_data _OBJC_METACLASS_$_NRPBSwitchRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_NRPBSwitchRecordCollection
|| __DATA.__objc_data _OBJC_METACLASS_$_NRPBTermsEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_NRPairingCompatibilityVersionInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_NRRegistryHistoryStore
|| __DATA.__objc_data _OBJC_METACLASS_$_NRServerRequestReporter
|| __DATA.__objc_data _OBJC_METACLASS_$_NRSystemVersionRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NRTermsAcknowledgementRegistry
|| __DATA.__objc_data _OBJC_METACLASS_$_NRTermsEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_NRTextFormattingUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_NRUnarchivedObjectVerifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBCompressedData._compressed
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBCompressedData._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBCompressedData._possiblyCompressedData
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBDeviceCollectionDiff._diffs
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBDeviceCollectionDiff._pairingIDs
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBDeviceCollectionHistory._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBDeviceCollectionHistory._historys
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBDeviceCollectionHistory._startIndex
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBDeviceCollectionHistory._switchRecords
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBDeviceCollectionHistoryEntry._date
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBDeviceCollectionHistoryEntry._diff
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBDeviceCollectionHistoryEntry._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBDeviceCollectionHistoryEntry._index
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBDeviceDiff._diffs
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBDeviceDiff._names
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBDeviceDiffType._changeType
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBDeviceDiffType._diff
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBDeviceDiffType._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBDevicePropertyDiff._value
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBDevicePropertyDiffType._changeType
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBDevicePropertyDiffType._diff
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBDevicePropertyDiffType._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBMigrationDeviceInfo._advertisedName
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBMigrationDeviceInfo._iD
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBMigrationDeviceInfo._name
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBMigrationDevices._devices
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBMigrationDevices._phoneUDIDHash
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBMutableDevice._names
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBMutableDevice._properties
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBMutableDeviceCollection._devices
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBMutableDeviceCollection._pairingIDs
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBMutableDeviceProperty._value
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBNumber._boolValue
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBNumber._doubleValue
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBNumber._floatValue
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBNumber._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBNumber._int32Value
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBNumber._int64Value
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBNumber._isShortOrChar
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBNumber._isUnsigned
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBProperty._name
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBProperty._value
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBPropertyValue._arrayValues
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBPropertyValue._dataValue
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBPropertyValue._dictionaryKey
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBPropertyValue._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBPropertyValue._isDate
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBPropertyValue._isError
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBPropertyValue._isMiniUUIDSet
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBPropertyValue._isSecurePropertyValue
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBPropertyValue._isSet
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBPropertyValue._numberValue
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBPropertyValue._sizeValue
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBPropertyValue._stringValue
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBPropertyValue._uUIDValue
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBSize._height
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBSize._width
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBSwitchRecord._dateTimeInterval
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBSwitchRecord._deviceIDBytes
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBSwitchRecord._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBSwitchRecord._switchIndex
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBSwitchRecordCollection._records
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBTermsEvent._acknowledgedDeviceName
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBTermsEvent._acknowledgedDeviceSerialNumber
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBTermsEvent._displayDeviceName
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBTermsEvent._displayDeviceSerialNumber
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBTermsEvent._documentationID
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBTermsEvent._eventDate
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBTermsEvent._eventType
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBTermsEvent._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBTermsEvent._loggingProcessName
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBTermsEvent._presentationLocation
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBTermsEvent._presentationReason
|| __DATA.__objc_ivar _OBJC_IVAR_$_NRPBTermsEvent._termsText
|| __DATA_CONST.__const _NRArchivingDataKey
|| __DATA_CONST.__const _NRDemoModeNotifyNotification
|| __DATA_CONST.__const _NRDeviceDiscoveryControllerDidDiscoverDevice
|| __DATA_CONST.__const _NRDevicePropertyAdditionalSEIDs
|| __DATA_CONST.__const _NRDevicePropertyAdvertisedName
|| __DATA_CONST.__const _NRDevicePropertyBackgroundAtrialFibrillationManufactureDate
|| __DATA_CONST.__const _NRDevicePropertyBackgroundAtrialFibrillationReleaseYear
|| __DATA_CONST.__const _NRDevicePropertyBackgroundAtrialFibrillationUDI
|| __DATA_CONST.__const _NRDevicePropertyBackgroundAtrialFibrillationVersion
|| __DATA_CONST.__const _NRDevicePropertyBasebandRegionSKURadioTechnology
|| __DATA_CONST.__const _NRDevicePropertyBluetoothMACAddress
|| __DATA_CONST.__const _NRDevicePropertyBuildType
|| __DATA_CONST.__const _NRDevicePropertyCPUSubType
|| __DATA_CONST.__const _NRDevicePropertyCPUType
|| __DATA_CONST.__const _NRDevicePropertyCSN
|| __DATA_CONST.__const _NRDevicePropertyCellularEnabled
|| __DATA_CONST.__const _NRDevicePropertyChipID
|| __DATA_CONST.__const _NRDevicePropertyClass
|| __DATA_CONST.__const _NRDevicePropertyColor
|| __DATA_CONST.__const _NRDevicePropertyCompatibleDeviceFallback
|| __DATA_CONST.__const _NRDevicePropertyCurrentUserLocale
|| __DATA_CONST.__const _NRDevicePropertyDeviceBackingColor
|| __DATA_CONST.__const _NRDevicePropertyDeviceBrand
|| __DATA_CONST.__const _NRDevicePropertyDeviceCoverGlassColor
|| __DATA_CONST.__const _NRDevicePropertyDeviceHousingColor
|| __DATA_CONST.__const _NRDevicePropertyDeviceInDemoMode
|| __DATA_CONST.__const _NRDevicePropertyDeviceNameString
|| __DATA_CONST.__const _NRDevicePropertyDeviceSubBrand
|| __DATA_CONST.__const _NRDevicePropertyDmin
|| __DATA_CONST.__const _NRDevicePropertyElectrocardiogramManufactureDate
|| __DATA_CONST.__const _NRDevicePropertyElectrocardiogramReleaseYear
|| __DATA_CONST.__const _NRDevicePropertyElectrocardiogramUDI
|| __DATA_CONST.__const _NRDevicePropertyElectrocardiogramVersion
|| __DATA_CONST.__const _NRDevicePropertyEnclosureColor
|| __DATA_CONST.__const _NRDevicePropertyEnclosureMaterial
|| __DATA_CONST.__const _NRDevicePropertyFractionCompleted
|| __DATA_CONST.__const _NRDevicePropertyGreenTeaDevice
|| __DATA_CONST.__const _NRDevicePropertyHWModelString
|| __DATA_CONST.__const _NRDevicePropertyHasSEP
|| __DATA_CONST.__const _NRDevicePropertyHasSecureElement
|| __DATA_CONST.__const _NRDevicePropertyHomeButtonType
|| __DATA_CONST.__const _NRDevicePropertyIMEI
|| __DATA_CONST.__const _NRDevicePropertyIMEI2
|| __DATA_CONST.__const _NRDevicePropertyIsActive
|| __DATA_CONST.__const _NRDevicePropertyIsAltAccount
|| __DATA_CONST.__const _NRDevicePropertyIsArchived
|| __DATA_CONST.__const _NRDevicePropertyIsInternalInstall
|| __DATA_CONST.__const _NRDevicePropertyIsPaired
|| __DATA_CONST.__const _NRDevicePropertyLastActiveDate
|| __DATA_CONST.__const _NRDevicePropertyLastInactiveDate
|| __DATA_CONST.__const _NRDevicePropertyLocalPairingDataStorePath
|| __DATA_CONST.__const _NRDevicePropertyLocalizedModel
|| __DATA_CONST.__const _NRDevicePropertyMEID
|| __DATA_CONST.__const _NRDevicePropertyMainScreenClass
|| __DATA_CONST.__const _NRDevicePropertyMainScreenHeight
|| __DATA_CONST.__const _NRDevicePropertyMainScreenWidth
|| __DATA_CONST.__const _NRDevicePropertyMarketingProductName
|| __DATA_CONST.__const _NRDevicePropertyMarketingVersion
|| __DATA_CONST.__const _NRDevicePropertyMaxPairingCompatibilityVersion
|| __DATA_CONST.__const _NRDevicePropertyMenstrualCyclesAlgorithmsVersion
|| __DATA_CONST.__const _NRDevicePropertyMigrationConfirmed
|| __DATA_CONST.__const _NRDevicePropertyMigrationConsent
|| __DATA_CONST.__const _NRDevicePropertyMigrationConsentDate
|| __DATA_CONST.__const _NRDevicePropertyMinPairingCompatibilityVersion
|| __DATA_CONST.__const _NRDevicePropertyModelNumber
|| __DATA_CONST.__const _NRDevicePropertyName
|| __DATA_CONST.__const _NRDevicePropertyOxygenSaturationAvailableRegions
|| __DATA_CONST.__const _NRDevicePropertyOxygenSaturationRecordingVersion
|| __DATA_CONST.__const _NRDevicePropertyPairedDate
|| __DATA_CONST.__const _NRDevicePropertyPairedDeviceCount
|| __DATA_CONST.__const _NRDevicePropertyPairingCompatibilityVersion
|| __DATA_CONST.__const _NRDevicePropertyPairingID
|| __DATA_CONST.__const _NRDevicePropertyPairingSessionIdentifier
|| __DATA_CONST.__const _NRDevicePropertyPreferredLanguages
|| __DATA_CONST.__const _NRDevicePropertyProductType
|| __DATA_CONST.__const _NRDevicePropertyRegionCode
|| __DATA_CONST.__const _NRDevicePropertyRegionInfo
|| __DATA_CONST.__const _NRDevicePropertyRegulatoryModelNumber
|| __DATA_CONST.__const _NRDevicePropertySEID
|| __DATA_CONST.__const _NRDevicePropertyScreenScale
|| __DATA_CONST.__const _NRDevicePropertyScreenSize
|| __DATA_CONST.__const _NRDevicePropertySerialNumber
|| __DATA_CONST.__const _NRDevicePropertySigningFuse
|| __DATA_CONST.__const _NRDevicePropertySleepActionsVersion
|| __DATA_CONST.__const _NRDevicePropertySleepCoachingVersion
|| __DATA_CONST.__const _NRDevicePropertySleepTrackingVersion
|| __DATA_CONST.__const _NRDevicePropertySupportedFeatureIdentifiers
|| __DATA_CONST.__const _NRDevicePropertySystemBuildVersion
|| __DATA_CONST.__const _NRDevicePropertySystemName
|| __DATA_CONST.__const _NRDevicePropertySystemVersion
|| __DATA_CONST.__const _NRDevicePropertyTotalStorage
|| __DATA_CONST.__const _NRDevicePropertyUDID
|| __DATA_CONST.__const _NRDevicePropertyWIFIMACAddress
|| __DATA_CONST.__const _NRDevicePropertyWifiAntennaSKUVersion
|| __DATA_CONST.__const _NRInitialPairedSyncDidCompleteDarwinNotification
|| __DATA_CONST.__const _NRMigrationConsentExpiredDarwinNotification
|| __DATA_CONST.__const _NRMigrationConsentRequestedDarwinNotification
|| __DATA_CONST.__const _NRMigrationPairedSyncDidCompleteDarwinNotification
|| __DATA_CONST.__const _NRMigrationShowFakeSyncDarwinNotification
|| __DATA_CONST.__const _NRPairOptionGizmoPairingVersion
|| __DATA_CONST.__const _NRPairOptionIsAltAccountGizmo
|| __DATA_CONST.__const _NRPairedDeviceRegistryAbortPairingUserRequested
|| __DATA_CONST.__const _NRPairedDeviceRegistryCompatibilityStateKey
|| __DATA_CONST.__const _NRPairedDeviceRegistryDevice
|| __DATA_CONST.__const _NRPairedDeviceRegistryDeviceDidBecomeActive
|| __DATA_CONST.__const _NRPairedDeviceRegistryDeviceDidBecomeInactive
|| __DATA_CONST.__const _NRPairedDeviceRegistryDeviceDidBeginActivation
|| __DATA_CONST.__const _NRPairedDeviceRegistryDeviceDidBeginPairingNotification
|| __DATA_CONST.__const _NRPairedDeviceRegistryDeviceDidEnterCompatibilityStateNotification
|| __DATA_CONST.__const _NRPairedDeviceRegistryDeviceDidFailToPairNotification
|| __DATA_CONST.__const _NRPairedDeviceRegistryDeviceDidPairDarwinNotification
|| __DATA_CONST.__const _NRPairedDeviceRegistryDeviceDidPairNotification
|| __DATA_CONST.__const _NRPairedDeviceRegistryDeviceDidReceiveBTPairingRequestNotification
|| __DATA_CONST.__const _NRPairedDeviceRegistryDeviceDidUnpairDarwinNotification
|| __DATA_CONST.__const _NRPairedDeviceRegistryDeviceDidUnpairNotification
|| __DATA_CONST.__const _NRPairedDeviceRegistryDeviceIsPairingLinkIsUpDarwinNotification
|| __DATA_CONST.__const _NRPairedDeviceRegistryDeviceNeedsPasscode
|| __DATA_CONST.__const _NRPairedDeviceRegistryDeviceOOBKeyDidChange
|| __DATA_CONST.__const _NRPairedDeviceRegistryDevicesDidUpdateNotification
|| __DATA_CONST.__const _NRPairedDeviceRegistryError
|| __DATA_CONST.__const _NRPairedDeviceRegistryLaunchedByNanoRegistryD
|| __DATA_CONST.__const _NRPairedDeviceRegistryOOBKeyKey
|| __DATA_CONST.__const _NRPairedDeviceRegistryPairedDeviceDidChangeCapabilitiesDarwinNotification
|| __DATA_CONST.__const _NRPairedDeviceRegistryPairedDeviceDidChangeVersionDarwinNotification
|| __DATA_CONST.__const _NRPairedDeviceRegistryPairedSyncIsOkayToSyncDarwinNotification
|| __DATA_CONST.__const _NRPairedDeviceRegistryPairingStorePath
|| __DATA_CONST.__const _NRPairedDeviceRegistryPasscodeKey
|| __DATA_CONST.__const _NRPairedDeviceRegistryPreviousDeviceKey
|| __DATA_CONST.__const _NRPairedDeviceRegistryRemoteUnpairingBeginningDarwinNotification
|| __DATA_CONST.__const _NRPairedDeviceRegistryRemoteUnpairingDidBeginNotification
|| __DATA_CONST.__const _NRPairedDeviceRegistryStatusDidChange
|| __DATA_CONST.__const _NRPairedDeviceRegistryStatusKey
|| __DATA_CONST.__const _NRPairedDeviceRegistryWatchDidBecomeActiveDarwinNotification
|| __DATA_CONST.__const _NRRegistryHistoryStoreShouldInitializeWithFirstUnlockStatus
|| __DATA_CONST.__const _NRRegistryPlatformSupportsWatch
|| __DATA_CONST.__const _NRRegistryShouldCreateCollection
|| __DATA_CONST.__const _NRRegistryUpdateCounterNotification
|| __DATA_CONST.__const _NRRestartedDarwinNotification
|| __DATA_CONST.__const _NRReunionPairedSyncDidCompleteDarwinNotification
|| __DATA_CONST.__const _NRTermsAcknowledgementRegistryDomain
|| __DATA_CONST.__const _NRUnpairOptionBrick
|| __DATA_CONST.__const _NRUnpairOptionObliterate
|| __DATA_CONST.__const _NRUnpairOptionStore
|| __DATA_CONST.__const _NRWatchSetupPushDarwinNotification
|| __DATA_CONST.__const __NRDevicePropertyAdvertisingIdentifierSeed
|| __DATA_CONST.__const __NRDevicePropertyAltAccountAltDSID
|| __DATA_CONST.__const __NRDevicePropertyAltAccountIdentifier
|| __DATA_CONST.__const __NRDevicePropertyBluetoothIdentifier
|| __DATA_CONST.__const __NRDevicePropertyBogusDevice
|| __DATA_CONST.__const __NRDevicePropertyCapabilities
|| __DATA_CONST.__const __NRDevicePropertyCompatibilityState
|| __DATA_CONST.__const __NRDevicePropertyKeychainTurnedOff
|| __DATA_CONST.__const __NRDevicePropertyLastPairingError
|| __DATA_CONST.__const __NRDevicePropertyLastRSSIUpdate
|| __DATA_CONST.__const __NRDevicePropertyMigrationCount
|| __DATA_CONST.__const __NRDevicePropertyMigrationIDSCloudIdentifier
|| __DATA_CONST.__const __NRDevicePropertyMigrationKeyRevision
|| __DATA_CONST.__const __NRDevicePropertyPairingParentAccountIdentifier
|| __DATA_CONST.__const __NRDevicePropertyPairingParentAltDSID
|| __DATA_CONST.__const __NRDevicePropertyPairingStatusBluetoothPaired
|| __DATA_CONST.__const __NRDevicePropertyRSSI
|| __DATA_CONST.__const __NRDevicePropertyRemoteUnpairingStarted
|| __DATA_CONST.__const __NRDevicePropertyStatusCode
|| __DATA_CONST.__const _kNRActiveDeviceAssertionTokenName
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NRClientInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NRDeviceCollectionDiff
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NRDeviceCollectionHistory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NRDiffBase
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NRMiniUUIDSet
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NRMutableDeviceCollection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NRMutableDeviceProperty
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NRMutableStateBase
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NRNSXPCConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NRPBMutableDeviceCollection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NRPairedDeviceRegistry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NRPairingProxy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NRReadWriteConcurrentQueue
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NRRegistry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NRRegistryClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NRRegistryProxy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NRSecureDevicePropertyID
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NRSecureDevicePropertyStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NRWatchPairingExtendedMetadata
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NRXPCProxy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NRClientInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NRDeviceCollectionDiff
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NRDeviceCollectionHistory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NRDiffBase
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NRMiniUUIDSet
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NRMutableDeviceCollection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NRMutableDeviceProperty
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NRMutableStateBase
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NRNSXPCConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NRPBMutableDeviceCollection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NRPairedDeviceRegistry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NRPairingProxy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NRReadWriteConcurrentQueue
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NRRegistry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NRRegistryClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NRRegistryProxy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NRSecureDevicePropertyID
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NRSecureDevicePropertyStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NRWatchPairingExtendedMetadata
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NRXPCProxy
|| __TEXT.__text _NRClassesForPropertiesWithArray
|| __TEXT.__text _NRDeviceSizeForProductType
|| __TEXT.__text _NRPBCompressedDataReadFrom
|| __TEXT.__text _NRPBDeviceCollectionDiffReadFrom
|| __TEXT.__text _NRPBDeviceCollectionHistoryEntryReadFrom
|| __TEXT.__text _NRPBDeviceCollectionHistoryReadFrom
|| __TEXT.__text _NRPBDeviceDiffReadFrom
|| __TEXT.__text _NRPBDeviceDiffTypeReadFrom
|| __TEXT.__text _NRPBDevicePropertyDiffReadFrom
|| __TEXT.__text _NRPBDevicePropertyDiffTypeReadFrom
|| __TEXT.__text _NRPBMigrationDeviceInfoReadFrom
|| __TEXT.__text _NRPBMigrationDevicesReadFrom
|| __TEXT.__text _NRPBMutableDeviceCollectionReadFrom
|| __TEXT.__text _NRPBMutableDevicePropertyReadFrom
|| __TEXT.__text _NRPBMutableDeviceReadFrom
|| __TEXT.__text _NRPBNumberReadFrom
|| __TEXT.__text _NRPBPropertyReadFrom
|| __TEXT.__text _NRPBPropertyValueReadFrom
|| __TEXT.__text _NRPBSizeReadFrom
|| __TEXT.__text _NRPBSwitchRecordCollectionReadFrom
|| __TEXT.__text _NRPBSwitchRecordReadFrom
|| __TEXT.__text _NRPBTermsEventReadFrom
|| __TEXT.__text _NRPairedDeviceRegistryStatusCodeString
|| __TEXT.__text _NRRawVersionFromString
|| __TEXT.__text _NRVersionIsGreaterThanOrEqual
|| __TEXT.__text _NRWatchOSVersion
|| __TEXT.__text _NRWatchOSVersionForLocalDevice
|| __TEXT.__text _NRWatchOSVersionForRemoteDevice
|| __TEXT.__text __NRIsAutomated
|| __TEXT.__text __NRIsDemoModeEnabled
|| __TEXT.__text __NRIsInternalInstall
|| __TEXT.__text _nrGetPairingError
|| __TEXT.__text _nr_daemon_log
|| __TEXT.__text _nr_framework_log
|| __TEXT.__text _nr_magic_switch_log
|| __TEXT.__text _nr_pairing_reporter_log
|| __TEXT.__text _nr_root_daemon_log
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFNumberGetTypeID
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesCopyValue
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFPreferencesGetAppIntegerValue
__ CoreFoundation: _CFPreferencesSetAppValue
__ CoreFoundation: _CFPreferencesSynchronize
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFStringGetTypeID
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFPreferencesAnyHost
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSDebugDescriptionErrorKey
__ Foundation: _NSFileProtectionKey
__ Foundation: _NSFileProtectionNone
__ Foundation: _NSKeyedArchiveRootObjectKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSSearchPathForDirectoriesInDomains
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileHandle
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSIndexSet
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPointerArray
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSProxy
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_CLASS_$_NSXPCListener
__ Foundation: _OBJC_METACLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_METACLASS_$_NSProxy
__ Foundation: _OBJC_METACLASS_$_NSXPCListener
__ MobileKeyBag: _MKBDeviceUnlockedSinceBoot
__ ProtocolBuffer: _OBJC_CLASS_$_PBCodable
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._bytes
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._error
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._length
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._pos
__ ProtocolBuffer: _OBJC_METACLASS_$_PBCodable
__ ProtocolBuffer: _PBDataWriterWriteBOOLField
__ ProtocolBuffer: _PBDataWriterWriteDataField
__ ProtocolBuffer: _PBDataWriterWriteDoubleField
__ ProtocolBuffer: _PBDataWriterWriteFloatField
__ ProtocolBuffer: _PBDataWriterWriteInt32Field
__ ProtocolBuffer: _PBDataWriterWriteInt64Field
__ ProtocolBuffer: _PBDataWriterWriteStringField
__ ProtocolBuffer: _PBDataWriterWriteSubmessage
__ ProtocolBuffer: _PBReaderPlaceMark
__ ProtocolBuffer: _PBReaderReadData
__ ProtocolBuffer: _PBReaderReadString
__ ProtocolBuffer: _PBReaderRecallMark
__ ProtocolBuffer: _PBReaderSkipValueWithTag
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _MGGetStringAnswer
__ libSystem.B.dylib: _CC_SHA256
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _abort
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _clock_gettime_nsec_np
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_assert_queue_not$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_queue_create_with_target$V2
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_suspend
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _fmod
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _mach_timebase_info
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_check
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _notify_is_valid_token
__ libSystem.B.dylib: _notify_register_check
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _notify_set_state
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_transaction_create
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_lock_with_options
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _proc_pidpath
__ libSystem.B.dylib: _random
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: dyld_stub_binder
__ libc++.1.dylib: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNSt11logic_errorC2EPKc
__ libc++.1.dylib: __ZNSt12length_errorD1Ev
__ libc++.1.dylib: __ZTISt12length_error
__ libc++.1.dylib: __ZTVSt12length_error
__ libc++.1.dylib: __ZdlPv
__ libc++.1.dylib: __Znwm
__ libc++.1.dylib: ___cxa_allocate_exception
__ libc++.1.dylib: ___cxa_free_exception
__ libc++.1.dylib: ___cxa_throw
__ libc++.1.dylib: ___gxx_personality_v0
__ libcompression.dylib: _compression_decode_buffer
__ libcompression.dylib: _compression_encode_buffer
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_ehtype_vtable
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
NRDataFilePaths : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[NRDataFilePaths _pathToNanoRegistryStateDirectory]
  +[NRDataFilePaths _pathToUnpairTriggerFile]
  +[NRDataFilePaths _pathToNanoRegistryPairingStorePathDirectory]
  +[NRDataFilePaths pathToNanoRegistryMigrationRoutingSlip]
  +[NRDataFilePaths _pathToNanoRegistryUnpairTriggerFileDirectory]
  +[NRDataFilePaths _pathToDevicePropertiesFile]
  +[NRDataFilePaths pathToNanoRegistryHistorySecurePropertiesFile]
  +[NRDataFilePaths pathToNanoRegistryUDIDFile]
  +[NRDataFilePaths _pathToSecureDevicePropertiesFile]
  +[NRDataFilePaths pathToNanoRegistryHistoryRecoveryManagerFile:]
  +[NRDataFilePaths pathToNanoRegistryClassAFile]
  +[NRDataFilePaths _pathToRecoveryStateFile]
  +[NRDataFilePaths pathToNanoRegistryStateDirectory]
  +[NRDataFilePaths pathToNanoRegistryHistoryFile]


NRTermsEvent : NRPBTermsEvent <NSSecureCoding>
 @property  NSString *termsDigest
 @property  BOOL flaggedForSend
 @property  BOOL writable

  // class methods
  +[NRTermsEvent supportsSecureCoding]
  +[NRTermsEvent digestFromData:]
  +[NRTermsEvent loadTermsWithPath:]
  +[NRTermsEvent eventWithProtobuf:]

  // instance methods
  -[NRTermsEvent setEventType:]
  -[NRTermsEvent setPresentationReason:]
  -[NRTermsEvent .cxx_destruct]
  -[NRTermsEvent initWithDeviceID:]
  -[NRTermsEvent termsText]
  -[NRTermsEvent setWritable:]
  -[NRTermsEvent isTermsAlreadyArchived]
  -[NRTermsEvent setTermsText:]
  -[NRTermsEvent setDocumentationID:]
  -[NRTermsEvent setPresentationLocation:]
  -[NRTermsEvent setEventDate:]
  -[NRTermsEvent encodeWithCoder:]
  -[NRTermsEvent writable]
  -[NRTermsEvent setAcknowledgedDeviceName:]
  -[NRTermsEvent setAcknowledgedDeviceSerialNumber:]
  -[NRTermsEvent setDisplayDeviceName:]
  -[NRTermsEvent setDisplayDeviceSerialNumber:]
  -[NRTermsEvent setLoggingProcessName:]
  -[NRTermsEvent _setEventType:]
  -[NRTermsEvent updateEventDate]
  -[NRTermsEvent _setLoggingProcessName:]
  -[NRTermsEvent termsDigest]
  -[NRTermsEvent setTermsDigest:]
  -[NRTermsEvent flaggedForSend]
  -[NRTermsEvent setFlaggedForSend:]
  -[NRTermsEvent saveTerms]
  -[NRTermsEvent initWithCoder:]


NRTermsAcknowledgementRegistry : NSObject /usr/lib/libc++.1.dylib <NRTermsAcknowledgementRegistry>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NRTermsAcknowledgementRegistry errorWithEnum:]
  +[NRTermsAcknowledgementRegistry errorStringWithEnum:]

  // instance methods
  -[NRTermsAcknowledgementRegistry .cxx_destruct]
  -[NRTermsAcknowledgementRegistry add:forDeviceID:withCompletion:]
  -[NRTermsAcknowledgementRegistry checkForAcknowledgement:forDeviceID:withCompletion:]


NRMockXPCProxy : NSProxy /usr/lib/libobjc.A.dylib
  // instance methods
  -[NRMockXPCProxy forwardInvocation:]
  -[NRMockXPCProxy methodSignatureForSelector:]
  -[NRMockXPCProxy .cxx_destruct]


NRLoggingXPCProxy : NSProxy /usr/lib/libobjc.A.dylib
  // instance methods
  -[NRLoggingXPCProxy forwardInvocation:]
  -[NRLoggingXPCProxy methodSignatureForSelector:]
  -[NRLoggingXPCProxy .cxx_destruct]


NRMockXPCStuff : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[NRMockXPCStuff sharedInstance]

  // instance methods
  -[NRMockXPCStuff init]
  -[NRMockXPCStuff .cxx_destruct]


NRNSXPCConnection : NSObject /usr/lib/libc++.1.dylib <NRNSXPCConnectionProtocol>
 @property  NSXPCInterface *exportedInterface
 @property  id exportedObject
 @property  NSXPCInterface *remoteObjectInterface
 @property  id remoteObjectProxy
 @property  @? interruptionHandler
 @property  @? invalidationHandler
 @property  int processIdentifier
 @property  NSString *processName
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NRNSXPCConnection synchronousRemoteObjectProxyWithErrorHandler:]
  -[NRNSXPCConnection initWithMachServiceName:options:]
  -[NRNSXPCConnection suspend]
  -[NRNSXPCConnection valueForEntitlement:]
  -[NRNSXPCConnection setExportedObject:]
  -[NRNSXPCConnection resume]
  -[NRNSXPCConnection _setQueue:]
  -[NRNSXPCConnection processIdentifier]
  -[NRNSXPCConnection setExportedInterface:]
  -[NRNSXPCConnection remoteObjectProxyWithErrorHandler:]
  -[NRNSXPCConnection setRemoteObjectInterface:]
  -[NRNSXPCConnection processName]
  -[NRNSXPCConnection .cxx_destruct]
  -[NRNSXPCConnection remoteObjectInterface]
  -[NRNSXPCConnection setInvalidationHandler:]
  -[NRNSXPCConnection exportedInterface]
  -[NRNSXPCConnection runCompletionBlock:]
  -[NRNSXPCConnection remoteObjectProxy]
  -[NRNSXPCConnection setInterruptionHandler:]
  -[NRNSXPCConnection initWithConnection:]
  -[NRNSXPCConnection exportedObject]
  -[NRNSXPCConnection interruptionHandler]
  -[NRNSXPCConnection invalidationHandler]
  -[NRNSXPCConnection invalidate]


NRNSXPCListener : NSXPCListener /usr/lib/libobjc.A.dylib <NSXPCListenerDelegate, NRNSXPCListenerProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <NRNSXPCListenerDelegate> *delegate

  // instance methods
  -[NRNSXPCListener .cxx_destruct]
  -[NRNSXPCListener listener:shouldAcceptNewConnection:]
  -[NRNSXPCListener setDelegate:]


NRMockClientNSXPCConnection : NSObject /usr/lib/libc++.1.dylib <NRNSXPCConnectionProtocol>
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NRMockServerNSXPCConnection *serverConnection
 @property  BOOL invalidated
 @property  NSXPCInterface *exportedInterface
 @property  id exportedObject
 @property  NSXPCInterface *remoteObjectInterface
 @property  id remoteObjectProxy
 @property  @? interruptionHandler
 @property  @? invalidationHandler
 @property  int processIdentifier
 @property  NSString *processName
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NRMockClientNSXPCConnection serverConnection]
  -[NRMockClientNSXPCConnection synchronousRemoteObjectProxyWithErrorHandler:]
  -[NRMockClientNSXPCConnection initWithMachServiceName:options:]
  -[NRMockClientNSXPCConnection suspend]
  -[NRMockClientNSXPCConnection valueForEntitlement:]
  -[NRMockClientNSXPCConnection setExportedObject:]
  -[NRMockClientNSXPCConnection resume]
  -[NRMockClientNSXPCConnection _setQueue:]
  -[NRMockClientNSXPCConnection processIdentifier]
  -[NRMockClientNSXPCConnection setExportedInterface:]
  -[NRMockClientNSXPCConnection remoteObjectProxyWithErrorHandler:]
  -[NRMockClientNSXPCConnection setRemoteObjectInterface:]
  -[NRMockClientNSXPCConnection processName]
  -[NRMockClientNSXPCConnection .cxx_destruct]
  -[NRMockClientNSXPCConnection remoteObjectInterface]
  -[NRMockClientNSXPCConnection setInvalidationHandler:]
  -[NRMockClientNSXPCConnection exportedInterface]
  -[NRMockClientNSXPCConnection runCompletionBlock:]
  -[NRMockClientNSXPCConnection remoteObjectProxy]
  -[NRMockClientNSXPCConnection _invalidate]
  -[NRMockClientNSXPCConnection invalidated]
  -[NRMockClientNSXPCConnection remoteObjectProxyAsync:]
  -[NRMockClientNSXPCConnection setInterruptionHandler:]
  -[NRMockClientNSXPCConnection exportedObject]
  -[NRMockClientNSXPCConnection interruptionHandler]
  -[NRMockClientNSXPCConnection queue]
  -[NRMockClientNSXPCConnection invalidationHandler]
  -[NRMockClientNSXPCConnection invalidate]


NRMockServerNSXPCConnection : NSObject /usr/lib/libc++.1.dylib <NRNSXPCConnectionProtocol>
 @property  NSXPCInterface *exportedInterface
 @property  id exportedObject
 @property  NSXPCInterface *remoteObjectInterface
 @property  id remoteObjectProxy
 @property  @? interruptionHandler
 @property  @? invalidationHandler
 @property  int processIdentifier
 @property  NSString *processName
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NRMockServerNSXPCConnection synchronousRemoteObjectProxyWithErrorHandler:]
  -[NRMockServerNSXPCConnection initWithMachServiceName:options:]
  -[NRMockServerNSXPCConnection suspend]
  -[NRMockServerNSXPCConnection valueForEntitlement:]
  -[NRMockServerNSXPCConnection setExportedObject:]
  -[NRMockServerNSXPCConnection resume]
  -[NRMockServerNSXPCConnection _setQueue:]
  -[NRMockServerNSXPCConnection processIdentifier]
  -[NRMockServerNSXPCConnection setExportedInterface:]
  -[NRMockServerNSXPCConnection remoteObjectProxyWithErrorHandler:]
  -[NRMockServerNSXPCConnection dealloc]
  -[NRMockServerNSXPCConnection setRemoteObjectInterface:]
  -[NRMockServerNSXPCConnection processName]
  -[NRMockServerNSXPCConnection .cxx_destruct]
  -[NRMockServerNSXPCConnection remoteObjectInterface]
  -[NRMockServerNSXPCConnection setInvalidationHandler:]
  -[NRMockServerNSXPCConnection exportedInterface]
  -[NRMockServerNSXPCConnection runCompletionBlock:]
  -[NRMockServerNSXPCConnection remoteObjectProxy]
  -[NRMockServerNSXPCConnection remoteObjectProxyAsync:]
  -[NRMockServerNSXPCConnection initWithListener:clientConnection:]
  -[NRMockServerNSXPCConnection setInterruptionHandler:]
  -[NRMockServerNSXPCConnection exportedObject]
  -[NRMockServerNSXPCConnection interruptionHandler]
  -[NRMockServerNSXPCConnection invalidationHandler]
  -[NRMockServerNSXPCConnection invalidate]


NRMockNSXPCListener : NSObject /usr/lib/libc++.1.dylib <NRNSXPCListenerProtocol>
 @property  <NRNSXPCListenerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NRMockNSXPCListener suspend]
  -[NRMockNSXPCListener resume]
  -[NRMockNSXPCListener dealloc]
  -[NRMockNSXPCListener initWithMachServiceName:]
  -[NRMockNSXPCListener .cxx_destruct]
  -[NRMockNSXPCListener setDelegate:]
  -[NRMockNSXPCListener invalidate]
  -[NRMockNSXPCListener delegate]


NRReadWriteConcurrentQueue : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[NRReadWriteConcurrentQueue suspend]
  -[NRReadWriteConcurrentQueue resume]
  -[NRReadWriteConcurrentQueue .cxx_destruct]
  -[NRReadWriteConcurrentQueue enqueueReadWithBlockAsync:bypassSuspend:]
  -[NRReadWriteConcurrentQueue enqueueReadWithBlock:bypassSuspend:async:]
  -[NRReadWriteConcurrentQueue enqueueWriteWithBlockAsync:bypassSuspend:]
  -[NRReadWriteConcurrentQueue enqueueReadWithBlock:bypassSuspend:]
  -[NRReadWriteConcurrentQueue initWithNumberOfReaders:]
  -[NRReadWriteConcurrentQueue invalidate]


NRPBDeviceCollectionHistory : PBCodable /usr/lib/libSystem.B.dylib <NSCopying>
 @property  BOOL hasStartIndex
 @property  long long startIndex
 @property  NSMutableArray *historys
 @property  BOOL hasSwitchRecords
 @property  NRPBSwitchRecordCollection *switchRecords

  // class methods
  +[NRPBDeviceCollectionHistory historyType]

  // instance methods
  -[NRPBDeviceCollectionHistory copyWithZone:]
  -[NRPBDeviceCollectionHistory setHasStartIndex:]
  -[NRPBDeviceCollectionHistory startIndex]
  -[NRPBDeviceCollectionHistory setStartIndex:]
  -[NRPBDeviceCollectionHistory hasStartIndex]
  -[NRPBDeviceCollectionHistory .cxx_destruct]
  -[NRPBDeviceCollectionHistory addHistory:]
  -[NRPBDeviceCollectionHistory historysCount]
  -[NRPBDeviceCollectionHistory clearHistorys]
  -[NRPBDeviceCollectionHistory historyAtIndex:]
  -[NRPBDeviceCollectionHistory setSwitchRecords:]
  -[NRPBDeviceCollectionHistory hasSwitchRecords]
  -[NRPBDeviceCollectionHistory setHistorys:]
  -[NRPBDeviceCollectionHistory switchRecords]
  -[NRPBDeviceCollectionHistory readFrom:]
  -[NRPBDeviceCollectionHistory historys]
  -[NRPBDeviceCollectionHistory writeTo:]
  -[NRPBDeviceCollectionHistory isEqual:]
  -[NRPBDeviceCollectionHistory copyTo:]
  -[NRPBDeviceCollectionHistory dictionaryRepresentation]
  -[NRPBDeviceCollectionHistory mergeFrom:]


NRPairingProxy : NRRegistryProxy <NRPairedDeviceRegistryXPCDaemonDelegate>
  // class methods
  +[NRPairingProxy clientRemoteObjectInterface]
  +[NRPairingProxy clientExportedInterface]
  +[NRPairingProxy machServiceName]
  +[NRPairingProxy serverRemoteObjectInterface]
  +[NRPairingProxy serverExportedInterface]

  // instance methods
  -[NRPairingProxy xpcKeepPhoneUnlockedInternalTestSPI:]
  -[NRPairingProxy xpcGetMigrationCountForPairingID:completion:]
  -[NRPairingProxy xpcNotifyPasscode:withDeviceID:]
  -[NRPairingProxy xpcIsAssertionActive:withCompletion:]
  -[NRPairingProxy xpcInvalidateSwitchAssertionWithIdentifier:block:]
  -[NRPairingProxy xpcSuspendPairingClientCrashMonitoring:]
  -[NRPairingProxy xpcEndDiscoveryWithBlock:]
  -[NRPairingProxy xpcSubmitRTCPairingMetricForMetricID:withSuccess:]
  -[NRPairingProxy xpcUnpairWithSimulator:withCompletion:]
  -[NRPairingProxy xpcAbortPairingReason:withBlock:]
  -[NRPairingProxy xpcSubmitAlbertPairingReport:]
  -[NRPairingProxy xpcEnterCompatibilityState:withDeviceID:]
  -[NRPairingProxy xpcFakePairedSyncIsCompleteWithCompletion:]
  -[NRPairingProxy xpcPingActiveGizmoWithPriority:withMessageSize:withBlock:]
  -[NRPairingProxy xpcIsPhoneReadyToMigrateDevice:withCompletion:]
  -[NRPairingProxy xpcCompanionPasscodePairWithDeviceID:withOptions:operationHasBegun:]
  -[NRPairingProxy xpcClearRecoveryFlagWithCompletion:]
  -[NRPairingProxy xpcSwitchActiveDeviceWithDeviceID:isMagicSwitch:operationHasCompleted:]
  -[NRPairingProxy xpcPairingShouldContinue]
  -[NRPairingProxy xpcNotifyActivationCompleted:withSuccess:]
  -[NRPairingProxy xpcPairingClientSetPairingParentName:pairingParentAltDSID:forPairingID:completion:]
  -[NRPairingProxy xpcUnpairWithDeviceID:withOptions:operationHasBegun:]
  -[NRPairingProxy xpcStartWatchSetupPushWithBlock:]
  -[NRPairingProxy xpcWatchNeedsGraduation:]
  -[NRPairingProxy xpcPairingClientSetAltAccountName:altDSID:forPairingID:completion:]
  -[NRPairingProxy xpcRetriggerUnpairInfoDialogWithBlock:]
  -[NRPairingProxy xpcPutMigrationChallengeCharacteristicWriteData:completion:]
  -[NRPairingProxy xpcCheckIfFlaggedForRecoveryWithCompletion:]
  -[NRPairingProxy xpcCompanionOOBDiscoverAndPairWithName:withOutOfBandPairingKey:withOptions:operationHasBegun:]
  -[NRPairingProxy xpcPairingClientDidEnterPhase:withBlock:]
  -[NRPairingProxy xpcGetMigrationPairingCharacteristicReadDataWithCompletion:]
  -[NRPairingProxy xpcGizmoOOBAdvertiseAndPairWithName:operationHasBegun:]
  -[NRPairingProxy xpcTriggerVersion4Workaround]
  -[NRPairingProxy xpcGetInitialSyncCompletedForPairingID:completion:]
  -[NRPairingProxy xpcBeginMigrationWithCompletion:]
  -[NRPairingProxy xpcWaitForWatchPairingExtendedMetadataForAdvertisedName:completion:]
  -[NRPairingProxy xpcGizmoPasscodeAdvertiseAndPairWithName:operationHasBegun:]
  -[NRPairingProxy xpcBeginMigrationWithDeviceID:passcode:withBlock:]
  -[NRPairingProxy xpcSwitchToSimulator:withCompletion:]
  -[NRPairingProxy xpcStopWatchSetupPushWithBlock:]
  -[NRPairingProxy xpcClearWatchNeedsGraduation:]
  -[NRPairingProxy xpcScanForMigratableWatchesWithBlock:]
  -[NRPairingProxy xpcBeginMigrationWithDeviceID:completion:]
  -[NRPairingProxy xpcBeginDiscoveryWithBlock:]
  -[NRPairingProxy xpcSubmitServerRequestReportWithRequestType:duration:errorCode:block:]
  -[NRPairingProxy xpcSwitchActiveDeviceWithDeviceID:withAssertionHandler:]
  -[NRPairingProxy xpcSetWatchNeedsGraduation:]
  -[NRPairingProxy xpcGetLastSwitchIndex:]
  -[NRPairingProxy xpcResumePairingClientCrashMonitoring:]
  -[NRPairingProxy xpcActiveDeviceAssertions:]
  -[NRPairingProxy xpcPairWithSimulator:withCompletion:]
  -[NRPairingProxy xpcGetLastMigrationRequestPhoneNameWithCompletion:]


NRRegistryQueryCompletionBlockEntry : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[NRRegistryQueryCompletionBlockEntry .cxx_destruct]


NRRegistryClient : NRRegistry
 @property  <NRNSXPCConnectionProtocol> *connection
 @property  unsigned long devicesUpdateCounter
 @property  <NRNSXPCConnectionProtocol> *rawConnection

  // class methods
  +[NRRegistryClient xpcConnectionClass]
  +[NRRegistryClient proxyClass]

  // instance methods
  -[NRRegistryClient _queryDataAsyncIfNeededWithBlock:]
  -[NRRegistryClient _grabRegistryWithWriteBlockAsync:]
  -[NRRegistryClient daemonIdle]
  -[NRRegistryClient _grabRegistryWithReadBlock:]
  -[NRRegistryClient _connectToDaemon]
  -[NRRegistryClient grabRegistryWithWriteBlockAsync:]
  -[NRRegistryClient devicesUpdateCounter]
  -[NRRegistryClient rawConnection]
  -[NRRegistryClient addDiffIndexObserverWithWriteBlock:]
  -[NRRegistryClient removeDiffIndexObserver:]
  -[NRRegistryClient syncGrabRegistryWithReadBlock:]
  -[NRRegistryClient grabRegistryWithReadBlock:]
  -[NRRegistryClient grabRegistryWithReadBlockAsync:]
  -[NRRegistryClient setCollection:]
  -[NRRegistryClient .cxx_destruct]
  -[NRRegistryClient initWithParameters:]
  -[NRRegistryClient connection]
  -[NRRegistryClient invalidate]


NRMockRegistryClient : NRRegistryClient
  // class methods
  +[NRMockRegistryClient xpcConnectionClass]

  // instance methods
  -[NRMockRegistryClient init]


NRPBSwitchRecordCollection : PBCodable /usr/lib/libSystem.B.dylib <NSCopying>
 @property  NSMutableArray *records

  // class methods
  +[NRPBSwitchRecordCollection recordsType]

  // instance methods
  -[NRPBSwitchRecordCollection copyWithZone:]
  -[NRPBSwitchRecordCollection addRecords:]
  -[NRPBSwitchRecordCollection clearRecords]
  -[NRPBSwitchRecordCollection records]
  -[NRPBSwitchRecordCollection recordsCount]
  -[NRPBSwitchRecordCollection setRecords:]
  -[NRPBSwitchRecordCollection recordsAtIndex:]
  -[NRPBSwitchRecordCollection .cxx_destruct]
  -[NRPBSwitchRecordCollection readFrom:]
  -[NRPBSwitchRecordCollection writeTo:]
  -[NRPBSwitchRecordCollection isEqual:]
  -[NRPBSwitchRecordCollection copyTo:]
  -[NRPBSwitchRecordCollection dictionaryRepresentation]
  -[NRPBSwitchRecordCollection mergeFrom:]


NRPBPropertyValue : PBCodable /usr/lib/libSystem.B.dylib <NSCopying>
 @property  BOOL hasStringValue
 @property  NSString *stringValue
 @property  BOOL hasNumberValue
 @property  NRPBNumber *numberValue
 @property  BOOL hasUUIDValue
 @property  NSData *uUIDValue
 @property  BOOL hasDataValue
 @property  NSData *dataValue
 @property  BOOL hasSizeValue
 @property  NRPBSize *sizeValue
 @property  BOOL hasDictionaryKey
 @property  NRPBPropertyValue *dictionaryKey
 @property  NSMutableArray *arrayValues
 @property  BOOL hasIsSet
 @property  BOOL isSet
 @property  BOOL hasIsSecurePropertyValue
 @property  BOOL isSecurePropertyValue
 @property  BOOL hasIsDate
 @property  BOOL isDate
 @property  BOOL hasIsError
 @property  BOOL isError
 @property  BOOL hasIsMiniUUIDSet
 @property  BOOL isMiniUUIDSet

  // class methods
  +[NRPBPropertyValue arrayValuesType]

  // instance methods
  -[NRPBPropertyValue copyWithZone:]
  -[NRPBPropertyValue setStringValue:]
  -[NRPBPropertyValue sizeValue]
  -[NRPBPropertyValue isSet]
  -[NRPBPropertyValue hasStringValue]
  -[NRPBPropertyValue .cxx_destruct]
  -[NRPBPropertyValue numberValue]
  -[NRPBPropertyValue isError]
  -[NRPBPropertyValue setUUIDValue:]
  -[NRPBPropertyValue addArrayValues:]
  -[NRPBPropertyValue setSizeValue:]
  -[NRPBPropertyValue arrayValuesCount]
  -[NRPBPropertyValue clearArrayValues]
  -[NRPBPropertyValue arrayValuesAtIndex:]
  -[NRPBPropertyValue hasNumberValue]
  -[NRPBPropertyValue hasUUIDValue]
  -[NRPBPropertyValue hasSizeValue]
  -[NRPBPropertyValue hasDictionaryKey]
  -[NRPBPropertyValue setIsSet:]
  -[NRPBPropertyValue setHasIsSet:]
  -[NRPBPropertyValue setIsSecurePropertyValue:]
  -[NRPBPropertyValue setHasIsSecurePropertyValue:]
  -[NRPBPropertyValue setIsDate:]
  -[NRPBPropertyValue hasIsSecurePropertyValue]
  -[NRPBPropertyValue setHasIsDate:]
  -[NRPBPropertyValue hasIsDate]
  -[NRPBPropertyValue setIsError:]
  -[NRPBPropertyValue setHasIsError:]
  -[NRPBPropertyValue hasIsError]
  -[NRPBPropertyValue setIsMiniUUIDSet:]
  -[NRPBPropertyValue setHasIsMiniUUIDSet:]
  -[NRPBPropertyValue hasIsMiniUUIDSet]
  -[NRPBPropertyValue uUIDValue]
  -[NRPBPropertyValue arrayValues]
  -[NRPBPropertyValue setArrayValues:]
  -[NRPBPropertyValue isSecurePropertyValue]
  -[NRPBPropertyValue isMiniUUIDSet]
  -[NRPBPropertyValue readFrom:]
  -[NRPBPropertyValue setDictionaryKey:]
  -[NRPBPropertyValue dictionaryKey]
  -[NRPBPropertyValue writeTo:]
  -[NRPBPropertyValue isEqual:]
  -[NRPBPropertyValue setDataValue:]
  -[NRPBPropertyValue hasDataValue]
  -[NRPBPropertyValue dataValue]
  -[NRPBPropertyValue copyTo:]
  -[NRPBPropertyValue dictionaryRepresentation]
  -[NRPBPropertyValue hasIsSet]
  -[NRPBPropertyValue mergeFrom:]
  -[NRPBPropertyValue isDate]
  -[NRPBPropertyValue setNumberValue:]
  -[NRPBPropertyValue stringValue]


NRPBSwitchRecord : PBCodable /usr/lib/libSystem.B.dylib <NSCopying>
 @property  BOOL hasDeviceIDBytes
 @property  NSData *deviceIDBytes
 @property  BOOL hasDateTimeInterval
 @property  double dateTimeInterval
 @property  BOOL hasSwitchIndex
 @property  int switchIndex

  // instance methods
  -[NRPBSwitchRecord copyWithZone:]
  -[NRPBSwitchRecord switchIndex]
  -[NRPBSwitchRecord .cxx_destruct]
  -[NRPBSwitchRecord setDeviceIDBytes:]
  -[NRPBSwitchRecord hasDeviceIDBytes]
  -[NRPBSwitchRecord setDateTimeInterval:]
  -[NRPBSwitchRecord setHasDateTimeInterval:]
  -[NRPBSwitchRecord hasDateTimeInterval]
  -[NRPBSwitchRecord setSwitchIndex:]
  -[NRPBSwitchRecord setHasSwitchIndex:]
  -[NRPBSwitchRecord hasSwitchIndex]
  -[NRPBSwitchRecord deviceIDBytes]
  -[NRPBSwitchRecord dateTimeInterval]
  -[NRPBSwitchRecord readFrom:]
  -[NRPBSwitchRecord writeTo:]
  -[NRPBSwitchRecord isEqual:]
  -[NRPBSwitchRecord copyTo:]
  -[NRPBSwitchRecord dictionaryRepresentation]
  -[NRPBSwitchRecord mergeFrom:]


NRMutableStateBaseObserverWrapper : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[NRMutableStateBaseObserverWrapper .cxx_destruct]


NRMutableStateBase : NSObject /usr/lib/libc++.1.dylib <NRMutableStateProtocol>
 @property  <NRMutableStateParentDelegate> *parentDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NRMutableStateBase supportsSecureCoding]
  +[NRMutableStateBase classTypes]
  +[NRMutableStateBase enclosedClassTypes]
  +[NRMutableStateBase diffFrom:to:]

  // instance methods
  -[NRMutableStateBase copyWithZone:]
  -[NRMutableStateBase init]
  -[NRMutableStateBase notifyObserversWithDiff:]
  -[NRMutableStateBase .cxx_destruct]
  -[NRMutableStateBase addObserverQueue:withBlock:]
  -[NRMutableStateBase encodeWithCoder:]
  -[NRMutableStateBase parentDelegate]
  -[NRMutableStateBase notifyParentWithDiff:]
  -[NRMutableStateBase applyDiff:upOnly:notifyParent:unconditional:]
  -[NRMutableStateBase isEqual:]
  -[NRMutableStateBase removeObserver:]
  -[NRMutableStateBase setParentDelegate:]
  -[NRMutableStateBase invalidate]
  -[NRMutableStateBase applyDiff:]
  -[NRMutableStateBase initWithCoder:]


NRDiffBase : NSObject /usr/lib/libc++.1.dylib <NRDiffProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NRDiffBase supportsSecureCoding]
  +[NRDiffBase enclosedClassTypes]

  // instance methods
  -[NRDiffBase copyWithZone:]
  -[NRDiffBase encodeWithCoder:]
  -[NRDiffBase isEqual:]
  -[NRDiffBase initWithCoder:]


NRUnarchivedObjectVerifier : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[NRUnarchivedObjectVerifier unarchivingVerifyObjectIsNotNil:name:owner:]
  +[NRUnarchivedObjectVerifier unarchivingVerifyObjectClasses:name:classes:owner:]


NRMiniUUIDSet : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  NSData *data

  // class methods
  +[NRMiniUUIDSet supportsSecureCoding]

  // instance methods
  -[NRMiniUUIDSet copyWithZone:]
  -[NRMiniUUIDSet setData:]
  -[NRMiniUUIDSet .cxx_construct]
  -[NRMiniUUIDSet .cxx_destruct]
  -[NRMiniUUIDSet initWithData:]
  -[NRMiniUUIDSet encodeWithCoder:]
  -[NRMiniUUIDSet data]
  -[NRMiniUUIDSet initWithUUIDSet:]
  -[NRMiniUUIDSet hasUUID:]
  -[NRMiniUUIDSet initWithCoder:]


NRPBSize : PBCodable /usr/lib/libSystem.B.dylib <NSCopying>
 @property  float width
 @property  float height

  // instance methods
  -[NRPBSize setHeight:]
  -[NRPBSize copyWithZone:]
  -[NRPBSize setWidth:]
  -[NRPBSize width]
  -[NRPBSize readFrom:]
  -[NRPBSize height]
  -[NRPBSize writeTo:]
  -[NRPBSize isEqual:]
  -[NRPBSize copyTo:]
  -[NRPBSize dictionaryRepresentation]
  -[NRPBSize mergeFrom:]


NRPBNumber : PBCodable /usr/lib/libSystem.B.dylib <NSCopying>
 @property  BOOL hasInt32Value
 @property  int int32Value
 @property  BOOL hasFloatValue
 @property  float floatValue
 @property  BOOL hasDoubleValue
 @property  double doubleValue
 @property  BOOL hasBoolValue
 @property  BOOL boolValue
 @property  BOOL hasInt64Value
 @property  long long int64Value
 @property  BOOL hasIsUnsigned
 @property  BOOL isUnsigned
 @property  BOOL hasIsShortOrChar
 @property  BOOL isShortOrChar

  // instance methods
  -[NRPBNumber int64Value]
  -[NRPBNumber copyWithZone:]
  -[NRPBNumber int32Value]
  -[NRPBNumber doubleValue]
  -[NRPBNumber hasDoubleValue]
  -[NRPBNumber setHasDoubleValue:]
  -[NRPBNumber setInt64Value:]
  -[NRPBNumber setHasBoolValue:]
  -[NRPBNumber hasBoolValue]
  -[NRPBNumber setDoubleValue:]
  -[NRPBNumber floatValue]
  -[NRPBNumber setHasInt32Value:]
  -[NRPBNumber hasInt32Value]
  -[NRPBNumber setHasFloatValue:]
  -[NRPBNumber hasFloatValue]
  -[NRPBNumber setHasInt64Value:]
  -[NRPBNumber hasInt64Value]
  -[NRPBNumber setIsUnsigned:]
  -[NRPBNumber setHasIsUnsigned:]
  -[NRPBNumber hasIsUnsigned]
  -[NRPBNumber setIsShortOrChar:]
  -[NRPBNumber setHasIsShortOrChar:]
  -[NRPBNumber hasIsShortOrChar]
  -[NRPBNumber isUnsigned]
  -[NRPBNumber isShortOrChar]
  -[NRPBNumber readFrom:]
  -[NRPBNumber writeTo:]
  -[NRPBNumber isEqual:]
  -[NRPBNumber copyTo:]
  -[NRPBNumber dictionaryRepresentation]
  -[NRPBNumber boolValue]
  -[NRPBNumber mergeFrom:]
  -[NRPBNumber setFloatValue:]
  -[NRPBNumber setBoolValue:]
  -[NRPBNumber setInt32Value:]


NRBlockQueueWrapper : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[NRBlockQueueWrapper .cxx_destruct]


NRPairingCompatibilityVersionInfo : NSObject /usr/lib/libc++.1.dylib
 @property  long long pairingCompatibilityVersion
 @property  long long maxPairingCompatibilityVersion
 @property  long long minPairingCompatibilityVersion
 @property  long long minPairingCompatibilityVersionWithChipID
 @property  long long minQuickSwitchCompatibilityVersion
 @property  BOOL isOverrideActive

  // class methods
  +[NRPairingCompatibilityVersionInfo numberFromCFPrefs:]
  +[NRPairingCompatibilityVersionInfo valueForToken:]
  +[NRPairingCompatibilityVersionInfo stringFromCFPrefs:]
  +[NRPairingCompatibilityVersionInfo systemVersions]

  // instance methods
  -[NRPairingCompatibilityVersionInfo initInternal]
  -[NRPairingCompatibilityVersionInfo maxPairingCompatibilityVersion]
  -[NRPairingCompatibilityVersionInfo pairingCompatibilityVersion]
  -[NRPairingCompatibilityVersionInfo setPairingCompatibilityVersion:]
  -[NRPairingCompatibilityVersionInfo minPairingCompatibilityVersionForChipID:name:defaultVersion:]
  -[NRPairingCompatibilityVersionInfo setMaxPairingCompatibilityVersion:]
  -[NRPairingCompatibilityVersionInfo setMinPairingCompatibilityVersionWithChipID:]
  -[NRPairingCompatibilityVersionInfo minQuickSwitchCompatibilityVersion]
  -[NRPairingCompatibilityVersionInfo setMinPairingCompatibilityVersion:]
  -[NRPairingCompatibilityVersionInfo minPairingCompatibilityVersion]
  -[NRPairingCompatibilityVersionInfo minPairingCompatibilityVersionWithChipID]
  -[NRPairingCompatibilityVersionInfo minQuickSwitchPairingCompatibilityVersionForChipID:]
  -[NRPairingCompatibilityVersionInfo isOverrideActive]
  -[NRPairingCompatibilityVersionInfo minPairingCompatibilityVersionForChipID:]
  -[NRPairingCompatibilityVersionInfo setMinQuickSwitchCompatibilityVersion:]
  -[NRPairingCompatibilityVersionInfo setIsOverrideActive:]


NRPairedDeviceRegistry : NRRegistryClient <NRPairedDeviceRegistryXPCFrameworkDelegate>
 @property  unsigned long status

  // class methods
  +[NRPairedDeviceRegistry sharedInstance]
  +[NRPairedDeviceRegistry pairedDevicesSelectorBlock]
  +[NRPairedDeviceRegistry activeDeviceSelectorBlock]
  +[NRPairedDeviceRegistry proxyClass]
  +[NRPairedDeviceRegistry activePairedDeviceSelectorBlock]
  +[NRPairedDeviceRegistry shouldBoostProcess]

  // instance methods
  -[NRPairedDeviceRegistry _]
  -[NRPairedDeviceRegistry gizmoPasscodeAdvertiseAndPairWithName:operationHasBegun:]
  -[NRPairedDeviceRegistry supportsPairedDevice]
  -[NRPairedDeviceRegistry setActivePairedDevice:operationHasCompleted:]
  -[NRPairedDeviceRegistry keepPhoneUnlockedInternalTestSPI:]
  -[NRPairedDeviceRegistry waitForWatchPairingExtendedMetadataForAdvertisedName:completion:]
  -[NRPairedDeviceRegistry abortPairing]
  -[NRPairedDeviceRegistry lastSyncSwitchIndex]
  -[NRPairedDeviceRegistry maxPairingCompatibilityVersion]
  -[NRPairedDeviceRegistry clearWatchNeedsGraduation:]
  -[NRPairedDeviceRegistry gizmoOOBAdvertiseAndPairWithName:operationHasBegun:]
  -[NRPairedDeviceRegistry supportsWatch]
  -[NRPairedDeviceRegistry deviceIDForNRDevice:]
  -[NRPairedDeviceRegistry getSwitchEventsFromIndex:inlineCallback:]
  -[NRPairedDeviceRegistry setWatchNeedsGraduation:]
  -[NRPairedDeviceRegistry waitForActiveDevice]
  -[NRPairedDeviceRegistry isWatchSetupPushActive]
  -[NRPairedDeviceRegistry suspendPairingClientCrashMonitoring]
  -[NRPairedDeviceRegistry xpcHasNewOOBKey:]
  -[NRPairedDeviceRegistry init]
  -[NRPairedDeviceRegistry getDevicesMatching:]
  -[NRPairedDeviceRegistry watchNeedsGraduation]
  -[NRPairedDeviceRegistry maxPairedDeviceCount]
  -[NRPairedDeviceRegistry switchIndex]
  -[NRPairedDeviceRegistry startWatchSetupPush]
  -[NRPairedDeviceRegistry pairedDeviceSupportQuickSwitch]
  -[NRPairedDeviceRegistry pairedDeviceCountIsLessThanMaxTinkerPairedDevices]
  -[NRPairedDeviceRegistry pairingCompatibilityVersion]
  -[NRPairedDeviceRegistry isPaired]
  -[NRPairedDeviceRegistry switchToSimulator:withQueue:withCompletion:]
  -[NRPairedDeviceRegistry devicesFromMigrationConsentRequestData:]
  -[NRPairedDeviceRegistry nonActiveDeviceForBTDeviceID:]
  -[NRPairedDeviceRegistry _getLocalDeviceCollection]
  -[NRPairedDeviceRegistry altAccountPairingStorePathPairingID:]
  -[NRPairedDeviceRegistry notifyActivationCompleted:withSuccess:]
  -[NRPairedDeviceRegistry resumePairingClientCrashMonitoring]
  -[NRPairedDeviceRegistry getAllDevices]
  -[NRPairedDeviceRegistry beginDiscovery]
  -[NRPairedDeviceRegistry userIsCheckingForUpdate]
  -[NRPairedDeviceRegistry _getClientInfo]
  -[NRPairedDeviceRegistry checkIfFlaggedForRecoveryWithCompletion:]
  -[NRPairedDeviceRegistry .cxx_destruct]
  -[NRPairedDeviceRegistry migrationCountForPairingID:]
  -[NRPairedDeviceRegistry _getSecureProperties:]
  -[NRPairedDeviceRegistry setMigrationConsented:forDeviceID:withBlock:]
  -[NRPairedDeviceRegistry setActivePairedDevice:withActiveDeviceAssertionHandler:]
  -[NRPairedDeviceRegistry serverRequestReporterWithType:]
  -[NRPairedDeviceRegistry getPairedDevices]
  -[NRPairedDeviceRegistry getAllDevicesWithArchivedDevices]
  -[NRPairedDeviceRegistry pairingID]
  -[NRPairedDeviceRegistry putMigrationChallengeCharacteristicWriteData:queue:completion:]
  -[NRPairedDeviceRegistry pairedDeviceCountIsLessThanMaxPairedDevices]
  -[NRPairedDeviceRegistry deviceForPairingID:]
  -[NRPairedDeviceRegistry stopWatchSetupPush]
  -[NRPairedDeviceRegistry getAllDevicesWithArchivedAltAccountDevicesMatching:]
  -[NRPairedDeviceRegistry retriggerUnpairInfoDialog]
  -[NRPairedDeviceRegistry clearRecoveryFlagWithCompletion:]
  -[NRPairedDeviceRegistry _getStatusWithCollection:]
  -[NRPairedDeviceRegistry minQuickSwitchCompatibilityVersion]
  -[NRPairedDeviceRegistry pairingStorePath]
  -[NRPairedDeviceRegistry migrationConsentRequestData]
  -[NRPairedDeviceRegistry pairingClientSetPairingParentName:pairingParentAltDSID:forDevice:completion:]
  -[NRPairedDeviceRegistry pairingClientSetAltAccountName:altDSID:forDevice:completion:]
  -[NRPairedDeviceRegistry hasCompletedInitialSyncForPairingID:]
  -[NRPairedDeviceRegistry getMigrationPairingCharacteristicReadDataWithQueue:completion:]
  -[NRPairedDeviceRegistry _deviceIDAtSwitchIndex:date:]
  -[NRPairedDeviceRegistry unpairWithDevice:shouldObliterate:operationHasBegun:]
  -[NRPairedDeviceRegistry minPairingCompatibilityVersion]
  -[NRPairedDeviceRegistry _getActiveDeviceAssertionsWithInlineBlock:]
  -[NRPairedDeviceRegistry pairingClientDidEnterPhase:]
  -[NRPairedDeviceRegistry waitForActivePairedOrAltAccountDevice]
  -[NRPairedDeviceRegistry waitForPairingStorePathPairingID:]
  -[NRPairedDeviceRegistry beginMigrationWithDevice:passcode:withBlock:]
  -[NRPairedDeviceRegistry endDiscovery]
  -[NRPairedDeviceRegistry initWithBoost:disconnected:]
  -[NRPairedDeviceRegistry getActivePairedDevice]
  -[NRPairedDeviceRegistry logCallFrequency]
  -[NRPairedDeviceRegistry deviceForIDSDevice:]
  -[NRPairedDeviceRegistry compatibilityState]
  -[NRPairedDeviceRegistry completeRTCPairingMetricForMetricID:withSuccess:]
  -[NRPairedDeviceRegistry deviceForBluetoothID:]
  -[NRPairedDeviceRegistry lastMigrationRequestPhoneName]
  -[NRPairedDeviceRegistry xpcDeviceID:needsPasscode:]
  -[NRPairedDeviceRegistry initWithBoost:]
  -[NRPairedDeviceRegistry deviceIDForIDSDevice:]
  -[NRPairedDeviceRegistry overrideSignalStrengthLimit:]
  -[NRPairedDeviceRegistry pairWithSimulator:withQueue:withCompletion:]
  -[NRPairedDeviceRegistry beginMigrationWithDevice:withCompletion:]
  -[NRPairedDeviceRegistry getDevicesWithBlock:]
  -[NRPairedDeviceRegistry pairingStorePathPairingID:]
  -[NRPairedDeviceRegistry deviceForNRDevice:fromIDSDevices:]
  -[NRPairedDeviceRegistry sendDevicesUpdatedNotification]
  -[NRPairedDeviceRegistry maxTinkerPairedDeviceCount]
  -[NRPairedDeviceRegistry isPhoneReadyToMigrateDevice:withCompletion:]
  -[NRPairedDeviceRegistry nonActiveDeviceForIDSDevice:]
  -[NRPairedDeviceRegistry setActivePairedDevice:isMagicSwitch:operationHasCompleted:]
  -[NRPairedDeviceRegistry _submitAlbertPairingReport]
  -[NRPairedDeviceRegistry enterCompatibilityState:forDevice:]
  -[NRPairedDeviceRegistry nonActiveDeviceForBluetoothID:]
  -[NRPairedDeviceRegistry _pingActiveGizmoWithPriority:withMessageSize:withBlock:]
  -[NRPairedDeviceRegistry getAllDevicesWithArchivedDevicesMatching:]
  -[NRPairedDeviceRegistry notifyPairingShouldContinue]
  -[NRPairedDeviceRegistry setMigrationConsented:forDevice:withBlock:]
  -[NRPairedDeviceRegistry _submitServerRequestReportWithRequestType:duration:errorCode:]
  -[NRPairedDeviceRegistry companionOOBDiscoverAndPairWithName:withOutOfBandPairingKey:withOptions:operationHasBegun:]
  -[NRPairedDeviceRegistry waitForActiveOrAltAccountDevice]
  -[NRPairedDeviceRegistry _invalidateActiveDeviceAssertionWithIdentifier:]
  -[NRPairedDeviceRegistry unpairWithDevice:withOptions:operationHasBegun:]
  -[NRPairedDeviceRegistry abortPairingWithReason:]
  -[NRPairedDeviceRegistry isKeychainEnabled]
  -[NRPairedDeviceRegistry threadIsBlockedWaitingOn_nanoregistryd_syncGrabLegacyRegistryWithBlock:]
  -[NRPairedDeviceRegistry getDevices]
  -[NRPairedDeviceRegistry pairingClientSetAltAccountName:forDevice:completion:]
  -[NRPairedDeviceRegistry applyDiff:]
  -[NRPairedDeviceRegistry status]
  -[NRPairedDeviceRegistry fakePairedSyncIsCompleteWithCompletion:]
  -[NRPairedDeviceRegistry isAssertionActive:]
  -[NRPairedDeviceRegistry unpairWithSimulator:withQueue:withCompletion:]
  -[NRPairedDeviceRegistry blockAndQueryVersions]
  -[NRPairedDeviceRegistry waitForAltAccountPairingStorePathPairingID:]
  -[NRPairedDeviceRegistry companionPasscodePairWithDevice:withOptions:operationHasBegun:]
  -[NRPairedDeviceRegistry notifyPasscode:forDevice:]
  -[NRPairedDeviceRegistry _getChangeHistory]
  -[NRPairedDeviceRegistry waitForActivePairedDevice]
  -[NRPairedDeviceRegistry deviceForBTDeviceID:]


NRDeviceDiscoveryController : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *devices

  // class methods
  +[NRDeviceDiscoveryController sharedInstance]

  // instance methods
  -[NRDeviceDiscoveryController init]
  -[NRDeviceDiscoveryController end]
  -[NRDeviceDiscoveryController devices]
  -[NRDeviceDiscoveryController begin]
  -[NRDeviceDiscoveryController overrideSignalStrengthLimit:]


NRMigrator : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL migrationIsAvailable
 @property  NSArray *devicesExpectedToBeMigratableAfterRestore
 @property  NSArray *migratableDevicesRequiringConsent
 @property  NSArray *migratableDevices
 @property  NRDevice *migratingDevice

  // class methods
  +[NRMigrator migrationDataPreRestoreForConsentedDevices:]
  +[NRMigrator sharedMigrator]
  +[NRMigrator ingestPostRestoreMigrationDataForConsentedDevices:]

  // instance methods
  -[NRMigrator devicesFromMigrationConsentRequestData:]
  -[NRMigrator migratingDevice]
  -[NRMigrator migrationIsAvailable]
  -[NRMigrator .cxx_destruct]
  -[NRMigrator setMigrationConsented:forDeviceID:withBlock:]
  -[NRMigrator migrationConsentRequestData]
  -[NRMigrator enterPreMigrationMode]
  -[NRMigrator beginMigrationWithDevice:passcode:withBlock:]
  -[NRMigrator lastMigrationRequestPhoneName]
  -[NRMigrator beginMigrationWithDevice:withCompletion:]
  -[NRMigrator migratableDevices]
  -[NRMigrator isPhoneReadyToMigrateDevice:withCompletion:]
  -[NRMigrator migratableDevicesRequiringConsent]
  -[NRMigrator devicesExpectedToBeMigratableAfterRestore]
  -[NRMigrator setMigrationConsented:forDevice:withBlock:]


NRWatchPairingExtendedMetadata : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  long long chipID
 @property  long long pairingVersion
 @property  NSString *productType
 @property  BOOL postFailsafeObliteration
 @property  BOOL isCellularEnabled

  // class methods
  +[NRWatchPairingExtendedMetadata supportsSecureCoding]

  // instance methods
  -[NRWatchPairingExtendedMetadata productType]
  -[NRWatchPairingExtendedMetadata .cxx_destruct]
  -[NRWatchPairingExtendedMetadata chipID]
  -[NRWatchPairingExtendedMetadata encodeWithCoder:]
  -[NRWatchPairingExtendedMetadata setChipID:]
  -[NRWatchPairingExtendedMetadata pairingVersion]
  -[NRWatchPairingExtendedMetadata setPairingVersion:]
  -[NRWatchPairingExtendedMetadata isCellularEnabled]
  -[NRWatchPairingExtendedMetadata postFailsafeObliteration]
  -[NRWatchPairingExtendedMetadata setPostFailsafeObliteration:]
  -[NRWatchPairingExtendedMetadata setIsCellularEnabled:]
  -[NRWatchPairingExtendedMetadata setProductType:]
  -[NRWatchPairingExtendedMetadata initWithCoder:]


NRServerRequestReporter : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[NRServerRequestReporter dealloc]
  -[NRServerRequestReporter initWithRequestType:]
  -[NRServerRequestReporter .cxx_destruct]
  -[NRServerRequestReporter abs_to_seconds:]
  -[NRServerRequestReporter abs_to_nanos:]
  -[NRServerRequestReporter requestCompletedWithErrorCode:andDuration:]
  -[NRServerRequestReporter requestCompletedWithErrorCode:]
  -[NRServerRequestReporter requestTimedOut]


NRPBMutableDeviceProperty : PBCodable /usr/lib/libSystem.B.dylib <NSCopying>
 @property  BOOL hasValue
 @property  NRPBPropertyValue *value

  // instance methods
  -[NRPBMutableDeviceProperty copyWithZone:]
  -[NRPBMutableDeviceProperty hasValue]
  -[NRPBMutableDeviceProperty .cxx_destruct]
  -[NRPBMutableDeviceProperty readFrom:]
  -[NRPBMutableDeviceProperty writeTo:]
  -[NRPBMutableDeviceProperty setValue:]
  -[NRPBMutableDeviceProperty isEqual:]
  -[NRPBMutableDeviceProperty value]
  -[NRPBMutableDeviceProperty copyTo:]
  -[NRPBMutableDeviceProperty dictionaryRepresentation]
  -[NRPBMutableDeviceProperty mergeFrom:]


NRPBMutableDeviceCollection : PBCodable /usr/lib/libSystem.B.dylib <NSCopying>
 @property  NSMutableArray *pairingIDs
 @property  NSMutableArray *devices

  // class methods
  +[NRPBMutableDeviceCollection pairingIDsType]
  +[NRPBMutableDeviceCollection devicesType]

  // instance methods
  -[NRPBMutableDeviceCollection copyWithZone:]
  -[NRPBMutableDeviceCollection setDevices:]
  -[NRPBMutableDeviceCollection clearDevices]
  -[NRPBMutableDeviceCollection pairingIDs]
  -[NRPBMutableDeviceCollection addPairingIDs:]
  -[NRPBMutableDeviceCollection .cxx_destruct]
  -[NRPBMutableDeviceCollection devices]
  -[NRPBMutableDeviceCollection pairingIDsCount]
  -[NRPBMutableDeviceCollection devicesCount]
  -[NRPBMutableDeviceCollection readFrom:]
  -[NRPBMutableDeviceCollection setPairingIDs:]
  -[NRPBMutableDeviceCollection clearPairingIDs]
  -[NRPBMutableDeviceCollection writeTo:]
  -[NRPBMutableDeviceCollection devicesAtIndex:]
  -[NRPBMutableDeviceCollection addDevices:]
  -[NRPBMutableDeviceCollection isEqual:]
  -[NRPBMutableDeviceCollection pairingIDsAtIndex:]
  -[NRPBMutableDeviceCollection copyTo:]
  -[NRPBMutableDeviceCollection dictionaryRepresentation]
  -[NRPBMutableDeviceCollection mergeFrom:]


NRPBMigrationDevices : PBCodable /usr/lib/libSystem.B.dylib <NSCopying>
 @property  NSMutableArray *devices
 @property  BOOL hasPhoneUDIDHash
 @property  NSData *phoneUDIDHash

  // class methods
  +[NRPBMigrationDevices devicesType]

  // instance methods
  -[NRPBMigrationDevices copyWithZone:]
  -[NRPBMigrationDevices setDevices:]
  -[NRPBMigrationDevices clearDevices]
  -[NRPBMigrationDevices .cxx_destruct]
  -[NRPBMigrationDevices devices]
  -[NRPBMigrationDevices devicesCount]
  -[NRPBMigrationDevices setPhoneUDIDHash:]
  -[NRPBMigrationDevices hasPhoneUDIDHash]
  -[NRPBMigrationDevices phoneUDIDHash]
  -[NRPBMigrationDevices readFrom:]
  -[NRPBMigrationDevices writeTo:]
  -[NRPBMigrationDevices devicesAtIndex:]
  -[NRPBMigrationDevices addDevices:]
  -[NRPBMigrationDevices isEqual:]
  -[NRPBMigrationDevices copyTo:]
  -[NRPBMigrationDevices dictionaryRepresentation]
  -[NRPBMigrationDevices mergeFrom:]


NRSwitchRecord : NRPBSwitchRecord <NSSecureCoding>
  // class methods
  +[NRSwitchRecord supportsSecureCoding]

  // instance methods
  -[NRSwitchRecord initWithDeviceID:date:switchIndex:]


NRSwitchRecordCollection : NRPBSwitchRecordCollection <NSSecureCoding>
  // class methods
  +[NRSwitchRecordCollection supportsSecureCoding]

  // instance methods
  -[NRSwitchRecordCollection truncateSwitchRecords]
  -[NRSwitchRecordCollection encodeWithCoder:]


NRDeviceCollectionHistoryEntry : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  unsigned long index
 @property  NSDate *date
 @property  NRDeviceCollectionDiff *diff
 @property  NRMutableDeviceCollection *state
 @property  unsigned int switchIndex
 @property  NRPBDeviceCollectionHistoryEntry *protobuf

  // class methods
  +[NRDeviceCollectionHistoryEntry supportsSecureCoding]

  // instance methods
  -[NRDeviceCollectionHistoryEntry copyWithZone:]
  -[NRDeviceCollectionHistoryEntry index]
  -[NRDeviceCollectionHistoryEntry diff]
  -[NRDeviceCollectionHistoryEntry switchIndex]
  -[NRDeviceCollectionHistoryEntry .cxx_destruct]
  -[NRDeviceCollectionHistoryEntry date]
  -[NRDeviceCollectionHistoryEntry encodeWithCoder:]
  -[NRDeviceCollectionHistoryEntry protobuf]
  -[NRDeviceCollectionHistoryEntry initWithHistory:index:date:diff:switchIndex:]
  -[NRDeviceCollectionHistoryEntry isEqual:]
  -[NRDeviceCollectionHistoryEntry state]
  -[NRDeviceCollectionHistoryEntry initWithProtobuf:]
  -[NRDeviceCollectionHistoryEntry initWithCoder:]


NRDeviceCollectionHistoryObserverWrapper : NSObject /usr/lib/libc++.1.dylib
 @property  @? observer
 @property  NSObject<OS_dispatch_queue> *queue

  // instance methods
  -[NRDeviceCollectionHistoryObserverWrapper .cxx_destruct]
  -[NRDeviceCollectionHistoryObserverWrapper setQueue:]
  -[NRDeviceCollectionHistoryObserverWrapper queue]
  -[NRDeviceCollectionHistoryObserverWrapper setObserver:]
  -[NRDeviceCollectionHistoryObserverWrapper observer]


NRDeviceCollectionHistory : NSObject /usr/lib/libc++.1.dylib <NRMutableStateParentDelegate, NSCopying, NSSecureCoding, NSFastEnumeration>
 @property  NRMutableDeviceCollection *deviceCollection
 @property  unsigned long count
 @property  unsigned long nextIndex
 @property  BOOL dirty
 @property  unsigned int switchIndex
 @property  NRPBDeviceCollectionHistory *protobuf

  // class methods
  +[NRDeviceCollectionHistory supportsSecureCoding]

  // instance methods
  -[NRDeviceCollectionHistory copyWithZone:]
  -[NRDeviceCollectionHistory pruneStateCacheItems:]
  -[NRDeviceCollectionHistory init]
  -[NRDeviceCollectionHistory switchIndex]
  -[NRDeviceCollectionHistory isEqualToHistory:]
  -[NRDeviceCollectionHistory objectAtIndexedSubscript:]
  -[NRDeviceCollectionHistory .cxx_destruct]
  -[NRDeviceCollectionHistory addObserverQueue:withBlock:]
  -[NRDeviceCollectionHistory deviceCollection]
  -[NRDeviceCollectionHistory _createIndex]
  -[NRDeviceCollectionHistory encodeWithCoder:]
  -[NRDeviceCollectionHistory protobuf]
  -[NRDeviceCollectionHistory _truncateHistory]
  -[NRDeviceCollectionHistory countByEnumeratingWithState:objects:count:]
  -[NRDeviceCollectionHistory dirty]
  -[NRDeviceCollectionHistory switchDeviceIDFromDiff:]
  -[NRDeviceCollectionHistory nextIndex]
  -[NRDeviceCollectionHistory notifyHistoryObserversWithEntry:]
  -[NRDeviceCollectionHistory child:didApplyDiff:]
  -[NRDeviceCollectionHistory isEqual:]
  -[NRDeviceCollectionHistory count]
  -[NRDeviceCollectionHistory _updateHistoryCachesWithIndex:]
  -[NRDeviceCollectionHistory removeObserver:]
  -[NRDeviceCollectionHistory _findIndexInHistoryStateCache:type:]
  -[NRDeviceCollectionHistory historyEntryAtIndex:]
  -[NRDeviceCollectionHistory initWithProtobuf:]
  -[NRDeviceCollectionHistory invalidate]
  -[NRDeviceCollectionHistory _mostRecentStateBefore:]
  -[NRDeviceCollectionHistory applyDiff:]
  -[NRDeviceCollectionHistory initWithCoder:]
  -[NRDeviceCollectionHistory deviceIDAtSwitchIndex:date:]


NRRegistryHistoryStore : NRRegistry
 @property  NRDeviceCollectionHistory *history

  // class methods
  +[NRRegistryHistoryStore sharedInstance]

  // instance methods
  -[NRRegistryHistoryStore addDiffIndexObserverWithWriteBlock:]
  -[NRRegistryHistoryStore collection]
  -[NRRegistryHistoryStore _notifyObserversSecurePropertiesAreAvailableWithCollection:secureProperties:]
  -[NRRegistryHistoryStore removeDiffIndexObserver:]
  -[NRRegistryHistoryStore grabHistoryWithReadBlock:]
  -[NRRegistryHistoryStore setCollection:]
  -[NRRegistryHistoryStore history]
  -[NRRegistryHistoryStore syncGrabHistoryWithReadBlock:]
  -[NRRegistryHistoryStore dealloc]
  -[NRRegistryHistoryStore .cxx_destruct]
  -[NRRegistryHistoryStore syncGrabHistoryWithWriteBlock:]
  -[NRRegistryHistoryStore grabHistoryWithWriteBlock:]
  -[NRRegistryHistoryStore initWithParameters:]
  -[NRRegistryHistoryStore _notifyDiffIndexObserversWithHistoryEntry:deviceCollection:secureProperties:]
  -[NRRegistryHistoryStore invalidate]


NRRegistryProxy : NRXPCProxy <NRXPCRegistryDelegate>
  // class methods
  +[NRRegistryProxy clientRemoteObjectInterface]
  +[NRRegistryProxy entitlements]
  +[NRRegistryProxy requireAnEntitlement]
  +[NRRegistryProxy machServiceName]
  +[NRRegistryProxy serverExportedInterface]

  // instance methods
  -[NRRegistryProxy xpcGetDeviceCollectionWithBlock:]
  -[NRRegistryProxy xpcGetDiffSinceTokenValue:getSecureProperties:withBlock:]
  -[NRRegistryProxy xpcRetrieveSecureProperties:block:]
  -[NRRegistryProxy xpcGetChangeHistoryWithBlock:]
  -[NRRegistryProxy xpcSwitchIndex:]
  -[NRRegistryProxy xpcDeviceIDAtSwitchIndex:withBlock:]
  -[NRRegistryProxy xpcClientInfo:]
  -[NRRegistryProxy xpcApplyDiff:withSecureProperties:block:]
  -[NRRegistryProxy logCaller:args:]
  -[NRRegistryProxy xpcSetMigrationConsented:forDeviceID:withBlock:]
  -[NRRegistryProxy loudHasEntitlement:]
  -[NRRegistryProxy registryDelegate]
  -[NRRegistryProxy _hasInternalEntitlement]


NRPBDeviceCollectionHistoryEntry : PBCodable /usr/lib/libSystem.B.dylib <NSCopying>
 @property  BOOL hasIndex
 @property  long long index
 @property  BOOL hasDate
 @property  double date
 @property  BOOL hasDiff
 @property  NRPBDeviceCollectionDiff *diff

  // instance methods
  -[NRPBDeviceCollectionHistoryEntry copyWithZone:]
  -[NRPBDeviceCollectionHistoryEntry index]
  -[NRPBDeviceCollectionHistoryEntry diff]
  -[NRPBDeviceCollectionHistoryEntry setIndex:]
  -[NRPBDeviceCollectionHistoryEntry setHasIndex:]
  -[NRPBDeviceCollectionHistoryEntry .cxx_destruct]
  -[NRPBDeviceCollectionHistoryEntry hasDate]
  -[NRPBDeviceCollectionHistoryEntry date]
  -[NRPBDeviceCollectionHistoryEntry setDate:]
  -[NRPBDeviceCollectionHistoryEntry hasIndex]
  -[NRPBDeviceCollectionHistoryEntry hasDiff]
  -[NRPBDeviceCollectionHistoryEntry setDiff:]
  -[NRPBDeviceCollectionHistoryEntry readFrom:]
  -[NRPBDeviceCollectionHistoryEntry setHasDate:]
  -[NRPBDeviceCollectionHistoryEntry writeTo:]
  -[NRPBDeviceCollectionHistoryEntry isEqual:]
  -[NRPBDeviceCollectionHistoryEntry copyTo:]
  -[NRPBDeviceCollectionHistoryEntry dictionaryRepresentation]
  -[NRPBDeviceCollectionHistoryEntry mergeFrom:]


NRRegistry : NSObject /usr/lib/libc++.1.dylib <NRMutableStateParentDelegate>
 @property  NSObject<OS_dispatch_queue> *managementQueue
 @property  NRMutableDeviceCollection *collection
 @property  NRMutableDeviceCollection *queueCollection
 @property  NRSecureDevicePropertyStore *secureProperties

  // class methods
  +[NRRegistry registerNotifyTokenWithName:withQueue:withBlock:]
  +[NRRegistry _nextToken]
  +[NRRegistry getReferencedSecureProperties:fromDiff:]
  +[NRRegistry getReferencedSecurePropertyIDsFromDiff:]
  +[NRRegistry fixSecurePropertiesWithCollection:secureProperties:insecurePropertyNames:]
  +[NRRegistry readNotifyToken:]

  // instance methods
  -[NRRegistry secureProperties]
  -[NRRegistry setSecureProperties:]
  -[NRRegistry addSecurePropertiesObserverWithReadBlock:]
  -[NRRegistry enqueueForWriteAsync:bypassSuspend:]
  -[NRRegistry enqueueForRead:bypassSuspend:]
  -[NRRegistry grabRegistryWithWriteBlockAsync:]
  -[NRRegistry setQueueCollection:]
  -[NRRegistry enqueueForWriteAsync:]
  -[NRRegistry removeSecurePropertiesObserver:]
  -[NRRegistry collection]
  -[NRRegistry managementQueue]
  -[NRRegistry _notifyObserversSecurePropertiesAreAvailableWithCollection:secureProperties:]
  -[NRRegistry syncGrabRegistryWithReadBlock:]
  -[NRRegistry enqueueForReadUnlessSuspended:]
  -[NRRegistry grabRegistryWithReadBlock:]
  -[NRRegistry grabRegistryWithReadBlockAsync:]
  -[NRRegistry syncGrabRegistryWithWriteBlock:]
  -[NRRegistry queueCollection]
  -[NRRegistry _startQueue]
  -[NRRegistry addDiffObserverWithWriteBlock:]
  -[NRRegistry enqueueForReadAsync:]
  -[NRRegistry performUnderCollectionLock:]
  -[NRRegistry removeDiffObserver:]
  -[NRRegistry setCollection:]
  -[NRRegistry supportsWatch]
  -[NRRegistry _notifyDiffObserversWithDiff:deviceCollection:secureProperties:]
  -[NRRegistry enqueueForRead:]
  -[NRRegistry enqueueForReadAsync:bypassSuspend:]
  -[NRRegistry init]
  -[NRRegistry .cxx_destruct]
  -[NRRegistry child:didApplyDiff:]
  -[NRRegistry initWithParameters:]
  -[NRRegistry invalidate]


NRXPCProxy : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL invalidated
 @property  int pid
 @property  NSString *appPath
 @property  id target
 @property  id remoteObjectProxy
 @property  <NRNSXPCConnectionProtocol> *connection
 @property  BOOL monitorClientForSuspension

  // class methods
  +[NRXPCProxy clientRemoteObjectInterface]
  +[NRXPCProxy clientExportedInterface]
  +[NRXPCProxy entitlements]
  +[NRXPCProxy requireAnEntitlement]
  +[NRXPCProxy machServiceName]
  +[NRXPCProxy serverRemoteObjectInterface]
  +[NRXPCProxy serverExportedInterface]

  // instance methods
  -[NRXPCProxy hasEntitlement:]
  -[NRXPCProxy target]
  -[NRXPCProxy .cxx_destruct]
  -[NRXPCProxy appPath]
  -[NRXPCProxy remoteObjectProxy]
  -[NRXPCProxy _invalidate]
  -[NRXPCProxy invalidated]
  -[NRXPCProxy pid]
  -[NRXPCProxy hasEntitlements]
  -[NRXPCProxy setMonitorClientForSuspension:]
  -[NRXPCProxy initWithConnection:delegate:xpcTarget:entitlementBitmask:]
  -[NRXPCProxy monitorClientForSuspension]
  -[NRXPCProxy connection]


NRDataFileHistoryHelpers : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[NRDataFileHistoryHelpers unarchiveDeviceHistory]
  +[NRDataFileHistoryHelpers unarchiveSecureProperties]
  +[NRDataFileHistoryHelpers createMissingDates:]
  +[NRDataFileHistoryHelpers archiveSecureProperties:]
  +[NRDataFileHistoryHelpers archiveDeviceHistory:]


NRSecureDevicePropertyID : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
  // class methods
  +[NRSecureDevicePropertyID supportsSecureCoding]

  // instance methods
  -[NRSecureDevicePropertyID copyWithZone:]
  -[NRSecureDevicePropertyID init]
  -[NRSecureDevicePropertyID .cxx_destruct]
  -[NRSecureDevicePropertyID initWithData:]
  -[NRSecureDevicePropertyID encodeWithCoder:]
  -[NRSecureDevicePropertyID data]
  -[NRSecureDevicePropertyID initWithPropertyString:]
  -[NRSecureDevicePropertyID isEqual:]
  -[NRSecureDevicePropertyID initWithCoder:]


NRSecureDevicePropertyStore : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, NSCopying>
 @property  BOOL dirty

  // class methods
  +[NRSecureDevicePropertyStore supportsSecureCoding]
  +[NRSecureDevicePropertyStore classTypes]
  +[NRSecureDevicePropertyStore enclosedClassTypes]

  // instance methods
  -[NRSecureDevicePropertyStore copyWithZone:]
  -[NRSecureDevicePropertyStore allSecurePropertyIDs]
  -[NRSecureDevicePropertyStore objectForKeyedSubscript:]
  -[NRSecureDevicePropertyStore init]
  -[NRSecureDevicePropertyStore .cxx_destruct]
  -[NRSecureDevicePropertyStore encodeWithCoder:]
  -[NRSecureDevicePropertyStore forceImportSecureProperties:]
  -[NRSecureDevicePropertyStore countByEnumeratingWithState:objects:count:]
  -[NRSecureDevicePropertyStore dirty]
  -[NRSecureDevicePropertyStore securePropertyForID:]
  -[NRSecureDevicePropertyStore removeSecureProperty:]
  -[NRSecureDevicePropertyStore count]
  -[NRSecureDevicePropertyStore storeSecureProperty:]
  -[NRSecureDevicePropertyStore forceWriteSecurePropertyID:withValue:]
  -[NRSecureDevicePropertyStore initWithCoder:]


NRMutableDevice : NRMutableStateBase <NRMutableStateParentDelegate, NSFastEnumeration>
 @property  NSUUID *pairingID
 @property  BOOL isPaired
 @property  BOOL isActive
 @property  BOOL isArchived
 @property  BOOL migratable
 @property  BOOL isAltAccount
 @property  NRPBMutableDevice *protobuf

  // class methods
  +[NRMutableDevice supportsSecureCoding]
  +[NRMutableDevice enclosedClassTypes]
  +[NRMutableDevice diffsToActivate:withDate:]
  +[NRMutableDevice diffsToPair:withDate:]
  +[NRMutableDevice diffsToSetStatusCode:andCompatibilityState:]
  +[NRMutableDevice diffsToSetStatusCode:]
  +[NRMutableDevice diffsToClearStatusCodeAndCompatibilityState]
  +[NRMutableDevice diffFrom:to:]
  +[NRMutableDevice parseDiff:forPropertyChange:withBlock:]

  // instance methods
  -[NRMutableDevice copyWithZone:]
  -[NRMutableDevice objectForKeyedSubscript:]
  -[NRMutableDevice init]
  -[NRMutableDevice isPaired]
  -[NRMutableDevice .cxx_destruct]
  -[NRMutableDevice setObject:forKeyedSubscript:]
  -[NRMutableDevice pairingID]
  -[NRMutableDevice encodeWithCoder:]
  -[NRMutableDevice protobuf]
  -[NRMutableDevice setProtobuf:]
  -[NRMutableDevice countByEnumeratingWithState:objects:count:]
  -[NRMutableDevice isActive]
  -[NRMutableDevice propertyForName:]
  -[NRMutableDevice child:didApplyDiff:]
  -[NRMutableDevice applyDiff:upOnly:notifyParent:unconditional:]
  -[NRMutableDevice isEqual:]
  -[NRMutableDevice count]
  -[NRMutableDevice _createIndex:]
  -[NRMutableDevice isAltAccount]
  -[NRMutableDevice allPropertyNames]
  -[NRMutableDevice initWithProtobuf:]
  -[NRMutableDevice invalidate]
  -[NRMutableDevice isArchived]
  -[NRMutableDevice removePropertyForName:]
  -[NRMutableDevice setProperty:forName:]
  -[NRMutableDevice initWithCoder:]
  -[NRMutableDevice migratable]
  -[NRMutableDevice supportsCapability:]


NRPBProperty : PBCodable /usr/lib/libSystem.B.dylib <NSCopying>
 @property  BOOL hasName
 @property  NSString *name
 @property  BOOL hasValue
 @property  NRPBPropertyValue *value

  // instance methods
  -[NRPBProperty copyWithZone:]
  -[NRPBProperty hasValue]
  -[NRPBProperty hasName]
  -[NRPBProperty .cxx_destruct]
  -[NRPBProperty name]
  -[NRPBProperty readFrom:]
  -[NRPBProperty writeTo:]
  -[NRPBProperty setValue:]
  -[NRPBProperty isEqual:]
  -[NRPBProperty value]
  -[NRPBProperty copyTo:]
  -[NRPBProperty dictionaryRepresentation]
  -[NRPBProperty mergeFrom:]
  -[NRPBProperty setName:]


NRPBMigrationDeviceInfo : PBCodable /usr/lib/libSystem.B.dylib <NSCopying>
 @property  BOOL hasID
 @property  NSData *iD
 @property  BOOL hasName
 @property  NSString *name
 @property  BOOL hasAdvertisedName
 @property  NSString *advertisedName

  // instance methods
  -[NRPBMigrationDeviceInfo iD]
  -[NRPBMigrationDeviceInfo copyWithZone:]
  -[NRPBMigrationDeviceInfo hasID]
  -[NRPBMigrationDeviceInfo setID:]
  -[NRPBMigrationDeviceInfo hasName]
  -[NRPBMigrationDeviceInfo .cxx_destruct]
  -[NRPBMigrationDeviceInfo name]
  -[NRPBMigrationDeviceInfo setAdvertisedName:]
  -[NRPBMigrationDeviceInfo advertisedName]
  -[NRPBMigrationDeviceInfo readFrom:]
  -[NRPBMigrationDeviceInfo writeTo:]
  -[NRPBMigrationDeviceInfo hasAdvertisedName]
  -[NRPBMigrationDeviceInfo isEqual:]
  -[NRPBMigrationDeviceInfo copyTo:]
  -[NRPBMigrationDeviceInfo dictionaryRepresentation]
  -[NRPBMigrationDeviceInfo mergeFrom:]
  -[NRPBMigrationDeviceInfo setName:]


NRActiveDeviceAssertion : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL isActive
 @property  NRDevice *device

  // instance methods
  -[NRActiveDeviceAssertion device]
  -[NRActiveDeviceAssertion dealloc]
  -[NRActiveDeviceAssertion .cxx_destruct]
  -[NRActiveDeviceAssertion isActive]
  -[NRActiveDeviceAssertion invalidate]


NRPBCompressedData : PBCodable /usr/lib/libSystem.B.dylib <NSCopying>
 @property  BOOL hasCompressed
 @property  BOOL compressed
 @property  BOOL hasPossiblyCompressedData
 @property  NSData *possiblyCompressedData

  // instance methods
  -[NRPBCompressedData copyWithZone:]
  -[NRPBCompressedData compressed]
  -[NRPBCompressedData .cxx_destruct]
  -[NRPBCompressedData setCompressed:]
  -[NRPBCompressedData setPossiblyCompressedData:]
  -[NRPBCompressedData possiblyCompressedData]
  -[NRPBCompressedData setHasCompressed:]
  -[NRPBCompressedData hasCompressed]
  -[NRPBCompressedData readFrom:]
  -[NRPBCompressedData writeTo:]
  -[NRPBCompressedData hasPossiblyCompressedData]
  -[NRPBCompressedData isEqual:]
  -[NRPBCompressedData copyTo:]
  -[NRPBCompressedData dictionaryRepresentation]
  -[NRPBCompressedData mergeFrom:]


NRActiveDeviceAssertionMonitor : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL hasActiveAssertion

  // class methods
  +[NRActiveDeviceAssertionMonitor sharedInstance]

  // instance methods
  -[NRActiveDeviceAssertionMonitor .cxx_destruct]
  -[NRActiveDeviceAssertionMonitor hasActiveAssertion]
  -[NRActiveDeviceAssertionMonitor removeObserver:]
  -[NRActiveDeviceAssertionMonitor addObserver:]


NRPBDeviceCollectionDiff : PBCodable /usr/lib/libSystem.B.dylib <NSCopying>
 @property  NSMutableArray *pairingIDs
 @property  NSMutableArray *diffs

  // class methods
  +[NRPBDeviceCollectionDiff pairingIDsType]
  +[NRPBDeviceCollectionDiff diffsType]

  // instance methods
  -[NRPBDeviceCollectionDiff copyWithZone:]
  -[NRPBDeviceCollectionDiff diffs]
  -[NRPBDeviceCollectionDiff pairingIDs]
  -[NRPBDeviceCollectionDiff addPairingIDs:]
  -[NRPBDeviceCollectionDiff .cxx_destruct]
  -[NRPBDeviceCollectionDiff pairingIDsCount]
  -[NRPBDeviceCollectionDiff clearDiffs]
  -[NRPBDeviceCollectionDiff readFrom:]
  -[NRPBDeviceCollectionDiff setPairingIDs:]
  -[NRPBDeviceCollectionDiff clearPairingIDs]
  -[NRPBDeviceCollectionDiff writeTo:]
  -[NRPBDeviceCollectionDiff addDiffs:]
  -[NRPBDeviceCollectionDiff diffsCount]
  -[NRPBDeviceCollectionDiff diffsAtIndex:]
  -[NRPBDeviceCollectionDiff setDiffs:]
  -[NRPBDeviceCollectionDiff isEqual:]
  -[NRPBDeviceCollectionDiff pairingIDsAtIndex:]
  -[NRPBDeviceCollectionDiff copyTo:]
  -[NRPBDeviceCollectionDiff dictionaryRepresentation]
  -[NRPBDeviceCollectionDiff mergeFrom:]


NRDeviceDiffType : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  NRDeviceDiff *diff
 @property  unsigned long changeType
 @property  NRPBDeviceDiffType *protobuf

  // class methods
  +[NRDeviceDiffType supportsSecureCoding]

  // instance methods
  -[NRDeviceDiffType copyWithZone:]
  -[NRDeviceDiffType diff]
  -[NRDeviceDiffType .cxx_destruct]
  -[NRDeviceDiffType encodeWithCoder:]
  -[NRDeviceDiffType protobuf]
  -[NRDeviceDiffType initWithDiff:andChangeType:]
  -[NRDeviceDiffType isEqual:]
  -[NRDeviceDiffType changeType]
  -[NRDeviceDiffType initWithProtobuf:]
  -[NRDeviceDiffType initWithCoder:]


NRDeviceCollectionDiff : NRDiffBase <NSFastEnumeration>
 @property  NRPBDeviceCollectionDiff *protobuf

  // class methods
  +[NRDeviceCollectionDiff supportsSecureCoding]

  // instance methods
  -[NRDeviceCollectionDiff objectForKeyedSubscript:]
  -[NRDeviceCollectionDiff .cxx_destruct]
  -[NRDeviceCollectionDiff allPairingIDs]
  -[NRDeviceCollectionDiff encodeWithCoder:]
  -[NRDeviceCollectionDiff protobuf]
  -[NRDeviceCollectionDiff countByEnumeratingWithState:objects:count:]
  -[NRDeviceCollectionDiff diffCollectionDiffForPairingID:]
  -[NRDeviceCollectionDiff isEqual:]
  -[NRDeviceCollectionDiff count]
  -[NRDeviceCollectionDiff initWithDeviceCollectionDiffDeviceDiffs:]
  -[NRDeviceCollectionDiff initWithProtobuf:]
  -[NRDeviceCollectionDiff initWithCoder:]


NRKeyedUnarchiver : NSKeyedUnarchiver /usr/lib/libobjc.A.dylib

NRDevice : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  NSUUID *pairingID

  // class methods
  +[NRDevice supportsSecureCoding]

  // instance methods
  -[NRDevice objectForKeyedSubscript:]
  -[NRDevice init]
  -[NRDevice valueForProperty:]
  -[NRDevice dealloc]
  -[NRDevice .cxx_destruct]
  -[NRDevice initWithQueue:]
  -[NRDevice pairingID]
  -[NRDevice _setValue:forProperty:]
  -[NRDevice encodeWithCoder:]
  -[NRDevice archived]
  -[NRDevice initWithRegistry:diff:pairingID:notify:]
  -[NRDevice canMigrate]
  -[NRDevice migrationError]
  -[NRDevice migrationConfirmed]
  -[NRDevice propertyNames]
  -[NRDevice registerForPropertyChanges:withBlock:]
  -[NRDevice unregisterForPropertyChanges:withBlock:]
  -[NRDevice invalidate]
  -[NRDevice setValue:forProperty:]
  -[NRDevice addPropertyObserver:forPropertyChanges:]
  -[NRDevice removePropertyObserver:forPropertyChanges:]
  -[NRDevice initWithCoder:]
  -[NRDevice supportsCapability:]


NRMagicSwitchHelper : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[NRMagicSwitchHelper companionSeed]
  +[NRMagicSwitchHelper clearCompanionSeed]


NRMutableDeviceProperty : NRMutableStateBase
 @property  <NSObject><NSCopying> *value
 @property  NRPBMutableDeviceProperty *protobuf

  // class methods
  +[NRMutableDeviceProperty supportsSecureCoding]
  +[NRMutableDeviceProperty enclosedClassTypes]
  +[NRMutableDeviceProperty diffFrom:to:]

  // instance methods
  -[NRMutableDeviceProperty copyWithZone:]
  -[NRMutableDeviceProperty init]
  -[NRMutableDeviceProperty initWithValue:]
  -[NRMutableDeviceProperty .cxx_destruct]
  -[NRMutableDeviceProperty encodeWithCoder:]
  -[NRMutableDeviceProperty protobuf]
  -[NRMutableDeviceProperty setProtobuf:]
  -[NRMutableDeviceProperty applyDiff:upOnly:notifyParent:unconditional:]
  -[NRMutableDeviceProperty setValue:]
  -[NRMutableDeviceProperty isEqual:]
  -[NRMutableDeviceProperty value]
  -[NRMutableDeviceProperty initWithProtobuf:]
  -[NRMutableDeviceProperty initWithCoder:]


NRTextFormattingUtilities : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[NRTextFormattingUtilities dateFormatter:]
  +[NRTextFormattingUtilities prefixLinesWithString:withText:]
  +[NRTextFormattingUtilities nameCounter:]


NRPBDeviceDiffType : PBCodable /usr/lib/libSystem.B.dylib <NSCopying>
 @property  BOOL hasChangeType
 @property  int changeType
 @property  BOOL hasDiff
 @property  NRPBDeviceDiff *diff

  // instance methods
  -[NRPBDeviceDiffType copyWithZone:]
  -[NRPBDeviceDiffType diff]
  -[NRPBDeviceDiffType .cxx_destruct]
  -[NRPBDeviceDiffType changeTypeAsString:]
  -[NRPBDeviceDiffType hasChangeType]
  -[NRPBDeviceDiffType setHasChangeType:]
  -[NRPBDeviceDiffType hasDiff]
  -[NRPBDeviceDiffType StringAsChangeType:]
  -[NRPBDeviceDiffType setDiff:]
  -[NRPBDeviceDiffType readFrom:]
  -[NRPBDeviceDiffType writeTo:]
  -[NRPBDeviceDiffType isEqual:]
  -[NRPBDeviceDiffType changeType]
  -[NRPBDeviceDiffType copyTo:]
  -[NRPBDeviceDiffType dictionaryRepresentation]
  -[NRPBDeviceDiffType setChangeType:]
  -[NRPBDeviceDiffType mergeFrom:]


NRMutableDeviceCollection : NRMutableStateBase <NRMutableStateParentDelegate, NSFastEnumeration>
 @property  NRMutableDevice *activeDevice
 @property  NSUUID *activeDeviceID
 @property  BOOL isPaired
 @property  BOOL isAllAltAccount
 @property  NRPBMutableDeviceCollection *protobuf

  // class methods
  +[NRMutableDeviceCollection supportsSecureCoding]
  +[NRMutableDeviceCollection diffFrom:to:]
  +[NRMutableDeviceCollection parseDiff:forPropertyChange:withBlock:]

  // instance methods
  -[NRMutableDeviceCollection paired]
  -[NRMutableDeviceCollection copyWithZone:]
  -[NRMutableDeviceCollection objectForKeyedSubscript:]
  -[NRMutableDeviceCollection init]
  -[NRMutableDeviceCollection allAltAccount]
  -[NRMutableDeviceCollection .cxx_destruct]
  -[NRMutableDeviceCollection activeDeviceID]
  -[NRMutableDeviceCollection setObject:forKeyedSubscript:]
  -[NRMutableDeviceCollection _createIndex]
  -[NRMutableDeviceCollection setDevice:forPairingID:]
  -[NRMutableDeviceCollection allPairingIDs]
  -[NRMutableDeviceCollection deviceForPairingID:]
  -[NRMutableDeviceCollection encodeWithCoder:]
  -[NRMutableDeviceCollection protobuf]
  -[NRMutableDeviceCollection setProtobuf:]
  -[NRMutableDeviceCollection countByEnumeratingWithState:objects:count:]
  -[NRMutableDeviceCollection setActiveDeviceID:]
  -[NRMutableDeviceCollection child:didApplyDiff:]
  -[NRMutableDeviceCollection applyDiff:upOnly:notifyParent:unconditional:]
  -[NRMutableDeviceCollection isEqual:]
  -[NRMutableDeviceCollection _diffsToChangeActiveDeviceToDeviceID:]
  -[NRMutableDeviceCollection count]
  -[NRMutableDeviceCollection activeDevice]
  -[NRMutableDeviceCollection removeDeviceForPairingID:]
  -[NRMutableDeviceCollection initWithProtobuf:]
  -[NRMutableDeviceCollection invalidate]
  -[NRMutableDeviceCollection initWithCoder:]


NRClientInfo : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  NSString *processName

  // class methods
  +[NRClientInfo supportsSecureCoding]

  // instance methods
  -[NRClientInfo copyWithZone:]
  -[NRClientInfo setProcessName:]
  -[NRClientInfo processName]
  -[NRClientInfo .cxx_destruct]
  -[NRClientInfo encodeWithCoder:]
  -[NRClientInfo initWithCoder:]


NRPBDevicePropertyDiff : PBCodable /usr/lib/libSystem.B.dylib <NSCopying>
 @property  BOOL hasValue
 @property  NRPBPropertyValue *value

  // instance methods
  -[NRPBDevicePropertyDiff copyWithZone:]
  -[NRPBDevicePropertyDiff hasValue]
  -[NRPBDevicePropertyDiff .cxx_destruct]
  -[NRPBDevicePropertyDiff readFrom:]
  -[NRPBDevicePropertyDiff writeTo:]
  -[NRPBDevicePropertyDiff setValue:]
  -[NRPBDevicePropertyDiff isEqual:]
  -[NRPBDevicePropertyDiff value]
  -[NRPBDevicePropertyDiff copyTo:]
  -[NRPBDevicePropertyDiff dictionaryRepresentation]
  -[NRPBDevicePropertyDiff mergeFrom:]


NRDevicePropertyDiff : NRDiffBase
 @property  <NSObject><NSCopying> *value
 @property  NRPBDevicePropertyDiff *protobuf

  // class methods
  +[NRDevicePropertyDiff supportsSecureCoding]
  +[NRDevicePropertyDiff enclosedClassTypes]
  +[NRDevicePropertyDiff unpackPropertyValue:]
  +[NRDevicePropertyDiff packPropertyValue:]

  // instance methods
  -[NRDevicePropertyDiff copyWithZone:]
  -[NRDevicePropertyDiff initWithValue:]
  -[NRDevicePropertyDiff .cxx_destruct]
  -[NRDevicePropertyDiff encodeWithCoder:]
  -[NRDevicePropertyDiff protobuf]
  -[NRDevicePropertyDiff isEqual:]
  -[NRDevicePropertyDiff value]
  -[NRDevicePropertyDiff initWithProtobuf:]
  -[NRDevicePropertyDiff initWithCoder:]


NRConnectivitySubscriber : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[NRConnectivitySubscriber getDropoutCounter:]

  // instance methods
  -[NRConnectivitySubscriber init]


NRPBDeviceDiff : PBCodable /usr/lib/libSystem.B.dylib <NSCopying>
 @property  NSMutableArray *names
 @property  NSMutableArray *diffs

  // class methods
  +[NRPBDeviceDiff diffsType]
  +[NRPBDeviceDiff namesType]

  // instance methods
  -[NRPBDeviceDiff copyWithZone:]
  -[NRPBDeviceDiff diffs]
  -[NRPBDeviceDiff namesCount]
  -[NRPBDeviceDiff names]
  -[NRPBDeviceDiff .cxx_destruct]
  -[NRPBDeviceDiff clearDiffs]
  -[NRPBDeviceDiff readFrom:]
  -[NRPBDeviceDiff writeTo:]
  -[NRPBDeviceDiff addDiffs:]
  -[NRPBDeviceDiff diffsCount]
  -[NRPBDeviceDiff diffsAtIndex:]
  -[NRPBDeviceDiff setDiffs:]
  -[NRPBDeviceDiff addNames:]
  -[NRPBDeviceDiff namesAtIndex:]
  -[NRPBDeviceDiff isEqual:]
  -[NRPBDeviceDiff setNames:]
  -[NRPBDeviceDiff copyTo:]
  -[NRPBDeviceDiff dictionaryRepresentation]
  -[NRPBDeviceDiff clearNames]
  -[NRPBDeviceDiff mergeFrom:]


NRPBTermsEvent : PBCodable /usr/lib/libSystem.B.dylib <NSCopying>
 @property  BOOL hasEventType
 @property  int eventType
 @property  BOOL hasTermsText
 @property  NSData *termsText
 @property  BOOL hasDocumentationID
 @property  NSString *documentationID
 @property  BOOL hasPresentationReason
 @property  NSString *presentationReason
 @property  BOOL hasPresentationLocation
 @property  int presentationLocation
 @property  BOOL hasAcknowledgedDeviceName
 @property  NSString *acknowledgedDeviceName
 @property  BOOL hasAcknowledgedDeviceSerialNumber
 @property  NSString *acknowledgedDeviceSerialNumber
 @property  BOOL hasDisplayDeviceName
 @property  NSString *displayDeviceName
 @property  BOOL hasDisplayDeviceSerialNumber
 @property  NSString *displayDeviceSerialNumber
 @property  BOOL hasEventDate
 @property  double eventDate
 @property  BOOL hasLoggingProcessName
 @property  NSString *loggingProcessName

  // instance methods
  -[NRPBTermsEvent copyWithZone:]
  -[NRPBTermsEvent hasEventDate]
  -[NRPBTermsEvent setEventType:]
  -[NRPBTermsEvent eventDate]
  -[NRPBTermsEvent presentationReason]
  -[NRPBTermsEvent hasEventType]
  -[NRPBTermsEvent setHasEventType:]
  -[NRPBTermsEvent setPresentationReason:]
  -[NRPBTermsEvent .cxx_destruct]
  -[NRPBTermsEvent eventType]
  -[NRPBTermsEvent termsText]
  -[NRPBTermsEvent setTermsText:]
  -[NRPBTermsEvent setDocumentationID:]
  -[NRPBTermsEvent setPresentationLocation:]
  -[NRPBTermsEvent setEventDate:]
  -[NRPBTermsEvent setAcknowledgedDeviceName:]
  -[NRPBTermsEvent setAcknowledgedDeviceSerialNumber:]
  -[NRPBTermsEvent setDisplayDeviceName:]
  -[NRPBTermsEvent setDisplayDeviceSerialNumber:]
  -[NRPBTermsEvent setLoggingProcessName:]
  -[NRPBTermsEvent readFrom:]
  -[NRPBTermsEvent writeTo:]
  -[NRPBTermsEvent hasTermsText]
  -[NRPBTermsEvent hasDocumentationID]
  -[NRPBTermsEvent isEqual:]
  -[NRPBTermsEvent setHasPresentationLocation:]
  -[NRPBTermsEvent hasPresentationLocation]
  -[NRPBTermsEvent hasAcknowledgedDeviceName]
  -[NRPBTermsEvent hasAcknowledgedDeviceSerialNumber]
  -[NRPBTermsEvent hasDisplayDeviceName]
  -[NRPBTermsEvent hasDisplayDeviceSerialNumber]
  -[NRPBTermsEvent hasLoggingProcessName]
  -[NRPBTermsEvent documentationID]
  -[NRPBTermsEvent presentationLocation]
  -[NRPBTermsEvent acknowledgedDeviceName]
  -[NRPBTermsEvent acknowledgedDeviceSerialNumber]
  -[NRPBTermsEvent displayDeviceName]
  -[NRPBTermsEvent displayDeviceSerialNumber]
  -[NRPBTermsEvent loggingProcessName]
  -[NRPBTermsEvent hasPresentationReason]
  -[NRPBTermsEvent copyTo:]
  -[NRPBTermsEvent dictionaryRepresentation]
  -[NRPBTermsEvent mergeFrom:]
  -[NRPBTermsEvent setHasEventDate:]


NRBypassQueue : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[NRBypassQueue suspend]
  -[NRBypassQueue init]
  -[NRBypassQueue resume]
  -[NRBypassQueue .cxx_destruct]
  -[NRBypassQueue enqueueBlockAsync:]
  -[NRBypassQueue enqueueBypassBlock:]
  -[NRBypassQueue enqueueBypassBlockAsync:]
  -[NRBypassQueue invalidate]
  -[NRBypassQueue enqueueBlock:]


NRSystemVersionRequest : NSObject /usr/lib/libc++.1.dylib <NRSystemVersionRequest>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NRSystemVersionRequest sendVersionRequestToCompanion]


NRDevicePropertyDiffType : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  NRDevicePropertyDiff *diff
 @property  unsigned long changeType
 @property  NRPBDevicePropertyDiffType *protobuf

  // class methods
  +[NRDevicePropertyDiffType supportsSecureCoding]

  // instance methods
  -[NRDevicePropertyDiffType copyWithZone:]
  -[NRDevicePropertyDiffType diff]
  -[NRDevicePropertyDiffType .cxx_destruct]
  -[NRDevicePropertyDiffType encodeWithCoder:]
  -[NRDevicePropertyDiffType protobuf]
  -[NRDevicePropertyDiffType initWithDiff:andChangeType:]
  -[NRDevicePropertyDiffType isEqual:]
  -[NRDevicePropertyDiffType changeType]
  -[NRDevicePropertyDiffType initWithProtobuf:]
  -[NRDevicePropertyDiffType initWithCoder:]


NRDeviceDiff : NRDiffBase <NSFastEnumeration>
 @property  NRPBDeviceDiff *protobuf

  // class methods
  +[NRDeviceDiff supportsSecureCoding]

  // instance methods
  -[NRDeviceDiff objectForKeyedSubscript:]
  -[NRDeviceDiff .cxx_destruct]
  -[NRDeviceDiff encodeWithCoder:]
  -[NRDeviceDiff protobuf]
  -[NRDeviceDiff diffPropertyDiffForName:]
  -[NRDeviceDiff countByEnumeratingWithState:objects:count:]
  -[NRDeviceDiff initWithDiffPropertyDiffs:]
  -[NRDeviceDiff isEqual:]
  -[NRDeviceDiff count]
  -[NRDeviceDiff allPropertyNames]
  -[NRDeviceDiff initWithProtobuf:]
  -[NRDeviceDiff initWithCoder:]


NRPBMutableDevice : PBCodable /usr/lib/libSystem.B.dylib <NSCopying>
 @property  NSMutableArray *names
 @property  NSMutableArray *properties

  // class methods
  +[NRPBMutableDevice propertiesType]
  +[NRPBMutableDevice namesType]

  // instance methods
  -[NRPBMutableDevice copyWithZone:]
  -[NRPBMutableDevice namesCount]
  -[NRPBMutableDevice names]
  -[NRPBMutableDevice .cxx_destruct]
  -[NRPBMutableDevice setProperties:]
  -[NRPBMutableDevice propertiesCount]
  -[NRPBMutableDevice clearProperties]
  -[NRPBMutableDevice addProperties:]
  -[NRPBMutableDevice propertiesAtIndex:]
  -[NRPBMutableDevice readFrom:]
  -[NRPBMutableDevice writeTo:]
  -[NRPBMutableDevice addNames:]
  -[NRPBMutableDevice namesAtIndex:]
  -[NRPBMutableDevice isEqual:]
  -[NRPBMutableDevice setNames:]
  -[NRPBMutableDevice copyTo:]
  -[NRPBMutableDevice dictionaryRepresentation]
  -[NRPBMutableDevice clearNames]
  -[NRPBMutableDevice properties]
  -[NRPBMutableDevice mergeFrom:]


NRPBDevicePropertyDiffType : PBCodable /usr/lib/libSystem.B.dylib <NSCopying>
 @property  BOOL hasChangeType
 @property  int changeType
 @property  BOOL hasDiff
 @property  NRPBDevicePropertyDiff *diff

  // instance methods
  -[NRPBDevicePropertyDiffType copyWithZone:]
  -[NRPBDevicePropertyDiffType diff]
  -[NRPBDevicePropertyDiffType .cxx_destruct]
  -[NRPBDevicePropertyDiffType changeTypeAsString:]
  -[NRPBDevicePropertyDiffType hasChangeType]
  -[NRPBDevicePropertyDiffType setHasChangeType:]
  -[NRPBDevicePropertyDiffType hasDiff]
  -[NRPBDevicePropertyDiffType StringAsChangeType:]
  -[NRPBDevicePropertyDiffType setDiff:]
  -[NRPBDevicePropertyDiffType readFrom:]
  -[NRPBDevicePropertyDiffType writeTo:]
  -[NRPBDevicePropertyDiffType isEqual:]
  -[NRPBDevicePropertyDiffType changeType]
  -[NRPBDevicePropertyDiffType copyTo:]
  -[NRPBDevicePropertyDiffType dictionaryRepresentation]
  -[NRPBDevicePropertyDiffType setChangeType:]
  -[NRPBDevicePropertyDiffType mergeFrom:]


(InternalUtils)
	// class methods
	+[(InternalUtils) fromUUID:]
	+[(InternalUtils) dataWithRandomBytesOfSize:]

	// instance methods
	-[(InternalUtils) toUUID]
	-[(InternalUtils) NRSHA256]
	-[(InternalUtils) matchesDataAtFilePath:]
	-[(InternalUtils) NRSHA256:]

NSKeyedArchiver(NRSecure)
	// class methods
	+[NSKeyedArchiver(NRSecure) nr_secureArchivedDataWithRootObject:]
	+[NSKeyedArchiver(NRSecure) nr_secureArchiveRootObject:toFile:]
	+[NSKeyedArchiver(NRSecure) nr_secureArchiveRootObject:toFile:withOptions:]

NSKeyedUnarchiver(NRSecure)
	// class methods
	+[NSKeyedUnarchiver(NRSecure) nr_secureUnarchiveObjectOfClasses:withFile:]
	+[NSKeyedUnarchiver(NRSecure) nr_secureUnarchiveObjectOfClasses:withData:]

(NRSafeDescription)
	// instance methods
	-[(NRSafeDescription) nr_safeDescription]
	-[(NRSafeDescription) nr_filteredError]

NSException(NRSafeDescription)
	// instance methods
	-[NSException(NRSafeDescription) nr_safeDescription]

01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileHandle 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexSet 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0700 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSPointerArray 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSProxy 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListener 
01 00 0300 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBCodable 
