|| __DATA.__objc_data _OBJC_CLASS_$_FPDActionOperation
|| __DATA.__objc_data _OBJC_CLASS_$_FPDActionOperationQueue
|| __DATA.__objc_data _OBJC_CLASS_$_FPDDownloadOperation
|| __DATA.__objc_data _OBJC_CLASS_$_FPDMoveAtom
|| __DATA.__objc_data _OBJC_CLASS_$_FPDMoveOperation
|| __DATA.__objc_data _OBJC_CLASS_$_FPDMoveReader
|| __DATA.__objc_data _OBJC_CLASS_$_FPDMoveWriter
|| __DATA.__objc_data _OBJC_METACLASS_$_FPDActionOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_FPDActionOperationQueue
|| __DATA.__objc_data _OBJC_METACLASS_$_FPDDownloadOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_FPDMoveAtom
|| __DATA.__objc_data _OBJC_METACLASS_$_FPDMoveOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_FPDMoveReader
|| __DATA.__objc_data _OBJC_METACLASS_$_FPDMoveWriter
|| __DATA_CONST.__const _FPDAppStoreServiceName
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FPDAccessControlStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FPDAppMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FPDDomain
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FPDDomainIndexer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FPDDownloader
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FPDExtension
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FPDFetchAppLibraryIconOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FPDProcessMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FPDProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FPDProviderDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FPDRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FPDServer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FPDAccessControlStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FPDAppMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FPDDomain
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FPDDomainIndexer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FPDDownloader
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FPDExtension
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FPDFetchAppLibraryIconOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FPDProcessMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FPDProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FPDProviderDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FPDRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FPDServer
|| __TEXT.__text _FPDAppStoreServiceXPCInterface
__ ApplePushService: _APSEnvironmentProduction
__ ApplePushService: _OBJC_CLASS_$_APSConnection
__ AssertionServices: _BKSApplicationStateKey
__ AssertionServices: _BKSApplicationStateMostElevatedStateForProcessIDKey
__ AssertionServices: _BKSApplicationStateProcessIDKey
__ AssertionServices: _OBJC_CLASS_$_BKSApplicationStateMonitor
__ AssertionServices: _OBJC_CLASS_$_BKSProcessAssertion
__ CacheDelete: _CacheDeleteRegisterInfoCallbacks
__ CacheDelete: _CacheDeleteUpdatePurgeable
__ CloudKit: _OBJC_CLASS_$_CKContainer
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFDataCreate
__ CoreFoundation: _CFDataGetBytes
__ CoreFoundation: _CFDataGetLength
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFPreferencesSetAppValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFStringCreateWithBytes
__ CoreFoundation: _CFURLCopyResourcePropertyForKey
__ CoreFoundation: _CFURLCreateFromFileSystemRepresentation
__ CoreFoundation: _CFURLCreateWithFileSystemPathRelativeToBase
__ CoreFoundation: _CFURLEnumeratorCreateForDirectoryURL
__ CoreFoundation: _CFURLEnumeratorGetNextURL
__ CoreFoundation: _NSCurrentLocaleDidChangeNotification
__ CoreFoundation: _NSURLCanonicalPathKey
__ CoreFoundation: _NSURLUbiquitousItemIsSharedKey
__ CoreFoundation: _NSURLUbiquitousSharedItemOwnerNameComponentsKey
__ CoreFoundation: _NSURLVolumeIdentifierKey
__ CoreFoundation: _NSURLVolumeURLKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__
__ CoreFoundation: ___NSDictionary0__
__ CoreFoundation: __kCFBundleDisplayNameKey
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBundleIdentifierKey
__ CoreFoundation: _kCFBundleVersionKey
__ CoreFoundation: _kCFURLIsPackageKey
__ CoreServices: _OBJC_CLASS_$_LSApplicationProxy
__ CoreServices: _OBJC_CLASS_$_LSApplicationWorkspace
__ CoreServices: _OBJC_CLASS_$_LSPlugInKitProxy
__ CoreServices: _kUTTypeItem
__ CoreServices: _kUTTypeSymLink
__ CoreSpotlight: _OBJC_CLASS_$_CSSearchableIndex
__ CrashReporterSupport: _SimulateCrash
__ FileProvider: _FPAccessRead
__ FileProvider: _FPAccessReadMetadata
__ FileProvider: _FPAccessWrite
__ FileProvider: _FPAppRegistryDidRemoveAppsNotification
__ FileProvider: _FPAppRegistryDidUpdateAppsNotification
__ FileProvider: _FPAppRegistryListOfAppsKey
__ FileProvider: _FPAppRegistryListOfBundleIDsKey
__ FileProvider: _FPBookmarkableStringFromIdentifiers
__ FileProvider: _FPClientLacksEntitlement
__ FileProvider: _FPDDaemonXPCInterface
__ FileProvider: _FPDomainUnavailableError
__ FileProvider: _FPExecutableNameForProcessIdentifier
__ FileProvider: _FPFSProviderIsBlacklisted
__ FileProvider: _FPFSProviderIsWhitelisted
__ FileProvider: _FPFileMetadataSetLastUsedDate
__ FileProvider: _FPFileSystemFreeBytes
__ FileProvider: _FPInvalidParameterError
__ FileProvider: _FPInvalidURLError
__ FileProvider: _FPItemNotFoundError
__ FileProvider: _FPItemNotFoundErrorAtURL
__ FileProvider: _FPLoc
__ FileProvider: _FPNotPermittedError
__ FileProvider: _FPNotPermittedWriteError
__ FileProvider: _FPNotSupportedError
__ FileProvider: _FPOSVersion
__ FileProvider: _FPParseBookmarkableString
__ FileProvider: _FPPluginOperationFailedError
__ FileProvider: _FPProviderNotFoundError
__ FileProvider: _FPProviderNotFoundErrorForURL
__ FileProvider: _FPProxyNotFoundError
__ FileProvider: _FPPurposeIdentifierEntitlement
__ FileProvider: _FPQueryCollectionDefaultMountPointIdentifier
__ FileProvider: _FPServerPackageExtensions
__ FileProvider: _FPSetOperationClientOnXPCInterface
__ FileProvider: _FPStatFSFromPath
__ FileProvider: _FPThumbnailFormatBRUndecorated
__ FileProvider: _FPThumbnailFormatLICachedBitmap
__ FileProvider: _FPUserRelativePathsEntitlement
__ FileProvider: _FPVersion
__ FileProvider: _FPXVendorXPCInterface
__ FileProvider: _NSFileProviderDomainDefaultIdentifier
__ FileProvider: _NSFileProviderInitialPageSortedByName
__ FileProvider: _NSFileProviderRootContainerItemIdentifier
__ FileProvider: _NSFileProviderSearchFilterContentTypeIdentifier
__ FileProvider: _NSFileProviderSearchFilterFilename
__ FileProvider: _NSFileProviderSearchFilterScopedToDirectory
__ FileProvider: _NSFileProviderWorkingSetContainerItemIdentifier
__ FileProvider: _OBJC_CLASS_$_FPActionOperationLocator
__ FileProvider: _OBJC_CLASS_$_FPAppMetadata
__ FileProvider: _OBJC_CLASS_$_FPAppRegistry
__ FileProvider: _OBJC_CLASS_$_FPCTLTermDumper
__ FileProvider: _OBJC_CLASS_$_FPDownloadInfo
__ FileProvider: _OBJC_CLASS_$_FPError
__ FileProvider: _OBJC_CLASS_$_FPEvictableItemsQueryDescriptor
__ FileProvider: _OBJC_CLASS_$_FPExtensionEnumerationSettings
__ FileProvider: _OBJC_CLASS_$_FPGracePeriodTimer
__ FileProvider: _OBJC_CLASS_$_FPItem
__ FileProvider: _OBJC_CLASS_$_FPItemID
__ FileProvider: _OBJC_CLASS_$_FPMoveInfo
__ FileProvider: _OBJC_CLASS_$_FPOperation
__ FileProvider: _OBJC_CLASS_$_FPPacer
__ FileProvider: _OBJC_CLASS_$_FPPersistentStringSet
__ FileProvider: _OBJC_CLASS_$_FPProgressProxy
__ FileProvider: _OBJC_CLASS_$_FPProvider
__ FileProvider: _OBJC_CLASS_$_FPProviderMonitor
__ FileProvider: _OBJC_CLASS_$_FPQueryEnumerationSettings
__ FileProvider: _OBJC_CLASS_$_FPSandboxingURLWrapper
__ FileProvider: _OBJC_CLASS_$_FPXPCAutomaticErrorProxy
__ FileProvider: _OBJC_CLASS_$_FPXPCSanitizer
__ FileProvider: _OBJC_CLASS_$_NSFileProviderDomain
__ FileProvider: _OBJC_CLASS_$_NSFileProviderItemVersion
__ FileProvider: _OBJC_CLASS_$_NSFileProviderManager
__ FileProvider: _OBJC_CLASS_$_NSFileProviderRequest
__ FileProvider: _OBJC_METACLASS_$_FPAppRegistry
__ FileProvider: _OBJC_METACLASS_$_FPOperation
__ FileProvider: __FPRestorePersona
__ FileProvider: ___fp_create_section
__ FileProvider: ___fp_leave_section
__ FileProvider: ___fp_pop_log
__ FileProvider: _fp_current_or_default_log
__ FileProvider: _fp_default_log
__ FileProvider: _fp_dispatch_async_with_logs
__ FileProvider: _fp_simulate_crash
__ FileProvider: _fpfs_adopt_log
__ FileProvider: _fpfs_create_log_for_provider
__ FileProvider: _kACLReadEntitlement
__ FileProvider: _kACLWriteEntitlement
__ FileProvider: _kAlternateContentsEntitlement
__ FileProvider: _kCloudDocsAccountManagementEntitlement
__ FileProvider: _kDebugEntitlement
__ FileProvider: _kEnumerateEntitlement
__ FileProvider: _kFetchURLEntitlement
__ FileProvider: _kTestingHarnessEntitlement
__ FileProvider: _kiWorkCollaborationMessagingEntitlement
__ Foundation: _NSClassFromString
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSExtensionPointName
__ Foundation: _NSFileProtectionCompleteUntilFirstUserAuthentication
__ Foundation: _NSPOSIXErrorDomain
__ Foundation: _NSProgressFileOperationKindDownloading
__ Foundation: _NSProgressKindFile
__ Foundation: _NSSelectorFromString
__ Foundation: _NSStringFromSelector
__ Foundation: _NSStringFromSize
__ Foundation: _NSTemporaryDirectory
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSByteCountFormatter
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSCountedSet
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSDistributedNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSExtension
__ Foundation: _OBJC_CLASS_$_NSExtensionContext
__ Foundation: _OBJC_CLASS_$_NSFileAccessIntent
__ Foundation: _OBJC_CLASS_$_NSFileCoordinator
__ Foundation: _OBJC_CLASS_$_NSFileHandle
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableCharacterSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSObservableKeyPath
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProgress
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_CLASS_$_NSXPCListener
__ Foundation: _OBJC_METACLASS_$_NSExtensionContext
__ GenerationalStorage: _GSLibraryGetOrAllocateDocumentId
__ GenerationalStorage: _GSLibraryResolveDocumentId2
__ IconServices: _OBJC_CLASS_$_ISIcon
__ IconServices: _OBJC_CLASS_$_ISImageDescriptor
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ MobileKeyBag: _MKBDeviceUnlockedSinceBoot
__ MobileKeyBag: _MKBGetDeviceLockState
__ PlugInKit: _PKPlugInKitErrorDomain
__ Security: _SecRandomCopyBytes
__ Security: _kSecRandomDefault
__ SetupAssistant: _BYSetupAssistantFinishedDarwinNotification
__ SetupAssistant: _BYSetupAssistantNeedsToRun
__ UserManagement: _OBJC_CLASS_$_UMUserManager
__ libSystem.B.dylib: _CC_SHA1_Final
__ libSystem.B.dylib: _CC_SHA1_Init
__ libSystem.B.dylib: _CC_SHA1_Update
__ libSystem.B.dylib: _SANDBOX_CHECK_NO_REPORT
__ libSystem.B.dylib: _XPC_ACTIVITY_ALLOW_BATTERY
__ libSystem.B.dylib: _XPC_ACTIVITY_CHECK_IN
__ libSystem.B.dylib: _XPC_ACTIVITY_GRACE_PERIOD
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_4_HOURS
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY_MAINTENANCE
__ libSystem.B.dylib: _XPC_ACTIVITY_REPEATING
__ libSystem.B.dylib: _XPC_ACTIVITY_REQUIRE_SCREEN_SLEEP
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __Exit
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___delete
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___memmove_chk
__ libSystem.B.dylib: ___snprintf_chk
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___strlcpy_chk
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_signal
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: _abort
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _acl_free
__ libSystem.B.dylib: _acl_get_fd
__ libSystem.B.dylib: _acl_init
__ libSystem.B.dylib: _acl_set_fd
__ libSystem.B.dylib: _asprintf
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _closedir
__ libSystem.B.dylib: _dirname
__ libSystem.B.dylib: _dirstat_np
__ libSystem.B.dylib: _dispatch_activate
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_assert_queue_not$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_block_create_with_qos_class
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_set_qos_class_fallback
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_suspend
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _dup
__ libSystem.B.dylib: _exit
__ libSystem.B.dylib: _fchflags
__ libSystem.B.dylib: _fchmod
__ libSystem.B.dylib: _fcntl
__ libSystem.B.dylib: _fcopyfile
__ libSystem.B.dylib: _fdopendir
__ libSystem.B.dylib: _ffsctl
__ libSystem.B.dylib: _fgetattrlist
__ libSystem.B.dylib: _fgetxattr
__ libSystem.B.dylib: _flistxattr
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _fremovexattr
__ libSystem.B.dylib: _fsetattrlist
__ libSystem.B.dylib: _fsetxattr
__ libSystem.B.dylib: _fstat
__ libSystem.B.dylib: _fstatat
__ libSystem.B.dylib: _fsync
__ libSystem.B.dylib: _ftruncate
__ libSystem.B.dylib: _getattrlistbulk
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _getpwuuid
__ libSystem.B.dylib: _gettimeofday
__ libSystem.B.dylib: _getuid
__ libSystem.B.dylib: _getxattr
__ libSystem.B.dylib: _lstat
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _mbr_uid_to_uuid
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _mkdirat
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_post
__ libSystem.B.dylib: _notify_register_check
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _notify_set_state
__ libSystem.B.dylib: _open
__ libSystem.B.dylib: _openat
__ libSystem.B.dylib: _openbyid_np
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_signpost_id_make_with_pointer
__ libSystem.B.dylib: _os_transaction_create
__ libSystem.B.dylib: _proc_name
__ libSystem.B.dylib: _proc_pidpath
__ libSystem.B.dylib: _pthread_fchdir_np
__ libSystem.B.dylib: _qos_class_self
__ libSystem.B.dylib: _readdir
__ libSystem.B.dylib: _removefile
__ libSystem.B.dylib: _removefile_state_alloc
__ libSystem.B.dylib: _removefile_state_free
__ libSystem.B.dylib: _removefile_state_set
__ libSystem.B.dylib: _renameatx_np
__ libSystem.B.dylib: _rewinddir
__ libSystem.B.dylib: _sandbox_check
__ libSystem.B.dylib: _setxattr
__ libSystem.B.dylib: _signal
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _strdup
__ libSystem.B.dylib: _strerror
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _strncmp
__ libSystem.B.dylib: _strrchr
__ libSystem.B.dylib: _strsep
__ libSystem.B.dylib: _strsignal
__ libSystem.B.dylib: _sysctl
__ libSystem.B.dylib: _sysctlbyname
__ libSystem.B.dylib: _unlinkat
__ libSystem.B.dylib: _usleep
__ libSystem.B.dylib: _xattr_flags_from_name
__ libSystem.B.dylib: _xattr_name_without_flags
__ libSystem.B.dylib: _xpc_activity_get_state
__ libSystem.B.dylib: _xpc_activity_register
__ libSystem.B.dylib: _xpc_activity_set_state
__ libSystem.B.dylib: _xpc_activity_should_defer
__ libSystem.B.dylib: _xpc_connection_get_pid
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_set_bool
__ libSystem.B.dylib: _xpc_dictionary_set_int64
__ libSystem.B.dylib: _xpc_dictionary_set_string
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libprequelite.dylib: _OBJC_CLASS_$_PQLConnection
__ libprequelite.dylib: _PQLSqliteErrorDomain
FPDDownloader : NSObject /usr/lib/libSystem.B.dylib <FPCancellable>
 @property  FPDDomain *domain
 @property  NSProgress *cancellationProgress
 @property  NSProgress *progress

  // instance methods
  -[FPDDownloader dealloc]
  -[FPDDownloader domain]
  -[FPDDownloader .cxx_destruct]
  -[FPDDownloader cancel]
  -[FPDDownloader progress]
  -[FPDDownloader _cleanup]
  -[FPDDownloader _stopTrackingFileURLs]
  -[FPDDownloader _createChildItem:]
  -[FPDDownloader downloadItem:recursively:request:withCompletion:]
  -[FPDDownloader _didDownloadItem:withError:]
  -[FPDDownloader _recursiveDownloadOfItem:request:perItemCompletion:withCompletion:]
  -[FPDDownloader _nonRecursiveDownloadOfItem:request:perItemCompletion:withCompletion:]
  -[FPDDownloader _logRootProgress]
  -[FPDDownloader _progressComputationPreflightForRecursiveRoot:completion:]
  -[FPDDownloader initWithDomain:callbackQueue:]
  -[FPDDownloader downloadURL:recursively:request:withCompletion:]
  -[FPDDownloader cancellationProgress]


FPDLocalStorageExtension : FPDExtension

FPDCloudDocsExtension : FPDExtension

FPDExtension : FPDProvider <FPDPushMessageDelegate>
 @property  NSExtension *extension
 @property  NSObject<OS_dispatch_queue> *presentersQueue
 @property  NSObject<OS_dispatch_queue> *sharedSessionQueue
 @property  NSUUID *uuid
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FPDExtension instanceWithExtension:queue:server:]

  // instance methods
  -[FPDExtension isEqual:]
  -[FPDExtension .cxx_destruct]
  -[FPDExtension uuid]
  -[FPDExtension setExtension:]
  -[FPDExtension extension]
  -[FPDExtension customPushTopics]
  -[FPDExtension _test_callFileProviderManagerAPIs:]
  -[FPDExtension writeCheckReportTo:limitNumberOfItems:completionHandler:]
  -[FPDExtension currentMaterializedSetSyncAnchorForDomain:completionHandler:]
  -[FPDExtension didReceiveMessage:]
  -[FPDExtension initWithExtension:queue:server:]
  -[FPDExtension isAppExtensionReachable]
  -[FPDExtension asAppExtensionBackedProvider]
  -[FPDExtension removeTrashedItemsOlderThanDate:request:completionHandler:]
  -[FPDExtension reindexAllSearchableItemsForRequest:acknowledgementHandler:]
  -[FPDExtension enumerateMaterializedSetForDomain:syncAnchor:completionHandler:]
  -[FPDExtension presentersQueue]
  -[FPDExtension sharedSessionQueue]


WrappedFPXEnumeratorObserverProxy : NSObject /usr/lib/libSystem.B.dylib <FPXEnumeratorObserver>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WrappedFPXEnumeratorObserverProxy .cxx_destruct]
  -[WrappedFPXEnumeratorObserverProxy initWithTarget:]
  -[WrappedFPXEnumeratorObserverProxy enumerationResultsDidChange]
  -[WrappedFPXEnumeratorObserverProxy didUpdateItem:]


FPDXPCDomainServicerLifetimeExtender : NSObject /usr/lib/libSystem.B.dylib <FPDLifetimeExtender, FPDLifetimeServicing>
 @property  int requestEffectivePID
 @property  NSString *prettyDescription
 @property  @? stopBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FPDXPCDomainServicerLifetimeExtender .cxx_destruct]
  -[FPDXPCDomainServicerLifetimeExtender setStopBlock:]
  -[FPDXPCDomainServicerLifetimeExtender stopBlock]
  -[FPDXPCDomainServicerLifetimeExtender stopExtendingLifetime]
  -[FPDXPCDomainServicerLifetimeExtender prettyDescription]
  -[FPDXPCDomainServicerLifetimeExtender requestEffectivePID]
  -[FPDXPCDomainServicerLifetimeExtender setRequestEffectivePID:]
  -[FPDXPCDomainServicerLifetimeExtender setPrettyDescription:]


FPDXPCDomainServicer : NSObject /usr/lib/libSystem.B.dylib <FPDDomainServicing, FPDLifetimeServicing>
 @property  NSString *providerDomainID
 @property  FPDExtensionSession *sessionOrNil
 @property  FPDDomain *domainOrNil

  // instance methods
  -[FPDXPCDomainServicer dealloc]
  -[FPDXPCDomainServicer invalidate]
  -[FPDXPCDomainServicer .cxx_destruct]
  -[FPDXPCDomainServicer pid]
  -[FPDXPCDomainServicer deleteSearchableItemsWithSpotlightDomainIdentifiers:completionHandler:]
  -[FPDXPCDomainServicer fetchAndStartEnumeratingWithSettings:observer:request:completionHandler:]
  -[FPDXPCDomainServicer didChangeItemID:completionHandler:]
  -[FPDXPCDomainServicer providerDomainID]
  -[FPDXPCDomainServicer stopExtendingLifetime]
  -[FPDXPCDomainServicer _t_setFilePresenterObserver:]
  -[FPDXPCDomainServicer resolveItemID:completionHandler:]
  -[FPDXPCDomainServicer setDomainWithIdentifier:ejectable:completionHandler:]
  -[FPDXPCDomainServicer _unregisterLifetimeExtension]
  -[FPDXPCDomainServicer __providerIfExists]
  -[FPDXPCDomainServicer _registerLifetimeExtension]
  -[FPDXPCDomainServicer providerOrNil]
  -[FPDXPCDomainServicer domainOrNil]
  -[FPDXPCDomainServicer sessionOrNil]
  -[FPDXPCDomainServicer newFileProviderProxy]
  -[FPDXPCDomainServicer initWithServer:providerDomainID:pid:]
  -[FPDXPCDomainServicer clientCanAccessService:forConnection:]
  -[FPDXPCDomainServicer startExtendingLifetime]


FPDDomainExtensionBackend : NSObject /usr/lib/libSystem.B.dylib <FPDDomainBackend>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *rootURLs
 @property  NSObject<OS_dispatch_queue> *backendQueue

  // instance methods
  -[FPDDomainExtensionBackend invalidate]
  -[FPDDomainExtensionBackend .cxx_destruct]
  -[FPDDomainExtensionBackend initWithDomain:]
  -[FPDDomainExtensionBackend writeCheckReportTo:limitNumberOfItems:completionHandler:]
  -[FPDDomainExtensionBackend reimportItemsBelowItemWithID:removeCachedItems:markItemDataless:completionHandler:]
  -[FPDDomainExtensionBackend enumerateMaterializedSetFromSyncAnchor:completionHandler:]
  -[FPDDomainExtensionBackend currentMaterializedSetSyncAnchorWithCompletionHandler:]
  -[FPDDomainExtensionBackend enumerateWithSettings:lifetimeExtender:observer:completionHandler:]
  -[FPDDomainExtensionBackend rootURLs]
  -[FPDDomainExtensionBackend evictItemAtURL:request:completionHandler:]
  -[FPDDomainExtensionBackend _cancelProvidingItemAtURL:withKey:request:]
  -[FPDDomainExtensionBackend URLForItemID:creatingPlaceholderIfMissing:ignoreAlternateContentsURL:request:completionHandler:]
  -[FPDDomainExtensionBackend itemIDForURL:request:completionHandler:]
  -[FPDDomainExtensionBackend isAllowedToProvideItemID:toConsumerWithIdentifier:]
  -[FPDDomainExtensionBackend startAndGetSyncAnchor:]
  -[FPDDomainExtensionBackend isProviderForURL:]
  -[FPDDomainExtensionBackend needsRootCreation]
  -[FPDDomainExtensionBackend createRootByImportingURL:error:]
  -[FPDDomainExtensionBackend itemForItemID:request:completionHandler:]
  -[FPDDomainExtensionBackend itemForURL:request:completionHandler:]
  -[FPDDomainExtensionBackend fetchFSItemsForItemIdentifiers:materializingIfNeeded:request:completionHandler:]
  -[FPDDomainExtensionBackend startProvidingItemAtURL:readingOptions:request:completionHandler:]
  -[FPDDomainExtensionBackend evictItemWithID:request:completionHandler:]
  -[FPDDomainExtensionBackend createItemBasedOnTemplate:fields:urlWrapper:options:bounceOnCollision:request:completionHandler:]
  -[FPDDomainExtensionBackend itemChangedAtURL:request:]
  -[FPDDomainExtensionBackend updateRootAfterDomainChangeWithError:]
  -[FPDDomainExtensionBackend dumpStateTo:limitNumberOfItems:]
  -[FPDDomainExtensionBackend removeAllFilesWithError:]
  -[FPDDomainExtensionBackend valuesForAttributes:forURL:request:completionHandler:]
  -[FPDDomainExtensionBackend createIndexerWithExtension:enabled:error:]
  -[FPDDomainExtensionBackend fetchOperationServiceOrEndpointWithRequest:completionHandler:]
  -[FPDDomainExtensionBackend resolveProviderItemID:completionHandler:]
  -[FPDDomainExtensionBackend backendQueue]
  -[FPDDomainExtensionBackend didIndexOneBatchWithError:updatedItems:deletedIDs:anchor:]


FPDMoveOperation : FPDActionOperation
 @property  FPMoveInfo *info

  // class methods
  +[FPDMoveOperation _validateInfo:]

  // instance methods
  -[FPDMoveOperation .cxx_destruct]
  -[FPDMoveOperation cancel]
  -[FPDMoveOperation main]
  -[FPDMoveOperation finishWithResult:error:]
  -[FPDMoveOperation dumpStateTo:]
  -[FPDMoveOperation _t_unblockReader]
  -[FPDMoveOperation cancelRoot:]
  -[FPDMoveOperation initWithActionInfo:request:server:]
  -[FPDMoveOperation moveInfo]
  -[FPDMoveOperation sendPastUpdatesToClient:]


FPDFileCoordinationProvider : NSObject /usr/lib/libSystem.B.dylib <NSFileProvider>
 @property  <FPDFileCoordinationProviderDelegate> *delegate
 @property  NSString *extensionIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSURL *_providedItemsURL
 @property  NSOperationQueue *_providedItemsOperationQueue
 @property  NSString *_fileReactorID

  // instance methods
  -[FPDFileCoordinationProvider delegate]
  -[FPDFileCoordinationProvider setDelegate:]
  -[FPDFileCoordinationProvider .cxx_destruct]
  -[FPDFileCoordinationProvider _fileReactorID]
  -[FPDFileCoordinationProvider _writerWithID:didFinishWritingForURL:]
  -[FPDFileCoordinationProvider _providedItemsURL]
  -[FPDFileCoordinationProvider _providedItemsOperationQueue]
  -[FPDFileCoordinationProvider _provideItemAtURL:toReaderWithID:completionHandler:]
  -[FPDFileCoordinationProvider _provideItemAtURL:completionHandler:]
  -[FPDFileCoordinationProvider _cancelProvidingItemAtURL:toReaderWithID:]
  -[FPDFileCoordinationProvider _physicalURLForURL:]
  -[FPDFileCoordinationProvider _providedItemAtURL:didGainPresenterWithID:]
  -[FPDFileCoordinationProvider _providedItemAtURL:didLosePresenterWithID:]
  -[FPDFileCoordinationProvider _providedItemAtURL:withPresenterWithID:didMoveToURL:]
  -[FPDFileCoordinationProvider extensionIdentifier]
  -[FPDFileCoordinationProvider setExtensionIdentifier:]
  -[FPDFileCoordinationProvider delegateForURL:]
  -[FPDFileCoordinationProvider initWithRootURL:]


FPDExtensionHostContext : NSExtensionContext /System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices <FPXHost>
  // class methods
  +[FPDExtensionHostContext _extensionAuxiliaryHostProtocol]
  +[FPDExtensionHostContext _extensionAuxiliaryVendorProtocol]


_NSFileProviderExtensionHostContext : FPDExtensionHostContext

FPDProcessMonitor : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_dispatch_queue> *notificationQueue
 @property  <FPDProcessMonitorDelegate> *delegate

  // instance methods
  -[FPDProcessMonitor invalidate]
  -[FPDProcessMonitor delegate]
  -[FPDProcessMonitor setDelegate:]
  -[FPDProcessMonitor .cxx_destruct]
  -[FPDProcessMonitor notificationQueue]
  -[FPDProcessMonitor isForeground]
  -[FPDProcessMonitor setNotificationQueue:]
  -[FPDProcessMonitor prettyDescription]
  -[FPDProcessMonitor _createAppMonitor]
  -[FPDProcessMonitor process:didBecomeForeground:]
  -[FPDProcessMonitor _handleAppStateChange:]
  -[FPDProcessMonitor _updateMonitoredBundleIDs]
  -[FPDProcessMonitor _addPIDToObserve:]
  -[FPDProcessMonitor _removePIDToObserve:]
  -[FPDProcessMonitor initWithExcludedBundleIDs:]
  -[FPDProcessMonitor addPIDToObserve:]
  -[FPDProcessMonitor removePIDToObserve:]


FPDProviderDescriptor : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSString *identifier
 @property  NSString *localizedName
 @property  NSString *topLevelBundleIdentifier
 @property  NSString *bundleVersion
 @property  NSString *extensionPointVersion
 @property  BOOL readonly
 @property  BOOL enabledByDefault
 @property  BOOL supportsEnumeration
 @property  BOOL defaultDomainVisible
 @property  BOOL shouldHideExtensionName
 @property  BOOL canToggleDomainVisibility
 @property  BOOL isAvailableSystemWide
 @property  BOOL usesUniqueItemIdentifiersAcrossDevices
 @property  BOOL supportsUnzippedPackages
 @property  BOOL hasExplicitExtensionStorageURLs
 @property  BOOL supportsPickingFolders
 @property  BOOL owningApplicationIsManaged
 @property  NSString *purposeIdentifier
 @property  NSURL *extensionBundleURL
 @property  NSArray *supportedFileTypes
 @property  NSArray *supportedSearchFilters
 @property  NSArray *extensionStorageURLs
 @property  NSArray *requestedExtendedAttributes

  // class methods
  +[FPDProviderDescriptor supportsSecureCoding]

  // instance methods
  -[FPDProviderDescriptor encodeWithCoder:]
  -[FPDProviderDescriptor initWithCoder:]
  -[FPDProviderDescriptor .cxx_destruct]
  -[FPDProviderDescriptor identifier]
  -[FPDProviderDescriptor setIdentifier:]
  -[FPDProviderDescriptor localizedName]
  -[FPDProviderDescriptor setPurposeIdentifier:]
  -[FPDProviderDescriptor purposeIdentifier]
  -[FPDProviderDescriptor bundleVersion]
  -[FPDProviderDescriptor setBundleVersion:]
  -[FPDProviderDescriptor setLocalizedName:]
  -[FPDProviderDescriptor supportedFileTypes]
  -[FPDProviderDescriptor supportedSearchFilters]
  -[FPDProviderDescriptor supportsEnumeration]
  -[FPDProviderDescriptor isAvailableSystemWide]
  -[FPDProviderDescriptor extensionBundleURL]
  -[FPDProviderDescriptor initWithExtension:]
  -[FPDProviderDescriptor topLevelBundleIdentifier]
  -[FPDProviderDescriptor usesUniqueItemIdentifiersAcrossDevices]
  -[FPDProviderDescriptor setSupportedFileTypes:]
  -[FPDProviderDescriptor setSupportsEnumeration:]
  -[FPDProviderDescriptor setTopLevelBundleIdentifier:]
  -[FPDProviderDescriptor setExtensionBundleURL:]
  -[FPDProviderDescriptor setIsAvailableSystemWide:]
  -[FPDProviderDescriptor setSupportedSearchFilters:]
  -[FPDProviderDescriptor setUsesUniqueItemIdentifiersAcrossDevices:]
  -[FPDProviderDescriptor supportsPickingFolders]
  -[FPDProviderDescriptor setSupportsPickingFolders:]
  -[FPDProviderDescriptor shouldHideExtensionName]
  -[FPDProviderDescriptor setShouldHideExtensionName:]
  -[FPDProviderDescriptor readonly]
  -[FPDProviderDescriptor setReadonly:]
  -[FPDProviderDescriptor extensionStorageURLs]
  -[FPDProviderDescriptor setEnabledByDefault:]
  -[FPDProviderDescriptor setDefaultDomainVisible:]
  -[FPDProviderDescriptor setCanToggleDomainVisibility:]
  -[FPDProviderDescriptor setSupportsUnzippedPackages:]
  -[FPDProviderDescriptor setRequestedExtendedAttributes:]
  -[FPDProviderDescriptor requestedExtendedAttributes]
  -[FPDProviderDescriptor setHasExplicitExtensionStorageURLs:]
  -[FPDProviderDescriptor setExtensionStorageURLs:]
  -[FPDProviderDescriptor extensionPointVersion]
  -[FPDProviderDescriptor setExtensionPointVersion:]
  -[FPDProviderDescriptor enabledByDefault]
  -[FPDProviderDescriptor defaultDomainVisible]
  -[FPDProviderDescriptor canToggleDomainVisibility]
  -[FPDProviderDescriptor supportsUnzippedPackages]
  -[FPDProviderDescriptor hasExplicitExtensionStorageURLs]
  -[FPDProviderDescriptor owningApplicationIsManaged]
  -[FPDProviderDescriptor setOwningApplicationIsManaged:]


FPDItemIteratorEnumState : NSObject /usr/lib/libSystem.B.dylib
 @property  FPItem *parentItem
 @property  <FPXPCAutomaticErrorProxy><FPXEnumerator> *enumerator
 @property  NSData *nextPage

  // instance methods
  -[FPDItemIteratorEnumState .cxx_destruct]
  -[FPDItemIteratorEnumState enumerator]
  -[FPDItemIteratorEnumState parentItem]
  -[FPDItemIteratorEnumState setParentItem:]
  -[FPDItemIteratorEnumState nextPage]
  -[FPDItemIteratorEnumState setEnumerator:]
  -[FPDItemIteratorEnumState setNextPage:]


FPDItemIterator : FPDIterator <FPXEnumeratorObserver, FPDLifetimeExtender>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  int requestEffectivePID
 @property  NSString *prettyDescription

  // instance methods
  -[FPDItemIterator dealloc]
  -[FPDItemIterator .cxx_destruct]
  -[FPDItemIterator error]
  -[FPDItemIterator _next]
  -[FPDItemIterator done]
  -[FPDItemIterator _invalidateWithError:]
  -[FPDItemIterator enumerationResultsDidChange]
  -[FPDItemIterator prettyDescription]
  -[FPDItemIterator didUpdateItem:]
  -[FPDItemIterator _pushFolder:]
  -[FPDItemIterator _popFolder]
  -[FPDItemIterator requestEffectivePID]
  -[FPDItemIterator _decorateItem:]
  -[FPDItemIterator _createEnumerator]
  -[FPDItemIterator _enumerateMoreItems]
  -[FPDItemIterator _popItem]
  -[FPDItemIterator _shouldTraverseSubTree:]
  -[FPDItemIterator initWithItem:provider:]
  -[FPDItemIterator nextWithError:]
  -[FPDItemIterator numFoldersPopped]


FPDServer : NSObject /usr/lib/libSystem.B.dylib <NSXPCListenerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSXPCListener *listener
 @property  FPDActionOperationEngine *operationEngine
 @property  FPDCacheDeleteService *cacheDelete
 @property  FPDAppMonitor *appMonitor
 @property  FPDExtensionManager *extensionManager
 @property  FPDPresenterManager *presenterManager
 @property  Class fpfsClass
 @property  Class fpfsSQLBackupManagerClass
 @property  Class fpfsSQLRestoreManagerClass

  // class methods
  +[FPDServer homeDirectory]
  +[FPDServer cloudStoragePath]
  +[FPDServer appSupportPath]

  // instance methods
  -[FPDServer init]
  -[FPDServer listener]
  -[FPDServer .cxx_destruct]
  -[FPDServer listener:shouldAcceptNewConnection:]
  -[FPDServer start]
  -[FPDServer setListener:]
  -[FPDServer _setup]
  -[FPDServer appMonitor]
  -[FPDServer extensionManager]
  -[FPDServer localeDidChange]
  -[FPDServer signalProviderChanges]
  -[FPDServer _initSignals]
  -[FPDServer handleExitSignal:]
  -[FPDServer exitWithCode:]
  -[FPDServer providersDidChange]
  -[FPDServer _finishSetup]
  -[FPDServer _startXPCListener]
  -[FPDServer _computeUnlockedStatus]
  -[FPDServer materializeURL:completion:]
  -[FPDServer operationEngine]
  -[FPDServer cacheDelete]
  -[FPDServer presenterManager]
  -[FPDServer fpfsClass]
  -[FPDServer setFpfsClass:]
  -[FPDServer fpfsSQLBackupManagerClass]
  -[FPDServer setFpfsSQLBackupManagerClass:]
  -[FPDServer fpfsSQLRestoreManagerClass]
  -[FPDServer setFpfsSQLRestoreManagerClass:]


FPDMoveWriterToDisk : NSObject /usr/lib/libSystem.B.dylib <FPDMoveWriterExecutor>
  // instance methods
  -[FPDMoveWriterToDisk dealloc]
  -[FPDMoveWriterToDisk .cxx_destruct]
  -[FPDMoveWriterToDisk _performCopyOfItem:to:as:sourceMaterializeOption:targetMaterializeOption:bounceNumber:completion:]
  -[FPDMoveWriterToDisk _respectLastUsageDatePolicyForDestinationURL:]
  -[FPDMoveWriterToDisk _performMoveOfItem:to:as:sourceMaterializeOption:targetMaterializeOption:bounceNumber:completion:]
  -[FPDMoveWriterToDisk _resolveLocator:completion:]
  -[FPDMoveWriterToDisk performMoveOfItem:to:as:sourceMaterializeOption:targetMaterializeOption:completion:]
  -[FPDMoveWriterToDisk performCreateFolder:inside:as:completion:]
  -[FPDMoveWriterToDisk initWithWriter:]
  -[FPDMoveWriterToDisk performCopyOfItem:to:as:sourceMaterializeOption:targetMaterializeOption:completion:]
  -[FPDMoveWriterToDisk performMoveOfFolder:to:as:sourceMaterializeOption:targetMaterializeOption:atomically:completion:]


FPDDownloadOperation : FPDActionOperation
 @property  FPDownloadInfo *info

  // class methods
  +[FPDDownloadOperation _validateInfo:]

  // instance methods
  -[FPDDownloadOperation .cxx_destruct]
  -[FPDDownloadOperation main]
  -[FPDDownloadOperation finishWithResult:error:]
  -[FPDDownloadOperation initWithActionInfo:request:server:]
  -[FPDDownloadOperation sendPastUpdatesToClient:]
  -[FPDDownloadOperation downloadInfo]
  -[FPDDownloadOperation _setupCreatedItemForRoot:]
  -[FPDDownloadOperation _finishedDownloadingLocator:withError:]


FPDActionOperationQueue : NSObject /usr/lib/libSystem.B.dylib <FPCancellable>
  // instance methods
  -[FPDActionOperationQueue .cxx_destruct]
  -[FPDActionOperationQueue cancel]
  -[FPDActionOperationQueue dequeue]
  -[FPDActionOperationQueue enqueue:]
  -[FPDActionOperationQueue dumpStateTo:]
  -[FPDActionOperationQueue initWithMoveInfo:]
  -[FPDActionOperationQueue finishedEnqueuing]


FPDActionOperation : FPOperation /System/Library/PrivateFrameworks/ApplePushService.framework/ApplePushService
 @property  NSMutableArray *clients
 @property  NSMutableArray *clientCompletions
 @property  BOOL hasFinishedPreflight
 @property  NSMutableDictionary *progressByRoot
 @property  NSMutableDictionary *errorsByRoot
 @property  NSMutableSet *completedRoots
 @property  NSMutableDictionary *createdItemByRoot
 @property  NSMutableDictionary *progressCompletionsByRoot
 @property  NSError *error
 @property  unsigned long logSection
 @property  NSProgress *progress
 @property  FPDExtensionManager *manager
 @property  FPDRequest *request
 @property  FPActionOperationInfo *info

  // instance methods
  -[FPDActionOperation .cxx_destruct]
  -[FPDActionOperation error]
  -[FPDActionOperation cancel]
  -[FPDActionOperation setError:]
  -[FPDActionOperation progress]
  -[FPDActionOperation manager]
  -[FPDActionOperation info]
  -[FPDActionOperation request]
  -[FPDActionOperation finishWithResult:error:]
  -[FPDActionOperation clients]
  -[FPDActionOperation setClients:]
  -[FPDActionOperation dumpStateTo:]
  -[FPDActionOperation registerFrameworkClient:operationCompletion:]
  -[FPDActionOperation progressForRoot:completion:]
  -[FPDActionOperation progressByRoot]
  -[FPDActionOperation setProgressByRoot:]
  -[FPDActionOperation cancelRoot:]
  -[FPDActionOperation initWithActionInfo:request:server:]
  -[FPDActionOperation logSection]
  -[FPDActionOperation setHasFinishedPreflight:]
  -[FPDActionOperation forAllClients:]
  -[FPDActionOperation createdItemByRoot]
  -[FPDActionOperation completedRoots]
  -[FPDActionOperation errorsByRoot]
  -[FPDActionOperation progressCompletionsByRoot]
  -[FPDActionOperation unregisterClientsAfterCompletion]
  -[FPDActionOperation hasFinishedPreflight]
  -[FPDActionOperation sendPastUpdatesToClient:]
  -[FPDActionOperation clientCompletions]
  -[FPDActionOperation setClientCompletions:]
  -[FPDActionOperation setErrorsByRoot:]
  -[FPDActionOperation setCompletedRoots:]
  -[FPDActionOperation setCreatedItemByRoot:]
  -[FPDActionOperation setProgressCompletionsByRoot:]
  -[FPDActionOperation setLogSection:]


FPDCoordinator : NSObject /usr/lib/libSystem.B.dylib
 @property  FPDExtensionManager *extensionManager

  // instance methods
  -[FPDCoordinator dealloc]
  -[FPDCoordinator .cxx_destruct]
  -[FPDCoordinator cancel]
  -[FPDCoordinator stopAccessingURL:]
  -[FPDCoordinator extensionManager]
  -[FPDCoordinator startAccessingURLForAtomDuration:]
  -[FPDCoordinator resolveItemOrURL:recursively:coordinateIfExport:handler:]
  -[FPDCoordinator resolveItemOrURL:recursively:andCoordinateWithHandler:]
  -[FPDCoordinator resolveItem:completion:]
  -[FPDCoordinator coordinateForMovingFromURL:toURL:toTargetFolderURL:targetMaterializeOption:sourceMaterializeOption:handler:]
  -[FPDCoordinator initWithExtensionManager:callbackQueue:]
  -[FPDCoordinator stopAccessingAllURLs]
  -[FPDCoordinator coordinateAtURL:recursively:handler:]
  -[FPDCoordinator resolveItem:recursively:andCoordinateWithHandler:]
  -[FPDCoordinator _readingIntentWithURL:materializeOption:]
  -[FPDCoordinator coordinateForCopyingFromURL:toURL:handler:]
  -[FPDCoordinator coordinateForMovingFromURL:toURL:handler:]


FPDCacheDeleteService : NSObject /usr/lib/libSystem.B.dylib
 @property  FPDExtensionManager *extensionManager

  // class methods
  +[FPDCacheDeleteService urgencyAtWhichItIsAcceptableToPurgeItemWithLastUsedDate:]

  // instance methods
  -[FPDCacheDeleteService .cxx_destruct]
  -[FPDCacheDeleteService start]
  -[FPDCacheDeleteService dumpStateTo:]
  -[FPDCacheDeleteService setExtensionManager:]
  -[FPDCacheDeleteService extensionManager]
  -[FPDCacheDeleteService enumeratePurgeableFilesOnVolume:forUrgency:sizeOnly:handler:]
  -[FPDCacheDeleteService nonPurgableSpacePerProviderOnVolume:]
  -[FPDCacheDeleteService evictItems:]
  -[FPDCacheDeleteService registerActivity]
  -[FPDCacheDeleteService enumerateProviderDomainOnVolume:usingBlock:]
  -[FPDCacheDeleteService allStorageVolumes]
  -[FPDCacheDeleteService purgableSpaceForAllUrgenciesOnVolume:]
  -[FPDCacheDeleteService getVolume:forPath:]
  -[FPDCacheDeleteService volumesByProviderDomain]
  -[FPDCacheDeleteService queryWithAttributes:]
  -[FPDCacheDeleteService shouldSearchableItem:beEvictedAtUrgency:]
  -[FPDCacheDeleteService evictableByProviderDomainID:]


FPDDomainDeadEndBackend : NSObject /usr/lib/libSystem.B.dylib <FPDDomainBackend>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *rootURLs
 @property  NSObject<OS_dispatch_queue> *backendQueue

  // instance methods
  -[FPDDomainDeadEndBackend invalidate]
  -[FPDDomainDeadEndBackend .cxx_destruct]
  -[FPDDomainDeadEndBackend initWithDomain:]
  -[FPDDomainDeadEndBackend writeCheckReportTo:limitNumberOfItems:completionHandler:]
  -[FPDDomainDeadEndBackend reimportItemsBelowItemWithID:removeCachedItems:markItemDataless:completionHandler:]
  -[FPDDomainDeadEndBackend enumerateMaterializedSetFromSyncAnchor:completionHandler:]
  -[FPDDomainDeadEndBackend currentMaterializedSetSyncAnchorWithCompletionHandler:]
  -[FPDDomainDeadEndBackend enumerateWithSettings:lifetimeExtender:observer:completionHandler:]
  -[FPDDomainDeadEndBackend rootURLs]
  -[FPDDomainDeadEndBackend evictItemAtURL:request:completionHandler:]
  -[FPDDomainDeadEndBackend URLForItemID:creatingPlaceholderIfMissing:ignoreAlternateContentsURL:request:completionHandler:]
  -[FPDDomainDeadEndBackend itemIDForURL:request:completionHandler:]
  -[FPDDomainDeadEndBackend isAllowedToProvideItemID:toConsumerWithIdentifier:]
  -[FPDDomainDeadEndBackend startAndGetSyncAnchor:]
  -[FPDDomainDeadEndBackend isProviderForURL:]
  -[FPDDomainDeadEndBackend needsRootCreation]
  -[FPDDomainDeadEndBackend createRootByImportingURL:error:]
  -[FPDDomainDeadEndBackend itemForItemID:request:completionHandler:]
  -[FPDDomainDeadEndBackend itemForURL:request:completionHandler:]
  -[FPDDomainDeadEndBackend fetchFSItemsForItemIdentifiers:materializingIfNeeded:request:completionHandler:]
  -[FPDDomainDeadEndBackend startProvidingItemAtURL:readingOptions:request:completionHandler:]
  -[FPDDomainDeadEndBackend evictItemWithID:request:completionHandler:]
  -[FPDDomainDeadEndBackend createItemBasedOnTemplate:fields:urlWrapper:options:bounceOnCollision:request:completionHandler:]
  -[FPDDomainDeadEndBackend itemChangedAtURL:request:]
  -[FPDDomainDeadEndBackend updateRootAfterDomainChangeWithError:]
  -[FPDDomainDeadEndBackend dumpStateTo:limitNumberOfItems:]
  -[FPDDomainDeadEndBackend removeAllFilesWithError:]
  -[FPDDomainDeadEndBackend valuesForAttributes:forURL:request:completionHandler:]
  -[FPDDomainDeadEndBackend createIndexerWithExtension:enabled:error:]
  -[FPDDomainDeadEndBackend fetchOperationServiceOrEndpointWithRequest:completionHandler:]
  -[FPDDomainDeadEndBackend resolveProviderItemID:completionHandler:]
  -[FPDDomainDeadEndBackend backendQueue]


FPDAccessControlStore : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_dispatch_queue> *syncQueue

  // class methods
  +[FPDAccessControlStore sharedStore]

  // instance methods
  -[FPDAccessControlStore init]
  -[FPDAccessControlStore dealloc]
  -[FPDAccessControlStore .cxx_destruct]
  -[FPDAccessControlStore syncQueue]
  -[FPDAccessControlStore openDatabase]
  -[FPDAccessControlStore setSyncQueue:]
  -[FPDAccessControlStore isProviderIdentifier:allowedToProvideItemID:toConsumerWithIdentifier:]
  -[FPDAccessControlStore initWithDatabaseBaseURL:]
  -[FPDAccessControlStore _bundleKeyForBundleIdentifier:db:create:]
  -[FPDAccessControlStore _fileKeyForProviderKey:domain:identifier:db:create:]
  -[FPDAccessControlStore validateDatabase:]
  -[FPDAccessControlStore migrate:fromLegacyDatabase:]
  -[FPDAccessControlStore isProviderWithIdentifier:allowedToProvideItemID:toConsumerWithIdentifier:]
  -[FPDAccessControlStore performWithDBConnection:]
  -[FPDAccessControlStore allowProviderWithIdentifier:toProvideItemID:toConsumerWithIdentifier:]
  -[FPDAccessControlStore disallowProviderWithIdentifier:fromProvidingItemWithID:toConsumerWithIdentifier:]
  -[FPDAccessControlStore reopenDatabaseAfterUnlock]
  -[FPDAccessControlStore dumpForBundleIdentifier:]


FPDAppRegistry : FPAppRegistry /System/Library/PrivateFrameworks/ApplePushService.framework/ApplePushService
  // instance methods
  -[FPDAppRegistry _postNotificationName:userInfo:]
  -[FPDAppRegistry addApps:]
  -[FPDAppRegistry removeAppsWithBundleIDs:]


FPDAppMonitor : NSObject /usr/lib/libSystem.B.dylib
 @property  FPDServer *server
 @property  BOOL monitoring
 @property  FPAppRegistry *appRegistry

  // instance methods
  -[FPDAppMonitor .cxx_destruct]
  -[FPDAppMonitor server]
  -[FPDAppMonitor startMonitoring]
  -[FPDAppMonitor stopMonitoring]
  -[FPDAppMonitor initWithServer:]
  -[FPDAppMonitor isMonitoring]
  -[FPDAppMonitor setMonitoring:]
  -[FPDAppMonitor dumpStateTo:]
  -[FPDAppMonitor _registerForNotification:handler:]
  -[FPDAppMonitor appRegistry]
  -[FPDAppMonitor _updateDefaultProviderDomainID]
  -[FPDAppMonitor _updateDefaultProviderByAppBundleID]
  -[FPDAppMonitor _didRegisterApps:]
  -[FPDAppMonitor _didUnregisterApps:]
  -[FPDAppMonitor _didChangeLocale:]
  -[FPDAppMonitor _didChangeListOfProviders]
  -[FPDAppMonitor _didChangeDefaultSaveLocationInUserDefaults]
  -[FPDAppMonitor _populateListOfMonitoredApps]
  -[FPDAppMonitor _appMetadataIfMonitoringIsNeeded:]


FPCoordinationContext : NSObject /usr/lib/libSystem.B.dylib
 @property  NSProgress *progress
 @property  @? completionHandler

  // instance methods
  -[FPCoordinationContext .cxx_destruct]
  -[FPCoordinationContext progress]
  -[FPCoordinationContext completionHandler]
  -[FPCoordinationContext initWithProgress:completionHandler:]


FPDDomain : NSObject /usr/lib/libSystem.B.dylib <FPDFileCoordinationProviderDelegate, FPDDomainIndexerDelegate>
 @property  <FPDDomainIndexChangeDelegate> *indexChangeDelegate
 @property  NSString *identifier
 @property  NSString *providerDomainID
 @property  FPProviderDomain *providerDomain
 @property  BOOL started
 @property  NSFileProviderDomain *nsDomainOrNilForDefault
 @property  NSFileProviderDomain *nsDomain
 @property  BOOL userEnabled
 @property  BOOL ejectable
 @property  BOOL unableToStartup
 @property  BOOL isConnectedToAppExtension
 @property  NSNumber *shouldDropIndexOrNil
 @property  NSObject<OS_dispatch_queue> *serialQueue
 @property  NSObject<OS_os_log> *log
 @property  FPDDomain *domainIfNotDisabledByFPFSSettings
 @property  NSArray *rootURLs
 @property  NSArray *extensionStorageURLs
 @property  NSString *purposeIdentifier
 @property  <FPDDomainBackend> *defaultBackend
 @property  <FPDDomainBackend> *extensionBackend
 @property  <FPDDomainBackend> *deactivatedBackend
 @property  FPDProvider *provider
 @property  <FPDExtensionSessionProtocol> *session
 @property  NSMutableDictionary *filePresenters
 @property  FPDDomainIndexer *indexer
 @property  NSData *fpfsRootBookmarkData
 @property  BOOL forceNoFPFSForTesting
 @property  NSString *fp_prettyDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FPDDomain invalidate]
  -[FPDDomain .cxx_destruct]
  -[FPDDomain identifier]
  -[FPDDomain _fileReactorID]
  -[FPDDomain _writerWithID:didFinishWritingForURL:]
  -[FPDDomain filePresenters]
  -[FPDDomain _providedItemsOperationQueue]
  -[FPDDomain _provideItemAtURL:toReaderWithID:completionHandler:]
  -[FPDDomain _provideItemAtURL:completionHandler:]
  -[FPDDomain _cancelProvidingItemAtURL:toReaderWithID:]
  -[FPDDomain _physicalURLForURL:]
  -[FPDDomain _providedItemAtURL:didGainPresenterWithID:]
  -[FPDDomain _providedItemAtURL:didLosePresenterWithID:]
  -[FPDDomain _providedItemAtURL:withPresenterWithID:didMoveToURL:]
  -[FPDDomain purposeIdentifier]
  -[FPDDomain serialQueue]
  -[FPDDomain session]
  -[FPDDomain log]
  -[FPDDomain indexer]
  -[FPDDomain started]
  -[FPDDomain provider]
  -[FPDDomain finishSetup]
  -[FPDDomain setStarted:]
  -[FPDDomain setEjectable:]
  -[FPDDomain setFilePresenters:]
  -[FPDDomain startWithCompletion:]
  -[FPDDomain invalidateSession]
  -[FPDDomain fp_prettyDescription]
  -[FPDDomain providerDomainID]
  -[FPDDomain isConnectedToAppExtension]
  -[FPDDomain forceIngestionForItemID:completionHandler:]
  -[FPDDomain writeCheckReportTo:limitNumberOfItems:completionHandler:]
  -[FPDDomain setIndexer:]
  -[FPDDomain setUserEnabled:]
  -[FPDDomain userEnabled]
  -[FPDDomain extensionStorageURLs]
  -[FPDDomain supportsFPFS]
  -[FPDDomain didChangeItemID:request:completionHandler:]
  -[FPDDomain defaultBackend]
  -[FPDDomain enumerateWithSettings:lifetimeExtender:observer:completionHandler:]
  -[FPDDomain rootURLs]
  -[FPDDomain fetchEnumeratorWithSettings:observer:request:lifetimeExtender:completionHandler:]
  -[FPDDomain isProviderForURL:]
  -[FPDDomain dumpStateTo:limitNumberOfItems:]
  -[FPDDomain valuesForAttributes:forURL:request:completionHandler:]
  -[FPDDomain fetchOperationServiceOrEndpointWithRequest:completionHandler:]
  -[FPDDomain materializedURLForItemID:]
  -[FPDDomain forceIngestionAtURL:completionHandler:]
  -[FPDDomain forceFSIngestionForItemID:completionHandler:]
  -[FPDDomain nonEvictableSpace]
  -[FPDDomain downloadItemWithItemID:request:progress:completionHandler:]
  -[FPDDomain _siblingDelegateForURL:]
  -[FPDDomain isUsingFPFS]
  -[FPDDomain deactivatedBackend]
  -[FPDDomain createRootAndObserveIfNeededWithCompletion:]
  -[FPDDomain _shouldDisconnect]
  -[FPDDomain _shouldDisconnectDueToLowDiskSpace]
  -[FPDDomain _setupRecoveryTimer]
  -[FPDDomain nsDomain]
  -[FPDDomain nsDomainOrNilForDefault]
  -[FPDDomain isDefaultDomain]
  -[FPDDomain isHiddenDefaultDomain]
  -[FPDDomain _createProvidedItemsDirectoryWithCompletion:]
  -[FPDDomain _startObservingRootAndResumeIndexerWithCompletion:]
  -[FPDDomain createRootURLWithCompletion:]
  -[FPDDomain _startWithCompletion:]
  -[FPDDomain setShouldDropIndexOrNil:]
  -[FPDDomain cancelPendingCoordinations]
  -[FPDDomain _unregisterFromFileCoordinator]
  -[FPDDomain indexChangeDelegate]
  -[FPDDomain _removeProgressForProvidingItemAtURL:toReaderWithID:]
  -[FPDDomain daemonSideItemChange:changedFields:request:completionHandler:]
  -[FPDDomain _wantsPresenterNotifications]
  -[FPDDomain _performForAllCoordinationProviders:completion:]
  -[FPDDomain workingSetDidChangeWithCompletionHandler:]
  -[FPDDomain ejectable]
  -[FPDDomain extensionIndexer:didChangeNeedsAuthentification:]
  -[FPDDomain extensionIndexer:didIndexOneBatchWithError:updatedItems:deletedIDs:anchor:anchorPersisted:]
  -[FPDDomain initWithIdentifier:nsDomain:extensionStorageURLs:purposeIdentifier:fpfsClass:provider:]
  -[FPDDomain domainIfNotDisabledByFPFSSettings]
  -[FPDDomain providerDomain]
  -[FPDDomain createRootByImportingDirectoryAtURL:error:]
  -[FPDDomain startInOrderToDropIndex]
  -[FPDDomain cleanupDomainKeepingArchiveFolder:]
  -[FPDDomain reconnectToFileCoordinatorForURL:completion:]
  -[FPDDomain dumpInternalStateTo:request:completionHandler:]
  -[FPDDomain setIndexChangeDelegate:]
  -[FPDDomain setNsDomainOrNilForDefault:]
  -[FPDDomain unableToStartup]
  -[FPDDomain setUnableToStartup:]
  -[FPDDomain shouldDropIndexOrNil]
  -[FPDDomain setDefaultBackend:]
  -[FPDDomain extensionBackend]
  -[FPDDomain fpfsRootBookmarkData]
  -[FPDDomain setFpfsRootBookmarkData:]
  -[FPDDomain forceNoFPFSForTesting]
  -[FPDDomain setForceNoFPFSForTesting:]


FPDMoveReader : NSObject /usr/lib/libSystem.B.dylib <FPCancellable>
 @property  @? rootPreflightCompletionBlock
 @property  @? preflightCompletionBlock
 @property  @? startDownloadBlock
 @property  @? errorBlock

  // class methods
  +[FPDMoveReader _hasDiskWriterSupportForDomain:]

  // instance methods
  -[FPDMoveReader init]
  -[FPDMoveReader .cxx_destruct]
  -[FPDMoveReader cancel]
  -[FPDMoveReader start]
  -[FPDMoveReader _isCancelled]
  -[FPDMoveReader errorBlock]
  -[FPDMoveReader setErrorBlock:]
  -[FPDMoveReader _run]
  -[FPDMoveReader _finishWithError:]
  -[FPDMoveReader dumpStateTo:]
  -[FPDMoveReader cancelRoot:]
  -[FPDMoveReader initWithMoveWriter:operation:queue:]
  -[FPDMoveReader setRootPreflightCompletionBlock:]
  -[FPDMoveReader setPreflightCompletionBlock:]
  -[FPDMoveReader setStartDownloadBlock:]
  -[FPDMoveReader _t_unblock]
  -[FPDMoveReader _progressComputationPreflight]
  -[FPDMoveReader _isRootCancelled:]
  -[FPDMoveReader rootPreflightCompletionBlock]
  -[FPDMoveReader preflightCompletionBlock]
  -[FPDMoveReader _getTargetFolderFor:root:error:]
  -[FPDMoveReader _targetNameForSource:]
  -[FPDMoveReader startDownloadBlock]
  -[FPDMoveReader _isSingleMoveForRoot:]
  -[FPDMoveReader _shouldUseDiskWriterToPerformMoveForItem:]
  -[FPDMoveReader _enqueueItem:forRoot:atomically:useDiskWriter:]
  -[FPDMoveReader _t_waitForUnblock]
  -[FPDMoveReader _bailOutOfRoot:]
  -[FPDMoveReader _enqueueAtomsForRoot:]


FPDMoveAtom : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned char kind
 @property  FPActionOperationLocator *root
 @property  FPActionOperationLocator *source
 @property  NSString *targetName
 @property  FPActionOperationLocator *targetFolder
 @property  BOOL useAtomicMove
 @property  BOOL useDiskWriter
 @property  unsigned long materializeOption
 @property  unsigned long targetMaterializeOption

  // class methods
  +[FPDMoveAtom atomForMoving:toTargetFolder:as:root:atomically:sourceMaterializeOption:targetMaterializeOption:useDiskWriter:]
  +[FPDMoveAtom atomForPostFolderUnderRoot:atomically:useDiskWriter:]

  // instance methods
  -[FPDMoveAtom .cxx_destruct]
  -[FPDMoveAtom source]
  -[FPDMoveAtom kind]
  -[FPDMoveAtom root]
  -[FPDMoveAtom targetName]
  -[FPDMoveAtom targetFolder]
  -[FPDMoveAtom shouldAccountForDownloadOfSourceItemForMoveInfo:extensionManager:]
  -[FPDMoveAtom initWithKind:source:targetName:targetFolder:root:atomically:sourceMaterializeOption:targetMaterializeOption:useDiskWriter:]
  -[FPDMoveAtom useAtomicMove]
  -[FPDMoveAtom useDiskWriter]
  -[FPDMoveAtom materializeOption]
  -[FPDMoveAtom targetMaterializeOption]


FPDAccessRight : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned long level
 @property  FPDExtension *provider

  // instance methods
  -[FPDAccessRight init]
  -[FPDAccessRight .cxx_destruct]
  -[FPDAccessRight level]
  -[FPDAccessRight provider]
  -[FPDAccessRight _computeAccessForURL:entitlements:connection:]
  -[FPDAccessRight initWithURL:entitlements:connection:manager:]
  -[FPDAccessRight initWithURL:connection:manager:]


FPDDomainIndexer : NSObject /usr/lib/libSystem.B.dylib
 @property  FPDExtension *extension
 @property  BOOL needsAuthentication
 @property  NSString *domainIdentifier
 @property  <FPDDomainIndexerDelegate> *delegate
 @property  FPDDomain *domain

  // instance methods
  -[FPDDomainIndexer invalidate]
  -[FPDDomainIndexer domain]
  -[FPDDomainIndexer setDomainIdentifier:]
  -[FPDDomainIndexer domainIdentifier]
  -[FPDDomainIndexer delegate]
  -[FPDDomainIndexer setDelegate:]
  -[FPDDomainIndexer .cxx_destruct]
  -[FPDDomainIndexer setExtension:]
  -[FPDDomainIndexer extension]
  -[FPDDomainIndexer _cancelTimer]
  -[FPDDomainIndexer needsAuthentication]
  -[FPDDomainIndexer setNeedsAuthentication:]
  -[FPDDomainIndexer indexOneBatchWithCompletionHandler:]
  -[FPDDomainIndexer dumpStateTo:]
  -[FPDDomainIndexer signalNeedsReindexFromScratchWithCompletionHandler:]
  -[FPDDomainIndexer initWithExtension:domain:enabled:]
  -[FPDDomainIndexer startWithSyncAnchor:]
  -[FPDDomainIndexer dropIndexWithError:]
  -[FPDDomainIndexer signalChangesWithCompletionHandler:]
  -[FPDDomainIndexer readNeedsIndexingFromDisk]
  -[FPDDomainIndexer readNeedsAuthFromDisk]
  -[FPDDomainIndexer registerAnchor:]
  -[FPDDomainIndexer _indexOneBatchIfPossibleClearingNeedsIndexing:]
  -[FPDDomainIndexer clearNeedsAuthOnDisk]
  -[FPDDomainIndexer persistsNeedsAuthOnDisk]
  -[FPDDomainIndexer clearNeedsIndexingOnDisk]
  -[FPDDomainIndexer canContinueIndexing]
  -[FPDDomainIndexer _handleOneBatchCompletionWithError:hasMoreChanges:]
  -[FPDDomainIndexer dropIndexWithCompletion:]
  -[FPDDomainIndexer localSpotlightIndexer]
  -[FPDDomainIndexer persistNeedsIndexingOnDisk]
  -[FPDDomainIndexer _signalChangesWithCompletionHandler:]
  -[FPDDomainIndexer setIndexingEnabled:completionHandler:]


FPDProvider : NSObject /usr/lib/libSystem.B.dylib
 @property  NSArray *requestedExtendedAttributes
 @property  NSObject<OS_dispatch_queue> *queue
 @property  FPDProviderDescriptor *descriptor
 @property  NSString *identifier
 @property  NSString *purposeIdentifier
 @property  NSString *bundleVersion
 @property  NSArray *extensionStorageURLs
 @property  BOOL supportsEnumeration
 @property  BOOL invalidated
 @property  BOOL supportsFPFS
 @property  BOOL disabledByFPFSSettings
 @property  BOOL isAppExtensionReachable
 @property  FPDExtension *asAppExtensionBackedProvider
 @property  NSSet *blacklistedProcessNames
 @property  NSURL *supportURL
 @property  NSURL *domainsPlistURL
 @property  NSURL *providerPlistURL
 @property  FPDServer *server
 @property  FPDExtensionManager *manager
 @property  FPDProvider *providerIfNotDisabledByFPFSSettings
 @property  NSDictionary *relevantDomainsByID
 @property  NSDictionary *nsDomainsByID
 @property  NSMutableDictionary *domainsByID
 @property  NSArray *providedItemsURLs

  // instance methods
  -[FPDProvider invalidate]
  -[FPDProvider queue]
  -[FPDProvider .cxx_destruct]
  -[FPDProvider identifier]
  -[FPDProvider purposeIdentifier]
  -[FPDProvider manager]
  -[FPDProvider bundleVersion]
  -[FPDProvider server]
  -[FPDProvider descriptor]
  -[FPDProvider invalidated]
  -[FPDProvider domainForIdentifier:]
  -[FPDProvider supportsEnumeration]
  -[FPDProvider startWithCompletion:]
  -[FPDProvider writeCheckReportTo:limitNumberOfItems:completionHandler:]
  -[FPDProvider domainForURL:]
  -[FPDProvider initWithDescriptor:server:]
  -[FPDProvider extensionStorageURLs]
  -[FPDProvider supportsFPFS]
  -[FPDProvider importDomainsFromDisk]
  -[FPDProvider relevantDomainsByID]
  -[FPDProvider domainsByID]
  -[FPDProvider isAppExtensionReachable]
  -[FPDProvider asAppExtensionBackedProvider]
  -[FPDProvider setEjectable:forDomainIdentifier:completionHandler:]
  -[FPDProvider dumpStateTo:limitNumberOfItems:]
  -[FPDProvider setRequestedExtendedAttributes:]
  -[FPDProvider requestedExtendedAttributes]
  -[FPDProvider isDisabledByFPFSSettings]
  -[FPDProvider providerDomainForNSDomain:]
  -[FPDProvider reloadDomain:unableToStartup:completionHandler:]
  -[FPDProvider writeDomainProperties]
  -[FPDProvider blacklistedProcessNames]
  -[FPDProvider providedItemsURLs]
  -[FPDProvider supportURL]
  -[FPDProvider _startOrClearDomain:completion:]
  -[FPDProvider _supportsFPFS]
  -[FPDProvider _writeDomainProperties]
  -[FPDProvider _writeDomainPropertiesIfChangedFrom:]
  -[FPDProvider domainsPlistURL]
  -[FPDProvider defaultNSDomain]
  -[FPDProvider newDomainFromNSDomain:]
  -[FPDProvider _markDomainIfIndexShouldBeDropped:]
  -[FPDProvider _recreateDefaultDomainIfNeeded]
  -[FPDProvider addDomain:byImportingDirectoryAtURL:unableToStartup:reloadDomain:request:completionHandler:]
  -[FPDProvider _createSymlinkForDomain:]
  -[FPDProvider setEnabled:forDomainIdentifier:request:completionHandler:]
  -[FPDProvider dumpValue:forKey:to:]
  -[FPDProvider providerIfNotDisabledByFPFSSettings]
  -[FPDProvider addDomain:byImportingDirectoryAtURL:request:completionHandler:]
  -[FPDProvider removeAllDomainsForRequest:completionHandler:]
  -[FPDProvider removeDomain:options:request:completionHandler:]
  -[FPDProvider nsDomainsByID]
  -[FPDProvider enableAllDomainsIfNoUserElection]
  -[FPDProvider setBlacklistedProcessNames:]
  -[FPDProvider providerPlistURL]


FPDAccessControlServicer : NSObject /usr/lib/libSystem.B.dylib <FPDAccessControlServicing>
 @property  FPDAccessControlStore *accessStore
 @property  FPDExtensionManager *extensionManager

  // instance methods
  -[FPDAccessControlServicer .cxx_destruct]
  -[FPDAccessControlServicer bundleIdentifiersWithAccessToAnyItemCompletionHandler:]
  -[FPDAccessControlServicer revokeAccessToAllItemsForBundle:completionHandler:]
  -[FPDAccessControlServicer fetchEnumeratorForItemsAccessibleByBundleIdentifier:completionHandler:]
  -[FPDAccessControlServicer revokeAccessToAllBundlesCompletionHandler:]
  -[FPDAccessControlServicer setExtensionManager:]
  -[FPDAccessControlServicer extensionManager]
  -[FPDAccessControlServicer _lowerToUpperBundleIdentifiers]
  -[FPDAccessControlServicer initWithExtensionManager:accessStore:]
  -[FPDAccessControlServicer accessibleItemsForBundleIdentifier:completionHandler:]
  -[FPDAccessControlServicer accessStore]
  -[FPDAccessControlServicer setAccessStore:]


_FPDAccessControlEnumerator : NSObject /usr/lib/libSystem.B.dylib <FPXEnumerator>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_FPDAccessControlEnumerator invalidate]
  -[_FPDAccessControlEnumerator .cxx_destruct]
  -[_FPDAccessControlEnumerator currentSyncAnchorWithCompletion:]
  -[_FPDAccessControlEnumerator enumerateItemsFromPage:reply:]
  -[_FPDAccessControlEnumerator enumerateChangesFromToken:reply:]
  -[_FPDAccessControlEnumerator keepAliveConnectionForRegisteredObserver:]
  -[_FPDAccessControlEnumerator initWithBundleIdentifier:servicer:]
  -[_FPDAccessControlEnumerator fetchOnDB:withOffset:]
  -[_FPDAccessControlEnumerator enumeratorBecameFrontmost:inWindow:completionHandler:]


FPDWakeupTransaction : NSObject /usr/lib/libSystem.B.dylib <FPDWakeupTransaction>

FPDXPCServicer : NSObject /usr/lib/libSystem.B.dylib <FPDDaemon>
 @property  FPDServer *server
 @property  NSXPCConnection *connection

  // instance methods
  -[FPDXPCServicer init]
  -[FPDXPCServicer invalidate]
  -[FPDXPCServicer .cxx_destruct]
  -[FPDXPCServicer connection]
  -[FPDXPCServicer setConnection:]
  -[FPDXPCServicer setServer:]
  -[FPDXPCServicer server]
  -[FPDXPCServicer pid]
  -[FPDXPCServicer reindexAllSearchableItemsWithAcknowledgementHandler:]
  -[FPDXPCServicer providerDomainsCompletionHandler:]
  -[FPDXPCServicer updateBlacklistedProcessNamesForProvider:processNames:completionHandler:]
  -[FPDXPCServicer itemForURL:completionHandler:]
  -[FPDXPCServicer trashItemAtURL:completionHandler:]
  -[FPDXPCServicer _test_callFileProviderManagerAPIs:]
  -[FPDXPCServicer startOperation:toFetchIconsForAppBundleIDs:requestedSize:scale:completionHandler:]
  -[FPDXPCServicer wakeUpForURL:completionHandler:]
  -[FPDXPCServicer evictItemAtURL:evenIfEnumeratingFP:andClearACLForConsumer:completionHandler:]
  -[FPDXPCServicer setAlternateContentsURL:onDocumentURL:completionHandler:]
  -[FPDXPCServicer fetchAlternateContentsURLForDocumentURL:completionHandler:]
  -[FPDXPCServicer didUpdateAlternateContentsDocumentForDocumentAtURL:completionHandler:]
  -[FPDXPCServicer scheduleActionOperationWithInfo:completionHandler:]
  -[FPDXPCServicer setEnabled:forDomainIdentifier:providerIdentifier:completionHandler:]
  -[FPDXPCServicer providerDomainForURL:completionHandler:]
  -[FPDXPCServicer providerDomainForIdentifier:completionHandler:]
  -[FPDXPCServicer extendSandboxForFileURL:fromProviderID:toConsumerID:completionHandler:]
  -[FPDXPCServicer startProvidingItemAtURL:fromProviderID:forConsumerID:completionHandler:]
  -[FPDXPCServicer evictItemWithID:completionHandler:]
  -[FPDXPCServicer pinItemWithID:completionHandler:]
  -[FPDXPCServicer unpinItemWithID:completionHandler:]
  -[FPDXPCServicer fetchDomainServicerForProviderDomainID:handler:]
  -[FPDXPCServicer extendBookmarkForFileURL:toConsumerID:completionHandler:]
  -[FPDXPCServicer updateLastUsedDate:completionHandler:]
  -[FPDXPCServicer forceIngestionForItemID:completionHandler:]
  -[FPDXPCServicer forceIngestionForItemIDs:completionHandler:]
  -[FPDXPCServicer createItemBasedOnTemplate:fields:urlWrapper:options:bounceOnCollision:completionHandler:]
  -[FPDXPCServicer bookmarkableStringFromDocumentURL:completionHandler:]
  -[FPDXPCServicer documentURLFromBookmarkableString:creatingPlaceholderIfMissing:ignoreAlternateContentsURL:completionHandler:]
  -[FPDXPCServicer valuesForAttributes:forItemAtURL:completionHandler:]
  -[FPDXPCServicer fetchListOfMonitoredApps:]
  -[FPDXPCServicer dumpStateTo:limitNumberOfItems:completionHandler:]
  -[FPDXPCServicer writeCheckReportTo:limitNumberOfItems:completionHandler:]
  -[FPDXPCServicer _test_retrieveItemWithName:completionHandler:]
  -[FPDXPCServicer makeTopologicallySortedItemsOnDisk:completionHandler:]
  -[FPDXPCServicer getURLForContainerWithItemID:inDataScopeDomainWithIdentifier:documentsScopeDomainIdentifier:documentsFolderItemIdentifier:completionHandler:]
  -[FPDXPCServicer backUpUserURL:outputUserURL:completionHandler:]
  -[FPDXPCServicer restoreUserURL:completionHandler:]
  -[FPDXPCServicer fetchAccessServicer:]
  -[FPDXPCServicer fetchDaemonOperationWithID:completionHandler:]
  -[FPDXPCServicer fetchDaemonOperationIDsWithCompletionHandler:]
  -[FPDXPCServicer removeDomain:forProviderIdentifier:options:completionHandler:]
  -[FPDXPCServicer removeAllDomainsForProviderIdentifier:completionHandler:]
  -[FPDXPCServicer addDomain:forProviderIdentifier:byImportingDirectoryAtURL:completionHandler:]
  -[FPDXPCServicer getDomainsForProviderIdentifier:completionHandler:]
  -[FPDXPCServicer enumerateMaterializedSetForDomain:inProvider:syncAnchor:completionHandler:]
  -[FPDXPCServicer currentMaterializedSetSyncAnchorForDomain:completionHandler:]
  -[FPDXPCServicer reimportItemsBelowItemWithID:removeCachedItems:markItemDataless:completionHandler:]
  -[FPDXPCServicer setDownloadPolicy:forItemWithID:completionHandler:]
  -[FPDXPCServicer ingestFromCacheItemWithID:requestedFields:completionHandler:]
  -[FPDXPCServicer fetchFSItemsForItemIdentifiers:providerIdentifier:domainIdentifier:materializingIfNeeded:completionHandler:]
  -[FPDXPCServicer fetchIndexPropertiesForItemAtURL:completionHandler:]
  -[FPDXPCServicer extendBookmarkForItemID:consumerID:completionHandler:]
  -[FPDXPCServicer materializeURL:completionHandler:]
  -[FPDXPCServicer noteURLBecameFrontmost:inWindow:completionHandler:]
  -[FPDXPCServicer reindexAllSearchableItemsForBundleIDs:acknowledgementHandler:]
  -[FPDXPCServicer startAccessingExtensionForProviderDomainID:handler:]
  -[FPDXPCServicer startAccessingOperationServiceForProviderDomainID:handler:]
  -[FPDXPCServicer startAccessingServiceForItemID:completionHandler:]
  -[FPDXPCServicer startAccessingServiceForItemURL:completionHandler:]
  -[FPDXPCServicer _test_callRemoveTrashedItemsOlderThanDate:completionHandler:]
  -[FPDXPCServicer _test_simulateInstallOfBundleID:completionHandler:]
  -[FPDXPCServicer _test_simulateUninstallOfBundleID:completionHandler:]
  -[FPDXPCServicer providerForCurrentConnection]
  -[FPDXPCServicer providerForIdentifier:enumerateEntitlementRequired:error:]
  -[FPDXPCServicer createDomainServicerForProviderDomainID:enumerateEntitlementRequired:error:]
  -[FPDXPCServicer _forceIngestionForItemID:completionHandler:]
  -[FPDXPCServicer stageLocation]
  -[FPDXPCServicer writeMetadata:onURL:error:]
  -[FPDXPCServicer clientHasSandboxAccessToFile:]
  -[FPDXPCServicer _isNonSandboxedConnection]
  -[FPDXPCServicer startAccessingServiceForItemID:connection:enumerateEntitlementRequired:completionHandler:]


FPDFetchAppLibraryIconOperation : FPOperation /System/Library/PrivateFrameworks/ApplePushService.framework/ApplePushService <FPOperationClient>
 @property  BOOL allowLocalLookup
 @property  BOOL allowAppStoreLookup
 @property  NSArray *appBundleIDs
 @property  NSProgress *progress
 @property  @? perAppBundleCompletion

  // class methods
  +[FPDFetchAppLibraryIconOperation sharedOperationQueue]

  // instance methods
  -[FPDFetchAppLibraryIconOperation .cxx_destruct]
  -[FPDFetchAppLibraryIconOperation main]
  -[FPDFetchAppLibraryIconOperation progress]
  -[FPDFetchAppLibraryIconOperation operationDidProgressWithInfo:error:completionHandler:]
  -[FPDFetchAppLibraryIconOperation initWithAppBundleIDs:desiredSize:screenScale:]
  -[FPDFetchAppLibraryIconOperation setPerAppBundleCompletion:]
  -[FPDFetchAppLibraryIconOperation _perAppBundleCompletion:iconData:contentType:error:]
  -[FPDFetchAppLibraryIconOperation _verifyAppBundleIDsFormat]
  -[FPDFetchAppLibraryIconOperation _retrieveIconsFromLocalDevice]
  -[FPDFetchAppLibraryIconOperation _retrieveIconsFromAppStore]
  -[FPDFetchAppLibraryIconOperation _checkTypeIsValid:]
  -[FPDFetchAppLibraryIconOperation _checkIsNotPrefixedByTeamID:]
  -[FPDFetchAppLibraryIconOperation perAppBundleCompletion]
  -[FPDFetchAppLibraryIconOperation appBundleIDs]
  -[FPDFetchAppLibraryIconOperation allowLocalLookup]
  -[FPDFetchAppLibraryIconOperation setAllowLocalLookup:]
  -[FPDFetchAppLibraryIconOperation allowAppStoreLookup]
  -[FPDFetchAppLibraryIconOperation setAllowAppStoreLookup:]


FPDDownloadManager : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[FPDDownloadManager initialize]
  +[FPDDownloadManager sharedInstance]
  +[FPDDownloadManager acquireDownloadSlotForItem:]
  +[FPDDownloadManager releaseDownloadSlot:]

  // instance methods
  -[FPDDownloadManager init]
  -[FPDDownloadManager .cxx_destruct]
  -[FPDDownloadManager progressComputationPreflightForRecursiveRoot:downloader:itemProgressNeedsSetup:itemProgressSetup:completion:]
  -[FPDDownloadManager retrieveFPItemForURL:domain:completion:]
  -[FPDDownloadManager progressComputationPreflightForItem:]
  -[FPDDownloadManager downloadItem:recursively:downloader:request:perItemCompletion:withCompletion:]
  -[FPDDownloadManager _recursivelyDownloadItem:downloader:request:perItemCompletion:withCompletion:]
  -[FPDDownloadManager _downloadItem:downloader:request:withCompletion:]
  -[FPDDownloadManager downloadItems:recursively:downloader:request:perItemCompletion:withCompletion:]


FPDRequest : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  int pid
 @property  NSString *processName
 @property  NSString *executablePath
 @property  BOOL fromPOSIX
 @property  NSString *shortDescription

  // class methods
  +[FPDRequest supportsSecureCoding]
  +[FPDRequest requestForSelf]
  +[FPDRequest requestForPID:]
  +[FPDRequest requestForPID:fromPOSIX:]
  +[FPDRequest UUIDForExecutablePath:]

  // instance methods
  -[FPDRequest encodeWithCoder:]
  -[FPDRequest initWithCoder:]
  -[FPDRequest .cxx_destruct]
  -[FPDRequest executablePath]
  -[FPDRequest processName]
  -[FPDRequest pid]
  -[FPDRequest shortDescription]
  -[FPDRequest nsfpRequestWithIdentifier:forSession:]
  -[FPDRequest initWithPID:fromPOSIX:]
  -[FPDRequest isFromPOSIX]


FPDFilePresenter : NSObject /usr/lib/libSystem.B.dylib <FPXEnumeratorObserver, FPDLifetimeExtender>
 @property  FPItemID *itemID
 @property  id filePresenterID
 @property  int presenterPid
 @property  BOOL isEnumeratorActive
 @property  BOOL isFrontmost
 @property  NSURL *presentedItemURL
 @property  FPDDomain *domain
 @property  FPItemID *observedItemID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  int requestEffectivePID
 @property  NSString *prettyDescription

  // class methods
  +[FPDFilePresenter presenter:withItemID:pid:urlHint:domain:]

  // instance methods
  -[FPDFilePresenter isEqual:]
  -[FPDFilePresenter domain]
  -[FPDFilePresenter .cxx_destruct]
  -[FPDFilePresenter stop]
  -[FPDFilePresenter start]
  -[FPDFilePresenter enumerator]
  -[FPDFilePresenter presentedItemURL]
  -[FPDFilePresenter itemID]
  -[FPDFilePresenter setItemID:]
  -[FPDFilePresenter setDomain:]
  -[FPDFilePresenter observedItemID]
  -[FPDFilePresenter enumerationResultsDidChange]
  -[FPDFilePresenter dumpStateTo:]
  -[FPDFilePresenter prettyDescription]
  -[FPDFilePresenter didUpdateItem:]
  -[FPDFilePresenter requestEffectivePID]
  -[FPDFilePresenter initWithIdentifier:itemID:pid:urlHint:domain:]
  -[FPDFilePresenter filePresenterID]
  -[FPDFilePresenter _presentedItemDescription:]
  -[FPDFilePresenter setIsEnumeratorActive:]
  -[FPDFilePresenter _fetchChangeToken]
  -[FPDFilePresenter _destroyEnumerator]
  -[FPDFilePresenter _newCoordinator]
  -[FPDFilePresenter _fetchUpdates]
  -[FPDFilePresenter receiveUpdatedItems:deletedItemsIdentifiers:]
  -[FPDFilePresenter _enumeratorRequestDidFailWithXPCError:section:]
  -[FPDFilePresenter isEnumeratorActive]
  -[FPDFilePresenter becomeFrontmost:inWindow:completionHandler:]
  -[FPDFilePresenter setFilePresenterID:]
  -[FPDFilePresenter presenterPid]
  -[FPDFilePresenter setPresenterPid:]
  -[FPDFilePresenter isFrontmost]
  -[FPDFilePresenter setIsFrontmost:]


FPDExtensionIndexer : FPDDomainIndexer
  // instance methods
  -[FPDExtensionIndexer indexOneBatchWithCompletionHandler:]


FPDDiskIterator : FPDIterator
  // instance methods
  -[FPDDiskIterator dealloc]
  -[FPDDiskIterator .cxx_destruct]
  -[FPDDiskIterator error]
  -[FPDDiskIterator done]
  -[FPDDiskIterator skipMaterializedTreeTraversal]
  -[FPDDiskIterator nextWithError:]
  -[FPDDiskIterator numFoldersPopped]
  -[FPDDiskIterator initWithURL:isDirectory:]


FPDActionOperationEngine : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[FPDActionOperationEngine init]
  -[FPDActionOperationEngine .cxx_destruct]
  -[FPDActionOperationEngine initWithServer:]
  -[FPDActionOperationEngine dumpStateTo:]
  -[FPDActionOperationEngine scheduleActionOperationWithInfo:request:completionHandler:]
  -[FPDActionOperationEngine inFlightOperations]


FPDExtensionManager : NSObject /usr/lib/libSystem.B.dylib
 @property  FPDServer *server
 @property  FPDPushConnection *pushConnection

  // instance methods
  -[FPDExtensionManager .cxx_destruct]
  -[FPDExtensionManager setServer:]
  -[FPDExtensionManager server]
  -[FPDExtensionManager initWithServer:]
  -[FPDExtensionManager providerWithIdentifier:]
  -[FPDExtensionManager domainForURL:]
  -[FPDExtensionManager pushConnection]
  -[FPDExtensionManager allProviders]
  -[FPDExtensionManager loadProvidersAndMonitorWithUpdateHandler:]
  -[FPDExtensionManager dropLegacyDaemonCoreSpotlightIndexIfNeeded]
  -[FPDExtensionManager domainFromItemID:]
  -[FPDExtensionManager nonEvictableSizeByProviderDomain]
  -[FPDExtensionManager providerDomainsByID]
  -[FPDExtensionManager providerWithTopLevelBundleIdentifier:]
  -[FPDExtensionManager reconnectProviderForURLIfNeeded:completion:]
  -[FPDExtensionManager clouddocsExtensionIdentifier]
  -[FPDExtensionManager setAlternateContentsURL:forItemID:]
  -[FPDExtensionManager alternateContentsURLForItemID:]
  -[FPDExtensionManager xattrForName:url:]
  -[FPDExtensionManager garbageCollectDomainOwnedDirectoriesAtURL:isUserData:installedProviderIdentifiers:]
  -[FPDExtensionManager _loadAlternateContentsDictionary]
  -[FPDExtensionManager _garbageCollectRemovedProvidersForInstalledProviderIdentifiers:]
  -[FPDExtensionManager migrateEnabledStateIfNecessary:]
  -[FPDExtensionManager _updateProviderListForMatchingExtensions:allExtensionStartedHandler:]
  -[FPDExtensionManager afterFirstDiscovery]
  -[FPDExtensionManager uniquedExtensions:]
  -[FPDExtensionManager providerDomainsByIDFromExtensionsByID:]
  -[FPDExtensionManager _domainForURL:]
  -[FPDExtensionManager _serializeAlternateContentsURLDictionary:]
  -[FPDExtensionManager _deserializedAlternateContentsDictionary]
  -[FPDExtensionManager extensionsByID:]
  -[FPDExtensionManager domainForActionOperationLocator:]
  -[FPDExtensionManager alternateContentsDictionaryForProviderIdentifier:]


FPDMoveWriterToProvider : NSObject /usr/lib/libSystem.B.dylib <FPDMoveWriterExecutor>
  // instance methods
  -[FPDMoveWriterToProvider .cxx_destruct]
  -[FPDMoveWriterToProvider _remoteProxy]
  -[FPDMoveWriterToProvider performMoveOfItem:to:as:sourceMaterializeOption:targetMaterializeOption:completion:]
  -[FPDMoveWriterToProvider performCreateFolder:inside:as:completion:]
  -[FPDMoveWriterToProvider initWithWriter:]
  -[FPDMoveWriterToProvider performCopyOfItem:to:as:sourceMaterializeOption:targetMaterializeOption:completion:]
  -[FPDMoveWriterToProvider performMoveOfFolder:to:as:sourceMaterializeOption:targetMaterializeOption:atomically:completion:]
  -[FPDMoveWriterToProvider _postImportStepForItem:sourceURL:targetURL:tempFolder:wasCopy:error:completion:]
  -[FPDMoveWriterToProvider _createTargetItemWithProxy:target:contents:targetName:lastUsedDate:completionHandler:]
  -[FPDMoveWriterToProvider _importURL:source:target:as:lastUsedDate:initialImportFinished:progressAvailable:completion:]
  -[FPDMoveWriterToProvider _resolveItemOrURL:andCoordinateWithHandler:]
  -[FPDMoveWriterToProvider _createFolder:under:completion:]


FPDMoveWriter : NSObject /usr/lib/libSystem.B.dylib <FPCancellable>
 @property  <FPDMoveWriterExecutor> *diskWriter
 @property  FPMoveInfo *info
 @property  NSObject<OS_dispatch_queue> *queue
 @property  FPDCoordinator *coordinator
 @property  FPDMoveOperation *operation
 @property  @? itemCopyProgressBlock
 @property  @? itemCompletionBlock
 @property  @? rootCreatedBlock
 @property  @? rootCompletionBlock
 @property  @? completionBlock

  // class methods
  +[FPDMoveWriter initialize]
  +[FPDMoveWriter acquireDownloadSlotForItem:]
  +[FPDMoveWriter releaseDownloadSlot:]

  // instance methods
  -[FPDMoveWriter queue]
  -[FPDMoveWriter .cxx_destruct]
  -[FPDMoveWriter failWithError:]
  -[FPDMoveWriter cancel]
  -[FPDMoveWriter operation]
  -[FPDMoveWriter start]
  -[FPDMoveWriter completionBlock]
  -[FPDMoveWriter setCompletionBlock:]
  -[FPDMoveWriter info]
  -[FPDMoveWriter _step]
  -[FPDMoveWriter setCoordinator:]
  -[FPDMoveWriter coordinator]
  -[FPDMoveWriter _finishWithError:]
  -[FPDMoveWriter dumpStateTo:]
  -[FPDMoveWriter cancelRoot:]
  -[FPDMoveWriter initWithOperation:queue:]
  -[FPDMoveWriter startDownloadOfItem:shouldMaterializeRecursively:]
  -[FPDMoveWriter setItemCopyProgressBlock:]
  -[FPDMoveWriter setItemCompletionBlock:]
  -[FPDMoveWriter setRootCreatedBlock:]
  -[FPDMoveWriter setRootCompletionBlock:]
  -[FPDMoveWriter setProgress:forRoot:]
  -[FPDMoveWriter performCreateFolder:inside:as:completion:]
  -[FPDMoveWriter performCopyOfItem:to:as:sourceMaterializeOption:targetMaterializeOption:completion:]
  -[FPDMoveWriter waitForResultOfSourceID:root:error:]
  -[FPDMoveWriter _handleCompletionOfAtom:source:result:error:]
  -[FPDMoveWriter handleCreationForAtom:result:]
  -[FPDMoveWriter performCopyOfItem:to:as:sourceMaterializeOption:targetMaterializeOption:useDiskWriter:completion:]
  -[FPDMoveWriter performMoveOfItem:to:as:sourceMaterializeOption:targetMaterializeOption:useDiskWriter:completion:]
  -[FPDMoveWriter _performCopyOrMoveOfItem:completion:]
  -[FPDMoveWriter performMoveOfFolder:to:as:sourceMaterializeOption:targetMaterializeOption:atomically:useDiskWriter:completion:]
  -[FPDMoveWriter _unblockWaiterForSourceID:withResult:error:]
  -[FPDMoveWriter _performCopyOrMoveOfFolder:completion:]
  -[FPDMoveWriter itemCompletionBlock]
  -[FPDMoveWriter rootCreatedBlock]
  -[FPDMoveWriter _removeRoot:]
  -[FPDMoveWriter rootCompletionBlock]
  -[FPDMoveWriter _handleItem:completion:]
  -[FPDMoveWriter _handleFolder:completion:]
  -[FPDMoveWriter _handlePostFolder:completion:]
  -[FPDMoveWriter handleAtom:completion:]
  -[FPDMoveWriter itemCopyProgressBlock]
  -[FPDMoveWriter diskWriter]
  -[FPDMoveWriter defaultExecutor]
  -[FPDMoveWriter setDiskWriter:]


FPDPushConnection : NSObject /usr/lib/libSystem.B.dylib <NSXPCListenerDelegate, PKFileProviderXPCServer, APSConnectionDelegate, FPProviderObserver>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FPDPushConnection init]
  -[FPDPushConnection .cxx_destruct]
  -[FPDPushConnection listener:shouldAcceptNewConnection:]
  -[FPDPushConnection start]
  -[FPDPushConnection connection:didReceivePublicToken:]
  -[FPDPushConnection connection:didReceiveIncomingMessage:]
  -[FPDPushConnection connection:didReceiveToken:forTopic:identifier:]
  -[FPDPushConnection fileProviderRegister]
  -[FPDPushConnection fileProviderUnregister]
  -[FPDPushConnection providerDidEnterForeground:]
  -[FPDPushConnection providerDidEnterBackground:]
  -[FPDPushConnection initWithExtensionManager:]
  -[FPDPushConnection _debugTopicsForApplicationIdentifier:]
  -[FPDPushConnection setMessageDelegate:forApplicationBundleIdentifier:]
  -[FPDPushConnection updateTopicsForBundleIdentifier:]
  -[FPDPushConnection clientConnectionsForApplicationBundleIdentifier:]
  -[FPDPushConnection addClientConnection:forApplicationBundleIdentifier:]
  -[FPDPushConnection updateTopicsForApplicationBundleIdentifier:providerIdentifier:requestToken:environment:]
  -[FPDPushConnection performWithConnection:block:]
  -[FPDPushConnection removeClientConnection:forApplicationBundleIdentifier:]
  -[FPDPushConnection _pushConnectionWithEnvironmentName:]
  -[FPDPushConnection topicsForApplicationBundleIdentifier:]
  -[FPDPushConnection updateTopicsForProvider:]


FPDPresenterManager : NSObject /usr/lib/libSystem.B.dylib
 @property  NSDictionary *presenters

  // instance methods
  -[FPDPresenterManager .cxx_destruct]
  -[FPDPresenterManager removePresenter:]
  -[FPDPresenterManager presenters]
  -[FPDPresenterManager initWithExtensionManager:]
  -[FPDPresenterManager addPresenter:itemID:urlHint:pid:]
  -[FPDPresenterManager signalPresentersForItemID:]
  -[FPDPresenterManager presentersForDomain:]
  -[FPDPresenterManager noteItemBecameFrontmost:inWindow:completionHandler:]


FPDIterator : NSObject /usr/lib/libSystem.B.dylib
 @property  NSError *error
 @property  unsigned long numFoldersPopped
 @property  BOOL done
 @property  BOOL skipMaterializedTreeTraversal
 @property  BOOL shouldDecorateItems

  // class methods
  +[FPDIterator iteratorForLocator:manager:]
  +[FPDIterator iteratorForLocator:provider:]

  // instance methods
  -[FPDIterator .cxx_destruct]
  -[FPDIterator error]
  -[FPDIterator done]
  -[FPDIterator nextItem]
  -[FPDIterator shouldDecorateItems]
  -[FPDIterator skipMaterializedTreeTraversal]
  -[FPDIterator nextWithError:]
  -[FPDIterator numFoldersPopped]
  -[FPDIterator setShouldDecorateItems:]
  -[FPDIterator setSkipMaterializedTreeTraversal:]


_FPDExtensionRequestRecord : NSObject /usr/lib/libSystem.B.dylib
 @property  FPXPCAutomaticErrorProxy *proxy
 @property  SEL selector
 @property  NSDate *timeout

  // instance methods
  -[_FPDExtensionRequestRecord selector]
  -[_FPDExtensionRequestRecord .cxx_destruct]
  -[_FPDExtensionRequestRecord setSelector:]
  -[_FPDExtensionRequestRecord timeout]
  -[_FPDExtensionRequestRecord setTimeout:]
  -[_FPDExtensionRequestRecord setProxy:]
  -[_FPDExtensionRequestRecord proxy]


FPDExtensionSession : NSObject /usr/lib/libSystem.B.dylib <FPDProcessMonitorDelegate, FPDExtensionSessionProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL hasFileProviderPresenceTCCAccess

  // instance methods
  -[FPDExtensionSession dealloc]
  -[FPDExtensionSession invalidate]
  -[FPDExtensionSession .cxx_destruct]
  -[FPDExtensionSession start]
  -[FPDExtensionSession dumpStateTo:]
  -[FPDExtensionSession newFileProviderProxyWithPID:]
  -[FPDExtensionSession newFileProviderProxyWithoutPID]
  -[FPDExtensionSession newFileProviderProxyWithoutPIDWithTimeout:]
  -[FPDExtensionSession asyncUnregisterLifetimeExtensionForObject:]
  -[FPDExtensionSession registerLifetimeExtensionForObject:]
  -[FPDExtensionSession unregisterLifetimeExtensionForObject:]
  -[FPDExtensionSession newFileProviderProxyWithTimeout:pid:]
  -[FPDExtensionSession processMonitor:didBecomeForeground:]
  -[FPDExtensionSession initWithDomain:extension:queue:]
  -[FPDExtensionSession existingFileProviderProxyWithTimeout:pid:]
  -[FPDExtensionSession hasFileProviderPresenceTCCAccess]
  -[FPDExtensionSession __invalidateWithCancellation:]
  -[FPDExtensionSession _networkingGracePeriodOver]
  -[FPDExtensionSession _setUpConnectionWithAttemptNumber:error:]
  -[FPDExtensionSession _evaluateExtensionForegroundness]
  -[FPDExtensionSession _invalidateWithCancellation:]
  -[FPDExtensionSession _alternateContentsDictionary]
  -[FPDExtensionSession updatePresenceTCCWithAuditToken:]
  -[FPDExtensionSession newFileProviderProxyWithTimeout:pid:createIfNeeded:]
  -[FPDExtensionSession _connectionWithError:]
  -[FPDExtensionSession _invalidateExtensionIfPossible]
  -[FPDExtensionSession _unregisterLifetimeExtensionForObject:]
  -[FPDExtensionSession _notifyNetworkingProviderMonitorWithState:]
  -[FPDExtensionSession newAssertionWithFlags:reason:]
  -[FPDExtensionSession newForegroundAssertion]
  -[FPDExtensionSession newBackgroundAssertion]
  -[FPDExtensionSession setHasFileProviderPresenceTCCAccess:]


FPDDeadEndExtensionSession : NSObject /usr/lib/libSystem.B.dylib <FPDExtensionSessionProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL hasFileProviderPresenceTCCAccess

  // instance methods
  -[FPDDeadEndExtensionSession invalidate]
  -[FPDDeadEndExtensionSession start]
  -[FPDDeadEndExtensionSession dumpStateTo:]
  -[FPDDeadEndExtensionSession newFileProviderProxyWithPID:]
  -[FPDDeadEndExtensionSession newFileProviderProxyWithoutPID]
  -[FPDDeadEndExtensionSession newFileProviderProxyWithoutPIDWithTimeout:]
  -[FPDDeadEndExtensionSession asyncUnregisterLifetimeExtensionForObject:]
  -[FPDDeadEndExtensionSession registerLifetimeExtensionForObject:]
  -[FPDDeadEndExtensionSession unregisterLifetimeExtensionForObject:]
  -[FPDDeadEndExtensionSession newFileProviderProxyWithTimeout:pid:]
  -[FPDDeadEndExtensionSession existingFileProviderProxyWithTimeout:pid:]
  -[FPDDeadEndExtensionSession hasFileProviderPresenceTCCAccess]
  -[FPDDeadEndExtensionSession updatePresenceTCCWithAuditToken:]
  -[FPDDeadEndExtensionSession setHasFileProviderPresenceTCCAccess:]


FPActionOperationLocator(Daemon)
	// class methods
	+[FPActionOperationLocator(Daemon) _isMoveAcrossZonesOrSharedRootsForSource:destination:]

	// instance methods
	-[FPActionOperationLocator(Daemon) isDownloaded]
	-[FPActionOperationLocator(Daemon) willRequireDownloadForSourceItem:extensionManager:]
	-[FPActionOperationLocator(Daemon) materializeOptionForDestinationItem:recursively:isCopy:extensionManager:]
	-[FPActionOperationLocator(Daemon) materializedURLWithExtensionManager:]
	-[FPActionOperationLocator(Daemon) materializedURLWithDomain:]

NSString(FPDPushConnection)
	// instance methods
	-[NSString(FPDPushConnection) fp_isCloudDocsPushTopic]
	-[NSString(FPDPushConnection) fp_isTestPushTopic]

NSExtension(CopyingButWithDifferentName)
	// instance methods
	-[NSExtension(CopyingButWithDifferentName) _freshCopy]

01 00 0200 /System/Library/PrivateFrameworks/ApplePushService.framework/ApplePushService: APSConnection 
01 00 0e00 /System/Library/PrivateFrameworks/AssertionServices.framework/AssertionServices: BKSApplicationStateMonitor 
01 00 0e00 /System/Library/PrivateFrameworks/AssertionServices.framework/AssertionServices: BKSProcessAssertion 
01 00 0a00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKContainer 
01 00 0400 /System/Library/Frameworks/CoreSpotlight.framework/CoreSpotlight: CSSearchableIndex 
01 00 0100 /System/Library/Frameworks/FileProvider.framework/FileProvider: FPActionOperationLocator 
01 00 0100 /System/Library/Frameworks/FileProvider.framework/FileProvider: FPAppMetadata 
01 00 0100 /System/Library/Frameworks/FileProvider.framework/FileProvider: FPAppRegistry 
01 00 0100 /System/Library/Frameworks/FileProvider.framework/FileProvider: FPCTLTermDumper 
01 00 0100 /System/Library/Frameworks/FileProvider.framework/FileProvider: FPDownloadInfo 
01 00 0100 /System/Library/Frameworks/FileProvider.framework/FileProvider: FPError 
01 00 0100 /System/Library/Frameworks/FileProvider.framework/FileProvider: FPEvictableItemsQueryDescriptor 
01 00 0100 /System/Library/Frameworks/FileProvider.framework/FileProvider: FPExtensionEnumerationSettings 
01 00 0100 /System/Library/Frameworks/FileProvider.framework/FileProvider: FPGracePeriodTimer 
01 00 0100 /System/Library/Frameworks/FileProvider.framework/FileProvider: FPItem 
01 00 0100 /System/Library/Frameworks/FileProvider.framework/FileProvider: FPItemID 
01 00 0100 /System/Library/Frameworks/FileProvider.framework/FileProvider: FPMoveInfo 
01 00 0100 /System/Library/Frameworks/FileProvider.framework/FileProvider: FPOperation 
01 00 0100 /System/Library/Frameworks/FileProvider.framework/FileProvider: FPPacer 
01 00 0100 /System/Library/Frameworks/FileProvider.framework/FileProvider: FPPersistentStringSet 
01 00 0100 /System/Library/Frameworks/FileProvider.framework/FileProvider: FPProgressProxy 
01 00 0100 /System/Library/Frameworks/FileProvider.framework/FileProvider: FPProvider 
01 00 0100 /System/Library/Frameworks/FileProvider.framework/FileProvider: FPProviderMonitor 
01 00 0100 /System/Library/Frameworks/FileProvider.framework/FileProvider: FPQueryEnumerationSettings 
01 00 0100 /System/Library/Frameworks/FileProvider.framework/FileProvider: FPSandboxingURLWrapper 
01 00 0100 /System/Library/Frameworks/FileProvider.framework/FileProvider: FPXPCAutomaticErrorProxy 
01 00 0100 /System/Library/Frameworks/FileProvider.framework/FileProvider: FPXPCSanitizer 
01 00 0600 /System/Library/PrivateFrameworks/IconServices.framework/IconServices: ISIcon 
01 00 0600 /System/Library/PrivateFrameworks/IconServices.framework/IconServices: ISImageDescriptor 
01 00 1800 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationProxy 
01 00 1800 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationWorkspace 
01 00 1800 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSPlugInKitProxy 
01 00 1100 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSByteCountFormatter 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCountedSet 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDistributedNotificationCenter 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSExtension 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSExtensionContext 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileAccessIntent 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileCoordinator 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileHandle 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0100 /System/Library/Frameworks/FileProvider.framework/FileProvider: NSFileProviderDomain 
01 00 0100 /System/Library/Frameworks/FileProvider.framework/FileProvider: NSFileProviderItemVersion 
01 00 0100 /System/Library/Frameworks/FileProvider.framework/FileProvider: NSFileProviderManager 
01 00 0100 /System/Library/Frameworks/FileProvider.framework/FileProvider: NSFileProviderRequest 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableCharacterSet 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1500 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSObservableKeyPath 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProgress 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListener 
01 00 0700 /usr/lib/libprequelite.dylib: PQLConnection 
01 00 1400 /System/Library/PrivateFrameworks/UserManagement.framework/UserManagement: UMUserManager 
