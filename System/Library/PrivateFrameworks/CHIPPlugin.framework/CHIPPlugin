|| __DATA.__objc_data _OBJC_CLASS_$_CHIPAccessoryServer
|| __DATA.__objc_data _OBJC_CLASS_$_CHIPAccessoryServerBuilder
|| __DATA.__objc_data _OBJC_CLASS_$_CHIPAccessoryServerFactory
|| __DATA.__objc_data _OBJC_CLASS_$_CHIPPluginAccessoryReachabilityManager
|| __DATA.__objc_data _OBJC_CLASS_$_CHIPPluginAccessorySetupPayload
|| __DATA.__objc_data _OBJC_CLASS_$_CHIPPluginAttestationDataStore
|| __DATA.__objc_data _OBJC_CLASS_$_CHIPPluginClusterDescription
|| __DATA.__objc_data _OBJC_CLASS_$_CHIPPluginDescriptorClusterManager
|| __DATA.__objc_data _OBJC_CLASS_$_CHIPPluginDeviceTopology
|| __DATA.__objc_data _OBJC_CLASS_$_CHIPPluginFileManager
|| __DATA.__objc_data _OBJC_CLASS_$_CHIPPluginHAPAccessoryInfo
|| __DATA.__objc_data _OBJC_CLASS_$_CHIPPluginHAPDescriptionAtEndpoint
|| __DATA.__objc_data _OBJC_CLASS_$_CHIPPluginHAPServiceDescription
|| __DATA.__objc_data _OBJC_CLASS_$_CHIPPluginMutableAccessorySetupPayload
|| __DATA.__objc_data _OBJC_CLASS_$_CHIPPluginMutableDeviceTopology
|| __DATA.__objc_data _OBJC_CLASS_$_CHIPPluginMutableVendorMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_CHIPPluginMutableVendorMetadataProduct
|| __DATA.__objc_data _OBJC_CLASS_$_CHIPPluginMutableVendorMetadataVendor
|| __DATA.__objc_data _OBJC_CLASS_$_CHIPPluginPairing
|| __DATA.__objc_data _OBJC_CLASS_$_CHIPPluginProtocolMap
|| __DATA.__objc_data _OBJC_CLASS_$_CHIPPluginProtocolOperation
|| __DATA.__objc_data _OBJC_CLASS_$_CHIPPluginProtocolOperationManager
|| __DATA.__objc_data _OBJC_CLASS_$_CHIPPluginResidentStateManager
|| __DATA.__objc_data _OBJC_CLASS_$_CHIPPluginThermostat
|| __DATA.__objc_data _OBJC_CLASS_$_CHIPPluginUIDialogPresenter
|| __DATA.__objc_data _OBJC_CLASS_$_CHIPPluginUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_CHIPPluginVendorMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_CHIPPluginVendorMetadataProduct
|| __DATA.__objc_data _OBJC_CLASS_$_CHIPPluginVendorMetadataStore
|| __DATA.__objc_data _OBJC_CLASS_$_CHIPPluginVendorMetadataVendor
|| __DATA.__objc_data _OBJC_CLASS_$_CHIPPluginWindowCovering
|| __DATA.__objc_data _OBJC_METACLASS_$_CHIPAccessoryServer
|| __DATA.__objc_data _OBJC_METACLASS_$_CHIPAccessoryServerBuilder
|| __DATA.__objc_data _OBJC_METACLASS_$_CHIPAccessoryServerFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_CHIPPluginAccessoryReachabilityManager
|| __DATA.__objc_data _OBJC_METACLASS_$_CHIPPluginAccessorySetupPayload
|| __DATA.__objc_data _OBJC_METACLASS_$_CHIPPluginAttestationDataStore
|| __DATA.__objc_data _OBJC_METACLASS_$_CHIPPluginClusterDescription
|| __DATA.__objc_data _OBJC_METACLASS_$_CHIPPluginDescriptorClusterManager
|| __DATA.__objc_data _OBJC_METACLASS_$_CHIPPluginDeviceTopology
|| __DATA.__objc_data _OBJC_METACLASS_$_CHIPPluginFileManager
|| __DATA.__objc_data _OBJC_METACLASS_$_CHIPPluginHAPAccessoryInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_CHIPPluginHAPDescriptionAtEndpoint
|| __DATA.__objc_data _OBJC_METACLASS_$_CHIPPluginHAPServiceDescription
|| __DATA.__objc_data _OBJC_METACLASS_$_CHIPPluginMutableAccessorySetupPayload
|| __DATA.__objc_data _OBJC_METACLASS_$_CHIPPluginMutableDeviceTopology
|| __DATA.__objc_data _OBJC_METACLASS_$_CHIPPluginMutableVendorMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_CHIPPluginMutableVendorMetadataProduct
|| __DATA.__objc_data _OBJC_METACLASS_$_CHIPPluginMutableVendorMetadataVendor
|| __DATA.__objc_data _OBJC_METACLASS_$_CHIPPluginPairing
|| __DATA.__objc_data _OBJC_METACLASS_$_CHIPPluginProtocolMap
|| __DATA.__objc_data _OBJC_METACLASS_$_CHIPPluginProtocolOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_CHIPPluginProtocolOperationManager
|| __DATA.__objc_data _OBJC_METACLASS_$_CHIPPluginResidentStateManager
|| __DATA.__objc_data _OBJC_METACLASS_$_CHIPPluginThermostat
|| __DATA.__objc_data _OBJC_METACLASS_$_CHIPPluginUIDialogPresenter
|| __DATA.__objc_data _OBJC_METACLASS_$_CHIPPluginUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_CHIPPluginVendorMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_CHIPPluginVendorMetadataProduct
|| __DATA.__objc_data _OBJC_METACLASS_$_CHIPPluginVendorMetadataStore
|| __DATA.__objc_data _OBJC_METACLASS_$_CHIPPluginVendorMetadataVendor
|| __DATA.__objc_data _OBJC_METACLASS_$_CHIPPluginWindowCovering
|| __DATA_CONST.__const _CHIPPluginAttestationDataFileName
|| __DATA_CONST.__const _CHIPPluginProtocolOperationErrorDomain
|| __DATA_CONST.__const _CHIPPluginVendorMetadataFileName
|| __DATA_CONST.__const _kCHIPArrayValueTypeKey
|| __DATA_CONST.__const _kCHIPDoubleValueTypeKey
|| __DATA_CONST.__const _kCHIPFloatValueTypeKey
|| __DATA_CONST.__const _kCHIPListValueTypeKey
|| __DATA_CONST.__const _kCHIPNullValueTypeKey
|| __DATA_CONST.__const _kCHIPOctetStringValueTypeKey
|| __DATA_CONST.__const _kCHIPPluginRemoteMessageAttributeIdKey
|| __DATA_CONST.__const _kCHIPPluginRemoteMessageClusterIdKey
|| __DATA_CONST.__const _kCHIPPluginRemoteMessageCommandCommandKey
|| __DATA_CONST.__const _kCHIPPluginRemoteMessageCommandFieldsKey
|| __DATA_CONST.__const _kCHIPPluginRemoteMessageCommandIdKey
|| __DATA_CONST.__const _kCHIPPluginRemoteMessageCommandKey
|| __DATA_CONST.__const _kCHIPPluginRemoteMessageCommandReadKey
|| __DATA_CONST.__const _kCHIPPluginRemoteMessageCommandSubscribeKey
|| __DATA_CONST.__const _kCHIPPluginRemoteMessageCommandWriteKey
|| __DATA_CONST.__const _kCHIPPluginRemoteMessageDataKey
|| __DATA_CONST.__const _kCHIPPluginRemoteMessageEndpointIdKey
|| __DATA_CONST.__const _kCHIPPluginRemoteMessageMaxIntervalKey
|| __DATA_CONST.__const _kCHIPPluginRemoteMessageMinIntervalKey
|| __DATA_CONST.__const _kCHIPPluginRemoteMessageResultsKey
|| __DATA_CONST.__const _kCHIPPluginRemoteMessageStatusKey
|| __DATA_CONST.__const _kCHIPSignedIntegerValueTypeKey
|| __DATA_CONST.__const _kCHIPStructureValueTypeKey
|| __DATA_CONST.__const _kCHIPTypeKey
|| __DATA_CONST.__const _kCHIPUTF8StringValueTypeKey
|| __DATA_CONST.__const _kCHIPUnsignedIntegerValueTypeKey
|| __DATA_CONST.__const _kCHIPValueKey
|| __DATA_CONST.__const _kTopologyDictKeyClusters
|| __DATA_CONST.__const _kTopologyDictKeyHAPCategories
|| __DATA_CONST.__const _kTopologyDictKeyHAPDisabledCharacteristics
|| __DATA_CONST.__const _kTopologyDictKeyHAPServiceTypes
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CHIPAccessoryServerBrowser
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CHIPPluginStorage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CHIPAccessoryServerBrowser
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CHIPPluginStorage
__ CHIP: _CHIPErrorDomain
__ CHIP: _OBJC_CLASS_$_CHIPAttributeCacheContainer
__ CHIP: _OBJC_CLASS_$_CHIPCommissioningParameters
__ CHIP: _OBJC_CLASS_$_CHIPDescriptor
__ CHIP: _OBJC_CLASS_$_CHIPDevice
__ CHIP: _OBJC_CLASS_$_CHIPDeviceController
__ CHIP: _OBJC_CLASS_$_CHIPDeviceControllerStartupParams
__ CHIP: _OBJC_CLASS_$_CHIPManualSetupPayloadParser
__ CHIP: _OBJC_CLASS_$_CHIPNetworkCommissioning
__ CHIP: _OBJC_CLASS_$_CHIPOperationalCredentials
__ CHIP: _OBJC_CLASS_$_CHIPOperationalCredentialsClusterRemoveFabricParams
__ CHIP: _OBJC_CLASS_$_CHIPOperationalCredentialsClusterUpdateFabricLabelParams
__ CHIP: _OBJC_CLASS_$_CHIPQRCodeSetupPayloadParser
__ CHIP: _OBJC_CLASS_$_CHIPReadParams
__ CHIP: _OBJC_CLASS_$_CHIPSubscribeParams
__ CHIP: _OBJC_CLASS_$_CHIPThermostat
__ CHIP: _OBJC_CLASS_$_CHIPThreadOperationalDataset
__ CHIP: _OBJC_CLASS_$_CHIPWindowCovering
__ CHIP: _OBJC_CLASS_$_CHIPWindowCoveringClusterGoToLiftPercentageParams
__ CHIP: _OBJC_CLASS_$_CHIPWindowCoveringClusterGoToTiltPercentageParams
__ CHIP: _OBJC_CLASS_$_MatterControllerFactory
__ CHIP: _OBJC_CLASS_$_MatterControllerFactoryParams
__ CHIP: _OBJC_METACLASS_$_CHIPThermostat
__ CHIP: _OBJC_METACLASS_$_CHIPWindowCovering
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesSetAppValue
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSInvocation
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFPreferencesCurrentApplication
__ CoreHAP: _HAPErrorDomain
__ CoreHAP: _HAPSystemKeychainStoreUpdatedNotification
__ CoreHAP: _HAPUUIDSuffix
__ CoreHAP: _OBJC_CLASS_$_HAPAccessory
__ CoreHAP: _OBJC_CLASS_$_HAPAccessoryServer
__ CoreHAP: _OBJC_CLASS_$_HAPAccessoryServerBrowser
__ CoreHAP: _OBJC_CLASS_$_HAPCharacteristic
__ CoreHAP: _OBJC_CLASS_$_HAPCharacteristicResponseTuple
__ CoreHAP: _OBJC_CLASS_$_HAPDeviceID
__ CoreHAP: _OBJC_CLASS_$_HAPMetadata
__ CoreHAP: _OBJC_CLASS_$_HAPMutableKeychainItem
__ CoreHAP: _OBJC_CLASS_$_HAPService
__ CoreHAP: _OBJC_CLASS_$_HAPSystemKeychainStore
__ CoreHAP: _OBJC_IVAR_$_HAPAccessoryServer._lock
__ CoreHAP: _OBJC_METACLASS_$_HAPAccessoryServer
__ CoreHAP: _OBJC_METACLASS_$_HAPAccessoryServerBrowser
__ CoreHAP: _OBJC_METACLASS_$_HAPService
__ CoreHAP: _kHAPPrimaryAccessoryInstanceID
__ CoreUARP: _OBJC_CLASS_$_UARPAccessoryHardwareCHIP
__ CoreUARP: _OBJC_CLASS_$_UARPController
__ CoreUtils: _WiFiCopyCurrentNetworkInfoEx
__ CoreUtils: _cced25519_make_key_pair_compat
__ Foundation: _NSClassFromString
__ Foundation: _NSLog
__ Foundation: _NSSelectorFromString
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSScanner
__ Foundation: _OBJC_CLASS_$_NSString
__ HMFoundation: _HMFBooleanToString
__ HMFoundation: _HMFCreateOsLogHandle
__ HMFoundation: _HMFEqualObjects
__ HMFoundation: _HMFErrorDomain
__ HMFoundation: _HMFGetLogIdentifier
__ HMFoundation: _HMFGetOsLogHandle
__ HMFoundation: _HMFHomeKitLoggingSubsystem
__ HMFoundation: _HMFObjectDescription
__ HMFoundation: _OBJC_CLASS_$_HMFAttributeDescription
__ HMFoundation: _OBJC_CLASS_$_HMFBlockOperation
__ HMFoundation: _OBJC_CLASS_$_HMFObject
__ HMFoundation: _OBJC_CLASS_$_HMFTimer
__ HMFoundation: _OBJC_METACLASS_$_HMFObject
__ HMFoundation: __HMFPreconditionFailure
__ Security: _SecKeyCopyExternalRepresentation
__ Security: _SecKeyCopyPublicKey
__ Security: _SecKeyCreateRandomKey
__ Security: _SecKeyCreateSignature
__ Security: _SecKeyCreateWithData
__ Security: _SecRandomCopyBytes
__ Security: _kSecAttrApplicationTag
__ Security: _kSecAttrKeyClass
__ Security: _kSecAttrKeyClassPrivate
__ Security: _kSecAttrKeySizeInBits
__ Security: _kSecAttrKeyType
__ Security: _kSecAttrKeyTypeECSECPrimeRandom
__ Security: _kSecAttrLabel
__ Security: _kSecKeyAlgorithmECDSASignatureRFC4754
__ Security: _kSecRandomDefault
__ ThreadNetwork: _OBJC_CLASS_$_THClient
__ libSystem.B.dylib: _CC_SHA256
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _arc4random_uniform
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_unfair_lock_lock_with_options
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _random
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _strtoull
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
CHIPAccessoryServerFactory : HMFObject
 @property  CHIPAccessoryServerBrowser *browser
 @property  <HAPKeyStore> *keystore

  // class methods
  +[CHIPAccessoryServerFactory logCategory]
  +[CHIPAccessoryServerFactory createInfoService:model:manufacturer:serialNumber:instanceID:]
  +[CHIPAccessoryServerFactory createCHIPPluginHAPServiceCommon:characteristics:serviceInstanceID:endpointID:]

  // instance methods
  -[CHIPAccessoryServerFactory setBrowser:]
  -[CHIPAccessoryServerFactory setKeystore:]
  -[CHIPAccessoryServerFactory .cxx_destruct]
  -[CHIPAccessoryServerFactory browser]
  -[CHIPAccessoryServerFactory keystore]
  -[CHIPAccessoryServerFactory logIdentifier]
  -[CHIPAccessoryServerFactory initWithKeystore:browser:]
  -[CHIPAccessoryServerFactory vendAccessoryServerWithNodeID:setupCode:discriminator:category:vendorID:productID:serialNumber:firmwareRevision:]


CHIPPluginAttestationDataStore : HMFObject <HMFLogging, UARPControllerDelegateProtocol>
 @property  UARPController *uarpController
 @property  <CHIPPluginFileManager> *fileManager
 @property  NSURL *fileURL
 @property  NSArray *paaCertificates
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CHIPPluginAttestationDataStore logCategory]

  // instance methods
  -[CHIPPluginAttestationDataStore fileManager]
  -[CHIPPluginAttestationDataStore fileURL]
  -[CHIPPluginAttestationDataStore .cxx_destruct]
  -[CHIPPluginAttestationDataStore initWithFileURL:]
  -[CHIPPluginAttestationDataStore assetAvailablityUpdateForAccessoryID:assetID:]
  -[CHIPPluginAttestationDataStore fetchCloudAttestationData]
  -[CHIPPluginAttestationDataStore uarpController]
  -[CHIPPluginAttestationDataStore sendMessageToAccessory:uarpMsg:error:]
  -[CHIPPluginAttestationDataStore attestationCertificates:forSubjectKeyIdentifier:]
  -[CHIPPluginAttestationDataStore initWithFileURL:uarpController:fileManager:]
  -[CHIPPluginAttestationDataStore staticAttestationDataFileURL]
  -[CHIPPluginAttestationDataStore staticAttestationData]
  -[CHIPPluginAttestationDataStore saveWithPaaCertificates:]
  -[CHIPPluginAttestationDataStore paaCertificates]


CHIPPluginAttestationStatus : NSObject <CHIPDeviceAttestationDelegate>
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  CHIPAccessoryServer *accessoryServer
 @property  CHIPPluginUIDialogPresenter *uiDialogPresenter
 @property  NSNumber *failSafeExpiryTimeoutSecs
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CHIPPluginAttestationStatus clientQueue]
  -[CHIPPluginAttestationStatus setClientQueue:]
  -[CHIPPluginAttestationStatus .cxx_destruct]
  -[CHIPPluginAttestationStatus uiDialogPresenter]
  -[CHIPPluginAttestationStatus setUiDialogPresenter:]
  -[CHIPPluginAttestationStatus accessoryServer]
  -[CHIPPluginAttestationStatus setAccessoryServer:]
  -[CHIPPluginAttestationStatus failSafeExpiryTimeoutSecs]
  -[CHIPPluginAttestationStatus deviceAttestation:failedForDevice:error:]
  -[CHIPPluginAttestationStatus initWithQueue:uiDialogPresenter:failSafeExpiryTimeoutSecs:]
  -[CHIPPluginAttestationStatus populateDelegate:]


CHIPPluginProtocolOperation : NSObject <HMFLogging>
 @property  HAPCharacteristic *characteristic
 @property  CHIPDevice *device
 @property  unsigned long type
 @property  CHIPPluginClusterDescription *characteristicDescription
 @property  id value
 @property  CHIPAttributeCacheContainer *attributeCacheContainer
 @property  unsigned long endpoint
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CHIPPluginProtocolOperation logCategory]

  // instance methods
  -[CHIPPluginProtocolOperation setDevice:]
  -[CHIPPluginProtocolOperation setType:]
  -[CHIPPluginProtocolOperation .cxx_destruct]
  -[CHIPPluginProtocolOperation setValue:]
  -[CHIPPluginProtocolOperation value]
  -[CHIPPluginProtocolOperation setEndpoint:]
  -[CHIPPluginProtocolOperation type]
  -[CHIPPluginProtocolOperation endpoint]
  -[CHIPPluginProtocolOperation device]
  -[CHIPPluginProtocolOperation characteristic]
  -[CHIPPluginProtocolOperation setCharacteristic:]
  -[CHIPPluginProtocolOperation initWithOperationOfType:characteristic:device:]
  -[CHIPPluginProtocolOperation initWithOperationOfType:characteristic:device:primaryArgument:]
  -[CHIPPluginProtocolOperation initWithOperationOfType:targetCharacteristic:targetValue:device:]
  -[CHIPPluginProtocolOperation initWithOperationOfType:characteristic:attributeCacheContainer:]
  -[CHIPPluginProtocolOperation characteristicDescription]
  -[CHIPPluginProtocolOperation attributeCacheContainer]
  -[CHIPPluginProtocolOperation setCharacteristicDescription:]


CHIPPluginProtocolOperationManager : NSObject <HMFLogging>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CHIPPluginProtocolOperationManager sharedInstance]
  +[CHIPPluginProtocolOperationManager logCategory]

  // instance methods
  -[CHIPPluginProtocolOperationManager _processResponseForOperation:responseValues:responseError:]
  -[CHIPPluginProtocolOperationManager _addParamsToInvocation:paramsObject:completionhandlerArgument:characteristicDescriptor:forCharacteristic:]
  -[CHIPPluginProtocolOperationManager _addArgumentsToInvocation:primaryArgument:completionHandlerArgument:characteristicDescriptor:forCharacteristic:]
  -[CHIPPluginProtocolOperationManager _processReadResponseForOperation:readResponseValues:readResponseError:]
  -[CHIPPluginProtocolOperationManager _processWriteResponseForOperation:writeResponseValues:writeResponseError:]
  -[CHIPPluginProtocolOperationManager _processGenericResponseForOperation:responseValues:responseError:]
  -[CHIPPluginProtocolOperationManager _responseTupleWithMappedValueForOperation:responseValue:responseError:]
  -[CHIPPluginProtocolOperationManager registerOperation:clientQueue:operationResponseHandler:]


CHIPPluginStorage : HMFObject <HMFLogging, CHIPPersistentStorageDelegate>
 @property  NSOperationQueue *keyValueStoreUpdateQueue
 @property  NSMutableDictionary *temporaryStorage
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  <CHIPPluginStorageDelegate> *delegate
 @property  NSSet *pairedNodeIDs
 @property  NSNumber *fabricMappingIndex
 @property  <CHIPPluginFabricStorageDataSource> *fabricDataSource
 @property  <CHIPPluginStorageDataSource> *dataSource
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CHIPPluginStorage logCategory]
  +[CHIPPluginStorage shortDescription]
  +[CHIPPluginStorage formatKeyForNodeId:key:]
  +[CHIPPluginStorage MATTER_STORAGE_KEYS]
  +[CHIPPluginStorage CHIPPLUGIN_STORAGE_KEYS]
  +[CHIPPluginStorage stripNodeIdFromKey:]
  +[CHIPPluginStorage keyMatchesMatterKey:]
  +[CHIPPluginStorage deleteCHIPPluginDataForNodeID:withStorage:]
  +[CHIPPluginStorage matterItemsFromDictionary:]
  +[CHIPPluginStorage didUpdateMatterItems:oldStorage:]

  // instance methods
  -[CHIPPluginStorage setDataSource:]
  -[CHIPPluginStorage .cxx_destruct]
  -[CHIPPluginStorage setDelegate:]
  -[CHIPPluginStorage dataSource]
  -[CHIPPluginStorage initWithQueue:]
  -[CHIPPluginStorage workQueue]
  -[CHIPPluginStorage delegate]
  -[CHIPPluginStorage valueForKey:]
  -[CHIPPluginStorage logIdentifier]
  -[CHIPPluginStorage setValueForKey:value:]
  -[CHIPPluginStorage handleUpdatedCurrentFabricIndex]
  -[CHIPPluginStorage handleUpdatedDataWithIsLocalChange:]
  -[CHIPPluginStorage CHIPGetKeyValue:]
  -[CHIPPluginStorage CHIPSetKeyValue:value:]
  -[CHIPPluginStorage CHIPDeleteKeyValue:]
  -[CHIPPluginStorage _preferencesValueForKey:]
  -[CHIPPluginStorage _getCHIPFrameworkVersion]
  -[CHIPPluginStorage resetStorage]
  -[CHIPPluginStorage _moveTempStorageIntoDataSource]
  -[CHIPPluginStorage temporaryStorage]
  -[CHIPPluginStorage fabricMappingIndex]
  -[CHIPPluginStorage fabricDataSource]
  -[CHIPPluginStorage _syncSetDataSourceValue:forKey:]
  -[CHIPPluginStorage _removeAllDataSourceDataWithCompletion:]
  -[CHIPPluginStorage _setPreferencesValueForKey:value:]
  -[CHIPPluginStorage setFabricMappingIndex:]
  -[CHIPPluginStorage setFabricDataSource:]
  -[CHIPPluginStorage _handlePerFabricStorageMaybeAvailable:]
  -[CHIPPluginStorage handleUpdatedDataForFabricIndex:isLocalChange:]
  -[CHIPPluginStorage _handleUpdatedDataWithIsLocalChange:]
  -[CHIPPluginStorage removePairedNodeID:]
  -[CHIPPluginStorage _setTempValueForKey:value:]
  -[CHIPPluginStorage keyValueStoreUpdateQueue]
  -[CHIPPluginStorage _removeTempValueForKey:]
  -[CHIPPluginStorage _tempValueForKey:]
  -[CHIPPluginStorage pairedNodeIDs]
  -[CHIPPluginStorage setPairedNodeIDs:]
  -[CHIPPluginStorage _checkVersion:]
  -[CHIPPluginStorage handleUpdatedDataForFabricIndex:nodeID:isLocalChange:]
  -[CHIPPluginStorage prepareStorageForFabricMappingIndex:]
  -[CHIPPluginStorage setFabricMappingIndexSync:]
  -[CHIPPluginStorage ipkForCurrentFabricMappingIndex]
  -[CHIPPluginStorage addPairedNodeID:]


CHIPPluginUtilities : HMFObject
  // class methods
  +[CHIPPluginUtilities identifierStringWithCHIPNodeID:]
  +[CHIPPluginUtilities setupIDFromSetupCode:discriminator:]
  +[CHIPPluginUtilities chip_shortTypeFromUUID:]
  +[CHIPPluginUtilities randomDiscriminator]
  +[CHIPPluginUtilities nextServiceInstanceID:previousCharacteristicsCount:]
  +[CHIPPluginUtilities compareUnorderedUniqueNumberArray:withArray:]
  +[CHIPPluginUtilities randomNodeID]


CHIPAccessoryServerBrowser : HAPAccessoryServerBrowser <CHIPPluginStorageDelegate, HMFLogging>
 @property  NSMutableSet *discoveredAccessoryServers
 @property  NSMutableSet *stagedAccessoryServers
 @property  <HAPAccessoryServerBrowserDelegate> *delegate
 @property  NSObject<OS_dispatch_queue> *delegateQueue
 @property  unsigned long restartCount
 @property  BOOL pendingMatterStackRestart
 @property  CHIPPluginMatterKeypair *nocSigner
 @property  NSDictionary *matterStorageItems
 @property  BOOL isCurrentDevicePrimaryResident
 @property  CHIPDeviceController *chipController
 @property  CHIPPluginStorage *storage
 @property  CHIPPluginResidentStateManager *residentStateManager
 @property  CHIPPluginVendorMetadataStore *vendorMetadataStore
 @property  CHIPPluginAttestationDataStore *attestationDataStore
 @property  CHIPPluginAttestationStatus *attestationStatus
 @property  CHIPPluginUIDialogPresenter *uiDialogPresenter
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CHIPAccessoryServerBrowser logCategory]

  // instance methods
  -[CHIPAccessoryServerBrowser setDelegate:queue:]
  -[CHIPAccessoryServerBrowser delegateQueue]
  -[CHIPAccessoryServerBrowser stopDiscoveringAccessoryServers]
  -[CHIPAccessoryServerBrowser setDelegateQueue:]
  -[CHIPAccessoryServerBrowser discoveredAccessoryServers]
  -[CHIPAccessoryServerBrowser .cxx_destruct]
  -[CHIPAccessoryServerBrowser storage]
  -[CHIPAccessoryServerBrowser setDelegate:]
  -[CHIPAccessoryServerBrowser startDiscoveringAccessoryServers]
  -[CHIPAccessoryServerBrowser linkType]
  -[CHIPAccessoryServerBrowser _delegateRespondsToSelector:]
  -[CHIPAccessoryServerBrowser matchAccessoryServerWithSetupID:serverIdentifier:completionHandler:]
  -[CHIPAccessoryServerBrowser setRestartCount:]
  -[CHIPAccessoryServerBrowser delegate]
  -[CHIPAccessoryServerBrowser logIdentifier]
  -[CHIPAccessoryServerBrowser discoverAccessoryServerWithIdentifier:]
  -[CHIPAccessoryServerBrowser restartCount]
  -[CHIPAccessoryServerBrowser isCurrentDevicePrimaryResident]
  -[CHIPAccessoryServerBrowser vendorMetadataStore]
  -[CHIPAccessoryServerBrowser attestationDataStore]
  -[CHIPAccessoryServerBrowser uiDialogPresenter]
  -[CHIPAccessoryServerBrowser handleSystemKeychainStoreUpdatedNotification:]
  -[CHIPAccessoryServerBrowser initWithQueue:storeDirectoryURL:]
  -[CHIPAccessoryServerBrowser residentStateManager]
  -[CHIPAccessoryServerBrowser prepareForPairingWithSetupPayload:fabricIndex:completionHandler:]
  -[CHIPAccessoryServerBrowser stageAccessoryServerWithSetupPayload:fabricIndex:completionHandler:]
  -[CHIPAccessoryServerBrowser stagedAccessoryServerWithIdentifier:]
  -[CHIPAccessoryServerBrowser discardStagedAccessoryServerWithIdentifier:completionHandler:]
  -[CHIPAccessoryServerBrowser storageDidBecomeAvailable:]
  -[CHIPAccessoryServerBrowser storageDidUpdateData:isLocalChange:]
  -[CHIPAccessoryServerBrowser handleDeviceNoLongerPrimaryResidentWithCompletion:]
  -[CHIPAccessoryServerBrowser _allServers]
  -[CHIPAccessoryServerBrowser chipController]
  -[CHIPAccessoryServerBrowser _startChipStackWithFabricMappingIndex:]
  -[CHIPAccessoryServerBrowser stagedAccessoryServers]
  -[CHIPAccessoryServerBrowser _prepareForPairingWithSetupCode:discriminator:vendorID:productID:serialNumber:fabricIndex:completionHandler:]
  -[CHIPAccessoryServerBrowser invalidateAllDiscoveredServersWithCompletion:]
  -[CHIPAccessoryServerBrowser _cleanupDiscoveredServersWithCompletion:]
  -[CHIPAccessoryServerBrowser _invalidateAccessoryServer:withCompletion:]
  -[CHIPAccessoryServerBrowser invalidateAccessoryServer:withCompletion:]
  -[CHIPAccessoryServerBrowser _cleanupDiscoveredServers]
  -[CHIPAccessoryServerBrowser _isDevicePaired:]
  -[CHIPAccessoryServerBrowser _setupPairedDevices]
  -[CHIPAccessoryServerBrowser _createCHIPAccessoryForNodeID:]
  -[CHIPAccessoryServerBrowser _restartChipStackWithFabricMappingIndex:]
  -[CHIPAccessoryServerBrowser _readNextFabricMappingIndexSync]
  -[CHIPAccessoryServerBrowser _deleteOldPairings]
  -[CHIPAccessoryServerBrowser _generateNodeID]
  -[CHIPAccessoryServerBrowser setMatterStorageItems:]
  -[CHIPAccessoryServerBrowser setupPairedDevices]
  -[CHIPAccessoryServerBrowser _cleanupStagedServers]
  -[CHIPAccessoryServerBrowser matterStorageItems]
  -[CHIPAccessoryServerBrowser pendingMatterStackRestart]
  -[CHIPAccessoryServerBrowser setPendingMatterStackRestart:]
  -[CHIPAccessoryServerBrowser restartChipStackWithFabricMappingIndex:]
  -[CHIPAccessoryServerBrowser stageAccessoryServerWithSetupPayload:completionHandler:]
  -[CHIPAccessoryServerBrowser prepareForServerWithSetupPayload:identifier:category:name:completionHandler:]
  -[CHIPAccessoryServerBrowser prepareForServerWithSetupCode:discriminator:identifier:category:name:vendorID:productID:serialNumber:completeionHandler:]
  -[CHIPAccessoryServerBrowser invalidateAllDiscoveredServers]
  -[CHIPAccessoryServerBrowser invalidateAccessoryServer:]
  -[CHIPAccessoryServerBrowser commitStagedAccessoryServer:]
  -[CHIPAccessoryServerBrowser attestationStatus]
  -[CHIPAccessoryServerBrowser nocSigner]
  -[CHIPAccessoryServerBrowser setNocSigner:]


CHIPPluginHAPDescriptionAtEndpoint : HMFObject
 @property  NSArray *categories
 @property  NSArray *serviceDescriptions

  // instance methods
  -[CHIPPluginHAPDescriptionAtEndpoint categories]
  -[CHIPPluginHAPDescriptionAtEndpoint setCategories:]
  -[CHIPPluginHAPDescriptionAtEndpoint .cxx_destruct]
  -[CHIPPluginHAPDescriptionAtEndpoint attributeDescriptions]
  -[CHIPPluginHAPDescriptionAtEndpoint init]
  -[CHIPPluginHAPDescriptionAtEndpoint serviceDescriptions]
  -[CHIPPluginHAPDescriptionAtEndpoint initWithType:serviceDescriptions:]
  -[CHIPPluginHAPDescriptionAtEndpoint getCategories]
  -[CHIPPluginHAPDescriptionAtEndpoint getServiceDescriptions]
  -[CHIPPluginHAPDescriptionAtEndpoint setServiceDescriptions:]


CHIPPluginHAPAccessoryInfo : HMFObject
 @property  NSMutableDictionary *accessoryInfoDictionary

  // instance methods
  -[CHIPPluginHAPAccessoryInfo initWithType:]
  -[CHIPPluginHAPAccessoryInfo .cxx_destruct]
  -[CHIPPluginHAPAccessoryInfo attributeDescriptions]
  -[CHIPPluginHAPAccessoryInfo init]
  -[CHIPPluginHAPAccessoryInfo accessoryInfoForEndpoint:]
  -[CHIPPluginHAPAccessoryInfo accessoryInfoDictionary]
  -[CHIPPluginHAPAccessoryInfo categoriesForEndpoint:]
  -[CHIPPluginHAPAccessoryInfo serviceDescriptionsForEndpoint:]
  -[CHIPPluginHAPAccessoryInfo setAccessoryInfo:forEndpoint:]
  -[CHIPPluginHAPAccessoryInfo setAccessoryInfoDictionary:]


CHIPPluginThermostat : CHIPThermostat <HMFLogging>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CHIPPluginThermostat logCategory]

  // instance methods
  -[CHIPPluginThermostat writeAttributeOccupiedHeatingOrCoolingSetpointWithValue:completionHandler:]
  -[CHIPPluginThermostat readAttributeOccupiedHeatingOrCoolingSetpointWithCompletionHandler:]
  -[CHIPPluginThermostat updatedValueForAttributeReport:responseHandler:]


CHIPPluginAccessoryReachabilityManager : HMFObject <HMFTimerDelegate>
 @property  HMFTimer *reachabilityTimer
 @property  BOOL reachable
 @property  CHIPAccessoryServer *server
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CHIPPluginAccessoryReachabilityManager logCategory]

  // instance methods
  -[CHIPPluginAccessoryReachabilityManager timerDidFire:]
  -[CHIPPluginAccessoryReachabilityManager .cxx_destruct]
  -[CHIPPluginAccessoryReachabilityManager stop]
  -[CHIPPluginAccessoryReachabilityManager server]
  -[CHIPPluginAccessoryReachabilityManager setReachable:]
  -[CHIPPluginAccessoryReachabilityManager start]
  -[CHIPPluginAccessoryReachabilityManager logIdentifier]
  -[CHIPPluginAccessoryReachabilityManager reachable]
  -[CHIPPluginAccessoryReachabilityManager reachabilityTimer]
  -[CHIPPluginAccessoryReachabilityManager initWithServer:timeout:queue:]
  -[CHIPPluginAccessoryReachabilityManager reachabilityUpdate]
  -[CHIPPluginAccessoryReachabilityManager setReachabilityTimer:]


CHIPPluginReportDescription : HMFObject
 @property  NSNumber *clusterId
 @property  NSArray *attributeIds
 @property  @? mapValue
 @property  NSString *clusterClass
 @property  NSString *clusterSelector

  // instance methods
  -[CHIPPluginReportDescription .cxx_destruct]
  -[CHIPPluginReportDescription clusterId]
  -[CHIPPluginReportDescription clusterClass]
  -[CHIPPluginReportDescription clusterSelector]
  -[CHIPPluginReportDescription mapValue]
  -[CHIPPluginReportDescription initWithClusterId:attributeIds:]
  -[CHIPPluginReportDescription attributeIds]
  -[CHIPPluginReportDescription setMapValue:]
  -[CHIPPluginReportDescription setClusterClass:]
  -[CHIPPluginReportDescription setClusterSelector:]


CHIPPluginUIDialogPresenter : NSObject
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  id context
 @property  id dialogDelegate

  // instance methods
  -[CHIPPluginUIDialogPresenter clientQueue]
  -[CHIPPluginUIDialogPresenter setClientQueue:]
  -[CHIPPluginUIDialogPresenter .cxx_destruct]
  -[CHIPPluginUIDialogPresenter context]
  -[CHIPPluginUIDialogPresenter setDialogDelegate:]
  -[CHIPPluginUIDialogPresenter requestUserPermissionForUnauthenticatedAccessory:completionHandler:]
  -[CHIPPluginUIDialogPresenter initWithQueue:context:]
  -[CHIPPluginUIDialogPresenter dialogDelegate]


CHIPPluginDeviceTopology : HMFObject
 @property  NSMutableDictionary *hapServiceTypes
 @property  NSMutableDictionary *clustersInUse
 @property  NSMutableDictionary *hapCategories
 @property  NSMutableDictionary *hapDisabledCharacteristics

  // instance methods
  -[CHIPPluginDeviceTopology _dictionaryRepresentation]
  -[CHIPPluginDeviceTopology .cxx_destruct]
  -[CHIPPluginDeviceTopology init]
  -[CHIPPluginDeviceTopology hapCategories]
  -[CHIPPluginDeviceTopology setHapCategories:]
  -[CHIPPluginDeviceTopology hapServiceTypes]
  -[CHIPPluginDeviceTopology clustersInUse]
  -[CHIPPluginDeviceTopology hapDisabledCharacteristics]
  -[CHIPPluginDeviceTopology initWithNodeId:storage:]
  -[CHIPPluginDeviceTopology initWithTopologyDictionary:]
  -[CHIPPluginDeviceTopology getHAPServiceTypesAtEndpoint:]
  -[CHIPPluginDeviceTopology getClustersInUseAtEndpoint:]
  -[CHIPPluginDeviceTopology getHAPCategoriesAtEndpoint:]
  -[CHIPPluginDeviceTopology getEndpoints]
  -[CHIPPluginDeviceTopology isHAPCharacteristicDisabledAtEndpoint:hapServiceType:hapCharacteristic:]
  -[CHIPPluginDeviceTopology setHapServiceTypes:]
  -[CHIPPluginDeviceTopology setClustersInUse:]
  -[CHIPPluginDeviceTopology setHapDisabledCharacteristics:]


CHIPPluginMutableDeviceTopology : CHIPPluginDeviceTopology
 @property  NSMutableDictionary *hapServiceTypes
 @property  NSMutableDictionary *clustersInUse
 @property  NSMutableDictionary *hapCategories
 @property  NSMutableDictionary *hapDisabledCharacteristics

  // instance methods
  -[CHIPPluginMutableDeviceTopology setHAPServiceTypes:atEndpoint:]
  -[CHIPPluginMutableDeviceTopology setClustersInUse:atEndpoint:]
  -[CHIPPluginMutableDeviceTopology setHAPCategories:atEndpoint:]
  -[CHIPPluginMutableDeviceTopology setHAPDisabledCharacteristics:atEndpoint:]
  -[CHIPPluginMutableDeviceTopology addHAPDisabledCharacteristic:atEndpoint:hapServiceType:]
  -[CHIPPluginMutableDeviceTopology storeForNodeId:storage:]


CHIPPluginHAPService : HAPService
 @property  NSNumber *endpoint

  // class methods
  +[CHIPPluginHAPService chipPluginServiceForCharacteristic:]

  // instance methods
  -[CHIPPluginHAPService .cxx_destruct]
  -[CHIPPluginHAPService setEndpoint:]
  -[CHIPPluginHAPService endpoint]
  -[CHIPPluginHAPService initWithType:instanceID:parsedCharacteristics:serviceProperties:linkedServices:endpoint:]


CHIPPluginClusterDescription : HMFObject
 @property  Class clusterClass
 @property  SEL clusterSelector
 @property  @? mapValue
 @property  NSNumber *primaryArgIndex
 @property  id primaryArg
 @property  NSString *primaryArgType
 @property  NSDictionary *arguments
 @property  Class paramsClass
 @property  NSNumber *paramsIndex
 @property  NSDictionary *paramsArguments

  // instance methods
  -[CHIPPluginClusterDescription .cxx_destruct]
  -[CHIPPluginClusterDescription setArguments:]
  -[CHIPPluginClusterDescription arguments]
  -[CHIPPluginClusterDescription clusterClass]
  -[CHIPPluginClusterDescription clusterSelector]
  -[CHIPPluginClusterDescription paramsClass]
  -[CHIPPluginClusterDescription mapValue]
  -[CHIPPluginClusterDescription paramsIndex]
  -[CHIPPluginClusterDescription paramsArguments]
  -[CHIPPluginClusterDescription primaryArgIndex]
  -[CHIPPluginClusterDescription setMapValue:]
  -[CHIPPluginClusterDescription initWithClass:selectorString:]
  -[CHIPPluginClusterDescription setPrimaryArgIndex:]
  -[CHIPPluginClusterDescription primaryArg]
  -[CHIPPluginClusterDescription setPrimaryArg:]
  -[CHIPPluginClusterDescription primaryArgType]
  -[CHIPPluginClusterDescription setPrimaryArgType:]
  -[CHIPPluginClusterDescription setParamsClass:]
  -[CHIPPluginClusterDescription setParamsIndex:]
  -[CHIPPluginClusterDescription setParamsArguments:]


CHIPPluginDescriptorClusterManager : HMFObject
  // class methods
  +[CHIPPluginDescriptorClusterManager sharedManager]
  +[CHIPPluginDescriptorClusterManager logCategory]

  // instance methods
  -[CHIPPluginDescriptorClusterManager logIdentifier]
  -[CHIPPluginDescriptorClusterManager fetchHAPServicesForEndpoints:endpointDeviceTypes:device:nodeId:isABridge:storage:topology:hapAccessoryInfo:lastError:callbackQueue:completionHandler:]
  -[CHIPPluginDescriptorClusterManager fetchDeviceTypesForEndpoints:device:endpointDeviceTypes:lastError:callbackQueue:completionHandler:]
  -[CHIPPluginDescriptorClusterManager fetchEndpointsForDevice:callbackQueue:completionHandler:]
  -[CHIPPluginDescriptorClusterManager fetchDeviceTypesForDevice:atEndpoint:callbackQueue:completionHandler:]
  -[CHIPPluginDescriptorClusterManager _verifyHAPCharacteristicSupportAtCHIPEndpoint:device:callbackQueue:clusterClassToQueryForFeatureMap:hapServicesToCheckForFeatureMap:deviceTopology:clusterFeatureMapValue:lastError:completionHandler:]
  -[CHIPPluginDescriptorClusterManager _queryFeatureMapFromClusterAtCHIPEndpoint:device:callbackQueue:clusterClassName:completionHandler:]
  -[CHIPPluginDescriptorClusterManager _buildClustersInUseDictWithClustersInUse:]
  -[CHIPPluginDescriptorClusterManager hapServiceDescriptionForServiceType:clustersInUse:endpoint:hapToCHIPClusterMapping:clusterClassToQueryForFeatureMap:hapServicesToCheckForFeatureMap:]
  -[CHIPPluginDescriptorClusterManager _removeDisabledCharacteristicsFromServiceDescription:endpoint:topology:]
  -[CHIPPluginDescriptorClusterManager fetchHAPServicesAtCHIPEndpoint:deviceTopology:accessoryInfo:hapToCHIPClusterMapping:device:isABridge:callbackQueue:completionHandler:]
  -[CHIPPluginDescriptorClusterManager fetchHAPServicesForCHIPDevice:nodeId:storage:callbackQueue:completionHandler:]
  -[CHIPPluginDescriptorClusterManager hapServiceDescriptionsForTopology:]


CHIPPluginWindowCovering : CHIPWindowCovering
  // instance methods
  -[CHIPPluginWindowCovering writeAttributePluginTargetPositionWithSetValue:completionHandler:]
  -[CHIPPluginWindowCovering writeAttributePluginTargetPositionTiltWithSetValue:completionHandler:]


CHIPPluginVendorMetadata : HMFObject <NSCopying, NSMutableCopying>
 @property  NSDictionary *vendorsByVendorID
 @property  NSNumber *version
 @property  NSNumber *schemaVersion
 @property  NSSet *vendors
 @property  NSDictionary *dictionaryRepresentation

  // instance methods
  -[CHIPPluginVendorMetadata initWithDictionaryRepresentation:]
  -[CHIPPluginVendorMetadata .cxx_destruct]
  -[CHIPPluginVendorMetadata schemaVersion]
  -[CHIPPluginVendorMetadata dictionaryRepresentation]
  -[CHIPPluginVendorMetadata attributeDescriptions]
  -[CHIPPluginVendorMetadata init]
  -[CHIPPluginVendorMetadata isEqual:]
  -[CHIPPluginVendorMetadata version]
  -[CHIPPluginVendorMetadata mutableCopyWithZone:]
  -[CHIPPluginVendorMetadata copyWithZone:]
  -[CHIPPluginVendorMetadata vendorWithID:]
  -[CHIPPluginVendorMetadata initWithVersion:schemaVersion:]
  -[CHIPPluginVendorMetadata vendorsByVendorID]
  -[CHIPPluginVendorMetadata vendors]
  -[CHIPPluginVendorMetadata setVendorsByVendorID:]


CHIPPluginMutableVendorMetadata : CHIPPluginVendorMetadata
  // instance methods
  -[CHIPPluginMutableVendorMetadata copyWithZone:]
  -[CHIPPluginMutableVendorMetadata addVendor:]
  -[CHIPPluginMutableVendorMetadata removeVendorWithID:]


CHIPPluginVendorMetadataVendor : HMFObject
 @property  NSNumber *identifier
 @property  NSDictionary *productsByProductID
 @property  NSString *name
 @property  NSString *appStoreID
 @property  NSString *appBundleID
 @property  NSSet *products
 @property  NSDictionary *dictionaryRepresentation

  // instance methods
  -[CHIPPluginVendorMetadataVendor appBundleID]
  -[CHIPPluginVendorMetadataVendor name]
  -[CHIPPluginVendorMetadataVendor initWithIdentifier:dictionaryRepresentation:]
  -[CHIPPluginVendorMetadataVendor initWithIdentifier:]
  -[CHIPPluginVendorMetadataVendor .cxx_destruct]
  -[CHIPPluginVendorMetadataVendor dictionaryRepresentation]
  -[CHIPPluginVendorMetadataVendor setName:]
  -[CHIPPluginVendorMetadataVendor attributeDescriptions]
  -[CHIPPluginVendorMetadataVendor setAppBundleID:]
  -[CHIPPluginVendorMetadataVendor isEqual:]
  -[CHIPPluginVendorMetadataVendor identifier]
  -[CHIPPluginVendorMetadataVendor products]
  -[CHIPPluginVendorMetadataVendor setIdentifier:]
  -[CHIPPluginVendorMetadataVendor mutableCopyWithZone:]
  -[CHIPPluginVendorMetadataVendor copyWithZone:]
  -[CHIPPluginVendorMetadataVendor appStoreID]
  -[CHIPPluginVendorMetadataVendor productWithID:]
  -[CHIPPluginVendorMetadataVendor setAppStoreID:]
  -[CHIPPluginVendorMetadataVendor productsByProductID]
  -[CHIPPluginVendorMetadataVendor setProductsByProductID:]


CHIPPluginMutableVendorMetadataVendor : CHIPPluginVendorMetadataVendor
 @property  NSNumber *identifier
 @property  NSString *name
 @property  NSString *appStoreID
 @property  NSString *appBundleID

  // instance methods
  -[CHIPPluginMutableVendorMetadataVendor copyWithZone:]
  -[CHIPPluginMutableVendorMetadataVendor addProduct:]
  -[CHIPPluginMutableVendorMetadataVendor removeProductWithID:]


CHIPPluginVendorMetadataStore : HMFObject <HMFLogging, UARPControllerDelegateProtocol>
 @property  UARPController *uarpController
 @property  <CHIPPluginFileManager> *fileManager
 @property  CHIPPluginVendorMetadata *metadata
 @property  NSURL *fileURL
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CHIPPluginVendorMetadataStore logCategory]

  // instance methods
  -[CHIPPluginVendorMetadataStore fileManager]
  -[CHIPPluginVendorMetadataStore fileURL]
  -[CHIPPluginVendorMetadataStore .cxx_destruct]
  -[CHIPPluginVendorMetadataStore initWithFileURL:]
  -[CHIPPluginVendorMetadataStore supportedAccessories:forProductGroup:]
  -[CHIPPluginVendorMetadataStore metadata]
  -[CHIPPluginVendorMetadataStore assetAvailablityUpdateForAccessoryID:assetID:]
  -[CHIPPluginVendorMetadataStore fetchCloudMetadata]
  -[CHIPPluginVendorMetadataStore uarpController]
  -[CHIPPluginVendorMetadataStore sendMessageToAccessory:uarpMsg:error:]
  -[CHIPPluginVendorMetadataStore initWithFileURL:uarpController:fileManager:]
  -[CHIPPluginVendorMetadataStore staticMetadata]
  -[CHIPPluginVendorMetadataStore staticMetadataFileURL]
  -[CHIPPluginVendorMetadataStore _saveMetadata:]


CHIPPluginHAPServiceDescription : HMFObject
 @property  NSString *serviceType
 @property  NSNumber *endpoint
 @property  NSArray *requiredCharacteristics
 @property  NSArray *optionalCharacteristics
 @property  NSDictionary *characteristicFeatureMap

  // instance methods
  -[CHIPPluginHAPServiceDescription .cxx_destruct]
  -[CHIPPluginHAPServiceDescription attributeDescriptions]
  -[CHIPPluginHAPServiceDescription setEndpoint:]
  -[CHIPPluginHAPServiceDescription endpoint]
  -[CHIPPluginHAPServiceDescription optionalCharacteristics]
  -[CHIPPluginHAPServiceDescription serviceType]
  -[CHIPPluginHAPServiceDescription removeCharacteristic:]
  -[CHIPPluginHAPServiceDescription characteristicFeatureMap]
  -[CHIPPluginHAPServiceDescription requiredCharacteristics]
  -[CHIPPluginHAPServiceDescription initWithType:endpoint:]
  -[CHIPPluginHAPServiceDescription addMandatoryCharacteristic:]
  -[CHIPPluginHAPServiceDescription addFeatureMapForCharacteristic:featureMap:]
  -[CHIPPluginHAPServiceDescription addOptionalCharacteristic:]
  -[CHIPPluginHAPServiceDescription padCharacteristicIDWithZeros:]


CHIPPluginResidentStateManager : HMFObject <HMFLogging>
 @property  BOOL currentDevicePrimaryResident
 @property  <CHIPPluginResidentStateManagerDataSource> *dataSource
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CHIPPluginResidentStateManager logCategory]

  // instance methods
  -[CHIPPluginResidentStateManager setDataSource:]
  -[CHIPPluginResidentStateManager .cxx_destruct]
  -[CHIPPluginResidentStateManager dataSource]
  -[CHIPPluginResidentStateManager init]
  -[CHIPPluginResidentStateManager logIdentifier]
  -[CHIPPluginResidentStateManager isCurrentDevicePrimaryResident]
  -[CHIPPluginResidentStateManager handleResidentStateUpdated]
  -[CHIPPluginResidentStateManager setCurrentDevicePrimaryResident:]


CHIPAccessoryServer : HAPAccessoryServer <CHIPDevicePairingDelegate, HMFLogging, HMFTimerDelegate>
 @property  CHIPAccessoryServerBrowser *browser
 @property  CHIPPluginStorage *storage
 @property  CHIPPluginAccessoryReachabilityManager *reachabilityManager
 @property  @? stageCompletion
 @property  HMFTimer *pairingTimer
 @property  HMFTimer *subscriptionRetryTimer
 @property  unsigned long subscriptionAttemptCount
 @property  unsigned long pairingProgress
 @property  unsigned int networkProvisioningFailures
 @property  CHIPAttributeCacheContainer *attributeCacheContainer
 @property  CHIPPluginPairing *currentPairingInfo
 @property  NSOperationQueue *characteristicsOperationQueue
 @property  HAPAccessory *primaryAccessory
 @property  NSNumber *nodeID
 @property  NSNumber *fabricIndex
 @property  NSNumber *vendorID
 @property  NSNumber *productID
 @property  NSNumber *discriminator
 @property  NSNumber *setUpPINCode
 @property  long long pairedState
 @property  CHIPDeviceController *chipDeviceController
 @property  @? chipReportHandler
 @property  HAPAccessory *primaryAccessoryForServer
 @property  CHIPPluginPairing *currentPairing
 @property  <CHIPAccessoryServerDelegate> *chipDelegate
 @property  BOOL isReenumeratingHAPServices
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CHIPAccessoryServer logCategory]
  +[CHIPAccessoryServer shortDescription]

  // instance methods
  -[CHIPAccessoryServer nodeID]
  -[CHIPAccessoryServer isPaired]
  -[CHIPAccessoryServer setBrowser:]
  -[CHIPAccessoryServer disable]
  -[CHIPAccessoryServer timerDidFire:]
  -[CHIPAccessoryServer setStorage:]
  -[CHIPAccessoryServer privateDescription]
  -[CHIPAccessoryServer setVendorID:]
  -[CHIPAccessoryServer tryPairingPassword:error:]
  -[CHIPAccessoryServer enableEvents:forCharacteristics:withCompletionHandler:queue:]
  -[CHIPAccessoryServer setProductID:]
  -[CHIPAccessoryServer .cxx_destruct]
  -[CHIPAccessoryServer productID]
  -[CHIPAccessoryServer stopPairingWithError:]
  -[CHIPAccessoryServer writeCharacteristicValues:timeout:completionQueue:completionHandler:]
  -[CHIPAccessoryServer deviceID]
  -[CHIPAccessoryServer storage]
  -[CHIPAccessoryServer vendorID]
  -[CHIPAccessoryServer browser]
  -[CHIPAccessoryServer attributeDescriptions]
  -[CHIPAccessoryServer linkType]
  -[CHIPAccessoryServer _delegateRespondsToSelector:]
  -[CHIPAccessoryServer handleUpdatesForCharacteristics:stateNumber:]
  -[CHIPAccessoryServer isEqual:]
  -[CHIPAccessoryServer identifyWithCompletion:]
  -[CHIPAccessoryServer listPairingsWithCompletionQueue:completionHandler:]
  -[CHIPAccessoryServer removePairingForCurrentControllerOnQueue:completion:]
  -[CHIPAccessoryServer reachabilityManager]
  -[CHIPAccessoryServer discoverAccessories]
  -[CHIPAccessoryServer addPairing:completionQueue:completionHandler:]
  -[CHIPAccessoryServer pingSupported]
  -[CHIPAccessoryServer setReachabilityManager:]
  -[CHIPAccessoryServer logIdentifier]
  -[CHIPAccessoryServer isStaged]
  -[CHIPAccessoryServer isDisabled]
  -[CHIPAccessoryServer readCharacteristicValues:timeout:completionQueue:completionHandler:]
  -[CHIPAccessoryServer primaryAccessory]
  -[CHIPAccessoryServer primaryAccessoryForServer]
  -[CHIPAccessoryServer removePairing:completionQueue:completionHandler:]
  -[CHIPAccessoryServer discriminator]
  -[CHIPAccessoryServer communicationProtocol]
  -[CHIPAccessoryServer setPrimaryAccessory:]
  -[CHIPAccessoryServer currentPairing]
  -[CHIPAccessoryServer fabricIndex]
  -[CHIPAccessoryServer setNodeID:]
  -[CHIPAccessoryServer setFabricIndex:]
  -[CHIPAccessoryServer reachabilityChangedReason]
  -[CHIPAccessoryServer initWithKeystore:]
  -[CHIPAccessoryServer matchesSetupID:serverIdentifier:]
  -[CHIPAccessoryServer openPairingWindowWithPINForDuration:completionHandler:]
  -[CHIPAccessoryServer removeAllPairingsWithCompletionHandler:]
  -[CHIPAccessoryServer setChipDelegate:]
  -[CHIPAccessoryServer fetchPairingsWithCompletionHandler:]
  -[CHIPAccessoryServer removePairing:completionHandler:]
  -[CHIPAccessoryServer openPairingWindowForDuration:completionHandler:]
  -[CHIPAccessoryServer matchesSetupID:]
  -[CHIPAccessoryServer startPairingWithConsentRequired:config:ownershipToken:]
  -[CHIPAccessoryServer onStatusUpdate:]
  -[CHIPAccessoryServer onPairingComplete:]
  -[CHIPAccessoryServer onPairingDeleted:]
  -[CHIPAccessoryServer onCommissioningComplete:]
  -[CHIPAccessoryServer setDiscriminator:]
  -[CHIPAccessoryServer setUpPINCode]
  -[CHIPAccessoryServer setSetUpPINCode:]
  -[CHIPAccessoryServer initWithKeystore:browser:]
  -[CHIPAccessoryServer attributeCacheContainer]
  -[CHIPAccessoryServer pairedState]
  -[CHIPAccessoryServer startStagedPairingWithCompletion:]
  -[CHIPAccessoryServer commitStagedPairing]
  -[CHIPAccessoryServer setPairedState:]
  -[CHIPAccessoryServer setupReporting]
  -[CHIPAccessoryServer enumerateHAPServices:]
  -[CHIPAccessoryServer didUpdateReachability:]
  -[CHIPAccessoryServer currentPairingInfo]
  -[CHIPAccessoryServer chipDeviceController]
  -[CHIPAccessoryServer setPairingProgress:]
  -[CHIPAccessoryServer setPairingTimer:]
  -[CHIPAccessoryServer pairingTimer]
  -[CHIPAccessoryServer _pairingComplete:]
  -[CHIPAccessoryServer subscriptionRetryTimer]
  -[CHIPAccessoryServer subscriptionAttemptCount]
  -[CHIPAccessoryServer _startPairingWithError:]
  -[CHIPAccessoryServer setStageCompletion:]
  -[CHIPAccessoryServer _handlePairingFailureWithError:]
  -[CHIPAccessoryServer pairingProgress]
  -[CHIPAccessoryServer _initAccessoriesForServer]
  -[CHIPAccessoryServer characteristicsOperationQueue]
  -[CHIPAccessoryServer _unpair:completion:]
  -[CHIPAccessoryServer _onUnpairFinishedWithError:queue:completion:]
  -[CHIPAccessoryServer _deleteAccessoryServerData]
  -[CHIPAccessoryServer _finalizePairing]
  -[CHIPAccessoryServer setChipDeviceController:]
  -[CHIPAccessoryServer setSubscriptionAttemptCount:]
  -[CHIPAccessoryServer setAttributeCacheContainer:]
  -[CHIPAccessoryServer _handleUnmappedAttributeReport:]
  -[CHIPAccessoryServer _updatedCharacteristicsForAttributeReport:completionHandler:]
  -[CHIPAccessoryServer setIsReenumeratingHAPServices:]
  -[CHIPAccessoryServer chipDelegate]
  -[CHIPAccessoryServer isReenumeratingHAPServices]
  -[CHIPAccessoryServer _handlePartsListChanged:storage:endpoints:]
  -[CHIPAccessoryServer _readCharacteristicValues:forFailedResponses:atIndexes:device:completionHandler:]
  -[CHIPAccessoryServer _populateServiceForCharacteristic:]
  -[CHIPAccessoryServer _readCharacteristicValueFromCacheWithCharacteristic:responseHandler:]
  -[CHIPAccessoryServer _readCharacteristicValues:forFailedResponses:dispatchGroup:errorHandler:]
  -[CHIPAccessoryServer _writeCharacteristicValues:device:responseTuples:completionQueue:complethionHandler:]
  -[CHIPAccessoryServer stageCompletion]
  -[CHIPAccessoryServer setCurrentPairingInfo:]
  -[CHIPAccessoryServer _fetchCurrentPairingWithCompletionHandler:]
  -[CHIPAccessoryServer _persistAccessoryServerData]
  -[CHIPAccessoryServer _rebuildHAPServicesFromCHIPWithCompletionHandler:]
  -[CHIPAccessoryServer _categoryFromTopology:endpoint:]
  -[CHIPAccessoryServer _buildBridgedAccesoriesForServiceDescriptions:]
  -[CHIPAccessoryServer _buildServicesForServiceDescriptions:]
  -[CHIPAccessoryServer _setCategoryForPrimaryAccessory:]
  -[CHIPAccessoryServer _categoryFromAccessoryInfo:endpoint:]
  -[CHIPAccessoryServer _endPointFromServiceDescriptions:]
  -[CHIPAccessoryServer _createHAPServicesFromServiceDescriptions:services:startingServiceInstanceID:setAccessory:]
  -[CHIPAccessoryServer _createBridgedHAPAccessory:instanceId:endpointID:]
  -[CHIPAccessoryServer _populateWifiCredentials:completion:]
  -[CHIPAccessoryServer _populateThreadCredentials:completion:]
  -[CHIPAccessoryServer _matterCredentialsFromTHCredentials:]
  -[CHIPAccessoryServer _collectNetworkCredentials]
  -[CHIPAccessoryServer hasNetworkProvisioningFailed:]
  -[CHIPAccessoryServer updateFabricLabel:completionHandler:]
  -[CHIPAccessoryServer setSubscriptionRetryTimer:]
  -[CHIPAccessoryServer networkProvisioningFailures]
  -[CHIPAccessoryServer setNetworkProvisioningFailures:]
  -[CHIPAccessoryServer chipReportHandler]
  -[CHIPAccessoryServer setChipReportHandler:]
  -[CHIPAccessoryServer _receiveReport:]
  -[CHIPAccessoryServer _startSubscriptionWithDevice:endpointId:clusterId:attributeId:minInterval:maxInterval:establishedHandler:]
  -[CHIPAccessoryServer _handleCHIPRemoteRequest:device:]
  -[CHIPAccessoryServer chipNodeId]
  -[CHIPAccessoryServer handleCHIPRemoteRequest:]
  -[CHIPAccessoryServer setCHIPReportHandler:]


CHIPAccessoryServerBuilder : HMFObject
 @property  CHIPAccessoryServer *accessoryServer

  // instance methods
  -[CHIPAccessoryServerBuilder addService:]
  -[CHIPAccessoryServerBuilder .cxx_destruct]
  -[CHIPAccessoryServerBuilder name:]
  -[CHIPAccessoryServerBuilder identifier:]
  -[CHIPAccessoryServerBuilder build]
  -[CHIPAccessoryServerBuilder accessoryServer]
  -[CHIPAccessoryServerBuilder setAccessoryServer:]
  -[CHIPAccessoryServerBuilder category:]
  -[CHIPAccessoryServerBuilder initWithKeystore:browser:]
  -[CHIPAccessoryServerBuilder nodeID:]
  -[CHIPAccessoryServerBuilder vendorID:]
  -[CHIPAccessoryServerBuilder productID:]
  -[CHIPAccessoryServerBuilder manufacturer:]
  -[CHIPAccessoryServerBuilder model:]
  -[CHIPAccessoryServerBuilder serialNumber:]
  -[CHIPAccessoryServerBuilder setUpPinCode:]
  -[CHIPAccessoryServerBuilder discriminator:]


CHIPPluginProtocolMap : HMFObject
 @property  NSNumber *version
 @property  NSNumber *schemaVersion
 @property  NSDictionary *rawPlist
 @property  NSDictionary *hapToCHIPClusterMapping

  // class methods
  +[CHIPPluginProtocolMap logCategory]
  +[CHIPPluginProtocolMap protocolMap]
  +[CHIPPluginProtocolMap linearMapForCharacteristic:value:fromRange:toRange:]
  +[CHIPPluginProtocolMap customMapReadForCharacteristic:value:]
  +[CHIPPluginProtocolMap customMapWriteForCharacteristic:value:]
  +[CHIPPluginProtocolMap mapCurrentHeatingCoolingState:]
  +[CHIPPluginProtocolMap mapCurrentSystemMode:]
  +[CHIPPluginProtocolMap checkIfCharacteristicsIsOfTypeTemp:]
  +[CHIPPluginProtocolMap mapTargetSystemMode:]
  +[CHIPPluginProtocolMap mapPositionState:]
  +[CHIPPluginProtocolMap mapFanMode:]
  +[CHIPPluginProtocolMap mapTargetHeatingCoolingState:]
  +[CHIPPluginProtocolMap mapActiveState:]

  // instance methods
  -[CHIPPluginProtocolMap .cxx_destruct]
  -[CHIPPluginProtocolMap schemaVersion]
  -[CHIPPluginProtocolMap rawPlist]
  -[CHIPPluginProtocolMap init]
  -[CHIPPluginProtocolMap version]
  -[CHIPPluginProtocolMap logIdentifier]
  -[CHIPPluginProtocolMap descriptionForCharacteristicUUID:operation:value:]
  -[CHIPPluginProtocolMap getClusterClassForCharacteristic:]
  -[CHIPPluginProtocolMap hapToCHIPClusterMapping]
  -[CHIPPluginProtocolMap requiredCharacterisiticsForService:]
  -[CHIPPluginProtocolMap getIDForCharacteristic:]
  -[CHIPPluginProtocolMap getRequiredFeaturesBitmapForCharacteristic:]
  -[CHIPPluginProtocolMap optionalCharacterisiticsForService:]
  -[CHIPPluginProtocolMap servicesForDeviceTypes:]
  -[CHIPPluginProtocolMap categoriesForDeviceTypes:]
  -[CHIPPluginProtocolMap reportDescriptionForCharacteristic:]
  -[CHIPPluginProtocolMap getUpdatedLinkedCharacteristics:]
  -[CHIPPluginProtocolMap retrieveHAPToCHIPClusterMapping]
  -[CHIPPluginProtocolMap _characteristicsDictionaryForCharacteristicUUID:]
  -[CHIPPluginProtocolMap _buildValueMapper:characteristicsDict:operation:]
  -[CHIPPluginProtocolMap _chipClusterFunctionNameForOperationType:operationDictionary:value:]
  -[CHIPPluginProtocolMap _protocolMapCharacteristicsKeyForOperationType:]
  -[CHIPPluginProtocolMap _chipParamsDictionaryForOperationType:operationDictionary:value:]
  -[CHIPPluginProtocolMap _characteristicDescriptionForCharacteristicWithUUID:characteristicsDict:chipClusterName:operationType:value:]
  -[CHIPPluginProtocolMap descriptionForCharacteristicUUID:operation:]


CHIPPluginMatterKeypair : HMFObject <HMFLogging, CHIPKeypair>
 @property  BOOL initialized
 @property  ^{__SecKey=} privateKey
 @property  ^{__SecKey=} publicKey
 @property  NSString *keychainAccount
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CHIPPluginMatterKeypair logCategory]

  // instance methods
  -[CHIPPluginMatterKeypair initialize]
  -[CHIPPluginMatterKeypair publicKey]
  -[CHIPPluginMatterKeypair privateKey]
  -[CHIPPluginMatterKeypair .cxx_destruct]
  -[CHIPPluginMatterKeypair deserialize:]
  -[CHIPPluginMatterKeypair initWithAccount:]
  -[CHIPPluginMatterKeypair initialized]
  -[CHIPPluginMatterKeypair setInitialized:]
  -[CHIPPluginMatterKeypair serialize]
  -[CHIPPluginMatterKeypair logIdentifier]
  -[CHIPPluginMatterKeypair reload]
  -[CHIPPluginMatterKeypair ECDSA_sign_hash:]
  -[CHIPPluginMatterKeypair pubkey]
  -[CHIPPluginMatterKeypair setKeychainAccount:]
  -[CHIPPluginMatterKeypair _getPrivateKeydata]
  -[CHIPPluginMatterKeypair _generateKeys]
  -[CHIPPluginMatterKeypair _reloadWithData:]
  -[CHIPPluginMatterKeypair keychainAccount]
  -[CHIPPluginMatterKeypair _storePrivateKeyData:]


CHIPPluginAccessorySetupPayload : HMFObject <NSCopying, NSMutableCopying, NSSecureCoding>
 @property  NSNumber *vendorID
 @property  NSNumber *productID
 @property  NSString *serialNumber
 @property  NSString *setupPayloadString
 @property  BOOL requiresCustomFlow
 @property  NSNumber *setupCode
 @property  NSNumber *discriminator
 @property  NSString *setupID

  // class methods
  +[CHIPPluginAccessorySetupPayload supportsSecureCoding]
  +[CHIPPluginAccessorySetupPayload shortDescription]
  +[CHIPPluginAccessorySetupPayload isValidSetupPayloadURLScheme:]

  // instance methods
  -[CHIPPluginAccessorySetupPayload serialNumber]
  -[CHIPPluginAccessorySetupPayload setSerialNumber:]
  -[CHIPPluginAccessorySetupPayload privateDescription]
  -[CHIPPluginAccessorySetupPayload initWithCoder:]
  -[CHIPPluginAccessorySetupPayload setVendorID:]
  -[CHIPPluginAccessorySetupPayload setProductID:]
  -[CHIPPluginAccessorySetupPayload .cxx_destruct]
  -[CHIPPluginAccessorySetupPayload productID]
  -[CHIPPluginAccessorySetupPayload vendorID]
  -[CHIPPluginAccessorySetupPayload attributeDescriptions]
  -[CHIPPluginAccessorySetupPayload isEqual:]
  -[CHIPPluginAccessorySetupPayload setupID]
  -[CHIPPluginAccessorySetupPayload mutableCopyWithZone:]
  -[CHIPPluginAccessorySetupPayload shortDescription]
  -[CHIPPluginAccessorySetupPayload copyWithZone:]
  -[CHIPPluginAccessorySetupPayload encodeWithCoder:]
  -[CHIPPluginAccessorySetupPayload setupCode]
  -[CHIPPluginAccessorySetupPayload discriminator]
  -[CHIPPluginAccessorySetupPayload setupPayloadString]
  -[CHIPPluginAccessorySetupPayload requiresCustomFlow]
  -[CHIPPluginAccessorySetupPayload initWithSetupCode:discriminator:]
  -[CHIPPluginAccessorySetupPayload setSetupPayloadString:]
  -[CHIPPluginAccessorySetupPayload setRequiresCustomFlow:]
  -[CHIPPluginAccessorySetupPayload initWithSetupPayloadString:]
  -[CHIPPluginAccessorySetupPayload initWithSetupCodeString:]
  -[CHIPPluginAccessorySetupPayload initWithCHIPSetupPayload:setupPayloadString:]


CHIPPluginMutableAccessorySetupPayload : CHIPPluginAccessorySetupPayload
 @property  NSNumber *vendorID
 @property  NSNumber *productID
 @property  NSString *serialNumber
 @property  NSString *setupPayloadString
 @property  BOOL requiresCustomFlow

  // instance methods
  -[CHIPPluginMutableAccessorySetupPayload copyWithZone:]


CHIPPluginFileManager : HMFObject <CHIPPluginFileManager>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CHIPPluginFileManager dictionaryWithContentsOfURL:error:]
  -[CHIPPluginFileManager writeDictionary:toURL:error:]


CHIPPluginVendorMetadataProduct : HMFObject <NSCopying, NSMutableCopying>
 @property  NSNumber *identifier
 @property  NSNumber *categoryNumber
 @property  NSString *name
 @property  NSString *model
 @property  NSURL *installationGuideURL
 @property  NSDictionary *dictionaryRepresentation

  // instance methods
  -[CHIPPluginVendorMetadataProduct name]
  -[CHIPPluginVendorMetadataProduct initWithIdentifier:dictionaryRepresentation:]
  -[CHIPPluginVendorMetadataProduct setCategoryNumber:]
  -[CHIPPluginVendorMetadataProduct .cxx_destruct]
  -[CHIPPluginVendorMetadataProduct dictionaryRepresentation]
  -[CHIPPluginVendorMetadataProduct setName:]
  -[CHIPPluginVendorMetadataProduct attributeDescriptions]
  -[CHIPPluginVendorMetadataProduct isEqual:]
  -[CHIPPluginVendorMetadataProduct identifier]
  -[CHIPPluginVendorMetadataProduct model]
  -[CHIPPluginVendorMetadataProduct setIdentifier:]
  -[CHIPPluginVendorMetadataProduct setModel:]
  -[CHIPPluginVendorMetadataProduct mutableCopyWithZone:]
  -[CHIPPluginVendorMetadataProduct copyWithZone:]
  -[CHIPPluginVendorMetadataProduct categoryNumber]
  -[CHIPPluginVendorMetadataProduct installationGuideURL]
  -[CHIPPluginVendorMetadataProduct setInstallationGuideURL:]
  -[CHIPPluginVendorMetadataProduct initWithIdentifier:categoryNumber:]


CHIPPluginMutableVendorMetadataProduct : CHIPPluginVendorMetadataProduct
 @property  NSNumber *identifier
 @property  NSNumber *categoryNumber
 @property  NSString *name
 @property  NSString *model
 @property  NSURL *installationGuideURL

  // instance methods
  -[CHIPPluginMutableVendorMetadataProduct copyWithZone:]


CHIPPluginPairing : HMFObject <NSCopying>
 @property  NSNumber *nodeID
 @property  NSNumber *fabricID
 @property  NSNumber *fabricIndex
 @property  NSString *fabricLabel
 @property  NSData *rootPublicKey
 @property  NSNumber *vendorID
 @property  NSString *vendorName

  // instance methods
  -[CHIPPluginPairing nodeID]
  -[CHIPPluginPairing vendorName]
  -[CHIPPluginPairing .cxx_destruct]
  -[CHIPPluginPairing vendorID]
  -[CHIPPluginPairing attributeDescriptions]
  -[CHIPPluginPairing isEqual:]
  -[CHIPPluginPairing copyWithZone:]
  -[CHIPPluginPairing rootPublicKey]
  -[CHIPPluginPairing fabricID]
  -[CHIPPluginPairing fabricIndex]
  -[CHIPPluginPairing fabricLabel]
  -[CHIPPluginPairing initWithNodeID:fabricID:fabricIndex:fabricLabel:rootPublicKey:vendorID:vendorName:]
  -[CHIPPluginPairing initWithCHIPFabricDescriptor:]
  -[CHIPPluginPairing initWithFabricID:fabricIndex:nodeID:vendorID:vendorName:fabricLabel:]
  -[CHIPPluginPairing vendorNameForVendorID:]
  -[CHIPPluginPairing initWithFabricID:nodeID:vendorID:vendorName:fabricLabel:]
  -[CHIPPluginPairing initWithFabricID:nodeID:vendorID:fabricLabel:]


(CHIPPlugin)
	// instance methods
	-[(CHIPPlugin) chipplugin_isCHIPError]

CHIPDevice(CHIPPluginPairing)
	// instance methods
	-[CHIPDevice(CHIPPluginPairing) unpairDevice:completionHandler:]
	-[CHIPDevice(CHIPPluginPairing) _removePairing:callbackQueue:completionHandler:]
	-[CHIPDevice(CHIPPluginPairing) fetchPairingsWithCallbackQueue:completionHandler:]
	-[CHIPDevice(CHIPPluginPairing) _retrieveFabricClusterWithQueue:]
	-[CHIPDevice(CHIPPluginPairing) fetchCurrentFabricIndexWithCallbackQueue:completionHandler:]
	-[CHIPDevice(CHIPPluginPairing) _fetchPairingsWithCallbackQueue:filtered:completionHandler:]
	-[CHIPDevice(CHIPPluginPairing) removePairing:callbackQueue:completionHandler:]
	-[CHIPDevice(CHIPPluginPairing) updateFabricLabel:callbackQueue:completionHandler:]
	-[CHIPDevice(CHIPPluginPairing) removeAllPairingsForCallbackQueue:completionHandler:]
	-[CHIPDevice(CHIPPluginPairing) fetchCurrentPairingWithCallbackQueue:completionHandler:]

(SHA256Hash)
	// instance methods
	-[(SHA256Hash) chip_sha256hash]
	-[(SHA256Hash) chip_unsignedLongLongValue]

<DEREK BUG Categories!>(CHIPPluginRemoteMessageDictionary)
	// instance methods
	-[<DEREK BUG Categories!>(CHIPPluginRemoteMessageDictionary) setCHIPEndpointId:clusterId:attributeId:]
	-[<DEREK BUG Categories!>(CHIPPluginRemoteMessageDictionary) setCHIPEndpointId:clusterId:commandId:]
	-[<DEREK BUG Categories!>(CHIPPluginRemoteMessageDictionary) setCHIPStatus:]
	-[<DEREK BUG Categories!>(CHIPPluginRemoteMessageDictionary) setCHIPData:]
	-[<DEREK BUG Categories!>(CHIPPluginRemoteMessageDictionary) setCHIPCommandFields:]
	-[<DEREK BUG Categories!>(CHIPPluginRemoteMessageDictionary) setCHIPMinInterval:]
	-[<DEREK BUG Categories!>(CHIPPluginRemoteMessageDictionary) setCHIPMaxInterval:]
	-[<DEREK BUG Categories!>(CHIPPluginRemoteMessageDictionary) setCHIPRemoteCommand:]
	-[<DEREK BUG Categories!>(CHIPPluginRemoteMessageDictionary) setCHIPRemoteResults:]

(CHIPPluginRemoteMessageDictionary)
	// instance methods
	-[(CHIPPluginRemoteMessageDictionary) getCHIPEndpointId]
	-[(CHIPPluginRemoteMessageDictionary) getCHIPClusterId]
	-[(CHIPPluginRemoteMessageDictionary) getCHIPAttributeId]
	-[(CHIPPluginRemoteMessageDictionary) getCHIPCommandId]
	-[(CHIPPluginRemoteMessageDictionary) getCHIPStatus]
	-[(CHIPPluginRemoteMessageDictionary) getCHIPData]
	-[(CHIPPluginRemoteMessageDictionary) getCHIPCommandFields]
	-[(CHIPPluginRemoteMessageDictionary) getCHIPMinInterval]
	-[(CHIPPluginRemoteMessageDictionary) getCHIPMaxInterval]
	-[(CHIPPluginRemoteMessageDictionary) getCHIPRemoteCommand]
	-[(CHIPPluginRemoteMessageDictionary) getCHIPRemoteResults]

01 00 0300 /System/Library/Frameworks/CHIP.framework/CHIP: CHIPAttributeCacheContainer 
01 00 0300 /System/Library/Frameworks/CHIP.framework/CHIP: CHIPCommissioningParameters 
01 00 0300 /System/Library/Frameworks/CHIP.framework/CHIP: CHIPDescriptor 
01 00 0300 /System/Library/Frameworks/CHIP.framework/CHIP: CHIPDevice 
01 00 0300 /System/Library/Frameworks/CHIP.framework/CHIP: CHIPDeviceController 
01 00 0300 /System/Library/Frameworks/CHIP.framework/CHIP: CHIPDeviceControllerStartupParams 
01 00 0300 /System/Library/Frameworks/CHIP.framework/CHIP: CHIPManualSetupPayloadParser 
01 00 0300 /System/Library/Frameworks/CHIP.framework/CHIP: CHIPNetworkCommissioning 
01 00 0300 /System/Library/Frameworks/CHIP.framework/CHIP: CHIPOperationalCredentials 
01 00 0300 /System/Library/Frameworks/CHIP.framework/CHIP: CHIPOperationalCredentialsClusterRemoveFabricParams 
01 00 0300 /System/Library/Frameworks/CHIP.framework/CHIP: CHIPOperationalCredentialsClusterUpdateFabricLabelParams 
01 00 0300 /System/Library/Frameworks/CHIP.framework/CHIP: CHIPQRCodeSetupPayloadParser 
01 00 0300 /System/Library/Frameworks/CHIP.framework/CHIP: CHIPReadParams 
01 00 0300 /System/Library/Frameworks/CHIP.framework/CHIP: CHIPSubscribeParams 
01 00 0300 /System/Library/Frameworks/CHIP.framework/CHIP: CHIPThermostat 
01 00 0300 /System/Library/Frameworks/CHIP.framework/CHIP: CHIPThreadOperationalDataset 
01 00 0300 /System/Library/Frameworks/CHIP.framework/CHIP: CHIPWindowCovering 
01 00 0300 /System/Library/Frameworks/CHIP.framework/CHIP: CHIPWindowCoveringClusterGoToLiftPercentageParams 
01 00 0300 /System/Library/Frameworks/CHIP.framework/CHIP: CHIPWindowCoveringClusterGoToTiltPercentageParams 
01 00 0400 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPAccessory 
01 00 0400 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPAccessoryServer 
01 00 0400 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPAccessoryServerBrowser 
01 00 0400 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPCharacteristic 
01 00 0400 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPCharacteristicResponseTuple 
01 00 0400 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPDeviceID 
01 00 0400 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPMetadata 
01 00 0400 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPMutableKeychainItem 
01 00 0400 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPService 
01 00 0400 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPSystemKeychainStore 
01 00 0100 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFAttributeDescription 
01 00 0100 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFBlockOperation 
01 00 0100 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFObject 
01 00 0100 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFTimer 
01 00 0300 /System/Library/Frameworks/CHIP.framework/CHIP: MatterControllerFactory 
01 00 0300 /System/Library/Frameworks/CHIP.framework/CHIP: MatterControllerFactoryParams 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSInvocation 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 0900 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSScanner 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0600 /System/Library/Frameworks/ThreadNetwork.framework/ThreadNetwork: THClient 
01 00 0700 /System/Library/PrivateFrameworks/CoreUARP.framework/CoreUARP: UARPAccessoryHardwareCHIP 
01 00 0700 /System/Library/PrivateFrameworks/CoreUARP.framework/CoreUARP: UARPController 
