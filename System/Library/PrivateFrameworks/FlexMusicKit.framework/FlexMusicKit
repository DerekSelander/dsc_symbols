|| __DATA.__objc_data _OBJC_CLASS_$_FMClip
|| __DATA.__objc_data _OBJC_CLASS_$_FMDownloadOptions
|| __DATA.__objc_data _OBJC_CLASS_$_FMFetchOptions
|| __DATA.__objc_data _OBJC_CLASS_$_FMKeyFrame
|| __DATA.__objc_data _OBJC_CLASS_$_FMMixParameters
|| __DATA.__objc_data _OBJC_CLASS_$_FMSong
|| __DATA.__objc_data _OBJC_CLASS_$_FMSongAsset
|| __DATA.__objc_data _OBJC_CLASS_$_FMSongLibrary
|| __DATA.__objc_data _OBJC_CLASS_$_FMSongRendition
|| __DATA.__objc_data _OBJC_CLASS_$_FMTimedMetadataItem
|| __DATA.__objc_data _OBJC_CLASS_$_FMTrack
|| __DATA.__objc_data _OBJC_METACLASS_$_FMClip
|| __DATA.__objc_data _OBJC_METACLASS_$_FMDownloadOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_FMFetchOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_FMKeyFrame
|| __DATA.__objc_data _OBJC_METACLASS_$_FMMixParameters
|| __DATA.__objc_data _OBJC_METACLASS_$_FMSong
|| __DATA.__objc_data _OBJC_METACLASS_$_FMSongAsset
|| __DATA.__objc_data _OBJC_METACLASS_$_FMSongLibrary
|| __DATA.__objc_data _OBJC_METACLASS_$_FMSongRendition
|| __DATA.__objc_data _OBJC_METACLASS_$_FMTimedMetadataItem
|| __DATA.__objc_data _OBJC_METACLASS_$_FMTrack
|| __DATA_CONST.__const _FMSongArtworkAssetID
|| __DATA_CONST.__const _FMSongAssetCompatibilityVersion
|| __DATA_CONST.__const _FMSongAssetContentVersion
|| __DATA_CONST.__const _FMSongAssetDownloadProgressChanged
|| __DATA_CONST.__const _FMSongAssetsChanged
|| __DATA_CONST.__const _FMSongBundleAssetID
|| __DATA_CONST.__const _FMSongBundleExtension
|| __DATA_CONST.__const _FMSongFormat_Legacy
|| __DATA_CONST.__const _FMSongFormat_ML
|| __DATA_CONST.__const _FMSongLibraryAvailableSongsChanged
|| __DATA_CONST.__const _FMSongLibraryInitOption_CloudSupportDisabled
|| __DATA_CONST.__const _FMSongLibraryInitOption_CustomBundledSongsPath
|| __DATA_CONST.__const _FMSongLibraryInitOption_LoadCacheDuringInit
|| __DATA_CONST.__const _FMSongLibraryInitOption_MobileAssets_AssetTypeIdentifier
|| __DATA_CONST.__const _FMSongLibraryInitOption_MobileAssets_ClientID
|| __DATA_CONST.__const _FMSongLibraryInitOption_MobileAssets_ListenToSystemNotifications
|| __DATA_CONST.__const _FMSongLibraryInitOption_NetworkingDisabled
|| __DATA_CONST.__const _FMSongLibrarySongDownloadInProgressChanged
|| __DATA_CONST.__const _FMSongLibrarySongDownloadInProgressState
|| __DATA_CONST.__const _FMSong_Option_DefaultEarlyFadeStartFromStinger
|| __DATA_CONST.__const _FMSong_Option_IgnoreEarlyFadeMarker
|| __DATA_CONST.__const _FMSong_Option_IgnoreStingerMarkerForShortening
|| __DATA_CONST.__const _FMSong_Option_LoopSongForLongDurations
|| __DATA_CONST.__const _FMSong_Option_MaxOutroLengthToReserve
|| __DATA_CONST.__const _FMSong_Option_MinLengthForEarlyFade
|| __DATA_CONST.__const _FMSong_Option_OutroCanBeShortened
|| __DATA_CONST.__const _FMTagID_Arousal_Prefix
|| __DATA_CONST.__const _FMTagID_Genre_Prefix
|| __DATA_CONST.__const _FMTagID_MoodAlt_Prefix
|| __DATA_CONST.__const _FMTagID_Mood_Prefix
|| __DATA_CONST.__const _FMTagID_Region_Prefix
|| __DATA_CONST.__const _FMTagID_SongPace_Prefix
|| __DATA_CONST.__const _FMTagID_Valence_Prefix
|| __DATA_CONST.__const _FMTagID_VisualTempo_Prefix
|| __DATA_CONST.__const _FMTimedMetadataIdentifierBar
|| __DATA_CONST.__const _FMTimedMetadataIdentifierBarKeyBarIndex
|| __DATA_CONST.__const _FMTimedMetadataIdentifierBarKeyBeatsPerBar
|| __DATA_CONST.__const _FMTimedMetadataIdentifierBeat
|| __DATA_CONST.__const _FMTimedMetadataIdentifierBeatKeyBarIndex
|| __DATA_CONST.__const _FMTimedMetadataIdentifierBeatKeyBeatIndex
|| __DATA_CONST.__const _FMTimedMetadataIdentifierLoopPoints
|| __DATA_CONST.__const _FMTimedMetadataIdentifierOnset
|| __DATA_CONST.__const _FMTimedMetadataIdentifierSection
|| __DATA_CONST.__const _FMTimedMetadataIdentifierSectionKeyBodyNumber
|| __DATA_CONST.__const _FMTimedMetadataIdentifierSectionKeyFadeToBlackTime
|| __DATA_CONST.__const _FMTimedMetadataIdentifierSectionKeyOutroEarlyFade
|| __DATA_CONST.__const _FMTimedMetadataIdentifierSectionKeyOutroStinger
|| __DATA_CONST.__const _FMTimedMetadataIdentifierSectionKeyType
|| __DATA_CONST.__const _FMTimedMetadataIdentifierSegment
|| __DATA_CONST.__const _FMTimedMetadataIdentifierSegmentKeyBarsUsed
|| __DATA_CONST.__const _FMTimedMetadataIdentifierSegmentKeyBodyLetter
|| __DATA_CONST.__const _FMTimedMetadataIdentifierSegmentKeyBodyNumber
|| __DATA_CONST.__const _FMTimedMetadataIdentifierSegmentKeyEnergy
|| __DATA_CONST.__const _FMTimedMetadataIdentifierSegmentKeyFadeToBlackTime
|| __DATA_CONST.__const _FMTimedMetadataIdentifierSegmentKeyLoudness
|| __DATA_CONST.__const _FMTimedMetadataIdentifierSegmentKeyOutroEarlyFade
|| __DATA_CONST.__const _FMTimedMetadataIdentifierSegmentKeyOutroStinger
|| __DATA_CONST.__const _FMTimedMetadataIdentifierSegmentKeyPeakValue
|| __DATA_CONST.__const _FMTimedMetadataIdentifierSegmentKeyPriority
|| __DATA_CONST.__const _FMTimedMetadataIdentifierSegmentKeyType
__ AVFoundation: _AVMediaTypeAudio
__ AVFoundation: _AVURLAssetPreferPreciseDurationAndTimingKey
__ AVFoundation: _OBJC_CLASS_$_AVMutableAudioMix
__ AVFoundation: _OBJC_CLASS_$_AVMutableAudioMixInputParameters
__ AVFoundation: _OBJC_CLASS_$_AVMutableComposition
__ AVFoundation: _OBJC_CLASS_$_AVURLAsset
__ AudioToolbox: _AudioFileClose
__ AudioToolbox: _AudioFileGetProperty
__ AudioToolbox: _AudioFileGetPropertyInfo
__ AudioToolbox: _AudioFileOpenURL
__ AudioToolbox: _ExtAudioFileDispose
__ AudioToolbox: _ExtAudioFileGetProperty
__ AudioToolbox: _ExtAudioFileOpenURL
__ CoreFoundation: _CFRelease
__ CoreFoundation: _NSURLIsDirectoryKey
__ CoreFoundation: _NSURLNameKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAllocatorDefault
__ CoreMedia: _CMTimeAdd
__ CoreMedia: _CMTimeCompare
__ CoreMedia: _CMTimeConvertScale
__ CoreMedia: _CMTimeGetSeconds
__ CoreMedia: _CMTimeMake
__ CoreMedia: _CMTimeMakeWithSeconds
__ CoreMedia: _CMTimeMultiply
__ CoreMedia: _CMTimeMultiplyByFloat64
__ CoreMedia: _CMTimeRangeContainsTime
__ CoreMedia: _CMTimeRangeMake
__ CoreMedia: _CMTimeSubtract
__ CoreMedia: _kCMTimeInvalid
__ CoreMedia: _kCMTimeZero
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSStringFromClass
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSCompoundPredicate
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSCountedSet
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSScanner
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSValue
__ MobileAsset: _OBJC_CLASS_$_MAAsset
__ MobileAsset: _OBJC_CLASS_$_MAAssetQuery
__ MobileAsset: _OBJC_CLASS_$_MADownloadOptions
__ SystemConfiguration: _SCNetworkReachabilityCreateWithAddress
__ SystemConfiguration: _SCNetworkReachabilityCreateWithName
__ SystemConfiguration: _SCNetworkReachabilityGetFlags
__ SystemConfiguration: _SCNetworkReachabilitySetCallback
__ SystemConfiguration: _SCNetworkReachabilitySetDispatchQueue
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___udivmodti4
__ libSystem.B.dylib: ___udivti3
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _abort
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_once_f
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _fclose
__ libSystem.B.dylib: _fopen
__ libSystem.B.dylib: _fread
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _fseek
__ libSystem.B.dylib: _ftell
__ libSystem.B.dylib: _logbl
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _pow
__ libSystem.B.dylib: _pthread_getspecific
__ libSystem.B.dylib: _pthread_key_create
__ libSystem.B.dylib: _pthread_mutex_lock
__ libSystem.B.dylib: _pthread_mutex_unlock
__ libSystem.B.dylib: _pthread_once
__ libSystem.B.dylib: _pthread_setspecific
__ libSystem.B.dylib: _realloc
__ libSystem.B.dylib: _rewind
__ libSystem.B.dylib: _scalbnl
__ libSystem.B.dylib: _snprintf
__ libSystem.B.dylib: _sscanf
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _vsnprintf
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyStruct
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
FlexSongBackend : NSObject <FlexSongProtocol>
 @property  NSString *uid
 @property  NSString *audioEncoderPresetName
 @property  NSString *songName
 @property  NSString *artistName
 @property  NSSet *tagIDs
 @property  NSSet *keywords
 @property  NSArray *assets
 @property  NSString *songFormat
 @property  long long sampleRate
 @property  BOOL hidden
 @property  BOOL recalled
 @property  long long metadataVersion
 @property  NSDictionary *customOptions

  // instance methods
  -[FlexSongBackend setKeywords:]
  -[FlexSongBackend sampleRate]
  -[FlexSongBackend uid]
  -[FlexSongBackend artistName]
  -[FlexSongBackend hidden]
  -[FlexSongBackend updateAssets:]
  -[FlexSongBackend metadataVersion]
  -[FlexSongBackend tagIDs]
  -[FlexSongBackend .cxx_destruct]
  -[FlexSongBackend assets]
  -[FlexSongBackend isLoaded]
  -[FlexSongBackend keywords]
  -[FlexSongBackend setTagIDs:]
  -[FlexSongBackend canPlay]
  -[FlexSongBackend setAssets:]
  -[FlexSongBackend songName]
  -[FlexSongBackend setSampleRate:]
  -[FlexSongBackend setUid:]
  -[FlexSongBackend minimumDuration]
  -[FlexSongBackend setHidden:]
  -[FlexSongBackend setArtistName:]
  -[FlexSongBackend idealDurations]
  -[FlexSongBackend naturalDuration]
  -[FlexSongBackend assetWithID:]
  -[FlexSongBackend setMetadataVersion:]
  -[FlexSongBackend customOptions]
  -[FlexSongBackend audioEncoderPresetName]
  -[FlexSongBackend songFormat]
  -[FlexSongBackend recalled]
  -[FlexSongBackend setSongName:]
  -[FlexSongBackend existingAssetWithID:]
  -[FlexSongBackend updateSongArtist:title:tags:keywords:hidden:recalled:metadataVersion:]
  -[FlexSongBackend initWithUID:songName:artistName:tagIDs:keywords:hidden:recalled:audioEncoderPresetName:metadataVersion:songFormat:sampleRate:customOptions:]
  -[FlexSongBackend updateSampleRate:]
  -[FlexSongBackend verifyRendition:forDuration:failureReason:]
  -[FlexSongBackend renditionForDuration:withOptions:testingContext:]
  -[FlexSongBackend timedMetadataItemsWithIdentifier:forRendition:]
  -[FlexSongBackend _verifyClips:inRendition:failureReason:]
  -[FlexSongBackend _verifyKeyFrames:failureReason:]
  -[FlexSongBackend setAudioEncoderPresetName:]
  -[FlexSongBackend setSongFormat:]
  -[FlexSongBackend setRecalled:]
  -[FlexSongBackend setCustomOptions:]


FlexTransition : NSObject <NSCopying, NSDictionaryCoding>
 @property  BOOL prevented
 @property  long long fadeOut
 @property  long long fadeIn
 @property  NSString *transitionSegmentName
 @property  BOOL useNextSegmentForFadeOut

  // class methods
  +[FlexTransition validFadeLengthForLength:]

  // instance methods
  -[FlexTransition .cxx_destruct]
  -[FlexTransition init]
  -[FlexTransition initWithDictionary:]
  -[FlexTransition copyWithZone:]
  -[FlexTransition fadeIn]
  -[FlexTransition fadeOut]
  -[FlexTransition encodeAsDictionary]
  -[FlexTransition isDefaultTransition]
  -[FlexTransition prevented]
  -[FlexTransition transitionSegmentName]
  -[FlexTransition useNextSegmentForFadeOut]
  -[FlexTransition initWithTransitionSegmentNamed:prevented:fadeOut:fadeIn:useNextSegmentForFadeOut:]


FMFetchOptions : NSObject
 @property  NSPredicate *predicate
 @property  NSArray *sortDescriptors

  // instance methods
  -[FMFetchOptions setPredicate:]
  -[FMFetchOptions predicate]
  -[FMFetchOptions .cxx_destruct]
  -[FMFetchOptions setSortDescriptors:]
  -[FMFetchOptions init]
  -[FMFetchOptions sortDescriptors]


FlexSegmentAssemblyInfo : NSObject
 @property  FlexSegment *segment
 @property  long long barsUsed
 @property  NSURL *url
 @property  long long offset
 @property  long long duration

  // instance methods
  -[FlexSegmentAssemblyInfo segment]
  -[FlexSegmentAssemblyInfo url]
  -[FlexSegmentAssemblyInfo offset]
  -[FlexSegmentAssemblyInfo .cxx_destruct]
  -[FlexSegmentAssemblyInfo setDuration:]
  -[FlexSegmentAssemblyInfo setUrl:]
  -[FlexSegmentAssemblyInfo setSegment:]
  -[FlexSegmentAssemblyInfo setOffset:]
  -[FlexSegmentAssemblyInfo copyWithZone:]
  -[FlexSegmentAssemblyInfo duration]
  -[FlexSegmentAssemblyInfo barsUsed]
  -[FlexSegmentAssemblyInfo setBarsUsed:]


FlexReachability : NSObject
 @property  NSObject<OS_dispatch_queue> *reachabilityQueue

  // class methods
  +[FlexReachability reachabilityWithHostName:]
  +[FlexReachability reachabilityForLocalWiFi]
  +[FlexReachability reachabilityForInternetConnection]
  +[FlexReachability reachabilityWithAddress:]

  // instance methods
  -[FlexReachability reachabilityQueue]
  -[FlexReachability networkStatusForFlags:]
  -[FlexReachability .cxx_destruct]
  -[FlexReachability init]
  -[FlexReachability currentReachabilityStatus]
  -[FlexReachability localWiFiStatusForFlags:]
  -[FlexReachability connectionRequired]
  -[FlexReachability dealloc]
  -[FlexReachability stopNotifier]
  -[FlexReachability startNotifier]
  -[FlexReachability setReachabilityQueue:]
  -[FlexReachability interventionRequired]


FlexCloudManager : NSObject
 @property  unsigned long retryCount
 @property  FMSongLibrary *library
 @property  NSMutableArray *cloudManagedSongs
 @property  NSMutableDictionary *cloudManagedSongsByUID

  // class methods
  +[FlexCloudManager createCloudManager:withLibrary:options:]

  // instance methods
  -[FlexCloudManager initWithLibrary:]
  -[FlexCloudManager library]
  -[FlexCloudManager .cxx_destruct]
  -[FlexCloudManager setRetryCount:]
  -[FlexCloudManager assetStatus:]
  -[FlexCloudManager retryCount]
  -[FlexCloudManager retryFetchAllSongs]
  -[FlexCloudManager fetchAllSongsWithCompletion:]
  -[FlexCloudManager cloudManagedSongsByUID]
  -[FlexCloudManager cloudManagedSongs]
  -[FlexCloudManager _registerSongs:]
  -[FlexCloudManager cancelDownloadOfAsset:]
  -[FlexCloudManager loadCachedSongs]
  -[FlexCloudManager loadAssetWithID:forSongID:]
  -[FlexCloudManager requestDownloadOfAsset:withOptions:]
  -[FlexCloudManager cancelDownloadOfAllAssets]
  -[FlexCloudManager requestPurgeOfAsset:]
  -[FlexCloudManager _purgeAndReturnReplacementFor:]
  -[FlexCloudManager requestDownloadOfAsset:]


FlexSongMetaDataReader_V2 : NSObject
  // class methods
  +[FlexSongMetaDataReader_V2 _pathToMetadata:]
  +[FlexSongMetaDataReader_V2 isSongAtPath:]
  +[FlexSongMetaDataReader_V2 songAtPath:]


FlexSongMetadataReaderUtils : NSObject
  // class methods
  +[FlexSongMetadataReaderUtils addAnalysisMetadataToDictionary:pathToRoot:]


FMKeyFrame : NSObject
 @property  long long sampleTime
 @property  float value

  // instance methods
  -[FMKeyFrame sampleTime]
  -[FMKeyFrame setValue:]
  -[FMKeyFrame value]
  -[FMKeyFrame initWithValue:atTime:]
  -[FMKeyFrame setSampleTime:]


FMDownloadOptions : NSObject
 @property  BOOL allowsCellular
 @property  unsigned long downloadPriority

  // instance methods
  -[FMDownloadOptions downloadPriority]
  -[FMDownloadOptions allowsCellular]
  -[FMDownloadOptions setAllowsCellular:]
  -[FMDownloadOptions setDownloadPriority:]
  -[FMDownloadOptions init]
  -[FMDownloadOptions _configureDefaults]


FMSongRendition : NSObject
 @property  NSObject<FlexSongProtocol> *song
 @property  FMTrack *trackA
 @property  FMTrack *trackB
 @property  long long duration
 @property  long long durationOfSilence
 @property  long long durationOfMusic
 @property  NSDictionary *options

  // class methods
  +[FMSongRendition coalesceMixParamsA:withMixParamsB:]

  // instance methods
  -[FMSongRendition song]
  -[FMSongRendition options]
  -[FMSongRendition .cxx_destruct]
  -[FMSongRendition trackA]
  -[FMSongRendition trackB]
  -[FMSongRendition setDuration:]
  -[FMSongRendition setSong:]
  -[FMSongRendition duration]
  -[FMSongRendition _maxPeakAndLoudness:missingPeakValueCount:missingLoudnessCount:]
  -[FMSongRendition avCompositionWithAudioMix:includeShortenedOutroFadeOut:]
  -[FMSongRendition timedMetadataItemsWithIdentifier:]
  -[FMSongRendition _buildOutroFadeoutMixParams]
  -[FMSongRendition initWithSong:andOptions:]
  -[FMSongRendition setTrackA:]
  -[FMSongRendition setTrackB:]
  -[FMSongRendition setDurationOfSilence:]
  -[FMSongRendition setDurationOfMusic:]
  -[FMSongRendition durationOfMusic]
  -[FMSongRendition durationOfSilence]


FMSongLibrary : NSObject
 @property  NSMutableArray *songs
 @property  NSDictionary *options
 @property  NSMutableDictionary *songsByUID
 @property  NSMutableSet *assetsInFlight
 @property  FlexCloudManager *cloudManager
 @property  FlexReachability *flexReachability
 @property  long long networkStatus
 @property  BOOL contactedCloud
 @property  NSArray *bundledSongs
 @property  BOOL networkingIsDisabled

  // class methods
  +[FMSongLibrary sharedLibraryWithOptions:]

  // instance methods
  -[FMSongLibrary songs]
  -[FMSongLibrary options]
  -[FMSongLibrary .cxx_destruct]
  -[FMSongLibrary initWithOptions:]
  -[FMSongLibrary networkingIsDisabled]
  -[FMSongLibrary setNetworkStatus:]
  -[FMSongLibrary _setupReachability]
  -[FMSongLibrary dealloc]
  -[FMSongLibrary setSongs:]
  -[FMSongLibrary networkStatus]
  -[FMSongLibrary purgeAllLocalCachedAssetsWithIDs:]
  -[FMSongLibrary fetchSongWithUID:]
  -[FMSongLibrary fetchSongsWithOptions:]
  -[FMSongLibrary requestDownloadOfAllAssetsWithIDs:]
  -[FMSongLibrary requestDownloadOfAllAssetsWithIDs:withOptions:]
  -[FMSongLibrary networkStatusChanged:]
  -[FMSongLibrary contactedCloud]
  -[FMSongLibrary _createCloudManager]
  -[FMSongLibrary _loadBundledSongs]
  -[FMSongLibrary _loadCachedSongs]
  -[FMSongLibrary _updateFromCloud]
  -[FMSongLibrary songsByUID]
  -[FMSongLibrary setBundledSongs:]
  -[FMSongLibrary _notifySongsChanged:]
  -[FMSongLibrary _downloadProgressChanged:]
  -[FMSongLibrary assetsInFlight]
  -[FMSongLibrary _notifySongDownloadInProgressChanged:]
  -[FMSongLibrary setFlexReachability:]
  -[FMSongLibrary flexReachability]
  -[FMSongLibrary setCloudManager:]
  -[FMSongLibrary setContactedCloud:]
  -[FMSongLibrary registerSongBundleAtPath:]
  -[FMSongLibrary supportForCloud]
  -[FMSongLibrary setSongsByUID:]
  -[FMSongLibrary setAssetsInFlight:]
  -[FMSongLibrary cloudManager]
  -[FMSongLibrary unregisterSongWithID:]
  -[FMSongLibrary _registerSongs:]
  -[FMSongLibrary bundledSongs]
  -[FMSongLibrary cancelDownloadOfAllAssets]


FlexMLSong : FlexSongBackend
 @property  FlexMLSummaryManager *summaryManager
 @property  NSString *rootPath
 @property  NSString *metadataPath
 @property  NSString *audioFileExtension
 @property  {?=qiIq} cachedNaturalDuration
 @property  NSURL *audioFileURL

  // class methods
  +[FlexMLSong loadSongAtPath:]

  // instance methods
  -[FlexMLSong updateAssets:]
  -[FlexMLSong .cxx_destruct]
  -[FlexMLSong rootPath]
  -[FlexMLSong isLoaded]
  -[FlexMLSong canPlay]
  -[FlexMLSong initWithFileAtPath:]
  -[FlexMLSong audioFileURL]
  -[FlexMLSong metadataPath]
  -[FlexMLSong minimumDuration]
  -[FlexMLSong idealDurations]
  -[FlexMLSong naturalDuration]
  -[FlexMLSong _setupInitialAssets:]
  -[FlexMLSong audioFileExtension]
  -[FlexMLSong summaryManager]
  -[FlexMLSong verifyRendition:forDuration:failureReason:]
  -[FlexMLSong renditionForDuration:withOptions:testingContext:]
  -[FlexMLSong timedMetadataItemsWithIdentifier:forRendition:]
  -[FlexMLSong setSummaryManager:]
  -[FlexMLSong setAudioFileExtension:]
  -[FlexMLSong cachedNaturalDuration]
  -[FlexMLSong setCachedNaturalDuration:]


FlexMLSummaryManager : NSObject
 @property  NSArray *allFileNames
 @property  NSArray *allDurations
 @property  NSString *rootPath
 @property  NSString *metadataPath
 @property  int targetTimeScale

  // instance methods
  -[FlexMLSummaryManager .cxx_destruct]
  -[FlexMLSummaryManager rootPath]
  -[FlexMLSummaryManager metadataPath]
  -[FlexMLSummaryManager initWithSummaryMapping:bundlePath:metadataPath:targetTimeScale:]
  -[FlexMLSummaryManager summaryForDuration:]
  -[FlexMLSummaryManager allSummaryDurations]
  -[FlexMLSummaryManager allDurations]
  -[FlexMLSummaryManager averageGranularityBetweenSummaries]
  -[FlexMLSummaryManager _summaryForDuration:]
  -[FlexMLSummaryManager targetTimeScale]
  -[FlexMLSummaryManager allFileNames]


FlexSongAssetProvider_V1 : NSObject <FlexSongAssetProviderProtocol>
 @property  NSString *rootFolderPath
 @property  NSString *audioFileExtension

  // instance methods
  -[FlexSongAssetProvider_V1 .cxx_destruct]
  -[FlexSongAssetProvider_V1 audioFileExtension]
  -[FlexSongAssetProvider_V1 setAudioFileExtension:]
  -[FlexSongAssetProvider_V1 rootFolderPath]
  -[FlexSongAssetProvider_V1 urlToRoot]
  -[FlexSongAssetProvider_V1 urlToAudioContainerForSegmentType:]
  -[FlexSongAssetProvider_V1 urlToAudioForSegment:]
  -[FlexSongAssetProvider_V1 initWithFolderPath:]
  -[FlexSongAssetProvider_V1 setRootFolderPath:]


FlexSongAssetProvider_V2 : NSObject <FlexSongAssetProviderProtocol>
 @property  NSString *rootFolderPath
 @property  NSString *audioFileExtension

  // instance methods
  -[FlexSongAssetProvider_V2 .cxx_destruct]
  -[FlexSongAssetProvider_V2 audioFileExtension]
  -[FlexSongAssetProvider_V2 setAudioFileExtension:]
  -[FlexSongAssetProvider_V2 rootFolderPath]
  -[FlexSongAssetProvider_V2 urlToRoot]
  -[FlexSongAssetProvider_V2 urlToAudioContainerForSegmentType:]
  -[FlexSongAssetProvider_V2 urlToAudioForSegment:]
  -[FlexSongAssetProvider_V2 setRootFolderPath:]
  -[FlexSongAssetProvider_V2 _folderNameForSegmentType:]
  -[FlexSongAssetProvider_V2 initWithFolderPath:audioFileExtension:]
  -[FlexSongAssetProvider_V2 assetsAreLocal]


FMSongAsset : NSObject
 @property  long long contentVersion
 @property  long long compatibilityVersion
 @property  NSString *assetID
 @property  NSString *songUID
 @property  unsigned long assetStatus
 @property  NSURL *localURL

  // instance methods
  -[FMSongAsset downloadProgress]
  -[FMSongAsset cancelDownload]
  -[FMSongAsset .cxx_destruct]
  -[FMSongAsset localURL]
  -[FMSongAsset compatibilityVersion]
  -[FMSongAsset contentVersion]
  -[FMSongAsset songUID]
  -[FMSongAsset assetID]
  -[FMSongAsset localURLExists]
  -[FMSongAsset contentUpdateAvaliable]
  -[FMSongAsset requestDownload]
  -[FMSongAsset assetStatus]
  -[FMSongAsset setSongUID:]
  -[FMSongAsset isCloudBacked]
  -[FMSongAsset requestDownloadWithOptions:]
  -[FMSongAsset purgeLocalCache]
  -[FMSongAsset contentVersionForAssetLocation:]
  -[FMSongAsset compatibilityVersionForAssetLocation:]
  -[FMSongAsset updateDownloadProgress:]
  -[FMSongAsset initWithAssetID:assetStatus:localURL:contentVersion:compatibilityVersion:]


FMSong : NSObject
 @property  NSObject<FlexSongProtocol> *backend

  // class methods
  +[FMSong availableTagIDs]
  +[FMSong localizedNameForTagWithID:]
  +[FMSong loadSongBundleAtPath:]
  +[FMSong loadSongsAndArtworkInFolderAtPath:]
  +[FMSong hasValidTagIDs:]
  +[FMSong versionFromArtworkFilename:]

  // instance methods
  -[FMSong _impl]
  -[FMSong sampleRate]
  -[FMSong uid]
  -[FMSong artistName]
  -[FMSong hidden]
  -[FMSong updateAssets:]
  -[FMSong metadataVersion]
  -[FMSong tagIDs]
  -[FMSong .cxx_destruct]
  -[FMSong initWithBackend:]
  -[FMSong isLoaded]
  -[FMSong keywords]
  -[FMSong canPlay]
  -[FMSong backend]
  -[FMSong songName]
  -[FMSong minimumDuration]
  -[FMSong idealDurations]
  -[FMSong renditionForDuration:withOptions:]
  -[FMSong naturalDuration]
  -[FMSong assetWithID:]
  -[FMSong customOptions]
  -[FMSong audioEncoderPresetName]
  -[FMSong songFormat]
  -[FMSong recalled]
  -[FMSong requestDownloadOfAllAssetsWithIDs:]
  -[FMSong requestDownloadOfAllAssetsWithIDs:withOptions:]
  -[FMSong cancelDownloadOfAllAssetsWithIDs:]
  -[FMSong _notifySongAssetsChanged]
  -[FMSong _loadFlexSong]
  -[FMSong _loadIfNeeded]
  -[FMSong existingAssetWithID:]
  -[FMSong updateBackend:]
  -[FMSong updateAsset:downloadProgress:]
  -[FMSong renditionForDuration:withOptions:testingContext:]


FlexCloudFetchOptions : NSObject
 @property  NSPredicate *predicate
 @property  NSArray *sortDescriptors
 @property  BOOL localOnly

  // instance methods
  -[FlexCloudFetchOptions setLocalOnly:]
  -[FlexCloudFetchOptions setPredicate:]
  -[FlexCloudFetchOptions predicate]
  -[FlexCloudFetchOptions localOnly]
  -[FlexCloudFetchOptions .cxx_destruct]
  -[FlexCloudFetchOptions setSortDescriptors:]
  -[FlexCloudFetchOptions sortDescriptors]


FMTrack : NSObject
 @property  NSArray *clips
 @property  FMMixParameters *mixParameters

  // instance methods
  -[FMTrack clips]
  -[FMTrack .cxx_destruct]
  -[FMTrack setClips:]
  -[FMTrack mixParameters]
  -[FMTrack initWithClips:mixParameters:]
  -[FMTrack setMixParameters:]


FlexMLSummary : NSObject
 @property  NSArray *segments
 @property  NSDictionary *videoCues
 @property  {?=qiIq} duration
 @property  double lkfsValue
 @property  float peakValue
 @property  NSArray *allBeats
 @property  NSArray *allBars
 @property  NSArray *loopPoints

  // class methods
  +[FlexMLSummary summaryFromSummaries:targetTimeScale:]

  // instance methods
  -[FlexMLSummary segments]
  -[FlexMLSummary .cxx_destruct]
  -[FlexMLSummary setDuration:]
  -[FlexMLSummary setSegments:]
  -[FlexMLSummary duration]
  -[FlexMLSummary allBars]
  -[FlexMLSummary setPeakValue:]
  -[FlexMLSummary peakValue]
  -[FlexMLSummary initWithDictionary:targetTimeScale:]
  -[FlexMLSummary setVideoCues:]
  -[FlexMLSummary setLkfsValue:]
  -[FlexMLSummary videoCues]
  -[FlexMLSummary lkfsValue]
  -[FlexMLSummary loopPoints]
  -[FlexMLSummary allBeats]


FlexMLSegment : NSObject
 @property  {?=qiIq} duration
 @property  {?=qiIq} trackTime
 @property  {?=qiIq} summaryTime
 @property  NSArray *gainFunction

  // instance methods
  -[FlexMLSegment .cxx_destruct]
  -[FlexMLSegment duration]
  -[FlexMLSegment trackTime]
  -[FlexMLSegment summaryTime]
  -[FlexMLSegment initWithDuration:trackTime:summaryTime:gainFunction:]
  -[FlexMLSegment gainFunction]


FlexMLGainValue : NSObject
 @property  float gain
 @property  {?=qiIq} segmentTime

  // instance methods
  -[FlexMLGainValue gain]
  -[FlexMLGainValue compare:]
  -[FlexMLGainValue initWithGain:segmentTime:]
  -[FlexMLGainValue segmentTime]


FlexMLSongRendition : FMSongRendition
 @property  FlexMLSummary *summary

  // instance methods
  -[FlexMLSongRendition setSummary:]
  -[FlexMLSongRendition summary]
  -[FlexMLSongRendition .cxx_destruct]
  -[FlexMLSongRendition _buildOutroFadeoutMixParams]
  -[FlexMLSongRendition initWithSong:options:andSummary:forDuration:]
  -[FlexMLSongRendition _calculateDuration:]
  -[FlexMLSongRendition _buildTracks]


FlexMarker : NSObject <NSDictionaryCoding>
 @property  NSString *name
 @property  long long markerID
 @property  long long position
 @property  unsigned long type
 @property  long long number

  // instance methods
  -[FlexMarker number]
  -[FlexMarker name]
  -[FlexMarker .cxx_destruct]
  -[FlexMarker init]
  -[FlexMarker initWithDictionary:]
  -[FlexMarker type]
  -[FlexMarker position]
  -[FlexMarker encodeAsDictionary]
  -[FlexMarker _decodeTypeAndBarsFromName]
  -[FlexMarker markerID]
  -[FlexMarker initWithName:markerID:position:]


FlexMobileAssetV2SongAsset : FlexCloudSongAsset
 @property  MAAsset *mobileAsset

  // instance methods
  -[FlexMobileAssetV2SongAsset .cxx_destruct]
  -[FlexMobileAssetV2SongAsset mobileAsset]
  -[FlexMobileAssetV2SongAsset contentUpdateAvaliable]
  -[FlexMobileAssetV2SongAsset assetStatus]
  -[FlexMobileAssetV2SongAsset contentVersionForAssetLocation:]
  -[FlexMobileAssetV2SongAsset compatibilityVersionForAssetLocation:]
  -[FlexMobileAssetV2SongAsset _metadataForAssetWithNewestContentVersion]
  -[FlexMobileAssetV2SongAsset initWithAssetID:asset:localURL:cloudManager:contentVersion:compatibilityVersion:]


FlexMobileAssetManagerV2 : FlexCloudManager
 @property  NSObject<OS_dispatch_queue> *purgeQueue
 @property  NSObject<OS_dispatch_queue> *triggerDownloadAndPurgeQueue
 @property  BOOL includeArtworkInQueries
 @property  BOOL XMLPresent

  // class methods
  +[FlexMobileAssetManagerV2 assetWithNewestContentVersionInAssets:preferInstalled:]
  +[FlexMobileAssetManagerV2 _assetURLForMobileAsset:]
  +[FlexMobileAssetManagerV2 compatibilityFilterPredicate]

  // instance methods
  -[FlexMobileAssetManagerV2 .cxx_destruct]
  -[FlexMobileAssetManagerV2 assetStatus:]
  -[FlexMobileAssetManagerV2 mobileAssetsForAssetPropertyType:songUID:]
  -[FlexMobileAssetManagerV2 _mobileAssetIsPurging:]
  -[FlexMobileAssetManagerV2 _mobileAssetIsDownloading:]
  -[FlexMobileAssetManagerV2 _registerAndHandleSystemMobileAssetNotifications]
  -[FlexMobileAssetManagerV2 fetchAllSongsWithCompletion:]
  -[FlexMobileAssetManagerV2 _requeryForMobileAssetTypes:forUUIDs:]
  -[FlexMobileAssetManagerV2 setXMLPresent:]
  -[FlexMobileAssetManagerV2 _mobileAssetQueryResultStringValue:]
  -[FlexMobileAssetManagerV2 _metadataMappingForUUIDSet:]
  -[FlexMobileAssetManagerV2 _updateMetadataOnExistingSong:usingAsset:metadataAsset:]
  -[FlexMobileAssetManagerV2 _requeryForMobileAssetTypes:]
  -[FlexMobileAssetManagerV2 mobileAssetsForAssetPropertyType:]
  -[FlexMobileAssetManagerV2 _newestContentSetFromAssets:metadataMapping:]
  -[FlexMobileAssetManagerV2 filterByClientIDForAssets:forMetadataMapping:]
  -[FlexMobileAssetManagerV2 _processResults:metadataMapping:]
  -[FlexMobileAssetManagerV2 _mobileAssetDownloadOptionsForClientOptions:]
  -[FlexMobileAssetManagerV2 XMLPresent]
  -[FlexMobileAssetManagerV2 _mobileAssetDownloadResultStringValue:]
  -[FlexMobileAssetManagerV2 _responseForDownloadResult:]
  -[FlexMobileAssetManagerV2 _updateExistingSong:usingAsset:metadataAsset:forceUpdate:]
  -[FlexMobileAssetManagerV2 _assetIDForMobileAsset:]
  -[FlexMobileAssetManagerV2 _existingSongForUID:]
  -[FlexMobileAssetManagerV2 _updateExistingSong:usingAsset:metadataAsset:]
  -[FlexMobileAssetManagerV2 _loadBundledArtworkForSongID:]
  -[FlexMobileAssetManagerV2 _runNextAsyncAssetDownloadAndPurge]
  -[FlexMobileAssetManagerV2 _runAsyncAssetDownloadForMobileAsset:]
  -[FlexMobileAssetManagerV2 _purgeAsset:]
  -[FlexMobileAssetManagerV2 _dispatchNextAsyncAssetDownloadAndPurge]
  -[FlexMobileAssetManagerV2 _mobileAssetCancelDownloadResultStringValue:]
  -[FlexMobileAssetManagerV2 cancelDownloadOfAsset:]
  -[FlexMobileAssetManagerV2 _loadBundledSongForSongID:]
  -[FlexMobileAssetManagerV2 _mobileAssetPurgeResultStringValue:]
  -[FlexMobileAssetManagerV2 initWithLibrary:options:]
  -[FlexMobileAssetManagerV2 loadCachedSongs]
  -[FlexMobileAssetManagerV2 loadAssetWithID:forSongID:]
  -[FlexMobileAssetManagerV2 requestDownloadOfAsset:withOptions:]
  -[FlexMobileAssetManagerV2 cancelDownloadOfAllAssets]
  -[FlexMobileAssetManagerV2 requestPurgeOfAsset:]
  -[FlexMobileAssetManagerV2 purgeQueue]
  -[FlexMobileAssetManagerV2 setPurgeQueue:]
  -[FlexMobileAssetManagerV2 triggerDownloadAndPurgeQueue]
  -[FlexMobileAssetManagerV2 setTriggerDownloadAndPurgeQueue:]
  -[FlexMobileAssetManagerV2 includeArtworkInQueries]
  -[FlexMobileAssetManagerV2 setIncludeArtworkInQueries:]


FlexSongProxy : FlexSongBackend
  // instance methods
  -[FlexSongProxy canPlay]
  -[FlexSongProxy initWithUID:songName:artistName:tagIDs:keywords:hidden:recalled:assets:audioEncoderPresetName:metadataVersion:songFormat:]


FlexSong : FlexSongBackend
 @property  NSString *audioFileExtension
 @property  NSObject<FlexSongAssetProviderProtocol> *assetProvider
 @property  NSArray *mainSegments
 @property  NSArray *crossFadeSegments
 @property  NSArray *introSegments
 @property  NSArray *bodySegments
 @property  NSArray *outroSegments
 @property  NSArray *transSegments

  // class methods
  +[FlexSong loadSongInFolderWithPath:]
  +[FlexSong numberToString:]
  +[FlexSong _findMaxLengthInSamplesToReserveForOutroSegment:withOptions:]
  +[FlexSong _findEarlyFadeStartOffsetInSamplesForOutroSegment:withOptions:]
  +[FlexSong _findMinLengthInSamplesForEarlyFadeOutForOutroSegment:withOptions:]
  +[FlexSong _durationInSamplesToReserveForOutroSegment:withOptions:]
  +[FlexSong outroInfoForClipPlaylist:]
  +[FlexSong _transitionIsPossibleFromSegment:toSegment:forBodyClipPlaylist:]

  // instance methods
  -[FlexSong .cxx_destruct]
  -[FlexSong isLoaded]
  -[FlexSong canPlay]
  -[FlexSong analysisData]
  -[FlexSong minimumDuration]
  -[FlexSong idealDurations]
  -[FlexSong naturalDuration]
  -[FlexSong assetProvider]
  -[FlexSong encodeAsDictionary]
  -[FlexSong _setupInitialAssets:]
  -[FlexSong audioFileExtension]
  -[FlexSong verifyRendition:forDuration:failureReason:]
  -[FlexSong renditionForDuration:withOptions:testingContext:]
  -[FlexSong timedMetadataItemsWithIdentifier:forRendition:]
  -[FlexSong initWithDictionary:assets:]
  -[FlexSong _cacheSegmentsByType]
  -[FlexSong initCommonWithUID:songName:artistName:tagIDs:keywords:hidden:sampleRate:mainSegments:crossFadeSegments:audioFileExtension:audioEncoderPresetName:metadataVersion:customOptions:]
  -[FlexSong _loadAnalysisData]
  -[FlexSong mainSegments]
  -[FlexSong crossFadeSegments]
  -[FlexSong _naturalDurationAssemblyList]
  -[FlexSong _sampleDurationOfClipPlaylist:]
  -[FlexSong _loadSegments]
  -[FlexSong bodySegments]
  -[FlexSong introSegments]
  -[FlexSong outroSegments]
  -[FlexSong transSegments]
  -[FlexSong _segmentsforType:]
  -[FlexSong _highestIndexForSegmentType:]
  -[FlexSong _segmentsForIndex:andType:]
  -[FlexSong _sortFlexSegmentsShortestToLongest:]
  -[FlexSong _shortestSegmentsForType:]
  -[FlexSong _transitionSegmentForSegmentInfo:toSegmentInfo:fromBarIndex:inSegmentList:]
  -[FlexSong _shortestSegmentForType:]
  -[FlexSong _longestSegmentForType:]
  -[FlexSong _updateTransitionBodySegmentsForAssemblyList:usingNewSegment:indexOfNewTransitionSegment:]
  -[FlexSong _addOutroSegmentsToAssemblyList:forDuration:allowTrim:testingContext:]
  -[FlexSong _addIntroSegmentsToAssemblyList:forDuration:testingContext:]
  -[FlexSong _addSegment:withDuration:toAssemblyList:timeRemaining:reusedSegment:indexofNewSegment:]
  -[FlexSong _sequenceBodySegmentList:forIndexes:]
  -[FlexSong _addSegment:withDuration:toAssemblyList:indexOfNewSegment:]
  -[FlexSong _removeSegmentInfo:fromAssemblyList:]
  -[FlexSong _removeUnpermittedTransitionsInAssemblyList:final:testingContext:removedIndexes:conflictList:]
  -[FlexSong _removeUnpermittedTransitionsInAssemblyList:final:testingContext:removedIndexes:]
  -[FlexSong _addBodySegmentsForAssemblyList:forDuration:unusedDuration:testingContext:timedOut:]
  -[FlexSong _minOutroDuration]
  -[FlexSong _maxOutroDuration]
  -[FlexSong _buildIntroAndOutroOnlySegmentAssemblyList:forDuration:testingContext:]
  -[FlexSong _clipPlaylistForDuration:withOptions:testingContext:]
  -[FlexSong _fullSongLoopedClipPlaylistForDuration:withOptions:testingContext:]
  -[FlexSong _buildSegmentAssemblyList:forDuration:withOptions:testingContext:]
  -[FlexSong _samplesForDuration:]
  -[FlexSong _validateAuthoringIssuesInRendition:failureReason:]
  -[FlexSong _validateStructureForRendition:failureReason:]
  -[FlexSong _validateTransitionsInRendition:failureReason:]
  -[FlexSong _verifyAssetsForSegment:withFailureReason:]
  -[FlexSong initWithUID:songName:artistName:tagIDs:keywords:hidden:sampleRate:mainSegments:crossFadeSegments:assets:audioFileExtension:audioEncoderPresetName:metadataVersion:customOptions:]
  -[FlexSong _longestSegmentsForType:]
  -[FlexSong _transitionSegmentForSegmentInfo:fromBarIndex:inSegmentList:]
  -[FlexSong _minBodySegmentDuration]
  -[FlexSong _maxIntroDuration]
  -[FlexSong _minIntroDuration]
  -[FlexSong _actualOutroDurationForAssemblyList:currentDuration:]
  -[FlexSong _minimumPermittedIntroAndOutroDuration]
  -[FlexSong _rebuildBodySegmentsInAssemblyList:forDuration:unusedDuration:testingContext:]
  -[FlexSong verifyAssetsWithFailureReason:]


FMMixParameters : NSObject
 @property  NSArray *volumeKeyFrames

  // instance methods
  -[FMMixParameters .cxx_destruct]
  -[FMMixParameters init]
  -[FMMixParameters appendVolumeKeyframe:]
  -[FMMixParameters volumeKeyFrames]
  -[FMMixParameters lastVolumeKeyFrame]
  -[FMMixParameters setVolumeKeyFrames:]
  -[FMMixParameters volumeValueAtTime:]
  -[FMMixParameters insertVolumeKeyframe:]
  -[FMMixParameters volumeKeyframesAreValid]
  -[FMMixParameters removeRedundantVolumeKeyFrames]


FlexTestingContext : NSObject
 @property  BOOL timedOut
 @property  BOOL usingPreventedIntro
 @property  BOOL usingPreventedOutro
 @property  long long maxPassesToFit
 @property  NSCountedSet *removedConflicts
 @property  long long maxSilenceDuration
 @property  {?=qiIq} maxSilenceDurationTime
 @property  long long maxSilenceUnderSetDuration
 @property  {?=qiIq} maxSilenceUnderSetDurationTime
 @property  double maxSilencePercentage
 @property  {?=qiIq} maxSilencePercentageTime
 @property  long long minOutroDuration
 @property  {?=qiIq} minOutroDurationTime
 @property  BOOL sequencingLongSong

  // instance methods
  -[FlexTestingContext .cxx_destruct]
  -[FlexTestingContext timedOut]
  -[FlexTestingContext init]
  -[FlexTestingContext setTimedOut:]
  -[FlexTestingContext removedConflicts]
  -[FlexTestingContext maxPassesToFit]
  -[FlexTestingContext setMaxPassesToFit:]
  -[FlexTestingContext setSequencingLongSong:]
  -[FlexTestingContext usingPreventedIntro]
  -[FlexTestingContext setUsingPreventedIntro:]
  -[FlexTestingContext usingPreventedOutro]
  -[FlexTestingContext setUsingPreventedOutro:]
  -[FlexTestingContext setRemovedConflicts:]
  -[FlexTestingContext maxSilenceDuration]
  -[FlexTestingContext setMaxSilenceDuration:]
  -[FlexTestingContext maxSilenceDurationTime]
  -[FlexTestingContext setMaxSilenceDurationTime:]
  -[FlexTestingContext maxSilenceUnderSetDuration]
  -[FlexTestingContext setMaxSilenceUnderSetDuration:]
  -[FlexTestingContext maxSilenceUnderSetDurationTime]
  -[FlexTestingContext setMaxSilenceUnderSetDurationTime:]
  -[FlexTestingContext maxSilencePercentage]
  -[FlexTestingContext setMaxSilencePercentage:]
  -[FlexTestingContext maxSilencePercentageTime]
  -[FlexTestingContext setMaxSilencePercentageTime:]
  -[FlexTestingContext minOutroDuration]
  -[FlexTestingContext setMinOutroDuration:]
  -[FlexTestingContext minOutroDurationTime]
  -[FlexTestingContext setMinOutroDurationTime:]
  -[FlexTestingContext sequencingLongSong]


FlexUtilities : NSObject
  // class methods
  +[FlexUtilities pathToBundledResourceWithName:]
  +[FlexUtilities decodeItemsInArray:asClass:]
  +[FlexUtilities decodeItemsInDict:asClass:]
  +[FlexUtilities encodeItemsInArray:]
  +[FlexUtilities encodeItemsInDict:]
  +[FlexUtilities _decodeItem:asClass:]
  +[FlexUtilities songsFoundInDeepScanOfDirectory:]


FlexCloudSongAsset : FMSongAsset
 @property  FlexCloudManager *cloudManager

  // instance methods
  -[FlexCloudSongAsset cancelDownload]
  -[FlexCloudSongAsset .cxx_destruct]
  -[FlexCloudSongAsset contentUpdateAvaliable]
  -[FlexCloudSongAsset requestDownload]
  -[FlexCloudSongAsset assetStatus]
  -[FlexCloudSongAsset isCloudBacked]
  -[FlexCloudSongAsset requestDownloadWithOptions:]
  -[FlexCloudSongAsset purgeLocalCache]
  -[FlexCloudSongAsset contentVersionForAssetLocation:]
  -[FlexCloudSongAsset compatibilityVersionForAssetLocation:]
  -[FlexCloudSongAsset initWithAssetID:assetStatus:localURL:cloudManager:contentVersion:compatibilityVersion:]
  -[FlexCloudSongAsset cloudManager]


FMTimedMetadataItem : NSObject <NSCopying>
 @property  NSString *identifier
 @property  NSString *name
 @property  {?={?=qiIq}{?=qiIq}} timeRange
 @property  NSDictionary *values

  // instance methods
  -[FMTimedMetadataItem values]
  -[FMTimedMetadataItem timeRange]
  -[FMTimedMetadataItem name]
  -[FMTimedMetadataItem .cxx_destruct]
  -[FMTimedMetadataItem identifier]
  -[FMTimedMetadataItem copyWithZone:]
  -[FMTimedMetadataItem initWithIdentifier:name:timeRange:values:]
  -[FMTimedMetadataItem adjustDurationTo:]


FlexSegmentAudioFileInfo : NSObject
 @property  long long sampleRate
 @property  long long sampleCount
 @property  long long bpm
 @property  long long bars
 @property  long long samplesPerBar
 @property  NSArray *customBarMarkers

  // instance methods
  -[FlexSegmentAudioFileInfo bpm]
  -[FlexSegmentAudioFileInfo bars]
  -[FlexSegmentAudioFileInfo sampleRate]
  -[FlexSegmentAudioFileInfo setSampleCount:]
  -[FlexSegmentAudioFileInfo sampleCount]
  -[FlexSegmentAudioFileInfo .cxx_destruct]
  -[FlexSegmentAudioFileInfo setBars:]
  -[FlexSegmentAudioFileInfo setSampleRate:]
  -[FlexSegmentAudioFileInfo setBpm:]
  -[FlexSegmentAudioFileInfo samplesPerBar]
  -[FlexSegmentAudioFileInfo setSamplesPerBar:]
  -[FlexSegmentAudioFileInfo customBarMarkers]
  -[FlexSegmentAudioFileInfo setCustomBarMarkers:]


FlexSegment : NSObject <NSCopying, NSDictionaryCoding>
 @property  NSString *namePrefix
 @property  NSString *nameStem
 @property  NSString *nameIndex
 @property  NSString *nameSuffix
 @property  NSString *name
 @property  long long priority
 @property  long long bars
 @property  long long beatsPerBar
 @property  long long samplesPerBar
 @property  NSArray *customBarMarkers
 @property  long long sampleRate
 @property  long long sampleCount
 @property  BOOL sliceable
 @property  NSDictionary *transitions
 @property  NSDictionary *markers
 @property  unsigned long type
 @property  unsigned long errors
 @property  NSDictionary *metadataValues

  // class methods
  +[FlexSegment readInfoFromAudioFileAtPath:]
  +[FlexSegment samplesForTimeInMsec:atSampleRate:]
  +[FlexSegment shortLabelForSegmentType:]
  +[FlexSegment longLabelForSegmentType:]
  +[FlexSegment canTransitionFromSegment:toSegment:fromBarIndex:checkIfPrevented:]
  +[FlexSegment segmentsWithType:inSegments:]
  +[FlexSegment segmentsWithType:nameIndex:nameSuffix:inSegments:]
  +[FlexSegment segmentWithName:inSegments:]
  +[FlexSegment crossfadeLengthInSamplesForFromSeg:toSeg:fadeOutTimeInMsec:fadeInTimeInMsec:validFadeOutSamples:validFadeInSamples:]

  // instance methods
  -[FlexSegment bars]
  -[FlexSegment setTransitions:]
  -[FlexSegment sampleRate]
  -[FlexSegment name]
  -[FlexSegment setErrors:]
  -[FlexSegment nameSuffix]
  -[FlexSegment setSampleCount:]
  -[FlexSegment namePrefix]
  -[FlexSegment sampleCount]
  -[FlexSegment setType:]
  -[FlexSegment transitions]
  -[FlexSegment .cxx_destruct]
  -[FlexSegment setName:]
  -[FlexSegment errors]
  -[FlexSegment setPriority:]
  -[FlexSegment initWithFileAtPath:]
  -[FlexSegment setBars:]
  -[FlexSegment metadataValues]
  -[FlexSegment priority]
  -[FlexSegment initWithDictionary:]
  -[FlexSegment type]
  -[FlexSegment markers]
  -[FlexSegment copyWithZone:]
  -[FlexSegment setSampleRate:]
  -[FlexSegment metadataValueForKey:]
  -[FlexSegment encodeAsDictionary]
  -[FlexSegment setMarkers:]
  -[FlexSegment addMetadataValue:forKey:]
  -[FlexSegment samplesPerBar]
  -[FlexSegment setSamplesPerBar:]
  -[FlexSegment customBarMarkers]
  -[FlexSegment setCustomBarMarkers:]
  -[FlexSegment _decodeTypeInfoFromSegmentName]
  -[FlexSegment sliceable]
  -[FlexSegment relinkAllTransitions]
  -[FlexSegment beatsPerBar]
  -[FlexSegment barStartPositionForBarIndex:]
  -[FlexSegment barEndPositionForBarIndex:]
  -[FlexSegment linkedPerBarTransitionsToSegmentNamed:]
  -[FlexSegment nameIndex]
  -[FlexSegment transitionToSegmentNamed:fromBarIndex:]
  -[FlexSegment setLinkedPerBarTransitions:toSegmentNamed:]
  -[FlexSegment initAsCrossFade:sampleRate:sampleCount:beatsPerBar:]
  -[FlexSegment barDurationForBarIndex:]
  -[FlexSegment addOrReplaceTransition:toSegmentNamed:fromBarIndex:]
  -[FlexSegment removeTransitionToSegmentNamed:fromBarIndex:]
  -[FlexSegment isPriorityValid]
  -[FlexSegment setSliceable:]
  -[FlexSegment setBeatsPerBar:]
  -[FlexSegment nameStem]


FMClip : NSObject
 @property  NSURL *url
 @property  long long position
 @property  long long offset
 @property  long long duration
 @property  long long fadeInLength
 @property  long long fadeOutLength

  // instance methods
  -[FMClip url]
  -[FMClip offset]
  -[FMClip .cxx_destruct]
  -[FMClip setDuration:]
  -[FMClip setUrl:]
  -[FMClip setOffset:]
  -[FMClip copyWithZone:]
  -[FMClip setPosition:]
  -[FMClip duration]
  -[FMClip position]
  -[FMClip fadeInLength]
  -[FMClip setFadeInLength:]
  -[FMClip fadeOutLength]
  -[FMClip setFadeOutLength:]


FlexLegacySongRendition : FMSongRendition
 @property  NSArray *segments
 @property  long long durationOfUsedOutro
 @property  long long durationOfFullOutro

  // class methods
  +[FlexLegacySongRendition _durationOfOutroForPlaylist:onlyUsedDuration:]

  // instance methods
  -[FlexLegacySongRendition segments]
  -[FlexLegacySongRendition .cxx_destruct]
  -[FlexLegacySongRendition setSegments:]
  -[FlexLegacySongRendition _buildOutroFadeoutMixParams]
  -[FlexLegacySongRendition setDurationOfUsedOutro:]
  -[FlexLegacySongRendition setDurationOfFullOutro:]
  -[FlexLegacySongRendition _buildTracksFromSegments:]
  -[FlexLegacySongRendition initWithSong:segments:withOptions:]
  -[FlexLegacySongRendition durationOfUsedOutro]
  -[FlexLegacySongRendition durationOfFullOutro]


MAAsset(MAAssetAdditions)
	// instance methods
	-[MAAsset(MAAssetAdditions) isPresent]

01 00 0300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMutableAudioMix 
01 00 0300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMutableAudioMixInputParameters 
01 00 0300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMutableComposition 
01 00 0300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVURLAsset 
01 00 0100 /System/Library/PrivateFrameworks/MobileAsset.framework/MobileAsset: MAAsset 
01 00 0100 /System/Library/PrivateFrameworks/MobileAsset.framework/MobileAsset: MAAssetQuery 
01 00 0100 /System/Library/PrivateFrameworks/MobileAsset.framework/MobileAsset: MADownloadOptions 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSCompoundPredicate 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSCountedSet 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0900 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSScanner 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
