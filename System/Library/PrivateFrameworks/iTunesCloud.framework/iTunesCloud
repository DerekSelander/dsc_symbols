|| __DATA.__data _ICMusicAccountNotificationsSettingsSwitchArtistsAndShows
|| __DATA.__data _ICMusicAccountNotificationsSettingsSwitchIdentifierKey
|| __DATA.__data _ICMusicAccountNotificationsSettingsSwitchIsToggledKey
|| __DATA.__data _ICMusicAccountNotificationsSettingsSwitchShowInLibrary
|| __DATA.__data _ICMusicSubscriptionLeaseSessionLeaseStatusDidChangeNotification
|| __DATA.__data _ICStorePlatformAudioTraitAtmos
|| __DATA.__data _ICStorePlatformAudioTraitHiResLossless
|| __DATA.__data _ICStorePlatformAudioTraitLossless
|| __DATA.__data _ICStorePlatformAudioTraitLossyStereo
|| __DATA.__data _ICStorePlatformAudioTraitSpatial
|| __DATA.__data _ICStorePlatformAudioTraitSurround
|| __DATA.__data _ICStorePlatformMetadataKindAlbum
|| __DATA.__data _ICStorePlatformMetadataKindArtist
|| __DATA.__data _ICStorePlatformMetadataKindMovie
|| __DATA.__data _ICStorePlatformMetadataKindMusicVideo
|| __DATA.__data _ICStorePlatformMetadataKindPlaylist
|| __DATA.__data _ICStorePlatformMetadataKindRadioStation
|| __DATA.__data _ICStorePlatformMetadataKindSong
|| __DATA.__data _ICStorePlatformMetadataKindTVEpisode
|| __DATA.__data _ICStorePlatformMetadataKindTVSeason
|| __DATA.__data _ICStorePlatformMetadataKindUploadedAudio
|| __DATA.__data _ICStorePlatformMetadataKindUploadedVideo
|| __DATA.__objc_data _OBJC_CLASS_$_ICACAccountVerificationOperation
|| __DATA.__objc_data _OBJC_CLASS_$_ICADIProvisionSession
|| __DATA.__objc_data _OBJC_CLASS_$_ICAMSBagAdapter
|| __DATA.__objc_data _OBJC_CLASS_$_ICAVAssetDownloadURLSession
|| __DATA.__objc_data _OBJC_CLASS_$_ICAddToWishListRequest
|| __DATA.__objc_data _OBJC_CLASS_$_ICAddToWishListResponse
|| __DATA.__objc_data _OBJC_CLASS_$_ICAgeVerifier
|| __DATA.__objc_data _OBJC_CLASS_$_ICAuthorizeMachineRequest
|| __DATA.__objc_data _OBJC_CLASS_$_ICAuthorizeMachineResponse
|| __DATA.__objc_data _OBJC_CLASS_$_ICBuyProductRequest
|| __DATA.__objc_data _OBJC_CLASS_$_ICCloudContentTastePBFuseItemPreference
|| __DATA.__objc_data _OBJC_CLASS_$_ICCloudContentTastePBFusePreferences
|| __DATA.__objc_data _OBJC_CLASS_$_ICCloudContentTasteRequestListener
|| __DATA.__objc_data _OBJC_CLASS_$_ICContentKeySession
|| __DATA.__objc_data _OBJC_CLASS_$_ICDelegateToken
|| __DATA.__objc_data _OBJC_CLASS_$_ICDelegationConsumerService
|| __DATA.__objc_data _OBJC_CLASS_$_ICDelegationConsumerServiceRequest
|| __DATA.__objc_data _OBJC_CLASS_$_ICDelegationProviderServiceAssertion
|| __DATA.__objc_data _OBJC_CLASS_$_ICDeveloperTokenDefaultProvider
|| __DATA.__objc_data _OBJC_CLASS_$_ICDispatchOnce
|| __DATA.__objc_data _OBJC_CLASS_$_ICFileContentKeyStore
|| __DATA.__objc_data _OBJC_CLASS_$_ICFlushPlayActivityEventsOperation
|| __DATA.__objc_data _OBJC_CLASS_$_ICIAMApplicationBadge
|| __DATA.__objc_data _OBJC_CLASS_$_ICIAMApplicationMessageSyncCommand
|| __DATA.__objc_data _OBJC_CLASS_$_ICIAMApplicationMessageSyncResponse
|| __DATA.__objc_data _OBJC_CLASS_$_ICIAMLocalNotification
|| __DATA.__objc_data _OBJC_CLASS_$_ICIAMLogEventRequest
|| __DATA.__objc_data _OBJC_CLASS_$_ICIAMLogEventResponse
|| __DATA.__objc_data _OBJC_CLASS_$_ICIAMSerialCheckRequest
|| __DATA.__objc_data _OBJC_CLASS_$_ICIAMSerialCheckResponse
|| __DATA.__objc_data _OBJC_CLASS_$_ICIAMSynchronizeMessagesRequest
|| __DATA.__objc_data _OBJC_CLASS_$_ICIAMSynchronizeMessagesResponse
|| __DATA.__objc_data _OBJC_CLASS_$_ICInAppMessageEventEntry
|| __DATA.__objc_data _OBJC_CLASS_$_ICInAppMessageSyncRequest
|| __DATA.__objc_data _OBJC_CLASS_$_ICInAppMessageUserNotificationCoordinator
|| __DATA.__objc_data _OBJC_CLASS_$_ICJSSign
|| __DATA.__objc_data _OBJC_CLASS_$_ICJSSignConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_ICLibraryAuthServiceBulkClientTokenRequest
|| __DATA.__objc_data _OBJC_CLASS_$_ICLibraryAuthServiceBulkClientTokenResponse
|| __DATA.__objc_data _OBJC_CLASS_$_ICLibraryAuthServiceClientTokenRequest
|| __DATA.__objc_data _OBJC_CLASS_$_ICLibraryAuthServiceClientTokenResponse
|| __DATA.__objc_data _OBJC_CLASS_$_ICLightweightMusicSubscriptionStatus
|| __DATA.__objc_data _OBJC_CLASS_$_ICLightweightMusicSubscriptionStatusRequest
|| __DATA.__objc_data _OBJC_CLASS_$_ICLightweightMusicSubscriptionStatusResponse
|| __DATA.__objc_data _OBJC_CLASS_$_ICLiveLink
|| __DATA.__objc_data _OBJC_CLASS_$_ICLiveLinkCustomEvent
|| __DATA.__objc_data _OBJC_CLASS_$_ICLiveLinkEvent
|| __DATA.__objc_data _OBJC_CLASS_$_ICLiveLinkIdentity
|| __DATA.__objc_data _OBJC_CLASS_$_ICLiveLinkPlaybackEvent
|| __DATA.__objc_data _OBJC_CLASS_$_ICLiveLinkQueueEvent
|| __DATA.__objc_data _OBJC_CLASS_$_ICLiveLinkQueueEventContentAdded
|| __DATA.__objc_data _OBJC_CLASS_$_ICLiveLinkQueueEventContentPlayedNow
|| __DATA.__objc_data _OBJC_CLASS_$_ICLiveLinkQueueEventContentRemoved
|| __DATA.__objc_data _OBJC_CLASS_$_ICLiveLinkQueueEventContentReordered
|| __DATA.__objc_data _OBJC_CLASS_$_ICLiveLinkQueueEventContentReplaced
|| __DATA.__objc_data _OBJC_CLASS_$_ICLiveLinkQueueEventContentUpdatedMessage
|| __DATA.__objc_data _OBJC_CLASS_$_ICLiveLinkQueueEventPlaybackModeChanged
|| __DATA.__objc_data _OBJC_CLASS_$_ICLiveLinkReactionEvent
|| __DATA.__objc_data _OBJC_CLASS_$_ICLiveLinkSessionEvent
|| __DATA.__objc_data _OBJC_CLASS_$_ICMatchRedownloadRequest
|| __DATA.__objc_data _OBJC_CLASS_$_ICMediaAPIURLMapping
|| __DATA.__objc_data _OBJC_CLASS_$_ICMediaAPIURLMappingProvider
|| __DATA.__objc_data _OBJC_CLASS_$_ICMediaAPIURLMappingSet
|| __DATA.__objc_data _OBJC_CLASS_$_ICMediaAssetDownloadRequest
|| __DATA.__objc_data _OBJC_CLASS_$_ICMediaRedownloadRequest
|| __DATA.__objc_data _OBJC_CLASS_$_ICMediaRedownloadResponse
|| __DATA.__objc_data _OBJC_CLASS_$_ICMemoryContentKeyStore
|| __DATA.__objc_data _OBJC_CLASS_$_ICMusicAccountNotificationsSettingsManager
|| __DATA.__objc_data _OBJC_CLASS_$_ICMusicAccountNotificationsSettingsRequestOperation
|| __DATA.__objc_data _OBJC_CLASS_$_ICMusicAccountNotificationsSettingsResponse
|| __DATA.__objc_data _OBJC_CLASS_$_ICMusicAccountNotificationsSettingsSwitch
|| __DATA.__objc_data _OBJC_CLASS_$_ICMusicKitRequestContext
|| __DATA.__objc_data _OBJC_CLASS_$_ICMusicKitTokensResponse
|| __DATA.__objc_data _OBJC_CLASS_$_ICMusicKitURLRequest
|| __DATA.__objc_data _OBJC_CLASS_$_ICMusicKitURLResponse
|| __DATA.__objc_data _OBJC_CLASS_$_ICMusicRestoreRequest
|| __DATA.__objc_data _OBJC_CLASS_$_ICMusicRestoreRequestParameters
|| __DATA.__objc_data _OBJC_CLASS_$_ICMusicSubscriptionAccountlessPlaybackRequest
|| __DATA.__objc_data _OBJC_CLASS_$_ICMusicSubscriptionFairPlayKeyStatus
|| __DATA.__objc_data _OBJC_CLASS_$_ICMusicSubscriptionLeaseController
|| __DATA.__objc_data _OBJC_CLASS_$_ICMusicSubscriptionLeasePlaybackRequest
|| __DATA.__objc_data _OBJC_CLASS_$_ICMusicSubscriptionLeaseSession
|| __DATA.__objc_data _OBJC_CLASS_$_ICMusicSubscriptionLeaseStatus
|| __DATA.__objc_data _OBJC_CLASS_$_ICMusicSubscriptionPlaybackResponse
|| __DATA.__objc_data _OBJC_CLASS_$_ICMusicSubscriptionPlaybackResponseItem
|| __DATA.__objc_data _OBJC_CLASS_$_ICMusicSubscriptionRecommendationsRequest
|| __DATA.__objc_data _OBJC_CLASS_$_ICMutableNetworkConstraints
|| __DATA.__objc_data _OBJC_CLASS_$_ICMutablePlayActivityAudioQualityProperties
|| __DATA.__objc_data _OBJC_CLASS_$_ICMutablePlayActivityEnqueuerProperties
|| __DATA.__objc_data _OBJC_CLASS_$_ICMutablePlayActivityEvent
|| __DATA.__objc_data _OBJC_CLASS_$_ICMutablePlayActivityEventContainerIDs
|| __DATA.__objc_data _OBJC_CLASS_$_ICMutablePlayActivityEventItemIDs
|| __DATA.__objc_data _OBJC_CLASS_$_ICMutableRadioPlaybackHistory
|| __DATA.__objc_data _OBJC_CLASS_$_ICMutableRadioPlaybackHistoryItem
|| __DATA.__objc_data _OBJC_CLASS_$_ICPlayActivityAudioQualityProperties
|| __DATA.__objc_data _OBJC_CLASS_$_ICPlayActivityEnqueuerProperties
|| __DATA.__objc_data _OBJC_CLASS_$_ICPlayActivityEvent
|| __DATA.__objc_data _OBJC_CLASS_$_ICPlayActivityEventContainerIDs
|| __DATA.__objc_data _OBJC_CLASS_$_ICPlayActivityEventItemIDs
|| __DATA.__objc_data _OBJC_CLASS_$_ICPlayInfoRequest
|| __DATA.__objc_data _OBJC_CLASS_$_ICPlayInfoResponse
|| __DATA.__objc_data _OBJC_CLASS_$_ICPurchaseRedownloadRequest
|| __DATA.__objc_data _OBJC_CLASS_$_ICPushNotificationMessage
|| __DATA.__objc_data _OBJC_CLASS_$_ICPushNotificationsDisableTypesRequest
|| __DATA.__objc_data _OBJC_CLASS_$_ICPushNotificationsEnableTypesRequest
|| __DATA.__objc_data _OBJC_CLASS_$_ICPushNotificationsRegisterAPNSTokenRequest
|| __DATA.__objc_data _OBJC_CLASS_$_ICPushNotificationsResponse
|| __DATA.__objc_data _OBJC_CLASS_$_ICRadioContentReference
|| __DATA.__objc_data _OBJC_CLASS_$_ICRadioFetchMetadataRequest
|| __DATA.__objc_data _OBJC_CLASS_$_ICRadioFetchMetadataResponse
|| __DATA.__objc_data _OBJC_CLASS_$_ICRadioGetTracksRequest
|| __DATA.__objc_data _OBJC_CLASS_$_ICRadioGetTracksResponse
|| __DATA.__objc_data _OBJC_CLASS_$_ICRadioLibraryAlbumContentReference
|| __DATA.__objc_data _OBJC_CLASS_$_ICRadioLibraryArtistContentReference
|| __DATA.__objc_data _OBJC_CLASS_$_ICRadioLibraryTrackContentReference
|| __DATA.__objc_data _OBJC_CLASS_$_ICRadioLikeRequest
|| __DATA.__objc_data _OBJC_CLASS_$_ICRadioLikeResponse
|| __DATA.__objc_data _OBJC_CLASS_$_ICRadioPlaybackHistory
|| __DATA.__objc_data _OBJC_CLASS_$_ICRadioPlaybackHistoryItem
|| __DATA.__objc_data _OBJC_CLASS_$_ICRadioPlaybackHistoryStore
|| __DATA.__objc_data _OBJC_CLASS_$_ICRadioResponse
|| __DATA.__objc_data _OBJC_CLASS_$_ICRadioStationMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_ICRadioStationProviderResource
|| __DATA.__objc_data _OBJC_CLASS_$_ICRadioStationTrack
|| __DATA.__objc_data _OBJC_CLASS_$_ICRadioStoreContentReference
|| __DATA.__objc_data _OBJC_CLASS_$_ICRadioTrackInfoContentReference
|| __DATA.__objc_data _OBJC_CLASS_$_ICRemoveMediaDRMOperation
|| __DATA.__objc_data _OBJC_CLASS_$_ICSQLitePreparedStatement
|| __DATA.__objc_data _OBJC_CLASS_$_ICSecureKeyDeliveryRequest
|| __DATA.__objc_data _OBJC_CLASS_$_ICSecureKeyDeliveryResponse
|| __DATA.__objc_data _OBJC_CLASS_$_ICSetParentalControlRequestOperation
|| __DATA.__objc_data _OBJC_CLASS_$_ICSharedListeningContainer
|| __DATA.__objc_data _OBJC_CLASS_$_ICSharedListeningItem
|| __DATA.__objc_data _OBJC_CLASS_$_ICSharedListeningQueue
|| __DATA.__objc_data _OBJC_CLASS_$_ICSharedTracklistPosition
|| __DATA.__objc_data _OBJC_CLASS_$_ICSiriAddToAccousticHistoryRequest
|| __DATA.__objc_data _OBJC_CLASS_$_ICSongDownloadDoneRequest
|| __DATA.__objc_data _OBJC_CLASS_$_ICStorageManager
|| __DATA.__objc_data _OBJC_CLASS_$_ICStoreArtworkInfo
|| __DATA.__objc_data _OBJC_CLASS_$_ICStoreArtworkSizeInfo
|| __DATA.__objc_data _OBJC_CLASS_$_ICStoreDialogResponse
|| __DATA.__objc_data _OBJC_CLASS_$_ICStoreDialogResponseButton
|| __DATA.__objc_data _OBJC_CLASS_$_ICStoreDialogResponseButtonAction
|| __DATA.__objc_data _OBJC_CLASS_$_ICStoreFileAssetFairPlayInfo
|| __DATA.__objc_data _OBJC_CLASS_$_ICStoreFileAssetInfo
|| __DATA.__objc_data _OBJC_CLASS_$_ICStoreFinanceItemMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_ICStoreHLSAssetInfo
|| __DATA.__objc_data _OBJC_CLASS_$_ICStoreMediaResponseItem
|| __DATA.__objc_data _OBJC_CLASS_$_ICStorePlatformMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_ICStorePlatformOffer
|| __DATA.__objc_data _OBJC_CLASS_$_ICStorePlatformOfferAsset
|| __DATA.__objc_data _OBJC_CLASS_$_ICStorePlatformRequest
|| __DATA.__objc_data _OBJC_CLASS_$_ICStorePlatformRequestOperation
|| __DATA.__objc_data _OBJC_CLASS_$_ICStorePlatformResponse
|| __DATA.__objc_data _OBJC_CLASS_$_ICStoreRadioStreamAssetInfo
|| __DATA.__objc_data _OBJC_CLASS_$_ICStoreVideoArtworkInfo
|| __DATA.__objc_data _OBJC_CLASS_$_ICSubscriptionRedownloadRequest
|| __DATA.__objc_data _OBJC_CLASS_$_ICSuzeLeaseSession
|| __DATA.__objc_data _OBJC_CLASS_$_ICSuzeLeaseSessionConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_ICURLBagEnhancedAudioConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_ICURLBagLibraryDAAPConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_ICURLBagMescalConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_ICURLBagMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_ICURLBagRadioConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_ICUserAuthenticationValidationRequest
|| __DATA.__objc_data _OBJC_CLASS_$_ICUserNotificationBuilder
|| __DATA.__objc_data _OBJC_CLASS_$_ICUserNotificationManager
|| __DATA.__objc_data _OBJC_CLASS_$_ICUserVerificationContext
|| __DATA.__objc_data _OBJC_CLASS_$_ICUserVerificationOperation
|| __DATA.__objc_data _OBJC_CLASS_$_ICUserVerificationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_ICACAccountVerificationOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_ICADIProvisionSession
|| __DATA.__objc_data _OBJC_METACLASS_$_ICAMSBagAdapter
|| __DATA.__objc_data _OBJC_METACLASS_$_ICAVAssetDownloadURLSession
|| __DATA.__objc_data _OBJC_METACLASS_$_ICAddToWishListRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_ICAddToWishListResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_ICAgeVerifier
|| __DATA.__objc_data _OBJC_METACLASS_$_ICAuthorizeMachineRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_ICAuthorizeMachineResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_ICBuyProductRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_ICCloudContentTastePBFuseItemPreference
|| __DATA.__objc_data _OBJC_METACLASS_$_ICCloudContentTastePBFusePreferences
|| __DATA.__objc_data _OBJC_METACLASS_$_ICCloudContentTasteRequestListener
|| __DATA.__objc_data _OBJC_METACLASS_$_ICContentKeySession
|| __DATA.__objc_data _OBJC_METACLASS_$_ICDelegateToken
|| __DATA.__objc_data _OBJC_METACLASS_$_ICDelegationConsumerService
|| __DATA.__objc_data _OBJC_METACLASS_$_ICDelegationConsumerServiceRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_ICDelegationProviderServiceAssertion
|| __DATA.__objc_data _OBJC_METACLASS_$_ICDeveloperTokenDefaultProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_ICDispatchOnce
|| __DATA.__objc_data _OBJC_METACLASS_$_ICFileContentKeyStore
|| __DATA.__objc_data _OBJC_METACLASS_$_ICFlushPlayActivityEventsOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_ICIAMApplicationBadge
|| __DATA.__objc_data _OBJC_METACLASS_$_ICIAMApplicationMessageSyncCommand
|| __DATA.__objc_data _OBJC_METACLASS_$_ICIAMApplicationMessageSyncResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_ICIAMLocalNotification
|| __DATA.__objc_data _OBJC_METACLASS_$_ICIAMLogEventRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_ICIAMLogEventResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_ICIAMSerialCheckRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_ICIAMSerialCheckResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_ICIAMSynchronizeMessagesRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_ICIAMSynchronizeMessagesResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_ICInAppMessageEventEntry
|| __DATA.__objc_data _OBJC_METACLASS_$_ICInAppMessageSyncRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_ICInAppMessageUserNotificationCoordinator
|| __DATA.__objc_data _OBJC_METACLASS_$_ICJSSign
|| __DATA.__objc_data _OBJC_METACLASS_$_ICJSSignConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_ICLibraryAuthServiceBulkClientTokenRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_ICLibraryAuthServiceBulkClientTokenResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_ICLibraryAuthServiceClientTokenRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_ICLibraryAuthServiceClientTokenResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_ICLightweightMusicSubscriptionStatus
|| __DATA.__objc_data _OBJC_METACLASS_$_ICLightweightMusicSubscriptionStatusRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_ICLightweightMusicSubscriptionStatusResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_ICLiveLink
|| __DATA.__objc_data _OBJC_METACLASS_$_ICLiveLinkCustomEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_ICLiveLinkEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_ICLiveLinkIdentity
|| __DATA.__objc_data _OBJC_METACLASS_$_ICLiveLinkPlaybackEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_ICLiveLinkQueueEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_ICLiveLinkQueueEventContentAdded
|| __DATA.__objc_data _OBJC_METACLASS_$_ICLiveLinkQueueEventContentPlayedNow
|| __DATA.__objc_data _OBJC_METACLASS_$_ICLiveLinkQueueEventContentRemoved
|| __DATA.__objc_data _OBJC_METACLASS_$_ICLiveLinkQueueEventContentReordered
|| __DATA.__objc_data _OBJC_METACLASS_$_ICLiveLinkQueueEventContentReplaced
|| __DATA.__objc_data _OBJC_METACLASS_$_ICLiveLinkQueueEventContentUpdatedMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_ICLiveLinkQueueEventPlaybackModeChanged
|| __DATA.__objc_data _OBJC_METACLASS_$_ICLiveLinkReactionEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_ICLiveLinkSessionEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_ICMatchRedownloadRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_ICMediaAPIURLMapping
|| __DATA.__objc_data _OBJC_METACLASS_$_ICMediaAPIURLMappingProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_ICMediaAPIURLMappingSet
|| __DATA.__objc_data _OBJC_METACLASS_$_ICMediaAssetDownloadRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_ICMediaRedownloadRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_ICMediaRedownloadResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_ICMemoryContentKeyStore
|| __DATA.__objc_data _OBJC_METACLASS_$_ICMusicAccountNotificationsSettingsManager
|| __DATA.__objc_data _OBJC_METACLASS_$_ICMusicAccountNotificationsSettingsRequestOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_ICMusicAccountNotificationsSettingsResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_ICMusicAccountNotificationsSettingsSwitch
|| __DATA.__objc_data _OBJC_METACLASS_$_ICMusicKitRequestContext
|| __DATA.__objc_data _OBJC_METACLASS_$_ICMusicKitTokensResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_ICMusicKitURLRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_ICMusicKitURLResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_ICMusicRestoreRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_ICMusicRestoreRequestParameters
|| __DATA.__objc_data _OBJC_METACLASS_$_ICMusicSubscriptionAccountlessPlaybackRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_ICMusicSubscriptionFairPlayKeyStatus
|| __DATA.__objc_data _OBJC_METACLASS_$_ICMusicSubscriptionLeaseController
|| __DATA.__objc_data _OBJC_METACLASS_$_ICMusicSubscriptionLeasePlaybackRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_ICMusicSubscriptionLeaseSession
|| __DATA.__objc_data _OBJC_METACLASS_$_ICMusicSubscriptionLeaseStatus
|| __DATA.__objc_data _OBJC_METACLASS_$_ICMusicSubscriptionPlaybackResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_ICMusicSubscriptionPlaybackResponseItem
|| __DATA.__objc_data _OBJC_METACLASS_$_ICMusicSubscriptionRecommendationsRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_ICMutableNetworkConstraints
|| __DATA.__objc_data _OBJC_METACLASS_$_ICMutablePlayActivityAudioQualityProperties
|| __DATA.__objc_data _OBJC_METACLASS_$_ICMutablePlayActivityEnqueuerProperties
|| __DATA.__objc_data _OBJC_METACLASS_$_ICMutablePlayActivityEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_ICMutablePlayActivityEventContainerIDs
|| __DATA.__objc_data _OBJC_METACLASS_$_ICMutablePlayActivityEventItemIDs
|| __DATA.__objc_data _OBJC_METACLASS_$_ICMutableRadioPlaybackHistory
|| __DATA.__objc_data _OBJC_METACLASS_$_ICMutableRadioPlaybackHistoryItem
|| __DATA.__objc_data _OBJC_METACLASS_$_ICPlayActivityAudioQualityProperties
|| __DATA.__objc_data _OBJC_METACLASS_$_ICPlayActivityEnqueuerProperties
|| __DATA.__objc_data _OBJC_METACLASS_$_ICPlayActivityEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_ICPlayActivityEventContainerIDs
|| __DATA.__objc_data _OBJC_METACLASS_$_ICPlayActivityEventItemIDs
|| __DATA.__objc_data _OBJC_METACLASS_$_ICPlayInfoRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_ICPlayInfoResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_ICPurchaseRedownloadRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_ICPushNotificationMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_ICPushNotificationsDisableTypesRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_ICPushNotificationsEnableTypesRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_ICPushNotificationsRegisterAPNSTokenRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_ICPushNotificationsResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_ICRadioContentReference
|| __DATA.__objc_data _OBJC_METACLASS_$_ICRadioFetchMetadataRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_ICRadioFetchMetadataResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_ICRadioGetTracksRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_ICRadioGetTracksResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_ICRadioLibraryAlbumContentReference
|| __DATA.__objc_data _OBJC_METACLASS_$_ICRadioLibraryArtistContentReference
|| __DATA.__objc_data _OBJC_METACLASS_$_ICRadioLibraryTrackContentReference
|| __DATA.__objc_data _OBJC_METACLASS_$_ICRadioLikeRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_ICRadioLikeResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_ICRadioPlaybackHistory
|| __DATA.__objc_data _OBJC_METACLASS_$_ICRadioPlaybackHistoryItem
|| __DATA.__objc_data _OBJC_METACLASS_$_ICRadioPlaybackHistoryStore
|| __DATA.__objc_data _OBJC_METACLASS_$_ICRadioResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_ICRadioStationMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_ICRadioStationProviderResource
|| __DATA.__objc_data _OBJC_METACLASS_$_ICRadioStationTrack
|| __DATA.__objc_data _OBJC_METACLASS_$_ICRadioStoreContentReference
|| __DATA.__objc_data _OBJC_METACLASS_$_ICRadioTrackInfoContentReference
|| __DATA.__objc_data _OBJC_METACLASS_$_ICRemoveMediaDRMOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_ICSQLitePreparedStatement
|| __DATA.__objc_data _OBJC_METACLASS_$_ICSecureKeyDeliveryRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_ICSecureKeyDeliveryResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_ICSetParentalControlRequestOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_ICSharedListeningContainer
|| __DATA.__objc_data _OBJC_METACLASS_$_ICSharedListeningItem
|| __DATA.__objc_data _OBJC_METACLASS_$_ICSharedListeningQueue
|| __DATA.__objc_data _OBJC_METACLASS_$_ICSharedTracklistPosition
|| __DATA.__objc_data _OBJC_METACLASS_$_ICSiriAddToAccousticHistoryRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_ICSongDownloadDoneRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_ICStorageManager
|| __DATA.__objc_data _OBJC_METACLASS_$_ICStoreArtworkInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_ICStoreArtworkSizeInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_ICStoreDialogResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_ICStoreDialogResponseButton
|| __DATA.__objc_data _OBJC_METACLASS_$_ICStoreDialogResponseButtonAction
|| __DATA.__objc_data _OBJC_METACLASS_$_ICStoreFileAssetFairPlayInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_ICStoreFileAssetInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_ICStoreFinanceItemMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_ICStoreHLSAssetInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_ICStoreMediaResponseItem
|| __DATA.__objc_data _OBJC_METACLASS_$_ICStorePlatformMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_ICStorePlatformOffer
|| __DATA.__objc_data _OBJC_METACLASS_$_ICStorePlatformOfferAsset
|| __DATA.__objc_data _OBJC_METACLASS_$_ICStorePlatformRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_ICStorePlatformRequestOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_ICStorePlatformResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_ICStoreRadioStreamAssetInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_ICStoreVideoArtworkInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_ICSubscriptionRedownloadRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_ICSuzeLeaseSession
|| __DATA.__objc_data _OBJC_METACLASS_$_ICSuzeLeaseSessionConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_ICURLBagEnhancedAudioConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_ICURLBagLibraryDAAPConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_ICURLBagMescalConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_ICURLBagMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_ICURLBagRadioConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_ICUserAuthenticationValidationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_ICUserNotificationBuilder
|| __DATA.__objc_data _OBJC_METACLASS_$_ICUserNotificationManager
|| __DATA.__objc_data _OBJC_METACLASS_$_ICUserVerificationContext
|| __DATA.__objc_data _OBJC_METACLASS_$_ICUserVerificationOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_ICUserVerificationRequest
|| __DATA_CONST.__const _ICActiveUserIdentityDidChangeNotification
|| __DATA_CONST.__const _ICAgeVerificationStateDidChangeNotification
|| __DATA_CONST.__const _ICArtworkInfoKeyArtworkDictionary
|| __DATA_CONST.__const _ICArtworkInfoKeyArtworkDictionaryCoverArtworkJSON
|| __DATA_CONST.__const _ICArtworkInfoKeyArtworkDictionaryCoverURL
|| __DATA_CONST.__const _ICArtworkInfoKeyArtworkDictionaryFullToken
|| __DATA_CONST.__const _ICArtworkInfoKeyArtworkDictionaryFullURL
|| __DATA_CONST.__const _ICArtworkInfoKeyArtworkDictionaryOvalToken
|| __DATA_CONST.__const _ICArtworkInfoKeyArtworkDictionaryOvalURL
|| __DATA_CONST.__const _ICArtworkInfoKeyArtworkDictionaryTemplateJSON
|| __DATA_CONST.__const _ICArtworkInfoKeyArtworkDictionaryTemplateSupportsLayeredImage
|| __DATA_CONST.__const _ICArtworkInfoKeyArtworkDictionaryTemplateURL
|| __DATA_CONST.__const _ICArtworkInfoKeyPurchaseHistoryID
|| __DATA_CONST.__const _ICArtworkInfoKeySagaID
|| __DATA_CONST.__const _ICArtworkInfoKeyStatus
|| __DATA_CONST.__const _ICAuthorizeMachineRequestReasonFamily
|| __DATA_CONST.__const _ICAuthorizeMachineRequestReasonRefetch
|| __DATA_CONST.__const _ICClientInfoDefaultProfileName
|| __DATA_CONST.__const _ICClientInfoDefaultProfileVersion
|| __DATA_CONST.__const _ICCloudAvailabilityControllerCanShowCloudDownloadButtonsDidChangeNotification
|| __DATA_CONST.__const _ICCloudAvailabilityControllerCanShowCloudTracksDidChangeNotification
|| __DATA_CONST.__const _ICCloudAvailabilityControllerHasProperNetworkConditionsToShowCloudMediaDidChangeNotification
|| __DATA_CONST.__const _ICCloudAvailabilityControllerIsCellularDataRestrictedDidChangeNotification
|| __DATA_CONST.__const _ICCloudAvailabilityControllerNetworkReachabilityDidChangeNotification
|| __DATA_CONST.__const _ICCloudClientActiveUserIdentityDidChangeNotification
|| __DATA_CONST.__const _ICCloudClientArtworkDownloadsDidCompleteNotification
|| __DATA_CONST.__const _ICCloudClientCloudAddToPlaylistBehaviorDidChangeNotification
|| __DATA_CONST.__const _ICCloudClientEnableCloudLibraryFailureTypeChangedNotification
|| __DATA_CONST.__const _ICCloudClientErrorDomain
|| __DATA_CONST.__const _ICCloudClientIsAuthenticatedDidChangeNotification
|| __DATA_CONST.__const _ICCloudClientLibraryUploadErrorDomain
|| __DATA_CONST.__const _ICCloudClientStartingInitialCloudLibraryImportNotification
|| __DATA_CONST.__const _ICCloudServiceEntitlementStatusAccessExemptedFromUserConsentRequirement
|| __DATA_CONST.__const _ICCloudServiceStatusActiveAccountDidChangeNotification
|| __DATA_CONST.__const _ICCloudServiceStatusAuthorizationWasGrantedNotification
|| __DATA_CONST.__const _ICCloudServiceStatusCapabilitiesDidChangeNotification
|| __DATA_CONST.__const _ICCloudServiceStatusStorefrontCountryCodeDidChangeNotification
|| __DATA_CONST.__const _ICCloudServiceStatusStorefrontIdentifierDidChangeNotification
|| __DATA_CONST.__const _ICDelegateAccountStoreDidChangeNotification
|| __DATA_CONST.__const _ICDelegateAccountStoreMetadataLastExpirationPruneDate
|| __DATA_CONST.__const _ICDelegateAccountStoreServiceEntitlement
|| __DATA_CONST.__const _ICDelegateAccountStoreServiceName
|| __DATA_CONST.__const _ICDelegationProviderServiceXPCEntitlement
|| __DATA_CONST.__const _ICDelegationProviderServiceXPCServiceName
|| __DATA_CONST.__const _ICDeviceSystemReleaseTypeCarrier
|| __DATA_CONST.__const _ICDeviceSystemReleaseTypeDesense
|| __DATA_CONST.__const _ICDeviceSystemReleaseTypeDeveloper
|| __DATA_CONST.__const _ICDeviceSystemReleaseTypeInternal
|| __DATA_CONST.__const _ICDeviceSystemReleaseTypeLiteInternal
|| __DATA_CONST.__const _ICDeviceSystemReleaseTypeNonUI
|| __DATA_CONST.__const _ICDeviceSystemReleaseTypeRestore
|| __DATA_CONST.__const _ICDeviceSystemReleaseTypeVendor
|| __DATA_CONST.__const _ICEnvironmentSignalStrengthBarsKey
|| __DATA_CONST.__const _ICEnvironmentSignalStrengthMaxBarsKey
|| __DATA_CONST.__const _ICErrorDomain
|| __DATA_CONST.__const _ICFairPlayErrorDomain
|| __DATA_CONST.__const _ICFileExtensionAppleProtectedAudio
|| __DATA_CONST.__const _ICFileExtensionMPEG4Audio
|| __DATA_CONST.__const _ICFileExtensionMoviePackage
|| __DATA_CONST.__const _ICHTTPHeaderContentEncodingGZIP
|| __DATA_CONST.__const _ICHTTPHeaderContentTypeJSON
|| __DATA_CONST.__const _ICHTTPHeaderContentTypeXApplePlist
|| __DATA_CONST.__const _ICHTTPHeaderContentTypeXMLWithCharsetUTF8
|| __DATA_CONST.__const _ICHTTPHeaderContentTypeXProtobuf
|| __DATA_CONST.__const _ICHTTPHeaderKeyAcceptLanguage
|| __DATA_CONST.__const _ICHTTPHeaderKeyCacheControl
|| __DATA_CONST.__const _ICHTTPHeaderKeyContentEncoding
|| __DATA_CONST.__const _ICHTTPHeaderKeyContentRange
|| __DATA_CONST.__const _ICHTTPHeaderKeyContentType
|| __DATA_CONST.__const _ICHTTPHeaderKeyCookie
|| __DATA_CONST.__const _ICHTTPHeaderKeyETag
|| __DATA_CONST.__const _ICHTTPHeaderKeyExpires
|| __DATA_CONST.__const _ICHTTPHeaderKeySetCookie
|| __DATA_CONST.__const _ICHTTPHeaderKeyUserAgent
|| __DATA_CONST.__const _ICHTTPHeaderParameterMaxAge
|| __DATA_CONST.__const _ICInAppMessageEntryResourceIdentifierTemplate
|| __DATA_CONST.__const _ICInAppMessageEntryResourceIdentifierWebArchive
|| __DATA_CONST.__const _ICInAppMessageManagerServiceXPCEntitlement
|| __DATA_CONST.__const _ICInAppMessageStorePropertyKeyAccountDSID
|| __DATA_CONST.__const _ICInAppMessageStorePropertyKeyLastSyncAttempt
|| __DATA_CONST.__const _ICInAppMessageStorePropertyKeyLastSyncedOSVersion
|| __DATA_CONST.__const _ICInAppMessageStorePropertyKeyServerRevision
|| __DATA_CONST.__const _ICInAppMessageStorePropertyKeySyncPending
|| __DATA_CONST.__const _ICInAppMessagesDidChangeNotification
|| __DATA_CONST.__const _ICKeyServerErrorDomain
|| __DATA_CONST.__const _ICLibraryAuthServiceClientTokenDidChangeNotification
|| __DATA_CONST.__const _ICLiveLinkErrorDomain
|| __DATA_CONST.__const _ICLiveLinkParticipantsDidChangeNotification
|| __DATA_CONST.__const _ICLiveLinkServerErrorDomain
|| __DATA_CONST.__const _ICMusicKitServerErrorDomain
|| __DATA_CONST.__const _ICMusicSubscriptionCarrierBundlingServerErrorDomain
|| __DATA_CONST.__const _ICMusicSubscriptionFairPlayKeyStatusDidChangeNotification
|| __DATA_CONST.__const _ICMusicSubscriptionStatusCacheDidChangeNotification
|| __DATA_CONST.__const _ICMusicSubscriptionStatusCacheUnderlyingCachingPropertiesDidChangeNotification
|| __DATA_CONST.__const _ICMusicSubscriptionStatusDidChangeNotification
|| __DATA_CONST.__const _ICNewStatusForMusicSubscriptionStatusDidChangeKey
|| __DATA_CONST.__const _ICOldStatusForMusicSubscriptionStatusDidChangeKey
|| __DATA_CONST.__const _ICPlayActivityControllerDidRecordPlayActivityEventsNotification
|| __DATA_CONST.__const _ICPlayActivityControllerEndpointIdentifierJingle
|| __DATA_CONST.__const _ICPlayActivityControllerEndpointIdentifierPairedDevice
|| __DATA_CONST.__const _ICPlayActivityControllerEndpointRevisionInformationDidChangeNotification
|| __DATA_CONST.__const _ICPlayActivityControllerUserInfoKeyEndRevision
|| __DATA_CONST.__const _ICPlayActivityControllerUserInfoKeyEndpointIdentifier
|| __DATA_CONST.__const _ICPlayActivityControllerUserInfoKeyStartRevision
|| __DATA_CONST.__const _ICPlayInfoRequestSubscriptionPlaybackTypeRenew
|| __DATA_CONST.__const _ICPlayInfoRequestSubscriptionPlaybackTypeStart
|| __DATA_CONST.__const _ICPrivacyIdentifierAppStore
|| __DATA_CONST.__const _ICPrivacyIdentifierBooks
|| __DATA_CONST.__const _ICPrivacyIdentifierFitnessPlus
|| __DATA_CONST.__const _ICPrivacyIdentifierImproveFitnessPlus
|| __DATA_CONST.__const _ICPrivacyIdentifierMusic
|| __DATA_CONST.__const _ICPrivacyIdentifierPodcasts
|| __DATA_CONST.__const _ICPrivacyIdentifierTV
|| __DATA_CONST.__const _ICPushNotificationTypeBookkeeper
|| __DATA_CONST.__const _ICPushNotificationTypePurchase
|| __DATA_CONST.__const _ICRadioLibraryTrackKindMusicVideo
|| __DATA_CONST.__const _ICRadioLibraryTrackKindSong
|| __DATA_CONST.__const _ICRadioLibraryTrackKindUploadedAudio
|| __DATA_CONST.__const _ICRadioLibraryTrackKindUploadedVideo
|| __DATA_CONST.__const _ICRadioPlaybackHistoryItemKeyIsCurrent
|| __DATA_CONST.__const _ICRadioServerErrorDomain
|| __DATA_CONST.__const _ICRecentlyPlayedDidChangeNotification
|| __DATA_CONST.__const _ICSQLiteErrorDomain
|| __DATA_CONST.__const _ICSecurityInfoFirstUnlockNotification
|| __DATA_CONST.__const _ICStoreArtworkInfoColorKindBackground
|| __DATA_CONST.__const _ICStoreArtworkInfoColorKindText1
|| __DATA_CONST.__const _ICStoreArtworkInfoColorKindText2
|| __DATA_CONST.__const _ICStoreArtworkInfoColorKindText3
|| __DATA_CONST.__const _ICStoreArtworkInfoColorKindText4
|| __DATA_CONST.__const _ICStoreArtworkInfoCropStyleBoundedBox
|| __DATA_CONST.__const _ICStoreArtworkInfoCropStyleConstrainedHeight
|| __DATA_CONST.__const _ICStoreArtworkInfoCropStyleConstrainedWidth
|| __DATA_CONST.__const _ICStoreArtworkInfoCropStyleFCCrop170T100B
|| __DATA_CONST.__const _ICStoreArtworkInfoCropStyleFCCrop270
|| __DATA_CONST.__const _ICStoreArtworkInfoCropStyleFCCrop44
|| __DATA_CONST.__const _ICStoreArtworkInfoCropStyleSourceSize
|| __DATA_CONST.__const _ICStoreArtworkInfoCropStyleSpecificRectangle
|| __DATA_CONST.__const _ICStoreArtworkInfoCropStyleSquareCenterCrop
|| __DATA_CONST.__const _ICStoreArtworkInfoFlavorMotionDetailTall
|| __DATA_CONST.__const _ICStoreArtworkInfoImageFormatHEIC
|| __DATA_CONST.__const _ICStoreArtworkInfoImageFormatJPEG
|| __DATA_CONST.__const _ICStoreArtworkInfoImageFormatPNG
|| __DATA_CONST.__const _ICStoreDialogResponseKeyBiometricAuthAllowed
|| __DATA_CONST.__const _ICStoreDialogResponseKeyButtonActionBuyParams
|| __DATA_CONST.__const _ICStoreDialogResponseKeyButtonActionItemName
|| __DATA_CONST.__const _ICStoreDialogResponseKeyButtonActionSubtarget
|| __DATA_CONST.__const _ICStoreDialogResponseKeyButtonActionURL
|| __DATA_CONST.__const _ICStoreDialogResponseKeyCancelButtonAction
|| __DATA_CONST.__const _ICStoreDialogResponseKeyCancelButtonTitle
|| __DATA_CONST.__const _ICStoreDialogResponseKeyDefaultButton
|| __DATA_CONST.__const _ICStoreDialogResponseKeyExplanation
|| __DATA_CONST.__const _ICStoreDialogResponseKeyInitialCheckboxValue
|| __DATA_CONST.__const _ICStoreDialogResponseKeyIsFree
|| __DATA_CONST.__const _ICStoreDialogResponseKeyKind
|| __DATA_CONST.__const _ICStoreDialogResponseKeyMessage
|| __DATA_CONST.__const _ICStoreDialogResponseKeyOKButtonAction
|| __DATA_CONST.__const _ICStoreDialogResponseKeyOKButtonTitle
|| __DATA_CONST.__const _ICStoreDialogResponseKeyOtherButtonAction
|| __DATA_CONST.__const _ICStoreDialogResponseKeyOtherButtonTitle
|| __DATA_CONST.__const _ICStoreDialogResponseValueAccount
|| __DATA_CONST.__const _ICStoreDialogResponseValueAuthorization
|| __DATA_CONST.__const _ICStoreDialogResponseValueBackground
|| __DATA_CONST.__const _ICStoreDialogResponseValueBuy
|| __DATA_CONST.__const _ICStoreDialogResponseValueCancel
|| __DATA_CONST.__const _ICStoreDialogResponseValueGoto
|| __DATA_CONST.__const _ICStoreDialogResponseValueOK
|| __DATA_CONST.__const _ICStoreDialogResponseValueOther
|| __DATA_CONST.__const _ICStoreFileAssetFairPlayInfoResponseKeyDPInfo
|| __DATA_CONST.__const _ICStoreFileAssetFairPlayInfoResponseKeyIdentifier
|| __DATA_CONST.__const _ICStoreFileAssetFairPlayInfoResponseKeyPinf
|| __DATA_CONST.__const _ICStoreFileAssetFairPlayInfoResponseKeySinf
|| __DATA_CONST.__const _ICStoreFileAssetFairPlayInfoResponseKeySinf2
|| __DATA_CONST.__const _ICStoreFinanceItemMetadataMediaTypeFeatureMovie
|| __DATA_CONST.__const _ICStoreFinanceItemMetadataMediaTypeMusicVideo
|| __DATA_CONST.__const _ICStoreFinanceItemMetadataMediaTypeSong
|| __DATA_CONST.__const _ICStoreFinanceItemMetadataMediaTypeTVEpisode
|| __DATA_CONST.__const _ICStoreHLSAssetInfoKeyProtocolTypeSimplified
|| __DATA_CONST.__const _ICStoreHLSAssetInfoKeyProtocolTypeStandard
|| __DATA_CONST.__const _ICStoreHTTPCookieNameITFE
|| __DATA_CONST.__const _ICStoreHTTPCookieNameITRE
|| __DATA_CONST.__const _ICStoreHTTPCookieNameITRV
|| __DATA_CONST.__const _ICStoreHTTPCookieNameITST
|| __DATA_CONST.__const _ICStoreHTTPHeaderKeyCollectionPlaybackAuthorizationToken
|| __DATA_CONST.__const _ICStoreHTTPHeaderKeyICloudDSID
|| __DATA_CONST.__const _ICStoreHTTPHeaderKeyPlaybackAuthorizationToken
|| __DATA_CONST.__const _ICStoreHTTPHeaderKeyXAppleAMD
|| __DATA_CONST.__const _ICStoreHTTPHeaderKeyXAppleAMDAction
|| __DATA_CONST.__const _ICStoreHTTPHeaderKeyXAppleAMDData
|| __DATA_CONST.__const _ICStoreHTTPHeaderKeyXAppleAMDM
|| __DATA_CONST.__const _ICStoreHTTPHeaderKeyXAppleAMDS
|| __DATA_CONST.__const _ICStoreHTTPHeaderKeyXAppleActionSignature
|| __DATA_CONST.__const _ICStoreHTTPHeaderKeyXAppleAllowAuthTypes
|| __DATA_CONST.__const _ICStoreHTTPHeaderKeyXAppleApplicationSite
|| __DATA_CONST.__const _ICStoreHTTPHeaderKeyXAppleCachePolicy
|| __DATA_CONST.__const _ICStoreHTTPHeaderKeyXAppleClientApplication
|| __DATA_CONST.__const _ICStoreHTTPHeaderKeyXAppleClientTime
|| __DATA_CONST.__const _ICStoreHTTPHeaderKeyXAppleCloudMediaLibraryID
|| __DATA_CONST.__const _ICStoreHTTPHeaderKeyXAppleConnectionType
|| __DATA_CONST.__const _ICStoreHTTPHeaderKeyXAppleDeviceModelKey
|| __DATA_CONST.__const _ICStoreHTTPHeaderKeyXAppleEnqueuerPrivateListening
|| __DATA_CONST.__const _ICStoreHTTPHeaderKeyXAppleEnqueuerStoreFront
|| __DATA_CONST.__const _ICStoreHTTPHeaderKeyXAppleIssuingProcess
|| __DATA_CONST.__const _ICStoreHTTPHeaderKeyXAppleJingleCorrelationKey
|| __DATA_CONST.__const _ICStoreHTTPHeaderKeyXAppleMD
|| __DATA_CONST.__const _ICStoreHTTPHeaderKeyXAppleMDAction
|| __DATA_CONST.__const _ICStoreHTTPHeaderKeyXAppleMDData
|| __DATA_CONST.__const _ICStoreHTTPHeaderKeyXAppleMDM
|| __DATA_CONST.__const _ICStoreHTTPHeaderKeyXAppleMDS
|| __DATA_CONST.__const _ICStoreHTTPHeaderKeyXApplePrivateListening
|| __DATA_CONST.__const _ICStoreHTTPHeaderKeyXAppleRequestStoreFront
|| __DATA_CONST.__const _ICStoreHTTPHeaderKeyXAppleRequestingBundleID
|| __DATA_CONST.__const _ICStoreHTTPHeaderKeyXAppleRequestingBundleVersion
|| __DATA_CONST.__const _ICStoreHTTPHeaderKeyXAppleRequestingProcess
|| __DATA_CONST.__const _ICStoreHTTPHeaderKeyXAppleSetCookie
|| __DATA_CONST.__const _ICStoreHTTPHeaderKeyXAppleSetUserCookie
|| __DATA_CONST.__const _ICStoreHTTPHeaderKeyXAppleStorefront
|| __DATA_CONST.__const _ICStoreHTTPHeaderKeyXAppleTimezoneOffset
|| __DATA_CONST.__const _ICStoreHTTPHeaderKeyXAppleTimingApp
|| __DATA_CONST.__const _ICStoreHTTPHeaderKeyXAppleUseAMD
|| __DATA_CONST.__const _ICStoreHTTPHeaderKeyXCache
|| __DATA_CONST.__const _ICStoreHTTPHeaderKeyXDSID
|| __DATA_CONST.__const _ICStoreHTTPHeaderKeyXEnqueuerDSID
|| __DATA_CONST.__const _ICStoreHTTPHeaderKeyXGUID
|| __DATA_CONST.__const _ICStoreHTTPHeaderKeyXRequestTimestamp
|| __DATA_CONST.__const _ICStoreHTTPHeaderKeyXSetAppleStoreFront
|| __DATA_CONST.__const _ICStoreHTTPHeaderKeyXWHAToken
|| __DATA_CONST.__const _ICStorePlatformKeyProfileLockup
|| __DATA_CONST.__const _ICStorePlatformKeyProfilePlay
|| __DATA_CONST.__const _ICStorePlatformKeyProfilePlaylistProduct
|| __DATA_CONST.__const _ICStorePlatformKeyProfileProduct
|| __DATA_CONST.__const _ICStorePlatformKeyProfileURL
|| __DATA_CONST.__const _ICStorePlatformOfferTypeBuy
|| __DATA_CONST.__const _ICStorePlatformOfferTypeRadio
|| __DATA_CONST.__const _ICStorePlatformOfferTypeRedownload
|| __DATA_CONST.__const _ICStorePlatformOfferTypeSubscription
|| __DATA_CONST.__const _ICStorePlatformPlatformIdentifierOmni
|| __DATA_CONST.__const _ICStoreServerErrorDomain
|| __DATA_CONST.__const _ICStoreURLQueryParameterKeyDeviceGUIDQueryParam
|| __DATA_CONST.__const _ICSubscriptionStatusOfferTypeHardware1
|| __DATA_CONST.__const _ICSubscriptionStatusOfferTypeHomePod
|| __DATA_CONST.__const _ICSubscriptionStatusOfferTypeIntro
|| __DATA_CONST.__const _ICSubscriptionStatusOfferTypeMintSpecial
|| __DATA_CONST.__const _ICSubscriptionStatusOfferTypeNone
|| __DATA_CONST.__const _ICSubscriptionStatusOfferTypeRetail
|| __DATA_CONST.__const _ICSubscriptionStatusOfferTypeStudent1
|| __DATA_CONST.__const _ICSubscriptionStatusOfferTypeWinback1
|| __DATA_CONST.__const _ICSubscriptionStatusOfferTypeWinback2
|| __DATA_CONST.__const _ICSubscriptionStatusOfferTypeWinback3
|| __DATA_CONST.__const _ICURLBagKeyAMDDomains
|| __DATA_CONST.__const _ICURLBagKeyAMPMusicAPIDomains
|| __DATA_CONST.__const _ICURLBagKeyAMSUIJSURL
|| __DATA_CONST.__const _ICURLBagKeyAMSUISources
|| __DATA_CONST.__const _ICURLBagKeyAddToSiriTagHistoryBaseURL
|| __DATA_CONST.__const _ICURLBagKeyAddToTRHistoryBaseURL
|| __DATA_CONST.__const _ICURLBagKeyAddToWishListURL
|| __DATA_CONST.__const _ICURLBagKeyArtistNewContent
|| __DATA_CONST.__const _ICURLBagKeyAuthCanPost
|| __DATA_CONST.__const _ICURLBagKeyAuthorizeMachine
|| __DATA_CONST.__const _ICURLBagKeyAutoEnrollmentPercentage
|| __DATA_CONST.__const _ICURLBagKeyBrowseGroupingURL
|| __DATA_CONST.__const _ICURLBagKeyBuyProduct
|| __DATA_CONST.__const _ICURLBagKeyCloudAddComputer
|| __DATA_CONST.__const _ICURLBagKeyCloudWelcome
|| __DATA_CONST.__const _ICURLBagKeyCommerceApp
|| __DATA_CONST.__const _ICURLBagKeyCommerceAppBaseUrl
|| __DATA_CONST.__const _ICURLBagKeyCommerceAppFallbackUrl
|| __DATA_CONST.__const _ICURLBagKeyCommerceUIURLs
|| __DATA_CONST.__const _ICURLBagKeyCountryCode
|| __DATA_CONST.__const _ICURLBagKeyDelegatePlayback
|| __DATA_CONST.__const _ICURLBagKeyDisableSubscription
|| __DATA_CONST.__const _ICURLBagKeyEnableSubscription
|| __DATA_CONST.__const _ICURLBagKeyEnhancedAudio
|| __DATA_CONST.__const _ICURLBagKeyExplicitContentAgeVerificationURL
|| __DATA_CONST.__const _ICURLBagKeyExplicitContentRequiresAgeVerification
|| __DATA_CONST.__const _ICURLBagKeyExplicitContentTreatment
|| __DATA_CONST.__const _ICURLBagKeyFetchMiniSinfs
|| __DATA_CONST.__const _ICURLBagKeyFinanceApp
|| __DATA_CONST.__const _ICURLBagKeyForYouURL
|| __DATA_CONST.__const _ICURLBagKeyFuseCarrierMccMncList
|| __DATA_CONST.__const _ICURLBagKeyFuseHeaderEnrichment
|| __DATA_CONST.__const _ICURLBagKeyFuseHeaderEnrichmentResponse
|| __DATA_CONST.__const _ICURLBagKeyGUIDURLs
|| __DATA_CONST.__const _ICURLBagKeyGetPlayInfo
|| __DATA_CONST.__const _ICURLBagKeyGetShareIdentifiers
|| __DATA_CONST.__const _ICURLBagKeyGetSubscriptionOffersSrv
|| __DATA_CONST.__const _ICURLBagKeyGetSubscriptionStatus
|| __DATA_CONST.__const _ICURLBagKeyGetSubscriptionStatusSrvURL
|| __DATA_CONST.__const _ICURLBagKeyGetWholeHouseAudioPlayInfo
|| __DATA_CONST.__const _ICURLBagKeyIOSAppURL
|| __DATA_CONST.__const _ICURLBagKeyInAppMessages
|| __DATA_CONST.__const _ICURLBagKeyIsMatchServiceEnabled
|| __DATA_CONST.__const _ICURLBagKeyJSAppURL
|| __DATA_CONST.__const _ICURLBagKeyLanguage
|| __DATA_CONST.__const _ICURLBagKeyLanguageTag
|| __DATA_CONST.__const _ICURLBagKeyLibraryAuthServiceTokenURL
|| __DATA_CONST.__const _ICURLBagKeyLibraryDAAP
|| __DATA_CONST.__const _ICURLBagKeyMachineDataFinishProvisioningURL_1_0
|| __DATA_CONST.__const _ICURLBagKeyMachineDataFinishProvisioningURL_1_5
|| __DATA_CONST.__const _ICURLBagKeyMachineDataSyncURL_1_0
|| __DATA_CONST.__const _ICURLBagKeyMachineDataSyncURL_1_5
|| __DATA_CONST.__const _ICURLBagKeyManageAddFundsURL
|| __DATA_CONST.__const _ICURLBagKeyManageSubscriptionsV2URL
|| __DATA_CONST.__const _ICURLBagKeyMarketingItemDynamicUIUrl
|| __DATA_CONST.__const _ICURLBagKeyMarketingItemMediaAPIPath
|| __DATA_CONST.__const _ICURLBagKeyMarketingItemMediaAPIRealmMappings
|| __DATA_CONST.__const _ICURLBagKeyMatchRedownloadURL
|| __DATA_CONST.__const _ICURLBagKeyMatchStatusURL
|| __DATA_CONST.__const _ICURLBagKeyMaxMiniSinfBatchSize
|| __DATA_CONST.__const _ICURLBagKeyMediaContentTastePostURL
|| __DATA_CONST.__const _ICURLBagKeyMediaContentTasteRefreshIntervalInMins
|| __DATA_CONST.__const _ICURLBagKeyMescalCertificateURL
|| __DATA_CONST.__const _ICURLBagKeyMescalSetupURL
|| __DATA_CONST.__const _ICURLBagKeyMobileNetworkConstraints
|| __DATA_CONST.__const _ICURLBagKeyModifyAccount
|| __DATA_CONST.__const _ICURLBagKeyMusicCommon
|| __DATA_CONST.__const _ICURLBagKeyMusicConnect
|| __DATA_CONST.__const _ICURLBagKeyMusicFriends
|| __DATA_CONST.__const _ICURLBagKeyMusicSubscription
|| __DATA_CONST.__const _ICURLBagKeyMusicSubscriptionOffersForStorefront
|| __DATA_CONST.__const _ICURLBagKeyMusicTabs
|| __DATA_CONST.__const _ICURLBagKeyMusicUserToken
|| __DATA_CONST.__const _ICURLBagKeyPMFeedbackBaseURL
|| __DATA_CONST.__const _ICURLBagKeyPastisCertificateURL
|| __DATA_CONST.__const _ICURLBagKeyPastisKeyServerURL
|| __DATA_CONST.__const _ICURLBagKeyPersonalizedStorePlatform
|| __DATA_CONST.__const _ICURLBagKeyPlayActivityFeedRequestPostURL
|| __DATA_CONST.__const _ICURLBagKeyPlayMoreLikeThisURL
|| __DATA_CONST.__const _ICURLBagKeyPlaybackAuthorizationTokenTTLSeconds
|| __DATA_CONST.__const _ICURLBagKeyPurchaseDAAP
|| __DATA_CONST.__const _ICURLBagKeyPurchaseRedownloadURL
|| __DATA_CONST.__const _ICURLBagKeyPushNotificationTypes
|| __DATA_CONST.__const _ICURLBagKeyPushNotifications
|| __DATA_CONST.__const _ICURLBagKeyRadioDictionary
|| __DATA_CONST.__const _ICURLBagKeyRadioGroupingURL
|| __DATA_CONST.__const _ICURLBagKeyRadioTab
|| __DATA_CONST.__const _ICURLBagKeyRestoreConfiguration
|| __DATA_CONST.__const _ICURLBagKeyRevokeMusicUserTokenURL
|| __DATA_CONST.__const _ICURLBagKeySetParentalControl
|| __DATA_CONST.__const _ICURLBagKeySignSAPRequest
|| __DATA_CONST.__const _ICURLBagKeySignSAPResponse
|| __DATA_CONST.__const _ICURLBagKeySignedActions
|| __DATA_CONST.__const _ICURLBagKeySongDownloadDoneURL
|| __DATA_CONST.__const _ICURLBagKeyStoreFrontID
|| __DATA_CONST.__const _ICURLBagKeyStorefrontHeaderSuffix
|| __DATA_CONST.__const _ICURLBagKeySubscriptionDownload
|| __DATA_CONST.__const _ICURLBagKeySubscriptionStatusRefreshIntervalSeconds
|| __DATA_CONST.__const _ICURLBagKeySuzeLeaseRenewURL
|| __DATA_CONST.__const _ICURLBagKeySuzeLeaseStartURL
|| __DATA_CONST.__const _ICURLBagKeySuzeLeaseStopURL
|| __DATA_CONST.__const _ICURLBagKeyTrustedDomains
|| __DATA_CONST.__const _ICURLBagKeyURLRegexMap
|| __DATA_CONST.__const _ICURLBagKeyUnpersonalizedStorePlatform
|| __DATA_CONST.__const _ICURLBagKeyUseApplePayClassic
|| __DATA_CONST.__const _ICURLBagProviderDidUpdateBagNotification
|| __DATA_CONST.__const _ICURLBagProviderDidUpdateBagNotificationRequestContextUserInfoKey
|| __DATA_CONST.__const _ICURLBagProviderDidUpdateBagNotificationURLBagUserInfoKey
|| __DATA_CONST.__const _ICURLBagRadioKeyBaseURL
|| __DATA_CONST.__const _ICURLBagRadioKeyLikeEventURL
|| __DATA_CONST.__const _ICURLResponseHandlingRetryReasonAuthenticationPerformed
|| __DATA_CONST.__const _ICURLResponseHandlingRetryReasonDialogProcessed
|| __DATA_CONST.__const _ICURLResponseHandlingRetryReasonMachineDataActionPerformed
|| __DATA_CONST.__const _ICURLResponseHandlingRetryReasonOther
|| __DATA_CONST.__const _ICUserIdentityForMusicSubscriptionStatusDidChangeKey
|| __DATA_CONST.__const _ICUserIdentityStoreDelegateAccountStoreDidChangeNotification
|| __DATA_CONST.__const _ICUserIdentityStoreDidChangeNotification
|| __DATA_CONST.__const _ICUserIdentityStoreLocalStoreAccountPropertiesDidChangeNotification
|| __DATA_CONST.__const _ICUserNotificationSettingsAreAuthorizedUserInfoKey
|| __DATA_CONST.__const _ICUserNotificationSettingsDidChangeNotification
|| __DATA_CONST.__const _ICWiFiManagerWiFiDidChangeNotification
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICADIUtilities
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICAgeVerificationManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICAgeVerificationState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICAsyncBlockOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICAsyncOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICBook
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICClientInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICCloudAddReferral
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICCloudAvailabilityController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICCloudClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICCloudClientAvailabilityService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICCloudItemIDList
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICCloudServiceStatusMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICCloudServiceStatusRemoteMonitoring
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICConnectionConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICDefaults
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICDelegateAccountStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICDelegateAccountStoreOptions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICDelegateAccountStoreReader
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICDelegateAccountStoreSQLWriter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICDelegateAccountStoreSchema
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICDelegateAccountStoreServiceListener
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICDelegationProviderService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICDeveloperTokenFetchRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICDeviceInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICDeviceSetupStatusMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICEnvironmentMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICHTTPArchive
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICHTTPCookieStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICIAMApplicationMessage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICIAMImage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICIAMImpressionNode
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICIAMMessageAction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICIAMMessageContent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICIAMMessagePresentationTrigger
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICIAMMessageRule
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICIAMMetricEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICIAMParameter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICIAMTriggerCondition
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICInAppMessageEntry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICInAppMessageManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICInAppMessageMetadataEntry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICInAppMessageStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICKeyedSharedInstanceManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICLibraryAuthServiceClientTokenIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICLibraryAuthServiceClientTokenProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICLibraryAuthServiceClientTokenResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICLibraryAuthServiceClientTokenStatus
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICLocalStoreAccountProperties
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICMusicSubscriptionFairPlayController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICMusicSubscriptionStatus
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICMusicSubscriptionStatusCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICMusicSubscriptionStatusController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICMusicSubscriptionStatusMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICMusicSubscriptionStatusRemoteRequesting
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICMusicSubscriptionStatusRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICMusicSubscriptionStatusRequestOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICMusicSubscriptionStatusResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICMusicSubscriptionStatusTerms
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICMusicUserTokenFetchRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICMutableClientInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICMutableLocalStoreAccountProperties
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICMutableUserIdentityProperties
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICNanoPairedDeviceStatusMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICNetworkConstraints
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICPlayActivityController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICPrivacyInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICRemoteRequestOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICRemoteRequestOperationExecuting
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICRemoteRequestOperationExecutionContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICRemoteRequestOperationExecutionResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICRequestContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICRequestOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICSAPSession
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICSQLiteConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICSQLiteConnectionOptions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICSQLiteQueryResults
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICSQLiteRow
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICSQLiteStatement
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICSagaGetAccountStatusRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICSecurityInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICStoreDialogResponseHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICStoreDialogResponseHandlerConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICStoreRequestContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICStoreURLRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICStoreURLRequestBuilderProperties
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICStoreURLResponseAuthenticationProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICStoreURLResponseHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICURLBag
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICURLBagProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICURLPerformanceMetrics
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICURLRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICURLResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICURLResponseAuthenticationProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICURLResponseHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICURLSession
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICURLSessionManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICUnfairLock
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICUserCredentialProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICUserCredentialRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICUserCredentialResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICUserIdentity
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICUserIdentityContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICUserIdentityProperties
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICUserIdentityStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICUserIdentityStoreACAccountBackend
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICUserIdentityStoreTestingBackend
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICValueHistory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ICWiFiManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICADIUtilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICAgeVerificationManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICAgeVerificationState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICAsyncBlockOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICAsyncOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICBook
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICClientInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICCloudAddReferral
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICCloudAvailabilityController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICCloudClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICCloudClientAvailabilityService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICCloudItemIDList
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICCloudServiceStatusMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICCloudServiceStatusRemoteMonitoring
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICConnectionConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICDefaults
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICDelegateAccountStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICDelegateAccountStoreOptions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICDelegateAccountStoreReader
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICDelegateAccountStoreSQLWriter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICDelegateAccountStoreSchema
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICDelegateAccountStoreServiceListener
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICDelegationProviderService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICDeveloperTokenFetchRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICDeviceInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICDeviceSetupStatusMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICEnvironmentMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICHTTPArchive
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICHTTPCookieStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICIAMApplicationMessage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICIAMImage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICIAMImpressionNode
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICIAMMessageAction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICIAMMessageContent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICIAMMessagePresentationTrigger
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICIAMMessageRule
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICIAMMetricEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICIAMParameter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICIAMTriggerCondition
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICInAppMessageEntry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICInAppMessageManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICInAppMessageMetadataEntry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICInAppMessageStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICKeyedSharedInstanceManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICLibraryAuthServiceClientTokenIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICLibraryAuthServiceClientTokenProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICLibraryAuthServiceClientTokenResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICLibraryAuthServiceClientTokenStatus
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICLocalStoreAccountProperties
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICMusicSubscriptionFairPlayController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICMusicSubscriptionStatus
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICMusicSubscriptionStatusCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICMusicSubscriptionStatusController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICMusicSubscriptionStatusMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICMusicSubscriptionStatusRemoteRequesting
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICMusicSubscriptionStatusRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICMusicSubscriptionStatusRequestOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICMusicSubscriptionStatusResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICMusicSubscriptionStatusTerms
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICMusicUserTokenFetchRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICMutableClientInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICMutableLocalStoreAccountProperties
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICMutableUserIdentityProperties
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICNanoPairedDeviceStatusMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICNetworkConstraints
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICPlayActivityController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICPrivacyInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICRemoteRequestOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICRemoteRequestOperationExecuting
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICRemoteRequestOperationExecutionContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICRemoteRequestOperationExecutionResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICRequestContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICRequestOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICSAPSession
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICSQLiteConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICSQLiteConnectionOptions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICSQLiteQueryResults
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICSQLiteRow
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICSQLiteStatement
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICSagaGetAccountStatusRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICSecurityInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICStoreDialogResponseHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICStoreDialogResponseHandlerConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICStoreRequestContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICStoreURLRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICStoreURLRequestBuilderProperties
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICStoreURLResponseAuthenticationProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICStoreURLResponseHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICURLBag
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICURLBagProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICURLPerformanceMetrics
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICURLRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICURLResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICURLResponseAuthenticationProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICURLResponseHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICURLSession
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICURLSessionManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICUnfairLock
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICUserCredentialProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICUserCredentialRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICUserCredentialResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICUserIdentity
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICUserIdentityContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICUserIdentityProperties
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICUserIdentityStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICUserIdentityStoreACAccountBackend
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICUserIdentityStoreTestingBackend
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICValueHistory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ICWiFiManager
|| __TEXT.__const _ICDelegateAccountStoreExpiredTokenPruningInterval
|| __TEXT.__const _ICSAPVersionStore
|| __TEXT.__const _ICURLResponseHandlingRetryReasonNone
|| __TEXT.__const _kICStorePlatformRequestMaximumBatchSize
|| __TEXT.__const _kICStorePlatformRequestMaximumLargeProfileBatchSize
|| __TEXT.__text _ICBundleIdentifierForSystemApplicationType
|| __TEXT.__text _ICCDelegationProviderServiceXPCGetInterface
|| __TEXT.__text _ICCloudClientCreateArtworkInfoDictionary
|| __TEXT.__text _ICCloudClientGetStringForAddToPlaylistBehavior
|| __TEXT.__text _ICCloudClientGetStringForRequestReason
|| __TEXT.__text _ICCloudClientIsSagaEnabledInURLBag
|| __TEXT.__text _ICCloudClientMigrateAllowMatchOnCellularToAllowAutoDownloadOnCellular
|| __TEXT.__text _ICCloudClientMigrateStoreAllowAutomaticDownloadsOnCellularToMusicAllowDownloadOnCellular
|| __TEXT.__text _ICCloudContentTastePBFuseItemPreferenceReadFrom
|| __TEXT.__text _ICCloudContentTastePBFusePreferencesReadFrom
|| __TEXT.__text _ICCloudServerSupportedServiceForName
|| __TEXT.__text _ICCloudServerSupportedServiceGetName
|| __TEXT.__text _ICCloudServiceCapabilitiesGetDescription
|| __TEXT.__text _ICCreateLoggableValueForDSID
|| __TEXT.__text _ICDAAPUtilitiesCreateData
|| __TEXT.__text _ICDAAPUtilitiesCreateDataForContainer
|| __TEXT.__text _ICDAAPUtilitiesCreateDataForItemKindContainer
|| __TEXT.__text _ICDAAPUtilitiesWriteContainer
|| __TEXT.__text _ICDAAPUtilitiesWriteProperty
|| __TEXT.__text _ICDefaultCacheDirectory
|| __TEXT.__text _ICDelegateAccountStorePrimaryKeyForUserIdentity
|| __TEXT.__text _ICDelegateAccountStoreRaiseInvalidUserIdentityException
|| __TEXT.__text _ICDelegateAccountStoreRaiseOutOfScopeException
|| __TEXT.__text _ICDelegateAccountStoreServiceClientGetInterface
|| __TEXT.__text _ICDelegateAccountStoreServiceGetInterface
|| __TEXT.__text _ICDelegateTokenPersistentValueForTokenType
|| __TEXT.__text _ICDelegateTokenTypeForPersistentValue
|| __TEXT.__text _ICEnvironmentNetworkTypeIsBluetooth
|| __TEXT.__text _ICEnvironmentNetworkTypeIsCellular
|| __TEXT.__text _ICEnvironmentNetworkTypeIsWiFi
|| __TEXT.__text _ICEnvironmentNetworkTypeIsWifi
|| __TEXT.__text _ICEnvironmentNetworkTypeIsWired
|| __TEXT.__text _ICFairPlayCopyKeyBagSyncData
|| __TEXT.__text _ICFairPlayCopyKeyBagSyncDataWithContextID
|| __TEXT.__text _ICFairPlayGetContextIdentifier
|| __TEXT.__text _ICFairPlayGetContextIdentifierForFolderPath
|| __TEXT.__text _ICFairPlayGetHardwareInfo
|| __TEXT.__text _ICFairPlayGetHardwareInfoFromDeviceUDID
|| __TEXT.__text _ICFairPlayImportKeybagData
|| __TEXT.__text _ICFairPlayImportKeybagDataWithContextID
|| __TEXT.__text _ICFileURLIsLocalReadable
|| __TEXT.__text _ICFileURLIsLocalWritable
|| __TEXT.__text _ICGetCloudDAAPClientPrefix
|| __TEXT.__text _ICIAMApplicationBadgeReadFrom
|| __TEXT.__text _ICIAMApplicationMessageReadFrom
|| __TEXT.__text _ICIAMApplicationMessageSyncCommandReadFrom
|| __TEXT.__text _ICIAMApplicationMessageSyncResponseReadFrom
|| __TEXT.__text _ICIAMImageReadFrom
|| __TEXT.__text _ICIAMImpressionNodeReadFrom
|| __TEXT.__text _ICIAMLocalNotificationReadFrom
|| __TEXT.__text _ICIAMLogEventRequestReadFrom
|| __TEXT.__text _ICIAMLogEventResponseReadFrom
|| __TEXT.__text _ICIAMMessageActionReadFrom
|| __TEXT.__text _ICIAMMessageContentReadFrom
|| __TEXT.__text _ICIAMMessagePresentationTriggerReadFrom
|| __TEXT.__text _ICIAMMessageRuleReadFrom
|| __TEXT.__text _ICIAMMetricEventReadFrom
|| __TEXT.__text _ICIAMParameterReadFrom
|| __TEXT.__text _ICIAMSerialCheckRequestReadFrom
|| __TEXT.__text _ICIAMSerialCheckResponseReadFrom
|| __TEXT.__text _ICIAMSynchronizeMessagesRequestReadFrom
|| __TEXT.__text _ICIAMSynchronizeMessagesResponseReadFrom
|| __TEXT.__text _ICIAMTriggerConditionReadFrom
|| __TEXT.__text _ICMusicSubscriptionStatusCapabilitiesGetDescription
|| __TEXT.__text _ICMusicSubscriptionStatusReasonTypeGetDescription
|| __TEXT.__text _ICMusicSubscriptionStatusTypeGetDescription
|| __TEXT.__text _ICSDelegationProviderServiceXPCGetInterface
|| __TEXT.__text _ICSQLiteDeleteDatabase
|| __TEXT.__text _ICSQLiteGetCurrentError
|| __TEXT.__text _ICSQLiteGetRelatedFilePath
|| __TEXT.__text _ICSQLiteOpen
|| __TEXT.__text _ICSQLiteTruncateDatabase
|| __TEXT.__text _ICSQLiteUnlinkSHMFileForDatabase
|| __TEXT.__text _ICSecureKeyDeliveryRequestSupportsAssetResourceLoadingRequest
|| __TEXT.__text _ICSiriPostDynamiteClientStateChangedNotification
|| __TEXT.__text _ICStoreArtworkInfoBestArtworkMatchingSize
|| __TEXT.__text _ICStoreVideoArtworkInfoBestSizesForSize
|| __TEXT.__text _ICSystemApplicationIsInstalled
|| __TEXT.__text _ICSystemApplicationTypeForBundleIdentifier
|| __TEXT.__text _ICURLResponseStatusCodeGetDebuggingDescription
|| __TEXT.__text _ICURLResponseStatusCodeGetDescription
|| __TEXT.__text _ICURLResponseStatusCodeGetExtendedDescription
|| __TEXT.__text _ICUserIdentityTimestamp
|| __TEXT.__text _ICUserNotificationGetResponseButton
|| __TEXT.__text _ICUserVerificationInteractionLevelDescription
|| __TEXT.__text _NSStringFromICLiveLinkEventType
__ AVFAudio: _AVAudioSessionMediaServicesWereLostNotification
__ AVFAudio: _AVAudioSessionMediaServicesWereResetNotification
__ AVFoundation: _AVAssetDownloadSessionAllowsCellularAccessKey
__ AVFoundation: _AVAssetDownloadSessionClientBundleIdentifierKey
__ AVFoundation: _AVAssetDownloadSessionHTTPHeaderFieldsKey
__ AVFoundation: _AVAssetDownloadSessionMaxSizeAllowedForCellularAccessKey
__ AVFoundation: _AVAssetDownloadSessionPriorityKey
__ AVFoundation: _AVAssetDownloadSessionPurchaseBundleKey
__ AVFoundation: _AVAssetDownloadSessioniTunesStoreContentDSIDKey
__ AVFoundation: _AVAssetDownloadSessioniTunesStoreContentDownloadParametersKey
__ AVFoundation: _AVAssetDownloadSessioniTunesStoreContentIDKey
__ AVFoundation: _AVAssetDownloadSessioniTunesStoreContentInfoKey
__ AVFoundation: _AVAssetDownloadSessioniTunesStoreContentPurchasedMediaKindKey
__ AVFoundation: _AVAssetDownloadSessioniTunesStoreContentTypeKey
__ AVFoundation: _AVAssetDownloadSessioniTunesStoreContentUserAgentKey
__ AVFoundation: _AVAssetDownloadTaskDestinationURLKey
__ AVFoundation: _AVAssetDownloadTaskMaximumAudioSampleRateKey
__ AVFoundation: _AVAssetDownloadTaskMediaSelectionPrefersMultichannelKey
__ AVFoundation: _AVAssetDownloadTaskMinimumRequiredMediaBitrateKey
__ AVFoundation: _AVAssetDownloadTaskPrefersLosslessAudioKey
__ AVFoundation: _AVContentKeySystemFairPlayStreaming
__ AVFoundation: _AVPlaybackCoordinatorDidIssueCommandToPlaybackObjectKeyCommand
__ AVFoundation: _AVPlaybackCoordinatorDidIssueCommandToPlaybackObjectKeyParticipantUUID
__ AVFoundation: _AVPlaybackCoordinatorDidIssueCommandToPlaybackObjectKeyRate
__ AVFoundation: _AVPlaybackCoordinatorDidIssueCommandToPlaybackObjectNotification
__ AVFoundation: _AVPlaybackCoordinatorPlaybackObjectCommandSetRate
__ AVFoundation: _AVPlaybackCoordinatorPlaybackObjectCommandSetRateAndTime
__ AVFoundation: _AVPlaybackCoordinatorPlaybackObjectCommandSetTime
__ AVFoundation: _AVStreamingKeyDeliveryContentKeyType
__ AVFoundation: _AVURLAssetURLRequestAttributionKey
__ AVFoundation: _OBJC_CLASS_$_AVContentKeyRequest
__ AVFoundation: _OBJC_CLASS_$_AVContentKeyResponse
__ AVFoundation: _OBJC_CLASS_$_AVContentKeySession
__ AVFoundation: _OBJC_CLASS_$_AVURLAsset
__ Accounts: _ACAccountTypeIdentifierAppleAccount
__ Accounts: _ACAccountTypeIdentifieriTunesStore
__ Accounts: _ACErrorDomain
__ Accounts: _OBJC_CLASS_$_ACAccount
__ Accounts: _OBJC_CLASS_$_ACAccountStore
__ Accounts: _OBJC_CLASS_$_ACMonitoredAccountStore
__ Accounts: _kAccountDataclassBackup
__ AppSupport: _CPSharedResourcesDirectory
__ AppSupport: _CPSystemRootDirectory
__ AppSupport: _OBJC_CLASS_$_RadiosPreferences
__ AppleAccount: _AAAccountClassPrimary
__ AppleMediaServices: _AMSAccountFlagAgeVerificationExpiration
__ AppleMediaServices: _OBJC_CLASS_$_AMSAcknowledgePrivacyTask
__ AppleMediaServices: _OBJC_CLASS_$_AMSAuthenticateOptions
__ AppleMediaServices: _OBJC_CLASS_$_AMSAuthenticateTask
__ AppleMediaServices: _OBJC_CLASS_$_AMSAutomaticDownloadKindsSetTask
__ AppleMediaServices: _OBJC_CLASS_$_AMSBag
__ AppleMediaServices: _OBJC_CLASS_$_AMSBagKeySet
__ AppleMediaServices: _OBJC_CLASS_$_AMSBagValue
__ AppleMediaServices: _OBJC_CLASS_$_AMSPromise
__ AppleMediaServices: _OBJC_CLASS_$_AMSPushConfiguration
__ AppleMediaServices: _OBJC_CLASS_$_AMSPushHandler
__ AppleMediaServices: _OBJC_CLASS_$_AMSSnapshotBagBuilder
__ AppleMediaServices: _OBJC_CLASS_$_AMSSystemAlertDialogTask
__ AppleMediaServices: _OBJC_CLASS_$_AMSURLRequestEncoder
__ AppleMediaServices: _OBJC_METACLASS_$_AMSPromise
__ ApplePushService: _APSEnvironmentProduction
__ AuthKit: _OBJC_CLASS_$_AKAppleIDSession
__ BackBoardServices: _BKSApplicationStateAll
__ BackBoardServices: _OBJC_CLASS_$_BKSApplicationStateMonitor
__ CFNetwork: _CFURLResponseCopyPeerAddress
__ CFNetwork: _NSNetServicesErrorCode
__ CFNetwork: _NSNetServicesErrorDomain
__ CFNetwork: _NSURLAuthenticationMethodClientCertificate
__ CFNetwork: _NSURLAuthenticationMethodServerTrust
__ CFNetwork: _OBJC_CLASS_$_AVAssetDownloadURLSession
__ CFNetwork: _OBJC_CLASS_$_NSHTTPCookie
__ CFNetwork: _OBJC_CLASS_$_NSHTTPCookieStorage
__ CFNetwork: _OBJC_CLASS_$_NSHTTPURLResponse
__ CFNetwork: _OBJC_CLASS_$_NSMutableURLRequest
__ CFNetwork: _OBJC_CLASS_$_NSNetService
__ CFNetwork: _OBJC_CLASS_$_NSNetServiceBrowser
__ CFNetwork: _OBJC_CLASS_$_NSURLCredential
__ CFNetwork: _OBJC_CLASS_$_NSURLRequest
__ CFNetwork: _OBJC_CLASS_$_NSURLResponse
__ CFNetwork: _OBJC_CLASS_$_NSURLSession
__ CFNetwork: _OBJC_CLASS_$_NSURLSessionConfiguration
__ CFNetwork: __kCFStreamPropertyAllowConstrainedNetworkAccess
__ CFNetwork: _kCFStreamPropertyConnectionFallbackEnabled
__ CacheDelete: _CacheDeleteCacheable
__ CacheDelete: _CacheDeletePurgeSpaceWithInfo
__ Celestial: _AVFileProcessorAttribute_FileMD5
__ Celestial: _AVFileProcessorAttribute_NewFileExtension
__ Celestial: _AVFileProcessorAttribute_Sinfs
__ Celestial: _OBJC_CLASS_$_AVFileProcessor
__ CoreFoundation: _CFArrayGetTypeID
__ CoreFoundation: _CFBooleanGetTypeID
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFDataGetBytePtr
__ CoreFoundation: _CFDataGetBytes
__ CoreFoundation: _CFDataGetLength
__ CoreFoundation: _CFDataGetTypeID
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _CFNumberGetType
__ CoreFoundation: _CFNumberGetTypeID
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesCopyValue
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFPreferencesSetAppValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRunLoopAddSource
__ CoreFoundation: _CFRunLoopGetMain
__ CoreFoundation: _CFStringCompare
__ CoreFoundation: _CFStringCreateWithBytes
__ CoreFoundation: _CFStringGetCStringPtr
__ CoreFoundation: _CFStringGetCharactersPtr
__ CoreFoundation: _CFStringGetFastestEncoding
__ CoreFoundation: _CFStringGetLength
__ CoreFoundation: _CFStringGetTypeID
__ CoreFoundation: _CFUUIDCreate
__ CoreFoundation: _CFUUIDGetUUIDBytes
__ CoreFoundation: _CFUserNotificationCreate
__ CoreFoundation: _CFUserNotificationCreateRunLoopSource
__ CoreFoundation: _CFUserNotificationReceiveResponse
__ CoreFoundation: _NSCalendarIdentifierGregorian
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _NSStreamDataWrittenToMemoryStreamKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSOutputStream
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: __CFCopySystemVersionDictionary
__ CoreFoundation: __NSIsNSArray
__ CoreFoundation: __NSIsNSData
__ CoreFoundation: __NSIsNSDate
__ CoreFoundation: __NSIsNSDictionary
__ CoreFoundation: __NSIsNSNumber
__ CoreFoundation: __NSIsNSString
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: __kCFBundleShortVersionStringKey
__ CoreFoundation: __kCFSystemVersionProductVersionKey
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanFalse
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFBundleVersionKey
__ CoreFoundation: _kCFPreferencesAnyApplication
__ CoreFoundation: _kCFPreferencesAnyHost
__ CoreFoundation: _kCFPreferencesCurrentUser
__ CoreFoundation: _kCFRunLoopCommonModes
__ CoreFoundation: _kCFUserNotificationAlertHeaderKey
__ CoreFoundation: _kCFUserNotificationAlertMessageKey
__ CoreFoundation: _kCFUserNotificationAlertTopMostKey
__ CoreFoundation: _kCFUserNotificationAlternateButtonTitleKey
__ CoreFoundation: _kCFUserNotificationDefaultButtonTitleKey
__ CoreFoundation: _kCFUserNotificationOtherButtonTitleKey
__ CoreGraphics: _CGColorCreate
__ CoreGraphics: _CGColorSpaceCreateDeviceRGB
__ CoreGraphics: _CGColorSpaceRelease
__ CoreGraphics: _CGSizeZero
__ CoreMedia: _CMTimeGetSeconds
__ CoreServices: _OBJC_CLASS_$_LSApplicationRecord
__ CoreServices: _OBJC_CLASS_$_LSBundleRecord
__ CoreTelephony: _OBJC_CLASS_$_CTBundle
__ CoreTelephony: _OBJC_CLASS_$_CTMessageCenter
__ CoreTelephony: _OBJC_CLASS_$_CTPhoneNumber
__ CoreTelephony: _OBJC_CLASS_$_CoreTelephonyClient
__ CoreTelephony: __CTServerConnectionCopyCellularUsagePolicy
__ CoreTelephony: __CTServerConnectionCopyDataStatus
__ CoreTelephony: __CTServerConnectionCopyOperatorName
__ CoreTelephony: __CTServerConnectionCreate
__ CoreTelephony: __CTServerConnectionCreateOnTargetQueue
__ CoreTelephony: __CTServerConnectionGetRegistrationStatus
__ CoreTelephony: __CTServerConnectionRegisterForNotification
__ CoreTelephony: __CTServerConnectionSetTargetQueue
__ CoreTelephony: __CTServerConnectionUnregisterForNotification
__ CoreTelephony: _kCTCellMonitorARFCN
__ CoreTelephony: _kCTCellMonitorBandInfo
__ CoreTelephony: _kCTCellMonitorBandwidth
__ CoreTelephony: _kCTCellMonitorCellRadioAccessTechnology
__ CoreTelephony: _kCTCellMonitorCellType
__ CoreTelephony: _kCTCellMonitorCellTypeServing
__ CoreTelephony: _kCTCellMonitorDeploymentType
__ CoreTelephony: _kCTCellMonitorECN0
__ CoreTelephony: _kCTCellMonitorIsSA
__ CoreTelephony: _kCTCellMonitorMCC
__ CoreTelephony: _kCTCellMonitorMNC
__ CoreTelephony: _kCTCellMonitorNRARFCN
__ CoreTelephony: _kCTCellMonitorRSCP
__ CoreTelephony: _kCTCellMonitorRSRP
__ CoreTelephony: _kCTCellMonitorRSRQ
__ CoreTelephony: _kCTCellMonitorRSSI
__ CoreTelephony: _kCTCellMonitorSNR
__ CoreTelephony: _kCTCellMonitorUARFCN
__ CoreTelephony: _kCTCellularDataUsagePolicyDeny
__ CoreTelephony: _kCTCellularUsagePolicyDataAllowed
__ CoreTelephony: _kCTConnectionInvalidatedNotification
__ CoreTelephony: _kCTDataConnectionServiceTypeInternet
__ CoreTelephony: _kCTPerAppNetworkDataAccessPolicyChangedNotification
__ CoreTelephony: _kCTRegistrationDataActive
__ CoreTelephony: _kCTRegistrationDataContextID
__ CoreTelephony: _kCTRegistrationDataIndicator
__ CoreTelephony: _kCTRegistrationDataIndicator2G
__ CoreTelephony: _kCTRegistrationDataIndicator2_5G
__ CoreTelephony: _kCTRegistrationDataIndicator3G
__ CoreTelephony: _kCTRegistrationDataIndicator3_5G
__ CoreTelephony: _kCTRegistrationDataIndicator3_75G
__ CoreTelephony: _kCTRegistrationDataIndicator4G
__ CoreTelephony: _kCTRegistrationDataIndicator5G
__ CoreTelephony: _kCTRegistrationDataIndicator6G
__ CoreTelephony: _kCTRegistrationDataIndicator7G
__ CoreTelephony: _kCTRegistrationDataIndicator8G
__ CoreTelephony: _kCTRegistrationDataIndicator9G
__ CoreTelephony: _kCTRegistrationDataIndicatorH_Plus
__ CoreTelephony: _kCTRegistrationDataStatusChangedNotification
__ CoreTelephony: _kCTRegistrationOperatorNameChangedNotification
__ CoreTelephony: _kCTRegistrationStatusChangedNotification
__ CoreTelephony: _kCTWiFiDataUsagePolicy
__ CoreUtils: _PairingSessionCreate
__ CoreUtils: _PairingSessionDeriveKey
__ CoreUtils: _PairingSessionExchange
__ CoreUtils: _PairingSessionSetFlags
__ CoreUtils: _PairingSessionSetSetupCode
__ CoreUtils: _chacha20_poly1305_decrypt_all_64x64
__ CoreUtils: _chacha20_poly1305_encrypt_all_64x64
__ DAAPKit: _OBJC_CLASS_$_DKDAAPWriter
__ Foundation: _NSClassFromString
__ Foundation: _NSDebugDescriptionErrorKey
__ Foundation: _NSFileSystemFreeSize
__ Foundation: _NSHomeDirectory
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSMapGet
__ Foundation: _NSMapInsert
__ Foundation: _NSMapRemove
__ Foundation: _NSOSStatusErrorDomain
__ Foundation: _NSSearchPathForDirectoriesInDomains
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSTemporaryDirectory
__ Foundation: _NSURLErrorDomain
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSCoder
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSDistributedNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSIndexPath
__ Foundation: _OBJC_CLASS_$_NSIndexSet
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSOperation
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPersonNameComponents
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSProgress
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSRecursiveLock
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLQueryItem
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_CLASS_$_NSXPCListener
__ Foundation: _OBJC_CLASS_$_NSXPCListenerEndpoint
__ Foundation: _OBJC_METACLASS_$_NSOperation
__ IDS: _IDSGroupSessionMessagesGroupIDKey
__ IDS: _IDSGroupSessionMessagesGroupMembersKey
__ IDS: _IDSSessionIsMultiwayKey
__ IDS: _IDSSessionSingleChannelDirectModeKey
__ IDS: _IDSSessionTransportTypeKey
__ IDS: _OBJC_CLASS_$_IDSService
__ IOKit: _IOBSDNameMatching
__ IOKit: _IOConnectCallStructMethod
__ IOKit: _IOIteratorNext
__ IOKit: _IOMainPort
__ IOKit: _IOMasterPort
__ IOKit: _IOObjectRelease
__ IOKit: _IOPSDrawingUnlimitedPower
__ IOKit: _IOPSGetPercentRemaining
__ IOKit: _IORegistryEntryCreateCFProperty
__ IOKit: _IORegistryEntryGetParentEntry
__ IOKit: _IOServiceGetMatchingServices
__ IOKit: _IOServiceMatching
__ IOKit: _IOServiceOpen
__ MediaRemote: _MRAVAirPlaySecuritySettingsGetPassword
__ MediaRemote: _MRAVAirPlaySecuritySettingsGetSecurityMode
__ MediaRemote: _MRMediaRemoteCopyLocalDeviceSystemMediaApplicationDisplayID
__ MediaRemote: _MRMediaRemoteGetReceiverAirPlaySecuritySettings
__ MediaRemote: _MRMediaRemoteGetSavedAVRoutePassword
__ MediaServices: _MSVAutoBugCaptureDomainiTunesCloud
__ MediaServices: _MSVBundleIDForAuditToken
__ MediaServices: _MSVDeviceOSIsInternalInstall
__ MediaServices: _MSVGzipCompressData
__ MediaServices: _MSVGzipDecompressData
__ MediaServices: _MSVHasherSharedSeed
__ MediaServices: _MSVMediaLoggingDirectory
__ MediaServices: _MSVMobileHomeDirectory
__ MediaServices: _MSVNanoIDCreateTaggedPointer
__ MediaServices: _MSVQRConnectionError
__ MediaServices: _MSVQRSessionServerError
__ MediaServices: _MSVTCCIdentityForCurrentProcess
__ MediaServices: _MSVWeakLinkStringConstant
__ MediaServices: _MSVWeakLinkSymbol
__ MediaServices: _OBJC_CLASS_$_MSVAutoBugCapture
__ MediaServices: _OBJC_CLASS_$_MSVBidirectionalDictionary
__ MediaServices: _OBJC_CLASS_$_MSVBlockGuard
__ MediaServices: _OBJC_CLASS_$_MSVDefaultDictionary
__ MediaServices: _OBJC_CLASS_$_MSVEntitlementUtilities
__ MediaServices: _OBJC_CLASS_$_MSVMessageParser
__ MediaServices: _OBJC_CLASS_$_MSVMutableSectionedCollection
__ MediaServices: _OBJC_CLASS_$_MSVPair
__ MediaServices: _OBJC_CLASS_$_MSVQRConnection
__ MediaServices: _OBJC_CLASS_$_MSVQRConnectionMessageCoder
__ MediaServices: _OBJC_CLASS_$_MSVStreamReader
__ MediaServices: _OBJC_CLASS_$_MSVStreamWriter
__ MediaServices: _OBJC_CLASS_$_MSVTaskAssertion
__ MediaServices: _OBJC_CLASS_$_MSVTimer
__ MediaServices: _OBJC_CLASS_$_MSVWeakProxy
__ MediaServices: _OBJC_METACLASS_$_MSVQRConnectionMessageCoder
__ MediaServices: _msv_dispatch_async_on_queue
__ MobileKeyBag: _MKBDeviceFormattedForContentProtection
__ MobileKeyBag: _MKBDeviceUnlockedSinceBoot
__ MobileKeyBag: _MKBGetDeviceLockState
__ Network: _OBJC_CLASS_$_NWPathEvaluator
__ ProtocolBuffer: _OBJC_CLASS_$_PBCodable
__ ProtocolBuffer: _OBJC_CLASS_$_PBRequest
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._bytes
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._error
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._length
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._pos
__ ProtocolBuffer: _OBJC_METACLASS_$_PBCodable
__ ProtocolBuffer: _OBJC_METACLASS_$_PBRequest
__ ProtocolBuffer: _PBDataWriterWriteBOOLField
__ ProtocolBuffer: _PBDataWriterWriteDataField
__ ProtocolBuffer: _PBDataWriterWriteDoubleField
__ ProtocolBuffer: _PBDataWriterWriteInt32Field
__ ProtocolBuffer: _PBDataWriterWriteInt64Field
__ ProtocolBuffer: _PBDataWriterWriteStringField
__ ProtocolBuffer: _PBDataWriterWriteSubmessage
__ ProtocolBuffer: _PBDataWriterWriteUint32Field
__ ProtocolBuffer: _PBDataWriterWriteUint64Field
__ ProtocolBuffer: _PBReaderPlaceMark
__ ProtocolBuffer: _PBReaderReadData
__ ProtocolBuffer: _PBReaderReadString
__ ProtocolBuffer: _PBReaderRecallMark
__ ProtocolBuffer: _PBReaderSkipValueWithTag
__ ProtocolBuffer: _PBRepeatedInt32Add
__ ProtocolBuffer: _PBRepeatedInt32Clear
__ ProtocolBuffer: _PBRepeatedInt32Copy
__ ProtocolBuffer: _PBRepeatedInt32Hash
__ ProtocolBuffer: _PBRepeatedInt32IsEqual
__ ProtocolBuffer: _PBRepeatedInt32NSArray
__ Security: _SecTaskCopyValueForEntitlement
__ Security: _SecTaskCreateFromSelf
__ Security: _kSecPolicyNameAppleAMPService
__ SoftLinking: __sl_dlopen
__ SpringBoardServices: _SBUserNotificationAllowInCarKey
__ SpringBoardServices: _SBUserNotificationDefaultButtonTag
__ SpringBoardServices: _SBUserNotificationDisplayActionButtonOnLockScreen
__ SpringBoardServices: _SBUserNotificationForcesModalAlertAppearance
__ SystemConfiguration: _SCPreferencesCreate
__ SystemConfiguration: _SCPreferencesGetValue
__ SystemConfiguration: _SCPreferencesScheduleWithRunLoop
__ SystemConfiguration: _SCPreferencesSetCallback
__ SystemConfiguration: _SCPreferencesSynchronize
__ SystemConfiguration: _SCPreferencesUnscheduleFromRunLoop
__ TCC: _TCCAccessPreflight
__ TCC: _TCCAccessRequest
__ TCC: _TCCAccessRestricted
__ TCC: _TCCAccessSetForBundleId
__ TCC: _kTCCServiceMediaLibrary
__ UserNotifications: _OBJC_CLASS_$_UNUserNotificationCenter
__ libMobileGestalt.dylib: _MGCancelNotifications
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _MGGetSInt32Answer
__ libMobileGestalt.dylib: _MGRegisterForUpdates
__ libSystem.B.dylib: _CC_MD5_Final
__ libSystem.B.dylib: _CC_MD5_Update
__ libSystem.B.dylib: _CC_SHA1
__ libSystem.B.dylib: _CC_SHA1_Final
__ libSystem.B.dylib: _CC_SHA1_Init
__ libSystem.B.dylib: _CC_SHA1_Update
__ libSystem.B.dylib: _CC_SHA256_Final
__ libSystem.B.dylib: _CC_SHA256_Update
__ libSystem.B.dylib: _CC_SHA512_Final
__ libSystem.B.dylib: _CC_SHA512_Update
__ libSystem.B.dylib: _NDR_record
__ libSystem.B.dylib: _SANDBOX_CHECK_NO_REPORT
__ libSystem.B.dylib: _XPC_ACTIVITY_DELAY
__ libSystem.B.dylib: _XPC_ACTIVITY_GRACE_PERIOD
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_1_DAY
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_1_HOUR
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_7_DAYS
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY_UTILITY
__ libSystem.B.dylib: _XPC_ACTIVITY_REPEATING
__ libSystem.B.dylib: _XPC_ACTIVITY_REQUIRE_SCREEN_SLEEP
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___memcpy_chk
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _atexit
__ libSystem.B.dylib: _bootstrap_look_up
__ libSystem.B.dylib: _bootstrap_port
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_assert_queue_barrier
__ libSystem.B.dylib: _dispatch_assert_queue_not$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_barrier_async
__ libSystem.B.dylib: _dispatch_barrier_sync
__ libSystem.B.dylib: _dispatch_block_create_with_qos_class
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_async
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_suspend
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlclose
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _fmod
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _getprogname
__ libSystem.B.dylib: _gettimeofday
__ libSystem.B.dylib: _inet_ntop
__ libSystem.B.dylib: _kOSThermalNotificationPressureLevelName
__ libSystem.B.dylib: _ldiv
__ libSystem.B.dylib: _lldiv
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _mach_msg
__ libSystem.B.dylib: _mach_msg_destroy
__ libSystem.B.dylib: _mach_port_deallocate
__ libSystem.B.dylib: _mach_task_self_
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memset_s
__ libSystem.B.dylib: _mig_dealloc_reply_port
__ libSystem.B.dylib: _mig_get_reply_port
__ libSystem.B.dylib: _mig_put_reply_port
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_check
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _notify_post
__ libSystem.B.dylib: _notify_register_check
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _notify_set_state
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_signpost_id_generate
__ libSystem.B.dylib: _os_signpost_id_make_with_pointer
__ libSystem.B.dylib: _os_unfair_lock_assert_not_owner
__ libSystem.B.dylib: _os_unfair_lock_assert_owner
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _os_unfair_recursive_lock_lock_with_options
__ libSystem.B.dylib: _os_unfair_recursive_lock_unlock
__ libSystem.B.dylib: _pthread_mutex_lock
__ libSystem.B.dylib: _pthread_mutex_unlock
__ libSystem.B.dylib: _pthread_once
__ libSystem.B.dylib: _pthread_rwlock_destroy
__ libSystem.B.dylib: _pthread_rwlock_init
__ libSystem.B.dylib: _pthread_rwlock_rdlock
__ libSystem.B.dylib: _pthread_rwlock_unlock
__ libSystem.B.dylib: _pthread_rwlock_wrlock
__ libSystem.B.dylib: _sandbox_check
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _strtoul
__ libSystem.B.dylib: _strtoull
__ libSystem.B.dylib: _unlink
__ libSystem.B.dylib: _usleep
__ libSystem.B.dylib: _vm_allocate
__ libSystem.B.dylib: _vm_deallocate
__ libSystem.B.dylib: _voucher_mach_msg_set
__ libSystem.B.dylib: _xpc_activity_copy_criteria
__ libSystem.B.dylib: _xpc_activity_register
__ libSystem.B.dylib: _xpc_activity_unregister
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_get_int64
__ libSystem.B.dylib: _xpc_dictionary_set_bool
__ libSystem.B.dylib: _xpc_dictionary_set_int64
__ libSystem.B.dylib: _xpc_dictionary_set_string
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_EHTYPE_id
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _sel_getName
__ libsqlite3.dylib: _sqlite3_bind_blob
__ libsqlite3.dylib: _sqlite3_bind_double
__ libsqlite3.dylib: _sqlite3_bind_int
__ libsqlite3.dylib: _sqlite3_bind_int64
__ libsqlite3.dylib: _sqlite3_bind_null
__ libsqlite3.dylib: _sqlite3_bind_text
__ libsqlite3.dylib: _sqlite3_bind_text16
__ libsqlite3.dylib: _sqlite3_changes
__ libsqlite3.dylib: _sqlite3_clear_bindings
__ libsqlite3.dylib: _sqlite3_close
__ libsqlite3.dylib: _sqlite3_column_blob
__ libsqlite3.dylib: _sqlite3_column_bytes
__ libsqlite3.dylib: _sqlite3_column_count
__ libsqlite3.dylib: _sqlite3_column_double
__ libsqlite3.dylib: _sqlite3_column_int
__ libsqlite3.dylib: _sqlite3_column_int64
__ libsqlite3.dylib: _sqlite3_column_name
__ libsqlite3.dylib: _sqlite3_column_text
__ libsqlite3.dylib: _sqlite3_column_type
__ libsqlite3.dylib: _sqlite3_errcode
__ libsqlite3.dylib: _sqlite3_errmsg
__ libsqlite3.dylib: _sqlite3_exec
__ libsqlite3.dylib: _sqlite3_extended_result_codes
__ libsqlite3.dylib: _sqlite3_file_control
__ libsqlite3.dylib: _sqlite3_finalize
__ libsqlite3.dylib: _sqlite3_next_stmt
__ libsqlite3.dylib: _sqlite3_open_v2
__ libsqlite3.dylib: _sqlite3_prepare_v2
__ libsqlite3.dylib: _sqlite3_reset
__ libsqlite3.dylib: _sqlite3_sql
__ libsqlite3.dylib: _sqlite3_step
__ libsqlite3.dylib: _sqlite3_stmt_readonly
ICMusicSubscriptionStatusCache : NSObject
  // class methods
  +[ICMusicSubscriptionStatusCache sharedCache]

  // instance methods
  -[ICMusicSubscriptionStatusCache setCachedSubscriptionStatusResponse:forRequestContext:completion:]
  -[ICMusicSubscriptionStatusCache _handleActiveAccountDidChangeNotification:]
  -[ICMusicSubscriptionStatusCache getCachedSubscriptionStatusResponseForRequestContext:completion:]
  -[ICMusicSubscriptionStatusCache .cxx_destruct]
  -[ICMusicSubscriptionStatusCache _handleSubscriptionStatusChangedDistributedNotification:]
  -[ICMusicSubscriptionStatusCache setCachedSubscriptionStatusResponseNeedsReloadForAllRequestContextsWithCompletion:]
  -[ICMusicSubscriptionStatusCache updateBaseCacheKey]
  -[ICMusicSubscriptionStatusCache _getCacheKeyForRequestContext:completion:]
  -[ICMusicSubscriptionStatusCache _statusChangeUserInfoForUserIdentity:oldStatus:newStatus:]
  -[ICMusicSubscriptionStatusCache _postLocalChangeNotificationWithUserInfo:]
  -[ICMusicSubscriptionStatusCache _init]
  -[ICMusicSubscriptionStatusCache setCachedSubscriptionStatusResponseNeedsReloadForRequestContext:completion:]
  -[ICMusicSubscriptionStatusCache _loadPersistedCacheWithCompletion:]
  -[ICMusicSubscriptionStatusCache _handleUserIdentityStoreDidChangeNotification:]
  -[ICMusicSubscriptionStatusCache dealloc]
  -[ICMusicSubscriptionStatusCache _handlePhoneNumberDidChangeNotification:]
  -[ICMusicSubscriptionStatusCache _persistCachePostingGlobalNotification:]


ICJSSign : NSObject
  // instance methods
  -[ICJSSign .cxx_destruct]
  -[ICJSSign signatureStringWithURLRequest:]
  -[ICJSSign initWithConfiguration:]
  -[ICJSSign signatureDataWithURLRequest:]


ICJSSignConfiguration : NSObject <NSCopying>
 @property  NSString *signatureDataCookieName
 @property  NSString *signatureDataHeaderName

  // class methods
  +[ICJSSignConfiguration storePlatformConfiguration]

  // instance methods
  -[ICJSSignConfiguration includeHeaderWithName:]
  -[ICJSSignConfiguration .cxx_destruct]
  -[ICJSSignConfiguration includeCookieWithName:]
  -[ICJSSignConfiguration _addRequestComponent:withName:]
  -[ICJSSignConfiguration setSignatureDataHeaderName:]
  -[ICJSSignConfiguration _enumerateComponentsUsingBlock:]
  -[ICJSSignConfiguration copyWithZone:]
  -[ICJSSignConfiguration signatureDataHeaderName]
  -[ICJSSignConfiguration includeQueryItemWithName:]
  -[ICJSSignConfiguration setSignatureDataCookieName:]
  -[ICJSSignConfiguration signatureDataCookieName]


ICIAMImpressionNode : PBCodable <NSCopying>
 @property  BOOL hasImpressionType
 @property  NSString *impressionType
 @property  BOOL hasRecoAlgoId
 @property  NSString *recoAlgoId

  // instance methods
  -[ICIAMImpressionNode mergeFrom:]
  -[ICIAMImpressionNode .cxx_destruct]
  -[ICIAMImpressionNode dictionaryRepresentation]
  -[ICIAMImpressionNode hasImpressionType]
  -[ICIAMImpressionNode recoAlgoId]
  -[ICIAMImpressionNode writeTo:]
  -[ICIAMImpressionNode setImpressionType:]
  -[ICIAMImpressionNode impressionType]
  -[ICIAMImpressionNode hasRecoAlgoId]
  -[ICIAMImpressionNode isEqual:]
  -[ICIAMImpressionNode copyTo:]
  -[ICIAMImpressionNode readFrom:]
  -[ICIAMImpressionNode copyWithZone:]
  -[ICIAMImpressionNode setRecoAlgoId:]


ICUnfairLock : NSObject
  // instance methods
  -[ICUnfairLock unlock]
  -[ICUnfairLock lockWithBlock:]
  -[ICUnfairLock init]
  -[ICUnfairLock lock]


ICDelegateToken : NSObject <NSCopying, NSSecureCoding>
 @property  NSData *data
 @property  long long type
 @property  NSDate *expirationDate
 @property  BOOL expired

  // class methods
  +[ICDelegateToken supportsSecureCoding]

  // instance methods
  -[ICDelegateToken initWithCoder:]
  -[ICDelegateToken .cxx_destruct]
  -[ICDelegateToken isExpired]
  -[ICDelegateToken data]
  -[ICDelegateToken isEqual:]
  -[ICDelegateToken type]
  -[ICDelegateToken copyWithZone:]
  -[ICDelegateToken expirationDate]
  -[ICDelegateToken encodeWithCoder:]
  -[ICDelegateToken initWithType:data:]
  -[ICDelegateToken initWithType:data:expirationDate:]
  -[ICDelegateToken expiresBeforeDate:]


_ICLLPlayNowQueueItemsCommand : PBCodable <NSCopying>
  // instance methods
  -[_ICLLPlayNowQueueItemsCommand .cxx_destruct]
  -[_ICLLPlayNowQueueItemsCommand dictionaryRepresentation]
  -[_ICLLPlayNowQueueItemsCommand writeTo:]
  -[_ICLLPlayNowQueueItemsCommand isEqual:]
  -[_ICLLPlayNowQueueItemsCommand readFrom:]
  -[_ICLLPlayNowQueueItemsCommand copyWithZone:]


ICAuthorizeMachineResponse : NSObject
 @property  NSData *keybagData
 @property  NSData *tokenData

  // instance methods
  -[ICAuthorizeMachineResponse initWithResponseDictionary:]
  -[ICAuthorizeMachineResponse .cxx_destruct]
  -[ICAuthorizeMachineResponse tokenData]
  -[ICAuthorizeMachineResponse keybagData]


ICMusicSubscriptionRequest : ICRequestOperation
  // instance methods
  -[ICMusicSubscriptionRequest .cxx_destruct]
  -[ICMusicSubscriptionRequest execute]
  -[ICMusicSubscriptionRequest _bagKeyForRequestType:]
  -[ICMusicSubscriptionRequest initWithStoreRequestContext:requestType:requestingOfflineSlot:]


ICSAPSession : NSObject
 @property  NSOperationQueue *_prepareFairPlayContextOperationQueue
 @property  ICFPSAPContext *_sapContext
 @property  NSURL *_certificateURL
 @property  ICStoreRequestContext *_requestContext
 @property  NSURL *_setupURL
 @property  unsigned int sapVersion

  // class methods
  +[ICSAPSession sharedSAPSessionWithVersion:URLBag:requestContext:]

  // instance methods
  -[ICSAPSession .cxx_destruct]
  -[ICSAPSession verifySignatureData:forData:withCompletionHandler:]
  -[ICSAPSession _setupURL]
  -[ICSAPSession _sapContext]
  -[ICSAPSession _initWithVersion:certificateURL:setupURL:requestContext:]
  -[ICSAPSession _requestContext]
  -[ICSAPSession _certificateURL]
  -[ICSAPSession _prepareFairPlayContextOperationQueue]
  -[ICSAPSession signData:withCompletionHandler:]
  -[ICSAPSession _setSAPContext:]
  -[ICSAPSession sapVersion]


_ICLLReactionCommand : PBCodable <NSCopying>
  // instance methods
  -[_ICLLReactionCommand .cxx_destruct]
  -[_ICLLReactionCommand dictionaryRepresentation]
  -[_ICLLReactionCommand writeTo:]
  -[_ICLLReactionCommand isEqual:]
  -[_ICLLReactionCommand readFrom:]
  -[_ICLLReactionCommand copyWithZone:]


ICStoreRequestContext : ICRequestContext <NSSecureCoding>
 @property  ICUserIdentity *identity
 @property  ICUserIdentity *delegatedIdentity
 @property  ICUserIdentityStore *identityStore
 @property  ICStoreDialogResponseHandler *storeDialogResponseHandler
 @property  BOOL allowsExpiredBags
 @property  long long personalizationStyle

  // class methods
  +[ICStoreRequestContext supportsSecureCoding]
  +[ICStoreRequestContext activeStoreAccountRequestContext]

  // instance methods
  -[ICStoreRequestContext setPersonalizationStyle:]
  -[ICStoreRequestContext personalizationStyle]
  -[ICStoreRequestContext allowsExpiredBags]
  -[ICStoreRequestContext initWithCoder:]
  -[ICStoreRequestContext initWithIdentity:]
  -[ICStoreRequestContext initWithIdentity:clientInfo:]
  -[ICStoreRequestContext .cxx_destruct]
  -[ICStoreRequestContext userAgent]
  -[ICStoreRequestContext initWithBlock:]
  -[ICStoreRequestContext isEqual:]
  -[ICStoreRequestContext setIdentity:]
  -[ICStoreRequestContext setDelegatedIdentity:]
  -[ICStoreRequestContext setIdentityStore:]
  -[ICStoreRequestContext identity]
  -[ICStoreRequestContext initWithIdentity:identityStore:clientInfo:]
  -[ICStoreRequestContext copyWithBlock:]
  -[ICStoreRequestContext identityStore]
  -[ICStoreRequestContext setAllowsExpiredBags:]
  -[ICStoreRequestContext encodeWithCoder:]
  -[ICStoreRequestContext delegatedIdentity]
  -[ICStoreRequestContext initWithIdentity:identityStore:clientInfo:authenticationProvider:]
  -[ICStoreRequestContext _webkitUserAgentVersion]
  -[ICStoreRequestContext setStoreDialogResponseHandler:]
  -[ICStoreRequestContext storeDialogResponseHandler]


ICDelegateAccountStoreOptions : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *databasePath
 @property  BOOL singleWriter
 @property  NSXPCListenerEndpoint *XPCEndpoint
 @property  NSString *XPCServiceName

  // class methods
  +[ICDelegateAccountStoreOptions supportsSecureCoding]
  +[ICDelegateAccountStoreOptions defaultOptionsWithServiceEndpoint:]
  +[ICDelegateAccountStoreOptions defaultOptionsWithServiceName:]
  +[ICDelegateAccountStoreOptions singleWriterOptionsWithDatabasePath:]

  // instance methods
  -[ICDelegateAccountStoreOptions databasePath]
  -[ICDelegateAccountStoreOptions initWithCoder:]
  -[ICDelegateAccountStoreOptions .cxx_destruct]
  -[ICDelegateAccountStoreOptions setDatabasePath:]
  -[ICDelegateAccountStoreOptions isEqual:]
  -[ICDelegateAccountStoreOptions isSingleWriter]
  -[ICDelegateAccountStoreOptions XPCEndpoint]
  -[ICDelegateAccountStoreOptions setSingleWriter:]
  -[ICDelegateAccountStoreOptions setXPCServiceName:]
  -[ICDelegateAccountStoreOptions copyWithZone:]
  -[ICDelegateAccountStoreOptions setXPCEndpoint:]
  -[ICDelegateAccountStoreOptions encodeWithCoder:]
  -[ICDelegateAccountStoreOptions XPCServiceName]


_ICLLQueueSyncAction : PBCodable <NSCopying>
  // instance methods
  -[_ICLLQueueSyncAction .cxx_destruct]
  -[_ICLLQueueSyncAction dictionaryRepresentation]
  -[_ICLLQueueSyncAction writeTo:]
  -[_ICLLQueueSyncAction isEqual:]
  -[_ICLLQueueSyncAction readFrom:]
  -[_ICLLQueueSyncAction copyWithZone:]


_ICLLDisplayMessage : PBCodable <NSCopying>
  // instance methods
  -[_ICLLDisplayMessage .cxx_destruct]
  -[_ICLLDisplayMessage dictionaryRepresentation]
  -[_ICLLDisplayMessage writeTo:]
  -[_ICLLDisplayMessage isEqual:]
  -[_ICLLDisplayMessage readFrom:]
  -[_ICLLDisplayMessage copyWithZone:]


ICLightweightMusicSubscriptionStatusRequest : ICRequestOperation
 @property  ICStoreRequestContext *requestContext

  // instance methods
  -[ICLightweightMusicSubscriptionStatusRequest .cxx_destruct]
  -[ICLightweightMusicSubscriptionStatusRequest performRequestWithResponseHandler:]
  -[ICLightweightMusicSubscriptionStatusRequest initWithRequestContext:]
  -[ICLightweightMusicSubscriptionStatusRequest execute]
  -[ICLightweightMusicSubscriptionStatusRequest requestContext]
  -[ICLightweightMusicSubscriptionStatusRequest setRequestContext:]
  -[ICLightweightMusicSubscriptionStatusRequest _finishWithExtendedSubscriptionStatusResponse:error:]


_ICLLPlaybackControlSettingsCommand : PBCodable <NSCopying>
  // instance methods
  -[_ICLLPlaybackControlSettingsCommand .cxx_destruct]
  -[_ICLLPlaybackControlSettingsCommand dictionaryRepresentation]
  -[_ICLLPlaybackControlSettingsCommand writeTo:]
  -[_ICLLPlaybackControlSettingsCommand isEqual:]
  -[_ICLLPlaybackControlSettingsCommand readFrom:]
  -[_ICLLPlaybackControlSettingsCommand copyWithZone:]


ICIAMApplicationMessage : PBCodable <NSCopying>
 @property  BOOL hasIdentifier
 @property  NSString *identifier
 @property  NSMutableArray *targets
 @property  BOOL hasMessageType
 @property  int messageType
 @property  BOOL hasCarousel
 @property  BOOL carousel
 @property  BOOL hasPriority
 @property  int priority
 @property  BOOL hasTemplateURL
 @property  NSString *templateURL
 @property  BOOL hasMaximumDisplays
 @property  int maximumDisplays
 @property  BOOL hasStartDate
 @property  double startDate
 @property  BOOL hasEndDate
 @property  double endDate
 @property  BOOL hasHasCloseButton
 @property  BOOL hasCloseButton
 @property  NSMutableArray *contentPages
 @property  BOOL hasRule
 @property  ICIAMMessageRule *rule
 @property  BOOL hasWebArchiveURL
 @property  NSString *webArchiveURL
 @property  BOOL hasModalPresentationStyle
 @property  int modalPresentationStyle
 @property  BOOL hasGlobalPresentationPolicyGroup
 @property  int globalPresentationPolicyGroup
 @property  BOOL hasAssetPrefetchStrategy
 @property  int assetPrefetchStrategy
 @property  BOOL hasHoldoutEvent
 @property  ICIAMMetricEvent *holdoutEvent
 @property  BOOL hasLocalNotification
 @property  ICIAMLocalNotification *localNotification
 @property  BOOL hasImpressionEvent
 @property  ICIAMMetricEvent *impressionEvent
 @property  NSMutableArray *presentationTriggers
 @property  BOOL hasApplicationBadge
 @property  ICIAMApplicationBadge *applicationBadge
 @property  BOOL hasReportingEnabled
 @property  BOOL reportingEnabled

  // class methods
  +[ICIAMApplicationMessage targetType]
  +[ICIAMApplicationMessage contentPagesType]
  +[ICIAMApplicationMessage presentationTriggersType]

  // instance methods
  -[ICIAMApplicationMessage setMessageType:]
  -[ICIAMApplicationMessage targetAtIndex:]
  -[ICIAMApplicationMessage setHasReportingEnabled:]
  -[ICIAMApplicationMessage globalPresentationPolicyGroupAsString:]
  -[ICIAMApplicationMessage StringAsAssetPrefetchStrategy:]
  -[ICIAMApplicationMessage messageType]
  -[ICIAMApplicationMessage contentPages]
  -[ICIAMApplicationMessage templateURL]
  -[ICIAMApplicationMessage setRule:]
  -[ICIAMApplicationMessage setHasStartDate:]
  -[ICIAMApplicationMessage messageTypeAsString:]
  -[ICIAMApplicationMessage clearPresentationTriggers]
  -[ICIAMApplicationMessage hasAssetPrefetchStrategy]
  -[ICIAMApplicationMessage setMaximumDisplays:]
  -[ICIAMApplicationMessage mergeFrom:]
  -[ICIAMApplicationMessage hasRule]
  -[ICIAMApplicationMessage setTemplateURL:]
  -[ICIAMApplicationMessage reportingEnabled]
  -[ICIAMApplicationMessage impressionEvent]
  -[ICIAMApplicationMessage setEndDate:]
  -[ICIAMApplicationMessage targets]
  -[ICIAMApplicationMessage StringAsMessageType:]
  -[ICIAMApplicationMessage addTarget:]
  -[ICIAMApplicationMessage setHasEndDate:]
  -[ICIAMApplicationMessage StringAsGlobalPresentationPolicyGroup:]
  -[ICIAMApplicationMessage hasLocalNotification]
  -[ICIAMApplicationMessage hasEndDate]
  -[ICIAMApplicationMessage .cxx_destruct]
  -[ICIAMApplicationMessage hasMaximumDisplays]
  -[ICIAMApplicationMessage hasApplicationBadge]
  -[ICIAMApplicationMessage presentationTriggersCount]
  -[ICIAMApplicationMessage dictionaryRepresentation]
  -[ICIAMApplicationMessage setHasModalPresentationStyle:]
  -[ICIAMApplicationMessage hasHasCloseButton]
  -[ICIAMApplicationMessage localNotification]
  -[ICIAMApplicationMessage setStartDate:]
  -[ICIAMApplicationMessage setImpressionEvent:]
  -[ICIAMApplicationMessage writeTo:]
  -[ICIAMApplicationMessage setLocalNotification:]
  -[ICIAMApplicationMessage setApplicationBadge:]
  -[ICIAMApplicationMessage setHasMessageType:]
  -[ICIAMApplicationMessage hasCarousel]
  -[ICIAMApplicationMessage setPriority:]
  -[ICIAMApplicationMessage presentationTriggers]
  -[ICIAMApplicationMessage hasStartDate]
  -[ICIAMApplicationMessage setAssetPrefetchStrategy:]
  -[ICIAMApplicationMessage carousel]
  -[ICIAMApplicationMessage addContentPages:]
  -[ICIAMApplicationMessage setReportingEnabled:]
  -[ICIAMApplicationMessage isEqual:]
  -[ICIAMApplicationMessage clearContentPages]
  -[ICIAMApplicationMessage hasHoldoutEvent]
  -[ICIAMApplicationMessage setCarousel:]
  -[ICIAMApplicationMessage copyTo:]
  -[ICIAMApplicationMessage readFrom:]
  -[ICIAMApplicationMessage identifier]
  -[ICIAMApplicationMessage setHasHasCloseButton:]
  -[ICIAMApplicationMessage hasReportingEnabled]
  -[ICIAMApplicationMessage assetPrefetchStrategy]
  -[ICIAMApplicationMessage StringAsModalPresentationStyle:]
  -[ICIAMApplicationMessage setModalPresentationStyle:]
  -[ICIAMApplicationMessage setHasMaximumDisplays:]
  -[ICIAMApplicationMessage hasCloseButton]
  -[ICIAMApplicationMessage rule]
  -[ICIAMApplicationMessage modalPresentationStyle]
  -[ICIAMApplicationMessage hasWebArchiveURL]
  -[ICIAMApplicationMessage priority]
  -[ICIAMApplicationMessage setHasGlobalPresentationPolicyGroup:]
  -[ICIAMApplicationMessage clearTargets]
  -[ICIAMApplicationMessage contentPagesAtIndex:]
  -[ICIAMApplicationMessage holdoutEvent]
  -[ICIAMApplicationMessage hasGlobalPresentationPolicyGroup]
  -[ICIAMApplicationMessage targetsCount]
  -[ICIAMApplicationMessage setHasPriority:]
  -[ICIAMApplicationMessage hasPriority]
  -[ICIAMApplicationMessage setIdentifier:]
  -[ICIAMApplicationMessage applicationBadge]
  -[ICIAMApplicationMessage presentationTriggersAtIndex:]
  -[ICIAMApplicationMessage startDate]
  -[ICIAMApplicationMessage setHasAssetPrefetchStrategy:]
  -[ICIAMApplicationMessage contentPagesCount]
  -[ICIAMApplicationMessage maximumDisplays]
  -[ICIAMApplicationMessage setPresentationTriggers:]
  -[ICIAMApplicationMessage modalPresentationStyleAsString:]
  -[ICIAMApplicationMessage hasIdentifier]
  -[ICIAMApplicationMessage setGlobalPresentationPolicyGroup:]
  -[ICIAMApplicationMessage setHasCarousel:]
  -[ICIAMApplicationMessage hasImpressionEvent]
  -[ICIAMApplicationMessage setHasCloseButton:]
  -[ICIAMApplicationMessage copyWithZone:]
  -[ICIAMApplicationMessage webArchiveURL]
  -[ICIAMApplicationMessage assetPrefetchStrategyAsString:]
  -[ICIAMApplicationMessage setContentPages:]
  -[ICIAMApplicationMessage setTargets:]
  -[ICIAMApplicationMessage hasTemplateURL]
  -[ICIAMApplicationMessage setWebArchiveURL:]
  -[ICIAMApplicationMessage endDate]
  -[ICIAMApplicationMessage globalPresentationPolicyGroup]
  -[ICIAMApplicationMessage setHoldoutEvent:]
  -[ICIAMApplicationMessage hasModalPresentationStyle]
  -[ICIAMApplicationMessage addPresentationTriggers:]
  -[ICIAMApplicationMessage hasMessageType]


ICAuthenticationUtilities : NSObject
  // class methods
  +[ICAuthenticationUtilities sharedAuthKitSession]


ICRadioLibraryArtistContentReference : ICRadioContentReference <NSCopying, NSSecureCoding>
 @property  NSString *artistName
 @property  NSNumber *representativeCloudIdentifier
 @property  NSNumber *storeIdentifier

  // class methods
  +[ICRadioLibraryArtistContentReference supportsSecureCoding]

  // instance methods
  -[ICRadioLibraryArtistContentReference artistName]
  -[ICRadioLibraryArtistContentReference initWithCoder:]
  -[ICRadioLibraryArtistContentReference .cxx_destruct]
  -[ICRadioLibraryArtistContentReference setStoreIdentifier:]
  -[ICRadioLibraryArtistContentReference contentType]
  -[ICRadioLibraryArtistContentReference storeIdentifier]
  -[ICRadioLibraryArtistContentReference copyWithZone:]
  -[ICRadioLibraryArtistContentReference encodeWithCoder:]
  -[ICRadioLibraryArtistContentReference setArtistName:]
  -[ICRadioLibraryArtistContentReference rawContentDictionaryWithSubscriptionStatus:]
  -[ICRadioLibraryArtistContentReference matchDictionaryWithSubscriptionStatus:]
  -[ICRadioLibraryArtistContentReference representativeCloudIdentifier]
  -[ICRadioLibraryArtistContentReference setRepresentativeCloudIdentifier:]


ICCloudClientCloudService : NSObject
 @property  NSObject<OS_dispatch_queue> *serialQueue
 @property  <ICCloudServerListenerEndpointProviding> *listenerEndpointProvider
 @property  NSXPCConnection *xpcConnection

  // instance methods
  -[ICCloudClientCloudService xpcConnection]
  -[ICCloudClientCloudService listenerEndpointProvider]
  -[ICCloudClientCloudService .cxx_destruct]
  -[ICCloudClientCloudService _xpcConnectionWithListenerEndpoint:]
  -[ICCloudClientCloudService initWithListenerEndpointProvider:]
  -[ICCloudClientCloudService serialQueue]


_ICLLParticipant : PBCodable <NSCopying>
  // instance methods
  -[_ICLLParticipant .cxx_destruct]
  -[_ICLLParticipant dictionaryRepresentation]
  -[_ICLLParticipant writeTo:]
  -[_ICLLParticipant isEqual:]
  -[_ICLLParticipant readFrom:]
  -[_ICLLParticipant copyWithZone:]


ICStoreFileAssetInfo : NSObject
 @property  NSURL *assetURL
 @property  NSString *downloadKey
 @property  long long expectedProtectionType
 @property  NSArray *fairPlayInfoList
 @property  long long flavorType
 @property  NSString *fileExtension
 @property  unsigned long fileSize
 @property  ICStoreFinanceItemMetadata *metadata
 @property  NSData *md5
 @property  NSDictionary *responseDictionary
 @property  long long protectionType
 @property  NSString *playbackAuthorizationToken

  // instance methods
  -[ICStoreFileAssetInfo md5]
  -[ICStoreFileAssetInfo fileSize]
  -[ICStoreFileAssetInfo setMd5:]
  -[ICStoreFileAssetInfo setFileSize:]
  -[ICStoreFileAssetInfo responseDictionary]
  -[ICStoreFileAssetInfo .cxx_destruct]
  -[ICStoreFileAssetInfo setAssetURL:]
  -[ICStoreFileAssetInfo protectionType]
  -[ICStoreFileAssetInfo setFlavorType:]
  -[ICStoreFileAssetInfo setDownloadKey:]
  -[ICStoreFileAssetInfo playbackAuthorizationToken]
  -[ICStoreFileAssetInfo metadata]
  -[ICStoreFileAssetInfo setMetadata:]
  -[ICStoreFileAssetInfo flavorType]
  -[ICStoreFileAssetInfo downloadKey]
  -[ICStoreFileAssetInfo fairPlayInfoList]
  -[ICStoreFileAssetInfo fileExtension]
  -[ICStoreFileAssetInfo setFileExtension:]
  -[ICStoreFileAssetInfo assetURL]
  -[ICStoreFileAssetInfo initWithFileAssetResponseDictionary:]
  -[ICStoreFileAssetInfo _metadataDictionary]
  -[ICStoreFileAssetInfo initWithAssetURL:]
  -[ICStoreFileAssetInfo setFairPlayInfoList:]
  -[ICStoreFileAssetInfo expectedProtectionType]
  -[ICStoreFileAssetInfo setExpectedProtectionType:]


ICSAPSessionSignDataOperation : ICSAPSessionAbstractOperation
 @property  NSData *data
 @property  @? responseHandler

  // instance methods
  -[ICSAPSessionSignDataOperation .cxx_destruct]
  -[ICSAPSessionSignDataOperation responseHandler]
  -[ICSAPSessionSignDataOperation data]
  -[ICSAPSessionSignDataOperation setResponseHandler:]
  -[ICSAPSessionSignDataOperation finishWithSAPContextPreparationError:]
  -[ICSAPSessionSignDataOperation setData:]
  -[ICSAPSessionSignDataOperation executeWithSAPContext:]


ICStorePlatformRequestOperation : ICAsyncOperation
 @property  ICStorePlatformRequest *platformRequest
 @property  @? responseHandler

  // instance methods
  -[ICStorePlatformRequestOperation _executeUnpersonalized]
  -[ICStorePlatformRequestOperation .cxx_destruct]
  -[ICStorePlatformRequestOperation platformRequest]
  -[ICStorePlatformRequestOperation responseHandler]
  -[ICStorePlatformRequestOperation _finishWithResponse:error:]
  -[ICStorePlatformRequestOperation _enqueueDataRequest:]
  -[ICStorePlatformRequestOperation setResponseHandler:]
  -[ICStorePlatformRequestOperation execute]
  -[ICStorePlatformRequestOperation _URLRequestWithBaseURL:]
  -[ICStorePlatformRequestOperation _requestContext]
  -[ICStorePlatformRequestOperation _executePersonalized]
  -[ICStorePlatformRequestOperation cancel]
  -[ICStorePlatformRequestOperation initWithPlatformRequest:usingURLSession:]
  -[ICStorePlatformRequestOperation initWithPlatformRequest:]
  -[ICStorePlatformRequestOperation finishWithError:]


ICPlayActivityFeedSerialization : NSObject
 @property  NSString *currentStoreFrontID

  // class methods
  +[ICPlayActivityFeedSerialization defaultOverrideHTTPHeaderFields]

  // instance methods
  -[ICPlayActivityFeedSerialization currentStoreFrontID]
  -[ICPlayActivityFeedSerialization .cxx_destruct]
  -[ICPlayActivityFeedSerialization propertyListObjectWithPlayActivityEvent:]
  -[ICPlayActivityFeedSerialization setCurrentStoreFrontID:]


ICStoreFinanceItemMetadata : NSObject <NSCopying>
 @property  NSDictionary *metadataDictionary
 @property  NSNumber *itemAdamID
 @property  NSNumber *itemCloudID
 @property  NSString *itemName
 @property  NSString *itemSortName
 @property  NSString *artistName
 @property  NSString *artistSortName
 @property  NSNumber *artistID
 @property  NSString *playlistName
 @property  NSString *albumSortName
 @property  NSString *playlistArtistName
 @property  NSString *composerName
 @property  NSString *composerSortName
 @property  NSString *genre
 @property  NSNumber *genreID
 @property  NSNumber *playlistID
 @property  NSNumber *discCount
 @property  NSNumber *discNumber
 @property  NSNumber *trackCount
 @property  NSNumber *trackNumber
 @property  NSNumber *duration
 @property  NSNumber *isExplicit
 @property  NSNumber *year
 @property  NSNumber *bitrate
 @property  NSString *comments
 @property  NSDate *dateAdded
 @property  NSNumber *drmVersionNumber
 @property  NSString *fileExtension
 @property  NSNumber *isGapless
 @property  NSNumber *isMasteredForITunes
 @property  NSString *kind
 @property  NSNumber *sampleRate
 @property  NSNumber *versionRestrictions
 @property  NSString *xid
 @property  NSNumber *isCompilation
 @property  NSString *copyright
 @property  NSNumber *rank
 @property  NSDate *releaseDate
 @property  NSNumber *storefrontID
 @property  NSNumber *vendorID

  // instance methods
  -[ICStoreFinanceItemMetadata releaseDate]
  -[ICStoreFinanceItemMetadata metadataDictionary]
  -[ICStoreFinanceItemMetadata xid]
  -[ICStoreFinanceItemMetadata sampleRate]
  -[ICStoreFinanceItemMetadata year]
  -[ICStoreFinanceItemMetadata discNumber]
  -[ICStoreFinanceItemMetadata artistName]
  -[ICStoreFinanceItemMetadata trackCount]
  -[ICStoreFinanceItemMetadata trackNumber]
  -[ICStoreFinanceItemMetadata genre]
  -[ICStoreFinanceItemMetadata rank]
  -[ICStoreFinanceItemMetadata isExplicit]
  -[ICStoreFinanceItemMetadata discCount]
  -[ICStoreFinanceItemMetadata copyright]
  -[ICStoreFinanceItemMetadata initWithMetadataDictionary:]
  -[ICStoreFinanceItemMetadata storefrontID]
  -[ICStoreFinanceItemMetadata .cxx_destruct]
  -[ICStoreFinanceItemMetadata vendorID]
  -[ICStoreFinanceItemMetadata itemCloudID]
  -[ICStoreFinanceItemMetadata bitrate]
  -[ICStoreFinanceItemMetadata itemName]
  -[ICStoreFinanceItemMetadata genreID]
  -[ICStoreFinanceItemMetadata comments]
  -[ICStoreFinanceItemMetadata composerName]
  -[ICStoreFinanceItemMetadata albumID]
  -[ICStoreFinanceItemMetadata isCompilation]
  -[ICStoreFinanceItemMetadata artistID]
  -[ICStoreFinanceItemMetadata kind]
  -[ICStoreFinanceItemMetadata fileExtension]
  -[ICStoreFinanceItemMetadata dateAdded]
  -[ICStoreFinanceItemMetadata copyWithZone:]
  -[ICStoreFinanceItemMetadata playlistName]
  -[ICStoreFinanceItemMetadata isGapless]
  -[ICStoreFinanceItemMetadata duration]
  -[ICStoreFinanceItemMetadata itemAdamID]
  -[ICStoreFinanceItemMetadata itemSortName]
  -[ICStoreFinanceItemMetadata artistSortName]
  -[ICStoreFinanceItemMetadata albumSortName]
  -[ICStoreFinanceItemMetadata playlistArtistName]
  -[ICStoreFinanceItemMetadata composerSortName]
  -[ICStoreFinanceItemMetadata drmVersionNumber]
  -[ICStoreFinanceItemMetadata isMasteredForITunes]
  -[ICStoreFinanceItemMetadata versionRestrictions]
  -[ICStoreFinanceItemMetadata playlistID]


ICMusicSubscriptionCarrierBundlingEligibilityResponse : NSObject
 @property  long long carrierBundlingStatusType
 @property  BOOL familySubscription
 @property  NSError *error
 @property  NSString *SMSSessionIdentifier
 @property  double delayInterval
 @property  BOOL wantsDelayedRetry
 @property  NSString *headerEnrichmentMessage
 @property  NSString *headerEnrichmentSessionIdentifier
 @property  NSURL *headerEnrichmentURL
 @property  BOOL needsHeaderEnrichment
 @property  BOOL needsSilentSMS
 @property  NSString *silentSMSMessage
 @property  NSString *silentSMSNumber
 @property  NSString *cellularProviderName
 @property  NSString *phoneNumber

  // instance methods
  -[ICMusicSubscriptionCarrierBundlingEligibilityResponse isFamilySubscription]
  -[ICMusicSubscriptionCarrierBundlingEligibilityResponse .cxx_destruct]
  -[ICMusicSubscriptionCarrierBundlingEligibilityResponse phoneNumber]
  -[ICMusicSubscriptionCarrierBundlingEligibilityResponse delayInterval]
  -[ICMusicSubscriptionCarrierBundlingEligibilityResponse error]
  -[ICMusicSubscriptionCarrierBundlingEligibilityResponse carrierBundlingStatusType]
  -[ICMusicSubscriptionCarrierBundlingEligibilityResponse initWithEligibilityDictionary:cellularProviderName:phoneNumber:]
  -[ICMusicSubscriptionCarrierBundlingEligibilityResponse SMSSessionIdentifier]
  -[ICMusicSubscriptionCarrierBundlingEligibilityResponse wantsDelayedRetry]
  -[ICMusicSubscriptionCarrierBundlingEligibilityResponse headerEnrichmentMessage]
  -[ICMusicSubscriptionCarrierBundlingEligibilityResponse headerEnrichmentSessionIdentifier]
  -[ICMusicSubscriptionCarrierBundlingEligibilityResponse headerEnrichmentURL]
  -[ICMusicSubscriptionCarrierBundlingEligibilityResponse needsHeaderEnrichment]
  -[ICMusicSubscriptionCarrierBundlingEligibilityResponse needsSilentSMS]
  -[ICMusicSubscriptionCarrierBundlingEligibilityResponse silentSMSMessage]
  -[ICMusicSubscriptionCarrierBundlingEligibilityResponse silentSMSNumber]
  -[ICMusicSubscriptionCarrierBundlingEligibilityResponse cellularProviderName]


ICPAAudioQualityDictionary : PBCodable <NSCopying>
  // instance methods
  -[ICPAAudioQualityDictionary .cxx_destruct]
  -[ICPAAudioQualityDictionary dictionaryRepresentation]
  -[ICPAAudioQualityDictionary writeTo:]
  -[ICPAAudioQualityDictionary isEqual:]
  -[ICPAAudioQualityDictionary readFrom:]
  -[ICPAAudioQualityDictionary copyWithZone:]


ICRadioPlaybackHistory : NSObject <NSCopying, NSMutableCopying, NSSecureCoding>
 @property  NSString *stationIdentifier
 @property  long long numberOfSkips
 @property  NSArray *tracks
 @property  ICRadioPlaybackHistoryItem *currentTrack
 @property  NSDictionary *propertyListRepresentation

  // class methods
  +[ICRadioPlaybackHistory supportsSecureCoding]

  // instance methods
  -[ICRadioPlaybackHistory tracks]
  -[ICRadioPlaybackHistory initWithCoder:]
  -[ICRadioPlaybackHistory .cxx_destruct]
  -[ICRadioPlaybackHistory isEqual:]
  -[ICRadioPlaybackHistory propertyListRepresentation]
  -[ICRadioPlaybackHistory mutableCopyWithZone:]
  -[ICRadioPlaybackHistory stationIdentifier]
  -[ICRadioPlaybackHistory copyWithZone:]
  -[ICRadioPlaybackHistory encodeWithCoder:]
  -[ICRadioPlaybackHistory initWithStationIdentifier:]
  -[ICRadioPlaybackHistory numberOfSkips]
  -[ICRadioPlaybackHistory currentTrack]


ICMutableRadioPlaybackHistory : ICRadioPlaybackHistory
 @property  ICRadioPlaybackHistoryItem *currentTrack
 @property  long long numberOfSkips
 @property  NSArray *tracks

  // instance methods
  -[ICMutableRadioPlaybackHistory setTracks:]
  -[ICMutableRadioPlaybackHistory addTrack:]
  -[ICMutableRadioPlaybackHistory _updateTracksUsingBlock:]
  -[ICMutableRadioPlaybackHistory _checkCurrentTrackIsPresent]
  -[ICMutableRadioPlaybackHistory addTracks:]
  -[ICMutableRadioPlaybackHistory removeExpiredTracks]
  -[ICMutableRadioPlaybackHistory removeTracksAtIndexes:]
  -[ICMutableRadioPlaybackHistory replaceTrackAtIndex:withTrack:]
  -[ICMutableRadioPlaybackHistory setCurrentTrack:]
  -[ICMutableRadioPlaybackHistory setNumberOfSkips:]


ICRadioStoreContentReference : ICRadioContentReference <ICRadioContentReferenceContainable, NSCopying, NSSecureCoding>
 @property  NSNumber *storeIdentifier
 @property  NSString *containerID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ICRadioStoreContentReference supportsSecureCoding]

  // instance methods
  -[ICRadioStoreContentReference setContainerID:]
  -[ICRadioStoreContentReference initWithCoder:]
  -[ICRadioStoreContentReference .cxx_destruct]
  -[ICRadioStoreContentReference setStoreIdentifier:]
  -[ICRadioStoreContentReference storeIdentifier]
  -[ICRadioStoreContentReference containerID]
  -[ICRadioStoreContentReference copyWithZone:]
  -[ICRadioStoreContentReference initWithStoreIdentifier:]
  -[ICRadioStoreContentReference encodeWithCoder:]
  -[ICRadioStoreContentReference rawContentDictionaryWithSubscriptionStatus:]
  -[ICRadioStoreContentReference matchDictionaryWithSubscriptionStatus:]


ICSQLiteStatement : NSObject <ICSQLiteBinding>
 @property  ICSQLiteConnection *connection
 @property  ^{sqlite3_stmt=} sqlite3_stmt
 @property  NSDictionary *columnIndexByName
 @property  BOOL readOnly
 @property  NSString *SQL
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ICSQLiteStatement step]
  -[ICSQLiteStatement SQL]
  -[ICSQLiteStatement bindData:atPosition:]
  -[ICSQLiteStatement bindInt:atPosition:]
  -[ICSQLiteStatement bindFloat:atPosition:]
  -[ICSQLiteStatement bindNullAtPosition:]
  -[ICSQLiteStatement clearBindings]
  -[ICSQLiteStatement .cxx_destruct]
  -[ICSQLiteStatement initWithStatement:connection:]
  -[ICSQLiteStatement columnIndexByName]
  -[ICSQLiteStatement bindInt64:atPosition:]
  -[ICSQLiteStatement connection]
  -[ICSQLiteStatement isReadOnly]
  -[ICSQLiteStatement bindStringCopy:atPosition:]
  -[ICSQLiteStatement reset]
  -[ICSQLiteStatement finalizeStatement]
  -[ICSQLiteStatement bindString:atPosition:]
  -[ICSQLiteStatement sqlite3_stmt]
  -[ICSQLiteStatement bindDataCopy:atPosition:]
  -[ICSQLiteStatement bindNumber:atPosition:]
  -[ICSQLiteStatement bindDouble:atPosition:]


ICAgeVerificationManager : NSObject
 @property  NSObject<OS_dispatch_queue> *accessQueue
 @property  NSObject<OS_dispatch_queue> *calloutQueue
 @property  NSMutableDictionary *ageVerificationStateInternal
 @property  ICAgeVerificationState *ageVerificationState

  // class methods
  +[ICAgeVerificationManager defaultManager]

  // instance methods
  -[ICAgeVerificationManager _registerForNotifications]
  -[ICAgeVerificationManager setAccessQueue:]
  -[ICAgeVerificationManager ageVerificationStateInternal]
  -[ICAgeVerificationManager calloutQueue]
  -[ICAgeVerificationManager setCalloutQueue:]
  -[ICAgeVerificationManager ageVerificationStateForUserIdentity:]
  -[ICAgeVerificationManager accessQueue]
  -[ICAgeVerificationManager _updateAgeVerificationStateForUserIdentity:sendNotification:completion:]
  -[ICAgeVerificationManager .cxx_destruct]
  -[ICAgeVerificationManager _runAgeVerificationForUserIdentity:completion:]
  -[ICAgeVerificationManager _bagHasValidKeys:]
  -[ICAgeVerificationManager _updateAgeVerificationStateAndSendNotification:completion:]
  -[ICAgeVerificationManager ageVerificationState]
  -[ICAgeVerificationManager getAgeVerificationStateWithCompletion:]
  -[ICAgeVerificationManager _userIdentityStoreDidChange:]
  -[ICAgeVerificationManager setAgeVerificationStateInternal:]
  -[ICAgeVerificationManager _processAgeVerificationState:forDSID:]
  -[ICAgeVerificationManager _init]
  -[ICAgeVerificationManager getAgeVerificationStateForUserIdentity:completion:]


ICMusicKitTokensResponse : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *developerToken
 @property  NSString *userToken
 @property  NSError *userTokenFetchingError

  // class methods
  +[ICMusicKitTokensResponse supportsSecureCoding]

  // instance methods
  -[ICMusicKitTokensResponse initWithCoder:]
  -[ICMusicKitTokensResponse .cxx_destruct]
  -[ICMusicKitTokensResponse isEqual:]
  -[ICMusicKitTokensResponse userToken]
  -[ICMusicKitTokensResponse copyWithZone:]
  -[ICMusicKitTokensResponse encodeWithCoder:]
  -[ICMusicKitTokensResponse _descriptionOfToken:forDebugging:]
  -[ICMusicKitTokensResponse _descriptionForDebugging:]
  -[ICMusicKitTokensResponse initWithDeveloperToken:userToken:userTokenFetchingError:]
  -[ICMusicKitTokensResponse developerToken]
  -[ICMusicKitTokensResponse userTokenFetchingError]


ICInAppMessageManager : NSObject <NSXPCListenerDelegate, ICInAppMessageManagerProtocol, ICEnvironmentMonitorObserver>
 @property  ICInAppMessageStore *_unsafeMessageStore
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ICInAppMessageManager sharedManager]

  // instance methods
  -[ICInAppMessageManager _removeConnection:]
  -[ICInAppMessageManager environmentMonitorDidChangeNetworkReachability:]
  -[ICInAppMessageManager _schedulePeriodicUpdate]
  -[ICInAppMessageManager getAllMetadataForBundleIdentifier:completion:]
  -[ICInAppMessageManager downloadResourcesForMessageWithIdentifier:bundleIdentifier:completion:]
  -[ICInAppMessageManager _performCacheConsistencyCheck]
  -[ICInAppMessageManager _removeMessageEntryWithIdentifier:forBundleIdentifier:completion:]
  -[ICInAppMessageManager _performSyncRetryIfPending:]
  -[ICInAppMessageManager _downloadResourcesForMessageWithIdentifier:bundleIdentifier:completion:]
  -[ICInAppMessageManager _checkForMessageResourcesNeedingDownloadForcingIfNecessary:]
  -[ICInAppMessageManager removeMessageEntryWithIdentifier:forBundleIdentifier:completion:]
  -[ICInAppMessageManager .cxx_destruct]
  -[ICInAppMessageManager _removeAllMessageEntriesForBundleIdentifier:completion:]
  -[ICInAppMessageManager setProperty:forKey:bundleIdentifier:completion:]
  -[ICInAppMessageManager stopSystemService]
  -[ICInAppMessageManager reportEventForMessageIdentifier:withParams:flushImmediately:completion:]
  -[ICInAppMessageManager _processSyncResponse:completion:]
  -[ICInAppMessageManager allMessageEntriesWithCompletion:]
  -[ICInAppMessageManager setGlobalProperty:forKey:completion:]
  -[ICInAppMessageManager initWithMessageStore:identityStore:]
  -[ICInAppMessageManager _performSyncWithCompletion:]
  -[ICInAppMessageManager removeApplicationBadgeForBundleIdentifier:fromPresentedMessageEntry:completion:]
  -[ICInAppMessageManager resetMessagesWithCompletion:]
  -[ICInAppMessageManager getPropertyForKey:bundleIdentifier:completion:]
  -[ICInAppMessageManager removeMetadataForMessageIdentifier:bundleIdentifier:completion:]
  -[ICInAppMessageManager reportEventForMessageIdentifier:withParams:completion:]
  -[ICInAppMessageManager addMessageEntry:completion:]
  -[ICInAppMessageManager updateMetadata:messageIdentifier:bundleIdentifier:completion:]
  -[ICInAppMessageManager _privacyAcknowledgementRequired]
  -[ICInAppMessageManager _addConnection:]
  -[ICInAppMessageManager _handleICInAppMessagesDidChangeDistributedNotification:]
  -[ICInAppMessageManager _xpcClientConnection]
  -[ICInAppMessageManager getAllMetadataForBundleIdentifiers:completion:]
  -[ICInAppMessageManager getMetadataForMessageIdentifier:bundleIdentifier:completion:]
  -[ICInAppMessageManager messageEntriesForBundleIdentifier:completion:]
  -[ICInAppMessageManager syncMessagesWithCompletion:]
  -[ICInAppMessageManager _init]
  -[ICInAppMessageManager flushEventsWithCompletion:]
  -[ICInAppMessageManager _handleUserIdentityStoreDidChangeNotification:]
  -[ICInAppMessageManager _addMessageEntry:completion:]
  -[ICInAppMessageManager clearCachedResourcesForMessageWithIdentifier:bundleIdentifier:completion:]
  -[ICInAppMessageManager updateMessageEntry:completion:]
  -[ICInAppMessageManager startSystemService]
  -[ICInAppMessageManager addMessageEntryFromAMSDialogRequest:bundleIdentifier:completion:]
  -[ICInAppMessageManager listener:shouldAcceptNewConnection:]
  -[ICInAppMessageManager messageEntriesForBundleIdentifiers:completion:]
  -[ICInAppMessageManager _storeRequestContext]
  -[ICInAppMessageManager _loadConfigurationWithCompletion:]
  -[ICInAppMessageManager _resourceCacheDirectoryPath]
  -[ICInAppMessageManager _unsafeMessageStore]
  -[ICInAppMessageManager messageEntryWithIdentifier:bundleIdentifier:completion:]
  -[ICInAppMessageManager getGlobalPropertyForKey:completion:]
  -[ICInAppMessageManager removeAllMessageEntriesForBundleIdentifier:completion:]
  -[ICInAppMessageManager _updateShouldDownloadResources:onMessageWithIdentifier:bundleIdentifier:completion:]


ICURLPerformanceMetrics : NSObject
 @property  double connectionStartTime
 @property  double connectionEndTime
 @property  double domainLookupStartTime
 @property  double domainLookupEndTime
 @property  double fetchStartTime
 @property  double requestStartTime
 @property  double responseStartTime
 @property  double responseEndTime
 @property  double secureConnectionStartTime
 @property  BOOL cachedResponse
 @property  BOOL connectionReused
 @property  NSString *appleTimingApp
 @property  NSString *connectionType
 @property  NSString *edgeNodeCacheStatus
 @property  NSString *environmentDataCenter
 @property  NSString *responseDate
 @property  unsigned long statusCode
 @property  unsigned long redirectCount
 @property  unsigned long requestMessageSize
 @property  NSString *requestUrl
 @property  NSString *resolvedIPAddress
 @property  unsigned long responseMessageSize

  // class methods
  +[ICURLPerformanceMetrics networkingTimeFromMetrics:]

  // instance methods
  -[ICURLPerformanceMetrics responseMessageSize]
  -[ICURLPerformanceMetrics appleTimingApp]
  -[ICURLPerformanceMetrics domainLookupStartTime]
  -[ICURLPerformanceMetrics edgeNodeCacheStatus]
  -[ICURLPerformanceMetrics responseDate]
  -[ICURLPerformanceMetrics domainLookupEndTime]
  -[ICURLPerformanceMetrics responseStartTime]
  -[ICURLPerformanceMetrics connectionReused]
  -[ICURLPerformanceMetrics responseEndTime]
  -[ICURLPerformanceMetrics fetchStartTime]
  -[ICURLPerformanceMetrics connectionType]
  -[ICURLPerformanceMetrics resolvedIPAddress]
  -[ICURLPerformanceMetrics environmentDataCenter]
  -[ICURLPerformanceMetrics .cxx_destruct]
  -[ICURLPerformanceMetrics connectionEndTime]
  -[ICURLPerformanceMetrics requestMessageSize]
  -[ICURLPerformanceMetrics cachedResponse]
  -[ICURLPerformanceMetrics initWithTransactionMetrics:request:]
  -[ICURLPerformanceMetrics secureConnectionStartTime]
  -[ICURLPerformanceMetrics redirectCount]
  -[ICURLPerformanceMetrics requestUrl]
  -[ICURLPerformanceMetrics statusCode]
  -[ICURLPerformanceMetrics connectionStartTime]
  -[ICURLPerformanceMetrics requestStartTime]


ICRemoteRequestOperationExecutionResponse : NSObject <NSSecureCoding>
 @property  <NSSecureCoding> *remoteRequestOperationResponse
 @property  NSError *remoteRequestOperationError

  // class methods
  +[ICRemoteRequestOperationExecutionResponse supportsSecureCoding]

  // instance methods
  -[ICRemoteRequestOperationExecutionResponse initWithCoder:]
  -[ICRemoteRequestOperationExecutionResponse .cxx_destruct]
  -[ICRemoteRequestOperationExecutionResponse remoteRequestOperationError]
  -[ICRemoteRequestOperationExecutionResponse initWithRemoteRequestOperationResponse:remoteRequestOperationError:]
  -[ICRemoteRequestOperationExecutionResponse setRemoteRequestOperationError:]
  -[ICRemoteRequestOperationExecutionResponse setRemoteRequestOperationResponse:]
  -[ICRemoteRequestOperationExecutionResponse encodeWithCoder:]
  -[ICRemoteRequestOperationExecutionResponse remoteRequestOperationResponse]


ICSubscriptionRedownloadRequest : ICMediaRedownloadRequest
  // instance methods
  -[ICSubscriptionRedownloadRequest init]
  -[ICSubscriptionRedownloadRequest initWithRequestContext:subscriptionItemID:]


_ICLLActionMessage : PBCodable <NSCopying>
  // instance methods
  -[_ICLLActionMessage .cxx_destruct]
  -[_ICLLActionMessage dictionaryRepresentation]
  -[_ICLLActionMessage writeTo:]
  -[_ICLLActionMessage isEqual:]
  -[_ICLLActionMessage readFrom:]
  -[_ICLLActionMessage copyWithZone:]


_ICLLReplaceQueueItemsCommand : PBCodable <NSCopying>
  // instance methods
  -[_ICLLReplaceQueueItemsCommand .cxx_destruct]
  -[_ICLLReplaceQueueItemsCommand dictionaryRepresentation]
  -[_ICLLReplaceQueueItemsCommand writeTo:]
  -[_ICLLReplaceQueueItemsCommand isEqual:]
  -[_ICLLReplaceQueueItemsCommand readFrom:]
  -[_ICLLReplaceQueueItemsCommand copyWithZone:]


ICDelegationConsumerNetService : NSObject <NSNetServiceDelegate>
 @property  <ICDelegationConsumerNetServiceDelegate> *delegate
 @property  NSDictionary *userIdentityDelegationAccountUUIDs
 @property  ICDelegationServiceSecuritySettings *securitySettings
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ICDelegationConsumerNetService netService:didAcceptConnectionWithInputStream:outputStream:]
  -[ICDelegationConsumerNetService publish]
  -[ICDelegationConsumerNetService netServiceDidPublish:]
  -[ICDelegationConsumerNetService .cxx_destruct]
  -[ICDelegationConsumerNetService netService:didNotPublish:]
  -[ICDelegationConsumerNetService stop]
  -[ICDelegationConsumerNetService setDelegate:]
  -[ICDelegationConsumerNetService delegate]
  -[ICDelegationConsumerNetService dealloc]
  -[ICDelegationConsumerNetService _updateNetServiceStatus]
  -[ICDelegationConsumerNetService initWithUserIdentityDelegationAccountUUIDs:]
  -[ICDelegationConsumerNetService securitySettings]
  -[ICDelegationConsumerNetService userIdentityDelegationAccountUUIDs]


ICMachineDataProvisionOperation : ICMachineDataOperation
  // instance methods
  -[ICMachineDataProvisionOperation .cxx_destruct]
  -[ICMachineDataProvisionOperation execute]
  -[ICMachineDataProvisionOperation _finishWithError:]


ICMediaAssetDownloadRequest : ICRequestOperation <AVAssetResourceLoaderDelegate>
 @property  NSURL *destinationURL
 @property  BOOL allowsCellularData
 @property  BOOL allowsCellularFallback
 @property  BOOL allowDownloadOnConstrainedNetworks
 @property  BOOL discretionary
 @property  BOOL requiresPower
 @property  BOOL prefersHLSAsset
 @property  NSData *resumeData
 @property  NSNumber *minimumBitrate
 @property  NSNumber *maximumSampleRate
 @property  BOOL prefersLossless
 @property  BOOL prefersMultichannel
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ICMediaAssetDownloadRequest _sessionIdentifier]
  -[ICMediaAssetDownloadRequest setValue:forHTTPHeaderField:]
  -[ICMediaAssetDownloadRequest resumeData]
  -[ICMediaAssetDownloadRequest .cxx_destruct]
  -[ICMediaAssetDownloadRequest setDiscretionary:]
  -[ICMediaAssetDownloadRequest performRequestWithResponseHandler:]
  -[ICMediaAssetDownloadRequest setDestinationURL:]
  -[ICMediaAssetDownloadRequest execute]
  -[ICMediaAssetDownloadRequest isDiscretionary]
  -[ICMediaAssetDownloadRequest destinationURL]
  -[ICMediaAssetDownloadRequest resourceLoader:shouldWaitForRenewalOfRequestedResource:]
  -[ICMediaAssetDownloadRequest cancel]
  -[ICMediaAssetDownloadRequest resourceLoader:shouldWaitForLoadingOfRequestedResource:]
  -[ICMediaAssetDownloadRequest finishWithError:]
  -[ICMediaAssetDownloadRequest _createAVAssetDownloadOptionsDictionary]
  -[ICMediaAssetDownloadRequest _mediaKindFromResponseItemMetadata:]
  -[ICMediaAssetDownloadRequest initWithRequestContext:storeMediaResponseItem:resumeData:]
  -[ICMediaAssetDownloadRequest allowsCellularData]
  -[ICMediaAssetDownloadRequest setAllowsCellularData:]
  -[ICMediaAssetDownloadRequest allowsCellularFallback]
  -[ICMediaAssetDownloadRequest setAllowsCellularFallback:]
  -[ICMediaAssetDownloadRequest allowDownloadOnConstrainedNetworks]
  -[ICMediaAssetDownloadRequest setAllowDownloadOnConstrainedNetworks:]
  -[ICMediaAssetDownloadRequest requiresPower]
  -[ICMediaAssetDownloadRequest setRequiresPower:]
  -[ICMediaAssetDownloadRequest prefersHLSAsset]
  -[ICMediaAssetDownloadRequest setPrefersHLSAsset:]
  -[ICMediaAssetDownloadRequest setResumeData:]
  -[ICMediaAssetDownloadRequest minimumBitrate]
  -[ICMediaAssetDownloadRequest setMinimumBitrate:]
  -[ICMediaAssetDownloadRequest maximumSampleRate]
  -[ICMediaAssetDownloadRequest setMaximumSampleRate:]
  -[ICMediaAssetDownloadRequest prefersLossless]
  -[ICMediaAssetDownloadRequest setPrefersLossless:]
  -[ICMediaAssetDownloadRequest prefersMultichannel]
  -[ICMediaAssetDownloadRequest setPrefersMultichannel:]


ICURLSessionManager : NSObject
  // class methods
  +[ICURLSessionManager highPrioritySession]
  +[ICURLSessionManager defaultSession]
  +[ICURLSessionManager unlimitedHighPrioritySession]
  +[ICURLSessionManager sharedSessionManager]

  // instance methods
  -[ICURLSessionManager sessionWithIdentifier:configuration:]
  -[ICURLSessionManager .cxx_destruct]
  -[ICURLSessionManager init]
  -[ICURLSessionManager _defaultSessionWithQualityOfService:maxConcurrentRequests:]
  -[ICURLSessionManager sessionWithIdentifier:]
  -[ICURLSessionManager _defaultSessionIdentifierWithQualityOfService:maxConcurrentRequests:]
  -[ICURLSessionManager removeSessionWithIdentifier:]
  -[ICURLSessionManager addSession:withIdentifier:]
  -[ICURLSessionManager sessionWithQualityOfService:]
  -[ICURLSessionManager sessionWithIdentifier:creationBlock:]


ICPushNotificationMessage : NSObject
 @property  long long sagaServerRevision
 @property  NSArray *sagaUpdatedSubscribedPlaylistIDs
 @property  long long jaliscoServerRevision
 @property  NSArray *jaliscoChangedMediaTypes
 @property  NSString *clientIdentifier
 @property  long long moduleIdentifier
 @property  NSDictionary *userInfo
 @property  long long accountDSID
 @property  long long actionType
 @property  NSDictionary *apsPayload

  // instance methods
  -[ICPushNotificationMessage accountDSID]
  -[ICPushNotificationMessage .cxx_destruct]
  -[ICPushNotificationMessage moduleIdentifier]
  -[ICPushNotificationMessage actionType]
  -[ICPushNotificationMessage clientIdentifier]
  -[ICPushNotificationMessage userInfo]
  -[ICPushNotificationMessage initWithMessageUserInfo:]
  -[ICPushNotificationMessage apsPayload]
  -[ICPushNotificationMessage sagaServerRevision]
  -[ICPushNotificationMessage sagaUpdatedSubscribedPlaylistIDs]
  -[ICPushNotificationMessage jaliscoServerRevision]
  -[ICPushNotificationMessage jaliscoChangedMediaTypes]


_ICLLAddQueueItemsCommand : PBCodable <NSCopying>
  // instance methods
  -[_ICLLAddQueueItemsCommand .cxx_destruct]
  -[_ICLLAddQueueItemsCommand dictionaryRepresentation]
  -[_ICLLAddQueueItemsCommand writeTo:]
  -[_ICLLAddQueueItemsCommand isEqual:]
  -[_ICLLAddQueueItemsCommand readFrom:]
  -[_ICLLAddQueueItemsCommand copyWithZone:]


ICCloudClient : NSObject <ICCloudAvailability>
 @property  NSObject<OS_dispatch_queue> *serialAccessQueue
 @property  NSObject<OS_dispatch_queue> *serverSetupBlockQueue
 @property  NSXPCConnection *xpcConnection
 @property  long long preferredVideoQuality
 @property  BOOL active
 @property  ICCloudClientAvailabilityService *availabilityService
 @property  ICCloudClientCloudService *cloudService
 @property  ICCloudServerListenerEndpointProvider *listenerEndpointProvider
 @property  NSMutableArray *pendingServerSetupCompleteBlocks
 @property  BOOL serverIsSetup
 @property  ICConnectionConfiguration *configuration
 @property  @? updateSagaInProgressChangedHandler
 @property  @? updateJaliscoInProgressChangedHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ICCloudClient canShowCloudMusic]
  -[ICCloudClient isCellularDataRestricted]
  -[ICCloudClient becomeActive]
  -[ICCloudClient isCellularDataRestrictedForStoreApps]
  -[ICCloudClient hasProperNetworkConditionsToShowCloudMedia]
  -[ICCloudClient loadIsUpdateInProgressWithCompletionHandler:]
  -[ICCloudClient loadScreenshotInfoForPurchaseHistoryID:completionHandler:]
  -[ICCloudClient isCellularDataRestrictedForMusic]
  -[ICCloudClient shouldProhibitVideosActionForCurrentNetworkConditions]
  -[ICCloudClient canShowCloudVideo]
  -[ICCloudClient shouldProhibitActionsForCurrentNetworkConditions]
  -[ICCloudClient shouldProhibitMusicActionForCurrentNetworkConditions]
  -[ICCloudClient serverIsSetup]
  -[ICCloudClient setPreferredVideoQuality:]
  -[ICCloudClient xpcConnection]
  -[ICCloudClient shouldProhibitStoreAppsActionForCurrentNetworkConditions]
  -[ICCloudClient listenerEndpointProvider]
  -[ICCloudClient performBlockAfterServerSetup:]
  -[ICCloudClient updateArtistHeroImages]
  -[ICCloudClient hasProperNetworkConditionsToPlayMedia]
  -[ICCloudClient resignActive]
  -[ICCloudClient isCellularDataRestrictedForVideos]
  -[ICCloudClient canShowCloudDownloadButtons]
  -[ICCloudClient updateJaliscoInProgressChangedHandler]
  -[ICCloudClient deprioritizeArtistHeroImageForPersistentID:]
  -[ICCloudClient deprioritizeAlbumArtistHeroImageForPersistentID:]
  -[ICCloudClient setItemProperties:forPurchaseHistoryID:]
  -[ICCloudClient loadArtworkInfoForSagaID:completionHandler:]
  -[ICCloudClient loadIsJaliscoUpdateInProgressWithCompletionHandler:]
  -[ICCloudClient initWithUserIdentity:]
  -[ICCloudClient loadArtworkInfoForSagaIDs:completionHandler:]
  -[ICCloudClient updateSubscribedPlaylistsWithSagaIDs:ignoreMinRefreshInterval:completionHandler:]
  -[ICCloudClient isActive]
  -[ICCloudClient configuration]
  -[ICCloudClient deprioritizeSubscriptionScreenshotForPersistentID:]
  -[ICCloudClient loadScreenshotInfoForSagaIDs:completionHandler:]
  -[ICCloudClient listCloudServerOperations]
  -[ICCloudClient deprioritizeSubscriptionItemArtworkForPersistentID:]
  -[ICCloudClient loadArtworkInfoForPurchaseHistoryID:completionHandler:]
  -[ICCloudClient isAuthenticated]
  -[ICCloudClient .cxx_destruct]
  -[ICCloudClient disableCloudLibraryWithReason:completionHandler:]
  -[ICCloudClient importScreenshotForPurchaseHistoryID:completionHandler:]
  -[ICCloudClient setDaemonConfiguration:]
  -[ICCloudClient loadBooksForStoreIDs:withCompletionHandler:]
  -[ICCloudClient uploadArtworkForPlaylistWithPersistentID:completionHandler:]
  -[ICCloudClient importScreenshotForSagaID:completionHandler:]
  -[ICCloudClient setCloudAddToPlaylistBehavior:completionHandler:]
  -[ICCloudClient setUpdateSagaInProgressChangedHandler:]
  -[ICCloudClient loadScreenshotInfoForPurchaseHistoryIDs:completionHandler:]
  -[ICCloudClient deprioritizeContainerArtworkForSagaID:]
  -[ICCloudClient sdk_addStoreItemWithOpaqueID:completionHandler:]
  -[ICCloudClient removePlaylistsWithSagaIDs:completionHandler:]
  -[ICCloudClient importSubscriptionContainerArtworkForPersistentID:completionHandler:]
  -[ICCloudClient loadScreenshotInfoForSagaID:completionHandler:]
  -[ICCloudClient isMediaKindDisabledForJaliscoLibrary:]
  -[ICCloudClient init]
  -[ICCloudClient deprioritizeItemArtworkForPurchaseHistoryID:]
  -[ICCloudClient isAutomaticDownloadsEnabledForMediaKindMusic]
  -[ICCloudClient updatePinnedSubscribedPlaylistsWithCompletion:]
  -[ICCloudClient deprioritizeItemArtworkForSagaID:]
  -[ICCloudClient importItemArtworkForPurchaseHistoryID:completionHandler:]
  -[ICCloudClient loadMissingArtwork]
  -[ICCloudClient isAuthenticatedWithCompletionHandler:]
  -[ICCloudClient setPendingServerSetupCompleteBlocks:]
  -[ICCloudClient cloudService]
  -[ICCloudClient hideItemsWithPurchaseHistoryIDs:completionHandler:]
  -[ICCloudClient loadUpdateProgressWithCompletionHandler:]
  -[ICCloudClient updateSagaLibraryWithReason:completionHandler:]
  -[ICCloudClient _serverJaliscoUpdateInProgressDidChange]
  -[ICCloudClient deprioritizeScreenshotForPurchaseHistoryID:]
  -[ICCloudClient _tearDownNotifications]
  -[ICCloudClient pendingServerSetupCompleteBlocks]
  -[ICCloudClient uploadCloudPlaylistProperties]
  -[ICCloudClient removeJaliscoLibraryWithCompletionHander:]
  -[ICCloudClient updateJaliscoLibraryWithCompletionHandler:]
  -[ICCloudClient addStoreItemWithAdamID:referral:toPlaylistWithPersistentID:completionHandler:]
  -[ICCloudClient _setupNotifications]
  -[ICCloudClient authenticateWithCompletionHandler:]
  -[ICCloudClient authenticateAndStartInitialImport:completionHandler:]
  -[ICCloudClient loadSagaUpdateProgressWithCompletionHandler:]
  -[ICCloudClient uploadCloudItemProperties]
  -[ICCloudClient createPlaylistWithPersistentID:properties:trackList:completionHandler:]
  -[ICCloudClient fetchEnhancedAudioOfflineKeys]
  -[ICCloudClient loadScreenshotInfoForSubscriptionPersistentID:completionHandler:]
  -[ICCloudClient sdk_addStoreItemWithOpaqueID:toPlaylistWithPersistentID:completionHandler:]
  -[ICCloudClient loadIsSagaUpdateInProgressWithCompletionHandler:]
  -[ICCloudClient initWithConfiguration:]
  -[ICCloudClient resetConfiguration:]
  -[ICCloudClient _enableCloudLibraryWithPolicy:startinitialImport:isExplicitUserAction:completionHandler:]
  -[ICCloudClient _isAuthenticated]
  -[ICCloudClient loadGeniusItemsForSagaID:completionHandler:]
  -[ICCloudClient loadArtworkInfoForPurchaseHistoryIDs:completionHandler:]
  -[ICCloudClient deauthenticateWithCompletionHandler:]
  -[ICCloudClient _serverSagaUpdateInProgressDidChange]
  -[ICCloudClient importAlbumArtistHeroImageForPersistentID:completionHandler:]
  -[ICCloudClient addStoreItemWithAdamID:referral:completionHandler:]
  -[ICCloudClient loadArtworkInfoForSubscriptionItemPersistentIDs:completionHandler:]
  -[ICCloudClient setAlbumProperties:forAlbumPersistentID:completionHandler:]
  -[ICCloudClient addGeniusPlaylistWithPersistentID:name:seedItemSagaIDs:itemSagaIDs:completionHandler:]
  -[ICCloudClient setActive:]
  -[ICCloudClient uploadItemProperties]
  -[ICCloudClient deprioritizeSubscriptionContainerArtworkForPersistentID:]
  -[ICCloudClient _serverSetupDidComplete]
  -[ICCloudClient sdk_createPlaylistWithPersistentID:properties:tracklist:completionHandler:]
  -[ICCloudClient deprioritizeScreenshotForSagaID:]
  -[ICCloudClient availabilityService]
  -[ICCloudClient updateJaliscoLibraryWithReason:completionHandler:]
  -[ICCloudClient removeItemsWithSagaIDs:completionHandler:]
  -[ICCloudClient importArtistHeroImageForPersistentID:completionHandler:]
  -[ICCloudClient setUpdateJaliscoInProgressChangedHandler:]
  -[ICCloudClient loadScreenshotInfoForSubscriptionPersistentIDs:completionHandler:]
  -[ICCloudClient dealloc]
  -[ICCloudClient enableCloudLibraryWithPolicy:startInitialImport:completionHandler:]
  -[ICCloudClient serialAccessQueue]
  -[ICCloudClient serverSetupBlockQueue]
  -[ICCloudClient addStorePlaylistWithGlobalID:completionHandler:]
  -[ICCloudClient loadArtworkInfoForContainerSagaID:completionHandler:]
  -[ICCloudClient isAuthenticatedWithQueue:completionHandler:]
  -[ICCloudClient setPlaylistProperties:trackList:forPlaylistPersistentID:completionHandler:]
  -[ICCloudClient importContainerArtworkForSagaID:completionHandler:]
  -[ICCloudClient createMusicNotificationFromAMSDialogRequest:error:]
  -[ICCloudClient loadJaliscoUpdateProgressWithCompletionHandler:]
  -[ICCloudClient hasSetPreferenceForAutomaticDownloads]
  -[ICCloudClient importSubscriptionScreenshotForPersistentID:completionHandler:]
  -[ICCloudClient updateSagaLibraryWithCompletionHandler:]
  -[ICCloudClient handleAutomaticDownloadPreferenceChangedForMediaKindMusic:withCompletionHandler:]
  -[ICCloudClient loadLastKnownEnableICMLErrorStatusWithCompletionHander:]
  -[ICCloudClient updateSagaInProgressChangedHandler]
  -[ICCloudClient disableCloudLibraryWithCompletionHandler:]
  -[ICCloudClient setServerIsSetup:]
  -[ICCloudClient refreshEnhancedAudioSharedKeys]
  -[ICCloudClient loadArtworkInfoForSubscriptionContainerPersistentIDs:completionHandler:]
  -[ICCloudClient publishPlaylistWithSagaID:completionHandler:]
  -[ICCloudClient addItemWithSagaID:toPlaylistWithPersistentID:completionHandler:]
  -[ICCloudClient preferredVideoQuality]
  -[ICCloudClient importSubscriptionItemArtworkForPersistentID:completionHandler:]
  -[ICCloudClient loadArtworkInfoForSubscriptionItemPersistentID:completionHandler:]
  -[ICCloudClient loadArtworkInfoForContainerSagaIDs:completionHandler:]
  -[ICCloudClient importItemArtworkForSagaID:completionHandler:]
  -[ICCloudClient loadArtworkInfoForSubscriptionContainerPersistentID:completionHandler:]
  -[ICCloudClient setItemProperties:forSagaID:]


ICAsyncBlockOperation : ICAsyncOperation
 @property  @? startHandler
 @property  @? cancellationHandler

  // instance methods
  -[ICAsyncBlockOperation .cxx_destruct]
  -[ICAsyncBlockOperation initWithStartHandler:]
  -[ICAsyncBlockOperation execute]
  -[ICAsyncBlockOperation cancel]
  -[ICAsyncBlockOperation cancellationHandler]
  -[ICAsyncBlockOperation setCancellationHandler:]
  -[ICAsyncBlockOperation startHandler]
  -[ICAsyncBlockOperation finishWithError:]


ICRemoteRequestOperationController : NSObject
  // class methods
  +[ICRemoteRequestOperationController sharedRemoteRequestOperationController]

  // instance methods
  -[ICRemoteRequestOperationController _clientConnection]
  -[ICRemoteRequestOperationController _willBeginExecutingRemoteRequestOperation]
  -[ICRemoteRequestOperationController _invalidateClientConnection]
  -[ICRemoteRequestOperationController _clientConnectionInvalidationTimerDidExpire]
  -[ICRemoteRequestOperationController .cxx_destruct]
  -[ICRemoteRequestOperationController _cancelClientConnectionInvalidationTimer]
  -[ICRemoteRequestOperationController _scheduleInvalidationOfClientConnection]
  -[ICRemoteRequestOperationController performRemoteRequestOperationWithExecutionContext:completionHandler:]
  -[ICRemoteRequestOperationController _init]
  -[ICRemoteRequestOperationController _didEndExecutingRemoteRequestOperation]


ICDeveloperTokenDefaultProvider : NSObject <ICDeveloperTokenProvider, NSSecureCoding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ICDeveloperTokenDefaultProvider supportsSecureCoding]

  // instance methods
  -[ICDeveloperTokenDefaultProvider fetchDeveloperTokenForClientInfo:completionHandler:]
  -[ICDeveloperTokenDefaultProvider invalidateCachedDeveloperTokenForClientInfo:completionHandler:]
  -[ICDeveloperTokenDefaultProvider initWithCoder:]
  -[ICDeveloperTokenDefaultProvider isEqual:]
  -[ICDeveloperTokenDefaultProvider encodeWithCoder:]


ICStoreMediaResponseItem : NSObject <NSCopying>
 @property  NSDate *assetExpirationDate
 @property  long long storeAdamID
 @property  NSURL *artworkURL
 @property  NSURL *cancelDownloadURL
 @property  NSString *downloadIdentifier
 @property  BOOL isPurchasedRedownload
 @property  ICStoreFinanceItemMetadata *metadata
 @property  NSDate *purchaseDate
 @property  NSString *redownloadParameters
 @property  NSArray *fileAssets
 @property  ICStoreHLSAssetInfo *hlsAsset
 @property  id suzeLeaseID

  // instance methods
  -[ICStoreMediaResponseItem artworkURL]
  -[ICStoreMediaResponseItem .cxx_destruct]
  -[ICStoreMediaResponseItem purchaseDate]
  -[ICStoreMediaResponseItem isPurchasedRedownload]
  -[ICStoreMediaResponseItem cancelDownloadURL]
  -[ICStoreMediaResponseItem metadata]
  -[ICStoreMediaResponseItem hlsAsset]
  -[ICStoreMediaResponseItem redownloadParameters]
  -[ICStoreMediaResponseItem storeAdamID]
  -[ICStoreMediaResponseItem suzeLeaseID]
  -[ICStoreMediaResponseItem fileAssets]
  -[ICStoreMediaResponseItem downloadIdentifier]
  -[ICStoreMediaResponseItem copyWithZone:]
  -[ICStoreMediaResponseItem downloadableAsset]
  -[ICStoreMediaResponseItem initWithItemResponseDictionary:urlBag:]
  -[ICStoreMediaResponseItem downloadableAssetMatchingFlavorType:]
  -[ICStoreMediaResponseItem assetExpirationDate]
  -[ICStoreMediaResponseItem setAssetExpirationDate:]


ICRadioFetchMetadataRequest : NSObject <NSCopying>
 @property  NSArray *storeAdamIDs
 @property  ICStoreRequestContext *storeRequestContext
 @property  NSData *timedMetadataData
 @property  long long qualityOfService

  // instance methods
  -[ICRadioFetchMetadataRequest storeRequestContext]
  -[ICRadioFetchMetadataRequest qualityOfService]
  -[ICRadioFetchMetadataRequest .cxx_destruct]
  -[ICRadioFetchMetadataRequest setQualityOfService:]
  -[ICRadioFetchMetadataRequest init]
  -[ICRadioFetchMetadataRequest performWithResponseHandler:]
  -[ICRadioFetchMetadataRequest setStoreRequestContext:]
  -[ICRadioFetchMetadataRequest copyWithZone:]
  -[ICRadioFetchMetadataRequest timedMetadataData]
  -[ICRadioFetchMetadataRequest storeAdamIDs]
  -[ICRadioFetchMetadataRequest setStoreAdamIDs:]
  -[ICRadioFetchMetadataRequest setTimedMetadataData:]


ICAVContentKeySessionReusePool : NSObject
 @property  NSMutableArray *reusables
 @property  long long currentBatchNumber
 @property  long long maxUseCount

  // class methods
  +[ICAVContentKeySessionReusePool defaultPool]

  // instance methods
  -[ICAVContentKeySessionReusePool .cxx_destruct]
  -[ICAVContentKeySessionReusePool reuse:]
  -[ICAVContentKeySessionReusePool init]
  -[ICAVContentKeySessionReusePool reusables]
  -[ICAVContentKeySessionReusePool mediaServicesWereLost]
  -[ICAVContentKeySessionReusePool mediaServicesWereReset]
  -[ICAVContentKeySessionReusePool currentBatchNumber]
  -[ICAVContentKeySessionReusePool maxUseCount]
  -[ICAVContentKeySessionReusePool setCurrentBatchNumber:]
  -[ICAVContentKeySessionReusePool invalidateAllReusables]
  -[ICAVContentKeySessionReusePool reusableWithIdentifier:nonreusableTokens:]
  -[ICAVContentKeySessionReusePool didReceiveFairPlayError:]
  -[ICAVContentKeySessionReusePool setMaxUseCount:]
  -[ICAVContentKeySessionReusePool setReusables:]


ICMusicRestoreBagConfiguration : NSObject
 @property  NSArray *allowedKinds
 @property  NSArray *allowedMatchStatus
 @property  NSURL *restoreURL
 @property  BOOL shouldGZip

  // instance methods
  -[ICMusicRestoreBagConfiguration .cxx_destruct]
  -[ICMusicRestoreBagConfiguration initWithServerConfiguration:]
  -[ICMusicRestoreBagConfiguration allowedKinds]
  -[ICMusicRestoreBagConfiguration allowedMatchStatus]
  -[ICMusicRestoreBagConfiguration restoreURL]
  -[ICMusicRestoreBagConfiguration shouldGZip]


ICCloudServiceStatusRemoteMonitoring : NSObject
  // class methods
  +[ICCloudServiceStatusRemoteMonitoring clientInterface]
  +[ICCloudServiceStatusRemoteMonitoring serviceInterface]


ICLightweightMusicSubscriptionStatusResponse : NSObject <NSCopying, NSSecureCoding>
 @property  ICLightweightMusicSubscriptionStatus *lightweightSubscriptionStatus

  // class methods
  +[ICLightweightMusicSubscriptionStatusResponse supportsSecureCoding]

  // instance methods
  -[ICLightweightMusicSubscriptionStatusResponse initWithCoder:]
  -[ICLightweightMusicSubscriptionStatusResponse .cxx_destruct]
  -[ICLightweightMusicSubscriptionStatusResponse copyWithZone:]
  -[ICLightweightMusicSubscriptionStatusResponse encodeWithCoder:]
  -[ICLightweightMusicSubscriptionStatusResponse _initWithExtendedSubscriptionStatusResponse:]
  -[ICLightweightMusicSubscriptionStatusResponse lightweightSubscriptionStatus]


ICLibraryAuthServiceClientTokenResponse : NSObject <NSCopying>
 @property  int resultCode
 @property  NSString *serverHostName
 @property  long long serverInstance
 @property  BOOL success
 @property  ICLibraryAuthServiceClientTokenResult *tokenResult

  // instance methods
  -[ICLibraryAuthServiceClientTokenResponse setSuccess:]
  -[ICLibraryAuthServiceClientTokenResponse resultCode]
  -[ICLibraryAuthServiceClientTokenResponse initWithResponseDictionary:]
  -[ICLibraryAuthServiceClientTokenResponse .cxx_destruct]
  -[ICLibraryAuthServiceClientTokenResponse tokenResult]
  -[ICLibraryAuthServiceClientTokenResponse serverInstance]
  -[ICLibraryAuthServiceClientTokenResponse initWithResultCode:]
  -[ICLibraryAuthServiceClientTokenResponse isSuccess]
  -[ICLibraryAuthServiceClientTokenResponse copyWithZone:]
  -[ICLibraryAuthServiceClientTokenResponse serverHostName]


ICLibraryAuthServiceClientTokenResult : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *token
 @property  long long generatedAtMillis
 @property  long long timeToLiveMillis
 @property  long long lifespanMillis
 @property  ICLibraryAuthServiceClientTokenIdentifier *tokenIdentitifer
 @property  NSDate *expirationDate
 @property  BOOL isExpired

  // class methods
  +[ICLibraryAuthServiceClientTokenResult supportsSecureCoding]

  // instance methods
  -[ICLibraryAuthServiceClientTokenResult initWithCoder:]
  -[ICLibraryAuthServiceClientTokenResult initWithResponseDictionary:]
  -[ICLibraryAuthServiceClientTokenResult .cxx_destruct]
  -[ICLibraryAuthServiceClientTokenResult isExpired]
  -[ICLibraryAuthServiceClientTokenResult timeToLiveMillis]
  -[ICLibraryAuthServiceClientTokenResult token]
  -[ICLibraryAuthServiceClientTokenResult copyWithZone:]
  -[ICLibraryAuthServiceClientTokenResult expirationDate]
  -[ICLibraryAuthServiceClientTokenResult encodeWithCoder:]
  -[ICLibraryAuthServiceClientTokenResult generatedAtMillis]
  -[ICLibraryAuthServiceClientTokenResult lifespanMillis]
  -[ICLibraryAuthServiceClientTokenResult tokenIdentitifer]


ICLibraryAuthServiceClientTokenIdentifier : NSObject <NSCopying, NSSecureCoding>
 @property  NSNumber *DSID
 @property  NSString *deviceGUID

  // class methods
  +[ICLibraryAuthServiceClientTokenIdentifier supportsSecureCoding]

  // instance methods
  -[ICLibraryAuthServiceClientTokenIdentifier DSID]
  -[ICLibraryAuthServiceClientTokenIdentifier initWithCoder:]
  -[ICLibraryAuthServiceClientTokenIdentifier initWithResponseDictionary:]
  -[ICLibraryAuthServiceClientTokenIdentifier .cxx_destruct]
  -[ICLibraryAuthServiceClientTokenIdentifier deviceGUID]
  -[ICLibraryAuthServiceClientTokenIdentifier copyWithZone:]
  -[ICLibraryAuthServiceClientTokenIdentifier encodeWithCoder:]


ICUserIdentity : NSObject <_MSVAccountInformationProviding, NSCopying, NSSecureCoding>
 @property  NSString *accountDSID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long creationTime
 @property  NSString *deviceIdentifier
 @property  NSNumber *DSID
 @property  BOOL allowsDelegation
 @property  BOOL allowsAccountEstablishment
 @property  long long type
 @property  unsigned long hash

  // class methods
  +[ICUserIdentity activeLockerAccount]
  +[ICUserIdentity supportsSecureCoding]
  +[ICUserIdentity activeAccount]
  +[ICUserIdentity autoupdatingActiveAccount]
  +[ICUserIdentity nullIdentity]
  +[ICUserIdentity specificAccountWithDSID:]
  +[ICUserIdentity autoupdatingActiveLockerAccount]
  +[ICUserIdentity carrierBundleWithDeviceIdentifier:]

  // instance methods
  -[ICUserIdentity accountDSID]
  -[ICUserIdentity _setResolvedDSID:]
  -[ICUserIdentity DSID]
  -[ICUserIdentity creationTime]
  -[ICUserIdentity _resolvedDSIDUsingSpecificIdentityStore:]
  -[ICUserIdentity initWithCoder:]
  -[ICUserIdentity allowsDelegation]
  -[ICUserIdentity .cxx_destruct]
  -[ICUserIdentity hashInStore:]
  -[ICUserIdentity init]
  -[ICUserIdentity isEqual:]
  -[ICUserIdentity identityAllowingDelegation:]
  -[ICUserIdentity isEqualToIdentity:inStore:]
  -[ICUserIdentity _ensureResolvedDSIDUsingSpecificIdentityStore:]
  -[ICUserIdentity allowsAccountEstablishment]
  -[ICUserIdentity _isComparableUsingResolvedDSID]
  -[ICUserIdentity _performEncodingTaskUsingSpecificIdentityStore:encodingHandler:]
  -[ICUserIdentity deviceIdentifier]
  -[ICUserIdentity type]
  -[ICUserIdentity copyWithZone:]
  -[ICUserIdentity identityAllowingEstablishment:]
  -[ICUserIdentity encodeWithCoder:]


ICPlayActivityAudioQualityProperties : NSObject <NSSecureCoding, NSCopying, NSMutableCopying, NSSecureCoding>
 @property  long long bitRate
 @property  long long bitDepth
 @property  NSString *channelLayoutDescription
 @property  unsigned int codec
 @property  NSString *codecString
 @property  long long sampleRate
 @property  BOOL spatialized

  // class methods
  +[ICPlayActivityAudioQualityProperties supportsSecureCoding]

  // instance methods
  -[ICPlayActivityAudioQualityProperties codec]
  -[ICPlayActivityAudioQualityProperties sampleRate]
  -[ICPlayActivityAudioQualityProperties initWithCoder:]
  -[ICPlayActivityAudioQualityProperties .cxx_destruct]
  -[ICPlayActivityAudioQualityProperties bitRate]
  -[ICPlayActivityAudioQualityProperties bitDepth]
  -[ICPlayActivityAudioQualityProperties isSpatialized]
  -[ICPlayActivityAudioQualityProperties mutableCopyWithZone:]
  -[ICPlayActivityAudioQualityProperties copyWithZone:]
  -[ICPlayActivityAudioQualityProperties _copyWithClass:zone:]
  -[ICPlayActivityAudioQualityProperties encodeWithCoder:]
  -[ICPlayActivityAudioQualityProperties channelLayoutDescription]
  -[ICPlayActivityAudioQualityProperties codecString]


ICMutablePlayActivityAudioQualityProperties : ICPlayActivityAudioQualityProperties
 @property  long long bitRate
 @property  long long bitDepth
 @property  NSString *channelLayoutDescription
 @property  unsigned int codec
 @property  long long sampleRate
 @property  BOOL spatialized

  // instance methods
  -[ICMutablePlayActivityAudioQualityProperties setCodec:]
  -[ICMutablePlayActivityAudioQualityProperties setBitDepth:]
  -[ICMutablePlayActivityAudioQualityProperties setSpatialized:]
  -[ICMutablePlayActivityAudioQualityProperties mutableCopyWithZone:]
  -[ICMutablePlayActivityAudioQualityProperties copyWithZone:]
  -[ICMutablePlayActivityAudioQualityProperties setSampleRate:]
  -[ICMutablePlayActivityAudioQualityProperties setBitRate:]
  -[ICMutablePlayActivityAudioQualityProperties setChannelLayoutDescription:]


ICLibraryAuthServiceClientTokenRequest : ICRequestOperation
  // instance methods
  -[ICLibraryAuthServiceClientTokenRequest .cxx_destruct]
  -[ICLibraryAuthServiceClientTokenRequest performRequestWithResponseHandler:]
  -[ICLibraryAuthServiceClientTokenRequest execute]
  -[ICLibraryAuthServiceClientTokenRequest initWithStoreRequestContext:]


ICURLBagProvider : NSObject
  // class methods
  +[ICURLBagProvider sharedBagProvider]

  // instance methods
  -[ICURLBagProvider invalidateCache]
  -[ICURLBagProvider .cxx_destruct]
  -[ICURLBagProvider _cacheFilePath]
  -[ICURLBagProvider _getCacheKeyForRequestContext:]
  -[ICURLBagProvider init]
  -[ICURLBagProvider _loadCache]
  -[ICURLBagProvider getBagForRequestContext:forceRefetch:withCompletionHandler:]
  -[ICURLBagProvider _fetchBagForRequestContext:withCompletionHandler:]
  -[ICURLBagProvider _handleUserIdentityStoreDidChangeNotification:]
  -[ICURLBagProvider dealloc]
  -[ICURLBagProvider _shouldUseLegacyProtocolForRequestContext:]
  -[ICURLBagProvider getBagForRequestContext:withCompletionHandler:]
  -[ICURLBagProvider _saveCache]


_ICLLPlayNowQueueItemsAction : PBCodable <NSCopying>
  // instance methods
  -[_ICLLPlayNowQueueItemsAction .cxx_destruct]
  -[_ICLLPlayNowQueueItemsAction dictionaryRepresentation]
  -[_ICLLPlayNowQueueItemsAction writeTo:]
  -[_ICLLPlayNowQueueItemsAction isEqual:]
  -[_ICLLPlayNowQueueItemsAction readFrom:]
  -[_ICLLPlayNowQueueItemsAction copyWithZone:]


ICMusicSubscriptionStatusResponse : NSObject <NSCopying, NSSecureCoding>
 @property  BOOL finalResponse
 @property  BOOL needsReload
 @property  ICMusicSubscriptionStatus *subscriptionStatus
 @property  NSDictionary *propertyListRepresentation
 @property  NSDate *expirationDate
 @property  BOOL expired

  // class methods
  +[ICMusicSubscriptionStatusResponse supportsSecureCoding]
  +[ICMusicSubscriptionStatusResponse isValidSubscriptionStatusResponseDictionary:error:]
  +[ICMusicSubscriptionStatusResponse isValidSubscriptionStatusPropertyListRepresentation:error:]

  // instance methods
  -[ICMusicSubscriptionStatusResponse setSubscriptionStatus:]
  -[ICMusicSubscriptionStatusResponse initWithCoder:]
  -[ICMusicSubscriptionStatusResponse subscriptionStatus]
  -[ICMusicSubscriptionStatusResponse .cxx_destruct]
  -[ICMusicSubscriptionStatusResponse isExpired]
  -[ICMusicSubscriptionStatusResponse initWithPropertyListRepresentation:]
  -[ICMusicSubscriptionStatusResponse propertyListRepresentation]
  -[ICMusicSubscriptionStatusResponse initWithResponseDictionary:expirationDate:]
  -[ICMusicSubscriptionStatusResponse needsReload]
  -[ICMusicSubscriptionStatusResponse isFinalResponse]
  -[ICMusicSubscriptionStatusResponse setNeedsReload:]
  -[ICMusicSubscriptionStatusResponse _init]
  -[ICMusicSubscriptionStatusResponse setFinalResponse:]
  -[ICMusicSubscriptionStatusResponse copyWithZone:]
  -[ICMusicSubscriptionStatusResponse expirationDate]
  -[ICMusicSubscriptionStatusResponse encodeWithCoder:]


_ICLLRemoveQueueItemAction : PBCodable <NSCopying>
  // instance methods
  -[_ICLLRemoveQueueItemAction .cxx_destruct]
  -[_ICLLRemoveQueueItemAction dictionaryRepresentation]
  -[_ICLLRemoveQueueItemAction writeTo:]
  -[_ICLLRemoveQueueItemAction isEqual:]
  -[_ICLLRemoveQueueItemAction readFrom:]
  -[_ICLLRemoveQueueItemAction copyWithZone:]


ICLibraryAuthServiceBulkClientTokenRequest : ICRequestOperation
  // instance methods
  -[ICLibraryAuthServiceBulkClientTokenRequest .cxx_destruct]
  -[ICLibraryAuthServiceBulkClientTokenRequest performRequestWithResponseHandler:]
  -[ICLibraryAuthServiceBulkClientTokenRequest execute]
  -[ICLibraryAuthServiceBulkClientTokenRequest initWithStoreRequestContext:accountDSIDs:]


ICMusicSubscriptionAccountlessPlaybackRequest : NSObject
 @property  NSString *assetSourceStorefrontID
 @property  ICStoreRequestContext *requestContext
 @property  long long qualityOfService
 @property  long long storeSubscriptionAdamID

  // instance methods
  -[ICMusicSubscriptionAccountlessPlaybackRequest qualityOfService]
  -[ICMusicSubscriptionAccountlessPlaybackRequest .cxx_destruct]
  -[ICMusicSubscriptionAccountlessPlaybackRequest setQualityOfService:]
  -[ICMusicSubscriptionAccountlessPlaybackRequest storeSubscriptionAdamID]
  -[ICMusicSubscriptionAccountlessPlaybackRequest performWithResponseHandler:]
  -[ICMusicSubscriptionAccountlessPlaybackRequest requestContext]
  -[ICMusicSubscriptionAccountlessPlaybackRequest setAssetSourceStorefrontID:]
  -[ICMusicSubscriptionAccountlessPlaybackRequest initWithRequestContext:storeSubscriptionAdamID:]
  -[ICMusicSubscriptionAccountlessPlaybackRequest assetSourceStorefrontID]


ICDelegationConsumerServiceProtocolHandler : NSObject
  // instance methods
  -[ICDelegationConsumerServiceProtocolHandler .cxx_destruct]
  -[ICDelegationConsumerServiceProtocolHandler init]
  -[ICDelegationConsumerServiceProtocolHandler getResponseForFinishDelegationRequest:withSessionIDToRequestInfoMap:completionHandler:]
  -[ICDelegationConsumerServiceProtocolHandler getResponseForStartDelegationRequest:requestContext:withCompletionHandler:]


ICAMSBagValuePromise : AMSPromise
 @property  NSString *bagKey
 @property  unsigned long bagValueType

  // instance methods
  -[ICAMSBagValuePromise .cxx_destruct]
  -[ICAMSBagValuePromise bagKey]
  -[ICAMSBagValuePromise initWithBagKey:bagValueType:]
  -[ICAMSBagValuePromise bagValueType]


ICMusicSubscriptionPlaybackRequestOperation : ICAsyncOperation
 @property  NSString *assetSourceStorefrontID
 @property  BOOL delegatedPlayback
 @property  long long requestType
 @property  @? willBeginExecutionHandler
 @property  ICStoreRequestContext *requestContext
 @property  @? responseHandler
 @property  unsigned long storeCloudID
 @property  long long storeSubscriptionAdamID
 @property  long long storePurchasedAdamID
 @property  NSString *cloudUniversalLibraryID
 @property  BOOL followUp
 @property  NSString *playbackAuthorizationToken

  // instance methods
  -[ICMusicSubscriptionPlaybackRequestOperation setRequestType:]
  -[ICMusicSubscriptionPlaybackRequestOperation .cxx_destruct]
  -[ICMusicSubscriptionPlaybackRequestOperation cloudUniversalLibraryID]
  -[ICMusicSubscriptionPlaybackRequestOperation storeCloudID]
  -[ICMusicSubscriptionPlaybackRequestOperation setStoreCloudID:]
  -[ICMusicSubscriptionPlaybackRequestOperation setCloudUniversalLibraryID:]
  -[ICMusicSubscriptionPlaybackRequestOperation setStoreSubscriptionAdamID:]
  -[ICMusicSubscriptionPlaybackRequestOperation setStorePurchasedAdamID:]
  -[ICMusicSubscriptionPlaybackRequestOperation responseHandler]
  -[ICMusicSubscriptionPlaybackRequestOperation setResponseHandler:]
  -[ICMusicSubscriptionPlaybackRequestOperation init]
  -[ICMusicSubscriptionPlaybackRequestOperation storeSubscriptionAdamID]
  -[ICMusicSubscriptionPlaybackRequestOperation storePurchasedAdamID]
  -[ICMusicSubscriptionPlaybackRequestOperation requestType]
  -[ICMusicSubscriptionPlaybackRequestOperation playbackAuthorizationToken]
  -[ICMusicSubscriptionPlaybackRequestOperation cancel]
  -[ICMusicSubscriptionPlaybackRequestOperation requestContext]
  -[ICMusicSubscriptionPlaybackRequestOperation setRequestContext:]
  -[ICMusicSubscriptionPlaybackRequestOperation start]
  -[ICMusicSubscriptionPlaybackRequestOperation setPlaybackAuthorizationToken:]
  -[ICMusicSubscriptionPlaybackRequestOperation setAssetSourceStorefrontID:]
  -[ICMusicSubscriptionPlaybackRequestOperation assetSourceStorefrontID]
  -[ICMusicSubscriptionPlaybackRequestOperation setDelegatedPlayback:]
  -[ICMusicSubscriptionPlaybackRequestOperation isDelegatedPlayback]
  -[ICMusicSubscriptionPlaybackRequestOperation willBeginExecutionHandler]
  -[ICMusicSubscriptionPlaybackRequestOperation setWillBeginExecutionHandler:]
  -[ICMusicSubscriptionPlaybackRequestOperation isFollowUp]
  -[ICMusicSubscriptionPlaybackRequestOperation setFollowUp:]


ICMusicSubscriptionPlaybackResponseItem : NSObject <NSCopying>
 @property  NSDate *assetExpirationDate
 @property  long long storeAdamID
 @property  NSArray *fileAssets
 @property  ICStoreHLSAssetInfo *hlsAsset

  // instance methods
  -[ICMusicSubscriptionPlaybackResponseItem .cxx_destruct]
  -[ICMusicSubscriptionPlaybackResponseItem hlsAsset]
  -[ICMusicSubscriptionPlaybackResponseItem storeAdamID]
  -[ICMusicSubscriptionPlaybackResponseItem fileAssets]
  -[ICMusicSubscriptionPlaybackResponseItem copyWithZone:]
  -[ICMusicSubscriptionPlaybackResponseItem initWithItemResponseDictionary:urlBag:]
  -[ICMusicSubscriptionPlaybackResponseItem assetExpirationDate]
  -[ICMusicSubscriptionPlaybackResponseItem setAssetExpirationDate:]
  -[ICMusicSubscriptionPlaybackResponseItem fileAssetWithFlavorType:]


ICStorePlatformOfferAsset : NSObject
 @property  double duration
 @property  double previewDuration
 @property  NSURL *previewURL
 @property  long long size

  // instance methods
  -[ICStorePlatformOfferAsset initWithResponseDictionary:]
  -[ICStorePlatformOfferAsset .cxx_destruct]
  -[ICStorePlatformOfferAsset previewURL]
  -[ICStorePlatformOfferAsset size]
  -[ICStorePlatformOfferAsset previewDuration]
  -[ICStorePlatformOfferAsset duration]


ICURLBagMescalConfiguration : NSObject
 @property  BOOL shouldSignBody
 @property  NSArray *fields
 @property  NSArray *headers

  // instance methods
  -[ICURLBagMescalConfiguration setFields:]
  -[ICURLBagMescalConfiguration fields]
  -[ICURLBagMescalConfiguration setShouldSignBody:]
  -[ICURLBagMescalConfiguration .cxx_destruct]
  -[ICURLBagMescalConfiguration setHeaders:]
  -[ICURLBagMescalConfiguration shouldSignBody]
  -[ICURLBagMescalConfiguration headers]


ICPBDGSPlayerDelegateInfoToken : PBCodable <NSCopying>
  // instance methods
  -[ICPBDGSPlayerDelegateInfoToken .cxx_destruct]
  -[ICPBDGSPlayerDelegateInfoToken dictionaryRepresentation]
  -[ICPBDGSPlayerDelegateInfoToken writeTo:]
  -[ICPBDGSPlayerDelegateInfoToken isEqual:]
  -[ICPBDGSPlayerDelegateInfoToken readFrom:]
  -[ICPBDGSPlayerDelegateInfoToken copyWithZone:]


_ICLLReplaceQueueItemsAction : PBCodable <NSCopying>
  // instance methods
  -[_ICLLReplaceQueueItemsAction .cxx_destruct]
  -[_ICLLReplaceQueueItemsAction dictionaryRepresentation]
  -[_ICLLReplaceQueueItemsAction writeTo:]
  -[_ICLLReplaceQueueItemsAction isEqual:]
  -[_ICLLReplaceQueueItemsAction readFrom:]
  -[_ICLLReplaceQueueItemsAction copyWithZone:]


ICDelegateAccountStore : NSObject <ICSQLiteConnectionDelegate, ICDelegateAccountStoreWriter>
 @property  NSString *databasePath
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ICDelegateAccountStore openWithOptions:completionHandler:]

  // instance methods
  -[ICDelegateAccountStore databasePath]
  -[ICDelegateAccountStore _postDidChangeNotification]
  -[ICDelegateAccountStore _writeUsingBlock:]
  -[ICDelegateAccountStore _writeXPCUsingBlock:]
  -[ICDelegateAccountStore connectionNeedsResetForCorruption:]
  -[ICDelegateAccountStore _popConnection]
  -[ICDelegateAccountStore addDelegationUUIDs:forUserIdentity:completionHandler:]
  -[ICDelegateAccountStore .cxx_destruct]
  -[ICDelegateAccountStore _resetCorruptionUsingXPC]
  -[ICDelegateAccountStore removeIdentityPropertiesForUserIdentity:completionHandler:]
  -[ICDelegateAccountStore setToken:forUserIdentity:completionHandler:]
  -[ICDelegateAccountStore removeTokensExpiringBeforeDate:completionHandler:]
  -[ICDelegateAccountStore _initWithValidatedOptions:]
  -[ICDelegateAccountStore _writeSQLUsingBlock:]
  -[ICDelegateAccountStore readUsingBlock:]
  -[ICDelegateAccountStore removeAllTokensWithCompletionHandler:]
  -[ICDelegateAccountStore _recycleConnection:]
  -[ICDelegateAccountStore removeTokenForUserIdentity:completionHandler:]
  -[ICDelegateAccountStore _resetCorruptionUsingSQL]
  -[ICDelegateAccountStore removeDelegationUUIDs:forUserIdentity:completionHandler:]
  -[ICDelegateAccountStore close]
  -[ICDelegateAccountStore _openWithXPCWriter:completionHandler:]
  -[ICDelegateAccountStore setIdentityProperties:forUserIdentity:completionHandler:]
  -[ICDelegateAccountStore initSingleWriterWithOptions:error:]


ICStorageManager : NSObject
 @property  unsigned long storageSpaceAvailable
 @property  BOOL cachingEnabled

  // class methods
  +[ICStorageManager sharedManager]

  // instance methods
  -[ICStorageManager .cxx_destruct]
  -[ICStorageManager init]
  -[ICStorageManager cachingEnabled]
  -[ICStorageManager storageSpaceAvailable]
  -[ICStorageManager ensureStorageIsAvailable:withCompletionHandler:]


_ICLLClientInfoCommand : PBCodable <NSCopying>
  // instance methods
  -[_ICLLClientInfoCommand .cxx_destruct]
  -[_ICLLClientInfoCommand dictionaryRepresentation]
  -[_ICLLClientInfoCommand writeTo:]
  -[_ICLLClientInfoCommand isEqual:]
  -[_ICLLClientInfoCommand readFrom:]
  -[_ICLLClientInfoCommand copyWithZone:]


ICUserCredentialResponse : NSObject
 @property  ICUserIdentityProperties *identityProperties
 @property  ICUserIdentityProperties *iCloudIdentityProperties

  // instance methods
  -[ICUserCredentialResponse iCloudIdentityProperties]
  -[ICUserCredentialResponse identityProperties]
  -[ICUserCredentialResponse .cxx_destruct]
  -[ICUserCredentialResponse setICloudIdentityProperties:]
  -[ICUserCredentialResponse setIdentityProperties:]


ICAsyncOperation : NSOperation
 @property  NSError *error

  // instance methods
  -[ICAsyncOperation isAsynchronous]
  -[ICAsyncOperation isConcurrent]
  -[ICAsyncOperation isFinished]
  -[ICAsyncOperation .cxx_destruct]
  -[ICAsyncOperation _execute]
  -[ICAsyncOperation isExecuting]
  -[ICAsyncOperation init]
  -[ICAsyncOperation execute]
  -[ICAsyncOperation finish]
  -[ICAsyncOperation start]
  -[ICAsyncOperation finishWithError:]
  -[ICAsyncOperation error]
  -[ICAsyncOperation enqueueChildOperation:]


ICFPLeaseSyncSession : NSObject
 @property  unsigned long accountID
 @property  id leaseID
 @property  unsigned int mediaKind

  // class methods
  +[ICFPLeaseSyncSession leaseSyncSessionWithID:accountID:mediaKind:returningLeaseSyncRequestData:error:]

  // instance methods
  -[ICFPLeaseSyncSession mediaKind]
  -[ICFPLeaseSyncSession accountID]
  -[ICFPLeaseSyncSession .cxx_destruct]
  -[ICFPLeaseSyncSession leaseID]
  -[ICFPLeaseSyncSession dealloc]
  -[ICFPLeaseSyncSession _initWithFPLeaseSync:leaseID:accountID:hardwareInfo:mediaKind:]
  -[ICFPLeaseSyncSession endLeaseSyncAndReturnError:]
  -[ICFPLeaseSyncSession getLeaseSyncRenewRequestData:error:]
  -[ICFPLeaseSyncSession importLeaseSyncResponseData:error:]
  -[ICFPLeaseSyncSession processRenewResponseData:error:]


ICUserAuthenticationValidationRequest : NSObject
  // instance methods
  -[ICUserAuthenticationValidationRequest initWithUserIdentity:]
  -[ICUserAuthenticationValidationRequest .cxx_destruct]
  -[ICUserAuthenticationValidationRequest performWithCompletion:]
  -[ICUserAuthenticationValidationRequest initWithRequestContext:]


ICNanoPairedDeviceStatusMonitor : NSObject <PSYInitialSyncStateObserverDelegate>
 @property  NSArray *allPairedDevicePairingIDs
 @property  NSUUID *activePairedDevicePairingID
 @property  NSUUID *pairedDevicePairingID
 @property  NSString *pairedDeviceGUID
 @property  NSString *pairedDeviceMediaGUID
 @property  BOOL isInitialSyncComplete
 @property  BOOL mediaSyncingSupported
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ICNanoPairedDeviceStatusMonitor sharedMonitor]

  // instance methods
  -[ICNanoPairedDeviceStatusMonitor _allObservers]
  -[ICNanoPairedDeviceStatusMonitor initialSyncStateObserver:initialSyncDidCompleteForPairingIdentifier:]
  -[ICNanoPairedDeviceStatusMonitor .cxx_destruct]
  -[ICNanoPairedDeviceStatusMonitor pairedDeviceMediaGUID]
  -[ICNanoPairedDeviceStatusMonitor deviceBecameActive:]
  -[ICNanoPairedDeviceStatusMonitor _activePairedDevice]
  -[ICNanoPairedDeviceStatusMonitor pairedDeviceGUID]
  -[ICNanoPairedDeviceStatusMonitor pairedDevicePairingID]
  -[ICNanoPairedDeviceStatusMonitor allPairedDevicePairingIDs]
  -[ICNanoPairedDeviceStatusMonitor addObserver:]
  -[ICNanoPairedDeviceStatusMonitor _handlePairedDeviceChangedNotification]
  -[ICNanoPairedDeviceStatusMonitor isMediaSyncingSupported]
  -[ICNanoPairedDeviceStatusMonitor _init]
  -[ICNanoPairedDeviceStatusMonitor isInitialSyncComplete]
  -[ICNanoPairedDeviceStatusMonitor dealloc]
  -[ICNanoPairedDeviceStatusMonitor removeObserver:]
  -[ICNanoPairedDeviceStatusMonitor activePairedDevicePairingID]


ICLibraryAuthServiceBulkClientTokenResponse : NSObject <NSCopying>
 @property  NSString *serverInstance
 @property  NSDictionary *tokenResults

  // instance methods
  -[ICLibraryAuthServiceBulkClientTokenResponse initWithResponseDictionary:]
  -[ICLibraryAuthServiceBulkClientTokenResponse .cxx_destruct]
  -[ICLibraryAuthServiceBulkClientTokenResponse serverInstance]
  -[ICLibraryAuthServiceBulkClientTokenResponse copyWithZone:]
  -[ICLibraryAuthServiceBulkClientTokenResponse tokenResults]
  -[ICLibraryAuthServiceBulkClientTokenResponse tokenResultForAccountDSID:]


ICDelegationProviderService : NSObject <ICSDelegationProviderServiceXPC, ICDelegationProviderServiceSessionDelegate, NSNetServiceBrowserDelegate, NSXPCListenerDelegate>
 @property  ICRequestContext *requestContext
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ICDelegationProviderService systemServiceWithRequestContext:]
  +[ICDelegationProviderService sharedService]

  // instance methods
  -[ICDelegationProviderService _removeConnection:]
  -[ICDelegationProviderService _xpcConnection]
  -[ICDelegationProviderService _registerNotificationsForDelegationNetService:]
  -[ICDelegationProviderService _updateSupportedDelegationAccountUUIDs]
  -[ICDelegationProviderService _updateBrowsingStatus]
  -[ICDelegationProviderService .cxx_destruct]
  -[ICDelegationProviderService netServiceBrowser:didFindService:moreComing:]
  -[ICDelegationProviderService removeAssertion:]
  -[ICDelegationProviderService _netServiceDelegationAccountUUIDsDidChangeNotification:]
  -[ICDelegationProviderService netServiceBrowser:didRemoveService:moreComing:]
  -[ICDelegationProviderService _updateAssertionTimeouts]
  -[ICDelegationProviderService _userIdentityStoreDidChangeNotification:]
  -[ICDelegationProviderService _addConnection:]
  -[ICDelegationProviderService requestContext]
  -[ICDelegationProviderService _updateDelegationForDiscoveredServices]
  -[ICDelegationProviderService startSystemXPCService]
  -[ICDelegationProviderService delegationProviderServiceAddAssertion:]
  -[ICDelegationProviderService _init]
  -[ICDelegationProviderService delegationProviderServiceRemoveAssertion:]
  -[ICDelegationProviderService dealloc]
  -[ICDelegationProviderService listener:shouldAcceptNewConnection:]
  -[ICDelegationProviderService _unregisterNotificationsForDelegationNetService:]
  -[ICDelegationProviderService delegationProviderServiceSession:didFinishWithError:]
  -[ICDelegationProviderService addAssertion:]


ICUserIdentityStoreACAccountBackend : NSObject <ACMonitoredAccountStoreDelegateProtocol, ICUserIdentityStoreBackend>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <ICUserIdentityStoreBackendDelegate> *delegate

  // class methods
  +[ICUserIdentityStoreACAccountBackend supportsSecureCoding]

  // instance methods
  -[ICUserIdentityStoreACAccountBackend accountWasAdded:]
  -[ICUserIdentityStoreACAccountBackend accountWasRemoved:]
  -[ICUserIdentityStoreACAccountBackend storeAccountForDSID:error:]
  -[ICUserIdentityStoreACAccountBackend initWithCoder:]
  -[ICUserIdentityStoreACAccountBackend localStoreAccountPropertiesWithError:]
  -[ICUserIdentityStoreACAccountBackend _applyLocalStoreAccountProperties:toAccount:]
  -[ICUserIdentityStoreACAccountBackend identityPropertiesForPrimaryICloudAccountWithError:]
  -[ICUserIdentityStoreACAccountBackend allManageableStoreAccountDSIDsWithError:]
  -[ICUserIdentityStoreACAccountBackend allStoreAccountsWithError:]
  -[ICUserIdentityStoreACAccountBackend .cxx_destruct]
  -[ICUserIdentityStoreACAccountBackend synchronize]
  -[ICUserIdentityStoreACAccountBackend setDelegate:]
  -[ICUserIdentityStoreACAccountBackend init]
  -[ICUserIdentityStoreACAccountBackend localStoreAccountWithError:]
  -[ICUserIdentityStoreACAccountBackend removeIdentityForDSID:completion:]
  -[ICUserIdentityStoreACAccountBackend replaceIdentityProperties:forDSID:error:]
  -[ICUserIdentityStoreACAccountBackend verificationContextForAccountEstablishmentWithError:]
  -[ICUserIdentityStoreACAccountBackend _storeAccountForDSID:error:]
  -[ICUserIdentityStoreACAccountBackend _activeStoreAccountWithError:]
  -[ICUserIdentityStoreACAccountBackend _newLocalStoreAccountPropertiesFromAccount:]
  -[ICUserIdentityStoreACAccountBackend setLocalStoreAccountProperties:error:]
  -[ICUserIdentityStoreACAccountBackend _registerAndLoadAccountsIfNecessary]
  -[ICUserIdentityStoreACAccountBackend _allStoreAccountsWithError:]
  -[ICUserIdentityStoreACAccountBackend _userIdentityPropertiesForAccount:]
  -[ICUserIdentityStoreACAccountBackend _primaryAppleAccountWithError:]
  -[ICUserIdentityStoreACAccountBackend _newUserIdentityPropertiesForAccount:]
  -[ICUserIdentityStoreACAccountBackend identityPropertiesForDSID:error:]
  -[ICUserIdentityStoreACAccountBackend activeLockerAccountDSIDWithError:]
  -[ICUserIdentityStoreACAccountBackend _applyIdentityProperties:toAccount:]
  -[ICUserIdentityStoreACAccountBackend delegate]
  -[ICUserIdentityStoreACAccountBackend updateActiveLockerAccountDSID:error:]
  -[ICUserIdentityStoreACAccountBackend accountWasModified:]
  -[ICUserIdentityStoreACAccountBackend updateActiveAccountDSID:error:]
  -[ICUserIdentityStoreACAccountBackend activeAccountDSIDWithError:]
  -[ICUserIdentityStoreACAccountBackend _synchronize]
  -[ICUserIdentityStoreACAccountBackend verificationContextForDSID:error:]
  -[ICUserIdentityStoreACAccountBackend allStoreAccountDSIDsWithError:]
  -[ICUserIdentityStoreACAccountBackend copyWithZone:]
  -[ICUserIdentityStoreACAccountBackend setIdentityProperties:forDSID:error:]
  -[ICUserIdentityStoreACAccountBackend _postAccountsChangeNotification]
  -[ICUserIdentityStoreACAccountBackend encodeWithCoder:]
  -[ICUserIdentityStoreACAccountBackend accountCredentialChanged:]


ICUserIdentityProperties : NSObject <NSMutableCopying, NSCopying, NSSecureCoding>
 @property  BOOL cloudBackupEnabled
 @property  NSString *iCloudPersonID
 @property  NSArray *homeUserIdentifiers
 @property  NSDictionary *privateListeningEnabledForHomeUsers
 @property  NSString *alternateDSID
 @property  NSString *carrierBundleDeviceIdentifier
 @property  NSNumber *DSID
 @property  NSString *firstName
 @property  NSString *lastName
 @property  BOOL managedAppleID
 @property  BOOL sandboxed
 @property  NSString *storefrontIdentifier
 @property  BOOL subscriptionStatusEnabled
 @property  NSString *username
 @property  NSDate *ageVerificationExpirationDate
 @property  NSNumber *mergeToCloudLibraryPreference
 @property  NSDictionary *cloudLibraryStateReason
 @property  NSNumber *privateListeningEnabled
 @property  BOOL activeLocker
 @property  BOOL active
 @property  NSDictionary *privacyAcknowledgementVersions
 @property  BOOL delegated
 @property  ICDelegateToken *delegateToken

  // class methods
  +[ICUserIdentityProperties supportsSecureCoding]

  // instance methods
  -[ICUserIdentityProperties isCloudBackupEnabled]
  -[ICUserIdentityProperties isManagedAppleID]
  -[ICUserIdentityProperties isSandboxed]
  -[ICUserIdentityProperties setCloudBackupEnabled:]
  -[ICUserIdentityProperties firstName]
  -[ICUserIdentityProperties iCloudPersonID]
  -[ICUserIdentityProperties setHomeUserIdentifiers:]
  -[ICUserIdentityProperties DSID]
  -[ICUserIdentityProperties initWithCoder:]
  -[ICUserIdentityProperties mergeToCloudLibraryPreference]
  -[ICUserIdentityProperties lastName]
  -[ICUserIdentityProperties isEqualToIdentityProperties:]
  -[ICUserIdentityProperties isActive]
  -[ICUserIdentityProperties isSubscriptionStatusEnabled]
  -[ICUserIdentityProperties .cxx_destruct]
  -[ICUserIdentityProperties privacyAcknowledgementVersions]
  -[ICUserIdentityProperties privateListeningEnabled]
  -[ICUserIdentityProperties username]
  -[ICUserIdentityProperties ageVerificationExpirationDate]
  -[ICUserIdentityProperties setPrivateListeningEnabledForHomeUsers:]
  -[ICUserIdentityProperties isEqual:]
  -[ICUserIdentityProperties cloudLibraryStateReason]
  -[ICUserIdentityProperties alternateDSID]
  -[ICUserIdentityProperties delegateToken]
  -[ICUserIdentityProperties carrierBundleDeviceIdentifier]
  -[ICUserIdentityProperties privateListeningEnabledForHomeUsers]
  -[ICUserIdentityProperties setICloudPersonID:]
  -[ICUserIdentityProperties mutableCopyWithZone:]
  -[ICUserIdentityProperties storefrontIdentifier]
  -[ICUserIdentityProperties isActiveLocker]
  -[ICUserIdentityProperties copyWithZone:]
  -[ICUserIdentityProperties homeUserIdentifiers]
  -[ICUserIdentityProperties isDelegated]
  -[ICUserIdentityProperties encodeWithCoder:]


ICMutableUserIdentityProperties : ICUserIdentityProperties
 @property  BOOL activeLocker
 @property  BOOL active
 @property  NSString *alternateDSID
 @property  NSString *carrierBundleDeviceIdentifier
 @property  BOOL delegated
 @property  ICDelegateToken *delegateToken
 @property  NSNumber *DSID
 @property  NSString *firstName
 @property  NSString *lastName
 @property  BOOL managedAppleID
 @property  BOOL sandboxed
 @property  NSString *storefrontIdentifier
 @property  BOOL subscriptionStatusEnabled
 @property  NSString *username
 @property  NSDate *ageVerificationExpirationDate
 @property  NSNumber *mergeToCloudLibraryPreference
 @property  NSDictionary *cloudLibraryStateReason
 @property  NSNumber *privateListeningEnabled
 @property  NSDictionary *privacyAcknowledgementVersions

  // instance methods
  -[ICMutableUserIdentityProperties setManagedAppleID:]
  -[ICMutableUserIdentityProperties setCloudBackupEnabled:]
  -[ICMutableUserIdentityProperties setHomeUserIdentifiers:]
  -[ICMutableUserIdentityProperties setDSID:]
  -[ICMutableUserIdentityProperties setDelegateToken:]
  -[ICMutableUserIdentityProperties setSandboxed:]
  -[ICMutableUserIdentityProperties setSubscriptionStatusEnabled:]
  -[ICMutableUserIdentityProperties setAgeVerificationExpirationDate:]
  -[ICMutableUserIdentityProperties setFirstName:]
  -[ICMutableUserIdentityProperties setActiveLocker:]
  -[ICMutableUserIdentityProperties setMergeToCloudLibraryPreference:]
  -[ICMutableUserIdentityProperties setPrivateListeningEnabled:]
  -[ICMutableUserIdentityProperties setDelegated:]
  -[ICMutableUserIdentityProperties setPrivateListeningEnabledForHomeUsers:]
  -[ICMutableUserIdentityProperties setLastName:]
  -[ICMutableUserIdentityProperties setCloudLibraryStateReason:]
  -[ICMutableUserIdentityProperties replaceValuesWithValuesFromProperties:]
  -[ICMutableUserIdentityProperties setPrivacyAcknowledgementVersions:]
  -[ICMutableUserIdentityProperties setActive:]
  -[ICMutableUserIdentityProperties setICloudPersonID:]
  -[ICMutableUserIdentityProperties setUsername:]
  -[ICMutableUserIdentityProperties setCarrierBundleDeviceIdentifier:]
  -[ICMutableUserIdentityProperties setAlternateDSID:]
  -[ICMutableUserIdentityProperties setStorefrontIdentifier:]


ICIAMSerialCheckRequest : PBRequest <NSCopying>
 @property  BOOL hasDSID
 @property  long long dSID
 @property  BOOL hasDeviceID
 @property  NSString *deviceID

  // instance methods
  -[ICIAMSerialCheckRequest setDSID:]
  -[ICIAMSerialCheckRequest mergeFrom:]
  -[ICIAMSerialCheckRequest dSID]
  -[ICIAMSerialCheckRequest .cxx_destruct]
  -[ICIAMSerialCheckRequest deviceID]
  -[ICIAMSerialCheckRequest dictionaryRepresentation]
  -[ICIAMSerialCheckRequest writeTo:]
  -[ICIAMSerialCheckRequest hasDSID]
  -[ICIAMSerialCheckRequest isEqual:]
  -[ICIAMSerialCheckRequest copyTo:]
  -[ICIAMSerialCheckRequest readFrom:]
  -[ICIAMSerialCheckRequest setDeviceID:]
  -[ICIAMSerialCheckRequest hasDeviceID]
  -[ICIAMSerialCheckRequest copyWithZone:]
  -[ICIAMSerialCheckRequest setHasDSID:]


ICHTTPArchive : NSObject
  // class methods
  +[ICHTTPArchive sharedArchive]

  // instance methods
  -[ICHTTPArchive _archiveForRequest:]
  -[ICHTTPArchive _loadExistingArchivePaths]
  -[ICHTTPArchive .cxx_destruct]
  -[ICHTTPArchive archiveRequest:withResponse:responseData:]
  -[ICHTTPArchive _onQueueFlush]
  -[ICHTTPArchive init]
  -[ICHTTPArchive flush]
  -[ICHTTPArchive _arrayFromHeaderDictionary:]
  -[ICHTTPArchive _archiveCreator]
  -[ICHTTPArchive dealloc]
  -[ICHTTPArchive _archiveForResponse:responseData:]
  -[ICHTTPArchive _pruneOldArchives]


ICMusicKitRequestContext : ICStoreRequestContext <NSSecureCoding>
 @property  long long _storeRequestPersonalizationStyle
 @property  long long personalizationStyle
 @property  <ICDeveloperTokenProvider> *developerTokenProvider
 @property  long long personalizationMethod
 @property  NSString *playbackAuthorizationToken
 @property  NSString *collectionPlaybackAuthorizationToken

  // class methods
  +[ICMusicKitRequestContext supportsSecureCoding]

  // instance methods
  -[ICMusicKitRequestContext setPersonalizationStyle:]
  -[ICMusicKitRequestContext personalizationStyle]
  -[ICMusicKitRequestContext _description]
  -[ICMusicKitRequestContext initWithCoder:]
  -[ICMusicKitRequestContext .cxx_destruct]
  -[ICMusicKitRequestContext setPersonalizationMethod:]
  -[ICMusicKitRequestContext personalizationMethod]
  -[ICMusicKitRequestContext initWithBlock:]
  -[ICMusicKitRequestContext _storeRequestPersonalizationStyle]
  -[ICMusicKitRequestContext isEqual:]
  -[ICMusicKitRequestContext playbackAuthorizationToken]
  -[ICMusicKitRequestContext copyWithBlock:]
  -[ICMusicKitRequestContext collectionPlaybackAuthorizationToken]
  -[ICMusicKitRequestContext setCollectionPlaybackAuthorizationToken:]
  -[ICMusicKitRequestContext developerTokenProvider]
  -[ICMusicKitRequestContext setDeveloperTokenProvider:]
  -[ICMusicKitRequestContext setPlaybackAuthorizationToken:]
  -[ICMusicKitRequestContext encodeWithCoder:]


ICConnectionConfiguration : NSObject <NSSecureCoding, NSCopying>
 @property  ICUserIdentity *userIdentity
 @property  ICUserIdentityStore *userIdentityStore
 @property  NSObject<OS_tcc_identity> *clientIdentity
 @property  NSURL *baseURL
 @property  NSString *libraryBagKey
 @property  NSString *buildIdentifier
 @property  NSString *purchaseClientIdentifier
 @property  long long requestReason
 @property  NSNumber *familyMemberStoreID

  // class methods
  +[ICConnectionConfiguration configurationFromSourceConfiguration:userIdentity:]
  +[ICConnectionConfiguration supportsSecureCoding]

  // instance methods
  -[ICConnectionConfiguration userIdentityStore]
  -[ICConnectionConfiguration clientIdentity]
  -[ICConnectionConfiguration userIdentity]
  -[ICConnectionConfiguration initWithCoder:]
  -[ICConnectionConfiguration setLibraryBagKey:]
  -[ICConnectionConfiguration setBuildIdentifier:]
  -[ICConnectionConfiguration setUserIdentity:]
  -[ICConnectionConfiguration initWithUserIdentity:]
  -[ICConnectionConfiguration setFamilyMemberStoreID:]
  -[ICConnectionConfiguration initWithUserIdentity:userIdentityStore:clientIdentity:]
  -[ICConnectionConfiguration .cxx_destruct]
  -[ICConnectionConfiguration setPurchaseClientIdentifier:]
  -[ICConnectionConfiguration requestReason]
  -[ICConnectionConfiguration init]
  -[ICConnectionConfiguration initWithUserIdentity:userIdentityStore:]
  -[ICConnectionConfiguration buildIdentifier]
  -[ICConnectionConfiguration setBaseURL:]
  -[ICConnectionConfiguration isEqual:]
  -[ICConnectionConfiguration baseURL]
  -[ICConnectionConfiguration familyMemberStoreID]
  -[ICConnectionConfiguration setRequestReason:]
  -[ICConnectionConfiguration copyWithZone:]
  -[ICConnectionConfiguration libraryBagKey]
  -[ICConnectionConfiguration purchaseClientIdentifier]
  -[ICConnectionConfiguration encodeWithCoder:]


ICMusicSubscriptionRecommendationsRequest : ICRequestOperation
  // instance methods
  -[ICMusicSubscriptionRecommendationsRequest initWithRequestContext:seedItemID:isLibraryID:maxResultCount:]
  -[ICMusicSubscriptionRecommendationsRequest .cxx_destruct]
  -[ICMusicSubscriptionRecommendationsRequest performRequestWithResponseHandler:]
  -[ICMusicSubscriptionRecommendationsRequest execute]


_ICLLCommandMessage : PBCodable <NSCopying>
  // instance methods
  -[_ICLLCommandMessage .cxx_destruct]
  -[_ICLLCommandMessage dictionaryRepresentation]
  -[_ICLLCommandMessage writeTo:]
  -[_ICLLCommandMessage isEqual:]
  -[_ICLLCommandMessage readFrom:]
  -[_ICLLCommandMessage copyWithZone:]


_ICLLCurrentItemTransitionCommand : PBCodable <NSCopying>
  // instance methods
  -[_ICLLCurrentItemTransitionCommand .cxx_destruct]
  -[_ICLLCurrentItemTransitionCommand dictionaryRepresentation]
  -[_ICLLCurrentItemTransitionCommand writeTo:]
  -[_ICLLCurrentItemTransitionCommand isEqual:]
  -[_ICLLCurrentItemTransitionCommand readFrom:]
  -[_ICLLCurrentItemTransitionCommand copyWithZone:]


ICUserVerificationContext : NSObject <NSCopying>
 @property  ACAccount *ACAccount
 @property  ACAccountStore *ACAccountStore
 @property  ICUserIdentityProperties *identityProperties
 @property  ICUserIdentityStore *identityStore
 @property  long long verificationStyle
 @property  long long interactionLevel
 @property  NSString *debugReason

  // class methods
  +[ICUserVerificationContext contextWithACAccount:accountStore:]

  // instance methods
  -[ICUserVerificationContext identityProperties]
  -[ICUserVerificationContext .cxx_destruct]
  -[ICUserVerificationContext debugReason]
  -[ICUserVerificationContext setDebugReason:]
  -[ICUserVerificationContext setIdentityStore:]
  -[ICUserVerificationContext setIdentityProperties:]
  -[ICUserVerificationContext interactionLevel]
  -[ICUserVerificationContext identityStore]
  -[ICUserVerificationContext copyWithZone:]
  -[ICUserVerificationContext ACAccount]
  -[ICUserVerificationContext setACAccount:]
  -[ICUserVerificationContext setACAccountStore:]
  -[ICUserVerificationContext setVerificationStyle:]
  -[ICUserVerificationContext setInteractionLevel:]
  -[ICUserVerificationContext ACAccountStore]
  -[ICUserVerificationContext verificationStyle]


_ICLLPlaybackControlSettingsQuery : PBCodable <NSCopying>
  // instance methods
  -[_ICLLPlaybackControlSettingsQuery .cxx_destruct]
  -[_ICLLPlaybackControlSettingsQuery dictionaryRepresentation]
  -[_ICLLPlaybackControlSettingsQuery writeTo:]
  -[_ICLLPlaybackControlSettingsQuery isEqual:]
  -[_ICLLPlaybackControlSettingsQuery readFrom:]
  -[_ICLLPlaybackControlSettingsQuery copyWithZone:]


_ICLLReactionAction : PBCodable <NSCopying>
  // instance methods
  -[_ICLLReactionAction .cxx_destruct]
  -[_ICLLReactionAction dictionaryRepresentation]
  -[_ICLLReactionAction writeTo:]
  -[_ICLLReactionAction isEqual:]
  -[_ICLLReactionAction readFrom:]
  -[_ICLLReactionAction copyWithZone:]


ICMusicSubscriptionLeaseStatus : NSObject <NSCopying>
 @property  BOOL hasOnlinePlaybackKeys
 @property  BOOL hasOfflinePlaybackKeys
 @property  BOOL hasPendingLeaseAcquisition
 @property  BOOL hasInflightLeaseAcquisition
 @property  BOOL takenDueToLeasePrevention
 @property  BOOL shouldPlaybackRequireOnlineKeys
 @property  long long leaseState
 @property  ICStoreDialogResponse *stateReasonDialog
 @property  NSDictionary *stateReasonDialogMetricsDictionary

  // instance methods
  -[ICMusicSubscriptionLeaseStatus .cxx_destruct]
  -[ICMusicSubscriptionLeaseStatus isEqual:]
  -[ICMusicSubscriptionLeaseStatus copyWithZone:]
  -[ICMusicSubscriptionLeaseStatus shouldPlaybackRequireOnlineKeys]
  -[ICMusicSubscriptionLeaseStatus hasOnlinePlaybackKeys]
  -[ICMusicSubscriptionLeaseStatus hasOfflinePlaybackKeys]
  -[ICMusicSubscriptionLeaseStatus hasPendingLeaseAcquisition]
  -[ICMusicSubscriptionLeaseStatus hasInflightLeaseAcquisition]
  -[ICMusicSubscriptionLeaseStatus isTakenDueToLeasePrevention]
  -[ICMusicSubscriptionLeaseStatus leaseState]
  -[ICMusicSubscriptionLeaseStatus stateReasonDialog]
  -[ICMusicSubscriptionLeaseStatus stateReasonDialogMetricsDictionary]
  -[ICMusicSubscriptionLeaseStatus setShouldPlaybackRequireOnlineKeys:]
  -[ICMusicSubscriptionLeaseStatus setHasOnlinePlaybackKeys:]
  -[ICMusicSubscriptionLeaseStatus setHasOfflinePlaybackKeys:]
  -[ICMusicSubscriptionLeaseStatus setHasPendingLeaseAcquisition:]
  -[ICMusicSubscriptionLeaseStatus setHasInflightLeaseAcquisition:]
  -[ICMusicSubscriptionLeaseStatus setTakenDueToLeasePrevention:]
  -[ICMusicSubscriptionLeaseStatus setLeaseState:]
  -[ICMusicSubscriptionLeaseStatus setStateReasonDialog:]
  -[ICMusicSubscriptionLeaseStatus setStateReasonDialogMetricsDictionary:]


ICPushNotificationsRegisterAPNSTokenRequest : ICRequestOperation
  // instance methods
  -[ICPushNotificationsRegisterAPNSTokenRequest .cxx_destruct]
  -[ICPushNotificationsRegisterAPNSTokenRequest performRequestWithResponseHandler:]
  -[ICPushNotificationsRegisterAPNSTokenRequest execute]
  -[ICPushNotificationsRegisterAPNSTokenRequest initWithRequestContext:token:]


ICSiriAddToAccousticHistoryRequest : ICRequestOperation
  // instance methods
  -[ICSiriAddToAccousticHistoryRequest .cxx_destruct]
  -[ICSiriAddToAccousticHistoryRequest execute]
  -[ICSiriAddToAccousticHistoryRequest initWithRequestContext:storeItemID:affiliateIdentifier:]


_ICLLPlaybackControlSettingsAction : PBCodable <NSCopying>
  // instance methods
  -[_ICLLPlaybackControlSettingsAction .cxx_destruct]
  -[_ICLLPlaybackControlSettingsAction dictionaryRepresentation]
  -[_ICLLPlaybackControlSettingsAction writeTo:]
  -[_ICLLPlaybackControlSettingsAction isEqual:]
  -[_ICLLPlaybackControlSettingsAction readFrom:]
  -[_ICLLPlaybackControlSettingsAction copyWithZone:]


_ICLLPlaybackSyncStateQuery : PBCodable <NSCopying>
  // instance methods
  -[_ICLLPlaybackSyncStateQuery .cxx_destruct]
  -[_ICLLPlaybackSyncStateQuery dictionaryRepresentation]
  -[_ICLLPlaybackSyncStateQuery writeTo:]
  -[_ICLLPlaybackSyncStateQuery isEqual:]
  -[_ICLLPlaybackSyncStateQuery readFrom:]
  -[_ICLLPlaybackSyncStateQuery copyWithZone:]


ICLibraryAuthServiceClientTokenStatus : NSObject <NSSecureCoding>
 @property  ICLibraryAuthServiceClientTokenResult *tokenResult
 @property  NSError *lastError
 @property  double lastUpdateAttemptTime
 @property  BOOL shouldExcludeFromBackgroundRefresh

  // class methods
  +[ICLibraryAuthServiceClientTokenStatus supportsSecureCoding]

  // instance methods
  -[ICLibraryAuthServiceClientTokenStatus initWithCoder:]
  -[ICLibraryAuthServiceClientTokenStatus lastError]
  -[ICLibraryAuthServiceClientTokenStatus .cxx_destruct]
  -[ICLibraryAuthServiceClientTokenStatus tokenResult]
  -[ICLibraryAuthServiceClientTokenStatus setLastError:]
  -[ICLibraryAuthServiceClientTokenStatus encodeWithCoder:]
  -[ICLibraryAuthServiceClientTokenStatus setTokenResult:]
  -[ICLibraryAuthServiceClientTokenStatus lastUpdateAttemptTime]
  -[ICLibraryAuthServiceClientTokenStatus setLastUpdateAttemptTime:]
  -[ICLibraryAuthServiceClientTokenStatus shouldExcludeFromBackgroundRefresh]
  -[ICLibraryAuthServiceClientTokenStatus setShouldExcludeFromBackgroundRefresh:]


ICStorePlatformRequest : NSObject <NSCopying>
 @property  NSDictionary *HTTPHeaders
 @property  NSArray *queryItems
 @property  long long qualityOfService
 @property  ICStoreRequestContext *requestContext
 @property  NSString *clientIdentifier
 @property  NSString *clientBundleIdentifier
 @property  NSString *clientBundleVersion
 @property  NSArray *itemIdentifiers
 @property  long long batchSize
 @property  @? batchResultsHandler
 @property  NSString *imageProfile
 @property  NSString *keyProfile
 @property  long long personalizationStyle
 @property  NSString *platformIdentifier
 @property  NSString *protocolVersion
 @property  double retryDelay
 @property  BOOL returnsLocalEquivalencies
 @property  double timeoutInterval
 @property  BOOL shouldIgnoreCache

  // instance methods
  -[ICStorePlatformRequest setPersonalizationStyle:]
  -[ICStorePlatformRequest personalizationStyle]
  -[ICStorePlatformRequest queryItems]
  -[ICStorePlatformRequest retryDelay]
  -[ICStorePlatformRequest setBatchSize:]
  -[ICStorePlatformRequest batchSize]
  -[ICStorePlatformRequest keyProfile]
  -[ICStorePlatformRequest setClientBundleIdentifier:]
  -[ICStorePlatformRequest itemIdentifiers]
  -[ICStorePlatformRequest setReturnsLocalEquivalencies:]
  -[ICStorePlatformRequest setRetryDelay:]
  -[ICStorePlatformRequest clientBundleVersion]
  -[ICStorePlatformRequest protocolVersion]
  -[ICStorePlatformRequest setBatchResultsHandler:]
  -[ICStorePlatformRequest qualityOfService]
  -[ICStorePlatformRequest shouldIgnoreCache]
  -[ICStorePlatformRequest .cxx_destruct]
  -[ICStorePlatformRequest setImageProfile:]
  -[ICStorePlatformRequest setProtocolVersion:]
  -[ICStorePlatformRequest setQualityOfService:]
  -[ICStorePlatformRequest setPlatformIdentifier:]
  -[ICStorePlatformRequest init]
  -[ICStorePlatformRequest platformIdentifier]
  -[ICStorePlatformRequest setItemIdentifiers:]
  -[ICStorePlatformRequest batchResultsHandler]
  -[ICStorePlatformRequest setKeyProfile:]
  -[ICStorePlatformRequest setClientBundleVersion:]
  -[ICStorePlatformRequest HTTPHeaders]
  -[ICStorePlatformRequest performWithResponseHandler:]
  -[ICStorePlatformRequest clientIdentifier]
  -[ICStorePlatformRequest timeoutInterval]
  -[ICStorePlatformRequest returnsLocalEquivalencies]
  -[ICStorePlatformRequest copyWithItemIdentifiersInRange:]
  -[ICStorePlatformRequest clientBundleIdentifier]
  -[ICStorePlatformRequest requestContext]
  -[ICStorePlatformRequest setRequestContext:]
  -[ICStorePlatformRequest setShouldIgnoreCache:]
  -[ICStorePlatformRequest copyWithZone:]
  -[ICStorePlatformRequest imageProfile]
  -[ICStorePlatformRequest setClientIdentifier:]
  -[ICStorePlatformRequest setTimeoutInterval:]


ICUserNotificationBuilder : NSObject <NSCopying>
 @property  NSString *message
 @property  NSString *title
 @property  NSString *alternateButtonTitle
 @property  NSString *defaultButtonTitle
 @property  NSString *otherButtonTitle
 @property  BOOL allowInCar
 @property  BOOL displaysActionButtonOnLockScreen
 @property  BOOL displaysAsTopMost
 @property  BOOL forcesModalAppearance
 @property  long long alertLevel
 @property  double timeoutInterval

  // instance methods
  -[ICUserNotificationBuilder setTitle:]
  -[ICUserNotificationBuilder .cxx_destruct]
  -[ICUserNotificationBuilder setMessage:]
  -[ICUserNotificationBuilder setAlternateButtonTitle:]
  -[ICUserNotificationBuilder init]
  -[ICUserNotificationBuilder otherButtonTitle]
  -[ICUserNotificationBuilder setDefaultButtonTitle:]
  -[ICUserNotificationBuilder setOtherButtonTitle:]
  -[ICUserNotificationBuilder alternateButtonTitle]
  -[ICUserNotificationBuilder timeoutInterval]
  -[ICUserNotificationBuilder message]
  -[ICUserNotificationBuilder title]
  -[ICUserNotificationBuilder defaultButtonTitle]
  -[ICUserNotificationBuilder copyWithZone:]
  -[ICUserNotificationBuilder setTimeoutInterval:]
  -[ICUserNotificationBuilder _setBoolValue:forKey:]
  -[ICUserNotificationBuilder initWithStoreDialog:]
  -[ICUserNotificationBuilder allowInCar]
  -[ICUserNotificationBuilder createCFUserNotification]
  -[ICUserNotificationBuilder displaysActionButtonOnLockScreen]
  -[ICUserNotificationBuilder displaysAsTopMost]
  -[ICUserNotificationBuilder forcesModalAppearance]
  -[ICUserNotificationBuilder setAllowInCar:]
  -[ICUserNotificationBuilder setDisplaysActionButtonOnLockScreen:]
  -[ICUserNotificationBuilder setDisplaysAsTopMost:]
  -[ICUserNotificationBuilder setForcesModalAppearance:]
  -[ICUserNotificationBuilder alertLevel]
  -[ICUserNotificationBuilder setAlertLevel:]


ICStorePlatformMetadata : NSObject
 @property  NSDictionary *metadataDictionary
 @property  NSString *artistName
 @property  long long artistStoreAdamID
 @property  NSString *cloudUniversalLibraryID
 @property  NSString *collectionName
 @property  long long collectionStoreAdamID
 @property  NSString *composerName
 @property  NSString *copyrightText
 @property  long long discNumber
 @property  double duration
 @property  NSDate *expirationDate
 @property  long long explicitRating
 @property  BOOL isExplicit
 @property  NSArray *genreNames
 @property  BOOL hasLyrics
 @property  BOOL hasTimeSyncedLyrics
 @property  NSString *kind
 @property  long long movementCount
 @property  NSString *movementName
 @property  long long movementNumber
 @property  NSString *name
 @property  NSArray *offers
 @property  NSString *playlistGlobalID
 @property  NSString *radioStationStringID
 @property  NSDate *releaseDate
 @property  BOOL shouldShowComposer
 @property  long long storeAdamID
 @property  NSArray *formerStoreAdamIDs
 @property  NSString *title
 @property  long long trackNumber
 @property  long long trackCount
 @property  NSString *workName
 @property  NSArray *artworkInfos
 @property  NSArray *audioTraits
 @property  NSURL *classicalURL

  // class methods
  +[ICStorePlatformMetadata storeServerCalendar]

  // instance methods
  -[ICStorePlatformMetadata releaseDate]
  -[ICStorePlatformMetadata metadataDictionary]
  -[ICStorePlatformMetadata hasLyrics]
  -[ICStorePlatformMetadata discNumber]
  -[ICStorePlatformMetadata movementName]
  -[ICStorePlatformMetadata artistName]
  -[ICStorePlatformMetadata artworkInfos]
  -[ICStorePlatformMetadata trackCount]
  -[ICStorePlatformMetadata name]
  -[ICStorePlatformMetadata audioTraits]
  -[ICStorePlatformMetadata formerStoreAdamIDs]
  -[ICStorePlatformMetadata trackNumber]
  -[ICStorePlatformMetadata copyrightText]
  -[ICStorePlatformMetadata collectionName]
  -[ICStorePlatformMetadata offers]
  -[ICStorePlatformMetadata workName]
  -[ICStorePlatformMetadata isExplicit]
  -[ICStorePlatformMetadata hasTimeSyncedLyrics]
  -[ICStorePlatformMetadata classicalURL]
  -[ICStorePlatformMetadata collectionStoreAdamID]
  -[ICStorePlatformMetadata playlistGlobalID]
  -[ICStorePlatformMetadata initWithMetadataDictionary:]
  -[ICStorePlatformMetadata .cxx_destruct]
  -[ICStorePlatformMetadata cloudUniversalLibraryID]
  -[ICStorePlatformMetadata radioStationStringID]
  -[ICStorePlatformMetadata composerName]
  -[ICStorePlatformMetadata genreNames]
  -[ICStorePlatformMetadata offerWithType:]
  -[ICStorePlatformMetadata movementNumber]
  -[ICStorePlatformMetadata shouldShowComposer]
  -[ICStorePlatformMetadata title]
  -[ICStorePlatformMetadata kind]
  -[ICStorePlatformMetadata explicitRating]
  -[ICStorePlatformMetadata storeAdamID]
  -[ICStorePlatformMetadata movementCount]
  -[ICStorePlatformMetadata artistStoreAdamID]
  -[ICStorePlatformMetadata expirationDate]
  -[ICStorePlatformMetadata _storePlatformReleaseDateFormatter]
  -[ICStorePlatformMetadata duration]
  -[ICStorePlatformMetadata initWithMetadataDictionary:expirationDate:]


ICLiveLinkPlaybackCoordinatorMedium : NSObject
 @property  NSUUID *localParticipantUUID
 @property  {os_unfair_lock_s=I} fetchServerStateLock
 @property  long long fetchServerStateInProgressCount
 @property  NSMutableArray *fetchServerStateCompletions
 @property  ICLiveLink *liveLink

  // instance methods
  -[ICLiveLinkPlaybackCoordinatorMedium .cxx_destruct]
  -[ICLiveLinkPlaybackCoordinatorMedium removeParticipant:]
  -[ICLiveLinkPlaybackCoordinatorMedium liveLink]
  -[ICLiveLinkPlaybackCoordinatorMedium handleNewParticipantStateDictionary:]
  -[ICLiveLinkPlaybackCoordinatorMedium handleNewTransportControlStateDictionary:]
  -[ICLiveLinkPlaybackCoordinatorMedium initWithLiveLink:]
  -[ICLiveLinkPlaybackCoordinatorMedium isCoordinatorSuspended]
  -[ICLiveLinkPlaybackCoordinatorMedium handlePlaybackSyncPayload:]
  -[ICLiveLinkPlaybackCoordinatorMedium synchronizePlaybackStateForReason:]
  -[ICLiveLinkPlaybackCoordinatorMedium clearCoordinationMediumDelegate]
  -[ICLiveLinkPlaybackCoordinatorMedium _broadcastLocalParticipantStateDictionary:]
  -[ICLiveLinkPlaybackCoordinatorMedium _broadcastTransportControlStateDictionary:forItemWithIdentifier:]
  -[ICLiveLinkPlaybackCoordinatorMedium _reloadTransportControlStateForItemWithIdentifier:completionHandler:]
  -[ICLiveLinkPlaybackCoordinatorMedium localParticipantUUID]
  -[ICLiveLinkPlaybackCoordinatorMedium fetchServerStateLock]
  -[ICLiveLinkPlaybackCoordinatorMedium fetchServerStateInProgressCount]
  -[ICLiveLinkPlaybackCoordinatorMedium fetchServerStateCompletions]


ICLinkLinkAVPlaybackCoordinatorMedium : ICLiveLinkPlaybackCoordinatorMedium <AVPlaybackCoordinationMediumDelegate>
 @property  AVPlayerPlaybackCoordinator *playbackCoordinator
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ICLinkLinkAVPlaybackCoordinatorMedium .cxx_destruct]
  -[ICLinkLinkAVPlaybackCoordinatorMedium removeParticipant:]
  -[ICLinkLinkAVPlaybackCoordinatorMedium localParticipantUUIDForPlaybackCoordinator:]
  -[ICLinkLinkAVPlaybackCoordinatorMedium playbackCoordinator:broadcastTransportControlStateDictionary:forItemWithIdentifier:]
  -[ICLinkLinkAVPlaybackCoordinatorMedium playbackCoordinator:broadcastLocalParticipantStateDictionary:]
  -[ICLinkLinkAVPlaybackCoordinatorMedium playbackCoordinator:reloadTransportControlStateForItemWithIdentifier:completionHandler:]
  -[ICLinkLinkAVPlaybackCoordinatorMedium handleNewParticipantStateDictionary:]
  -[ICLinkLinkAVPlaybackCoordinatorMedium handleNewTransportControlStateDictionary:]
  -[ICLinkLinkAVPlaybackCoordinatorMedium playbackCoordinator]
  -[ICLinkLinkAVPlaybackCoordinatorMedium isCoordinatorSuspended]
  -[ICLinkLinkAVPlaybackCoordinatorMedium clearCoordinationMediumDelegate]
  -[ICLinkLinkAVPlaybackCoordinatorMedium _playbackCoordinatorDidIssueCommandToPlaybackObjectNotification:]
  -[ICLinkLinkAVPlaybackCoordinatorMedium initWithPlaybackCoordinator:liveLink:]


ICMusicSubscriptionStatusRequestOperation : ICAsyncOperation
 @property  BOOL shouldRequestLightweightStatus
 @property  ICMusicSubscriptionStatusRequest *request
 @property  BOOL allowsFuseHeaderEnrichment
 @property  @? responseHandler

  // instance methods
  -[ICMusicSubscriptionStatusRequestOperation allowsFuseHeaderEnrichment]
  -[ICMusicSubscriptionStatusRequestOperation shouldRequestLightweightStatus]
  -[ICMusicSubscriptionStatusRequestOperation initWithRequest:]
  -[ICMusicSubscriptionStatusRequestOperation _cacheAccountEligibilityWithStatus:requestContext:]
  -[ICMusicSubscriptionStatusRequestOperation setShouldRequestLightweightStatus:]
  -[ICMusicSubscriptionStatusRequestOperation .cxx_destruct]
  -[ICMusicSubscriptionStatusRequestOperation responseHandler]
  -[ICMusicSubscriptionStatusRequestOperation setResponseHandler:]
  -[ICMusicSubscriptionStatusRequestOperation execute]
  -[ICMusicSubscriptionStatusRequestOperation request]
  -[ICMusicSubscriptionStatusRequestOperation _performSubscriptionStatusURLRequestWithRequestContext:subscriptionStatusURL:allowsAuthentication:completion:]
  -[ICMusicSubscriptionStatusRequestOperation setAllowsFuseHeaderEnrichment:]
  -[ICMusicSubscriptionStatusRequestOperation _carrierBundleStatusIsValidForCachedSubscriptionStatus:]


ICURLSession : NSObject <NSURLSessionDelegate, NSURLSessionDownloadDelegate, NSURLSessionDataDelegate>
 @property  unsigned long maxConcurrentRequests
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ICURLSession defaultMaximumConcurrentRequests]

  // instance methods
  -[ICURLSession resumeRequest:]
  -[ICURLSession initWithConfiguration:maxConcurrentRequests:]
  -[ICURLSession _timeoutForRequest:]
  -[ICURLSession URLSession:dataTask:didReceiveResponse:completionHandler:]
  -[ICURLSession URLSession:downloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:]
  -[ICURLSession URLSession:downloadTask:didFinishDownloadingToURL:]
  -[ICURLSession URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:]
  -[ICURLSession maxConcurrentRequests]
  -[ICURLSession .cxx_destruct]
  -[ICURLSession enqueueUploadRequest:withCompletionHandler:]
  -[ICURLSession URLSession:avAssetDownloadTask:didReceiveAVAssetDownloadToken:]
  -[ICURLSession _processRequest:]
  -[ICURLSession URLSession:task:didFinishCollectingMetrics:]
  -[ICURLSession _newResponseForRequest:]
  -[ICURLSession _checkRequestTimeouts]
  -[ICURLSession _updateProgressForSessionTask:withTotalBytesWritten:totalBytesExpectedToWrite:]
  -[ICURLSession _processPendingRequests]
  -[ICURLSession cancelRequest:withError:]
  -[ICURLSession _requestForTask:]
  -[ICURLSession init]
  -[ICURLSession URLSession:dataTask:didReceiveData:]
  -[ICURLSession pause]
  -[ICURLSession enqueueDownloadRequest:withCompletionHandler:]
  -[ICURLSession initWithConfiguration:maxConcurrentRequests:qualityOfService:]
  -[ICURLSession URLSession:task:didCompleteWithError:]
  -[ICURLSession enqueueDownloadRequest:toDestination:withCompletionHandler:]
  -[ICURLSession initWithConfiguration:]
  -[ICURLSession _createURLSessionTaskForRequest:usingSession:]
  -[ICURLSession _scheduleNextRequestTimeoutCheck]
  -[ICURLSession _enqueueRequest:]
  -[ICURLSession resume]
  -[ICURLSession dealloc]
  -[ICURLSession URLSession:avAssetDownloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:]
  -[ICURLSession enqueueDataRequest:withCompletionHandler:]
  -[ICURLSession _createURLSessionWithConfiguration:]
  -[ICURLSession cancelRequest:]
  -[ICURLSession _finishRequest:]
  -[ICURLSession URLSession:task:didReceiveChallenge:completionHandler:]
  -[ICURLSession pauseRequest:]


ICMusicRestoreRequest : ICRequestOperation
  // instance methods
  -[ICMusicRestoreRequest .cxx_destruct]
  -[ICMusicRestoreRequest execute]
  -[ICMusicRestoreRequest cancel]
  -[ICMusicRestoreRequest _serializedBodyDataWithAccountID:]
  -[ICMusicRestoreRequest initWithRequestContext:parameters:]
  -[ICMusicRestoreRequest performRestoreRequestWithCompletionHandler:]


ICInAppMessageEntry : NSObject <NSCopying, NSSecureCoding>
 @property  ICIAMApplicationMessage *applicationMessage
 @property  NSString *bundleIdentifier
 @property  NSDictionary *metadata
 @property  BOOL shouldDownloadResources
 @property  BOOL didCacheRequiredResources
 @property  BOOL isBadgingApplication

  // class methods
  +[ICInAppMessageEntry supportsSecureCoding]

  // instance methods
  -[ICInAppMessageEntry initWithCoder:]
  -[ICInAppMessageEntry bundleIdentifier]
  -[ICInAppMessageEntry .cxx_destruct]
  -[ICInAppMessageEntry metadata]
  -[ICInAppMessageEntry copyWithZone:]
  -[ICInAppMessageEntry encodeWithCoder:]
  -[ICInAppMessageEntry initWithApplicationMessage:bundleIdentifier:]
  -[ICInAppMessageEntry isBadgingApplication]
  -[ICInAppMessageEntry applicationMessage]
  -[ICInAppMessageEntry setIsBadgingApplication:]
  -[ICInAppMessageEntry shouldDownloadResources]
  -[ICInAppMessageEntry setShouldDownloadResources:]
  -[ICInAppMessageEntry clearCachedResources]
  -[ICInAppMessageEntry cachedLocationForResourceWithIdentifier:]
  -[ICInAppMessageEntry setCacheLocation:forResourceWithIdentifier:]
  -[ICInAppMessageEntry setDidCacheRequiredResources:]
  -[ICInAppMessageEntry didCacheRequiredResources]
  -[ICInAppMessageEntry updateMetadataValue:forKey:]
  -[ICInAppMessageEntry allCachedResourceLocations]


ICIAMApplicationMessageSyncCommand : PBCodable <NSCopying>
 @property  BOOL hasCommandType
 @property  int commandType
 @property  BOOL hasApplicationMessage
 @property  ICIAMApplicationMessage *applicationMessage
 @property  BOOL hasCommandSerialNumber
 @property  long long commandSerialNumber

  // instance methods
  -[ICIAMApplicationMessageSyncCommand mergeFrom:]
  -[ICIAMApplicationMessageSyncCommand .cxx_destruct]
  -[ICIAMApplicationMessageSyncCommand dictionaryRepresentation]
  -[ICIAMApplicationMessageSyncCommand writeTo:]
  -[ICIAMApplicationMessageSyncCommand isEqual:]
  -[ICIAMApplicationMessageSyncCommand copyTo:]
  -[ICIAMApplicationMessageSyncCommand readFrom:]
  -[ICIAMApplicationMessageSyncCommand commandType]
  -[ICIAMApplicationMessageSyncCommand setCommandType:]
  -[ICIAMApplicationMessageSyncCommand copyWithZone:]
  -[ICIAMApplicationMessageSyncCommand applicationMessage]
  -[ICIAMApplicationMessageSyncCommand commandSerialNumber]
  -[ICIAMApplicationMessageSyncCommand setApplicationMessage:]
  -[ICIAMApplicationMessageSyncCommand setHasCommandType:]
  -[ICIAMApplicationMessageSyncCommand hasCommandType]
  -[ICIAMApplicationMessageSyncCommand commandTypeAsString:]
  -[ICIAMApplicationMessageSyncCommand StringAsCommandType:]
  -[ICIAMApplicationMessageSyncCommand hasApplicationMessage]
  -[ICIAMApplicationMessageSyncCommand setCommandSerialNumber:]
  -[ICIAMApplicationMessageSyncCommand setHasCommandSerialNumber:]
  -[ICIAMApplicationMessageSyncCommand hasCommandSerialNumber]


ICAMSBagAdapter : NSObject <AMSBagProtocol>
 @property  ICStoreRequestContext *requestContext
 @property  BOOL expired
 @property  NSDate *expirationDate
 @property  NSString *profile
 @property  NSString *profileVersion
 @property  AMSProcessInfo *processInfo
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ICAMSBagAdapter _valueFromICURLBag:forKeyPath:valueType:]
  +[ICAMSBagAdapter _value:matchesExpectedType:]
  +[ICAMSBagAdapter _valueForBagKey:valueType:fromURLBag:urlBagLoadingError:valueRetrievingError:]

  // instance methods
  -[ICAMSBagAdapter .cxx_destruct]
  -[ICAMSBagAdapter isExpired]
  -[ICAMSBagAdapter boolForKey:]
  -[ICAMSBagAdapter integerForKey:]
  -[ICAMSBagAdapter initWithRequestContext:]
  -[ICAMSBagAdapter profileVersion]
  -[ICAMSBagAdapter stringForKey:]
  -[ICAMSBagAdapter arrayForKey:]
  -[ICAMSBagAdapter URLForKey:]
  -[ICAMSBagAdapter profile]
  -[ICAMSBagAdapter doubleForKey:]
  -[ICAMSBagAdapter _bagValueForKey:valueType:]
  -[ICAMSBagAdapter requestContext]
  -[ICAMSBagAdapter createSnapshotWithCompletion:]
  -[ICAMSBagAdapter expirationDate]
  -[ICAMSBagAdapter dictionaryForKey:]
  -[ICAMSBagAdapter _didFinishLoadingBag:error:]


ICDelegationConsumerServiceSessionRequestInfo : NSObject
 @property  unsigned long accountID
 @property  unsigned long fairPlaySessionID

  // instance methods
  -[ICDelegationConsumerServiceSessionRequestInfo accountID]
  -[ICDelegationConsumerServiceSessionRequestInfo isEqual:]
  -[ICDelegationConsumerServiceSessionRequestInfo fairPlaySessionID]
  -[ICDelegationConsumerServiceSessionRequestInfo initWithAccountID:fairPlaySessionID:]


ICDelegateAccountStoreServiceListener : NSObject <NSXPCListenerDelegate, ICDelegateAccountStoreService>
 @property  NSXPCListenerEndpoint *XPCEndpoint
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ICDelegateAccountStoreServiceListener machServiceListener]
  +[ICDelegateAccountStoreServiceListener testingListenerWithIdentityStore:]

  // instance methods
  -[ICDelegateAccountStoreServiceListener openWithCompletionHandler:]
  -[ICDelegateAccountStoreServiceListener suspend]
  -[ICDelegateAccountStoreServiceListener addDelegationUUIDs:forUserIdentity:completionHandler:]
  -[ICDelegateAccountStoreServiceListener .cxx_destruct]
  -[ICDelegateAccountStoreServiceListener _identityStore]
  -[ICDelegateAccountStoreServiceListener removeIdentityPropertiesForUserIdentity:completionHandler:]
  -[ICDelegateAccountStoreServiceListener _userIdentityStoreDelegateAccountStoreDidChangeNotification:]
  -[ICDelegateAccountStoreServiceListener setToken:forUserIdentity:completionHandler:]
  -[ICDelegateAccountStoreServiceListener removeTokensExpiringBeforeDate:completionHandler:]
  -[ICDelegateAccountStoreServiceListener recreateWithCompletionHandler:]
  -[ICDelegateAccountStoreServiceListener removeAllTokensWithCompletionHandler:]
  -[ICDelegateAccountStoreServiceListener XPCEndpoint]
  -[ICDelegateAccountStoreServiceListener resume]
  -[ICDelegateAccountStoreServiceListener removeTokenForUserIdentity:completionHandler:]
  -[ICDelegateAccountStoreServiceListener removeDelegationUUIDs:forUserIdentity:completionHandler:]
  -[ICDelegateAccountStoreServiceListener invalidate]
  -[ICDelegateAccountStoreServiceListener listener:shouldAcceptNewConnection:]
  -[ICDelegateAccountStoreServiceListener setIdentityProperties:forUserIdentity:completionHandler:]
  -[ICDelegateAccountStoreServiceListener _initWithXPCListener:testingIdentityStore:]


ICFPSAPContext : NSObject
  // instance methods
  -[ICFPSAPContext initReturningError:]
  -[ICFPSAPContext processResponseWithSignatureData:data:error:]
  -[ICFPSAPContext signData:returningSignatureData:error:]
  -[ICFPSAPContext dealloc]
  -[ICFPSAPContext exchangeWithSAPVersion:data:returningData:exchangeStatus:error:]


_ICLLPlaybackControlSettings : PBCodable <NSCopying>
  // instance methods
  -[_ICLLPlaybackControlSettings .cxx_destruct]
  -[_ICLLPlaybackControlSettings dictionaryRepresentation]
  -[_ICLLPlaybackControlSettings writeTo:]
  -[_ICLLPlaybackControlSettings isEqual:]
  -[_ICLLPlaybackControlSettings readFrom:]
  -[_ICLLPlaybackControlSettings copyWithZone:]


ICIAMSynchronizeMessagesResponse : PBCodable <NSCopying>
 @property  NSMutableArray *applicationMessageSyncResponses

  // class methods
  +[ICIAMSynchronizeMessagesResponse applicationMessageSyncResponsesType]

  // instance methods
  -[ICIAMSynchronizeMessagesResponse mergeFrom:]
  -[ICIAMSynchronizeMessagesResponse .cxx_destruct]
  -[ICIAMSynchronizeMessagesResponse dictionaryRepresentation]
  -[ICIAMSynchronizeMessagesResponse writeTo:]
  -[ICIAMSynchronizeMessagesResponse isEqual:]
  -[ICIAMSynchronizeMessagesResponse copyTo:]
  -[ICIAMSynchronizeMessagesResponse readFrom:]
  -[ICIAMSynchronizeMessagesResponse copyWithZone:]
  -[ICIAMSynchronizeMessagesResponse applicationMessageSyncResponsesCount]
  -[ICIAMSynchronizeMessagesResponse applicationMessageSyncResponsesAtIndex:]
  -[ICIAMSynchronizeMessagesResponse addApplicationMessageSyncResponses:]
  -[ICIAMSynchronizeMessagesResponse clearApplicationMessageSyncResponses]
  -[ICIAMSynchronizeMessagesResponse applicationMessageSyncResponses]
  -[ICIAMSynchronizeMessagesResponse setApplicationMessageSyncResponses:]


ICMediaAPIURLMapping : NSObject
 @property  NSString *featureName
 @property  NSString *pattern

  // instance methods
  -[ICMediaAPIURLMapping pattern]
  -[ICMediaAPIURLMapping initWithResponseDictionary:]
  -[ICMediaAPIURLMapping .cxx_destruct]
  -[ICMediaAPIURLMapping featureName]


ICMediaAPIURLMappingSet : NSObject
 @property  NSArray *responsePayload

  // instance methods
  -[ICMediaAPIURLMappingSet .cxx_destruct]
  -[ICMediaAPIURLMappingSet initWithResponsePayload:]
  -[ICMediaAPIURLMappingSet responsePayload]
  -[ICMediaAPIURLMappingSet enumerateMappingsUsingBlock:]
  -[ICMediaAPIURLMappingSet mappingsForFeatureName:]


ICFPContentInfo : NSObject
 @property  long long vodkaType
 @property  unsigned long accountID
 @property  (FPContentInfo_=I{VanillaVodkaAttributes_=I^{sinfEntry_}I}{CloudVodkaAttributes_=IIQ}{WHAVodkaAttributes_=IQ}) fpContentInfo

  // class methods
  +[ICFPContentInfo whaContentInfoWithAccountID:]

  // instance methods
  -[ICFPContentInfo accountID]
  -[ICFPContentInfo _init]
  -[ICFPContentInfo vodkaType]
  -[ICFPContentInfo fpContentInfo]


ICRadioPlaybackHistoryStore : NSObject
 @property  NSURL *containerDirectoryURL
 @property  ICUserIdentityStore *userIdentityStore

  // class methods
  +[ICRadioPlaybackHistoryStore _defaultContainerURL]

  // instance methods
  -[ICRadioPlaybackHistoryStore userIdentityStore]
  -[ICRadioPlaybackHistoryStore flushWithCompletionHandler:]
  -[ICRadioPlaybackHistoryStore .cxx_destruct]
  -[ICRadioPlaybackHistoryStore init]
  -[ICRadioPlaybackHistoryStore initWithContainerDirectoryURL:]
  -[ICRadioPlaybackHistoryStore initWithContainerDirectoryURL:identityStore:]
  -[ICRadioPlaybackHistoryStore _playbackHistoryOfClass:forStationWithIdentifier:identityKey:error:]
  -[ICRadioPlaybackHistoryStore _getCacheKeyForUserIdentity:completionHandler:]
  -[ICRadioPlaybackHistoryStore _fileURLForStationWithIdentifier:identityKey:]
  -[ICRadioPlaybackHistoryStore updateHistoryForStationWithIdentifier:userIdentity:usingBlock:completionHandler:]
  -[ICRadioPlaybackHistoryStore initWithIdentityStore:]
  -[ICRadioPlaybackHistoryStore getHistoryForStationWithIdentifier:userIdentity:completionHandler:]
  -[ICRadioPlaybackHistoryStore removeHistoryForStationWithIdentifier:userIdentity:completionHandler:]
  -[ICRadioPlaybackHistoryStore updateHistoryForStationWithIdentifier:userIdentity:usingBlock:]
  -[ICRadioPlaybackHistoryStore containerDirectoryURL]


ICPlayActivityController : NSObject
 @property  unsigned long writingStyle

  // class methods
  +[ICPlayActivityController _requiredEndpointIdentifiers]

  // instance methods
  -[ICPlayActivityController _table]
  -[ICPlayActivityController _daemonPlayActivityControllerConnection]
  -[ICPlayActivityController _completePendingPlayEventsWithRevisionIndexSet:forSessionToken:withResult:completionHandler:]
  -[ICPlayActivityController initWithWritingStyle:databasePath:]
  -[ICPlayActivityController getRevisionInformationWithCompletionHandler:]
  -[ICPlayActivityController completePendingPlayActivityEventPersistentIDs:forSessionToken:withResult:completionHandler:]
  -[ICPlayActivityController removePlayActivityEventsUpToRevision:withCompletionHandler:]
  -[ICPlayActivityController .cxx_destruct]
  -[ICPlayActivityController flushPendingPlayActivityEventsForEndpointIdentifier:withCompletionHandler:]
  -[ICPlayActivityController acquirePendingPlayActivityEventsForEndpointIdentifier:withCompletionHandler:]
  -[ICPlayActivityController writingStyle]
  -[ICPlayActivityController _setupNotifyTokenIfNeeded]
  -[ICPlayActivityController _getFlushSessionInformationForEndpointIdentifier:shouldAcquire:storeAccountID:shouldFilterStoreAccountID:withCompletionHandler:]
  -[ICPlayActivityController _revisionsIndexSetForPlayActivityEvents:]
  -[ICPlayActivityController getHasPendingPlayEventsForEndpointIdentifier:withCompletionHandler:]
  -[ICPlayActivityController _loadEndpointIdentifierInformationIfNeeded]
  -[ICPlayActivityController _sessionInformationForSessionToken:]
  -[ICPlayActivityController _revisionsIndexSetForPlayActivityEventPersistentIDs:]
  -[ICPlayActivityController init]
  -[ICPlayActivityController _acquirePendingPlayActivityEventsForEndpointIdentifier:withStoreAccountID:shouldFilterStoreAccountID:completionHandler:]
  -[ICPlayActivityController completePendingPlayActivityEvents:forSessionToken:withResult:completionHandler:]
  -[ICPlayActivityController _copyEndpointRevisionInformationForEndpointIdentifier:]
  -[ICPlayActivityController acquirePendingPlayActivityEventsForEndpointIdentifier:withStoreAccountID:completionHandler:]
  -[ICPlayActivityController setCurrentRevision:revisionVersionToken:forEndpointIdentifier:withCompletionHandler:]
  -[ICPlayActivityController _setEndpointRevisionInformation:forEndpointIdentifier:]
  -[ICPlayActivityController dealloc]
  -[ICPlayActivityController removeFlushedPlayActivityEventsWithCompletionHandler:]
  -[ICPlayActivityController recordPlayActivityEvents:withCompletionHandler:]
  -[ICPlayActivityController getPlayActivityEventsFromRevision:toRevision:withCompletionHandler:]
  -[ICPlayActivityController initWithWritingStyle:]


_ICPlayActivityEndpointRevisionInformation : NSObject <NSCopying, NSSecureCoding>
 @property  NSIndexSet *additionalPendingRevisionsIndexSet
 @property  unsigned long currentRevision
 @property  NSString *revisionVersionToken

  // class methods
  +[_ICPlayActivityEndpointRevisionInformation supportsSecureCoding]

  // instance methods
  -[_ICPlayActivityEndpointRevisionInformation initWithCoder:]
  -[_ICPlayActivityEndpointRevisionInformation .cxx_destruct]
  -[_ICPlayActivityEndpointRevisionInformation additionalPendingRevisionsIndexSet]
  -[_ICPlayActivityEndpointRevisionInformation isEqual:]
  -[_ICPlayActivityEndpointRevisionInformation setCurrentRevision:]
  -[_ICPlayActivityEndpointRevisionInformation setRevisionVersionToken:]
  -[_ICPlayActivityEndpointRevisionInformation revisionVersionToken]
  -[_ICPlayActivityEndpointRevisionInformation setAdditionalPendingRevisionsIndexSet:]
  -[_ICPlayActivityEndpointRevisionInformation currentRevision]
  -[_ICPlayActivityEndpointRevisionInformation copyWithZone:]
  -[_ICPlayActivityEndpointRevisionInformation encodeWithCoder:]


_ICPlayActivityFlushSessionInformation : NSObject
 @property  NSString *endpointIdentifier
 @property  NSIndexSet *revisionsIndexSet
 @property  NSString *revisionVersionToken
 @property  unsigned long sessionToken

  // instance methods
  -[_ICPlayActivityFlushSessionInformation .cxx_destruct]
  -[_ICPlayActivityFlushSessionInformation endpointIdentifier]
  -[_ICPlayActivityFlushSessionInformation revisionsIndexSet]
  -[_ICPlayActivityFlushSessionInformation sessionToken]
  -[_ICPlayActivityFlushSessionInformation setRevisionVersionToken:]
  -[_ICPlayActivityFlushSessionInformation revisionVersionToken]
  -[_ICPlayActivityFlushSessionInformation setRevisionsIndexSet:]
  -[_ICPlayActivityFlushSessionInformation setEndpointIdentifier:]
  -[_ICPlayActivityFlushSessionInformation setSessionToken:]


ICPushNotificationsDisableTypesRequest : ICRequestOperation
  // instance methods
  -[ICPushNotificationsDisableTypesRequest .cxx_destruct]
  -[ICPushNotificationsDisableTypesRequest performRequestWithResponseHandler:]
  -[ICPushNotificationsDisableTypesRequest execute]
  -[ICPushNotificationsDisableTypesRequest initWithRequestContext:notificationType:]


ICStoreArtworkSizeInfo : NSObject
 @property  long long type
 @property  NSArray *supportedSizes
 @property  BOOL hasMaxSupportedSize
 @property  {CGSize=dd} maxSupportedSize

  // instance methods
  -[ICStoreArtworkSizeInfo setType:]
  -[ICStoreArtworkSizeInfo .cxx_destruct]
  -[ICStoreArtworkSizeInfo setHasMaxSupportedSize:]
  -[ICStoreArtworkSizeInfo isEqual:]
  -[ICStoreArtworkSizeInfo setMaxSupportedSize:]
  -[ICStoreArtworkSizeInfo supportedSizes]
  -[ICStoreArtworkSizeInfo type]
  -[ICStoreArtworkSizeInfo setSupportedSizes:]
  -[ICStoreArtworkSizeInfo hasMaxSupportedSize]
  -[ICStoreArtworkSizeInfo maxSupportedSize]


ICStoreArtworkInfo : NSObject <NSCopying, NSSecureCoding>
 @property  NSArray *sortedResponseArray
 @property  NSArray *sortedSupportedSizesArray
 @property  NSURL *artworkURL
 @property  NSArray *responseArray
 @property  NSDictionary *responseDictionary
 @property  ICStoreArtworkSizeInfo *sizeInfo
 @property  {CGSize=dd} originalSize
 @property  NSString *stringRepresentation
 @property  unsigned long imageTraits
 @property  NSArray *textGradient

  // class methods
  +[ICStoreArtworkInfo supportsSecureCoding]

  // instance methods
  -[ICStoreArtworkInfo artworkURL]
  -[ICStoreArtworkInfo stringRepresentation]
  -[ICStoreArtworkInfo initWithCoder:]
  -[ICStoreArtworkInfo responseDictionary]
  -[ICStoreArtworkInfo setSortedSupportedSizesArray:]
  -[ICStoreArtworkInfo .cxx_destruct]
  -[ICStoreArtworkInfo initWithArtworkURL:]
  -[ICStoreArtworkInfo initWithArtworkResponseValue:]
  -[ICStoreArtworkInfo isEqual:]
  -[ICStoreArtworkInfo _hasOriginalSize]
  -[ICStoreArtworkInfo sortedResponseArray]
  -[ICStoreArtworkInfo imageTraits]
  -[ICStoreArtworkInfo initWithArtworkResponseDictionary:]
  -[ICStoreArtworkInfo sizeInfo]
  -[ICStoreArtworkInfo textGradient]
  -[ICStoreArtworkInfo copyColorWithKind:]
  -[ICStoreArtworkInfo artworkURLWithSize:cropStyle:format:]
  -[ICStoreArtworkInfo initWithArtworkResponseArray:]
  -[ICStoreArtworkInfo setSortedResponseArray:]
  -[ICStoreArtworkInfo sortedSupportedSizesArray]
  -[ICStoreArtworkInfo _sortSupportedSizesArray]
  -[ICStoreArtworkInfo originalSize]
  -[ICStoreArtworkInfo copyWithZone:]
  -[ICStoreArtworkInfo artworkURLWithSize:cropStyle:format:preferP3ColorSpace:]
  -[ICStoreArtworkInfo colorFromStringRepresentation:]
  -[ICStoreArtworkInfo responseArray]
  -[ICStoreArtworkInfo encodeWithCoder:]
  -[ICStoreArtworkInfo _sortResponseArray]


_ICLLPlaybackItem : PBCodable <NSCopying>
  // instance methods
  -[_ICLLPlaybackItem .cxx_destruct]
  -[_ICLLPlaybackItem dictionaryRepresentation]
  -[_ICLLPlaybackItem writeTo:]
  -[_ICLLPlaybackItem isEqual:]
  -[_ICLLPlaybackItem readFrom:]
  -[_ICLLPlaybackItem copyWithZone:]


ICLiveLink : NSObject <ICSharedListeningConnectionControllerDelegate>
 @property  {os_unfair_lock_s=I} lock
 @property  NSMutableDictionary *pendingRequests
 @property  NSMutableArray *pendingActions
 @property  BOOL processingAction
 @property  ICLiveLinkPlaybackCoordinatorMedium *playbackCoordinatorMedium
 @property  NSObject<OS_dispatch_queue> *delegateQueue
 @property  NSString *identifier
 @property  ICSharedListeningConnectionController *connectionController
 @property  ICLiveLinkIdentity *clientSpecifiedIdentity
 @property  long long localParticipantServerID
 @property  BOOL starting
 @property  BOOL started
 @property  NSString *forcedReconnectReason
 @property  NSString *deferredReconnectReason
 @property  BOOL receivedDisconnectionNotice
 @property  long long currentRetryCount
 @property  long long maxRetries
 @property  long long maxRetryWaitPeriod
 @property  <ICLiveLinkDelegate> *delegate
 @property  NSURL *invitationURL
 @property  NSString *sessionKey
 @property  ICLiveLinkIdentity *identity
 @property  NSArray *participants
 @property  ICSharedListeningQueue *queue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ICLiveLink linkWithIdentity:]
  +[ICLiveLink linkWithSessionIdentifier:identity:]

  // instance methods
  -[ICLiveLink participants]
  -[ICLiveLink setPendingRequests:]
  -[ICLiveLink setStarted:]
  -[ICLiveLink pendingRequests]
  -[ICLiveLink receivedEvent:]
  -[ICLiveLink delegateQueue]
  -[ICLiveLink maxRetries]
  -[ICLiveLink .cxx_destruct]
  -[ICLiveLink setStarting:]
  -[ICLiveLink isStarted]
  -[ICLiveLink stop]
  -[ICLiveLink setDelegate:]
  -[ICLiveLink sendMessage:completion:]
  -[ICLiveLink identifier]
  -[ICLiveLink isStarting]
  -[ICLiveLink identity]
  -[ICLiveLink _handleReceivedMessage:]
  -[ICLiveLink delegate]
  -[ICLiveLink sessionKey]
  -[ICLiveLink setIdentifier:]
  -[ICLiveLink queue]
  -[ICLiveLink start]
  -[ICLiveLink dealloc]
  -[ICLiveLink lock]
  -[ICLiveLink setMaxRetries:]
  -[ICLiveLink receivedCurrentItemIdentifier:fromParticipant:]
  -[ICLiveLink fetchPlaybackSyncStateWithCompletion:]
  -[ICLiveLink sendPlaybackSyncPayload:]
  -[ICLiveLink participantForParticipantUUID:]
  -[ICLiveLink initWithSharedListeningSessionIdentifier:identity:]
  -[ICLiveLink connectionController]
  -[ICLiveLink clientSpecifiedIdentity]
  -[ICLiveLink setConnectionController:]
  -[ICLiveLink setForcedReconnectReason:]
  -[ICLiveLink setDeferredReconnectReason:]
  -[ICLiveLink forcedReconnectReason]
  -[ICLiveLink setCurrentRetryCount:]
  -[ICLiveLink _storeTraceID:completion:]
  -[ICLiveLink _participantForAction:]
  -[ICLiveLink _updateQueueWithReason:completion:]
  -[ICLiveLink _handleUpdatedParticipantQuery:]
  -[ICLiveLink _emitSessionEventIfNeededForAction:disconnectedParticipant:]
  -[ICLiveLink _updateParticipantsWithReason:completion:]
  -[ICLiveLink _handleUpdatedQueue:serverQueueContext:]
  -[ICLiveLink _processPendingActions]
  -[ICLiveLink _didReceivePluginErrorMessage:]
  -[ICLiveLink _participantForParticipantID:]
  -[ICLiveLink _didReceiveAddItemsAction:completion:]
  -[ICLiveLink _didReceiveMoveItemAction:completion:]
  -[ICLiveLink _didReceiveRemoveItemAction:completion:]
  -[ICLiveLink _didReceivePlaybackSyncAction:completion:]
  -[ICLiveLink _didReceiveCurrentItemChangeAction:completion:]
  -[ICLiveLink _didReceivePlaybackControlSettingsAction:completion:]
  -[ICLiveLink _didReceiveReactionAction:completion:]
  -[ICLiveLink _didReceiveParticipantChangeAction:completion:]
  -[ICLiveLink _didReceiveServerNoticeAction:completion:]
  -[ICLiveLink _didReceiveReplaceQueueItemsAction:completion:]
  -[ICLiveLink _didReceivePlayNowQueueItemsAction:completion:]
  -[ICLiveLink _didReceiveCurrentItemTransitionAction:completion:]
  -[ICLiveLink _didReceiveQueueSyncAction:completion:]
  -[ICLiveLink currentRetryCount]
  -[ICLiveLink playbackCoordinatorMedium]
  -[ICLiveLink setReceivedDisconnectionNotice:]
  -[ICLiveLink deferredReconnectReason]
  -[ICLiveLink reconnectWithReason:options:]
  -[ICLiveLink _performClientInfoExchangeAndInitializeQueue]
  -[ICLiveLink _handlePotentiallyRecoverableError:]
  -[ICLiveLink maxRetryWaitPeriod]
  -[ICLiveLink connectionControllerConnectionDidStart:]
  -[ICLiveLink connectionController:connectionDidEndWithError:]
  -[ICLiveLink connectionController:didEncounterFatalError:]
  -[ICLiveLink connectionController:connectionDidReceiveMessage:]
  -[ICLiveLink invitationURL]
  -[ICLiveLink beginSynchronizedPlaybackWithAVPlaybackCoordinator:]
  -[ICLiveLink beginSynchronizedPlaybackWithAVCFPlaybackCoordinator:]
  -[ICLiveLink endSynchronizedPlayback]
  -[ICLiveLink broadcastDirectCurrentItemChangedToItemIdentifier:]
  -[ICLiveLink updateWithIdentity:]
  -[ICLiveLink pendingActions]
  -[ICLiveLink setPendingActions:]
  -[ICLiveLink processingAction]
  -[ICLiveLink setProcessingAction:]
  -[ICLiveLink setPlaybackCoordinatorMedium:]
  -[ICLiveLink localParticipantServerID]
  -[ICLiveLink receivedDisconnectionNotice]
  -[ICLiveLink setMaxRetryWaitPeriod:]


ICSharedListeningContainer : NSObject <NSCopying>
 @property  NSString *identifier
 @property  long long kind
 @property  NSString *mediaIdentifier
 @property  NSString *featureName

  // class methods
  +[ICSharedListeningContainer groupWithFeatureName:]
  +[ICSharedListeningContainer albumContainerWithMediaIdentifier:featureName:]
  +[ICSharedListeningContainer playlistContainerWithMediaIdentifier:featureName:]

  // instance methods
  -[ICSharedListeningContainer .cxx_destruct]
  -[ICSharedListeningContainer mediaIdentifier]
  -[ICSharedListeningContainer isEqual:]
  -[ICSharedListeningContainer identifier]
  -[ICSharedListeningContainer initWithProtobuf:]
  -[ICSharedListeningContainer kind]
  -[ICSharedListeningContainer setIdentifier:]
  -[ICSharedListeningContainer featureName]
  -[ICSharedListeningContainer copyWithZone:]
  -[ICSharedListeningContainer _initWithKind:mediaIdentifier:featureName:]


ICSharedListeningItem : NSObject <NSCopying>
 @property  NSString *identifier
 @property  NSString *mediaIdentifier
 @property  ICLiveLinkIdentity *contributorIdentity
 @property  NSDictionary *playParams

  // class methods
  +[ICSharedListeningItem itemWithMediaIdentifier:]

  // instance methods
  -[ICSharedListeningItem .cxx_destruct]
  -[ICSharedListeningItem mediaIdentifier]
  -[ICSharedListeningItem identifier]
  -[ICSharedListeningItem setIdentifier:]
  -[ICSharedListeningItem copyWithZone:]
  -[ICSharedListeningItem _playParamsForPlaybackItemProto:]
  -[ICSharedListeningItem initWithProtobuf:identity:]
  -[ICSharedListeningItem contributorIdentity]
  -[ICSharedListeningItem playParams]


ICSharedTracklistPosition : NSObject
 @property  long long type
 @property  NSString *afterItemIdentifier

  // class methods
  +[ICSharedTracklistPosition specifiedPositionAfterItemIdentifier:]
  +[ICSharedTracklistPosition playNextPositionWithAfterItemIdentifierHint:]
  +[ICSharedTracklistPosition playLastPositionWithAfterItemIdentifierHint:]

  // instance methods
  -[ICSharedTracklistPosition .cxx_destruct]
  -[ICSharedTracklistPosition type]
  -[ICSharedTracklistPosition afterItemIdentifier]


ICSharedListeningQueue : NSObject <NSCopying>
 @property  ICLiveLink *liveLink
 @property  long long serverRevision
 @property  NSString *serverQueueContext
 @property  NSString *identifier
 @property  long long explicitContentState
 @property  NSArray *items
 @property  MSVSectionedCollection *tracklist

  // instance methods
  -[ICSharedListeningQueue tracklist]
  -[ICSharedListeningQueue items]
  -[ICSharedListeningQueue .cxx_destruct]
  -[ICSharedListeningQueue identifier]
  -[ICSharedListeningQueue itemForIdentifier:]
  -[ICSharedListeningQueue liveLink]
  -[ICSharedListeningQueue explicitContentState]
  -[ICSharedListeningQueue copyWithZone:]
  -[ICSharedListeningQueue initWithProtobuf:serverQueueContext:liveLink:]
  -[ICSharedListeningQueue serverRevision]
  -[ICSharedListeningQueue _tracklistForQueueProto:]
  -[ICSharedListeningQueue _itemForIdentifier:outIndexPath:]
  -[ICSharedListeningQueue replaceTracklist:preferredStartIndexPath:completion:]
  -[ICSharedListeningQueue _playbackItemProtosForTracklist:withPreferredStartItemIndexPath:]
  -[ICSharedListeningQueue insertTracklist:afterItemIdentifier:completion:]
  -[ICSharedListeningQueue insertTracklist:atPosition:completion:]
  -[ICSharedListeningQueue insertTracklist:atPosition:completionEx:]
  -[ICSharedListeningQueue _afterItemPositionForItemIdentifier:]
  -[ICSharedListeningQueue insertTracklist:afterItemIdentifier:playNowWithPreferredStartIndexPath:completionEx:]
  -[ICSharedListeningQueue containerForIdentifier:]
  -[ICSharedListeningQueue setMediaIdentifiers:preferredStartIndex:]
  -[ICSharedListeningQueue addMediaIdentifiers:afterItemIdentifier:]
  -[ICSharedListeningQueue insertTracklist:afterItemIdentifier:playNowWithPreferredStartIndexPath:completion:]
  -[ICSharedListeningQueue removeItemIdentifier:]
  -[ICSharedListeningQueue moveItemIdentifier:beforeItemIdentifier:]
  -[ICSharedListeningQueue moveItemIdentifier:afterItemIdentifier:]
  -[ICSharedListeningQueue getExpectedCurrentItemWithCompletion:]
  -[ICSharedListeningQueue setLiveLink:]
  -[ICSharedListeningQueue serverQueueContext]


ICSuzeLeaseSession : NSObject
 @property  ICSuzeLeaseSessionConfiguration *configuration
 @property  <ICSuzeLeaseSessionDelegate> *delegate

  // instance methods
  -[ICSuzeLeaseSession configuration]
  -[ICSuzeLeaseSession .cxx_destruct]
  -[ICSuzeLeaseSession setDelegate:]
  -[ICSuzeLeaseSession initWithConfiguration:]
  -[ICSuzeLeaseSession delegate]
  -[ICSuzeLeaseSession dealloc]
  -[ICSuzeLeaseSession _updateRenewalTimer]
  -[ICSuzeLeaseSession _newSuzeLeaseRequestWithType:clientData:]
  -[ICSuzeLeaseSession _updateRenewalTimerWithResponse:]
  -[ICSuzeLeaseSession _renewLeaseTimerAction]
  -[ICSuzeLeaseSession beginAutomaticallyRefreshingLease]
  -[ICSuzeLeaseSession endAutomaticallyRefreshingLease]
  -[ICSuzeLeaseSession startLeaseSessionWithCompletionHandler:]
  -[ICSuzeLeaseSession stopLeaseSessionWithCompletionHandler:]


ICMediaRedownloadRequest : ICRequestOperation
 @property  ICStoreRequestContext *requestContext
 @property  NSDictionary *redownloadParameters
 @property  NSString *requestURLBagKey
 @property  BOOL includeKeybagSyncData
 @property  BOOL includeSubscriptionKeybagSyncData
 @property  BOOL playbackRequest
 @property  BOOL streamingRental
 @property  BOOL usePrioritizedURLSession

  // instance methods
  -[ICMediaRedownloadRequest .cxx_destruct]
  -[ICMediaRedownloadRequest performRequestWithResponseHandler:]
  -[ICMediaRedownloadRequest init]
  -[ICMediaRedownloadRequest execute]
  -[ICMediaRedownloadRequest cancel]
  -[ICMediaRedownloadRequest redownloadParameters]
  -[ICMediaRedownloadRequest setRedownloadParameters:]
  -[ICMediaRedownloadRequest requestContext]
  -[ICMediaRedownloadRequest setRequestContext:]
  -[ICMediaRedownloadRequest setPlaybackRequest:]
  -[ICMediaRedownloadRequest isPlaybackRequest]
  -[ICMediaRedownloadRequest setRequestURLBagKey:]
  -[ICMediaRedownloadRequest setIncludeKeybagSyncData:]
  -[ICMediaRedownloadRequest setIncludeSubscriptionKeybagSyncData:]
  -[ICMediaRedownloadRequest initWithRequestContext:redownloadParameters:]
  -[ICMediaRedownloadRequest _executeWithActiveICloudAccountProperties:]
  -[ICMediaRedownloadRequest initWithRequestContext:redownloadParametersString:]
  -[ICMediaRedownloadRequest isStreamingRental]
  -[ICMediaRedownloadRequest setStreamingRental:]
  -[ICMediaRedownloadRequest usePrioritizedURLSession]
  -[ICMediaRedownloadRequest setUsePrioritizedURLSession:]
  -[ICMediaRedownloadRequest requestURLBagKey]
  -[ICMediaRedownloadRequest includeKeybagSyncData]
  -[ICMediaRedownloadRequest includeSubscriptionKeybagSyncData]


ICUserIdentityStoreCoding : NSObject <NSSecureCoding>
 @property  long long identityStoreStyle
 @property  long long uniqueIdentifier
 @property  ICValueHistory *activeAccountHistory
 @property  ICValueHistory *activeLockerAccountHistory
 @property  <ICUserIdentityStoreBackend> *backend
 @property  ICDelegateAccountStoreOptions *delegateAccountStoreOptions

  // class methods
  +[ICUserIdentityStoreCoding supportsSecureCoding]

  // instance methods
  -[ICUserIdentityStoreCoding initWithIdentityStoreStyle:]
  -[ICUserIdentityStoreCoding uniqueIdentifier]
  -[ICUserIdentityStoreCoding identityStoreStyle]
  -[ICUserIdentityStoreCoding initWithCoder:]
  -[ICUserIdentityStoreCoding .cxx_destruct]
  -[ICUserIdentityStoreCoding _initCommon]
  -[ICUserIdentityStoreCoding delegateAccountStoreOptions]
  -[ICUserIdentityStoreCoding activeLockerAccountHistory]
  -[ICUserIdentityStoreCoding setActiveLockerAccountHistory:]
  -[ICUserIdentityStoreCoding backend]
  -[ICUserIdentityStoreCoding setBackend:]
  -[ICUserIdentityStoreCoding activeAccountHistory]
  -[ICUserIdentityStoreCoding setDelegateAccountStoreOptions:]
  -[ICUserIdentityStoreCoding lock:]
  -[ICUserIdentityStoreCoding encodeWithCoder:]
  -[ICUserIdentityStoreCoding setActiveAccountHistory:]


ICIAMLogEventRequest : PBRequest <NSCopying>
 @property  BOOL hasApplicationMessageIdentifier
 @property  NSString *applicationMessageIdentifier
 @property  BOOL hasDSID
 @property  long long dSID
 @property  BOOL hasDeviceID
 @property  NSString *deviceID
 @property  NSMutableArray *eventParameters

  // class methods
  +[ICIAMLogEventRequest eventParametersType]

  // instance methods
  -[ICIAMLogEventRequest setDSID:]
  -[ICIAMLogEventRequest mergeFrom:]
  -[ICIAMLogEventRequest dSID]
  -[ICIAMLogEventRequest .cxx_destruct]
  -[ICIAMLogEventRequest deviceID]
  -[ICIAMLogEventRequest dictionaryRepresentation]
  -[ICIAMLogEventRequest writeTo:]
  -[ICIAMLogEventRequest hasDSID]
  -[ICIAMLogEventRequest isEqual:]
  -[ICIAMLogEventRequest copyTo:]
  -[ICIAMLogEventRequest readFrom:]
  -[ICIAMLogEventRequest eventParameters]
  -[ICIAMLogEventRequest setDeviceID:]
  -[ICIAMLogEventRequest hasDeviceID]
  -[ICIAMLogEventRequest copyWithZone:]
  -[ICIAMLogEventRequest setHasDSID:]
  -[ICIAMLogEventRequest addEventParameters:]
  -[ICIAMLogEventRequest setApplicationMessageIdentifier:]
  -[ICIAMLogEventRequest eventParametersCount]
  -[ICIAMLogEventRequest clearEventParameters]
  -[ICIAMLogEventRequest eventParametersAtIndex:]
  -[ICIAMLogEventRequest hasApplicationMessageIdentifier]
  -[ICIAMLogEventRequest applicationMessageIdentifier]
  -[ICIAMLogEventRequest setEventParameters:]


ICStoreURLRequestBuilderProperties : NSObject
 @property  NSString *iCloudPersonID
 @property  ICURLBag *URLBag
 @property  NSNumber *DSID
 @property  NSString *storefrontIdentifier
 @property  NSNumber *delegatedDSID
 @property  NSString *delegatedStorefrontIdentifier
 @property  ICDelegateToken *delegateToken
 @property  ICURLBag *delegatedURLBag

  // instance methods
  -[ICStoreURLRequestBuilderProperties URLBag]
  -[ICStoreURLRequestBuilderProperties iCloudPersonID]
  -[ICStoreURLRequestBuilderProperties setDSID:]
  -[ICStoreURLRequestBuilderProperties setDelegateToken:]
  -[ICStoreURLRequestBuilderProperties DSID]
  -[ICStoreURLRequestBuilderProperties setDelegatedDSID:]
  -[ICStoreURLRequestBuilderProperties .cxx_destruct]
  -[ICStoreURLRequestBuilderProperties setDelegatedURLBag:]
  -[ICStoreURLRequestBuilderProperties delegateToken]
  -[ICStoreURLRequestBuilderProperties delegatedDSID]
  -[ICStoreURLRequestBuilderProperties setURLBag:]
  -[ICStoreURLRequestBuilderProperties setICloudPersonID:]
  -[ICStoreURLRequestBuilderProperties setDelegatedStorefrontIdentifier:]
  -[ICStoreURLRequestBuilderProperties delegatedURLBag]
  -[ICStoreURLRequestBuilderProperties delegatedStorefrontIdentifier]
  -[ICStoreURLRequestBuilderProperties storefrontIdentifier]
  -[ICStoreURLRequestBuilderProperties setStorefrontIdentifier:]


ICStoreFileAssetFairPlayInfo : NSObject <NSCopying>
 @property  NSDictionary *responseSinfDictionary
 @property  long long identifier
 @property  NSData *dpInfoData
 @property  NSData *pinfData
 @property  NSData *sinfData
 @property  NSData *sinf2Data
 @property  NSDictionary *purchaseBundleSinfDictionary

  // instance methods
  -[ICStoreFileAssetFairPlayInfo .cxx_destruct]
  -[ICStoreFileAssetFairPlayInfo pinfData]
  -[ICStoreFileAssetFairPlayInfo sinfData]
  -[ICStoreFileAssetFairPlayInfo dpInfoData]
  -[ICStoreFileAssetFairPlayInfo identifier]
  -[ICStoreFileAssetFairPlayInfo sinf2Data]
  -[ICStoreFileAssetFairPlayInfo initWithResponseSinfDictionary:]
  -[ICStoreFileAssetFairPlayInfo responseSinfDictionary]
  -[ICStoreFileAssetFairPlayInfo purchaseBundleSinfDictionary]
  -[ICStoreFileAssetFairPlayInfo copyWithZone:]


ICInAppMessageUserNotificationCoordinator : NSObject
  // class methods
  +[ICInAppMessageUserNotificationCoordinator removeBadgeIconForBundleIdentifier:completion:]
  +[ICInAppMessageUserNotificationCoordinator addBadgeIconForBundleIdentifier:completion:]
  +[ICInAppMessageUserNotificationCoordinator scheduleNotificationWithPayload:forBundleIdentifier:]
  +[ICInAppMessageUserNotificationCoordinator removeNotificationWithIdentifier:forBundleIdentifier:]
  +[ICInAppMessageUserNotificationCoordinator _centerForBundleIdentifier:]
  +[ICInAppMessageUserNotificationCoordinator _musicCenter]
  +[ICInAppMessageUserNotificationCoordinator _amsPushHandler]


ICMusicUserTokenFetchRequest : ICRemoteRequestOperation <NSSecureCoding>
  // class methods
  +[ICMusicUserTokenFetchRequest supportsSecureCoding]

  // instance methods
  -[ICMusicUserTokenFetchRequest initWithCoder:]
  -[ICMusicUserTokenFetchRequest .cxx_destruct]
  -[ICMusicUserTokenFetchRequest performRequestWithResponseHandler:]
  -[ICMusicUserTokenFetchRequest execute]
  -[ICMusicUserTokenFetchRequest encodeWithCoder:]
  -[ICMusicUserTokenFetchRequest performRequestOnOperationQueue:withResponseHandler:]
  -[ICMusicUserTokenFetchRequest _executeByPerformingStoreRequestWithContext:qualityOfService:]
  -[ICMusicUserTokenFetchRequest initWithDeveloperToken:clientInfo:options:]


_ICLLCurrentItemChangeAction : PBCodable <NSCopying>
  // instance methods
  -[_ICLLCurrentItemChangeAction .cxx_destruct]
  -[_ICLLCurrentItemChangeAction dictionaryRepresentation]
  -[_ICLLCurrentItemChangeAction writeTo:]
  -[_ICLLCurrentItemChangeAction isEqual:]
  -[_ICLLCurrentItemChangeAction readFrom:]
  -[_ICLLCurrentItemChangeAction copyWithZone:]


ICPBDGSStartDelegationRequest : PBRequest <NSCopying>
  // instance methods
  -[ICPBDGSStartDelegationRequest .cxx_destruct]
  -[ICPBDGSStartDelegationRequest dictionaryRepresentation]
  -[ICPBDGSStartDelegationRequest writeTo:]
  -[ICPBDGSStartDelegationRequest isEqual:]
  -[ICPBDGSStartDelegationRequest readFrom:]
  -[ICPBDGSStartDelegationRequest copyWithZone:]


_ICLLMoveQueueItemCommand : PBCodable <NSCopying>
  // instance methods
  -[_ICLLMoveQueueItemCommand .cxx_destruct]
  -[_ICLLMoveQueueItemCommand dictionaryRepresentation]
  -[_ICLLMoveQueueItemCommand writeTo:]
  -[_ICLLMoveQueueItemCommand isEqual:]
  -[_ICLLMoveQueueItemCommand readFrom:]
  -[_ICLLMoveQueueItemCommand copyWithZone:]


ICDeviceInfo : NSObject <ICNanoPairedDeviceStatusObserver>
 @property  NSString *deviceModel
 @property  NSString *rawDeviceModel
 @property  NSString *hardwarePlatform
 @property  NSString *deviceGUID
 @property  NSData *deviceFairPlayGUIDData
 @property  NSString *serialNumber
 @property  NSString *macAddress
 @property  NSData *macAddressData
 @property  {CGSize=dd} mainScreenSize
 @property  BOOL hasCellularDataCapability
 @property  BOOL hasTelephonyCapability
 @property  BOOL hasWiFiCapability
 @property  BOOL hasWAPICapability
 @property  BOOL has720pCapability
 @property  BOOL has1080pCapability
 @property  BOOL phoneNumberAccessRestricted
 @property  int screenClass
 @property  int deviceClass
 @property  BOOL isIPhone
 @property  BOOL isAppleTV
 @property  BOOL isIPad
 @property  BOOL isIPod
 @property  BOOL isWatch
 @property  BOOL isAudioAccessory
 @property  BOOL isMac
 @property  BOOL isROSDevice
 @property  NSString *deviceClassName
 @property  NSString *productVersion
 @property  NSString *productPlatform
 @property  NSString *buildVersion
 @property  BOOL internalBuild
 @property  BOOL seedBuild
 @property  NSString *systemReleaseType
 @property  unsigned int fairPlayDeviceType
 @property  NSString *name
 @property  NSString *currentLocale
 @property  BOOL supportsSideLoadedMediaContent
 @property  BOOL supportsMusicStreaming
 @property  BOOL supportsMultipleITunesAccounts
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ICDeviceInfo defaultInfo]
  +[ICDeviceInfo currentDeviceInfo]

  // instance methods
  -[ICDeviceInfo deviceModel]
  -[ICDeviceInfo isWatch]
  -[ICDeviceInfo productVersion]
  -[ICDeviceInfo serialNumber]
  -[ICDeviceInfo buildVersion]
  -[ICDeviceInfo currentLocale]
  -[ICDeviceInfo name]
  -[ICDeviceInfo isMac]
  -[ICDeviceInfo productPlatform]
  -[ICDeviceInfo .cxx_destruct]
  -[ICDeviceInfo isIPad]
  -[ICDeviceInfo isIPod]
  -[ICDeviceInfo deviceClass]
  -[ICDeviceInfo isPhoneNumberAccessRestricted]
  -[ICDeviceInfo deviceGUID]
  -[ICDeviceInfo isInternalBuild]
  -[ICDeviceInfo mainScreenSize]
  -[ICDeviceInfo hasCellularDataCapability]
  -[ICDeviceInfo isIPhone]
  -[ICDeviceInfo isSeedBuild]
  -[ICDeviceInfo hardwarePlatform]
  -[ICDeviceInfo hasTelephonyCapability]
  -[ICDeviceInfo _init]
  -[ICDeviceInfo macAddressData]
  -[ICDeviceInfo systemReleaseType]
  -[ICDeviceInfo hasWiFiCapability]
  -[ICDeviceInfo isAudioAccessory]
  -[ICDeviceInfo dealloc]
  -[ICDeviceInfo isAppleTV]
  -[ICDeviceInfo hasWAPICapability]
  -[ICDeviceInfo screenClass]
  -[ICDeviceInfo macAddress]
  -[ICDeviceInfo fairPlayDeviceType]
  -[ICDeviceInfo deviceClassName]
  -[ICDeviceInfo deviceFairPlayGUIDData]
  -[ICDeviceInfo supportsMultipleITunesAccounts]
  -[ICDeviceInfo _gestaltDeviceClass]
  -[ICDeviceInfo isROSDevice]
  -[ICDeviceInfo rawDeviceModel]
  -[ICDeviceInfo has720pCapability]
  -[ICDeviceInfo has1080pCapability]
  -[ICDeviceInfo supportsSideLoadedMediaContent]
  -[ICDeviceInfo supportsMusicStreaming]


_ICLLRadioSource : PBCodable <NSCopying>
  // instance methods
  -[_ICLLRadioSource .cxx_destruct]
  -[_ICLLRadioSource dictionaryRepresentation]
  -[_ICLLRadioSource writeTo:]
  -[_ICLLRadioSource isEqual:]
  -[_ICLLRadioSource readFrom:]
  -[_ICLLRadioSource copyWithZone:]


ICFlushPlayActivityEventsOperation : ICAsyncOperation
 @property  ICPlayActivityController *playActivityController

  // instance methods
  -[ICFlushPlayActivityEventsOperation .cxx_destruct]
  -[ICFlushPlayActivityEventsOperation init]
  -[ICFlushPlayActivityEventsOperation execute]
  -[ICFlushPlayActivityEventsOperation initWithPlayActivityController:]
  -[ICFlushPlayActivityEventsOperation playActivityController]


ICIAMTriggerCondition : PBCodable <NSCopying>
 @property  BOOL hasIdentifier
 @property  NSString *identifier
 @property  BOOL hasDataType
 @property  int dataType
 @property  BOOL hasComparisonType
 @property  int comparisonType
 @property  BOOL hasTriggerValue
 @property  NSString *triggerValue
 @property  BOOL hasTriggerConditionType
 @property  int triggerConditionType
 @property  BOOL hasKind
 @property  int kind
 @property  BOOL hasBundleIdentifier
 @property  NSString *bundleIdentifier

  // instance methods
  -[ICIAMTriggerCondition mergeFrom:]
  -[ICIAMTriggerCondition hasBundleIdentifier]
  -[ICIAMTriggerCondition bundleIdentifier]
  -[ICIAMTriggerCondition .cxx_destruct]
  -[ICIAMTriggerCondition StringAsDataType:]
  -[ICIAMTriggerCondition dictionaryRepresentation]
  -[ICIAMTriggerCondition StringAsTriggerConditionType:]
  -[ICIAMTriggerCondition setKind:]
  -[ICIAMTriggerCondition writeTo:]
  -[ICIAMTriggerCondition setBundleIdentifier:]
  -[ICIAMTriggerCondition setComparisonType:]
  -[ICIAMTriggerCondition StringAsKind:]
  -[ICIAMTriggerCondition dataType]
  -[ICIAMTriggerCondition isEqual:]
  -[ICIAMTriggerCondition copyTo:]
  -[ICIAMTriggerCondition setHasTriggerConditionType:]
  -[ICIAMTriggerCondition readFrom:]
  -[ICIAMTriggerCondition identifier]
  -[ICIAMTriggerCondition kindAsString:]
  -[ICIAMTriggerCondition setTriggerConditionType:]
  -[ICIAMTriggerCondition hasDataType]
  -[ICIAMTriggerCondition triggerConditionType]
  -[ICIAMTriggerCondition triggerConditionTypeAsString:]
  -[ICIAMTriggerCondition comparisonTypeAsString:]
  -[ICIAMTriggerCondition StringAsComparisonType:]
  -[ICIAMTriggerCondition hasKind]
  -[ICIAMTriggerCondition kind]
  -[ICIAMTriggerCondition hasComparisonType]
  -[ICIAMTriggerCondition setIdentifier:]
  -[ICIAMTriggerCondition setHasComparisonType:]
  -[ICIAMTriggerCondition triggerValue]
  -[ICIAMTriggerCondition setDataType:]
  -[ICIAMTriggerCondition hasIdentifier]
  -[ICIAMTriggerCondition copyWithZone:]
  -[ICIAMTriggerCondition setHasKind:]
  -[ICIAMTriggerCondition setHasDataType:]
  -[ICIAMTriggerCondition setTriggerValue:]
  -[ICIAMTriggerCondition hasTriggerValue]
  -[ICIAMTriggerCondition comparisonType]
  -[ICIAMTriggerCondition dataTypeAsString:]
  -[ICIAMTriggerCondition hasTriggerConditionType]


ICIAMImage : PBCodable <NSCopying>
 @property  BOOL hasIdentifier
 @property  NSString *identifier
 @property  BOOL hasURL
 @property  NSString *uRL
 @property  BOOL hasWidth
 @property  unsigned int width
 @property  BOOL hasHeight
 @property  unsigned int height

  // instance methods
  -[ICIAMImage width]
  -[ICIAMImage mergeFrom:]
  -[ICIAMImage setWidth:]
  -[ICIAMImage setURL:]
  -[ICIAMImage hasURL]
  -[ICIAMImage .cxx_destruct]
  -[ICIAMImage uRL]
  -[ICIAMImage dictionaryRepresentation]
  -[ICIAMImage writeTo:]
  -[ICIAMImage setHeight:]
  -[ICIAMImage height]
  -[ICIAMImage setHasHeight:]
  -[ICIAMImage isEqual:]
  -[ICIAMImage copyTo:]
  -[ICIAMImage readFrom:]
  -[ICIAMImage identifier]
  -[ICIAMImage hasHeight]
  -[ICIAMImage setIdentifier:]
  -[ICIAMImage hasWidth]
  -[ICIAMImage hasIdentifier]
  -[ICIAMImage copyWithZone:]
  -[ICIAMImage setHasWidth:]


ICInAppMessageMetadataEntry : NSObject <NSCopying, NSSecureCoding>
  // class methods
  +[ICInAppMessageMetadataEntry supportsSecureCoding]

  // instance methods
  -[ICInAppMessageMetadataEntry initWithCoder:]
  -[ICInAppMessageMetadataEntry .cxx_destruct]
  -[ICInAppMessageMetadataEntry init]
  -[ICInAppMessageMetadataEntry setMetadataValue:forKey:]
  -[ICInAppMessageMetadataEntry copyWithZone:]
  -[ICInAppMessageMetadataEntry encodeWithCoder:]
  -[ICInAppMessageMetadataEntry metadataValueForKey:]
  -[ICInAppMessageMetadataEntry allMetadataValues]


ICContentKeyStoreEntry : NSObject
 @property  NSString *identifier
 @property  NSData *keyData
 @property  NSDate *renewalDate
 @property  unsigned long failureCount

  // instance methods
  -[ICContentKeyStoreEntry setRenewalDate:]
  -[ICContentKeyStoreEntry initWithDictionaryRepresentation:]
  -[ICContentKeyStoreEntry initWithIdentifier:]
  -[ICContentKeyStoreEntry setKeyData:]
  -[ICContentKeyStoreEntry renewalDate]
  -[ICContentKeyStoreEntry .cxx_destruct]
  -[ICContentKeyStoreEntry keyData]
  -[ICContentKeyStoreEntry dictionaryRepresentation]
  -[ICContentKeyStoreEntry failureCount]
  -[ICContentKeyStoreEntry setFailureCount:]
  -[ICContentKeyStoreEntry identifier]
  -[ICContentKeyStoreEntry setIdentifier:]


ICFileContentKeyStore : NSObject <ICContentKeyStoreProtocol>
  // instance methods
  -[ICFileContentKeyStore initWithPath:]
  -[ICFileContentKeyStore .cxx_destruct]
  -[ICFileContentKeyStore removeAllKeys]
  -[ICFileContentKeyStore enumerateKeysUsingBlock:]
  -[ICFileContentKeyStore _keyEntryForIdentifier:error:]
  -[ICFileContentKeyStore _saveKeyEntry:]
  -[ICFileContentKeyStore _filePathForKeyIdentifier:]
  -[ICFileContentKeyStore containsKeyForIdentifier:error:]
  -[ICFileContentKeyStore loadKeyForIdentifier:renewalDate:error:]
  -[ICFileContentKeyStore saveKey:forIdentifier:withRenewalDate:]
  -[ICFileContentKeyStore incrementFailureCountForKeyWithIdentifier:]
  -[ICFileContentKeyStore removeKeyForIdentifier:]


ICMemoryContentKeyStore : NSObject <ICContentKeyStoreProtocol>
  // instance methods
  -[ICMemoryContentKeyStore .cxx_destruct]
  -[ICMemoryContentKeyStore init]
  -[ICMemoryContentKeyStore removeAllKeys]
  -[ICMemoryContentKeyStore enumerateKeysUsingBlock:]
  -[ICMemoryContentKeyStore containsKeyForIdentifier:error:]
  -[ICMemoryContentKeyStore loadKeyForIdentifier:renewalDate:error:]
  -[ICMemoryContentKeyStore saveKey:forIdentifier:withRenewalDate:]
  -[ICMemoryContentKeyStore incrementFailureCountForKeyWithIdentifier:]
  -[ICMemoryContentKeyStore removeKeyForIdentifier:]


ICMachineDataSyncOperation : ICMachineDataOperation
  // instance methods
  -[ICMachineDataSyncOperation execute]
  -[ICMachineDataSyncOperation _finishWithSyncState:error:]


ICURLBagRadioConfiguration : NSObject
 @property  NSURL *baseURL
 @property  long long getTracksDPInfoKBSyncCount
 @property  long long maxSupportedProtocolVersion
 @property  BOOL continueListeningAvailable
 @property  long long continueListeningMaxQueueSizeInRequest
 @property  long long continueListeningMaxUpcomingTracksSizeToMaintain
 @property  long long continueListeningLoadStationThreshold

  // instance methods
  -[ICURLBagRadioConfiguration .cxx_destruct]
  -[ICURLBagRadioConfiguration baseURL]
  -[ICURLBagRadioConfiguration urlForBagRadioKey:]
  -[ICURLBagRadioConfiguration initWithBagRadioDictionary:]
  -[ICURLBagRadioConfiguration getTracksDPInfoKBSyncCount]
  -[ICURLBagRadioConfiguration maxSupportedProtocolVersion]
  -[ICURLBagRadioConfiguration isContinueListeningAvailable]
  -[ICURLBagRadioConfiguration continueListeningMaxQueueSizeInRequest]
  -[ICURLBagRadioConfiguration continueListeningMaxUpcomingTracksSizeToMaintain]
  -[ICURLBagRadioConfiguration continueListeningLoadStationThreshold]
  -[ICURLBagRadioConfiguration shouldIncludeHTTPHeaderField:forRequestURL:]


ICAgeVerifier : NSObject <NSCopying>
 @property  long long status
 @property  BOOL explicitContentAllowed
 @property  NSDate *verificationExpirationDate

  // instance methods
  -[ICAgeVerifier .cxx_destruct]
  -[ICAgeVerifier isEqual:]
  -[ICAgeVerifier isExplicitContentAllowed]
  -[ICAgeVerifier initWithExpirationDate:]
  -[ICAgeVerifier status]
  -[ICAgeVerifier setStatus:]
  -[ICAgeVerifier copyWithZone:]
  -[ICAgeVerifier verificationExpirationDate]
  -[ICAgeVerifier runAgeVerification]


ICSQLiteConnectionOptions : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *databasePath
 @property  long long cacheSize
 @property  BOOL readOnly

  // class methods
  +[ICSQLiteConnectionOptions supportsSecureCoding]

  // instance methods
  -[ICSQLiteConnectionOptions cacheSize]
  -[ICSQLiteConnectionOptions setCacheSize:]
  -[ICSQLiteConnectionOptions databasePath]
  -[ICSQLiteConnectionOptions initWithCoder:]
  -[ICSQLiteConnectionOptions .cxx_destruct]
  -[ICSQLiteConnectionOptions setReadOnly:]
  -[ICSQLiteConnectionOptions setDatabasePath:]
  -[ICSQLiteConnectionOptions isReadOnly]
  -[ICSQLiteConnectionOptions initWithDatabasePath:]
  -[ICSQLiteConnectionOptions copyWithZone:]
  -[ICSQLiteConnectionOptions setCacheSizeWithNumberOfKilobytes:]
  -[ICSQLiteConnectionOptions applyToDatabase:]
  -[ICSQLiteConnectionOptions setCacheSizeWithNumberOfDatabasePages:]
  -[ICSQLiteConnectionOptions encodeWithCoder:]


ICRadioFetchMetadataResponse : ICRadioResponse
 @property  NSArray *allStorePlatformMetadata

  // instance methods
  -[ICRadioFetchMetadataResponse _storePlatformMetadataDictionaryFromRadioMetadataDictionary:]
  -[ICRadioFetchMetadataResponse allStorePlatformMetadata]
  -[ICRadioFetchMetadataResponse storePlatformMetadataForStoreAdamID:]


ICPlayActivityDebugLogOperation : NSOperation
 @property  NSArray *playActivityEvents

  // instance methods
  -[ICPlayActivityDebugLogOperation playActivityEvents]
  -[ICPlayActivityDebugLogOperation setPlayActivityEvents:]
  -[ICPlayActivityDebugLogOperation main]
  -[ICPlayActivityDebugLogOperation .cxx_destruct]


ICURLRequest : NSObject <NSProgressReporting>
 @property  NSURLRequest *urlRequest
 @property  NSURLSessionTask *task
 @property  long long type
 @property  NSObject<OS_dispatch_semaphore> *waitSemaphore
 @property  NSURLRequest *currentURLRequest
 @property  NSURLResponse *urlResponse
 @property  NSMutableData *responseData
 @property  NSURL *responseDataURL
 @property  NSError *error
 @property  NSDictionary *avDownloadOptions
 @property  AVURLAsset *avURLAsset
 @property  long long handlingType
 @property  NSString *retryReason
 @property  unsigned long retryCount
 @property  double startTime
 @property  double lastUpdateTime
 @property  double lastProgressUpdateTime
 @property  ICURLPerformanceMetrics *performanceMetrics
 @property  @? completionHandler
 @property  NSProgress *progress
 @property  BOOL prioritize
 @property  BOOL cancelOnHTTPErrors
 @property  unsigned long maxRetryCount
 @property  ICRequestContext *requestContext
 @property  unsigned long redirectCount
 @property  double retryDelay
 @property  long long requestState
 @property  NSData *resumeData
 @property  ICURLResponseHandler *responseHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ICURLRequest _defaultMaxRetryCountForReason:]
  +[ICURLRequest _responseClass]
  +[ICURLRequest _responseHandlerClass]
  +[ICURLRequest _nameForRequestType:]

  // instance methods
  -[ICURLRequest retryDelay]
  -[ICURLRequest maxRetryCount]
  -[ICURLRequest setMaxRetryCount:]
  -[ICURLRequest resumeData]
  -[ICURLRequest urlRequest]
  -[ICURLRequest initWithURLRequest:requestContext:resumeData:]
  -[ICURLRequest setRetryDelay:]
  -[ICURLRequest setStartTime:]
  -[ICURLRequest setType:]
  -[ICURLRequest setRequestState:]
  -[ICURLRequest setAVURLAsset:]
  -[ICURLRequest .cxx_destruct]
  -[ICURLRequest responseHandler]
  -[ICURLRequest prioritize]
  -[ICURLRequest progress]
  -[ICURLRequest setPerformanceMetrics:]
  -[ICURLRequest setResponseHandler:]
  -[ICURLRequest lastUpdateTime]
  -[ICURLRequest updateState:]
  -[ICURLRequest buildURLRequestWithCompletionHandler:]
  -[ICURLRequest redirectCount]
  -[ICURLRequest startTime]
  -[ICURLRequest setCompletionHandler:]
  -[ICURLRequest addObserver:]
  -[ICURLRequest setTask:]
  -[ICURLRequest urlResponse]
  -[ICURLRequest performanceMetrics]
  -[ICURLRequest setRedirectCount:]
  -[ICURLRequest responseData]
  -[ICURLRequest requestState]
  -[ICURLRequest initWithURLRequest:requestContext:]
  -[ICURLRequest task]
  -[ICURLRequest setResponseData:]
  -[ICURLRequest type]
  -[ICURLRequest requestContext]
  -[ICURLRequest setLastUpdateTime:]
  -[ICURLRequest setProgress:]
  -[ICURLRequest dealloc]
  -[ICURLRequest initWithURL:requestContext:]
  -[ICURLRequest retryCount]
  -[ICURLRequest completionHandler]
  -[ICURLRequest removeObserver:]
  -[ICURLRequest setError:]
  -[ICURLRequest error]
  -[ICURLRequest setPrioritize:]
  -[ICURLRequest initWithURL:requestContext:resumeData:]
  -[ICURLRequest setResponseDataURL:]
  -[ICURLRequest setHandlingType:]
  -[ICURLRequest setRetryReason:]
  -[ICURLRequest setUrlResponse:]
  -[ICURLRequest currentURLRequest]
  -[ICURLRequest setCurrentURLRequest:]
  -[ICURLRequest responseDataURL]
  -[ICURLRequest _retryCountForReason:]
  -[ICURLRequest _maxRetryCountForReason:]
  -[ICURLRequest _incrementRetryCountForReason:]
  -[ICURLRequest lastProgressUpdateTime]
  -[ICURLRequest setLastProgressUpdateTime:]
  -[ICURLRequest setCancelOnHTTPErrors:]
  -[ICURLRequest _setMaxRetryCount:forReason:]
  -[ICURLRequest _updateSignpostsForNewState:]
  -[ICURLRequest _ensureValidRetryReason:]
  -[ICURLRequest _signpostRequestInfo]
  -[ICURLRequest cancelOnHTTPErrors]
  -[ICURLRequest waitSemaphore]
  -[ICURLRequest setWaitSemaphore:]
  -[ICURLRequest avDownloadOptions]
  -[ICURLRequest setAVDownloadOptions:]
  -[ICURLRequest avURLAsset]
  -[ICURLRequest handlingType]
  -[ICURLRequest retryReason]


ICPBDGSFinishDelegationRequest : PBRequest <NSCopying>
  // instance methods
  -[ICPBDGSFinishDelegationRequest .cxx_destruct]
  -[ICPBDGSFinishDelegationRequest dictionaryRepresentation]
  -[ICPBDGSFinishDelegationRequest writeTo:]
  -[ICPBDGSFinishDelegationRequest isEqual:]
  -[ICPBDGSFinishDelegationRequest readFrom:]
  -[ICPBDGSFinishDelegationRequest copyWithZone:]


ICIAMMessagePresentationTrigger : PBCodable <NSCopying>
 @property  BOOL hasTriggerName
 @property  NSString *triggerName
 @property  BOOL hasKind
 @property  int kind
 @property  BOOL hasBundleIdentifier
 @property  NSString *bundleIdentifier

  // instance methods
  -[ICIAMMessagePresentationTrigger mergeFrom:]
  -[ICIAMMessagePresentationTrigger hasBundleIdentifier]
  -[ICIAMMessagePresentationTrigger bundleIdentifier]
  -[ICIAMMessagePresentationTrigger .cxx_destruct]
  -[ICIAMMessagePresentationTrigger dictionaryRepresentation]
  -[ICIAMMessagePresentationTrigger setKind:]
  -[ICIAMMessagePresentationTrigger writeTo:]
  -[ICIAMMessagePresentationTrigger setBundleIdentifier:]
  -[ICIAMMessagePresentationTrigger StringAsKind:]
  -[ICIAMMessagePresentationTrigger isEqual:]
  -[ICIAMMessagePresentationTrigger copyTo:]
  -[ICIAMMessagePresentationTrigger setTriggerName:]
  -[ICIAMMessagePresentationTrigger readFrom:]
  -[ICIAMMessagePresentationTrigger kindAsString:]
  -[ICIAMMessagePresentationTrigger hasKind]
  -[ICIAMMessagePresentationTrigger kind]
  -[ICIAMMessagePresentationTrigger hasTriggerName]
  -[ICIAMMessagePresentationTrigger copyWithZone:]
  -[ICIAMMessagePresentationTrigger setHasKind:]
  -[ICIAMMessagePresentationTrigger triggerName]


ICCloudItemIDList : NSObject <NSSecureCoding, NSCopying>
 @property  unsigned long count

  // class methods
  +[ICCloudItemIDList supportsSecureCoding]

  // instance methods
  -[ICCloudItemIDList initWithCoder:]
  -[ICCloudItemIDList insertCloudItemID:idType:atIndex:]
  -[ICCloudItemIDList addCloudItemID:idType:]
  -[ICCloudItemIDList .cxx_destruct]
  -[ICCloudItemIDList count]
  -[ICCloudItemIDList init]
  -[ICCloudItemIDList copyWithZone:]
  -[ICCloudItemIDList encodeWithCoder:]
  -[ICCloudItemIDList enumerateCloudItemIDsUsingBlock:]


ICUserIdentityStoreTestingBackend : NSObject <ICUserIdentityStoreBackend>
 @property  <ICUserIdentityStoreBackendDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ICUserIdentityStoreTestingBackend defaultStorefrontIdentifier]
  +[ICUserIdentityStoreTestingBackend supportsSecureCoding]
  +[ICUserIdentityStoreTestingBackend setDefaultActiveLockerAccountDSID:]
  +[ICUserIdentityStoreTestingBackend defaultActiveLockerAccountDSID]
  +[ICUserIdentityStoreTestingBackend setDefaultActiveAccountDSID:]
  +[ICUserIdentityStoreTestingBackend setDefaultStorefrontIdentifier:]
  +[ICUserIdentityStoreTestingBackend defaultActiveAccountDSID]

  // instance methods
  -[ICUserIdentityStoreTestingBackend initWithCoder:]
  -[ICUserIdentityStoreTestingBackend localStoreAccountPropertiesWithError:]
  -[ICUserIdentityStoreTestingBackend identityPropertiesForPrimaryICloudAccountWithError:]
  -[ICUserIdentityStoreTestingBackend allManageableStoreAccountDSIDsWithError:]
  -[ICUserIdentityStoreTestingBackend .cxx_destruct]
  -[ICUserIdentityStoreTestingBackend synchronize]
  -[ICUserIdentityStoreTestingBackend setDelegate:]
  -[ICUserIdentityStoreTestingBackend init]
  -[ICUserIdentityStoreTestingBackend removeIdentityForDSID:completion:]
  -[ICUserIdentityStoreTestingBackend replaceIdentityProperties:forDSID:error:]
  -[ICUserIdentityStoreTestingBackend verificationContextForAccountEstablishmentWithError:]
  -[ICUserIdentityStoreTestingBackend setLocalStoreAccountProperties:error:]
  -[ICUserIdentityStoreTestingBackend identityPropertiesForDSID:error:]
  -[ICUserIdentityStoreTestingBackend activeLockerAccountDSIDWithError:]
  -[ICUserIdentityStoreTestingBackend delegate]
  -[ICUserIdentityStoreTestingBackend updateActiveLockerAccountDSID:error:]
  -[ICUserIdentityStoreTestingBackend updateActiveAccountDSID:error:]
  -[ICUserIdentityStoreTestingBackend activeAccountDSIDWithError:]
  -[ICUserIdentityStoreTestingBackend verificationContextForDSID:error:]
  -[ICUserIdentityStoreTestingBackend allStoreAccountDSIDsWithError:]
  -[ICUserIdentityStoreTestingBackend copyWithZone:]
  -[ICUserIdentityStoreTestingBackend setIdentityProperties:forDSID:error:]
  -[ICUserIdentityStoreTestingBackend encodeWithCoder:]
  -[ICUserIdentityStoreTestingBackend _propertiesToSaveForProperties:]


ICMusicAccountNotificationsSettingsRequestOperation : ICRequestOperation
  // instance methods
  -[ICMusicAccountNotificationsSettingsRequestOperation .cxx_destruct]
  -[ICMusicAccountNotificationsSettingsRequestOperation performRequestWithResponseHandler:]
  -[ICMusicAccountNotificationsSettingsRequestOperation execute]
  -[ICMusicAccountNotificationsSettingsRequestOperation cancel]
  -[ICMusicAccountNotificationsSettingsRequestOperation initWithRequestContext:withRequestMethod:]
  -[ICMusicAccountNotificationsSettingsRequestOperation initWithRequestContext:withRequestMethod:andBodyDictionary:]


ICIAMMetricEvent : PBCodable <NSCopying>
 @property  BOOL hasPageId
 @property  NSString *pageId
 @property  BOOL hasPageType
 @property  int pageType
 @property  NSMutableArray *pageDetails
 @property  BOOL hasTargetId
 @property  NSString *targetId
 @property  BOOL hasTargetType
 @property  int targetType
 @property  BOOL hasActionType
 @property  int actionType
 @property  BOOL hasActionURL
 @property  NSString *actionURL
 @property  NSMutableArray *actionDetails
 @property  BOOL hasEventType
 @property  NSString *eventType
 @property  BOOL hasPageUrl
 @property  NSString *pageUrl
 @property  BOOL hasImpressionType
 @property  NSString *impressionType
 @property  BOOL hasImpression
 @property  ICIAMImpressionNode *impression

  // class methods
  +[ICIAMMetricEvent actionDetailsType]
  +[ICIAMMetricEvent pageDetailsType]

  // instance methods
  -[ICIAMMetricEvent hasEventType]
  -[ICIAMMetricEvent mergeFrom:]
  -[ICIAMMetricEvent setActionType:]
  -[ICIAMMetricEvent setHasActionType:]
  -[ICIAMMetricEvent setTargetType:]
  -[ICIAMMetricEvent .cxx_destruct]
  -[ICIAMMetricEvent pageId]
  -[ICIAMMetricEvent dictionaryRepresentation]
  -[ICIAMMetricEvent hasImpressionType]
  -[ICIAMMetricEvent actionTypeAsString:]
  -[ICIAMMetricEvent StringAsActionType:]
  -[ICIAMMetricEvent writeTo:]
  -[ICIAMMetricEvent setImpressionType:]
  -[ICIAMMetricEvent impressionType]
  -[ICIAMMetricEvent targetType]
  -[ICIAMMetricEvent isEqual:]
  -[ICIAMMetricEvent pageUrl]
  -[ICIAMMetricEvent copyTo:]
  -[ICIAMMetricEvent targetId]
  -[ICIAMMetricEvent readFrom:]
  -[ICIAMMetricEvent actionType]
  -[ICIAMMetricEvent pageType]
  -[ICIAMMetricEvent hasActionType]
  -[ICIAMMetricEvent eventType]
  -[ICIAMMetricEvent actionURL]
  -[ICIAMMetricEvent copyWithZone:]
  -[ICIAMMetricEvent setPageType:]
  -[ICIAMMetricEvent setTargetId:]
  -[ICIAMMetricEvent hasTargetId]
  -[ICIAMMetricEvent hasPageId]
  -[ICIAMMetricEvent setEventType:]
  -[ICIAMMetricEvent actionDetails]
  -[ICIAMMetricEvent setActionDetails:]
  -[ICIAMMetricEvent setActionURL:]
  -[ICIAMMetricEvent addPageDetails:]
  -[ICIAMMetricEvent addActionDetails:]
  -[ICIAMMetricEvent setPageId:]
  -[ICIAMMetricEvent pageDetailsCount]
  -[ICIAMMetricEvent clearPageDetails]
  -[ICIAMMetricEvent pageDetailsAtIndex:]
  -[ICIAMMetricEvent actionDetailsCount]
  -[ICIAMMetricEvent clearActionDetails]
  -[ICIAMMetricEvent actionDetailsAtIndex:]
  -[ICIAMMetricEvent setPageUrl:]
  -[ICIAMMetricEvent setImpression:]
  -[ICIAMMetricEvent setHasPageType:]
  -[ICIAMMetricEvent hasPageType]
  -[ICIAMMetricEvent pageTypeAsString:]
  -[ICIAMMetricEvent StringAsPageType:]
  -[ICIAMMetricEvent setHasTargetType:]
  -[ICIAMMetricEvent hasTargetType]
  -[ICIAMMetricEvent targetTypeAsString:]
  -[ICIAMMetricEvent StringAsTargetType:]
  -[ICIAMMetricEvent hasActionURL]
  -[ICIAMMetricEvent hasPageUrl]
  -[ICIAMMetricEvent hasImpression]
  -[ICIAMMetricEvent pageDetails]
  -[ICIAMMetricEvent setPageDetails:]
  -[ICIAMMetricEvent impression]


ICMusicRestoreRequestParameters : NSObject
 @property  NSNumber *adamID
 @property  NSNumber *accountID
 @property  NSNumber *matchStatus
 @property  NSString *title
 @property  NSString *storeFrontID
 @property  NSString *mediaKind
 @property  NSString *flavor

  // instance methods
  -[ICMusicRestoreRequestParameters adamID]
  -[ICMusicRestoreRequestParameters mediaKind]
  -[ICMusicRestoreRequestParameters accountID]
  -[ICMusicRestoreRequestParameters .cxx_destruct]
  -[ICMusicRestoreRequestParameters title]
  -[ICMusicRestoreRequestParameters flavor]
  -[ICMusicRestoreRequestParameters storeFrontID]
  -[ICMusicRestoreRequestParameters matchStatus]
  -[ICMusicRestoreRequestParameters initWithItemID:title:storeFrontID:mediaKind:accountID:matchStatus:flavor:]


ICDelegationConsumerService : NSObject
  // instance methods
  -[ICDelegationConsumerService .cxx_destruct]
  -[ICDelegationConsumerService init]
  -[ICDelegationConsumerService performRequest:withResponseHandler:]


ICDelegationConsumerServiceRequest : NSObject
 @property  ICRequestContext *requestContext
 @property  double timeoutInterval
 @property  NSDictionary *userIdentityDelegationAccountUUIDs

  // instance methods
  -[ICDelegationConsumerServiceRequest .cxx_destruct]
  -[ICDelegationConsumerServiceRequest timeoutInterval]
  -[ICDelegationConsumerServiceRequest requestContext]
  -[ICDelegationConsumerServiceRequest userIdentityDelegationAccountUUIDs]
  -[ICDelegationConsumerServiceRequest initWithUserIdentityDelegationAccountUUIDs:requestContext:timeoutInterval:]


ICRadioLibraryAlbumContentReference : ICRadioContentReference <NSCopying, NSSecureCoding>
 @property  NSString *albumName
 @property  NSNumber *representativeCloudIdentifier
 @property  NSNumber *storeIdentifier

  // class methods
  +[ICRadioLibraryAlbumContentReference supportsSecureCoding]

  // instance methods
  -[ICRadioLibraryAlbumContentReference albumName]
  -[ICRadioLibraryAlbumContentReference setAlbumName:]
  -[ICRadioLibraryAlbumContentReference initWithCoder:]
  -[ICRadioLibraryAlbumContentReference .cxx_destruct]
  -[ICRadioLibraryAlbumContentReference setStoreIdentifier:]
  -[ICRadioLibraryAlbumContentReference contentType]
  -[ICRadioLibraryAlbumContentReference storeIdentifier]
  -[ICRadioLibraryAlbumContentReference copyWithZone:]
  -[ICRadioLibraryAlbumContentReference encodeWithCoder:]
  -[ICRadioLibraryAlbumContentReference rawContentDictionaryWithSubscriptionStatus:]
  -[ICRadioLibraryAlbumContentReference matchDictionaryWithSubscriptionStatus:]
  -[ICRadioLibraryAlbumContentReference representativeCloudIdentifier]
  -[ICRadioLibraryAlbumContentReference setRepresentativeCloudIdentifier:]


_ICLLMoveQueueItemAction : PBCodable <NSCopying>
  // instance methods
  -[_ICLLMoveQueueItemAction .cxx_destruct]
  -[_ICLLMoveQueueItemAction dictionaryRepresentation]
  -[_ICLLMoveQueueItemAction writeTo:]
  -[_ICLLMoveQueueItemAction isEqual:]
  -[_ICLLMoveQueueItemAction readFrom:]
  -[_ICLLMoveQueueItemAction copyWithZone:]


ICRadioStationProviderResource : NSObject
 @property  NSURL *url
 @property  NSString *bundleIdentifier

  // instance methods
  -[ICRadioStationProviderResource bundleIdentifier]
  -[ICRadioStationProviderResource url]
  -[ICRadioStationProviderResource .cxx_destruct]
  -[ICRadioStationProviderResource initWithRadioStationProviderResourceDictionary:]


ICAgeVerificationState : NSObject <NSCopying>
 @property  ICAgeVerifier *ageVerifier
 @property  BOOL dynamic
 @property  long long treatment
 @property  long long status
 @property  NSURL *verificationURL
 @property  BOOL explicitContentAllowed
 @property  NSError *error
 @property  ICUserIdentity *userIdentity

  // class methods
  +[ICAgeVerificationState ageVerificationStateNotRequiredForUserIdentity:withError:]
  +[ICAgeVerificationState ageVerificationStateNotRequiredForUserIdentity:withTreatment:verificationURL:]
  +[ICAgeVerificationState ageVerificationStateNotRequiredForUserIdentity:]
  +[ICAgeVerificationState cachedStateForDSID:]
  +[ICAgeVerificationState ageVerificationStateNotRequiredForUserIdentity:withTreatment:]
  +[ICAgeVerificationState _stateFromDictionaryRepresentation:DSID:]

  // instance methods
  -[ICAgeVerificationState isDynamic]
  -[ICAgeVerificationState userIdentity]
  -[ICAgeVerificationState treatment]
  -[ICAgeVerificationState verificationURL]
  -[ICAgeVerificationState .cxx_destruct]
  -[ICAgeVerificationState initWithUserIdentity:ageVerifier:treatment:verificationURL:]
  -[ICAgeVerificationState ageVerifier]
  -[ICAgeVerificationState isEqual:]
  -[ICAgeVerificationState isExplicitContentAllowed]
  -[ICAgeVerificationState status]
  -[ICAgeVerificationState saveToUserDefaults]
  -[ICAgeVerificationState _initWithUserIdentity:status:treatment:verificationURL:error:]
  -[ICAgeVerificationState copyWithZone:]
  -[ICAgeVerificationState error]
  -[ICAgeVerificationState _dictionaryRepresentationWithDSID:]


ICMusicSubscriptionCarrierBundlingEligibilityOperation : ICAsyncOperation
 @property  ICStoreRequestContext *requestContext
 @property  BOOL deepLink
 @property  @? responseHandler

  // instance methods
  -[ICMusicSubscriptionCarrierBundlingEligibilityOperation .cxx_destruct]
  -[ICMusicSubscriptionCarrierBundlingEligibilityOperation responseHandler]
  -[ICMusicSubscriptionCarrierBundlingEligibilityOperation initWithRequestContext:]
  -[ICMusicSubscriptionCarrierBundlingEligibilityOperation setResponseHandler:]
  -[ICMusicSubscriptionCarrierBundlingEligibilityOperation execute]
  -[ICMusicSubscriptionCarrierBundlingEligibilityOperation requestContext]
  -[ICMusicSubscriptionCarrierBundlingEligibilityOperation setDeepLink:]
  -[ICMusicSubscriptionCarrierBundlingEligibilityOperation _sendEnrichmentRequestWithURL:preflightResponse:completionHandler:]
  -[ICMusicSubscriptionCarrierBundlingEligibilityOperation _sendSilentSMSRequestWithMessage:number:preflightResponse:completionHandler:]
  -[ICMusicSubscriptionCarrierBundlingEligibilityOperation _sendPreflightRequestWithCompletionHandler:]
  -[ICMusicSubscriptionCarrierBundlingEligibilityOperation _finishEnrichmentWithBodyDictionary:completionHandler:]
  -[ICMusicSubscriptionCarrierBundlingEligibilityOperation _newDefaultRequestBodyDictionary]
  -[ICMusicSubscriptionCarrierBundlingEligibilityOperation _newDefaultRequestBodyDictionaryWithResponseCode:error:]
  -[ICMusicSubscriptionCarrierBundlingEligibilityOperation isDeepLink]


ICValueHistory : NSObject <NSCopying, NSSecureCoding>
 @property  long long count

  // class methods
  +[ICValueHistory supportsSecureCoding]

  // instance methods
  -[ICValueHistory lastValueAndTimestamp:]
  -[ICValueHistory initWithCoder:]
  -[ICValueHistory removeAllValues]
  -[ICValueHistory .cxx_destruct]
  -[ICValueHistory count]
  -[ICValueHistory isEqual:]
  -[ICValueHistory enumerateValuesUsingBlock:]
  -[ICValueHistory lastValue]
  -[ICValueHistory firstValueBeforeTimestamp:]
  -[ICValueHistory removeValuesBeforeTimestamp:]
  -[ICValueHistory addValuesFromHistory:]
  -[ICValueHistory firstValueBeforeOrEqualToTimestamp:]
  -[ICValueHistory addValue:timestamp:]
  -[ICValueHistory copyWithZone:]
  -[ICValueHistory firstValueAfterOrEqualToTimestamp:]
  -[ICValueHistory encodeWithCoder:]


_ICValueHistoryItem : NSObject <NSSecureCoding>
 @property  unsigned long timestamp
 @property  id value

  // class methods
  +[_ICValueHistoryItem supportsSecureCoding]

  // instance methods
  -[_ICValueHistoryItem initWithCoder:]
  -[_ICValueHistoryItem .cxx_destruct]
  -[_ICValueHistoryItem isEqual:]
  -[_ICValueHistoryItem value]
  -[_ICValueHistoryItem timestamp]
  -[_ICValueHistoryItem initWithValue:timestamp:]
  -[_ICValueHistoryItem encodeWithCoder:]


ICIAMLocalNotification : PBCodable <NSCopying>
 @property  BOOL hasTrigger
 @property  int trigger
 @property  BOOL hasDate
 @property  double date
 @property  BOOL hasInterval
 @property  double interval
 @property  BOOL hasNotification
 @property  NSString *notification

  // instance methods
  -[ICIAMLocalNotification hasDate]
  -[ICIAMLocalNotification setInterval:]
  -[ICIAMLocalNotification interval]
  -[ICIAMLocalNotification mergeFrom:]
  -[ICIAMLocalNotification notification]
  -[ICIAMLocalNotification hasNotification]
  -[ICIAMLocalNotification hasTrigger]
  -[ICIAMLocalNotification setHasDate:]
  -[ICIAMLocalNotification setHasTrigger:]
  -[ICIAMLocalNotification triggerAsString:]
  -[ICIAMLocalNotification StringAsTrigger:]
  -[ICIAMLocalNotification .cxx_destruct]
  -[ICIAMLocalNotification dictionaryRepresentation]
  -[ICIAMLocalNotification writeTo:]
  -[ICIAMLocalNotification setNotification:]
  -[ICIAMLocalNotification isEqual:]
  -[ICIAMLocalNotification copyTo:]
  -[ICIAMLocalNotification readFrom:]
  -[ICIAMLocalNotification setDate:]
  -[ICIAMLocalNotification copyWithZone:]
  -[ICIAMLocalNotification hasInterval]
  -[ICIAMLocalNotification setHasInterval:]
  -[ICIAMLocalNotification setTrigger:]
  -[ICIAMLocalNotification trigger]
  -[ICIAMLocalNotification date]


ICFPStreamContext : NSObject
 @property  unsigned long accountID
 @property  NSData *playerInfoContextRequestData

  // instance methods
  -[ICFPStreamContext accountID]
  -[ICFPStreamContext .cxx_destruct]
  -[ICFPStreamContext dealloc]
  -[ICFPStreamContext initWithVersion:contextID:contentInfo:returningError:]
  -[ICFPStreamContext getPlayerDelegateInfoDataUsingPlayerDelegateInfoResponseData:returningData:error:]
  -[ICFPStreamContext getStreamerInfoContextDataUsingPlayerInfoContextData:returningData:error:]
  -[ICFPStreamContext playerInfoContextRequestData]


ICStoreRadioStreamAssetInfo : NSObject
 @property  long long flavor
 @property  long long streamProtocol
 @property  NSURL *streamURL
 @property  NSURL *keyCertificateURL
 @property  NSURL *keyServerURL
 @property  BOOL iTunesStoreStream

  // instance methods
  -[ICStoreRadioStreamAssetInfo .cxx_destruct]
  -[ICStoreRadioStreamAssetInfo initWithItemResponseDictionary:]
  -[ICStoreRadioStreamAssetInfo streamURL]
  -[ICStoreRadioStreamAssetInfo flavor]
  -[ICStoreRadioStreamAssetInfo keyServerURL]
  -[ICStoreRadioStreamAssetInfo streamProtocol]
  -[ICStoreRadioStreamAssetInfo copyWithZone:]
  -[ICStoreRadioStreamAssetInfo keyCertificateURL]
  -[ICStoreRadioStreamAssetInfo isiTunesStoreStream]
  -[ICStoreRadioStreamAssetInfo ICStoreRadioStreamFlavorWithString:]
  -[ICStoreRadioStreamAssetInfo ICStoreRadioStreamProtocolWithString:]


ICStoreDialogResponseHandler : NSObject <NSCopying, NSSecureCoding>
  // class methods
  +[ICStoreDialogResponseHandler supportsSecureCoding]

  // instance methods
  -[ICStoreDialogResponseHandler initWithCoder:]
  -[ICStoreDialogResponseHandler handleButtonAction:usingRequestContext:withCompletionHandler:]
  -[ICStoreDialogResponseHandler init]
  -[ICStoreDialogResponseHandler handleStoreDialogResponse:usingRequestContext:withCompletionHandler:]
  -[ICStoreDialogResponseHandler isEqual:]
  -[ICStoreDialogResponseHandler _handleDefaultStoreDialogResponse:usingRequestContext:withDialogTimeout:withCompletionHandler:]
  -[ICStoreDialogResponseHandler initWithConfiguration:]
  -[ICStoreDialogResponseHandler _handleAuthenticationStoreDialogResponse:usingRequestContext:withDialogTimeout:withCompletionHandler:]
  -[ICStoreDialogResponseHandler handleStoreDialogResponse:usingRequestContext:withDialogTimeout:withCompletionHandler:]
  -[ICStoreDialogResponseHandler _handleFamilyPermissionButtonAction:usingRequestContext:completion:]
  -[ICStoreDialogResponseHandler copyWithZone:]
  -[ICStoreDialogResponseHandler _handleGotoButtonAction:usingRequestContext:withCompletionHandler:]
  -[ICStoreDialogResponseHandler _handleBuyButtonAction:usingRequestContext:withCompletionHandler:]
  -[ICStoreDialogResponseHandler encodeWithCoder:]


ICStoreDialogResponseHandlerConfiguration : NSObject <NSCopying, NSSecureCoding>
 @property  BOOL allowsHandlingNonAuthenticationDialogs
 @property  BOOL shouldRecordLastAuthenticationDialogResponseTime

  // class methods
  +[ICStoreDialogResponseHandlerConfiguration supportsSecureCoding]

  // instance methods
  -[ICStoreDialogResponseHandlerConfiguration initWithCoder:]
  -[ICStoreDialogResponseHandlerConfiguration setAllowsHandlingNonAuthenticationDialogs:]
  -[ICStoreDialogResponseHandlerConfiguration shouldRecordLastAuthenticationDialogResponseTime]
  -[ICStoreDialogResponseHandlerConfiguration allowsHandlingNonAuthenticationDialogs]
  -[ICStoreDialogResponseHandlerConfiguration init]
  -[ICStoreDialogResponseHandlerConfiguration isEqual:]
  -[ICStoreDialogResponseHandlerConfiguration copyWithZone:]
  -[ICStoreDialogResponseHandlerConfiguration setShouldRecordLastAuthenticationDialogResponseTime:]
  -[ICStoreDialogResponseHandlerConfiguration encodeWithCoder:]


ICPlayInfoResponse : NSObject
 @property  NSData *playInfoData

  // instance methods
  -[ICPlayInfoResponse initWithResponseDictionary:]
  -[ICPlayInfoResponse .cxx_destruct]
  -[ICPlayInfoResponse playInfoData]


ICLiveLinkIdentity : NSObject <_ICMutableLiveLinkIdentityPrivate, NSCopying, NSSecureCoding>
 @property  long long serverID
 @property  NSUUID *identifier
 @property  NSString *externalIdentifier
 @property  NSPersonNameComponents *nameComponents
 @property  NSURL *imageURL
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ICLiveLinkIdentity supportsSecureCoding]
  +[ICLiveLinkIdentity identityWithIdentifier:]

  // instance methods
  -[ICLiveLinkIdentity nameComponents]
  -[ICLiveLinkIdentity _initWithBlock:]
  -[ICLiveLinkIdentity setNameComponents:]
  -[ICLiveLinkIdentity initWithCoder:]
  -[ICLiveLinkIdentity imageURL]
  -[ICLiveLinkIdentity .cxx_destruct]
  -[ICLiveLinkIdentity setImageURL:]
  -[ICLiveLinkIdentity initWithBlock:]
  -[ICLiveLinkIdentity setExternalIdentifier:]
  -[ICLiveLinkIdentity isEqual:]
  -[ICLiveLinkIdentity identifier]
  -[ICLiveLinkIdentity serverID]
  -[ICLiveLinkIdentity externalIdentifier]
  -[ICLiveLinkIdentity setIdentifier:]
  -[ICLiveLinkIdentity copyWithZone:]
  -[ICLiveLinkIdentity encodeWithCoder:]
  -[ICLiveLinkIdentity setServerID:]


_ICLLQueryMessage : PBCodable <NSCopying>
  // instance methods
  -[_ICLLQueryMessage .cxx_destruct]
  -[_ICLLQueryMessage dictionaryRepresentation]
  -[_ICLLQueryMessage writeTo:]
  -[_ICLLQueryMessage isEqual:]
  -[_ICLLQueryMessage readFrom:]
  -[_ICLLQueryMessage copyWithZone:]


ICDeviceSetupStatusMonitor : NSObject <ICNanoPairedDeviceStatusObserver>
 @property  BOOL setupAssistantComplete
 @property  BOOL deviceSetupComplete
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ICDeviceSetupStatusMonitor sharedMonitor]

  // instance methods
  -[ICDeviceSetupStatusMonitor performBlockAfterDeviceSetup:]
  -[ICDeviceSetupStatusMonitor nanoPairedDeviceStatusMonitor:didChangeClientSyncState:]
  -[ICDeviceSetupStatusMonitor .cxx_destruct]
  -[ICDeviceSetupStatusMonitor performBlockAfterBuddySetup:]
  -[ICDeviceSetupStatusMonitor isSetupAssistantComplete]
  -[ICDeviceSetupStatusMonitor _init]
  -[ICDeviceSetupStatusMonitor _runAllPendingBlocksOfType:]
  -[ICDeviceSetupStatusMonitor isDeviceSetupComplete]
  -[ICDeviceSetupStatusMonitor dealloc]


ICMediaRedownloadResponse : NSObject <ICStoreResponseProtocol>
 @property  NSDictionary *responseDictionary
 @property  BOOL authorized
 @property  BOOL shouldCancelPurchaseBatch
 @property  ICStoreDialogResponse *dialog
 @property  long long status
 @property  unsigned int downloadQueueItemCount
 @property  NSString *jingleAction
 @property  NSArray *items
 @property  NSData *subscriptionKeyBagData
 @property  NSError *serverError
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ICMediaRedownloadResponse serverError]
  -[ICMediaRedownloadResponse responseDictionary]
  -[ICMediaRedownloadResponse dialog]
  -[ICMediaRedownloadResponse items]
  -[ICMediaRedownloadResponse .cxx_destruct]
  -[ICMediaRedownloadResponse subscriptionKeyBagData]
  -[ICMediaRedownloadResponse status]
  -[ICMediaRedownloadResponse authorized]
  -[ICMediaRedownloadResponse shouldCancelPurchaseBatch]
  -[ICMediaRedownloadResponse initWithResponseDictionary:requestDate:urlBag:]
  -[ICMediaRedownloadResponse downloadQueueItemCount]
  -[ICMediaRedownloadResponse jingleAction]


_ICLLParticipantChangeAction : PBCodable <NSCopying>
  // instance methods
  -[_ICLLParticipantChangeAction .cxx_destruct]
  -[_ICLLParticipantChangeAction dictionaryRepresentation]
  -[_ICLLParticipantChangeAction writeTo:]
  -[_ICLLParticipantChangeAction isEqual:]
  -[_ICLLParticipantChangeAction readFrom:]
  -[_ICLLParticipantChangeAction copyWithZone:]


ICIAMApplicationMessageSyncResponse : PBCodable <NSCopying>
 @property  BOOL hasBundleID
 @property  NSString *bundleID
 @property  NSMutableArray *syncCommands

  // class methods
  +[ICIAMApplicationMessageSyncResponse syncCommandsType]

  // instance methods
  -[ICIAMApplicationMessageSyncResponse bundleID]
  -[ICIAMApplicationMessageSyncResponse mergeFrom:]
  -[ICIAMApplicationMessageSyncResponse hasBundleID]
  -[ICIAMApplicationMessageSyncResponse .cxx_destruct]
  -[ICIAMApplicationMessageSyncResponse dictionaryRepresentation]
  -[ICIAMApplicationMessageSyncResponse writeTo:]
  -[ICIAMApplicationMessageSyncResponse isEqual:]
  -[ICIAMApplicationMessageSyncResponse copyTo:]
  -[ICIAMApplicationMessageSyncResponse readFrom:]
  -[ICIAMApplicationMessageSyncResponse setBundleID:]
  -[ICIAMApplicationMessageSyncResponse copyWithZone:]
  -[ICIAMApplicationMessageSyncResponse syncCommandsCount]
  -[ICIAMApplicationMessageSyncResponse syncCommandsAtIndex:]
  -[ICIAMApplicationMessageSyncResponse addSyncCommands:]
  -[ICIAMApplicationMessageSyncResponse clearSyncCommands]
  -[ICIAMApplicationMessageSyncResponse syncCommands]
  -[ICIAMApplicationMessageSyncResponse setSyncCommands:]


ICPAPlayModeDictionary : PBCodable <NSCopying>
  // instance methods
  -[ICPAPlayModeDictionary dictionaryRepresentation]
  -[ICPAPlayModeDictionary writeTo:]
  -[ICPAPlayModeDictionary isEqual:]
  -[ICPAPlayModeDictionary readFrom:]
  -[ICPAPlayModeDictionary copyWithZone:]


ICACAccountVerificationOperation : ICUserVerificationOperation <AMSAuthenticateTaskDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ICACAccountVerificationOperation authenticateTask:handleDialogRequest:completion:]
  -[ICACAccountVerificationOperation execute]
  -[ICACAccountVerificationOperation finishWithError:]


ICDispatchOnce : NSObject
  // instance methods
  -[ICDispatchOnce .cxx_destruct]
  -[ICDispatchOnce failWithError:]
  -[ICDispatchOnce _invalidate]
  -[ICDispatchOnce startWithTimeout:queue:]
  -[ICDispatchOnce initWithBooleanHandler:]
  -[ICDispatchOnce initWithObjectHandler:]
  -[ICDispatchOnce finishWithBooleanResult:error:]
  -[ICDispatchOnce finishWithObjectResult:error:]
  -[ICDispatchOnce startWithTimeout:]


ICRequestContext : NSObject <NSCopying, NSSecureCoding>
 @property  ICClientInfo *clientInfo
 @property  ICDeviceInfo *deviceInfo
 @property  NSString *userAgent
 @property  ICURLResponseAuthenticationProvider *authenticationProvider
 @property  ICNetworkConstraints *networkConstraints

  // class methods
  +[ICRequestContext supportsSecureCoding]

  // instance methods
  -[ICRequestContext deviceInfo]
  -[ICRequestContext initWithCoder:]
  -[ICRequestContext setDeviceInfo:]
  -[ICRequestContext setClientInfo:]
  -[ICRequestContext .cxx_destruct]
  -[ICRequestContext clientInfo]
  -[ICRequestContext userAgent]
  -[ICRequestContext networkConstraints]
  -[ICRequestContext setNetworkConstraints:]
  -[ICRequestContext initWithBlock:]
  -[ICRequestContext isEqual:]
  -[ICRequestContext setAuthenticationProvider:]
  -[ICRequestContext copyWithBlock:]
  -[ICRequestContext initWithClientInfo:]
  -[ICRequestContext copyWithZone:]
  -[ICRequestContext encodeWithCoder:]
  -[ICRequestContext _allowsMutation]
  -[ICRequestContext authenticationProvider]
  -[ICRequestContext initWithClientInfo:authenticationProvider:]


_ICLLCurrentItemChangeCommand : PBCodable <NSCopying>
  // instance methods
  -[_ICLLCurrentItemChangeCommand .cxx_destruct]
  -[_ICLLCurrentItemChangeCommand dictionaryRepresentation]
  -[_ICLLCurrentItemChangeCommand writeTo:]
  -[_ICLLCurrentItemChangeCommand isEqual:]
  -[_ICLLCurrentItemChangeCommand readFrom:]
  -[_ICLLCurrentItemChangeCommand copyWithZone:]


ICLiveLinkQRConnectionMessageCoder : MSVQRConnectionMessageCoder
  // instance methods
  -[ICLiveLinkQRConnectionMessageCoder messageFromData:]
  -[ICLiveLinkQRConnectionMessageCoder dataFromMessage:]
  -[ICLiveLinkQRConnectionMessageCoder traceIdentifierForMessage:]


ICInAppMessageConfiguration : NSObject
 @property  NSURL *reportEventURL
 @property  NSURL *serialCheckURL
 @property  NSURL *syncURL
 @property  NSURL *resourceDomainURL
 @property  long long syncPollingInterval

  // instance methods
  -[ICInAppMessageConfiguration reportEventURL]
  -[ICInAppMessageConfiguration serialCheckURL]
  -[ICInAppMessageConfiguration .cxx_destruct]
  -[ICInAppMessageConfiguration resourceDomainURL]
  -[ICInAppMessageConfiguration syncURL]
  -[ICInAppMessageConfiguration syncPollingInterval]
  -[ICInAppMessageConfiguration initWithDictionary:]


ICMusicAccountNotificationsSettingsManager : NSObject
  // class methods
  +[ICMusicAccountNotificationsSettingsManager sharedManager]

  // instance methods
  -[ICMusicAccountNotificationsSettingsManager storeRequestContext]
  -[ICMusicAccountNotificationsSettingsManager setCachedAccountNotificationsShowInLibraryEnabled:]
  -[ICMusicAccountNotificationsSettingsManager cachedAccountNotificationsShowInLibrarySwitch]
  -[ICMusicAccountNotificationsSettingsManager setAccountNotificationsArtistContentFeature:withCompletionHandler:]
  -[ICMusicAccountNotificationsSettingsManager _getSwitchesDependingOnSubscriptionStatus:withResponse:togglingSwitchesToValue:]
  -[ICMusicAccountNotificationsSettingsManager getAccountNotificationsWithCompletionHandler:]


ICRadioStationTrack : NSObject
 @property  long long storeAdamID
 @property  ICStorePlatformMetadata *storePlatformMetadata
 @property  NSDictionary *serverTrackInfo
 @property  NSArray *fileAssets
 @property  ICStoreHLSAssetInfo *hlsAsset
 @property  NSArray *radioStreamAssets
 @property  long long likeState
 @property  BOOL skippable
 @property  long long trackType
 @property  BOOL hasStartTime
 @property  double startTime
 @property  NSDate *expirationDate
 @property  ICRadioStationTrack *beforePromoContentTrack
 @property  ICRadioStationTrack *afterPromoContentTrack
 @property  ICRadioStationTrack *parentTrack
 @property  NSString *playbackAuthorizationToken

  // class methods
  +[ICRadioStationTrack flattenedTracksWithTracks:]

  // instance methods
  -[ICRadioStationTrack hasStartTime]
  -[ICRadioStationTrack trackType]
  -[ICRadioStationTrack .cxx_destruct]
  -[ICRadioStationTrack playbackAuthorizationToken]
  -[ICRadioStationTrack startTime]
  -[ICRadioStationTrack hlsAsset]
  -[ICRadioStationTrack storeAdamID]
  -[ICRadioStationTrack fileAssets]
  -[ICRadioStationTrack expirationDate]
  -[ICRadioStationTrack likeState]
  -[ICRadioStationTrack beforePromoContentTrack]
  -[ICRadioStationTrack afterPromoContentTrack]
  -[ICRadioStationTrack initWithResponseDictionary:responseVersion:expirationDate:]
  -[ICRadioStationTrack _hlsAssetFromAssetDictionary:]
  -[ICRadioStationTrack radioStreamAssets]
  -[ICRadioStationTrack isSkippable]
  -[ICRadioStationTrack serverTrackInfo]
  -[ICRadioStationTrack storePlatformMetadata]
  -[ICRadioStationTrack parentTrack]


ICDelegationServiceConnection : NSObject <ICDelegationServicePairingSessionDelegate, MSVMessageParserDelegate>
 @property  <ICDelegationServiceConnectionDelegate> *delegate
 @property  long long connectionRole
 @property  ICDelegationServiceSecuritySettings *securitySettings
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ICDelegationServiceConnection openWithCompletionHandler:]
  -[ICDelegationServiceConnection .cxx_destruct]
  -[ICDelegationServiceConnection setDelegate:]
  -[ICDelegationServiceConnection parser:didParseMessage:]
  -[ICDelegationServiceConnection delegate]
  -[ICDelegationServiceConnection close]
  -[ICDelegationServiceConnection dealloc]
  -[ICDelegationServiceConnection sendRequest:withResponseHandler:]
  -[ICDelegationServiceConnection securitySettings]
  -[ICDelegationServiceConnection _streamEncounteredError:]
  -[ICDelegationServiceConnection _streamDidClose]
  -[ICDelegationServiceConnection _streamDidParseMessage:]
  -[ICDelegationServiceConnection _sendRequest:withResponseHandler:]
  -[ICDelegationServiceConnection _sendResponse:forRequest:withCompletionHandler:]
  -[ICDelegationServiceConnection _nextRequestUniqueID]
  -[ICDelegationServiceConnection _sendMessage:withCompletionHandler:]
  -[ICDelegationServiceConnection _finishPendingRequestsWithError:]
  -[ICDelegationServiceConnection delegationServicePairingSession:sendData:withCompletionHandler:]
  -[ICDelegationServiceConnection initWithConnectionRole:inputStream:outputStream:securitySettings:]
  -[ICDelegationServiceConnection sendResponse:forRequest:withCompletionHandler:]
  -[ICDelegationServiceConnection connectionRole]


_ICDelegationServiceConnectionPendingRequestContext : NSObject
 @property  ICPBDGSRequest *request
 @property  @? responseHandler

  // instance methods
  -[_ICDelegationServiceConnectionPendingRequestContext .cxx_destruct]
  -[_ICDelegationServiceConnectionPendingRequestContext initWithRequest:responseHandler:]
  -[_ICDelegationServiceConnectionPendingRequestContext responseHandler]
  -[_ICDelegationServiceConnectionPendingRequestContext request]


_ICLLParticipantQuery : PBCodable <NSCopying>
  // instance methods
  -[_ICLLParticipantQuery .cxx_destruct]
  -[_ICLLParticipantQuery dictionaryRepresentation]
  -[_ICLLParticipantQuery writeTo:]
  -[_ICLLParticipantQuery isEqual:]
  -[_ICLLParticipantQuery readFrom:]
  -[_ICLLParticipantQuery copyWithZone:]


ICCloudContentTastePBFusePreferences : PBCodable <NSCopying>
 @property  NSMutableArray *preferences

  // class methods
  +[ICCloudContentTastePBFusePreferences preferencesType]

  // instance methods
  -[ICCloudContentTastePBFusePreferences mergeFrom:]
  -[ICCloudContentTastePBFusePreferences setPreferences:]
  -[ICCloudContentTastePBFusePreferences preferences]
  -[ICCloudContentTastePBFusePreferences .cxx_destruct]
  -[ICCloudContentTastePBFusePreferences dictionaryRepresentation]
  -[ICCloudContentTastePBFusePreferences writeTo:]
  -[ICCloudContentTastePBFusePreferences isEqual:]
  -[ICCloudContentTastePBFusePreferences readFrom:]
  -[ICCloudContentTastePBFusePreferences preferencesCount]
  -[ICCloudContentTastePBFusePreferences addPreferences:]
  -[ICCloudContentTastePBFusePreferences clearPreferences]
  -[ICCloudContentTastePBFusePreferences preferencesAtIndex:]
  -[ICCloudContentTastePBFusePreferences copyWithZone:]


_ICLLQueueQuery : PBCodable <NSCopying>
  // instance methods
  -[_ICLLQueueQuery .cxx_destruct]
  -[_ICLLQueueQuery dictionaryRepresentation]
  -[_ICLLQueueQuery writeTo:]
  -[_ICLLQueueQuery isEqual:]
  -[_ICLLQueueQuery readFrom:]
  -[_ICLLQueueQuery copyWithZone:]


ICCloudAddReferral : NSObject <NSSecureCoding>
 @property  NSString *playlistGlobalID
 @property  long long albumAdamID

  // class methods
  +[ICCloudAddReferral supportsSecureCoding]
  +[ICCloudAddReferral referralWithAlbumAdamID:]
  +[ICCloudAddReferral referralWithPlaylistGlobalID:]

  // instance methods
  -[ICCloudAddReferral initWithCoder:]
  -[ICCloudAddReferral playlistGlobalID]
  -[ICCloudAddReferral .cxx_destruct]
  -[ICCloudAddReferral encodeWithCoder:]
  -[ICCloudAddReferral albumAdamID]


ICIAMMessageAction : PBCodable <NSCopying>
 @property  BOOL hasIdentifier
 @property  NSString *identifier
 @property  BOOL hasDisplayText
 @property  NSString *displayText
 @property  BOOL hasURL
 @property  NSString *uRL
 @property  BOOL hasRequiresDelegate
 @property  BOOL requiresDelegate
 @property  NSMutableArray *actionParameters
 @property  BOOL hasClickEvent
 @property  ICIAMMetricEvent *clickEvent
 @property  BOOL hasMessageRemovalPolicy
 @property  int messageRemovalPolicy

  // class methods
  +[ICIAMMessageAction actionParametersType]

  // instance methods
  -[ICIAMMessageAction mergeFrom:]
  -[ICIAMMessageAction clearActionParameters]
  -[ICIAMMessageAction setClickEvent:]
  -[ICIAMMessageAction setURL:]
  -[ICIAMMessageAction setHasRequiresDelegate:]
  -[ICIAMMessageAction hasURL]
  -[ICIAMMessageAction .cxx_destruct]
  -[ICIAMMessageAction requiresDelegate]
  -[ICIAMMessageAction uRL]
  -[ICIAMMessageAction dictionaryRepresentation]
  -[ICIAMMessageAction writeTo:]
  -[ICIAMMessageAction actionParametersAtIndex:]
  -[ICIAMMessageAction actionParametersCount]
  -[ICIAMMessageAction hasClickEvent]
  -[ICIAMMessageAction hasDisplayText]
  -[ICIAMMessageAction hasRequiresDelegate]
  -[ICIAMMessageAction messageRemovalPolicyAsString:]
  -[ICIAMMessageAction setActionParameters:]
  -[ICIAMMessageAction isEqual:]
  -[ICIAMMessageAction copyTo:]
  -[ICIAMMessageAction actionParameters]
  -[ICIAMMessageAction readFrom:]
  -[ICIAMMessageAction identifier]
  -[ICIAMMessageAction clickEvent]
  -[ICIAMMessageAction StringAsMessageRemovalPolicy:]
  -[ICIAMMessageAction setHasMessageRemovalPolicy:]
  -[ICIAMMessageAction setIdentifier:]
  -[ICIAMMessageAction hasIdentifier]
  -[ICIAMMessageAction setDisplayText:]
  -[ICIAMMessageAction copyWithZone:]
  -[ICIAMMessageAction hasMessageRemovalPolicy]
  -[ICIAMMessageAction setRequiresDelegate:]
  -[ICIAMMessageAction setMessageRemovalPolicy:]
  -[ICIAMMessageAction addActionParameters:]
  -[ICIAMMessageAction displayText]
  -[ICIAMMessageAction messageRemovalPolicy]


ICInAppReportEventRequest : ICRequestOperation
  // instance methods
  -[ICInAppReportEventRequest .cxx_destruct]
  -[ICInAppReportEventRequest performRequestWithResponseHandler:]
  -[ICInAppReportEventRequest execute]
  -[ICInAppReportEventRequest initWithStoreRequestContext:messageIdentifier:params:]


ICMusicSubscriptionLeasePlaybackRequest : NSObject <NSCopying>
 @property  NSString *assetSourceStorefrontID
 @property  ICStoreRequestContext *requestContext
 @property  unsigned long storeCloudID
 @property  long long storePurchasedAdamID
 @property  long long storeSubscriptionAdamID
 @property  NSString *cloudUniversalLibraryID
 @property  BOOL shouldPreventLeaseAcquisition
 @property  BOOL shouldRequireLeaseAcquisition
 @property  BOOL triggeredByLeasePrevention
 @property  BOOL followUp
 @property  NSString *playbackAuthorizationToken

  // instance methods
  -[ICMusicSubscriptionLeasePlaybackRequest .cxx_destruct]
  -[ICMusicSubscriptionLeasePlaybackRequest cloudUniversalLibraryID]
  -[ICMusicSubscriptionLeasePlaybackRequest storeCloudID]
  -[ICMusicSubscriptionLeasePlaybackRequest setStoreCloudID:]
  -[ICMusicSubscriptionLeasePlaybackRequest setCloudUniversalLibraryID:]
  -[ICMusicSubscriptionLeasePlaybackRequest setStoreSubscriptionAdamID:]
  -[ICMusicSubscriptionLeasePlaybackRequest setStorePurchasedAdamID:]
  -[ICMusicSubscriptionLeasePlaybackRequest initWithRequestContext:]
  -[ICMusicSubscriptionLeasePlaybackRequest storeSubscriptionAdamID]
  -[ICMusicSubscriptionLeasePlaybackRequest storePurchasedAdamID]
  -[ICMusicSubscriptionLeasePlaybackRequest playbackAuthorizationToken]
  -[ICMusicSubscriptionLeasePlaybackRequest requestContext]
  -[ICMusicSubscriptionLeasePlaybackRequest copyWithZone:]
  -[ICMusicSubscriptionLeasePlaybackRequest setPlaybackAuthorizationToken:]
  -[ICMusicSubscriptionLeasePlaybackRequest setAssetSourceStorefrontID:]
  -[ICMusicSubscriptionLeasePlaybackRequest assetSourceStorefrontID]
  -[ICMusicSubscriptionLeasePlaybackRequest isFollowUp]
  -[ICMusicSubscriptionLeasePlaybackRequest setFollowUp:]
  -[ICMusicSubscriptionLeasePlaybackRequest shouldPreventLeaseAcquisition]
  -[ICMusicSubscriptionLeasePlaybackRequest setShouldPreventLeaseAcquisition:]
  -[ICMusicSubscriptionLeasePlaybackRequest shouldRequireLeaseAcquisition]
  -[ICMusicSubscriptionLeasePlaybackRequest setShouldRequireLeaseAcquisition:]
  -[ICMusicSubscriptionLeasePlaybackRequest isTriggeredByLeasePrevention]
  -[ICMusicSubscriptionLeasePlaybackRequest setTriggeredByLeasePrevention:]


ICStoreURLRequest : ICURLRequest
 @property  ICStoreRequestContext *storeRequestContext
 @property  long long anisetteVersion
 @property  BOOL shouldUseMescalSigning
 @property  BOOL shouldParseBodyData
 @property  BOOL shouldRequireURLBag
 @property  NSString *machineDataSyncState
 @property  NSDictionary *additionalHTTPCookies
 @property  NSArray *additionalQueryItems
 @property  ICJSSignConfiguration *JSSignConfiguration

  // class methods
  +[ICStoreURLRequest _defaultMaxRetryCountForReason:]
  +[ICStoreURLRequest _responseHandlerClass]
  +[ICStoreURLRequest currentConnectionTypeHeader]
  +[ICStoreURLRequest _shouldPersonalizeRequestForClientInfo:personalizationStyle:]

  // instance methods
  -[ICStoreURLRequest initWithURLRequest:requestContext:resumeData:]
  -[ICStoreURLRequest storeRequestContext]
  -[ICStoreURLRequest .cxx_destruct]
  -[ICStoreURLRequest setAdditionalHTTPCookies:]
  -[ICStoreURLRequest setAnisetteVersion:]
  -[ICStoreURLRequest setShouldUseMescalSigning:]
  -[ICStoreURLRequest additionalQueryItems]
  -[ICStoreURLRequest setAdditionalQueryItems:]
  -[ICStoreURLRequest buildURLRequestWithCompletionHandler:]
  -[ICStoreURLRequest initWithURLRequest:requestContext:]
  -[ICStoreURLRequest additionalHTTPCookies]
  -[ICStoreURLRequest _stringForCachePolicy:]
  -[ICStoreURLRequest initWithURL:requestContext:]
  -[ICStoreURLRequest setJSSignConfiguration:]
  -[ICStoreURLRequest setShouldRequireURLBag:]
  -[ICStoreURLRequest setShouldParseBodyData:]
  -[ICStoreURLRequest buildStoreURLRequestWithURLRequest:builderProperties:completionHandler:]
  -[ICStoreURLRequest _shouldPersonalizeRequest]
  -[ICStoreURLRequest _getSignatureDataForRequest:urlBag:completionHandler:]
  -[ICStoreURLRequest anisetteVersion]
  -[ICStoreURLRequest shouldUseMescalSigning]
  -[ICStoreURLRequest shouldParseBodyData]
  -[ICStoreURLRequest shouldRequireURLBag]
  -[ICStoreURLRequest machineDataSyncState]
  -[ICStoreURLRequest setMachineDataSyncState:]
  -[ICStoreURLRequest JSSignConfiguration]


ICDelegateAccountStoreXPCWriter : NSObject <ICDelegateAccountStoreServiceClient, ICDelegateAccountStoreWriter>
 @property  @? externalChangeHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ICDelegateAccountStoreXPCWriter openWithCompletionHandler:]
  -[ICDelegateAccountStoreXPCWriter addDelegationUUIDs:forUserIdentity:completionHandler:]
  -[ICDelegateAccountStoreXPCWriter .cxx_destruct]
  -[ICDelegateAccountStoreXPCWriter removeIdentityPropertiesForUserIdentity:completionHandler:]
  -[ICDelegateAccountStoreXPCWriter setToken:forUserIdentity:completionHandler:]
  -[ICDelegateAccountStoreXPCWriter removeTokensExpiringBeforeDate:completionHandler:]
  -[ICDelegateAccountStoreXPCWriter recreateWithCompletionHandler:]
  -[ICDelegateAccountStoreXPCWriter removeAllTokensWithCompletionHandler:]
  -[ICDelegateAccountStoreXPCWriter removeTokenForUserIdentity:completionHandler:]
  -[ICDelegateAccountStoreXPCWriter removeDelegationUUIDs:forUserIdentity:completionHandler:]
  -[ICDelegateAccountStoreXPCWriter dealloc]
  -[ICDelegateAccountStoreXPCWriter invalidate]
  -[ICDelegateAccountStoreXPCWriter setIdentityProperties:forUserIdentity:completionHandler:]
  -[ICDelegateAccountStoreXPCWriter delegateAccountStoreDidChange]
  -[ICDelegateAccountStoreXPCWriter initWithAccountStoreOptions:]
  -[ICDelegateAccountStoreXPCWriter setExternalChangeHandler:]
  -[ICDelegateAccountStoreXPCWriter _onceWithCompletionHandler:]
  -[ICDelegateAccountStoreXPCWriter _getXPCConnectionWithCompletion:]
  -[ICDelegateAccountStoreXPCWriter externalChangeHandler]


ICMusicSubscriptionStatusRequest : NSObject <NSCopying, NSSecureCoding>
 @property  BOOL shouldBypassEnforcementOfPrivacyAcknowledgement
 @property  ICStoreRequestContext *storeRequestContext
 @property  long long reason
 @property  BOOL shouldIgnoreCache
 @property  BOOL allowsFallbackToExpiredStatus
 @property  BOOL allowsFallbackToStatusNeedingReload
 @property  BOOL shouldReturnLastKnownStatusOnly
 @property  long long carrierBundleProvisioningStyle
 @property  NSUUID *requestIdentifier

  // class methods
  +[ICMusicSubscriptionStatusRequest supportsSecureCoding]

  // instance methods
  -[ICMusicSubscriptionStatusRequest requestIdentifier]
  -[ICMusicSubscriptionStatusRequest initWithCoder:]
  -[ICMusicSubscriptionStatusRequest storeRequestContext]
  -[ICMusicSubscriptionStatusRequest shouldIgnoreCache]
  -[ICMusicSubscriptionStatusRequest .cxx_destruct]
  -[ICMusicSubscriptionStatusRequest setCarrierBundleProvisioningStyle:]
  -[ICMusicSubscriptionStatusRequest allowsFallbackToStatusNeedingReload]
  -[ICMusicSubscriptionStatusRequest shouldBypassEnforcementOfPrivacyAcknowledgement]
  -[ICMusicSubscriptionStatusRequest isEqual:]
  -[ICMusicSubscriptionStatusRequest allowsFallbackToExpiredStatus]
  -[ICMusicSubscriptionStatusRequest setAllowsFallbackToExpiredStatus:]
  -[ICMusicSubscriptionStatusRequest reason]
  -[ICMusicSubscriptionStatusRequest carrierBundleProvisioningStyle]
  -[ICMusicSubscriptionStatusRequest setStoreRequestContext:]
  -[ICMusicSubscriptionStatusRequest initWithStoreRequestContext:]
  -[ICMusicSubscriptionStatusRequest shouldReturnLastKnownStatusOnly]
  -[ICMusicSubscriptionStatusRequest setShouldReturnLastKnownStatusOnly:]
  -[ICMusicSubscriptionStatusRequest setReason:]
  -[ICMusicSubscriptionStatusRequest setShouldIgnoreCache:]
  -[ICMusicSubscriptionStatusRequest setAllowsFallbackToStatusNeedingReload:]
  -[ICMusicSubscriptionStatusRequest copyWithZone:]
  -[ICMusicSubscriptionStatusRequest encodeWithCoder:]
  -[ICMusicSubscriptionStatusRequest setShouldBypassEnforcementOfPrivacyAcknowledgement:]


ICAVContentKeySessionReusable : NSObject
 @property  NSString *reuseIdentifier
 @property  long long batchNumber
 @property  AVContentKeySession *avContentKeySession
 @property  long long useCount
 @property  NSMutableSet *usedTokens
 @property  BOOL hasPrefetchKey
 @property  BOOL hasFailedKeys
 @property  long long pendingKeyRequestCount
 @property  BOOL isReusable

  // instance methods
  -[ICAVContentKeySessionReusable .cxx_destruct]
  -[ICAVContentKeySessionReusable useCount]
  -[ICAVContentKeySessionReusable isReusable]
  -[ICAVContentKeySessionReusable batchNumber]
  -[ICAVContentKeySessionReusable setReuseIdentifier:]
  -[ICAVContentKeySessionReusable setUseCount:]
  -[ICAVContentKeySessionReusable reuseIdentifier]
  -[ICAVContentKeySessionReusable usableWithReuseIdentifier:nonreusableTokens:]
  -[ICAVContentKeySessionReusable prepareForReuseWithNonreusableTokens:]
  -[ICAVContentKeySessionReusable initWithReuseIdentifier:batchNumber:nonreusableTokens:]
  -[ICAVContentKeySessionReusable cleanupForReuse]
  -[ICAVContentKeySessionReusable setBatchNumber:]
  -[ICAVContentKeySessionReusable setAvContentKeySession:]
  -[ICAVContentKeySessionReusable setUsedTokens:]
  -[ICAVContentKeySessionReusable usedTokens]
  -[ICAVContentKeySessionReusable hasPrefetchKey]
  -[ICAVContentKeySessionReusable hasFailedKeys]
  -[ICAVContentKeySessionReusable pendingKeyRequestCount]
  -[ICAVContentKeySessionReusable setPendingKeyRequestCount:]
  -[ICAVContentKeySessionReusable setHasPrefetchKey:]
  -[ICAVContentKeySessionReusable setHasFailedKeys:]
  -[ICAVContentKeySessionReusable avContentKeySession]
  -[ICAVContentKeySessionReusable didProvideContentKeyRequest]
  -[ICAVContentKeySessionReusable contentKeyRequestDidSucceed:]
  -[ICAVContentKeySessionReusable contentKeyRequestDidFail]


ICPlayActivityTable : NSObject
 @property  unsigned long currentEventsRevision
 @property  NSString *eventsRevisionVersionToken

  // class methods
  +[ICPlayActivityTable _eventsDatabaseTableName]
  +[ICPlayActivityTable _propertiesDatabaseTableName]
  +[ICPlayActivityTable _setupDatabase:]
  +[ICPlayActivityTable _migrateDatabaseFiles]
  +[ICPlayActivityTable _defaultDatabasePath]

  // instance methods
  -[ICPlayActivityTable performTransactionWithBlock:]
  -[ICPlayActivityTable _valueForDatabasePropertyKey:]
  -[ICPlayActivityTable _setValue:forDatabasePropertyKey:]
  -[ICPlayActivityTable _revisionsIndexSetUsingPersisentIDGenerationBlock:count:]
  -[ICPlayActivityTable _getPlayActivityEvents:relevantRevisionsIndexSet:withStartRevision:endRevision:storeAccountID:shouldFilterStoreAccountID:additionalRevisionsIndexSet:ignoredRevisionsIndexSet:error:]
  -[ICPlayActivityTable .cxx_destruct]
  -[ICPlayActivityTable init]
  -[ICPlayActivityTable currentEventsRevision]
  -[ICPlayActivityTable eventsRevisionVersionToken]
  -[ICPlayActivityTable getPlayActivityEvents:relevantRevisionsIndexSet:withStartRevision:endRevision:additionalRevisionsIndexSet:ignoredRevisionsIndexSet:error:]
  -[ICPlayActivityTable insertPlayActivityEvent:withRevision:returningError:]
  -[ICPlayActivityTable setCurrentEventsRevision:]
  -[ICPlayActivityTable removePlayActivityEventsUpToRevision:returningError:]
  -[ICPlayActivityTable getPlayActivityEvents:relevantRevisionsIndexSet:withStartRevision:endRevision:storeAccountID:additionalRevisionsIndexSet:ignoredRevisionsIndexSet:error:]
  -[ICPlayActivityTable revisionsIndexSetForPlayActivityEvents:]
  -[ICPlayActivityTable revisionsIndexSetForPlayActivityEventPersistentIDs:]
  -[ICPlayActivityTable initWithDatabasePath:]
  -[ICPlayActivityTable _removeDatabaseReturningError:]


ICMusicSubscriptionFairPlayKeyStatus : NSObject <NSCopying>
 @property  unsigned long accountUniqueIdentifier
 @property  BOOL hasOnlinePlaybackKeys
 @property  BOOL hasOfflinePlaybackKeys

  // instance methods
  -[ICMusicSubscriptionFairPlayKeyStatus isEqual:]
  -[ICMusicSubscriptionFairPlayKeyStatus accountUniqueIdentifier]
  -[ICMusicSubscriptionFairPlayKeyStatus copyWithZone:]
  -[ICMusicSubscriptionFairPlayKeyStatus hasOnlinePlaybackKeys]
  -[ICMusicSubscriptionFairPlayKeyStatus hasOfflinePlaybackKeys]
  -[ICMusicSubscriptionFairPlayKeyStatus setHasOnlinePlaybackKeys:]
  -[ICMusicSubscriptionFairPlayKeyStatus setHasOfflinePlaybackKeys:]
  -[ICMusicSubscriptionFairPlayKeyStatus initWithFairPlaySubscriptionInfo:]
  -[ICMusicSubscriptionFairPlayKeyStatus setAccountUniqueIdentifier:]


ICLightweightMusicSubscriptionStatus : NSObject <NSCopying, NSSecureCoding>
 @property  unsigned long capabilities
 @property  long long statusType
 @property  long long reasonType
 @property  NSArray *eligibleOffers
 @property  NSDate *expirationDate

  // class methods
  +[ICLightweightMusicSubscriptionStatus supportsSecureCoding]

  // instance methods
  -[ICLightweightMusicSubscriptionStatus hasCapability:]
  -[ICLightweightMusicSubscriptionStatus initWithCoder:]
  -[ICLightweightMusicSubscriptionStatus eligibleOffers]
  -[ICLightweightMusicSubscriptionStatus statusType]
  -[ICLightweightMusicSubscriptionStatus capabilities]
  -[ICLightweightMusicSubscriptionStatus .cxx_destruct]
  -[ICLightweightMusicSubscriptionStatus isEqual:]
  -[ICLightweightMusicSubscriptionStatus reasonType]
  -[ICLightweightMusicSubscriptionStatus copyWithZone:]
  -[ICLightweightMusicSubscriptionStatus expirationDate]
  -[ICLightweightMusicSubscriptionStatus encodeWithCoder:]
  -[ICLightweightMusicSubscriptionStatus _initWithExtendedSubscriptionStatus:]


ICPlayActivityEvent : NSObject <NSSecureCoding, NSCopying, NSMutableCopying, NSSecureCoding>
 @property  long long version
 @property  unsigned long autoPlayMode
 @property  NSArray *buildFeatures
 @property  NSString *buildVersion
 @property  ICPlayActivityEventContainerIDs *containerIDs
 @property  unsigned long containerType
 @property  NSData *dataRepresentation
 @property  NSString *deviceName
 @property  unsigned long displayType
 @property  unsigned long endReasonType
 @property  ICPlayActivityEnqueuerProperties *enqueuerProperties
 @property  NSDate *eventDate
 @property  unsigned long eventType
 @property  NSTimeZone *eventTimeZone
 @property  NSString *featureName
 @property  NSString *householdID
 @property  ICPlayActivityEventItemIDs *itemIDs
 @property  double itemDuration
 @property  double itemEndTime
 @property  double itemStartTime
 @property  unsigned long itemType
 @property  unsigned long lyricsDisplayedCharacterCount
 @property  NSString *lyricsLanguage
 @property  unsigned long mediaType
 @property  BOOL offline
 @property  long long persistentID
 @property  NSNumber *privateListeningEnabled
 @property  NSString *queueGroupingID
 @property  unsigned long reasonHintType
 @property  NSData *recommendationData
 @property  unsigned long repeatPlayMode
 @property  NSString *requestingBundleIdentifier
 @property  NSString *requestingBundleVersion
 @property  BOOL SBEnabled
 @property  unsigned long shufflePlayMode
 @property  NSNumber *siriInitiated
 @property  unsigned long sourceType
 @property  unsigned long storeAccountID
 @property  NSString *storeFrontID
 @property  long long systemReleaseType
 @property  NSData *timedMetadata
 @property  NSData *trackInfo
 @property  unsigned long audioQualityPreference
 @property  unsigned long playbackFormatPreference
 @property  ICPlayActivityAudioQualityProperties *targetedAudioQuality
 @property  ICPlayActivityAudioQualityProperties *providedAudioQuality
 @property  unsigned long sharedActivityGroupSizeCurrent
 @property  unsigned long sharedActivityGroupSizeMax
 @property  NSString *containerID
 @property  NSString *externalID
 @property  BOOL internalBuild
 @property  NSString *personalizedContainerID
 @property  NSString *storeID

  // class methods
  +[ICPlayActivityEvent supportsSecureCoding]

  // instance methods
  -[ICPlayActivityEvent externalID]
  -[ICPlayActivityEvent displayType]
  -[ICPlayActivityEvent isOffline]
  -[ICPlayActivityEvent sourceType]
  -[ICPlayActivityEvent buildVersion]
  -[ICPlayActivityEvent initWithCoder:]
  -[ICPlayActivityEvent storeID]
  -[ICPlayActivityEvent queueGroupingID]
  -[ICPlayActivityEvent deviceName]
  -[ICPlayActivityEvent dataRepresentation]
  -[ICPlayActivityEvent requestingBundleVersion]
  -[ICPlayActivityEvent .cxx_destruct]
  -[ICPlayActivityEvent persistentID]
  -[ICPlayActivityEvent _mutableCopyClass]
  -[ICPlayActivityEvent containerIDs]
  -[ICPlayActivityEvent itemIDs]
  -[ICPlayActivityEvent init]
  -[ICPlayActivityEvent isEqualToEvent:]
  -[ICPlayActivityEvent timedMetadata]
  -[ICPlayActivityEvent itemType]
  -[ICPlayActivityEvent isEqual:]
  -[ICPlayActivityEvent eventDate]
  -[ICPlayActivityEvent isInternalBuild]
  -[ICPlayActivityEvent storeAccountID]
  -[ICPlayActivityEvent requestingBundleIdentifier]
  -[ICPlayActivityEvent initWithDataRepresentation:]
  -[ICPlayActivityEvent trackInfo]
  -[ICPlayActivityEvent enqueuerProperties]
  -[ICPlayActivityEvent isSBEnabled]
  -[ICPlayActivityEvent eventTimeZone]
  -[ICPlayActivityEvent itemEndTime]
  -[ICPlayActivityEvent lyricsLanguage]
  -[ICPlayActivityEvent itemDuration]
  -[ICPlayActivityEvent lyricsDisplayedCharacterCount]
  -[ICPlayActivityEvent recommendationData]
  -[ICPlayActivityEvent itemStartTime]
  -[ICPlayActivityEvent householdID]
  -[ICPlayActivityEvent isSiriInitiated]
  -[ICPlayActivityEvent personalizedContainerID]
  -[ICPlayActivityEvent reasonHintType]
  -[ICPlayActivityEvent containerType]
  -[ICPlayActivityEvent containerID]
  -[ICPlayActivityEvent version]
  -[ICPlayActivityEvent mediaType]
  -[ICPlayActivityEvent eventType]
  -[ICPlayActivityEvent featureName]
  -[ICPlayActivityEvent mutableCopyWithZone:]
  -[ICPlayActivityEvent systemReleaseType]
  -[ICPlayActivityEvent storeFrontID]
  -[ICPlayActivityEvent endReasonType]
  -[ICPlayActivityEvent copyWithZone:]
  -[ICPlayActivityEvent isPrivateListeningEnabled]
  -[ICPlayActivityEvent encodeWithCoder:]
  -[ICPlayActivityEvent targetedAudioQuality]
  -[ICPlayActivityEvent providedAudioQuality]
  -[ICPlayActivityEvent audioQualityPreference]
  -[ICPlayActivityEvent playbackFormatPreference]
  -[ICPlayActivityEvent buildFeatures]
  -[ICPlayActivityEvent repeatPlayMode]
  -[ICPlayActivityEvent shufflePlayMode]
  -[ICPlayActivityEvent autoPlayMode]
  -[ICPlayActivityEvent sharedActivityGroupSizeCurrent]
  -[ICPlayActivityEvent sharedActivityGroupSizeMax]


ICMutablePlayActivityEvent : ICPlayActivityEvent
 @property  long long persistentID
 @property  long long version
 @property  unsigned long autoPlayMode
 @property  NSArray *buildFeatures
 @property  NSString *buildVersion
 @property  ICPlayActivityEventContainerIDs *containerIDs
 @property  unsigned long containerType
 @property  NSString *deviceName
 @property  unsigned long endReasonType
 @property  ICPlayActivityEnqueuerProperties *enqueuerProperties
 @property  NSDate *eventDate
 @property  NSTimeZone *eventTimeZone
 @property  unsigned long eventType
 @property  NSString *featureName
 @property  NSString *householdID
 @property  ICPlayActivityEventItemIDs *itemIDs
 @property  double itemDuration
 @property  double itemEndTime
 @property  double itemStartTime
 @property  unsigned long itemType
 @property  unsigned long mediaType
 @property  BOOL offline
 @property  NSNumber *privateListeningEnabled
 @property  NSString *queueGroupingID
 @property  unsigned long reasonHintType
 @property  NSData *recommendationData
 @property  unsigned long repeatPlayMode
 @property  NSString *requestingBundleIdentifier
 @property  NSString *requestingBundleVersion
 @property  BOOL SBEnabled
 @property  unsigned long shufflePlayMode
 @property  NSNumber *siriInitiated
 @property  unsigned long sourceType
 @property  unsigned long storeAccountID
 @property  NSString *storeFrontID
 @property  long long systemReleaseType
 @property  NSData *timedMetadata
 @property  NSData *trackInfo
 @property  unsigned long displayType
 @property  unsigned long lyricsDisplayedCharacterCount
 @property  NSString *lyricsLanguage
 @property  unsigned long audioQualityPreference
 @property  unsigned long playbackFormatPreference
 @property  ICPlayActivityAudioQualityProperties *targetedAudioQuality
 @property  ICPlayActivityAudioQualityProperties *providedAudioQuality
 @property  unsigned long sharedActivityGroupSizeCurrent
 @property  unsigned long sharedActivityGroupSizeMax
 @property  NSString *containerID
 @property  NSString *externalID
 @property  BOOL internalBuild
 @property  NSString *personalizedContainerID
 @property  NSString *storeID

  // instance methods
  -[ICMutablePlayActivityEvent setBuildVersion:]
  -[ICMutablePlayActivityEvent setContainerID:]
  -[ICMutablePlayActivityEvent setMediaType:]
  -[ICMutablePlayActivityEvent setDisplayType:]
  -[ICMutablePlayActivityEvent setStoreID:]
  -[ICMutablePlayActivityEvent setSourceType:]
  -[ICMutablePlayActivityEvent setOffline:]
  -[ICMutablePlayActivityEvent setRequestingBundleIdentifier:]
  -[ICMutablePlayActivityEvent setContainerType:]
  -[ICMutablePlayActivityEvent _mutableCopyClass]
  -[ICMutablePlayActivityEvent setItemDuration:]
  -[ICMutablePlayActivityEvent setItemEndTime:]
  -[ICMutablePlayActivityEvent setItemStartTime:]
  -[ICMutablePlayActivityEvent setRecommendationData:]
  -[ICMutablePlayActivityEvent setTimedMetadata:]
  -[ICMutablePlayActivityEvent setTrackInfo:]
  -[ICMutablePlayActivityEvent setEnqueuerProperties:]
  -[ICMutablePlayActivityEvent setHouseholdID:]
  -[ICMutablePlayActivityEvent setSiriInitiated:]
  -[ICMutablePlayActivityEvent setPersonalizedContainerID:]
  -[ICMutablePlayActivityEvent setContainerIDs:]
  -[ICMutablePlayActivityEvent setReasonHintType:]
  -[ICMutablePlayActivityEvent setDeviceName:]
  -[ICMutablePlayActivityEvent setItemIDs:]
  -[ICMutablePlayActivityEvent setItemType:]
  -[ICMutablePlayActivityEvent setEventDate:]
  -[ICMutablePlayActivityEvent setLyricsDisplayedCharacterCount:]
  -[ICMutablePlayActivityEvent setLyricsLanguage:]
  -[ICMutablePlayActivityEvent setPrivateListeningEnabled:]
  -[ICMutablePlayActivityEvent setExternalID:]
  -[ICMutablePlayActivityEvent setQueueGroupingID:]
  -[ICMutablePlayActivityEvent setStoreFrontID:]
  -[ICMutablePlayActivityEvent setFeatureName:]
  -[ICMutablePlayActivityEvent setSystemReleaseType:]
  -[ICMutablePlayActivityEvent setSBEnabled:]
  -[ICMutablePlayActivityEvent setStoreAccountID:]
  -[ICMutablePlayActivityEvent setPersistentID:]
  -[ICMutablePlayActivityEvent setEndReasonType:]
  -[ICMutablePlayActivityEvent copyWithZone:]
  -[ICMutablePlayActivityEvent setInternalBuild:]
  -[ICMutablePlayActivityEvent setRequestingBundleVersion:]
  -[ICMutablePlayActivityEvent setEventTimeZone:]
  -[ICMutablePlayActivityEvent setEventType:]
  -[ICMutablePlayActivityEvent setAutoPlayMode:]
  -[ICMutablePlayActivityEvent setBuildFeatures:]
  -[ICMutablePlayActivityEvent setRepeatPlayMode:]
  -[ICMutablePlayActivityEvent setShufflePlayMode:]
  -[ICMutablePlayActivityEvent setAudioQualityPreference:]
  -[ICMutablePlayActivityEvent setPlaybackFormatPreference:]
  -[ICMutablePlayActivityEvent setTargetedAudioQuality:]
  -[ICMutablePlayActivityEvent setProvidedAudioQuality:]
  -[ICMutablePlayActivityEvent setSharedActivityGroupSizeCurrent:]
  -[ICMutablePlayActivityEvent setSharedActivityGroupSizeMax:]


ICMusicSubscriptionStatusCacheKey : NSObject <NSCopying>
 @property  NSNumber *DSID
 @property  NSString *phoneNumber
 @property  NSString *storefrontIdentifier

  // instance methods
  -[ICMusicSubscriptionStatusCacheKey setDSID:]
  -[ICMusicSubscriptionStatusCacheKey stringRepresentation]
  -[ICMusicSubscriptionStatusCacheKey DSID]
  -[ICMusicSubscriptionStatusCacheKey dictionaryRepresentationIncludingDSID:]
  -[ICMusicSubscriptionStatusCacheKey setPhoneNumber:]
  -[ICMusicSubscriptionStatusCacheKey .cxx_destruct]
  -[ICMusicSubscriptionStatusCacheKey initWithDictionaryRepresentation:requiringDSID:]
  -[ICMusicSubscriptionStatusCacheKey phoneNumber]
  -[ICMusicSubscriptionStatusCacheKey init]
  -[ICMusicSubscriptionStatusCacheKey isEqual:]
  -[ICMusicSubscriptionStatusCacheKey storefrontIdentifier]
  -[ICMusicSubscriptionStatusCacheKey copyWithZone:]
  -[ICMusicSubscriptionStatusCacheKey initWithStringRepresentation:]
  -[ICMusicSubscriptionStatusCacheKey setStorefrontIdentifier:]


ICIAMMessageContent : PBCodable <NSCopying>
 @property  BOOL hasTitle
 @property  NSString *title
 @property  BOOL hasSubtitle
 @property  NSString *subtitle
 @property  BOOL hasBody
 @property  NSString *body
 @property  NSMutableArray *images
 @property  NSMutableArray *messageActions
 @property  NSMutableArray *contentParameters
 @property  BOOL hasIdentifier
 @property  NSString *identifier
 @property  BOOL hasPageEvent
 @property  ICIAMMetricEvent *pageEvent
 @property  BOOL hasCloseClickEvent
 @property  ICIAMMetricEvent *closeClickEvent
 @property  BOOL hasCardClickEvent
 @property  ICIAMMetricEvent *cardClickEvent

  // class methods
  +[ICIAMMessageContent imagesType]
  +[ICIAMMessageContent messageActionsType]
  +[ICIAMMessageContent contentParametersType]

  // instance methods
  -[ICIAMMessageContent clearImages]
  -[ICIAMMessageContent hasSubtitle]
  -[ICIAMMessageContent contentParameters]
  -[ICIAMMessageContent mergeFrom:]
  -[ICIAMMessageContent hasTitle]
  -[ICIAMMessageContent body]
  -[ICIAMMessageContent setTitle:]
  -[ICIAMMessageContent messageActions]
  -[ICIAMMessageContent .cxx_destruct]
  -[ICIAMMessageContent setImages:]
  -[ICIAMMessageContent dictionaryRepresentation]
  -[ICIAMMessageContent hasBody]
  -[ICIAMMessageContent setSubtitle:]
  -[ICIAMMessageContent writeTo:]
  -[ICIAMMessageContent images]
  -[ICIAMMessageContent isEqual:]
  -[ICIAMMessageContent copyTo:]
  -[ICIAMMessageContent readFrom:]
  -[ICIAMMessageContent identifier]
  -[ICIAMMessageContent subtitle]
  -[ICIAMMessageContent addImages:]
  -[ICIAMMessageContent title]
  -[ICIAMMessageContent imagesAtIndex:]
  -[ICIAMMessageContent setBody:]
  -[ICIAMMessageContent setIdentifier:]
  -[ICIAMMessageContent hasIdentifier]
  -[ICIAMMessageContent copyWithZone:]
  -[ICIAMMessageContent imagesCount]
  -[ICIAMMessageContent pageEvent]
  -[ICIAMMessageContent addMessageActions:]
  -[ICIAMMessageContent addContentParameters:]
  -[ICIAMMessageContent messageActionsCount]
  -[ICIAMMessageContent clearMessageActions]
  -[ICIAMMessageContent messageActionsAtIndex:]
  -[ICIAMMessageContent contentParametersCount]
  -[ICIAMMessageContent clearContentParameters]
  -[ICIAMMessageContent contentParametersAtIndex:]
  -[ICIAMMessageContent setPageEvent:]
  -[ICIAMMessageContent setCloseClickEvent:]
  -[ICIAMMessageContent setCardClickEvent:]
  -[ICIAMMessageContent hasPageEvent]
  -[ICIAMMessageContent hasCloseClickEvent]
  -[ICIAMMessageContent hasCardClickEvent]
  -[ICIAMMessageContent setMessageActions:]
  -[ICIAMMessageContent setContentParameters:]
  -[ICIAMMessageContent closeClickEvent]
  -[ICIAMMessageContent cardClickEvent]


ICMachineDataEraseOperation : ICMachineDataOperation
  // instance methods
  -[ICMachineDataEraseOperation execute]


ICRemoveMediaDRMOperation : ICRequestOperation
  // instance methods
  -[ICRemoveMediaDRMOperation .cxx_destruct]
  -[ICRemoveMediaDRMOperation execute]
  -[ICRemoveMediaDRMOperation initWithFilePath:sinfs:]
  -[ICRemoveMediaDRMOperation removeDRMWithCompletionHandler:]


ICMusicKitURLResponse : ICURLResponse
 @property  NSString *serverCorrelationKey
 @property  NSString *serverEnvironment
 @property  NSError *serverError

  // instance methods
  -[ICMusicKitURLResponse serverError]
  -[ICMusicKitURLResponse _initializeMusicKitURLResponse]
  -[ICMusicKitURLResponse .cxx_destruct]
  -[ICMusicKitURLResponse serverCorrelationKey]
  -[ICMusicKitURLResponse initWithURLResponse:urlRequest:bodyDataURL:performanceMetrics:]
  -[ICMusicKitURLResponse serverEnvironment]
  -[ICMusicKitURLResponse _parseServerErrorDictionary:]
  -[ICMusicKitURLResponse _parseServerError]
  -[ICMusicKitURLResponse initWithURLResponse:urlRequest:bodyData:performanceMetrics:]


ICAVAssetDownloadURLSession : ICURLSession <AVAssetDownloadDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ICAVAssetDownloadURLSession enqueueAVDownloadRequest:toDestination:withOptions:completionHandler:]
  -[ICAVAssetDownloadURLSession enqueueAggregateAssetDownloadRequest:toDestination:withOptions:resourceLoaderDelegate:completionHandler:]
  -[ICAVAssetDownloadURLSession enqueueAVDownloadRequest:withOptions:completionHandler:]
  -[ICAVAssetDownloadURLSession _createURLSessionTaskForRequest:usingSession:]
  -[ICAVAssetDownloadURLSession enqueueAggregateAssetDownloadRequest:toDestination:withOptions:completionHandler:]
  -[ICAVAssetDownloadURLSession enqueueAVDownloadRequest:toDestination:withAVURLAsset:options:completionHandler:]
  -[ICAVAssetDownloadURLSession URLSession:aggregateAssetDownloadTask:didLoadTimeRange:totalTimeRangesLoaded:timeRangeExpectedToLoad:forMediaSelection:]
  -[ICAVAssetDownloadURLSession enqueueAggregateAssetDownloadRequest:toDestination:withAVURLAsset:options:completionHandler:]
  -[ICAVAssetDownloadURLSession _createURLSessionWithConfiguration:]


ICRemoteRequestOperationExecutionContext : NSObject <NSSecureCoding>
 @property  ICRemoteRequestOperation *remoteRequestOperation
 @property  long long qualityOfService

  // class methods
  +[ICRemoteRequestOperationExecutionContext supportsSecureCoding]

  // instance methods
  -[ICRemoteRequestOperationExecutionContext initWithCoder:]
  -[ICRemoteRequestOperationExecutionContext qualityOfService]
  -[ICRemoteRequestOperationExecutionContext .cxx_destruct]
  -[ICRemoteRequestOperationExecutionContext setQualityOfService:]
  -[ICRemoteRequestOperationExecutionContext remoteRequestOperation]
  -[ICRemoteRequestOperationExecutionContext initWithRemoteRequestOperation:]
  -[ICRemoteRequestOperationExecutionContext encodeWithCoder:]


ICUserVerificationOperation : ICAsyncOperation
 @property  ICUserVerificationRequest *verificationRequest
 @property  @? responseHandler

  // class methods
  +[ICUserVerificationOperation operationWithVerificationRequest:]

  // instance methods
  -[ICUserVerificationOperation .cxx_destruct]
  -[ICUserVerificationOperation responseHandler]
  -[ICUserVerificationOperation setResponseHandler:]
  -[ICUserVerificationOperation execute]
  -[ICUserVerificationOperation verificationRequest]


ICSQLiteRow : NSObject
 @property  long long numberOfColumns

  // instance methods
  -[ICSQLiteRow dataForColumnName:]
  -[ICSQLiteRow intForColumnIndex:]
  -[ICSQLiteRow intForColumnName:]
  -[ICSQLiteRow initWithStatement:]
  -[ICSQLiteRow int64ForColumnIndex:]
  -[ICSQLiteRow stringForColumnIndex:]
  -[ICSQLiteRow numberForColumnIndex:]
  -[ICSQLiteRow doubleForColumnIndex:]
  -[ICSQLiteRow stringForColumnName:]
  -[ICSQLiteRow numberOfColumns]
  -[ICSQLiteRow doubleForColumnName:]
  -[ICSQLiteRow numberForColumnName:]
  -[ICSQLiteRow dataForColumnIndex:]
  -[ICSQLiteRow .cxx_destruct]
  -[ICSQLiteRow int64ForColumnName:]
  -[ICSQLiteRow columnIndexForColumnName:]


ICRadioGetTracksRequest : NSObject <NSCopying>
 @property  NSDictionary *additionalRequestParameters
 @property  BOOL allowsExplicitContent
 @property  NSArray *playActivityEvents
 @property  ICRadioPlaybackHistory *playbackContext
 @property  BOOL preservingCurrentlyPlayingItem
 @property  NSNumber *privateListeningEnabled
 @property  NSNumber *delegatedPrivateListeningEnabled
 @property  long long reasonType
 @property  ICStoreRequestContext *requestContext
 @property  BOOL shouldResponseContainStationMetadata
 @property  long long requestedTrackCount
 @property  NSString *stationHash
 @property  long long stationID
 @property  NSString *stationStringID
 @property  NSURL *stationURL
 @property  NSString *stationPlaybackAuthorizationToken
 @property  ICRadioContentReference *seedContentReference
 @property  ICRadioContentReference *nowPlayingContentReference
 @property  NSArray *queueContentReferences

  // instance methods
  -[ICRadioGetTracksRequest setReasonType:]
  -[ICRadioGetTracksRequest playActivityEvents]
  -[ICRadioGetTracksRequest setPlayActivityEvents:]
  -[ICRadioGetTracksRequest .cxx_destruct]
  -[ICRadioGetTracksRequest setPrivateListeningEnabled:]
  -[ICRadioGetTracksRequest init]
  -[ICRadioGetTracksRequest allowsExplicitContent]
  -[ICRadioGetTracksRequest stationStringID]
  -[ICRadioGetTracksRequest stationHash]
  -[ICRadioGetTracksRequest setStationID:]
  -[ICRadioGetTracksRequest performWithResponseHandler:]
  -[ICRadioGetTracksRequest stationID]
  -[ICRadioGetTracksRequest setStationHash:]
  -[ICRadioGetTracksRequest reasonType]
  -[ICRadioGetTracksRequest setStationURL:]
  -[ICRadioGetTracksRequest requestContext]
  -[ICRadioGetTracksRequest setStationStringID:]
  -[ICRadioGetTracksRequest setRequestContext:]
  -[ICRadioGetTracksRequest copyWithZone:]
  -[ICRadioGetTracksRequest isPrivateListeningEnabled]
  -[ICRadioGetTracksRequest stationURL]
  -[ICRadioGetTracksRequest setDelegatedPrivateListeningEnabled:]
  -[ICRadioGetTracksRequest seedContentReference]
  -[ICRadioGetTracksRequest shouldResponseContainStationMetadata]
  -[ICRadioGetTracksRequest nowPlayingContentReference]
  -[ICRadioGetTracksRequest queueContentReferences]
  -[ICRadioGetTracksRequest playbackContext]
  -[ICRadioGetTracksRequest isPreservingCurrentlyPlayingItem]
  -[ICRadioGetTracksRequest additionalRequestParameters]
  -[ICRadioGetTracksRequest setAdditionalRequestParameters:]
  -[ICRadioGetTracksRequest setAllowsExplicitContent:]
  -[ICRadioGetTracksRequest setPlaybackContext:]
  -[ICRadioGetTracksRequest setPreservingCurrentlyPlayingItem:]
  -[ICRadioGetTracksRequest isDelegatedPrivateListeningEnabled]
  -[ICRadioGetTracksRequest setShouldResponseContainStationMetadata:]
  -[ICRadioGetTracksRequest requestedTrackCount]
  -[ICRadioGetTracksRequest setRequestedTrackCount:]
  -[ICRadioGetTracksRequest stationPlaybackAuthorizationToken]
  -[ICRadioGetTracksRequest setStationPlaybackAuthorizationToken:]
  -[ICRadioGetTracksRequest setSeedContentReference:]
  -[ICRadioGetTracksRequest setNowPlayingContentReference:]
  -[ICRadioGetTracksRequest setQueueContentReferences:]


ICIAMMessageRule : PBCodable <NSCopying>
 @property  BOOL hasIdentifier
 @property  NSString *identifier
 @property  BOOL hasType
 @property  int type
 @property  BOOL hasRuleOperator
 @property  int ruleOperator
 @property  NSMutableArray *subrules
 @property  BOOL hasTriggerCondition
 @property  ICIAMTriggerCondition *triggerCondition
 @property  BOOL hasTriggerEventName
 @property  NSString *triggerEventName
 @property  BOOL hasRequiredApplicationContextBundleIdentifier
 @property  NSString *requiredApplicationContextBundleIdentifier

  // class methods
  +[ICIAMMessageRule subrulesType]

  // instance methods
  -[ICIAMMessageRule mergeFrom:]
  -[ICIAMMessageRule setType:]
  -[ICIAMMessageRule .cxx_destruct]
  -[ICIAMMessageRule dictionaryRepresentation]
  -[ICIAMMessageRule writeTo:]
  -[ICIAMMessageRule setHasType:]
  -[ICIAMMessageRule hasType]
  -[ICIAMMessageRule isEqual:]
  -[ICIAMMessageRule copyTo:]
  -[ICIAMMessageRule typeAsString:]
  -[ICIAMMessageRule readFrom:]
  -[ICIAMMessageRule identifier]
  -[ICIAMMessageRule StringAsType:]
  -[ICIAMMessageRule subrules]
  -[ICIAMMessageRule type]
  -[ICIAMMessageRule setIdentifier:]
  -[ICIAMMessageRule hasIdentifier]
  -[ICIAMMessageRule copyWithZone:]
  -[ICIAMMessageRule addSubrules:]
  -[ICIAMMessageRule subrulesCount]
  -[ICIAMMessageRule clearSubrules]
  -[ICIAMMessageRule subrulesAtIndex:]
  -[ICIAMMessageRule setTriggerCondition:]
  -[ICIAMMessageRule setTriggerEventName:]
  -[ICIAMMessageRule setRequiredApplicationContextBundleIdentifier:]
  -[ICIAMMessageRule ruleOperator]
  -[ICIAMMessageRule setRuleOperator:]
  -[ICIAMMessageRule setHasRuleOperator:]
  -[ICIAMMessageRule hasRuleOperator]
  -[ICIAMMessageRule ruleOperatorAsString:]
  -[ICIAMMessageRule StringAsRuleOperator:]
  -[ICIAMMessageRule hasTriggerCondition]
  -[ICIAMMessageRule hasTriggerEventName]
  -[ICIAMMessageRule hasRequiredApplicationContextBundleIdentifier]
  -[ICIAMMessageRule setSubrules:]
  -[ICIAMMessageRule triggerCondition]
  -[ICIAMMessageRule triggerEventName]
  -[ICIAMMessageRule requiredApplicationContextBundleIdentifier]


ICCloudServerListenerEndpointProvider : NSObject <ICCloudServerListenerEndpointProviding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ICCloudServerListenerEndpointProvider listenerEndpointForService:error:]
  -[ICCloudServerListenerEndpointProvider .cxx_destruct]
  -[ICCloudServerListenerEndpointProvider init]
  -[ICCloudServerListenerEndpointProvider _listenerEndpointProviderConnection]
  -[ICCloudServerListenerEndpointProvider dealloc]


ICSuzeLeaseRequest : NSObject <NSCopying>
 @property  NSData *clientData
 @property  NSString *leaseID
 @property  long long mediaType
 @property  long long qualityOfService
 @property  ICStoreRequestContext *requestContext
 @property  long long requestType

  // instance methods
  -[ICSuzeLeaseRequest qualityOfService]
  -[ICSuzeLeaseRequest .cxx_destruct]
  -[ICSuzeLeaseRequest clientData]
  -[ICSuzeLeaseRequest setQualityOfService:]
  -[ICSuzeLeaseRequest leaseID]
  -[ICSuzeLeaseRequest requestType]
  -[ICSuzeLeaseRequest performWithResponseHandler:]
  -[ICSuzeLeaseRequest requestContext]
  -[ICSuzeLeaseRequest mediaType]
  -[ICSuzeLeaseRequest copyWithZone:]
  -[ICSuzeLeaseRequest initWithRequestContext:requestType:leaseID:mediaType:clientData:]


ICPAPlayActivityEnqueuerProperties : PBCodable <NSCopying>
  // instance methods
  -[ICPAPlayActivityEnqueuerProperties .cxx_destruct]
  -[ICPAPlayActivityEnqueuerProperties dictionaryRepresentation]
  -[ICPAPlayActivityEnqueuerProperties writeTo:]
  -[ICPAPlayActivityEnqueuerProperties isEqual:]
  -[ICPAPlayActivityEnqueuerProperties readFrom:]
  -[ICPAPlayActivityEnqueuerProperties copyWithZone:]


ICPAPlayActivityEvent : PBCodable <NSCopying>
  // instance methods
  -[ICPAPlayActivityEvent .cxx_destruct]
  -[ICPAPlayActivityEvent dictionaryRepresentation]
  -[ICPAPlayActivityEvent writeTo:]
  -[ICPAPlayActivityEvent isEqual:]
  -[ICPAPlayActivityEvent readFrom:]
  -[ICPAPlayActivityEvent copyWithZone:]


ICPlayActivityEventContainerIDs : NSObject <NSSecureCoding, NSCopying, NSMutableCopying, NSSecureCoding>
 @property  long long adamID
 @property  NSString *cloudAlbumID
 @property  unsigned long cloudPlaylistID
 @property  NSString *globalPlaylistID
 @property  NSString *playlistVersionHash
 @property  NSString *stationHash
 @property  NSString *stationStringID
 @property  long long stationID

  // class methods
  +[ICPlayActivityEventContainerIDs supportsSecureCoding]

  // instance methods
  -[ICPlayActivityEventContainerIDs adamID]
  -[ICPlayActivityEventContainerIDs initWithCoder:]
  -[ICPlayActivityEventContainerIDs cloudAlbumID]
  -[ICPlayActivityEventContainerIDs globalPlaylistID]
  -[ICPlayActivityEventContainerIDs .cxx_destruct]
  -[ICPlayActivityEventContainerIDs stationStringID]
  -[ICPlayActivityEventContainerIDs stationHash]
  -[ICPlayActivityEventContainerIDs stationID]
  -[ICPlayActivityEventContainerIDs playlistVersionHash]
  -[ICPlayActivityEventContainerIDs cloudPlaylistID]
  -[ICPlayActivityEventContainerIDs mutableCopyWithZone:]
  -[ICPlayActivityEventContainerIDs _copyWithClass:]
  -[ICPlayActivityEventContainerIDs copyWithZone:]
  -[ICPlayActivityEventContainerIDs encodeWithCoder:]


ICMutablePlayActivityEventContainerIDs : ICPlayActivityEventContainerIDs
 @property  long long adamID
 @property  NSString *cloudAlbumID
 @property  unsigned long cloudPlaylistID
 @property  NSString *globalPlaylistID
 @property  NSString *playlistVersionHash
 @property  NSString *stationHash
 @property  NSString *stationStringID
 @property  long long stationID

  // instance methods
  -[ICMutablePlayActivityEventContainerIDs setGlobalPlaylistID:]
  -[ICMutablePlayActivityEventContainerIDs setCloudAlbumID:]
  -[ICMutablePlayActivityEventContainerIDs setPlaylistVersionHash:]
  -[ICMutablePlayActivityEventContainerIDs setCloudPlaylistID:]
  -[ICMutablePlayActivityEventContainerIDs setStationID:]
  -[ICMutablePlayActivityEventContainerIDs setStationHash:]
  -[ICMutablePlayActivityEventContainerIDs setStationStringID:]
  -[ICMutablePlayActivityEventContainerIDs copyWithZone:]
  -[ICMutablePlayActivityEventContainerIDs setAdamID:]


ICDelegationServicePairingSession : NSObject
 @property  <ICDelegationServicePairingSessionDelegate> *delegate
 @property  long long role
 @property  ICDelegationServiceSecuritySettings *securitySettings

  // instance methods
  -[ICDelegationServicePairingSession .cxx_destruct]
  -[ICDelegationServicePairingSession setDelegate:]
  -[ICDelegationServicePairingSession role]
  -[ICDelegationServicePairingSession delegate]
  -[ICDelegationServicePairingSession dealloc]
  -[ICDelegationServicePairingSession securitySettings]
  -[ICDelegationServicePairingSession receievedData:]
  -[ICDelegationServicePairingSession getDecryptedDataForEncryptedData:withCompletionHandler:]
  -[ICDelegationServicePairingSession initWithRole:securitySettings:]
  -[ICDelegationServicePairingSession prepareEncryptedSessionWithCompletionHandler:]
  -[ICDelegationServicePairingSession getEncryptedDataForData:withCompletionHandler:]
  -[ICDelegationServicePairingSession _handlePairingSessionCompletionWithError:]
  -[ICDelegationServicePairingSession _receivedData:]
  -[ICDelegationServicePairingSession _encryptedDataForData:]
  -[ICDelegationServicePairingSession _deriveEncryptionKeysReturningError:]
  -[ICDelegationServicePairingSession _sendData:withCompletionHandler:]


ICURLBagMonitor : NSObject <ICEnvironmentMonitorObserver>
 @property  ICURLBag *bag
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ICURLBagMonitor sharedBagMonitor]

  // instance methods
  -[ICURLBagMonitor environmentMonitorDidChangeNetworkReachability:]
  -[ICURLBagMonitor _description]
  -[ICURLBagMonitor .cxx_destruct]
  -[ICURLBagMonitor bag]
  -[ICURLBagMonitor _handleUserIdentityStoreDidChange:]
  -[ICURLBagMonitor _init]
  -[ICURLBagMonitor dealloc]
  -[ICURLBagMonitor _endObservingBag]
  -[ICURLBagMonitor _beginObservingBag]
  -[ICURLBagMonitor _requestBagWithPolicy:completionHandler:]
  -[ICURLBagMonitor _invalidateBagExpirationTimer]
  -[ICURLBagMonitor _handleBagExpirationTimerFired]
  -[ICURLBagMonitor _scheduleBagExpirationTimerForDate:]
  -[ICURLBagMonitor _updateWithBag:]
  -[ICURLBagMonitor beginObservingBagWithHandler:]
  -[ICURLBagMonitor endObservingBagWithToken:]


ICBook : NSObject <NSSecureCoding>
 @property  unsigned long purchaseHistoryID
 @property  unsigned long storeID
 @property  NSString *title
 @property  NSString *author
 @property  NSString *genre
 @property  NSDate *datePurchased
 @property  NSURL *artworkURL
 @property  NSString *redownloadParameters
 @property  BOOL vppLicensed
 @property  NSString *vppOrganizationID
 @property  NSString *vppOrganizationDisplayName

  // class methods
  +[ICBook supportsSecureCoding]

  // instance methods
  -[ICBook artworkURL]
  -[ICBook setStoreID:]
  -[ICBook setArtworkURL:]
  -[ICBook setGenre:]
  -[ICBook initWithCoder:]
  -[ICBook genre]
  -[ICBook storeID]
  -[ICBook setTitle:]
  -[ICBook .cxx_destruct]
  -[ICBook isVPPLicensed]
  -[ICBook author]
  -[ICBook title]
  -[ICBook redownloadParameters]
  -[ICBook setRedownloadParameters:]
  -[ICBook datePurchased]
  -[ICBook setAuthor:]
  -[ICBook setDatePurchased:]
  -[ICBook encodeWithCoder:]
  -[ICBook setPurchaseHistoryID:]
  -[ICBook setVppLicensed:]
  -[ICBook setVppOrganizationID:]
  -[ICBook setVppOrganizationDisplayName:]
  -[ICBook purchaseHistoryID]
  -[ICBook vppOrganizationID]
  -[ICBook vppOrganizationDisplayName]


ICRadioLikeRequest : NSObject <NSCopying>
 @property  long long storeAdamID
 @property  long long likeState
 @property  NSString *stationHash
 @property  long long stationID
 @property  NSString *stationStringID
 @property  long long qualityOfService
 @property  ICStoreRequestContext *requestContext

  // instance methods
  -[ICRadioLikeRequest qualityOfService]
  -[ICRadioLikeRequest .cxx_destruct]
  -[ICRadioLikeRequest initWithRequestContext:]
  -[ICRadioLikeRequest setQualityOfService:]
  -[ICRadioLikeRequest stationStringID]
  -[ICRadioLikeRequest stationHash]
  -[ICRadioLikeRequest setStationID:]
  -[ICRadioLikeRequest performWithResponseHandler:]
  -[ICRadioLikeRequest stationID]
  -[ICRadioLikeRequest setStationHash:]
  -[ICRadioLikeRequest setStoreAdamID:]
  -[ICRadioLikeRequest requestContext]
  -[ICRadioLikeRequest setStationStringID:]
  -[ICRadioLikeRequest storeAdamID]
  -[ICRadioLikeRequest setRequestContext:]
  -[ICRadioLikeRequest copyWithZone:]
  -[ICRadioLikeRequest likeState]
  -[ICRadioLikeRequest setLikeState:]


ICAuthorizeMachineURLRequest : ICStoreURLRequest
 @property  NSString *keybagPath
 @property  NSString *reason
 @property  NSData *tokenData

  // instance methods
  -[ICAuthorizeMachineURLRequest .cxx_destruct]
  -[ICAuthorizeMachineURLRequest setTokenData:]
  -[ICAuthorizeMachineURLRequest tokenData]
  -[ICAuthorizeMachineURLRequest keybagPath]
  -[ICAuthorizeMachineURLRequest reason]
  -[ICAuthorizeMachineURLRequest setReason:]
  -[ICAuthorizeMachineURLRequest setKeybagPath:]
  -[ICAuthorizeMachineURLRequest buildStoreURLRequestWithURLRequest:builderProperties:completionHandler:]


ICDelegationConsumerServiceSessionRequestResult : NSObject
 @property  ICDelegateToken *delegateToken
 @property  NSError *resultError
 @property  NSString *storefrontIdentifier

  // instance methods
  -[ICDelegationConsumerServiceSessionRequestResult .cxx_destruct]
  -[ICDelegationConsumerServiceSessionRequestResult resultError]
  -[ICDelegationConsumerServiceSessionRequestResult delegateToken]
  -[ICDelegationConsumerServiceSessionRequestResult storefrontIdentifier]
  -[ICDelegationConsumerServiceSessionRequestResult initWithDelegateToken:storefrontIdentifier:resultError:]


ICPBDGSStartDelegationResponse : PBCodable <NSCopying>
  // instance methods
  -[ICPBDGSStartDelegationResponse .cxx_destruct]
  -[ICPBDGSStartDelegationResponse dictionaryRepresentation]
  -[ICPBDGSStartDelegationResponse writeTo:]
  -[ICPBDGSStartDelegationResponse isEqual:]
  -[ICPBDGSStartDelegationResponse readFrom:]
  -[ICPBDGSStartDelegationResponse copyWithZone:]


ICAddToWishListResponse : NSObject
 @property  long long statusCode
 @property  NSString *message

  // instance methods
  -[ICAddToWishListResponse initWithResponseDictionary:]
  -[ICAddToWishListResponse .cxx_destruct]
  -[ICAddToWishListResponse message]
  -[ICAddToWishListResponse statusCode]


_ICLLRevisionHash : PBCodable <NSCopying>
  // instance methods
  -[_ICLLRevisionHash .cxx_destruct]
  -[_ICLLRevisionHash dictionaryRepresentation]
  -[_ICLLRevisionHash writeTo:]
  -[_ICLLRevisionHash isEqual:]
  -[_ICLLRevisionHash readFrom:]
  -[_ICLLRevisionHash copyWithZone:]


_ICLLMediaInfo : PBCodable <NSCopying>
  // instance methods
  -[_ICLLMediaInfo .cxx_destruct]
  -[_ICLLMediaInfo dictionaryRepresentation]
  -[_ICLLMediaInfo writeTo:]
  -[_ICLLMediaInfo isEqual:]
  -[_ICLLMediaInfo readFrom:]
  -[_ICLLMediaInfo copyWithZone:]


ICMusicKitURLResponseHandler : ICURLResponseHandler
  // instance methods
  -[ICMusicKitURLResponseHandler _invalidateDeveloperTokenForInitialResponse:toRequest:withCompletionHandler:]
  -[ICMusicKitURLResponseHandler _updateRequest:forProcessedResponseOfStoreURLRequest:]
  -[ICMusicKitURLResponseHandler processCompletedResponse:toRequest:withCompletionHandler:]
  -[ICMusicKitURLResponseHandler processInitialResponse:toRequest:withCompletionHandler:]
  -[ICMusicKitURLResponseHandler _invalidateUserTokenForInitialResponse:toRequest:withCompletionHandler:]


ICPBDGSResponse : PBCodable <NSCopying>
  // instance methods
  -[ICPBDGSResponse .cxx_destruct]
  -[ICPBDGSResponse dictionaryRepresentation]
  -[ICPBDGSResponse writeTo:]
  -[ICPBDGSResponse isEqual:]
  -[ICPBDGSResponse readFrom:]
  -[ICPBDGSResponse copyWithZone:]


ICAuthorizeMachineRequest : NSObject <NSCopying>
 @property  NSString *keybagPath
 @property  long long qualityOfService
 @property  NSString *reason
 @property  ICStoreRequestContext *requestContext
 @property  NSData *tokenData

  // instance methods
  -[ICAuthorizeMachineRequest qualityOfService]
  -[ICAuthorizeMachineRequest .cxx_destruct]
  -[ICAuthorizeMachineRequest setTokenData:]
  -[ICAuthorizeMachineRequest tokenData]
  -[ICAuthorizeMachineRequest initWithRequestContext:]
  -[ICAuthorizeMachineRequest setQualityOfService:]
  -[ICAuthorizeMachineRequest keybagPath]
  -[ICAuthorizeMachineRequest performWithResponseHandler:]
  -[ICAuthorizeMachineRequest reason]
  -[ICAuthorizeMachineRequest requestContext]
  -[ICAuthorizeMachineRequest setRequestContext:]
  -[ICAuthorizeMachineRequest setReason:]
  -[ICAuthorizeMachineRequest copyWithZone:]
  -[ICAuthorizeMachineRequest setKeybagPath:]


ICLibraryAuthServiceClientTokenProvider : NSObject <ICLibraryAuthServiceClientTokenProviderProtocol, NSXPCListenerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ICLibraryAuthServiceClientTokenProvider sharedProvider]

  // instance methods
  -[ICLibraryAuthServiceClientTokenProvider _removeConnection:]
  -[ICLibraryAuthServiceClientTokenProvider getTokenStatusForDSIDs:forcingRefresh:completion:]
  -[ICLibraryAuthServiceClientTokenProvider getAllTokenStatusForAssistantForcingRefresh:completion:]
  -[ICLibraryAuthServiceClientTokenProvider _handleLibraryAuthServiceClientTokenDidChangeDistributedNotification:]
  -[ICLibraryAuthServiceClientTokenProvider _clientConnection]
  -[ICLibraryAuthServiceClientTokenProvider _refreshTokensForDSIDs:forExternalRequest:completion:]
  -[ICLibraryAuthServiceClientTokenProvider _updateEntriesForAccountsChanges]
  -[ICLibraryAuthServiceClientTokenProvider getTokenResultForDSID:forceRefresh:completion:]
  -[ICLibraryAuthServiceClientTokenProvider .cxx_destruct]
  -[ICLibraryAuthServiceClientTokenProvider getTokenForDSID:forceRefresh:completion:]
  -[ICLibraryAuthServiceClientTokenProvider addTokenResult:forDSID:completion:]
  -[ICLibraryAuthServiceClientTokenProvider startService]
  -[ICLibraryAuthServiceClientTokenProvider _refreshTokenForDSID:forExternalRequest:completion:]
  -[ICLibraryAuthServiceClientTokenProvider stopService]
  -[ICLibraryAuthServiceClientTokenProvider _updateTokenCacheEntryForDSID:tokenResult:error:]
  -[ICLibraryAuthServiceClientTokenProvider init]
  -[ICLibraryAuthServiceClientTokenProvider _loadCache]
  -[ICLibraryAuthServiceClientTokenProvider cachedTokenAndResetCache:]
  -[ICLibraryAuthServiceClientTokenProvider getTokenResultsForDSIDs:forceRefresh:completion:]
  -[ICLibraryAuthServiceClientTokenProvider _shouldStopBackgroundRefreshForError:]
  -[ICLibraryAuthServiceClientTokenProvider _isPrivacyAcknowledgementRequired]
  -[ICLibraryAuthServiceClientTokenProvider _addConnection:]
  -[ICLibraryAuthServiceClientTokenProvider _commitCache]
  -[ICLibraryAuthServiceClientTokenProvider getAllTokensForAssistantForcingRefresh:completion:]
  -[ICLibraryAuthServiceClientTokenProvider _handleUserIdentityStoreDidChangeNotification:]
  -[ICLibraryAuthServiceClientTokenProvider getTokenForcingRefresh:completion:]
  -[ICLibraryAuthServiceClientTokenProvider dealloc]
  -[ICLibraryAuthServiceClientTokenProvider getTokenStatusForcingRefresh:completion:]
  -[ICLibraryAuthServiceClientTokenProvider listener:shouldAcceptNewConnection:]
  -[ICLibraryAuthServiceClientTokenProvider _updateRefreshTimer]


ICSQLitePreparedStatement : NSObject
 @property  r^v connectionPointer
 @property  NSString *SQL

  // instance methods
  -[ICSQLitePreparedStatement SQL]
  -[ICSQLitePreparedStatement .cxx_destruct]
  -[ICSQLitePreparedStatement connectionPointer]
  -[ICSQLitePreparedStatement initWithConnection:SQL:]


ICPlayInfoRequest : ICRequestOperation
 @property  NSString *playerGUID
 @property  NSData *SICData
 @property  NSArray *sinfs
 @property  NSNumber *DSID
 @property  NSNumber *contentIdentifier
 @property  NSString *subscriptionPlaybackType

  // instance methods
  -[ICPlayInfoRequest sinfs]
  -[ICPlayInfoRequest setDSID:]
  -[ICPlayInfoRequest DSID]
  -[ICPlayInfoRequest .cxx_destruct]
  -[ICPlayInfoRequest initWithRequestContext:]
  -[ICPlayInfoRequest setPlayerGUID:]
  -[ICPlayInfoRequest setSICData:]
  -[ICPlayInfoRequest SICData]
  -[ICPlayInfoRequest execute]
  -[ICPlayInfoRequest playerGUID]
  -[ICPlayInfoRequest performWithResponseHandler:]
  -[ICPlayInfoRequest contentIdentifier]
  -[ICPlayInfoRequest setContentIdentifier:]
  -[ICPlayInfoRequest setSinfs:]
  -[ICPlayInfoRequest _getSinfParamValue:]
  -[ICPlayInfoRequest _hasRentalInfo]
  -[ICPlayInfoRequest subscriptionPlaybackType]
  -[ICPlayInfoRequest setSubscriptionPlaybackType:]


ICPrivacyInfo : NSObject
 @property  BOOL privacyAcknowledgementRequiredForMedia
 @property  BOOL privacyAcknowledgementRequiredForMusic

  // class methods
  +[ICPrivacyInfo _onboardingKitPrivacyIdentifierForPrivacyIdentifier:]
  +[ICPrivacyInfo sharedPrivacyInfo]
  +[ICPrivacyInfo _queryPrivacyAcknowledgementRequiredForIdentifier:]

  // instance methods
  -[ICPrivacyInfo privacyAcknowledgementRequiredForMedia]
  -[ICPrivacyInfo endObservingPrivacyAcknowledgementForIdentifier:withToken:]
  -[ICPrivacyInfo _updateForPrivacyAcknowledgementChanged]
  -[ICPrivacyInfo .cxx_destruct]
  -[ICPrivacyInfo privacyAcknowledgementRequiredForBundleIdentifier:]
  -[ICPrivacyInfo init]
  -[ICPrivacyInfo _privacyAcknowledgementRequiredForIdentifier:]
  -[ICPrivacyInfo beginObservingPrivacyAcknowledgementForIdentifier:handler:]
  -[ICPrivacyInfo privacyAcknowledgementRequiredForMusic]
  -[ICPrivacyInfo acknowledgePrivacyPolicyForIdentifier:completionHandler:]
  -[ICPrivacyInfo _handleUserIdentityStoreDidChangeNotification:]
  -[ICPrivacyInfo privacyAcknowledgementRequiredForIdentifier:]


ICUserCredentialRequest : NSObject <NSCopying>
 @property  ICUserIdentity *identity
 @property  ICUserIdentityStore *identityStore
 @property  ICClientInfo *clientInfo
 @property  long long qualityOfService
 @property  double timeoutInterval

  // instance methods
  -[ICUserCredentialRequest qualityOfService]
  -[ICUserCredentialRequest .cxx_destruct]
  -[ICUserCredentialRequest clientInfo]
  -[ICUserCredentialRequest setQualityOfService:]
  -[ICUserCredentialRequest timeoutInterval]
  -[ICUserCredentialRequest identity]
  -[ICUserCredentialRequest initWithIdentity:identityStore:clientInfo:]
  -[ICUserCredentialRequest identityStore]
  -[ICUserCredentialRequest copyWithZone:]
  -[ICUserCredentialRequest setTimeoutInterval:]


ICRadioLikeResponse : ICRadioResponse
 @property  BOOL shouldFlushTrackCache

  // instance methods
  -[ICRadioLikeResponse shouldFlushTrackCache]


ICStoreHLSAssetInfo : NSObject <NSCopying>
 @property  NSURL *playlistURL
 @property  NSURL *keyCertificateURL
 @property  NSURL *keyServerURL
 @property  NSString *keyServerProtocolType
 @property  NSNumber *keyServerAdamID
 @property  BOOL iTunesStoreStream
 @property  NSSet *audioTraits
 @property  NSURL *alternatePlaylistURL
 @property  NSURL *alternateKeyCertificateURL
 @property  NSURL *alternateKeyServerURL

  // instance methods
  -[ICStoreHLSAssetInfo audioTraits]
  -[ICStoreHLSAssetInfo .cxx_destruct]
  -[ICStoreHLSAssetInfo initWithItemResponseDictionary:]
  -[ICStoreHLSAssetInfo setKeyServerURL:]
  -[ICStoreHLSAssetInfo keyServerURL]
  -[ICStoreHLSAssetInfo setITunesStoreStream:]
  -[ICStoreHLSAssetInfo copyWithZone:]
  -[ICStoreHLSAssetInfo playlistURL]
  -[ICStoreHLSAssetInfo keyCertificateURL]
  -[ICStoreHLSAssetInfo keyServerProtocolType]
  -[ICStoreHLSAssetInfo keyServerAdamID]
  -[ICStoreHLSAssetInfo alternatePlaylistURL]
  -[ICStoreHLSAssetInfo alternateKeyCertificateURL]
  -[ICStoreHLSAssetInfo alternateKeyServerURL]
  -[ICStoreHLSAssetInfo isiTunesStoreStream]
  -[ICStoreHLSAssetInfo setKeyServerProtocolType:]
  -[ICStoreHLSAssetInfo setKeyCertificateURL:]
  -[ICStoreHLSAssetInfo setKeyServerAdamID:]
  -[ICStoreHLSAssetInfo setPlaylistURL:]
  -[ICStoreHLSAssetInfo setAudioTraits:]


ICPBDGSPlayerInfoContextToken : PBCodable <NSCopying>
  // instance methods
  -[ICPBDGSPlayerInfoContextToken .cxx_destruct]
  -[ICPBDGSPlayerInfoContextToken dictionaryRepresentation]
  -[ICPBDGSPlayerInfoContextToken writeTo:]
  -[ICPBDGSPlayerInfoContextToken isEqual:]
  -[ICPBDGSPlayerInfoContextToken readFrom:]
  -[ICPBDGSPlayerInfoContextToken copyWithZone:]


ICMusicSubscriptionLeaseSession : NSObject
 @property  <ICMusicSubscriptionLeaseSessionDelegate> *delegate
 @property  NSDate *leaseExpirationDate
 @property  BOOL delegatedLeaseSession
 @property  ICStoreRequestContext *requestContext
 @property  ICMusicSubscriptionLeaseStatus *leaseStatus
 @property  BOOL automaticallyRefreshingLease

  // class methods
  +[ICMusicSubscriptionLeaseSession _sharedOperationQueue]

  // instance methods
  -[ICMusicSubscriptionLeaseSession .cxx_destruct]
  -[ICMusicSubscriptionLeaseSession leaseStatus]
  -[ICMusicSubscriptionLeaseSession delegate]
  -[ICMusicSubscriptionLeaseSession requestContext]
  -[ICMusicSubscriptionLeaseSession dealloc]
  -[ICMusicSubscriptionLeaseSession _handlePlaybackLeaseDidEndPushNotification]
  -[ICMusicSubscriptionLeaseSession leaseExpirationDate]
  -[ICMusicSubscriptionLeaseSession beginAutomaticallyRefreshingLease]
  -[ICMusicSubscriptionLeaseSession endAutomaticallyRefreshingLease]
  -[ICMusicSubscriptionLeaseSession _locked_updateAutomaticRefreshProperties]
  -[ICMusicSubscriptionLeaseSession _locked_handlePendingPlaybackLeaseDidEndPushNotificationIfReady]
  -[ICMusicSubscriptionLeaseSession _locked_setLeaseStatus:updatedLeaseExpirationDate:]
  -[ICMusicSubscriptionLeaseSession _newOperationForPlaybackRequest:completionHandler:]
  -[ICMusicSubscriptionLeaseSession isAutomaticallyRefreshingLease]
  -[ICMusicSubscriptionLeaseSession _locked_performAutomaticRefresh]
  -[ICMusicSubscriptionLeaseSession _initWithRequestContext:isDelegatedLeaseSession:delegate:leaseStatus:]
  -[ICMusicSubscriptionLeaseSession performPlaybackRequest:completionHandler:]
  -[ICMusicSubscriptionLeaseSession reloadFairPlayKeyStatusWithCompletionHandler:]
  -[ICMusicSubscriptionLeaseSession _handleRemoteServerDidBecomeLikelyReachable]
  -[ICMusicSubscriptionLeaseSession _receivedUserInteractionEvent]
  -[ICMusicSubscriptionLeaseSession _setLeaseStatus:updatedLeaseExpirationDate:]
  -[ICMusicSubscriptionLeaseSession isDelegatedLeaseSession]


ICKeyedSharedInstanceManager : NSObject
  // instance methods
  -[ICKeyedSharedInstanceManager incrementUsageCountForKey:]
  -[ICKeyedSharedInstanceManager .cxx_destruct]
  -[ICKeyedSharedInstanceManager decrementUsageCountForKey:]
  -[ICKeyedSharedInstanceManager initWithInstantiationHandler:]
  -[ICKeyedSharedInstanceManager sharedInstanceForKey:]


ICCloudClientAvailabilityService : NSObject <ICCloudAvailability>
 @property  NSObject<OS_dispatch_queue> *serialQueue
 @property  NSXPCConnection *xpcConnection
 @property  <ICCloudServerListenerEndpointProviding> *listenerEndpointProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ICCloudClientAvailabilityService canShowCloudMusic]
  -[ICCloudClientAvailabilityService isCellularDataRestricted]
  -[ICCloudClientAvailabilityService isCellularDataRestrictedForStoreApps]
  -[ICCloudClientAvailabilityService hasProperNetworkConditionsToShowCloudMedia]
  -[ICCloudClientAvailabilityService isCellularDataRestrictedForMusic]
  -[ICCloudClientAvailabilityService shouldProhibitVideosActionForCurrentNetworkConditions]
  -[ICCloudClientAvailabilityService canShowCloudVideo]
  -[ICCloudClientAvailabilityService shouldProhibitActionsForCurrentNetworkConditions]
  -[ICCloudClientAvailabilityService shouldProhibitMusicActionForCurrentNetworkConditions]
  -[ICCloudClientAvailabilityService xpcConnection]
  -[ICCloudClientAvailabilityService shouldProhibitStoreAppsActionForCurrentNetworkConditions]
  -[ICCloudClientAvailabilityService listenerEndpointProvider]
  -[ICCloudClientAvailabilityService hasProperNetworkConditionsToPlayMedia]
  -[ICCloudClientAvailabilityService isCellularDataRestrictedForVideos]
  -[ICCloudClientAvailabilityService canShowCloudDownloadButtons]
  -[ICCloudClientAvailabilityService .cxx_destruct]
  -[ICCloudClientAvailabilityService _xpcConnectionWithListenerEndpoint:]
  -[ICCloudClientAvailabilityService initWithListenerEndpointProvider:]
  -[ICCloudClientAvailabilityService serialQueue]


_ICLLPlaybackItemContainer : PBCodable <NSCopying>
  // instance methods
  -[_ICLLPlaybackItemContainer .cxx_destruct]
  -[_ICLLPlaybackItemContainer dictionaryRepresentation]
  -[_ICLLPlaybackItemContainer writeTo:]
  -[_ICLLPlaybackItemContainer isEqual:]
  -[_ICLLPlaybackItemContainer readFrom:]
  -[_ICLLPlaybackItemContainer copyWithZone:]


ICCloudContentTastePBFuseItemPreference : PBCodable <NSCopying>
 @property  int preference
 @property  BOOL hasAdamId
 @property  long long adamId
 @property  BOOL hasExternalId
 @property  NSString *externalId
 @property  BOOL hasCreatedOffsetMillis
 @property  long long createdOffsetMillis
 @property  BOOL hasPreferenceType
 @property  int preferenceType
 @property  BOOL hasActionTimestampMillis
 @property  long long actionTimestampMillis

  // instance methods
  -[ICCloudContentTastePBFuseItemPreference adamId]
  -[ICCloudContentTastePBFuseItemPreference mergeFrom:]
  -[ICCloudContentTastePBFuseItemPreference setAdamId:]
  -[ICCloudContentTastePBFuseItemPreference .cxx_destruct]
  -[ICCloudContentTastePBFuseItemPreference preference]
  -[ICCloudContentTastePBFuseItemPreference dictionaryRepresentation]
  -[ICCloudContentTastePBFuseItemPreference writeTo:]
  -[ICCloudContentTastePBFuseItemPreference isEqual:]
  -[ICCloudContentTastePBFuseItemPreference readFrom:]
  -[ICCloudContentTastePBFuseItemPreference copyWithZone:]
  -[ICCloudContentTastePBFuseItemPreference hasAdamId]
  -[ICCloudContentTastePBFuseItemPreference setExternalId:]
  -[ICCloudContentTastePBFuseItemPreference setHasAdamId:]
  -[ICCloudContentTastePBFuseItemPreference hasExternalId]
  -[ICCloudContentTastePBFuseItemPreference setCreatedOffsetMillis:]
  -[ICCloudContentTastePBFuseItemPreference setHasCreatedOffsetMillis:]
  -[ICCloudContentTastePBFuseItemPreference hasCreatedOffsetMillis]
  -[ICCloudContentTastePBFuseItemPreference preferenceType]
  -[ICCloudContentTastePBFuseItemPreference setPreferenceType:]
  -[ICCloudContentTastePBFuseItemPreference setHasPreferenceType:]
  -[ICCloudContentTastePBFuseItemPreference hasPreferenceType]
  -[ICCloudContentTastePBFuseItemPreference setActionTimestampMillis:]
  -[ICCloudContentTastePBFuseItemPreference setHasActionTimestampMillis:]
  -[ICCloudContentTastePBFuseItemPreference hasActionTimestampMillis]
  -[ICCloudContentTastePBFuseItemPreference setPreference:]
  -[ICCloudContentTastePBFuseItemPreference externalId]
  -[ICCloudContentTastePBFuseItemPreference createdOffsetMillis]
  -[ICCloudContentTastePBFuseItemPreference actionTimestampMillis]


ICPushNotificationsResponse : NSObject
 @property  long long statusCode

  // instance methods
  -[ICPushNotificationsResponse initWithResponseDictionary:]
  -[ICPushNotificationsResponse statusCode]


ICInAppMessageStore : NSObject
  // instance methods
  -[ICInAppMessageStore _load]
  -[ICInAppMessageStore getAllMetadataForBundleIdentifier:completion:]
  -[ICInAppMessageStore allStorePropertiesWithCompletion:]
  -[ICInAppMessageStore removeMessageEntryWithIdentifier:forBundleIdentifier:completion:]
  -[ICInAppMessageStore .cxx_destruct]
  -[ICInAppMessageStore removeAllMetadataForBundleIdentifier:completion:]
  -[ICInAppMessageStore removePendingMessageEventWithIdentifier:completion:]
  -[ICInAppMessageStore removeMessageEntry:completion:]
  -[ICInAppMessageStore init]
  -[ICInAppMessageStore resetStoreWithCompletion:]
  -[ICInAppMessageStore removeMetadataForMessageIdentifier:bundleIdentifier:completion:]
  -[ICInAppMessageStore pendingMessageEventsWithCompletion:]
  -[ICInAppMessageStore addMessageEntry:completion:]
  -[ICInAppMessageStore getStorePropertyForKey:completion:]
  -[ICInAppMessageStore updateMetadata:messageIdentifier:bundleIdentifier:completion:]
  -[ICInAppMessageStore getStorePropertyForKey:bundleIdentifier:completion:]
  -[ICInAppMessageStore updateStoreProperty:forKey:bundleIdentifier:completion:]
  -[ICInAppMessageStore getAllMessageEntriesForBundleIdentifier:completion:]
  -[ICInAppMessageStore getAllMessageEntriesWithCompletion:]
  -[ICInAppMessageStore getAllMessageEntriesForBundleIdentifiers:completion:]
  -[ICInAppMessageStore getAllMetadataForBundleIdentifiers:completion:]
  -[ICInAppMessageStore getMetadataForMessageIdentifier:bundleIdentifier:completion:]
  -[ICInAppMessageStore allApplicationStorePropertiesWithCompletion:]
  -[ICInAppMessageStore getMessageEntryWithIdentifier:bundleIdentifier:completion:]
  -[ICInAppMessageStore updateStoreProperty:forKey:completion:]
  -[ICInAppMessageStore updateMessageEntry:completion:]
  -[ICInAppMessageStore _defaultStoreFilePath]
  -[ICInAppMessageStore initWithFilePath:]
  -[ICInAppMessageStore addPendingMessageEvent:completion:]
  -[ICInAppMessageStore _commit]
  -[ICInAppMessageStore removeAllMessageEntriesForBundleIdentifier:completion:]


ICSuzeLeaseResponse : NSObject
 @property  NSData *clientData
 @property  NSDate *leaseExpirationDate

  // instance methods
  -[ICSuzeLeaseResponse .cxx_destruct]
  -[ICSuzeLeaseResponse clientData]
  -[ICSuzeLeaseResponse leaseExpirationDate]
  -[ICSuzeLeaseResponse initWithResponseDictionary:requestDate:]


ICSAPSessionPrepareFairPlayContextOperation : ICAsyncOperation
 @property  ICSAPSession *sapSession
 @property  @? responseHandler

  // instance methods
  -[ICSAPSessionPrepareFairPlayContextOperation .cxx_destruct]
  -[ICSAPSessionPrepareFairPlayContextOperation setSapSession:]
  -[ICSAPSessionPrepareFairPlayContextOperation responseHandler]
  -[ICSAPSessionPrepareFairPlayContextOperation setResponseHandler:]
  -[ICSAPSessionPrepareFairPlayContextOperation execute]
  -[ICSAPSessionPrepareFairPlayContextOperation _exchangeDataWithSAPContext:requestContext:setupURL:responseData:completionHandler:]
  -[ICSAPSessionPrepareFairPlayContextOperation sapSession]


ICRadioLibraryTrackContentReference : ICRadioContentReference <ICRadioContentReferenceContainable, NSCopying, NSSecureCoding>
 @property  NSString *albumArtistName
 @property  NSString *albumName
 @property  NSString *artistName
 @property  NSString *composerName
 @property  NSString *copyright
 @property  NSNumber *discCount
 @property  NSNumber *discNumber
 @property  NSNumber *fileSize
 @property  NSString *genreName
 @property  NSNumber *compilation
 @property  NSNumber *duration
 @property  NSString *kind
 @property  NSString *name
 @property  NSNumber *storeAdamIdentifier
 @property  NSNumber *storeCloudIdentifier
 @property  NSNumber *trackCount
 @property  NSNumber *trackNumber
 @property  NSNumber *year
 @property  NSString *universalCloudLibraryID
 @property  NSString *containerID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ICRadioLibraryTrackContentReference supportsSecureCoding]

  // instance methods
  -[ICRadioLibraryTrackContentReference setContainerID:]
  -[ICRadioLibraryTrackContentReference albumName]
  -[ICRadioLibraryTrackContentReference setYear:]
  -[ICRadioLibraryTrackContentReference year]
  -[ICRadioLibraryTrackContentReference setGenreName:]
  -[ICRadioLibraryTrackContentReference discNumber]
  -[ICRadioLibraryTrackContentReference albumArtistName]
  -[ICRadioLibraryTrackContentReference artistName]
  -[ICRadioLibraryTrackContentReference genreName]
  -[ICRadioLibraryTrackContentReference setAlbumArtistName:]
  -[ICRadioLibraryTrackContentReference trackCount]
  -[ICRadioLibraryTrackContentReference setTrackNumber:]
  -[ICRadioLibraryTrackContentReference fileSize]
  -[ICRadioLibraryTrackContentReference setComposerName:]
  -[ICRadioLibraryTrackContentReference setAlbumName:]
  -[ICRadioLibraryTrackContentReference name]
  -[ICRadioLibraryTrackContentReference setDiscNumber:]
  -[ICRadioLibraryTrackContentReference trackNumber]
  -[ICRadioLibraryTrackContentReference initWithCoder:]
  -[ICRadioLibraryTrackContentReference setFileSize:]
  -[ICRadioLibraryTrackContentReference discCount]
  -[ICRadioLibraryTrackContentReference copyright]
  -[ICRadioLibraryTrackContentReference .cxx_destruct]
  -[ICRadioLibraryTrackContentReference universalCloudLibraryID]
  -[ICRadioLibraryTrackContentReference setUniversalCloudLibraryID:]
  -[ICRadioLibraryTrackContentReference setDuration:]
  -[ICRadioLibraryTrackContentReference setKind:]
  -[ICRadioLibraryTrackContentReference setCopyright:]
  -[ICRadioLibraryTrackContentReference setName:]
  -[ICRadioLibraryTrackContentReference composerName]
  -[ICRadioLibraryTrackContentReference contentType]
  -[ICRadioLibraryTrackContentReference isCompilation]
  -[ICRadioLibraryTrackContentReference containerID]
  -[ICRadioLibraryTrackContentReference kind]
  -[ICRadioLibraryTrackContentReference setTrackCount:]
  -[ICRadioLibraryTrackContentReference setDiscCount:]
  -[ICRadioLibraryTrackContentReference setCompilation:]
  -[ICRadioLibraryTrackContentReference copyWithZone:]
  -[ICRadioLibraryTrackContentReference duration]
  -[ICRadioLibraryTrackContentReference encodeWithCoder:]
  -[ICRadioLibraryTrackContentReference setArtistName:]
  -[ICRadioLibraryTrackContentReference rawContentDictionaryWithSubscriptionStatus:]
  -[ICRadioLibraryTrackContentReference matchDictionaryWithSubscriptionStatus:]
  -[ICRadioLibraryTrackContentReference storeAdamIdentifier]
  -[ICRadioLibraryTrackContentReference setStoreAdamIdentifier:]
  -[ICRadioLibraryTrackContentReference storeCloudIdentifier]
  -[ICRadioLibraryTrackContentReference setStoreCloudIdentifier:]


_ICLLAddQueueItemsAction : PBCodable <NSCopying>
  // instance methods
  -[_ICLLAddQueueItemsAction .cxx_destruct]
  -[_ICLLAddQueueItemsAction dictionaryRepresentation]
  -[_ICLLAddQueueItemsAction writeTo:]
  -[_ICLLAddQueueItemsAction isEqual:]
  -[_ICLLAddQueueItemsAction readFrom:]
  -[_ICLLAddQueueItemsAction copyWithZone:]


ICDelegationPlayInfoRequest : NSObject <NSCopying>
 @property  NSData *playerAnisetteMID
 @property  NSString *playerDeviceGUID
 @property  NSString *playerUserAgent
 @property  NSArray *tokenRequests
 @property  NSMutableDictionary *propertyListRepresentation

  // instance methods
  -[ICDelegationPlayInfoRequest .cxx_destruct]
  -[ICDelegationPlayInfoRequest propertyListRepresentation]
  -[ICDelegationPlayInfoRequest copyWithZone:]
  -[ICDelegationPlayInfoRequest playerDeviceGUID]
  -[ICDelegationPlayInfoRequest tokenRequests]
  -[ICDelegationPlayInfoRequest playerUserAgent]
  -[ICDelegationPlayInfoRequest playerAnisetteMID]
  -[ICDelegationPlayInfoRequest setPlayerAnisetteMID:]
  -[ICDelegationPlayInfoRequest setPlayerDeviceGUID:]
  -[ICDelegationPlayInfoRequest setPlayerUserAgent:]
  -[ICDelegationPlayInfoRequest setTokenRequests:]


ICDelegationPlayInfoTokenRequest : NSObject <NSCopying>
 @property  NSNumber *DSID
 @property  NSData *cloudCredentialsTokenData
 @property  NSData *SICData
 @property  NSMutableDictionary *propertyListRepresentation

  // instance methods
  -[ICDelegationPlayInfoTokenRequest setDSID:]
  -[ICDelegationPlayInfoTokenRequest DSID]
  -[ICDelegationPlayInfoTokenRequest .cxx_destruct]
  -[ICDelegationPlayInfoTokenRequest setSICData:]
  -[ICDelegationPlayInfoTokenRequest SICData]
  -[ICDelegationPlayInfoTokenRequest propertyListRepresentation]
  -[ICDelegationPlayInfoTokenRequest copyWithZone:]
  -[ICDelegationPlayInfoTokenRequest initWithDSID:SICData:]
  -[ICDelegationPlayInfoTokenRequest cloudCredentialsTokenData]
  -[ICDelegationPlayInfoTokenRequest setCloudCredentialsTokenData:]


ICDefaults : NSObject
 @property  NSUserDefaults *internalDefaults
 @property  NSString *cloudMediaLibraryUID
 @property  NSString *defaultStoreFront
 @property  NSDictionary *cachedSubscriptionStatus
 @property  NSDictionary *cachedMusicUserTokens
 @property  NSDictionary *pushNotificationState
 @property  NSDictionary *mediaLibraryAccessApplicationIdentifiersWithTCCAcceptanceDates
 @property  NSNumber *lastActiveAccountDSID
 @property  NSDictionary *lastCookieHeadersForRevokingMusicUserTokens
 @property  NSDate *lastAllowedInteractiveAuthenticationTime
 @property  NSDictionary *authServiceClientTokenCache
 @property  double lastAuthenticationDialogResponseTime
 @property  NSDictionary *lastKnownLocalStoreAccountProperties
 @property  NSDictionary *lastKnownSubscriptionStatusBaseCacheKey
 @property  NSDictionary *accountNotificationsShowInLibraryDictionary
 @property  NSString *lastKnownHouseholdID
 @property  BOOL shouldForceStreamingOnlyKeysForPlayback
 @property  BOOL automaticDownloadsEnabled
 @property  BOOL ignoreExtendedCertificateValidation
 @property  BOOL bypassBagSanityChecks
 @property  NSString *deviceModelOverride
 @property  NSNumber *deviceClassOverride
 @property  NSNumber *fairPlayDeviceTypeOverride
 @property  NSString *productVersionOverride
 @property  NSString *hardwarePlatformOverride
 @property  NSString *productPlatformOverride
 @property  NSNumber *networkTypeOverride
 @property  BOOL shouldForceiPhoneBehaviors
 @property  NSNumber *authServiceClientTokenTimeToLive
 @property  BOOL shouldRunAgeVerification
 @property  NSDate *ageVerificationExpirationDate
 @property  BOOL explicitContentAllowedForCurrentYear
 @property  BOOL explicitContentAllowedForExpirationYear
 @property  BOOL grazingPathEnabled
 @property  BOOL privacyAcknowledgementDisabledForMusic
 @property  BOOL shouldForcePrivacyAcknowledgementRequiredForMusic
 @property  BOOL shouldForceLibraryRecommendationAnalysis
 @property  BOOL allowLowAffinityRecommendations
 @property  BOOL shouldOverrideSubscriptionStatusToGlide
 @property  BOOL shouldReduceLibraryRecommendationsXPCInterval
 @property  BOOL shouldTreatSubscriptionStatusAsExpired
 @property  BOOL shouldTreatSagaAddComputerCallAsFailed
 @property  BOOL shouldTreatInitialSagaImportAsFailed
 @property  BOOL shouldTreatSubscriptionStatusCheckAsIncomplete
 @property  BOOL legacyStoreCacheBusterEnabled
 @property  BOOL shouldUseNewBagProtocol
 @property  BOOL shouldBypassURLBagCache
 @property  NSNumber *secureKeyRenewalTimeOverride
 @property  NSDictionary *lastKnownUserAgeVerificationState
 @property  BOOL enableMultipathTCP

  // class methods
  +[ICDefaults standardDefaults]

  // instance methods
  -[ICDefaults setShouldForceStreamingOnlyKeysForPlayback:]
  -[ICDefaults deviceClassOverride]
  -[ICDefaults setLastAllowedInteractiveAuthenticationTime:]
  -[ICDefaults bypassBagSanityChecks]
  -[ICDefaults setProductVersionOverride:]
  -[ICDefaults pushNotificationState]
  -[ICDefaults setLastActiveAccountDSID:]
  -[ICDefaults setProductPlatformOverride:]
  -[ICDefaults _shouldSpoofIPadRequestProperties]
  -[ICDefaults setExplicitContentAllowedForCurrentYear:]
  -[ICDefaults setLastKnownHouseholdID:]
  -[ICDefaults shouldRunAgeVerification]
  -[ICDefaults setDeviceModelOverride:]
  -[ICDefaults lastActiveAccountDSID]
  -[ICDefaults isPrivacyAcknowledgementDisabledForMusic]
  -[ICDefaults lastKnownUserAgeVerificationState]
  -[ICDefaults shouldForceLibraryRecommendationAnalysis]
  -[ICDefaults lastAllowedInteractiveAuthenticationTime]
  -[ICDefaults .cxx_destruct]
  -[ICDefaults fairPlayDeviceTypeOverride]
  -[ICDefaults authServiceClientTokenTimeToLive]
  -[ICDefaults setAgeVerificationExpirationDate:]
  -[ICDefaults cachedMusicUserTokens]
  -[ICDefaults isExplicitContentAllowedForCurrentYear]
  -[ICDefaults setLastKnownLocalStoreAccountProperties:]
  -[ICDefaults setDeviceClassOverride:]
  -[ICDefaults _setOrRemoveInternalDefaultsObject:forKey:]
  -[ICDefaults lastKnownSubscriptionStatusBaseCacheKey]
  -[ICDefaults synchronize]
  -[ICDefaults shouldForcePrivacyAcknowledgementRequiredForMusic]
  -[ICDefaults secureKeyRenewalTimeOverride]
  -[ICDefaults shouldForceStreamingOnlyKeysForPlayback]
  -[ICDefaults ageVerificationExpirationDate]
  -[ICDefaults setShouldForcePrivacyAcknowledgementRequiredForMusic:]
  -[ICDefaults setGrazingPathEnabled:]
  -[ICDefaults init]
  -[ICDefaults setCloudMediaLibraryUID:]
  -[ICDefaults isGrazingPathEnabled]
  -[ICDefaults shouldForceiPhoneBehaviors]
  -[ICDefaults shouldTreatSagaAddComputerCallAsFailed]
  -[ICDefaults shouldTreatSubscriptionStatusCheckAsIncomplete]
  -[ICDefaults setLastKnownSubscriptionStatusBaseCacheKey:]
  -[ICDefaults setAccountNotificationsShowInLibraryDictionary:]
  -[ICDefaults setCachedSubscriptionStatus:]
  -[ICDefaults setPushNotificationState:]
  -[ICDefaults isLegacyStoreCacheBusterEnabled]
  -[ICDefaults shouldOverrideSubscriptionStatusToGlide]
  -[ICDefaults authServiceClientTokenCache]
  -[ICDefaults cachedSubscriptionStatus]
  -[ICDefaults hardwarePlatformOverride]
  -[ICDefaults lastKnownHouseholdID]
  -[ICDefaults cloudMediaLibraryUID]
  -[ICDefaults setFairPlayDeviceTypeOverride:]
  -[ICDefaults accountNotificationsShowInLibraryDictionary]
  -[ICDefaults setLastAuthenticationDialogResponseTime:]
  -[ICDefaults _setOrRemoveObject:forKey:]
  -[ICDefaults setIgnoreExtendedCertificateValidation:]
  -[ICDefaults isExplicitContentAllowedForExpirationYear]
  -[ICDefaults _musicUserDefaults]
  -[ICDefaults shouldReduceLibraryRecommendationsXPCInterval]
  -[ICDefaults setLastCookieHeadersForRevokingMusicUserTokens:]
  -[ICDefaults automaticDownloadsEnabled]
  -[ICDefaults shouldBypassURLBagCache]
  -[ICDefaults networkTypeOverride]
  -[ICDefaults setExplicitContentAllowedForExpirationYear:]
  -[ICDefaults setLastKnownUserAgeVerificationState:]
  -[ICDefaults setHardwarePlatformOverride:]
  -[ICDefaults setMediaLibraryAccessApplicationIdentifiersWithTCCAcceptanceDates:]
  -[ICDefaults enableMultipathTCP]
  -[ICDefaults _shouldSpoofIPhoneRequestProperties]
  -[ICDefaults shouldTreatInitialSagaImportAsFailed]
  -[ICDefaults productPlatformOverride]
  -[ICDefaults productVersionOverride]
  -[ICDefaults setAutomaticDownloadsEnabled:]
  -[ICDefaults lastKnownLocalStoreAccountProperties]
  -[ICDefaults ignoreExtendedCertificateValidation]
  -[ICDefaults defaultStoreFront]
  -[ICDefaults deleteAutomaticDownloadsKey]
  -[ICDefaults setAuthServiceClientTokenCache:]
  -[ICDefaults shouldTreatSubscriptionStatusAsExpired]
  -[ICDefaults shouldUseNewBagProtocol]
  -[ICDefaults setShouldRunAgeVerification:]
  -[ICDefaults allowLowAffinityRecommendations]
  -[ICDefaults internalDefaults]
  -[ICDefaults setCachedMusicUserTokens:]
  -[ICDefaults lastAuthenticationDialogResponseTime]
  -[ICDefaults mediaLibraryAccessApplicationIdentifiersWithTCCAcceptanceDates]
  -[ICDefaults lastCookieHeadersForRevokingMusicUserTokens]
  -[ICDefaults deviceModelOverride]


ICMusicSubscriptionPlaybackURLRequest : ICStoreURLRequest
 @property  NSString *assetSourceStorefrontID
 @property  NSString *cloudUniversalLibraryID
 @property  NSString *playbackAuthorizationToken
 @property  BOOL delegatedPlayback
 @property  long long requestType
 @property  unsigned long storeCloudID
 @property  long long storePurchasedAdamID
 @property  long long storeSubscriptionAdamID

  // instance methods
  -[ICMusicSubscriptionPlaybackURLRequest setRequestType:]
  -[ICMusicSubscriptionPlaybackURLRequest _actionType]
  -[ICMusicSubscriptionPlaybackURLRequest .cxx_destruct]
  -[ICMusicSubscriptionPlaybackURLRequest cloudUniversalLibraryID]
  -[ICMusicSubscriptionPlaybackURLRequest storeCloudID]
  -[ICMusicSubscriptionPlaybackURLRequest setStoreCloudID:]
  -[ICMusicSubscriptionPlaybackURLRequest setCloudUniversalLibraryID:]
  -[ICMusicSubscriptionPlaybackURLRequest setStoreSubscriptionAdamID:]
  -[ICMusicSubscriptionPlaybackURLRequest setStorePurchasedAdamID:]
  -[ICMusicSubscriptionPlaybackURLRequest storeSubscriptionAdamID]
  -[ICMusicSubscriptionPlaybackURLRequest storePurchasedAdamID]
  -[ICMusicSubscriptionPlaybackURLRequest requestType]
  -[ICMusicSubscriptionPlaybackURLRequest playbackAuthorizationToken]
  -[ICMusicSubscriptionPlaybackURLRequest setPlaybackAuthorizationToken:]
  -[ICMusicSubscriptionPlaybackURLRequest setAssetSourceStorefrontID:]
  -[ICMusicSubscriptionPlaybackURLRequest assetSourceStorefrontID]
  -[ICMusicSubscriptionPlaybackURLRequest setDelegatedPlayback:]
  -[ICMusicSubscriptionPlaybackURLRequest isDelegatedPlayback]
  -[ICMusicSubscriptionPlaybackURLRequest _signpostRequestInfo]
  -[ICMusicSubscriptionPlaybackURLRequest buildStoreURLRequestWithURLRequest:builderProperties:completionHandler:]


ICRadioPlaybackHistoryItem : NSObject <NSCopying, NSMutableCopying, NSSecureCoding>
 @property  NSDate *expirationDate
 @property  BOOL expired
 @property  NSNumber *pauseTime
 @property  NSDictionary *serverTrackInfo
 @property  NSDate *skipDate
 @property  long long storeIdentifier
 @property  NSMutableDictionary *propertyListRepresentation

  // class methods
  +[ICRadioPlaybackHistoryItem supportsSecureCoding]

  // instance methods
  -[ICRadioPlaybackHistoryItem initWithCoder:]
  -[ICRadioPlaybackHistoryItem .cxx_destruct]
  -[ICRadioPlaybackHistoryItem isExpired]
  -[ICRadioPlaybackHistoryItem initWithTrack:]
  -[ICRadioPlaybackHistoryItem pauseTime]
  -[ICRadioPlaybackHistoryItem isEqual:]
  -[ICRadioPlaybackHistoryItem propertyListRepresentation]
  -[ICRadioPlaybackHistoryItem storeIdentifier]
  -[ICRadioPlaybackHistoryItem skipDate]
  -[ICRadioPlaybackHistoryItem mutableCopyWithZone:]
  -[ICRadioPlaybackHistoryItem copyWithZone:]
  -[ICRadioPlaybackHistoryItem expirationDate]
  -[ICRadioPlaybackHistoryItem encodeWithCoder:]
  -[ICRadioPlaybackHistoryItem serverTrackInfo]


ICMutableRadioPlaybackHistoryItem : ICRadioPlaybackHistoryItem
 @property  NSDate *expirationDate
 @property  NSNumber *pauseTime
 @property  NSDictionary *serverTrackInfo
 @property  NSDate *skipDate
 @property  long long storeIdentifier

  // instance methods
  -[ICMutableRadioPlaybackHistoryItem setExpirationDate:]
  -[ICMutableRadioPlaybackHistoryItem setStoreIdentifier:]
  -[ICMutableRadioPlaybackHistoryItem setPauseTime:]
  -[ICMutableRadioPlaybackHistoryItem setServerTrackInfo:]
  -[ICMutableRadioPlaybackHistoryItem setSkipDate:]


ICDelegationProviderServiceAssertion : NSObject <NSCopying, NSSecureCoding>
 @property  NSDate *expirationDate
 @property  NSString *name
 @property  NSUUID *uniqueIdentifier

  // class methods
  +[ICDelegationProviderServiceAssertion supportsSecureCoding]

  // instance methods
  -[ICDelegationProviderServiceAssertion name]
  -[ICDelegationProviderServiceAssertion uniqueIdentifier]
  -[ICDelegationProviderServiceAssertion initWithCoder:]
  -[ICDelegationProviderServiceAssertion .cxx_destruct]
  -[ICDelegationProviderServiceAssertion initWithName:]
  -[ICDelegationProviderServiceAssertion setExpirationDate:]
  -[ICDelegationProviderServiceAssertion isEqual:]
  -[ICDelegationProviderServiceAssertion copyWithZone:]
  -[ICDelegationProviderServiceAssertion expirationDate]
  -[ICDelegationProviderServiceAssertion encodeWithCoder:]


ICPlayActivityEnqueuerProperties : NSObject <NSSecureCoding, NSCopying, NSMutableCopying, NSSecureCoding>
 @property  NSString *buildVersion
 @property  NSNumber *privateListeningEnabled
 @property  NSString *deviceGUID
 @property  NSString *deviceName
 @property  NSTimeZone *timeZone
 @property  long long systemReleaseType
 @property  BOOL SBEnabled
 @property  unsigned long storeAccountID
 @property  NSString *storeFrontID

  // class methods
  +[ICPlayActivityEnqueuerProperties supportsSecureCoding]

  // instance methods
  -[ICPlayActivityEnqueuerProperties buildVersion]
  -[ICPlayActivityEnqueuerProperties timeZone]
  -[ICPlayActivityEnqueuerProperties initWithCoder:]
  -[ICPlayActivityEnqueuerProperties deviceName]
  -[ICPlayActivityEnqueuerProperties .cxx_destruct]
  -[ICPlayActivityEnqueuerProperties deviceGUID]
  -[ICPlayActivityEnqueuerProperties storeAccountID]
  -[ICPlayActivityEnqueuerProperties isSBEnabled]
  -[ICPlayActivityEnqueuerProperties mutableCopyWithZone:]
  -[ICPlayActivityEnqueuerProperties systemReleaseType]
  -[ICPlayActivityEnqueuerProperties storeFrontID]
  -[ICPlayActivityEnqueuerProperties copyWithZone:]
  -[ICPlayActivityEnqueuerProperties isPrivateListeningEnabled]
  -[ICPlayActivityEnqueuerProperties _copyWithClass:zone:]
  -[ICPlayActivityEnqueuerProperties encodeWithCoder:]


ICMutablePlayActivityEnqueuerProperties : ICPlayActivityEnqueuerProperties
 @property  NSString *buildVersion
 @property  NSString *deviceGUID
 @property  NSString *deviceName
 @property  NSNumber *privateListeningEnabled
 @property  NSTimeZone *timeZone
 @property  long long systemReleaseType
 @property  BOOL SBEnabled
 @property  unsigned long storeAccountID
 @property  NSString *storeFrontID

  // instance methods
  -[ICMutablePlayActivityEnqueuerProperties setBuildVersion:]
  -[ICMutablePlayActivityEnqueuerProperties setTimeZone:]
  -[ICMutablePlayActivityEnqueuerProperties setDeviceName:]
  -[ICMutablePlayActivityEnqueuerProperties setPrivateListeningEnabled:]
  -[ICMutablePlayActivityEnqueuerProperties setStoreFrontID:]
  -[ICMutablePlayActivityEnqueuerProperties setDeviceGUID:]
  -[ICMutablePlayActivityEnqueuerProperties mutableCopyWithZone:]
  -[ICMutablePlayActivityEnqueuerProperties setSystemReleaseType:]
  -[ICMutablePlayActivityEnqueuerProperties setSBEnabled:]
  -[ICMutablePlayActivityEnqueuerProperties setStoreAccountID:]
  -[ICMutablePlayActivityEnqueuerProperties copyWithZone:]


ICSAPSessionAbstractOperation : ICAsyncOperation
 @property  ICSAPSession *sapSession

  // instance methods
  -[ICSAPSessionAbstractOperation .cxx_destruct]
  -[ICSAPSessionAbstractOperation setSapSession:]
  -[ICSAPSessionAbstractOperation execute]
  -[ICSAPSessionAbstractOperation finishWithSAPContextPreparationError:]
  -[ICSAPSessionAbstractOperation sapSession]
  -[ICSAPSessionAbstractOperation finishWithError:]
  -[ICSAPSessionAbstractOperation executeWithSAPContext:]


ICUserNotificationContext : NSObject
 @property  @? completionHandler
 @property  ^{__CFRunLoopSource=} runLoopSourceRef

  // instance methods
  -[ICUserNotificationContext .cxx_destruct]
  -[ICUserNotificationContext setCompletionHandler:]
  -[ICUserNotificationContext completionHandler]
  -[ICUserNotificationContext clearRunLoop]
  -[ICUserNotificationContext runLoopSourceRef]
  -[ICUserNotificationContext setRunLoopSourceRef:]


ICUserNotificationManager : NSObject
  // class methods
  +[ICUserNotificationManager sharedManager]

  // instance methods
  -[ICUserNotificationManager .cxx_destruct]
  -[ICUserNotificationManager init]
  -[ICUserNotificationManager displayUserNotification:withCompletionHandler:]
  -[ICUserNotificationManager _handleCallbackForUserNotification:responseFlags:]


ICAddToWishListRequest : ICRequestOperation
  // instance methods
  -[ICAddToWishListRequest .cxx_destruct]
  -[ICAddToWishListRequest execute]
  -[ICAddToWishListRequest performWithResponseHandler:]
  -[ICAddToWishListRequest initWithRequestContext:buyParams:storeItemID:itemName:itemKind:]
  -[ICAddToWishListRequest initWithRequestContext:platformMetadataItem:]


ICStorePlatformResponseGroup : NSObject <ICStorePlatformResponse>
 @property  NSArray *allItems
 @property  NSNumber *accountIdentifier
 @property  NSNumber *enqueuerAccountIdentifier
 @property  NSDate *expirationDate
 @property  NSString *storefrontIdentifier
 @property  id rawResponse
 @property  NSArray *performanceMetrics
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ICStorePlatformResponseGroup enumerateItemsUsingBlock:]
  -[ICStorePlatformResponseGroup .cxx_destruct]
  -[ICStorePlatformResponseGroup enqueuerAccountIdentifier]
  -[ICStorePlatformResponseGroup rawResponse]
  -[ICStorePlatformResponseGroup allItems]
  -[ICStorePlatformResponseGroup itemForIdentifier:]
  -[ICStorePlatformResponseGroup performanceMetrics]
  -[ICStorePlatformResponseGroup accountIdentifier]
  -[ICStorePlatformResponseGroup storefrontIdentifier]
  -[ICStorePlatformResponseGroup copyWithZone:]
  -[ICStorePlatformResponseGroup expirationDate]
  -[ICStorePlatformResponseGroup initWithResponses:]


ICSetParentalControlRequestOperation : ICRequestOperation
 @property  BOOL allowsExplicitContent
 @property  BOOL automatic
 @property  ICStoreRequestContext *requestContext
 @property  ICStoreURLRequest *storeURLRequest

  // instance methods
  -[ICSetParentalControlRequestOperation isAutomatic]
  -[ICSetParentalControlRequestOperation .cxx_destruct]
  -[ICSetParentalControlRequestOperation execute]
  -[ICSetParentalControlRequestOperation allowsExplicitContent]
  -[ICSetParentalControlRequestOperation cancel]
  -[ICSetParentalControlRequestOperation requestContext]
  -[ICSetParentalControlRequestOperation setRequestContext:]
  -[ICSetParentalControlRequestOperation setAllowsExplicitContent:]
  -[ICSetParentalControlRequestOperation _getURLFromBagAndSendRequest]
  -[ICSetParentalControlRequestOperation _buildAndSendRequestForURL:]
  -[ICSetParentalControlRequestOperation initWithRequestContext:allowsExplicitContent:isAutomatic:]
  -[ICSetParentalControlRequestOperation setAutomatic:]
  -[ICSetParentalControlRequestOperation storeURLRequest]
  -[ICSetParentalControlRequestOperation setStoreURLRequest:]


ICIAMLogEventResponse : PBCodable <NSCopying>
  // instance methods
  -[ICIAMLogEventResponse mergeFrom:]
  -[ICIAMLogEventResponse dictionaryRepresentation]
  -[ICIAMLogEventResponse writeTo:]
  -[ICIAMLogEventResponse isEqual:]
  -[ICIAMLogEventResponse copyTo:]
  -[ICIAMLogEventResponse readFrom:]
  -[ICIAMLogEventResponse copyWithZone:]


ICSQLiteQueryResults : NSObject <ICSQLiteBinding>
 @property  long long firstInt64Value
 @property  NSNumber *firstNumberValue
 @property  NSString *firstStringValue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ICSQLiteQueryResults initWithStatement:]
  -[ICSQLiteQueryResults bindData:atPosition:]
  -[ICSQLiteQueryResults bindInt:atPosition:]
  -[ICSQLiteQueryResults bindFloat:atPosition:]
  -[ICSQLiteQueryResults firstStringValue]
  -[ICSQLiteQueryResults bindNullAtPosition:]
  -[ICSQLiteQueryResults clearBindings]
  -[ICSQLiteQueryResults .cxx_destruct]
  -[ICSQLiteQueryResults firstInt64Value]
  -[ICSQLiteQueryResults bindInt64:atPosition:]
  -[ICSQLiteQueryResults bindStringCopy:atPosition:]
  -[ICSQLiteQueryResults bindString:atPosition:]
  -[ICSQLiteQueryResults bindDataCopy:atPosition:]
  -[ICSQLiteQueryResults bindNumber:atPosition:]
  -[ICSQLiteQueryResults bindDouble:atPosition:]
  -[ICSQLiteQueryResults firstNumberValue]
  -[ICSQLiteQueryResults enumerateRowsUsingBlock:]


_ICLLPlaybackSyncCommand : PBCodable <NSCopying>
  // instance methods
  -[_ICLLPlaybackSyncCommand .cxx_destruct]
  -[_ICLLPlaybackSyncCommand dictionaryRepresentation]
  -[_ICLLPlaybackSyncCommand writeTo:]
  -[_ICLLPlaybackSyncCommand isEqual:]
  -[_ICLLPlaybackSyncCommand readFrom:]
  -[_ICLLPlaybackSyncCommand copyWithZone:]


ICCloudServiceStatusMonitor : NSObject <ICCloudServiceStatusRemoteMonitoringClient>
 @property  long long privacyAcknowledgementPolicy
 @property  BOOL observingCloudServiceStatus
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ICCloudServiceStatusMonitor _hasEntitlementForStatusAccessExemptedFromUserConsentRequirement]

  // instance methods
  -[ICCloudServiceStatusMonitor requestCapabilitiesWithCompletionHandler:]
  -[ICCloudServiceStatusMonitor beginObservingCloudServiceStatus]
  -[ICCloudServiceStatusMonitor _didEndObservingCloudServiceStatusWithToken:transactionIdentifier:]
  -[ICCloudServiceStatusMonitor setPrivacyAcknowledgementPolicy:]
  -[ICCloudServiceStatusMonitor _cloudServiceStatusMonitorConnectionWasInvalidated]
  -[ICCloudServiceStatusMonitor _beginTransactionForCloudServiceStatusMonitorConnectionWithIdentifier:]
  -[ICCloudServiceStatusMonitor _beginObservingCloudServiceStatus]
  -[ICCloudServiceStatusMonitor isObservingCloudServiceStatus]
  -[ICCloudServiceStatusMonitor _requestStorefrontIdentifierWithCompletionHandler:]
  -[ICCloudServiceStatusMonitor _endObservingCloudServiceStatusWithToken:]
  -[ICCloudServiceStatusMonitor _requestStorefrontCountryCodeWithCompletionHandler:]
  -[ICCloudServiceStatusMonitor _cancelCloudServerLaunchedNotifyToken]
  -[ICCloudServiceStatusMonitor .cxx_destruct]
  -[ICCloudServiceStatusMonitor _updateWithStorefrontIdentifier:transactionIdentifier:]
  -[ICCloudServiceStatusMonitor authorizationStatusForScopes:]
  -[ICCloudServiceStatusMonitor _locked_isObservingCloudServiceStatus]
  -[ICCloudServiceStatusMonitor _requestCapabilitiesWithPrivacyPromptPolicy:requestCapabilitiesWithCompletionHandler:]
  -[ICCloudServiceStatusMonitor _invalidateTriggersForCloudServiceStatusObservationRecovery]
  -[ICCloudServiceStatusMonitor _performCloudServiceStatusMonitorRequestWithDescription:requestHandler:errorHandler:]
  -[ICCloudServiceStatusMonitor requestUserTokenForDeveloperToken:options:completionHandler:]
  -[ICCloudServiceStatusMonitor requestUserTokenForDeveloperToken:completionHandler:]
  -[ICCloudServiceStatusMonitor capabilitiesDidChange:]
  -[ICCloudServiceStatusMonitor init]
  -[ICCloudServiceStatusMonitor _updateWithCapabilities:hasValidCapabilities:transactionIdentifier:]
  -[ICCloudServiceStatusMonitor requestStorefrontIdentifierWithCompletionHandler:]
  -[ICCloudServiceStatusMonitor _scheduleTriggersForCloudServiceStatusObservationRecovery]
  -[ICCloudServiceStatusMonitor storefrontCountryCodeDidChange:]
  -[ICCloudServiceStatusMonitor _validateAuthorizationExpiryWithCompletionHandler:]
  -[ICCloudServiceStatusMonitor storefrontIdentifierDidChange:]
  -[ICCloudServiceStatusMonitor _cloudServiceStatusMonitorConnectionForTransactionIdentifier:error:]
  -[ICCloudServiceStatusMonitor privacyAcknowledgementPolicy]
  -[ICCloudServiceStatusMonitor _invalidateCloudServerLaunchTimeoutTimer]
  -[ICCloudServiceStatusMonitor requestStorefrontCountryCodeWithCompletionHandler:]
  -[ICCloudServiceStatusMonitor _refreshCloudServiceStatus]
  -[ICCloudServiceStatusMonitor endObservingCloudServiceStatus]
  -[ICCloudServiceStatusMonitor _cloudServiceStatusMonitorConnectionWasInterrupted]
  -[ICCloudServiceStatusMonitor requestDeveloperTokenWithOptions:completionHandler:]
  -[ICCloudServiceStatusMonitor _updateWithStorefrontCountryCode:transactionIdentifier:]
  -[ICCloudServiceStatusMonitor _registerCloudServerLaunchedNotifyToken]
  -[ICCloudServiceStatusMonitor requestMusicKitTokensWithOptions:completionHandler:]
  -[ICCloudServiceStatusMonitor _didEndRequestingTokenWithTransactionIdentifier:]
  -[ICCloudServiceStatusMonitor dealloc]
  -[ICCloudServiceStatusMonitor _endTransactionForCloudServiceStatusMonitorConnectionWithIdentifier:]
  -[ICCloudServiceStatusMonitor requestAuthorizationForScopes:completionHandler:]
  -[ICCloudServiceStatusMonitor _didBeginObservingCloudServiceStatusWithToken:transactionIdentifier:]
  -[ICCloudServiceStatusMonitor activeAccountDidChange]
  -[ICCloudServiceStatusMonitor _recoverObservingCloudServiceStatus]
  -[ICCloudServiceStatusMonitor _resetCloudServiceStatusMonitorConnectionAllowingExplicitInvalidation:]
  -[ICCloudServiceStatusMonitor _scheduleCloudServerLaunchTimeoutTimer]


ICPBDGSFinishDelegationResponse : PBCodable <NSCopying>
  // instance methods
  -[ICPBDGSFinishDelegationResponse dictionaryRepresentation]
  -[ICPBDGSFinishDelegationResponse writeTo:]
  -[ICPBDGSFinishDelegationResponse isEqual:]
  -[ICPBDGSFinishDelegationResponse readFrom:]
  -[ICPBDGSFinishDelegationResponse copyWithZone:]


ICPBDGSMessage : PBCodable <NSCopying>
  // instance methods
  -[ICPBDGSMessage .cxx_destruct]
  -[ICPBDGSMessage dictionaryRepresentation]
  -[ICPBDGSMessage writeTo:]
  -[ICPBDGSMessage isEqual:]
  -[ICPBDGSMessage readFrom:]
  -[ICPBDGSMessage copyWithZone:]


ICPBDGSRequest : PBRequest <NSCopying>
  // instance methods
  -[ICPBDGSRequest .cxx_destruct]
  -[ICPBDGSRequest dictionaryRepresentation]
  -[ICPBDGSRequest writeTo:]
  -[ICPBDGSRequest isEqual:]
  -[ICPBDGSRequest readFrom:]
  -[ICPBDGSRequest copyWithZone:]


ICURLResponseHandler : NSObject
  // instance methods
  -[ICURLResponseHandler processCompletedResponse:toRequest:withCompletionHandler:]
  -[ICURLResponseHandler processInitialResponse:toRequest:withCompletionHandler:]


ICCloudContentTasteRequestListener : NSObject
  // class methods
  +[ICCloudContentTasteRequestListener sharedCloudContentTasteRequestListener]

  // instance methods
  -[ICCloudContentTasteRequestListener setContentTaste:forMediaItem:storeIdentifier:configuration:timeStamp:withCompletionHandler:]
  -[ICCloudContentTasteRequestListener setContentTaste:forAlbumStoreID:configuration:withCompletionHandler:]
  -[ICCloudContentTasteRequestListener setContentTaste:forPlaylistGlobalID:configuration:withCompletionHandler:]
  -[ICCloudContentTasteRequestListener .cxx_destruct]
  -[ICCloudContentTasteRequestListener init]
  -[ICCloudContentTasteRequestListener _init]
  -[ICCloudContentTasteRequestListener _setupContentTasteServiceConnection]
  -[ICCloudContentTasteRequestListener updateContentTasteForMediaItemsAndInvalidateLocalCache:configuration:withCompletionHandler:]
  -[ICCloudContentTasteRequestListener setContentTaste:forMediaItem:storeIdentifier:timeStamp:withCompletionHandler:]
  -[ICCloudContentTasteRequestListener setContentTaste:forPlaylistGlobalID:withCompletionHandler:]
  -[ICCloudContentTasteRequestListener setContentTaste:forAlbumStoreID:withCompletionHandler:]
  -[ICCloudContentTasteRequestListener updateContentTasteForMediaItemsAndInvalidateLocalCache:withCompletionHandler:]


_ICLLServerNoticeAction : PBCodable <NSCopying>
  // instance methods
  -[_ICLLServerNoticeAction .cxx_destruct]
  -[_ICLLServerNoticeAction dictionaryRepresentation]
  -[_ICLLServerNoticeAction writeTo:]
  -[_ICLLServerNoticeAction isEqual:]
  -[_ICLLServerNoticeAction readFrom:]
  -[_ICLLServerNoticeAction copyWithZone:]


ICCloudAvailabilityController : NSObject <RadiosPreferencesDelegate, ICEnvironmentMonitorObserver, ICCloudAvailability>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ICCloudAvailabilityController sharedController]

  // instance methods
  -[ICCloudAvailabilityController canShowCloudMusic]
  -[ICCloudAvailabilityController isNetworkReachable]
  -[ICCloudAvailabilityController environmentMonitorDidChangeNetworkType:]
  -[ICCloudAvailabilityController environmentMonitorDidChangeNetworkReachability:]
  -[ICCloudAvailabilityController isCellularDataRestrictedForStoreApps]
  -[ICCloudAvailabilityController hasProperNetworkConditionsToShowCloudMedia]
  -[ICCloudAvailabilityController isCellularDataRestrictedForMusic]
  -[ICCloudAvailabilityController shouldProhibitVideosActionForCurrentNetworkConditions]
  -[ICCloudAvailabilityController _uncachedIsAutoDownloadOnCellularAllowed]
  -[ICCloudAvailabilityController canShowCloudVideo]
  -[ICCloudAvailabilityController shouldProhibitMusicActionForCurrentNetworkConditions]
  -[ICCloudAvailabilityController shouldProhibitStoreAppsActionForCurrentNetworkConditions]
  -[ICCloudAvailabilityController hasProperNetworkConditionsToPlayMedia]
  -[ICCloudAvailabilityController isCellularDataRestrictedForVideos]
  -[ICCloudAvailabilityController canShowCloudDownloadButtons]
  -[ICCloudAvailabilityController _hasCellularCapability]
  -[ICCloudAvailabilityController .cxx_destruct]
  -[ICCloudAvailabilityController _setNewIsNetworkReachable:networkType:]
  -[ICCloudAvailabilityController _hasWiFiCapability]
  -[ICCloudAvailabilityController init]
  -[ICCloudAvailabilityController _uncachedIsShowingAllVideo]
  -[ICCloudAvailabilityController _uncachedIsShowingAllMusic]
  -[ICCloudAvailabilityController airplaneModeChanged]
  -[ICCloudAvailabilityController _applicationWillEnterForeground:]
  -[ICCloudAvailabilityController dealloc]
  -[ICCloudAvailabilityController _isAutoDownloadOnCellularAllowed]
  -[ICCloudAvailabilityController _onQueue_updateCanShowCloudDownloadButtonsWithNotification:]
  -[ICCloudAvailabilityController _onQueue_updateIsCellularDataRestrictedForMusic]
  -[ICCloudAvailabilityController _wifiStateDidChangeNotification:]
  -[ICCloudAvailabilityController _onQueue_updateCanShowCloudTracksWithNotification:]


ICMusicUserTokenCache : NSObject
  // class methods
  +[ICMusicUserTokenCache sharedCache]
  +[ICMusicUserTokenCache _getCacheKeyForDeveloperToken:requestContext:completion:]
  +[ICMusicUserTokenCache _decodeDeveloperTokenPart:]

  // instance methods
  -[ICMusicUserTokenCache .cxx_destruct]
  -[ICMusicUserTokenCache _init]
  -[ICMusicUserTokenCache _loadPersistedCacheWithCompletion:]
  -[ICMusicUserTokenCache _persistCache]
  -[ICMusicUserTokenCache dealloc]
  -[ICMusicUserTokenCache getCachedUserTokenForDeveloperToken:requestContext:completion:]
  -[ICMusicUserTokenCache setCachedUserToken:forDeveloperToken:requestContext:completion:]
  -[ICMusicUserTokenCache _handleMusicUserTokensDidChangeDistributedNotification:]
  -[ICMusicUserTokenCache _postLocalChangeNotification]


ICBuyProductRequest : ICRequestOperation
  // instance methods
  -[ICBuyProductRequest .cxx_destruct]
  -[ICBuyProductRequest performRequestWithResponseHandler:]
  -[ICBuyProductRequest execute]
  -[ICBuyProductRequest cancel]
  -[ICBuyProductRequest initWithRequestContext:buyParametersString:includeKeybagSyncData:]
  -[ICBuyProductRequest initWithRequestContext:buyParameters:includeKeybagSyncData:]


ICDelegationProviderServiceSession : NSObject <ICDelegationServiceConnectionDelegate>
 @property  <ICDelegationProviderServiceSessionDelegate> *delegate
 @property  NSArray *delegationAccountUUIDs
 @property  ICDelegationProviderNetService *netService
 @property  ICRequestContext *requestContext
 @property  NSArray *userIdentities
 @property  ICUserIdentityStore *userIdentityStore
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ICDelegationProviderServiceSession userIdentityStore]
  -[ICDelegationProviderServiceSession .cxx_destruct]
  -[ICDelegationProviderServiceSession stop]
  -[ICDelegationProviderServiceSession setDelegate:]
  -[ICDelegationProviderServiceSession _finishWithError:]
  -[ICDelegationProviderServiceSession delegate]
  -[ICDelegationProviderServiceSession requestContext]
  -[ICDelegationProviderServiceSession netService]
  -[ICDelegationProviderServiceSession start]
  -[ICDelegationProviderServiceSession delegationAccountUUIDs]
  -[ICDelegationProviderServiceSession initWithUserIdentities:userIdentityStore:requestContext:netService:delegationAccountUUIDs:]
  -[ICDelegationProviderServiceSession delegationServiceConnectionDidClose:]
  -[ICDelegationProviderServiceSession delegationServiceConnection:didEncouterError:]
  -[ICDelegationProviderServiceSession _startDelegation]
  -[ICDelegationProviderServiceSession _handleStartDelegationResponse:]
  -[ICDelegationProviderServiceSession userIdentities]


ICStoreURLResponseAuthenticationProvider : ICURLResponseAuthenticationProvider <NSSecureCoding>
  // class methods
  +[ICStoreURLResponseAuthenticationProvider supportsSecureCoding]

  // instance methods
  -[ICStoreURLResponseAuthenticationProvider performAuthenticationToHandleResponse:toRequest:withCompletionHandler:]
  -[ICStoreURLResponseAuthenticationProvider _performAuthenticationUsingRequestContext:usingVerificationInteractionLevel:withCompletionHandler:]
  -[ICStoreURLResponseAuthenticationProvider _adjustedAuthenticationPolicyForResponse:withCompletionHandler:]
  -[ICStoreURLResponseAuthenticationProvider performAuthenticationUsingRequestContext:withCompletionHandler:]


ICRadioGetTracksResponse : ICRadioResponse
 @property  ICRadioStationMetadata *stationMetadata
 @property  long long tracklistActionType
 @property  NSArray *tracks
 @property  NSDate *assetExpirationDate

  // instance methods
  -[ICRadioGetTracksResponse tracks]
  -[ICRadioGetTracksResponse .cxx_destruct]
  -[ICRadioGetTracksResponse initWithResponseDictionary:expirationDate:]
  -[ICRadioGetTracksResponse assetExpirationDate]
  -[ICRadioGetTracksResponse stationMetadata]
  -[ICRadioGetTracksResponse tracklistActionType]


_ICLLQueue : PBCodable <NSCopying>
  // instance methods
  -[_ICLLQueue .cxx_destruct]
  -[_ICLLQueue dictionaryRepresentation]
  -[_ICLLQueue writeTo:]
  -[_ICLLQueue isEqual:]
  -[_ICLLQueue readFrom:]
  -[_ICLLQueue dealloc]
  -[_ICLLQueue copyWithZone:]


ICRadioResponse : NSObject
 @property  NSDictionary *contentDictionary
 @property  NSDictionary *responseDictionary
 @property  long long version
 @property  NSArray *performanceMetrics
 @property  ICStoreDialogResponse *dialog
 @property  NSDate *expirationDate
 @property  NSError *serverError

  // instance methods
  -[ICRadioResponse serverError]
  -[ICRadioResponse responseDictionary]
  -[ICRadioResponse dialog]
  -[ICRadioResponse .cxx_destruct]
  -[ICRadioResponse setPerformanceMetrics:]
  -[ICRadioResponse initWithResponseDictionary:expirationDate:]
  -[ICRadioResponse performanceMetrics]
  -[ICRadioResponse version]
  -[ICRadioResponse initWithURLResponse:]
  -[ICRadioResponse expirationDate]
  -[ICRadioResponse contentDictionary]


_ICLLProtocolMessage : PBCodable <NSCopying>
  // instance methods
  -[_ICLLProtocolMessage .cxx_destruct]
  -[_ICLLProtocolMessage dictionaryRepresentation]
  -[_ICLLProtocolMessage writeTo:]
  -[_ICLLProtocolMessage isEqual:]
  -[_ICLLProtocolMessage readFrom:]
  -[_ICLLProtocolMessage copyWithZone:]


ICDelegationPlayInfoRequestOperation : ICAsyncOperation
 @property  ICDelegationPlayInfoRequest *playInfoRequest
 @property  ICStoreRequestContext *storeRequestContext
 @property  @? responseHandler

  // instance methods
  -[ICDelegationPlayInfoRequestOperation storeRequestContext]
  -[ICDelegationPlayInfoRequestOperation .cxx_destruct]
  -[ICDelegationPlayInfoRequestOperation responseHandler]
  -[ICDelegationPlayInfoRequestOperation setResponseHandler:]
  -[ICDelegationPlayInfoRequestOperation execute]
  -[ICDelegationPlayInfoRequestOperation setStoreRequestContext:]
  -[ICDelegationPlayInfoRequestOperation finishWithError:]
  -[ICDelegationPlayInfoRequestOperation _finishWithResult:tokens:error:]
  -[ICDelegationPlayInfoRequestOperation finishWithResponse:requestDate:error:]
  -[ICDelegationPlayInfoRequestOperation playInfoRequest]
  -[ICDelegationPlayInfoRequestOperation setPlayInfoRequest:]


ICDelegationPlayInfoResponseToken : NSObject
 @property  NSData *tokenData
 @property  NSDate *expirationDate
 @property  NSString *storefrontIdentifier

  // instance methods
  -[ICDelegationPlayInfoResponseToken .cxx_destruct]
  -[ICDelegationPlayInfoResponseToken setTokenData:]
  -[ICDelegationPlayInfoResponseToken tokenData]
  -[ICDelegationPlayInfoResponseToken setExpirationDate:]
  -[ICDelegationPlayInfoResponseToken storefrontIdentifier]
  -[ICDelegationPlayInfoResponseToken expirationDate]
  -[ICDelegationPlayInfoResponseToken setStorefrontIdentifier:]


ICIAMParameter : PBCodable <NSCopying>
 @property  BOOL hasKey
 @property  NSString *key
 @property  BOOL hasValue
 @property  NSString *value

  // instance methods
  -[ICIAMParameter mergeFrom:]
  -[ICIAMParameter setKey:]
  -[ICIAMParameter hasValue]
  -[ICIAMParameter .cxx_destruct]
  -[ICIAMParameter dictionaryRepresentation]
  -[ICIAMParameter writeTo:]
  -[ICIAMParameter isEqual:]
  -[ICIAMParameter copyTo:]
  -[ICIAMParameter readFrom:]
  -[ICIAMParameter setValue:]
  -[ICIAMParameter hasKey]
  -[ICIAMParameter value]
  -[ICIAMParameter key]
  -[ICIAMParameter copyWithZone:]


ICPurchaseRedownloadRequest : ICMediaRedownloadRequest
  // instance methods
  -[ICPurchaseRedownloadRequest init]
  -[ICPurchaseRedownloadRequest initWithRequestContext:storeItemID:]


ICInAppMessageSyncRequest : ICRequestOperation
  // instance methods
  -[ICInAppMessageSyncRequest .cxx_destruct]
  -[ICInAppMessageSyncRequest performRequestWithResponseHandler:]
  -[ICInAppMessageSyncRequest execute]
  -[ICInAppMessageSyncRequest initWithStoreRequestContext:fromRevision:]


ICUserIdentityContext : NSObject <NSCopying, NSSecureCoding>
 @property  ICUserIdentity *identity
 @property  ICUserIdentityStore *identityStore

  // class methods
  +[ICUserIdentityContext supportsSecureCoding]

  // instance methods
  -[ICUserIdentityContext initWithCoder:]
  -[ICUserIdentityContext .cxx_destruct]
  -[ICUserIdentityContext isEqual:]
  -[ICUserIdentityContext identity]
  -[ICUserIdentityContext identityStore]
  -[ICUserIdentityContext initWithIdentity:identityStore:]
  -[ICUserIdentityContext copyWithZone:]
  -[ICUserIdentityContext encodeWithCoder:]


ICRemoteRequestOperationExecuting : NSObject
  // class methods
  +[ICRemoteRequestOperationExecuting machServiceName]
  +[ICRemoteRequestOperationExecuting clientInterface]
  +[ICRemoteRequestOperationExecuting serviceInterface]


ICContentKeySession : NSObject <AVContentKeySessionDelegate>
 @property  ICStoreRequestContext *requestContext
 @property  NSURL *keyServerURL
 @property  NSURL *keyCertificateURL
 @property  NSNumber *adamID
 @property  NSString *playbackToken
 @property  BOOL bypassCache
 @property  BOOL requestOfflineKeys
 @property  long long keyServerProtocolType
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ICContentKeySession enhancedAudioSharedContentKeyPath]

  // instance methods
  -[ICContentKeySession adamID]
  -[ICContentKeySession contentKeySession:didProvideRenewingContentKeyRequest:]
  -[ICContentKeySession .cxx_destruct]
  -[ICContentKeySession initWithRequestContext:]
  -[ICContentKeySession init]
  -[ICContentKeySession removeAsset:]
  -[ICContentKeySession addAsset:]
  -[ICContentKeySession setKeyServerURL:]
  -[ICContentKeySession keyServerURL]
  -[ICContentKeySession requestContext]
  -[ICContentKeySession contentKeySession:didProvidePersistableContentKeyRequest:]
  -[ICContentKeySession contentKeySession:didProvideContentKeyRequest:]
  -[ICContentKeySession dealloc]
  -[ICContentKeySession keyCertificateURL]
  -[ICContentKeySession keyServerProtocolType]
  -[ICContentKeySession setAdamID:]
  -[ICContentKeySession contentKeySession:contentKeyRequest:didFailWithError:]
  -[ICContentKeySession contentKeySession:contentKeyRequestDidSucceed:]
  -[ICContentKeySession initWithRequestContext:keyStore:]
  -[ICContentKeySession setRequestOfflineKeys:]
  -[ICContentKeySession setKeyServerProtocolType:]
  -[ICContentKeySession setKeyCertificateURL:]
  -[ICContentKeySession addAsset:shouldPreloadKeys:]
  -[ICContentKeySession waitForAllKeysToProcessWithTimeout:]
  -[ICContentKeySession didReceiveFairPlayError:]
  -[ICContentKeySession initWithRequestContext:keyStore:delegate:]
  -[ICContentKeySession initWithRequestContext:keyStore:delegate:nonreusableTokens:]
  -[ICContentKeySession _processKeyWithIdentifier:]
  -[ICContentKeySession _scheduleKeyRefreshTimer]
  -[ICContentKeySession _performKeyDeliveryRequestForContentKeyRequest:persistResponse:isRenewal:]
  -[ICContentKeySession _finishProcessingKeyWithIdentifier:]
  -[ICContentKeySession setPlaybackToken:]
  -[ICContentKeySession _renewExpiredKeys]
  -[ICContentKeySession processKeyWithIdentifier:]
  -[ICContentKeySession pauseAutomaticKeyRenewal]
  -[ICContentKeySession resumeAutomaticKeyRenewal]
  -[ICContentKeySession waitForKeyRenewalsWithCompletionHandler:]
  -[ICContentKeySession waitForAllKeysToProcess]
  -[ICContentKeySession playbackToken]
  -[ICContentKeySession bypassCache]
  -[ICContentKeySession setBypassCache:]
  -[ICContentKeySession requestOfflineKeys]


ICDeveloperTokenFetchRequest : ICRemoteRequestOperation <NSSecureCoding>
 @property  long long clientType

  // class methods
  +[ICDeveloperTokenFetchRequest supportsSecureCoding]
  +[ICDeveloperTokenFetchRequest _createMediaTokenServiceForClientInfo:clientType:requester:]
  +[ICDeveloperTokenFetchRequest invalidateCachedDeveloperTokenForClientInfo:clientType:requester:completionHandler:]
  +[ICDeveloperTokenFetchRequest _invalidateCachedDeveloperTokenForClientInfo:requester:usingMediaTokenService:]

  // instance methods
  -[ICDeveloperTokenFetchRequest setClientType:]
  -[ICDeveloperTokenFetchRequest clientType]
  -[ICDeveloperTokenFetchRequest initWithCoder:]
  -[ICDeveloperTokenFetchRequest .cxx_destruct]
  -[ICDeveloperTokenFetchRequest _didFetchMediaToken:withError:]
  -[ICDeveloperTokenFetchRequest performRequestWithResponseHandler:]
  -[ICDeveloperTokenFetchRequest initWithClientInfo:options:]
  -[ICDeveloperTokenFetchRequest execute]
  -[ICDeveloperTokenFetchRequest initWithClientInfo:]
  -[ICDeveloperTokenFetchRequest encodeWithCoder:]


ICDelegationServiceSecuritySettings : NSObject
 @property  long long securityMode
 @property  NSString *password

  // class methods
  +[ICDelegationServiceSecuritySettings getDeviceReceiverSettingsWithCompletion:]
  +[ICDelegationServiceSecuritySettings getDeviceSenderSettingsForReceiverName:securityMode:completion:]

  // instance methods
  -[ICDelegationServiceSecuritySettings password]
  -[ICDelegationServiceSecuritySettings .cxx_destruct]
  -[ICDelegationServiceSecuritySettings _init]
  -[ICDelegationServiceSecuritySettings securityMode]


ICDelegationNetServiceTXTRecord : NSObject <NSCopying>
 @property  NSArray *delegationAccountUUIDs
 @property  NSString *deviceName
 @property  long long securityMode
 @property  long long serviceVersion
 @property  NSData *TXTRecordData

  // instance methods
  -[ICDelegationNetServiceTXTRecord deviceName]
  -[ICDelegationNetServiceTXTRecord .cxx_destruct]
  -[ICDelegationNetServiceTXTRecord setDeviceName:]
  -[ICDelegationNetServiceTXTRecord isEqual:]
  -[ICDelegationNetServiceTXTRecord setSecurityMode:]
  -[ICDelegationNetServiceTXTRecord serviceVersion]
  -[ICDelegationNetServiceTXTRecord setServiceVersion:]
  -[ICDelegationNetServiceTXTRecord copyWithZone:]
  -[ICDelegationNetServiceTXTRecord securityMode]
  -[ICDelegationNetServiceTXTRecord TXTRecordData]
  -[ICDelegationNetServiceTXTRecord setDelegationAccountUUIDs:]
  -[ICDelegationNetServiceTXTRecord delegationAccountUUIDs]
  -[ICDelegationNetServiceTXTRecord initWithTXTRecordData:]


ICStoreDialogResponse : NSObject <NSCopying>
 @property  long long type
 @property  NSString *explanation
 @property  BOOL initialCheckboxValue
 @property  BOOL biometricAuthenticationAllowed
 @property  NSString *message
 @property  NSArray *buttons
 @property  long long defaultButtonType
 @property  NSDictionary *responseDictionary

  // instance methods
  -[ICStoreDialogResponse responseDictionary]
  -[ICStoreDialogResponse explanation]
  -[ICStoreDialogResponse initWithResponseDictionary:]
  -[ICStoreDialogResponse .cxx_destruct]
  -[ICStoreDialogResponse message]
  -[ICStoreDialogResponse type]
  -[ICStoreDialogResponse copyWithZone:]
  -[ICStoreDialogResponse buttons]
  -[ICStoreDialogResponse _buttonWithType:]
  -[ICStoreDialogResponse _buttonTitleKeyForType:]
  -[ICStoreDialogResponse _buttonActionKeyForType:]
  -[ICStoreDialogResponse defaultButtonType]
  -[ICStoreDialogResponse isInitialCheckboxValue]
  -[ICStoreDialogResponse isBiometricAuthenticationAllowed]


ICStoreDialogResponseButton : NSObject <NSCopying>
 @property  long long type
 @property  BOOL isDefaultButton
 @property  NSString *title
 @property  ICStoreDialogResponseButtonAction *action

  // instance methods
  -[ICStoreDialogResponseButton .cxx_destruct]
  -[ICStoreDialogResponseButton action]
  -[ICStoreDialogResponseButton title]
  -[ICStoreDialogResponseButton type]
  -[ICStoreDialogResponseButton copyWithZone:]
  -[ICStoreDialogResponseButton initWithType:isDefaultButton:title:action:]
  -[ICStoreDialogResponseButton isDefaultButton]


ICStoreDialogResponseButtonAction : NSObject <NSCopying>
 @property  NSDictionary *actionDictionary
 @property  NSString *kind
 @property  long long type
 @property  NSString *buyParams
 @property  NSString *itemName
 @property  NSString *subtarget
 @property  NSString *URLString

  // instance methods
  -[ICStoreDialogResponseButtonAction actionDictionary]
  -[ICStoreDialogResponseButtonAction buyParams]
  -[ICStoreDialogResponseButtonAction .cxx_destruct]
  -[ICStoreDialogResponseButtonAction URLString]
  -[ICStoreDialogResponseButtonAction itemName]
  -[ICStoreDialogResponseButtonAction kind]
  -[ICStoreDialogResponseButtonAction type]
  -[ICStoreDialogResponseButtonAction copyWithZone:]
  -[ICStoreDialogResponseButtonAction subtarget]
  -[ICStoreDialogResponseButtonAction initWithResponseButtonActionDictionary:]


_ICLLErrorMessage : PBCodable <NSCopying>
  // instance methods
  -[_ICLLErrorMessage .cxx_destruct]
  -[_ICLLErrorMessage dictionaryRepresentation]
  -[_ICLLErrorMessage writeTo:]
  -[_ICLLErrorMessage isEqual:]
  -[_ICLLErrorMessage readFrom:]
  -[_ICLLErrorMessage copyWithZone:]


ICMusicSubscriptionStatusController : NSObject <ICMusicSubscriptionStatusRemoteRequestingClient>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ICMusicSubscriptionStatusController sharedStatusController]
  +[ICMusicSubscriptionStatusController _hasEntitlementForMusicSubscriptionStatusService]

  // instance methods
  -[ICMusicSubscriptionStatusController refreshSubscriptionWithCompletionHandler:]
  -[ICMusicSubscriptionStatusController _cancelRemoteRequestingClientConnectionInvalidationTimer]
  -[ICMusicSubscriptionStatusController refreshSubscriptionUsingRequestContext:withCompletionHandler:]
  -[ICMusicSubscriptionStatusController _handleSubscriptionStatusCacheUnderlyingCachingPropertiesDidChangeNotification:]
  -[ICMusicSubscriptionStatusController enableSubscriptionForUserIdentity:withCompletionHandler:]
  -[ICMusicSubscriptionStatusController .cxx_destruct]
  -[ICMusicSubscriptionStatusController getSubscriptionStatusWithCompletionHandler:]
  -[ICMusicSubscriptionStatusController performSubscriptionStatusRequest:withStatusHandler:]
  -[ICMusicSubscriptionStatusController disableSubscriptionWithCompletionHandler:]
  -[ICMusicSubscriptionStatusController _cancelPendingRequests]
  -[ICMusicSubscriptionStatusController init]
  -[ICMusicSubscriptionStatusController _handlePrivacyAcknowledgementRequirementChanged:]
  -[ICMusicSubscriptionStatusController _handleSubscriptionStatusDidChangeFollowingPrivacyAcknowledgementNotification:]
  -[ICMusicSubscriptionStatusController deliverSubscriptionStatusResponse:forRemoteRequestWithUniqueIdentifier:error:]
  -[ICMusicSubscriptionStatusController performSubscriptionStatusRequest:withCompletionHandler:]
  -[ICMusicSubscriptionStatusController _didEndRemoteRequestWithUniqueIdentifier:]
  -[ICMusicSubscriptionStatusController refreshSubscriptionForUserIdentity:withCompletionHandler:]
  -[ICMusicSubscriptionStatusController getSubscriptionStatusForUserIdentity:withCompletionHandler:]
  -[ICMusicSubscriptionStatusController _willPerformSubscriptionStatusRequest:withStatusHandler:]
  -[ICMusicSubscriptionStatusController getSubscriptionStatusForUserIdentity:bypassingCache:withCompletionHandler:]
  -[ICMusicSubscriptionStatusController _willBeginRemoteRequestWithUniqueIdentifier:statusHandler:]
  -[ICMusicSubscriptionStatusController _handleSubscriptionStatusCacheDidChangeNotification:]
  -[ICMusicSubscriptionStatusController _invalidateRemoteRequestingClientConnection]
  -[ICMusicSubscriptionStatusController disableSubscriptionForUserIdentity:withCompletionHandler:]
  -[ICMusicSubscriptionStatusController dealloc]
  -[ICMusicSubscriptionStatusController _remoteRequestingClientConnection]
  -[ICMusicSubscriptionStatusController _deliverSubscriptionStatusResponse:forRequest:error:]
  -[ICMusicSubscriptionStatusController invalidateCachedSubscriptionStatusWithCompletionHandler:]
  -[ICMusicSubscriptionStatusController _remoteRequestingClientConnectionInvalidationTimerDidExpire]
  -[ICMusicSubscriptionStatusController _handleSeveredRemoteClientConnectionWithIdentifier:]
  -[ICMusicSubscriptionStatusController invalidateCachedSubscriptionStatusForUserIdentity:withCompletionHandler:]
  -[ICMusicSubscriptionStatusController _handleSubscriptionStatusDidChangeDistributedNotification:]
  -[ICMusicSubscriptionStatusController enableSubscriptionWithCompletionHandler:]
  -[ICMusicSubscriptionStatusController _scheduleInvalidationOfRemoteRequestingClientConnection]


ICDelegationConsumerServiceSession : NSObject <ICDelegationConsumerNetServiceDelegate, ICDelegationServiceConnectionDelegate>
 @property  ICDelegationConsumerServiceRequest *request
 @property  @? responseHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ICDelegationConsumerServiceSession _stop]
  -[ICDelegationConsumerServiceSession .cxx_destruct]
  -[ICDelegationConsumerServiceSession initWithRequest:responseHandler:]
  -[ICDelegationConsumerServiceSession responseHandler]
  -[ICDelegationConsumerServiceSession stop]
  -[ICDelegationConsumerServiceSession request]
  -[ICDelegationConsumerServiceSession _handleTimeout]
  -[ICDelegationConsumerServiceSession start]
  -[ICDelegationConsumerServiceSession dealloc]
  -[ICDelegationConsumerServiceSession delegationConsumerNetService:didAcceptConnectionWithInputStream:outputStream:]
  -[ICDelegationConsumerServiceSession delegationServiceConnectionDidClose:]
  -[ICDelegationConsumerServiceSession delegationServiceConnection:didReceiveRequest:]
  -[ICDelegationConsumerServiceSession delegationServiceConnection:didEncouterError:]


ICStorePlatformResponse : NSObject <ICStorePlatformResponse>
 @property  BOOL authenticated
 @property  NSDictionary *resultsDictionary
 @property  NSArray *allItems
 @property  NSNumber *accountIdentifier
 @property  NSNumber *enqueuerAccountIdentifier
 @property  NSDate *expirationDate
 @property  NSString *storefrontIdentifier
 @property  id rawResponse
 @property  NSArray *performanceMetrics
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ICStorePlatformResponse initWithResponseDictionary:]
  -[ICStorePlatformResponse enumerateItemsUsingBlock:]
  -[ICStorePlatformResponse isAuthenticated]
  -[ICStorePlatformResponse .cxx_destruct]
  -[ICStorePlatformResponse enqueuerAccountIdentifier]
  -[ICStorePlatformResponse resultsDictionary]
  -[ICStorePlatformResponse _enumerateResultDictionariesUsingBlock:]
  -[ICStorePlatformResponse rawResponse]
  -[ICStorePlatformResponse initWithURLResponse:requestedItemIdentifiers:]
  -[ICStorePlatformResponse allItems]
  -[ICStorePlatformResponse itemForIdentifier:]
  -[ICStorePlatformResponse performanceMetrics]
  -[ICStorePlatformResponse accountIdentifier]
  -[ICStorePlatformResponse initWithResponseDictionary:requestedItemIdentifiers:]
  -[ICStorePlatformResponse storefrontIdentifier]
  -[ICStorePlatformResponse copyWithZone:]
  -[ICStorePlatformResponse expirationDate]


ICInAppMessageEventEntry : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *messageIdentifier
 @property  NSDictionary *params
 @property  NSString *eventIdentifier

  // class methods
  +[ICInAppMessageEventEntry supportsSecureCoding]

  // instance methods
  -[ICInAppMessageEventEntry initWithCoder:]
  -[ICInAppMessageEventEntry .cxx_destruct]
  -[ICInAppMessageEventEntry messageIdentifier]
  -[ICInAppMessageEventEntry eventIdentifier]
  -[ICInAppMessageEventEntry copyWithZone:]
  -[ICInAppMessageEventEntry params]
  -[ICInAppMessageEventEntry encodeWithCoder:]
  -[ICInAppMessageEventEntry initWithMessageIdentifier:params:]
  -[ICInAppMessageEventEntry initWithMessageIdentifier:params:eventIdentifier:]


ICLiveLinkQRConnectionDataSource : NSObject <MSVQRConnectionSessionDataSource>
 @property  IDSService *service
 @property  IDSAccount *account
 @property  NSUUID *groupSessionIdentifier
 @property  NSDictionary *groupSessionOptions
 @property  IDSPseudonym *pseudonym
 @property  MSVTimer *pseudonymRenewalTimer
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSURL *sharedListeningSessionInviteURL
 @property  NSString *sharedListeningSessionIdentifier
 @property  NSString *sharedSessionToken
 @property  NSString *externalIdentifier
 @property  NSString *pluginIdentifier
 @property  NSString *rpcPath
 @property  ICSharedListeningConnectionReport *report
 @property  @? dataSourceErrorHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ICLiveLinkQRConnectionDataSource dataSourceForNewSharedListeningSessionWithIdentity:]
  +[ICLiveLinkQRConnectionDataSource dataSourceForExistingSharedListeningSession:identity:]

  // instance methods
  -[ICLiveLinkQRConnectionDataSource setAccount:]
  -[ICLiveLinkQRConnectionDataSource account]
  -[ICLiveLinkQRConnectionDataSource .cxx_destruct]
  -[ICLiveLinkQRConnectionDataSource report]
  -[ICLiveLinkQRConnectionDataSource setQueue:]
  -[ICLiveLinkQRConnectionDataSource setExternalIdentifier:]
  -[ICLiveLinkQRConnectionDataSource rpcPath]
  -[ICLiveLinkQRConnectionDataSource pseudonym]
  -[ICLiveLinkQRConnectionDataSource pluginIdentifier]
  -[ICLiveLinkQRConnectionDataSource service]
  -[ICLiveLinkQRConnectionDataSource externalIdentifier]
  -[ICLiveLinkQRConnectionDataSource queue]
  -[ICLiveLinkQRConnectionDataSource dealloc]
  -[ICLiveLinkQRConnectionDataSource setPseudonym:]
  -[ICLiveLinkQRConnectionDataSource setService:]
  -[ICLiveLinkQRConnectionDataSource setReport:]
  -[ICLiveLinkQRConnectionDataSource initWithSharedListeningSessionIdentifier:identity:]
  -[ICLiveLinkQRConnectionDataSource pseudonymRenewalTimer]
  -[ICLiveLinkQRConnectionDataSource setGroupSessionIdentifier:]
  -[ICLiveLinkQRConnectionDataSource sharedListeningSessionIdentifier]
  -[ICLiveLinkQRConnectionDataSource setSharedListeningSessionIdentifier:]
  -[ICLiveLinkQRConnectionDataSource groupSessionIdentifier]
  -[ICLiveLinkQRConnectionDataSource setGroupSessionOptions:]
  -[ICLiveLinkQRConnectionDataSource _beginPseudonymAutoRenewal]
  -[ICLiveLinkQRConnectionDataSource _joinSharedListeningSessionWithCompletion:]
  -[ICLiveLinkQRConnectionDataSource _provisionUserPseudonymWithCompletion:]
  -[ICLiveLinkQRConnectionDataSource _renewUserPseudonym]
  -[ICLiveLinkQRConnectionDataSource setPseudonymRenewalTimer:]
  -[ICLiveLinkQRConnectionDataSource dataSourceErrorHandler]
  -[ICLiveLinkQRConnectionDataSource sessionURLForBag:error:]
  -[ICLiveLinkQRConnectionDataSource setSharedListeningSessionInviteURL:]
  -[ICLiveLinkQRConnectionDataSource setSharedSessionToken:]
  -[ICLiveLinkQRConnectionDataSource groupSessionOptions]
  -[ICLiveLinkQRConnectionDataSource populateWithCompletion:]
  -[ICLiveLinkQRConnectionDataSource _revokeUserPseudonymWithCompletion:]
  -[ICLiveLinkQRConnectionDataSource sharedListeningSessionInviteURL]
  -[ICLiveLinkQRConnectionDataSource sharedSessionToken]
  -[ICLiveLinkQRConnectionDataSource setDataSourceErrorHandler:]


ICSecureKeyDeliveryResponse : NSObject
 @property  ICStoreDialogResponse *dialog
 @property  NSError *serverError
 @property  unsigned long bulkRefreshWaitInterval
 @property  NSDate *rentalExpirationDate
 @property  NSDate *rentalPlaybackStartDate
 @property  NSDate *renewalDate
 @property  NSData *serverPlaybackContextData
 @property  NSData *contentKeyContextData

  // instance methods
  -[ICSecureKeyDeliveryResponse setRenewalDate:]
  -[ICSecureKeyDeliveryResponse serverError]
  -[ICSecureKeyDeliveryResponse dialog]
  -[ICSecureKeyDeliveryResponse renewalDate]
  -[ICSecureKeyDeliveryResponse .cxx_destruct]
  -[ICSecureKeyDeliveryResponse setServerError:]
  -[ICSecureKeyDeliveryResponse setServerPlaybackContextData:]
  -[ICSecureKeyDeliveryResponse serverPlaybackContextData]
  -[ICSecureKeyDeliveryResponse setDialog:]
  -[ICSecureKeyDeliveryResponse contentKeyContextData]
  -[ICSecureKeyDeliveryResponse finishAssetResourceLoadingRequest:withError:]
  -[ICSecureKeyDeliveryResponse bulkRefreshWaitInterval]
  -[ICSecureKeyDeliveryResponse setBulkRefreshWaitInterval:]
  -[ICSecureKeyDeliveryResponse rentalExpirationDate]
  -[ICSecureKeyDeliveryResponse setRentalExpirationDate:]
  -[ICSecureKeyDeliveryResponse rentalPlaybackStartDate]
  -[ICSecureKeyDeliveryResponse setRentalPlaybackStartDate:]
  -[ICSecureKeyDeliveryResponse setContentKeyContextData:]


ICTelephonyController : NSObject <CoreTelephonyClientDelegate, CoreTelephonyClientSuppServicesDelegate>
 @property  NSString *phoneNumber
 @property  NSString *providerName
 @property  NSString *mobileSubscriberCountryCode
 @property  NSString *mobileSubscriberNetworkCode
 @property  NSString *IMEI
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ICTelephonyController sharedController]

  // instance methods
  -[ICTelephonyController phoneNumberChanged:]
  -[ICTelephonyController providerName]
  -[ICTelephonyController _handleActiveSubscriptionsDidChange]
  -[ICTelephonyController .cxx_destruct]
  -[ICTelephonyController phoneNumber]
  -[ICTelephonyController phoneNumberAvailable:]
  -[ICTelephonyController _telephonyClient]
  -[ICTelephonyController mobileSubscriberCountryCode]
  -[ICTelephonyController _telephonySubscriptionContext]
  -[ICTelephonyController sendSMSWithText:toPhoneNumber:error:]
  -[ICTelephonyController _init]
  -[ICTelephonyController dealloc]
  -[ICTelephonyController IMEI]
  -[ICTelephonyController mobileSubscriberNetworkCode]
  -[ICTelephonyController _updatePhoneNumberAllowingDidChangeNotification:]
  -[ICTelephonyController _ensureTelephonyHandlesAreReady]
  -[ICTelephonyController activeSubscriptionsDidChange]


ICLiveLinkEvent : NSObject
 @property  ICLiveLinkIdentity *participant
 @property  long long type
 @property  ICLiveLinkSessionEvent *sessionEvent
 @property  ICLiveLinkPlaybackEvent *playbackEvent
 @property  ICLiveLinkQueueEvent *queueEvent
 @property  ICLiveLinkReactionEvent *reactionEvent
 @property  ICLiveLinkCustomEvent *customEvent

  // class methods
  +[ICLiveLinkEvent eventWithPlaybackEvent:participant:]
  +[ICLiveLinkEvent eventWithQueueEvent:participant:]
  +[ICLiveLinkEvent eventWithReactionEvent:participant:]
  +[ICLiveLinkEvent eventWithCustomEvent:participant:]
  +[ICLiveLinkEvent eventWithSessionEvent:participant:]

  // instance methods
  -[ICLiveLinkEvent .cxx_destruct]
  -[ICLiveLinkEvent participant]
  -[ICLiveLinkEvent type]
  -[ICLiveLinkEvent _initWithType:participant:]
  -[ICLiveLinkEvent sessionEvent]
  -[ICLiveLinkEvent playbackEvent]
  -[ICLiveLinkEvent queueEvent]
  -[ICLiveLinkEvent reactionEvent]
  -[ICLiveLinkEvent customEvent]


ICLiveLinkCustomEvent : NSObject
 @property  NSString *localizedMessage

  // instance methods
  -[ICLiveLinkCustomEvent .cxx_destruct]
  -[ICLiveLinkCustomEvent localizedMessage]
  -[ICLiveLinkCustomEvent initWithLocalizedMessage:]


ICLiveLinkPlaybackEvent : NSObject
 @property  long long kind

  // instance methods
  -[ICLiveLinkPlaybackEvent initWithKind:]
  -[ICLiveLinkPlaybackEvent kind]


ICLiveLinkQueueEvent : NSObject
 @property  long long kind
 @property  ICLiveLinkQueueEventContentAdded *contentAdded
 @property  ICLiveLinkQueueEventContentPlayedNow *contentPlayedNow
 @property  ICLiveLinkQueueEventContentRemoved *contentRemoved
 @property  ICLiveLinkQueueEventContentReordered *contentReordered
 @property  ICLiveLinkQueueEventContentReplaced *contentReplaced
 @property  ICLiveLinkQueueEventContentUpdatedMessage *contentUpdatedMessage
 @property  ICLiveLinkQueueEventPlaybackModeChanged *playbackModeChanged

  // class methods
  +[ICLiveLinkQueueEvent queueEventWithContentAdded:]
  +[ICLiveLinkQueueEvent queueEventWithContentReordered:]
  +[ICLiveLinkQueueEvent queueEventWithPlaybackModeChanged:]
  +[ICLiveLinkQueueEvent queueEventWithContentPlayedNow:]
  +[ICLiveLinkQueueEvent queueEventWithContentUpdatedMessage:]
  +[ICLiveLinkQueueEvent queueEventWithContentRemoved:]
  +[ICLiveLinkQueueEvent queueEventWithContentReplaced:]

  // instance methods
  -[ICLiveLinkQueueEvent .cxx_destruct]
  -[ICLiveLinkQueueEvent kind]
  -[ICLiveLinkQueueEvent contentAdded]
  -[ICLiveLinkQueueEvent contentPlayedNow]
  -[ICLiveLinkQueueEvent contentRemoved]
  -[ICLiveLinkQueueEvent contentReordered]
  -[ICLiveLinkQueueEvent contentReplaced]
  -[ICLiveLinkQueueEvent contentUpdatedMessage]
  -[ICLiveLinkQueueEvent playbackModeChanged]


ICLiveLinkQueueEventContentAdded : NSObject
 @property  NSString *containerIdentifier
 @property  long long containerKind
 @property  NSString *containerMediaIdentifier
 @property  NSArray *itemIdentifiers

  // instance methods
  -[ICLiveLinkQueueEventContentAdded itemIdentifiers]
  -[ICLiveLinkQueueEventContentAdded .cxx_destruct]
  -[ICLiveLinkQueueEventContentAdded containerIdentifier]
  -[ICLiveLinkQueueEventContentAdded initWithItemIdentifiers:containerKind:containerIdentifier:containerMediaIdentifier:]
  -[ICLiveLinkQueueEventContentAdded containerKind]
  -[ICLiveLinkQueueEventContentAdded containerMediaIdentifier]


ICLiveLinkQueueEventContentPlayedNow : NSObject
 @property  NSString *containerIdentifier
 @property  long long containerKind
 @property  NSString *containerMediaIdentifier
 @property  NSArray *itemIdentifiers
 @property  NSString *startItemIdentifier

  // instance methods
  -[ICLiveLinkQueueEventContentPlayedNow itemIdentifiers]
  -[ICLiveLinkQueueEventContentPlayedNow .cxx_destruct]
  -[ICLiveLinkQueueEventContentPlayedNow containerIdentifier]
  -[ICLiveLinkQueueEventContentPlayedNow initWithItemIdentifiers:containerKind:containerIdentifier:containerMediaIdentifier:startItemIdentifier:]
  -[ICLiveLinkQueueEventContentPlayedNow containerKind]
  -[ICLiveLinkQueueEventContentPlayedNow containerMediaIdentifier]
  -[ICLiveLinkQueueEventContentPlayedNow startItemIdentifier]


ICLiveLinkQueueEventContentRemoved : NSObject
 @property  NSString *itemIdentifier

  // instance methods
  -[ICLiveLinkQueueEventContentRemoved itemIdentifier]
  -[ICLiveLinkQueueEventContentRemoved .cxx_destruct]
  -[ICLiveLinkQueueEventContentRemoved initWithItemIdentifier:]


ICLiveLinkQueueEventContentReordered : NSObject
 @property  NSString *itemIdentifier

  // instance methods
  -[ICLiveLinkQueueEventContentReordered itemIdentifier]
  -[ICLiveLinkQueueEventContentReordered .cxx_destruct]
  -[ICLiveLinkQueueEventContentReordered initWithItemIdentifier:]


ICLiveLinkQueueEventContentReplaced : NSObject
 @property  NSString *startItemIdentifier

  // instance methods
  -[ICLiveLinkQueueEventContentReplaced .cxx_destruct]
  -[ICLiveLinkQueueEventContentReplaced initWithStartItemIdentifier:]
  -[ICLiveLinkQueueEventContentReplaced startItemIdentifier]


ICLiveLinkQueueEventContentUpdatedMessage : NSObject
 @property  NSString *localizedTitle
 @property  NSString *localizedMessage

  // instance methods
  -[ICLiveLinkQueueEventContentUpdatedMessage localizedTitle]
  -[ICLiveLinkQueueEventContentUpdatedMessage .cxx_destruct]
  -[ICLiveLinkQueueEventContentUpdatedMessage localizedMessage]
  -[ICLiveLinkQueueEventContentUpdatedMessage initWithLocalizedTitle:localizedMessage:]


ICLiveLinkQueueEventPlaybackModeChanged : NSObject
 @property  long long kind
 @property  @? shuffleType
 @property  @? repeatType
 @property  @? autoPlayEnabled

  // instance methods
  -[ICLiveLinkQueueEventPlaybackModeChanged .cxx_destruct]
  -[ICLiveLinkQueueEventPlaybackModeChanged kind]
  -[ICLiveLinkQueueEventPlaybackModeChanged shuffleType]
  -[ICLiveLinkQueueEventPlaybackModeChanged repeatType]
  -[ICLiveLinkQueueEventPlaybackModeChanged initWithUpdatedShuffleType:]
  -[ICLiveLinkQueueEventPlaybackModeChanged initWithUpdatedRepeatType:]
  -[ICLiveLinkQueueEventPlaybackModeChanged initWithUpdatedAutoPlayEnabled:]
  -[ICLiveLinkQueueEventPlaybackModeChanged autoPlayEnabled]


ICLiveLinkReactionEvent : NSObject
 @property  NSString *reactionIdentifier
 @property  NSString *reaction
 @property  NSString *itemIdentifier

  // instance methods
  -[ICLiveLinkReactionEvent itemIdentifier]
  -[ICLiveLinkReactionEvent .cxx_destruct]
  -[ICLiveLinkReactionEvent reaction]
  -[ICLiveLinkReactionEvent initWithReaction:reactionIdentifier:itemIdentifier:]
  -[ICLiveLinkReactionEvent reactionIdentifier]


ICLiveLinkSessionEvent : NSObject
 @property  long long kind

  // instance methods
  -[ICLiveLinkSessionEvent initWithKind:]
  -[ICLiveLinkSessionEvent kind]


ICURLBag : NSObject
 @property  NSDictionary *bagValues
 @property  NSDictionary *fallbackValues
 @property  NSMutableDictionary *convertedActionsCache
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSArray *GUIDURLRegexPatterns
 @property  NSSet *GUIDURLSchemes
 @property  NSDictionary *_propertyListRepresentation
 @property  NSDate *expirationDate
 @property  NSDictionary *allValues
 @property  BOOL canPostKeybagSyncData
 @property  ICURLBagRadioConfiguration *radioConfiguration
 @property  ICURLBagLibraryDAAPConfiguration *libraryDAAPConfiguration
 @property  ICURLBagEnhancedAudioConfiguration *enhancedAudioConfiguration
 @property  NSString *storefrontHeaderSuffix
 @property  NSDate *requestDate
 @property  BOOL expired
 @property  NSString *serverCorrelationKey
 @property  NSString *serverEnvironment
 @property  NSString *profileName
 @property  NSNumber *sourceAccountDSID

  // instance methods
  -[ICURLBag libraryDAAPConfiguration]
  -[ICURLBag _initWithDictionary:]
  -[ICURLBag setFallbackValues:]
  -[ICURLBag _initWithDictionary:requestDate:expirationDate:serverCorrelationKey:serverEnvironment:profileName:sourceAccountDSID:]
  -[ICURLBag requestDate]
  -[ICURLBag _initWithPropertyListRepresentation:]
  -[ICURLBag allValues]
  -[ICURLBag .cxx_destruct]
  -[ICURLBag isExpired]
  -[ICURLBag setGUIDURLRegexPatterns:]
  -[ICURLBag serverCorrelationKey]
  -[ICURLBag shouldAppendMachineDataHeadersForURL:]
  -[ICURLBag valueForBagKey:]
  -[ICURLBag _validateGUIDURLConfigIfNeeded]
  -[ICURLBag mescalConfigurationForResponse:]
  -[ICURLBag setConvertedActionsCache:]
  -[ICURLBag _initWithDictionary:fallbackValues:requestDate:expirationDate:serverCorrelationKey:serverEnvironment:profileName:sourceAccountDSID:]
  -[ICURLBag arrayForBagKey:]
  -[ICURLBag setGUIDURLSchemes:]
  -[ICURLBag stringForBagKey:]
  -[ICURLBag setQueue:]
  -[ICURLBag convertedActionsCache]
  -[ICURLBag _shouldMescalSignBodyForURL:withSignatureConfiguration:]
  -[ICURLBag _urlStringFromBagStringValue:]
  -[ICURLBag _setExpirationDate:]
  -[ICURLBag int64ValueForBagKey:]
  -[ICURLBag storefrontHeaderSuffix]
  -[ICURLBag sourceAccountDSID]
  -[ICURLBag fallbackValues]
  -[ICURLBag setBagValues:]
  -[ICURLBag enhancedAudioConfiguration]
  -[ICURLBag urlForBagKey:]
  -[ICURLBag isTrustedHostForURL:]
  -[ICURLBag hasValueForBagKey:]
  -[ICURLBag serverEnvironment]
  -[ICURLBag mescalConfigurationForResponseURL:]
  -[ICURLBag GUIDURLRegexPatterns]
  -[ICURLBag profileName]
  -[ICURLBag radioConfiguration]
  -[ICURLBag queue]
  -[ICURLBag bagValues]
  -[ICURLBag _propertyListRepresentation]
  -[ICURLBag mescalConfigurationForRequest:]
  -[ICURLBag mescalConfigurationForRequestURL:]
  -[ICURLBag canPostKeybagSyncData]
  -[ICURLBag GUIDURLSchemes]
  -[ICURLBag expirationDate]
  -[ICURLBag boolValueForBagKey:]
  -[ICURLBag dictionaryForBagKey:]
  -[ICURLBag shouldAppendDeviceGUIDForURL:]


ICDelegationProviderServiceProtocolHandler : NSObject
  // instance methods
  -[ICDelegationProviderServiceProtocolHandler .cxx_destruct]
  -[ICDelegationProviderServiceProtocolHandler initWithUserIdentityStore:requestContext:]
  -[ICDelegationProviderServiceProtocolHandler getFinishDelegationRequestsWithStartDelegationResponse:streamContexts:replyHandler:]
  -[ICDelegationProviderServiceProtocolHandler getStartDelegationRequestForAccountIDs:withCompletionHandler:]
  -[ICDelegationProviderServiceProtocolHandler _getPlayInfoRequestWithStartDelegationResponse:streamContexts:completionHandler:]
  -[ICDelegationProviderServiceProtocolHandler _nextSessionUniqueID]


ICRadioStationMetadata : NSObject
 @property  ICStoreArtworkInfo *artworkInfo
 @property  NSString *coreSeedName
 @property  NSString *descriptionText
 @property  NSString *name
 @property  NSString *stationHash
 @property  long long stationID
 @property  NSString *stationStringID
 @property  NSString *playbackAuthorizationToken
 @property  NSString *attributionLabel
 @property  long long type
 @property  long long subtype
 @property  BOOL allowsItemLiking
 @property  BOOL allowsSharing
 @property  BOOL subscriptionRequired
 @property  ICRadioStationProviderResource *providerResource

  // instance methods
  -[ICRadioStationMetadata descriptionText]
  -[ICRadioStationMetadata name]
  -[ICRadioStationMetadata initWithResponseDictionary:]
  -[ICRadioStationMetadata .cxx_destruct]
  -[ICRadioStationMetadata allowsSharing]
  -[ICRadioStationMetadata stationStringID]
  -[ICRadioStationMetadata attributionLabel]
  -[ICRadioStationMetadata isSubscriptionRequired]
  -[ICRadioStationMetadata artworkInfo]
  -[ICRadioStationMetadata stationHash]
  -[ICRadioStationMetadata stationID]
  -[ICRadioStationMetadata playbackAuthorizationToken]
  -[ICRadioStationMetadata type]
  -[ICRadioStationMetadata allowsItemLiking]
  -[ICRadioStationMetadata subtype]
  -[ICRadioStationMetadata coreSeedName]
  -[ICRadioStationMetadata providerResource]


ICDelegateAccountStoreSQLWriter : NSObject <ICDelegateAccountStoreWriter>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ICDelegateAccountStoreSQLWriter _removeTokenForIdentityKey:]
  -[ICDelegateAccountStoreSQLWriter addDelegationUUIDs:forUserIdentity:completionHandler:]
  -[ICDelegateAccountStoreSQLWriter .cxx_destruct]
  -[ICDelegateAccountStoreSQLWriter removeIdentityPropertiesForUserIdentity:completionHandler:]
  -[ICDelegateAccountStoreSQLWriter initWithConnection:]
  -[ICDelegateAccountStoreSQLWriter setToken:forUserIdentity:completionHandler:]
  -[ICDelegateAccountStoreSQLWriter removeTokensExpiringBeforeDate:completionHandler:]
  -[ICDelegateAccountStoreSQLWriter removeAllTokensWithCompletionHandler:]
  -[ICDelegateAccountStoreSQLWriter removeTokenForUserIdentity:completionHandler:]
  -[ICDelegateAccountStoreSQLWriter removeDelegationUUIDs:forUserIdentity:completionHandler:]
  -[ICDelegateAccountStoreSQLWriter _removeAccountForIdentityKey:]
  -[ICDelegateAccountStoreSQLWriter invalidate]
  -[ICDelegateAccountStoreSQLWriter setIdentityProperties:forUserIdentity:completionHandler:]
  -[ICDelegateAccountStoreSQLWriter _setToken:forIdentityKey:]


ICURLResponseAuthenticationProvider : NSObject <NSSecureCoding>
 @property  long long interactionLevel

  // class methods
  +[ICURLResponseAuthenticationProvider supportsSecureCoding]
  +[ICURLResponseAuthenticationProvider defaultProvider]

  // instance methods
  -[ICURLResponseAuthenticationProvider initWithCoder:]
  -[ICURLResponseAuthenticationProvider performAuthenticationToHandleResponse:toRequest:withCompletionHandler:]
  -[ICURLResponseAuthenticationProvider initWithUserInteractionLevel:]
  -[ICURLResponseAuthenticationProvider isEqual:]
  -[ICURLResponseAuthenticationProvider interactionLevel]
  -[ICURLResponseAuthenticationProvider performAuthenticationUsingRequestContext:withCompletionHandler:]
  -[ICURLResponseAuthenticationProvider encodeWithCoder:]


_ICLLPlaybackSyncAction : PBCodable <NSCopying>
  // instance methods
  -[_ICLLPlaybackSyncAction .cxx_destruct]
  -[_ICLLPlaybackSyncAction dictionaryRepresentation]
  -[_ICLLPlaybackSyncAction writeTo:]
  -[_ICLLPlaybackSyncAction isEqual:]
  -[_ICLLPlaybackSyncAction readFrom:]
  -[_ICLLPlaybackSyncAction copyWithZone:]


ICSecurityInfo : NSObject
 @property  BOOL contentProtectionEnabled
 @property  BOOL deviceUnlocked
 @property  BOOL deviceClassCUnlocked

  // class methods
  +[ICSecurityInfo sharedSecurityInfo]

  // instance methods
  -[ICSecurityInfo .cxx_destruct]
  -[ICSecurityInfo performBlockAfterFirstUnlock:]
  -[ICSecurityInfo _processFirstUnlockNotification]
  -[ICSecurityInfo init]
  -[ICSecurityInfo isDeviceUnlocked]
  -[ICSecurityInfo isDeviceClassCUnlocked]
  -[ICSecurityInfo isContentProtectionEnabled]
  -[ICSecurityInfo _loadContentProtectionEnabled:isDeviceClassCUnlocked:]
  -[ICSecurityInfo dealloc]
  -[ICSecurityInfo _getContentProtectionEnabled:isDeviceClassCUnlocked:]


ICSagaGetAccountStatusRequest : ICRequestOperation
  // instance methods
  -[ICSagaGetAccountStatusRequest .cxx_destruct]
  -[ICSagaGetAccountStatusRequest performRequestWithResponseHandler:]
  -[ICSagaGetAccountStatusRequest execute]
  -[ICSagaGetAccountStatusRequest initWithStoreRequestContext:]


ICSongDownloadDoneRequest : ICRequestOperation
  // instance methods
  -[ICSongDownloadDoneRequest .cxx_destruct]
  -[ICSongDownloadDoneRequest performRequestWithResponseHandler:]
  -[ICSongDownloadDoneRequest execute]
  -[ICSongDownloadDoneRequest cancel]
  -[ICSongDownloadDoneRequest initWithRequestContext:downloadIdentifier:songID:]


ICRemoteRequestOperation : ICRequestOperation <NSSecureCoding>
 @property  BOOL _shadowOperationForRemoteExecution
 @property  <NSSecureCoding> *response

  // class methods
  +[ICRemoteRequestOperation supportsSecureCoding]

  // instance methods
  -[ICRemoteRequestOperation initWithCoder:]
  -[ICRemoteRequestOperation .cxx_destruct]
  -[ICRemoteRequestOperation _execute]
  -[ICRemoteRequestOperation response]
  -[ICRemoteRequestOperation encodeWithCoder:]
  -[ICRemoteRequestOperation setResponse:]
  -[ICRemoteRequestOperation _isShadowOperationForRemoteExecution]
  -[ICRemoteRequestOperation _setShadowOperationForRemoteExecution:]


_ICLLAutoPlaySource : PBCodable <NSCopying>
  // instance methods
  -[_ICLLAutoPlaySource dictionaryRepresentation]
  -[_ICLLAutoPlaySource writeTo:]
  -[_ICLLAutoPlaySource isEqual:]
  -[_ICLLAutoPlaySource readFrom:]
  -[_ICLLAutoPlaySource copyWithZone:]


ICMusicSubscriptionLeaseController : NSObject <ICEnvironmentMonitorObserver, ICMusicSubscriptionLeaseSessionDelegate>
 @property  NSString *lastKnownHouseholdID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ICMusicSubscriptionLeaseController sharedController]

  // instance methods
  -[ICMusicSubscriptionLeaseController environmentMonitorDidChangeNetworkReachability:]
  -[ICMusicSubscriptionLeaseController receivedUserInteractionEvent]
  -[ICMusicSubscriptionLeaseController .cxx_destruct]
  -[ICMusicSubscriptionLeaseController musicLeaseSession:requestsFairPlayKeyStatusUpdateWithCompletion:]
  -[ICMusicSubscriptionLeaseController getLastKnownHouseholdIDWithCompletion:]
  -[ICMusicSubscriptionLeaseController lastKnownHouseholdID]
  -[ICMusicSubscriptionLeaseController _init]
  -[ICMusicSubscriptionLeaseController musicLeaseSession:didFinishPlaybackRequest:withPlaybackResponse:responseError:updatedFairPlayKeyStatusList:completionHandler:]
  -[ICMusicSubscriptionLeaseController dealloc]
  -[ICMusicSubscriptionLeaseController _handlePlaybackLeaseDidEndPushNotification]
  -[ICMusicSubscriptionLeaseController getLeaseSessionWithRequestContext:completionHandler:]


_ICMusicSubscriptionLeaseIdentityCacheKey : NSObject <NSCopying>
 @property  NSNumber *delegatedDSID
 @property  NSNumber *DSID
 @property  NSString *carrierBundleDeviceIdentifier

  // instance methods
  -[_ICMusicSubscriptionLeaseIdentityCacheKey DSID]
  -[_ICMusicSubscriptionLeaseIdentityCacheKey .cxx_destruct]
  -[_ICMusicSubscriptionLeaseIdentityCacheKey isEqual:]
  -[_ICMusicSubscriptionLeaseIdentityCacheKey carrierBundleDeviceIdentifier]
  -[_ICMusicSubscriptionLeaseIdentityCacheKey delegatedDSID]
  -[_ICMusicSubscriptionLeaseIdentityCacheKey copyWithZone:]
  -[_ICMusicSubscriptionLeaseIdentityCacheKey initWithDSID:carrierBundleDeviceIdentifier:delegatedDSID:]


ICIAMSynchronizeMessagesRequest : PBRequest <NSCopying>
 @property  BOOL hasCommandSerialNumber
 @property  long long commandSerialNumber
 @property  BOOL hasDSID
 @property  long long dSID
 @property  BOOL hasDeviceID
 @property  NSString *deviceID
 @property  BOOL hasActiveCommandsOnly
 @property  BOOL activeCommandsOnly

  // instance methods
  -[ICIAMSynchronizeMessagesRequest setDSID:]
  -[ICIAMSynchronizeMessagesRequest mergeFrom:]
  -[ICIAMSynchronizeMessagesRequest dSID]
  -[ICIAMSynchronizeMessagesRequest .cxx_destruct]
  -[ICIAMSynchronizeMessagesRequest deviceID]
  -[ICIAMSynchronizeMessagesRequest dictionaryRepresentation]
  -[ICIAMSynchronizeMessagesRequest writeTo:]
  -[ICIAMSynchronizeMessagesRequest hasDSID]
  -[ICIAMSynchronizeMessagesRequest isEqual:]
  -[ICIAMSynchronizeMessagesRequest copyTo:]
  -[ICIAMSynchronizeMessagesRequest readFrom:]
  -[ICIAMSynchronizeMessagesRequest setDeviceID:]
  -[ICIAMSynchronizeMessagesRequest hasDeviceID]
  -[ICIAMSynchronizeMessagesRequest copyWithZone:]
  -[ICIAMSynchronizeMessagesRequest commandSerialNumber]
  -[ICIAMSynchronizeMessagesRequest setHasDSID:]
  -[ICIAMSynchronizeMessagesRequest setCommandSerialNumber:]
  -[ICIAMSynchronizeMessagesRequest setHasCommandSerialNumber:]
  -[ICIAMSynchronizeMessagesRequest hasCommandSerialNumber]
  -[ICIAMSynchronizeMessagesRequest setActiveCommandsOnly:]
  -[ICIAMSynchronizeMessagesRequest setHasActiveCommandsOnly:]
  -[ICIAMSynchronizeMessagesRequest hasActiveCommandsOnly]
  -[ICIAMSynchronizeMessagesRequest activeCommandsOnly]


ICDelegateAccountStoreSchema : NSObject
  // class methods
  +[ICDelegateAccountStoreSchema setupWithConnection:error:]
  +[ICDelegateAccountStoreSchema dateForValue:]
  +[ICDelegateAccountStoreSchema currentVersion]
  +[ICDelegateAccountStoreSchema valueForDate:]
  +[ICDelegateAccountStoreSchema defaultDatabasePath]
  +[ICDelegateAccountStoreSchema _createDefaultSchemaWithConnection:error:]


ICMusicKitURLRequest : ICURLRequest
 @property  NSString *_developerToken
 @property  ICStoreURLRequest *_pendingEquivalentStoreURLRequest
 @property  ICMusicKitRequestContext *requestContext
 @property  NSDictionary *additionalHTTPCookies

  // class methods
  +[ICMusicKitURLRequest _defaultMaxRetryCountForReason:]
  +[ICMusicKitURLRequest _responseClass]
  +[ICMusicKitURLRequest _responseHandlerClass]

  // instance methods
  -[ICMusicKitURLRequest _description]
  -[ICMusicKitURLRequest initWithURLRequest:requestContext:resumeData:]
  -[ICMusicKitURLRequest _developerToken]
  -[ICMusicKitURLRequest _updateURLSessionManagedPropertiesForEquivalentStoreURLRequest:]
  -[ICMusicKitURLRequest .cxx_destruct]
  -[ICMusicKitURLRequest setAdditionalHTTPCookies:]
  -[ICMusicKitURLRequest buildURLRequestWithCompletionHandler:]
  -[ICMusicKitURLRequest initWithURLRequest:requestContext:]
  -[ICMusicKitURLRequest additionalHTTPCookies]
  -[ICMusicKitURLRequest requestContext]
  -[ICMusicKitURLRequest _pendingEquivalentStoreURLRequest]
  -[ICMusicKitURLRequest _buildEquivalentStoreURLRequestWithDeveloperToken:completionHandler:]
  -[ICMusicKitURLRequest initWithURL:requestContext:]
  -[ICMusicKitURLRequest _buildMusicKitURLRequestWithBaseURLRequest:completionHandler:]
  -[ICMusicKitURLRequest _setDeveloperToken:]
  -[ICMusicKitURLRequest _buildUserTokenBasedMusicKitURLRequestWithBaseURLRequest:developerToken:completionHandler:]


ICSAPSessionVerifySignatureOperation : ICSAPSessionAbstractOperation
 @property  NSData *signatureData
 @property  NSMutableData *data
 @property  @? responseHandler

  // instance methods
  -[ICSAPSessionVerifySignatureOperation .cxx_destruct]
  -[ICSAPSessionVerifySignatureOperation responseHandler]
  -[ICSAPSessionVerifySignatureOperation data]
  -[ICSAPSessionVerifySignatureOperation setResponseHandler:]
  -[ICSAPSessionVerifySignatureOperation setSignatureData:]
  -[ICSAPSessionVerifySignatureOperation finishWithSAPContextPreparationError:]
  -[ICSAPSessionVerifySignatureOperation signatureData]
  -[ICSAPSessionVerifySignatureOperation setData:]
  -[ICSAPSessionVerifySignatureOperation executeWithSAPContext:]


ICMusicSubscriptionStatusRemoteRequesting : NSObject
  // class methods
  +[ICMusicSubscriptionStatusRemoteRequesting machServiceName]
  +[ICMusicSubscriptionStatusRemoteRequesting clientInterface]
  +[ICMusicSubscriptionStatusRemoteRequesting serviceInterface]


ICSharedListeningConnectionController : NSObject
 @property  NSString *sessionIdentifier
 @property  NSString *sessionToken
 @property  NSURL *inviteURL
 @property  NSString *bundleID
 @property  ICLiveLinkIdentity *identity
 @property  <ICSharedListeningConnectionControllerDelegate> *delegate

  // class methods
  +[ICSharedListeningConnectionController externalSharedListeningConnectionWithSessionIdentifier:identity:bundleID:]
  +[ICSharedListeningConnectionController sharedListeningConnectionWithSessionIdentifier:identity:bundleID:]

  // instance methods
  -[ICSharedListeningConnectionController bundleID]
  -[ICSharedListeningConnectionController setSessionIdentifier:]
  -[ICSharedListeningConnectionController .cxx_destruct]
  -[ICSharedListeningConnectionController sendMessage:]
  -[ICSharedListeningConnectionController sessionIdentifier]
  -[ICSharedListeningConnectionController stop]
  -[ICSharedListeningConnectionController setDelegate:]
  -[ICSharedListeningConnectionController sessionToken]
  -[ICSharedListeningConnectionController identity]
  -[ICSharedListeningConnectionController delegate]
  -[ICSharedListeningConnectionController setInviteURL:]
  -[ICSharedListeningConnectionController inviteURL]
  -[ICSharedListeningConnectionController start]
  -[ICSharedListeningConnectionController setSessionToken:]
  -[ICSharedListeningConnectionController initWithSessionIdentifier:identity:bundleID:]


ICDirectSharedListeningConnectionController : ICSharedListeningConnectionController <MSVQRConnectionDelegate>
 @property  {os_unfair_lock_s=I} lock
 @property  long long state
 @property  MSVQRConnection *connection
 @property  ICLiveLinkQRConnectionDataSource *dataSource
 @property  ICSharedListeningConnectionReport *report
 @property  NSObject<OS_dispatch_queue> *delegateQueue
 @property  MSVTaskAssertion *assertion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ICDirectSharedListeningConnectionController assertion]
  -[ICDirectSharedListeningConnectionController setAssertion:]
  -[ICDirectSharedListeningConnectionController delegateQueue]
  -[ICDirectSharedListeningConnectionController setDelegateQueue:]
  -[ICDirectSharedListeningConnectionController .cxx_destruct]
  -[ICDirectSharedListeningConnectionController sendMessage:]
  -[ICDirectSharedListeningConnectionController report]
  -[ICDirectSharedListeningConnectionController stop]
  -[ICDirectSharedListeningConnectionController setConnection:]
  -[ICDirectSharedListeningConnectionController setState:]
  -[ICDirectSharedListeningConnectionController dataSource]
  -[ICDirectSharedListeningConnectionController connection]
  -[ICDirectSharedListeningConnectionController state]
  -[ICDirectSharedListeningConnectionController start]
  -[ICDirectSharedListeningConnectionController connection:didReceiveMessage:]
  -[ICDirectSharedListeningConnectionController dealloc]
  -[ICDirectSharedListeningConnectionController lock]
  -[ICDirectSharedListeningConnectionController setReport:]
  -[ICDirectSharedListeningConnectionController initWithSessionIdentifier:identity:bundleID:]
  -[ICDirectSharedListeningConnectionController _handleQRDataSourceError:]
  -[ICDirectSharedListeningConnectionController connectionDidStart:]
  -[ICDirectSharedListeningConnectionController connection:didEndWithError:]


ICExternalSharedListeningConnectionController : ICSharedListeningConnectionController <ICSharedListeningConnectionClientProtocol>
 @property  NSXPCConnection *xpcConnection
 @property  NSObject<OS_dispatch_queue> *delegateQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ICExternalSharedListeningConnectionController setXpcConnection:]
  -[ICExternalSharedListeningConnectionController xpcConnection]
  -[ICExternalSharedListeningConnectionController delegateQueue]
  -[ICExternalSharedListeningConnectionController setDelegateQueue:]
  -[ICExternalSharedListeningConnectionController .cxx_destruct]
  -[ICExternalSharedListeningConnectionController sendMessage:]
  -[ICExternalSharedListeningConnectionController stop]
  -[ICExternalSharedListeningConnectionController start]
  -[ICExternalSharedListeningConnectionController dealloc]
  -[ICExternalSharedListeningConnectionController initWithSessionIdentifier:identity:bundleID:]
  -[ICExternalSharedListeningConnectionController receiveMessageData:]
  -[ICExternalSharedListeningConnectionController receiveConnectionError:]
  -[ICExternalSharedListeningConnectionController receiveFatalError:]
  -[ICExternalSharedListeningConnectionController receiveStartWithSessionIdentifier:sessionToken:inviteURLString:]
  -[ICExternalSharedListeningConnectionController _initializeConnectionIfNeeded]


ICUserVerificationRequest : NSObject <NSCopying>
 @property  long long qualityOfService
 @property  ICStoreRequestContext *storeRequestContext
 @property  ICUserVerificationContext *verificationContext

  // instance methods
  -[ICUserVerificationRequest storeRequestContext]
  -[ICUserVerificationRequest qualityOfService]
  -[ICUserVerificationRequest .cxx_destruct]
  -[ICUserVerificationRequest setQualityOfService:]
  -[ICUserVerificationRequest performWithResponseHandler:]
  -[ICUserVerificationRequest setStoreRequestContext:]
  -[ICUserVerificationRequest copyWithZone:]
  -[ICUserVerificationRequest verificationContext]
  -[ICUserVerificationRequest initWithVerificationContext:]


ICMusicSubscriptionStatusMonitor : NSObject
 @property  ICUserIdentity *identity
 @property  ICMusicSubscriptionStatus *subscriptionStatus

  // class methods
  +[ICMusicSubscriptionStatusMonitor sharedMonitorForIdentity:identityStore:]
  +[ICMusicSubscriptionStatusMonitor _sharedInstanceManager]
  +[ICMusicSubscriptionStatusMonitor sharedMonitorForIdentity:]

  // instance methods
  -[ICMusicSubscriptionStatusMonitor _handleActiveUserIdentityDidChangeRemoteNotification]
  -[ICMusicSubscriptionStatusMonitor subscriptionStatus]
  -[ICMusicSubscriptionStatusMonitor .cxx_destruct]
  -[ICMusicSubscriptionStatusMonitor _handleUserIdentityStoreDidChange:]
  -[ICMusicSubscriptionStatusMonitor _beginObservingSubscriptionStatus]
  -[ICMusicSubscriptionStatusMonitor _requestSubscriptionStatusWithCachingPolicy:completion:]
  -[ICMusicSubscriptionStatusMonitor identity]
  -[ICMusicSubscriptionStatusMonitor refreshSubscriptionStatus]
  -[ICMusicSubscriptionStatusMonitor _handleSubscriptionStatusDidChange:]
  -[ICMusicSubscriptionStatusMonitor _initWithIdentityContext:]
  -[ICMusicSubscriptionStatusMonitor _endObservingSubscriptionStatus]
  -[ICMusicSubscriptionStatusMonitor beginObservingSubscriptionStatusWithHandler:]
  -[ICMusicSubscriptionStatusMonitor dealloc]
  -[ICMusicSubscriptionStatusMonitor endObservingSubscriptionStatusWithToken:]
  -[ICMusicSubscriptionStatusMonitor _updateWithSubscriptionStatus:]
  -[ICMusicSubscriptionStatusMonitor _effectiveIdentityForRequestingSubscriptionStatus]
  -[ICMusicSubscriptionStatusMonitor _isMonitoringSubscriptionStatusForAutoupdatingIdentity]


ICDelegateAccountStoreReader : NSObject
 @property  NSDate *lastExpirationPruningDate
 @property  long long overestimatedNumberOfTokens

  // instance methods
  -[ICDelegateAccountStoreReader enumerateDelegationUUIDsForUserIdentity:usingBlock:]
  -[ICDelegateAccountStoreReader enumerateTokensWithType:usingBlock:]
  -[ICDelegateAccountStoreReader .cxx_destruct]
  -[ICDelegateAccountStoreReader tokenForUserIdentity:]
  -[ICDelegateAccountStoreReader lastExpirationPruningDate]
  -[ICDelegateAccountStoreReader overestimatedNumberOfTokens]
  -[ICDelegateAccountStoreReader _enumerateQueryResults:usingBlock:]
  -[ICDelegateAccountStoreReader enumerateTokensUsingBlock:]
  -[ICDelegateAccountStoreReader initWithConnection:]
  -[ICDelegateAccountStoreReader _tokenWithSQLiteRow:]
  -[ICDelegateAccountStoreReader invalidate]
  -[ICDelegateAccountStoreReader identityPropertiesForUserIdentity:]
  -[ICDelegateAccountStoreReader _userIdentityWithSQLiteRow:]


ICRadioURLRequest : ICStoreURLRequest
 @property  BOOL backgroundRadioRequest
 @property  NSNumber *privateListeningEnabled
 @property  NSNumber *delegatedPrivateListeningEnabled
 @property  long long protocolVersion
 @property  @? radioContentDictionaryCreationBlock

  // instance methods
  -[ICRadioURLRequest protocolVersion]
  -[ICRadioURLRequest .cxx_destruct]
  -[ICRadioURLRequest setProtocolVersion:]
  -[ICRadioURLRequest setPrivateListeningEnabled:]
  -[ICRadioURLRequest initWithURLRequest:requestContext:]
  -[ICRadioURLRequest isPrivateListeningEnabled]
  -[ICRadioURLRequest setRadioContentDictionaryCreationBlock:]
  -[ICRadioURLRequest buildStoreURLRequestWithURLRequest:builderProperties:completionHandler:]
  -[ICRadioURLRequest setDelegatedPrivateListeningEnabled:]
  -[ICRadioURLRequest isDelegatedPrivateListeningEnabled]
  -[ICRadioURLRequest isBackgroundRadioRequest]
  -[ICRadioURLRequest _decorateHeaderPropertiesForURLRequest:withBuilderProperties:]
  -[ICRadioURLRequest radioContentDictionaryCreationBlock]
  -[ICRadioURLRequest setBackgroundRadioRequest:]


ICStoreURLResponseHandler : ICURLResponseHandler
  // class methods
  +[ICStoreURLResponseHandler _updateDefaultStorefrontIdentifier:usingIdentityStore:]

  // instance methods
  -[ICStoreURLResponseHandler _processDialogResponse:toRequest:completionHandler:]
  -[ICStoreURLResponseHandler _performAuthenticationForResponse:toRequest:completionHandler:]
  -[ICStoreURLResponseHandler processCompletedResponse:toRequest:withCompletionHandler:]
  -[ICStoreURLResponseHandler processInitialResponse:toRequest:withCompletionHandler:]
  -[ICStoreURLResponseHandler _verifyMescalSignatureForResponse:toRequest:completionHandler:]


ICPBDGSPlayerInfoContextRequestToken : PBCodable <NSCopying>
  // instance methods
  -[ICPBDGSPlayerInfoContextRequestToken .cxx_destruct]
  -[ICPBDGSPlayerInfoContextRequestToken dictionaryRepresentation]
  -[ICPBDGSPlayerInfoContextRequestToken writeTo:]
  -[ICPBDGSPlayerInfoContextRequestToken isEqual:]
  -[ICPBDGSPlayerInfoContextRequestToken readFrom:]
  -[ICPBDGSPlayerInfoContextRequestToken copyWithZone:]


_ICLLCurrentItemTransitionAction : PBCodable <NSCopying>
  // instance methods
  -[_ICLLCurrentItemTransitionAction .cxx_destruct]
  -[_ICLLCurrentItemTransitionAction dictionaryRepresentation]
  -[_ICLLCurrentItemTransitionAction writeTo:]
  -[_ICLLCurrentItemTransitionAction isEqual:]
  -[_ICLLCurrentItemTransitionAction readFrom:]
  -[_ICLLCurrentItemTransitionAction copyWithZone:]


ICSharedListeningConnectionReportEvent : NSObject
 @property  NSString *name
 @property  NSError *error
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  double duration
 @property  NSMutableArray *subEvents

  // instance methods
  -[ICSharedListeningConnectionReportEvent name]
  -[ICSharedListeningConnectionReportEvent setEndDate:]
  -[ICSharedListeningConnectionReportEvent .cxx_destruct]
  -[ICSharedListeningConnectionReportEvent setStartDate:]
  -[ICSharedListeningConnectionReportEvent setName:]
  -[ICSharedListeningConnectionReportEvent initWithName:]
  -[ICSharedListeningConnectionReportEvent startDate]
  -[ICSharedListeningConnectionReportEvent endDate]
  -[ICSharedListeningConnectionReportEvent setError:]
  -[ICSharedListeningConnectionReportEvent subEvents]
  -[ICSharedListeningConnectionReportEvent duration]
  -[ICSharedListeningConnectionReportEvent error]
  -[ICSharedListeningConnectionReportEvent setSubEvents:]
  -[ICSharedListeningConnectionReportEvent addSubEvent:]


ICSharedListeningConnectionReport : NSObject <MSVQRConnectionReportProtocol>
 @property  NSMutableArray *topLevelEvents
 @property  NSMapTable *allEvents
 @property  NSString *formattedReport
 @property  id analyticsPayload
 @property  NSString *sharedListeningSessionIdentifier
 @property  NSString *groupSessionIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ICSharedListeningConnectionReport analyticsPayload]
  -[ICSharedListeningConnectionReport .cxx_destruct]
  -[ICSharedListeningConnectionReport allEvents]
  -[ICSharedListeningConnectionReport endEvent:]
  -[ICSharedListeningConnectionReport init]
  -[ICSharedListeningConnectionReport endEvent:withError:]
  -[ICSharedListeningConnectionReport startEvent:]
  -[ICSharedListeningConnectionReport setGroupSessionIdentifier:]
  -[ICSharedListeningConnectionReport sharedListeningSessionIdentifier]
  -[ICSharedListeningConnectionReport setSharedListeningSessionIdentifier:]
  -[ICSharedListeningConnectionReport groupSessionIdentifier]
  -[ICSharedListeningConnectionReport startEvent:withParentEvent:]
  -[ICSharedListeningConnectionReport formattedReport]
  -[ICSharedListeningConnectionReport topLevelEvents]
  -[ICSharedListeningConnectionReport _addEvents:toReportString:eventLevel:]
  -[ICSharedListeningConnectionReport setTopLevelEvents:]
  -[ICSharedListeningConnectionReport setAllEvents:]


ICRequestOperation : ICAsyncOperation <NSProgressReporting>
 @property  NSProgress *progress
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ICRequestOperation .cxx_destruct]
  -[ICRequestOperation progress]
  -[ICRequestOperation init]
  -[ICRequestOperation setProgress:]
  -[ICRequestOperation finishWithError:]
  -[ICRequestOperation performRequestWithCompletionHandler:]
  -[ICRequestOperation performRequestOnOperationQueue:withCompletionHandler:]


ICSuzeLeaseSessionConfiguration : NSObject <NSCopying>
 @property  id leaseID
 @property  long long mediaType
 @property  ICStoreRequestContext *requestContext

  // instance methods
  -[ICSuzeLeaseSessionConfiguration .cxx_destruct]
  -[ICSuzeLeaseSessionConfiguration leaseID]
  -[ICSuzeLeaseSessionConfiguration requestContext]
  -[ICSuzeLeaseSessionConfiguration mediaType]
  -[ICSuzeLeaseSessionConfiguration copyWithZone:]
  -[ICSuzeLeaseSessionConfiguration initWithRequestContext:leaseID:mediaType:]


_ICLLRemoveQueueItemCommand : PBCodable <NSCopying>
  // instance methods
  -[_ICLLRemoveQueueItemCommand .cxx_destruct]
  -[_ICLLRemoveQueueItemCommand dictionaryRepresentation]
  -[_ICLLRemoveQueueItemCommand writeTo:]
  -[_ICLLRemoveQueueItemCommand isEqual:]
  -[_ICLLRemoveQueueItemCommand readFrom:]
  -[_ICLLRemoveQueueItemCommand copyWithZone:]


_ICLLAvailability : PBCodable <NSCopying>
  // instance methods
  -[_ICLLAvailability dictionaryRepresentation]
  -[_ICLLAvailability writeTo:]
  -[_ICLLAvailability isEqual:]
  -[_ICLLAvailability readFrom:]
  -[_ICLLAvailability dealloc]
  -[_ICLLAvailability copyWithZone:]


ICMatchRedownloadRequest : ICMediaRedownloadRequest
  // instance methods
  -[ICMatchRedownloadRequest init]
  -[ICMatchRedownloadRequest initWithRequestContext:itemSagaID:]


ICHTTPCookieStore : NSObject
  // class methods
  +[ICHTTPCookieStore sharedCookieStore]

  // instance methods
  -[ICHTTPCookieStore removeCookiesWithProperties:]
  -[ICHTTPCookieStore saveCookies:forURL:userIdentifier:]
  -[ICHTTPCookieStore _cookieDictionaryForURL:userIdentifier:]
  -[ICHTTPCookieStore _accountForUserIdentifier:]
  -[ICHTTPCookieStore .cxx_destruct]
  -[ICHTTPCookieStore getGlobalAccountCookiesForURL:]
  -[ICHTTPCookieStore getCookiesForURL:userIdentifier:]
  -[ICHTTPCookieStore _saveCookies:userIdentifier:]
  -[ICHTTPCookieStore getCookiesForURL:]
  -[ICHTTPCookieStore init]
  -[ICHTTPCookieStore getCookieWithName:userIdentifier:]
  -[ICHTTPCookieStore saveGlobalAccountCookies:forURL:]
  -[ICHTTPCookieStore getCookiesHeadersForURL:userIdentifier:]
  -[ICHTTPCookieStore removeAllCookies]
  -[ICHTTPCookieStore saveCookies:forURL:]
  -[ICHTTPCookieStore dealloc]
  -[ICHTTPCookieStore getCookiesForUserIdentifier:]


ICMusicAccountNotificationsSettingsSwitch : NSObject
 @property  BOOL isToggled
 @property  BOOL hasBeenPreviouslyToggled
 @property  NSString *identifier
 @property  NSDictionary *itemResponseDictionary

  // instance methods
  -[ICMusicAccountNotificationsSettingsSwitch .cxx_destruct]
  -[ICMusicAccountNotificationsSettingsSwitch initWithItemResponseDictionary:]
  -[ICMusicAccountNotificationsSettingsSwitch initWithToggleState:hasBeenToggled:identifier:]
  -[ICMusicAccountNotificationsSettingsSwitch isToggled]
  -[ICMusicAccountNotificationsSettingsSwitch identifier]
  -[ICMusicAccountNotificationsSettingsSwitch setIsToggled:]
  -[ICMusicAccountNotificationsSettingsSwitch hasBeenPreviouslyToggled]
  -[ICMusicAccountNotificationsSettingsSwitch itemResponseDictionary]
  -[ICMusicAccountNotificationsSettingsSwitch setHasBeenPreviouslyToggled:]


ICUserIdentityStore : NSObject <ICUserIdentityStoreBackendDelegate, NSSecureCoding>
 @property  long long identityStoreStyle
 @property  <ICUserIdentityStoreBackend> *_unsafeBackend
 @property  ICLocalStoreAccountProperties *localStoreAccountProperties
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ICUserIdentityStore defaultIdentityStore]
  +[ICUserIdentityStore supportsSecureCoding]
  +[ICUserIdentityStore _claimSingleWriterStatus]
  +[ICUserIdentityStore nullIdentityStore]
  +[ICUserIdentityStore testingIdentityStoreWithDatabasePath:]
  +[ICUserIdentityStore testingIdentityStoreWithSingleWriterService:]

  // instance methods
  -[ICUserIdentityStore _delegateAccountStoreDidChangeNotification:]
  -[ICUserIdentityStore synchronizeWithCompletionHandler:]
  -[ICUserIdentityStore removeDelegateTokensExpiringBeforeDate:completionHandler:]
  -[ICUserIdentityStore _prepareDelegateAccountStoreWithCompletionHandler:]
  -[ICUserIdentityStore identityStoreStyle]
  -[ICUserIdentityStore initWithCoder:]
  -[ICUserIdentityStore _existingIdentityPropertiesForUserIdentity:error:]
  -[ICUserIdentityStore addDelegationUUIDs:forUserIdentity:completionHandler:]
  -[ICUserIdentityStore setActiveLockerAccountWithDSID:completionHandler:]
  -[ICUserIdentityStore removeDelegateTokenForUserIdentity:completionHandler:]
  -[ICUserIdentityStore .cxx_destruct]
  -[ICUserIdentityStore _importValuesFromCodingHelper:]
  -[ICUserIdentityStore userIdentityStoreBackendDidChange:]
  -[ICUserIdentityStore _dsidForUserIdentity:error:]
  -[ICUserIdentityStore userIdentitiesForAllStoreAccountsWithError:]
  -[ICUserIdentityStore getDelegationUUIDsForUserIdentity:completionHandler:]
  -[ICUserIdentityStore _initCommon]
  -[ICUserIdentityStore _refreshLocalStoreAccountPropertiesAllowingDidChangeNotification:]
  -[ICUserIdentityStore getPropertiesForUserIdentity:completionHandler:]
  -[ICUserIdentityStore synchronize]
  -[ICUserIdentityStore enumerateDelegateTokensWithType:usingBlock:completionHandler:]
  -[ICUserIdentityStore removeAllDelegateTokensWithCompletionHandler:]
  -[ICUserIdentityStore _unsafe_deleteDelegateAccountStore]
  -[ICUserIdentityStore insertPropertiesForUserIdentity:usingBlock:completionHandler:]
  -[ICUserIdentityStore getVerificationContextForUserIdentity:error:]
  -[ICUserIdentityStore _openDelegateAccountStoreForUserIdentity:error:]
  -[ICUserIdentityStore getPropertiesForUserIdentity:error:]
  -[ICUserIdentityStore _icValidStoreAccountsFromACAccounts:]
  -[ICUserIdentityStore _unsafeBackend]
  -[ICUserIdentityStore isEqual:]
  -[ICUserIdentityStore enumerateDelegateTokensUsingBlock:completionHandler:]
  -[ICUserIdentityStore _registerForDelegateAccountStoreNotifications:]
  -[ICUserIdentityStore _initWithStyle:delegateAccountStoreOptions:]
  -[ICUserIdentityStore _openDelegateAccountStoreWithError:]
  -[ICUserIdentityStore setActiveAccountWithDSID:completionHandler:]
  -[ICUserIdentityStore _dsidForTimestamp:history:]
  -[ICUserIdentityStore insertPropertiesForUserIdentity:andPostAccountChangeNotification:usingBlock:completionHandler:]
  -[ICUserIdentityStore userIdentitiesForManageableAccountsWithError:]
  -[ICUserIdentityStore updatePropertiesForUserIdentity:usingBlock:]
  -[ICUserIdentityStore updatePropertiesForLocalStoreAccountUsingBlock:completionHandler:]
  -[ICUserIdentityStore _updateDelegateAccountStoreUsingBlock:]
  -[ICUserIdentityStore _assertNonNullIdentityStoreForSelector:]
  -[ICUserIdentityStore insertPropertiesForUserIdentity:usingBlock:]
  -[ICUserIdentityStore updatePropertiesForUserIdentity:usingBlock:completionHandler:]
  -[ICUserIdentityStore localStoreAccountProperties]
  -[ICUserIdentityStore removeDelegationUUIDs:forUserIdentity:completionHandler:]
  -[ICUserIdentityStore _reloadForExternalChange]
  -[ICUserIdentityStore _dispatchDidChangeNotification:didDelegateAccountStoreChange:]
  -[ICUserIdentityStore dealloc]
  -[ICUserIdentityStore _initializeLocalStoreAccountProperties]
  -[ICUserIdentityStore _resetDelegateAccountStoreWithCompletionHandler:]
  -[ICUserIdentityStore removePropertiesForUserIdentity:completionHandler:]
  -[ICUserIdentityStore _saveIdentityProperties:andPostAccountChangeNotification:forUserIdentity:error:]
  -[ICUserIdentityStore encodeWithCoder:]
  -[ICUserIdentityStore _allowsDelegationForUserIdentity:]
  -[ICUserIdentityStore getPropertiesForActiveICloudAccountReturningError:]
  -[ICUserIdentityStore DSIDForUserIdentity:outError:]
  -[ICUserIdentityStore _unregisterForDelegateAccountStoreNotifications:]


ICMachineDataActionHandler : NSObject
  // class methods
  +[ICMachineDataActionHandler sharedHandler]

  // instance methods
  -[ICMachineDataActionHandler .cxx_destruct]
  -[ICMachineDataActionHandler init]
  -[ICMachineDataActionHandler processAction:data:withRequestContext:version:withCompletionHandler:]
  -[ICMachineDataActionHandler processActionFromResponse:withRequestContext:withCompletionHandler:]


ICStoreVideoArtworkInfo : NSObject <NSSecureCoding>
 @property  NSDictionary *responseDictionary
 @property  NSString *stringRepresentation

  // class methods
  +[ICStoreVideoArtworkInfo supportsSecureCoding]

  // instance methods
  -[ICStoreVideoArtworkInfo stringRepresentation]
  -[ICStoreVideoArtworkInfo CRABSVideoURLMatchingSize:]
  -[ICStoreVideoArtworkInfo initWithCoder:]
  -[ICStoreVideoArtworkInfo HLSVideoURLForAspectRatio:]
  -[ICStoreVideoArtworkInfo responseDictionary]
  -[ICStoreVideoArtworkInfo initWithVideoArtworkResponseDictionary:]
  -[ICStoreVideoArtworkInfo .cxx_destruct]
  -[ICStoreVideoArtworkInfo isEqual:]
  -[ICStoreVideoArtworkInfo _aspectRatioKeyForAspectRatio:]
  -[ICStoreVideoArtworkInfo previewFrameArtworkInfoMatchingAspectRatio:]
  -[ICStoreVideoArtworkInfo supportedSizesForCRABSVideoForAspectRatio:]
  -[ICStoreVideoArtworkInfo copyWithZone:]
  -[ICStoreVideoArtworkInfo encodeWithCoder:]


ICRadioTrackInfoContentReference : ICRadioStoreContentReference <NSCopying, NSSecureCoding>
 @property  NSDictionary *trackInfo

  // class methods
  +[ICRadioTrackInfoContentReference supportsSecureCoding]

  // instance methods
  -[ICRadioTrackInfoContentReference initWithCoder:]
  -[ICRadioTrackInfoContentReference .cxx_destruct]
  -[ICRadioTrackInfoContentReference trackInfo]
  -[ICRadioTrackInfoContentReference copyWithZone:]
  -[ICRadioTrackInfoContentReference encodeWithCoder:]
  -[ICRadioTrackInfoContentReference rawContentDictionaryWithSubscriptionStatus:]
  -[ICRadioTrackInfoContentReference initWithStoreIdentifier:trackInfo:]


ICRadioContentReference : NSObject <NSCopying, NSSecureCoding>
 @property  long long contentType
 @property  NSString *playbackAuthorizationToken

  // class methods
  +[ICRadioContentReference supportsSecureCoding]
  +[ICRadioContentReference storeItemWithIdentifier:]

  // instance methods
  -[ICRadioContentReference initWithCoder:]
  -[ICRadioContentReference .cxx_destruct]
  -[ICRadioContentReference contentType]
  -[ICRadioContentReference playbackAuthorizationToken]
  -[ICRadioContentReference copyWithZone:]
  -[ICRadioContentReference setPlaybackAuthorizationToken:]
  -[ICRadioContentReference encodeWithCoder:]
  -[ICRadioContentReference rawContentDictionaryWithSubscriptionStatus:]
  -[ICRadioContentReference matchDictionaryWithSubscriptionStatus:]


ICStorePlatformOffer : NSObject
 @property  NSArray *assets
 @property  NSString *buyParameters
 @property  NSString *formattedPrice
 @property  NSString *offerType
 @property  NSNumber *price

  // instance methods
  -[ICStorePlatformOffer initWithResponseDictionary:]
  -[ICStorePlatformOffer .cxx_destruct]
  -[ICStorePlatformOffer assets]
  -[ICStorePlatformOffer formattedPrice]
  -[ICStorePlatformOffer price]
  -[ICStorePlatformOffer offerType]
  -[ICStorePlatformOffer buyParameters]


ICDelegationProviderNetService : NSObject <NSNetServiceDelegate>
 @property  NSNetService *netService
 @property  NSArray *delegationAccountUUIDs
 @property  NSString *deviceName
 @property  long long securityMode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ICDelegationProviderNetService _setState:]
  -[ICDelegationProviderNetService netService:didNotResolve:]
  -[ICDelegationProviderNetService netService:didUpdateTXTRecordData:]
  -[ICDelegationProviderNetService deviceName]
  -[ICDelegationProviderNetService .cxx_destruct]
  -[ICDelegationProviderNetService netServiceDidResolveAddress:]
  -[ICDelegationProviderNetService netService]
  -[ICDelegationProviderNetService dealloc]
  -[ICDelegationProviderNetService initWithNetService:]
  -[ICDelegationProviderNetService securityMode]
  -[ICDelegationProviderNetService delegationAccountUUIDs]
  -[ICDelegationProviderNetService getResolvedStreamsWithCompletionHandler:]
  -[ICDelegationProviderNetService _updateTXTRecordProperties]
  -[ICDelegationProviderNetService _resolveWithCompletionHandler:]


ICSQLiteConnection : NSObject
 @property  NSError *currentError
 @property  ICSQLiteConnectionOptions *options
 @property  <ICSQLiteConnectionDelegate> *delegate
 @property  long long lastChangeCount
 @property  NSNumber *userVersion

  // instance methods
  -[ICSQLiteConnection _prepareStatement:error:]
  -[ICSQLiteConnection performTransaction:]
  -[ICSQLiteConnection setUserVersion:]
  -[ICSQLiteConnection userVersion]
  -[ICSQLiteConnection _performResetAfterCorruptionError]
  -[ICSQLiteConnection _verifiedStatementForSQL:error:]
  -[ICSQLiteConnection options]
  -[ICSQLiteConnection _close]
  -[ICSQLiteConnection truncate]
  -[ICSQLiteConnection .cxx_destruct]
  -[ICSQLiteConnection initWithOptions:]
  -[ICSQLiteConnection _statementForPreparedStatement:error:]
  -[ICSQLiteConnection setDelegate:]
  -[ICSQLiteConnection _finalizeAllStatements]
  -[ICSQLiteConnection _flushAfterTransactionBlocks]
  -[ICSQLiteConnection executePreparedStatement:error:bindings:]
  -[ICSQLiteConnection executePreparedStatement:error:]
  -[ICSQLiteConnection _verifiedStatementForPreparedStatement:error:]
  -[ICSQLiteConnection executeStatement:error:bindings:]
  -[ICSQLiteConnection lastChangeCount]
  -[ICSQLiteConnection currentError]
  -[ICSQLiteConnection resetAfterIOError]
  -[ICSQLiteConnection executeStatement:error:]
  -[ICSQLiteConnection resetAfterCorruptionError]
  -[ICSQLiteConnection _open]
  -[ICSQLiteConnection delegate]
  -[ICSQLiteConnection executeQuery:withResults:]
  -[ICSQLiteConnection executePreparedQuery:withResults:]
  -[ICSQLiteConnection close]
  -[ICSQLiteConnection _executeStatement:error:]
  -[ICSQLiteConnection open]
  -[ICSQLiteConnection dispatchAfterTransaction:]
  -[ICSQLiteConnection prepareStatement:error:]


ICURLResponse : NSObject
 @property  NSURLRequest *urlRequest
 @property  NSURLResponse *urlResponse
 @property  NSData *bodyData
 @property  NSURL *bodyDataURL
 @property  NSDate *expirationDate
 @property  long long statusCode
 @property  ICURLPerformanceMetrics *performanceMetrics

  // instance methods
  -[ICURLResponse bodyData]
  -[ICURLResponse _prepareParsedBodyResponse]
  -[ICURLResponse urlRequest]
  -[ICURLResponse bodyDataURL]
  -[ICURLResponse .cxx_destruct]
  -[ICURLResponse parsedBody]
  -[ICURLResponse setPerformanceMetrics:]
  -[ICURLResponse parsedBodyArray]
  -[ICURLResponse parsedBodyDictionary]
  -[ICURLResponse parsedBodyText]
  -[ICURLResponse urlResponse]
  -[ICURLResponse initWithURLResponse:urlRequest:bodyDataURL:performanceMetrics:]
  -[ICURLResponse performanceMetrics]
  -[ICURLResponse initWithURLResponse:urlRequest:bodyData:performanceMetrics:]
  -[ICURLResponse statusCode]
  -[ICURLResponse expirationDate]


ICMediaAPIURLMappingProvider : NSObject
  // class methods
  +[ICMediaAPIURLMappingProvider sharedProvider]

  // instance methods
  -[ICMediaAPIURLMappingProvider _cacheFileURL]
  -[ICMediaAPIURLMappingProvider _loadCacheDictionary]
  -[ICMediaAPIURLMappingProvider _saveCachedResponsePayload:eTag:]
  -[ICMediaAPIURLMappingProvider getCurrentURLMappingSet]
  -[ICMediaAPIURLMappingProvider updateURLMappingsWithCompletion:]
  -[ICMediaAPIURLMappingProvider clearCachedURLMappings]
  -[ICMediaAPIURLMappingProvider setCurrentURLMappingSet:]


ICURLBagLibraryDAAPConfiguration : NSObject
 @property  long long databaseID
 @property  NSString *databaseName
 @property  NSString *baseURL
 @property  BOOL onlineGeniusForMatchEnabled
 @property  long long playDataBatchIntervalInMinutes
 @property  long long subscribedContainerPollingFrequencySeconds
 @property  long long updatePollingFrequencySeconds
 @property  long long autoUpdatePollingFrequencySeconds
 @property  unsigned long maxSyncRetryIntervalSeconds

  // instance methods
  -[ICURLBagLibraryDAAPConfiguration databaseName]
  -[ICURLBagLibraryDAAPConfiguration .cxx_destruct]
  -[ICURLBagLibraryDAAPConfiguration baseURL]
  -[ICURLBagLibraryDAAPConfiguration databaseID]
  -[ICURLBagLibraryDAAPConfiguration initWithBagLibraryDAAPDictionary:]
  -[ICURLBagLibraryDAAPConfiguration isOnlineGeniusForMatchEnabled]
  -[ICURLBagLibraryDAAPConfiguration playDataBatchIntervalInMinutes]
  -[ICURLBagLibraryDAAPConfiguration subscribedContainerPollingFrequencySeconds]
  -[ICURLBagLibraryDAAPConfiguration updatePollingFrequencySeconds]
  -[ICURLBagLibraryDAAPConfiguration autoUpdatePollingFrequencySeconds]
  -[ICURLBagLibraryDAAPConfiguration maxSyncRetryIntervalSeconds]


ICMusicSubscriptionFairPlayController : NSObject
  // class methods
  +[ICMusicSubscriptionFairPlayController sharedController]

  // instance methods
  -[ICMusicSubscriptionFairPlayController .cxx_destruct]
  -[ICMusicSubscriptionFairPlayController stopSubscriptionLeaseWithCompletion:]
  -[ICMusicSubscriptionFairPlayController _handleSubscriptionFairPlayKeyStatusChangedDistributedNotification:]
  -[ICMusicSubscriptionFairPlayController importSubscriptionKeyBagData:completionHandler:]
  -[ICMusicSubscriptionFairPlayController generateSubscriptionLeaseRequestWithAccountUniqueID:transactionType:completionHandler:]
  -[ICMusicSubscriptionFairPlayController getKeyStatusForAccountUniqueIdentifier:error:]
  -[ICMusicSubscriptionFairPlayController generateSubscriptionBagRequestWithAccountUniqueIdentifier:transactionType:machineIDData:completionHandler:]
  -[ICMusicSubscriptionFairPlayController getKeyStatusListWithCompletionHandler:]
  -[ICMusicSubscriptionFairPlayController _init]
  -[ICMusicSubscriptionFairPlayController importSubscriptionKeyBagData:leaseInfoData:completionHandler:]


ICMusicSubscriptionPlaybackResponse : NSObject <ICStoreResponseProtocol>
 @property  NSData *leaseInfoData
 @property  NSData *subscriptionKeyBagData
 @property  NSDate *leaseExpirationDate
 @property  ICStoreDialogResponse *dialog
 @property  NSString *householdID
 @property  NSArray *items
 @property  NSError *serverError
 @property  NSDictionary *metricsDictionary
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ICMusicSubscriptionPlaybackResponse serverError]
  -[ICMusicSubscriptionPlaybackResponse dialog]
  -[ICMusicSubscriptionPlaybackResponse metricsDictionary]
  -[ICMusicSubscriptionPlaybackResponse items]
  -[ICMusicSubscriptionPlaybackResponse leaseInfoData]
  -[ICMusicSubscriptionPlaybackResponse .cxx_destruct]
  -[ICMusicSubscriptionPlaybackResponse subscriptionKeyBagData]
  -[ICMusicSubscriptionPlaybackResponse householdID]
  -[ICMusicSubscriptionPlaybackResponse initWithResponseDictionary:requestDate:urlBag:]
  -[ICMusicSubscriptionPlaybackResponse leaseExpirationDate]
  -[ICMusicSubscriptionPlaybackResponse itemWithStoreAdamID:]


ICMachineDataOperation : ICAsyncOperation
 @property  NSData *data
 @property  ICStoreRequestContext *requestContext
 @property  long long protocolVersion
 @property  @? completionHandler

  // instance methods
  -[ICMachineDataOperation protocolVersion]
  -[ICMachineDataOperation .cxx_destruct]
  -[ICMachineDataOperation setProtocolVersion:]
  -[ICMachineDataOperation data]
  -[ICMachineDataOperation setCompletionHandler:]
  -[ICMachineDataOperation requestContext]
  -[ICMachineDataOperation setData:]
  -[ICMachineDataOperation setRequestContext:]
  -[ICMachineDataOperation completionHandler]


ICSecureKeyDeliveryRequest : NSObject <NSCopying>
 @property  NSURL *certificateURL
 @property  NSString *contentURI
 @property  NSURL *keyServerURL
 @property  long long leaseActionType
 @property  ICRequestContext *requestContext
 @property  long long rentalID
 @property  BOOL skippedRentalCheckout
 @property  BOOL ITunesStoreRequest
 @property  long long qualityOfService
 @property  @? serverPlaybackContextDataCreationHandler
 @property  @? asyncServerPlaybackContextDataCreationHandler
 @property  BOOL shouldIncludeDeviceGUID
 @property  long long requestProtocolType
 @property  BOOL isOfflineDownload
 @property  NSNumber *adamID
 @property  NSString *playbackToken

  // instance methods
  -[ICSecureKeyDeliveryRequest adamID]
  -[ICSecureKeyDeliveryRequest qualityOfService]
  -[ICSecureKeyDeliveryRequest .cxx_destruct]
  -[ICSecureKeyDeliveryRequest setITunesStoreRequest:]
  -[ICSecureKeyDeliveryRequest certificateURL]
  -[ICSecureKeyDeliveryRequest setQualityOfService:]
  -[ICSecureKeyDeliveryRequest init]
  -[ICSecureKeyDeliveryRequest isITunesStoreRequest]
  -[ICSecureKeyDeliveryRequest setRentalID:]
  -[ICSecureKeyDeliveryRequest performWithResponseHandler:]
  -[ICSecureKeyDeliveryRequest skippedRentalCheckout]
  -[ICSecureKeyDeliveryRequest setCertificateURL:]
  -[ICSecureKeyDeliveryRequest setKeyServerURL:]
  -[ICSecureKeyDeliveryRequest setSkippedRentalCheckout:]
  -[ICSecureKeyDeliveryRequest rentalID]
  -[ICSecureKeyDeliveryRequest keyServerURL]
  -[ICSecureKeyDeliveryRequest requestContext]
  -[ICSecureKeyDeliveryRequest setRequestContext:]
  -[ICSecureKeyDeliveryRequest copyWithZone:]
  -[ICSecureKeyDeliveryRequest setAdamID:]
  -[ICSecureKeyDeliveryRequest setShouldIncludeDeviceGUID:]
  -[ICSecureKeyDeliveryRequest configureUsingContentKeyRequest:]
  -[ICSecureKeyDeliveryRequest setIsOfflineDownload:]
  -[ICSecureKeyDeliveryRequest setRequestProtocolType:]
  -[ICSecureKeyDeliveryRequest setPlaybackToken:]
  -[ICSecureKeyDeliveryRequest setLeaseActionType:]
  -[ICSecureKeyDeliveryRequest playbackToken]
  -[ICSecureKeyDeliveryRequest setServerPlaybackContextDataCreationHandler:]
  -[ICSecureKeyDeliveryRequest setContentURI:]
  -[ICSecureKeyDeliveryRequest setAsyncServerPlaybackContextDataCreationHandler:]
  -[ICSecureKeyDeliveryRequest configureUsingAssetResourceLoadingRequest:]
  -[ICSecureKeyDeliveryRequest contentURI]
  -[ICSecureKeyDeliveryRequest leaseActionType]
  -[ICSecureKeyDeliveryRequest serverPlaybackContextDataCreationHandler]
  -[ICSecureKeyDeliveryRequest asyncServerPlaybackContextDataCreationHandler]
  -[ICSecureKeyDeliveryRequest shouldIncludeDeviceGUID]
  -[ICSecureKeyDeliveryRequest requestProtocolType]
  -[ICSecureKeyDeliveryRequest isOfflineDownload]


ICSecureKeyDeliveryRequestOperation : ICAsyncOperation
 @property  ICSecureKeyDeliveryRequest *request
 @property  @? responseHandler

  // instance methods
  -[ICSecureKeyDeliveryRequestOperation setRequest:]
  -[ICSecureKeyDeliveryRequestOperation .cxx_destruct]
  -[ICSecureKeyDeliveryRequestOperation responseHandler]
  -[ICSecureKeyDeliveryRequestOperation setResponseHandler:]
  -[ICSecureKeyDeliveryRequestOperation execute]
  -[ICSecureKeyDeliveryRequestOperation request]
  -[ICSecureKeyDeliveryRequestOperation _createSimplifiedProtocolRequestBodyUsingPlaybackContextData:]
  -[ICSecureKeyDeliveryRequestOperation _createDefaultProtocolRequestBodyUsingPlaybackContextData:]
  -[ICSecureKeyDeliveryRequestOperation _createServerPlaybackContextUsingCertificateData:completion:]


_ICLLClientInfoAction : PBCodable <NSCopying>
  // instance methods
  -[_ICLLClientInfoAction dictionaryRepresentation]
  -[_ICLLClientInfoAction writeTo:]
  -[_ICLLClientInfoAction isEqual:]
  -[_ICLLClientInfoAction readFrom:]
  -[_ICLLClientInfoAction copyWithZone:]


ICEnvironmentMonitor : NSObject <NWNetworkOfInterestManagerDelegate, CoreTelephonyClientRegistrationDelegate, CoreTelephonyClientDataDelegate>
 @property  BOOL charging
 @property  long long networkType
 @property  long long lastKnownNetworkType
 @property  NSDictionary *signalStrength
 @property  NSDictionary *signalInfo
 @property  BOOL remoteServerReachable
 @property  BOOL remoteServerLikelyReachable
 @property  BOOL currentNetworkLinkHighQuality
 @property  BOOL currentNetworkLinkExpensive
 @property  BOOL wifiAssociated
 @property  BOOL ethernetWired
 @property  BOOL wiFiActive
 @property  BOOL networkConstrained
 @property  unsigned long currentThermalLevel
 @property  double currentBatteryLevel
 @property  NSString *telephonyStatusIndicator
 @property  NSString *telephonyOperatorName
 @property  NSString *telephonyRegistrationStatus
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ICEnvironmentMonitor sharedMonitor]

  // instance methods
  -[ICEnvironmentMonitor networkType]
  -[ICEnvironmentMonitor _currentNetworkType]
  -[ICEnvironmentMonitor isCurrentNetworkLinkHighQuality]
  -[ICEnvironmentMonitor _onQueue_updateNetworkReachabilityAndNotifyObservers:]
  -[ICEnvironmentMonitor _handleCTServerConnectionNotification:userInfo:]
  -[ICEnvironmentMonitor isNetworkConstrained]
  -[ICEnvironmentMonitor .cxx_destruct]
  -[ICEnvironmentMonitor _onQueue_loadInitialThermalLevel]
  -[ICEnvironmentMonitor _onQueue_updateThermalLevelWithToken:]
  -[ICEnvironmentMonitor isWiFiActive]
  -[ICEnvironmentMonitor didStartTrackingNOI:]
  -[ICEnvironmentMonitor currentThermalLevel]
  -[ICEnvironmentMonitor telephonyRegistrationStatus]
  -[ICEnvironmentMonitor init]
  -[ICEnvironmentMonitor isCurrentNetworkLinkExpensive]
  -[ICEnvironmentMonitor _updatePowerStateNotifyingObservers:]
  -[ICEnvironmentMonitor addObserver:]
  -[ICEnvironmentMonitor telephonyStatusIndicator]
  -[ICEnvironmentMonitor _networkConstrained]
  -[ICEnvironmentMonitor signalInfo]
  -[ICEnvironmentMonitor currentBatteryLevel]
  -[ICEnvironmentMonitor _networkTypeFromWatchCarousel]
  -[ICEnvironmentMonitor _currentCellularLinkQuality]
  -[ICEnvironmentMonitor isWiFiAssociated]
  -[ICEnvironmentMonitor _networkTypeFromTelephonyStatusIndicator:]
  -[ICEnvironmentMonitor _onQueue_updateTelephonyStateAndNotifyObservers:]
  -[ICEnvironmentMonitor telephonyOperatorName]
  -[ICEnvironmentMonitor dealloc]
  -[ICEnvironmentMonitor cellMonitorUpdate:info:]
  -[ICEnvironmentMonitor _handleApplicationDidEnterForegroundNotification:]
  -[ICEnvironmentMonitor lastKnownNetworkType]
  -[ICEnvironmentMonitor isCharging]
  -[ICEnvironmentMonitor currentDataSimChanged:]
  -[ICEnvironmentMonitor removeObserver:]
  -[ICEnvironmentMonitor isRemoteServerReachable]
  -[ICEnvironmentMonitor signalStrength]
  -[ICEnvironmentMonitor isRemoteServerLikelyReachable]
  -[ICEnvironmentMonitor observeValueForKeyPath:ofObject:change:context:]
  -[ICEnvironmentMonitor didStopTrackingAllNOIs:]
  -[ICEnvironmentMonitor isEthernetWired]
  -[ICEnvironmentMonitor didStopTrackingNOI:]
  -[ICEnvironmentMonitor _isWiFiAssociated]


ICADIUtilities : NSObject
  // class methods
  +[ICADIUtilities generateMachineDataForAccountID:returningMachineIDData:otpData:error:]


ICADIProvisionSession : NSObject
  // instance methods
  -[ICADIProvisionSession initWithAccountID:]
  -[ICADIProvisionSession dealloc]
  -[ICADIProvisionSession startWithServerActionData:returningClientData:error:]
  -[ICADIProvisionSession endWithMessageData:transportKey:error:]
  -[ICADIProvisionSession _destroySession]


ICUserCredentialProvider : NSObject
  // class methods
  +[ICUserCredentialProvider sharedProvider]

  // instance methods
  -[ICUserCredentialProvider _handleCredentialRequestIdentityPropertiesForSession:]
  -[ICUserCredentialProvider .cxx_destruct]
  -[ICUserCredentialProvider init]
  -[ICUserCredentialProvider performCredentialRequests:withResponseHandler:]
  -[ICUserCredentialProvider _handleRequestIndependentPropertiesForSession:]
  -[ICUserCredentialProvider _handleDelegationAccountUUIDsForSession:]
  -[ICUserCredentialProvider performCredentialRequest:withResponseHandler:]
  -[ICUserCredentialProvider _handlePendingDelegationRequestsForSession:]
  -[ICUserCredentialProvider _handleIdentityProperties:forIdentity:loadingError:credentialRequest:session:]


_ICUserCredentialProviderRequestSession : NSObject
 @property  ICUserIdentityProperties *activeICloudAccountProperties
 @property  NSArray *credentialRequests
 @property  NSMapTable *delegationCredentialRequestToSpecificUserIdentity
 @property  NSMapTable *delegationCredentialRequestToIdentityProperties
 @property  NSMutableDictionary *delegationUserIdentityToUUIDs
 @property  ICUserIdentityStore *identityStore
 @property  long long maximumQualityOfService
 @property  NSMutableArray *pendingPropertyLoadCredentialRequests
 @property  NSMutableArray *pendingResponseCredentialRequests
 @property  BOOL hasPendingResponses
 @property  @? responseHandler

  // instance methods
  -[_ICUserCredentialProviderRequestSession setDelegationUserIdentityToUUIDs:]
  -[_ICUserCredentialProviderRequestSession hasPendingResponses]
  -[_ICUserCredentialProviderRequestSession pendingPropertyLoadCredentialRequests]
  -[_ICUserCredentialProviderRequestSession .cxx_destruct]
  -[_ICUserCredentialProviderRequestSession setDelegationCredentialRequestToIdentityProperties:]
  -[_ICUserCredentialProviderRequestSession responseHandler]
  -[_ICUserCredentialProviderRequestSession initWithCredentialRequests:responseHandler:]
  -[_ICUserCredentialProviderRequestSession maximumQualityOfService]
  -[_ICUserCredentialProviderRequestSession setActiveICloudAccountProperties:]
  -[_ICUserCredentialProviderRequestSession delegationCredentialRequestToIdentityProperties]
  -[_ICUserCredentialProviderRequestSession pendingResponseCredentialRequests]
  -[_ICUserCredentialProviderRequestSession setPendingResponseCredentialRequests:]
  -[_ICUserCredentialProviderRequestSession identityStore]
  -[_ICUserCredentialProviderRequestSession delegationCredentialRequestToSpecificUserIdentity]
  -[_ICUserCredentialProviderRequestSession setPendingPropertyLoadCredentialRequests:]
  -[_ICUserCredentialProviderRequestSession activeICloudAccountProperties]
  -[_ICUserCredentialProviderRequestSession delegationUserIdentityToUUIDs]
  -[_ICUserCredentialProviderRequestSession setDelegationCredentialRequestToSpecificUserIdentity:]
  -[_ICUserCredentialProviderRequestSession credentialRequests]


ICLocalStoreAccountProperties : NSObject <NSCopying, NSMutableCopying, NSSecureCoding>
 @property  NSDictionary *propertyListRepresentation
 @property  NSString *storefrontIdentifier

  // class methods
  +[ICLocalStoreAccountProperties supportsSecureCoding]

  // instance methods
  -[ICLocalStoreAccountProperties initWithCoder:]
  -[ICLocalStoreAccountProperties .cxx_destruct]
  -[ICLocalStoreAccountProperties _copyLocalStoreAccountPropertiesToOtherInstance:withZone:]
  -[ICLocalStoreAccountProperties isEqual:]
  -[ICLocalStoreAccountProperties initWithPropertyListRepresentation:]
  -[ICLocalStoreAccountProperties propertyListRepresentation]
  -[ICLocalStoreAccountProperties mutableCopyWithZone:]
  -[ICLocalStoreAccountProperties storefrontIdentifier]
  -[ICLocalStoreAccountProperties copyWithZone:]
  -[ICLocalStoreAccountProperties encodeWithCoder:]


ICMutableLocalStoreAccountProperties : ICLocalStoreAccountProperties
 @property  NSString *storefrontIdentifier

  // instance methods
  -[ICMutableLocalStoreAccountProperties copyWithZone:]
  -[ICMutableLocalStoreAccountProperties setStorefrontIdentifier:]


ICPlayActivityEventItemIDs : NSObject <NSSecureCoding, NSCopying, NSMutableCopying, NSSecureCoding>
 @property  unsigned long cloudID
 @property  NSString *lyricsID
 @property  long long purchasedAdamID
 @property  long long radioAdamID
 @property  long long equivalencySourceAdamID
 @property  long long reportingAdamID
 @property  long long subscriptionAdamID

  // class methods
  +[ICPlayActivityEventItemIDs supportsSecureCoding]

  // instance methods
  -[ICPlayActivityEventItemIDs initWithCoder:]
  -[ICPlayActivityEventItemIDs cloudID]
  -[ICPlayActivityEventItemIDs purchasedAdamID]
  -[ICPlayActivityEventItemIDs .cxx_destruct]
  -[ICPlayActivityEventItemIDs lyricsID]
  -[ICPlayActivityEventItemIDs reportingAdamID]
  -[ICPlayActivityEventItemIDs radioAdamID]
  -[ICPlayActivityEventItemIDs equivalencySourceAdamID]
  -[ICPlayActivityEventItemIDs mutableCopyWithZone:]
  -[ICPlayActivityEventItemIDs _copyWithClass:]
  -[ICPlayActivityEventItemIDs subscriptionAdamID]
  -[ICPlayActivityEventItemIDs copyWithZone:]
  -[ICPlayActivityEventItemIDs encodeWithCoder:]


ICMutablePlayActivityEventItemIDs : ICPlayActivityEventItemIDs
 @property  unsigned long cloudID
 @property  NSString *lyricsID
 @property  long long purchasedAdamID
 @property  long long radioAdamID
 @property  long long equivalencySourceAdamID
 @property  long long reportingAdamID
 @property  long long subscriptionAdamID

  // instance methods
  -[ICMutablePlayActivityEventItemIDs setSubscriptionAdamID:]
  -[ICMutablePlayActivityEventItemIDs setRadioAdamID:]
  -[ICMutablePlayActivityEventItemIDs setEquivalencySourceAdamID:]
  -[ICMutablePlayActivityEventItemIDs setPurchasedAdamID:]
  -[ICMutablePlayActivityEventItemIDs setReportingAdamID:]
  -[ICMutablePlayActivityEventItemIDs setCloudID:]
  -[ICMutablePlayActivityEventItemIDs setLyricsID:]
  -[ICMutablePlayActivityEventItemIDs copyWithZone:]


ICMusicSubscriptionStatus : NSObject <NSMutableCopying, NSCopying, NSSecureCoding>
 @property  unsigned long capabilities
 @property  BOOL hasCatalogPlaybackCapability
 @property  BOOL hasAddToCloudLibraryCapability
 @property  BOOL cloudMusicServiceEnabled
 @property  NSDictionary *dictionaryRepresentation
 @property  NSDictionary *responseDictionary
 @property  BOOL minorAccountHolder
 @property  BOOL hasFamily
 @property  BOOL hasFamilyGreaterThanOneMember
 @property  BOOL headOfHousehold
 @property  BOOL matchEnabled
 @property  NSDate *expirationDate
 @property  BOOL hasOfflineSlots
 @property  BOOL inFreeTrial
 @property  BOOL eligibleForFreeTrial
 @property  BOOL purchaser
 @property  long long carrierBundlingStatusType
 @property  long long reasonType
 @property  long long sourceType
 @property  long long statusType
 @property  BOOL administrator
 @property  BOOL discoveryModeEligible
 @property  BOOL partOfBundle
 @property  BOOL bundleOwner
 @property  NSArray *eligibleOffers
 @property  BOOL inGlidePreview
 @property  NSArray *termsStatusList
 @property  NSString *phoneNumber
 @property  NSString *cellularOperatorName
 @property  NSString *sessionIdentifier
 @property  long long carrierBundlingErrorCode
 @property  NSNumber *acceptSilentAuth

  // class methods
  +[ICMusicSubscriptionStatus _capabilitiesForStatusType:carrierBundlingStatusType:isMatchEnabled:]
  +[ICMusicSubscriptionStatus supportsSecureCoding]

  // instance methods
  -[ICMusicSubscriptionStatus isPurchaser]
  -[ICMusicSubscriptionStatus hasCapability:]
  -[ICMusicSubscriptionStatus sourceType]
  -[ICMusicSubscriptionStatus carrierBundlingErrorCode]
  -[ICMusicSubscriptionStatus isInFreeTrial]
  -[ICMusicSubscriptionStatus cellularOperatorName]
  -[ICMusicSubscriptionStatus isMatchEnabled]
  -[ICMusicSubscriptionStatus hasCatalogPlaybackCapability]
  -[ICMusicSubscriptionStatus isAdministrator]
  -[ICMusicSubscriptionStatus initWithCoder:]
  -[ICMusicSubscriptionStatus isDiscoveryModeEligible]
  -[ICMusicSubscriptionStatus eligibleOffers]
  -[ICMusicSubscriptionStatus isCloudMusicServiceEnabled]
  -[ICMusicSubscriptionStatus responseDictionary]
  -[ICMusicSubscriptionStatus isEqualToStatus:]
  -[ICMusicSubscriptionStatus acceptSilentAuth]
  -[ICMusicSubscriptionStatus statusType]
  -[ICMusicSubscriptionStatus hasFamilyGreaterThanOneMember]
  -[ICMusicSubscriptionStatus isHeadOfHousehold]
  -[ICMusicSubscriptionStatus isMinorAccountHolder]
  -[ICMusicSubscriptionStatus isBundleOnwer]
  -[ICMusicSubscriptionStatus initWithResponseDictionary:]
  -[ICMusicSubscriptionStatus capabilities]
  -[ICMusicSubscriptionStatus .cxx_destruct]
  -[ICMusicSubscriptionStatus dictionaryRepresentation]
  -[ICMusicSubscriptionStatus sessionIdentifier]
  -[ICMusicSubscriptionStatus isInGlidePreview]
  -[ICMusicSubscriptionStatus phoneNumber]
  -[ICMusicSubscriptionStatus termsStatusList]
  -[ICMusicSubscriptionStatus isEligibleForFreeTrial]
  -[ICMusicSubscriptionStatus isEqual:]
  -[ICMusicSubscriptionStatus hasAddToCloudLibraryCapability]
  -[ICMusicSubscriptionStatus hasOfflineSlots]
  -[ICMusicSubscriptionStatus reasonType]
  -[ICMusicSubscriptionStatus _init]
  -[ICMusicSubscriptionStatus mutableCopyWithZone:]
  -[ICMusicSubscriptionStatus copyWithZone:]
  -[ICMusicSubscriptionStatus isPartOfBundle]
  -[ICMusicSubscriptionStatus expirationDate]
  -[ICMusicSubscriptionStatus hasFamily]
  -[ICMusicSubscriptionStatus encodeWithCoder:]
  -[ICMusicSubscriptionStatus carrierBundlingStatusType]
  -[ICMusicSubscriptionStatus _copySubscriptionStatusPropertiesToStatus:withZone:]


ICMutableMusicSubscriptionStatus : ICMusicSubscriptionStatus
 @property  BOOL minorAccountHolder
 @property  BOOL hasFamily
 @property  BOOL hasFamilyGreaterThanOneMember
 @property  BOOL headOfHousehold
 @property  BOOL matchEnabled
 @property  NSDate *expirationDate
 @property  BOOL hasOfflineSlots
 @property  BOOL inFreeTrial
 @property  BOOL eligibleForFreeTrial
 @property  BOOL purchaser
 @property  long long carrierBundlingStatusType
 @property  long long reasonType
 @property  long long sourceType
 @property  long long statusType
 @property  BOOL administrator
 @property  BOOL discoveryModeEligible
 @property  long long statusCode
 @property  NSArray *termsStatusList
 @property  NSString *phoneNumber
 @property  NSString *cellularOperatorName
 @property  NSString *sessionIdentifier
 @property  long long carrierBundlingErrorCode
 @property  BOOL partOfBundle
 @property  BOOL bundleOwner
 @property  NSArray *eligibleOffers
 @property  BOOL inGlidePreview

  // instance methods
  -[ICMutableMusicSubscriptionStatus setCarrierBundlingErrorCode:]
  -[ICMutableMusicSubscriptionStatus setSourceType:]
  -[ICMutableMusicSubscriptionStatus setCellularOperatorName:]
  -[ICMutableMusicSubscriptionStatus setAdministrator:]
  -[ICMutableMusicSubscriptionStatus setReasonType:]
  -[ICMutableMusicSubscriptionStatus setSessionIdentifier:]
  -[ICMutableMusicSubscriptionStatus setHasFamily:]
  -[ICMutableMusicSubscriptionStatus setInFreeTrial:]
  -[ICMutableMusicSubscriptionStatus setInGlidePreview:]
  -[ICMutableMusicSubscriptionStatus setHasOfflineSlots:]
  -[ICMutableMusicSubscriptionStatus setEligibleOffers:]
  -[ICMutableMusicSubscriptionStatus setDiscoveryModeEligible:]
  -[ICMutableMusicSubscriptionStatus setPhoneNumber:]
  -[ICMutableMusicSubscriptionStatus setMinorAccountHolder:]
  -[ICMutableMusicSubscriptionStatus setPartOfBundle:]
  -[ICMutableMusicSubscriptionStatus setExpirationDate:]
  -[ICMutableMusicSubscriptionStatus setCarrierBundlingStatusType:]
  -[ICMutableMusicSubscriptionStatus setHasFamilyGreaterThanOneMember:]
  -[ICMutableMusicSubscriptionStatus setMatchEnabled:]
  -[ICMutableMusicSubscriptionStatus setStatusCode:]
  -[ICMutableMusicSubscriptionStatus setBundleOwner:]
  -[ICMutableMusicSubscriptionStatus setPurchaser:]
  -[ICMutableMusicSubscriptionStatus statusCode]
  -[ICMutableMusicSubscriptionStatus setTermsStatusList:]
  -[ICMutableMusicSubscriptionStatus copyWithZone:]
  -[ICMutableMusicSubscriptionStatus setEligibleForFreeTrial:]
  -[ICMutableMusicSubscriptionStatus setStatusType:]
  -[ICMutableMusicSubscriptionStatus setHeadOfHousehold:]


ICMusicSubscriptionStatusTerms : NSObject <NSCopying, NSSecureCoding>
 @property  long long acceptedVersion
 @property  long long currentVersion
 @property  long long sourceType
 @property  long long type

  // class methods
  +[ICMusicSubscriptionStatusTerms supportsSecureCoding]

  // instance methods
  -[ICMusicSubscriptionStatusTerms sourceType]
  -[ICMusicSubscriptionStatusTerms initWithCoder:]
  -[ICMusicSubscriptionStatusTerms currentVersion]
  -[ICMusicSubscriptionStatusTerms isEqual:]
  -[ICMusicSubscriptionStatusTerms type]
  -[ICMusicSubscriptionStatusTerms copyWithZone:]
  -[ICMusicSubscriptionStatusTerms encodeWithCoder:]
  -[ICMusicSubscriptionStatusTerms initWithResponseTermsDictionary:]
  -[ICMusicSubscriptionStatusTerms acceptedVersion]


ICWiFiManager : NSObject <ICEnvironmentMonitorObserver>
 @property  BOOL wiFiEnabled
 @property  BOOL wiFiAssociated
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ICWiFiManager sharedWiFiManager]

  // instance methods
  -[ICWiFiManager environmentMonitorDidChangeNetworkReachability:]
  -[ICWiFiManager _getWiFiEnabledFromPrefs]
  -[ICWiFiManager .cxx_destruct]
  -[ICWiFiManager _getWiFiAssociated]
  -[ICWiFiManager _wifiCallBack:]
  -[ICWiFiManager isWiFiEnabled]
  -[ICWiFiManager init]
  -[ICWiFiManager setWiFiEnabled:]
  -[ICWiFiManager isWiFiAssociated]
  -[ICWiFiManager _processIdentifier]
  -[ICWiFiManager setWiFiAssociated:]
  -[ICWiFiManager dealloc]


ICURLBagEnhancedAudioConfiguration : NSObject
 @property  NSDictionary *bagEnhancedAudioDictionary
 @property  NSURL *certificateURL
 @property  NSURL *keyServerURL
 @property  NSArray *prefetchSKDs

  // instance methods
  -[ICURLBagEnhancedAudioConfiguration setBagEnhancedAudioDictionary:]
  -[ICURLBagEnhancedAudioConfiguration .cxx_destruct]
  -[ICURLBagEnhancedAudioConfiguration certificateURL]
  -[ICURLBagEnhancedAudioConfiguration initWithBagEnhancedAudioDictionary:]
  -[ICURLBagEnhancedAudioConfiguration _urlForBagEnhancedAudioKey:]
  -[ICURLBagEnhancedAudioConfiguration prefetchSKDs]
  -[ICURLBagEnhancedAudioConfiguration keyServerURL]
  -[ICURLBagEnhancedAudioConfiguration bagEnhancedAudioDictionary]


ICClientInfo : NSObject <NSCopying, NSMutableCopying, NSSecureCoding>
 @property  NSString *bundleIdentifier
 @property  NSString *processName
 @property  NSString *clientIdentifier
 @property  NSString *clientVersion
 @property  NSString *clientBundleIdentifier
 @property  NSString *requestingBundleIdentifier
 @property  NSString *requestingBundleVersion
 @property  NSString *bagProfile
 @property  NSString *bagProfileVersion

  // class methods
  +[ICClientInfo _clientInfoForCloudDaemonOriginatedMusicKitRequestWithRequestingBundleIdentifier:]
  +[ICClientInfo supportsSecureCoding]
  +[ICClientInfo clientInfoForMusicKitRequestWithClientIdentifier:clientVersion:bundleIdentifier:]
  +[ICClientInfo defaultInfo]
  +[ICClientInfo clientInfoForMusicKitRequestWithClientIdentifier:clientVersion:]

  // instance methods
  -[ICClientInfo clientVersion]
  -[ICClientInfo initWithCoder:]
  -[ICClientInfo bundleIdentifier]
  -[ICClientInfo requestingBundleVersion]
  -[ICClientInfo _clientInfoCopyWithClass:]
  -[ICClientInfo .cxx_destruct]
  -[ICClientInfo bagProfile]
  -[ICClientInfo processName]
  -[ICClientInfo isEqual:]
  -[ICClientInfo requestingBundleIdentifier]
  -[ICClientInfo clientIdentifier]
  -[ICClientInfo initWithSystemApplicationType:]
  -[ICClientInfo initWithBundleIdentifier:]
  -[ICClientInfo clientBundleIdentifier]
  -[ICClientInfo mutableCopyWithZone:]
  -[ICClientInfo bagProfileVersion]
  -[ICClientInfo copyWithZone:]
  -[ICClientInfo _setDefaultBagProfileForClientIdentifier:]
  -[ICClientInfo encodeWithCoder:]


ICMutableClientInfo : ICClientInfo
 @property  NSString *bundleIdentifier
 @property  NSString *processName
 @property  NSString *clientIdentifier
 @property  NSString *clientVersion
 @property  NSString *requestingBundleIdentifier
 @property  NSString *requestingBundleVersion
 @property  NSString *bagProfile
 @property  NSString *bagProfileVersion

  // instance methods
  -[ICMutableClientInfo setRequestingBundleIdentifier:]
  -[ICMutableClientInfo setBundleIdentifier:]
  -[ICMutableClientInfo setBagProfileVersion:]
  -[ICMutableClientInfo setProcessName:]
  -[ICMutableClientInfo setBagProfile:]
  -[ICMutableClientInfo setClientVersion:]
  -[ICMutableClientInfo copyWithZone:]
  -[ICMutableClientInfo setRequestingBundleVersion:]
  -[ICMutableClientInfo setClientIdentifier:]


ICIAMSerialCheckResponse : PBCodable <NSCopying>
 @property  BOOL hasCommandSerialNumber
 @property  long long commandSerialNumber

  // instance methods
  -[ICIAMSerialCheckResponse mergeFrom:]
  -[ICIAMSerialCheckResponse dictionaryRepresentation]
  -[ICIAMSerialCheckResponse writeTo:]
  -[ICIAMSerialCheckResponse isEqual:]
  -[ICIAMSerialCheckResponse copyTo:]
  -[ICIAMSerialCheckResponse readFrom:]
  -[ICIAMSerialCheckResponse copyWithZone:]
  -[ICIAMSerialCheckResponse commandSerialNumber]
  -[ICIAMSerialCheckResponse setCommandSerialNumber:]
  -[ICIAMSerialCheckResponse setHasCommandSerialNumber:]
  -[ICIAMSerialCheckResponse hasCommandSerialNumber]


ICNetworkConstraints : NSObject <NSCopying, NSMutableCopying>
  // class methods
  +[ICNetworkConstraints constraintsForSystemApplicationType:]
  +[ICNetworkConstraints mediaTypeNetworkConstraintsFromURLBag:]

  // instance methods
  -[ICNetworkConstraints shouldAllowDataForWiFiNetworkTypes]
  -[ICNetworkConstraints shouldAllowDataForCellularNetworkTypes]
  -[ICNetworkConstraints .cxx_destruct]
  -[ICNetworkConstraints init]
  -[ICNetworkConstraints isEqual:]
  -[ICNetworkConstraints shouldAllowDataForNetworkType:]
  -[ICNetworkConstraints initWithBundleIdentifier:]
  -[ICNetworkConstraints sizeLimitForNetworkType:]
  -[ICNetworkConstraints mutableCopyWithZone:]
  -[ICNetworkConstraints copyWithZone:]
  -[ICNetworkConstraints _copyWithClass:zone:]


ICMutableNetworkConstraints : ICNetworkConstraints
  // instance methods
  -[ICMutableNetworkConstraints setSizeLimit:forNetworkType:]
  -[ICMutableNetworkConstraints setShouldAllowData:forNetworkType:]
  -[ICMutableNetworkConstraints setShouldAllowDataForCellularNetworkTypes:]
  -[ICMutableNetworkConstraints mutableCopyWithZone:]
  -[ICMutableNetworkConstraints setShouldAllowDataForWiFiNetworkTypes:]
  -[ICMutableNetworkConstraints copyWithZone:]
  -[ICMutableNetworkConstraints setShouldAllowDataForAllNetworkTypes:]


ICMusicAccountNotificationsSettingsResponse : NSObject
 @property  NSArray *settingsSwitches
 @property  BOOL wasSuccessful

  // class methods
  +[ICMusicAccountNotificationsSettingsResponse createResponseBodyWithSwitches:]

  // instance methods
  -[ICMusicAccountNotificationsSettingsResponse initWithResponseDictionary:]
  -[ICMusicAccountNotificationsSettingsResponse .cxx_destruct]
  -[ICMusicAccountNotificationsSettingsResponse wasSuccessful]
  -[ICMusicAccountNotificationsSettingsResponse settingsSwitches]


ICPushNotificationsEnableTypesRequest : ICRequestOperation
  // instance methods
  -[ICPushNotificationsEnableTypesRequest .cxx_destruct]
  -[ICPushNotificationsEnableTypesRequest performRequestWithResponseHandler:]
  -[ICPushNotificationsEnableTypesRequest execute]
  -[ICPushNotificationsEnableTypesRequest initWithRequestContext:notificationType:notificationParameters:]


ICIAMApplicationBadge : PBCodable <NSCopying>
 @property  BOOL hasIdentifier
 @property  NSString *identifier
 @property  BOOL hasBundleIdentifier
 @property  NSString *bundleIdentifier

  // instance methods
  -[ICIAMApplicationBadge mergeFrom:]
  -[ICIAMApplicationBadge hasBundleIdentifier]
  -[ICIAMApplicationBadge bundleIdentifier]
  -[ICIAMApplicationBadge .cxx_destruct]
  -[ICIAMApplicationBadge dictionaryRepresentation]
  -[ICIAMApplicationBadge writeTo:]
  -[ICIAMApplicationBadge setBundleIdentifier:]
  -[ICIAMApplicationBadge isEqual:]
  -[ICIAMApplicationBadge copyTo:]
  -[ICIAMApplicationBadge readFrom:]
  -[ICIAMApplicationBadge identifier]
  -[ICIAMApplicationBadge setIdentifier:]
  -[ICIAMApplicationBadge hasIdentifier]
  -[ICIAMApplicationBadge copyWithZone:]


NSCoder(ICUserIdentity)
	// instance methods
	-[NSCoder(ICUserIdentity) ic_encodeUserIdentity:withStore:forKey:]

NSKeyedArchiver(ICUserIdentity)
	// class methods
	+[NSKeyedArchiver(ICUserIdentity) ic_archivedDataWithRootUserIdentity:inStore:requiringSecureCoding:error:]

(ICCloudCLientErrorAdditions)
	// class methods
	+[(ICCloudCLientErrorAdditions) ic_cloudClientErrorWithCode:userInfo:]
	+[(ICCloudCLientErrorAdditions) ic_cloudClientLibraryUploadErrorWithCode:userInfo:]

(ICAdditions)
	// class methods
	+[(ICAdditions) ic_queryParametersDictionaryFromString:]

	// instance methods
	-[(ICAdditions) ic_URLByAppendingQueryParameters:]
	-[(ICAdditions) ic_URLByAppendingQueryItems:]
	-[(ICAdditions) ic_queryParametersDictionary]

NSProcessInfo(ICAdditions)
	// instance methods
	-[NSProcessInfo(ICAdditions) ic_isCloudDaemon]

ACAccountStore(ICAccountStoreAdditions)
	// class methods
	+[ACAccountStore(ICAccountStoreAdditions) ic_sharedAccountStore]

	// instance methods
	-[ACAccountStore(ICAccountStoreAdditions) ic_storeAccountForStoreAccountID:error:]
	-[ACAccountStore(ICAccountStoreAdditions) ic_activeStoreAccountWithError:]
	-[ACAccountStore(ICAccountStoreAdditions) ic_activeStoreAccountWithCompletion:]
	-[ACAccountStore(ICAccountStoreAdditions) ic_setActiveStoreAccount:error:]
	-[ACAccountStore(ICAccountStoreAdditions) ic_setActiveLockerAccount:error:]
	-[ACAccountStore(ICAccountStoreAdditions) ic_storeAccountTypeWithError:]
	-[ACAccountStore(ICAccountStoreAdditions) ic_localStoreAccountWithError:]
	-[ACAccountStore(ICAccountStoreAdditions) ic_setActiveLockerAccount:]
	-[ACAccountStore(ICAccountStoreAdditions) ic_storeAccountTypeWithCompletion:]
	-[ACAccountStore(ICAccountStoreAdditions) ic_allStoreAccountsWithCompletion:]
	-[ACAccountStore(ICAccountStoreAdditions) ic_allStoreAccountsWithError:]
	-[ACAccountStore(ICAccountStoreAdditions) ic_activeLockerAccountWithCompletion:]
	-[ACAccountStore(ICAccountStoreAdditions) ic_primaryAppleAccountWithCompletion:]
	-[ACAccountStore(ICAccountStoreAdditions) ic_setActiveStoreAccount:completion:]
	-[ACAccountStore(ICAccountStoreAdditions) ic_setActiveLockerAccount:completion:]
	-[ACAccountStore(ICAccountStoreAdditions) ic_storeAccountForStoreAccountID:completion:]
	-[ACAccountStore(ICAccountStoreAdditions) ic_activeLockerAccountWithError:]
	-[ACAccountStore(ICAccountStoreAdditions) ic_primaryAppleAccountWithError:]
	-[ACAccountStore(ICAccountStoreAdditions) ic_storeAccountForHomeUserIdentifier:completion:]
	-[ACAccountStore(ICAccountStoreAdditions) ic_storeAccountForHomeUserIdentifier:error:]
	-[ACAccountStore(ICAccountStoreAdditions) ic_localStoreAccountWithCompletion:]
	-[ACAccountStore(ICAccountStoreAdditions) ic_allStoreAccounts]
	-[ACAccountStore(ICAccountStoreAdditions) ic_activeStoreAccount]
	-[ACAccountStore(ICAccountStoreAdditions) ic_activeLockerAccount]
	-[ACAccountStore(ICAccountStoreAdditions) ic_primaryAppleAccount]
	-[ACAccountStore(ICAccountStoreAdditions) ic_setActiveStoreAccount:]
	-[ACAccountStore(ICAccountStoreAdditions) ic_storeAccountForStoreAccountID:]
	-[ACAccountStore(ICAccountStoreAdditions) _ic_storeAccountType]

(ICAdditions)
	// instance methods
	-[(ICAdditions) subarraysOfSize:]

(ICFairPlayUtilityAdditions)
	// class methods
	+[(ICFairPlayUtilityAdditions) ic_dataWithFairPlayBytes:length:]
	+[(ICFairPlayUtilityAdditions) ic_dataWithADIBytes:length:]

NSOperationQueue(ICRequestAdditions)
	// class methods
	+[NSOperationQueue(ICRequestAdditions) ic_sharedRequestOperationQueueWithQualityOfService:]

NSURLResponse(ICAdditions)
NSHTTPURLResponse(ICAdditions)
	// instance methods
	-[NSHTTPURLResponse(ICAdditions) ic_valueForHTTPHeaderField:]
	-[NSHTTPURLResponse(ICAdditions) hasCacheControl]
	-[NSHTTPURLResponse(ICAdditions) _cacheControlParameters]
	-[NSHTTPURLResponse(ICAdditions) cacheControlMaxAge]

AVContentKeyRequest(ICAdditions)
	// instance methods
	-[AVContentKeyRequest(ICAdditions) ic_description]

ACAccount(ICAccountAdditions)
	// instance methods
	-[ACAccount(ICAccountAdditions) ic_DSID]
	-[ACAccount(ICAccountAdditions) ic_updateAutomaticDownloadKindsByAddingMediaKindMusic:completionHandler:]
	-[ACAccount(ICAccountAdditions) ic_isAutomaticDownloadsEnabledForMediaKindMusic]
	-[ACAccount(ICAccountAdditions) ic_automaticDownloadKinds]
	-[ACAccount(ICAccountAdditions) ic_isActiveLockerAccount]
	-[ACAccount(ICAccountAdditions) ic_isManageable]
	-[ACAccount(ICAccountAdditions) ic_isLocalAccount]
	-[ACAccount(ICAccountAdditions) ic_isITunesAccount]
	-[ACAccount(ICAccountAdditions) ic_description]
	-[ACAccount(ICAccountAdditions) ic_setAltDSID:]
	-[ACAccount(ICAccountAdditions) ic_setDSID:]
	-[ACAccount(ICAccountAdditions) ic_setFirstName:]
	-[ACAccount(ICAccountAdditions) ic_setLastName:]
	-[ACAccount(ICAccountAdditions) ic_setManagedAppleID:]
	-[ACAccount(ICAccountAdditions) ic_setSandboxed:]
	-[ACAccount(ICAccountAdditions) ic_setStorefront:]
	-[ACAccount(ICAccountAdditions) ic_setSubscriptionStatusEnabled:]
	-[ACAccount(ICAccountAdditions) ic_setMergeWithCloudLibraryPreference:]
	-[ACAccount(ICAccountAdditions) ic_setCloudLibraryStateReason:]
	-[ACAccount(ICAccountAdditions) ic_setPrivateListeningEnabled:]
	-[ACAccount(ICAccountAdditions) ic_setActiveLockerAccount:]
	-[ACAccount(ICAccountAdditions) ic_storefront]
	-[ACAccount(ICAccountAdditions) ic_altDSID]
	-[ACAccount(ICAccountAdditions) ic_firstName]
	-[ACAccount(ICAccountAdditions) ic_lastName]
	-[ACAccount(ICAccountAdditions) ic_isManagedAppleID]
	-[ACAccount(ICAccountAdditions) ic_isSandboxed]
	-[ACAccount(ICAccountAdditions) ic_isSubscriptionStatusEnabled]
	-[ACAccount(ICAccountAdditions) ic_ageVerificationExpirationDate]
	-[ACAccount(ICAccountAdditions) ic_mergeWithCloudLibraryPreference]
	-[ACAccount(ICAccountAdditions) ic_homeUserIdentifiers]
	-[ACAccount(ICAccountAdditions) ic_cloudLibraryStateReason]
	-[ACAccount(ICAccountAdditions) ic_privateListeningEnabled]
	-[ACAccount(ICAccountAdditions) ic_privateListeningEnabledForHomeUsers]
	-[ACAccount(ICAccountAdditions) ic_privacyAcknowledgementVersions]
	-[ACAccount(ICAccountAdditions) ic_isCloudBackupEnabled]
	-[ACAccount(ICAccountAdditions) _updateAutomaticDownloadKindsByAddingMediaKindMusic:error:]
	-[ACAccount(ICAccountAdditions) ic_activeMediaTypes]
	-[ACAccount(ICAccountAdditions) ic_uniqueIdentifier]
	-[ACAccount(ICAccountAdditions) ic_setUniqueIdentifier:]
	-[ACAccount(ICAccountAdditions) ic_setAgeVerificationExpirationDate:]
	-[ACAccount(ICAccountAdditions) ic_setAutomaticDownloadKinds:]
	-[ACAccount(ICAccountAdditions) ic_updateAutomaticDownloadKindsByAddingMediaKindMusic:error:]
	-[ACAccount(ICAccountAdditions) ic_setPrivateListeningEnabledForHomeUsers:]

NSURLRequest(ICAdditions)
	// instance methods
	-[NSURLRequest(ICAdditions) ic_valueForHTTPHeaderField:]
	-[NSURLRequest(ICAdditions) ic_valuesForCookieWithName:]

NSMutableURLRequest(ICAdditions)
	// instance methods
	-[NSMutableURLRequest(ICAdditions) ic_appendHTTPCookies:]
	-[NSMutableURLRequest(ICAdditions) ic_appendHTTPCookieWithName:value:]

(ICAdditions)
	// instance methods
	-[(ICAdditions) ic_intValueForKey:]
	-[(ICAdditions) ic_stringValueForKey:]
	-[(ICAdditions) ic_dictionaryValueForKey:]
	-[(ICAdditions) ic_numberValueForKey:]
	-[(ICAdditions) ic_int64ValueForKey:]
	-[(ICAdditions) ic_arrayValueForKey:]
	-[(ICAdditions) ic_boolValueForKey:]
	-[(ICAdditions) ic_dataValueForKey:]
	-[(ICAdditions) ic_integerValueForKey:]
	-[(ICAdditions) ic_uintValueForKey:]

01 00 1400 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccount 
01 00 1400 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountStore 
01 00 1400 /System/Library/Frameworks/Accounts.framework/Accounts: ACMonitoredAccountStore 
01 00 2000 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAppleIDSession 
01 00 0900 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSAcknowledgePrivacyTask 
01 00 0900 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSAuthenticateOptions 
01 00 0900 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSAuthenticateTask 
01 00 0900 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSAutomaticDownloadKindsSetTask 
01 00 0900 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSBag 
01 00 0900 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSBagKeySet 
01 00 0900 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSBagValue 
01 00 0900 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSPromise 
01 00 0900 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSPushConfiguration 
01 00 0900 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSPushHandler 
01 00 0900 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSSnapshotBagBuilder 
01 00 0900 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSSystemAlertDialogTask 
01 00 0900 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSURLRequestEncoder 
01 00 1000 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: AVAssetDownloadURLSession 
01 00 1300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVContentKeyRequest 
01 00 1300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVContentKeyResponse 
01 00 1300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVContentKeySession 
01 00 0300 /System/Library/PrivateFrameworks/Celestial.framework/Celestial: AVFileProcessor 
01 00 1300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVURLAsset 
01 00 0500 /System/Library/PrivateFrameworks/BackBoardServices.framework/BackBoardServices: BKSApplicationStateMonitor 
01 00 1b00 /System/Library/Frameworks/CoreTelephony.framework/CoreTelephony: CTBundle 
01 00 1b00 /System/Library/Frameworks/CoreTelephony.framework/CoreTelephony: CTMessageCenter 
01 00 1b00 /System/Library/Frameworks/CoreTelephony.framework/CoreTelephony: CTPhoneNumber 
01 00 1b00 /System/Library/Frameworks/CoreTelephony.framework/CoreTelephony: CoreTelephonyClient 
01 00 0800 /System/Library/PrivateFrameworks/DAAPKit.framework/DAAPKit: DKDAAPWriter 
01 00 0100 /System/Library/PrivateFrameworks/IDS.framework/IDS: IDSService 
01 00 1800 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationRecord 
01 00 1800 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSBundleRecord 
01 00 1500 /System/Library/PrivateFrameworks/MediaServices.framework/MediaServices: MSVAutoBugCapture 
01 00 1500 /System/Library/PrivateFrameworks/MediaServices.framework/MediaServices: MSVBidirectionalDictionary 
01 00 1500 /System/Library/PrivateFrameworks/MediaServices.framework/MediaServices: MSVBlockGuard 
01 00 1500 /System/Library/PrivateFrameworks/MediaServices.framework/MediaServices: MSVDefaultDictionary 
01 00 1500 /System/Library/PrivateFrameworks/MediaServices.framework/MediaServices: MSVEntitlementUtilities 
01 00 1500 /System/Library/PrivateFrameworks/MediaServices.framework/MediaServices: MSVMessageParser 
01 00 1500 /System/Library/PrivateFrameworks/MediaServices.framework/MediaServices: MSVMutableSectionedCollection 
01 00 1500 /System/Library/PrivateFrameworks/MediaServices.framework/MediaServices: MSVPair 
01 00 1500 /System/Library/PrivateFrameworks/MediaServices.framework/MediaServices: MSVQRConnection 
01 00 1500 /System/Library/PrivateFrameworks/MediaServices.framework/MediaServices: MSVQRConnectionMessageCoder 
01 00 1500 /System/Library/PrivateFrameworks/MediaServices.framework/MediaServices: MSVStreamReader 
01 00 1500 /System/Library/PrivateFrameworks/MediaServices.framework/MediaServices: MSVStreamWriter 
01 00 1500 /System/Library/PrivateFrameworks/MediaServices.framework/MediaServices: MSVTaskAssertion 
01 00 1500 /System/Library/PrivateFrameworks/MediaServices.framework/MediaServices: MSVTimer 
01 00 1500 /System/Library/PrivateFrameworks/MediaServices.framework/MediaServices: MSVWeakProxy 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSCoder 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSDistributedNotificationCenter 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 1000 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSHTTPCookie 
01 00 1000 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSHTTPCookieStorage 
01 00 1000 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSHTTPURLResponse 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexPath 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexSet 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 1000 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSMutableURLRequest 
01 00 1000 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSNetService 
01 00 1000 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSNetServiceBrowser 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 2200 /usr/lib/libobjc.A.dylib: NSObject 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperation 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOutputStream 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSPersonNameComponents 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSProgress 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSRecursiveLock 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 1000 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLCredential 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLQueryItem 
01 00 1000 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLRequest 
01 00 1000 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLResponse 
01 00 1000 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLSession 
01 00 1000 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLSessionConfiguration 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 2500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListener 
01 00 2100 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListenerEndpoint 
01 00 0d00 /System/Library/Frameworks/Network.framework/Network: NWPathEvaluator 
01 00 1200 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBCodable 
01 00 1200 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBRequest 
01 00 0e00 /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport: RadiosPreferences 
01 00 1900 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNUserNotificationCenter 
