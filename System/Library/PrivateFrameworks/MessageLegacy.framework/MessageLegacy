|| __DATA.__data _MFAttachmentPlaceholderMagic
|| __DATA.__data _MFMessageInfoSentDateComparator
|| __DATA.__objc_data _OBJC_CLASS_$_DeliveryAccount
|| __DATA.__objc_data _OBJC_CLASS_$_LocalAccount
|| __DATA.__objc_data _OBJC_CLASS_$_MFAccountLoader
|| __DATA.__objc_data _OBJC_CLASS_$_MFAccountValidator
|| __DATA.__objc_data _OBJC_CLASS_$_MFAttachment
|| __DATA.__objc_data _OBJC_CLASS_$_MFAttachmentBundle
|| __DATA.__objc_data _OBJC_CLASS_$_MFAttachmentCompositionContext
|| __DATA.__objc_data _OBJC_CLASS_$_MFAttachmentDataProvider
|| __DATA.__objc_data _OBJC_CLASS_$_MFAttachmentPlaceholder
|| __DATA.__objc_data _OBJC_CLASS_$_MFAttachmentRaw
|| __DATA.__objc_data _OBJC_CLASS_$_MFAttachmentSecurityScope
|| __DATA.__objc_data _OBJC_CLASS_$_MFAttachmentUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_MFBasicMessageDataSection
|| __DATA.__objc_data _OBJC_CLASS_$_MFCRAM_MD5Authenticator
|| __DATA.__objc_data _OBJC_CLASS_$_MFCertificateTrustInfo
|| __DATA.__objc_data _OBJC_CLASS_$_MFComposeAttachmentDataProvider
|| __DATA.__objc_data _OBJC_CLASS_$_MFContentErrorDocument
|| __DATA.__objc_data _OBJC_CLASS_$_MFDecryptedAttachmentDataProvider
|| __DATA.__objc_data _OBJC_CLASS_$_MFDeliveryResult
|| __DATA.__objc_data _OBJC_CLASS_$_MFFakeMailAccount
|| __DATA.__objc_data _OBJC_CLASS_$_MFFakeMailMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MFFakeMailboxUid
|| __DATA.__objc_data _OBJC_CLASS_$_MFFetchLimits
|| __DATA.__objc_data _OBJC_CLASS_$_MFLocalizedMessageHeaders
|| __DATA.__objc_data _OBJC_CLASS_$_MFMailDataMessageStore
|| __DATA.__objc_data _OBJC_CLASS_$_MFMailDelivery
|| __DATA.__objc_data _OBJC_CLASS_$_MFMailMessageRelationshipAnalyzer
|| __DATA.__objc_data _OBJC_CLASS_$_MFMailMessageStoreSearchResult
|| __DATA.__objc_data _OBJC_CLASS_$_MFMailMimeTextAttachment
|| __DATA.__objc_data _OBJC_CLASS_$_MFMessageCollectionInfo
|| __DATA.__objc_data _OBJC_CLASS_$_MFMessageDetails
|| __DATA.__objc_data _OBJC_CLASS_$_MFMessageInfo
|| __DATA.__objc_data _OBJC_CLASS_$_MFMessageInfoOrderedSet
|| __DATA.__objc_data _OBJC_CLASS_$_MFMessageSigner
|| __DATA.__objc_data _OBJC_CLASS_$_MFMessageTransferResult
|| __DATA.__objc_data _OBJC_CLASS_$_MFMessageURLConnectionDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_MFMimeEnrichedReader
|| __DATA.__objc_data _OBJC_CLASS_$_MFOutgoingLibraryMessageContent
|| __DATA.__objc_data _OBJC_CLASS_$_MFOutgoingMessageContent
|| __DATA.__objc_data _OBJC_CLASS_$_MFOutgoingMessageDelivery
|| __DATA.__objc_data _OBJC_CLASS_$_MFOutgoingMultipartRelatedContent
|| __DATA.__objc_data _OBJC_CLASS_$_MFOutgoingRichtextMessageContent
|| __DATA.__objc_data _OBJC_CLASS_$_MFPlainTextDocument
|| __DATA.__objc_data _OBJC_CLASS_$_MFPlainTextFragment
|| __DATA.__objc_data _OBJC_CLASS_$_MFRFC822AttachmentDataProvider
|| __DATA.__objc_data _OBJC_CLASS_$_MFRequestQueue
|| __DATA.__objc_data _OBJC_CLASS_$_MFSASLAuthenticator
|| __DATA.__objc_data _OBJC_CLASS_$_MFSMTPConnection
|| __DATA.__objc_data _OBJC_CLASS_$_MFSMTPDelivery
|| __DATA.__objc_data _OBJC_CLASS_$_MFSMTPResponse
|| __DATA.__objc_data _OBJC_CLASS_$_MFSecureMIMECompositionManager
|| __DATA.__objc_data _OBJC_CLASS_$_MFSignatures
|| __DATA.__objc_data _OBJC_CLASS_$_MFSparseMutable64IndexSet
|| __DATA.__objc_data _OBJC_CLASS_$_MFWebAttachmentSource
|| __DATA.__objc_data _OBJC_CLASS_$_MFWebMessageDocument
|| __DATA.__objc_data _OBJC_CLASS_$_SMTPAccount
|| __DATA.__objc_data _OBJC_CLASS_$__MFContentProtectionObserverWrapper
|| __DATA.__objc_data _OBJC_CLASS_$__MFDigestMD5Authenticator
|| __DATA.__objc_data _OBJC_CLASS_$__MFFormatFlowedWriter
|| __DATA.__objc_data _OBJC_CLASS_$__MFLoginAuthenticator
|| __DATA.__objc_data _OBJC_CLASS_$__MFMailboxUidChildrenEnumerator
|| __DATA.__objc_data _OBJC_CLASS_$__MFMessageFlags
|| __DATA.__objc_data _OBJC_CLASS_$__MFNTLMAuthenticator
|| __DATA.__objc_data _OBJC_CLASS_$__MFOutgoingMessageBody
|| __DATA.__objc_data _OBJC_CLASS_$__MFPlainAuthenticator
|| __DATA.__objc_data _OBJC_CLASS_$__MFRootlessMailboxUid
|| __DATA.__objc_data _OBJC_CLASS_$__MFSecCMSDecoder
|| __DATA.__objc_data _OBJC_CLASS_$__MFSecCMSEncoder
|| __DATA.__objc_data _OBJC_CLASS_$__MFSecDataMessageStore
|| __DATA.__objc_data _OBJC_METACLASS_$_DeliveryAccount
|| __DATA.__objc_data _OBJC_METACLASS_$_LocalAccount
|| __DATA.__objc_data _OBJC_METACLASS_$_MFAccountLoader
|| __DATA.__objc_data _OBJC_METACLASS_$_MFAccountValidator
|| __DATA.__objc_data _OBJC_METACLASS_$_MFAttachment
|| __DATA.__objc_data _OBJC_METACLASS_$_MFAttachmentBundle
|| __DATA.__objc_data _OBJC_METACLASS_$_MFAttachmentCompositionContext
|| __DATA.__objc_data _OBJC_METACLASS_$_MFAttachmentDataProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_MFAttachmentPlaceholder
|| __DATA.__objc_data _OBJC_METACLASS_$_MFAttachmentRaw
|| __DATA.__objc_data _OBJC_METACLASS_$_MFAttachmentSecurityScope
|| __DATA.__objc_data _OBJC_METACLASS_$_MFAttachmentUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_MFBasicMessageDataSection
|| __DATA.__objc_data _OBJC_METACLASS_$_MFCRAM_MD5Authenticator
|| __DATA.__objc_data _OBJC_METACLASS_$_MFCertificateTrustInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_MFComposeAttachmentDataProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_MFContentErrorDocument
|| __DATA.__objc_data _OBJC_METACLASS_$_MFDecryptedAttachmentDataProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_MFDeliveryResult
|| __DATA.__objc_data _OBJC_METACLASS_$_MFFakeMailAccount
|| __DATA.__objc_data _OBJC_METACLASS_$_MFFakeMailMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MFFakeMailboxUid
|| __DATA.__objc_data _OBJC_METACLASS_$_MFFetchLimits
|| __DATA.__objc_data _OBJC_METACLASS_$_MFLocalizedMessageHeaders
|| __DATA.__objc_data _OBJC_METACLASS_$_MFMailDataMessageStore
|| __DATA.__objc_data _OBJC_METACLASS_$_MFMailDelivery
|| __DATA.__objc_data _OBJC_METACLASS_$_MFMailMessageRelationshipAnalyzer
|| __DATA.__objc_data _OBJC_METACLASS_$_MFMailMessageStoreSearchResult
|| __DATA.__objc_data _OBJC_METACLASS_$_MFMailMimeTextAttachment
|| __DATA.__objc_data _OBJC_METACLASS_$_MFMessageCollectionInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_MFMessageDetails
|| __DATA.__objc_data _OBJC_METACLASS_$_MFMessageInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_MFMessageInfoOrderedSet
|| __DATA.__objc_data _OBJC_METACLASS_$_MFMessageSigner
|| __DATA.__objc_data _OBJC_METACLASS_$_MFMessageTransferResult
|| __DATA.__objc_data _OBJC_METACLASS_$_MFMessageURLConnectionDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_MFMimeEnrichedReader
|| __DATA.__objc_data _OBJC_METACLASS_$_MFOutgoingLibraryMessageContent
|| __DATA.__objc_data _OBJC_METACLASS_$_MFOutgoingMessageContent
|| __DATA.__objc_data _OBJC_METACLASS_$_MFOutgoingMessageDelivery
|| __DATA.__objc_data _OBJC_METACLASS_$_MFOutgoingMultipartRelatedContent
|| __DATA.__objc_data _OBJC_METACLASS_$_MFOutgoingRichtextMessageContent
|| __DATA.__objc_data _OBJC_METACLASS_$_MFPlainTextDocument
|| __DATA.__objc_data _OBJC_METACLASS_$_MFPlainTextFragment
|| __DATA.__objc_data _OBJC_METACLASS_$_MFRFC822AttachmentDataProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_MFRequestQueue
|| __DATA.__objc_data _OBJC_METACLASS_$_MFSASLAuthenticator
|| __DATA.__objc_data _OBJC_METACLASS_$_MFSMTPConnection
|| __DATA.__objc_data _OBJC_METACLASS_$_MFSMTPDelivery
|| __DATA.__objc_data _OBJC_METACLASS_$_MFSMTPResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_MFSecureMIMECompositionManager
|| __DATA.__objc_data _OBJC_METACLASS_$_MFSignatures
|| __DATA.__objc_data _OBJC_METACLASS_$_MFSparseMutable64IndexSet
|| __DATA.__objc_data _OBJC_METACLASS_$_MFWebAttachmentSource
|| __DATA.__objc_data _OBJC_METACLASS_$_MFWebMessageDocument
|| __DATA.__objc_data _OBJC_METACLASS_$_SMTPAccount
|| __DATA.__objc_data _OBJC_METACLASS_$__MFContentProtectionObserverWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$__MFDigestMD5Authenticator
|| __DATA.__objc_data _OBJC_METACLASS_$__MFFormatFlowedWriter
|| __DATA.__objc_data _OBJC_METACLASS_$__MFLoginAuthenticator
|| __DATA.__objc_data _OBJC_METACLASS_$__MFMailboxUidChildrenEnumerator
|| __DATA.__objc_data _OBJC_METACLASS_$__MFMessageFlags
|| __DATA.__objc_data _OBJC_METACLASS_$__MFNTLMAuthenticator
|| __DATA.__objc_data _OBJC_METACLASS_$__MFOutgoingMessageBody
|| __DATA.__objc_data _OBJC_METACLASS_$__MFPlainAuthenticator
|| __DATA.__objc_data _OBJC_METACLASS_$__MFRootlessMailboxUid
|| __DATA.__objc_data _OBJC_METACLASS_$__MFSecCMSDecoder
|| __DATA.__objc_data _OBJC_METACLASS_$__MFSecCMSEncoder
|| __DATA.__objc_data _OBJC_METACLASS_$__MFSecDataMessageStore
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFAttachment._attachmentManager
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFAttachmentDataProvider._url
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFAttachmentManager._arrayAccessQueue
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFAttachmentManager._attachments
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFAttachmentManager._metaDataLock
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFAttachmentManager._metadata
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFAttachmentManager._providers
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFBasicMessageDataSection._complete
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFBasicMessageDataSection._dataHolder
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFBasicMessageDataSection._partName
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFBasicMessageDataSection._partial
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFBufferedQueue._currentSize
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFBufferedQueue._maximumLatency
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFBufferedQueue._maximumSize
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFBufferedQueue._queue
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFBufferedQueue._timeOfLastFlush
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFConnection._allowFallbacks
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFConnection._buffer
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFConnection._bufferLength
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFConnection._bufferRemainingBytes
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFConnection._bufferStart
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFConnection._compressionEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFConnection._connectionSettings
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFConnection._deflater
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFConnection._desiredBufferLength
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFConnection._inflater
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFConnection._isFetching
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFConnection._lastUsedTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFConnection._readBytesNotLogged
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFConnection._securityLayer
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFConnection._socket
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFConnection._zbuffer
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFConnectionSettings._allowsTrustPrompt
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFConnectionSettings._certUIService
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFConnectionSettings._clientCertificates
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFConnectionSettings._connectionServiceType
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFConnectionSettings._hostname
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFConnectionSettings._portNumber
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFConnectionSettings._serviceName
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFConnectionSettings._tryDirectSSLConnection
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFConnectionSettings._usesOpportunisticSockets
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFConnectionSettings._usesSSL
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFError._moreUserInfo
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFLibraryMessage._conversationFlags
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFLibraryMessage._libraryID
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFLibraryMessage._mailboxID
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFLibraryMessage._messageID
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFLibraryMessage._metadata
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFLibraryMessage._metadataChangedKeys
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFLibraryMessage._metadataLock
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFLibraryMessage._originalMailboxID
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFLibraryMessage._remoteID
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFLibraryMessage._size
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFLibraryMessage._uid
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFLibraryMessage._uniqueRemoteId
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFLibraryStore._criterion
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFLibraryStore._earliestReceivedDate
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFLibraryStore._library
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFLibraryStore._serverMessageCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMailDelivery._account
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMailDelivery._archiveAccount
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMailDelivery._charsets
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMailDelivery._compositionSpecification
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMailDelivery._delegate
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMailDelivery._headers
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMailDelivery._htmlString
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMailDelivery._message
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMailDelivery._mixedContent
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMailDelivery._otherStringsAndAttachments
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMailDelivery._plainTextAlternative
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMailDelivery._result
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMailDelivery._textPartsAreHTML
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMailDelivery._threaded
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMailDelivery._useCellDataOnly
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMailMessage._info
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMailMessage._messageFlags
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMailMessage._modSequenceNumber
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMailMessageStore._account
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMailMessageStore._deletedMessageCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMailMessageStore._deletedMessagesSize
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMailMessageStore._flags
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMailMessageStore._generationNumber
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMailMessageStore._mailboxUid
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMailMessageStore._state
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMailMessageStore._unreadMessageCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMessageDetails.conversationHash
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMessageDetails.dateReceived
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMessageDetails.dateSent
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMessageDetails.externalID
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMessageDetails.library
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMessageDetails.libraryID
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMessageDetails.mailboxID
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMessageDetails.messageFlags
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMessageDetails.messageIDHash
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMessageDetails.uid
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMessageLibrary._attachmentDataProvider
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMessageLibrary._path
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMessageSigner._status
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMimeEnrichedReader._commandStack
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMimeEnrichedReader._currentIndex
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMimeEnrichedReader._eatOneNewline
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMimeEnrichedReader._indentWidth
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMimeEnrichedReader._inputBuffer
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMimeEnrichedReader._inputLength
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMimeEnrichedReader._insideComment
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMimeEnrichedReader._lastQuoteLevel
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMimeEnrichedReader._noFillLevel
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMimeEnrichedReader._outputBuffer
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMimeEnrichedReader._outputString
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMimeEnrichedReader._postpendHTML
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMimeEnrichedReader._prependHTML
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMimeEnrichedReader._wantsPlainText
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMonitoredInvocation._monitor
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMonitoredInvocation._shouldLogInvocation
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFNetworkController._activeCalls
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFNetworkController._alternateAdviceState
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFNetworkController._backgroundWifiClients
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFNetworkController._cellularDataAvailable
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFNetworkController._ctc
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFNetworkController._dataIndicator
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFNetworkController._dataStatusQueue
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFNetworkController._dns
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFNetworkController._flags
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFNetworkController._hasCellDataCapability
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFNetworkController._hasWiFiCapability
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFNetworkController._isRoamingAllowed
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFNetworkController._isWiFiEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFNetworkController._lock
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFNetworkController._observers
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFNetworkController._prefsQueue
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFNetworkController._radiosPreferences
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFNetworkController._rl
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFNetworkController._symptomsToken
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFNetworkController._wiFiPreferences
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFOutgoingMessageDelivery._archiveAccount
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFOutgoingMessageDelivery._charsets
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFOutgoingMessageDelivery._compositionSpecification
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFOutgoingMessageDelivery._currentDeliveryObject
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFOutgoingMessageDelivery._delegate
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFOutgoingMessageDelivery._deliveryAccount
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFOutgoingMessageDelivery._headers
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFOutgoingMessageDelivery._htmlBody
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFOutgoingMessageDelivery._message
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFOutgoingMessageDelivery._mixedContent
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFOutgoingMessageDelivery._otherHTMLAndAttachments
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFOutgoingMessageDelivery._plainTextAlternative
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFOutgoingMessageDelivery._textPartsAreHTML
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFPlainTextDocument._fragments
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFPlainTextDocument._text
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFPlainTextFragment._quoteLevel
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFPlainTextFragment._range
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFProgressiveMimeParser._context
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFProgressiveMimeParser._currentBoundary
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFProgressiveMimeParser._currentPart
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFProgressiveMimeParser._cursor
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFProgressiveMimeParser._data
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFProgressiveMimeParser._delegate
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFProgressiveMimeParser._lastLength
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFProgressiveMimeParser._parserFlags
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFProgressiveMimeParser._preserveHeaders
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFProgressiveMimeParser._topLevelPart
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFRequestQueue._condition
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFRequestQueue._consumers
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFRequestQueue._requests
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFRequestQueue._waitingInside
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFRequestQueue._waitingOutside
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSMTPConnection._delegate
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSMTPConnection._dislikesSaveSentMbox
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSMTPConnection._domainName
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSMTPConnection._hideLoggedData
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSMTPConnection._lastCommandTimestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSMTPConnection._lastResponse
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSMTPConnection._mdata
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSMTPConnection._originalSocketTimeout
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSMTPConnection._saveSentMbox
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSMTPConnection._serviceExtensions
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSMTPConnection._useSaveSent
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSMTPDelivery._connection
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSMTPResponse._lastResponseLine
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSMTPResponse._status
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSMTPResponse._statusClass
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSMTPResponse._statusDetail
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSMTPResponse._statusSubject
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSecureMIMECompositionManager._certificatesByRecipient
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSecureMIMECompositionManager._delegate
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSecureMIMECompositionManager._encryptionIdentity
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSecureMIMECompositionManager._encryptionIdentityError
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSecureMIMECompositionManager._encryptionPolicy
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSecureMIMECompositionManager._encryptionStatus
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSecureMIMECompositionManager._encryptionStatusSemaphore
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSecureMIMECompositionManager._errorsByRecipient
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSecureMIMECompositionManager._invalidated
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSecureMIMECompositionManager._lock
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSecureMIMECompositionManager._queue
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSecureMIMECompositionManager._recipients
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSecureMIMECompositionManager._sendingAccount
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSecureMIMECompositionManager._sendingAddress
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSecureMIMECompositionManager._signingIdentity
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSecureMIMECompositionManager._signingIdentityError
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSecureMIMECompositionManager._signingPolicy
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSecureMIMECompositionManager._signingStatus
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSecureMIMECompositionManager._signingStatusSemaphore
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFStream._buffer
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFStream._bytesRead
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFStream._bytesWritten
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFStream._callback
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFStream._capacity
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFStream._condition
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFStream._dispatchedBytesAvailable
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFStream._error
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFStream._length
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFStream._location
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFStream._properties
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFStream._rStream
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFStream._streamCanRead
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFStream._streamCanWrite
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFStream._wStream
|| __DATA.__objc_ivar _OBJC_IVAR_$_MailAccount._archiveMailboxUid
|| __DATA.__objc_ivar _OBJC_IVAR_$_MailAccount._cachedLibraryID
|| __DATA.__objc_ivar _OBJC_IVAR_$_MailAccount._cachedLibraryIDLock
|| __DATA.__objc_ivar _OBJC_IVAR_$_MailAccount._cachedMailboxenLock
|| __DATA.__objc_ivar _OBJC_IVAR_$_MailAccount._currentChokedActions
|| __DATA.__objc_ivar _OBJC_IVAR_$_MailAccount._deletionLock
|| __DATA.__objc_ivar _OBJC_IVAR_$_MailAccount._draftsMailboxUid
|| __DATA.__objc_ivar _OBJC_IVAR_$_MailAccount._flags
|| __DATA.__objc_ivar _OBJC_IVAR_$_MailAccount._inboxMailboxUid
|| __DATA.__objc_ivar _OBJC_IVAR_$_MailAccount._junkMailboxUid
|| __DATA.__objc_ivar _OBJC_IVAR_$_MailAccount._lastConnectionError
|| __DATA.__objc_ivar _OBJC_IVAR_$_MailAccount._library
|| __DATA.__objc_ivar _OBJC_IVAR_$_MailAccount._mailboxCachePath
|| __DATA.__objc_ivar _OBJC_IVAR_$_MailAccount._messageStoresCache
|| __DATA.__objc_ivar _OBJC_IVAR_$_MailAccount._nonPersistentPath
|| __DATA.__objc_ivar _OBJC_IVAR_$_MailAccount._path
|| __DATA.__objc_ivar _OBJC_IVAR_$_MailAccount._rootMailboxUid
|| __DATA.__objc_ivar _OBJC_IVAR_$_MailAccount._sentMessagesMailboxUid
|| __DATA.__objc_ivar _OBJC_IVAR_$_MailAccount._trashMailboxUid
|| __DATA.__objc_ivar _OBJC_IVAR_$_SMTPAccount._connection
|| __DATA.__objc_ivar _OBJC_IVAR_$_SMTPAccount._deliveryClass
|| __DATA.__objc_ivar _OBJC_IVAR_$_SMTPAccount._lastTimerSetTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_SMTPAccount._supportsOutboxCopy
|| __DATA.__objc_ivar _OBJC_IVAR_$_SMTPAccount._supportsPipelining
|| __DATA.__objc_ivar _OBJC_IVAR_$_SMTPAccount._timer
|| __DATA.__objc_ivar _OBJC_IVAR_$_SMTPAccount._useCellDataOnly
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFActivityMonitorMultiTarget._allTargets
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFActivityMonitorMultiTarget._primaryTarget
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFContentProtectionObserverWrapper._observerReference
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFContentProtectionObserverWrapper._queue
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFDigestMD5Authenticator._cryptInfo
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFDigestMD5Authenticator._expectedResponse
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFDigestMD5Authenticator._maxbuf
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFDigestMD5Authenticator._securityLevel
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFFormatFlowedWriter._addedTrailingSpaces
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFFormatFlowedWriter._encoding
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFFormatFlowedWriter._inputDocument
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFFormatFlowedWriter._lineString
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFFormatFlowedWriter._outputString
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFFormatFlowedWriter._quotedString
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFLoginAuthenticator._justSentPassword
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFMailboxUidChildrenEnumerator._includeHidden
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFMailboxUidChildrenEnumerator._index
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFMailboxUidChildrenEnumerator._mailboxes
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFMailboxUidEnumerator._index
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFMailboxUidEnumerator._mailboxes
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFMessageFlags.realFlags
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFNTLMAuthenticator._ntlmError
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFNTLMAuthenticator._ntlmGeneratorRef
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFOutgoingMessageBody._consumer
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFOutgoingMessageBody._count
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFOutgoingMessageBody._lastNewLine
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFOutgoingMessageBody._rawData
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFSecCMSDecoder._SecCMSError
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFSecCMSDecoder._digest
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFSecCMSDecoder._envelopedData
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFSecCMSDecoder._isEncrypted
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFSecCMSDecoder._message
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFSecCMSDecoder._signedData
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFSecCMSDecoder._signers
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFSecCMSEncoder._SecCMSError
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFSecCMSEncoder._encoder
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFSecCMSEncoder._message
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFSecCMSEncoder._singleShot
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFSocket._allowsTrustPrompt
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFSocket._clientCertificates
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFSocket._condition
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFSocket._connectionServiceType
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFSocket._disableEphemeralDiffieHellmanCiphers
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFSocket._eventHandler
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFSocket._host
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFSocket._lowThroughputCounter
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFSocket._numTimeoutSecs
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFSocket._protocol
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFSocket._service
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFSocket._socketCanRead
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFSocket._socketCanWrite
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFSocket._usesOpportunisticSockets
|| __DATA_CONST.__const _AccountInfoDidChange
|| __DATA_CONST.__const _AccountMailboxListingDidChange
|| __DATA_CONST.__const _CcMeCriterionName
|| __DATA_CONST.__const _DeliveryAccountShouldUseAuthentication
|| __DATA_CONST.__const _DeliveryAccountsKey
|| __DATA_CONST.__const _FlaggedCriterionName
|| __DATA_CONST.__const _HasAttachmentsCriterionName
|| __DATA_CONST.__const _IncludesMeCriterionName
|| __DATA_CONST.__const _MFAccountOfflineStatusDidChange
|| __DATA_CONST.__const _MFAccountsWithErrorsKey
|| __DATA_CONST.__const _MFAliasDefaultKey
|| __DATA_CONST.__const _MFAliasPreferenceNameKey
|| __DATA_CONST.__const _MFAttachmentAttachmentKey
|| __DATA_CONST.__const _MFAttachmentCollectionFilterKey
|| __DATA_CONST.__const _MFAttachmentContentIDKey
|| __DATA_CONST.__const _MFAttachmentInvocationFilterKey
|| __DATA_CONST.__const _MFAttachmentInvocationURLKey
|| __DATA_CONST.__const _MFAttachmentIsSinglePagePDFKey
|| __DATA_CONST.__const _MFAttachmentMonitorKey
|| __DATA_CONST.__const _MFAttachmentPlaceholderJSONContentID
|| __DATA_CONST.__const _MFAttachmentPlaceholderJSONFileName
|| __DATA_CONST.__const _MFAttachmentPlaceholderJSONFileSize
|| __DATA_CONST.__const _MFAttachmentPlaceholderJSONFileURL
|| __DATA_CONST.__const _MFAttachmentPlaceholderJSONMailDrop
|| __DATA_CONST.__const _MFAttachmentPlaceholderJSONMimeType
|| __DATA_CONST.__const _MFAttachmentPlaceholderMagicQuoted
|| __DATA_CONST.__const _MFAttachmentPlaceholderMimeType
|| __DATA_CONST.__const _MFAttachmentPrimaryConsumerKey
|| __DATA_CONST.__const _MFAttachmentSyncLockKey
|| __DATA_CONST.__const _MFAuthSchemeAPop
|| __DATA_CONST.__const _MFAuthSchemeCramMd5
|| __DATA_CONST.__const _MFAuthSchemeDigestMD5
|| __DATA_CONST.__const _MFAuthSchemeGSSAPI
|| __DATA_CONST.__const _MFAuthSchemeKerberos4
|| __DATA_CONST.__const _MFAuthSchemeNTLM
|| __DATA_CONST.__const _MFAuthSchemePop
|| __DATA_CONST.__const _MFBatterySaverModeDidChange
|| __DATA_CONST.__const _MFCarrierBundleChangedNotification
|| __DATA_CONST.__const _MFCertificateTrustInfoTrustDidChangeNotification
|| __DATA_CONST.__const _MFContentIDScheme
|| __DATA_CONST.__const _MFDAMailAccountStoreDraftsOnServer
|| __DATA_CONST.__const _MFDeliveryAccountWillBeRemoved
|| __DATA_CONST.__const _MFDeliveryAccountsDidChange
|| __DATA_CONST.__const _MFHealAccountDateLastFetched
|| __DATA_CONST.__const _MFHealAccountShouldShowAlert
|| __DATA_CONST.__const _MFMailAccountArchive
|| __DATA_CONST.__const _MFMailAccountAuthenticationScheme
|| __DATA_CONST.__const _MFMailAccountClass
|| __DATA_CONST.__const _MFMailAccountDeliveryHostname
|| __DATA_CONST.__const _MFMailAccountDeliveryPortNumber
|| __DATA_CONST.__const _MFMailAccountDeliverySSLEnabled
|| __DATA_CONST.__const _MFMailAccountDescription
|| __DATA_CONST.__const _MFMailAccountEncryptionEnabled
|| __DATA_CONST.__const _MFMailAccountEncryptionIdentity
|| __DATA_CONST.__const _MFMailAccountLastEmailAliasesSyncDate
|| __DATA_CONST.__const _MFMailAccountMCProfileUUID
|| __DATA_CONST.__const _MFMailAccountNumberOfDaysToKeepTrash
|| __DATA_CONST.__const _MFMailAccountNumberOfDaysToKeepTrashDefaultValue
|| __DATA_CONST.__const _MFMailAccountPerMessageEncryptionEnabled
|| __DATA_CONST.__const _MFMailAccountPushedMailboxUidsDidChange
|| __DATA_CONST.__const _MFMailAccountReceiveEmailAliasAddresses
|| __DATA_CONST.__const _MFMailAccountRestrictMessageTransfersToOtherAccounts
|| __DATA_CONST.__const _MFMailAccountRestrictRecentsSyncing
|| __DATA_CONST.__const _MFMailAccountRestrictSendingFromExternalProcesses
|| __DATA_CONST.__const _MFMailAccountSMIMEEnabled
|| __DATA_CONST.__const _MFMailAccountSSLClientIdentity
|| __DATA_CONST.__const _MFMailAccountSSLIsDirect
|| __DATA_CONST.__const _MFMailAccountSigningEnabled
|| __DATA_CONST.__const _MFMailAccountSigningIdentity
|| __DATA_CONST.__const _MFMailAccountSupportsMailDrop
|| __DATA_CONST.__const _MFMailAccountType
|| __DATA_CONST.__const _MFMailAccountUsername
|| __DATA_CONST.__const _MFMailAttachmentCachedSizesChangedNotification
|| __DATA_CONST.__const _MFMailDefaultSendingAccountDidChange
|| __DATA_CONST.__const _MFMailMessageStoreDidClose
|| __DATA_CONST.__const _MFMailMessageStoreDidOpen
|| __DATA_CONST.__const _MFMailMessageStoreStructureChanged
|| __DATA_CONST.__const _MFMailboxUidDidBecomeInvalidNotification
|| __DATA_CONST.__const _MFMailboxUidWasRenamedNotification
|| __DATA_CONST.__const _MFMeetingMetadataShouldUseICSRepresentationKey
|| __DATA_CONST.__const _MFMessageCcContainsAccountAddress
|| __DATA_CONST.__const _MFMessageConversationIsMuted
|| __DATA_CONST.__const _MFMessageConversationIsVIP
|| __DATA_CONST.__const _MFMessageErrorDomain
|| __DATA_CONST.__const _MFMessageFontSizeDelta
|| __DATA_CONST.__const _MFMessageHasAttachments
|| __DATA_CONST.__const _MFMessageHasBeenViewed
|| __DATA_CONST.__const _MFMessageHighlightTextInTOC
|| __DATA_CONST.__const _MFMessageIsEncrypted
|| __DATA_CONST.__const _MFMessageIsFlagged
|| __DATA_CONST.__const _MFMessageIsJunk
|| __DATA_CONST.__const _MFMessageIsNotJunk
|| __DATA_CONST.__const _MFMessageIsServerSearchResult
|| __DATA_CONST.__const _MFMessageIsSigned
|| __DATA_CONST.__const _MFMessageIsThreadSearchResult
|| __DATA_CONST.__const _MFMessageKeychainManagerCertificateDeniedDomain
|| __DATA_CONST.__const _MFMessageLoadScheme
|| __DATA_CONST.__const _MFMessageNeedsSyncConfirmation
|| __DATA_CONST.__const _MFMessageNumberOfAttachmentsChanged
|| __DATA_CONST.__const _MFMessagePartNameMeetingData
|| __DATA_CONST.__const _MFMessagePartNameMeetingID
|| __DATA_CONST.__const _MFMessagePartNameMeetingMetadata
|| __DATA_CONST.__const _MFMessagePartNameSummary
|| __DATA_CONST.__const _MFMessagePriorityLevel
|| __DATA_CONST.__const _MFMessageScheme
|| __DATA_CONST.__const _MFMessageSenderIsVIP
|| __DATA_CONST.__const _MFMessageToContainsAccountAddress
|| __DATA_CONST.__const _MFMessageToOrCcContainsAccountAddress
|| __DATA_CONST.__const _MFMessageViewedDate
|| __DATA_CONST.__const _MFMessageWasRedirected
|| __DATA_CONST.__const _MFMonitoredActivityDidRemoveActivityTarget
|| __DATA_CONST.__const _MFOAuth2RefreshToken
|| __DATA_CONST.__const _MFOAuth2Token
|| __DATA_CONST.__const _MFPowerAssertionDidExpire
|| __DATA_CONST.__const _MFProgressiveMimeParseErrorDomain
|| __DATA_CONST.__const _MFRecoveryAttemptorClassNameKey
|| __DATA_CONST.__const _MFReloadNetworkLoggingNotification
|| __DATA_CONST.__const _MFRequestedWebLoginURLKey
|| __DATA_CONST.__const _MFSSLErrorCertificateDigestKey
|| __DATA_CONST.__const _MFSSLErrorCertificateKey
|| __DATA_CONST.__const _MFSecureMIMECompositionSpecificationEncryptionIdentity
|| __DATA_CONST.__const _MFSecureMIMECompositionSpecificationRecipientCertificates
|| __DATA_CONST.__const _MFSecureMIMECompositionSpecificationShouldEncrypt
|| __DATA_CONST.__const _MFSecureMIMECompositionSpecificationShouldSign
|| __DATA_CONST.__const _MFSecureMIMECompositionSpecificationSigningIdentity
|| __DATA_CONST.__const _MFSecureMIMECompositionStatusContextCertificatesByRecipient
|| __DATA_CONST.__const _MFSecureMIMECompositionStatusContextErrorsByRecipient
|| __DATA_CONST.__const _MFSecureMIMECompositionStatusContextIdentityError
|| __DATA_CONST.__const _MFSecureMIMECompositionStatusContextIdentityRef
|| __DATA_CONST.__const _MFServerSSLCertificateIsTrusted
|| __DATA_CONST.__const _MFSignerInfoErrorKey
|| __DATA_CONST.__const _MFStreamEventCanAcceptBytes
|| __DATA_CONST.__const _MFStreamEventEndEncountered
|| __DATA_CONST.__const _MFStreamEventErrorOccurred
|| __DATA_CONST.__const _MFStreamEventHasBytesAvailable
|| __DATA_CONST.__const _MFUIFocusedMessageDidChange
|| __DATA_CONST.__const _MFUserFriendlyErrorDescriptionKey
|| __DATA_CONST.__const _MailAccountArchiveMailboxName
|| __DATA_CONST.__const _MailAccountContentsDidChange
|| __DATA_CONST.__const _MailAccountContentsDidChangeUids
|| __DATA_CONST.__const _MailAccountCustomSignature
|| __DATA_CONST.__const _MailAccountDraftsMailboxName
|| __DATA_CONST.__const _MailAccountEmailAddresses
|| __DATA_CONST.__const _MailAccountFullUserName
|| __DATA_CONST.__const _MailAccountHostname
|| __DATA_CONST.__const _MailAccountInvalidateMeetingCache
|| __DATA_CONST.__const _MailAccountJunkMailboxName
|| __DATA_CONST.__const _MailAccountManagedTag
|| __DATA_CONST.__const _MailAccountPassword
|| __DATA_CONST.__const _MailAccountPortNumber
|| __DATA_CONST.__const _MailAccountPrimaryDeliveryAccountDisabled
|| __DATA_CONST.__const _MailAccountSMTPAlternateIdentifiers
|| __DATA_CONST.__const _MailAccountSSLEnabled
|| __DATA_CONST.__const _MailAccountSSLEnabledIsEditable
|| __DATA_CONST.__const _MailAccountSentMessagesMailboxName
|| __DATA_CONST.__const _MailAccountTrashMailboxName
|| __DATA_CONST.__const _MailAccountURLDidChangeNotification
|| __DATA_CONST.__const _MailAccountsKey
|| __DATA_CONST.__const _MailDefaultSendingAccountKey
|| __DATA_CONST.__const _MailMessageStoreChangedFlagsKey
|| __DATA_CONST.__const _MailMessageStoreChangedMailboxesKey
|| __DATA_CONST.__const _MailMessageStoreEarliestPreviousReceivedDate
|| __DATA_CONST.__const _MailMessageStoreMessageFlagsChanged
|| __DATA_CONST.__const _MailMessageStoreMessageKey
|| __DATA_CONST.__const _MailMessageStoreMessagesAdded
|| __DATA_CONST.__const _MailMessageStoreMessagesAttachmentStorageLocationChanged
|| __DATA_CONST.__const _MailMessageStoreMessagesCompacted
|| __DATA_CONST.__const _MailMessageStoreMessagesWillBeCompacted
|| __DATA_CONST.__const _MailboxAttributesKey
|| __DATA_CONST.__const _MailboxChildrenKey
|| __DATA_CONST.__const _MailboxExtraAttributesKey
|| __DATA_CONST.__const _MailboxListingKey
|| __DATA_CONST.__const _MailboxNameKey
|| __DATA_CONST.__const _MailboxUpdatedWithNoChanges
|| __DATA_CONST.__const _MailboxUserInfoDidChange
|| __DATA_CONST.__const _MessageIsBeingDelivered
|| __DATA_CONST.__const _MessageIsDeleted
|| __DATA_CONST.__const _MessageIsJournaled
|| __DATA_CONST.__const _MessageIsRead
|| __DATA_CONST.__const _MessageQueuedForDelivery
|| __DATA_CONST.__const _MessageWasForwarded
|| __DATA_CONST.__const _MessageWasRepliedTo
|| __DATA_CONST.__const _MonitoredActivityCurrentCount
|| __DATA_CONST.__const _MonitoredActivityCurrentItemProgress
|| __DATA_CONST.__const _MonitoredActivityDictMessage
|| __DATA_CONST.__const _MonitoredActivityDidAddActivityTarget
|| __DATA_CONST.__const _MonitoredActivityEnded
|| __DATA_CONST.__const _MonitoredActivityInvocation
|| __DATA_CONST.__const _MonitoredActivityMaxCount
|| __DATA_CONST.__const _MonitoredActivityMessage
|| __DATA_CONST.__const _MonitoredActivityNewPrimaryTarget
|| __DATA_CONST.__const _MonitoredActivityOldPrimaryTarget
|| __DATA_CONST.__const _MonitoredActivityPrimaryTargetChanged
|| __DATA_CONST.__const _MonitoredActivityReasonArchiving
|| __DATA_CONST.__const _MonitoredActivityReasonCompacting
|| __DATA_CONST.__const _MonitoredActivityReasonDeleting
|| __DATA_CONST.__const _MonitoredActivityReasonFetching
|| __DATA_CONST.__const _MonitoredActivityReasonJunking
|| __DATA_CONST.__const _MonitoredActivityReasonMoving
|| __DATA_CONST.__const _MonitoredActivityReset
|| __DATA_CONST.__const _MonitoredActivityStarted
|| __DATA_CONST.__const _NetworkConfigurationDidChangeNotification
|| __DATA_CONST.__const _NetworkConnectionEstablished
|| __DATA_CONST.__const _NetworkSimulationBitfieldKey
|| __DATA_CONST.__const _NetworkSymptonsHasAlternativeAdvice
|| __DATA_CONST.__const _ReadCriterionName
|| __DATA_CONST.__const _StoreServerCountChanged
|| __DATA_CONST.__const _ThreadMuteCriterionName
|| __DATA_CONST.__const _ThreadNotifyCriterionName
|| __DATA_CONST.__const _ToMeCriterionName
|| __DATA_CONST.__const _TodayCriterionName
|| __DATA_CONST.__const _UnreadCriterionName
|| __DATA_CONST.__const _VIPCriterionName
|| __DATA_CONST.__const __LastViewedMessageInMailboxDateKey
|| __DATA_CONST.__const __LastViewedMessageInMailboxKey
|| __DATA_CONST.__const __MailAccountCachePolicy
|| __DATA_CONST.__const _gCommandSpecTable
|| __DATA_CONST.__const _kMFUTTypeIWork
|| __DATA_CONST.__const _kMFUTTypeIcalIcs
|| __DATA_CONST.__const _kMFUTTypeIcalVcs
|| __DATA_CONST.__const _kMFUTTypeMobileConfig
|| __DATA_CONST.__const _kMFUTTypeMobileProvision
|| __DATA_CONST.__const _kMFUTTypeRFC822
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFAccount
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFAccountStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFActivityMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFAppStateMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFAttachmentComposeManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFAttachmentLibraryDataProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFAttachmentLibraryManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFAttachmentManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFAuthScheme
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFBufferedQueue
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFCRAM_MD5AuthScheme
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFConnectionSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFDigestMD5AuthScheme
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFError
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFInvocationQueue
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFLibraryMessage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFLibraryStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFLockStateMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFMailMessage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFMailMessageStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFMailMimePart
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFMailboxUid
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFMessageCriterion
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFMessageKeychainManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFMessageLibrary
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFMessageWriter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFMonitoredInvocation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFNTLMAuthScheme
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFNetworkController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFOutgoingMessage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFPlainAuthScheme
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFPowerController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFProgressiveMimeParser
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFStream
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFWeakObjectCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MailAccount
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__MFActivityMonitorMultiTarget
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__MFMailboxUidEnumerator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__MFNetworkObserver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__MFSocket
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFAccount
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFAccountStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFActivityMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFAppStateMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFAttachmentComposeManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFAttachmentLibraryDataProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFAttachmentLibraryManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFAttachmentManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFAuthScheme
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFBufferedQueue
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFCRAM_MD5AuthScheme
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFConnectionSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFDigestMD5AuthScheme
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFError
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFInvocationQueue
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFLibraryMessage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFLibraryStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFLockStateMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFMailMessage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFMailMessageStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFMailMimePart
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFMailboxUid
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFMessageCriterion
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFMessageKeychainManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFMessageLibrary
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFMessageWriter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFMonitoredInvocation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFNTLMAuthScheme
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFNetworkController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFOutgoingMessage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFPlainAuthScheme
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFPowerController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFProgressiveMimeParser
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFStream
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFWeakObjectCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MailAccount
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__MFActivityMonitorMultiTarget
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__MFMailboxUidEnumerator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__MFNetworkObserver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__MFSocket
|| __TEXT.__const _MFAttachmentPlaceholderMagicLowerLimit
|| __TEXT.__const _MFAttachmentPlaceholderMagicUpperLimit
|| __TEXT.__const _MessageLegacyVersionNumber
|| __TEXT.__const _MessageLegacyVersionString
|| __TEXT.__text _EFPromiseAttachmentDataHandler
|| __TEXT.__text _MFAssertNetworkActivityAllowed
|| __TEXT.__text _MFBeginDisallowingNetworkActivity
|| __TEXT.__text _MFComparatorFunctionForSortOrder
|| __TEXT.__text _MFContentProtectionDumpDiagnosticState
|| __TEXT.__text _MFContentProtectionGetDeviceLockState
|| __TEXT.__text _MFContentProtectionGetObservedState
|| __TEXT.__text _MFContentProtectionSimulateState
|| __TEXT.__text _MFCopyResponseDataForURLRequest
|| __TEXT.__text _MFCreateStringByCondensingWhitespace
|| __TEXT.__text _MFCreateURLForContentID
|| __TEXT.__text _MFDescriptionForMessageFlags
|| __TEXT.__text _MFDeviceUnlockedSinceBoot
|| __TEXT.__text _MFEndDisallowingNetworkActivity
|| __TEXT.__text _MFErrorCodeWithDataStatus
|| __TEXT.__text _MFHasAccountsEntitlement
|| __TEXT.__text _MFLookupLocalizedString
|| __TEXT.__text _MFMailDirectory
|| __TEXT.__text _MFMailDirectoryURL
|| __TEXT.__text _MFMessageDeliveryStatusString
|| __TEXT.__text _MFMessageFlagsByApplyingDictionary
|| __TEXT.__text _MFMessageFrameworkBundle
|| __TEXT.__text _MFMimeDataCreateStringFromHeaderBytes
|| __TEXT.__text _MFMimeDataGetRangeOfHeader
|| __TEXT.__text _MFProtectedDataAvailable
|| __TEXT.__text _MFReadLoggingDefaults
|| __TEXT.__text _MFRegisterContentProtectionObserver
|| __TEXT.__text _MFRegisterPowerObserver
|| __TEXT.__text _MFSMTPFailureReasonString
|| __TEXT.__text _MFSetUserAgent
|| __TEXT.__text _MFUnregisterContentProtectionObserver
|| __TEXT.__text _MFUnregisterPowerObserver
|| __TEXT.__text _MFUserAgent
|| __TEXT.__text _MailAccountCachePolicyStringForEnumValue
|| __TEXT.__text _MessageInfoComparator
|| __TEXT.__text _MessageInfoSentDateComparator
|| __TEXT.__text _NSStringFromMailboxUidType
|| __TEXT.__text __MFBeginAllowingMainThreadNetworking
|| __TEXT.__text __MFCompareMailboxDictionariesByName
|| __TEXT.__text __MFCompareMailboxUidsNS
|| __TEXT.__text __MFCompareMailboxUidsWithResultCodes
|| __TEXT.__text __MFEndAllowingMainThreadNetworking
|| __TEXT.__text __powerChanged
__ Accounts: _ACAccountIdentifierKey
__ Accounts: _ACAccountStoreDidChangeNotification
__ Accounts: _ACAccountTypeIdentifierAol
__ Accounts: _ACAccountTypeIdentifierGmail
__ Accounts: _ACAccountTypeIdentifierIMAP
__ Accounts: _ACAccountTypeIdentifierIMAPMail
__ Accounts: _ACAccountTypeIdentifierPOP
__ Accounts: _ACAccountTypeIdentifierSMTP
__ Accounts: _ACAccountTypeIdentifierYahoo
__ Accounts: _ACErrorDomain
__ Accounts: _OBJC_CLASS_$_ACAccount
__ Accounts: _OBJC_CLASS_$_ACAccountCredential
__ Accounts: _OBJC_CLASS_$_ACAccountStore
__ Accounts: _kACRenewCredentialsReasonStringKey
__ Accounts: _kACRenewCredentialsShouldAvoidUIKey
__ Accounts: _kACRenewCredentialsShouldForceKey
__ Accounts: _kAccountDataclassMail
__ Accounts: _kAccountDataclassNotes
__ AppSupport: _CPFSSizeStrings
__ AppSupport: _CPPowerAssertionCreate
__ AppSupport: _CPSharedResourcesDirectory
__ AppSupport: _OBJC_CLASS_$_CPAggregateDictionary
__ AppSupport: _OBJC_CLASS_$_RadiosPreferences
__ AssertionServices: _BKSApplicationStateAll
__ AssertionServices: _BKSApplicationStateDisplayIDKey
__ AssertionServices: _BKSApplicationStateKey
__ AssertionServices: _OBJC_CLASS_$_BKSApplicationStateMonitor
__ CFNetwork: _OBJC_CLASS_$_NSURLSession
__ CFNetwork: _OBJC_CLASS_$_NSURLSessionConfiguration
__ CFNetwork: __kCFStreamPropertyLowThroughputBlock
__ CFNetwork: __kCFStreamPropertyLowThroughputThreshold
__ CFNetwork: __kCFStreamSSLDisableEphemeralDiffieHellmanCiphers
__ CFNetwork: _kCFErrorDomainCFNetwork
__ CFNetwork: _kCFStreamPropertyAccountIdentifier
__ CFNetwork: _kCFStreamPropertyConnectionIsCellular
__ CFNetwork: _kCFStreamPropertyDataConnectionServiceType
__ CFNetwork: _kCFStreamPropertyDataContextOnDemand
__ CFNetwork: _kCFStreamPropertyOpportunisticConnection
__ CFNetwork: _kCFStreamPropertySSLContext
__ CFNetwork: _kCFStreamPropertySSLPeerTrust
__ CFNetwork: _kCFStreamPropertySSLSettings
__ CFNetwork: _kCFStreamPropertySourceApplicationBundleIdentifier
__ CFNetwork: _kCFStreamSSLCertificates
__ CFNetwork: _kCFStreamSSLLevel
__ CFNetwork: _kCFStreamSSLValidatesCertificateChain
__ CFNetwork: _kCFStreamSocketSecurityLevelTLSv1SSLv3
__ CallKit: _OBJC_CLASS_$_CXCallObserver
__ CertUI: _OBJC_CLASS_$_CertUIPrompt
__ CertUI: _OBJC_CLASS_$_CertUITrustManager
__ CertUI: _kCertUIServiceTypeSMTP
__ CertUI: _kCertUITrustPromptOptionsAllowCertificateTrustKey
__ CertUI: _kCertUITrustPromptOptionsShowContinueKey
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFAllocatorGetDefault
__ CoreFoundation: _CFAllocatorSetDefault
__ CoreFoundation: _CFArrayAppendValue
__ CoreFoundation: _CFArrayApplyFunction
__ CoreFoundation: _CFArrayBSearchValues
__ CoreFoundation: _CFArrayCreateMutable
__ CoreFoundation: _CFArrayCreateMutableCopy
__ CoreFoundation: _CFArrayExchangeValuesAtIndices
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetFirstIndexOfValue
__ CoreFoundation: _CFArrayGetTypeID
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFArrayGetValues
__ CoreFoundation: _CFArrayInsertValueAtIndex
__ CoreFoundation: _CFArrayRemoveAllValues
__ CoreFoundation: _CFArrayRemoveValueAtIndex
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFBundleGetIdentifier
__ CoreFoundation: _CFBundleGetMainBundle
__ CoreFoundation: _CFCharacterSetCreateWithCharactersInString
__ CoreFoundation: _CFCharacterSetIsCharacterMember
__ CoreFoundation: _CFCopyDescription
__ CoreFoundation: _CFDataAppendBytes
__ CoreFoundation: _CFDataCreateMutable
__ CoreFoundation: _CFDataCreateWithBytesNoCopy
__ CoreFoundation: _CFDateFormatterCreate
__ CoreFoundation: _CFDateFormatterCreateStringWithDate
__ CoreFoundation: _CFDictionaryAddValue
__ CoreFoundation: _CFDictionaryCreate
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionaryCreateMutableCopy
__ CoreFoundation: _CFDictionaryGetTypeID
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFDictionaryRemoveAllValues
__ CoreFoundation: _CFDictionaryRemoveValue
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFEqual
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFLocaleCopyCurrent
__ CoreFoundation: _CFLocaleCreate
__ CoreFoundation: _CFLocaleGetIdentifier
__ CoreFoundation: _CFMakeCollectable
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFNumberCreate
__ CoreFoundation: _CFNumberGetTypeID
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesCopyValue
__ CoreFoundation: _CFPreferencesGetAppIntegerValue
__ CoreFoundation: _CFPreferencesSynchronize
__ CoreFoundation: _CFPropertyListCreateWithData
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFRunLoopAddSource
__ CoreFoundation: _CFRunLoopAddTimer
__ CoreFoundation: _CFRunLoopGetCurrent
__ CoreFoundation: _CFRunLoopGetMain
__ CoreFoundation: _CFRunLoopGetNextTimerFireDate
__ CoreFoundation: _CFRunLoopRemoveSource
__ CoreFoundation: _CFRunLoopRunInMode
__ CoreFoundation: _CFRunLoopSourceInvalidate
__ CoreFoundation: _CFRunLoopStop
__ CoreFoundation: _CFRunLoopTimerCreate
__ CoreFoundation: _CFStreamCreatePairWithSocketToHost
__ CoreFoundation: _CFStringAppend
__ CoreFoundation: _CFStringAppendCString
__ CoreFoundation: _CFStringAppendCharacters
__ CoreFoundation: _CFStringAppendFormat
__ CoreFoundation: _CFStringCompare
__ CoreFoundation: _CFStringConvertEncodingToIANACharSetName
__ CoreFoundation: _CFStringCreateMutable
__ CoreFoundation: _CFStringCreateMutableCopy
__ CoreFoundation: _CFStringCreateWithBytes
__ CoreFoundation: _CFStringCreateWithBytesNoCopy
__ CoreFoundation: _CFStringCreateWithCString
__ CoreFoundation: _CFStringCreateWithCharacters
__ CoreFoundation: _CFStringCreateWithFormat
__ CoreFoundation: _CFStringCreateWithSubstring
__ CoreFoundation: _CFStringGetCStringPtr
__ CoreFoundation: _CFStringGetCharacters
__ CoreFoundation: _CFStringGetCharactersPtr
__ CoreFoundation: _CFStringGetLength
__ CoreFoundation: _CFStringGetSystemEncoding
__ CoreFoundation: _CFStringGetTypeID
__ CoreFoundation: _CFStringHasSuffix
__ CoreFoundation: _CFStringInsert
__ CoreFoundation: _CFStringReplaceAll
__ CoreFoundation: _CFStringUppercase
__ CoreFoundation: _CFUUIDCreate
__ CoreFoundation: _CFUUIDCreateString
__ CoreFoundation: _NSDefaultRunLoopMode
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCache
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSEnumerator
__ CoreFoundation: _OBJC_CLASS_$_NSInvocation
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: _OBJC_METACLASS_$_NSEnumerator
__ CoreFoundation: _OBJC_METACLASS_$_NSInvocation
__ CoreFoundation: __CFPreferencesCopyValueWithContainer
__ CoreFoundation: __CFPreferencesSetValueWithContainer
__ CoreFoundation: __CFPreferencesSynchronizeWithContainer
__ CoreFoundation: __CFURLAttachSecurityScopeToFileURL
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFAllocatorNull
__ CoreFoundation: _kCFBooleanFalse
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFCopyStringDictionaryKeyCallBacks
__ CoreFoundation: _kCFNull
__ CoreFoundation: _kCFPreferencesAnyApplication
__ CoreFoundation: _kCFPreferencesAnyHost
__ CoreFoundation: _kCFPreferencesCurrentApplication
__ CoreFoundation: _kCFPreferencesCurrentHost
__ CoreFoundation: _kCFPreferencesCurrentUser
__ CoreFoundation: _kCFRunLoopCommonModes
__ CoreFoundation: _kCFRunLoopDefaultMode
__ CoreFoundation: _kCFStreamPropertySocketNativeHandle
__ CoreFoundation: _kCFStreamPropertySocketRemoteHostName
__ CoreFoundation: _kCFStreamPropertySocketRemotePortNumber
__ CoreFoundation: _kCFStreamPropertySocketSecurityLevel
__ CoreFoundation: _kCFStreamSocketSecurityLevelNegotiatedSSL
__ CoreFoundation: _kCFStreamSocketSecurityLevelNone
__ CoreFoundation: _kCFTypeArrayCallBacks
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ CoreServices: _UTTypeConformsTo
__ CoreServices: _UTTypeCreatePreferredIdentifierForTag
__ CoreServices: _UTTypeIsDynamic
__ CoreServices: __kUTTypePassBundle
__ CoreServices: __kUTTypePassData
__ CoreServices: _kUTTagClassFilenameExtension
__ CoreServices: _kUTTagClassMIMEType
__ CoreServices: _kUTType3DContent
__ CoreServices: _kUTTypeAudiovisualContent
__ CoreServices: _kUTTypeBundle
__ CoreServices: _kUTTypeBzip2Archive
__ CoreServices: _kUTTypeContent
__ CoreServices: _kUTTypeData
__ CoreServices: _kUTTypeElectronicPublication
__ CoreServices: _kUTTypeEmailMessage
__ CoreServices: _kUTTypeFont
__ CoreServices: _kUTTypeGNUZipArchive
__ CoreServices: _kUTTypeHTML
__ CoreServices: _kUTTypeImage
__ CoreServices: _kUTTypeInkText
__ CoreServices: _kUTTypeItem
__ CoreServices: _kUTTypeJSON
__ CoreServices: _kUTTypePDF
__ CoreServices: _kUTTypePKCS12
__ CoreServices: _kUTTypePackage
__ CoreServices: _kUTTypePresentation
__ CoreServices: _kUTTypePropertyList
__ CoreServices: _kUTTypeScript
__ CoreServices: _kUTTypeSourceCode
__ CoreServices: _kUTTypeSpreadsheet
__ CoreServices: _kUTTypeText
__ CoreServices: _kUTTypeVCard
__ CoreServices: _kUTTypeX509Certificate
__ CoreServices: _kUTTypeXML
__ CoreServices: _kUTTypeZipArchive
__ CoreTelephony: _CTCellularDataPlanGetIsEnabled
__ CoreTelephony: _OBJC_CLASS_$_CTBundle
__ CoreTelephony: _OBJC_CLASS_$_CoreTelephonyClient
__ CoreTelephony: __CTServerConnectionAddToRunLoop
__ CoreTelephony: __CTServerConnectionCreateWithIdentifier
__ CoreTelephony: __CTServerConnectionPacketContextAssertionCreate
__ CoreTelephony: _kCTDataConnectionServiceTypeInternet
__ CoreTelephony: _kCTSIMSupportSIMStatusReady
__ EmailCore: _ECGetNextHeaderFromDataInRange
__ EmailCore: _ECMessageHeaderKeyBCC
__ EmailCore: _ECMessageHeaderKeyCC
__ EmailCore: _ECMessageHeaderKeyContentDescription
__ EmailCore: _ECMessageHeaderKeyContentDisposition
__ EmailCore: _ECMessageHeaderKeyContentID
__ EmailCore: _ECMessageHeaderKeyContentLanguage
__ EmailCore: _ECMessageHeaderKeyContentLocation
__ EmailCore: _ECMessageHeaderKeyContentTransferEncoding
__ EmailCore: _ECMessageHeaderKeyContentType
__ EmailCore: _ECMessageHeaderKeyDate
__ EmailCore: _ECMessageHeaderKeyListID
__ EmailCore: _ECMessageHeaderKeyMIMEVersion
__ EmailCore: _ECMessageHeaderKeyMessageID
__ EmailCore: _ECMessageHeaderKeyResentCC
__ EmailCore: _ECMessageHeaderKeyResentMessageID
__ EmailCore: _ECMessageHeaderKeyResentTo
__ EmailCore: _ECMessageHeaderKeySubject
__ EmailCore: _ECMessageHeaderKeyTo
__ EmailCore: _ECMessageHeaderKeyXMailer
__ EmailCore: _ECMessageHeaderKeyXPriority
__ EmailCore: _OBJC_CLASS_$_ECIDNAEncoder
__ EmailCore: _OBJC_CLASS_$_ECSubject
__ EmailFoundation: _EFFrameworkVersion
__ EmailFoundation: _EFIsNotNull
__ EmailFoundation: _EFIsSeedBuild
__ EmailFoundation: _EFPriorityDesignatorKey
__ EmailFoundation: _EFProductName
__ EmailFoundation: _EFPublicErrorInfoKey
__ EmailFoundation: _EFStringWithInt
__ EmailFoundation: _EFStringWithUnsignedInteger
__ EmailFoundation: _OBJC_CLASS_$_EFCancelationToken
__ EmailFoundation: _OBJC_CLASS_$_EFDevice
__ EmailFoundation: _OBJC_CLASS_$_EFFuture
__ EmailFoundation: _OBJC_CLASS_$_EFObservable
__ EmailFoundation: _OBJC_CLASS_$_EFObserver
__ EmailFoundation: _OBJC_CLASS_$_EFPriorityDesignator
__ EmailFoundation: _OBJC_CLASS_$_EFPromise
__ EmailFoundation: _OBJC_CLASS_$_EFScheduler
__ EmailFoundation: _OBJC_CLASS_$_EFStringHash
__ EmailFoundation: _OBJC_METACLASS_$_EFPriorityDesignator
__ Foundation: _NSBOOLFromString
__ Foundation: _NSClassFromString
__ Foundation: _NSFilePosixPermissions
__ Foundation: _NSFileProtectionCompleteUnlessOpen
__ Foundation: _NSFileProtectionKey
__ Foundation: _NSFileSize
__ Foundation: _NSGetUncaughtExceptionHandler
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLog
__ Foundation: _NSOSStatusErrorDomain
__ Foundation: _NSPOSIXErrorDomain
__ Foundation: _NSPageSize
__ Foundation: _NSProcessInfoPowerStateDidChangeNotification
__ Foundation: _NSRecoveryAttempterErrorKey
__ Foundation: _NSStreamSocketSSLErrorDomain
__ Foundation: _NSStringFromBOOL
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSTemporaryDirectory
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _NSZoneCalloc
__ Foundation: _NSZoneFree
__ Foundation: _NSZoneMalloc
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSAutoreleasePool
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSCondition
__ Foundation: _OBJC_CLASS_$_NSConditionLock
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSCountedSet
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileCoordinator
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSIndexSet
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSLock
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotification
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSProgress
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSRecursiveLock
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSScanner
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLFileTypeMappings
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSUserActivity
__ Foundation: _OBJC_METACLASS_$_NSError
__ GraphicsServices: _GSSendAppPreferencesChanged
__ GraphicsServices: _GSSystemRootDirectory
__ IOKit: _IOAllowPowerChange
__ IOKit: _IODeregisterForSystemPower
__ IOKit: _IONotificationPortDestroy
__ IOKit: _IONotificationPortSetDispatchQueue
__ IOKit: _IORegisterForSystemPower
__ IOKit: _IOServiceClose
__ ImageIO: _CGImageDestinationCopyImageSource
__ ImageIO: _CGImageDestinationCreateWithData
__ ImageIO: _CGImageMetadataCreateMutableCopy
__ ImageIO: _CGImageMetadataEnumerateTagsUsingBlock
__ ImageIO: _CGImageMetadataRemoveTagWithPath
__ ImageIO: _CGImageMetadataTagCopyName
__ ImageIO: _CGImageMetadataTagCopyPrefix
__ ImageIO: _CGImageSourceCopyMetadataAtIndex
__ ImageIO: _CGImageSourceCreateWithData
__ ImageIO: _CGImageSourceGetCount
__ ImageIO: _CGImageSourceGetType
__ ImageIO: _kCGImageDestinationMetadata
__ MIME: _H_FROM_SPACE
__ MIME: _H_X_APPLE_PART_URL
__ MIME: _MFCharsetForEncoding
__ MIME: _MFCreateDataWithString
__ MIME: _MFCreateStringWithData
__ MIME: _MFDataConsumerConsumeCompleteData
__ MIME: _MFDecodingAsHTMLKey
__ MIME: _MFDecodingCollectRFC822DecodedMessageBodyKey
__ MIME: _MFDecodingDownloadIfNecessaryKey
__ MIME: _MFDecodingIsCompleteKey
__ MIME: _MFDecodingRFC822DecodedMessageBodyKey
__ MIME: _MFDecodingResultOffsetKey
__ MIME: _MFGetMappedAllocator
__ MIME: _MFGetRandomBytes
__ MIME: _MFGetTypeInfo
__ MIME: _MFGuessEncodingForBytes
__ MIME: _MFMimePartParseContentDispositionHeader
__ MIME: _MFMimePartParseContentTypeHeader
__ MIME: _MFMimePartSetValueForPreservedHeader
__ MIME: _MFRemoveItemAtPath
__ MIME: _MFStringCanBeConvertedLosslessly
__ MIME: _MFStringGetBytes
__ MIME: _MFStringHashForMessageIDHeader
__ MIME: _MF_MD5HMAC_Init
__ MIME: _MF_MD5HMAC_InputBytes
__ MIME: _MF_MD5HMAC_Output
__ MIME: _OBJC_CLASS_$_MFBase64Decoder
__ MIME: _OBJC_CLASS_$_MFBase64Encoder
__ MIME: _OBJC_CLASS_$_MFBaseFilterDataConsumer
__ MIME: _OBJC_CLASS_$_MFBufferedDataConsumer
__ MIME: _OBJC_CLASS_$_MFConditionLock
__ MIME: _OBJC_CLASS_$_MFData
__ MIME: _OBJC_CLASS_$_MFDataHolder
__ MIME: _OBJC_CLASS_$_MFDataMessageStore
__ MIME: _OBJC_CLASS_$_MFDiagnostics
__ MIME: _OBJC_CLASS_$_MFHTMLParser
__ MIME: _OBJC_CLASS_$_MFLineEndingConverterFilter
__ MIME: _OBJC_CLASS_$_MFLock
__ MIME: _OBJC_CLASS_$_MFMessage
__ MIME: _OBJC_CLASS_$_MFMessageBody
__ MIME: _OBJC_CLASS_$_MFMessageDataContainer
__ MIME: _OBJC_CLASS_$_MFMessageFileWrapper
__ MIME: _OBJC_CLASS_$_MFMessageHeaders
__ MIME: _OBJC_CLASS_$_MFMessageStore
__ MIME: _OBJC_CLASS_$_MFMessageStoreObjectCache
__ MIME: _OBJC_CLASS_$_MFMessageTextAttachment
__ MIME: _OBJC_CLASS_$_MFMimeBody
__ MIME: _OBJC_CLASS_$_MFMimeCharset
__ MIME: _OBJC_CLASS_$_MFMimePart
__ MIME: _OBJC_CLASS_$_MFMimeTextAttachment
__ MIME: _OBJC_CLASS_$_MFMutableData
__ MIME: _OBJC_CLASS_$_MFMutableFilterDataConsumer
__ MIME: _OBJC_CLASS_$_MFMutableMessageHeaders
__ MIME: _OBJC_CLASS_$_MFProgressFilterDataConsumer
__ MIME: _OBJC_CLASS_$_MFQuotedPrintableDecoder
__ MIME: _OBJC_CLASS_$_MFQuotedPrintableEncoder
__ MIME: _OBJC_CLASS_$_MFRangedDataFilter
__ MIME: _OBJC_CLASS_$_MFRecursiveLock
__ MIME: _OBJC_CLASS_$_MFTypeInfo
__ MIME: _OBJC_CLASS_$_MFUUDecoderFilter
__ MIME: _OBJC_CLASS_$_MFWeakReferenceHolder
__ MIME: _OBJC_CLASS_$_MFWeakSet
__ MIME: _OBJC_IVAR_$_MFMessage._dateReceivedInterval
__ MIME: _OBJC_IVAR_$_MFMessage._messageIDHeaderHash
__ MIME: _OBJC_IVAR_$_MFMessage._summary
__ MIME: _OBJC_IVAR_$_MFMessageDataContainer._data
__ MIME: _OBJC_IVAR_$_MFMessageDataContainer._incomplete
__ MIME: _OBJC_IVAR_$_MFMessageDataContainer._partial
__ MIME: _OBJC_IVAR_$_MFMessageStore._uniqueStrings
__ MIME: _OBJC_IVAR_$_MFMimePart._otherIvars
__ MIME: _OBJC_METACLASS_$_MFBufferedDataConsumer
__ MIME: _OBJC_METACLASS_$_MFDataMessageStore
__ MIME: _OBJC_METACLASS_$_MFMessage
__ MIME: _OBJC_METACLASS_$_MFMessageBody
__ MIME: _OBJC_METACLASS_$_MFMessageHeaders
__ MIME: _OBJC_METACLASS_$_MFMessageStore
__ MIME: _OBJC_METACLASS_$_MFMimePart
__ MIME: _OBJC_METACLASS_$_MFMimeTextAttachment
__ MIME: __MFCopyDecodeText
__ MIME: __MFCreateStringFromHeaderBytes
__ MIME: __MFDecodeText
__ MIME: __MFLockGlobalLock
__ MIME: __MFOffsetFromThreadDictionary
__ MIME: __MFSetValueInDictionary
__ MIME: __MFUnlockGlobalLock
__ MessageSupport: _MFIsMobileMail
__ MessageSupport: _MFLogGeneral
__ MessageSupport: _MFLogNetwork
__ MessageSupport: _MFMessagePreferencesDomain
__ MessageSupport: _MFMobileMailContainerPath
__ MessageSupport: _MFMobileMailPreferenceDomain
__ MessageSupport: _kMFLoggingDefaultsChangedDomain
__ MessageSupport: _kMFMobileMailBundleIdentifier
__ MessageSupport: _kMFProfileListChangedDomain
__ MobileKeyBag: _MKBDeviceFormattedForContentProtection
__ MobileKeyBag: _MKBDeviceUnlockedSinceBoot
__ MobileKeyBag: _MKBGetDeviceLockState
__ MobileKeyBag: _kMobileKeyBagLockStatusNotifyToken
__ MobileWiFi: _WiFiManagerClientCreate
__ MobileWiFi: _WiFiManagerClientGetType
__ MobileWiFi: _WiFiManagerClientSetType
__ Security: _NtlmCreateClientRequest
__ Security: _NtlmCreateClientResponse
__ Security: _NtlmGeneratorCreate
__ Security: _NtlmGeneratorRelease
__ Security: _SSLGetNegotiatedProtocolVersion
__ Security: _SecCertificateCopyCommonNames
__ Security: _SecCertificateCopyProperties
__ Security: _SecCertificateCopyRFC822Names
__ Security: _SecCertificateCreateWithData
__ Security: _SecCertificateGetKeyUsage
__ Security: _SecCertificateGetSHA1Digest
__ Security: _SecCertificateNotValidAfter
__ Security: _SecCertificateNotValidBefore
__ Security: _SecCmsContentInfoGetContent
__ Security: _SecCmsContentInfoGetContentTypeTag
__ Security: _SecCmsContentInfoGetInnerContent
__ Security: _SecCmsContentInfoSetContentData
__ Security: _SecCmsContentInfoSetContentEnvelopedData
__ Security: _SecCmsContentInfoSetContentSignedData
__ Security: _SecCmsDecoderCreate
__ Security: _SecCmsDecoderDestroy
__ Security: _SecCmsDecoderFinish
__ Security: _SecCmsDecoderUpdate
__ Security: _SecCmsDigestContextDestroy
__ Security: _SecCmsDigestContextStartMultiple
__ Security: _SecCmsDigestContextUpdate
__ Security: _SecCmsEncoderDestroy
__ Security: _SecCmsEncoderFinish
__ Security: _SecCmsEnvelopedDataCreate
__ Security: _SecCmsEnvelopedDataGetContentInfo
__ Security: _SecCmsMessageContentLevel
__ Security: _SecCmsMessageContentLevelCount
__ Security: _SecCmsMessageCreate
__ Security: _SecCmsMessageDestroy
__ Security: _SecCmsMessageEncode
__ Security: _SecCmsMessageGetContentInfo
__ Security: _SecCmsMessageIsEncrypted
__ Security: _SecCmsRecipientInfoCreate
__ Security: _SecCmsSignedDataAddCertChain
__ Security: _SecCmsSignedDataCreate
__ Security: _SecCmsSignedDataGetContentInfo
__ Security: _SecCmsSignedDataGetDigestAlgs
__ Security: _SecCmsSignedDataGetSignerInfo
__ Security: _SecCmsSignedDataHasDigests
__ Security: _SecCmsSignedDataSetDigestContext
__ Security: _SecCmsSignedDataSignerInfoCount
__ Security: _SecCmsSignedDataVerifySignerInfo
__ Security: _SecCmsSignerInfoAddMSSMIMEEncKeyPrefs
__ Security: _SecCmsSignerInfoAddSMIMEEncKeyPrefs
__ Security: _SecCmsSignerInfoAddSigningTime
__ Security: _SecCmsSignerInfoCopyCertFromEncryptionKeyPreference
__ Security: _SecCmsSignerInfoCreate
__ Security: _SecCmsSignerInfoGetSignerEmailAddress
__ Security: _SecCmsSignerInfoGetVerificationStatus
__ Security: _SecCmsSignerInfoIncludeCerts
__ Security: _SecIdentityCopyCertificate
__ Security: _SecIdentityGetTypeID
__ Security: _SecItemAdd
__ Security: _SecItemCopyMatching
__ Security: _SecItemDelete
__ Security: _SecItemUpdate
__ Security: _SecPolicyCreateRevocation
__ Security: _SecPolicyCreateSMIME
__ Security: _SecSMIMEFindBulkAlgForRecipients
__ Security: _SecTaskCopyValuesForEntitlements
__ Security: _SecTaskCreateFromSelf
__ Security: _SecTrustCopyPolicies
__ Security: _SecTrustCreateWithCertificates
__ Security: _SecTrustEvaluate
__ Security: _SecTrustGetCertificateAtIndex
__ Security: _SecTrustGetCertificateCount
__ Security: _SecTrustSetPolicies
__ Security: _kSecAttrAccessGroup
__ Security: _kSecAttrAccessible
__ Security: _kSecAttrAccount
__ Security: _kSecAttrPort
__ Security: _kSecAttrProtocol
__ Security: _kSecAttrProtocolSMTP
__ Security: _kSecAttrProtocolTelnetS
__ Security: _kSecAttrServer
__ Security: _kSecAttrService
__ Security: _kSecAttrSynchronizable
__ Security: _kSecClass
__ Security: _kSecClassCertificate
__ Security: _kSecClassGenericPassword
__ Security: _kSecClassIdentity
__ Security: _kSecClassInternetPassword
__ Security: _kSecMatchLimit
__ Security: _kSecMatchLimitAll
__ Security: _kSecPropertyKeyLabel
__ Security: _kSecPropertyKeyType
__ Security: _kSecPropertyKeyValue
__ Security: _kSecPropertyTypeSection
__ Security: _kSecPropertyTypeString
__ Security: _kSecReturnData
__ Security: _kSecReturnPersistentRef
__ Security: _kSecReturnRef
__ Security: _kSecValueData
__ Security: _kSecValuePersistentRef
__ Security: _kSecValueRef
__ SystemConfiguration: _SCDynamicStoreCopyValue
__ SystemConfiguration: _SCDynamicStoreCreate
__ SystemConfiguration: _SCDynamicStoreCreateRunLoopSource
__ SystemConfiguration: _SCDynamicStoreKeyCreateNetworkGlobalEntity
__ SystemConfiguration: _SCDynamicStoreSetNotificationKeys
__ SystemConfiguration: _SCNetworkReachabilityCreateWithAddress
__ SystemConfiguration: _SCNetworkReachabilityGetFlags
__ SystemConfiguration: _SCNetworkReachabilityScheduleWithRunLoop
__ SystemConfiguration: _SCNetworkReachabilitySetCallback
__ SystemConfiguration: _SCNetworkReachabilityUnscheduleFromRunLoop
__ SystemConfiguration: _SCPreferencesCreate
__ SystemConfiguration: _SCPreferencesGetValue
__ SystemConfiguration: _SCPreferencesScheduleWithRunLoop
__ SystemConfiguration: _SCPreferencesSetCallback
__ SystemConfiguration: _SCPreferencesSynchronize
__ SystemConfiguration: _SCPreferencesUnscheduleFromRunLoop
__ SystemConfiguration: _kSCDynamicStoreDomainState
__ SystemConfiguration: _kSCEntNetDNS
__ SystemConfiguration: _kSCPropNetDNSServerAddresses
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: _APP_SANDBOX_READ_WRITE
__ libSystem.B.dylib: _CC_MD5_Final
__ libSystem.B.dylib: _CC_MD5_Init
__ libSystem.B.dylib: _CC_MD5_Update
__ libSystem.B.dylib: _SANDBOX_EXTENSION_CANONICAL
__ libSystem.B.dylib: __Block_copy
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __Block_release
__ libSystem.B.dylib: __DefaultRuneLocale
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___maskrune
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___stderrp
__ libSystem.B.dylib: ___strlcat_chk
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _bsearch_b
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_barrier_sync
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_async
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_queue_get_label
__ libSystem.B.dylib: _dispatch_release
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_retain
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _fcntl
__ libSystem.B.dylib: _fprintf
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _getprogname
__ libSystem.B.dylib: _getservbyname
__ libSystem.B.dylib: _getsockname
__ libSystem.B.dylib: _getsockopt
__ libSystem.B.dylib: _inet_ntop
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memcmp
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _mkstemps
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _open
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _pthread_attr_init
__ libSystem.B.dylib: _pthread_attr_setdetachstate
__ libSystem.B.dylib: _pthread_create
__ libSystem.B.dylib: _pthread_get_qos_class_np
__ libSystem.B.dylib: _pthread_mutex_lock
__ libSystem.B.dylib: _pthread_mutex_unlock
__ libSystem.B.dylib: _pthread_once
__ libSystem.B.dylib: _pthread_override_qos_class_end_np
__ libSystem.B.dylib: _pthread_override_qos_class_start_np
__ libSystem.B.dylib: _pthread_self
__ libSystem.B.dylib: _pthread_set_qos_class_self_np
__ libSystem.B.dylib: _realloc
__ libSystem.B.dylib: _realpath$DARWIN_EXTSN
__ libSystem.B.dylib: _rename
__ libSystem.B.dylib: _sandbox_extension_issue_file
__ libSystem.B.dylib: _snprintf
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _strdup
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _strncasecmp
__ libSystem.B.dylib: _strncmp
__ libSystem.B.dylib: _strtoul
__ libSystem.B.dylib: _strtoull
__ libSystem.B.dylib: _time
__ libicucore.A.dylib: _u_getIntPropertyValue
__ libicucore.A.dylib: _ubrk_close
__ libicucore.A.dylib: _ubrk_following
__ libicucore.A.dylib: _ubrk_open
__ libicucore.A.dylib: _ubrk_preceding
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _class_getClassMethod
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_allocWithZone
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x4
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _sel_getName
__ libz.1.dylib: _deflate
__ libz.1.dylib: _deflateEnd
__ libz.1.dylib: _deflateInit2_
__ libz.1.dylib: _inflate
__ libz.1.dylib: _inflateEnd
__ libz.1.dylib: _inflateInit2_
MFStream : NSObject <NSStreamDelegate, NSURLSessionDelegate>
 @property  NSError *streamError
 @property  BOOL isOpen
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MFStream networkThread]
  +[MFStream setNetworkThread:]
  +[MFStream _networkDispatchQueue]

  // instance methods
  -[MFStream stream:handleEvent:]
  -[MFStream propertyForKey:]
  -[MFStream write:maxLength:]
  -[MFStream read:maxLength:]
  -[MFStream dealloc]
  -[MFStream close]
  -[MFStream setProperty:forKey:]
  -[MFStream streamError]
  -[MFStream isOpen]
  -[MFStream initCallBack:onDispatchQueue:]
  -[MFStream _copyPropertyForKey:]
  -[MFStream openToHostName:port:]
  -[MFStream _createPairWithSocketToHostName:port:]
  -[MFStream _closeAndReleaseStream:logMessage:]
  -[MFStream _readBytesFromStream]


_MFSocket : NSObject
 @property  MFStream *stream
 @property  int timeout
 @property  BOOL allowsTrustPrompt
 @property  BOOL usesOpportunisticSockets
 @property  BOOL disableEphemeralDiffieHellmanCiphers
 @property  NSArray *clientCertificates
 @property  NSString *sourceApplicationBundleIdentifier
 @property  NSString *accountIdentifier
 @property  NSString *networkAccountIdentifier
 @property  NSArray *serverCertificates
 @property  NSString *remoteHostname
 @property  unsigned int remotePortNumber
 @property  NSData *sourceIPAddress
 @property  BOOL isReadable
 @property  BOOL isWritable
 @property  BOOL isCellularConnection
 @property  BOOL isValid

  // instance methods
  -[_MFSocket abort]
  -[_MFSocket isReadable]
  -[_MFSocket sourceApplicationBundleIdentifier]
  -[_MFSocket isCellularConnection]
  -[_MFSocket enableThroughputMonitoring:]
  -[_MFSocket disableEphemeralDiffieHellmanCiphers]
  -[_MFSocket isWritable]
  -[_MFSocket setAccountIdentifier:]
  -[_MFSocket writeBytes:length:]
  -[_MFSocket connectToHost:withPort:service:]
  -[_MFSocket serverCertificates]
  -[_MFSocket setTimeout:]
  -[_MFSocket dealloc]
  -[_MFSocket isValid]
  -[_MFSocket stream]
  -[_MFSocket allowsTrustPrompt]
  -[_MFSocket networkAccountIdentifier]
  -[_MFSocket setClientCertificates:]
  -[_MFSocket setConnectionServiceType:]
  -[_MFSocket setSourceApplicationBundleIdentifier:]
  -[_MFSocket setEventHandler:]
  -[_MFSocket timeout]
  -[_MFSocket securityProtocol]
  -[_MFSocket setAllowsTrustPrompt:]
  -[_MFSocket setDisableEphemeralDiffieHellmanCiphers:]
  -[_MFSocket accountIdentifier]
  -[_MFSocket remotePortNumber]
  -[_MFSocket setNetworkAccountIdentifier:]
  -[_MFSocket readBytes:length:]
  -[_MFSocket setUsesOpportunisticSockets:]
  -[_MFSocket clientCertificates]
  -[_MFSocket setSecurityProtocol:]
  -[_MFSocket usesOpportunisticSockets]
  -[_MFSocket setStream:]
  -[_MFSocket init]
  -[_MFSocket remoteHostname]
  -[_MFSocket _certificateIsTrustedForAccount:]
  -[_MFSocket _setCertificateIsTrusted:forAccount:]
  -[_MFSocket _evaluateTrust:errorPtr:]
  -[_MFSocket _negotiatedProtocolVersion]
  -[_MFSocket _startSSLHandshakeWithProtocol:errorPtr:]
  -[_MFSocket _waitForSocketOpenAndFlag:]
  -[_MFSocket _bufferedByteCount]
  -[_MFSocket sourceIPAddress]


MFAccount : NSObject <EFPubliclyDescribable>
 @property  ACAccount *accountForRenewingCredentials
 @property  ACAccount *persistentAccount
 @property  ACAccount *parentAccount
 @property  NSString *parentAccountIdentifier
 @property  NSDictionary *properties
 @property  NSString *uniqueId
 @property  NSString *identifier
 @property  NSString *syncStoreIdentifier
 @property  NSString *managedTag
 @property  NSString *type
 @property  NSString *username
 @property  NSString *hostname
 @property  NSString *displayName
 @property  NSString *sourceApplicationBundleIdentifier
 @property  NSString *ef_publicDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MFAccount usesSSL]
  +[MFAccount defaultSecurePortNumber]
  +[MFAccount defaultPortNumber]
  +[MFAccount hostname]
  +[MFAccount accountTypeIdentifier]
  +[MFAccount supportedDataclasses]
  +[MFAccount accountTypeString]
  +[MFAccount setShouldHealAccounts:]
  +[MFAccount shouldHealAccounts]
  +[MFAccount newAccountWithDictionary:]
  +[MFAccount excludedAccountPropertyKeys]
  +[MFAccount accountWithProperties:]
  +[MFAccount authSchemesForAccountClass]
  +[MFAccount accountWithPersistentAccount:]
  +[MFAccount _newPersistentAccount]
  +[MFAccount _accountClass]
  +[MFAccount existingAccountForUniqueID:]
  +[MFAccount isPredefinedAccountType]
  +[MFAccount predefinedValueForKey:]
  +[MFAccount propertiesWhichRequireValidation]
  +[MFAccount _basicPropertyForKey:persistentAccount:]
  +[MFAccount _setBasicProperty:forKey:persistentAccount:]
  +[MFAccount displayedAccountTypeString]
  +[MFAccount displayedShortAccountTypeString]
  +[MFAccount legacyKeychainProtocol]
  +[MFAccount accountPropertiesValueForKey:value:]
  +[MFAccount isCommonPortNumber:]
  +[MFAccount isSSLEditable]
  +[MFAccount saslProfileName]

  // instance methods
  -[MFAccount portNumber]
  -[MFAccount accountClass]
  -[MFAccount usesSSL]
  -[MFAccount ef_publicDescription]
  -[MFAccount setHostname:]
  -[MFAccount isEnabledForDataclass:]
  -[MFAccount defaultSecurePortNumber]
  -[MFAccount setPortNumber:]
  -[MFAccount sourceApplicationBundleIdentifier]
  -[MFAccount defaultPortNumber]
  -[MFAccount setUsesSSL:]
  -[MFAccount hostname]
  -[MFAccount domain]
  -[MFAccount identifier]
  -[MFAccount connectionServiceType]
  -[MFAccount properties]
  -[MFAccount setUsername:]
  -[MFAccount setCredentialItem:forKey:]
  -[MFAccount isManaged]
  -[MFAccount type]
  -[MFAccount initWithProperties:]
  -[MFAccount _newConnection]
  -[MFAccount dealloc]
  -[MFAccount parentAccountIdentifier]
  -[MFAccount isActive]
  -[MFAccount serviceName]
  -[MFAccount requiresAuthentication]
  -[MFAccount allowsTrustPrompt]
  -[MFAccount networkAccountIdentifier]
  -[MFAccount setClientCertificates:]
  -[MFAccount credentialItemForKey:]
  -[MFAccount uniqueId]
  -[MFAccount setSourceApplicationBundleIdentifier:]
  -[MFAccount setDisplayName:]
  -[MFAccount enabledDataclasses]
  -[MFAccount username]
  -[MFAccount setActive:]
  -[MFAccount setAccountProperty:forKey:]
  -[MFAccount password]
  -[MFAccount copyWithZone:]
  -[MFAccount accountPropertyForKey:]
  -[MFAccount syncStoreIdentifier]
  -[MFAccount copyDiagnosticInformation]
  -[MFAccount setPassword:]
  -[MFAccount displayName]
  -[MFAccount setDomain:]
  -[MFAccount clientCertificates]
  -[MFAccount isEqual:]
  -[MFAccount init]
  -[MFAccount _password]
  -[MFAccount parentAccount]
  -[MFAccount removeAccountPropertyForKey:]
  -[MFAccount _credential]
  -[MFAccount accountInfoDidChange]
  -[MFAccount savePersistentAccount]
  -[MFAccount oauth2Token]
  -[MFAccount shouldFetchACEDBInfoForError:]
  -[MFAccount initWithPersistentAccount:]
  -[MFAccount setPersistentAccount:]
  -[MFAccount persistentAccountDidChange:previousAccount:]
  -[MFAccount persistentAccount]
  -[MFAccount removePersistentAccount]
  -[MFAccount _privacySafeDescription]
  -[MFAccount _queueAccountInfoDidChange]
  -[MFAccount _setAccountProperties:]
  -[MFAccount setValueInAccountProperties:forKey:]
  -[MFAccount removeValueInAccountPropertiesForKey:]
  -[MFAccount valueInAccountPropertiesForKey:]
  -[MFAccount _objectForAccountInfoKey:]
  -[MFAccount _boolForAccountInfoKey:defaultValue:]
  -[MFAccount canGoOffline]
  -[MFAccount managedTag]
  -[MFAccount supportsMailDrop]
  -[MFAccount _credentialCreateIfNecessary:]
  -[MFAccount _credentialCreateIfNecessary:error:]
  -[MFAccount _passwordWithError:]
  -[MFAccount credentialAccessibility]
  -[MFAccount _renewCredentialsWithOptions:completion:]
  -[MFAccount renewCredentialsWithOptions:completion:]
  -[MFAccount promptUserForWebLoginWithURL:shouldConfirm:completionHandler:]
  -[MFAccount accountForRenewingCredentials]
  -[MFAccount fetchTokensIfNecessary:]
  -[MFAccount secureServiceName]
  -[MFAccount releaseAllConnections]
  -[MFAccount releaseAllForcedConnections]
  -[MFAccount setTryDirectSSL:]
  -[MFAccount preferredAuthScheme]
  -[MFAccount setPreferredAuthScheme:]
  -[MFAccount connectionClass]
  -[MFAccount authenticatedConnection]
  -[MFAccount certUIService]
  -[MFAccount defaultConnectionSettings]
  -[MFAccount applySettingsAsDefault:]
  -[MFAccount alternateConnectionSettings]
  -[MFAccount insecureConnectionSettings]
  -[MFAccount secureConnectionSettings]
  -[MFAccount _shouldTryDirectSSLConnectionOnPort:]
  -[MFAccount customDescriptionForError:authScheme:defaultDescription:]
  -[MFAccount reportAuthenticationError:authScheme:]
  -[MFAccount _connectAndAuthenticate:]
  -[MFAccount nameForMailboxUid:]
  -[MFAccount shouldEnableAfterError:]
  -[MFAccount enableAccount]
  -[MFAccount shouldDisplayHostnameInErrorMessages]
  -[MFAccount missingPasswordErrorWithTitle:]
  -[MFAccount inaccessiblePasswordErrorWithTitle:]
  -[MFAccount loginDisabledErrorWithTitle:]
  -[MFAccount isSyncingNotes]
  -[MFAccount credentialItemForKey:error:]
  -[MFAccount setCredentialItem:forKey:error:]
  -[MFAccount setOAuth2Token:refreshToken:error:]
  -[MFAccount promptUserForPasswordWithTitle:message:completionHandler:]


MFAccountValidator : NSObject
 @property  BOOL performsValidationInBackground
 @property  MFMonitoredInvocation *validationInvocation
 @property  id delegate
 @property  BOOL accountIsValid
 @property  BOOL accountSupportsSSL
 @property  MFError *error
 @property  MFAccount *account

  // instance methods
  -[MFAccountValidator account]
  -[MFAccountValidator setDelegate:]
  -[MFAccountValidator delegate]
  -[MFAccountValidator error]
  -[MFAccountValidator dealloc]
  -[MFAccountValidator stop]
  -[MFAccountValidator init]
  -[MFAccountValidator _validateAccount:]
  -[MFAccountValidator _validateAccountWithoutFallbacks:]
  -[MFAccountValidator initWithPerformsValidationInBackground:]
  -[MFAccountValidator validateAccount:useSSL:]
  -[MFAccountValidator validateAccount:useSSL:withCompletion:]
  -[MFAccountValidator validateAccountWithoutFallbacks:]
  -[MFAccountValidator validateAccountWithoutFallbacks:withCompletion:]
  -[MFAccountValidator cancelValidation]
  -[MFAccountValidator _ispAccountInfo]
  -[MFAccountValidator _backgroundValidateAccountFinished:authSchemes:]
  -[MFAccountValidator _incomingServerValid]
  -[MFAccountValidator _outgoingServerValid]
  -[MFAccountValidator accountValidationCanceled]
  -[MFAccountValidator _validateAccount:withFallbacks:]
  -[MFAccountValidator performsValidationInBackground]
  -[MFAccountValidator validationInvocation]
  -[MFAccountValidator accountIsValid]
  -[MFAccountValidator accountSupportsSSL]


MFActivityMonitor : EFPriorityDesignator <EFCancelable>
 @property  MFMailboxUid *mailbox
 @property  BOOL canBeCancelled
 @property  BOOL shouldCancel
 @property  BOOL isRemoteSearch
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MFActivityMonitor currentMonitor]
  +[MFActivityMonitor destroyMonitor]

  // instance methods
  -[MFActivityMonitor setMaxCount:]
  -[MFActivityMonitor changeCount]
  -[MFActivityMonitor startActivity]
  -[MFActivityMonitor _didChange]
  -[MFActivityMonitor startTime]
  -[MFActivityMonitor setDelegate:]
  -[MFActivityMonitor bytesWritten]
  -[MFActivityMonitor error]
  -[MFActivityMonitor shouldCancel]
  -[MFActivityMonitor dealloc]
  -[MFActivityMonitor reset]
  -[MFActivityMonitor isActive]
  -[MFActivityMonitor setInvocationQueue:]
  -[MFActivityMonitor setError:]
  -[MFActivityMonitor setDisplayName:]
  -[MFActivityMonitor setTaskName:]
  -[MFActivityMonitor reasons]
  -[MFActivityMonitor addCancelable:]
  -[MFActivityMonitor displayName]
  -[MFActivityMonitor mailbox]
  -[MFActivityMonitor cancel]
  -[MFActivityMonitor taskName]
  -[MFActivityMonitor init]
  -[MFActivityMonitor addReason:]
  -[MFActivityMonitor statusMessage]
  -[MFActivityMonitor setStatusMessage:]
  -[MFActivityMonitor primaryTarget]
  -[MFActivityMonitor setPrimaryTarget:]
  -[MFActivityMonitor cancelMessage]
  -[MFActivityMonitor postActivityStarting]
  -[MFActivityMonitor postActivityFinished:]
  -[MFActivityMonitor finishedActivity:]
  -[MFActivityMonitor userInfoForNotification]
  -[MFActivityMonitor postDidChangeWithUserInfo:]
  -[MFActivityMonitor setCurrentCount:]
  -[MFActivityMonitor _ntsThrottledUserInfoDict]
  -[MFActivityMonitor setPercentDoneOfCurrentItem:]
  -[MFActivityMonitor setGotNewMessagesState:]
  -[MFActivityMonitor gotNewMessagesState]
  -[MFActivityMonitor setStatusMessage:percentDone:]
  -[MFActivityMonitor setPercentDone:]
  -[MFActivityMonitor percentDone]
  -[MFActivityMonitor setExpectedLength:]
  -[MFActivityMonitor expectedLength]
  -[MFActivityMonitor setDisplayName:maxCount:]
  -[MFActivityMonitor canBeCancelled]
  -[MFActivityMonitor setCanBeCancelled:]
  -[MFActivityMonitor setShouldCancel:]
  -[MFActivityMonitor removeCancelable:]
  -[MFActivityMonitor _cancelAssociatedCancelables]
  -[MFActivityMonitor acquireExclusiveAccessKey]
  -[MFActivityMonitor relinquishExclusiveAccessKey:]
  -[MFActivityMonitor setStatusMessage:percentDone:withKey:]
  -[MFActivityMonitor setStatusMessage:withKey:]
  -[MFActivityMonitor setPercentDone:withKey:]
  -[MFActivityMonitor resetConnectionStats]
  -[MFActivityMonitor recordBytesRead:]
  -[MFActivityMonitor recordBytesWritten:]
  -[MFActivityMonitor bytesRead]
  -[MFActivityMonitor setMailbox:]
  -[MFActivityMonitor isRemoteSearch]
  -[MFActivityMonitor setIsRemoteSearch:]
  -[MFActivityMonitor notifyConnectionEstablished]
  -[MFActivityMonitor setSupportsPerItemProgress:]
  -[MFActivityMonitor hasReason:]
  -[MFActivityMonitor setActivityTarget:]
  -[MFActivityMonitor activityTarget]
  -[MFActivityMonitor _lockedAddActivityTarget:]
  -[MFActivityMonitor addActivityTarget:]
  -[MFActivityMonitor addActivityTargets:]
  -[MFActivityMonitor removeActivityTarget:]
  -[MFActivityMonitor activityTargets]


_MFActivityMonitorMultiTarget : NSObject
  // instance methods
  -[_MFActivityMonitorMultiTarget dealloc]
  -[_MFActivityMonitorMultiTarget displayName]
  -[_MFActivityMonitorMultiTarget allTargets]
  -[_MFActivityMonitorMultiTarget primaryTarget]
  -[_MFActivityMonitorMultiTarget setPrimaryTarget:]
  -[_MFActivityMonitorMultiTarget addActivityTarget:]
  -[_MFActivityMonitorMultiTarget removeActivityTarget:]


MFAuthScheme : NSObject
  // class methods
  +[MFAuthScheme schemeWithName:]
  +[MFAuthScheme initialize]
  +[MFAuthScheme registerSchemeClass:]
  +[MFAuthScheme knownSchemes]
  +[MFAuthScheme authSchemesForAccount:connection:]

  // instance methods
  -[MFAuthScheme requiresPassword]
  -[MFAuthScheme name]
  -[MFAuthScheme humanReadableName]
  -[MFAuthScheme connectionClassForAccountClass:]
  -[MFAuthScheme canAuthenticateAccountClass:connection:]
  -[MFAuthScheme authenticatorClass]
  -[MFAuthScheme hasEncryption]
  -[MFAuthScheme authenticatorForAccount:connection:]
  -[MFAuthScheme defaultPortForAccount:]


MFBufferedQueue : NSObject
 @property  unsigned int size
 @property  unsigned int maximumSize
 @property  double maximumLatency

  // instance methods
  -[MFBufferedQueue addItem:]
  -[MFBufferedQueue removeAllObjects]
  -[MFBufferedQueue sizeForItem:]
  -[MFBufferedQueue _flush]
  -[MFBufferedQueue dealloc]
  -[MFBufferedQueue isEmpty]
  -[MFBufferedQueue setMaximumSize:]
  -[MFBufferedQueue size]
  -[MFBufferedQueue maximumSize]
  -[MFBufferedQueue flush]
  -[MFBufferedQueue init]
  -[MFBufferedQueue initWithMaximumSize:latency:]
  -[MFBufferedQueue flushIfNecessary]
  -[MFBufferedQueue handleItems:]
  -[MFBufferedQueue maximumLatency]
  -[MFBufferedQueue setMaximumLatency:]


MFConnection : NSObject <MFDiagnosticsGenerator>
 @property  BOOL isFetching
 @property  double lastUsedTime
 @property  NSArray *capabilities
 @property  NSArray *authenticationMechanisms
 @property  NSString *securityProtocol
 @property  BOOL isValid
 @property  BOOL hasBytesAvailable
 @property  BOOL isCellularConnection
 @property  BOOL loginDisabled
 @property  BOOL usesOpportunisticSockets
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MFConnection initialize]
  +[MFConnection readLoggingDefaults]
  +[MFConnection logConnection:type:data:]
  +[MFConnection flushLog]
  +[MFConnection logClasses]
  +[MFConnection setLogClasses:]
  +[MFConnection logAllSocketActivity]
  +[MFConnection setLogAllSocketActivity:]
  +[MFConnection logActivityOnPorts]
  +[MFConnection setLogActivityOnPorts:]
  +[MFConnection logActivityOnHosts]
  +[MFConnection setLogActivityOnHosts:]
  +[MFConnection shouldTryFallbacksAfterError:]

  // instance methods
  -[MFConnection disconnect]
  -[MFConnection loginDisabled]
  -[MFConnection isCellularConnection]
  -[MFConnection enableThroughputMonitoring:]
  -[MFConnection writeData:]
  -[MFConnection dealloc]
  -[MFConnection isValid]
  -[MFConnection capabilities]
  -[MFConnection lastUsedTime]
  -[MFConnection hasBytesAvailable]
  -[MFConnection securityProtocol]
  -[MFConnection copyDiagnosticInformation]
  -[MFConnection usesOpportunisticSockets]
  -[MFConnection init]
  -[MFConnection authenticationMechanisms]
  -[MFConnection isFetching]
  -[MFConnection setIsFetching:]
  -[MFConnection _setupSocketWithSettings:]
  -[MFConnection connectUsingSettings:]
  -[MFConnection connectUsingAccount:]
  -[MFConnection connectUsingFallbacksForAccount:]
  -[MFConnection authenticateUsingAccount:]
  -[MFConnection writeBytes:length:dontLogBytesInRange:]
  -[MFConnection writeData:dontLogBytesInRange:]
  -[MFConnection setDesiredReadBufferLength:]
  -[MFConnection logReadChars:length:]
  -[MFConnection readLineIntoData:]
  -[MFConnection readBytesIntoData:desiredLength:]
  -[MFConnection authenticateUsingAccount:authenticator:]
  -[MFConnection startTLSForAccount:]
  -[MFConnection startCompression]
  -[MFConnection endCompression]
  -[MFConnection connectionSettings]
  -[MFConnection setConnectionSettings:]
  -[MFConnection setAllowsFallbacks:]


MFConnectionSettings : NSObject <NSCopying>
 @property  NSString *certUIService
 @property  NSString *hostname
 @property  NSString *serviceName
 @property  NSArray *clientCertificates
 @property  NSString *sourceApplicationBundleIdentifier
 @property  NSString *accountIdentifier
 @property  NSString *networkAccountIdentifier
 @property  unsigned int portNumber
 @property  BOOL usesSSL
 @property  BOOL usesOpportunisticSockets
 @property  BOOL tryDirectSSL
 @property  BOOL allowsTrustPrompt

  // instance methods
  -[MFConnectionSettings portNumber]
  -[MFConnectionSettings setServiceName:]
  -[MFConnectionSettings usesSSL]
  -[MFConnectionSettings setHostname:]
  -[MFConnectionSettings setPortNumber:]
  -[MFConnectionSettings sourceApplicationBundleIdentifier]
  -[MFConnectionSettings setUsesSSL:]
  -[MFConnectionSettings hostname]
  -[MFConnectionSettings connectionServiceType]
  -[MFConnectionSettings setAccountIdentifier:]
  -[MFConnectionSettings dealloc]
  -[MFConnectionSettings serviceName]
  -[MFConnectionSettings allowsTrustPrompt]
  -[MFConnectionSettings networkAccountIdentifier]
  -[MFConnectionSettings setClientCertificates:]
  -[MFConnectionSettings setConnectionServiceType:]
  -[MFConnectionSettings setSourceApplicationBundleIdentifier:]
  -[MFConnectionSettings setAllowsTrustPrompt:]
  -[MFConnectionSettings accountIdentifier]
  -[MFConnectionSettings setNetworkAccountIdentifier:]
  -[MFConnectionSettings copyWithZone:]
  -[MFConnectionSettings setUsesOpportunisticSockets:]
  -[MFConnectionSettings clientCertificates]
  -[MFConnectionSettings usesOpportunisticSockets]
  -[MFConnectionSettings setTryDirectSSL:]
  -[MFConnectionSettings certUIService]
  -[MFConnectionSettings tryDirectSSL]
  -[MFConnectionSettings setCertUIService:]


MFCRAM_MD5AuthScheme : MFAuthScheme
  // instance methods
  -[MFCRAM_MD5AuthScheme name]
  -[MFCRAM_MD5AuthScheme humanReadableName]
  -[MFCRAM_MD5AuthScheme canAuthenticateAccountClass:connection:]
  -[MFCRAM_MD5AuthScheme authenticatorClass]
  -[MFCRAM_MD5AuthScheme sendsPlainTextPasswords]
  -[MFCRAM_MD5AuthScheme hasEncryption]


MFCRAM_MD5Authenticator : MFSASLAuthenticator
  // instance methods
  -[MFCRAM_MD5Authenticator responseForServerData:]


DeliveryAccount : MFAccount
  // class methods
  +[DeliveryAccount accountTypeIdentifier]
  +[DeliveryAccount accountWithIdentifier:]
  +[DeliveryAccount newDefaultInstance]
  +[DeliveryAccount existingAccountForUniqueID:]
  +[DeliveryAccount _postDeliveryAccountsHaveChanged]
  +[DeliveryAccount reloadDeliveryAccounts]
  +[DeliveryAccount deliveryAccounts]
  +[DeliveryAccount addDeliveryAccount:]
  +[DeliveryAccount removeDeliveryAccount:]
  +[DeliveryAccount accountWithUniqueId:]
  +[DeliveryAccount existingAccountWithIdentifier:]
  +[DeliveryAccount existingAccountWithHostname:username:]
  +[DeliveryAccount accountWithHostname:username:]
  +[DeliveryAccount accountWithHostname:username:lookForExistingAccounts:]
  +[DeliveryAccount carrierDeliveryAccount]

  // instance methods
  -[DeliveryAccount identifier]
  -[DeliveryAccount setUsername:]
  -[DeliveryAccount _setAccountProperties:]
  -[DeliveryAccount displayHostname]
  -[DeliveryAccount shouldUseAuthentication]
  -[DeliveryAccount mailAccountIfAvailable]
  -[DeliveryAccount newDeliveryWithMessage:]
  -[DeliveryAccount newDeliveryWithHeaders:mixedContent:textPartsAreHTML:]
  -[DeliveryAccount deliveryClass]
  -[DeliveryAccount maximumMessageBytes]
  -[DeliveryAccount setShouldUseAuthentication:]
  -[DeliveryAccount setMaximumMessageBytes:]
  -[DeliveryAccount hasNoReferences]
  -[DeliveryAccount canBeFallbackAccount]
  -[DeliveryAccount hasEnoughInformationForEasySetup]
  -[DeliveryAccount supportsOutboxCopy]
  -[DeliveryAccount shouldUseSaveSentForAccount:]
  -[DeliveryAccount _updateAccountDescriptionWithUsername:hostname:]
  -[DeliveryAccount newDeliveryWithHeaders:HTML:plainTextAlternative:other:charsets:]


MFDigestMD5AuthScheme : MFAuthScheme
  // instance methods
  -[MFDigestMD5AuthScheme name]
  -[MFDigestMD5AuthScheme humanReadableName]
  -[MFDigestMD5AuthScheme canAuthenticateAccountClass:connection:]
  -[MFDigestMD5AuthScheme authenticatorClass]
  -[MFDigestMD5AuthScheme hasEncryption]


_MFDigestMD5Authenticator : MFSASLAuthenticator
  // instance methods
  -[_MFDigestMD5Authenticator dealloc]
  -[_MFDigestMD5Authenticator securityLevel]
  -[_MFDigestMD5Authenticator responseForServerData:]
  -[_MFDigestMD5Authenticator setAuthenticationState:]
  -[_MFDigestMD5Authenticator setSecurityLevel:]
  -[_MFDigestMD5Authenticator setMaxBuffer:]
  -[_MFDigestMD5Authenticator setCryptInfo:]
  -[_MFDigestMD5Authenticator setExpectedResponse:]


_MFFormatFlowedWriter : NSObject
  // class methods
  +[_MFFormatFlowedWriter newWithPlainTextDocument:encoding:]

  // instance methods
  -[_MFFormatFlowedWriter dealloc]
  -[_MFFormatFlowedWriter outputString]
  -[_MFFormatFlowedWriter _findLineBreakInRange:maxCharWidthCount:endIsURL:]
  -[_MFFormatFlowedWriter _outputQuotedParagraph:range:withQuoteLevel:]
  -[_MFFormatFlowedWriter quotedString]
  -[_MFFormatFlowedWriter addedTrailingSpaces]


_MFInvocationQOSOverride : NSObject
 @property  BOOL lowPriority
 @property  unsigned int desiredQoS
 @property  ^{_opaque_pthread_t=q^{__darwin_pthread_handler_rec}[8176c]} pthread

  // instance methods
  -[_MFInvocationQOSOverride dealloc]
  -[_MFInvocationQOSOverride isEqual:]
  -[_MFInvocationQOSOverride initWithPthread:desiredQoS:lowPriority:]
  -[_MFInvocationQOSOverride applyOverrideWhileForeground:]
  -[_MFInvocationQOSOverride removeOverride]
  -[_MFInvocationQOSOverride isLowPriority]
  -[_MFInvocationQOSOverride desiredQoS]
  -[_MFInvocationQOSOverride pthread]


MFInvocationQueue : NSObject <MFDiagnosticsGenerator, MFContentProtectionObserver>
 @property  unsigned long maxThreadCount
 @property  int threadPriorityTrigger
 @property  double threadRecycleTimeout
 @property  unsigned long invocationCount
 @property  unsigned long threadCount
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MFInvocationQueue sharedInvocationQueue]
  +[MFInvocationQueue flushAllInvocationQueues]
  +[MFInvocationQueue totalInvocationCount]

  // instance methods
  -[MFInvocationQueue threadCount]
  -[MFInvocationQueue dealloc]
  -[MFInvocationQueue contentProtectionStateChanged:previousState:]
  -[MFInvocationQueue removeAllItems]
  -[MFInvocationQueue copyDiagnosticInformation]
  -[MFInvocationQueue didCancel:]
  -[MFInvocationQueue applicationWillResume]
  -[MFInvocationQueue applicationWillSuspend]
  -[MFInvocationQueue init]
  -[MFInvocationQueue _drainQueue:]
  -[MFInvocationQueue initWithMaxThreadCount:]
  -[MFInvocationQueue setMaxThreadCount:]
  -[MFInvocationQueue maxThreadCount]
  -[MFInvocationQueue invocationCount]
  -[MFInvocationQueue addInvocation:]
  -[MFInvocationQueue threadPriorityTrigger]
  -[MFInvocationQueue setThreadPriorityTrigger:]
  -[MFInvocationQueue threadRecycleTimeout]
  -[MFInvocationQueue setThreadRecycleTimeout:]
  -[MFInvocationQueue _adjustThreadPrioritiesIsForeground:]
  -[MFInvocationQueue _processInvocation:]


MFLibraryMessage : MFMailMessage
  // class methods
  +[MFLibraryMessage messageWithLibraryID:]

  // instance methods
  -[MFLibraryMessage messageStore]
  -[MFLibraryMessage uid]
  -[MFLibraryMessage setUid:]
  -[MFLibraryMessage account]
  -[MFLibraryMessage setSummary:]
  -[MFLibraryMessage commit]
  -[MFLibraryMessage library]
  -[MFLibraryMessage path]
  -[MFLibraryMessage setMetadataValue:forKey:]
  -[MFLibraryMessage dealloc]
  -[MFLibraryMessage setFlags:]
  -[MFLibraryMessage messageSize]
  -[MFLibraryMessage messageID]
  -[MFLibraryMessage libraryID]
  -[MFLibraryMessage setMessageSize:]
  -[MFLibraryMessage mailbox]
  -[MFLibraryMessage isEqual:]
  -[MFLibraryMessage mailboxName]
  -[MFLibraryMessage persistentID]
  -[MFLibraryMessage _privacySafeDescription]
  -[MFLibraryMessage setPreferredEncoding:]
  -[MFLibraryMessage loadCachedHeaderValuesFromHeaders:]
  -[MFLibraryMessage remoteID]
  -[MFLibraryMessage conversationFlags]
  -[MFLibraryMessage initWithLibraryID:]
  -[MFLibraryMessage mailboxID]
  -[MFLibraryMessage setMailboxID:]
  -[MFLibraryMessage originalMailboxID]
  -[MFLibraryMessage setOriginalMailboxID:]
  -[MFLibraryMessage originalMailboxURL]
  -[MFLibraryMessage _updateUID]
  -[MFLibraryMessage setRemoteID:]
  -[MFLibraryMessage uniqueRemoteId]
  -[MFLibraryMessage setUniqueRemoteId:]
  -[MFLibraryMessage isPartial]
  -[MFLibraryMessage setIsPartial:]
  -[MFLibraryMessage isMessageContentsLocallyAvailable]
  -[MFLibraryMessage hasTemporaryUid]
  -[MFLibraryMessage setHasTemporaryUid:]
  -[MFLibraryMessage compareByUidWithMessage:]
  -[MFLibraryMessage setMessageFlagsWithoutCommitting:]
  -[MFLibraryMessage setMessageFlags:]
  -[MFLibraryMessage setMutableInfoFromMessage:]
  -[MFLibraryMessage dataPathForMimePart:]
  -[MFLibraryMessage markAsViewed]
  -[MFLibraryMessage markAsNotViewed]
  -[MFLibraryMessage markAsFlagged]
  -[MFLibraryMessage markAsNotFlagged]
  -[MFLibraryMessage markAsReplied]
  -[MFLibraryMessage markAsForwarded]
  -[MFLibraryMessage setConversationFlags:]
  -[MFLibraryMessage setRemoteID:flags:size:mailboxID:originalMailboxID:]
  -[MFLibraryMessage setMessageData:isPartial:]
  -[MFLibraryMessage dataConsumerForMimePart:]
  -[MFLibraryMessage isLibraryMessage]
  -[MFLibraryMessage _forceLoadOfMessageSummaryFromProtectedStore]
  -[MFLibraryMessage preferredEmailAddressToReplyWith]
  -[MFLibraryMessage copyMessageInfo]
  -[MFLibraryMessage _initializeMetadata]
  -[MFLibraryMessage metadataValueOfClass:forKey:]
  -[MFLibraryMessage _attachmentStorageLocation]
  -[MFLibraryMessage attachmentStorageLocation]


MFMessageDetails : NSObject <MFBaseMessage>
 @property  unsigned int uid
 @property  unsigned long messageFlags
 @property  MFMailboxUid *mailbox
 @property  unsigned int dateReceivedInterval
 @property  unsigned int dateSentInterval
 @property  NSString *externalID
 @property  long long conversationHash
 @property  unsigned int mailboxID
 @property  long long messageIDHash
 @property  BOOL flagged
 @property  BOOL read
 @property  BOOL deleted
 @property  BOOL senderVIP
 @property  BOOL knownToHaveAttachments
 @property  BOOL libraryMessage
 @property  unsigned int libraryID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MFMessageDetails uid]
  -[MFMessageDetails deleted]
  -[MFMessageDetails dealloc]
  -[MFMessageDetails externalID]
  -[MFMessageDetails messageID]
  -[MFMessageDetails libraryID]
  -[MFMessageDetails mailbox]
  -[MFMessageDetails isEqual:]
  -[MFMessageDetails read]
  -[MFMessageDetails flagged]
  -[MFMessageDetails remoteID]
  -[MFMessageDetails mailboxID]
  -[MFMessageDetails isLibraryMessage]
  -[MFMessageDetails messageFlags]
  -[MFMessageDetails conversationHash]
  -[MFMessageDetails messageIDHash]
  -[MFMessageDetails dateSentInterval]
  -[MFMessageDetails copyMessageInfo]
  -[MFMessageDetails dateReceivedInterval]
  -[MFMessageDetails senderVIP]
  -[MFMessageDetails isKnownToHaveAttachments]


MFLibraryStore : MFMailMessageStore
 @property  NSDate *earliestReceivedDate

  // class methods
  +[MFLibraryStore sharedInstance]
  +[MFLibraryStore sharedInstanceIfExists]
  +[MFLibraryStore defaultLoadOptions]
  +[MFLibraryStore storeWithMailbox:]
  +[MFLibraryStore storeWithCriterion:]
  +[MFLibraryStore createEmptyStoreForPath:]
  +[MFLibraryStore storeAtPathIsWritable:]

  // instance methods
  -[MFLibraryStore growFetchWindow]
  -[MFLibraryStore library]
  -[MFLibraryStore deleteMessagesOlderThanNumberOfDays:compact:]
  -[MFLibraryStore setLibrary:]
  -[MFLibraryStore criterion]
  -[MFLibraryStore shouldCancel]
  -[MFLibraryStore dealloc]
  -[MFLibraryStore initWithMailbox:]
  -[MFLibraryStore updateMetadata]
  -[MFLibraryStore mailbox]
  -[MFLibraryStore totalCount]
  -[MFLibraryStore URLString]
  -[MFLibraryStore unreadCount]
  -[MFLibraryStore fetchWindow]
  -[MFLibraryStore canCompact]
  -[MFLibraryStore _fetchBodyDataForMessage:andHeaderDataIfReadilyAvailable:downloadIfNecessary:partial:]
  -[MFLibraryStore _fetchHeaderDataForMessage:downloadIfNecessary:]
  -[MFLibraryStore _handleFlagsChangedForMessages:flags:oldFlagsByMessage:]
  -[MFLibraryStore allowsAppend]
  -[MFLibraryStore bodyFetchRequiresNetworkActivity]
  -[MFLibraryStore doCompact]
  -[MFLibraryStore _fetchDataForMimePart:range:isComplete:consumer:]
  -[MFLibraryStore _fetchFullBodyDataForMessage:andHeaderDataIfReadilyAvailable:downloadIfNecessary:didDownload:]
  -[MFLibraryStore _queueMessagesAdded:]
  -[MFLibraryStore _queueMessageFlagsChanged:]
  -[MFLibraryStore _queueMessagesWillBeCompacted:]
  -[MFLibraryStore _queueMessagesWereCompacted:]
  -[MFLibraryStore _cachedHeadersForMessage:valueIfNotPresent:]
  -[MFLibraryStore _cachedHeaderDataForMessage:valueIfNotPresent:]
  -[MFLibraryStore _cachedBodyDataContainerForMessage:valueIfNotPresent:]
  -[MFLibraryStore handleMessageFlagsChanged:]
  -[MFLibraryStore handleMessagesWillBeCompacted:]
  -[MFLibraryStore handleMessagesCompacted:]
  -[MFLibraryStore hasCompleteDataForMimePart:]
  -[MFLibraryStore storeData:forMimePart:isComplete:]
  -[MFLibraryStore initWithCriterion:mailbox:readOnly:]
  -[MFLibraryStore addCountsForMessages:shouldUpdateUnreadCount:]
  -[MFLibraryStore _addInvocationToQueue:]
  -[MFLibraryStore openSynchronously]
  -[MFLibraryStore allNonDeletedCountIncludingServerSearch:andThreadSearch:]
  -[MFLibraryStore copyOfMessagesInRange:options:generation:]
  -[MFLibraryStore copyOfMessagesInRange:options:]
  -[MFLibraryStore copyOfAllMessagesWithOptions:]
  -[MFLibraryStore copyOfAllMessages]
  -[MFLibraryStore copyMessagesMatchingCriterion:options:]
  -[MFLibraryStore copyMessagesWithRemoteIDs:options:inMailbox:]
  -[MFLibraryStore serverSearchResults]
  -[MFLibraryStore dateOfOldestNonIndexedNonSearchResultMessage]
  -[MFLibraryStore willFetchMessages]
  -[MFLibraryStore _fetchWindowMultiple]
  -[MFLibraryStore _fetchWindowMinimum]
  -[MFLibraryStore _calculateFetchWindowWithAdditionalMultiple:]
  -[MFLibraryStore invalidateFetchWindow]
  -[MFLibraryStore shouldGrowFetchWindow]
  -[MFLibraryStore fetchWindowCap]
  -[MFLibraryStore messageForMessageID:options:]
  -[MFLibraryStore filterMessagesByMembership:]
  -[MFLibraryStore handleMessagesAdded:earliestReceivedDate:]
  -[MFLibraryStore messagesWereAdded:earliestReceivedDate:]
  -[MFLibraryStore _memberMessagesWithCompactionNotification:]
  -[MFLibraryStore dataForMimePart:inRange:isComplete:downloadIfNecessary:didDownload:]
  -[MFLibraryStore dataForMimePart:inRange:isComplete:withConsumer:downloadIfNecessary:didDownload:]
  -[MFLibraryStore _copyDataFromMimePart:threshold:downloadIfNecessary:]
  -[MFLibraryStore fullBodyDataForMessage:andHeaderDataIfReadilyAvailable:isComplete:downloadIfNecessary:usePartDatas:didDownload:]
  -[MFLibraryStore fullBodyDataForMessage:andHeaderDataIfReadilyAvailable:isComplete:downloadIfNecessary:didDownload:]
  -[MFLibraryStore bodyDataForMessage:isComplete:isPartial:downloadIfNecessary:]
  -[MFLibraryStore deleteMessages:moveToTrash:]
  -[MFLibraryStore setFlagsFromDictionary:forMessages:]
  -[MFLibraryStore setFlagsLocallyFromDictionary:forMessages:]
  -[MFLibraryStore setNumberOfAttachments:isSigned:isEncrypted:forMessage:]
  -[MFLibraryStore compactMessages:]
  -[MFLibraryStore dataPathForMessage:part:]
  -[MFLibraryStore _setNeedsAutosave]
  -[MFLibraryStore serverUnreadOnlyOnServerCount]
  -[MFLibraryStore newObjectCache]
  -[MFLibraryStore _cachedBodyForMessage:valueIfNotPresent:]
  -[MFLibraryStore purgeMessages:]
  -[MFLibraryStore hasMessageForAccount:]
  -[MFLibraryStore earliestReceivedDate]
  -[MFLibraryStore setEarliestReceivedDate:]
  -[MFLibraryStore unreadCountMatchingCriterion:]
  -[MFLibraryStore initWithCriterion:]
  -[MFLibraryStore initWithMailboxUid:readOnly:]
  -[MFLibraryStore nonDeletedCountIncludingServerSearch:andThreadSearch:]
  -[MFLibraryStore messageWithLibraryID:options:]
  -[MFLibraryStore copyOfAllMessagesForBodyLoadingFromRowID:limit:]
  -[MFLibraryStore mutableCopyOfAllMessages]
  -[MFLibraryStore copyMessagesMatchingText:options:]
  -[MFLibraryStore copyMessagesWithRemoteIDs:options:]
  -[MFLibraryStore dateOfNewestNonSearchResultMessage]
  -[MFLibraryStore deleteBodyDataForMessage:]
  -[MFLibraryStore indexOfMessage:]
  -[MFLibraryStore setFlagsForAllMessagesFromDictionary:]
  -[MFLibraryStore appendMessages:unsuccessfulOnes:newMessageIDs:newMessages:flagsToSet:]
  -[MFLibraryStore writeUpdatedMessageDataToDisk]
  -[MFLibraryStore updateUserInfoToLatestValues]
  -[MFLibraryStore purgeMessagesBeyondLimit:keepingMessage:]


LocalAccount : MailAccount
  // class methods
  +[LocalAccount localAccount]
  +[LocalAccount accountTypeIdentifier]
  +[LocalAccount accountTypeString]
  +[LocalAccount defaultPathNameForAccountWithHostname:username:]
  +[LocalAccount csAccountTypeString]

  // instance methods
  -[LocalAccount setHostname:]
  -[LocalAccount setUsername:]
  -[LocalAccount isActive]
  -[LocalAccount uniqueId]
  -[LocalAccount setPassword:]
  -[LocalAccount displayName]
  -[LocalAccount canGoOffline]
  -[LocalAccount initWithLibrary:persistentAccount:]
  -[LocalAccount supportsArchiving]
  -[LocalAccount resetSpecialMailboxes]
  -[LocalAccount _copyMailboxUidWithParent:name:attributes:existingMailboxUid:dictionary:]
  -[LocalAccount primaryMailboxUid]
  -[LocalAccount _URLScheme]
  -[LocalAccount storeClass]
  -[LocalAccount _synchronouslyLoadListingForParent:]
  -[LocalAccount renameMailbox:newName:parent:]
  -[LocalAccount mailboxPathExtension]
  -[LocalAccount _infoForMatchingURL:]
  -[LocalAccount pushedMailboxUids]
  -[LocalAccount canFetch]
  -[LocalAccount deleteInPlaceForMailbox:]
  -[LocalAccount supportsAppend]
  -[LocalAccount _setChildren:forMailboxUid:]
  -[LocalAccount _shouldConfigureMailboxCache]
  -[LocalAccount supportsPurge]
  -[LocalAccount mailboxUidForFileSystemPath:]
  -[LocalAccount transientDraftsFolderShouldCreate:]
  -[LocalAccount transientDraftsFolder]


_MFRootlessMailboxUid : MFMailboxUid
  // instance methods
  -[_MFRootlessMailboxUid displayName]
  -[_MFRootlessMailboxUid fullPath]
  -[_MFRootlessMailboxUid storeForMailboxUid:]
  -[_MFRootlessMailboxUid tildeAbbreviatedPath]


MailAccount : MFAccount
 @property  BOOL shouldArchiveByDefault
 @property  BOOL sourceIsManaged
 @property  NSString *mailboxPathExtension
 @property  BOOL supportsFastRemoteBodySearch
 @property  BOOL needsRemoteSearchResultsVerification

  // class methods
  +[MailAccount reloadAccounts]
  +[MailAccount mailAccounts]
  +[MailAccount initialize]
  +[MailAccount activeAccounts]
  +[MailAccount defaultMailAccountForDelivery]
  +[MailAccount newAccountWithDictionary:]
  +[MailAccount existingAccountForUniqueID:]
  +[MailAccount isPredefinedAccountType]
  +[MailAccount predefinedValueForKey:]
  +[MailAccount defaultPathNameForAccountWithHostname:username:]
  +[MailAccount usernameIsEmailAddress]
  +[MailAccount primaryDeliveryAccountIsDynamic]
  +[MailAccount allMailboxUids]
  +[MailAccount csAccountTypeString]
  +[MailAccount accountWithUniqueId:]
  +[MailAccount disableMailboxListingNotifications]
  +[MailAccount enableMailboxListingNotifications:]
  +[MailAccount _addAccountToSortedPaths:]
  +[MailAccount _setupSortedPathsForAccounts:]
  +[MailAccount mailAccountsWithError:]
  +[MailAccount lastMailAccountsReloadDate]
  +[MailAccount setMailAccounts:]
  +[MailAccount setMailAccounts:saveIfChanged:]
  +[MailAccount _setMailAccounts:saveIfChanged:alreadyLocked:]
  +[MailAccount _removeAccountFromSortedPaths:]
  +[MailAccount activeAccountsWithError:]
  +[MailAccount existingAccountWithType:hostname:username:]
  +[MailAccount resetMailboxTimers]
  +[MailAccount _accountContainingEmailAddress:matchingAddress:fullUserName:includingInactive:]
  +[MailAccount accountContainingEmailAddress:includingInactive:]
  +[MailAccount accountContainingEmailAddress:]
  +[MailAccount accountForHeaders:message:includingInactive:]
  +[MailAccount accountThatMessageIsFrom:includingInactive:]
  +[MailAccount accountThatMessageIsFrom:]
  +[MailAccount addressesThatReceivedMessage:]
  +[MailAccount outboxMailboxUid]
  +[MailAccount outboxMessageStore:]
  +[MailAccount allActivePrimaryMailboxUids]
  +[MailAccount accountWithPath:]
  +[MailAccount newAccountWithPath:]
  +[MailAccount defaultAccountDirectory]
  +[MailAccount defaultMailAccountForDeliveryExcludingRestricted]
  +[MailAccount _defaultMailAccountForDeliveryIncludingRestricted:]
  +[MailAccount defaultDeliveryAccount]
  +[MailAccount saveStateForAllAccounts]
  +[MailAccount mailboxUidForFileSystemPath:create:]
  +[MailAccount accountWithURL:]
  +[MailAccount infoForURL:]
  +[MailAccount URLForInfo:]
  +[MailAccount accountWithURLString:]
  +[MailAccount mailboxUidFromActiveAccountsForURL:]
  +[MailAccount updateEmailAliasesForActiveAccounts]
  +[MailAccount standardAccountClass:valueForKey:]
  +[MailAccount getConfigurationFromServerForEmail:]
  +[MailAccount _accountWithPath:]
  +[MailAccount _setOutboxMailboxUid:]
  +[MailAccount canMoveMessagesFromAccount:toAccount:]
  +[MailAccount _removeLookAsideValuesNotInAccountList:]
  +[MailAccount setMailAccountLoadOptions:]
  +[MailAccount mailboxListingNotificationAreEnabled]
  +[MailAccount _loadAllAccountsWithOptions:error:]
  +[MailAccount lastMailAccountsReloadError]
  +[MailAccount purgableAccounts]
  +[MailAccount purgableAccountsWithError:]
  +[MailAccount updateAutoFetchSettings]
  +[MailAccount allEmailAddressesIncludingFullUserName:includeReceiveAliases:]
  +[MailAccount accountUsingHeadersFromMessage:]
  +[MailAccount defaultPathForAccountWithHostname:username:]
  +[MailAccount setGlobalPathForAccounts:]
  +[MailAccount synchronouslyEmptyMailboxUidType:inAccounts:]
  +[MailAccount setDataclassesConsideredActive:]

  // instance methods
  -[MailAccount setCachePolicy:]
  -[MailAccount cachePolicy]
  -[MailAccount saveState]
  -[MailAccount setHostname:]
  -[MailAccount setPortNumber:]
  -[MailAccount initWithPath:]
  -[MailAccount setUsername:]
  -[MailAccount systemWillSleep]
  -[MailAccount library]
  -[MailAccount path]
  -[MailAccount setConnectionError:]
  -[MailAccount setLibrary:]
  -[MailAccount setEmailAddresses:]
  -[MailAccount dealloc]
  -[MailAccount isActive]
  -[MailAccount emailAddresses]
  -[MailAccount setPath:]
  -[MailAccount systemDidWake]
  -[MailAccount deleteMailbox:]
  -[MailAccount connectionError]
  -[MailAccount _setPath:]
  -[MailAccount defaultEmailAddress]
  -[MailAccount setActive:]
  -[MailAccount startListeningForNotifications]
  -[MailAccount libraryID]
  -[MailAccount invalidate]
  -[MailAccount loggingIdentifier]
  -[MailAccount displayName]
  -[MailAccount setDefaultEmailAddress:]
  -[MailAccount renameMailbox:newName:]
  -[MailAccount URLString]
  -[MailAccount fullUserName]
  -[MailAccount sourceIsManaged]
  -[MailAccount _didBecomeActive:]
  -[MailAccount statisticsKind]
  -[MailAccount initWithPersistentAccount:]
  -[MailAccount persistentAccountDidChange:previousAccount:]
  -[MailAccount _setAccountProperties:]
  -[MailAccount setValueInAccountProperties:forKey:]
  -[MailAccount supportsMailDrop]
  -[MailAccount releaseAllConnections]
  -[MailAccount releaseAllForcedConnections]
  -[MailAccount deliveryAccount]
  -[MailAccount setDeliveryAccount:]
  -[MailAccount _defaultSpecialMailboxNameForType:]
  -[MailAccount iconString]
  -[MailAccount derivesDeliveryAccountInfoFromMailAccount]
  -[MailAccount URLForMessage:]
  -[MailAccount _deliveryAccountCreateIfNeeded:]
  -[MailAccount initWithLibrary:persistentAccount:]
  -[MailAccount canReceiveNewMailNotifications]
  -[MailAccount firstEmailAddress]
  -[MailAccount isEquivalentTo:hostname:username:]
  -[MailAccount uniqueIdForPersistentConnection]
  -[MailAccount displayUsername]
  -[MailAccount emailAddressesAndAliasesList]
  -[MailAccount fromEmailAddresses]
  -[MailAccount fromEmailAddressesIncludingDisabled]
  -[MailAccount setEnabled:forEmailAddress:]
  -[MailAccount pushUpdateForAliasData]
  -[MailAccount supportsArchiving]
  -[MailAccount allMailboxUids]
  -[MailAccount resetSpecialMailboxes]
  -[MailAccount emptyFrequencyForMailboxType:]
  -[MailAccount _copyMailboxUidWithParent:name:attributes:existingMailboxUid:dictionary:]
  -[MailAccount _newMailboxWithParent:name:attributes:dictionary:withCreationOption:]
  -[MailAccount _renameMailbox:newName:parent:]
  -[MailAccount newMailboxNameIsAcceptable:reasonForFailure:]
  -[MailAccount primaryMailboxUid]
  -[MailAccount _URLScheme]
  -[MailAccount allMailMailboxUid]
  -[MailAccount fetchMailboxList]
  -[MailAccount storeClass]
  -[MailAccount _copyMailboxWithParent:name:attributes:dictionary:]
  -[MailAccount _synchronouslyLoadListingForParent:]
  -[MailAccount renameMailbox:newName:parent:]
  -[MailAccount mailboxPathExtension]
  -[MailAccount supportsRemoteAppend]
  -[MailAccount supportsMailboxEditing]
  -[MailAccount _infoForMatchingURL:]
  -[MailAccount mailboxUidForInfo:]
  -[MailAccount _specialMailboxUidWithType:create:]
  -[MailAccount isMailboxLocalForType:]
  -[MailAccount supportsMessageFlagging]
  -[MailAccount supportsThreadOperations]
  -[MailAccount shouldArchiveByDefault]
  -[MailAccount shouldFetchAgainWithError:foregroundRequest:]
  -[MailAccount uniqueServerIdForMessage:]
  -[MailAccount reconstituteOrphanedMeetingInMessage:]
  -[MailAccount unactionableInvitationICSRepresentationInMessage:summary:]
  -[MailAccount meetingStorePersistentID]
  -[MailAccount stopListeningForNotifications]
  -[MailAccount shouldRestoreMessagesAfterFailedDelete]
  -[MailAccount supportsUserPushedMailboxes]
  -[MailAccount pushedMailboxUids]
  -[MailAccount changePushedMailboxUidsAdded:deleted:]
  -[MailAccount signingIdentityPersistentReferenceForAddress:]
  -[MailAccount setSigningIdentityPersistentReference:forAddress:]
  -[MailAccount encryptionIdentityPersistentReferenceForAddress:]
  -[MailAccount setEncryptionIdentityPersistentReference:forAddress:]
  -[MailAccount secureCompositionSigningPolicyForAddress:]
  -[MailAccount secureCompositionEncryptionPolicyForAddress:]
  -[MailAccount copyDataForRemoteEncryptionCertificatesForAddress:error:]
  -[MailAccount restrictedFromTransferingMessagesToOtherAccounts]
  -[MailAccount restrictedFromSendingExternally]
  -[MailAccount restrictedFromSyncingRecents]
  -[MailAccount fetchLimits]
  -[MailAccount hasEnoughInformationForEasySetup]
  -[MailAccount archiveDestinationForMailbox:]
  -[MailAccount displayNameUsingSpecialNamesForMailboxUid:]
  -[MailAccount _childOfMailbox:withComponentName:]
  -[MailAccount _deleteHook]
  -[MailAccount supportsFastRemoteBodySearch]
  -[MailAccount persistentNameForMailbox:]
  -[MailAccount saveSentFolder]
  -[MailAccount _readCustomInfoFromMailboxCache:]
  -[MailAccount _writeCustomInfoToMailboxCache:]
  -[MailAccount _setSpecialMailbox:forType:]
  -[MailAccount isSpecialMailbox:]
  -[MailAccount _mailboxesWereRemovedFromTree:withFileSystemPaths:]
  -[MailAccount canMailboxBeDeleted:]
  -[MailAccount deleteMessagesFromMailboxUid:olderThanNumberOfDays:]
  -[MailAccount mailboxUidForRelativePath:create:]
  -[MailAccount canFetch]
  -[MailAccount deleteInPlaceForAllMailboxes]
  -[MailAccount deleteInPlaceForMailbox:]
  -[MailAccount resetMailboxTimer]
  -[MailAccount _pathComponentForUidName:]
  -[MailAccount _uidNameForPathComponent:]
  -[MailAccount _mailboxPathPrefix]
  -[MailAccount supportsAppend]
  -[MailAccount _registerPushNotificationPrefix:forMailboxNames:]
  -[MailAccount transferNotificationSessionToAccount:]
  -[MailAccount _setChildren:forMailboxUid:]
  -[MailAccount mailboxUidForRelativePath:create:withOption:]
  -[MailAccount _shouldConfigureMailboxCache]
  -[MailAccount supportsPurge]
  -[MailAccount storeForMailboxUid:]
  -[MailAccount deliveryAccountWillBeRemoved:]
  -[MailAccount isUsernameEquivalentTo:]
  -[MailAccount _invalidateCachedMailboxen]
  -[MailAccount initWithLibrary:path:]
  -[MailAccount setFullUserName:]
  -[MailAccount isPrimaryDeliveryAccountDisabled]
  -[MailAccount setPrimaryDeliveryAccountDisabled:]
  -[MailAccount deliveryAccountAlternates]
  -[MailAccount setDeliveryAccountAlternates:]
  -[MailAccount canUseDeliveryAccount:]
  -[MailAccount setCanUseCarrierDeliveryFallback:]
  -[MailAccount canUseCarrierDeliveryFallback]
  -[MailAccount emailAddressesDictionary]
  -[MailAccount receiveEmailAliasAddresses]
  -[MailAccount setReceiveEmailAliasAddresses:]
  -[MailAccount lastEmailAliasesSyncDate]
  -[MailAccount setLastEmailAliasesSyncDate:]
  -[MailAccount emailAddressesAndAliases]
  -[MailAccount _invalidateAndDeleteAccountData:]
  -[MailAccount _asynchronouslyInvalidateAndDeleteAccountData:]
  -[MailAccount invalidateAndDelete]
  -[MailAccount _synchronizeMailboxListWithFileSystem]
  -[MailAccount forceFetchMailboxList]
  -[MailAccount rootMailboxUid]
  -[MailAccount deleteDeliveryAccountIfNeeded]
  -[MailAccount deliveryAccountInUseByOtherAccounts:]
  -[MailAccount mailboxUidOfType:createIfNeeded:]
  -[MailAccount specialMailboxNameForType:]
  -[MailAccount mailboxesForSuggestionsLostMessageSearchPriorToTime:]
  -[MailAccount transferDisabledMailboxUids]
  -[MailAccount setMailboxUid:forMailboxType:]
  -[MailAccount _setEmptyFrequency:forKey:]
  -[MailAccount setEmptyFrequency:forMailboxType:]
  -[MailAccount _resetSpecialMailboxes]
  -[MailAccount canCreateNewMailboxes]
  -[MailAccount canMailboxBeRenamed:]
  -[MailAccount moveMailbox:intoParent:]
  -[MailAccount _resetAllMailboxURLs:]
  -[MailAccount resetMailboxURLs]
  -[MailAccount isHostnameEquivalentTo:]
  -[MailAccount isAccountClassEquivalentTo:]
  -[MailAccount storeClassForMailbox:]
  -[MailAccount mailboxUidForURL:]
  -[MailAccount ownsMailboxUidWithURL:]
  -[MailAccount emptyTrash]
  -[MailAccount setupLibrary]
  -[MailAccount supportsSyncingReadState]
  -[MailAccount willPerformActionForChokePoint:coalescePoint:result:]
  -[MailAccount didFinishActionForChokePoint:coalescePoint:withResult:]
  -[MailAccount isActiveWithPersistentAccount:]
  -[MailAccount _emptyFrequencyForKey:defaultValue:]
  -[MailAccount _loadMailboxListingIntoCache:attributes:children:parent:]
  -[MailAccount mailboxCachePath]
  -[MailAccount setMailboxCachePath:]
  -[MailAccount _loadEntriesFromFileSystemPath:parent:]
  -[MailAccount _writeMailboxCacheWithPrejudice:]
  -[MailAccount powerAssertionIdentifierWithPrefix:]
  -[MailAccount _cachedSpecialMailboxOfType:]
  -[MailAccount _assignSpecialMailboxToAppropriateIvar:forType:]
  -[MailAccount _setSpecialMailboxName:forType:]
  -[MailAccount _canEmptyMessagesFromMailboxUid:]
  -[MailAccount _shouldLogDeleteActivity]
  -[MailAccount _URLForInfo:]
  -[MailAccount _cleanInboxDuplication:]
  -[MailAccount newMailboxWithParent:name:]
  -[MailAccount _localMailboxNameForType:usingDisplayName:]
  -[MailAccount allLocalMailboxUids]
  -[MailAccount valueInAccountLookAsidePropertiesForKey:]
  -[MailAccount setValueInAccountLookAsideProperties:forKey:]
  -[MailAccount _setValueInAccountLookAsideProperties:forKey:subKey:]
  -[MailAccount customSignature]
  -[MailAccount setCustomSignature:]
  -[MailAccount preventArchiveForMailbox:]
  -[MailAccount canArchiveForMailbox:]
  -[MailAccount tildeAbbreviatedPath]
  -[MailAccount accountDidLoad]
  -[MailAccount setLastKnownHostname:]
  -[MailAccount receiveEmailAliasAddressesList]
  -[MailAccount nowWouldBeAGoodTimeToStartBackgroundSynchronization]
  -[MailAccount canAppendMessages]
  -[MailAccount shouldExpungeMessagesOnDelete]
  -[MailAccount displayNameForMailboxUid:]
  -[MailAccount updateEmailAliases]
  -[MailAccount canForwardWithoutDownload]
  -[MailAccount shouldAppearInMailSettings]
  -[MailAccount archiveSentMessages]
  -[MailAccount needsRemoteSearchResultsVerification]
  -[MailAccount addUserFocusMailbox:]
  -[MailAccount removeUserFocusMailbox:]
  -[MailAccount _deleteMailbox:]
  -[MailAccount _specialMailboxIvarOfType:]
  -[MailAccount moveMessages:fromMailbox:toMailbox:markAsRead:]
  -[MailAccount shouldFetchBodiesWhenMovingToTrash]
  -[MailAccount secureMIMEEnabled]
  -[MailAccount perMessageEncryptionEnabled]
  -[MailAccount unsupportedContinuationTypes]
  -[MailAccount supportsContinuationType:]


MFMailboxUid : NSObject <NSCopying, EFPubliclyDescribable>
 @property  MFInvocationQueue *attachmentDownloadQueue
 @property  NSArray *extraAttributes
 @property  unsigned long suggestionsLostMessageSearchResultCount
 @property  double suggestionsLostMessageSearchTimestamp
 @property  NSString *ef_publicDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MFMailboxUid fileURLForMailboxURL:]
  +[MFMailboxUid specialNameForType:]
  +[MFMailboxUid isStandardizedMailboxUidType:]
  +[MFMailboxUid isOutgoingMailboxType:]
  +[MFMailboxUid isDraftsMailboxType:]
  +[MFMailboxUid isSentMailboxType:]
  +[MFMailboxUid typeIsValidTransferDestination:]

  // instance methods
  -[MFMailboxUid children]
  -[MFMailboxUid isContainer]
  -[MFMailboxUid ef_publicDescription]
  -[MFMailboxUid account]
  -[MFMailboxUid initWithAccount:]
  -[MFMailboxUid setParent:]
  -[MFMailboxUid setAttributes:]
  -[MFMailboxUid attributes]
  -[MFMailboxUid store]
  -[MFMailboxUid isVisible]
  -[MFMailboxUid extraAttributes]
  -[MFMailboxUid type]
  -[MFMailboxUid setExtraAttributes:]
  -[MFMailboxUid criterion]
  -[MFMailboxUid setChildren:]
  -[MFMailboxUid dealloc]
  -[MFMailboxUid isValid]
  -[MFMailboxUid uniqueId]
  -[MFMailboxUid setCriterion:]
  -[MFMailboxUid isShared]
  -[MFMailboxUid _dictionaryRepresentation]
  -[MFMailboxUid setType:]
  -[MFMailboxUid dictionaryRepresentation]
  -[MFMailboxUid setName:]
  -[MFMailboxUid copyWithZone:]
  -[MFMailboxUid invalidate]
  -[MFMailboxUid name]
  -[MFMailboxUid _loadUserInfo]
  -[MFMailboxUid displayName]
  -[MFMailboxUid URL]
  -[MFMailboxUid parent]
  -[MFMailboxUid setUserInfoObject:forKey:]
  -[MFMailboxUid URLString]
  -[MFMailboxUid init]
  -[MFMailboxUid unreadCount]
  -[MFMailboxUid removeChild:]
  -[MFMailboxUid numberOfChildren]
  -[MFMailboxUid fullPath]
  -[MFMailboxUid saveUserInfo]
  -[MFMailboxUid userInfoObjectForKey:]
  -[MFMailboxUid hasChildren]
  -[MFMailboxUid childAtIndex:]
  -[MFMailboxUid _privacySafeDescription]
  -[MFMailboxUid shouldRestoreMessagesAfterFailedDelete]
  -[MFMailboxUid initWithName:attributes:forAccount:extraAttributes:]
  -[MFMailboxUid mergeWithUserInfo:]
  -[MFMailboxUid mutableDictionaryRepresentation]
  -[MFMailboxUid flushCriteria]
  -[MFMailboxUid mailboxID]
  -[MFMailboxUid serverUnreadOnlyOnServerCount]
  -[MFMailboxUid rootMailbox]
  -[MFMailboxUid URLStringNonNil]
  -[MFMailboxUid fullPathNonNil]
  -[MFMailboxUid _initWithName:attributes:forAccount:]
  -[MFMailboxUid displayNameUsingSpecialNames]
  -[MFMailboxUid accountDisplayName]
  -[MFMailboxUid unreadCountMatchingCriterion:]
  -[MFMailboxUid updateMostRecentStatusCount:]
  -[MFMailboxUid shouldUseNonDeletedForUnreadCount]
  -[MFMailboxUid _mutableChildren]
  -[MFMailboxUid childEnumerator]
  -[MFMailboxUid childEnumeratorIncludingHiddenChildren:]
  -[MFMailboxUid depthFirstEnumerator]
  -[MFMailboxUid numberOfDescendants]
  -[MFMailboxUid indexOfChild:]
  -[MFMailboxUid childWithName:]
  -[MFMailboxUid childWithExtraAttribute:]
  -[MFMailboxUid descendantWithExtraAttribute:]
  -[MFMailboxUid mutableCopyOfChildren]
  -[MFMailboxUid sortChildren]
  -[MFMailboxUid setRepresentedAccount:]
  -[MFMailboxUid representedAccount]
  -[MFMailboxUid topMailbox]
  -[MFMailboxUid isStore]
  -[MFMailboxUid isStandardizedMailboxUid]
  -[MFMailboxUid isSpecialMailboxUid]
  -[MFMailboxUid isSentMailboxUid]
  -[MFMailboxUid isOutgoingMailboxUid]
  -[MFMailboxUid isNotesMailboxUid]
  -[MFMailboxUid accountRelativePath]
  -[MFMailboxUid realFullPath]
  -[MFMailboxUid pathRelativeToMailbox:]
  -[MFMailboxUid pathRelativeToMailboxForDisplay:]
  -[MFMailboxUid oldURLString]
  -[MFMailboxUid compareWithMailboxUid:]
  -[MFMailboxUid indexToInsertChildMailboxUid:]
  -[MFMailboxUid isDescendantOfMailbox:]
  -[MFMailboxUid userInfoBoolForKey:]
  -[MFMailboxUid setUserInfoBool:forKey:]
  -[MFMailboxUid userInfoDictionary]
  -[MFMailboxUid setUserInfoWithDictionary:]
  -[MFMailboxUid userInfoForSerialization]
  -[MFMailboxUid ancestralAccount]
  -[MFMailboxUid alwaysWriteFullMessageFile]
  -[MFMailboxUid addToPostOrderTraversal:]
  -[MFMailboxUid suggestionsLostMessageSearchResultCount]
  -[MFMailboxUid suggestionsLostMessageSearchTimestamp]
  -[MFMailboxUid updateSuggestionsLostMessageSearchResultCount:]
  -[MFMailboxUid attachmentDownloadQueue]
  -[MFMailboxUid tildeAbbreviatedPath]
  -[MFMailboxUid nonDeletedCount]
  -[MFMailboxUid statusCountDelta]
  -[MFMailboxUid URLStringWithAccount:]
  -[MFMailboxUid lastViewedMessageID]
  -[MFMailboxUid lastViewedMessageDate]
  -[MFMailboxUid setLastViewedMessageID:]


_MFMailboxUidEnumerator : NSEnumerator
  // instance methods
  -[_MFMailboxUidEnumerator dealloc]
  -[_MFMailboxUidEnumerator initWithMailbox:]
  -[_MFMailboxUidEnumerator nextObject]


_MFMailboxUidChildrenEnumerator : NSEnumerator
  // instance methods
  -[_MFMailboxUidChildrenEnumerator dealloc]
  -[_MFMailboxUidChildrenEnumerator nextObject]
  -[_MFMailboxUidChildrenEnumerator _initWithMailbox:includeHiddenChildren:]


MFMailDelivery : NSObject
 @property  NSDictionary *compositionSpecification
 @property  unsigned long conversationFlags
 @property  BOOL isUserRequested

  // class methods
  +[MFMailDelivery newWithMessage:]
  +[MFMailDelivery newWithHeaders:mixedContent:textPartsAreHTML:]
  +[MFMailDelivery deliverMessage:]
  +[MFMailDelivery newWithHeaders:HTML:plainTextAlternative:other:charsets:]

  // instance methods
  -[MFMailDelivery account]
  -[MFMailDelivery setAccount:]
  -[MFMailDelivery setDelegate:]
  -[MFMailDelivery delegate]
  -[MFMailDelivery dealloc]
  -[MFMailDelivery archive]
  -[MFMailDelivery initWithMessage:]
  -[MFMailDelivery message]
  -[MFMailDelivery init]
  -[MFMailDelivery isUserRequested]
  -[MFMailDelivery deliveryStatus]
  -[MFMailDelivery setIsUserRequested:]
  -[MFMailDelivery newMessageWriter]
  -[MFMailDelivery deliverSynchronously]
  -[MFMailDelivery conversationFlags]
  -[MFMailDelivery setConversationFlags:]
  -[MFMailDelivery initWithHeaders:mixedContent:textPartsAreHTML:]
  -[MFMailDelivery archiveAccount]
  -[MFMailDelivery setArchiveAccount:]
  -[MFMailDelivery deliveryResult]
  -[MFMailDelivery originalHeaders]
  -[MFMailDelivery headersForDelivery]
  -[MFMailDelivery deliverAsynchronously]
  -[MFMailDelivery deliverMessageData:toRecipients:]
  -[MFMailDelivery setCellDataOnly:]
  -[MFMailDelivery compositionSpecification]
  -[MFMailDelivery setCompositionSpecification:]
  -[MFMailDelivery initWithHeaders:HTML:plainTextAlternative:other:charsets:]
  -[MFMailDelivery shouldSignMessage]
  -[MFMailDelivery shouldEncryptMessage]


MFMailDataMessageStore : MFDataMessageStore
  // class methods
  +[MFMailDataMessageStore classForMimePart]


MFMailMessage : MFMessage <MFBaseMessage, EFPubliclyDescribable>
 @property  unsigned int uid
 @property  unsigned int dateReceivedInterval
 @property  unsigned int dateSentInterval
 @property  long long conversationHash
 @property  unsigned int mailboxID
 @property  long long messageIDHash
 @property  BOOL flagged
 @property  BOOL read
 @property  BOOL deleted
 @property  BOOL senderVIP
 @property  BOOL knownToHaveAttachments
 @property  BOOL libraryMessage
 @property  unsigned int libraryID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  MFMailboxUid *mailbox
 @property  unsigned long modSequenceNumber
 @property  BOOL shouldUseMailDrop
 @property  unsigned long messageFlags
 @property  NSString *ef_publicDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MFMailMessage forwardedMessagePrefixWithSpacer:]
  +[MFMailMessage dataMessageStoreToUse]
  +[MFMailMessage validatePriority:]
  +[MFMailMessage displayablePriorityForPriority:]
  +[MFMailMessage externalDataTypeIdentifiers]

  // instance methods
  -[MFMailMessage messageStore]
  -[MFMailMessage ef_publicDescription]
  -[MFMailMessage account]
  -[MFMailMessage setSummary:]
  -[MFMailMessage deleted]
  -[MFMailMessage dealloc]
  -[MFMailMessage libraryID]
  -[MFMailMessage priority]
  -[MFMailMessage URL]
  -[MFMailMessage mailbox]
  -[MFMailMessage read]
  -[MFMailMessage numberOfAttachments]
  -[MFMailMessage from]
  -[MFMailMessage answered]
  -[MFMailMessage junk]
  -[MFMailMessage flagged]
  -[MFMailMessage _privacySafeDescription]
  -[MFMailMessage loadCachedHeaderValuesFromHeaders:]
  -[MFMailMessage bestAlternativePart:]
  -[MFMailMessage listUnsubscribe]
  -[MFMailMessage conversationFlags]
  -[MFMailMessage originalMailboxURL]
  -[MFMailMessage setMessageFlagsWithoutCommitting:]
  -[MFMailMessage setMessageFlags:]
  -[MFMailMessage setMutableInfoFromMessage:]
  -[MFMailMessage markAsViewed]
  -[MFMailMessage markAsNotViewed]
  -[MFMailMessage markAsFlagged]
  -[MFMailMessage markAsNotFlagged]
  -[MFMailMessage markAsReplied]
  -[MFMailMessage markAsForwarded]
  -[MFMailMessage setConversationFlags:]
  -[MFMailMessage mailMessageStore]
  -[MFMailMessage modSequenceNumber]
  -[MFMailMessage setModSequenceNumber:]
  -[MFMailMessage messageFlags]
  -[MFMailMessage setPriorityFromHeaders:]
  -[MFMailMessage loadMeetingExternalID]
  -[MFMailMessage loadMeetingData]
  -[MFMailMessage loadMeetingMetadata]
  -[MFMailMessage remoteMailboxURL]
  -[MFMailMessage globalMessageURL]
  -[MFMailMessage shouldSetSummary]
  -[MFMailMessage externalConversationID]
  -[MFMailMessage bestAlternativePart]
  -[MFMailMessage isSearchResultWithBogusRemoteId]
  -[MFMailMessage conversationVIP]
  -[MFMailMessage conversationMuted]
  -[MFMailMessage conversationHash]
  -[MFMailMessage shouldUseMailDrop]
  -[MFMailMessage setShouldUseMailDrop:]
  -[MFMailMessage copyMessageInfo]
  -[MFMailMessage senderVIP]
  -[MFMailMessage isKnownToHaveAttachments]


MFMessageTransferResult : NSObject
 @property  unsigned long resultCode
 @property  NSArray *failedMessages
 @property  NSArray *transferedMessages

  // instance methods
  -[MFMessageTransferResult dealloc]
  -[MFMessageTransferResult resultCode]
  -[MFMessageTransferResult initWithResultCode:failedMessages:transferedMessage:]
  -[MFMessageTransferResult failedMessages]
  -[MFMessageTransferResult transferedMessages]


MFMailMessageStore : MFMessageStore
  // class methods
  +[MFMailMessageStore classForMimePart]
  +[MFMailMessageStore headersClass]
  +[MFMailMessageStore createEmptyStoreForPath:]
  +[MFMailMessageStore storeAtPathIsWritable:]
  +[MFMailMessageStore createEmptyStoreIfNeededForPath:]
  +[MFMailMessageStore copyMessages:toMailbox:markAsRead:deleteOriginals:isDeletion:]

  // instance methods
  -[MFMailMessageStore isReadOnly]
  -[MFMailMessageStore account]
  -[MFMailMessageStore growFetchWindow]
  -[MFMailMessageStore deleteMessagesOlderThanNumberOfDays:compact:]
  -[MFMailMessageStore setLibrary:]
  -[MFMailMessageStore isOpened]
  -[MFMailMessageStore status]
  -[MFMailMessageStore dealloc]
  -[MFMailMessageStore close]
  -[MFMailMessageStore messageIdRollCall:]
  -[MFMailMessageStore storeSearchResultMatchingCriterion:limit:offset:error:]
  -[MFMailMessageStore shouldArchive]
  -[MFMailMessageStore fetchMessagesWithMessageIDs:andSetFlags:]
  -[MFMailMessageStore displayName]
  -[MFMailMessageStore canFetchMessageIDs]
  -[MFMailMessageStore serverMessageCount]
  -[MFMailMessageStore totalCount]
  -[MFMailMessageStore canFetchSearchResults]
  -[MFMailMessageStore fetchNumMessages:preservingUID:options:]
  -[MFMailMessageStore updateServerUnreadCountClosingConnection:]
  -[MFMailMessageStore unreadCount]
  -[MFMailMessageStore didOpen]
  -[MFMailMessageStore fetchWindow]
  -[MFMailMessageStore supportsArchiving]
  -[MFMailMessageStore canCompact]
  -[MFMailMessageStore _fetchHeaderDataForMessage:downloadIfNecessary:]
  -[MFMailMessageStore allowsAppend]
  -[MFMailMessageStore doCompact]
  -[MFMailMessageStore messageForRemoteID:]
  -[MFMailMessageStore messageForRemoteID:inMailbox:]
  -[MFMailMessageStore _flushAllMessageData]
  -[MFMailMessageStore _setOrGetBody:forMessage:updateFlags:]
  -[MFMailMessageStore shouldDownloadBodyDataForMessage:]
  -[MFMailMessageStore storeData:forMimePart:isComplete:]
  -[MFMailMessageStore mailboxUid]
  -[MFMailMessageStore openSynchronously]
  -[MFMailMessageStore allNonDeletedCountIncludingServerSearch:andThreadSearch:]
  -[MFMailMessageStore copyOfAllMessagesWithOptions:]
  -[MFMailMessageStore copyOfAllMessages]
  -[MFMailMessageStore copyMessagesMatchingCriterion:options:]
  -[MFMailMessageStore copyMessagesWithRemoteIDs:options:inMailbox:]
  -[MFMailMessageStore invalidateFetchWindow]
  -[MFMailMessageStore hasMoreFetchableMessages]
  -[MFMailMessageStore shouldGrowFetchWindow]
  -[MFMailMessageStore fetchWindowCap]
  -[MFMailMessageStore fetchMobileSynchronously:]
  -[MFMailMessageStore fetchMobileSynchronously:preservingUID:options:]
  -[MFMailMessageStore storeSearchResultMatchingSearchText:criterion:limit:offset:error:]
  -[MFMailMessageStore messageForMessageID:options:]
  -[MFMailMessageStore loadMeetingExternalIDForMessage:]
  -[MFMailMessageStore loadMeetingDataForMessage:]
  -[MFMailMessageStore loadMeetingMetadataForMessage:]
  -[MFMailMessageStore messagesWereAdded:]
  -[MFMailMessageStore messagesWereAdded:earliestReceivedDate:]
  -[MFMailMessageStore messagesWillBeCompacted:]
  -[MFMailMessageStore messagesWereCompacted:]
  -[MFMailMessageStore messageFlagsDidChange:flags:]
  -[MFMailMessageStore allMessageFlagsDidChange:]
  -[MFMailMessageStore headerDataForMessage:downloadIfNecessary:]
  -[MFMailMessageStore shouldDeleteInPlace]
  -[MFMailMessageStore archiveDestination]
  -[MFMailMessageStore deleteMessages:moveToTrash:]
  -[MFMailMessageStore messagesWereDeleted:]
  -[MFMailMessageStore setFlag:state:forMessages:]
  -[MFMailMessageStore setFlagsFromDictionary:forMessages:]
  -[MFMailMessageStore setFlagsLocallyFromDictionary:forMessages:]
  -[MFMailMessageStore setNumberOfAttachments:isSigned:isEncrypted:forMessage:]
  -[MFMailMessageStore serverUnreadOnlyOnServerCount]
  -[MFMailMessageStore hasMessageForAccount:]
  -[MFMailMessageStore unreadCountMatchingCriterion:]
  -[MFMailMessageStore initWithMailboxUid:readOnly:]
  -[MFMailMessageStore nonDeletedCountIncludingServerSearch:andThreadSearch:]
  -[MFMailMessageStore copyOfAllMessagesForBodyLoadingFromRowID:limit:]
  -[MFMailMessageStore mutableCopyOfAllMessages]
  -[MFMailMessageStore copyMessagesMatchingText:options:]
  -[MFMailMessageStore copyMessagesWithRemoteIDs:options:]
  -[MFMailMessageStore indexOfMessage:]
  -[MFMailMessageStore setFlagsForAllMessagesFromDictionary:]
  -[MFMailMessageStore appendMessages:unsuccessfulOnes:newMessageIDs:newMessages:flagsToSet:]
  -[MFMailMessageStore writeUpdatedMessageDataToDisk]
  -[MFMailMessageStore purgeMessagesBeyondLimit:keepingMessage:]
  -[MFMailMessageStore lastViewedMessageDate]
  -[MFMailMessageStore openAsynchronously]
  -[MFMailMessageStore cancelOpen]
  -[MFMailMessageStore storePathRelativeToAccount]
  -[MFMailMessageStore isDrafts]
  -[MFMailMessageStore structureDidChange]
  -[MFMailMessageStore deletedCount:andSize:]
  -[MFMailMessageStore serverUnreadCount]
  -[MFMailMessageStore serverNonDeletedCount]
  -[MFMailMessageStore copyOfMessagesInRange:]
  -[MFMailMessageStore copyMessagesMatchingText:]
  -[MFMailMessageStore fetchMessagesMatchingCriterion:limit:]
  -[MFMailMessageStore remoteIDsFromUniqueRemoteIDs:]
  -[MFMailMessageStore fetchMessagesWithRemoteIDs:andSetFlags:]
  -[MFMailMessageStore _defaultRouterDestination]
  -[MFMailMessageStore finishRoutingMessages:routed:]
  -[MFMailMessageStore undeleteMessages:]
  -[MFMailMessageStore appendMessages:unsuccessfulOnes:newMessageIDs:newMessages:]
  -[MFMailMessageStore appendMessages:unsuccessfulOnes:newMessageIDs:]
  -[MFMailMessageStore appendMessages:unsuccessfulOnes:]
  -[MFMailMessageStore lastViewedMessageWithOptions:]
  -[MFMailMessageStore uniqueRemoteIDsForMessages:]
  -[MFMailMessageStore hasCachedDataForMimePart:]
  -[MFMailMessageStore willSetFlagsFromDictionary:forMessages:]
  -[MFMailMessageStore setFlagsCancelled:forMessages:]
  -[MFMailMessageStore setFlagForAllMessages:state:]
  -[MFMailMessageStore setPreferredEncoding:forMessage:]
  -[MFMailMessageStore shouldSetSummaryForMessage:]
  -[MFMailMessageStore _rebuildTableOfContentsSynchronously]
  -[MFMailMessageStore _setFlagsForMessages:]
  -[MFMailMessageStore updateMessages:updateNumberOfAttachments:]
  -[MFMailMessageStore _updateFlagForMessage:key:value:]
  -[MFMailMessageStore _shouldChangeComponentMessageFlags]
  -[MFMailMessageStore _shouldChangeComponentMessageFlagsForMessage:]


MFMailMimePart : MFMimePart
  // class methods
  +[MFMailMimePart attachmentClass]
  +[MFMailMimePart isRecognizedClassForContent:]

  // instance methods
  -[MFMailMimePart htmlContent]
  -[MFMailMimePart fileWrapperForcingDownload:]
  -[MFMailMimePart fileWrapperForDecodedObject:withFileData:]
  -[MFMailMimePart configureFileWrapper:]
  -[MFMailMimePart contentToOffset:resultOffset:downloadIfNecessary:asHTML:isComplete:]
  -[MFMailMimePart decodeTextRichtext]
  -[MFMailMimePart decodeTextEnriched]
  -[MFMailMimePart decodeTextHtml]
  -[MFMailMimePart htmlContentToOffset:resultOffset:downloadIfNecessary:]
  -[MFMailMimePart htmlContentToOffset:resultOffset:]
  -[MFMailMimePart decodeTextPlain]
  -[MFMailMimePart decodeTextCalendar]
  -[MFMailMimePart decodeMultipartAppledouble]
  -[MFMailMimePart storeData:inMessage:isComplete:]
  -[MFMailMimePart _shouldContinueDecodingProcess]
  -[MFMailMimePart decodeMessageDelivery_status]
  -[MFMailMimePart decodeMessageRfc822]
  -[MFMailMimePart decodeMessagePartial]
  -[MFMailMimePart decodeMessageExternal_body]


MFMailMimeTextAttachment : MFMimeTextAttachment
  // instance methods
  -[MFMailMimeTextAttachment shouldDownloadAttachmentOnDisplay]


MFMessageCriterion : NSObject <NSCopying>
 @property  long long criterionType
 @property  NSString *criterionIdentifier
 @property  int qualifier
 @property  NSString *expression
 @property  NSIndexSet *libraryIdentifiers
 @property  BOOL preferFullTextSearch
 @property  BOOL useFlaggedForUnreadCount
 @property  BOOL includeRelatedMessages
 @property  BOOL expressionIsSanitized
 @property  BOOL includeRemoteBodyContent
 @property  NSString *name
 @property  NSArray *criteria

  // class methods
  +[MFMessageCriterion criteriaFromDefaultsArray:]
  +[MFMessageCriterion criteriaFromDefaultsArray:removingRecognizedKeys:]
  +[MFMessageCriterion defaultsArrayFromCriteria:]
  +[MFMessageCriterion criterionTypeForString:]
  +[MFMessageCriterion stringForCriterionType:]
  +[MFMessageCriterion expressionForDate:]
  +[MFMessageCriterion criterionForMailbox:]
  +[MFMessageCriterion criterionForMailboxURL:]
  +[MFMessageCriterion criterionForAccount:]
  +[MFMessageCriterion criterionExcludingMailboxes:]
  +[MFMessageCriterion messageIsDeletedCriterion:]
  +[MFMessageCriterion messageIsJournaledCriterion:]
  +[MFMessageCriterion criterionForNotDeletedConversationID:]
  +[MFMessageCriterion criterionForConversationID:]
  +[MFMessageCriterion criterionForLibraryID:]
  +[MFMessageCriterion messageIsServerSearchResultCriterion:]
  +[MFMessageCriterion threadNotifyMessageCriterion]
  +[MFMessageCriterion threadMuteMessageCriterion]
  +[MFMessageCriterion flaggedMessageCriterion]
  +[MFMessageCriterion unreadMessageCriterion]
  +[MFMessageCriterion readMessageCriterion]
  +[MFMessageCriterion includesMeCriterion]
  +[MFMessageCriterion toMeCriterion]
  +[MFMessageCriterion ccMeCriterion]
  +[MFMessageCriterion hasAttachmentsCriterion]
  +[MFMessageCriterion todayMessageCriterion]
  +[MFMessageCriterion criterionForDateReceivedOlderThanDate:]
  +[MFMessageCriterion notCriterionWithCriterion:]
  +[MFMessageCriterion andCompoundCriterionWithCriteria:]
  +[MFMessageCriterion orCompoundCriterionWithCriteria:]
  +[MFMessageCriterion _updateAddressComments:]
  +[MFMessageCriterion VIPSenderMessageCriterion]

  // instance methods
  -[MFMessageCriterion setExpression:]
  -[MFMessageCriterion expression]
  -[MFMessageCriterion setCriteria:]
  -[MFMessageCriterion initWithDictionary:]
  -[MFMessageCriterion dealloc]
  -[MFMessageCriterion criteria]
  -[MFMessageCriterion dictionaryRepresentation]
  -[MFMessageCriterion setName:]
  -[MFMessageCriterion copyWithZone:]
  -[MFMessageCriterion name]
  -[MFMessageCriterion isEqual:]
  -[MFMessageCriterion init]
  -[MFMessageCriterion qualifier]
  -[MFMessageCriterion setQualifier:]
  -[MFMessageCriterion libraryIdentifiers]
  -[MFMessageCriterion initWithType:qualifier:expression:]
  -[MFMessageCriterion allCriteriaMustBeSatisfied]
  -[MFMessageCriterion initWithCriterion:expression:]
  -[MFMessageCriterion initWithDictionary:andRemoveRecognizedKeysIfMutable:]
  -[MFMessageCriterion descriptionWithDepth:]
  -[MFMessageCriterion criterionType]
  -[MFMessageCriterion setCriterionType:]
  -[MFMessageCriterion criterionIdentifier]
  -[MFMessageCriterion setCriterionIdentifier:]
  -[MFMessageCriterion _qualifierString]
  -[MFMessageCriterion _headersRequiredForEvaluation]
  -[MFMessageCriterion _evaluateCompoundCriterion:]
  -[MFMessageCriterion _evaluateFlagCriterion:]
  -[MFMessageCriterion _evaluateHeaderCriterion:]
  -[MFMessageCriterion _evaluateSenderHeaderCriterion:]
  -[MFMessageCriterion _evaluatePartOfStructure:]
  -[MFMessageCriterion _evaluateAddressBookCriterion:]
  -[MFMessageCriterion _evaluateFullNameCriterion:]
  -[MFMessageCriterion _evaluateIsDigitallySignedCriterion:]
  -[MFMessageCriterion _evaluateIsEncryptedCriterion:]
  -[MFMessageCriterion _evaluatePriorityIsNormalCriterion:]
  -[MFMessageCriterion _evaluatePriorityIsHighCriterion:]
  -[MFMessageCriterion _evaluatePriorityIsLowCriterion:]
  -[MFMessageCriterion _evaluateAttachmentCriterion:]
  -[MFMessageCriterion _evaluateAccountCriterion:]
  -[MFMessageCriterion _evaluateAddressHistoryCriterion:]
  -[MFMessageCriterion _evaluateDateCriterion:]
  -[MFMessageCriterion _evaluateConversationIDCriterion:]
  -[MFMessageCriterion _evaluateMailboxCriterion:]
  -[MFMessageCriterion doesMessageSatisfyCriterion:]
  -[MFMessageCriterion messageRuleQualifierForString:]
  -[MFMessageCriterion stringForMessageRuleQualifier:]
  -[MFMessageCriterion setAllCriteriaMustBeSatisfied:]
  -[MFMessageCriterion dateUnits]
  -[MFMessageCriterion setDateUnits:]
  -[MFMessageCriterion dateIsRelative]
  -[MFMessageCriterion setDateIsRelative:]
  -[MFMessageCriterion dateFromExpression]
  -[MFMessageCriterion simplifyOnce]
  -[MFMessageCriterion simplifiedCriterion]
  -[MFMessageCriterion isVIPCriterion]
  -[MFMessageCriterion setLibraryIdentifiers:]
  -[MFMessageCriterion preferFullTextSearch]
  -[MFMessageCriterion setPreferFullTextSearch:]
  -[MFMessageCriterion useFlaggedForUnreadCount]
  -[MFMessageCriterion setUseFlaggedForUnreadCount:]
  -[MFMessageCriterion includeRelatedMessages]
  -[MFMessageCriterion setIncludeRelatedMessages:]
  -[MFMessageCriterion expressionIsSanitized]
  -[MFMessageCriterion setExpressionIsSanitized:]
  -[MFMessageCriterion includeRemoteBodyContent]
  -[MFMessageCriterion setIncludeRemoteBodyContent:]


_MFMessageFlags : NSObject <NSCoding>
  // instance methods
  -[_MFMessageFlags encodeWithCoder:]
  -[_MFMessageFlags initWithCoder:]


MFMessageLibrary : NSObject
  // instance methods
  -[MFMessageLibrary isBusy]
  -[MFMessageLibrary commit]
  -[MFMessageLibrary initWithPath:]
  -[MFMessageLibrary dataProvider]
  -[MFMessageLibrary shouldCancel]
  -[MFMessageLibrary deleteAccount:]
  -[MFMessageLibrary dealloc]
  -[MFMessageLibrary hasCompleteDataForMimePart:]
  -[MFMessageLibrary loadMeetingExternalIDForMessage:]
  -[MFMessageLibrary loadMeetingDataForMessage:]
  -[MFMessageLibrary loadMeetingMetadataForMessage:]
  -[MFMessageLibrary setFlagsFromDictionary:forMessages:]
  -[MFMessageLibrary setNumberOfAttachments:isSigned:isEncrypted:forMessage:]
  -[MFMessageLibrary compactMessages:]
  -[MFMessageLibrary dataPathForMessage:part:]
  -[MFMessageLibrary setFlags:forMessage:]
  -[MFMessageLibrary postOldFlags:newFlags:forMessage:]
  -[MFMessageLibrary postFlagsChangedForMessages:flags:oldFlagsByMessage:]
  -[MFMessageLibrary updateFlagsForMessagesInPlace:success:]
  -[MFMessageLibrary setFlagsFromDictionary:forMessagesInMailboxURLString:]
  -[MFMessageLibrary setMessage:isPartial:]
  -[MFMessageLibrary duplicateMessages:newRemoteIDs:forMailbox:setFlags:clearFlags:messageFlagsForMessages:createNewCacheFiles:]
  -[MFMessageLibrary updateAdditionalThreadingInfoForSentMessageWithHeaders:externalConversationID:]
  -[MFMessageLibrary updateThreadingInfoForMessage:fromHeaders:]
  -[MFMessageLibrary messagesForMailbox:olderThanNumberOfDays:]
  -[MFMessageLibrary serverSearchResultMessagesForMailbox:]
  -[MFMessageLibrary dateOfOldestNonSearchResultMessageInMailbox:]
  -[MFMessageLibrary dateOfOldestNonIndexedNonSearchResultMessageInMailbox:]
  -[MFMessageLibrary messagesWithSummariesForMailbox:range:]
  -[MFMessageLibrary orderedBatchOfMessagesEndingAtRowId:limit:success:]
  -[MFMessageLibrary unreadCountForMailbox:matchingCriterion:]
  -[MFMessageLibrary unreadCountForAggregatedMailboxes:matchingCriterion:]
  -[MFMessageLibrary unreadCountForAggregatedMailboxes:]
  -[MFMessageLibrary unreadCountForMailbox:]
  -[MFMessageLibrary attachmentCountForMailboxes:]
  -[MFMessageLibrary allNonDeleteCountForMailbox:includeServerSearchResults:includeThreadSearchResults:]
  -[MFMessageLibrary nonDeletedCountForMailbox:includeServerSearchResults:includeThreadSearchResults:]
  -[MFMessageLibrary nonDeletedCountForMailbox:]
  -[MFMessageLibrary nonDeletedCountForAggregatedMailboxes:includeServerSearchResults:includeThreadSearchResults:]
  -[MFMessageLibrary nonDeletedCountForAggregatedMailboxes:]
  -[MFMessageLibrary totalCountForMailbox:]
  -[MFMessageLibrary serverUnreadOnlyOnServerCountForMailbox:]
  -[MFMessageLibrary setServerUnreadOnlyOnServerCount:forMailbox:]
  -[MFMessageLibrary setLastSyncAndMostRecentStatusCount:forMailbox:]
  -[MFMessageLibrary mostRecentStatusCountForMailbox:]
  -[MFMessageLibrary setMostRecentStatusCount:forMailbox:]
  -[MFMessageLibrary messageWithRemoteID:inRemoteMailbox:]
  -[MFMessageLibrary copyMessagesWithRemoteIDs:options:inRemoteMailbox:]
  -[MFMessageLibrary sequenceIdentifierForMailbox:]
  -[MFMessageLibrary setSequenceIdentifier:forMailbox:]
  -[MFMessageLibrary sequenceIdentifierForMessagesWithRemoteIDs:inMailbox:]
  -[MFMessageLibrary setSequenceIdentifier:forMessageWithLibraryID:]
  -[MFMessageLibrary setSequenceIdentifier:forMessagesWithRemoteIDs:inMailbox:]
  -[MFMessageLibrary messageWithMessageID:options:inMailbox:]
  -[MFMessageLibrary messagesWithMessageIDHeader:]
  -[MFMessageLibrary messageWithLibraryID:options:inMailbox:]
  -[MFMessageLibrary urlForMailboxID:]
  -[MFMessageLibrary mailboxIDForURLString:]
  -[MFMessageLibrary mailboxUidForMessage:]
  -[MFMessageLibrary remoteStoreForMessage:]
  -[MFMessageLibrary accountForMessage:]
  -[MFMessageLibrary storedIntegerPropertyWithName:]
  -[MFMessageLibrary setStoredIntegerPropertyWithName:value:]
  -[MFMessageLibrary compactMessages:permanently:]
  -[MFMessageLibrary compactMailbox:]
  -[MFMessageLibrary renameMailboxes:to:]
  -[MFMessageLibrary deleteMailboxes:account:]
  -[MFMessageLibrary removeAllMessagesFromMailbox:removeMailbox:andNotify:]
  -[MFMessageLibrary dataPathForMessage:]
  -[MFMessageLibrary dataConsumerForMessage:part:]
  -[MFMessageLibrary dataConsumerForMessage:part:incomplete:]
  -[MFMessageLibrary dataConsumerForMessage:isPartial:]
  -[MFMessageLibrary dataConsumerForMessage:]
  -[MFMessageLibrary setData:forMessage:isPartial:]
  -[MFMessageLibrary setSummary:forMessage:]
  -[MFMessageLibrary bodyDataForMessage:andHeaderDataIfReadilyAvailable:]
  -[MFMessageLibrary bodyDataForMessage:andHeaderDataIfReadilyAvailable:isComplete:]
  -[MFMessageLibrary bodyDataForMessage:]
  -[MFMessageLibrary headerDataForMessage:]
  -[MFMessageLibrary fullBodyDataForMessage:andHeaderDataIfReadilyAvailable:]
  -[MFMessageLibrary dataForMimePart:isComplete:]
  -[MFMessageLibrary sendMessagesMatchingCriterion:to:options:range:]
  -[MFMessageLibrary sendMessagesMatchingCriterion:to:options:]
  -[MFMessageLibrary messagesMatchingCriterion:options:range:]
  -[MFMessageLibrary messagesMatchingCriterion:options:range:success:]
  -[MFMessageLibrary messagesMatchingCriterion:options:success:]
  -[MFMessageLibrary messagesMatchingCriterion:options:]
  -[MFMessageLibrary filterContiguousMessages:forCriterion:options:]
  -[MFMessageLibrary invalidateAccount:]
  -[MFMessageLibrary deletePOPUID:inMailbox:]
  -[MFMessageLibrary UIDsToDeleteInMailbox:]
  -[MFMessageLibrary allUIDsInMailbox:]
  -[MFMessageLibrary hiddenPOPUIDsInMailbox:]
  -[MFMessageLibrary closeDatabaseConnections]
  -[MFMessageLibrary flagsChangedForMessages:flags:oldFlagsByMessage:]
  -[MFMessageLibrary messagesNeedingSyncConfirmationForMailbox:]
  -[MFMessageLibrary dateOfNewestNonSearchResultMessageInMailbox:]
  -[MFMessageLibrary messagesWithoutSummariesForMailbox:]
  -[MFMessageLibrary messagesWithSummariesForMailbox:fromRowID:limit:]
  -[MFMessageLibrary messagesWithoutSummariesForMailbox:fromRowID:limit:]
  -[MFMessageLibrary deletedCountForMailbox:]
  -[MFMessageLibrary statusCountDeltaForMailbox:]
  -[MFMessageLibrary adjustLastSyncStatusCountBy:forMailbox:]
  -[MFMessageLibrary oldestMessageInMailbox:]
  -[MFMessageLibrary maximumRemoteIDForMailbox:]
  -[MFMessageLibrary minimumRemoteIDForMailbox:]
  -[MFMessageLibrary canProvideMinimumRemoteID]
  -[MFMessageLibrary getDetailsForMessagesWithRemoteIDInRange:fromMailbox:]
  -[MFMessageLibrary getDetailsForAllMessagesFromMailbox:]
  -[MFMessageLibrary getDetailsForMessages:absoluteBottom:topOfDesiredRange:range:fromMailbox:]
  -[MFMessageLibrary messageWithMessageID:inMailbox:]
  -[MFMessageLibrary updateMessage:withMetadata:]
  -[MFMessageLibrary metadataForMessage:ofClass:key:]
  -[MFMessageLibrary libraryExists]
  -[MFMessageLibrary deletedUIDsInMailbox:]
  -[MFMessageLibrary lockDBForWriting]
  -[MFMessageLibrary createLibraryIDForAccount:]
  -[MFMessageLibrary libraryIDForAccount:]
  -[MFMessageLibrary appendOfflineCacheOperation:forAccount:lastTemporaryID:]
  -[MFMessageLibrary markOfflineCacheOperationAsComplete:]
  -[MFMessageLibrary offlineCacheOperationsForAccount:lastTemporaryID:]
  -[MFMessageLibrary appendOfflineCacheReplayData:forAccountID:]
  -[MFMessageLibrary consumeOfflineCacheReplayDataForAccount:usingBlock:]
  -[MFMessageLibrary deleteOfflineCacheDataForAccount:]
  -[MFMessageLibrary setFlagsForMessages:mask:]
  -[MFMessageLibrary isMessageContentsLocallyAvailable:]
  -[MFMessageLibrary addMessages:withMailbox:fetchBodies:newMessagesByOldMessage:remoteIDs:setFlags:clearFlags:messageFlagsForMessages:copyFiles:addPOPUIDs:dataSectionsByMessage:]
  -[MFMessageLibrary deleteDataForMessage:]
  -[MFMessageLibrary addMessages:withMailbox:fetchBodies:newMessagesByOldMessage:]
  -[MFMessageLibrary setFlagsForMessages:]


MFBasicMessageDataSection : NSObject <MFMessageDataSection>
 @property  BOOL partial
 @property  BOOL complete
 @property  MFDataHolder *dataHolder
 @property  NSString *partName

  // instance methods
  -[MFBasicMessageDataSection isComplete]
  -[MFBasicMessageDataSection dealloc]
  -[MFBasicMessageDataSection setPartial:]
  -[MFBasicMessageDataSection setPartName:]
  -[MFBasicMessageDataSection setData:]
  -[MFBasicMessageDataSection partName]
  -[MFBasicMessageDataSection setComplete:]
  -[MFBasicMessageDataSection isPartial]
  -[MFBasicMessageDataSection dataHolder]
  -[MFBasicMessageDataSection setDataHolder:]


MFMessageSigner : NSObject
 @property  MFCertificateTrustInfo *signingCertificateTrustInfo
 @property  MFCertificateTrustInfo *encryptionCertificateTrustInfo
 @property  BOOL hasSeparateSigningAndEncryptionCertificates
 @property  MFError *error

  // instance methods
  -[MFMessageSigner error]
  -[MFMessageSigner dealloc]
  -[MFMessageSigner initWithSender:signingTrust:encryptionTrust:verification:]
  -[MFMessageSigner signingCertificateTrustInfo]
  -[MFMessageSigner encryptionCertificateTrustInfo]
  -[MFMessageSigner hasSeparateSigningAndEncryptionCertificates]


MFMessageWriter : NSObject
 @property  id delegate
 @property  NSDictionary *compositionSpecification
 @property  BOOL shouldWriteAttachmentPlaceholders

  // instance methods
  -[MFMessageWriter setDelegate:]
  -[MFMessageWriter delegate]
  -[MFMessageWriter dealloc]
  -[MFMessageWriter init]
  -[MFMessageWriter compositionSpecification]
  -[MFMessageWriter initWithCompositionSpecification:]
  -[MFMessageWriter appendDataForMimePart:toData:withPartData:]
  -[MFMessageWriter createMessageWithString:headers:]
  -[MFMessageWriter createMessageWithPlainTextDocumentsAndAttachments:headers:]
  -[MFMessageWriter createMessageWithHtmlString:plainTextAlternative:otherHtmlStringsAndAttachments:headers:]
  -[MFMessageWriter createMessageWithHtmlString:attachments:headers:]
  -[MFMessageWriter allows8BitMimeParts]
  -[MFMessageWriter setAllows8BitMimeParts:]
  -[MFMessageWriter allowsBinaryMimeParts]
  -[MFMessageWriter setAllowsBinaryMimeParts:]
  -[MFMessageWriter allowsQuotedPrintable]
  -[MFMessageWriter setAllowsQuotedPrintable:]
  -[MFMessageWriter setWriteSizeDispositionParameter:]
  -[MFMessageWriter setMessageClassToInstantiate:]
  -[MFMessageWriter shouldWriteAttachmentPlaceholders]
  -[MFMessageWriter setShouldWriteAttachmentPlaceholders:]
  -[MFMessageWriter createMessageWithHtmlString:plainTextAlternative:otherHtmlStringsAndAttachments:charsets:headers:]


_MFOutgoingMessageBody : MFMessageBody <MFCollectingDataConsumer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_MFOutgoingMessageBody rawData]
  -[_MFOutgoingMessageBody done]
  -[_MFOutgoingMessageBody dealloc]
  -[_MFOutgoingMessageBody count]
  -[_MFOutgoingMessageBody appendData:]
  -[_MFOutgoingMessageBody init]
  -[_MFOutgoingMessageBody data]
  -[_MFOutgoingMessageBody isLastCharacterNewLine]


MFOutgoingMessage : MFMailMessage
  // instance methods
  -[MFOutgoingMessage messageStore]
  -[MFOutgoingMessage headers]
  -[MFOutgoingMessage dealloc]
  -[MFOutgoingMessage messageSize]
  -[MFOutgoingMessage messageBody]
  -[MFOutgoingMessage messageData]
  -[MFOutgoingMessage setMessageBody:]
  -[MFOutgoingMessage messageBodyIfAvailable]
  -[MFOutgoingMessage messageData:messageSize:isComplete:downloadIfNecessary:]
  -[MFOutgoingMessage messageDataHolder]
  -[MFOutgoingMessage messageDataHolder:messageSize:isComplete:downloadIfNecessary:]
  -[MFOutgoingMessage mutableHeaders]
  -[MFOutgoingMessage setMutableHeaders:]
  -[MFOutgoingMessage headersIfAvailable]


MFAccountLoader : NSObject
  // class methods
  +[MFAccountLoader accountWithPersistentAccount:error:]
  +[MFAccountLoader accountClassForPersistentAccount:error:]
  +[MFAccountLoader _accountClassStringWithPersistentAccount:error:]
  +[MFAccountLoader _accountClassForString:error:]
  +[MFAccountLoader loadBundleForAccountClassString:error:]
  +[MFAccountLoader _bundlePathForAccountClassString:]
  +[MFAccountLoader accountWithAccountTypeIdentifier:error:]


MFAccountStore : NSObject
 @property  ACAccountStore *persistentStore

  // class methods
  +[MFAccountStore sharedAccountStore]
  +[MFAccountStore _accountWithAccountClass:persistentAccount:useExisting:]
  +[MFAccountStore _shouldUpdateAccountsInPlace]

  // instance methods
  -[MFAccountStore persistentStore]
  -[MFAccountStore dealloc]
  -[MFAccountStore init]
  -[MFAccountStore _accountsStoreChanged:]
  -[MFAccountStore setPersistentStore:]
  -[MFAccountStore newPersistentAccountWithAccountTypeIdentifier:]
  -[MFAccountStore supportedDataclassesWithAccountTypeIdentifier:]
  -[MFAccountStore accountsWithTypeIdentifiers:error:]
  -[MFAccountStore existingAccountWithPersistentAccount:]
  -[MFAccountStore _accountWithPersistentAccount:useExisting:]
  -[MFAccountStore savePersistentAccountWithAccount:]
  -[MFAccountStore removePersistentAccountWithAccount:]


MFAppStateMonitor : NSObject
 @property  EFObservable *appStateObservable
 @property  BOOL foreground

  // class methods
  +[MFAppStateMonitor sharedInstance]

  // instance methods
  -[MFAppStateMonitor dealloc]
  -[MFAppStateMonitor .cxx_destruct]
  -[MFAppStateMonitor isForeground]
  -[MFAppStateMonitor init]
  -[MFAppStateMonitor appStateObservable]
  -[MFAppStateMonitor _updateApplicationState:observer:]


MFAttachment : NSObject <EFCancelable>
 @property  MFAttachmentManager *attachmentManager
 @property  BOOL isContainedInRFC822
 @property  BOOL isContainedInCompose
 @property  NSString *contentID
 @property  NSProgress *downloadProgress
 @property  unsigned long lastProgressBytes
 @property  double lastProgressTime
 @property  NSURL *url
 @property  MFMimePart *part
 @property  NSString *fileName
 @property  NSString *path
 @property  NSString *mimeType
 @property  NSString *disposition
 @property  NSString *remoteImageFileName
 @property  unsigned long decodedFileSize
 @property  unsigned long encodedFileSize
 @property  BOOL isDataAvailableLocally
 @property  NSString *inferredMimeType
 @property  NSString *fileUTType
 @property  BOOL isAutoArchive
 @property  BOOL isPlaceholder
 @property  MFAttachmentPlaceholder *placeholder
 @property  @? fetchCompletionBlock
 @property  <MFDataConsumer> *customConsumer
 @property  BOOL wantsCompletionBlockOffMainThread
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MFAttachment downloadProgress]
  -[MFAttachment fileName]
  -[MFAttachment setDownloadProgress:]
  -[MFAttachment setUrl:]
  -[MFAttachment fileURL]
  -[MFAttachment path]
  -[MFAttachment isAvailable]
  -[MFAttachment mimeType]
  -[MFAttachment setMetadataValue:forKey:]
  -[MFAttachment dealloc]
  -[MFAttachment isPlaceholder]
  -[MFAttachment fileAttributes]
  -[MFAttachment attachmentManager]
  -[MFAttachment placeholder]
  -[MFAttachment setFetchCompletionBlock:]
  -[MFAttachment setDisposition:]
  -[MFAttachment resetProgress]
  -[MFAttachment sizeOnDisk]
  -[MFAttachment contentID]
  -[MFAttachment fetchData]
  -[MFAttachment url]
  -[MFAttachment disposition]
  -[MFAttachment metadataValueForKey:]
  -[MFAttachment setPlaceholder:]
  -[MFAttachment setFileName:]
  -[MFAttachment fetchCompletionBlock]
  -[MFAttachment isEqual:]
  -[MFAttachment cancel]
  -[MFAttachment setMimeType:]
  -[MFAttachment setIsPlaceholder:]
  -[MFAttachment conformsToType:]
  -[MFAttachment isCached]
  -[MFAttachment _dataProvider]
  -[MFAttachment lastProgressTime]
  -[MFAttachment setLastProgressTime:]
  -[MFAttachment setContentID:]
  -[MFAttachment initWithURL:attachmentManager:]
  -[MFAttachment decodeFilterWithDataConsumer:]
  -[MFAttachment fetchLocalData]
  -[MFAttachment fetchLocalData:stripPrivateMetadata:]
  -[MFAttachment fetchDataSynchronously:]
  -[MFAttachment fetchDataSynchronously:stripPrivateMetadata:]
  -[MFAttachment fetchDataToURL:]
  -[MFAttachment isMailDrop]
  -[MFAttachment isMailDropPhotoArchive]
  -[MFAttachment fetchPlaceholderData]
  -[MFAttachment filterData:]
  -[MFAttachment filterVCSData:]
  -[MFAttachment filterICSData:]
  -[MFAttachment isDataAvailableLocally]
  -[MFAttachment inferredMimeType]
  -[MFAttachment isContainedInRFC822]
  -[MFAttachment isContainedInCompose]
  -[MFAttachment isImageFile]
  -[MFAttachment fileNameByStrippingZipIfNeeded:]
  -[MFAttachment remoteImageFileName]
  -[MFAttachment setRemoteImageFileName:]
  -[MFAttachment _fileUTTypeForFileName:]
  -[MFAttachment fileUTType]
  -[MFAttachment attachmentContentTypeForFileName:]
  -[MFAttachment decodedFileSize]
  -[MFAttachment setDecodedFileSize:]
  -[MFAttachment encodedFileSize]
  -[MFAttachment setEncodedFileSize:]
  -[MFAttachment readFromDisk]
  -[MFAttachment textEncodingNameForData:mimeType:]
  -[MFAttachment textEncodingGuessWithData:]
  -[MFAttachment contentTypeConformsToVCard]
  -[MFAttachment contentTypeConformsToEvent]
  -[MFAttachment contentTypeConformsToEventVCS]
  -[MFAttachment contentTypeConformsToEventICS]
  -[MFAttachment contentTypeConformsToProvisionment]
  -[MFAttachment contentTypeConformsToMarkup]
  -[MFAttachment contentTypeConformsToPassbook]
  -[MFAttachment contentTypeConformsToIWork]
  -[MFAttachment part]
  -[MFAttachment setPart:]
  -[MFAttachment isAutoArchive]
  -[MFAttachment customConsumer]
  -[MFAttachment setCustomConsumer:]
  -[MFAttachment wantsCompletionBlockOffMainThread]
  -[MFAttachment setWantsCompletionBlockOffMainThread:]
  -[MFAttachment lastProgressBytes]
  -[MFAttachment setLastProgressBytes:]
  -[MFAttachment setAttachmentManager:]
  -[MFAttachment updateProgressWithCurrentBytes:]
  -[MFAttachment writeToDiskWithData:]


MFAttachmentComposeManager : MFAttachmentManager
  // instance methods
  -[MFAttachmentComposeManager dealloc]
  -[MFAttachmentComposeManager _fetchInvocationCallUsingBlock:]
  -[MFAttachmentComposeManager _queueForAttachment:]
  -[MFAttachmentComposeManager _callProgressBlockForAttachmentURL:withBytes:expectedSize:]
  -[MFAttachmentComposeManager attachmentsForContext:]
  -[MFAttachmentComposeManager _composeAttachmentDataProviderForContext:]
  -[MFAttachmentComposeManager attachmentForData:mimeType:fileName:contentID:context:]
  -[MFAttachmentComposeManager loadAttachmentURL:forContextID:]
  -[MFAttachmentComposeManager updateAttachment:withNewData:]
  -[MFAttachmentComposeManager removeAttachmentForURL:]
  -[MFAttachmentComposeManager recordPasteboardAttachmentsForURLs:forContextID:]
  -[MFAttachmentComposeManager recordUndoAttachmentsForURLs:forContextID:]
  -[MFAttachmentComposeManager _fetchDataForAttachment:withProvider:syncLock:]


MFAttachmentCompositionContext : NSObject
 @property  NSString *contextID
 @property  NSURL *attachmentsBaseURL
 @property  NSArray *attachments

  // instance methods
  -[MFAttachmentCompositionContext dealloc]
  -[MFAttachmentCompositionContext contextID]
  -[MFAttachmentCompositionContext attachments]
  -[MFAttachmentCompositionContext init]
  -[MFAttachmentCompositionContext initWithContextID:]
  -[MFAttachmentCompositionContext attachmentsBaseURL]
  -[MFAttachmentCompositionContext setAttachmentsBaseURL:]


MFAttachmentDataProvider : NSObject
 @property  NSURL *url

  // class methods
  +[MFAttachmentDataProvider dataProviderWithURL:]
  +[MFAttachmentDataProvider dataProviderWithPath:]

  // instance methods
  -[MFAttachmentDataProvider save:]
  -[MFAttachmentDataProvider exists]
  -[MFAttachmentDataProvider setUrl:]
  -[MFAttachmentDataProvider initWithURL:]
  -[MFAttachmentDataProvider dealloc]
  -[MFAttachmentDataProvider _path]
  -[MFAttachmentDataProvider url]
  -[MFAttachmentDataProvider data]
  -[MFAttachmentDataProvider errorWithMessage:code:]
  -[MFAttachmentDataProvider _isFileURL]
  -[MFAttachmentDataProvider _fileAttributes:]


MFAttachmentLibraryDataProvider : NSObject <MFAttachmentDataProviderProtocol>
 @property  MFMessageLibrary *messageLibrary
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MFAttachmentLibraryDataProvider .cxx_destruct]
  -[MFAttachmentLibraryDataProvider initWithLibrary:]
  -[MFAttachmentLibraryDataProvider storageLocationForAttachment:withMessage:]
  -[MFAttachmentLibraryDataProvider fetchDataForAttachment:consumer:progress:completion:]
  -[MFAttachmentLibraryDataProvider messageForAttachment:]
  -[MFAttachmentLibraryDataProvider messageLibrary]
  -[MFAttachmentLibraryDataProvider setMessageLibrary:]
  -[MFAttachmentLibraryDataProvider fetchLocalDataForAttachment:]


MFAttachmentLibraryManager : MFAttachmentComposeManager
  // instance methods
  -[MFAttachmentLibraryManager dealloc]
  -[MFAttachmentLibraryManager _dataProviderForAttachmentURL:error:]
  -[MFAttachmentLibraryManager removeProviderForBaseURL:]
  -[MFAttachmentLibraryManager initWithPrimaryLibrary:]
  -[MFAttachmentLibraryManager attachmentsForMessage:withSchemes:]
  -[MFAttachmentLibraryManager _messageAttachmentStorageLocationsDidChangeNotification:]


MFAttachmentManager : NSObject
  // class methods
  +[MFAttachmentManager defaultManager]
  +[MFAttachmentManager allManagers]
  +[MFAttachmentManager supportedDocumentUTIs]

  // instance methods
  -[MFAttachmentManager removeProvider:]
  -[MFAttachmentManager dealloc]
  -[MFAttachmentManager init]
  -[MFAttachmentManager attachmentsForContext:]
  -[MFAttachmentManager attachmentForCID:]
  -[MFAttachmentManager attachmentForData:mimeType:fileName:contentID:context:]
  -[MFAttachmentManager loadAttachmentURL:forContextID:]
  -[MFAttachmentManager updateAttachment:withNewData:]
  -[MFAttachmentManager removeAttachmentForURL:]
  -[MFAttachmentManager recordPasteboardAttachmentsForURLs:forContextID:]
  -[MFAttachmentManager recordUndoAttachmentsForURLs:forContextID:]
  -[MFAttachmentManager _dataProviderForAttachmentURL:error:]
  -[MFAttachmentManager removeProviderForBaseURL:]
  -[MFAttachmentManager addProvider:forBaseURL:]
  -[MFAttachmentManager imageScalingQueue]
  -[MFAttachmentManager _setupAttachment:withMimeBody:error:]
  -[MFAttachmentManager _filePathForAttachment:]
  -[MFAttachmentManager attachmentForURL:error:]
  -[MFAttachmentManager attachmentForURL:withMimeBody:error:]
  -[MFAttachmentManager attachmentsForURLs:error:]
  -[MFAttachmentManager attachmentForTextAttachment:error:]
  -[MFAttachmentManager attachmentForContentID:]
  -[MFAttachmentManager attachmentForContentID:preferredSchemes:]
  -[MFAttachmentManager fetchDataForAttachment:]
  -[MFAttachmentManager fetchDataSynchronouslyForAttachment:]
  -[MFAttachmentManager _fetchCompletedForAttachment:error:]
  -[MFAttachmentManager setContentID:forAttachment:]
  -[MFAttachmentManager _contentIDForAttachment:]
  -[MFAttachmentManager setMetadataForAttachment:toValue:forKey:]
  -[MFAttachmentManager metadataForAttachment:forKey:]
  -[MFAttachmentManager clearMetadataForAttachment:]
  -[MFAttachmentManager _fetchDataForAttachment:withProvider:syncLock:]
  -[MFAttachmentManager cancelFetchForAttachment:]


MFAttachmentPlaceholder : NSObject
  // class methods
  +[MFAttachmentPlaceholder placeholder]
  +[MFAttachmentPlaceholder placeholderFromSerializedRepresentation:]
  +[MFAttachmentPlaceholder _placeholderMagic]
  +[MFAttachmentPlaceholder isPlaceholderSerializedRepresentation:]
  +[MFAttachmentPlaceholder dataForPlaceholder:]

  // instance methods
  -[MFAttachmentPlaceholder fileName]
  -[MFAttachmentPlaceholder fileSize]
  -[MFAttachmentPlaceholder setFileSize:]
  -[MFAttachmentPlaceholder fileURL]
  -[MFAttachmentPlaceholder mimeType]
  -[MFAttachmentPlaceholder serializedRepresentation]
  -[MFAttachmentPlaceholder dealloc]
  -[MFAttachmentPlaceholder contentID]
  -[MFAttachmentPlaceholder setFileName:]
  -[MFAttachmentPlaceholder init]
  -[MFAttachmentPlaceholder setMimeType:]
  -[MFAttachmentPlaceholder setContentID:]
  -[MFAttachmentPlaceholder _setJSONDictionary:]
  -[MFAttachmentPlaceholder fileURLString]
  -[MFAttachmentPlaceholder setFileURLString:]
  -[MFAttachmentPlaceholder useMailDrop]
  -[MFAttachmentPlaceholder setUseMailDrop:]


MFAttachmentRaw : NSObject
 @property  NSData *data
 @property  NSString *fileName
 @property  NSString *mimeType
 @property  NSString *contentID

  // class methods
  +[MFAttachmentRaw attachmentData:fileName:mimeType:]
  +[MFAttachmentRaw attachmentData:fileName:mimeType:contentID:]

  // instance methods
  -[MFAttachmentRaw fileName]
  -[MFAttachmentRaw mimeType]
  -[MFAttachmentRaw dealloc]
  -[MFAttachmentRaw setData:]
  -[MFAttachmentRaw contentID]
  -[MFAttachmentRaw setFileName:]
  -[MFAttachmentRaw data]
  -[MFAttachmentRaw setMimeType:]
  -[MFAttachmentRaw setContentID:]


MFAttachmentUtilities : NSObject
  // class methods
  +[MFAttachmentUtilities temporaryDirectory]
  +[MFAttachmentUtilities _temporaryDirectoryUniqueURL]
  +[MFAttachmentUtilities temporaryFileURLWithExtension:]
  +[MFAttachmentUtilities mimeTypeForFileName:]
  +[MFAttachmentUtilities temporaryFileURLWithFileName:]


MFAttachmentBundle : NSObject
  // class methods
  +[MFAttachmentBundle isFileBundleURL:]
  +[MFAttachmentBundle _stripBundlePath:entryPath:]


MFAttachmentSecurityScope : NSObject
  // class methods
  +[MFAttachmentSecurityScope securityScopedURL:]
  +[MFAttachmentSecurityScope securityScopedURL:withToken:]

  // instance methods
  -[MFAttachmentSecurityScope isReadable]
  -[MFAttachmentSecurityScope dealloc]
  -[MFAttachmentSecurityScope data]
  -[MFAttachmentSecurityScope initWithSecurityScopedURL:withToken:]
  -[MFAttachmentSecurityScope startWriteAccess]
  -[MFAttachmentSecurityScope startReadAccess]
  -[MFAttachmentSecurityScope _temporaryReadURL:error:]
  -[MFAttachmentSecurityScope _removeTemporaryReadURL]
  -[MFAttachmentSecurityScope stopAccess]
  -[MFAttachmentSecurityScope securityScopeToken]
  -[MFAttachmentSecurityScope _attachSecurityScope]
  -[MFAttachmentSecurityScope isBundle]


MFComposeAttachmentDataProvider : NSObject <MFAttachmentDataProviderProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MFComposeAttachmentDataProvider dealloc]
  -[MFComposeAttachmentDataProvider storageLocationForAttachment:withMessage:]
  -[MFComposeAttachmentDataProvider fetchDataForAttachment:consumer:progress:completion:]
  -[MFComposeAttachmentDataProvider messageForAttachment:]
  -[MFComposeAttachmentDataProvider initWithData:forContentID:]
  -[MFComposeAttachmentDataProvider addData:forContentID:]
  -[MFComposeAttachmentDataProvider removeDataForAttachment:]
  -[MFComposeAttachmentDataProvider recordPasteboardDataForAttachments:]
  -[MFComposeAttachmentDataProvider recordUndoDataForAttachments:]
  -[MFComposeAttachmentDataProvider _dataForAttachment:]
  -[MFComposeAttachmentDataProvider dataForContentID:]
  -[MFComposeAttachmentDataProvider rawDataForContentID:]
  -[MFComposeAttachmentDataProvider fetchLocalDataForAttachment:]


MFContentErrorDocument : NSObject
 @property  NSError *error
 @property  NSString *content

  // instance methods
  -[MFContentErrorDocument content]
  -[MFContentErrorDocument error]
  -[MFContentErrorDocument dealloc]
  -[MFContentErrorDocument initWithMimePart:]


_MFContentProtectionObserverWrapper : NSObject
 @property  <MFContentProtectionObserver> *observer
 @property  NSObject<OS_dispatch_queue> *queue

  // instance methods
  -[_MFContentProtectionObserverWrapper dealloc]
  -[_MFContentProtectionObserverWrapper observer]
  -[_MFContentProtectionObserverWrapper queue]
  -[_MFContentProtectionObserverWrapper initWithObserver:queue:]


MFCertificateTrustInfo : NSObject
 @property  unsigned long certificateType
 @property  NSString *sender
 @property  NSString *commonName
 @property  NSString *emailAddress
 @property  ^{__SecTrust=} trust
 @property  ^{__SecCertificate=} certificate
 @property  int action
 @property  unsigned long keychainStatus
 @property  BOOL canSaveCertificateToKeychain
 @property  BOOL hasTrustException

  // instance methods
  -[MFCertificateTrustInfo emailAddress]
  -[MFCertificateTrustInfo certificate]
  -[MFCertificateTrustInfo dealloc]
  -[MFCertificateTrustInfo .cxx_destruct]
  -[MFCertificateTrustInfo action]
  -[MFCertificateTrustInfo sender]
  -[MFCertificateTrustInfo trust]
  -[MFCertificateTrustInfo certificateType]
  -[MFCertificateTrustInfo initWithCertificateType:trust:sender:]
  -[MFCertificateTrustInfo canSaveCertificateToKeychain]
  -[MFCertificateTrustInfo hasTrustException]
  -[MFCertificateTrustInfo addTrustException]
  -[MFCertificateTrustInfo removeTrustException]
  -[MFCertificateTrustInfo saveCertificateToKeychain]
  -[MFCertificateTrustInfo removeCertificateFromKeychain]
  -[MFCertificateTrustInfo keychainStatus]
  -[MFCertificateTrustInfo commonName]


MFDecryptedAttachmentDataProvider : NSObject <MFAttachmentDataProviderProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MFDecryptedAttachmentDataProvider dealloc]
  -[MFDecryptedAttachmentDataProvider storageLocationForAttachment:withMessage:]
  -[MFDecryptedAttachmentDataProvider fetchDataForAttachment:consumer:progress:completion:]
  -[MFDecryptedAttachmentDataProvider messageForAttachment:]
  -[MFDecryptedAttachmentDataProvider initWithDecryptedMessage:]
  -[MFDecryptedAttachmentDataProvider fetchLocalDataForAttachment:]


MFDeliveryResult : NSObject
 @property  long long status
 @property  double duration
 @property  unsigned long bytesSent
 @property  BOOL isWifi
 @property  long long attributes

  // instance methods
  -[MFDeliveryResult setDuration:]
  -[MFDeliveryResult setAttributes:]
  -[MFDeliveryResult attributes]
  -[MFDeliveryResult status]
  -[MFDeliveryResult setStatus:]
  -[MFDeliveryResult duration]
  -[MFDeliveryResult initWithStatus:]
  -[MFDeliveryResult setBytesSent:]
  -[MFDeliveryResult bytesSent]
  -[MFDeliveryResult isWifi]
  -[MFDeliveryResult setIsWifi:]


MFError : NSError
  // class methods
  +[MFError errorWithDomain:code:localizedDescription:]
  +[MFError errorWithDomain:code:localizedDescription:title:userInfo:]
  +[MFError errorWithException:]

  // instance methods
  -[MFError localizedDescription]
  -[MFError initWithDomain:code:userInfo:]
  -[MFError userInfo]
  -[MFError dealloc]
  -[MFError setLocalizedDescription:]
  -[MFError setUserInfoObject:forKey:]
  -[MFError recoveryAttempter]
  -[MFError setShortDescription:]
  -[MFError mf_moreInfo]
  -[MFError mf_shortDescription]
  -[MFError setMoreInfo:]
  -[MFError useGenericDescription:]


MFFakeMailAccount : MailAccount
 @property  DeliveryAccount *deliveryAccount
 @property  BOOL managed

  // instance methods
  -[MFFakeMailAccount cachePolicy]
  -[MFFakeMailAccount hostname]
  -[MFFakeMailAccount initWithURL:]
  -[MFFakeMailAccount isManaged]
  -[MFFakeMailAccount isActive]
  -[MFFakeMailAccount .cxx_destruct]
  -[MFFakeMailAccount uniqueId]
  -[MFFakeMailAccount username]
  -[MFFakeMailAccount displayName]
  -[MFFakeMailAccount URLString]
  -[MFFakeMailAccount init]
  -[MFFakeMailAccount setCachedConnection:]
  -[MFFakeMailAccount deliveryAccount]
  -[MFFakeMailAccount setDeliveryAccount:]
  -[MFFakeMailAccount _URLScheme]
  -[MFFakeMailAccount supportsRemoteAppend]
  -[MFFakeMailAccount shouldFetchAgainWithError:foregroundRequest:]
  -[MFFakeMailAccount supportsFastRemoteBodySearch]
  -[MFFakeMailAccount minID]
  -[MFFakeMailAccount _nameForMailboxUid:]
  -[MFFakeMailAccount _mailboxPathPrefix]
  -[MFFakeMailAccount _shouldConfigureMailboxCache]
  -[MFFakeMailAccount willPerformActionForChokePoint:coalescePoint:result:]
  -[MFFakeMailAccount didFinishActionForChokePoint:coalescePoint:withResult:]
  -[MFFakeMailAccount powerAssertionIdentifierWithPrefix:]
  -[MFFakeMailAccount initWithURL:rootMailboxUid:]
  -[MFFakeMailAccount setUnreadCount:forMailbox:]
  -[MFFakeMailAccount connectionForStore:delegate:options:]
  -[MFFakeMailAccount flagChangesForMailboxPath:UID:connectTime:]
  -[MFFakeMailAccount flagChangesLock]
  -[MFFakeMailAccount setManaged:]


MFFakeMailboxUid : MFMailboxUid
 @property  NSString *fakeFullPath
 @property  NSString *fakeURLString
 @property  BOOL fakeIsSpecialMailboxUid
 @property  NSString *displayName

  // instance methods
  -[MFFakeMailboxUid store]
  -[MFFakeMailboxUid .cxx_destruct]
  -[MFFakeMailboxUid setDisplayName:]
  -[MFFakeMailboxUid displayName]
  -[MFFakeMailboxUid URLString]
  -[MFFakeMailboxUid fullPath]
  -[MFFakeMailboxUid isStore]
  -[MFFakeMailboxUid isSpecialMailboxUid]
  -[MFFakeMailboxUid initWithAccount:URLString:fullPath:]
  -[MFFakeMailboxUid initWithAccount:URLString:fullPath:isSpecial:]
  -[MFFakeMailboxUid fakeFullPath]
  -[MFFakeMailboxUid setFakeFullPath:]
  -[MFFakeMailboxUid fakeURLString]
  -[MFFakeMailboxUid setFakeURLString:]
  -[MFFakeMailboxUid fakeIsSpecialMailboxUid]
  -[MFFakeMailboxUid setFakeIsSpecialMailboxUid:]


MFFakeMailMessage : MFMailMessage
 @property  MFMessageHeaders *headers
 @property  MailAccount *account
 @property  MFMailboxUid *mailbox

  // instance methods
  -[MFFakeMailMessage headers]
  -[MFFakeMailMessage account]
  -[MFFakeMailMessage setAccount:]
  -[MFFakeMailMessage setHeaders:]
  -[MFFakeMailMessage .cxx_destruct]
  -[MFFakeMailMessage mailbox]
  -[MFFakeMailMessage setMailbox:]


MFFetchLimits : NSObject
 @property  unsigned long fetchMinBytes
 @property  unsigned long fetchMaxBytes
 @property  unsigned long minBytesLeft

  // instance methods
  -[MFFetchLimits init]
  -[MFFetchLimits fetchMinBytes]
  -[MFFetchLimits setFetchMinBytes:]
  -[MFFetchLimits fetchMaxBytes]
  -[MFFetchLimits setFetchMaxBytes:]
  -[MFFetchLimits minBytesLeft]
  -[MFFetchLimits setMinBytesLeft:]


MFLocalizedMessageHeaders : MFMessageHeaders
  // class methods
  +[MFLocalizedMessageHeaders localizedHeaders]
  +[MFLocalizedMessageHeaders localizedHeadersFromEnglishHeaders:]
  +[MFLocalizedMessageHeaders englishHeadersFromLocalizedHeaders:]

  // instance methods
  -[MFLocalizedMessageHeaders markupString]
  -[MFLocalizedMessageHeaders copyFormattedHeaderValueFromAddressList:]
  -[MFLocalizedMessageHeaders appendHeaderMarkupForKey:value:toString:]


MFLockStateMonitor : NSObject
 @property  EFObservable *lockStateObservable
 @property  BOOL locked

  // class methods
  +[MFLockStateMonitor sharedInstance]

  // instance methods
  -[MFLockStateMonitor isLocked]
  -[MFLockStateMonitor dealloc]
  -[MFLockStateMonitor .cxx_destruct]
  -[MFLockStateMonitor init]
  -[MFLockStateMonitor lockStateObservable]
  -[MFLockStateMonitor _receiveLockState:]


MFMailMessageRelationshipAnalyzer : NSObject
  // class methods
  +[MFMailMessageRelationshipAnalyzer myEmailAddresses]
  +[MFMailMessageRelationshipAnalyzer analysisOfConversation:]
  +[MFMailMessageRelationshipAnalyzer analyzeMessages:myEmailAddresses:]
  +[MFMailMessageRelationshipAnalyzer sendersOfMessage:]
  +[MFMailMessageRelationshipAnalyzer relationOfMessage:toMessage:]
  +[MFMailMessageRelationshipAnalyzer relationOfMessage:toMessage:previousSenders:myEmailAddresses:]
  +[MFMailMessageRelationshipAnalyzer isMessage:responseToMessage:previousSenders:myEmailAddresses:]
  +[MFMailMessageRelationshipAnalyzer isMessage:addressedToPreviousSender:]
  +[MFMailMessageRelationshipAnalyzer isMessage:addressedToMailingListForMessage:]
  +[MFMailMessageRelationshipAnalyzer recipientsOfMessage:]
  +[MFMailMessageRelationshipAnalyzer isMessageDraft:]
  +[MFMailMessageRelationshipAnalyzer isMessage:forwardOfMessage:myEmailAddresses:]
  +[MFMailMessageRelationshipAnalyzer isMessage:sentByAddress:]

  // instance methods
  -[MFMailMessageRelationshipAnalyzer dealloc]
  -[MFMailMessageRelationshipAnalyzer initWithMessages:relationships:]
  -[MFMailMessageRelationshipAnalyzer relationOfMessage:]


MFMailMessageStoreSearchResult : NSObject
 @property  NSMutableDictionary *mailboxToRemoteIdDictionary
 @property  unsigned long count
 @property  NSDate *continueOffset

  // instance methods
  -[MFMailMessageStoreSearchResult dealloc]
  -[MFMailMessageStoreSearchResult count]
  -[MFMailMessageStoreSearchResult init]
  -[MFMailMessageStoreSearchResult addRemoteID:mailbox:]
  -[MFMailMessageStoreSearchResult enumerateMailboxesAndRemoteIDsUsingBlock:]
  -[MFMailMessageStoreSearchResult continueOffset]
  -[MFMailMessageStoreSearchResult setContinueOffset:]
  -[MFMailMessageStoreSearchResult mailboxToRemoteIdDictionary]
  -[MFMailMessageStoreSearchResult setMailboxToRemoteIdDictionary:]


MFMessageCollectionInfo : NSObject
 @property  BOOL isEmpty
 @property  MFMessageInfo *firstMessage
 @property  MFMessageInfo *lastMessage
 @property  unsigned long messagesCount
 @property  unsigned long messageCountWithDuplicates
 @property  NSArray *uniqueMessageInfos
 @property  NSArray *allMessageInfos
 @property  long long messageCollectionHash
 @property  @? duplicatePreferenceComparator

  // class methods
  +[MFMessageCollectionInfo stateForMessages:]

  // instance methods
  -[MFMessageCollectionInfo lastMessage]
  -[MFMessageCollectionInfo state]
  -[MFMessageCollectionInfo dealloc]
  -[MFMessageCollectionInfo isEmpty]
  -[MFMessageCollectionInfo messagesCount]
  -[MFMessageCollectionInfo firstMessage]
  -[MFMessageCollectionInfo mergeWithCollection:]
  -[MFMessageCollectionInfo initWithHash:comparator:]
  -[MFMessageCollectionInfo messageCountWithDuplicates]
  -[MFMessageCollectionInfo uniqueMessageInfos]
  -[MFMessageCollectionInfo allMessageInfos]
  -[MFMessageCollectionInfo addMessageInfo:]
  -[MFMessageCollectionInfo removeMessageInfo:]
  -[MFMessageCollectionInfo indexOfMessageInfo:]
  -[MFMessageCollectionInfo indexWhereMessageInfoWouldBeInserted:]
  -[MFMessageCollectionInfo messageInfoAtIndex:]
  -[MFMessageCollectionInfo messageInfoEquivalentToMessageInfo:]
  -[MFMessageCollectionInfo duplicatesOfMessageInfo:]
  -[MFMessageCollectionInfo visibleMessageInfo]
  -[MFMessageCollectionInfo duplicatePreferenceComparator]
  -[MFMessageCollectionInfo setDuplicatePreferenceComparator:]
  -[MFMessageCollectionInfo messageCollectionHash]


MFMessageInfo : NSObject <MFBaseMessage, NSCopying>
 @property  unsigned int uid
 @property  unsigned int dateReceivedInterval
 @property  unsigned int dateSentInterval
 @property  long long conversationHash
 @property  unsigned int mailboxID
 @property  long long messageIDHash
 @property  BOOL flagged
 @property  BOOL read
 @property  BOOL deleted
 @property  BOOL senderVIP
 @property  BOOL knownToHaveAttachments
 @property  BOOL libraryMessage
 @property  unsigned int libraryID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  long long generationNumber
 @property  unsigned int uid
 @property  unsigned int dateReceivedInterval
 @property  unsigned int dateSentInterval
 @property  long long conversationHash
 @property  unsigned int mailboxID
 @property  long long messageIDHash
 @property  BOOL flagged
 @property  BOOL read
 @property  BOOL deleted
 @property  BOOL uidIsLibraryID
 @property  BOOL isVIP
 @property  BOOL knownToHaveAttachments
 @property  unsigned int sortUid
 @property  unsigned int sortDateReceivedInterval

  // class methods
  +[MFMessageInfo newGenerationNumber]

  // instance methods
  -[MFMessageInfo uid]
  -[MFMessageInfo setUid:]
  -[MFMessageInfo setDeleted:]
  -[MFMessageInfo deleted]
  -[MFMessageInfo copyWithZone:]
  -[MFMessageInfo setRead:]
  -[MFMessageInfo libraryID]
  -[MFMessageInfo isEqual:]
  -[MFMessageInfo init]
  -[MFMessageInfo read]
  -[MFMessageInfo isVIP]
  -[MFMessageInfo generationNumber]
  -[MFMessageInfo flagged]
  -[MFMessageInfo setFlagged:]
  -[MFMessageInfo mailboxID]
  -[MFMessageInfo setMailboxID:]
  -[MFMessageInfo isLibraryMessage]
  -[MFMessageInfo conversationHash]
  -[MFMessageInfo messageIDHash]
  -[MFMessageInfo setMessageIDHash:]
  -[MFMessageInfo dateSentInterval]
  -[MFMessageInfo setDateSentInterval:]
  -[MFMessageInfo generationCompare:]
  -[MFMessageInfo setIsVIP:]
  -[MFMessageInfo copyMessageInfo]
  -[MFMessageInfo dateReceivedInterval]
  -[MFMessageInfo senderVIP]
  -[MFMessageInfo isKnownToHaveAttachments]
  -[MFMessageInfo uidIsLibraryID]
  -[MFMessageInfo setUidIsLibraryID:]
  -[MFMessageInfo setKnownToHaveAttachments:]
  -[MFMessageInfo initWithUid:mailboxID:messageID:dateReceivedInterval:dateSentInterval:conversationHash:read:knownToHaveAttachments:flagged:isVIP:]
  -[MFMessageInfo setDateReceivedInterval:]
  -[MFMessageInfo _flagDescription]
  -[MFMessageInfo setConversationHash:]
  -[MFMessageInfo sortUid]
  -[MFMessageInfo setSortUid:]
  -[MFMessageInfo sortDateReceivedInterval]
  -[MFMessageInfo setSortDateReceivedInterval:]


MFMessageInfoOrderedSet : NSObject
 @property  @? comparator
 @property  @? duplicatePreferenceComparator
 @property  NSArray *uniqueMessageInfos
 @property  NSArray *allMessageInfos
 @property  unsigned long count
 @property  unsigned long countWithDuplicates
 @property  MFMessageInfo *firstMessage
 @property  MFMessageInfo *lastMessage

  // instance methods
  -[MFMessageInfoOrderedSet comparator]
  -[MFMessageInfoOrderedSet setComparator:]
  -[MFMessageInfoOrderedSet _invalidate]
  -[MFMessageInfoOrderedSet lastMessage]
  -[MFMessageInfoOrderedSet dealloc]
  -[MFMessageInfoOrderedSet count]
  -[MFMessageInfoOrderedSet firstMessage]
  -[MFMessageInfoOrderedSet initWithComparator:]
  -[MFMessageInfoOrderedSet uniqueMessageInfos]
  -[MFMessageInfoOrderedSet allMessageInfos]
  -[MFMessageInfoOrderedSet addMessageInfo:]
  -[MFMessageInfoOrderedSet removeMessageInfo:]
  -[MFMessageInfoOrderedSet indexOfMessageInfo:]
  -[MFMessageInfoOrderedSet indexWhereMessageInfoWouldBeInserted:]
  -[MFMessageInfoOrderedSet messageInfoAtIndex:]
  -[MFMessageInfoOrderedSet messageInfoEquivalentToMessageInfo:]
  -[MFMessageInfoOrderedSet duplicatesOfMessageInfo:]
  -[MFMessageInfoOrderedSet duplicatePreferenceComparator]
  -[MFMessageInfoOrderedSet setDuplicatePreferenceComparator:]
  -[MFMessageInfoOrderedSet removeMessageInfoAtIndex:]
  -[MFMessageInfoOrderedSet removeMessageInfosAtIndexes:]
  -[MFMessageInfoOrderedSet removeAllMessageInfos]
  -[MFMessageInfoOrderedSet replaceMessageInfo:withReplacement:inPlace:]
  -[MFMessageInfoOrderedSet countWithDuplicates]
  -[MFMessageInfoOrderedSet allDuplicatesOfMessageInfo:]
  -[MFMessageInfoOrderedSet _addMessageInfoToDuplicates:]
  -[MFMessageInfoOrderedSet _removeDuplicatesForMessageInfo:]
  -[MFMessageInfoOrderedSet _duplicateMessageInfosForMessageInfo:]
  -[MFMessageInfoOrderedSet _scanForMessageInfoSimilarTo:]
  -[MFMessageInfoOrderedSet enumerateUniqueMessageInfosWithOptions:usingBlock:]


MFNetworkController : NSObject <MFDiagnosticsGenerator, RadiosPreferencesDelegate, CXCallObserverDelegate>
 @property  ^v wifiManager
 @property  EFObservable *networkObservable
 @property  EFObservable *wifiObservable
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MFNetworkController sharedInstance]
  +[MFNetworkController networkAssertionWithIdentifier:]

  // instance methods
  -[MFNetworkController preferredDataSimChanged:]
  -[MFNetworkController simStatusDidChange:status:]
  -[MFNetworkController dataStatus:dataStatusInfo:]
  -[MFNetworkController setWifiManager:]
  -[MFNetworkController wifiManager]
  -[MFNetworkController isNetworkUp]
  -[MFNetworkController dealloc]
  -[MFNetworkController .cxx_destruct]
  -[MFNetworkController callObserver:callChanged:]
  -[MFNetworkController connectionActivationError:connection:error:]
  -[MFNetworkController invalidate]
  -[MFNetworkController copyDiagnosticInformation]
  -[MFNetworkController inAirplaneMode]
  -[MFNetworkController dataStatus]
  -[MFNetworkController airplaneModeChanged]
  -[MFNetworkController init]
  -[MFNetworkController addNetworkObserverBlock:queue:]
  -[MFNetworkController removeNetworkObserver:]
  -[MFNetworkController _initializeDataStatus]
  -[MFNetworkController _simulationOverrideForType:actualValue:]
  -[MFNetworkController _setDataStatus_nts:]
  -[MFNetworkController isDataAvailable]
  -[MFNetworkController _isNetworkUp_nts]
  -[MFNetworkController isFatPipe]
  -[MFNetworkController isOnWWAN]
  -[MFNetworkController is3GConnection]
  -[MFNetworkController is4GConnection]
  -[MFNetworkController _setFlags:forReachability:]
  -[MFNetworkController _checkKeys:forStore:]
  -[MFNetworkController _handleWiFiNotification:]
  -[MFNetworkController _networkAssertionWithIdentifier:]
  -[MFNetworkController copyCarrierBundleValue:]
  -[MFNetworkController networkObservable]
  -[MFNetworkController wifiObservable]
  -[MFNetworkController _carrierBundleDidChange]
  -[MFNetworkController _updateActiveCalls]
  -[MFNetworkController _inititializeWifiManager]
  -[MFNetworkController _setupSymptons]
  -[MFNetworkController hasAlternateAdvice]
  -[MFNetworkController _updateWifiClientType]
  -[MFNetworkController addBackgroundWifiClient:]
  -[MFNetworkController removeBackgroundWifiClient:]


_MFNetworkObserver : NSObject
  // instance methods
  -[_MFNetworkObserver execute]
  -[_MFNetworkObserver .cxx_destruct]
  -[_MFNetworkObserver initWithBlock:queue:]


MFOutgoingMessageContent : NSObject
 @property  MFMutableMessageHeaders *headers
 @property  NSArray *placeholders
 @property  MFOutgoingLibraryMessageContent *libraryContent
 @property  MFOutgoingRichtextMessageContent *richtextContent
 @property  MFOutgoingMultipartRelatedContent *multipartContent

  // instance methods
  -[MFOutgoingMessageContent headers]
  -[MFOutgoingMessageContent setHeaders:]
  -[MFOutgoingMessageContent copy]
  -[MFOutgoingMessageContent placeholders]
  -[MFOutgoingMessageContent dealloc]
  -[MFOutgoingMessageContent libraryContent]
  -[MFOutgoingMessageContent setPlaceholders:]
  -[MFOutgoingMessageContent richtextContent]
  -[MFOutgoingMessageContent multipartContent]


MFOutgoingLibraryMessageContent : MFOutgoingMessageContent
 @property  MFLibraryMessage *libraryMessage

  // instance methods
  -[MFOutgoingLibraryMessageContent headers]
  -[MFOutgoingLibraryMessageContent copy]
  -[MFOutgoingLibraryMessageContent dealloc]
  -[MFOutgoingLibraryMessageContent libraryContent]
  -[MFOutgoingLibraryMessageContent libraryMessage]
  -[MFOutgoingLibraryMessageContent setLibraryMessage:]


MFOutgoingRichtextMessageContent : MFOutgoingMessageContent
 @property  BOOL textPartsAreHTML
 @property  MFPlainTextDocument *plaintextAlternative
 @property  NSArray *mixedContent

  // instance methods
  -[MFOutgoingRichtextMessageContent copy]
  -[MFOutgoingRichtextMessageContent dealloc]
  -[MFOutgoingRichtextMessageContent richtextContent]
  -[MFOutgoingRichtextMessageContent textPartsAreHTML]
  -[MFOutgoingRichtextMessageContent setTextPartsAreHTML:]
  -[MFOutgoingRichtextMessageContent plaintextAlternative]
  -[MFOutgoingRichtextMessageContent setPlaintextAlternative:]
  -[MFOutgoingRichtextMessageContent mixedContent]
  -[MFOutgoingRichtextMessageContent setMixedContent:]


MFOutgoingMultipartRelatedContent : MFOutgoingRichtextMessageContent
 @property  NSString *htmlBody

  // instance methods
  -[MFOutgoingMultipartRelatedContent copy]
  -[MFOutgoingMultipartRelatedContent dealloc]
  -[MFOutgoingMultipartRelatedContent multipartContent]
  -[MFOutgoingMultipartRelatedContent htmlBody]
  -[MFOutgoingMultipartRelatedContent setHtmlBody:]


MFOutgoingMessageDelivery : NSObject
 @property  MFAttachmentCompositionContext *attachmentContext
 @property  NSDictionary *compositionSpecification
 @property  unsigned long conversationFlags
 @property  long long originalConversationId
 @property  BOOL isUserRequested

  // class methods
  +[MFOutgoingMessageDelivery newWithMessage:]
  +[MFOutgoingMessageDelivery newWithHeaders:mixedContent:textPartsAreHTML:]
  +[MFOutgoingMessageDelivery newWithHeaders:HTML:plainTextAlternative:other:charsets:]

  // instance methods
  -[MFOutgoingMessageDelivery account]
  -[MFOutgoingMessageDelivery setAccount:]
  -[MFOutgoingMessageDelivery setDelegate:]
  -[MFOutgoingMessageDelivery dealloc]
  -[MFOutgoingMessageDelivery initWithMessage:]
  -[MFOutgoingMessageDelivery message]
  -[MFOutgoingMessageDelivery init]
  -[MFOutgoingMessageDelivery isUserRequested]
  -[MFOutgoingMessageDelivery deliveryStatus]
  -[MFOutgoingMessageDelivery attachmentContext]
  -[MFOutgoingMessageDelivery setIsUserRequested:]
  -[MFOutgoingMessageDelivery conversationFlags]
  -[MFOutgoingMessageDelivery setConversationFlags:]
  -[MFOutgoingMessageDelivery initWithHeaders:mixedContent:textPartsAreHTML:]
  -[MFOutgoingMessageDelivery setArchiveAccount:]
  -[MFOutgoingMessageDelivery originalHeaders]
  -[MFOutgoingMessageDelivery compositionSpecification]
  -[MFOutgoingMessageDelivery setCompositionSpecification:]
  -[MFOutgoingMessageDelivery deliverSynchronouslyWithCompletion:]
  -[MFOutgoingMessageDelivery _currentDeliveryObject]
  -[MFOutgoingMessageDelivery _deliverSynchronouslyWithCurrentSettings:]
  -[MFOutgoingMessageDelivery _deliveryAccountForInitializers]
  -[MFOutgoingMessageDelivery setAttachmentContext:]
  -[MFOutgoingMessageDelivery originalConversationId]
  -[MFOutgoingMessageDelivery setOriginalConversationId:]
  -[MFOutgoingMessageDelivery initWithHeaders:HTML:plainTextAlternative:other:charsets:]


MFPowerController : NSObject <MFDiagnosticsGenerator>
 @property  EFObservable *pluggedInObservable
 @property  EFObservable *lowPowerModeObservable
 @property  BOOL pluggedIn
 @property  BOOL batterySaverModeEnabled
 @property  BOOL holdingAssertion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MFPowerController sharedInstance]
  +[MFPowerController powerlog:eventData:]

  // instance methods
  -[MFPowerController dealloc]
  -[MFPowerController .cxx_destruct]
  -[MFPowerController releaseAssertionWithIdentifier:]
  -[MFPowerController copyDiagnosticInformation]
  -[MFPowerController powerObservable]
  -[MFPowerController init]
  -[MFPowerController isPluggedIn]
  -[MFPowerController _assertionTimeout]
  -[MFPowerController _lowPowerModeChangedNotification:]
  -[MFPowerController _setPluggedIn:]
  -[MFPowerController isHoldingAssertion]
  -[MFPowerController startListeningForBatterySaverNotifications]
  -[MFPowerController isBatterySaverModeEnabled]
  -[MFPowerController _setupAssertionTimer:]
  -[MFPowerController _retainPowerAssertion_nts]
  -[MFPowerController _releasePowerAssertion_nts]
  -[MFPowerController retainAssertionWithIdentifier:]
  -[MFPowerController retainAssertionWithIdentifier:withAccount:]
  -[MFPowerController _applicationForegroundStateChanged_nts:]
  -[MFPowerController _applicationForegroundStateChanged:]
  -[MFPowerController pluggedInObservable]
  -[MFPowerController lowPowerModeObservable]


MFRFC822AttachmentDataProvider : NSObject <MFAttachmentDataProviderProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MFRFC822AttachmentDataProvider .cxx_destruct]
  -[MFRFC822AttachmentDataProvider storageLocationForAttachment:withMessage:]
  -[MFRFC822AttachmentDataProvider fetchDataForAttachment:consumer:progress:completion:]
  -[MFRFC822AttachmentDataProvider messageForAttachment:]
  -[MFRFC822AttachmentDataProvider initWithMessageData:parentPart:]
  -[MFRFC822AttachmentDataProvider fetchLocalDataForAttachment:]


MFSecureMIMECompositionManager : NSObject
 @property  <MFSecureMIMECompositionManagerDelegate> *delegate
 @property  NSString *sendingAddress
 @property  MailAccount *sendingAccount
 @property  int signingPolicy
 @property  int encryptionPolicy
 @property  int signingStatus
 @property  int encryptionStatus
 @property  NSSet *recipients

  // class methods
  +[MFSecureMIMECompositionManager copySigningIdentityForAccount:sendingAddress:error:]
  +[MFSecureMIMECompositionManager copyEncryptionIdentityForAccount:sendingAddress:error:]
  +[MFSecureMIMECompositionManager copyEncryptionCertificatesForAccount:recipientAddress:error:]
  +[MFSecureMIMECompositionManager isRevokedCertificate:sendingAddress:]

  // instance methods
  -[MFSecureMIMECompositionManager recipients]
  -[MFSecureMIMECompositionManager setDelegate:]
  -[MFSecureMIMECompositionManager delegate]
  -[MFSecureMIMECompositionManager dealloc]
  -[MFSecureMIMECompositionManager invalidate]
  -[MFSecureMIMECompositionManager init]
  -[MFSecureMIMECompositionManager addRecipients:]
  -[MFSecureMIMECompositionManager compositionSpecification]
  -[MFSecureMIMECompositionManager initWithSigningPolicy:encryptionPolicy:]
  -[MFSecureMIMECompositionManager initWithSendingAccount:signingPolicy:encryptionPolicy:]
  -[MFSecureMIMECompositionManager removeRecipients:]
  -[MFSecureMIMECompositionManager setSendingAddress:]
  -[MFSecureMIMECompositionManager sendingAddress]
  -[MFSecureMIMECompositionManager sendingAccount]
  -[MFSecureMIMECompositionManager signingPolicy]
  -[MFSecureMIMECompositionManager encryptionPolicy]
  -[MFSecureMIMECompositionManager signingStatus]
  -[MFSecureMIMECompositionManager encryptionStatus]
  -[MFSecureMIMECompositionManager shouldAllowSend]
  -[MFSecureMIMECompositionManager _determineIdentitiesWithSendingAddress:forSigning:encryption:]
  -[MFSecureMIMECompositionManager _determineRevocationStatusWithIdentity:sendingAddress:]
  -[MFSecureMIMECompositionManager _determineSigningStatusWithSendingAddress:]
  -[MFSecureMIMECompositionManager _notifyDelegateSigningStatusDidChange:identity:error:]
  -[MFSecureMIMECompositionManager _updateSigningStatus_nts]
  -[MFSecureMIMECompositionManager _nts_setSigningIdentity:error:]
  -[MFSecureMIMECompositionManager _nts_copySigningIdentity:error:]
  -[MFSecureMIMECompositionManager _determineEncryptionStatusWithSendingAddress:]
  -[MFSecureMIMECompositionManager _determineEncryptionStatusWithNewRecipients:]
  -[MFSecureMIMECompositionManager _updateEncryptionStatus_nts]
  -[MFSecureMIMECompositionManager _nts_setEncryptionIdentity:error:]
  -[MFSecureMIMECompositionManager _nts_copyEncryptionIdentity:error:certificatesByRecipient:errorsByRecipient:]
  -[MFSecureMIMECompositionManager _notifyDelegateEncryptionStatusDidChange:certsByRecipient:errorsByRecipient:identity:error:]
  -[MFSecureMIMECompositionManager _shouldSign_nts]
  -[MFSecureMIMECompositionManager _shouldEncrypt_nts]
  -[MFSecureMIMECompositionManager _shouldAllowSend_nts]


MFSignatures : NSObject
  // class methods
  +[MFSignatures sharedInstance]
  +[MFSignatures signatureMarkupFormat:]
  +[MFSignatures signaturePlainTextFormat:]
  +[MFSignatures stripSignatureMarkup:]

  // instance methods
  -[MFSignatures signature]
  -[MFSignatures dealloc]
  -[MFSignatures setSignature:]
  -[MFSignatures init]
  -[MFSignatures _modelSpecificLocalizedStringKeyForKey:]
  -[MFSignatures defaultSignature]
  -[MFSignatures _getValue:]
  -[MFSignatures clearSignature]
  -[MFSignatures useAccountSignatures]
  -[MFSignatures setUseAccountSignatures:]
  -[MFSignatures signatureForAccount:]
  -[MFSignatures setSignature:forAccount:]
  -[MFSignatures signatureForSendingEmailAddress:]
  -[MFSignatures setSignature:forEmailAddress:]
  -[MFSignatures signatureMarkupForSendingEmailAddress:]
  -[MFSignatures signaturePlainTextForSendingEmailAddress:]
  -[MFSignatures _setValue:value:]


MFSparseMutable64IndexSet : NSObject <NSCopying, NSMutableCopying>
  // class methods
  +[MFSparseMutable64IndexSet indexSet]

  // instance methods
  -[MFSparseMutable64IndexSet _insertionPositionOfIndex:]
  -[MFSparseMutable64IndexSet addIndex:]
  -[MFSparseMutable64IndexSet dealloc]
  -[MFSparseMutable64IndexSet firstIndex]
  -[MFSparseMutable64IndexSet _incrementStorageIfNecessaryForCount:]
  -[MFSparseMutable64IndexSet count]
  -[MFSparseMutable64IndexSet indexGreaterThanIndex:]
  -[MFSparseMutable64IndexSet addIndexes:]
  -[MFSparseMutable64IndexSet _positionOfIndex:]
  -[MFSparseMutable64IndexSet containsIndex:]
  -[MFSparseMutable64IndexSet copyWithZone:]
  -[MFSparseMutable64IndexSet _garbageCollectStorageIfNecessary]
  -[MFSparseMutable64IndexSet mutableCopyWithZone:]
  -[MFSparseMutable64IndexSet removeIndex:]
  -[MFSparseMutable64IndexSet enumerateIndexesWithBlock:]


_MFWeakObjectCacheRef : NSObject
 @property  <NSCopying> *key
 @property  MFWeakObjectCache *cache

  // instance methods
  -[_MFWeakObjectCacheRef setCache:]
  -[_MFWeakObjectCacheRef dealloc]
  -[_MFWeakObjectCacheRef cache]
  -[_MFWeakObjectCacheRef .cxx_destruct]
  -[_MFWeakObjectCacheRef key]
  -[_MFWeakObjectCacheRef setKey:]


MFWeakObjectCache : NSObject
  // instance methods
  -[MFWeakObjectCache dealloc]
  -[MFWeakObjectCache removeObjectForKey:]
  -[MFWeakObjectCache initWithBlock:]
  -[MFWeakObjectCache objectForKey:]
  -[MFWeakObjectCache objectForKey:wasCached:]
  -[MFWeakObjectCache objectForKey:shouldGenerate:wasCached:]
  -[MFWeakObjectCache weakObjectCacheRefForKey:]


MFMimeEnrichedReader : NSObject
  // class methods
  +[MFMimeEnrichedReader punctuationSet]
  +[MFMimeEnrichedReader parenSet]

  // instance methods
  -[MFMimeEnrichedReader dealloc]
  -[MFMimeEnrichedReader setWantsHTML:]
  -[MFMimeEnrichedReader mismatchError:]
  -[MFMimeEnrichedReader appendStringToBuffer:]
  -[MFMimeEnrichedReader resetStateWithString:outputString:]
  -[MFMimeEnrichedReader nowWouldBeAGoodTimeToAppendToTheAttributedString]
  -[MFMimeEnrichedReader closeUpQuoting]
  -[MFMimeEnrichedReader handleNoParameterCommand:]
  -[MFMimeEnrichedReader setupFontStackEntry:]
  -[MFMimeEnrichedReader beginCommand:]
  -[MFMimeEnrichedReader endCommand:]
  -[MFMimeEnrichedReader parseParameterString:]
  -[MFMimeEnrichedReader currentFont]
  -[MFMimeEnrichedReader appendNewLine:]
  -[MFMimeEnrichedReader readTokenInto:]
  -[MFMimeEnrichedReader convertRichTextString:intoOutputString:]
  -[MFMimeEnrichedReader convertEnrichedString:intoOutputString:]


MFMonitoredInvocation : NSInvocation
 @property  MFActivityMonitor *monitor
 @property  BOOL isLowPriority
 @property  NSString *powerAssertionId

  // class methods
  +[MFMonitoredInvocation invocationWithMethodSignature:]
  +[MFMonitoredInvocation invocationWithSelector:target:taskName:priority:canBeCancelled:]
  +[MFMonitoredInvocation invocationWithSelector:target:object:taskName:priority:canBeCancelled:]
  +[MFMonitoredInvocation invocationWithSelector:target:object1:object2:taskName:priority:canBeCancelled:]

  // instance methods
  -[MFMonitoredInvocation monitor]
  -[MFMonitoredInvocation dealloc]
  -[MFMonitoredInvocation setPowerAssertionId:]
  -[MFMonitoredInvocation powerAssertionId]
  -[MFMonitoredInvocation invoke]
  -[MFMonitoredInvocation mf_shouldLogInvocation]
  -[MFMonitoredInvocation setShouldLogInvocation:]
  -[MFMonitoredInvocation isLowPriority]
  -[MFMonitoredInvocation setIsLowPriority:]


MFMessageKeychainManager : NSObject
  // class methods
  +[MFMessageKeychainManager initialize]
  +[MFMessageKeychainManager _passwordForHost:username:port:keychainProtocol:]
  +[MFMessageKeychainManager passwordForHost:username:port:keychainProtocol:]
  +[MFMessageKeychainManager setPassword:forHost:username:port:keychainProtocol:keychainAccessibility:]
  +[MFMessageKeychainManager removePasswordForHost:username:port:keychainProtocol:]
  +[MFMessageKeychainManager _passwordForGenericAccount:service:error:]
  +[MFMessageKeychainManager passwordForServiceName:accountName:synchronizable:error:]
  +[MFMessageKeychainManager passwordForServiceName:accountName:error:]
  +[MFMessageKeychainManager passwordForServiceName:accountName:]
  +[MFMessageKeychainManager addPassword:forServiceName:accountName:keychainAccessibility:synchronizable:error:]
  +[MFMessageKeychainManager setPassword:forServiceName:accountName:keychainAccessibility:]
  +[MFMessageKeychainManager removePasswordForServiceName:accountName:]
  +[MFMessageKeychainManager copySMIMESigningPolicyForAddress:]
  +[MFMessageKeychainManager copySMIMEEncryptionPolicyForAddress:]
  +[MFMessageKeychainManager copyIdentityForPersistentReference:error:]
  +[MFMessageKeychainManager persistentReferenceForIdentity:error:]
  +[MFMessageKeychainManager _matchSSLClientIdentity:withHostname:]
  +[MFMessageKeychainManager copyClientSSLIdentityForHostName:error:]
  +[MFMessageKeychainManager copyAllSigningIdentitiesForAddress:error:]
  +[MFMessageKeychainManager copyAllEncryptionIdentitiesForAddress:error:]
  +[MFMessageKeychainManager _copyAllIdentitiesWithError:usingBlock:]
  +[MFMessageKeychainManager validateSigningIdentity:forAddress:error:]
  +[MFMessageKeychainManager validateEncryptionIdentity:forAddress:error:]
  +[MFMessageKeychainManager _validateIdentity:forAddress:policy:usage:error:]
  +[MFMessageKeychainManager copyEncryptionCertificateForAddress:error:]
  +[MFMessageKeychainManager _addCertificate:persistent:]
  +[MFMessageKeychainManager _copyCertificateForPersistent:error:]
  +[MFMessageKeychainManager _addPersistentMapping:forAddress:]
  +[MFMessageKeychainManager _removeCertificateForPersistent:]
  +[MFMessageKeychainManager saveEncryptionCertificate:forAddress:]
  +[MFMessageKeychainManager newTrustManager]
  +[MFMessageKeychainManager _actionForCertificate:policy:uncommentedAddress:]
  +[MFMessageKeychainManager actionForSigningIdentity:address:]
  +[MFMessageKeychainManager actionForEncryptionCertificate:address:]


MFMessageURLConnectionDelegate : NSObject <NSURLSessionDelegate>
 @property  EFFuture *future
 @property  NSURLResponse *response
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MFMessageURLConnectionDelegate URLSession:dataTask:didReceiveResponse:completionHandler:]
  -[MFMessageURLConnectionDelegate URLSession:task:didCompleteWithError:]
  -[MFMessageURLConnectionDelegate URLSession:dataTask:didReceiveData:]
  -[MFMessageURLConnectionDelegate future]
  -[MFMessageURLConnectionDelegate dealloc]
  -[MFMessageURLConnectionDelegate response]
  -[MFMessageURLConnectionDelegate init]


MFNTLMAuthScheme : MFAuthScheme
  // instance methods
  -[MFNTLMAuthScheme name]
  -[MFNTLMAuthScheme humanReadableName]
  -[MFNTLMAuthScheme authenticatorClass]
  -[MFNTLMAuthScheme sendsPlainTextPasswords]
  -[MFNTLMAuthScheme hasEncryption]


_MFNTLMAuthenticator : MFSASLAuthenticator
  // instance methods
  -[_MFNTLMAuthenticator dealloc]
  -[_MFNTLMAuthenticator responseForServerData:]
  -[_MFNTLMAuthenticator setAuthenticationState:]


MFPlainAuthScheme : MFAuthScheme
  // instance methods
  -[MFPlainAuthScheme name]
  -[MFPlainAuthScheme humanReadableName]
  -[MFPlainAuthScheme canAuthenticateAccountClass:connection:]
  -[MFPlainAuthScheme authenticatorClass]
  -[MFPlainAuthScheme authenticatorForAccount:connection:]


_MFPlainAuthenticator : MFSASLAuthenticator
  // instance methods
  -[_MFPlainAuthenticator responseForServerData:]
  -[_MFPlainAuthenticator saslName]
  -[_MFPlainAuthenticator justSentPlainTextPassword]


_MFLoginAuthenticator : MFSASLAuthenticator
  // instance methods
  -[_MFLoginAuthenticator responseForServerData:]
  -[_MFLoginAuthenticator saslName]
  -[_MFLoginAuthenticator justSentPlainTextPassword]


MFPlainTextFragment : NSObject

MFPlainTextDocument : NSObject
  // instance methods
  -[MFPlainTextDocument string]
  -[MFPlainTextDocument dealloc]
  -[MFPlainTextDocument fragmentCount]
  -[MFPlainTextDocument getFormatFlowedString:insertedTrailingSpaces:encoding:]
  -[MFPlainTextDocument quotedString:]
  -[MFPlainTextDocument appendString:withQuoteLevel:]
  -[MFPlainTextDocument getString:quoteLevel:ofFragmentAtIndex:]
  -[MFPlainTextDocument archivedRepresentation]
  -[MFPlainTextDocument appendArchivedRepresentation:]


MFProgressiveMimeParser : NSObject
  // instance methods
  -[MFProgressiveMimeParser setDelegate:]
  -[MFProgressiveMimeParser dealloc]
  -[MFProgressiveMimeParser setContext:]
  -[MFProgressiveMimeParser _reportError:]
  -[MFProgressiveMimeParser start]
  -[MFProgressiveMimeParser context]
  -[MFProgressiveMimeParser data]
  -[MFProgressiveMimeParser topLevelPart]
  -[MFProgressiveMimeParser initWithBodyData:topLevelHeaders:headersToPreserve:]
  -[MFProgressiveMimeParser noteDataLengthChanged:]
  -[MFProgressiveMimeParser currentPart]
  -[MFProgressiveMimeParser _initializeTopLevelPartWithHeaders:]
  -[MFProgressiveMimeParser _continueParsingStartOfPart]
  -[MFProgressiveMimeParser _continueParsingHeaders]
  -[MFProgressiveMimeParser _currentBoundary]
  -[MFProgressiveMimeParser _continueParsingBody]
  -[MFProgressiveMimeParser _continueParsing]


MFRequestQueue : NSObject
  // instance methods
  -[MFRequestQueue dealloc]
  -[MFRequestQueue init]
  -[MFRequestQueue addRequest:consumer:]
  -[MFRequestQueue willAddRequests:consumers:]
  -[MFRequestQueue addRequests:consumers:]
  -[MFRequestQueue processRequest:consumer:]
  -[MFRequestQueue _processRequests:consumers:]
  -[MFRequestQueue processRequests:consumers:]


MFSASLAuthenticator : NSObject
  // instance methods
  -[MFSASLAuthenticator account]
  -[MFSASLAuthenticator dealloc]
  -[MFSASLAuthenticator securityLayer]
  -[MFSASLAuthenticator authenticationState]
  -[MFSASLAuthenticator setMissingPasswordError]
  -[MFSASLAuthenticator responseForServerData:]
  -[MFSASLAuthenticator setAuthenticationState:]
  -[MFSASLAuthenticator saslName]
  -[MFSASLAuthenticator supportsInitialClientResponse]
  -[MFSASLAuthenticator justSentPlainTextPassword]
  -[MFSASLAuthenticator authScheme]
  -[MFSASLAuthenticator isUsingSSL]
  -[MFSASLAuthenticator couldRetry]
  -[MFSASLAuthenticator initWithAuthScheme:account:connection:]
  -[MFSASLAuthenticator base64EncodeResponseData]


_MFSecCMSDecoder : NSObject <MFCollectingDataConsumer>
 @property  int lastSecCMSError
 @property  NSArray *signers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_MFSecCMSDecoder done]
  -[_MFSecCMSDecoder dealloc]
  -[_MFSecCMSDecoder appendData:]
  -[_MFSecCMSDecoder signedData]
  -[_MFSecCMSDecoder data]
  -[_MFSecCMSDecoder signers]
  -[_MFSecCMSDecoder initWithPartData:error:]
  -[_MFSecCMSDecoder verifyAgainstSenders:signingError:]
  -[_MFSecCMSDecoder isContentEncrypted]
  -[_MFSecCMSDecoder isContentSigned]
  -[_MFSecCMSDecoder lastSecCMSError]


_MFSecCMSEncoder : MFBufferedDataConsumer
 @property  int lastSecCMSError

  // instance methods
  -[_MFSecCMSEncoder done]
  -[_MFSecCMSEncoder dealloc]
  -[_MFSecCMSEncoder appendData:]
  -[_MFSecCMSEncoder data]
  -[_MFSecCMSEncoder lastSecCMSError]
  -[_MFSecCMSEncoder initForSigningWithSender:compositionSpecification:error:]
  -[_MFSecCMSEncoder initForEncryptionWithCompositionSpecification:error:]
  -[_MFSecCMSEncoder _appendBytes:length:]


_MFSecDataMessageStore : MFDataMessageStore
 @property  NSString *storagePath

  // class methods
  +[_MFSecDataMessageStore classForMimePart]


SMTPAccount : DeliveryAccount
  // class methods
  +[SMTPAccount defaultPortNumber]
  +[SMTPAccount newDefaultInstance]
  +[SMTPAccount accountTypeString]
  +[SMTPAccount displayedAccountTypeString]
  +[SMTPAccount displayedShortAccountTypeString]
  +[SMTPAccount legacyKeychainProtocol]
  +[SMTPAccount isCommonPortNumber:]
  +[SMTPAccount saslProfileName]
  +[SMTPAccount registerAppleServiceDeliveryHostname:]

  // instance methods
  -[SMTPAccount connectionServiceType]
  -[SMTPAccount dealloc]
  -[SMTPAccount serviceName]
  -[SMTPAccount checkInConnection:]
  -[SMTPAccount disconnect:]
  -[SMTPAccount releaseAllConnections]
  -[SMTPAccount releaseAllForcedConnections]
  -[SMTPAccount preferredAuthScheme]
  -[SMTPAccount setPreferredAuthScheme:]
  -[SMTPAccount connectionClass]
  -[SMTPAccount certUIService]
  -[SMTPAccount alternateConnectionSettings]
  -[SMTPAccount insecureConnectionSettings]
  -[SMTPAccount secureConnectionSettings]
  -[SMTPAccount _shouldTryDirectSSLConnectionOnPort:]
  -[SMTPAccount deliveryClass]
  -[SMTPAccount canBeFallbackAccount]
  -[SMTPAccount supportsOutboxCopy]
  -[SMTPAccount errorForResponse:]
  -[SMTPAccount supportsPipelining]
  -[SMTPAccount connectionExpired:]
  -[SMTPAccount setTimer]
  -[SMTPAccount setDeliveryClass:]
  -[SMTPAccount _defaultSettingsWithPort:useSSL:directSSL:]
  -[SMTPAccount connectionSettingsForAuthentication:secure:insecure:]
  -[SMTPAccount customAuthenticationErrorStringForError:authScheme:]
  -[SMTPAccount setSupportsPipelining:]
  -[SMTPAccount setSupportsOutboxCopy:]
  -[SMTPAccount authenticatedConnection:]
  -[SMTPAccount _isAppleServiceDeliveryHostname:]


MFSMTPConnection : MFConnection
  // instance methods
  -[MFSMTPConnection abort]
  -[MFSMTPConnection setDelegate:]
  -[MFSMTPConnection setDomainName:]
  -[MFSMTPConnection state]
  -[MFSMTPConnection dealloc]
  -[MFSMTPConnection domainName]
  -[MFSMTPConnection init]
  -[MFSMTPConnection sendData:]
  -[MFSMTPConnection authenticationMechanisms]
  -[MFSMTPConnection connectUsingAccount:]
  -[MFSMTPConnection authenticateUsingAccount:]
  -[MFSMTPConnection authenticateUsingAccount:authenticator:]
  -[MFSMTPConnection maximumMessageBytes]
  -[MFSMTPConnection supportsOutboxCopy]
  -[MFSMTPConnection noop]
  -[MFSMTPConnection lastResponse]
  -[MFSMTPConnection supportsPipelining]
  -[MFSMTPConnection supportsEnhancedStatusCodes]
  -[MFSMTPConnection supportsChunking]
  -[MFSMTPConnection rcptTo:]
  -[MFSMTPConnection sendBData:]
  -[MFSMTPConnection quit]
  -[MFSMTPConnection dataForRcptTo:]
  -[MFSMTPConnection dataForDataCmd]
  -[MFSMTPConnection timeLastCommandWasSent]
  -[MFSMTPConnection _sendBytes:length:progressHandler:]
  -[MFSMTPConnection _sendData:]
  -[MFSMTPConnection _sendData:progressHandler:]
  -[MFSMTPConnection _dataForCommand:length:argument:trailer:]
  -[MFSMTPConnection _sendCommand:length:argument:trailer:]
  -[MFSMTPConnection _getReply]
  -[MFSMTPConnection _readResponseRange:isContinuation:]
  -[MFSMTPConnection _connectUsingAccount:]
  -[MFSMTPConnection _doHandshakeUsingAccount:]
  -[MFSMTPConnection _hasParameter:forKeyword:]
  -[MFSMTPConnection _supportsExtension:]
  -[MFSMTPConnection _setLastResponse:]
  -[MFSMTPConnection lastResponseLine]
  -[MFSMTPConnection _supportsSaveSentExtension]
  -[MFSMTPConnection setUseSaveSent:toFolder:]
  -[MFSMTPConnection supports8BitMime]
  -[MFSMTPConnection supportsBinaryMime]
  -[MFSMTPConnection mailFrom:]
  -[MFSMTPConnection dataForMailFrom:]
  -[MFSMTPConnection mailFrom:recipients:withData:host:errorTitle:errorMessage:serverResponse:displayError:errorCode:errorUserInfo:]


MFSMTPDelivery : MFMailDelivery
  // instance methods
  -[MFSMTPDelivery setAccount:]
  -[MFSMTPDelivery dealloc]
  -[MFSMTPDelivery _openConnection]
  -[MFSMTPDelivery deliveryClass]
  -[MFSMTPDelivery deliverMessageData:toRecipients:]


MFSMTPResponse : NSObject <NSCopying>
 @property  int status
 @property  unsigned int statusClass
 @property  unsigned int statusSubject
 @property  unsigned int statusDetail
 @property  NSString *statusString
 @property  NSArray *continuationResponses

  // instance methods
  -[MFSMTPResponse status]
  -[MFSMTPResponse dealloc]
  -[MFSMTPResponse setStatus:]
  -[MFSMTPResponse initWithStatus:]
  -[MFSMTPResponse copyWithZone:]
  -[MFSMTPResponse failureReason]
  -[MFSMTPResponse statusString]
  -[MFSMTPResponse lastResponseLine]
  -[MFSMTPResponse _updateEnhancedStatusCodesFromLastResponse]
  -[MFSMTPResponse setLastResponseLine:]
  -[MFSMTPResponse errorMessageWithAddress:defaultMessage:]
  -[MFSMTPResponse statusClass]
  -[MFSMTPResponse statusSubject]
  -[MFSMTPResponse statusDetail]
  -[MFSMTPResponse continuationResponses]
  -[MFSMTPResponse setContinuationResponses:]


MFWebAttachmentSource : NSObject
  // class methods
  +[MFWebAttachmentSource _setOfAllSources]
  +[MFWebAttachmentSource allSources]

  // instance methods
  -[MFWebAttachmentSource dealloc]
  -[MFWebAttachmentSource init]
  -[MFWebAttachmentSource removeAttachmentForURL:]
  -[MFWebAttachmentSource attachmentForURL:]
  -[MFWebAttachmentSource setAttachment:forURL:]


MFWebMessageDocument : MFWebAttachmentSource
 @property  BOOL visuallyEmpty
 @property  NSURL *baseURL
 @property  MFMimeBody *mimeBody
 @property  MFMimePart *mimePart
 @property  NSData *htmlData
 @property  unsigned int preferredEncoding
 @property  MFAttachmentManager *attachmentManager

  // instance methods
  -[MFWebMessageDocument baseURL]
  -[MFWebMessageDocument dealloc]
  -[MFWebMessageDocument attachmentManager]
  -[MFWebMessageDocument init]
  -[MFWebMessageDocument fileWrapper]
  -[MFWebMessageDocument setPreferredEncoding:]
  -[MFWebMessageDocument mimeBody]
  -[MFWebMessageDocument preferredEncoding]
  -[MFWebMessageDocument initWithMimePart:]
  -[MFWebMessageDocument htmlData]
  -[MFWebMessageDocument attachmentForURL:]
  -[MFWebMessageDocument initWithMimeBody:]
  -[MFWebMessageDocument _initWithMimePart:htmlData:]
  -[MFWebMessageDocument initWithMimePart:htmlData:encoding:]
  -[MFWebMessageDocument mimePartForURL:]
  -[MFWebMessageDocument attachmentsInDocument]
  -[MFWebMessageDocument preferredCharacterSet]
  -[MFWebMessageDocument mimePart]
  -[MFWebMessageDocument isVisuallyEmpty]
  -[MFWebMessageDocument setVisuallyEmpty:]
  -[MFWebMessageDocument setAttachmentManager:]


NSError(MFAccount)
	// instance methods
	-[NSError(MFAccount) mf_isMissingAccountCredentialError]
	-[NSError(MFAccount) mf_isInaccessibleAccountCredentialError]
	-[NSError(MFAccount) mf_moreInfo]
	-[NSError(MFAccount) mf_shortDescription]
	-[NSError(MFAccount) mf_isUserCancelledError]
	-[NSError(MFAccount) mf_isSMIMEError]
	-[NSError(MFAccount) mf_shouldBeReportedToUser]
	-[NSError(MFAccount) mf_shouldFailDownload]

(FormatFlowedSupportInternal)
	// class methods
	+[(FormatFlowedSupportInternal) mf_stringFromMimeRichTextString:asHTML:]
	+[(FormatFlowedSupportInternal) mf_stringFromMimeEnrichedString:asHTML:]
	+[(FormatFlowedSupportInternal) mf_messageIDStringWithDomainHint:]
	+[(FormatFlowedSupportInternal) mf_stringRepresentationForBytes:]
	+[(FormatFlowedSupportInternal) mf_stringWithAttachmentCharacter]
	+[(FormatFlowedSupportInternal) mf_stringForMimeTypeFromFileName:]
	+[(FormatFlowedSupportInternal) mf_UUID]

	// instance methods
	-[(FormatFlowedSupportInternal) mf_lineBreakBeforeIndex:withinRange:]
	-[(FormatFlowedSupportInternal) mf_nextWordFromIndex:forward:]
	-[(FormatFlowedSupportInternal) mf_convertFromFlowedText:visuallyEmpty:]
	-[(FormatFlowedSupportInternal) mf_fileSystemString]
	-[(FormatFlowedSupportInternal) mf_stringWithNoExtraSpaces]
	-[(FormatFlowedSupportInternal) mf_uniqueFilenameWithRespectToFilenames:]
	-[(FormatFlowedSupportInternal) mf_stringByEscapingHTMLCodes]
	-[(FormatFlowedSupportInternal) mf_containsSubstring:options:]
	-[(FormatFlowedSupportInternal) mf_containsSubstring:]
	-[(FormatFlowedSupportInternal) mf_stringByTrimmingWhitespaceAndNewlineCharacters]
	-[(FormatFlowedSupportInternal) mf_prefixToString:]
	-[(FormatFlowedSupportInternal) mf_makeDirectoryWithMode:]
	-[(FormatFlowedSupportInternal) mf_isSubdirectoryOfPath:]
	-[(FormatFlowedSupportInternal) mf_stringByReallyAbbreviatingSharedResourcesDirectoryWithTildeInPath]
	-[(FormatFlowedSupportInternal) mf_betterStringByResolvingSymlinksInPath]
	-[(FormatFlowedSupportInternal) mf_canonicalizedAbsolutePath]
	-[(FormatFlowedSupportInternal) mf_stringByExpandingTildeWithSharedResourcesDirectoryInPath]
	-[(FormatFlowedSupportInternal) mf_stringByAbbreviatingSharedResourcesDirectoryWithTildeInPath]
	-[(FormatFlowedSupportInternal) mf_stringByLocalizingReOrFwdPrefix]
	-[(FormatFlowedSupportInternal) mf_stringByEscapingForXML]
	-[(FormatFlowedSupportInternal) mf_caseInsensitiveIsEqualToString:]

(Goodies)
	// instance methods
	-[(Goodies) mf_descriptionForMimeHeaders]
	-[(Goodies) mf_replyPrefixForSender:]

(Goodies)
	// instance methods
	-[(Goodies) mf_boolForKey:]
	-[(Goodies) mf_integerForKey:]

<DEREK BUG Categories!>(Goodies)
	// instance methods
	-[<DEREK BUG Categories!>(Goodies) mf_setBool:forKey:]
	-[<DEREK BUG Categories!>(Goodies) mf_setInteger:forKey:]
	-[<DEREK BUG Categories!>(Goodies) mf_addObject:forKey:]
	-[<DEREK BUG Categories!>(Goodies) mf_objectForKey:ofClass:]

(SortedMailboxes)
	// instance methods
	-[(SortedMailboxes) mf_indexOfMailboxDictionaryWithName:]
	-[(SortedMailboxes) mf_enumerateByStoreUsingBlock:]

MFMessage(MailMessage)
	// instance methods
	-[MFMessage(MailMessage) attachmentStorageLocation]

MFMessageStore(MailMessageStore)
	// instance methods
	-[MFMessageStore(MailMessageStore) storagePath]
	-[MFMessageStore(MailMessageStore) setStoragePath:]

(MainThreadMessaging)
	// instance methods
	-[(MainThreadMessaging) mf_performOnewaySelectorInMainThread:withObject:withObject:]

NSInvocation(MailExtensions)
	// class methods
	+[NSInvocation(MailExtensions) mf_invocationWithSelector:target:]
	+[NSInvocation(MailExtensions) mf_invocationWithSelector:target:object:]
	+[NSInvocation(MailExtensions) mf_invocationWithSelector:target:object1:object2:]

	// instance methods
	-[NSInvocation(MailExtensions) mf_shouldLogInvocation]

NSIndexSet(Additions)
	// instance methods
	-[NSIndexSet(Additions) mf_commaSeparatedString]

NSMutableIndexSet(Additions)
	// instance methods
	-[NSMutableIndexSet(Additions) mf_intersectIndexes:]

NSNotificationCenter(MessageAdditions)
	// instance methods
	-[NSNotificationCenter(MessageAdditions) mf_addImmediateObserver:selector:name:object:]
	-[NSNotificationCenter(MessageAdditions) mf_removeObservers:]

<DEREK BUG Categories!>(Additions)
	// instance methods
	-[<DEREK BUG Categories!>(Additions) mf_debugDescription]

(AttachmentURLUtilities)
	// instance methods
	-[(AttachmentURLUtilities) mf_isValidAttachmentURL]
	-[(AttachmentURLUtilities) mf_isResourceURL]
	-[(AttachmentURLUtilities) mf_rowID]
	-[(AttachmentURLUtilities) mf_partNumbers]
	-[(AttachmentURLUtilities) mf_lastPartNumber]
	-[(AttachmentURLUtilities) mf_firstPartNumber]

MFMimePart(SMIMESupport)
	// instance methods
	-[MFMimePart(SMIMESupport) SMIMEError]
	-[MFMimePart(SMIMESupport) copySigners]
	-[MFMimePart(SMIMESupport) decodeMultipartSigned]
	-[MFMimePart(SMIMESupport) decodeApplicationPkcs7_mime]
	-[MFMimePart(SMIMESupport) newSignedPartWithData:sender:compositionSpecification:signatureData:]
	-[MFMimePart(SMIMESupport) newEncryptedPartWithData:compositionSpecification:encryptedData:]
	-[MFMimePart(SMIMESupport) _setSMIMEError:]
	-[MFMimePart(SMIMESupport) _setSigners:]
	-[MFMimePart(SMIMESupport) _needsSignatureVerification:]

01 00 0c00 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccount 
01 00 0c00 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountCredential 
01 00 0c00 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountStore 
01 00 0f00 /System/Library/PrivateFrameworks/AssertionServices.framework/AssertionServices: BKSApplicationStateMonitor 
01 00 0e00 /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport: CPAggregateDictionary 
01 00 1700 /System/Library/Frameworks/CoreTelephony.framework/CoreTelephony: CTBundle 
01 00 0100 /System/Library/Frameworks/CallKit.framework/CallKit: CXCallObserver 
01 00 1100 /System/Library/PrivateFrameworks/CertUI.framework/CertUI: CertUIPrompt 
01 00 1100 /System/Library/PrivateFrameworks/CertUI.framework/CertUI: CertUITrustManager 
01 00 1700 /System/Library/Frameworks/CoreTelephony.framework/CoreTelephony: CoreTelephonyClient 
01 00 1800 /System/Library/PrivateFrameworks/EmailCore.framework/EmailCore: ECIDNAEncoder 
01 00 1800 /System/Library/PrivateFrameworks/EmailCore.framework/EmailCore: ECSubject 
01 00 1900 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFCancelationToken 
01 00 1900 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFDevice 
01 00 1900 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFFuture 
01 00 1900 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFObservable 
01 00 1900 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFObserver 
01 00 1900 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFPriorityDesignator 
01 00 1900 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFPromise 
01 00 1900 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFScheduler 
01 00 1900 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFStringHash 
01 00 1f00 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFBase64Decoder 
01 00 1f00 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFBase64Encoder 
01 00 1f00 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFBaseFilterDataConsumer 
01 00 1f00 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFBufferedDataConsumer 
01 00 1f00 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFConditionLock 
01 00 1f00 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFData 
01 00 1f00 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFDataHolder 
01 00 1f00 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFDataMessageStore 
01 00 1f00 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFDiagnostics 
01 00 1f00 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFHTMLParser 
01 00 1f00 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFLineEndingConverterFilter 
01 00 1f00 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFLock 
01 00 1f00 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFMessage 
01 00 1f00 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFMessageBody 
01 00 1f00 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFMessageDataContainer 
01 00 1f00 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFMessageFileWrapper 
01 00 1f00 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFMessageHeaders 
01 00 1f00 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFMessageStore 
01 00 1f00 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFMessageStoreObjectCache 
01 00 1f00 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFMessageTextAttachment 
01 00 1f00 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFMimeBody 
01 00 1f00 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFMimeCharset 
01 00 1f00 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFMimePart 
01 00 1f00 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFMimeTextAttachment 
01 00 1f00 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFMutableData 
01 00 1f00 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFMutableFilterDataConsumer 
01 00 1f00 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFMutableMessageHeaders 
01 00 1f00 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFProgressFilterDataConsumer 
01 00 1f00 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFQuotedPrintableDecoder 
01 00 1f00 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFQuotedPrintableEncoder 
01 00 1f00 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFRangedDataFilter 
01 00 1f00 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFRecursiveLock 
01 00 1f00 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFTypeInfo 
01 00 1f00 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFUUDecoderFilter 
01 00 1f00 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFWeakReferenceHolder 
01 00 1f00 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFWeakSet 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 1a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 1a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAutoreleasePool 
01 00 1a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCache 
01 00 1a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 1a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCondition 
01 00 1a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConditionLock 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 1a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCountedSet 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSEnumerator 
01 00 1a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileCoordinator 
01 00 1a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 1a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexSet 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSInvocation 
01 00 1a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 1a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSLock 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 1a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 1a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotification 
01 00 1a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 1a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0800 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 1a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 1a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProgress 
01 00 1a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 1a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSRecursiveLock 
01 00 1a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 1a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSScanner 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 1a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 1a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLFileTypeMappings 
01 00 1200 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLSession 
01 00 1200 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLSessionConfiguration 
01 00 1a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUserActivity 
01 00 1600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0e00 /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport: RadiosPreferences 
