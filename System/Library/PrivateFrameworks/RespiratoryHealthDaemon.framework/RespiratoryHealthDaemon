|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDRPOxygenSaturationSessionServer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDRPRespiratoryDailyAnalytics
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDRespiratoryProfileExtension
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDRPOxygenSaturationSessionServer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDRPRespiratoryDailyAnalytics
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDRespiratoryProfileExtension
__ CoreAnalytics: _AnalyticsIsEventUsed
__ CoreAnalytics: _AnalyticsSendEvent
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___kCFBooleanTrue
__ Foundation: _NSStringFromSelector
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateInterval
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSListFormatter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ HealthDaemon: _HDDataEntityPredicateForObjectsFromAppleWatchSources
__ HealthDaemon: _HDSampleEntityPredicateForDateInterval
__ HealthDaemon: _OBJC_CLASS_$_HDFeatureAvailabilityManager
__ HealthDaemon: _OBJC_CLASS_$_HDNanoRegistryPairedDeviceCapabilityProvider
__ HealthDaemon: _OBJC_CLASS_$_HDPairedFeaturePropertiesSyncManager
__ HealthDaemon: _OBJC_CLASS_$_HDPeriodicActivity
__ HealthDaemon: _OBJC_CLASS_$_HDProfile
__ HealthDaemon: _OBJC_CLASS_$_HDRegionAvailabilityDataSourceWithNanoRegistryFallback
__ HealthDaemon: _OBJC_CLASS_$_HDSQLiteCompoundPredicate
__ HealthDaemon: _OBJC_CLASS_$_HDSampleEntity
__ HealthDaemon: _OBJC_CLASS_$_HDStandardTaskServer
__ HealthDaemon: _OBJC_CLASS_$_HDWatchAndCompanionCountryListIntersectionAvailabilityProvider
__ HealthDaemon: _OBJC_CLASS_$_HDWatchRemoteFeatureAvailabilityProvider
__ HealthDaemon: _OBJC_METACLASS_$_HDStandardTaskServer
__ HealthKit: _HKCreateSerialDispatchQueue
__ HealthKit: _HKCreateSerialDispatchQueueWithQOSClass
__ HealthKit: _HKFeatureFlagBloodOxygenSaturationEnabled
__ HealthKit: _HKFeatureIdentifierOxygenSaturationRecording
__ HealthKit: _HKLogRespiratory
__ HealthKit: _HKMetadataKeyBarometricPressure
__ HealthKit: _HKOxygenSaturationLowBarometricPressureThresholdQuantity
__ HealthKit: _HKPrivateHealthKitEntitlement
__ HealthKit: _HKQuantityTypeIdentifierHeartRate
__ HealthKit: _HKRespiratoryDefaultsDomain
__ HealthKit: _OBJC_CLASS_$_HKCountrySet
__ HealthKit: _OBJC_CLASS_$_HKFeatureAvailabilityRequirementSet
__ HealthKit: _OBJC_CLASS_$_HKObjectType
__ HealthKit: _OBJC_CLASS_$_HKQuantity
__ HealthKit: _OBJC_CLASS_$_HKSampleType
__ HealthKit: _OBJC_CLASS_$_HKUnit
__ HealthKit: _OBJC_CLASS_$__HKBehavior
__ HealthKit: __HKInitializeLogging
__ HealthKit: __HKLogDroppedError
__ HealthKit: __HKPrivateMetadataKeyBloodOxygenContext
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ NanoRegistry: _NRDevicePropertyOxygenSaturationAvailableRegions
__ NanoRegistry: _NRDevicePropertySystemBuildVersion
__ NanoRegistry: _OBJC_CLASS_$_NRPairedDeviceRegistry
__ QuartzCore: _CACurrentMediaTime
__ RespiratoryHealth: _HKRPBloodOxygenAppBundleIdentifier
__ RespiratoryHealth: _HKRPOxygenSaturationLocalFeatureAttributes
__ RespiratoryHealth: _HKRPShouldSkipHardwareCheck
__ RespiratoryHealth: _HKRespiratoryPluginIdentifier
__ RespiratoryHealth: _OBJC_CLASS_$_HKRPOxygenSaturationAvailability
__ RespiratoryHealth: _OBJC_CLASS_$_HKRPOxygenSaturationOnboardingCacher
__ RespiratoryHealth: _OBJC_CLASS_$_HKRPOxygenSaturationSession
__ RespiratoryHealth: _OBJC_CLASS_$_HKRPOxygenSaturationSettings
__ RespiratoryHealth: _OBJC_CLASS_$_HKRPUserDefaultsSyncProvider
__ RespiratoryHealth: __HDRPOxygenSaturationSessionServerIdentifier
__ libSystem.B.dylib: _XPC_ACTIVITY_ALLOW_BATTERY
__ libSystem.B.dylib: _XPC_ACTIVITY_GRACE_PERIOD
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_1_HOUR
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_8_HOURS
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY_UTILITY
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _xpc_dictionary_set_bool
__ libSystem.B.dylib: _xpc_dictionary_set_double
__ libSystem.B.dylib: _xpc_dictionary_set_string
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
HDRPDailyAnalyticsReport : NSObject
 @property  NSCalendar *calendar
 @property  NSDate *startTime
 @property  NSDate *endTime
 @property  HDProfile *profile
 @property  <HKFeatureAvailabilityProviding> *featureAvailabilityProvider
 @property  NRPairedDeviceRegistry *pairedDeviceRegistry
 @property  HKRPOxygenSaturationSettings *oxygenSaturationSettings
 @property  NSUserDefaults *controlCenterUserDefaults
 @property  BOOL healthDataCollectionAllowed

  // instance methods
  -[HDRPDailyAnalyticsReport endTime]
  -[HDRPDailyAnalyticsReport .cxx_destruct]
  -[HDRPDailyAnalyticsReport calendar]
  -[HDRPDailyAnalyticsReport featureAvailabilityProvider]
  -[HDRPDailyAnalyticsReport startTime]
  -[HDRPDailyAnalyticsReport profile]
  -[HDRPDailyAnalyticsReport pairedDeviceRegistry]
  -[HDRPDailyAnalyticsReport _hasCompatiblePairedAppleWatch]
  -[HDRPDailyAnalyticsReport oxygenSaturationSettings]
  -[HDRPDailyAnalyticsReport _queryForBackgroundOxygenSaturationSamplesInPreviousDayAndReturnError:]
  -[HDRPDailyAnalyticsReport isHealthDataCollectionAllowed]
  -[HDRPDailyAnalyticsReport _queryForOxygenSaturationSamplesInPreviousDayAndReturnError:]
  -[HDRPDailyAnalyticsReport _queryForHasWornWatchInPreviousDayAndReturnError:]
  -[HDRPDailyAnalyticsReport _gatherDiagnosticAndUsageReportFromBackgroundOxygenSaturationSamplesInPreviousDay:wasWorn:error:]
  -[HDRPDailyAnalyticsReport _gatherImproveHealthAndActivityReportFromBackgroundOxygenSaturationSamplesInPreviousDay:oxygenSaturationSamplesInPreviousDay:error:]
  -[HDRPDailyAnalyticsReport _numberOfWeeksSinceOnboardedAndReturnError:]
  -[HDRPDailyAnalyticsReport _activePairedWatchBuild]
  -[HDRPDailyAnalyticsReport controlCenterUserDefaults]
  -[HDRPDailyAnalyticsReport _numberOfSamplesWithHeartRateGreaterThan100BPMFromSamples:]
  -[HDRPDailyAnalyticsReport _numberOfSamplesWithExerciseMinute5MinutesPriorInPreviousDayAndReturnError:]
  -[HDRPDailyAnalyticsReport _numberOfForegroundSamplesFromSamples:]
  -[HDRPDailyAnalyticsReport _numberOfEveningSamplesFromSamples:]
  -[HDRPDailyAnalyticsReport _numberOfSamplesWithHighElevationTakeFromSamples:]
  -[HDRPDailyAnalyticsReport _numberOfSamplesByTruncatedOxygenSaturationValueFromSamples:keyPrefix:]
  -[HDRPDailyAnalyticsReport _dateIntervalForPreviousDays:]
  -[HDRPDailyAnalyticsReport initWithDate:profile:pairedDeviceRegistry:featureAvailabilityProvider:oxygenSaturationSettings:controlCenterUserDefaults:healthDataCollectionAllowed:]
  -[HDRPDailyAnalyticsReport generatePayloadAndReturnError:]


HLHeartRateData : NSObject
 @property  NSDate *timestamp
 @property  double heartRate
 @property  double confidence
 @property  unsigned long confidenceLevel
 @property  int context
 @property  NSUUID *uuid

  // instance methods
  -[HLHeartRateData confidenceLevel]
  -[HLHeartRateData .cxx_destruct]
  -[HLHeartRateData confidence]
  -[HLHeartRateData heartRate]
  -[HLHeartRateData uuid]
  -[HLHeartRateData timestamp]
  -[HLHeartRateData setUuid:]
  -[HLHeartRateData context]
  -[HLHeartRateData setHeartRate:]


HLOxygenSaturationMeasurement : NSObject
 @property  NSDateInterval *dateInterval
 @property  NSNumber *oxygenSaturationPercentage
 @property  HLHeartRateData *averageHeartRateData
 @property  NSNumber *pressureInKilopascals

  // instance methods
  -[HLOxygenSaturationMeasurement setDateInterval:]
  -[HLOxygenSaturationMeasurement .cxx_destruct]
  -[HLOxygenSaturationMeasurement dateInterval]
  -[HLOxygenSaturationMeasurement oxygenSaturationPercentage]
  -[HLOxygenSaturationMeasurement setOxygenSaturationPercentage:]
  -[HLOxygenSaturationMeasurement averageHeartRateData]
  -[HLOxygenSaturationMeasurement setAverageHeartRateData:]
  -[HLOxygenSaturationMeasurement pressureInKilopascals]
  -[HLOxygenSaturationMeasurement setPressureInKilopascals:]


HLOxygenSaturationSession : NSObject
 @property  <HLOxygenSaturationSessionDelegate> *delegate
 @property  NSObject<OS_dispatch_queue> *queue

  // instance methods
  -[HLOxygenSaturationSession begin]
  -[HLOxygenSaturationSession .cxx_destruct]
  -[HLOxygenSaturationSession abort]
  -[HLOxygenSaturationSession setDelegate:]
  -[HLOxygenSaturationSession setQueue:]
  -[HLOxygenSaturationSession delegate]
  -[HLOxygenSaturationSession queue]
  -[HLOxygenSaturationSession initWithDelegate:onQueue:]
  -[HLOxygenSaturationSession unitTesting_deliverFeedback:]
  -[HLOxygenSaturationSession unitTesting_endSessionWithReason:saturation:barometricPressure:averageHeartRate:averageHeartRateUUID:]


HDRespiratoryProfileExtension : NSObject <HDFeatureAvailabilityExtensionObserver, HDProfileExtension, HDFeatureAvailabilityExtensionProvider>
 @property  @? unitTesting_healthLiteSessionWithDelegateHandler
 @property  HDRPFeatureAvailabilityManager *featureAvailabilityManager
 @property  HDProfile *profile
 @property  HDRPRespiratoryDailyAnalytics *dailyAnalytics
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HDRespiratoryProfileExtension initWithProfile:forcingFeaturesEnabled:featureAvailabilityManager:]
  -[HDRespiratoryProfileExtension dailyAnalytics]
  -[HDRespiratoryProfileExtension featureAvailabilityExtensionOnboardingCompletionDataDidBecomeAvailable:]
  -[HDRespiratoryProfileExtension initWithProfile:]
  -[HDRespiratoryProfileExtension featureAvailabilityExtensionForFeatureIdentifier:]
  -[HDRespiratoryProfileExtension .cxx_destruct]
  -[HDRespiratoryProfileExtension setUnitTesting_healthLiteSessionWithDelegateHandler:]
  -[HDRespiratoryProfileExtension _updateBackgroundMeasurmentsSettings]
  -[HDRespiratoryProfileExtension featureAvailabilityExtensionDidUpdateRegionAvailability:]
  -[HDRespiratoryProfileExtension featureAvailabilityManager]
  -[HDRespiratoryProfileExtension profile]
  -[HDRespiratoryProfileExtension oxygenSaturationSessionWithDelegate:queue:]
  -[HDRespiratoryProfileExtension featureAvailabilityProvidingDidUpdateOnboardingCompletion:]
  -[HDRespiratoryProfileExtension featureAvailabilityProvidingDidUpdatePairedDeviceCapability:]
  -[HDRespiratoryProfileExtension setFeatureAvailabilityManager:]
  -[HDRespiratoryProfileExtension unitTesting_healthLiteSessionWithDelegateHandler]
  -[HDRespiratoryProfileExtension initWithProfile:forcingFeaturesEnabled:]


HDRPRespiratoryDailyAnalytics : NSObject <HDHealthDaemonReadyObserver, HDPeriodicActivityDelegate>
 @property  HDProfile *profile
 @property  double calculationPeriod
 @property  double retryPeriod
 @property  HDPeriodicActivity *periodicActivity
 @property  NSObject<OS_dispatch_queue> *queue
 @property  <HKFeatureAvailabilityProviding> *featureAvailabilityProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HDRPRespiratoryDailyAnalytics calculationPeriod]
  -[HDRPRespiratoryDailyAnalytics daemonReady:]
  -[HDRPRespiratoryDailyAnalytics retryPeriod]
  -[HDRPRespiratoryDailyAnalytics _gatherAndSendDailyAnalyticsAndReturnError:]
  -[HDRPRespiratoryDailyAnalytics setPeriodicActivity:]
  -[HDRPRespiratoryDailyAnalytics periodicActivity:configureXPCActivityCriteria:]
  -[HDRPRespiratoryDailyAnalytics periodicActivityRequiresProtectedData:]
  -[HDRPRespiratoryDailyAnalytics .cxx_destruct]
  -[HDRPRespiratoryDailyAnalytics performPeriodicActivity:completion:]
  -[HDRPRespiratoryDailyAnalytics periodicActivity]
  -[HDRPRespiratoryDailyAnalytics initWithProfile:featureAvailabilityProvider:]
  -[HDRPRespiratoryDailyAnalytics featureAvailabilityProvider]
  -[HDRPRespiratoryDailyAnalytics _hasAnalyticsBeenReportedForToday:]
  -[HDRPRespiratoryDailyAnalytics profile]
  -[HDRPRespiratoryDailyAnalytics queue]


HDRPFeatureAvailabilityManager : NSObject <HDFeatureAvailabilityExtension>
 @property  long long currentOnboardingVersion
 @property  NSString *featureIdentifier

  // instance methods
  -[HDRPFeatureAvailabilityManager earliestDateLowestOnboardingVersionCompletedWithError:]
  -[HDRPFeatureAvailabilityManager removeFeatureSettingValueForKey:completion:]
  -[HDRPFeatureAvailabilityManager regionAvailabilityWithError:]
  -[HDRPFeatureAvailabilityManager setCurrentOnboardingVersion:]
  -[HDRPFeatureAvailabilityManager onboardedCountryCodeSupportedStateWithError:]
  -[HDRPFeatureAvailabilityManager setFeatureSettingData:forKey:completion:]
  -[HDRPFeatureAvailabilityManager canCompleteOnboardingForCountryCode:error:]
  -[HDRPFeatureAvailabilityManager isCurrentOnboardingVersionCompletedWithError:]
  -[HDRPFeatureAvailabilityManager resetOnboardingWithCompletion:]
  -[HDRPFeatureAvailabilityManager highestOnboardingVersionCompletedWithError:]
  -[HDRPFeatureAvailabilityManager unregisterObserver:]
  -[HDRPFeatureAvailabilityManager setFeatureSettingNumber:forKey:completion:]
  -[HDRPFeatureAvailabilityManager pairedFeatureAttributesWithError:]
  -[HDRPFeatureAvailabilityManager saveOnboardingCompletion:settings:completion:]
  -[HDRPFeatureAvailabilityManager onboardingEligibilityForCountryCode:error:]
  -[HDRPFeatureAvailabilityManager getFeatureOnboardingRecordWithCompletion:]
  -[HDRPFeatureAvailabilityManager featureAvailabilityRequirementsWithError:]
  -[HDRPFeatureAvailabilityManager currentOnboardingVersion]
  -[HDRPFeatureAvailabilityManager isCurrentOnboardingVersionCompletedWithCompletion:]
  -[HDRPFeatureAvailabilityManager isFeatureCapabilitySupportedOnActivePairedDeviceWithError:]
  -[HDRPFeatureAvailabilityManager initWithProfile:currentOnboardingVersion:regionAvailabilityProvider:pairedDeviceCapabilityProvider:remoteAvailabilityProvider:]
  -[HDRPFeatureAvailabilityManager setFeatureSettingString:forKey:completion:]
  -[HDRPFeatureAvailabilityManager featureOnboardingRecordWithError:]
  -[HDRPFeatureAvailabilityManager registerObserver:queue:]
  -[HDRPFeatureAvailabilityManager initWithProfile:]
  -[HDRPFeatureAvailabilityManager _resetOnboarding]
  -[HDRPFeatureAvailabilityManager featureIdentifier]
  -[HDRPFeatureAvailabilityManager .cxx_destruct]
  -[HDRPFeatureAvailabilityManager setCurrentOnboardingVersionCompletedForCountryCode:countryCodeProvenance:date:settings:completion:]
  -[HDRPFeatureAvailabilityManager initWithProfile:featureIdentifier:currentOnboardingVersion:regionAvailabilityProvider:pairedDeviceCapability:loggingCategory:skipHardwareCheck:pairedDeviceCapabilityProvider:remoteAvailabilityProvider:]


HDRPOxygenSaturationSessionServer : HDStandardTaskServer <HKRPOxygenSaturationSessionServerInterface, HLOxygenSaturationSessionDelegate>
 @property  NSObject<OS_dispatch_queue> *queue
 @property  long long sessionState
 @property  HLOxygenSaturationSession *sensorSession
 @property  double startTime
 @property  double expectedDuration
 @property  NSDate *expectedEndDate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HDRPOxygenSaturationSessionServer requiredEntitlements]
  +[HDRPOxygenSaturationSessionServer taskIdentifier]

  // instance methods
  -[HDRPOxygenSaturationSessionServer connectionInterrupted]
  -[HDRPOxygenSaturationSessionServer remoteInterface]
  -[HDRPOxygenSaturationSessionServer remote_startWithCompletion:]
  -[HDRPOxygenSaturationSessionServer remote_abortWithCompletion:]
  -[HDRPOxygenSaturationSessionServer setStartTime:]
  -[HDRPOxygenSaturationSessionServer .cxx_destruct]
  -[HDRPOxygenSaturationSessionServer setQueue:]
  -[HDRPOxygenSaturationSessionServer expectedDuration]
  -[HDRPOxygenSaturationSessionServer startTime]
  -[HDRPOxygenSaturationSessionServer setSessionState:]
  -[HDRPOxygenSaturationSessionServer sessionState]
  -[HDRPOxygenSaturationSessionServer setExpectedDuration:]
  -[HDRPOxygenSaturationSessionServer exportedInterface]
  -[HDRPOxygenSaturationSessionServer queue]
  -[HDRPOxygenSaturationSessionServer connectionInvalidated]
  -[HDRPOxygenSaturationSessionServer initWithUUID:configuration:client:delegate:]
  -[HDRPOxygenSaturationSessionServer _queue_startWithCompletion:]
  -[HDRPOxygenSaturationSessionServer setExpectedEndDate:]
  -[HDRPOxygenSaturationSessionServer expectedEndDate]
  -[HDRPOxygenSaturationSessionServer oxygenSaturationSession:didBeginWithStartTime:expectedDuration:]
  -[HDRPOxygenSaturationSessionServer oxygenSaturationSession:didEndForReason:measurement:]
  -[HDRPOxygenSaturationSessionServer oxygenSaturationSession:feedbackDidChange:]
  -[HDRPOxygenSaturationSessionServer _queue_abortSensorSession]
  -[HDRPOxygenSaturationSessionServer _queue_abortWithCompletion:]
  -[HDRPOxygenSaturationSessionServer _queue_notifyClientDidStartWithStartTime:expectedDuration:]
  -[HDRPOxygenSaturationSessionServer _queue_notifyClientDidSendFeedback:]
  -[HDRPOxygenSaturationSessionServer _queue_notifyClientDidEndWithReason:saturation:barometricPressure:averageHeartRate:averageHeartRateUUID:error:]
  -[HDRPOxygenSaturationSessionServer sensorSession]
  -[HDRPOxygenSaturationSessionServer setSensorSession:]


MockHDRPHealthLite : NSObject

HDProfile(RespiratoryHealthDaemonPlugin)
	// instance methods
	-[HDProfile(RespiratoryHealthDaemonPlugin) respiratoryExtension]

01 00 0200 /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon: HDFeatureAvailabilityManager 
01 00 0200 /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon: HDNanoRegistryPairedDeviceCapabilityProvider 
01 00 0200 /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon: HDPairedFeaturePropertiesSyncManager 
01 00 0200 /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon: HDPeriodicActivity 
01 00 0200 /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon: HDProfile 
01 00 0200 /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon: HDRegionAvailabilityDataSourceWithNanoRegistryFallback 
01 00 0200 /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon: HDSQLiteCompoundPredicate 
01 00 0200 /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon: HDSampleEntity 
01 00 0200 /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon: HDStandardTaskServer 
01 00 0200 /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon: HDWatchAndCompanionCountryListIntersectionAvailabilityProvider 
01 00 0200 /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon: HDWatchRemoteFeatureAvailabilityProvider 
01 00 0500 /System/Library/Frameworks/HealthKit.framework/HealthKit: HKCountrySet 
01 00 0500 /System/Library/Frameworks/HealthKit.framework/HealthKit: HKFeatureAvailabilityRequirementSet 
01 00 0500 /System/Library/Frameworks/HealthKit.framework/HealthKit: HKObjectType 
01 00 0500 /System/Library/Frameworks/HealthKit.framework/HealthKit: HKQuantity 
01 00 0800 /System/Library/PrivateFrameworks/RespiratoryHealth.framework/RespiratoryHealth: HKRPOxygenSaturationAvailability 
01 00 0800 /System/Library/PrivateFrameworks/RespiratoryHealth.framework/RespiratoryHealth: HKRPOxygenSaturationOnboardingCacher 
01 00 0800 /System/Library/PrivateFrameworks/RespiratoryHealth.framework/RespiratoryHealth: HKRPOxygenSaturationSession 
01 00 0800 /System/Library/PrivateFrameworks/RespiratoryHealth.framework/RespiratoryHealth: HKRPOxygenSaturationSettings 
01 00 0800 /System/Library/PrivateFrameworks/RespiratoryHealth.framework/RespiratoryHealth: HKRPUserDefaultsSyncProvider 
01 00 0500 /System/Library/Frameworks/HealthKit.framework/HealthKit: HKSampleType 
01 00 0500 /System/Library/Frameworks/HealthKit.framework/HealthKit: HKUnit 
01 00 0900 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 0600 /System/Library/PrivateFrameworks/NanoRegistry.framework/NanoRegistry: NRPairedDeviceRegistry 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateInterval 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSListFormatter 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0b00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0500 /System/Library/Frameworks/HealthKit.framework/HealthKit: _HKBehavior 
