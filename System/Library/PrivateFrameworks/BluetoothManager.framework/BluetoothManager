|| __DATA.__objc_data _OBJC_CLASS_$_RemoteDeviceManager
|| __DATA.__objc_data _OBJC_METACLASS_$_RemoteDeviceManager
|| __DATA.__objc_ivar _OBJC_IVAR_$_BluetoothDevice._address
|| __DATA.__objc_ivar _OBJC_IVAR_$_BluetoothDevice._connectingServiceMask
|| __DATA.__objc_ivar _OBJC_IVAR_$_BluetoothDevice._device
|| __DATA.__objc_ivar _OBJC_IVAR_$_BluetoothDevice._name
|| __DATA.__objc_ivar _OBJC_IVAR_$_BluetoothManager._accessoryManager
|| __DATA.__objc_ivar _OBJC_IVAR_$_BluetoothManager._airplaneMode
|| __DATA.__objc_ivar _OBJC_IVAR_$_BluetoothManager._audioConnected
|| __DATA.__objc_ivar _OBJC_IVAR_$_BluetoothManager._available
|| __DATA.__objc_ivar _OBJC_IVAR_$_BluetoothManager._btAddrDict
|| __DATA.__objc_ivar _OBJC_IVAR_$_BluetoothManager._btDeviceDict
|| __DATA.__objc_ivar _OBJC_IVAR_$_BluetoothManager._discoveryAgent
|| __DATA.__objc_ivar _OBJC_IVAR_$_BluetoothManager._localDevice
|| __DATA.__objc_ivar _OBJC_IVAR_$_BluetoothManager._pairingAgent
|| __DATA.__objc_ivar _OBJC_IVAR_$_BluetoothManager._scanningEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_BluetoothManager._scanningInProgress
|| __DATA.__objc_ivar _OBJC_IVAR_$_BluetoothManager._scanningServiceMask
|| __DATA.__objc_ivar _OBJC_IVAR_$_BluetoothManager._session
|| __DATA.__objc_ivar _OBJC_IVAR_$_BluetoothManager._state
|| __DATA_CONST.__const _BluetoothAccessoryInEarStatusNotification
|| __DATA_CONST.__const _BluetoothAccessorySealValueStatusNotification
|| __DATA_CONST.__const _BluetoothAdvertisingStateChangedNotification
|| __DATA_CONST.__const _BluetoothAvailabilityChangedNotification
|| __DATA_CONST.__const _BluetoothBlacklistStateChangedNotification
|| __DATA_CONST.__const _BluetoothConnectabilityChangedNotification
|| __DATA_CONST.__const _BluetoothConnectionStatusChangedNotification
|| __DATA_CONST.__const _BluetoothDeviceBatteryChangedNotification
|| __DATA_CONST.__const _BluetoothDeviceChangedNotification
|| __DATA_CONST.__const _BluetoothDeviceConnectFailedNotification
|| __DATA_CONST.__const _BluetoothDeviceConnectSuccessNotification
|| __DATA_CONST.__const _BluetoothDeviceDisconnectFailedNotification
|| __DATA_CONST.__const _BluetoothDeviceDisconnectSuccessNotification
|| __DATA_CONST.__const _BluetoothDeviceDiscoveredNotification
|| __DATA_CONST.__const _BluetoothDeviceRemovedNotification
|| __DATA_CONST.__const _BluetoothDeviceSupportsContactSyncNotification
|| __DATA_CONST.__const _BluetoothDeviceSupportsMAPClientNotification
|| __DATA_CONST.__const _BluetoothDeviceUnpairedNotification
|| __DATA_CONST.__const _BluetoothDeviceUpdatedNotification
|| __DATA_CONST.__const _BluetoothDiscoveryStateChangedNotification
|| __DATA_CONST.__const _BluetoothDiscoveryStoppedNotification
|| __DATA_CONST.__const _BluetoothErrorKey
|| __DATA_CONST.__const _BluetoothFirstDeviceUnlockCompleted
|| __DATA_CONST.__const _BluetoothHandsfreeEndedVoiceCommand
|| __DATA_CONST.__const _BluetoothHandsfreeInitiatedVoiceCommand
|| __DATA_CONST.__const _BluetoothHighPowerDisabled
|| __DATA_CONST.__const _BluetoothHighPowerEnabled
|| __DATA_CONST.__const _BluetoothMagicPairedDeviceNameChangedNotification
|| __DATA_CONST.__const _BluetoothNotificationNameKey
|| __DATA_CONST.__const _BluetoothPairedStatusChangedNotification
|| __DATA_CONST.__const _BluetoothPairingPINRequestNotification
|| __DATA_CONST.__const _BluetoothPairingPINResultFailedNotification
|| __DATA_CONST.__const _BluetoothPairingPINResultSuccessNotification
|| __DATA_CONST.__const _BluetoothPairingPassKeyDisplayNotification
|| __DATA_CONST.__const _BluetoothPairingUserConfirmationNotification
|| __DATA_CONST.__const _BluetoothPairingUserNumericComparisionNotification
|| __DATA_CONST.__const _BluetoothPowerChangedNotification
|| __DATA_CONST.__const _BluetoothStateChangedNotification
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BluetoothDevice
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BluetoothManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BluetoothDevice
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BluetoothManager
|| __TEXT.__text _AddressForBTDevice
|| __TEXT.__text _getFloatFromLittleEndianByteStream
|| __TEXT.__text _sharedBluetoothManagerLogComponent
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__
__ Foundation: _NSClassFromString
__ Foundation: _NSLog
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSValue
__ MobileBluetooth: _BTAccessoryManagerAddCallbacks
__ MobileBluetooth: _BTAccessoryManagerGetControlCommand
__ MobileBluetooth: _BTAccessoryManagerGetDefault
__ MobileBluetooth: _BTAccessoryManagerGetDeviceBatteryLevel
__ MobileBluetooth: _BTAccessoryManagerGetDoubleTapAction
__ MobileBluetooth: _BTAccessoryManagerGetDoubleTapActionEx
__ MobileBluetooth: _BTAccessoryManagerGetDoubleTapCapability
__ MobileBluetooth: _BTAccessoryManagerGetFeatureCapability
__ MobileBluetooth: _BTAccessoryManagerGetInEarDetectionEnable
__ MobileBluetooth: _BTAccessoryManagerGetInEarStatus
__ MobileBluetooth: _BTAccessoryManagerGetMicMode
__ MobileBluetooth: _BTAccessoryManagerGetNonAppleHAEPairedDevices
__ MobileBluetooth: _BTAccessoryManagerGetSettingFeatureBitMask
__ MobileBluetooth: _BTAccessoryManagerIsAccessory
__ MobileBluetooth: _BTAccessoryManagerRemoveCallbacks
__ MobileBluetooth: _BTAccessoryManagerSendControlCommand
__ MobileBluetooth: _BTAccessoryManagerSetDoubleTapAction
__ MobileBluetooth: _BTAccessoryManagerSetDoubleTapActionEx
__ MobileBluetooth: _BTAccessoryManagerSetInEarDetectionEnable
__ MobileBluetooth: _BTAccessoryManagerSetMicMode
__ MobileBluetooth: _BTAccessoryManagerSetupCommand
__ MobileBluetooth: _BTDeviceConnectServices
__ MobileBluetooth: _BTDeviceDisconnect
__ MobileBluetooth: _BTDeviceFromIdentifier
__ MobileBluetooth: _BTDeviceGetAddressString
__ MobileBluetooth: _BTDeviceGetCloudPairingStatus
__ MobileBluetooth: _BTDeviceGetConnectedServices
__ MobileBluetooth: _BTDeviceGetDefaultName
__ MobileBluetooth: _BTDeviceGetDeviceClass
__ MobileBluetooth: _BTDeviceGetDeviceId
__ MobileBluetooth: _BTDeviceGetDeviceType
__ MobileBluetooth: _BTDeviceGetGroups
__ MobileBluetooth: _BTDeviceGetLowSecurityStatus
__ MobileBluetooth: _BTDeviceGetMagicPairingStatus
__ MobileBluetooth: _BTDeviceGetName
__ MobileBluetooth: _BTDeviceGetPairingStatus
__ MobileBluetooth: _BTDeviceGetServiceSettings
__ MobileBluetooth: _BTDeviceGetSupportedServices
__ MobileBluetooth: _BTDeviceGetSyncSettings
__ MobileBluetooth: _BTDeviceIsAppleAudioDevice
__ MobileBluetooth: _BTDeviceIsProController
__ MobileBluetooth: _BTDeviceIsTemporaryPaired
__ MobileBluetooth: _BTDevicePhysicalLinkDisconnect
__ MobileBluetooth: _BTDeviceSetGroup
__ MobileBluetooth: _BTDeviceSetServiceSettings
__ MobileBluetooth: _BTDeviceSetSyncSettings
__ MobileBluetooth: _BTDeviceSetUserName
__ MobileBluetooth: _BTDeviceSupportsHS
__ MobileBluetooth: _BTDiscoveryAgentCreate
__ MobileBluetooth: _BTDiscoveryAgentDestroy
__ MobileBluetooth: _BTDiscoveryAgentGetDevices
__ MobileBluetooth: _BTDiscoveryAgentStartScan
__ MobileBluetooth: _BTDiscoveryAgentStopScan
__ MobileBluetooth: _BTLocalDeviceAddCallbacks
__ MobileBluetooth: _BTLocalDeviceEnableDUTMode
__ MobileBluetooth: _BTLocalDeviceGetAddressString
__ MobileBluetooth: _BTLocalDeviceGetAdvertisingStatus
__ MobileBluetooth: _BTLocalDeviceGetAirplaneModeStatus
__ MobileBluetooth: _BTLocalDeviceGetBlacklistEnabled
__ MobileBluetooth: _BTLocalDeviceGetConnectable
__ MobileBluetooth: _BTLocalDeviceGetConnectedDevices
__ MobileBluetooth: _BTLocalDeviceGetConnectingDevices
__ MobileBluetooth: _BTLocalDeviceGetConnectionStatus
__ MobileBluetooth: _BTLocalDeviceGetDefault
__ MobileBluetooth: _BTLocalDeviceGetDeviceNamesThatMayBeBlacklisted
__ MobileBluetooth: _BTLocalDeviceGetDiscoverable
__ MobileBluetooth: _BTLocalDeviceGetModulePower
__ MobileBluetooth: _BTLocalDeviceGetPairedDevices
__ MobileBluetooth: _BTLocalDeviceGetScanning
__ MobileBluetooth: _BTLocalDeviceMaskCallbacks
__ MobileBluetooth: _BTLocalDeviceRemoveCallbacks
__ MobileBluetooth: _BTLocalDeviceSetBlacklistEnabled
__ MobileBluetooth: _BTLocalDeviceSetConnectable
__ MobileBluetooth: _BTLocalDeviceSetDiscoverable
__ MobileBluetooth: _BTLocalDeviceSetModulePower
__ MobileBluetooth: _BTLocalDeviceShowPowerPrompt
__ MobileBluetooth: _BTLocalDeviceSupportsService
__ MobileBluetooth: _BTPairingAgentAcceptSSP
__ MobileBluetooth: _BTPairingAgentCancelPairing
__ MobileBluetooth: _BTPairingAgentCreate
__ MobileBluetooth: _BTPairingAgentDeletePairedDevice
__ MobileBluetooth: _BTPairingAgentDestroy
__ MobileBluetooth: _BTPairingAgentSetPincode
__ MobileBluetooth: _BTPairingAgentStart
__ MobileBluetooth: _BTPairingAgentStop
__ MobileBluetooth: _BTServiceAddCallbacks
__ MobileBluetooth: _BTServiceRemoveCallbacks
__ MobileBluetooth: _BTSessionAttachWithQueue
__ MobileBluetooth: _BTSessionDetachWithQueue
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _getprogname
__ libSystem.B.dylib: _log10f
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _xpc_connection_create_mach_service
__ libSystem.B.dylib: _xpc_connection_resume
__ libSystem.B.dylib: _xpc_connection_send_message
__ libSystem.B.dylib: _xpc_connection_set_event_handler
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_set_string
__ libSystem.B.dylib: _xpc_dictionary_set_value
__ libSystem.B.dylib: _xpc_release
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
BluetoothDevice : NSObject
  // instance methods
  -[BluetoothDevice dealloc]
  -[BluetoothDevice name]
  -[BluetoothDevice copyWithZone:]
  -[BluetoothDevice type]
  -[BluetoothDevice compare:]
  -[BluetoothDevice address]
  -[BluetoothDevice disconnect]
  -[BluetoothDevice device]
  -[BluetoothDevice isAppleAudioDevice]
  -[BluetoothDevice connect]
  -[BluetoothDevice batteryLevel]
  -[BluetoothDevice connected]
  -[BluetoothDevice vendorId]
  -[BluetoothDevice connectedServices]
  -[BluetoothDevice magicPaired]
  -[BluetoothDevice setDevice:]
  -[BluetoothDevice paired]
  -[BluetoothDevice productId]
  -[BluetoothDevice setPIN:]
  -[BluetoothDevice setUserName:]
  -[BluetoothDevice featureCapability:]
  -[BluetoothDevice unpair]
  -[BluetoothDevice _clearName]
  -[BluetoothDevice initWithDevice:address:]
  -[BluetoothDevice _isNameCached]
  -[BluetoothDevice majorClass]
  -[BluetoothDevice minorClass]
  -[BluetoothDevice scoUID]
  -[BluetoothDevice aclUID]
  -[BluetoothDevice cloudPaired]
  -[BluetoothDevice isTemporaryPaired]
  -[BluetoothDevice connectedServicesCount]
  -[BluetoothDevice supportsBatteryLevel]
  -[BluetoothDevice inEarDetectEnabled]
  -[BluetoothDevice setInEarDetectEnabled:]
  -[BluetoothDevice inEarStatusPrimary:secondary:]
  -[BluetoothDevice SendSetupCommand:]
  -[BluetoothDevice micMode]
  -[BluetoothDevice setMicMode:]
  -[BluetoothDevice doubleTapAction]
  -[BluetoothDevice setDoubleTapAction:]
  -[BluetoothDevice doubleTapCapability]
  -[BluetoothDevice doubleTapActionEx:rightAction:]
  -[BluetoothDevice setDoubleTapActionEx:rightAction:]
  -[BluetoothDevice listeningMode]
  -[BluetoothDevice setListeningMode:]
  -[BluetoothDevice listeningModeConfigs]
  -[BluetoothDevice setListeningModeConfigs:]
  -[BluetoothDevice singleClickMode]
  -[BluetoothDevice setSingleClickMode:]
  -[BluetoothDevice doubleClickMode]
  -[BluetoothDevice setDoubleClickMode:]
  -[BluetoothDevice clickHoldMode:rightAction:]
  -[BluetoothDevice setClickHoldMode:rightMode:]
  -[BluetoothDevice accessorySettingFeatureBitMask]
  -[BluetoothDevice magicPairedDeviceNameUpdated]
  -[BluetoothDevice isAccessory]
  -[BluetoothDevice isServiceSupported:]
  -[BluetoothDevice getServiceSetting:key:]
  -[BluetoothDevice setServiceSetting:key:value:]
  -[BluetoothDevice connectWithServices:]
  -[BluetoothDevice acceptSSP:]
  -[BluetoothDevice startVoiceCommand]
  -[BluetoothDevice endVoiceCommand]
  -[BluetoothDevice syncSettings]
  -[BluetoothDevice setSyncSettings:]
  -[BluetoothDevice syncGroups]
  -[BluetoothDevice setSyncGroup:enabled:]
  -[BluetoothDevice supportsHS]
  -[BluetoothDevice isProController]
  -[BluetoothDevice setConnectingServicemask:]
  -[BluetoothDevice getConnectingServiceMask]
  -[BluetoothDevice getLowSecurityStatus]


BluetoothManager : NSObject
 @property  BOOL blacklistEnabled

  // class methods
  +[BluetoothManager sharedInstance]
  +[BluetoothManager setSharedInstanceQueue:]
  +[BluetoothManager lastInitError]

  // instance methods
  -[BluetoothManager init]
  -[BluetoothManager dealloc]
  -[BluetoothManager enabled]
  -[BluetoothManager setEnabled:]
  -[BluetoothManager postNotification:]
  -[BluetoothManager postNotificationName:object:]
  -[BluetoothManager localAddress]
  -[BluetoothManager _accessoryManager]
  -[BluetoothManager available]
  -[BluetoothManager connected]
  -[BluetoothManager _setup:]
  -[BluetoothManager bluetoothState]
  -[BluetoothManager powerState]
  -[BluetoothManager connectedDevices]
  -[BluetoothManager _postNotification:]
  -[BluetoothManager deviceFromIdentifier:]
  -[BluetoothManager pairedDevices]
  -[BluetoothManager _attach]
  -[BluetoothManager connectDevice:]
  -[BluetoothManager connectDevice:withServices:]
  -[BluetoothManager disconnectDevice:]
  -[BluetoothManager setPincode:forDevice:]
  -[BluetoothManager acceptSSP:forDevice:]
  -[BluetoothManager unpairDevice:]
  -[BluetoothManager startVoiceCommand:]
  -[BluetoothManager endVoiceCommand:]
  -[BluetoothManager isServiceSupported:]
  -[BluetoothManager _updateBlacklistMode]
  -[BluetoothManager _updateAirplaneModeStatus]
  -[BluetoothManager _updateBluetoothState]
  -[BluetoothManager _cleanup:]
  -[BluetoothManager _postNotificationWithArray:]
  -[BluetoothManager powered]
  -[BluetoothManager setDeviceScanningEnabled:]
  -[BluetoothManager setPowered:]
  -[BluetoothManager _scanForServices:withMode:]
  -[BluetoothManager scanForServices:]
  -[BluetoothManager setDevicePairingEnabled:]
  -[BluetoothManager devicePairingEnabled]
  -[BluetoothManager cancelPairing]
  -[BluetoothManager addDeviceIfNeeded:]
  -[BluetoothManager bluetoothStateActionWithCompletion:]
  -[BluetoothManager setBlacklistEnabled:]
  -[BluetoothManager disconnectDevicePhysicalLink:]
  -[BluetoothManager postNotificationName:object:error:]
  -[BluetoothManager showPowerPrompt]
  -[BluetoothManager maskLocalDeviceEvents:]
  -[BluetoothManager _powerChanged]
  -[BluetoothManager _notifyFirstDeviceUnlockCompleted]
  -[BluetoothManager isAnyoneScanning]
  -[BluetoothManager isAnyoneAdvertising]
  -[BluetoothManager _removeDevice:]
  -[BluetoothManager wasDeviceDiscovered:]
  -[BluetoothManager deviceScanningEnabled]
  -[BluetoothManager deviceScanningInProgress]
  -[BluetoothManager resetDeviceScanning]
  -[BluetoothManager scanForConnectableDevices:]
  -[BluetoothManager _restartScan]
  -[BluetoothManager _setScanState:]
  -[BluetoothManager _discoveryStateChanged]
  -[BluetoothManager _advertisingChanged]
  -[BluetoothManager isDiscoverable]
  -[BluetoothManager setDiscoverable:]
  -[BluetoothManager pairedNonAppleHAEDevices]
  -[BluetoothManager _pairedStatusChanged]
  -[BluetoothManager connectable]
  -[BluetoothManager setConnectable:]
  -[BluetoothManager connectingDevices]
  -[BluetoothManager _connectedStatusChanged]
  -[BluetoothManager _connectabilityChanged]
  -[BluetoothManager blacklistEnabled]
  -[BluetoothManager audioConnected]
  -[BluetoothManager setAudioConnected:]
  -[BluetoothManager bluetoothStateAction]
  -[BluetoothManager connectedDeviceNamesThatMayBeBlacklisted]
  -[BluetoothManager enableTestMode]


RemoteDeviceManager : NSObject
  // instance methods
  -[RemoteDeviceManager init]
  -[RemoteDeviceManager dealloc]
  -[RemoteDeviceManager disconnectDevice:]
  -[RemoteDeviceManager sendMessage:args:]


01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0600 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
