|| __DATA.__common _GKServiceInterfaceController
|| __DATA.__common __GKIsClientAppUsingRTL
|| __DATA.__common __GKIsRemoteUIUsingPadIdiom
|| __DATA.__objc_data _OBJC_CLASS_$_GKAccountRemoteUIController
|| __DATA.__objc_data _OBJC_CLASS_$_GKAchievementDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKAchievementIconView
|| __DATA.__objc_data _OBJC_CLASS_$_GKAchievementSharingInfo
|| __DATA.__objc_data _OBJC_CLASS_$_GKAchievementViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKAcquireFocusWorkaroundView
|| __DATA.__objc_data _OBJC_CLASS_$_GKAggregateCollectionViewWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_GKAggregateMapping
|| __DATA.__objc_data _OBJC_CLASS_$_GKAuthenticateExtensionHostContext
|| __DATA.__objc_data _OBJC_CLASS_$_GKAuthenticateHostViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKAvatarContainerView
|| __DATA.__objc_data _OBJC_CLASS_$_GKAvatarImage
|| __DATA.__objc_data _OBJC_CLASS_$_GKAvatarImageBrush
|| __DATA.__objc_data _OBJC_CLASS_$_GKBackgroundTileImageView
|| __DATA.__objc_data _OBJC_CLASS_$_GKBadgedGameIconBrush
|| __DATA.__objc_data _OBJC_CLASS_$_GKBaseBubbleWithTextControl
|| __DATA.__objc_data _OBJC_CLASS_$_GKBaseComposeController
|| __DATA.__objc_data _OBJC_CLASS_$_GKBaseComposeHeaderField
|| __DATA.__objc_data _OBJC_CLASS_$_GKBaseGameCell
|| __DATA.__objc_data _OBJC_CLASS_$_GKBasePlayerCell
|| __DATA.__objc_data _OBJC_CLASS_$_GKBasicCollectionViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKBasicCollectionViewDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKBrush
|| __DATA.__objc_data _OBJC_CLASS_$_GKBrushList
|| __DATA.__objc_data _OBJC_CLASS_$_GKBubbleControl
|| __DATA.__objc_data _OBJC_CLASS_$_GKBubbleFlowAnimator
|| __DATA.__objc_data _OBJC_CLASS_$_GKBubbleFlowBubbleControl
|| __DATA.__objc_data _OBJC_CLASS_$_GKBubbleFlowContainerView
|| __DATA.__objc_data _OBJC_CLASS_$_GKBubbleFlowOverlayView
|| __DATA.__objc_data _OBJC_CLASS_$_GKBubbleFlowRootViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKBubbleLayout
|| __DATA.__objc_data _OBJC_CLASS_$_GKBubbleMeshAnimator
|| __DATA.__objc_data _OBJC_CLASS_$_GKBubblePathAnimator
|| __DATA.__objc_data _OBJC_CLASS_$_GKBubbleSet
|| __DATA.__objc_data _OBJC_CLASS_$_GKBubbleShape
|| __DATA.__objc_data _OBJC_CLASS_$_GKBubbleView
|| __DATA.__objc_data _OBJC_CLASS_$_GKButtonView
|| __DATA.__objc_data _OBJC_CLASS_$_GKButtonWithContentSizeCorrected2
|| __DATA.__objc_data _OBJC_CLASS_$_GKCancelSwipeToEditGestureRecognizer
|| __DATA.__objc_data _OBJC_CLASS_$_GKCellSelectedBackgroundView
|| __DATA.__objc_data _OBJC_CLASS_$_GKCenteringScrollView
|| __DATA.__objc_data _OBJC_CLASS_$_GKChallengeComposeController
|| __DATA.__objc_data _OBJC_CLASS_$_GKChallengeDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKChallengeEventHandlerUIDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_GKChallengeIssueExtensionHostContext
|| __DATA.__objc_data _OBJC_CLASS_$_GKChallengeIssueHostViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKCircleImageBrush
|| __DATA.__objc_data _OBJC_CLASS_$_GKCollectionColumnDividerView
|| __DATA.__objc_data _OBJC_CLASS_$_GKCollectionColumnLayout
|| __DATA.__objc_data _OBJC_CLASS_$_GKCollectionDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKCollectionFocusingLayout
|| __DATA.__objc_data _OBJC_CLASS_$_GKCollectionGridLayout
|| __DATA.__objc_data _OBJC_CLASS_$_GKCollectionHorizontalLayout
|| __DATA.__objc_data _OBJC_CLASS_$_GKCollectionMultiDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKCollectionViewAggregateDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKCollectionViewCell
|| __DATA.__objc_data _OBJC_CLASS_$_GKCollectionViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKCollectionViewDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKCollectionViewLayoutAttributes
|| __DATA.__objc_data _OBJC_CLASS_$_GKCollectionViewPlaceholderView
|| __DATA.__objc_data _OBJC_CLASS_$_GKColorPalette
|| __DATA.__objc_data _OBJC_CLASS_$_GKColumnDividerView
|| __DATA.__objc_data _OBJC_CLASS_$_GKComposeHeaderField
|| __DATA.__objc_data _OBJC_CLASS_$_GKComposeHeaderFieldBackgroundView
|| __DATA.__objc_data _OBJC_CLASS_$_GKComposeHeaderWithStaticRecipients
|| __DATA.__objc_data _OBJC_CLASS_$_GKComposedImageBrush
|| __DATA.__objc_data _OBJC_CLASS_$_GKConditionBrush
|| __DATA.__objc_data _OBJC_CLASS_$_GKConstraintLeadingInfo
|| __DATA.__objc_data _OBJC_CLASS_$_GKConstraintUpdateController
|| __DATA.__objc_data _OBJC_CLASS_$_GKContactDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKContactSkipControl
|| __DATA.__objc_data _OBJC_CLASS_$_GKContiguousContainerView
|| __DATA.__objc_data _OBJC_CLASS_$_GKContiguousContainerWithLeadingView
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardAchievementCell
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardAchievementDetailViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardButtonSectionHeaderView
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardChallengeDetailViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardChallengePlayerPickerDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardChallengePlayerPickerViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardCollectionViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardExtensionHostContext
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardFocusContainerView
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardHeaderView
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardHostViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardKeyboardAccessoryView
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardLeaderboardCell
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardLeaderboardDetailViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardLeaderboardListDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardLeaderboardListViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardLeaderboardScoreCell
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardLeaderboardScoreDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardLeaderboardScoreHeaderView
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardLeaderboardScoreViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardLeaderboardSetDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardMultiplayerPickerDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardMultiplayerPickerPlayWithFriendsReusableFooterView
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardMultiplayerPickerSearchDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardMultiplayerPickerViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardPlayerCell
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardPlayerPhotoView
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardPlayerPickerCell
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardPlayerShadowView
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardSectionHeaderView
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardShowMoreTextCell
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardSingleButtonReusableFooterView
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardTurnCell
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardTurnDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardTurnDetailDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardTurnDetailViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKDataSourceMetrics
|| __DATA.__objc_data _OBJC_CLASS_$_GKDebugHighlightView
|| __DATA.__objc_data _OBJC_CLASS_$_GKDefaultNicknameViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKDetachedContentView
|| __DATA.__objc_data _OBJC_CLASS_$_GKDetailViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKDynamicButton
|| __DATA.__objc_data _OBJC_CLASS_$_GKDynamicColumnSectionMetrics
|| __DATA.__objc_data _OBJC_CLASS_$_GKDynamicLabel
|| __DATA.__objc_data _OBJC_CLASS_$_GKEditAction
|| __DATA.__objc_data _OBJC_CLASS_$_GKEditActionsView
|| __DATA.__objc_data _OBJC_CLASS_$_GKExplodeFrontToBackAnimator
|| __DATA.__objc_data _OBJC_CLASS_$_GKExtensionContext
|| __DATA.__objc_data _OBJC_CLASS_$_GKExtensionHostContext
|| __DATA.__objc_data _OBJC_CLASS_$_GKExtensionHostViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKExtensionManager
|| __DATA.__objc_data _OBJC_CLASS_$_GKExtensionRemoteViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKExtensionViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKFallbackAnimator
|| __DATA.__objc_data _OBJC_CLASS_$_GKFishhookAnimator
|| __DATA.__objc_data _OBJC_CLASS_$_GKFixedSizeImageView
|| __DATA.__objc_data _OBJC_CLASS_$_GKFloatInAnimator
|| __DATA.__objc_data _OBJC_CLASS_$_GKFocusableDarkColorPalette
|| __DATA.__objc_data _OBJC_CLASS_$_GKForceBubbleAnimator
|| __DATA.__objc_data _OBJC_CLASS_$_GKFriendDetailViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKFriendListCell
|| __DATA.__objc_data _OBJC_CLASS_$_GKFriendListReusableFooterView
|| __DATA.__objc_data _OBJC_CLASS_$_GKFriendListViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKFriendRequestComposeViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKFriendRequestViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKGameInviteComposeController
|| __DATA.__objc_data _OBJC_CLASS_$_GKGameMessagesBrush
|| __DATA.__objc_data _OBJC_CLASS_$_GKGameTurnInfo
|| __DATA.__objc_data _OBJC_CLASS_$_GKGradient
|| __DATA.__objc_data _OBJC_CLASS_$_GKGradientLabel
|| __DATA.__objc_data _OBJC_CLASS_$_GKGridLayout
|| __DATA.__objc_data _OBJC_CLASS_$_GKGridLayoutInvalidationContext
|| __DATA.__objc_data _OBJC_CLASS_$_GKGridLayoutMetrics
|| __DATA.__objc_data _OBJC_CLASS_$_GKHairlineView
|| __DATA.__objc_data _OBJC_CLASS_$_GKHeaderWithUnderlineView
|| __DATA.__objc_data _OBJC_CLASS_$_GKHorizontalBubbleControlsView
|| __DATA.__objc_data _OBJC_CLASS_$_GKHostedAuthenticateViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKHostedChallengeIssueController
|| __DATA.__objc_data _OBJC_CLASS_$_GKHostedViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKImageBrush
|| __DATA.__objc_data _OBJC_CLASS_$_GKImageColorPalette
|| __DATA.__objc_data _OBJC_CLASS_$_GKImageContext
|| __DATA.__objc_data _OBJC_CLASS_$_GKImageEffects
|| __DATA.__objc_data _OBJC_CLASS_$_GKImageKey
|| __DATA.__objc_data _OBJC_CLASS_$_GKImageSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKInCommonGameCell
|| __DATA.__objc_data _OBJC_CLASS_$_GKInGameColorPalette
|| __DATA.__objc_data _OBJC_CLASS_$_GKLabel
|| __DATA.__objc_data _OBJC_CLASS_$_GKLeaderboardListHeaderView
|| __DATA.__objc_data _OBJC_CLASS_$_GKLeaderboardViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKLoadableContentStateMachine
|| __DATA.__objc_data _OBJC_CLASS_$_GKLoadableContentViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKLoadingViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKLocalImageSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKLocalPlayerAuthenticator
|| __DATA.__objc_data _OBJC_CLASS_$_GKLoginAlertView
|| __DATA.__objc_data _OBJC_CLASS_$_GKMacGameIconBrush
|| __DATA.__objc_data _OBJC_CLASS_$_GKMappedIndexPath
|| __DATA.__objc_data _OBJC_CLASS_$_GKMatchmakerExtensionHostContext
|| __DATA.__objc_data _OBJC_CLASS_$_GKMatchmakerHostViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKMatchmakerViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKMessageComposeViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKMetricData
|| __DATA.__objc_data _OBJC_CLASS_$_GKMoreExistSectionFooterView
|| __DATA.__objc_data _OBJC_CLASS_$_GKMultiCircleImageBrush
|| __DATA.__objc_data _OBJC_CLASS_$_GKMultiplayerActivityView
|| __DATA.__objc_data _OBJC_CLASS_$_GKMultiplayerBubbleView
|| __DATA.__objc_data _OBJC_CLASS_$_GKMultiplayerButtonFooterView
|| __DATA.__objc_data _OBJC_CLASS_$_GKMultiplayerButtonHeaderView
|| __DATA.__objc_data _OBJC_CLASS_$_GKMultiplayerCollectionLayout
|| __DATA.__objc_data _OBJC_CLASS_$_GKMultiplayerCollectionViewCell
|| __DATA.__objc_data _OBJC_CLASS_$_GKMultiplayerCollectionViewCellAccessoryLeft
|| __DATA.__objc_data _OBJC_CLASS_$_GKMultiplayerDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKMultiplayerFooterView
|| __DATA.__objc_data _OBJC_CLASS_$_GKMultiplayerHeaderView
|| __DATA.__objc_data _OBJC_CLASS_$_GKMultiplayerP2PViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKMultiplayerParticipant
|| __DATA.__objc_data _OBJC_CLASS_$_GKMultiplayerPlayerCountViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKMultiplayerSeparatorView
|| __DATA.__objc_data _OBJC_CLASS_$_GKMultiplayerViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKNavigationController
|| __DATA.__objc_data _OBJC_CLASS_$_GKNavigationControllerDeferredTransitionInfo
|| __DATA.__objc_data _OBJC_CLASS_$_GKNetworkActivityIndicatorDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_GKNetworkImageSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKNicknameController
|| __DATA.__objc_data _OBJC_CLASS_$_GKNoContentView
|| __DATA.__objc_data _OBJC_CLASS_$_GKNotificationBanner
|| __DATA.__objc_data _OBJC_CLASS_$_GKNotificationBannerView
|| __DATA.__objc_data _OBJC_CLASS_$_GKNotificationBannerViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKNotificationBannerWindow
|| __DATA.__objc_data _OBJC_CLASS_$_GKOnboardingViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKPlaceholderContentStateMachine
|| __DATA.__objc_data _OBJC_CLASS_$_GKPlaceholderView
|| __DATA.__objc_data _OBJC_CLASS_$_GKPlayerGameCell
|| __DATA.__objc_data _OBJC_CLASS_$_GKPlayerWithSpeechBalloonView
|| __DATA.__objc_data _OBJC_CLASS_$_GKPurchasableGameCell
|| __DATA.__objc_data _OBJC_CLASS_$_GKRatingView
|| __DATA.__objc_data _OBJC_CLASS_$_GKRawTurnsDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKRectShadowCell
|| __DATA.__objc_data _OBJC_CLASS_$_GKRemoteUIController
|| __DATA.__objc_data _OBJC_CLASS_$_GKRemoteUIFooterView
|| __DATA.__objc_data _OBJC_CLASS_$_GKRemoteUIHeaderView
|| __DATA.__objc_data _OBJC_CLASS_$_GKRemoteUINavigationController
|| __DATA.__objc_data _OBJC_CLASS_$_GKRemoteUITableFooterView
|| __DATA.__objc_data _OBJC_CLASS_$_GKRemoteUITableHeaderView
|| __DATA.__objc_data _OBJC_CLASS_$_GKRemoteViewServiceController
|| __DATA.__objc_data _OBJC_CLASS_$_GKReportProblemRemoteUIController
|| __DATA.__objc_data _OBJC_CLASS_$_GKResizingLabel
|| __DATA.__objc_data _OBJC_CLASS_$_GKRoundButton
|| __DATA.__objc_data _OBJC_CLASS_$_GKScatterAnimator
|| __DATA.__objc_data _OBJC_CLASS_$_GKScatterBackToFrontAnimator
|| __DATA.__objc_data _OBJC_CLASS_$_GKScoreSharingInfo
|| __DATA.__objc_data _OBJC_CLASS_$_GKScreenConfigurationController
|| __DATA.__objc_data _OBJC_CLASS_$_GKSearchBar
|| __DATA.__objc_data _OBJC_CLASS_$_GKSearchBarView
|| __DATA.__objc_data _OBJC_CLASS_$_GKSectionHeaderView
|| __DATA.__objc_data _OBJC_CLASS_$_GKSectionInfo
|| __DATA.__objc_data _OBJC_CLASS_$_GKSectionMetrics
|| __DATA.__objc_data _OBJC_CLASS_$_GKSectionPresentationData
|| __DATA.__objc_data _OBJC_CLASS_$_GKSectionSeparatorView
|| __DATA.__objc_data _OBJC_CLASS_$_GKSegmentInfo
|| __DATA.__objc_data _OBJC_CLASS_$_GKSegmentedSectionDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKSegmentedSectionHeaderView
|| __DATA.__objc_data _OBJC_CLASS_$_GKSegmentedSelectorView
|| __DATA.__objc_data _OBJC_CLASS_$_GKServiceFriendRequestViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKServiceViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKShowMoreView
|| __DATA.__objc_data _OBJC_CLASS_$_GKShowcaseCellView
|| __DATA.__objc_data _OBJC_CLASS_$_GKSignInInputView
|| __DATA.__objc_data _OBJC_CLASS_$_GKSignInViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKSimpleComposeController
|| __DATA.__objc_data _OBJC_CLASS_$_GKSimpleSlideAnimator
|| __DATA.__objc_data _OBJC_CLASS_$_GKSkipControlButton
|| __DATA.__objc_data _OBJC_CLASS_$_GKSpeechBalloonBackgroundView
|| __DATA.__objc_data _OBJC_CLASS_$_GKSplittingDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKStandaloneWiggleRotateAnimator
|| __DATA.__objc_data _OBJC_CLASS_$_GKStaticRenderContentView
|| __DATA.__objc_data _OBJC_CLASS_$_GKStatusCell
|| __DATA.__objc_data _OBJC_CLASS_$_GKSupplementaryViewFactory
|| __DATA.__objc_data _OBJC_CLASS_$_GKSupplementaryViewMetrics
|| __DATA.__objc_data _OBJC_CLASS_$_GKSwipeToEditStateMachine
|| __DATA.__objc_data _OBJC_CLASS_$_GKTabBarTransitionAnimator
|| __DATA.__objc_data _OBJC_CLASS_$_GKTextBubbleContentView
|| __DATA.__objc_data _OBJC_CLASS_$_GKTextBubbleControl
|| __DATA.__objc_data _OBJC_CLASS_$_GKTextField
|| __DATA.__objc_data _OBJC_CLASS_$_GKTextStyle
|| __DATA.__objc_data _OBJC_CLASS_$_GKTextStyleFocus
|| __DATA.__objc_data _OBJC_CLASS_$_GKTextStylePad
|| __DATA.__objc_data _OBJC_CLASS_$_GKTextStylePhone
|| __DATA.__objc_data _OBJC_CLASS_$_GKTextStylePhoneInBubbleDetail
|| __DATA.__objc_data _OBJC_CLASS_$_GKTextSuggestion
|| __DATA.__objc_data _OBJC_CLASS_$_GKTextView
|| __DATA.__objc_data _OBJC_CLASS_$_GKThemeBrush
|| __DATA.__objc_data _OBJC_CLASS_$_GKThreadsafeImageCache
|| __DATA.__objc_data _OBJC_CLASS_$_GKTimeScopeButton
|| __DATA.__objc_data _OBJC_CLASS_$_GKTopClipView
|| __DATA.__objc_data _OBJC_CLASS_$_GKTournamentExtensionHostViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKTournamentInterface
|| __DATA.__objc_data _OBJC_CLASS_$_GKTournamentViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKTournamentViewRequest
|| __DATA.__objc_data _OBJC_CLASS_$_GKTurnBasedInviteViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKTurnBasedMatchDetailHeaderView
|| __DATA.__objc_data _OBJC_CLASS_$_GKTurnBasedMatchDetailViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKTurnBasedMatchesDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKTurnBasedMatchesViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKTurnBasedMatchmakerExtensionHostContext
|| __DATA.__objc_data _OBJC_CLASS_$_GKTurnBasedMatchmakerHostViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKTurnBasedMatchmakerViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKTurnBasedParticipantsDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKTurnGameCell
|| __DATA.__objc_data _OBJC_CLASS_$_GKTurnParticipantCell
|| __DATA.__objc_data _OBJC_CLASS_$_GKTurnsDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKUIContentUnavailableView
|| __DATA.__objc_data _OBJC_CLASS_$_GKUITheme
|| __DATA.__objc_data _OBJC_CLASS_$_GKUnifiedRecipient
|| __DATA.__objc_data _OBJC_CLASS_$_GKValueWithCaptionBubbleControl
|| __DATA.__objc_data _OBJC_CLASS_$_GKViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKViewServiceInterface
|| __DATA.__objc_data _OBJC_CLASS_$_GKWelcomeViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKWiggleRotateAnimator
|| __DATA.__objc_data _OBJC_CLASS_$_GKiOSAppIconBrush
|| __DATA.__objc_data _OBJC_CLASS_$_GKiOSAppIconBrushShare
|| __DATA.__objc_data _OBJC_CLASS_$_SortHueEntry
|| __DATA.__objc_data _OBJC_CLASS_$__GKBubbleFlowOnDemandFormSheetViewController
|| __DATA.__objc_data _OBJC_CLASS_$__GKBubbleFlowPathTransitionInfo
|| __DATA.__objc_data _OBJC_CLASS_$__GKBubbleFlowPseudoModalViewController
|| __DATA.__objc_data _OBJC_CLASS_$__GKBubbleFlowTransitionInfo
|| __DATA.__objc_data _OBJC_CLASS_$__GKCustomDrawnSpeechBalloonBackgroundView
|| __DATA.__objc_data _OBJC_CLASS_$__GKImageSpeechBalloonBackgroundView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKAccountRemoteUIController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKAchievementDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKAchievementIconView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKAchievementSharingInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_GKAchievementViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKAcquireFocusWorkaroundView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKAggregateCollectionViewWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_GKAggregateMapping
|| __DATA.__objc_data _OBJC_METACLASS_$_GKAuthenticateExtensionHostContext
|| __DATA.__objc_data _OBJC_METACLASS_$_GKAuthenticateHostViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKAvatarContainerView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKAvatarImage
|| __DATA.__objc_data _OBJC_METACLASS_$_GKAvatarImageBrush
|| __DATA.__objc_data _OBJC_METACLASS_$_GKBackgroundTileImageView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKBadgedGameIconBrush
|| __DATA.__objc_data _OBJC_METACLASS_$_GKBaseBubbleWithTextControl
|| __DATA.__objc_data _OBJC_METACLASS_$_GKBaseComposeController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKBaseComposeHeaderField
|| __DATA.__objc_data _OBJC_METACLASS_$_GKBaseGameCell
|| __DATA.__objc_data _OBJC_METACLASS_$_GKBasePlayerCell
|| __DATA.__objc_data _OBJC_METACLASS_$_GKBasicCollectionViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKBasicCollectionViewDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKBrush
|| __DATA.__objc_data _OBJC_METACLASS_$_GKBrushList
|| __DATA.__objc_data _OBJC_METACLASS_$_GKBubbleControl
|| __DATA.__objc_data _OBJC_METACLASS_$_GKBubbleFlowAnimator
|| __DATA.__objc_data _OBJC_METACLASS_$_GKBubbleFlowBubbleControl
|| __DATA.__objc_data _OBJC_METACLASS_$_GKBubbleFlowContainerView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKBubbleFlowOverlayView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKBubbleFlowRootViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKBubbleLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_GKBubbleMeshAnimator
|| __DATA.__objc_data _OBJC_METACLASS_$_GKBubblePathAnimator
|| __DATA.__objc_data _OBJC_METACLASS_$_GKBubbleSet
|| __DATA.__objc_data _OBJC_METACLASS_$_GKBubbleShape
|| __DATA.__objc_data _OBJC_METACLASS_$_GKBubbleView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKButtonView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKButtonWithContentSizeCorrected2
|| __DATA.__objc_data _OBJC_METACLASS_$_GKCancelSwipeToEditGestureRecognizer
|| __DATA.__objc_data _OBJC_METACLASS_$_GKCellSelectedBackgroundView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKCenteringScrollView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKChallengeComposeController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKChallengeDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKChallengeEventHandlerUIDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_GKChallengeIssueExtensionHostContext
|| __DATA.__objc_data _OBJC_METACLASS_$_GKChallengeIssueHostViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKCircleImageBrush
|| __DATA.__objc_data _OBJC_METACLASS_$_GKCollectionColumnDividerView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKCollectionColumnLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_GKCollectionDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKCollectionFocusingLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_GKCollectionGridLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_GKCollectionHorizontalLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_GKCollectionMultiDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKCollectionViewAggregateDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKCollectionViewCell
|| __DATA.__objc_data _OBJC_METACLASS_$_GKCollectionViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKCollectionViewDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKCollectionViewLayoutAttributes
|| __DATA.__objc_data _OBJC_METACLASS_$_GKCollectionViewPlaceholderView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKColorPalette
|| __DATA.__objc_data _OBJC_METACLASS_$_GKColumnDividerView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKComposeHeaderField
|| __DATA.__objc_data _OBJC_METACLASS_$_GKComposeHeaderFieldBackgroundView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKComposeHeaderWithStaticRecipients
|| __DATA.__objc_data _OBJC_METACLASS_$_GKComposedImageBrush
|| __DATA.__objc_data _OBJC_METACLASS_$_GKConditionBrush
|| __DATA.__objc_data _OBJC_METACLASS_$_GKConstraintLeadingInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_GKConstraintUpdateController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKContactDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKContactSkipControl
|| __DATA.__objc_data _OBJC_METACLASS_$_GKContiguousContainerView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKContiguousContainerWithLeadingView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardAchievementCell
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardAchievementDetailViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardButtonSectionHeaderView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardChallengeDetailViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardChallengePlayerPickerDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardChallengePlayerPickerViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardCollectionViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardExtensionHostContext
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardFocusContainerView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardHeaderView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardHostViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardKeyboardAccessoryView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardLeaderboardCell
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardLeaderboardDetailViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardLeaderboardListDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardLeaderboardListViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardLeaderboardScoreCell
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardLeaderboardScoreDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardLeaderboardScoreHeaderView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardLeaderboardScoreViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardLeaderboardSetDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardMultiplayerPickerDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardMultiplayerPickerPlayWithFriendsReusableFooterView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardMultiplayerPickerSearchDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardMultiplayerPickerViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardPlayerCell
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardPlayerPhotoView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardPlayerPickerCell
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardPlayerShadowView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardSectionHeaderView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardShowMoreTextCell
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardSingleButtonReusableFooterView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardTurnCell
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardTurnDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardTurnDetailDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardTurnDetailViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDataSourceMetrics
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDebugHighlightView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDefaultNicknameViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDetachedContentView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDetailViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDynamicButton
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDynamicColumnSectionMetrics
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDynamicLabel
|| __DATA.__objc_data _OBJC_METACLASS_$_GKEditAction
|| __DATA.__objc_data _OBJC_METACLASS_$_GKEditActionsView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKExplodeFrontToBackAnimator
|| __DATA.__objc_data _OBJC_METACLASS_$_GKExtensionContext
|| __DATA.__objc_data _OBJC_METACLASS_$_GKExtensionHostContext
|| __DATA.__objc_data _OBJC_METACLASS_$_GKExtensionHostViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKExtensionManager
|| __DATA.__objc_data _OBJC_METACLASS_$_GKExtensionRemoteViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKExtensionViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKFallbackAnimator
|| __DATA.__objc_data _OBJC_METACLASS_$_GKFishhookAnimator
|| __DATA.__objc_data _OBJC_METACLASS_$_GKFixedSizeImageView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKFloatInAnimator
|| __DATA.__objc_data _OBJC_METACLASS_$_GKFocusableDarkColorPalette
|| __DATA.__objc_data _OBJC_METACLASS_$_GKForceBubbleAnimator
|| __DATA.__objc_data _OBJC_METACLASS_$_GKFriendDetailViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKFriendListCell
|| __DATA.__objc_data _OBJC_METACLASS_$_GKFriendListReusableFooterView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKFriendListViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKFriendRequestComposeViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKFriendRequestViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKGameInviteComposeController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKGameMessagesBrush
|| __DATA.__objc_data _OBJC_METACLASS_$_GKGameTurnInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_GKGradient
|| __DATA.__objc_data _OBJC_METACLASS_$_GKGradientLabel
|| __DATA.__objc_data _OBJC_METACLASS_$_GKGridLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_GKGridLayoutInvalidationContext
|| __DATA.__objc_data _OBJC_METACLASS_$_GKGridLayoutMetrics
|| __DATA.__objc_data _OBJC_METACLASS_$_GKHairlineView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKHeaderWithUnderlineView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKHorizontalBubbleControlsView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKHostedAuthenticateViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKHostedChallengeIssueController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKHostedViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKImageBrush
|| __DATA.__objc_data _OBJC_METACLASS_$_GKImageColorPalette
|| __DATA.__objc_data _OBJC_METACLASS_$_GKImageContext
|| __DATA.__objc_data _OBJC_METACLASS_$_GKImageEffects
|| __DATA.__objc_data _OBJC_METACLASS_$_GKImageKey
|| __DATA.__objc_data _OBJC_METACLASS_$_GKImageSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKInCommonGameCell
|| __DATA.__objc_data _OBJC_METACLASS_$_GKInGameColorPalette
|| __DATA.__objc_data _OBJC_METACLASS_$_GKLabel
|| __DATA.__objc_data _OBJC_METACLASS_$_GKLeaderboardListHeaderView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKLeaderboardViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKLoadableContentStateMachine
|| __DATA.__objc_data _OBJC_METACLASS_$_GKLoadableContentViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKLoadingViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKLocalImageSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKLocalPlayerAuthenticator
|| __DATA.__objc_data _OBJC_METACLASS_$_GKLoginAlertView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKMacGameIconBrush
|| __DATA.__objc_data _OBJC_METACLASS_$_GKMappedIndexPath
|| __DATA.__objc_data _OBJC_METACLASS_$_GKMatchmakerExtensionHostContext
|| __DATA.__objc_data _OBJC_METACLASS_$_GKMatchmakerHostViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKMatchmakerViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKMessageComposeViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKMetricData
|| __DATA.__objc_data _OBJC_METACLASS_$_GKMoreExistSectionFooterView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKMultiCircleImageBrush
|| __DATA.__objc_data _OBJC_METACLASS_$_GKMultiplayerActivityView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKMultiplayerBubbleView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKMultiplayerButtonFooterView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKMultiplayerButtonHeaderView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKMultiplayerCollectionLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_GKMultiplayerCollectionViewCell
|| __DATA.__objc_data _OBJC_METACLASS_$_GKMultiplayerCollectionViewCellAccessoryLeft
|| __DATA.__objc_data _OBJC_METACLASS_$_GKMultiplayerDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKMultiplayerFooterView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKMultiplayerHeaderView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKMultiplayerP2PViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKMultiplayerParticipant
|| __DATA.__objc_data _OBJC_METACLASS_$_GKMultiplayerPlayerCountViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKMultiplayerSeparatorView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKMultiplayerViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKNavigationController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKNavigationControllerDeferredTransitionInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_GKNetworkActivityIndicatorDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_GKNetworkImageSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKNicknameController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKNoContentView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKNotificationBanner
|| __DATA.__objc_data _OBJC_METACLASS_$_GKNotificationBannerView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKNotificationBannerViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKNotificationBannerWindow
|| __DATA.__objc_data _OBJC_METACLASS_$_GKOnboardingViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKPlaceholderContentStateMachine
|| __DATA.__objc_data _OBJC_METACLASS_$_GKPlaceholderView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKPlayerGameCell
|| __DATA.__objc_data _OBJC_METACLASS_$_GKPlayerWithSpeechBalloonView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKPurchasableGameCell
|| __DATA.__objc_data _OBJC_METACLASS_$_GKRatingView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKRawTurnsDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKRectShadowCell
|| __DATA.__objc_data _OBJC_METACLASS_$_GKRemoteUIController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKRemoteUIFooterView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKRemoteUIHeaderView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKRemoteUINavigationController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKRemoteUITableFooterView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKRemoteUITableHeaderView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKRemoteViewServiceController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKReportProblemRemoteUIController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKResizingLabel
|| __DATA.__objc_data _OBJC_METACLASS_$_GKRoundButton
|| __DATA.__objc_data _OBJC_METACLASS_$_GKScatterAnimator
|| __DATA.__objc_data _OBJC_METACLASS_$_GKScatterBackToFrontAnimator
|| __DATA.__objc_data _OBJC_METACLASS_$_GKScoreSharingInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_GKScreenConfigurationController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKSearchBar
|| __DATA.__objc_data _OBJC_METACLASS_$_GKSearchBarView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKSectionHeaderView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKSectionInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_GKSectionMetrics
|| __DATA.__objc_data _OBJC_METACLASS_$_GKSectionPresentationData
|| __DATA.__objc_data _OBJC_METACLASS_$_GKSectionSeparatorView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKSegmentInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_GKSegmentedSectionDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKSegmentedSectionHeaderView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKSegmentedSelectorView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKServiceFriendRequestViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKServiceViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKShowMoreView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKShowcaseCellView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKSignInInputView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKSignInViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKSimpleComposeController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKSimpleSlideAnimator
|| __DATA.__objc_data _OBJC_METACLASS_$_GKSkipControlButton
|| __DATA.__objc_data _OBJC_METACLASS_$_GKSpeechBalloonBackgroundView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKSplittingDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKStandaloneWiggleRotateAnimator
|| __DATA.__objc_data _OBJC_METACLASS_$_GKStaticRenderContentView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKStatusCell
|| __DATA.__objc_data _OBJC_METACLASS_$_GKSupplementaryViewFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_GKSupplementaryViewMetrics
|| __DATA.__objc_data _OBJC_METACLASS_$_GKSwipeToEditStateMachine
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTabBarTransitionAnimator
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTextBubbleContentView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTextBubbleControl
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTextField
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTextStyle
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTextStyleFocus
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTextStylePad
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTextStylePhone
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTextStylePhoneInBubbleDetail
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTextSuggestion
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTextView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKThemeBrush
|| __DATA.__objc_data _OBJC_METACLASS_$_GKThreadsafeImageCache
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTimeScopeButton
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTopClipView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTournamentExtensionHostViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTournamentInterface
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTournamentViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTournamentViewRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTurnBasedInviteViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTurnBasedMatchDetailHeaderView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTurnBasedMatchDetailViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTurnBasedMatchesDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTurnBasedMatchesViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTurnBasedMatchmakerExtensionHostContext
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTurnBasedMatchmakerHostViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTurnBasedMatchmakerViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTurnBasedParticipantsDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTurnGameCell
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTurnParticipantCell
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTurnsDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKUIContentUnavailableView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKUITheme
|| __DATA.__objc_data _OBJC_METACLASS_$_GKUnifiedRecipient
|| __DATA.__objc_data _OBJC_METACLASS_$_GKValueWithCaptionBubbleControl
|| __DATA.__objc_data _OBJC_METACLASS_$_GKViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKViewServiceInterface
|| __DATA.__objc_data _OBJC_METACLASS_$_GKWelcomeViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKWiggleRotateAnimator
|| __DATA.__objc_data _OBJC_METACLASS_$_GKiOSAppIconBrush
|| __DATA.__objc_data _OBJC_METACLASS_$_GKiOSAppIconBrushShare
|| __DATA.__objc_data _OBJC_METACLASS_$_SortHueEntry
|| __DATA.__objc_data _OBJC_METACLASS_$__GKBubbleFlowOnDemandFormSheetViewController
|| __DATA.__objc_data _OBJC_METACLASS_$__GKBubbleFlowPathTransitionInfo
|| __DATA.__objc_data _OBJC_METACLASS_$__GKBubbleFlowPseudoModalViewController
|| __DATA.__objc_data _OBJC_METACLASS_$__GKBubbleFlowTransitionInfo
|| __DATA.__objc_data _OBJC_METACLASS_$__GKCustomDrawnSpeechBalloonBackgroundView
|| __DATA.__objc_data _OBJC_METACLASS_$__GKImageSpeechBalloonBackgroundView
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKBubbleFlowRootViewController._animator
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKLocalPlayerAuthenticator._alertMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKLocalPlayerAuthenticator._alertTitle
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKLocalPlayerAuthenticator._authenticated
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKLocalPlayerAuthenticator._authenticating
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKLocalPlayerAuthenticator._forceAuthentication
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKLocalPlayerAuthenticator._inputLocalPlayer
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKLocalPlayerAuthenticator._lastAuthDate
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKLocalPlayerAuthenticator._lastAuthPlayerID
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKLocalPlayerAuthenticator._password
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKLocalPlayerAuthenticator._resultantLocalPlayer
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKLocalPlayerAuthenticator._username
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKLoginAlertView._passwordFieldIndex
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKLoginAlertView._username
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKUITheme._resourceCache
|| __DATA.__objc_ivar _OBJC_IVAR_$__GKBubbleFlowPathTransitionInfo._bubbleEndPositionsByType
|| __DATA_CONST.__const _GKAuthenticateExtensionBundleIdentifier
|| __DATA_CONST.__const _GKChallengeIssueExtensionBundleIdentifier
|| __DATA_CONST.__const _GKCollectionColumnLayoutDividerKind
|| __DATA_CONST.__const _GKCollectionLayoutTopHeaderKind
|| __DATA_CONST.__const _GKCollectionViewCellLeadingMarginConstraintIdentifier
|| __DATA_CONST.__const _GKCollectionViewCellTrailingMarginConstraintIdentifier
|| __DATA_CONST.__const _GKDashboardExtensionBundleIdentifier
|| __DATA_CONST.__const _GKExtensionBundleIdentifierKey
|| __DATA_CONST.__const _GKExtensionErrorDomain
|| __DATA_CONST.__const _GKExtensionItemAuthenticateModeKey
|| __DATA_CONST.__const _GKExtensionItemChallengeInternalKey
|| __DATA_CONST.__const _GKExtensionItemCurrentGameKey
|| __DATA_CONST.__const _GKExtensionItemDashboardLeaderboardID
|| __DATA_CONST.__const _GKExtensionItemDashboardShowPlayForChallenge
|| __DATA_CONST.__const _GKExtensionItemDashboardTimeScope
|| __DATA_CONST.__const _GKExtensionItemDashboardViewState
|| __DATA_CONST.__const _GKExtensionItemForcePickerKey
|| __DATA_CONST.__const _GKExtensionItemHostPIDKey
|| __DATA_CONST.__const _GKExtensionItemLocalPlayerKey
|| __DATA_CONST.__const _GKExtensionItemLocalizationsKey
|| __DATA_CONST.__const _GKExtensionItemMatchesAcceptedInviteInternal
|| __DATA_CONST.__const _GKExtensionItemMatchesHosted
|| __DATA_CONST.__const _GKExtensionItemMatchesMatchRequestInternal
|| __DATA_CONST.__const _GKExtensionItemMatchesShowExistingMatches
|| __DATA_CONST.__const _GKExtensionItemMatchesShowPlayForMatch
|| __DATA_CONST.__const _GKExtensionItemMatchesShowQuitForMatch
|| __DATA_CONST.__const _GKExtensionItemMessageKey
|| __DATA_CONST.__const _GKExtensionItemOnboardingLastPersonalizationVersionKey
|| __DATA_CONST.__const _GKExtensionItemOnboardingLastPrivacyNoticeVersionKey
|| __DATA_CONST.__const _GKExtensionItemPlayerInternalsKey
|| __DATA_CONST.__const _GKExtensionItemRTLKey
|| __DATA_CONST.__const _GKExtensionItemStatusBarHeightKey
|| __DATA_CONST.__const _GKExtensionMessageChallengeMessage
|| __DATA_CONST.__const _GKExtensionMessageCommandKey
|| __DATA_CONST.__const _GKExtensionMessageDashboardAssetNames
|| __DATA_CONST.__const _GKExtensionMessageLeaderboardNames
|| __DATA_CONST.__const _GKExtensionMessageLeaderboardSetNames
|| __DATA_CONST.__const _GKExtensionMessageParamKey
|| __DATA_CONST.__const _GKExtensionMessagePlayerID
|| __DATA_CONST.__const _GKExtensionMessagePlayerInternal
|| __DATA_CONST.__const _GKFixedHeightSentinel
|| __DATA_CONST.__const _GKFriendCodeKey
|| __DATA_CONST.__const _GKFriendSupportPageURLKey
|| __DATA_CONST.__const _GKGameCenterExtensionIsValidEntitlement
|| __DATA_CONST.__const _GKGameCenterExtensionPointName
|| __DATA_CONST.__const _GKGridLayoutKeyContentBoxMetricKey
|| __DATA_CONST.__const _GKGridLayoutKeyHeaderMetricKey
|| __DATA_CONST.__const _GKGridLayoutKeyPlaceholderMetricKey
|| __DATA_CONST.__const _GKGridLayoutKeySearchBarMetricKey
|| __DATA_CONST.__const _GKGridLayoutKeySearchPlaceholderMetricKey
|| __DATA_CONST.__const _GKGridLayoutKeySegmentedBoxMetricKey
|| __DATA_CONST.__const _GKGridLayoutKeySegmentedControlMetricKey
|| __DATA_CONST.__const _GKGridLayoutKeyShowMoreMetricKey
|| __DATA_CONST.__const _GKHostedAuthenticateModeKey
|| __DATA_CONST.__const _GKLoadStateContentLoaded
|| __DATA_CONST.__const _GKLoadStateError
|| __DATA_CONST.__const _GKLoadStateInitial
|| __DATA_CONST.__const _GKLoadStateLoadingContent
|| __DATA_CONST.__const _GKLoadStateNoContent
|| __DATA_CONST.__const _GKLoadStateRefreshingContent
|| __DATA_CONST.__const _GKMatchmakerExtensionBundleIdentifier
|| __DATA_CONST.__const _GKRemoteUIAliasKey
|| __DATA_CONST.__const _GKRemoteUIAltDSIDKey
|| __DATA_CONST.__const _GKRemoteUIAppleIDKey
|| __DATA_CONST.__const _GKRemoteUIApplyThemeKey
|| __DATA_CONST.__const _GKRemoteUIAuthCancelURL
|| __DATA_CONST.__const _GKRemoteUIAuthErrorMessage
|| __DATA_CONST.__const _GKRemoteUIAuthOKURL
|| __DATA_CONST.__const _GKRemoteUIAuthPassword
|| __DATA_CONST.__const _GKRemoteUIAuthTitle
|| __DATA_CONST.__const _GKRemoteUIAuthTokenKey
|| __DATA_CONST.__const _GKRemoteUIAuthUserName
|| __DATA_CONST.__const _GKRemoteUIErrorDomain
|| __DATA_CONST.__const _GKRemoteUIFirstNameKey
|| __DATA_CONST.__const _GKRemoteUIIsAuthenticatedKey
|| __DATA_CONST.__const _GKRemoteUILastNameKey
|| __DATA_CONST.__const _GKRemoteUILayoutStyleKey
|| __DATA_CONST.__const _GKRemoteUIPlayerIDKey
|| __DATA_CONST.__const _GKRemoteUIPushTokenKey
|| __DATA_CONST.__const _GKRemoteUIShouldAllowNearbyMultiplayer
|| __DATA_CONST.__const _GKSentFriendRequestNotificationName
|| __DATA_CONST.__const _GKSentFriendRequestPlayerListKey
|| __DATA_CONST.__const _GKServiceViewControllerCreatedNotification
|| __DATA_CONST.__const _GKServiceViewControllerNewHostPIDKey
|| __DATA_CONST.__const _GKSwipeStateAnimatingOpen
|| __DATA_CONST.__const _GKSwipeStateAnimatingShut
|| __DATA_CONST.__const _GKSwipeStateEditing
|| __DATA_CONST.__const _GKSwipeStateNothing
|| __DATA_CONST.__const _GKSwipeStateTracking
|| __DATA_CONST.__const _GKTournamentExtensionBundleIdentifier
|| __DATA_CONST.__const _GKTurnBasedMatchmakerExtensionBundleIdentifier
|| __DATA_CONST.__const _GKViewServiceCurrentGameKey
|| __DATA_CONST.__const _GKViewServiceHostPIDKey
|| __DATA_CONST.__const _GKViewServiceLocalPlayerKey
|| __DATA_CONST.__const _GKViewServiceStatusBarHeightKey
|| __DATA_CONST.__const _kCellResuseIdentifier
|| __DATA_CONST.__const _kFooterResuseIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKGameCenterViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKGameSharingInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKGameCenterViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKGameSharingInfo
|| __TEXT.__const _GKInvalidReferenceZPosition
|| __TEXT.__const _MAX_HUES
|| __TEXT.__text _GKBubbleFlowTransitionPhaseName
|| __TEXT.__text _GKBubbleFlowTransitionTypeName
|| __TEXT.__text _GKBubbleSizeWithDiameter
|| __TEXT.__text _GKBubbleSizeWithRadius
|| __TEXT.__text _GKBubbleTypeName
|| __TEXT.__text _GKClearOnboardingLastPersonalizationDisplayedFlag
|| __TEXT.__text _GKClearOnboardingLastPrivacyNoticeDisplayedFlag
|| __TEXT.__text _GKExtensionProtocolSecureCodedClasses
|| __TEXT.__text _GKGetEnabledNotifications
|| __TEXT.__text _GKGetNotificationCenterEnabled
|| __TEXT.__text _GKIsAvatarEditingSupported
|| __TEXT.__text _GKPingDaemon
|| __TEXT.__text _GKRectDivideYIntoThreeConsumingMiddle
|| __TEXT.__text _GKRectEnforceMinimumHeight
|| __TEXT.__text _GKRectsCenterXInRect
|| __TEXT.__text _GKRectsCenterYInRect
|| __TEXT.__text _GKSetNotificationCenterEnabled
|| __TEXT.__text _GKSetNotificationsEnabled
|| __TEXT.__text _GKTerminateDaemon
|| __TEXT.__text _IntegralPositionForBounds
|| __TEXT.__text __GKInterfaceOrientationName
|| __TEXT.__text __GKShortVCDescription
|| __TEXT.__text __GKVector3IsVector3Zero
|| __TEXT.__text __Z23GKDefaultMaxStatusWidth20UIUserInterfaceIdiom
|| __TEXT.__text __Z23GKDefaultMaxStatusWidthv
|| __TEXT.__text __gkRangeFromToDescription
__ Accelerate: _vImageBoxConvolve_ARGB8888
__ Accelerate: _vImageBuffer_Init
__ Accelerate: _vImageBuffer_InitWithCGImage
__ Accelerate: _vImageCreateCGImageFromBuffer
__ Accelerate: _vImageMatrixMultiply_ARGB8888
__ AppleAccount: _AASetupAssistantCountryKey
__ AppleAccount: _AASetupAssistantLanguageKey
__ AppleAccount: _AASetupAssistantTimezoneKey
__ AppleAccount: _OBJC_CLASS_$_AADeviceInfo
__ AppleAccount: _OBJC_CLASS_$_AASetupAssistantService
__ AppleAccount: _OBJC_CLASS_$_AAURLConfiguration
__ AuthKit: _AKAuthenticationAlternateDSIDKey
__ AuthKit: _AKAuthenticationNewAppleIDSetupInfoKey
__ AuthKit: _AKAuthenticationPasswordKey
__ AuthKit: _AKAuthenticationRawPasswordKey
__ AuthKit: _AKAuthenticationUsernameKey
__ AuthKit: _OBJC_CLASS_$_AKAppleIDAuthenticationController
__ AuthKit: _OBJC_CLASS_$_AKAppleIDSession
__ AuthKitUI: _OBJC_CLASS_$_AKAppleIDAuthenticationInAppContext
__ AuthKitUI: _OBJC_CLASS_$_AKInlineSignInViewController
__ AvatarUI: _AVTUIAreAvatarsSupported
__ Contacts: _CNContactEmailAddressesKey
__ Contacts: _CNContactFamilyNameKey
__ Contacts: _CNContactGivenNameKey
__ Contacts: _CNContactIdentifierKey
__ Contacts: _CNContactImageDataKey
__ Contacts: _CNContactMiddleNameKey
__ Contacts: _CNContactNamePrefixKey
__ Contacts: _CNContactNameSuffixKey
__ Contacts: _CNContactNicknameKey
__ Contacts: _CNContactPhoneNumbersKey
__ Contacts: _CNContactPreviousFamilyNameKey
__ Contacts: _CNContactSectionForSortingByFamilyNameKey
__ Contacts: _CNContactSectionForSortingByGivenNameKey
__ Contacts: _CNContactThumbnailImageDataKey
__ Contacts: _CNContactTypeKey
__ Contacts: _CNLabelEmailiCloud
__ Contacts: _CNLabelHome
__ Contacts: _CNLabelPhoneNumberHomeFax
__ Contacts: _CNLabelPhoneNumberMain
__ Contacts: _CNLabelPhoneNumberMobile
__ Contacts: _CNLabelPhoneNumberOtherFax
__ Contacts: _CNLabelPhoneNumberPager
__ Contacts: _CNLabelPhoneNumberWorkFax
__ Contacts: _CNLabelPhoneNumberiPhone
__ Contacts: _OBJC_CLASS_$_CNContact
__ Contacts: _OBJC_CLASS_$_CNContactFetchRequest
__ Contacts: _OBJC_CLASS_$_CNContactFormatter
__ Contacts: _OBJC_CLASS_$_CNContactStore
__ Contacts: _OBJC_CLASS_$_CNContactsUserDefaults
__ Contacts: _OBJC_CLASS_$_CNLabeledValue
__ Contacts: _OBJC_CLASS_$_CNMutableContact
__ Contacts: _OBJC_CLASS_$_CNPhoneNumber
__ ContactsUI: _OBJC_CLASS_$_CNAvatarImageRenderer
__ ContactsUI: _OBJC_CLASS_$_CNAvatarImageRendererSettings
__ ContactsUI: _OBJC_CLASS_$_CNAvatarImageRenderingScope
__ ContactsUI: _OBJC_CLASS_$_CNAvatarViewController
__ ContactsUI: _OBJC_CLASS_$_CNAvatarViewControllerSettings
__ ContactsUI: _OBJC_CLASS_$_CNPhotoPickerViewController
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFStringGetCStringPtr
__ CoreFoundation: _CFStringGetCharacters
__ CoreFoundation: _CFStringGetCharactersPtr
__ CoreFoundation: _CFUserNotificationDisplayAlert
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSLocaleCountryCode
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCache
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMethodSignature
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__
__ CoreFoundation: ___NSDictionary0__
__ CoreFoundation: _kCFBooleanTrue
__ CoreGraphics: _CGAffineTransformIdentity
__ CoreGraphics: _CGAffineTransformIsIdentity
__ CoreGraphics: _CGAffineTransformMakeScale
__ CoreGraphics: _CGAffineTransformMakeTranslation
__ CoreGraphics: _CGAffineTransformScale
__ CoreGraphics: _CGBitmapContextCreate
__ CoreGraphics: _CGBitmapContextCreateImage
__ CoreGraphics: _CGBitmapContextGetBitmapInfo
__ CoreGraphics: _CGBitmapContextGetBytesPerRow
__ CoreGraphics: _CGBitmapContextGetData
__ CoreGraphics: _CGBitmapGetAlignedBytesPerRow
__ CoreGraphics: _CGColorGetColorSpace
__ CoreGraphics: _CGColorGetNumberOfComponents
__ CoreGraphics: _CGColorSpaceCreateDeviceGray
__ CoreGraphics: _CGColorSpaceCreateDeviceRGB
__ CoreGraphics: _CGColorSpaceGetModel
__ CoreGraphics: _CGColorSpaceRelease
__ CoreGraphics: _CGContextAddPath
__ CoreGraphics: _CGContextClearRect
__ CoreGraphics: _CGContextClip
__ CoreGraphics: _CGContextClipToMask
__ CoreGraphics: _CGContextConvertSizeToDeviceSpace
__ CoreGraphics: _CGContextDrawImage
__ CoreGraphics: _CGContextDrawLinearGradient
__ CoreGraphics: _CGContextFillEllipseInRect
__ CoreGraphics: _CGContextFillRect
__ CoreGraphics: _CGContextRelease
__ CoreGraphics: _CGContextRestoreGState
__ CoreGraphics: _CGContextSaveGState
__ CoreGraphics: _CGContextScaleCTM
__ CoreGraphics: _CGContextSetBaseCTM
__ CoreGraphics: _CGContextSetBlendMode
__ CoreGraphics: _CGContextSetFillColorWithColor
__ CoreGraphics: _CGContextSetInterpolationQuality
__ CoreGraphics: _CGContextSetStrokeColorWithColor
__ CoreGraphics: _CGContextStrokeEllipseInRect
__ CoreGraphics: _CGContextStrokeRect
__ CoreGraphics: _CGContextTranslateCTM
__ CoreGraphics: _CGDataProviderCreateWithData
__ CoreGraphics: _CGGradientCreateWithColors
__ CoreGraphics: _CGImageCreate
__ CoreGraphics: _CGImageCreateWithImageInRect
__ CoreGraphics: _CGImageGetAlphaInfo
__ CoreGraphics: _CGImageGetBitmapInfo
__ CoreGraphics: _CGImageGetColorSpace
__ CoreGraphics: _CGImageGetHeight
__ CoreGraphics: _CGImageGetWidth
__ CoreGraphics: _CGImageRelease
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectContainsPoint
__ CoreGraphics: _CGRectDivide
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetMidY
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectInset
__ CoreGraphics: _CGRectIntegral
__ CoreGraphics: _CGRectIntersectsRect
__ CoreGraphics: _CGRectIsEmpty
__ CoreGraphics: _CGRectOffset
__ CoreGraphics: _CGRectUnion
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ CoreServices: _OBJC_CLASS_$_LSApplicationWorkspace
__ Foundation: _NSClassFromString
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSKeyValueChangeNewKey
__ Foundation: _NSLinguisticTagDeterminer
__ Foundation: _NSLinguisticTagSchemeLexicalClass
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLog
__ Foundation: _NSSearchPathForDirectoriesInDomains
__ Foundation: _NSSelectorFromString
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSURLErrorDomain
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _NSUnionRange
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSBlockOperation
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSBundleResourceRequest
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSDistributedNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSExtension
__ Foundation: _OBJC_CLASS_$_NSExtensionContext
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSIndexPath
__ Foundation: _OBJC_CLASS_$_NSIndexSet
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSLayoutConstraint
__ Foundation: _OBJC_CLASS_$_NSLinguisticTagger
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableAttributedString
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSMutableURLRequest
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSPointerArray
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLQueryItem
__ Foundation: _OBJC_CLASS_$_NSURLSessionConfiguration
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_METACLASS_$_NSExtensionContext
__ Foundation: _OBJC_METACLASS_$_NSIndexPath
__ Foundation: _OBJC_METACLASS_$_NSXPCInterface
__ Foundation: __NSDictionaryOfVariableBindings
__ GameCenterFoundation: _GKAbsoluteTimeAsWhenString
__ GameCenterFoundation: _GKAcceptedGameInviteNotification
__ GameCenterFoundation: _GKActiveLogBits
__ GameCenterFoundation: _GKAddFriendFromFriendList
__ GameCenterFoundation: _GKAddFriendFromLeaderboard
__ GameCenterFoundation: _GKAliasKey
__ GameCenterFoundation: _GKApplicationLinkedOnOrAfter
__ GameCenterFoundation: _GKAtomicCompareAndSwap32
__ GameCenterFoundation: _GKAtomicDecrement32
__ GameCenterFoundation: _GKAtomicIncrement32
__ GameCenterFoundation: _GKAvatarSubdirectoryNameForPlayerID
__ GameCenterFoundation: _GKCancelledGameInviteNotification
__ GameCenterFoundation: _GKContextInvite
__ GameCenterFoundation: _GKDefaultIForgotURL
__ GameCenterFoundation: _GKErrorDomain
__ GameCenterFoundation: _GKFindGamesKey
__ GameCenterFoundation: _GKFormattedStringFromInteger
__ GameCenterFoundation: _GKFormattedStringFromPercentInteger
__ GameCenterFoundation: _GKFormattedStringWithGroupingFromInteger
__ GameCenterFoundation: _GKFriendRequestCancelSending
__ GameCenterFoundation: _GKFriendRequestCancelled
__ GameCenterFoundation: _GKFriendRequestCannotSendError
__ GameCenterFoundation: _GKFriendRequestCreated
__ GameCenterFoundation: _GKFriendRequestFailSending
__ GameCenterFoundation: _GKFriendRequestGroupRecipientError
__ GameCenterFoundation: _GKFriendRequestRestrictedError
__ GameCenterFoundation: _GKFriendRequestSent
__ GameCenterFoundation: _GKGameCenterUIFrameworkBundle
__ GameCenterFoundation: _GKGetApplicationDidEnterBackgroundNotificationName
__ GameCenterFoundation: _GKGetApplicationWillTerminateNotificationName
__ GameCenterFoundation: _GKGetLocalizedStringFromTableInBundle
__ GameCenterFoundation: _GKImageCacheRoot
__ GameCenterFoundation: _GKImageURLKeyForSize
__ GameCenterFoundation: _GKInternalTurnBasedGameEventNotification
__ GameCenterFoundation: _GKInviteIDKey
__ GameCenterFoundation: _GKOSLogInit
__ GameCenterFoundation: _GKPickerSearchBarClicked
__ GameCenterFoundation: _GKPlayerAuthenticationDidChangeNotificationName
__ GameCenterFoundation: _GKPlayerDidAuthenticateNewPlayerIDKey
__ GameCenterFoundation: _GKPlayerDidAuthenticateOldPlayerIDKey
__ GameCenterFoundation: _GKPlayerIDHashAddKey
__ GameCenterFoundation: _GKPlayerIDHashModKey
__ GameCenterFoundation: _GKPlayerIDKey
__ GameCenterFoundation: _GKPlayersToInviteNotification
__ GameCenterFoundation: _GKQueryParamsBagKey
__ GameCenterFoundation: _GKRemoteUIAuthorizeAccountURLKey
__ GameCenterFoundation: _GKRemoteUIEditAccountURLKey
__ GameCenterFoundation: _GKRemoteUILinkAccountsURLKey
__ GameCenterFoundation: _GKRemoteUIReportProblemURLKey
__ GameCenterFoundation: _GKReporterDomainDashboardAchievementDetail
__ GameCenterFoundation: _GKReporterDomainDashboardAchievementList
__ GameCenterFoundation: _GKReporterDomainDashboardChallengeDetail
__ GameCenterFoundation: _GKReporterDomainDashboardChallengeList
__ GameCenterFoundation: _GKReporterDomainDashboardFriendScoreDetail
__ GameCenterFoundation: _GKReporterDomainDashboardFriendsOnScoreList
__ GameCenterFoundation: _GKReporterDomainDashboardLeaderboardList
__ GameCenterFoundation: _GKReporterDomainDashboardMeScoreDetail
__ GameCenterFoundation: _GKReporterDomainDashboardOthersScoreDetail
__ GameCenterFoundation: _GKReporterDomainDashboardRankOnFriendScoreDetail
__ GameCenterFoundation: _GKReporterDomainDashboardRankOnMeScoreDetail
__ GameCenterFoundation: _GKReporterDomainDashboardRankOnOthersScoreDetail
__ GameCenterFoundation: _GKReporterDomainDashboardRankOnShareFriendScore
__ GameCenterFoundation: _GKReporterDomainDashboardRankOnShareMeScore
__ GameCenterFoundation: _GKReporterDomainDashboardScoreList
__ GameCenterFoundation: _GKReporterDomainDashboardShareAchievement
__ GameCenterFoundation: _GKReporterDomainDashboardShareFriendScore
__ GameCenterFoundation: _GKReporterDomainDashboardShareMeScore
__ GameCenterFoundation: _GKReporterDomainGameDetailShowStorePage
__ GameCenterFoundation: _GKReporterDomainInviteFlow
__ GameCenterFoundation: _GKReporterDomainInviteFlowComposeCancel
__ GameCenterFoundation: _GKReporterDomainInviteFlowConnectingCancel
__ GameCenterFoundation: _GKReporterDomainInviteFlowContactsPlayer
__ GameCenterFoundation: _GKReporterDomainInviteFlowDetailAdd
__ GameCenterFoundation: _GKReporterDomainInviteFlowDetailCancel
__ GameCenterFoundation: _GKReporterDomainInviteFlowDetailSelection
__ GameCenterFoundation: _GKReporterDomainInviteFlowFriendPlayer
__ GameCenterFoundation: _GKReporterDomainInviteFlowInitialCancel
__ GameCenterFoundation: _GKReporterDomainInviteFlowInviteFriends
__ GameCenterFoundation: _GKReporterDomainInviteFlowMessageBasedInvites
__ GameCenterFoundation: _GKReporterDomainInviteFlowNearByPlayer
__ GameCenterFoundation: _GKReporterDomainInviteFlowPlayNow
__ GameCenterFoundation: _GKReporterDomainInviteFlowPushedBasedInvites
__ GameCenterFoundation: _GKReporterDomainInviteFlowRTGameFailed
__ GameCenterFoundation: _GKReporterDomainInviteFlowRTInviteeConnectionTime
__ GameCenterFoundation: _GKReporterDomainInviteFlowRTNoOfInvitees
__ GameCenterFoundation: _GKReporterDomainInviteFlowSendMessage
__ GameCenterFoundation: _GKReporterDomainInviteFlowStart
__ GameCenterFoundation: _GKReporterDomainManualFriending
__ GameCenterFoundation: _GKReporterDomainSettingsRemoveFriend
__ GameCenterFoundation: _GKReporterOnboardingFieldAvatarChanged
__ GameCenterFoundation: _GKReporterOnboardingFieldAvatarDeleted
__ GameCenterFoundation: _GKReporterOnboardingFieldAvatarEditingCanceled
__ GameCenterFoundation: _GKReporterOnboardingFieldAvatarTapped
__ GameCenterFoundation: _GKReporterOnboardingFieldNicknameChanged
__ GameCenterFoundation: _GKReporterOnboardingFieldNicknameEditingCanceled
__ GameCenterFoundation: _GKReporterOnboardingFieldNicknameTapped
__ GameCenterFoundation: _GKReporterOnboardingFieldPersonalizationScreenDisplayed
__ GameCenterFoundation: _GKReporterOnboardingFieldPrivacyAcknowledged
__ GameCenterFoundation: _GKReporterOnboardingFieldSignOutCanceled
__ GameCenterFoundation: _GKReporterOnboardingFieldSignOutTapped
__ GameCenterFoundation: _GKReporterOnboardingFieldWelcomeScreenDisplayed
__ GameCenterFoundation: _GKServerStatusCode
__ GameCenterFoundation: _GKUISetRemote
__ GameCenterFoundation: _OBJC_CLASS_$_GKAchievement
__ GameCenterFoundation: _OBJC_CLASS_$_GKAchievementChallenge
__ GameCenterFoundation: _OBJC_CLASS_$_GKAchievementDescription
__ GameCenterFoundation: _OBJC_CLASS_$_GKActivity
__ GameCenterFoundation: _OBJC_CLASS_$_GKApplicationWorkspace
__ GameCenterFoundation: _OBJC_CLASS_$_GKAutomatchPlayerInternal
__ GameCenterFoundation: _OBJC_CLASS_$_GKChallenge
__ GameCenterFoundation: _OBJC_CLASS_$_GKChallengeEventHandler
__ GameCenterFoundation: _OBJC_CLASS_$_GKChallengeInternal
__ GameCenterFoundation: _OBJC_CLASS_$_GKDaemonProxy
__ GameCenterFoundation: _OBJC_CLASS_$_GKDevice
__ GameCenterFoundation: _OBJC_CLASS_$_GKDispatchGroup
__ GameCenterFoundation: _OBJC_CLASS_$_GKEventEmitter
__ GameCenterFoundation: _OBJC_CLASS_$_GKFriendPlayerInternal
__ GameCenterFoundation: _OBJC_CLASS_$_GKGame
__ GameCenterFoundation: _OBJC_CLASS_$_GKGameRecord
__ GameCenterFoundation: _OBJC_CLASS_$_GKInviteInternal
__ GameCenterFoundation: _OBJC_CLASS_$_GKLeaderboard
__ GameCenterFoundation: _OBJC_CLASS_$_GKLeaderboardSet
__ GameCenterFoundation: _OBJC_CLASS_$_GKLocalPlayer
__ GameCenterFoundation: _OBJC_CLASS_$_GKLocalPlayerInternal
__ GameCenterFoundation: _OBJC_CLASS_$_GKMatch
__ GameCenterFoundation: _OBJC_CLASS_$_GKMatchRequest
__ GameCenterFoundation: _OBJC_CLASS_$_GKMatchRequestInternal
__ GameCenterFoundation: _OBJC_CLASS_$_GKMatchmaker
__ GameCenterFoundation: _OBJC_CLASS_$_GKPlayer
__ GameCenterFoundation: _OBJC_CLASS_$_GKPlayerCredentialController
__ GameCenterFoundation: _OBJC_CLASS_$_GKPlayerInternal
__ GameCenterFoundation: _OBJC_CLASS_$_GKPreferences
__ GameCenterFoundation: _OBJC_CLASS_$_GKReachability
__ GameCenterFoundation: _OBJC_CLASS_$_GKReporter
__ GameCenterFoundation: _OBJC_CLASS_$_GKScore
__ GameCenterFoundation: _OBJC_CLASS_$_GKScoreChallenge
__ GameCenterFoundation: _OBJC_CLASS_$_GKServiceInterface
__ GameCenterFoundation: _OBJC_CLASS_$_GKThreadsafeCache
__ GameCenterFoundation: _OBJC_CLASS_$_GKTournament
__ GameCenterFoundation: _OBJC_CLASS_$_GKTournamentParticipantRequest
__ GameCenterFoundation: _OBJC_CLASS_$_GKTurnBasedEventHandler
__ GameCenterFoundation: _OBJC_CLASS_$_GKTurnBasedMatch
__ GameCenterFoundation: _OBJC_CLASS_$_GKTurnBasedMatchInternal
__ GameCenterFoundation: _OBJC_CLASS_$_GKUpdateGroup
__ GameCenterFoundation: _OBJC_CLASS_$__GKStateMachine
__ GameCenterFoundation: _OBJC_METACLASS_$_GKThreadsafeCache
__ GameCenterFoundation: _OBJC_METACLASS_$__GKStateMachine
__ GameCenterFoundation: __GKIsRemoteUI
__ GameCenterFoundation: __gkBeautifyVariableName
__ GameCenterFoundation: __gkTabStringForTabLevel
__ GameCenterFoundation: __gkUnicodifyDescription
__ GameCenterFoundation: _gk_dispatch_as_group
__ GameCenterFoundation: _gk_dispatch_async_do
__ GameCenterFoundation: _gk_dispatch_debounce
__ GameCenterFoundation: _gk_dispatch_group_do
__ GameCenterFoundation: _os_log_GKLogAccount
__ GameCenterFoundation: _os_log_GKLogAccountError
__ GameCenterFoundation: _os_log_GKLogCache
__ GameCenterFoundation: _os_log_GKLogDaemon
__ GameCenterFoundation: _os_log_GKLogDeveloper
__ GameCenterFoundation: _os_log_GKLogError
__ GameCenterFoundation: _os_log_GKLogGeneral
__ GameCenterFoundation: _os_log_GKLogHosted
__ GameCenterFoundation: _os_log_GKLogMatch
__ GameCenterFoundation: _os_log_GKLogPerf
__ GameCenterFoundation: _os_log_GKLogTrace
__ LinkPresentation: _OBJC_CLASS_$_LPGameCenterInvitationMetadata
__ LinkPresentation: _OBJC_CLASS_$_LPImage
__ LinkPresentation: _OBJC_CLASS_$_LPLinkMetadata
__ MessageUI: _OBJC_CLASS_$_MFMessageComposeViewController
__ Messages: _OBJC_CLASS_$_MSMessage
__ Messages: _OBJC_CLASS_$_MSMessageLiveLayout
__ Messages: _OBJC_CLASS_$_MSMessageTemplateLayout
__ Messages: _OBJC_CLASS_$_MSSession
__ OnBoardingKit: _OBJC_CLASS_$_OBBoldTrayButton
__ OnBoardingKit: _OBJC_CLASS_$_OBBundle
__ OnBoardingKit: _OBJC_CLASS_$_OBPrivacyFlow
__ OnBoardingKit: _OBJC_CLASS_$_OBPrivacyLinkController
__ OnBoardingKit: _OBPrivacyGameCenterIdentifier
__ QuartzCore: _CACurrentMediaTime
__ QuartzCore: _CATransform3DIdentity
__ QuartzCore: _CATransform3DIsIdentity
__ QuartzCore: _CATransform3DMakeRotation
__ QuartzCore: _CATransform3DMakeScale
__ QuartzCore: _CATransform3DMakeTranslation
__ QuartzCore: _CATransform3DRotate
__ QuartzCore: _CATransform3DScale
__ QuartzCore: _OBJC_CLASS_$_CABasicAnimation
__ QuartzCore: _OBJC_CLASS_$_CADisplayLink
__ QuartzCore: _OBJC_CLASS_$_CAGradientLayer
__ QuartzCore: _OBJC_CLASS_$_CAKeyframeAnimation
__ QuartzCore: _OBJC_CLASS_$_CALayer
__ QuartzCore: _OBJC_CLASS_$_CAMediaTimingFunction
__ QuartzCore: _OBJC_CLASS_$_CAMutableMeshTransform
__ QuartzCore: _OBJC_CLASS_$_CASpringAnimation
__ QuartzCore: _OBJC_CLASS_$_CATransaction
__ QuartzCore: _OBJC_CLASS_$_CATransition
__ QuartzCore: _kCAAnimationCubic
__ QuartzCore: _kCAAnimationLinear
__ QuartzCore: _kCAAnimationRelative
__ QuartzCore: _kCADepthNormalizationNone
__ QuartzCore: _kCAFillModeBackwards
__ QuartzCore: _kCAFillModeBoth
__ QuartzCore: _kCAFillModeForwards
__ QuartzCore: _kCAMediaTimingFunctionEaseIn
__ QuartzCore: _kCAMediaTimingFunctionEaseInEaseOut
__ QuartzCore: _kCAMediaTimingFunctionEaseOut
__ QuartzCore: _kCATransactionDisableActions
__ QuartzCore: _kCATransitionFade
__ RemoteUI: _OBJC_CLASS_$_RemoteUIController
__ StoreKit: _OBJC_CLASS_$_SKStoreProductViewController
__ UIKit: _NSFontAttributeName
__ UIKit: _NSForegroundColorAttributeName
__ UIKit: _NSParagraphStyleAttributeName
__ UIKit: _NSStringFromCGRect
__ UIKit: _NSStringFromCGSize
__ UIKit: _NSStringFromUIEdgeInsets
__ UIKit: _NSTextStorageDidProcessEditingNotification
__ UIKit: _OBJC_CLASS_$_NSMutableParagraphStyle
__ UIKit: _OBJC_CLASS_$_NSParagraphStyle
__ UIKit: _OBJC_CLASS_$_UIActivityIndicatorView
__ UIKit: _OBJC_CLASS_$_UIActivityViewController
__ UIKit: _OBJC_CLASS_$_UIAlertAction
__ UIKit: _OBJC_CLASS_$_UIAlertController
__ UIKit: _OBJC_CLASS_$_UIAlertView
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIBarButtonItem
__ UIKit: _OBJC_CLASS_$_UIBezierPath
__ UIKit: _OBJC_CLASS_$_UIBlurEffect
__ UIKit: _OBJC_CLASS_$_UIButton
__ UIKit: _OBJC_CLASS_$_UICollectionReusableView
__ UIKit: _OBJC_CLASS_$_UICollectionView
__ UIKit: _OBJC_CLASS_$_UICollectionViewCell
__ UIKit: _OBJC_CLASS_$_UICollectionViewController
__ UIKit: _OBJC_CLASS_$_UICollectionViewFlowLayout
__ UIKit: _OBJC_CLASS_$_UICollectionViewLayout
__ UIKit: _OBJC_CLASS_$_UICollectionViewLayoutAttributes
__ UIKit: _OBJC_CLASS_$_UICollectionViewLayoutInvalidationContext
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIContextualAction
__ UIKit: _OBJC_CLASS_$_UIControl
__ UIKit: _OBJC_CLASS_$_UIDevice
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UIKeyboard
__ UIKit: _OBJC_CLASS_$_UILabel
__ UIKit: _OBJC_CLASS_$_UILocalizedIndexedCollation
__ UIKit: _OBJC_CLASS_$_UINavigationBar
__ UIKit: _OBJC_CLASS_$_UINavigationController
__ UIKit: _OBJC_CLASS_$_UINib
__ UIKit: _OBJC_CLASS_$_UIPanGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIPopoverPresentationController
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UIScrollView
__ UIKit: _OBJC_CLASS_$_UISearchBar
__ UIKit: _OBJC_CLASS_$_UISearchController
__ UIKit: _OBJC_CLASS_$_UISegmentedControl
__ UIKit: _OBJC_CLASS_$_UISplitViewController
__ UIKit: _OBJC_CLASS_$_UIStackView
__ UIKit: _OBJC_CLASS_$_UISwipeActionsConfiguration
__ UIKit: _OBJC_CLASS_$_UITabBarController
__ UIKit: _OBJC_CLASS_$_UITableViewCell
__ UIKit: _OBJC_CLASS_$_UITableViewController
__ UIKit: _OBJC_CLASS_$_UITableViewHeaderFooterView
__ UIKit: _OBJC_CLASS_$_UITapGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UITextField
__ UIKit: _OBJC_CLASS_$_UITextSuggestion
__ UIKit: _OBJC_CLASS_$_UITextView
__ UIKit: _OBJC_CLASS_$_UITraitCollection
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_CLASS_$_UIVisualEffectView
__ UIKit: _OBJC_CLASS_$_UIWindow
__ UIKit: _OBJC_CLASS_$__UIBackdropView
__ UIKit: _OBJC_CLASS_$__UIContentUnavailableView
__ UIKit: _OBJC_CLASS_$__UIDynamicAnimationActiveValue
__ UIKit: _OBJC_CLASS_$__UIDynamicValueAnimation
__ UIKit: _OBJC_CLASS_$__UIFallbackPresentationViewController
__ UIKit: _OBJC_CLASS_$__UIRemoteViewController
__ UIKit: _OBJC_METACLASS_$_UIAlertView
__ UIKit: _OBJC_METACLASS_$_UIButton
__ UIKit: _OBJC_METACLASS_$_UICollectionReusableView
__ UIKit: _OBJC_METACLASS_$_UICollectionViewCell
__ UIKit: _OBJC_METACLASS_$_UICollectionViewController
__ UIKit: _OBJC_METACLASS_$_UICollectionViewFlowLayout
__ UIKit: _OBJC_METACLASS_$_UICollectionViewLayout
__ UIKit: _OBJC_METACLASS_$_UICollectionViewLayoutAttributes
__ UIKit: _OBJC_METACLASS_$_UICollectionViewLayoutInvalidationContext
__ UIKit: _OBJC_METACLASS_$_UIControl
__ UIKit: _OBJC_METACLASS_$_UIImageView
__ UIKit: _OBJC_METACLASS_$_UILabel
__ UIKit: _OBJC_METACLASS_$_UINavigationController
__ UIKit: _OBJC_METACLASS_$_UIScrollView
__ UIKit: _OBJC_METACLASS_$_UISearchBar
__ UIKit: _OBJC_METACLASS_$_UITableViewCell
__ UIKit: _OBJC_METACLASS_$_UITableViewController
__ UIKit: _OBJC_METACLASS_$_UITableViewHeaderFooterView
__ UIKit: _OBJC_METACLASS_$_UITapGestureRecognizer
__ UIKit: _OBJC_METACLASS_$_UITextField
__ UIKit: _OBJC_METACLASS_$_UITextSuggestion
__ UIKit: _OBJC_METACLASS_$_UITextView
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _OBJC_METACLASS_$_UIWindow
__ UIKit: _OBJC_METACLASS_$__UIContentUnavailableView
__ UIKit: _OBJC_METACLASS_$__UIRemoteViewController
__ UIKit: _UIActivityTypeAddToReadingList
__ UIKit: _UIActivityTypeAirDrop
__ UIKit: _UIActivityTypeCopyToPasteboard
__ UIKit: _UIActivityTypeMail
__ UIKit: _UIActivityTypeMessage
__ UIKit: _UIApp
__ UIKit: _UIApplicationDidBecomeActiveNotification
__ UIKit: _UIApplicationDidEnterBackgroundNotification
__ UIKit: _UIApplicationWillEnterForegroundNotification
__ UIKit: _UIApplicationWillResignActiveNotification
__ UIKit: _UICeilToViewScale
__ UIKit: _UICollectionElementKindSectionFooter
__ UIKit: _UICollectionElementKindSectionHeader
__ UIKit: _UIContentSizeCategoryDidChangeNotification
__ UIKit: _UIContentSizeCategoryExtraExtraExtraLarge
__ UIKit: _UIContentSizeCategoryExtraExtraLarge
__ UIKit: _UIContentSizeCategoryExtraLarge
__ UIKit: _UIEdgeInsetsZero
__ UIKit: _UIFontDescriptorTextStyleAttribute
__ UIKit: _UIFontTextStyleBody
__ UIKit: _UIFontTextStyleCaption1
__ UIKit: _UIFontTextStyleCaption2
__ UIKit: _UIFontTextStyleFootnote
__ UIKit: _UIFontTextStyleHeadline
__ UIKit: _UIFontTextStyleSubheadline
__ UIKit: _UIGraphicsBeginImageContextWithOptions
__ UIKit: _UIGraphicsEndImageContext
__ UIKit: _UIGraphicsGetCurrentContext
__ UIKit: _UIGraphicsGetImageFromCurrentImageContext
__ UIKit: _UIGraphicsPopContext
__ UIKit: _UIGraphicsPushContext
__ UIKit: _UIImagePNGRepresentation
__ UIKit: _UIKeyboardAnimationDurationUserInfoKey
__ UIKit: _UIKeyboardFrameEndUserInfoKey
__ UIKit: _UIKeyboardWillHideNotification
__ UIKit: _UIKeyboardWillShowNotification
__ UIKit: _UIRectCenteredIntegralRect
__ UIKit: _UIRectCenteredXInRect
__ UIKit: _UIRectCenteredYInRect
__ UIKit: _UIRectFill
__ UIKit: _UIRectFillUsingBlendMode
__ UIKit: _UIRectGetCenter
__ UIKit: _UIRoundToViewScale
__ UIKit: _UIScreenDidConnectNotification
__ UIKit: _UIScreenDidDisconnectNotification
__ UIKit: _UIScreenModeDidChangeNotification
__ UIKit: _UITextFieldTextDidChangeNotification
__ UIKit: _UITransitionContextFromViewControllerKey
__ UIKit: _UITransitionContextToViewControllerKey
__ UIKit: _UIViewNoIntrinsicMetric
__ UIKit: __UIDynamicAnimationFrictionHigh
__ UIKit: __UIDynamicAnimationUnitSizeTranslation
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___sincos_stret
__ libSystem.B.dylib: ___sincosf_stret
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _atan2
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_barrier_async
__ libSystem.B.dylib: _dispatch_get_current_queue
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_queue_get_label
__ libSystem.B.dylib: _dispatch_release
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _exit
__ libSystem.B.dylib: _fflush
__ libSystem.B.dylib: _fopen
__ libSystem.B.dylib: _fputs
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _mach_continuous_time
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _printf
__ libSystem.B.dylib: _random
__ libSystem.B.dylib: _sandbox_extension_consume
__ libSystem.B.dylib: _sandbox_extension_release
__ libSystem.B.dylib: _sin
__ libSystem.B.dylib: _srandom
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _class_getName
__ libobjc.A.dylib: _class_respondsToSelector
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _protocol_copyMethodDescriptionList
__ libobjc.A.dylib: _protocol_getMethodDescription
__ libobjc.A.dylib: _sel_getName
GKGameSharingInfo : NSObject
 @property  NSString *gameName
 @property  NSString *developerName
 @property  NSURL *viewItemURL
 @property  NSURL *shortViewItemURL
 @property  UIImage *iconImage
 @property  NSString *emailSubject
 @property  NSString *emailBody
 @property  BOOL complete

  // instance methods
  -[GKGameSharingInfo dealloc]
  -[GKGameSharingInfo complete]
  -[GKGameSharingInfo setComplete:]
  -[GKGameSharingInfo iconImage]
  -[GKGameSharingInfo setIconImage:]
  -[GKGameSharingInfo developerName]
  -[GKGameSharingInfo viewItemURL]
  -[GKGameSharingInfo setDeveloperName:]
  -[GKGameSharingInfo setEmailSubject:]
  -[GKGameSharingInfo setEmailBody:]
  -[GKGameSharingInfo setGameName:]
  -[GKGameSharingInfo setViewItemURL:]
  -[GKGameSharingInfo shortViewItemURL]
  -[GKGameSharingInfo setShortViewItemURL:]
  -[GKGameSharingInfo emailBody]
  -[GKGameSharingInfo gameName]
  -[GKGameSharingInfo emailSubject]
  -[GKGameSharingInfo initWithGame:]
  -[GKGameSharingInfo operationThatBlocksUntilLoaded]
  -[GKGameSharingInfo thumbnailForActivityType:]
  -[GKGameSharingInfo itemsForActivityType:]
  -[GKGameSharingInfo subjectForEmailActivity]


GKTimeScopeButton : GKDynamicButton
 @property  long long timeScope

  // instance methods
  -[GKTimeScopeButton _commonInit]
  -[GKTimeScopeButton initWithFrame:]
  -[GKTimeScopeButton awakeFromNib]
  -[GKTimeScopeButton titleRectForContentRect:]
  -[GKTimeScopeButton imageRectForContentRect:]
  -[GKTimeScopeButton setTimeScope:]
  -[GKTimeScopeButton timeScope]


GKBubbleFlowBubbleControl : GKValueWithCaptionBubbleControl
 @property  BOOL hasAnyContent

  // instance methods
  -[GKBubbleFlowBubbleControl prepareForReuse]
  -[GKBubbleFlowBubbleControl setSize:]
  -[GKBubbleFlowBubbleControl intrinsicContentSize]
  -[GKBubbleFlowBubbleControl hasAnyContent]
  -[GKBubbleFlowBubbleControl syncContentFromBubble:]


GKDashboardPlayerCell : UICollectionViewCell /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  UIColor *nameColor
 @property  UIColor *statusColor
 @property  double playerViewBottomToNameLabelTopConstant
 @property  GKPlayer *player
 @property  BOOL onDarkBackground
 @property  UIView *popoverSourceView
 @property  GKDashboardPlayerShadowView *playerView
 @property  NSLayoutConstraint *playerViewBottomToNameLabelTopConstraint
 @property  UILabel *nameLabel
 @property  UILabel *statusLabel

  // class methods
  +[GKDashboardPlayerCell defaultSize]
  +[GKDashboardPlayerCell preferredCollectionHeight]

  // instance methods
  -[GKDashboardPlayerCell dealloc]
  -[GKDashboardPlayerCell canBecomeFocused]
  -[GKDashboardPlayerCell setHighlighted:]
  -[GKDashboardPlayerCell setSelected:]
  -[GKDashboardPlayerCell awakeFromNib]
  -[GKDashboardPlayerCell popoverSourceView]
  -[GKDashboardPlayerCell setNameLabel:]
  -[GKDashboardPlayerCell nameLabel]
  -[GKDashboardPlayerCell player]
  -[GKDashboardPlayerCell setPlayer:]
  -[GKDashboardPlayerCell setStatusText:]
  -[GKDashboardPlayerCell setStatusLabel:]
  -[GKDashboardPlayerCell statusLabel]
  -[GKDashboardPlayerCell playerView]
  -[GKDashboardPlayerCell setNameColor:]
  -[GKDashboardPlayerCell nameColor]
  -[GKDashboardPlayerCell setPlayerView:]
  -[GKDashboardPlayerCell setStatusColor:]
  -[GKDashboardPlayerCell setPlayerViewBottomToNameLabelTopConstant:]
  -[GKDashboardPlayerCell setNameText:]
  -[GKDashboardPlayerCell setOnDarkBackground:]
  -[GKDashboardPlayerCell setStatusWithLastPlayedDate:]
  -[GKDashboardPlayerCell updateLabelColorForDashboard]
  -[GKDashboardPlayerCell onDarkBackground]
  -[GKDashboardPlayerCell playerViewBottomToNameLabelTopConstraint]
  -[GKDashboardPlayerCell setPlayerViewBottomToNameLabelTopConstraint:]
  -[GKDashboardPlayerCell statusColor]
  -[GKDashboardPlayerCell playerViewBottomToNameLabelTopConstant]


GKGameInviteComposeController : GKSimpleComposeController
  // instance methods
  -[GKGameInviteComposeController init]
  -[GKGameInviteComposeController loadView]


GKUnifiedRecipient : NSObject
 @property  NSString *fullName
 @property  NSString *handle
 @property  NSString *nickName
 @property  NSString *label
 @property  CNContact *contact

  // class methods
  +[GKUnifiedRecipient handleForContact:]
  +[GKUnifiedRecipient recipientForHandle:]
  +[GKUnifiedRecipient recipientForContact:]

  // instance methods
  -[GKUnifiedRecipient .cxx_destruct]
  -[GKUnifiedRecipient handle]
  -[GKUnifiedRecipient displayName]
  -[GKUnifiedRecipient setLabel:]
  -[GKUnifiedRecipient label]
  -[GKUnifiedRecipient contact]
  -[GKUnifiedRecipient setContact:]
  -[GKUnifiedRecipient fullName]
  -[GKUnifiedRecipient setHandle:]
  -[GKUnifiedRecipient setFullName:]
  -[GKUnifiedRecipient nickName]
  -[GKUnifiedRecipient setNickName:]


GKDashboardTurnDetailDataSource : GKCollectionDataSource
 @property  GKTurnBasedMatch *match

  // instance methods
  -[GKDashboardTurnDetailDataSource dealloc]
  -[GKDashboardTurnDetailDataSource numberOfSectionsInCollectionView:]
  -[GKDashboardTurnDetailDataSource collectionView:cellForItemAtIndexPath:]
  -[GKDashboardTurnDetailDataSource itemCount]
  -[GKDashboardTurnDetailDataSource collectionView:layout:sizeForItemAtIndexPath:]
  -[GKDashboardTurnDetailDataSource match]
  -[GKDashboardTurnDetailDataSource setMatch:]
  -[GKDashboardTurnDetailDataSource preferredCollectionHeight]
  -[GKDashboardTurnDetailDataSource setupCollectionView:]
  -[GKDashboardTurnDetailDataSource initWithMatch:]
  -[GKDashboardTurnDetailDataSource loadDataWithCompletionHandler:]
  -[GKDashboardTurnDetailDataSource itemForIndexPath:]
  -[GKDashboardTurnDetailDataSource sectionHeaderText]


GKAccountRemoteUIController : GKRemoteUIController
 @property  NSArray *availableExternalServices
 @property  long long mode
 @property  BOOL authenticatePlayerOnCompletion
 @property  NSURL *url
 @property  NSDictionary *postBody

  // class methods
  +[GKAccountRemoteUIController accountRemoteUIControllerForPlayer:mode:url:postBody:completionHandler:]
  +[GKAccountRemoteUIController accountRemoteUIControllerForPlayer:mode:completionHandler:]

  // instance methods
  -[GKAccountRemoteUIController .cxx_destruct]
  -[GKAccountRemoteUIController setMode:]
  -[GKAccountRemoteUIController url]
  -[GKAccountRemoteUIController mode]
  -[GKAccountRemoteUIController setUrl:]
  -[GKAccountRemoteUIController initWithMode:]
  -[GKAccountRemoteUIController bagKey]
  -[GKAccountRemoteUIController fallbackURL]
  -[GKAccountRemoteUIController fireCompletionHandler]
  -[GKAccountRemoteUIController initWithMode:player:]
  -[GKAccountRemoteUIController setPostBody:]
  -[GKAccountRemoteUIController authenticatePlayerOnCompletion]
  -[GKAccountRemoteUIController postBodyForInitialLoad]
  -[GKAccountRemoteUIController availableExternalServices]
  -[GKAccountRemoteUIController setAuthenticatePlayerOnCompletion:]
  -[GKAccountRemoteUIController takeValuesFromClientInfo:withCompletionHandler:]
  -[GKAccountRemoteUIController updatePostbackDictionary:withHandler:]
  -[GKAccountRemoteUIController setAvailableExternalServices:]
  -[GKAccountRemoteUIController postBody]


GKSegmentInfo : NSObject <_GKStateMachineDelegate>
 @property  <GKSegmentInfoDelegagte> *delegate
 @property  GKCollectionViewDataSource *dataSource
 @property  NSString *title
 @property  GKPlaceholderContentStateMachine *loadingMatchine
 @property  NSString *loadingState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKSegmentInfo dealloc]
  -[GKSegmentInfo delegate]
  -[GKSegmentInfo setDelegate:]
  -[GKSegmentInfo title]
  -[GKSegmentInfo setTitle:]
  -[GKSegmentInfo initWithDataSource:]
  -[GKSegmentInfo dataSource]
  -[GKSegmentInfo setDataSource:]
  -[GKSegmentInfo setLoadingState:]
  -[GKSegmentInfo loadingState]
  -[GKSegmentInfo didEnterLoadingState]
  -[GKSegmentInfo didExitLoadingState]
  -[GKSegmentInfo didEnterNoContentState]
  -[GKSegmentInfo didEnterErrorState]
  -[GKSegmentInfo loadingMatchine]
  -[GKSegmentInfo setLoadingMatchine:]


GKSegmentedSectionDataSource : GKCollectionViewDataSource <GKSegmentInfoDelegagte>
 @property  NSMutableArray *segmentInfos
 @property  GKSegmentedSectionHeaderView *headerView
 @property  GKCollectionViewPlaceholderView *placeholderView
 @property  GKSegmentInfo *selectedSegmentInfo
 @property  BOOL waitingForAnimation
 @property  GKCollectionViewDataSource *rootDataSource
 @property  NSArray *dataSources
 @property  GKCollectionViewDataSource *selectedDataSource
 @property  BOOL usePlaceholder
 @property  BOOL shouldHideSegment
 @property  unsigned long selectedDataSourceIndex
 @property  NSString *noContentTitle
 @property  NSString *noContentMessage
 @property  NSString *noContentButtonTitle
 @property  id noContentButtonTarget
 @property  SEL noContentButtonAction
 @property  Class segmentedHeaderClass

  // instance methods
  -[GKSegmentedSectionDataSource dealloc]
  -[GKSegmentedSectionDataSource dataSources]
  -[GKSegmentedSectionDataSource selectedDataSource]
  -[GKSegmentedSectionDataSource numberOfSectionsInCollectionView:]
  -[GKSegmentedSectionDataSource collectionView:numberOfItemsInSection:]
  -[GKSegmentedSectionDataSource collectionView:cellForItemAtIndexPath:]
  -[GKSegmentedSectionDataSource headerView]
  -[GKSegmentedSectionDataSource setHeaderView:]
  -[GKSegmentedSectionDataSource collectionView:viewForSupplementaryElementOfKind:atIndexPath:]
  -[GKSegmentedSectionDataSource itemAtIndexPath:]
  -[GKSegmentedSectionDataSource addDataSource:]
  -[GKSegmentedSectionDataSource removeDataSource:]
  -[GKSegmentedSectionDataSource setPlaceholderView:]
  -[GKSegmentedSectionDataSource placeholderView]
  -[GKSegmentedSectionDataSource allTitles]
  -[GKSegmentedSectionDataSource initWithDataSources:]
  -[GKSegmentedSectionDataSource segmentDidChangeLoadingState:]
  -[GKSegmentedSectionDataSource initWithDataSources:rootDataSource:]
  -[GKSegmentedSectionDataSource setRootDataSource:]
  -[GKSegmentedSectionDataSource _gkDescriptionWithChildren:]
  -[GKSegmentedSectionDataSource infoForDataSource:]
  -[GKSegmentedSectionDataSource infosChanged]
  -[GKSegmentedSectionDataSource selectedDataSourceIndex]
  -[GKSegmentedSectionDataSource setSelectedDataSourceIndex:]
  -[GKSegmentedSectionDataSource dataSourceForSection:]
  -[GKSegmentedSectionDataSource setNoContentTitle:]
  -[GKSegmentedSectionDataSource setNoContentMessage:]
  -[GKSegmentedSectionDataSource setNoContentButtonTitle:]
  -[GKSegmentedSectionDataSource setNoContentButtonTarget:]
  -[GKSegmentedSectionDataSource setNoContentButtonAction:]
  -[GKSegmentedSectionDataSource updatePlaceholderNotify:]
  -[GKSegmentedSectionDataSource dataSourceDidLoad]
  -[GKSegmentedSectionDataSource setSelectedSegmentInfo:]
  -[GKSegmentedSectionDataSource setWaitingForAnimation:]
  -[GKSegmentedSectionDataSource dataSourceWillLoad]
  -[GKSegmentedSectionDataSource refreshContentsForDataType:userInfo:updateNotifier:]
  -[GKSegmentedSectionDataSource groupDidLoad:]
  -[GKSegmentedSectionDataSource setSelectedDataSourceIndex:reload:]
  -[GKSegmentedSectionDataSource indexPathsForItem:]
  -[GKSegmentedSectionDataSource item:matchesSearchTerms:inSection:]
  -[GKSegmentedSectionDataSource removeItemAtIndexPath:completionHandler:]
  -[GKSegmentedSectionDataSource configureCollectionView:]
  -[GKSegmentedSectionDataSource configureSegmentedHeader:]
  -[GKSegmentedSectionDataSource waitingForAnimation]
  -[GKSegmentedSectionDataSource collectionView:evaluateFactoryForSupplementaryElementOfKind:atIndexPath:isRecursive:]
  -[GKSegmentedSectionDataSource createMetricsTreeWithGridLayout:]
  -[GKSegmentedSectionDataSource collectionViewWillBecomeActive:]
  -[GKSegmentedSectionDataSource collectionViewDidBecomeInactive:]
  -[GKSegmentedSectionDataSource containsDataSource:]
  -[GKSegmentedSectionDataSource sectionForDataSource:]
  -[GKSegmentedSectionDataSource setShouldHideSegment:]
  -[GKSegmentedSectionDataSource infoForSegment:]
  -[GKSegmentedSectionDataSource setTitle:forDataSource:]
  -[GKSegmentedSectionDataSource selectedSegmentChanged:]
  -[GKSegmentedSectionDataSource setSelectedDataSource:]
  -[GKSegmentedSectionDataSource hoistSegmentedFactoryToRoot]
  -[GKSegmentedSectionDataSource dataSource:didInsertItemsAtIndexPaths:]
  -[GKSegmentedSectionDataSource dataSource:didRemoveItemsAtIndexPaths:]
  -[GKSegmentedSectionDataSource dataSource:didRefreshItemsAtIndexPaths:]
  -[GKSegmentedSectionDataSource dataSource:didMoveItemAtIndexPath:toIndexPath:]
  -[GKSegmentedSectionDataSource dataSource:didInsertSections:]
  -[GKSegmentedSectionDataSource dataSource:didRemoveSections:]
  -[GKSegmentedSectionDataSource dataSource:didRefreshSections:]
  -[GKSegmentedSectionDataSource dataSource:didMoveSection:toSection:]
  -[GKSegmentedSectionDataSource dataSourceDidReloadData:]
  -[GKSegmentedSectionDataSource dataSource:performBatchUpdate:complete:]
  -[GKSegmentedSectionDataSource usePlaceholder]
  -[GKSegmentedSectionDataSource setUsePlaceholder:]
  -[GKSegmentedSectionDataSource shouldHideSegment]
  -[GKSegmentedSectionDataSource noContentTitle]
  -[GKSegmentedSectionDataSource noContentMessage]
  -[GKSegmentedSectionDataSource noContentButtonTitle]
  -[GKSegmentedSectionDataSource noContentButtonTarget]
  -[GKSegmentedSectionDataSource noContentButtonAction]
  -[GKSegmentedSectionDataSource segmentedHeaderClass]
  -[GKSegmentedSectionDataSource setSegmentedHeaderClass:]
  -[GKSegmentedSectionDataSource segmentInfos]
  -[GKSegmentedSectionDataSource setSegmentInfos:]
  -[GKSegmentedSectionDataSource selectedSegmentInfo]
  -[GKSegmentedSectionDataSource rootDataSource]


GKPlayerWithSpeechBalloonView : UIView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  NSArray *replaceableConstraints
 @property  GKPlayer *player
 @property  NSString *speechText
 @property  unsigned char tipDirection
 @property  UITextView *speechTextView
 @property  GKDashboardPlayerPhotoView *photoView
 @property  GKSpeechBalloonBackgroundView *balloonView
 @property  unsigned char drawStyle

  // class methods
  +[GKPlayerWithSpeechBalloonView requiresConstraintBasedLayout]
  +[GKPlayerWithSpeechBalloonView instantiatePhotoContainer]

  // instance methods
  -[GKPlayerWithSpeechBalloonView dealloc]
  -[GKPlayerWithSpeechBalloonView metrics]
  -[GKPlayerWithSpeechBalloonView initWithFrame:]
  -[GKPlayerWithSpeechBalloonView sizeThatFits:]
  -[GKPlayerWithSpeechBalloonView layoutSubviews]
  -[GKPlayerWithSpeechBalloonView updateConstraints]
  -[GKPlayerWithSpeechBalloonView awakeFromNib]
  -[GKPlayerWithSpeechBalloonView player]
  -[GKPlayerWithSpeechBalloonView setPlayer:]
  -[GKPlayerWithSpeechBalloonView photoView]
  -[GKPlayerWithSpeechBalloonView setupSubviews]
  -[GKPlayerWithSpeechBalloonView setPhotoView:]
  -[GKPlayerWithSpeechBalloonView balloonView]
  -[GKPlayerWithSpeechBalloonView setBalloonView:]
  -[GKPlayerWithSpeechBalloonView replaceableConstraints]
  -[GKPlayerWithSpeechBalloonView speechText]
  -[GKPlayerWithSpeechBalloonView tipDirection]
  -[GKPlayerWithSpeechBalloonView drawStyle]
  -[GKPlayerWithSpeechBalloonView setReplaceableConstraints:]
  -[GKPlayerWithSpeechBalloonView setDrawStyle:]
  -[GKPlayerWithSpeechBalloonView _updateSpeechText:]
  -[GKPlayerWithSpeechBalloonView setTipDirection:]
  -[GKPlayerWithSpeechBalloonView setSpeechText:]
  -[GKPlayerWithSpeechBalloonView speechTextView]
  -[GKPlayerWithSpeechBalloonView setSpeechTextView:]


GKCellSelectedBackgroundView : UIView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics

GKDetachedContentView : UIView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  GKStaticRenderContentView *renderView

  // instance methods
  -[GKDetachedContentView renderView]
  -[GKDetachedContentView setRenderView:]


GKStaticRenderContentView : UIView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  UIView *contentView

  // instance methods
  -[GKStaticRenderContentView dealloc]
  -[GKStaticRenderContentView prepareForReuse]
  -[GKStaticRenderContentView contentView]
  -[GKStaticRenderContentView setContentView:]
  -[GKStaticRenderContentView setNeedsLayout]
  -[GKStaticRenderContentView layoutSubviews]
  -[GKStaticRenderContentView prepareToReuseSubviewsOfView:]


GKFixedSizeImageView : UIImageView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  UIImage *actualImage

  // instance methods
  -[GKFixedSizeImageView dealloc]
  -[GKFixedSizeImageView image]
  -[GKFixedSizeImageView setImage:]
  -[GKFixedSizeImageView invalidateIntrinsicContentSize]
  -[GKFixedSizeImageView actualImage]
  -[GKFixedSizeImageView setActualImage:]


GKEditAction : NSObject
 @property  NSString *name
 @property  SEL selector
 @property  BOOL destructive

  // class methods
  +[GKEditAction actionWithName:selector:]
  +[GKEditAction deleteActionWithName:]

  // instance methods
  -[GKEditAction dealloc]
  -[GKEditAction name]
  -[GKEditAction selector]
  -[GKEditAction setSelector:]
  -[GKEditAction setName:]
  -[GKEditAction destructive]
  -[GKEditAction setDestructive:]


GKEditActionsView : UIView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  double visibleWidth
 @property  CALayer *maskLayer
 @property  GKCollectionViewCell *cell
 @property  NSArray *editActionConstraints
 @property  NSArray *actionButtons

  // instance methods
  -[GKEditActionsView dealloc]
  -[GKEditActionsView cell]
  -[GKEditActionsView setCell:]
  -[GKEditActionsView maskLayer]
  -[GKEditActionsView setMaskLayer:]
  -[GKEditActionsView setVisibleWidth:]
  -[GKEditActionsView didTouchEditAction:]
  -[GKEditActionsView didTouchMoreEditAction:]
  -[GKEditActionsView setActionButtons:]
  -[GKEditActionsView setEditActionConstraints:]
  -[GKEditActionsView initWithFrame:cell:]
  -[GKEditActionsView prepareActionButtons]
  -[GKEditActionsView visibleWidth]
  -[GKEditActionsView editActionConstraints]
  -[GKEditActionsView actionButtons]


GKCollectionViewCell : UICollectionViewCell /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  GKEditActionsView *editActionsView
 @property  UIView *staticContentView
 @property  GKStaticRenderContentView *contentRenderView
 @property  CALayer *leftGradientMask
 @property  BOOL doesAbutLeftEdge
 @property  GKHairlineView *topHairline
 @property  GKHairlineView *bottomHairline
 @property  NSArray *editActionsConstraints
 @property  NSArray *hairlineConstraints
 @property  NSLayoutConstraint *contentLeftConstraint
 @property  double leadingMargin
 @property  double trailingMargin
 @property  id representedItem
 @property  UIView *interactiveContentView
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} alignmentRectForText
 @property  NSArray *editActions
 @property  double editingContentOriginX

  // class methods
  +[GKCollectionViewCell registerCellClassesWithCollectionView:]

  // instance methods
  -[GKCollectionViewCell dealloc]
  -[GKCollectionViewCell beginEditing]
  -[GKCollectionViewCell prepareForReuse]
  -[GKCollectionViewCell initWithFrame:]
  -[GKCollectionViewCell layoutSubviews]
  -[GKCollectionViewCell updateConstraints]
  -[GKCollectionViewCell setNeedsDisplay]
  -[GKCollectionViewCell _dynamicUserInterfaceTraitDidChange]
  -[GKCollectionViewCell applyLayoutAttributes:]
  -[GKCollectionViewCell popoverSourceView]
  -[GKCollectionViewCell setTopHairline:]
  -[GKCollectionViewCell setBottomHairline:]
  -[GKCollectionViewCell topHairline]
  -[GKCollectionViewCell bottomHairline]
  -[GKCollectionViewCell finishEditing]
  -[GKCollectionViewCell editActions]
  -[GKCollectionViewCell _gkEnumerateSubviewsUsingBlock:]
  -[GKCollectionViewCell prepareEditActionsConstraintsIfNeeded]
  -[GKCollectionViewCell setShouldDisplaySwipeToEditAccessories:]
  -[GKCollectionViewCell setLeftGradientMask:]
  -[GKCollectionViewCell leftGradientMask]
  -[GKCollectionViewCell prepareHairlineConstraintsIfNeeded]
  -[GKCollectionViewCell applyGradientMaskIfNeeded]
  -[GKCollectionViewCell resetEditingContentOrigin]
  -[GKCollectionViewCell didUpdateModel]
  -[GKCollectionViewCell leadingMargin]
  -[GKCollectionViewCell trailingMargin]
  -[GKCollectionViewCell staticContentView]
  -[GKCollectionViewCell interactiveContentView]
  -[GKCollectionViewCell setDoesAbutLeftEdge:]
  -[GKCollectionViewCell setLeadingMargin:]
  -[GKCollectionViewCell setTrailingMargin:]
  -[GKCollectionViewCell setEditActionsVisibleWidth:]
  -[GKCollectionViewCell setEditingContentOriginX:]
  -[GKCollectionViewCell alignmentRectForText]
  -[GKCollectionViewCell contentViewOriginXWhileEditing]
  -[GKCollectionViewCell editActionsVisibleWidth]
  -[GKCollectionViewCell animateOutSwipeToEditAccessories]
  -[GKCollectionViewCell setUserInteractionEnabledForEditing:]
  -[GKCollectionViewCell userInteractionEnabledForEditing]
  -[GKCollectionViewCell touchWithinEditActions:]
  -[GKCollectionViewCell setRepresentedItem:]
  -[GKCollectionViewCell closeForDelete]
  -[GKCollectionViewCell editingContentOriginX]
  -[GKCollectionViewCell shutActionPaneAnimated:completion:]
  -[GKCollectionViewCell representedItem]
  -[GKCollectionViewCell setStaticContentView:]
  -[GKCollectionViewCell setEditActions:]
  -[GKCollectionViewCell editActionsView]
  -[GKCollectionViewCell contentRenderView]
  -[GKCollectionViewCell setContentRenderView:]
  -[GKCollectionViewCell doesAbutLeftEdge]
  -[GKCollectionViewCell editActionsConstraints]
  -[GKCollectionViewCell setEditActionsConstraints:]
  -[GKCollectionViewCell hairlineConstraints]
  -[GKCollectionViewCell setHairlineConstraints:]
  -[GKCollectionViewCell contentLeftConstraint]
  -[GKCollectionViewCell setContentLeftConstraint:]


GKOnboardingViewController : UIViewController /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics <UIViewControllerAnimatedTransitioning, UIViewControllerTransitioningDelegate>
 @property  UIView *privacyContainer
 @property  UIView *bubblePlaceholder
 @property  UIView *buttonContainer
 @property  OBBoldTrayButton *nextButton
 @property  GKBubbleFlowContainerView *bubblesContainerView
 @property  UIView *bubblesAnchorView
 @property  UILabel *mainTitle
 @property  UILabel *subTitle
 @property  OBPrivacyLinkController *privacyLink
 @property  BOOL presenting
 @property  double transitionDuration
 @property  <GKOnboardingFlowDelegate> *delegate
 @property  NSString *lastPersonalizationVersionDisplayed
 @property  unsigned long lastPrivacyNoticeVersionDisplayed
 @property  NSMutableDictionary *analyticsPayload
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKOnboardingViewController delegate]
  -[GKOnboardingViewController setDelegate:]
  -[GKOnboardingViewController .cxx_destruct]
  -[GKOnboardingViewController viewWillAppear:]
  -[GKOnboardingViewController viewDidLoad]
  -[GKOnboardingViewController viewWillLayoutSubviews]
  -[GKOnboardingViewController transitionDuration:]
  -[GKOnboardingViewController animateTransition:]
  -[GKOnboardingViewController animationEnded:]
  -[GKOnboardingViewController animationControllerForPresentedController:presentingController:sourceController:]
  -[GKOnboardingViewController animationControllerForDismissedController:]
  -[GKOnboardingViewController viewDidLayoutSubviews]
  -[GKOnboardingViewController viewDidAppear:]
  -[GKOnboardingViewController viewDidDisappear:]
  -[GKOnboardingViewController isPresenting]
  -[GKOnboardingViewController transitionDuration]
  -[GKOnboardingViewController viewSafeAreaInsetsDidChange]
  -[GKOnboardingViewController setPresenting:]
  -[GKOnboardingViewController nextButton]
  -[GKOnboardingViewController setNextButton:]
  -[GKOnboardingViewController setTransitionDuration:]
  -[GKOnboardingViewController subTitle]
  -[GKOnboardingViewController setSubTitle:]
  -[GKOnboardingViewController mainTitle]
  -[GKOnboardingViewController setMainTitle:]
  -[GKOnboardingViewController buttonContainer]
  -[GKOnboardingViewController setButtonContainer:]
  -[GKOnboardingViewController setPrivacyLink:]
  -[GKOnboardingViewController privacyLink]
  -[GKOnboardingViewController analyticsPayload]
  -[GKOnboardingViewController nextPressed:]
  -[GKOnboardingViewController addPrivacyLink]
  -[GKOnboardingViewController setBubblesContainerView:]
  -[GKOnboardingViewController bubblesContainerView]
  -[GKOnboardingViewController bubblesAnchorView]
  -[GKOnboardingViewController privacyContainer]
  -[GKOnboardingViewController constrainTextInView:toFontSize:]
  -[GKOnboardingViewController showSignOutAlert]
  -[GKOnboardingViewController shouldPresentPersonalizationScreen]
  -[GKOnboardingViewController presentPersonalizationScreen]
  -[GKOnboardingViewController lastPersonalizationVersionDisplayed]
  -[GKOnboardingViewController setAnalyticsPayload:]
  -[GKOnboardingViewController lastPrivacyNoticeVersionDisplayed]
  -[GKOnboardingViewController didDisplayPrivacyNotice]
  -[GKOnboardingViewController updateBubbleRectsWithScale:]
  -[GKOnboardingViewController bubblePlaceholder]
  -[GKOnboardingViewController removeConstraintsForView:]
  -[GKOnboardingViewController signOutPressed:]
  -[GKOnboardingViewController basicAnimationWithKeyPath:fromValue:toValue:]
  -[GKOnboardingViewController setLastPersonalizationVersionDisplayed:]
  -[GKOnboardingViewController setLastPrivacyNoticeVersionDisplayed:]
  -[GKOnboardingViewController setPrivacyContainer:]
  -[GKOnboardingViewController setBubblePlaceholder:]
  -[GKOnboardingViewController setBubblesAnchorView:]


GKTextView : UITextView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  GKTextStyle *appliedStyle
 @property  GKLabel *placeholderLabel
 @property  NSString *placeholderText
 @property  NSAttributedString *attributedPlaceholderText
 @property  GKTextStyle *_baseStyle

  // class methods
  +[GKTextView initialize]

  // instance methods
  -[GKTextView dealloc]
  -[GKTextView setText:]
  -[GKTextView initWithFrame:]
  -[GKTextView layoutSubviews]
  -[GKTextView setAttributedText:]
  -[GKTextView removeDictationResultPlaceholder:willInsertResult:]
  -[GKTextView insertDictationResultPlaceholder]
  -[GKTextView placeholderText]
  -[GKTextView setPlaceholderText:]
  -[GKTextView placeholderLabel]
  -[GKTextView setPlaceholderLabel:]
  -[GKTextView applyTextStyle:]
  -[GKTextView set_baseStyle:]
  -[GKTextView replayAndApplyStyle]
  -[GKTextView updatePlaceholderVisibility]
  -[GKTextView setAttributedPlaceholderText:]
  -[GKTextView textStorageDidChangeNotification:]
  -[GKTextView attributedPlaceholderText]
  -[GKTextView _baseStyle]
  -[GKTextView appliedStyle]
  -[GKTextView setAppliedStyle:]


GKTurnBasedMatchesDataSource : GKSplittingDataSource
 @property  GKGame *game
 @property  SEL detailPressedAction
 @property  {UIEdgeInsets=dddd} cellMarginInsets
 @property  NSObject<GKTurnBasedMatchesDataSourceDelegate> *delegate

  // instance methods
  -[GKTurnBasedMatchesDataSource dealloc]
  -[GKTurnBasedMatchesDataSource delegate]
  -[GKTurnBasedMatchesDataSource setDelegate:]
  -[GKTurnBasedMatchesDataSource collectionView:cellForItemAtIndexPath:]
  -[GKTurnBasedMatchesDataSource numberOfMatches]
  -[GKTurnBasedMatchesDataSource game]
  -[GKTurnBasedMatchesDataSource setGame:]
  -[GKTurnBasedMatchesDataSource removeItemAtIndexPath:completionHandler:]
  -[GKTurnBasedMatchesDataSource configureCollectionView:]
  -[GKTurnBasedMatchesDataSource collectionViewWillBecomeActive:]
  -[GKTurnBasedMatchesDataSource configureDataSource]
  -[GKTurnBasedMatchesDataSource setDetailPressedAction:]
  -[GKTurnBasedMatchesDataSource detailPressedAction]
  -[GKTurnBasedMatchesDataSource cellMarginInsets]
  -[GKTurnBasedMatchesDataSource setCellMarginInsets:]


GKDashboardPlayerPickerCell : GKDashboardPlayerCell
 @property  UIImageView *selectionView
 @property  UIButton *selectionButton
 @property  NSLayoutConstraint *nameConstraint
 @property  NSLayoutConstraint *selectionHorizontalConstraint
 @property  NSLayoutConstraint *selectionVerticalConstraint
 @property  NSLayoutConstraint *statusHeightConstraint
 @property  double nameInitialConstant
 @property  double selectionInitialHorizontalConstant
 @property  double selectionInitialVerticalConstant
 @property  double statusInitialConstant
 @property  BOOL selectable
 @property  BOOL showsLastPlayedStatusText

  // instance methods
  -[GKDashboardPlayerPickerCell isSelectable]
  -[GKDashboardPlayerPickerCell setSelected:]
  -[GKDashboardPlayerPickerCell _dynamicUserInterfaceTraitDidChange]
  -[GKDashboardPlayerPickerCell selectionView]
  -[GKDashboardPlayerPickerCell awakeFromNib]
  -[GKDashboardPlayerPickerCell setSelectable:]
  -[GKDashboardPlayerPickerCell setSelectionView:]
  -[GKDashboardPlayerPickerCell setPlayer:]
  -[GKDashboardPlayerPickerCell selectionButton]
  -[GKDashboardPlayerPickerCell setStatusWithAchievementEarnedPoints:andDate:]
  -[GKDashboardPlayerPickerCell setShowsLastPlayedStatusText:]
  -[GKDashboardPlayerPickerCell showsLastPlayedStatusText]
  -[GKDashboardPlayerPickerCell setSelectionButton:]
  -[GKDashboardPlayerPickerCell nameConstraint]
  -[GKDashboardPlayerPickerCell setNameConstraint:]
  -[GKDashboardPlayerPickerCell selectionHorizontalConstraint]
  -[GKDashboardPlayerPickerCell setSelectionHorizontalConstraint:]
  -[GKDashboardPlayerPickerCell selectionVerticalConstraint]
  -[GKDashboardPlayerPickerCell setSelectionVerticalConstraint:]
  -[GKDashboardPlayerPickerCell statusHeightConstraint]
  -[GKDashboardPlayerPickerCell setStatusHeightConstraint:]
  -[GKDashboardPlayerPickerCell nameInitialConstant]
  -[GKDashboardPlayerPickerCell setNameInitialConstant:]
  -[GKDashboardPlayerPickerCell selectionInitialHorizontalConstant]
  -[GKDashboardPlayerPickerCell setSelectionInitialHorizontalConstant:]
  -[GKDashboardPlayerPickerCell selectionInitialVerticalConstant]
  -[GKDashboardPlayerPickerCell setSelectionInitialVerticalConstant:]
  -[GKDashboardPlayerPickerCell statusInitialConstant]
  -[GKDashboardPlayerPickerCell setStatusInitialConstant:]


GKMultiplayerCollectionLayout : UICollectionViewLayout /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  NSDictionary *cellLayoutInfo
 @property  {CGSize=dd} landscapeItemSize
 @property  {UIEdgeInsets=dddd} insets
 @property  {CGSize=dd} itemSize
 @property  {CGSize=dd} separatorSize
 @property  {CGSize=dd} headerSize
 @property  {CGSize=dd} footerSize
 @property  {CGPoint=dd} itemMargin
 @property  double headerGap
 @property  double footerGap
 @property  long long numberOfColumnsInPortrait
 @property  BOOL isPortrait

  // instance methods
  -[GKMultiplayerCollectionLayout init]
  -[GKMultiplayerCollectionLayout dealloc]
  -[GKMultiplayerCollectionLayout isPortrait]
  -[GKMultiplayerCollectionLayout numberOfColumns]
  -[GKMultiplayerCollectionLayout prepareLayout]
  -[GKMultiplayerCollectionLayout layoutAttributesForElementsInRect:]
  -[GKMultiplayerCollectionLayout layoutAttributesForItemAtIndexPath:]
  -[GKMultiplayerCollectionLayout collectionViewContentSize]
  -[GKMultiplayerCollectionLayout layoutAttributesForSupplementaryViewOfKind:atIndexPath:]
  -[GKMultiplayerCollectionLayout shouldInvalidateLayoutForBoundsChange:]
  -[GKMultiplayerCollectionLayout itemSize]
  -[GKMultiplayerCollectionLayout setItemSize:]
  -[GKMultiplayerCollectionLayout insets]
  -[GKMultiplayerCollectionLayout setInsets:]
  -[GKMultiplayerCollectionLayout setIsPortrait:]
  -[GKMultiplayerCollectionLayout setHeaderSize:]
  -[GKMultiplayerCollectionLayout setFooterSize:]
  -[GKMultiplayerCollectionLayout headerSize]
  -[GKMultiplayerCollectionLayout footerSize]
  -[GKMultiplayerCollectionLayout itemMargin]
  -[GKMultiplayerCollectionLayout setLandscapeItemSize:]
  -[GKMultiplayerCollectionLayout currentItemSize]
  -[GKMultiplayerCollectionLayout totalCellSize]
  -[GKMultiplayerCollectionLayout setCellLayoutInfo:]
  -[GKMultiplayerCollectionLayout shouldUpdateVisibleCellLayoutAttributes]
  -[GKMultiplayerCollectionLayout separatorSize]
  -[GKMultiplayerCollectionLayout setSeparatorSize:]
  -[GKMultiplayerCollectionLayout setItemMargin:]
  -[GKMultiplayerCollectionLayout headerGap]
  -[GKMultiplayerCollectionLayout setHeaderGap:]
  -[GKMultiplayerCollectionLayout footerGap]
  -[GKMultiplayerCollectionLayout setFooterGap:]
  -[GKMultiplayerCollectionLayout numberOfColumnsInPortrait]
  -[GKMultiplayerCollectionLayout setNumberOfColumnsInPortrait:]
  -[GKMultiplayerCollectionLayout cellLayoutInfo]
  -[GKMultiplayerCollectionLayout landscapeItemSize]


GKDynamicLabel : UILabel /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
  // instance methods
  -[GKDynamicLabel dealloc]
  -[GKDynamicLabel didMoveToWindow]
  -[GKDynamicLabel contentSizeCategoryDidChangeNotification:]


GKRatingView : UIView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  UIImageView *backgroundImageView
 @property  UIImageView *foregroundImageView
 @property  NSLayoutConstraint *foregroundWidthConstraint
 @property  double value

  // instance methods
  -[GKRatingView dealloc]
  -[GKRatingView value]
  -[GKRatingView setValue:]
  -[GKRatingView intrinsicContentSize]
  -[GKRatingView initWithFrame:]
  -[GKRatingView backgroundImageView]
  -[GKRatingView awakeFromNib]
  -[GKRatingView setBackgroundImageView:]
  -[GKRatingView commonSetup]
  -[GKRatingView setForegroundWidthConstraint:]
  -[GKRatingView foregroundImageView]
  -[GKRatingView foregroundWidthConstraint]
  -[GKRatingView setForegroundImageView:]


GKDynamicButton : UIButton /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
  // instance methods
  -[GKDynamicButton dealloc]
  -[GKDynamicButton didMoveToWindow]
  -[GKDynamicButton contentSizeCategoryDidChangeNotification:]


GKDashboardLeaderboardListDataSource : GKCollectionDataSource
 @property  GKGameRecord *gameRecord
 @property  GKLeaderboardSet *leaderboardSet
 @property  NSArray *leaderboards
 @property  NSDictionary *assetNames

  // instance methods
  -[GKDashboardLeaderboardListDataSource dealloc]
  -[GKDashboardLeaderboardListDataSource collectionView:cellForItemAtIndexPath:]
  -[GKDashboardLeaderboardListDataSource itemCount]
  -[GKDashboardLeaderboardListDataSource collectionView:shouldSelectItemAtIndexPath:]
  -[GKDashboardLeaderboardListDataSource collectionView:didSelectItemAtIndexPath:]
  -[GKDashboardLeaderboardListDataSource collectionView:layout:sizeForItemAtIndexPath:]
  -[GKDashboardLeaderboardListDataSource preferredCollectionHeight]
  -[GKDashboardLeaderboardListDataSource setupCollectionView:]
  -[GKDashboardLeaderboardListDataSource loadDataWithCompletionHandler:]
  -[GKDashboardLeaderboardListDataSource itemForIndexPath:]
  -[GKDashboardLeaderboardListDataSource sectionHeaderText]
  -[GKDashboardLeaderboardListDataSource setGameRecord:]
  -[GKDashboardLeaderboardListDataSource setLeaderboardSet:]
  -[GKDashboardLeaderboardListDataSource setLeaderboards:]
  -[GKDashboardLeaderboardListDataSource removeLeaderboardsWithoutImages]
  -[GKDashboardLeaderboardListDataSource initWithGameRecord:leaderboardSet:]
  -[GKDashboardLeaderboardListDataSource assetNames]
  -[GKDashboardLeaderboardListDataSource setAssetNames:]
  -[GKDashboardLeaderboardListDataSource gameRecord]
  -[GKDashboardLeaderboardListDataSource leaderboardSet]
  -[GKDashboardLeaderboardListDataSource leaderboards]


GKFriendDetailViewController : GKDetailViewController
 @property  GKDashboardPlayerPhotoView *playerView
 @property  UILabel *nicknameLabel
 @property  UILabel *nameLabel
 @property  UILabel *descriptionLabel
 @property  GKPlayer *player

  // instance methods
  -[GKFriendDetailViewController .cxx_destruct]
  -[GKFriendDetailViewController viewDidLoad]
  -[GKFriendDetailViewController setDescriptionLabel:]
  -[GKFriendDetailViewController descriptionLabel]
  -[GKFriendDetailViewController setNameLabel:]
  -[GKFriendDetailViewController nameLabel]
  -[GKFriendDetailViewController player]
  -[GKFriendDetailViewController setPlayer:]
  -[GKFriendDetailViewController initWithPlayer:]
  -[GKFriendDetailViewController playerView]
  -[GKFriendDetailViewController report:]
  -[GKFriendDetailViewController setPlayerView:]
  -[GKFriendDetailViewController configureView]
  -[GKFriendDetailViewController nicknameLabel]
  -[GKFriendDetailViewController setNicknameLabel:]


GKFriendListViewController : UITableViewController /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics <UISearchBarDelegate, UISearchControllerDelegate, UISearchResultsUpdating, UITableViewDelegate, UITableViewDataSource>
 @property  NSMutableArray *friendPlayers
 @property  NSMutableArray *recentPlayers
 @property  NSMutableArray *allPlayers
 @property  NSArray *friendsForDisplay
 @property  NSArray *recentsForDisplay
 @property  NSArray *allPlayersForDisplay
 @property  UISearchController *searchController
 @property  UIActivityIndicatorView *activityIndicator
 @property  BOOL needsShowMoreFooter
 @property  <GKFriendListViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKFriendListViewController delegate]
  -[GKFriendListViewController setDelegate:]
  -[GKFriendListViewController .cxx_destruct]
  -[GKFriendListViewController traitCollectionDidChange:]
  -[GKFriendListViewController viewWillAppear:]
  -[GKFriendListViewController viewDidLoad]
  -[GKFriendListViewController searchController]
  -[GKFriendListViewController setSearchController:]
  -[GKFriendListViewController tableView:numberOfRowsInSection:]
  -[GKFriendListViewController tableView:cellForRowAtIndexPath:]
  -[GKFriendListViewController numberOfSectionsInTableView:]
  -[GKFriendListViewController tableView:titleForHeaderInSection:]
  -[GKFriendListViewController tableView:canEditRowAtIndexPath:]
  -[GKFriendListViewController tableView:willDisplayCell:forRowAtIndexPath:]
  -[GKFriendListViewController tableView:heightForRowAtIndexPath:]
  -[GKFriendListViewController tableView:heightForHeaderInSection:]
  -[GKFriendListViewController tableView:heightForFooterInSection:]
  -[GKFriendListViewController tableView:viewForFooterInSection:]
  -[GKFriendListViewController tableView:trailingSwipeActionsConfigurationForRowAtIndexPath:]
  -[GKFriendListViewController activityIndicator]
  -[GKFriendListViewController setActivityIndicator:]
  -[GKFriendListViewController didDismissSearchController:]
  -[GKFriendListViewController updateSearchResultsForSearchController:]
  -[GKFriendListViewController loadData]
  -[GKFriendListViewController setupSearchController]
  -[GKFriendListViewController showLoadingIndicator]
  -[GKFriendListViewController loadDataWithCompletionHandler:]
  -[GKFriendListViewController friendPlayers]
  -[GKFriendListViewController addFriends:]
  -[GKFriendListViewController setupNavBar]
  -[GKFriendListViewController setAllPlayers:]
  -[GKFriendListViewController allPlayers]
  -[GKFriendListViewController setFriendPlayers:]
  -[GKFriendListViewController setRecentPlayers:]
  -[GKFriendListViewController recentPlayers]
  -[GKFriendListViewController setRecentsForDisplay:]
  -[GKFriendListViewController setFriendsForDisplay:]
  -[GKFriendListViewController setNeedsShowMoreFooter:]
  -[GKFriendListViewController friendsForDisplay]
  -[GKFriendListViewController needsShowMoreFooter]
  -[GKFriendListViewController tableViewHasFooter:]
  -[GKFriendListViewController loadMoreFriends]
  -[GKFriendListViewController recentsForDisplay]
  -[GKFriendListViewController allPlayersForDisplay]
  -[GKFriendListViewController getPlayerAtIndexPath:]
  -[GKFriendListViewController reportPlayerAtIndexPath:]
  -[GKFriendListViewController deletePlayerAtIndexPath:]
  -[GKFriendListViewController setAllPlayersForDisplay:]


GKRemoteUITableFooterView : UIView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics <RUIPageAccessory, RemoteUITableFooter>
 @property  GKButton *button
 @property  NSDictionary *attributes
 @property  BOOL pinToBottom
 @property  NSArray *replaceableConstraints
 @property  double buttonBaselineOffset
 @property  int layoutStyle
 @property  <GKRemoteUIAuxiliaryViewDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKRemoteUITableFooterView delegate]
  -[GKRemoteUITableFooterView setDelegate:]
  -[GKRemoteUITableFooterView .cxx_destruct]
  -[GKRemoteUITableFooterView attributes]
  -[GKRemoteUITableFooterView setAttributes:]
  -[GKRemoteUITableFooterView button]
  -[GKRemoteUITableFooterView sizeThatFits:]
  -[GKRemoteUITableFooterView layoutSubviews]
  -[GKRemoteUITableFooterView didMoveToSuperview]
  -[GKRemoteUITableFooterView setLayoutStyle:]
  -[GKRemoteUITableFooterView layoutStyle]
  -[GKRemoteUITableFooterView initWithAttributes:]
  -[GKRemoteUITableFooterView setButton:]
  -[GKRemoteUITableFooterView buttonTapped:]
  -[GKRemoteUITableFooterView objectModelDidChange:]
  -[GKRemoteUITableFooterView tableViewDidUpdateContentInset:]
  -[GKRemoteUITableFooterView footerHeightForWidth:inTableView:]
  -[GKRemoteUITableFooterView replaceableConstraints]
  -[GKRemoteUITableFooterView setReplaceableConstraints:]
  -[GKRemoteUITableFooterView createButtonWithAttributes:]
  -[GKRemoteUITableFooterView pinToBottom]
  -[GKRemoteUITableFooterView buttonBaselineOffset]
  -[GKRemoteUITableFooterView adjustSizeToFillSuperview:]
  -[GKRemoteUITableFooterView setPinToBottom:]
  -[GKRemoteUITableFooterView setButtonBaselineOffset:]


GKLabel : UILabel /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics <GKTextStyleReplay>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  GKTextStyle *baseStyle
 @property  GKTextStyle *appliedStyle
 @property  double actualFontShrinkageFactor
 @property  BOOL shouldEnforcePreferredWidth
 @property  BOOL usingAttributedText
 @property  BOOL shouldInhibitReplay

  // class methods
  +[GKLabel initialize]

  // instance methods
  -[GKLabel .cxx_destruct]
  -[GKLabel setBounds:]
  -[GKLabel setText:]
  -[GKLabel initWithFrame:]
  -[GKLabel updateConstraints]
  -[GKLabel setAttributedText:]
  -[GKLabel applyTextStyle:]
  -[GKLabel appliedStyle]
  -[GKLabel setAppliedStyle:]
  -[GKLabel shouldInhibitReplay]
  -[GKLabel replayAndApplyStyleWithSystemContentChange:]
  -[GKLabel usingAttributedText]
  -[GKLabel replayAndApplyStyleUnlessInhibited]
  -[GKLabel baseStyle]
  -[GKLabel setBaseStyle:]
  -[GKLabel shrinkFontToFitSize:]
  -[GKLabel setActualFontShrinkageFactor:]
  -[GKLabel shouldEnforcePreferredWidth]
  -[GKLabel actualFontShrinkageFactor]
  -[GKLabel shrinkFontToFitWidth]
  -[GKLabel setShouldEnforcePreferredWidth:]
  -[GKLabel setShouldInhibitReplay:]


GKButton : UIButton /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics <GKTextStyleReplay>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  GKTextStyle *baseStyle
 @property  GKTextStyle *appliedStyle

  // class methods
  +[GKButton initialize]

  // instance methods
  -[GKButton .cxx_destruct]
  -[GKButton initWithFrame:]
  -[GKButton setAttributedTitle:forState:]
  -[GKButton applyTextStyle:]
  -[GKButton appliedStyle]
  -[GKButton setAppliedStyle:]
  -[GKButton replayAndApplyStyleWithSystemContentChange:]
  -[GKButton baseStyle]
  -[GKButton setBaseStyle:]


GKTextField : UITextField /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics <GKTextStyleReplay>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  GKTextStyle *baseStyle
 @property  GKTextStyle *appliedStyle

  // class methods
  +[GKTextField initialize]

  // instance methods
  -[GKTextField .cxx_destruct]
  -[GKTextField initWithFrame:]
  -[GKTextField applyTextStyle:]
  -[GKTextField appliedStyle]
  -[GKTextField setAppliedStyle:]
  -[GKTextField replayAndApplyStyleWithSystemContentChange:]
  -[GKTextField baseStyle]
  -[GKTextField setBaseStyle:]


GKCollectionGridLayout : GKCollectionFocusingLayout
 @property  NSDictionary *itemAttributes
 @property  NSDictionary *headerAttributes
 @property  NSDictionary *footerAttributes
 @property  BOOL centersItemsInExcessSpace
 @property  long long autoWidthColumns
 @property  double extraSectionHeaderToCellSpace
 @property  NSIndexSet *sectionsThatShowHeaderWhenEmpty
 @property  NSIndexSet *sectionsThatShowFootersWhenEmpty

  // instance methods
  -[GKCollectionGridLayout .cxx_destruct]
  -[GKCollectionGridLayout prepareLayout]
  -[GKCollectionGridLayout layoutAttributesForElementsInRect:]
  -[GKCollectionGridLayout layoutAttributesForItemAtIndexPath:]
  -[GKCollectionGridLayout collectionViewContentSize]
  -[GKCollectionGridLayout layoutAttributesForSupplementaryViewOfKind:atIndexPath:]
  -[GKCollectionGridLayout setExtraSectionHeaderToCellSpace:]
  -[GKCollectionGridLayout setAutoWidthColumns:]
  -[GKCollectionGridLayout footerAttributes]
  -[GKCollectionGridLayout setHeaderAttributes:]
  -[GKCollectionGridLayout setFooterAttributes:]
  -[GKCollectionGridLayout setItemAttributes:]
  -[GKCollectionGridLayout sectionsThatShowHeaderWhenEmpty]
  -[GKCollectionGridLayout sectionsThatShowFootersWhenEmpty]
  -[GKCollectionGridLayout lastValidSection]
  -[GKCollectionGridLayout applyDefaults]
  -[GKCollectionGridLayout centersItemsInExcessSpace]
  -[GKCollectionGridLayout setCentersItemsInExcessSpace:]
  -[GKCollectionGridLayout autoWidthColumns]
  -[GKCollectionGridLayout extraSectionHeaderToCellSpace]
  -[GKCollectionGridLayout setSectionsThatShowHeaderWhenEmpty:]
  -[GKCollectionGridLayout setSectionsThatShowFootersWhenEmpty:]
  -[GKCollectionGridLayout itemAttributes]
  -[GKCollectionGridLayout headerAttributes]


GKDashboardChallengePlayerPickerDataSource : GKCollectionDataSource
 @property  GKChallenge *challenge
 @property  NSArray *players
 @property  NSMutableDictionary *playerStates
 @property  NSMutableDictionary *playerAchievementDates
 @property  NSArray *searchPlayers
 @property  NSArray *selectedPlayers

  // instance methods
  -[GKDashboardChallengePlayerPickerDataSource dealloc]
  -[GKDashboardChallengePlayerPickerDataSource challenge]
  -[GKDashboardChallengePlayerPickerDataSource numberOfSectionsInCollectionView:]
  -[GKDashboardChallengePlayerPickerDataSource collectionView:cellForItemAtIndexPath:]
  -[GKDashboardChallengePlayerPickerDataSource itemCount]
  -[GKDashboardChallengePlayerPickerDataSource collectionView:shouldSelectItemAtIndexPath:]
  -[GKDashboardChallengePlayerPickerDataSource collectionView:didSelectItemAtIndexPath:]
  -[GKDashboardChallengePlayerPickerDataSource collectionView:didDeselectItemAtIndexPath:]
  -[GKDashboardChallengePlayerPickerDataSource collectionView:layout:sizeForItemAtIndexPath:]
  -[GKDashboardChallengePlayerPickerDataSource clearSelection]
  -[GKDashboardChallengePlayerPickerDataSource setChallenge:]
  -[GKDashboardChallengePlayerPickerDataSource players]
  -[GKDashboardChallengePlayerPickerDataSource preferredCollectionHeight]
  -[GKDashboardChallengePlayerPickerDataSource setupCollectionView:]
  -[GKDashboardChallengePlayerPickerDataSource loadDataWithCompletionHandler:]
  -[GKDashboardChallengePlayerPickerDataSource itemForIndexPath:]
  -[GKDashboardChallengePlayerPickerDataSource sectionHeaderText]
  -[GKDashboardChallengePlayerPickerDataSource setPlayers:]
  -[GKDashboardChallengePlayerPickerDataSource setPlayerStates:]
  -[GKDashboardChallengePlayerPickerDataSource setPlayerAchievementDates:]
  -[GKDashboardChallengePlayerPickerDataSource currentPlayers]
  -[GKDashboardChallengePlayerPickerDataSource playerForIndexPath:]
  -[GKDashboardChallengePlayerPickerDataSource setSearchPlayers:]
  -[GKDashboardChallengePlayerPickerDataSource initWithChallenge:]
  -[GKDashboardChallengePlayerPickerDataSource selectedPlayers]
  -[GKDashboardChallengePlayerPickerDataSource indexPathForPlayer:]
  -[GKDashboardChallengePlayerPickerDataSource searchKeyForSection:]
  -[GKDashboardChallengePlayerPickerDataSource searchTextHasChanged]
  -[GKDashboardChallengePlayerPickerDataSource playerStates]
  -[GKDashboardChallengePlayerPickerDataSource playerAchievementDates]
  -[GKDashboardChallengePlayerPickerDataSource searchPlayers]


GKBubbleControl : UIControl /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics <NSCopying>
 @property  BOOL sharedBubble
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} screenFrame
 @property  {CGPoint=dd} screenPosition
 @property  {CGSize=dd} screenSize
 @property  void worldPosition
 @property  void worldSize
 @property  NSLayoutConstraint *maxHeightConstraint
 @property  NSLayoutConstraint *maxWidthConstraint
 @property  NSLayoutConstraint *contentViewHeightConstraint
 @property  NSLayoutConstraint *contentViewWidthConstraint
 @property  long long bubbleType
 @property  GKBubbleView *bubbleView
 @property  UIView *contentView
 @property  NSString *debuggingTag
 @property  double maximumDimension
 @property  {CGSize=dd} projectedContentSize
 @property  double moveAnimationRangeMultiplier
 @property  BOOL animateOnTouch

  // class methods
  +[GKBubbleControl initialize]
  +[GKBubbleControl maximumDimensionBasedOnDeviceAdjustForTallness:]
  +[GKBubbleControl maximumDimensionWhenContainedInViewWithSize:]

  // instance methods
  -[GKBubbleControl dealloc]
  -[GKBubbleControl copyWithZone:]
  -[GKBubbleControl setHidden:]
  -[GKBubbleControl contentView]
  -[GKBubbleControl setContentView:]
  -[GKBubbleControl initWithFrame:]
  -[GKBubbleControl pointInside:withEvent:]
  -[GKBubbleControl maximumDimension]
  -[GKBubbleControl screenSize]
  -[GKBubbleControl setContentViewHeightConstraint:]
  -[GKBubbleControl contentViewHeightConstraint]
  -[GKBubbleControl setMaximumDimension:]
  -[GKBubbleControl setWorldPosition:]
  -[GKBubbleControl worldPosition]
  -[GKBubbleControl bubbleView]
  -[GKBubbleControl setMoveAnimationRangeMultiplier:]
  -[GKBubbleControl bubbleType]
  -[GKBubbleControl setAnimateOnTouch:]
  -[GKBubbleControl setBubbleType:]
  -[GKBubbleControl animateOnTouch]
  -[GKBubbleControl contentsWrapperView]
  -[GKBubbleControl setContentViewWidthConstraint:]
  -[GKBubbleControl maxHeightConstraint]
  -[GKBubbleControl maxWidthConstraint]
  -[GKBubbleControl contentViewWidthConstraint]
  -[GKBubbleControl moveAnimationRangeMultiplier]
  -[GKBubbleControl didTouchDown]
  -[GKBubbleControl didTouchUp]
  -[GKBubbleControl pathForHitTesting]
  -[GKBubbleControl projectedContentSize]
  -[GKBubbleControl setBubbleView:]
  -[GKBubbleControl debuggingTag]
  -[GKBubbleControl setDebuggingTag:]
  -[GKBubbleControl setMaxHeightConstraint:]
  -[GKBubbleControl setMaxWidthConstraint:]
  -[GKBubbleControl bouncing]
  -[GKBubbleControl bounceAfterDelay:fromZ:toZ:]
  -[GKBubbleControl screenPosition]
  -[GKBubbleControl worldPositionForScreenFrame:assumingSuperviewSize:]
  -[GKBubbleControl worldPositionForScreenFrame:]
  -[GKBubbleControl screenFrame]
  -[GKBubbleControl isSharedBubble]
  -[GKBubbleControl worldSize]
  -[GKBubbleControl worldPositionForScreenPosition:andScreenSize:]
  -[GKBubbleControl setScreenPosition:andScreenSize:]
  -[GKBubbleControl worldPositionForScreenPosition:andScreenSize:andSuperviewSize:]
  -[GKBubbleControl setScreenFrame:]


GKCollectionViewLayoutAttributes : UICollectionViewLayoutAttributes /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  BOOL isPartOfGlobalPinningGroup
 @property  unsigned long gridLayoutLocation
 @property  BOOL doesAbutLeftOfCollectionView
 @property  BOOL allSectionItemsVisible
 @property  BOOL isPinned
 @property  double unpinnedY
 @property  <UICollectionViewDataSource> *dataSource
 @property  GKSectionMetrics *sectionMetrics
 @property  GKSupplementaryViewMetrics *supplementaryMetrics
 @property  unsigned long currentVisibleItemCount
 @property  unsigned long currentTotalItemCount
 @property  unsigned long maxTotalItemCount
 @property  double leadingMargin
 @property  double trailingMargin

  // instance methods
  -[GKCollectionViewLayoutAttributes init]
  -[GKCollectionViewLayoutAttributes dealloc]
  -[GKCollectionViewLayoutAttributes isEqual:]
  -[GKCollectionViewLayoutAttributes copyWithZone:]
  -[GKCollectionViewLayoutAttributes dataSource]
  -[GKCollectionViewLayoutAttributes setDataSource:]
  -[GKCollectionViewLayoutAttributes isPinned]
  -[GKCollectionViewLayoutAttributes setIsPinned:]
  -[GKCollectionViewLayoutAttributes supplementaryMetrics]
  -[GKCollectionViewLayoutAttributes leadingMargin]
  -[GKCollectionViewLayoutAttributes trailingMargin]
  -[GKCollectionViewLayoutAttributes doesAbutLeftOfCollectionView]
  -[GKCollectionViewLayoutAttributes setLeadingMargin:]
  -[GKCollectionViewLayoutAttributes setTrailingMargin:]
  -[GKCollectionViewLayoutAttributes setAllSectionItemsVisible:]
  -[GKCollectionViewLayoutAttributes setIsPartOfGlobalPinningGroup:]
  -[GKCollectionViewLayoutAttributes setUnpinnedY:]
  -[GKCollectionViewLayoutAttributes setSectionMetrics:]
  -[GKCollectionViewLayoutAttributes setSupplementaryMetrics:]
  -[GKCollectionViewLayoutAttributes setCurrentVisibleItemCount:]
  -[GKCollectionViewLayoutAttributes setCurrentTotalItemCount:]
  -[GKCollectionViewLayoutAttributes setMaxTotalItemCount:]
  -[GKCollectionViewLayoutAttributes setGridLayoutLocation:]
  -[GKCollectionViewLayoutAttributes setDoesAbutLeftOfCollectionView:]
  -[GKCollectionViewLayoutAttributes maxTotalItemCount]
  -[GKCollectionViewLayoutAttributes currentVisibleItemCount]
  -[GKCollectionViewLayoutAttributes currentTotalItemCount]
  -[GKCollectionViewLayoutAttributes sectionMetrics]
  -[GKCollectionViewLayoutAttributes allSectionItemsVisible]
  -[GKCollectionViewLayoutAttributes unpinnedY]
  -[GKCollectionViewLayoutAttributes isPartOfGlobalPinningGroup]
  -[GKCollectionViewLayoutAttributes gridLayoutLocation]


GKGridLayoutMetrics : NSObject <NSCopying>
 @property  NSMutableDictionary *keyToMetrics
 @property  NSMutableDictionary *locationToKeyList
 @property  NSString *layoutKey

  // class methods
  +[GKGridLayoutMetrics metrics]

  // instance methods
  -[GKGridLayoutMetrics init]
  -[GKGridLayoutMetrics dealloc]
  -[GKGridLayoutMetrics copyWithZone:]
  -[GKGridLayoutMetrics localDescription]
  -[GKGridLayoutMetrics insertSupplementaryMetrics:forKey:atLocation:]
  -[GKGridLayoutMetrics addSupplementaryMetrics:forKey:atLocation:]
  -[GKGridLayoutMetrics _gkDescriptionWithChildren:]
  -[GKGridLayoutMetrics supplementaryMetricsForKey:]
  -[GKGridLayoutMetrics configureCollectionView:]
  -[GKGridLayoutMetrics locationToKeyList]
  -[GKGridLayoutMetrics keyToMetrics]
  -[GKGridLayoutMetrics layoutKey]
  -[GKGridLayoutMetrics setLayoutKey:]
  -[GKGridLayoutMetrics enumerateSupplementaryLocations:]
  -[GKGridLayoutMetrics keyListForLocation:]
  -[GKGridLayoutMetrics replaceSupplementaryMetrics:forKey:]
  -[GKGridLayoutMetrics enumerateSupplementaryMetricsUsingBlock:]
  -[GKGridLayoutMetrics _gkDescription]
  -[GKGridLayoutMetrics listForLocation:]
  -[GKGridLayoutMetrics mergeSupplementaryMetricsFromEnclosingMetrics:atLocation:globalRange:]
  -[GKGridLayoutMetrics removeSupplementaryMetricsForKey:]
  -[GKGridLayoutMetrics setKeyToMetrics:]
  -[GKGridLayoutMetrics setLocationToKeyList:]
  -[GKGridLayoutMetrics prepareLayout:startingAtSection:]


GKSectionMetrics : GKGridLayoutMetrics
 @property  double calculatedItemHeightCache
 @property  {UIEdgeInsets=dddd} padding
 @property  unsigned long alignment
 @property  double lineSpacing
 @property  double interitemSpacing
 @property  double marginBetweenItems
 @property  double desiredItemWidth
 @property  double flowColumnWidth
 @property  BOOL useViewSizeForFlowMaxColumnCount
 @property  unsigned long flowMaxColumnCount
 @property  double desiredItemHeight
 @property  double calculatedItemHeight
 @property  NSDictionary *itemHeightList
 @property  unsigned long lastLineItemAlignment
 @property  unsigned long maximumVisibleItemCount
 @property  unsigned long incrementalRevealItemCount
 @property  double sectionHeaderHeight
 @property  double showMoreHeight
 @property  BOOL sectionHeadersShouldPin
 @property  BOOL incrementalRevealConsumesPadding
 @property  BOOL shouldAlwaysIncludeShowMore
 @property  BOOL shouldShowSectionHeadersWhenNoItems

  // class methods
  +[GKSectionMetrics metricsForIdiom:]

  // instance methods
  -[GKSectionMetrics init]
  -[GKSectionMetrics dealloc]
  -[GKSectionMetrics isEqual:]
  -[GKSectionMetrics copyWithZone:]
  -[GKSectionMetrics alignment]
  -[GKSectionMetrics lineSpacing]
  -[GKSectionMetrics setAlignment:]
  -[GKSectionMetrics setLineSpacing:]
  -[GKSectionMetrics setPadding:]
  -[GKSectionMetrics initWithIdiom:]
  -[GKSectionMetrics padding]
  -[GKSectionMetrics sectionHeaderHeight]
  -[GKSectionMetrics setSectionHeaderHeight:]
  -[GKSectionMetrics interitemSpacing]
  -[GKSectionMetrics setInteritemSpacing:]
  -[GKSectionMetrics localDescription]
  -[GKSectionMetrics calculatedItemHeight]
  -[GKSectionMetrics setDesiredItemWidth:]
  -[GKSectionMetrics setDesiredItemHeight:]
  -[GKSectionMetrics setFlowColumnWidth:]
  -[GKSectionMetrics setFlowMaxColumnCount:]
  -[GKSectionMetrics setUseViewSizeForFlowMaxColumnCount:]
  -[GKSectionMetrics setItemHeightList:]
  -[GKSectionMetrics setLastLineItemAlignment:]
  -[GKSectionMetrics setMaximumVisibleItemCount:]
  -[GKSectionMetrics setIncrementalRevealItemCount:]
  -[GKSectionMetrics setIncrementalRevealConsumesPadding:]
  -[GKSectionMetrics setShouldAlwaysIncludeShowMore:]
  -[GKSectionMetrics setMarginBetweenItems:]
  -[GKSectionMetrics setShouldShowSectionHeadersWhenNoItems:]
  -[GKSectionMetrics flowMaxColumnCountForViewWidth:]
  -[GKSectionMetrics showMoreHeight]
  -[GKSectionMetrics setShowMoreHeight:]
  -[GKSectionMetrics sectionHeadersShouldPin]
  -[GKSectionMetrics setSectionHeadersShouldPin:]
  -[GKSectionMetrics itemSizeForCollectionView:]
  -[GKSectionMetrics marginBetweenItems]
  -[GKSectionMetrics desiredItemWidth]
  -[GKSectionMetrics flowColumnWidth]
  -[GKSectionMetrics useViewSizeForFlowMaxColumnCount]
  -[GKSectionMetrics flowMaxColumnCount]
  -[GKSectionMetrics desiredItemHeight]
  -[GKSectionMetrics itemHeightList]
  -[GKSectionMetrics lastLineItemAlignment]
  -[GKSectionMetrics maximumVisibleItemCount]
  -[GKSectionMetrics incrementalRevealItemCount]
  -[GKSectionMetrics incrementalRevealConsumesPadding]
  -[GKSectionMetrics shouldAlwaysIncludeShowMore]
  -[GKSectionMetrics shouldShowSectionHeadersWhenNoItems]
  -[GKSectionMetrics calculatedItemHeightCache]
  -[GKSectionMetrics setCalculatedItemHeightCache:]


GKDynamicColumnSectionMetrics : GKSectionMetrics
 @property  unsigned long columnsInPortrait
 @property  unsigned long columnsInLandscape

  // class methods
  +[GKDynamicColumnSectionMetrics dynamicColumnSectionMetricsWithColumnsInPortrait:columnsInLandscape:forIdiom:]
  +[GKDynamicColumnSectionMetrics dynamicColumnSectionMetricsWithColumnsInPortrait:columnsInLandscape:]

  // instance methods
  -[GKDynamicColumnSectionMetrics copyWithZone:]
  -[GKDynamicColumnSectionMetrics initWithIdiom:]
  -[GKDynamicColumnSectionMetrics itemSizeForCollectionView:]
  -[GKDynamicColumnSectionMetrics setColumnsInPortrait:]
  -[GKDynamicColumnSectionMetrics setColumnsInLandscape:]
  -[GKDynamicColumnSectionMetrics updateColumnsInPortrait:columnsInLandscape:]
  -[GKDynamicColumnSectionMetrics columnsInPortrait]
  -[GKDynamicColumnSectionMetrics columnsInLandscape]


GKSupplementaryViewMetrics : NSObject <NSCopying>
 @property  BOOL shouldUseGlobalIndexing
 @property  BOOL shouldPinGlobal
 @property  {_NSRange=QQ} globalSectionRange
 @property  long long animateWithSection
 @property  double desiredWidth
 @property  double desiredHeight
 @property  BOOL shouldPin
 @property  NSString *kind
 @property  Class reusableViewClass
 @property  SEL configurator
 @property  id target
 @property  BOOL hidden

  // class methods
  +[GKSupplementaryViewMetrics supplementaryMetrics]

  // instance methods
  -[GKSupplementaryViewMetrics init]
  -[GKSupplementaryViewMetrics dealloc]
  -[GKSupplementaryViewMetrics copyWithZone:]
  -[GKSupplementaryViewMetrics setTarget:]
  -[GKSupplementaryViewMetrics target]
  -[GKSupplementaryViewMetrics kind]
  -[GKSupplementaryViewMetrics setKind:]
  -[GKSupplementaryViewMetrics isHidden]
  -[GKSupplementaryViewMetrics setHidden:]
  -[GKSupplementaryViewMetrics desiredHeight]
  -[GKSupplementaryViewMetrics desiredWidth]
  -[GKSupplementaryViewMetrics setDesiredWidth:]
  -[GKSupplementaryViewMetrics localDescription]
  -[GKSupplementaryViewMetrics setConfigurator:]
  -[GKSupplementaryViewMetrics configurator]
  -[GKSupplementaryViewMetrics setDesiredHeight:]
  -[GKSupplementaryViewMetrics setShouldPin:]
  -[GKSupplementaryViewMetrics setShouldPinGlobal:]
  -[GKSupplementaryViewMetrics setShouldUseGlobalIndexing:]
  -[GKSupplementaryViewMetrics setGlobalSectionRange:]
  -[GKSupplementaryViewMetrics reusableViewClass]
  -[GKSupplementaryViewMetrics shouldPin]
  -[GKSupplementaryViewMetrics setReusableViewClass:]
  -[GKSupplementaryViewMetrics setAnimateWithSection:]
  -[GKSupplementaryViewMetrics sizeForCollectionView:]
  -[GKSupplementaryViewMetrics shouldUseGlobalIndexing]
  -[GKSupplementaryViewMetrics shouldPinGlobal]
  -[GKSupplementaryViewMetrics globalSectionRange]
  -[GKSupplementaryViewMetrics animateWithSection]


GKDashboardSingleButtonReusableFooterView : UICollectionReusableView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  UIButton *button
 @property  NSLayoutConstraint *buttonLeadingConstraint
 @property  @? buttonTapHandler

  // instance methods
  -[GKDashboardSingleButtonReusableFooterView .cxx_destruct]
  -[GKDashboardSingleButtonReusableFooterView button]
  -[GKDashboardSingleButtonReusableFooterView awakeFromNib]
  -[GKDashboardSingleButtonReusableFooterView setButton:]
  -[GKDashboardSingleButtonReusableFooterView buttonTapped:]
  -[GKDashboardSingleButtonReusableFooterView buttonTapHandler]
  -[GKDashboardSingleButtonReusableFooterView setButtonTitle:forState:]
  -[GKDashboardSingleButtonReusableFooterView buttonLeadingConstraint]
  -[GKDashboardSingleButtonReusableFooterView setButtonLeadingConstraint:]
  -[GKDashboardSingleButtonReusableFooterView setButtonTapHandler:]


GKGameTurnInfo : NSObject
 @property  GKGame *game
 @property  unsigned long numberOfActiveMatches
 @property  unsigned long numberOfLocalPlayerTurns
 @property  NSDate *lastTurnDate

  // instance methods
  -[GKGameTurnInfo dealloc]
  -[GKGameTurnInfo isEqual:]
  -[GKGameTurnInfo game]
  -[GKGameTurnInfo setGame:]
  -[GKGameTurnInfo lastTurnDate]
  -[GKGameTurnInfo numberOfActiveMatches]
  -[GKGameTurnInfo numberOfLocalPlayerTurns]
  -[GKGameTurnInfo setNumberOfActiveMatches:]
  -[GKGameTurnInfo setNumberOfLocalPlayerTurns:]
  -[GKGameTurnInfo setLastTurnDate:]


GKTurnsDataSource : GKSplittingDataSource
 @property  {UIEdgeInsets=dddd} cellMarginInsets

  // instance methods
  -[GKTurnsDataSource collectionView:cellForItemAtIndexPath:]
  -[GKTurnsDataSource configureCollectionView:]
  -[GKTurnsDataSource configureDataSource]
  -[GKTurnsDataSource cellMarginInsets]
  -[GKTurnsDataSource setCellMarginInsets:]
  -[GKTurnsDataSource filteredItemsForRawItems:]


GKMultiplayerActivityView : UIView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  UILabel *label
 @property  NSString *text

  // instance methods
  -[GKMultiplayerActivityView setLabel:]
  -[GKMultiplayerActivityView label]
  -[GKMultiplayerActivityView text]
  -[GKMultiplayerActivityView setText:]
  -[GKMultiplayerActivityView initWithFrame:]


GKGridLayoutInvalidationContext : UICollectionViewLayoutInvalidationContext /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  BOOL invalidateIncrementalReveal
 @property  BOOL invalidateBoundsChange
 @property  BOOL invalidatePlaceholderVisibility
 @property  BOOL invalidatePinnableAreas

  // instance methods
  -[GKGridLayoutInvalidationContext invalidateIncrementalReveal]
  -[GKGridLayoutInvalidationContext setInvalidateIncrementalReveal:]
  -[GKGridLayoutInvalidationContext invalidateBoundsChange]
  -[GKGridLayoutInvalidationContext setInvalidateBoundsChange:]
  -[GKGridLayoutInvalidationContext invalidatePlaceholderVisibility]
  -[GKGridLayoutInvalidationContext setInvalidatePlaceholderVisibility:]
  -[GKGridLayoutInvalidationContext invalidatePinnableAreas]
  -[GKGridLayoutInvalidationContext setInvalidatePinnableAreas:]


GKSectionPresentationData : NSObject
 @property  long long section
 @property  double headerMinY
 @property  double headerMaxY
 @property  double itemsMinY
 @property  double itemsMaxY
 @property  double footerMinY
 @property  double footerMaxY
 @property  double minY
 @property  double maxY
 @property  double showMoreMaxY
 @property  unsigned long numHeaders
 @property  unsigned long numFooters
 @property  unsigned long numOverlays
 @property  unsigned long numItems
 @property  unsigned long overlayOffset

  // instance methods
  -[GKSectionPresentationData section]
  -[GKSectionPresentationData setSection:]
  -[GKSectionPresentationData minY]
  -[GKSectionPresentationData setMinY:]
  -[GKSectionPresentationData maxY]
  -[GKSectionPresentationData setMaxY:]
  -[GKSectionPresentationData headerMaxY]
  -[GKSectionPresentationData initWithSection:presentationData:]
  -[GKSectionPresentationData showMoreMaxY]
  -[GKSectionPresentationData itemsMinY]
  -[GKSectionPresentationData updateWithLayoutAttributes:supplementaryLocation:]
  -[GKSectionPresentationData headerMinY]
  -[GKSectionPresentationData setHeaderMinY:]
  -[GKSectionPresentationData setHeaderMaxY:]
  -[GKSectionPresentationData setItemsMinY:]
  -[GKSectionPresentationData itemsMaxY]
  -[GKSectionPresentationData setItemsMaxY:]
  -[GKSectionPresentationData footerMinY]
  -[GKSectionPresentationData setFooterMinY:]
  -[GKSectionPresentationData footerMaxY]
  -[GKSectionPresentationData setFooterMaxY:]
  -[GKSectionPresentationData setShowMoreMaxY:]
  -[GKSectionPresentationData numHeaders]
  -[GKSectionPresentationData setNumHeaders:]
  -[GKSectionPresentationData numFooters]
  -[GKSectionPresentationData setNumFooters:]
  -[GKSectionPresentationData numOverlays]
  -[GKSectionPresentationData setNumOverlays:]
  -[GKSectionPresentationData numItems]
  -[GKSectionPresentationData setNumItems:]
  -[GKSectionPresentationData overlayOffset]
  -[GKSectionPresentationData setOverlayOffset:]


GKGridLayout : UICollectionViewLayout /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  NSPointerArray *sectionToPresentationData
 @property  NSPointerArray *sectionToMetricData
 @property  NSMutableArray *laidOutAttributes
 @property  NSMutableOrderedSet *laidOutPinnableAttributes
 @property  {CGSize=dd} laidOutContentSize
 @property  {CGSize=dd} oldLaidOutContentSize
 @property  {CGSize=dd} minimumLaidOutContentSize
 @property  NSMutableDictionary *indexPathToSupplementary
 @property  NSMutableDictionary *indexPathToDecoration
 @property  NSMutableDictionary *indexPathToItem
 @property  NSMutableDictionary *oldIndexPathToSupplementary
 @property  NSMutableDictionary *oldIndexPathToDecoration
 @property  NSMutableDictionary *oldIndexPathToItem
 @property  NSMutableDictionary *indexPathToMetrics
 @property  NSMutableIndexSet *sectionsWithPinnedHeaders
 @property  NSMutableSet *revealedIndexPaths
 @property  NSIndexPath *indexPathOfTouchedShowMore
 @property  BOOL noMoreShowMore
 @property  NSMutableDictionary *keyToMetricData
 @property  NSMutableDictionary *oldSectionToMetricKeys
 @property  long long metricsInvalidationCount
 @property  NSArray *currentUpdateItems
 @property  NSMutableSet *knownSupplementaryKinds
 @property  GKCollectionViewDataSource *dataSourceForUpdate
 @property  unsigned long updateType
 @property  BOOL movedItemsInUpdateCarrySections
 @property  BOOL displayClipView
 @property  GKCollectionViewLayoutAttributes *clipViewAttributes
 @property  unsigned long invalidationFlags
 @property  BOOL displayingOverlay
 @property  double segmentedBoxY
 @property  BOOL shouldLayoutRTL
 @property  NSSet *visibleIndexPathsFilter
 @property  GKSectionMetrics *defaultSectionMetricsInternal
 @property  GKDataSourceMetrics *dataSourceMetrics
 @property  double hiddenSearchBarOffset
 @property  double segmentedHeaderPinningOffset
 @property  BOOL showPlaceholder
 @property  unsigned long portraitInterleavedSectionsCount
 @property  unsigned long landscapeInterleavedSectionsCount
 @property  double leftLayoutGuideOffset
 @property  double rightLayoutGuideOffset
 @property  BOOL hideSearchBarOnAppear
 @property  BOOL hideAboveSegmentOnAppear
 @property  double bottomContentPadding
 @property  BOOL ignoreBoundsForSizeCalculation

  // class methods
  +[GKGridLayout invalidationContextClass]
  +[GKGridLayout layoutAttributesClass]

  // instance methods
  -[GKGridLayout init]
  -[GKGridLayout dealloc]
  -[GKGridLayout scale]
  -[GKGridLayout invalidateLayoutWithContext:]
  -[GKGridLayout prepareLayout]
  -[GKGridLayout layoutAttributesForElementsInRect:]
  -[GKGridLayout layoutAttributesForItemAtIndexPath:]
  -[GKGridLayout invalidationContextForBoundsChange:]
  -[GKGridLayout finalizeCollectionViewUpdates]
  -[GKGridLayout indexPathsToDeleteForSupplementaryViewOfKind:]
  -[GKGridLayout collectionViewContentSize]
  -[GKGridLayout layoutAttributesForSupplementaryViewOfKind:atIndexPath:]
  -[GKGridLayout layoutAttributesForDecorationViewOfKind:atIndexPath:]
  -[GKGridLayout shouldInvalidateLayoutForBoundsChange:]
  -[GKGridLayout prepareForCollectionViewUpdates:]
  -[GKGridLayout finalLayoutAttributesForDisappearingItemAtIndexPath:]
  -[GKGridLayout prepareForAnimatedBoundsChange:]
  -[GKGridLayout targetContentOffsetForProposedContentOffset:]
  -[GKGridLayout finalLayoutAttributesForDisappearingSupplementaryElementOfKind:atIndexPath:]
  -[GKGridLayout initialLayoutAttributesForAppearingItemAtIndexPath:]
  -[GKGridLayout initialLayoutAttributesForAppearingSupplementaryElementOfKind:atIndexPath:]
  -[GKGridLayout finalizeAnimatedBoundsChange]
  -[GKGridLayout _animationForReusableView:toLayoutAttributes:type:]
  -[GKGridLayout targetContentOffsetForProposedContentOffset:withScrollingVelocity:]
  -[GKGridLayout bottomContentPadding]
  -[GKGridLayout updateType]
  -[GKGridLayout setUpdateType:]
  -[GKGridLayout _resetState]
  -[GKGridLayout searchResultsCount]
  -[GKGridLayout setShowPlaceholder:]
  -[GKGridLayout showPlaceholder]
  -[GKGridLayout setDataSourceMetrics:]
  -[GKGridLayout _gkDescriptionWithChildren:]
  -[GKGridLayout dataSourceMetrics]
  -[GKGridLayout updatePlaceholderVisibility]
  -[GKGridLayout shouldUpdateVisibleCellLayoutAttributes]
  -[GKGridLayout metricDataForSection:]
  -[GKGridLayout filteredTotalItemCountForSection:]
  -[GKGridLayout setDefaultSectionMetricsInternal:]
  -[GKGridLayout layoutBounds]
  -[GKGridLayout _sizeAdjustedForTabBarSettingsBasedOnSize:]
  -[GKGridLayout refreshMetrics]
  -[GKGridLayout _filterPinnedAttributes]
  -[GKGridLayout metricsForSection:]
  -[GKGridLayout indexOfSupplementaryMetricsOfKind:inList:]
  -[GKGridLayout sectionsPerRow]
  -[GKGridLayout presentationDataForSection:]
  -[GKGridLayout calculatedBottomPaddingForSection:]
  -[GKGridLayout _existingPresentationDataForSection:]
  -[GKGridLayout _areWePortrait]
  -[GKGridLayout sectionsWithPinnedHeaders]
  -[GKGridLayout yOffsetForSection:]
  -[GKGridLayout leftLayoutGuideOffset]
  -[GKGridLayout rightLayoutGuideOffset]
  -[GKGridLayout updatePresentationDataInSection:withAttributes:supplementaryLocation:]
  -[GKGridLayout setClipViewAttributes:]
  -[GKGridLayout firstVisibleIndexAtOrAfterItem:itemCount:inSection:]
  -[GKGridLayout fullyRebuildLayout]
  -[GKGridLayout _prepareSupplementaryLayoutForSection:atLocation:offset:globalOffset:]
  -[GKGridLayout _prepareOverlayLayoutForSection:offset:]
  -[GKGridLayout _prepareItemLayoutForSection:]
  -[GKGridLayout updatePresentationDataForLastInterleavedSections]
  -[GKGridLayout finalizeGlobalPresentationDataWithSectionRange:]
  -[GKGridLayout calculateCollectionViewContentSize]
  -[GKGridLayout _prepareSegmentedBoxLayoutWithOffset:]
  -[GKGridLayout applyBottomPinningToAttributes:minY:maxY:]
  -[GKGridLayout applyTopPinningToAttributes:minY:maxY:]
  -[GKGridLayout layoutTopPinningAttributes:minY:maxY:]
  -[GKGridLayout finalizePinnedAttributes:forSection:footer:]
  -[GKGridLayout layoutBottomPinningAttributes:minY:maxY:]
  -[GKGridLayout enumerateSectionsIndexesOverlappingYOffset:block:]
  -[GKGridLayout revealMoreForSectionIndex:revealCount:andDeleteItemCount:]
  -[GKGridLayout setIndexPathOfTouchedShowMore:]
  -[GKGridLayout setRevealedIndexPaths:]
  -[GKGridLayout yOffsetForSlidingUpdate]
  -[GKGridLayout initialLayoutAttributesForSlidingInItemAtIndexPath:]
  -[GKGridLayout finalLayoutAttributesForSlidingAwayItemAtIndexPath:]
  -[GKGridLayout shouldSlideInSupplementaryElementOfKind:forUpdateItem:atIndexPath:]
  -[GKGridLayout shouldSlideOutSupplementaryElementOfKind:forUpdateItem:atIndexPath:]
  -[GKGridLayout setCurrentUpdateItems:]
  -[GKGridLayout setDataSourceForUpdate:]
  -[GKGridLayout setMovedItemsInUpdateCarrySections:]
  -[GKGridLayout prepareForUpdate:inDataSource:]
  -[GKGridLayout metricDataForKey:]
  -[GKGridLayout setMetricData:forSection:]
  -[GKGridLayout attributesForSupplementaryIndexPath:]
  -[GKGridLayout setPortraitInterleavedSectionsCount:]
  -[GKGridLayout setLandscapeInterleavedSectionsCount:]
  -[GKGridLayout defaultSectionMetricsInternal]
  -[GKGridLayout setVisibleIndexPathsFilter:]
  -[GKGridLayout setLeftLayoutGuideOffset:]
  -[GKGridLayout setRightLayoutGuideOffset:]
  -[GKGridLayout updatePinnableAreas]
  -[GKGridLayout enableClipView]
  -[GKGridLayout disableClipView]
  -[GKGridLayout forceFullInvalidate]
  -[GKGridLayout currentMaxVisibleItemCountForSection:]
  -[GKGridLayout revealMoreForSectionIndex:]
  -[GKGridLayout prepareForMovingItemsCarryingSections]
  -[GKGridLayout portraitInterleavedSectionsCount]
  -[GKGridLayout landscapeInterleavedSectionsCount]
  -[GKGridLayout hideSearchBarOnAppear]
  -[GKGridLayout setHideSearchBarOnAppear:]
  -[GKGridLayout hideAboveSegmentOnAppear]
  -[GKGridLayout setHideAboveSegmentOnAppear:]
  -[GKGridLayout laidOutContentSize]
  -[GKGridLayout setLaidOutContentSize:]
  -[GKGridLayout minimumLaidOutContentSize]
  -[GKGridLayout setMinimumLaidOutContentSize:]
  -[GKGridLayout setBottomContentPadding:]
  -[GKGridLayout ignoreBoundsForSizeCalculation]
  -[GKGridLayout setIgnoreBoundsForSizeCalculation:]
  -[GKGridLayout sectionToPresentationData]
  -[GKGridLayout setSectionToPresentationData:]
  -[GKGridLayout sectionToMetricData]
  -[GKGridLayout setSectionToMetricData:]
  -[GKGridLayout laidOutAttributes]
  -[GKGridLayout setLaidOutAttributes:]
  -[GKGridLayout laidOutPinnableAttributes]
  -[GKGridLayout setLaidOutPinnableAttributes:]
  -[GKGridLayout oldLaidOutContentSize]
  -[GKGridLayout setOldLaidOutContentSize:]
  -[GKGridLayout indexPathToSupplementary]
  -[GKGridLayout setIndexPathToSupplementary:]
  -[GKGridLayout indexPathToDecoration]
  -[GKGridLayout setIndexPathToDecoration:]
  -[GKGridLayout indexPathToItem]
  -[GKGridLayout setIndexPathToItem:]
  -[GKGridLayout oldIndexPathToSupplementary]
  -[GKGridLayout setOldIndexPathToSupplementary:]
  -[GKGridLayout oldIndexPathToDecoration]
  -[GKGridLayout setOldIndexPathToDecoration:]
  -[GKGridLayout oldIndexPathToItem]
  -[GKGridLayout setOldIndexPathToItem:]
  -[GKGridLayout indexPathToMetrics]
  -[GKGridLayout setIndexPathToMetrics:]
  -[GKGridLayout setSectionsWithPinnedHeaders:]
  -[GKGridLayout revealedIndexPaths]
  -[GKGridLayout indexPathOfTouchedShowMore]
  -[GKGridLayout noMoreShowMore]
  -[GKGridLayout setNoMoreShowMore:]
  -[GKGridLayout keyToMetricData]
  -[GKGridLayout setKeyToMetricData:]
  -[GKGridLayout oldSectionToMetricKeys]
  -[GKGridLayout setOldSectionToMetricKeys:]
  -[GKGridLayout metricsInvalidationCount]
  -[GKGridLayout setMetricsInvalidationCount:]
  -[GKGridLayout currentUpdateItems]
  -[GKGridLayout knownSupplementaryKinds]
  -[GKGridLayout setKnownSupplementaryKinds:]
  -[GKGridLayout dataSourceForUpdate]
  -[GKGridLayout movedItemsInUpdateCarrySections]
  -[GKGridLayout displayClipView]
  -[GKGridLayout setDisplayClipView:]
  -[GKGridLayout clipViewAttributes]
  -[GKGridLayout invalidationFlags]
  -[GKGridLayout setInvalidationFlags:]
  -[GKGridLayout displayingOverlay]
  -[GKGridLayout setDisplayingOverlay:]
  -[GKGridLayout segmentedBoxY]
  -[GKGridLayout setSegmentedBoxY:]
  -[GKGridLayout shouldLayoutRTL]
  -[GKGridLayout setShouldLayoutRTL:]
  -[GKGridLayout visibleIndexPathsFilter]
  -[GKGridLayout hiddenSearchBarOffset]
  -[GKGridLayout setHiddenSearchBarOffset:]
  -[GKGridLayout segmentedHeaderPinningOffset]
  -[GKGridLayout setSegmentedHeaderPinningOffset:]


GKCancelSwipeToEditGestureRecognizer : UITapGestureRecognizer /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  GKCollectionViewCell *currentEditingCell

  // instance methods
  -[GKCancelSwipeToEditGestureRecognizer dealloc]
  -[GKCancelSwipeToEditGestureRecognizer touchesEnded:withEvent:]
  -[GKCancelSwipeToEditGestureRecognizer currentEditingCell]
  -[GKCancelSwipeToEditGestureRecognizer setCurrentEditingCell:]


GKSwipeToEditStateMachine : _GKStateMachine /usr/lib/liblockdown.dylib <UIGestureRecognizerDelegate, GKSegmentedSectionDataSourceEventHandler>
 @property  UICollectionView *collectionView
 @property  GKCollectionViewDataSource *gkDataSource
 @property  GKCancelSwipeToEditGestureRecognizer *editModeCancelRecognizer
 @property  UIPanGestureRecognizer *panGestureRecognizer
 @property  GKCollectionViewCell *editingCell
 @property  double startTrackingX
 @property  _UIDynamicAnimation *openAnimation
 @property  NSIndexPath *trackedIndexPath
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKSwipeToEditStateMachine dealloc]
  -[GKSwipeToEditStateMachine setDelegate:]
  -[GKSwipeToEditStateMachine gestureRecognizerShouldBegin:]
  -[GKSwipeToEditStateMachine collectionView]
  -[GKSwipeToEditStateMachine viewDidDisappear:]
  -[GKSwipeToEditStateMachine panGestureRecognizer]
  -[GKSwipeToEditStateMachine handlePan:]
  -[GKSwipeToEditStateMachine initWithCollectionView:]
  -[GKSwipeToEditStateMachine setCollectionView:]
  -[GKSwipeToEditStateMachine setPanGestureRecognizer:]
  -[GKSwipeToEditStateMachine editingCell]
  -[GKSwipeToEditStateMachine setEditingCell:]
  -[GKSwipeToEditStateMachine segmentedSectionDataSource:inSection:didSelectDataSourceWithIndex:]
  -[GKSwipeToEditStateMachine setGkDataSource:]
  -[GKSwipeToEditStateMachine handleCancelTap:]
  -[GKSwipeToEditStateMachine xPositionForTranslation:]
  -[GKSwipeToEditStateMachine setOpenAnimation:]
  -[GKSwipeToEditStateMachine shutActionPaneForEditingCellAnimated:]
  -[GKSwipeToEditStateMachine gkDataSource]
  -[GKSwipeToEditStateMachine trackedIndexPath]
  -[GKSwipeToEditStateMachine didEnterEditingState]
  -[GKSwipeToEditStateMachine didExitEditingState]
  -[GKSwipeToEditStateMachine didExitNothingState]
  -[GKSwipeToEditStateMachine didEnterNothingState]
  -[GKSwipeToEditStateMachine didEnterAnimatingShutState]
  -[GKSwipeToEditStateMachine didEnterAnimatingOpenState]
  -[GKSwipeToEditStateMachine didExitAnimatingOpenState]
  -[GKSwipeToEditStateMachine editModeCancelRecognizer]
  -[GKSwipeToEditStateMachine setEditModeCancelRecognizer:]
  -[GKSwipeToEditStateMachine startTrackingX]
  -[GKSwipeToEditStateMachine setStartTrackingX:]
  -[GKSwipeToEditStateMachine openAnimation]


GKBubblePathAnimator : NSObject
 @property  long long animatorType

  // class methods
  +[GKBubblePathAnimator sharedBubblePathAnimator]
  +[GKBubblePathAnimator hiTimingFunction]

  // instance methods
  -[GKBubblePathAnimator animateTransition:]
  -[GKBubblePathAnimator animatorType]
  -[GKBubblePathAnimator bubblesOnscreenAtBeginning]
  -[GKBubblePathAnimator bubblesOnscreenAtEnd]
  -[GKBubblePathAnimator animateTransition:completionHandler:]
  -[GKBubblePathAnimator minimumDurationForViewAnimations]
  -[GKBubblePathAnimator effectiveViewForContext:]


GKExplodeFrontToBackAnimator : GKBubblePathAnimator
  // class methods
  +[GKExplodeFrontToBackAnimator preferredDuration]

  // instance methods
  -[GKExplodeFrontToBackAnimator animateTransition:]
  -[GKExplodeFrontToBackAnimator animatorType]
  -[GKExplodeFrontToBackAnimator explodeAnimationsForBubble:startPoint:contractPoint:arcX:endPoint:duration:context:]


GKFishhookAnimator : GKBubblePathAnimator
  // instance methods
  -[GKFishhookAnimator animateTransition:]
  -[GKFishhookAnimator animatorType]


GKScatterAnimator : GKBubblePathAnimator
 @property  long long focusBubbleType

  // class methods
  +[GKScatterAnimator preferredDuration]

  // instance methods
  -[GKScatterAnimator animateTransition:]
  -[GKScatterAnimator animatorType]
  -[GKScatterAnimator minimumDurationForViewAnimations]
  -[GKScatterAnimator scatterBubblesSortedLeftToRightInContext:]
  -[GKScatterAnimator scatterAnimationsForBubble:sortedBubbles:contractPoint:context:]
  -[GKScatterAnimator scatterBubble:shouldMoveLeftAmongBubbles:context:]
  -[GKScatterAnimator focusBubbleType]
  -[GKScatterAnimator scatterBubble:shouldMoveUpAmongBubbles:]
  -[GKScatterAnimator setFocusBubbleType:]


GKScatterBackToFrontAnimator : GKBubblePathAnimator
  // instance methods
  -[GKScatterBackToFrontAnimator animateTransition:]
  -[GKScatterBackToFrontAnimator animatorType]


GKForceBubbleAnimator : GKBubblePathAnimator
  // class methods
  +[GKForceBubbleAnimator animationPathInfoForTappedBubble:forcedBubble:]

  // instance methods
  -[GKForceBubbleAnimator animateTransition:]
  -[GKForceBubbleAnimator animatorType]


GKFloatInAnimator : GKBubblePathAnimator
 @property  double additionalDelay
 @property  long long focusBubbleType
 @property  double delayIncrement
 @property  BOOL useWelcomeSpringValues

  // instance methods
  -[GKFloatInAnimator init]
  -[GKFloatInAnimator animateTransition:]
  -[GKFloatInAnimator animatorType]
  -[GKFloatInAnimator focusBubbleType]
  -[GKFloatInAnimator setFocusBubbleType:]
  -[GKFloatInAnimator floatBubblesSortedLeftToRightInContext:]
  -[GKFloatInAnimator delayIncrement]
  -[GKFloatInAnimator setDelayIncrement:]
  -[GKFloatInAnimator useWelcomeSpringValues]
  -[GKFloatInAnimator setUseWelcomeSpringValues:]
  -[GKFloatInAnimator additionalDelay]
  -[GKFloatInAnimator setAdditionalDelay:]


GKStandaloneWiggleRotateAnimator : GKWiggleRotateAnimator
 @property  GKBubbleFlowContainerView *containerView
 @property  long long rotationDirection
 @property  _GKBubbleFlowPathTransitionInfo *transitionContext

  // instance methods
  -[GKStandaloneWiggleRotateAnimator dealloc]
  -[GKStandaloneWiggleRotateAnimator containerView]
  -[GKStandaloneWiggleRotateAnimator setContainerView:]
  -[GKStandaloneWiggleRotateAnimator transitionContext]
  -[GKStandaloneWiggleRotateAnimator animate]
  -[GKStandaloneWiggleRotateAnimator setTransitionContext:]
  -[GKStandaloneWiggleRotateAnimator rotationDirection]
  -[GKStandaloneWiggleRotateAnimator setRotationDirection:]
  -[GKStandaloneWiggleRotateAnimator transitionContextCreatingIfNeeded]
  -[GKStandaloneWiggleRotateAnimator readStartingPositions]
  -[GKStandaloneWiggleRotateAnimator readEndingPositions]
  -[GKStandaloneWiggleRotateAnimator rotatingRightWithTransitionContext:]
  -[GKStandaloneWiggleRotateAnimator animateForBubbleContainer:withTransitionCoordinator:]


GKWiggleRotateAnimator : GKBubblePathAnimator
 @property  BOOL aggroBubbles

  // instance methods
  -[GKWiggleRotateAnimator animateTransition:]
  -[GKWiggleRotateAnimator animatorType]
  -[GKWiggleRotateAnimator setAggroBubbles:]
  -[GKWiggleRotateAnimator rotatingRightWithTransitionContext:]
  -[GKWiggleRotateAnimator updateInFlightAnimations:]
  -[GKWiggleRotateAnimator animateWithBounce:]
  -[GKWiggleRotateAnimator animateWithoutBounce:]
  -[GKWiggleRotateAnimator aggroBubbles]


GKSimpleSlideAnimator : GKBubblePathAnimator
  // instance methods
  -[GKSimpleSlideAnimator animateTransition:]
  -[GKSimpleSlideAnimator animatorType]
  -[GKSimpleSlideAnimator minimumDurationForViewAnimations]


GKFallbackAnimator : GKBubblePathAnimator
  // instance methods
  -[GKFallbackAnimator animateTransition:]
  -[GKFallbackAnimator animatorType]
  -[GKFallbackAnimator minimumDurationForViewAnimations]


GKLoginAlertView : UIAlertView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics <UITextFieldDelegate>
 @property  NSString *username
 @property  NSString *password
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKLoginAlertView dealloc]
  -[GKLoginAlertView password]
  -[GKLoginAlertView setPassword:]
  -[GKLoginAlertView username]
  -[GKLoginAlertView setUsername:]
  -[GKLoginAlertView textFieldShouldReturn:]
  -[GKLoginAlertView initWithDelegate:uneditableUsername:]
  -[GKLoginAlertView _updateFrameForDisplay]


GKDashboardTurnCell : GKDashboardPlayerCell
 @property  UILabel *dateLabel
 @property  UILabel *turnLabel
 @property  UIImageView *actionIndicatorView
 @property  NSLayoutConstraint *dateToNameConstraint
 @property  NSLayoutConstraint *turnToNameConstraint
 @property  UIColor *dateColor
 @property  UIColor *turnColor
 @property  double dateToNameConstant
 @property  double turnToNameConstant
 @property  long long displayIndex

  // class methods
  +[GKDashboardTurnCell defaultSizeForTurnDetail]

  // instance methods
  -[GKDashboardTurnCell dealloc]
  -[GKDashboardTurnCell awakeFromNib]
  -[GKDashboardTurnCell dateLabel]
  -[GKDashboardTurnCell setDateLabel:]
  -[GKDashboardTurnCell displayIndex]
  -[GKDashboardTurnCell actionIndicatorView]
  -[GKDashboardTurnCell setActionIndicatorView:]
  -[GKDashboardTurnCell setOnDarkBackground:]
  -[GKDashboardTurnCell setDisplayIndex:]
  -[GKDashboardTurnCell configureForParticipant:inMatch:]
  -[GKDashboardTurnCell setDateColor:]
  -[GKDashboardTurnCell setTurnColor:]
  -[GKDashboardTurnCell setDateToNameConstant:]
  -[GKDashboardTurnCell setTurnToNameConstant:]
  -[GKDashboardTurnCell wantsLocalPlayerAction:]
  -[GKDashboardTurnCell configureForMatch:]
  -[GKDashboardTurnCell turnLabel]
  -[GKDashboardTurnCell setTurnLabel:]
  -[GKDashboardTurnCell dateToNameConstraint]
  -[GKDashboardTurnCell setDateToNameConstraint:]
  -[GKDashboardTurnCell turnToNameConstraint]
  -[GKDashboardTurnCell setTurnToNameConstraint:]
  -[GKDashboardTurnCell dateColor]
  -[GKDashboardTurnCell turnColor]
  -[GKDashboardTurnCell dateToNameConstant]
  -[GKDashboardTurnCell turnToNameConstant]


GKDashboardChallengePlayerPickerViewController : GKDashboardCollectionViewController <UITextFieldDelegate, UISearchBarDelegate, GKComposeControllerDelegate>
 @property  GKChallenge *challenge
 @property  NSArray *initiallySelectedPlayers
 @property  BOOL shouldIgnoreClearSelection
 @property  UILabel *descriptionLabel
 @property  UIButton *sendButton
 @property  UIBarButtonItem *customizeMessageButton
 @property  UITextField *messageField
 @property  UIView *scrollingHeader
 @property  NSLayoutConstraint *scrollingHeaderTopConstraint
 @property  double scrollingHeaderTopConstraintConstant
 @property  {UIEdgeInsets=dddd} initialInsets
 @property  BOOL shouldApplyInitialOffset
 @property  NSLayoutConstraint *customizeMessageBottomConstraint
 @property  double initialCustomizeMessageBottomConstraintConstant
 @property  UIViewController *composeController
 @property  NSString *message
 @property  @? completionHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKDashboardChallengePlayerPickerViewController dealloc]
  -[GKDashboardChallengePlayerPickerViewController message]
  -[GKDashboardChallengePlayerPickerViewController setMessage:]
  -[GKDashboardChallengePlayerPickerViewController challenge]
  -[GKDashboardChallengePlayerPickerViewController completionHandler]
  -[GKDashboardChallengePlayerPickerViewController setCompletionHandler:]
  -[GKDashboardChallengePlayerPickerViewController preferredFocusEnvironments]
  -[GKDashboardChallengePlayerPickerViewController scrollViewDidScroll:]
  -[GKDashboardChallengePlayerPickerViewController viewWillAppear:]
  -[GKDashboardChallengePlayerPickerViewController viewDidLoad]
  -[GKDashboardChallengePlayerPickerViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[GKDashboardChallengePlayerPickerViewController viewDidAppear:]
  -[GKDashboardChallengePlayerPickerViewController searchBar:textDidChange:]
  -[GKDashboardChallengePlayerPickerViewController searchBarCancelButtonClicked:]
  -[GKDashboardChallengePlayerPickerViewController searchBarSearchButtonClicked:]
  -[GKDashboardChallengePlayerPickerViewController setDescriptionLabel:]
  -[GKDashboardChallengePlayerPickerViewController descriptionLabel]
  -[GKDashboardChallengePlayerPickerViewController collectionView:didSelectItemAtIndexPath:]
  -[GKDashboardChallengePlayerPickerViewController collectionView:didDeselectItemAtIndexPath:]
  -[GKDashboardChallengePlayerPickerViewController clearSelection]
  -[GKDashboardChallengePlayerPickerViewController addMessage:]
  -[GKDashboardChallengePlayerPickerViewController textFieldShouldReturn:]
  -[GKDashboardChallengePlayerPickerViewController setSearchText:]
  -[GKDashboardChallengePlayerPickerViewController loadData]
  -[GKDashboardChallengePlayerPickerViewController send:]
  -[GKDashboardChallengePlayerPickerViewController cancel:]
  -[GKDashboardChallengePlayerPickerViewController setChallenge:]
  -[GKDashboardChallengePlayerPickerViewController sendButton]
  -[GKDashboardChallengePlayerPickerViewController setSendButton:]
  -[GKDashboardChallengePlayerPickerViewController messageField]
  -[GKDashboardChallengePlayerPickerViewController setInitiallySelectedPlayers:]
  -[GKDashboardChallengePlayerPickerViewController setScrollingHeaderTopConstraintConstant:]
  -[GKDashboardChallengePlayerPickerViewController setInitialInsets:]
  -[GKDashboardChallengePlayerPickerViewController setShouldApplyInitialOffset:]
  -[GKDashboardChallengePlayerPickerViewController adjustCustomizeMessageConstraint]
  -[GKDashboardChallengePlayerPickerViewController _updateButtonEnableState]
  -[GKDashboardChallengePlayerPickerViewController applyInitialContentOffset]
  -[GKDashboardChallengePlayerPickerViewController setShouldIgnoreClearSelection:]
  -[GKDashboardChallengePlayerPickerViewController dataUpdated:withError:]
  -[GKDashboardChallengePlayerPickerViewController selectPlayersAtIndexPaths:]
  -[GKDashboardChallengePlayerPickerViewController setupNoContentView:withError:]
  -[GKDashboardChallengePlayerPickerViewController initWithChallenge:initiallySelectedPlayers:]
  -[GKDashboardChallengePlayerPickerViewController initiallySelectedPlayers]
  -[GKDashboardChallengePlayerPickerViewController shouldIgnoreClearSelection]
  -[GKDashboardChallengePlayerPickerViewController customizeMessageButton]
  -[GKDashboardChallengePlayerPickerViewController setCustomizeMessageButton:]
  -[GKDashboardChallengePlayerPickerViewController setMessageField:]
  -[GKDashboardChallengePlayerPickerViewController scrollingHeader]
  -[GKDashboardChallengePlayerPickerViewController setScrollingHeader:]
  -[GKDashboardChallengePlayerPickerViewController scrollingHeaderTopConstraint]
  -[GKDashboardChallengePlayerPickerViewController setScrollingHeaderTopConstraint:]
  -[GKDashboardChallengePlayerPickerViewController scrollingHeaderTopConstraintConstant]
  -[GKDashboardChallengePlayerPickerViewController initialInsets]
  -[GKDashboardChallengePlayerPickerViewController shouldApplyInitialOffset]
  -[GKDashboardChallengePlayerPickerViewController customizeMessageBottomConstraint]
  -[GKDashboardChallengePlayerPickerViewController setCustomizeMessageBottomConstraint:]
  -[GKDashboardChallengePlayerPickerViewController initialCustomizeMessageBottomConstraintConstant]
  -[GKDashboardChallengePlayerPickerViewController setInitialCustomizeMessageBottomConstraintConstant:]
  -[GKDashboardChallengePlayerPickerViewController composeController]
  -[GKDashboardChallengePlayerPickerViewController setComposeController:]


GKDataSourceMetrics : GKGridLayoutMetrics
 @property  NSString *cachedKey
 @property  {_NSRange=QQ} globalSectionRange
 @property  {_NSRange=QQ} localSectionRange
 @property  NSMutableDictionary *sectionToMetrics
 @property  NSArray *childMetrics
 @property  GKCollectionViewDataSource *dataSource

  // class methods
  +[GKDataSourceMetrics dataSourceMetricsWithMetrics:dataSource:]

  // instance methods
  -[GKDataSourceMetrics dealloc]
  -[GKDataSourceMetrics copyWithZone:]
  -[GKDataSourceMetrics dataSource]
  -[GKDataSourceMetrics setDataSource:]
  -[GKDataSourceMetrics _gkDescriptionWithChildren:]
  -[GKDataSourceMetrics setChildMetrics:]
  -[GKDataSourceMetrics setLocalSectionRange:]
  -[GKDataSourceMetrics setGlobalSectionRange:]
  -[GKDataSourceMetrics globalSectionRange]
  -[GKDataSourceMetrics metricsForSection:]
  -[GKDataSourceMetrics prepareLayout:]
  -[GKDataSourceMetrics initWithMetrics:dataSource:]
  -[GKDataSourceMetrics sectionToMetrics]
  -[GKDataSourceMetrics setCachedKey:]
  -[GKDataSourceMetrics globalLayoutKey]
  -[GKDataSourceMetrics setMetrics:forSection:]
  -[GKDataSourceMetrics globalLayoutKeyForSection:]
  -[GKDataSourceMetrics localSectionRange]
  -[GKDataSourceMetrics setSectionToMetrics:]
  -[GKDataSourceMetrics childMetrics]
  -[GKDataSourceMetrics cachedKey]
  -[GKDataSourceMetrics computeGlobalSectionRangesWithBaseIndex:]
  -[GKDataSourceMetrics accumulateSections:layout:]
  -[GKDataSourceMetrics applyDataSourceMetricsToSections:withParent:layout:]
  -[GKDataSourceMetrics generateMetricDataForLayout:]


GKSimpleComposeController : GKBaseComposeController
 @property  GKComposeHeaderWithStaticRecipients *toField
 @property  NSString *defaultMessage
 @property  NSArray *players
 @property  @? doneHandler

  // instance methods
  -[GKSimpleComposeController dealloc]
  -[GKSimpleComposeController loadView]
  -[GKSimpleComposeController viewWillAppear:]
  -[GKSimpleComposeController donePressed]
  -[GKSimpleComposeController toField]
  -[GKSimpleComposeController setToField:]
  -[GKSimpleComposeController players]
  -[GKSimpleComposeController setPlayers:]
  -[GKSimpleComposeController setDoneHandler:]
  -[GKSimpleComposeController setupSendButton]
  -[GKSimpleComposeController doneHandler]
  -[GKSimpleComposeController defaultMessage]
  -[GKSimpleComposeController pushOntoNavigationController:withDoneHandler:]
  -[GKSimpleComposeController setDefaultMessage:]


GKDashboardShowMoreTextCell : GKRectShadowCell
 @property  UILabel *label

  // class methods
  +[GKDashboardShowMoreTextCell defaultSize]

  // instance methods
  -[GKDashboardShowMoreTextCell setLabel:]
  -[GKDashboardShowMoreTextCell label]
  -[GKDashboardShowMoreTextCell awakeFromNib]


GKLoadableContentViewController : GKViewController <_GKStateMachineDelegate>
 @property  GKLoadableContentStateMachine *loadingMachine
 @property  NSString *loadingState
 @property  UIActivityIndicatorView *activityIndicator
 @property  NSArray *viewsToHideWhileLoading
 @property  double loadingIndicatorDelay
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKLoadableContentViewController init]
  -[GKLoadableContentViewController dealloc]
  -[GKLoadableContentViewController activityIndicator]
  -[GKLoadableContentViewController setActivityIndicator:]
  -[GKLoadableContentViewController setLoadingState:]
  -[GKLoadableContentViewController loadingState]
  -[GKLoadableContentViewController didEnterLoadingState]
  -[GKLoadableContentViewController didExitLoadingState]
  -[GKLoadableContentViewController setLoadingIndicatorDelay:]
  -[GKLoadableContentViewController loadingMachine]
  -[GKLoadableContentViewController viewsToHideWhileLoading]
  -[GKLoadableContentViewController setViewsToHideWhileLoading:]
  -[GKLoadableContentViewController didEnterLoadedState]
  -[GKLoadableContentViewController didExitLoadedState]
  -[GKLoadableContentViewController loadingIndicatorDelay]
  -[GKLoadableContentViewController setLoadingMachine:]


GKDetailViewController : GKDashboardCollectionViewController
 @property  GKHorizontalBubbleControlsView *bubbleView
 @property  BOOL wantsBubbles

  // instance methods
  -[GKDetailViewController viewWillAppear:]
  -[GKDetailViewController viewWillDisappear:]
  -[GKDetailViewController viewDidLoad]
  -[GKDetailViewController viewDidAppear:]
  -[GKDetailViewController viewDidDisappear:]
  -[GKDetailViewController canShare]
  -[GKDetailViewController bubbleView]
  -[GKDetailViewController reportProblemAboutPlayer:]
  -[GKDetailViewController setBubbleView:]
  -[GKDetailViewController hideBubbles]
  -[GKDetailViewController floatInBubbles]
  -[GKDetailViewController pushBubble:]
  -[GKDetailViewController wantsBubbles]
  -[GKDetailViewController addBubbleWithType:useLargeSize:title:target:action:]
  -[GKDetailViewController shareAchievement:sendingView:]
  -[GKDetailViewController shareScore:fromLeaderboard:sendingView:]


GKBubbleFlowContainerView : UIView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  NSArray *bubbleSets
 @property  long long supportedBubbles
 @property  GKBubbleSet *primaryBubbleControls
 @property  BOOL usingCustomLayout

  // instance methods
  -[GKBubbleFlowContainerView dealloc]
  -[GKBubbleFlowContainerView setHidden:]
  -[GKBubbleFlowContainerView intrinsicContentSize]
  -[GKBubbleFlowContainerView initWithFrame:]
  -[GKBubbleFlowContainerView layoutSubviews]
  -[GKBubbleFlowContainerView setUsingCustomLayout:]
  -[GKBubbleFlowContainerView addBubbleSet:]
  -[GKBubbleFlowContainerView restingRectForBubbleType:]
  -[GKBubbleFlowContainerView enumerateBubbles:]
  -[GKBubbleFlowContainerView setRestingRect:forBubbleType:]
  -[GKBubbleFlowContainerView primaryBubbleControls]
  -[GKBubbleFlowContainerView worldPositionForBubble:]
  -[GKBubbleFlowContainerView supportedBubbles]
  -[GKBubbleFlowContainerView bubbleSets]
  -[GKBubbleFlowContainerView usingCustomLayout]
  -[GKBubbleFlowContainerView setBubbleSets:]


GKBubbleFlowOverlayView : GKBubbleFlowContainerView
 @property  GKBubbleSet *secondaryBubbleControls

  // class methods
  +[GKBubbleFlowOverlayView sharedBubbleOverlayView]
  +[GKBubbleFlowOverlayView sharedBubbleOverlayViewForWindow:]

  // instance methods
  -[GKBubbleFlowOverlayView dealloc]
  -[GKBubbleFlowOverlayView initWithFrame:]
  -[GKBubbleFlowOverlayView didMoveToWindow]
  -[GKBubbleFlowOverlayView hitTest:forEvent:]
  -[GKBubbleFlowOverlayView hitTest:withEvent:]
  -[GKBubbleFlowOverlayView defaultRectForBubbleOfType:]
  -[GKBubbleFlowOverlayView secondaryBubbleControls]
  -[GKBubbleFlowOverlayView willBeginTransition]


GKDashboardAchievementDetailViewController : GKDetailViewController
 @property  GKAchievementIconView *iconView
 @property  UILabel *titleLabel
 @property  UILabel *descriptionLabel
 @property  UILabel *progressLabel
 @property  UILabel *disabledLabel
 @property  UIButton *firstButton
 @property  UIButton *secondButton
 @property  GKAchievement *achievement
 @property  GKAchievement *localAchievement

  // instance methods
  -[GKDashboardAchievementDetailViewController dealloc]
  -[GKDashboardAchievementDetailViewController titleLabel]
  -[GKDashboardAchievementDetailViewController preferredFocusEnvironments]
  -[GKDashboardAchievementDetailViewController viewDidLoad]
  -[GKDashboardAchievementDetailViewController setTitleLabel:]
  -[GKDashboardAchievementDetailViewController setDescriptionLabel:]
  -[GKDashboardAchievementDetailViewController descriptionLabel]
  -[GKDashboardAchievementDetailViewController setProgressLabel:]
  -[GKDashboardAchievementDetailViewController progressLabel]
  -[GKDashboardAchievementDetailViewController iconView]
  -[GKDashboardAchievementDetailViewController setIconView:]
  -[GKDashboardAchievementDetailViewController achievement]
  -[GKDashboardAchievementDetailViewController setAchievement:]
  -[GKDashboardAchievementDetailViewController setLocalAchievement:]
  -[GKDashboardAchievementDetailViewController configureForAchievements]
  -[GKDashboardAchievementDetailViewController share:]
  -[GKDashboardAchievementDetailViewController challenge:]
  -[GKDashboardAchievementDetailViewController initWithAchievement:localAchievement:]
  -[GKDashboardAchievementDetailViewController disabledLabel]
  -[GKDashboardAchievementDetailViewController setDisabledLabel:]
  -[GKDashboardAchievementDetailViewController firstButton]
  -[GKDashboardAchievementDetailViewController setFirstButton:]
  -[GKDashboardAchievementDetailViewController secondButton]
  -[GKDashboardAchievementDetailViewController setSecondButton:]
  -[GKDashboardAchievementDetailViewController localAchievement]


GKMultiplayerBubbleView : UIView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  UIButton *shareButton
 @property  UIButton *playButton

  // instance methods
  -[GKMultiplayerBubbleView awakeFromNib]
  -[GKMultiplayerBubbleView playButton]
  -[GKMultiplayerBubbleView setPlayButton:]
  -[GKMultiplayerBubbleView shareButton]
  -[GKMultiplayerBubbleView setShareButton:]
  -[GKMultiplayerBubbleView floatInBubbles]
  -[GKMultiplayerBubbleView setBubblesHidden:]
  -[GKMultiplayerBubbleView removeAllAnimationsFromBubbles]
  -[GKMultiplayerBubbleView scatterOutBubblesWithCompletion:]


GKMultiplayerFooterView : UICollectionReusableView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  GKMultiplayerActivityView *activityView
 @property  GKMultiplayerBubbleView *bubbleView

  // class methods
  +[GKMultiplayerFooterView footerView]

  // instance methods
  -[GKMultiplayerFooterView dealloc]
  -[GKMultiplayerFooterView initWithFrame:]
  -[GKMultiplayerFooterView activityView]
  -[GKMultiplayerFooterView setActivityView:]
  -[GKMultiplayerFooterView bubbleView]
  -[GKMultiplayerFooterView setBubbleView:]
  -[GKMultiplayerFooterView floatInBubbles]
  -[GKMultiplayerFooterView setBubblesHidden:]
  -[GKMultiplayerFooterView removeAllAnimationsFromBubbles]
  -[GKMultiplayerFooterView scatterOutBubblesWithCompletion:]
  -[GKMultiplayerFooterView setStatusFooterHidden:animated:]
  -[GKMultiplayerFooterView setBubbleFooterHidden:animated:]
  -[GKMultiplayerFooterView showFooterStatus:]
  -[GKMultiplayerFooterView configureForMatchRequest:]


GKBubbleView : UIView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  UIImageView *highlightView
 @property  long long numVertices
 @property  long long numFaces
 @property  double animationAngle
 @property  double animationRadiansPerSecond
 @property  BOOL touchAnimationRunning
 @property  BOOL touchAnimationCanEnd
 @property  double touchAnimationElapsed
 @property  double touchAnimationAngle
 @property  double moveAnimationAngle
 @property  double moveAnimationRadiansPerSecond
 @property  double moveAnimationScale
 @property  BOOL animating
 @property  long long bubbleType
 @property  UIImageView *imageView
 @property  double moveAnimationRangeMultiplier

  // instance methods
  -[GKBubbleView dealloc]
  -[GKBubbleView intrinsicContentSize]
  -[GKBubbleView initWithFrame:]
  -[GKBubbleView imageView]
  -[GKBubbleView highlightView]
  -[GKBubbleView setAnimating:]
  -[GKBubbleView setImageView:]
  -[GKBubbleView animating]
  -[GKBubbleView update:]
  -[GKBubbleView setHighlightView:]
  -[GKBubbleView numVertices]
  -[GKBubbleView numFaces]
  -[GKBubbleView setNumFaces:]
  -[GKBubbleView setMoveAnimationRangeMultiplier:]
  -[GKBubbleView bubbleType]
  -[GKBubbleView setBubbleType:]
  -[GKBubbleView moveAnimationRangeMultiplier]
  -[GKBubbleView touchBegan]
  -[GKBubbleView touchEnded]
  -[GKBubbleView randomFloatBetweenMin:andMax:]
  -[GKBubbleView choosePointAnimations]
  -[GKBubbleView randomBOOL]
  -[GKBubbleView chooseMoveAnimation]
  -[GKBubbleView setupVerticesAndFacesAnimated:]
  -[GKBubbleView applyAnimationToVertices:]
  -[GKBubbleView offsetForVertexAtIndex:]
  -[GKBubbleView animationScaleForCurrentZ]
  -[GKBubbleView setAnimationStateBasedOnBubble:]
  -[GKBubbleView setNumVertices:]
  -[GKBubbleView animationAngle]
  -[GKBubbleView setAnimationAngle:]
  -[GKBubbleView animationRadiansPerSecond]
  -[GKBubbleView setAnimationRadiansPerSecond:]
  -[GKBubbleView touchAnimationRunning]
  -[GKBubbleView setTouchAnimationRunning:]
  -[GKBubbleView touchAnimationCanEnd]
  -[GKBubbleView setTouchAnimationCanEnd:]
  -[GKBubbleView touchAnimationElapsed]
  -[GKBubbleView setTouchAnimationElapsed:]
  -[GKBubbleView touchAnimationAngle]
  -[GKBubbleView setTouchAnimationAngle:]
  -[GKBubbleView moveAnimationAngle]
  -[GKBubbleView setMoveAnimationAngle:]
  -[GKBubbleView moveAnimationRadiansPerSecond]
  -[GKBubbleView setMoveAnimationRadiansPerSecond:]
  -[GKBubbleView moveAnimationScale]
  -[GKBubbleView setMoveAnimationScale:]


GKTextSuggestion : UITextSuggestion /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
  // instance methods
  -[GKTextSuggestion _shouldPersist]


GKNicknameController : NSObject <UITextFieldDelegate>
 @property  BOOL nicknameWasEdited
 @property  BOOL nicknameChangeWasCommitted
 @property  GKReachability *reachability
 @property  NSArray *suggestedNicknames
 @property  UITextField *nickname
 @property  BOOL shouldShakeTextFieldOnError
 @property  UIActivityIndicatorView *activityIndicator
 @property  <GKNicknameControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKNicknameController init]
  -[GKNicknameController delegate]
  -[GKNicknameController setDelegate:]
  -[GKNicknameController .cxx_destruct]
  -[GKNicknameController nickname]
  -[GKNicknameController setNickname:]
  -[GKNicknameController reset]
  -[GKNicknameController textFieldShouldReturn:]
  -[GKNicknameController textFieldDidBeginEditing:]
  -[GKNicknameController textField:shouldChangeCharactersInRange:replacementString:]
  -[GKNicknameController activityIndicator]
  -[GKNicknameController setActivityIndicator:]
  -[GKNicknameController textFieldDidBecomeFirstResponder:]
  -[GKNicknameController textFieldDidResignFirstResponder:]
  -[GKNicknameController reachability]
  -[GKNicknameController setReachability:]
  -[GKNicknameController keyboardWillShow:]
  -[GKNicknameController keyboardWillHide:]
  -[GKNicknameController displayNicknameSuggestions]
  -[GKNicknameController nicknameTextChanged:]
  -[GKNicknameController setNicknameWasEdited:]
  -[GKNicknameController setSuggestedNicknames:]
  -[GKNicknameController shouldShakeTextFieldOnError]
  -[GKNicknameController shakeNicknameTextFieldWithCompletionBlock:]
  -[GKNicknameController setNicknameChangeWasCommitted:]
  -[GKNicknameController suggestedNicknames]
  -[GKNicknameController updateReturnKeyEnabledState]
  -[GKNicknameController nicknameWasEdited]
  -[GKNicknameController stopObservingKeyboardEvents]
  -[GKNicknameController startObservingKeyboardEvents]
  -[GKNicknameController didSelectSuggestion:]
  -[GKNicknameController nicknameChangeWasCommitted]
  -[GKNicknameController setShouldShakeTextFieldOnError:]


GKRawTurnsDataSource : GKBasicCollectionViewDataSource
  // instance methods
  -[GKRawTurnsDataSource refreshContentsForDataType:userInfo:updateNotifier:]


GKRectShadowCell : UICollectionViewCell /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
  // instance methods
  -[GKRectShadowCell canBecomeFocused]
  -[GKRectShadowCell setHighlighted:]
  -[GKRectShadowCell setSelected:]
  -[GKRectShadowCell awakeFromNib]


GKAchievementDataSource : GKCollectionDataSource
 @property  GKGameRecord *gameRecord
 @property  NSArray *achievements
 @property  NSArray *localAchievements
 @property  {UIEdgeInsets=dddd} collectionLayoutInsets

  // instance methods
  -[GKAchievementDataSource dealloc]
  -[GKAchievementDataSource collectionView:cellForItemAtIndexPath:]
  -[GKAchievementDataSource itemCount]
  -[GKAchievementDataSource collectionView:shouldSelectItemAtIndexPath:]
  -[GKAchievementDataSource collectionView:didSelectItemAtIndexPath:]
  -[GKAchievementDataSource collectionView:layout:sizeForItemAtIndexPath:]
  -[GKAchievementDataSource collectionView:layout:minimumInteritemSpacingForSectionAtIndex:]
  -[GKAchievementDataSource collectionView:layout:minimumLineSpacingForSectionAtIndex:]
  -[GKAchievementDataSource preferredCollectionHeight]
  -[GKAchievementDataSource setupCollectionView:]
  -[GKAchievementDataSource loadDataWithCompletionHandler:]
  -[GKAchievementDataSource itemForIndexPath:]
  -[GKAchievementDataSource sectionHeaderText]
  -[GKAchievementDataSource setGameRecord:]
  -[GKAchievementDataSource gameRecord]
  -[GKAchievementDataSource setCollectionLayoutInsets:]
  -[GKAchievementDataSource setAchievements:]
  -[GKAchievementDataSource setLocalAchievements:]
  -[GKAchievementDataSource heightMultipliersForSizeCategories]
  -[GKAchievementDataSource initWithGameRecord:]
  -[GKAchievementDataSource achievements]
  -[GKAchievementDataSource localAchievements]
  -[GKAchievementDataSource collectionLayoutInsets]


GKBasePlayerCell : GKCollectionViewCell
 @property  GKPlayer *player
 @property  UILabel *nameLabel
 @property  GKDashboardPlayerPhotoView *iconView
 @property  NSDictionary *metricsOverrides

  // class methods
  +[GKBasePlayerCell initialize]
  +[GKBasePlayerCell requiresConstraintBasedLayout]
  +[GKBasePlayerCell itemHeightList]
  +[GKBasePlayerCell phoneMetrics]
  +[GKBasePlayerCell itemHeightListForIdiom:]
  +[GKBasePlayerCell padMetrics]
  +[GKBasePlayerCell defaultRowHeight]

  // instance methods
  -[GKBasePlayerCell dealloc]
  -[GKBasePlayerCell prepareForReuse]
  -[GKBasePlayerCell initWithFrame:]
  -[GKBasePlayerCell popoverSourceView]
  -[GKBasePlayerCell setNameLabel:]
  -[GKBasePlayerCell nameLabel]
  -[GKBasePlayerCell player]
  -[GKBasePlayerCell setPlayer:]
  -[GKBasePlayerCell iconView]
  -[GKBasePlayerCell setIconView:]
  -[GKBasePlayerCell didUpdateModel]
  -[GKBasePlayerCell alignmentRectForText]
  -[GKBasePlayerCell setRepresentedItem:]
  -[GKBasePlayerCell setMetricsOverrides:]
  -[GKBasePlayerCell canRemoveItem]
  -[GKBasePlayerCell metricsOverrides]


GKImageContext : NSObject
 @property  {CGSize=dd} size
 @property  double scale
 @property  ^{CGContext=} CGContext
 @property  UIImage *image

  // class methods
  +[GKImageContext contextDrawnWithSize:scale:options:usingBlock:]
  +[GKImageContext imageDrawnWithSize:scale:options:usingBlock:]
  +[GKImageContext imageFromRawPixelsAtURL:]

  // instance methods
  -[GKImageContext dealloc]
  -[GKImageContext size]
  -[GKImageContext scale]
  -[GKImageContext image]
  -[GKImageContext setSize:]
  -[GKImageContext CGContext]
  -[GKImageContext initWithSize:scale:options:]
  -[GKImageContext initWithSize:scale:options:data:]
  -[GKImageContext writeRawPixelsToURL:error:]


_GKBubbleFlowTransitionInfo : NSObject <NSCopying>
 @property  UIViewController<GKBubbleFlowableViewController> *toVC
 @property  UIViewController<GKBubbleFlowableViewController> *fromVC
 @property  UIViewController *toWrapperVC
 @property  UIViewController *fromWrapperVC
 @property  UIViewController *containingViewController
 @property  {?=b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1} toFlags
 @property  {?=b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1} fromFlags
 @property  GKBubbleSet *fromBubbles
 @property  GKBubbleSet *toBubbles
 @property  long long toFocusBubbleType
 @property  long long fromFocusBubbleType
 @property  long long transitionType
 @property  long long transitionPhase
 @property  double startTime
 @property  double duration
 @property  double fadeOutDuration
 @property  double crossfadeDuration
 @property  double fadeInDuration
 @property  double relativeStartTime
 @property  double relativeDuration
 @property  double relativeFadeOutDuration
 @property  double relativeCrossfadeDuration
 @property  double relativeFadeInDuration
 @property  GKBubblePathAnimator *toPathAnimator
 @property  GKBubblePathAnimator *fromPathAnimator
 @property  GKBubblePathAnimator *onlyPathAnimator
 @property  _GKBubbleFlowPathTransitionInfo *toPathTransitionInfo
 @property  _GKBubbleFlowPathTransitionInfo *fromPathTransitionInfo
 @property  _GKBubbleFlowPathTransitionInfo *onlyPathTransitionInfo
 @property  BOOL fadedOutRealFromView
 @property  BOOL disableInteractionDuringTransition
 @property  BOOL animated
 @property  UIViewController *realToVC
 @property  UIViewController *realFromVC
 @property  BOOL hasNonFallbackPathAnimator

  // instance methods
  -[_GKBubbleFlowTransitionInfo init]
  -[_GKBubbleFlowTransitionInfo dealloc]
  -[_GKBubbleFlowTransitionInfo copyWithZone:]
  -[_GKBubbleFlowTransitionInfo duration]
  -[_GKBubbleFlowTransitionInfo setDuration:]
  -[_GKBubbleFlowTransitionInfo startTime]
  -[_GKBubbleFlowTransitionInfo setStartTime:]
  -[_GKBubbleFlowTransitionInfo animated]
  -[_GKBubbleFlowTransitionInfo setFadeInDuration:]
  -[_GKBubbleFlowTransitionInfo setFadeOutDuration:]
  -[_GKBubbleFlowTransitionInfo fadeInDuration]
  -[_GKBubbleFlowTransitionInfo fadeOutDuration]
  -[_GKBubbleFlowTransitionInfo transitionType]
  -[_GKBubbleFlowTransitionInfo setTransitionType:]
  -[_GKBubbleFlowTransitionInfo setTransitionPhase:]
  -[_GKBubbleFlowTransitionInfo transitionPhase]
  -[_GKBubbleFlowTransitionInfo setToVC:]
  -[_GKBubbleFlowTransitionInfo setFromVC:]
  -[_GKBubbleFlowTransitionInfo setToWrapperVC:]
  -[_GKBubbleFlowTransitionInfo setFromWrapperVC:]
  -[_GKBubbleFlowTransitionInfo setContainingViewController:]
  -[_GKBubbleFlowTransitionInfo setToBubbles:]
  -[_GKBubbleFlowTransitionInfo setFromBubbles:]
  -[_GKBubbleFlowTransitionInfo setToPathAnimator:]
  -[_GKBubbleFlowTransitionInfo setFromPathAnimator:]
  -[_GKBubbleFlowTransitionInfo setOnlyPathAnimator:]
  -[_GKBubbleFlowTransitionInfo setToPathTransitionInfo:]
  -[_GKBubbleFlowTransitionInfo setFromPathTransitionInfo:]
  -[_GKBubbleFlowTransitionInfo setOnlyPathTransitionInfo:]
  -[_GKBubbleFlowTransitionInfo toVC]
  -[_GKBubbleFlowTransitionInfo toWrapperVC]
  -[_GKBubbleFlowTransitionInfo fromVC]
  -[_GKBubbleFlowTransitionInfo fromWrapperVC]
  -[_GKBubbleFlowTransitionInfo containingViewController]
  -[_GKBubbleFlowTransitionInfo crossfadeDuration]
  -[_GKBubbleFlowTransitionInfo relativeFadeOutDuration]
  -[_GKBubbleFlowTransitionInfo relativeCrossfadeDuration]
  -[_GKBubbleFlowTransitionInfo relativeFadeInDuration]
  -[_GKBubbleFlowTransitionInfo toPathAnimator]
  -[_GKBubbleFlowTransitionInfo fromPathAnimator]
  -[_GKBubbleFlowTransitionInfo onlyPathAnimator]
  -[_GKBubbleFlowTransitionInfo recalculateDurationsAfterAdjustment]
  -[_GKBubbleFlowTransitionInfo realFromVC]
  -[_GKBubbleFlowTransitionInfo realToVC]
  -[_GKBubbleFlowTransitionInfo hasNonFallbackPathAnimator]
  -[_GKBubbleFlowTransitionInfo adjustDuration:]
  -[_GKBubbleFlowTransitionInfo copyForPhase:]
  -[_GKBubbleFlowTransitionInfo toFlags]
  -[_GKBubbleFlowTransitionInfo setToFlags:]
  -[_GKBubbleFlowTransitionInfo fromFlags]
  -[_GKBubbleFlowTransitionInfo setFromFlags:]
  -[_GKBubbleFlowTransitionInfo fromBubbles]
  -[_GKBubbleFlowTransitionInfo toBubbles]
  -[_GKBubbleFlowTransitionInfo toFocusBubbleType]
  -[_GKBubbleFlowTransitionInfo setToFocusBubbleType:]
  -[_GKBubbleFlowTransitionInfo fromFocusBubbleType]
  -[_GKBubbleFlowTransitionInfo setFromFocusBubbleType:]
  -[_GKBubbleFlowTransitionInfo setCrossfadeDuration:]
  -[_GKBubbleFlowTransitionInfo relativeStartTime]
  -[_GKBubbleFlowTransitionInfo setRelativeStartTime:]
  -[_GKBubbleFlowTransitionInfo relativeDuration]
  -[_GKBubbleFlowTransitionInfo setRelativeDuration:]
  -[_GKBubbleFlowTransitionInfo setRelativeFadeOutDuration:]
  -[_GKBubbleFlowTransitionInfo setRelativeCrossfadeDuration:]
  -[_GKBubbleFlowTransitionInfo setRelativeFadeInDuration:]
  -[_GKBubbleFlowTransitionInfo toPathTransitionInfo]
  -[_GKBubbleFlowTransitionInfo fromPathTransitionInfo]
  -[_GKBubbleFlowTransitionInfo onlyPathTransitionInfo]
  -[_GKBubbleFlowTransitionInfo fadedOutRealFromView]
  -[_GKBubbleFlowTransitionInfo setFadedOutRealFromView:]
  -[_GKBubbleFlowTransitionInfo disableInteractionDuringTransition]
  -[_GKBubbleFlowTransitionInfo setDisableInteractionDuringTransition:]


_GKBubbleFlowPathTransitionInfo : NSObject
 @property  double startTime
 @property  double duration
 @property  UIView *effectiveView
 @property  GKBubbleSet *bubbles
 @property  long long newlyVisibleBubbles
 @property  long long focusBubbleType
 @property  BOOL couldUseFallbackAnimator
 @property  NSDictionary *auxiliaryInfo

  // instance methods
  -[_GKBubbleFlowPathTransitionInfo init]
  -[_GKBubbleFlowPathTransitionInfo dealloc]
  -[_GKBubbleFlowPathTransitionInfo duration]
  -[_GKBubbleFlowPathTransitionInfo setDuration:]
  -[_GKBubbleFlowPathTransitionInfo startTime]
  -[_GKBubbleFlowPathTransitionInfo setStartTime:]
  -[_GKBubbleFlowPathTransitionInfo bubbles]
  -[_GKBubbleFlowPathTransitionInfo auxiliaryInfo]
  -[_GKBubbleFlowPathTransitionInfo newlyVisibleBubbles]
  -[_GKBubbleFlowPathTransitionInfo focusBubbleType]
  -[_GKBubbleFlowPathTransitionInfo setFocusBubbleType:]
  -[_GKBubbleFlowPathTransitionInfo setBubbles:]
  -[_GKBubbleFlowPathTransitionInfo setEffectiveView:]
  -[_GKBubbleFlowPathTransitionInfo effectiveView]
  -[_GKBubbleFlowPathTransitionInfo setNewlyVisibleBubbles:]
  -[_GKBubbleFlowPathTransitionInfo couldUseFallbackAnimator]
  -[_GKBubbleFlowPathTransitionInfo setCouldUseFallbackAnimator:]
  -[_GKBubbleFlowPathTransitionInfo setAuxiliaryInfo:]


GKRemoteViewServiceController : _UIRemoteViewController /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics <GKExtensionHostProtocol>
 @property  NSMutableDictionary *dirtyProperties
 @property  GKHostedViewController *managingViewController
 @property  UIColor *previousStatusBarColor
 @property  @? blockToPerformAfterViewDidAppear
 @property  BOOL didSetRemoteGame
 @property  BOOL viewDidAppear
 @property  BOOL serviceNeedsCurrentGame
 @property  BOOL serviceNeedsLocalPlayer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  GKGame *game

  // class methods
  +[GKRemoteViewServiceController exportedInterface]
  +[GKRemoteViewServiceController serviceViewControllerInterface]
  +[GKRemoteViewServiceController shouldPropagateAppearanceCustomizations]

  // instance methods
  -[GKRemoteViewServiceController dealloc]
  -[GKRemoteViewServiceController .cxx_destruct]
  -[GKRemoteViewServiceController setValue:forKeyPath:]
  -[GKRemoteViewServiceController observeValueForKeyPath:ofObject:change:context:]
  -[GKRemoteViewServiceController dirtyProperties]
  -[GKRemoteViewServiceController setDirtyProperties:]
  -[GKRemoteViewServiceController viewWillAppear:]
  -[GKRemoteViewServiceController viewWillDisappear:]
  -[GKRemoteViewServiceController supportedInterfaceOrientations]
  -[GKRemoteViewServiceController viewDidAppear:]
  -[GKRemoteViewServiceController viewDidDisappear:]
  -[GKRemoteViewServiceController shouldAutorotateToInterfaceOrientation:]
  -[GKRemoteViewServiceController viewServiceDidTerminateWithError:]
  -[GKRemoteViewServiceController viewDidAppear]
  -[GKRemoteViewServiceController game]
  -[GKRemoteViewServiceController setGame:]
  -[GKRemoteViewServiceController setViewDidAppear:]
  -[GKRemoteViewServiceController observedKeyPaths]
  -[GKRemoteViewServiceController managingViewController]
  -[GKRemoteViewServiceController serviceNeedsCurrentGame]
  -[GKRemoteViewServiceController serviceNeedsLocalPlayer]
  -[GKRemoteViewServiceController serviceNeedsFriendCode]
  -[GKRemoteViewServiceController nudge]
  -[GKRemoteViewServiceController populateInitialStateForRemoteView:]
  -[GKRemoteViewServiceController setDidSetRemoteGame:]
  -[GKRemoteViewServiceController setupRemoteView]
  -[GKRemoteViewServiceController _desiredStatusBarStyle]
  -[GKRemoteViewServiceController _performBlockAfterViewDidAppearIfNeeded]
  -[GKRemoteViewServiceController blockToPerformAfterViewDidAppear]
  -[GKRemoteViewServiceController setBlockToPerformAfterViewDidAppear:]
  -[GKRemoteViewServiceController _dismissSelfAfterGettingShouldFinish]
  -[GKRemoteViewServiceController remoteViewControllerIsFinishing]
  -[GKRemoteViewServiceController _performSelectorAfterAppearingOrTimeOut:]
  -[GKRemoteViewServiceController remoteViewControllerIsCanceling]
  -[GKRemoteViewServiceController _dismissSelfAfterGettingShouldCancel]
  -[GKRemoteViewServiceController messageFromExtension:]
  -[GKRemoteViewServiceController readyToPresentInController:]
  -[GKRemoteViewServiceController didSetRemoteGame]
  -[GKRemoteViewServiceController setManagingViewController:]
  -[GKRemoteViewServiceController previousStatusBarColor]
  -[GKRemoteViewServiceController setPreviousStatusBarColor:]


SortHueEntry : NSObject
 @property  long long hue
 @property  long long count

  // instance methods
  -[SortHueEntry count]
  -[SortHueEntry setCount:]
  -[SortHueEntry hue]
  -[SortHueEntry setHue:]
  -[SortHueEntry initWithHue:count:]


GKImageColorPalette : GKColorPalette
 @property  NSArray *bubbleColors

  // instance methods
  -[GKImageColorPalette .cxx_destruct]
  -[GKImageColorPalette reset]
  -[GKImageColorPalette initWithImage:]
  -[GKImageColorPalette analyzeImage:]
  -[GKImageColorPalette clearMainHistograms]
  -[GKImageColorPalette clearSaturationAndBrightnessHistograms]
  -[GKImageColorPalette iterateOverPixelsWithBlock:forHue:]
  -[GKImageColorPalette weightHistogram:size:spread:]
  -[GKImageColorPalette setBubbleColors:]
  -[GKImageColorPalette generateHSVMapWithContext:]
  -[GKImageColorPalette findBrightColors]
  -[GKImageColorPalette printHistogram:ofSize:]
  -[GKImageColorPalette bubbleColors]


GKUIContentUnavailableView : _UIContentUnavailableView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
  // instance methods
  -[GKUIContentUnavailableView _titleFont]


GKNoContentView : UIView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  GKUIContentUnavailableView *contentUnavailableView
 @property  UIActivityIndicatorView *loadingIndicatorView
 @property  UIStackView *stackView
 @property  NSString *title
 @property  NSString *message
 @property  NSString *buttonTitle
 @property  @? buttonAction
 @property  BOOL loading

  // instance methods
  -[GKNoContentView .cxx_destruct]
  -[GKNoContentView title]
  -[GKNoContentView setTitle:]
  -[GKNoContentView message]
  -[GKNoContentView setMessage:]
  -[GKNoContentView initWithFrame:]
  -[GKNoContentView buttonTitle]
  -[GKNoContentView stackView]
  -[GKNoContentView setButtonAction:]
  -[GKNoContentView setStackView:]
  -[GKNoContentView buttonAction]
  -[GKNoContentView setButtonTitle:]
  -[GKNoContentView isLoading]
  -[GKNoContentView setLoading:]
  -[GKNoContentView contentUnavailableView]
  -[GKNoContentView setContentUnavailableView:]
  -[GKNoContentView loadingIndicatorView]
  -[GKNoContentView setLoadingIndicatorView:]


GKScoreSharingInfo : NSObject <NSCoding, NSSecureCoding>
 @property  GKLeaderboard *leaderboardCategory
 @property  GKPlayer *player
 @property  GKGame *game
 @property  UIImage *badgeImage
 @property  UIImage *iconImage
 @property  BOOL complete
 @property  GKScore *score

  // class methods
  +[GKScoreSharingInfo supportsSecureCoding]

  // instance methods
  -[GKScoreSharingInfo dealloc]
  -[GKScoreSharingInfo encodeWithCoder:]
  -[GKScoreSharingInfo initWithCoder:]
  -[GKScoreSharingInfo score]
  -[GKScoreSharingInfo setScore:]
  -[GKScoreSharingInfo complete]
  -[GKScoreSharingInfo setComplete:]
  -[GKScoreSharingInfo iconImage]
  -[GKScoreSharingInfo player]
  -[GKScoreSharingInfo setPlayer:]
  -[GKScoreSharingInfo setBadgeImage:]
  -[GKScoreSharingInfo badgeImage]
  -[GKScoreSharingInfo setIconImage:]
  -[GKScoreSharingInfo game]
  -[GKScoreSharingInfo setGame:]
  -[GKScoreSharingInfo operationThatBlocksUntilLoaded]
  -[GKScoreSharingInfo thumbnailForActivityType:]
  -[GKScoreSharingInfo itemsForActivityType:]
  -[GKScoreSharingInfo subjectForEmailActivity]
  -[GKScoreSharingInfo setLeaderboardCategory:]
  -[GKScoreSharingInfo leaderboardCategory]
  -[GKScoreSharingInfo initWithCategoryID:forGame:player:]


GKHairlineView : UIView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  long long alignment

  // class methods
  +[GKHairlineView hairlineViewForAlignment:]

  // instance methods
  -[GKHairlineView init]
  -[GKHairlineView alignment]
  -[GKHairlineView setAlignment:]
  -[GKHairlineView intrinsicContentSize]
  -[GKHairlineView sizeToFit]


GKDebugHighlightView : UIView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  UIColor *color
 @property  NSString *caption
 @property  BOOL isOval

  // instance methods
  -[GKDebugHighlightView init]
  -[GKDebugHighlightView .cxx_destruct]
  -[GKDebugHighlightView color]
  -[GKDebugHighlightView setColor:]
  -[GKDebugHighlightView drawRect:]
  -[GKDebugHighlightView caption]
  -[GKDebugHighlightView setCaption:]
  -[GKDebugHighlightView isOval]
  -[GKDebugHighlightView setIsOval:]


GKBackgroundTileImageView : UIImageView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics

GKBubbleShape : NSObject
 @property  ^{GKVertexCurve={CGPoint=dd}{CGPoint=dd}{CGPoint=dd}{CGPoint=dd}{CGPoint=dd}} vertexCurves
 @property  unsigned long vertexCount
 @property  double vertexVariance
 @property  double controlpointVariance
 @property  double endpointVariance

  // class methods
  +[GKBubbleShape standardBubbleShape]
  +[GKBubbleShape standardBezierPathForSize:]

  // instance methods
  -[GKBubbleShape dealloc]
  -[GKBubbleShape vertexCount]
  -[GKBubbleShape setVertexCount:]
  -[GKBubbleShape pathForSize:]
  -[GKBubbleShape initWithVertexCount:vertexVariance:endpointVariance:controlpointVariance:]
  -[GKBubbleShape generateVertexCurves]
  -[GKBubbleShape vertexCurves]
  -[GKBubbleShape setVertexCurves:]
  -[GKBubbleShape vertexVariance]
  -[GKBubbleShape setVertexVariance:]
  -[GKBubbleShape controlpointVariance]
  -[GKBubbleShape setControlpointVariance:]
  -[GKBubbleShape endpointVariance]
  -[GKBubbleShape setEndpointVariance:]


GKRemoteUIFooterView : UIView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics <RemoteUITableFooter>
 @property  GKLabel *textLabel
 @property  double leftMargin
 @property  double rightMargin
 @property  double bottomMargin
 @property  double paragraphMargin
 @property  BOOL shouldApplyGameCenterTheme
 @property  int layoutStyle
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKRemoteUIFooterView .cxx_destruct]
  -[GKRemoteUIFooterView setLeftMargin:]
  -[GKRemoteUIFooterView setRightMargin:]
  -[GKRemoteUIFooterView setBottomMargin:]
  -[GKRemoteUIFooterView textLabel]
  -[GKRemoteUIFooterView setLayoutStyle:]
  -[GKRemoteUIFooterView layoutStyle]
  -[GKRemoteUIFooterView initWithAttributes:]
  -[GKRemoteUIFooterView setTextLabel:]
  -[GKRemoteUIFooterView rightMargin]
  -[GKRemoteUIFooterView footerHeightForWidth:inTableView:]
  -[GKRemoteUIFooterView bottomMargin]
  -[GKRemoteUIFooterView leftMargin]
  -[GKRemoteUIFooterView attributedStringForString:withStyle:]
  -[GKRemoteUIFooterView paragraphMargin]
  -[GKRemoteUIFooterView setParagraphMargin:]
  -[GKRemoteUIFooterView shouldApplyGameCenterTheme]
  -[GKRemoteUIFooterView setShouldApplyGameCenterTheme:]


GKImageKey : NSObject
 @property  NSString *imageID
 @property  NSString *basename
 @property  NSString *filePath
 @property  NSString *cacheKey
 @property  {CGSize=dd} size

  // class methods
  +[GKImageKey fileNameWithIdentifierInImageSource:]
  +[GKImageKey keyForImageIdentifier:withImageSource:]

  // instance methods
  -[GKImageKey .cxx_destruct]
  -[GKImageKey size]
  -[GKImageKey cacheKey]
  -[GKImageKey setSize:]
  -[GKImageKey filePath]
  -[GKImageKey imageID]
  -[GKImageKey setImageID:]
  -[GKImageKey basename]
  -[GKImageKey setBasename:]


GKThreadsafeImageCache : GKThreadsafeCache /usr/lib/liblockdown.dylib <GKScreenConfigurationListener>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKThreadsafeImageCache applicationDidEnterBackground:]
  -[GKThreadsafeImageCache initWithName:maxCount:]
  -[GKThreadsafeImageCache greatestScreenScaleDidChange:]


GKAvatarImage : NSObject
 @property  NSData *imageData
 @property  UIImage *image

  // instance methods
  -[GKAvatarImage .cxx_destruct]
  -[GKAvatarImage image]
  -[GKAvatarImage setImage:]
  -[GKAvatarImage imageData]
  -[GKAvatarImage setImageData:]
  -[GKAvatarImage initWithData:useUIImage:]
  -[GKAvatarImage prepareForUsingUIImage:]


GKImageSource : NSObject
 @property  UIImage *renderedDefaultImage
 @property  NSString *name
 @property  GKImageBrush *imageBrush
 @property  UIImage *defaultImage
 @property  BOOL shouldRenderDefaultImageWithBrush
 @property  GKThreadsafeCache *cache

  // class methods
  +[GKImageSource clearCache]
  +[GKImageSource sharedCache]
  +[GKImageSource syncQueue]
  +[GKImageSource cacheDirectoryForImageID:]

  // instance methods
  -[GKImageSource dealloc]
  -[GKImageSource name]
  -[GKImageSource .cxx_destruct]
  -[GKImageSource setName:]
  -[GKImageSource setCache:]
  -[GKImageSource cache]
  -[GKImageSource defaultImage]
  -[GKImageSource setDefaultImage:]
  -[GKImageSource cachedImageForKey:]
  -[GKImageSource keyForImageIdentifier:]
  -[GKImageSource imageBrush]
  -[GKImageSource initWithName:imageBrush:]
  -[GKImageSource renderedImageWithImage:defaultSize:returnContext:]
  -[GKImageSource renderedImageWithImage:returnContext:]
  -[GKImageSource shouldRenderDefaultImageWithBrush]
  -[GKImageSource renderedImageWithImage:]
  -[GKImageSource setRenderedDefaultImage:]
  -[GKImageSource shouldUseTestImage]
  -[GKImageSource renderedTestImage]
  -[GKImageSource fastCachedImageForKey:]
  -[GKImageSource renderedDefaultImage]
  -[GKImageSource fastCachedImageForIdentifier:]
  -[GKImageSource validateFileSystemCache]
  -[GKImageSource processAndCacheImageDataInContext:withImage:forKey:]
  -[GKImageSource processAndCacheImage:forKey:]
  -[GKImageSource _storeImage:cacheKey:path:context:]
  -[GKImageSource subsourceWithBrush:]
  -[GKImageSource cacheCostForImage:]
  -[GKImageSource fastCachedOrDefaultImageForForKey:]
  -[GKImageSource fastCachedOrDefaultImageForIdentifier:]
  -[GKImageSource cachedImageForIdentifier:]
  -[GKImageSource processAndCacheImage:forIdentifier:]
  -[GKImageSource cacheImageFromContext:forIdentifier:]
  -[GKImageSource processAndCacheImageDataInContext:withImage:forIdentifier:]
  -[GKImageSource clearCachedImageForIdentifier:]
  -[GKImageSource setImageBrush:]
  -[GKImageSource setShouldRenderDefaultImageWithBrush:]


GKNetworkImageSource : GKImageSource
 @property  NSMutableDictionary *loadingGroups

  // instance methods
  -[GKNetworkImageSource .cxx_destruct]
  -[GKNetworkImageSource loadImageForURLString:loader:reference:queue:handler:]
  -[GKNetworkImageSource loadingGroups]
  -[GKNetworkImageSource setLoadingGroups:]
  -[GKNetworkImageSource imageNeedsRefresh:]
  -[GKNetworkImageSource loadImageForURLString:reference:queue:handler:]
  -[GKNetworkImageSource loadAndCacheAvatarFromGamedForURLString:useUIImage:cacheSubdirectory:reference:queue:handler:]


GKLocalImageSource : GKImageSource
 @property  NSMapTable *keysForSizes

  // instance methods
  -[GKLocalImageSource .cxx_destruct]
  -[GKLocalImageSource keyForImageSize:]
  -[GKLocalImageSource imageForImageSize:]
  -[GKLocalImageSource cachedImageFromGamedWithSubdirectory:handler:]
  -[GKLocalImageSource cacheImageUsingGamed:cacheSubdirectory:withHandler:]
  -[GKLocalImageSource deleteImageUsingGamedWithSubdirectory:withHandler:]
  -[GKLocalImageSource keysForSizes]
  -[GKLocalImageSource setKeysForSizes:]


GKSearchBar : UISearchBar /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  GKCollectionViewDataSource *dataSource
 @property  long long sectionIndex

  // instance methods
  -[GKSearchBar dealloc]
  -[GKSearchBar dataSource]
  -[GKSearchBar setDataSource:]
  -[GKSearchBar sectionIndex]
  -[GKSearchBar setSectionIndex:]


GKSearchBarView : UICollectionReusableView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics <UISearchBarDelegate>
 @property  NSArray *searchBarConstraints
 @property  double leadingMargin
 @property  double trailingMargin
 @property  GKSearchBar *searchBar
 @property  NSNumber *usePadConstraints
 @property  <UISearchBarDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[GKSearchBarView initialize]
  +[GKSearchBarView requiresConstraintBasedLayout]
  +[GKSearchBarView defaultHeight]

  // instance methods
  -[GKSearchBarView dealloc]
  -[GKSearchBarView delegate]
  -[GKSearchBarView setDelegate:]
  -[GKSearchBarView prepareForReuse]
  -[GKSearchBarView initWithFrame:]
  -[GKSearchBarView updateConstraints]
  -[GKSearchBarView searchBar]
  -[GKSearchBarView setSearchBar:]
  -[GKSearchBarView applyLayoutAttributes:]
  -[GKSearchBarView leadingMargin]
  -[GKSearchBarView trailingMargin]
  -[GKSearchBarView setLeadingMargin:]
  -[GKSearchBarView setTrailingMargin:]
  -[GKSearchBarView setUsePadConstraints:]
  -[GKSearchBarView establishSearchBarConstraints]
  -[GKSearchBarView setSearchBarConstraints:]
  -[GKSearchBarView searchBarConstraints]
  -[GKSearchBarView usePadConstraints]


GKMultiplayerPlayerCountViewController : UITableViewController /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics <UITableViewDelegate, UITableViewDataSource>
 @property  {_NSRange=QQ} pickerMinimumAndRange
 @property  long long selectedCount
 @property  NSIndexPath *selectedRowIndexPath
 @property  <GKMultiplayerPlayerCountViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKMultiplayerPlayerCountViewController delegate]
  -[GKMultiplayerPlayerCountViewController setDelegate:]
  -[GKMultiplayerPlayerCountViewController .cxx_destruct]
  -[GKMultiplayerPlayerCountViewController viewDidLoad]
  -[GKMultiplayerPlayerCountViewController tableView:numberOfRowsInSection:]
  -[GKMultiplayerPlayerCountViewController tableView:cellForRowAtIndexPath:]
  -[GKMultiplayerPlayerCountViewController tableView:titleForHeaderInSection:]
  -[GKMultiplayerPlayerCountViewController tableView:didSelectRowAtIndexPath:]
  -[GKMultiplayerPlayerCountViewController selectedCount]
  -[GKMultiplayerPlayerCountViewController setSelectedCount:]
  -[GKMultiplayerPlayerCountViewController setSelectedRowIndexPath:]
  -[GKMultiplayerPlayerCountViewController initWithMinPlayerCount:maxPlayerCount:currentCount:]
  -[GKMultiplayerPlayerCountViewController pickerMinimumAndRange]
  -[GKMultiplayerPlayerCountViewController setPickerMinimumAndRange:]
  -[GKMultiplayerPlayerCountViewController selectedRowIndexPath]


GKDashboardLeaderboardDetailViewController : GKDetailViewController
 @property  GKDashboardPlayerPhotoView *playerView
 @property  UILabel *nameLabel
 @property  UILabel *descriptionLabel
 @property  UILabel *earnedOnLabel
 @property  UILabel *infoLabel
 @property  UIButton *firstButton
 @property  UIButton *secondButton
 @property  UIButton *reportProblemButton
 @property  GKLeaderboard *leaderboard
 @property  GKScore *score

  // instance methods
  -[GKDashboardLeaderboardDetailViewController dealloc]
  -[GKDashboardLeaderboardDetailViewController score]
  -[GKDashboardLeaderboardDetailViewController setScore:]
  -[GKDashboardLeaderboardDetailViewController preferredFocusEnvironments]
  -[GKDashboardLeaderboardDetailViewController viewDidLoad]
  -[GKDashboardLeaderboardDetailViewController setDescriptionLabel:]
  -[GKDashboardLeaderboardDetailViewController descriptionLabel]
  -[GKDashboardLeaderboardDetailViewController setNameLabel:]
  -[GKDashboardLeaderboardDetailViewController nameLabel]
  -[GKDashboardLeaderboardDetailViewController infoLabel]
  -[GKDashboardLeaderboardDetailViewController playerView]
  -[GKDashboardLeaderboardDetailViewController report:]
  -[GKDashboardLeaderboardDetailViewController setPlayerView:]
  -[GKDashboardLeaderboardDetailViewController setInfoLabel:]
  -[GKDashboardLeaderboardDetailViewController setLeaderboard:]
  -[GKDashboardLeaderboardDetailViewController share:]
  -[GKDashboardLeaderboardDetailViewController challenge:]
  -[GKDashboardLeaderboardDetailViewController firstButton]
  -[GKDashboardLeaderboardDetailViewController setFirstButton:]
  -[GKDashboardLeaderboardDetailViewController secondButton]
  -[GKDashboardLeaderboardDetailViewController setSecondButton:]
  -[GKDashboardLeaderboardDetailViewController configureForScore]
  -[GKDashboardLeaderboardDetailViewController initWithScore:leaderboard:]
  -[GKDashboardLeaderboardDetailViewController earnedOnLabel]
  -[GKDashboardLeaderboardDetailViewController setEarnedOnLabel:]
  -[GKDashboardLeaderboardDetailViewController reportProblemButton]
  -[GKDashboardLeaderboardDetailViewController setReportProblemButton:]
  -[GKDashboardLeaderboardDetailViewController leaderboard]


GKRemoteUINavigationController : UINavigationController /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics <GKBubbleFlowableViewController>
 @property  GKRemoteUIController *remoteUIController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKRemoteUINavigationController .cxx_destruct]
  -[GKRemoteUINavigationController loadView]
  -[GKRemoteUINavigationController supportedInterfaceOrientations]
  -[GKRemoteUINavigationController initWithRemoteUIController:]
  -[GKRemoteUINavigationController remoteUIController]
  -[GKRemoteUINavigationController _gkUsesBubbleFlowModalPresentation]
  -[GKRemoteUINavigationController _gkCanBeRemovedFromParentWhenCovered]


GKTextBubbleContentView : UIView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics

GKBaseBubbleWithTextControl : GKBubbleControl
 @property  NSArray *labels
 @property  id updateRasterizationScaleToken
 @property  double referenceZPosition

  // instance methods
  -[GKBaseBubbleWithTextControl dealloc]
  -[GKBaseBubbleWithTextControl copyWithZone:]
  -[GKBaseBubbleWithTextControl isFlipped]
  -[GKBaseBubbleWithTextControl labels]
  -[GKBaseBubbleWithTextControl setLabels:]
  -[GKBaseBubbleWithTextControl initWithFrame:]
  -[GKBaseBubbleWithTextControl didMoveToSuperview]
  -[GKBaseBubbleWithTextControl referenceZPosition]
  -[GKBaseBubbleWithTextControl setReferenceZPosition:]
  -[GKBaseBubbleWithTextControl updateLabelRasterizationScaleForLabels]
  -[GKBaseBubbleWithTextControl updateTextFieldsFor3DScaling]
  -[GKBaseBubbleWithTextControl _scaledTextStyle:]
  -[GKBaseBubbleWithTextControl updateRasterizationScaleToken]
  -[GKBaseBubbleWithTextControl setUpdateRasterizationScaleToken:]


GKValueWithCaptionBubbleControl : GKBaseBubbleWithTextControl
 @property  GKTextStyle *smallValueStyle
 @property  GKTextStyle *normalValueStyle
 @property  GKTextStyle *normalCaptionStyle
 @property  GKLabel *captionLabel
 @property  GKLabel *valueLabel
 @property  NSString *captionText
 @property  NSString *valueText
 @property  BOOL oneLineOnly
 @property  GKTextStyle *overrideValueStyle
 @property  GKTextStyle *overrideCaptionStyle

  // class methods
  +[GKValueWithCaptionBubbleControl initialize]

  // instance methods
  -[GKValueWithCaptionBubbleControl dealloc]
  -[GKValueWithCaptionBubbleControl copyWithZone:]
  -[GKValueWithCaptionBubbleControl initWithFrame:]
  -[GKValueWithCaptionBubbleControl traitCollectionDidChange:]
  -[GKValueWithCaptionBubbleControl layoutSubviews]
  -[GKValueWithCaptionBubbleControl setValueLabel:]
  -[GKValueWithCaptionBubbleControl valueLabel]
  -[GKValueWithCaptionBubbleControl captionLabel]
  -[GKValueWithCaptionBubbleControl setCaptionLabel:]
  -[GKValueWithCaptionBubbleControl captionText]
  -[GKValueWithCaptionBubbleControl setValueText:]
  -[GKValueWithCaptionBubbleControl valueText]
  -[GKValueWithCaptionBubbleControl overrideCaptionStyle]
  -[GKValueWithCaptionBubbleControl setOverrideCaptionStyle:]
  -[GKValueWithCaptionBubbleControl setCaptionText:]
  -[GKValueWithCaptionBubbleControl oneLineOnly]
  -[GKValueWithCaptionBubbleControl setOneLineOnly:]
  -[GKValueWithCaptionBubbleControl setOverrideValueStyle:]
  -[GKValueWithCaptionBubbleControl updateTextFieldsFor3DScaling]
  -[GKValueWithCaptionBubbleControl setNormalValueStyle:]
  -[GKValueWithCaptionBubbleControl setNormalCaptionStyle:]
  -[GKValueWithCaptionBubbleControl setSmallValueStyle:]
  -[GKValueWithCaptionBubbleControl attributedCaptionText]
  -[GKValueWithCaptionBubbleControl setAttributedCaptionText:]
  -[GKValueWithCaptionBubbleControl attributedValueText]
  -[GKValueWithCaptionBubbleControl setAttributedValueText:]
  -[GKValueWithCaptionBubbleControl overrideValueStyle]
  -[GKValueWithCaptionBubbleControl _updateCaptionTextLabel]
  -[GKValueWithCaptionBubbleControl captionTextStyle]
  -[GKValueWithCaptionBubbleControl _updateValueTextLabel]
  -[GKValueWithCaptionBubbleControl valueTextStyle]
  -[GKValueWithCaptionBubbleControl setValueTextForInteger:]
  -[GKValueWithCaptionBubbleControl blinkOutThenInWithValueText:captionText:afterDelay:]
  -[GKValueWithCaptionBubbleControl smallValueStyle]
  -[GKValueWithCaptionBubbleControl normalValueStyle]
  -[GKValueWithCaptionBubbleControl normalCaptionStyle]


GKTextBubbleControl : GKBaseBubbleWithTextControl
 @property  GKLabel *textLabel
 @property  GKLabel *textStyle
 @property  BOOL smallText
 @property  NSString *text
 @property  NSAttributedString *attributedText
 @property  GKTextStyle *overrideTextStyle

  // instance methods
  -[GKTextBubbleControl dealloc]
  -[GKTextBubbleControl copyWithZone:]
  -[GKTextBubbleControl text]
  -[GKTextBubbleControl setText:]
  -[GKTextBubbleControl setTextStyle:]
  -[GKTextBubbleControl textStyle]
  -[GKTextBubbleControl initWithFrame:]
  -[GKTextBubbleControl layoutSubviews]
  -[GKTextBubbleControl setAttributedText:]
  -[GKTextBubbleControl attributedText]
  -[GKTextBubbleControl textLabel]
  -[GKTextBubbleControl setTextLabel:]
  -[GKTextBubbleControl setSmallText:]
  -[GKTextBubbleControl updateTextFieldsFor3DScaling]
  -[GKTextBubbleControl overrideTextStyle]
  -[GKTextBubbleControl setOverrideTextStyle:]
  -[GKTextBubbleControl smallText]
  -[GKTextBubbleControl _updateTextLabel]


GKBrush : NSObject <NSCopying>
  // class methods
  +[GKBrush brush]

  // instance methods
  -[GKBrush copyWithZone:]
  -[GKBrush sizeForInput:]
  -[GKBrush drawnImageForSize:opaque:input:]
  -[GKBrush scaleForInput:]
  -[GKBrush drawInRect:withContext:input:]


GKThemeBrush : GKBrush
 @property  GKUITheme *theme

  // instance methods
  -[GKThemeBrush copyWithZone:]
  -[GKThemeBrush .cxx_destruct]
  -[GKThemeBrush theme]
  -[GKThemeBrush setTheme:]
  -[GKThemeBrush initWithTheme:]


GKConditionBrush : GKBrush
 @property  NSPredicate *predicate
 @property  GKBrush *yesBrush
 @property  GKBrush *noBrush

  // instance methods
  -[GKConditionBrush copyWithZone:]
  -[GKConditionBrush .cxx_destruct]
  -[GKConditionBrush setPredicate:]
  -[GKConditionBrush predicate]
  -[GKConditionBrush sizeForInput:]
  -[GKConditionBrush drawInRect:withContext:input:]
  -[GKConditionBrush yesBrush]
  -[GKConditionBrush setYesBrush:]
  -[GKConditionBrush noBrush]
  -[GKConditionBrush setNoBrush:]


GKBrushList : GKThemeBrush
 @property  NSArray *brushList

  // class methods
  +[GKBrushList brushListWithBrushes:]

  // instance methods
  -[GKBrushList copyWithZone:]
  -[GKBrushList .cxx_destruct]
  -[GKBrushList drawInRect:withContext:input:]
  -[GKBrushList setBrushList:]
  -[GKBrushList brushList]
  -[GKBrushList drawRectForBrushAtIndex:fromRect:input:]
  -[GKBrushList willDrawRect:withBrushAtIndex:input:]
  -[GKBrushList didDrawRect:withBrushAtIndex:input:]


GKImageBrush : GKThemeBrush
 @property  @? inputTransform

  // instance methods
  -[GKImageBrush .cxx_destruct]
  -[GKImageBrush inputTransform]
  -[GKImageBrush setInputTransform:]
  -[GKImageBrush sizeForInput:]
  -[GKImageBrush scaleForInput:]
  -[GKImageBrush drawInRect:withContext:input:]


GKMacGameIconBrush : GKImageBrush <GKBrushIdentification>
 @property  {CGSize=dd} outputSize
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKMacGameIconBrush setOutputSize:]
  -[GKMacGameIconBrush outputSize]
  -[GKMacGameIconBrush sizeForInput:]
  -[GKMacGameIconBrush renderedImageIdentifier]


GKiOSAppIconBrush : GKImageBrush
  // instance methods
  -[GKiOSAppIconBrush drawInRect:withContext:input:]


GKiOSAppIconBrushShare : GKiOSAppIconBrush
 @property  {CGSize=dd} outputSize

  // instance methods
  -[GKiOSAppIconBrushShare setOutputSize:]
  -[GKiOSAppIconBrushShare outputSize]
  -[GKiOSAppIconBrushShare sizeForInput:]


GKGameMessagesBrush : GKImageBrush
  // instance methods
  -[GKGameMessagesBrush drawInRect:withContext:input:]


GKComposedImageBrush : GKImageBrush
 @property  UIImage *maskImage
 @property  UIImage *backgroundImage
 @property  UIImage *overlayImage
 @property  {UIEdgeInsets=dddd} maskInsets

  // instance methods
  -[GKComposedImageBrush copyWithZone:]
  -[GKComposedImageBrush .cxx_destruct]
  -[GKComposedImageBrush maskImage]
  -[GKComposedImageBrush setMaskImage:]
  -[GKComposedImageBrush backgroundImage]
  -[GKComposedImageBrush setBackgroundImage:]
  -[GKComposedImageBrush overlayImage]
  -[GKComposedImageBrush setOverlayImage:]
  -[GKComposedImageBrush sizeForInput:]
  -[GKComposedImageBrush scaleForInput:]
  -[GKComposedImageBrush drawInRect:withContext:input:]
  -[GKComposedImageBrush maskInsets]
  -[GKComposedImageBrush setMaskInsets:]


GKCircleImageBrush : GKImageBrush <GKBrushIdentification>
 @property  {CGSize=dd} sizeOverride
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKCircleImageBrush setSizeOverride:]
  -[GKCircleImageBrush sizeOverride]
  -[GKCircleImageBrush sizeForInput:]
  -[GKCircleImageBrush renderedImageIdentifier]
  -[GKCircleImageBrush scaleForInput:]
  -[GKCircleImageBrush drawInRect:withContext:input:]


GKAvatarImageBrush : GKImageBrush <GKBrushIdentification>
 @property  long long dimension
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKAvatarImageBrush dimension]
  -[GKAvatarImageBrush setDimension:]
  -[GKAvatarImageBrush renderedImageIdentifier]


GKMultiCircleImageBrush : GKThemeBrush
  // instance methods
  -[GKMultiCircleImageBrush sizeForInput:]
  -[GKMultiCircleImageBrush drawInRect:withContext:input:]


GKDashboardAchievementCell : GKRectShadowCell
 @property  GKAchievement *achievement
 @property  GKAchievement *localAchievement
 @property  GKAchievementIconView *iconView
 @property  GKResizingLabel *titleLabel
 @property  GKResizingLabel *descriptionLabel
 @property  UILabel *pointsLabel
 @property  UILabel *pointsTextLabel
 @property  UIView *popoverSourceView

  // instance methods
  -[GKDashboardAchievementCell dealloc]
  -[GKDashboardAchievementCell titleLabel]
  -[GKDashboardAchievementCell setTitleLabel:]
  -[GKDashboardAchievementCell setDescriptionLabel:]
  -[GKDashboardAchievementCell descriptionLabel]
  -[GKDashboardAchievementCell popoverSourceView]
  -[GKDashboardAchievementCell iconView]
  -[GKDashboardAchievementCell setIconView:]
  -[GKDashboardAchievementCell achievement]
  -[GKDashboardAchievementCell setAchievement:]
  -[GKDashboardAchievementCell setLocalAchievement:]
  -[GKDashboardAchievementCell setupForAchievement:localAchievement:]
  -[GKDashboardAchievementCell localAchievement]
  -[GKDashboardAchievementCell pointsLabel]
  -[GKDashboardAchievementCell setPointsLabel:]
  -[GKDashboardAchievementCell pointsTextLabel]
  -[GKDashboardAchievementCell setPointsTextLabel:]


GKBubbleSet : NSObject
 @property  long long supportedBubbles
 @property  NSArray *bubbleControls
 @property  NSString *debuggingTag

  // class methods
  +[GKBubbleSet setWithBubbleTypes:]
  +[GKBubbleSet setWithBubbleControls:]

  // instance methods
  -[GKBubbleSet dealloc]
  -[GKBubbleSet isEqual:]
  -[GKBubbleSet copyWithZone:]
  -[GKBubbleSet debuggingTag]
  -[GKBubbleSet setDebuggingTag:]
  -[GKBubbleSet bubbleControls]
  -[GKBubbleSet updateBubbleVisibilityAccordingToSupportedBubblesMask]
  -[GKBubbleSet supportedBubbles]
  -[GKBubbleSet bubbleForType:]
  -[GKBubbleSet setSupportedBubbles:]
  -[GKBubbleSet subsetWithBubbleTypes:]
  -[GKBubbleSet syncBubbleMeshAnimationStateFromSet:]
  -[GKBubbleSet hideAllBubbleControls]
  -[GKBubbleSet setAllContentAlpha:]
  -[GKBubbleSet animateOutWithFocus:viewsToFadeOut:effectiveView:completion:]


GKSpeechBalloonBackgroundView : UIView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  _GKCustomDrawnSpeechBalloonBackgroundView *customDrawnView
 @property  _GKImageSpeechBalloonBackgroundView *strokedImageView
 @property  unsigned char drawStyle
 @property  unsigned char tipDirection

  // instance methods
  -[GKSpeechBalloonBackgroundView dealloc]
  -[GKSpeechBalloonBackgroundView initWithFrame:]
  -[GKSpeechBalloonBackgroundView alignmentRectInsets]
  -[GKSpeechBalloonBackgroundView tipDirection]
  -[GKSpeechBalloonBackgroundView drawStyle]
  -[GKSpeechBalloonBackgroundView setDrawStyle:]
  -[GKSpeechBalloonBackgroundView setTipDirection:]
  -[GKSpeechBalloonBackgroundView customDrawnView]
  -[GKSpeechBalloonBackgroundView setCustomDrawnView:]
  -[GKSpeechBalloonBackgroundView strokedImageView]
  -[GKSpeechBalloonBackgroundView setStrokedImageView:]


_GKCustomDrawnSpeechBalloonBackgroundView : UIView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  unsigned char drawStyle
 @property  unsigned char tipDirection

  // instance methods
  -[_GKCustomDrawnSpeechBalloonBackgroundView initWithFrame:]
  -[_GKCustomDrawnSpeechBalloonBackgroundView alignmentRectInsets]
  -[_GKCustomDrawnSpeechBalloonBackgroundView tintColorDidChange]
  -[_GKCustomDrawnSpeechBalloonBackgroundView drawRect:]
  -[_GKCustomDrawnSpeechBalloonBackgroundView tipDirection]
  -[_GKCustomDrawnSpeechBalloonBackgroundView drawStyle]
  -[_GKCustomDrawnSpeechBalloonBackgroundView setDrawStyle:]
  -[_GKCustomDrawnSpeechBalloonBackgroundView setTipDirection:]
  -[_GKCustomDrawnSpeechBalloonBackgroundView _tipDirectionForCurrentUILayoutDirection]
  -[_GKCustomDrawnSpeechBalloonBackgroundView speechBalloonMaskForRect:]
  -[_GKCustomDrawnSpeechBalloonBackgroundView _gradientForColor:]


_GKImageSpeechBalloonBackgroundView : UIImageView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  unsigned char tipDirection
 @property  UIImage *templateImage

  // instance methods
  -[_GKImageSpeechBalloonBackgroundView dealloc]
  -[_GKImageSpeechBalloonBackgroundView initWithFrame:]
  -[_GKImageSpeechBalloonBackgroundView tintColorDidChange]
  -[_GKImageSpeechBalloonBackgroundView updateTransform]
  -[_GKImageSpeechBalloonBackgroundView updateImage]
  -[_GKImageSpeechBalloonBackgroundView templateImage]
  -[_GKImageSpeechBalloonBackgroundView setTemplateImage:]
  -[_GKImageSpeechBalloonBackgroundView tipDirection]
  -[_GKImageSpeechBalloonBackgroundView setTipDirection:]
  -[_GKImageSpeechBalloonBackgroundView _tipDirectionForCurrentUILayoutDirection]


GKReportProblemRemoteUIController : GKRemoteUIController
 @property  NSURL *url
 @property  GKPlayer *problemPlayer

  // class methods
  +[GKReportProblemRemoteUIController controllerForProblemPlayer:completionHandler:]

  // instance methods
  -[GKReportProblemRemoteUIController .cxx_destruct]
  -[GKReportProblemRemoteUIController url]
  -[GKReportProblemRemoteUIController setUrl:]
  -[GKReportProblemRemoteUIController bagKey]
  -[GKReportProblemRemoteUIController fallbackURL]
  -[GKReportProblemRemoteUIController postBodyForInitialLoad]
  -[GKReportProblemRemoteUIController initWithProblemPlayer:]
  -[GKReportProblemRemoteUIController problemPlayer]
  -[GKReportProblemRemoteUIController preferredLayoutStyle]
  -[GKReportProblemRemoteUIController setProblemPlayer:]


GKDashboardMultiplayerPickerSearchDataSource : GKCollectionDataSource
 @property  NSArray *allPlayers
 @property  NSArray *searchPlayers
 @property  NSArray *selectedPlayers
 @property  long long maxSelectable
 @property  NSMutableDictionary *playerStates
 @property  BOOL searching
 @property  UISearchBar *searchBar

  // instance methods
  -[GKDashboardMultiplayerPickerSearchDataSource .cxx_destruct]
  -[GKDashboardMultiplayerPickerSearchDataSource scrollViewWillBeginDragging:]
  -[GKDashboardMultiplayerPickerSearchDataSource numberOfSectionsInCollectionView:]
  -[GKDashboardMultiplayerPickerSearchDataSource collectionView:numberOfItemsInSection:]
  -[GKDashboardMultiplayerPickerSearchDataSource collectionView:cellForItemAtIndexPath:]
  -[GKDashboardMultiplayerPickerSearchDataSource itemCount]
  -[GKDashboardMultiplayerPickerSearchDataSource searchBar]
  -[GKDashboardMultiplayerPickerSearchDataSource setSearchBar:]
  -[GKDashboardMultiplayerPickerSearchDataSource collectionView:shouldSelectItemAtIndexPath:]
  -[GKDashboardMultiplayerPickerSearchDataSource collectionView:didSelectItemAtIndexPath:]
  -[GKDashboardMultiplayerPickerSearchDataSource collectionView:layout:sizeForItemAtIndexPath:]
  -[GKDashboardMultiplayerPickerSearchDataSource setSearching:]
  -[GKDashboardMultiplayerPickerSearchDataSource isSearching]
  -[GKDashboardMultiplayerPickerSearchDataSource preferredCollectionHeight]
  -[GKDashboardMultiplayerPickerSearchDataSource setupCollectionView:]
  -[GKDashboardMultiplayerPickerSearchDataSource setAllPlayers:]
  -[GKDashboardMultiplayerPickerSearchDataSource allPlayers]
  -[GKDashboardMultiplayerPickerSearchDataSource setPlayerStates:]
  -[GKDashboardMultiplayerPickerSearchDataSource setSearchPlayers:]
  -[GKDashboardMultiplayerPickerSearchDataSource selectedPlayers]
  -[GKDashboardMultiplayerPickerSearchDataSource searchKeyForSection:]
  -[GKDashboardMultiplayerPickerSearchDataSource searchTextHasChanged]
  -[GKDashboardMultiplayerPickerSearchDataSource playerStates]
  -[GKDashboardMultiplayerPickerSearchDataSource searchPlayers]
  -[GKDashboardMultiplayerPickerSearchDataSource maxSelectable]
  -[GKDashboardMultiplayerPickerSearchDataSource initWithSearchPlayers:maxSelectable:]


GKSectionHeaderView : GKHeaderWithUnderlineView
 @property  GKLabel *leftLabel
 @property  GKButton *rightButton
 @property  unsigned long sectionIndex
 @property  long long itemCount
 @property  long long maxItemCount
 @property  BOOL allSectionItemsVisible
 @property  NSString *leftText
 @property  NSString *rightText
 @property  SEL showAllAction
 @property  id rightTarget
 @property  SEL rightAction
 @property  ^? itemCountFormatter
 @property  BOOL manualItemCount
 @property  long long maxRange

  // class methods
  +[GKSectionHeaderView phoneMetrics]
  +[GKSectionHeaderView padMetrics]

  // instance methods
  -[GKSectionHeaderView dealloc]
  -[GKSectionHeaderView prepareForReuse]
  -[GKSectionHeaderView initWithFrame:]
  -[GKSectionHeaderView itemCount]
  -[GKSectionHeaderView applyLayoutAttributes:]
  -[GKSectionHeaderView setItemCount:]
  -[GKSectionHeaderView sectionIndex]
  -[GKSectionHeaderView setSectionIndex:]
  -[GKSectionHeaderView leftLabel]
  -[GKSectionHeaderView rightButton]
  -[GKSectionHeaderView setRightButton:]
  -[GKSectionHeaderView updateLabel]
  -[GKSectionHeaderView maxItemCount]
  -[GKSectionHeaderView setMaxItemCount:]
  -[GKSectionHeaderView leftText]
  -[GKSectionHeaderView setLeftText:]
  -[GKSectionHeaderView rightText]
  -[GKSectionHeaderView setRightText:]
  -[GKSectionHeaderView setAllSectionItemsVisible:]
  -[GKSectionHeaderView allSectionItemsVisible]
  -[GKSectionHeaderView rightButtonTouched:]
  -[GKSectionHeaderView updateGutterConstraints]
  -[GKSectionHeaderView establishConstraints]
  -[GKSectionHeaderView rightButtonFrame]
  -[GKSectionHeaderView setItemCountFormatter:]
  -[GKSectionHeaderView setShowAllAction:]
  -[GKSectionHeaderView showAllAction]
  -[GKSectionHeaderView rightTarget]
  -[GKSectionHeaderView setRightTarget:]
  -[GKSectionHeaderView rightAction]
  -[GKSectionHeaderView setRightAction:]
  -[GKSectionHeaderView itemCountFormatter]
  -[GKSectionHeaderView manualItemCount]
  -[GKSectionHeaderView setManualItemCount:]
  -[GKSectionHeaderView maxRange]
  -[GKSectionHeaderView setMaxRange:]
  -[GKSectionHeaderView setLeftLabel:]


GKMultiplayerParticipant : NSObject <NSCopying>
 @property  long long type
 @property  long long status
 @property  GKPlayer *player
 @property  long long number

  // instance methods
  -[GKMultiplayerParticipant init]
  -[GKMultiplayerParticipant dealloc]
  -[GKMultiplayerParticipant isEqual:]
  -[GKMultiplayerParticipant copyWithZone:]
  -[GKMultiplayerParticipant type]
  -[GKMultiplayerParticipant setType:]
  -[GKMultiplayerParticipant status]
  -[GKMultiplayerParticipant number]
  -[GKMultiplayerParticipant setNumber:]
  -[GKMultiplayerParticipant setStatus:]
  -[GKMultiplayerParticipant player]
  -[GKMultiplayerParticipant setPlayer:]


GKMultiplayerCollectionViewCell : UICollectionViewCell /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  UILabel *nameLabel
 @property  UILabel *statusLabel
 @property  UIView *accessoryContainerView
 @property  GKDashboardPlayerPhotoView *iconView
 @property  NSLayoutConstraint *cellLeadingConstraint
 @property  NSLayoutConstraint *nameLabelBaselineConstraintToCenterLine
 @property  NSLayoutConstraint *statusLabelTopConstraintToNameBaseline
 @property  NSLayoutConstraint *statusLabelBaselineConstraintToNameBaseline
 @property  NSLayoutConstraint *nameLabelCenterlineConstraintToCenterline
 @property  GKMultiplayerParticipant *participant
 @property  BOOL removable
 @property  long long number

  // class methods
  +[GKMultiplayerCollectionViewCell reuseIdentifier]

  // instance methods
  -[GKMultiplayerCollectionViewCell dealloc]
  -[GKMultiplayerCollectionViewCell prepareForReuse]
  -[GKMultiplayerCollectionViewCell number]
  -[GKMultiplayerCollectionViewCell setNumber:]
  -[GKMultiplayerCollectionViewCell traitCollectionDidChange:]
  -[GKMultiplayerCollectionViewCell awakeFromNib]
  -[GKMultiplayerCollectionViewCell setNameLabel:]
  -[GKMultiplayerCollectionViewCell nameLabel]
  -[GKMultiplayerCollectionViewCell iconView]
  -[GKMultiplayerCollectionViewCell setIconView:]
  -[GKMultiplayerCollectionViewCell participant]
  -[GKMultiplayerCollectionViewCell setStatusLabel:]
  -[GKMultiplayerCollectionViewCell statusLabel]
  -[GKMultiplayerCollectionViewCell setParticipant:]
  -[GKMultiplayerCollectionViewCell removable]
  -[GKMultiplayerCollectionViewCell configureConstraintsForCurrentTraitCollection]
  -[GKMultiplayerCollectionViewCell participantChanged]
  -[GKMultiplayerCollectionViewCell updateAccessoryViewForType:]
  -[GKMultiplayerCollectionViewCell removeAccessorySubviews]
  -[GKMultiplayerCollectionViewCell setRemovable:]
  -[GKMultiplayerCollectionViewCell accessoryContainerView]
  -[GKMultiplayerCollectionViewCell setAccessoryContainerView:]
  -[GKMultiplayerCollectionViewCell cellLeadingConstraint]
  -[GKMultiplayerCollectionViewCell setCellLeadingConstraint:]
  -[GKMultiplayerCollectionViewCell nameLabelBaselineConstraintToCenterLine]
  -[GKMultiplayerCollectionViewCell setNameLabelBaselineConstraintToCenterLine:]
  -[GKMultiplayerCollectionViewCell statusLabelTopConstraintToNameBaseline]
  -[GKMultiplayerCollectionViewCell setStatusLabelTopConstraintToNameBaseline:]
  -[GKMultiplayerCollectionViewCell statusLabelBaselineConstraintToNameBaseline]
  -[GKMultiplayerCollectionViewCell setStatusLabelBaselineConstraintToNameBaseline:]
  -[GKMultiplayerCollectionViewCell nameLabelCenterlineConstraintToCenterline]
  -[GKMultiplayerCollectionViewCell setNameLabelCenterlineConstraintToCenterline:]


GKMultiplayerSeparatorView : UICollectionReusableView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
  // instance methods
  -[GKMultiplayerSeparatorView initWithFrame:]


GKDashboardPlayerPhotoView : UIView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  CNAvatarViewController *avatarViewController
 @property  UIImageView *avatarImageView
 @property  GKPlayer *player
 @property  BOOL useDarkerPlaceholder
 @property  BOOL usingPlaceholder
 @property  BOOL hasImage
 @property  BOOL selected
 @property  NSObject<GKPlayerAvatarViewDelegate> *delegate
 @property  long long avatarSize

  // instance methods
  -[GKDashboardPlayerPhotoView initWithCoder:]
  -[GKDashboardPlayerPhotoView delegate]
  -[GKDashboardPlayerPhotoView setDelegate:]
  -[GKDashboardPlayerPhotoView .cxx_destruct]
  -[GKDashboardPlayerPhotoView commonInit]
  -[GKDashboardPlayerPhotoView initWithFrame:]
  -[GKDashboardPlayerPhotoView touchesBegan:withEvent:]
  -[GKDashboardPlayerPhotoView touchesEnded:withEvent:]
  -[GKDashboardPlayerPhotoView touchesCancelled:withEvent:]
  -[GKDashboardPlayerPhotoView setSelected:]
  -[GKDashboardPlayerPhotoView selected]
  -[GKDashboardPlayerPhotoView hasImage]
  -[GKDashboardPlayerPhotoView player]
  -[GKDashboardPlayerPhotoView setPlayer:]
  -[GKDashboardPlayerPhotoView avatarViewController]
  -[GKDashboardPlayerPhotoView setAvatarViewController:]
  -[GKDashboardPlayerPhotoView avatarImageView]
  -[GKDashboardPlayerPhotoView setAvatarImageView:]
  -[GKDashboardPlayerPhotoView avatarSize]
  -[GKDashboardPlayerPhotoView setAvatarSize:]
  -[GKDashboardPlayerPhotoView setPlayer:completionHandler:]
  -[GKDashboardPlayerPhotoView setContactOnAvatarViewController:]
  -[GKDashboardPlayerPhotoView refreshImageWithCompletionHandler:]
  -[GKDashboardPlayerPhotoView invalidatePhoto]
  -[GKDashboardPlayerPhotoView useDarkerPlaceholder]
  -[GKDashboardPlayerPhotoView setUseDarkerPlaceholder:]
  -[GKDashboardPlayerPhotoView isUsingPlaceholder]
  -[GKDashboardPlayerPhotoView setUsingPlaceholder:]


GKAchievementViewController : GKGameCenterViewController
 @property  <GKAchievementViewControllerDelegate> *achievementDelegate

  // instance methods
  -[GKAchievementViewController init]
  -[GKAchievementViewController dealloc]
  -[GKAchievementViewController .cxx_destruct]
  -[GKAchievementViewController notifyDelegateOnWillFinish]
  -[GKAchievementViewController achievementDelegate]
  -[GKAchievementViewController setAchievementDelegate:]


GKServiceFriendRequestViewController : GKServiceViewController <MFMessageComposeViewControllerInternalDelegate>
 @property  MFMessageComposeViewController *composeController
 @property  NSString *friendCode
 @property  NSString *friendSupportPageURL
 @property  BOOL messageComposeSent
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKServiceFriendRequestViewController init]
  -[GKServiceFriendRequestViewController .cxx_destruct]
  -[GKServiceFriendRequestViewController viewWillAppear:]
  -[GKServiceFriendRequestViewController messageComposeViewController:didFinishWithResult:]
  -[GKServiceFriendRequestViewController messageComposeViewController:shouldSendMessage:toRecipients:completion:]
  -[GKServiceFriendRequestViewController composeController]
  -[GKServiceFriendRequestViewController setComposeController:]
  -[GKServiceFriendRequestViewController friendCode]
  -[GKServiceFriendRequestViewController friendSupportPageURL]
  -[GKServiceFriendRequestViewController setInitialState:withReply:]
  -[GKServiceFriendRequestViewController setFriendCode:]
  -[GKServiceFriendRequestViewController setFriendSupportPageURL:]
  -[GKServiceFriendRequestViewController setMessageComposeSent:]
  -[GKServiceFriendRequestViewController constructPrivateViewController]
  -[GKServiceFriendRequestViewController messageComposeSent]
  -[GKServiceFriendRequestViewController displayAlertWithTitle:andMessage:]
  -[GKServiceFriendRequestViewController _useBackdropViewForWindowBackground]


GKWelcomeViewController : GKViewController <GKBubbleFlowableViewController>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKWelcomeViewController viewDidLoad]
  -[GKWelcomeViewController bubbleAnimatorForTransitionFromViewController:]
  -[GKWelcomeViewController bubbleAnimatorForTransitionToViewController:]
  -[GKWelcomeViewController finalScreenFrameInViewCoordinatesForBubbleOfType:]
  -[GKWelcomeViewController configureControlForBubble:]
  -[GKWelcomeViewController bubbleFlowAnimateOutDuration]
  -[GKWelcomeViewController bubbleFlowAnimateInDuration]
  -[GKWelcomeViewController updateBubbleTextImmediatelyForTransitionFromViewController:]
  -[GKWelcomeViewController _gkUsesBubbleFlowModalPresentation]
  -[GKWelcomeViewController _gkCanBeRemovedFromParentWhenCovered]
  -[GKWelcomeViewController _shouldAnimateBubblesIn]


GKLeaderboardViewController : GKGameCenterViewController
 @property  long long timeScope
 @property  NSString *category
 @property  <GKLeaderboardViewControllerDelegate> *leaderboardDelegate

  // instance methods
  -[GKLeaderboardViewController init]
  -[GKLeaderboardViewController .cxx_destruct]
  -[GKLeaderboardViewController category]
  -[GKLeaderboardViewController setCategory:]
  -[GKLeaderboardViewController setTimeScope:]
  -[GKLeaderboardViewController timeScope]
  -[GKLeaderboardViewController notifyDelegateOnWillFinish]
  -[GKLeaderboardViewController leaderboardDelegate]
  -[GKLeaderboardViewController setLeaderboardDelegate:]


GKBaseGameCell : GKCollectionViewCell
 @property  UIImageView *iconView
 @property  UILabel *nameLabel
 @property  GKGame *game
 @property  GKGameRecord *gameRecord

  // class methods
  +[GKBaseGameCell itemHeightList]
  +[GKBaseGameCell defaultRowHeight]

  // instance methods
  -[GKBaseGameCell dealloc]
  -[GKBaseGameCell prepareForReuse]
  -[GKBaseGameCell initWithFrame:]
  -[GKBaseGameCell setNameLabel:]
  -[GKBaseGameCell nameLabel]
  -[GKBaseGameCell iconView]
  -[GKBaseGameCell setIconView:]
  -[GKBaseGameCell game]
  -[GKBaseGameCell setGame:]
  -[GKBaseGameCell didUpdateModel]
  -[GKBaseGameCell alignmentRectForText]
  -[GKBaseGameCell setRepresentedItem:]
  -[GKBaseGameCell setGameRecord:]
  -[GKBaseGameCell gameRecord]


GKPlayerGameCell : GKBaseGameCell
 @property  UILabel *statsLabel
 @property  UILabel *dateLabel

  // instance methods
  -[GKPlayerGameCell dealloc]
  -[GKPlayerGameCell prepareForReuse]
  -[GKPlayerGameCell initWithFrame:]
  -[GKPlayerGameCell dateLabel]
  -[GKPlayerGameCell setDateLabel:]
  -[GKPlayerGameCell didUpdateModel]
  -[GKPlayerGameCell achievementsStringWithGameRecord:]
  -[GKPlayerGameCell leaderboardStringWithGameRecord:]
  -[GKPlayerGameCell statText]
  -[GKPlayerGameCell statsLabel]
  -[GKPlayerGameCell setStatsLabel:]


GKInCommonGameCell : GKPlayerGameCell
 @property  GKGameRecord *localPlayerGameRecord

  // instance methods
  -[GKInCommonGameCell dealloc]
  -[GKInCommonGameCell prepareForReuse]
  -[GKInCommonGameCell didUpdateModel]
  -[GKInCommonGameCell leaderboardStringWithGameRecord:]
  -[GKInCommonGameCell localPlayerGameRecord]
  -[GKInCommonGameCell setLocalPlayerGameRecord:]


GKPurchasableGameCell : GKBaseGameCell
 @property  GKStoreItemInternal *storeItem
 @property  UILabel *developerLabel
 @property  UILabel *priceLabel
 @property  GKRatingView *ratingStarsView
 @property  float capturedRating
 @property  UILabel *numberRatings

  // instance methods
  -[GKPurchasableGameCell dealloc]
  -[GKPurchasableGameCell prepareForReuse]
  -[GKPurchasableGameCell initWithFrame:]
  -[GKPurchasableGameCell storeItem]
  -[GKPurchasableGameCell setStoreItem:]
  -[GKPurchasableGameCell didUpdateModel]
  -[GKPurchasableGameCell canRemoveItem]
  -[GKPurchasableGameCell establishConstraints]
  -[GKPurchasableGameCell setCapturedRating:]
  -[GKPurchasableGameCell capturedRating]
  -[GKPurchasableGameCell developerLabel]
  -[GKPurchasableGameCell setDeveloperLabel:]
  -[GKPurchasableGameCell priceLabel]
  -[GKPurchasableGameCell setPriceLabel:]
  -[GKPurchasableGameCell ratingStarsView]
  -[GKPurchasableGameCell setRatingStarsView:]
  -[GKPurchasableGameCell numberRatings]
  -[GKPurchasableGameCell setNumberRatings:]


GKCollectionDataSource : NSObject <UICollectionViewDelegate_Private, UICollectionViewDataSource, UICollectionViewDelegateFlowLayout>
 @property  NSArray *searchTerms
 @property  UIViewController *presentationViewController
 @property  BOOL onDarkBackground
 @property  long long itemCount
 @property  BOOL useStandardHeaders
 @property  NSString *sectionHeaderText
 @property  double preferredCollectionHeight
 @property  NSString *analyticsKey
 @property  BOOL isSearching
 @property  NSString *searchText
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKCollectionDataSource dealloc]
  -[GKCollectionDataSource numberOfSectionsInCollectionView:]
  -[GKCollectionDataSource collectionView:numberOfItemsInSection:]
  -[GKCollectionDataSource collectionView:cellForItemAtIndexPath:]
  -[GKCollectionDataSource collectionView:canFocusItemAtIndexPath:]
  -[GKCollectionDataSource itemCount]
  -[GKCollectionDataSource searchText]
  -[GKCollectionDataSource collectionView:viewForSupplementaryElementOfKind:atIndexPath:]
  -[GKCollectionDataSource collectionView:didSelectItemAtIndexPath:]
  -[GKCollectionDataSource collectionView:didDeselectItemAtIndexPath:]
  -[GKCollectionDataSource collectionView:didFocusItemAtIndexPath:]
  -[GKCollectionDataSource collectionView:didUnfocusItemAtIndexPath:]
  -[GKCollectionDataSource collectionView:layout:referenceSizeForHeaderInSection:]
  -[GKCollectionDataSource dismissViewController:]
  -[GKCollectionDataSource setSearchText:]
  -[GKCollectionDataSource isSearching]
  -[GKCollectionDataSource searchTerms]
  -[GKCollectionDataSource setSearchTerms:]
  -[GKCollectionDataSource presentationViewController]
  -[GKCollectionDataSource setPresentationViewController:]
  -[GKCollectionDataSource preferredCollectionHeight]
  -[GKCollectionDataSource setOnDarkBackground:]
  -[GKCollectionDataSource onDarkBackground]
  -[GKCollectionDataSource setUseStandardHeaders:]
  -[GKCollectionDataSource setupCollectionView:]
  -[GKCollectionDataSource loadDataWithCompletionHandler:]
  -[GKCollectionDataSource itemForIndexPath:]
  -[GKCollectionDataSource sectionHeaderText]
  -[GKCollectionDataSource searchMatchesItem:inSection:]
  -[GKCollectionDataSource searchKeyForSection:]
  -[GKCollectionDataSource searchTextHasChanged]
  -[GKCollectionDataSource showViewController:popoverSourceView:]
  -[GKCollectionDataSource headerTextForSection:]
  -[GKCollectionDataSource useStandardHeaders]
  -[GKCollectionDataSource analyticsKey]
  -[GKCollectionDataSource setAnalyticsKey:]


GKDashboardChallengeDetailViewController : GKDetailViewController
 @property  GKChallenge *challenge
 @property  GKAchievementIconView *iconView
 @property  UILabel *titleLabel
 @property  UILabel *descriptionLabel
 @property  UILabel *fromLabel
 @property  UIButton *playButton
 @property  UIButton *declineButton
 @property  GKPlayerWithSpeechBalloonView *playerSpeechView
 @property  NSLayoutConstraint *topConstraint
 @property  double topMargin
 @property  NSLayoutConstraint *iconHeightConstraint
 @property  NSLayoutConstraint *speechToFromConstraint
 @property  id delegate
 @property  BOOL shouldShowPlay

  // instance methods
  -[GKDashboardChallengeDetailViewController dealloc]
  -[GKDashboardChallengeDetailViewController delegate]
  -[GKDashboardChallengeDetailViewController setDelegate:]
  -[GKDashboardChallengeDetailViewController challenge]
  -[GKDashboardChallengeDetailViewController setTopMargin:]
  -[GKDashboardChallengeDetailViewController titleLabel]
  -[GKDashboardChallengeDetailViewController preferredFocusEnvironments]
  -[GKDashboardChallengeDetailViewController topConstraint]
  -[GKDashboardChallengeDetailViewController viewDidLoad]
  -[GKDashboardChallengeDetailViewController viewWillLayoutSubviews]
  -[GKDashboardChallengeDetailViewController setTitleLabel:]
  -[GKDashboardChallengeDetailViewController topMargin]
  -[GKDashboardChallengeDetailViewController setDescriptionLabel:]
  -[GKDashboardChallengeDetailViewController descriptionLabel]
  -[GKDashboardChallengeDetailViewController play:]
  -[GKDashboardChallengeDetailViewController iconView]
  -[GKDashboardChallengeDetailViewController setIconView:]
  -[GKDashboardChallengeDetailViewController fromLabel]
  -[GKDashboardChallengeDetailViewController setFromLabel:]
  -[GKDashboardChallengeDetailViewController setTopConstraint:]
  -[GKDashboardChallengeDetailViewController playButton]
  -[GKDashboardChallengeDetailViewController setPlayButton:]
  -[GKDashboardChallengeDetailViewController setChallenge:]
  -[GKDashboardChallengeDetailViewController declineButton]
  -[GKDashboardChallengeDetailViewController setDeclineButton:]
  -[GKDashboardChallengeDetailViewController initWithChallenge:]
  -[GKDashboardChallengeDetailViewController configureForChallenge]
  -[GKDashboardChallengeDetailViewController updateLeaderboardImage]
  -[GKDashboardChallengeDetailViewController decline:]
  -[GKDashboardChallengeDetailViewController challengeOK:]
  -[GKDashboardChallengeDetailViewController shouldShowPlay]
  -[GKDashboardChallengeDetailViewController setShouldShowPlay:]
  -[GKDashboardChallengeDetailViewController playerSpeechView]
  -[GKDashboardChallengeDetailViewController setPlayerSpeechView:]
  -[GKDashboardChallengeDetailViewController iconHeightConstraint]
  -[GKDashboardChallengeDetailViewController setIconHeightConstraint:]
  -[GKDashboardChallengeDetailViewController speechToFromConstraint]
  -[GKDashboardChallengeDetailViewController setSpeechToFromConstraint:]


GKHorizontalBubbleControlsView : UIView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  NSArray *bubbleTokens
 @property  NSArray *bubbles
 @property  double overlap

  // instance methods
  -[GKHorizontalBubbleControlsView dealloc]
  -[GKHorizontalBubbleControlsView setBounds:]
  -[GKHorizontalBubbleControlsView _commonInit]
  -[GKHorizontalBubbleControlsView intrinsicContentSize]
  -[GKHorizontalBubbleControlsView initWithFrame:]
  -[GKHorizontalBubbleControlsView layoutSubviews]
  -[GKHorizontalBubbleControlsView awakeFromNib]
  -[GKHorizontalBubbleControlsView bubbles]
  -[GKHorizontalBubbleControlsView setOverlap:]
  -[GKHorizontalBubbleControlsView overlap]
  -[GKHorizontalBubbleControlsView setBubbles:]
  -[GKHorizontalBubbleControlsView setBubbleTokens:]
  -[GKHorizontalBubbleControlsView bubbleTokens]


GKDashboardMultiplayerPickerViewController : GKDashboardCollectionViewController <UITextFieldDelegate, UISearchBarDelegate, GKComposeControllerDelegate, UISearchResultsUpdating>
 @property  NSArray *initiallySelectedPlayers
 @property  BOOL shouldIgnoreClearSelection
 @property  UILabel *descriptionLabel
 @property  UIButton *sendButton
 @property  UIButton *customizeMessageButton
 @property  UITextField *messageField
 @property  UIView *scrollingHeader
 @property  NSLayoutConstraint *scrollingHeaderTopConstraint
 @property  double scrollingHeaderTopConstraintConstant
 @property  {UIEdgeInsets=dddd} initialInsets
 @property  BOOL shouldApplyInitialOffset
 @property  NSLayoutConstraint *customizeMessageBottomConstraint
 @property  double initialCustomizeMessageBottomConstraintConstant
 @property  BOOL excludesContacts
 @property  BOOL searching
 @property  double segmentControlHeight
 @property  GKDashboardMultiplayerPickerDataSource *pickerDataSource
 @property  UISegmentedControl *sectionControl
 @property  GKContactSkipControl *contactSkipControl
 @property  UIVisualEffectView *effectView
 @property  UISearchController *searchController
 @property  GKDashboardCollectionViewController *searchResultsCollectionViewController
 @property  UIViewController *composeController
 @property  NSString *message
 @property  @? completionHandler
 @property  BOOL supportsNearby
 @property  <GKDashboardNearbyBrowserDelegate> *nearbyDelegate
 @property  <GKDashboardMultiplayerPickerDelegate> *multiplayerPickerDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKDashboardMultiplayerPickerViewController .cxx_destruct]
  -[GKDashboardMultiplayerPickerViewController message]
  -[GKDashboardMultiplayerPickerViewController setMessage:]
  -[GKDashboardMultiplayerPickerViewController completionHandler]
  -[GKDashboardMultiplayerPickerViewController setCompletionHandler:]
  -[GKDashboardMultiplayerPickerViewController traitCollectionDidChange:]
  -[GKDashboardMultiplayerPickerViewController preferredFocusEnvironments]
  -[GKDashboardMultiplayerPickerViewController scrollViewDidScroll:]
  -[GKDashboardMultiplayerPickerViewController willTransitionToTraitCollection:withTransitionCoordinator:]
  -[GKDashboardMultiplayerPickerViewController viewWillAppear:]
  -[GKDashboardMultiplayerPickerViewController viewWillDisappear:]
  -[GKDashboardMultiplayerPickerViewController viewDidLoad]
  -[GKDashboardMultiplayerPickerViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[GKDashboardMultiplayerPickerViewController viewDidAppear:]
  -[GKDashboardMultiplayerPickerViewController viewDidDisappear:]
  -[GKDashboardMultiplayerPickerViewController effectView]
  -[GKDashboardMultiplayerPickerViewController searchController]
  -[GKDashboardMultiplayerPickerViewController setSearchController:]
  -[GKDashboardMultiplayerPickerViewController searchBarCancelButtonClicked:]
  -[GKDashboardMultiplayerPickerViewController searchBarTextDidBeginEditing:]
  -[GKDashboardMultiplayerPickerViewController setDescriptionLabel:]
  -[GKDashboardMultiplayerPickerViewController descriptionLabel]
  -[GKDashboardMultiplayerPickerViewController collectionView:didSelectItemAtIndexPath:]
  -[GKDashboardMultiplayerPickerViewController collectionView:didDeselectItemAtIndexPath:]
  -[GKDashboardMultiplayerPickerViewController viewSafeAreaInsetsDidChange]
  -[GKDashboardMultiplayerPickerViewController clearSelection]
  -[GKDashboardMultiplayerPickerViewController addMessage:]
  -[GKDashboardMultiplayerPickerViewController textFieldShouldReturn:]
  -[GKDashboardMultiplayerPickerViewController setSearchText:]
  -[GKDashboardMultiplayerPickerViewController setEffectView:]
  -[GKDashboardMultiplayerPickerViewController setSearching:]
  -[GKDashboardMultiplayerPickerViewController updateSearchResultsForSearchController:]
  -[GKDashboardMultiplayerPickerViewController send:]
  -[GKDashboardMultiplayerPickerViewController hasData]
  -[GKDashboardMultiplayerPickerViewController cancel:]
  -[GKDashboardMultiplayerPickerViewController isSearching]
  -[GKDashboardMultiplayerPickerViewController sendButton]
  -[GKDashboardMultiplayerPickerViewController setSendButton:]
  -[GKDashboardMultiplayerPickerViewController sectionControl]
  -[GKDashboardMultiplayerPickerViewController messageField]
  -[GKDashboardMultiplayerPickerViewController _updateCollectionView]
  -[GKDashboardMultiplayerPickerViewController setInitiallySelectedPlayers:]
  -[GKDashboardMultiplayerPickerViewController setScrollingHeaderTopConstraintConstant:]
  -[GKDashboardMultiplayerPickerViewController setInitialInsets:]
  -[GKDashboardMultiplayerPickerViewController setShouldApplyInitialOffset:]
  -[GKDashboardMultiplayerPickerViewController adjustCustomizeMessageConstraint]
  -[GKDashboardMultiplayerPickerViewController _updateButtonEnableState]
  -[GKDashboardMultiplayerPickerViewController applyInitialContentOffset]
  -[GKDashboardMultiplayerPickerViewController setShouldIgnoreClearSelection:]
  -[GKDashboardMultiplayerPickerViewController dataUpdated:withError:]
  -[GKDashboardMultiplayerPickerViewController setupNoContentView:withError:]
  -[GKDashboardMultiplayerPickerViewController initiallySelectedPlayers]
  -[GKDashboardMultiplayerPickerViewController shouldIgnoreClearSelection]
  -[GKDashboardMultiplayerPickerViewController customizeMessageButton]
  -[GKDashboardMultiplayerPickerViewController setCustomizeMessageButton:]
  -[GKDashboardMultiplayerPickerViewController setMessageField:]
  -[GKDashboardMultiplayerPickerViewController scrollingHeader]
  -[GKDashboardMultiplayerPickerViewController setScrollingHeader:]
  -[GKDashboardMultiplayerPickerViewController scrollingHeaderTopConstraint]
  -[GKDashboardMultiplayerPickerViewController setScrollingHeaderTopConstraint:]
  -[GKDashboardMultiplayerPickerViewController scrollingHeaderTopConstraintConstant]
  -[GKDashboardMultiplayerPickerViewController initialInsets]
  -[GKDashboardMultiplayerPickerViewController shouldApplyInitialOffset]
  -[GKDashboardMultiplayerPickerViewController customizeMessageBottomConstraint]
  -[GKDashboardMultiplayerPickerViewController setCustomizeMessageBottomConstraint:]
  -[GKDashboardMultiplayerPickerViewController initialCustomizeMessageBottomConstraintConstant]
  -[GKDashboardMultiplayerPickerViewController setInitialCustomizeMessageBottomConstraintConstant:]
  -[GKDashboardMultiplayerPickerViewController composeController]
  -[GKDashboardMultiplayerPickerViewController setComposeController:]
  -[GKDashboardMultiplayerPickerViewController titleStringWithMaxSelectable:]
  -[GKDashboardMultiplayerPickerViewController setSearchResultsCollectionViewController:]
  -[GKDashboardMultiplayerPickerViewController searchResultsCollectionViewController]
  -[GKDashboardMultiplayerPickerViewController pickerDataSource]
  -[GKDashboardMultiplayerPickerViewController excludesContacts]
  -[GKDashboardMultiplayerPickerViewController blurEffectForTraitCollection:]
  -[GKDashboardMultiplayerPickerViewController setSegmentControlHeight:]
  -[GKDashboardMultiplayerPickerViewController contactSkipControl]
  -[GKDashboardMultiplayerPickerViewController setSupportsNearby:]
  -[GKDashboardMultiplayerPickerViewController setNearbyDelegate:]
  -[GKDashboardMultiplayerPickerViewController selectPlayersAtIndexPaths:askDelegateFirst:]
  -[GKDashboardMultiplayerPickerViewController segmentSectionChanged:]
  -[GKDashboardMultiplayerPickerViewController horizontalCollectionViewLayout]
  -[GKDashboardMultiplayerPickerViewController verticalCollectionViewLayout]
  -[GKDashboardMultiplayerPickerViewController multiplayerPickerDelegate]
  -[GKDashboardMultiplayerPickerViewController initWithMaxSelectable:hiddenPlayers:excludeContacts:tournament:]
  -[GKDashboardMultiplayerPickerViewController contactSkipSelected:]
  -[GKDashboardMultiplayerPickerViewController supportsNearby]
  -[GKDashboardMultiplayerPickerViewController nearbyDelegate]
  -[GKDashboardMultiplayerPickerViewController setMultiplayerPickerDelegate:]
  -[GKDashboardMultiplayerPickerViewController segmentControlHeight]
  -[GKDashboardMultiplayerPickerViewController setSectionControl:]
  -[GKDashboardMultiplayerPickerViewController setContactSkipControl:]


GKLoadableContentStateMachine : _GKStateMachine /usr/lib/liblockdown.dylib
  // instance methods
  -[GKLoadableContentStateMachine init]


GKTurnBasedMatchmakerViewController : UINavigationController /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics <GKLocalPlayerListener, GKTurnBasedEventListener, GKExtensionParentViewControllerProtocol>
 @property  GKTurnBasedMatchmakerHostViewController *remoteViewController
 @property  GKMatchRequest *matchRequest
 @property  UIAlertController *alertController
 @property  <GKTurnBasedMatchmakerViewControllerDelegate> *turnBasedMatchmakerDelegate
 @property  BOOL showExistingMatches
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[GKTurnBasedMatchmakerViewController _preventsAppearanceProxyCustomization]

  // instance methods
  -[GKTurnBasedMatchmakerViewController init]
  -[GKTurnBasedMatchmakerViewController dealloc]
  -[GKTurnBasedMatchmakerViewController .cxx_destruct]
  -[GKTurnBasedMatchmakerViewController cancel]
  -[GKTurnBasedMatchmakerViewController finishWithError:]
  -[GKTurnBasedMatchmakerViewController loadView]
  -[GKTurnBasedMatchmakerViewController setAlertController:]
  -[GKTurnBasedMatchmakerViewController alertController]
  -[GKTurnBasedMatchmakerViewController viewWillAppear:]
  -[GKTurnBasedMatchmakerViewController supportedInterfaceOrientations]
  -[GKTurnBasedMatchmakerViewController viewDidAppear:]
  -[GKTurnBasedMatchmakerViewController viewDidDisappear:]
  -[GKTurnBasedMatchmakerViewController shouldAutorotateToInterfaceOrientation:]
  -[GKTurnBasedMatchmakerViewController remoteViewController]
  -[GKTurnBasedMatchmakerViewController setRemoteViewController:]
  -[GKTurnBasedMatchmakerViewController _setupRemoteViewController]
  -[GKTurnBasedMatchmakerViewController _setupChildViewController]
  -[GKTurnBasedMatchmakerViewController authenticationChanged:]
  -[GKTurnBasedMatchmakerViewController extensionDidFinishWithError:]
  -[GKTurnBasedMatchmakerViewController shouldShowPlayForTurnBasedMatch]
  -[GKTurnBasedMatchmakerViewController shouldShowQuitForTurnBasedMatch]
  -[GKTurnBasedMatchmakerViewController player:receivedTurnEventForMatch:didBecomeActive:]
  -[GKTurnBasedMatchmakerViewController turnBasedMatchmakerDelegate]
  -[GKTurnBasedMatchmakerViewController matchRequest]
  -[GKTurnBasedMatchmakerViewController setShowExistingMatches:]
  -[GKTurnBasedMatchmakerViewController initWithMatchRequest:]
  -[GKTurnBasedMatchmakerViewController finishWithMatch:]
  -[GKTurnBasedMatchmakerViewController playerQuitMatch:]
  -[GKTurnBasedMatchmakerViewController setTurnBasedMatchmakerDelegate:]
  -[GKTurnBasedMatchmakerViewController setMatchRequest:]
  -[GKTurnBasedMatchmakerViewController showExistingMatches]


GKFriendRequestComposeViewController : UINavigationController /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  NSString *message
 @property  unsigned long recipientCount
 @property  unsigned int rid
 @property  UIAlertController *alertController
 @property  <GKFriendRequestComposeViewControllerDelegate> *composeViewDelegate

  // class methods
  +[GKFriendRequestComposeViewController maxNumberOfRecipients]
  +[GKFriendRequestComposeViewController _preventsAppearanceProxyCustomization]

  // instance methods
  -[GKFriendRequestComposeViewController init]
  -[GKFriendRequestComposeViewController dealloc]
  -[GKFriendRequestComposeViewController message]
  -[GKFriendRequestComposeViewController setMessage:]
  -[GKFriendRequestComposeViewController setRecipientCount:]
  -[GKFriendRequestComposeViewController setAlertController:]
  -[GKFriendRequestComposeViewController alertController]
  -[GKFriendRequestComposeViewController viewWillAppear:]
  -[GKFriendRequestComposeViewController supportedInterfaceOrientations]
  -[GKFriendRequestComposeViewController viewDidAppear:]
  -[GKFriendRequestComposeViewController viewDidDisappear:]
  -[GKFriendRequestComposeViewController shouldAutomaticallyForwardAppearanceMethods]
  -[GKFriendRequestComposeViewController shouldAutomaticallyForwardRotationMethods]
  -[GKFriendRequestComposeViewController automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers]
  -[GKFriendRequestComposeViewController recipientCount]
  -[GKFriendRequestComposeViewController setComposeViewDelegate:]
  -[GKFriendRequestComposeViewController composeViewDelegate]
  -[GKFriendRequestComposeViewController _setupChildViewController]
  -[GKFriendRequestComposeViewController sendFinishedMessageToDelegateCancelled:]
  -[GKFriendRequestComposeViewController prepareForNewRecipients:]
  -[GKFriendRequestComposeViewController rid]
  -[GKFriendRequestComposeViewController setRid:]
  -[GKFriendRequestComposeViewController _addRecipientInternals:]
  -[GKFriendRequestComposeViewController addRecipientPlayers:]
  -[GKFriendRequestComposeViewController addRecipientsWithPlayerIDs:]
  -[GKFriendRequestComposeViewController addRecipientsWithEmailAddresses:]


GKDashboardButtonSectionHeaderView : GKDashboardSectionHeaderView
 @property  UIButton *button
 @property  NSLayoutConstraint *titleToButtonConstraint
 @property  NSLayoutConstraint *rightMarginConstraint
 @property  NSString *buttonTitle
 @property  id buttonTarget
 @property  SEL buttonAction

  // class methods
  +[GKDashboardButtonSectionHeaderView widthForTitle:buttonTitle:]
  +[GKDashboardButtonSectionHeaderView platformSizeForTitle:buttonTitle:]
  +[GKDashboardButtonSectionHeaderView widthForTitle:]
  +[GKDashboardButtonSectionHeaderView platformSizeForTitle:]

  // instance methods
  -[GKDashboardButtonSectionHeaderView intrinsicContentSize]
  -[GKDashboardButtonSectionHeaderView button]
  -[GKDashboardButtonSectionHeaderView buttonTitle]
  -[GKDashboardButtonSectionHeaderView awakeFromNib]
  -[GKDashboardButtonSectionHeaderView setButtonAction:]
  -[GKDashboardButtonSectionHeaderView buttonPressed:]
  -[GKDashboardButtonSectionHeaderView setButton:]
  -[GKDashboardButtonSectionHeaderView buttonAction]
  -[GKDashboardButtonSectionHeaderView setButtonTitle:]
  -[GKDashboardButtonSectionHeaderView buttonTarget]
  -[GKDashboardButtonSectionHeaderView setButtonTarget:]
  -[GKDashboardButtonSectionHeaderView titleToButtonConstraint]
  -[GKDashboardButtonSectionHeaderView setTitleToButtonConstraint:]
  -[GKDashboardButtonSectionHeaderView rightMarginConstraint]
  -[GKDashboardButtonSectionHeaderView setRightMarginConstraint:]


GKGameCenterViewController : UINavigationController /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics <GKExtensionParentViewControllerProtocol>
 @property  GKDashboardHostViewController *remoteViewController
 @property  long long leaderboardTimeScope
 @property  NSString *leaderboardIdentifier
 @property  NSString *leaderboardCategory
 @property  UIAlertController *alertController
 @property  <GKGameCenterControllerDelegate> *gameCenterDelegate
 @property  long long viewState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[GKGameCenterViewController accessInstanceVariablesDirectly]
  +[GKGameCenterViewController _preventsAppearanceProxyCustomization]

  // instance methods
  -[GKGameCenterViewController init]
  -[GKGameCenterViewController dealloc]
  -[GKGameCenterViewController .cxx_destruct]
  -[GKGameCenterViewController loadView]
  -[GKGameCenterViewController setAlertController:]
  -[GKGameCenterViewController alertController]
  -[GKGameCenterViewController viewWillAppear:]
  -[GKGameCenterViewController supportedInterfaceOrientations]
  -[GKGameCenterViewController viewDidAppear:]
  -[GKGameCenterViewController viewDidDisappear:]
  -[GKGameCenterViewController shouldAutorotateToInterfaceOrientation:]
  -[GKGameCenterViewController shouldAutomaticallyForwardAppearanceMethods]
  -[GKGameCenterViewController shouldAutomaticallyForwardRotationMethods]
  -[GKGameCenterViewController automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers]
  -[GKGameCenterViewController remoteViewController]
  -[GKGameCenterViewController setRemoteViewController:]
  -[GKGameCenterViewController viewState]
  -[GKGameCenterViewController setViewState:]
  -[GKGameCenterViewController _setupRemoteViewController]
  -[GKGameCenterViewController setLeaderboardCategory:]
  -[GKGameCenterViewController leaderboardCategory]
  -[GKGameCenterViewController leaderboardIdentifier]
  -[GKGameCenterViewController gameCenterDelegate]
  -[GKGameCenterViewController notifyDelegateOnWillFinish]
  -[GKGameCenterViewController setLeaderboardIdentifier:]
  -[GKGameCenterViewController _setupChildViewController]
  -[GKGameCenterViewController extensionDidFinishWithError:]
  -[GKGameCenterViewController shouldShowPlayForTurnBasedMatch]
  -[GKGameCenterViewController shouldShowQuitForTurnBasedMatch]
  -[GKGameCenterViewController shouldShowPlayForChallenge]
  -[GKGameCenterViewController leaderboardTimeScope]
  -[GKGameCenterViewController setLeaderboardTimeScope:]
  -[GKGameCenterViewController setGameCenterDelegate:]
  -[GKGameCenterViewController setViewStateFromExtension:]
  -[GKGameCenterViewController setLeaderboardIdentifierFromExtension:]
  -[GKGameCenterViewController setLeaderboardTimeScopeFromExtension:]


GKAchievementSharingInfo : NSObject <NSCoding, NSSecureCoding>
 @property  GKAchievement *achievement
 @property  GKPlayer *player
 @property  GKGame *game
 @property  UIImage *iconImage
 @property  UIImage *badgeImage
 @property  BOOL complete

  // class methods
  +[GKAchievementSharingInfo supportsSecureCoding]

  // instance methods
  -[GKAchievementSharingInfo dealloc]
  -[GKAchievementSharingInfo encodeWithCoder:]
  -[GKAchievementSharingInfo initWithCoder:]
  -[GKAchievementSharingInfo complete]
  -[GKAchievementSharingInfo setComplete:]
  -[GKAchievementSharingInfo iconImage]
  -[GKAchievementSharingInfo player]
  -[GKAchievementSharingInfo setPlayer:]
  -[GKAchievementSharingInfo setBadgeImage:]
  -[GKAchievementSharingInfo badgeImage]
  -[GKAchievementSharingInfo setIconImage:]
  -[GKAchievementSharingInfo game]
  -[GKAchievementSharingInfo setGame:]
  -[GKAchievementSharingInfo operationThatBlocksUntilLoaded]
  -[GKAchievementSharingInfo thumbnailForActivityType:]
  -[GKAchievementSharingInfo itemsForActivityType:]
  -[GKAchievementSharingInfo subjectForEmailActivity]
  -[GKAchievementSharingInfo achievement]
  -[GKAchievementSharingInfo setAchievement:]
  -[GKAchievementSharingInfo initWithAchievement:forGame:]


GKFriendListCell : UITableViewCell /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  GKDashboardPlayerPhotoView *friendPhoto
 @property  UILabel *friendName
 @property  UILabel *friendLastPlayedGame
 @property  NSLayoutConstraint *friendPhotoTopConstraint
 @property  NSLayoutConstraint *friendNameTopConstraint

  // instance methods
  -[GKFriendListCell .cxx_destruct]
  -[GKFriendListCell prepareForReuse]
  -[GKFriendListCell awakeFromNib]
  -[GKFriendListCell setPlayer:]
  -[GKFriendListCell friendPhoto]
  -[GKFriendListCell friendName]
  -[GKFriendListCell friendLastPlayedGame]
  -[GKFriendListCell friendPhotoTopConstraint]
  -[GKFriendListCell friendNameTopConstraint]
  -[GKFriendListCell setFriendPhoto:]
  -[GKFriendListCell setFriendName:]
  -[GKFriendListCell setFriendLastPlayedGame:]
  -[GKFriendListCell setFriendPhotoTopConstraint:]
  -[GKFriendListCell setFriendNameTopConstraint:]


GKContactDataSource : NSObject
 @property  CNContactStore *store
 @property  NSArray *contacts
 @property  NSArray *sectionHeaders
 @property  NSDictionary *sectionToContactIndexes
 @property  NSArray *skipValues
 @property  NSDictionary *skipToContactIndexes

  // instance methods
  -[GKContactDataSource init]
  -[GKContactDataSource dealloc]
  -[GKContactDataSource store]
  -[GKContactDataSource setStore:]
  -[GKContactDataSource contacts]
  -[GKContactDataSource setContacts:]
  -[GKContactDataSource setSectionHeaders:]
  -[GKContactDataSource sectionHeaders]
  -[GKContactDataSource setSkipValues:]
  -[GKContactDataSource setSectionToContactIndexes:]
  -[GKContactDataSource setSkipToContactIndexes:]
  -[GKContactDataSource loadContactsWithHandler:]
  -[GKContactDataSource sectionToContactIndexes]
  -[GKContactDataSource skipValues]
  -[GKContactDataSource skipToContactIndexes]


GKHostedViewController : UIViewController /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  GKRemoteViewServiceController *remoteViewController
 @property  BOOL isRequestingRemoteViewController
 @property  BOOL gkIsDisappearing
 @property  GKGame *game
 @property  BOOL shouldPresentRemoteViewController
 @property  BOOL presentingRemoteViewController
 @property  @? remoteViewReadyHandler

  // instance methods
  -[GKHostedViewController init]
  -[GKHostedViewController dealloc]
  -[GKHostedViewController dismissViewControllerAnimated:completion:]
  -[GKHostedViewController viewWillAppear:]
  -[GKHostedViewController viewWillDisappear:]
  -[GKHostedViewController viewDidLoad]
  -[GKHostedViewController supportedInterfaceOrientations]
  -[GKHostedViewController viewDidAppear:]
  -[GKHostedViewController viewDidDisappear:]
  -[GKHostedViewController _presentingViewController]
  -[GKHostedViewController shouldAutorotateToInterfaceOrientation:]
  -[GKHostedViewController dismissModalViewControllerAnimated:]
  -[GKHostedViewController shouldAutomaticallyForwardAppearanceMethods]
  -[GKHostedViewController shouldAutomaticallyForwardRotationMethods]
  -[GKHostedViewController automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers]
  -[GKHostedViewController didReceiveMemoryWarning]
  -[GKHostedViewController remoteViewController]
  -[GKHostedViewController setRemoteViewController:]
  -[GKHostedViewController game]
  -[GKHostedViewController setGame:]
  -[GKHostedViewController donePressed:]
  -[GKHostedViewController shouldPresentRemoteViewController]
  -[GKHostedViewController resetRemoteViewController]
  -[GKHostedViewController requestRemoteViewControllerIfNeeded]
  -[GKHostedViewController setPresentingRemoteViewController:]
  -[GKHostedViewController presentRemoteViewControllerIfNeeded]
  -[GKHostedViewController setGkIsDisappearing:]
  -[GKHostedViewController hostSideViewControllerClassName]
  -[GKHostedViewController serviceSideViewControllerClassName]
  -[GKHostedViewController didGetRemoteViewController]
  -[GKHostedViewController setRemoteViewReadyHandler:]
  -[GKHostedViewController gkIsDisappearing]
  -[GKHostedViewController presentingRemoteViewController]
  -[GKHostedViewController setShouldPresentRemoteViewController:]
  -[GKHostedViewController remoteViewReadyHandler]
  -[GKHostedViewController isRequestingRemoteViewController]
  -[GKHostedViewController setIsRequestingRemoteViewController:]


GKUITheme : NSObject
 @property  NSCache *resourceCache
 @property  GKNetworkImageSource *macGameIconSource
 @property  GKNetworkImageSource *photoListSource
 @property  GKNetworkImageSource *photoDetailSource
 @property  GKNetworkImageSource *iconLeaderboardListSource
 @property  GKNetworkImageSource *iconLeaderboardSetListSource
 @property  GKNetworkImageSource *untreatedAchievementImageSource
 @property  GKNetworkImageSource *untreatedAchievementImageDetailSource
 @property  UIImage *ratingStarsBackgroundImage
 @property  UIImage *ratingStarsForegroundImage
 @property  UIImage *interactiveRatingStarsForeground
 @property  UIImage *interactiveRatingStarsBackground
 @property  {CGSize=dd} formSheetSize
 @property  double formSheetCornerRadius

  // class methods
  +[GKUITheme sharedTheme]

  // instance methods
  -[GKUITheme init]
  -[GKUITheme dealloc]
  -[GKUITheme formSheetSize]
  -[GKUITheme imageNamed:]
  -[GKUITheme playerPickerSelectedImage]
  -[GKUITheme playerPickerUnselectedImage]
  -[GKUITheme ratingStarsBackgroundImage]
  -[GKUITheme ratingStarsForegroundImage]
  -[GKUITheme formSheetCornerRadius]
  -[GKUITheme avatarSourceWithDimension:]
  -[GKUITheme statusDotImage]
  -[GKUITheme bubbleFriends]
  -[GKUITheme bubbleHighlight]
  -[GKUITheme bubbleAccept]
  -[GKUITheme bubbleChallenges]
  -[GKUITheme bubbleDecline]
  -[GKUITheme bubbleGames]
  -[GKUITheme bubbleInvite]
  -[GKUITheme bubblePlay]
  -[GKUITheme bubblePoints]
  -[GKUITheme bubbleRequests]
  -[GKUITheme bubbleShare]
  -[GKUITheme bubbleSignin]
  -[GKUITheme bubbleTurns]
  -[GKUITheme macGameIconSource]
  -[GKUITheme clearResourceCache]
  -[GKUITheme messagesInviteBackgroundImage]
  -[GKUITheme iconLeaderboardListSource]
  -[GKUITheme resourceCache]
  -[GKUITheme setResourceCache:]
  -[GKUITheme resourceWithName:missingHandler:]
  -[GKUITheme resourceForSelector:missingHandler:]
  -[GKUITheme defaultPlayerPhoto]
  -[GKUITheme defaultLeaderboardIcon]
  -[GKUITheme interactiveRatingStarsForeground]
  -[GKUITheme interactiveRatingStarsBackground]
  -[GKUITheme eventIconImage]
  -[GKUITheme achievementsNotStartedIcon]
  -[GKUITheme achievementsDefaultIcon]
  -[GKUITheme untreatedAchievementImageSource]
  -[GKUITheme untreatedAchievementImageDetailSource]
  -[GKUITheme monogramSourceWithDimension:]
  -[GKUITheme placeholderSourceWithDimension:]
  -[GKUITheme photoListSource]
  -[GKUITheme photoDetailSource]
  -[GKUITheme iconLeaderboardSetListSource]
  -[GKUITheme addPlayerButtonImage]
  -[GKUITheme removePlayerButtonImage]
  -[GKUITheme navbarActionButtonIcon]


GKCollectionColumnLayout : GKCollectionFocusingLayout
 @property  NSDictionary *itemAttributes
 @property  NSDictionary *headerAttributes
 @property  NSDictionary *decorationAttributes
 @property  NSDictionary *footerAttributes

  // instance methods
  -[GKCollectionColumnLayout .cxx_destruct]
  -[GKCollectionColumnLayout prepareLayout]
  -[GKCollectionColumnLayout layoutAttributesForElementsInRect:]
  -[GKCollectionColumnLayout layoutAttributesForItemAtIndexPath:]
  -[GKCollectionColumnLayout collectionViewContentSize]
  -[GKCollectionColumnLayout layoutAttributesForSupplementaryViewOfKind:atIndexPath:]
  -[GKCollectionColumnLayout footerAttributes]
  -[GKCollectionColumnLayout setHeaderAttributes:]
  -[GKCollectionColumnLayout setFooterAttributes:]
  -[GKCollectionColumnLayout setItemAttributes:]
  -[GKCollectionColumnLayout applyDefaults]
  -[GKCollectionColumnLayout itemAttributes]
  -[GKCollectionColumnLayout headerAttributes]
  -[GKCollectionColumnLayout setDecorationAttributes:]
  -[GKCollectionColumnLayout decorationAttributes]


GKDashboardTurnDetailViewController : GKDetailViewController
 @property  UIView *contentVerticalCenteringView
 @property  UIView *turnDetailContentView
 @property  UILabel *playingWithLabel
 @property  UILabel *createdLabel
 @property  UIButton *firstButton
 @property  UIButton *secondButton
 @property  NSLayoutConstraint *secondButtonCenteringConstraint
 @property  GKTurnBasedMatch *match
 @property  BOOL shouldShowPlay
 @property  BOOL shouldShowQuit

  // instance methods
  -[GKDashboardTurnDetailViewController dealloc]
  -[GKDashboardTurnDetailViewController preferredFocusEnvironments]
  -[GKDashboardTurnDetailViewController viewDidLoad]
  -[GKDashboardTurnDetailViewController acceptInvitation:]
  -[GKDashboardTurnDetailViewController declineInvitation:]
  -[GKDashboardTurnDetailViewController match]
  -[GKDashboardTurnDetailViewController setMatch:]
  -[GKDashboardTurnDetailViewController firstButton]
  -[GKDashboardTurnDetailViewController setFirstButton:]
  -[GKDashboardTurnDetailViewController secondButton]
  -[GKDashboardTurnDetailViewController setSecondButton:]
  -[GKDashboardTurnDetailViewController shouldShowPlay]
  -[GKDashboardTurnDetailViewController setShouldShowPlay:]
  -[GKDashboardTurnDetailViewController playingWithString]
  -[GKDashboardTurnDetailViewController chooseMatch:]
  -[GKDashboardTurnDetailViewController quitMatch:]
  -[GKDashboardTurnDetailViewController removeMatch:]
  -[GKDashboardTurnDetailViewController disableButtons]
  -[GKDashboardTurnDetailViewController refreshPresenter]
  -[GKDashboardTurnDetailViewController handleTurnBasedEvent:]
  -[GKDashboardTurnDetailViewController initWithTurnBasedMatch:]
  -[GKDashboardTurnDetailViewController turnOK:]
  -[GKDashboardTurnDetailViewController shouldShowQuit]
  -[GKDashboardTurnDetailViewController setShouldShowQuit:]
  -[GKDashboardTurnDetailViewController contentVerticalCenteringView]
  -[GKDashboardTurnDetailViewController setContentVerticalCenteringView:]
  -[GKDashboardTurnDetailViewController turnDetailContentView]
  -[GKDashboardTurnDetailViewController setTurnDetailContentView:]
  -[GKDashboardTurnDetailViewController playingWithLabel]
  -[GKDashboardTurnDetailViewController setPlayingWithLabel:]
  -[GKDashboardTurnDetailViewController createdLabel]
  -[GKDashboardTurnDetailViewController setCreatedLabel:]
  -[GKDashboardTurnDetailViewController secondButtonCenteringConstraint]
  -[GKDashboardTurnDetailViewController setSecondButtonCenteringConstraint:]


GKDashboardPlayerShadowView : UIView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  UIView *parentView
 @property  GKDashboardPlayerPhotoView *photoView
 @property  GKPlayer *player
 @property  UICollectionViewCell *parentCell
 @property  BOOL isUsingPlaceholder

  // instance methods
  -[GKDashboardPlayerShadowView initWithFrame:]
  -[GKDashboardPlayerShadowView layoutSubviews]
  -[GKDashboardPlayerShadowView awakeFromNib]
  -[GKDashboardPlayerShadowView player]
  -[GKDashboardPlayerShadowView setPlayer:]
  -[GKDashboardPlayerShadowView photoView]
  -[GKDashboardPlayerShadowView setPhotoView:]
  -[GKDashboardPlayerShadowView invalidatePhoto]
  -[GKDashboardPlayerShadowView isUsingPlaceholder]
  -[GKDashboardPlayerShadowView setupPhoto]
  -[GKDashboardPlayerShadowView parentView]
  -[GKDashboardPlayerShadowView parentCell]
  -[GKDashboardPlayerShadowView setParentCell:]


GKDashboardCollectionViewController : GKLoadingViewController <NSPopoverDelegate, UICollectionViewDataSource, UICollectionViewDelegate>
 @property  UICollectionView *collectionView
 @property  {UIEdgeInsets=dddd} contentInsetsBeforeKeyboard
 @property  {UIEdgeInsets=dddd} scrollInsetsBeforeKeyboard
 @property  NSLayoutConstraint *keyboardConstraint
 @property  double keyboardConstraintDefaultConstant
 @property  UIView *keyboardAdjustedView
 @property  UIView *collectionContainerView
 @property  BOOL isLoading
 @property  GKCollectionDataSource *dataSource
 @property  BOOL autoWidthUsesTwoColumnsWhenSpace
 @property  NSMutableIndexSet *sectionsToReload
 @property  GKNoContentView *noContentView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKDashboardCollectionViewController dealloc]
  -[GKDashboardCollectionViewController .cxx_destruct]
  -[GKDashboardCollectionViewController dataSource]
  -[GKDashboardCollectionViewController setDataSource:]
  -[GKDashboardCollectionViewController loadView]
  -[GKDashboardCollectionViewController traitCollectionDidChange:]
  -[GKDashboardCollectionViewController preferredFocusEnvironments]
  -[GKDashboardCollectionViewController initWithNibName:bundle:]
  -[GKDashboardCollectionViewController viewWillAppear:]
  -[GKDashboardCollectionViewController collectionView]
  -[GKDashboardCollectionViewController viewDidLoad]
  -[GKDashboardCollectionViewController numberOfSectionsInCollectionView:]
  -[GKDashboardCollectionViewController collectionView:numberOfItemsInSection:]
  -[GKDashboardCollectionViewController collectionView:cellForItemAtIndexPath:]
  -[GKDashboardCollectionViewController collectionView:canFocusItemAtIndexPath:]
  -[GKDashboardCollectionViewController viewDidAppear:]
  -[GKDashboardCollectionViewController collectionView:viewForSupplementaryElementOfKind:atIndexPath:]
  -[GKDashboardCollectionViewController setCollectionView:]
  -[GKDashboardCollectionViewController collectionView:shouldSelectItemAtIndexPath:]
  -[GKDashboardCollectionViewController collectionView:didSelectItemAtIndexPath:]
  -[GKDashboardCollectionViewController collectionView:didDeselectItemAtIndexPath:]
  -[GKDashboardCollectionViewController collectionView:willDisplayCell:forItemAtIndexPath:]
  -[GKDashboardCollectionViewController collectionView:didFocusItemAtIndexPath:]
  -[GKDashboardCollectionViewController collectionView:didUnfocusItemAtIndexPath:]
  -[GKDashboardCollectionViewController collectionView:layout:sizeForItemAtIndexPath:]
  -[GKDashboardCollectionViewController collectionView:layout:referenceSizeForHeaderInSection:]
  -[GKDashboardCollectionViewController collectionView:layout:referenceSizeForFooterInSection:]
  -[GKDashboardCollectionViewController clearSelection]
  -[GKDashboardCollectionViewController setNoContentView:]
  -[GKDashboardCollectionViewController noContentView]
  -[GKDashboardCollectionViewController loadData]
  -[GKDashboardCollectionViewController isLoading]
  -[GKDashboardCollectionViewController hasData]
  -[GKDashboardCollectionViewController keyboardWillShow:]
  -[GKDashboardCollectionViewController keyboardWillHide:]
  -[GKDashboardCollectionViewController setupDataSource]
  -[GKDashboardCollectionViewController contentSizeCategoryDidChangeNotification:]
  -[GKDashboardCollectionViewController didEnterLoadingState]
  -[GKDashboardCollectionViewController setAutoWidthColumns:]
  -[GKDashboardCollectionViewController setToHorizontalLayout:]
  -[GKDashboardCollectionViewController setAutoWidthUsesTwoColumnsWhenSpace:]
  -[GKDashboardCollectionViewController dataUpdated:withError:]
  -[GKDashboardCollectionViewController setupNoContentView:withError:]
  -[GKDashboardCollectionViewController setNeedsRefresh]
  -[GKDashboardCollectionViewController horizontalCollectionViewLayout]
  -[GKDashboardCollectionViewController verticalCollectionViewLayout]
  -[GKDashboardCollectionViewController createCollectionViewInsideView:]
  -[GKDashboardCollectionViewController setKeyboardConstraintDefaultConstant:]
  -[GKDashboardCollectionViewController setKeyboardAdjustedView:]
  -[GKDashboardCollectionViewController prepareForAutomaticTwoColumnLayout]
  -[GKDashboardCollectionViewController hideNoContentPlaceholder]
  -[GKDashboardCollectionViewController showNoContentPlaceholderForError:]
  -[GKDashboardCollectionViewController clearSelectionForCollectionView:]
  -[GKDashboardCollectionViewController didEnterRefreshingState]
  -[GKDashboardCollectionViewController didExitRefreshingState]
  -[GKDashboardCollectionViewController popoverDidClose:]
  -[GKDashboardCollectionViewController windowDidEndSheet:]
  -[GKDashboardCollectionViewController autoWidthUsesTwoColumnsWhenSpace]
  -[GKDashboardCollectionViewController sectionsToReload]
  -[GKDashboardCollectionViewController setSectionsToReload:]
  -[GKDashboardCollectionViewController contentInsetsBeforeKeyboard]
  -[GKDashboardCollectionViewController setContentInsetsBeforeKeyboard:]
  -[GKDashboardCollectionViewController scrollInsetsBeforeKeyboard]
  -[GKDashboardCollectionViewController setScrollInsetsBeforeKeyboard:]
  -[GKDashboardCollectionViewController keyboardConstraint]
  -[GKDashboardCollectionViewController setKeyboardConstraint:]
  -[GKDashboardCollectionViewController keyboardConstraintDefaultConstant]
  -[GKDashboardCollectionViewController keyboardAdjustedView]
  -[GKDashboardCollectionViewController collectionContainerView]
  -[GKDashboardCollectionViewController setCollectionContainerView:]


GKViewController : UIViewController /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  long long gkFocusBubbleType
 @property  GKColorPalette *colorPalette
 @property  BOOL shouldUpdateContentOnlyWhenAuthenticated
 @property  GKViewController *rootViewController

  // class methods
  +[GKViewController _shouldForwardViewWillTransitionToSize]

  // instance methods
  -[GKViewController dealloc]
  -[GKViewController loadView]
  -[GKViewController setRootViewController:]
  -[GKViewController rootViewController]
  -[GKViewController viewWillAppear:]
  -[GKViewController viewDidAppear:]
  -[GKViewController popToRootViewControllerAnimated:]
  -[GKViewController shouldAutorotateToInterfaceOrientation:]
  -[GKViewController setColorPalette:]
  -[GKViewController colorPalette]
  -[GKViewController shouldUpdateContentOnlyWhenAuthenticated]
  -[GKViewController displayUsingSplitNavigationBar]
  -[GKViewController setShouldUpdateContentOnlyWhenAuthenticated:]
  -[GKViewController gkFocusBubbleType]
  -[GKViewController setGkFocusBubbleType:]


GKNavigationControllerDeferredTransitionInfo : NSObject
 @property  UIViewController *viewController
 @property  int type
 @property  BOOL animated

  // instance methods
  -[GKNavigationControllerDeferredTransitionInfo dealloc]
  -[GKNavigationControllerDeferredTransitionInfo type]
  -[GKNavigationControllerDeferredTransitionInfo setType:]
  -[GKNavigationControllerDeferredTransitionInfo setViewController:]
  -[GKNavigationControllerDeferredTransitionInfo viewController]
  -[GKNavigationControllerDeferredTransitionInfo animated]
  -[GKNavigationControllerDeferredTransitionInfo setAnimated:]


GKNavigationController : UINavigationController /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics <UIViewControllerRestoration, UINavigationBarDelegate>
 @property  NSMutableArray *deferredTransitions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[GKNavigationController _shouldForwardViewWillTransitionToSize]
  +[GKNavigationController viewControllerWithRestorationIdentifierPath:coder:]

  // instance methods
  -[GKNavigationController init]
  -[GKNavigationController dealloc]
  -[GKNavigationController initWithCoder:]
  -[GKNavigationController initWithNibName:bundle:]
  -[GKNavigationController supportedInterfaceOrientations]
  -[GKNavigationController shouldAutorotate]
  -[GKNavigationController pushViewController:animated:]
  -[GKNavigationController popToRootViewControllerAnimated:]
  -[GKNavigationController popViewControllerAnimated:]
  -[GKNavigationController didShowViewController:animated:]
  -[GKNavigationController popToViewController:animated:]
  -[GKNavigationController willShowViewController:animated:]
  -[GKNavigationController initWithRootViewController:]
  -[GKNavigationController setupGKNavigationController]
  -[GKNavigationController setDeferredTransitions:]
  -[GKNavigationController hasEmbeddedPopoverNavigationStack]
  -[GKNavigationController popEmbeddedPopoverViewControllers]
  -[GKNavigationController _gkRestorePopoverWithViewControllers:completion:]
  -[GKNavigationController targetViewControllerForAction:]
  -[GKNavigationController _performDeferredTransition]
  -[GKNavigationController deferredTransitions]
  -[GKNavigationController _deferTransitionOfType:withViewController:animated:]
  -[GKNavigationController _gkPushPresentedViewControllerForCompactSizeClass:]
  -[GKNavigationController _gkViewControllersForRestoringPopover]


GKGradient : NSObject
  // class methods
  +[GKGradient gradientWithColors:atLocations:]

  // instance methods
  -[GKGradient dealloc]
  -[GKGradient CGGradient]
  -[GKGradient initWithColors:atLocations:]


GKTournamentInterface : NSObject
  // class methods
  +[GKTournamentInterface extensionInterface]
  +[GKTournamentInterface hostInterface]


GKComposeHeaderWithStaticRecipients : GKComposeHeaderField
 @property  NSArray *recipientNameStrings

  // instance methods
  -[GKComposeHeaderWithStaticRecipients dealloc]
  -[GKComposeHeaderWithStaticRecipients layoutSubviews]
  -[GKComposeHeaderWithStaticRecipients setRecipientNameStrings:]
  -[GKComposeHeaderWithStaticRecipients recipientNameStrings]


GKBasicCollectionViewDataSource : GKCollectionViewDataSource <NSCopying>
 @property  NSArray *items
 @property  SEL showAllAction
 @property  unsigned long pageSize
 @property  {_NSRange=QQ} preloadedRange
 @property  NSPredicate *filterPredicate

  // instance methods
  -[GKBasicCollectionViewDataSource init]
  -[GKBasicCollectionViewDataSource dealloc]
  -[GKBasicCollectionViewDataSource copyWithZone:]
  -[GKBasicCollectionViewDataSource items]
  -[GKBasicCollectionViewDataSource setItems:]
  -[GKBasicCollectionViewDataSource sectionTitle]
  -[GKBasicCollectionViewDataSource numberOfSectionsInCollectionView:]
  -[GKBasicCollectionViewDataSource collectionView:numberOfItemsInSection:]
  -[GKBasicCollectionViewDataSource collectionView:viewForSupplementaryElementOfKind:atIndexPath:]
  -[GKBasicCollectionViewDataSource pageSize]
  -[GKBasicCollectionViewDataSource setPageSize:]
  -[GKBasicCollectionViewDataSource itemAtIndexPath:]
  -[GKBasicCollectionViewDataSource filterPredicate]
  -[GKBasicCollectionViewDataSource removeItemsAtIndexes:]
  -[GKBasicCollectionViewDataSource setFilterPredicate:]
  -[GKBasicCollectionViewDataSource countOfItems]
  -[GKBasicCollectionViewDataSource _gkDescriptionWithChildren:]
  -[GKBasicCollectionViewDataSource indexPathsForItem:]
  -[GKBasicCollectionViewDataSource removeItemAtIndexPath:completionHandler:]
  -[GKBasicCollectionViewDataSource configureCollectionView:]
  -[GKBasicCollectionViewDataSource collectionViewDidBecomeInactive:]
  -[GKBasicCollectionViewDataSource setShowAllAction:]
  -[GKBasicCollectionViewDataSource showAllAction]
  -[GKBasicCollectionViewDataSource setItemsNoNotify:]
  -[GKBasicCollectionViewDataSource setPreloadedRange:]
  -[GKBasicCollectionViewDataSource setItems:animated:complete:]
  -[GKBasicCollectionViewDataSource itemsAtIndexes:]
  -[GKBasicCollectionViewDataSource insertItems:atIndexes:]
  -[GKBasicCollectionViewDataSource replaceItemsAtIndexes:withItems:]
  -[GKBasicCollectionViewDataSource preloadImagesForItems:startingAtIndex:loadBlock:]
  -[GKBasicCollectionViewDataSource preloadedRange]


GKDefaultNicknameViewController : UIViewController /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics <GKAvatarContainerViewDelegate, CNPhotoPickerViewControllerDelegate, GKNicknameControllerDelegate>
 @property  GKAvatarContainerView *editAvatarView
 @property  UIView *avatarContainer
 @property  UIVisualEffectView *visualEffectView
 @property  UIStackView *contentStackView
 @property  UITextField *nickname
 @property  UIStackView *stackView
 @property  UIView *buttonContainer
 @property  OBBoldTrayButton *continueButton
 @property  UILabel *message
 @property  UIButton *cancelButton
 @property  UIView *cancelContainer
 @property  UIActivityIndicatorView *activityIndicator
 @property  UILabel *mainTitle
 @property  NSLayoutConstraint *topMargin
 @property  NSLayoutConstraint *contentCenterY
 @property  NSLayoutConstraint *bottomMargin
 @property  NSLayoutConstraint *avatarContainerLandscapeHeight
 @property  GKReachability *reachability
 @property  BOOL isAvatarEditingSupported
 @property  GKNicknameController *nicknameController
 @property  <GKOnboardingFlowDelegate> *delegate
 @property  UIView *bubblePlaceholder
 @property  NSMutableDictionary *analyticsPayload
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKDefaultNicknameViewController dealloc]
  -[GKDefaultNicknameViewController delegate]
  -[GKDefaultNicknameViewController setDelegate:]
  -[GKDefaultNicknameViewController .cxx_destruct]
  -[GKDefaultNicknameViewController nickname]
  -[GKDefaultNicknameViewController setNickname:]
  -[GKDefaultNicknameViewController message]
  -[GKDefaultNicknameViewController setMessage:]
  -[GKDefaultNicknameViewController setTopMargin:]
  -[GKDefaultNicknameViewController setBottomMargin:]
  -[GKDefaultNicknameViewController traitCollectionDidChange:]
  -[GKDefaultNicknameViewController viewWillAppear:]
  -[GKDefaultNicknameViewController viewWillDisappear:]
  -[GKDefaultNicknameViewController stackView]
  -[GKDefaultNicknameViewController viewDidLoad]
  -[GKDefaultNicknameViewController viewWillLayoutSubviews]
  -[GKDefaultNicknameViewController viewDidLayoutSubviews]
  -[GKDefaultNicknameViewController topMargin]
  -[GKDefaultNicknameViewController cancelButton]
  -[GKDefaultNicknameViewController setCancelButton:]
  -[GKDefaultNicknameViewController setContinueButton:]
  -[GKDefaultNicknameViewController continueButton]
  -[GKDefaultNicknameViewController visualEffectView]
  -[GKDefaultNicknameViewController viewSafeAreaInsetsDidChange]
  -[GKDefaultNicknameViewController setStackView:]
  -[GKDefaultNicknameViewController activityIndicator]
  -[GKDefaultNicknameViewController setActivityIndicator:]
  -[GKDefaultNicknameViewController reachability]
  -[GKDefaultNicknameViewController setReachability:]
  -[GKDefaultNicknameViewController reachabilityDidChange:]
  -[GKDefaultNicknameViewController keyboardWillShow:]
  -[GKDefaultNicknameViewController photoPickerDidCancel:]
  -[GKDefaultNicknameViewController photoPicker:didUpdatePhotoForContact:withContactImage:]
  -[GKDefaultNicknameViewController keyboardWillHide:]
  -[GKDefaultNicknameViewController setVisualEffectView:]
  -[GKDefaultNicknameViewController mainTitle]
  -[GKDefaultNicknameViewController setMainTitle:]
  -[GKDefaultNicknameViewController dismiss:]
  -[GKDefaultNicknameViewController nicknameController]
  -[GKDefaultNicknameViewController cancelPressed:]
  -[GKDefaultNicknameViewController buttonContainer]
  -[GKDefaultNicknameViewController setButtonContainer:]
  -[GKDefaultNicknameViewController bottomMargin]
  -[GKDefaultNicknameViewController setAvatarContainer:]
  -[GKDefaultNicknameViewController avatarContainer]
  -[GKDefaultNicknameViewController analyticsPayload]
  -[GKDefaultNicknameViewController setAnalyticsPayload:]
  -[GKDefaultNicknameViewController bubblePlaceholder]
  -[GKDefaultNicknameViewController setBubblePlaceholder:]
  -[GKDefaultNicknameViewController nicknameUpdateRequestCompletedWithStatus:error:]
  -[GKDefaultNicknameViewController nicknameTextDidChangeWithMessage:]
  -[GKDefaultNicknameViewController nicknameDidBecomeFirstResponder]
  -[GKDefaultNicknameViewController nicknameDidResignFirstResponder]
  -[GKDefaultNicknameViewController setNicknameController:]
  -[GKDefaultNicknameViewController addEditAvatarContainerView]
  -[GKDefaultNicknameViewController isAvatarEditingSupported]
  -[GKDefaultNicknameViewController enableOrDisableNicknameEditing]
  -[GKDefaultNicknameViewController contentStackView]
  -[GKDefaultNicknameViewController avatarContainerLandscapeHeight]
  -[GKDefaultNicknameViewController editAvatarView]
  -[GKDefaultNicknameViewController fadeNonEssentialViews:]
  -[GKDefaultNicknameViewController animateNicknameTextFieldIntoView:]
  -[GKDefaultNicknameViewController contentCenterY]
  -[GKDefaultNicknameViewController refreshAvatarImage]
  -[GKDefaultNicknameViewController setEditAvatarView:]
  -[GKDefaultNicknameViewController presentAvatarPicker]
  -[GKDefaultNicknameViewController presentDeleteAvatarImageAlert]
  -[GKDefaultNicknameViewController avatarView:didSelectImageWithEditingEnabled:]
  -[GKDefaultNicknameViewController settingsPressed:]
  -[GKDefaultNicknameViewController setContentStackView:]
  -[GKDefaultNicknameViewController cancelContainer]
  -[GKDefaultNicknameViewController setCancelContainer:]
  -[GKDefaultNicknameViewController setContentCenterY:]
  -[GKDefaultNicknameViewController setAvatarContainerLandscapeHeight:]


GKMultiplayerP2PViewController : GKMultiplayerViewController
 @property  long long mode
 @property  GKInvite *acceptedInvite
 @property  double inviteeConnectionTimeStamp
 @property  BOOL hosted
 @property  <GKMultiplayerP2PViewControllerDelegate> *delegate

  // instance methods
  -[GKMultiplayerP2PViewController dealloc]
  -[GKMultiplayerP2PViewController delegate]
  -[GKMultiplayerP2PViewController setDelegate:]
  -[GKMultiplayerP2PViewController setMode:]
  -[GKMultiplayerP2PViewController cancel]
  -[GKMultiplayerP2PViewController mode]
  -[GKMultiplayerP2PViewController finishWithError:]
  -[GKMultiplayerP2PViewController viewDidLoad]
  -[GKMultiplayerP2PViewController viewDidAppear:]
  -[GKMultiplayerP2PViewController applicationWillEnterForeground]
  -[GKMultiplayerP2PViewController setHosted:]
  -[GKMultiplayerP2PViewController configureDataSource]
  -[GKMultiplayerP2PViewController setAutomatchPlayerCount:]
  -[GKMultiplayerP2PViewController isHosted]
  -[GKMultiplayerP2PViewController cancelAlertWithoutDelegateCallback]
  -[GKMultiplayerP2PViewController cancelPendingInvites]
  -[GKMultiplayerP2PViewController havePendingPlayers]
  -[GKMultiplayerP2PViewController startGame]
  -[GKMultiplayerP2PViewController setInviteeConnectionTimeStamp:]
  -[GKMultiplayerP2PViewController sendStatusUpdate]
  -[GKMultiplayerP2PViewController playerConnected:]
  -[GKMultiplayerP2PViewController playerDisconnected:]
  -[GKMultiplayerP2PViewController processStatusUpdateMessageFromBytes:withLength:]
  -[GKMultiplayerP2PViewController playNow]
  -[GKMultiplayerP2PViewController showInviterDisconnectedAlert]
  -[GKMultiplayerP2PViewController showAutomatchingErrorAlert]
  -[GKMultiplayerP2PViewController haveInvitedPlayers]
  -[GKMultiplayerP2PViewController inviteeConnectionTimeStamp]
  -[GKMultiplayerP2PViewController invitePlayers:]
  -[GKMultiplayerP2PViewController acceptedInvite]
  -[GKMultiplayerP2PViewController initWithAcceptedInvite:]
  -[GKMultiplayerP2PViewController setExistingPlayers:]
  -[GKMultiplayerP2PViewController setPlayer:responded:]
  -[GKMultiplayerP2PViewController setPlayer:connected:]
  -[GKMultiplayerP2PViewController setPlayer:sentData:]
  -[GKMultiplayerP2PViewController setInvitesFailedWithError:]
  -[GKMultiplayerP2PViewController setAutomatchFailedWithError:]
  -[GKMultiplayerP2PViewController setFailedWithError:]
  -[GKMultiplayerP2PViewController inviterCancelled]
  -[GKMultiplayerP2PViewController canStartForcedAutomatch]
  -[GKMultiplayerP2PViewController willPresentPlayerPicker:]
  -[GKMultiplayerP2PViewController willQueryGKIDs]
  -[GKMultiplayerP2PViewController loadShareURLWithCompletion:]
  -[GKMultiplayerP2PViewController willShare]
  -[GKMultiplayerP2PViewController shareFinishedWithContactPlayers:legacyPlayers:]
  -[GKMultiplayerP2PViewController removedPlayer:]
  -[GKMultiplayerP2PViewController setAcceptedInvite:]


GKBubbleLayout : NSObject
 @property  {CGPoint=dd} center
 @property  double radius
 @property  NSSet *visibleBubbleSet
 @property  NSArray *bubbleViews
 @property  NSArray *bubbleLocations

  // instance methods
  -[GKBubbleLayout dealloc]
  -[GKBubbleLayout center]
  -[GKBubbleLayout setCenter:]
  -[GKBubbleLayout radius]
  -[GKBubbleLayout setRadius:]
  -[GKBubbleLayout performLayout]
  -[GKBubbleLayout bubbleViews]
  -[GKBubbleLayout showBubble:withSize:atAngle:]
  -[GKBubbleLayout setVisibleBubbleSet:]
  -[GKBubbleLayout visibleBubbleSet]
  -[GKBubbleLayout setBubbleViews:]
  -[GKBubbleLayout bubbleLocations]
  -[GKBubbleLayout setBubbleLocations:]


GKChallengeComposeController : GKSimpleComposeController
 @property  GKComposeHeaderField *challengeField
 @property  GKChallenge *challenge
 @property  NSArray *playersToLoad

  // class methods
  +[GKChallengeComposeController friendPickerFlowForChallenge:selectPlayers:defaultMessage:completionHandler:]
  +[GKChallengeComposeController composeFlowForChallenge:players:defaultMessage:completionHandler:]
  +[GKChallengeComposeController composeAndSendFlowForChallenge:selectPlayers:defaultMessage:forcePicker:readyHandler:completionHandler:]

  // instance methods
  -[GKChallengeComposeController init]
  -[GKChallengeComposeController dealloc]
  -[GKChallengeComposeController cancel]
  -[GKChallengeComposeController challenge]
  -[GKChallengeComposeController loadView]
  -[GKChallengeComposeController viewWillAppear:]
  -[GKChallengeComposeController donePressed]
  -[GKChallengeComposeController setChallenge:]
  -[GKChallengeComposeController initWithChallenge:defaultMessage:players:]
  -[GKChallengeComposeController setPlayersToLoad:]
  -[GKChallengeComposeController setChallengeField:]
  -[GKChallengeComposeController updateChallengeText]
  -[GKChallengeComposeController challengeField]
  -[GKChallengeComposeController playersToLoad]


GKTextStyle : NSObject
 @property  GKColorPalette *palette
 @property  NSString *fontName
 @property  NSString *UIKitFontTextStyleName
 @property  double fontSize
 @property  double minimumLineHeight
 @property  double m34
 @property  double zPosition
 @property  BOOL needsParagraphStyle
 @property  BOOL overrideUIKitFontSize
 @property  SEL fontSizeRebaseSelector
 @property  SEL fontNameRebaseSelector
 @property  UIColor *color
 @property  long long textAlignment
 @property  long long lineBreakMode

  // class methods
  +[GKTextStyle textStyle]
  +[GKTextStyle attributedString:byReplayingFromBaseStyle:systemContentSizeDidChange:]
  +[GKTextStyle scaledValueFromHISpecLeading:forFontTextStyle:]
  +[GKTextStyle standardFontSize]
  +[GKTextStyle bubbleTextScale]
  +[GKTextStyle standardLeadingForFontTextStyle:]

  // instance methods
  -[GKTextStyle init]
  -[GKTextStyle isEqual:]
  -[GKTextStyle copy]
  -[GKTextStyle .cxx_destruct]
  -[GKTextStyle attributes]
  -[GKTextStyle lineBreakMode]
  -[GKTextStyle minimumLineHeight]
  -[GKTextStyle setLineBreakMode:]
  -[GKTextStyle setMinimumLineHeight:]
  -[GKTextStyle color]
  -[GKTextStyle setColor:]
  -[GKTextStyle info]
  -[GKTextStyle fontName]
  -[GKTextStyle setFontName:]
  -[GKTextStyle fontSize]
  -[GKTextStyle setTextAlignment:]
  -[GKTextStyle buttonTitle]
  -[GKTextStyle setZPosition:]
  -[GKTextStyle textAlignment]
  -[GKTextStyle zPosition]
  -[GKTextStyle body]
  -[GKTextStyle sectionHeader]
  -[GKTextStyle caption]
  -[GKTextStyle bannerTitle]
  -[GKTextStyle footnote]
  -[GKTextStyle headline]
  -[GKTextStyle applyToLabel:]
  -[GKTextStyle regular]
  -[GKTextStyle initEmpty]
  -[GKTextStyle light]
  -[GKTextStyle emphasized]
  -[GKTextStyle centered]
  -[GKTextStyle palette]
  -[GKTextStyle setPalette:]
  -[GKTextStyle strong]
  -[GKTextStyle header3]
  -[GKTextStyle header4]
  -[GKTextStyle alignment:lineBreakMode:]
  -[GKTextStyle emphasizedOnDarkBackground]
  -[GKTextStyle cellActionItem]
  -[GKTextStyle tableCellTitle]
  -[GKTextStyle tableCellSubtitle]
  -[GKTextStyle composeMessage]
  -[GKTextStyle replayOnBaseStyle:systemContentSizeDidChange:]
  -[GKTextStyle styleWithName:fallback:layoutMode:]
  -[GKTextStyle resolveFontAndLineSpacing:]
  -[GKTextStyle applyToEditField:]
  -[GKTextStyle setFontSize:rebaseSelector:]
  -[GKTextStyle multiplayerFooterText]
  -[GKTextStyle scaledForM34:zPosition:]
  -[GKTextStyle bubbleValue]
  -[GKTextStyle bubbleCaption]
  -[GKTextStyle bubbleValueSmall]
  -[GKTextStyle bubbleTextSmall]
  -[GKTextStyle bubbleText]
  -[GKTextStyle bubbleHeadline]
  -[GKTextStyle caption2]
  -[GKTextStyle composeFields]
  -[GKTextStyle baseFontRebaseSelector]
  -[GKTextStyle fontSizeRebaseSelector]
  -[GKTextStyle fontNameRebaseSelector]
  -[GKTextStyle copyWithBaseClass:]
  -[GKTextStyle applyScaleForMesh]
  -[GKTextStyle setFontName:kitTextStyleName:leadingOverrideFromHISpec:shouldOverrideSize:rebaseSelector:]
  -[GKTextStyle setFontName:rebaseSelector:]
  -[GKTextStyle setFontName:kitTextStyleName:shouldOverrideSize:rebaseSelector:]
  -[GKTextStyle setM34:]
  -[GKTextStyle signInFieldLabel]
  -[GKTextStyle header0]
  -[GKTextStyle header1]
  -[GKTextStyle header2]
  -[GKTextStyle caption1]
  -[GKTextStyle bannerMessage]
  -[GKTextStyle roundButtonTitle]
  -[GKTextStyle buyButtonTitle]
  -[GKTextStyle selectedBuyButtonTitle]
  -[GKTextStyle small]
  -[GKTextStyle smallInfo]
  -[GKTextStyle viewBackground]
  -[GKTextStyle scaled:]
  -[GKTextStyle localPlayerColor]
  -[GKTextStyle friendColor]
  -[GKTextStyle friendCaptionColor]
  -[GKTextStyle bold]
  -[GKTextStyle thin]
  -[GKTextStyle medium]
  -[GKTextStyle headerViewSubText1]
  -[GKTextStyle multiplayerNameText]
  -[GKTextStyle multiplayerAddText]
  -[GKTextStyle multiplayerStatusText]
  -[GKTextStyle multiplayerHeaderText]
  -[GKTextStyle thinNumberText]
  -[GKTextStyle gameDetailNameText]
  -[GKTextStyle detailSecondaryHeaderText]
  -[GKTextStyle bubbleCaptionSmall]
  -[GKTextStyle segmentBubbleCaption]
  -[GKTextStyle segmentBubbleValue]
  -[GKTextStyle meBubbleCaption]
  -[GKTextStyle meBubbleValue]
  -[GKTextStyle challengeBubbleValue]
  -[GKTextStyle signInTitle]
  -[GKTextStyle signInSubtitle]
  -[GKTextStyle signInField]
  -[GKTextStyle signInLink]
  -[GKTextStyle leaderboardRankSmall]
  -[GKTextStyle leaderboardRankMedium]
  -[GKTextStyle leaderboardRankLarge]
  -[GKTextStyle achievementLeaderboardRank]
  -[GKTextStyle achievementLeaderboardPointsText]
  -[GKTextStyle achievementValueText]
  -[GKTextStyle sectionCaption]
  -[GKTextStyle sectionCaptionSmall]
  -[GKTextStyle challengeText]
  -[GKTextStyle challengeTitleText]
  -[GKTextStyle tableFooterStyle]
  -[GKTextStyle tabIconCaption]
  -[GKTextStyle removeButtonTitle]
  -[GKTextStyle lineBreakMode:]
  -[GKTextStyle lineHeight:]
  -[GKTextStyle remoteUISectionHeader:]
  -[GKTextStyle remoteUISectionFooter:]
  -[GKTextStyle remoteUILabel:]
  -[GKTextStyle remoteUIDetailLabel:]
  -[GKTextStyle remoteUITableHeaderLabel:]
  -[GKTextStyle remoteUITableHeaderSubLabel:]
  -[GKTextStyle remoteUITableFooterButton:]
  -[GKTextStyle remoteUITableHeaderButton:]
  -[GKTextStyle remoteUIEditField:]
  -[GKTextStyle remoteUIEditLabel:]
  -[GKTextStyle remoteUISelectLabel:]
  -[GKTextStyle remoteUISelectField:]
  -[GKTextStyle remoteUINickNameField:]
  -[GKTextStyle remoteUINickNameLabel:]
  -[GKTextStyle settingsLinkText]
  -[GKTextStyle settingsButton]
  -[GKTextStyle settingsBoldButton]
  -[GKTextStyle settingsLabel]
  -[GKTextStyle settingsHeader]
  -[GKTextStyle settingsFooter]
  -[GKTextStyle UIKitFontTextStyleName]
  -[GKTextStyle setUIKitFontTextStyleName:]
  -[GKTextStyle m34]
  -[GKTextStyle needsParagraphStyle]
  -[GKTextStyle setNeedsParagraphStyle:]
  -[GKTextStyle overrideUIKitFontSize]
  -[GKTextStyle setOverrideUIKitFontSize:]
  -[GKTextStyle setFontSizeRebaseSelector:]
  -[GKTextStyle setFontNameRebaseSelector:]


GKTextStylePad : GKTextStyle
  // class methods
  +[GKTextStylePad standardFontSize]
  +[GKTextStylePad bubbleTextScale]

  // instance methods
  -[GKTextStylePad header3]
  -[GKTextStylePad header4]
  -[GKTextStylePad cellActionItem]
  -[GKTextStylePad bubbleTextSmall]
  -[GKTextStylePad bubbleText]
  -[GKTextStylePad bubbleHeadline]
  -[GKTextStylePad header1]
  -[GKTextStylePad header2]
  -[GKTextStylePad smallInfo]
  -[GKTextStylePad signInTitle]
  -[GKTextStylePad sectionCaptionSmall]


GKTextStyleFocus : GKTextStyle
  // instance methods
  -[GKTextStyleFocus bannerTitle]


GKTextStylePhone : GKTextStyle
  // class methods
  +[GKTextStylePhone standardFontSize]
  +[GKTextStylePhone bubbleTextScale]

  // instance methods
  -[GKTextStylePhone header4]
  -[GKTextStylePhone cellActionItem]
  -[GKTextStylePhone bubbleTextSmall]
  -[GKTextStylePhone bubbleText]
  -[GKTextStylePhone bubbleHeadline]
  -[GKTextStylePhone header1]
  -[GKTextStylePhone header2]
  -[GKTextStylePhone smallInfo]
  -[GKTextStylePhone signInTitle]
  -[GKTextStylePhone sectionCaptionSmall]


GKTextStylePhoneInBubbleDetail : GKTextStylePhone
  // class methods
  +[GKTextStylePhoneInBubbleDetail bubbleTextScale]


GKComposeHeaderFieldBackgroundView : UIImageView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  unsigned int location

  // instance methods
  -[GKComposeHeaderFieldBackgroundView init]
  -[GKComposeHeaderFieldBackgroundView location]
  -[GKComposeHeaderFieldBackgroundView setLocation:]
  -[GKComposeHeaderFieldBackgroundView layoutSubviews]
  -[GKComposeHeaderFieldBackgroundView resetBackgroundImage]


GKInGameColorPalette : GKColorPalette
  // instance methods
  -[GKInGameColorPalette monogramBackgroundColor]
  -[GKInGameColorPalette windowBackgroundColor]
  -[GKInGameColorPalette viewBackgroundColor]
  -[GKInGameColorPalette textOnDarkBackgroundColor]
  -[GKInGameColorPalette floatingHeaderViewBackgroundColor]


GKFocusableDarkColorPalette : GKInGameColorPalette
  // instance methods
  -[GKFocusableDarkColorPalette emphasizedTextColor]
  -[GKFocusableDarkColorPalette standardTextColor]
  -[GKFocusableDarkColorPalette windowBackgroundBlurStyle]


GKColorPalette : NSObject
 @property  UIColor *standardTextColor
 @property  UIColor *emphasizedTextColor
 @property  UIColor *selectedTextColor
 @property  UIColor *bubbleTextColor
 @property  UIColor *removeItemTextColor
 @property  UIColor *textOnDarkBackgroundColor
 @property  UIColor *emphasizedTextOnDarkBackgroundColor
 @property  UIColor *systemInteractionColor
 @property  UIColor *disabledButtonTitleColor
 @property  long long windowBackgroundBlurStyle
 @property  UIColor *windowBackgroundColor
 @property  UIColor *viewBackgroundColor
 @property  UIColor *opaqueViewBackgroundColor
 @property  UIColor *floatingHeaderViewBackgroundColor
 @property  UIColor *pinnedHeaderViewBackgroundColor
 @property  UIColor *activityIndicatorColor
 @property  UIColor *selectedCellBackgroundColor
 @property  UIColor *separatorLineColor
 @property  UIColor *friendTintColor
 @property  UIColor *friendRequestTintColor
 @property  UIColor *friendRequestCaptionTintColor
 @property  UIColor *localPlayerTintColor
 @property  UIColor *challengesTintColor
 @property  UIColor *shareTintColor
 @property  UIColor *cellActionDestructiveColor
 @property  UIColor *cellActionColor

  // class methods
  +[GKColorPalette sharedPalette]
  +[GKColorPalette paletteFromImage:]

  // instance methods
  -[GKColorPalette selectedTextColor]
  -[GKColorPalette selectedCellBackgroundColor]
  -[GKColorPalette separatorLineColor]
  -[GKColorPalette activityIndicatorColor]
  -[GKColorPalette cellActionDestructiveColor]
  -[GKColorPalette cellActionColor]
  -[GKColorPalette windowBackgroundColor]
  -[GKColorPalette emphasizedTextColor]
  -[GKColorPalette systemInteractionColor]
  -[GKColorPalette viewBackgroundColor]
  -[GKColorPalette standardTextColor]
  -[GKColorPalette emphasizedTextOnDarkBackgroundColor]
  -[GKColorPalette friendRequestCaptionTintColor]
  -[GKColorPalette textOnDarkBackgroundColor]
  -[GKColorPalette localPlayerTintColor]
  -[GKColorPalette friendTintColor]
  -[GKColorPalette bubbleTextColor]
  -[GKColorPalette removeItemTextColor]
  -[GKColorPalette floatingHeaderViewBackgroundColor]
  -[GKColorPalette windowBackgroundBlurStyle]
  -[GKColorPalette disabledButtonTitleColor]
  -[GKColorPalette opaqueViewBackgroundColor]
  -[GKColorPalette pinnedHeaderViewBackgroundColor]
  -[GKColorPalette friendRequestTintColor]
  -[GKColorPalette challengesTintColor]
  -[GKColorPalette shareTintColor]


GKChallengeIssueHostViewController : GKExtensionRemoteViewController <GKChallengeIssueHostProtocol>
 @property  GKHostedChallengeIssueController *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  GKGame *game

  // class methods
  +[GKChallengeIssueHostViewController challengeExtension]

  // instance methods
  -[GKChallengeIssueHostViewController dealloc]
  -[GKChallengeIssueHostViewController delegate]
  -[GKChallengeIssueHostViewController setDelegate:]
  -[GKChallengeIssueHostViewController messageFromExtension:]
  -[GKChallengeIssueHostViewController extensionIsCanceling]
  -[GKChallengeIssueHostViewController extensionObjectProxy]


GKChallengeIssueExtensionHostContext : GKExtensionHostContext <GKChallengeIssueHostProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  GKGame *game

  // class methods
  +[GKChallengeIssueExtensionHostContext _extensionAuxiliaryHostProtocol]
  +[GKChallengeIssueExtensionHostContext _extensionAuxiliaryVendorProtocol]


GKMultiplayerViewController : GKCollectionViewController <GKMessageComposeViewControllerDelegate, GKMultiplayerPlayerCountViewControllerDelegate>
 @property  GKMessageComposeViewController *inviteController
 @property  NSDictionary *playerNamesToPlayers
 @property  GKMultiplayerButtonHeaderView *buttonHeaderView
 @property  GKMultiplayerButtonFooterView *buttonFooterView
 @property  BOOL needsFloatIn
 @property  GKDashboardMultiplayerPickerViewController *picker
 @property  long long invitationType
 @property  GKDispatchGroup *urlPreloadGroup
 @property  GKMatchRequest *matchRequest
 @property  GKMatchRequest *originalMatchRequest
 @property  NSString *defaultInvitationMessage
 @property  BOOL showCancelButton
 @property  GKGame *game
 @property  BOOL didAcceptGameInvite
 @property  <GKDashboardNearbyBrowserDelegate> *nearbyDelegate
 @property  NSURL *shareURL
 @property  BOOL didStartForcedAutomatch
 @property  GKMultiplayerDataSource *multiplayerDataSource
 @property  BOOL addButtonEnabled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKMultiplayerViewController init]
  -[GKMultiplayerViewController dealloc]
  -[GKMultiplayerViewController cancel]
  -[GKMultiplayerViewController loadView]
  -[GKMultiplayerViewController traitCollectionDidChange:]
  -[GKMultiplayerViewController viewWillAppear:]
  -[GKMultiplayerViewController viewDidAppear:]
  -[GKMultiplayerViewController viewDidDisappear:]
  -[GKMultiplayerViewController collectionView:didSelectItemAtIndexPath:]
  -[GKMultiplayerViewController viewSafeAreaInsetsDidChange]
  -[GKMultiplayerViewController picker]
  -[GKMultiplayerViewController showCancelButton]
  -[GKMultiplayerViewController share]
  -[GKMultiplayerViewController shareURL]
  -[GKMultiplayerViewController setShareURL:]
  -[GKMultiplayerViewController setPicker:]
  -[GKMultiplayerViewController game]
  -[GKMultiplayerViewController setGame:]
  -[GKMultiplayerViewController removePlayer:]
  -[GKMultiplayerViewController playButtonPressed]
  -[GKMultiplayerViewController setShowCancelButton:]
  -[GKMultiplayerViewController dataSource:didInsertItemsAtIndexPaths:]
  -[GKMultiplayerViewController dataSource:didRemoveItemsAtIndexPaths:]
  -[GKMultiplayerViewController dataSource:didRefreshItemsAtIndexPaths:]
  -[GKMultiplayerViewController configureDataSource]
  -[GKMultiplayerViewController didEnterLoadedState]
  -[GKMultiplayerViewController shareButtonPressed]
  -[GKMultiplayerViewController multiplayerPlayerCountViewController:didSelectValue:]
  -[GKMultiplayerViewController setNearbyDelegate:]
  -[GKMultiplayerViewController nearbyDelegate]
  -[GKMultiplayerViewController matchRequest]
  -[GKMultiplayerViewController initWithMatchRequest:]
  -[GKMultiplayerViewController originalMatchRequest]
  -[GKMultiplayerViewController didAcceptGameInvite]
  -[GKMultiplayerViewController setAddButtonEnabled:]
  -[GKMultiplayerViewController multiplayerDataSource]
  -[GKMultiplayerViewController updateVisibleRemoveButtons]
  -[GKMultiplayerViewController updateButtonViewsWithStatus:]
  -[GKMultiplayerViewController playNow]
  -[GKMultiplayerViewController setDidStartForcedAutomatch:]
  -[GKMultiplayerViewController didStartForcedAutomatch]
  -[GKMultiplayerViewController invitePlayers:]
  -[GKMultiplayerViewController setInvitesFailedWithError:]
  -[GKMultiplayerViewController canStartForcedAutomatch]
  -[GKMultiplayerViewController willPresentPlayerPicker:]
  -[GKMultiplayerViewController willQueryGKIDs]
  -[GKMultiplayerViewController loadShareURLWithCompletion:]
  -[GKMultiplayerViewController willShare]
  -[GKMultiplayerViewController shareFinishedWithContactPlayers:legacyPlayers:]
  -[GKMultiplayerViewController removedPlayer:]
  -[GKMultiplayerViewController localPlayerAcceptedGameInvite:]
  -[GKMultiplayerViewController playersToInvite:]
  -[GKMultiplayerViewController setInvitationType:]
  -[GKMultiplayerViewController determineInvitationType]
  -[GKMultiplayerViewController setButtonHeaderView:]
  -[GKMultiplayerViewController setNeedsFloatIn:]
  -[GKMultiplayerViewController setupCancelButton]
  -[GKMultiplayerViewController configureSubviewsForIOS]
  -[GKMultiplayerViewController setUrlPreloadGroup:]
  -[GKMultiplayerViewController invitationType]
  -[GKMultiplayerViewController preloadShareURL]
  -[GKMultiplayerViewController allowPlayerCountSelection]
  -[GKMultiplayerViewController didSelectPlayerCountHeader:]
  -[GKMultiplayerViewController setButtonFooterView:]
  -[GKMultiplayerViewController configureConstraintsForSubviews]
  -[GKMultiplayerViewController buttonHeaderView]
  -[GKMultiplayerViewController animateBubblesInIfNeeded]
  -[GKMultiplayerViewController showCollectionView]
  -[GKMultiplayerViewController cancelButtonPressed]
  -[GKMultiplayerViewController updateUIActionsEnabled:]
  -[GKMultiplayerViewController maxAvailablePlayers]
  -[GKMultiplayerViewController inviteButtonPressed]
  -[GKMultiplayerViewController handleServiceUnavailable:]
  -[GKMultiplayerViewController setInviteController:]
  -[GKMultiplayerViewController didFinishPickingPlayers:]
  -[GKMultiplayerViewController invitePlayers:contactPlayers:]
  -[GKMultiplayerViewController setDidAcceptGameInvite:]
  -[GKMultiplayerViewController messageComposeViewController:didFinishWithResult:message:contactPlayers:friendPlayers:]
  -[GKMultiplayerViewController messageComposeViewController:willPresentPlayerPicker:]
  -[GKMultiplayerViewController addAutomatchPlayer]
  -[GKMultiplayerViewController removeAutomatchPlayer]
  -[GKMultiplayerViewController defaultInvitationMessage]
  -[GKMultiplayerViewController setDefaultInvitationMessage:]
  -[GKMultiplayerViewController addButtonEnabled]
  -[GKMultiplayerViewController inviteController]
  -[GKMultiplayerViewController playerNamesToPlayers]
  -[GKMultiplayerViewController setPlayerNamesToPlayers:]
  -[GKMultiplayerViewController buttonFooterView]
  -[GKMultiplayerViewController needsFloatIn]
  -[GKMultiplayerViewController urlPreloadGroup]


GKLocalPlayerAuthenticator : NSObject <RemoteUIControllerDelegate>
 @property  RemoteUIController *remoteU13Controller
 @property  UINavigationController *u13NavigationController
 @property  NSMutableArray *u13ObjectModels
 @property  GKDispatchGroup *u13Group
 @property  BOOL userShouldSkipCreateAppleID
 @property  BOOL forceAuthentication
 @property  GKLocalPlayer *resultantLocalPlayer
 @property  GKLocalPlayer *inputLocalPlayer
 @property  NSString *alertTitle
 @property  NSString *alertMessage
 @property  BOOL authenticated
 @property  BOOL authenticating
 @property  NSDate *lastAuthDate
 @property  NSString *lastAuthPlayerID
 @property  NSString *username
 @property  NSString *password
 @property  UIViewController *presentingViewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[GKLocalPlayerAuthenticator authenticatorForExistingPlayer:]
  +[GKLocalPlayerAuthenticator authenticatorForPlayerWithUsername:password:]
  +[GKLocalPlayerAuthenticator authenticatorForExistingPlayer:withPresentingViewController:]
  +[GKLocalPlayerAuthenticator authenticatorForPlayerWithUsername:password:withPresentingViewController:]
  +[GKLocalPlayerAuthenticator postURL:postBody:completion:]

  // instance methods
  -[GKLocalPlayerAuthenticator init]
  -[GKLocalPlayerAuthenticator dealloc]
  -[GKLocalPlayerAuthenticator password]
  -[GKLocalPlayerAuthenticator .cxx_destruct]
  -[GKLocalPlayerAuthenticator setPassword:]
  -[GKLocalPlayerAuthenticator reset]
  -[GKLocalPlayerAuthenticator username]
  -[GKLocalPlayerAuthenticator setUsername:]
  -[GKLocalPlayerAuthenticator isAuthenticated]
  -[GKLocalPlayerAuthenticator setAuthenticated:]
  -[GKLocalPlayerAuthenticator presentingViewController]
  -[GKLocalPlayerAuthenticator setPresentingViewController:]
  -[GKLocalPlayerAuthenticator applicationDidEnterBackground:]
  -[GKLocalPlayerAuthenticator setAlertTitle:]
  -[GKLocalPlayerAuthenticator alertTitle]
  -[GKLocalPlayerAuthenticator remoteUIController:shouldLoadRequest:redirectResponse:]
  -[GKLocalPlayerAuthenticator remoteUIController:didReceiveHTTPResponse:]
  -[GKLocalPlayerAuthenticator remoteUIControllerDidDismiss:]
  -[GKLocalPlayerAuthenticator remoteUIController:didReceiveObjectModel:actionSignal:]
  -[GKLocalPlayerAuthenticator isAuthenticating]
  -[GKLocalPlayerAuthenticator alertMessage]
  -[GKLocalPlayerAuthenticator setAlertMessage:]
  -[GKLocalPlayerAuthenticator authenticateWithCompletionHandler:]
  -[GKLocalPlayerAuthenticator forceAuthentication]
  -[GKLocalPlayerAuthenticator setForceAuthentication:]
  -[GKLocalPlayerAuthenticator setInputLocalPlayer:]
  -[GKLocalPlayerAuthenticator _authenticateUsingAuthUI:authenticationResults:usernameEditable:authUIDismissHandler:completionHandler:]
  -[GKLocalPlayerAuthenticator _handleAuthResponse:error:handler:]
  -[GKLocalPlayerAuthenticator handleAuthKitResultsForUnder13WithContinuationData:altDSID:password:]
  -[GKLocalPlayerAuthenticator setAuthenticating:]
  -[GKLocalPlayerAuthenticator resultantLocalPlayer]
  -[GKLocalPlayerAuthenticator cancelAuthDueToAuthKitErrorWithHandler:]
  -[GKLocalPlayerAuthenticator authenticateUsingAuthUIAllowingAppleIDCreation:usernameEditable:dismissHandler:completionHandler:]
  -[GKLocalPlayerAuthenticator authenticateFromExternalServiceWithAuthenticationResults:withHandler:]
  -[GKLocalPlayerAuthenticator inputLocalPlayer]
  -[GKLocalPlayerAuthenticator setLastAuthDate:]
  -[GKLocalPlayerAuthenticator setResultantLocalPlayer:]
  -[GKLocalPlayerAuthenticator setU13Group:]
  -[GKLocalPlayerAuthenticator u13NavigationController]
  -[GKLocalPlayerAuthenticator authenticateUsingAuthUIWithAuthUIDismissHandler:completionHandler:]
  -[GKLocalPlayerAuthenticator authenticateUsingAuthUIWithCompletionHandler:]
  -[GKLocalPlayerAuthenticator shouldAuthenticateForGameCenter]
  -[GKLocalPlayerAuthenticator authenticateWithAuthKitResults:completionHandler:]
  -[GKLocalPlayerAuthenticator authenticateExistingUserAuthUIWithCompletionHandler:]
  -[GKLocalPlayerAuthenticator authenticationDidComplete]
  -[GKLocalPlayerAuthenticator lastAuthDate]
  -[GKLocalPlayerAuthenticator lastAuthPlayerID]
  -[GKLocalPlayerAuthenticator setLastAuthPlayerID:]
  -[GKLocalPlayerAuthenticator remoteU13Controller]
  -[GKLocalPlayerAuthenticator setRemoteU13Controller:]
  -[GKLocalPlayerAuthenticator setU13NavigationController:]
  -[GKLocalPlayerAuthenticator u13ObjectModels]
  -[GKLocalPlayerAuthenticator setU13ObjectModels:]
  -[GKLocalPlayerAuthenticator u13Group]
  -[GKLocalPlayerAuthenticator userShouldSkipCreateAppleID]
  -[GKLocalPlayerAuthenticator setUserShouldSkipCreateAppleID:]


GKMultiplayerHeaderView : UICollectionReusableView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  GKLabel *label

  // instance methods
  -[GKMultiplayerHeaderView dealloc]
  -[GKMultiplayerHeaderView setLabel:]
  -[GKMultiplayerHeaderView label]
  -[GKMultiplayerHeaderView initWithFrame:]
  -[GKMultiplayerHeaderView setMinPlayers:maxPlayers:]


GKBubbleFlowAnimator : NSObject <UINavigationControllerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  GKBubbleSet *mostRecentOverlayBubbleSet

  // class methods
  +[GKBubbleFlowAnimator sharedAnimator]

  // instance methods
  -[GKBubbleFlowAnimator dealloc]
  -[GKBubbleFlowAnimator navigationController:willShowViewController:animated:]
  -[GKBubbleFlowAnimator navigationController:animationControllerForOperation:fromViewController:toViewController:]
  -[GKBubbleFlowAnimator _navigationControllerShouldUseBuiltinInteractionController:]
  -[GKBubbleFlowAnimator _prepareTransitionWithInfo:]
  -[GKBubbleFlowAnimator _finalPreparationsBeforeBeginningTransitionWithInfo:]
  -[GKBubbleFlowAnimator _addKeyframesForSubviewsToFadeInForTransitionWithInfo:]
  -[GKBubbleFlowAnimator _addKeyframesForSubviewsToFadeOutForTransitionWithInfo:]
  -[GKBubbleFlowAnimator _addKeyframesForViewCrossfadeForTransitionWithInfo:]
  -[GKBubbleFlowAnimator _addKeyframesForAnimatingBubblePathsForTransitionWithInfo:]
  -[GKBubbleFlowAnimator _addKeyframesForCustomAnimationsForTransitionWithInfo:]
  -[GKBubbleFlowAnimator _addKeyframesForBubbleControlAnimationsForTransitionWithInfo:]
  -[GKBubbleFlowAnimator _cleanupSubviewsWeFadedOutForTransitionWithInfo:]
  -[GKBubbleFlowAnimator _finishTransitionWithInfo:]
  -[GKBubbleFlowAnimator _stopIdleAnimatingOffscreenBubblesAfterTransitionWithInfo:]
  -[GKBubbleFlowAnimator transitionInfoForBubbleFlowTransitionFromViewController:toViewController:]
  -[GKBubbleFlowAnimator _animateBubblesTransitionWithInfo:completion:]
  -[GKBubbleFlowAnimator _transitionInfoForBubbleFlowInvalidationOfViewController:]
  -[GKBubbleFlowAnimator _savvyViewControllerForViewController:fromViewController:]
  -[GKBubbleFlowAnimator _transitionInfoForBubbleFlowSimpleUpdateOfViewController:]
  -[GKBubbleFlowAnimator _pathTransitionInfoFromPathAnimator:forTransitionWithInfo:]
  -[GKBubbleFlowAnimator syncOverlayViewBubbles:withViewController:]
  -[GKBubbleFlowAnimator setMostRecentOverlayBubbleSet:]
  -[GKBubbleFlowAnimator _syncBubbleVisibilityWithInfo:]
  -[GKBubbleFlowAnimator _addKeyframesForCustomFromAnimationsForTransitionWithInfo:]
  -[GKBubbleFlowAnimator _addKeyframesForCustomToAnimationsForTransitionWithInfo:]
  -[GKBubbleFlowAnimator restingWorldPositionForBubble:viewController:forTransitionWithInfo:getFrame:]
  -[GKBubbleFlowAnimator _resetContentInBubbles:viewController:adoptionFlags:]
  -[GKBubbleFlowAnimator _addKeyframesForBubbleControlAnimationsForTransitionWithBubblesGoingOffscreenAndInfo:]
  -[GKBubbleFlowAnimator _addKeyframesForBubbleControlAnimationsForTransitionWithBubblesComingOnscreenAndInfo:]
  -[GKBubbleFlowAnimator _addKeyframesForBubbleControlAnimationsForTransitionWithBubblesStayingOnscreenAndInfo:]
  -[GKBubbleFlowAnimator animateBubblesFromViewController:toViewController:completion:]
  -[GKBubbleFlowAnimator invalidateBubblePositionsForViewController:animated:completion:]
  -[GKBubbleFlowAnimator mostRecentOverlayBubbleSet]
  -[GKBubbleFlowAnimator _moveBubblesToTransitionView:forTransitionWithInfo:]
  -[GKBubbleFlowAnimator _returnBubblesFromTransitionView:forTransitionWithInfo:]
  -[GKBubbleFlowAnimator overlayViewNeedsUpdateForRotationToInterfaceOrientation:duration:]


GKTabBarTransitionAnimator : NSObject <UIViewControllerAnimatorTransitioning>
 @property  _GKBubbleFlowTransitionInfo *transitionInfo
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKTabBarTransitionAnimator dealloc]
  -[GKTabBarTransitionAnimator transitionDuration:]
  -[GKTabBarTransitionAnimator animateTransition:]
  -[GKTabBarTransitionAnimator animationEnded:]
  -[GKTabBarTransitionAnimator transitionInfo]
  -[GKTabBarTransitionAnimator _animateTransitionInTwoParts:]
  -[GKTabBarTransitionAnimator _animateTransition:]
  -[GKTabBarTransitionAnimator setTransitionInfo:]


GKBadgedGameIconBrush : GKThemeBrush
 @property  GKThemeBrush *badgeBrush

  // instance methods
  -[GKBadgedGameIconBrush init]
  -[GKBadgedGameIconBrush copyWithZone:]
  -[GKBadgedGameIconBrush .cxx_destruct]
  -[GKBadgedGameIconBrush sizeForInput:]
  -[GKBadgedGameIconBrush scaleForInput:]
  -[GKBadgedGameIconBrush drawInRect:withContext:input:]
  -[GKBadgedGameIconBrush badgeBrush]
  -[GKBadgedGameIconBrush setBadgeBrush:]


GKExtensionManager : NSObject <GKExtensionHostViewControllerDelegate>
 @property  GKExtensionHostViewController *extensionHostViewController
 @property  long long extensionLoadState
 @property  NSObject<OS_dispatch_queue> *stateQueue
 @property  NSString *extensionIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKExtensionManager .cxx_destruct]
  -[GKExtensionManager extensionIdentifier]
  -[GKExtensionManager stateQueue]
  -[GKExtensionManager setStateQueue:]
  -[GKExtensionManager setExtensionIdentifier:]
  -[GKExtensionManager extensionDidTerminateWithError:]
  -[GKExtensionManager setExtensionLoadState:]
  -[GKExtensionManager setExtensionHostViewController:]
  -[GKExtensionManager extensionHostViewController]
  -[GKExtensionManager extensionLoadState]
  -[GKExtensionManager initWithExtensionBundleIdentifer:host:]
  -[GKExtensionManager instantiateViewControllerWithHost:handler:]
  -[GKExtensionManager tournamentExtensionViewController]
  -[GKExtensionManager needToLoadExtension]


GKDashboardTurnDataSource : GKCollectionDataSource
 @property  NSArray *matches
 @property  BOOL shouldShowPlay
 @property  BOOL shouldShowQuit

  // instance methods
  -[GKDashboardTurnDataSource init]
  -[GKDashboardTurnDataSource dealloc]
  -[GKDashboardTurnDataSource numberOfSectionsInCollectionView:]
  -[GKDashboardTurnDataSource collectionView:cellForItemAtIndexPath:]
  -[GKDashboardTurnDataSource itemCount]
  -[GKDashboardTurnDataSource collectionView:didSelectItemAtIndexPath:]
  -[GKDashboardTurnDataSource collectionView:layout:sizeForItemAtIndexPath:]
  -[GKDashboardTurnDataSource matches]
  -[GKDashboardTurnDataSource setMatches:]
  -[GKDashboardTurnDataSource preferredCollectionHeight]
  -[GKDashboardTurnDataSource setupCollectionView:]
  -[GKDashboardTurnDataSource loadDataWithCompletionHandler:]
  -[GKDashboardTurnDataSource itemForIndexPath:]
  -[GKDashboardTurnDataSource sectionHeaderText]
  -[GKDashboardTurnDataSource shouldShowPlay]
  -[GKDashboardTurnDataSource setShouldShowPlay:]
  -[GKDashboardTurnDataSource shouldShowQuit]
  -[GKDashboardTurnDataSource setShouldShowQuit:]


GKSectionInfo : NSObject
 @property  long long section
 @property  NSPredicate *predicate
 @property  NSArray *sortDescriptors
 @property  NSArray *items
 @property  NSString *title

  // instance methods
  -[GKSectionInfo dealloc]
  -[GKSectionInfo setPredicate:]
  -[GKSectionInfo predicate]
  -[GKSectionInfo sortDescriptors]
  -[GKSectionInfo setSortDescriptors:]
  -[GKSectionInfo title]
  -[GKSectionInfo setTitle:]
  -[GKSectionInfo items]
  -[GKSectionInfo setItems:]
  -[GKSectionInfo section]
  -[GKSectionInfo setSection:]


GKSplittingDataSource : GKCollectionViewDataSource
 @property  NSMutableDictionary *sectionToSectionInfo
 @property  GKBasicCollectionViewDataSource *underlyingDataSource
 @property  long long sectionCount

  // instance methods
  -[GKSplittingDataSource init]
  -[GKSplittingDataSource dealloc]
  -[GKSplittingDataSource numberOfSectionsInCollectionView:]
  -[GKSplittingDataSource collectionView:numberOfItemsInSection:]
  -[GKSplittingDataSource sectionCount]
  -[GKSplittingDataSource itemAtIndexPath:]
  -[GKSplittingDataSource titleForSection:]
  -[GKSplittingDataSource removeSection:]
  -[GKSplittingDataSource removeAllSections]
  -[GKSplittingDataSource underlyingDataSource]
  -[GKSplittingDataSource _gkDescriptionWithChildren:]
  -[GKSplittingDataSource refreshContentsForDataType:userInfo:updateNotifier:]
  -[GKSplittingDataSource indexPathsForItem:]
  -[GKSplittingDataSource removeItemAtIndexPath:completionHandler:]
  -[GKSplittingDataSource collectionViewDidBecomeInactive:]
  -[GKSplittingDataSource configureDataSource]
  -[GKSplittingDataSource setUnderlyingDataSource:]
  -[GKSplittingDataSource addSectionWithTitle:sortDescriptors:]
  -[GKSplittingDataSource setFilterPredicate:forSection:]
  -[GKSplittingDataSource sectionInfoForSection:]
  -[GKSplittingDataSource itemsForSection:]
  -[GKSplittingDataSource filteredItemsForRawItems:]
  -[GKSplittingDataSource refreshAdditionalInfoForDataType:updateNotifier:]
  -[GKSplittingDataSource setItems:forSection:]
  -[GKSplittingDataSource willUpdateSectionsWithItems:]
  -[GKSplittingDataSource setSortDescriptors:forSection:]
  -[GKSplittingDataSource sectionToSectionInfo]
  -[GKSplittingDataSource setSectionToSectionInfo:]


GKMultiplayerDataSource : GKBasicCollectionViewDataSource
 @property  NSMutableDictionary *playerStatus
 @property  GKMultiplayerHeaderView *headerView
 @property  NSMutableOrderedSet *players
 @property  BOOL autoMatching
 @property  NSMutableOrderedSet *orderedPlayerIDList
 @property  long long minPlayers
 @property  long long maxPlayers
 @property  long long automatchPlayerCount
 @property  BOOL automatchAddedToMinInHeader
 @property  BOOL removingEnabled
 @property  NSString *footerStatus
 @property  GKMultiplayerFooterView *footerView
 @property  GKMultiplayerButtonHeaderView *buttonHeaderView

  // instance methods
  -[GKMultiplayerDataSource init]
  -[GKMultiplayerDataSource dealloc]
  -[GKMultiplayerDataSource collectionView:cellForItemAtIndexPath:]
  -[GKMultiplayerDataSource headerView]
  -[GKMultiplayerDataSource setHeaderView:]
  -[GKMultiplayerDataSource collectionView:viewForSupplementaryElementOfKind:atIndexPath:]
  -[GKMultiplayerDataSource footerView]
  -[GKMultiplayerDataSource setFooterView:]
  -[GKMultiplayerDataSource playerStatus]
  -[GKMultiplayerDataSource players]
  -[GKMultiplayerDataSource refreshContentsForDataType:userInfo:updateNotifier:]
  -[GKMultiplayerDataSource configureCollectionView:]
  -[GKMultiplayerDataSource setPlayers:]
  -[GKMultiplayerDataSource currentPlayers]
  -[GKMultiplayerDataSource restoreOrderOfPlayers]
  -[GKMultiplayerDataSource participantForPlayer:]
  -[GKMultiplayerDataSource statusForPlayer:]
  -[GKMultiplayerDataSource maxPlayers]
  -[GKMultiplayerDataSource setMaxPlayers:]
  -[GKMultiplayerDataSource automatchPlayerCount]
  -[GKMultiplayerDataSource minPlayers]
  -[GKMultiplayerDataSource setAutomatchPlayerCount:]
  -[GKMultiplayerDataSource participantForAutoMatchNumber:]
  -[GKMultiplayerDataSource autoMatching]
  -[GKMultiplayerDataSource updateHeaderText]
  -[GKMultiplayerDataSource updateParticipants]
  -[GKMultiplayerDataSource setMinPlayers:]
  -[GKMultiplayerDataSource addPlayers:withStatus:complete:]
  -[GKMultiplayerDataSource setRemovingEnabled:]
  -[GKMultiplayerDataSource setFooterStatus:]
  -[GKMultiplayerDataSource setAutoMatching:withVisibleCells:]
  -[GKMultiplayerDataSource playersInvited]
  -[GKMultiplayerDataSource havePendingPlayers]
  -[GKMultiplayerDataSource setAutomatchPlayerCount:complete:]
  -[GKMultiplayerDataSource replaceContactPlayers:withNormalPlayers:complete:]
  -[GKMultiplayerDataSource firstInvitedContactPlayer]
  -[GKMultiplayerDataSource setStatus:forPlayers:complete:]
  -[GKMultiplayerDataSource failedToInvitePlayers]
  -[GKMultiplayerDataSource guestPlayers]
  -[GKMultiplayerDataSource playerRange]
  -[GKMultiplayerDataSource removePlayers:complete:]
  -[GKMultiplayerDataSource addPlayers:withStatus:replaceAutomatches:complete:]
  -[GKMultiplayerDataSource setParticipantsWithPlayers:automatchPlayerCount:andStatuses:complete:]
  -[GKMultiplayerDataSource setButtonHeaderView:]
  -[GKMultiplayerDataSource buttonHeaderView]
  -[GKMultiplayerDataSource participantShouldBeRemovable:atIndexPath:]
  -[GKMultiplayerDataSource maxAvailablePlayers]
  -[GKMultiplayerDataSource finishRevertingPlayers]
  -[GKMultiplayerDataSource playersToBeInvited]
  -[GKMultiplayerDataSource shouldRevertStatus:]
  -[GKMultiplayerDataSource playersWithStatus:]
  -[GKMultiplayerDataSource readyPlayers]
  -[GKMultiplayerDataSource automatchAddedToMinInHeader]
  -[GKMultiplayerDataSource setAutomatchAddedToMinInHeader:]
  -[GKMultiplayerDataSource removingEnabled]
  -[GKMultiplayerDataSource footerStatus]
  -[GKMultiplayerDataSource setAutoMatching:]
  -[GKMultiplayerDataSource setPlayerStatus:]
  -[GKMultiplayerDataSource orderedPlayerIDList]
  -[GKMultiplayerDataSource setOrderedPlayerIDList:]


GKNotificationBannerWindow : UIWindow /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  GKNotificationBannerViewController *currentBannerViewController
 @property  NSObject<OS_dispatch_semaphore> *bannerSemaphore

  // class methods
  +[GKNotificationBannerWindow queue]
  +[GKNotificationBannerWindow bannerWindow]
  +[GKNotificationBannerWindow enqueBanner:]

  // instance methods
  -[GKNotificationBannerWindow init]
  -[GKNotificationBannerWindow dealloc]
  -[GKNotificationBannerWindow .cxx_destruct]
  -[GKNotificationBannerWindow pointInside:withEvent:]
  -[GKNotificationBannerWindow touchesEnded:withEvent:]
  -[GKNotificationBannerWindow handlePan:]
  -[GKNotificationBannerWindow _canAffectStatusBarAppearance]
  -[GKNotificationBannerWindow _includeInDefaultImageSnapshot]
  -[GKNotificationBannerWindow _canBecomeKeyWindow]
  -[GKNotificationBannerWindow handleSingleTap:]
  -[GKNotificationBannerWindow currentBannerViewController]
  -[GKNotificationBannerWindow bannerSemaphore]
  -[GKNotificationBannerWindow _showBanner:]
  -[GKNotificationBannerWindow _hideBanner:quickly:]
  -[GKNotificationBannerWindow setCurrentBannerViewController:]


GKNotificationBannerView : UIView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  GKDashboardPlayerPhotoView *playerAvatarView
 @property  BOOL canTransitionToPlayerAvatar
 @property  UIImageView *imageView
 @property  UILabel *titleLabel
 @property  UILabel *messageLabel
 @property  UILabel *messageLabel2
 @property  UILabel *actionLabel
 @property  UIView *centeringView
 @property  double preferredBannerWidth
 @property  double duration
 @property  @? completionHandler
 @property  @? touchHandler

  // class methods
  +[GKNotificationBannerView _preventsAppearanceProxyCustomization]

  // instance methods
  -[GKNotificationBannerView dealloc]
  -[GKNotificationBannerView .cxx_destruct]
  -[GKNotificationBannerView duration]
  -[GKNotificationBannerView completionHandler]
  -[GKNotificationBannerView setCompletionHandler:]
  -[GKNotificationBannerView setDuration:]
  -[GKNotificationBannerView titleLabel]
  -[GKNotificationBannerView layoutSubviews]
  -[GKNotificationBannerView imageView]
  -[GKNotificationBannerView setTitleLabel:]
  -[GKNotificationBannerView awakeFromNib]
  -[GKNotificationBannerView setImageView:]
  -[GKNotificationBannerView actionLabel]
  -[GKNotificationBannerView setActionLabel:]
  -[GKNotificationBannerView showWithCompletionHandler:]
  -[GKNotificationBannerView messageLabel]
  -[GKNotificationBannerView setMessageLabel:]
  -[GKNotificationBannerView centeringView]
  -[GKNotificationBannerView setCenteringView:]
  -[GKNotificationBannerView messageLabel2]
  -[GKNotificationBannerView setMessageLabel2:]
  -[GKNotificationBannerView playerAvatarView]
  -[GKNotificationBannerView createBackdropView]
  -[GKNotificationBannerView createTitleLabel:withTextStyle:]
  -[GKNotificationBannerView createMessageLabel:withTextStyle:]
  -[GKNotificationBannerView initWithTitle:player:imageView:message:]
  -[GKNotificationBannerView setPlayerAvatarView:]
  -[GKNotificationBannerView canTransitionToPlayerAvatar]
  -[GKNotificationBannerView transitionToPlayerAvatar]
  -[GKNotificationBannerView setCanTransitionToPlayerAvatar:]
  -[GKNotificationBannerView startLoadingPlayerAvatar]
  -[GKNotificationBannerView setTouchHandler:]
  -[GKNotificationBannerView touchHandler]
  -[GKNotificationBannerView initWithTitle:image:message:]
  -[GKNotificationBannerView showPlayerAvatarAnimationWithCompletionHandler:]
  -[GKNotificationBannerView showWithTouchHandler:]
  -[GKNotificationBannerView hideBanner]
  -[GKNotificationBannerView _wasTouched:]
  -[GKNotificationBannerView callCompletionHandler]
  -[GKNotificationBannerView fadeInWithCompletionHandler:]
  -[GKNotificationBannerView fadeOutQuickly:withCompletionHandler:]
  -[GKNotificationBannerView preferredBannerWidth]


GKNotificationBannerViewController : UIViewController /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  GKNotificationBannerView *bannerView
 @property  BOOL bannerVisible
 @property  BOOL bannerAnimating
 @property  NSLayoutConstraint *bannerYPositionConstraint
 @property  NSLayoutConstraint *bannerWidthConstraint

  // instance methods
  -[GKNotificationBannerViewController .cxx_destruct]
  -[GKNotificationBannerViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[GKNotificationBannerViewController supportedInterfaceOrientations]
  -[GKNotificationBannerViewController bannerView]
  -[GKNotificationBannerViewController setBannerView:]
  -[GKNotificationBannerViewController windowPointInside:withEvent:]
  -[GKNotificationBannerViewController windowTouchesEnded:withEvent:]
  -[GKNotificationBannerViewController handleWindowSingleTap:]
  -[GKNotificationBannerViewController handleWindowPan:]
  -[GKNotificationBannerViewController addBannerView:]
  -[GKNotificationBannerViewController showCurrentBanner]
  -[GKNotificationBannerViewController hideBannerQuickly:]
  -[GKNotificationBannerViewController bannerVisible]
  -[GKNotificationBannerViewController setBannerYPositionConstraint:]
  -[GKNotificationBannerViewController setBannerWidthConstraint:]
  -[GKNotificationBannerViewController addConstraintsForBannerView]
  -[GKNotificationBannerViewController addConstraintsForTVOSBannerView]
  -[GKNotificationBannerViewController setBannerAnimating:]
  -[GKNotificationBannerViewController setBannerVisible:]
  -[GKNotificationBannerViewController _visibleBannerCenterPosition:]
  -[GKNotificationBannerViewController bannerYPositionConstraint]
  -[GKNotificationBannerViewController _hiddenBannerPosition:]
  -[GKNotificationBannerViewController bannerWidthConstraint]
  -[GKNotificationBannerViewController bannerWidthForViewSize:]
  -[GKNotificationBannerViewController bannerAnimating]


GKNotificationBanner : NSObject
  // class methods
  +[GKNotificationBanner bannerViewWithTitle:image:player:message:actionMessage:]
  +[GKNotificationBanner bannerViewWithTitle:image:player:message:]
  +[GKNotificationBanner showWelcomeBannerWithTitle:message:completionHandler:]
  +[GKNotificationBanner showBannerWithTitle:message:completionHandler:]
  +[GKNotificationBanner showBannerWithTitle:message:duration:completionHandler:]
  +[GKNotificationBanner showBannerWithTitle:image:message:completionHandler:]
  +[GKNotificationBanner showBannerWithTitle:image:message:touchHandler:]
  +[GKNotificationBanner showBannerWithTitle:player:message:completionHandler:]
  +[GKNotificationBanner showBannerWithTitle:player:message:touchHandler:]
  +[GKNotificationBanner bannerViewWithTitle:message:actionMessage:]


GKChallengeEventHandlerUIDelegate : NSObject <GKChallengeEventHandlerUIDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKChallengeEventHandlerUIDelegate showReceivedBannerForIssuingPlayer:challenge:handler:]
  -[GKChallengeEventHandlerUIDelegate showRemotelyCompletedBannerForReceivingPlayer:challenge:handler:]
  -[GKChallengeEventHandlerUIDelegate showLocallyCompletedBannerForIssuingPlayer:challenge:handler:]


GKDashboardHeaderView : UICollectionReusableView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  UISegmentedControl *segmentedControl
 @property  BOOL didSetupLikeButton
 @property  GKGameRecord *gameRecord

  // class methods
  +[GKDashboardHeaderView defaultHeight]

  // instance methods
  -[GKDashboardHeaderView dealloc]
  -[GKDashboardHeaderView awakeFromNib]
  -[GKDashboardHeaderView segmentedControl]
  -[GKDashboardHeaderView setSegmentedControl:]
  -[GKDashboardHeaderView setGameRecord:]
  -[GKDashboardHeaderView gameRecord]
  -[GKDashboardHeaderView didSetupLikeButton]
  -[GKDashboardHeaderView setDidSetupLikeButton:]


GKExtensionRemoteViewController : _UIRemoteViewController /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics <GKExtensionProtocol, GKExtensionHostProtocol>
 @property  NSExtension *extension
 @property  id requestIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  GKGame *game

  // class methods
  +[GKExtensionRemoteViewController shouldPropagateAppearanceCustomizations]
  +[GKExtensionRemoteViewController setupCallbackBlocksForExtension:withParentViewController:]
  +[GKExtensionRemoteViewController viewControllerForExtension:inputItems:completionHandler:]
  +[GKExtensionRemoteViewController initialItemsForExtension]
  +[GKExtensionRemoteViewController dismissAutomaticallyAfterExtensionCompletion]

  // instance methods
  -[GKExtensionRemoteViewController init]
  -[GKExtensionRemoteViewController dealloc]
  -[GKExtensionRemoteViewController viewWillAppear:]
  -[GKExtensionRemoteViewController viewDidLoad]
  -[GKExtensionRemoteViewController supportedInterfaceOrientations]
  -[GKExtensionRemoteViewController viewDidDisappear:]
  -[GKExtensionRemoteViewController shouldAutorotateToInterfaceOrientation:]
  -[GKExtensionRemoteViewController setRequestIdentifier:]
  -[GKExtensionRemoteViewController setExtension:]
  -[GKExtensionRemoteViewController extension]
  -[GKExtensionRemoteViewController requestIdentifier]
  -[GKExtensionRemoteViewController game]
  -[GKExtensionRemoteViewController setGame:]
  -[GKExtensionRemoteViewController setInitialState:withReply:]
  -[GKExtensionRemoteViewController _desiredStatusBarStyle]
  -[GKExtensionRemoteViewController messageFromExtension:]
  -[GKExtensionRemoteViewController cancelExtension]
  -[GKExtensionRemoteViewController extensionIsCanceling]
  -[GKExtensionRemoteViewController extensionObjectProxy]
  -[GKExtensionRemoteViewController messageFromClient:]
  -[GKExtensionRemoteViewController sendMessageToExtension:]
  -[GKExtensionRemoteViewController hostApp:grantingAccessExtensionSandbox:replyWithEndpoint:]
  -[GKExtensionRemoteViewController extensionIsFinishing]


GKExtensionHostContext : NSExtensionContext /System/Library/Frameworks/MessageUI.framework/MessageUI <GKExtensionHostProtocol>
 @property  GKExtensionRemoteViewController *remoteViewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  GKGame *game

  // instance methods
  -[GKExtensionHostContext dealloc]
  -[GKExtensionHostContext remoteViewController]
  -[GKExtensionHostContext setRemoteViewController:]
  -[GKExtensionHostContext game]
  -[GKExtensionHostContext setGame:]
  -[GKExtensionHostContext messageFromExtension:]


GKNetworkActivityIndicatorDelegate : NSObject <GKDaemonProxyNetworkActivityIndicatorDelegate>
 @property  int networkIndicatorCount
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKNetworkActivityIndicatorDelegate beginNetworkActivity]
  -[GKNetworkActivityIndicatorDelegate endNetworkActivity]
  -[GKNetworkActivityIndicatorDelegate resetNetworkActivity]
  -[GKNetworkActivityIndicatorDelegate networkIndicatorCount]
  -[GKNetworkActivityIndicatorDelegate setNetworkIndicatorCount:]


GKFriendRequestViewController : GKHostedViewController
 @property  UIViewController *requestingViewController
 @property  NSObject<GKFriendRequestViewControllerDelegate> *delegate
 @property  NSString *friendCode
 @property  NSString *friendSupportPageURL

  // class methods
  +[GKFriendRequestViewController addFriends:]
  +[GKFriendRequestViewController presentFriendRequestOn:withFriendCode:andFriendSupportPageURL:]
  +[GKFriendRequestViewController presentAlertControllerOn:withMessage:andTitle:]

  // instance methods
  -[GKFriendRequestViewController init]
  -[GKFriendRequestViewController delegate]
  -[GKFriendRequestViewController setDelegate:]
  -[GKFriendRequestViewController .cxx_destruct]
  -[GKFriendRequestViewController _presentingViewController]
  -[GKFriendRequestViewController friendCode]
  -[GKFriendRequestViewController friendSupportPageURL]
  -[GKFriendRequestViewController notifyDelegateOnWillFinish]
  -[GKFriendRequestViewController setFriendCode:]
  -[GKFriendRequestViewController setFriendSupportPageURL:]
  -[GKFriendRequestViewController serviceSideViewControllerClassName]
  -[GKFriendRequestViewController setRequestingViewController:]
  -[GKFriendRequestViewController requestingViewController]


GKShowcaseCellView : UICollectionReusableView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  GKHairlineView *underlineView
 @property  UICollectionViewCell *cell
 @property  SEL touchedShowcaseCellAction

  // class methods
  +[GKShowcaseCellView requiresConstraintBasedLayout]

  // instance methods
  -[GKShowcaseCellView dealloc]
  -[GKShowcaseCellView prepareForReuse]
  -[GKShowcaseCellView initWithFrame:]
  -[GKShowcaseCellView touchesEnded:withEvent:]
  -[GKShowcaseCellView cell]
  -[GKShowcaseCellView setCell:]
  -[GKShowcaseCellView alignmentRectForText]
  -[GKShowcaseCellView underlineView]
  -[GKShowcaseCellView touchedShowcaseCellAction]
  -[GKShowcaseCellView setTouchedShowcaseCellAction:]
  -[GKShowcaseCellView setUnderlineView:]


GKDashboardKeyboardAccessoryView : UIView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  UILabel *titleLabel
 @property  UILabel *subtitleLabel
 @property  UILabel *descriptionLabel

  // instance methods
  -[GKDashboardKeyboardAccessoryView titleLabel]
  -[GKDashboardKeyboardAccessoryView setTitleLabel:]
  -[GKDashboardKeyboardAccessoryView setDescriptionLabel:]
  -[GKDashboardKeyboardAccessoryView descriptionLabel]
  -[GKDashboardKeyboardAccessoryView setSubtitleLabel:]
  -[GKDashboardKeyboardAccessoryView subtitleLabel]


GKScreenConfigurationController : NSObject
 @property  GKEventEmitter *emitter
 @property  double greatestScreenScale

  // class methods
  +[GKScreenConfigurationController sharedController]
  +[GKScreenConfigurationController _scaleForCurrentDisplayConfiguration]

  // instance methods
  -[GKScreenConfigurationController init]
  -[GKScreenConfigurationController .cxx_destruct]
  -[GKScreenConfigurationController registerListener:]
  -[GKScreenConfigurationController greatestScreenScale]
  -[GKScreenConfigurationController setEmitter:]
  -[GKScreenConfigurationController emitter]
  -[GKScreenConfigurationController _screensDidChange:]
  -[GKScreenConfigurationController unregisterListener:]


GKTurnBasedMatchDetailViewController : GKBasicCollectionViewController
 @property  GKTurnBasedParticipantsDataSource *participantsDataSource
 @property  GKTurnBasedMatchDetailHeaderView *headerView
 @property  BOOL didFloatInBubbles
 @property  BOOL isCompactHeader
 @property  GKTurnBasedMatch *match
 @property  GKGame *game
 @property  BOOL isInGame
 @property  BOOL shouldShowPlay
 @property  BOOL shouldShowQuit
 @property  NSObject<GKTurnBasedMatchDetailViewControllerDelegate> *delegate

  // instance methods
  -[GKTurnBasedMatchDetailViewController init]
  -[GKTurnBasedMatchDetailViewController dealloc]
  -[GKTurnBasedMatchDetailViewController delegate]
  -[GKTurnBasedMatchDetailViewController setDelegate:]
  -[GKTurnBasedMatchDetailViewController observeValueForKeyPath:ofObject:change:context:]
  -[GKTurnBasedMatchDetailViewController traitCollectionDidChange:]
  -[GKTurnBasedMatchDetailViewController viewWillAppear:]
  -[GKTurnBasedMatchDetailViewController viewWillDisappear:]
  -[GKTurnBasedMatchDetailViewController viewDidLoad]
  -[GKTurnBasedMatchDetailViewController viewDidAppear:]
  -[GKTurnBasedMatchDetailViewController headerView]
  -[GKTurnBasedMatchDetailViewController setHeaderView:]
  -[GKTurnBasedMatchDetailViewController collectionView:shouldHighlightItemAtIndexPath:]
  -[GKTurnBasedMatchDetailViewController collectionView:shouldSelectItemAtIndexPath:]
  -[GKTurnBasedMatchDetailViewController acceptInvitation:]
  -[GKTurnBasedMatchDetailViewController declineInvitation:]
  -[GKTurnBasedMatchDetailViewController game]
  -[GKTurnBasedMatchDetailViewController setGame:]
  -[GKTurnBasedMatchDetailViewController match]
  -[GKTurnBasedMatchDetailViewController setActionButtonEnabled:]
  -[GKTurnBasedMatchDetailViewController setMatch:]
  -[GKTurnBasedMatchDetailViewController didEnterNoContentState]
  -[GKTurnBasedMatchDetailViewController didUpdateModel]
  -[GKTurnBasedMatchDetailViewController configureDataSource]
  -[GKTurnBasedMatchDetailViewController floatInBubbles]
  -[GKTurnBasedMatchDetailViewController shouldShowPlay]
  -[GKTurnBasedMatchDetailViewController setShouldShowPlay:]
  -[GKTurnBasedMatchDetailViewController chooseMatch:]
  -[GKTurnBasedMatchDetailViewController quitMatch:]
  -[GKTurnBasedMatchDetailViewController removeMatch:]
  -[GKTurnBasedMatchDetailViewController handleTurnBasedEvent:]
  -[GKTurnBasedMatchDetailViewController shouldShowQuit]
  -[GKTurnBasedMatchDetailViewController setShouldShowQuit:]
  -[GKTurnBasedMatchDetailViewController participantsDataSource]
  -[GKTurnBasedMatchDetailViewController configureViewFactories]
  -[GKTurnBasedMatchDetailViewController configureMatchDetailHeader:]
  -[GKTurnBasedMatchDetailViewController setNeedsFloatInBubbles]
  -[GKTurnBasedMatchDetailViewController setIsCompactHeader:]
  -[GKTurnBasedMatchDetailViewController updateHeader]
  -[GKTurnBasedMatchDetailViewController buyButtonPressed:]
  -[GKTurnBasedMatchDetailViewController setupActionButton]
  -[GKTurnBasedMatchDetailViewController animateOutBubbleWithFocus:completion:]
  -[GKTurnBasedMatchDetailViewController _gkRepresentedObject]
  -[GKTurnBasedMatchDetailViewController isInGame]
  -[GKTurnBasedMatchDetailViewController setIsInGame:]
  -[GKTurnBasedMatchDetailViewController setParticipantsDataSource:]
  -[GKTurnBasedMatchDetailViewController didFloatInBubbles]
  -[GKTurnBasedMatchDetailViewController setDidFloatInBubbles:]
  -[GKTurnBasedMatchDetailViewController isCompactHeader]


GKMetricData : NSObject
 @property  GKSectionMetrics *sectionMetrics
 @property  GKGridLayoutMetrics *metrics
 @property  NSString *layoutKey
 @property  unsigned long currentMaxVisibleItemCount
 @property  unsigned long filteredTotalItemCount
 @property  NSMutableArray *headerPinnableAttributes
 @property  NSMutableArray *footerPinnableAttributes

  // instance methods
  -[GKMetricData init]
  -[GKMetricData dealloc]
  -[GKMetricData metrics]
  -[GKMetricData setMetrics:]
  -[GKMetricData localDescription]
  -[GKMetricData _gkDescriptionWithChildren:]
  -[GKMetricData sectionMetrics]
  -[GKMetricData layoutKey]
  -[GKMetricData setFilteredTotalItemCount:]
  -[GKMetricData filteredTotalItemCount]
  -[GKMetricData currentMaxVisibleItemCount]
  -[GKMetricData headerPinnableAttributes]
  -[GKMetricData footerPinnableAttributes]
  -[GKMetricData addAttributes:forLocation:]
  -[GKMetricData setCurrentMaxVisibleItemCount:]
  -[GKMetricData setHeaderPinnableAttributes:]
  -[GKMetricData setFooterPinnableAttributes:]


GKBubbleFlowRootViewController : GKViewController
 @property  BOOL showingInterstitial
 @property  BOOL currentlyAnimatingADismiss
 @property  GKBubbleFlowAnimator *animator
 @property  BOOL coveringContentUnderneath

  // class methods
  +[GKBubbleFlowRootViewController sharedBubbleFlowRootViewController]
  +[GKBubbleFlowRootViewController _useTwoPartBubbleFlowModalPresentation]

  // instance methods
  -[GKBubbleFlowRootViewController init]
  -[GKBubbleFlowRootViewController dealloc]
  -[GKBubbleFlowRootViewController viewDidLoad]
  -[GKBubbleFlowRootViewController setAnimator:]
  -[GKBubbleFlowRootViewController animator]
  -[GKBubbleFlowRootViewController isShowingInterstitial]
  -[GKBubbleFlowRootViewController _updateViewAlpha:animated:completion:]
  -[GKBubbleFlowRootViewController pseudoModalViewController]
  -[GKBubbleFlowRootViewController popAllModalViewControllersAnimated:completion:]
  -[GKBubbleFlowRootViewController showInterstitialViewAnimated:completion:]
  -[GKBubbleFlowRootViewController clearInterstitialViewAnimated:completion:]
  -[GKBubbleFlowRootViewController setShowingInterstitial:]
  -[GKBubbleFlowRootViewController isCoveringContentUnderneath]
  -[GKBubbleFlowRootViewController isCurrentlyAnimatingADismiss]
  -[GKBubbleFlowRootViewController setCurrentlyAnimatingADismiss:]


_GKBubbleFlowPseudoModalViewController : GKBubbleFlowRootViewController
  // instance methods
  -[_GKBubbleFlowPseudoModalViewController presentViewController:animated:completion:]
  -[_GKBubbleFlowPseudoModalViewController dismissViewControllerAnimated:completion:]
  -[_GKBubbleFlowPseudoModalViewController supportedInterfaceOrientations]
  -[_GKBubbleFlowPseudoModalViewController _backgroundColorForModalFormSheet]
  -[_GKBubbleFlowPseudoModalViewController _cleanupRemovableCoveredViewControllers]


_GKBubbleFlowOnDemandFormSheetViewController : GKBubbleFlowRootViewController
 @property  _GKBubbleFlowPseudoModalViewController *pseudoModalViewController
 @property  BOOL falseDismissSkippedOrCompleted

  // instance methods
  -[_GKBubbleFlowOnDemandFormSheetViewController dealloc]
  -[_GKBubbleFlowOnDemandFormSheetViewController presentViewController:animated:completion:]
  -[_GKBubbleFlowOnDemandFormSheetViewController dismissViewControllerAnimated:completion:]
  -[_GKBubbleFlowOnDemandFormSheetViewController viewDidLoad]
  -[_GKBubbleFlowOnDemandFormSheetViewController pseudoModalViewController]
  -[_GKBubbleFlowOnDemandFormSheetViewController popAllModalViewControllersAnimated:completion:]
  -[_GKBubbleFlowOnDemandFormSheetViewController clearInterstitialViewAnimated:completion:]
  -[_GKBubbleFlowOnDemandFormSheetViewController isCoveringContentUnderneath]
  -[_GKBubbleFlowOnDemandFormSheetViewController _ensureWeHaveAPresentedModalSetupRootViewControllerToPresent:andThen:animated:]
  -[_GKBubbleFlowOnDemandFormSheetViewController _cleanUpOurPresentedModalSetupRootViewControllerIfNecessaryAnimated:]
  -[_GKBubbleFlowOnDemandFormSheetViewController _obscuringContentUnderneath]
  -[_GKBubbleFlowOnDemandFormSheetViewController setPseudoModalViewController:]
  -[_GKBubbleFlowOnDemandFormSheetViewController falseDismissSkippedOrCompleted]
  -[_GKBubbleFlowOnDemandFormSheetViewController setFalseDismissSkippedOrCompleted:]


GKMatchmakerViewController : UINavigationController /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics <GKMatchDelegate, GKExtensionParentViewControllerProtocol>
 @property  GKMatchmakerHostViewController *remoteViewController
 @property  GKInvite *acceptedInvite
 @property  GKMatch *match
 @property  NSMutableArray *hostedPlayers
 @property  UIAlertController *alertController
 @property  GKMatchRequest *matchRequest
 @property  <GKMatchmakerViewControllerDelegate> *matchmakerDelegate
 @property  BOOL hosted
 @property  NSString *defaultInvitationMessage
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[GKMatchmakerViewController _preventsAppearanceProxyCustomization]

  // instance methods
  -[GKMatchmakerViewController init]
  -[GKMatchmakerViewController dealloc]
  -[GKMatchmakerViewController .cxx_destruct]
  -[GKMatchmakerViewController cancel]
  -[GKMatchmakerViewController finishWithError:]
  -[GKMatchmakerViewController setAlertController:]
  -[GKMatchmakerViewController alertController]
  -[GKMatchmakerViewController viewWillAppear:]
  -[GKMatchmakerViewController viewDidLoad]
  -[GKMatchmakerViewController supportedInterfaceOrientations]
  -[GKMatchmakerViewController viewDidAppear:]
  -[GKMatchmakerViewController viewDidDisappear:]
  -[GKMatchmakerViewController shouldAutorotateToInterfaceOrientation:]
  -[GKMatchmakerViewController remoteViewController]
  -[GKMatchmakerViewController applicationWillEnterForeground:]
  -[GKMatchmakerViewController setRemoteViewController:]
  -[GKMatchmakerViewController sendData:]
  -[GKMatchmakerViewController match]
  -[GKMatchmakerViewController setHosted:]
  -[GKMatchmakerViewController _setupRemoteViewController]
  -[GKMatchmakerViewController setMatch:]
  -[GKMatchmakerViewController _setupChildViewController]
  -[GKMatchmakerViewController authenticationChanged:]
  -[GKMatchmakerViewController extensionDidFinishWithError:]
  -[GKMatchmakerViewController matchRequest]
  -[GKMatchmakerViewController initWithMatchRequest:]
  -[GKMatchmakerViewController setMatchRequest:]
  -[GKMatchmakerViewController isHosted]
  -[GKMatchmakerViewController acceptedInvite]
  -[GKMatchmakerViewController setAcceptedInvite:]
  -[GKMatchmakerViewController localPlayerAcceptedGameInvite:]
  -[GKMatchmakerViewController playersToInvite:]
  -[GKMatchmakerViewController defaultInvitationMessage]
  -[GKMatchmakerViewController setDefaultInvitationMessage:]
  -[GKMatchmakerViewController setupNotifications]
  -[GKMatchmakerViewController inviterCancelledNotification:]
  -[GKMatchmakerViewController createMatchForAcceptedInvite]
  -[GKMatchmakerViewController setHostedPlayer:connected:]
  -[GKMatchmakerViewController matchmakerDelegate]
  -[GKMatchmakerViewController finishWithMatch]
  -[GKMatchmakerViewController finishWithPlayers]
  -[GKMatchmakerViewController hostedPlayers]
  -[GKMatchmakerViewController invitedPlayer:responded:]
  -[GKMatchmakerViewController cancelPendingInviteToPlayer:]
  -[GKMatchmakerViewController setMatchmakerDelegate:]
  -[GKMatchmakerViewController match:didReceiveData:fromRemotePlayer:]
  -[GKMatchmakerViewController match:player:didChangeConnectionState:]
  -[GKMatchmakerViewController match:didFailWithError:]
  -[GKMatchmakerViewController initWithInvite:]
  -[GKMatchmakerViewController setHostedPlayer:didConnect:]
  -[GKMatchmakerViewController addPlayersToMatch:]
  -[GKMatchmakerViewController setHostedPlayerReady:]
  -[GKMatchmakerViewController cancelMatching]
  -[GKMatchmakerViewController shareMatchWithRequest:handler:]
  -[GKMatchmakerViewController setShareInvitees:]
  -[GKMatchmakerViewController startMatchingWithRequest:]
  -[GKMatchmakerViewController setBrowsingForNearbyPlayers:]
  -[GKMatchmakerViewController setHostedPlayers:]


GKColumnDividerView : UICollectionReusableView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  GKHairlineView *hairlineView

  // instance methods
  -[GKColumnDividerView dealloc]
  -[GKColumnDividerView initWithFrame:]
  -[GKColumnDividerView setHairlineView:]
  -[GKColumnDividerView hairlineView]


GKCollectionViewController : UICollectionViewController /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics <_GKStateMachineDelegate, GKCollectionViewDataSourceDelegate, UISearchBarDelegate, UITextFieldDelegate, GKSegmentedSectionDataSourceEventHandler>
 @property  BOOL skipLoadAfterViewDidLoad
 @property  GKLoadableContentStateMachine *loadingMachine
 @property  UICollectionViewLayout *defaultLayout
 @property  UIActivityIndicatorView *loadingIndicatorView
 @property  long long gkFocusBubbleType
 @property  long long previousOrientation
 @property  BOOL active
 @property  BOOL hasViewFactories
 @property  BOOL didSlideIn
 @property  long long appearCount
 @property  NSMapTable *reusableViewsIHaveSeen
 @property  NSObject<OS_dispatch_queue> *batchUpdateQueue
 @property  long long batchUpdateCount
 @property  NSUUID *currentUpdateID
 @property  GKSwipeToEditStateMachine *swipeStateMachine
 @property  <UICollectionViewDataSource> *dataSource
 @property  GKColorPalette *colorPalette
 @property  BOOL shouldSlideInContents
 @property  BOOL showSupplementaryViewsWhileLoading
 @property  NSString *loadingState
 @property  BOOL readyToDisplayData
 @property  GKPlaceholderView *placeholderView
 @property  UINavigationController *placeholderNavigationController
 @property  GKSearchBar *activeSearchBar
 @property  NSString *currentSearchText
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[GKCollectionViewController _shouldForwardViewWillTransitionToSize]
  +[GKCollectionViewController _initializeSafeCategoryFromValidationManager]

  // instance methods
  -[GKCollectionViewController dealloc]
  -[GKCollectionViewController setActive:]
  -[GKCollectionViewController dataSource]
  -[GKCollectionViewController setDataSource:]
  -[GKCollectionViewController active]
  -[GKCollectionViewController loadView]
  -[GKCollectionViewController viewWillAppear:]
  -[GKCollectionViewController viewWillDisappear:]
  -[GKCollectionViewController initWithCollectionViewLayout:]
  -[GKCollectionViewController collectionView]
  -[GKCollectionViewController viewDidLoad]
  -[GKCollectionViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[GKCollectionViewController viewDidAppear:]
  -[GKCollectionViewController viewDidDisappear:]
  -[GKCollectionViewController animationDidStop:finished:]
  -[GKCollectionViewController searchBar:textDidChange:]
  -[GKCollectionViewController searchBarShouldBeginEditing:]
  -[GKCollectionViewController searchBarCancelButtonClicked:]
  -[GKCollectionViewController searchBarTextDidBeginEditing:]
  -[GKCollectionViewController searchBarTextDidEndEditing:]
  -[GKCollectionViewController searchBarSearchButtonClicked:]
  -[GKCollectionViewController collectionView:shouldHighlightItemAtIndexPath:]
  -[GKCollectionViewController collectionView:willDisplayCell:forItemAtIndexPath:]
  -[GKCollectionViewController collectionView:willDisplaySupplementaryView:forElementKind:atIndexPath:]
  -[GKCollectionViewController willAnimateRotationToInterfaceOrientation:duration:]
  -[GKCollectionViewController viewLayoutMarginsDidChange]
  -[GKCollectionViewController setNeedsReload]
  -[GKCollectionViewController invalidateSearch]
  -[GKCollectionViewController updateMetrics]
  -[GKCollectionViewController currentSearchText]
  -[GKCollectionViewController setCurrentSearchText:]
  -[GKCollectionViewController setPlaceholderView:]
  -[GKCollectionViewController placeholderView]
  -[GKCollectionViewController hasLoaded]
  -[GKCollectionViewController setColorPalette:]
  -[GKCollectionViewController colorPalette]
  -[GKCollectionViewController defaultLayout]
  -[GKCollectionViewController setDefaultLayout:]
  -[GKCollectionViewController loadingState]
  -[GKCollectionViewController defaultColorPalette]
  -[GKCollectionViewController stateWillChange]
  -[GKCollectionViewController stateDidChange]
  -[GKCollectionViewController didEnterLoadingState]
  -[GKCollectionViewController didExitLoadingState]
  -[GKCollectionViewController didEnterNoContentState]
  -[GKCollectionViewController didEnterErrorState]
  -[GKCollectionViewController segmentedSectionDataSource:inSection:didSelectDataSourceWithIndex:]
  -[GKCollectionViewController refreshContentsForDataType:userInfo:updateNotifier:]
  -[GKCollectionViewController dataSource:didInsertItemsAtIndexPaths:]
  -[GKCollectionViewController dataSource:didRemoveItemsAtIndexPaths:]
  -[GKCollectionViewController dataSource:didRefreshItemsAtIndexPaths:]
  -[GKCollectionViewController dataSource:didMoveItemAtIndexPath:toIndexPath:]
  -[GKCollectionViewController dataSource:didInsertSections:]
  -[GKCollectionViewController dataSource:didRemoveSections:]
  -[GKCollectionViewController dataSource:didRefreshSections:]
  -[GKCollectionViewController dataSource:didMoveSection:toSection:]
  -[GKCollectionViewController dataSourceDidReloadData:]
  -[GKCollectionViewController dataSource:performBatchUpdate:complete:]
  -[GKCollectionViewController _gkRecursiveDescription]
  -[GKCollectionViewController swipeToDeleteCell:]
  -[GKCollectionViewController willDismissActionSheetFromCell:]
  -[GKCollectionViewController configureDataSource]
  -[GKCollectionViewController gkDataSource]
  -[GKCollectionViewController loadingMachine]
  -[GKCollectionViewController didEnterLoadedState]
  -[GKCollectionViewController didExitLoadedState]
  -[GKCollectionViewController setLoadingMachine:]
  -[GKCollectionViewController loadingIndicatorView]
  -[GKCollectionViewController setLoadingIndicatorView:]
  -[GKCollectionViewController _gkSetContentsNeedUpdateWithHandler:]
  -[GKCollectionViewController _gkShouldRefreshContentsForDataType:userInfo:]
  -[GKCollectionViewController _gkRefreshContentsForDataType:userInfo:]
  -[GKCollectionViewController viewDidDisappearAnimated:bubbleFlow:]
  -[GKCollectionViewController didEnterRefreshingState]
  -[GKCollectionViewController didExitRefreshingState]
  -[GKCollectionViewController gkFocusBubbleType]
  -[GKCollectionViewController setGkFocusBubbleType:]
  -[GKCollectionViewController showCollectionView]
  -[GKCollectionViewController configureViewFactories]
  -[GKCollectionViewController setReusableViewsIHaveSeen:]
  -[GKCollectionViewController loadDataWithCompletionHandlerAndError:]
  -[GKCollectionViewController setPreviousOrientation:]
  -[GKCollectionViewController _systemContentSizeSettingDidChange:]
  -[GKCollectionViewController updateLayoutGuideOffsets]
  -[GKCollectionViewController clearSelectionHighlight]
  -[GKCollectionViewController shouldSlideInContents]
  -[GKCollectionViewController showSupplementaryViewsWhileLoading]
  -[GKCollectionViewController previousOrientation]
  -[GKCollectionViewController startLoadingIndicator]
  -[GKCollectionViewController stopLoadingIndicatorWithoutAnimation]
  -[GKCollectionViewController hidePlaceholderAnimated:]
  -[GKCollectionViewController updateDynamicColumnCountsForViewSize:]
  -[GKCollectionViewController setActiveSearchBar:]
  -[GKCollectionViewController clearButtonPressed:]
  -[GKCollectionViewController currentSearchTerms]
  -[GKCollectionViewController _finishUpdates:withCompletionHandler:]
  -[GKCollectionViewController _applyUpdates:withCompletionHandler:]
  -[GKCollectionViewController _loadDataWithCompletionHandlerAndError:]
  -[GKCollectionViewController batchUpdateQueue]
  -[GKCollectionViewController setCurrentUpdateID:]
  -[GKCollectionViewController footerViewAboveShowMoreViewAtIndexPath:]
  -[GKCollectionViewController showMoreTextMarginAtIndexPath:]
  -[GKCollectionViewController stopLoadingIndicator]
  -[GKCollectionViewController showPlaceholderWithTitle:message:buttonTitle:animated:block:]
  -[GKCollectionViewController slideInContents]
  -[GKCollectionViewController _reallyStartLoadingIndicator]
  -[GKCollectionViewController setIsReadyToDisplayData:]
  -[GKCollectionViewController didBecomeReadyToDisplayData]
  -[GKCollectionViewController didDisplayData]
  -[GKCollectionViewController placeholderNavigationController]
  -[GKCollectionViewController addPlaceholderViewToView:]
  -[GKCollectionViewController setPlaceholderNavigationController:]
  -[GKCollectionViewController dataSource:didUpdatePlaceholderVisibility:]
  -[GKCollectionViewController dataSourceDidMoveSectionsWithItems:]
  -[GKCollectionViewController updateSelectionHighlight]
  -[GKCollectionViewController nearestSelectableIndexPath:]
  -[GKCollectionViewController didTouchShowMore:]
  -[GKCollectionViewController applyShowMoreLayoutAttributesForShowMoreView:atIndexPath:]
  -[GKCollectionViewController stateDidChangeFromNoContentStateToLoadingState]
  -[GKCollectionViewController stateDidChangeFromErrorStateToLoadingState]
  -[GKCollectionViewController stateDidChangeFromLoadedStateToLoadingState]
  -[GKCollectionViewController stateDidChangeFromNilToLoadingState]
  -[GKCollectionViewController didExitNoContentState]
  -[GKCollectionViewController didExitErrorState]
  -[GKCollectionViewController completeWhenReadyToDisplayData:]
  -[GKCollectionViewController setShouldSlideInContents:]
  -[GKCollectionViewController setShowSupplementaryViewsWhileLoading:]
  -[GKCollectionViewController readyToDisplayData]
  -[GKCollectionViewController activeSearchBar]
  -[GKCollectionViewController hasViewFactories]
  -[GKCollectionViewController setHasViewFactories:]
  -[GKCollectionViewController didSlideIn]
  -[GKCollectionViewController setDidSlideIn:]
  -[GKCollectionViewController appearCount]
  -[GKCollectionViewController setAppearCount:]
  -[GKCollectionViewController reusableViewsIHaveSeen]
  -[GKCollectionViewController setBatchUpdateQueue:]
  -[GKCollectionViewController batchUpdateCount]
  -[GKCollectionViewController setBatchUpdateCount:]
  -[GKCollectionViewController currentUpdateID]
  -[GKCollectionViewController swipeStateMachine]
  -[GKCollectionViewController setSwipeStateMachine:]
  -[GKCollectionViewController shutActionPaneAnimated:]
  -[GKCollectionViewController setSkipLoadAfterViewDidLoad:]
  -[GKCollectionViewController skipLoadAfterViewDidLoad]


GKStatusCell : GKCollectionViewCell
 @property  UILabel *statusLabel

  // instance methods
  -[GKStatusCell dealloc]
  -[GKStatusCell prepareForReuse]
  -[GKStatusCell setStatus:]
  -[GKStatusCell initWithFrame:]
  -[GKStatusCell setStatusLabel:]
  -[GKStatusCell statusLabel]
  -[GKStatusCell canRemoveItem]


GKDashboardViewController : GKDashboardCollectionViewController
 @property  GKGameRecord *gameRecord
 @property  GKDashboardHeaderView *headerView
 @property  GKCollectionMultiDataSource *multiDataSource
 @property  NSMutableDictionary *viewStateIndexes
 @property  NSArray *titles
 @property  GKChallengeDataSource *challengeDataSource
 @property  long long viewState
 @property  long long leaderboardTimeScope
 @property  NSString *leaderboardIdentifier
 @property  BOOL shouldShowPlayForChallenge
 @property  BOOL shouldShowPlayForTurnBasedMatch
 @property  BOOL shouldShowQuitForTurnBasedMatch

  // instance methods
  -[GKDashboardViewController dealloc]
  -[GKDashboardViewController viewWillAppear:]
  -[GKDashboardViewController viewDidLoad]
  -[GKDashboardViewController headerView]
  -[GKDashboardViewController setHeaderView:]
  -[GKDashboardViewController collectionView:viewForSupplementaryElementOfKind:atIndexPath:]
  -[GKDashboardViewController setTitles:]
  -[GKDashboardViewController titles]
  -[GKDashboardViewController loadData]
  -[GKDashboardViewController viewState]
  -[GKDashboardViewController setViewState:]
  -[GKDashboardViewController selectedSegmentChanged:]
  -[GKDashboardViewController setGameRecord:]
  -[GKDashboardViewController gameRecord]
  -[GKDashboardViewController setupNoContentView:withError:]
  -[GKDashboardViewController initWithGameRecord:]
  -[GKDashboardViewController leaderboardIdentifier]
  -[GKDashboardViewController _gkShouldRefreshContentsForDataType:userInfo:]
  -[GKDashboardViewController _gkRefreshContentsForDataType:userInfo:]
  -[GKDashboardViewController setLeaderboardIdentifier:]
  -[GKDashboardViewController shouldShowPlayForTurnBasedMatch]
  -[GKDashboardViewController shouldShowQuitForTurnBasedMatch]
  -[GKDashboardViewController shouldShowPlayForChallenge]
  -[GKDashboardViewController leaderboardTimeScope]
  -[GKDashboardViewController setLeaderboardTimeScope:]
  -[GKDashboardViewController setMultiDataSource:]
  -[GKDashboardViewController setViewStateIndexes:]
  -[GKDashboardViewController addDataSource:withTitle:forViewState:]
  -[GKDashboardViewController setChallengeDataSource:]
  -[GKDashboardViewController selectDataSourceAtIndex:updateCollectionView:]
  -[GKDashboardViewController showLeaderboardVC]
  -[GKDashboardViewController setupSegmentedControl]
  -[GKDashboardViewController setShouldShowPlayForChallenge:]
  -[GKDashboardViewController setShouldShowPlayForTurnBasedMatch:]
  -[GKDashboardViewController setShouldShowQuitForTurnBasedMatch:]
  -[GKDashboardViewController multiDataSource]
  -[GKDashboardViewController viewStateIndexes]
  -[GKDashboardViewController challengeDataSource]


GKCenteringScrollView : UIScrollView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  UIView *contentView
 @property  UIView *footerView

  // instance methods
  -[GKCenteringScrollView dealloc]
  -[GKCenteringScrollView contentView]
  -[GKCenteringScrollView setContentView:]
  -[GKCenteringScrollView layoutSubviews]
  -[GKCenteringScrollView footerView]
  -[GKCenteringScrollView setFooterView:]
  -[GKCenteringScrollView centerContentViewIfDesirable]


GKDashboardHostViewController : GKExtensionRemoteViewController <GKGameCenterDashboardServiceProtocol>
 @property  NSObject *dashboardAssetController
 @property  GKGameCenterViewController *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  GKGame *game

  // class methods
  +[GKDashboardHostViewController dashboardExtension]
  +[GKDashboardHostViewController dismissAutomaticallyAfterExtensionCompletion]

  // instance methods
  -[GKDashboardHostViewController dealloc]
  -[GKDashboardHostViewController delegate]
  -[GKDashboardHostViewController setDelegate:]
  -[GKDashboardHostViewController initWithNibName:bundle:]
  -[GKDashboardHostViewController viewWillAppear:]
  -[GKDashboardHostViewController messageFromExtension:]
  -[GKDashboardHostViewController finishWithMatch:]
  -[GKDashboardHostViewController playerQuitMatch:]
  -[GKDashboardHostViewController hostDidChangeViewState:]
  -[GKDashboardHostViewController hostDidChangeLeaderboardIdentifier:]
  -[GKDashboardHostViewController hostDidChangeLeaderboardTimeScope:]
  -[GKDashboardHostViewController extensionIsCanceling]
  -[GKDashboardHostViewController extensionObjectProxy]
  -[GKDashboardHostViewController extensionIsFinishing]
  -[GKDashboardHostViewController playPressedForChallenge:]
  -[GKDashboardHostViewController hostSupportsShowingPlayForChallenge:]
  -[GKDashboardHostViewController hostSupportsShowingPlayForTurnBasedMatch:]
  -[GKDashboardHostViewController hostSupportsShowingQuitForTurnBasedMatch:]
  -[GKDashboardHostViewController dashboardAssetController]
  -[GKDashboardHostViewController setDashboardAssetController:]


GKDashboardExtensionHostContext : GKExtensionHostContext <GKGameCenterDashboardHostProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  GKGame *game

  // class methods
  +[GKDashboardExtensionHostContext _extensionAuxiliaryHostProtocol]
  +[GKDashboardExtensionHostContext _extensionAuxiliaryVendorProtocol]

  // instance methods
  -[GKDashboardExtensionHostContext requestImagesForLeaderboardsInSet:handler:]
  -[GKDashboardExtensionHostContext getMethodsImplementedByChallengeEventHandlerDelegate:]
  -[GKDashboardExtensionHostContext requestDashboardLogoImageWithHandler:]
  -[GKDashboardExtensionHostContext requestImagesForLeaderboardSetsWithHandler:]


GKMoreExistSectionFooterView : UICollectionReusableView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  GKLabel *label
 @property  NSString *text

  // class methods
  +[GKMoreExistSectionFooterView requiresConstraintBasedLayout]
  +[GKMoreExistSectionFooterView defaultHeight]

  // instance methods
  -[GKMoreExistSectionFooterView dealloc]
  -[GKMoreExistSectionFooterView setLabel:]
  -[GKMoreExistSectionFooterView label]
  -[GKMoreExistSectionFooterView text]
  -[GKMoreExistSectionFooterView setText:]
  -[GKMoreExistSectionFooterView initWithFrame:]


GKButtonView : UICollectionReusableView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  UIButton *button
 @property  NSMutableArray *buttonConstraints
 @property  GKCollectionViewDataSource *dataSource
 @property  SEL action

  // class methods
  +[GKButtonView requiresConstraintBasedLayout]
  +[GKButtonView registerSupplementaryViewClassesForKind:withCollectionView:]

  // instance methods
  -[GKButtonView dealloc]
  -[GKButtonView action]
  -[GKButtonView dataSource]
  -[GKButtonView setDataSource:]
  -[GKButtonView initWithFrame:]
  -[GKButtonView button]
  -[GKButtonView updateConstraints]
  -[GKButtonView setAction:]
  -[GKButtonView applyLayoutAttributes:]
  -[GKButtonView buttonConstraints]
  -[GKButtonView setButtonConstraints:]
  -[GKButtonView buttonPressed:]
  -[GKButtonView setButton:]


GKHeaderWithUnderlineView : UICollectionReusableView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  BOOL isPinned
 @property  UIView *pinnedBackdropView
 @property  BOOL didSetupConstraints
 @property  UIView *underlineView
 @property  UIImageView *shadowView
 @property  BOOL underlineHasRightMargin
 @property  NSMutableDictionary *metrics
 @property  NSArray *gutterConstraints
 @property  double leadingMargin
 @property  double trailingMargin

  // class methods
  +[GKHeaderWithUnderlineView initialize]
  +[GKHeaderWithUnderlineView requiresConstraintBasedLayout]
  +[GKHeaderWithUnderlineView phoneMetrics]
  +[GKHeaderWithUnderlineView padMetrics]
  +[GKHeaderWithUnderlineView macMetrics]

  // instance methods
  -[GKHeaderWithUnderlineView dealloc]
  -[GKHeaderWithUnderlineView metrics]
  -[GKHeaderWithUnderlineView setMetrics:]
  -[GKHeaderWithUnderlineView initWithFrame:]
  -[GKHeaderWithUnderlineView updateConstraints]
  -[GKHeaderWithUnderlineView isPinned]
  -[GKHeaderWithUnderlineView shadowView]
  -[GKHeaderWithUnderlineView applyLayoutAttributes:]
  -[GKHeaderWithUnderlineView setShadowView:]
  -[GKHeaderWithUnderlineView drawsUnderline]
  -[GKHeaderWithUnderlineView setIsPinned:]
  -[GKHeaderWithUnderlineView allowsVibrancy]
  -[GKHeaderWithUnderlineView leadingMargin]
  -[GKHeaderWithUnderlineView trailingMargin]
  -[GKHeaderWithUnderlineView setLeadingMargin:]
  -[GKHeaderWithUnderlineView setTrailingMargin:]
  -[GKHeaderWithUnderlineView updateGutterConstraints]
  -[GKHeaderWithUnderlineView gutterConstraints]
  -[GKHeaderWithUnderlineView setGutterConstraints:]
  -[GKHeaderWithUnderlineView establishConstraints]
  -[GKHeaderWithUnderlineView underlineView]
  -[GKHeaderWithUnderlineView setUnderlineView:]
  -[GKHeaderWithUnderlineView pinningStateChangedTo:]
  -[GKHeaderWithUnderlineView setUnderlineHasRightMargin:]
  -[GKHeaderWithUnderlineView underlineHasRightMargin]
  -[GKHeaderWithUnderlineView pinnedBackdropView]
  -[GKHeaderWithUnderlineView setPinnedBackdropView:]
  -[GKHeaderWithUnderlineView didSetupConstraints]
  -[GKHeaderWithUnderlineView setDidSetupConstraints:]


GKSegmentedSectionHeaderView : GKSegmentedSelectorView
 @property  unsigned long sectionIndex

  // instance methods
  -[GKSegmentedSectionHeaderView prepareForReuse]
  -[GKSegmentedSectionHeaderView applyLayoutAttributes:]
  -[GKSegmentedSectionHeaderView setTitles:]
  -[GKSegmentedSectionHeaderView sectionIndex]
  -[GKSegmentedSectionHeaderView setSectionIndex:]


GKSectionSeparatorView : UICollectionReusableView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  UIView *underlineView

  // class methods
  +[GKSectionSeparatorView requiresConstraintBasedLayout]

  // instance methods
  -[GKSectionSeparatorView dealloc]
  -[GKSectionSeparatorView initWithFrame:]
  -[GKSectionSeparatorView underlineView]
  -[GKSectionSeparatorView setUnderlineView:]


GKTournamentViewRequest : NSObject <NSSecureCoding>
 @property  GKTournament *tournament
 @property  long long playerGroup
 @property  long long viewType
 @property  long long appearanceStyle
 @property  UIColor *tintColor
 @property  UIColor *secondaryTintColor
 @property  NSString *tournamentDefinitionID

  // class methods
  +[GKTournamentViewRequest supportsSecureCoding]

  // instance methods
  -[GKTournamentViewRequest encodeWithCoder:]
  -[GKTournamentViewRequest initWithCoder:]
  -[GKTournamentViewRequest .cxx_destruct]
  -[GKTournamentViewRequest tintColor]
  -[GKTournamentViewRequest setTintColor:]
  -[GKTournamentViewRequest appearanceStyle]
  -[GKTournamentViewRequest setAppearanceStyle:]
  -[GKTournamentViewRequest viewType]
  -[GKTournamentViewRequest secondaryTintColor]
  -[GKTournamentViewRequest setSecondaryTintColor:]
  -[GKTournamentViewRequest setViewType:]
  -[GKTournamentViewRequest setTournament:]
  -[GKTournamentViewRequest setPlayerGroup:]
  -[GKTournamentViewRequest setTournamentDefinitionID:]
  -[GKTournamentViewRequest tournament]
  -[GKTournamentViewRequest playerGroup]
  -[GKTournamentViewRequest tournamentDefinitionID]
  -[GKTournamentViewRequest initWithViewType:tournamentDefinitionID:]


GKLoadingViewController : UIViewController /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics <_GKStateMachineDelegate>
 @property  GKLoadableContentStateMachine *loadingMachine
 @property  UIActivityIndicatorView *activityIndicator
 @property  NSString *loadingState
 @property  NSArray *viewsToHideWhileLoading
 @property  double loadingIndicatorDelay
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKLoadingViewController dealloc]
  -[GKLoadingViewController initWithNibName:bundle:]
  -[GKLoadingViewController activityIndicator]
  -[GKLoadingViewController setActivityIndicator:]
  -[GKLoadingViewController showLoadingIndicator]
  -[GKLoadingViewController setLoadingState:]
  -[GKLoadingViewController loadingState]
  -[GKLoadingViewController didEnterLoadingState]
  -[GKLoadingViewController didExitLoadingState]
  -[GKLoadingViewController setLoadingIndicatorDelay:]
  -[GKLoadingViewController loadingMachine]
  -[GKLoadingViewController viewsToHideWhileLoading]
  -[GKLoadingViewController setViewsToHideWhileLoading:]
  -[GKLoadingViewController didEnterLoadedState]
  -[GKLoadingViewController didExitLoadedState]
  -[GKLoadingViewController loadingIndicatorDelay]
  -[GKLoadingViewController setLoadingMachine:]
  -[GKLoadingViewController didEnterRefreshingState]
  -[GKLoadingViewController didExitRefreshingState]
  -[GKLoadingViewController setViewsToHideHidden:]


GKRemoteUIController : NSObject <RUILoaderDelegate, RUIObjectModelDelegate, GKRemoteUIAuxiliaryViewDelegate>
 @property  NSMutableArray *objectModels
 @property  UINavigationController *navigationController
 @property  NSArray *staticViewControllers
 @property  RUILoader *loader
 @property  GKRemoteUIController *presentedRemoteUIController
 @property  BOOL previousUseCustomBackButtonActionValue
 @property  NSError *error
 @property  BOOL loading
 @property  BOOL loadingInitialUI
 @property  NSURL *url
 @property  @? loadHandler
 @property  BOOL userInteractionEnabled
 @property  int layoutStyle
 @property  BOOL complete
 @property  NSDictionary *authInfo
 @property  NSString *bagKey
 @property  NSURL *fallbackURL
 @property  NSString *authToken
 @property  NSData *pushToken
 @property  NSString *appleID
 @property  NSString *altDSID
 @property  NSString *playerID
 @property  NSString *firstName
 @property  NSString *lastName
 @property  NSString *alias
 @property  BOOL isServerAuthenticated
 @property  GKLocalPlayer *playerForRemoteUI
 @property  @? completionHandler
 @property  BOOL shouldApplyGameCenterTheme
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[GKRemoteUIController remoteUIController]

  // instance methods
  -[GKRemoteUIController init]
  -[GKRemoteUIController .cxx_destruct]
  -[GKRemoteUIController error]
  -[GKRemoteUIController setError:]
  -[GKRemoteUIController url]
  -[GKRemoteUIController altDSID]
  -[GKRemoteUIController setAltDSID:]
  -[GKRemoteUIController setUrl:]
  -[GKRemoteUIController complete]
  -[GKRemoteUIController pushToken]
  -[GKRemoteUIController completionHandler]
  -[GKRemoteUIController setCompletionHandler:]
  -[GKRemoteUIController setComplete:]
  -[GKRemoteUIController setUserInteractionEnabled:]
  -[GKRemoteUIController isUserInteractionEnabled]
  -[GKRemoteUIController navigationController]
  -[GKRemoteUIController setLayoutStyle:]
  -[GKRemoteUIController layoutStyle]
  -[GKRemoteUIController viewControllers]
  -[GKRemoteUIController setPushToken:]
  -[GKRemoteUIController firstName]
  -[GKRemoteUIController lastName]
  -[GKRemoteUIController authToken]
  -[GKRemoteUIController setAuthToken:]
  -[GKRemoteUIController loading]
  -[GKRemoteUIController setAlias:]
  -[GKRemoteUIController alias]
  -[GKRemoteUIController setFirstName:]
  -[GKRemoteUIController setLastName:]
  -[GKRemoteUIController appleID]
  -[GKRemoteUIController setAppleID:]
  -[GKRemoteUIController bagKey]
  -[GKRemoteUIController finishLoadingWithError:]
  -[GKRemoteUIController loader]
  -[GKRemoteUIController setNavigationController:]
  -[GKRemoteUIController setLoading:]
  -[GKRemoteUIController setLoader:]
  -[GKRemoteUIController playerID]
  -[GKRemoteUIController objectModelDidChange:]
  -[GKRemoteUIController viewControllerForAlertPresentation]
  -[GKRemoteUIController parentViewControllerForObjectModel:]
  -[GKRemoteUIController loader:receivedObjectModel:actionSignal:]
  -[GKRemoteUIController loader:didFailWithError:]
  -[GKRemoteUIController objectModelPressedBack:]
  -[GKRemoteUIController objectModel:configureTableView:page:]
  -[GKRemoteUIController objectModel:configureTableRow:page:]
  -[GKRemoteUIController objectModel:configureTableSection:page:]
  -[GKRemoteUIController objectModel:customHeaderClassForSection:]
  -[GKRemoteUIController objectModel:customFooterClassForSection:]
  -[GKRemoteUIController objectModel:tableHeaderViewForAttributes:page:]
  -[GKRemoteUIController objectModel:tableFooterViewForAttributes:page:]
  -[GKRemoteUIController objectModel:shouldShowModalHTMLViewWithURL:]
  -[GKRemoteUIController objectModel:pressedLink:httpMethod:]
  -[GKRemoteUIController objectModel:elementDidChange:]
  -[GKRemoteUIController objectModel:page:toggledEditing:]
  -[GKRemoteUIController pushObjectModel:animated:]
  -[GKRemoteUIController popObjectModelAnimated:]
  -[GKRemoteUIController loadURL:postBody:]
  -[GKRemoteUIController initWithObjectModel:]
  -[GKRemoteUIController fallbackURL]
  -[GKRemoteUIController setLoadHandler:]
  -[GKRemoteUIController loadHandler]
  -[GKRemoteUIController fireCompletionHandler]
  -[GKRemoteUIController setPlayerID:]
  -[GKRemoteUIController configureFromBagKey:player:withCompletionHandler:]
  -[GKRemoteUIController loadInitialRemoteUIForPlayer:handler:]
  -[GKRemoteUIController setPlayerForRemoteUI:]
  -[GKRemoteUIController updateAccountAndMarkComplete:completionHandler:]
  -[GKRemoteUIController postBodyForInitialLoad]
  -[GKRemoteUIController takeValuesFromClientInfo:withCompletionHandler:]
  -[GKRemoteUIController updatePostbackDictionary:withHandler:]
  -[GKRemoteUIController auxiliaryView:pressedLink:attributes:]
  -[GKRemoteUIController auxiliaryView:pressedButton:attributes:]
  -[GKRemoteUIController shouldApplyGameCenterTheme]
  -[GKRemoteUIController setShouldApplyGameCenterTheme:]
  -[GKRemoteUIController presentInParentNavigationController:animated:]
  -[GKRemoteUIController loadInitialRemoteUIWithHandler:]
  -[GKRemoteUIController preferredLayoutStyle]
  -[GKRemoteUIController previousUseCustomBackButtonActionValue]
  -[GKRemoteUIController setStaticViewControllers:]
  -[GKRemoteUIController objectModels]
  -[GKRemoteUIController setLoadingInitialUI:]
  -[GKRemoteUIController loadURL:forPlayer:postBody:]
  -[GKRemoteUIController postbackDataForDictionary:]
  -[GKRemoteUIController loadURL:forPlayer:postData:]
  -[GKRemoteUIController loadURL:postData:]
  -[GKRemoteUIController didLoadURL:data:error:]
  -[GKRemoteUIController setIsServerAuthenticated:]
  -[GKRemoteUIController setAuthInfo:]
  -[GKRemoteUIController staticViewControllers]
  -[GKRemoteUIController indexOfVisiblePage]
  -[GKRemoteUIController presentedRemoteUIController]
  -[GKRemoteUIController setPresentedRemoteUIController:]
  -[GKRemoteUIController replaceObjectModelAtIndex:withObjectObjectModel:]
  -[GKRemoteUIController presentObjectModel:animated:]
  -[GKRemoteUIController loadingInitialUI]
  -[GKRemoteUIController performAction:withObjectModel:]
  -[GKRemoteUIController playerForRemoteUI]
  -[GKRemoteUIController addThemeInfoToAttributes:]
  -[GKRemoteUIController setObjectModels:]
  -[GKRemoteUIController setPreviousUseCustomBackButtonActionValue:]
  -[GKRemoteUIController authInfo]
  -[GKRemoteUIController isServerAuthenticated]


GKCollectionMultiDataSource : GKCollectionDataSource
 @property  NSArray *dataSources

  // instance methods
  -[GKCollectionMultiDataSource dealloc]
  -[GKCollectionMultiDataSource dataSources]
  -[GKCollectionMultiDataSource numberOfSectionsInCollectionView:]
  -[GKCollectionMultiDataSource collectionView:numberOfItemsInSection:]
  -[GKCollectionMultiDataSource collectionView:cellForItemAtIndexPath:]
  -[GKCollectionMultiDataSource collectionView:canFocusItemAtIndexPath:]
  -[GKCollectionMultiDataSource itemCount]
  -[GKCollectionMultiDataSource collectionView:viewForSupplementaryElementOfKind:atIndexPath:]
  -[GKCollectionMultiDataSource collectionView:shouldSelectItemAtIndexPath:]
  -[GKCollectionMultiDataSource collectionView:didSelectItemAtIndexPath:]
  -[GKCollectionMultiDataSource collectionView:didDeselectItemAtIndexPath:]
  -[GKCollectionMultiDataSource collectionView:didFocusItemAtIndexPath:]
  -[GKCollectionMultiDataSource collectionView:didUnfocusItemAtIndexPath:]
  -[GKCollectionMultiDataSource collectionView:layout:sizeForItemAtIndexPath:]
  -[GKCollectionMultiDataSource collectionView:layout:referenceSizeForHeaderInSection:]
  -[GKCollectionMultiDataSource collectionView:layout:referenceSizeForFooterInSection:]
  -[GKCollectionMultiDataSource setDataSources:]
  -[GKCollectionMultiDataSource preferredCollectionHeight]
  -[GKCollectionMultiDataSource setupCollectionView:]
  -[GKCollectionMultiDataSource loadDataWithCompletionHandler:]
  -[GKCollectionMultiDataSource itemForIndexPath:]
  -[GKCollectionMultiDataSource dataSourceForIndexPath:]
  -[GKCollectionMultiDataSource itemCountInSection:]


GKTurnBasedMatchmakerHostViewController : GKExtensionRemoteViewController <GKTurnBasedMatchmakerHostProtocol, GKTurnBasedMatchmakerServiceProtocol>
 @property  GKTurnBasedMatchmakerViewController *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  GKGame *game

  // class methods
  +[GKTurnBasedMatchmakerHostViewController turnBasedMatchmakerExtension]
  +[GKTurnBasedMatchmakerHostViewController dismissAutomaticallyAfterExtensionCompletion]

  // instance methods
  -[GKTurnBasedMatchmakerHostViewController dealloc]
  -[GKTurnBasedMatchmakerHostViewController delegate]
  -[GKTurnBasedMatchmakerHostViewController setDelegate:]
  -[GKTurnBasedMatchmakerHostViewController messageFromExtension:]
  -[GKTurnBasedMatchmakerHostViewController refreshMatches]
  -[GKTurnBasedMatchmakerHostViewController setShowExistingMatches:]
  -[GKTurnBasedMatchmakerHostViewController extensionIsCanceling]
  -[GKTurnBasedMatchmakerHostViewController extensionObjectProxy]
  -[GKTurnBasedMatchmakerHostViewController setMatchRequestInternal:]
  -[GKTurnBasedMatchmakerHostViewController setShowPlay:]
  -[GKTurnBasedMatchmakerHostViewController setShowQuit:]


GKTurnBasedMatchmakerExtensionHostContext : GKExtensionHostContext <GKTurnBasedMatchmakerHostProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  GKGame *game

  // class methods
  +[GKTurnBasedMatchmakerExtensionHostContext _extensionAuxiliaryHostProtocol]
  +[GKTurnBasedMatchmakerExtensionHostContext _extensionAuxiliaryVendorProtocol]


GKDashboardLeaderboardScoreDataSource : GKCollectionDataSource
 @property  GKGameRecord *gameRecord
 @property  NSArray *scores
 @property  long long visibleItemCount
 @property  BOOL needsShowcaseCell
 @property  BOOL needsShowMoreCell
 @property  UIFont *sectionHeaderFont
 @property  BOOL showingMoreScores
 @property  BOOL forceInitialShowMore
 @property  GKLeaderboard *leaderboard
 @property  long long playerScope
 @property  long long timeScope
 @property  id timeScopeTarget
 @property  SEL timeScopeAction

  // instance methods
  -[GKDashboardLeaderboardScoreDataSource dealloc]
  -[GKDashboardLeaderboardScoreDataSource numberOfSectionsInCollectionView:]
  -[GKDashboardLeaderboardScoreDataSource collectionView:cellForItemAtIndexPath:]
  -[GKDashboardLeaderboardScoreDataSource itemCount]
  -[GKDashboardLeaderboardScoreDataSource collectionView:viewForSupplementaryElementOfKind:atIndexPath:]
  -[GKDashboardLeaderboardScoreDataSource collectionView:shouldSelectItemAtIndexPath:]
  -[GKDashboardLeaderboardScoreDataSource collectionView:didSelectItemAtIndexPath:]
  -[GKDashboardLeaderboardScoreDataSource collectionView:layout:sizeForItemAtIndexPath:]
  -[GKDashboardLeaderboardScoreDataSource collectionView:layout:referenceSizeForHeaderInSection:]
  -[GKDashboardLeaderboardScoreDataSource collectionView:layout:referenceSizeForFooterInSection:]
  -[GKDashboardLeaderboardScoreDataSource sectionHeaderFont]
  -[GKDashboardLeaderboardScoreDataSource scores]
  -[GKDashboardLeaderboardScoreDataSource setScores:]
  -[GKDashboardLeaderboardScoreDataSource setTimeScope:]
  -[GKDashboardLeaderboardScoreDataSource timeScope]
  -[GKDashboardLeaderboardScoreDataSource preferredCollectionHeight]
  -[GKDashboardLeaderboardScoreDataSource setupCollectionView:]
  -[GKDashboardLeaderboardScoreDataSource loadDataWithCompletionHandler:]
  -[GKDashboardLeaderboardScoreDataSource itemForIndexPath:]
  -[GKDashboardLeaderboardScoreDataSource sectionHeaderText]
  -[GKDashboardLeaderboardScoreDataSource setGameRecord:]
  -[GKDashboardLeaderboardScoreDataSource setLeaderboard:]
  -[GKDashboardLeaderboardScoreDataSource initWithGameRecord:leaderboard:]
  -[GKDashboardLeaderboardScoreDataSource gameRecord]
  -[GKDashboardLeaderboardScoreDataSource leaderboard]
  -[GKDashboardLeaderboardScoreDataSource setPlayerScope:]
  -[GKDashboardLeaderboardScoreDataSource playerScope]
  -[GKDashboardLeaderboardScoreDataSource hasFriendsButton]
  -[GKDashboardLeaderboardScoreDataSource needsShowMoreCell]
  -[GKDashboardLeaderboardScoreDataSource isShowingMoreScores]
  -[GKDashboardLeaderboardScoreDataSource setShowingMoreScores:]
  -[GKDashboardLeaderboardScoreDataSource revealMoreItemsInCollectionView:section:completion:]
  -[GKDashboardLeaderboardScoreDataSource needsShowcaseCell]
  -[GKDashboardLeaderboardScoreDataSource isShowcaseIndexPath:]
  -[GKDashboardLeaderboardScoreDataSource isShowMoreIndexPath:]
  -[GKDashboardLeaderboardScoreDataSource sectionHeaderButtonPressed:]
  -[GKDashboardLeaderboardScoreDataSource showMoreInCollectionView:section:]
  -[GKDashboardLeaderboardScoreDataSource timeScopeTarget]
  -[GKDashboardLeaderboardScoreDataSource setTimeScopeTarget:]
  -[GKDashboardLeaderboardScoreDataSource timeScopeAction]
  -[GKDashboardLeaderboardScoreDataSource setTimeScopeAction:]
  -[GKDashboardLeaderboardScoreDataSource visibleItemCount]
  -[GKDashboardLeaderboardScoreDataSource setVisibleItemCount:]
  -[GKDashboardLeaderboardScoreDataSource forceInitialShowMore]
  -[GKDashboardLeaderboardScoreDataSource setForceInitialShowMore:]


GKServiceViewController : GKNavigationController <GKExtensionProtocol, GKDaemonProxyDataUpdateDelegate, GKDashboardServiceInterface>
 @property  double statusBarHeight
 @property  UIViewController *privateViewController
 @property  GKGame *game
 @property  BOOL alwaysShowDoneButton
 @property  int hostPID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[GKServiceViewController _exportedInterface]
  +[GKServiceViewController _remoteViewControllerInterface]

  // instance methods
  -[GKServiceViewController init]
  -[GKServiceViewController dealloc]
  -[GKServiceViewController observeValueForKeyPath:ofObject:change:context:]
  -[GKServiceViewController finish]
  -[GKServiceViewController viewWillAppear:]
  -[GKServiceViewController viewWillDisappear:]
  -[GKServiceViewController viewDidAppear:]
  -[GKServiceViewController viewDidDisappear:]
  -[GKServiceViewController statusBarHeight]
  -[GKServiceViewController _statusBarHeightForCurrentInterfaceOrientation]
  -[GKServiceViewController pushViewController:animated:]
  -[GKServiceViewController setViewControllers:animated:]
  -[GKServiceViewController didRotateFromInterfaceOrientation:]
  -[GKServiceViewController setStatusBarHeight:]
  -[GKServiceViewController hostPID]
  -[GKServiceViewController setHostPID:]
  -[GKServiceViewController game]
  -[GKServiceViewController setGame:]
  -[GKServiceViewController donePressed:]
  -[GKServiceViewController remoteViewControllerDidCancel]
  -[GKServiceViewController requestImagesForLeaderboardsInSet:handler:]
  -[GKServiceViewController observedKeyPaths]
  -[GKServiceViewController nudge]
  -[GKServiceViewController setInitialState:withReply:]
  -[GKServiceViewController setValue:forKeyPath:withReply:]
  -[GKServiceViewController remoteViewControllerIsFinishing]
  -[GKServiceViewController remoteViewControllerDidFinish]
  -[GKServiceViewController remoteViewControllerIsCanceling]
  -[GKServiceViewController setAlwaysShowDoneButton:]
  -[GKServiceViewController setPrivateViewController:]
  -[GKServiceViewController constructPrivateViewController]
  -[GKServiceViewController _useBackdropViewForWindowBackground]
  -[GKServiceViewController finishAndPlayChallenge:]
  -[GKServiceViewController finishWithTurnBasedMatch:]
  -[GKServiceViewController quitTurnBasedMatch:]
  -[GKServiceViewController messageFromClient:]
  -[GKServiceViewController dashboardDidChangeToViewState:]
  -[GKServiceViewController requestDashboardLogoImageWithHandler:]
  -[GKServiceViewController requestImagesForLeaderboardSetsWithHandler:]
  -[GKServiceViewController _startObservingChangesToProperties]
  -[GKServiceViewController serviceViewControllerCreated:]
  -[GKServiceViewController _stopObservingChangesToProperties]
  -[GKServiceViewController cancelServiceViewController]
  -[GKServiceViewController presentInitialViewController:]
  -[GKServiceViewController performSelectorOnHostController:withObject:]
  -[GKServiceViewController performSelectorOnHostController:withObject:withObject:]
  -[GKServiceViewController alwaysShowDoneButton]
  -[GKServiceViewController _addDoneButtonToViewController:]
  -[GKServiceViewController refreshContentsForDataType:userInfo:]
  -[GKServiceViewController dashboardDidChangeToLeaderboardTimeScope:]
  -[GKServiceViewController dashboardDidChangeToLeaderboardIdentifier:]
  -[GKServiceViewController privateViewController]
  -[GKServiceViewController resetPrivateViewController]
  -[GKServiceViewController performSelectorOnHostController:]


GKDashboardLeaderboardCell : UICollectionViewCell /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  UIImageView *iconView
 @property  UILabel *titleLabel
 @property  UILabel *countLabel
 @property  UIView *overlayView
 @property  UIColor *titleLabelColor
 @property  NSString *bundleIdentifier
 @property  NSString *imageName
 @property  GKLeaderboardSet *leaderboardSet
 @property  GKLeaderboard *leaderboard
 @property  UIView *popoverSourceView

  // instance methods
  -[GKDashboardLeaderboardCell dealloc]
  -[GKDashboardLeaderboardCell bundleIdentifier]
  -[GKDashboardLeaderboardCell setBundleIdentifier:]
  -[GKDashboardLeaderboardCell titleLabel]
  -[GKDashboardLeaderboardCell canBecomeFocused]
  -[GKDashboardLeaderboardCell setHighlighted:]
  -[GKDashboardLeaderboardCell setTitleLabel:]
  -[GKDashboardLeaderboardCell titleLabelColor]
  -[GKDashboardLeaderboardCell setSelected:]
  -[GKDashboardLeaderboardCell awakeFromNib]
  -[GKDashboardLeaderboardCell setOverlayView:]
  -[GKDashboardLeaderboardCell popoverSourceView]
  -[GKDashboardLeaderboardCell updateImage]
  -[GKDashboardLeaderboardCell setImageName:]
  -[GKDashboardLeaderboardCell imageName]
  -[GKDashboardLeaderboardCell overlayView]
  -[GKDashboardLeaderboardCell iconView]
  -[GKDashboardLeaderboardCell setIconView:]
  -[GKDashboardLeaderboardCell setTitleLabelColor:]
  -[GKDashboardLeaderboardCell countLabel]
  -[GKDashboardLeaderboardCell setCountLabel:]
  -[GKDashboardLeaderboardCell setLeaderboardSet:]
  -[GKDashboardLeaderboardCell setLeaderboard:]
  -[GKDashboardLeaderboardCell leaderboardSet]
  -[GKDashboardLeaderboardCell leaderboard]
  -[GKDashboardLeaderboardCell updateRank]
  -[GKDashboardLeaderboardCell updateOverlay]


GKTurnBasedParticipantsDataSource : GKBasicCollectionViewDataSource
 @property  GKTurnBasedMatch *match

  // instance methods
  -[GKTurnBasedParticipantsDataSource dealloc]
  -[GKTurnBasedParticipantsDataSource sectionTitle]
  -[GKTurnBasedParticipantsDataSource collectionView:cellForItemAtIndexPath:]
  -[GKTurnBasedParticipantsDataSource match]
  -[GKTurnBasedParticipantsDataSource setMatch:]
  -[GKTurnBasedParticipantsDataSource refreshContentsForDataType:userInfo:updateNotifier:]
  -[GKTurnBasedParticipantsDataSource configureCollectionView:]


GKPlaceholderContentStateMachine : _GKStateMachine /usr/lib/liblockdown.dylib
 @property  BOOL isInPlaceholderState

  // instance methods
  -[GKPlaceholderContentStateMachine init]
  -[GKPlaceholderContentStateMachine isInPlaceholderState]


GKPlaceholderView : _UIContentUnavailableView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
  // class methods
  +[GKPlaceholderView initialize]
  +[GKPlaceholderView placeholderViewWithTitle:message:frame:]

  // instance methods
  -[GKPlaceholderView pointInside:withEvent:]


GKCollectionViewPlaceholderView : UICollectionReusableView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics <_GKStateMachineDelegate>
 @property  GKPlaceholderView *placeholderView
 @property  UIActivityIndicatorView *loadingIndicatorView
 @property  GKPlaceholderContentStateMachine *loadingMachine
 @property  NSArray *cachedConstraints
 @property  NSString *loadingState
 @property  NSString *noContentTitle
 @property  NSString *noContentMessage
 @property  NSString *noContentButtonTitle
 @property  id noContentButtonTarget
 @property  SEL noContentButtonAction
 @property  NSString *errorTitle
 @property  NSString *errorMessage
 @property  long long alignment
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKCollectionViewPlaceholderView dealloc]
  -[GKCollectionViewPlaceholderView alignment]
  -[GKCollectionViewPlaceholderView setAlignment:]
  -[GKCollectionViewPlaceholderView errorMessage]
  -[GKCollectionViewPlaceholderView initWithFrame:]
  -[GKCollectionViewPlaceholderView updateConstraints]
  -[GKCollectionViewPlaceholderView errorTitle]
  -[GKCollectionViewPlaceholderView setErrorTitle:]
  -[GKCollectionViewPlaceholderView setErrorMessage:]
  -[GKCollectionViewPlaceholderView setPlaceholderView:]
  -[GKCollectionViewPlaceholderView placeholderView]
  -[GKCollectionViewPlaceholderView setLoadingState:]
  -[GKCollectionViewPlaceholderView loadingState]
  -[GKCollectionViewPlaceholderView buttonPressed]
  -[GKCollectionViewPlaceholderView didEnterLoadingState]
  -[GKCollectionViewPlaceholderView didExitLoadingState]
  -[GKCollectionViewPlaceholderView didEnterNoContentState]
  -[GKCollectionViewPlaceholderView didEnterErrorState]
  -[GKCollectionViewPlaceholderView setNoContentTitle:]
  -[GKCollectionViewPlaceholderView setNoContentMessage:]
  -[GKCollectionViewPlaceholderView setNoContentButtonTitle:]
  -[GKCollectionViewPlaceholderView setNoContentButtonTarget:]
  -[GKCollectionViewPlaceholderView setNoContentButtonAction:]
  -[GKCollectionViewPlaceholderView noContentTitle]
  -[GKCollectionViewPlaceholderView noContentMessage]
  -[GKCollectionViewPlaceholderView noContentButtonTitle]
  -[GKCollectionViewPlaceholderView noContentButtonTarget]
  -[GKCollectionViewPlaceholderView noContentButtonAction]
  -[GKCollectionViewPlaceholderView loadingMachine]
  -[GKCollectionViewPlaceholderView setLoadingMachine:]
  -[GKCollectionViewPlaceholderView loadingIndicatorView]
  -[GKCollectionViewPlaceholderView setLoadingIndicatorView:]
  -[GKCollectionViewPlaceholderView didExitNoContentState]
  -[GKCollectionViewPlaceholderView didExitErrorState]
  -[GKCollectionViewPlaceholderView cachedConstraints]
  -[GKCollectionViewPlaceholderView setCachedConstraints:]
  -[GKCollectionViewPlaceholderView delayedShowLoadingIndicator]


GKDashboardLeaderboardSetDataSource : GKCollectionDataSource
 @property  GKGameRecord *gameRecord
 @property  NSArray *leaderboardSets
 @property  NSDictionary *leaderboardSetAssetNames
 @property  NSDictionary *leaderboardAssetNames

  // instance methods
  -[GKDashboardLeaderboardSetDataSource dealloc]
  -[GKDashboardLeaderboardSetDataSource collectionView:cellForItemAtIndexPath:]
  -[GKDashboardLeaderboardSetDataSource itemCount]
  -[GKDashboardLeaderboardSetDataSource collectionView:shouldSelectItemAtIndexPath:]
  -[GKDashboardLeaderboardSetDataSource collectionView:didSelectItemAtIndexPath:]
  -[GKDashboardLeaderboardSetDataSource collectionView:layout:sizeForItemAtIndexPath:]
  -[GKDashboardLeaderboardSetDataSource preferredCollectionHeight]
  -[GKDashboardLeaderboardSetDataSource setupCollectionView:]
  -[GKDashboardLeaderboardSetDataSource loadDataWithCompletionHandler:]
  -[GKDashboardLeaderboardSetDataSource itemForIndexPath:]
  -[GKDashboardLeaderboardSetDataSource sectionHeaderText]
  -[GKDashboardLeaderboardSetDataSource setGameRecord:]
  -[GKDashboardLeaderboardSetDataSource gameRecord]
  -[GKDashboardLeaderboardSetDataSource initWithGameRecord:]
  -[GKDashboardLeaderboardSetDataSource setLeaderboardSets:]
  -[GKDashboardLeaderboardSetDataSource removeLeaderboardSetsWithoutImages]
  -[GKDashboardLeaderboardSetDataSource leaderboardSetAssetNames]
  -[GKDashboardLeaderboardSetDataSource setLeaderboardSetAssetNames:]
  -[GKDashboardLeaderboardSetDataSource leaderboardAssetNames]
  -[GKDashboardLeaderboardSetDataSource setLeaderboardAssetNames:]
  -[GKDashboardLeaderboardSetDataSource leaderboardSets]


GKTurnBasedMatchesViewController : GKCollectionViewController <GKTurnBasedInviteViewControllerDelegate, GKTurnBasedMatchDetailViewControllerDelegate, GKTurnBasedMatchesDataSourceDelegate, UIPopoverControllerDelegate, UIStateRestoring, UIPopoverPresentationControllerDelegate>
 @property  GKTurnBasedMatchesDataSource *matchesDataSource
 @property  long long maxMatchesSeen
 @property  NSString *matchIDWaitingForTurnEvent
 @property  GKTurnBasedInviteViewController *inviteController
 @property  GKGame *game
 @property  GKMatchRequest *matchRequest
 @property  GKCollectionViewController *masterViewController
 @property  <GKTurnBasedMatchesViewControllerDelegate> *delegate
 @property  BOOL showExistingMatches
 @property  BOOL showPlay
 @property  BOOL showQuit
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <UIStateRestoring> *restorationParent
 @property  Class objectRestorationClass

  // instance methods
  -[GKTurnBasedMatchesViewController init]
  -[GKTurnBasedMatchesViewController dealloc]
  -[GKTurnBasedMatchesViewController delegate]
  -[GKTurnBasedMatchesViewController setDelegate:]
  -[GKTurnBasedMatchesViewController .cxx_destruct]
  -[GKTurnBasedMatchesViewController viewWillAppear:]
  -[GKTurnBasedMatchesViewController viewWillDisappear:]
  -[GKTurnBasedMatchesViewController viewDidAppear:]
  -[GKTurnBasedMatchesViewController popoverPresentationControllerDidDismissPopover:]
  -[GKTurnBasedMatchesViewController collectionView:didSelectItemAtIndexPath:]
  -[GKTurnBasedMatchesViewController masterViewController]
  -[GKTurnBasedMatchesViewController game]
  -[GKTurnBasedMatchesViewController setGame:]
  -[GKTurnBasedMatchesViewController applicationDidEnterBackground]
  -[GKTurnBasedMatchesViewController didEnterNoContentState]
  -[GKTurnBasedMatchesViewController configureDataSource]
  -[GKTurnBasedMatchesViewController turnBasedMatchesDataSource:didQuitMatch:]
  -[GKTurnBasedMatchesViewController _gkShouldRefreshContentsForDataType:userInfo:]
  -[GKTurnBasedMatchesViewController matchRequest]
  -[GKTurnBasedMatchesViewController setShowExistingMatches:]
  -[GKTurnBasedMatchesViewController initWithMatchRequest:]
  -[GKTurnBasedMatchesViewController setMatchRequest:]
  -[GKTurnBasedMatchesViewController showExistingMatches]
  -[GKTurnBasedMatchesViewController handleTurnBasedEvent:]
  -[GKTurnBasedMatchesViewController _gkRestorePopoverWithViewControllers:completion:]
  -[GKTurnBasedMatchesViewController cancelButtonPressed]
  -[GKTurnBasedMatchesViewController setInviteController:]
  -[GKTurnBasedMatchesViewController inviteController]
  -[GKTurnBasedMatchesViewController configureViewFactories]
  -[GKTurnBasedMatchesViewController turnBasedMatchDetailViewControllerDidAcceptInvitation:]
  -[GKTurnBasedMatchesViewController turnBasedMatchDetailViewControllerDidDeclineInvitation:]
  -[GKTurnBasedMatchesViewController turnBasedMatchDetailViewControllerDidChooseMatch:]
  -[GKTurnBasedMatchesViewController turnBasedMatchDetailViewControllerDidQuitMatch:]
  -[GKTurnBasedMatchesViewController turnBasedMatchDetailViewControllerDidRemoveMatch:]
  -[GKTurnBasedMatchesViewController turnBasedMatchDetailViewControllerDidShowStore:]
  -[GKTurnBasedMatchesViewController isInGame]
  -[GKTurnBasedMatchesViewController loadDataWithCompletionHandlerAndError:]
  -[GKTurnBasedMatchesViewController setShowPlay:]
  -[GKTurnBasedMatchesViewController setShowQuit:]
  -[GKTurnBasedMatchesViewController setMatchesDataSource:]
  -[GKTurnBasedMatchesViewController matchesDataSource]
  -[GKTurnBasedMatchesViewController configureHeader:indexPath:]
  -[GKTurnBasedMatchesViewController addPressed]
  -[GKTurnBasedMatchesViewController detailPressedForMatch:]
  -[GKTurnBasedMatchesViewController showInviteControllerAnimated:]
  -[GKTurnBasedMatchesViewController acceptInviteForMatch:]
  -[GKTurnBasedMatchesViewController showMatch:]
  -[GKTurnBasedMatchesViewController showDetailForMatch:]
  -[GKTurnBasedMatchesViewController dismissDetailViewControllerAnimated:]
  -[GKTurnBasedMatchesViewController launchGameAndShowMatch:]
  -[GKTurnBasedMatchesViewController notifyGameWithMatch:orError:]
  -[GKTurnBasedMatchesViewController showPlay]
  -[GKTurnBasedMatchesViewController showQuit]
  -[GKTurnBasedMatchesViewController dismissDetailViewControllerInPopover:completion:]
  -[GKTurnBasedMatchesViewController presentNavigationControllerInPopover:fromCell:completion:]
  -[GKTurnBasedMatchesViewController setMatchIDWaitingForTurnEvent:]
  -[GKTurnBasedMatchesViewController turnBasedInviteViewControllerWasCancelled:]
  -[GKTurnBasedMatchesViewController turnBasedInviteViewController:didCreateMatchID:]
  -[GKTurnBasedMatchesViewController turnBasedInviteViewController:didFailWithError:]
  -[GKTurnBasedMatchesViewController setMasterViewController:]
  -[GKTurnBasedMatchesViewController maxMatchesSeen]
  -[GKTurnBasedMatchesViewController setMaxMatchesSeen:]
  -[GKTurnBasedMatchesViewController matchIDWaitingForTurnEvent]


GKMultiplayerButtonFooterView : UIView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  NSLayoutConstraint *buttonHeightConstraint
 @property  NSLayoutConstraint *buttonWidthConstraint
 @property  UIButton *inviteFriendsButton
 @property  UIButton *playNowButton
 @property  NSLayoutConstraint *viewHeightConstraint
 @property  UIColor *blueColor
 @property  BOOL forcingAutomatch

  // instance methods
  -[GKMultiplayerButtonFooterView .cxx_destruct]
  -[GKMultiplayerButtonFooterView blueColor]
  -[GKMultiplayerButtonFooterView traitCollectionDidChange:]
  -[GKMultiplayerButtonFooterView awakeFromNib]
  -[GKMultiplayerButtonFooterView buttonHeightConstraint]
  -[GKMultiplayerButtonFooterView setButtonsEnabled:]
  -[GKMultiplayerButtonFooterView configureForMatchRequest:]
  -[GKMultiplayerButtonFooterView setAction:forTarget:onButtonWithType:]
  -[GKMultiplayerButtonFooterView playNowButton]
  -[GKMultiplayerButtonFooterView setBlueColor:]
  -[GKMultiplayerButtonFooterView setViewHeightConstraint:]
  -[GKMultiplayerButtonFooterView configureViewsAndConstraintsForCurrentTraitCollection]
  -[GKMultiplayerButtonFooterView forcingAutomatch]
  -[GKMultiplayerButtonFooterView setForcingAutomatch:]
  -[GKMultiplayerButtonFooterView setButtonHeightConstraint:]
  -[GKMultiplayerButtonFooterView buttonWidthConstraint]
  -[GKMultiplayerButtonFooterView setButtonWidthConstraint:]
  -[GKMultiplayerButtonFooterView inviteFriendsButton]
  -[GKMultiplayerButtonFooterView setInviteFriendsButton:]
  -[GKMultiplayerButtonFooterView setPlayNowButton:]
  -[GKMultiplayerButtonFooterView viewHeightConstraint]


GKImageEffects : NSObject
  // class methods
  +[GKImageEffects imageByApplyingBlurToImage:withRadius:tintColor:saturationDeltaFactor:maskImage:]
  +[GKImageEffects imageByApplyingLightEffectToImage:]
  +[GKImageEffects imageByApplyingExtraLightEffectToImage:]
  +[GKImageEffects imageByApplyingDarkEffectToImage:]
  +[GKImageEffects imageByApplyingTintEffectWithColor:toImage:]


GKShowMoreView : UICollectionReusableView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  GKLabel *label
 @property  long long sectionIndex
 @property  NSLayoutConstraint *horizontalContraint
 @property  NSLayoutConstraint *verticalContraint
 @property  BOOL showShowAll
 @property  long long numberToShow
 @property  UICollectionView *collectionView
 @property  UIActivityIndicatorView *spinner
 @property  SEL showMoreAction
 @property  BOOL loading
 @property  double textAlignmentOffset

  // class methods
  +[GKShowMoreView requiresConstraintBasedLayout]

  // instance methods
  -[GKShowMoreView dealloc]
  -[GKShowMoreView prepareForReuse]
  -[GKShowMoreView setLabel:]
  -[GKShowMoreView label]
  -[GKShowMoreView initWithFrame:]
  -[GKShowMoreView updateConstraints]
  -[GKShowMoreView touchesEnded:withEvent:]
  -[GKShowMoreView collectionView]
  -[GKShowMoreView setCollectionView:]
  -[GKShowMoreView applyLayoutAttributes:]
  -[GKShowMoreView spinner]
  -[GKShowMoreView setSpinner:]
  -[GKShowMoreView sectionIndex]
  -[GKShowMoreView setSectionIndex:]
  -[GKShowMoreView loading]
  -[GKShowMoreView setLoading:]
  -[GKShowMoreView updateLabel]
  -[GKShowMoreView setTextAlignmentOffset:]
  -[GKShowMoreView baseTextStyle]
  -[GKShowMoreView setHorizontalContraint:]
  -[GKShowMoreView showMoreAction]
  -[GKShowMoreView setShowMoreAction:]
  -[GKShowMoreView textAlignmentOffset]
  -[GKShowMoreView horizontalContraint]
  -[GKShowMoreView verticalContraint]
  -[GKShowMoreView setVerticalContraint:]
  -[GKShowMoreView showShowAll]
  -[GKShowMoreView setShowShowAll:]
  -[GKShowMoreView numberToShow]
  -[GKShowMoreView setNumberToShow:]


GKCollectionFocusingLayout : UICollectionViewFlowLayout /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  double topHeaderHeight
 @property  double focusScaleFactor
 @property  NSIndexPath *focusedIndexPath
 @property  double focusHeaderOffset
 @property  double headerToItemSpacing
 @property  UICollectionViewLayoutAttributes *topHeaderAttributes

  // instance methods
  -[GKCollectionFocusingLayout init]
  -[GKCollectionFocusingLayout dealloc]
  -[GKCollectionFocusingLayout prepareLayout]
  -[GKCollectionFocusingLayout layoutAttributesForItemAtIndexPath:]
  -[GKCollectionFocusingLayout layoutAttributesForSupplementaryViewOfKind:atIndexPath:]
  -[GKCollectionFocusingLayout awakeFromNib]
  -[GKCollectionFocusingLayout targetContentOffsetForProposedContentOffset:withScrollingVelocity:]
  -[GKCollectionFocusingLayout sectionInset]
  -[GKCollectionFocusingLayout setFocusedIndexPath:]
  -[GKCollectionFocusingLayout focusedIndexPath]
  -[GKCollectionFocusingLayout shouldUpdateVisibleCellLayoutAttributes]
  -[GKCollectionFocusingLayout setFocusScaleFactor:]
  -[GKCollectionFocusingLayout setFocusHeaderOffset:]
  -[GKCollectionFocusingLayout topHeaderHeight]
  -[GKCollectionFocusingLayout setTopHeaderAttributes:]
  -[GKCollectionFocusingLayout topHeaderAttributes]
  -[GKCollectionFocusingLayout sizeForHeaderInSection:]
  -[GKCollectionFocusingLayout minimumInteritemSpacingForSectionAtIndex:]
  -[GKCollectionFocusingLayout minimumLineSpacingForSectionAtIndex:]
  -[GKCollectionFocusingLayout sizeForItemAtIndexPath:]
  -[GKCollectionFocusingLayout sizeForFooterInSection:]
  -[GKCollectionFocusingLayout focusAdjustedAttributesForItemAttributes:]
  -[GKCollectionFocusingLayout focusAdjustedAttributesForSupplementaryViewAttributes:]
  -[GKCollectionFocusingLayout applyDefaults]
  -[GKCollectionFocusingLayout setHeaderToItemSpacing:]
  -[GKCollectionFocusingLayout headerToItemSpacing]
  -[GKCollectionFocusingLayout setTopHeaderHeight:]
  -[GKCollectionFocusingLayout _updateFocusOffsetsForSectionHeadersWithAnimationCoordinator:]
  -[GKCollectionFocusingLayout _updateFocusFrameForCellAtIndexPath:]
  -[GKCollectionFocusingLayout focusScaleFactor]
  -[GKCollectionFocusingLayout focusHeaderOffset]


GKAuthenticateHostViewController : GKExtensionRemoteViewController <GKAuthenticateHostProtocol>
 @property  GKHostedAuthenticateViewController *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  GKGame *game

  // class methods
  +[GKAuthenticateHostViewController dismissAutomaticallyAfterExtensionCompletion]
  +[GKAuthenticateHostViewController authenticateExtension]

  // instance methods
  -[GKAuthenticateHostViewController dealloc]
  -[GKAuthenticateHostViewController delegate]
  -[GKAuthenticateHostViewController setDelegate:]
  -[GKAuthenticateHostViewController viewDidLoad]
  -[GKAuthenticateHostViewController applicationWillTerminate:]
  -[GKAuthenticateHostViewController messageFromExtension:]
  -[GKAuthenticateHostViewController extensionIsCanceling]
  -[GKAuthenticateHostViewController extensionIsFinishing]


GKAuthenticateExtensionHostContext : GKExtensionHostContext
  // class methods
  +[GKAuthenticateExtensionHostContext _extensionAuxiliaryHostProtocol]
  +[GKAuthenticateExtensionHostContext _extensionAuxiliaryVendorProtocol]


GKHostedChallengeIssueController : UIViewController /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics <GKExtensionParentViewControllerProtocol>
 @property  NSArray *players
 @property  NSString *defaultMessage
 @property  GKChallenge *challenge
 @property  BOOL forcePicker
 @property  @? completionHandler
 @property  GKChallengeIssueHostViewController *remoteViewController
 @property  @? receivedRemoteHandler
 @property  @? dismissCompletionHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[GKHostedChallengeIssueController _preventsAppearanceProxyCustomization]
  +[GKHostedChallengeIssueController presentationQueue]
  +[GKHostedChallengeIssueController hostedIssueControllerWithChallenge:players:defaultMessage:completionHandler:]
  +[GKHostedChallengeIssueController presentHostedIssueControllerWithChallenge:players:defaultMessage:]

  // instance methods
  -[GKHostedChallengeIssueController dealloc]
  -[GKHostedChallengeIssueController challenge]
  -[GKHostedChallengeIssueController completionHandler]
  -[GKHostedChallengeIssueController setCompletionHandler:]
  -[GKHostedChallengeIssueController shouldAutomaticallyForwardAppearanceMethods]
  -[GKHostedChallengeIssueController shouldAutomaticallyForwardRotationMethods]
  -[GKHostedChallengeIssueController dismissCompletionHandler]
  -[GKHostedChallengeIssueController setDismissCompletionHandler:]
  -[GKHostedChallengeIssueController automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers]
  -[GKHostedChallengeIssueController remoteViewController]
  -[GKHostedChallengeIssueController setRemoteViewController:]
  -[GKHostedChallengeIssueController setChallenge:]
  -[GKHostedChallengeIssueController _setupRemoteViewController]
  -[GKHostedChallengeIssueController players]
  -[GKHostedChallengeIssueController setPlayers:]
  -[GKHostedChallengeIssueController defaultMessage]
  -[GKHostedChallengeIssueController setDefaultMessage:]
  -[GKHostedChallengeIssueController _setupChildViewController]
  -[GKHostedChallengeIssueController extensionDidFinishWithError:]
  -[GKHostedChallengeIssueController doneWithPlayers:message:]
  -[GKHostedChallengeIssueController initWithChallenge:players:defaultMessage:completionHandler:]
  -[GKHostedChallengeIssueController setForcePicker:]
  -[GKHostedChallengeIssueController setReceivedRemoteHandler:]
  -[GKHostedChallengeIssueController receivedRemoteHandler]
  -[GKHostedChallengeIssueController forcePicker]


GKTurnBasedInviteViewController : GKMultiplayerViewController
 @property  NSMutableDictionary *inviteMessageDictionary
 @property  long long mode
 @property  GKTurnBasedMatch *match
 @property  BOOL deletePreloadedMatch
 @property  BOOL loadingOrRemovingPreloadedMatch
 @property  <GKTurnBasedInviteViewControllerDelegate> *delegate

  // instance methods
  -[GKTurnBasedInviteViewController dealloc]
  -[GKTurnBasedInviteViewController delegate]
  -[GKTurnBasedInviteViewController setDelegate:]
  -[GKTurnBasedInviteViewController setMode:]
  -[GKTurnBasedInviteViewController cancel]
  -[GKTurnBasedInviteViewController mode]
  -[GKTurnBasedInviteViewController finishWithError:]
  -[GKTurnBasedInviteViewController viewWillDisappear:]
  -[GKTurnBasedInviteViewController viewDidLoad]
  -[GKTurnBasedInviteViewController viewDidAppear:]
  -[GKTurnBasedInviteViewController match]
  -[GKTurnBasedInviteViewController setMatch:]
  -[GKTurnBasedInviteViewController playNow]
  -[GKTurnBasedInviteViewController invitePlayers:]
  -[GKTurnBasedInviteViewController setInvitesFailedWithError:]
  -[GKTurnBasedInviteViewController canStartForcedAutomatch]
  -[GKTurnBasedInviteViewController willQueryGKIDs]
  -[GKTurnBasedInviteViewController loadShareURLWithCompletion:]
  -[GKTurnBasedInviteViewController willShare]
  -[GKTurnBasedInviteViewController shareFinishedWithContactPlayers:legacyPlayers:]
  -[GKTurnBasedInviteViewController isLoadingOrRemovingPreloadedMatch]
  -[GKTurnBasedInviteViewController removeCurrentMatchAndSetFlagIfNotLoaded:withHandler:]
  -[GKTurnBasedInviteViewController cleanupStateForCancelOrErrorWithHandler:]
  -[GKTurnBasedInviteViewController finishWithMatchID:]
  -[GKTurnBasedInviteViewController createGameWithPlayersToInvite:forSharing:handler:]
  -[GKTurnBasedInviteViewController inviteMessageDictionary]
  -[GKTurnBasedInviteViewController setInviteMessageDictionary:]
  -[GKTurnBasedInviteViewController deletePreloadedMatch]
  -[GKTurnBasedInviteViewController setDeletePreloadedMatch:]


GKDashboardLeaderboardListViewController : GKDashboardCollectionViewController
 @property  GKLeaderboardSet *leaderboardSet

  // instance methods
  -[GKDashboardLeaderboardListViewController dealloc]
  -[GKDashboardLeaderboardListViewController viewDidLoad]
  -[GKDashboardLeaderboardListViewController collectionView:viewForSupplementaryElementOfKind:atIndexPath:]
  -[GKDashboardLeaderboardListViewController setLeaderboardSet:]
  -[GKDashboardLeaderboardListViewController initWithGameRecord:leaderboardSet:]
  -[GKDashboardLeaderboardListViewController leaderboardSet]


GKDashboardLeaderboardScoreCell : GKRectShadowCell
 @property  GKDashboardPlayerPhotoView *playerView
 @property  NSLayoutConstraint *playerViewHeightConstraint
 @property  UILabel *rankLabel
 @property  UILabel *nameLabel
 @property  UILabel *scoreLabel
 @property  UIView *topLine
 @property  UIView *bottomLine
 @property  UIView *monogramColorView
 @property  GKScore *score
 @property  BOOL linesVisible
 @property  UIView *popoverSourceView

  // class methods
  +[GKDashboardLeaderboardScoreCell defaultSize]
  +[GKDashboardLeaderboardScoreCell lowRankNib]
  +[GKDashboardLeaderboardScoreCell highRankNib]

  // instance methods
  -[GKDashboardLeaderboardScoreCell dealloc]
  -[GKDashboardLeaderboardScoreCell score]
  -[GKDashboardLeaderboardScoreCell setScore:]
  -[GKDashboardLeaderboardScoreCell awakeFromNib]
  -[GKDashboardLeaderboardScoreCell popoverSourceView]
  -[GKDashboardLeaderboardScoreCell setNameLabel:]
  -[GKDashboardLeaderboardScoreCell nameLabel]
  -[GKDashboardLeaderboardScoreCell playerView]
  -[GKDashboardLeaderboardScoreCell setPlayerView:]
  -[GKDashboardLeaderboardScoreCell setLinesVisible:]
  -[GKDashboardLeaderboardScoreCell setupForScore:]
  -[GKDashboardLeaderboardScoreCell linesVisible]
  -[GKDashboardLeaderboardScoreCell playerViewHeightConstraint]
  -[GKDashboardLeaderboardScoreCell setPlayerViewHeightConstraint:]
  -[GKDashboardLeaderboardScoreCell rankLabel]
  -[GKDashboardLeaderboardScoreCell setRankLabel:]
  -[GKDashboardLeaderboardScoreCell scoreLabel]
  -[GKDashboardLeaderboardScoreCell setScoreLabel:]
  -[GKDashboardLeaderboardScoreCell topLine]
  -[GKDashboardLeaderboardScoreCell setTopLine:]
  -[GKDashboardLeaderboardScoreCell bottomLine]
  -[GKDashboardLeaderboardScoreCell setBottomLine:]
  -[GKDashboardLeaderboardScoreCell monogramColorView]
  -[GKDashboardLeaderboardScoreCell setMonogramColorView:]


GKTurnBasedMatchDetailHeaderView : UICollectionReusableView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  GKLabel *playingWithLabel
 @property  GKLabel *startedLabel
 @property  GKLabel *lastTurnLabel
 @property  GKLabel *infoLabel
 @property  GKTextBubbleControl *actionBubble
 @property  NSString *playingWithString
 @property  NSLayoutConstraint *playingToTopConstraint
 @property  NSLayoutConstraint *bubbleToLastConstraint
 @property  BOOL compactHeight
 @property  GKTurnBasedMatch *match
 @property  NSString *infoText
 @property  NSString *bubbleText
 @property  long long bubbleType
 @property  id bubbleTarget
 @property  SEL bubbleAction

  // class methods
  +[GKTurnBasedMatchDetailHeaderView requiresConstraintBasedLayout]

  // instance methods
  -[GKTurnBasedMatchDetailHeaderView dealloc]
  -[GKTurnBasedMatchDetailHeaderView initWithFrame:]
  -[GKTurnBasedMatchDetailHeaderView setLabelAlpha:]
  -[GKTurnBasedMatchDetailHeaderView infoLabel]
  -[GKTurnBasedMatchDetailHeaderView match]
  -[GKTurnBasedMatchDetailHeaderView setInfoText:]
  -[GKTurnBasedMatchDetailHeaderView setInfoLabel:]
  -[GKTurnBasedMatchDetailHeaderView compactHeight]
  -[GKTurnBasedMatchDetailHeaderView setCompactHeight:]
  -[GKTurnBasedMatchDetailHeaderView setMatch:]
  -[GKTurnBasedMatchDetailHeaderView didUpdateModel]
  -[GKTurnBasedMatchDetailHeaderView bubbleType]
  -[GKTurnBasedMatchDetailHeaderView setBubbleType:]
  -[GKTurnBasedMatchDetailHeaderView bubbleText]
  -[GKTurnBasedMatchDetailHeaderView establishConstraints]
  -[GKTurnBasedMatchDetailHeaderView playingWithString]
  -[GKTurnBasedMatchDetailHeaderView playingWithLabel]
  -[GKTurnBasedMatchDetailHeaderView setPlayingWithLabel:]
  -[GKTurnBasedMatchDetailHeaderView setBubbleTarget:]
  -[GKTurnBasedMatchDetailHeaderView setBubbleAction:]
  -[GKTurnBasedMatchDetailHeaderView setBubbleText:]
  -[GKTurnBasedMatchDetailHeaderView actionBubble]
  -[GKTurnBasedMatchDetailHeaderView bubblePressed:]
  -[GKTurnBasedMatchDetailHeaderView setPlayingToTopConstraint:]
  -[GKTurnBasedMatchDetailHeaderView setBubbleToLastConstraint:]
  -[GKTurnBasedMatchDetailHeaderView infoText]
  -[GKTurnBasedMatchDetailHeaderView bubbleTarget]
  -[GKTurnBasedMatchDetailHeaderView bubbleAction]
  -[GKTurnBasedMatchDetailHeaderView setActionBubble:]
  -[GKTurnBasedMatchDetailHeaderView startedLabel]
  -[GKTurnBasedMatchDetailHeaderView setStartedLabel:]
  -[GKTurnBasedMatchDetailHeaderView lastTurnLabel]
  -[GKTurnBasedMatchDetailHeaderView setLastTurnLabel:]
  -[GKTurnBasedMatchDetailHeaderView playingToTopConstraint]
  -[GKTurnBasedMatchDetailHeaderView bubbleToLastConstraint]


GKBaseComposeController : GKLoadableContentViewController <UITextViewDelegate>
 @property  GKContiguousContainerView *headerFieldContainer
 @property  UIView *contentView
 @property  double scrollContentInsetAdjustY
 @property  NSLayoutConstraint *contentHeightConstraint
 @property  NSLayoutConstraint *contentLeadingConstraint
 @property  NSLayoutConstraint *messageFieldTrailingConstraint
 @property  UIScrollView *backgroundView
 @property  NSArray *composeHeaderFields
 @property  GKTextView *messageField
 @property  UIView *intendedFirstResponder
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} lastKnownKeyboardFrame
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKBaseComposeController init]
  -[GKBaseComposeController dealloc]
  -[GKBaseComposeController contentView]
  -[GKBaseComposeController setContentView:]
  -[GKBaseComposeController loadView]
  -[GKBaseComposeController backgroundView]
  -[GKBaseComposeController viewWillAppear:]
  -[GKBaseComposeController supportedInterfaceOrientations]
  -[GKBaseComposeController viewDidLayoutSubviews]
  -[GKBaseComposeController viewDidAppear:]
  -[GKBaseComposeController setBackgroundView:]
  -[GKBaseComposeController margins]
  -[GKBaseComposeController didRotateFromInterfaceOrientation:]
  -[GKBaseComposeController textViewDidChange:]
  -[GKBaseComposeController textViewDidChangeSelection:]
  -[GKBaseComposeController messageField]
  -[GKBaseComposeController setComposeHeaderFields:]
  -[GKBaseComposeController setMessageField:]
  -[GKBaseComposeController setMessageFieldText:]
  -[GKBaseComposeController intendedFirstResponder]
  -[GKBaseComposeController _gkWantsCustomRightBarButtonItemInViewService]
  -[GKBaseComposeController setIntendedFirstResponder:]
  -[GKBaseComposeController keyboardWillHideShow:]
  -[GKBaseComposeController headerFieldContainer]
  -[GKBaseComposeController _adjustContentInsetForShowingKeyboard:]
  -[GKBaseComposeController setLastKnownKeyboardFrame:]
  -[GKBaseComposeController setContentHeightConstraint:]
  -[GKBaseComposeController setContentLeadingConstraint:]
  -[GKBaseComposeController setMessageFieldTrailingConstraint:]
  -[GKBaseComposeController messageFieldTextDidChange]
  -[GKBaseComposeController _scrollSelectedTextToVisible]
  -[GKBaseComposeController viewMetricsForContainerView:]
  -[GKBaseComposeController composeHeaderFields]
  -[GKBaseComposeController lastKnownKeyboardFrame]
  -[GKBaseComposeController setHeaderFieldContainer:]
  -[GKBaseComposeController scrollContentInsetAdjustY]
  -[GKBaseComposeController setScrollContentInsetAdjustY:]
  -[GKBaseComposeController contentHeightConstraint]
  -[GKBaseComposeController contentLeadingConstraint]
  -[GKBaseComposeController messageFieldTrailingConstraint]


GKSegmentedSelectorView : GKHeaderWithUnderlineView
 @property  NSLayoutConstraint *widthConstraint
 @property  UISegmentedControl *segmentedControl
 @property  id target

  // instance methods
  -[GKSegmentedSelectorView dealloc]
  -[GKSegmentedSelectorView setTarget:]
  -[GKSegmentedSelectorView target]
  -[GKSegmentedSelectorView prepareForReuse]
  -[GKSegmentedSelectorView initWithFrame:]
  -[GKSegmentedSelectorView widthConstraint]
  -[GKSegmentedSelectorView setWidthConstraint:]
  -[GKSegmentedSelectorView applyLayoutAttributes:]
  -[GKSegmentedSelectorView segmentedControl]
  -[GKSegmentedSelectorView setSegmentedControl:]
  -[GKSegmentedSelectorView drawsUnderline]
  -[GKSegmentedSelectorView pinningStateChangedTo:]


GKMultiplayerButtonHeaderView : UIView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  UILabel *titleLabel
 @property  UILabel *countLabel
 @property  UIImageView *iconImageView
 @property  UITapGestureRecognizer *tapGesture
 @property  UIImageView *nextImageView
 @property  NSLayoutConstraint *iconImageViewLeading
 @property  NSLayoutConstraint *nextImageViewTrailing
 @property  BOOL mayChangeCount

  // instance methods
  -[GKMultiplayerButtonHeaderView dealloc]
  -[GKMultiplayerButtonHeaderView .cxx_destruct]
  -[GKMultiplayerButtonHeaderView setTitle:]
  -[GKMultiplayerButtonHeaderView titleLabel]
  -[GKMultiplayerButtonHeaderView touchesBegan:withEvent:]
  -[GKMultiplayerButtonHeaderView touchesEnded:withEvent:]
  -[GKMultiplayerButtonHeaderView setTitleLabel:]
  -[GKMultiplayerButtonHeaderView awakeFromNib]
  -[GKMultiplayerButtonHeaderView setInsets:]
  -[GKMultiplayerButtonHeaderView iconImageView]
  -[GKMultiplayerButtonHeaderView setIconImageView:]
  -[GKMultiplayerButtonHeaderView countLabel]
  -[GKMultiplayerButtonHeaderView setCountLabel:]
  -[GKMultiplayerButtonHeaderView tapGesture]
  -[GKMultiplayerButtonHeaderView setTapGesture:]
  -[GKMultiplayerButtonHeaderView setAction:forTarget:]
  -[GKMultiplayerButtonHeaderView setGameIcon:]
  -[GKMultiplayerButtonHeaderView setButtonEnabled:animated:]
  -[GKMultiplayerButtonHeaderView setPlayerCount:]
  -[GKMultiplayerButtonHeaderView iconImageViewLeading]
  -[GKMultiplayerButtonHeaderView nextImageViewTrailing]
  -[GKMultiplayerButtonHeaderView nextImageView]
  -[GKMultiplayerButtonHeaderView setNextImageView:]
  -[GKMultiplayerButtonHeaderView setIconImageViewLeading:]
  -[GKMultiplayerButtonHeaderView setNextImageViewTrailing:]
  -[GKMultiplayerButtonHeaderView mayChangeCount]
  -[GKMultiplayerButtonHeaderView setMayChangeCount:]


GKContiguousContainerWithLeadingView : GKContiguousContainerView
  // instance methods
  -[GKContiguousContainerWithLeadingView intrinsicContentSize]


GKContiguousContainerView : UIView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  BOOL vertical
 @property  BOOL applyOrthogonalConstraints
 @property  NSArray *replaceableConstraints
 @property  UIView *baselineView
 @property  double overlap
 @property  {UIEdgeInsets=dddd} insets

  // class methods
  +[GKContiguousContainerView containerForViewsFontsLeadings:options:]
  +[GKContiguousContainerView containerViewForViews:overlap:vertical:]
  +[GKContiguousContainerView containerViewForViews:overlap:vertical:applyOrthogonalConstraints:]

  // instance methods
  -[GKContiguousContainerView dealloc]
  -[GKContiguousContainerView intrinsicContentSize]
  -[GKContiguousContainerView sizeThatFits:]
  -[GKContiguousContainerView insets]
  -[GKContiguousContainerView setInsets:]
  -[GKContiguousContainerView setVertical:]
  -[GKContiguousContainerView viewForBaselineLayout]
  -[GKContiguousContainerView setBaselineView:]
  -[GKContiguousContainerView baselineView]
  -[GKContiguousContainerView setOverlap:]
  -[GKContiguousContainerView overlap]
  -[GKContiguousContainerView vertical]
  -[GKContiguousContainerView replaceableConstraints]
  -[GKContiguousContainerView setReplaceableConstraints:]
  -[GKContiguousContainerView replaceSubviews:]
  -[GKContiguousContainerView setApplyOrthogonalConstraints:]
  -[GKContiguousContainerView _addContiguousSubviews:]
  -[GKContiguousContainerView applyOrthogonalConstraints]


GKConstraintLeadingInfo : NSObject
 @property  NSString *fontTextStyle
 @property  double leading

  // instance methods
  -[GKConstraintLeadingInfo dealloc]
  -[GKConstraintLeadingInfo leading]
  -[GKConstraintLeadingInfo setLeading:]
  -[GKConstraintLeadingInfo setFontTextStyle:]
  -[GKConstraintLeadingInfo fontTextStyle]


GKConstraintUpdateController : NSObject
 @property  NSPointerArray *constraintsToUpdate

  // class methods
  +[GKConstraintUpdateController sharedController]

  // instance methods
  -[GKConstraintUpdateController dealloc]
  -[GKConstraintUpdateController _updateConstraints]
  -[GKConstraintUpdateController registerConstraint:leading:forFontTextStyle:]
  -[GKConstraintUpdateController updateConstraint:]
  -[GKConstraintUpdateController constraintsToUpdate]
  -[GKConstraintUpdateController setConstraintsToUpdate:]


GKDashboardMultiplayerPickerDataSource : GKCollectionDataSource
 @property  NSArray *contactPlayers
 @property  NSArray *friendPlayers
 @property  NSArray *recentPlayers
 @property  NSMutableArray *nearbyPlayers
 @property  NSArray *searchPlayers
 @property  long long maxSelectable
 @property  long long maxFriendsVisible
 @property  NSArray *hiddenPlayers
 @property  BOOL browsingForNearbyPlayers
 @property  BOOL didLoad
 @property  GKContactDataSource *contactSource
 @property  NSArray *selectedPlayers
 @property  NSMutableDictionary *playerStates
 @property  long long unmodifiedItemCount
 @property  GKTournament *tournament
 @property  BOOL showsAllFriends
 @property  BOOL searching
 @property  BOOL supportsNearby
 @property  <GKDashboardNearbyBrowserDelegate> *nearbyDelegate
 @property  @? nearbyPlayersChangedHandler
 @property  BOOL excludesContacts
 @property  BOOL isSegmented
 @property  long long currentSegment
 @property  long long numberOfContacts
 @property  NSArray *contactSectionHeaders
 @property  NSDictionary *contactSectionHeaderIndexes
 @property  NSArray *contactSkipValues
 @property  NSDictionary *contactSkipIndexes

  // instance methods
  -[GKDashboardMultiplayerPickerDataSource .cxx_destruct]
  -[GKDashboardMultiplayerPickerDataSource numberOfSectionsInCollectionView:]
  -[GKDashboardMultiplayerPickerDataSource collectionView:numberOfItemsInSection:]
  -[GKDashboardMultiplayerPickerDataSource collectionView:cellForItemAtIndexPath:]
  -[GKDashboardMultiplayerPickerDataSource itemCount]
  -[GKDashboardMultiplayerPickerDataSource collectionView:viewForSupplementaryElementOfKind:atIndexPath:]
  -[GKDashboardMultiplayerPickerDataSource collectionView:shouldSelectItemAtIndexPath:]
  -[GKDashboardMultiplayerPickerDataSource collectionView:didSelectItemAtIndexPath:]
  -[GKDashboardMultiplayerPickerDataSource collectionView:didDeselectItemAtIndexPath:]
  -[GKDashboardMultiplayerPickerDataSource collectionView:layout:sizeForItemAtIndexPath:]
  -[GKDashboardMultiplayerPickerDataSource collectionView:layout:referenceSizeForHeaderInSection:]
  -[GKDashboardMultiplayerPickerDataSource collectionView:layout:referenceSizeForFooterInSection:]
  -[GKDashboardMultiplayerPickerDataSource clearSelection]
  -[GKDashboardMultiplayerPickerDataSource setSearching:]
  -[GKDashboardMultiplayerPickerDataSource isSegmented]
  -[GKDashboardMultiplayerPickerDataSource isSearching]
  -[GKDashboardMultiplayerPickerDataSource setCurrentSegment:]
  -[GKDashboardMultiplayerPickerDataSource contactSource]
  -[GKDashboardMultiplayerPickerDataSource setContactSource:]
  -[GKDashboardMultiplayerPickerDataSource preferredCollectionHeight]
  -[GKDashboardMultiplayerPickerDataSource setupCollectionView:]
  -[GKDashboardMultiplayerPickerDataSource loadDataWithCompletionHandler:]
  -[GKDashboardMultiplayerPickerDataSource itemForIndexPath:]
  -[GKDashboardMultiplayerPickerDataSource friendPlayers]
  -[GKDashboardMultiplayerPickerDataSource setFriendPlayers:]
  -[GKDashboardMultiplayerPickerDataSource setRecentPlayers:]
  -[GKDashboardMultiplayerPickerDataSource recentPlayers]
  -[GKDashboardMultiplayerPickerDataSource setPlayerStates:]
  -[GKDashboardMultiplayerPickerDataSource playerForIndexPath:]
  -[GKDashboardMultiplayerPickerDataSource setSearchPlayers:]
  -[GKDashboardMultiplayerPickerDataSource selectedPlayers]
  -[GKDashboardMultiplayerPickerDataSource searchKeyForSection:]
  -[GKDashboardMultiplayerPickerDataSource searchTextHasChanged]
  -[GKDashboardMultiplayerPickerDataSource playerStates]
  -[GKDashboardMultiplayerPickerDataSource searchPlayers]
  -[GKDashboardMultiplayerPickerDataSource maxSelectable]
  -[GKDashboardMultiplayerPickerDataSource headerTextForSection:]
  -[GKDashboardMultiplayerPickerDataSource initWithMaxSelectable:hiddenPlayers:]
  -[GKDashboardMultiplayerPickerDataSource setTournament:]
  -[GKDashboardMultiplayerPickerDataSource setExcludesContacts:]
  -[GKDashboardMultiplayerPickerDataSource setNearbyPlayersChangedHandler:]
  -[GKDashboardMultiplayerPickerDataSource currentSegment]
  -[GKDashboardMultiplayerPickerDataSource excludesContacts]
  -[GKDashboardMultiplayerPickerDataSource setSupportsNearby:]
  -[GKDashboardMultiplayerPickerDataSource setNearbyDelegate:]
  -[GKDashboardMultiplayerPickerDataSource firstIndexPathForPlayer:]
  -[GKDashboardMultiplayerPickerDataSource unmodifiedItemCount]
  -[GKDashboardMultiplayerPickerDataSource indexPathForFirstPlayer]
  -[GKDashboardMultiplayerPickerDataSource indexPathsForPlayer:]
  -[GKDashboardMultiplayerPickerDataSource setIsSegmented:]
  -[GKDashboardMultiplayerPickerDataSource numberOfContacts]
  -[GKDashboardMultiplayerPickerDataSource contactSkipValues]
  -[GKDashboardMultiplayerPickerDataSource contactSkipIndexes]
  -[GKDashboardMultiplayerPickerDataSource setShowsAllFriends:]
  -[GKDashboardMultiplayerPickerDataSource supportsNearby]
  -[GKDashboardMultiplayerPickerDataSource nearbyDelegate]
  -[GKDashboardMultiplayerPickerDataSource setNearbyPlayer:reachable:]
  -[GKDashboardMultiplayerPickerDataSource setBrowsingForNearbyPlayers:]
  -[GKDashboardMultiplayerPickerDataSource tournament]
  -[GKDashboardMultiplayerPickerDataSource setMaxSelectable:]
  -[GKDashboardMultiplayerPickerDataSource setHiddenPlayers:]
  -[GKDashboardMultiplayerPickerDataSource setMaxFriendsVisible:]
  -[GKDashboardMultiplayerPickerDataSource setNearbyPlayers:]
  -[GKDashboardMultiplayerPickerDataSource setContactPlayers:]
  -[GKDashboardMultiplayerPickerDataSource hiddenPlayers]
  -[GKDashboardMultiplayerPickerDataSource nearbyPlayers]
  -[GKDashboardMultiplayerPickerDataSource setDidLoad:]
  -[GKDashboardMultiplayerPickerDataSource browsingForNearbyPlayers]
  -[GKDashboardMultiplayerPickerDataSource playersForSection:ignoreSearch:]
  -[GKDashboardMultiplayerPickerDataSource contactPlayers]
  -[GKDashboardMultiplayerPickerDataSource cellSelectableStateAtIndexPath:playerState:]
  -[GKDashboardMultiplayerPickerDataSource numberOfSectionsInCurrentSegment]
  -[GKDashboardMultiplayerPickerDataSource setNearbyPlayerID:reachable:]
  -[GKDashboardMultiplayerPickerDataSource playerForPlayerID:]
  -[GKDashboardMultiplayerPickerDataSource nearbyPlayersChangedHandler]
  -[GKDashboardMultiplayerPickerDataSource showsAllFriends]
  -[GKDashboardMultiplayerPickerDataSource maxFriendsVisible]
  -[GKDashboardMultiplayerPickerDataSource _canShowMoreFriends]
  -[GKDashboardMultiplayerPickerDataSource updateSelectionStateForCollectionView:indexPaths:]
  -[GKDashboardMultiplayerPickerDataSource contactSectionHeaders]
  -[GKDashboardMultiplayerPickerDataSource contactSectionHeaderIndexes]
  -[GKDashboardMultiplayerPickerDataSource didLoad]


GKMatchmakerHostViewController : GKExtensionRemoteViewController <GKMatchmakerHostProtocol, GKMatchmakerServiceProtocol>
 @property  GKMatchmakerViewController *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  GKGame *game

  // class methods
  +[GKMatchmakerHostViewController dismissAutomaticallyAfterExtensionCompletion]
  +[GKMatchmakerHostViewController matchmakerExtension]

  // instance methods
  -[GKMatchmakerHostViewController dealloc]
  -[GKMatchmakerHostViewController delegate]
  -[GKMatchmakerHostViewController setDelegate:]
  -[GKMatchmakerHostViewController applicationWillEnterForeground]
  -[GKMatchmakerHostViewController setHosted:]
  -[GKMatchmakerHostViewController messageFromExtension:]
  -[GKMatchmakerHostViewController setAutomatchPlayerCount:]
  -[GKMatchmakerHostViewController setExistingPlayers:]
  -[GKMatchmakerHostViewController setPlayer:responded:]
  -[GKMatchmakerHostViewController setPlayer:connected:]
  -[GKMatchmakerHostViewController setPlayer:sentData:]
  -[GKMatchmakerHostViewController setInvitesFailedWithError:]
  -[GKMatchmakerHostViewController setAutomatchFailedWithError:]
  -[GKMatchmakerHostViewController setFailedWithError:]
  -[GKMatchmakerHostViewController inviterCancelled]
  -[GKMatchmakerHostViewController extensionIsCanceling]
  -[GKMatchmakerHostViewController extensionObjectProxy]
  -[GKMatchmakerHostViewController setDefaultInvitationMessage:]
  -[GKMatchmakerHostViewController setNearbyPlayer:reachable:]
  -[GKMatchmakerHostViewController shareMatchWithRequest:handler:]
  -[GKMatchmakerHostViewController setMatchRequestInternal:]
  -[GKMatchmakerHostViewController setAcceptedInviteInternal:]


GKMatchmakerExtensionHostContext : GKExtensionHostContext <GKMatchmakerHostProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  GKGame *game

  // class methods
  +[GKMatchmakerExtensionHostContext _extensionAuxiliaryHostProtocol]
  +[GKMatchmakerExtensionHostContext _extensionAuxiliaryVendorProtocol]

  // instance methods
  -[GKMatchmakerExtensionHostContext shareMatchWithRequest:handler:]


GKAchievementIconView : UIImageView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  GKAchievement *achievement
 @property  GKAchievement *localAchievement
 @property  BOOL isDetail

  // class methods
  +[GKAchievementIconView progressSourceDetail]
  +[GKAchievementIconView progressSource]

  // instance methods
  -[GKAchievementIconView dealloc]
  -[GKAchievementIconView initWithFrame:]
  -[GKAchievementIconView invalidateIntrinsicContentSize]
  -[GKAchievementIconView achievement]
  -[GKAchievementIconView setAchievement:]
  -[GKAchievementIconView setLocalAchievement:]
  -[GKAchievementIconView setIsDetail:]
  -[GKAchievementIconView setupForAchievement:localAchievement:]
  -[GKAchievementIconView localAchievement]
  -[GKAchievementIconView configureImage]
  -[GKAchievementIconView progressForAchievement:]
  -[GKAchievementIconView isDetail]
  -[GKAchievementIconView processProgressImage:forAchievement:]
  -[GKAchievementIconView progressIdentifierForAchievement:]
  -[GKAchievementIconView loadAndProcessAchievementProgressImageForAchievement:withHandler:]


GKRemoteUIHeaderView : UIView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics <RUIHeader>
 @property  BOOL isFirstSection
 @property  GKLabel *textLabel
 @property  double height
 @property  double bottomMargin
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKRemoteUIHeaderView .cxx_destruct]
  -[GKRemoteUIHeaderView height]
  -[GKRemoteUIHeaderView setHeight:]
  -[GKRemoteUIHeaderView setBottomMargin:]
  -[GKRemoteUIHeaderView textLabel]
  -[GKRemoteUIHeaderView initWithAttributes:]
  -[GKRemoteUIHeaderView setTextLabel:]
  -[GKRemoteUIHeaderView setSectionIsFirst:]
  -[GKRemoteUIHeaderView headerHeightForWidth:inTableView:]
  -[GKRemoteUIHeaderView bottomMargin]
  -[GKRemoteUIHeaderView isFirstSection]
  -[GKRemoteUIHeaderView setIsFirstSection:]


GKRoundButton : GKButton
 @property  UIImage *backgroundImage

  // instance methods
  -[GKRoundButton backgroundImage]
  -[GKRoundButton setBackgroundImage:]
  -[GKRoundButton initWithFrame:]
  -[GKRoundButton tintColorDidChange]
  -[GKRoundButton titleRectForContentRect:]
  -[GKRoundButton imageRectForContentRect:]
  -[GKRoundButton _highlightBounds]


GKHostedAuthenticateViewController : UIViewController /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics <GKExtensionParentViewControllerProtocol, GKAuthenticateViewController>
 @property  GKAuthenticateHostViewController *extensionHostViewController
 @property  long long mode
 @property  @? dismissCompletionHandler
 @property  BOOL rotationLocked
 @property  NSError *error
 @property  @? remoteViewReadyHandler
 @property  NSString *lastPersonalizationVersionDisplayed
 @property  unsigned long lastPrivacyNoticeVersionDisplayed
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  @? completionHandler
 @property  BOOL disablesSignIn

  // class methods
  +[GKHostedAuthenticateViewController _preventsAppearanceProxyCustomization]

  // instance methods
  -[GKHostedAuthenticateViewController init]
  -[GKHostedAuthenticateViewController dealloc]
  -[GKHostedAuthenticateViewController .cxx_destruct]
  -[GKHostedAuthenticateViewController setMode:]
  -[GKHostedAuthenticateViewController error]
  -[GKHostedAuthenticateViewController setError:]
  -[GKHostedAuthenticateViewController mode]
  -[GKHostedAuthenticateViewController completionHandler]
  -[GKHostedAuthenticateViewController setCompletionHandler:]
  -[GKHostedAuthenticateViewController dismissViewControllerAnimated:completion:]
  -[GKHostedAuthenticateViewController viewWillAppear:]
  -[GKHostedAuthenticateViewController setModalPresentationStyle:]
  -[GKHostedAuthenticateViewController shouldAutorotate]
  -[GKHostedAuthenticateViewController shouldAutomaticallyForwardAppearanceMethods]
  -[GKHostedAuthenticateViewController shouldAutomaticallyForwardRotationMethods]
  -[GKHostedAuthenticateViewController dismissCompletionHandler]
  -[GKHostedAuthenticateViewController setDismissCompletionHandler:]
  -[GKHostedAuthenticateViewController automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers]
  -[GKHostedAuthenticateViewController lastPersonalizationVersionDisplayed]
  -[GKHostedAuthenticateViewController lastPrivacyNoticeVersionDisplayed]
  -[GKHostedAuthenticateViewController setLastPersonalizationVersionDisplayed:]
  -[GKHostedAuthenticateViewController setLastPrivacyNoticeVersionDisplayed:]
  -[GKHostedAuthenticateViewController _setupChildViewController]
  -[GKHostedAuthenticateViewController extensionDidFinishWithError:]
  -[GKHostedAuthenticateViewController setRemoteViewReadyHandler:]
  -[GKHostedAuthenticateViewController remoteViewReadyHandler]
  -[GKHostedAuthenticateViewController setExtensionHostViewController:]
  -[GKHostedAuthenticateViewController extensionHostViewController]
  -[GKHostedAuthenticateViewController continueWithMode:]
  -[GKHostedAuthenticateViewController setRotationLocked:]
  -[GKHostedAuthenticateViewController onboardingFlowDidSignOut]
  -[GKHostedAuthenticateViewController _setupExtensionHostViewController]
  -[GKHostedAuthenticateViewController finishAuthenticationWithError:]
  -[GKHostedAuthenticateViewController showPasswordChangeAlertWithURL:]
  -[GKHostedAuthenticateViewController disablesSignIn]
  -[GKHostedAuthenticateViewController setDisablesSignIn:]
  -[GKHostedAuthenticateViewController isRotationLocked]


GKButtonWithContentSizeCorrected2 : GKButton
  // instance methods
  -[GKButtonWithContentSizeCorrected2 intrinsicContentSize]


GKSignInInputView : UIView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  NSLayoutConstraint *topToSignInBaselineConstraint
 @property  NSLayoutConstraint *bottomToSignInBaselineConstraint
 @property  NSLayoutConstraint *signInBaselineToPromptTextTopConstraint
 @property  NSLayoutConstraint *inputViewHeightConstraint
 @property  NSLayoutConstraint *promptTextToProgressIndicatorTopConstraint
 @property  NSLayoutConstraint *signInFormToSignInLabelTopConstraint
 @property  NSLayoutConstraint *privacyLinkToSignInFormTopConstraint
 @property  NSLayoutConstraint *signInInputViewHeightConstraint

  // instance methods
  -[GKSignInInputView .cxx_destruct]
  -[GKSignInInputView inputViewHeightConstraint]
  -[GKSignInInputView setInputViewHeightConstraint:]
  -[GKSignInInputView setupConstraintConstantsForOrientation:]
  -[GKSignInInputView allVariableConstraints]
  -[GKSignInInputView topToSignInBaselineConstraint]
  -[GKSignInInputView setTopToSignInBaselineConstraint:]
  -[GKSignInInputView bottomToSignInBaselineConstraint]
  -[GKSignInInputView setBottomToSignInBaselineConstraint:]
  -[GKSignInInputView signInBaselineToPromptTextTopConstraint]
  -[GKSignInInputView setSignInBaselineToPromptTextTopConstraint:]
  -[GKSignInInputView promptTextToProgressIndicatorTopConstraint]
  -[GKSignInInputView setPromptTextToProgressIndicatorTopConstraint:]
  -[GKSignInInputView signInFormToSignInLabelTopConstraint]
  -[GKSignInInputView setSignInFormToSignInLabelTopConstraint:]
  -[GKSignInInputView privacyLinkToSignInFormTopConstraint]
  -[GKSignInInputView setPrivacyLinkToSignInFormTopConstraint:]
  -[GKSignInInputView signInInputViewHeightConstraint]
  -[GKSignInInputView setSignInInputViewHeightConstraint:]


GKSignInViewController : GKViewController <AKInlineSignInViewControllerDelegate, AKAppleIDAuthenticationDelegate, RemoteUIControllerDelegate, GKAuthenticateViewController, UIScrollViewDelegate>
 @property  NSString *appleID
 @property  UIActivityIndicatorView *progressIndicator
 @property  GKLabel *signInLabel
 @property  GKLabel *loginPromptLabel
 @property  GKSignInInputView *signInInputView
 @property  OBPrivacyLinkController *privacyLinkController
 @property  BOOL constraintsCreated
 @property  {UIEdgeInsets=dddd} currentContentInsets
 @property  {UIEdgeInsets=dddd} contentInsetsBeforeKeyboard
 @property  {UIEdgeInsets=dddd} scrollIndicatorInsetsBeforeKeyboard
 @property  GKBubbleFlowContainerView *bubbleContainerView
 @property  AKInlineSignInViewController *inlineSignInViewController
 @property  AKAppleIDAuthenticationInAppContext *authContext
 @property  double fullWidthContentWidthConstraintConstant
 @property  double horizontalPaddingConstraintConstant
 @property  double labelWidthConstraintConstant
 @property  NSMutableArray *fullWidthViewConstraints
 @property  RemoteUIController *remoteU13Controller
 @property  UINavigationController *u13NavigationController
 @property  NSMutableArray *u13ObjectModels
 @property  GKDispatchGroup *u13Group
 @property  BOOL userShouldSkipCreateAppleID
 @property  UIScrollView *scrollView
 @property  GKGame *game
 @property  GKAccountRemoteUIController *accountController
 @property  UIViewController *remoteUIPresentingViewController
 @property  BOOL loadingRemoteUI
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  @? completionHandler
 @property  BOOL disablesSignIn

  // instance methods
  -[GKSignInViewController init]
  -[GKSignInViewController dealloc]
  -[GKSignInViewController .cxx_destruct]
  -[GKSignInViewController completionHandler]
  -[GKSignInViewController setCompletionHandler:]
  -[GKSignInViewController loadView]
  -[GKSignInViewController traitCollectionDidChange:]
  -[GKSignInViewController willTransitionToTraitCollection:withTransitionCoordinator:]
  -[GKSignInViewController viewWillAppear:]
  -[GKSignInViewController viewWillLayoutSubviews]
  -[GKSignInViewController viewDidLayoutSubviews]
  -[GKSignInViewController viewDidAppear:]
  -[GKSignInViewController viewDidDisappear:]
  -[GKSignInViewController willAnimateRotationToInterfaceOrientation:duration:]
  -[GKSignInViewController scrollView]
  -[GKSignInViewController setScrollView:]
  -[GKSignInViewController viewSafeAreaInsetsDidChange]
  -[GKSignInViewController appleID]
  -[GKSignInViewController setAppleID:]
  -[GKSignInViewController setPrivacyLinkController:]
  -[GKSignInViewController privacyLinkController]
  -[GKSignInViewController remoteUIController:shouldLoadRequest:redirectResponse:]
  -[GKSignInViewController remoteUIController:didReceiveHTTPResponse:]
  -[GKSignInViewController remoteUIControllerDidDismiss:]
  -[GKSignInViewController remoteUIController:didReceiveObjectModel:actionSignal:]
  -[GKSignInViewController keyboardWillShow:]
  -[GKSignInViewController createConstraints]
  -[GKSignInViewController keyboardWillHide:]
  -[GKSignInViewController authenticationController:shouldContinueWithAuthenticationResults:error:forContext:]
  -[GKSignInViewController authContext]
  -[GKSignInViewController createAppleID]
  -[GKSignInViewController setAuthContext:]
  -[GKSignInViewController game]
  -[GKSignInViewController setGame:]
  -[GKSignInViewController signInViewController:didAuthenticateWithResults:error:]
  -[GKSignInViewController progressIndicator]
  -[GKSignInViewController inlineSignInViewController]
  -[GKSignInViewController setInlineSignInViewController:]
  -[GKSignInViewController createSubviews]
  -[GKSignInViewController showViewController:]
  -[GKSignInViewController accountController]
  -[GKSignInViewController setAccountController:]
  -[GKSignInViewController bubbleAnimatorForTransitionFromViewController:]
  -[GKSignInViewController bubbleContainerView]
  -[GKSignInViewController bubbleFlowAnimateOutDuration]
  -[GKSignInViewController bubbleFlowAnimateInDuration]
  -[GKSignInViewController bubbleFlowSubviewFadeOutDuration]
  -[GKSignInViewController bubbleFlowSubviewFadeOutDelay]
  -[GKSignInViewController viewWillAppearAnimated:bubbleFlow:]
  -[GKSignInViewController viewsToAnimateInWhileAppearingWithBubbleFlow]
  -[GKSignInViewController viewsToAnimateOutWhileDisappearingWithBubbleFlow]
  -[GKSignInViewController _gkUsesBubbleFlowModalPresentation]
  -[GKSignInViewController contentInsetsBeforeKeyboard]
  -[GKSignInViewController setContentInsetsBeforeKeyboard:]
  -[GKSignInViewController setU13Group:]
  -[GKSignInViewController u13NavigationController]
  -[GKSignInViewController remoteU13Controller]
  -[GKSignInViewController setRemoteU13Controller:]
  -[GKSignInViewController setU13NavigationController:]
  -[GKSignInViewController u13ObjectModels]
  -[GKSignInViewController setU13ObjectModels:]
  -[GKSignInViewController u13Group]
  -[GKSignInViewController userShouldSkipCreateAppleID]
  -[GKSignInViewController setUserShouldSkipCreateAppleID:]
  -[GKSignInViewController _systemContentSizeSettingDidChange:]
  -[GKSignInViewController startLoadingIndicator]
  -[GKSignInViewController stopLoadingIndicator]
  -[GKSignInViewController showLoginFailedAlert]
  -[GKSignInViewController finishAuthenticationWithError:]
  -[GKSignInViewController showPasswordChangeAlertWithURL:]
  -[GKSignInViewController disablesSignIn]
  -[GKSignInViewController setDisablesSignIn:]
  -[GKSignInViewController signInInputView]
  -[GKSignInViewController addCancelButtonToNavigationItem:]
  -[GKSignInViewController cancelSignIn]
  -[GKSignInViewController setupAuthKitInlineViewController]
  -[GKSignInViewController barBackgroundImage]
  -[GKSignInViewController iForgotTapped]
  -[GKSignInViewController authenticateRequestCompletedWithErrorResponse:error:]
  -[GKSignInViewController addGDPRPrivacyLink]
  -[GKSignInViewController loginPromptLabel]
  -[GKSignInViewController updateConstraintConstantsForTraitCollection:]
  -[GKSignInViewController fullWidthViewConstraints]
  -[GKSignInViewController fullWidthContentWidthConstraintConstant]
  -[GKSignInViewController setFullWidthContentWidthConstraintConstant:]
  -[GKSignInViewController setFullWidthViewConstraints:]
  -[GKSignInViewController _updateBubbleRectsForOrientation:]
  -[GKSignInViewController showAccountRemoteUIForAccountName:mode:]
  -[GKSignInViewController handleUnderlyingAuthenticationError:accountName:]
  -[GKSignInViewController showConnectionFailedAlert]
  -[GKSignInViewController loadAccountRemoteUIForPlayer:mode:url:postBody:completionHandler:]
  -[GKSignInViewController showAuthKitAlertFromGreenBuddyWithAuthInfo:completion:]
  -[GKSignInViewController accountRemoteUIController:finishedWithError:]
  -[GKSignInViewController showAccountRemoteUIForAccountName:mode:url:postBody:]
  -[GKSignInViewController presentAccountRemoteUIControllerAnimated:]
  -[GKSignInViewController showAccountDisabledAlert]
  -[GKSignInViewController showPasswordAlertWithTitle:message:]
  -[GKSignInViewController showPasswordResetAlertWithTitle:message:]
  -[GKSignInViewController signIn]
  -[GKSignInViewController createNewAccount]
  -[GKSignInViewController presentError:forAccountRemoteUIController:]
  -[GKSignInViewController loadAccountRemoteUIForPlayer:mode:completionHandler:]
  -[GKSignInViewController showForgotPasswordAlert]
  -[GKSignInViewController remoteUIPresentingViewController]
  -[GKSignInViewController setRemoteUIPresentingViewController:]
  -[GKSignInViewController isLoadingRemoteUI]
  -[GKSignInViewController setLoadingRemoteUI:]
  -[GKSignInViewController setProgressIndicator:]
  -[GKSignInViewController signInLabel]
  -[GKSignInViewController setSignInLabel:]
  -[GKSignInViewController setLoginPromptLabel:]
  -[GKSignInViewController setSignInInputView:]
  -[GKSignInViewController constraintsCreated]
  -[GKSignInViewController setConstraintsCreated:]
  -[GKSignInViewController currentContentInsets]
  -[GKSignInViewController setCurrentContentInsets:]
  -[GKSignInViewController scrollIndicatorInsetsBeforeKeyboard]
  -[GKSignInViewController setScrollIndicatorInsetsBeforeKeyboard:]
  -[GKSignInViewController setBubbleContainerView:]
  -[GKSignInViewController horizontalPaddingConstraintConstant]
  -[GKSignInViewController setHorizontalPaddingConstraintConstant:]
  -[GKSignInViewController labelWidthConstraintConstant]
  -[GKSignInViewController setLabelWidthConstraintConstant:]


GKMappedIndexPath : NSIndexPath /System/Library/Frameworks/MessageUI.framework/MessageUI
 @property  id tag
 @property  NSIndexPath *sourceIndexPath

  // class methods
  +[GKMappedIndexPath indexPathForItem:inSection:fromSourceIndexPath:withTag:]

  // instance methods
  -[GKMappedIndexPath dealloc]
  -[GKMappedIndexPath tag]
  -[GKMappedIndexPath setTag:]
  -[GKMappedIndexPath sourceIndexPath]
  -[GKMappedIndexPath setSourceIndexPath:]


GKAggregateMapping : NSObject <NSCopying>
 @property  NSMutableDictionary *globalToLocalSections
 @property  NSMutableDictionary *localToGlobalSections
 @property  NSMutableDictionary *globalSectionsToTags
 @property  GKCollectionViewDataSource *dataSource
 @property  long long sectionCount
 @property  NSString *dynamicTag

  // instance methods
  -[GKAggregateMapping init]
  -[GKAggregateMapping dealloc]
  -[GKAggregateMapping copyWithZone:]
  -[GKAggregateMapping dataSource]
  -[GKAggregateMapping setDataSource:]
  -[GKAggregateMapping sectionCount]
  -[GKAggregateMapping _gkDescriptionWithChildren:]
  -[GKAggregateMapping globalToLocalSections]
  -[GKAggregateMapping setGlobalToLocalSections:]
  -[GKAggregateMapping localToGlobalSections]
  -[GKAggregateMapping setLocalToGlobalSections:]
  -[GKAggregateMapping globalSectionsToTags]
  -[GKAggregateMapping setGlobalSectionsToTags:]
  -[GKAggregateMapping localSectionForGlobalSection:]
  -[GKAggregateMapping globalSectionForLocalSection:]
  -[GKAggregateMapping initWithGlobalToLocalMapping:]
  -[GKAggregateMapping addMappingFromGlobalSection:toLocalSection:withTag:]
  -[GKAggregateMapping localIndexPathForGlobalIndexPath:]
  -[GKAggregateMapping globalIndexPathForLocalIndexPath:]
  -[GKAggregateMapping tagForGlobalSection:]
  -[GKAggregateMapping updateMappingsStartingWithGlobalSection:]
  -[GKAggregateMapping setSectionCount:]
  -[GKAggregateMapping dynamicTag]
  -[GKAggregateMapping setDynamicTag:]


GKAggregateCollectionViewWrapper : NSObject
 @property  UICollectionView *wrappedView
 @property  GKAggregateMapping *mapping

  // class methods
  +[GKAggregateCollectionViewWrapper instancesRespondToSelector:]
  +[GKAggregateCollectionViewWrapper instanceMethodSignatureForSelector:]
  +[GKAggregateCollectionViewWrapper wrapperForView:mapping:]

  // instance methods
  -[GKAggregateCollectionViewWrapper dealloc]
  -[GKAggregateCollectionViewWrapper respondsToSelector:]
  -[GKAggregateCollectionViewWrapper methodSignatureForSelector:]
  -[GKAggregateCollectionViewWrapper forwardingTargetForSelector:]
  -[GKAggregateCollectionViewWrapper valueForUndefinedKey:]
  -[GKAggregateCollectionViewWrapper setValue:forUndefinedKey:]
  -[GKAggregateCollectionViewWrapper mapping]
  -[GKAggregateCollectionViewWrapper dequeueReusableCellWithReuseIdentifier:forIndexPath:]
  -[GKAggregateCollectionViewWrapper layoutAttributesForItemAtIndexPath:]
  -[GKAggregateCollectionViewWrapper numberOfItemsInSection:]
  -[GKAggregateCollectionViewWrapper dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:]
  -[GKAggregateCollectionViewWrapper insertSections:]
  -[GKAggregateCollectionViewWrapper insertItemsAtIndexPaths:]
  -[GKAggregateCollectionViewWrapper reloadSections:]
  -[GKAggregateCollectionViewWrapper reloadItemsAtIndexPaths:]
  -[GKAggregateCollectionViewWrapper deleteSections:]
  -[GKAggregateCollectionViewWrapper deleteItemsAtIndexPaths:]
  -[GKAggregateCollectionViewWrapper moveSection:toSection:]
  -[GKAggregateCollectionViewWrapper moveItemAtIndexPath:toIndexPath:]
  -[GKAggregateCollectionViewWrapper indexPathForCell:]
  -[GKAggregateCollectionViewWrapper cellForItemAtIndexPath:]
  -[GKAggregateCollectionViewWrapper indexPathForItemAtPoint:]
  -[GKAggregateCollectionViewWrapper layoutAttributesForSupplementaryElementOfKind:atIndexPath:]
  -[GKAggregateCollectionViewWrapper scrollToItemAtIndexPath:atScrollPosition:animated:]
  -[GKAggregateCollectionViewWrapper selectItemAtIndexPath:animated:scrollPosition:]
  -[GKAggregateCollectionViewWrapper indexPathsForSelectedItems]
  -[GKAggregateCollectionViewWrapper deselectItemAtIndexPath:animated:]
  -[GKAggregateCollectionViewWrapper indexPathsForVisibleItems]
  -[GKAggregateCollectionViewWrapper wrappedView]
  -[GKAggregateCollectionViewWrapper setWrappedView:]
  -[GKAggregateCollectionViewWrapper setMapping:]
  -[GKAggregateCollectionViewWrapper _gkRegisterClass:forSupplementaryViewOfKind:]
  -[GKAggregateCollectionViewWrapper _gkRegisterCellClass:]
  -[GKAggregateCollectionViewWrapper _gkDequeueSupplementaryViewForClass:ofKind:forIndexPath:]
  -[GKAggregateCollectionViewWrapper _gkDequeueCellForClass:forIndexPath:]
  -[GKAggregateCollectionViewWrapper _gkPerformWithoutViewReuse:]
  -[GKAggregateCollectionViewWrapper initWithView:mapping:]


GKViewServiceInterface : NSXPCInterface /System/Library/Frameworks/MessageUI.framework/MessageUI
  // class methods
  +[GKViewServiceInterface extensionInterface]
  +[GKViewServiceInterface extensionHostInterface]
  +[GKViewServiceInterface challengeIssueServiceViewControllerInterface]
  +[GKViewServiceInterface challengeIssueHostViewControllerInterface]
  +[GKViewServiceInterface gameCenterServiceViewControllerInterface]
  +[GKViewServiceInterface gameCenterHostViewControllerInterface]
  +[GKViewServiceInterface turnBasedServiceViewControllerInterface]
  +[GKViewServiceInterface turnBasedHostViewControllerInterface]
  +[GKViewServiceInterface signInServiceViewControllerInterface]
  +[GKViewServiceInterface remoteSignInViewControllerInterface]
  +[GKViewServiceInterface matchmakerServiceViewControllerInterface]
  +[GKViewServiceInterface matchmakerHostViewControllerInterface]
  +[GKViewServiceInterface _configureKVOTypes:]
  +[GKViewServiceInterface setClassesForHostInterface:]
  +[GKViewServiceInterface setClassesForExtensionInterface:]
  +[GKViewServiceInterface remoteFriendRequestViewControllerInterface]
  +[GKViewServiceInterface serviceFriendRequestViewControllerInterface]


GKBasicCollectionViewController : GKCollectionViewController
 @property  NSArray *metricsForSections
 @property  GKCollectionViewDataSource *initialDataSource
 @property  id target

  // instance methods
  -[GKBasicCollectionViewController dealloc]
  -[GKBasicCollectionViewController setTarget:]
  -[GKBasicCollectionViewController target]
  -[GKBasicCollectionViewController setDataSource:]
  -[GKBasicCollectionViewController preferredContentSize]
  -[GKBasicCollectionViewController collectionView:didSelectItemAtIndexPath:]
  -[GKBasicCollectionViewController configureDataSource]
  -[GKBasicCollectionViewController setInitialDataSource:]
  -[GKBasicCollectionViewController initWithDataSource:title:]
  -[GKBasicCollectionViewController metricsForSections]
  -[GKBasicCollectionViewController setMetricsForSections:]
  -[GKBasicCollectionViewController initialDataSource]


GKBaseComposeHeaderField : UIImageView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  GKLabel *nameLabel
 @property  GKHairlineView *separatorView
 @property  unsigned long maxLineCount
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} valueFrame
 @property  NSString *nameText
 @property  NSString *valueText
 @property  SEL actionWhenTouched

  // instance methods
  -[GKBaseComposeHeaderField dealloc]
  -[GKBaseComposeHeaderField initWithFrame:]
  -[GKBaseComposeHeaderField touchesBegan:withEvent:]
  -[GKBaseComposeHeaderField separatorView]
  -[GKBaseComposeHeaderField canBecomeFirstResponder]
  -[GKBaseComposeHeaderField setSeparatorView:]
  -[GKBaseComposeHeaderField setNameLabel:]
  -[GKBaseComposeHeaderField nameLabel]
  -[GKBaseComposeHeaderField viewForBaselineLayout]
  -[GKBaseComposeHeaderField nameText]
  -[GKBaseComposeHeaderField setValueText:]
  -[GKBaseComposeHeaderField valueText]
  -[GKBaseComposeHeaderField maxLineCount]
  -[GKBaseComposeHeaderField setMaxLineCount:]
  -[GKBaseComposeHeaderField setNameText:]
  -[GKBaseComposeHeaderField valueFrame]
  -[GKBaseComposeHeaderField addConstraintsForValueView:]
  -[GKBaseComposeHeaderField actionWhenTouched]
  -[GKBaseComposeHeaderField setActionWhenTouched:]


GKComposeHeaderField : GKBaseComposeHeaderField
 @property  GKLabel *valueLabel

  // instance methods
  -[GKComposeHeaderField dealloc]
  -[GKComposeHeaderField initWithFrame:]
  -[GKComposeHeaderField setValueLabel:]
  -[GKComposeHeaderField valueLabel]
  -[GKComposeHeaderField setValueText:]
  -[GKComposeHeaderField valueText]
  -[GKComposeHeaderField setMaxLineCount:]
  -[GKComposeHeaderField valueFrame]


GKChallengeDataSource : GKCollectionDataSource <GKDashboardChallengeDetailViewControllerDelegate>
 @property  GKGameRecord *gameRecord
 @property  NSArray *challenges
 @property  BOOL shouldShowPlay

  // instance methods
  -[GKChallengeDataSource dealloc]
  -[GKChallengeDataSource numberOfSectionsInCollectionView:]
  -[GKChallengeDataSource collectionView:cellForItemAtIndexPath:]
  -[GKChallengeDataSource itemCount]
  -[GKChallengeDataSource collectionView:shouldSelectItemAtIndexPath:]
  -[GKChallengeDataSource collectionView:didSelectItemAtIndexPath:]
  -[GKChallengeDataSource collectionView:layout:sizeForItemAtIndexPath:]
  -[GKChallengeDataSource preferredCollectionHeight]
  -[GKChallengeDataSource setupCollectionView:]
  -[GKChallengeDataSource loadDataWithCompletionHandler:]
  -[GKChallengeDataSource itemForIndexPath:]
  -[GKChallengeDataSource sectionHeaderText]
  -[GKChallengeDataSource setGameRecord:]
  -[GKChallengeDataSource gameRecord]
  -[GKChallengeDataSource initWithGameRecord:]
  -[GKChallengeDataSource userDidSelectPlay:]
  -[GKChallengeDataSource shouldShowPlay]
  -[GKChallengeDataSource setShouldShowPlay:]
  -[GKChallengeDataSource setChallenges:]
  -[GKChallengeDataSource challenges]


GKRemoteUITableHeaderView : UIView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics <RUIPageAccessory>
 @property  double height
 @property  GKLabel *label
 @property  GKLabel *subLabel
 @property  GKButton *button
 @property  NSDictionary *attributes
 @property  NSArray *replaceableConstraints
 @property  int layoutStyle
 @property  <GKRemoteUIAuxiliaryViewDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKRemoteUITableHeaderView delegate]
  -[GKRemoteUITableHeaderView setDelegate:]
  -[GKRemoteUITableHeaderView .cxx_destruct]
  -[GKRemoteUITableHeaderView attributes]
  -[GKRemoteUITableHeaderView setAttributes:]
  -[GKRemoteUITableHeaderView height]
  -[GKRemoteUITableHeaderView setHeight:]
  -[GKRemoteUITableHeaderView setLabel:]
  -[GKRemoteUITableHeaderView label]
  -[GKRemoteUITableHeaderView intrinsicContentSize]
  -[GKRemoteUITableHeaderView button]
  -[GKRemoteUITableHeaderView sizeThatFits:]
  -[GKRemoteUITableHeaderView setLayoutStyle:]
  -[GKRemoteUITableHeaderView layoutStyle]
  -[GKRemoteUITableHeaderView initWithAttributes:]
  -[GKRemoteUITableHeaderView setButton:]
  -[GKRemoteUITableHeaderView rightMargin]
  -[GKRemoteUITableHeaderView buttonTapped:]
  -[GKRemoteUITableHeaderView subLabel]
  -[GKRemoteUITableHeaderView objectModelDidChange:]
  -[GKRemoteUITableHeaderView bottomMargin]
  -[GKRemoteUITableHeaderView leftMargin]
  -[GKRemoteUITableHeaderView replaceableConstraints]
  -[GKRemoteUITableHeaderView setReplaceableConstraints:]
  -[GKRemoteUITableHeaderView createButtonWithAttributes:]
  -[GKRemoteUITableHeaderView createLabelWithAttributes:]
  -[GKRemoteUITableHeaderView createSubLabelWithAttributes:]
  -[GKRemoteUITableHeaderView applyConstraints]
  -[GKRemoteUITableHeaderView labelBaselineOffset]
  -[GKRemoteUITableHeaderView labelBaselineToSubLabelTopOffset]
  -[GKRemoteUITableHeaderView labelBaselineToButtonBaselineOffset]
  -[GKRemoteUITableHeaderView labelTopOffset]
  -[GKRemoteUITableHeaderView setSubLabel:]


GKDashboardLeaderboardScoreHeaderView : UICollectionReusableView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  UILabel *titleLabel
 @property  GKTimeScopeButton *timeScopeButton
 @property  NSString *title
 @property  long long timeScope
 @property  id timeScopeTarget
 @property  SEL timeScopeAction

  // class methods
  +[GKDashboardLeaderboardScoreHeaderView defaultHeight]

  // instance methods
  -[GKDashboardLeaderboardScoreHeaderView title]
  -[GKDashboardLeaderboardScoreHeaderView setTitle:]
  -[GKDashboardLeaderboardScoreHeaderView titleLabel]
  -[GKDashboardLeaderboardScoreHeaderView setTitleLabel:]
  -[GKDashboardLeaderboardScoreHeaderView awakeFromNib]
  -[GKDashboardLeaderboardScoreHeaderView setTimeScope:]
  -[GKDashboardLeaderboardScoreHeaderView timeScope]
  -[GKDashboardLeaderboardScoreHeaderView timeScopeTarget]
  -[GKDashboardLeaderboardScoreHeaderView setTimeScopeTarget:]
  -[GKDashboardLeaderboardScoreHeaderView timeScopeAction]
  -[GKDashboardLeaderboardScoreHeaderView setTimeScopeAction:]
  -[GKDashboardLeaderboardScoreHeaderView timeScopePressed:]
  -[GKDashboardLeaderboardScoreHeaderView timeScopeButton]
  -[GKDashboardLeaderboardScoreHeaderView setTimeScopeButton:]


GKDashboardMultiplayerPickerPlayWithFriendsReusableFooterView : UICollectionReusableView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  UIView *backgroundView
 @property  UIButton *manageInSettingsButton
 @property  UIImageView *chevronLeftImage
 @property  UIImageView *chevronRightImage
 @property  @? manageInSettingsHandler

  // instance methods
  -[GKDashboardMultiplayerPickerPlayWithFriendsReusableFooterView .cxx_destruct]
  -[GKDashboardMultiplayerPickerPlayWithFriendsReusableFooterView backgroundView]
  -[GKDashboardMultiplayerPickerPlayWithFriendsReusableFooterView setBackgroundView:]
  -[GKDashboardMultiplayerPickerPlayWithFriendsReusableFooterView awakeFromNib]
  -[GKDashboardMultiplayerPickerPlayWithFriendsReusableFooterView setManageInSettingsHandler:]
  -[GKDashboardMultiplayerPickerPlayWithFriendsReusableFooterView manageInSettingsButton]
  -[GKDashboardMultiplayerPickerPlayWithFriendsReusableFooterView manageInSettingsTapped:]
  -[GKDashboardMultiplayerPickerPlayWithFriendsReusableFooterView chevronLeftImage]
  -[GKDashboardMultiplayerPickerPlayWithFriendsReusableFooterView chevronRightImage]
  -[GKDashboardMultiplayerPickerPlayWithFriendsReusableFooterView manageInSettingsHandler]
  -[GKDashboardMultiplayerPickerPlayWithFriendsReusableFooterView setManageInSettingsButton:]
  -[GKDashboardMultiplayerPickerPlayWithFriendsReusableFooterView setChevronLeftImage:]
  -[GKDashboardMultiplayerPickerPlayWithFriendsReusableFooterView setChevronRightImage:]


GKCollectionColumnDividerView : UICollectionReusableView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
  // instance methods
  -[GKCollectionColumnDividerView initWithFrame:]


GKDashboardLeaderboardScoreViewController : GKDashboardCollectionViewController
 @property  GKDashboardLeaderboardScoreHeaderView *headerView
 @property  GKLeaderboard *leaderboard
 @property  GKDashboardLeaderboardScoreDataSource *friendDataSource
 @property  GKDashboardLeaderboardScoreDataSource *globalDataSource
 @property  long long timeScope

  // class methods
  +[GKDashboardLeaderboardScoreViewController initialTimeScope]
  +[GKDashboardLeaderboardScoreViewController setInitialTimeScope:]

  // instance methods
  -[GKDashboardLeaderboardScoreViewController dealloc]
  -[GKDashboardLeaderboardScoreViewController traitCollectionDidChange:]
  -[GKDashboardLeaderboardScoreViewController viewDidLoad]
  -[GKDashboardLeaderboardScoreViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[GKDashboardLeaderboardScoreViewController headerView]
  -[GKDashboardLeaderboardScoreViewController setHeaderView:]
  -[GKDashboardLeaderboardScoreViewController collectionView:viewForSupplementaryElementOfKind:atIndexPath:]
  -[GKDashboardLeaderboardScoreViewController donePressed:]
  -[GKDashboardLeaderboardScoreViewController setTimeScope:]
  -[GKDashboardLeaderboardScoreViewController timeScope]
  -[GKDashboardLeaderboardScoreViewController setLeaderboard:]
  -[GKDashboardLeaderboardScoreViewController initWithGameRecord:leaderboard:]
  -[GKDashboardLeaderboardScoreViewController dataUpdated:withError:]
  -[GKDashboardLeaderboardScoreViewController setupNoContentView:withError:]
  -[GKDashboardLeaderboardScoreViewController leaderboard]
  -[GKDashboardLeaderboardScoreViewController timeScopePressed:]
  -[GKDashboardLeaderboardScoreViewController shouldUseTwoColumnLayoutForSize:]
  -[GKDashboardLeaderboardScoreViewController updateColumnLayoutForSize:]
  -[GKDashboardLeaderboardScoreViewController friendDataSource]
  -[GKDashboardLeaderboardScoreViewController setFriendDataSource:]
  -[GKDashboardLeaderboardScoreViewController globalDataSource]
  -[GKDashboardLeaderboardScoreViewController setGlobalDataSource:]


GKDashboardSectionHeaderView : UICollectionReusableView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  UIColor *titleColor
 @property  NSLayoutConstraint *rightMarginConstraint
 @property  NSString *title
 @property  UIFont *font
 @property  UILabel *titleLabel
 @property  NSLayoutConstraint *leftMarginConstraint
 @property  BOOL onDarkBackground

  // class methods
  +[GKDashboardSectionHeaderView defaultHeight]
  +[GKDashboardSectionHeaderView platformSizeForTitle:withFont:]
  +[GKDashboardSectionHeaderView widthForTitle:withFont:]

  // instance methods
  -[GKDashboardSectionHeaderView .cxx_destruct]
  -[GKDashboardSectionHeaderView title]
  -[GKDashboardSectionHeaderView setTitle:]
  -[GKDashboardSectionHeaderView intrinsicContentSize]
  -[GKDashboardSectionHeaderView setFont:]
  -[GKDashboardSectionHeaderView titleLabel]
  -[GKDashboardSectionHeaderView font]
  -[GKDashboardSectionHeaderView setTitleLabel:]
  -[GKDashboardSectionHeaderView awakeFromNib]
  -[GKDashboardSectionHeaderView titleColor]
  -[GKDashboardSectionHeaderView setTitleColor:]
  -[GKDashboardSectionHeaderView setOnDarkBackground:]
  -[GKDashboardSectionHeaderView onDarkBackground]
  -[GKDashboardSectionHeaderView rightMarginConstraint]
  -[GKDashboardSectionHeaderView setRightMarginConstraint:]
  -[GKDashboardSectionHeaderView leftMarginConstraint]
  -[GKDashboardSectionHeaderView setLeftMarginConstraint:]


GKTurnGameCell : GKBaseGameCell
 @property  GKLabel *activeMatchesLabel
 @property  GKLabel *localPlayerTurnsLabel
 @property  UIImageView *statusImageView
 @property  GKContiguousContainerView *textContainerView
 @property  NSLayoutConstraint *iconLeadingConstraint
 @property  NSLayoutConstraint *statusImageTrailingConstraint
 @property  NSLayoutConstraint *textContainerTrailingConstraint
 @property  unsigned long numberOfActiveMatches
 @property  unsigned long numberOfLocalPlayerTurns
 @property  {UIEdgeInsets=dddd} insets

  // class methods
  +[GKTurnGameCell registerCellClassesForCollectionView:]
  +[GKTurnGameCell itemHeightList]
  +[GKTurnGameCell defaultRowHeight]

  // instance methods
  -[GKTurnGameCell dealloc]
  -[GKTurnGameCell initWithFrame:]
  -[GKTurnGameCell insets]
  -[GKTurnGameCell setInsets:]
  -[GKTurnGameCell setStatusImageView:]
  -[GKTurnGameCell setTextContainerView:]
  -[GKTurnGameCell textContainerView]
  -[GKTurnGameCell statusImageView]
  -[GKTurnGameCell didUpdateModel]
  -[GKTurnGameCell numberOfActiveMatches]
  -[GKTurnGameCell numberOfLocalPlayerTurns]
  -[GKTurnGameCell setNumberOfActiveMatches:]
  -[GKTurnGameCell setNumberOfLocalPlayerTurns:]
  -[GKTurnGameCell establishConstraints]
  -[GKTurnGameCell setIconLeadingConstraint:]
  -[GKTurnGameCell setTextContainerTrailingConstraint:]
  -[GKTurnGameCell setStatusImageTrailingConstraint:]
  -[GKTurnGameCell updateMarginConstraints]
  -[GKTurnGameCell activeMatchesLabel]
  -[GKTurnGameCell localPlayerTurnsLabel]
  -[GKTurnGameCell setActiveMatchesLabel:]
  -[GKTurnGameCell setLocalPlayerTurnsLabel:]
  -[GKTurnGameCell iconLeadingConstraint]
  -[GKTurnGameCell statusImageTrailingConstraint]
  -[GKTurnGameCell textContainerTrailingConstraint]


GKTurnParticipantCell : GKBasePlayerCell
 @property  GKLabel *topLabel
 @property  GKLabel *bottomLabel
 @property  UIButton *detailButton
 @property  UIImageView *statusImageView
 @property  GKContiguousContainerView *textContainerView
 @property  NSLayoutConstraint *iconLeadingConstraint
 @property  NSLayoutConstraint *statusImageTrailingConstraint
 @property  NSLayoutConstraint *textContainerTrailingConstraint
 @property  NSLayoutConstraint *detailButtonConstraint
 @property  GKTurnBasedMatch *match
 @property  GKTurnBasedParticipant *participant
 @property  SEL detailPressedAction
 @property  BOOL isDetail
 @property  {UIEdgeInsets=dddd} insets

  // class methods
  +[GKTurnParticipantCell registerCellClassesForCollectionView:]
  +[GKTurnParticipantCell itemHeightList]
  +[GKTurnParticipantCell defaultRowHeight]

  // instance methods
  -[GKTurnParticipantCell dealloc]
  -[GKTurnParticipantCell initWithFrame:]
  -[GKTurnParticipantCell insets]
  -[GKTurnParticipantCell setInsets:]
  -[GKTurnParticipantCell topLabel]
  -[GKTurnParticipantCell setTopLabel:]
  -[GKTurnParticipantCell participant]
  -[GKTurnParticipantCell setStatusImageView:]
  -[GKTurnParticipantCell setTextContainerView:]
  -[GKTurnParticipantCell textContainerView]
  -[GKTurnParticipantCell statusImageView]
  -[GKTurnParticipantCell setDetailButton:]
  -[GKTurnParticipantCell detailButton]
  -[GKTurnParticipantCell match]
  -[GKTurnParticipantCell setParticipant:]
  -[GKTurnParticipantCell setBottomLabel:]
  -[GKTurnParticipantCell bottomLabel]
  -[GKTurnParticipantCell setMatch:]
  -[GKTurnParticipantCell didUpdateModel]
  -[GKTurnParticipantCell setDetailPressedAction:]
  -[GKTurnParticipantCell detailPressedAction]
  -[GKTurnParticipantCell setIsDetail:]
  -[GKTurnParticipantCell establishConstraints]
  -[GKTurnParticipantCell isDetail]
  -[GKTurnParticipantCell setIconLeadingConstraint:]
  -[GKTurnParticipantCell setTextContainerTrailingConstraint:]
  -[GKTurnParticipantCell setStatusImageTrailingConstraint:]
  -[GKTurnParticipantCell updateMarginConstraints]
  -[GKTurnParticipantCell iconLeadingConstraint]
  -[GKTurnParticipantCell statusImageTrailingConstraint]
  -[GKTurnParticipantCell textContainerTrailingConstraint]
  -[GKTurnParticipantCell detailPressed:]
  -[GKTurnParticipantCell setDetailButtonConstraint:]
  -[GKTurnParticipantCell configureForDetail]
  -[GKTurnParticipantCell configureForMatch]
  -[GKTurnParticipantCell matchWantsLocalPlayerAttention]
  -[GKTurnParticipantCell viewForPopover]
  -[GKTurnParticipantCell detailButtonConstraint]


GKMultiplayerCollectionViewCellAccessoryLeft : GKMultiplayerCollectionViewCell
  // class methods
  +[GKMultiplayerCollectionViewCellAccessoryLeft reuseIdentifier]


GKLeaderboardListHeaderView : UICollectionReusableView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  UILabel *titleLabel
 @property  UILabel *subtitleLabel

  // class methods
  +[GKLeaderboardListHeaderView defaultHeight]

  // instance methods
  -[GKLeaderboardListHeaderView titleLabel]
  -[GKLeaderboardListHeaderView setTitleLabel:]
  -[GKLeaderboardListHeaderView setSubtitleLabel:]
  -[GKLeaderboardListHeaderView subtitleLabel]


GKDashboardFocusContainerView : UIView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  UIView *focusView

  // instance methods
  -[GKDashboardFocusContainerView preferredFocusEnvironments]
  -[GKDashboardFocusContainerView canBecomeFocused]
  -[GKDashboardFocusContainerView focusView]
  -[GKDashboardFocusContainerView setFocusView:]


GKAcquireFocusWorkaroundView : UIView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
  // instance methods
  -[GKAcquireFocusWorkaroundView canBecomeFirstResponder]


GKResizingLabel : UILabel /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics

GKFriendListReusableFooterView : UITableViewHeaderFooterView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  UIButton *button
 @property  NSLayoutConstraint *topLeadingConstraint

  // instance methods
  -[GKFriendListReusableFooterView .cxx_destruct]
  -[GKFriendListReusableFooterView button]
  -[GKFriendListReusableFooterView setButton:]
  -[GKFriendListReusableFooterView topLeadingConstraint]
  -[GKFriendListReusableFooterView setTopLeadingConstraint:]


GKCollectionViewAggregateDataSource : GKCollectionViewDataSource
 @property  NSMutableArray *mappings
 @property  NSMapTable *dataSourceToMappings
 @property  NSMutableDictionary *globalSectionToMappings
 @property  unsigned long sectionCount

  // instance methods
  -[GKCollectionViewAggregateDataSource init]
  -[GKCollectionViewAggregateDataSource dealloc]
  -[GKCollectionViewAggregateDataSource numberOfSectionsInCollectionView:]
  -[GKCollectionViewAggregateDataSource collectionView:numberOfItemsInSection:]
  -[GKCollectionViewAggregateDataSource collectionView:cellForItemAtIndexPath:]
  -[GKCollectionViewAggregateDataSource collectionView:viewForSupplementaryElementOfKind:atIndexPath:]
  -[GKCollectionViewAggregateDataSource sectionCount]
  -[GKCollectionViewAggregateDataSource mappings]
  -[GKCollectionViewAggregateDataSource setMappings:]
  -[GKCollectionViewAggregateDataSource itemAtIndexPath:]
  -[GKCollectionViewAggregateDataSource removeDataSource:]
  -[GKCollectionViewAggregateDataSource _gkDescriptionWithChildren:]
  -[GKCollectionViewAggregateDataSource dataSourceForSection:]
  -[GKCollectionViewAggregateDataSource refreshContentsForDataType:userInfo:updateNotifier:]
  -[GKCollectionViewAggregateDataSource indexPathsForItem:]
  -[GKCollectionViewAggregateDataSource item:matchesSearchTerms:inSection:]
  -[GKCollectionViewAggregateDataSource removeItemAtIndexPath:completionHandler:]
  -[GKCollectionViewAggregateDataSource configureCollectionView:]
  -[GKCollectionViewAggregateDataSource collectionView:evaluateFactoryForSupplementaryElementOfKind:atIndexPath:isRecursive:]
  -[GKCollectionViewAggregateDataSource createMetricsTreeWithGridLayout:]
  -[GKCollectionViewAggregateDataSource collectionViewWillBecomeActive:]
  -[GKCollectionViewAggregateDataSource collectionViewDidBecomeInactive:]
  -[GKCollectionViewAggregateDataSource containsDataSource:]
  -[GKCollectionViewAggregateDataSource sectionForDataSource:]
  -[GKCollectionViewAggregateDataSource dataSource:didInsertItemsAtIndexPaths:]
  -[GKCollectionViewAggregateDataSource dataSource:didRemoveItemsAtIndexPaths:]
  -[GKCollectionViewAggregateDataSource dataSource:didRefreshItemsAtIndexPaths:]
  -[GKCollectionViewAggregateDataSource dataSource:didMoveItemAtIndexPath:toIndexPath:]
  -[GKCollectionViewAggregateDataSource dataSource:didInsertSections:]
  -[GKCollectionViewAggregateDataSource dataSource:didRemoveSections:]
  -[GKCollectionViewAggregateDataSource dataSource:didRefreshSections:]
  -[GKCollectionViewAggregateDataSource dataSource:didMoveSection:toSection:]
  -[GKCollectionViewAggregateDataSource dataSourceDidReloadData:]
  -[GKCollectionViewAggregateDataSource dataSource:performBatchUpdate:complete:]
  -[GKCollectionViewAggregateDataSource _gkDescription]
  -[GKCollectionViewAggregateDataSource setSectionCount:]
  -[GKCollectionViewAggregateDataSource wrapperForView:mapping:]
  -[GKCollectionViewAggregateDataSource updateMappings]
  -[GKCollectionViewAggregateDataSource mappingForDataSource:]
  -[GKCollectionViewAggregateDataSource mappingForGlobalSection:]
  -[GKCollectionViewAggregateDataSource allDataSources]
  -[GKCollectionViewAggregateDataSource globalIndexPathsForLocal:dataSource:]
  -[GKCollectionViewAggregateDataSource globalSectionsForLocal:dataSource:]
  -[GKCollectionViewAggregateDataSource addDataSource:withTag:]
  -[GKCollectionViewAggregateDataSource setDataSource:forTag:]
  -[GKCollectionViewAggregateDataSource dataSourceToMappings]
  -[GKCollectionViewAggregateDataSource setDataSourceToMappings:]
  -[GKCollectionViewAggregateDataSource globalSectionToMappings]
  -[GKCollectionViewAggregateDataSource setGlobalSectionToMappings:]


GKExtensionViewController : UINavigationController /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics <GKDaemonProxyDataUpdateDelegate, GKExtensionProtocol, GKExtensionHostProtocol, GKDashboardServiceInterface>
 @property  BOOL hasInitialData
 @property  UIVisualEffectView *effectView
 @property  NSLayoutConstraint *effectBottomConstraint
 @property  NSLayoutConstraint *effectTopConstraint
 @property  BOOL alwaysShowDoneButton
 @property  double statusBarHeight
 @property  UIViewController *contentViewController
 @property  GKGame *game
 @property  int hostPID
 @property  BOOL adjustTopConstraint
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKExtensionViewController dealloc]
  -[GKExtensionViewController initWithCoder:]
  -[GKExtensionViewController finish]
  -[GKExtensionViewController traitCollectionDidChange:]
  -[GKExtensionViewController setContentViewController:]
  -[GKExtensionViewController willTransitionToTraitCollection:withTransitionCoordinator:]
  -[GKExtensionViewController viewWillAppear:]
  -[GKExtensionViewController viewDidLoad]
  -[GKExtensionViewController contentViewController]
  -[GKExtensionViewController viewDidDisappear:]
  -[GKExtensionViewController effectView]
  -[GKExtensionViewController statusBarHeight]
  -[GKExtensionViewController _statusBarHeightForCurrentInterfaceOrientation]
  -[GKExtensionViewController pushViewController:animated:]
  -[GKExtensionViewController setViewControllers:animated:]
  -[GKExtensionViewController didShowViewController:animated:]
  -[GKExtensionViewController setStatusBarHeight:]
  -[GKExtensionViewController willResignActive:]
  -[GKExtensionViewController didBecomeActive:]
  -[GKExtensionViewController setEffectView:]
  -[GKExtensionViewController hostPID]
  -[GKExtensionViewController setHostPID:]
  -[GKExtensionViewController game]
  -[GKExtensionViewController setGame:]
  -[GKExtensionViewController donePressed:]
  -[GKExtensionViewController setInitialState:withReply:]
  -[GKExtensionViewController messageFromExtension:]
  -[GKExtensionViewController setAlwaysShowDoneButton:]
  -[GKExtensionViewController _useBackdropViewForWindowBackground]
  -[GKExtensionViewController blurEffectForTraitCollection:]
  -[GKExtensionViewController extensionIsCanceling]
  -[GKExtensionViewController messageFromClient:]
  -[GKExtensionViewController extensionIsFinishing]
  -[GKExtensionViewController alwaysShowDoneButton]
  -[GKExtensionViewController refreshContentsForDataType:userInfo:]
  -[GKExtensionViewController setToLightBackground]
  -[GKExtensionViewController setToDarkBackground]
  -[GKExtensionViewController setEffectBottomConstraint:]
  -[GKExtensionViewController setEffectTopConstraint:]
  -[GKExtensionViewController hasInitialData]
  -[GKExtensionViewController constructContentViewController]
  -[GKExtensionViewController effectTopConstraint]
  -[GKExtensionViewController setHasInitialData:]
  -[GKExtensionViewController configureContentViewController]
  -[GKExtensionViewController addDoneButtonToViewController:]
  -[GKExtensionViewController hostObjectProxy]
  -[GKExtensionViewController sendMessageToClient:]
  -[GKExtensionViewController clientDidFinish]
  -[GKExtensionViewController clientDidCancel]
  -[GKExtensionViewController clientWillTerminate]
  -[GKExtensionViewController adjustTopConstraint]
  -[GKExtensionViewController setAdjustTopConstraint:]
  -[GKExtensionViewController effectBottomConstraint]


GKExtensionContext : NSExtensionContext /System/Library/Frameworks/MessageUI.framework/MessageUI <GKExtensionProtocol>
 @property  long long sandboxToken
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  GKGame *game

  // instance methods
  -[GKExtensionContext dealloc]
  -[GKExtensionContext game]
  -[GKExtensionContext setGame:]
  -[GKExtensionContext sandboxToken]
  -[GKExtensionContext setInitialState:withReply:]
  -[GKExtensionContext messageFromClient:]
  -[GKExtensionContext hostApp:grantingAccessExtensionSandbox:replyWithEndpoint:]
  -[GKExtensionContext setSandboxToken:]


GKMessageComposeViewController : UIViewController /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics <MFMessageComposeViewControllerInternalDelegate>
 @property  MFMessageComposeViewController *composeController
 @property  NSDictionary *playerNamesToPlayers
 @property  NSString *messageToSend
 @property  NSMutableArray *friendsToInvite
 @property  NSMutableArray *contactsToInvite
 @property  NSURL *shareURL
 @property  <GKMessageComposeViewControllerDelegate> *delegate
 @property  <GKDashboardNearbyBrowserDelegate> *nearbyDelegate
 @property  GKTournament *tournament
 @property  long long maximumSelectablePlayersForPicker
 @property  NSArray *currentlySelectedPlayersForPicker
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[GKMessageComposeViewController canSendText]

  // instance methods
  -[GKMessageComposeViewController delegate]
  -[GKMessageComposeViewController setDelegate:]
  -[GKMessageComposeViewController .cxx_destruct]
  -[GKMessageComposeViewController shareURL]
  -[GKMessageComposeViewController setShareURL:]
  -[GKMessageComposeViewController messageComposeViewController:didFinishWithResult:]
  -[GKMessageComposeViewController messageComposeViewController:shouldSendMessage:toRecipients:completion:]
  -[GKMessageComposeViewController composeController]
  -[GKMessageComposeViewController setComposeController:]
  -[GKMessageComposeViewController setTournament:]
  -[GKMessageComposeViewController setNearbyDelegate:]
  -[GKMessageComposeViewController nearbyDelegate]
  -[GKMessageComposeViewController setMaximumSelectablePlayersForPicker:]
  -[GKMessageComposeViewController setCurrentlySelectedPlayersForPicker:]
  -[GKMessageComposeViewController preparePresentationForMinPlayers:maxPlayers:shareURL:completionHandler:]
  -[GKMessageComposeViewController playerNamesToPlayers]
  -[GKMessageComposeViewController setPlayerNamesToPlayers:]
  -[GKMessageComposeViewController tournament]
  -[GKMessageComposeViewController setupPickerBlock]
  -[GKMessageComposeViewController showPlayerPickerForCompose]
  -[GKMessageComposeViewController maximumSelectablePlayersForPicker]
  -[GKMessageComposeViewController currentlySelectedPlayersForPicker]
  -[GKMessageComposeViewController contactForAddress:fromContactStore:]
  -[GKMessageComposeViewController setMessageToSend:]
  -[GKMessageComposeViewController setContactsToInvite:]
  -[GKMessageComposeViewController setFriendsToInvite:]
  -[GKMessageComposeViewController messageToSend]
  -[GKMessageComposeViewController contactsToInvite]
  -[GKMessageComposeViewController friendsToInvite]
  -[GKMessageComposeViewController initWithMessage:maxNumberOfPlayers:]


GKSkipControlButton : UIButton /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  NSString *skipValueString

  // instance methods
  -[GKSkipControlButton .cxx_destruct]
  -[GKSkipControlButton skipValueString]
  -[GKSkipControlButton setSkipValueString:]


GKContactSkipControl : UIControl /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  NSString *lastSelectedValue
 @property  NSArray *buttons
 @property  UIView *buttonView
 @property  UIView *centeringView
 @property  NSMutableDictionary *buttonsToTitles
 @property  NSArray *values

  // instance methods
  -[GKContactSkipControl setValues:]
  -[GKContactSkipControl values]
  -[GKContactSkipControl .cxx_destruct]
  -[GKContactSkipControl initWithFrame:]
  -[GKContactSkipControl awakeFromNib]
  -[GKContactSkipControl setButtons:]
  -[GKContactSkipControl buttons]
  -[GKContactSkipControl buttonView]
  -[GKContactSkipControl setButtonView:]
  -[GKContactSkipControl centeringView]
  -[GKContactSkipControl setCenteringView:]
  -[GKContactSkipControl adjustForTraitCollection:]
  -[GKContactSkipControl lastSelectedValue]
  -[GKContactSkipControl setupButtonView]
  -[GKContactSkipControl setupValueButtons]
  -[GKContactSkipControl determineButtonFromGesture:]
  -[GKContactSkipControl setButtonsToTitles:]
  -[GKContactSkipControl valueButtonCountThatFitsHeight:]
  -[GKContactSkipControl compactPhoneValues:]
  -[GKContactSkipControl nextTitleFollowingValue:]
  -[GKContactSkipControl valueSelected:]
  -[GKContactSkipControl setLastSelectedValue:]
  -[GKContactSkipControl buttonsToTitles]


GKTournamentViewController : UIViewController /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics <GKTournamentHostInterface>
 @property  GKExtensionManager *extensionManager
 @property  UIAlertController *alertController
 @property  NSString *tournamentID
 @property  GKScore *playerScore
 @property  BOOL playerResigned
 @property  GKTournamentViewRequest *viewRequest
 @property  GKTournament *tournament
 @property  GKTournamentDefinition *tournamentDefinition
 @property  <GKTournamentViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKTournamentViewController delegate]
  -[GKTournamentViewController setDelegate:]
  -[GKTournamentViewController .cxx_destruct]
  -[GKTournamentViewController setAlertController:]
  -[GKTournamentViewController alertController]
  -[GKTournamentViewController dismissViewControllerAnimated:completion:]
  -[GKTournamentViewController viewWillAppear:]
  -[GKTournamentViewController viewDidLoad]
  -[GKTournamentViewController didReceiveMemoryWarning]
  -[GKTournamentViewController loadRemoteView]
  -[GKTournamentViewController viewRequest]
  -[GKTournamentViewController extensionWillFinish]
  -[GKTournamentViewController extensionDidTerminateWithError:]
  -[GKTournamentViewController playTournament:withTryToken:]
  -[GKTournamentViewController tournament]
  -[GKTournamentViewController setExtensionManager:]
  -[GKTournamentViewController setViewRequest:]
  -[GKTournamentViewController extensionManager]
  -[GKTournamentViewController willFinishWithError:]
  -[GKTournamentViewController initWithViewRequest:]
  -[GKTournamentViewController setTournamentDefinition:]
  -[GKTournamentViewController tournamentDefinition]
  -[GKTournamentViewController tournamentID]
  -[GKTournamentViewController setTournamentID:]
  -[GKTournamentViewController playerScore]
  -[GKTournamentViewController setPlayerScore:]
  -[GKTournamentViewController playerResigned]
  -[GKTournamentViewController setPlayerResigned:]


GKCollectionHorizontalLayout : GKCollectionFocusingLayout
 @property  NSDictionary *itemAttributes
 @property  NSDictionary *headerAttributes
 @property  double scrollStepIntegral
 @property  BOOL centersItemsInExcessSpace
 @property  BOOL alignItemsToTop
 @property  double extraSectionHeaderToCellSpace

  // instance methods
  -[GKCollectionHorizontalLayout dealloc]
  -[GKCollectionHorizontalLayout prepareLayout]
  -[GKCollectionHorizontalLayout layoutAttributesForElementsInRect:]
  -[GKCollectionHorizontalLayout layoutAttributesForItemAtIndexPath:]
  -[GKCollectionHorizontalLayout collectionViewContentSize]
  -[GKCollectionHorizontalLayout layoutAttributesForSupplementaryViewOfKind:atIndexPath:]
  -[GKCollectionHorizontalLayout shouldInvalidateLayoutForBoundsChange:]
  -[GKCollectionHorizontalLayout targetContentOffsetForProposedContentOffset:withScrollingVelocity:]
  -[GKCollectionHorizontalLayout maxHeaderHeight]
  -[GKCollectionHorizontalLayout setAlignItemsToTop:]
  -[GKCollectionHorizontalLayout setExtraSectionHeaderToCellSpace:]
  -[GKCollectionHorizontalLayout setHeaderAttributes:]
  -[GKCollectionHorizontalLayout setItemAttributes:]
  -[GKCollectionHorizontalLayout lastValidSection]
  -[GKCollectionHorizontalLayout applyDefaults]
  -[GKCollectionHorizontalLayout centersItemsInExcessSpace]
  -[GKCollectionHorizontalLayout setCentersItemsInExcessSpace:]
  -[GKCollectionHorizontalLayout extraSectionHeaderToCellSpace]
  -[GKCollectionHorizontalLayout itemAttributes]
  -[GKCollectionHorizontalLayout headerAttributes]
  -[GKCollectionHorizontalLayout firstValidSection]
  -[GKCollectionHorizontalLayout alignItemsToTop]
  -[GKCollectionHorizontalLayout scrollStepIntegral]
  -[GKCollectionHorizontalLayout setScrollStepIntegral:]


GKExtensionHostViewController : _UIRemoteViewController /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics <GKSocialGamingHostInterface, GKSocialGamingExtensionInterface>
 @property  NSMapTable *targetForSelector
 @property  <GKExtensionHostViewControllerDelegate> *delegate
 @property  UIViewController<GKSocialGamingHostInterface> *hostViewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKExtensionHostViewController methodSignatureForSelector:]
  -[GKExtensionHostViewController forwardInvocation:]
  -[GKExtensionHostViewController delegate]
  -[GKExtensionHostViewController setDelegate:]
  -[GKExtensionHostViewController .cxx_destruct]
  -[GKExtensionHostViewController viewServiceDidTerminateWithError:]
  -[GKExtensionHostViewController setHostViewController:]
  -[GKExtensionHostViewController hostViewController]
  -[GKExtensionHostViewController finishExtension]
  -[GKExtensionHostViewController extensionWillFinish]
  -[GKExtensionHostViewController addTarget:forProtocol:toLookup:]
  -[GKExtensionHostViewController setTargetForSelector:]
  -[GKExtensionHostViewController targetForSelector]
  -[GKExtensionHostViewController methodSignatureForProtocol:selector:]
  -[GKExtensionHostViewController buildLookupForHost:]


GKTournamentExtensionHostViewController : GKExtensionHostViewController <GKTournamentExtensionInterface, GKTournamentHostInterface>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  GKTournamentViewRequest *viewRequest

  // class methods
  +[GKTournamentExtensionHostViewController exportedInterface]
  +[GKTournamentExtensionHostViewController serviceViewControllerInterface]

  // instance methods
  -[GKTournamentExtensionHostViewController setupWithViewRequest:]
  -[GKTournamentExtensionHostViewController initializeWithLocalPlayer:hostPID:reply:]
  -[GKTournamentExtensionHostViewController playTournament:withTryToken:]
  -[GKTournamentExtensionHostViewController tournamentHostViewController]


GKTopClipView : UICollectionReusableView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
  // instance methods
  -[GKTopClipView initWithFrame:]


GKSupplementaryViewFactory : NSObject
 @property  id target
 @property  SEL selector
 @property  Class reusableViewClass
 @property  SEL configurator

  // class methods
  +[GKSupplementaryViewFactory factoryForClass:target:configurator:]
  +[GKSupplementaryViewFactory factoryForClass:target:configurator:userData:]

  // instance methods
  -[GKSupplementaryViewFactory dealloc]
  -[GKSupplementaryViewFactory selector]
  -[GKSupplementaryViewFactory setTarget:]
  -[GKSupplementaryViewFactory target]
  -[GKSupplementaryViewFactory setSelector:]
  -[GKSupplementaryViewFactory collectionView:viewForSupplementaryElementOfKind:atIndexPath:]
  -[GKSupplementaryViewFactory configurator]
  -[GKSupplementaryViewFactory reusableViewClass]
  -[GKSupplementaryViewFactory setReusableViewClass:]
  -[GKSupplementaryViewFactory initWithClass:target:configurator:userData:]


GKCollectionViewDataSource : NSObject <GKCollectionViewDataSourceDelegate, UICollectionViewDataSource>
 @property  NSMutableDictionary *kindsToFactories
 @property  NSHashTable *listeners
 @property  NSMutableDictionary *sectionsToMetrics
 @property  NSMutableDictionary *sectionsToSearchKeys
 @property  <GKCollectionViewDataSourceDelegate> *delegate
 @property  GKGridLayoutMetrics *dataSourceMetricsInternal
 @property  GKSectionMetrics *defaultSectionMetricsInternal
 @property  BOOL isRootDataSource
 @property  GKSectionMetrics *defaultSectionMetrics
 @property  GKGridLayoutMetrics *dataSourceMetrics
 @property  NSString *defaultSearchKey
 @property  BOOL isSearchable
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKCollectionViewDataSource init]
  -[GKCollectionViewDataSource dealloc]
  -[GKCollectionViewDataSource delegate]
  -[GKCollectionViewDataSource setDelegate:]
  -[GKCollectionViewDataSource listeners]
  -[GKCollectionViewDataSource numberOfSectionsInCollectionView:]
  -[GKCollectionViewDataSource collectionView:numberOfItemsInSection:]
  -[GKCollectionViewDataSource collectionView:cellForItemAtIndexPath:]
  -[GKCollectionViewDataSource collectionView:viewForSupplementaryElementOfKind:atIndexPath:]
  -[GKCollectionViewDataSource setListeners:]
  -[GKCollectionViewDataSource itemAtIndexPath:]
  -[GKCollectionViewDataSource totalItemCount]
  -[GKCollectionViewDataSource isSearchable]
  -[GKCollectionViewDataSource localDescription]
  -[GKCollectionViewDataSource setDataSourceMetrics:]
  -[GKCollectionViewDataSource _gkDescriptionWithChildren:]
  -[GKCollectionViewDataSource dataSourceMetrics]
  -[GKCollectionViewDataSource notifyDidReloadData]
  -[GKCollectionViewDataSource dataSourceForSection:]
  -[GKCollectionViewDataSource notifyPlaceholderUpdated:]
  -[GKCollectionViewDataSource notifySectionsRemoved:]
  -[GKCollectionViewDataSource notifySectionsInserted:]
  -[GKCollectionViewDataSource notifySectionsRefreshed:]
  -[GKCollectionViewDataSource notifyBatchUpdate:complete:]
  -[GKCollectionViewDataSource refreshContentsForDataType:userInfo:updateNotifier:]
  -[GKCollectionViewDataSource indexPathsForItem:]
  -[GKCollectionViewDataSource item:matchesSearchTerms:inSection:]
  -[GKCollectionViewDataSource removeItemAtIndexPath:completionHandler:]
  -[GKCollectionViewDataSource configureCollectionView:]
  -[GKCollectionViewDataSource registerSupplementaryViewOfKind:withClass:target:configurator:]
  -[GKCollectionViewDataSource targetForAction:]
  -[GKCollectionViewDataSource collectionView:evaluateFactoryForSupplementaryElementOfKind:atIndexPath:isRecursive:]
  -[GKCollectionViewDataSource collectionView:defaultViewForSupplementaryElementOfKind:atIndexPath:]
  -[GKCollectionViewDataSource createMetricsTreeWithGridLayout:]
  -[GKCollectionViewDataSource collectionViewWillBecomeActive:]
  -[GKCollectionViewDataSource collectionViewDidBecomeInactive:]
  -[GKCollectionViewDataSource containsDataSource:]
  -[GKCollectionViewDataSource sectionForDataSource:]
  -[GKCollectionViewDataSource notifyItemsInsertedAtIndexPaths:]
  -[GKCollectionViewDataSource notifyItemsRemovedAtIndexPaths:]
  -[GKCollectionViewDataSource notifyItemsRefreshedAtIndexPaths:]
  -[GKCollectionViewDataSource notifyItemMovedFromIndexPath:toIndexPaths:]
  -[GKCollectionViewDataSource notifySectionMovedFrom:to:]
  -[GKCollectionViewDataSource notifyBatchUpdate:]
  -[GKCollectionViewDataSource searchKeyForSection:]
  -[GKCollectionViewDataSource setDefaultSectionMetricsInternal:]
  -[GKCollectionViewDataSource metricsForSection:]
  -[GKCollectionViewDataSource defaultSectionMetricsInternal]
  -[GKCollectionViewDataSource setMetrics:forSection:]
  -[GKCollectionViewDataSource loadDataWithCompletionHandlerAndError:]
  -[GKCollectionViewDataSource enumerateItemsAndIndexPathsUsingBlock:]
  -[GKCollectionViewDataSource setDefaultSectionMetrics:]
  -[GKCollectionViewDataSource isRootDataSource]
  -[GKCollectionViewDataSource setSectionsToSearchKeys:]
  -[GKCollectionViewDataSource setDataSourceMetricsInternal:]
  -[GKCollectionViewDataSource defaultSectionMetrics]
  -[GKCollectionViewDataSource metricsForSectionInternal:]
  -[GKCollectionViewDataSource supplementaryViewFactoryForKind:]
  -[GKCollectionViewDataSource setSearchKey:forSection:]
  -[GKCollectionViewDataSource updateSupplementaryMetricsForKey:usingBlock:]
  -[GKCollectionViewDataSource notifySectionsMovedWithItems]
  -[GKCollectionViewDataSource kindsToFactories]
  -[GKCollectionViewDataSource setKindsToFactories:]
  -[GKCollectionViewDataSource sectionsToMetrics]
  -[GKCollectionViewDataSource setSectionsToMetrics:]
  -[GKCollectionViewDataSource sectionsToSearchKeys]
  -[GKCollectionViewDataSource dataSourceMetricsInternal]
  -[GKCollectionViewDataSource defaultSearchKey]
  -[GKCollectionViewDataSource setDefaultSearchKey:]
  -[GKCollectionViewDataSource registerSupplementaryViewOfKind:withFactory:]


GKBubbleMeshAnimator : NSObject
 @property  NSMutableSet *animatingViews
 @property  CADisplayLink *displayLink
 @property  double lastUpdateTime

  // class methods
  +[GKBubbleMeshAnimator sharedAnimator]

  // instance methods
  -[GKBubbleMeshAnimator init]
  -[GKBubbleMeshAnimator dealloc]
  -[GKBubbleMeshAnimator displayLink]
  -[GKBubbleMeshAnimator setDisplayLink:]
  -[GKBubbleMeshAnimator lastUpdateTime]
  -[GKBubbleMeshAnimator applicationWillResignActive:]
  -[GKBubbleMeshAnimator applicationDidBecomeActive:]
  -[GKBubbleMeshAnimator update:]
  -[GKBubbleMeshAnimator setLastUpdateTime:]
  -[GKBubbleMeshAnimator addAnimatingBubbleView:]
  -[GKBubbleMeshAnimator removeAnimatingBubbleView:]
  -[GKBubbleMeshAnimator animatingViews]
  -[GKBubbleMeshAnimator setAnimatingViews:]


GKGradientLabel : UILabel /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
  // class methods
  +[GKGradientLabel layerClass]


GKAvatarContainerView : UIView /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics <GKPlayerAvatarViewDelegate>
 @property  UILabel *nicknameLabel
 @property  UILabel *emailLabel
 @property  UIView *imageContainer
 @property  GKGradientLabel *editLabel
 @property  NSLayoutConstraint *imageContainerTopConstraint
 @property  GKDashboardPlayerPhotoView *playerAvatarView
 @property  UITapGestureRecognizer *tapGesture
 @property  <GKAvatarContainerViewDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKAvatarContainerView delegate]
  -[GKAvatarContainerView setDelegate:]
  -[GKAvatarContainerView .cxx_destruct]
  -[GKAvatarContainerView setUserInteractionEnabled:]
  -[GKAvatarContainerView layoutSubviews]
  -[GKAvatarContainerView didMoveToSuperview]
  -[GKAvatarContainerView awakeFromNib]
  -[GKAvatarContainerView imageContainer]
  -[GKAvatarContainerView setImageContainer:]
  -[GKAvatarContainerView tapGesture]
  -[GKAvatarContainerView setTapGesture:]
  -[GKAvatarContainerView nicknameLabel]
  -[GKAvatarContainerView setNicknameLabel:]
  -[GKAvatarContainerView didSetPlayerAvatarImage:]
  -[GKAvatarContainerView didSelectPlayerAvatarView:]
  -[GKAvatarContainerView prepareForDefaultNicknameViewController]
  -[GKAvatarContainerView refreshViewForLocalPlayer]
  -[GKAvatarContainerView playerAvatarView]
  -[GKAvatarContainerView setPlayerAvatarView:]
  -[GKAvatarContainerView updateAvatarEditingAvailability]
  -[GKAvatarContainerView editLabel]
  -[GKAvatarContainerView emailLabel]
  -[GKAvatarContainerView refreshHeaderViewProfileImage]
  -[GKAvatarContainerView imageContainerTopConstraint]
  -[GKAvatarContainerView setEmailLabel:]
  -[GKAvatarContainerView setEditLabel:]
  -[GKAvatarContainerView setImageContainerTopConstraint:]


GKGame(Sharing)
	// class methods
	+[GKGame(Sharing) removeHistoryForGameWithBundleIdentifier:completionHandler:]
	+[GKGame(Sharing) serverImageSizeForIconStyle:]
	+[GKGame(Sharing) preloadIconsForGames:style:handler:]
	+[GKGame(Sharing) launchAppStoreWithGameCenterGames]
	+[GKGame(Sharing) gameCenterGamePurchasedWithBundleIdentifier:]

	// instance methods
	-[GKGame(Sharing) activityViewControllerPlaceholderItems:]
	-[GKGame(Sharing) activityViewController:thumbnailForActivityType:]
	-[GKGame(Sharing) activityViewController:attachmentULRTypeForActivityType:]
	-[GKGame(Sharing) activityViewControllerSubject:]
	-[GKGame(Sharing) activityViewController:itemsForActivityType:]
	-[GKGame(Sharing) activityViewControllerOperation:]
	-[GKGame(Sharing) productViewControllerDidFinish:]
	-[GKGame(Sharing) loadIconForStyle:withCompletionHandler:]
	-[GKGame(Sharing) _gkSetSharingInfo:]
	-[GKGame(Sharing) fetchSharingInfo]
	-[GKGame(Sharing) _gkSharingInfo]
	-[GKGame(Sharing) imageSourceForiOSIconStyle:]
	-[GKGame(Sharing) macBrushForIconStyle:]
	-[GKGame(Sharing) _imageURLForIconStyle:]
	-[GKGame(Sharing) imageSourceForIconStyle:]
	-[GKGame(Sharing) _imageSourceForIconSize:]
	-[GKGame(Sharing) iconForStyle:]
	-[GKGame(Sharing) cachedIconForStyle:]
	-[GKGame(Sharing) URLStringForImageWithShineIfNeeded]
	-[GKGame(Sharing) loadIconForSize:scale:withCompletionHandler:]
	-[GKGame(Sharing) logoImageWithMaximumSize:]
	-[GKGame(Sharing) presentStoreSheetFromViewController:context:completionHandler:]
	-[GKGame(Sharing) launchAppOrPresentStoreSheetFromViewController:]

UIImage(GKAdditions)
	// class methods
	+[UIImage(GKAdditions) _gkloadRemoteImageForURL:queue:withCompletionHandler:]
	+[UIImage(GKAdditions) _gkImageWithRawData:size:scale:rowBytes:bitmapInfo:]
	+[UIImage(GKAdditions) _gkImageWithCGImage:scale:orientation:]
	+[UIImage(GKAdditions) _gkHostImageWithBundleIdentifier:imageName:]

	// instance methods
	-[UIImage(GKAdditions) _gkImageByScalingToSize:scale:padColor:]
	-[UIImage(GKAdditions) _gkImageByScalingAndCroppingToSize:scale:]
	-[UIImage(GKAdditions) _gkImageByScalingToSize:scale:]
	-[UIImage(GKAdditions) _gkImageByScalingToSize:]
	-[UIImage(GKAdditions) _gkImageByAddingAlpha]
	-[UIImage(GKAdditions) _gkImageByTintingWithColor:]
	-[UIImage(GKAdditions) _gkReadAtSize:ARGBHostEndianBytes:]
	-[UIImage(GKAdditions) _gkScale]
	-[UIImage(GKAdditions) _gkCGImage]
	-[UIImage(GKAdditions) _gkImageOrientation]
	-[UIImage(GKAdditions) _gkQuestionMarkImage]
	-[UIImage(GKAdditions) _gkMaskImageWithProgress:isDetail:]
	-[UIImage(GKAdditions) _gkImageWithProgress:achievement:isDetail:]

UIView(GKAdditionsAdditional)
	// class methods
	+[UIView(GKAdditionsAdditional) _gkViewFromNib]
	+[UIView(GKAdditionsAdditional) _gkStandardBackdropView]

	// instance methods
	-[UIView(GKAdditionsAdditional) _gkRecursivelyApplyBlock:depth:]
	-[UIView(GKAdditionsAdditional) _gkRecursiveDescriptionForKey:depth:]
	-[UIView(GKAdditionsAdditional) _gkRecursiveDescriptionForValue:forKey:depth:]
	-[UIView(GKAdditionsAdditional) setIntegralCenter:]
	-[UIView(GKAdditionsAdditional) integralCenter]
	-[UIView(GKAdditionsAdditional) _gkApplyPerspectiveTransform]
	-[UIView(GKAdditionsAdditional) _gkClearPerspectiveTransform]
	-[UIView(GKAdditionsAdditional) _gkPerspectiveTransformEZ]
	-[UIView(GKAdditionsAdditional) _gkSuperviewHasPerspectiveTransform]
	-[UIView(GKAdditionsAdditional) _gkRecursiveDescriptionForKey:]
	-[UIView(GKAdditionsAdditional) _gkRecursiveDescriptionForValue:forKey:]
	-[UIView(GKAdditionsAdditional) _gkAncestryDescription]
	-[UIView(GKAdditionsAdditional) _gkAncestryAffectingVisualLayout]
	-[UIView(GKAdditionsAdditional) _gkSetNeedsRender]
	-[UIView(GKAdditionsAdditional) _gkEnumerateSubviewsUsingBlock:]
	-[UIView(GKAdditionsAdditional) _gkPopoverPresentationRect]
	-[UIView(GKAdditionsAdditional) _gkPopoverPresentationInsets]
	-[UIView(GKAdditionsAdditional) _gkAddStandardFadeTransition]
	-[UIView(GKAdditionsAdditional) _gkPopoverPresentationArea]
	-[UIView(GKAdditionsAdditional) _gkPerformWithoutAnimationWhenRotating:]
	-[UIView(GKAdditionsAdditional) _gkRemovePositionConstraintsForBubble:]
	-[UIView(GKAdditionsAdditional) _gkAddPositionConstraints:forBubble:]
	-[UIView(GKAdditionsAdditional) _gkUseAsModalSheetBackgroundWithGroupName:]
	-[UIView(GKAdditionsAdditional) _gkApplyFakeStatusBarView]
	-[UIView(GKAdditionsAdditional) _gkApplyBackdropViewIfNeededWithGroupName:]
	-[UIView(GKAdditionsAdditional) _gkSetDrawsAsBackdropOverlay:]
	-[UIView(GKAdditionsAdditional) _gkSetDrawsAsKnockout:inBackdrop:]
	-[UIView(GKAdditionsAdditional) _gkBackdropView]
	-[UIView(GKAdditionsAdditional) _gkApplyBackdropViewWithGroupName:]

CALayer(GKAdditions)
	// instance methods
	-[CALayer(GKAdditions) _gkDescriptionWithChildren:]
	-[CALayer(GKAdditions) _gkRecursiveDescription]
	-[CALayer(GKAdditions) _gkParentSublayerTransform]

UICollectionReusableView(GKReusableView)
	// class methods
	+[UICollectionReusableView(GKReusableView) _gkAdjustConstraintMargins:leading:trailing:]
	+[UICollectionReusableView(GKReusableView) _gkStandardConstraintMetricsForIdiom:]
	+[UICollectionReusableView(GKReusableView) _gkStandardConstraintMetricsForIdiom:withOverrides:]
	+[UICollectionReusableView(GKReusableView) registerSupplementaryViewClassesForKind:withCollectionView:]
	+[UICollectionReusableView(GKReusableView) _gkSetupTwoLineLayoutWithSuperview:icon:upperLabel:lowerLabel:leadingBetween:fontTextStyle:metricOverrides:]
	+[UICollectionReusableView(GKReusableView) _gkSetupThreeLineLayoutWithSuperview:icon:upperLine:middleLine:lowerLine:metricOverrides:]
	+[UICollectionReusableView(GKReusableView) _gkSetupSelectableTwoLineLayoutWithCell:icon:selectionView:upperLine:lowerLine:metricOverrides:]
	+[UICollectionReusableView(GKReusableView) _gkSetupSelectableThreeLineLayoutWithCell:icon:selectionView:upperLine:middleLine:lowerLine:metricOverrides:]

	// instance methods
	-[UICollectionReusableView(GKReusableView) _gkSetLeadingGuideConstraint:trailingGuideConstraint:]
	-[UICollectionReusableView(GKReusableView) _gkNewStandardTitleLabel]
	-[UICollectionReusableView(GKReusableView) _gkNewStandardInfoLabel]
	-[UICollectionReusableView(GKReusableView) _gkNewStandardImageView]

GKLocalPlayer(GKFaceTimeSupport)
	// class methods
	+[GKLocalPlayer(GKFaceTimeSupport) accountName]
	+[GKLocalPlayer(GKFaceTimeSupport) hasAuthenticatedAccount]
	+[GKLocalPlayer(GKFaceTimeSupport) sharedLocalPlayerAuthenticator]
	+[GKLocalPlayer(GKFaceTimeSupport) authenticationPersonality]
	+[GKLocalPlayer(GKFaceTimeSupport) setAuthenticationPersonality:]

	// instance methods
	-[GKLocalPlayer(GKFaceTimeSupport) setRootViewController:]
	-[GKLocalPlayer(GKFaceTimeSupport) rootViewController]
	-[GKLocalPlayer(GKFaceTimeSupport) alertView:didDismissWithButtonIndex:]
	-[GKLocalPlayer(GKFaceTimeSupport) applicationWillEnterForeground:]
	-[GKLocalPlayer(GKFaceTimeSupport) applicationDidEnterBackground:]
	-[GKLocalPlayer(GKFaceTimeSupport) isAuthenticating]
	-[GKLocalPlayer(GKFaceTimeSupport) activeViewController]
	-[GKLocalPlayer(GKFaceTimeSupport) cancelAuthentication]
	-[GKLocalPlayer(GKFaceTimeSupport) alertUserInStoreDemoModeEnabled]
	-[GKLocalPlayer(GKFaceTimeSupport) deletePhotoWithCompletionHandler:]
	-[GKLocalPlayer(GKFaceTimeSupport) setPhoto:avatarType:withCompletionHandler:]
	-[GKLocalPlayer(GKFaceTimeSupport) deletePhoto]
	-[GKLocalPlayer(GKFaceTimeSupport) setPhotoFromCNContactImage:pendingContact:withCompletionHandler:]
	-[GKLocalPlayer(GKFaceTimeSupport) deleteMonogramsWithHandler:]
	-[GKLocalPlayer(GKFaceTimeSupport) deleteAvatarAlertControllerWithHandler:]
	-[GKLocalPlayer(GKFaceTimeSupport) setActiveViewController:]
	-[GKLocalPlayer(GKFaceTimeSupport) signInViewController]
	-[GKLocalPlayer(GKFaceTimeSupport) setSignInViewController:]
	-[GKLocalPlayer(GKFaceTimeSupport) showViewController:usingPresentingViewController:wrapInNavController:]
	-[GKLocalPlayer(GKFaceTimeSupport) removeActiveViewControllerAnimated:completionHandler:]
	-[GKLocalPlayer(GKFaceTimeSupport) authenticationDidCompleteWithError:]
	-[GKLocalPlayer(GKFaceTimeSupport) authenticationShowGreenBuddyUIForLocalPlayer:]
	-[GKLocalPlayer(GKFaceTimeSupport) authenticationShowSignInUIForLocalPlayer:]
	-[GKLocalPlayer(GKFaceTimeSupport) shouldShowOnBoardingUI]
	-[GKLocalPlayer(GKFaceTimeSupport) shouldShowPrivacyNotice]
	-[GKLocalPlayer(GKFaceTimeSupport) shouldShowPersonalization]
	-[GKLocalPlayer(GKFaceTimeSupport) showOnboardingUIFromViewController:]
	-[GKLocalPlayer(GKFaceTimeSupport) _showWelcomeBanner]
	-[GKLocalPlayer(GKFaceTimeSupport) showAlertForTag:]
	-[GKLocalPlayer(GKFaceTimeSupport) startAuthenticationForExistingPrimaryPlayer]
	-[GKLocalPlayer(GKFaceTimeSupport) _showViewControllerForLegacyApps:]
	-[GKLocalPlayer(GKFaceTimeSupport) validateAccountWithCompletionHandler:]
	-[GKLocalPlayer(GKFaceTimeSupport) showAuthenticateViewControllerForGameCenter]
	-[GKLocalPlayer(GKFaceTimeSupport) startLegacyAuthenticationWithCompletionHandler:]
	-[GKLocalPlayer(GKFaceTimeSupport) _showActionRestrictedAlertWithTitle:message:]
	-[GKLocalPlayer(GKFaceTimeSupport) showLoginFailedAlert]
	-[GKLocalPlayer(GKFaceTimeSupport) showCancelledAlertForPlayer:]
	-[GKLocalPlayer(GKFaceTimeSupport) showCreateAccountRestrictedAlert]
	-[GKLocalPlayer(GKFaceTimeSupport) showEditAccountRestrictedAlert]
	-[GKLocalPlayer(GKFaceTimeSupport) showSignInAccountRestrictedAlert]

UICollectionView(GKExtensions)
	// instance methods
	-[UICollectionView(GKExtensions) _gkRegisterClass:forSupplementaryViewOfKind:]
	-[UICollectionView(GKExtensions) _gkRegisterCellClass:]
	-[UICollectionView(GKExtensions) _gkDequeueSupplementaryViewForClass:ofKind:forIndexPath:]
	-[UICollectionView(GKExtensions) _gkDequeueCellForClass:forIndexPath:]
	-[UICollectionView(GKExtensions) _gkFocusingLayout]
	-[UICollectionView(GKExtensions) _gkVisibleCellForIndexPath:]
	-[UICollectionView(GKExtensions) _gkRegisterNib:forCellClass:]
	-[UICollectionView(GKExtensions) _gkPerformWithoutViewReuse:]
	-[UICollectionView(GKExtensions) _gkReuseIdentifierForClass:]
	-[UICollectionView(GKExtensions) _gkHorizontalLayout]

NSObject(GKSetupAssistantSupport)
	// class methods
	+[NSObject(GKSetupAssistantSupport) _gkNib]
	+[NSObject(GKSetupAssistantSupport) _gkPlatformNibName]
	+[NSObject(GKSetupAssistantSupport) _gkNibWithBaseName:]
	+[NSObject(GKSetupAssistantSupport) _gkPlatformNibNameForBaseName:]
	+[NSObject(GKSetupAssistantSupport) _gkNibWithPlatformName:]

	// instance methods
	-[NSObject(GKSetupAssistantSupport) _gkAuthenticatedPlayerID]
	-[NSObject(GKSetupAssistantSupport) _gkSetupAccountWithParamaters:completionHandler:]

GKScore(Sharing)
	// class methods
	+[GKScore(Sharing) reportScores:withEligibleChallenges:withCompletionHandler:]

	// instance methods
	-[GKScore(Sharing) activityViewControllerPlaceholderItems:]
	-[GKScore(Sharing) activityViewController:thumbnailForActivityType:]
	-[GKScore(Sharing) activityViewController:attachmentULRTypeForActivityType:]
	-[GKScore(Sharing) activityViewControllerSubject:]
	-[GKScore(Sharing) activityViewController:itemsForActivityType:]
	-[GKScore(Sharing) activityViewControllerOperation:]
	-[GKScore(Sharing) canBeShared]
	-[GKScore(Sharing) _gkSetSharingInfo:]
	-[GKScore(Sharing) fetchSharingInfo]
	-[GKScore(Sharing) _gkSharingInfo]
	-[GKScore(Sharing) challengeComposeControllerWithMessage:players:completionHandler:]
	-[GKScore(Sharing) challengeComposeControllerWithPlayers:message:completionHandler:]
	-[GKScore(Sharing) issueChallengeToPlayers:message:]

NSArray(GKRecipientListStrings)
	// instance methods
	-[NSArray(GKRecipientListStrings) _gkCommaSeparatedRecipientListWithWidth:forTextStyle:usingSelector:]
	-[NSArray(GKRecipientListStrings) _gkCommaSeparatedRecipientListWithWidth:forTextStyle:]
	-[NSArray(GKRecipientListStrings) _gkBubbleOfType:]

UITextField(GKAdditions)
	// instance methods
	-[UITextField(GKAdditions) isReallyFirstResponder]

UIViewController(GKAdditions)
	// class methods
	+[UIViewController(GKAdditions) _gkKeyWindowRootViewController]

	// instance methods
	-[UIViewController(GKAdditions) _gkExtensionViewController]
	-[UIViewController(GKAdditions) _gkPushViewController:animated:]
	-[UIViewController(GKAdditions) _gkModifyTopConstraintToLayoutGuideForSubview:]
	-[UIViewController(GKAdditions) _gkPresentAlertWithTitle:message:buttonTitle:]
	-[UIViewController(GKAdditions) _gkPresentAlertForError:title:defaultMessage:]
	-[UIViewController(GKAdditions) _gkAddMenuButtonTapGestureRecognizerWithTarget:action:]
	-[UIViewController(GKAdditions) _gkRemoveViewController:animated:]
	-[UIViewController(GKAdditions) _gkShowViewController:]
	-[UIViewController(GKAdditions) _gkPresentActivityViewControllerForActivityItems:fromView:withCompletionHandler:]
	-[UIViewController(GKAdditions) _gkOriginatingViewController]
	-[UIViewController(GKAdditions) _gkPushViewController:replaceCurrent:animated:]
	-[UIViewController(GKAdditions) _gkSaveStatusBarStyleAnimated:setToStyle:]
	-[UIViewController(GKAdditions) _gkRestoreStatusBarStyle:]
	-[UIViewController(GKAdditions) _gkForceNextContentUpdate]
	-[UIViewController(GKAdditions) _gkResetContents]
	-[UIViewController(GKAdditions) _gkSetContentsNeedUpdateWithHandler:]
	-[UIViewController(GKAdditions) _gkUpdateContentsWithCompletionHandlerAndError:]
	-[UIViewController(GKAdditions) _gkHandleURLPathComponents:query:]
	-[UIViewController(GKAdditions) _gkDismissActivityViewControllerAnimated:]
	-[UIViewController(GKAdditions) _gkPresentActivityViewController:fromView:]
	-[UIViewController(GKAdditions) _gkShouldRefreshContentsForDataType:userInfo:]
	-[UIViewController(GKAdditions) _gkRefreshContentsForDataType:userInfo:]
	-[UIViewController(GKAdditions) _gkUsesBubbleFlowModalPresentation]
	-[UIViewController(GKAdditions) _gkCanBeRemovedFromParentWhenCovered]
	-[UIViewController(GKAdditions) _gkDismissViewController:animated:]
	-[UIViewController(GKAdditions) _gkPresentAlertWithTitle:message:buttonTitle:dismissHandler:]
	-[UIViewController(GKAdditions) _gkPresentConfirmationAlertWithTitle:message:buttonTitle:block:]
	-[UIViewController(GKAdditions) _gkAlertControllerForBarButtonItem:]
	-[UIViewController(GKAdditions) _gkInGameUIUnavailableAlertWithRestrictionMode:dismissHandler:]
	-[UIViewController(GKAdditions) gkFocusBubbleType]
	-[UIViewController(GKAdditions) setGkFocusBubbleType:]
	-[UIViewController(GKAdditions) _gkSourcePresentingViewController]
	-[UIViewController(GKAdditions) _gkRestorePopoverWithViewControllers:completion:]
	-[UIViewController(GKAdditions) _gkPushPresentedViewControllerForCompactSizeClass:]
	-[UIViewController(GKAdditions) _gkViewControllersForRestoringPopover]
	-[UIViewController(GKAdditions) _gkPresentSendDialogForChallenge:selectPlayers:defaultMessage:complete:]
	-[UIViewController(GKAdditions) _gkPresentChallengeVC:]
	-[UIViewController(GKAdditions) _gkPresentSendDialogForChallenge:selectPlayers:defaultMessage:]
	-[UIViewController(GKAdditions) _gkBubbleFlowAdoptionInfo]
	-[UIViewController(GKAdditions) _gkMakeBubbleFlowAdoptionInfo]
	-[UIViewController(GKAdditions) _gkBorrowBubbleViewFromOverlayWithBubbleType:expectedFrame:andMoveTo:]
	-[UIViewController(GKAdditions) _gkAddPositionConstraintsForOverlayBubble:center:movingFromView:toView:]
	-[UIViewController(GKAdditions) _gkReturnBubbleViewToOverlayWithBubbleType:expectedFrame:]
	-[UIViewController(GKAdditions) _gkBorrowBubbleViewFromOverlayWithBubbleType:andMoveTo:]
	-[UIViewController(GKAdditions) _gkReturnBubbleViewToOverlayWithBubbleType:]
	-[UIViewController(GKAdditions) _gkIsTransitioningFromTheLocalPlayerViewController]
	-[UIViewController(GKAdditions) _gkIsTransitioningToTheLocalPlayerViewController]
	-[UIViewController(GKAdditions) _gkDesiredUserInterfaceIdiom]
	-[UIViewController(GKAdditions) _gkShouldUsePadUI]
	-[UIViewController(GKAdditions) _gkPresentViewController:animated:]
	-[UIViewController(GKAdditions) _gkRepresentedObject]
	-[UIViewController(GKAdditions) _gkUsesFormSheetForBubbleFlowModalPresentationOnPad]
	-[UIViewController(GKAdditions) _gkSetSourcePresentingViewController:]
	-[UIViewController(GKAdditions) _gkWillTransitionModalPresentationForTraitCollection:]
	-[UIViewController(GKAdditions) _gkDidTransitionModalPresentationForTraitCollection:]
	-[UIViewController(GKAdditions) _gkShouldPushViewControllerInsteadOfUsingPopoverOnCompactWidthPad]
	-[UIViewController(GKAdditions) _gkWantsCustomRightBarButtonItemInViewService]
	-[UIViewController(GKAdditions) _gkWantsCustomRightBarButtonItemInViewService]
	-[UIViewController(GKAdditions) _gkSaveStatusBarStyle:]
	-[UIViewController(GKAdditions) _gkSetOriginatingViewController:]
	-[UIViewController(GKAdditions) _gkOriginatingViewControllerAutoDetermined]
	-[UIViewController(GKAdditions) _gkPresentViewController:asPopoverFromView:animated:]
	-[UIViewController(GKAdditions) _gkPopViewControllerAnimated:]

UITabBarController(GKAdditions)
	// instance methods
	-[UITabBarController(GKAdditions) _gkForceNextContentUpdate]
	-[UITabBarController(GKAdditions) _gkResetContents]
	-[UITabBarController(GKAdditions) _gkSetContentsNeedUpdateWithHandler:]
	-[UITabBarController(GKAdditions) _gkUpdateContentsWithCompletionHandlerAndError:]
	-[UITabBarController(GKAdditions) _gkHandleURLPathComponents:query:]
	-[UITabBarController(GKAdditions) _gkShouldRefreshContentsForDataType:userInfo:]
	-[UITabBarController(GKAdditions) _gkRefreshContentsForDataType:userInfo:]

UINavigationController(GKAdditions)
	// instance methods
	-[UINavigationController(GKAdditions) _gkForceNextContentUpdate]
	-[UINavigationController(GKAdditions) _gkResetContents]
	-[UINavigationController(GKAdditions) _gkSetContentsNeedUpdateWithHandler:]
	-[UINavigationController(GKAdditions) _gkUpdateContentsWithCompletionHandlerAndError:]
	-[UINavigationController(GKAdditions) _gkHandleURLPathComponents:query:]
	-[UINavigationController(GKAdditions) _gkShouldRefreshContentsForDataType:userInfo:]
	-[UINavigationController(GKAdditions) _gkRefreshContentsForDataType:userInfo:]
	-[UINavigationController(GKAdditions) _gkSetViewControllers:transition:]
	-[UINavigationController(GKAdditions) _gkReplaceTopViewControllerWithViewController:transition:]

UISplitViewController(GKAdditions)
	// instance methods
	-[UISplitViewController(GKAdditions) _gkForceNextContentUpdate]
	-[UISplitViewController(GKAdditions) _gkResetContents]
	-[UISplitViewController(GKAdditions) _gkSetContentsNeedUpdateWithHandler:]
	-[UISplitViewController(GKAdditions) _gkUpdateContentsWithCompletionHandlerAndError:]
	-[UISplitViewController(GKAdditions) _gkHandleURLPathComponents:query:]

UIApplication(GKAdditions)
	// instance methods
	-[UIApplication(GKAdditions) _gkTargetForAction:viaResponder:]
	-[UIApplication(GKAdditions) _gkSendAction:viaResponder:withObject:]

UIScreen(GKAdditions_UIKitShim_Parity)
	// instance methods
	-[UIScreen(GKAdditions_UIKitShim_Parity) _gkScale]
	-[UIScreen(GKAdditions_UIKitShim_Parity) _gkBounds]

UIAlertController(GKAlerts)
	// instance methods
	-[UIAlertController(GKAlerts) _gkAddCancelButtonWithNoAction]

GKAchievement(Sharing)
	// class methods
	+[GKAchievement(Sharing) reportAchievements:withEligibleChallenges:withCompletionHandler:]

	// instance methods
	-[GKAchievement(Sharing) imageURL]
	-[GKAchievement(Sharing) activityViewControllerPlaceholderItems:]
	-[GKAchievement(Sharing) activityViewController:thumbnailForActivityType:]
	-[GKAchievement(Sharing) activityViewController:attachmentULRTypeForActivityType:]
	-[GKAchievement(Sharing) activityViewControllerSubject:]
	-[GKAchievement(Sharing) activityViewController:itemsForActivityType:]
	-[GKAchievement(Sharing) activityViewControllerOperation:]
	-[GKAchievement(Sharing) canBeShared]
	-[GKAchievement(Sharing) loadImageWithCompletionHandler:]
	-[GKAchievement(Sharing) _gkSetSharingInfo:]
	-[GKAchievement(Sharing) fetchSharingInfo]
	-[GKAchievement(Sharing) _gkSharingInfo]
	-[GKAchievement(Sharing) showBanner]
	-[GKAchievement(Sharing) challengeComposeControllerWithMessage:players:completionHandler:]
	-[GKAchievement(Sharing) challengeComposeControllerWithPlayers:message:completionHandler:]
	-[GKAchievement(Sharing) issueChallengeToPlayers:message:]
	-[GKAchievement(Sharing) selectChallengeablePlayers:withCompletionHandler:]
	-[GKAchievement(Sharing) selectChallengeablePlayerIDs:withCompletionHandler:]

CNContact(NameSelector)
	// instance methods
	-[CNContact(NameSelector) collationString]

GKLeaderboard(UI)
	// class methods
	+[GKLeaderboard(UI) localizedStringForTimeScope:]

	// instance methods
	-[GKLeaderboard(UI) imageURL]
	-[GKLeaderboard(UI) loadImageWithCompletionHandler:]
	-[GKLeaderboard(UI) miniImageURL]

UINavigationBar(GKUITheme)
	// instance methods
	-[UINavigationBar(GKUITheme) _gkApplyTheme:navbarStyle:]
	-[UINavigationBar(GKUITheme) _gkApplyTheme:]

SKStoreProductViewController(GKGame)
	// instance methods
	-[SKStoreProductViewController(GKGame) _gkGame]
	-[SKStoreProductViewController(GKGame) set_gkGame:]
	-[SKStoreProductViewController(GKGame) _gkCompletionHandler]
	-[SKStoreProductViewController(GKGame) set_gkCompletionHandler:]

NSString(GKTextStyle)
	// instance methods
	-[NSString(GKTextStyle) _gkAttributedStringByApplyingStyle:]
	-[NSString(GKTextStyle) _gkAttributedStringByApplyingStylesForTags:untaggedStyle:]

UIColor(GKColorAdditions)
	// class methods
	+[UIColor(GKColorAdditions) _gkSelectedCellBackgroundColor]
	+[UIColor(GKColorAdditions) _gkSpeechViewTintColor]

	// instance methods
	-[UIColor(GKColorAdditions) _gkLuminance]

GKAchievementDescription(UI)
	// class methods
	+[GKAchievementDescription(UI) incompleteAchievementImage]
	+[GKAchievementDescription(UI) placeholderCompletedAchievementImage]

	// instance methods
	-[GKAchievementDescription(UI) imageURL]
	-[GKAchievementDescription(UI) loadImageWithCompletionHandler:]
	-[GKAchievementDescription(UI) showBanner]

GKChallengeEventHandler(UI)
	// class methods
	+[GKChallengeEventHandler(UI) uiDelegateClass]

NSIndexPath(GKGridLayoutPrivate)
	// instance methods
	-[NSIndexPath(GKGridLayoutPrivate) _gkIsGlobal]

NSLayoutConstraint(GKAdditions)
	// class methods
	+[NSLayoutConstraint(GKAdditions) _gkConstraintForView:withConstantWidth:]
	+[NSLayoutConstraint(GKAdditions) _gkConstraintForView:withConstantHeight:]
	+[NSLayoutConstraint(GKAdditions) _gkConstraintForView:centeredYInView:]
	+[NSLayoutConstraint(GKAdditions) _gkConstraintsForView:withinView:insets:]
	+[NSLayoutConstraint(GKAdditions) _gkConstraintForView:centeredXInView:]
	+[NSLayoutConstraint(GKAdditions) _gkInstallEdgeConstraintsForView:containedWithinParentView:]
	+[NSLayoutConstraint(GKAdditions) _gkConstraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:leading:fontTextStyle:]
	+[NSLayoutConstraint(GKAdditions) _gkConstraintForView:withWidthDerivedFromView:insetBy:]
	+[NSLayoutConstraint(GKAdditions) _gkConstraintsForView:centeredXInView:enforceMargin:]
	+[NSLayoutConstraint(GKAdditions) _gkInstallEdgeConstraintsForView:containedWithinParentView:margin:]
	+[NSLayoutConstraint(GKAdditions) _gkConstraintsForViews:contiguouslyLaidOutVertically:overlap:withinView:insets:applyOrthogonalConstraints:]
	+[NSLayoutConstraint(GKAdditions) _gkConstraintForView:equalsAttribute:ofView:]
	+[NSLayoutConstraint(GKAdditions) _gkConstraintForView:baselineAlignedUnderView:offsetBy:]
	+[NSLayoutConstraint(GKAdditions) _gkConstraintForView:withHeightDerivedFromView:insetBy:]
	+[NSLayoutConstraint(GKAdditions) _gkConstraintsForViews:alignedByAttribute:]
	+[NSLayoutConstraint(GKAdditions) _gkConstraintsForViews:contiguouslyLaidOutVertically:overlap:withinView:insets:]
	+[NSLayoutConstraint(GKAdditions) _gkBaselineConstraintsForViewsFontsLeadings:superview:options:]

GKPlayer(UIPrivate)
	// class methods
	+[GKPlayer(UIPrivate) sizeForPhotoSize:]
	+[GKPlayer(UIPrivate) monogramQueue]
	+[GKPlayer(UIPrivate) preloadImagesForPlayers:size:]

	// instance methods
	-[GKPlayer(UIPrivate) contact]
	-[GKPlayer(UIPrivate) setContact:]
	-[GKPlayer(UIPrivate) initWithContact:]
	-[GKPlayer(UIPrivate) avatarImageRenderer]
	-[GKPlayer(UIPrivate) clearInMemoryCachedAvatars]
	-[GKPlayer(UIPrivate) loadPlayerContactForAvatarControllerWithImageSize:handler:]
	-[GKPlayer(UIPrivate) displayNameComponentsWithHandler:]
	-[GKPlayer(UIPrivate) renderingScopeForPhotoSize:]
	-[GKPlayer(UIPrivate) renderMonogramImageWithPhotoSize:monogramString:handler:]
	-[GKPlayer(UIPrivate) stringForMonogramWithHandler:]
	-[GKPlayer(UIPrivate) _playerAvatarWithSize:useUIImage:completionHandler:]
	-[GKPlayer(UIPrivate) photoURLForSize:]
	-[GKPlayer(UIPrivate) monogramImageWithPhotoSize:handler:]
	-[GKPlayer(UIPrivate) playerAvatarImageWithSize:completionHandler:]
	-[GKPlayer(UIPrivate) mutableContactFromDisplayNameComponentsWithHandler:]
	-[GKPlayer(UIPrivate) placeholderImageWithPhotoSize:]
	-[GKPlayer(UIPrivate) playerAvatarDataWithSize:completionHandler:]
	-[GKPlayer(UIPrivate) _loadPhotoForSize:withCompletionHandler:]
	-[GKPlayer(UIPrivate) loadPhotoForSize:withCompletionHandler:]

GKChallenge(UI)
	// instance methods
	-[GKChallenge(UI) iconURLString]
	-[GKChallenge(UI) iconSource]
	-[GKChallenge(UI) loadImageWithCompletionHandler:]
	-[GKChallenge(UI) detailGoalText]
	-[GKChallenge(UI) detailFromText]
	-[GKChallenge(UI) composeGoalText]
	-[GKChallenge(UI) alertGoalText]
	-[GKChallenge(UI) loadBannerImageWithHandler:]
	-[GKChallenge(UI) smallIconURLString]
	-[GKChallenge(UI) loadImageWithSource:URLString:withHandler:]
	-[GKChallenge(UI) listTitleText]
	-[GKChallenge(UI) listGoalText]

GKScoreChallenge(UI)
	// instance methods
	-[GKScoreChallenge(UI) iconURLString]
	-[GKScoreChallenge(UI) iconSource]
	-[GKScoreChallenge(UI) detailGoalText]
	-[GKScoreChallenge(UI) composeGoalText]
	-[GKScoreChallenge(UI) alertGoalText]
	-[GKScoreChallenge(UI) smallIconURLString]
	-[GKScoreChallenge(UI) listTitleText]
	-[GKScoreChallenge(UI) listGoalText]

GKAchievementChallenge(UI)
	// instance methods
	-[GKAchievementChallenge(UI) iconURLString]
	-[GKAchievementChallenge(UI) iconSource]
	-[GKAchievementChallenge(UI) detailGoalText]
	-[GKAchievementChallenge(UI) composeGoalText]
	-[GKAchievementChallenge(UI) alertGoalText]
	-[GKAchievementChallenge(UI) smallIconURLString]
	-[GKAchievementChallenge(UI) listTitleText]
	-[GKAchievementChallenge(UI) listGoalText]

UILabel(GKDashboardUtils)
	// instance methods
	-[UILabel(GKDashboardUtils) _gkUpdateShadowForFocusChange:]

NSExtension(GKDashboardUtils)
	// class methods
	+[NSExtension(GKDashboardUtils) _gkExtensionWithIdentifier:error:]

MFMessageComposeViewController(GameCenter)
	// instance methods
	-[MFMessageComposeViewController(GameCenter) setGameCenterPickedHandles:playerNames:]
	-[MFMessageComposeViewController(GameCenter) setGameCenterModeWithPickerBlock:]

GKLeaderboardSet(UI)
	// instance methods
	-[GKLeaderboardSet(UI) imageURL]
	-[GKLeaderboardSet(UI) loadImageWithCompletionHandler:]
	-[GKLeaderboardSet(UI) miniImageURL]

01 00 1500 /System/Library/PrivateFrameworks/AppleAccount.framework/AppleAccount: AADeviceInfo 
01 00 1500 /System/Library/PrivateFrameworks/AppleAccount.framework/AppleAccount: AASetupAssistantService 
01 00 1500 /System/Library/PrivateFrameworks/AppleAccount.framework/AppleAccount: AAURLConfiguration 
01 00 0800 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAppleIDAuthenticationController 
01 00 0f00 /System/Library/PrivateFrameworks/AuthKitUI.framework/AuthKitUI: AKAppleIDAuthenticationInAppContext 
01 00 0800 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAppleIDSession 
01 00 0f00 /System/Library/PrivateFrameworks/AuthKitUI.framework/AuthKitUI: AKInlineSignInViewController 
01 00 1600 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CABasicAnimation 
01 00 1600 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CADisplayLink 
01 00 1600 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAGradientLayer 
01 00 1600 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAKeyframeAnimation 
01 00 1600 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CALayer 
01 00 1600 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMediaTimingFunction 
01 00 1600 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMutableMeshTransform 
01 00 1600 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CASpringAnimation 
01 00 1600 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransaction 
01 00 1600 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransition 
01 00 1000 /System/Library/Frameworks/ContactsUI.framework/ContactsUI: CNAvatarImageRenderer 
01 00 1000 /System/Library/Frameworks/ContactsUI.framework/ContactsUI: CNAvatarImageRendererSettings 
01 00 1000 /System/Library/Frameworks/ContactsUI.framework/ContactsUI: CNAvatarImageRenderingScope 
01 00 1000 /System/Library/Frameworks/ContactsUI.framework/ContactsUI: CNAvatarViewController 
01 00 1000 /System/Library/Frameworks/ContactsUI.framework/ContactsUI: CNAvatarViewControllerSettings 
01 00 1200 /System/Library/Frameworks/Contacts.framework/Contacts: CNContact 
01 00 1200 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactFetchRequest 
01 00 1200 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactFormatter 
01 00 1200 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactStore 
01 00 1200 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactsUserDefaults 
01 00 1200 /System/Library/Frameworks/Contacts.framework/Contacts: CNLabeledValue 
01 00 1200 /System/Library/Frameworks/Contacts.framework/Contacts: CNMutableContact 
01 00 1200 /System/Library/Frameworks/Contacts.framework/Contacts: CNPhoneNumber 
01 00 1000 /System/Library/Frameworks/ContactsUI.framework/ContactsUI: CNPhotoPickerViewController 
01 00 0100 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKAchievement 
01 00 0100 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKAchievementChallenge 
01 00 0100 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKAchievementDescription 
01 00 0100 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKActivity 
01 00 0100 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKApplicationWorkspace 
01 00 0100 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKAutomatchPlayerInternal 
01 00 0100 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKChallenge 
01 00 0100 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKChallengeEventHandler 
01 00 0100 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKChallengeInternal 
01 00 0100 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKDaemonProxy 
01 00 0100 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKDevice 
01 00 0100 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKDispatchGroup 
01 00 0100 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKEventEmitter 
01 00 0100 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKFriendPlayerInternal 
01 00 0100 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKGame 
01 00 0100 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKGameRecord 
01 00 0100 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKInviteInternal 
01 00 0100 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKLeaderboard 
01 00 0100 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKLeaderboardSet 
01 00 0100 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKLocalPlayer 
01 00 0100 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKLocalPlayerInternal 
01 00 0100 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKMatch 
01 00 0100 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKMatchRequest 
01 00 0100 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKMatchRequestInternal 
01 00 0100 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKMatchmaker 
01 00 0100 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKPlayer 
01 00 0100 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKPlayerCredentialController 
01 00 0100 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKPlayerInternal 
01 00 0100 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKPreferences 
01 00 0100 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKReachability 
01 00 0100 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKReporter 
01 00 0100 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKScore 
01 00 0100 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKScoreChallenge 
01 00 0100 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKServiceInterface 
01 00 0100 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKThreadsafeCache 
01 00 0100 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKTournament 
01 00 0100 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKTournamentParticipantRequest 
01 00 0100 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKTurnBasedEventHandler 
01 00 0100 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKTurnBasedMatch 
01 00 0100 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKTurnBasedMatchInternal 
01 00 0100 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKUpdateGroup 
01 00 0d00 /System/Library/Frameworks/LinkPresentation.framework/LinkPresentation: LPGameCenterInvitationMetadata 
01 00 0d00 /System/Library/Frameworks/LinkPresentation.framework/LinkPresentation: LPImage 
01 00 0d00 /System/Library/Frameworks/LinkPresentation.framework/LinkPresentation: LPLinkMetadata 
01 00 1800 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationWorkspace 
01 00 0c00 /System/Library/Frameworks/MessageUI.framework/MessageUI: MFMessageComposeViewController 
01 00 0500 /System/Library/Frameworks/Messages.framework/Messages: MSMessage 
01 00 0500 /System/Library/Frameworks/Messages.framework/Messages: MSMessageLiveLayout 
01 00 0500 /System/Library/Frameworks/Messages.framework/Messages: MSMessageTemplateLayout 
01 00 0500 /System/Library/Frameworks/Messages.framework/Messages: MSSession 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBlockOperation 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundleResourceRequest 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCache 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDistributedNotificationCenter 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSExtension 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSExtensionContext 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexPath 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexSet 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSLayoutConstraint 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSLinguisticTagger 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMethodSignature 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableAttributedString 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: NSMutableParagraphStyle 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableURLRequest 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 1900 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOrderedSet 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: NSParagraphStyle 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPointerArray 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLQueryItem 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSessionConfiguration 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0600 /System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit: OBBoldTrayButton 
01 00 0600 /System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit: OBBundle 
01 00 0600 /System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit: OBPrivacyFlow 
01 00 0600 /System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit: OBPrivacyLinkController 
01 00 0e00 /System/Library/PrivateFrameworks/RemoteUI.framework/RemoteUI: RemoteUIController 
01 00 1100 /System/Library/Frameworks/StoreKit.framework/StoreKit: SKStoreProductViewController 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivityIndicatorView 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivityViewController 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertAction 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertController 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertView 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UIBarButtonItem 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UIBezierPath 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UIBlurEffect 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UIButton 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionReusableView 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionView 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewCell 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewController 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewFlowLayout 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewLayout 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewLayoutAttributes 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewLayoutInvalidationContext 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UIContextualAction 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UIControl 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UIDevice 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UIKeyboard 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UILabel 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UILocalizedIndexedCollation 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationBar 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationController 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UINib 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UIPanGestureRecognizer 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UIPopoverPresentationController 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UIScrollView 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UISearchBar 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UISearchController 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UISegmentedControl 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UISplitViewController 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UIStackView 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UISwipeActionsConfiguration 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UITabBarController 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewCell 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewController 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewHeaderFooterView 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UITapGestureRecognizer 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UITextField 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UITextSuggestion 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UITextView 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UITraitCollection 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UIVisualEffectView 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: UIWindow 
01 00 0100 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: _GKStateMachine 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: _UIBackdropView 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: _UIContentUnavailableView 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: _UIDynamicAnimationActiveValue 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: _UIDynamicValueAnimation 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: _UIFallbackPresentationViewController 
01 00 1300 /System/Library/Frameworks/UIKit.framework/UIKit: _UIRemoteViewController 
