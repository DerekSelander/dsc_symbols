|| __DATA.__common _GKServiceInterfaceController
|| __DATA.__data _OBJC_METACLASS_$_GKContactsIntegrationConsentViewController
|| __DATA.__data _OBJC_METACLASS_$_GKPersonalizationViewController
|| __DATA.__data _OBJC_METACLASS_$_GKProfileCreatedViewController
|| __DATA.__data _OBJC_METACLASS_$_GKProfilePrivacyViewController
|| __DATA.__data _OBJC_METACLASS_$_GKWelcomeOnboardingViewController
|| __DATA.__data _OBJC_METACLASS_$_GameLayerPageGrid
|| __DATA.__data _OBJC_METACLASS_$__TtC12GameCenterUI14EmptyStateView
|| __DATA.__data _OBJC_METACLASS_$__TtC12GameCenterUI15SharingScoreURL
|| __DATA.__data _OBJC_METACLASS_$__TtC12GameCenterUI16AchievementBadge
|| __DATA.__data _OBJC_METACLASS_$__TtC12GameCenterUI16AchievementUtils
|| __DATA.__data _OBJC_METACLASS_$__TtC12GameCenterUI16DynamicTypeLabel
|| __DATA.__data _OBJC_METACLASS_$__TtC12GameCenterUI17GKPickerGroupCell
|| __DATA.__data _OBJC_METACLASS_$__TtC12GameCenterUI17GKPlayerGroupView
|| __DATA.__data _OBJC_METACLASS_$__TtC12GameCenterUI18BaseViewController
|| __DATA.__data _OBJC_METACLASS_$__TtC12GameCenterUI19SharingScoreMessage
|| __DATA.__data _OBJC_METACLASS_$__TtC12GameCenterUI21GKPlayerGroupBaseView
|| __DATA.__data _OBJC_METACLASS_$__TtC12GameCenterUI21SharingAchievementURL
|| __DATA.__data _OBJC_METACLASS_$__TtC12GameCenterUI22GKAddFriendsLockupView
|| __DATA.__data _OBJC_METACLASS_$__TtC12GameCenterUI22GKSuggestedPlayerGroup
|| __DATA.__data _OBJC_METACLASS_$__TtC12GameCenterUI22OverlappingPlayersView
|| __DATA.__data _OBJC_METACLASS_$__TtC12GameCenterUI23GKMultiplayerFooterView
|| __DATA.__data _OBJC_METACLASS_$__TtC12GameCenterUI23GKPickerGroupNearbyCell
|| __DATA.__data _OBJC_METACLASS_$__TtC12GameCenterUI25FriendsFeedViewController
|| __DATA.__data _OBJC_METACLASS_$__TtC12GameCenterUI25FriendsListViewController
|| __DATA.__data _OBJC_METACLASS_$__TtC12GameCenterUI25SharingAchievementMessage
|| __DATA.__data _OBJC_METACLASS_$__TtC12GameCenterUI26GKSuggestionsContainerCell
|| __DATA.__data _OBJC_METACLASS_$__TtC12GameCenterUI26GameCenterFriendPlayerView
|| __DATA.__data _OBJC_METACLASS_$__TtC12GameCenterUI26JetDashboardViewController
|| __DATA.__data _OBJC_METACLASS_$__TtC12GameCenterUI27OverlappingPlayersPhotoView
|| __DATA.__data _OBJC_METACLASS_$__TtC12GameCenterUI27PlayerProfileViewController
|| __DATA.__data _OBJC_METACLASS_$__TtC12GameCenterUI28BaseCollectionViewController
|| __DATA.__data _OBJC_METACLASS_$__TtC12GameCenterUI28DashboardSplitViewController
|| __DATA.__data _OBJC_METACLASS_$__TtC12GameCenterUI29AppStoreContentViewController
|| __DATA.__data _OBJC_METACLASS_$__TtC12GameCenterUI29GKDashboardShowMoreFooterView
|| __DATA.__data _OBJC_METACLASS_$__TtC12GameCenterUI29GKExpandedGroupViewController
|| __DATA.__data _OBJC_METACLASS_$__TtC12GameCenterUI29GKMultiplayerButtonHeaderView
|| __DATA.__data _OBJC_METACLASS_$__TtC12GameCenterUI29GKMultiplayerPickerPlayerCell
|| __DATA.__data _OBJC_METACLASS_$__TtC12GameCenterUI30DashboardSidebarViewController
|| __DATA.__data _OBJC_METACLASS_$__TtC12GameCenterUI30GKMultiplayerStepperController
|| __DATA.__data _OBJC_METACLASS_$__TtC12GameCenterUI30GKSuggestionsContainerBaseCell
|| __DATA.__data _OBJC_METACLASS_$__TtC12GameCenterUI31BaseJetCollectionViewController
|| __DATA.__data _OBJC_METACLASS_$__TtC12GameCenterUI31GKPickerGroupCollectionViewCell
|| __DATA.__data _OBJC_METACLASS_$__TtC12GameCenterUI31SettingsContainerViewController
|| __DATA.__data _OBJC_METACLASS_$__TtC12GameCenterUI32GKMultiplayerPickerNoFriendsCell
|| __DATA.__data _OBJC_METACLASS_$__TtC12GameCenterUI33BaseSplitCollectionViewController
|| __DATA.__data _OBJC_METACLASS_$__TtC12GameCenterUI33GKExpandedGroupBaseViewController
|| __DATA.__data _OBJC_METACLASS_$__TtC12GameCenterUI33GKMultiplayerViewControllerLayout
|| __DATA.__data _OBJC_METACLASS_$__TtC12GameCenterUI35BaseDoubleColumnSplitViewController
|| __DATA.__data _OBJC_METACLASS_$__TtC12GameCenterUI35DashboardActivityFeedViewController
|| __DATA.__data _OBJC_METACLASS_$__TtC12GameCenterUI35GameLayerAchievementsViewController
|| __DATA.__data _OBJC_METACLASS_$__TtC12GameCenterUI37GKPickerGroupNearbyCollectionViewCell
|| __DATA.__data _OBJC_METACLASS_$__TtC12GameCenterUI37TitleWithHighlightsCollectionViewCell
|| __DATA.__data _OBJC_METACLASS_$__TtC12GameCenterUI38GKMultiplayerAddSlotCollectionViewCell
|| __DATA.__data _OBJC_METACLASS_$__TtC12GameCenterUI40GKMultiplayerPickerNearbyInstructionCell
|| __DATA.__data _OBJC_METACLASS_$__TtC12GameCenterUI42GKMultiplayerPickerAddFriendsSupplementary
|| __DATA.__objc_data _OBJC_CLASS_$_GKAccessPoint
|| __DATA.__objc_data _OBJC_CLASS_$_GKAccountRemoteUIController
|| __DATA.__objc_data _OBJC_CLASS_$_GKAchievementDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKAchievementIconView
|| __DATA.__objc_data _OBJC_CLASS_$_GKAchievementViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKAcquireFocusWorkaroundView
|| __DATA.__objc_data _OBJC_CLASS_$_GKAggregateCollectionViewWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_GKAggregateMapping
|| __DATA.__objc_data _OBJC_CLASS_$_GKAuthenticateExtensionHostContext
|| __DATA.__objc_data _OBJC_CLASS_$_GKAuthenticateHostViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKAvatarContainerView
|| __DATA.__objc_data _OBJC_CLASS_$_GKBadgedGameIconBrush
|| __DATA.__objc_data _OBJC_CLASS_$_GKBaseComposeController
|| __DATA.__objc_data _OBJC_CLASS_$_GKBaseComposeHeaderField
|| __DATA.__objc_data _OBJC_CLASS_$_GKBaseContentUnavailableView
|| __DATA.__objc_data _OBJC_CLASS_$_GKBasePlayerCell
|| __DATA.__objc_data _OBJC_CLASS_$_GKBasicCollectionViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKBasicCollectionViewDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKButtonStyle
|| __DATA.__objc_data _OBJC_CLASS_$_GKButtonView
|| __DATA.__objc_data _OBJC_CLASS_$_GKButtonWithContentSizeCorrected2
|| __DATA.__objc_data _OBJC_CLASS_$_GKCancelSwipeToEditGestureRecognizer
|| __DATA.__objc_data _OBJC_CLASS_$_GKCellSelectedBackgroundView
|| __DATA.__objc_data _OBJC_CLASS_$_GKCenteringScrollView
|| __DATA.__objc_data _OBJC_CLASS_$_GKChallengeComposeController
|| __DATA.__objc_data _OBJC_CLASS_$_GKChallengeDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKChallengeEventHandlerUIDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_GKChallengeIssueExtensionHostContext
|| __DATA.__objc_data _OBJC_CLASS_$_GKChallengeIssueHostViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKChallengeListViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKChallengePlayerCell
|| __DATA.__objc_data _OBJC_CLASS_$_GKChallengePlayerPickerCell
|| __DATA.__objc_data _OBJC_CLASS_$_GKChallengePlayerPickerDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKChallengePlayerPickerViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKCollectionColumnDividerView
|| __DATA.__objc_data _OBJC_CLASS_$_GKCollectionColumnLayout
|| __DATA.__objc_data _OBJC_CLASS_$_GKCollectionDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKCollectionFocusingLayout
|| __DATA.__objc_data _OBJC_CLASS_$_GKCollectionGridLayout
|| __DATA.__objc_data _OBJC_CLASS_$_GKCollectionHorizontalLayout
|| __DATA.__objc_data _OBJC_CLASS_$_GKCollectionMultiDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKCollectionViewAggregateDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKCollectionViewCell
|| __DATA.__objc_data _OBJC_CLASS_$_GKCollectionViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKCollectionViewDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKCollectionViewLayoutAttributes
|| __DATA.__objc_data _OBJC_CLASS_$_GKCollectionViewPlaceholderView
|| __DATA.__objc_data _OBJC_CLASS_$_GKColumnDividerView
|| __DATA.__objc_data _OBJC_CLASS_$_GKComposeHeaderField
|| __DATA.__objc_data _OBJC_CLASS_$_GKComposeHeaderFieldBackgroundView
|| __DATA.__objc_data _OBJC_CLASS_$_GKComposeHeaderWithStaticRecipients
|| __DATA.__objc_data _OBJC_CLASS_$_GKComposeRecipient
|| __DATA.__objc_data _OBJC_CLASS_$_GKConstraintLeadingInfo
|| __DATA.__objc_data _OBJC_CLASS_$_GKConstraintUpdateController
|| __DATA.__objc_data _OBJC_CLASS_$_GKContactDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKContactSkipControl
|| __DATA.__objc_data _OBJC_CLASS_$_GKContactsIntegrationConsentViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKContiguousContainerView
|| __DATA.__objc_data _OBJC_CLASS_$_GKContiguousContainerWithLeadingView
|| __DATA.__objc_data _OBJC_CLASS_$_GKControlEnabledObserver
|| __DATA.__objc_data _OBJC_CLASS_$_GKCurvedTextLabel
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardAchievementCell
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardAchievementDetailViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardButtonSectionHeaderView
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardChallengeDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardChallengeDetailViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardChallengePlayerPickerDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardChallengePlayerPickerViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardExtensionHostContext
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardFocusContainerView
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardHostViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardKeyboardAccessoryView
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardLeaderboardCell
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardLeaderboardDetailViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardLeaderboardListDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardLeaderboardListViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardLeaderboardScoreCell
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardLeaderboardScoreDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardLeaderboardScoreHeaderView
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardLeaderboardScoreViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardLeaderboardSetDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardMultiplayerPickerDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardMultiplayerPickerSearchDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardPickerPlayerCell
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardPickerPlayerGroupCell
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardPlayerPickerCell
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardPlayerShadowView
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardPresentationController
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardRequest
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardShowMoreTextCell
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardSingleButtonReusableFooterView
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardTurnCell
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardTurnDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardTurnDetailDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKDashboardTurnDetailViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKDataSourceMetrics
|| __DATA.__objc_data _OBJC_CLASS_$_GKDefaultNicknameViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKDefaultPrivacyViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKDetachedContentView
|| __DATA.__objc_data _OBJC_CLASS_$_GKDetailViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKDynamicButton
|| __DATA.__objc_data _OBJC_CLASS_$_GKDynamicColumnSectionMetrics
|| __DATA.__objc_data _OBJC_CLASS_$_GKDynamicLabel
|| __DATA.__objc_data _OBJC_CLASS_$_GKEditAction
|| __DATA.__objc_data _OBJC_CLASS_$_GKEditActionsView
|| __DATA.__objc_data _OBJC_CLASS_$_GKExtensionContext
|| __DATA.__objc_data _OBJC_CLASS_$_GKExtensionHostContext
|| __DATA.__objc_data _OBJC_CLASS_$_GKExtensionHostViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKExtensionManager
|| __DATA.__objc_data _OBJC_CLASS_$_GKExtensionRemoteViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKExtensionRootViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKExtensionViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKFixedSizeImageView
|| __DATA.__objc_data _OBJC_CLASS_$_GKFlippableCollectionHorizontalLayout
|| __DATA.__objc_data _OBJC_CLASS_$_GKFriendRequestComposeViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKFriendRequestViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKGameCenterFriendPlayerView
|| __DATA.__objc_data _OBJC_CLASS_$_GKGameControllerSupport
|| __DATA.__objc_data _OBJC_CLASS_$_GKGameInviteComposeController
|| __DATA.__objc_data _OBJC_CLASS_$_GKGameLayerCollectionDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKGenericRoundButton
|| __DATA.__objc_data _OBJC_CLASS_$_GKGradientLabel
|| __DATA.__objc_data _OBJC_CLASS_$_GKGridLayout
|| __DATA.__objc_data _OBJC_CLASS_$_GKGridLayoutInvalidationContext
|| __DATA.__objc_data _OBJC_CLASS_$_GKGridLayoutMetrics
|| __DATA.__objc_data _OBJC_CLASS_$_GKHairlineView
|| __DATA.__objc_data _OBJC_CLASS_$_GKHeaderWithUnderlineView
|| __DATA.__objc_data _OBJC_CLASS_$_GKHostedAuthenticateViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKHostedChallengeIssueController
|| __DATA.__objc_data _OBJC_CLASS_$_GKHostedViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKImageDataConsumer
|| __DATA.__objc_data _OBJC_CLASS_$_GKImageEffects
|| __DATA.__objc_data _OBJC_CLASS_$_GKImageRequest
|| __DATA.__objc_data _OBJC_CLASS_$_GKLabel
|| __DATA.__objc_data _OBJC_CLASS_$_GKLeaderboardAddFriendsCell
|| __DATA.__objc_data _OBJC_CLASS_$_GKLeaderboardCollectionDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKLeaderboardCollectionViewFlowLayout
|| __DATA.__objc_data _OBJC_CLASS_$_GKLeaderboardListDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKLeaderboardListHeaderView
|| __DATA.__objc_data _OBJC_CLASS_$_GKLeaderboardListViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKLeaderboardScoreDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKLeaderboardScoreFlowLayout
|| __DATA.__objc_data _OBJC_CLASS_$_GKLeaderboardScoreViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKLeaderboardSectionHeaderView
|| __DATA.__objc_data _OBJC_CLASS_$_GKLeaderboardSetDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKLeaderboardViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKLoadAvatarResourceOperation
|| __DATA.__objc_data _OBJC_CLASS_$_GKLoadBundleResourceOperation
|| __DATA.__objc_data _OBJC_CLASS_$_GKLoadContactResourceOperation
|| __DATA.__objc_data _OBJC_CLASS_$_GKLoadImageResourceOperation
|| __DATA.__objc_data _OBJC_CLASS_$_GKLoadResourceOperation
|| __DATA.__objc_data _OBJC_CLASS_$_GKLoadSystemImageResourceOperation
|| __DATA.__objc_data _OBJC_CLASS_$_GKLoadableContentStateMachine
|| __DATA.__objc_data _OBJC_CLASS_$_GKLoadableContentViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKLoadingCell
|| __DATA.__objc_data _OBJC_CLASS_$_GKMappedIndexPath
|| __DATA.__objc_data _OBJC_CLASS_$_GKMatchmakerExtensionHostContext
|| __DATA.__objc_data _OBJC_CLASS_$_GKMatchmakerHostViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKMatchmakerViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKMessageComposeViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKMessageUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_GKMetricData
|| __DATA.__objc_data _OBJC_CLASS_$_GKMobileGestalt
|| __DATA.__objc_data _OBJC_CLASS_$_GKMoreExistSectionFooterView
|| __DATA.__objc_data _OBJC_CLASS_$_GKMultiplayerCustomInviteMessageViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKMultiplayerDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKMultiplayerP2PViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKMultiplayerParticipant
|| __DATA.__objc_data _OBJC_CLASS_$_GKMultiplayerViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKNavigationController
|| __DATA.__objc_data _OBJC_CLASS_$_GKNavigationControllerDeferredTransitionInfo
|| __DATA.__objc_data _OBJC_CLASS_$_GKNetworkActivityIndicatorDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_GKNicknameController
|| __DATA.__objc_data _OBJC_CLASS_$_GKNoContentView
|| __DATA.__objc_data _OBJC_CLASS_$_GKNotificationBanner
|| __DATA.__objc_data _OBJC_CLASS_$_GKNotificationBannerView
|| __DATA.__objc_data _OBJC_CLASS_$_GKNotificationBannerViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKNotificationBannerWindow
|| __DATA.__objc_data _OBJC_CLASS_$_GKOnboardingController
|| __DATA.__objc_data _OBJC_CLASS_$_GKOnboardingHelper
|| __DATA.__objc_data _OBJC_CLASS_$_GKOnboardingMetricsHandler
|| __DATA.__objc_data _OBJC_CLASS_$_GKOnboardingViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKOnboardingWhatsNewListCell
|| __DATA.__objc_data _OBJC_CLASS_$_GKPersonalizationViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKPickerSearchTextField
|| __DATA.__objc_data _OBJC_CLASS_$_GKPlaceholderContentStateMachine
|| __DATA.__objc_data _OBJC_CLASS_$_GKPlaceholderView
|| __DATA.__objc_data _OBJC_CLASS_$_GKPlayerProfileViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKProfileCreatedViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKProfileFetchOptionsHelper
|| __DATA.__objc_data _OBJC_CLASS_$_GKProfilePrivacyTableViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKProfilePrivacyViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKRawTurnsDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKRectShadowCell
|| __DATA.__objc_data _OBJC_CLASS_$_GKRemoteUIController
|| __DATA.__objc_data _OBJC_CLASS_$_GKRemoteUIFooterView
|| __DATA.__objc_data _OBJC_CLASS_$_GKRemoteUIHeaderView
|| __DATA.__objc_data _OBJC_CLASS_$_GKRemoteUINavigationController
|| __DATA.__objc_data _OBJC_CLASS_$_GKRemoteUITableFooterView
|| __DATA.__objc_data _OBJC_CLASS_$_GKRemoteUITableHeaderView
|| __DATA.__objc_data _OBJC_CLASS_$_GKRemoteViewServiceController
|| __DATA.__objc_data _OBJC_CLASS_$_GKReportProblemRemoteUIController
|| __DATA.__objc_data _OBJC_CLASS_$_GKResizingLabel
|| __DATA.__objc_data _OBJC_CLASS_$_GKResourceCache
|| __DATA.__objc_data _OBJC_CLASS_$_GKResourceLoader
|| __DATA.__objc_data _OBJC_CLASS_$_GKResourceRequest
|| __DATA.__objc_data _OBJC_CLASS_$_GKRoundButton
|| __DATA.__objc_data _OBJC_CLASS_$_GKSearchBar
|| __DATA.__objc_data _OBJC_CLASS_$_GKSearchBarView
|| __DATA.__objc_data _OBJC_CLASS_$_GKSectionHeaderView
|| __DATA.__objc_data _OBJC_CLASS_$_GKSectionInfo
|| __DATA.__objc_data _OBJC_CLASS_$_GKSectionMetrics
|| __DATA.__objc_data _OBJC_CLASS_$_GKSectionPresentationData
|| __DATA.__objc_data _OBJC_CLASS_$_GKSectionSeparatorView
|| __DATA.__objc_data _OBJC_CLASS_$_GKSegmentInfo
|| __DATA.__objc_data _OBJC_CLASS_$_GKSegmentedSectionDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKSegmentedSectionHeaderView
|| __DATA.__objc_data _OBJC_CLASS_$_GKSegmentedSelectorView
|| __DATA.__objc_data _OBJC_CLASS_$_GKServiceFriendRequestViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKServiceViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKSettingsFriendListAccess
|| __DATA.__objc_data _OBJC_CLASS_$_GKSettingsFriendListAccessCell
|| __DATA.__objc_data _OBJC_CLASS_$_GKSettingsGlobalFriendListAccessCell
|| __DATA.__objc_data _OBJC_CLASS_$_GKShowMoreView
|| __DATA.__objc_data _OBJC_CLASS_$_GKShowcaseCellView
|| __DATA.__objc_data _OBJC_CLASS_$_GKSignInInputView
|| __DATA.__objc_data _OBJC_CLASS_$_GKSignInViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKSimpleComposeController
|| __DATA.__objc_data _OBJC_CLASS_$_GKSkipControlButton
|| __DATA.__objc_data _OBJC_CLASS_$_GKSplittingDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKStaticRenderContentView
|| __DATA.__objc_data _OBJC_CLASS_$_GKStatusCell
|| __DATA.__objc_data _OBJC_CLASS_$_GKSupplementaryViewFactory
|| __DATA.__objc_data _OBJC_CLASS_$_GKSupplementaryViewMetrics
|| __DATA.__objc_data _OBJC_CLASS_$_GKSwipeToEditStateMachine
|| __DATA.__objc_data _OBJC_CLASS_$_GKTextField
|| __DATA.__objc_data _OBJC_CLASS_$_GKTextView
|| __DATA.__objc_data _OBJC_CLASS_$_GKTimeScopeButton
|| __DATA.__objc_data _OBJC_CLASS_$_GKTopClipView
|| __DATA.__objc_data _OBJC_CLASS_$_GKTournamentExtensionHostViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKTournamentInterface
|| __DATA.__objc_data _OBJC_CLASS_$_GKTournamentViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKTournamentViewRequest
|| __DATA.__objc_data _OBJC_CLASS_$_GKTurnBasedInviteViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKTurnBasedMatchDetailHeaderView
|| __DATA.__objc_data _OBJC_CLASS_$_GKTurnBasedMatchDetailViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKTurnBasedMatchesDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKTurnBasedMatchesViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKTurnBasedMatchmakerExtensionHostContext
|| __DATA.__objc_data _OBJC_CLASS_$_GKTurnBasedMatchmakerHostViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKTurnBasedMatchmakerViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKTurnBasedParticipantsDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_GKTurnParticipantCell
|| __DATA.__objc_data _OBJC_CLASS_$_GKUIContentUnavailableView
|| __DATA.__objc_data _OBJC_CLASS_$_GKUnfocusableButton
|| __DATA.__objc_data _OBJC_CLASS_$_GKUnifiedRecipient
|| __DATA.__objc_data _OBJC_CLASS_$_GKViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GKViewServiceInterface
|| __DATA.__objc_data _OBJC_CLASS_$_GKWelcomeOnboardingViewController
|| __DATA.__objc_data _OBJC_CLASS_$_GameLayerPageGrid
|| __DATA.__objc_data _OBJC_CLASS_$__GKASKResourceCacheGroup
|| __DATA.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI14EmptyStateView
|| __DATA.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI15SharingScoreURL
|| __DATA.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI16AchievementBadge
|| __DATA.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI16AchievementUtils
|| __DATA.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI16DynamicTypeLabel
|| __DATA.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI17GKPickerGroupCell
|| __DATA.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI17GKPlayerGroupView
|| __DATA.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI18BaseViewController
|| __DATA.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI19SharingScoreMessage
|| __DATA.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI21GKPlayerGroupBaseView
|| __DATA.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI21SharingAchievementURL
|| __DATA.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI22GKAddFriendsLockupView
|| __DATA.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI22GKSuggestedPlayerGroup
|| __DATA.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI22OverlappingPlayersView
|| __DATA.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI23GKMultiplayerFooterView
|| __DATA.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI23GKPickerGroupNearbyCell
|| __DATA.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI25FriendsFeedViewController
|| __DATA.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI25FriendsListViewController
|| __DATA.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI25SharingAchievementMessage
|| __DATA.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI26GKSuggestionsContainerCell
|| __DATA.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI26GameCenterFriendPlayerView
|| __DATA.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI26JetDashboardViewController
|| __DATA.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI27OverlappingPlayersPhotoView
|| __DATA.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI27PlayerProfileViewController
|| __DATA.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI28BaseCollectionViewController
|| __DATA.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI28DashboardSplitViewController
|| __DATA.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI29AppStoreContentViewController
|| __DATA.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI29GKDashboardShowMoreFooterView
|| __DATA.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI29GKExpandedGroupViewController
|| __DATA.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI29GKMultiplayerButtonHeaderView
|| __DATA.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI29GKMultiplayerPickerPlayerCell
|| __DATA.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI30DashboardSidebarViewController
|| __DATA.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI30GKMultiplayerStepperController
|| __DATA.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI30GKSuggestionsContainerBaseCell
|| __DATA.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI31BaseJetCollectionViewController
|| __DATA.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI31GKPickerGroupCollectionViewCell
|| __DATA.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI31SettingsContainerViewController
|| __DATA.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI32GKMultiplayerPickerNoFriendsCell
|| __DATA.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI33BaseSplitCollectionViewController
|| __DATA.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI33GKExpandedGroupBaseViewController
|| __DATA.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI33GKMultiplayerViewControllerLayout
|| __DATA.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI35BaseDoubleColumnSplitViewController
|| __DATA.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI35DashboardActivityFeedViewController
|| __DATA.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI35GameLayerAchievementsViewController
|| __DATA.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI37GKPickerGroupNearbyCollectionViewCell
|| __DATA.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI37TitleWithHighlightsCollectionViewCell
|| __DATA.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI38GKMultiplayerAddSlotCollectionViewCell
|| __DATA.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI40GKMultiplayerPickerNearbyInstructionCell
|| __DATA.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI42GKMultiplayerPickerAddFriendsSupplementary
|| __DATA.__objc_data _OBJC_METACLASS_$_GKAccessPoint
|| __DATA.__objc_data _OBJC_METACLASS_$_GKAccountRemoteUIController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKAchievementDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKAchievementIconView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKAchievementViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKAcquireFocusWorkaroundView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKAggregateCollectionViewWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_GKAggregateMapping
|| __DATA.__objc_data _OBJC_METACLASS_$_GKAuthenticateExtensionHostContext
|| __DATA.__objc_data _OBJC_METACLASS_$_GKAuthenticateHostViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKAvatarContainerView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKBadgedGameIconBrush
|| __DATA.__objc_data _OBJC_METACLASS_$_GKBaseComposeController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKBaseComposeHeaderField
|| __DATA.__objc_data _OBJC_METACLASS_$_GKBaseContentUnavailableView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKBasePlayerCell
|| __DATA.__objc_data _OBJC_METACLASS_$_GKBasicCollectionViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKBasicCollectionViewDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKButtonStyle
|| __DATA.__objc_data _OBJC_METACLASS_$_GKButtonView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKButtonWithContentSizeCorrected2
|| __DATA.__objc_data _OBJC_METACLASS_$_GKCancelSwipeToEditGestureRecognizer
|| __DATA.__objc_data _OBJC_METACLASS_$_GKCellSelectedBackgroundView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKCenteringScrollView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKChallengeComposeController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKChallengeDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKChallengeEventHandlerUIDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_GKChallengeIssueExtensionHostContext
|| __DATA.__objc_data _OBJC_METACLASS_$_GKChallengeIssueHostViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKChallengeListViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKChallengePlayerCell
|| __DATA.__objc_data _OBJC_METACLASS_$_GKChallengePlayerPickerCell
|| __DATA.__objc_data _OBJC_METACLASS_$_GKChallengePlayerPickerDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKChallengePlayerPickerViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKCollectionColumnDividerView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKCollectionColumnLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_GKCollectionDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKCollectionFocusingLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_GKCollectionGridLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_GKCollectionHorizontalLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_GKCollectionMultiDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKCollectionViewAggregateDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKCollectionViewCell
|| __DATA.__objc_data _OBJC_METACLASS_$_GKCollectionViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKCollectionViewDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKCollectionViewLayoutAttributes
|| __DATA.__objc_data _OBJC_METACLASS_$_GKCollectionViewPlaceholderView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKColumnDividerView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKComposeHeaderField
|| __DATA.__objc_data _OBJC_METACLASS_$_GKComposeHeaderFieldBackgroundView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKComposeHeaderWithStaticRecipients
|| __DATA.__objc_data _OBJC_METACLASS_$_GKComposeRecipient
|| __DATA.__objc_data _OBJC_METACLASS_$_GKConstraintLeadingInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_GKConstraintUpdateController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKContactDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKContactSkipControl
|| __DATA.__objc_data _OBJC_METACLASS_$_GKContiguousContainerView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKContiguousContainerWithLeadingView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKControlEnabledObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_GKCurvedTextLabel
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardAchievementCell
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardAchievementDetailViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardButtonSectionHeaderView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardChallengeDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardChallengeDetailViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardChallengePlayerPickerDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardChallengePlayerPickerViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardExtensionHostContext
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardFocusContainerView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardHostViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardKeyboardAccessoryView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardLeaderboardCell
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardLeaderboardDetailViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardLeaderboardListDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardLeaderboardListViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardLeaderboardScoreCell
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardLeaderboardScoreDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardLeaderboardScoreHeaderView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardLeaderboardScoreViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardLeaderboardSetDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardMultiplayerPickerDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardMultiplayerPickerSearchDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardPickerPlayerCell
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardPickerPlayerGroupCell
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardPlayerPickerCell
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardPlayerShadowView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardPresentationController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardShowMoreTextCell
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardSingleButtonReusableFooterView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardTurnCell
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardTurnDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardTurnDetailDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDashboardTurnDetailViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDataSourceMetrics
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDefaultNicknameViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDefaultPrivacyViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDetachedContentView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDetailViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDynamicButton
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDynamicColumnSectionMetrics
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDynamicLabel
|| __DATA.__objc_data _OBJC_METACLASS_$_GKEditAction
|| __DATA.__objc_data _OBJC_METACLASS_$_GKEditActionsView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKExtensionContext
|| __DATA.__objc_data _OBJC_METACLASS_$_GKExtensionHostContext
|| __DATA.__objc_data _OBJC_METACLASS_$_GKExtensionHostViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKExtensionManager
|| __DATA.__objc_data _OBJC_METACLASS_$_GKExtensionRemoteViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKExtensionRootViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKExtensionViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKFixedSizeImageView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKFlippableCollectionHorizontalLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_GKFriendRequestComposeViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKFriendRequestViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKGameCenterFriendPlayerView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKGameControllerSupport
|| __DATA.__objc_data _OBJC_METACLASS_$_GKGameInviteComposeController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKGameLayerCollectionDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKGenericRoundButton
|| __DATA.__objc_data _OBJC_METACLASS_$_GKGradientLabel
|| __DATA.__objc_data _OBJC_METACLASS_$_GKGridLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_GKGridLayoutInvalidationContext
|| __DATA.__objc_data _OBJC_METACLASS_$_GKGridLayoutMetrics
|| __DATA.__objc_data _OBJC_METACLASS_$_GKHairlineView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKHeaderWithUnderlineView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKHostedAuthenticateViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKHostedChallengeIssueController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKHostedViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKImageDataConsumer
|| __DATA.__objc_data _OBJC_METACLASS_$_GKImageEffects
|| __DATA.__objc_data _OBJC_METACLASS_$_GKImageRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_GKLabel
|| __DATA.__objc_data _OBJC_METACLASS_$_GKLeaderboardAddFriendsCell
|| __DATA.__objc_data _OBJC_METACLASS_$_GKLeaderboardCollectionDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKLeaderboardCollectionViewFlowLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_GKLeaderboardListDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKLeaderboardListHeaderView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKLeaderboardListViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKLeaderboardScoreDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKLeaderboardScoreFlowLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_GKLeaderboardScoreViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKLeaderboardSectionHeaderView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKLeaderboardSetDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKLeaderboardViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKLoadAvatarResourceOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_GKLoadBundleResourceOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_GKLoadContactResourceOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_GKLoadImageResourceOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_GKLoadResourceOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_GKLoadSystemImageResourceOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_GKLoadableContentStateMachine
|| __DATA.__objc_data _OBJC_METACLASS_$_GKLoadableContentViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKLoadingCell
|| __DATA.__objc_data _OBJC_METACLASS_$_GKMappedIndexPath
|| __DATA.__objc_data _OBJC_METACLASS_$_GKMatchmakerExtensionHostContext
|| __DATA.__objc_data _OBJC_METACLASS_$_GKMatchmakerHostViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKMatchmakerViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKMessageComposeViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKMessageUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_GKMetricData
|| __DATA.__objc_data _OBJC_METACLASS_$_GKMobileGestalt
|| __DATA.__objc_data _OBJC_METACLASS_$_GKMoreExistSectionFooterView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKMultiplayerCustomInviteMessageViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKMultiplayerDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKMultiplayerP2PViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKMultiplayerParticipant
|| __DATA.__objc_data _OBJC_METACLASS_$_GKMultiplayerViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKNavigationController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKNavigationControllerDeferredTransitionInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_GKNetworkActivityIndicatorDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_GKNicknameController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKNoContentView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKNotificationBanner
|| __DATA.__objc_data _OBJC_METACLASS_$_GKNotificationBannerView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKNotificationBannerViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKNotificationBannerWindow
|| __DATA.__objc_data _OBJC_METACLASS_$_GKOnboardingController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKOnboardingHelper
|| __DATA.__objc_data _OBJC_METACLASS_$_GKOnboardingMetricsHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_GKOnboardingViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKOnboardingWhatsNewListCell
|| __DATA.__objc_data _OBJC_METACLASS_$_GKPickerSearchTextField
|| __DATA.__objc_data _OBJC_METACLASS_$_GKPlaceholderContentStateMachine
|| __DATA.__objc_data _OBJC_METACLASS_$_GKPlaceholderView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKPlayerProfileViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKProfileFetchOptionsHelper
|| __DATA.__objc_data _OBJC_METACLASS_$_GKProfilePrivacyTableViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKRawTurnsDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKRectShadowCell
|| __DATA.__objc_data _OBJC_METACLASS_$_GKRemoteUIController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKRemoteUIFooterView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKRemoteUIHeaderView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKRemoteUINavigationController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKRemoteUITableFooterView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKRemoteUITableHeaderView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKRemoteViewServiceController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKReportProblemRemoteUIController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKResizingLabel
|| __DATA.__objc_data _OBJC_METACLASS_$_GKResourceCache
|| __DATA.__objc_data _OBJC_METACLASS_$_GKResourceLoader
|| __DATA.__objc_data _OBJC_METACLASS_$_GKResourceRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_GKRoundButton
|| __DATA.__objc_data _OBJC_METACLASS_$_GKSearchBar
|| __DATA.__objc_data _OBJC_METACLASS_$_GKSearchBarView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKSectionHeaderView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKSectionInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_GKSectionMetrics
|| __DATA.__objc_data _OBJC_METACLASS_$_GKSectionPresentationData
|| __DATA.__objc_data _OBJC_METACLASS_$_GKSectionSeparatorView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKSegmentInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_GKSegmentedSectionDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKSegmentedSectionHeaderView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKSegmentedSelectorView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKServiceFriendRequestViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKServiceViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKSettingsFriendListAccess
|| __DATA.__objc_data _OBJC_METACLASS_$_GKSettingsFriendListAccessCell
|| __DATA.__objc_data _OBJC_METACLASS_$_GKSettingsGlobalFriendListAccessCell
|| __DATA.__objc_data _OBJC_METACLASS_$_GKShowMoreView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKShowcaseCellView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKSignInInputView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKSignInViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKSimpleComposeController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKSkipControlButton
|| __DATA.__objc_data _OBJC_METACLASS_$_GKSplittingDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKStaticRenderContentView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKStatusCell
|| __DATA.__objc_data _OBJC_METACLASS_$_GKSupplementaryViewFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_GKSupplementaryViewMetrics
|| __DATA.__objc_data _OBJC_METACLASS_$_GKSwipeToEditStateMachine
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTextField
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTextView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTimeScopeButton
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTopClipView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTournamentExtensionHostViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTournamentInterface
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTournamentViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTournamentViewRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTurnBasedInviteViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTurnBasedMatchDetailHeaderView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTurnBasedMatchDetailViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTurnBasedMatchesDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTurnBasedMatchesViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTurnBasedMatchmakerExtensionHostContext
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTurnBasedMatchmakerHostViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTurnBasedMatchmakerViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTurnBasedParticipantsDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTurnParticipantCell
|| __DATA.__objc_data _OBJC_METACLASS_$_GKUIContentUnavailableView
|| __DATA.__objc_data _OBJC_METACLASS_$_GKUnfocusableButton
|| __DATA.__objc_data _OBJC_METACLASS_$_GKUnifiedRecipient
|| __DATA.__objc_data _OBJC_METACLASS_$_GKViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKViewServiceInterface
|| __DATA.__objc_data _OBJC_METACLASS_$__GKASKResourceCacheGroup
|| __DATA_CONST.__const _GKAuthenticateExtensionBundleIdentifier
|| __DATA_CONST.__const _GKChallengeIssueExtensionBundleIdentifier
|| __DATA_CONST.__const _GKChatGUIDKey
|| __DATA_CONST.__const _GKCollectionColumnLayoutDividerKind
|| __DATA_CONST.__const _GKCollectionLayoutTopHeaderKind
|| __DATA_CONST.__const _GKCollectionViewCellLeadingMarginConstraintIdentifier
|| __DATA_CONST.__const _GKCollectionViewCellTrailingMarginConstraintIdentifier
|| __DATA_CONST.__const _GKDashboardExtensionBundleIdentifier
|| __DATA_CONST.__const _GKExtensionBundleIdentifierKey
|| __DATA_CONST.__const _GKExtensionErrorDomain
|| __DATA_CONST.__const _GKExtensionItemAuthenticateModeKey
|| __DATA_CONST.__const _GKExtensionItemChallengeInternalKey
|| __DATA_CONST.__const _GKExtensionItemCurrentGameKey
|| __DATA_CONST.__const _GKExtensionItemDashboardAchievementID
|| __DATA_CONST.__const _GKExtensionItemDashboardGameBundleID
|| __DATA_CONST.__const _GKExtensionItemDashboardIsArcadeGame
|| __DATA_CONST.__const _GKExtensionItemDashboardLaunchedFromAccessPoint
|| __DATA_CONST.__const _GKExtensionItemDashboardLeaderboardID
|| __DATA_CONST.__const _GKExtensionItemDashboardLeaderboardInternal
|| __DATA_CONST.__const _GKExtensionItemDashboardPlayerID
|| __DATA_CONST.__const _GKExtensionItemDashboardPlayerScope
|| __DATA_CONST.__const _GKExtensionItemDashboardShowPlayForChallenge
|| __DATA_CONST.__const _GKExtensionItemDashboardTimeScope
|| __DATA_CONST.__const _GKExtensionItemDashboardViewState
|| __DATA_CONST.__const _GKExtensionItemForcePickerKey
|| __DATA_CONST.__const _GKExtensionItemHostPIDKey
|| __DATA_CONST.__const _GKExtensionItemHostUserInterfaceIdiomKey
|| __DATA_CONST.__const _GKExtensionItemLocalPlayerKey
|| __DATA_CONST.__const _GKExtensionItemLocalizationsKey
|| __DATA_CONST.__const _GKExtensionItemMatchesAcceptedInviteInternal
|| __DATA_CONST.__const _GKExtensionItemMatchesFastStartEnabled
|| __DATA_CONST.__const _GKExtensionItemMatchesHosted
|| __DATA_CONST.__const _GKExtensionItemMatchesMatchRequestInternal
|| __DATA_CONST.__const _GKExtensionItemMatchesMatchmakingMode
|| __DATA_CONST.__const _GKExtensionItemMatchesShowExistingMatches
|| __DATA_CONST.__const _GKExtensionItemMatchesShowPlayForMatch
|| __DATA_CONST.__const _GKExtensionItemMatchesShowQuitForMatch
|| __DATA_CONST.__const _GKExtensionItemMessageKey
|| __DATA_CONST.__const _GKExtensionItemPlayerInternalsKey
|| __DATA_CONST.__const _GKExtensionItemRTLKey
|| __DATA_CONST.__const _GKExtensionItemStatusBarHeightKey
|| __DATA_CONST.__const _GKExtensionMessageChallengeMessage
|| __DATA_CONST.__const _GKExtensionMessageCommandKey
|| __DATA_CONST.__const _GKExtensionMessageDashboardAssetNames
|| __DATA_CONST.__const _GKExtensionMessageLeaderboardNames
|| __DATA_CONST.__const _GKExtensionMessageLeaderboardSetNames
|| __DATA_CONST.__const _GKExtensionMessageParamKey
|| __DATA_CONST.__const _GKExtensionMessagePlayerID
|| __DATA_CONST.__const _GKExtensionMessagePlayerInternal
|| __DATA_CONST.__const _GKExtensionVisualEffectGroupName
|| __DATA_CONST.__const _GKFixedHeightSentinel
|| __DATA_CONST.__const _GKFriendCodeKey
|| __DATA_CONST.__const _GKFriendRecipientsKey
|| __DATA_CONST.__const _GKFriendSupportPageURLKey
|| __DATA_CONST.__const _GKGameCenterExtensionIsValidEntitlement
|| __DATA_CONST.__const _GKGameCenterExtensionPointName
|| __DATA_CONST.__const _GKGridLayoutKeyContentBoxMetricKey
|| __DATA_CONST.__const _GKGridLayoutKeyHeaderMetricKey
|| __DATA_CONST.__const _GKGridLayoutKeyPlaceholderMetricKey
|| __DATA_CONST.__const _GKGridLayoutKeySearchBarMetricKey
|| __DATA_CONST.__const _GKGridLayoutKeySearchPlaceholderMetricKey
|| __DATA_CONST.__const _GKGridLayoutKeySegmentedBoxMetricKey
|| __DATA_CONST.__const _GKGridLayoutKeySegmentedControlMetricKey
|| __DATA_CONST.__const _GKGridLayoutKeyShowMoreMetricKey
|| __DATA_CONST.__const _GKHostedAuthenticateModeKey
|| __DATA_CONST.__const _GKImageDataConsumerErrorDomain
|| __DATA_CONST.__const _GKLoadStateContentLoaded
|| __DATA_CONST.__const _GKLoadStateError
|| __DATA_CONST.__const _GKLoadStateInitial
|| __DATA_CONST.__const _GKLoadStateLoadingContent
|| __DATA_CONST.__const _GKLoadStateNoContent
|| __DATA_CONST.__const _GKLoadStateRefreshingContent
|| __DATA_CONST.__const _GKMatchmakerExtensionBundleIdentifier
|| __DATA_CONST.__const _GKRemoteUIAliasKey
|| __DATA_CONST.__const _GKRemoteUIAltDSIDKey
|| __DATA_CONST.__const _GKRemoteUIAppleIDKey
|| __DATA_CONST.__const _GKRemoteUIApplyThemeKey
|| __DATA_CONST.__const _GKRemoteUIAuthCancelURL
|| __DATA_CONST.__const _GKRemoteUIAuthErrorMessage
|| __DATA_CONST.__const _GKRemoteUIAuthOKURL
|| __DATA_CONST.__const _GKRemoteUIAuthPassword
|| __DATA_CONST.__const _GKRemoteUIAuthTitle
|| __DATA_CONST.__const _GKRemoteUIAuthTokenKey
|| __DATA_CONST.__const _GKRemoteUIAuthUserName
|| __DATA_CONST.__const _GKRemoteUIErrorDomain
|| __DATA_CONST.__const _GKRemoteUIFirstNameKey
|| __DATA_CONST.__const _GKRemoteUIIsAuthenticatedKey
|| __DATA_CONST.__const _GKRemoteUILastNameKey
|| __DATA_CONST.__const _GKRemoteUILayoutStyleKey
|| __DATA_CONST.__const _GKRemoteUIPlayerIDKey
|| __DATA_CONST.__const _GKRemoteUIPushTokenKey
|| __DATA_CONST.__const _GKRemoteUIShouldAllowNearbyMultiplayer
|| __DATA_CONST.__const _GKReporterDomainPlayerProfileDashboard
|| __DATA_CONST.__const _GKResourceLoaderDidBeginLoadingNotification
|| __DATA_CONST.__const _GKResourceLoaderDidIdleNotification
|| __DATA_CONST.__const _GKResourceLoaderDidLoadAllForReasonNotification
|| __DATA_CONST.__const _GKResourceLoaderLoadReasonUserInfoKey
|| __DATA_CONST.__const _GKSentFriendRequestNotificationName
|| __DATA_CONST.__const _GKSentFriendRequestPlayerListKey
|| __DATA_CONST.__const _GKServiceViewControllerCreatedNotification
|| __DATA_CONST.__const _GKServiceViewControllerNewHostPIDKey
|| __DATA_CONST.__const _GKSwipeStateAnimatingOpen
|| __DATA_CONST.__const _GKSwipeStateAnimatingShut
|| __DATA_CONST.__const _GKSwipeStateEditing
|| __DATA_CONST.__const _GKSwipeStateNothing
|| __DATA_CONST.__const _GKSwipeStateTracking
|| __DATA_CONST.__const _GKTournamentExtensionBundleIdentifier
|| __DATA_CONST.__const _GKTurnBasedMatchmakerExtensionBundleIdentifier
|| __DATA_CONST.__const _GKViewServiceCurrentGameKey
|| __DATA_CONST.__const _GKViewServiceHostPIDKey
|| __DATA_CONST.__const _GKViewServiceLocalPlayerKey
|| __DATA_CONST.__const _GKViewServiceStatusBarHeightKey
|| __DATA_CONST.__const _PSSpecifierGKGameKey
|| __DATA_CONST.__const _PSSpecifierGKGameSettingsKey
|| __DATA_DIRTY.__data _OBJC_METACLASS_$__TtC12GameCenterUI10AvatarView
|| __DATA_DIRTY.__data _OBJC_METACLASS_$__TtC12GameCenterUI11CloseButton
|| __DATA_DIRTY.__data _OBJC_METACLASS_$__TtC12GameCenterUI12HeaderButton
|| __DATA_DIRTY.__data _OBJC_METACLASS_$__TtC12GameCenterUI15AchievementCard
|| __DATA_DIRTY.__data _OBJC_METACLASS_$__TtC12GameCenterUI17DynamicTypeButton
|| __DATA_DIRTY.__data _OBJC_METACLASS_$__TtC12GameCenterUI17ProfileAvatarView
|| __DATA_DIRTY.__data _OBJC_METACLASS_$__TtC12GameCenterUI17SectionHeaderView
|| __DATA_DIRTY.__data _OBJC_METACLASS_$__TtC12GameCenterUI19SmallPlayerCardView
|| __DATA_DIRTY.__data _OBJC_METACLASS_$__TtC12GameCenterUI23GKMultiplayerStatusView
|| __DATA_DIRTY.__data _OBJC_METACLASS_$__TtC12GameCenterUI25BaseSmallFriendLockupView
|| __DATA_DIRTY.__data _OBJC_METACLASS_$__TtC12GameCenterUI38AchievementHighlightCollectionViewCell
|| __DATA_DIRTY.__data _OBJC_METACLASS_$__TtC12GameCenterUI42GKMultiplayerParticipantCollectionViewCell
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKChallengeDetailViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKChallengeListViewSectionHeader
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKDashboardCollectionViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKDashboardMultiplayerPickerViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKDashboardPlayerCell
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKDashboardPlayerPhotoView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKDashboardSectionHeaderView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKFocusHighlightingCollectionViewCell
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKFocusableButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKGameCenterViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKLeaderboardCell
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKLeaderboardMetadataView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKLeaderboardScoreCell
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKLoadingViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI10AvatarView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI11CloseButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI12HeaderButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI15AchievementCard
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI17DynamicTypeButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI17ProfileAvatarView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI17SectionHeaderView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI19SmallPlayerCardView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI23GKMultiplayerStatusView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI25BaseSmallFriendLockupView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI38AchievementHighlightCollectionViewCell
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__TtC12GameCenterUI42GKMultiplayerParticipantCollectionViewCell
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKChallengeDetailViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKChallengeListViewSectionHeader
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKDashboardCollectionViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKDashboardMultiplayerPickerViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKDashboardPlayerCell
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKDashboardPlayerPhotoView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKDashboardSectionHeaderView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKFocusHighlightingCollectionViewCell
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKFocusableButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKGameCenterViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKLeaderboardCell
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKLeaderboardMetadataView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKLeaderboardScoreCell
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKLoadingViewController
|| __TEXT.__const _JUScreenClassDynamicScreenSize
|| __TEXT.__text _GKClearAllOnboardingFlags
|| __TEXT.__text _GKClearCaches
|| __TEXT.__text _GKClearCoreRecencyBlackList
|| __TEXT.__text _GKClearOnboardingLastContactsIntegrationConsentDisplayedFlag
|| __TEXT.__text _GKClearOnboardingLastPersonalizationDisplayedFlag
|| __TEXT.__text _GKClearOnboardingLastPrivacyNoticeDisplayedFlag
|| __TEXT.__text _GKClearOnboardingLastProfilePrivacyDisplayedFlag
|| __TEXT.__text _GKExtensionProtocolSecureCodedClasses
|| __TEXT.__text _GKGetEnabledNotifications
|| __TEXT.__text _GKGetNotificationCenterEnabled
|| __TEXT.__text _GKHomeScreenIconsGetCornerRadius
|| __TEXT.__text _GKHomeScreenIconsGetScaledCornerRadiusForSize
|| __TEXT.__text _GKHomeScreenIconsGetSize
|| __TEXT.__text _GKPingDaemon
|| __TEXT.__text _GKSetAllOnboardingFlags
|| __TEXT.__text _GKSetNotificationCenterEnabled
|| __TEXT.__text _GKSetNotificationsEnabled
|| __TEXT.__text _GKTerminateDaemon
|| __TEXT.__text _IntegralPositionForBounds
|| __TEXT.__text _JUScreenClassFromLandscapeSize
|| __TEXT.__text _JUScreenClassFromPortraitSize
|| __TEXT.__text _JUScreenClassGetCornerRadius
|| __TEXT.__text _JUScreenClassGetLandscapeSize
|| __TEXT.__text _JUScreenClassGetLandscapeWidth
|| __TEXT.__text _JUScreenClassGetMain
|| __TEXT.__text _JUScreenClassGetMainIsZoomed
|| __TEXT.__text _JUScreenClassGetMainScale
|| __TEXT.__text _JUScreenClassGetPortraitSize
|| __TEXT.__text _JUScreenClassGetPortraitWidth
|| __TEXT.__text _JUScreenClassGetString
|| __TEXT.__text _JUScreenClassHasRoundedCorners
|| __TEXT.__text _JUScreenClassIsPad
|| __TEXT.__text _JUScreenClassIsPhone
|| __TEXT.__text _UIControlIsEnabled
|| __TEXT.__text _UIControlObserveIsEnabled
|| __TEXT.__text _UIControlSetEnabled
|| __TEXT.__text _UIRectCornerFromCACornerMask
|| __TEXT.__text _UIRectCornerToCACornerMask
|| __TEXT.__text __GKInterfaceOrientationName
|| __TEXT.__text __UIColorEffectPremultiplyColor
|| __TEXT.__text __gkRangeFromToDescription
__ Accelerate: _vImageBoxConvolve_ARGB8888
__ Accelerate: _vImageBuffer_Init
__ Accelerate: _vImageBuffer_InitWithCGImage
__ Accelerate: _vImageCreateCGImageFromBuffer
__ Accelerate: _vImageMatrixMultiply_ARGB8888
__ AppStoreComponents: _ASCArtworkDecorationMaskToCircle
__ AppStoreComponents: _ASCArtworkDecorationRoundedRect
__ AppStoreComponents: _ASCArtworkDecorationTVRect
__ AppStoreComponents: _ASCCollectionIDGamesForYou
__ AppStoreComponents: _ASCCollectionIDNewArcadeGames
__ AppStoreComponents: _ASCLockupContextGameCenter
__ AppStoreComponents: _ASCLockupContextGameCenterArcade
__ AppStoreComponents: _ASCLockupKindApp
__ AppStoreComponents: _ASCLockupViewSizeDefault
__ AppStoreComponents: _ASCLockupViewSizeGetEstimatedSize
__ AppStoreComponents: _ASCLockupViewSizeGetIconSize
__ AppStoreComponents: _ASCLockupViewSizeSmall
__ AppStoreComponents: _OBJC_CLASS_$_ASCAdamID
__ AppStoreComponents: _OBJC_CLASS_$_ASCArtwork
__ AppStoreComponents: _OBJC_CLASS_$_ASCCollectionRequest
__ AppStoreComponents: _OBJC_CLASS_$_ASCLockup
__ AppStoreComponents: _OBJC_CLASS_$_ASCLockupProductDetails
__ AppStoreComponents: _OBJC_CLASS_$_ASCLockupRequest
__ AppStoreComponents: _OBJC_CLASS_$_ASCLockupView
__ AppStoreComponents: _OBJC_CLASS_$_ASCLockupViewGroup
__ AppStoreComponents: _OBJC_CLASS_$_ASCOfferTheme
__ AppStoreComponents: _OBJC_CLASS_$__ASCLockupResponse
__ AppStoreComponents: __ASCLockupKeyAdamID
__ AppStoreComponents: __ASCLockupKeyIcon
__ AppStoreComponents: __ASCLockupKeyTitle
__ AppleAccount: _AASetupAssistantCountryKey
__ AppleAccount: _AASetupAssistantLanguageKey
__ AppleAccount: _AASetupAssistantTimezoneKey
__ AppleAccount: _OBJC_CLASS_$_AADeviceInfo
__ AppleAccount: _OBJC_CLASS_$_AASetupAssistantService
__ AppleAccount: _OBJC_CLASS_$_AAURLConfiguration
__ AppleAccountUI: _OBJC_CLASS_$_AAUISignInController
__ AppleIDSSOAuthentication: _AIDAServiceTypeGameCenter
__ AppleMediaServices: _OBJC_CLASS_$_AMSDefaults
__ AppleMediaServices: _OBJC_CLASS_$_AMSProcessInfo
__ AppleMediaServices: _OBJC_CLASS_$_AMSUserAgent
__ AuthKit: _AKAuthenticationAlternateDSIDKey
__ AuthKit: _AKAuthenticationNewAppleIDSetupInfoKey
__ AuthKit: _AKAuthenticationPasswordKey
__ AuthKit: _AKAuthenticationRawPasswordKey
__ AuthKit: _AKAuthenticationUsernameKey
__ AuthKit: _OBJC_CLASS_$_AKAppleIDAuthenticationController
__ AuthKit: _OBJC_CLASS_$_AKAppleIDSession
__ AuthKitUI: _OBJC_CLASS_$_AKAppleIDAuthenticationInAppContext
__ AuthKitUI: _OBJC_CLASS_$_AKInlineSignInViewController
__ CloudKit: _CKErrorDomain
__ Contacts: _CNContactEmailAddressesKey
__ Contacts: _CNContactFamilyNameKey
__ Contacts: _CNContactGivenNameKey
__ Contacts: _CNContactIdentifierKey
__ Contacts: _CNContactImageDataAvailableKey
__ Contacts: _CNContactImageDataKey
__ Contacts: _CNContactMiddleNameKey
__ Contacts: _CNContactNamePrefixKey
__ Contacts: _CNContactNameSuffixKey
__ Contacts: _CNContactNicknameKey
__ Contacts: _CNContactPhoneNumbersKey
__ Contacts: _CNContactPreviousFamilyNameKey
__ Contacts: _CNContactSectionForSortingByFamilyNameKey
__ Contacts: _CNContactSectionForSortingByGivenNameKey
__ Contacts: _CNContactThumbnailImageDataKey
__ Contacts: _CNContactTypeKey
__ Contacts: _CNLabelEmailiCloud
__ Contacts: _CNLabelHome
__ Contacts: _CNLabelPhoneNumberHomeFax
__ Contacts: _CNLabelPhoneNumberMain
__ Contacts: _CNLabelPhoneNumberMobile
__ Contacts: _CNLabelPhoneNumberOtherFax
__ Contacts: _CNLabelPhoneNumberPager
__ Contacts: _CNLabelPhoneNumberWorkFax
__ Contacts: _CNLabelPhoneNumberiPhone
__ Contacts: _OBJC_CLASS_$_CNContact
__ Contacts: _OBJC_CLASS_$_CNContactFetchRequest
__ Contacts: _OBJC_CLASS_$_CNContactFormatter
__ Contacts: _OBJC_CLASS_$_CNContactStore
__ Contacts: _OBJC_CLASS_$_CNContactsUserDefaults
__ Contacts: _OBJC_CLASS_$_CNLabeledValue
__ Contacts: _OBJC_CLASS_$_CNMutableContact
__ Contacts: _OBJC_CLASS_$_CNPhoneNumber
__ ContactsAutocompleteUI: _OBJC_CLASS_$_CNComposeRecipient
__ ContactsAutocompleteUI: _OBJC_CLASS_$_CNComposeRecipientTextView
__ ContactsAutocompleteUI: _OBJC_METACLASS_$_CNComposeRecipient
__ ContactsUI: _OBJC_CLASS_$_CNAvatarImageRenderer
__ ContactsUI: _OBJC_CLASS_$_CNAvatarImageRendererSettings
__ ContactsUI: _OBJC_CLASS_$_CNAvatarImageRenderingScope
__ ContactsUI: _OBJC_CLASS_$_CNContactPickerViewController
__ ContactsUI: _OBJC_CLASS_$_CNPhotoPickerViewController
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFDataGetBytePtr
__ CoreFoundation: _CFDataGetLength
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFUserNotificationDisplayAlert
__ CoreFoundation: _NSGenericException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSLocaleCountryCode
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCache
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMethodSignature
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFBooleanTrue
__ CoreGraphics: _CGAffineTransformIdentity
__ CoreGraphics: _CGAffineTransformMakeRotation
__ CoreGraphics: _CGAffineTransformMakeScale
__ CoreGraphics: _CGAffineTransformMakeTranslation
__ CoreGraphics: _CGAffineTransformRotate
__ CoreGraphics: _CGAffineTransformScale
__ CoreGraphics: _CGColorCreateGenericRGB
__ CoreGraphics: _CGColorGetAlpha
__ CoreGraphics: _CGColorGetNumberOfComponents
__ CoreGraphics: _CGContextAddPath
__ CoreGraphics: _CGContextBeginTransparencyLayer
__ CoreGraphics: _CGContextClipToMask
__ CoreGraphics: _CGContextConcatCTM
__ CoreGraphics: _CGContextDrawImage
__ CoreGraphics: _CGContextEndTransparencyLayer
__ CoreGraphics: _CGContextFillRect
__ CoreGraphics: _CGContextRestoreGState
__ CoreGraphics: _CGContextSaveGState
__ CoreGraphics: _CGContextScaleCTM
__ CoreGraphics: _CGContextSetAlpha
__ CoreGraphics: _CGContextSetBlendMode
__ CoreGraphics: _CGContextSetFillColorWithColor
__ CoreGraphics: _CGContextSetShadowWithColor
__ CoreGraphics: _CGContextTranslateCTM
__ CoreGraphics: _CGImageCreateWithImageInRect
__ CoreGraphics: _CGImageGetBitmapInfo
__ CoreGraphics: _CGImageGetHeight
__ CoreGraphics: _CGImageGetWidth
__ CoreGraphics: _CGImageRelease
__ CoreGraphics: _CGPathCreateMutable
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectApplyAffineTransform
__ CoreGraphics: _CGRectContainsPoint
__ CoreGraphics: _CGRectDivide
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetMidY
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectInset
__ CoreGraphics: _CGRectIntersectsRect
__ CoreGraphics: _CGRectIsEmpty
__ CoreGraphics: _CGRectNull
__ CoreGraphics: _CGRectOffset
__ CoreGraphics: _CGRectUnion
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ CoreServices: _OBJC_CLASS_$_LSApplicationWorkspace
__ CoreServices: _OBJC_CLASS_$__LSOpenConfiguration
__ CoreText: _CTFontGetBoundingRectsForGlyphs
__ CoreText: _CTLineCreateWithAttributedString
__ CoreText: _CTLineGetImageBounds
__ CoreText: _CTLineGetTypographicBounds
__ Foundation: _NSClassFromString
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSKeyValueChangeNewKey
__ Foundation: _NSKeyValueChangeOldKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLog
__ Foundation: _NSSelectorFromString
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSURLErrorDomain
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _NSUnionRange
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSBundleResourceRequest
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSCompoundPredicate
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSDistributedNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSExtension
__ Foundation: _OBJC_CLASS_$_NSExtensionContext
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSIndexPath
__ Foundation: _OBJC_CLASS_$_NSIndexSet
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSLayoutConstraint
__ Foundation: _OBJC_CLASS_$_NSLock
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableAttributedString
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSMutableURLRequest
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSOperation
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPersonNameComponents
__ Foundation: _OBJC_CLASS_$_NSPersonNameComponentsFormatter
__ Foundation: _OBJC_CLASS_$_NSPointerArray
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSTextCheckingResult
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLQueryItem
__ Foundation: _OBJC_CLASS_$_NSURLSession
__ Foundation: _OBJC_CLASS_$_NSURLSessionConfiguration
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_METACLASS_$_NSExtensionContext
__ Foundation: _OBJC_METACLASS_$_NSIndexPath
__ Foundation: _OBJC_METACLASS_$_NSOperation
__ Foundation: _OBJC_METACLASS_$_NSXPCInterface
__ Foundation: __NSDictionaryOfVariableBindings
__ FrontBoardServices: _FBSOpenApplicationOptionKeyPayloadAnnotation
__ FrontBoardServices: _FBSOpenApplicationOptionKeyPayloadURL
__ FrontBoardServices: _OBJC_CLASS_$_FBSOpenApplicationOptions
__ FrontBoardServices: _OBJC_CLASS_$_FBSOpenApplicationService
__ GameCenterFoundation: _GKAbsoluteTimeAsWhenString
__ GameCenterFoundation: _GKAcceptedGameInviteNotification
__ GameCenterFoundation: _GKActiveLogBits
__ GameCenterFoundation: _GKAddFriendFromLeaderboard
__ GameCenterFoundation: _GKAddFriendFromSettings
__ GameCenterFoundation: _GKAliasKey
__ GameCenterFoundation: _GKAppStoreIdentifier
__ GameCenterFoundation: _GKApplicationLinkedOnOrAfter
__ GameCenterFoundation: _GKAtomicCompareAndSwap32
__ GameCenterFoundation: _GKAtomicDecrement32
__ GameCenterFoundation: _GKAtomicIncrement32
__ GameCenterFoundation: _GKAvatarSubdirectoryNameForPlayerID
__ GameCenterFoundation: _GKBlacklistedContactIdKey
__ GameCenterFoundation: _GKCancelledGameInviteNotification
__ GameCenterFoundation: _GKContextInvite
__ GameCenterFoundation: _GKDashboardAchievementDetail
__ GameCenterFoundation: _GKDashboardChallengeChicletNeedsUpdate
__ GameCenterFoundation: _GKDashboardChallengeDetail
__ GameCenterFoundation: _GKDashboardFriendScoreDetail
__ GameCenterFoundation: _GKDashboardFriendsOnScoreList
__ GameCenterFoundation: _GKDashboardMeScoreDetail
__ GameCenterFoundation: _GKDashboardOthersScoreDetail
__ GameCenterFoundation: _GKDashboardRankOnFriendScoreDetail
__ GameCenterFoundation: _GKDashboardRankOnMeScoreDetail
__ GameCenterFoundation: _GKDashboardRankOnOthersScoreDetail
__ GameCenterFoundation: _GKDashboardRankOnShareFriendScore
__ GameCenterFoundation: _GKDashboardRankOnShareMeScore
__ GameCenterFoundation: _GKDashboardScoreList
__ GameCenterFoundation: _GKDashboardShareAchievement
__ GameCenterFoundation: _GKDashboardShareFriendScore
__ GameCenterFoundation: _GKDashboardShareMeScore
__ GameCenterFoundation: _GKDefaultIForgotURL
__ GameCenterFoundation: _GKErrorDomain
__ GameCenterFoundation: _GKFindGamesKey
__ GameCenterFoundation: _GKFormattedStringFromInteger
__ GameCenterFoundation: _GKFormattedStringFromPercentInteger
__ GameCenterFoundation: _GKFormattedStringWithGroupingFromInteger
__ GameCenterFoundation: _GKFriendRequestCancelSending
__ GameCenterFoundation: _GKFriendRequestCancelled
__ GameCenterFoundation: _GKFriendRequestCannotSendError
__ GameCenterFoundation: _GKFriendRequestCreated
__ GameCenterFoundation: _GKFriendRequestFailSending
__ GameCenterFoundation: _GKFriendRequestRestrictedError
__ GameCenterFoundation: _GKFriendRequestSent
__ GameCenterFoundation: _GKGameCenterIdentifier
__ GameCenterFoundation: _GKGameCenterMessageExtensionIdentifier
__ GameCenterFoundation: _GKGameCenterUIFrameworkBundle
__ GameCenterFoundation: _GKGameDaemonIdentifier
__ GameCenterFoundation: _GKGameLayerDashboardLeaderboardScores
__ GameCenterFoundation: _GKGameLayerDashboardLeaderboards
__ GameCenterFoundation: _GKGameLayerDashboardOccurrenceChangedToCurrent
__ GameCenterFoundation: _GKGameLayerDashboardOccurrenceChangedToPrevious
__ GameCenterFoundation: _GKGameLayerDashboardPlayerScopeChangedToFriends
__ GameCenterFoundation: _GKGameLayerDashboardPlayerScopeChangedToGlobal
__ GameCenterFoundation: _GKGameLayerDashboardPlayerScopeChangedToRecents
__ GameCenterFoundation: _GKGameLayerDashboardScoresViewPlayerChallenged
__ GameCenterFoundation: _GKGameLayerDashboardScoresViewPlayerProfileViewed
__ GameCenterFoundation: _GKGameLayerDashboardScoresViewScoreShared
__ GameCenterFoundation: _GKGameLayerDashboardScoresViewScrolledToTop
__ GameCenterFoundation: _GKGameLayerDashboardTimeScopeChangedToAllTime
__ GameCenterFoundation: _GKGameLayerDashboardTimeScopeChangedToToday
__ GameCenterFoundation: _GKGameLayerDashboardTimeScopeChangedToWeek
__ GameCenterFoundation: _GKGameLayerDashboardTimeSpentOnArcadeScreen
__ GameCenterFoundation: _GKGameLayerDashboardTimeSpentOnChallengesScreen
__ GameCenterFoundation: _GKGameLayerDashboardTimeSpentOnLeaderboardsScreen
__ GameCenterFoundation: _GKGameLayerDashboardTimeSpentOnPlayerProfileScreen
__ GameCenterFoundation: _GKGetApplicationWillEnterForegroundNotificationName
__ GameCenterFoundation: _GKGetApplicationWillTerminateNotificationName
__ GameCenterFoundation: _GKGetGamesPlayedDescriptorsWithinSecondsKey
__ GameCenterFoundation: _GKGetLocalizedStringFromTableInBundle
__ GameCenterFoundation: _GKGroupActivityPlayerToInviteNotification
__ GameCenterFoundation: _GKImageURLKeyForSize
__ GameCenterFoundation: _GKInternalTurnBasedGameEventNotification
__ GameCenterFoundation: _GKInviteFlowCancelAutomatching
__ GameCenterFoundation: _GKInviteFlowComposeCancel
__ GameCenterFoundation: _GKInviteFlowConnectingCancel
__ GameCenterFoundation: _GKInviteFlowContactsPlayer
__ GameCenterFoundation: _GKInviteFlowDetailAdd
__ GameCenterFoundation: _GKInviteFlowDetailCancel
__ GameCenterFoundation: _GKInviteFlowDetailSelection
__ GameCenterFoundation: _GKInviteFlowFastStartCouldNotBeUsed
__ GameCenterFoundation: _GKInviteFlowFastStartUsed
__ GameCenterFoundation: _GKInviteFlowFriendPlayer
__ GameCenterFoundation: _GKInviteFlowGameSupportsFastStart
__ GameCenterFoundation: _GKInviteFlowInitialCancel
__ GameCenterFoundation: _GKInviteFlowInviteFriends
__ GameCenterFoundation: _GKInviteFlowLaunchPickerToInviteAdditionalPlayers
__ GameCenterFoundation: _GKInviteFlowMessageBasedInvites
__ GameCenterFoundation: _GKInviteFlowNearByPlayer
__ GameCenterFoundation: _GKInviteFlowPlayNow
__ GameCenterFoundation: _GKInviteFlowPushedBasedInvites
__ GameCenterFoundation: _GKInviteFlowRTGameFailed
__ GameCenterFoundation: _GKInviteFlowRTInviteeConnectionTime
__ GameCenterFoundation: _GKInviteFlowRTNoOfInvitees
__ GameCenterFoundation: _GKInviteFlowRemoveInvitedPlayer
__ GameCenterFoundation: _GKInviteFlowSendMessage
__ GameCenterFoundation: _GKInviteFlowStart
__ GameCenterFoundation: _GKInviteFlowTypedInContacts
__ GameCenterFoundation: _GKInviteIDKey
__ GameCenterFoundation: _GKMetricsEventApp
__ GameCenterFoundation: _GKMetricsEventImpressions
__ GameCenterFoundation: _GKMetricsEventPage
__ GameCenterFoundation: _GKMetricsEventPageContext
__ GameCenterFoundation: _GKMetricsEventPageId
__ GameCenterFoundation: _GKMetricsEventPageType
__ GameCenterFoundation: _GKMetricsEventRefApp
__ GameCenterFoundation: _GKMultiplayerCancelTimeDelayInSeconds
__ GameCenterFoundation: _GKMultiplayerContext
__ GameCenterFoundation: _GKMultiplayerFriendSelectionImpression
__ GameCenterFoundation: _GKOSLogInit
__ GameCenterFoundation: _GKParticipantStatusAllTrace
__ GameCenterFoundation: _GKParticipantStatusFailureTrace
__ GameCenterFoundation: _GKPickerAddCustomMessage
__ GameCenterFoundation: _GKPickerExpandPlayerGroup
__ GameCenterFoundation: _GKPickerGameCenterGroupSelected
__ GameCenterFoundation: _GKPickerMessageGroupSelected
__ GameCenterFoundation: _GKPickerNearbyPlayerSelected
__ GameCenterFoundation: _GKPickerSearchBarClicked
__ GameCenterFoundation: _GKPickerSearchForPlayers
__ GameCenterFoundation: _GKPickerSelectPlayersFromSearchResults
__ GameCenterFoundation: _GKPlayerAuthenticationDidChangeNotificationName
__ GameCenterFoundation: _GKPlayerDidAuthenticateOldPlayerIDKey
__ GameCenterFoundation: _GKPlayerIDHashAddKey
__ GameCenterFoundation: _GKPlayerIDHashModKey
__ GameCenterFoundation: _GKPlayerIDKey
__ GameCenterFoundation: _GKPlayerProfileAchievementsByGameClicked
__ GameCenterFoundation: _GKPlayerProfileAddFriendsClicked
__ GameCenterFoundation: _GKPlayerProfileContactsIntegrationConsentToggled
__ GameCenterFoundation: _GKPlayerProfileFriendListAccessClicked
__ GameCenterFoundation: _GKPlayerProfileFriendRequstsClicked
__ GameCenterFoundation: _GKPlayerProfileFriendsAPIGlobalAccessToggled
__ GameCenterFoundation: _GKPlayerProfileFriendsAPIIndividualAccessToggled
__ GameCenterFoundation: _GKPlayerProfileFriendsListClicked
__ GameCenterFoundation: _GKPlayerProfileNearbyPlayersButtonToggled
__ GameCenterFoundation: _GKPlayerProfilePrivacyAndSettingsClicked
__ GameCenterFoundation: _GKPlayerProfilePrivacyChoiceSelected
__ GameCenterFoundation: _GKPlayerProfileRecentlyPlayedWithClicked
__ GameCenterFoundation: _GKPlayerProfileSignInButtonClicked
__ GameCenterFoundation: _GKPlayerProfileSignOutButtonClicked
__ GameCenterFoundation: _GKPlayerProfileVisitFromOrigin
__ GameCenterFoundation: _GKPlayersToInviteNotification
__ GameCenterFoundation: _GKQueryParamsBagKey
__ GameCenterFoundation: _GKRealtimeMatchFromGameCenterUI
__ GameCenterFoundation: _GKRefreshDataTypeAsString
__ GameCenterFoundation: _GKRemoteAlertDeeplinkActionIdentifierKey
__ GameCenterFoundation: _GKRemoteAlertDeeplinkActionKey
__ GameCenterFoundation: _GKRemoteAlertDeeplinkActionLeaderboardValue
__ GameCenterFoundation: _GKRemoteAlertDeeplinkGameBundleIdentifierKey
__ GameCenterFoundation: _GKRemoteUIAuthorizeAccountURLKey
__ GameCenterFoundation: _GKRemoteUIEditAccountURLKey
__ GameCenterFoundation: _GKRemoteUILinkAccountsURLKey
__ GameCenterFoundation: _GKRemoteUIReportProblemURLKey
__ GameCenterFoundation: _GKReporterAccessPointAchievementHighlightTapped
__ GameCenterFoundation: _GKReporterAccessPointButtonTapped
__ GameCenterFoundation: _GKReporterAccessPointDisabled
__ GameCenterFoundation: _GKReporterAccessPointEnabled
__ GameCenterFoundation: _GKReporterAccessPointForYouHighlightTapped
__ GameCenterFoundation: _GKReporterAccessPointHighlightTapped
__ GameCenterFoundation: _GKReporterAccessPointLeaderboardHighlightTapped
__ GameCenterFoundation: _GKReporterAccessPointShowHighlightsDisabled
__ GameCenterFoundation: _GKReporterAccessPointShowHighlightsEnabled
__ GameCenterFoundation: _GKReporterDomainArcadeDashboard
__ GameCenterFoundation: _GKReporterDomainArcadeNewArcadeGamesTapped
__ GameCenterFoundation: _GKReporterDomainArcadeOpenInTheAppStoreTapped
__ GameCenterFoundation: _GKReporterDomainArcadeSeeAllFriendsPlayingTapped
__ GameCenterFoundation: _GKReporterDomainDashboard
__ GameCenterFoundation: _GKReporterDomainDashboardAccessPoint
__ GameCenterFoundation: _GKReporterDomainFriendRequestInbox
__ GameCenterFoundation: _GKReporterDomainFriendRequestInboxAccept
__ GameCenterFoundation: _GKReporterDomainFriendRequestInboxContactsSwitchOff
__ GameCenterFoundation: _GKReporterDomainFriendRequestInboxContactsSwitchOn
__ GameCenterFoundation: _GKReporterDomainFriendRequestInboxDecline
__ GameCenterFoundation: _GKReporterDomainFriendRequestInboxFriendRequestCount
__ GameCenterFoundation: _GKReporterDomainGameControllerSupport
__ GameCenterFoundation: _GKReporterDomainGameDetail
__ GameCenterFoundation: _GKReporterDomainGameLayerDashboard
__ GameCenterFoundation: _GKReporterDomainInviteFlow
__ GameCenterFoundation: _GKReporterDomainInviteParticipantStatusUpdate
__ GameCenterFoundation: _GKReporterDomainManualFriending
__ GameCenterFoundation: _GKReporterDomainMultiplayerContactSelected
__ GameCenterFoundation: _GKReporterDomainMultiplayerFriendSelected
__ GameCenterFoundation: _GKReporterDomainMultiplayerPlayerSelectionDashboard
__ GameCenterFoundation: _GKReporterDomainMultiplayerRecentlyPlayedWithSelected
__ GameCenterFoundation: _GKReporterDomainOnboardingEvent
__ GameCenterFoundation: _GKReporterDomainPlayerAuthentication
__ GameCenterFoundation: _GKReporterDomainRTMultiplayerConnectionResult
__ GameCenterFoundation: _GKReporterDomainSettings
__ GameCenterFoundation: _GKReporterGameControllerConnected
__ GameCenterFoundation: _GKReporterGameControllerUsedInGameLayer
__ GameCenterFoundation: _GKReporterGameControllerUsedToShowDashboard
__ GameCenterFoundation: _GKReporterGameDetailShowStorePage
__ GameCenterFoundation: _GKReporterGameMetadata
__ GameCenterFoundation: _GKReporterHighlightedAccessPointDisplayed
__ GameCenterFoundation: _GKReporterOnboardingAvatarDeleted
__ GameCenterFoundation: _GKReporterOnboardingAvatarEditingCancelled
__ GameCenterFoundation: _GKReporterOnboardingAvatarTapped
__ GameCenterFoundation: _GKReporterOnboardingAvatarUpdated
__ GameCenterFoundation: _GKReporterOnboardingCompleted
__ GameCenterFoundation: _GKReporterOnboardingContactsIntegrationConsentAccepted
__ GameCenterFoundation: _GKReporterOnboardingContactsIntegrationConsentBack
__ GameCenterFoundation: _GKReporterOnboardingContactsIntegrationConsentDisplayed
__ GameCenterFoundation: _GKReporterOnboardingContactsIntegrationConsentOptInNavigated
__ GameCenterFoundation: _GKReporterOnboardingContactsIntegrationConsentOptOutNavigated
__ GameCenterFoundation: _GKReporterOnboardingContactsIntegrationConsentServerError
__ GameCenterFoundation: _GKReporterOnboardingContactsIntegrationConsentSkipped
__ GameCenterFoundation: _GKReporterOnboardingDefaultNicknameChanged
__ GameCenterFoundation: _GKReporterOnboardingDuration
__ GameCenterFoundation: _GKReporterOnboardingErrorUpdatingAvatar
__ GameCenterFoundation: _GKReporterOnboardingNicknameEditingCancelled
__ GameCenterFoundation: _GKReporterOnboardingNicknameTapped
__ GameCenterFoundation: _GKReporterOnboardingNicknameUpdatedSuccessfully
__ GameCenterFoundation: _GKReporterOnboardingNotNowPressed
__ GameCenterFoundation: _GKReporterOnboardingPersonalizationAcknowledged
__ GameCenterFoundation: _GKReporterOnboardingPersonalizationBack
__ GameCenterFoundation: _GKReporterOnboardingPersonalizationDismissed
__ GameCenterFoundation: _GKReporterOnboardingPersonalizationImpression
__ GameCenterFoundation: _GKReporterOnboardingPersonalizationNavigated
__ GameCenterFoundation: _GKReporterOnboardingPrivacyAcknowledged
__ GameCenterFoundation: _GKReporterOnboardingProfileCreatedAcknowledged
__ GameCenterFoundation: _GKReporterOnboardingProfileCreatedDismissed
__ GameCenterFoundation: _GKReporterOnboardingProfileCreatedImpression
__ GameCenterFoundation: _GKReporterOnboardingProfilePrivacyAcknowledged
__ GameCenterFoundation: _GKReporterOnboardingProfilePrivacyBack
__ GameCenterFoundation: _GKReporterOnboardingProfilePrivacyChoiceSelected
__ GameCenterFoundation: _GKReporterOnboardingProfilePrivacyDismissed
__ GameCenterFoundation: _GKReporterOnboardingProfilePrivacyImpression
__ GameCenterFoundation: _GKReporterOnboardingProfilePrivacyNavigated
__ GameCenterFoundation: _GKReporterOnboardingProfilePrivacyServerError
__ GameCenterFoundation: _GKReporterOnboardingSignOutCanceled
__ GameCenterFoundation: _GKReporterOnboardingSignOutTapped
__ GameCenterFoundation: _GKReporterOnboardingSignedOut
__ GameCenterFoundation: _GKReporterOnboardingTerminated
__ GameCenterFoundation: _GKReporterOnboardingWelcomeImpression
__ GameCenterFoundation: _GKReporterOnboardingWelcomeNavigated
__ GameCenterFoundation: _GKReporterOnboardingWhatsNewImpression
__ GameCenterFoundation: _GKReporterOnboardingWhatsNewNavigated
__ GameCenterFoundation: _GKReporterPlayerAuthenticationElapsedTimeWithUI
__ GameCenterFoundation: _GKReporterPlayerAuthenticationLoginCancel
__ GameCenterFoundation: _GKReporterPlayerAuthenticationPlayerAuthenticated
__ GameCenterFoundation: _GKReporterPlayerAuthenticationStart
__ GameCenterFoundation: _GKReporterSettingsProfilePrivacy
__ GameCenterFoundation: _GKReporterSettingsProfilePrivacyFrom
__ GameCenterFoundation: _GKReporterSettingsProfilePrivacyTo
__ GameCenterFoundation: _GKServerPlatformStringMacOS
__ GameCenterFoundation: _GKServerPlatformStringTVOS
__ GameCenterFoundation: _GKServerPlatformStringWatchOS
__ GameCenterFoundation: _GKServerPlatformStringiOS
__ GameCenterFoundation: _GKServerStatusCode
__ GameCenterFoundation: _GKUISetRemote
__ GameCenterFoundation: _OBJC_CLASS_$_GKAchievement
__ GameCenterFoundation: _OBJC_CLASS_$_GKAchievementChallenge
__ GameCenterFoundation: _OBJC_CLASS_$_GKAchievementDescription
__ GameCenterFoundation: _OBJC_CLASS_$_GKActivity
__ GameCenterFoundation: _OBJC_CLASS_$_GKApplicationWorkspace
__ GameCenterFoundation: _OBJC_CLASS_$_GKAutomatchPlayerInternal
__ GameCenterFoundation: _OBJC_CLASS_$_GKChallenge
__ GameCenterFoundation: _OBJC_CLASS_$_GKChallengeEventHandler
__ GameCenterFoundation: _OBJC_CLASS_$_GKChallengeInternal
__ GameCenterFoundation: _OBJC_CLASS_$_GKDaemonProxy
__ GameCenterFoundation: _OBJC_CLASS_$_GKDevice
__ GameCenterFoundation: _OBJC_CLASS_$_GKDispatchGroup
__ GameCenterFoundation: _OBJC_CLASS_$_GKFriendPlayerInternal
__ GameCenterFoundation: _OBJC_CLASS_$_GKFriendRequestURLModel
__ GameCenterFoundation: _OBJC_CLASS_$_GKGame
__ GameCenterFoundation: _OBJC_CLASS_$_GKGameDescriptor
__ GameCenterFoundation: _OBJC_CLASS_$_GKGameHighlightInternal
__ GameCenterFoundation: _OBJC_CLASS_$_GKGameInternal
__ GameCenterFoundation: _OBJC_CLASS_$_GKGameRecord
__ GameCenterFoundation: _OBJC_CLASS_$_GKGameRecordInternal
__ GameCenterFoundation: _OBJC_CLASS_$_GKGameSettingsInternal
__ GameCenterFoundation: _OBJC_CLASS_$_GKGameSummaryInternal
__ GameCenterFoundation: _OBJC_CLASS_$_GKInviteInternal
__ GameCenterFoundation: _OBJC_CLASS_$_GKLeaderboard
__ GameCenterFoundation: _OBJC_CLASS_$_GKLeaderboardEntry
__ GameCenterFoundation: _OBJC_CLASS_$_GKLeaderboardScore
__ GameCenterFoundation: _OBJC_CLASS_$_GKLeaderboardSet
__ GameCenterFoundation: _OBJC_CLASS_$_GKLocalPlayer
__ GameCenterFoundation: _OBJC_CLASS_$_GKLocalPlayerInternal
__ GameCenterFoundation: _OBJC_CLASS_$_GKMatch
__ GameCenterFoundation: _OBJC_CLASS_$_GKMatchRequest
__ GameCenterFoundation: _OBJC_CLASS_$_GKMatchRequestInternal
__ GameCenterFoundation: _OBJC_CLASS_$_GKMatchmaker
__ GameCenterFoundation: _OBJC_CLASS_$_GKOperationQueue
__ GameCenterFoundation: _OBJC_CLASS_$_GKPlayer
__ GameCenterFoundation: _OBJC_CLASS_$_GKPlayerActivityItemInternal
__ GameCenterFoundation: _OBJC_CLASS_$_GKPlayerActivityRelationshipAchievement
__ GameCenterFoundation: _OBJC_CLASS_$_GKPlayerActivityRelationshipGame
__ GameCenterFoundation: _OBJC_CLASS_$_GKPlayerActivityRelationshipLeaderboard
__ GameCenterFoundation: _OBJC_CLASS_$_GKPlayerActivityRelationshipLeaderboardScore
__ GameCenterFoundation: _OBJC_CLASS_$_GKPlayerActivityRelationshipPlayer
__ GameCenterFoundation: _OBJC_CLASS_$_GKPlayerActivitySectionInternal
__ GameCenterFoundation: _OBJC_CLASS_$_GKPlayerActivitySpecialItemInternal
__ GameCenterFoundation: _OBJC_CLASS_$_GKPlayerCredentialController
__ GameCenterFoundation: _OBJC_CLASS_$_GKPlayerInternal
__ GameCenterFoundation: _OBJC_CLASS_$_GKPreferences
__ GameCenterFoundation: _OBJC_CLASS_$_GKReachability
__ GameCenterFoundation: _OBJC_CLASS_$_GKReporter
__ GameCenterFoundation: _OBJC_CLASS_$_GKScore
__ GameCenterFoundation: _OBJC_CLASS_$_GKScoreChallenge
__ GameCenterFoundation: _OBJC_CLASS_$_GKServiceInterface
__ GameCenterFoundation: _OBJC_CLASS_$_GKThreadsafeCache
__ GameCenterFoundation: _OBJC_CLASS_$_GKTournament
__ GameCenterFoundation: _OBJC_CLASS_$_GKTurnBasedMatch
__ GameCenterFoundation: _OBJC_CLASS_$_GKTurnBasedMatchInternal
__ GameCenterFoundation: _OBJC_CLASS_$_GKUnauthenticatedPlayerInternal
__ GameCenterFoundation: _OBJC_CLASS_$_GKUpdateGroup
__ GameCenterFoundation: _OBJC_CLASS_$__GKStateMachine
__ GameCenterFoundation: _OBJC_METACLASS_$_GKReporter
__ GameCenterFoundation: _OBJC_METACLASS_$__GKStateMachine
__ GameCenterFoundation: __GKIsRemoteUI
__ GameCenterFoundation: __gkBeautifyVariableName
__ GameCenterFoundation: __gkTabStringForTabLevel
__ GameCenterFoundation: __gkUnicodifyDescription
__ GameCenterFoundation: _gk_dispatch_as_group
__ GameCenterFoundation: _gk_dispatch_async_do
__ GameCenterFoundation: _gk_dispatch_debounce
__ GameCenterFoundation: _gk_dispatch_group_do
__ GameCenterFoundation: _os_log_GKLogCollectionView
__ GameCenterFoundation: _os_log_GKLogContacts
__ GameCenterFoundation: _os_log_GKLogDeveloper
__ GameCenterFoundation: _os_log_GKLogError
__ GameCenterFoundation: _os_log_GKLogGeneral
__ GameCenterFoundation: _os_log_GKLogHosted
__ GameCenterFoundation: _os_log_GKLogMatch
__ GameCenterFoundation: _os_log_GKLogOnboarding
__ GameCenterFoundation: _os_log_GKLogTrace
__ GameCenterUICore: _GKIsAvatarEditingSupported
__ GameCenterUICore: _GKShouldLayoutRTL
__ GameCenterUICore: _OBJC_CLASS_$_GKAvatarImage
__ GameCenterUICore: _OBJC_CLASS_$_GKCircleImageBrush
__ GameCenterUICore: _OBJC_CLASS_$_GKColorPalette
__ GameCenterUICore: _OBJC_CLASS_$_GKGameMessagesBrush
__ GameCenterUICore: _OBJC_CLASS_$_GKImageContext
__ GameCenterUICore: _OBJC_CLASS_$_GKLocalImageSource
__ GameCenterUICore: _OBJC_CLASS_$_GKLocalPlayerAuthenticator
__ GameCenterUICore: _OBJC_CLASS_$_GKLoginAlertView
__ GameCenterUICore: _OBJC_CLASS_$_GKMacGameIconBrush
__ GameCenterUICore: _OBJC_CLASS_$_GKNetworkImageSource
__ GameCenterUICore: _OBJC_CLASS_$_GKScreenConfigurationController
__ GameCenterUICore: _OBJC_CLASS_$_GKTextStyle
__ GameCenterUICore: _OBJC_CLASS_$_GKTextStyleFocus
__ GameCenterUICore: _OBJC_CLASS_$_GKTextStylePad
__ GameCenterUICore: _OBJC_CLASS_$_GKTextStylePhone
__ GameCenterUICore: _OBJC_CLASS_$_GKThemeBrush
__ GameCenterUICore: _OBJC_CLASS_$_GKUITheme
__ GameCenterUICore: _OBJC_CLASS_$_GKiOSAppIconBrush
__ GameCenterUICore: _OBJC_CLASS_$_GKiOSAppIconBrushShare
__ GameCenterUICore: _OBJC_METACLASS_$_GKThemeBrush
__ GameCenterUICore: __GKIsClientAppUsingRTL
__ GameCenterUICore: __GKIsRemoteUIUsingPadIdiom
__ IMCore: _IMSPIGetGroupPhotosForChatsWithGroupIDs
__ IMCore: _IMSPISendMessageWithAttachments
__ IMCore: _IMSPISendMessageWithAttachmentsToMany
__ IMCore: _IMSPISendRichLink
__ IMCore: _IMSPISendRichLinkToMany
__ IMCore: _IMSPIiMessageService
__ IMCore: _IMStringIsEmail
__ IMCore: _IMStringIsPhoneNumber
__ JetEngine: _JECountFormatterMakeStringFromNumber
__ JetUI: _JUMeasurementsZero
__ JetUI: _JUMeasuringSizeCompressed
__ JetUI: _OBJC_METACLASS_$__TtC5JetUI16CustomLayoutView
__ LinkPresentation: _OBJC_CLASS_$_LPGameCenterInvitationMetadata
__ LinkPresentation: _OBJC_CLASS_$_LPImage
__ LinkPresentation: _OBJC_CLASS_$_LPLinkMetadata
__ LinkPresentation: _OBJC_CLASS_$_LPMessagesPayload
__ MessageUI: _OBJC_CLASS_$_MFMessageComposeViewController
__ Messages: _OBJC_CLASS_$_MSMessage
__ Messages: _OBJC_CLASS_$_MSMessageLiveLayout
__ Messages: _OBJC_CLASS_$_MSMessageTemplateLayout
__ Messages: _OBJC_CLASS_$_MSSession
__ MobileIcons: _LIIconContinuousCornerRadiusForVariant
__ MobileIcons: _LIIconOutputSizeForVariant
__ OnBoardingKit: _OBJC_CLASS_$_OBBoldTrayButton
__ OnBoardingKit: _OBJC_CLASS_$_OBHeaderView
__ OnBoardingKit: _OBJC_CLASS_$_OBLinkTrayButton
__ OnBoardingKit: _OBJC_CLASS_$_OBPrivacyLinkController
__ OnBoardingKit: _OBJC_CLASS_$_OBPrivacyPresenter
__ OnBoardingKit: _OBJC_CLASS_$_OBTrayButton
__ OnBoardingKit: _OBPrivacyGameCenterIdentifier
__ PeopleSuggester: _OBJC_CLASS_$__PSContactSuggester
__ PeopleSuggester: _OBJC_CLASS_$__PSRecipient
__ PeopleSuggester: _OBJC_CLASS_$__PSSuggestion
__ PersonaUI: _OBJC_CLASS_$_PRMonogramColor
__ Preferences: _OBJC_CLASS_$_PSListController
__ Preferences: _OBJC_CLASS_$_PSSpecifier
__ Preferences: _OBJC_CLASS_$_PSSwitchTableCell
__ Preferences: _OBJC_IVAR_$_PSListController._specifiers
__ Preferences: _OBJC_METACLASS_$_PSListController
__ Preferences: _OBJC_METACLASS_$_PSSwitchTableCell
__ Preferences: _PSCellClassKey
__ Preferences: _PSEnabledKey
__ Preferences: _PSFooterTextGroupKey
__ Preferences: _PSIconImageKey
__ Preferences: _PSShouldInsetListView
__ QuartzCore: _CAColorMatrixMakeSaturation
__ QuartzCore: _CACurrentMediaTime
__ QuartzCore: _CATransform3DIdentity
__ QuartzCore: _CATransform3DIsIdentity
__ QuartzCore: _CATransform3DMakeScale
__ QuartzCore: _CATransform3DMakeTranslation
__ QuartzCore: _OBJC_CLASS_$_CABasicAnimation
__ QuartzCore: _OBJC_CLASS_$_CAGradientLayer
__ QuartzCore: _OBJC_CLASS_$_CALayer
__ QuartzCore: _OBJC_CLASS_$_CAMediaTimingFunction
__ QuartzCore: _OBJC_CLASS_$_CAShapeLayer
__ QuartzCore: _OBJC_CLASS_$_CASpringAnimation
__ QuartzCore: _OBJC_CLASS_$_CATransaction
__ QuartzCore: _OBJC_CLASS_$_CATransition
__ QuartzCore: _OBJC_METACLASS_$_CALayer
__ QuartzCore: _kCACornerCurveContinuous
__ QuartzCore: _kCAFillModeBoth
__ QuartzCore: _kCAFillModeForwards
__ QuartzCore: _kCAFillRuleEvenOdd
__ QuartzCore: _kCAFilterPlusD
__ QuartzCore: _kCAFilterPlusL
__ QuartzCore: _kCAFilterXor
__ QuartzCore: _kCAGradientLayerRadial
__ QuartzCore: _kCALineCapRound
__ QuartzCore: _kCAMediaTimingFunctionEaseIn
__ QuartzCore: _kCAMediaTimingFunctionEaseInEaseOut
__ QuartzCore: _kCAMediaTimingFunctionEaseOut
__ QuartzCore: _kCAMediaTimingFunctionLinear
__ QuartzCore: _kCATransactionDisableActions
__ QuartzCore: _kCATransitionFade
__ RemoteUI: _OBJC_CLASS_$_RemoteUIController
__ SafariServices: _OBJC_CLASS_$_SFSafariViewController
__ ScreenTimeUI: _OBJC_CLASS_$_STRemotePasscodeController
__ ScreenTimeUI: _STNotificationKeyPINSuccess
__ ScreenTimeUI: _STRestrictionsPINControllerDidFinishNotification
__ SoftLinking: __sl_dlopen
__ StoreKit: _OBJC_CLASS_$_SKStoreProductViewController
__ UIKit: _NSAttachmentAttributeName
__ UIKit: _NSBaselineOffsetAttributeName
__ UIKit: _NSDirectionalEdgeInsetsZero
__ UIKit: _NSFontAttributeName
__ UIKit: _NSForegroundColorAttributeName
__ UIKit: _NSLinkAttributeName
__ UIKit: _NSParagraphStyleAttributeName
__ UIKit: _NSStringFromCGRect
__ UIKit: _NSStringFromUIEdgeInsets
__ UIKit: _NSTextStorageDidProcessEditingNotification
__ UIKit: _NSUnderlineStyleAttributeName
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutAnchor
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutBoundarySupplementaryItem
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutDecorationItem
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutDimension
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutGroup
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutItem
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutSection
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutSize
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutSpacing
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutSupplementaryItem
__ UIKit: _OBJC_CLASS_$_NSLayoutManager
__ UIKit: _OBJC_CLASS_$_NSMutableParagraphStyle
__ UIKit: _OBJC_CLASS_$_NSParagraphStyle
__ UIKit: _OBJC_CLASS_$_NSTextAttachment
__ UIKit: _OBJC_CLASS_$_NSTextContainer
__ UIKit: _OBJC_CLASS_$_NSTextStorage
__ UIKit: _OBJC_CLASS_$_UIAction
__ UIKit: _OBJC_CLASS_$_UIActivityIndicatorView
__ UIKit: _OBJC_CLASS_$_UIActivityViewController
__ UIKit: _OBJC_CLASS_$_UIAlertAction
__ UIKit: _OBJC_CLASS_$_UIAlertController
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIBarButtonItem
__ UIKit: _OBJC_CLASS_$_UIBezierPath
__ UIKit: _OBJC_CLASS_$_UIBlurEffect
__ UIKit: _OBJC_CLASS_$_UIButton
__ UIKit: _OBJC_CLASS_$_UICollectionReusableView
__ UIKit: _OBJC_CLASS_$_UICollectionView
__ UIKit: _OBJC_CLASS_$_UICollectionViewCell
__ UIKit: _OBJC_CLASS_$_UICollectionViewCompositionalLayout
__ UIKit: _OBJC_CLASS_$_UICollectionViewCompositionalLayoutConfiguration
__ UIKit: _OBJC_CLASS_$_UICollectionViewController
__ UIKit: _OBJC_CLASS_$_UICollectionViewFlowLayout
__ UIKit: _OBJC_CLASS_$_UICollectionViewLayout
__ UIKit: _OBJC_CLASS_$_UICollectionViewLayoutAttributes
__ UIKit: _OBJC_CLASS_$_UICollectionViewLayoutInvalidationContext
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIColorEffect
__ UIKit: _OBJC_CLASS_$_UIContentUnavailableConfiguration
__ UIKit: _OBJC_CLASS_$_UIContentUnavailableView
__ UIKit: _OBJC_CLASS_$_UIContextMenuConfiguration
__ UIKit: _OBJC_CLASS_$_UIContextualAction
__ UIKit: _OBJC_CLASS_$_UIControl
__ UIKit: _OBJC_CLASS_$_UICubicTimingParameters
__ UIKit: _OBJC_CLASS_$_UIDevice
__ UIKit: _OBJC_CLASS_$_UIFocusGuide
__ UIKit: _OBJC_CLASS_$_UIFocusHaloEffect
__ UIKit: _OBJC_CLASS_$_UIFocusSystem
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIFontDescriptor
__ UIKit: _OBJC_CLASS_$_UIFontMetrics
__ UIKit: _OBJC_CLASS_$_UIGraphicsImageRenderer
__ UIKit: _OBJC_CLASS_$_UIGraphicsImageRendererFormat
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageSymbolConfiguration
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UIKeyboard
__ UIKit: _OBJC_CLASS_$_UILabel
__ UIKit: _OBJC_CLASS_$_UILocalizedIndexedCollation
__ UIKit: _OBJC_CLASS_$_UILongPressGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIMenu
__ UIKit: _OBJC_CLASS_$_UIMenuElement
__ UIKit: _OBJC_CLASS_$_UINavigationBar
__ UIKit: _OBJC_CLASS_$_UINavigationBarAppearance
__ UIKit: _OBJC_CLASS_$_UINavigationController
__ UIKit: _OBJC_CLASS_$_UINib
__ UIKit: _OBJC_CLASS_$_UIPanGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIPopoverPresentationController
__ UIKit: _OBJC_CLASS_$_UIPress
__ UIKit: _OBJC_CLASS_$_UIPreviewParameters
__ UIKit: _OBJC_CLASS_$_UIPreviewTarget
__ UIKit: _OBJC_CLASS_$_UIScene
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UIScrollView
__ UIKit: _OBJC_CLASS_$_UISearchBar
__ UIKit: _OBJC_CLASS_$_UISearchController
__ UIKit: _OBJC_CLASS_$_UISegmentedControl
__ UIKit: _OBJC_CLASS_$_UISplitViewController
__ UIKit: _OBJC_CLASS_$_UIStackView
__ UIKit: _OBJC_CLASS_$_UISwipeActionsConfiguration
__ UIKit: _OBJC_CLASS_$_UISwitch
__ UIKit: _OBJC_CLASS_$_UITableView
__ UIKit: _OBJC_CLASS_$_UITableViewCell
__ UIKit: _OBJC_CLASS_$_UITableViewController
__ UIKit: _OBJC_CLASS_$_UITapGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UITargetedPreview
__ UIKit: _OBJC_CLASS_$_UITextField
__ UIKit: _OBJC_CLASS_$_UITextSuggestion
__ UIKit: _OBJC_CLASS_$_UITextView
__ UIKit: _OBJC_CLASS_$_UITouch
__ UIKit: _OBJC_CLASS_$_UITraitCollection
__ UIKit: _OBJC_CLASS_$_UIVibrancyEffect
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_CLASS_$_UIViewPropertyAnimator
__ UIKit: _OBJC_CLASS_$_UIVisualEffect
__ UIKit: _OBJC_CLASS_$_UIVisualEffectView
__ UIKit: _OBJC_CLASS_$_UIWindow
__ UIKit: _OBJC_CLASS_$_UIWindowScene
__ UIKit: _OBJC_CLASS_$__UIBackdropView
__ UIKit: _OBJC_CLASS_$__UICollectionViewListLayoutSection
__ UIKit: _OBJC_CLASS_$__UICollectionViewListLayoutSectionConfiguration
__ UIKit: _OBJC_CLASS_$__UIContentUnavailableView
__ UIKit: _OBJC_CLASS_$__UIDynamicAnimationActiveValue
__ UIKit: _OBJC_CLASS_$__UIDynamicValueAnimation
__ UIKit: _OBJC_CLASS_$__UIFallbackPresentationViewController
__ UIKit: _OBJC_CLASS_$__UIImageSymbolConfiguration
__ UIKit: _OBJC_CLASS_$__UINavigationBarPalette
__ UIKit: _OBJC_CLASS_$__UIRemoteViewController
__ UIKit: _OBJC_CLASS_$__UISheetPresentationController
__ UIKit: _OBJC_METACLASS_$_UIButton
__ UIKit: _OBJC_METACLASS_$_UICollectionReusableView
__ UIKit: _OBJC_METACLASS_$_UICollectionView
__ UIKit: _OBJC_METACLASS_$_UICollectionViewCell
__ UIKit: _OBJC_METACLASS_$_UICollectionViewController
__ UIKit: _OBJC_METACLASS_$_UICollectionViewFlowLayout
__ UIKit: _OBJC_METACLASS_$_UICollectionViewLayout
__ UIKit: _OBJC_METACLASS_$_UICollectionViewLayoutAttributes
__ UIKit: _OBJC_METACLASS_$_UICollectionViewLayoutInvalidationContext
__ UIKit: _OBJC_METACLASS_$_UIControl
__ UIKit: _OBJC_METACLASS_$_UIFocusGuide
__ UIKit: _OBJC_METACLASS_$_UIImageView
__ UIKit: _OBJC_METACLASS_$_UILabel
__ UIKit: _OBJC_METACLASS_$_UINavigationController
__ UIKit: _OBJC_METACLASS_$_UIScrollView
__ UIKit: _OBJC_METACLASS_$_UISearchBar
__ UIKit: _OBJC_METACLASS_$_UISplitViewController
__ UIKit: _OBJC_METACLASS_$_UISwitch
__ UIKit: _OBJC_METACLASS_$_UITableViewController
__ UIKit: _OBJC_METACLASS_$_UITapGestureRecognizer
__ UIKit: _OBJC_METACLASS_$_UITextField
__ UIKit: _OBJC_METACLASS_$_UITextView
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _OBJC_METACLASS_$_UIVisualEffectView
__ UIKit: _OBJC_METACLASS_$_UIWindow
__ UIKit: _OBJC_METACLASS_$__UIContentUnavailableView
__ UIKit: _OBJC_METACLASS_$__UIRemoteViewController
__ UIKit: _UIAccessibilityTraitButton
__ UIKit: _UIAccessibilityTraitImage
__ UIKit: _UIAccessibilityTraitSelected
__ UIKit: _UIActivityTypeMail
__ UIKit: _UIApplicationDidEnterBackgroundNotification
__ UIKit: _UIApplicationWillEnterForegroundNotification
__ UIKit: _UICollectionElementKindSectionFooter
__ UIKit: _UICollectionElementKindSectionHeader
__ UIKit: _UIContentSizeCategoryAccessibilityExtraExtraExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityExtraExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityLarge
__ UIKit: _UIContentSizeCategoryAccessibilityMedium
__ UIKit: _UIContentSizeCategoryDidChangeNotification
__ UIKit: _UIContentSizeCategoryExtraExtraExtraLarge
__ UIKit: _UIContentSizeCategoryExtraExtraLarge
__ UIKit: _UIContentSizeCategoryExtraLarge
__ UIKit: _UIContentSizeCategoryIsAccessibilityCategory
__ UIKit: _UIContentSizeCategoryLarge
__ UIKit: _UIContentSizeCategoryMedium
__ UIKit: _UIContentSizeCategoryUnspecified
__ UIKit: _UIEdgeInsetsZero
__ UIKit: _UIFontDescriptorFeatureSettingsAttribute
__ UIKit: _UIFontDescriptorSystemDesignRounded
__ UIKit: _UIFontDescriptorTextStyleAttribute
__ UIKit: _UIFontFeatureSelectorIdentifierKey
__ UIKit: _UIFontFeatureTypeIdentifierKey
__ UIKit: _UIFontSystemFontDesignRounded
__ UIKit: _UIFontTextStyleBody
__ UIKit: _UIFontTextStyleCaption1
__ UIKit: _UIFontTextStyleCaption2
__ UIKit: _UIFontTextStyleFootnote
__ UIKit: _UIFontTextStyleHeadline
__ UIKit: _UIFontTextStyleLargeTitle
__ UIKit: _UIFontTextStyleSubhead
__ UIKit: _UIFontTextStyleSubheadline
__ UIKit: _UIFontTextStyleTitle0
__ UIKit: _UIFontTextStyleTitle1
__ UIKit: _UIFontTextStyleTitle2
__ UIKit: _UIFontTextStyleTitle3
__ UIKit: _UIFontWeightBold
__ UIKit: _UIFontWeightHeavy
__ UIKit: _UIFontWeightMedium
__ UIKit: _UIFontWeightRegular
__ UIKit: _UIFontWeightSemibold
__ UIKit: _UIGraphicsBeginImageContextWithOptions
__ UIKit: _UIGraphicsEndImageContext
__ UIKit: _UIGraphicsGetCurrentContext
__ UIKit: _UIGraphicsGetImageFromCurrentImageContext
__ UIKit: _UIGraphicsPopContext
__ UIKit: _UIGraphicsPushContext
__ UIKit: _UIImagePNGRepresentation
__ UIKit: _UIKeyboardAnimationDurationUserInfoKey
__ UIKit: _UIKeyboardFrameEndUserInfoKey
__ UIKit: _UIKeyboardWillHideNotification
__ UIKit: _UIKeyboardWillShowNotification
__ UIKit: _UIRectCenteredXInRect
__ UIKit: _UIRectCenteredYInRect
__ UIKit: _UIRectFillUsingBlendMode
__ UIKit: _UITableViewAutomaticDimension
__ UIKit: _UITextFieldTextDidChangeNotification
__ UIKit: _UITransitionContextFromViewControllerKey
__ UIKit: _UITransitionContextToViewControllerKey
__ UIKit: _UIViewNoIntrinsicMetric
__ UIKit: __UICollectionViewListSectionSeparatorInsetHidden
__ UIKit: __UIDynamicAnimationFrictionHigh
__ UIKit: __UIDynamicAnimationUnitSizeTranslation
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _MGGetFloat32Answer
__ libMobileGestalt.dylib: _MGGetSInt32Answer
__ libMobileGestalt.dylib: _MGGetStringAnswer
__ libSystem.B.dylib: _OBJC_CLASS_$_OS_dispatch_queue
__ libSystem.B.dylib: __Block_copy
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __Block_release
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___sincos_stret
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_barrier_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dladdr
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _fmod
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _malloc_size
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _sandbox_extension_consume
__ libSystem.B.dylib: _sandbox_extension_release
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _class_respondsToSelector
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_allocWithZone
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x10
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x10
__ libobjc.A.dylib: _objc_retain_x11
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x27
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x5
__ libobjc.A.dylib: _objc_retain_x6
__ libobjc.A.dylib: _objc_retain_x7
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_retain_x9
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _protocol_copyMethodDescriptionList
__ libobjc.A.dylib: _protocol_getMethodDescription
__ libobjc.A.dylib: _sel_getName
__ libswiftCore.dylib: _OBJC_CLASS_$__TtCs12_SwiftObject
__ libswiftCore.dylib: _OBJC_METACLASS_$__TtCs12_SwiftObject
__ libswiftCore.dylib: __swiftEmptyArrayStorage
__ libswiftCore.dylib: __swiftEmptyDictionarySingleton
__ libswiftCore.dylib: __swiftEmptySetSingleton
__ libswiftCore.dylib: __swift_stdlib_reportUnimplementedInitializer
__ libswiftCore.dylib: _swift_allocBox
__ libswiftCore.dylib: _swift_allocError
__ libswiftCore.dylib: _swift_allocObject
__ libswiftCore.dylib: _swift_allocateGenericClassMetadata
__ libswiftCore.dylib: _swift_allocateGenericValueMetadata
__ libswiftCore.dylib: _swift_arrayAssignWithTake
__ libswiftCore.dylib: _swift_arrayDestroy
__ libswiftCore.dylib: _swift_arrayInitWithCopy
__ libswiftCore.dylib: _swift_arrayInitWithTakeBackToFront
__ libswiftCore.dylib: _swift_arrayInitWithTakeFrontToBack
__ libswiftCore.dylib: _swift_beginAccess
__ libswiftCore.dylib: _swift_bridgeObjectRelease
__ libswiftCore.dylib: _swift_bridgeObjectRelease_n
__ libswiftCore.dylib: _swift_bridgeObjectRetain
__ libswiftCore.dylib: _swift_bridgeObjectRetain_n
__ libswiftCore.dylib: _swift_checkMetadataState
__ libswiftCore.dylib: _swift_conformsToProtocol
__ libswiftCore.dylib: _swift_deallocClassInstance
__ libswiftCore.dylib: _swift_deallocObject
__ libswiftCore.dylib: _swift_deallocPartialClassInstance
__ libswiftCore.dylib: _swift_deallocUninitializedObject
__ libswiftCore.dylib: _swift_deletedMethodError
__ libswiftCore.dylib: _swift_dynamicCast
__ libswiftCore.dylib: _swift_dynamicCastClass
__ libswiftCore.dylib: _swift_dynamicCastClassUnconditional
__ libswiftCore.dylib: _swift_dynamicCastObjCClass
__ libswiftCore.dylib: _swift_dynamicCastObjCClassUnconditional
__ libswiftCore.dylib: _swift_dynamicCastObjCProtocolConditional
__ libswiftCore.dylib: _swift_dynamicCastUnknownClass
__ libswiftCore.dylib: _swift_endAccess
__ libswiftCore.dylib: _swift_errorRelease
__ libswiftCore.dylib: _swift_errorRetain
__ libswiftCore.dylib: _swift_getAssociatedConformanceWitness
__ libswiftCore.dylib: _swift_getAssociatedTypeWitness
__ libswiftCore.dylib: _swift_getAtKeyPath
__ libswiftCore.dylib: _swift_getEnumCaseMultiPayload
__ libswiftCore.dylib: _swift_getEnumTagSinglePayloadGeneric
__ libswiftCore.dylib: _swift_getErrorValue
__ libswiftCore.dylib: _swift_getForeignTypeMetadata
__ libswiftCore.dylib: _swift_getGenericMetadata
__ libswiftCore.dylib: _swift_getKeyPath
__ libswiftCore.dylib: _swift_getObjCClassFromMetadata
__ libswiftCore.dylib: _swift_getObjCClassFromObject
__ libswiftCore.dylib: _swift_getObjCClassMetadata
__ libswiftCore.dylib: _swift_getObjectType
__ libswiftCore.dylib: _swift_getOpaqueTypeConformance
__ libswiftCore.dylib: _swift_getOpaqueTypeMetadata
__ libswiftCore.dylib: _swift_getSingletonMetadata
__ libswiftCore.dylib: _swift_getTupleTypeLayout2
__ libswiftCore.dylib: _swift_getTupleTypeMetadata2
__ libswiftCore.dylib: _swift_getTypeByMangledNameInContext
__ libswiftCore.dylib: _swift_getTypeByMangledNameInContextInMetadataState
__ libswiftCore.dylib: _swift_getWitnessTable
__ libswiftCore.dylib: _swift_initClassMetadata2
__ libswiftCore.dylib: _swift_initEnumMetadataMultiPayload
__ libswiftCore.dylib: _swift_initStackObject
__ libswiftCore.dylib: _swift_initStaticObject
__ libswiftCore.dylib: _swift_initStructMetadata
__ libswiftCore.dylib: _swift_isEscapingClosureAtFileLocation
__ libswiftCore.dylib: _swift_isUniquelyReferenced_nonNull_bridgeObject
__ libswiftCore.dylib: _swift_isUniquelyReferenced_nonNull_native
__ libswiftCore.dylib: _swift_isaMask
__ libswiftCore.dylib: _swift_lookUpClassMethod
__ libswiftCore.dylib: _swift_makeBoxUnique
__ libswiftCore.dylib: _swift_once
__ libswiftCore.dylib: _swift_projectBox
__ libswiftCore.dylib: _swift_readAtKeyPath
__ libswiftCore.dylib: _swift_release
__ libswiftCore.dylib: _swift_release_n
__ libswiftCore.dylib: _swift_retain
__ libswiftCore.dylib: _swift_retain_n
__ libswiftCore.dylib: _swift_setAtReferenceWritableKeyPath
__ libswiftCore.dylib: _swift_setDeallocating
__ libswiftCore.dylib: _swift_slowAlloc
__ libswiftCore.dylib: _swift_stdlib_random
__ libswiftCore.dylib: _swift_storeEnumTagMultiPayload
__ libswiftCore.dylib: _swift_storeEnumTagSinglePayloadGeneric
__ libswiftCore.dylib: _swift_unknownObjectRelease
__ libswiftCore.dylib: _swift_unknownObjectRetain
__ libswiftCore.dylib: _swift_unknownObjectRetain_n
__ libswiftCore.dylib: _swift_unknownObjectWeakAssign
__ libswiftCore.dylib: _swift_unknownObjectWeakCopyAssign
__ libswiftCore.dylib: _swift_unknownObjectWeakCopyInit
__ libswiftCore.dylib: _swift_unknownObjectWeakDestroy
__ libswiftCore.dylib: _swift_unknownObjectWeakInit
__ libswiftCore.dylib: _swift_unknownObjectWeakLoadStrong
__ libswiftCore.dylib: _swift_unknownObjectWeakTakeAssign
__ libswiftCore.dylib: _swift_unknownObjectWeakTakeInit
__ libswiftCore.dylib: _swift_updateClassMetadata2
__ libswiftCore.dylib: _swift_weakAssign
__ libswiftCore.dylib: _swift_weakDestroy
__ libswiftCore.dylib: _swift_weakInit
__ libswiftCore.dylib: _swift_weakLoadStrong
__ libswiftCore.dylib: _swift_willThrow
__ libswift_Concurrency.dylib: _swift_continuation_await
__ libswift_Concurrency.dylib: _swift_continuation_init
__ libswift_Concurrency.dylib: _swift_continuation_resume
__ libswift_Concurrency.dylib: _swift_continuation_throwingResume
__ libswift_Concurrency.dylib: _swift_continuation_throwingResumeWithError
__ libswift_Concurrency.dylib: _swift_deletedAsyncMethodErrorTu
__ libswift_Concurrency.dylib: _swift_task_alloc
__ libswift_Concurrency.dylib: _swift_task_create
__ libswift_Concurrency.dylib: _swift_task_dealloc
__ libswift_Concurrency.dylib: _swift_task_switch
GKFocusHighlightingCollectionViewCell : UICollectionViewCell
 @property  UIView *focusHighlightView
 @property  {UIEdgeInsets=dddd} _gkFocusHighlightInsets
 @property  double _gkFocusHighlightCornerRadius

  // instance methods
  -[GKFocusHighlightingCollectionViewCell didUpdateFocusInContext:withAnimationCoordinator:]
  -[GKFocusHighlightingCollectionViewCell .cxx_destruct]
  -[GKFocusHighlightingCollectionViewCell focusHighlightView]
  -[GKFocusHighlightingCollectionViewCell setFocusHighlightView:]
  -[GKFocusHighlightingCollectionViewCell initWithFrame:]
  -[GKFocusHighlightingCollectionViewCell awakeFromNib]
  -[GKFocusHighlightingCollectionViewCell initFocusHighlightView]
  -[GKFocusHighlightingCollectionViewCell updateFocusHighlightView]
  -[GKFocusHighlightingCollectionViewCell _gkFocusHighlightInsets]
  -[GKFocusHighlightingCollectionViewCell set_gkFocusHighlightInsets:]
  -[GKFocusHighlightingCollectionViewCell _gkFocusHighlightCornerRadius]
  -[GKFocusHighlightingCollectionViewCell set_gkFocusHighlightCornerRadius:]


GKBaseContentUnavailableView : _UIContentUnavailableView

GKTimeScopeButton : GKDynamicButton
 @property  long long timeScope
 @property  long long leaderboardOccurrence

  // instance methods
  -[GKTimeScopeButton timeScope]
  -[GKTimeScopeButton _commonInit]
  -[GKTimeScopeButton initWithFrame:]
  -[GKTimeScopeButton awakeFromNib]
  -[GKTimeScopeButton setTimeScope:]
  -[GKTimeScopeButton setLeaderboardOccurrence:]
  -[GKTimeScopeButton updateWithTitle:]
  -[GKTimeScopeButton leaderboardOccurrence]


GKDashboardPlayerCell : GKFocusHighlightingCollectionViewCell
 @property  UIColor *nameColor
 @property  UIColor *statusColor
 @property  double playerViewBottomToNameLabelTopConstant
 @property  GKPlayer *player
 @property  BOOL onDarkBackground
 @property  UIColor *defaultContentBackgroundColor
 @property  UIView *popoverSourceView
 @property  GKDashboardPlayerShadowView *playerView
 @property  NSLayoutConstraint *playerViewBottomToNameLabelTopConstraint
 @property  UILabel *nameLabel
 @property  UILabel *statusLabel

  // class methods
  +[GKDashboardPlayerCell defaultSize]
  +[GKDashboardPlayerCell preferredCollectionHeight]

  // instance methods
  -[GKDashboardPlayerCell canBecomeFocused]
  -[GKDashboardPlayerCell setSelected:]
  -[GKDashboardPlayerCell .cxx_destruct]
  -[GKDashboardPlayerCell player]
  -[GKDashboardPlayerCell setHighlighted:]
  -[GKDashboardPlayerCell setPlayerView:]
  -[GKDashboardPlayerCell playerView]
  -[GKDashboardPlayerCell nameLabel]
  -[GKDashboardPlayerCell setPlayer:]
  -[GKDashboardPlayerCell awakeFromNib]
  -[GKDashboardPlayerCell popoverSourceView]
  -[GKDashboardPlayerCell setNameLabel:]
  -[GKDashboardPlayerCell setStatusText:]
  -[GKDashboardPlayerCell setOnDarkBackground:]
  -[GKDashboardPlayerCell setNameText:]
  -[GKDashboardPlayerCell setStatusWithLastPlayedDate:]
  -[GKDashboardPlayerCell updateLabelColorForDashboard]
  -[GKDashboardPlayerCell onDarkBackground]
  -[GKDashboardPlayerCell defaultContentBackgroundColor]
  -[GKDashboardPlayerCell setDefaultContentBackgroundColor:]
  -[GKDashboardPlayerCell playerViewBottomToNameLabelTopConstraint]
  -[GKDashboardPlayerCell setPlayerViewBottomToNameLabelTopConstraint:]
  -[GKDashboardPlayerCell statusLabel]
  -[GKDashboardPlayerCell setStatusLabel:]
  -[GKDashboardPlayerCell nameColor]
  -[GKDashboardPlayerCell setNameColor:]
  -[GKDashboardPlayerCell statusColor]
  -[GKDashboardPlayerCell setStatusColor:]
  -[GKDashboardPlayerCell playerViewBottomToNameLabelTopConstant]
  -[GKDashboardPlayerCell setPlayerViewBottomToNameLabelTopConstant:]


GKGameInviteComposeController : GKSimpleComposeController
  // instance methods
  -[GKGameInviteComposeController loadView]
  -[GKGameInviteComposeController init]


GKUnifiedRecipient : NSObject
 @property  NSString *fullName
 @property  NSString *handle
 @property  NSString *nickName
 @property  NSString *label
 @property  CNContact *contact

  // class methods
  +[GKUnifiedRecipient recipientForHandle:]
  +[GKUnifiedRecipient recipientForContact:]

  // instance methods
  -[GKUnifiedRecipient setHandle:]
  -[GKUnifiedRecipient fullName]
  -[GKUnifiedRecipient contact]
  -[GKUnifiedRecipient nickName]
  -[GKUnifiedRecipient setFullName:]
  -[GKUnifiedRecipient setLabel:]
  -[GKUnifiedRecipient handle]
  -[GKUnifiedRecipient .cxx_destruct]
  -[GKUnifiedRecipient label]
  -[GKUnifiedRecipient setNickName:]
  -[GKUnifiedRecipient displayName]
  -[GKUnifiedRecipient setContact:]


GKLoadContactResourceOperation : GKLoadResourceOperation
 @property  CNAvatarImageRenderer *monogrammer
 @property  NSString *contactId

  // class methods
  +[GKLoadContactResourceOperation mainScreenScale]

  // instance methods
  -[GKLoadContactResourceOperation .cxx_destruct]
  -[GKLoadContactResourceOperation contactId]
  -[GKLoadContactResourceOperation main]
  -[GKLoadContactResourceOperation monogrammer]
  -[GKLoadContactResourceOperation setMonogrammer:]
  -[GKLoadContactResourceOperation initWithContactId:]
  -[GKLoadContactResourceOperation makeFetchError]


GKDashboardTurnDetailDataSource : GKCollectionDataSource
 @property  GKTurnBasedMatch *match

  // instance methods
  -[GKDashboardTurnDetailDataSource collectionView:cellForItemAtIndexPath:]
  -[GKDashboardTurnDetailDataSource setMatch:]
  -[GKDashboardTurnDetailDataSource numberOfSectionsInCollectionView:]
  -[GKDashboardTurnDetailDataSource itemCount]
  -[GKDashboardTurnDetailDataSource collectionView:layout:sizeForItemAtIndexPath:]
  -[GKDashboardTurnDetailDataSource .cxx_destruct]
  -[GKDashboardTurnDetailDataSource match]
  -[GKDashboardTurnDetailDataSource loadDataWithCompletionHandler:]
  -[GKDashboardTurnDetailDataSource preferredCollectionHeight]
  -[GKDashboardTurnDetailDataSource setupCollectionView:]
  -[GKDashboardTurnDetailDataSource initWithMatch:]
  -[GKDashboardTurnDetailDataSource itemForIndexPath:]
  -[GKDashboardTurnDetailDataSource sectionHeaderText]


GKAccountRemoteUIController : GKRemoteUIController
 @property  NSArray *availableExternalServices
 @property  long long mode
 @property  BOOL authenticatePlayerOnCompletion
 @property  NSURL *url
 @property  NSDictionary *postBody

  // class methods
  +[GKAccountRemoteUIController accountRemoteUIControllerForPlayer:mode:completionHandler:]
  +[GKAccountRemoteUIController accountRemoteUIControllerForPlayer:mode:url:postBody:completionHandler:]

  // instance methods
  -[GKAccountRemoteUIController fallbackURL]
  -[GKAccountRemoteUIController setUrl:]
  -[GKAccountRemoteUIController initWithMode:]
  -[GKAccountRemoteUIController bagKey]
  -[GKAccountRemoteUIController mode]
  -[GKAccountRemoteUIController .cxx_destruct]
  -[GKAccountRemoteUIController setMode:]
  -[GKAccountRemoteUIController url]
  -[GKAccountRemoteUIController fireCompletionHandler]
  -[GKAccountRemoteUIController postBodyForInitialLoad]
  -[GKAccountRemoteUIController takeValuesFromClientInfo:withCompletionHandler:]
  -[GKAccountRemoteUIController initWithMode:player:]
  -[GKAccountRemoteUIController updatePostbackDictionary:withHandler:]
  -[GKAccountRemoteUIController availableExternalServices]
  -[GKAccountRemoteUIController setAvailableExternalServices:]
  -[GKAccountRemoteUIController authenticatePlayerOnCompletion]
  -[GKAccountRemoteUIController setAuthenticatePlayerOnCompletion:]
  -[GKAccountRemoteUIController postBody]
  -[GKAccountRemoteUIController setPostBody:]


GKSegmentInfo : NSObject <_GKStateMachineDelegate>
 @property  <GKSegmentInfoDelegagte> *delegate
 @property  GKCollectionViewDataSource *dataSource
 @property  NSString *title
 @property  GKPlaceholderContentStateMachine *loadingMatchine
 @property  NSString *loadingState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKSegmentInfo initWithDataSource:]
  -[GKSegmentInfo dataSource]
  -[GKSegmentInfo setDelegate:]
  -[GKSegmentInfo delegate]
  -[GKSegmentInfo .cxx_destruct]
  -[GKSegmentInfo title]
  -[GKSegmentInfo setDataSource:]
  -[GKSegmentInfo setTitle:]
  -[GKSegmentInfo loadingState]
  -[GKSegmentInfo setLoadingState:]
  -[GKSegmentInfo didEnterLoadingState]
  -[GKSegmentInfo didExitLoadingState]
  -[GKSegmentInfo didEnterNoContentState]
  -[GKSegmentInfo didEnterErrorState]
  -[GKSegmentInfo loadingMatchine]
  -[GKSegmentInfo setLoadingMatchine:]


GKSegmentedSectionDataSource : GKCollectionViewDataSource <GKSegmentInfoDelegagte>
 @property  NSMutableArray *segmentInfos
 @property  GKSegmentedSectionHeaderView *headerView
 @property  GKCollectionViewPlaceholderView *placeholderView
 @property  GKSegmentInfo *selectedSegmentInfo
 @property  BOOL waitingForAnimation
 @property  GKCollectionViewDataSource *rootDataSource
 @property  NSArray *dataSources
 @property  GKCollectionViewDataSource *selectedDataSource
 @property  BOOL usePlaceholder
 @property  BOOL shouldHideSegment
 @property  unsigned long selectedDataSourceIndex
 @property  NSString *noContentTitle
 @property  NSString *noContentMessage
 @property  NSString *noContentButtonTitle
 @property  id noContentButtonTarget
 @property  SEL noContentButtonAction
 @property  Class segmentedHeaderClass

  // instance methods
  -[GKSegmentedSectionDataSource addDataSource:]
  -[GKSegmentedSectionDataSource collectionView:cellForItemAtIndexPath:]
  -[GKSegmentedSectionDataSource collectionView:viewForSupplementaryElementOfKind:atIndexPath:]
  -[GKSegmentedSectionDataSource setHeaderView:]
  -[GKSegmentedSectionDataSource setPlaceholderView:]
  -[GKSegmentedSectionDataSource numberOfSectionsInCollectionView:]
  -[GKSegmentedSectionDataSource headerView]
  -[GKSegmentedSectionDataSource .cxx_destruct]
  -[GKSegmentedSectionDataSource itemAtIndexPath:]
  -[GKSegmentedSectionDataSource selectedDataSource]
  -[GKSegmentedSectionDataSource removeDataSource:]
  -[GKSegmentedSectionDataSource placeholderView]
  -[GKSegmentedSectionDataSource dataSources]
  -[GKSegmentedSectionDataSource collectionView:numberOfItemsInSection:]
  -[GKSegmentedSectionDataSource initWithDataSources:]
  -[GKSegmentedSectionDataSource segmentInfos]
  -[GKSegmentedSectionDataSource _gkDescriptionWithChildren:]
  -[GKSegmentedSectionDataSource configureCollectionView:]
  -[GKSegmentedSectionDataSource configureSegmentedHeader:]
  -[GKSegmentedSectionDataSource collectionView:evaluateFactoryForSupplementaryElementOfKind:atIndexPath:isRecursive:]
  -[GKSegmentedSectionDataSource createMetricsTreeWithGridLayout:]
  -[GKSegmentedSectionDataSource collectionViewWillBecomeActive:]
  -[GKSegmentedSectionDataSource collectionViewDidBecomeInactive:]
  -[GKSegmentedSectionDataSource segmentDidChangeLoadingState:]
  -[GKSegmentedSectionDataSource initWithDataSources:rootDataSource:]
  -[GKSegmentedSectionDataSource setShouldHideSegment:]
  -[GKSegmentedSectionDataSource infoForSegment:]
  -[GKSegmentedSectionDataSource infoForDataSource:]
  -[GKSegmentedSectionDataSource allTitles]
  -[GKSegmentedSectionDataSource infosChanged]
  -[GKSegmentedSectionDataSource setTitle:forDataSource:]
  -[GKSegmentedSectionDataSource dataSourceForSection:]
  -[GKSegmentedSectionDataSource updatePlaceholderNotify:]
  -[GKSegmentedSectionDataSource dataSourceWillLoad]
  -[GKSegmentedSectionDataSource dataSourceDidLoad]
  -[GKSegmentedSectionDataSource groupDidLoad:]
  -[GKSegmentedSectionDataSource selectedSegmentChanged:]
  -[GKSegmentedSectionDataSource setSelectedDataSourceIndex:reload:]
  -[GKSegmentedSectionDataSource selectedDataSourceIndex]
  -[GKSegmentedSectionDataSource setSelectedDataSource:]
  -[GKSegmentedSectionDataSource setSelectedDataSourceIndex:]
  -[GKSegmentedSectionDataSource refreshContentsForDataType:userInfo:updateNotifier:]
  -[GKSegmentedSectionDataSource indexPathsForItem:]
  -[GKSegmentedSectionDataSource item:matchesSearchTerms:inSection:]
  -[GKSegmentedSectionDataSource removeItemAtIndexPath:completionHandler:]
  -[GKSegmentedSectionDataSource hoistSegmentedFactoryToRoot]
  -[GKSegmentedSectionDataSource containsDataSource:]
  -[GKSegmentedSectionDataSource sectionForDataSource:]
  -[GKSegmentedSectionDataSource dataSource:didInsertItemsAtIndexPaths:]
  -[GKSegmentedSectionDataSource dataSource:didRemoveItemsAtIndexPaths:]
  -[GKSegmentedSectionDataSource dataSource:didRefreshItemsAtIndexPaths:]
  -[GKSegmentedSectionDataSource dataSource:didMoveItemAtIndexPath:toIndexPath:]
  -[GKSegmentedSectionDataSource dataSource:didInsertSections:]
  -[GKSegmentedSectionDataSource dataSource:didRemoveSections:]
  -[GKSegmentedSectionDataSource dataSource:didRefreshSections:]
  -[GKSegmentedSectionDataSource dataSource:didMoveSection:toSection:]
  -[GKSegmentedSectionDataSource dataSourceDidReloadData:]
  -[GKSegmentedSectionDataSource dataSource:performBatchUpdate:complete:]
  -[GKSegmentedSectionDataSource usePlaceholder]
  -[GKSegmentedSectionDataSource setUsePlaceholder:]
  -[GKSegmentedSectionDataSource shouldHideSegment]
  -[GKSegmentedSectionDataSource noContentTitle]
  -[GKSegmentedSectionDataSource setNoContentTitle:]
  -[GKSegmentedSectionDataSource noContentMessage]
  -[GKSegmentedSectionDataSource setNoContentMessage:]
  -[GKSegmentedSectionDataSource noContentButtonTitle]
  -[GKSegmentedSectionDataSource setNoContentButtonTitle:]
  -[GKSegmentedSectionDataSource noContentButtonTarget]
  -[GKSegmentedSectionDataSource setNoContentButtonTarget:]
  -[GKSegmentedSectionDataSource noContentButtonAction]
  -[GKSegmentedSectionDataSource setNoContentButtonAction:]
  -[GKSegmentedSectionDataSource segmentedHeaderClass]
  -[GKSegmentedSectionDataSource setSegmentedHeaderClass:]
  -[GKSegmentedSectionDataSource setSegmentInfos:]
  -[GKSegmentedSectionDataSource selectedSegmentInfo]
  -[GKSegmentedSectionDataSource setSelectedSegmentInfo:]
  -[GKSegmentedSectionDataSource waitingForAnimation]
  -[GKSegmentedSectionDataSource setWaitingForAnimation:]
  -[GKSegmentedSectionDataSource rootDataSource]
  -[GKSegmentedSectionDataSource setRootDataSource:]


GKMessageUtilities : NSObject
  // class methods
  +[GKMessageUtilities messagesRecipientHandleForContact:]
  +[GKMessageUtilities linkMetadataWithPlayerRange:shareURL:completionHandler:]
  +[GKMessageUtilities playerWithPhoneNumberOrEmail:]
  +[GKMessageUtilities playerWithPhoneNumberOrEmail:givenName:]
  +[GKMessageUtilities predicateWithPhoneNumberOrEmail:]


GKCellSelectedBackgroundView : UIView

GKDetachedContentView : UIView
 @property  GKStaticRenderContentView *renderView

  // instance methods
  -[GKDetachedContentView renderView]
  -[GKDetachedContentView setRenderView:]


GKStaticRenderContentView : UIView
 @property  UIView *contentView

  // instance methods
  -[GKStaticRenderContentView setNeedsLayout]
  -[GKStaticRenderContentView contentView]
  -[GKStaticRenderContentView .cxx_destruct]
  -[GKStaticRenderContentView prepareForReuse]
  -[GKStaticRenderContentView layoutSubviews]
  -[GKStaticRenderContentView setContentView:]
  -[GKStaticRenderContentView prepareToReuseSubviewsOfView:]


GKFixedSizeImageView : UIImageView
 @property  UIImage *actualImage

  // instance methods
  -[GKFixedSizeImageView invalidateIntrinsicContentSize]
  -[GKFixedSizeImageView .cxx_destruct]
  -[GKFixedSizeImageView image]
  -[GKFixedSizeImageView setImage:]
  -[GKFixedSizeImageView actualImage]
  -[GKFixedSizeImageView setActualImage:]


GKEditAction : NSObject
 @property  NSString *name
 @property  SEL selector
 @property  BOOL destructive

  // class methods
  +[GKEditAction actionWithName:selector:]
  +[GKEditAction deleteActionWithName:]

  // instance methods
  -[GKEditAction selector]
  -[GKEditAction setDestructive:]
  -[GKEditAction setSelector:]
  -[GKEditAction .cxx_destruct]
  -[GKEditAction destructive]
  -[GKEditAction setName:]
  -[GKEditAction name]


GKEditActionsView : UIView
 @property  double visibleWidth
 @property  CALayer *maskLayer
 @property  GKCollectionViewCell *cell
 @property  NSArray *editActionConstraints
 @property  NSArray *actionButtons

  // instance methods
  -[GKEditActionsView .cxx_destruct]
  -[GKEditActionsView setActionButtons:]
  -[GKEditActionsView actionButtons]
  -[GKEditActionsView cell]
  -[GKEditActionsView maskLayer]
  -[GKEditActionsView setCell:]
  -[GKEditActionsView setMaskLayer:]
  -[GKEditActionsView didTouchEditAction:]
  -[GKEditActionsView didTouchMoreEditAction:]
  -[GKEditActionsView initWithFrame:cell:]
  -[GKEditActionsView setVisibleWidth:]
  -[GKEditActionsView prepareActionButtons]
  -[GKEditActionsView visibleWidth]
  -[GKEditActionsView editActionConstraints]
  -[GKEditActionsView setEditActionConstraints:]


GKCollectionViewCell : GKFocusHighlightingCollectionViewCell
 @property  GKEditActionsView *editActionsView
 @property  UIView *staticContentView
 @property  GKStaticRenderContentView *contentRenderView
 @property  CALayer *leftGradientMask
 @property  BOOL doesAbutLeftEdge
 @property  GKHairlineView *topHairline
 @property  GKHairlineView *bottomHairline
 @property  NSArray *editActionsConstraints
 @property  NSArray *hairlineConstraints
 @property  NSLayoutConstraint *contentLeftConstraint
 @property  double leadingMargin
 @property  double trailingMargin
 @property  id representedItem
 @property  UIView *interactiveContentView
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} alignmentRectForText
 @property  NSArray *editActions
 @property  double editingContentOriginX

  // class methods
  +[GKCollectionViewCell registerCellClassesWithCollectionView:]

  // instance methods
  -[GKCollectionViewCell setTrailingMargin:]
  -[GKCollectionViewCell updateConstraints]
  -[GKCollectionViewCell setNeedsDisplay]
  -[GKCollectionViewCell setLeadingMargin:]
  -[GKCollectionViewCell beginEditing]
  -[GKCollectionViewCell .cxx_destruct]
  -[GKCollectionViewCell leadingMargin]
  -[GKCollectionViewCell prepareForReuse]
  -[GKCollectionViewCell layoutSubviews]
  -[GKCollectionViewCell _dynamicUserInterfaceTraitDidChange]
  -[GKCollectionViewCell trailingMargin]
  -[GKCollectionViewCell initWithFrame:]
  -[GKCollectionViewCell applyLayoutAttributes:]
  -[GKCollectionViewCell popoverSourceView]
  -[GKCollectionViewCell representedItem]
  -[GKCollectionViewCell finishEditing]
  -[GKCollectionViewCell topHairline]
  -[GKCollectionViewCell bottomHairline]
  -[GKCollectionViewCell setTopHairline:]
  -[GKCollectionViewCell setBottomHairline:]
  -[GKCollectionViewCell _gkEnumerateSubviewsUsingBlock:]
  -[GKCollectionViewCell alignmentRectForText]
  -[GKCollectionViewCell interactiveContentView]
  -[GKCollectionViewCell contentViewOriginXWhileEditing]
  -[GKCollectionViewCell editActionsVisibleWidth]
  -[GKCollectionViewCell prepareHairlineConstraintsIfNeeded]
  -[GKCollectionViewCell prepareEditActionsConstraintsIfNeeded]
  -[GKCollectionViewCell setEditActionsVisibleWidth:]
  -[GKCollectionViewCell animateOutSwipeToEditAccessories]
  -[GKCollectionViewCell setUserInteractionEnabledForEditing:]
  -[GKCollectionViewCell userInteractionEnabledForEditing]
  -[GKCollectionViewCell touchWithinEditActions:]
  -[GKCollectionViewCell leftGradientMask]
  -[GKCollectionViewCell applyGradientMaskIfNeeded]
  -[GKCollectionViewCell setShouldDisplaySwipeToEditAccessories:]
  -[GKCollectionViewCell setDoesAbutLeftEdge:]
  -[GKCollectionViewCell didUpdateModel]
  -[GKCollectionViewCell setRepresentedItem:]
  -[GKCollectionViewCell closeForDelete]
  -[GKCollectionViewCell setEditingContentOriginX:]
  -[GKCollectionViewCell editingContentOriginX]
  -[GKCollectionViewCell resetEditingContentOrigin]
  -[GKCollectionViewCell shutActionPaneAnimated:completion:]
  -[GKCollectionViewCell staticContentView]
  -[GKCollectionViewCell setStaticContentView:]
  -[GKCollectionViewCell editActions]
  -[GKCollectionViewCell setEditActions:]
  -[GKCollectionViewCell editActionsView]
  -[GKCollectionViewCell contentRenderView]
  -[GKCollectionViewCell setContentRenderView:]
  -[GKCollectionViewCell setLeftGradientMask:]
  -[GKCollectionViewCell doesAbutLeftEdge]
  -[GKCollectionViewCell editActionsConstraints]
  -[GKCollectionViewCell setEditActionsConstraints:]
  -[GKCollectionViewCell hairlineConstraints]
  -[GKCollectionViewCell setHairlineConstraints:]
  -[GKCollectionViewCell contentLeftConstraint]
  -[GKCollectionViewCell setContentLeftConstraint:]


GKOnboardingViewController : UIViewController <UIScrollViewDelegate>
 @property  UIView *privacyContainer
 @property  NSLayoutConstraint *topConstraint
 @property  UIView *buttonContainer
 @property  UIView *privacyContainerInScrollView
 @property  UIView *continueButtonContainerInScrollView
 @property  NSLayoutConstraint *welcomeStackViewTrailingConstraint
 @property  NSLayoutConstraint *welcomeStackViewLeadingConstraint
 @property  NSLayoutConstraint *whatsnewStackViewTrailingConstraint
 @property  NSLayoutConstraint *whatsnewStackViewLeadingConstraint
 @property  NSLayoutConstraint *privacyContainerInScrollViewHeightConstraint
 @property  NSLayoutConstraint *continueButtonContainerWidthConstraint
 @property  NSLayoutConstraint *continueButtonContainerInScrollViewHeightConstraint
 @property  NSLayoutConstraint *continueButtonEqualWidthPrivacyContainerConstraint
 @property  NSLayoutConstraint *continueButtonParitalWidthPrivacyContainerConstraint
 @property  NSLayoutConstraint *scrollViewToBottomContainerConstraint
 @property  NSLayoutConstraint *scrollViewToBottomSafeAreaConstraint
 @property  NSLayoutConstraint *bottomStackViewTopConstraint
 @property  NSLayoutConstraint *bottomStackViewBottomConstraint
 @property  NSLayoutConstraint *bottomStackViewTrailingConstraint
 @property  NSLayoutConstraint *bottomStackViewLeadingConstraint
 @property  UIImageView *bubbleImageView
 @property  UIView *bottomContainerView
 @property  OBBoldTrayButton *nextButton
 @property  UIScrollView *scrollView
 @property  UIStackView *welcomeStackView
 @property  UIStackView *bottomStackView
 @property  UILabel *navigationTitleLabel
 @property  UIStackView *whatsNewStackView
 @property  UILabel *mainTitle
 @property  UILabel *subTitle
 @property  OBPrivacyLinkController *privacyLink
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKOnboardingViewController buttonContainer]
  -[GKOnboardingViewController viewSafeAreaInsetsDidChange]
  -[GKOnboardingViewController scrollViewDidScroll:]
  -[GKOnboardingViewController viewWillLayoutSubviews]
  -[GKOnboardingViewController viewDidAppear:]
  -[GKOnboardingViewController setTopConstraint:]
  -[GKOnboardingViewController setScrollView:]
  -[GKOnboardingViewController .cxx_destruct]
  -[GKOnboardingViewController viewDidLoad]
  -[GKOnboardingViewController scrollView]
  -[GKOnboardingViewController viewWillAppear:]
  -[GKOnboardingViewController topConstraint]
  -[GKOnboardingViewController setButtonContainer:]
  -[GKOnboardingViewController traitCollectionDidChange:]
  -[GKOnboardingViewController subTitle]
  -[GKOnboardingViewController setSubTitle:]
  -[GKOnboardingViewController nextButton]
  -[GKOnboardingViewController setNextButton:]
  -[GKOnboardingViewController mainTitle]
  -[GKOnboardingViewController setMainTitle:]
  -[GKOnboardingViewController privacyContainer]
  -[GKOnboardingViewController setPrivacyContainer:]
  -[GKOnboardingViewController setPrivacyLink:]
  -[GKOnboardingViewController privacyLink]
  -[GKOnboardingViewController nextPressed:]
  -[GKOnboardingViewController signOutPressed:]
  -[GKOnboardingViewController notNowPressed:]
  -[GKOnboardingViewController configureWhatsNewList]
  -[GKOnboardingViewController addPrivacyLink]
  -[GKOnboardingViewController constrainTextInView:toFontSize:]
  -[GKOnboardingViewController showSignOutAlert]
  -[GKOnboardingViewController setupNavigationBar]
  -[GKOnboardingViewController secondaryButtonPressed:]
  -[GKOnboardingViewController allowSignOut]
  -[GKOnboardingViewController allowSkip]
  -[GKOnboardingViewController updateUIBasedOnTraitCollection]
  -[GKOnboardingViewController reparentView:toSuperview:]
  -[GKOnboardingViewController reparentGDPRToNewParent:]
  -[GKOnboardingViewController isMainTitleVisible]
  -[GKOnboardingViewController updateNavigationTitleLabelAlpha]
  -[GKOnboardingViewController privacyContainerInScrollView]
  -[GKOnboardingViewController setPrivacyContainerInScrollView:]
  -[GKOnboardingViewController continueButtonContainerInScrollView]
  -[GKOnboardingViewController setContinueButtonContainerInScrollView:]
  -[GKOnboardingViewController welcomeStackViewTrailingConstraint]
  -[GKOnboardingViewController setWelcomeStackViewTrailingConstraint:]
  -[GKOnboardingViewController welcomeStackViewLeadingConstraint]
  -[GKOnboardingViewController setWelcomeStackViewLeadingConstraint:]
  -[GKOnboardingViewController whatsnewStackViewTrailingConstraint]
  -[GKOnboardingViewController setWhatsnewStackViewTrailingConstraint:]
  -[GKOnboardingViewController whatsnewStackViewLeadingConstraint]
  -[GKOnboardingViewController setWhatsnewStackViewLeadingConstraint:]
  -[GKOnboardingViewController privacyContainerInScrollViewHeightConstraint]
  -[GKOnboardingViewController setPrivacyContainerInScrollViewHeightConstraint:]
  -[GKOnboardingViewController continueButtonContainerWidthConstraint]
  -[GKOnboardingViewController setContinueButtonContainerWidthConstraint:]
  -[GKOnboardingViewController continueButtonContainerInScrollViewHeightConstraint]
  -[GKOnboardingViewController setContinueButtonContainerInScrollViewHeightConstraint:]
  -[GKOnboardingViewController continueButtonEqualWidthPrivacyContainerConstraint]
  -[GKOnboardingViewController setContinueButtonEqualWidthPrivacyContainerConstraint:]
  -[GKOnboardingViewController continueButtonParitalWidthPrivacyContainerConstraint]
  -[GKOnboardingViewController setContinueButtonParitalWidthPrivacyContainerConstraint:]
  -[GKOnboardingViewController scrollViewToBottomContainerConstraint]
  -[GKOnboardingViewController setScrollViewToBottomContainerConstraint:]
  -[GKOnboardingViewController scrollViewToBottomSafeAreaConstraint]
  -[GKOnboardingViewController setScrollViewToBottomSafeAreaConstraint:]
  -[GKOnboardingViewController bottomStackViewTopConstraint]
  -[GKOnboardingViewController setBottomStackViewTopConstraint:]
  -[GKOnboardingViewController bottomStackViewBottomConstraint]
  -[GKOnboardingViewController setBottomStackViewBottomConstraint:]
  -[GKOnboardingViewController bottomStackViewTrailingConstraint]
  -[GKOnboardingViewController setBottomStackViewTrailingConstraint:]
  -[GKOnboardingViewController bottomStackViewLeadingConstraint]
  -[GKOnboardingViewController setBottomStackViewLeadingConstraint:]
  -[GKOnboardingViewController bubbleImageView]
  -[GKOnboardingViewController setBubbleImageView:]
  -[GKOnboardingViewController bottomContainerView]
  -[GKOnboardingViewController setBottomContainerView:]
  -[GKOnboardingViewController welcomeStackView]
  -[GKOnboardingViewController setWelcomeStackView:]
  -[GKOnboardingViewController bottomStackView]
  -[GKOnboardingViewController setBottomStackView:]
  -[GKOnboardingViewController navigationTitleLabel]
  -[GKOnboardingViewController setNavigationTitleLabel:]
  -[GKOnboardingViewController whatsNewStackView]
  -[GKOnboardingViewController setWhatsNewStackView:]


GKTextView : UITextView
 @property  GKTextStyle *appliedStyle
 @property  GKLabel *placeholderLabel
 @property  NSString *placeholderText
 @property  NSAttributedString *attributedPlaceholderText
 @property  GKTextStyle *_baseStyle

  // class methods
  +[GKTextView initialize]

  // instance methods
  -[GKTextView insertDictationResultPlaceholder]
  -[GKTextView removeDictationResultPlaceholder:willInsertResult:]
  -[GKTextView dealloc]
  -[GKTextView .cxx_destruct]
  -[GKTextView setAttributedText:]
  -[GKTextView layoutSubviews]
  -[GKTextView initWithFrame:]
  -[GKTextView setText:]
  -[GKTextView placeholderLabel]
  -[GKTextView setPlaceholderLabel:]
  -[GKTextView setPlaceholderText:]
  -[GKTextView placeholderText]
  -[GKTextView textStorageDidChangeNotification:]
  -[GKTextView updatePlaceholderVisibility]
  -[GKTextView setAttributedPlaceholderText:]
  -[GKTextView attributedPlaceholderText]
  -[GKTextView set_baseStyle:]
  -[GKTextView applyTextStyle:]
  -[GKTextView replayAndApplyStyle]
  -[GKTextView _baseStyle]
  -[GKTextView appliedStyle]
  -[GKTextView setAppliedStyle:]


GKTurnBasedMatchesDataSource : GKSplittingDataSource
 @property  GKGame *game
 @property  SEL detailPressedAction
 @property  {UIEdgeInsets=dddd} cellMarginInsets
 @property  NSObject<GKTurnBasedMatchesDataSourceDelegate> *delegate

  // instance methods
  -[GKTurnBasedMatchesDataSource collectionView:cellForItemAtIndexPath:]
  -[GKTurnBasedMatchesDataSource setDelegate:]
  -[GKTurnBasedMatchesDataSource delegate]
  -[GKTurnBasedMatchesDataSource .cxx_destruct]
  -[GKTurnBasedMatchesDataSource numberOfMatches]
  -[GKTurnBasedMatchesDataSource configureDataSource]
  -[GKTurnBasedMatchesDataSource game]
  -[GKTurnBasedMatchesDataSource setGame:]
  -[GKTurnBasedMatchesDataSource configureCollectionView:]
  -[GKTurnBasedMatchesDataSource collectionViewWillBecomeActive:]
  -[GKTurnBasedMatchesDataSource removeItemAtIndexPath:completionHandler:]
  -[GKTurnBasedMatchesDataSource detailPressedAction]
  -[GKTurnBasedMatchesDataSource setDetailPressedAction:]
  -[GKTurnBasedMatchesDataSource cellMarginInsets]
  -[GKTurnBasedMatchesDataSource setCellMarginInsets:]


GKOnboardingHelper : NSObject
  // class methods
  +[GKOnboardingHelper privacyLinkController]


GKLeaderboardSectionHeaderView : UICollectionReusableView
 @property  BOOL dataUpdated
 @property  GKLeaderboard *leaderboard
 @property  GKGameRecord *gameRecord
 @property  GKLeaderboardMetadataView *personalView
 @property  GKLeaderboardMetadataView *socialView
 @property  UIStackView *container
 @property  NSLayoutConstraint *contentInsetTop
 @property  NSLayoutConstraint *contentInsetBottom
 @property  NSLayoutConstraint *contentInsetTrailing
 @property  NSLayoutConstraint *contentInsetLeading

  // instance methods
  -[GKLeaderboardSectionHeaderView setContainer:]
  -[GKLeaderboardSectionHeaderView updateLayout]
  -[GKLeaderboardSectionHeaderView .cxx_destruct]
  -[GKLeaderboardSectionHeaderView container]
  -[GKLeaderboardSectionHeaderView awakeFromNib]
  -[GKLeaderboardSectionHeaderView traitCollectionDidChange:]
  -[GKLeaderboardSectionHeaderView formattedNumber:]
  -[GKLeaderboardSectionHeaderView attributedStringWithSymbol:]
  -[GKLeaderboardSectionHeaderView updateHighlightsWithGameRecord:leaderboardCount:setCount:]
  -[GKLeaderboardSectionHeaderView leaderboard]
  -[GKLeaderboardSectionHeaderView setLeaderboard:]
  -[GKLeaderboardSectionHeaderView gameRecord]
  -[GKLeaderboardSectionHeaderView setGameRecord:]
  -[GKLeaderboardSectionHeaderView personalView]
  -[GKLeaderboardSectionHeaderView setPersonalView:]
  -[GKLeaderboardSectionHeaderView socialView]
  -[GKLeaderboardSectionHeaderView setSocialView:]
  -[GKLeaderboardSectionHeaderView contentInsetTop]
  -[GKLeaderboardSectionHeaderView setContentInsetTop:]
  -[GKLeaderboardSectionHeaderView contentInsetBottom]
  -[GKLeaderboardSectionHeaderView setContentInsetBottom:]
  -[GKLeaderboardSectionHeaderView contentInsetTrailing]
  -[GKLeaderboardSectionHeaderView setContentInsetTrailing:]
  -[GKLeaderboardSectionHeaderView contentInsetLeading]
  -[GKLeaderboardSectionHeaderView setContentInsetLeading:]
  -[GKLeaderboardSectionHeaderView dataUpdated]
  -[GKLeaderboardSectionHeaderView setDataUpdated:]


GKDynamicLabel : UILabel
  // instance methods
  -[GKDynamicLabel dealloc]
  -[GKDynamicLabel didMoveToWindow]
  -[GKDynamicLabel contentSizeCategoryDidChangeNotification:]


GKDynamicButton : GKFocusableButton
  // instance methods
  -[GKDynamicButton dealloc]
  -[GKDynamicButton layoutSubviews]
  -[GKDynamicButton didMoveToWindow]
  -[GKDynamicButton contentSizeCategoryDidChangeNotification:]


GKImageDataConsumer : NSObject <GKResourceDataConsumer>
 @property  {CGSize=dd} size
 @property  double scale
 @property  BOOL isLayeredImage
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKImageDataConsumer isLayeredImage]
  -[GKImageDataConsumer size]
  -[GKImageDataConsumer scale]
  -[GKImageDataConsumer objectForData:error:]
  -[GKImageDataConsumer initWithSize:scale:isLayeredImage:]


GKDashboardLeaderboardCell : UICollectionViewCell
 @property  UIImageView *iconView
 @property  UILabel *titleLabel
 @property  UILabel *countLabel
 @property  UIView *overlayView
 @property  UIColor *titleLabelColor
 @property  NSString *bundleIdentifier
 @property  NSString *imageName
 @property  GKLeaderboardSet *leaderboardSet
 @property  GKLeaderboard *leaderboard
 @property  UIView *popoverSourceView

  // instance methods
  -[GKDashboardLeaderboardCell setTitleLabel:]
  -[GKDashboardLeaderboardCell canBecomeFocused]
  -[GKDashboardLeaderboardCell setImageName:]
  -[GKDashboardLeaderboardCell setSelected:]
  -[GKDashboardLeaderboardCell .cxx_destruct]
  -[GKDashboardLeaderboardCell imageName]
  -[GKDashboardLeaderboardCell setIconView:]
  -[GKDashboardLeaderboardCell overlayView]
  -[GKDashboardLeaderboardCell updateImage]
  -[GKDashboardLeaderboardCell setHighlighted:]
  -[GKDashboardLeaderboardCell setBundleIdentifier:]
  -[GKDashboardLeaderboardCell iconView]
  -[GKDashboardLeaderboardCell bundleIdentifier]
  -[GKDashboardLeaderboardCell setOverlayView:]
  -[GKDashboardLeaderboardCell awakeFromNib]
  -[GKDashboardLeaderboardCell popoverSourceView]
  -[GKDashboardLeaderboardCell titleLabel]
  -[GKDashboardLeaderboardCell titleLabelColor]
  -[GKDashboardLeaderboardCell countLabel]
  -[GKDashboardLeaderboardCell setCountLabel:]
  -[GKDashboardLeaderboardCell setTitleLabelColor:]
  -[GKDashboardLeaderboardCell leaderboard]
  -[GKDashboardLeaderboardCell setLeaderboard:]
  -[GKDashboardLeaderboardCell setLeaderboardSet:]
  -[GKDashboardLeaderboardCell updateRank]
  -[GKDashboardLeaderboardCell updateOverlay]
  -[GKDashboardLeaderboardCell leaderboardSet]


GKRemoteUITableFooterView : UIView <RUIPageAccessory, RemoteUITableFooter>
 @property  GKButton *button
 @property  NSDictionary *attributes
 @property  BOOL pinToBottom
 @property  NSArray *replaceableConstraints
 @property  double buttonBaselineOffset
 @property  int layoutStyle
 @property  <GKRemoteUIAuxiliaryViewDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKRemoteUITableFooterView buttonTapped:]
  -[GKRemoteUITableFooterView layoutStyle]
  -[GKRemoteUITableFooterView setLayoutStyle:]
  -[GKRemoteUITableFooterView setAttributes:]
  -[GKRemoteUITableFooterView attributes]
  -[GKRemoteUITableFooterView initWithAttributes:]
  -[GKRemoteUITableFooterView setDelegate:]
  -[GKRemoteUITableFooterView button]
  -[GKRemoteUITableFooterView delegate]
  -[GKRemoteUITableFooterView .cxx_destruct]
  -[GKRemoteUITableFooterView didMoveToSuperview]
  -[GKRemoteUITableFooterView layoutSubviews]
  -[GKRemoteUITableFooterView setButton:]
  -[GKRemoteUITableFooterView sizeThatFits:]
  -[GKRemoteUITableFooterView objectModelDidChange:]
  -[GKRemoteUITableFooterView tableViewDidUpdateContentInset:]
  -[GKRemoteUITableFooterView footerHeightForWidth:inTableView:]
  -[GKRemoteUITableFooterView createButtonWithAttributes:]
  -[GKRemoteUITableFooterView adjustSizeToFillSuperview:]
  -[GKRemoteUITableFooterView pinToBottom]
  -[GKRemoteUITableFooterView setPinToBottom:]
  -[GKRemoteUITableFooterView replaceableConstraints]
  -[GKRemoteUITableFooterView setReplaceableConstraints:]
  -[GKRemoteUITableFooterView buttonBaselineOffset]
  -[GKRemoteUITableFooterView setButtonBaselineOffset:]


GKChallengeDetailViewController : GKDashboardCollectionViewController
 @property  GKChallenge *challenge
 @property  UIView *iconView
 @property  UILabel *categoryLabel
 @property  UILabel *titleLabel
 @property  UILabel *descriptionLabel
 @property  GKDashboardPlayerPhotoView *playerAvatarView
 @property  UILabel *challengeByNameLabel
 @property  GKButton *playNowButton
 @property  GKButton *declineButton
 @property  UIStackView *artworkStack
 @property  UIStackView *challengerStack
 @property  UIStackView *actionStack
 @property  NSLayoutConstraint *artworkStackPortraitTopConstraint
 @property  NSLayoutConstraint *artworkViewHeightConstraint
 @property  NSLayoutConstraint *challengerStackLandscapeTopConstraint
 @property  NSLayoutConstraint *challengerStackPortraitTopConstraint
 @property  NSLayoutConstraint *actionStackPortraitTopConstraint
 @property  NSLayoutConstraint *actionStackPortraitBottomConstraint
 @property  id delegate
 @property  BOOL shouldShowPlay

  // instance methods
  -[GKChallengeDetailViewController setChallenge:]
  -[GKChallengeDetailViewController setTitleLabel:]
  -[GKChallengeDetailViewController setDescriptionLabel:]
  -[GKChallengeDetailViewController challenge]
  -[GKChallengeDetailViewController setDelegate:]
  -[GKChallengeDetailViewController delegate]
  -[GKChallengeDetailViewController .cxx_destruct]
  -[GKChallengeDetailViewController viewDidLoad]
  -[GKChallengeDetailViewController setIconView:]
  -[GKChallengeDetailViewController viewDidLayoutSubviews]
  -[GKChallengeDetailViewController title]
  -[GKChallengeDetailViewController iconView]
  -[GKChallengeDetailViewController descriptionLabel]
  -[GKChallengeDetailViewController traitCollectionDidChange:]
  -[GKChallengeDetailViewController titleLabel]
  -[GKChallengeDetailViewController declineButton]
  -[GKChallengeDetailViewController setDeclineButton:]
  -[GKChallengeDetailViewController donePressed:]
  -[GKChallengeDetailViewController initWithChallenge:]
  -[GKChallengeDetailViewController adjustLabelFonts]
  -[GKChallengeDetailViewController adjustFontSizeForLabel:]
  -[GKChallengeDetailViewController configureForChallenge]
  -[GKChallengeDetailViewController configureButtons]
  -[GKChallengeDetailViewController playNowPressed:]
  -[GKChallengeDetailViewController declinePressed:]
  -[GKChallengeDetailViewController challengeOK:]
  -[GKChallengeDetailViewController updateLeaderboardImage]
  -[GKChallengeDetailViewController updateIconViewWithSubView:]
  -[GKChallengeDetailViewController shouldShowPlay]
  -[GKChallengeDetailViewController setShouldShowPlay:]
  -[GKChallengeDetailViewController categoryLabel]
  -[GKChallengeDetailViewController setCategoryLabel:]
  -[GKChallengeDetailViewController playerAvatarView]
  -[GKChallengeDetailViewController setPlayerAvatarView:]
  -[GKChallengeDetailViewController challengeByNameLabel]
  -[GKChallengeDetailViewController setChallengeByNameLabel:]
  -[GKChallengeDetailViewController playNowButton]
  -[GKChallengeDetailViewController setPlayNowButton:]
  -[GKChallengeDetailViewController artworkStack]
  -[GKChallengeDetailViewController setArtworkStack:]
  -[GKChallengeDetailViewController challengerStack]
  -[GKChallengeDetailViewController setChallengerStack:]
  -[GKChallengeDetailViewController actionStack]
  -[GKChallengeDetailViewController setActionStack:]
  -[GKChallengeDetailViewController artworkStackPortraitTopConstraint]
  -[GKChallengeDetailViewController setArtworkStackPortraitTopConstraint:]
  -[GKChallengeDetailViewController artworkViewHeightConstraint]
  -[GKChallengeDetailViewController setArtworkViewHeightConstraint:]
  -[GKChallengeDetailViewController challengerStackLandscapeTopConstraint]
  -[GKChallengeDetailViewController setChallengerStackLandscapeTopConstraint:]
  -[GKChallengeDetailViewController challengerStackPortraitTopConstraint]
  -[GKChallengeDetailViewController setChallengerStackPortraitTopConstraint:]
  -[GKChallengeDetailViewController actionStackPortraitTopConstraint]
  -[GKChallengeDetailViewController setActionStackPortraitTopConstraint:]
  -[GKChallengeDetailViewController actionStackPortraitBottomConstraint]
  -[GKChallengeDetailViewController setActionStackPortraitBottomConstraint:]


GKLabel : UILabel <GKTextStyleReplay>
 @property  GKTextStyle *baseStyle
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  GKTextStyle *appliedStyle
 @property  double actualFontShrinkageFactor
 @property  BOOL shouldEnforcePreferredWidth
 @property  BOOL usingAttributedText
 @property  BOOL shouldInhibitReplay
 @property  {UIEdgeInsets=dddd} titleEdgeInsets

  // class methods
  +[GKLabel initialize]

  // instance methods
  -[GKLabel updateConstraints]
  -[GKLabel .cxx_destruct]
  -[GKLabel setAttributedText:]
  -[GKLabel setBounds:]
  -[GKLabel intrinsicContentSize]
  -[GKLabel initWithFrame:]
  -[GKLabel setText:]
  -[GKLabel titleEdgeInsets]
  -[GKLabel setTitleEdgeInsets:]
  -[GKLabel applyTextStyle:]
  -[GKLabel appliedStyle]
  -[GKLabel setAppliedStyle:]
  -[GKLabel replayAndApplyStyleUnlessInhibited]
  -[GKLabel replayAndApplyStyleWithSystemContentChange:]
  -[GKLabel baseStyle]
  -[GKLabel setBaseStyle:]
  -[GKLabel actualFontShrinkageFactor]
  -[GKLabel shrinkFontToFitWidth]
  -[GKLabel shrinkFontToFitSize:]
  -[GKLabel shouldEnforcePreferredWidth]
  -[GKLabel setShouldEnforcePreferredWidth:]
  -[GKLabel usingAttributedText]
  -[GKLabel shouldInhibitReplay]
  -[GKLabel setShouldInhibitReplay:]
  -[GKLabel setActualFontShrinkageFactor:]


GKButton : GKFocusableButton <GKTextStyleReplay>
 @property  GKTextStyle *baseStyle
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  GKTextStyle *appliedStyle

  // class methods
  +[GKButton initialize]

  // instance methods
  -[GKButton setAttributedTitle:forState:]
  -[GKButton .cxx_destruct]
  -[GKButton intrinsicContentSize]
  -[GKButton initWithFrame:]
  -[GKButton applyTextStyle:]
  -[GKButton appliedStyle]
  -[GKButton setAppliedStyle:]
  -[GKButton replayAndApplyStyleWithSystemContentChange:]
  -[GKButton baseStyle]
  -[GKButton setBaseStyle:]
  -[GKButton applyButtonStyle:]


GKFocusableButton : UIButton
  // instance methods
  -[GKFocusableButton canBecomeFocused]


GKUnfocusableButton : UIButton
  // instance methods
  -[GKUnfocusableButton canBecomeFocused]


GKTextField : UITextField <GKTextStyleReplay>
 @property  GKTextStyle *baseStyle
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  GKTextStyle *appliedStyle

  // class methods
  +[GKTextField initialize]

  // instance methods
  -[GKTextField .cxx_destruct]
  -[GKTextField initWithFrame:]
  -[GKTextField applyTextStyle:]
  -[GKTextField appliedStyle]
  -[GKTextField setAppliedStyle:]
  -[GKTextField replayAndApplyStyleWithSystemContentChange:]
  -[GKTextField baseStyle]
  -[GKTextField setBaseStyle:]


GKCollectionGridLayout : GKCollectionFocusingLayout
 @property  NSDictionary *itemAttributes
 @property  NSDictionary *headerAttributes
 @property  NSDictionary *footerAttributes
 @property  BOOL didPerformInitialContentInsetScroll
 @property  BOOL centersItemsInExcessSpace
 @property  BOOL sectionInsetRelativeWithContentInset
 @property  long long autoWidthColumns
 @property  double extraSectionHeaderToCellSpace
 @property  NSIndexSet *sectionsThatShowHeaderWhenEmpty
 @property  NSIndexSet *sectionsThatShowFootersWhenEmpty
 @property  BOOL shouldPerformInitialScrollToContentInsetTop

  // instance methods
  -[GKCollectionGridLayout prepareLayout]
  -[GKCollectionGridLayout collectionViewContentSize]
  -[GKCollectionGridLayout layoutAttributesForItemAtIndexPath:]
  -[GKCollectionGridLayout layoutAttributesForSupplementaryViewOfKind:atIndexPath:]
  -[GKCollectionGridLayout layoutAttributesForElementsInRect:]
  -[GKCollectionGridLayout .cxx_destruct]
  -[GKCollectionGridLayout applyDefaults]
  -[GKCollectionGridLayout setAutoWidthColumns:]
  -[GKCollectionGridLayout lastValidSection]
  -[GKCollectionGridLayout centersItemsInExcessSpace]
  -[GKCollectionGridLayout setCentersItemsInExcessSpace:]
  -[GKCollectionGridLayout sectionInsetRelativeWithContentInset]
  -[GKCollectionGridLayout setSectionInsetRelativeWithContentInset:]
  -[GKCollectionGridLayout autoWidthColumns]
  -[GKCollectionGridLayout extraSectionHeaderToCellSpace]
  -[GKCollectionGridLayout setExtraSectionHeaderToCellSpace:]
  -[GKCollectionGridLayout sectionsThatShowHeaderWhenEmpty]
  -[GKCollectionGridLayout setSectionsThatShowHeaderWhenEmpty:]
  -[GKCollectionGridLayout sectionsThatShowFootersWhenEmpty]
  -[GKCollectionGridLayout setSectionsThatShowFootersWhenEmpty:]
  -[GKCollectionGridLayout shouldPerformInitialScrollToContentInsetTop]
  -[GKCollectionGridLayout setShouldPerformInitialScrollToContentInsetTop:]
  -[GKCollectionGridLayout itemAttributes]
  -[GKCollectionGridLayout setItemAttributes:]
  -[GKCollectionGridLayout headerAttributes]
  -[GKCollectionGridLayout setHeaderAttributes:]
  -[GKCollectionGridLayout footerAttributes]
  -[GKCollectionGridLayout setFooterAttributes:]
  -[GKCollectionGridLayout didPerformInitialContentInsetScroll]
  -[GKCollectionGridLayout setDidPerformInitialContentInsetScroll:]


GKSettingsFriendListAccess : PSListController
 @property  PSSpecifier *globalAccessSpecifier
 @property  NSArray *games
 @property  NSDictionary *gameSettings
 @property  GKLocalPlayer *localPlayer
 @property  BOOL loadingGames

  // instance methods
  -[GKSettingsFriendListAccess specifiers]
  -[GKSettingsFriendListAccess dealloc]
  -[GKSettingsFriendListAccess games]
  -[GKSettingsFriendListAccess .cxx_destruct]
  -[GKSettingsFriendListAccess applicationWillEnterForeground:]
  -[GKSettingsFriendListAccess init]
  -[GKSettingsFriendListAccess localPlayer]
  -[GKSettingsFriendListAccess setGlobalFriendListAccess:withSpecifier:]
  -[GKSettingsFriendListAccess loadAllGames]
  -[GKSettingsFriendListAccess setGames:]
  -[GKSettingsFriendListAccess loadFreshSpecifiers]
  -[GKSettingsFriendListAccess setLoadingGames:]
  -[GKSettingsFriendListAccess globalFriendListAccessSpecifier]
  -[GKSettingsFriendListAccess globalFriendListAccess]
  -[GKSettingsFriendListAccess reloadWithClearLocalCache:]
  -[GKSettingsFriendListAccess loadingSpecifier]
  -[GKSettingsFriendListAccess individualBundleIDFriendListAccessSpecifier]
  -[GKSettingsFriendListAccess isFriendListSharingRestricted]
  -[GKSettingsFriendListAccess globalAccessSpecifier]
  -[GKSettingsFriendListAccess setGlobalAccessSpecifier:]
  -[GKSettingsFriendListAccess gameSettings]
  -[GKSettingsFriendListAccess setGameSettings:]
  -[GKSettingsFriendListAccess setLocalPlayer:]
  -[GKSettingsFriendListAccess loadingGames]


GKDashboardChallengePlayerPickerDataSource : GKCollectionDataSource
 @property  GKChallenge *challenge
 @property  NSArray *players
 @property  NSMutableDictionary *playerStates
 @property  NSMutableDictionary *playerAchievementDates
 @property  NSArray *searchPlayers
 @property  NSArray *selectedPlayers

  // instance methods
  -[GKDashboardChallengePlayerPickerDataSource clearSelection]
  -[GKDashboardChallengePlayerPickerDataSource setChallenge:]
  -[GKDashboardChallengePlayerPickerDataSource collectionView:cellForItemAtIndexPath:]
  -[GKDashboardChallengePlayerPickerDataSource challenge]
  -[GKDashboardChallengePlayerPickerDataSource collectionView:didDeselectItemAtIndexPath:]
  -[GKDashboardChallengePlayerPickerDataSource collectionView:shouldSelectItemAtIndexPath:]
  -[GKDashboardChallengePlayerPickerDataSource numberOfSectionsInCollectionView:]
  -[GKDashboardChallengePlayerPickerDataSource itemCount]
  -[GKDashboardChallengePlayerPickerDataSource collectionView:layout:sizeForItemAtIndexPath:]
  -[GKDashboardChallengePlayerPickerDataSource .cxx_destruct]
  -[GKDashboardChallengePlayerPickerDataSource collectionView:didSelectItemAtIndexPath:]
  -[GKDashboardChallengePlayerPickerDataSource loadDataWithCompletionHandler:]
  -[GKDashboardChallengePlayerPickerDataSource players]
  -[GKDashboardChallengePlayerPickerDataSource preferredCollectionHeight]
  -[GKDashboardChallengePlayerPickerDataSource setupCollectionView:]
  -[GKDashboardChallengePlayerPickerDataSource itemForIndexPath:]
  -[GKDashboardChallengePlayerPickerDataSource sectionHeaderText]
  -[GKDashboardChallengePlayerPickerDataSource initWithChallenge:]
  -[GKDashboardChallengePlayerPickerDataSource currentPlayers]
  -[GKDashboardChallengePlayerPickerDataSource playerForIndexPath:]
  -[GKDashboardChallengePlayerPickerDataSource selectedPlayers]
  -[GKDashboardChallengePlayerPickerDataSource indexPathForPlayer:]
  -[GKDashboardChallengePlayerPickerDataSource searchKeyForSection:]
  -[GKDashboardChallengePlayerPickerDataSource searchTextHasChanged]
  -[GKDashboardChallengePlayerPickerDataSource setPlayers:]
  -[GKDashboardChallengePlayerPickerDataSource playerStates]
  -[GKDashboardChallengePlayerPickerDataSource setPlayerStates:]
  -[GKDashboardChallengePlayerPickerDataSource playerAchievementDates]
  -[GKDashboardChallengePlayerPickerDataSource setPlayerAchievementDates:]
  -[GKDashboardChallengePlayerPickerDataSource searchPlayers]
  -[GKDashboardChallengePlayerPickerDataSource setSearchPlayers:]


GKCollectionViewLayoutAttributes : UICollectionViewLayoutAttributes
 @property  BOOL isPartOfGlobalPinningGroup
 @property  unsigned long gridLayoutLocation
 @property  BOOL doesAbutLeftOfCollectionView
 @property  BOOL allSectionItemsVisible
 @property  BOOL isPinned
 @property  double unpinnedY
 @property  <UICollectionViewDataSource> *dataSource
 @property  GKSectionMetrics *sectionMetrics
 @property  GKSupplementaryViewMetrics *supplementaryMetrics
 @property  unsigned long currentVisibleItemCount
 @property  unsigned long currentTotalItemCount
 @property  unsigned long maxTotalItemCount
 @property  double leadingMargin
 @property  double trailingMargin

  // instance methods
  -[GKCollectionViewLayoutAttributes isPinned]
  -[GKCollectionViewLayoutAttributes dataSource]
  -[GKCollectionViewLayoutAttributes setTrailingMargin:]
  -[GKCollectionViewLayoutAttributes setLeadingMargin:]
  -[GKCollectionViewLayoutAttributes .cxx_destruct]
  -[GKCollectionViewLayoutAttributes leadingMargin]
  -[GKCollectionViewLayoutAttributes setDataSource:]
  -[GKCollectionViewLayoutAttributes copyWithZone:]
  -[GKCollectionViewLayoutAttributes trailingMargin]
  -[GKCollectionViewLayoutAttributes isEqual:]
  -[GKCollectionViewLayoutAttributes init]
  -[GKCollectionViewLayoutAttributes setIsPinned:]
  -[GKCollectionViewLayoutAttributes allSectionItemsVisible]
  -[GKCollectionViewLayoutAttributes setAllSectionItemsVisible:]
  -[GKCollectionViewLayoutAttributes unpinnedY]
  -[GKCollectionViewLayoutAttributes setUnpinnedY:]
  -[GKCollectionViewLayoutAttributes sectionMetrics]
  -[GKCollectionViewLayoutAttributes setSectionMetrics:]
  -[GKCollectionViewLayoutAttributes supplementaryMetrics]
  -[GKCollectionViewLayoutAttributes setSupplementaryMetrics:]
  -[GKCollectionViewLayoutAttributes currentVisibleItemCount]
  -[GKCollectionViewLayoutAttributes setCurrentVisibleItemCount:]
  -[GKCollectionViewLayoutAttributes currentTotalItemCount]
  -[GKCollectionViewLayoutAttributes setCurrentTotalItemCount:]
  -[GKCollectionViewLayoutAttributes maxTotalItemCount]
  -[GKCollectionViewLayoutAttributes setMaxTotalItemCount:]
  -[GKCollectionViewLayoutAttributes isPartOfGlobalPinningGroup]
  -[GKCollectionViewLayoutAttributes setIsPartOfGlobalPinningGroup:]
  -[GKCollectionViewLayoutAttributes gridLayoutLocation]
  -[GKCollectionViewLayoutAttributes setGridLayoutLocation:]
  -[GKCollectionViewLayoutAttributes doesAbutLeftOfCollectionView]
  -[GKCollectionViewLayoutAttributes setDoesAbutLeftOfCollectionView:]


GKGridLayoutMetrics : NSObject <NSCopying>
 @property  NSMutableDictionary *keyToMetrics
 @property  NSMutableDictionary *locationToKeyList
 @property  NSString *layoutKey

  // class methods
  +[GKGridLayoutMetrics metrics]

  // instance methods
  -[GKGridLayoutMetrics .cxx_destruct]
  -[GKGridLayoutMetrics copyWithZone:]
  -[GKGridLayoutMetrics init]
  -[GKGridLayoutMetrics _gkDescriptionWithChildren:]
  -[GKGridLayoutMetrics configureCollectionView:]
  -[GKGridLayoutMetrics localDescription]
  -[GKGridLayoutMetrics _gkDescription]
  -[GKGridLayoutMetrics enumerateSupplementaryLocations:]
  -[GKGridLayoutMetrics enumerateSupplementaryMetricsUsingBlock:]
  -[GKGridLayoutMetrics keyListForLocation:]
  -[GKGridLayoutMetrics listForLocation:]
  -[GKGridLayoutMetrics insertSupplementaryMetrics:forKey:atLocation:]
  -[GKGridLayoutMetrics addSupplementaryMetrics:forKey:atLocation:]
  -[GKGridLayoutMetrics mergeSupplementaryMetricsFromEnclosingMetrics:atLocation:globalRange:]
  -[GKGridLayoutMetrics supplementaryMetricsForKey:]
  -[GKGridLayoutMetrics replaceSupplementaryMetrics:forKey:]
  -[GKGridLayoutMetrics removeSupplementaryMetricsForKey:]
  -[GKGridLayoutMetrics keyToMetrics]
  -[GKGridLayoutMetrics setKeyToMetrics:]
  -[GKGridLayoutMetrics locationToKeyList]
  -[GKGridLayoutMetrics setLocationToKeyList:]
  -[GKGridLayoutMetrics layoutKey]
  -[GKGridLayoutMetrics setLayoutKey:]
  -[GKGridLayoutMetrics prepareLayout:startingAtSection:]


GKSectionMetrics : GKGridLayoutMetrics
 @property  double calculatedItemHeightCache
 @property  {UIEdgeInsets=dddd} padding
 @property  unsigned long alignment
 @property  double lineSpacing
 @property  double interitemSpacing
 @property  double marginBetweenItems
 @property  double desiredItemWidth
 @property  double flowColumnWidth
 @property  BOOL useViewSizeForFlowMaxColumnCount
 @property  unsigned long flowMaxColumnCount
 @property  double desiredItemHeight
 @property  double calculatedItemHeight
 @property  NSDictionary *itemHeightList
 @property  unsigned long lastLineItemAlignment
 @property  unsigned long maximumVisibleItemCount
 @property  unsigned long incrementalRevealItemCount
 @property  double sectionHeaderHeight
 @property  double showMoreHeight
 @property  BOOL sectionHeadersShouldPin
 @property  BOOL incrementalRevealConsumesPadding
 @property  BOOL shouldAlwaysIncludeShowMore
 @property  BOOL shouldShowSectionHeadersWhenNoItems

  // class methods
  +[GKSectionMetrics metricsForIdiom:]

  // instance methods
  -[GKSectionMetrics setInteritemSpacing:]
  -[GKSectionMetrics interitemSpacing]
  -[GKSectionMetrics alignment]
  -[GKSectionMetrics initWithIdiom:]
  -[GKSectionMetrics padding]
  -[GKSectionMetrics sectionHeaderHeight]
  -[GKSectionMetrics .cxx_destruct]
  -[GKSectionMetrics setAlignment:]
  -[GKSectionMetrics setSectionHeaderHeight:]
  -[GKSectionMetrics copyWithZone:]
  -[GKSectionMetrics setPadding:]
  -[GKSectionMetrics isEqual:]
  -[GKSectionMetrics init]
  -[GKSectionMetrics lineSpacing]
  -[GKSectionMetrics setLineSpacing:]
  -[GKSectionMetrics localDescription]
  -[GKSectionMetrics showMoreHeight]
  -[GKSectionMetrics setShowMoreHeight:]
  -[GKSectionMetrics sectionHeadersShouldPin]
  -[GKSectionMetrics setSectionHeadersShouldPin:]
  -[GKSectionMetrics setItemHeightList:]
  -[GKSectionMetrics calculatedItemHeight]
  -[GKSectionMetrics flowMaxColumnCountForViewWidth:]
  -[GKSectionMetrics itemSizeForCollectionView:]
  -[GKSectionMetrics marginBetweenItems]
  -[GKSectionMetrics setMarginBetweenItems:]
  -[GKSectionMetrics desiredItemWidth]
  -[GKSectionMetrics setDesiredItemWidth:]
  -[GKSectionMetrics flowColumnWidth]
  -[GKSectionMetrics setFlowColumnWidth:]
  -[GKSectionMetrics useViewSizeForFlowMaxColumnCount]
  -[GKSectionMetrics setUseViewSizeForFlowMaxColumnCount:]
  -[GKSectionMetrics flowMaxColumnCount]
  -[GKSectionMetrics setFlowMaxColumnCount:]
  -[GKSectionMetrics desiredItemHeight]
  -[GKSectionMetrics setDesiredItemHeight:]
  -[GKSectionMetrics itemHeightList]
  -[GKSectionMetrics lastLineItemAlignment]
  -[GKSectionMetrics setLastLineItemAlignment:]
  -[GKSectionMetrics maximumVisibleItemCount]
  -[GKSectionMetrics setMaximumVisibleItemCount:]
  -[GKSectionMetrics incrementalRevealItemCount]
  -[GKSectionMetrics setIncrementalRevealItemCount:]
  -[GKSectionMetrics incrementalRevealConsumesPadding]
  -[GKSectionMetrics setIncrementalRevealConsumesPadding:]
  -[GKSectionMetrics shouldAlwaysIncludeShowMore]
  -[GKSectionMetrics setShouldAlwaysIncludeShowMore:]
  -[GKSectionMetrics shouldShowSectionHeadersWhenNoItems]
  -[GKSectionMetrics setShouldShowSectionHeadersWhenNoItems:]
  -[GKSectionMetrics calculatedItemHeightCache]
  -[GKSectionMetrics setCalculatedItemHeightCache:]


GKDynamicColumnSectionMetrics : GKSectionMetrics
 @property  unsigned long columnsInPortrait
 @property  unsigned long columnsInLandscape

  // class methods
  +[GKDynamicColumnSectionMetrics dynamicColumnSectionMetricsWithColumnsInPortrait:columnsInLandscape:forIdiom:]
  +[GKDynamicColumnSectionMetrics dynamicColumnSectionMetricsWithColumnsInPortrait:columnsInLandscape:]

  // instance methods
  -[GKDynamicColumnSectionMetrics initWithIdiom:]
  -[GKDynamicColumnSectionMetrics copyWithZone:]
  -[GKDynamicColumnSectionMetrics itemSizeForCollectionView:]
  -[GKDynamicColumnSectionMetrics updateColumnsInPortrait:columnsInLandscape:]
  -[GKDynamicColumnSectionMetrics columnsInPortrait]
  -[GKDynamicColumnSectionMetrics setColumnsInPortrait:]
  -[GKDynamicColumnSectionMetrics columnsInLandscape]
  -[GKDynamicColumnSectionMetrics setColumnsInLandscape:]


GKSupplementaryViewMetrics : NSObject <NSCopying>
 @property  BOOL shouldUseGlobalIndexing
 @property  BOOL shouldPinGlobal
 @property  {_NSRange=QQ} globalSectionRange
 @property  long long animateWithSection
 @property  double desiredWidth
 @property  double desiredHeight
 @property  BOOL shouldPin
 @property  NSString *kind
 @property  Class reusableViewClass
 @property  SEL configurator
 @property  id target
 @property  BOOL hidden

  // class methods
  +[GKSupplementaryViewMetrics supplementaryMetrics]

  // instance methods
  -[GKSupplementaryViewMetrics kind]
  -[GKSupplementaryViewMetrics setTarget:]
  -[GKSupplementaryViewMetrics target]
  -[GKSupplementaryViewMetrics .cxx_destruct]
  -[GKSupplementaryViewMetrics configurator]
  -[GKSupplementaryViewMetrics setConfigurator:]
  -[GKSupplementaryViewMetrics copyWithZone:]
  -[GKSupplementaryViewMetrics setKind:]
  -[GKSupplementaryViewMetrics isHidden]
  -[GKSupplementaryViewMetrics setHidden:]
  -[GKSupplementaryViewMetrics init]
  -[GKSupplementaryViewMetrics desiredHeight]
  -[GKSupplementaryViewMetrics desiredWidth]
  -[GKSupplementaryViewMetrics setDesiredWidth:]
  -[GKSupplementaryViewMetrics localDescription]
  -[GKSupplementaryViewMetrics sizeForCollectionView:]
  -[GKSupplementaryViewMetrics setDesiredHeight:]
  -[GKSupplementaryViewMetrics shouldPin]
  -[GKSupplementaryViewMetrics setShouldPin:]
  -[GKSupplementaryViewMetrics reusableViewClass]
  -[GKSupplementaryViewMetrics setReusableViewClass:]
  -[GKSupplementaryViewMetrics shouldUseGlobalIndexing]
  -[GKSupplementaryViewMetrics setShouldUseGlobalIndexing:]
  -[GKSupplementaryViewMetrics shouldPinGlobal]
  -[GKSupplementaryViewMetrics setShouldPinGlobal:]
  -[GKSupplementaryViewMetrics globalSectionRange]
  -[GKSupplementaryViewMetrics setGlobalSectionRange:]
  -[GKSupplementaryViewMetrics animateWithSection]
  -[GKSupplementaryViewMetrics setAnimateWithSection:]


GKDashboardSingleButtonReusableFooterView : UICollectionReusableView
 @property  UIButton *button
 @property  NSLayoutConstraint *buttonLeadingConstraint
 @property  @? buttonTapHandler

  // instance methods
  -[GKDashboardSingleButtonReusableFooterView buttonTapped:]
  -[GKDashboardSingleButtonReusableFooterView button]
  -[GKDashboardSingleButtonReusableFooterView .cxx_destruct]
  -[GKDashboardSingleButtonReusableFooterView setButton:]
  -[GKDashboardSingleButtonReusableFooterView awakeFromNib]
  -[GKDashboardSingleButtonReusableFooterView setButtonTitle:forState:]
  -[GKDashboardSingleButtonReusableFooterView buttonLeadingConstraint]
  -[GKDashboardSingleButtonReusableFooterView setButtonLeadingConstraint:]
  -[GKDashboardSingleButtonReusableFooterView buttonTapHandler]
  -[GKDashboardSingleButtonReusableFooterView setButtonTapHandler:]


GKGridLayoutInvalidationContext : UICollectionViewLayoutInvalidationContext
 @property  BOOL invalidateIncrementalReveal
 @property  BOOL invalidateBoundsChange
 @property  BOOL invalidatePlaceholderVisibility
 @property  BOOL invalidatePinnableAreas

  // instance methods
  -[GKGridLayoutInvalidationContext invalidateIncrementalReveal]
  -[GKGridLayoutInvalidationContext setInvalidateIncrementalReveal:]
  -[GKGridLayoutInvalidationContext invalidateBoundsChange]
  -[GKGridLayoutInvalidationContext setInvalidateBoundsChange:]
  -[GKGridLayoutInvalidationContext invalidatePlaceholderVisibility]
  -[GKGridLayoutInvalidationContext setInvalidatePlaceholderVisibility:]
  -[GKGridLayoutInvalidationContext invalidatePinnableAreas]
  -[GKGridLayoutInvalidationContext setInvalidatePinnableAreas:]


GKSectionPresentationData : NSObject
 @property  long long section
 @property  double headerMinY
 @property  double headerMaxY
 @property  double itemsMinY
 @property  double itemsMaxY
 @property  double footerMinY
 @property  double footerMaxY
 @property  double minY
 @property  double maxY
 @property  double showMoreMaxY
 @property  unsigned long numHeaders
 @property  unsigned long numFooters
 @property  unsigned long numOverlays
 @property  unsigned long numItems
 @property  unsigned long overlayOffset

  // instance methods
  -[GKSectionPresentationData section]
  -[GKSectionPresentationData setSection:]
  -[GKSectionPresentationData setNumItems:]
  -[GKSectionPresentationData numItems]
  -[GKSectionPresentationData minY]
  -[GKSectionPresentationData setMinY:]
  -[GKSectionPresentationData maxY]
  -[GKSectionPresentationData setMaxY:]
  -[GKSectionPresentationData initWithSection:presentationData:]
  -[GKSectionPresentationData showMoreMaxY]
  -[GKSectionPresentationData itemsMinY]
  -[GKSectionPresentationData updateWithLayoutAttributes:supplementaryLocation:]
  -[GKSectionPresentationData headerMinY]
  -[GKSectionPresentationData setHeaderMinY:]
  -[GKSectionPresentationData headerMaxY]
  -[GKSectionPresentationData setHeaderMaxY:]
  -[GKSectionPresentationData setItemsMinY:]
  -[GKSectionPresentationData itemsMaxY]
  -[GKSectionPresentationData setItemsMaxY:]
  -[GKSectionPresentationData footerMinY]
  -[GKSectionPresentationData setFooterMinY:]
  -[GKSectionPresentationData footerMaxY]
  -[GKSectionPresentationData setFooterMaxY:]
  -[GKSectionPresentationData setShowMoreMaxY:]
  -[GKSectionPresentationData numHeaders]
  -[GKSectionPresentationData setNumHeaders:]
  -[GKSectionPresentationData numFooters]
  -[GKSectionPresentationData setNumFooters:]
  -[GKSectionPresentationData numOverlays]
  -[GKSectionPresentationData setNumOverlays:]
  -[GKSectionPresentationData overlayOffset]
  -[GKSectionPresentationData setOverlayOffset:]


GKGridLayout : UICollectionViewLayout
 @property  NSPointerArray *sectionToPresentationData
 @property  NSPointerArray *sectionToMetricData
 @property  NSMutableArray *laidOutAttributes
 @property  NSMutableOrderedSet *laidOutPinnableAttributes
 @property  {CGSize=dd} laidOutContentSize
 @property  {CGSize=dd} oldLaidOutContentSize
 @property  {CGSize=dd} minimumLaidOutContentSize
 @property  NSMutableDictionary *indexPathToSupplementary
 @property  NSMutableDictionary *indexPathToDecoration
 @property  NSMutableDictionary *indexPathToItem
 @property  NSMutableDictionary *oldIndexPathToSupplementary
 @property  NSMutableDictionary *oldIndexPathToDecoration
 @property  NSMutableDictionary *oldIndexPathToItem
 @property  NSMutableDictionary *indexPathToMetrics
 @property  NSMutableIndexSet *sectionsWithPinnedHeaders
 @property  NSMutableSet *revealedIndexPaths
 @property  NSIndexPath *indexPathOfTouchedShowMore
 @property  BOOL noMoreShowMore
 @property  NSMutableDictionary *keyToMetricData
 @property  NSMutableDictionary *oldSectionToMetricKeys
 @property  long long metricsInvalidationCount
 @property  NSArray *currentUpdateItems
 @property  NSMutableSet *knownSupplementaryKinds
 @property  GKCollectionViewDataSource *dataSourceForUpdate
 @property  unsigned long updateType
 @property  BOOL movedItemsInUpdateCarrySections
 @property  BOOL displayClipView
 @property  GKCollectionViewLayoutAttributes *clipViewAttributes
 @property  unsigned long invalidationFlags
 @property  BOOL displayingOverlay
 @property  double segmentedBoxY
 @property  BOOL shouldLayoutRTL
 @property  NSSet *visibleIndexPathsFilter
 @property  GKSectionMetrics *defaultSectionMetricsInternal
 @property  GKDataSourceMetrics *dataSourceMetrics
 @property  double hiddenSearchBarOffset
 @property  double segmentedHeaderPinningOffset
 @property  BOOL showPlaceholder
 @property  unsigned long portraitInterleavedSectionsCount
 @property  unsigned long landscapeInterleavedSectionsCount
 @property  double leftLayoutGuideOffset
 @property  double rightLayoutGuideOffset
 @property  BOOL hideSearchBarOnAppear
 @property  BOOL hideAboveSegmentOnAppear
 @property  double bottomContentPadding
 @property  BOOL ignoreBoundsForSizeCalculation

  // class methods
  +[GKGridLayout layoutAttributesClass]
  +[GKGridLayout invalidationContextClass]

  // instance methods
  -[GKGridLayout layoutAttributesForDecorationViewOfKind:atIndexPath:]
  -[GKGridLayout finalLayoutAttributesForDisappearingItemAtIndexPath:]
  -[GKGridLayout _resetState]
  -[GKGridLayout shouldInvalidateLayoutForBoundsChange:]
  -[GKGridLayout prepareLayout]
  -[GKGridLayout collectionViewContentSize]
  -[GKGridLayout invalidateLayoutWithContext:]
  -[GKGridLayout indexPathsToDeleteForSupplementaryViewOfKind:]
  -[GKGridLayout layoutAttributesForItemAtIndexPath:]
  -[GKGridLayout layoutAttributesForSupplementaryViewOfKind:atIndexPath:]
  -[GKGridLayout layoutAttributesForElementsInRect:]
  -[GKGridLayout invalidationContextForBoundsChange:]
  -[GKGridLayout setShowPlaceholder:]
  -[GKGridLayout initialLayoutAttributesForAppearingItemAtIndexPath:]
  -[GKGridLayout showPlaceholder]
  -[GKGridLayout setUpdateType:]
  -[GKGridLayout .cxx_destruct]
  -[GKGridLayout scale]
  -[GKGridLayout updateType]
  -[GKGridLayout init]
  -[GKGridLayout prepareForCollectionViewUpdates:]
  -[GKGridLayout finalizeCollectionViewUpdates]
  -[GKGridLayout targetContentOffsetForProposedContentOffset:withScrollingVelocity:]
  -[GKGridLayout targetContentOffsetForProposedContentOffset:]
  -[GKGridLayout _animationForReusableView:toLayoutAttributes:type:]
  -[GKGridLayout prepareForAnimatedBoundsChange:]
  -[GKGridLayout finalizeAnimatedBoundsChange]
  -[GKGridLayout initialLayoutAttributesForAppearingSupplementaryElementOfKind:atIndexPath:]
  -[GKGridLayout finalLayoutAttributesForDisappearingSupplementaryElementOfKind:atIndexPath:]
  -[GKGridLayout bottomContentPadding]
  -[GKGridLayout searchResultsCount]
  -[GKGridLayout layoutBounds]
  -[GKGridLayout _gkDescriptionWithChildren:]
  -[GKGridLayout updatePlaceholderVisibility]
  -[GKGridLayout metricDataForKey:]
  -[GKGridLayout metricDataForSection:]
  -[GKGridLayout filteredTotalItemCountForSection:]
  -[GKGridLayout setMetricData:forSection:]
  -[GKGridLayout attributesForSupplementaryIndexPath:]
  -[GKGridLayout setPortraitInterleavedSectionsCount:]
  -[GKGridLayout setLandscapeInterleavedSectionsCount:]
  -[GKGridLayout defaultSectionMetricsInternal]
  -[GKGridLayout metricsForSection:]
  -[GKGridLayout setVisibleIndexPathsFilter:]
  -[GKGridLayout setLeftLayoutGuideOffset:]
  -[GKGridLayout setRightLayoutGuideOffset:]
  -[GKGridLayout _sizeAdjustedForTabBarSettingsBasedOnSize:]
  -[GKGridLayout calculateCollectionViewContentSize]
  -[GKGridLayout refreshMetrics]
  -[GKGridLayout updatePinnableAreas]
  -[GKGridLayout enableClipView]
  -[GKGridLayout disableClipView]
  -[GKGridLayout shouldUpdateVisibleCellLayoutAttributes]
  -[GKGridLayout forceFullInvalidate]
  -[GKGridLayout calculatedBottomPaddingForSection:]
  -[GKGridLayout updatePresentationDataForLastInterleavedSections]
  -[GKGridLayout updatePresentationDataInSection:withAttributes:supplementaryLocation:]
  -[GKGridLayout finalizeGlobalPresentationDataWithSectionRange:]
  -[GKGridLayout _existingPresentationDataForSection:]
  -[GKGridLayout presentationDataForSection:]
  -[GKGridLayout _areWePortrait]
  -[GKGridLayout sectionsPerRow]
  -[GKGridLayout yOffsetForSection:]
  -[GKGridLayout enumerateSectionsIndexesOverlappingYOffset:block:]
  -[GKGridLayout indexOfSupplementaryMetricsOfKind:inList:]
  -[GKGridLayout _prepareSupplementaryLayoutForSection:atLocation:offset:globalOffset:]
  -[GKGridLayout _prepareOverlayLayoutForSection:offset:]
  -[GKGridLayout _prepareSegmentedBoxLayoutWithOffset:]
  -[GKGridLayout firstVisibleIndexAtOrAfterItem:itemCount:inSection:]
  -[GKGridLayout _prepareItemLayoutForSection:]
  -[GKGridLayout fullyRebuildLayout]
  -[GKGridLayout applyBottomPinningToAttributes:minY:maxY:]
  -[GKGridLayout applyTopPinningToAttributes:minY:maxY:]
  -[GKGridLayout layoutBottomPinningAttributes:minY:maxY:]
  -[GKGridLayout layoutTopPinningAttributes:minY:maxY:]
  -[GKGridLayout finalizePinnedAttributes:forSection:footer:]
  -[GKGridLayout _filterPinnedAttributes]
  -[GKGridLayout currentMaxVisibleItemCountForSection:]
  -[GKGridLayout revealMoreForSectionIndex:]
  -[GKGridLayout revealMoreForSectionIndex:revealCount:andDeleteItemCount:]
  -[GKGridLayout initialLayoutAttributesForSlidingInItemAtIndexPath:]
  -[GKGridLayout finalLayoutAttributesForSlidingAwayItemAtIndexPath:]
  -[GKGridLayout shouldSlideInSupplementaryElementOfKind:forUpdateItem:atIndexPath:]
  -[GKGridLayout yOffsetForSlidingUpdate]
  -[GKGridLayout shouldSlideOutSupplementaryElementOfKind:forUpdateItem:atIndexPath:]
  -[GKGridLayout prepareForUpdate:inDataSource:]
  -[GKGridLayout prepareForMovingItemsCarryingSections]
  -[GKGridLayout portraitInterleavedSectionsCount]
  -[GKGridLayout landscapeInterleavedSectionsCount]
  -[GKGridLayout leftLayoutGuideOffset]
  -[GKGridLayout rightLayoutGuideOffset]
  -[GKGridLayout hideSearchBarOnAppear]
  -[GKGridLayout setHideSearchBarOnAppear:]
  -[GKGridLayout hideAboveSegmentOnAppear]
  -[GKGridLayout setHideAboveSegmentOnAppear:]
  -[GKGridLayout laidOutContentSize]
  -[GKGridLayout setLaidOutContentSize:]
  -[GKGridLayout minimumLaidOutContentSize]
  -[GKGridLayout setMinimumLaidOutContentSize:]
  -[GKGridLayout setBottomContentPadding:]
  -[GKGridLayout ignoreBoundsForSizeCalculation]
  -[GKGridLayout setIgnoreBoundsForSizeCalculation:]
  -[GKGridLayout sectionToPresentationData]
  -[GKGridLayout setSectionToPresentationData:]
  -[GKGridLayout sectionToMetricData]
  -[GKGridLayout setSectionToMetricData:]
  -[GKGridLayout laidOutAttributes]
  -[GKGridLayout setLaidOutAttributes:]
  -[GKGridLayout laidOutPinnableAttributes]
  -[GKGridLayout setLaidOutPinnableAttributes:]
  -[GKGridLayout oldLaidOutContentSize]
  -[GKGridLayout setOldLaidOutContentSize:]
  -[GKGridLayout indexPathToSupplementary]
  -[GKGridLayout setIndexPathToSupplementary:]
  -[GKGridLayout indexPathToDecoration]
  -[GKGridLayout setIndexPathToDecoration:]
  -[GKGridLayout indexPathToItem]
  -[GKGridLayout setIndexPathToItem:]
  -[GKGridLayout oldIndexPathToSupplementary]
  -[GKGridLayout setOldIndexPathToSupplementary:]
  -[GKGridLayout oldIndexPathToDecoration]
  -[GKGridLayout setOldIndexPathToDecoration:]
  -[GKGridLayout oldIndexPathToItem]
  -[GKGridLayout setOldIndexPathToItem:]
  -[GKGridLayout indexPathToMetrics]
  -[GKGridLayout setIndexPathToMetrics:]
  -[GKGridLayout sectionsWithPinnedHeaders]
  -[GKGridLayout setSectionsWithPinnedHeaders:]
  -[GKGridLayout revealedIndexPaths]
  -[GKGridLayout setRevealedIndexPaths:]
  -[GKGridLayout indexPathOfTouchedShowMore]
  -[GKGridLayout setIndexPathOfTouchedShowMore:]
  -[GKGridLayout noMoreShowMore]
  -[GKGridLayout setNoMoreShowMore:]
  -[GKGridLayout keyToMetricData]
  -[GKGridLayout setKeyToMetricData:]
  -[GKGridLayout oldSectionToMetricKeys]
  -[GKGridLayout setOldSectionToMetricKeys:]
  -[GKGridLayout metricsInvalidationCount]
  -[GKGridLayout setMetricsInvalidationCount:]
  -[GKGridLayout currentUpdateItems]
  -[GKGridLayout setCurrentUpdateItems:]
  -[GKGridLayout knownSupplementaryKinds]
  -[GKGridLayout setKnownSupplementaryKinds:]
  -[GKGridLayout dataSourceForUpdate]
  -[GKGridLayout setDataSourceForUpdate:]
  -[GKGridLayout movedItemsInUpdateCarrySections]
  -[GKGridLayout setMovedItemsInUpdateCarrySections:]
  -[GKGridLayout displayClipView]
  -[GKGridLayout setDisplayClipView:]
  -[GKGridLayout clipViewAttributes]
  -[GKGridLayout setClipViewAttributes:]
  -[GKGridLayout invalidationFlags]
  -[GKGridLayout setInvalidationFlags:]
  -[GKGridLayout displayingOverlay]
  -[GKGridLayout setDisplayingOverlay:]
  -[GKGridLayout segmentedBoxY]
  -[GKGridLayout setSegmentedBoxY:]
  -[GKGridLayout shouldLayoutRTL]
  -[GKGridLayout setShouldLayoutRTL:]
  -[GKGridLayout visibleIndexPathsFilter]
  -[GKGridLayout setDefaultSectionMetricsInternal:]
  -[GKGridLayout dataSourceMetrics]
  -[GKGridLayout setDataSourceMetrics:]
  -[GKGridLayout hiddenSearchBarOffset]
  -[GKGridLayout setHiddenSearchBarOffset:]
  -[GKGridLayout segmentedHeaderPinningOffset]
  -[GKGridLayout setSegmentedHeaderPinningOffset:]


GKCancelSwipeToEditGestureRecognizer : UITapGestureRecognizer
 @property  GKCollectionViewCell *currentEditingCell

  // instance methods
  -[GKCancelSwipeToEditGestureRecognizer .cxx_destruct]
  -[GKCancelSwipeToEditGestureRecognizer touchesEnded:withEvent:]
  -[GKCancelSwipeToEditGestureRecognizer currentEditingCell]
  -[GKCancelSwipeToEditGestureRecognizer setCurrentEditingCell:]


GKSwipeToEditStateMachine : _GKStateMachine <UIGestureRecognizerDelegate, GKSegmentedSectionDataSourceEventHandler>
 @property  UICollectionView *collectionView
 @property  GKCollectionViewDataSource *gkDataSource
 @property  GKCancelSwipeToEditGestureRecognizer *editModeCancelRecognizer
 @property  UIPanGestureRecognizer *panGestureRecognizer
 @property  GKCollectionViewCell *editingCell
 @property  double startTrackingX
 @property  _UIDynamicAnimation *openAnimation
 @property  NSIndexPath *trackedIndexPath
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKSwipeToEditStateMachine setCollectionView:]
  -[GKSwipeToEditStateMachine setPanGestureRecognizer:]
  -[GKSwipeToEditStateMachine setDelegate:]
  -[GKSwipeToEditStateMachine gestureRecognizerShouldBegin:]
  -[GKSwipeToEditStateMachine segmentedSectionDataSource:inSection:didSelectDataSourceWithIndex:]
  -[GKSwipeToEditStateMachine handleCancelTap:]
  -[GKSwipeToEditStateMachine openAnimation]
  -[GKSwipeToEditStateMachine handlePan:]
  -[GKSwipeToEditStateMachine .cxx_destruct]
  -[GKSwipeToEditStateMachine collectionView]
  -[GKSwipeToEditStateMachine gkDataSource]
  -[GKSwipeToEditStateMachine didEnterNothingState]
  -[GKSwipeToEditStateMachine setEditingCell:]
  -[GKSwipeToEditStateMachine initWithCollectionView:]
  -[GKSwipeToEditStateMachine trackedIndexPath]
  -[GKSwipeToEditStateMachine editModeCancelRecognizer]
  -[GKSwipeToEditStateMachine setStartTrackingX:]
  -[GKSwipeToEditStateMachine setEditModeCancelRecognizer:]
  -[GKSwipeToEditStateMachine didExitNothingState]
  -[GKSwipeToEditStateMachine shutActionPaneForEditingCellAnimated:]
  -[GKSwipeToEditStateMachine didEnterAnimatingOpenState]
  -[GKSwipeToEditStateMachine viewDidDisappear:]
  -[GKSwipeToEditStateMachine didExitAnimatingOpenState]
  -[GKSwipeToEditStateMachine startTrackingX]
  -[GKSwipeToEditStateMachine setGkDataSource:]
  -[GKSwipeToEditStateMachine setOpenAnimation:]
  -[GKSwipeToEditStateMachine didEnterAnimatingShutState]
  -[GKSwipeToEditStateMachine editingCell]
  -[GKSwipeToEditStateMachine xPositionForTranslation:]
  -[GKSwipeToEditStateMachine didExitEditingState]
  -[GKSwipeToEditStateMachine didEnterEditingState]
  -[GKSwipeToEditStateMachine panGestureRecognizer]


GKProfilePrivacyTableViewController : UITableViewController
 @property  int currentPrivacySettings
 @property  int initialPrivacySettings
 @property  NSMutableArray *availblePrivacySettings
 @property  BOOL isSendingRequest
 @property  GKLocalPlayer *localPlayer
 @property  <GKProfilePrivacyTableViewControllerDelegate> *delegate

  // instance methods
  -[GKProfilePrivacyTableViewController tableView:heightForRowAtIndexPath:]
  -[GKProfilePrivacyTableViewController tableView:cellForRowAtIndexPath:]
  -[GKProfilePrivacyTableViewController tableView:numberOfRowsInSection:]
  -[GKProfilePrivacyTableViewController tableView:shouldHighlightRowAtIndexPath:]
  -[GKProfilePrivacyTableViewController numberOfSectionsInTableView:]
  -[GKProfilePrivacyTableViewController setDelegate:]
  -[GKProfilePrivacyTableViewController tableView:didSelectRowAtIndexPath:]
  -[GKProfilePrivacyTableViewController delegate]
  -[GKProfilePrivacyTableViewController .cxx_destruct]
  -[GKProfilePrivacyTableViewController viewDidLoad]
  -[GKProfilePrivacyTableViewController traitCollectionDidChange:]
  -[GKProfilePrivacyTableViewController localPlayer]
  -[GKProfilePrivacyTableViewController setLocalPlayer:]
  -[GKProfilePrivacyTableViewController updateTableViewLayoutMargins]
  -[GKProfilePrivacyTableViewController titleForPrivacy:]
  -[GKProfilePrivacyTableViewController tableFooterForPrivacy:]
  -[GKProfilePrivacyTableViewController setIsSendingRequest:]
  -[GKProfilePrivacyTableViewController updateCell:withCheckmark:]
  -[GKProfilePrivacyTableViewController currentPrivacySettings]
  -[GKProfilePrivacyTableViewController setCurrentPrivacySettings:]
  -[GKProfilePrivacyTableViewController initialPrivacySettings]
  -[GKProfilePrivacyTableViewController setInitialPrivacySettings:]
  -[GKProfilePrivacyTableViewController availblePrivacySettings]
  -[GKProfilePrivacyTableViewController setAvailblePrivacySettings:]
  -[GKProfilePrivacyTableViewController isSendingRequest]


GKGameControllerSupport : NSObject <GKGameCenterControllerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[GKGameControllerSupport shared]

  // instance methods
  -[GKGameControllerSupport controllerDidConnect:]
  -[GKGameControllerSupport gameCenterViewControllerDidFinish:]
  -[GKGameControllerSupport registerGameControllers]
  -[GKGameControllerSupport shouldRegisterGameControllers]
  -[GKGameControllerSupport setupController:]
  -[GKGameControllerSupport showDashboard]


GKDashboardTurnCell : GKDashboardPlayerCell
 @property  UILabel *dateLabel
 @property  UILabel *turnLabel
 @property  UIImageView *actionIndicatorView
 @property  NSLayoutConstraint *dateToNameConstraint
 @property  NSLayoutConstraint *turnToNameConstraint
 @property  UIColor *dateColor
 @property  UIColor *turnColor
 @property  double dateToNameConstant
 @property  double turnToNameConstant
 @property  long long displayIndex

  // class methods
  +[GKDashboardTurnCell defaultSize]
  +[GKDashboardTurnCell defaultSizeForTurnDetail]

  // instance methods
  -[GKDashboardTurnCell .cxx_destruct]
  -[GKDashboardTurnCell awakeFromNib]
  -[GKDashboardTurnCell dateLabel]
  -[GKDashboardTurnCell setDateLabel:]
  -[GKDashboardTurnCell displayIndex]
  -[GKDashboardTurnCell actionIndicatorView]
  -[GKDashboardTurnCell setActionIndicatorView:]
  -[GKDashboardTurnCell setOnDarkBackground:]
  -[GKDashboardTurnCell wantsLocalPlayerAction:]
  -[GKDashboardTurnCell configureForMatch:]
  -[GKDashboardTurnCell configureForParticipant:inMatch:]
  -[GKDashboardTurnCell setDisplayIndex:]
  -[GKDashboardTurnCell turnLabel]
  -[GKDashboardTurnCell setTurnLabel:]
  -[GKDashboardTurnCell dateToNameConstraint]
  -[GKDashboardTurnCell setDateToNameConstraint:]
  -[GKDashboardTurnCell turnToNameConstraint]
  -[GKDashboardTurnCell setTurnToNameConstraint:]
  -[GKDashboardTurnCell dateColor]
  -[GKDashboardTurnCell setDateColor:]
  -[GKDashboardTurnCell turnColor]
  -[GKDashboardTurnCell setTurnColor:]
  -[GKDashboardTurnCell dateToNameConstant]
  -[GKDashboardTurnCell setDateToNameConstant:]
  -[GKDashboardTurnCell turnToNameConstant]
  -[GKDashboardTurnCell setTurnToNameConstant:]


GKDashboardChallengePlayerPickerViewController : GKDashboardCollectionViewController <UITextFieldDelegate, UISearchBarDelegate, GKComposeControllerDelegate>
 @property  GKChallenge *challenge
 @property  NSArray *initiallySelectedPlayers
 @property  BOOL shouldIgnoreClearSelection
 @property  UILabel *descriptionLabel
 @property  UIButton *sendButton
 @property  UIBarButtonItem *customizeMessageButton
 @property  UITextField *messageField
 @property  UIView *scrollingHeader
 @property  NSLayoutConstraint *scrollingHeaderTopConstraint
 @property  double scrollingHeaderTopConstraintConstant
 @property  {UIEdgeInsets=dddd} initialInsets
 @property  BOOL shouldApplyInitialOffset
 @property  NSLayoutConstraint *customizeMessageBottomConstraint
 @property  double initialCustomizeMessageBottomConstraintConstant
 @property  UIViewController *composeController
 @property  NSString *message
 @property  @? completionHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKDashboardChallengePlayerPickerViewController clearSelection]
  -[GKDashboardChallengePlayerPickerViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[GKDashboardChallengePlayerPickerViewController setChallenge:]
  -[GKDashboardChallengePlayerPickerViewController cancel:]
  -[GKDashboardChallengePlayerPickerViewController searchBar:textDidChange:]
  -[GKDashboardChallengePlayerPickerViewController setMessage:]
  -[GKDashboardChallengePlayerPickerViewController setDescriptionLabel:]
  -[GKDashboardChallengePlayerPickerViewController challenge]
  -[GKDashboardChallengePlayerPickerViewController addMessage:]
  -[GKDashboardChallengePlayerPickerViewController scrollViewDidScroll:]
  -[GKDashboardChallengePlayerPickerViewController textFieldShouldReturn:]
  -[GKDashboardChallengePlayerPickerViewController collectionView:didDeselectItemAtIndexPath:]
  -[GKDashboardChallengePlayerPickerViewController viewDidAppear:]
  -[GKDashboardChallengePlayerPickerViewController setSearchText:]
  -[GKDashboardChallengePlayerPickerViewController .cxx_destruct]
  -[GKDashboardChallengePlayerPickerViewController viewDidLoad]
  -[GKDashboardChallengePlayerPickerViewController viewWillAppear:]
  -[GKDashboardChallengePlayerPickerViewController preferredFocusEnvironments]
  -[GKDashboardChallengePlayerPickerViewController collectionView:didSelectItemAtIndexPath:]
  -[GKDashboardChallengePlayerPickerViewController send:]
  -[GKDashboardChallengePlayerPickerViewController descriptionLabel]
  -[GKDashboardChallengePlayerPickerViewController searchBarCancelButtonClicked:]
  -[GKDashboardChallengePlayerPickerViewController message]
  -[GKDashboardChallengePlayerPickerViewController setCompletionHandler:]
  -[GKDashboardChallengePlayerPickerViewController searchBarSearchButtonClicked:]
  -[GKDashboardChallengePlayerPickerViewController completionHandler]
  -[GKDashboardChallengePlayerPickerViewController loadData]
  -[GKDashboardChallengePlayerPickerViewController sendButton]
  -[GKDashboardChallengePlayerPickerViewController setSendButton:]
  -[GKDashboardChallengePlayerPickerViewController dataUpdated:withError:]
  -[GKDashboardChallengePlayerPickerViewController setupNoContentView:withError:]
  -[GKDashboardChallengePlayerPickerViewController initWithChallenge:initiallySelectedPlayers:]
  -[GKDashboardChallengePlayerPickerViewController adjustCustomizeMessageConstraint]
  -[GKDashboardChallengePlayerPickerViewController applyInitialContentOffset]
  -[GKDashboardChallengePlayerPickerViewController selectPlayersAtIndexPaths:]
  -[GKDashboardChallengePlayerPickerViewController _updateButtonEnableState]
  -[GKDashboardChallengePlayerPickerViewController initiallySelectedPlayers]
  -[GKDashboardChallengePlayerPickerViewController setInitiallySelectedPlayers:]
  -[GKDashboardChallengePlayerPickerViewController shouldIgnoreClearSelection]
  -[GKDashboardChallengePlayerPickerViewController setShouldIgnoreClearSelection:]
  -[GKDashboardChallengePlayerPickerViewController customizeMessageButton]
  -[GKDashboardChallengePlayerPickerViewController setCustomizeMessageButton:]
  -[GKDashboardChallengePlayerPickerViewController messageField]
  -[GKDashboardChallengePlayerPickerViewController setMessageField:]
  -[GKDashboardChallengePlayerPickerViewController scrollingHeader]
  -[GKDashboardChallengePlayerPickerViewController setScrollingHeader:]
  -[GKDashboardChallengePlayerPickerViewController scrollingHeaderTopConstraint]
  -[GKDashboardChallengePlayerPickerViewController setScrollingHeaderTopConstraint:]
  -[GKDashboardChallengePlayerPickerViewController scrollingHeaderTopConstraintConstant]
  -[GKDashboardChallengePlayerPickerViewController setScrollingHeaderTopConstraintConstant:]
  -[GKDashboardChallengePlayerPickerViewController initialInsets]
  -[GKDashboardChallengePlayerPickerViewController setInitialInsets:]
  -[GKDashboardChallengePlayerPickerViewController shouldApplyInitialOffset]
  -[GKDashboardChallengePlayerPickerViewController setShouldApplyInitialOffset:]
  -[GKDashboardChallengePlayerPickerViewController customizeMessageBottomConstraint]
  -[GKDashboardChallengePlayerPickerViewController setCustomizeMessageBottomConstraint:]
  -[GKDashboardChallengePlayerPickerViewController initialCustomizeMessageBottomConstraintConstant]
  -[GKDashboardChallengePlayerPickerViewController setInitialCustomizeMessageBottomConstraintConstant:]
  -[GKDashboardChallengePlayerPickerViewController composeController]
  -[GKDashboardChallengePlayerPickerViewController setComposeController:]


GKDataSourceMetrics : GKGridLayoutMetrics
 @property  NSString *cachedKey
 @property  {_NSRange=QQ} globalSectionRange
 @property  {_NSRange=QQ} localSectionRange
 @property  NSMutableDictionary *sectionToMetrics
 @property  NSArray *childMetrics
 @property  GKCollectionViewDataSource *dataSource

  // class methods
  +[GKDataSourceMetrics dataSourceMetricsWithMetrics:dataSource:]

  // instance methods
  -[GKDataSourceMetrics dataSource]
  -[GKDataSourceMetrics .cxx_destruct]
  -[GKDataSourceMetrics setDataSource:]
  -[GKDataSourceMetrics copyWithZone:]
  -[GKDataSourceMetrics childMetrics]
  -[GKDataSourceMetrics setChildMetrics:]
  -[GKDataSourceMetrics _gkDescriptionWithChildren:]
  -[GKDataSourceMetrics globalSectionRange]
  -[GKDataSourceMetrics setGlobalSectionRange:]
  -[GKDataSourceMetrics metricsForSection:]
  -[GKDataSourceMetrics initWithMetrics:dataSource:]
  -[GKDataSourceMetrics setMetrics:forSection:]
  -[GKDataSourceMetrics globalLayoutKey]
  -[GKDataSourceMetrics globalLayoutKeyForSection:]
  -[GKDataSourceMetrics localSectionRange]
  -[GKDataSourceMetrics setLocalSectionRange:]
  -[GKDataSourceMetrics sectionToMetrics]
  -[GKDataSourceMetrics setSectionToMetrics:]
  -[GKDataSourceMetrics cachedKey]
  -[GKDataSourceMetrics setCachedKey:]
  -[GKDataSourceMetrics computeGlobalSectionRangesWithBaseIndex:]
  -[GKDataSourceMetrics accumulateSections:layout:]
  -[GKDataSourceMetrics applyDataSourceMetricsToSections:withParent:layout:]
  -[GKDataSourceMetrics generateMetricDataForLayout:]
  -[GKDataSourceMetrics prepareLayout:]


GKSimpleComposeController : GKBaseComposeController
 @property  GKComposeHeaderWithStaticRecipients *toField
 @property  NSString *defaultMessage
 @property  NSArray *players
 @property  @? doneHandler

  // instance methods
  -[GKSimpleComposeController .cxx_destruct]
  -[GKSimpleComposeController viewWillAppear:]
  -[GKSimpleComposeController loadView]
  -[GKSimpleComposeController toField]
  -[GKSimpleComposeController setToField:]
  -[GKSimpleComposeController players]
  -[GKSimpleComposeController donePressed]
  -[GKSimpleComposeController setPlayers:]
  -[GKSimpleComposeController setupSendButton]
  -[GKSimpleComposeController pushOntoNavigationController:withDoneHandler:]
  -[GKSimpleComposeController defaultMessage]
  -[GKSimpleComposeController setDefaultMessage:]
  -[GKSimpleComposeController doneHandler]
  -[GKSimpleComposeController setDoneHandler:]


GKDashboardShowMoreTextCell : GKRectShadowCell
 @property  UILabel *label

  // class methods
  +[GKDashboardShowMoreTextCell defaultSize]

  // instance methods
  -[GKDashboardShowMoreTextCell setLabel:]
  -[GKDashboardShowMoreTextCell label]
  -[GKDashboardShowMoreTextCell awakeFromNib]


GKLoadBundleResourceOperation : GKLoadResourceOperation
 @property  NSString *resourceName
 @property  NSArray *searchBundles

  // instance methods
  -[GKLoadBundleResourceOperation .cxx_destruct]
  -[GKLoadBundleResourceOperation main]
  -[GKLoadBundleResourceOperation resourceName]
  -[GKLoadBundleResourceOperation initWithResourceName:searchBundles:]
  -[GKLoadBundleResourceOperation searchBundles]


GKLoadableContentViewController : GKViewController <_GKStateMachineDelegate>
 @property  GKLoadableContentStateMachine *loadingMachine
 @property  NSString *loadingState
 @property  UIActivityIndicatorView *activityIndicator
 @property  NSArray *viewsToHideWhileLoading
 @property  double loadingIndicatorDelay
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKLoadableContentViewController activityIndicator]
  -[GKLoadableContentViewController .cxx_destruct]
  -[GKLoadableContentViewController setActivityIndicator:]
  -[GKLoadableContentViewController init]
  -[GKLoadableContentViewController loadingState]
  -[GKLoadableContentViewController setLoadingState:]
  -[GKLoadableContentViewController didEnterLoadingState]
  -[GKLoadableContentViewController didExitLoadingState]
  -[GKLoadableContentViewController setViewsToHideWhileLoading:]
  -[GKLoadableContentViewController didEnterLoadedState]
  -[GKLoadableContentViewController didExitLoadedState]
  -[GKLoadableContentViewController viewsToHideWhileLoading]
  -[GKLoadableContentViewController loadingIndicatorDelay]
  -[GKLoadableContentViewController setLoadingIndicatorDelay:]
  -[GKLoadableContentViewController loadingMachine]
  -[GKLoadableContentViewController setLoadingMachine:]


GKDetailViewController : GKDashboardCollectionViewController
  // instance methods
  -[GKDetailViewController viewDidLoad]
  -[GKDetailViewController viewWillAppear:]
  -[GKDetailViewController viewWillDisappear:]
  -[GKDetailViewController reportProblemAboutPlayer:]
  -[GKDetailViewController shareAchievement:sendingView:]
  -[GKDetailViewController shareScore:fromLeaderboard:sendingView:]


GKDashboardAchievementDetailViewController : GKDetailViewController
 @property  GKAchievementIconView *iconView
 @property  UILabel *titleLabel
 @property  UILabel *descriptionLabel
 @property  UILabel *progressLabel
 @property  UILabel *disabledLabel
 @property  UIButton *firstButton
 @property  UIButton *secondButton
 @property  GKAchievement *achievement
 @property  GKAchievement *localAchievement

  // instance methods
  -[GKDashboardAchievementDetailViewController setTitleLabel:]
  -[GKDashboardAchievementDetailViewController setDescriptionLabel:]
  -[GKDashboardAchievementDetailViewController .cxx_destruct]
  -[GKDashboardAchievementDetailViewController viewDidLoad]
  -[GKDashboardAchievementDetailViewController setIconView:]
  -[GKDashboardAchievementDetailViewController iconView]
  -[GKDashboardAchievementDetailViewController preferredFocusEnvironments]
  -[GKDashboardAchievementDetailViewController descriptionLabel]
  -[GKDashboardAchievementDetailViewController share:]
  -[GKDashboardAchievementDetailViewController titleLabel]
  -[GKDashboardAchievementDetailViewController progressLabel]
  -[GKDashboardAchievementDetailViewController setProgressLabel:]
  -[GKDashboardAchievementDetailViewController challenge:]
  -[GKDashboardAchievementDetailViewController initWithAchievement:localAchievement:]
  -[GKDashboardAchievementDetailViewController configureForAchievements]
  -[GKDashboardAchievementDetailViewController disabledLabel]
  -[GKDashboardAchievementDetailViewController setDisabledLabel:]
  -[GKDashboardAchievementDetailViewController firstButton]
  -[GKDashboardAchievementDetailViewController setFirstButton:]
  -[GKDashboardAchievementDetailViewController secondButton]
  -[GKDashboardAchievementDetailViewController setSecondButton:]
  -[GKDashboardAchievementDetailViewController achievement]
  -[GKDashboardAchievementDetailViewController setAchievement:]
  -[GKDashboardAchievementDetailViewController localAchievement]
  -[GKDashboardAchievementDetailViewController setLocalAchievement:]


GKMobileGestalt : NSObject
  // class methods
  +[GKMobileGestalt productType]
  +[GKMobileGestalt deviceClass]
  +[GKMobileGestalt wapiCapability]


GKGameLayerCollectionDataSource : NSObject <UICollectionViewDataSource, UICollectionViewDelegateFlowLayout>
 @property  GKGameRecord *gameRecord
 @property  NSString *title
 @property  UIViewController *presentationViewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKGameLayerCollectionDataSource collectionView:cellForItemAtIndexPath:]
  -[GKGameLayerCollectionDataSource collectionView:layout:minimumLineSpacingForSectionAtIndex:]
  -[GKGameLayerCollectionDataSource collectionView:shouldSelectItemAtIndexPath:]
  -[GKGameLayerCollectionDataSource itemCount]
  -[GKGameLayerCollectionDataSource collectionView:layout:sizeForItemAtIndexPath:]
  -[GKGameLayerCollectionDataSource collectionView:layout:minimumInteritemSpacingForSectionAtIndex:]
  -[GKGameLayerCollectionDataSource .cxx_destruct]
  -[GKGameLayerCollectionDataSource title]
  -[GKGameLayerCollectionDataSource collectionView:didSelectItemAtIndexPath:]
  -[GKGameLayerCollectionDataSource collectionView:numberOfItemsInSection:]
  -[GKGameLayerCollectionDataSource loadDataWithCompletionHandler:]
  -[GKGameLayerCollectionDataSource cellSpacing]
  -[GKGameLayerCollectionDataSource presentationViewController]
  -[GKGameLayerCollectionDataSource setPresentationViewController:]
  -[GKGameLayerCollectionDataSource setupCollectionView:]
  -[GKGameLayerCollectionDataSource gameRecord]
  -[GKGameLayerCollectionDataSource setGameRecord:]
  -[GKGameLayerCollectionDataSource initWithGameRecord:]
  -[GKGameLayerCollectionDataSource standardCellSizeForCollectionView:]
  -[GKGameLayerCollectionDataSource prepareCell:forItemAtIndexPath:]
  -[GKGameLayerCollectionDataSource handleSelectionInCollectionView:forItemAtIndexPath:]


GKNicknameController : NSObject <UITextFieldDelegate>
 @property  BOOL nicknameWasEdited
 @property  BOOL nicknameChangeWasCommitted
 @property  GKReachability *reachability
 @property  NSArray *suggestedNicknames
 @property  NSString *defaultNickname
 @property  UITextField *nickname
 @property  BOOL shouldShakeTextFieldOnError
 @property  BOOL shouldUseSuggestedNicknameOnDefaultNickname
 @property  UIActivityIndicatorView *activityIndicator
 @property  <GKNicknameControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKNicknameController activityIndicator]
  -[GKNicknameController reachability]
  -[GKNicknameController textFieldShouldReturn:]
  -[GKNicknameController setReachability:]
  -[GKNicknameController setDelegate:]
  -[GKNicknameController textFieldDidBeginEditing:]
  -[GKNicknameController delegate]
  -[GKNicknameController reset]
  -[GKNicknameController textFieldShouldBeginEditing:]
  -[GKNicknameController nickname]
  -[GKNicknameController .cxx_destruct]
  -[GKNicknameController setActivityIndicator:]
  -[GKNicknameController keyboardWillShow:]
  -[GKNicknameController keyboardWillHide:]
  -[GKNicknameController setNickname:]
  -[GKNicknameController init]
  -[GKNicknameController textField:shouldChangeCharactersInRange:replacementString:]
  -[GKNicknameController textFieldDidBecomeFirstResponder:]
  -[GKNicknameController textFieldDidResignFirstResponder:]
  -[GKNicknameController nicknameTextChanged:]
  -[GKNicknameController updateReturnKeyEnabledState]
  -[GKNicknameController stopObservingKeyboardEvents]
  -[GKNicknameController startObservingKeyboardEvents]
  -[GKNicknameController commitNicknameChanges:]
  -[GKNicknameController displayNicknameSuggestions]
  -[GKNicknameController didSelectSuggestion:]
  -[GKNicknameController shakeNicknameTextFieldWithCompletionBlock:]
  -[GKNicknameController loadSuggestedNicknames:]
  -[GKNicknameController setShouldUseSuggestedNicknameOnDefaultNickname:]
  -[GKNicknameController nicknameWasEdited]
  -[GKNicknameController setNicknameWasEdited:]
  -[GKNicknameController nicknameChangeWasCommitted]
  -[GKNicknameController setNicknameChangeWasCommitted:]
  -[GKNicknameController shouldShakeTextFieldOnError]
  -[GKNicknameController setShouldShakeTextFieldOnError:]
  -[GKNicknameController shouldUseSuggestedNicknameOnDefaultNickname]
  -[GKNicknameController suggestedNicknames]
  -[GKNicknameController setSuggestedNicknames:]
  -[GKNicknameController defaultNickname]
  -[GKNicknameController setDefaultNickname:]


GKDashboardPickerPlayerGroupCell : UICollectionViewCell
 @property  UIView *container
 @property  UIView *iconContainer
 @property  UILabel *subtitle
 @property  UILabel *title
 @property  UIView *bottomLine
 @property  UIImageView *checkmark
 @property  UIImageView *messageIcon
 @property  UIView *ringView
 @property  UILongPressGestureRecognizer *longPressRecognizer
 @property  NSString *originalSubtitle
 @property  _TtC12GameCenterUI17GKPlayerGroupView *playerGroupView
 @property  BOOL canExpand
 @property  BOOL lineVisible
 @property  BOOL usesClearBackground
 @property  <GKDashboardPickerPlayerGroupCellDelegate> *groupCellDelegate
 @property  NSString *searchText

  // class methods
  +[GKDashboardPickerPlayerGroupCell reuseIdentifier]
  +[GKDashboardPickerPlayerGroupCell defaultSize]
  +[GKDashboardPickerPlayerGroupCell reuseIdentifierAX]

  // instance methods
  -[GKDashboardPickerPlayerGroupCell setContainer:]
  -[GKDashboardPickerPlayerGroupCell handleLongPress:]
  -[GKDashboardPickerPlayerGroupCell subtitle]
  -[GKDashboardPickerPlayerGroupCell setSubtitle:]
  -[GKDashboardPickerPlayerGroupCell dealloc]
  -[GKDashboardPickerPlayerGroupCell canBecomeFocused]
  -[GKDashboardPickerPlayerGroupCell longPressRecognizer]
  -[GKDashboardPickerPlayerGroupCell setSelected:]
  -[GKDashboardPickerPlayerGroupCell setSearchText:]
  -[GKDashboardPickerPlayerGroupCell .cxx_destruct]
  -[GKDashboardPickerPlayerGroupCell setLongPressRecognizer:]
  -[GKDashboardPickerPlayerGroupCell container]
  -[GKDashboardPickerPlayerGroupCell setHighlighted:]
  -[GKDashboardPickerPlayerGroupCell title]
  -[GKDashboardPickerPlayerGroupCell searchText]
  -[GKDashboardPickerPlayerGroupCell awakeFromNib]
  -[GKDashboardPickerPlayerGroupCell setTitle:]
  -[GKDashboardPickerPlayerGroupCell checkmark]
  -[GKDashboardPickerPlayerGroupCell setCheckmark:]
  -[GKDashboardPickerPlayerGroupCell configureWithPlayers:title:subtitle:messagesGroupIdentifier:source:playerSelectionProxy:]
  -[GKDashboardPickerPlayerGroupCell updateTitleForSearchText]
  -[GKDashboardPickerPlayerGroupCell updateLayerMask:]
  -[GKDashboardPickerPlayerGroupCell setLineVisible:]
  -[GKDashboardPickerPlayerGroupCell lineVisible]
  -[GKDashboardPickerPlayerGroupCell setUsesClearBackground:]
  -[GKDashboardPickerPlayerGroupCell updateCellBackground]
  -[GKDashboardPickerPlayerGroupCell usesClearBackground]
  -[GKDashboardPickerPlayerGroupCell groupCellDelegate]
  -[GKDashboardPickerPlayerGroupCell setGroupCellDelegate:]
  -[GKDashboardPickerPlayerGroupCell iconContainer]
  -[GKDashboardPickerPlayerGroupCell setIconContainer:]
  -[GKDashboardPickerPlayerGroupCell bottomLine]
  -[GKDashboardPickerPlayerGroupCell setBottomLine:]
  -[GKDashboardPickerPlayerGroupCell messageIcon]
  -[GKDashboardPickerPlayerGroupCell setMessageIcon:]
  -[GKDashboardPickerPlayerGroupCell ringView]
  -[GKDashboardPickerPlayerGroupCell setRingView:]
  -[GKDashboardPickerPlayerGroupCell originalSubtitle]
  -[GKDashboardPickerPlayerGroupCell setOriginalSubtitle:]
  -[GKDashboardPickerPlayerGroupCell playerGroupView]
  -[GKDashboardPickerPlayerGroupCell setPlayerGroupView:]
  -[GKDashboardPickerPlayerGroupCell canExpand]
  -[GKDashboardPickerPlayerGroupCell setCanExpand:]


GKDefaultPrivacyViewController : UIViewController
 @property  UILabel *publicTitle
 @property  UILabel *publicSubTitle
 @property  UILabel *friendsOnlyTitle
 @property  UILabel *friendsOnlySubtitle
 @property  UILabel *meOnlyTitle
 @property  UILabel *meOnlySubtitle
 @property  UIView *publicDivider
 @property  UIView *publicContainer
 @property  UIView *friendsOnlyContainer
 @property  UIView *privateContainer
 @property  UIButton *publicRadioButton
 @property  UIButton *publicContainerButton
 @property  UIButton *friendsOnlyRadioButton
 @property  UIButton *friendsOnlyContainerButton
 @property  UIButton *meOnlyRadioButton
 @property  UIButton *meOnlyContainerButton
 @property  UILabel *subTitle
 @property  NSLayoutConstraint *topMargin
 @property  UIView *buttonContainer
 @property  NSLayoutConstraint *mainStackViewTrailingConstraint
 @property  NSLayoutConstraint *mainStackViewLeadingConstraint
 @property  NSLayoutConstraint *continueButtonEqualMainTitleWidthConstraint
 @property  NSLayoutConstraint *continueButtonWidthConstraint
 @property  NSLayoutConstraint *continueButtonBottomConstraint
 @property  UILabel *underageHintLabel
 @property  UIButton *nextButton
 @property  UILabel *mainTitle
 @property  int profilePrivacyVisibility
 @property  long long numberOfClicksOnPrivacySelection

  // instance methods
  -[GKDefaultPrivacyViewController buttonContainer]
  -[GKDefaultPrivacyViewController scrollViewDidScroll:]
  -[GKDefaultPrivacyViewController viewWillLayoutSubviews]
  -[GKDefaultPrivacyViewController viewDidAppear:]
  -[GKDefaultPrivacyViewController privateContainer]
  -[GKDefaultPrivacyViewController .cxx_destruct]
  -[GKDefaultPrivacyViewController viewDidLoad]
  -[GKDefaultPrivacyViewController viewWillAppear:]
  -[GKDefaultPrivacyViewController setPublicContainer:]
  -[GKDefaultPrivacyViewController setButtonContainer:]
  -[GKDefaultPrivacyViewController viewDidDisappear:]
  -[GKDefaultPrivacyViewController viewWillDisappear:]
  -[GKDefaultPrivacyViewController setPrivateContainer:]
  -[GKDefaultPrivacyViewController publicContainer]
  -[GKDefaultPrivacyViewController subTitle]
  -[GKDefaultPrivacyViewController setSubTitle:]
  -[GKDefaultPrivacyViewController topMargin]
  -[GKDefaultPrivacyViewController nextButton]
  -[GKDefaultPrivacyViewController setNextButton:]
  -[GKDefaultPrivacyViewController updateUI]
  -[GKDefaultPrivacyViewController setTopMargin:]
  -[GKDefaultPrivacyViewController mainTitle]
  -[GKDefaultPrivacyViewController setMainTitle:]
  -[GKDefaultPrivacyViewController nextPressed:]
  -[GKDefaultPrivacyViewController notNowButtonPressed:]
  -[GKDefaultPrivacyViewController reportPrivacySelectionClickAnalytics]
  -[GKDefaultPrivacyViewController button1Pressed:]
  -[GKDefaultPrivacyViewController button2Pressed:]
  -[GKDefaultPrivacyViewController button3Pressed:]
  -[GKDefaultPrivacyViewController publicTitle]
  -[GKDefaultPrivacyViewController setPublicTitle:]
  -[GKDefaultPrivacyViewController publicSubTitle]
  -[GKDefaultPrivacyViewController setPublicSubTitle:]
  -[GKDefaultPrivacyViewController friendsOnlyTitle]
  -[GKDefaultPrivacyViewController setFriendsOnlyTitle:]
  -[GKDefaultPrivacyViewController friendsOnlySubtitle]
  -[GKDefaultPrivacyViewController setFriendsOnlySubtitle:]
  -[GKDefaultPrivacyViewController meOnlyTitle]
  -[GKDefaultPrivacyViewController setMeOnlyTitle:]
  -[GKDefaultPrivacyViewController meOnlySubtitle]
  -[GKDefaultPrivacyViewController setMeOnlySubtitle:]
  -[GKDefaultPrivacyViewController publicDivider]
  -[GKDefaultPrivacyViewController setPublicDivider:]
  -[GKDefaultPrivacyViewController friendsOnlyContainer]
  -[GKDefaultPrivacyViewController setFriendsOnlyContainer:]
  -[GKDefaultPrivacyViewController publicRadioButton]
  -[GKDefaultPrivacyViewController setPublicRadioButton:]
  -[GKDefaultPrivacyViewController publicContainerButton]
  -[GKDefaultPrivacyViewController setPublicContainerButton:]
  -[GKDefaultPrivacyViewController friendsOnlyRadioButton]
  -[GKDefaultPrivacyViewController setFriendsOnlyRadioButton:]
  -[GKDefaultPrivacyViewController friendsOnlyContainerButton]
  -[GKDefaultPrivacyViewController setFriendsOnlyContainerButton:]
  -[GKDefaultPrivacyViewController meOnlyRadioButton]
  -[GKDefaultPrivacyViewController setMeOnlyRadioButton:]
  -[GKDefaultPrivacyViewController meOnlyContainerButton]
  -[GKDefaultPrivacyViewController setMeOnlyContainerButton:]
  -[GKDefaultPrivacyViewController mainStackViewTrailingConstraint]
  -[GKDefaultPrivacyViewController setMainStackViewTrailingConstraint:]
  -[GKDefaultPrivacyViewController mainStackViewLeadingConstraint]
  -[GKDefaultPrivacyViewController setMainStackViewLeadingConstraint:]
  -[GKDefaultPrivacyViewController continueButtonEqualMainTitleWidthConstraint]
  -[GKDefaultPrivacyViewController setContinueButtonEqualMainTitleWidthConstraint:]
  -[GKDefaultPrivacyViewController continueButtonWidthConstraint]
  -[GKDefaultPrivacyViewController setContinueButtonWidthConstraint:]
  -[GKDefaultPrivacyViewController continueButtonBottomConstraint]
  -[GKDefaultPrivacyViewController setContinueButtonBottomConstraint:]
  -[GKDefaultPrivacyViewController underageHintLabel]
  -[GKDefaultPrivacyViewController setUnderageHintLabel:]
  -[GKDefaultPrivacyViewController profilePrivacyVisibility]
  -[GKDefaultPrivacyViewController setProfilePrivacyVisibility:]
  -[GKDefaultPrivacyViewController numberOfClicksOnPrivacySelection]
  -[GKDefaultPrivacyViewController setNumberOfClicksOnPrivacySelection:]


GKRawTurnsDataSource : GKBasicCollectionViewDataSource
  // instance methods
  -[GKRawTurnsDataSource setItems:]
  -[GKRawTurnsDataSource refreshContentsForDataType:userInfo:updateNotifier:]


GKRectShadowCell : UICollectionViewCell
  // instance methods
  -[GKRectShadowCell canBecomeFocused]
  -[GKRectShadowCell setSelected:]
  -[GKRectShadowCell setHighlighted:]
  -[GKRectShadowCell awakeFromNib]


GKAchievementDataSource : GKCollectionDataSource
 @property  GKGameRecord *gameRecord
 @property  NSArray *achievements
 @property  NSArray *localAchievements
 @property  {UIEdgeInsets=dddd} collectionLayoutInsets

  // instance methods
  -[GKAchievementDataSource collectionView:cellForItemAtIndexPath:]
  -[GKAchievementDataSource collectionView:layout:minimumLineSpacingForSectionAtIndex:]
  -[GKAchievementDataSource collectionView:shouldSelectItemAtIndexPath:]
  -[GKAchievementDataSource itemCount]
  -[GKAchievementDataSource collectionView:layout:sizeForItemAtIndexPath:]
  -[GKAchievementDataSource collectionView:layout:minimumInteritemSpacingForSectionAtIndex:]
  -[GKAchievementDataSource achievements]
  -[GKAchievementDataSource .cxx_destruct]
  -[GKAchievementDataSource collectionView:didSelectItemAtIndexPath:]
  -[GKAchievementDataSource loadDataWithCompletionHandler:]
  -[GKAchievementDataSource setAchievements:]
  -[GKAchievementDataSource preferredCollectionHeight]
  -[GKAchievementDataSource setupCollectionView:]
  -[GKAchievementDataSource itemForIndexPath:]
  -[GKAchievementDataSource sectionHeaderText]
  -[GKAchievementDataSource gameRecord]
  -[GKAchievementDataSource setGameRecord:]
  -[GKAchievementDataSource initWithGameRecord:]
  -[GKAchievementDataSource heightMultipliersForSizeCategories]
  -[GKAchievementDataSource localAchievements]
  -[GKAchievementDataSource setLocalAchievements:]
  -[GKAchievementDataSource collectionLayoutInsets]
  -[GKAchievementDataSource setCollectionLayoutInsets:]


GKBasePlayerCell : GKCollectionViewCell
 @property  GKPlayer *player
 @property  UILabel *nameLabel
 @property  GKDashboardPlayerPhotoView *iconView
 @property  NSDictionary *metricsOverrides

  // class methods
  +[GKBasePlayerCell initialize]
  +[GKBasePlayerCell requiresConstraintBasedLayout]
  +[GKBasePlayerCell defaultRowHeight]
  +[GKBasePlayerCell itemHeightList]
  +[GKBasePlayerCell itemHeightListForIdiom:]
  +[GKBasePlayerCell padMetrics]
  +[GKBasePlayerCell phoneMetrics]

  // instance methods
  -[GKBasePlayerCell .cxx_destruct]
  -[GKBasePlayerCell prepareForReuse]
  -[GKBasePlayerCell setIconView:]
  -[GKBasePlayerCell player]
  -[GKBasePlayerCell iconView]
  -[GKBasePlayerCell nameLabel]
  -[GKBasePlayerCell setPlayer:]
  -[GKBasePlayerCell initWithFrame:]
  -[GKBasePlayerCell popoverSourceView]
  -[GKBasePlayerCell setNameLabel:]
  -[GKBasePlayerCell alignmentRectForText]
  -[GKBasePlayerCell didUpdateModel]
  -[GKBasePlayerCell setRepresentedItem:]
  -[GKBasePlayerCell canRemoveItem]
  -[GKBasePlayerCell setMetricsOverrides:]
  -[GKBasePlayerCell metricsOverrides]


GKRemoteViewServiceController : _UIRemoteViewController <GKExtensionHostProtocol>
 @property  NSMutableDictionary *dirtyProperties
 @property  GKHostedViewController *managingViewController
 @property  UIColor *previousStatusBarColor
 @property  @? blockToPerformAfterViewDidAppear
 @property  BOOL didSetRemoteGame
 @property  BOOL viewDidAppear
 @property  BOOL serviceNeedsCurrentGame
 @property  BOOL serviceNeedsLocalPlayer
 @property  GKGame *game
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[GKRemoteViewServiceController exportedInterface]
  +[GKRemoteViewServiceController serviceViewControllerInterface]
  +[GKRemoteViewServiceController shouldPropagateAppearanceCustomizations]

  // instance methods
  -[GKRemoteViewServiceController viewDidAppear]
  -[GKRemoteViewServiceController dirtyProperties]
  -[GKRemoteViewServiceController shouldAutorotateToInterfaceOrientation:]
  -[GKRemoteViewServiceController viewDidAppear:]
  -[GKRemoteViewServiceController dealloc]
  -[GKRemoteViewServiceController .cxx_destruct]
  -[GKRemoteViewServiceController viewWillAppear:]
  -[GKRemoteViewServiceController viewServiceDidTerminateWithError:]
  -[GKRemoteViewServiceController observeValueForKeyPath:ofObject:change:context:]
  -[GKRemoteViewServiceController setValue:forKeyPath:]
  -[GKRemoteViewServiceController supportedInterfaceOrientations]
  -[GKRemoteViewServiceController viewDidDisappear:]
  -[GKRemoteViewServiceController viewWillDisappear:]
  -[GKRemoteViewServiceController game]
  -[GKRemoteViewServiceController setGame:]
  -[GKRemoteViewServiceController setDirtyProperties:]
  -[GKRemoteViewServiceController remoteViewControllerIsFinishing]
  -[GKRemoteViewServiceController remoteViewControllerIsCanceling]
  -[GKRemoteViewServiceController messageFromExtension:]
  -[GKRemoteViewServiceController observedKeyPaths]
  -[GKRemoteViewServiceController serviceNeedsCurrentGame]
  -[GKRemoteViewServiceController serviceNeedsLocalPlayer]
  -[GKRemoteViewServiceController serviceNeedsFriendCode]
  -[GKRemoteViewServiceController populateInitialStateForRemoteView:]
  -[GKRemoteViewServiceController nudge]
  -[GKRemoteViewServiceController setupRemoteView]
  -[GKRemoteViewServiceController readyToPresentInController:]
  -[GKRemoteViewServiceController _desiredStatusBarStyle]
  -[GKRemoteViewServiceController _performBlockAfterViewDidAppearIfNeeded]
  -[GKRemoteViewServiceController _performSelectorAfterAppearingOrTimeOut:]
  -[GKRemoteViewServiceController _dismissSelfAfterGettingShouldFinish]
  -[GKRemoteViewServiceController _dismissSelfAfterGettingShouldCancel]
  -[GKRemoteViewServiceController didSetRemoteGame]
  -[GKRemoteViewServiceController setDidSetRemoteGame:]
  -[GKRemoteViewServiceController setViewDidAppear:]
  -[GKRemoteViewServiceController managingViewController]
  -[GKRemoteViewServiceController setManagingViewController:]
  -[GKRemoteViewServiceController previousStatusBarColor]
  -[GKRemoteViewServiceController setPreviousStatusBarColor:]
  -[GKRemoteViewServiceController blockToPerformAfterViewDidAppear]
  -[GKRemoteViewServiceController setBlockToPerformAfterViewDidAppear:]


GKExtensionRootViewController : UIViewController <GKDaemonProxyDataUpdateDelegate, GKExtensionProtocol, GKExtensionHostProtocol, GKDashboardServiceInterface, UINavigationControllerDelegate>
 @property  BOOL hasInitialData
 @property  UIVisualEffectView *effectView
 @property  NSLayoutConstraint *effectBottomConstraint
 @property  NSLayoutConstraint *effectTopConstraint
 @property  UINavigationController *navigationController
 @property  BOOL alwaysShowDoneButton
 @property  double statusBarHeight
 @property  BOOL requiresNavigationController
 @property  UIViewController *contentViewController
 @property  GKGame *game
 @property  int hostPID
 @property  long long hostUserInterfaceIdiom
 @property  BOOL adjustTopConstraint
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKExtensionRootViewController statusBarHeight]
  -[GKExtensionRootViewController navigationController]
  -[GKExtensionRootViewController willTransitionToTraitCollection:withTransitionCoordinator:]
  -[GKExtensionRootViewController setStatusBarHeight:]
  -[GKExtensionRootViewController setup]
  -[GKExtensionRootViewController contentViewController]
  -[GKExtensionRootViewController setContentViewController:]
  -[GKExtensionRootViewController alwaysShowDoneButton]
  -[GKExtensionRootViewController initWithNibName:bundle:]
  -[GKExtensionRootViewController viewWillLayoutSubviews]
  -[GKExtensionRootViewController viewDidAppear:]
  -[GKExtensionRootViewController hostPID]
  -[GKExtensionRootViewController .cxx_destruct]
  -[GKExtensionRootViewController setNavigationController:]
  -[GKExtensionRootViewController viewDidLoad]
  -[GKExtensionRootViewController viewWillAppear:]
  -[GKExtensionRootViewController setHostPID:]
  -[GKExtensionRootViewController setAlwaysShowDoneButton:]
  -[GKExtensionRootViewController navigationController:willShowViewController:animated:]
  -[GKExtensionRootViewController finish]
  -[GKExtensionRootViewController effectView]
  -[GKExtensionRootViewController setViewControllers:animated:]
  -[GKExtensionRootViewController viewDidDisappear:]
  -[GKExtensionRootViewController refreshContentsForDataType:userInfo:]
  -[GKExtensionRootViewController canBecomeFirstResponder]
  -[GKExtensionRootViewController setEffectView:]
  -[GKExtensionRootViewController initWithCoder:]
  -[GKExtensionRootViewController didShowViewController:animated:]
  -[GKExtensionRootViewController _statusBarHeightForCurrentInterfaceOrientation]
  -[GKExtensionRootViewController hasInitialData]
  -[GKExtensionRootViewController game]
  -[GKExtensionRootViewController setGame:]
  -[GKExtensionRootViewController donePressed:]
  -[GKExtensionRootViewController messageFromExtension:]
  -[GKExtensionRootViewController messageFromClient:]
  -[GKExtensionRootViewController setInitialState:withReply:]
  -[GKExtensionRootViewController setToLightBackground]
  -[GKExtensionRootViewController setToDarkBackground]
  -[GKExtensionRootViewController setupVisualEffects]
  -[GKExtensionRootViewController addVisualEffectViewForView:]
  -[GKExtensionRootViewController _useBackdropViewForWindowBackground]
  -[GKExtensionRootViewController constructContentViewController]
  -[GKExtensionRootViewController configureContentViewController]
  -[GKExtensionRootViewController addDoneButtonToViewController:]
  -[GKExtensionRootViewController clientDidCancel]
  -[GKExtensionRootViewController clientDidFinish]
  -[GKExtensionRootViewController clientWillTerminate]
  -[GKExtensionRootViewController hostObjectProxy]
  -[GKExtensionRootViewController sendMessageToClient:]
  -[GKExtensionRootViewController extensionIsCanceling]
  -[GKExtensionRootViewController extensionIsFinishing]
  -[GKExtensionRootViewController logOnceGameControllerUsedInGameLayer]
  -[GKExtensionRootViewController requiresNavigationController]
  -[GKExtensionRootViewController setRequiresNavigationController:]
  -[GKExtensionRootViewController hostUserInterfaceIdiom]
  -[GKExtensionRootViewController setHostUserInterfaceIdiom:]
  -[GKExtensionRootViewController adjustTopConstraint]
  -[GKExtensionRootViewController setAdjustTopConstraint:]
  -[GKExtensionRootViewController setHasInitialData:]
  -[GKExtensionRootViewController effectBottomConstraint]
  -[GKExtensionRootViewController setEffectBottomConstraint:]
  -[GKExtensionRootViewController effectTopConstraint]
  -[GKExtensionRootViewController setEffectTopConstraint:]


GKUIContentUnavailableView : _UIContentUnavailableView
  // instance methods
  -[GKUIContentUnavailableView _titleFont]


GKNoContentView : UIView
 @property  GKUIContentUnavailableView *contentUnavailableView
 @property  UIActivityIndicatorView *loadingIndicatorView
 @property  UIStackView *stackView
 @property  NSString *title
 @property  NSString *message
 @property  NSString *buttonTitle
 @property  @? buttonAction
 @property  BOOL loading

  // instance methods
  -[GKNoContentView setLoading:]
  -[GKNoContentView setStackView:]
  -[GKNoContentView stackView]
  -[GKNoContentView setMessage:]
  -[GKNoContentView isLoading]
  -[GKNoContentView .cxx_destruct]
  -[GKNoContentView title]
  -[GKNoContentView buttonTitle]
  -[GKNoContentView initWithFrame:]
  -[GKNoContentView message]
  -[GKNoContentView setTitle:]
  -[GKNoContentView setButtonTitle:]
  -[GKNoContentView buttonAction]
  -[GKNoContentView setButtonAction:]
  -[GKNoContentView contentUnavailableView]
  -[GKNoContentView setContentUnavailableView:]
  -[GKNoContentView loadingIndicatorView]
  -[GKNoContentView setLoadingIndicatorView:]


GKOnboardingController : NSObject
 @property  <GKOnboardingFlowDelegate> *delegate

  // class methods
  +[GKOnboardingController shared]
  +[GKOnboardingController landingViewController]
  +[GKOnboardingController describePlayerComparisonsBetween:and:]

  // instance methods
  -[GKOnboardingController setDelegate:]
  -[GKOnboardingController delegate]
  -[GKOnboardingController .cxx_destruct]
  -[GKOnboardingController presentProfilePrivacyScreen:]
  -[GKOnboardingController presentContactsIntegrationConsentScreen:]
  -[GKOnboardingController presentPersonalizationScreen:]
  -[GKOnboardingController presentProfileCreatedScreen:]
  -[GKOnboardingController presentViewController:presentingViewController:]


GKDashboardPresentationController : NSObject <UIViewControllerAnimatedTransitioning, UIViewControllerTransitioningDelegate>
 @property  BOOL presenting
 @property  double transitionDuration
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[GKDashboardPresentationController presentViewController:presentingViewController:animated:]

  // instance methods
  -[GKDashboardPresentationController transitionDuration]
  -[GKDashboardPresentationController animationControllerForPresentedController:presentingController:sourceController:]
  -[GKDashboardPresentationController animationEnded:]
  -[GKDashboardPresentationController animationControllerForDismissedController:]
  -[GKDashboardPresentationController animateTransition:]
  -[GKDashboardPresentationController transitionDuration:]
  -[GKDashboardPresentationController setTransitionDuration:]
  -[GKDashboardPresentationController setPresenting:]
  -[GKDashboardPresentationController init]
  -[GKDashboardPresentationController presenting]


GKHairlineView : UIView
 @property  long long alignment

  // class methods
  +[GKHairlineView hairlineViewForAlignment:]

  // instance methods
  -[GKHairlineView sizeToFit]
  -[GKHairlineView alignment]
  -[GKHairlineView setAlignment:]
  -[GKHairlineView intrinsicContentSize]
  -[GKHairlineView init]


GKRemoteUIFooterView : UIView <RemoteUITableFooter>
 @property  GKLabel *textLabel
 @property  double leftMargin
 @property  double rightMargin
 @property  double bottomMargin
 @property  double paragraphMargin
 @property  BOOL shouldApplyGameCenterTheme
 @property  int layoutStyle
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKRemoteUIFooterView layoutStyle]
  -[GKRemoteUIFooterView textLabel]
  -[GKRemoteUIFooterView setLayoutStyle:]
  -[GKRemoteUIFooterView initWithAttributes:]
  -[GKRemoteUIFooterView leftMargin]
  -[GKRemoteUIFooterView .cxx_destruct]
  -[GKRemoteUIFooterView bottomMargin]
  -[GKRemoteUIFooterView rightMargin]
  -[GKRemoteUIFooterView setLeftMargin:]
  -[GKRemoteUIFooterView setRightMargin:]
  -[GKRemoteUIFooterView setTextLabel:]
  -[GKRemoteUIFooterView setBottomMargin:]
  -[GKRemoteUIFooterView footerHeightForWidth:inTableView:]
  -[GKRemoteUIFooterView attributedStringForString:withStyle:]
  -[GKRemoteUIFooterView paragraphMargin]
  -[GKRemoteUIFooterView setParagraphMargin:]
  -[GKRemoteUIFooterView shouldApplyGameCenterTheme]
  -[GKRemoteUIFooterView setShouldApplyGameCenterTheme:]


GKSearchBar : UISearchBar
 @property  GKCollectionViewDataSource *dataSource
 @property  long long sectionIndex

  // instance methods
  -[GKSearchBar dataSource]
  -[GKSearchBar .cxx_destruct]
  -[GKSearchBar setDataSource:]
  -[GKSearchBar sectionIndex]
  -[GKSearchBar setSectionIndex:]


GKSearchBarView : UICollectionReusableView <UISearchBarDelegate>
 @property  NSArray *searchBarConstraints
 @property  double leadingMargin
 @property  double trailingMargin
 @property  GKSearchBar *searchBar
 @property  NSNumber *usePadConstraints
 @property  <UISearchBarDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[GKSearchBarView defaultHeight]
  +[GKSearchBarView initialize]
  +[GKSearchBarView requiresConstraintBasedLayout]

  // instance methods
  -[GKSearchBarView setTrailingMargin:]
  -[GKSearchBarView setDelegate:]
  -[GKSearchBarView updateConstraints]
  -[GKSearchBarView delegate]
  -[GKSearchBarView setLeadingMargin:]
  -[GKSearchBarView .cxx_destruct]
  -[GKSearchBarView leadingMargin]
  -[GKSearchBarView prepareForReuse]
  -[GKSearchBarView setSearchBar:]
  -[GKSearchBarView trailingMargin]
  -[GKSearchBarView initWithFrame:]
  -[GKSearchBarView applyLayoutAttributes:]
  -[GKSearchBarView searchBar]
  -[GKSearchBarView establishSearchBarConstraints]
  -[GKSearchBarView setUsePadConstraints:]
  -[GKSearchBarView usePadConstraints]
  -[GKSearchBarView searchBarConstraints]
  -[GKSearchBarView setSearchBarConstraints:]


GKDashboardLeaderboardDetailViewController : GKDetailViewController
 @property  GKDashboardPlayerPhotoView *playerView
 @property  UILabel *nameLabel
 @property  UILabel *descriptionLabel
 @property  UILabel *earnedOnLabel
 @property  UILabel *infoLabel
 @property  UIButton *firstButton
 @property  UIButton *secondButton
 @property  UIButton *reportProblemButton
 @property  GKLeaderboard *leaderboard
 @property  GKScore *score

  // instance methods
  -[GKDashboardLeaderboardDetailViewController setDescriptionLabel:]
  -[GKDashboardLeaderboardDetailViewController score]
  -[GKDashboardLeaderboardDetailViewController .cxx_destruct]
  -[GKDashboardLeaderboardDetailViewController viewDidLoad]
  -[GKDashboardLeaderboardDetailViewController setPlayerView:]
  -[GKDashboardLeaderboardDetailViewController playerView]
  -[GKDashboardLeaderboardDetailViewController nameLabel]
  -[GKDashboardLeaderboardDetailViewController preferredFocusEnvironments]
  -[GKDashboardLeaderboardDetailViewController descriptionLabel]
  -[GKDashboardLeaderboardDetailViewController share:]
  -[GKDashboardLeaderboardDetailViewController setScore:]
  -[GKDashboardLeaderboardDetailViewController setNameLabel:]
  -[GKDashboardLeaderboardDetailViewController report:]
  -[GKDashboardLeaderboardDetailViewController infoLabel]
  -[GKDashboardLeaderboardDetailViewController setInfoLabel:]
  -[GKDashboardLeaderboardDetailViewController leaderboard]
  -[GKDashboardLeaderboardDetailViewController setLeaderboard:]
  -[GKDashboardLeaderboardDetailViewController challenge:]
  -[GKDashboardLeaderboardDetailViewController firstButton]
  -[GKDashboardLeaderboardDetailViewController setFirstButton:]
  -[GKDashboardLeaderboardDetailViewController secondButton]
  -[GKDashboardLeaderboardDetailViewController setSecondButton:]
  -[GKDashboardLeaderboardDetailViewController initWithScore:leaderboard:]
  -[GKDashboardLeaderboardDetailViewController configureForScore]
  -[GKDashboardLeaderboardDetailViewController earnedOnLabel]
  -[GKDashboardLeaderboardDetailViewController setEarnedOnLabel:]
  -[GKDashboardLeaderboardDetailViewController reportProblemButton]
  -[GKDashboardLeaderboardDetailViewController setReportProblemButton:]


GKRemoteUINavigationController : UINavigationController
 @property  GKRemoteUIController *remoteUIController

  // instance methods
  -[GKRemoteUINavigationController viewDidAppear:]
  -[GKRemoteUINavigationController .cxx_destruct]
  -[GKRemoteUINavigationController loadView]
  -[GKRemoteUINavigationController supportedInterfaceOrientations]
  -[GKRemoteUINavigationController remoteUIController]
  -[GKRemoteUINavigationController initWithRemoteUIController:]


GKLoadImageResourceOperation : GKLoadResourceOperation
 @property  NSURLSessionDataTask *task
 @property  <GKResourceDataConsumer> *dataConsumer
 @property  NSObject<OS_dispatch_queue> *dataConsumerQueue

  // class methods
  +[GKLoadImageResourceOperation URLSession]
  +[GKLoadImageResourceOperation dataConsumerQueue]
  +[GKLoadImageResourceOperation keyPathsForValuesAffectingIsExecuting]
  +[GKLoadImageResourceOperation keyPathsForValuesAffectingIsFinished]

  // instance methods
  -[GKLoadImageResourceOperation isFinished]
  -[GKLoadImageResourceOperation dataConsumerQueue]
  -[GKLoadImageResourceOperation dataConsumer]
  -[GKLoadImageResourceOperation setQueuePriority:]
  -[GKLoadImageResourceOperation .cxx_destruct]
  -[GKLoadImageResourceOperation isExecuting]
  -[GKLoadImageResourceOperation didFinishTaskWithData:response:error:]
  -[GKLoadImageResourceOperation initWithURLRequest:URLSession:dataConsumer:dataConsumerQueue:]
  -[GKLoadImageResourceOperation isAsynchronous]
  -[GKLoadImageResourceOperation start]
  -[GKLoadImageResourceOperation task]
  -[GKLoadImageResourceOperation initWithURLRequest:dataConsumer:]
  -[GKLoadImageResourceOperation cancel]


GKDashboardAchievementCell : GKRectShadowCell
 @property  GKAchievement *achievement
 @property  GKAchievement *localAchievement
 @property  GKAchievementIconView *iconView
 @property  GKResizingLabel *titleLabel
 @property  GKResizingLabel *descriptionLabel
 @property  UILabel *pointsLabel
 @property  UILabel *pointsTextLabel
 @property  UIView *popoverSourceView

  // instance methods
  -[GKDashboardAchievementCell setTitleLabel:]
  -[GKDashboardAchievementCell setDescriptionLabel:]
  -[GKDashboardAchievementCell .cxx_destruct]
  -[GKDashboardAchievementCell setIconView:]
  -[GKDashboardAchievementCell iconView]
  -[GKDashboardAchievementCell descriptionLabel]
  -[GKDashboardAchievementCell popoverSourceView]
  -[GKDashboardAchievementCell titleLabel]
  -[GKDashboardAchievementCell achievement]
  -[GKDashboardAchievementCell setAchievement:]
  -[GKDashboardAchievementCell localAchievement]
  -[GKDashboardAchievementCell setLocalAchievement:]
  -[GKDashboardAchievementCell setupForAchievement:localAchievement:]
  -[GKDashboardAchievementCell pointsLabel]
  -[GKDashboardAchievementCell setPointsLabel:]
  -[GKDashboardAchievementCell pointsTextLabel]
  -[GKDashboardAchievementCell setPointsTextLabel:]


GKPlayerProfileViewController : UIViewController
  // class methods
  +[GKPlayerProfileViewController newWithPlayerId:]


GKReportProblemRemoteUIController : GKRemoteUIController
 @property  NSURL *url
 @property  GKPlayer *problemPlayer

  // class methods
  +[GKReportProblemRemoteUIController controllerForProblemPlayer:completionHandler:]

  // instance methods
  -[GKReportProblemRemoteUIController fallbackURL]
  -[GKReportProblemRemoteUIController setUrl:]
  -[GKReportProblemRemoteUIController bagKey]
  -[GKReportProblemRemoteUIController .cxx_destruct]
  -[GKReportProblemRemoteUIController url]
  -[GKReportProblemRemoteUIController postBodyForInitialLoad]
  -[GKReportProblemRemoteUIController initWithProblemPlayer:]
  -[GKReportProblemRemoteUIController preferredLayoutStyle]
  -[GKReportProblemRemoteUIController problemPlayer]
  -[GKReportProblemRemoteUIController setProblemPlayer:]


GKDashboardMultiplayerPickerSearchDataSource : GKCollectionDataSource
 @property  NSArray *allPlayers
 @property  NSArray *searchPlayers
 @property  NSArray *selectedPlayers
 @property  long long maxSelectable
 @property  NSMutableDictionary *playerStates
 @property  BOOL searching
 @property  UISearchBar *searchBar

  // instance methods
  -[GKDashboardMultiplayerPickerSearchDataSource collectionView:cellForItemAtIndexPath:]
  -[GKDashboardMultiplayerPickerSearchDataSource collectionView:shouldSelectItemAtIndexPath:]
  -[GKDashboardMultiplayerPickerSearchDataSource numberOfSectionsInCollectionView:]
  -[GKDashboardMultiplayerPickerSearchDataSource itemCount]
  -[GKDashboardMultiplayerPickerSearchDataSource collectionView:layout:sizeForItemAtIndexPath:]
  -[GKDashboardMultiplayerPickerSearchDataSource .cxx_destruct]
  -[GKDashboardMultiplayerPickerSearchDataSource setSearchBar:]
  -[GKDashboardMultiplayerPickerSearchDataSource isSearching]
  -[GKDashboardMultiplayerPickerSearchDataSource collectionView:didSelectItemAtIndexPath:]
  -[GKDashboardMultiplayerPickerSearchDataSource collectionView:numberOfItemsInSection:]
  -[GKDashboardMultiplayerPickerSearchDataSource scrollViewWillBeginDragging:]
  -[GKDashboardMultiplayerPickerSearchDataSource searchBar]
  -[GKDashboardMultiplayerPickerSearchDataSource setSearching:]
  -[GKDashboardMultiplayerPickerSearchDataSource preferredCollectionHeight]
  -[GKDashboardMultiplayerPickerSearchDataSource setupCollectionView:]
  -[GKDashboardMultiplayerPickerSearchDataSource selectedPlayers]
  -[GKDashboardMultiplayerPickerSearchDataSource searchKeyForSection:]
  -[GKDashboardMultiplayerPickerSearchDataSource searchTextHasChanged]
  -[GKDashboardMultiplayerPickerSearchDataSource playerStates]
  -[GKDashboardMultiplayerPickerSearchDataSource setPlayerStates:]
  -[GKDashboardMultiplayerPickerSearchDataSource searchPlayers]
  -[GKDashboardMultiplayerPickerSearchDataSource setSearchPlayers:]
  -[GKDashboardMultiplayerPickerSearchDataSource initWithSearchPlayers:maxSelectable:]
  -[GKDashboardMultiplayerPickerSearchDataSource allPlayers]
  -[GKDashboardMultiplayerPickerSearchDataSource setAllPlayers:]
  -[GKDashboardMultiplayerPickerSearchDataSource maxSelectable]


GKAccessPoint : NSObject <GKGameCenterControllerDelegate>
 @property  UIWindow *window
 @property  BOOL visible
 @property  long long hideCount
 @property  BOOL willBecomeActive
 @property  BOOL isPresentingGameCenter
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} frameInScreenCoordinates
 @property  id viewController
 @property  GKGameCenterViewController *gameCenterViewController
 @property  NSObject *privateImplementation
 @property  double delay
 @property  double timeLastShown
 @property  UIGestureRecognizer *tapGestureRecognizer
 @property  UIWindow *window
 @property  BOOL visible
 @property  long long hideCount
 @property  BOOL willBecomeActive
 @property  BOOL isPresentingGameCenter
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} frameInScreenCoordinates
 @property  id viewController
 @property  GKGameCenterViewController *gameCenterViewController
 @property  NSObject *privateImplementation
 @property  double delay
 @property  double timeLastShown
 @property  UIGestureRecognizer *tapGestureRecognizer
 @property  BOOL active
 @property  BOOL focused
 @property  BOOL showHighlights
 @property  long long location
 @property  UIWindow *parentWindow

  // class methods
  +[GKAccessPoint shared]

  // instance methods
  -[GKAccessPoint setWindow:]
  -[GKAccessPoint loadModels]
  -[GKAccessPoint setViewController:]
  -[GKAccessPoint isVisible]
  -[GKAccessPoint setDelay:]
  -[GKAccessPoint isActive]
  -[GKAccessPoint window]
  -[GKAccessPoint .cxx_destruct]
  -[GKAccessPoint setVisible:]
  -[GKAccessPoint setLocation:]
  -[GKAccessPoint setActive:]
  -[GKAccessPoint willBecomeActive]
  -[GKAccessPoint delay]
  -[GKAccessPoint viewController]
  -[GKAccessPoint setFocused:]
  -[GKAccessPoint isFocused]
  -[GKAccessPoint location]
  -[GKAccessPoint tapGestureRecognizer]
  -[GKAccessPoint setTapGestureRecognizer:]
  -[GKAccessPoint parentWindow]
  -[GKAccessPoint setParentWindow:]
  -[GKAccessPoint updateUI]
  -[GKAccessPoint gameCenterViewControllerDidFinish:]
  -[GKAccessPoint showAccessPoint]
  -[GKAccessPoint hideAccessPoint]
  -[GKAccessPoint dismissGameCenter]
  -[GKAccessPoint triggerAccessPointWithHandler:]
  -[GKAccessPoint triggerAccessPointWithState:handler:]
  -[GKAccessPoint setWillBecomeActive:]
  -[GKAccessPoint showHighlights]
  -[GKAccessPoint setShowHighlights:]
  -[GKAccessPoint frameInScreenCoordinates]
  -[GKAccessPoint setFrameInScreenCoordinates:]
  -[GKAccessPoint isPresentingGameCenter]
  -[GKAccessPoint setIsPresentingGameCenter:]
  -[GKAccessPoint hideCount]
  -[GKAccessPoint setHideCount:]
  -[GKAccessPoint gameCenterViewController]
  -[GKAccessPoint setGameCenterViewController:]
  -[GKAccessPoint privateImplementation]
  -[GKAccessPoint setPrivateImplementation:]
  -[GKAccessPoint timeLastShown]
  -[GKAccessPoint setTimeLastShown:]
  -[GKAccessPoint showDashboardWithState:dismiss:]
  -[GKAccessPoint configureIfNeeded]
  -[GKAccessPoint showWindow]
  -[GKAccessPoint removeWindow]
  -[GKAccessPoint resetUI]


GKSectionHeaderView : GKHeaderWithUnderlineView
 @property  GKButton *rightButton
 @property  unsigned long sectionIndex
 @property  long long itemCount
 @property  long long maxItemCount
 @property  BOOL allSectionItemsVisible
 @property  NSLayoutConstraint *backgroundViewHeightConstraint
 @property  GKLabel *leftLabel
 @property  NSString *leftText
 @property  NSString *rightText
 @property  SEL showAllAction
 @property  id rightTarget
 @property  SEL rightAction
 @property  ^? itemCountFormatter
 @property  BOOL manualItemCount
 @property  long long maxRange
 @property  UIView *backgroundView

  // class methods
  +[GKSectionHeaderView padMetrics]
  +[GKSectionHeaderView phoneMetrics]

  // instance methods
  -[GKSectionHeaderView setMaxItemCount:]
  -[GKSectionHeaderView itemCount]
  -[GKSectionHeaderView .cxx_destruct]
  -[GKSectionHeaderView prepareForReuse]
  -[GKSectionHeaderView updateLabel]
  -[GKSectionHeaderView backgroundView]
  -[GKSectionHeaderView setBackgroundView:]
  -[GKSectionHeaderView setRightButton:]
  -[GKSectionHeaderView rightButton]
  -[GKSectionHeaderView maxItemCount]
  -[GKSectionHeaderView initWithFrame:]
  -[GKSectionHeaderView applyLayoutAttributes:]
  -[GKSectionHeaderView setItemCount:]
  -[GKSectionHeaderView maxRange]
  -[GKSectionHeaderView setMaxRange:]
  -[GKSectionHeaderView sectionIndex]
  -[GKSectionHeaderView setSectionIndex:]
  -[GKSectionHeaderView leftLabel]
  -[GKSectionHeaderView leftText]
  -[GKSectionHeaderView setLeftText:]
  -[GKSectionHeaderView rightText]
  -[GKSectionHeaderView setRightText:]
  -[GKSectionHeaderView allSectionItemsVisible]
  -[GKSectionHeaderView setAllSectionItemsVisible:]
  -[GKSectionHeaderView rightButtonTouched:]
  -[GKSectionHeaderView updateGutterConstraints]
  -[GKSectionHeaderView establishConstraints]
  -[GKSectionHeaderView rightButtonFrame]
  -[GKSectionHeaderView setItemCountFormatter:]
  -[GKSectionHeaderView setShowAllAction:]
  -[GKSectionHeaderView setLeftLabel:]
  -[GKSectionHeaderView showAllAction]
  -[GKSectionHeaderView rightTarget]
  -[GKSectionHeaderView setRightTarget:]
  -[GKSectionHeaderView rightAction]
  -[GKSectionHeaderView setRightAction:]
  -[GKSectionHeaderView itemCountFormatter]
  -[GKSectionHeaderView manualItemCount]
  -[GKSectionHeaderView setManualItemCount:]
  -[GKSectionHeaderView backgroundViewHeightConstraint]
  -[GKSectionHeaderView setBackgroundViewHeightConstraint:]


GKMultiplayerParticipant : NSObject <NSCopying>
 @property  long long type
 @property  long long status
 @property  GKPlayer *player
 @property  long long number

  // class methods
  +[GKMultiplayerParticipant stringFromGKMultiplayerParticipantStatus:]

  // instance methods
  -[GKMultiplayerParticipant number]
  -[GKMultiplayerParticipant type]
  -[GKMultiplayerParticipant status]
  -[GKMultiplayerParticipant setStatus:]
  -[GKMultiplayerParticipant .cxx_destruct]
  -[GKMultiplayerParticipant setNumber:]
  -[GKMultiplayerParticipant player]
  -[GKMultiplayerParticipant setType:]
  -[GKMultiplayerParticipant copyWithZone:]
  -[GKMultiplayerParticipant setPlayer:]
  -[GKMultiplayerParticipant isEqual:]
  -[GKMultiplayerParticipant init]


GKDashboardPlayerPhotoView : UIView
 @property  UIImageView *avatarImageView
 @property  GKPlayer *player
 @property  BOOL useDarkerPlaceholder
 @property  BOOL dimmed
 @property  BOOL usingPlaceholder
 @property  BOOL hasImage
 @property  BOOL selected
 @property  BOOL focusable
 @property  NSObject<GKPlayerAvatarViewDelegate> *delegate
 @property  long long avatarSize

  // instance methods
  -[GKDashboardPlayerPhotoView setDimmed:]
  -[GKDashboardPlayerPhotoView pressesEnded:withEvent:]
  -[GKDashboardPlayerPhotoView setAccessibilityLabel:]
  -[GKDashboardPlayerPhotoView setFocusable:]
  -[GKDashboardPlayerPhotoView dimmed]
  -[GKDashboardPlayerPhotoView setDelegate:]
  -[GKDashboardPlayerPhotoView delegate]
  -[GKDashboardPlayerPhotoView canBecomeFocused]
  -[GKDashboardPlayerPhotoView setSelected:]
  -[GKDashboardPlayerPhotoView .cxx_destruct]
  -[GKDashboardPlayerPhotoView player]
  -[GKDashboardPlayerPhotoView layoutSubviews]
  -[GKDashboardPlayerPhotoView commonInit]
  -[GKDashboardPlayerPhotoView touchesBegan:withEvent:]
  -[GKDashboardPlayerPhotoView setPlayer:]
  -[GKDashboardPlayerPhotoView touchesEnded:withEvent:]
  -[GKDashboardPlayerPhotoView selected]
  -[GKDashboardPlayerPhotoView initWithFrame:]
  -[GKDashboardPlayerPhotoView touchesCancelled:withEvent:]
  -[GKDashboardPlayerPhotoView initWithCoder:]
  -[GKDashboardPlayerPhotoView hasImage]
  -[GKDashboardPlayerPhotoView avatarImageView]
  -[GKDashboardPlayerPhotoView setAvatarImageView:]
  -[GKDashboardPlayerPhotoView avatarSize]
  -[GKDashboardPlayerPhotoView setAvatarSize:]
  -[GKDashboardPlayerPhotoView setPlayer:completionHandler:]
  -[GKDashboardPlayerPhotoView refreshImageWithCompletionHandler:]
  -[GKDashboardPlayerPhotoView invalidatePhoto]
  -[GKDashboardPlayerPhotoView useDarkerPlaceholder]
  -[GKDashboardPlayerPhotoView setUseDarkerPlaceholder:]
  -[GKDashboardPlayerPhotoView isUsingPlaceholder]
  -[GKDashboardPlayerPhotoView setUsingPlaceholder:]
  -[GKDashboardPlayerPhotoView focusable]


GKAchievementViewController : GKGameCenterViewController
 @property  <GKAchievementViewControllerDelegate> *achievementDelegate

  // instance methods
  -[GKAchievementViewController dealloc]
  -[GKAchievementViewController .cxx_destruct]
  -[GKAchievementViewController init]
  -[GKAchievementViewController notifyDelegateOnWillFinish]
  -[GKAchievementViewController achievementDelegate]
  -[GKAchievementViewController setAchievementDelegate:]


GKServiceFriendRequestViewController : GKServiceViewController <MFMessageComposeViewControllerInternalDelegate>
 @property  MFMessageComposeViewController *composeController
 @property  NSString *friendCode
 @property  NSString *friendSupportPageURL
 @property  NSArray *recipients
 @property  NSString *chatGUID
 @property  BOOL messageComposeSent
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKServiceFriendRequestViewController recipients]
  -[GKServiceFriendRequestViewController viewDidAppear:]
  -[GKServiceFriendRequestViewController .cxx_destruct]
  -[GKServiceFriendRequestViewController viewWillAppear:]
  -[GKServiceFriendRequestViewController setRecipients:]
  -[GKServiceFriendRequestViewController init]
  -[GKServiceFriendRequestViewController setFriendCode:]
  -[GKServiceFriendRequestViewController setFriendSupportPageURL:]
  -[GKServiceFriendRequestViewController chatGUID]
  -[GKServiceFriendRequestViewController setChatGUID:]
  -[GKServiceFriendRequestViewController messageComposeViewController:didFinishWithResult:]
  -[GKServiceFriendRequestViewController composeController]
  -[GKServiceFriendRequestViewController setComposeController:]
  -[GKServiceFriendRequestViewController setInitialState:withReply:]
  -[GKServiceFriendRequestViewController _useBackdropViewForWindowBackground]
  -[GKServiceFriendRequestViewController constructPrivateViewController]
  -[GKServiceFriendRequestViewController messageComposeViewController:shouldSendMessage:toRecipients:completion:]
  -[GKServiceFriendRequestViewController shouldAnimatePresentationForPrivateViewController:]
  -[GKServiceFriendRequestViewController displayAlertWithTitle:andMessage:]
  -[GKServiceFriendRequestViewController friendCode]
  -[GKServiceFriendRequestViewController friendSupportPageURL]
  -[GKServiceFriendRequestViewController messageComposeSent]
  -[GKServiceFriendRequestViewController setMessageComposeSent:]


GKLeaderboardViewController : GKGameCenterViewController
 @property  long long timeScope
 @property  NSString *category
 @property  <GKLeaderboardViewControllerDelegate> *leaderboardDelegate

  // instance methods
  -[GKLeaderboardViewController setCategory:]
  -[GKLeaderboardViewController timeScope]
  -[GKLeaderboardViewController category]
  -[GKLeaderboardViewController .cxx_destruct]
  -[GKLeaderboardViewController setTimeScope:]
  -[GKLeaderboardViewController init]
  -[GKLeaderboardViewController notifyDelegateOnWillFinish]
  -[GKLeaderboardViewController leaderboardDelegate]
  -[GKLeaderboardViewController setLeaderboardDelegate:]


GKLeaderboardScoreCell : GKFocusHighlightingCollectionViewCell
 @property  GKDashboardPlayerPhotoView *playerView
 @property  NSLayoutConstraint *playerViewHeightConstraint
 @property  BOOL isLocalPlayerScore
 @property  UILabel *rankLabel
 @property  UILabel *nameLabel
 @property  UILabel *subtitleLabel
 @property  UILabel *scoreLabel
 @property  UIView *topLine
 @property  UIView *monogramColorView
 @property  UIView *backView
 @property  GKLeaderboardEntry *entry
 @property  BOOL lineVisible
 @property  <GKLeaderboardScoreActionDelegate> *delegate
 @property  BOOL shouldShowContextMenu

  // class methods
  +[GKLeaderboardScoreCell defaultSize]
  +[GKLeaderboardScoreCell lowRankNib]
  +[GKLeaderboardScoreCell highRankNib]

  // instance methods
  -[GKLeaderboardScoreCell setSubtitleLabel:]
  -[GKLeaderboardScoreCell subtitleLabel]
  -[GKLeaderboardScoreCell setDelegate:]
  -[GKLeaderboardScoreCell delegate]
  -[GKLeaderboardScoreCell canBecomeFocused]
  -[GKLeaderboardScoreCell setSelected:]
  -[GKLeaderboardScoreCell .cxx_destruct]
  -[GKLeaderboardScoreCell prepareForReuse]
  -[GKLeaderboardScoreCell setHighlighted:]
  -[GKLeaderboardScoreCell setPlayerView:]
  -[GKLeaderboardScoreCell playerView]
  -[GKLeaderboardScoreCell nameLabel]
  -[GKLeaderboardScoreCell backView]
  -[GKLeaderboardScoreCell awakeFromNib]
  -[GKLeaderboardScoreCell setEntry:]
  -[GKLeaderboardScoreCell entry]
  -[GKLeaderboardScoreCell setBackView:]
  -[GKLeaderboardScoreCell setNameLabel:]
  -[GKLeaderboardScoreCell shouldShowContextMenu]
  -[GKLeaderboardScoreCell updateLayerMask:]
  -[GKLeaderboardScoreCell setLineVisible:]
  -[GKLeaderboardScoreCell lineVisible]
  -[GKLeaderboardScoreCell setShouldShowContextMenu:]
  -[GKLeaderboardScoreCell cellBackgroundColor:]
  -[GKLeaderboardScoreCell setupForLeaderboardEntry:]
  -[GKLeaderboardScoreCell playerViewHeightConstraint]
  -[GKLeaderboardScoreCell setPlayerViewHeightConstraint:]
  -[GKLeaderboardScoreCell isLocalPlayerScore]
  -[GKLeaderboardScoreCell setIsLocalPlayerScore:]
  -[GKLeaderboardScoreCell rankLabel]
  -[GKLeaderboardScoreCell setRankLabel:]
  -[GKLeaderboardScoreCell scoreLabel]
  -[GKLeaderboardScoreCell setScoreLabel:]
  -[GKLeaderboardScoreCell topLine]
  -[GKLeaderboardScoreCell setTopLine:]
  -[GKLeaderboardScoreCell monogramColorView]
  -[GKLeaderboardScoreCell setMonogramColorView:]


GKCollectionDataSource : NSObject <UICollectionViewDataSource, UICollectionViewDelegateFlowLayout>
 @property  NSArray *searchTerms
 @property  UIViewController *presentationViewController
 @property  BOOL onDarkBackground
 @property  long long itemCount
 @property  BOOL useStandardHeaders
 @property  NSString *sectionHeaderText
 @property  double preferredCollectionHeight
 @property  NSString *analyticsEvent
 @property  NSString *analyticsEventType
 @property  BOOL isSearching
 @property  NSString *searchText
 @property  BOOL breakSearchInputTextIntoMultipleTerms
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKCollectionDataSource collectionView:cellForItemAtIndexPath:]
  -[GKCollectionDataSource searchTerms]
  -[GKCollectionDataSource collectionView:viewForSupplementaryElementOfKind:atIndexPath:]
  -[GKCollectionDataSource setAnalyticsEvent:]
  -[GKCollectionDataSource collectionView:didDeselectItemAtIndexPath:]
  -[GKCollectionDataSource numberOfSectionsInCollectionView:]
  -[GKCollectionDataSource itemCount]
  -[GKCollectionDataSource collectionView:canFocusItemAtIndexPath:]
  -[GKCollectionDataSource setSearchText:]
  -[GKCollectionDataSource .cxx_destruct]
  -[GKCollectionDataSource setSearchTerms:]
  -[GKCollectionDataSource collectionView:layout:referenceSizeForHeaderInSection:]
  -[GKCollectionDataSource dismissViewController:]
  -[GKCollectionDataSource searchText]
  -[GKCollectionDataSource isSearching]
  -[GKCollectionDataSource collectionView:didSelectItemAtIndexPath:]
  -[GKCollectionDataSource analyticsEvent]
  -[GKCollectionDataSource collectionView:numberOfItemsInSection:]
  -[GKCollectionDataSource loadDataWithCompletionHandler:]
  -[GKCollectionDataSource init]
  -[GKCollectionDataSource collectionView:didFocusItemAtIndexPath:]
  -[GKCollectionDataSource collectionView:didUnfocusItemAtIndexPath:]
  -[GKCollectionDataSource presentationViewController]
  -[GKCollectionDataSource setPresentationViewController:]
  -[GKCollectionDataSource preferredCollectionHeight]
  -[GKCollectionDataSource setOnDarkBackground:]
  -[GKCollectionDataSource onDarkBackground]
  -[GKCollectionDataSource setupCollectionView:]
  -[GKCollectionDataSource itemForIndexPath:]
  -[GKCollectionDataSource sectionHeaderText]
  -[GKCollectionDataSource searchKeyForSection:]
  -[GKCollectionDataSource searchTextHasChanged]
  -[GKCollectionDataSource headerTextForSection:]
  -[GKCollectionDataSource showViewController:popoverSourceView:]
  -[GKCollectionDataSource searchMatchesItem:inSection:]
  -[GKCollectionDataSource alternateSearchKeyForSection:]
  -[GKCollectionDataSource isValidAnalytics]
  -[GKCollectionDataSource useStandardHeaders]
  -[GKCollectionDataSource setUseStandardHeaders:]
  -[GKCollectionDataSource analyticsEventType]
  -[GKCollectionDataSource setAnalyticsEventType:]
  -[GKCollectionDataSource breakSearchInputTextIntoMultipleTerms]
  -[GKCollectionDataSource setBreakSearchInputTextIntoMultipleTerms:]


GKLeaderboardAddFriendsCell : UICollectionViewCell
 @property  _TtC12GameCenterUI22GKAddFriendsLockupView *addFriendsLockupView
 @property  _TtC12GameCenterUI14EmptyStateView *noFriendsView
 @property  UIView *container
 @property  UIView *topLine
 @property  long long friendCount
 @property  BOOL lineVisible

  // instance methods
  -[GKLeaderboardAddFriendsCell setContainer:]
  -[GKLeaderboardAddFriendsCell .cxx_destruct]
  -[GKLeaderboardAddFriendsCell container]
  -[GKLeaderboardAddFriendsCell setLineVisible:]
  -[GKLeaderboardAddFriendsCell lineVisible]
  -[GKLeaderboardAddFriendsCell topLine]
  -[GKLeaderboardAddFriendsCell setTopLine:]
  -[GKLeaderboardAddFriendsCell preferredLayoutSizeFittingSize:]
  -[GKLeaderboardAddFriendsCell configureAddFriendsLockupWithHandler:]
  -[GKLeaderboardAddFriendsCell configureNoFriendsViewWithHandler:]
  -[GKLeaderboardAddFriendsCell clearContainer]
  -[GKLeaderboardAddFriendsCell friendCount]
  -[GKLeaderboardAddFriendsCell setFriendCount:]
  -[GKLeaderboardAddFriendsCell addFriendsLockupView]
  -[GKLeaderboardAddFriendsCell setAddFriendsLockupView:]
  -[GKLeaderboardAddFriendsCell noFriendsView]
  -[GKLeaderboardAddFriendsCell setNoFriendsView:]


GKDashboardChallengeDetailViewController : GKDetailViewController
 @property  GKChallenge *challenge
 @property  GKAchievementIconView *iconView
 @property  UILabel *titleLabel
 @property  UILabel *descriptionLabel
 @property  UILabel *fromLabel
 @property  UIButton *playButton
 @property  UIButton *declineButton
 @property  NSLayoutConstraint *topConstraint
 @property  double topMargin
 @property  NSLayoutConstraint *iconHeightConstraint
 @property  NSLayoutConstraint *speechToFromConstraint
 @property  id delegate
 @property  BOOL shouldShowPlay

  // instance methods
  -[GKDashboardChallengeDetailViewController setChallenge:]
  -[GKDashboardChallengeDetailViewController setTitleLabel:]
  -[GKDashboardChallengeDetailViewController setDescriptionLabel:]
  -[GKDashboardChallengeDetailViewController challenge]
  -[GKDashboardChallengeDetailViewController setDelegate:]
  -[GKDashboardChallengeDetailViewController delegate]
  -[GKDashboardChallengeDetailViewController viewWillLayoutSubviews]
  -[GKDashboardChallengeDetailViewController setTopConstraint:]
  -[GKDashboardChallengeDetailViewController .cxx_destruct]
  -[GKDashboardChallengeDetailViewController viewDidLoad]
  -[GKDashboardChallengeDetailViewController setIconView:]
  -[GKDashboardChallengeDetailViewController play:]
  -[GKDashboardChallengeDetailViewController iconView]
  -[GKDashboardChallengeDetailViewController topConstraint]
  -[GKDashboardChallengeDetailViewController preferredFocusEnvironments]
  -[GKDashboardChallengeDetailViewController descriptionLabel]
  -[GKDashboardChallengeDetailViewController titleLabel]
  -[GKDashboardChallengeDetailViewController topMargin]
  -[GKDashboardChallengeDetailViewController setTopMargin:]
  -[GKDashboardChallengeDetailViewController fromLabel]
  -[GKDashboardChallengeDetailViewController setFromLabel:]
  -[GKDashboardChallengeDetailViewController iconHeightConstraint]
  -[GKDashboardChallengeDetailViewController setIconHeightConstraint:]
  -[GKDashboardChallengeDetailViewController playButton]
  -[GKDashboardChallengeDetailViewController declineButton]
  -[GKDashboardChallengeDetailViewController setDeclineButton:]
  -[GKDashboardChallengeDetailViewController initWithChallenge:]
  -[GKDashboardChallengeDetailViewController configureForChallenge]
  -[GKDashboardChallengeDetailViewController challengeOK:]
  -[GKDashboardChallengeDetailViewController updateLeaderboardImage]
  -[GKDashboardChallengeDetailViewController shouldShowPlay]
  -[GKDashboardChallengeDetailViewController setShouldShowPlay:]
  -[GKDashboardChallengeDetailViewController decline:]
  -[GKDashboardChallengeDetailViewController setPlayButton:]
  -[GKDashboardChallengeDetailViewController speechToFromConstraint]
  -[GKDashboardChallengeDetailViewController setSpeechToFromConstraint:]


GKProfileFetchOptionsHelper : NSObject
  // class methods
  +[GKProfileFetchOptionsHelper fetchOptionsIncludingContactsIntegration]


GKDashboardLeaderboardListDataSource : GKCollectionDataSource
 @property  GKGameRecord *gameRecord
 @property  GKLeaderboardSet *leaderboardSet
 @property  NSArray *leaderboards
 @property  NSDictionary *assetNames

  // instance methods
  -[GKDashboardLeaderboardListDataSource collectionView:cellForItemAtIndexPath:]
  -[GKDashboardLeaderboardListDataSource collectionView:shouldSelectItemAtIndexPath:]
  -[GKDashboardLeaderboardListDataSource itemCount]
  -[GKDashboardLeaderboardListDataSource collectionView:layout:sizeForItemAtIndexPath:]
  -[GKDashboardLeaderboardListDataSource .cxx_destruct]
  -[GKDashboardLeaderboardListDataSource collectionView:didSelectItemAtIndexPath:]
  -[GKDashboardLeaderboardListDataSource loadDataWithCompletionHandler:]
  -[GKDashboardLeaderboardListDataSource preferredCollectionHeight]
  -[GKDashboardLeaderboardListDataSource setupCollectionView:]
  -[GKDashboardLeaderboardListDataSource itemForIndexPath:]
  -[GKDashboardLeaderboardListDataSource sectionHeaderText]
  -[GKDashboardLeaderboardListDataSource gameRecord]
  -[GKDashboardLeaderboardListDataSource setGameRecord:]
  -[GKDashboardLeaderboardListDataSource setLeaderboardSet:]
  -[GKDashboardLeaderboardListDataSource leaderboardSet]
  -[GKDashboardLeaderboardListDataSource initWithGameRecord:leaderboardSet:]
  -[GKDashboardLeaderboardListDataSource removeLeaderboardsWithoutImages]
  -[GKDashboardLeaderboardListDataSource assetNames]
  -[GKDashboardLeaderboardListDataSource setAssetNames:]
  -[GKDashboardLeaderboardListDataSource leaderboards]
  -[GKDashboardLeaderboardListDataSource setLeaderboards:]


GKPickerSearchTextField : UITextField
  // instance methods
  -[GKPickerSearchTextField resignFirstResponder]
  -[GKPickerSearchTextField becomeFirstResponder]


GKComposeRecipient : CNComposeRecipient

GKDashboardMultiplayerPickerViewController : GKDashboardCollectionViewController <UITextFieldDelegate, GKDashboardMultiplayerPickerDatasourceDelegate, CNContactPickerDelegate, GKMultiplayerCustomInviteMessageViewControllerDelegate, CNComposeRecipientTextViewDelegate>
 @property  BOOL shouldIgnoreClearSelection
 @property  BOOL usePreferredFocusCell
 @property  UILabel *descriptionLabel
 @property  UIButton *sendButton
 @property  UIButton *customizeMessageButton
 @property  UITextField *messageField
 @property  UIVisualEffectView *backgroundEffectView
 @property  UIVisualEffectView *navigationVisualEffectBackground
 @property  NSLayoutConstraint *navigationHeaderHeightConstraint
 @property  UILabel *headerTitle
 @property  UILabel *headerSubtitle
 @property  UIStackView *headerContentView
 @property  UIView *collapsedTitleContainer
 @property  UILabel *collapsedTitle
 @property  UILabel *collapsedSubtitle
 @property  NSMutableDictionary *recipientPlayerMap
 @property  NSMutableDictionary *removedRecipientPlayerMap
 @property  NSMutableDictionary *recipientMap
 @property  BOOL recipientRemovedImplicitly
 @property  BOOL skipAddressTokenization
 @property  BOOL isAnimatingComposeTextViewSizeChange
 @property  NSLayoutConstraint *customizeMessageBottomConstraint
 @property  double initialCustomizeMessageBottomConstraintConstant
 @property  GKDashboardMultiplayerPickerDataSource *pickerDataSource
 @property  CNContactPickerViewController *contactPicker
 @property  BOOL excludesContacts
 @property  double keyboardHeight
 @property  UIView *composeTextViewContainer
 @property  UIView *composeTextViewContainerBackground
 @property  NSLayoutConstraint *composeTextViewContainerBackgroundHeightConstraint
 @property  CNComposeRecipientTextView *composeTextView
 @property  NSLayoutConstraint *composeTextViewHeightConstraint
 @property  BOOL composeTextViewShowingPlaceholderText
 @property  UIButton *navBarMessageButton
 @property  UIButton *navBarSendButton
 @property  NSLayoutConstraint *rightBarButtonTopConstraint
 @property  NSLayoutConstraint *leftBarButtonTopConstraint
 @property  GKPickerSearchTextField *searchTextField
 @property  UIButton *showContactPickerButton
 @property  NSString *message
 @property  @? completionHandler
 @property  BOOL supportsNearby
 @property  BOOL nearbyOnly
 @property  <GKDashboardNearbyBrowserDelegate> *nearbyDelegate
 @property  <GKDashboardMultiplayerPickerDelegate> *multiplayerPickerDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKDashboardMultiplayerPickerViewController clearSelection]
  -[GKDashboardMultiplayerPickerViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[GKDashboardMultiplayerPickerViewController setBackgroundEffectView:]
  -[GKDashboardMultiplayerPickerViewController cancel:]
  -[GKDashboardMultiplayerPickerViewController headerTitle]
  -[GKDashboardMultiplayerPickerViewController setKeyboardHeight:]
  -[GKDashboardMultiplayerPickerViewController setMessage:]
  -[GKDashboardMultiplayerPickerViewController keyboardHeight]
  -[GKDashboardMultiplayerPickerViewController viewSafeAreaInsetsDidChange]
  -[GKDashboardMultiplayerPickerViewController setDescriptionLabel:]
  -[GKDashboardMultiplayerPickerViewController addMessage:]
  -[GKDashboardMultiplayerPickerViewController scrollViewDidScroll:]
  -[GKDashboardMultiplayerPickerViewController textFieldShouldReturn:]
  -[GKDashboardMultiplayerPickerViewController searchTextField]
  -[GKDashboardMultiplayerPickerViewController collectionView:didDeselectItemAtIndexPath:]
  -[GKDashboardMultiplayerPickerViewController setHeaderTitle:]
  -[GKDashboardMultiplayerPickerViewController textFieldDidBeginEditing:]
  -[GKDashboardMultiplayerPickerViewController viewDidAppear:]
  -[GKDashboardMultiplayerPickerViewController collectionView:willDisplayCell:forItemAtIndexPath:]
  -[GKDashboardMultiplayerPickerViewController setSearchText:]
  -[GKDashboardMultiplayerPickerViewController scrollViewDidEndDecelerating:]
  -[GKDashboardMultiplayerPickerViewController .cxx_destruct]
  -[GKDashboardMultiplayerPickerViewController viewDidLoad]
  -[GKDashboardMultiplayerPickerViewController headerSubtitle]
  -[GKDashboardMultiplayerPickerViewController viewWillAppear:]
  -[GKDashboardMultiplayerPickerViewController backgroundEffectView]
  -[GKDashboardMultiplayerPickerViewController viewDidLayoutSubviews]
  -[GKDashboardMultiplayerPickerViewController hasData]
  -[GKDashboardMultiplayerPickerViewController preferredFocusEnvironments]
  -[GKDashboardMultiplayerPickerViewController scrollViewDidEndScrollingAnimation:]
  -[GKDashboardMultiplayerPickerViewController viewDidDisappear:]
  -[GKDashboardMultiplayerPickerViewController collectionView:didSelectItemAtIndexPath:]
  -[GKDashboardMultiplayerPickerViewController send:]
  -[GKDashboardMultiplayerPickerViewController setHeaderSubtitle:]
  -[GKDashboardMultiplayerPickerViewController descriptionLabel]
  -[GKDashboardMultiplayerPickerViewController textFieldDidEndEditing:]
  -[GKDashboardMultiplayerPickerViewController viewWillDisappear:]
  -[GKDashboardMultiplayerPickerViewController scrollViewDidEndDragging:willDecelerate:]
  -[GKDashboardMultiplayerPickerViewController traitCollectionDidChange:]
  -[GKDashboardMultiplayerPickerViewController scrollViewWillBeginDragging:]
  -[GKDashboardMultiplayerPickerViewController message]
  -[GKDashboardMultiplayerPickerViewController setCompletionHandler:]
  -[GKDashboardMultiplayerPickerViewController completionHandler]
  -[GKDashboardMultiplayerPickerViewController setSearchTextField:]
  -[GKDashboardMultiplayerPickerViewController textField:shouldChangeCharactersInRange:replacementString:]
  -[GKDashboardMultiplayerPickerViewController contactPicker:didSelectContact:]
  -[GKDashboardMultiplayerPickerViewController contactPickerDidCancel:]
  -[GKDashboardMultiplayerPickerViewController contactPicker]
  -[GKDashboardMultiplayerPickerViewController setContactPicker:]
  -[GKDashboardMultiplayerPickerViewController composeHeaderView:didChangeSize:]
  -[GKDashboardMultiplayerPickerViewController composeRecipientView:didAddRecipient:]
  -[GKDashboardMultiplayerPickerViewController composeRecipientView:didFinishEnteringAddress:]
  -[GKDashboardMultiplayerPickerViewController composeRecipientView:didRemoveRecipient:]
  -[GKDashboardMultiplayerPickerViewController composeRecipientView:textDidChange:]
  -[GKDashboardMultiplayerPickerViewController composeRecipientView:didSelectRecipients:]
  -[GKDashboardMultiplayerPickerViewController composeRecipientViewRequestAddRecipient:]
  -[GKDashboardMultiplayerPickerViewController composeRecipientViewReturnPressed:]
  -[GKDashboardMultiplayerPickerViewController composeRecipientViewDidBecomeFirstResponder:]
  -[GKDashboardMultiplayerPickerViewController sendButton]
  -[GKDashboardMultiplayerPickerViewController setSendButton:]
  -[GKDashboardMultiplayerPickerViewController recipientMap]
  -[GKDashboardMultiplayerPickerViewController contentSizeCategoryDidChangeNotification:]
  -[GKDashboardMultiplayerPickerViewController dataUpdated:withError:]
  -[GKDashboardMultiplayerPickerViewController setupNoContentView:withError:]
  -[GKDashboardMultiplayerPickerViewController adjustCustomizeMessageConstraint]
  -[GKDashboardMultiplayerPickerViewController _updateButtonEnableState]
  -[GKDashboardMultiplayerPickerViewController shouldIgnoreClearSelection]
  -[GKDashboardMultiplayerPickerViewController setShouldIgnoreClearSelection:]
  -[GKDashboardMultiplayerPickerViewController customizeMessageButton]
  -[GKDashboardMultiplayerPickerViewController setCustomizeMessageButton:]
  -[GKDashboardMultiplayerPickerViewController messageField]
  -[GKDashboardMultiplayerPickerViewController setMessageField:]
  -[GKDashboardMultiplayerPickerViewController customizeMessageBottomConstraint]
  -[GKDashboardMultiplayerPickerViewController setCustomizeMessageBottomConstraint:]
  -[GKDashboardMultiplayerPickerViewController initialCustomizeMessageBottomConstraintConstant]
  -[GKDashboardMultiplayerPickerViewController setInitialCustomizeMessageBottomConstraintConstant:]
  -[GKDashboardMultiplayerPickerViewController willShowKeyboard:]
  -[GKDashboardMultiplayerPickerViewController willHideKeyboard:]
  -[GKDashboardMultiplayerPickerViewController pickerDatasource:didPickPlayers:]
  -[GKDashboardMultiplayerPickerViewController pickerDatasourceDidSelectAddFriend:]
  -[GKDashboardMultiplayerPickerViewController createSortPickerMenu]
  -[GKDashboardMultiplayerPickerViewController pickerDatasource:didSelectPlayers:inGroup:]
  -[GKDashboardMultiplayerPickerViewController pickerDatasource:didDeselectPlayers:inGroup:]
  -[GKDashboardMultiplayerPickerViewController highlightAlreadySelectedPlayers:inGroup:]
  -[GKDashboardMultiplayerPickerViewController pickerCollectionView]
  -[GKDashboardMultiplayerPickerViewController playerGroupDidExpandInPlace]
  -[GKDashboardMultiplayerPickerViewController existingMessageForInviteViewController:]
  -[GKDashboardMultiplayerPickerViewController customInviteViewController:didFinishWithMessage:]
  -[GKDashboardMultiplayerPickerViewController initWithMaxSelectable:hiddenPlayers:nearbyOnly:]
  -[GKDashboardMultiplayerPickerViewController pickerDataSource]
  -[GKDashboardMultiplayerPickerViewController updateCollectionViewContentInsets]
  -[GKDashboardMultiplayerPickerViewController blurEffectForTraitCollection:]
  -[GKDashboardMultiplayerPickerViewController configureComposeTextView]
  -[GKDashboardMultiplayerPickerViewController addRecipientForPlayers:withName:]
  -[GKDashboardMultiplayerPickerViewController removeRecipientWithName:]
  -[GKDashboardMultiplayerPickerViewController highlightRecipients:]
  -[GKDashboardMultiplayerPickerViewController supportsNearby]
  -[GKDashboardMultiplayerPickerViewController setSupportsNearby:]
  -[GKDashboardMultiplayerPickerViewController nearbyOnly]
  -[GKDashboardMultiplayerPickerViewController setNearbyDelegate:]
  -[GKDashboardMultiplayerPickerViewController updateNavHeaderHeightAndOpacity]
  -[GKDashboardMultiplayerPickerViewController showCollapsedTitleAndSubtitleInNavBar]
  -[GKDashboardMultiplayerPickerViewController dockHeaderViewIfNeeded]
  -[GKDashboardMultiplayerPickerViewController collapseHeaderView]
  -[GKDashboardMultiplayerPickerViewController composedNameForSuggestedMessageGroup:]
  -[GKDashboardMultiplayerPickerViewController updateAddMessageButtonVisibility]
  -[GKDashboardMultiplayerPickerViewController handleSearchTextFieldReturn:]
  -[GKDashboardMultiplayerPickerViewController didPressShowContactPickerButton:]
  -[GKDashboardMultiplayerPickerViewController didBeginSearchTextEditing]
  -[GKDashboardMultiplayerPickerViewController didEndSearchTextEditing]
  -[GKDashboardMultiplayerPickerViewController collectionSectionInset]
  -[GKDashboardMultiplayerPickerViewController _updateCollectionView]
  -[GKDashboardMultiplayerPickerViewController nearbyDelegate]
  -[GKDashboardMultiplayerPickerViewController multiplayerPickerDelegate]
  -[GKDashboardMultiplayerPickerViewController setMultiplayerPickerDelegate:]
  -[GKDashboardMultiplayerPickerViewController usePreferredFocusCell]
  -[GKDashboardMultiplayerPickerViewController setUsePreferredFocusCell:]
  -[GKDashboardMultiplayerPickerViewController navigationVisualEffectBackground]
  -[GKDashboardMultiplayerPickerViewController setNavigationVisualEffectBackground:]
  -[GKDashboardMultiplayerPickerViewController navigationHeaderHeightConstraint]
  -[GKDashboardMultiplayerPickerViewController setNavigationHeaderHeightConstraint:]
  -[GKDashboardMultiplayerPickerViewController headerContentView]
  -[GKDashboardMultiplayerPickerViewController setHeaderContentView:]
  -[GKDashboardMultiplayerPickerViewController collapsedTitleContainer]
  -[GKDashboardMultiplayerPickerViewController setCollapsedTitleContainer:]
  -[GKDashboardMultiplayerPickerViewController collapsedTitle]
  -[GKDashboardMultiplayerPickerViewController setCollapsedTitle:]
  -[GKDashboardMultiplayerPickerViewController collapsedSubtitle]
  -[GKDashboardMultiplayerPickerViewController setCollapsedSubtitle:]
  -[GKDashboardMultiplayerPickerViewController recipientPlayerMap]
  -[GKDashboardMultiplayerPickerViewController setRecipientPlayerMap:]
  -[GKDashboardMultiplayerPickerViewController removedRecipientPlayerMap]
  -[GKDashboardMultiplayerPickerViewController setRemovedRecipientPlayerMap:]
  -[GKDashboardMultiplayerPickerViewController setRecipientMap:]
  -[GKDashboardMultiplayerPickerViewController recipientRemovedImplicitly]
  -[GKDashboardMultiplayerPickerViewController setRecipientRemovedImplicitly:]
  -[GKDashboardMultiplayerPickerViewController skipAddressTokenization]
  -[GKDashboardMultiplayerPickerViewController setSkipAddressTokenization:]
  -[GKDashboardMultiplayerPickerViewController isAnimatingComposeTextViewSizeChange]
  -[GKDashboardMultiplayerPickerViewController setIsAnimatingComposeTextViewSizeChange:]
  -[GKDashboardMultiplayerPickerViewController excludesContacts]
  -[GKDashboardMultiplayerPickerViewController setExcludesContacts:]
  -[GKDashboardMultiplayerPickerViewController composeTextViewContainer]
  -[GKDashboardMultiplayerPickerViewController setComposeTextViewContainer:]
  -[GKDashboardMultiplayerPickerViewController composeTextViewContainerBackground]
  -[GKDashboardMultiplayerPickerViewController setComposeTextViewContainerBackground:]
  -[GKDashboardMultiplayerPickerViewController composeTextViewContainerBackgroundHeightConstraint]
  -[GKDashboardMultiplayerPickerViewController setComposeTextViewContainerBackgroundHeightConstraint:]
  -[GKDashboardMultiplayerPickerViewController composeTextView]
  -[GKDashboardMultiplayerPickerViewController setComposeTextView:]
  -[GKDashboardMultiplayerPickerViewController composeTextViewHeightConstraint]
  -[GKDashboardMultiplayerPickerViewController setComposeTextViewHeightConstraint:]
  -[GKDashboardMultiplayerPickerViewController composeTextViewShowingPlaceholderText]
  -[GKDashboardMultiplayerPickerViewController setComposeTextViewShowingPlaceholderText:]
  -[GKDashboardMultiplayerPickerViewController navBarMessageButton]
  -[GKDashboardMultiplayerPickerViewController setNavBarMessageButton:]
  -[GKDashboardMultiplayerPickerViewController navBarSendButton]
  -[GKDashboardMultiplayerPickerViewController setNavBarSendButton:]
  -[GKDashboardMultiplayerPickerViewController rightBarButtonTopConstraint]
  -[GKDashboardMultiplayerPickerViewController setRightBarButtonTopConstraint:]
  -[GKDashboardMultiplayerPickerViewController leftBarButtonTopConstraint]
  -[GKDashboardMultiplayerPickerViewController setLeftBarButtonTopConstraint:]
  -[GKDashboardMultiplayerPickerViewController showContactPickerButton]
  -[GKDashboardMultiplayerPickerViewController setShowContactPickerButton:]


GKLoadableContentStateMachine : _GKStateMachine
  // instance methods
  -[GKLoadableContentStateMachine init]


GKTurnBasedMatchmakerViewController : UINavigationController <GKLocalPlayerListener, GKTurnBasedEventListener, GKExtensionParentViewControllerProtocol>
 @property  GKTurnBasedMatchmakerHostViewController *remoteViewController
 @property  GKMatchRequest *matchRequest
 @property  UIAlertController *alertController
 @property  <GKTurnBasedMatchmakerViewControllerDelegate> *turnBasedMatchmakerDelegate
 @property  BOOL showExistingMatches
 @property  long long matchmakingMode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[GKTurnBasedMatchmakerViewController _preventsAppearanceProxyCustomization]

  // instance methods
  -[GKTurnBasedMatchmakerViewController finishWithError:]
  -[GKTurnBasedMatchmakerViewController shouldAutorotateToInterfaceOrientation:]
  -[GKTurnBasedMatchmakerViewController viewDidAppear:]
  -[GKTurnBasedMatchmakerViewController dealloc]
  -[GKTurnBasedMatchmakerViewController setRemoteViewController:]
  -[GKTurnBasedMatchmakerViewController .cxx_destruct]
  -[GKTurnBasedMatchmakerViewController viewDidLoad]
  -[GKTurnBasedMatchmakerViewController viewWillAppear:]
  -[GKTurnBasedMatchmakerViewController loadView]
  -[GKTurnBasedMatchmakerViewController remoteViewController]
  -[GKTurnBasedMatchmakerViewController supportedInterfaceOrientations]
  -[GKTurnBasedMatchmakerViewController viewDidDisappear:]
  -[GKTurnBasedMatchmakerViewController cancel]
  -[GKTurnBasedMatchmakerViewController init]
  -[GKTurnBasedMatchmakerViewController alertController]
  -[GKTurnBasedMatchmakerViewController setAlertController:]
  -[GKTurnBasedMatchmakerViewController authenticationChanged:]
  -[GKTurnBasedMatchmakerViewController player:receivedTurnEventForMatch:didBecomeActive:]
  -[GKTurnBasedMatchmakerViewController extensionDidFinishWithError:]
  -[GKTurnBasedMatchmakerViewController initWithMatchRequest:]
  -[GKTurnBasedMatchmakerViewController _setupChildViewController]
  -[GKTurnBasedMatchmakerViewController _setupRemoteViewController]
  -[GKTurnBasedMatchmakerViewController shouldShowPlayForTurnBasedMatch]
  -[GKTurnBasedMatchmakerViewController shouldShowQuitForTurnBasedMatch]
  -[GKTurnBasedMatchmakerViewController setShowExistingMatches:]
  -[GKTurnBasedMatchmakerViewController finishWithMatch:]
  -[GKTurnBasedMatchmakerViewController playerQuitMatch:]
  -[GKTurnBasedMatchmakerViewController turnBasedMatchmakerDelegate]
  -[GKTurnBasedMatchmakerViewController setTurnBasedMatchmakerDelegate:]
  -[GKTurnBasedMatchmakerViewController matchRequest]
  -[GKTurnBasedMatchmakerViewController setMatchRequest:]
  -[GKTurnBasedMatchmakerViewController showExistingMatches]
  -[GKTurnBasedMatchmakerViewController matchmakingMode]
  -[GKTurnBasedMatchmakerViewController setMatchmakingMode:]


GKFriendRequestComposeViewController : UINavigationController
 @property  NSString *message
 @property  unsigned long recipientCount
 @property  unsigned int rid
 @property  UIAlertController *alertController
 @property  <GKFriendRequestComposeViewControllerDelegate> *composeViewDelegate

  // class methods
  +[GKFriendRequestComposeViewController _preventsAppearanceProxyCustomization]
  +[GKFriendRequestComposeViewController maxNumberOfRecipients]

  // instance methods
  -[GKFriendRequestComposeViewController shouldAutomaticallyForwardRotationMethods]
  -[GKFriendRequestComposeViewController setMessage:]
  -[GKFriendRequestComposeViewController viewDidAppear:]
  -[GKFriendRequestComposeViewController .cxx_destruct]
  -[GKFriendRequestComposeViewController viewWillAppear:]
  -[GKFriendRequestComposeViewController setComposeViewDelegate:]
  -[GKFriendRequestComposeViewController supportedInterfaceOrientations]
  -[GKFriendRequestComposeViewController shouldAutomaticallyForwardAppearanceMethods]
  -[GKFriendRequestComposeViewController viewDidDisappear:]
  -[GKFriendRequestComposeViewController composeViewDelegate]
  -[GKFriendRequestComposeViewController message]
  -[GKFriendRequestComposeViewController init]
  -[GKFriendRequestComposeViewController alertController]
  -[GKFriendRequestComposeViewController setAlertController:]
  -[GKFriendRequestComposeViewController automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers]
  -[GKFriendRequestComposeViewController recipientCount]
  -[GKFriendRequestComposeViewController setRecipientCount:]
  -[GKFriendRequestComposeViewController _setupChildViewController]
  -[GKFriendRequestComposeViewController rid]
  -[GKFriendRequestComposeViewController setRid:]
  -[GKFriendRequestComposeViewController prepareForNewRecipients:]
  -[GKFriendRequestComposeViewController _addRecipientInternals:]
  -[GKFriendRequestComposeViewController addRecipientPlayers:]
  -[GKFriendRequestComposeViewController addRecipientsWithPlayerIDs:]
  -[GKFriendRequestComposeViewController addRecipientsWithEmailAddresses:]
  -[GKFriendRequestComposeViewController sendFinishedMessageToDelegateCancelled:]


GKDashboardButtonSectionHeaderView : GKDashboardSectionHeaderView
 @property  UIButton *button
 @property  UIStackView *stackView
 @property  NSLayoutConstraint *rightMarginConstraint
 @property  UIFocusGuide *focusGuide
 @property  NSString *buttonTitle
 @property  NSAttributedString *attributedButtonTitle
 @property  id buttonTarget
 @property  SEL buttonAction
 @property  BOOL buttonHidden
 @property  UIView *backgroundPlatterView
 @property  UIMenu *buttonMenu

  // class methods
  +[GKDashboardButtonSectionHeaderView defaultHeight]
  +[GKDashboardButtonSectionHeaderView widthForTitle:]
  +[GKDashboardButtonSectionHeaderView platformSizeForTitle:]
  +[GKDashboardButtonSectionHeaderView widthForTitle:buttonTitle:]
  +[GKDashboardButtonSectionHeaderView platformSizeForTitle:buttonTitle:]

  // instance methods
  -[GKDashboardButtonSectionHeaderView setStackView:]
  -[GKDashboardButtonSectionHeaderView stackView]
  -[GKDashboardButtonSectionHeaderView button]
  -[GKDashboardButtonSectionHeaderView .cxx_destruct]
  -[GKDashboardButtonSectionHeaderView prepareForReuse]
  -[GKDashboardButtonSectionHeaderView setBackgroundPlatterView:]
  -[GKDashboardButtonSectionHeaderView setButton:]
  -[GKDashboardButtonSectionHeaderView buttonTitle]
  -[GKDashboardButtonSectionHeaderView intrinsicContentSize]
  -[GKDashboardButtonSectionHeaderView awakeFromNib]
  -[GKDashboardButtonSectionHeaderView backgroundPlatterView]
  -[GKDashboardButtonSectionHeaderView buttonPressed:]
  -[GKDashboardButtonSectionHeaderView setButtonTitle:]
  -[GKDashboardButtonSectionHeaderView buttonAction]
  -[GKDashboardButtonSectionHeaderView setButtonAction:]
  -[GKDashboardButtonSectionHeaderView buttonMenu]
  -[GKDashboardButtonSectionHeaderView setButtonHidden:]
  -[GKDashboardButtonSectionHeaderView setAttributedButtonTitle:]
  -[GKDashboardButtonSectionHeaderView setButtonMenu:]
  -[GKDashboardButtonSectionHeaderView attributedButtonTitle]
  -[GKDashboardButtonSectionHeaderView buttonTarget]
  -[GKDashboardButtonSectionHeaderView setButtonTarget:]
  -[GKDashboardButtonSectionHeaderView isButtonHidden]
  -[GKDashboardButtonSectionHeaderView rightMarginConstraint]
  -[GKDashboardButtonSectionHeaderView setRightMarginConstraint:]
  -[GKDashboardButtonSectionHeaderView focusGuide]
  -[GKDashboardButtonSectionHeaderView setFocusGuide:]


GKDashboardLeaderboardListViewController : GKDashboardCollectionViewController
 @property  GKLeaderboardSet *leaderboardSet

  // instance methods
  -[GKDashboardLeaderboardListViewController collectionView:viewForSupplementaryElementOfKind:atIndexPath:]
  -[GKDashboardLeaderboardListViewController .cxx_destruct]
  -[GKDashboardLeaderboardListViewController viewDidLoad]
  -[GKDashboardLeaderboardListViewController setLeaderboardSet:]
  -[GKDashboardLeaderboardListViewController leaderboardSet]
  -[GKDashboardLeaderboardListViewController initWithGameRecord:leaderboardSet:]


GKChallengeListViewSectionHeader : UICollectionReusableView
 @property  UILabel *titleLabel

  // instance methods
  -[GKChallengeListViewSectionHeader setTitleLabel:]
  -[GKChallengeListViewSectionHeader .cxx_destruct]
  -[GKChallengeListViewSectionHeader awakeFromNib]
  -[GKChallengeListViewSectionHeader titleLabel]


GKGameCenterViewController : UINavigationController <GKExtensionParentViewControllerProtocol, UIViewControllerAnimatedTransitioning, UIViewControllerTransitioningDelegate>
 @property  GKDashboardHostViewController *remoteViewController
 @property  NSString *leaderboardIdentifier
 @property  GKLeaderboard *leaderboard
 @property  NSString *achievementIdentifier
 @property  NSString *playerIdentifier
 @property  NSString *gameBundleID
 @property  UIAlertController *alertController
 @property  NSString *leaderboardCategory
 @property  long long leaderboardTimeScope
 @property  long long leaderboardPlayerScope
 @property  long long viewState
 @property  BOOL isArcade
 @property  long long restrictionMode
 @property  BOOL presenting
 @property  GKGame *actualGame
 @property  int actualHostPID
 @property  <GKGameCenterControllerDelegate> *gameCenterDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[GKGameCenterViewController accessInstanceVariablesDirectly]
  +[GKGameCenterViewController _preventsAppearanceProxyCustomization]

  // instance methods
  -[GKGameCenterViewController animationControllerForPresentedController:presentingController:sourceController:]
  -[GKGameCenterViewController shouldAutomaticallyForwardRotationMethods]
  -[GKGameCenterViewController animationEnded:]
  -[GKGameCenterViewController shouldAutorotateToInterfaceOrientation:]
  -[GKGameCenterViewController animationControllerForDismissedController:]
  -[GKGameCenterViewController animateTransition:]
  -[GKGameCenterViewController initWithState:]
  -[GKGameCenterViewController transitionDuration:]
  -[GKGameCenterViewController isPresenting]
  -[GKGameCenterViewController viewDidAppear:]
  -[GKGameCenterViewController dealloc]
  -[GKGameCenterViewController setRemoteViewController:]
  -[GKGameCenterViewController .cxx_destruct]
  -[GKGameCenterViewController setPresenting:]
  -[GKGameCenterViewController viewWillAppear:]
  -[GKGameCenterViewController loadView]
  -[GKGameCenterViewController remoteViewController]
  -[GKGameCenterViewController _commonInit]
  -[GKGameCenterViewController supportedInterfaceOrientations]
  -[GKGameCenterViewController shouldAutomaticallyForwardAppearanceMethods]
  -[GKGameCenterViewController viewDidDisappear:]
  -[GKGameCenterViewController init]
  -[GKGameCenterViewController alertController]
  -[GKGameCenterViewController setAlertController:]
  -[GKGameCenterViewController automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers]
  -[GKGameCenterViewController viewState]
  -[GKGameCenterViewController setViewState:]
  -[GKGameCenterViewController leaderboard]
  -[GKGameCenterViewController setLeaderboard:]
  -[GKGameCenterViewController notifyDelegateOnWillFinish]
  -[GKGameCenterViewController extensionDidFinishWithError:]
  -[GKGameCenterViewController _setupChildViewController]
  -[GKGameCenterViewController _setupRemoteViewController]
  -[GKGameCenterViewController shouldShowPlayForTurnBasedMatch]
  -[GKGameCenterViewController shouldShowQuitForTurnBasedMatch]
  -[GKGameCenterViewController initWithLeaderboardID:playerScope:timeScope:]
  -[GKGameCenterViewController initWithLeaderboard:playerScope:]
  -[GKGameCenterViewController initWithAchievementID:]
  -[GKGameCenterViewController checkArcadeStateWithCompletion:]
  -[GKGameCenterViewController shouldShowPlayForChallenge]
  -[GKGameCenterViewController leaderboardIdentifier]
  -[GKGameCenterViewController setLeaderboardIdentifier:]
  -[GKGameCenterViewController leaderboardTimeScope]
  -[GKGameCenterViewController setLeaderboardTimeScope:]
  -[GKGameCenterViewController leaderboardPlayerScope]
  -[GKGameCenterViewController setLeaderboardPlayerScope:]
  -[GKGameCenterViewController leaderboardCategory]
  -[GKGameCenterViewController setLeaderboardCategory:]
  -[GKGameCenterViewController gameCenterDelegate]
  -[GKGameCenterViewController setGameCenterDelegate:]
  -[GKGameCenterViewController achievementIdentifier]
  -[GKGameCenterViewController setAchievementIdentifier:]
  -[GKGameCenterViewController playerIdentifier]
  -[GKGameCenterViewController setPlayerIdentifier:]
  -[GKGameCenterViewController gameBundleID]
  -[GKGameCenterViewController setGameBundleID:]
  -[GKGameCenterViewController isArcade]
  -[GKGameCenterViewController setIsArcade:]
  -[GKGameCenterViewController restrictionMode]
  -[GKGameCenterViewController setRestrictionMode:]
  -[GKGameCenterViewController actualGame]
  -[GKGameCenterViewController setActualGame:]
  -[GKGameCenterViewController actualHostPID]
  -[GKGameCenterViewController setActualHostPID:]
  -[GKGameCenterViewController initWithGame:hostPID:restrictionMode:deeplink:]
  -[GKGameCenterViewController setViewStateFromExtension:]
  -[GKGameCenterViewController setLeaderboardIdentifierFromExtension:]
  -[GKGameCenterViewController setLeaderboardTimeScopeFromExtension:]
  -[GKGameCenterViewController setLeaderboardPlayerScopeFromExtension:]


GKContactDataSource : NSObject
 @property  CNContactStore *store
 @property  NSArray *contacts
 @property  NSDictionary *contactLookup
 @property  NSArray *sectionHeaders
 @property  NSDictionary *sectionToContactIndexes
 @property  NSArray *skipValues
 @property  NSDictionary *skipToContactIndexes

  // instance methods
  -[GKContactDataSource store]
  -[GKContactDataSource setStore:]
  -[GKContactDataSource setContacts:]
  -[GKContactDataSource .cxx_destruct]
  -[GKContactDataSource contacts]
  -[GKContactDataSource init]
  -[GKContactDataSource sectionHeaders]
  -[GKContactDataSource setSectionHeaders:]
  -[GKContactDataSource loadContactsWithHandler:]
  -[GKContactDataSource fullContactWithIdentifier:]
  -[GKContactDataSource sectionToContactIndexes]
  -[GKContactDataSource setSectionToContactIndexes:]
  -[GKContactDataSource skipValues]
  -[GKContactDataSource setSkipValues:]
  -[GKContactDataSource skipToContactIndexes]
  -[GKContactDataSource setSkipToContactIndexes:]
  -[GKContactDataSource contactLookup]
  -[GKContactDataSource setContactLookup:]


GKHostedViewController : UIViewController
 @property  GKRemoteViewServiceController *remoteViewController
 @property  BOOL isRequestingRemoteViewController
 @property  BOOL gkIsDisappearing
 @property  GKGame *game
 @property  BOOL shouldPresentRemoteViewController
 @property  BOOL presentingRemoteViewController
 @property  @? remoteViewReadyHandler

  // instance methods
  -[GKHostedViewController shouldAutomaticallyForwardRotationMethods]
  -[GKHostedViewController shouldAutorotateToInterfaceOrientation:]
  -[GKHostedViewController didReceiveMemoryWarning]
  -[GKHostedViewController viewDidAppear:]
  -[GKHostedViewController _presentingViewController]
  -[GKHostedViewController setRemoteViewController:]
  -[GKHostedViewController .cxx_destruct]
  -[GKHostedViewController viewDidLoad]
  -[GKHostedViewController viewWillAppear:]
  -[GKHostedViewController dismissViewControllerAnimated:completion:]
  -[GKHostedViewController remoteViewController]
  -[GKHostedViewController supportedInterfaceOrientations]
  -[GKHostedViewController shouldAutomaticallyForwardAppearanceMethods]
  -[GKHostedViewController viewDidDisappear:]
  -[GKHostedViewController viewWillDisappear:]
  -[GKHostedViewController init]
  -[GKHostedViewController dismissModalViewControllerAnimated:]
  -[GKHostedViewController automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers]
  -[GKHostedViewController setRemoteViewReadyHandler:]
  -[GKHostedViewController game]
  -[GKHostedViewController setGame:]
  -[GKHostedViewController donePressed:]
  -[GKHostedViewController serviceSideViewControllerClassName]
  -[GKHostedViewController hostSideViewControllerClassName]
  -[GKHostedViewController didGetRemoteViewController]
  -[GKHostedViewController requestRemoteViewControllerIfNeeded]
  -[GKHostedViewController resetRemoteViewController]
  -[GKHostedViewController shouldPresentRemoteViewController]
  -[GKHostedViewController presentRemoteViewControllerIfNeeded]
  -[GKHostedViewController presentingRemoteViewController]
  -[GKHostedViewController setPresentingRemoteViewController:]
  -[GKHostedViewController setShouldPresentRemoteViewController:]
  -[GKHostedViewController remoteViewReadyHandler]
  -[GKHostedViewController isRequestingRemoteViewController]
  -[GKHostedViewController setIsRequestingRemoteViewController:]
  -[GKHostedViewController gkIsDisappearing]
  -[GKHostedViewController setGkIsDisappearing:]


GKCollectionColumnLayout : GKCollectionFocusingLayout
 @property  NSDictionary *itemAttributes
 @property  NSDictionary *headerAttributes
 @property  NSDictionary *decorationAttributes
 @property  NSDictionary *footerAttributes

  // instance methods
  -[GKCollectionColumnLayout prepareLayout]
  -[GKCollectionColumnLayout collectionViewContentSize]
  -[GKCollectionColumnLayout layoutAttributesForItemAtIndexPath:]
  -[GKCollectionColumnLayout layoutAttributesForSupplementaryViewOfKind:atIndexPath:]
  -[GKCollectionColumnLayout layoutAttributesForElementsInRect:]
  -[GKCollectionColumnLayout .cxx_destruct]
  -[GKCollectionColumnLayout applyDefaults]
  -[GKCollectionColumnLayout itemAttributes]
  -[GKCollectionColumnLayout setItemAttributes:]
  -[GKCollectionColumnLayout headerAttributes]
  -[GKCollectionColumnLayout setHeaderAttributes:]
  -[GKCollectionColumnLayout footerAttributes]
  -[GKCollectionColumnLayout setFooterAttributes:]
  -[GKCollectionColumnLayout decorationAttributes]
  -[GKCollectionColumnLayout setDecorationAttributes:]


GKDashboardTurnDetailViewController : GKDetailViewController
 @property  UIView *contentVerticalCenteringView
 @property  UIView *turnDetailContentView
 @property  UILabel *playingWithLabel
 @property  UILabel *createdLabel
 @property  UIButton *firstButton
 @property  UIButton *secondButton
 @property  NSLayoutConstraint *secondButtonCenteringConstraint
 @property  GKTurnBasedMatch *match
 @property  BOOL shouldShowPlay
 @property  BOOL shouldShowQuit

  // instance methods
  -[GKDashboardTurnDetailViewController setMatch:]
  -[GKDashboardTurnDetailViewController dealloc]
  -[GKDashboardTurnDetailViewController .cxx_destruct]
  -[GKDashboardTurnDetailViewController match]
  -[GKDashboardTurnDetailViewController viewDidLoad]
  -[GKDashboardTurnDetailViewController preferredFocusEnvironments]
  -[GKDashboardTurnDetailViewController acceptInvitation:]
  -[GKDashboardTurnDetailViewController declineInvitation:]
  -[GKDashboardTurnDetailViewController disableButtons]
  -[GKDashboardTurnDetailViewController shouldShowPlay]
  -[GKDashboardTurnDetailViewController setShouldShowPlay:]
  -[GKDashboardTurnDetailViewController firstButton]
  -[GKDashboardTurnDetailViewController setFirstButton:]
  -[GKDashboardTurnDetailViewController secondButton]
  -[GKDashboardTurnDetailViewController setSecondButton:]
  -[GKDashboardTurnDetailViewController chooseMatch:]
  -[GKDashboardTurnDetailViewController quitMatch:]
  -[GKDashboardTurnDetailViewController removeMatch:]
  -[GKDashboardTurnDetailViewController handleTurnBasedEvent:]
  -[GKDashboardTurnDetailViewController initWithTurnBasedMatch:]
  -[GKDashboardTurnDetailViewController refreshPresenter]
  -[GKDashboardTurnDetailViewController turnOK:]
  -[GKDashboardTurnDetailViewController shouldShowQuit]
  -[GKDashboardTurnDetailViewController setShouldShowQuit:]
  -[GKDashboardTurnDetailViewController contentVerticalCenteringView]
  -[GKDashboardTurnDetailViewController setContentVerticalCenteringView:]
  -[GKDashboardTurnDetailViewController turnDetailContentView]
  -[GKDashboardTurnDetailViewController setTurnDetailContentView:]
  -[GKDashboardTurnDetailViewController playingWithLabel]
  -[GKDashboardTurnDetailViewController setPlayingWithLabel:]
  -[GKDashboardTurnDetailViewController createdLabel]
  -[GKDashboardTurnDetailViewController setCreatedLabel:]
  -[GKDashboardTurnDetailViewController secondButtonCenteringConstraint]
  -[GKDashboardTurnDetailViewController setSecondButtonCenteringConstraint:]


GKDashboardPlayerShadowView : UIView
 @property  UIView *parentView
 @property  GKPlayer *player
 @property  UICollectionViewCell *parentCell
 @property  BOOL isUsingPlaceholder
 @property  GKDashboardPlayerPhotoView *photoView
 @property  BOOL dimmed

  // instance methods
  -[GKDashboardPlayerShadowView setDimmed:]
  -[GKDashboardPlayerShadowView dimmed]
  -[GKDashboardPlayerShadowView .cxx_destruct]
  -[GKDashboardPlayerShadowView setPhotoView:]
  -[GKDashboardPlayerShadowView photoView]
  -[GKDashboardPlayerShadowView player]
  -[GKDashboardPlayerShadowView layoutSubviews]
  -[GKDashboardPlayerShadowView setPlayer:]
  -[GKDashboardPlayerShadowView initWithFrame:]
  -[GKDashboardPlayerShadowView awakeFromNib]
  -[GKDashboardPlayerShadowView parentView]
  -[GKDashboardPlayerShadowView invalidatePhoto]
  -[GKDashboardPlayerShadowView isUsingPlaceholder]
  -[GKDashboardPlayerShadowView setupPhoto]
  -[GKDashboardPlayerShadowView parentCell]
  -[GKDashboardPlayerShadowView setParentCell:]


GKDashboardCollectionViewController : GKLoadingViewController <NSPopoverDelegate, UIAdaptivePresentationControllerDelegate, UICollectionViewDataSource, UICollectionViewDelegate>
 @property  UICollectionView *collectionView
 @property  {UIEdgeInsets=dddd} contentInsetsBeforeKeyboard
 @property  {UIEdgeInsets=dddd} scrollInsetsBeforeKeyboard
 @property  NSLayoutConstraint *keyboardConstraint
 @property  double keyboardConstraintDefaultConstant
 @property  UIView *keyboardAdjustedView
 @property  UIView *collectionContainerView
 @property  BOOL isLoading
 @property  GKCollectionDataSource *dataSource
 @property  BOOL autoWidthUsesTwoColumnsWhenSpace
 @property  NSMutableIndexSet *sectionsToReload
 @property  GKNoContentView *noContentView
 @property  @? dismissHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKDashboardCollectionViewController setCollectionView:]
  -[GKDashboardCollectionViewController clearSelection]
  -[GKDashboardCollectionViewController presentationControllerDidDismiss:]
  -[GKDashboardCollectionViewController collectionView:cellForItemAtIndexPath:]
  -[GKDashboardCollectionViewController collectionView:viewForSupplementaryElementOfKind:atIndexPath:]
  -[GKDashboardCollectionViewController dataSource]
  -[GKDashboardCollectionViewController setupDataSource]
  -[GKDashboardCollectionViewController collectionView:shouldDeselectItemAtIndexPath:]
  -[GKDashboardCollectionViewController collectionView:didDeselectItemAtIndexPath:]
  -[GKDashboardCollectionViewController collectionView:shouldSelectItemAtIndexPath:]
  -[GKDashboardCollectionViewController initWithNibName:bundle:]
  -[GKDashboardCollectionViewController numberOfSectionsInCollectionView:]
  -[GKDashboardCollectionViewController viewDidAppear:]
  -[GKDashboardCollectionViewController isLoading]
  -[GKDashboardCollectionViewController dealloc]
  -[GKDashboardCollectionViewController collectionView:layout:sizeForItemAtIndexPath:]
  -[GKDashboardCollectionViewController collectionView:canFocusItemAtIndexPath:]
  -[GKDashboardCollectionViewController collectionView:willDisplayCell:forItemAtIndexPath:]
  -[GKDashboardCollectionViewController .cxx_destruct]
  -[GKDashboardCollectionViewController collectionView]
  -[GKDashboardCollectionViewController viewDidLoad]
  -[GKDashboardCollectionViewController viewWillAppear:]
  -[GKDashboardCollectionViewController loadView]
  -[GKDashboardCollectionViewController collectionView:layout:referenceSizeForFooterInSection:]
  -[GKDashboardCollectionViewController dismissHandler]
  -[GKDashboardCollectionViewController collectionView:layout:referenceSizeForHeaderInSection:]
  -[GKDashboardCollectionViewController hasData]
  -[GKDashboardCollectionViewController preferredFocusEnvironments]
  -[GKDashboardCollectionViewController setDataSource:]
  -[GKDashboardCollectionViewController keyboardWillShow:]
  -[GKDashboardCollectionViewController keyboardWillHide:]
  -[GKDashboardCollectionViewController collectionView:didSelectItemAtIndexPath:]
  -[GKDashboardCollectionViewController collectionView:numberOfItemsInSection:]
  -[GKDashboardCollectionViewController traitCollectionDidChange:]
  -[GKDashboardCollectionViewController setDismissHandler:]
  -[GKDashboardCollectionViewController collectionView:didFocusItemAtIndexPath:]
  -[GKDashboardCollectionViewController collectionView:didUnfocusItemAtIndexPath:]
  -[GKDashboardCollectionViewController noContentView]
  -[GKDashboardCollectionViewController setNoContentView:]
  -[GKDashboardCollectionViewController loadData]
  -[GKDashboardCollectionViewController contentSizeCategoryDidChangeNotification:]
  -[GKDashboardCollectionViewController didEnterLoadingState]
  -[GKDashboardCollectionViewController setAutoWidthColumns:]
  -[GKDashboardCollectionViewController dataUpdated:withError:]
  -[GKDashboardCollectionViewController setupNoContentView:withError:]
  -[GKDashboardCollectionViewController setToHorizontalLayout:]
  -[GKDashboardCollectionViewController horizontalCollectionViewLayout]
  -[GKDashboardCollectionViewController verticalCollectionViewLayout]
  -[GKDashboardCollectionViewController createCollectionViewInsideView:]
  -[GKDashboardCollectionViewController setupVisualEffect]
  -[GKDashboardCollectionViewController prepareForAutomaticTwoColumnLayout]
  -[GKDashboardCollectionViewController setAutoWidthUsesTwoColumnsWhenSpace:]
  -[GKDashboardCollectionViewController didEnterRefreshingState]
  -[GKDashboardCollectionViewController didExitRefreshingState]
  -[GKDashboardCollectionViewController setNeedsRefresh]
  -[GKDashboardCollectionViewController showNoContentPlaceholderForError:]
  -[GKDashboardCollectionViewController hideNoContentPlaceholder]
  -[GKDashboardCollectionViewController clearSelectionForCollectionView:]
  -[GKDashboardCollectionViewController popoverDidClose:]
  -[GKDashboardCollectionViewController windowDidEndSheet:]
  -[GKDashboardCollectionViewController autoWidthUsesTwoColumnsWhenSpace]
  -[GKDashboardCollectionViewController sectionsToReload]
  -[GKDashboardCollectionViewController setSectionsToReload:]
  -[GKDashboardCollectionViewController contentInsetsBeforeKeyboard]
  -[GKDashboardCollectionViewController setContentInsetsBeforeKeyboard:]
  -[GKDashboardCollectionViewController scrollInsetsBeforeKeyboard]
  -[GKDashboardCollectionViewController setScrollInsetsBeforeKeyboard:]
  -[GKDashboardCollectionViewController keyboardConstraint]
  -[GKDashboardCollectionViewController setKeyboardConstraint:]
  -[GKDashboardCollectionViewController keyboardConstraintDefaultConstant]
  -[GKDashboardCollectionViewController setKeyboardConstraintDefaultConstant:]
  -[GKDashboardCollectionViewController keyboardAdjustedView]
  -[GKDashboardCollectionViewController setKeyboardAdjustedView:]
  -[GKDashboardCollectionViewController collectionContainerView]
  -[GKDashboardCollectionViewController setCollectionContainerView:]


GKViewController : UIViewController
 @property  GKColorPalette *colorPalette
 @property  BOOL shouldUpdateContentOnlyWhenAuthenticated
 @property  GKViewController *rootViewController

  // class methods
  +[GKViewController _shouldForwardViewWillTransitionToSize]

  // instance methods
  -[GKViewController setRootViewController:]
  -[GKViewController shouldAutorotateToInterfaceOrientation:]
  -[GKViewController rootViewController]
  -[GKViewController colorPalette]
  -[GKViewController viewDidAppear:]
  -[GKViewController .cxx_destruct]
  -[GKViewController viewWillAppear:]
  -[GKViewController loadView]
  -[GKViewController setColorPalette:]
  -[GKViewController popToRootViewControllerAnimated:]
  -[GKViewController displayUsingSplitNavigationBar]
  -[GKViewController shouldUpdateContentOnlyWhenAuthenticated]
  -[GKViewController setShouldUpdateContentOnlyWhenAuthenticated:]


GKNavigationControllerDeferredTransitionInfo : NSObject
 @property  UIViewController *viewController
 @property  int type
 @property  BOOL animated

  // instance methods
  -[GKNavigationControllerDeferredTransitionInfo animated]
  -[GKNavigationControllerDeferredTransitionInfo setViewController:]
  -[GKNavigationControllerDeferredTransitionInfo type]
  -[GKNavigationControllerDeferredTransitionInfo .cxx_destruct]
  -[GKNavigationControllerDeferredTransitionInfo setAnimated:]
  -[GKNavigationControllerDeferredTransitionInfo setType:]
  -[GKNavigationControllerDeferredTransitionInfo viewController]


GKNavigationController : UINavigationController <UIViewControllerRestoration, UINavigationBarDelegate>
 @property  NSMutableArray *deferredTransitions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[GKNavigationController _shouldForwardViewWillTransitionToSize]
  +[GKNavigationController viewControllerWithRestorationIdentifierPath:coder:]

  // instance methods
  -[GKNavigationController pushViewController:animated:]
  -[GKNavigationController popViewControllerAnimated:]
  -[GKNavigationController initWithRootViewController:]
  -[GKNavigationController initWithNibName:bundle:]
  -[GKNavigationController .cxx_destruct]
  -[GKNavigationController shouldAutorotate]
  -[GKNavigationController supportedInterfaceOrientations]
  -[GKNavigationController init]
  -[GKNavigationController initWithCoder:]
  -[GKNavigationController didShowViewController:animated:]
  -[GKNavigationController willShowViewController:animated:]
  -[GKNavigationController popToRootViewControllerAnimated:]
  -[GKNavigationController popToViewController:animated:]
  -[GKNavigationController setupGKNavigationController]
  -[GKNavigationController hasEmbeddedPopoverNavigationStack]
  -[GKNavigationController popEmbeddedPopoverViewControllers]
  -[GKNavigationController _gkPushPresentedViewControllerForCompactSizeClass:]
  -[GKNavigationController _gkViewControllersForRestoringPopover]
  -[GKNavigationController _gkRestorePopoverWithViewControllers:completion:]
  -[GKNavigationController targetViewControllerForAction:]
  -[GKNavigationController _performDeferredTransition]
  -[GKNavigationController _deferTransitionOfType:withViewController:animated:]
  -[GKNavigationController deferredTransitions]
  -[GKNavigationController setDeferredTransitions:]


GKTournamentInterface : NSObject
  // class methods
  +[GKTournamentInterface extensionInterface]
  +[GKTournamentInterface hostInterface]


GKComposeHeaderWithStaticRecipients : GKComposeHeaderField
 @property  NSArray *recipientNameStrings

  // instance methods
  -[GKComposeHeaderWithStaticRecipients .cxx_destruct]
  -[GKComposeHeaderWithStaticRecipients layoutSubviews]
  -[GKComposeHeaderWithStaticRecipients setRecipientNameStrings:]
  -[GKComposeHeaderWithStaticRecipients recipientNameStrings]


GKBasicCollectionViewDataSource : GKCollectionViewDataSource <NSCopying>
 @property  NSArray *items
 @property  SEL showAllAction
 @property  unsigned long pageSize
 @property  {_NSRange=QQ} preloadedRange
 @property  NSPredicate *filterPredicate

  // instance methods
  -[GKBasicCollectionViewDataSource collectionView:viewForSupplementaryElementOfKind:atIndexPath:]
  -[GKBasicCollectionViewDataSource setItems:]
  -[GKBasicCollectionViewDataSource filterPredicate]
  -[GKBasicCollectionViewDataSource setFilterPredicate:]
  -[GKBasicCollectionViewDataSource numberOfSectionsInCollectionView:]
  -[GKBasicCollectionViewDataSource .cxx_destruct]
  -[GKBasicCollectionViewDataSource itemAtIndexPath:]
  -[GKBasicCollectionViewDataSource items]
  -[GKBasicCollectionViewDataSource copyWithZone:]
  -[GKBasicCollectionViewDataSource collectionView:numberOfItemsInSection:]
  -[GKBasicCollectionViewDataSource init]
  -[GKBasicCollectionViewDataSource sectionTitle]
  -[GKBasicCollectionViewDataSource pageSize]
  -[GKBasicCollectionViewDataSource setPageSize:]
  -[GKBasicCollectionViewDataSource removeItemsAtIndexes:]
  -[GKBasicCollectionViewDataSource countOfItems]
  -[GKBasicCollectionViewDataSource _gkDescriptionWithChildren:]
  -[GKBasicCollectionViewDataSource configureCollectionView:]
  -[GKBasicCollectionViewDataSource collectionViewDidBecomeInactive:]
  -[GKBasicCollectionViewDataSource indexPathsForItem:]
  -[GKBasicCollectionViewDataSource removeItemAtIndexPath:completionHandler:]
  -[GKBasicCollectionViewDataSource setShowAllAction:]
  -[GKBasicCollectionViewDataSource showAllAction]
  -[GKBasicCollectionViewDataSource setItemsNoNotify:]
  -[GKBasicCollectionViewDataSource setItems:animated:complete:]
  -[GKBasicCollectionViewDataSource itemsAtIndexes:]
  -[GKBasicCollectionViewDataSource insertItems:atIndexes:]
  -[GKBasicCollectionViewDataSource replaceItemsAtIndexes:withItems:]
  -[GKBasicCollectionViewDataSource preloadImagesForItems:startingAtIndex:loadBlock:]
  -[GKBasicCollectionViewDataSource preloadedRange]
  -[GKBasicCollectionViewDataSource setPreloadedRange:]


GKDefaultNicknameViewController : UIViewController <GKAvatarContainerViewDelegate, CNPhotoPickerViewControllerDelegate, GKNicknameControllerDelegate>
 @property  GKAvatarContainerView *editAvatarView
 @property  UIView *avatarContainer
 @property  UIVisualEffectView *visualEffectView
 @property  UIStackView *mainStackView
 @property  UITextField *nickname
 @property  UIView *buttonContainer
 @property  UIImageView *bubbleImageView
 @property  OBBoldTrayButton *continueButton
 @property  NSLayoutConstraint *mainStackViewTrailingConstraint
 @property  NSLayoutConstraint *mainStackViewLeadingConstraint
 @property  NSLayoutConstraint *continueButtonEqualMainStackViewWidthConstraint
 @property  NSLayoutConstraint *continueButtonWidthConstraint
 @property  NSLayoutConstraint *continueButtonBottomConstraint
 @property  NSLayoutConstraint *topMargin
 @property  UIStackView *middleStackView
 @property  UILabel *message
 @property  UIActivityIndicatorView *activityIndicator
 @property  UILabel *mainTitle
 @property  NSLayoutConstraint *avatarContainerLandscapeHeight
 @property  GKReachability *reachability
 @property  BOOL isAvatarEditingSupported
 @property  GKNicknameController *nicknameController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKDefaultNicknameViewController buttonContainer]
  -[GKDefaultNicknameViewController activityIndicator]
  -[GKDefaultNicknameViewController reachability]
  -[GKDefaultNicknameViewController setMessage:]
  -[GKDefaultNicknameViewController viewSafeAreaInsetsDidChange]
  -[GKDefaultNicknameViewController visualEffectView]
  -[GKDefaultNicknameViewController scrollViewDidScroll:]
  -[GKDefaultNicknameViewController setReachability:]
  -[GKDefaultNicknameViewController viewWillLayoutSubviews]
  -[GKDefaultNicknameViewController viewDidAppear:]
  -[GKDefaultNicknameViewController dealloc]
  -[GKDefaultNicknameViewController nickname]
  -[GKDefaultNicknameViewController .cxx_destruct]
  -[GKDefaultNicknameViewController viewDidLoad]
  -[GKDefaultNicknameViewController viewWillAppear:]
  -[GKDefaultNicknameViewController viewDidLayoutSubviews]
  -[GKDefaultNicknameViewController setActivityIndicator:]
  -[GKDefaultNicknameViewController setButtonContainer:]
  -[GKDefaultNicknameViewController keyboardWillShow:]
  -[GKDefaultNicknameViewController keyboardWillHide:]
  -[GKDefaultNicknameViewController viewDidDisappear:]
  -[GKDefaultNicknameViewController viewWillDisappear:]
  -[GKDefaultNicknameViewController setNickname:]
  -[GKDefaultNicknameViewController traitCollectionDidChange:]
  -[GKDefaultNicknameViewController message]
  -[GKDefaultNicknameViewController setVisualEffectView:]
  -[GKDefaultNicknameViewController reachabilityDidChange:]
  -[GKDefaultNicknameViewController topMargin]
  -[GKDefaultNicknameViewController continueButton]
  -[GKDefaultNicknameViewController setContinueButton:]
  -[GKDefaultNicknameViewController photoPickerDidCancel:]
  -[GKDefaultNicknameViewController photoPicker:didUpdatePhotoForContact:withContactImage:]
  -[GKDefaultNicknameViewController setTopMargin:]
  -[GKDefaultNicknameViewController nicknameController]
  -[GKDefaultNicknameViewController mainTitle]
  -[GKDefaultNicknameViewController setMainTitle:]
  -[GKDefaultNicknameViewController cancelPressed:]
  -[GKDefaultNicknameViewController setupNavigationBar]
  -[GKDefaultNicknameViewController updateUIBasedOnTraitCollection]
  -[GKDefaultNicknameViewController bubbleImageView]
  -[GKDefaultNicknameViewController setBubbleImageView:]
  -[GKDefaultNicknameViewController nicknameUpdateRequestCompletedWithStatus:error:]
  -[GKDefaultNicknameViewController nicknameShouldBeginEditing]
  -[GKDefaultNicknameViewController nicknameTextDidChangeWithMessage:]
  -[GKDefaultNicknameViewController nicknameDidBecomeFirstResponder]
  -[GKDefaultNicknameViewController nicknameDidResignFirstResponder]
  -[GKDefaultNicknameViewController nicknameUpdateAvatarImage:]
  -[GKDefaultNicknameViewController mainStackViewTrailingConstraint]
  -[GKDefaultNicknameViewController setMainStackViewTrailingConstraint:]
  -[GKDefaultNicknameViewController mainStackViewLeadingConstraint]
  -[GKDefaultNicknameViewController setMainStackViewLeadingConstraint:]
  -[GKDefaultNicknameViewController continueButtonWidthConstraint]
  -[GKDefaultNicknameViewController setContinueButtonWidthConstraint:]
  -[GKDefaultNicknameViewController continueButtonBottomConstraint]
  -[GKDefaultNicknameViewController setContinueButtonBottomConstraint:]
  -[GKDefaultNicknameViewController continuePressed:]
  -[GKDefaultNicknameViewController avatarView:didSelectImageWithEditingEnabled:]
  -[GKDefaultNicknameViewController updateLeftBarButtonWithTitle:]
  -[GKDefaultNicknameViewController isAvatarEditingSupported]
  -[GKDefaultNicknameViewController enableOrDisableNicknameEditing]
  -[GKDefaultNicknameViewController fadeNonEssentialViews:]
  -[GKDefaultNicknameViewController getTopMargin]
  -[GKDefaultNicknameViewController animateNicknameTextFieldIntoView:]
  -[GKDefaultNicknameViewController addEditAvatarContainerView]
  -[GKDefaultNicknameViewController presentAvatarPicker]
  -[GKDefaultNicknameViewController presentDeleteAvatarImageAlert]
  -[GKDefaultNicknameViewController refreshAvatarImage]
  -[GKDefaultNicknameViewController editAvatarView]
  -[GKDefaultNicknameViewController setEditAvatarView:]
  -[GKDefaultNicknameViewController avatarContainer]
  -[GKDefaultNicknameViewController setAvatarContainer:]
  -[GKDefaultNicknameViewController mainStackView]
  -[GKDefaultNicknameViewController setMainStackView:]
  -[GKDefaultNicknameViewController continueButtonEqualMainStackViewWidthConstraint]
  -[GKDefaultNicknameViewController setContinueButtonEqualMainStackViewWidthConstraint:]
  -[GKDefaultNicknameViewController middleStackView]
  -[GKDefaultNicknameViewController setMiddleStackView:]
  -[GKDefaultNicknameViewController avatarContainerLandscapeHeight]
  -[GKDefaultNicknameViewController setAvatarContainerLandscapeHeight:]
  -[GKDefaultNicknameViewController setNicknameController:]


GKMultiplayerP2PViewController : GKMultiplayerViewController
 @property  long long mode
 @property  GKInvite *acceptedInvite
 @property  double inviteeConnectionTimeStamp
 @property  BOOL userCancelledMatching
 @property  BOOL datasourceConfigured
 @property  BOOL hosted
 @property  <GKMultiplayerP2PViewControllerDelegate> *delegate

  // instance methods
  -[GKMultiplayerP2PViewController applicationWillEnterForeground]
  -[GKMultiplayerP2PViewController finishWithError:]
  -[GKMultiplayerP2PViewController isInSetupMode]
  -[GKMultiplayerP2PViewController setDelegate:]
  -[GKMultiplayerP2PViewController delegate]
  -[GKMultiplayerP2PViewController viewDidAppear:]
  -[GKMultiplayerP2PViewController dealloc]
  -[GKMultiplayerP2PViewController mode]
  -[GKMultiplayerP2PViewController .cxx_destruct]
  -[GKMultiplayerP2PViewController viewDidLoad]
  -[GKMultiplayerP2PViewController setMode:]
  -[GKMultiplayerP2PViewController isHosted]
  -[GKMultiplayerP2PViewController updateMode]
  -[GKMultiplayerP2PViewController cancel]
  -[GKMultiplayerP2PViewController configureDataSource]
  -[GKMultiplayerP2PViewController updateFooterButtonStates]
  -[GKMultiplayerP2PViewController initWithAcceptedInvite:]
  -[GKMultiplayerP2PViewController shouldChangeModeFromOldMode:toNewMode:]
  -[GKMultiplayerP2PViewController updateForNewMode]
  -[GKMultiplayerP2PViewController didUpdateAutoMatchPlayerCount]
  -[GKMultiplayerP2PViewController automatchParticipantStatus]
  -[GKMultiplayerP2PViewController isCanceling]
  -[GKMultiplayerP2PViewController updateStartGameButtonTitle]
  -[GKMultiplayerP2PViewController haveInvitedPlayers]
  -[GKMultiplayerP2PViewController havePendingPlayers]
  -[GKMultiplayerP2PViewController setExistingPlayers:]
  -[GKMultiplayerP2PViewController incrementOneAutoMatchPlayerCountIfPossible]
  -[GKMultiplayerP2PViewController setAutomatchPlayerCount:]
  -[GKMultiplayerP2PViewController groupActivityJoiningPlayer:devicePushToken:]
  -[GKMultiplayerP2PViewController sendInvitesToSharePlayPlayer:devicePushToken:]
  -[GKMultiplayerP2PViewController setPlayer:responded:]
  -[GKMultiplayerP2PViewController setConnectingStateForPlayer:]
  -[GKMultiplayerP2PViewController setPlayer:connected:]
  -[GKMultiplayerP2PViewController setPlayer:sentData:]
  -[GKMultiplayerP2PViewController setInvitesFailedWithError:]
  -[GKMultiplayerP2PViewController setAutomatchFailedWithError:]
  -[GKMultiplayerP2PViewController setFailedWithError:]
  -[GKMultiplayerP2PViewController inviterCancelled]
  -[GKMultiplayerP2PViewController canStartForcedAutomatch]
  -[GKMultiplayerP2PViewController playNow]
  -[GKMultiplayerP2PViewController startGameButtonPressed]
  -[GKMultiplayerP2PViewController displayCancelConfirmationDialog]
  -[GKMultiplayerP2PViewController startGame]
  -[GKMultiplayerP2PViewController willPresentPlayerPicker:]
  -[GKMultiplayerP2PViewController loadShareURLWithCompletion:]
  -[GKMultiplayerP2PViewController sendInvitesToContactPlayers:legacyPlayers:]
  -[GKMultiplayerP2PViewController setShareInvitees]
  -[GKMultiplayerP2PViewController invitePlayers:]
  -[GKMultiplayerP2PViewController cancelPendingInvites]
  -[GKMultiplayerP2PViewController resetInviteesStatus]
  -[GKMultiplayerP2PViewController performActionsForButtonCancelCurrentMatching]
  -[GKMultiplayerP2PViewController removedPlayer:]
  -[GKMultiplayerP2PViewController playerConnected:]
  -[GKMultiplayerP2PViewController playerDisconnected:]
  -[GKMultiplayerP2PViewController sendStatusUpdate]
  -[GKMultiplayerP2PViewController processStatusUpdateMessageFromPlayer:bytes:withLength:]
  -[GKMultiplayerP2PViewController showParentalControlsRestrictionAlert]
  -[GKMultiplayerP2PViewController showInviterDisconnectedAlert]
  -[GKMultiplayerP2PViewController showAutomatchingErrorAlert]
  -[GKMultiplayerP2PViewController showNoInternetAlert]
  -[GKMultiplayerP2PViewController showMatchDisconnectedAlertForPlayer:]
  -[GKMultiplayerP2PViewController cancelAlertWithoutDelegateCallback]
  -[GKMultiplayerP2PViewController setHosted:]
  -[GKMultiplayerP2PViewController acceptedInvite]
  -[GKMultiplayerP2PViewController setAcceptedInvite:]
  -[GKMultiplayerP2PViewController inviteeConnectionTimeStamp]
  -[GKMultiplayerP2PViewController setInviteeConnectionTimeStamp:]
  -[GKMultiplayerP2PViewController userCancelledMatching]
  -[GKMultiplayerP2PViewController setUserCancelledMatching:]
  -[GKMultiplayerP2PViewController datasourceConfigured]
  -[GKMultiplayerP2PViewController setDatasourceConfigured:]


GKChallengeComposeController : GKSimpleComposeController
 @property  GKComposeHeaderField *challengeField
 @property  GKChallenge *challenge
 @property  NSArray *playersToLoad

  // class methods
  +[GKChallengeComposeController composeAndSendFlowForChallenge:selectPlayers:defaultMessage:forcePicker:readyHandler:completionHandler:]
  +[GKChallengeComposeController composeFlowForChallenge:players:defaultMessage:completionHandler:]
  +[GKChallengeComposeController friendPickerFlowForChallenge:selectPlayers:defaultMessage:completionHandler:]

  // instance methods
  -[GKChallengeComposeController setChallenge:]
  -[GKChallengeComposeController challenge]
  -[GKChallengeComposeController .cxx_destruct]
  -[GKChallengeComposeController viewDidLoad]
  -[GKChallengeComposeController viewWillAppear:]
  -[GKChallengeComposeController loadView]
  -[GKChallengeComposeController cancel]
  -[GKChallengeComposeController init]
  -[GKChallengeComposeController donePressed]
  -[GKChallengeComposeController initWithChallenge:defaultMessage:players:]
  -[GKChallengeComposeController updateChallengeText]
  -[GKChallengeComposeController challengeField]
  -[GKChallengeComposeController setChallengeField:]
  -[GKChallengeComposeController playersToLoad]
  -[GKChallengeComposeController setPlayersToLoad:]


GKComposeHeaderFieldBackgroundView : UIImageView
 @property  unsigned int location

  // instance methods
  -[GKComposeHeaderFieldBackgroundView setLocation:]
  -[GKComposeHeaderFieldBackgroundView layoutSubviews]
  -[GKComposeHeaderFieldBackgroundView location]
  -[GKComposeHeaderFieldBackgroundView init]
  -[GKComposeHeaderFieldBackgroundView resetBackgroundImage]


GKChallengeIssueHostViewController : GKExtensionRemoteViewController <GKChallengeIssueHostProtocol>
 @property  GKHostedChallengeIssueController *delegate
 @property  GKGame *game
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[GKChallengeIssueHostViewController challengeExtension]

  // instance methods
  -[GKChallengeIssueHostViewController setDelegate:]
  -[GKChallengeIssueHostViewController delegate]
  -[GKChallengeIssueHostViewController .cxx_destruct]
  -[GKChallengeIssueHostViewController messageFromExtension:]
  -[GKChallengeIssueHostViewController extensionIsCanceling]
  -[GKChallengeIssueHostViewController extensionObjectProxy]


GKChallengeIssueExtensionHostContext : GKExtensionHostContext <GKChallengeIssueHostProtocol>
 @property  GKGame *game
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[GKChallengeIssueExtensionHostContext _extensionAuxiliaryHostProtocol]
  +[GKChallengeIssueExtensionHostContext _extensionAuxiliaryVendorProtocol]


GKMultiplayerViewController : GKCollectionViewController <GKDashboardMultiplayerPickerDelegate, GKMultiplayerDataSourceDelegate, UIAdaptivePresentationControllerDelegate>
 @property  _TtC12GameCenterUI29GKMultiplayerButtonHeaderView *buttonHeaderView
 @property  GKDashboardMultiplayerPickerViewController *playerPickerViewController
 @property  long long invitationType
 @property  unsigned long messagesInviteStatus
 @property  GKMatchRequest *matchRequest
 @property  GKMatchRequest *originalMatchRequest
 @property  NSString *defaultInvitationMessage
 @property  BOOL showCancelButton
 @property  GKGame *game
 @property  BOOL didAcceptGameInvite
 @property  <GKDashboardNearbyBrowserDelegate> *nearbyDelegate
 @property  NSURL *shareURL
 @property  BOOL didStartForcedAutomatch
 @property  long long matchmakingMode
 @property  _TtC12GameCenterUI23GKMultiplayerFooterView *footerView
 @property  BOOL canStartWithMinimumPlayers
 @property  GKMultiplayerDataSource *multiplayerDataSource
 @property  BOOL addButtonEnabled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKMultiplayerViewController presentationControllerDidDismiss:]
  -[GKMultiplayerViewController viewSafeAreaInsetsDidChange]
  -[GKMultiplayerViewController isInSetupMode]
  -[GKMultiplayerViewController setFooterView:]
  -[GKMultiplayerViewController scrollViewDidScroll:]
  -[GKMultiplayerViewController footerView]
  -[GKMultiplayerViewController viewDidAppear:]
  -[GKMultiplayerViewController isLoading]
  -[GKMultiplayerViewController dealloc]
  -[GKMultiplayerViewController updateCollectionViewContentInset]
  -[GKMultiplayerViewController removePlayer:]
  -[GKMultiplayerViewController .cxx_destruct]
  -[GKMultiplayerViewController viewDidLoad]
  -[GKMultiplayerViewController viewWillAppear:]
  -[GKMultiplayerViewController viewDidLayoutSubviews]
  -[GKMultiplayerViewController layoutSubviews]
  -[GKMultiplayerViewController cancelButtonPressed]
  -[GKMultiplayerViewController preferredFocusEnvironments]
  -[GKMultiplayerViewController collectionView:didSelectItemAtIndexPath:]
  -[GKMultiplayerViewController shareURL]
  -[GKMultiplayerViewController traitCollectionDidChange:]
  -[GKMultiplayerViewController cancel]
  -[GKMultiplayerViewController init]
  -[GKMultiplayerViewController configureDataSource]
  -[GKMultiplayerViewController setShareURL:]
  -[GKMultiplayerViewController setShowCancelButton:]
  -[GKMultiplayerViewController showCancelButton]
  -[GKMultiplayerViewController game]
  -[GKMultiplayerViewController setGame:]
  -[GKMultiplayerViewController dataSource:didRefreshSections:]
  -[GKMultiplayerViewController didEnterLoadedState]
  -[GKMultiplayerViewController multiplayerPicker:didPickPlayers:messageGroups:customMessage:]
  -[GKMultiplayerViewController multiplayerPickerDidCancel:]
  -[GKMultiplayerViewController setNearbyDelegate:]
  -[GKMultiplayerViewController nearbyDelegate]
  -[GKMultiplayerViewController initWithMatchRequest:]
  -[GKMultiplayerViewController matchRequest]
  -[GKMultiplayerViewController matchmakingMode]
  -[GKMultiplayerViewController setMatchmakingMode:]
  -[GKMultiplayerViewController updateFooterButtonStates]
  -[GKMultiplayerViewController didUpdateAutoMatchPlayerCount]
  -[GKMultiplayerViewController automatchParticipantStatus]
  -[GKMultiplayerViewController isCanceling]
  -[GKMultiplayerViewController updateStartGameButtonTitle]
  -[GKMultiplayerViewController setInvitesFailedWithError:]
  -[GKMultiplayerViewController canStartForcedAutomatch]
  -[GKMultiplayerViewController playNow]
  -[GKMultiplayerViewController startGameButtonPressed]
  -[GKMultiplayerViewController willPresentPlayerPicker:]
  -[GKMultiplayerViewController loadShareURLWithCompletion:]
  -[GKMultiplayerViewController sendInvitesToContactPlayers:legacyPlayers:]
  -[GKMultiplayerViewController setShareInvitees]
  -[GKMultiplayerViewController invitePlayers:]
  -[GKMultiplayerViewController performActionsForButtonCancelCurrentMatching]
  -[GKMultiplayerViewController removedPlayer:]
  -[GKMultiplayerViewController localPlayerAcceptedGameInvite:]
  -[GKMultiplayerViewController playersToInvite:]
  -[GKMultiplayerViewController didUpdateParticipants]
  -[GKMultiplayerViewController multiplayerCellLayoutMode]
  -[GKMultiplayerViewController didTapInviteOnCell:]
  -[GKMultiplayerViewController didTapRemoveParticipant:]
  -[GKMultiplayerViewController allowAutoMatch]
  -[GKMultiplayerViewController multiplayerDataSource]
  -[GKMultiplayerViewController sendInvitesToPlayersInOriginalMatchRequest]
  -[GKMultiplayerViewController refreshHeaderAndFooterMaterials]
  -[GKMultiplayerViewController updateHeaderFooterLayoutMargins]
  -[GKMultiplayerViewController collectionViewContentInset]
  -[GKMultiplayerViewController setupCancelButton]
  -[GKMultiplayerViewController addAutomatchPlayer]
  -[GKMultiplayerViewController removeAutomatchPlayer]
  -[GKMultiplayerViewController maxAvailablePlayers]
  -[GKMultiplayerViewController presentPlayerPicker]
  -[GKMultiplayerViewController preparePlayerPicker]
  -[GKMultiplayerViewController didPickPlayers:messageGroups:customMessage:withCompletionHandler:]
  -[GKMultiplayerViewController dismissPickerViewController]
  -[GKMultiplayerViewController allowPlayerCountSelection]
  -[GKMultiplayerViewController setInvitationType:]
  -[GKMultiplayerViewController updateDataSourceInvitationEnabled]
  -[GKMultiplayerViewController determineInvitationType]
  -[GKMultiplayerViewController inviteFriendsButtonPressed]
  -[GKMultiplayerViewController sendInvites]
  -[GKMultiplayerViewController performActionsForButtonStartGame]
  -[GKMultiplayerViewController inviteContactPlayers:withCompletionHandler:]
  -[GKMultiplayerViewController handleServiceUnavailable:]
  -[GKMultiplayerViewController didInviteContactPlayers]
  -[GKMultiplayerViewController didClickCancelForServiceUnavailableAlert]
  -[GKMultiplayerViewController handleNewParticipantCount:]
  -[GKMultiplayerViewController viewControllerLayout]
  -[GKMultiplayerViewController configureAutoBounce]
  -[GKMultiplayerViewController makeButtonHeaderView]
  -[GKMultiplayerViewController setViewNeedsLayout]
  -[GKMultiplayerViewController originalMatchRequest]
  -[GKMultiplayerViewController defaultInvitationMessage]
  -[GKMultiplayerViewController setDefaultInvitationMessage:]
  -[GKMultiplayerViewController didAcceptGameInvite]
  -[GKMultiplayerViewController setDidAcceptGameInvite:]
  -[GKMultiplayerViewController didStartForcedAutomatch]
  -[GKMultiplayerViewController setDidStartForcedAutomatch:]
  -[GKMultiplayerViewController canStartWithMinimumPlayers]
  -[GKMultiplayerViewController setCanStartWithMinimumPlayers:]
  -[GKMultiplayerViewController addButtonEnabled]
  -[GKMultiplayerViewController setAddButtonEnabled:]
  -[GKMultiplayerViewController buttonHeaderView]
  -[GKMultiplayerViewController setButtonHeaderView:]
  -[GKMultiplayerViewController playerPickerViewController]
  -[GKMultiplayerViewController setPlayerPickerViewController:]
  -[GKMultiplayerViewController invitationType]
  -[GKMultiplayerViewController messagesInviteStatus]
  -[GKMultiplayerViewController setMessagesInviteStatus:]


GKBadgedGameIconBrush : GKThemeBrush
 @property  GKThemeBrush *badgeBrush

  // instance methods
  -[GKBadgedGameIconBrush .cxx_destruct]
  -[GKBadgedGameIconBrush copyWithZone:]
  -[GKBadgedGameIconBrush init]
  -[GKBadgedGameIconBrush sizeForInput:]
  -[GKBadgedGameIconBrush scaleForInput:]
  -[GKBadgedGameIconBrush drawInRect:withContext:input:]
  -[GKBadgedGameIconBrush badgeBrush]
  -[GKBadgedGameIconBrush setBadgeBrush:]


GKLeaderboardListDataSource : GKLeaderboardCollectionDataSource
 @property  GKLeaderboardSet *leaderboardSet
 @property  NSMutableArray *leaderboards
 @property  NSTimer *timer
 @property  UICollectionView *collectionView
 @property  NSDictionary *assetNames

  // instance methods
  -[GKLeaderboardListDataSource setCollectionView:]
  -[GKLeaderboardListDataSource itemCount]
  -[GKLeaderboardListDataSource dealloc]
  -[GKLeaderboardListDataSource .cxx_destruct]
  -[GKLeaderboardListDataSource setTimer:]
  -[GKLeaderboardListDataSource collectionView]
  -[GKLeaderboardListDataSource timer]
  -[GKLeaderboardListDataSource title]
  -[GKLeaderboardListDataSource setupTimer]
  -[GKLeaderboardListDataSource loadDataWithCompletionHandler:]
  -[GKLeaderboardListDataSource setupCollectionView:]
  -[GKLeaderboardListDataSource itemForIndexPath:]
  -[GKLeaderboardListDataSource setLeaderboardSet:]
  -[GKLeaderboardListDataSource leaderboardSet]
  -[GKLeaderboardListDataSource standardCellSizeForCollectionView:]
  -[GKLeaderboardListDataSource prepareCell:forItemAtIndexPath:]
  -[GKLeaderboardListDataSource handleSelectionInCollectionView:forItemAtIndexPath:]
  -[GKLeaderboardListDataSource initWithGameRecord:leaderboardSet:]
  -[GKLeaderboardListDataSource removeLeaderboardsWithoutImages]
  -[GKLeaderboardListDataSource assetNames]
  -[GKLeaderboardListDataSource setAssetNames:]
  -[GKLeaderboardListDataSource leaderboards]
  -[GKLeaderboardListDataSource setLeaderboards:]
  -[GKLeaderboardListDataSource updateHighlightsInSectionHeader:]


GKExtensionManager : NSObject <GKExtensionHostViewControllerDelegate>
 @property  GKExtensionHostViewController *extensionHostViewController
 @property  long long extensionLoadState
 @property  NSObject<OS_dispatch_queue> *stateQueue
 @property  NSString *extensionIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKExtensionManager .cxx_destruct]
  -[GKExtensionManager setExtensionIdentifier:]
  -[GKExtensionManager extensionIdentifier]
  -[GKExtensionManager setStateQueue:]
  -[GKExtensionManager stateQueue]
  -[GKExtensionManager extensionDidTerminateWithError:]
  -[GKExtensionManager initWithExtensionBundleIdentifer:host:]
  -[GKExtensionManager instantiateViewControllerWithHost:handler:]
  -[GKExtensionManager tournamentExtensionViewController]
  -[GKExtensionManager extensionLoadState]
  -[GKExtensionManager setExtensionLoadState:]
  -[GKExtensionManager needToLoadExtension]
  -[GKExtensionManager extensionHostViewController]
  -[GKExtensionManager setExtensionHostViewController:]


GKDashboardTurnDataSource : GKCollectionDataSource
 @property  NSArray *matches
 @property  BOOL shouldShowPlay
 @property  BOOL shouldShowQuit

  // instance methods
  -[GKDashboardTurnDataSource collectionView:cellForItemAtIndexPath:]
  -[GKDashboardTurnDataSource numberOfSectionsInCollectionView:]
  -[GKDashboardTurnDataSource itemCount]
  -[GKDashboardTurnDataSource collectionView:layout:sizeForItemAtIndexPath:]
  -[GKDashboardTurnDataSource .cxx_destruct]
  -[GKDashboardTurnDataSource setMatches:]
  -[GKDashboardTurnDataSource matches]
  -[GKDashboardTurnDataSource collectionView:didSelectItemAtIndexPath:]
  -[GKDashboardTurnDataSource loadDataWithCompletionHandler:]
  -[GKDashboardTurnDataSource init]
  -[GKDashboardTurnDataSource preferredCollectionHeight]
  -[GKDashboardTurnDataSource setupCollectionView:]
  -[GKDashboardTurnDataSource itemForIndexPath:]
  -[GKDashboardTurnDataSource sectionHeaderText]
  -[GKDashboardTurnDataSource shouldShowPlay]
  -[GKDashboardTurnDataSource setShouldShowPlay:]
  -[GKDashboardTurnDataSource shouldShowQuit]
  -[GKDashboardTurnDataSource setShouldShowQuit:]


GKLeaderboardCollectionDataSource : GKGameLayerCollectionDataSource
  // instance methods
  -[GKLeaderboardCollectionDataSource collectionView:cellForItemAtIndexPath:]
  -[GKLeaderboardCollectionDataSource collectionView:viewForSupplementaryElementOfKind:atIndexPath:]
  -[GKLeaderboardCollectionDataSource collectionView:layout:insetForSectionAtIndex:]
  -[GKLeaderboardCollectionDataSource collectionView:layout:referenceSizeForHeaderInSection:]
  -[GKLeaderboardCollectionDataSource topMargin]
  -[GKLeaderboardCollectionDataSource cellSpacing]
  -[GKLeaderboardCollectionDataSource headerSpacing]
  -[GKLeaderboardCollectionDataSource preferredCollectionHeight]
  -[GKLeaderboardCollectionDataSource setupCollectionView:]
  -[GKLeaderboardCollectionDataSource updateHighlightsInSectionHeader:]
  -[GKLeaderboardCollectionDataSource allowedColumnCount:]
  -[GKLeaderboardCollectionDataSource collectionView:updateLayoutForSectionHeader:]


GKSectionInfo : NSObject
 @property  long long section
 @property  NSPredicate *predicate
 @property  NSArray *sortDescriptors
 @property  NSArray *items
 @property  NSString *title

  // instance methods
  -[GKSectionInfo setPredicate:]
  -[GKSectionInfo setSortDescriptors:]
  -[GKSectionInfo section]
  -[GKSectionInfo setItems:]
  -[GKSectionInfo setSection:]
  -[GKSectionInfo sortDescriptors]
  -[GKSectionInfo predicate]
  -[GKSectionInfo .cxx_destruct]
  -[GKSectionInfo items]
  -[GKSectionInfo title]
  -[GKSectionInfo setTitle:]


GKSplittingDataSource : GKCollectionViewDataSource
 @property  NSMutableDictionary *sectionToSectionInfo
 @property  GKBasicCollectionViewDataSource *underlyingDataSource
 @property  long long sectionCount

  // instance methods
  -[GKSplittingDataSource sectionCount]
  -[GKSplittingDataSource removeSection:]
  -[GKSplittingDataSource numberOfSectionsInCollectionView:]
  -[GKSplittingDataSource .cxx_destruct]
  -[GKSplittingDataSource itemAtIndexPath:]
  -[GKSplittingDataSource collectionView:numberOfItemsInSection:]
  -[GKSplittingDataSource init]
  -[GKSplittingDataSource titleForSection:]
  -[GKSplittingDataSource configureDataSource]
  -[GKSplittingDataSource removeAllSections]
  -[GKSplittingDataSource underlyingDataSource]
  -[GKSplittingDataSource _gkDescriptionWithChildren:]
  -[GKSplittingDataSource collectionViewDidBecomeInactive:]
  -[GKSplittingDataSource refreshContentsForDataType:userInfo:updateNotifier:]
  -[GKSplittingDataSource indexPathsForItem:]
  -[GKSplittingDataSource removeItemAtIndexPath:completionHandler:]
  -[GKSplittingDataSource setUnderlyingDataSource:]
  -[GKSplittingDataSource sectionInfoForSection:]
  -[GKSplittingDataSource addSectionWithTitle:sortDescriptors:]
  -[GKSplittingDataSource setFilterPredicate:forSection:]
  -[GKSplittingDataSource setSortDescriptors:forSection:]
  -[GKSplittingDataSource itemsForSection:]
  -[GKSplittingDataSource filteredItemsForRawItems:]
  -[GKSplittingDataSource willUpdateSectionsWithItems:]
  -[GKSplittingDataSource setItems:forSection:]
  -[GKSplittingDataSource refreshAdditionalInfoForDataType:updateNotifier:]
  -[GKSplittingDataSource sectionToSectionInfo]
  -[GKSplittingDataSource setSectionToSectionInfo:]


GKMultiplayerDataSource : GKBasicCollectionViewDataSource <UICollectionViewDelegateFlowLayout>
 @property  NSMutableDictionary *playerStatus
 @property  NSMutableOrderedSet *players
 @property  NSMutableOrderedSet *orderedPlayerIDList
 @property  long long automatchPlayersAddedByUser
 @property  <GKMultiplayerDataSourceDelegate> *delegate
 @property  long long minPlayers
 @property  long long maxPlayers
 @property  long long automatchPlayerCount
 @property  long long implicitAutomatchPlayerCount
 @property  BOOL automatchAddedToMinInHeader
 @property  BOOL removingEnabled
 @property  BOOL invitingEnabled
 @property  BOOL autoMatching
 @property  BOOL canCancelCurrentMatchmaking
 @property  BOOL haveNonGuestPlayers
 @property  NSArray *participants
 @property  NSSet *selectedMessageGroups
 @property  GKGame *game
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKMultiplayerDataSource participants]
  -[GKMultiplayerDataSource collectionView:cellForItemAtIndexPath:]
  -[GKMultiplayerDataSource setDelegate:]
  -[GKMultiplayerDataSource delegate]
  -[GKMultiplayerDataSource .cxx_destruct]
  -[GKMultiplayerDataSource collectionView:numberOfItemsInSection:]
  -[GKMultiplayerDataSource init]
  -[GKMultiplayerDataSource didChangeMode]
  -[GKMultiplayerDataSource players]
  -[GKMultiplayerDataSource game]
  -[GKMultiplayerDataSource setGame:]
  -[GKMultiplayerDataSource playerStatus]
  -[GKMultiplayerDataSource configureCollectionView:]
  -[GKMultiplayerDataSource refreshContentsForDataType:userInfo:updateNotifier:]
  -[GKMultiplayerDataSource currentPlayers]
  -[GKMultiplayerDataSource setPlayers:]
  -[GKMultiplayerDataSource havePendingPlayers]
  -[GKMultiplayerDataSource setAutomatchPlayerCount:]
  -[GKMultiplayerDataSource maxAvailablePlayers]
  -[GKMultiplayerDataSource currentPlayersNotInvitedViaMessages]
  -[GKMultiplayerDataSource currentRemotePlayers]
  -[GKMultiplayerDataSource guestPlayers]
  -[GKMultiplayerDataSource playersWithStatus:]
  -[GKMultiplayerDataSource readyPlayers]
  -[GKMultiplayerDataSource playersToBeInvited]
  -[GKMultiplayerDataSource playersInvited]
  -[GKMultiplayerDataSource playerRange]
  -[GKMultiplayerDataSource participantForPlayer:]
  -[GKMultiplayerDataSource participantForAutoMatchNumber:]
  -[GKMultiplayerDataSource firstInvitedContactPlayer]
  -[GKMultiplayerDataSource statusForPlayer:]
  -[GKMultiplayerDataSource participantShouldBeRemovable:atIndexPath:]
  -[GKMultiplayerDataSource collectionViewDebugDescription]
  -[GKMultiplayerDataSource currentPlayersDebugDescription]
  -[GKMultiplayerDataSource playersDebugDescription:newStatus:]
  -[GKMultiplayerDataSource addPlayers:withStatus:complete:]
  -[GKMultiplayerDataSource addPlayers:withStatus:replaceAutomatches:complete:]
  -[GKMultiplayerDataSource updateDataStructuresForRemovedPlayer:]
  -[GKMultiplayerDataSource removePlayers:complete:]
  -[GKMultiplayerDataSource shouldRevertStatus:]
  -[GKMultiplayerDataSource shouldUpdateStatus:withNewStatus:]
  -[GKMultiplayerDataSource setStatus:forPlayers:uuid:]
  -[GKMultiplayerDataSource setStatus:forPlayers:complete:]
  -[GKMultiplayerDataSource setParticipantsWithPlayers:automatchPlayerCount:andStatuses:complete:]
  -[GKMultiplayerDataSource revertFailedPlayers]
  -[GKMultiplayerDataSource failedToInvitePlayers]
  -[GKMultiplayerDataSource canCancelCurrentMatchmaking]
  -[GKMultiplayerDataSource haveNonGuestPlayers]
  -[GKMultiplayerDataSource setAutomatchPlayerCount:complete:]
  -[GKMultiplayerDataSource refreshStatusForParticipant:]
  -[GKMultiplayerDataSource refreshParticipantsStatuses]
  -[GKMultiplayerDataSource updateParticipants]
  -[GKMultiplayerDataSource replaceContactPlayers:withNormalPlayers:complete:]
  -[GKMultiplayerDataSource restoreOrderOfPlayers]
  -[GKMultiplayerDataSource reportMultiplayerSelection:]
  -[GKMultiplayerDataSource minPlayers]
  -[GKMultiplayerDataSource setMinPlayers:]
  -[GKMultiplayerDataSource maxPlayers]
  -[GKMultiplayerDataSource setMaxPlayers:]
  -[GKMultiplayerDataSource automatchPlayerCount]
  -[GKMultiplayerDataSource implicitAutomatchPlayerCount]
  -[GKMultiplayerDataSource setImplicitAutomatchPlayerCount:]
  -[GKMultiplayerDataSource automatchAddedToMinInHeader]
  -[GKMultiplayerDataSource setAutomatchAddedToMinInHeader:]
  -[GKMultiplayerDataSource removingEnabled]
  -[GKMultiplayerDataSource setRemovingEnabled:]
  -[GKMultiplayerDataSource invitingEnabled]
  -[GKMultiplayerDataSource setInvitingEnabled:]
  -[GKMultiplayerDataSource autoMatching]
  -[GKMultiplayerDataSource selectedMessageGroups]
  -[GKMultiplayerDataSource setSelectedMessageGroups:]
  -[GKMultiplayerDataSource setPlayerStatus:]
  -[GKMultiplayerDataSource orderedPlayerIDList]
  -[GKMultiplayerDataSource setOrderedPlayerIDList:]
  -[GKMultiplayerDataSource automatchPlayersAddedByUser]
  -[GKMultiplayerDataSource setAutomatchPlayersAddedByUser:]


GKButtonWithContentSizeCorrected2 : GKButton
  // instance methods
  -[GKButtonWithContentSizeCorrected2 intrinsicContentSize]


GKSignInInputView : UIView
 @property  NSLayoutConstraint *topToSignInBaselineConstraint
 @property  NSLayoutConstraint *bottomToSignInBaselineConstraint
 @property  NSLayoutConstraint *signInBaselineToPromptTextTopConstraint
 @property  NSLayoutConstraint *inputViewHeightConstraint
 @property  NSLayoutConstraint *promptTextToProgressIndicatorTopConstraint
 @property  NSLayoutConstraint *signInFormToSignInLabelTopConstraint
 @property  NSLayoutConstraint *signInInputViewHeightConstraint

  // instance methods
  -[GKSignInInputView .cxx_destruct]
  -[GKSignInInputView inputViewHeightConstraint]
  -[GKSignInInputView setInputViewHeightConstraint:]
  -[GKSignInInputView setupConstraintConstantsForOrientation:]
  -[GKSignInInputView allVariableConstraints]
  -[GKSignInInputView topToSignInBaselineConstraint]
  -[GKSignInInputView setTopToSignInBaselineConstraint:]
  -[GKSignInInputView bottomToSignInBaselineConstraint]
  -[GKSignInInputView setBottomToSignInBaselineConstraint:]
  -[GKSignInInputView signInBaselineToPromptTextTopConstraint]
  -[GKSignInInputView setSignInBaselineToPromptTextTopConstraint:]
  -[GKSignInInputView promptTextToProgressIndicatorTopConstraint]
  -[GKSignInInputView setPromptTextToProgressIndicatorTopConstraint:]
  -[GKSignInInputView signInFormToSignInLabelTopConstraint]
  -[GKSignInInputView setSignInFormToSignInLabelTopConstraint:]
  -[GKSignInInputView signInInputViewHeightConstraint]
  -[GKSignInInputView setSignInInputViewHeightConstraint:]


GKSignInViewController : GKViewController <AKInlineSignInViewControllerDelegate, AKAppleIDAuthenticationDelegate, RemoteUIControllerDelegate, GKAuthenticateViewController, UIScrollViewDelegate>
 @property  NSString *appleID
 @property  UIActivityIndicatorView *progressIndicator
 @property  UILabel *signInLabel
 @property  UILabel *loginPromptLabel
 @property  GKSignInInputView *signInInputView
 @property  BOOL constraintsCreated
 @property  {UIEdgeInsets=dddd} currentContentInsets
 @property  {UIEdgeInsets=dddd} contentInsetsBeforeKeyboard
 @property  {UIEdgeInsets=dddd} scrollIndicatorInsetsBeforeKeyboard
 @property  UIImageView *bubbleImageView
 @property  AKInlineSignInViewController *inlineSignInViewController
 @property  AKAppleIDAuthenticationInAppContext *authContext
 @property  double fullWidthContentWidthConstraintConstant
 @property  double horizontalPaddingConstraintConstant
 @property  double labelWidthConstraintConstant
 @property  NSMutableArray *fullWidthViewConstraints
 @property  RemoteUIController *remoteU13Controller
 @property  UINavigationController *u13NavigationController
 @property  NSMutableArray *u13ObjectModels
 @property  GKDispatchGroup *u13Group
 @property  BOOL userShouldSkipCreateAppleID
 @property  UIScrollView *scrollView
 @property  GKGame *game
 @property  GKAccountRemoteUIController *accountController
 @property  UIViewController *remoteUIPresentingViewController
 @property  BOOL loadingRemoteUI
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  @? completionHandler
 @property  BOOL disablesSignIn

  // instance methods
  -[GKSignInViewController willAnimateRotationToInterfaceOrientation:duration:]
  -[GKSignInViewController willTransitionToTraitCollection:withTransitionCoordinator:]
  -[GKSignInViewController viewSafeAreaInsetsDidChange]
  -[GKSignInViewController accountController]
  -[GKSignInViewController authenticationController:shouldContinueWithAuthenticationResults:error:forContext:]
  -[GKSignInViewController viewWillLayoutSubviews]
  -[GKSignInViewController viewDidAppear:]
  -[GKSignInViewController dealloc]
  -[GKSignInViewController setScrollView:]
  -[GKSignInViewController .cxx_destruct]
  -[GKSignInViewController scrollView]
  -[GKSignInViewController viewWillAppear:]
  -[GKSignInViewController loadView]
  -[GKSignInViewController authContext]
  -[GKSignInViewController remoteUIController:shouldLoadRequest:redirectResponse:]
  -[GKSignInViewController setAuthContext:]
  -[GKSignInViewController keyboardWillShow:]
  -[GKSignInViewController keyboardWillHide:]
  -[GKSignInViewController viewDidDisappear:]
  -[GKSignInViewController appleID]
  -[GKSignInViewController showViewController:]
  -[GKSignInViewController setAppleID:]
  -[GKSignInViewController setCompletionHandler:]
  -[GKSignInViewController completionHandler]
  -[GKSignInViewController init]
  -[GKSignInViewController createConstraints]
  -[GKSignInViewController signInViewController:didAuthenticateWithResults:error:]
  -[GKSignInViewController createAppleID]
  -[GKSignInViewController remoteUIController:didReceiveHTTPResponse:]
  -[GKSignInViewController remoteUIControllerDidDismiss:]
  -[GKSignInViewController remoteUIController:didReceiveObjectModel:actionSignal:]
  -[GKSignInViewController createSubviews]
  -[GKSignInViewController game]
  -[GKSignInViewController setGame:]
  -[GKSignInViewController progressIndicator]
  -[GKSignInViewController setProgressIndicator:]
  -[GKSignInViewController bubbleImageView]
  -[GKSignInViewController setBubbleImageView:]
  -[GKSignInViewController contentInsetsBeforeKeyboard]
  -[GKSignInViewController setContentInsetsBeforeKeyboard:]
  -[GKSignInViewController _systemContentSizeSettingDidChange:]
  -[GKSignInViewController cancelSignIn]
  -[GKSignInViewController iForgotTapped]
  -[GKSignInViewController showPasswordChangeAlertWithURL:]
  -[GKSignInViewController disablesSignIn]
  -[GKSignInViewController setDisablesSignIn:]
  -[GKSignInViewController addCancelButtonToNavigationItem:]
  -[GKSignInViewController setupAuthKitInlineViewController]
  -[GKSignInViewController updateConstraintConstantsForTraitCollection:]
  -[GKSignInViewController startLoadingIndicator]
  -[GKSignInViewController stopLoadingIndicator]
  -[GKSignInViewController signIn]
  -[GKSignInViewController authenticateRequestCompletedWithErrorResponse:error:]
  -[GKSignInViewController createNewAccount]
  -[GKSignInViewController presentError:forAccountRemoteUIController:]
  -[GKSignInViewController accountRemoteUIController:finishedWithError:]
  -[GKSignInViewController loadAccountRemoteUIForPlayer:mode:completionHandler:]
  -[GKSignInViewController loadAccountRemoteUIForPlayer:mode:url:postBody:completionHandler:]
  -[GKSignInViewController presentAccountRemoteUIControllerAnimated:]
  -[GKSignInViewController showAccountRemoteUIForAccountName:mode:]
  -[GKSignInViewController showAccountRemoteUIForPlayerID:mode:]
  -[GKSignInViewController showAccountRemoteUIForAccountName:mode:url:postBody:]
  -[GKSignInViewController showAccountRemoteUIForLocalPlayer:mode:url:postBody:]
  -[GKSignInViewController showAuthKitAlertFromGreenBuddyWithAuthInfo:completion:]
  -[GKSignInViewController finishAuthenticationWithError:]
  -[GKSignInViewController handleUnderlyingAuthenticationError:playerID:]
  -[GKSignInViewController showPasswordResetAlertWithTitle:message:]
  -[GKSignInViewController showPasswordAlertWithTitle:message:]
  -[GKSignInViewController showLoginFailedAlert]
  -[GKSignInViewController showForgotPasswordAlert]
  -[GKSignInViewController showAccountDisabledAlert]
  -[GKSignInViewController showConnectionFailedAlert]
  -[GKSignInViewController remoteUIPresentingViewController]
  -[GKSignInViewController setRemoteUIPresentingViewController:]
  -[GKSignInViewController isLoadingRemoteUI]
  -[GKSignInViewController setLoadingRemoteUI:]
  -[GKSignInViewController signInLabel]
  -[GKSignInViewController setSignInLabel:]
  -[GKSignInViewController loginPromptLabel]
  -[GKSignInViewController setLoginPromptLabel:]
  -[GKSignInViewController signInInputView]
  -[GKSignInViewController setSignInInputView:]
  -[GKSignInViewController constraintsCreated]
  -[GKSignInViewController setConstraintsCreated:]
  -[GKSignInViewController currentContentInsets]
  -[GKSignInViewController setCurrentContentInsets:]
  -[GKSignInViewController scrollIndicatorInsetsBeforeKeyboard]
  -[GKSignInViewController setScrollIndicatorInsetsBeforeKeyboard:]
  -[GKSignInViewController inlineSignInViewController]
  -[GKSignInViewController setInlineSignInViewController:]
  -[GKSignInViewController fullWidthContentWidthConstraintConstant]
  -[GKSignInViewController setFullWidthContentWidthConstraintConstant:]
  -[GKSignInViewController horizontalPaddingConstraintConstant]
  -[GKSignInViewController setHorizontalPaddingConstraintConstant:]
  -[GKSignInViewController labelWidthConstraintConstant]
  -[GKSignInViewController setLabelWidthConstraintConstant:]
  -[GKSignInViewController fullWidthViewConstraints]
  -[GKSignInViewController setFullWidthViewConstraints:]
  -[GKSignInViewController remoteU13Controller]
  -[GKSignInViewController setRemoteU13Controller:]
  -[GKSignInViewController u13NavigationController]
  -[GKSignInViewController setU13NavigationController:]
  -[GKSignInViewController u13ObjectModels]
  -[GKSignInViewController setU13ObjectModels:]
  -[GKSignInViewController u13Group]
  -[GKSignInViewController setU13Group:]
  -[GKSignInViewController userShouldSkipCreateAppleID]
  -[GKSignInViewController setUserShouldSkipCreateAppleID:]
  -[GKSignInViewController setAccountController:]


GKChallengePlayerPickerViewController : GKDashboardCollectionViewController <GKComposeControllerDelegate>
 @property  GKChallenge *challenge
 @property  NSArray *initiallySelectedPlayers
 @property  BOOL shouldIgnoreClearSelection
 @property  UILabel *descriptionLabel
 @property  UIButton *sendButton
 @property  UITextField *messageField
 @property  UIButton *customizeMessageButton
 @property  UIView *actionView
 @property  UIView *titleView
 @property  UISearchBar *searchBar
 @property  UIButton *cancelButton
 @property  UILabel *titleLabel
 @property  UIView *scrollingHeader
 @property  NSLayoutConstraint *scrollingHeaderTopConstraint
 @property  double scrollingHeaderTopConstraintConstant
 @property  {UIEdgeInsets=dddd} initialInsets
 @property  BOOL shouldApplyInitialOffset
 @property  NSLayoutConstraint *customizeMessageBottomConstraint
 @property  double initialCustomizeMessageBottomConstraintConstant
 @property  UIViewController *composeController
 @property  NSString *message
 @property  @? completionHandler

  // instance methods
  -[GKChallengePlayerPickerViewController clearSelection]
  -[GKChallengePlayerPickerViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[GKChallengePlayerPickerViewController setChallenge:]
  -[GKChallengePlayerPickerViewController cancel:]
  -[GKChallengePlayerPickerViewController searchBar:textDidChange:]
  -[GKChallengePlayerPickerViewController titleView]
  -[GKChallengePlayerPickerViewController setMessage:]
  -[GKChallengePlayerPickerViewController setTitleLabel:]
  -[GKChallengePlayerPickerViewController setDescriptionLabel:]
  -[GKChallengePlayerPickerViewController setTitleView:]
  -[GKChallengePlayerPickerViewController challenge]
  -[GKChallengePlayerPickerViewController addMessage:]
  -[GKChallengePlayerPickerViewController scrollViewDidScroll:]
  -[GKChallengePlayerPickerViewController setCancelButton:]
  -[GKChallengePlayerPickerViewController textFieldShouldReturn:]
  -[GKChallengePlayerPickerViewController collectionView:didDeselectItemAtIndexPath:]
  -[GKChallengePlayerPickerViewController cancelButton]
  -[GKChallengePlayerPickerViewController viewWillLayoutSubviews]
  -[GKChallengePlayerPickerViewController viewDidAppear:]
  -[GKChallengePlayerPickerViewController setSearchText:]
  -[GKChallengePlayerPickerViewController .cxx_destruct]
  -[GKChallengePlayerPickerViewController viewDidLoad]
  -[GKChallengePlayerPickerViewController viewWillAppear:]
  -[GKChallengePlayerPickerViewController viewDidLayoutSubviews]
  -[GKChallengePlayerPickerViewController setSearchBar:]
  -[GKChallengePlayerPickerViewController preferredFocusEnvironments]
  -[GKChallengePlayerPickerViewController collectionView:didSelectItemAtIndexPath:]
  -[GKChallengePlayerPickerViewController send:]
  -[GKChallengePlayerPickerViewController descriptionLabel]
  -[GKChallengePlayerPickerViewController viewWillDisappear:]
  -[GKChallengePlayerPickerViewController searchBarCancelButtonClicked:]
  -[GKChallengePlayerPickerViewController traitCollectionDidChange:]
  -[GKChallengePlayerPickerViewController message]
  -[GKChallengePlayerPickerViewController searchBar]
  -[GKChallengePlayerPickerViewController setCompletionHandler:]
  -[GKChallengePlayerPickerViewController searchBarSearchButtonClicked:]
  -[GKChallengePlayerPickerViewController completionHandler]
  -[GKChallengePlayerPickerViewController titleLabel]
  -[GKChallengePlayerPickerViewController actionView]
  -[GKChallengePlayerPickerViewController loadData]
  -[GKChallengePlayerPickerViewController sendButton]
  -[GKChallengePlayerPickerViewController setSendButton:]
  -[GKChallengePlayerPickerViewController dataUpdated:withError:]
  -[GKChallengePlayerPickerViewController setupNoContentView:withError:]
  -[GKChallengePlayerPickerViewController initWithChallenge:initiallySelectedPlayers:]
  -[GKChallengePlayerPickerViewController adjustCustomizeMessageConstraint]
  -[GKChallengePlayerPickerViewController applyInitialContentOffset]
  -[GKChallengePlayerPickerViewController selectPlayersAtIndexPaths:]
  -[GKChallengePlayerPickerViewController initiallySelectedPlayers]
  -[GKChallengePlayerPickerViewController setInitiallySelectedPlayers:]
  -[GKChallengePlayerPickerViewController shouldIgnoreClearSelection]
  -[GKChallengePlayerPickerViewController setShouldIgnoreClearSelection:]
  -[GKChallengePlayerPickerViewController customizeMessageButton]
  -[GKChallengePlayerPickerViewController setCustomizeMessageButton:]
  -[GKChallengePlayerPickerViewController messageField]
  -[GKChallengePlayerPickerViewController setMessageField:]
  -[GKChallengePlayerPickerViewController scrollingHeader]
  -[GKChallengePlayerPickerViewController setScrollingHeader:]
  -[GKChallengePlayerPickerViewController scrollingHeaderTopConstraint]
  -[GKChallengePlayerPickerViewController setScrollingHeaderTopConstraint:]
  -[GKChallengePlayerPickerViewController scrollingHeaderTopConstraintConstant]
  -[GKChallengePlayerPickerViewController setScrollingHeaderTopConstraintConstant:]
  -[GKChallengePlayerPickerViewController initialInsets]
  -[GKChallengePlayerPickerViewController setInitialInsets:]
  -[GKChallengePlayerPickerViewController shouldApplyInitialOffset]
  -[GKChallengePlayerPickerViewController setShouldApplyInitialOffset:]
  -[GKChallengePlayerPickerViewController customizeMessageBottomConstraint]
  -[GKChallengePlayerPickerViewController setCustomizeMessageBottomConstraint:]
  -[GKChallengePlayerPickerViewController initialCustomizeMessageBottomConstraintConstant]
  -[GKChallengePlayerPickerViewController setInitialCustomizeMessageBottomConstraintConstant:]
  -[GKChallengePlayerPickerViewController composeController]
  -[GKChallengePlayerPickerViewController setComposeController:]
  -[GKChallengePlayerPickerViewController addVisualEffectViewForView:]
  -[GKChallengePlayerPickerViewController configureButtonsFocusEffect]
  -[GKChallengePlayerPickerViewController configureFocusGuides]
  -[GKChallengePlayerPickerViewController configureCollectionView]
  -[GKChallengePlayerPickerViewController updateButtonEnableState]
  -[GKChallengePlayerPickerViewController setActionView:]


GKNotificationBannerWindow : UIWindow
 @property  GKNotificationBannerViewController *currentBannerViewController
 @property  NSObject<OS_dispatch_semaphore> *bannerSemaphore

  // class methods
  +[GKNotificationBannerWindow queue]
  +[GKNotificationBannerWindow bannerWindow]
  +[GKNotificationBannerWindow enqueBanner:]

  // instance methods
  -[GKNotificationBannerWindow dealloc]
  -[GKNotificationBannerWindow handlePan:]
  -[GKNotificationBannerWindow handleSingleTap:]
  -[GKNotificationBannerWindow .cxx_destruct]
  -[GKNotificationBannerWindow _canAffectStatusBarAppearance]
  -[GKNotificationBannerWindow pointInside:withEvent:]
  -[GKNotificationBannerWindow touchesEnded:withEvent:]
  -[GKNotificationBannerWindow _canBecomeKeyWindow]
  -[GKNotificationBannerWindow init]
  -[GKNotificationBannerWindow _includeInDefaultImageSnapshot]
  -[GKNotificationBannerWindow _showBanner:]
  -[GKNotificationBannerWindow _hideBanner:quickly:]
  -[GKNotificationBannerWindow currentBannerViewController]
  -[GKNotificationBannerWindow setCurrentBannerViewController:]
  -[GKNotificationBannerWindow bannerSemaphore]


GKNotificationBannerView : UIView
 @property  GKDashboardPlayerPhotoView *playerAvatarView
 @property  BOOL canTransitionToPlayerAvatar
 @property  UIImageView *imageView
 @property  UILabel *titleLabel
 @property  UILabel *messageLabel
 @property  UILabel *messageLabel2
 @property  UILabel *actionLabel
 @property  UIView *centeringView
 @property  double preferredBannerWidth
 @property  BOOL useShortBanner
 @property  double duration
 @property  @? completionHandler
 @property  @? touchHandler

  // class methods
  +[GKNotificationBannerView _preventsAppearanceProxyCustomization]

  // instance methods
  -[GKNotificationBannerView setDuration:]
  -[GKNotificationBannerView setTitleLabel:]
  -[GKNotificationBannerView setImageView:]
  -[GKNotificationBannerView setMessageLabel:]
  -[GKNotificationBannerView dealloc]
  -[GKNotificationBannerView .cxx_destruct]
  -[GKNotificationBannerView duration]
  -[GKNotificationBannerView layoutSubviews]
  -[GKNotificationBannerView messageLabel]
  -[GKNotificationBannerView awakeFromNib]
  -[GKNotificationBannerView setCompletionHandler:]
  -[GKNotificationBannerView completionHandler]
  -[GKNotificationBannerView titleLabel]
  -[GKNotificationBannerView imageView]
  -[GKNotificationBannerView showWithCompletionHandler:]
  -[GKNotificationBannerView actionLabel]
  -[GKNotificationBannerView centeringView]
  -[GKNotificationBannerView setCenteringView:]
  -[GKNotificationBannerView setActionLabel:]
  -[GKNotificationBannerView messageLabel2]
  -[GKNotificationBannerView setMessageLabel2:]
  -[GKNotificationBannerView playerAvatarView]
  -[GKNotificationBannerView setPlayerAvatarView:]
  -[GKNotificationBannerView createBackdropViewWithBlurStyle:]
  -[GKNotificationBannerView createTitleLabel:withTextStyle:]
  -[GKNotificationBannerView createMessageLabel:withTextStyle:]
  -[GKNotificationBannerView initWithTitle:player:imageView:message:useShortBanner:]
  -[GKNotificationBannerView initWithTitle:image:message:useShortBanner:]
  -[GKNotificationBannerView startLoadingPlayerAvatar]
  -[GKNotificationBannerView transitionToPlayerAvatar]
  -[GKNotificationBannerView showPlayerAvatarAnimationWithCompletionHandler:]
  -[GKNotificationBannerView showWithTouchHandler:]
  -[GKNotificationBannerView hideBanner]
  -[GKNotificationBannerView _wasTouched:]
  -[GKNotificationBannerView callCompletionHandler]
  -[GKNotificationBannerView fadeInWithCompletionHandler:]
  -[GKNotificationBannerView fadeOutQuickly:withCompletionHandler:]
  -[GKNotificationBannerView touchHandler]
  -[GKNotificationBannerView setTouchHandler:]
  -[GKNotificationBannerView canTransitionToPlayerAvatar]
  -[GKNotificationBannerView setCanTransitionToPlayerAvatar:]
  -[GKNotificationBannerView preferredBannerWidth]
  -[GKNotificationBannerView useShortBanner]
  -[GKNotificationBannerView setUseShortBanner:]


GKNotificationBannerViewController : UIViewController
 @property  GKNotificationBannerView *bannerView
 @property  BOOL bannerVisible
 @property  BOOL bannerAnimating
 @property  NSLayoutConstraint *bannerYPositionConstraint
 @property  NSLayoutConstraint *bannerWidthConstraint

  // instance methods
  -[GKNotificationBannerViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[GKNotificationBannerViewController .cxx_destruct]
  -[GKNotificationBannerViewController supportedInterfaceOrientations]
  -[GKNotificationBannerViewController bannerView]
  -[GKNotificationBannerViewController setBannerView:]
  -[GKNotificationBannerViewController useShortBanner]
  -[GKNotificationBannerViewController windowPointInside:withEvent:]
  -[GKNotificationBannerViewController windowTouchesEnded:withEvent:]
  -[GKNotificationBannerViewController handleWindowSingleTap:]
  -[GKNotificationBannerViewController handleWindowPan:]
  -[GKNotificationBannerViewController addBannerView:]
  -[GKNotificationBannerViewController showCurrentBanner]
  -[GKNotificationBannerViewController hideBannerQuickly:]
  -[GKNotificationBannerViewController bannerWidthForViewSize:]
  -[GKNotificationBannerViewController addConstraintsForTVOSBannerView]
  -[GKNotificationBannerViewController addConstraintsForBannerView]
  -[GKNotificationBannerViewController _hiddenBannerPosition:]
  -[GKNotificationBannerViewController _visibleBannerCenterPosition:]
  -[GKNotificationBannerViewController bannerVisible]
  -[GKNotificationBannerViewController setBannerVisible:]
  -[GKNotificationBannerViewController bannerAnimating]
  -[GKNotificationBannerViewController setBannerAnimating:]
  -[GKNotificationBannerViewController bannerYPositionConstraint]
  -[GKNotificationBannerViewController setBannerYPositionConstraint:]
  -[GKNotificationBannerViewController bannerWidthConstraint]
  -[GKNotificationBannerViewController setBannerWidthConstraint:]


GKNotificationBanner : NSObject
  // class methods
  +[GKNotificationBanner isBannerVisible]
  +[GKNotificationBanner bannerViewWithTitle:image:player:message:]
  +[GKNotificationBanner bannerViewWithTitle:image:player:message:actionMessage:]
  +[GKNotificationBanner bannerViewWithTitle:image:player:message:actionMessage:shortBanner:]
  +[GKNotificationBanner showWelcomeBannerWithTitle:message:touchHandler:completionHandler:]
  +[GKNotificationBanner showBannerWithTitle:message:completionHandler:]
  +[GKNotificationBanner showBannerWithTitle:message:duration:completionHandler:]
  +[GKNotificationBanner showBannerWithTitle:image:message:completionHandler:]
  +[GKNotificationBanner showBannerWithTitle:image:message:touchHandler:]
  +[GKNotificationBanner showBannerWithTitle:player:message:completionHandler:]
  +[GKNotificationBanner showBannerWithTitle:player:message:touchHandler:]
  +[GKNotificationBanner bannerViewWithTitle:message:actionMessage:]


GKChallengeEventHandlerUIDelegate : NSObject <GKChallengeEventHandlerUIDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKChallengeEventHandlerUIDelegate showReceivedBannerForIssuingPlayer:challenge:handler:]
  -[GKChallengeEventHandlerUIDelegate showRemotelyCompletedBannerForReceivingPlayer:challenge:handler:]
  -[GKChallengeEventHandlerUIDelegate showLocallyCompletedBannerForIssuingPlayer:challenge:handler:]


GKResourceRequest : NSObject
 @property  <NSObject><NSCopying> *requestKey
 @property  <NSObject> *cacheKey
 @property  unsigned long cacheOptions

  // class methods
  +[GKResourceRequest makeUniqueKey]

  // instance methods
  -[GKResourceRequest cacheKey]
  -[GKResourceRequest setRequestKey:]
  -[GKResourceRequest .cxx_destruct]
  -[GKResourceRequest requestKey]
  -[GKResourceRequest setCacheKey:]
  -[GKResourceRequest cacheOptions]
  -[GKResourceRequest makeLoadOperation]
  -[GKResourceRequest didLoadResource:error:]
  -[GKResourceRequest isEqual:]
  -[GKResourceRequest init]


GKCurvedTextLabel : UILabel
 @property  double circleRadius
 @property  BOOL interior
 @property  double centerAngle
 @property  double maxAngularWidth
 @property  NSDictionary *textAttributes
 @property  double linearWidth
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} textBoundingRect
 @property  double textLeadingAngle
 @property  double textTrailingAngle

  // instance methods
  -[GKCurvedTextLabel text]
  -[GKCurvedTextLabel drawTextInRect:]
  -[GKCurvedTextLabel textAttributes]
  -[GKCurvedTextLabel setNumberOfLines:]
  -[GKCurvedTextLabel setTextColor:]
  -[GKCurvedTextLabel .cxx_destruct]
  -[GKCurvedTextLabel setAttributedText:]
  -[GKCurvedTextLabel attributedText]
  -[GKCurvedTextLabel sizeThatFits:]
  -[GKCurvedTextLabel font]
  -[GKCurvedTextLabel textColor]
  -[GKCurvedTextLabel setFont:]
  -[GKCurvedTextLabel initWithFrame:]
  -[GKCurvedTextLabel init]
  -[GKCurvedTextLabel setText:]
  -[GKCurvedTextLabel _distance]
  -[GKCurvedTextLabel _updateTextColor]
  -[GKCurvedTextLabel interior]
  -[GKCurvedTextLabel setInterior:]
  -[GKCurvedTextLabel circleRadius]
  -[GKCurvedTextLabel setCircleRadius:]
  -[GKCurvedTextLabel centerAngle]
  -[GKCurvedTextLabel setCenterAngle:]
  -[GKCurvedTextLabel setMaxAngularWidth:]
  -[GKCurvedTextLabel linearWidth]
  -[GKCurvedTextLabel _updateMaxSize]
  -[GKCurvedTextLabel invalidateCachedSize]
  -[GKCurvedTextLabel textBoundingRect]
  -[GKCurvedTextLabel _drawableCharacterRange:]
  -[GKCurvedTextLabel _newLineFromDrawableTextStorage]
  -[GKCurvedTextLabel _offsetOfBoundingRect:inRect:]
  -[GKCurvedTextLabel _glyphsBoundingRect]
  -[GKCurvedTextLabel _enumerateTransformsForDrawableCharacters:]
  -[GKCurvedTextLabel maxAngularWidth]
  -[GKCurvedTextLabel textLeadingAngle]
  -[GKCurvedTextLabel textTrailingAngle]


_GKASKResourceCacheGroup : NSObject
 @property  BOOL hasMultipleMembers

  // instance methods
  -[_GKASKResourceCacheGroup onlyMemberContents]
  -[_GKASKResourceCacheGroup .cxx_destruct]
  -[_GKASKResourceCacheGroup hasMultipleMembers]
  -[_GKASKResourceCacheGroup discardMemberContents:]
  -[_GKASKResourceCacheGroup setHasMultipleMembers:]
  -[_GKASKResourceCacheGroup snapshotMemberContents]
  -[_GKASKResourceCacheGroup makeMemberContents]
  -[_GKASKResourceCacheGroup init]


GKResourceCache : NSObject
 @property  _GKASKResourceCacheGroup *group
 @property  NSCache *contents
 @property  BOOL isGroupMember
 @property  BOOL evictsObjectsWhenApplicationEntersBackground
 @property  unsigned long limit

  // instance methods
  -[GKResourceCache limit]
  -[GKResourceCache setLimit:]
  -[GKResourceCache evictsObjectsWhenApplicationEntersBackground]
  -[GKResourceCache contents]
  -[GKResourceCache initWithGroupOfCache:]
  -[GKResourceCache dealloc]
  -[GKResourceCache .cxx_destruct]
  -[GKResourceCache removeAllResources]
  -[GKResourceCache isGroupMember]
  -[GKResourceCache resourcesForKey:]
  -[GKResourceCache setEvictsObjectsWhenApplicationEntersBackground:]
  -[GKResourceCache group]
  -[GKResourceCache replaceResourcesForKey:withResource:]
  -[GKResourceCache init]
  -[GKResourceCache addResource:forKey:]
  -[GKResourceCache removeResourcesForKey:]


GKLeaderboardSetDataSource : GKLeaderboardCollectionDataSource
 @property  NSArray *leaderboardSets
 @property  NSDictionary *leaderboardSetAssetNames
 @property  NSDictionary *leaderboardAssetNames

  // instance methods
  -[GKLeaderboardSetDataSource itemCount]
  -[GKLeaderboardSetDataSource .cxx_destruct]
  -[GKLeaderboardSetDataSource title]
  -[GKLeaderboardSetDataSource loadDataWithCompletionHandler:]
  -[GKLeaderboardSetDataSource itemForIndexPath:]
  -[GKLeaderboardSetDataSource standardCellSizeForCollectionView:]
  -[GKLeaderboardSetDataSource prepareCell:forItemAtIndexPath:]
  -[GKLeaderboardSetDataSource handleSelectionInCollectionView:forItemAtIndexPath:]
  -[GKLeaderboardSetDataSource updateHighlightsInSectionHeader:]
  -[GKLeaderboardSetDataSource allowedColumnCount:]
  -[GKLeaderboardSetDataSource removeLeaderboardSetsWithoutImages]
  -[GKLeaderboardSetDataSource presentLeaderboardsListWithSet:segueToLeaderboard:]
  -[GKLeaderboardSetDataSource leaderboardSetAssetNames]
  -[GKLeaderboardSetDataSource setLeaderboardSetAssetNames:]
  -[GKLeaderboardSetDataSource leaderboardAssetNames]
  -[GKLeaderboardSetDataSource setLeaderboardAssetNames:]
  -[GKLeaderboardSetDataSource leaderboardSets]
  -[GKLeaderboardSetDataSource setLeaderboardSets:]


GKLeaderboardScoreFlowLayout : UICollectionViewFlowLayout
 @property  BOOL isInsertingItemsAbove
 @property  double heightOfInsertedItems
 @property  {CGSize=dd} contentSizeBeforeInsertingItemsAbove
 @property  double initialContentOffset

  // instance methods
  -[GKLeaderboardScoreFlowLayout prepareForCollectionViewUpdates:]
  -[GKLeaderboardScoreFlowLayout targetContentOffsetForProposedContentOffset:withScrollingVelocity:]
  -[GKLeaderboardScoreFlowLayout targetContentOffsetForProposedContentOffset:]
  -[GKLeaderboardScoreFlowLayout initialContentOffset]
  -[GKLeaderboardScoreFlowLayout setInitialContentOffset:]
  -[GKLeaderboardScoreFlowLayout isInsertingItemsAbove]
  -[GKLeaderboardScoreFlowLayout setIsInsertingItemsAbove:]
  -[GKLeaderboardScoreFlowLayout heightOfInsertedItems]
  -[GKLeaderboardScoreFlowLayout setHeightOfInsertedItems:]
  -[GKLeaderboardScoreFlowLayout contentSizeBeforeInsertingItemsAbove]
  -[GKLeaderboardScoreFlowLayout setContentSizeBeforeInsertingItemsAbove:]


GKLeaderboardScoreDataSource : GKGameLayerCollectionDataSource
 @property  NSArray *entries
 @property  BOOL isLoadingData
 @property  BOOL isLoadingNextData
 @property  BOOL isLoadingPreviousData
 @property  NSString *additionalNextDataLoadToken
 @property  NSString *additionalPreviousDataLoadToken
 @property  long long topLoadingCellItem
 @property  long long bottomLoadingCellItem
 @property  long long addFriendCellItem
 @property  long long noFriendsCellItem
 @property  long long maxRange
 @property  GKLeaderboardEntry *localPlayerEntry
 @property  UICollectionView *collectionView
 @property  long long friendCount
 @property  BOOL firstLoad
 @property  NSSet *localPlayerFriendIDs
 @property  GKLeaderboardAddFriendsCell *sizingAddFriendsCell
 @property  GKLeaderboard *leaderboard
 @property  long long playerScope
 @property  long long timeScope
 @property  BOOL restrictToFriendsOnly
 @property  long long leaderboardOccurrence
 @property  <GKLeaderboardScoreDelegate> *leaderboardScoreDelegate
 @property  long long startingRank
 @property  BOOL autoScrollToLocalPlayerPosition

  // instance methods
  -[GKLeaderboardScoreDataSource setCollectionView:]
  -[GKLeaderboardScoreDataSource entries]
  -[GKLeaderboardScoreDataSource collectionView:cellForItemAtIndexPath:]
  -[GKLeaderboardScoreDataSource setEntries:]
  -[GKLeaderboardScoreDataSource scrollViewDidScroll:]
  -[GKLeaderboardScoreDataSource collectionView:layout:minimumLineSpacingForSectionAtIndex:]
  -[GKLeaderboardScoreDataSource collectionView:layout:insetForSectionAtIndex:]
  -[GKLeaderboardScoreDataSource timeScope]
  -[GKLeaderboardScoreDataSource itemCount]
  -[GKLeaderboardScoreDataSource collectionView:previewForDismissingContextMenuWithConfiguration:]
  -[GKLeaderboardScoreDataSource collectionView:layout:sizeForItemAtIndexPath:]
  -[GKLeaderboardScoreDataSource collectionView:willDisplayCell:forItemAtIndexPath:]
  -[GKLeaderboardScoreDataSource .cxx_destruct]
  -[GKLeaderboardScoreDataSource collectionView]
  -[GKLeaderboardScoreDataSource collectionView:layout:referenceSizeForFooterInSection:]
  -[GKLeaderboardScoreDataSource collectionView:layout:referenceSizeForHeaderInSection:]
  -[GKLeaderboardScoreDataSource hasData]
  -[GKLeaderboardScoreDataSource collectionView:previewForHighlightingContextMenuWithConfiguration:]
  -[GKLeaderboardScoreDataSource collectionView:willPerformPreviewActionForMenuWithConfiguration:animator:]
  -[GKLeaderboardScoreDataSource collectionView:contextMenuConfigurationForItemAtIndexPath:point:]
  -[GKLeaderboardScoreDataSource setTimeScope:]
  -[GKLeaderboardScoreDataSource loadDataWithCompletionHandler:]
  -[GKLeaderboardScoreDataSource maxRange]
  -[GKLeaderboardScoreDataSource setMaxRange:]
  -[GKLeaderboardScoreDataSource cellSpacing]
  -[GKLeaderboardScoreDataSource setFirstLoad:]
  -[GKLeaderboardScoreDataSource firstLoad]
  -[GKLeaderboardScoreDataSource setLeaderboardOccurrence:]
  -[GKLeaderboardScoreDataSource leaderboardOccurrence]
  -[GKLeaderboardScoreDataSource setupCollectionView:]
  -[GKLeaderboardScoreDataSource itemForIndexPath:]
  -[GKLeaderboardScoreDataSource leaderboard]
  -[GKLeaderboardScoreDataSource setLeaderboard:]
  -[GKLeaderboardScoreDataSource handleSelectionInCollectionView:forItemAtIndexPath:]
  -[GKLeaderboardScoreDataSource friendCount]
  -[GKLeaderboardScoreDataSource setFriendCount:]
  -[GKLeaderboardScoreDataSource initWithGameRecord:leaderboard:]
  -[GKLeaderboardScoreDataSource setPlayerScope:]
  -[GKLeaderboardScoreDataSource playerScope]
  -[GKLeaderboardScoreDataSource processEntries:localPlayerEntry:totalPlayerCount:error:completionHandler:]
  -[GKLeaderboardScoreDataSource loadInitialDataWithCompletionHandler:]
  -[GKLeaderboardScoreDataSource loadMoreDataWithStartIndex:completionHandler:]
  -[GKLeaderboardScoreDataSource localPlayerEntryIndexPath]
  -[GKLeaderboardScoreDataSource targetedPreviewForUIContextMenuConfiguration:inCollectionView:]
  -[GKLeaderboardScoreDataSource makeContextMenuForCell:withScore:]
  -[GKLeaderboardScoreDataSource restrictToFriendsOnly]
  -[GKLeaderboardScoreDataSource setRestrictToFriendsOnly:]
  -[GKLeaderboardScoreDataSource leaderboardScoreDelegate]
  -[GKLeaderboardScoreDataSource setLeaderboardScoreDelegate:]
  -[GKLeaderboardScoreDataSource startingRank]
  -[GKLeaderboardScoreDataSource setStartingRank:]
  -[GKLeaderboardScoreDataSource autoScrollToLocalPlayerPosition]
  -[GKLeaderboardScoreDataSource setAutoScrollToLocalPlayerPosition:]
  -[GKLeaderboardScoreDataSource isLoadingData]
  -[GKLeaderboardScoreDataSource setIsLoadingData:]
  -[GKLeaderboardScoreDataSource isLoadingNextData]
  -[GKLeaderboardScoreDataSource setIsLoadingNextData:]
  -[GKLeaderboardScoreDataSource isLoadingPreviousData]
  -[GKLeaderboardScoreDataSource setIsLoadingPreviousData:]
  -[GKLeaderboardScoreDataSource additionalNextDataLoadToken]
  -[GKLeaderboardScoreDataSource setAdditionalNextDataLoadToken:]
  -[GKLeaderboardScoreDataSource additionalPreviousDataLoadToken]
  -[GKLeaderboardScoreDataSource setAdditionalPreviousDataLoadToken:]
  -[GKLeaderboardScoreDataSource topLoadingCellItem]
  -[GKLeaderboardScoreDataSource setTopLoadingCellItem:]
  -[GKLeaderboardScoreDataSource bottomLoadingCellItem]
  -[GKLeaderboardScoreDataSource setBottomLoadingCellItem:]
  -[GKLeaderboardScoreDataSource addFriendCellItem]
  -[GKLeaderboardScoreDataSource setAddFriendCellItem:]
  -[GKLeaderboardScoreDataSource noFriendsCellItem]
  -[GKLeaderboardScoreDataSource setNoFriendsCellItem:]
  -[GKLeaderboardScoreDataSource localPlayerEntry]
  -[GKLeaderboardScoreDataSource setLocalPlayerEntry:]
  -[GKLeaderboardScoreDataSource localPlayerFriendIDs]
  -[GKLeaderboardScoreDataSource setLocalPlayerFriendIDs:]
  -[GKLeaderboardScoreDataSource sizingAddFriendsCell]
  -[GKLeaderboardScoreDataSource setSizingAddFriendsCell:]


GKExtensionRemoteViewController : _UIRemoteViewController <GKExtensionProtocol, GKExtensionHostProtocol>
 @property  NSExtension *extension
 @property  id requestIdentifier
 @property  GKGame *game
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[GKExtensionRemoteViewController shouldPropagateAppearanceCustomizations]
  +[GKExtensionRemoteViewController setupCallbackBlocksForExtension:withParentViewController:]
  +[GKExtensionRemoteViewController viewControllerForExtension:inputItems:completionHandler:]
  +[GKExtensionRemoteViewController initialItemsForExtension]
  +[GKExtensionRemoteViewController dismissAutomaticallyAfterExtensionCompletion]

  // instance methods
  -[GKExtensionRemoteViewController shouldAutorotateToInterfaceOrientation:]
  -[GKExtensionRemoteViewController extension]
  -[GKExtensionRemoteViewController requestIdentifier]
  -[GKExtensionRemoteViewController setExtension:]
  -[GKExtensionRemoteViewController dealloc]
  -[GKExtensionRemoteViewController .cxx_destruct]
  -[GKExtensionRemoteViewController viewDidLoad]
  -[GKExtensionRemoteViewController viewWillAppear:]
  -[GKExtensionRemoteViewController supportedInterfaceOrientations]
  -[GKExtensionRemoteViewController viewDidDisappear:]
  -[GKExtensionRemoteViewController setRequestIdentifier:]
  -[GKExtensionRemoteViewController init]
  -[GKExtensionRemoteViewController game]
  -[GKExtensionRemoteViewController setGame:]
  -[GKExtensionRemoteViewController messageFromExtension:]
  -[GKExtensionRemoteViewController _desiredStatusBarStyle]
  -[GKExtensionRemoteViewController messageFromClient:]
  -[GKExtensionRemoteViewController setInitialState:withReply:]
  -[GKExtensionRemoteViewController hostApp:grantingAccessExtensionSandbox:replyWithEndpoint:]
  -[GKExtensionRemoteViewController tearDownExtensionWithReply:]
  -[GKExtensionRemoteViewController extensionIsCanceling]
  -[GKExtensionRemoteViewController extensionIsFinishing]
  -[GKExtensionRemoteViewController extensionObjectProxy]
  -[GKExtensionRemoteViewController cancelExtension]
  -[GKExtensionRemoteViewController sendMessageToExtension:]


GKExtensionHostContext : NSExtensionContext <GKExtensionHostProtocol>
 @property  GKExtensionRemoteViewController *remoteViewController
 @property  GKGame *game
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKExtensionHostContext setRemoteViewController:]
  -[GKExtensionHostContext .cxx_destruct]
  -[GKExtensionHostContext remoteViewController]
  -[GKExtensionHostContext game]
  -[GKExtensionHostContext setGame:]
  -[GKExtensionHostContext messageFromExtension:]


GKLoadAvatarResourceOperation : GKLoadResourceOperation
 @property  NSString *playerId

  // instance methods
  -[GKLoadAvatarResourceOperation .cxx_destruct]
  -[GKLoadAvatarResourceOperation main]
  -[GKLoadAvatarResourceOperation initWithPlayerId:]
  -[GKLoadAvatarResourceOperation makePlayerFetchError]
  -[GKLoadAvatarResourceOperation playerId]


GKNetworkActivityIndicatorDelegate : NSObject <GKDaemonProxyNetworkActivityIndicatorDelegate>
 @property  int networkIndicatorCount
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKNetworkActivityIndicatorDelegate endNetworkActivity]
  -[GKNetworkActivityIndicatorDelegate beginNetworkActivity]
  -[GKNetworkActivityIndicatorDelegate resetNetworkActivity]
  -[GKNetworkActivityIndicatorDelegate networkIndicatorCount]
  -[GKNetworkActivityIndicatorDelegate setNetworkIndicatorCount:]


GKFriendRequestViewController : GKHostedViewController
 @property  UIViewController *requestingViewController
 @property  NSObject<GKFriendRequestViewControllerDelegate> *delegate
 @property  NSString *friendCode
 @property  NSString *friendSupportPageURL
 @property  NSArray *recipients
 @property  NSString *chatGUID

  // class methods
  +[GKFriendRequestViewController addFriends:]
  +[GKFriendRequestViewController presentFriendRequestOn:withFriendCode:andFriendSupportPageURL:]
  +[GKFriendRequestViewController presentAlertControllerOn:withMessage:andTitle:]

  // instance methods
  -[GKFriendRequestViewController recipients]
  -[GKFriendRequestViewController setDelegate:]
  -[GKFriendRequestViewController delegate]
  -[GKFriendRequestViewController _presentingViewController]
  -[GKFriendRequestViewController .cxx_destruct]
  -[GKFriendRequestViewController viewDidDisappear:]
  -[GKFriendRequestViewController setRecipients:]
  -[GKFriendRequestViewController init]
  -[GKFriendRequestViewController setFriendCode:]
  -[GKFriendRequestViewController setFriendSupportPageURL:]
  -[GKFriendRequestViewController chatGUID]
  -[GKFriendRequestViewController setChatGUID:]
  -[GKFriendRequestViewController notifyDelegateOnWillFinish]
  -[GKFriendRequestViewController friendCode]
  -[GKFriendRequestViewController friendSupportPageURL]
  -[GKFriendRequestViewController serviceSideViewControllerClassName]
  -[GKFriendRequestViewController requestingViewController]
  -[GKFriendRequestViewController setRequestingViewController:]


GKShowcaseCellView : UICollectionReusableView
 @property  GKHairlineView *underlineView
 @property  UICollectionViewCell *cell
 @property  SEL touchedShowcaseCellAction

  // class methods
  +[GKShowcaseCellView requiresConstraintBasedLayout]

  // instance methods
  -[GKShowcaseCellView .cxx_destruct]
  -[GKShowcaseCellView prepareForReuse]
  -[GKShowcaseCellView touchesEnded:withEvent:]
  -[GKShowcaseCellView initWithFrame:]
  -[GKShowcaseCellView cell]
  -[GKShowcaseCellView setCell:]
  -[GKShowcaseCellView alignmentRectForText]
  -[GKShowcaseCellView touchedShowcaseCellAction]
  -[GKShowcaseCellView setTouchedShowcaseCellAction:]
  -[GKShowcaseCellView underlineView]
  -[GKShowcaseCellView setUnderlineView:]


GKDashboardKeyboardAccessoryView : UIView
 @property  UILabel *titleLabel
 @property  UILabel *subtitleLabel
 @property  UILabel *descriptionLabel

  // instance methods
  -[GKDashboardKeyboardAccessoryView setSubtitleLabel:]
  -[GKDashboardKeyboardAccessoryView subtitleLabel]
  -[GKDashboardKeyboardAccessoryView setTitleLabel:]
  -[GKDashboardKeyboardAccessoryView setDescriptionLabel:]
  -[GKDashboardKeyboardAccessoryView descriptionLabel]
  -[GKDashboardKeyboardAccessoryView titleLabel]


GKTurnBasedMatchDetailViewController : GKBasicCollectionViewController
 @property  GKTurnBasedParticipantsDataSource *participantsDataSource
 @property  GKTurnBasedMatchDetailHeaderView *headerView
 @property  double initialSectionHeaderHeight
 @property  GKTurnBasedMatch *match
 @property  GKGame *game
 @property  BOOL isInGame
 @property  BOOL shouldShowPlay
 @property  BOOL shouldShowQuit
 @property  NSObject<GKTurnBasedMatchDetailViewControllerDelegate> *delegate

  // instance methods
  -[GKTurnBasedMatchDetailViewController collectionView:shouldHighlightItemAtIndexPath:]
  -[GKTurnBasedMatchDetailViewController setDelegate:]
  -[GKTurnBasedMatchDetailViewController setHeaderView:]
  -[GKTurnBasedMatchDetailViewController collectionView:shouldSelectItemAtIndexPath:]
  -[GKTurnBasedMatchDetailViewController delegate]
  -[GKTurnBasedMatchDetailViewController setMatch:]
  -[GKTurnBasedMatchDetailViewController viewDidAppear:]
  -[GKTurnBasedMatchDetailViewController dealloc]
  -[GKTurnBasedMatchDetailViewController headerView]
  -[GKTurnBasedMatchDetailViewController .cxx_destruct]
  -[GKTurnBasedMatchDetailViewController match]
  -[GKTurnBasedMatchDetailViewController viewDidLoad]
  -[GKTurnBasedMatchDetailViewController viewWillAppear:]
  -[GKTurnBasedMatchDetailViewController observeValueForKeyPath:ofObject:change:context:]
  -[GKTurnBasedMatchDetailViewController preferredFocusEnvironments]
  -[GKTurnBasedMatchDetailViewController viewWillDisappear:]
  -[GKTurnBasedMatchDetailViewController traitCollectionDidChange:]
  -[GKTurnBasedMatchDetailViewController acceptInvitation:]
  -[GKTurnBasedMatchDetailViewController init]
  -[GKTurnBasedMatchDetailViewController setupActionButton]
  -[GKTurnBasedMatchDetailViewController configureDataSource]
  -[GKTurnBasedMatchDetailViewController setActionButtonEnabled:]
  -[GKTurnBasedMatchDetailViewController declineInvitation:]
  -[GKTurnBasedMatchDetailViewController doneButtonPressed:]
  -[GKTurnBasedMatchDetailViewController game]
  -[GKTurnBasedMatchDetailViewController setGame:]
  -[GKTurnBasedMatchDetailViewController didEnterNoContentState]
  -[GKTurnBasedMatchDetailViewController didUpdateModel]
  -[GKTurnBasedMatchDetailViewController updateUIBasedOnTraitCollection]
  -[GKTurnBasedMatchDetailViewController shouldShowPlay]
  -[GKTurnBasedMatchDetailViewController setShouldShowPlay:]
  -[GKTurnBasedMatchDetailViewController chooseMatch:]
  -[GKTurnBasedMatchDetailViewController quitMatch:]
  -[GKTurnBasedMatchDetailViewController removeMatch:]
  -[GKTurnBasedMatchDetailViewController handleTurnBasedEvent:]
  -[GKTurnBasedMatchDetailViewController shouldShowQuit]
  -[GKTurnBasedMatchDetailViewController setShouldShowQuit:]
  -[GKTurnBasedMatchDetailViewController configureViewFactories]
  -[GKTurnBasedMatchDetailViewController configureMatchDetailHeader:]
  -[GKTurnBasedMatchDetailViewController configureHeader:indexPath:]
  -[GKTurnBasedMatchDetailViewController buyButtonPressed:]
  -[GKTurnBasedMatchDetailViewController addBackgroundVisualEffect]
  -[GKTurnBasedMatchDetailViewController _gkRepresentedObject]
  -[GKTurnBasedMatchDetailViewController isInGame]
  -[GKTurnBasedMatchDetailViewController setIsInGame:]
  -[GKTurnBasedMatchDetailViewController participantsDataSource]
  -[GKTurnBasedMatchDetailViewController setParticipantsDataSource:]
  -[GKTurnBasedMatchDetailViewController initialSectionHeaderHeight]
  -[GKTurnBasedMatchDetailViewController setInitialSectionHeaderHeight:]


GKMetricData : NSObject
 @property  GKSectionMetrics *sectionMetrics
 @property  GKGridLayoutMetrics *metrics
 @property  NSString *layoutKey
 @property  unsigned long currentMaxVisibleItemCount
 @property  unsigned long filteredTotalItemCount
 @property  NSMutableArray *headerPinnableAttributes
 @property  NSMutableArray *footerPinnableAttributes

  // instance methods
  -[GKMetricData .cxx_destruct]
  -[GKMetricData metrics]
  -[GKMetricData setMetrics:]
  -[GKMetricData init]
  -[GKMetricData _gkDescriptionWithChildren:]
  -[GKMetricData sectionMetrics]
  -[GKMetricData localDescription]
  -[GKMetricData layoutKey]
  -[GKMetricData addAttributes:forLocation:]
  -[GKMetricData currentMaxVisibleItemCount]
  -[GKMetricData setCurrentMaxVisibleItemCount:]
  -[GKMetricData filteredTotalItemCount]
  -[GKMetricData setFilteredTotalItemCount:]
  -[GKMetricData headerPinnableAttributes]
  -[GKMetricData setHeaderPinnableAttributes:]
  -[GKMetricData footerPinnableAttributes]
  -[GKMetricData setFooterPinnableAttributes:]


GKMatchmakerViewController : UINavigationController <GKMatchDelegate, GKMatchDelegatePrivate, GKExtensionParentViewControllerProtocol>
 @property  GKMatchmakerHostViewController *remoteViewController
 @property  GKInvite *acceptedInvite
 @property  GKMatch *match
 @property  NSMutableArray *hostedPlayers
 @property  UIAlertController *alertController
 @property  GKMatchRequest *matchRequest
 @property  BOOL userCancelledMatching
 @property  BOOL inviterCancelNotificaitonReceived
 @property  NSObject<OS_dispatch_queue> *cancellingQueue
 @property  <GKMatchmakerViewControllerDelegate> *matchmakerDelegate
 @property  BOOL hosted
 @property  long long matchmakingMode
 @property  BOOL canStartWithMinimumPlayers
 @property  NSString *defaultInvitationMessage
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[GKMatchmakerViewController _preventsAppearanceProxyCustomization]

  // instance methods
  -[GKMatchmakerViewController finishWithError:]
  -[GKMatchmakerViewController shouldAutorotateToInterfaceOrientation:]
  -[GKMatchmakerViewController setMatch:]
  -[GKMatchmakerViewController viewDidAppear:]
  -[GKMatchmakerViewController dealloc]
  -[GKMatchmakerViewController setRemoteViewController:]
  -[GKMatchmakerViewController .cxx_destruct]
  -[GKMatchmakerViewController match]
  -[GKMatchmakerViewController viewDidLoad]
  -[GKMatchmakerViewController viewWillAppear:]
  -[GKMatchmakerViewController applicationWillEnterForeground:]
  -[GKMatchmakerViewController remoteViewController]
  -[GKMatchmakerViewController isHosted]
  -[GKMatchmakerViewController supportedInterfaceOrientations]
  -[GKMatchmakerViewController viewDidDisappear:]
  -[GKMatchmakerViewController cancel]
  -[GKMatchmakerViewController init]
  -[GKMatchmakerViewController alertController]
  -[GKMatchmakerViewController setAlertController:]
  -[GKMatchmakerViewController sendData:]
  -[GKMatchmakerViewController authenticationChanged:]
  -[GKMatchmakerViewController extensionDidFinishWithError:]
  -[GKMatchmakerViewController initWithMatchRequest:]
  -[GKMatchmakerViewController _setupChildViewController]
  -[GKMatchmakerViewController _setupRemoteViewController]
  -[GKMatchmakerViewController matchRequest]
  -[GKMatchmakerViewController setMatchRequest:]
  -[GKMatchmakerViewController matchmakingMode]
  -[GKMatchmakerViewController setMatchmakingMode:]
  -[GKMatchmakerViewController groupActivityJoiningPlayer:devicePushToken:]
  -[GKMatchmakerViewController setConnectingStateForPlayer:]
  -[GKMatchmakerViewController setHosted:]
  -[GKMatchmakerViewController acceptedInvite]
  -[GKMatchmakerViewController setAcceptedInvite:]
  -[GKMatchmakerViewController userCancelledMatching]
  -[GKMatchmakerViewController setUserCancelledMatching:]
  -[GKMatchmakerViewController localPlayerAcceptedGameInvite:]
  -[GKMatchmakerViewController playersToInvite:]
  -[GKMatchmakerViewController defaultInvitationMessage]
  -[GKMatchmakerViewController setDefaultInvitationMessage:]
  -[GKMatchmakerViewController canStartWithMinimumPlayers]
  -[GKMatchmakerViewController setCanStartWithMinimumPlayers:]
  -[GKMatchmakerViewController inviteSharePlayPlayer:]
  -[GKMatchmakerViewController inviterCancelledNotification:]
  -[GKMatchmakerViewController match:didReceiveData:fromRemotePlayer:]
  -[GKMatchmakerViewController match:player:didChangeConnectionState:]
  -[GKMatchmakerViewController match:didFailWithError:]
  -[GKMatchmakerViewController initWithInvite:]
  -[GKMatchmakerViewController setupGroupActivity]
  -[GKMatchmakerViewController setupNotifications]
  -[GKMatchmakerViewController setHostedPlayer:didConnect:]
  -[GKMatchmakerViewController setHostedPlayer:connected:]
  -[GKMatchmakerViewController addPlayersToMatch:]
  -[GKMatchmakerViewController setHostedPlayerReady:]
  -[GKMatchmakerViewController cancellingQueue]
  -[GKMatchmakerViewController cancelMatching]
  -[GKMatchmakerViewController finishWithMatch]
  -[GKMatchmakerViewController finishWithPlayers]
  -[GKMatchmakerViewController createMatchForAcceptedInvite]
  -[GKMatchmakerViewController shareMatchWithRequest:handler:]
  -[GKMatchmakerViewController setShareInvitees:]
  -[GKMatchmakerViewController startMatchingWithRequest:devicePushToken:]
  -[GKMatchmakerViewController cancelPendingInviteToPlayer:]
  -[GKMatchmakerViewController invitedPlayer:responded:]
  -[GKMatchmakerViewController setBrowsingForNearbyPlayers:]
  -[GKMatchmakerViewController matchmakerDelegate]
  -[GKMatchmakerViewController setMatchmakerDelegate:]
  -[GKMatchmakerViewController hostedPlayers]
  -[GKMatchmakerViewController setHostedPlayers:]
  -[GKMatchmakerViewController inviterCancelNotificaitonReceived]
  -[GKMatchmakerViewController setInviterCancelNotificaitonReceived:]


GKColumnDividerView : UICollectionReusableView
 @property  GKHairlineView *hairlineView

  // instance methods
  -[GKColumnDividerView .cxx_destruct]
  -[GKColumnDividerView initWithFrame:]
  -[GKColumnDividerView hairlineView]
  -[GKColumnDividerView setHairlineView:]


GKCollectionViewController : UICollectionViewController <_GKStateMachineDelegate, GKCollectionViewDataSourceDelegate, UISearchBarDelegate, UITextFieldDelegate, GKSegmentedSectionDataSourceEventHandler>
 @property  BOOL skipLoadAfterViewDidLoad
 @property  GKLoadableContentStateMachine *loadingMachine
 @property  UICollectionViewLayout *defaultLayout
 @property  UIActivityIndicatorView *loadingIndicatorView
 @property  long long previousOrientation
 @property  BOOL active
 @property  BOOL hasViewFactories
 @property  BOOL didSlideIn
 @property  long long appearCount
 @property  NSMapTable *reusableViewsIHaveSeen
 @property  NSObject<OS_dispatch_queue> *batchUpdateQueue
 @property  long long batchUpdateCount
 @property  NSUUID *currentUpdateID
 @property  GKSwipeToEditStateMachine *swipeStateMachine
 @property  <UICollectionViewDataSource> *dataSource
 @property  GKColorPalette *colorPalette
 @property  BOOL shouldSlideInContents
 @property  BOOL showSupplementaryViewsWhileLoading
 @property  NSString *loadingState
 @property  BOOL readyToDisplayData
 @property  GKPlaceholderView *placeholderView
 @property  UINavigationController *placeholderNavigationController
 @property  GKSearchBar *activeSearchBar
 @property  NSString *currentSearchText
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[GKCollectionViewController _shouldForwardViewWillTransitionToSize]
  +[GKCollectionViewController _initializeSafeCategoryFromValidationManager]

  // instance methods
  -[GKCollectionViewController willAnimateRotationToInterfaceOrientation:duration:]
  -[GKCollectionViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[GKCollectionViewController searchBarTextDidBeginEditing:]
  -[GKCollectionViewController active]
  -[GKCollectionViewController searchBar:textDidChange:]
  -[GKCollectionViewController setNeedsReload]
  -[GKCollectionViewController collectionView:shouldHighlightItemAtIndexPath:]
  -[GKCollectionViewController dataSource]
  -[GKCollectionViewController collectionView:willDisplaySupplementaryView:forElementKind:atIndexPath:]
  -[GKCollectionViewController searchBarTextDidEndEditing:]
  -[GKCollectionViewController segmentedSectionDataSource:inSection:didSelectDataSourceWithIndex:]
  -[GKCollectionViewController colorPalette]
  -[GKCollectionViewController setPlaceholderView:]
  -[GKCollectionViewController defaultLayout]
  -[GKCollectionViewController viewDidAppear:]
  -[GKCollectionViewController dealloc]
  -[GKCollectionViewController collectionView:willDisplayCell:forItemAtIndexPath:]
  -[GKCollectionViewController .cxx_destruct]
  -[GKCollectionViewController collectionView]
  -[GKCollectionViewController animationDidStop:finished:]
  -[GKCollectionViewController viewDidLoad]
  -[GKCollectionViewController viewWillAppear:]
  -[GKCollectionViewController loadView]
  -[GKCollectionViewController gkDataSource]
  -[GKCollectionViewController placeholderView]
  -[GKCollectionViewController setDefaultLayout:]
  -[GKCollectionViewController searchBarShouldBeginEditing:]
  -[GKCollectionViewController setActive:]
  -[GKCollectionViewController initWithCollectionViewLayout:]
  -[GKCollectionViewController setDataSource:]
  -[GKCollectionViewController viewDidDisappear:]
  -[GKCollectionViewController updateMetrics]
  -[GKCollectionViewController viewWillDisappear:]
  -[GKCollectionViewController hasLoaded]
  -[GKCollectionViewController viewLayoutMarginsDidChange]
  -[GKCollectionViewController previousOrientation]
  -[GKCollectionViewController searchBarCancelButtonClicked:]
  -[GKCollectionViewController traitCollectionDidChange:]
  -[GKCollectionViewController searchBarSearchButtonClicked:]
  -[GKCollectionViewController setColorPalette:]
  -[GKCollectionViewController configureDataSource]
  -[GKCollectionViewController invalidateSearch]
  -[GKCollectionViewController currentSearchText]
  -[GKCollectionViewController setCurrentSearchText:]
  -[GKCollectionViewController loadingState]
  -[GKCollectionViewController stateWillChange]
  -[GKCollectionViewController stateDidChange]
  -[GKCollectionViewController didEnterLoadingState]
  -[GKCollectionViewController didExitLoadingState]
  -[GKCollectionViewController didEnterNoContentState]
  -[GKCollectionViewController didEnterErrorState]
  -[GKCollectionViewController refreshContentsForDataType:userInfo:updateNotifier:]
  -[GKCollectionViewController dataSource:didInsertItemsAtIndexPaths:]
  -[GKCollectionViewController dataSource:didRemoveItemsAtIndexPaths:]
  -[GKCollectionViewController dataSource:didRefreshItemsAtIndexPaths:]
  -[GKCollectionViewController dataSource:didMoveItemAtIndexPath:toIndexPath:]
  -[GKCollectionViewController dataSource:didInsertSections:]
  -[GKCollectionViewController dataSource:didRemoveSections:]
  -[GKCollectionViewController dataSource:didRefreshSections:]
  -[GKCollectionViewController dataSource:didMoveSection:toSection:]
  -[GKCollectionViewController dataSourceDidReloadData:]
  -[GKCollectionViewController dataSource:performBatchUpdate:complete:]
  -[GKCollectionViewController _gkRecursiveDescription]
  -[GKCollectionViewController swipeToDeleteCell:]
  -[GKCollectionViewController willDismissActionSheetFromCell:]
  -[GKCollectionViewController didEnterLoadedState]
  -[GKCollectionViewController didExitLoadedState]
  -[GKCollectionViewController loadingMachine]
  -[GKCollectionViewController setLoadingMachine:]
  -[GKCollectionViewController loadingIndicatorView]
  -[GKCollectionViewController setLoadingIndicatorView:]
  -[GKCollectionViewController didEnterRefreshingState]
  -[GKCollectionViewController didExitRefreshingState]
  -[GKCollectionViewController startLoadingIndicator]
  -[GKCollectionViewController stopLoadingIndicator]
  -[GKCollectionViewController configureViewFactories]
  -[GKCollectionViewController clearButtonPressed:]
  -[GKCollectionViewController _reallyStartLoadingIndicator]
  -[GKCollectionViewController dataSource:didUpdatePlaceholderVisibility:]
  -[GKCollectionViewController dataSourceDidMoveSectionsWithItems:]
  -[GKCollectionViewController updateLayoutGuideOffsets]
  -[GKCollectionViewController updateSelectionHighlight]
  -[GKCollectionViewController nearestSelectableIndexPath:]
  -[GKCollectionViewController _systemContentSizeSettingDidChange]
  -[GKCollectionViewController shouldSlideInContents]
  -[GKCollectionViewController updateDynamicColumnCountsForViewSize:]
  -[GKCollectionViewController defaultColorPalette]
  -[GKCollectionViewController currentSearchTerms]
  -[GKCollectionViewController _gkSetContentsNeedUpdateWithHandler:]
  -[GKCollectionViewController _finishUpdates:withCompletionHandler:]
  -[GKCollectionViewController _applyUpdates:withCompletionHandler:]
  -[GKCollectionViewController _loadDataWithCompletionHandlerAndError:]
  -[GKCollectionViewController loadDataWithCompletionHandlerAndError:]
  -[GKCollectionViewController _gkRefreshContentsForDataType:userInfo:]
  -[GKCollectionViewController _gkShouldRefreshContentsForDataType:userInfo:]
  -[GKCollectionViewController didTouchShowMore:]
  -[GKCollectionViewController footerViewAboveShowMoreViewAtIndexPath:]
  -[GKCollectionViewController showMoreTextMarginAtIndexPath:]
  -[GKCollectionViewController applyShowMoreLayoutAttributesForShowMoreView:atIndexPath:]
  -[GKCollectionViewController stateDidChangeFromNoContentStateToLoadingState]
  -[GKCollectionViewController stateDidChangeFromErrorStateToLoadingState]
  -[GKCollectionViewController stateDidChangeFromLoadedStateToLoadingState]
  -[GKCollectionViewController stateDidChangeFromNilToLoadingState]
  -[GKCollectionViewController didExitNoContentState]
  -[GKCollectionViewController didExitErrorState]
  -[GKCollectionViewController stopLoadingIndicatorWithoutAnimation]
  -[GKCollectionViewController setIsReadyToDisplayData:]
  -[GKCollectionViewController didBecomeReadyToDisplayData]
  -[GKCollectionViewController completeWhenReadyToDisplayData:]
  -[GKCollectionViewController slideInContents]
  -[GKCollectionViewController addPlaceholderViewToView:]
  -[GKCollectionViewController showPlaceholderWithTitle:message:buttonTitle:animated:block:]
  -[GKCollectionViewController hidePlaceholderAnimated:]
  -[GKCollectionViewController didDisplayData]
  -[GKCollectionViewController clearSelectionHighlight]
  -[GKCollectionViewController setShouldSlideInContents:]
  -[GKCollectionViewController showSupplementaryViewsWhileLoading]
  -[GKCollectionViewController setShowSupplementaryViewsWhileLoading:]
  -[GKCollectionViewController readyToDisplayData]
  -[GKCollectionViewController placeholderNavigationController]
  -[GKCollectionViewController setPlaceholderNavigationController:]
  -[GKCollectionViewController activeSearchBar]
  -[GKCollectionViewController setActiveSearchBar:]
  -[GKCollectionViewController setPreviousOrientation:]
  -[GKCollectionViewController hasViewFactories]
  -[GKCollectionViewController setHasViewFactories:]
  -[GKCollectionViewController didSlideIn]
  -[GKCollectionViewController setDidSlideIn:]
  -[GKCollectionViewController appearCount]
  -[GKCollectionViewController setAppearCount:]
  -[GKCollectionViewController reusableViewsIHaveSeen]
  -[GKCollectionViewController setReusableViewsIHaveSeen:]
  -[GKCollectionViewController batchUpdateQueue]
  -[GKCollectionViewController setBatchUpdateQueue:]
  -[GKCollectionViewController batchUpdateCount]
  -[GKCollectionViewController setBatchUpdateCount:]
  -[GKCollectionViewController currentUpdateID]
  -[GKCollectionViewController setCurrentUpdateID:]
  -[GKCollectionViewController swipeStateMachine]
  -[GKCollectionViewController setSwipeStateMachine:]
  -[GKCollectionViewController shutActionPaneAnimated:]
  -[GKCollectionViewController setSkipLoadAfterViewDidLoad:]
  -[GKCollectionViewController skipLoadAfterViewDidLoad]
  -[GKCollectionViewController showCollectionView]


GKStatusCell : GKCollectionViewCell
 @property  UILabel *statusLabel

  // instance methods
  -[GKStatusCell setStatus:]
  -[GKStatusCell .cxx_destruct]
  -[GKStatusCell prepareForReuse]
  -[GKStatusCell initWithFrame:]
  -[GKStatusCell statusLabel]
  -[GKStatusCell setStatusLabel:]
  -[GKStatusCell canRemoveItem]


GKOnboardingMetricsHandler : NSObject
 @property  double analyticsStartTime
 @property  GKReporter *reporter
 @property  NSString *refApp

  // instance methods
  -[GKOnboardingMetricsHandler reporter]
  -[GKOnboardingMetricsHandler .cxx_destruct]
  -[GKOnboardingMetricsHandler setReporter:]
  -[GKOnboardingMetricsHandler initWithReporter:refApp:]
  -[GKOnboardingMetricsHandler onboardingDidBegin]
  -[GKOnboardingMetricsHandler onboardingDidEnd]
  -[GKOnboardingMetricsHandler reportEventForOnboardingFlowAction:]
  -[GKOnboardingMetricsHandler analyticsStartTime]
  -[GKOnboardingMetricsHandler setAnalyticsStartTime:]
  -[GKOnboardingMetricsHandler refApp]
  -[GKOnboardingMetricsHandler setRefApp:]


GKCenteringScrollView : UIScrollView
 @property  UIView *contentView
 @property  UIView *footerView

  // instance methods
  -[GKCenteringScrollView contentView]
  -[GKCenteringScrollView setFooterView:]
  -[GKCenteringScrollView footerView]
  -[GKCenteringScrollView .cxx_destruct]
  -[GKCenteringScrollView layoutSubviews]
  -[GKCenteringScrollView setContentView:]
  -[GKCenteringScrollView centerContentViewIfDesirable]


GKDashboardHostViewController : GKExtensionRemoteViewController <GKGameCenterDashboardServiceProtocol>
 @property  NSObject *dashboardAssetController
 @property  GKGameCenterViewController *delegate
 @property  GKGame *game
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[GKDashboardHostViewController dismissAutomaticallyAfterExtensionCompletion]
  +[GKDashboardHostViewController dashboardExtension]

  // instance methods
  -[GKDashboardHostViewController setDelegate:]
  -[GKDashboardHostViewController delegate]
  -[GKDashboardHostViewController initWithNibName:bundle:]
  -[GKDashboardHostViewController .cxx_destruct]
  -[GKDashboardHostViewController viewWillAppear:]
  -[GKDashboardHostViewController viewDidDisappear:]
  -[GKDashboardHostViewController messageFromExtension:]
  -[GKDashboardHostViewController extensionIsCanceling]
  -[GKDashboardHostViewController extensionIsFinishing]
  -[GKDashboardHostViewController finishWithMatch:]
  -[GKDashboardHostViewController playerQuitMatch:]
  -[GKDashboardHostViewController extensionObjectProxy]
  -[GKDashboardHostViewController hostDidChangeViewState:]
  -[GKDashboardHostViewController hostDidChangeLeaderboardIdentifier:]
  -[GKDashboardHostViewController hostDidChangeLeaderboardTimeScope:]
  -[GKDashboardHostViewController hostDidChangeLeaderboardPlayerScope:]
  -[GKDashboardHostViewController hostSupportsShowingPlayForChallenge:]
  -[GKDashboardHostViewController hostSupportsShowingPlayForTurnBasedMatch:]
  -[GKDashboardHostViewController hostSupportsShowingQuitForTurnBasedMatch:]
  -[GKDashboardHostViewController playPressedForChallenge:]
  -[GKDashboardHostViewController dashboardAssetController]
  -[GKDashboardHostViewController setDashboardAssetController:]


GKDashboardExtensionHostContext : GKExtensionHostContext <GKGameCenterDashboardHostProtocol>
 @property  GKGame *game
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[GKDashboardExtensionHostContext _extensionAuxiliaryHostProtocol]
  +[GKDashboardExtensionHostContext _extensionAuxiliaryVendorProtocol]

  // instance methods
  -[GKDashboardExtensionHostContext requestDashboardLogoImageWithHandler:]
  -[GKDashboardExtensionHostContext requestImagesForLeaderboardSetsWithHandler:]
  -[GKDashboardExtensionHostContext requestImagesForLeaderboardsInSet:handler:]
  -[GKDashboardExtensionHostContext getMethodsImplementedByChallengeEventHandlerDelegate:]


GKMoreExistSectionFooterView : UICollectionReusableView
 @property  GKLabel *label
 @property  NSString *text

  // class methods
  +[GKMoreExistSectionFooterView defaultHeight]
  +[GKMoreExistSectionFooterView requiresConstraintBasedLayout]

  // instance methods
  -[GKMoreExistSectionFooterView text]
  -[GKMoreExistSectionFooterView setLabel:]
  -[GKMoreExistSectionFooterView .cxx_destruct]
  -[GKMoreExistSectionFooterView label]
  -[GKMoreExistSectionFooterView initWithFrame:]
  -[GKMoreExistSectionFooterView setText:]


GKButtonView : UICollectionReusableView
 @property  UIButton *button
 @property  NSMutableArray *buttonConstraints
 @property  GKCollectionViewDataSource *dataSource
 @property  SEL action

  // class methods
  +[GKButtonView requiresConstraintBasedLayout]
  +[GKButtonView registerSupplementaryViewClassesForKind:withCollectionView:]

  // instance methods
  -[GKButtonView dataSource]
  -[GKButtonView button]
  -[GKButtonView updateConstraints]
  -[GKButtonView .cxx_destruct]
  -[GKButtonView setButtonConstraints:]
  -[GKButtonView action]
  -[GKButtonView buttonConstraints]
  -[GKButtonView setButton:]
  -[GKButtonView setDataSource:]
  -[GKButtonView initWithFrame:]
  -[GKButtonView applyLayoutAttributes:]
  -[GKButtonView setAction:]
  -[GKButtonView buttonPressed:]


GKHeaderWithUnderlineView : UICollectionReusableView
 @property  BOOL isPinned
 @property  UIView *pinnedBackdropView
 @property  BOOL didSetupConstraints
 @property  UIView *underlineView
 @property  UIImageView *shadowView
 @property  BOOL underlineHasRightMargin
 @property  NSMutableDictionary *metrics
 @property  NSArray *gutterConstraints
 @property  double leadingMargin
 @property  double trailingMargin

  // class methods
  +[GKHeaderWithUnderlineView initialize]
  +[GKHeaderWithUnderlineView requiresConstraintBasedLayout]
  +[GKHeaderWithUnderlineView padMetrics]
  +[GKHeaderWithUnderlineView phoneMetrics]
  +[GKHeaderWithUnderlineView macMetrics]

  // instance methods
  -[GKHeaderWithUnderlineView isPinned]
  -[GKHeaderWithUnderlineView allowsVibrancy]
  -[GKHeaderWithUnderlineView setTrailingMargin:]
  -[GKHeaderWithUnderlineView setShadowView:]
  -[GKHeaderWithUnderlineView updateConstraints]
  -[GKHeaderWithUnderlineView shadowView]
  -[GKHeaderWithUnderlineView setLeadingMargin:]
  -[GKHeaderWithUnderlineView .cxx_destruct]
  -[GKHeaderWithUnderlineView leadingMargin]
  -[GKHeaderWithUnderlineView trailingMargin]
  -[GKHeaderWithUnderlineView metrics]
  -[GKHeaderWithUnderlineView setMetrics:]
  -[GKHeaderWithUnderlineView initWithFrame:]
  -[GKHeaderWithUnderlineView applyLayoutAttributes:]
  -[GKHeaderWithUnderlineView drawsUnderline]
  -[GKHeaderWithUnderlineView setIsPinned:]
  -[GKHeaderWithUnderlineView updateGutterConstraints]
  -[GKHeaderWithUnderlineView establishConstraints]
  -[GKHeaderWithUnderlineView underlineView]
  -[GKHeaderWithUnderlineView setUnderlineView:]
  -[GKHeaderWithUnderlineView setUnderlineHasRightMargin:]
  -[GKHeaderWithUnderlineView pinningStateChangedTo:]
  -[GKHeaderWithUnderlineView underlineHasRightMargin]
  -[GKHeaderWithUnderlineView gutterConstraints]
  -[GKHeaderWithUnderlineView setGutterConstraints:]
  -[GKHeaderWithUnderlineView pinnedBackdropView]
  -[GKHeaderWithUnderlineView setPinnedBackdropView:]
  -[GKHeaderWithUnderlineView didSetupConstraints]
  -[GKHeaderWithUnderlineView setDidSetupConstraints:]


GKSegmentedSectionHeaderView : GKSegmentedSelectorView
 @property  unsigned long sectionIndex

  // instance methods
  -[GKSegmentedSectionHeaderView prepareForReuse]
  -[GKSegmentedSectionHeaderView applyLayoutAttributes:]
  -[GKSegmentedSectionHeaderView setTitles:]
  -[GKSegmentedSectionHeaderView sectionIndex]
  -[GKSegmentedSectionHeaderView setSectionIndex:]


GKSectionSeparatorView : UICollectionReusableView
 @property  UIView *underlineView

  // class methods
  +[GKSectionSeparatorView requiresConstraintBasedLayout]

  // instance methods
  -[GKSectionSeparatorView .cxx_destruct]
  -[GKSectionSeparatorView initWithFrame:]
  -[GKSectionSeparatorView underlineView]
  -[GKSectionSeparatorView setUnderlineView:]


GKTournamentViewRequest : NSObject <NSSecureCoding>
 @property  GKTournament *tournament
 @property  long long playerGroup
 @property  long long viewType
 @property  long long appearanceStyle
 @property  UIColor *tintColor
 @property  UIColor *secondaryTintColor
 @property  NSString *tournamentDefinitionID

  // class methods
  +[GKTournamentViewRequest supportsSecureCoding]

  // instance methods
  -[GKTournamentViewRequest appearanceStyle]
  -[GKTournamentViewRequest setAppearanceStyle:]
  -[GKTournamentViewRequest encodeWithCoder:]
  -[GKTournamentViewRequest .cxx_destruct]
  -[GKTournamentViewRequest secondaryTintColor]
  -[GKTournamentViewRequest tintColor]
  -[GKTournamentViewRequest viewType]
  -[GKTournamentViewRequest setSecondaryTintColor:]
  -[GKTournamentViewRequest setTintColor:]
  -[GKTournamentViewRequest initWithCoder:]
  -[GKTournamentViewRequest setViewType:]
  -[GKTournamentViewRequest initWithViewType:tournamentDefinitionID:]
  -[GKTournamentViewRequest tournament]
  -[GKTournamentViewRequest setTournament:]
  -[GKTournamentViewRequest playerGroup]
  -[GKTournamentViewRequest setPlayerGroup:]
  -[GKTournamentViewRequest tournamentDefinitionID]
  -[GKTournamentViewRequest setTournamentDefinitionID:]


GKLoadingViewController : UIViewController <_GKStateMachineDelegate>
 @property  GKLoadableContentStateMachine *loadingMachine
 @property  UIActivityIndicatorView *activityIndicator
 @property  NSString *loadingState
 @property  NSArray *viewsToHideWhileLoading
 @property  double loadingIndicatorDelay
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKLoadingViewController activityIndicator]
  -[GKLoadingViewController initWithNibName:bundle:]
  -[GKLoadingViewController .cxx_destruct]
  -[GKLoadingViewController setActivityIndicator:]
  -[GKLoadingViewController loadingState]
  -[GKLoadingViewController setLoadingState:]
  -[GKLoadingViewController didEnterLoadingState]
  -[GKLoadingViewController didExitLoadingState]
  -[GKLoadingViewController setViewsToHideWhileLoading:]
  -[GKLoadingViewController didEnterLoadedState]
  -[GKLoadingViewController didExitLoadedState]
  -[GKLoadingViewController viewsToHideWhileLoading]
  -[GKLoadingViewController loadingIndicatorDelay]
  -[GKLoadingViewController setLoadingIndicatorDelay:]
  -[GKLoadingViewController loadingMachine]
  -[GKLoadingViewController setLoadingMachine:]
  -[GKLoadingViewController didEnterRefreshingState]
  -[GKLoadingViewController didExitRefreshingState]
  -[GKLoadingViewController setViewsToHideHidden:]
  -[GKLoadingViewController showLoadingIndicator]


GKRemoteUIController : NSObject <RUILoaderDelegate, RUIObjectModelDelegate, GKRemoteUIAuxiliaryViewDelegate>
 @property  NSMutableArray *objectModels
 @property  UINavigationController *navigationController
 @property  NSArray *staticViewControllers
 @property  RUILoader *loader
 @property  GKRemoteUIController *presentedRemoteUIController
 @property  BOOL previousUseCustomBackButtonActionValue
 @property  NSError *error
 @property  BOOL loading
 @property  BOOL loadingInitialUI
 @property  NSURL *url
 @property  @? loadHandler
 @property  BOOL userInteractionEnabled
 @property  int layoutStyle
 @property  BOOL complete
 @property  NSDictionary *authInfo
 @property  NSString *bagKey
 @property  NSURL *fallbackURL
 @property  NSString *authToken
 @property  NSData *pushToken
 @property  NSString *appleID
 @property  NSString *altDSID
 @property  NSString *playerID
 @property  NSString *firstName
 @property  NSString *lastName
 @property  NSString *alias
 @property  BOOL isServerAuthenticated
 @property  GKLocalPlayer *playerForRemoteUI
 @property  @? completionHandler
 @property  BOOL shouldApplyGameCenterTheme
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[GKRemoteUIController remoteUIController]

  // instance methods
  -[GKRemoteUIController pushToken]
  -[GKRemoteUIController setLoading:]
  -[GKRemoteUIController setFirstName:]
  -[GKRemoteUIController setPushToken:]
  -[GKRemoteUIController altDSID]
  -[GKRemoteUIController setAltDSID:]
  -[GKRemoteUIController navigationController]
  -[GKRemoteUIController viewControllers]
  -[GKRemoteUIController firstName]
  -[GKRemoteUIController layoutStyle]
  -[GKRemoteUIController fallbackURL]
  -[GKRemoteUIController setLayoutStyle:]
  -[GKRemoteUIController setUrl:]
  -[GKRemoteUIController lastName]
  -[GKRemoteUIController complete]
  -[GKRemoteUIController setUserInteractionEnabled:]
  -[GKRemoteUIController setAuthToken:]
  -[GKRemoteUIController isUserInteractionEnabled]
  -[GKRemoteUIController error]
  -[GKRemoteUIController authToken]
  -[GKRemoteUIController bagKey]
  -[GKRemoteUIController .cxx_destruct]
  -[GKRemoteUIController setNavigationController:]
  -[GKRemoteUIController setError:]
  -[GKRemoteUIController setAlias:]
  -[GKRemoteUIController playerID]
  -[GKRemoteUIController alias]
  -[GKRemoteUIController appleID]
  -[GKRemoteUIController authInfo]
  -[GKRemoteUIController url]
  -[GKRemoteUIController loading]
  -[GKRemoteUIController setLastName:]
  -[GKRemoteUIController setComplete:]
  -[GKRemoteUIController setAppleID:]
  -[GKRemoteUIController setCompletionHandler:]
  -[GKRemoteUIController setAuthInfo:]
  -[GKRemoteUIController completionHandler]
  -[GKRemoteUIController setPlayerID:]
  -[GKRemoteUIController init]
  -[GKRemoteUIController finishLoadingWithError:]
  -[GKRemoteUIController loader]
  -[GKRemoteUIController setLoader:]
  -[GKRemoteUIController loadHandler]
  -[GKRemoteUIController setLoadHandler:]
  -[GKRemoteUIController fireCompletionHandler]
  -[GKRemoteUIController postBodyForInitialLoad]
  -[GKRemoteUIController takeValuesFromClientInfo:withCompletionHandler:]
  -[GKRemoteUIController updatePostbackDictionary:withHandler:]
  -[GKRemoteUIController auxiliaryView:pressedLink:attributes:]
  -[GKRemoteUIController auxiliaryView:pressedButton:attributes:]
  -[GKRemoteUIController objectModelDidChange:]
  -[GKRemoteUIController shouldApplyGameCenterTheme]
  -[GKRemoteUIController setShouldApplyGameCenterTheme:]
  -[GKRemoteUIController preferredLayoutStyle]
  -[GKRemoteUIController loader:didFailWithError:]
  -[GKRemoteUIController loader:receivedObjectModel:actionSignal:]
  -[GKRemoteUIController parentViewControllerForObjectModel:]
  -[GKRemoteUIController viewControllerForAlertPresentation]
  -[GKRemoteUIController objectModel:elementDidChange:]
  -[GKRemoteUIController objectModel:shouldShowModalHTMLViewWithURL:]
  -[GKRemoteUIController objectModel:page:toggledEditing:]
  -[GKRemoteUIController objectModel:tableHeaderViewForAttributes:page:]
  -[GKRemoteUIController objectModel:tableFooterViewForAttributes:page:]
  -[GKRemoteUIController objectModel:configureTableSection:page:]
  -[GKRemoteUIController objectModel:configureTableView:page:]
  -[GKRemoteUIController objectModel:configureTableRow:page:]
  -[GKRemoteUIController objectModel:customHeaderClassForSection:]
  -[GKRemoteUIController objectModel:customFooterClassForSection:]
  -[GKRemoteUIController objectModelPressedBack:]
  -[GKRemoteUIController objectModel:pressedLink:httpMethod:]
  -[GKRemoteUIController initWithObjectModel:]
  -[GKRemoteUIController updateAccountAndMarkComplete:completionHandler:]
  -[GKRemoteUIController presentInParentNavigationController:animated:]
  -[GKRemoteUIController addThemeInfoToAttributes:]
  -[GKRemoteUIController configureFromBagKey:player:withCompletionHandler:]
  -[GKRemoteUIController postbackDataForDictionary:]
  -[GKRemoteUIController loadInitialRemoteUIWithHandler:]
  -[GKRemoteUIController loadInitialRemoteUIForPlayer:handler:]
  -[GKRemoteUIController loadURL:forPlayer:postBody:]
  -[GKRemoteUIController loadURL:postBody:]
  -[GKRemoteUIController didLoadURL:data:error:]
  -[GKRemoteUIController loadURL:postData:]
  -[GKRemoteUIController loadURL:forPlayer:postData:]
  -[GKRemoteUIController indexOfVisiblePage]
  -[GKRemoteUIController pushObjectModel:animated:]
  -[GKRemoteUIController popObjectModelAnimated:]
  -[GKRemoteUIController replaceObjectModelAtIndex:withObjectObjectModel:]
  -[GKRemoteUIController presentObjectModel:animated:]
  -[GKRemoteUIController performAction:withObjectModel:]
  -[GKRemoteUIController objectModels]
  -[GKRemoteUIController setObjectModels:]
  -[GKRemoteUIController staticViewControllers]
  -[GKRemoteUIController setStaticViewControllers:]
  -[GKRemoteUIController presentedRemoteUIController]
  -[GKRemoteUIController setPresentedRemoteUIController:]
  -[GKRemoteUIController previousUseCustomBackButtonActionValue]
  -[GKRemoteUIController setPreviousUseCustomBackButtonActionValue:]
  -[GKRemoteUIController loadingInitialUI]
  -[GKRemoteUIController setLoadingInitialUI:]
  -[GKRemoteUIController isServerAuthenticated]
  -[GKRemoteUIController setIsServerAuthenticated:]
  -[GKRemoteUIController playerForRemoteUI]
  -[GKRemoteUIController setPlayerForRemoteUI:]


GKCollectionMultiDataSource : GKCollectionDataSource
 @property  NSArray *dataSources

  // instance methods
  -[GKCollectionMultiDataSource collectionView:cellForItemAtIndexPath:]
  -[GKCollectionMultiDataSource collectionView:viewForSupplementaryElementOfKind:atIndexPath:]
  -[GKCollectionMultiDataSource collectionView:didDeselectItemAtIndexPath:]
  -[GKCollectionMultiDataSource collectionView:shouldSelectItemAtIndexPath:]
  -[GKCollectionMultiDataSource numberOfSectionsInCollectionView:]
  -[GKCollectionMultiDataSource itemCount]
  -[GKCollectionMultiDataSource collectionView:layout:sizeForItemAtIndexPath:]
  -[GKCollectionMultiDataSource collectionView:canFocusItemAtIndexPath:]
  -[GKCollectionMultiDataSource .cxx_destruct]
  -[GKCollectionMultiDataSource collectionView:layout:referenceSizeForFooterInSection:]
  -[GKCollectionMultiDataSource collectionView:layout:referenceSizeForHeaderInSection:]
  -[GKCollectionMultiDataSource dataSources]
  -[GKCollectionMultiDataSource collectionView:didSelectItemAtIndexPath:]
  -[GKCollectionMultiDataSource collectionView:numberOfItemsInSection:]
  -[GKCollectionMultiDataSource loadDataWithCompletionHandler:]
  -[GKCollectionMultiDataSource setDataSources:]
  -[GKCollectionMultiDataSource collectionView:didFocusItemAtIndexPath:]
  -[GKCollectionMultiDataSource collectionView:didUnfocusItemAtIndexPath:]
  -[GKCollectionMultiDataSource preferredCollectionHeight]
  -[GKCollectionMultiDataSource setupCollectionView:]
  -[GKCollectionMultiDataSource itemForIndexPath:]
  -[GKCollectionMultiDataSource dataSourceForIndexPath:]
  -[GKCollectionMultiDataSource itemCountInSection:]


GKTurnBasedMatchmakerHostViewController : GKExtensionRemoteViewController <GKTurnBasedMatchmakerHostProtocol, GKTurnBasedMatchmakerServiceProtocol>
 @property  GKTurnBasedMatchmakerViewController *delegate
 @property  GKGame *game
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[GKTurnBasedMatchmakerHostViewController dismissAutomaticallyAfterExtensionCompletion]
  +[GKTurnBasedMatchmakerHostViewController turnBasedMatchmakerExtension]

  // instance methods
  -[GKTurnBasedMatchmakerHostViewController setDelegate:]
  -[GKTurnBasedMatchmakerHostViewController delegate]
  -[GKTurnBasedMatchmakerHostViewController .cxx_destruct]
  -[GKTurnBasedMatchmakerHostViewController messageFromExtension:]
  -[GKTurnBasedMatchmakerHostViewController extensionIsCanceling]
  -[GKTurnBasedMatchmakerHostViewController setShowExistingMatches:]
  -[GKTurnBasedMatchmakerHostViewController extensionObjectProxy]
  -[GKTurnBasedMatchmakerHostViewController setMatchRequestInternal:]
  -[GKTurnBasedMatchmakerHostViewController setShowPlay:]
  -[GKTurnBasedMatchmakerHostViewController setShowQuit:]
  -[GKTurnBasedMatchmakerHostViewController refreshMatches]


GKTurnBasedMatchmakerExtensionHostContext : GKExtensionHostContext <GKTurnBasedMatchmakerHostProtocol>
 @property  GKGame *game
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[GKTurnBasedMatchmakerExtensionHostContext _extensionAuxiliaryHostProtocol]
  +[GKTurnBasedMatchmakerExtensionHostContext _extensionAuxiliaryVendorProtocol]


GKDashboardLeaderboardScoreDataSource : GKCollectionDataSource
 @property  GKGameRecord *gameRecord
 @property  NSArray *scores
 @property  long long visibleItemCount
 @property  BOOL needsShowcaseCell
 @property  BOOL needsShowMoreCell
 @property  UIFont *sectionHeaderFont
 @property  BOOL showingMoreScores
 @property  BOOL forceInitialShowMore
 @property  GKLeaderboard *leaderboard
 @property  long long playerScope
 @property  long long timeScope
 @property  id timeScopeTarget
 @property  SEL timeScopeAction

  // instance methods
  -[GKDashboardLeaderboardScoreDataSource scores]
  -[GKDashboardLeaderboardScoreDataSource collectionView:cellForItemAtIndexPath:]
  -[GKDashboardLeaderboardScoreDataSource collectionView:viewForSupplementaryElementOfKind:atIndexPath:]
  -[GKDashboardLeaderboardScoreDataSource timeScope]
  -[GKDashboardLeaderboardScoreDataSource collectionView:shouldSelectItemAtIndexPath:]
  -[GKDashboardLeaderboardScoreDataSource numberOfSectionsInCollectionView:]
  -[GKDashboardLeaderboardScoreDataSource itemCount]
  -[GKDashboardLeaderboardScoreDataSource collectionView:layout:sizeForItemAtIndexPath:]
  -[GKDashboardLeaderboardScoreDataSource .cxx_destruct]
  -[GKDashboardLeaderboardScoreDataSource sectionHeaderFont]
  -[GKDashboardLeaderboardScoreDataSource collectionView:layout:referenceSizeForFooterInSection:]
  -[GKDashboardLeaderboardScoreDataSource collectionView:layout:referenceSizeForHeaderInSection:]
  -[GKDashboardLeaderboardScoreDataSource setScores:]
  -[GKDashboardLeaderboardScoreDataSource collectionView:didSelectItemAtIndexPath:]
  -[GKDashboardLeaderboardScoreDataSource setTimeScope:]
  -[GKDashboardLeaderboardScoreDataSource loadDataWithCompletionHandler:]
  -[GKDashboardLeaderboardScoreDataSource preferredCollectionHeight]
  -[GKDashboardLeaderboardScoreDataSource setupCollectionView:]
  -[GKDashboardLeaderboardScoreDataSource itemForIndexPath:]
  -[GKDashboardLeaderboardScoreDataSource sectionHeaderText]
  -[GKDashboardLeaderboardScoreDataSource leaderboard]
  -[GKDashboardLeaderboardScoreDataSource setLeaderboard:]
  -[GKDashboardLeaderboardScoreDataSource gameRecord]
  -[GKDashboardLeaderboardScoreDataSource setGameRecord:]
  -[GKDashboardLeaderboardScoreDataSource initWithGameRecord:leaderboard:]
  -[GKDashboardLeaderboardScoreDataSource setPlayerScope:]
  -[GKDashboardLeaderboardScoreDataSource playerScope]
  -[GKDashboardLeaderboardScoreDataSource sectionHeaderButtonPressed:]
  -[GKDashboardLeaderboardScoreDataSource showMoreInCollectionView:section:]
  -[GKDashboardLeaderboardScoreDataSource revealMoreItemsInCollectionView:section:completion:]
  -[GKDashboardLeaderboardScoreDataSource needsShowMoreCell]
  -[GKDashboardLeaderboardScoreDataSource isShowMoreIndexPath:]
  -[GKDashboardLeaderboardScoreDataSource isShowcaseIndexPath:]
  -[GKDashboardLeaderboardScoreDataSource hasFriendsButton]
  -[GKDashboardLeaderboardScoreDataSource needsShowcaseCell]
  -[GKDashboardLeaderboardScoreDataSource timeScopeTarget]
  -[GKDashboardLeaderboardScoreDataSource setTimeScopeTarget:]
  -[GKDashboardLeaderboardScoreDataSource timeScopeAction]
  -[GKDashboardLeaderboardScoreDataSource setTimeScopeAction:]
  -[GKDashboardLeaderboardScoreDataSource visibleItemCount]
  -[GKDashboardLeaderboardScoreDataSource setVisibleItemCount:]
  -[GKDashboardLeaderboardScoreDataSource isShowingMoreScores]
  -[GKDashboardLeaderboardScoreDataSource setShowingMoreScores:]
  -[GKDashboardLeaderboardScoreDataSource forceInitialShowMore]
  -[GKDashboardLeaderboardScoreDataSource setForceInitialShowMore:]


GKServiceViewController : GKNavigationController <GKExtensionProtocol, GKDaemonProxyDataUpdateDelegate, GKDashboardServiceInterface>
 @property  double statusBarHeight
 @property  UIViewController *privateViewController
 @property  GKGame *game
 @property  BOOL alwaysShowDoneButton
 @property  int hostPID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[GKServiceViewController _exportedInterface]
  +[GKServiceViewController _remoteViewControllerInterface]

  // instance methods
  -[GKServiceViewController statusBarHeight]
  -[GKServiceViewController setStatusBarHeight:]
  -[GKServiceViewController didRotateFromInterfaceOrientation:]
  -[GKServiceViewController pushViewController:animated:]
  -[GKServiceViewController alwaysShowDoneButton]
  -[GKServiceViewController viewDidAppear:]
  -[GKServiceViewController dealloc]
  -[GKServiceViewController hostPID]
  -[GKServiceViewController .cxx_destruct]
  -[GKServiceViewController viewWillAppear:]
  -[GKServiceViewController setHostPID:]
  -[GKServiceViewController setAlwaysShowDoneButton:]
  -[GKServiceViewController finish]
  -[GKServiceViewController observeValueForKeyPath:ofObject:change:context:]
  -[GKServiceViewController setViewControllers:animated:]
  -[GKServiceViewController viewDidDisappear:]
  -[GKServiceViewController refreshContentsForDataType:userInfo:]
  -[GKServiceViewController viewWillDisappear:]
  -[GKServiceViewController init]
  -[GKServiceViewController _statusBarHeightForCurrentInterfaceOrientation]
  -[GKServiceViewController game]
  -[GKServiceViewController setGame:]
  -[GKServiceViewController donePressed:]
  -[GKServiceViewController remoteViewControllerIsFinishing]
  -[GKServiceViewController remoteViewControllerIsCanceling]
  -[GKServiceViewController observedKeyPaths]
  -[GKServiceViewController nudge]
  -[GKServiceViewController messageFromClient:]
  -[GKServiceViewController setInitialState:withReply:]
  -[GKServiceViewController remoteViewControllerDidFinish]
  -[GKServiceViewController remoteViewControllerDidCancel]
  -[GKServiceViewController setValue:forKeyPath:withReply:]
  -[GKServiceViewController finishAndPlayChallenge:]
  -[GKServiceViewController finishWithTurnBasedMatch:]
  -[GKServiceViewController quitTurnBasedMatch:]
  -[GKServiceViewController dashboardDidChangeToViewState:]
  -[GKServiceViewController dashboardDidChangeToLeaderboardTimeScope:]
  -[GKServiceViewController dashboardDidChangeToLeaderboardPlayerScope:]
  -[GKServiceViewController dashboardDidChangeToLeaderboardIdentifier:]
  -[GKServiceViewController requestDashboardLogoImageWithHandler:]
  -[GKServiceViewController requestImagesForLeaderboardSetsWithHandler:]
  -[GKServiceViewController requestImagesForLeaderboardsInSet:handler:]
  -[GKServiceViewController _useBackdropViewForWindowBackground]
  -[GKServiceViewController constructPrivateViewController]
  -[GKServiceViewController shouldAnimatePresentationForPrivateViewController:]
  -[GKServiceViewController serviceViewControllerCreated:]
  -[GKServiceViewController cancelServiceViewController]
  -[GKServiceViewController privateViewController]
  -[GKServiceViewController presentInitialViewController:]
  -[GKServiceViewController resetPrivateViewController]
  -[GKServiceViewController performSelectorOnHostController:]
  -[GKServiceViewController performSelectorOnHostController:withObject:]
  -[GKServiceViewController performSelectorOnHostController:withObject:withObject:]
  -[GKServiceViewController _startObservingChangesToProperties]
  -[GKServiceViewController _stopObservingChangesToProperties]
  -[GKServiceViewController _addDoneButtonToViewController:]
  -[GKServiceViewController setPrivateViewController:]


GKLeaderboardCell : UICollectionViewCell
 @property  UIImageView *iconView
 @property  UILabel *titleLabel
 @property  UILabel *countLabel
 @property  UIView *overlayView
 @property  NSLayoutConstraint *iconContainerHeight
 @property  NSLayoutConstraint *minimumIconHeight
 @property  UIView *iconContainer
 @property  UIStackView *containerStackView
 @property  UIColor *titleLabelColor
 @property  UIVisualEffectView *effectView
 @property  NSArray *customBackgroundBlur
 @property  NSString *dataToken
 @property  NSString *bundleIdentifier
 @property  NSString *imageName
 @property  GKLeaderboardSet *leaderboardSet
 @property  GKLeaderboard *leaderboard
 @property  UIView *popoverSourceView

  // instance methods
  -[GKLeaderboardCell didUpdateFocusInContext:withAnimationCoordinator:]
  -[GKLeaderboardCell setTitleLabel:]
  -[GKLeaderboardCell updateLayout]
  -[GKLeaderboardCell canBecomeFocused]
  -[GKLeaderboardCell setImageName:]
  -[GKLeaderboardCell setSelected:]
  -[GKLeaderboardCell .cxx_destruct]
  -[GKLeaderboardCell imageName]
  -[GKLeaderboardCell setIconView:]
  -[GKLeaderboardCell overlayView]
  -[GKLeaderboardCell updateImage]
  -[GKLeaderboardCell setHighlighted:]
  -[GKLeaderboardCell setBundleIdentifier:]
  -[GKLeaderboardCell effectView]
  -[GKLeaderboardCell iconView]
  -[GKLeaderboardCell bundleIdentifier]
  -[GKLeaderboardCell setOverlayView:]
  -[GKLeaderboardCell awakeFromNib]
  -[GKLeaderboardCell setEffectView:]
  -[GKLeaderboardCell popoverSourceView]
  -[GKLeaderboardCell titleLabel]
  -[GKLeaderboardCell titleLabelColor]
  -[GKLeaderboardCell countLabel]
  -[GKLeaderboardCell setCountLabel:]
  -[GKLeaderboardCell setTitleLabelColor:]
  -[GKLeaderboardCell leaderboard]
  -[GKLeaderboardCell setLeaderboard:]
  -[GKLeaderboardCell setLeaderboardSet:]
  -[GKLeaderboardCell updateRank]
  -[GKLeaderboardCell updateOverlay]
  -[GKLeaderboardCell leaderboardSet]
  -[GKLeaderboardCell iconContainer]
  -[GKLeaderboardCell setIconContainer:]
  -[GKLeaderboardCell addVisualEffect]
  -[GKLeaderboardCell setupFallbackIcon]
  -[GKLeaderboardCell updateSummary]
  -[GKLeaderboardCell iconContainerHeight]
  -[GKLeaderboardCell setIconContainerHeight:]
  -[GKLeaderboardCell minimumIconHeight]
  -[GKLeaderboardCell setMinimumIconHeight:]
  -[GKLeaderboardCell containerStackView]
  -[GKLeaderboardCell setContainerStackView:]
  -[GKLeaderboardCell customBackgroundBlur]
  -[GKLeaderboardCell setCustomBackgroundBlur:]
  -[GKLeaderboardCell dataToken]
  -[GKLeaderboardCell setDataToken:]


GKTurnBasedParticipantsDataSource : GKBasicCollectionViewDataSource
 @property  GKTurnBasedMatch *match
 @property  NSString *sectionTitle

  // instance methods
  -[GKTurnBasedParticipantsDataSource collectionView:cellForItemAtIndexPath:]
  -[GKTurnBasedParticipantsDataSource setMatch:]
  -[GKTurnBasedParticipantsDataSource .cxx_destruct]
  -[GKTurnBasedParticipantsDataSource match]
  -[GKTurnBasedParticipantsDataSource sectionTitle]
  -[GKTurnBasedParticipantsDataSource configureCollectionView:]
  -[GKTurnBasedParticipantsDataSource refreshContentsForDataType:userInfo:updateNotifier:]


GKPlaceholderContentStateMachine : _GKStateMachine
 @property  BOOL isInPlaceholderState

  // instance methods
  -[GKPlaceholderContentStateMachine isInPlaceholderState]
  -[GKPlaceholderContentStateMachine init]


GKPlaceholderView : _UIContentUnavailableView
  // class methods
  +[GKPlaceholderView initialize]
  +[GKPlaceholderView placeholderViewWithTitle:message:frame:]

  // instance methods
  -[GKPlaceholderView pointInside:withEvent:]


GKCollectionViewPlaceholderView : UICollectionReusableView <_GKStateMachineDelegate>
 @property  GKPlaceholderView *placeholderView
 @property  UIActivityIndicatorView *loadingIndicatorView
 @property  GKPlaceholderContentStateMachine *loadingMachine
 @property  NSArray *cachedConstraints
 @property  NSString *loadingState
 @property  NSString *noContentTitle
 @property  NSString *noContentMessage
 @property  NSString *noContentButtonTitle
 @property  id noContentButtonTarget
 @property  SEL noContentButtonAction
 @property  NSString *errorTitle
 @property  NSString *errorMessage
 @property  long long alignment
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKCollectionViewPlaceholderView alignment]
  -[GKCollectionViewPlaceholderView updateConstraints]
  -[GKCollectionViewPlaceholderView setPlaceholderView:]
  -[GKCollectionViewPlaceholderView dealloc]
  -[GKCollectionViewPlaceholderView .cxx_destruct]
  -[GKCollectionViewPlaceholderView setAlignment:]
  -[GKCollectionViewPlaceholderView placeholderView]
  -[GKCollectionViewPlaceholderView errorMessage]
  -[GKCollectionViewPlaceholderView initWithFrame:]
  -[GKCollectionViewPlaceholderView loadingState]
  -[GKCollectionViewPlaceholderView errorTitle]
  -[GKCollectionViewPlaceholderView setErrorTitle:]
  -[GKCollectionViewPlaceholderView setErrorMessage:]
  -[GKCollectionViewPlaceholderView setLoadingState:]
  -[GKCollectionViewPlaceholderView didEnterLoadingState]
  -[GKCollectionViewPlaceholderView didExitLoadingState]
  -[GKCollectionViewPlaceholderView didEnterNoContentState]
  -[GKCollectionViewPlaceholderView didEnterErrorState]
  -[GKCollectionViewPlaceholderView noContentTitle]
  -[GKCollectionViewPlaceholderView setNoContentTitle:]
  -[GKCollectionViewPlaceholderView noContentMessage]
  -[GKCollectionViewPlaceholderView setNoContentMessage:]
  -[GKCollectionViewPlaceholderView noContentButtonTitle]
  -[GKCollectionViewPlaceholderView setNoContentButtonTitle:]
  -[GKCollectionViewPlaceholderView noContentButtonTarget]
  -[GKCollectionViewPlaceholderView setNoContentButtonTarget:]
  -[GKCollectionViewPlaceholderView noContentButtonAction]
  -[GKCollectionViewPlaceholderView setNoContentButtonAction:]
  -[GKCollectionViewPlaceholderView loadingMachine]
  -[GKCollectionViewPlaceholderView setLoadingMachine:]
  -[GKCollectionViewPlaceholderView loadingIndicatorView]
  -[GKCollectionViewPlaceholderView setLoadingIndicatorView:]
  -[GKCollectionViewPlaceholderView didExitNoContentState]
  -[GKCollectionViewPlaceholderView didExitErrorState]
  -[GKCollectionViewPlaceholderView delayedShowLoadingIndicator]
  -[GKCollectionViewPlaceholderView buttonPressed]
  -[GKCollectionViewPlaceholderView cachedConstraints]
  -[GKCollectionViewPlaceholderView setCachedConstraints:]


GKLeaderboardCollectionViewFlowLayout : UICollectionViewFlowLayout
  // instance methods
  -[GKLeaderboardCollectionViewFlowLayout flipsHorizontallyInOppositeLayoutDirection]


GKLeaderboardListViewController : GKLoadingViewController
 @property  UICollectionView *collectionView
 @property  BOOL showingLeaderboardSets
 @property  GKNoContentView *noContentView
 @property  BOOL canSegueToScores
 @property  GKGameLayerCollectionDataSource *dataSource
 @property  NSDictionary *leaderboardSetAssetNames
 @property  NSDictionary *leaderboardAssetNames
 @property  long long preferredLargeTitleDisplayMode

  // instance methods
  -[GKLeaderboardListViewController setCollectionView:]
  -[GKLeaderboardListViewController clearSelection]
  -[GKLeaderboardListViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[GKLeaderboardListViewController contentScrollView]
  -[GKLeaderboardListViewController dataSource]
  -[GKLeaderboardListViewController setHorizontalLayout:]
  -[GKLeaderboardListViewController updateLayout]
  -[GKLeaderboardListViewController viewDidAppear:]
  -[GKLeaderboardListViewController isLoading]
  -[GKLeaderboardListViewController dealloc]
  -[GKLeaderboardListViewController .cxx_destruct]
  -[GKLeaderboardListViewController collectionView]
  -[GKLeaderboardListViewController viewDidLoad]
  -[GKLeaderboardListViewController viewWillAppear:]
  -[GKLeaderboardListViewController viewDidLayoutSubviews]
  -[GKLeaderboardListViewController title]
  -[GKLeaderboardListViewController observeValueForKeyPath:ofObject:change:context:]
  -[GKLeaderboardListViewController hasData]
  -[GKLeaderboardListViewController setDataSource:]
  -[GKLeaderboardListViewController viewWillDisappear:]
  -[GKLeaderboardListViewController traitCollectionDidChange:]
  -[GKLeaderboardListViewController noContentView]
  -[GKLeaderboardListViewController setNoContentView:]
  -[GKLeaderboardListViewController loadData]
  -[GKLeaderboardListViewController didEnterLoadingState]
  -[GKLeaderboardListViewController donePressed:]
  -[GKLeaderboardListViewController dataUpdated:withError:]
  -[GKLeaderboardListViewController setupNoContentView:withError:]
  -[GKLeaderboardListViewController initWithGameRecord:leaderboardSet:]
  -[GKLeaderboardListViewController setupVisualEffect]
  -[GKLeaderboardListViewController didEnterRefreshingState]
  -[GKLeaderboardListViewController didExitRefreshingState]
  -[GKLeaderboardListViewController setNeedsRefresh]
  -[GKLeaderboardListViewController showNoContentPlaceholderForError:]
  -[GKLeaderboardListViewController hideNoContentPlaceholder]
  -[GKLeaderboardListViewController leaderboardSetAssetNames]
  -[GKLeaderboardListViewController setLeaderboardSetAssetNames:]
  -[GKLeaderboardListViewController leaderboardAssetNames]
  -[GKLeaderboardListViewController setLeaderboardAssetNames:]
  -[GKLeaderboardListViewController _gkRefreshContentsForDataType:userInfo:]
  -[GKLeaderboardListViewController _gkShouldRefreshContentsForDataType:userInfo:]
  -[GKLeaderboardListViewController preferredLargeTitleDisplayMode]
  -[GKLeaderboardListViewController updateLargeTitleInsets]
  -[GKLeaderboardListViewController configureCloseButton]
  -[GKLeaderboardListViewController setPreferredLargeTitleDisplayMode:]
  -[GKLeaderboardListViewController showingLeaderboardSets]
  -[GKLeaderboardListViewController setShowingLeaderboardSets:]
  -[GKLeaderboardListViewController canSegueToScores]
  -[GKLeaderboardListViewController setCanSegueToScores:]


GKChallengePlayerPickerDataSource : GKDashboardChallengePlayerPickerDataSource
  // instance methods
  -[GKChallengePlayerPickerDataSource collectionView:cellForItemAtIndexPath:]
  -[GKChallengePlayerPickerDataSource collectionView:viewForSupplementaryElementOfKind:atIndexPath:]
  -[GKChallengePlayerPickerDataSource collectionView:layout:sizeForItemAtIndexPath:]
  -[GKChallengePlayerPickerDataSource setupCollectionView:]


GKTurnBasedMatchesViewController : GKCollectionViewController <GKTurnBasedInviteViewControllerDelegate, GKTurnBasedMatchDetailViewControllerDelegate, GKTurnBasedMatchesDataSourceDelegate, UIPopoverControllerDelegate, UIStateRestoring, UIPopoverPresentationControllerDelegate>
 @property  GKTurnBasedMatchesDataSource *matchesDataSource
 @property  long long maxMatchesSeen
 @property  NSString *matchIDWaitingForTurnEvent
 @property  GKTurnBasedInviteViewController *inviteController
 @property  double initialSectionHeaderHeight
 @property  UIFocusGuide *detailButtonFocusGuide
 @property  GKCollectionViewController *masterViewController
 @property  GKGame *game
 @property  GKMatchRequest *matchRequest
 @property  <GKTurnBasedMatchesViewControllerDelegate> *delegate
 @property  BOOL showExistingMatches
 @property  BOOL showPlay
 @property  BOOL showQuit
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <UIStateRestoring> *restorationParent
 @property  Class objectRestorationClass

  // instance methods
  -[GKTurnBasedMatchesViewController masterViewController]
  -[GKTurnBasedMatchesViewController applicationDidEnterBackground]
  -[GKTurnBasedMatchesViewController setDelegate:]
  -[GKTurnBasedMatchesViewController delegate]
  -[GKTurnBasedMatchesViewController viewDidAppear:]
  -[GKTurnBasedMatchesViewController dealloc]
  -[GKTurnBasedMatchesViewController collectionView:didUpdateFocusInContext:withAnimationCoordinator:]
  -[GKTurnBasedMatchesViewController .cxx_destruct]
  -[GKTurnBasedMatchesViewController viewDidLoad]
  -[GKTurnBasedMatchesViewController viewWillAppear:]
  -[GKTurnBasedMatchesViewController popoverPresentationControllerDidDismissPopover:]
  -[GKTurnBasedMatchesViewController cancelButtonPressed]
  -[GKTurnBasedMatchesViewController collectionView:didSelectItemAtIndexPath:]
  -[GKTurnBasedMatchesViewController viewWillDisappear:]
  -[GKTurnBasedMatchesViewController traitCollectionDidChange:]
  -[GKTurnBasedMatchesViewController init]
  -[GKTurnBasedMatchesViewController configureDataSource]
  -[GKTurnBasedMatchesViewController game]
  -[GKTurnBasedMatchesViewController setGame:]
  -[GKTurnBasedMatchesViewController didEnterNoContentState]
  -[GKTurnBasedMatchesViewController updateUIBasedOnTraitCollection]
  -[GKTurnBasedMatchesViewController initWithMatchRequest:]
  -[GKTurnBasedMatchesViewController setShowExistingMatches:]
  -[GKTurnBasedMatchesViewController matchRequest]
  -[GKTurnBasedMatchesViewController setMatchRequest:]
  -[GKTurnBasedMatchesViewController showExistingMatches]
  -[GKTurnBasedMatchesViewController handleTurnBasedEvent:]
  -[GKTurnBasedMatchesViewController _gkRestorePopoverWithViewControllers:completion:]
  -[GKTurnBasedMatchesViewController configureViewFactories]
  -[GKTurnBasedMatchesViewController configureHeader:indexPath:]
  -[GKTurnBasedMatchesViewController isInGame]
  -[GKTurnBasedMatchesViewController initialSectionHeaderHeight]
  -[GKTurnBasedMatchesViewController setInitialSectionHeaderHeight:]
  -[GKTurnBasedMatchesViewController loadDataWithCompletionHandlerAndError:]
  -[GKTurnBasedMatchesViewController _gkShouldRefreshContentsForDataType:userInfo:]
  -[GKTurnBasedMatchesViewController setShowPlay:]
  -[GKTurnBasedMatchesViewController setShowQuit:]
  -[GKTurnBasedMatchesViewController addPressed]
  -[GKTurnBasedMatchesViewController detailPressedForMatch:]
  -[GKTurnBasedMatchesViewController turnBasedInviteViewControllerWasCancelled:]
  -[GKTurnBasedMatchesViewController turnBasedInviteViewController:didCreateMatchID:]
  -[GKTurnBasedMatchesViewController turnBasedInviteViewController:didFailWithError:]
  -[GKTurnBasedMatchesViewController turnBasedMatchDetailViewControllerDidAcceptInvitation:]
  -[GKTurnBasedMatchesViewController turnBasedMatchDetailViewControllerDidDeclineInvitation:]
  -[GKTurnBasedMatchesViewController turnBasedMatchDetailViewControllerDidChooseMatch:]
  -[GKTurnBasedMatchesViewController turnBasedMatchDetailViewControllerDidQuitMatch:]
  -[GKTurnBasedMatchesViewController turnBasedMatchDetailViewControllerDidRemoveMatch:]
  -[GKTurnBasedMatchesViewController turnBasedMatchDetailViewControllerDidShowStore:]
  -[GKTurnBasedMatchesViewController turnBasedMatchesDataSource:didQuitMatch:]
  -[GKTurnBasedMatchesViewController configureNavigationBarFocusGuide]
  -[GKTurnBasedMatchesViewController configureCollectionViewFocusGuide]
  -[GKTurnBasedMatchesViewController configureDetailButtonFocusGuide]
  -[GKTurnBasedMatchesViewController isLoadingOrRemovingPreloadedMatch]
  -[GKTurnBasedMatchesViewController showInviteControllerAnimated:]
  -[GKTurnBasedMatchesViewController launchGameAndShowMatch:]
  -[GKTurnBasedMatchesViewController notifyGameWithMatch:orError:]
  -[GKTurnBasedMatchesViewController acceptInviteForMatch:]
  -[GKTurnBasedMatchesViewController showMatch:]
  -[GKTurnBasedMatchesViewController showDetailForMatch:]
  -[GKTurnBasedMatchesViewController presentNavigationControllerInPopover:fromCell:completion:]
  -[GKTurnBasedMatchesViewController dismissDetailViewControllerInPopover:completion:]
  -[GKTurnBasedMatchesViewController dismissDetailViewControllerAnimated:]
  -[GKTurnBasedMatchesViewController setMasterViewController:]
  -[GKTurnBasedMatchesViewController showPlay]
  -[GKTurnBasedMatchesViewController showQuit]
  -[GKTurnBasedMatchesViewController matchesDataSource]
  -[GKTurnBasedMatchesViewController setMatchesDataSource:]
  -[GKTurnBasedMatchesViewController maxMatchesSeen]
  -[GKTurnBasedMatchesViewController setMaxMatchesSeen:]
  -[GKTurnBasedMatchesViewController matchIDWaitingForTurnEvent]
  -[GKTurnBasedMatchesViewController setMatchIDWaitingForTurnEvent:]
  -[GKTurnBasedMatchesViewController inviteController]
  -[GKTurnBasedMatchesViewController setInviteController:]
  -[GKTurnBasedMatchesViewController detailButtonFocusGuide]
  -[GKTurnBasedMatchesViewController setDetailButtonFocusGuide:]


GKOnboardingWhatsNewListCell : UIView
 @property  UIImageView *icon
 @property  UILabel *titleLabel
 @property  UILabel *subtitleLabel
 @property  NSArray *normalConstraints
 @property  NSArray *axConstraints
 @property  unsigned long currentCellType

  // instance methods
  -[GKOnboardingWhatsNewListCell setSubtitleLabel:]
  -[GKOnboardingWhatsNewListCell subtitleLabel]
  -[GKOnboardingWhatsNewListCell setTitleLabel:]
  -[GKOnboardingWhatsNewListCell setIcon:]
  -[GKOnboardingWhatsNewListCell .cxx_destruct]
  -[GKOnboardingWhatsNewListCell icon]
  -[GKOnboardingWhatsNewListCell initWithType:]
  -[GKOnboardingWhatsNewListCell loadView]
  -[GKOnboardingWhatsNewListCell traitCollectionDidChange:]
  -[GKOnboardingWhatsNewListCell titleLabel]
  -[GKOnboardingWhatsNewListCell setupCell]
  -[GKOnboardingWhatsNewListCell getIconImageFromBundle:]
  -[GKOnboardingWhatsNewListCell getIconImageFromSFSymbol:]
  -[GKOnboardingWhatsNewListCell createConstarints]
  -[GKOnboardingWhatsNewListCell currentCellType]
  -[GKOnboardingWhatsNewListCell normalConstraints]
  -[GKOnboardingWhatsNewListCell setNormalConstraints:]
  -[GKOnboardingWhatsNewListCell axConstraints]
  -[GKOnboardingWhatsNewListCell setAxConstraints:]


GKLoadResourceOperation : NSOperation
 @property  long long _loadReason
 @property  @? outputBlock

  // instance methods
  -[GKLoadResourceOperation .cxx_destruct]
  -[GKLoadResourceOperation outputBlock]
  -[GKLoadResourceOperation main]
  -[GKLoadResourceOperation setOutputBlock:]
  -[GKLoadResourceOperation _loadReason]
  -[GKLoadResourceOperation didCompleteWithResource:error:]
  -[GKLoadResourceOperation _setLoadReason:]


GKImageEffects : NSObject
  // class methods
  +[GKImageEffects imageByApplyingLightEffectToImage:]
  +[GKImageEffects imageByApplyingExtraLightEffectToImage:]
  +[GKImageEffects imageByApplyingDarkEffectToImage:]
  +[GKImageEffects imageByApplyingTintEffectWithColor:toImage:]
  +[GKImageEffects imageByApplyingBlurToImage:withRadius:tintColor:saturationDeltaFactor:maskImage:]


GKHostedAuthenticateViewController : UIViewController <GKExtensionParentViewControllerProtocol, GKAuthenticateViewController>
 @property  GKAuthenticateHostViewController *extensionHostViewController
 @property  long long mode
 @property  @? dismissCompletionHandler
 @property  BOOL rotationLocked
 @property  NSError *error
 @property  @? remoteViewReadyHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  @? completionHandler
 @property  BOOL disablesSignIn

  // class methods
  +[GKHostedAuthenticateViewController _preventsAppearanceProxyCustomization]

  // instance methods
  -[GKHostedAuthenticateViewController shouldAutomaticallyForwardRotationMethods]
  -[GKHostedAuthenticateViewController error]
  -[GKHostedAuthenticateViewController dealloc]
  -[GKHostedAuthenticateViewController mode]
  -[GKHostedAuthenticateViewController .cxx_destruct]
  -[GKHostedAuthenticateViewController setError:]
  -[GKHostedAuthenticateViewController viewWillAppear:]
  -[GKHostedAuthenticateViewController dismissViewControllerAnimated:completion:]
  -[GKHostedAuthenticateViewController shouldAutorotate]
  -[GKHostedAuthenticateViewController setMode:]
  -[GKHostedAuthenticateViewController setModalPresentationStyle:]
  -[GKHostedAuthenticateViewController shouldAutomaticallyForwardAppearanceMethods]
  -[GKHostedAuthenticateViewController viewDidDisappear:]
  -[GKHostedAuthenticateViewController setCompletionHandler:]
  -[GKHostedAuthenticateViewController completionHandler]
  -[GKHostedAuthenticateViewController init]
  -[GKHostedAuthenticateViewController dismissCompletionHandler]
  -[GKHostedAuthenticateViewController setDismissCompletionHandler:]
  -[GKHostedAuthenticateViewController automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers]
  -[GKHostedAuthenticateViewController setRemoteViewReadyHandler:]
  -[GKHostedAuthenticateViewController extensionDidFinishWithError:]
  -[GKHostedAuthenticateViewController _setupChildViewController]
  -[GKHostedAuthenticateViewController remoteViewReadyHandler]
  -[GKHostedAuthenticateViewController extensionHostViewController]
  -[GKHostedAuthenticateViewController setExtensionHostViewController:]
  -[GKHostedAuthenticateViewController showPasswordChangeAlertWithURL:]
  -[GKHostedAuthenticateViewController disablesSignIn]
  -[GKHostedAuthenticateViewController setDisablesSignIn:]
  -[GKHostedAuthenticateViewController finishAuthenticationWithError:]
  -[GKHostedAuthenticateViewController continueWithMode:]
  -[GKHostedAuthenticateViewController _setupExtensionHostViewController]
  -[GKHostedAuthenticateViewController setRotationLocked:]
  -[GKHostedAuthenticateViewController onboardingFlowDidSignOut]
  -[GKHostedAuthenticateViewController isRotationLocked]


GKShowMoreView : UICollectionReusableView
 @property  GKLabel *label
 @property  long long sectionIndex
 @property  NSLayoutConstraint *horizontalContraint
 @property  NSLayoutConstraint *verticalContraint
 @property  BOOL showShowAll
 @property  long long numberToShow
 @property  UICollectionView *collectionView
 @property  UIActivityIndicatorView *spinner
 @property  SEL showMoreAction
 @property  BOOL loading
 @property  double textAlignmentOffset

  // class methods
  +[GKShowMoreView requiresConstraintBasedLayout]

  // instance methods
  -[GKShowMoreView setCollectionView:]
  -[GKShowMoreView setLoading:]
  -[GKShowMoreView updateConstraints]
  -[GKShowMoreView spinner]
  -[GKShowMoreView setLabel:]
  -[GKShowMoreView .cxx_destruct]
  -[GKShowMoreView collectionView]
  -[GKShowMoreView prepareForReuse]
  -[GKShowMoreView updateLabel]
  -[GKShowMoreView showMoreAction]
  -[GKShowMoreView label]
  -[GKShowMoreView touchesEnded:withEvent:]
  -[GKShowMoreView loading]
  -[GKShowMoreView initWithFrame:]
  -[GKShowMoreView applyLayoutAttributes:]
  -[GKShowMoreView sectionIndex]
  -[GKShowMoreView setSectionIndex:]
  -[GKShowMoreView setSpinner:]
  -[GKShowMoreView baseTextStyle]
  -[GKShowMoreView setTextAlignmentOffset:]
  -[GKShowMoreView setShowMoreAction:]
  -[GKShowMoreView textAlignmentOffset]
  -[GKShowMoreView horizontalContraint]
  -[GKShowMoreView setHorizontalContraint:]
  -[GKShowMoreView verticalContraint]
  -[GKShowMoreView setVerticalContraint:]
  -[GKShowMoreView showShowAll]
  -[GKShowMoreView setShowShowAll:]
  -[GKShowMoreView numberToShow]
  -[GKShowMoreView setNumberToShow:]


GKCollectionFocusingLayout : UICollectionViewFlowLayout
 @property  double topHeaderHeight
 @property  double focusScaleFactor
 @property  NSIndexPath *focusedIndexPath
 @property  double focusHeaderOffset
 @property  double headerToItemSpacing
 @property  UICollectionViewLayoutAttributes *topHeaderAttributes

  // instance methods
  -[GKCollectionFocusingLayout prepareLayout]
  -[GKCollectionFocusingLayout layoutAttributesForItemAtIndexPath:]
  -[GKCollectionFocusingLayout layoutAttributesForSupplementaryViewOfKind:atIndexPath:]
  -[GKCollectionFocusingLayout focusedIndexPath]
  -[GKCollectionFocusingLayout .cxx_destruct]
  -[GKCollectionFocusingLayout awakeFromNib]
  -[GKCollectionFocusingLayout init]
  -[GKCollectionFocusingLayout setFocusedIndexPath:]
  -[GKCollectionFocusingLayout sectionInset]
  -[GKCollectionFocusingLayout targetContentOffsetForProposedContentOffset:withScrollingVelocity:]
  -[GKCollectionFocusingLayout sizeForItemAtIndexPath:]
  -[GKCollectionFocusingLayout applyDefaults]
  -[GKCollectionFocusingLayout shouldUpdateVisibleCellLayoutAttributes]
  -[GKCollectionFocusingLayout _updateFocusOffsetsForSectionHeadersWithAnimationCoordinator:]
  -[GKCollectionFocusingLayout _updateFocusFrameForCellAtIndexPath:]
  -[GKCollectionFocusingLayout minimumInteritemSpacingForSectionAtIndex:]
  -[GKCollectionFocusingLayout minimumLineSpacingForSectionAtIndex:]
  -[GKCollectionFocusingLayout sizeForHeaderInSection:]
  -[GKCollectionFocusingLayout sizeForFooterInSection:]
  -[GKCollectionFocusingLayout focusAdjustedAttributesForItemAttributes:]
  -[GKCollectionFocusingLayout focusAdjustedAttributesForSupplementaryViewAttributes:]
  -[GKCollectionFocusingLayout topHeaderHeight]
  -[GKCollectionFocusingLayout setTopHeaderHeight:]
  -[GKCollectionFocusingLayout focusScaleFactor]
  -[GKCollectionFocusingLayout setFocusScaleFactor:]
  -[GKCollectionFocusingLayout focusHeaderOffset]
  -[GKCollectionFocusingLayout setFocusHeaderOffset:]
  -[GKCollectionFocusingLayout headerToItemSpacing]
  -[GKCollectionFocusingLayout setHeaderToItemSpacing:]
  -[GKCollectionFocusingLayout topHeaderAttributes]
  -[GKCollectionFocusingLayout setTopHeaderAttributes:]


GKAuthenticateHostViewController : GKExtensionRemoteViewController <GKAuthenticateHostProtocol>
 @property  GKHostedAuthenticateViewController *delegate
 @property  GKGame *game
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[GKAuthenticateHostViewController dismissAutomaticallyAfterExtensionCompletion]
  +[GKAuthenticateHostViewController authenticateExtension]

  // instance methods
  -[GKAuthenticateHostViewController setDelegate:]
  -[GKAuthenticateHostViewController delegate]
  -[GKAuthenticateHostViewController applicationWillTerminate:]
  -[GKAuthenticateHostViewController .cxx_destruct]
  -[GKAuthenticateHostViewController viewDidLoad]
  -[GKAuthenticateHostViewController messageFromExtension:]
  -[GKAuthenticateHostViewController extensionIsCanceling]
  -[GKAuthenticateHostViewController extensionIsFinishing]


GKAuthenticateExtensionHostContext : GKExtensionHostContext <GKAuthenticateHostProtocol>
 @property  GKGame *game
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[GKAuthenticateExtensionHostContext _extensionAuxiliaryHostProtocol]
  +[GKAuthenticateExtensionHostContext _extensionAuxiliaryVendorProtocol]


GKChallengePlayerCell : GKDashboardPlayerCell
 @property  UIImageView *chevronImageView
 @property  UIView *seperatorLine

  // instance methods
  -[GKChallengePlayerCell chevronImageView]
  -[GKChallengePlayerCell setChevronImageView:]
  -[GKChallengePlayerCell .cxx_destruct]
  -[GKChallengePlayerCell drawRect:]
  -[GKChallengePlayerCell seperatorLine]
  -[GKChallengePlayerCell setSeperatorLine:]


GKLoadSystemImageResourceOperation : GKLoadResourceOperation
 @property  NSString *systemImageName

  // instance methods
  -[GKLoadSystemImageResourceOperation systemImageName]
  -[GKLoadSystemImageResourceOperation .cxx_destruct]
  -[GKLoadSystemImageResourceOperation main]
  -[GKLoadSystemImageResourceOperation initWithSystemImageName:]


GKLeaderboardMetadataView : UIView
 @property  UIStackView *container
 @property  NSLayoutConstraint *containerRightMargin
 @property  UIStackView *header
 @property  NSLayoutConstraint *headerHeight
 @property  UIView *avatarContainer1
 @property  UIView *avatarContainer2
 @property  UIView *avatarContainer3
 @property  UIStackView *body
 @property  UIVisualEffectView *vibrancyView
 @property  UILabel *rank
 @property  UILabel *title
 @property  UILabel *footnote

  // instance methods
  -[GKLeaderboardMetadataView rank]
  -[GKLeaderboardMetadataView setContainer:]
  -[GKLeaderboardMetadataView headerHeight]
  -[GKLeaderboardMetadataView setRank:]
  -[GKLeaderboardMetadataView setBody:]
  -[GKLeaderboardMetadataView .cxx_destruct]
  -[GKLeaderboardMetadataView setHeader:]
  -[GKLeaderboardMetadataView container]
  -[GKLeaderboardMetadataView title]
  -[GKLeaderboardMetadataView header]
  -[GKLeaderboardMetadataView body]
  -[GKLeaderboardMetadataView vibrancyView]
  -[GKLeaderboardMetadataView awakeFromNib]
  -[GKLeaderboardMetadataView setTitle:]
  -[GKLeaderboardMetadataView setVibrancyView:]
  -[GKLeaderboardMetadataView setFootnote:]
  -[GKLeaderboardMetadataView setHeaderHeight:]
  -[GKLeaderboardMetadataView footnote]
  -[GKLeaderboardMetadataView configureVibrancy:]
  -[GKLeaderboardMetadataView configureWithRank:title:footnote:vibrant:]
  -[GKLeaderboardMetadataView configureWithRank:title:footnote:altFootnote:vibrant:]
  -[GKLeaderboardMetadataView configureWithPlayers:title:footnote:]
  -[GKLeaderboardMetadataView configureWithPlayers:title:footnote:altFootnote:]
  -[GKLeaderboardMetadataView configureFootnote:altFootnote:]
  -[GKLeaderboardMetadataView updateAvatarContainer:withPlayer:]
  -[GKLeaderboardMetadataView stackVertically:]
  -[GKLeaderboardMetadataView containerRightMargin]
  -[GKLeaderboardMetadataView setContainerRightMargin:]
  -[GKLeaderboardMetadataView avatarContainer1]
  -[GKLeaderboardMetadataView setAvatarContainer1:]
  -[GKLeaderboardMetadataView avatarContainer2]
  -[GKLeaderboardMetadataView setAvatarContainer2:]
  -[GKLeaderboardMetadataView avatarContainer3]
  -[GKLeaderboardMetadataView setAvatarContainer3:]


GKHostedChallengeIssueController : UIViewController <GKExtensionParentViewControllerProtocol>
 @property  NSArray *players
 @property  NSString *defaultMessage
 @property  GKChallenge *challenge
 @property  BOOL forcePicker
 @property  @? completionHandler
 @property  GKChallengeIssueHostViewController *remoteViewController
 @property  @? receivedRemoteHandler
 @property  @? dismissCompletionHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[GKHostedChallengeIssueController _preventsAppearanceProxyCustomization]
  +[GKHostedChallengeIssueController presentationQueue]
  +[GKHostedChallengeIssueController hostedIssueControllerWithChallenge:players:defaultMessage:completionHandler:]
  +[GKHostedChallengeIssueController presentHostedIssueControllerWithChallenge:players:defaultMessage:]

  // instance methods
  -[GKHostedChallengeIssueController setChallenge:]
  -[GKHostedChallengeIssueController shouldAutomaticallyForwardRotationMethods]
  -[GKHostedChallengeIssueController challenge]
  -[GKHostedChallengeIssueController dealloc]
  -[GKHostedChallengeIssueController setRemoteViewController:]
  -[GKHostedChallengeIssueController .cxx_destruct]
  -[GKHostedChallengeIssueController remoteViewController]
  -[GKHostedChallengeIssueController shouldAutomaticallyForwardAppearanceMethods]
  -[GKHostedChallengeIssueController setCompletionHandler:]
  -[GKHostedChallengeIssueController completionHandler]
  -[GKHostedChallengeIssueController dismissCompletionHandler]
  -[GKHostedChallengeIssueController setDismissCompletionHandler:]
  -[GKHostedChallengeIssueController automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers]
  -[GKHostedChallengeIssueController players]
  -[GKHostedChallengeIssueController setPlayers:]
  -[GKHostedChallengeIssueController defaultMessage]
  -[GKHostedChallengeIssueController setDefaultMessage:]
  -[GKHostedChallengeIssueController extensionDidFinishWithError:]
  -[GKHostedChallengeIssueController _setupChildViewController]
  -[GKHostedChallengeIssueController _setupRemoteViewController]
  -[GKHostedChallengeIssueController initWithChallenge:players:defaultMessage:completionHandler:]
  -[GKHostedChallengeIssueController doneWithPlayers:message:]
  -[GKHostedChallengeIssueController forcePicker]
  -[GKHostedChallengeIssueController setForcePicker:]
  -[GKHostedChallengeIssueController receivedRemoteHandler]
  -[GKHostedChallengeIssueController setReceivedRemoteHandler:]


GKChallengeListViewController : GKDashboardCollectionViewController
 @property  BOOL shouldShowPlayForChallenge
 @property  double startTime
 @property  long long preferredLargeTitleDisplayMode

  // instance methods
  -[GKChallengeListViewController startTime]
  -[GKChallengeListViewController viewWillLayoutSubviews]
  -[GKChallengeListViewController viewDidAppear:]
  -[GKChallengeListViewController setStartTime:]
  -[GKChallengeListViewController viewDidLoad]
  -[GKChallengeListViewController viewWillAppear:]
  -[GKChallengeListViewController viewDidLayoutSubviews]
  -[GKChallengeListViewController viewWillDisappear:]
  -[GKChallengeListViewController traitCollectionDidChange:]
  -[GKChallengeListViewController donePressed:]
  -[GKChallengeListViewController setupNoContentView:withError:]
  -[GKChallengeListViewController initWithGameRecord:]
  -[GKChallengeListViewController shouldShowPlayForChallenge]
  -[GKChallengeListViewController showNoContentPlaceholderForError:]
  -[GKChallengeListViewController configureCollectionView]
  -[GKChallengeListViewController preferredLargeTitleDisplayMode]
  -[GKChallengeListViewController updateLargeTitleInsets]
  -[GKChallengeListViewController configureCloseButton]
  -[GKChallengeListViewController setPreferredLargeTitleDisplayMode:]
  -[GKChallengeListViewController setShouldShowPlayForChallenge:]


GKImageRequest : GKResourceRequest
 @property  <GKResourceDataConsumer> *dataConsumer
 @property  NSURLRequest *urlRequest
 @property  BOOL isResourceRequest
 @property  <GKImageRequestDelegate> *delegate

  // class methods
  +[GKImageRequest searchBundles]
  +[GKImageRequest setSearchBundles:]

  // instance methods
  -[GKImageRequest delegate]
  -[GKImageRequest isResourceRequest]
  -[GKImageRequest dataConsumer]
  -[GKImageRequest .cxx_destruct]
  -[GKImageRequest urlRequest]
  -[GKImageRequest cacheOptions]
  -[GKImageRequest makeLoadOperation]
  -[GKImageRequest didLoadResource:error:]
  -[GKImageRequest init]
  -[GKImageRequest initWithURLRequest:dataConsumer:delegate:]
  -[GKImageRequest isSystemImageRequest]
  -[GKImageRequest isAvatarImageRequest]
  -[GKImageRequest isContactImageRequest]


GKTurnBasedInviteViewController : GKMultiplayerViewController
 @property  NSMutableDictionary *inviteMessageDictionary
 @property  long long mode
 @property  GKTurnBasedMatch *match
 @property  BOOL deletePreloadedMatch
 @property  BOOL loadingOrRemovingPreloadedMatch
 @property  <GKTurnBasedInviteViewControllerDelegate> *delegate

  // instance methods
  -[GKTurnBasedInviteViewController finishWithError:]
  -[GKTurnBasedInviteViewController isInSetupMode]
  -[GKTurnBasedInviteViewController setDelegate:]
  -[GKTurnBasedInviteViewController delegate]
  -[GKTurnBasedInviteViewController setMatch:]
  -[GKTurnBasedInviteViewController viewDidAppear:]
  -[GKTurnBasedInviteViewController mode]
  -[GKTurnBasedInviteViewController .cxx_destruct]
  -[GKTurnBasedInviteViewController match]
  -[GKTurnBasedInviteViewController viewDidLoad]
  -[GKTurnBasedInviteViewController setMode:]
  -[GKTurnBasedInviteViewController viewWillDisappear:]
  -[GKTurnBasedInviteViewController cancel]
  -[GKTurnBasedInviteViewController automatchParticipantStatus]
  -[GKTurnBasedInviteViewController updateStartGameButtonTitle]
  -[GKTurnBasedInviteViewController setInvitesFailedWithError:]
  -[GKTurnBasedInviteViewController canStartForcedAutomatch]
  -[GKTurnBasedInviteViewController playNow]
  -[GKTurnBasedInviteViewController startGameButtonPressed]
  -[GKTurnBasedInviteViewController sendInvitesToContactPlayers:legacyPlayers:]
  -[GKTurnBasedInviteViewController invitePlayers:]
  -[GKTurnBasedInviteViewController performActionsForButtonCancelCurrentMatching]
  -[GKTurnBasedInviteViewController didInviteContactPlayers]
  -[GKTurnBasedInviteViewController didClickCancelForServiceUnavailableAlert]
  -[GKTurnBasedInviteViewController handleNewParticipantCount:]
  -[GKTurnBasedInviteViewController isLoadingOrRemovingPreloadedMatch]
  -[GKTurnBasedInviteViewController finishWithMatchID:]
  -[GKTurnBasedInviteViewController cleanupStateForCancelOrErrorWithHandler:]
  -[GKTurnBasedInviteViewController createGameWithPlayersToInvite:forSharing:handler:]
  -[GKTurnBasedInviteViewController removeCurrentMatchAndSetFlagIfNotLoaded:withHandler:]
  -[GKTurnBasedInviteViewController inviteMessageDictionary]
  -[GKTurnBasedInviteViewController setInviteMessageDictionary:]
  -[GKTurnBasedInviteViewController deletePreloadedMatch]
  -[GKTurnBasedInviteViewController setDeletePreloadedMatch:]


GKDashboardLeaderboardScoreCell : GKRectShadowCell
 @property  GKDashboardPlayerPhotoView *playerView
 @property  NSLayoutConstraint *playerViewHeightConstraint
 @property  UILabel *rankLabel
 @property  UILabel *nameLabel
 @property  UILabel *scoreLabel
 @property  UIView *topLine
 @property  UIView *bottomLine
 @property  UIView *monogramColorView
 @property  GKScore *score
 @property  BOOL linesVisible
 @property  UIView *popoverSourceView

  // class methods
  +[GKDashboardLeaderboardScoreCell defaultSize]
  +[GKDashboardLeaderboardScoreCell lowRankNib]
  +[GKDashboardLeaderboardScoreCell highRankNib]

  // instance methods
  -[GKDashboardLeaderboardScoreCell score]
  -[GKDashboardLeaderboardScoreCell .cxx_destruct]
  -[GKDashboardLeaderboardScoreCell setPlayerView:]
  -[GKDashboardLeaderboardScoreCell playerView]
  -[GKDashboardLeaderboardScoreCell nameLabel]
  -[GKDashboardLeaderboardScoreCell setScore:]
  -[GKDashboardLeaderboardScoreCell awakeFromNib]
  -[GKDashboardLeaderboardScoreCell popoverSourceView]
  -[GKDashboardLeaderboardScoreCell setNameLabel:]
  -[GKDashboardLeaderboardScoreCell bottomLine]
  -[GKDashboardLeaderboardScoreCell setBottomLine:]
  -[GKDashboardLeaderboardScoreCell playerViewHeightConstraint]
  -[GKDashboardLeaderboardScoreCell setPlayerViewHeightConstraint:]
  -[GKDashboardLeaderboardScoreCell rankLabel]
  -[GKDashboardLeaderboardScoreCell setRankLabel:]
  -[GKDashboardLeaderboardScoreCell scoreLabel]
  -[GKDashboardLeaderboardScoreCell setScoreLabel:]
  -[GKDashboardLeaderboardScoreCell topLine]
  -[GKDashboardLeaderboardScoreCell setTopLine:]
  -[GKDashboardLeaderboardScoreCell monogramColorView]
  -[GKDashboardLeaderboardScoreCell setMonogramColorView:]
  -[GKDashboardLeaderboardScoreCell setupForScore:]
  -[GKDashboardLeaderboardScoreCell setLinesVisible:]
  -[GKDashboardLeaderboardScoreCell linesVisible]


GKTurnBasedMatchDetailHeaderView : UICollectionReusableView
 @property  UILabel *playingWithLabel
 @property  GKLabel *startedLabel
 @property  GKLabel *lastTurnLabel
 @property  GKLabel *infoLabel
 @property  GKDashboardPlayerPhotoView *avatarView
 @property  UIFocusGuide *actionFocusGuide
 @property  NSString *playingWithString
 @property  NSArray *constraints
 @property  GKTurnBasedMatch *match
 @property  NSString *infoText
 @property  NSString *actionText
 @property  id actionTarget
 @property  SEL actionSelector
 @property  UIButton *actionButton

  // class methods
  +[GKTurnBasedMatchDetailHeaderView requiresConstraintBasedLayout]

  // instance methods
  -[GKTurnBasedMatchDetailHeaderView avatarView]
  -[GKTurnBasedMatchDetailHeaderView setActionSelector:]
  -[GKTurnBasedMatchDetailHeaderView setMatch:]
  -[GKTurnBasedMatchDetailHeaderView actionSelector]
  -[GKTurnBasedMatchDetailHeaderView setConstraints:]
  -[GKTurnBasedMatchDetailHeaderView .cxx_destruct]
  -[GKTurnBasedMatchDetailHeaderView match]
  -[GKTurnBasedMatchDetailHeaderView initWithFrame:]
  -[GKTurnBasedMatchDetailHeaderView setAvatarView:]
  -[GKTurnBasedMatchDetailHeaderView constraints]
  -[GKTurnBasedMatchDetailHeaderView actionTarget]
  -[GKTurnBasedMatchDetailHeaderView actionButton]
  -[GKTurnBasedMatchDetailHeaderView setActionButton:]
  -[GKTurnBasedMatchDetailHeaderView setLabelAlpha:]
  -[GKTurnBasedMatchDetailHeaderView setInfoText:]
  -[GKTurnBasedMatchDetailHeaderView setActionTarget:]
  -[GKTurnBasedMatchDetailHeaderView actionText]
  -[GKTurnBasedMatchDetailHeaderView setActionText:]
  -[GKTurnBasedMatchDetailHeaderView infoLabel]
  -[GKTurnBasedMatchDetailHeaderView setInfoLabel:]
  -[GKTurnBasedMatchDetailHeaderView didUpdateModel]
  -[GKTurnBasedMatchDetailHeaderView establishConstraints]
  -[GKTurnBasedMatchDetailHeaderView playingWithLabel]
  -[GKTurnBasedMatchDetailHeaderView setPlayingWithLabel:]
  -[GKTurnBasedMatchDetailHeaderView actionPressed:]
  -[GKTurnBasedMatchDetailHeaderView playingWithString]
  -[GKTurnBasedMatchDetailHeaderView infoText]
  -[GKTurnBasedMatchDetailHeaderView startedLabel]
  -[GKTurnBasedMatchDetailHeaderView setStartedLabel:]
  -[GKTurnBasedMatchDetailHeaderView lastTurnLabel]
  -[GKTurnBasedMatchDetailHeaderView setLastTurnLabel:]
  -[GKTurnBasedMatchDetailHeaderView actionFocusGuide]
  -[GKTurnBasedMatchDetailHeaderView setActionFocusGuide:]


GKBaseComposeController : GKLoadableContentViewController <UITextViewDelegate>
 @property  GKContiguousContainerView *headerFieldContainer
 @property  UIView *contentView
 @property  double scrollContentInsetAdjustY
 @property  NSLayoutConstraint *contentHeightConstraint
 @property  NSLayoutConstraint *contentLeadingConstraint
 @property  NSLayoutConstraint *messageFieldTrailingConstraint
 @property  BOOL showHeaderFieldContainer
 @property  UIScrollView *backgroundView
 @property  NSArray *composeHeaderFields
 @property  GKTextView *messageField
 @property  UIView *intendedFirstResponder
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} lastKnownKeyboardFrame
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKBaseComposeController contentView]
  -[GKBaseComposeController didRotateFromInterfaceOrientation:]
  -[GKBaseComposeController margins]
  -[GKBaseComposeController viewDidAppear:]
  -[GKBaseComposeController dealloc]
  -[GKBaseComposeController .cxx_destruct]
  -[GKBaseComposeController viewWillAppear:]
  -[GKBaseComposeController loadView]
  -[GKBaseComposeController backgroundView]
  -[GKBaseComposeController viewDidLayoutSubviews]
  -[GKBaseComposeController contentLeadingConstraint]
  -[GKBaseComposeController setBackgroundView:]
  -[GKBaseComposeController supportedInterfaceOrientations]
  -[GKBaseComposeController setContentView:]
  -[GKBaseComposeController setContentLeadingConstraint:]
  -[GKBaseComposeController init]
  -[GKBaseComposeController textViewDidChange:]
  -[GKBaseComposeController textViewDidChangeSelection:]
  -[GKBaseComposeController contentHeightConstraint]
  -[GKBaseComposeController messageField]
  -[GKBaseComposeController setMessageField:]
  -[GKBaseComposeController keyboardWillHideShow:]
  -[GKBaseComposeController setComposeHeaderFields:]
  -[GKBaseComposeController _gkWantsCustomRightBarButtonItemInViewService]
  -[GKBaseComposeController _adjustContentInsetForShowingKeyboard:]
  -[GKBaseComposeController viewMetricsForContainerView:]
  -[GKBaseComposeController setMessageFieldText:]
  -[GKBaseComposeController messageFieldTextDidChange]
  -[GKBaseComposeController _scrollSelectedTextToVisible]
  -[GKBaseComposeController showHeaderFieldContainer]
  -[GKBaseComposeController setShowHeaderFieldContainer:]
  -[GKBaseComposeController composeHeaderFields]
  -[GKBaseComposeController intendedFirstResponder]
  -[GKBaseComposeController setIntendedFirstResponder:]
  -[GKBaseComposeController lastKnownKeyboardFrame]
  -[GKBaseComposeController setLastKnownKeyboardFrame:]
  -[GKBaseComposeController headerFieldContainer]
  -[GKBaseComposeController setHeaderFieldContainer:]
  -[GKBaseComposeController scrollContentInsetAdjustY]
  -[GKBaseComposeController setScrollContentInsetAdjustY:]
  -[GKBaseComposeController setContentHeightConstraint:]
  -[GKBaseComposeController messageFieldTrailingConstraint]
  -[GKBaseComposeController setMessageFieldTrailingConstraint:]


GKSegmentedSelectorView : GKHeaderWithUnderlineView
 @property  NSLayoutConstraint *widthConstraint
 @property  UISegmentedControl *segmentedControl
 @property  id target

  // instance methods
  -[GKSegmentedSelectorView setTarget:]
  -[GKSegmentedSelectorView target]
  -[GKSegmentedSelectorView widthConstraint]
  -[GKSegmentedSelectorView .cxx_destruct]
  -[GKSegmentedSelectorView setWidthConstraint:]
  -[GKSegmentedSelectorView prepareForReuse]
  -[GKSegmentedSelectorView initWithFrame:]
  -[GKSegmentedSelectorView applyLayoutAttributes:]
  -[GKSegmentedSelectorView segmentedControl]
  -[GKSegmentedSelectorView setSegmentedControl:]
  -[GKSegmentedSelectorView drawsUnderline]
  -[GKSegmentedSelectorView pinningStateChangedTo:]


GKContiguousContainerWithLeadingView : GKContiguousContainerView
  // instance methods
  -[GKContiguousContainerWithLeadingView intrinsicContentSize]


GKContiguousContainerView : UIView
 @property  BOOL vertical
 @property  BOOL applyOrthogonalConstraints
 @property  NSArray *replaceableConstraints
 @property  UIView *baselineView
 @property  double overlap
 @property  {UIEdgeInsets=dddd} insets

  // class methods
  +[GKContiguousContainerView containerViewForViews:overlap:vertical:]
  +[GKContiguousContainerView containerViewForViews:overlap:vertical:applyOrthogonalConstraints:]
  +[GKContiguousContainerView containerForViewsFontsLeadings:options:]

  // instance methods
  -[GKContiguousContainerView setInsets:]
  -[GKContiguousContainerView vertical]
  -[GKContiguousContainerView insets]
  -[GKContiguousContainerView setVertical:]
  -[GKContiguousContainerView .cxx_destruct]
  -[GKContiguousContainerView sizeThatFits:]
  -[GKContiguousContainerView intrinsicContentSize]
  -[GKContiguousContainerView viewForBaselineLayout]
  -[GKContiguousContainerView baselineView]
  -[GKContiguousContainerView setBaselineView:]
  -[GKContiguousContainerView overlap]
  -[GKContiguousContainerView setOverlap:]
  -[GKContiguousContainerView replaceableConstraints]
  -[GKContiguousContainerView setReplaceableConstraints:]
  -[GKContiguousContainerView _addContiguousSubviews:]
  -[GKContiguousContainerView replaceSubviews:]
  -[GKContiguousContainerView applyOrthogonalConstraints]
  -[GKContiguousContainerView setApplyOrthogonalConstraints:]


GKConstraintLeadingInfo : NSObject
 @property  NSString *fontTextStyle
 @property  double leading

  // instance methods
  -[GKConstraintLeadingInfo leading]
  -[GKConstraintLeadingInfo .cxx_destruct]
  -[GKConstraintLeadingInfo setLeading:]
  -[GKConstraintLeadingInfo fontTextStyle]
  -[GKConstraintLeadingInfo setFontTextStyle:]


GKConstraintUpdateController : NSObject
 @property  NSPointerArray *constraintsToUpdate

  // class methods
  +[GKConstraintUpdateController sharedController]

  // instance methods
  -[GKConstraintUpdateController dealloc]
  -[GKConstraintUpdateController .cxx_destruct]
  -[GKConstraintUpdateController _updateConstraints]
  -[GKConstraintUpdateController updateConstraint:]
  -[GKConstraintUpdateController registerConstraint:leading:forFontTextStyle:]
  -[GKConstraintUpdateController constraintsToUpdate]
  -[GKConstraintUpdateController setConstraintsToUpdate:]


GKDashboardPickerPlayerCell : GKFocusHighlightingCollectionViewCell
 @property  GKDashboardPlayerPhotoView *playerView
 @property  NSLayoutConstraint *playerViewHeightConstraint
 @property  UIView *container
 @property  UILabel *subtitle
 @property  UILabel *title
 @property  UIView *bottomLine
 @property  UIView *monogramColorView
 @property  UIView *backView
 @property  UIView *ringView
 @property  NSString *originalSubtitle
 @property  BOOL lineVisible
 @property  BOOL selectable
 @property  BOOL usesClearBackground

  // class methods
  +[GKDashboardPickerPlayerCell defaultSize]

  // instance methods
  -[GKDashboardPickerPlayerCell setContainer:]
  -[GKDashboardPickerPlayerCell selectable]
  -[GKDashboardPickerPlayerCell subtitle]
  -[GKDashboardPickerPlayerCell setSubtitle:]
  -[GKDashboardPickerPlayerCell canBecomeFocused]
  -[GKDashboardPickerPlayerCell setSelected:]
  -[GKDashboardPickerPlayerCell .cxx_destruct]
  -[GKDashboardPickerPlayerCell container]
  -[GKDashboardPickerPlayerCell setHighlighted:]
  -[GKDashboardPickerPlayerCell setPlayerView:]
  -[GKDashboardPickerPlayerCell title]
  -[GKDashboardPickerPlayerCell playerView]
  -[GKDashboardPickerPlayerCell setSelectable:]
  -[GKDashboardPickerPlayerCell backView]
  -[GKDashboardPickerPlayerCell awakeFromNib]
  -[GKDashboardPickerPlayerCell setTitle:]
  -[GKDashboardPickerPlayerCell setBackView:]
  -[GKDashboardPickerPlayerCell updateLayerMask:]
  -[GKDashboardPickerPlayerCell setLineVisible:]
  -[GKDashboardPickerPlayerCell lineVisible]
  -[GKDashboardPickerPlayerCell setUsesClearBackground:]
  -[GKDashboardPickerPlayerCell updateCellBackground]
  -[GKDashboardPickerPlayerCell usesClearBackground]
  -[GKDashboardPickerPlayerCell bottomLine]
  -[GKDashboardPickerPlayerCell setBottomLine:]
  -[GKDashboardPickerPlayerCell ringView]
  -[GKDashboardPickerPlayerCell setRingView:]
  -[GKDashboardPickerPlayerCell originalSubtitle]
  -[GKDashboardPickerPlayerCell setOriginalSubtitle:]
  -[GKDashboardPickerPlayerCell playerViewHeightConstraint]
  -[GKDashboardPickerPlayerCell setPlayerViewHeightConstraint:]
  -[GKDashboardPickerPlayerCell monogramColorView]
  -[GKDashboardPickerPlayerCell setMonogramColorView:]
  -[GKDashboardPickerPlayerCell configureWithPlayer:isCoreRecent:matchedContactName:onlyShowContactName:]
  -[GKDashboardPickerPlayerCell subtitleForPlayer:isCoreRecent:matchedContactName:onlyShowContactName:]


GKLeaderboardScoreViewController : GKLoadingViewController <GKLeaderboardScoreDelegate, UIScrollViewDelegate>
 @property  UICollectionView *collectionView
 @property  UIStackView *highlightView
 @property  GKUnfocusableButton *scrollToTopButton
 @property  UIView *collectionContainer
 @property  UIView *timeScopeContainer
 @property  UILabel *titleLabel
 @property  UISegmentedControl *playerScopeControl
 @property  NSLayoutConstraint *collectionContainerHeight
 @property  UIView *collectionGradientView
 @property  NSLayoutConstraint *collectionGradientViewHeightConstraint
 @property  UIScrollView *mainScrollView
 @property  NSLayoutConstraint *highlightViewHeightConstraint
 @property  NSLayoutConstraint *highlightViewWidthConstraint
 @property  NSLayoutConstraint *collectionGradientViewLandscapeTopConstraint
 @property  NSLayoutConstraint *highlightViewLandscapeTopConstraint
 @property  UIImageView *gameIconImageView
 @property  GKTimeScopeButton *timeScopeButton
 @property  GKLeaderboardScoreDataSource *dataSource
 @property  GKLeaderboard *leaderboard
 @property  GKLeaderboard *currentOccurrence
 @property  GKLeaderboard *previousOccurrence
 @property  long long timeScope
 @property  long long playerScope
 @property  long long leaderboardOccurrence
 @property  GKLeaderboardMetadataView *personalView
 @property  GKLeaderboardMetadataView *socialView
 @property  GKNoContentView *noContentView
 @property  CAGradientLayer *collectionViewFadeGradient
 @property  GKLeaderboardEntry *localPlayerEntry
 @property  GKLeaderboardEntry *topPlayerEntry
 @property  GKLeaderboardEntry *playerAboveEntry
 @property  GKLeaderboardEntry *playerBelowEntry
 @property  long long totalEntries
 @property  BOOL shouldAutoRefreshHighlights
 @property  double startTime
 @property  BOOL shouldPreferFocusToPlayerScopeControl
 @property  UICollectionViewCell *preferredFocusCell
 @property  long long initialTimeScope
 @property  long long initialPlayerScope
 @property  BOOL restrictToFriendsOnly
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[GKLeaderboardScoreViewController restrictToFriendsOnly]
  +[GKLeaderboardScoreViewController setRestrictToFriendsOnly:]

  // instance methods
  -[GKLeaderboardScoreViewController setCollectionView:]
  -[GKLeaderboardScoreViewController clearSelection]
  -[GKLeaderboardScoreViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[GKLeaderboardScoreViewController contentScrollView]
  -[GKLeaderboardScoreViewController setTitleLabel:]
  -[GKLeaderboardScoreViewController dataSource]
  -[GKLeaderboardScoreViewController startTime]
  -[GKLeaderboardScoreViewController scrollViewDidScroll:]
  -[GKLeaderboardScoreViewController timeScope]
  -[GKLeaderboardScoreViewController previousOccurrence]
  -[GKLeaderboardScoreViewController setHighlightView:]
  -[GKLeaderboardScoreViewController updateHighlights]
  -[GKLeaderboardScoreViewController viewDidAppear:]
  -[GKLeaderboardScoreViewController isLoading]
  -[GKLeaderboardScoreViewController dealloc]
  -[GKLeaderboardScoreViewController setStartTime:]
  -[GKLeaderboardScoreViewController .cxx_destruct]
  -[GKLeaderboardScoreViewController collectionView]
  -[GKLeaderboardScoreViewController viewDidLoad]
  -[GKLeaderboardScoreViewController viewWillAppear:]
  -[GKLeaderboardScoreViewController viewDidLayoutSubviews]
  -[GKLeaderboardScoreViewController hasData]
  -[GKLeaderboardScoreViewController preferredFocusEnvironments]
  -[GKLeaderboardScoreViewController setDataSource:]
  -[GKLeaderboardScoreViewController updateContentSize]
  -[GKLeaderboardScoreViewController highlightView]
  -[GKLeaderboardScoreViewController viewWillDisappear:]
  -[GKLeaderboardScoreViewController traitCollectionDidChange:]
  -[GKLeaderboardScoreViewController setTimeScope:]
  -[GKLeaderboardScoreViewController titleLabel]
  -[GKLeaderboardScoreViewController mainScrollView]
  -[GKLeaderboardScoreViewController setMainScrollView:]
  -[GKLeaderboardScoreViewController noContentView]
  -[GKLeaderboardScoreViewController setNoContentView:]
  -[GKLeaderboardScoreViewController loadData]
  -[GKLeaderboardScoreViewController setLeaderboardOccurrence:]
  -[GKLeaderboardScoreViewController leaderboardOccurrence]
  -[GKLeaderboardScoreViewController didEnterLoadingState]
  -[GKLeaderboardScoreViewController formattedNumber:]
  -[GKLeaderboardScoreViewController attributedStringWithSymbol:]
  -[GKLeaderboardScoreViewController leaderboard]
  -[GKLeaderboardScoreViewController setLeaderboard:]
  -[GKLeaderboardScoreViewController personalView]
  -[GKLeaderboardScoreViewController setPersonalView:]
  -[GKLeaderboardScoreViewController socialView]
  -[GKLeaderboardScoreViewController setSocialView:]
  -[GKLeaderboardScoreViewController donePressed:]
  -[GKLeaderboardScoreViewController dataUpdated:withError:]
  -[GKLeaderboardScoreViewController setupNoContentView:withError:]
  -[GKLeaderboardScoreViewController setupVisualEffect]
  -[GKLeaderboardScoreViewController didEnterRefreshingState]
  -[GKLeaderboardScoreViewController didExitRefreshingState]
  -[GKLeaderboardScoreViewController setNeedsRefresh]
  -[GKLeaderboardScoreViewController showNoContentPlaceholderForError:]
  -[GKLeaderboardScoreViewController hideNoContentPlaceholder]
  -[GKLeaderboardScoreViewController initWithGameRecord:leaderboard:]
  -[GKLeaderboardScoreViewController setPlayerScope:]
  -[GKLeaderboardScoreViewController playerScope]
  -[GKLeaderboardScoreViewController localPlayerEntry]
  -[GKLeaderboardScoreViewController setLocalPlayerEntry:]
  -[GKLeaderboardScoreViewController configureCloseButton]
  -[GKLeaderboardScoreViewController backButtonPressed:]
  -[GKLeaderboardScoreViewController playerScopeChanged:]
  -[GKLeaderboardScoreViewController didLoadScoresWithLocalPlayerEntry:topPlayer:playerAbove:playerBelow:totalEntries:]
  -[GKLeaderboardScoreViewController didLoadAdditionalScores]
  -[GKLeaderboardScoreViewController collectionViewDidScroll]
  -[GKLeaderboardScoreViewController setPreferredFocusCell:]
  -[GKLeaderboardScoreViewController addLeaderboardHighlights]
  -[GKLeaderboardScoreViewController autoRefreshHighlightsPersonalView]
  -[GKLeaderboardScoreViewController updateHighlightsPersonalView]
  -[GKLeaderboardScoreViewController initialTimeScope]
  -[GKLeaderboardScoreViewController setInitialTimeScope:]
  -[GKLeaderboardScoreViewController initialPlayerScope]
  -[GKLeaderboardScoreViewController setInitialPlayerScope:]
  -[GKLeaderboardScoreViewController timeRemainingFromDate:toDate:]
  -[GKLeaderboardScoreViewController setupFadeGradient]
  -[GKLeaderboardScoreViewController addPlayerScopeControl]
  -[GKLeaderboardScoreViewController configurePlayerScopeFocusGuide]
  -[GKLeaderboardScoreViewController updatePlayerScopeLayoutForSize:]
  -[GKLeaderboardScoreViewController configureFocusGuidesForPortraitNavigationBar]
  -[GKLeaderboardScoreViewController setPlayerScope:restrictToFriendsOnly:]
  -[GKLeaderboardScoreViewController scrollToTopPressed:]
  -[GKLeaderboardScoreViewController configureTimeScopeMenu]
  -[GKLeaderboardScoreViewController timeScopePressed:]
  -[GKLeaderboardScoreViewController loadLeaderboardForOccurrence:handler:]
  -[GKLeaderboardScoreViewController shareScore:fromLeaderboard:sendingView:relativeRect:]
  -[GKLeaderboardScoreViewController challengeWithScore:]
  -[GKLeaderboardScoreViewController shareWithScore:fromView:]
  -[GKLeaderboardScoreViewController enableDisableCollectionViewScrolling]
  -[GKLeaderboardScoreViewController scrollToTopButton]
  -[GKLeaderboardScoreViewController setScrollToTopButton:]
  -[GKLeaderboardScoreViewController collectionContainer]
  -[GKLeaderboardScoreViewController setCollectionContainer:]
  -[GKLeaderboardScoreViewController timeScopeContainer]
  -[GKLeaderboardScoreViewController setTimeScopeContainer:]
  -[GKLeaderboardScoreViewController playerScopeControl]
  -[GKLeaderboardScoreViewController setPlayerScopeControl:]
  -[GKLeaderboardScoreViewController collectionContainerHeight]
  -[GKLeaderboardScoreViewController setCollectionContainerHeight:]
  -[GKLeaderboardScoreViewController collectionGradientView]
  -[GKLeaderboardScoreViewController setCollectionGradientView:]
  -[GKLeaderboardScoreViewController collectionGradientViewHeightConstraint]
  -[GKLeaderboardScoreViewController setCollectionGradientViewHeightConstraint:]
  -[GKLeaderboardScoreViewController highlightViewHeightConstraint]
  -[GKLeaderboardScoreViewController setHighlightViewHeightConstraint:]
  -[GKLeaderboardScoreViewController highlightViewWidthConstraint]
  -[GKLeaderboardScoreViewController setHighlightViewWidthConstraint:]
  -[GKLeaderboardScoreViewController collectionGradientViewLandscapeTopConstraint]
  -[GKLeaderboardScoreViewController setCollectionGradientViewLandscapeTopConstraint:]
  -[GKLeaderboardScoreViewController highlightViewLandscapeTopConstraint]
  -[GKLeaderboardScoreViewController setHighlightViewLandscapeTopConstraint:]
  -[GKLeaderboardScoreViewController gameIconImageView]
  -[GKLeaderboardScoreViewController setGameIconImageView:]
  -[GKLeaderboardScoreViewController timeScopeButton]
  -[GKLeaderboardScoreViewController setTimeScopeButton:]
  -[GKLeaderboardScoreViewController currentOccurrence]
  -[GKLeaderboardScoreViewController setCurrentOccurrence:]
  -[GKLeaderboardScoreViewController setPreviousOccurrence:]
  -[GKLeaderboardScoreViewController collectionViewFadeGradient]
  -[GKLeaderboardScoreViewController setCollectionViewFadeGradient:]
  -[GKLeaderboardScoreViewController topPlayerEntry]
  -[GKLeaderboardScoreViewController setTopPlayerEntry:]
  -[GKLeaderboardScoreViewController playerAboveEntry]
  -[GKLeaderboardScoreViewController setPlayerAboveEntry:]
  -[GKLeaderboardScoreViewController playerBelowEntry]
  -[GKLeaderboardScoreViewController setPlayerBelowEntry:]
  -[GKLeaderboardScoreViewController totalEntries]
  -[GKLeaderboardScoreViewController setTotalEntries:]
  -[GKLeaderboardScoreViewController shouldAutoRefreshHighlights]
  -[GKLeaderboardScoreViewController setShouldAutoRefreshHighlights:]
  -[GKLeaderboardScoreViewController shouldPreferFocusToPlayerScopeControl]
  -[GKLeaderboardScoreViewController setShouldPreferFocusToPlayerScopeControl:]
  -[GKLeaderboardScoreViewController preferredFocusCell]


GKDashboardMultiplayerPickerDataSource : GKCollectionDataSource <_TtP12GameCenterUI33GKSuggestionsPlayerSelectionProxy_, _TtP12GameCenterUI37GKExpandedGroupViewControllerDelegate_, GKDashboardPickerPlayerGroupCellDelegate>
 @property  NSMutableArray *contactPlayers
 @property  NSArray *friendPlayers
 @property  NSArray *suggestedPlayers
 @property  NSMutableArray *suggestedPlayerGroups
 @property  NSMutableArray *nearbyPlayers
 @property  NSArray *searchPlayersAndGroups
 @property  long long maxSelectable
 @property  NSMutableSet *previouslyInvitedPlayers
 @property  BOOL browsingForNearbyPlayers
 @property  BOOL didLoad
 @property  BOOL excludesContacts
 @property  BOOL hasFriends
 @property  NSMutableSet *selectedMessageGroups
 @property  GKContactDataSource *contactSource
 @property  BOOL selectionShouldSkipDelegateResponse
 @property  BOOL isShowingNearbyExpanded
 @property  _TtC12GameCenterUI26GKSuggestionsContainerCell *suggestionContainerCell
 @property  NSArray *selectedPlayers
 @property  NSMutableDictionary *playerStates
 @property  long long unmodifiedItemCount
 @property  BOOL showsAllFriends
 @property  int numberOfFriendsToShowInitially
 @property  BOOL showingExpandedSearch
 @property  BOOL supportsNearby
 @property  BOOL nearbyOnly
 @property  <GKDashboardNearbyBrowserDelegate> *nearbyDelegate
 @property  @? nearbyPlayersChangedHandler
 @property  long long friendSortFilterScope
 @property  NSObject<GKDashboardMultiplayerPickerDatasourceDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKDashboardMultiplayerPickerDataSource clearSelection]
  -[GKDashboardMultiplayerPickerDataSource collectionView:cellForItemAtIndexPath:]
  -[GKDashboardMultiplayerPickerDataSource collectionView:viewForSupplementaryElementOfKind:atIndexPath:]
  -[GKDashboardMultiplayerPickerDataSource setDelegate:]
  -[GKDashboardMultiplayerPickerDataSource numberOfItemsInSection:]
  -[GKDashboardMultiplayerPickerDataSource collectionView:didDeselectItemAtIndexPath:]
  -[GKDashboardMultiplayerPickerDataSource collectionView:shouldSelectItemAtIndexPath:]
  -[GKDashboardMultiplayerPickerDataSource delegate]
  -[GKDashboardMultiplayerPickerDataSource numberOfSectionsInCollectionView:]
  -[GKDashboardMultiplayerPickerDataSource itemCount]
  -[GKDashboardMultiplayerPickerDataSource collectionView:layout:sizeForItemAtIndexPath:]
  -[GKDashboardMultiplayerPickerDataSource .cxx_destruct]
  -[GKDashboardMultiplayerPickerDataSource collectionView]
  -[GKDashboardMultiplayerPickerDataSource collectionView:layout:referenceSizeForFooterInSection:]
  -[GKDashboardMultiplayerPickerDataSource collectionView:layout:referenceSizeForHeaderInSection:]
  -[GKDashboardMultiplayerPickerDataSource deselectItemAtIndexPath:animated:]
  -[GKDashboardMultiplayerPickerDataSource collectionView:didSelectItemAtIndexPath:]
  -[GKDashboardMultiplayerPickerDataSource collectionView:numberOfItemsInSection:]
  -[GKDashboardMultiplayerPickerDataSource loadDataWithCompletionHandler:]
  -[GKDashboardMultiplayerPickerDataSource selectItemAtIndexPath:animated:scrollPosition:]
  -[GKDashboardMultiplayerPickerDataSource handleLongPressGesture:]
  -[GKDashboardMultiplayerPickerDataSource contactSource]
  -[GKDashboardMultiplayerPickerDataSource setContactSource:]
  -[GKDashboardMultiplayerPickerDataSource unmodifiedItemCount]
  -[GKDashboardMultiplayerPickerDataSource preferredCollectionHeight]
  -[GKDashboardMultiplayerPickerDataSource setupCollectionView:]
  -[GKDashboardMultiplayerPickerDataSource playerForIndexPath:]
  -[GKDashboardMultiplayerPickerDataSource selectedPlayers]
  -[GKDashboardMultiplayerPickerDataSource searchKeyForSection:]
  -[GKDashboardMultiplayerPickerDataSource searchTextHasChanged]
  -[GKDashboardMultiplayerPickerDataSource playerStates]
  -[GKDashboardMultiplayerPickerDataSource setPlayerStates:]
  -[GKDashboardMultiplayerPickerDataSource maxSelectable]
  -[GKDashboardMultiplayerPickerDataSource headerTextForSection:]
  -[GKDashboardMultiplayerPickerDataSource alternateSearchKeyForSection:]
  -[GKDashboardMultiplayerPickerDataSource supportsNearby]
  -[GKDashboardMultiplayerPickerDataSource setSupportsNearby:]
  -[GKDashboardMultiplayerPickerDataSource nearbyOnly]
  -[GKDashboardMultiplayerPickerDataSource setNearbyDelegate:]
  -[GKDashboardMultiplayerPickerDataSource nearbyDelegate]
  -[GKDashboardMultiplayerPickerDataSource excludesContacts]
  -[GKDashboardMultiplayerPickerDataSource setExcludesContacts:]
  -[GKDashboardMultiplayerPickerDataSource fullContactWithIdentifier:]
  -[GKDashboardMultiplayerPickerDataSource selectedMessageGroups]
  -[GKDashboardMultiplayerPickerDataSource setSelectedMessageGroups:]
  -[GKDashboardMultiplayerPickerDataSource setBrowsingForNearbyPlayers:]
  -[GKDashboardMultiplayerPickerDataSource getSelectedPlayerCount]
  -[GKDashboardMultiplayerPickerDataSource getMaxPlayerCount]
  -[GKDashboardMultiplayerPickerDataSource didSelectPlayerGroup:indexPath:dataSourceIdentifier:completion:]
  -[GKDashboardMultiplayerPickerDataSource didSelectPlayers:indexPath:dataSourceIdentifier:completion:]
  -[GKDashboardMultiplayerPickerDataSource didDeselectPlayerGroup:indexPath:dataSourceIdentifier:completion:]
  -[GKDashboardMultiplayerPickerDataSource didDeselectPlayers:indexPath:dataSourceIdentifier:completion:]
  -[GKDashboardMultiplayerPickerDataSource didExceedAvailablePlayers]
  -[GKDashboardMultiplayerPickerDataSource getSuggestedPlayerGroups]
  -[GKDashboardMultiplayerPickerDataSource playerIsSelectable:]
  -[GKDashboardMultiplayerPickerDataSource playerIsSelected:]
  -[GKDashboardMultiplayerPickerDataSource donateGroupToPeopleSuggester:]
  -[GKDashboardMultiplayerPickerDataSource didAttemptSelectingAlreadySelectedPlayers:inGroup:]
  -[GKDashboardMultiplayerPickerDataSource expandedGroupViewControllerWillDismiss]
  -[GKDashboardMultiplayerPickerDataSource initWithMaxSelectable:previouslyInvitedPlayers:nearbyOnly:]
  -[GKDashboardMultiplayerPickerDataSource setFriendSortFilterScope:]
  -[GKDashboardMultiplayerPickerDataSource sortPlayersByNickname:]
  -[GKDashboardMultiplayerPickerDataSource sortPlayersByRecentlyPlayed:]
  -[GKDashboardMultiplayerPickerDataSource playersForSection:ignoreSearch:]
  -[GKDashboardMultiplayerPickerDataSource isPlayerAtIndexPathCoreRecent:]
  -[GKDashboardMultiplayerPickerDataSource playerForPlayerID:]
  -[GKDashboardMultiplayerPickerDataSource pickerWillSendInvites]
  -[GKDashboardMultiplayerPickerDataSource cornerMaskForItemAtIndexPath:]
  -[GKDashboardMultiplayerPickerDataSource firstIndexPathForPlayer:]
  -[GKDashboardMultiplayerPickerDataSource indexPathsForPlayer:]
  -[GKDashboardMultiplayerPickerDataSource indexPathForPlayer:inSection:]
  -[GKDashboardMultiplayerPickerDataSource indexPathForFirstPlayer]
  -[GKDashboardMultiplayerPickerDataSource setNearbyPlayerID:reachable:]
  -[GKDashboardMultiplayerPickerDataSource setNearbyPlayer:reachable:]
  -[GKDashboardMultiplayerPickerDataSource updateStateForUnreachableNearbyPlayer:]
  -[GKDashboardMultiplayerPickerDataSource hasFriends]
  -[GKDashboardMultiplayerPickerDataSource playerCellForItemAtIndexPath:inCollectionView:]
  -[GKDashboardMultiplayerPickerDataSource playerGroupCellForItemAtIndexPath:inCollectionView:]
  -[GKDashboardMultiplayerPickerDataSource suggestionsCellForItemAtIndexPath:inCollectionView:]
  -[GKDashboardMultiplayerPickerDataSource isShowingAddFriendsFooter]
  -[GKDashboardMultiplayerPickerDataSource canSelectPlayerGroup:atIndexPath:inCollectionView:]
  -[GKDashboardMultiplayerPickerDataSource _canShowMoreFriends]
  -[GKDashboardMultiplayerPickerDataSource shouldSelectPlayerGroup:]
  -[GKDashboardMultiplayerPickerDataSource expandPlayerGroup:atIndexPath:inCollectionView:]
  -[GKDashboardMultiplayerPickerDataSource updatePlayerGroups:forPlayers:excludedIndexPath:]
  -[GKDashboardMultiplayerPickerDataSource updateVisibleItemsWithPlayers:indexPath:dataSourceIdentifier:completion:]
  -[GKDashboardMultiplayerPickerDataSource updateSelectionStateForCollectionView:indexPaths:]
  -[GKDashboardMultiplayerPickerDataSource playerCellHeightInCollectionView:]
  -[GKDashboardMultiplayerPickerDataSource attributedFriendFilterTitle]
  -[GKDashboardMultiplayerPickerDataSource cornerMaskForSectionHeader]
  -[GKDashboardMultiplayerPickerDataSource boundingSizeForItemsInCollectionView:]
  -[GKDashboardMultiplayerPickerDataSource showSelectionLimitAlert]
  -[GKDashboardMultiplayerPickerDataSource didRemoveRecipientPlayers:]
  -[GKDashboardMultiplayerPickerDataSource didAddRecipientPlayers:]
  -[GKDashboardMultiplayerPickerDataSource didPickContact:]
  -[GKDashboardMultiplayerPickerDataSource updateMessageGroupsPlayerSelection]
  -[GKDashboardMultiplayerPickerDataSource candidateIndexPaths]
  -[GKDashboardMultiplayerPickerDataSource setMaxSelectable:]
  -[GKDashboardMultiplayerPickerDataSource showsAllFriends]
  -[GKDashboardMultiplayerPickerDataSource setShowsAllFriends:]
  -[GKDashboardMultiplayerPickerDataSource numberOfFriendsToShowInitially]
  -[GKDashboardMultiplayerPickerDataSource setNumberOfFriendsToShowInitially:]
  -[GKDashboardMultiplayerPickerDataSource showingExpandedSearch]
  -[GKDashboardMultiplayerPickerDataSource setShowingExpandedSearch:]
  -[GKDashboardMultiplayerPickerDataSource setNearbyOnly:]
  -[GKDashboardMultiplayerPickerDataSource nearbyPlayersChangedHandler]
  -[GKDashboardMultiplayerPickerDataSource setNearbyPlayersChangedHandler:]
  -[GKDashboardMultiplayerPickerDataSource friendSortFilterScope]
  -[GKDashboardMultiplayerPickerDataSource contactPlayers]
  -[GKDashboardMultiplayerPickerDataSource setContactPlayers:]
  -[GKDashboardMultiplayerPickerDataSource friendPlayers]
  -[GKDashboardMultiplayerPickerDataSource setFriendPlayers:]
  -[GKDashboardMultiplayerPickerDataSource suggestedPlayers]
  -[GKDashboardMultiplayerPickerDataSource setSuggestedPlayers:]
  -[GKDashboardMultiplayerPickerDataSource suggestedPlayerGroups]
  -[GKDashboardMultiplayerPickerDataSource setSuggestedPlayerGroups:]
  -[GKDashboardMultiplayerPickerDataSource nearbyPlayers]
  -[GKDashboardMultiplayerPickerDataSource setNearbyPlayers:]
  -[GKDashboardMultiplayerPickerDataSource searchPlayersAndGroups]
  -[GKDashboardMultiplayerPickerDataSource setSearchPlayersAndGroups:]
  -[GKDashboardMultiplayerPickerDataSource previouslyInvitedPlayers]
  -[GKDashboardMultiplayerPickerDataSource setPreviouslyInvitedPlayers:]
  -[GKDashboardMultiplayerPickerDataSource browsingForNearbyPlayers]
  -[GKDashboardMultiplayerPickerDataSource didLoad]
  -[GKDashboardMultiplayerPickerDataSource setDidLoad:]
  -[GKDashboardMultiplayerPickerDataSource selectionShouldSkipDelegateResponse]
  -[GKDashboardMultiplayerPickerDataSource setSelectionShouldSkipDelegateResponse:]
  -[GKDashboardMultiplayerPickerDataSource isShowingNearbyExpanded]
  -[GKDashboardMultiplayerPickerDataSource setIsShowingNearbyExpanded:]
  -[GKDashboardMultiplayerPickerDataSource suggestionContainerCell]
  -[GKDashboardMultiplayerPickerDataSource setSuggestionContainerCell:]


GKChallengeDataSource : GKDashboardChallengeDataSource
  // instance methods
  -[GKChallengeDataSource collectionView:cellForItemAtIndexPath:]
  -[GKChallengeDataSource collectionView:viewForSupplementaryElementOfKind:atIndexPath:]
  -[GKChallengeDataSource collectionView:layout:minimumLineSpacingForSectionAtIndex:]
  -[GKChallengeDataSource collectionView:layout:sizeForItemAtIndexPath:]
  -[GKChallengeDataSource collectionView:layout:minimumInteritemSpacingForSectionAtIndex:]
  -[GKChallengeDataSource setupCollectionView:]


GKLoadingCell : UICollectionViewCell
 @property  UILabel *loading
 @property  UIActivityIndicatorView *activityIndicator

  // instance methods
  -[GKLoadingCell setLoading:]
  -[GKLoadingCell activityIndicator]
  -[GKLoadingCell .cxx_destruct]
  -[GKLoadingCell setActivityIndicator:]
  -[GKLoadingCell loading]
  -[GKLoadingCell awakeFromNib]


GKMatchmakerHostViewController : GKExtensionRemoteViewController <GKMatchmakerHostProtocol, GKMatchmakerServiceProtocol>
 @property  GKMatchmakerViewController *delegate
 @property  GKGame *game
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[GKMatchmakerHostViewController dismissAutomaticallyAfterExtensionCompletion]
  +[GKMatchmakerHostViewController matchmakerExtension]

  // instance methods
  -[GKMatchmakerHostViewController applicationWillEnterForeground]
  -[GKMatchmakerHostViewController setDelegate:]
  -[GKMatchmakerHostViewController delegate]
  -[GKMatchmakerHostViewController .cxx_destruct]
  -[GKMatchmakerHostViewController messageFromExtension:]
  -[GKMatchmakerHostViewController extensionIsCanceling]
  -[GKMatchmakerHostViewController setMatchmakingMode:]
  -[GKMatchmakerHostViewController setExistingPlayers:]
  -[GKMatchmakerHostViewController setAutomatchPlayerCount:]
  -[GKMatchmakerHostViewController groupActivityJoiningPlayer:devicePushToken:]
  -[GKMatchmakerHostViewController setPlayer:responded:]
  -[GKMatchmakerHostViewController setConnectingStateForPlayer:]
  -[GKMatchmakerHostViewController setPlayer:connected:]
  -[GKMatchmakerHostViewController setPlayer:sentData:]
  -[GKMatchmakerHostViewController setInvitesFailedWithError:]
  -[GKMatchmakerHostViewController setAutomatchFailedWithError:]
  -[GKMatchmakerHostViewController setFailedWithError:]
  -[GKMatchmakerHostViewController inviterCancelled]
  -[GKMatchmakerHostViewController setHosted:]
  -[GKMatchmakerHostViewController extensionObjectProxy]
  -[GKMatchmakerHostViewController setDefaultInvitationMessage:]
  -[GKMatchmakerHostViewController setCanStartWithMinimumPlayers:]
  -[GKMatchmakerHostViewController shareMatchWithRequest:handler:]
  -[GKMatchmakerHostViewController setMatchRequestInternal:]
  -[GKMatchmakerHostViewController setNearbyPlayer:reachable:]
  -[GKMatchmakerHostViewController setAcceptedInviteInternal:]


GKMatchmakerExtensionHostContext : GKExtensionHostContext <GKMatchmakerHostProtocol>
 @property  GKGame *game
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[GKMatchmakerExtensionHostContext _extensionAuxiliaryHostProtocol]
  +[GKMatchmakerExtensionHostContext _extensionAuxiliaryVendorProtocol]

  // instance methods
  -[GKMatchmakerExtensionHostContext shareMatchWithRequest:handler:]


GKControlEnabledObserver : NSObject
  // instance methods
  -[GKControlEnabledObserver dealloc]
  -[GKControlEnabledObserver .cxx_destruct]
  -[GKControlEnabledObserver observeValueForKeyPath:ofObject:change:context:]
  -[GKControlEnabledObserver initWithControl:block:]


GKAchievementIconView : UIImageView
 @property  GKAchievement *achievement
 @property  GKAchievement *localAchievement
 @property  BOOL isDetail

  // class methods
  +[GKAchievementIconView progressSource]
  +[GKAchievementIconView progressSourceDetail]

  // instance methods
  -[GKAchievementIconView invalidateIntrinsicContentSize]
  -[GKAchievementIconView .cxx_destruct]
  -[GKAchievementIconView initWithFrame:]
  -[GKAchievementIconView achievement]
  -[GKAchievementIconView setAchievement:]
  -[GKAchievementIconView localAchievement]
  -[GKAchievementIconView setLocalAchievement:]
  -[GKAchievementIconView setupForAchievement:localAchievement:]
  -[GKAchievementIconView progressForAchievement:]
  -[GKAchievementIconView processProgressImage:forAchievement:]
  -[GKAchievementIconView progressIdentifierForAchievement:]
  -[GKAchievementIconView loadAndProcessAchievementProgressImageForAchievement:withHandler:]
  -[GKAchievementIconView configureImage]
  -[GKAchievementIconView isDetail]
  -[GKAchievementIconView setIsDetail:]


GKSettingsFriendListAccessCell : PSSwitchTableCell
 @property  GKGame *currentGame
 @property  GKGameSettingsInternal *currentGameSettings

  // class methods
  +[GKSettingsFriendListAccessCell cellStyle]

  // instance methods
  -[GKSettingsFriendListAccessCell refreshCellContentsWithSpecifier:]
  -[GKSettingsFriendListAccessCell .cxx_destruct]
  -[GKSettingsFriendListAccessCell layoutSubviews]
  -[GKSettingsFriendListAccessCell canReload]
  -[GKSettingsFriendListAccessCell controlChanged:]
  -[GKSettingsFriendListAccessCell getSwitch]
  -[GKSettingsFriendListAccessCell currentGame]
  -[GKSettingsFriendListAccessCell setCurrentGame:]
  -[GKSettingsFriendListAccessCell currentGameSettings]
  -[GKSettingsFriendListAccessCell setCurrentGameSettings:]


GKSettingsGlobalFriendListAccessCell : PSSwitchTableCell
 @property  PSSpecifier *specfier

  // instance methods
  -[GKSettingsGlobalFriendListAccessCell refreshCellContentsWithSpecifier:]
  -[GKSettingsGlobalFriendListAccessCell .cxx_destruct]
  -[GKSettingsGlobalFriendListAccessCell canReload]
  -[GKSettingsGlobalFriendListAccessCell controlChanged:]
  -[GKSettingsGlobalFriendListAccessCell globalFriendListAccess]
  -[GKSettingsGlobalFriendListAccessCell getSwitch]
  -[GKSettingsGlobalFriendListAccessCell specfier]
  -[GKSettingsGlobalFriendListAccessCell setSpecfier:]


GKChallengePlayerPickerCell : GKDashboardPlayerPickerCell
  // instance methods
  -[GKChallengePlayerPickerCell setSelected:]


GKRemoteUIHeaderView : UIView <RUIHeader>
 @property  BOOL isFirstSection
 @property  GKLabel *textLabel
 @property  double height
 @property  double bottomMargin
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKRemoteUIHeaderView textLabel]
  -[GKRemoteUIHeaderView initWithAttributes:]
  -[GKRemoteUIHeaderView height]
  -[GKRemoteUIHeaderView .cxx_destruct]
  -[GKRemoteUIHeaderView bottomMargin]
  -[GKRemoteUIHeaderView isFirstSection]
  -[GKRemoteUIHeaderView setHeight:]
  -[GKRemoteUIHeaderView setIsFirstSection:]
  -[GKRemoteUIHeaderView setTextLabel:]
  -[GKRemoteUIHeaderView setBottomMargin:]
  -[GKRemoteUIHeaderView setSectionIsFirst:]
  -[GKRemoteUIHeaderView headerHeightForWidth:inTableView:]


GKRoundButton : GKButton
 @property  UIImage *backgroundImage

  // instance methods
  -[GKRoundButton setBackgroundImage:]
  -[GKRoundButton imageRectForContentRect:]
  -[GKRoundButton backgroundImage]
  -[GKRoundButton titleRectForContentRect:]
  -[GKRoundButton tintColorDidChange]
  -[GKRoundButton initWithFrame:]
  -[GKRoundButton _highlightBounds]


GKMappedIndexPath : NSIndexPath
 @property  id tag
 @property  NSIndexPath *sourceIndexPath

  // class methods
  +[GKMappedIndexPath indexPathForItem:inSection:fromSourceIndexPath:withTag:]

  // instance methods
  -[GKMappedIndexPath .cxx_destruct]
  -[GKMappedIndexPath setTag:]
  -[GKMappedIndexPath tag]
  -[GKMappedIndexPath sourceIndexPath]
  -[GKMappedIndexPath setSourceIndexPath:]


GKAggregateMapping : NSObject <NSCopying>
 @property  NSMutableDictionary *globalToLocalSections
 @property  NSMutableDictionary *localToGlobalSections
 @property  NSMutableDictionary *globalSectionsToTags
 @property  GKCollectionViewDataSource *dataSource
 @property  long long sectionCount
 @property  NSString *dynamicTag

  // instance methods
  -[GKAggregateMapping dataSource]
  -[GKAggregateMapping sectionCount]
  -[GKAggregateMapping .cxx_destruct]
  -[GKAggregateMapping setDataSource:]
  -[GKAggregateMapping copyWithZone:]
  -[GKAggregateMapping init]
  -[GKAggregateMapping _gkDescriptionWithChildren:]
  -[GKAggregateMapping localSectionForGlobalSection:]
  -[GKAggregateMapping globalSectionForLocalSection:]
  -[GKAggregateMapping localIndexPathForGlobalIndexPath:]
  -[GKAggregateMapping globalIndexPathForLocalIndexPath:]
  -[GKAggregateMapping initWithGlobalToLocalMapping:]
  -[GKAggregateMapping tagForGlobalSection:]
  -[GKAggregateMapping addMappingFromGlobalSection:toLocalSection:withTag:]
  -[GKAggregateMapping updateMappingsStartingWithGlobalSection:]
  -[GKAggregateMapping setSectionCount:]
  -[GKAggregateMapping dynamicTag]
  -[GKAggregateMapping setDynamicTag:]
  -[GKAggregateMapping globalToLocalSections]
  -[GKAggregateMapping setGlobalToLocalSections:]
  -[GKAggregateMapping localToGlobalSections]
  -[GKAggregateMapping setLocalToGlobalSections:]
  -[GKAggregateMapping globalSectionsToTags]
  -[GKAggregateMapping setGlobalSectionsToTags:]


GKAggregateCollectionViewWrapper : NSObject
 @property  UICollectionView *wrappedView
 @property  GKAggregateMapping *mapping

  // class methods
  +[GKAggregateCollectionViewWrapper instancesRespondToSelector:]
  +[GKAggregateCollectionViewWrapper instanceMethodSignatureForSelector:]
  +[GKAggregateCollectionViewWrapper wrapperForView:mapping:]

  // instance methods
  -[GKAggregateCollectionViewWrapper setValue:forUndefinedKey:]
  -[GKAggregateCollectionViewWrapper valueForUndefinedKey:]
  -[GKAggregateCollectionViewWrapper layoutAttributesForItemAtIndexPath:]
  -[GKAggregateCollectionViewWrapper methodSignatureForSelector:]
  -[GKAggregateCollectionViewWrapper numberOfItemsInSection:]
  -[GKAggregateCollectionViewWrapper respondsToSelector:]
  -[GKAggregateCollectionViewWrapper cellForItemAtIndexPath:]
  -[GKAggregateCollectionViewWrapper .cxx_destruct]
  -[GKAggregateCollectionViewWrapper forwardingTargetForSelector:]
  -[GKAggregateCollectionViewWrapper setWrappedView:]
  -[GKAggregateCollectionViewWrapper deselectItemAtIndexPath:animated:]
  -[GKAggregateCollectionViewWrapper scrollToItemAtIndexPath:atScrollPosition:animated:]
  -[GKAggregateCollectionViewWrapper mapping]
  -[GKAggregateCollectionViewWrapper setMapping:]
  -[GKAggregateCollectionViewWrapper wrappedView]
  -[GKAggregateCollectionViewWrapper selectItemAtIndexPath:animated:scrollPosition:]
  -[GKAggregateCollectionViewWrapper indexPathsForSelectedItems]
  -[GKAggregateCollectionViewWrapper layoutAttributesForSupplementaryElementOfKind:atIndexPath:]
  -[GKAggregateCollectionViewWrapper indexPathForItemAtPoint:]
  -[GKAggregateCollectionViewWrapper indexPathForCell:]
  -[GKAggregateCollectionViewWrapper indexPathsForVisibleItems]
  -[GKAggregateCollectionViewWrapper dequeueReusableCellWithReuseIdentifier:forIndexPath:]
  -[GKAggregateCollectionViewWrapper dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:]
  -[GKAggregateCollectionViewWrapper insertSections:]
  -[GKAggregateCollectionViewWrapper deleteSections:]
  -[GKAggregateCollectionViewWrapper reloadSections:]
  -[GKAggregateCollectionViewWrapper moveSection:toSection:]
  -[GKAggregateCollectionViewWrapper insertItemsAtIndexPaths:]
  -[GKAggregateCollectionViewWrapper deleteItemsAtIndexPaths:]
  -[GKAggregateCollectionViewWrapper reloadItemsAtIndexPaths:]
  -[GKAggregateCollectionViewWrapper moveItemAtIndexPath:toIndexPath:]
  -[GKAggregateCollectionViewWrapper initWithView:mapping:]
  -[GKAggregateCollectionViewWrapper _gkRegisterCellClass:]
  -[GKAggregateCollectionViewWrapper _gkDequeueCellForClass:forIndexPath:]
  -[GKAggregateCollectionViewWrapper _gkPerformWithoutViewReuse:]
  -[GKAggregateCollectionViewWrapper _gkRegisterClass:forSupplementaryViewOfKind:]
  -[GKAggregateCollectionViewWrapper _gkDequeueSupplementaryViewForClass:ofKind:forIndexPath:]


GKViewServiceInterface : NSXPCInterface
  // class methods
  +[GKViewServiceInterface extensionInterface]
  +[GKViewServiceInterface setClassesForHostInterface:]
  +[GKViewServiceInterface setClassesForExtensionInterface:]
  +[GKViewServiceInterface extensionHostInterface]
  +[GKViewServiceInterface gameCenterHostViewControllerInterface]
  +[GKViewServiceInterface gameCenterServiceViewControllerInterface]
  +[GKViewServiceInterface remoteSignInViewControllerInterface]
  +[GKViewServiceInterface signInServiceViewControllerInterface]
  +[GKViewServiceInterface remoteFriendRequestViewControllerInterface]
  +[GKViewServiceInterface serviceFriendRequestViewControllerInterface]
  +[GKViewServiceInterface challengeIssueHostViewControllerInterface]
  +[GKViewServiceInterface challengeIssueServiceViewControllerInterface]
  +[GKViewServiceInterface matchmakerHostViewControllerInterface]
  +[GKViewServiceInterface matchmakerServiceViewControllerInterface]
  +[GKViewServiceInterface turnBasedHostViewControllerInterface]
  +[GKViewServiceInterface turnBasedServiceViewControllerInterface]
  +[GKViewServiceInterface _configureKVOTypes:]


GKBasicCollectionViewController : GKCollectionViewController
 @property  NSArray *metricsForSections
 @property  GKCollectionViewDataSource *initialDataSource
 @property  id target

  // instance methods
  -[GKBasicCollectionViewController preferredContentSize]
  -[GKBasicCollectionViewController setTarget:]
  -[GKBasicCollectionViewController target]
  -[GKBasicCollectionViewController .cxx_destruct]
  -[GKBasicCollectionViewController setDataSource:]
  -[GKBasicCollectionViewController collectionView:didSelectItemAtIndexPath:]
  -[GKBasicCollectionViewController configureDataSource]
  -[GKBasicCollectionViewController initWithDataSource:title:]
  -[GKBasicCollectionViewController metricsForSections]
  -[GKBasicCollectionViewController setMetricsForSections:]
  -[GKBasicCollectionViewController initialDataSource]
  -[GKBasicCollectionViewController setInitialDataSource:]


GKDashboardRequest : NSObject
 @property  long long state
 @property  NSString *leaderboardID
 @property  GKLeaderboard *leaderboard
 @property  long long leaderboardTimeScope
 @property  long long leaderboardPlayerScope
 @property  NSString *gameBundleID
 @property  NSString *achievementID
 @property  NSString *playerID
 @property  GKAchievement *achievement
 @property  GKGameRecord *gameRecord
 @property  BOOL isArcade
 @property  BOOL launchedFromAccessPoint
 @property  BOOL shouldShowPlayForChallenge
 @property  BOOL shouldShowPlayForTurnBasedMatch
 @property  BOOL shouldShowQuitForTurnBasedMatch
 @property  UIVisualEffectView *visualEffectView

  // instance methods
  -[GKDashboardRequest visualEffectView]
  -[GKDashboardRequest state]
  -[GKDashboardRequest .cxx_destruct]
  -[GKDashboardRequest playerID]
  -[GKDashboardRequest setVisualEffectView:]
  -[GKDashboardRequest setPlayerID:]
  -[GKDashboardRequest setState:]
  -[GKDashboardRequest leaderboard]
  -[GKDashboardRequest setLeaderboard:]
  -[GKDashboardRequest gameRecord]
  -[GKDashboardRequest setGameRecord:]
  -[GKDashboardRequest achievement]
  -[GKDashboardRequest setAchievement:]
  -[GKDashboardRequest shouldShowPlayForTurnBasedMatch]
  -[GKDashboardRequest shouldShowQuitForTurnBasedMatch]
  -[GKDashboardRequest shouldShowPlayForChallenge]
  -[GKDashboardRequest leaderboardTimeScope]
  -[GKDashboardRequest setLeaderboardTimeScope:]
  -[GKDashboardRequest leaderboardPlayerScope]
  -[GKDashboardRequest setLeaderboardPlayerScope:]
  -[GKDashboardRequest gameBundleID]
  -[GKDashboardRequest setGameBundleID:]
  -[GKDashboardRequest isArcade]
  -[GKDashboardRequest setIsArcade:]
  -[GKDashboardRequest setShouldShowPlayForChallenge:]
  -[GKDashboardRequest leaderboardID]
  -[GKDashboardRequest setLeaderboardID:]
  -[GKDashboardRequest achievementID]
  -[GKDashboardRequest setAchievementID:]
  -[GKDashboardRequest launchedFromAccessPoint]
  -[GKDashboardRequest setLaunchedFromAccessPoint:]
  -[GKDashboardRequest setShouldShowPlayForTurnBasedMatch:]
  -[GKDashboardRequest setShouldShowQuitForTurnBasedMatch:]


GKGameCenterFriendPlayerView : NSObject
  // class methods
  +[GKGameCenterFriendPlayerView newWithRelationshipResult:]
  +[GKGameCenterFriendPlayerView newWithHandle:player:]


GKMultiplayerCustomInviteMessageViewController : UIViewController
 @property  UIButton *doneButton
 @property  UITextView *messageTextField
 @property  UIVisualEffectView *backgroundEffectView
 @property  NSObject<GKMultiplayerCustomInviteMessageViewControllerDelegate> *delegate
 @property  NSString *message

  // instance methods
  -[GKMultiplayerCustomInviteMessageViewController setBackgroundEffectView:]
  -[GKMultiplayerCustomInviteMessageViewController setMessage:]
  -[GKMultiplayerCustomInviteMessageViewController setDoneButton:]
  -[GKMultiplayerCustomInviteMessageViewController setDelegate:]
  -[GKMultiplayerCustomInviteMessageViewController delegate]
  -[GKMultiplayerCustomInviteMessageViewController doneButton]
  -[GKMultiplayerCustomInviteMessageViewController .cxx_destruct]
  -[GKMultiplayerCustomInviteMessageViewController viewDidLoad]
  -[GKMultiplayerCustomInviteMessageViewController viewWillAppear:]
  -[GKMultiplayerCustomInviteMessageViewController backgroundEffectView]
  -[GKMultiplayerCustomInviteMessageViewController message]
  -[GKMultiplayerCustomInviteMessageViewController donePressed:]
  -[GKMultiplayerCustomInviteMessageViewController messageTextField]
  -[GKMultiplayerCustomInviteMessageViewController setMessageTextField:]


GKBaseComposeHeaderField : UIImageView
 @property  GKLabel *nameLabel
 @property  GKHairlineView *separatorView
 @property  unsigned long maxLineCount
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} valueFrame
 @property  NSString *nameText
 @property  NSString *valueText
 @property  SEL actionWhenTouched

  // instance methods
  -[GKBaseComposeHeaderField .cxx_destruct]
  -[GKBaseComposeHeaderField touchesBegan:withEvent:]
  -[GKBaseComposeHeaderField separatorView]
  -[GKBaseComposeHeaderField nameLabel]
  -[GKBaseComposeHeaderField setSeparatorView:]
  -[GKBaseComposeHeaderField canBecomeFirstResponder]
  -[GKBaseComposeHeaderField initWithFrame:]
  -[GKBaseComposeHeaderField setNameLabel:]
  -[GKBaseComposeHeaderField viewForBaselineLayout]
  -[GKBaseComposeHeaderField nameText]
  -[GKBaseComposeHeaderField setValueText:]
  -[GKBaseComposeHeaderField valueText]
  -[GKBaseComposeHeaderField setNameText:]
  -[GKBaseComposeHeaderField addConstraintsForValueView:]
  -[GKBaseComposeHeaderField valueFrame]
  -[GKBaseComposeHeaderField setMaxLineCount:]
  -[GKBaseComposeHeaderField maxLineCount]
  -[GKBaseComposeHeaderField actionWhenTouched]
  -[GKBaseComposeHeaderField setActionWhenTouched:]


GKComposeHeaderField : GKBaseComposeHeaderField
 @property  GKLabel *valueLabel

  // instance methods
  -[GKComposeHeaderField .cxx_destruct]
  -[GKComposeHeaderField initWithFrame:]
  -[GKComposeHeaderField valueLabel]
  -[GKComposeHeaderField setValueLabel:]
  -[GKComposeHeaderField setValueText:]
  -[GKComposeHeaderField valueText]
  -[GKComposeHeaderField valueFrame]
  -[GKComposeHeaderField setMaxLineCount:]


GKDashboardChallengeDataSource : GKCollectionDataSource <GKDashboardChallengeDetailViewControllerDelegate>
 @property  GKGameRecord *gameRecord
 @property  NSArray *challenges
 @property  BOOL shouldShowPlay

  // instance methods
  -[GKDashboardChallengeDataSource collectionView:cellForItemAtIndexPath:]
  -[GKDashboardChallengeDataSource collectionView:shouldSelectItemAtIndexPath:]
  -[GKDashboardChallengeDataSource numberOfSectionsInCollectionView:]
  -[GKDashboardChallengeDataSource itemCount]
  -[GKDashboardChallengeDataSource collectionView:layout:sizeForItemAtIndexPath:]
  -[GKDashboardChallengeDataSource .cxx_destruct]
  -[GKDashboardChallengeDataSource collectionView:didSelectItemAtIndexPath:]
  -[GKDashboardChallengeDataSource loadDataWithCompletionHandler:]
  -[GKDashboardChallengeDataSource preferredCollectionHeight]
  -[GKDashboardChallengeDataSource setupCollectionView:]
  -[GKDashboardChallengeDataSource itemForIndexPath:]
  -[GKDashboardChallengeDataSource sectionHeaderText]
  -[GKDashboardChallengeDataSource gameRecord]
  -[GKDashboardChallengeDataSource setGameRecord:]
  -[GKDashboardChallengeDataSource shouldShowPlay]
  -[GKDashboardChallengeDataSource setShouldShowPlay:]
  -[GKDashboardChallengeDataSource initWithGameRecord:]
  -[GKDashboardChallengeDataSource userDidSelectPlay:]
  -[GKDashboardChallengeDataSource newDashboardUserDidSelectPlayChallenge:]
  -[GKDashboardChallengeDataSource challenges]
  -[GKDashboardChallengeDataSource setChallenges:]


GKRemoteUITableHeaderView : UIView <RUIPageAccessory>
 @property  double height
 @property  GKLabel *label
 @property  GKLabel *subLabel
 @property  GKButton *button
 @property  NSDictionary *attributes
 @property  NSArray *replaceableConstraints
 @property  int layoutStyle
 @property  <GKRemoteUIAuxiliaryViewDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKRemoteUITableHeaderView buttonTapped:]
  -[GKRemoteUITableHeaderView layoutStyle]
  -[GKRemoteUITableHeaderView setLayoutStyle:]
  -[GKRemoteUITableHeaderView setAttributes:]
  -[GKRemoteUITableHeaderView attributes]
  -[GKRemoteUITableHeaderView initWithAttributes:]
  -[GKRemoteUITableHeaderView setDelegate:]
  -[GKRemoteUITableHeaderView leftMargin]
  -[GKRemoteUITableHeaderView button]
  -[GKRemoteUITableHeaderView height]
  -[GKRemoteUITableHeaderView delegate]
  -[GKRemoteUITableHeaderView setLabel:]
  -[GKRemoteUITableHeaderView .cxx_destruct]
  -[GKRemoteUITableHeaderView bottomMargin]
  -[GKRemoteUITableHeaderView setButton:]
  -[GKRemoteUITableHeaderView sizeThatFits:]
  -[GKRemoteUITableHeaderView label]
  -[GKRemoteUITableHeaderView setHeight:]
  -[GKRemoteUITableHeaderView rightMargin]
  -[GKRemoteUITableHeaderView intrinsicContentSize]
  -[GKRemoteUITableHeaderView objectModelDidChange:]
  -[GKRemoteUITableHeaderView createButtonWithAttributes:]
  -[GKRemoteUITableHeaderView replaceableConstraints]
  -[GKRemoteUITableHeaderView setReplaceableConstraints:]
  -[GKRemoteUITableHeaderView createLabelWithAttributes:]
  -[GKRemoteUITableHeaderView createSubLabelWithAttributes:]
  -[GKRemoteUITableHeaderView labelBaselineOffset]
  -[GKRemoteUITableHeaderView labelTopOffset]
  -[GKRemoteUITableHeaderView labelBaselineToSubLabelTopOffset]
  -[GKRemoteUITableHeaderView labelBaselineToButtonBaselineOffset]
  -[GKRemoteUITableHeaderView applyConstraints]
  -[GKRemoteUITableHeaderView subLabel]
  -[GKRemoteUITableHeaderView setSubLabel:]


GKDashboardLeaderboardSetDataSource : GKCollectionDataSource
 @property  GKGameRecord *gameRecord
 @property  NSArray *leaderboardSets
 @property  NSDictionary *leaderboardSetAssetNames
 @property  NSDictionary *leaderboardAssetNames

  // instance methods
  -[GKDashboardLeaderboardSetDataSource collectionView:cellForItemAtIndexPath:]
  -[GKDashboardLeaderboardSetDataSource collectionView:shouldSelectItemAtIndexPath:]
  -[GKDashboardLeaderboardSetDataSource itemCount]
  -[GKDashboardLeaderboardSetDataSource collectionView:layout:sizeForItemAtIndexPath:]
  -[GKDashboardLeaderboardSetDataSource .cxx_destruct]
  -[GKDashboardLeaderboardSetDataSource collectionView:didSelectItemAtIndexPath:]
  -[GKDashboardLeaderboardSetDataSource loadDataWithCompletionHandler:]
  -[GKDashboardLeaderboardSetDataSource preferredCollectionHeight]
  -[GKDashboardLeaderboardSetDataSource setupCollectionView:]
  -[GKDashboardLeaderboardSetDataSource itemForIndexPath:]
  -[GKDashboardLeaderboardSetDataSource sectionHeaderText]
  -[GKDashboardLeaderboardSetDataSource gameRecord]
  -[GKDashboardLeaderboardSetDataSource setGameRecord:]
  -[GKDashboardLeaderboardSetDataSource initWithGameRecord:]
  -[GKDashboardLeaderboardSetDataSource removeLeaderboardSetsWithoutImages]
  -[GKDashboardLeaderboardSetDataSource leaderboardSetAssetNames]
  -[GKDashboardLeaderboardSetDataSource setLeaderboardSetAssetNames:]
  -[GKDashboardLeaderboardSetDataSource leaderboardAssetNames]
  -[GKDashboardLeaderboardSetDataSource setLeaderboardAssetNames:]
  -[GKDashboardLeaderboardSetDataSource leaderboardSets]
  -[GKDashboardLeaderboardSetDataSource setLeaderboardSets:]


GKDashboardLeaderboardScoreHeaderView : UICollectionReusableView
 @property  UILabel *titleLabel
 @property  GKTimeScopeButton *timeScopeButton
 @property  NSString *title
 @property  long long timeScope
 @property  id timeScopeTarget
 @property  SEL timeScopeAction

  // class methods
  +[GKDashboardLeaderboardScoreHeaderView defaultHeight]

  // instance methods
  -[GKDashboardLeaderboardScoreHeaderView setTitleLabel:]
  -[GKDashboardLeaderboardScoreHeaderView timeScope]
  -[GKDashboardLeaderboardScoreHeaderView title]
  -[GKDashboardLeaderboardScoreHeaderView awakeFromNib]
  -[GKDashboardLeaderboardScoreHeaderView setTitle:]
  -[GKDashboardLeaderboardScoreHeaderView setTimeScope:]
  -[GKDashboardLeaderboardScoreHeaderView titleLabel]
  -[GKDashboardLeaderboardScoreHeaderView timeScopeTarget]
  -[GKDashboardLeaderboardScoreHeaderView setTimeScopeTarget:]
  -[GKDashboardLeaderboardScoreHeaderView timeScopeAction]
  -[GKDashboardLeaderboardScoreHeaderView setTimeScopeAction:]
  -[GKDashboardLeaderboardScoreHeaderView timeScopePressed:]
  -[GKDashboardLeaderboardScoreHeaderView timeScopeButton]
  -[GKDashboardLeaderboardScoreHeaderView setTimeScopeButton:]


GKButtonStyle : NSObject
 @property  double cornerRadius
 @property  BOOL clipToBounds
 @property  {UIEdgeInsets=dddd} titleEdgeInsets
 @property  UIColor *backgroundColor
 @property  id compositingFilter

  // class methods
  +[GKButtonStyle standardStyle]
  +[GKButtonStyle defaultStyle]

  // instance methods
  -[GKButtonStyle .cxx_destruct]
  -[GKButtonStyle backgroundColor]
  -[GKButtonStyle setCornerRadius:]
  -[GKButtonStyle setBackgroundColor:]
  -[GKButtonStyle cornerRadius]
  -[GKButtonStyle compositingFilter]
  -[GKButtonStyle setCompositingFilter:]
  -[GKButtonStyle titleEdgeInsets]
  -[GKButtonStyle setTitleEdgeInsets:]
  -[GKButtonStyle initWithCornerRadius:andBackgroundColor:]
  -[GKButtonStyle applyToButton:]
  -[GKButtonStyle clipToBounds]
  -[GKButtonStyle setClipToBounds:]


GKCollectionColumnDividerView : UICollectionReusableView
  // instance methods
  -[GKCollectionColumnDividerView initWithFrame:]


GKDashboardLeaderboardScoreViewController : GKDashboardCollectionViewController
 @property  GKDashboardLeaderboardScoreHeaderView *headerView
 @property  GKLeaderboard *leaderboard
 @property  GKDashboardLeaderboardScoreDataSource *friendDataSource
 @property  GKDashboardLeaderboardScoreDataSource *globalDataSource
 @property  long long timeScope

  // class methods
  +[GKDashboardLeaderboardScoreViewController initialTimeScope]
  +[GKDashboardLeaderboardScoreViewController setInitialTimeScope:]

  // instance methods
  -[GKDashboardLeaderboardScoreViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[GKDashboardLeaderboardScoreViewController collectionView:viewForSupplementaryElementOfKind:atIndexPath:]
  -[GKDashboardLeaderboardScoreViewController setHeaderView:]
  -[GKDashboardLeaderboardScoreViewController timeScope]
  -[GKDashboardLeaderboardScoreViewController headerView]
  -[GKDashboardLeaderboardScoreViewController .cxx_destruct]
  -[GKDashboardLeaderboardScoreViewController viewDidLoad]
  -[GKDashboardLeaderboardScoreViewController traitCollectionDidChange:]
  -[GKDashboardLeaderboardScoreViewController setTimeScope:]
  -[GKDashboardLeaderboardScoreViewController leaderboard]
  -[GKDashboardLeaderboardScoreViewController setLeaderboard:]
  -[GKDashboardLeaderboardScoreViewController donePressed:]
  -[GKDashboardLeaderboardScoreViewController dataUpdated:withError:]
  -[GKDashboardLeaderboardScoreViewController setupNoContentView:withError:]
  -[GKDashboardLeaderboardScoreViewController initWithGameRecord:leaderboard:]
  -[GKDashboardLeaderboardScoreViewController timeScopePressed:]
  -[GKDashboardLeaderboardScoreViewController shouldUseTwoColumnLayoutForSize:]
  -[GKDashboardLeaderboardScoreViewController updateColumnLayoutForSize:]
  -[GKDashboardLeaderboardScoreViewController friendDataSource]
  -[GKDashboardLeaderboardScoreViewController setFriendDataSource:]
  -[GKDashboardLeaderboardScoreViewController globalDataSource]
  -[GKDashboardLeaderboardScoreViewController setGlobalDataSource:]


GKDashboardSectionHeaderView : UICollectionReusableView
 @property  UIColor *titleColor
 @property  NSLayoutConstraint *rightMarginConstraint
 @property  NSString *title
 @property  UIFont *font
 @property  UILabel *titleLabel
 @property  NSLayoutConstraint *leftMarginConstraint
 @property  BOOL onDarkBackground

  // class methods
  +[GKDashboardSectionHeaderView defaultHeight]
  +[GKDashboardSectionHeaderView widthForTitle:withFont:]
  +[GKDashboardSectionHeaderView platformSizeForTitle:withFont:]

  // instance methods
  -[GKDashboardSectionHeaderView titleColor]
  -[GKDashboardSectionHeaderView setTitleColor:]
  -[GKDashboardSectionHeaderView setTitleLabel:]
  -[GKDashboardSectionHeaderView .cxx_destruct]
  -[GKDashboardSectionHeaderView title]
  -[GKDashboardSectionHeaderView font]
  -[GKDashboardSectionHeaderView setFont:]
  -[GKDashboardSectionHeaderView intrinsicContentSize]
  -[GKDashboardSectionHeaderView awakeFromNib]
  -[GKDashboardSectionHeaderView setTitle:]
  -[GKDashboardSectionHeaderView titleLabel]
  -[GKDashboardSectionHeaderView setOnDarkBackground:]
  -[GKDashboardSectionHeaderView onDarkBackground]
  -[GKDashboardSectionHeaderView rightMarginConstraint]
  -[GKDashboardSectionHeaderView setRightMarginConstraint:]
  -[GKDashboardSectionHeaderView leftMarginConstraint]
  -[GKDashboardSectionHeaderView setLeftMarginConstraint:]


GKTurnParticipantCell : GKBasePlayerCell
 @property  GKLabel *bottomLabel
 @property  GKFocusableButton *detailButton
 @property  UIImageView *statusImageView
 @property  UIStackView *textStackView
 @property  NSLayoutConstraint *iconLeadingConstraint
 @property  NSLayoutConstraint *textStackViewToSuperViewLeadingConstraint
 @property  NSLayoutConstraint *textStackViewToIconViewLeadingConstraint
 @property  NSLayoutConstraint *statusImageTrailingConstraint
 @property  NSLayoutConstraint *textContainerTrailingConstraint
 @property  NSLayoutConstraint *detailButtonConstraint
 @property  NSLayoutConstraint *overlappingPlayersViewWidthConstraint
 @property  NSLayoutConstraint *overlappingPlayersViewTrailingConstraint
 @property  _TtC12GameCenterUI22OverlappingPlayersView *overlappingPlayersView
 @property  UIView *overlappingPlayersViewContainer
 @property  UILabel *additionalPlayerCountLabel
 @property  NSArray *constraints
 @property  NSDictionary *playerAvatarMapping
 @property  NSArray *previousParticipants
 @property  GKTurnBasedMatch *match
 @property  GKTurnBasedParticipant *participant
 @property  SEL detailPressedAction
 @property  BOOL isDetail
 @property  {UIEdgeInsets=dddd} insets
 @property  UIView *divider

  // class methods
  +[GKTurnParticipantCell defaultRowHeight]
  +[GKTurnParticipantCell itemHeightList]
  +[GKTurnParticipantCell registerCellClassesForCollectionView:]

  // instance methods
  -[GKTurnParticipantCell setParticipant:]
  -[GKTurnParticipantCell setInsets:]
  -[GKTurnParticipantCell setMatch:]
  -[GKTurnParticipantCell insets]
  -[GKTurnParticipantCell canBecomeFocused]
  -[GKTurnParticipantCell setConstraints:]
  -[GKTurnParticipantCell .cxx_destruct]
  -[GKTurnParticipantCell match]
  -[GKTurnParticipantCell participant]
  -[GKTurnParticipantCell initWithFrame:]
  -[GKTurnParticipantCell traitCollectionDidChange:]
  -[GKTurnParticipantCell constraints]
  -[GKTurnParticipantCell statusImageView]
  -[GKTurnParticipantCell setStatusImageView:]
  -[GKTurnParticipantCell textStackView]
  -[GKTurnParticipantCell divider]
  -[GKTurnParticipantCell didUpdateModel]
  -[GKTurnParticipantCell updateUIBasedOnTraitCollection]
  -[GKTurnParticipantCell detailPressedAction]
  -[GKTurnParticipantCell setDetailPressedAction:]
  -[GKTurnParticipantCell establishConstraints]
  -[GKTurnParticipantCell isDetail]
  -[GKTurnParticipantCell setIsDetail:]
  -[GKTurnParticipantCell detailPressed:]
  -[GKTurnParticipantCell getOverlappingPlayerAvatarIconSize]
  -[GKTurnParticipantCell matchWantsLocalPlayerAttention]
  -[GKTurnParticipantCell configureForMatch]
  -[GKTurnParticipantCell getPlayerIDForAllNonAutomatchedTurnBasedParticipants]
  -[GKTurnParticipantCell needsRefreshOverlappingPlayersView]
  -[GKTurnParticipantCell configureOverlappingPlayersView]
  -[GKTurnParticipantCell updateOverlappingPlayerViewsAvatar]
  -[GKTurnParticipantCell configureForDetail]
  -[GKTurnParticipantCell updateMarginConstraints]
  -[GKTurnParticipantCell setDivider:]
  -[GKTurnParticipantCell detailButton]
  -[GKTurnParticipantCell setDetailButton:]
  -[GKTurnParticipantCell bottomLabel]
  -[GKTurnParticipantCell setBottomLabel:]
  -[GKTurnParticipantCell setTextStackView:]
  -[GKTurnParticipantCell iconLeadingConstraint]
  -[GKTurnParticipantCell setIconLeadingConstraint:]
  -[GKTurnParticipantCell textStackViewToSuperViewLeadingConstraint]
  -[GKTurnParticipantCell setTextStackViewToSuperViewLeadingConstraint:]
  -[GKTurnParticipantCell textStackViewToIconViewLeadingConstraint]
  -[GKTurnParticipantCell setTextStackViewToIconViewLeadingConstraint:]
  -[GKTurnParticipantCell statusImageTrailingConstraint]
  -[GKTurnParticipantCell setStatusImageTrailingConstraint:]
  -[GKTurnParticipantCell textContainerTrailingConstraint]
  -[GKTurnParticipantCell setTextContainerTrailingConstraint:]
  -[GKTurnParticipantCell detailButtonConstraint]
  -[GKTurnParticipantCell setDetailButtonConstraint:]
  -[GKTurnParticipantCell overlappingPlayersViewWidthConstraint]
  -[GKTurnParticipantCell setOverlappingPlayersViewWidthConstraint:]
  -[GKTurnParticipantCell overlappingPlayersViewTrailingConstraint]
  -[GKTurnParticipantCell setOverlappingPlayersViewTrailingConstraint:]
  -[GKTurnParticipantCell overlappingPlayersView]
  -[GKTurnParticipantCell setOverlappingPlayersView:]
  -[GKTurnParticipantCell overlappingPlayersViewContainer]
  -[GKTurnParticipantCell setOverlappingPlayersViewContainer:]
  -[GKTurnParticipantCell additionalPlayerCountLabel]
  -[GKTurnParticipantCell setAdditionalPlayerCountLabel:]
  -[GKTurnParticipantCell playerAvatarMapping]
  -[GKTurnParticipantCell setPlayerAvatarMapping:]
  -[GKTurnParticipantCell previousParticipants]
  -[GKTurnParticipantCell setPreviousParticipants:]


GKLeaderboardListHeaderView : UICollectionReusableView
 @property  UILabel *titleLabel
 @property  UILabel *subtitleLabel

  // class methods
  +[GKLeaderboardListHeaderView defaultHeight]

  // instance methods
  -[GKLeaderboardListHeaderView setSubtitleLabel:]
  -[GKLeaderboardListHeaderView subtitleLabel]
  -[GKLeaderboardListHeaderView setTitleLabel:]
  -[GKLeaderboardListHeaderView titleLabel]


GKDashboardFocusContainerView : UIView
 @property  UIView *focusView

  // instance methods
  -[GKDashboardFocusContainerView canBecomeFocused]
  -[GKDashboardFocusContainerView preferredFocusEnvironments]
  -[GKDashboardFocusContainerView focusView]
  -[GKDashboardFocusContainerView setFocusView:]


GKAcquireFocusWorkaroundView : UIView
  // instance methods
  -[GKAcquireFocusWorkaroundView canBecomeFirstResponder]


GKResizingLabel : UILabel

GKGenericRoundButton : UIButton
 @property  UIColor *fillColor
 @property  UIColor *highlightedFillColor

  // instance methods
  -[GKGenericRoundButton setFillColor:]
  -[GKGenericRoundButton fillColor]
  -[GKGenericRoundButton .cxx_destruct]
  -[GKGenericRoundButton drawRect:]
  -[GKGenericRoundButton highlightedFillColor]
  -[GKGenericRoundButton setHighlightedFillColor:]


GKResourceLoader : NSObject
 @property  NSMutableDictionary *pendingOperations
 @property  NSMapTable *requestsByCacheKey
 @property  GKResourceCache *cachedResources
 @property  NSOperationQueue *accessQueue
 @property  NSOperationQueue *notificationQueue
 @property  NSOperationQueue *requestQueue
 @property  BOOL isIdle
 @property  BOOL isInBackground

  // instance methods
  -[GKResourceLoader isInBackground]
  -[GKResourceLoader requestQueue]
  -[GKResourceLoader enterForeground]
  -[GKResourceLoader requestsByCacheKey]
  -[GKResourceLoader requestKeyForCacheKey:]
  -[GKResourceLoader accessQueue]
  -[GKResourceLoader finishLoadForRequest:withResource:error:]
  -[GKResourceLoader postDidBeginLoadingIfIdle]
  -[GKResourceLoader dealloc]
  -[GKResourceLoader enterBackground]
  -[GKResourceLoader .cxx_destruct]
  -[GKResourceLoader isIdleForReason:]
  -[GKResourceLoader initWithRequestQueue:accessQueue:notificationQueue:cacheLimit:]
  -[GKResourceLoader postDidLoadAllForReason:]
  -[GKResourceLoader cachedResourcesForCacheKey:]
  -[GKResourceLoader _commonInit]
  -[GKResourceLoader setReason:forRequestWithKey:]
  -[GKResourceLoader isIdle]
  -[GKResourceLoader reprioritizeOperations]
  -[GKResourceLoader updateLoadReason:forOperation:]
  -[GKResourceLoader removeAllCachedResources]
  -[GKResourceLoader loadResourceWithRequest:reason:]
  -[GKResourceLoader initWithParentResourceLoader:]
  -[GKResourceLoader pendingOperations]
  -[GKResourceLoader currentQualityOfService]
  -[GKResourceLoader cancelAllRequests]
  -[GKResourceLoader cachedResources]
  -[GKResourceLoader cancelRequestForCacheKey:]
  -[GKResourceLoader addResource:forCacheKey:]
  -[GKResourceLoader notificationQueue]
  -[GKResourceLoader postDidIdleIfIdle]
  -[GKResourceLoader init]
  -[GKResourceLoader removeResourcesForCacheKey:]


GKCollectionViewAggregateDataSource : GKCollectionViewDataSource
 @property  NSMutableArray *mappings
 @property  NSMapTable *dataSourceToMappings
 @property  NSMutableDictionary *globalSectionToMappings
 @property  unsigned long sectionCount

  // instance methods
  -[GKCollectionViewAggregateDataSource collectionView:cellForItemAtIndexPath:]
  -[GKCollectionViewAggregateDataSource collectionView:viewForSupplementaryElementOfKind:atIndexPath:]
  -[GKCollectionViewAggregateDataSource sectionCount]
  -[GKCollectionViewAggregateDataSource mappings]
  -[GKCollectionViewAggregateDataSource numberOfSectionsInCollectionView:]
  -[GKCollectionViewAggregateDataSource .cxx_destruct]
  -[GKCollectionViewAggregateDataSource itemAtIndexPath:]
  -[GKCollectionViewAggregateDataSource removeDataSource:]
  -[GKCollectionViewAggregateDataSource collectionView:numberOfItemsInSection:]
  -[GKCollectionViewAggregateDataSource init]
  -[GKCollectionViewAggregateDataSource setMappings:]
  -[GKCollectionViewAggregateDataSource _gkDescriptionWithChildren:]
  -[GKCollectionViewAggregateDataSource configureCollectionView:]
  -[GKCollectionViewAggregateDataSource collectionView:evaluateFactoryForSupplementaryElementOfKind:atIndexPath:isRecursive:]
  -[GKCollectionViewAggregateDataSource createMetricsTreeWithGridLayout:]
  -[GKCollectionViewAggregateDataSource collectionViewWillBecomeActive:]
  -[GKCollectionViewAggregateDataSource collectionViewDidBecomeInactive:]
  -[GKCollectionViewAggregateDataSource dataSourceForSection:]
  -[GKCollectionViewAggregateDataSource refreshContentsForDataType:userInfo:updateNotifier:]
  -[GKCollectionViewAggregateDataSource indexPathsForItem:]
  -[GKCollectionViewAggregateDataSource item:matchesSearchTerms:inSection:]
  -[GKCollectionViewAggregateDataSource removeItemAtIndexPath:completionHandler:]
  -[GKCollectionViewAggregateDataSource containsDataSource:]
  -[GKCollectionViewAggregateDataSource sectionForDataSource:]
  -[GKCollectionViewAggregateDataSource dataSource:didInsertItemsAtIndexPaths:]
  -[GKCollectionViewAggregateDataSource dataSource:didRemoveItemsAtIndexPaths:]
  -[GKCollectionViewAggregateDataSource dataSource:didRefreshItemsAtIndexPaths:]
  -[GKCollectionViewAggregateDataSource dataSource:didMoveItemAtIndexPath:toIndexPath:]
  -[GKCollectionViewAggregateDataSource dataSource:didInsertSections:]
  -[GKCollectionViewAggregateDataSource dataSource:didRemoveSections:]
  -[GKCollectionViewAggregateDataSource dataSource:didRefreshSections:]
  -[GKCollectionViewAggregateDataSource dataSource:didMoveSection:toSection:]
  -[GKCollectionViewAggregateDataSource dataSourceDidReloadData:]
  -[GKCollectionViewAggregateDataSource dataSource:performBatchUpdate:complete:]
  -[GKCollectionViewAggregateDataSource _gkDescription]
  -[GKCollectionViewAggregateDataSource setSectionCount:]
  -[GKCollectionViewAggregateDataSource wrapperForView:mapping:]
  -[GKCollectionViewAggregateDataSource addDataSource:withTag:]
  -[GKCollectionViewAggregateDataSource setDataSource:forTag:]
  -[GKCollectionViewAggregateDataSource updateMappings]
  -[GKCollectionViewAggregateDataSource mappingForGlobalSection:]
  -[GKCollectionViewAggregateDataSource mappingForDataSource:]
  -[GKCollectionViewAggregateDataSource globalSectionsForLocal:dataSource:]
  -[GKCollectionViewAggregateDataSource globalIndexPathsForLocal:dataSource:]
  -[GKCollectionViewAggregateDataSource allDataSources]
  -[GKCollectionViewAggregateDataSource dataSourceToMappings]
  -[GKCollectionViewAggregateDataSource setDataSourceToMappings:]
  -[GKCollectionViewAggregateDataSource globalSectionToMappings]
  -[GKCollectionViewAggregateDataSource setGlobalSectionToMappings:]


GKExtensionViewController : UINavigationController <GKDaemonProxyDataUpdateDelegate, GKExtensionProtocol, GKExtensionHostProtocol, GKDashboardServiceInterface>
 @property  BOOL hasInitialData
 @property  UIVisualEffectView *effectView
 @property  NSLayoutConstraint *effectBottomConstraint
 @property  NSLayoutConstraint *effectTopConstraint
 @property  BOOL alwaysShowDoneButton
 @property  double statusBarHeight
 @property  UIViewController *contentViewController
 @property  GKGame *game
 @property  int hostPID
 @property  long long hostUserInterfaceIdiom
 @property  BOOL adjustTopConstraint
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKExtensionViewController statusBarHeight]
  -[GKExtensionViewController willTransitionToTraitCollection:withTransitionCoordinator:]
  -[GKExtensionViewController setStatusBarHeight:]
  -[GKExtensionViewController contentViewController]
  -[GKExtensionViewController pushViewController:animated:]
  -[GKExtensionViewController setContentViewController:]
  -[GKExtensionViewController alwaysShowDoneButton]
  -[GKExtensionViewController viewDidAppear:]
  -[GKExtensionViewController hostPID]
  -[GKExtensionViewController .cxx_destruct]
  -[GKExtensionViewController viewDidLoad]
  -[GKExtensionViewController viewWillAppear:]
  -[GKExtensionViewController setHostPID:]
  -[GKExtensionViewController setAlwaysShowDoneButton:]
  -[GKExtensionViewController finish]
  -[GKExtensionViewController effectView]
  -[GKExtensionViewController setViewControllers:animated:]
  -[GKExtensionViewController viewDidDisappear:]
  -[GKExtensionViewController refreshContentsForDataType:userInfo:]
  -[GKExtensionViewController canBecomeFirstResponder]
  -[GKExtensionViewController setEffectView:]
  -[GKExtensionViewController initWithCoder:]
  -[GKExtensionViewController didShowViewController:animated:]
  -[GKExtensionViewController _statusBarHeightForCurrentInterfaceOrientation]
  -[GKExtensionViewController hasInitialData]
  -[GKExtensionViewController game]
  -[GKExtensionViewController setGame:]
  -[GKExtensionViewController donePressed:]
  -[GKExtensionViewController messageFromExtension:]
  -[GKExtensionViewController messageFromClient:]
  -[GKExtensionViewController setInitialState:withReply:]
  -[GKExtensionViewController setToLightBackground]
  -[GKExtensionViewController setToDarkBackground]
  -[GKExtensionViewController setupVisualEffects]
  -[GKExtensionViewController addVisualEffectViewForView:]
  -[GKExtensionViewController _useBackdropViewForWindowBackground]
  -[GKExtensionViewController constructContentViewController]
  -[GKExtensionViewController configureContentViewController]
  -[GKExtensionViewController addDoneButtonToViewController:]
  -[GKExtensionViewController clientDidCancel]
  -[GKExtensionViewController clientDidFinish]
  -[GKExtensionViewController clientWillTerminate]
  -[GKExtensionViewController hostObjectProxy]
  -[GKExtensionViewController sendMessageToClient:]
  -[GKExtensionViewController extensionIsCanceling]
  -[GKExtensionViewController extensionIsFinishing]
  -[GKExtensionViewController logOnceGameControllerUsedInGameLayer]
  -[GKExtensionViewController hostUserInterfaceIdiom]
  -[GKExtensionViewController setHostUserInterfaceIdiom:]
  -[GKExtensionViewController adjustTopConstraint]
  -[GKExtensionViewController setAdjustTopConstraint:]
  -[GKExtensionViewController setHasInitialData:]
  -[GKExtensionViewController effectBottomConstraint]
  -[GKExtensionViewController setEffectBottomConstraint:]
  -[GKExtensionViewController effectTopConstraint]
  -[GKExtensionViewController setEffectTopConstraint:]


GKExtensionContext : NSExtensionContext <GKExtensionProtocol>
 @property  long long sandboxToken
 @property  GKGame *game
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKExtensionContext sandboxToken]
  -[GKExtensionContext dealloc]
  -[GKExtensionContext .cxx_destruct]
  -[GKExtensionContext setSandboxToken:]
  -[GKExtensionContext game]
  -[GKExtensionContext setGame:]
  -[GKExtensionContext messageFromClient:]
  -[GKExtensionContext setInitialState:withReply:]
  -[GKExtensionContext hostApp:grantingAccessExtensionSandbox:replyWithEndpoint:]
  -[GKExtensionContext tearDownExtensionWithReply:]


GKMessageComposeViewController : UIViewController <MFMessageComposeViewControllerInternalDelegate>
 @property  MFMessageComposeViewController *composeController
 @property  NSDictionary *playerNamesToPlayers
 @property  NSString *messageToSend
 @property  NSMutableArray *friendsToInvite
 @property  NSMutableArray *contactsToInvite
 @property  NSURL *shareURL
 @property  <GKMessageComposeViewControllerDelegate> *delegate
 @property  <GKDashboardNearbyBrowserDelegate> *nearbyDelegate
 @property  GKTournament *tournament
 @property  long long maximumSelectablePlayersForPicker
 @property  NSArray *currentlySelectedPlayersForPicker
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[GKMessageComposeViewController canSendText]

  // instance methods
  -[GKMessageComposeViewController setDelegate:]
  -[GKMessageComposeViewController delegate]
  -[GKMessageComposeViewController .cxx_destruct]
  -[GKMessageComposeViewController shareURL]
  -[GKMessageComposeViewController setShareURL:]
  -[GKMessageComposeViewController messageComposeViewController:didFinishWithResult:]
  -[GKMessageComposeViewController composeController]
  -[GKMessageComposeViewController setComposeController:]
  -[GKMessageComposeViewController messageComposeViewController:shouldSendMessage:toRecipients:completion:]
  -[GKMessageComposeViewController setNearbyDelegate:]
  -[GKMessageComposeViewController nearbyDelegate]
  -[GKMessageComposeViewController tournament]
  -[GKMessageComposeViewController setTournament:]
  -[GKMessageComposeViewController initWithMessage:maxNumberOfPlayers:]
  -[GKMessageComposeViewController preparePresentationForMinPlayers:maxPlayers:shareURL:completionHandler:]
  -[GKMessageComposeViewController setupPickerBlock]
  -[GKMessageComposeViewController addPlayersToMessageCompose:]
  -[GKMessageComposeViewController showPlayerPickerForCompose]
  -[GKMessageComposeViewController contactForAddress:fromContactStore:]
  -[GKMessageComposeViewController maximumSelectablePlayersForPicker]
  -[GKMessageComposeViewController setMaximumSelectablePlayersForPicker:]
  -[GKMessageComposeViewController currentlySelectedPlayersForPicker]
  -[GKMessageComposeViewController setCurrentlySelectedPlayersForPicker:]
  -[GKMessageComposeViewController playerNamesToPlayers]
  -[GKMessageComposeViewController setPlayerNamesToPlayers:]
  -[GKMessageComposeViewController messageToSend]
  -[GKMessageComposeViewController setMessageToSend:]
  -[GKMessageComposeViewController friendsToInvite]
  -[GKMessageComposeViewController setFriendsToInvite:]
  -[GKMessageComposeViewController contactsToInvite]
  -[GKMessageComposeViewController setContactsToInvite:]


GKSkipControlButton : UIButton
 @property  NSString *skipValueString

  // instance methods
  -[GKSkipControlButton .cxx_destruct]
  -[GKSkipControlButton skipValueString]
  -[GKSkipControlButton setSkipValueString:]


GKContactSkipControl : UIControl
 @property  NSString *lastSelectedValue
 @property  NSArray *buttons
 @property  UIView *buttonView
 @property  UIView *centeringView
 @property  NSMutableDictionary *buttonsToTitles
 @property  NSArray *values

  // instance methods
  -[GKContactSkipControl values]
  -[GKContactSkipControl setValues:]
  -[GKContactSkipControl setButtonView:]
  -[GKContactSkipControl .cxx_destruct]
  -[GKContactSkipControl buttonView]
  -[GKContactSkipControl buttons]
  -[GKContactSkipControl initWithFrame:]
  -[GKContactSkipControl setButtons:]
  -[GKContactSkipControl awakeFromNib]
  -[GKContactSkipControl centeringView]
  -[GKContactSkipControl setCenteringView:]
  -[GKContactSkipControl determineButtonFromGesture:]
  -[GKContactSkipControl adjustForTraitCollection:]
  -[GKContactSkipControl setupButtonView]
  -[GKContactSkipControl compactPhoneValues:]
  -[GKContactSkipControl nextTitleFollowingValue:]
  -[GKContactSkipControl valueButtonCountThatFitsHeight:]
  -[GKContactSkipControl setupValueButtons]
  -[GKContactSkipControl valueSelected:]
  -[GKContactSkipControl lastSelectedValue]
  -[GKContactSkipControl setLastSelectedValue:]
  -[GKContactSkipControl buttonsToTitles]
  -[GKContactSkipControl setButtonsToTitles:]


GKTournamentViewController : UIViewController <GKTournamentHostInterface>
 @property  GKExtensionManager *extensionManager
 @property  UIAlertController *alertController
 @property  NSString *tournamentID
 @property  GKScore *playerScore
 @property  BOOL playerResigned
 @property  GKTournamentViewRequest *viewRequest
 @property  GKTournament *tournament
 @property  GKTournamentDefinition *tournamentDefinition
 @property  <GKTournamentViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKTournamentViewController setDelegate:]
  -[GKTournamentViewController didReceiveMemoryWarning]
  -[GKTournamentViewController delegate]
  -[GKTournamentViewController .cxx_destruct]
  -[GKTournamentViewController viewDidLoad]
  -[GKTournamentViewController viewWillAppear:]
  -[GKTournamentViewController dismissViewControllerAnimated:completion:]
  -[GKTournamentViewController setExtensionManager:]
  -[GKTournamentViewController extensionManager]
  -[GKTournamentViewController alertController]
  -[GKTournamentViewController setAlertController:]
  -[GKTournamentViewController loadRemoteView]
  -[GKTournamentViewController viewRequest]
  -[GKTournamentViewController extensionWillFinish]
  -[GKTournamentViewController extensionDidTerminateWithError:]
  -[GKTournamentViewController playTournament:withTryToken:]
  -[GKTournamentViewController tournament]
  -[GKTournamentViewController initWithViewRequest:]
  -[GKTournamentViewController setTournamentDefinition:]
  -[GKTournamentViewController willFinishWithError:]
  -[GKTournamentViewController tournamentDefinition]
  -[GKTournamentViewController tournamentID]
  -[GKTournamentViewController setTournamentID:]
  -[GKTournamentViewController playerScore]
  -[GKTournamentViewController setPlayerScore:]
  -[GKTournamentViewController playerResigned]
  -[GKTournamentViewController setPlayerResigned:]
  -[GKTournamentViewController setViewRequest:]


GKCollectionHorizontalLayout : GKCollectionFocusingLayout
 @property  NSDictionary *itemAttributes
 @property  NSDictionary *headerAttributes
 @property  double scrollStepIntegral
 @property  BOOL centersItemsInExcessSpace
 @property  BOOL alignItemsToTop
 @property  double extraSectionHeaderToCellSpace

  // instance methods
  -[GKCollectionHorizontalLayout shouldInvalidateLayoutForBoundsChange:]
  -[GKCollectionHorizontalLayout prepareLayout]
  -[GKCollectionHorizontalLayout collectionViewContentSize]
  -[GKCollectionHorizontalLayout layoutAttributesForItemAtIndexPath:]
  -[GKCollectionHorizontalLayout layoutAttributesForSupplementaryViewOfKind:atIndexPath:]
  -[GKCollectionHorizontalLayout layoutAttributesForElementsInRect:]
  -[GKCollectionHorizontalLayout .cxx_destruct]
  -[GKCollectionHorizontalLayout targetContentOffsetForProposedContentOffset:withScrollingVelocity:]
  -[GKCollectionHorizontalLayout applyDefaults]
  -[GKCollectionHorizontalLayout lastValidSection]
  -[GKCollectionHorizontalLayout centersItemsInExcessSpace]
  -[GKCollectionHorizontalLayout setCentersItemsInExcessSpace:]
  -[GKCollectionHorizontalLayout extraSectionHeaderToCellSpace]
  -[GKCollectionHorizontalLayout setExtraSectionHeaderToCellSpace:]
  -[GKCollectionHorizontalLayout itemAttributes]
  -[GKCollectionHorizontalLayout setItemAttributes:]
  -[GKCollectionHorizontalLayout headerAttributes]
  -[GKCollectionHorizontalLayout setHeaderAttributes:]
  -[GKCollectionHorizontalLayout maxHeaderHeight]
  -[GKCollectionHorizontalLayout firstValidSection]
  -[GKCollectionHorizontalLayout alignItemsToTop]
  -[GKCollectionHorizontalLayout setAlignItemsToTop:]
  -[GKCollectionHorizontalLayout scrollStepIntegral]
  -[GKCollectionHorizontalLayout setScrollStepIntegral:]


GKFlippableCollectionHorizontalLayout : GKCollectionHorizontalLayout

GKExtensionHostViewController : _UIRemoteViewController <GKSocialGamingHostInterface, GKSocialGamingExtensionInterface>
 @property  NSMapTable *targetForSelector
 @property  <GKExtensionHostViewControllerDelegate> *delegate
 @property  UIViewController<GKSocialGamingHostInterface> *hostViewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKExtensionHostViewController methodSignatureForSelector:]
  -[GKExtensionHostViewController setDelegate:]
  -[GKExtensionHostViewController delegate]
  -[GKExtensionHostViewController .cxx_destruct]
  -[GKExtensionHostViewController viewServiceDidTerminateWithError:]
  -[GKExtensionHostViewController methodSignatureForProtocol:selector:]
  -[GKExtensionHostViewController forwardInvocation:]
  -[GKExtensionHostViewController hostViewController]
  -[GKExtensionHostViewController setHostViewController:]
  -[GKExtensionHostViewController finishExtension]
  -[GKExtensionHostViewController extensionWillFinish]
  -[GKExtensionHostViewController addTarget:forProtocol:toLookup:]
  -[GKExtensionHostViewController buildLookupForHost:]
  -[GKExtensionHostViewController targetForSelector]
  -[GKExtensionHostViewController setTargetForSelector:]


GKTournamentExtensionHostViewController : GKExtensionHostViewController <GKTournamentExtensionInterface, GKTournamentHostInterface>
 @property  GKTournamentViewRequest *viewRequest
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[GKTournamentExtensionHostViewController exportedInterface]
  +[GKTournamentExtensionHostViewController serviceViewControllerInterface]

  // instance methods
  -[GKTournamentExtensionHostViewController setupWithViewRequest:]
  -[GKTournamentExtensionHostViewController initializeWithLocalPlayer:hostPID:reply:]
  -[GKTournamentExtensionHostViewController playTournament:withTryToken:]
  -[GKTournamentExtensionHostViewController tournamentHostViewController]


GKTopClipView : UICollectionReusableView
  // instance methods
  -[GKTopClipView initWithFrame:]


GKSupplementaryViewFactory : NSObject
 @property  id target
 @property  SEL selector
 @property  Class reusableViewClass
 @property  SEL configurator

  // class methods
  +[GKSupplementaryViewFactory factoryForClass:target:configurator:]
  +[GKSupplementaryViewFactory factoryForClass:target:configurator:userData:]

  // instance methods
  -[GKSupplementaryViewFactory selector]
  -[GKSupplementaryViewFactory collectionView:viewForSupplementaryElementOfKind:atIndexPath:]
  -[GKSupplementaryViewFactory setTarget:]
  -[GKSupplementaryViewFactory target]
  -[GKSupplementaryViewFactory setSelector:]
  -[GKSupplementaryViewFactory .cxx_destruct]
  -[GKSupplementaryViewFactory configurator]
  -[GKSupplementaryViewFactory reusableViewClass]
  -[GKSupplementaryViewFactory setReusableViewClass:]
  -[GKSupplementaryViewFactory initWithClass:target:configurator:userData:]


GKCollectionViewDataSource : NSObject <GKCollectionViewDataSourceDelegate, UICollectionViewDataSource>
 @property  NSMutableDictionary *kindsToFactories
 @property  NSHashTable *listeners
 @property  NSMutableDictionary *sectionsToMetrics
 @property  NSMutableDictionary *sectionsToSearchKeys
 @property  <GKCollectionViewDataSourceDelegate> *delegate
 @property  GKGridLayoutMetrics *dataSourceMetricsInternal
 @property  GKSectionMetrics *defaultSectionMetricsInternal
 @property  BOOL isRootDataSource
 @property  GKSectionMetrics *defaultSectionMetrics
 @property  GKGridLayoutMetrics *dataSourceMetrics
 @property  NSString *defaultSearchKey
 @property  BOOL isSearchable
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKCollectionViewDataSource collectionView:cellForItemAtIndexPath:]
  -[GKCollectionViewDataSource collectionView:viewForSupplementaryElementOfKind:atIndexPath:]
  -[GKCollectionViewDataSource setListeners:]
  -[GKCollectionViewDataSource setDelegate:]
  -[GKCollectionViewDataSource delegate]
  -[GKCollectionViewDataSource listeners]
  -[GKCollectionViewDataSource numberOfSectionsInCollectionView:]
  -[GKCollectionViewDataSource .cxx_destruct]
  -[GKCollectionViewDataSource itemAtIndexPath:]
  -[GKCollectionViewDataSource isSearchable]
  -[GKCollectionViewDataSource collectionView:numberOfItemsInSection:]
  -[GKCollectionViewDataSource init]
  -[GKCollectionViewDataSource totalItemCount]
  -[GKCollectionViewDataSource _gkDescriptionWithChildren:]
  -[GKCollectionViewDataSource configureCollectionView:]
  -[GKCollectionViewDataSource collectionView:evaluateFactoryForSupplementaryElementOfKind:atIndexPath:isRecursive:]
  -[GKCollectionViewDataSource createMetricsTreeWithGridLayout:]
  -[GKCollectionViewDataSource collectionViewWillBecomeActive:]
  -[GKCollectionViewDataSource collectionViewDidBecomeInactive:]
  -[GKCollectionViewDataSource dataSourceForSection:]
  -[GKCollectionViewDataSource refreshContentsForDataType:userInfo:updateNotifier:]
  -[GKCollectionViewDataSource indexPathsForItem:]
  -[GKCollectionViewDataSource item:matchesSearchTerms:inSection:]
  -[GKCollectionViewDataSource removeItemAtIndexPath:completionHandler:]
  -[GKCollectionViewDataSource containsDataSource:]
  -[GKCollectionViewDataSource sectionForDataSource:]
  -[GKCollectionViewDataSource searchKeyForSection:]
  -[GKCollectionViewDataSource localDescription]
  -[GKCollectionViewDataSource defaultSectionMetricsInternal]
  -[GKCollectionViewDataSource metricsForSection:]
  -[GKCollectionViewDataSource setDefaultSectionMetricsInternal:]
  -[GKCollectionViewDataSource dataSourceMetrics]
  -[GKCollectionViewDataSource setDataSourceMetrics:]
  -[GKCollectionViewDataSource setMetrics:forSection:]
  -[GKCollectionViewDataSource loadDataWithCompletionHandlerAndError:]
  -[GKCollectionViewDataSource setSearchKey:forSection:]
  -[GKCollectionViewDataSource enumerateItemsAndIndexPathsUsingBlock:]
  -[GKCollectionViewDataSource updateSupplementaryMetricsForKey:usingBlock:]
  -[GKCollectionViewDataSource defaultSectionMetrics]
  -[GKCollectionViewDataSource setDefaultSectionMetrics:]
  -[GKCollectionViewDataSource metricsForSectionInternal:]
  -[GKCollectionViewDataSource isRootDataSource]
  -[GKCollectionViewDataSource collectionView:defaultViewForSupplementaryElementOfKind:atIndexPath:]
  -[GKCollectionViewDataSource notifyItemsInsertedAtIndexPaths:]
  -[GKCollectionViewDataSource notifyItemsRemovedAtIndexPaths:]
  -[GKCollectionViewDataSource notifyItemsRefreshedAtIndexPaths:]
  -[GKCollectionViewDataSource notifyItemMovedFromIndexPath:toIndexPaths:]
  -[GKCollectionViewDataSource notifySectionsInserted:]
  -[GKCollectionViewDataSource notifySectionsRemoved:]
  -[GKCollectionViewDataSource notifySectionsRefreshed:]
  -[GKCollectionViewDataSource notifySectionMovedFrom:to:]
  -[GKCollectionViewDataSource notifySectionsMovedWithItems]
  -[GKCollectionViewDataSource notifyDidReloadData]
  -[GKCollectionViewDataSource notifyPlaceholderUpdated:]
  -[GKCollectionViewDataSource notifyBatchUpdate:]
  -[GKCollectionViewDataSource notifyBatchUpdate:complete:]
  -[GKCollectionViewDataSource targetForAction:]
  -[GKCollectionViewDataSource kindsToFactories]
  -[GKCollectionViewDataSource setKindsToFactories:]
  -[GKCollectionViewDataSource sectionsToMetrics]
  -[GKCollectionViewDataSource setSectionsToMetrics:]
  -[GKCollectionViewDataSource sectionsToSearchKeys]
  -[GKCollectionViewDataSource setSectionsToSearchKeys:]
  -[GKCollectionViewDataSource dataSourceMetricsInternal]
  -[GKCollectionViewDataSource setDataSourceMetricsInternal:]
  -[GKCollectionViewDataSource defaultSearchKey]
  -[GKCollectionViewDataSource setDefaultSearchKey:]
  -[GKCollectionViewDataSource registerSupplementaryViewOfKind:withFactory:]
  -[GKCollectionViewDataSource registerSupplementaryViewOfKind:withClass:target:configurator:]
  -[GKCollectionViewDataSource supplementaryViewFactoryForKind:]


GKDashboardPlayerPickerCell : GKDashboardPlayerCell
 @property  UIImageView *selectionView
 @property  UIView *ringView
 @property  UIButton *selectionButton
 @property  NSLayoutConstraint *nameConstraint
 @property  NSLayoutConstraint *selectionHorizontalConstraint
 @property  NSLayoutConstraint *selectionVerticalConstraint
 @property  NSLayoutConstraint *statusHeightConstraint
 @property  double nameInitialConstant
 @property  double selectionInitialHorizontalConstant
 @property  double selectionInitialVerticalConstant
 @property  double statusInitialConstant
 @property  BOOL selectable
 @property  BOOL showsLastPlayedStatusText
 @property  BOOL showsMessagesHandleInStatusText

  // class methods
  +[GKDashboardPlayerPickerCell defaultSize]

  // instance methods
  -[GKDashboardPlayerPickerCell selectionView]
  -[GKDashboardPlayerPickerCell isSelectable]
  -[GKDashboardPlayerPickerCell setSelected:]
  -[GKDashboardPlayerPickerCell .cxx_destruct]
  -[GKDashboardPlayerPickerCell _dynamicUserInterfaceTraitDidChange]
  -[GKDashboardPlayerPickerCell setPlayer:]
  -[GKDashboardPlayerPickerCell setSelectable:]
  -[GKDashboardPlayerPickerCell setSelectionView:]
  -[GKDashboardPlayerPickerCell awakeFromNib]
  -[GKDashboardPlayerPickerCell setStatusText:]
  -[GKDashboardPlayerPickerCell ringView]
  -[GKDashboardPlayerPickerCell setRingView:]
  -[GKDashboardPlayerPickerCell setStatusWithAchievementEarnedPoints:andDate:]
  -[GKDashboardPlayerPickerCell setShowsLastPlayedStatusText:]
  -[GKDashboardPlayerPickerCell setShowsMessagesHandleInStatusText:]
  -[GKDashboardPlayerPickerCell showsLastPlayedStatusText]
  -[GKDashboardPlayerPickerCell showsMessagesHandleInStatusText]
  -[GKDashboardPlayerPickerCell selectionButton]
  -[GKDashboardPlayerPickerCell setSelectionButton:]
  -[GKDashboardPlayerPickerCell nameConstraint]
  -[GKDashboardPlayerPickerCell setNameConstraint:]
  -[GKDashboardPlayerPickerCell selectionHorizontalConstraint]
  -[GKDashboardPlayerPickerCell setSelectionHorizontalConstraint:]
  -[GKDashboardPlayerPickerCell selectionVerticalConstraint]
  -[GKDashboardPlayerPickerCell setSelectionVerticalConstraint:]
  -[GKDashboardPlayerPickerCell statusHeightConstraint]
  -[GKDashboardPlayerPickerCell setStatusHeightConstraint:]
  -[GKDashboardPlayerPickerCell nameInitialConstant]
  -[GKDashboardPlayerPickerCell setNameInitialConstant:]
  -[GKDashboardPlayerPickerCell selectionInitialHorizontalConstant]
  -[GKDashboardPlayerPickerCell setSelectionInitialHorizontalConstant:]
  -[GKDashboardPlayerPickerCell selectionInitialVerticalConstant]
  -[GKDashboardPlayerPickerCell setSelectionInitialVerticalConstant:]
  -[GKDashboardPlayerPickerCell statusInitialConstant]
  -[GKDashboardPlayerPickerCell setStatusInitialConstant:]


GKGradientLabel : UILabel
  // class methods
  +[GKGradientLabel layerClass]


GKAvatarContainerView : UIView <GKPlayerAvatarViewDelegate>
 @property  UILabel *nicknameLabel
 @property  UILabel *emailLabel
 @property  UIView *imageContainer
 @property  GKGradientLabel *editLabel
 @property  UIView *editImage
 @property  UIImageView *editImageBackground
 @property  NSLayoutConstraint *imageContainerTopConstraint
 @property  UITapGestureRecognizer *tapGesture
 @property  <GKAvatarContainerViewDelegate> *delegate
 @property  GKDashboardPlayerPhotoView *playerAvatarView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKAvatarContainerView setDelegate:]
  -[GKAvatarContainerView setUserInteractionEnabled:]
  -[GKAvatarContainerView tapGesture]
  -[GKAvatarContainerView delegate]
  -[GKAvatarContainerView .cxx_destruct]
  -[GKAvatarContainerView didMoveToSuperview]
  -[GKAvatarContainerView layoutSubviews]
  -[GKAvatarContainerView awakeFromNib]
  -[GKAvatarContainerView traitCollectionDidChange:]
  -[GKAvatarContainerView imageContainer]
  -[GKAvatarContainerView setImageContainer:]
  -[GKAvatarContainerView setTapGesture:]
  -[GKAvatarContainerView playerAvatarView]
  -[GKAvatarContainerView setPlayerAvatarView:]
  -[GKAvatarContainerView didSetPlayerAvatarImage:]
  -[GKAvatarContainerView didSelectPlayerAvatarView:]
  -[GKAvatarContainerView setupEditImageBackground]
  -[GKAvatarContainerView refreshViewForLocalPlayer]
  -[GKAvatarContainerView refreshHeaderViewProfileImage]
  -[GKAvatarContainerView updateAvatarEditingAvailability]
  -[GKAvatarContainerView prepareForDefaultNicknameViewController]
  -[GKAvatarContainerView nicknameLabel]
  -[GKAvatarContainerView setNicknameLabel:]
  -[GKAvatarContainerView emailLabel]
  -[GKAvatarContainerView setEmailLabel:]
  -[GKAvatarContainerView editLabel]
  -[GKAvatarContainerView setEditLabel:]
  -[GKAvatarContainerView editImage]
  -[GKAvatarContainerView setEditImage:]
  -[GKAvatarContainerView editImageBackground]
  -[GKAvatarContainerView setEditImageBackground:]
  -[GKAvatarContainerView imageContainerTopConstraint]
  -[GKAvatarContainerView setImageContainerTopConstraint:]


_TtC12GameCenterUI28StarSkyFriendsProfileSection : GameCenterUI.PlayerProfileSection

_TtC12GameCenterUI42GKMultiplayerParticipantCollectionViewCell : UICollectionViewCell
 @property  @? tapHandler
 @property  BOOL removeButtonHidden
 @property  _TtC12GameCenterUI16DynamicTypeLabel *accessibilityNameLabel
 @property  _TtC12GameCenterUI16DynamicTypeLabel *accessibilitySubtitleLabel
 @property  _TtC12GameCenterUI23GKMultiplayerStatusView *accessibilityStatusAccessoryView

  // class methods
  +[_TtC12GameCenterUI42GKMultiplayerParticipantCollectionViewCell reuseIdentifier]

  // instance methods
  -[_TtC12GameCenterUI42GKMultiplayerParticipantCollectionViewCell .cxx_destruct]
  -[_TtC12GameCenterUI42GKMultiplayerParticipantCollectionViewCell prepareForReuse]
  -[_TtC12GameCenterUI42GKMultiplayerParticipantCollectionViewCell layoutSubviews]
  -[_TtC12GameCenterUI42GKMultiplayerParticipantCollectionViewCell initWithFrame:]
  -[_TtC12GameCenterUI42GKMultiplayerParticipantCollectionViewCell initWithCoder:]
  -[_TtC12GameCenterUI42GKMultiplayerParticipantCollectionViewCell tapHandler]
  -[_TtC12GameCenterUI42GKMultiplayerParticipantCollectionViewCell setTapHandler:]
  -[_TtC12GameCenterUI42GKMultiplayerParticipantCollectionViewCell removeButtonHidden]
  -[_TtC12GameCenterUI42GKMultiplayerParticipantCollectionViewCell setRemoveButtonHidden:]
  -[_TtC12GameCenterUI42GKMultiplayerParticipantCollectionViewCell applyWithParticipant:number:isRemovingEnabled:isInvitingEnabled:layoutMode:]
  -[_TtC12GameCenterUI42GKMultiplayerParticipantCollectionViewCell didTapRemoveButton:]
  -[_TtC12GameCenterUI42GKMultiplayerParticipantCollectionViewCell accessibilityNameLabel]
  -[_TtC12GameCenterUI42GKMultiplayerParticipantCollectionViewCell accessibilitySubtitleLabel]
  -[_TtC12GameCenterUI42GKMultiplayerParticipantCollectionViewCell accessibilityStatusAccessoryView]


_TtC12GameCenterUI28ProfilePrivacyProfileSection : GameCenterUI.PlayerProfileSection

_TtC12GameCenterUI39RecentlyPlayedWithFriendsProfileSection : GameCenterUI.PlayerProfileSection

_TtC12GameCenterUI26NavigationDoubleHeaderView : UIView
  // instance methods
  -[_TtC12GameCenterUI26NavigationDoubleHeaderView .cxx_destruct]
  -[_TtC12GameCenterUI26NavigationDoubleHeaderView layoutSubviews]
  -[_TtC12GameCenterUI26NavigationDoubleHeaderView sizeThatFits:]
  -[_TtC12GameCenterUI26NavigationDoubleHeaderView initWithFrame:]
  -[_TtC12GameCenterUI26NavigationDoubleHeaderView initWithCoder:]


_TtC12GameCenterUI18AppStoreLockupView : UIView
  // instance methods
  -[_TtC12GameCenterUI18AppStoreLockupView hitTest:withEvent:]
  -[_TtC12GameCenterUI18AppStoreLockupView .cxx_destruct]
  -[_TtC12GameCenterUI18AppStoreLockupView layoutSubviews]
  -[_TtC12GameCenterUI18AppStoreLockupView initWithFrame:]
  -[_TtC12GameCenterUI18AppStoreLockupView initWithCoder:]


_TtC12GameCenterUI14SidebarSection : GameCenterUI.DashboardSections

_TtC12GameCenterUI30InsetViewControllerContentView : GameCenterUI.BackgroundView
 @property  unsigned long edgesInsettingLayoutMarginsFromSafeArea

  // instance methods
  -[_TtC12GameCenterUI30InsetViewControllerContentView _edgesPropagatingSafeAreaInsetsToSubviews]
  -[_TtC12GameCenterUI30InsetViewControllerContentView .cxx_destruct]
  -[_TtC12GameCenterUI30InsetViewControllerContentView initWithFrame:]
  -[_TtC12GameCenterUI30InsetViewControllerContentView initWithCoder:]
  -[_TtC12GameCenterUI30InsetViewControllerContentView setEdgesInsettingLayoutMarginsFromSafeArea:]
  -[_TtC12GameCenterUI30InsetViewControllerContentView edgesInsettingLayoutMarginsFromSafeArea]


_TtC12GameCenterUI27ContinuePlayingEmbeddedView : UIView
  // instance methods
  -[_TtC12GameCenterUI27ContinuePlayingEmbeddedView .cxx_destruct]
  -[_TtC12GameCenterUI27ContinuePlayingEmbeddedView layoutSubviews]
  -[_TtC12GameCenterUI27ContinuePlayingEmbeddedView initWithFrame:]
  -[_TtC12GameCenterUI27ContinuePlayingEmbeddedView initWithCoder:]
  -[_TtC12GameCenterUI27ContinuePlayingEmbeddedView measurementsWithFitting:in:]


_TtC12GameCenterUI30StarSkyPlayerProfileHeaderView : UIView
 @property  _TtC12GameCenterUI16DynamicTypeLabel *accessibilityTitleLabel
 @property  _TtC12GameCenterUI16DynamicTypeLabel *accessibilityFriendStatusLabel

  // instance methods
  -[_TtC12GameCenterUI30StarSkyPlayerProfileHeaderView .cxx_destruct]
  -[_TtC12GameCenterUI30StarSkyPlayerProfileHeaderView layoutSubviews]
  -[_TtC12GameCenterUI30StarSkyPlayerProfileHeaderView sizeThatFits:]
  -[_TtC12GameCenterUI30StarSkyPlayerProfileHeaderView initWithFrame:]
  -[_TtC12GameCenterUI30StarSkyPlayerProfileHeaderView traitCollectionDidChange:]
  -[_TtC12GameCenterUI30StarSkyPlayerProfileHeaderView initWithCoder:]
  -[_TtC12GameCenterUI30StarSkyPlayerProfileHeaderView measurementsWithFitting:in:]
  -[_TtC12GameCenterUI30StarSkyPlayerProfileHeaderView accessibilityTitleLabel]
  -[_TtC12GameCenterUI30StarSkyPlayerProfileHeaderView accessibilityFriendStatusLabel]


_TtC12GameCenterUI20SignInProfileSection : GameCenterUI.PlayerProfileSection

_TtC12GameCenterUI22GKAddFriendsLockupView : UIView
 @property  @? addFriendsHandler

  // instance methods
  -[_TtC12GameCenterUI22GKAddFriendsLockupView .cxx_destruct]
  -[_TtC12GameCenterUI22GKAddFriendsLockupView layoutSubviews]
  -[_TtC12GameCenterUI22GKAddFriendsLockupView initWithFrame:]
  -[_TtC12GameCenterUI22GKAddFriendsLockupView didTapButton:]
  -[_TtC12GameCenterUI22GKAddFriendsLockupView initWithCoder:]
  -[_TtC12GameCenterUI22GKAddFriendsLockupView measurementsWithFitting:in:]
  -[_TtC12GameCenterUI22GKAddFriendsLockupView initWithFrame:friendState:]
  -[_TtC12GameCenterUI22GKAddFriendsLockupView addFriendsHandler]
  -[_TtC12GameCenterUI22GKAddFriendsLockupView setAddFriendsHandler:]


_TtC12GameCenterUI33RecentlyPlayedGamesProfileSection : GameCenterUI.PlayerProfileSection

_TtC12GameCenterUI27LeaderboardPlayerLockupView : UIView
  // instance methods
  -[_TtC12GameCenterUI27LeaderboardPlayerLockupView .cxx_destruct]
  -[_TtC12GameCenterUI27LeaderboardPlayerLockupView layoutSubviews]
  -[_TtC12GameCenterUI27LeaderboardPlayerLockupView sizeThatFits:]
  -[_TtC12GameCenterUI27LeaderboardPlayerLockupView initWithFrame:]
  -[_TtC12GameCenterUI27LeaderboardPlayerLockupView initWithCoder:]
  -[_TtC12GameCenterUI27LeaderboardPlayerLockupView measurementsWithFitting:in:]


_TtC12GameCenterUI31FriendSuggestionsProfileSection : GameCenterUI.PlayerProfileSection

_TtC12GameCenterUI30DashboardSidebarViewController : GameCenterUI.BaseCollectionViewController
 @property  @? dismissHandler
 @property  BOOL selectionFollowsFocus
 @property  _TtC12GameCenterUI18BootstrapPresenter *bootstrapPresenter
 @property  _TtC12GameCenterUI25DashboardSidebarPresenter *sidebarPresenter
 @property  _TtC12GameCenterUI13BasePresenter *dataPresenter
 @property  UICollectionViewCompositionalLayout *compositionalLayout

  // class methods
  +[_TtC12GameCenterUI30DashboardSidebarViewController horizontalMargin]
  +[_TtC12GameCenterUI30DashboardSidebarViewController sidebarProfileHorizontalMargin]
  +[_TtC12GameCenterUI30DashboardSidebarViewController sidebarProfileViewBottomSpace]

  // instance methods
  -[_TtC12GameCenterUI30DashboardSidebarViewController collectionView:shouldHighlightItemAtIndexPath:]
  -[_TtC12GameCenterUI30DashboardSidebarViewController collectionView:willDisplaySupplementaryView:forElementKind:atIndexPath:]
  -[_TtC12GameCenterUI30DashboardSidebarViewController initWithNibName:bundle:]
  -[_TtC12GameCenterUI30DashboardSidebarViewController viewWillLayoutSubviews]
  -[_TtC12GameCenterUI30DashboardSidebarViewController collectionView:willDisplayCell:forItemAtIndexPath:]
  -[_TtC12GameCenterUI30DashboardSidebarViewController .cxx_destruct]
  -[_TtC12GameCenterUI30DashboardSidebarViewController viewDidLoad]
  -[_TtC12GameCenterUI30DashboardSidebarViewController viewWillAppear:]
  -[_TtC12GameCenterUI30DashboardSidebarViewController collectionView:didEndDisplayingCell:forItemAtIndexPath:]
  -[_TtC12GameCenterUI30DashboardSidebarViewController dismissHandler]
  -[_TtC12GameCenterUI30DashboardSidebarViewController collectionView:didSelectItemAtIndexPath:]
  -[_TtC12GameCenterUI30DashboardSidebarViewController initWithCoder:]
  -[_TtC12GameCenterUI30DashboardSidebarViewController setDismissHandler:]
  -[_TtC12GameCenterUI30DashboardSidebarViewController selectionFollowsFocus]
  -[_TtC12GameCenterUI30DashboardSidebarViewController setSelectionFollowsFocus:]
  -[_TtC12GameCenterUI30DashboardSidebarViewController compositionalLayout]
  -[_TtC12GameCenterUI30DashboardSidebarViewController bootstrapPresenter]
  -[_TtC12GameCenterUI30DashboardSidebarViewController setBootstrapPresenter:]
  -[_TtC12GameCenterUI30DashboardSidebarViewController sidebarPresenter]
  -[_TtC12GameCenterUI30DashboardSidebarViewController dataPresenter]
  -[_TtC12GameCenterUI30DashboardSidebarViewController setCompositionalLayout:]
  -[_TtC12GameCenterUI30DashboardSidebarViewController updateBackgroundFor:]
  -[_TtC12GameCenterUI30DashboardSidebarViewController makeLayout]


_TtC12GameCenterUI32AchievementBadgeInnerShadowLayer : CALayer
  // instance methods
  -[_TtC12GameCenterUI32AchievementBadgeInnerShadowLayer drawInContext:]
  -[_TtC12GameCenterUI32AchievementBadgeInnerShadowLayer initWithLayer:]
  -[_TtC12GameCenterUI32AchievementBadgeInnerShadowLayer init]
  -[_TtC12GameCenterUI32AchievementBadgeInnerShadowLayer initWithCoder:]


_TtC12GameCenterUI19AppStoreContentView : UIView
  // instance methods
  -[_TtC12GameCenterUI19AppStoreContentView .cxx_destruct]
  -[_TtC12GameCenterUI19AppStoreContentView layoutSubviews]
  -[_TtC12GameCenterUI19AppStoreContentView sizeThatFits:]
  -[_TtC12GameCenterUI19AppStoreContentView initWithFrame:]
  -[_TtC12GameCenterUI19AppStoreContentView init]
  -[_TtC12GameCenterUI19AppStoreContentView initWithCoder:]


_TtC12GameCenterUI26RemoveFriendProfileSection : GameCenterUI.PlayerProfileSection

_TtC12GameCenterUI31ActivityFeedErrorProfileSection : GameCenterUI.PlayerProfileSection

_TtC12GameCenterUI19SmallPlayerCardView : UIView
 @property  {CGSize=dd} intrinsicContentSize
 @property  _TtC12GameCenterUI16DynamicTypeLabel *accessibilityTitleLabel
 @property  _TtC12GameCenterUI16DynamicTypeLabel *accessibilitySubtitleLabel
 @property  UIButton *accessibilityCloseButton
 @property  UIButton *accessibilityInviteButton

  // instance methods
  -[_TtC12GameCenterUI19SmallPlayerCardView .cxx_destruct]
  -[_TtC12GameCenterUI19SmallPlayerCardView layoutSubviews]
  -[_TtC12GameCenterUI19SmallPlayerCardView sizeThatFits:]
  -[_TtC12GameCenterUI19SmallPlayerCardView intrinsicContentSize]
  -[_TtC12GameCenterUI19SmallPlayerCardView initWithFrame:]
  -[_TtC12GameCenterUI19SmallPlayerCardView traitCollectionDidChange:]
  -[_TtC12GameCenterUI19SmallPlayerCardView initWithCoder:]
  -[_TtC12GameCenterUI19SmallPlayerCardView accessibilitySubtitleLabel]
  -[_TtC12GameCenterUI19SmallPlayerCardView measurementsWithFitting:in:]
  -[_TtC12GameCenterUI19SmallPlayerCardView accessibilityTitleLabel]
  -[_TtC12GameCenterUI19SmallPlayerCardView didTapCloseButton]
  -[_TtC12GameCenterUI19SmallPlayerCardView didTapButton]
  -[_TtC12GameCenterUI19SmallPlayerCardView accessibilityCloseButton]
  -[_TtC12GameCenterUI19SmallPlayerCardView accessibilityInviteButton]


_TtC12GameCenterUI20AchievementsLinkView : UIView
 @property  _TtC12GameCenterUI16DynamicTypeLabel *accessibilityTitleLabel

  // instance methods
  -[_TtC12GameCenterUI20AchievementsLinkView .cxx_destruct]
  -[_TtC12GameCenterUI20AchievementsLinkView layoutSubviews]
  -[_TtC12GameCenterUI20AchievementsLinkView sizeThatFits:]
  -[_TtC12GameCenterUI20AchievementsLinkView initWithFrame:]
  -[_TtC12GameCenterUI20AchievementsLinkView initWithCoder:]
  -[_TtC12GameCenterUI20AchievementsLinkView measurementsWithFitting:in:]
  -[_TtC12GameCenterUI20AchievementsLinkView accessibilityTitleLabel]


_TtC12GameCenterUI32AchievementsByGameViewController : GameCenterUI.BaseCollectionViewController
  // instance methods
  -[_TtC12GameCenterUI32AchievementsByGameViewController collectionView:shouldHighlightItemAtIndexPath:]
  -[_TtC12GameCenterUI32AchievementsByGameViewController collectionView:willDisplaySupplementaryView:forElementKind:atIndexPath:]
  -[_TtC12GameCenterUI32AchievementsByGameViewController initWithNibName:bundle:]
  -[_TtC12GameCenterUI32AchievementsByGameViewController viewDidAppear:]
  -[_TtC12GameCenterUI32AchievementsByGameViewController collectionView:willDisplayCell:forItemAtIndexPath:]
  -[_TtC12GameCenterUI32AchievementsByGameViewController .cxx_destruct]
  -[_TtC12GameCenterUI32AchievementsByGameViewController viewDidLoad]
  -[_TtC12GameCenterUI32AchievementsByGameViewController collectionView:didEndDisplayingCell:forItemAtIndexPath:]
  -[_TtC12GameCenterUI32AchievementsByGameViewController collectionView:didSelectItemAtIndexPath:]
  -[_TtC12GameCenterUI32AchievementsByGameViewController viewWillDisappear:]
  -[_TtC12GameCenterUI32AchievementsByGameViewController initWithCoder:]


_TtC12GameCenterUI34PlayerProfileRequiredDataPresenter : Swift._SwiftObject
  // instance methods
  -[_TtC12GameCenterUI34PlayerProfileRequiredDataPresenter updateSections:]


_TtC12GameCenterUI42GKMultiplayerPickerAddFriendsSupplementary : UICollectionReusableView
 @property  @? addFriendsHandler

  // class methods
  +[_TtC12GameCenterUI42GKMultiplayerPickerAddFriendsSupplementary reuseIdentifier]
  +[_TtC12GameCenterUI42GKMultiplayerPickerAddFriendsSupplementary preferredHeightFitting:inTraitEnvironment:]

  // instance methods
  -[_TtC12GameCenterUI42GKMultiplayerPickerAddFriendsSupplementary .cxx_destruct]
  -[_TtC12GameCenterUI42GKMultiplayerPickerAddFriendsSupplementary layoutSubviews]
  -[_TtC12GameCenterUI42GKMultiplayerPickerAddFriendsSupplementary initWithFrame:]
  -[_TtC12GameCenterUI42GKMultiplayerPickerAddFriendsSupplementary initWithCoder:]
  -[_TtC12GameCenterUI42GKMultiplayerPickerAddFriendsSupplementary addFriendsHandler]
  -[_TtC12GameCenterUI42GKMultiplayerPickerAddFriendsSupplementary setAddFriendsHandler:]


_TtC12GameCenterUI37NavigationBarVisibilityScrollObserver : Swift._SwiftObject

_TtC12GameCenterUI14BackgroundView : UIView
  // instance methods
  -[_TtC12GameCenterUI14BackgroundView .cxx_destruct]
  -[_TtC12GameCenterUI14BackgroundView layoutSubviews]
  -[_TtC12GameCenterUI14BackgroundView _dynamicUserInterfaceTraitDidChange]
  -[_TtC12GameCenterUI14BackgroundView initWithFrame:]
  -[_TtC12GameCenterUI14BackgroundView initWithCoder:]


_TtC12GameCenterUI25SettingsScrollObservation : Swift._SwiftObject

_TtC12GameCenterUI18GameCenterSettings : Swift._SwiftObject

_TtC12GameCenterUI31GKPickerGroupCollectionViewCell : GKFocusHighlightingCollectionViewCell
  // instance methods
  -[_TtC12GameCenterUI31GKPickerGroupCollectionViewCell initWithFrame:]
  -[_TtC12GameCenterUI31GKPickerGroupCollectionViewCell initWithCoder:]


_TtC12GameCenterUI17GKPickerGroupCell : GameCenterUI.GKPickerGroupCollectionViewCell
 @property  UIView *container
 @property  UIImageView *messageIcon
 @property  UIView *iconContainer
 @property  UIView *ringView
 @property  UILabel *titleLabel
 @property  UILabel *subtitleLabel
 @property  UIView *nearbyIconContainer
 @property  UIVisualEffectView *nearbyIconVisualEffectView
 @property  UIImageView *nearbyIcon
 @property  <_TtP12GameCenterUI22GKPickerGroupCellProxy_> *groupCellDelegate
 @property  BOOL highlighted
 @property  BOOL selected
 @property  UILabel *accessibilityTitleLabel

  // class methods
  +[_TtC12GameCenterUI17GKPickerGroupCell reuseIdentifier]
  +[_TtC12GameCenterUI17GKPickerGroupCell reuseIdentifierAX]

  // instance methods
  -[_TtC12GameCenterUI17GKPickerGroupCell setSubtitleLabel:]
  -[_TtC12GameCenterUI17GKPickerGroupCell subtitleLabel]
  -[_TtC12GameCenterUI17GKPickerGroupCell setContainer:]
  -[_TtC12GameCenterUI17GKPickerGroupCell setTitleLabel:]
  -[_TtC12GameCenterUI17GKPickerGroupCell dealloc]
  -[_TtC12GameCenterUI17GKPickerGroupCell setSelected:]
  -[_TtC12GameCenterUI17GKPickerGroupCell .cxx_destruct]
  -[_TtC12GameCenterUI17GKPickerGroupCell prepareForReuse]
  -[_TtC12GameCenterUI17GKPickerGroupCell container]
  -[_TtC12GameCenterUI17GKPickerGroupCell setHighlighted:]
  -[_TtC12GameCenterUI17GKPickerGroupCell layoutSubviews]
  -[_TtC12GameCenterUI17GKPickerGroupCell isHighlighted]
  -[_TtC12GameCenterUI17GKPickerGroupCell initWithFrame:]
  -[_TtC12GameCenterUI17GKPickerGroupCell isSelected]
  -[_TtC12GameCenterUI17GKPickerGroupCell awakeFromNib]
  -[_TtC12GameCenterUI17GKPickerGroupCell traitCollectionDidChange:]
  -[_TtC12GameCenterUI17GKPickerGroupCell titleLabel]
  -[_TtC12GameCenterUI17GKPickerGroupCell initWithCoder:]
  -[_TtC12GameCenterUI17GKPickerGroupCell configureWithPlayers:title:subtitle:messagesGroupIdentifier:source:playerSelectionProxy:]
  -[_TtC12GameCenterUI17GKPickerGroupCell groupCellDelegate]
  -[_TtC12GameCenterUI17GKPickerGroupCell setGroupCellDelegate:]
  -[_TtC12GameCenterUI17GKPickerGroupCell iconContainer]
  -[_TtC12GameCenterUI17GKPickerGroupCell setIconContainer:]
  -[_TtC12GameCenterUI17GKPickerGroupCell messageIcon]
  -[_TtC12GameCenterUI17GKPickerGroupCell setMessageIcon:]
  -[_TtC12GameCenterUI17GKPickerGroupCell ringView]
  -[_TtC12GameCenterUI17GKPickerGroupCell setRingView:]
  -[_TtC12GameCenterUI17GKPickerGroupCell accessibilityTitleLabel]
  -[_TtC12GameCenterUI17GKPickerGroupCell handleLongPressWithSender:]
  -[_TtC12GameCenterUI17GKPickerGroupCell nearbyIconContainer]
  -[_TtC12GameCenterUI17GKPickerGroupCell setNearbyIconContainer:]
  -[_TtC12GameCenterUI17GKPickerGroupCell nearbyIconVisualEffectView]
  -[_TtC12GameCenterUI17GKPickerGroupCell setNearbyIconVisualEffectView:]
  -[_TtC12GameCenterUI17GKPickerGroupCell nearbyIcon]
  -[_TtC12GameCenterUI17GKPickerGroupCell setNearbyIcon:]


_TtC12GameCenterUI29AccessPointRootViewController : UIViewController
 @property  unsigned long supportedInterfaceOrientations

  // instance methods
  -[_TtC12GameCenterUI29AccessPointRootViewController initWithNibName:bundle:]
  -[_TtC12GameCenterUI29AccessPointRootViewController supportedInterfaceOrientations]
  -[_TtC12GameCenterUI29AccessPointRootViewController initWithCoder:]


_TtC12GameCenterUI17AccessPointWindow : UIWindow
  // instance methods
  -[_TtC12GameCenterUI17AccessPointWindow initWithWindowScene:]
  -[_TtC12GameCenterUI17AccessPointWindow initWithContentRect:]
  -[_TtC12GameCenterUI17AccessPointWindow hitTest:withEvent:]
  -[_TtC12GameCenterUI17AccessPointWindow dealloc]
  -[_TtC12GameCenterUI17AccessPointWindow .cxx_destruct]
  -[_TtC12GameCenterUI17AccessPointWindow _canAffectStatusBarAppearance]
  -[_TtC12GameCenterUI17AccessPointWindow initWithFrame:]
  -[_TtC12GameCenterUI17AccessPointWindow initWithCoder:]


_TtCC12GameCenterUI17AccessPointWindow10LayoutView : UIView
  // instance methods
  -[_TtCC12GameCenterUI17AccessPointWindow10LayoutView initWithFrame:]
  -[_TtCC12GameCenterUI17AccessPointWindow10LayoutView initWithCoder:]


_TtC12GameCenterUI24GKMultiplayerStepperView : UIView
 @property  UIButton *accessibilityDownButton
 @property  UIButton *accessibilityUpButton

  // instance methods
  -[_TtC12GameCenterUI24GKMultiplayerStepperView .cxx_destruct]
  -[_TtC12GameCenterUI24GKMultiplayerStepperView layoutSubviews]
  -[_TtC12GameCenterUI24GKMultiplayerStepperView initWithFrame:]
  -[_TtC12GameCenterUI24GKMultiplayerStepperView initWithCoder:]
  -[_TtC12GameCenterUI24GKMultiplayerStepperView measurementsWithFitting:in:]
  -[_TtC12GameCenterUI24GKMultiplayerStepperView didTapDown:]
  -[_TtC12GameCenterUI24GKMultiplayerStepperView didTapUp:]
  -[_TtC12GameCenterUI24GKMultiplayerStepperView accessibilityDownButton]
  -[_TtC12GameCenterUI24GKMultiplayerStepperView accessibilityUpButton]
  -[_TtC12GameCenterUI24GKMultiplayerStepperView accessibilityUpdateStepperWithValue:]


_TtC12GameCenterUI28BaseCollectionViewController : UICollectionViewController <UIAdaptivePresentationControllerDelegate>
 @property  UICollectionView *collectionView

  // instance methods
  -[_TtC12GameCenterUI28BaseCollectionViewController setCollectionView:]
  -[_TtC12GameCenterUI28BaseCollectionViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[_TtC12GameCenterUI28BaseCollectionViewController presentationControllerDidDismiss:]
  -[_TtC12GameCenterUI28BaseCollectionViewController scrollViewDidScroll:]
  -[_TtC12GameCenterUI28BaseCollectionViewController initWithNibName:bundle:]
  -[_TtC12GameCenterUI28BaseCollectionViewController viewDidAppear:]
  -[_TtC12GameCenterUI28BaseCollectionViewController .cxx_destruct]
  -[_TtC12GameCenterUI28BaseCollectionViewController collectionView]
  -[_TtC12GameCenterUI28BaseCollectionViewController viewDidLoad]
  -[_TtC12GameCenterUI28BaseCollectionViewController viewWillAppear:]
  -[_TtC12GameCenterUI28BaseCollectionViewController loadView]
  -[_TtC12GameCenterUI28BaseCollectionViewController viewDidLayoutSubviews]
  -[_TtC12GameCenterUI28BaseCollectionViewController initWithCollectionViewLayout:]
  -[_TtC12GameCenterUI28BaseCollectionViewController initWithCoder:]


_TtC12GameCenterUIP33_A62BD05DE70094D27EB878D79984A7D331LocalPlayerSignInViewController : GKSignInViewController
  // instance methods
  -[_TtC12GameCenterUIP33_A62BD05DE70094D27EB878D79984A7D331LocalPlayerSignInViewController initWithNibName:bundle:]
  -[_TtC12GameCenterUIP33_A62BD05DE70094D27EB878D79984A7D331LocalPlayerSignInViewController .cxx_destruct]
  -[_TtC12GameCenterUIP33_A62BD05DE70094D27EB878D79984A7D331LocalPlayerSignInViewController initWithCoder:]
  -[_TtC12GameCenterUIP33_A62BD05DE70094D27EB878D79984A7D331LocalPlayerSignInViewController cancelSignIn]


_TtC12GameCenterUI42AuthenticationWithOnboardingViewController : UINavigationController
  // instance methods
  -[_TtC12GameCenterUI42AuthenticationWithOnboardingViewController initWithRootViewController:]
  -[_TtC12GameCenterUI42AuthenticationWithOnboardingViewController initWithNibName:bundle:]
  -[_TtC12GameCenterUI42AuthenticationWithOnboardingViewController .cxx_destruct]
  -[_TtC12GameCenterUI42AuthenticationWithOnboardingViewController initWithNavigationBarClass:toolbarClass:]
  -[_TtC12GameCenterUI42AuthenticationWithOnboardingViewController init]
  -[_TtC12GameCenterUI42AuthenticationWithOnboardingViewController initWithCoder:]


_TtC12GameCenterUI20BlockBasedFocusGuide : UIFocusGuide
 @property  BOOL enabled

  // instance methods
  -[_TtC12GameCenterUI20BlockBasedFocusGuide .cxx_destruct]
  -[_TtC12GameCenterUI20BlockBasedFocusGuide setEnabled:]
  -[_TtC12GameCenterUI20BlockBasedFocusGuide init]
  -[_TtC12GameCenterUI20BlockBasedFocusGuide isEnabled]
  -[_TtC12GameCenterUI20BlockBasedFocusGuide initWithCoder:]


_TtC12GameCenterUI21EmptyStatePlatterView : GameCenterUI.AppStoreContentPlatterView
  // instance methods
  -[_TtC12GameCenterUI21EmptyStatePlatterView .cxx_destruct]
  -[_TtC12GameCenterUI21EmptyStatePlatterView traitCollectionDidChange:]
  -[_TtC12GameCenterUI21EmptyStatePlatterView initWithCoder:]


_TtC12GameCenterUI29GKMultiplayerButtonHeaderView : UIView
  // instance methods
  -[_TtC12GameCenterUI29GKMultiplayerButtonHeaderView .cxx_destruct]
  -[_TtC12GameCenterUI29GKMultiplayerButtonHeaderView layoutSubviews]
  -[_TtC12GameCenterUI29GKMultiplayerButtonHeaderView sizeThatFits:]
  -[_TtC12GameCenterUI29GKMultiplayerButtonHeaderView initWithFrame:]
  -[_TtC12GameCenterUI29GKMultiplayerButtonHeaderView initWithCoder:]
  -[_TtC12GameCenterUI29GKMultiplayerButtonHeaderView cancelPressed:]
  -[_TtC12GameCenterUI29GKMultiplayerButtonHeaderView measurementsWithFitting:in:]
  -[_TtC12GameCenterUI29GKMultiplayerButtonHeaderView initWithMinimumValue:maximumValue:initialValue:cancelButtonHandler:]
  -[_TtC12GameCenterUI29GKMultiplayerButtonHeaderView initWithCancelButtonHandler:]
  -[_TtC12GameCenterUI29GKMultiplayerButtonHeaderView wantsMaterialBackgroundWithScrollOffset:]
  -[_TtC12GameCenterUI29GKMultiplayerButtonHeaderView applyGame:]
  -[_TtC12GameCenterUI29GKMultiplayerButtonHeaderView updateCountWithMinPlayers:maxPlayers:]


_TtC12GameCenterUI30FriendListAccessProfileSection : GameCenterUI.PlayerProfileSection

_TtC12GameCenterUI22CompoundScrollObserver : Swift._SwiftObject

_TtC12GameCenterUI32ReportFriendActionImplementation : NSObject
  // instance methods
  -[_TtC12GameCenterUI32ReportFriendActionImplementation .cxx_destruct]
  -[_TtC12GameCenterUI32ReportFriendActionImplementation init]


_TtC12GameCenterUI6Switch : UISwitch
  // instance methods
  -[_TtC12GameCenterUI6Switch .cxx_destruct]
  -[_TtC12GameCenterUI6Switch initWithFrame:]
  -[_TtC12GameCenterUI6Switch initWithCoder:]
  -[_TtC12GameCenterUI6Switch didToggle]


_TtC12GameCenterUI34NicknameUpdateActionImplementation : Swift._SwiftObject

_TtC12GameCenterUI17ProfileAvatarView : GameCenterUI.AvatarView
 @property  BOOL accessibilityIsEditable
 @property  UIVisualEffectView *accessibilityProfileEditButtonBackground
 @property  UIView *accessibilityRoundedEditButton
 @property  _TtC12GameCenterUI16DynamicTypeLabel *accessibilityProfileEditLabel

  // instance methods
  -[_TtC12GameCenterUI17ProfileAvatarView .cxx_destruct]
  -[_TtC12GameCenterUI17ProfileAvatarView layoutSubviews]
  -[_TtC12GameCenterUI17ProfileAvatarView initWithFrame:]
  -[_TtC12GameCenterUI17ProfileAvatarView traitCollectionDidChange:]
  -[_TtC12GameCenterUI17ProfileAvatarView initWithCoder:]
  -[_TtC12GameCenterUI17ProfileAvatarView didTap]
  -[_TtC12GameCenterUI17ProfileAvatarView accessibilityIsEditable]
  -[_TtC12GameCenterUI17ProfileAvatarView accessibilityProfileEditButtonBackground]
  -[_TtC12GameCenterUI17ProfileAvatarView accessibilityRoundedEditButton]
  -[_TtC12GameCenterUI17ProfileAvatarView accessibilityProfileEditLabel]


_TtC12GameCenterUIP33_3CDA1BD77FD495B0F73399413CCB4C6E22RoundEditProfileButton : UIView
  // instance methods
  -[_TtC12GameCenterUIP33_3CDA1BD77FD495B0F73399413CCB4C6E22RoundEditProfileButton .cxx_destruct]
  -[_TtC12GameCenterUIP33_3CDA1BD77FD495B0F73399413CCB4C6E22RoundEditProfileButton layoutSubviews]
  -[_TtC12GameCenterUIP33_3CDA1BD77FD495B0F73399413CCB4C6E22RoundEditProfileButton sizeThatFits:]
  -[_TtC12GameCenterUIP33_3CDA1BD77FD495B0F73399413CCB4C6E22RoundEditProfileButton initWithFrame:]
  -[_TtC12GameCenterUIP33_3CDA1BD77FD495B0F73399413CCB4C6E22RoundEditProfileButton traitCollectionDidChange:]
  -[_TtC12GameCenterUIP33_3CDA1BD77FD495B0F73399413CCB4C6E22RoundEditProfileButton initWithCoder:]


_TtC12GameCenterUI26BaseCollectionReusableView : UICollectionReusableView
  // instance methods
  -[_TtC12GameCenterUI26BaseCollectionReusableView _edgesPropagatingSafeAreaInsetsToSubviews]
  -[_TtC12GameCenterUI26BaseCollectionReusableView initWithFrame:]
  -[_TtC12GameCenterUI26BaseCollectionReusableView initWithCoder:]


_TtC12GameCenterUI20JetDashboardCellView : UIView
 @property  NSString *accessibilityLabel
 @property  _TtC12GameCenterUI16DynamicTypeLabel *accessibilityTitleLabel
 @property  _TtC12GameCenterUI16DynamicTypeLabel *accessibilitySubtitleLabel
 @property  _TtC12GameCenterUI16DynamicTypeLabel *accessibilityAccessoryeLabel

  // instance methods
  -[_TtC12GameCenterUI20JetDashboardCellView accessibilityLabel]
  -[_TtC12GameCenterUI20JetDashboardCellView setAccessibilityLabel:]
  -[_TtC12GameCenterUI20JetDashboardCellView .cxx_destruct]
  -[_TtC12GameCenterUI20JetDashboardCellView layoutSubviews]
  -[_TtC12GameCenterUI20JetDashboardCellView sizeThatFits:]
  -[_TtC12GameCenterUI20JetDashboardCellView initWithFrame:]
  -[_TtC12GameCenterUI20JetDashboardCellView initWithCoder:]
  -[_TtC12GameCenterUI20JetDashboardCellView accessibilitySubtitleLabel]
  -[_TtC12GameCenterUI20JetDashboardCellView measurementsWithFitting:in:]
  -[_TtC12GameCenterUI20JetDashboardCellView accessibilityTitleLabel]
  -[_TtC12GameCenterUI20JetDashboardCellView accessibilityAccessoryeLabel]


_TtC12GameCenterUI30GKMultiplayerStepperController : NSObject
  // instance methods
  -[_TtC12GameCenterUI30GKMultiplayerStepperController .cxx_destruct]
  -[_TtC12GameCenterUI30GKMultiplayerStepperController init]
  -[_TtC12GameCenterUI30GKMultiplayerStepperController initWithMinimumValue:maximumValue:initialValue:valueChangedHandler:]


_TtC12GameCenterUI30ActivityFeedLeaderboardRowView : UIView
  // instance methods
  -[_TtC12GameCenterUI30ActivityFeedLeaderboardRowView .cxx_destruct]
  -[_TtC12GameCenterUI30ActivityFeedLeaderboardRowView layoutSubviews]
  -[_TtC12GameCenterUI30ActivityFeedLeaderboardRowView sizeThatFits:]
  -[_TtC12GameCenterUI30ActivityFeedLeaderboardRowView initWithFrame:]
  -[_TtC12GameCenterUI30ActivityFeedLeaderboardRowView initWithCoder:]


_TtC12GameCenterUI24AddFriendsProfileSection : GameCenterUI.PlayerProfileSection

_TtC12GameCenterUI32AppStoreContentListPagePresenter : Swift._SwiftObject

_TtC12GameCenterUI26ActivityFeedProfileSection : GameCenterUI.PlayerProfileSection

_TtC12GameCenterUI19TappableArtworkView : GameCenterUI.ArtworkView
  // instance methods
  -[_TtC12GameCenterUI19TappableArtworkView .cxx_destruct]
  -[_TtC12GameCenterUI19TappableArtworkView initWithFrame:]
  -[_TtC12GameCenterUI19TappableArtworkView didTap]


GKProfileCreatedViewController : UIViewController
  // instance methods
  -[GKProfileCreatedViewController initWithNibName:bundle:]
  -[GKProfileCreatedViewController viewDidAppear:]
  -[GKProfileCreatedViewController .cxx_destruct]
  -[GKProfileCreatedViewController viewDidLoad]
  -[GKProfileCreatedViewController initWithCoder:]


_TtC12GameCenterUI9Animation : Swift._SwiftObject

_TtC12GameCenterUI15SmallLockupView : UIView
 @property  {UIEdgeInsets=dddd} layoutMargins
 @property  _TtC12GameCenterUI11ArtworkView *accessibilityArtworkView
 @property  _TtC12GameCenterUI16DynamicTypeLabel *accessibilityTitleLabel
 @property  _TtC12GameCenterUI16DynamicTypeLabel *accessibilitySubtitleLabel

  // instance methods
  -[_TtC12GameCenterUI15SmallLockupView setLayoutMargins:]
  -[_TtC12GameCenterUI15SmallLockupView .cxx_destruct]
  -[_TtC12GameCenterUI15SmallLockupView layoutSubviews]
  -[_TtC12GameCenterUI15SmallLockupView layoutMargins]
  -[_TtC12GameCenterUI15SmallLockupView sizeThatFits:]
  -[_TtC12GameCenterUI15SmallLockupView initWithFrame:]
  -[_TtC12GameCenterUI15SmallLockupView initWithCoder:]
  -[_TtC12GameCenterUI15SmallLockupView accessibilitySubtitleLabel]
  -[_TtC12GameCenterUI15SmallLockupView measurementsWithFitting:in:]
  -[_TtC12GameCenterUI15SmallLockupView accessibilityTitleLabel]
  -[_TtC12GameCenterUI15SmallLockupView accessibilityArtworkView]


_TtC12GameCenterUI23GKMultiplayerFooterView : UIView
 @property  BOOL startGameButtonEnabled
 @property  BOOL inviteFriendsButtonEnabled
 @property  BOOL inviteFriendsButtonHidden
 @property  NSString *primaryButtonTitle
 @property  NSString *secondaryButtonTitle
 @property  NSString *footerStatusString
 @property  @? startGameHandler
 @property  @? inviteFriendsHandler

  // instance methods
  -[_TtC12GameCenterUI23GKMultiplayerFooterView .cxx_destruct]
  -[_TtC12GameCenterUI23GKMultiplayerFooterView layoutSubviews]
  -[_TtC12GameCenterUI23GKMultiplayerFooterView sizeThatFits:]
  -[_TtC12GameCenterUI23GKMultiplayerFooterView initWithFrame:]
  -[_TtC12GameCenterUI23GKMultiplayerFooterView didTapButton:]
  -[_TtC12GameCenterUI23GKMultiplayerFooterView initWithCoder:]
  -[_TtC12GameCenterUI23GKMultiplayerFooterView primaryButtonTitle]
  -[_TtC12GameCenterUI23GKMultiplayerFooterView secondaryButtonTitle]
  -[_TtC12GameCenterUI23GKMultiplayerFooterView setPrimaryButtonTitle:]
  -[_TtC12GameCenterUI23GKMultiplayerFooterView setSecondaryButtonTitle:]
  -[_TtC12GameCenterUI23GKMultiplayerFooterView measurementsWithFitting:in:]
  -[_TtC12GameCenterUI23GKMultiplayerFooterView wantsMaterialBackgroundWithScrollOffset:]
  -[_TtC12GameCenterUI23GKMultiplayerFooterView startGameButtonEnabled]
  -[_TtC12GameCenterUI23GKMultiplayerFooterView setStartGameButtonEnabled:]
  -[_TtC12GameCenterUI23GKMultiplayerFooterView inviteFriendsButtonEnabled]
  -[_TtC12GameCenterUI23GKMultiplayerFooterView setInviteFriendsButtonEnabled:]
  -[_TtC12GameCenterUI23GKMultiplayerFooterView inviteFriendsButtonHidden]
  -[_TtC12GameCenterUI23GKMultiplayerFooterView setInviteFriendsButtonHidden:]
  -[_TtC12GameCenterUI23GKMultiplayerFooterView footerStatusString]
  -[_TtC12GameCenterUI23GKMultiplayerFooterView setFooterStatusString:]
  -[_TtC12GameCenterUI23GKMultiplayerFooterView startGameHandler]
  -[_TtC12GameCenterUI23GKMultiplayerFooterView setStartGameHandler:]
  -[_TtC12GameCenterUI23GKMultiplayerFooterView inviteFriendsHandler]
  -[_TtC12GameCenterUI23GKMultiplayerFooterView setInviteFriendsHandler:]
  -[_TtC12GameCenterUI23GKMultiplayerFooterView configureUsing:]
  -[_TtC12GameCenterUI23GKMultiplayerFooterView didTapSecondaryButton:]


_TtC12GameCenterUI25DashboardSidebarPresenter : GameCenterUI.BasePresenter
 @property  GKDashboardRequest *request
 @property  NSString *title

  // instance methods
  -[_TtC12GameCenterUI25DashboardSidebarPresenter .cxx_destruct]
  -[_TtC12GameCenterUI25DashboardSidebarPresenter title]
  -[_TtC12GameCenterUI25DashboardSidebarPresenter request]
  -[_TtC12GameCenterUI25DashboardSidebarPresenter initWithPlayerId:]
  -[_TtC12GameCenterUI25DashboardSidebarPresenter handleViewDidLoad]


_TtC12GameCenterUI25LeaderboardHeroLockupView : UIView
  // instance methods
  -[_TtC12GameCenterUI25LeaderboardHeroLockupView .cxx_destruct]
  -[_TtC12GameCenterUI25LeaderboardHeroLockupView layoutSubviews]
  -[_TtC12GameCenterUI25LeaderboardHeroLockupView sizeThatFits:]
  -[_TtC12GameCenterUI25LeaderboardHeroLockupView initWithFrame:]
  -[_TtC12GameCenterUI25LeaderboardHeroLockupView initWithCoder:]
  -[_TtC12GameCenterUI25LeaderboardHeroLockupView measurementsWithFitting:in:]


_TtC12GameCenterUI26JetDashboardViewController : GameCenterUI.BaseSplitCollectionViewController <GKPlayerAvatarViewDelegate>
 @property  _TtC12GameCenterUI18BaseSplitPresenter *dataPresenter
 @property  UICollectionViewCompositionalLayout *secondaryCompositionalLayout
 @property  PSRootController *_rootController
 @property  PSSpecifier *_specifier

  // instance methods
  -[_TtC12GameCenterUI26JetDashboardViewController collectionView:shouldHighlightItemAtIndexPath:]
  -[_TtC12GameCenterUI26JetDashboardViewController collectionView:willDisplaySupplementaryView:forElementKind:atIndexPath:]
  -[_TtC12GameCenterUI26JetDashboardViewController viewDidAppear:]
  -[_TtC12GameCenterUI26JetDashboardViewController collectionView:previewForDismissingContextMenuWithConfiguration:]
  -[_TtC12GameCenterUI26JetDashboardViewController collectionView:willDisplayCell:forItemAtIndexPath:]
  -[_TtC12GameCenterUI26JetDashboardViewController .cxx_destruct]
  -[_TtC12GameCenterUI26JetDashboardViewController viewDidLoad]
  -[_TtC12GameCenterUI26JetDashboardViewController viewWillAppear:]
  -[_TtC12GameCenterUI26JetDashboardViewController viewDidLayoutSubviews]
  -[_TtC12GameCenterUI26JetDashboardViewController collectionView:previewForHighlightingContextMenuWithConfiguration:]
  -[_TtC12GameCenterUI26JetDashboardViewController collectionView:didSelectItemAtIndexPath:]
  -[_TtC12GameCenterUI26JetDashboardViewController viewWillDisappear:]
  -[_TtC12GameCenterUI26JetDashboardViewController traitCollectionDidChange:]
  -[_TtC12GameCenterUI26JetDashboardViewController collectionView:contextMenuConfigurationForItemAtIndexPath:point:]
  -[_TtC12GameCenterUI26JetDashboardViewController initWithCoder:]
  -[_TtC12GameCenterUI26JetDashboardViewController willMoveToParentViewController:]
  -[_TtC12GameCenterUI26JetDashboardViewController _rootController]
  -[_TtC12GameCenterUI26JetDashboardViewController _specifier]
  -[_TtC12GameCenterUI26JetDashboardViewController donePressed:]
  -[_TtC12GameCenterUI26JetDashboardViewController didSelectPlayerAvatarView:]
  -[_TtC12GameCenterUI26JetDashboardViewController dataPresenter]
  -[_TtC12GameCenterUI26JetDashboardViewController setDataPresenter:]
  -[_TtC12GameCenterUI26JetDashboardViewController secondaryCompositionalLayout]
  -[_TtC12GameCenterUI26JetDashboardViewController setSecondaryCompositionalLayout:]
  -[_TtC12GameCenterUI26JetDashboardViewController makeSecondaryLayout]
  -[_TtC12GameCenterUI26JetDashboardViewController set_rootController:]
  -[_TtC12GameCenterUI26JetDashboardViewController set_specifier:]


_TtC12GameCenterUI31SettingsContainerViewController : UIViewController
 @property  PSRootController *_rootController
 @property  PSSpecifier *_specifier

  // instance methods
  -[_TtC12GameCenterUI31SettingsContainerViewController initWithNibName:bundle:]
  -[_TtC12GameCenterUI31SettingsContainerViewController viewDidAppear:]
  -[_TtC12GameCenterUI31SettingsContainerViewController dealloc]
  -[_TtC12GameCenterUI31SettingsContainerViewController .cxx_destruct]
  -[_TtC12GameCenterUI31SettingsContainerViewController viewDidLoad]
  -[_TtC12GameCenterUI31SettingsContainerViewController viewWillAppear:]
  -[_TtC12GameCenterUI31SettingsContainerViewController viewDidLayoutSubviews]
  -[_TtC12GameCenterUI31SettingsContainerViewController viewWillDisappear:]
  -[_TtC12GameCenterUI31SettingsContainerViewController initWithCoder:]
  -[_TtC12GameCenterUI31SettingsContainerViewController _rootController]
  -[_TtC12GameCenterUI31SettingsContainerViewController _specifier]
  -[_TtC12GameCenterUI31SettingsContainerViewController set_rootController:]
  -[_TtC12GameCenterUI31SettingsContainerViewController set_specifier:]


_TtC12GameCenterUIP33_C2AB98B87AF2030AFF6D71CAC9E6FA9326PreferencesModalController : UINavigationController <UINavigationControllerDelegate>
 @property  {CGSize=dd} preferredContentSize
 @property  BOOL canBecomeFirstResponder

  // instance methods
  -[_TtC12GameCenterUIP33_C2AB98B87AF2030AFF6D71CAC9E6FA9326PreferencesModalController preferredContentSize]
  -[_TtC12GameCenterUIP33_C2AB98B87AF2030AFF6D71CAC9E6FA9326PreferencesModalController initWithRootViewController:]
  -[_TtC12GameCenterUIP33_C2AB98B87AF2030AFF6D71CAC9E6FA9326PreferencesModalController setPreferredContentSize:]
  -[_TtC12GameCenterUIP33_C2AB98B87AF2030AFF6D71CAC9E6FA9326PreferencesModalController initWithNibName:bundle:]
  -[_TtC12GameCenterUIP33_C2AB98B87AF2030AFF6D71CAC9E6FA9326PreferencesModalController navigationController:didShowViewController:animated:]
  -[_TtC12GameCenterUIP33_C2AB98B87AF2030AFF6D71CAC9E6FA9326PreferencesModalController viewDidLoad]
  -[_TtC12GameCenterUIP33_C2AB98B87AF2030AFF6D71CAC9E6FA9326PreferencesModalController initWithNavigationBarClass:toolbarClass:]
  -[_TtC12GameCenterUIP33_C2AB98B87AF2030AFF6D71CAC9E6FA9326PreferencesModalController canBecomeFirstResponder]
  -[_TtC12GameCenterUIP33_C2AB98B87AF2030AFF6D71CAC9E6FA9326PreferencesModalController initWithCoder:]
  -[_TtC12GameCenterUIP33_C2AB98B87AF2030AFF6D71CAC9E6FA9326PreferencesModalController didTapDone]


_TtC12GameCenterUI32GKMultiplayerPickerNoFriendsCell : UICollectionViewCell
 @property  @? addFriendsHandler

  // class methods
  +[_TtC12GameCenterUI32GKMultiplayerPickerNoFriendsCell reuseIdentifier]
  +[_TtC12GameCenterUI32GKMultiplayerPickerNoFriendsCell itemHeightFitting:inTraitEnvironment:]

  // instance methods
  -[_TtC12GameCenterUI32GKMultiplayerPickerNoFriendsCell .cxx_destruct]
  -[_TtC12GameCenterUI32GKMultiplayerPickerNoFriendsCell layoutSubviews]
  -[_TtC12GameCenterUI32GKMultiplayerPickerNoFriendsCell initWithFrame:]
  -[_TtC12GameCenterUI32GKMultiplayerPickerNoFriendsCell initWithCoder:]
  -[_TtC12GameCenterUI32GKMultiplayerPickerNoFriendsCell measurementsWithFitting:in:]
  -[_TtC12GameCenterUI32GKMultiplayerPickerNoFriendsCell addFriendsHandler]
  -[_TtC12GameCenterUI32GKMultiplayerPickerNoFriendsCell setAddFriendsHandler:]


_TtC12GameCenterUI29GameLayerNavigationController : UINavigationController <UIViewControllerTransitioningDelegate, UINavigationControllerDelegate>
 @property  {CGSize=dd} preferredContentSize
 @property  BOOL canBecomeFirstResponder

  // instance methods
  -[_TtC12GameCenterUI29GameLayerNavigationController preferredContentSize]
  -[_TtC12GameCenterUI29GameLayerNavigationController initWithRootViewController:]
  -[_TtC12GameCenterUI29GameLayerNavigationController setPreferredContentSize:]
  -[_TtC12GameCenterUI29GameLayerNavigationController initWithNibName:bundle:]
  -[_TtC12GameCenterUI29GameLayerNavigationController viewDidAppear:]
  -[_TtC12GameCenterUI29GameLayerNavigationController .cxx_destruct]
  -[_TtC12GameCenterUI29GameLayerNavigationController viewDidLoad]
  -[_TtC12GameCenterUI29GameLayerNavigationController navigationController:willShowViewController:animated:]
  -[_TtC12GameCenterUI29GameLayerNavigationController initWithNavigationBarClass:toolbarClass:]
  -[_TtC12GameCenterUI29GameLayerNavigationController canBecomeFirstResponder]
  -[_TtC12GameCenterUI29GameLayerNavigationController presentationControllerForPresentedViewController:presentingViewController:sourceViewController:]
  -[_TtC12GameCenterUI29GameLayerNavigationController initWithCoder:]
  -[_TtC12GameCenterUI29GameLayerNavigationController _requiresCustomPresentationController]
  -[_TtC12GameCenterUI29GameLayerNavigationController didTapDone]


_TtC12GameCenterUI22DynamicTypeLinkedLabel : GameCenterUI.DynamicTypeLabel
 @property  NSAttributedString *attributedText

  // instance methods
  -[_TtC12GameCenterUI22DynamicTypeLinkedLabel .cxx_destruct]
  -[_TtC12GameCenterUI22DynamicTypeLinkedLabel setAttributedText:]
  -[_TtC12GameCenterUI22DynamicTypeLinkedLabel attributedText]
  -[_TtC12GameCenterUI22DynamicTypeLinkedLabel initWithCoder:]
  -[_TtC12GameCenterUI22DynamicTypeLinkedLabel labelTapped:]


_TtC12GameCenterUI27NearbyPlayersProfileSection : GameCenterUI.PlayerProfileSection

_TtC12GameCenterUI20FriendsFeedPresenter : GameCenterUI.BasePresenter
  // instance methods
  -[_TtC12GameCenterUI20FriendsFeedPresenter .cxx_destruct]
  -[_TtC12GameCenterUI20FriendsFeedPresenter updateSnapshot]
  -[_TtC12GameCenterUI20FriendsFeedPresenter initWithPlayerId:]
  -[_TtC12GameCenterUI20FriendsFeedPresenter initWithGame:]
  -[_TtC12GameCenterUI20FriendsFeedPresenter loadMoreActivityFeedWithContinuationToken:]


_TtC12GameCenterUI33AchievementCardCollectionViewCell : GameCenterUI.BaseCollectionViewCell
 @property  BOOL canBecomeFocused

  // instance methods
  -[_TtC12GameCenterUI33AchievementCardCollectionViewCell didUpdateFocusInContext:withAnimationCoordinator:]
  -[_TtC12GameCenterUI33AchievementCardCollectionViewCell canBecomeFocused]
  -[_TtC12GameCenterUI33AchievementCardCollectionViewCell .cxx_destruct]
  -[_TtC12GameCenterUI33AchievementCardCollectionViewCell layoutSubviews]
  -[_TtC12GameCenterUI33AchievementCardCollectionViewCell initWithFrame:]
  -[_TtC12GameCenterUI33AchievementCardCollectionViewCell initWithCoder:]


_TtC12GameCenterUI33GKMultiplayerViewControllerLayout : UICollectionViewFlowLayout
 @property  {CGSize=dd} collectionViewContentSize
 @property  long long cellLayoutMode

  // class methods
  +[_TtC12GameCenterUI33GKMultiplayerViewControllerLayout minimumContentInsetIn:]

  // instance methods
  -[_TtC12GameCenterUI33GKMultiplayerViewControllerLayout shouldInvalidateLayoutForBoundsChange:]
  -[_TtC12GameCenterUI33GKMultiplayerViewControllerLayout prepareLayout]
  -[_TtC12GameCenterUI33GKMultiplayerViewControllerLayout collectionViewContentSize]
  -[_TtC12GameCenterUI33GKMultiplayerViewControllerLayout init]
  -[_TtC12GameCenterUI33GKMultiplayerViewControllerLayout initWithCoder:]
  -[_TtC12GameCenterUI33GKMultiplayerViewControllerLayout cellLayoutMode]


_TtC12GameCenterUI22OverlappingPlayersView : UIView
 @property  double overlapPercentage

  // instance methods
  -[_TtC12GameCenterUI22OverlappingPlayersView .cxx_destruct]
  -[_TtC12GameCenterUI22OverlappingPlayersView prepareForReuse]
  -[_TtC12GameCenterUI22OverlappingPlayersView layoutSubviews]
  -[_TtC12GameCenterUI22OverlappingPlayersView sizeThatFits:]
  -[_TtC12GameCenterUI22OverlappingPlayersView initWithFrame:]
  -[_TtC12GameCenterUI22OverlappingPlayersView initWithCoder:]
  -[_TtC12GameCenterUI22OverlappingPlayersView measurementsWithFitting:in:]
  -[_TtC12GameCenterUI22OverlappingPlayersView overlapPercentage]
  -[_TtC12GameCenterUI22OverlappingPlayersView setOverlapPercentage:]
  -[_TtC12GameCenterUI22OverlappingPlayersView applyWithPlayerAvatars:playerSize:]


_TtC12GameCenterUI27AchievementsByGamePresenter : Swift._SwiftObject

_TtC12GameCenterUI30RemoveReportUserProfileSection : GameCenterUI.PlayerProfileSection

_TtC12GameCenterUI11LoadingView : GameCenterUI.BackgroundView
  // instance methods
  -[_TtC12GameCenterUI11LoadingView .cxx_destruct]
  -[_TtC12GameCenterUI11LoadingView layoutSubviews]
  -[_TtC12GameCenterUI11LoadingView initWithFrame:]
  -[_TtC12GameCenterUI11LoadingView didMoveToWindow]
  -[_TtC12GameCenterUI11LoadingView initWithCoder:]


_TtC12GameCenterUI20ActivityFeedBaseView : UIView
  // instance methods
  -[_TtC12GameCenterUI20ActivityFeedBaseView .cxx_destruct]
  -[_TtC12GameCenterUI20ActivityFeedBaseView layoutSubviews]
  -[_TtC12GameCenterUI20ActivityFeedBaseView sizeThatFits:]
  -[_TtC12GameCenterUI20ActivityFeedBaseView initWithFrame:]
  -[_TtC12GameCenterUI20ActivityFeedBaseView initWithCoder:]


_TtC12GameCenterUI19TitledParagraphView : UIView
  // instance methods
  -[_TtC12GameCenterUI19TitledParagraphView .cxx_destruct]
  -[_TtC12GameCenterUI19TitledParagraphView layoutSubviews]
  -[_TtC12GameCenterUI19TitledParagraphView sizeThatFits:]
  -[_TtC12GameCenterUI19TitledParagraphView initWithFrame:]
  -[_TtC12GameCenterUI19TitledParagraphView initWithCoder:]
  -[_TtC12GameCenterUI19TitledParagraphView measurementsWithFitting:in:]


_TtC12GameCenterUI33PrivacyPolicyActionImplementation : NSObject
  // instance methods
  -[_TtC12GameCenterUI33PrivacyPolicyActionImplementation .cxx_destruct]
  -[_TtC12GameCenterUI33PrivacyPolicyActionImplementation init]


_TtC12GameCenterUI29GKDashboardShowMoreFooterView : UICollectionReusableView
 @property  @? actionHandler
 @property  NSString *showMoreText
 @property  BOOL canBecomeFocused

  // instance methods
  -[_TtC12GameCenterUI29GKDashboardShowMoreFooterView pressesEnded:withEvent:]
  -[_TtC12GameCenterUI29GKDashboardShowMoreFooterView didUpdateFocusInContext:withAnimationCoordinator:]
  -[_TtC12GameCenterUI29GKDashboardShowMoreFooterView setActionHandler:]
  -[_TtC12GameCenterUI29GKDashboardShowMoreFooterView canBecomeFocused]
  -[_TtC12GameCenterUI29GKDashboardShowMoreFooterView .cxx_destruct]
  -[_TtC12GameCenterUI29GKDashboardShowMoreFooterView didTap:]
  -[_TtC12GameCenterUI29GKDashboardShowMoreFooterView layoutSubviews]
  -[_TtC12GameCenterUI29GKDashboardShowMoreFooterView actionHandler]
  -[_TtC12GameCenterUI29GKDashboardShowMoreFooterView initWithFrame:]
  -[_TtC12GameCenterUI29GKDashboardShowMoreFooterView initWithCoder:]
  -[_TtC12GameCenterUI29GKDashboardShowMoreFooterView setShowMoreText:]
  -[_TtC12GameCenterUI29GKDashboardShowMoreFooterView showMoreText]


_TtC12GameCenterUI27StarSkyHeaderProfileSection : GameCenterUI.PlayerProfileSection

_TtC12GameCenterUI22ActivityFeedSharedView : UIView
 @property  NSString *accessibilityLabel
 @property  _TtC12GameCenterUI16DynamicTypeLabel *accessibilityTitleLabel

  // instance methods
  -[_TtC12GameCenterUI22ActivityFeedSharedView accessibilityLabel]
  -[_TtC12GameCenterUI22ActivityFeedSharedView setAccessibilityLabel:]
  -[_TtC12GameCenterUI22ActivityFeedSharedView .cxx_destruct]
  -[_TtC12GameCenterUI22ActivityFeedSharedView layoutSubviews]
  -[_TtC12GameCenterUI22ActivityFeedSharedView sizeThatFits:]
  -[_TtC12GameCenterUI22ActivityFeedSharedView initWithFrame:]
  -[_TtC12GameCenterUI22ActivityFeedSharedView traitCollectionDidChange:]
  -[_TtC12GameCenterUI22ActivityFeedSharedView initWithCoder:]
  -[_TtC12GameCenterUI22ActivityFeedSharedView accessibilityTitleLabel]


_TtC12GameCenterUI21GameCenterUIBootstrap : Swift._SwiftObject

_TtC12GameCenterUI17RoundedCornerView : UIView
  // instance methods
  -[_TtC12GameCenterUI17RoundedCornerView .cxx_destruct]
  -[_TtC12GameCenterUI17RoundedCornerView layoutSubviews]
  -[_TtC12GameCenterUI17RoundedCornerView initWithFrame:]
  -[_TtC12GameCenterUI17RoundedCornerView traitCollectionDidChange:]
  -[_TtC12GameCenterUI17RoundedCornerView initWithCoder:]


_TtC12GameCenterUI30ContactsIntegrationConsentView : GameCenterUI.OnboardingTemplateView
  // instance methods
  -[_TtC12GameCenterUI30ContactsIntegrationConsentView .cxx_destruct]
  -[_TtC12GameCenterUI30ContactsIntegrationConsentView primaryAction]
  -[_TtC12GameCenterUI30ContactsIntegrationConsentView initWithCoder:]
  -[_TtC12GameCenterUI30ContactsIntegrationConsentView secondaryAction]


_TtC12GameCenterUI20FriendsListPresenter : Swift._SwiftObject

GameLayerPageGrid : NSObject
 @property  double columnWidth
 @property  double interColumnSpacing
 @property  long long columnCount
 @property  {UIEdgeInsets=dddd} minimumInsets
 @property  {UIEdgeInsets=dddd} centeringInsets

  // instance methods
  -[GameLayerPageGrid columnCount]
  -[GameLayerPageGrid .cxx_destruct]
  -[GameLayerPageGrid init]
  -[GameLayerPageGrid columnWidth]
  -[GameLayerPageGrid minimumInsets]
  -[GameLayerPageGrid interColumnSpacing]
  -[GameLayerPageGrid initWithSize:traitCollection:]
  -[GameLayerPageGrid initWithSize:traitCollection:idealColumnSizeCategory:]
  -[GameLayerPageGrid centeringInsets]
  -[GameLayerPageGrid initWithContainerSize:traitCollection:]
  -[GameLayerPageGrid initWithWidth:columnSizeCategory:maxColumns:]


_TtC12GameCenterUI24ActivityFeedLoadMoreView : UIView
  // instance methods
  -[_TtC12GameCenterUI24ActivityFeedLoadMoreView .cxx_destruct]
  -[_TtC12GameCenterUI24ActivityFeedLoadMoreView layoutSubviews]
  -[_TtC12GameCenterUI24ActivityFeedLoadMoreView sizeThatFits:]
  -[_TtC12GameCenterUI24ActivityFeedLoadMoreView initWithFrame:]
  -[_TtC12GameCenterUI24ActivityFeedLoadMoreView initWithCoder:]


_TtC12GameCenterUI19AvatarArtworkLoader : Swift._SwiftObject

_TtC12GameCenterUI11CloseButton : GameCenterUI.HeaderButton
 @property  {CGSize=dd} intrinsicContentSize

  // instance methods
  -[_TtC12GameCenterUI11CloseButton .cxx_destruct]
  -[_TtC12GameCenterUI11CloseButton sizeThatFits:]
  -[_TtC12GameCenterUI11CloseButton intrinsicContentSize]
  -[_TtC12GameCenterUI11CloseButton initWithFrame:]
  -[_TtC12GameCenterUI11CloseButton init]


_TtC12GameCenterUI29GameCenterDataUpdatePresenter : NSObject <GKDaemonProxyDataUpdateDelegate>
  // instance methods
  -[_TtC12GameCenterUI29GameCenterDataUpdatePresenter friendRequestSelected:]
  -[_TtC12GameCenterUI29GameCenterDataUpdatePresenter dealloc]
  -[_TtC12GameCenterUI29GameCenterDataUpdatePresenter .cxx_destruct]
  -[_TtC12GameCenterUI29GameCenterDataUpdatePresenter setBadgeCount:forType:]
  -[_TtC12GameCenterUI29GameCenterDataUpdatePresenter refreshContentsForDataType:userInfo:]
  -[_TtC12GameCenterUI29GameCenterDataUpdatePresenter init]
  -[_TtC12GameCenterUI29GameCenterDataUpdatePresenter refreshFriendContents:]


_TtC12GameCenterUI17SectionHeaderView : UICollectionReusableView
 @property  UILabel *accessibilitySectionHeaderLabel

  // instance methods
  -[_TtC12GameCenterUI17SectionHeaderView .cxx_destruct]
  -[_TtC12GameCenterUI17SectionHeaderView layoutSubviews]
  -[_TtC12GameCenterUI17SectionHeaderView sizeThatFits:]
  -[_TtC12GameCenterUI17SectionHeaderView initWithFrame:]
  -[_TtC12GameCenterUI17SectionHeaderView initWithCoder:]
  -[_TtC12GameCenterUI17SectionHeaderView accessibilitySectionHeaderLabel]


_TtC12GameCenterUI16DynamicTypeLabel : UILabel
 @property  UIFont *font
 @property  long long textAlignment
 @property  NSAttributedString *attributedText

  // instance methods
  -[_TtC12GameCenterUI16DynamicTypeLabel setTextAlignment:]
  -[_TtC12GameCenterUI16DynamicTypeLabel .cxx_destruct]
  -[_TtC12GameCenterUI16DynamicTypeLabel setAttributedText:]
  -[_TtC12GameCenterUI16DynamicTypeLabel attributedText]
  -[_TtC12GameCenterUI16DynamicTypeLabel textAlignment]
  -[_TtC12GameCenterUI16DynamicTypeLabel font]
  -[_TtC12GameCenterUI16DynamicTypeLabel setFont:]
  -[_TtC12GameCenterUI16DynamicTypeLabel initWithFrame:]
  -[_TtC12GameCenterUI16DynamicTypeLabel traitCollectionDidChange:]
  -[_TtC12GameCenterUI16DynamicTypeLabel initWithCoder:]


_TtC12GameCenterUI28SectionHeaderPlaceholderView : GameCenterUI.BaseCollectionReusableView
  // instance methods
  -[_TtC12GameCenterUI28SectionHeaderPlaceholderView initWithFrame:]
  -[_TtC12GameCenterUI28SectionHeaderPlaceholderView initWithCoder:]


_TtC12GameCenterUI29GKMultiplayerPickerPlayerCell : UICollectionViewCell
  // class methods
  +[_TtC12GameCenterUI29GKMultiplayerPickerPlayerCell reuseIdentifier]
  +[_TtC12GameCenterUI29GKMultiplayerPickerPlayerCell preferredSizeFitting:inTraitEnvironment:]

  // instance methods
  -[_TtC12GameCenterUI29GKMultiplayerPickerPlayerCell .cxx_destruct]
  -[_TtC12GameCenterUI29GKMultiplayerPickerPlayerCell layoutSubviews]
  -[_TtC12GameCenterUI29GKMultiplayerPickerPlayerCell initWithFrame:]
  -[_TtC12GameCenterUI29GKMultiplayerPickerPlayerCell traitCollectionDidChange:]
  -[_TtC12GameCenterUI29GKMultiplayerPickerPlayerCell initWithCoder:]
  -[_TtC12GameCenterUI29GKMultiplayerPickerPlayerCell applyWithPlayer:isCoreRecent:]


_TtC12GameCenterUI38PrivacyAndSettingsActionImplementation : NSObject
  // instance methods
  -[_TtC12GameCenterUI38PrivacyAndSettingsActionImplementation .cxx_destruct]
  -[_TtC12GameCenterUI38PrivacyAndSettingsActionImplementation init]


_TtC12GameCenterUI21FriendsProfileSection : GameCenterUI.PlayerProfileSection

_TtC12GameCenterUI28DataManagementProfileSection : GameCenterUI.PlayerProfileSection

_TtC12GameCenterUI28DashboardSplitViewController : GameCenterUI.BaseDoubleColumnSplitViewController
  // instance methods
  -[_TtC12GameCenterUI28DashboardSplitViewController .cxx_destruct]
  -[_TtC12GameCenterUI28DashboardSplitViewController viewDidLoad]
  -[_TtC12GameCenterUI28DashboardSplitViewController viewWillAppear:]
  -[_TtC12GameCenterUI28DashboardSplitViewController init]
  -[_TtC12GameCenterUI28DashboardSplitViewController initWithCoder:]
  -[_TtC12GameCenterUI28DashboardSplitViewController splitViewController:willChangeToDisplayMode:]
  -[_TtC12GameCenterUI28DashboardSplitViewController splitViewController:topColumnForCollapsingToProposedTopColumn:]
  -[_TtC12GameCenterUI28DashboardSplitViewController splitViewController:displayModeForExpandingToProposedDisplayMode:]


_TtC12GameCenterUIP33_ED65E62AB2E9DEC955C1CAF6BA7C69F726CustomNavigationController : UINavigationController <UINavigationControllerDelegate>
  // instance methods
  -[_TtC12GameCenterUIP33_ED65E62AB2E9DEC955C1CAF6BA7C69F726CustomNavigationController initWithRootViewController:]
  -[_TtC12GameCenterUIP33_ED65E62AB2E9DEC955C1CAF6BA7C69F726CustomNavigationController initWithNibName:bundle:]
  -[_TtC12GameCenterUIP33_ED65E62AB2E9DEC955C1CAF6BA7C69F726CustomNavigationController .cxx_destruct]
  -[_TtC12GameCenterUIP33_ED65E62AB2E9DEC955C1CAF6BA7C69F726CustomNavigationController viewDidLoad]
  -[_TtC12GameCenterUIP33_ED65E62AB2E9DEC955C1CAF6BA7C69F726CustomNavigationController navigationController:willShowViewController:animated:]
  -[_TtC12GameCenterUIP33_ED65E62AB2E9DEC955C1CAF6BA7C69F726CustomNavigationController initWithNavigationBarClass:toolbarClass:]
  -[_TtC12GameCenterUIP33_ED65E62AB2E9DEC955C1CAF6BA7C69F726CustomNavigationController initWithCoder:]
  -[_TtC12GameCenterUIP33_ED65E62AB2E9DEC955C1CAF6BA7C69F726CustomNavigationController donePressed:]


_TtC12GameCenterUI23GKMultiplayerStatusView : UIView
 @property  _TtC12GameCenterUI16DynamicTypeLabel *accessibilityStatusLabel

  // instance methods
  -[_TtC12GameCenterUI23GKMultiplayerStatusView .cxx_destruct]
  -[_TtC12GameCenterUI23GKMultiplayerStatusView layoutSubviews]
  -[_TtC12GameCenterUI23GKMultiplayerStatusView initWithFrame:]
  -[_TtC12GameCenterUI23GKMultiplayerStatusView initWithCoder:]
  -[_TtC12GameCenterUI23GKMultiplayerStatusView measurementsWithFitting:in:]
  -[_TtC12GameCenterUI23GKMultiplayerStatusView accessibilityStatusLabel]


_TtC12GameCenterUI27PlayerProfileViewController : GameCenterUI.BaseSplitCollectionViewController <PSController>
 @property  _TtC12GameCenterUI18BaseSplitPresenter *dataPresenter
 @property  UICollectionViewCompositionalLayout *secondaryCompositionalLayout
 @property  BOOL shouldDisplayInSplitView
 @property  PSRootController *_rootController
 @property  PSSpecifier *_specifier

  // class methods
  +[_TtC12GameCenterUI27PlayerProfileViewController showProfileFor:from:completion:]

  // instance methods
  -[_TtC12GameCenterUI27PlayerProfileViewController contentScrollView]
  -[_TtC12GameCenterUI27PlayerProfileViewController collectionView:shouldHighlightItemAtIndexPath:]
  -[_TtC12GameCenterUI27PlayerProfileViewController specifier]
  -[_TtC12GameCenterUI27PlayerProfileViewController collectionView:willDisplaySupplementaryView:forElementKind:atIndexPath:]
  -[_TtC12GameCenterUI27PlayerProfileViewController rootController]
  -[_TtC12GameCenterUI27PlayerProfileViewController parentController]
  -[_TtC12GameCenterUI27PlayerProfileViewController initWithNibName:bundle:]
  -[_TtC12GameCenterUI27PlayerProfileViewController viewDidAppear:]
  -[_TtC12GameCenterUI27PlayerProfileViewController collectionView:previewForDismissingContextMenuWithConfiguration:]
  -[_TtC12GameCenterUI27PlayerProfileViewController collectionView:willDisplayCell:forItemAtIndexPath:]
  -[_TtC12GameCenterUI27PlayerProfileViewController .cxx_destruct]
  -[_TtC12GameCenterUI27PlayerProfileViewController viewDidLoad]
  -[_TtC12GameCenterUI27PlayerProfileViewController setParentController:]
  -[_TtC12GameCenterUI27PlayerProfileViewController collectionView:didEndDisplayingCell:forItemAtIndexPath:]
  -[_TtC12GameCenterUI27PlayerProfileViewController viewDidLayoutSubviews]
  -[_TtC12GameCenterUI27PlayerProfileViewController setRootController:]
  -[_TtC12GameCenterUI27PlayerProfileViewController collectionView:previewForHighlightingContextMenuWithConfiguration:]
  -[_TtC12GameCenterUI27PlayerProfileViewController collectionView:didSelectItemAtIndexPath:]
  -[_TtC12GameCenterUI27PlayerProfileViewController setSpecifier:]
  -[_TtC12GameCenterUI27PlayerProfileViewController viewWillDisappear:]
  -[_TtC12GameCenterUI27PlayerProfileViewController handleURL:withCompletion:]
  -[_TtC12GameCenterUI27PlayerProfileViewController traitCollectionDidChange:]
  -[_TtC12GameCenterUI27PlayerProfileViewController collectionView:contextMenuConfigurationForItemAtIndexPath:point:]
  -[_TtC12GameCenterUI27PlayerProfileViewController initWithCoder:]
  -[_TtC12GameCenterUI27PlayerProfileViewController canBeShownFromSuspendedState]
  -[_TtC12GameCenterUI27PlayerProfileViewController showController:]
  -[_TtC12GameCenterUI27PlayerProfileViewController showController:animate:]
  -[_TtC12GameCenterUI27PlayerProfileViewController setPreferenceValue:specifier:]
  -[_TtC12GameCenterUI27PlayerProfileViewController readPreferenceValue:]
  -[_TtC12GameCenterUI27PlayerProfileViewController _rootController]
  -[_TtC12GameCenterUI27PlayerProfileViewController _specifier]
  -[_TtC12GameCenterUI27PlayerProfileViewController initWithPlayerId:]
  -[_TtC12GameCenterUI27PlayerProfileViewController dataPresenter]
  -[_TtC12GameCenterUI27PlayerProfileViewController setDataPresenter:]
  -[_TtC12GameCenterUI27PlayerProfileViewController secondaryCompositionalLayout]
  -[_TtC12GameCenterUI27PlayerProfileViewController setSecondaryCompositionalLayout:]
  -[_TtC12GameCenterUI27PlayerProfileViewController makeSecondaryLayout]
  -[_TtC12GameCenterUI27PlayerProfileViewController set_rootController:]
  -[_TtC12GameCenterUI27PlayerProfileViewController set_specifier:]
  -[_TtC12GameCenterUI27PlayerProfileViewController shouldDisplayInSplitView]
  -[_TtC12GameCenterUI27PlayerProfileViewController mainSecondaryCollectionViewLayout]


_TtC12GameCenterUI21GKPlayerGroupBaseView : UIView
  // instance methods
  -[_TtC12GameCenterUI21GKPlayerGroupBaseView initWithFrame:]
  -[_TtC12GameCenterUI21GKPlayerGroupBaseView initWithCoder:]


_TtC12GameCenterUI17GKPlayerGroupView : GameCenterUI.GKPlayerGroupBaseView
 @property  UIView *iconContainer
 @property  GKDashboardPlayerPhotoView *playerView1
 @property  GKDashboardPlayerPhotoView *playerView2
 @property  GKDashboardPlayerPhotoView *playerView3
 @property  GKDashboardPlayerPhotoView *playerView4
 @property  GKDashboardPlayerPhotoView *playerView5
 @property  GKDashboardPlayerPhotoView *playerView6
 @property  GKDashboardPlayerPhotoView *playerView7
 @property  NSLayoutConstraint *playerView1WidthContraint
 @property  NSLayoutConstraint *playerView2WidthContraint
 @property  NSLayoutConstraint *playerView3WidthContraint
 @property  NSLayoutConstraint *playerView4WidthContraint
 @property  NSLayoutConstraint *playerView5WidthContraint
 @property  NSLayoutConstraint *playerView6WidthContraint
 @property  NSLayoutConstraint *playerView7WidthContraint
 @property  NSLayoutConstraint *playerView1LeadingConstraint
 @property  NSLayoutConstraint *playerView1TopConstraint
 @property  NSLayoutConstraint *playerView2TrailingConstraint
 @property  NSLayoutConstraint *playerView2BottomConstraint
 @property  NSLayoutConstraint *playerView3LeadingConstraint
 @property  NSLayoutConstraint *playerView3BottomConstraint
 @property  NSLayoutConstraint *playerView4TrailingConstraint
 @property  NSLayoutConstraint *playerView4TopConstraint
 @property  NSLayoutConstraint *playerView5LeadingConstraint
 @property  NSLayoutConstraint *playerView5BottomConstraint
 @property  NSLayoutConstraint *playerView6LeadingConstraint
 @property  NSLayoutConstraint *playerView6TopConstraint
 @property  NSLayoutConstraint *playerView7LeadingConstraint
 @property  NSLayoutConstraint *playerView7BottomConstraint

  // class methods
  +[_TtC12GameCenterUI17GKPlayerGroupView create]

  // instance methods
  -[_TtC12GameCenterUI17GKPlayerGroupView .cxx_destruct]
  -[_TtC12GameCenterUI17GKPlayerGroupView layoutSubviews]
  -[_TtC12GameCenterUI17GKPlayerGroupView initWithFrame:]
  -[_TtC12GameCenterUI17GKPlayerGroupView awakeFromNib]
  -[_TtC12GameCenterUI17GKPlayerGroupView traitCollectionDidChange:]
  -[_TtC12GameCenterUI17GKPlayerGroupView initWithCoder:]
  -[_TtC12GameCenterUI17GKPlayerGroupView iconContainer]
  -[_TtC12GameCenterUI17GKPlayerGroupView setIconContainer:]
  -[_TtC12GameCenterUI17GKPlayerGroupView playerView1]
  -[_TtC12GameCenterUI17GKPlayerGroupView setPlayerView1:]
  -[_TtC12GameCenterUI17GKPlayerGroupView playerView2]
  -[_TtC12GameCenterUI17GKPlayerGroupView setPlayerView2:]
  -[_TtC12GameCenterUI17GKPlayerGroupView playerView3]
  -[_TtC12GameCenterUI17GKPlayerGroupView setPlayerView3:]
  -[_TtC12GameCenterUI17GKPlayerGroupView playerView4]
  -[_TtC12GameCenterUI17GKPlayerGroupView setPlayerView4:]
  -[_TtC12GameCenterUI17GKPlayerGroupView playerView5]
  -[_TtC12GameCenterUI17GKPlayerGroupView setPlayerView5:]
  -[_TtC12GameCenterUI17GKPlayerGroupView playerView6]
  -[_TtC12GameCenterUI17GKPlayerGroupView setPlayerView6:]
  -[_TtC12GameCenterUI17GKPlayerGroupView playerView7]
  -[_TtC12GameCenterUI17GKPlayerGroupView setPlayerView7:]
  -[_TtC12GameCenterUI17GKPlayerGroupView playerView1WidthContraint]
  -[_TtC12GameCenterUI17GKPlayerGroupView setPlayerView1WidthContraint:]
  -[_TtC12GameCenterUI17GKPlayerGroupView playerView2WidthContraint]
  -[_TtC12GameCenterUI17GKPlayerGroupView setPlayerView2WidthContraint:]
  -[_TtC12GameCenterUI17GKPlayerGroupView playerView3WidthContraint]
  -[_TtC12GameCenterUI17GKPlayerGroupView setPlayerView3WidthContraint:]
  -[_TtC12GameCenterUI17GKPlayerGroupView playerView4WidthContraint]
  -[_TtC12GameCenterUI17GKPlayerGroupView setPlayerView4WidthContraint:]
  -[_TtC12GameCenterUI17GKPlayerGroupView playerView5WidthContraint]
  -[_TtC12GameCenterUI17GKPlayerGroupView setPlayerView5WidthContraint:]
  -[_TtC12GameCenterUI17GKPlayerGroupView playerView6WidthContraint]
  -[_TtC12GameCenterUI17GKPlayerGroupView setPlayerView6WidthContraint:]
  -[_TtC12GameCenterUI17GKPlayerGroupView playerView7WidthContraint]
  -[_TtC12GameCenterUI17GKPlayerGroupView setPlayerView7WidthContraint:]
  -[_TtC12GameCenterUI17GKPlayerGroupView playerView1LeadingConstraint]
  -[_TtC12GameCenterUI17GKPlayerGroupView setPlayerView1LeadingConstraint:]
  -[_TtC12GameCenterUI17GKPlayerGroupView playerView1TopConstraint]
  -[_TtC12GameCenterUI17GKPlayerGroupView setPlayerView1TopConstraint:]
  -[_TtC12GameCenterUI17GKPlayerGroupView playerView2TrailingConstraint]
  -[_TtC12GameCenterUI17GKPlayerGroupView setPlayerView2TrailingConstraint:]
  -[_TtC12GameCenterUI17GKPlayerGroupView playerView2BottomConstraint]
  -[_TtC12GameCenterUI17GKPlayerGroupView setPlayerView2BottomConstraint:]
  -[_TtC12GameCenterUI17GKPlayerGroupView playerView3LeadingConstraint]
  -[_TtC12GameCenterUI17GKPlayerGroupView setPlayerView3LeadingConstraint:]
  -[_TtC12GameCenterUI17GKPlayerGroupView playerView3BottomConstraint]
  -[_TtC12GameCenterUI17GKPlayerGroupView setPlayerView3BottomConstraint:]
  -[_TtC12GameCenterUI17GKPlayerGroupView playerView4TrailingConstraint]
  -[_TtC12GameCenterUI17GKPlayerGroupView setPlayerView4TrailingConstraint:]
  -[_TtC12GameCenterUI17GKPlayerGroupView playerView4TopConstraint]
  -[_TtC12GameCenterUI17GKPlayerGroupView setPlayerView4TopConstraint:]
  -[_TtC12GameCenterUI17GKPlayerGroupView playerView5LeadingConstraint]
  -[_TtC12GameCenterUI17GKPlayerGroupView setPlayerView5LeadingConstraint:]
  -[_TtC12GameCenterUI17GKPlayerGroupView playerView5BottomConstraint]
  -[_TtC12GameCenterUI17GKPlayerGroupView setPlayerView5BottomConstraint:]
  -[_TtC12GameCenterUI17GKPlayerGroupView playerView6LeadingConstraint]
  -[_TtC12GameCenterUI17GKPlayerGroupView setPlayerView6LeadingConstraint:]
  -[_TtC12GameCenterUI17GKPlayerGroupView playerView6TopConstraint]
  -[_TtC12GameCenterUI17GKPlayerGroupView setPlayerView6TopConstraint:]
  -[_TtC12GameCenterUI17GKPlayerGroupView playerView7LeadingConstraint]
  -[_TtC12GameCenterUI17GKPlayerGroupView setPlayerView7LeadingConstraint:]
  -[_TtC12GameCenterUI17GKPlayerGroupView playerView7BottomConstraint]
  -[_TtC12GameCenterUI17GKPlayerGroupView setPlayerView7BottomConstraint:]
  -[_TtC12GameCenterUI17GKPlayerGroupView configureWithPlayers:messagesGroupIdentifier:playerSelectionProxy:]


_TtC12GameCenterUI36GameCenterSignInActionImplementation : NSObject <AAUISignInControllerDelegate>
  // instance methods
  -[_TtC12GameCenterUI36GameCenterSignInActionImplementation signInControllerDidCancel:]
  -[_TtC12GameCenterUI36GameCenterSignInActionImplementation .cxx_destruct]
  -[_TtC12GameCenterUI36GameCenterSignInActionImplementation signInController:didCompleteWithSuccess:error:]
  -[_TtC12GameCenterUI36GameCenterSignInActionImplementation init]


_TtC12GameCenterUI11ArtworkView : GameCenterUI.RoundedCornerView
 @property  UIColor *backgroundColor
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} frame
 @property  BOOL accessibilityIgnoresInvertColors

  // instance methods
  -[_TtC12GameCenterUI11ArtworkView frame]
  -[_TtC12GameCenterUI11ArtworkView setFrame:]
  -[_TtC12GameCenterUI11ArtworkView accessibilityIgnoresInvertColors]
  -[_TtC12GameCenterUI11ArtworkView .cxx_destruct]
  -[_TtC12GameCenterUI11ArtworkView setAccessibilityIgnoresInvertColors:]
  -[_TtC12GameCenterUI11ArtworkView backgroundColor]
  -[_TtC12GameCenterUI11ArtworkView layoutSubviews]
  -[_TtC12GameCenterUI11ArtworkView setBackgroundColor:]
  -[_TtC12GameCenterUI11ArtworkView initWithFrame:]
  -[_TtC12GameCenterUI11ArtworkView initWithCoder:]


_TtC12GameCenterUI31ExternalUrlActionImplementation : NSObject
  // instance methods
  -[_TtC12GameCenterUI31ExternalUrlActionImplementation init]


_TtC12GameCenterUI32AppStoreContentMetadataPresenter : Swift._SwiftObject

_TtC12GameCenterUI24ReportUserProfileSection : GameCenterUI.PlayerProfileSection

_TtC12GameCenterUI32BaseHostingViewControllerStatics : Swift._SwiftObject

_TtC12GameCenterUI28ActivityFeedDashboardSection : GameCenterUI.DashboardSections

_TtC12GameCenterUI29LoadingIndicatorAccessoryView : UICollectionReusableView
  // instance methods
  -[_TtC12GameCenterUI29LoadingIndicatorAccessoryView .cxx_destruct]
  -[_TtC12GameCenterUI29LoadingIndicatorAccessoryView didMoveToSuperview]
  -[_TtC12GameCenterUI29LoadingIndicatorAccessoryView layoutSubviews]
  -[_TtC12GameCenterUI29LoadingIndicatorAccessoryView sizeThatFits:]
  -[_TtC12GameCenterUI29LoadingIndicatorAccessoryView initWithFrame:]
  -[_TtC12GameCenterUI29LoadingIndicatorAccessoryView initWithCoder:]


_TtC12GameCenterUI19ArtworkLoaderConfig : Swift._SwiftObject

_TtC12GameCenterUI29AppStoreContentViewController : GameCenterUI.BaseViewController
 @property  long long preferredLargeTitleDisplayMode
 @property  _TtC12GameCenterUI18BootstrapPresenter *bootstrapPresenter
 @property  UIScrollView *scrollView

  // instance methods
  -[_TtC12GameCenterUI29AppStoreContentViewController viewDidAppear:]
  -[_TtC12GameCenterUI29AppStoreContentViewController dealloc]
  -[_TtC12GameCenterUI29AppStoreContentViewController .cxx_destruct]
  -[_TtC12GameCenterUI29AppStoreContentViewController viewDidLoad]
  -[_TtC12GameCenterUI29AppStoreContentViewController scrollView]
  -[_TtC12GameCenterUI29AppStoreContentViewController viewDidLayoutSubviews]
  -[_TtC12GameCenterUI29AppStoreContentViewController viewWillDisappear:]
  -[_TtC12GameCenterUI29AppStoreContentViewController traitCollectionDidChange:]
  -[_TtC12GameCenterUI29AppStoreContentViewController init]
  -[_TtC12GameCenterUI29AppStoreContentViewController initWithCoder:]
  -[_TtC12GameCenterUI29AppStoreContentViewController initWithGameRecord:]
  -[_TtC12GameCenterUI29AppStoreContentViewController preferredLargeTitleDisplayMode]
  -[_TtC12GameCenterUI29AppStoreContentViewController setPreferredLargeTitleDisplayMode:]
  -[_TtC12GameCenterUI29AppStoreContentViewController bootstrapPresenter]
  -[_TtC12GameCenterUI29AppStoreContentViewController setBootstrapPresenter:]


_TtC12GameCenterUI36FriendListAccessActionImplementation : NSObject
  // instance methods
  -[_TtC12GameCenterUI36FriendListAccessActionImplementation .cxx_destruct]
  -[_TtC12GameCenterUI36FriendListAccessActionImplementation init]


_TtC12GameCenterUIP33_08F422D3891D7273A98CAC5FE2A95BDE11ContactData : Swift._SwiftObject

_TtCV12GameCenterUI16AvatarEditorView11Coordinator : NSObject <CNPhotoPickerViewControllerDelegate>
  // instance methods
  -[_TtCV12GameCenterUI16AvatarEditorView11Coordinator .cxx_destruct]
  -[_TtCV12GameCenterUI16AvatarEditorView11Coordinator init]
  -[_TtCV12GameCenterUI16AvatarEditorView11Coordinator photoPickerDidCancel:]
  -[_TtCV12GameCenterUI16AvatarEditorView11Coordinator photoPicker:didUpdatePhotoForContact:withContactImage:]


_TtC12GameCenterUI21HostingContentPayload : Swift._SwiftObject

_TtCV12GameCenterUIP33_37D4266A6C32C24F543FEF9646E16C6619GameCenterDashboard11Coordinator : NSObject
  // instance methods
  -[_TtCV12GameCenterUIP33_37D4266A6C32C24F543FEF9646E16C6619GameCenterDashboard11Coordinator .cxx_destruct]
  -[_TtCV12GameCenterUIP33_37D4266A6C32C24F543FEF9646E16C6619GameCenterDashboard11Coordinator init]


GKProfilePrivacyViewController : UIViewController
  // instance methods
  -[GKProfilePrivacyViewController initWithNibName:bundle:]
  -[GKProfilePrivacyViewController viewDidAppear:]
  -[GKProfilePrivacyViewController .cxx_destruct]
  -[GKProfilePrivacyViewController viewDidLoad]
  -[GKProfilePrivacyViewController viewWillAppear:]
  -[GKProfilePrivacyViewController viewWillDisappear:]
  -[GKProfilePrivacyViewController initWithCoder:]


_TtC12GameCenterUIP33_70BCE0F81E66D9FA90EE8BB9B414A94431CollectionViewLayoutEnvironment : NSObject <NSCollectionLayoutEnvironment>
 @property  <NSCollectionLayoutContainer> *container
 @property  UITraitCollection *traitCollection

  // instance methods
  -[_TtC12GameCenterUIP33_70BCE0F81E66D9FA90EE8BB9B414A94431CollectionViewLayoutEnvironment setTraitCollection:]
  -[_TtC12GameCenterUIP33_70BCE0F81E66D9FA90EE8BB9B414A94431CollectionViewLayoutEnvironment setContainer:]
  -[_TtC12GameCenterUIP33_70BCE0F81E66D9FA90EE8BB9B414A94431CollectionViewLayoutEnvironment traitCollection]
  -[_TtC12GameCenterUIP33_70BCE0F81E66D9FA90EE8BB9B414A94431CollectionViewLayoutEnvironment .cxx_destruct]
  -[_TtC12GameCenterUIP33_70BCE0F81E66D9FA90EE8BB9B414A94431CollectionViewLayoutEnvironment container]
  -[_TtC12GameCenterUIP33_70BCE0F81E66D9FA90EE8BB9B414A94431CollectionViewLayoutEnvironment init]


_TtC12GameCenterUIP33_70BCE0F81E66D9FA90EE8BB9B414A94429CollectionViewLayoutContainer : NSObject <NSCollectionLayoutContainer>
 @property  {CGSize=dd} contentSize
 @property  {CGSize=dd} effectiveContentSize
 @property  {NSDirectionalEdgeInsets=dddd} contentInsets
 @property  {NSDirectionalEdgeInsets=dddd} effectiveContentInsets

  // instance methods
  -[_TtC12GameCenterUIP33_70BCE0F81E66D9FA90EE8BB9B414A94429CollectionViewLayoutContainer effectiveContentSize]
  -[_TtC12GameCenterUIP33_70BCE0F81E66D9FA90EE8BB9B414A94429CollectionViewLayoutContainer setContentInsets:]
  -[_TtC12GameCenterUIP33_70BCE0F81E66D9FA90EE8BB9B414A94429CollectionViewLayoutContainer contentInsets]
  -[_TtC12GameCenterUIP33_70BCE0F81E66D9FA90EE8BB9B414A94429CollectionViewLayoutContainer effectiveContentInsets]
  -[_TtC12GameCenterUIP33_70BCE0F81E66D9FA90EE8BB9B414A94429CollectionViewLayoutContainer setContentSize:]
  -[_TtC12GameCenterUIP33_70BCE0F81E66D9FA90EE8BB9B414A94429CollectionViewLayoutContainer contentSize]
  -[_TtC12GameCenterUIP33_70BCE0F81E66D9FA90EE8BB9B414A94429CollectionViewLayoutContainer init]
  -[_TtC12GameCenterUIP33_70BCE0F81E66D9FA90EE8BB9B414A94429CollectionViewLayoutContainer setEffectiveContentInsets:]


_TtC12GameCenterUI18ProfileCreatedView : GameCenterUI.OnboardingTemplateView
  // instance methods
  -[_TtC12GameCenterUI18ProfileCreatedView .cxx_destruct]
  -[_TtC12GameCenterUI18ProfileCreatedView primaryAction]
  -[_TtC12GameCenterUI18ProfileCreatedView initWithCoder:]


_TtC12GameCenterUIP33_A52526A428E5AA1B559A28E8D473C2A912ConfettiView : UIView
 @property  {CGSize=dd} intrinsicContentSize

  // instance methods
  -[_TtC12GameCenterUIP33_A52526A428E5AA1B559A28E8D473C2A912ConfettiView .cxx_destruct]
  -[_TtC12GameCenterUIP33_A52526A428E5AA1B559A28E8D473C2A912ConfettiView layoutSubviews]
  -[_TtC12GameCenterUIP33_A52526A428E5AA1B559A28E8D473C2A912ConfettiView intrinsicContentSize]
  -[_TtC12GameCenterUIP33_A52526A428E5AA1B559A28E8D473C2A912ConfettiView initWithFrame:]
  -[_TtC12GameCenterUIP33_A52526A428E5AA1B559A28E8D473C2A912ConfettiView initWithCoder:]


_TtC12GameCenterUI22ActivityFeedHeaderView : UIView
  // instance methods
  -[_TtC12GameCenterUI22ActivityFeedHeaderView .cxx_destruct]
  -[_TtC12GameCenterUI22ActivityFeedHeaderView layoutSubviews]
  -[_TtC12GameCenterUI22ActivityFeedHeaderView sizeThatFits:]
  -[_TtC12GameCenterUI22ActivityFeedHeaderView initWithFrame:]
  -[_TtC12GameCenterUI22ActivityFeedHeaderView initWithCoder:]
  -[_TtC12GameCenterUI22ActivityFeedHeaderView tapToRadarButton]


_TtC12GameCenterUI37GKPickerGroupNearbyCollectionViewCell : UICollectionViewCell
  // instance methods
  -[_TtC12GameCenterUI37GKPickerGroupNearbyCollectionViewCell initWithFrame:]
  -[_TtC12GameCenterUI37GKPickerGroupNearbyCollectionViewCell initWithCoder:]


_TtC12GameCenterUI23GKPickerGroupNearbyCell : GameCenterUI.GKPickerGroupNearbyCollectionViewCell
 @property  UIView *iconContainer
 @property  UILabel *badgeLabel
 @property  UILabel *titleLabel
 @property  BOOL highlighted
 @property  UILabel *accessibilityTitleLabel

  // class methods
  +[_TtC12GameCenterUI23GKPickerGroupNearbyCell reuseIdentifier]
  +[_TtC12GameCenterUI23GKPickerGroupNearbyCell reuseIdentifierAX]

  // instance methods
  -[_TtC12GameCenterUI23GKPickerGroupNearbyCell setTitleLabel:]
  -[_TtC12GameCenterUI23GKPickerGroupNearbyCell .cxx_destruct]
  -[_TtC12GameCenterUI23GKPickerGroupNearbyCell prepareForReuse]
  -[_TtC12GameCenterUI23GKPickerGroupNearbyCell setHighlighted:]
  -[_TtC12GameCenterUI23GKPickerGroupNearbyCell isHighlighted]
  -[_TtC12GameCenterUI23GKPickerGroupNearbyCell initWithFrame:]
  -[_TtC12GameCenterUI23GKPickerGroupNearbyCell awakeFromNib]
  -[_TtC12GameCenterUI23GKPickerGroupNearbyCell traitCollectionDidChange:]
  -[_TtC12GameCenterUI23GKPickerGroupNearbyCell titleLabel]
  -[_TtC12GameCenterUI23GKPickerGroupNearbyCell initWithCoder:]
  -[_TtC12GameCenterUI23GKPickerGroupNearbyCell iconContainer]
  -[_TtC12GameCenterUI23GKPickerGroupNearbyCell setIconContainer:]
  -[_TtC12GameCenterUI23GKPickerGroupNearbyCell accessibilityTitleLabel]
  -[_TtC12GameCenterUI23GKPickerGroupNearbyCell badgeLabel]
  -[_TtC12GameCenterUI23GKPickerGroupNearbyCell setBadgeLabel:]
  -[_TtC12GameCenterUI23GKPickerGroupNearbyCell configureWithBadgeCount:]


_TtC12GameCenterUI24AppStoreContentPresenter : Swift._SwiftObject

_TtC12GameCenterUI29AchievementsGameListPresenter : Swift._SwiftObject

_TtC12GameCenterUI10BorderView : UIView
 @property  UIColor *backgroundColor
 @property  BOOL clipsToBounds

  // instance methods
  -[_TtC12GameCenterUI10BorderView clipsToBounds]
  -[_TtC12GameCenterUI10BorderView backgroundColor]
  -[_TtC12GameCenterUI10BorderView setBackgroundColor:]
  -[_TtC12GameCenterUI10BorderView setClipsToBounds:]
  -[_TtC12GameCenterUI10BorderView initWithFrame:]
  -[_TtC12GameCenterUI10BorderView initWithCoder:]


_TtC12GameCenterUI31BaseJetCollectionViewController : GameCenterUI.BaseCollectionViewController
 @property  @? dismissHandler
 @property  _TtC12GameCenterUI18BootstrapPresenter *bootstrapPresenter
 @property  _TtC12GameCenterUI13BasePresenter *dataPresenter
 @property  UICollectionViewCompositionalLayout *compositionalLayout

  // instance methods
  -[_TtC12GameCenterUI31BaseJetCollectionViewController collectionView:shouldHighlightItemAtIndexPath:]
  -[_TtC12GameCenterUI31BaseJetCollectionViewController collectionView:willDisplaySupplementaryView:forElementKind:atIndexPath:]
  -[_TtC12GameCenterUI31BaseJetCollectionViewController didReceiveMemoryWarning]
  -[_TtC12GameCenterUI31BaseJetCollectionViewController initWithNibName:bundle:]
  -[_TtC12GameCenterUI31BaseJetCollectionViewController viewDidAppear:]
  -[_TtC12GameCenterUI31BaseJetCollectionViewController .cxx_destruct]
  -[_TtC12GameCenterUI31BaseJetCollectionViewController viewDidLoad]
  -[_TtC12GameCenterUI31BaseJetCollectionViewController viewWillAppear:]
  -[_TtC12GameCenterUI31BaseJetCollectionViewController collectionView:didEndDisplayingCell:forItemAtIndexPath:]
  -[_TtC12GameCenterUI31BaseJetCollectionViewController dismissHandler]
  -[_TtC12GameCenterUI31BaseJetCollectionViewController viewDidDisappear:]
  -[_TtC12GameCenterUI31BaseJetCollectionViewController collectionView:didSelectItemAtIndexPath:]
  -[_TtC12GameCenterUI31BaseJetCollectionViewController viewWillDisappear:]
  -[_TtC12GameCenterUI31BaseJetCollectionViewController initWithCoder:]
  -[_TtC12GameCenterUI31BaseJetCollectionViewController setDismissHandler:]
  -[_TtC12GameCenterUI31BaseJetCollectionViewController compositionalLayout]
  -[_TtC12GameCenterUI31BaseJetCollectionViewController bootstrapPresenter]
  -[_TtC12GameCenterUI31BaseJetCollectionViewController setBootstrapPresenter:]
  -[_TtC12GameCenterUI31BaseJetCollectionViewController dataPresenter]
  -[_TtC12GameCenterUI31BaseJetCollectionViewController setCompositionalLayout:]
  -[_TtC12GameCenterUI31BaseJetCollectionViewController makeLayout]
  -[_TtC12GameCenterUI31BaseJetCollectionViewController collectionViewFrameInsets]


_TtC12GameCenterUI37OnboardingKitButtonCollectionViewCell : GameCenterUI.BaseCollectionViewCell
  // instance methods
  -[_TtC12GameCenterUI37OnboardingKitButtonCollectionViewCell .cxx_destruct]
  -[_TtC12GameCenterUI37OnboardingKitButtonCollectionViewCell prepareForReuse]
  -[_TtC12GameCenterUI37OnboardingKitButtonCollectionViewCell layoutSubviews]
  -[_TtC12GameCenterUI37OnboardingKitButtonCollectionViewCell sizeThatFits:]
  -[_TtC12GameCenterUI37OnboardingKitButtonCollectionViewCell initWithFrame:]
  -[_TtC12GameCenterUI37OnboardingKitButtonCollectionViewCell initWithCoder:]
  -[_TtC12GameCenterUI37OnboardingKitButtonCollectionViewCell measurementsWithFitting:in:]


_TtC12GameCenterUI45BlackListCoreRecencyGroupActionImplementation : NSObject
  // instance methods
  -[_TtC12GameCenterUI45BlackListCoreRecencyGroupActionImplementation init]


_TtC12GameCenterUI21SectionBackgroundView : GameCenterUI.BaseCollectionReusableView
  // instance methods
  -[_TtC12GameCenterUI21SectionBackgroundView .cxx_destruct]
  -[_TtC12GameCenterUI21SectionBackgroundView prepareForReuse]
  -[_TtC12GameCenterUI21SectionBackgroundView layoutSubviews]
  -[_TtC12GameCenterUI21SectionBackgroundView initWithFrame:]
  -[_TtC12GameCenterUI21SectionBackgroundView traitCollectionDidChange:]
  -[_TtC12GameCenterUI21SectionBackgroundView initWithCoder:]


_TtC12GameCenterUI25SharingAchievementMessage : NSObject <UIActivityItemSource>
  // instance methods
  -[_TtC12GameCenterUI25SharingAchievementMessage .cxx_destruct]
  -[_TtC12GameCenterUI25SharingAchievementMessage init]
  -[_TtC12GameCenterUI25SharingAchievementMessage activityViewControllerPlaceholderItem:]
  -[_TtC12GameCenterUI25SharingAchievementMessage activityViewController:itemForActivityType:]
  -[_TtC12GameCenterUI25SharingAchievementMessage activityViewController:subjectForActivityType:]


_TtC12GameCenterUI21SharingAchievementURL : NSObject <UIActivityItemSource>
  // instance methods
  -[_TtC12GameCenterUI21SharingAchievementURL .cxx_destruct]
  -[_TtC12GameCenterUI21SharingAchievementURL init]
  -[_TtC12GameCenterUI21SharingAchievementURL activityViewControllerPlaceholderItem:]
  -[_TtC12GameCenterUI21SharingAchievementURL activityViewController:itemForActivityType:]


_TtC12GameCenterUI33ChallengeListActionImplementation : Swift._SwiftObject

_TtC12GameCenterUI10DetailView : UIView
  // instance methods
  -[_TtC12GameCenterUI10DetailView .cxx_destruct]
  -[_TtC12GameCenterUI10DetailView layoutSubviews]
  -[_TtC12GameCenterUI10DetailView initWithFrame:]
  -[_TtC12GameCenterUI10DetailView initWithCoder:]
  -[_TtC12GameCenterUI10DetailView measurementsWithFitting:in:]
  -[_TtC12GameCenterUI10DetailView wasTapped]
  -[_TtC12GameCenterUI10DetailView didTapWithAccessoryView:]


_TtC12GameCenterUI24PlayerProfileInfoBarView : UIView <UIScrollViewDelegate>
 @property  NSArray *accessibilityInfoItemPairs

  // instance methods
  -[_TtC12GameCenterUI24PlayerProfileInfoBarView scrollViewDidScroll:]
  -[_TtC12GameCenterUI24PlayerProfileInfoBarView .cxx_destruct]
  -[_TtC12GameCenterUI24PlayerProfileInfoBarView layoutSubviews]
  -[_TtC12GameCenterUI24PlayerProfileInfoBarView sizeThatFits:]
  -[_TtC12GameCenterUI24PlayerProfileInfoBarView initWithFrame:]
  -[_TtC12GameCenterUI24PlayerProfileInfoBarView traitCollectionDidChange:]
  -[_TtC12GameCenterUI24PlayerProfileInfoBarView initWithCoder:]
  -[_TtC12GameCenterUI24PlayerProfileInfoBarView measurementsWithFitting:in:]
  -[_TtC12GameCenterUI24PlayerProfileInfoBarView accessibilityInfoItemPairs]


_TtC12GameCenterUI17NowPlayingSection : GameCenterUI.DashboardSections

_TtC12GameCenterUI33ActivityFeedErrorDashboardSection : GameCenterUI.DashboardSections

_TtC12GameCenterUI19PersonalizationView : GameCenterUI.OnboardingTemplateView
  // instance methods
  -[_TtC12GameCenterUI19PersonalizationView dealloc]
  -[_TtC12GameCenterUI19PersonalizationView .cxx_destruct]
  -[_TtC12GameCenterUI19PersonalizationView layoutSubviews]
  -[_TtC12GameCenterUI19PersonalizationView primaryAction]
  -[_TtC12GameCenterUI19PersonalizationView initWithCoder:]
  -[_TtC12GameCenterUI19PersonalizationView nicknameCancelAction]


_TtC12GameCenterUI30AppStoreContentLookupPresenter : Swift._SwiftObject

_TtC12GameCenterUI18ProgressLockupView : UIView
  // instance methods
  -[_TtC12GameCenterUI18ProgressLockupView .cxx_destruct]
  -[_TtC12GameCenterUI18ProgressLockupView layoutSubviews]
  -[_TtC12GameCenterUI18ProgressLockupView sizeThatFits:]
  -[_TtC12GameCenterUI18ProgressLockupView initWithFrame:]
  -[_TtC12GameCenterUI18ProgressLockupView initWithCoder:]


_TtC12GameCenterUI10GKLogTimer : Swift._SwiftObject

_TtC12GameCenterUI27OverlappingPlayersPhotoView : UIView
 @property  double overlapPercentage
 @property  NSArray *playerViews

  // instance methods
  -[_TtC12GameCenterUI27OverlappingPlayersPhotoView .cxx_destruct]
  -[_TtC12GameCenterUI27OverlappingPlayersPhotoView layoutSubviews]
  -[_TtC12GameCenterUI27OverlappingPlayersPhotoView sizeThatFits:]
  -[_TtC12GameCenterUI27OverlappingPlayersPhotoView initWithFrame:]
  -[_TtC12GameCenterUI27OverlappingPlayersPhotoView initWithCoder:]
  -[_TtC12GameCenterUI27OverlappingPlayersPhotoView measurementsWithFitting:in:]
  -[_TtC12GameCenterUI27OverlappingPlayersPhotoView overlapPercentage]
  -[_TtC12GameCenterUI27OverlappingPlayersPhotoView setOverlapPercentage:]
  -[_TtC12GameCenterUI27OverlappingPlayersPhotoView playerViews]
  -[_TtC12GameCenterUI27OverlappingPlayersPhotoView setPlayerViews:]
  -[_TtC12GameCenterUI27OverlappingPlayersPhotoView applyWithPlayerAvatars:]


_TtC12GameCenterUI39PrivateProfileDescriptionProfileSection : GameCenterUI.PlayerProfileSection

_TtC12GameCenterUI18BaseViewController : UIViewController <UIScrollViewDelegate>
  // instance methods
  -[_TtC12GameCenterUI18BaseViewController scrollViewDidScroll:]
  -[_TtC12GameCenterUI18BaseViewController initWithNibName:bundle:]
  -[_TtC12GameCenterUI18BaseViewController .cxx_destruct]
  -[_TtC12GameCenterUI18BaseViewController viewDidLoad]
  -[_TtC12GameCenterUI18BaseViewController viewWillAppear:]
  -[_TtC12GameCenterUI18BaseViewController loadView]
  -[_TtC12GameCenterUI18BaseViewController init]
  -[_TtC12GameCenterUI18BaseViewController initWithCoder:]


_TtC12GameCenterUI30DeviceRestrictedProfileSection : GameCenterUI.PlayerProfileSection

_TtC12GameCenterUI29ProfileSettingsProfileSection : GameCenterUI.PlayerProfileSection

_TtC12GameCenterUI33BaseSplitCollectionViewController : GameCenterUI.BaseJetCollectionViewController
 @property  UICollectionView *secondaryCollectionView
 @property  _TtC12GameCenterUI12GradientView *leftPaneBackgroundView
 @property  double mainSecondaryCollectionViewSpacing
 @property  BOOL shouldDisplayInSplitView
 @property  BOOL shouldDisplayCustomHeader

  // class methods
  +[_TtC12GameCenterUI33BaseSplitCollectionViewController customHeaderHeight]
  +[_TtC12GameCenterUI33BaseSplitCollectionViewController topInsetWithCustomHeader]
  +[_TtC12GameCenterUI33BaseSplitCollectionViewController topAndBottomInsetForCustomHeader]
  +[_TtC12GameCenterUI33BaseSplitCollectionViewController leadingAndTrailingInsetForCustomHeader]
  +[_TtC12GameCenterUI33BaseSplitCollectionViewController mainCollectionViewWidth]

  // instance methods
  -[_TtC12GameCenterUI33BaseSplitCollectionViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[_TtC12GameCenterUI33BaseSplitCollectionViewController presentationControllerDidDismiss:]
  -[_TtC12GameCenterUI33BaseSplitCollectionViewController scrollViewDidScroll:]
  -[_TtC12GameCenterUI33BaseSplitCollectionViewController viewWillLayoutSubviews]
  -[_TtC12GameCenterUI33BaseSplitCollectionViewController .cxx_destruct]
  -[_TtC12GameCenterUI33BaseSplitCollectionViewController viewDidLoad]
  -[_TtC12GameCenterUI33BaseSplitCollectionViewController viewWillAppear:]
  -[_TtC12GameCenterUI33BaseSplitCollectionViewController loadView]
  -[_TtC12GameCenterUI33BaseSplitCollectionViewController viewDidLayoutSubviews]
  -[_TtC12GameCenterUI33BaseSplitCollectionViewController traitCollectionDidChange:]
  -[_TtC12GameCenterUI33BaseSplitCollectionViewController initWithCoder:]
  -[_TtC12GameCenterUI33BaseSplitCollectionViewController shouldDisplayInSplitView]
  -[_TtC12GameCenterUI33BaseSplitCollectionViewController mainSecondaryCollectionViewLayout]
  -[_TtC12GameCenterUI33BaseSplitCollectionViewController collectionViewFrameInsets]
  -[_TtC12GameCenterUI33BaseSplitCollectionViewController secondaryCollectionView]
  -[_TtC12GameCenterUI33BaseSplitCollectionViewController setSecondaryCollectionView:]
  -[_TtC12GameCenterUI33BaseSplitCollectionViewController leftPaneBackgroundView]
  -[_TtC12GameCenterUI33BaseSplitCollectionViewController secondaryCollectionViewFrameInsets]
  -[_TtC12GameCenterUI33BaseSplitCollectionViewController mainSecondaryCollectionViewSpacing]
  -[_TtC12GameCenterUI33BaseSplitCollectionViewController shouldDisplayCustomHeader]
  -[_TtC12GameCenterUI33BaseSplitCollectionViewController setShouldDisplayCustomHeader:]


_TtC12GameCenterUI12GradientView : UIView
  // class methods
  +[_TtC12GameCenterUI12GradientView layerClass]

  // instance methods
  -[_TtC12GameCenterUI12GradientView layoutSubviews]
  -[_TtC12GameCenterUI12GradientView initWithFrame:]
  -[_TtC12GameCenterUI12GradientView initWithCoder:]


_TtC12GameCenterUI23ActivityFeedArtworkView : UIView
 @property  NSString *accessibilityLabel

  // instance methods
  -[_TtC12GameCenterUI23ActivityFeedArtworkView accessibilityLabel]
  -[_TtC12GameCenterUI23ActivityFeedArtworkView setAccessibilityLabel:]
  -[_TtC12GameCenterUI23ActivityFeedArtworkView .cxx_destruct]
  -[_TtC12GameCenterUI23ActivityFeedArtworkView layoutSubviews]
  -[_TtC12GameCenterUI23ActivityFeedArtworkView sizeThatFits:]
  -[_TtC12GameCenterUI23ActivityFeedArtworkView initWithFrame:]
  -[_TtC12GameCenterUI23ActivityFeedArtworkView initWithCoder:]


_TtC12GameCenterUI35AppStoreProductActionImplementation : Swift._SwiftObject

_TtC12GameCenterUI31ScrollToTopActionImplementation : Swift._SwiftObject

_TtC12GameCenterUI38PlayerAvatarPickerActionImplementation : Swift._SwiftObject <CNPhotoPickerViewControllerDelegate>
  // instance methods
  -[_TtC12GameCenterUI38PlayerAvatarPickerActionImplementation photoPickerDidCancel:]
  -[_TtC12GameCenterUI38PlayerAvatarPickerActionImplementation photoPicker:didUpdatePhotoForContact:withContactImage:]


_TtC12GameCenterUI11BundleImage : Swift._SwiftObject

_TtC12GameCenterUI11SystemImage : Swift._SwiftObject

_TtC12GameCenterUI10LocalImage : Swift._SwiftObject

_TtC12GameCenterUI18BootstrapPresenter : NSObject
  // instance methods
  -[_TtC12GameCenterUI18BootstrapPresenter .cxx_destruct]
  -[_TtC12GameCenterUI18BootstrapPresenter start]
  -[_TtC12GameCenterUI18BootstrapPresenter init]


_TtC12GameCenterUI28LoadMoreActionImplementation : Swift._SwiftObject

_TtC12GameCenterUI38AchievementHighlightCollectionViewCell : UICollectionViewCell
 @property  BOOL canBecomeFocused
 @property  UILabel *accessibilityTitleLabel
 @property  UILabel *accessibilitySubtitleLabel

  // instance methods
  -[_TtC12GameCenterUI38AchievementHighlightCollectionViewCell canBecomeFocused]
  -[_TtC12GameCenterUI38AchievementHighlightCollectionViewCell .cxx_destruct]
  -[_TtC12GameCenterUI38AchievementHighlightCollectionViewCell layoutSubviews]
  -[_TtC12GameCenterUI38AchievementHighlightCollectionViewCell sizeThatFits:]
  -[_TtC12GameCenterUI38AchievementHighlightCollectionViewCell initWithFrame:]
  -[_TtC12GameCenterUI38AchievementHighlightCollectionViewCell initWithCoder:]
  -[_TtC12GameCenterUI38AchievementHighlightCollectionViewCell accessibilitySubtitleLabel]
  -[_TtC12GameCenterUI38AchievementHighlightCollectionViewCell accessibilityTitleLabel]


_TtC12GameCenterUI18BaseSplitPresenter : GameCenterUI.BasePresenter
  // instance methods
  -[_TtC12GameCenterUI18BaseSplitPresenter .cxx_destruct]


_TtC12GameCenterUI23CircularProgressBarView : UIView
  // instance methods
  -[_TtC12GameCenterUI23CircularProgressBarView .cxx_destruct]
  -[_TtC12GameCenterUI23CircularProgressBarView initWithFrame:]
  -[_TtC12GameCenterUI23CircularProgressBarView initWithCoder:]


_TtC12GameCenterUI43RecentlyPlayedWithFriendsListProfileSection : GameCenterUI.PlayerProfileSection

_TtC12GameCenterUI22ContinuePlayingSection : GameCenterUI.DashboardSections

_TtC12GameCenterUI37TitleWithHighlightsCollectionViewCell : UICollectionViewCell
 @property  BOOL canBecomeFocused

  // instance methods
  -[_TtC12GameCenterUI37TitleWithHighlightsCollectionViewCell canBecomeFocused]
  -[_TtC12GameCenterUI37TitleWithHighlightsCollectionViewCell .cxx_destruct]
  -[_TtC12GameCenterUI37TitleWithHighlightsCollectionViewCell layoutSubviews]
  -[_TtC12GameCenterUI37TitleWithHighlightsCollectionViewCell sizeThatFits:]
  -[_TtC12GameCenterUI37TitleWithHighlightsCollectionViewCell initWithFrame:]
  -[_TtC12GameCenterUI37TitleWithHighlightsCollectionViewCell initWithCoder:]


GKWelcomeOnboardingViewController : UIViewController
  // instance methods
  -[GKWelcomeOnboardingViewController initWithNibName:bundle:]
  -[GKWelcomeOnboardingViewController viewDidAppear:]
  -[GKWelcomeOnboardingViewController .cxx_destruct]
  -[GKWelcomeOnboardingViewController viewDidLoad]
  -[GKWelcomeOnboardingViewController initWithCoder:]


_TtC12GameCenterUI39SeeAllRecentlyPlayedGamesProfileSection : GameCenterUI.PlayerProfileSection

_TtC12GameCenterUI37ActivityFeedLeaderboardAvatarsSubview : UIView
  // instance methods
  -[_TtC12GameCenterUI37ActivityFeedLeaderboardAvatarsSubview .cxx_destruct]
  -[_TtC12GameCenterUI37ActivityFeedLeaderboardAvatarsSubview layoutSubviews]
  -[_TtC12GameCenterUI37ActivityFeedLeaderboardAvatarsSubview sizeThatFits:]
  -[_TtC12GameCenterUI37ActivityFeedLeaderboardAvatarsSubview initWithFrame:]
  -[_TtC12GameCenterUI37ActivityFeedLeaderboardAvatarsSubview initWithCoder:]
  -[_TtC12GameCenterUI37ActivityFeedLeaderboardAvatarsSubview didTap]


GKPersonalizationViewController : UIViewController <GKAvatarContainerViewDelegate, CNPhotoPickerViewControllerDelegate, GKNicknameControllerDelegate>
  // instance methods
  -[GKPersonalizationViewController initWithNibName:bundle:]
  -[GKPersonalizationViewController viewDidAppear:]
  -[GKPersonalizationViewController .cxx_destruct]
  -[GKPersonalizationViewController viewDidLoad]
  -[GKPersonalizationViewController viewWillAppear:]
  -[GKPersonalizationViewController keyboardWillShow:]
  -[GKPersonalizationViewController keyboardWillHide:]
  -[GKPersonalizationViewController viewWillDisappear:]
  -[GKPersonalizationViewController initWithCoder:]
  -[GKPersonalizationViewController photoPickerDidCancel:]
  -[GKPersonalizationViewController photoPicker:didUpdatePhotoForContact:withContactImage:]
  -[GKPersonalizationViewController nicknameUpdateRequestCompletedWithStatus:error:]
  -[GKPersonalizationViewController nicknameShouldBeginEditing]
  -[GKPersonalizationViewController nicknameTextDidChangeWithMessage:]
  -[GKPersonalizationViewController nicknameDidBecomeFirstResponder]
  -[GKPersonalizationViewController nicknameDidResignFirstResponder]
  -[GKPersonalizationViewController nicknameUpdateAvatarImage:]
  -[GKPersonalizationViewController avatarView:didSelectImageWithEditingEnabled:]


_TtC12GameCenterUI35DashboardActivityFeedViewController : GameCenterUI.BaseJetCollectionViewController <GKPlayerAvatarViewDelegate>
  // instance methods
  -[_TtC12GameCenterUI35DashboardActivityFeedViewController viewWillLayoutSubviews]
  -[_TtC12GameCenterUI35DashboardActivityFeedViewController collectionView:previewForDismissingContextMenuWithConfiguration:]
  -[_TtC12GameCenterUI35DashboardActivityFeedViewController collectionView:willDisplayCell:forItemAtIndexPath:]
  -[_TtC12GameCenterUI35DashboardActivityFeedViewController .cxx_destruct]
  -[_TtC12GameCenterUI35DashboardActivityFeedViewController viewDidLoad]
  -[_TtC12GameCenterUI35DashboardActivityFeedViewController collectionView:previewForHighlightingContextMenuWithConfiguration:]
  -[_TtC12GameCenterUI35DashboardActivityFeedViewController collectionView:contextMenuConfigurationForItemAtIndexPath:point:]
  -[_TtC12GameCenterUI35DashboardActivityFeedViewController initWithCoder:]
  -[_TtC12GameCenterUI35DashboardActivityFeedViewController makeLayout]
  -[_TtC12GameCenterUI35DashboardActivityFeedViewController collectionViewFrameInsets]


_TtC12GameCenterUI30GKSuggestionsContainerBaseCell : UICollectionViewCell
  // instance methods
  -[_TtC12GameCenterUI30GKSuggestionsContainerBaseCell initWithFrame:]
  -[_TtC12GameCenterUI30GKSuggestionsContainerBaseCell initWithCoder:]


_TtC12GameCenterUI26GKSuggestionsContainerCell : GameCenterUI.GKSuggestionsContainerBaseCell <UICollectionViewDataSource, UICollectionViewDelegateFlowLayout, _TtP12GameCenterUI33GKSuggestionsPlayerSelectionProxy_, _TtP12GameCenterUI22GKPickerGroupCellProxy_>
 @property  UICollectionView *suggestionsCollectionView
 @property  UIView *containerView
 @property  UIViewController *presentationViewController
 @property  GKDashboardMultiplayerPickerDataSource *multiplayerPickerDataSource
 @property  NSLayoutConstraint *containerViewLeadingConstraint
 @property  NSLayoutConstraint *containerViewTrailingConstraint
 @property  @? nearbyIconTapHandler
 @property  BOOL canBecomeFocused

  // class methods
  +[_TtC12GameCenterUI26GKSuggestionsContainerCell reuseIdentifier]
  +[_TtC12GameCenterUI26GKSuggestionsContainerCell defaultCellHeight]

  // instance methods
  -[_TtC12GameCenterUI26GKSuggestionsContainerCell collectionView:cellForItemAtIndexPath:]
  -[_TtC12GameCenterUI26GKSuggestionsContainerCell collectionView:didDeselectItemAtIndexPath:]
  -[_TtC12GameCenterUI26GKSuggestionsContainerCell collectionView:shouldSelectItemAtIndexPath:]
  -[_TtC12GameCenterUI26GKSuggestionsContainerCell collectionView:layout:sizeForItemAtIndexPath:]
  -[_TtC12GameCenterUI26GKSuggestionsContainerCell canBecomeFocused]
  -[_TtC12GameCenterUI26GKSuggestionsContainerCell .cxx_destruct]
  -[_TtC12GameCenterUI26GKSuggestionsContainerCell setContainerView:]
  -[_TtC12GameCenterUI26GKSuggestionsContainerCell containerView]
  -[_TtC12GameCenterUI26GKSuggestionsContainerCell layoutSubviews]
  -[_TtC12GameCenterUI26GKSuggestionsContainerCell collectionView:didSelectItemAtIndexPath:]
  -[_TtC12GameCenterUI26GKSuggestionsContainerCell initWithFrame:]
  -[_TtC12GameCenterUI26GKSuggestionsContainerCell collectionView:numberOfItemsInSection:]
  -[_TtC12GameCenterUI26GKSuggestionsContainerCell awakeFromNib]
  -[_TtC12GameCenterUI26GKSuggestionsContainerCell initWithCoder:]
  -[_TtC12GameCenterUI26GKSuggestionsContainerCell handleLongPressGesture:]
  -[_TtC12GameCenterUI26GKSuggestionsContainerCell presentationViewController]
  -[_TtC12GameCenterUI26GKSuggestionsContainerCell setPresentationViewController:]
  -[_TtC12GameCenterUI26GKSuggestionsContainerCell getSelectedPlayerCount]
  -[_TtC12GameCenterUI26GKSuggestionsContainerCell getMaxPlayerCount]
  -[_TtC12GameCenterUI26GKSuggestionsContainerCell didSelectPlayerGroup:indexPath:dataSourceIdentifier:completion:]
  -[_TtC12GameCenterUI26GKSuggestionsContainerCell didSelectPlayers:indexPath:dataSourceIdentifier:completion:]
  -[_TtC12GameCenterUI26GKSuggestionsContainerCell didDeselectPlayerGroup:indexPath:dataSourceIdentifier:completion:]
  -[_TtC12GameCenterUI26GKSuggestionsContainerCell didDeselectPlayers:indexPath:dataSourceIdentifier:completion:]
  -[_TtC12GameCenterUI26GKSuggestionsContainerCell didExceedAvailablePlayers]
  -[_TtC12GameCenterUI26GKSuggestionsContainerCell getSuggestedPlayerGroups]
  -[_TtC12GameCenterUI26GKSuggestionsContainerCell playerIsSelectable:]
  -[_TtC12GameCenterUI26GKSuggestionsContainerCell playerIsSelected:]
  -[_TtC12GameCenterUI26GKSuggestionsContainerCell donateGroupToPeopleSuggester:]
  -[_TtC12GameCenterUI26GKSuggestionsContainerCell didAttemptSelectingAlreadySelectedPlayers:inGroup:]
  -[_TtC12GameCenterUI26GKSuggestionsContainerCell suggestionsCollectionView]
  -[_TtC12GameCenterUI26GKSuggestionsContainerCell setSuggestionsCollectionView:]
  -[_TtC12GameCenterUI26GKSuggestionsContainerCell multiplayerPickerDataSource]
  -[_TtC12GameCenterUI26GKSuggestionsContainerCell setMultiplayerPickerDataSource:]
  -[_TtC12GameCenterUI26GKSuggestionsContainerCell containerViewLeadingConstraint]
  -[_TtC12GameCenterUI26GKSuggestionsContainerCell setContainerViewLeadingConstraint:]
  -[_TtC12GameCenterUI26GKSuggestionsContainerCell containerViewTrailingConstraint]
  -[_TtC12GameCenterUI26GKSuggestionsContainerCell setContainerViewTrailingConstraint:]
  -[_TtC12GameCenterUI26GKSuggestionsContainerCell configureWithDelegate:nearbyPlayers:]
  -[_TtC12GameCenterUI26GKSuggestionsContainerCell updateNearbyPlayers:]
  -[_TtC12GameCenterUI26GKSuggestionsContainerCell nearbyIconTapHandler]
  -[_TtC12GameCenterUI26GKSuggestionsContainerCell setNearbyIconTapHandler:]
  -[_TtC12GameCenterUI26GKSuggestionsContainerCell updateVisibleItemsWithPlayers:excludedIndexPath:]


_TtC12GameCenterUI30DashboardRequiredDataPresenter : Swift._SwiftObject
  // instance methods
  -[_TtC12GameCenterUI30DashboardRequiredDataPresenter updateSections:]


_TtC12GameCenterUI38TermsAndConditionsActionImplementation : Swift._SwiftObject

_TtC12GameCenterUI17ActivityFeedCache : Swift._SwiftObject

_TtC12GameCenterUI28SectionFooterPlaceholderView : GameCenterUI.BaseCollectionReusableView
  // instance methods
  -[_TtC12GameCenterUI28SectionFooterPlaceholderView initWithFrame:]
  -[_TtC12GameCenterUI28SectionFooterPlaceholderView initWithCoder:]


_TtC12GameCenterUI10AvatarView : UIView
 @property  UIColor *backgroundColor
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} jet_focusedFrame

  // instance methods
  -[_TtC12GameCenterUI10AvatarView .cxx_destruct]
  -[_TtC12GameCenterUI10AvatarView backgroundColor]
  -[_TtC12GameCenterUI10AvatarView layoutSubviews]
  -[_TtC12GameCenterUI10AvatarView setBackgroundColor:]
  -[_TtC12GameCenterUI10AvatarView initWithFrame:]
  -[_TtC12GameCenterUI10AvatarView traitCollectionDidChange:]
  -[_TtC12GameCenterUI10AvatarView initWithCoder:]
  -[_TtC12GameCenterUI10AvatarView jet_focusedFrame]


_TtC12GameCenterUI9ErrorView : UIView
 @property  {UIEdgeInsets=dddd} layoutMargins

  // instance methods
  -[_TtC12GameCenterUI9ErrorView setLayoutMargins:]
  -[_TtC12GameCenterUI9ErrorView .cxx_destruct]
  -[_TtC12GameCenterUI9ErrorView layoutSubviews]
  -[_TtC12GameCenterUI9ErrorView layoutMargins]
  -[_TtC12GameCenterUI9ErrorView initWithFrame:]
  -[_TtC12GameCenterUI9ErrorView initWithCoder:]


_TtC12GameCenterUI10Components : Swift._SwiftObject

_TtC12GameCenterUI37GameCenterSignOutActionImplementation : NSObject
  // instance methods
  -[_TtC12GameCenterUI37GameCenterSignOutActionImplementation init]


_TtC12GameCenterUI21SmallFriendLockupView : GameCenterUI.BaseSmallFriendLockupView
  // instance methods
  -[_TtC12GameCenterUI21SmallFriendLockupView initWithFrame:]
  -[_TtC12GameCenterUI21SmallFriendLockupView traitCollectionDidChange:]
  -[_TtC12GameCenterUI21SmallFriendLockupView initWithCoder:]


_TtC12GameCenterUI26GameCenterFriendPlayerView : GameCenterUI.BaseSmallFriendLockupView
  // instance methods
  -[_TtC12GameCenterUI26GameCenterFriendPlayerView initWithFrame:]
  -[_TtC12GameCenterUI26GameCenterFriendPlayerView initWithCoder:]
  -[_TtC12GameCenterUI26GameCenterFriendPlayerView initWithRelationshipResult:]
  -[_TtC12GameCenterUI26GameCenterFriendPlayerView initWithHandle:player:]


_TtC12GameCenterUI25BaseSmallFriendLockupView : UIView
 @property  _TtC12GameCenterUI16DynamicTypeLabel *accessibilityTitleLabel
 @property  _TtC12GameCenterUI16DynamicTypeLabel *accessibilitySubtitleLabel

  // instance methods
  -[_TtC12GameCenterUI25BaseSmallFriendLockupView .cxx_destruct]
  -[_TtC12GameCenterUI25BaseSmallFriendLockupView layoutSubviews]
  -[_TtC12GameCenterUI25BaseSmallFriendLockupView sizeThatFits:]
  -[_TtC12GameCenterUI25BaseSmallFriendLockupView initWithFrame:]
  -[_TtC12GameCenterUI25BaseSmallFriendLockupView initWithCoder:]
  -[_TtC12GameCenterUI25BaseSmallFriendLockupView accessibilitySubtitleLabel]
  -[_TtC12GameCenterUI25BaseSmallFriendLockupView measurementsWithFitting:in:]
  -[_TtC12GameCenterUI25BaseSmallFriendLockupView accessibilityTitleLabel]


_TtC12GameCenterUI25FriendsFeedViewController : GameCenterUI.BaseJetCollectionViewController <GKPlayerAvatarViewDelegate>
  // instance methods
  -[_TtC12GameCenterUI25FriendsFeedViewController viewWillLayoutSubviews]
  -[_TtC12GameCenterUI25FriendsFeedViewController collectionView:previewForDismissingContextMenuWithConfiguration:]
  -[_TtC12GameCenterUI25FriendsFeedViewController .cxx_destruct]
  -[_TtC12GameCenterUI25FriendsFeedViewController viewDidLoad]
  -[_TtC12GameCenterUI25FriendsFeedViewController viewWillAppear:]
  -[_TtC12GameCenterUI25FriendsFeedViewController collectionView:previewForHighlightingContextMenuWithConfiguration:]
  -[_TtC12GameCenterUI25FriendsFeedViewController collectionView:contextMenuConfigurationForItemAtIndexPath:point:]
  -[_TtC12GameCenterUI25FriendsFeedViewController initWithCoder:]
  -[_TtC12GameCenterUI25FriendsFeedViewController makeLayout]
  -[_TtC12GameCenterUI25FriendsFeedViewController collectionViewFrameInsets]


_TtC12GameCenterUI21AppLockupsPlatterView : GameCenterUI.AppStoreContentPlatterView
  // instance methods
  -[_TtC12GameCenterUI21AppLockupsPlatterView .cxx_destruct]
  -[_TtC12GameCenterUI21AppLockupsPlatterView initWithCoder:]


_TtC12GameCenterUI13SeparatorView : GameCenterUI.BaseCollectionReusableView
  // instance methods
  -[_TtC12GameCenterUI13SeparatorView .cxx_destruct]
  -[_TtC12GameCenterUI13SeparatorView layoutSubviews]
  -[_TtC12GameCenterUI13SeparatorView sizeThatFits:]
  -[_TtC12GameCenterUI13SeparatorView initWithFrame:]
  -[_TtC12GameCenterUI13SeparatorView initWithCoder:]


_TtC12GameCenterUI21LargePlayerLockupView : UIView
 @property  _TtC12GameCenterUI16DynamicTypeLabel *accessibilityTitleLabel
 @property  _TtC12GameCenterUI16DynamicTypeLabel *accessibilitySubtitleLabel

  // instance methods
  -[_TtC12GameCenterUI21LargePlayerLockupView .cxx_destruct]
  -[_TtC12GameCenterUI21LargePlayerLockupView layoutSubviews]
  -[_TtC12GameCenterUI21LargePlayerLockupView initWithFrame:]
  -[_TtC12GameCenterUI21LargePlayerLockupView traitCollectionDidChange:]
  -[_TtC12GameCenterUI21LargePlayerLockupView initWithCoder:]
  -[_TtC12GameCenterUI21LargePlayerLockupView accessibilitySubtitleLabel]
  -[_TtC12GameCenterUI21LargePlayerLockupView measurementsWithFitting:in:]
  -[_TtC12GameCenterUI21LargePlayerLockupView accessibilityTitleLabel]


_TtC12GameCenterUI29LeaderboardMovementLockupView : UIView
  // instance methods
  -[_TtC12GameCenterUI29LeaderboardMovementLockupView .cxx_destruct]
  -[_TtC12GameCenterUI29LeaderboardMovementLockupView layoutSubviews]
  -[_TtC12GameCenterUI29LeaderboardMovementLockupView sizeThatFits:]
  -[_TtC12GameCenterUI29LeaderboardMovementLockupView initWithFrame:]
  -[_TtC12GameCenterUI29LeaderboardMovementLockupView initWithCoder:]
  -[_TtC12GameCenterUI29LeaderboardMovementLockupView measurementsWithFitting:in:]


_TtCV12GameCenterUIP33_71E88C93E9376CB5FC37AECD01F72ACD17NicknameTextField11Coordinator : NSObject <GKNicknameControllerDelegate>
  // instance methods
  -[_TtCV12GameCenterUIP33_71E88C93E9376CB5FC37AECD01F72ACD17NicknameTextField11Coordinator dealloc]
  -[_TtCV12GameCenterUIP33_71E88C93E9376CB5FC37AECD01F72ACD17NicknameTextField11Coordinator .cxx_destruct]
  -[_TtCV12GameCenterUIP33_71E88C93E9376CB5FC37AECD01F72ACD17NicknameTextField11Coordinator keyboardWillShow:]
  -[_TtCV12GameCenterUIP33_71E88C93E9376CB5FC37AECD01F72ACD17NicknameTextField11Coordinator keyboardWillHide:]
  -[_TtCV12GameCenterUIP33_71E88C93E9376CB5FC37AECD01F72ACD17NicknameTextField11Coordinator init]
  -[_TtCV12GameCenterUIP33_71E88C93E9376CB5FC37AECD01F72ACD17NicknameTextField11Coordinator nicknameWillbeginUpdating]
  -[_TtCV12GameCenterUIP33_71E88C93E9376CB5FC37AECD01F72ACD17NicknameTextField11Coordinator nicknameUpdateRequestCompletedWithStatus:error:]
  -[_TtCV12GameCenterUIP33_71E88C93E9376CB5FC37AECD01F72ACD17NicknameTextField11Coordinator nicknameShouldBeginEditing]
  -[_TtCV12GameCenterUIP33_71E88C93E9376CB5FC37AECD01F72ACD17NicknameTextField11Coordinator nicknameTextDidChangeWithMessage:]
  -[_TtCV12GameCenterUIP33_71E88C93E9376CB5FC37AECD01F72ACD17NicknameTextField11Coordinator nicknameDidBecomeFirstResponder]
  -[_TtCV12GameCenterUIP33_71E88C93E9376CB5FC37AECD01F72ACD17NicknameTextField11Coordinator nicknameDidResignFirstResponder]


_TtC12GameCenterUI13ArtworkLoader : Swift._SwiftObject <GKImageRequestDelegate>
  // instance methods
  -[_TtC12GameCenterUI13ArtworkLoader imageRequest:didLoadImage:]
  -[_TtC12GameCenterUI13ArtworkLoader imageRequest:didFailWithError:]


_TtC12GameCenterUI30GameLayerAchievementsPresenter : Swift._SwiftObject

_TtC12GameCenterUI26ActivityFeedAddFriendsView : UIView
  // instance methods
  -[_TtC12GameCenterUI26ActivityFeedAddFriendsView .cxx_destruct]
  -[_TtC12GameCenterUI26ActivityFeedAddFriendsView layoutSubviews]
  -[_TtC12GameCenterUI26ActivityFeedAddFriendsView sizeThatFits:]
  -[_TtC12GameCenterUI26ActivityFeedAddFriendsView initWithFrame:]
  -[_TtC12GameCenterUI26ActivityFeedAddFriendsView initWithCoder:]


_TtC12GameCenterUI34LocalPlayerAuthenticationPresenter : NSObject <GKLocalPlayerAuthenticationUIPersonality>
  // instance methods
  -[_TtC12GameCenterUI34LocalPlayerAuthenticationPresenter .cxx_destruct]
  -[_TtC12GameCenterUI34LocalPlayerAuthenticationPresenter init]
  -[_TtC12GameCenterUI34LocalPlayerAuthenticationPresenter authenticationShowGreenBuddyUIForLocalPlayer:withCompletionHandler:]
  -[_TtC12GameCenterUI34LocalPlayerAuthenticationPresenter authenticationShowSignInUIForLocalPlayer:dismiss:]


_TtC12GameCenterUIP33_73A05953131E73BCD16CB8E06BB8291610GameAccess : Swift._SwiftObject

_TtC12GameCenterUIP33_73A05953131E73BCD16CB8E06BB8291615GamesDataSource : Swift._SwiftObject

_TtC12GameCenterUI34ActivityFeedLeaderboardListSubview : UIView
  // instance methods
  -[_TtC12GameCenterUI34ActivityFeedLeaderboardListSubview .cxx_destruct]
  -[_TtC12GameCenterUI34ActivityFeedLeaderboardListSubview layoutSubviews]
  -[_TtC12GameCenterUI34ActivityFeedLeaderboardListSubview sizeThatFits:]
  -[_TtC12GameCenterUI34ActivityFeedLeaderboardListSubview initWithFrame:]
  -[_TtC12GameCenterUI34ActivityFeedLeaderboardListSubview initWithCoder:]
  -[_TtC12GameCenterUI34ActivityFeedLeaderboardListSubview didTap]


_TtC12GameCenterUI19SharingScoreMessage : NSObject <UIActivityItemSource>
  // instance methods
  -[_TtC12GameCenterUI19SharingScoreMessage .cxx_destruct]
  -[_TtC12GameCenterUI19SharingScoreMessage init]
  -[_TtC12GameCenterUI19SharingScoreMessage activityViewControllerPlaceholderItem:]
  -[_TtC12GameCenterUI19SharingScoreMessage activityViewController:itemForActivityType:]
  -[_TtC12GameCenterUI19SharingScoreMessage activityViewController:subjectForActivityType:]


_TtC12GameCenterUI15SharingScoreURL : NSObject <UIActivityItemSource>
  // instance methods
  -[_TtC12GameCenterUI15SharingScoreURL .cxx_destruct]
  -[_TtC12GameCenterUI15SharingScoreURL init]
  -[_TtC12GameCenterUI15SharingScoreURL activityViewControllerPlaceholderItem:]
  -[_TtC12GameCenterUI15SharingScoreURL activityViewController:itemForActivityType:]


_TtC12GameCenterUI21WelcomeOnboardingView : GameCenterUI.OnboardingTemplateView
  // instance methods
  -[_TtC12GameCenterUI21WelcomeOnboardingView .cxx_destruct]
  -[_TtC12GameCenterUI21WelcomeOnboardingView primaryAction]
  -[_TtC12GameCenterUI21WelcomeOnboardingView initWithCoder:]
  -[_TtC12GameCenterUI21WelcomeOnboardingView secondaryAction]


_TtC12GameCenterUIP33_77E2C0FF35C92BF2BDB0FAEFD7D57C4E18WelcomeArtworkView : UIView
  // instance methods
  -[_TtC12GameCenterUIP33_77E2C0FF35C92BF2BDB0FAEFD7D57C4E18WelcomeArtworkView .cxx_destruct]
  -[_TtC12GameCenterUIP33_77E2C0FF35C92BF2BDB0FAEFD7D57C4E18WelcomeArtworkView layoutSubviews]
  -[_TtC12GameCenterUIP33_77E2C0FF35C92BF2BDB0FAEFD7D57C4E18WelcomeArtworkView initWithFrame:]
  -[_TtC12GameCenterUIP33_77E2C0FF35C92BF2BDB0FAEFD7D57C4E18WelcomeArtworkView initWithCoder:]


_TtC12GameCenterUI26ScrollViewDelegateObserver : NSObject <UIScrollViewDelegate>
  // instance methods
  -[_TtC12GameCenterUI26ScrollViewDelegateObserver scrollViewWillBeginDecelerating:]
  -[_TtC12GameCenterUI26ScrollViewDelegateObserver scrollViewDidScroll:]
  -[_TtC12GameCenterUI26ScrollViewDelegateObserver scrollViewDidEndDecelerating:]
  -[_TtC12GameCenterUI26ScrollViewDelegateObserver .cxx_destruct]
  -[_TtC12GameCenterUI26ScrollViewDelegateObserver scrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[_TtC12GameCenterUI26ScrollViewDelegateObserver scrollViewDidEndDragging:willDecelerate:]
  -[_TtC12GameCenterUI26ScrollViewDelegateObserver scrollViewWillBeginDragging:]
  -[_TtC12GameCenterUI26ScrollViewDelegateObserver init]


_TtC12GameCenterUI18ProfilePrivacyView : GameCenterUI.OnboardingTemplateView <UITableViewDataSource, UITableViewDelegate>
  // instance methods
  -[_TtC12GameCenterUI18ProfilePrivacyView tableView:cellForRowAtIndexPath:]
  -[_TtC12GameCenterUI18ProfilePrivacyView tableView:numberOfRowsInSection:]
  -[_TtC12GameCenterUI18ProfilePrivacyView numberOfSectionsInTableView:]
  -[_TtC12GameCenterUI18ProfilePrivacyView tableView:didSelectRowAtIndexPath:]
  -[_TtC12GameCenterUI18ProfilePrivacyView .cxx_destruct]
  -[_TtC12GameCenterUI18ProfilePrivacyView layoutSubviews]
  -[_TtC12GameCenterUI18ProfilePrivacyView primaryAction]
  -[_TtC12GameCenterUI18ProfilePrivacyView initWithCoder:]
  -[_TtC12GameCenterUI18ProfilePrivacyView tableView:titleForFooterInSection:]


_TtC12GameCenterUI33AppStoreContentListViewController : GameCenterUI.BaseCollectionViewController
  // instance methods
  -[_TtC12GameCenterUI33AppStoreContentListViewController collectionView:shouldHighlightItemAtIndexPath:]
  -[_TtC12GameCenterUI33AppStoreContentListViewController collectionView:willDisplaySupplementaryView:forElementKind:atIndexPath:]
  -[_TtC12GameCenterUI33AppStoreContentListViewController initWithNibName:bundle:]
  -[_TtC12GameCenterUI33AppStoreContentListViewController viewDidAppear:]
  -[_TtC12GameCenterUI33AppStoreContentListViewController collectionView:willDisplayCell:forItemAtIndexPath:]
  -[_TtC12GameCenterUI33AppStoreContentListViewController .cxx_destruct]
  -[_TtC12GameCenterUI33AppStoreContentListViewController viewDidLoad]
  -[_TtC12GameCenterUI33AppStoreContentListViewController collectionView:didEndDisplayingCell:forItemAtIndexPath:]
  -[_TtC12GameCenterUI33AppStoreContentListViewController collectionView:didSelectItemAtIndexPath:]
  -[_TtC12GameCenterUI33AppStoreContentListViewController viewWillDisappear:]
  -[_TtC12GameCenterUI33AppStoreContentListViewController initWithCoder:]


_TtC12GameCenterUI25FriendsListProfileSection : GameCenterUI.PlayerProfileSection

_TtC12GameCenterUI26AppStoreContentPlatterView : UIView
  // instance methods
  -[_TtC12GameCenterUI26AppStoreContentPlatterView _edgesPropagatingSafeAreaInsetsToSubviews]
  -[_TtC12GameCenterUI26AppStoreContentPlatterView .cxx_destruct]
  -[_TtC12GameCenterUI26AppStoreContentPlatterView addSubview:]
  -[_TtC12GameCenterUI26AppStoreContentPlatterView layoutSubviews]
  -[_TtC12GameCenterUI26AppStoreContentPlatterView sizeThatFits:]
  -[_TtC12GameCenterUI26AppStoreContentPlatterView initWithFrame:]
  -[_TtC12GameCenterUI26AppStoreContentPlatterView initWithCoder:]


_TtC12GameCenterUI22PlayerProfilePresenter : GameCenterUI.BaseSplitPresenter
 @property  BOOL wantsHiddenNavigationBar
 @property  BOOL wantsHiddenTitle
 @property  NSString *title
 @property  BOOL isSignedIn
 @property  _TtC12GameCenterUI17NicknamePresenter *nicknamePresenter
 @property  BOOL displayInSplitView
 @property  NSArray *rightBarButtonItems

  // class methods
  +[_TtC12GameCenterUI22PlayerProfilePresenter isSettings]

  // instance methods
  -[_TtC12GameCenterUI22PlayerProfilePresenter .cxx_destruct]
  -[_TtC12GameCenterUI22PlayerProfilePresenter title]
  -[_TtC12GameCenterUI22PlayerProfilePresenter isSignedIn]
  -[_TtC12GameCenterUI22PlayerProfilePresenter rightBarButtonItems]
  -[_TtC12GameCenterUI22PlayerProfilePresenter updateSnapshot]
  -[_TtC12GameCenterUI22PlayerProfilePresenter initWithPlayerId:]
  -[_TtC12GameCenterUI22PlayerProfilePresenter loadMoreActivityFeedWithContinuationToken:]
  -[_TtC12GameCenterUI22PlayerProfilePresenter wantsHiddenNavigationBar]
  -[_TtC12GameCenterUI22PlayerProfilePresenter wantsHiddenTitle]
  -[_TtC12GameCenterUI22PlayerProfilePresenter nicknamePresenter]
  -[_TtC12GameCenterUI22PlayerProfilePresenter setNicknamePresenter:]
  -[_TtC12GameCenterUI22PlayerProfilePresenter displayInSplitView]
  -[_TtC12GameCenterUI22PlayerProfilePresenter setDisplayInSplitView:]
  -[_TtC12GameCenterUI22PlayerProfilePresenter contextMenuAction]
  -[_TtC12GameCenterUI22PlayerProfilePresenter viewFriendRequests]
  -[_TtC12GameCenterUI22PlayerProfilePresenter reportPlayer]
  -[_TtC12GameCenterUI22PlayerProfilePresenter removeFriend]
  -[_TtC12GameCenterUI22PlayerProfilePresenter showRecentlyPlayedWithFriends]
  -[_TtC12GameCenterUI22PlayerProfilePresenter profileSettings]
  -[_TtC12GameCenterUI22PlayerProfilePresenter setAllowsNearByMultiplayerInvites:]
  -[_TtC12GameCenterUI22PlayerProfilePresenter signIntoGameCenter]
  -[_TtC12GameCenterUI22PlayerProfilePresenter showAvatarEditor]
  -[_TtC12GameCenterUI22PlayerProfilePresenter didSignOut]


_TtC12GameCenterUI16AchievementUtils : NSObject
  // class methods
  +[_TtC12GameCenterUI16AchievementUtils achievementBadgeWithAchievement:]

  // instance methods
  -[_TtC12GameCenterUI16AchievementUtils init]


_TtC12GameCenterUI38GKMultiplayerAddSlotCollectionViewCell : UICollectionViewCell
 @property  @? addSlotActionHandler
 @property  long long maximumAdditionalPlayers
 @property  UIButton *accessibilityAddSlotButton

  // class methods
  +[_TtC12GameCenterUI38GKMultiplayerAddSlotCollectionViewCell reuseIdentifier]

  // instance methods
  -[_TtC12GameCenterUI38GKMultiplayerAddSlotCollectionViewCell .cxx_destruct]
  -[_TtC12GameCenterUI38GKMultiplayerAddSlotCollectionViewCell layoutSubviews]
  -[_TtC12GameCenterUI38GKMultiplayerAddSlotCollectionViewCell sizeThatFits:]
  -[_TtC12GameCenterUI38GKMultiplayerAddSlotCollectionViewCell initWithFrame:]
  -[_TtC12GameCenterUI38GKMultiplayerAddSlotCollectionViewCell traitCollectionDidChange:]
  -[_TtC12GameCenterUI38GKMultiplayerAddSlotCollectionViewCell initWithCoder:]
  -[_TtC12GameCenterUI38GKMultiplayerAddSlotCollectionViewCell measurementsWithFitting:in:]
  -[_TtC12GameCenterUI38GKMultiplayerAddSlotCollectionViewCell addSlotActionHandler]
  -[_TtC12GameCenterUI38GKMultiplayerAddSlotCollectionViewCell setAddSlotActionHandler:]
  -[_TtC12GameCenterUI38GKMultiplayerAddSlotCollectionViewCell maximumAdditionalPlayers]
  -[_TtC12GameCenterUI38GKMultiplayerAddSlotCollectionViewCell setMaximumAdditionalPlayers:]
  -[_TtC12GameCenterUI38GKMultiplayerAddSlotCollectionViewCell accessibilityAddSlotButton]


_TtC12GameCenterUI23ASCLockupBatchPresenter : Swift._SwiftObject

_TtC12GameCenterUI21SignOutProfileSection : GameCenterUI.PlayerProfileSection

_TtC12GameCenterUI47BlackListCoreRecencyContactActionImplementation : NSObject
  // instance methods
  -[_TtC12GameCenterUI47BlackListCoreRecencyContactActionImplementation init]


_TtC12GameCenterUI18DashboardPresenter : GameCenterUI.BaseSplitPresenter
 @property  BOOL shouldUseLargeTitle
 @property  NSString *title
 @property  BOOL displayInSplitView

  // class methods
  +[_TtC12GameCenterUI18DashboardPresenter processLeaderboardRequestFrom:request:gameRecord:]
  +[_TtC12GameCenterUI18DashboardPresenter presentLeaderboardsFrom:request:gameRecord:leaderboard:animated:]

  // instance methods
  -[_TtC12GameCenterUI18DashboardPresenter shouldUseLargeTitle]
  -[_TtC12GameCenterUI18DashboardPresenter .cxx_destruct]
  -[_TtC12GameCenterUI18DashboardPresenter title]
  -[_TtC12GameCenterUI18DashboardPresenter updateSnapshot]
  -[_TtC12GameCenterUI18DashboardPresenter initWithPlayerId:]
  -[_TtC12GameCenterUI18DashboardPresenter handleViewDidLoad]
  -[_TtC12GameCenterUI18DashboardPresenter loadMoreActivityFeedWithContinuationToken:]
  -[_TtC12GameCenterUI18DashboardPresenter displayInSplitView]
  -[_TtC12GameCenterUI18DashboardPresenter setDisplayInSplitView:]
  -[_TtC12GameCenterUI18DashboardPresenter setShouldUseLargeTitle:]
  -[_TtC12GameCenterUI18DashboardPresenter presentLeaderboardsFrom:request:gameBundleID:]
  -[_TtC12GameCenterUI18DashboardPresenter presentAchievementsFrom:gameRecord:]
  -[_TtC12GameCenterUI18DashboardPresenter presentChallengesFrom:gameRecord:shouldShowPlayForChallenge:]
  -[_TtC12GameCenterUI18DashboardPresenter presentPlayerProfileFrom:request:animated:]


_TtC12GameCenterUI36ChallengePlayersActionImplementation : Swift._SwiftObject

_TtC12GameCenterUI35BaseDoubleColumnSplitViewController : UISplitViewController <UISplitViewControllerDelegate>
  // instance methods
  -[_TtC12GameCenterUI35BaseDoubleColumnSplitViewController showDetailViewController:sender:]
  -[_TtC12GameCenterUI35BaseDoubleColumnSplitViewController initWithNibName:bundle:]
  -[_TtC12GameCenterUI35BaseDoubleColumnSplitViewController .cxx_destruct]
  -[_TtC12GameCenterUI35BaseDoubleColumnSplitViewController viewDidLoad]
  -[_TtC12GameCenterUI35BaseDoubleColumnSplitViewController setViewController:forColumn:]
  -[_TtC12GameCenterUI35BaseDoubleColumnSplitViewController initWithStyle:]
  -[_TtC12GameCenterUI35BaseDoubleColumnSplitViewController traitCollectionDidChange:]
  -[_TtC12GameCenterUI35BaseDoubleColumnSplitViewController init]
  -[_TtC12GameCenterUI35BaseDoubleColumnSplitViewController initWithCoder:]
  -[_TtC12GameCenterUI35BaseDoubleColumnSplitViewController splitViewController:topColumnForCollapsingToProposedTopColumn:]
  -[_TtC12GameCenterUI35BaseDoubleColumnSplitViewController splitViewController:displayModeForExpandingToProposedDisplayMode:]


_TtC12GameCenterUIP33_735E1C79A365F2F2932EE10C50FF0D3129ContainerNavigationController : UIViewController
  // instance methods
  -[_TtC12GameCenterUIP33_735E1C79A365F2F2932EE10C50FF0D3129ContainerNavigationController initWithNibName:bundle:]
  -[_TtC12GameCenterUIP33_735E1C79A365F2F2932EE10C50FF0D3129ContainerNavigationController viewWillLayoutSubviews]
  -[_TtC12GameCenterUIP33_735E1C79A365F2F2932EE10C50FF0D3129ContainerNavigationController .cxx_destruct]
  -[_TtC12GameCenterUIP33_735E1C79A365F2F2932EE10C50FF0D3129ContainerNavigationController viewDidLoad]
  -[_TtC12GameCenterUIP33_735E1C79A365F2F2932EE10C50FF0D3129ContainerNavigationController init]
  -[_TtC12GameCenterUIP33_735E1C79A365F2F2932EE10C50FF0D3129ContainerNavigationController initWithCoder:]


_TtC12GameCenterUI23FriendsDashboardSection : GameCenterUI.DashboardSections

_TtC12GameCenterUI15AchievementCard : UIView
 @property  BOOL canBecomeFocused
 @property  _TtC12GameCenterUI16DynamicTypeLabel *accessibilityTitleLabel
 @property  _TtC12GameCenterUI16DynamicTypeLabel *accessibilitySubtitleLabel
 @property  NSDate *accessibilityAchievementCompletedDate
 @property  _TtC12GameCenterUI16AchievementBadge *accessibilityBadge

  // instance methods
  -[_TtC12GameCenterUI15AchievementCard canBecomeFocused]
  -[_TtC12GameCenterUI15AchievementCard .cxx_destruct]
  -[_TtC12GameCenterUI15AchievementCard layoutSubviews]
  -[_TtC12GameCenterUI15AchievementCard _dynamicUserInterfaceTraitDidChange]
  -[_TtC12GameCenterUI15AchievementCard sizeThatFits:]
  -[_TtC12GameCenterUI15AchievementCard initWithFrame:]
  -[_TtC12GameCenterUI15AchievementCard initWithCoder:]
  -[_TtC12GameCenterUI15AchievementCard accessibilitySubtitleLabel]
  -[_TtC12GameCenterUI15AchievementCard measurementsWithFitting:in:]
  -[_TtC12GameCenterUI15AchievementCard accessibilityTitleLabel]
  -[_TtC12GameCenterUI15AchievementCard didTap]
  -[_TtC12GameCenterUI15AchievementCard accessibilityAchievementCompletedDate]
  -[_TtC12GameCenterUI15AchievementCard accessibilityBadge]


_TtC12GameCenterUI15TitleHeaderView : GameCenterUI.BaseCollectionReusableView
 @property  _TtC12GameCenterUI16DynamicTypeLabel *titleLabel
 @property  UIView *accessoryView
 @property  _TtC12GameCenterUI11ArtworkView *iconArtworkView
 @property  NSString *accessibilityLabel
 @property  _TtC12GameCenterUI16DynamicTypeLabel *accessibilityTitleLabel
 @property  UIView *accessibilityAccessoryView

  // instance methods
  -[_TtC12GameCenterUI15TitleHeaderView accessibilityLabel]
  -[_TtC12GameCenterUI15TitleHeaderView _disableRasterizeInAnimations]
  -[_TtC12GameCenterUI15TitleHeaderView setAccessibilityLabel:]
  -[_TtC12GameCenterUI15TitleHeaderView accessoryView]
  -[_TtC12GameCenterUI15TitleHeaderView .cxx_destruct]
  -[_TtC12GameCenterUI15TitleHeaderView prepareForReuse]
  -[_TtC12GameCenterUI15TitleHeaderView layoutSubviews]
  -[_TtC12GameCenterUI15TitleHeaderView setAccessoryView:]
  -[_TtC12GameCenterUI15TitleHeaderView sizeThatFits:]
  -[_TtC12GameCenterUI15TitleHeaderView initWithFrame:]
  -[_TtC12GameCenterUI15TitleHeaderView titleLabel]
  -[_TtC12GameCenterUI15TitleHeaderView initWithCoder:]
  -[_TtC12GameCenterUI15TitleHeaderView accessibilityTitleLabel]
  -[_TtC12GameCenterUI15TitleHeaderView didTapWithAccessoryView:]
  -[_TtC12GameCenterUI15TitleHeaderView accessibilityAccessoryView]
  -[_TtC12GameCenterUI15TitleHeaderView iconArtworkView]
  -[_TtC12GameCenterUI15TitleHeaderView setIconArtworkView:]


_TtC12GameCenterUI22BaseCollectionViewCell : GKFocusHighlightingCollectionViewCell
  // instance methods
  -[_TtC12GameCenterUI22BaseCollectionViewCell _edgesPropagatingSafeAreaInsetsToSubviews]
  -[_TtC12GameCenterUI22BaseCollectionViewCell initWithFrame:]
  -[_TtC12GameCenterUI22BaseCollectionViewCell initWithCoder:]


_TtC12GameCenterUIP33_E93A106C72447D8B59D99814DDD0B3D39BadgeView : UIView
 @property  BOOL hidden
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} frame

  // instance methods
  -[_TtC12GameCenterUIP33_E93A106C72447D8B59D99814DDD0B3D39BadgeView frame]
  -[_TtC12GameCenterUIP33_E93A106C72447D8B59D99814DDD0B3D39BadgeView setFrame:]
  -[_TtC12GameCenterUIP33_E93A106C72447D8B59D99814DDD0B3D39BadgeView .cxx_destruct]
  -[_TtC12GameCenterUIP33_E93A106C72447D8B59D99814DDD0B3D39BadgeView layoutSubviews]
  -[_TtC12GameCenterUIP33_E93A106C72447D8B59D99814DDD0B3D39BadgeView isHidden]
  -[_TtC12GameCenterUIP33_E93A106C72447D8B59D99814DDD0B3D39BadgeView setHidden:]
  -[_TtC12GameCenterUIP33_E93A106C72447D8B59D99814DDD0B3D39BadgeView initWithFrame:]
  -[_TtC12GameCenterUIP33_E93A106C72447D8B59D99814DDD0B3D39BadgeView initWithCoder:]


_TtC12GameCenterUI13BasePresenter : NSObject
  // instance methods
  -[_TtC12GameCenterUI13BasePresenter .cxx_destruct]
  -[_TtC12GameCenterUI13BasePresenter init]


_TtC12GameCenterUI25FriendsListViewController : GameCenterUI.BaseCollectionViewController <UISearchResultsUpdating, UISearchControllerDelegate>
  // instance methods
  -[_TtC12GameCenterUI25FriendsListViewController collectionView:shouldHighlightItemAtIndexPath:]
  -[_TtC12GameCenterUI25FriendsListViewController collectionView:willDisplaySupplementaryView:forElementKind:atIndexPath:]
  -[_TtC12GameCenterUI25FriendsListViewController initWithNibName:bundle:]
  -[_TtC12GameCenterUI25FriendsListViewController viewDidAppear:]
  -[_TtC12GameCenterUI25FriendsListViewController collectionView:willDisplayCell:forItemAtIndexPath:]
  -[_TtC12GameCenterUI25FriendsListViewController .cxx_destruct]
  -[_TtC12GameCenterUI25FriendsListViewController viewDidLoad]
  -[_TtC12GameCenterUI25FriendsListViewController collectionView:didEndDisplayingCell:forItemAtIndexPath:]
  -[_TtC12GameCenterUI25FriendsListViewController updateSearchResultsForSearchController:]
  -[_TtC12GameCenterUI25FriendsListViewController collectionView:didSelectItemAtIndexPath:]
  -[_TtC12GameCenterUI25FriendsListViewController didDismissSearchController:]
  -[_TtC12GameCenterUI25FriendsListViewController initWithCoder:]


_TtC12GameCenterUI17DynamicTypeButton : GKFocusableButton
  // instance methods
  -[_TtC12GameCenterUI17DynamicTypeButton imageRectForContentRect:]
  -[_TtC12GameCenterUI17DynamicTypeButton titleRectForContentRect:]
  -[_TtC12GameCenterUI17DynamicTypeButton .cxx_destruct]
  -[_TtC12GameCenterUI17DynamicTypeButton tintColorDidChange]
  -[_TtC12GameCenterUI17DynamicTypeButton pointInside:withEvent:]
  -[_TtC12GameCenterUI17DynamicTypeButton sizeThatFits:]
  -[_TtC12GameCenterUI17DynamicTypeButton initWithFrame:]
  -[_TtC12GameCenterUI17DynamicTypeButton traitCollectionDidChange:]
  -[_TtC12GameCenterUI17DynamicTypeButton initWithCoder:]


_TtC12GameCenterUI11AccessPoint : NSObject
  // instance methods
  -[_TtC12GameCenterUI11AccessPoint .cxx_destruct]
  -[_TtC12GameCenterUI11AccessPoint init]


_TtC12GameCenterUI36SmallLockupFriendsListProfileSection : GameCenterUI.PlayerProfileSection

_TtC12GameCenterUIP33_5352B16A5002CB36501838DE2FD945EE18ReporterWithRefApp : GKReporter
  // instance methods
  -[_TtC12GameCenterUIP33_5352B16A5002CB36501838DE2FD945EE18ReporterWithRefApp .cxx_destruct]
  -[_TtC12GameCenterUIP33_5352B16A5002CB36501838DE2FD945EE18ReporterWithRefApp reportEvent:type:]
  -[_TtC12GameCenterUIP33_5352B16A5002CB36501838DE2FD945EE18ReporterWithRefApp init]


_TtC12GameCenterUI28AuthenticationMetricsHandler : Swift._SwiftObject

_TtC12GameCenterUI35ActivityFeedAddFriendSuggestionView : UIView
  // instance methods
  -[_TtC12GameCenterUI35ActivityFeedAddFriendSuggestionView .cxx_destruct]
  -[_TtC12GameCenterUI35ActivityFeedAddFriendSuggestionView layoutSubviews]
  -[_TtC12GameCenterUI35ActivityFeedAddFriendSuggestionView sizeThatFits:]
  -[_TtC12GameCenterUI35ActivityFeedAddFriendSuggestionView initWithFrame:]
  -[_TtC12GameCenterUI35ActivityFeedAddFriendSuggestionView initWithCoder:]


_TtC12GameCenterUI17SectionFooterView : GameCenterUI.BaseCollectionReusableView
 @property  {UIEdgeInsets=dddd} layoutMargins
 @property  BOOL accessibilityLabelHasAction
 @property  BOOL accessibilityAttachmentHasAction
 @property  _TtC12GameCenterUI16DynamicTypeLabel *accessibilityFooterLabel

  // instance methods
  -[_TtC12GameCenterUI17SectionFooterView setLayoutMargins:]
  -[_TtC12GameCenterUI17SectionFooterView .cxx_destruct]
  -[_TtC12GameCenterUI17SectionFooterView prepareForReuse]
  -[_TtC12GameCenterUI17SectionFooterView layoutSubviews]
  -[_TtC12GameCenterUI17SectionFooterView layoutMargins]
  -[_TtC12GameCenterUI17SectionFooterView initWithFrame:]
  -[_TtC12GameCenterUI17SectionFooterView initWithCoder:]
  -[_TtC12GameCenterUI17SectionFooterView measurementsWithFitting:in:]
  -[_TtC12GameCenterUI17SectionFooterView handleTapWithGestureRecognizer:]
  -[_TtC12GameCenterUI17SectionFooterView accessibilityLabelHasAction]
  -[_TtC12GameCenterUI17SectionFooterView accessibilityAttachmentHasAction]
  -[_TtC12GameCenterUI17SectionFooterView accessibilityFooterLabel]


_TtC12GameCenterUI15ProgressBarView : UIView
  // instance methods
  -[_TtC12GameCenterUI15ProgressBarView .cxx_destruct]
  -[_TtC12GameCenterUI15ProgressBarView layoutSubviews]
  -[_TtC12GameCenterUI15ProgressBarView sizeThatFits:]
  -[_TtC12GameCenterUI15ProgressBarView initWithFrame:]
  -[_TtC12GameCenterUI15ProgressBarView initWithCoder:]
  -[_TtC12GameCenterUI15ProgressBarView measurementsWithFitting:in:]


_TtC12GameCenterUI30DashboardActivityFeedPresenter : GameCenterUI.BasePresenter
 @property  NSString *title

  // instance methods
  -[_TtC12GameCenterUI30DashboardActivityFeedPresenter .cxx_destruct]
  -[_TtC12GameCenterUI30DashboardActivityFeedPresenter title]
  -[_TtC12GameCenterUI30DashboardActivityFeedPresenter updateSnapshot]
  -[_TtC12GameCenterUI30DashboardActivityFeedPresenter initWithPlayerId:]
  -[_TtC12GameCenterUI30DashboardActivityFeedPresenter loadMoreActivityFeedWithContinuationToken:]


_TtC12GameCenterUI19RoundedTitledButton : GameCenterUI.DynamicTypeButton
 @property  double _cornerRadius

  // instance methods
  -[_TtC12GameCenterUI19RoundedTitledButton .cxx_destruct]
  -[_TtC12GameCenterUI19RoundedTitledButton setEnabled:]
  -[_TtC12GameCenterUI19RoundedTitledButton _cornerRadius]
  -[_TtC12GameCenterUI19RoundedTitledButton layoutSubviews]
  -[_TtC12GameCenterUI19RoundedTitledButton sizeThatFits:]
  -[_TtC12GameCenterUI19RoundedTitledButton _setCornerRadius:]
  -[_TtC12GameCenterUI19RoundedTitledButton initWithFrame:]
  -[_TtC12GameCenterUI19RoundedTitledButton didTapButton:]
  -[_TtC12GameCenterUI19RoundedTitledButton measurementsWithFitting:in:]


_TtC12GameCenterUI20HeaderProfileSection : GameCenterUI.PlayerProfileSection

_TtC12GameCenterUI33GKExpandedGroupBaseViewController : UIViewController
  // instance methods
  -[_TtC12GameCenterUI33GKExpandedGroupBaseViewController initWithNibName:bundle:]
  -[_TtC12GameCenterUI33GKExpandedGroupBaseViewController initWithCoder:]


_TtC12GameCenterUI29GKExpandedGroupViewController : GameCenterUI.GKExpandedGroupBaseViewController <UICollectionViewDelegateFlowLayout, UICollectionViewDataSource>
 @property  UICollectionView *collectionView
 @property  NSLayoutConstraint *contentViewWidthConstraint
 @property  UIVisualEffectView *visualEffectView
 @property  UIView *container
 @property  UILabel *titleLabel
 @property  NSLayoutConstraint *collectionViewHeightConstraint
 @property  <_TtP12GameCenterUI37GKExpandedGroupViewControllerDelegate_> *delegate

  // instance methods
  -[_TtC12GameCenterUI29GKExpandedGroupViewController setCollectionView:]
  -[_TtC12GameCenterUI29GKExpandedGroupViewController setContainer:]
  -[_TtC12GameCenterUI29GKExpandedGroupViewController collectionView:cellForItemAtIndexPath:]
  -[_TtC12GameCenterUI29GKExpandedGroupViewController visualEffectView]
  -[_TtC12GameCenterUI29GKExpandedGroupViewController setTitleLabel:]
  -[_TtC12GameCenterUI29GKExpandedGroupViewController setDelegate:]
  -[_TtC12GameCenterUI29GKExpandedGroupViewController collectionView:shouldDeselectItemAtIndexPath:]
  -[_TtC12GameCenterUI29GKExpandedGroupViewController collectionView:shouldSelectItemAtIndexPath:]
  -[_TtC12GameCenterUI29GKExpandedGroupViewController delegate]
  -[_TtC12GameCenterUI29GKExpandedGroupViewController initWithNibName:bundle:]
  -[_TtC12GameCenterUI29GKExpandedGroupViewController collectionView:layout:sizeForItemAtIndexPath:]
  -[_TtC12GameCenterUI29GKExpandedGroupViewController .cxx_destruct]
  -[_TtC12GameCenterUI29GKExpandedGroupViewController collectionView]
  -[_TtC12GameCenterUI29GKExpandedGroupViewController viewDidLoad]
  -[_TtC12GameCenterUI29GKExpandedGroupViewController viewWillAppear:]
  -[_TtC12GameCenterUI29GKExpandedGroupViewController container]
  -[_TtC12GameCenterUI29GKExpandedGroupViewController viewDidLayoutSubviews]
  -[_TtC12GameCenterUI29GKExpandedGroupViewController viewWillDisappear:]
  -[_TtC12GameCenterUI29GKExpandedGroupViewController collectionView:numberOfItemsInSection:]
  -[_TtC12GameCenterUI29GKExpandedGroupViewController traitCollectionDidChange:]
  -[_TtC12GameCenterUI29GKExpandedGroupViewController setVisualEffectView:]
  -[_TtC12GameCenterUI29GKExpandedGroupViewController titleLabel]
  -[_TtC12GameCenterUI29GKExpandedGroupViewController initWithCoder:]
  -[_TtC12GameCenterUI29GKExpandedGroupViewController dismissView]
  -[_TtC12GameCenterUI29GKExpandedGroupViewController contentViewWidthConstraint]
  -[_TtC12GameCenterUI29GKExpandedGroupViewController setContentViewWidthConstraint:]
  -[_TtC12GameCenterUI29GKExpandedGroupViewController collectionViewHeightConstraint]
  -[_TtC12GameCenterUI29GKExpandedGroupViewController setCollectionViewHeightConstraint:]
  -[_TtC12GameCenterUI29GKExpandedGroupViewController configureWithPlayers:groupName:caption:playerSelectionProxy:]


_TtC12GameCenterUI16AchievementBadge : UIView
 @property  BOOL accessibilityIsAchievementLocked
 @property  BOOL accessibilityIsAchievementCompleted
 @property  BOOL accessibilityIsAchievementInProgress
 @property  double accessibilityProgress

  // instance methods
  -[_TtC12GameCenterUI16AchievementBadge .cxx_destruct]
  -[_TtC12GameCenterUI16AchievementBadge layoutSubviews]
  -[_TtC12GameCenterUI16AchievementBadge _dynamicUserInterfaceTraitDidChange]
  -[_TtC12GameCenterUI16AchievementBadge initWithFrame:]
  -[_TtC12GameCenterUI16AchievementBadge initWithCoder:]
  -[_TtC12GameCenterUI16AchievementBadge accessibilityIsAchievementLocked]
  -[_TtC12GameCenterUI16AchievementBadge accessibilityIsAchievementCompleted]
  -[_TtC12GameCenterUI16AchievementBadge accessibilityIsAchievementInProgress]
  -[_TtC12GameCenterUI16AchievementBadge accessibilityProgress]


_TtC12GameCenterUI13RoundedButton : GKFocusableButton
  // instance methods
  -[_TtC12GameCenterUI13RoundedButton .cxx_destruct]
  -[_TtC12GameCenterUI13RoundedButton layoutSubviews]
  -[_TtC12GameCenterUI13RoundedButton sizeThatFits:]
  -[_TtC12GameCenterUI13RoundedButton initWithFrame:]
  -[_TtC12GameCenterUI13RoundedButton traitCollectionDidChange:]
  -[_TtC12GameCenterUI13RoundedButton initWithCoder:]


_TtC12GameCenterUI30AchievementsListViewController : GameCenterUI.BaseViewController <UICollectionViewDelegate>
 @property  NSArray *preferredFocusEnvironments

  // instance methods
  -[_TtC12GameCenterUI30AchievementsListViewController collectionView:shouldHighlightItemAtIndexPath:]
  -[_TtC12GameCenterUI30AchievementsListViewController scrollViewDidScroll:]
  -[_TtC12GameCenterUI30AchievementsListViewController collectionView:willDisplaySupplementaryView:forElementKind:atIndexPath:]
  -[_TtC12GameCenterUI30AchievementsListViewController viewDidAppear:]
  -[_TtC12GameCenterUI30AchievementsListViewController collectionView:willDisplayCell:forItemAtIndexPath:]
  -[_TtC12GameCenterUI30AchievementsListViewController collectionView:didUpdateFocusInContext:withAnimationCoordinator:]
  -[_TtC12GameCenterUI30AchievementsListViewController .cxx_destruct]
  -[_TtC12GameCenterUI30AchievementsListViewController viewDidLoad]
  -[_TtC12GameCenterUI30AchievementsListViewController collectionView:didEndDisplayingCell:forItemAtIndexPath:]
  -[_TtC12GameCenterUI30AchievementsListViewController viewDidLayoutSubviews]
  -[_TtC12GameCenterUI30AchievementsListViewController preferredFocusEnvironments]
  -[_TtC12GameCenterUI30AchievementsListViewController collectionView:didSelectItemAtIndexPath:]
  -[_TtC12GameCenterUI30AchievementsListViewController init]
  -[_TtC12GameCenterUI30AchievementsListViewController initWithCoder:]


_TtC12GameCenterUIP33_9A92A52BF12BA04A0874017A503C6E7323GamesListCollectionView : UICollectionView
 @property  BOOL canBecomeFocused
 @property  NSArray *preferredFocusEnvironments

  // instance methods
  -[_TtC12GameCenterUIP33_9A92A52BF12BA04A0874017A503C6E7323GamesListCollectionView canBecomeFocused]
  -[_TtC12GameCenterUIP33_9A92A52BF12BA04A0874017A503C6E7323GamesListCollectionView initWithFrame:collectionViewLayout:]
  -[_TtC12GameCenterUIP33_9A92A52BF12BA04A0874017A503C6E7323GamesListCollectionView preferredFocusEnvironments]
  -[_TtC12GameCenterUIP33_9A92A52BF12BA04A0874017A503C6E7323GamesListCollectionView initWithCoder:]


_TtC12GameCenterUI23PlayerProfileHeaderView : UIView
 @property  _TtC12GameCenterUI16DynamicTypeLabel *accessibilityTitleLabel
 @property  _TtC12GameCenterUI16DynamicTypeLabel *accessibilityFriendStatusLabel

  // instance methods
  -[_TtC12GameCenterUI23PlayerProfileHeaderView .cxx_destruct]
  -[_TtC12GameCenterUI23PlayerProfileHeaderView layoutSubviews]
  -[_TtC12GameCenterUI23PlayerProfileHeaderView sizeThatFits:]
  -[_TtC12GameCenterUI23PlayerProfileHeaderView initWithFrame:]
  -[_TtC12GameCenterUI23PlayerProfileHeaderView traitCollectionDidChange:]
  -[_TtC12GameCenterUI23PlayerProfileHeaderView initWithCoder:]
  -[_TtC12GameCenterUI23PlayerProfileHeaderView measurementsWithFitting:in:]
  -[_TtC12GameCenterUI23PlayerProfileHeaderView accessibilityTitleLabel]
  -[_TtC12GameCenterUI23PlayerProfileHeaderView accessibilityFriendStatusLabel]


_TtC12GameCenterUI27ActivityFeedLeaderboardView : UIView
  // instance methods
  -[_TtC12GameCenterUI27ActivityFeedLeaderboardView .cxx_destruct]
  -[_TtC12GameCenterUI27ActivityFeedLeaderboardView layoutSubviews]
  -[_TtC12GameCenterUI27ActivityFeedLeaderboardView sizeThatFits:]
  -[_TtC12GameCenterUI27ActivityFeedLeaderboardView initWithFrame:]
  -[_TtC12GameCenterUI27ActivityFeedLeaderboardView initWithCoder:]


_TtC12GameCenterUI7Artwork : Swift._SwiftObject

_TtC12GameCenterUI20DynamicTypeTextField : UITextField
 @property  BOOL jet_isTextExtraTall
 @property  {UIEdgeInsets=dddd} jet_languageAwareOutsets
 @property  long long jet_textLength
 @property  UIFont *font
 @property  long long textAlignment

  // instance methods
  -[_TtC12GameCenterUI20DynamicTypeTextField setTextAlignment:]
  -[_TtC12GameCenterUI20DynamicTypeTextField .cxx_destruct]
  -[_TtC12GameCenterUI20DynamicTypeTextField textAlignment]
  -[_TtC12GameCenterUI20DynamicTypeTextField font]
  -[_TtC12GameCenterUI20DynamicTypeTextField setFont:]
  -[_TtC12GameCenterUI20DynamicTypeTextField initWithFrame:]
  -[_TtC12GameCenterUI20DynamicTypeTextField traitCollectionDidChange:]
  -[_TtC12GameCenterUI20DynamicTypeTextField initWithCoder:]
  -[_TtC12GameCenterUI20DynamicTypeTextField jet_isTextExtraTall]
  -[_TtC12GameCenterUI20DynamicTypeTextField measurementsWithFitting:in:]
  -[_TtC12GameCenterUI20DynamicTypeTextField jet_languageAwareOutsets]
  -[_TtC12GameCenterUI20DynamicTypeTextField jet_textLength]


_TtC12GameCenterUI31NicknameFieldCollectionViewCell : GameCenterUI.BaseCollectionViewCell
 @property  _TtC12GameCenterUI20DynamicTypeTextField *accessibilityTextLabel

  // instance methods
  -[_TtC12GameCenterUI31NicknameFieldCollectionViewCell .cxx_destruct]
  -[_TtC12GameCenterUI31NicknameFieldCollectionViewCell prepareForReuse]
  -[_TtC12GameCenterUI31NicknameFieldCollectionViewCell layoutSubviews]
  -[_TtC12GameCenterUI31NicknameFieldCollectionViewCell sizeThatFits:]
  -[_TtC12GameCenterUI31NicknameFieldCollectionViewCell initWithFrame:]
  -[_TtC12GameCenterUI31NicknameFieldCollectionViewCell initWithCoder:]
  -[_TtC12GameCenterUI31NicknameFieldCollectionViewCell accessibilityTextLabel]


_TtC12GameCenterUI14EmptyStateView : UIScrollView
 @property  @? buttonActionBlock

  // class methods
  +[_TtC12GameCenterUI14EmptyStateView addFriendsEmptyStateView]
  +[_TtC12GameCenterUI14EmptyStateView addFriendsEmptyStateViewTVOS]
  +[_TtC12GameCenterUI14EmptyStateView addAdditionalFriendsEmptyStateView]

  // instance methods
  -[_TtC12GameCenterUI14EmptyStateView .cxx_destruct]
  -[_TtC12GameCenterUI14EmptyStateView layoutSubviews]
  -[_TtC12GameCenterUI14EmptyStateView sizeThatFits:]
  -[_TtC12GameCenterUI14EmptyStateView initWithFrame:]
  -[_TtC12GameCenterUI14EmptyStateView didTapButton:]
  -[_TtC12GameCenterUI14EmptyStateView initWithCoder:]
  -[_TtC12GameCenterUI14EmptyStateView measurementsWithFitting:in:]
  -[_TtC12GameCenterUI14EmptyStateView buttonActionBlock]
  -[_TtC12GameCenterUI14EmptyStateView setButtonActionBlock:]


_TtC12GameCenterUIP33_89031E6405F26A5C0C098E2073FB218A12WordmarkView : UIView
  // instance methods
  -[_TtC12GameCenterUIP33_89031E6405F26A5C0C098E2073FB218A12WordmarkView .cxx_destruct]
  -[_TtC12GameCenterUIP33_89031E6405F26A5C0C098E2073FB218A12WordmarkView layoutSubviews]
  -[_TtC12GameCenterUIP33_89031E6405F26A5C0C098E2073FB218A12WordmarkView initWithFrame:]
  -[_TtC12GameCenterUIP33_89031E6405F26A5C0C098E2073FB218A12WordmarkView initWithCoder:]
  -[_TtC12GameCenterUIP33_89031E6405F26A5C0C098E2073FB218A12WordmarkView measurementsWithFitting:in:]


_TtC12GameCenterUI23PlayerProfileComponents : GameCenterUI.Components

_TtC12GameCenterUI35GameLayerAchievementsViewController : UICollectionViewController
 @property  NSArray *preferredFocusEnvironments

  // instance methods
  -[_TtC12GameCenterUI35GameLayerAchievementsViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[_TtC12GameCenterUI35GameLayerAchievementsViewController didReceiveMemoryWarning]
  -[_TtC12GameCenterUI35GameLayerAchievementsViewController initWithNibName:bundle:]
  -[_TtC12GameCenterUI35GameLayerAchievementsViewController viewWillLayoutSubviews]
  -[_TtC12GameCenterUI35GameLayerAchievementsViewController viewDidAppear:]
  -[_TtC12GameCenterUI35GameLayerAchievementsViewController collectionView:previewForDismissingContextMenuWithConfiguration:]
  -[_TtC12GameCenterUI35GameLayerAchievementsViewController .cxx_destruct]
  -[_TtC12GameCenterUI35GameLayerAchievementsViewController viewDidLoad]
  -[_TtC12GameCenterUI35GameLayerAchievementsViewController viewWillAppear:]
  -[_TtC12GameCenterUI35GameLayerAchievementsViewController collectionView:previewForHighlightingContextMenuWithConfiguration:]
  -[_TtC12GameCenterUI35GameLayerAchievementsViewController initWithCollectionViewLayout:]
  -[_TtC12GameCenterUI35GameLayerAchievementsViewController preferredFocusEnvironments]
  -[_TtC12GameCenterUI35GameLayerAchievementsViewController viewDidDisappear:]
  -[_TtC12GameCenterUI35GameLayerAchievementsViewController viewWillDisappear:]
  -[_TtC12GameCenterUI35GameLayerAchievementsViewController traitCollectionDidChange:]
  -[_TtC12GameCenterUI35GameLayerAchievementsViewController collectionView:contextMenuConfigurationForItemAtIndexPath:point:]
  -[_TtC12GameCenterUI35GameLayerAchievementsViewController initWithCoder:]


_TtC12GameCenterUI27ActivityFeedAchievementView : UIView
 @property  NSString *accessibilityLabel

  // instance methods
  -[_TtC12GameCenterUI27ActivityFeedAchievementView accessibilityLabel]
  -[_TtC12GameCenterUI27ActivityFeedAchievementView setAccessibilityLabel:]
  -[_TtC12GameCenterUI27ActivityFeedAchievementView .cxx_destruct]
  -[_TtC12GameCenterUI27ActivityFeedAchievementView layoutSubviews]
  -[_TtC12GameCenterUI27ActivityFeedAchievementView sizeThatFits:]
  -[_TtC12GameCenterUI27ActivityFeedAchievementView initWithFrame:]
  -[_TtC12GameCenterUI27ActivityFeedAchievementView initWithCoder:]


_TtC12GameCenterUI17TitledAppIconView : UIView
 @property  _TtC12GameCenterUI16DynamicTypeLabel *accessibilityTitleLabel

  // instance methods
  -[_TtC12GameCenterUI17TitledAppIconView .cxx_destruct]
  -[_TtC12GameCenterUI17TitledAppIconView layoutSubviews]
  -[_TtC12GameCenterUI17TitledAppIconView sizeThatFits:]
  -[_TtC12GameCenterUI17TitledAppIconView initWithFrame:]
  -[_TtC12GameCenterUI17TitledAppIconView initWithCoder:]
  -[_TtC12GameCenterUI17TitledAppIconView measurementsWithFitting:in:]
  -[_TtC12GameCenterUI17TitledAppIconView accessibilityTitleLabel]


_TtC12GameCenterUI32PrivacyAndSettingsProfileSection : GameCenterUI.PlayerProfileSection

_TtC12GameCenterUI17NicknamePresenter : NSObject
  // instance methods
  -[_TtC12GameCenterUI17NicknamePresenter .cxx_destruct]
  -[_TtC12GameCenterUI17NicknamePresenter init]


_TtC12GameCenterUI10GameCenter : Swift._SwiftObject

_TtC12GameCenterUI36ShareAchievementActionImplementation : Swift._SwiftObject

_TtC12GameCenterUI29ContinuePlayingEmptyStateView : UIView
  // instance methods
  -[_TtC12GameCenterUI29ContinuePlayingEmptyStateView .cxx_destruct]
  -[_TtC12GameCenterUI29ContinuePlayingEmptyStateView layoutSubviews]
  -[_TtC12GameCenterUI29ContinuePlayingEmptyStateView initWithFrame:]
  -[_TtC12GameCenterUI29ContinuePlayingEmptyStateView didTapButton:]
  -[_TtC12GameCenterUI29ContinuePlayingEmptyStateView initWithCoder:]
  -[_TtC12GameCenterUI29ContinuePlayingEmptyStateView measurementsWithFitting:in:]


_TtC12GameCenterUI32RemoveFriendActionImplementation : NSObject
  // instance methods
  -[_TtC12GameCenterUI32RemoveFriendActionImplementation .cxx_destruct]
  -[_TtC12GameCenterUI32RemoveFriendActionImplementation init]


_TtC12GameCenterUI16VibrancyHostView : UIVisualEffectView
  // instance methods
  -[_TtC12GameCenterUI16VibrancyHostView initWithEffect:]
  -[_TtC12GameCenterUI16VibrancyHostView .cxx_destruct]
  -[_TtC12GameCenterUI16VibrancyHostView layoutSubviews]
  -[_TtC12GameCenterUI16VibrancyHostView sizeThatFits:]
  -[_TtC12GameCenterUI16VibrancyHostView initWithCoder:]
  -[_TtC12GameCenterUI16VibrancyHostView measurementsWithFitting:in:]


_TtC12GameCenterUI20ActivityFeedBaseData : Swift._SwiftObject

_TtC12GameCenterUI23ActivityFeedArtworkData : GameCenterUI.ActivityFeedBaseData

_TtC12GameCenterUI27ActivityFeedAchievementData : GameCenterUI.ActivityFeedBaseData

_TtC12GameCenterUI27ActivityFeedLeaderboardData : GameCenterUI.ActivityFeedBaseData

_TtC12GameCenterUI22ActivityFeedHeaderData : Swift._SwiftObject

_TtC12GameCenterUI22NicknameProfileSection : GameCenterUI.PlayerProfileSection

_TtC12GameCenterUI10ShadowView : UIView
  // instance methods
  -[_TtC12GameCenterUI10ShadowView .cxx_destruct]
  -[_TtC12GameCenterUI10ShadowView layoutSubviews]
  -[_TtC12GameCenterUI10ShadowView initWithFrame:]
  -[_TtC12GameCenterUI10ShadowView traitCollectionDidChange:]
  -[_TtC12GameCenterUI10ShadowView initWithCoder:]


_TtC12GameCenterUI40GKMultiplayerPickerNearbyInstructionCell : UICollectionViewCell
 @property  BOOL canBecomeFocused

  // class methods
  +[_TtC12GameCenterUI40GKMultiplayerPickerNearbyInstructionCell itemHeightFitting:inTraitEnvironment:]

  // instance methods
  -[_TtC12GameCenterUI40GKMultiplayerPickerNearbyInstructionCell canBecomeFocused]
  -[_TtC12GameCenterUI40GKMultiplayerPickerNearbyInstructionCell .cxx_destruct]
  -[_TtC12GameCenterUI40GKMultiplayerPickerNearbyInstructionCell layoutSubviews]
  -[_TtC12GameCenterUI40GKMultiplayerPickerNearbyInstructionCell initWithFrame:]
  -[_TtC12GameCenterUI40GKMultiplayerPickerNearbyInstructionCell initWithCoder:]
  -[_TtC12GameCenterUI40GKMultiplayerPickerNearbyInstructionCell measurementsWithFitting:in:]


_TtC12GameCenterUI34ProfilePrivacyActionImplementation : NSObject <GKProfilePrivacyTableViewControllerDelegate>
  // instance methods
  -[_TtC12GameCenterUI34ProfilePrivacyActionImplementation .cxx_destruct]
  -[_TtC12GameCenterUI34ProfilePrivacyActionImplementation init]
  -[_TtC12GameCenterUI34ProfilePrivacyActionImplementation didUpdateProfilePrivacy:]


_TtC12GameCenterUI23NoFriendsProfileSection : GameCenterUI.PlayerProfileSection

_TtC12GameCenterUI21LeaderboardLockupView : UIView
  // instance methods
  -[_TtC12GameCenterUI21LeaderboardLockupView .cxx_destruct]
  -[_TtC12GameCenterUI21LeaderboardLockupView layoutSubviews]
  -[_TtC12GameCenterUI21LeaderboardLockupView sizeThatFits:]
  -[_TtC12GameCenterUI21LeaderboardLockupView initWithFrame:]
  -[_TtC12GameCenterUI21LeaderboardLockupView initWithCoder:]
  -[_TtC12GameCenterUI21LeaderboardLockupView measurementsWithFitting:in:]


_TtC12GameCenterUI17DashboardSections : Swift._SwiftObject

_TtC12GameCenterUI26ActivityFeedAddFriendsData : Swift._SwiftObject

_TtC12GameCenterUI24ActivityFeedLoadMoreData : Swift._SwiftObject

_TtC12GameCenterUI30AddFriendsActionImplementation : Swift._SwiftObject

_TtC12GameCenterUI26FocusableTitledAppIconView : GKFocusHighlightingCollectionViewCell
 @property  BOOL canBecomeFocused

  // instance methods
  -[_TtC12GameCenterUI26FocusableTitledAppIconView canBecomeFocused]
  -[_TtC12GameCenterUI26FocusableTitledAppIconView .cxx_destruct]
  -[_TtC12GameCenterUI26FocusableTitledAppIconView prepareForReuse]
  -[_TtC12GameCenterUI26FocusableTitledAppIconView layoutSubviews]
  -[_TtC12GameCenterUI26FocusableTitledAppIconView initWithFrame:]
  -[_TtC12GameCenterUI26FocusableTitledAppIconView initWithCoder:]
  -[_TtC12GameCenterUI26FocusableTitledAppIconView measurementsWithFitting:in:]


_TtC12GameCenterUI30AchievementsLinkProfileSection : GameCenterUI.PlayerProfileSection

GKContactsIntegrationConsentViewController : UIViewController
  // instance methods
  -[GKContactsIntegrationConsentViewController initWithNibName:bundle:]
  -[GKContactsIntegrationConsentViewController viewDidAppear:]
  -[GKContactsIntegrationConsentViewController .cxx_destruct]
  -[GKContactsIntegrationConsentViewController viewDidLoad]
  -[GKContactsIntegrationConsentViewController viewWillAppear:]
  -[GKContactsIntegrationConsentViewController viewWillDisappear:]
  -[GKContactsIntegrationConsentViewController initWithCoder:]


_TtC12GameCenterUI22OnboardingTemplateView : UIView
  // instance methods
  -[_TtC12GameCenterUI22OnboardingTemplateView .cxx_destruct]
  -[_TtC12GameCenterUI22OnboardingTemplateView layoutSubviews]
  -[_TtC12GameCenterUI22OnboardingTemplateView initWithFrame:]
  -[_TtC12GameCenterUI22OnboardingTemplateView initWithCoder:]


_TtC12GameCenterUI15EmphasizedLabel : GameCenterUI.DynamicTypeLabel
  // instance methods
  -[_TtC12GameCenterUI15EmphasizedLabel .cxx_destruct]
  -[_TtC12GameCenterUI15EmphasizedLabel initWithCoder:]


_TtC12GameCenterUI12HeaderButton : GameCenterUI.DynamicTypeButton
  // instance methods
  -[_TtC12GameCenterUI12HeaderButton .cxx_destruct]
  -[_TtC12GameCenterUI12HeaderButton initWithFrame:]
  -[_TtC12GameCenterUI12HeaderButton traitCollectionDidChange:]
  -[_TtC12GameCenterUI12HeaderButton init]


_TtC12GameCenterUI20PlayerProfileSection : Swift._SwiftObject

_TtC12GameCenterUI14CountBadgeView : UIView
 @property  NSLayoutYAxisAnchor *firstBaselineAnchor
 @property  _TtC12GameCenterUI16DynamicTypeLabel *accessibilityCountLabel

  // instance methods
  -[_TtC12GameCenterUI14CountBadgeView .cxx_destruct]
  -[_TtC12GameCenterUI14CountBadgeView layoutSubviews]
  -[_TtC12GameCenterUI14CountBadgeView sizeThatFits:]
  -[_TtC12GameCenterUI14CountBadgeView initWithFrame:]
  -[_TtC12GameCenterUI14CountBadgeView initWithCoder:]
  -[_TtC12GameCenterUI14CountBadgeView firstBaselineAnchor]
  -[_TtC12GameCenterUI14CountBadgeView accessibilityCountLabel]


_TtC12GameCenterUI9GKMetrics : Swift._SwiftObject

_TtC12GameCenterUI22GKSuggestedPlayerGroup : NSObject
 @property  NSArray *players
 @property  NSString *groupName
 @property  NSString *messagesGroupIdentifier
 @property  long long source
 @property  NSString *conversationIdentifier
 @property  BOOL fromPeopleSuggester
 @property  BOOL isNearby

  // instance methods
  -[_TtC12GameCenterUI22GKSuggestedPlayerGroup source]
  -[_TtC12GameCenterUI22GKSuggestedPlayerGroup messagesGroupIdentifier]
  -[_TtC12GameCenterUI22GKSuggestedPlayerGroup setSource:]
  -[_TtC12GameCenterUI22GKSuggestedPlayerGroup setConversationIdentifier:]
  -[_TtC12GameCenterUI22GKSuggestedPlayerGroup .cxx_destruct]
  -[_TtC12GameCenterUI22GKSuggestedPlayerGroup groupName]
  -[_TtC12GameCenterUI22GKSuggestedPlayerGroup setMessagesGroupIdentifier:]
  -[_TtC12GameCenterUI22GKSuggestedPlayerGroup isNearby]
  -[_TtC12GameCenterUI22GKSuggestedPlayerGroup init]
  -[_TtC12GameCenterUI22GKSuggestedPlayerGroup conversationIdentifier]
  -[_TtC12GameCenterUI22GKSuggestedPlayerGroup setGroupName:]
  -[_TtC12GameCenterUI22GKSuggestedPlayerGroup players]
  -[_TtC12GameCenterUI22GKSuggestedPlayerGroup setPlayers:]
  -[_TtC12GameCenterUI22GKSuggestedPlayerGroup fromPeopleSuggester]


_TtC12GameCenterUI34SmallFriendsRequestsProfileSection : GameCenterUI.PlayerProfileSection

_TtC12GameCenterUI26AchievementsProfileSection : GameCenterUI.PlayerProfileSection

UIView(GKAdditionsAdditional)
	// class methods
	+[UIView(GKAdditionsAdditional) _gkStandardBackdropView]
	+[UIView(GKAdditionsAdditional) _gkViewFromNib]

	// instance methods
	-[UIView(GKAdditionsAdditional) setIntegralCenter:]
	-[UIView(GKAdditionsAdditional) integralCenter]
	-[UIView(GKAdditionsAdditional) _gkRecursivelyApplyBlock:depth:]
	-[UIView(GKAdditionsAdditional) _gkRecursiveDescriptionForKey:]
	-[UIView(GKAdditionsAdditional) _gkRecursiveDescriptionForKey:depth:]
	-[UIView(GKAdditionsAdditional) _gkRecursiveDescriptionForValue:forKey:depth:]
	-[UIView(GKAdditionsAdditional) _gkRecursiveDescriptionForValue:forKey:]
	-[UIView(GKAdditionsAdditional) _gkAncestryDescription]
	-[UIView(GKAdditionsAdditional) _gkAncestryAffectingVisualLayout]
	-[UIView(GKAdditionsAdditional) _gkSetNeedsRender]
	-[UIView(GKAdditionsAdditional) _gkRemoveAllConstraints]
	-[UIView(GKAdditionsAdditional) _gkSetDrawsAsBackdropOverlay:]
	-[UIView(GKAdditionsAdditional) _gkSetDrawsAsKnockout:inBackdrop:]
	-[UIView(GKAdditionsAdditional) _gkApplyFakeStatusBarView]
	-[UIView(GKAdditionsAdditional) _gkBackdropView]
	-[UIView(GKAdditionsAdditional) _gkApplyBackdropViewWithGroupName:]
	-[UIView(GKAdditionsAdditional) _gkApplyBackdropViewIfNeededWithGroupName:]
	-[UIView(GKAdditionsAdditional) _gkUseAsModalSheetBackgroundWithGroupName:]
	-[UIView(GKAdditionsAdditional) firstBaselineFromTop]
	-[UIView(GKAdditionsAdditional) lastBaselineFromBottom]
	-[UIView(GKAdditionsAdditional) lastBaselineMaxY]

CALayer(GKAdditions)
	// instance methods
	-[CALayer(GKAdditions) _gkDescriptionWithChildren:]
	-[CALayer(GKAdditions) _gkRecursiveDescription]
	-[CALayer(GKAdditions) _gkParentSublayerTransform]

CNContact(SuggestedHandler)
	// instance methods
	-[CNContact(SuggestedHandler) suggestedHandle]
	-[CNContact(SuggestedHandler) setSuggestedHandle:]
	-[CNContact(SuggestedHandler) collationString]

UICollectionReusableView(GKReusableView)
	// class methods
	+[UICollectionReusableView(GKReusableView) registerSupplementaryViewClassesForKind:withCollectionView:]
	+[UICollectionReusableView(GKReusableView) _gkStandardConstraintMetricsForIdiom:]
	+[UICollectionReusableView(GKReusableView) _gkStandardConstraintMetricsForIdiom:withOverrides:]
	+[UICollectionReusableView(GKReusableView) _gkAdjustConstraintMargins:leading:trailing:]
	+[UICollectionReusableView(GKReusableView) _gkSetupTwoLineLayoutWithSuperview:icon:upperLabel:lowerLabel:leadingBetween:fontTextStyle:metricOverrides:]
	+[UICollectionReusableView(GKReusableView) _gkSetupThreeLineLayoutWithSuperview:icon:upperLine:middleLine:lowerLine:metricOverrides:]
	+[UICollectionReusableView(GKReusableView) _gkSetupSelectableTwoLineLayoutWithCell:icon:selectionView:upperLine:lowerLine:metricOverrides:]
	+[UICollectionReusableView(GKReusableView) _gkSetupSelectableThreeLineLayoutWithCell:icon:selectionView:upperLine:middleLine:lowerLine:metricOverrides:]

	// instance methods
	-[UICollectionReusableView(GKReusableView) _gkSetLeadingGuideConstraint:trailingGuideConstraint:]
	-[UICollectionReusableView(GKReusableView) _gkNewStandardTitleLabel]
	-[UICollectionReusableView(GKReusableView) _gkNewStandardInfoLabel]
	-[UICollectionReusableView(GKReusableView) _gkNewStandardImageView]

GKLocalPlayer(GKFaceTimeSupport)
	// class methods
	+[GKLocalPlayer(GKFaceTimeSupport) accountName]
	+[GKLocalPlayer(GKFaceTimeSupport) hasAuthenticatedAccount]

	// instance methods
	-[GKLocalPlayer(GKFaceTimeSupport) isBannerVisible]
	-[GKLocalPlayer(GKFaceTimeSupport) alertView:didDismissWithButtonIndex:]
	-[GKLocalPlayer(GKFaceTimeSupport) deletePhoto]
	-[GKLocalPlayer(GKFaceTimeSupport) deletePhotoWithCompletionHandler:]
	-[GKLocalPlayer(GKFaceTimeSupport) setPhoto:avatarType:withCompletionHandler:]
	-[GKLocalPlayer(GKFaceTimeSupport) setPhotoFromCNContactImage:pendingContact:withCompletionHandler:]
	-[GKLocalPlayer(GKFaceTimeSupport) deleteMonogramsWithHandler:]
	-[GKLocalPlayer(GKFaceTimeSupport) deleteAvatarAlertControllerWithHandler:]
	-[GKLocalPlayer(GKFaceTimeSupport) registerGameControllers]
	-[GKLocalPlayer(GKFaceTimeSupport) showAccessPoint]
	-[GKLocalPlayer(GKFaceTimeSupport) hideAccessPoint]
	-[GKLocalPlayer(GKFaceTimeSupport) showLoginFailedAlert]
	-[GKLocalPlayer(GKFaceTimeSupport) showWelcomeBannerWithTitle:message:touchHandler:completionHandler:]
	-[GKLocalPlayer(GKFaceTimeSupport) shouldShowOnBoardingUI]
	-[GKLocalPlayer(GKFaceTimeSupport) showOnboardingUIFromViewController:]
	-[GKLocalPlayer(GKFaceTimeSupport) authenticationShowGreenBuddyUIForLocalPlayer:withCompletionHandler:]
	-[GKLocalPlayer(GKFaceTimeSupport) authenticationShowSignInUIForLocalPlayer:dismiss:]
	-[GKLocalPlayer(GKFaceTimeSupport) showAlertForTag:]
	-[GKLocalPlayer(GKFaceTimeSupport) reloadAccessPoint]
	-[GKLocalPlayer(GKFaceTimeSupport) triggerAccessPoint]
	-[GKLocalPlayer(GKFaceTimeSupport) canSendFriendRequest]
	-[GKLocalPlayer(GKFaceTimeSupport) sendFriendInviteTo:groupId:]
	-[GKLocalPlayer(GKFaceTimeSupport) isPresentingFriendRequestViewController]
	-[GKLocalPlayer(GKFaceTimeSupport) presentFriendRequestCreatorFromViewController:error:]

UICollectionView(GKExtensions)
	// instance methods
	-[UICollectionView(GKExtensions) _gkVisibleCellForIndexPath:]
	-[UICollectionView(GKExtensions) _gkFocusingLayout]
	-[UICollectionView(GKExtensions) _gkRegisterCellClass:]
	-[UICollectionView(GKExtensions) _gkDequeueCellForClass:forIndexPath:]
	-[UICollectionView(GKExtensions) _gkPerformWithoutViewReuse:]
	-[UICollectionView(GKExtensions) _gkRegisterClass:forSupplementaryViewOfKind:]
	-[UICollectionView(GKExtensions) _gkDequeueSupplementaryViewForClass:ofKind:forIndexPath:]
	-[UICollectionView(GKExtensions) _gkHorizontalLayout]
	-[UICollectionView(GKExtensions) _gkReuseIdentifierForClass:]
	-[UICollectionView(GKExtensions) _gkRegisterNib:forCellClass:]

(GKSetupAssistantSupport)
	// class methods
	+[(GKSetupAssistantSupport) _gkPlatformNibName]
	+[(GKSetupAssistantSupport) _gkPlatformNibNameForBaseName:]
	+[(GKSetupAssistantSupport) _gkNib]
	+[(GKSetupAssistantSupport) _gkNibWithBaseName:]
	+[(GKSetupAssistantSupport) _gkNibWithPlatformName:]

	// instance methods
	-[(GKSetupAssistantSupport) _gkAuthenticatedPlayerID]
	-[(GKSetupAssistantSupport) _gkSetupAccountWithParamaters:completionHandler:]

GKGame(GKSpringboardSupport)
	// class methods
	+[GKGame(GKSpringboardSupport) removeHistoryForGameWithBundleIdentifier:completionHandler:]
	+[GKGame(GKSpringboardSupport) serverImageSizeForIconStyle:]
	+[GKGame(GKSpringboardSupport) preloadIconsForGames:style:handler:]
	+[GKGame(GKSpringboardSupport) platformDisplayString:]
	+[GKGame(GKSpringboardSupport) launchAppStoreWithGameCenterGames]
	+[GKGame(GKSpringboardSupport) gameCenterGamePurchasedWithBundleIdentifier:]

	// instance methods
	-[GKGame(GKSpringboardSupport) productViewControllerDidFinish:]
	-[GKGame(GKSpringboardSupport) _imageURLForIconStyle:]
	-[GKGame(GKSpringboardSupport) imageSourceForiOSIconStyle:]
	-[GKGame(GKSpringboardSupport) macBrushForIconStyle:]
	-[GKGame(GKSpringboardSupport) imageSourceForIconStyle:]
	-[GKGame(GKSpringboardSupport) iconForStyle:]
	-[GKGame(GKSpringboardSupport) cachedIconForStyle:]
	-[GKGame(GKSpringboardSupport) URLStringForImageWithShineIfNeeded]
	-[GKGame(GKSpringboardSupport) _imageSourceForIconSize:]
	-[GKGame(GKSpringboardSupport) loadIconForSize:scale:withCompletionHandler:]
	-[GKGame(GKSpringboardSupport) loadIconForStyle:withCompletionHandler:]
	-[GKGame(GKSpringboardSupport) logoImageWithMaximumSize:]
	-[GKGame(GKSpringboardSupport) presentStoreSheetFromViewController:context:completionHandler:]
	-[GKGame(GKSpringboardSupport) launchAppOrPresentStoreSheetFromViewController:]

(GKRecipientListStrings)
	// instance methods
	-[(GKRecipientListStrings) _gkCommaSeparatedRecipientListWithWidth:forTextStyle:]
	-[(GKRecipientListStrings) _gkCommaSeparatedRecipientListWithWidth:forTextStyle:usingSelector:]

UIImage(SquareImage)
	// class methods
	+[UIImage(SquareImage) _gkHostImageWithBundleIdentifier:imageName:]
	+[UIImage(SquareImage) _gkMessageGroupImageWithIdentifier:handler:]

	// instance methods
	-[UIImage(SquareImage) _gkCropImageIntoSquare:]
	-[UIImage(SquareImage) _gkQuestionMarkImage]
	-[UIImage(SquareImage) _gkMaskImageWithProgress:isDetail:]
	-[UIImage(SquareImage) _gkImageWithProgress:achievement:isDetail:]

GKLeaderboard(UI)
	// class methods
	+[GKLeaderboard(UI) localizedStringForTimeScope:]
	+[GKLeaderboard(UI) localizedStringForLeaderboardOccurrence:]

	// instance methods
	-[GKLeaderboard(UI) imageURL]
	-[GKLeaderboard(UI) loadImageWithCompletionHandler:]
	-[GKLeaderboard(UI) miniImageURL]

SKStoreProductViewController(GKGame)
	// instance methods
	-[SKStoreProductViewController(GKGame) _gkGame]
	-[SKStoreProductViewController(GKGame) set_gkGame:]
	-[SKStoreProductViewController(GKGame) _gkCompletionHandler]
	-[SKStoreProductViewController(GKGame) set_gkCompletionHandler:]

UIViewController(GKChallengeAdditions)
	// instance methods
	-[UIViewController(GKChallengeAdditions) _gkPushPresentedViewControllerForCompactSizeClass:]
	-[UIViewController(GKChallengeAdditions) _gkViewControllersForRestoringPopover]
	-[UIViewController(GKChallengeAdditions) _gkRestorePopoverWithViewControllers:completion:]
	-[UIViewController(GKChallengeAdditions) _gkPresentChallengeVC:]
	-[UIViewController(GKChallengeAdditions) _gkPresentSendDialogForChallenge:selectPlayers:defaultMessage:]
	-[UIViewController(GKChallengeAdditions) _gkPresentSendDialogForChallenge:selectPlayers:defaultMessage:complete:]
	-[UIViewController(GKChallengeAdditions) _gkShouldUsePadUI]
	-[UIViewController(GKChallengeAdditions) _gkDesiredUserInterfaceIdiom]
	-[UIViewController(GKChallengeAdditions) _gkRepresentedObject]
	-[UIViewController(GKChallengeAdditions) _gkSourcePresentingViewController]
	-[UIViewController(GKChallengeAdditions) _gkSetSourcePresentingViewController:]
	-[UIViewController(GKChallengeAdditions) _gkWillTransitionModalPresentationForTraitCollection:]
	-[UIViewController(GKChallengeAdditions) _gkDidTransitionModalPresentationForTraitCollection:]
	-[UIViewController(GKChallengeAdditions) _gkShouldPushViewControllerInsteadOfUsingPopoverOnCompactWidthPad]
	-[UIViewController(GKChallengeAdditions) _gkServiceWantsCustomRightBarButtonItemInViewService]
	-[UIViewController(GKChallengeAdditions) _gkSaveStatusBarStyleAnimated:setToStyle:]
	-[UIViewController(GKChallengeAdditions) _gkSaveStatusBarStyle:]
	-[UIViewController(GKChallengeAdditions) _gkRestoreStatusBarStyle:]
	-[UIViewController(GKChallengeAdditions) _gkExtensionViewController]
	-[UIViewController(GKChallengeAdditions) _gkModifyTopConstraintToLayoutGuideForSubview:]
	-[UIViewController(GKChallengeAdditions) _gkAddMenuButtonTapGestureRecognizerWithTarget:action:]
	-[UIViewController(GKChallengeAdditions) _gkShowViewController:]
	-[UIViewController(GKChallengeAdditions) _gkRemoveViewController:animated:]
	-[UIViewController(GKChallengeAdditions) _gkSetOriginatingViewController:]
	-[UIViewController(GKChallengeAdditions) _gkOriginatingViewController]
	-[UIViewController(GKChallengeAdditions) _gkOriginatingViewControllerAutoDetermined]
	-[UIViewController(GKChallengeAdditions) _gkPresentViewController:animated:]
	-[UIViewController(GKChallengeAdditions) _gkPresentViewController:asPopoverFromView:animated:]
	-[UIViewController(GKChallengeAdditions) _gkDismissViewController:animated:]
	-[UIViewController(GKChallengeAdditions) _gkPushViewController:animated:]
	-[UIViewController(GKChallengeAdditions) _gkPushViewController:replaceCurrent:animated:]
	-[UIViewController(GKChallengeAdditions) _gkPopViewControllerAnimated:]
	-[UIViewController(GKChallengeAdditions) _gkExtensionWantsCustomRightBarButtonItemInViewService]

GKAchievementDescription(UI)
	// class methods
	+[GKAchievementDescription(UI) incompleteAchievementImage]
	+[GKAchievementDescription(UI) placeholderCompletedAchievementImage]

	// instance methods
	-[GKAchievementDescription(UI) imageURL]
	-[GKAchievementDescription(UI) loadImageWithCompletionHandler:]
	-[GKAchievementDescription(UI) showBanner]

GKAchievement(UIPrivate)
	// class methods
	+[GKAchievement(UIPrivate) reportAchievements:withEligibleChallenges:withCompletionHandler:]

	// instance methods
	-[GKAchievement(UIPrivate) imageURL]
	-[GKAchievement(UIPrivate) loadImageWithCompletionHandler:]
	-[GKAchievement(UIPrivate) showBanner]
	-[GKAchievement(UIPrivate) challengeComposeControllerWithMessage:players:completionHandler:]
	-[GKAchievement(UIPrivate) challengeComposeControllerWithPlayers:message:completionHandler:]
	-[GKAchievement(UIPrivate) issueChallengeToPlayers:message:]
	-[GKAchievement(UIPrivate) selectChallengeablePlayerIDs:withCompletionHandler:]
	-[GKAchievement(UIPrivate) selectChallengeablePlayers:withCompletionHandler:]

GKChallengeEventHandler(UI)
	// class methods
	+[GKChallengeEventHandler(UI) uiDelegateClass]

NSIndexPath(GKGridLayoutPrivate)
	// instance methods
	-[NSIndexPath(GKGridLayoutPrivate) _gkIsGlobal]

UINavigationController(GKCrossFade)
	// instance methods
	-[UINavigationController(GKCrossFade) pressesEnded:withEvent:]
	-[UINavigationController(GKCrossFade) logOnceGameControllerUsedInGameLayer]
	-[UINavigationController(GKCrossFade) _gkReplaceTopViewControllerWithViewController:transition:]
	-[UINavigationController(GKCrossFade) _gkSetViewControllers:transition:]
	-[UINavigationController(GKCrossFade) returnToPreviousScreen]

UIColor(Dynamic)
	// class methods
	+[UIColor(Dynamic) defaultButtonBackgroundColor]
	+[UIColor(Dynamic) placeholderBackground]
	+[UIColor(Dynamic) gk_dynamicColorWithLightColor:darkColor:]
	+[UIColor(Dynamic) gk_dynamicColorWithLightColor:darkColor:lightHighContrastColor:]
	+[UIColor(Dynamic) gk_dynamicColorWithLightColor:darkColor:darkHighContrastColor:]
	+[UIColor(Dynamic) gk_dynamicColorWithLightColor:darkColor:lightHighContrastColor:darkHighContrastColor:]
	+[UIColor(Dynamic) _gkSelectedCellBackgroundColor]
	+[UIColor(Dynamic) _gkSpeechViewTintColor]
	+[UIColor(Dynamic) _gkvisualEffectTintColor]
	+[UIColor(Dynamic) defaultBackground]
	+[UIColor(Dynamic) componentBackground]
	+[UIColor(Dynamic) componentBackgroundStandout]
	+[UIColor(Dynamic) placeholderBackgroundStandout]
	+[UIColor(Dynamic) lobbyCardBackground]
	+[UIColor(Dynamic) lobbyCellBackground]
	+[UIColor(Dynamic) defaultLine]
	+[UIColor(Dynamic) defaultButtonTitleColor]
	+[UIColor(Dynamic) mediaBorder]
	+[UIColor(Dynamic) tableViewBackground]
	+[UIColor(Dynamic) tableViewCellBackground]
	+[UIColor(Dynamic) tableViewCellSelectedBackground]
	+[UIColor(Dynamic) tableViewCellChevron]
	+[UIColor(Dynamic) lightNavigationBarBlurTint]
	+[UIColor(Dynamic) darkNavigationBarBlurTint]
	+[UIColor(Dynamic) todayCardDefaultBackground]

GKTurnBasedMatch(TurnBased)
	// instance methods
	-[GKTurnBasedMatch(TurnBased) isAllAutomatchedPlayer]
	-[GKTurnBasedMatch(TurnBased) matchTitle]
	-[GKTurnBasedMatch(TurnBased) showcasePlayer]

NSLayoutConstraint(GKAdditions)
	// class methods
	+[NSLayoutConstraint(GKAdditions) _gkConstraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:leading:fontTextStyle:]
	+[NSLayoutConstraint(GKAdditions) _gkConstraintForView:equalsAttribute:ofView:]
	+[NSLayoutConstraint(GKAdditions) _gkConstraintForView:centeredYInView:]
	+[NSLayoutConstraint(GKAdditions) _gkConstraintForView:centeredXInView:]
	+[NSLayoutConstraint(GKAdditions) _gkConstraintsForView:centeredXInView:enforceMargin:]
	+[NSLayoutConstraint(GKAdditions) _gkConstraintForView:withConstantWidth:]
	+[NSLayoutConstraint(GKAdditions) _gkConstraintForView:withConstantHeight:]
	+[NSLayoutConstraint(GKAdditions) _gkConstraintForView:baselineAlignedUnderView:offsetBy:]
	+[NSLayoutConstraint(GKAdditions) _gkConstraintForView:withWidthDerivedFromView:insetBy:]
	+[NSLayoutConstraint(GKAdditions) _gkConstraintForView:withHeightDerivedFromView:insetBy:]
	+[NSLayoutConstraint(GKAdditions) _gkConstraintsForView:withinView:insets:]
	+[NSLayoutConstraint(GKAdditions) _gkInstallEdgeConstraintsForView:containedWithinParentView:]
	+[NSLayoutConstraint(GKAdditions) _gkInstallEdgeConstraintsForView:containedWithinParentView:margin:]
	+[NSLayoutConstraint(GKAdditions) _gkInstallEdgeConstraintsForView:containedWithinParentView:edgeInsets:]
	+[NSLayoutConstraint(GKAdditions) _gkInstallEdgeConstraintsForLayoutGuide:containedWithinParentView:]
	+[NSLayoutConstraint(GKAdditions) _gkConstraintsForViews:alignedByAttribute:]
	+[NSLayoutConstraint(GKAdditions) _gkConstraintsForViews:contiguouslyLaidOutVertically:overlap:withinView:insets:]
	+[NSLayoutConstraint(GKAdditions) _gkConstraintsForViews:contiguouslyLaidOutVertically:overlap:withinView:insets:applyOrthogonalConstraints:]
	+[NSLayoutConstraint(GKAdditions) _gkBaselineConstraintsForViewsFontsLeadings:superview:options:]

GKPlayer(UIPrivate)
	// class methods
	+[GKPlayer(UIPrivate) sizeForPhotoSize:]
	+[GKPlayer(UIPrivate) monogramQueue]
	+[GKPlayer(UIPrivate) preloadImagesForPlayers:size:]

	// instance methods
	-[GKPlayer(UIPrivate) contact]
	-[GKPlayer(UIPrivate) initWithContact:]
	-[GKPlayer(UIPrivate) setContact:]
	-[GKPlayer(UIPrivate) mutableContact]
	-[GKPlayer(UIPrivate) avatarImageRenderer]
	-[GKPlayer(UIPrivate) showAlertWithTitle:andMessage:]
	-[GKPlayer(UIPrivate) photoURLForSize:]
	-[GKPlayer(UIPrivate) monogramPersonNameComponents]
	-[GKPlayer(UIPrivate) displayNameForMonogram]
	-[GKPlayer(UIPrivate) stringForMonogram]
	-[GKPlayer(UIPrivate) placeholderImageWithPhotoSize:]
	-[GKPlayer(UIPrivate) renderingScopeForPhotoSize:colorIndex:]
	-[GKPlayer(UIPrivate) renderingScopeForPhotoSize:]
	-[GKPlayer(UIPrivate) renderMonogramImageWithPhotoSize:monogramString:handler:]
	-[GKPlayer(UIPrivate) shouldRandomizeDefaultMonogramColor]
	-[GKPlayer(UIPrivate) monogramImageWithPhotoSize:handler:]
	-[GKPlayer(UIPrivate) playerAvatarDataWithSize:completionHandler:]
	-[GKPlayer(UIPrivate) playerAvatarImageWithSize:completionHandler:]
	-[GKPlayer(UIPrivate) _playerAvatarWithSize:completionHandler:]
	-[GKPlayer(UIPrivate) clearInMemoryCachedAvatars]
	-[GKPlayer(UIPrivate) loadPlayerContactForAvatarControllerWithImageSize:handler:]
	-[GKPlayer(UIPrivate) loadPhotoForSize:withCompletionHandler:]
	-[GKPlayer(UIPrivate) _loadPhotoForSize:withCompletionHandler:]

GKChallenge(UI)
	// class methods
	+[GKChallenge(UI) challengesNotSupportedAlertController]
	+[GKChallenge(UI) tooManyPlayersAlertController]

	// instance methods
	-[GKChallenge(UI) iconSource]
	-[GKChallenge(UI) listTitleText]
	-[GKChallenge(UI) iconURLString]
	-[GKChallenge(UI) loadImageWithCompletionHandler:]
	-[GKChallenge(UI) loadImageWithSource:URLString:withHandler:]
	-[GKChallenge(UI) loadBannerImageWithHandler:]
	-[GKChallenge(UI) alertGoalText]
	-[GKChallenge(UI) listGoalText]
	-[GKChallenge(UI) composeGoalText]
	-[GKChallenge(UI) detailGoalText]
	-[GKChallenge(UI) detailFromText]
	-[GKChallenge(UI) smallIconURLString]

GKScoreChallenge(UI)
	// instance methods
	-[GKScoreChallenge(UI) iconSource]
	-[GKScoreChallenge(UI) listTitleText]
	-[GKScoreChallenge(UI) iconURLString]
	-[GKScoreChallenge(UI) alertGoalText]
	-[GKScoreChallenge(UI) listGoalText]
	-[GKScoreChallenge(UI) composeGoalText]
	-[GKScoreChallenge(UI) detailGoalText]
	-[GKScoreChallenge(UI) smallIconURLString]

GKAchievementChallenge(UI)
	// instance methods
	-[GKAchievementChallenge(UI) iconSource]
	-[GKAchievementChallenge(UI) listTitleText]
	-[GKAchievementChallenge(UI) iconURLString]
	-[GKAchievementChallenge(UI) alertGoalText]
	-[GKAchievementChallenge(UI) listGoalText]
	-[GKAchievementChallenge(UI) composeGoalText]
	-[GKAchievementChallenge(UI) detailGoalText]
	-[GKAchievementChallenge(UI) smallIconURLString]

GKLeaderboardEntry(GKChallenge)
	// instance methods
	-[GKLeaderboardEntry(GKChallenge) challengeComposeControllerWithMessage:players:completionHandler:]

GKScore(GKChallenge)
	// class methods
	+[GKScore(GKChallenge) reportScores:withEligibleChallenges:withCompletionHandler:]
	+[GKScore(GKChallenge) reportLeaderboardScores:withEligibleChallenges:withCompletionHandler:]

	// instance methods
	-[GKScore(GKChallenge) challengeComposeControllerWithMessage:players:completionHandler:]
	-[GKScore(GKChallenge) challengeComposeControllerWithPlayers:message:completionHandler:]
	-[GKScore(GKChallenge) issueChallengeToPlayers:message:]
	-[GKScore(GKChallenge) sharingScoreMessageFromLeaderboard:]
	-[GKScore(GKChallenge) sharingScoreURL]

UILabel(GKDashboardUtils)
	// instance methods
	-[UILabel(GKDashboardUtils) _gkUpdateShadowForFocusChange:]
	-[UILabel(GKDashboardUtils) firstBaselineFromTop]
	-[UILabel(GKDashboardUtils) lastBaselineFromBottom]

NSExtension(GKDashboardUtils)
	// class methods
	+[NSExtension(GKDashboardUtils) _gkExtensionWithIdentifier:error:]

UIVisualEffect(GKDashboardUtils)
	// class methods
	+[UIVisualEffect(GKDashboardUtils) _gkGameLayerBackgroundVisualEffect]
	+[UIVisualEffect(GKDashboardUtils) _gkGameLayerModuleVisualEffect]
	+[UIVisualEffect(GKDashboardUtils) _gkGameLayerButtonVisualEffect]
	+[UIVisualEffect(GKDashboardUtils) _gkGameLayerDisabledButtonVisualEffect]
	+[UIVisualEffect(GKDashboardUtils) _gkGameLayerPanelVisualEffect]
	+[UIVisualEffect(GKDashboardUtils) _gkGameLayerPopOverVisualEffect]
	+[UIVisualEffect(GKDashboardUtils) _gkGameLayerContentVibrancyEffect]
	+[UIVisualEffect(GKDashboardUtils) colorEffectBlendNormal:]

UIButton(GKDashboardUtils)
	// class methods
	+[UIButton(GKDashboardUtils) _gkXmarkedCloseButtonWithTarget:action:]

	// instance methods
	-[UIButton(GKDashboardUtils) lastBaselineFromBottom]

UIFont(GKDashboardUtils)
	// class methods
	+[UIFont(GKDashboardUtils) _gkPreferredFontForTextStyle:symbolicTraits:]
	+[UIFont(GKDashboardUtils) _gkPreferredFontForTextStyle:design:]

GKPreferences(ScreenTime)
	// instance methods
	-[GKPreferences(ScreenTime) screenTimePINControllerDidFinish:]
	-[GKPreferences(ScreenTime) screenTimePinCallback]
	-[GKPreferences(ScreenTime) setScreenTimePinCallback:]
	-[GKPreferences(ScreenTime) isScreenTimeRestrictionsPasscodeSet]
	-[GKPreferences(ScreenTime) shouldShowScreenTimePINController]
	-[GKPreferences(ScreenTime) activeScreenTimeRemotePinUIWithHandler:]

MFMessageComposeViewController(GameCenter)
	// instance methods
	-[MFMessageComposeViewController(GameCenter) setGameCenterPickedHandles:playerNames:]
	-[MFMessageComposeViewController(GameCenter) setGameCenterModeWithPickerBlock:]

GKLeaderboardSet(UI)
	// instance methods
	-[GKLeaderboardSet(UI) imageURL]
	-[GKLeaderboardSet(UI) loadImageWithCompletionHandler:]
	-[GKLeaderboardSet(UI) miniImageURL]

_TtC12GameCenterUI28BaseCollectionViewController(GameCenterUI)
	// instance methods
	-[_TtC12GameCenterUI28BaseCollectionViewController(GameCenterUI) presentingViewControllerForLockupView:]

_TtC12GameCenterUI42AuthenticationWithOnboardingViewController(GameCenterUI)
	// instance methods
	-[_TtC12GameCenterUI42AuthenticationWithOnboardingViewController(GameCenterUI) onboardingFlowFinishedWithAction:]

_TtC12GameCenterUI26JetDashboardViewController(GameCenterUI)
	// instance methods
	-[_TtC12GameCenterUI26JetDashboardViewController(GameCenterUI) loadMoreWithContinuationToken:]

_TtC12GameCenterUI31SettingsContainerViewController(GameCenterUI)
	// instance methods
	-[_TtC12GameCenterUI31SettingsContainerViewController(GameCenterUI) specifier]
	-[_TtC12GameCenterUI31SettingsContainerViewController(GameCenterUI) rootController]
	-[_TtC12GameCenterUI31SettingsContainerViewController(GameCenterUI) parentController]
	-[_TtC12GameCenterUI31SettingsContainerViewController(GameCenterUI) signInControllerDidCancel:]
	-[_TtC12GameCenterUI31SettingsContainerViewController(GameCenterUI) setParentController:]
	-[_TtC12GameCenterUI31SettingsContainerViewController(GameCenterUI) setRootController:]
	-[_TtC12GameCenterUI31SettingsContainerViewController(GameCenterUI) signInController:didCompleteWithSuccess:error:]
	-[_TtC12GameCenterUI31SettingsContainerViewController(GameCenterUI) setSpecifier:]
	-[_TtC12GameCenterUI31SettingsContainerViewController(GameCenterUI) handleURL:withCompletion:]
	-[_TtC12GameCenterUI31SettingsContainerViewController(GameCenterUI) photoPickerDidCancel:]
	-[_TtC12GameCenterUI31SettingsContainerViewController(GameCenterUI) photoPicker:didUpdatePhotoForContact:withContactImage:]
	-[_TtC12GameCenterUI31SettingsContainerViewController(GameCenterUI) canBeShownFromSuspendedState]
	-[_TtC12GameCenterUI31SettingsContainerViewController(GameCenterUI) showController:]
	-[_TtC12GameCenterUI31SettingsContainerViewController(GameCenterUI) showController:animate:]
	-[_TtC12GameCenterUI31SettingsContainerViewController(GameCenterUI) setPreferenceValue:specifier:]
	-[_TtC12GameCenterUI31SettingsContainerViewController(GameCenterUI) readPreferenceValue:]
	-[_TtC12GameCenterUI31SettingsContainerViewController(GameCenterUI) onboardingFlowFinishedWithAction:]
	-[_TtC12GameCenterUI31SettingsContainerViewController(GameCenterUI) openAvatarEditor]
	-[_TtC12GameCenterUI31SettingsContainerViewController(GameCenterUI) openPlayerProfileView]

_TtC12GameCenterUI27PlayerProfileViewController(GameCenterUI1)
	// instance methods
	-[_TtC12GameCenterUI27PlayerProfileViewController(GameCenterUI1) loadMoreWithContinuationToken:]
	-[_TtC12GameCenterUI27PlayerProfileViewController(GameCenterUI1) scrollToTopActionTriggered]

_TtC12GameCenterUI35DashboardActivityFeedViewController(GameCenterUI)
	// instance methods
	-[_TtC12GameCenterUI35DashboardActivityFeedViewController(GameCenterUI) loadMoreWithContinuationToken:]

_TtC12GameCenterUI25FriendsFeedViewController(GameCenterUI)
	// instance methods
	-[_TtC12GameCenterUI25FriendsFeedViewController(GameCenterUI) loadMoreWithContinuationToken:]

_TtC12GameCenterUI31NicknameFieldCollectionViewCell(GameCenterUI)
	// instance methods
	-[_TtC12GameCenterUI31NicknameFieldCollectionViewCell(GameCenterUI) textFieldShouldReturn:]
	-[_TtC12GameCenterUI31NicknameFieldCollectionViewCell(GameCenterUI) textFieldDidBeginEditing:]
	-[_TtC12GameCenterUI31NicknameFieldCollectionViewCell(GameCenterUI) textFieldDidEndEditing:reason:]
	-[_TtC12GameCenterUI31NicknameFieldCollectionViewCell(GameCenterUI) textField:shouldChangeCharactersInRange:replacementString:]
	-[_TtC12GameCenterUI31NicknameFieldCollectionViewCell(GameCenterUI) textFieldDidChangeSelection:]

01 00 2000 /System/Library/PrivateFrameworks/AppleAccount.framework/AppleAccount: AADeviceInfo 
01 00 2000 /System/Library/PrivateFrameworks/AppleAccount.framework/AppleAccount: AASetupAssistantService 
01 00 2900 /System/Library/PrivateFrameworks/AppleAccountUI.framework/AppleAccountUI: AAUISignInController 
01 00 2000 /System/Library/PrivateFrameworks/AppleAccount.framework/AppleAccount: AAURLConfiguration 
01 00 0d00 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAppleIDAuthenticationController 
01 00 1800 /System/Library/PrivateFrameworks/AuthKitUI.framework/AuthKitUI: AKAppleIDAuthenticationInAppContext 
01 00 0d00 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAppleIDSession 
01 00 1800 /System/Library/PrivateFrameworks/AuthKitUI.framework/AuthKitUI: AKInlineSignInViewController 
01 00 2b00 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSDefaults 
01 00 2b00 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSProcessInfo 
01 00 2b00 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSUserAgent 
01 00 0f00 /System/Library/PrivateFrameworks/AppStoreComponents.framework/AppStoreComponents: ASCAdamID 
01 00 0f00 /System/Library/PrivateFrameworks/AppStoreComponents.framework/AppStoreComponents: ASCArtwork 
01 00 0f00 /System/Library/PrivateFrameworks/AppStoreComponents.framework/AppStoreComponents: ASCCollectionRequest 
01 00 0f00 /System/Library/PrivateFrameworks/AppStoreComponents.framework/AppStoreComponents: ASCLockup 
01 00 0f00 /System/Library/PrivateFrameworks/AppStoreComponents.framework/AppStoreComponents: ASCLockupProductDetails 
01 00 0f00 /System/Library/PrivateFrameworks/AppStoreComponents.framework/AppStoreComponents: ASCLockupRequest 
01 00 0f00 /System/Library/PrivateFrameworks/AppStoreComponents.framework/AppStoreComponents: ASCLockupView 
01 00 0f00 /System/Library/PrivateFrameworks/AppStoreComponents.framework/AppStoreComponents: ASCLockupViewGroup 
01 00 0f00 /System/Library/PrivateFrameworks/AppStoreComponents.framework/AppStoreComponents: ASCOfferTheme 
01 00 2100 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CABasicAnimation 
01 00 2100 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAGradientLayer 
01 00 2100 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CALayer 
01 00 2100 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMediaTimingFunction 
01 00 2100 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAShapeLayer 
01 00 2100 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CASpringAnimation 
01 00 2100 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransaction 
01 00 2100 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransition 
01 00 1a00 /System/Library/Frameworks/ContactsUI.framework/ContactsUI: CNAvatarImageRenderer 
01 00 1a00 /System/Library/Frameworks/ContactsUI.framework/ContactsUI: CNAvatarImageRendererSettings 
01 00 1a00 /System/Library/Frameworks/ContactsUI.framework/ContactsUI: CNAvatarImageRenderingScope 
01 00 1900 /System/Library/PrivateFrameworks/ContactsAutocompleteUI.framework/ContactsAutocompleteUI: CNComposeRecipient 
01 00 1900 /System/Library/PrivateFrameworks/ContactsAutocompleteUI.framework/ContactsAutocompleteUI: CNComposeRecipientTextView 
01 00 1d00 /System/Library/Frameworks/Contacts.framework/Contacts: CNContact 
01 00 1d00 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactFetchRequest 
01 00 1d00 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactFormatter 
01 00 1a00 /System/Library/Frameworks/ContactsUI.framework/ContactsUI: CNContactPickerViewController 
01 00 1d00 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactStore 
01 00 1d00 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactsUserDefaults 
01 00 1d00 /System/Library/Frameworks/Contacts.framework/Contacts: CNLabeledValue 
01 00 1d00 /System/Library/Frameworks/Contacts.framework/Contacts: CNMutableContact 
01 00 1d00 /System/Library/Frameworks/Contacts.framework/Contacts: CNPhoneNumber 
01 00 1a00 /System/Library/Frameworks/ContactsUI.framework/ContactsUI: CNPhotoPickerViewController 
01 00 2d00 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: FBSOpenApplicationOptions 
01 00 2d00 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: FBSOpenApplicationService 
01 00 1300 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKAchievement 
01 00 1300 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKAchievementChallenge 
01 00 1300 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKAchievementDescription 
01 00 1300 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKActivity 
01 00 1300 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKApplicationWorkspace 
01 00 1300 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKAutomatchPlayerInternal 
01 00 0800 /System/Library/PrivateFrameworks/GameCenterUICore.framework/GameCenterUICore: GKAvatarImage 
01 00 1300 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKChallenge 
01 00 1300 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKChallengeEventHandler 
01 00 1300 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKChallengeInternal 
01 00 0800 /System/Library/PrivateFrameworks/GameCenterUICore.framework/GameCenterUICore: GKCircleImageBrush 
01 00 0800 /System/Library/PrivateFrameworks/GameCenterUICore.framework/GameCenterUICore: GKColorPalette 
01 00 1300 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKDaemonProxy 
01 00 1300 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKDevice 
01 00 1300 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKDispatchGroup 
01 00 1300 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKFriendPlayerInternal 
01 00 1300 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKFriendRequestURLModel 
01 00 1300 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKGame 
01 00 1300 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKGameDescriptor 
01 00 1300 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKGameHighlightInternal 
01 00 1300 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKGameInternal 
01 00 0800 /System/Library/PrivateFrameworks/GameCenterUICore.framework/GameCenterUICore: GKGameMessagesBrush 
01 00 1300 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKGameRecord 
01 00 1300 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKGameRecordInternal 
01 00 1300 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKGameSettingsInternal 
01 00 1300 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKGameSummaryInternal 
01 00 0800 /System/Library/PrivateFrameworks/GameCenterUICore.framework/GameCenterUICore: GKImageContext 
01 00 1300 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKInviteInternal 
01 00 1300 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKLeaderboard 
01 00 1300 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKLeaderboardEntry 
01 00 1300 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKLeaderboardScore 
01 00 1300 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKLeaderboardSet 
01 00 0800 /System/Library/PrivateFrameworks/GameCenterUICore.framework/GameCenterUICore: GKLocalImageSource 
01 00 1300 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKLocalPlayer 
01 00 0800 /System/Library/PrivateFrameworks/GameCenterUICore.framework/GameCenterUICore: GKLocalPlayerAuthenticator 
01 00 1300 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKLocalPlayerInternal 
01 00 0800 /System/Library/PrivateFrameworks/GameCenterUICore.framework/GameCenterUICore: GKLoginAlertView 
01 00 0800 /System/Library/PrivateFrameworks/GameCenterUICore.framework/GameCenterUICore: GKMacGameIconBrush 
01 00 1300 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKMatch 
01 00 1300 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKMatchRequest 
01 00 1300 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKMatchRequestInternal 
01 00 1300 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKMatchmaker 
01 00 0800 /System/Library/PrivateFrameworks/GameCenterUICore.framework/GameCenterUICore: GKNetworkImageSource 
01 00 1300 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKOperationQueue 
01 00 1300 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKPlayer 
01 00 1300 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKPlayerActivityItemInternal 
01 00 1300 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKPlayerActivityRelationshipAchievement 
01 00 1300 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKPlayerActivityRelationshipGame 
01 00 1300 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKPlayerActivityRelationshipLeaderboard 
01 00 1300 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKPlayerActivityRelationshipLeaderboardScore 
01 00 1300 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKPlayerActivityRelationshipPlayer 
01 00 1300 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKPlayerActivitySectionInternal 
01 00 1300 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKPlayerActivitySpecialItemInternal 
01 00 1300 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKPlayerCredentialController 
01 00 1300 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKPlayerInternal 
01 00 1300 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKPreferences 
01 00 1300 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKReachability 
01 00 1300 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKReporter 
01 00 1300 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKScore 
01 00 1300 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKScoreChallenge 
01 00 0800 /System/Library/PrivateFrameworks/GameCenterUICore.framework/GameCenterUICore: GKScreenConfigurationController 
01 00 1300 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKServiceInterface 
01 00 0800 /System/Library/PrivateFrameworks/GameCenterUICore.framework/GameCenterUICore: GKTextStyle 
01 00 0800 /System/Library/PrivateFrameworks/GameCenterUICore.framework/GameCenterUICore: GKTextStyleFocus 
01 00 0800 /System/Library/PrivateFrameworks/GameCenterUICore.framework/GameCenterUICore: GKTextStylePad 
01 00 0800 /System/Library/PrivateFrameworks/GameCenterUICore.framework/GameCenterUICore: GKTextStylePhone 
01 00 0800 /System/Library/PrivateFrameworks/GameCenterUICore.framework/GameCenterUICore: GKThemeBrush 
01 00 1300 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKThreadsafeCache 
01 00 1300 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKTournament 
01 00 1300 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKTurnBasedMatch 
01 00 1300 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKTurnBasedMatchInternal 
01 00 0800 /System/Library/PrivateFrameworks/GameCenterUICore.framework/GameCenterUICore: GKUITheme 
01 00 1300 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKUnauthenticatedPlayerInternal 
01 00 1300 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: GKUpdateGroup 
01 00 0800 /System/Library/PrivateFrameworks/GameCenterUICore.framework/GameCenterUICore: GKiOSAppIconBrush 
01 00 0800 /System/Library/PrivateFrameworks/GameCenterUICore.framework/GameCenterUICore: GKiOSAppIconBrushShare 
01 00 1500 /System/Library/Frameworks/LinkPresentation.framework/LinkPresentation: LPGameCenterInvitationMetadata 
01 00 1500 /System/Library/Frameworks/LinkPresentation.framework/LinkPresentation: LPImage 
01 00 1500 /System/Library/Frameworks/LinkPresentation.framework/LinkPresentation: LPLinkMetadata 
01 00 1500 /System/Library/Frameworks/LinkPresentation.framework/LinkPresentation: LPMessagesPayload 
01 00 0c00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationWorkspace 
01 00 1400 /System/Library/Frameworks/MessageUI.framework/MessageUI: MFMessageComposeViewController 
01 00 0a00 /System/Library/Frameworks/Messages.framework/Messages: MSMessage 
01 00 0a00 /System/Library/Frameworks/Messages.framework/Messages: MSMessageLiveLayout 
01 00 0a00 /System/Library/Frameworks/Messages.framework/Messages: MSMessageTemplateLayout 
01 00 0a00 /System/Library/Frameworks/Messages.framework/Messages: MSSession 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundleResourceRequest 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCache 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutAnchor 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutBoundarySupplementaryItem 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutDecorationItem 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutDimension 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutGroup 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutItem 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutSection 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutSize 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutSpacing 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutSupplementaryItem 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSCompoundPredicate 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSDistributedNotificationCenter 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSExtension 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSExtensionContext 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexPath 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexSet 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSLayoutConstraint 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: NSLayoutManager 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSLock 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMethodSignature 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableAttributedString 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: NSMutableParagraphStyle 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableURLRequest 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 2200 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperation 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOrderedSet 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: NSParagraphStyle 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSPersonNameComponents 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSPersonNameComponentsFormatter 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSPointerArray 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: NSTextAttachment 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSTextCheckingResult 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: NSTextContainer 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: NSTextStorage 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLQueryItem 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSession 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSessionConfiguration 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0b00 /System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit: OBBoldTrayButton 
01 00 0b00 /System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit: OBHeaderView 
01 00 0b00 /System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit: OBLinkTrayButton 
01 00 0b00 /System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit: OBPrivacyLinkController 
01 00 0b00 /System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit: OBPrivacyPresenter 
01 00 0b00 /System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit: OBTrayButton 
01 00 2300 /usr/lib/libSystem.B.dylib: OS_dispatch_queue 
01 00 0100 /System/Library/PrivateFrameworks/PersonaUI.framework/PersonaUI: PRMonogramColor 
01 00 0400 /System/Library/PrivateFrameworks/Preferences.framework/Preferences: PSListController 
01 00 0400 /System/Library/PrivateFrameworks/Preferences.framework/Preferences: PSSpecifier 
01 00 0400 /System/Library/PrivateFrameworks/Preferences.framework/Preferences: PSSwitchTableCell 
01 00 1700 /System/Library/PrivateFrameworks/RemoteUI.framework/RemoteUI: RemoteUIController 
01 00 2700 /System/Library/Frameworks/SafariServices.framework/SafariServices: SFSafariViewController 
01 00 1b00 /System/Library/Frameworks/StoreKit.framework/StoreKit: SKStoreProductViewController 
01 00 0300 /System/Library/PrivateFrameworks/ScreenTimeUI.framework/ScreenTimeUI: STRemotePasscodeController 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAction 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivityIndicatorView 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivityViewController 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertAction 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertController 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBarButtonItem 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBezierPath 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBlurEffect 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIButton 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionReusableView 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionView 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewCell 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewCompositionalLayout 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewCompositionalLayoutConfiguration 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewController 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewFlowLayout 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewLayout 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewLayoutAttributes 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewLayoutInvalidationContext 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIColorEffect 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIContentUnavailableConfiguration 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIContentUnavailableView 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIContextMenuConfiguration 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIContextualAction 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIControl 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UICubicTimingParameters 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDevice 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFocusGuide 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFocusHaloEffect 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFocusSystem 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFontDescriptor 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFontMetrics 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIGraphicsImageRenderer 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIGraphicsImageRendererFormat 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageSymbolConfiguration 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIKeyboard 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UILabel 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UILocalizedIndexedCollation 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UILongPressGestureRecognizer 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIMenu 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIMenuElement 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationBar 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationBarAppearance 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationController 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UINib 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPanGestureRecognizer 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPopoverPresentationController 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPress 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPreviewParameters 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPreviewTarget 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIScene 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIScrollView 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UISearchBar 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UISearchController 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UISegmentedControl 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UISplitViewController 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIStackView 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UISwipeActionsConfiguration 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UISwitch 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UITableView 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewCell 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewController 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UITapGestureRecognizer 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UITargetedPreview 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UITextField 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UITextSuggestion 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UITextView 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UITouch 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UITraitCollection 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIVibrancyEffect 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewPropertyAnimator 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIVisualEffect 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIVisualEffectView 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIWindow 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIWindowScene 
01 00 0f00 /System/Library/PrivateFrameworks/AppStoreComponents.framework/AppStoreComponents: _ASCLockupResponse 
01 00 1300 /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation: _GKStateMachine 
01 00 0c00 /System/Library/Frameworks/CoreServices.framework/CoreServices: _LSOpenConfiguration 
01 00 2f00 /System/Library/PrivateFrameworks/PeopleSuggester.framework/PeopleSuggester: _PSContactSuggester 
01 00 2f00 /System/Library/PrivateFrameworks/PeopleSuggester.framework/PeopleSuggester: _PSRecipient 
01 00 2f00 /System/Library/PrivateFrameworks/PeopleSuggester.framework/PeopleSuggester: _PSSuggestion 
01 00 3300 /usr/lib/swift/libswiftCore.dylib: _TtCs12_SwiftObject 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIBackdropView 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: _UICollectionViewListLayoutSection 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: _UICollectionViewListLayoutSectionConfiguration 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIContentUnavailableView 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIDynamicAnimationActiveValue 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIDynamicValueAnimation 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIFallbackPresentationViewController 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIImageSymbolConfiguration 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: _UINavigationBarPalette 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIRemoteViewController 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: _UISheetPresentationController 
