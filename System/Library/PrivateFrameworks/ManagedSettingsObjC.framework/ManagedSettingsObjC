|| __DATA.__objc_data _OBJC_CLASS_$_MOApplication
|| __DATA.__objc_data _OBJC_CLASS_$_MOCategory
|| __DATA.__objc_data _OBJC_CLASS_$_MOEffectiveBool
|| __DATA.__objc_data _OBJC_CLASS_$_MOEffectiveInteger
|| __DATA.__objc_data _OBJC_CLASS_$_MOEffectiveOptionalApplication
|| __DATA.__objc_data _OBJC_CLASS_$_MOEffectiveString
|| __DATA.__objc_data _OBJC_CLASS_$_MOEffectiveWebContentFilterPolicy
|| __DATA.__objc_data _OBJC_CLASS_$_MOLocalSettingsStore
|| __DATA.__objc_data _OBJC_CLASS_$_MOManagedSettingsAgentConnection
|| __DATA.__objc_data _OBJC_CLASS_$_MOSettingMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_MOSettingsGroup
|| __DATA.__objc_data _OBJC_CLASS_$_MOSettingsStore
|| __DATA.__objc_data _OBJC_CLASS_$_MOShieldConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_MOShieldLabel
|| __DATA.__objc_data _OBJC_CLASS_$_MOStringSettingMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_MOWebContentFilterPolicy
|| __DATA.__objc_data _OBJC_CLASS_$_MOWebDomain
|| __DATA.__objc_data _OBJC_METACLASS_$_MOApplication
|| __DATA.__objc_data _OBJC_METACLASS_$_MOCategory
|| __DATA.__objc_data _OBJC_METACLASS_$_MOEffectiveBool
|| __DATA.__objc_data _OBJC_METACLASS_$_MOEffectiveInteger
|| __DATA.__objc_data _OBJC_METACLASS_$_MOEffectiveOptionalApplication
|| __DATA.__objc_data _OBJC_METACLASS_$_MOEffectiveString
|| __DATA.__objc_data _OBJC_METACLASS_$_MOEffectiveWebContentFilterPolicy
|| __DATA.__objc_data _OBJC_METACLASS_$_MOLocalSettingsStore
|| __DATA.__objc_data _OBJC_METACLASS_$_MOManagedSettingsAgentConnection
|| __DATA.__objc_data _OBJC_METACLASS_$_MOSettingMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_MOSettingsGroup
|| __DATA.__objc_data _OBJC_METACLASS_$_MOSettingsStore
|| __DATA.__objc_data _OBJC_METACLASS_$_MOShieldConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_MOShieldLabel
|| __DATA.__objc_data _OBJC_METACLASS_$_MOStringSettingMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_MOWebContentFilterPolicy
|| __DATA.__objc_data _OBJC_METACLASS_$_MOWebDomain
|| __DATA_CONST.__const _MOCodingKeyBackgroundColorData
|| __DATA_CONST.__const _MOCodingKeyBackgroundEffectData
|| __DATA_CONST.__const _MOCodingKeyColorData
|| __DATA_CONST.__const _MOCodingKeyIconData
|| __DATA_CONST.__const _MOCodingKeyPrimaryButtonColorData
|| __DATA_CONST.__const _MOCodingKeyPrimaryButtonLabel
|| __DATA_CONST.__const _MOCodingKeySecondaryButtonLabel
|| __DATA_CONST.__const _MOCodingKeySubtitle
|| __DATA_CONST.__const _MOCodingKeyText
|| __DATA_CONST.__const _MOCodingKeyTitle
|| __DATA_CONST.__const _MOEffectiveSettingsGroupAccount
|| __DATA_CONST.__const _MOEffectiveSettingsGroupAllowedClient
|| __DATA_CONST.__const _MOEffectiveSettingsGroupAppStore
|| __DATA_CONST.__const _MOEffectiveSettingsGroupApplication
|| __DATA_CONST.__const _MOEffectiveSettingsGroupCellular
|| __DATA_CONST.__const _MOEffectiveSettingsGroupDateAndTime
|| __DATA_CONST.__const _MOEffectiveSettingsGroupGameCenter
|| __DATA_CONST.__const _MOEffectiveSettingsGroupMedia
|| __DATA_CONST.__const _MOEffectiveSettingsGroupPasscode
|| __DATA_CONST.__const _MOEffectiveSettingsGroupSafari
|| __DATA_CONST.__const _MOEffectiveSettingsGroupShield
|| __DATA_CONST.__const _MOEffectiveSettingsGroupSiri
|| __DATA_CONST.__const _MOEffectiveSettingsGroupWebContent
|| __DATA_CONST.__const _MOSafariCookiePolicyAlways
|| __DATA_CONST.__const _MOSafariCookiePolicyCurrentWebsite
|| __DATA_CONST.__const _MOSafariCookiePolicyNever
|| __DATA_CONST.__const _MOSafariCookiePolicyVisitedWebsites
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MOCategoryShieldPolicy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MOEffectiveAccountSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MOEffectiveAllowedClientSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MOEffectiveAppStoreSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MOEffectiveApplicationSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MOEffectiveArray
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MOEffectiveCategoryShieldPolicy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MOEffectiveCellularSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MOEffectiveDateAndTimeSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MOEffectiveGameCenterSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MOEffectiveMediaSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MOEffectivePasscodeSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MOEffectiveSafariSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MOEffectiveSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MOEffectiveShieldSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MOEffectiveSiriSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MOEffectiveWebContentSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MOLocations
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MOLogger
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MOCategoryShieldPolicy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MOEffectiveAccountSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MOEffectiveAllowedClientSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MOEffectiveAppStoreSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MOEffectiveApplicationSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MOEffectiveArray
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MOEffectiveCategoryShieldPolicy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MOEffectiveCellularSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MOEffectiveDateAndTimeSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MOEffectiveGameCenterSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MOEffectiveMediaSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MOEffectivePasscodeSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MOEffectiveSafariSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MOEffectiveSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MOEffectiveShieldSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MOEffectiveSiriSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MOEffectiveWebContentSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MOLocations
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MOLogger
|| __TEXT.__const _MOManagedSettingsObjCVersionNumber
|| __TEXT.__const _MOManagedSettingsObjCVersionString
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSInvocation
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSRequestConcreteImplementation
__ Foundation: _NSSelectorFromString
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __xpc_event_key_name
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_transaction_create
__ libSystem.B.dylib: _xpc_array_append_value
__ libSystem.B.dylib: _xpc_array_apply
__ libSystem.B.dylib: _xpc_array_create
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_get_array
__ libSystem.B.dylib: _xpc_dictionary_get_string
__ libSystem.B.dylib: _xpc_dictionary_set_value
__ libSystem.B.dylib: _xpc_set_event
__ libSystem.B.dylib: _xpc_set_event_stream_handler
__ libSystem.B.dylib: _xpc_string_create
__ libSystem.B.dylib: _xpc_string_get_string_ptr
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
MOLocations : NSObject
  // class methods
  +[MOLocations sharedDirectory]
  +[MOLocations internalSettingsDirectoryForProcess]
  +[MOLocations effectiveSettingsDirectory]
  +[MOLocations internalSettingsPathForProcess]
  +[MOLocations effectiveSettingsPath]


MOEffectiveAllowedClientSettings : NSObject
 @property  MOEffectiveOptionalApplication *allowedClient
 @property  MOEffectiveBool *denyMDMEnrollment
 @property  MOEffectiveArray *tokenKeys

  // instance methods
  -[MOEffectiveAllowedClientSettings tokenKeys]
  -[MOEffectiveAllowedClientSettings allowedClient]
  -[MOEffectiveAllowedClientSettings denyMDMEnrollment]


MOEffectivePasscodeSettings : NSObject
 @property  MOEffectiveBool *lockPasscode

  // instance methods
  -[MOEffectivePasscodeSettings lockPasscode]


MOEffectiveAppStoreSettings : NSObject
 @property  MOEffectiveBool *denyInAppPurchases
 @property  MOEffectiveInteger *maximumRating
 @property  MOEffectiveBool *requirePasswordForPurchases

  // instance methods
  -[MOEffectiveAppStoreSettings maximumRating]
  -[MOEffectiveAppStoreSettings denyInAppPurchases]
  -[MOEffectiveAppStoreSettings requirePasswordForPurchases]


MOEffectiveGameCenterSettings : NSObject
 @property  MOEffectiveBool *denyAddingFriends
 @property  MOEffectiveBool *denyMultiplayerGaming

  // instance methods
  -[MOEffectiveGameCenterSettings denyMultiplayerGaming]
  -[MOEffectiveGameCenterSettings denyAddingFriends]


MOEffectiveAccountSettings : NSObject
 @property  MOEffectiveBool *denyiCloudLogout
 @property  MOEffectiveBool *lockAccounts

  // instance methods
  -[MOEffectiveAccountSettings lockAccounts]
  -[MOEffectiveAccountSettings denyiCloudLogout]


MOEffectiveSettings : NSObject
 @property  MOEffectiveAccountSettings *account
 @property  MOEffectiveAllowedClientSettings *allowedClient
 @property  MOEffectiveAppStoreSettings *appStore
 @property  MOEffectiveApplicationSettings *application
 @property  MOEffectiveCellularSettings *cellular
 @property  MOEffectiveDateAndTimeSettings *dateAndTime
 @property  MOEffectiveGameCenterSettings *gameCenter
 @property  MOEffectiveMediaSettings *media
 @property  MOEffectivePasscodeSettings *passcode
 @property  MOEffectiveSafariSettings *safari
 @property  MOEffectiveShieldSettings *shield
 @property  MOEffectiveSiriSettings *siri
 @property  MOEffectiveWebContentSettings *webContent

  // class methods
  +[MOEffectiveSettings startObservingChangesWithHandler:]
  +[MOEffectiveSettings effectiveApplicationCategoryPolicyForKey:withDefault:]
  +[MOEffectiveSettings effectiveWebDomainCategoryPolicyForKey:withDefault:]
  +[MOEffectiveSettings _effectiveWebDomainArrayForItem:forKey:]
  +[MOEffectiveSettings effectiveStringForKey:withDefault:]
  +[MOEffectiveSettings effectiveArrayOfApplicationsForKey:withDefault:]
  +[MOEffectiveSettings _effectiveCategoryArrayForItem:forKey:]
  +[MOEffectiveSettings effectiveWebContentFilterPolicyForKey:withDefault:]
  +[MOEffectiveSettings effectiveOptionalApplicationForKey:withDefault:]
  +[MOEffectiveSettings subscribeForChangesInGroups:eventName:]
  +[MOEffectiveSettings effectiveArrayOfWebDomainsForKey:withDefault:]
  +[MOEffectiveSettings effectiveBoolForKey:withDefault:]
  +[MOEffectiveSettings effectiveApplicationForItem:forKey:]
  +[MOEffectiveSettings keyForSetting:inGroup:]
  +[MOEffectiveSettings effectiveIntegerForKey:withDefault:]
  +[MOEffectiveSettings effectiveArrayOfDatasForKey:withDefault:]
  +[MOEffectiveSettings effectiveSettings]
  +[MOEffectiveSettings effectiveWebDomainForItem:forKey:]
  +[MOEffectiveSettings _effectiveApplicationArrayForItem:forKey:]

  // instance methods
  -[MOEffectiveSettings application]
  -[MOEffectiveSettings account]
  -[MOEffectiveSettings shield]
  -[MOEffectiveSettings cellular]
  -[MOEffectiveSettings .cxx_destruct]
  -[MOEffectiveSettings webContent]
  -[MOEffectiveSettings init]
  -[MOEffectiveSettings dateAndTime]
  -[MOEffectiveSettings allowedClient]
  -[MOEffectiveSettings media]
  -[MOEffectiveSettings safari]
  -[MOEffectiveSettings passcode]
  -[MOEffectiveSettings appStore]
  -[MOEffectiveSettings siri]
  -[MOEffectiveSettings gameCenter]


MOEffectiveShieldSettings : NSObject
 @property  MOEffectiveArray *applications
 @property  MOEffectiveCategoryShieldPolicy *applicationCategoryPolicy
 @property  MOEffectiveArray *webDomains
 @property  MOEffectiveCategoryShieldPolicy *webDomainCategoryPolicy

  // class methods
  +[MOEffectiveShieldSettings xpcConnection]
  +[MOEffectiveShieldSettings configurationForCategoryIdentifier:categoryName:error:]
  +[MOEffectiveShieldSettings configurationForBundleIdentifier:categoryIdentifier:categoryName:error:]
  +[MOEffectiveShieldSettings configurationForWebDomain:categoryIdentifier:categoryName:error:]
  +[MOEffectiveShieldSettings handleAction:bundleIdentifier:categoryIdentifier:completionHandler:]
  +[MOEffectiveShieldSettings handleAction:categoryIdentifier:completionHandler:]
  +[MOEffectiveShieldSettings handleAction:webDomain:categoryIdentifier:completionHandler:]

  // instance methods
  -[MOEffectiveShieldSettings applicationCategoryPolicy]
  -[MOEffectiveShieldSettings webDomains]
  -[MOEffectiveShieldSettings webDomainCategoryPolicy]
  -[MOEffectiveShieldSettings applications]


MOShieldLabel : NSObject <NSSecureCoding>
 @property  NSString *text
 @property  NSData *colorData

  // class methods
  +[MOShieldLabel supportsSecureCoding]

  // instance methods
  -[MOShieldLabel initWithCoder:]
  -[MOShieldLabel .cxx_destruct]
  -[MOShieldLabel colorData]
  -[MOShieldLabel text]
  -[MOShieldLabel encodeWithCoder:]
  -[MOShieldLabel initWithText:colorData:]


MOShieldConfiguration : NSObject <NSSecureCoding>
 @property  NSData *backgroundColorData
 @property  NSData *backgroundEffectData
 @property  NSData *iconData
 @property  MOShieldLabel *title
 @property  MOShieldLabel *subtitle
 @property  MOShieldLabel *primaryButtonLabel
 @property  NSData *primaryButtonColorData
 @property  MOShieldLabel *secondaryButtonLabel

  // class methods
  +[MOShieldConfiguration supportsSecureCoding]

  // instance methods
  -[MOShieldConfiguration initWithCoder:]
  -[MOShieldConfiguration .cxx_destruct]
  -[MOShieldConfiguration iconData]
  -[MOShieldConfiguration subtitle]
  -[MOShieldConfiguration title]
  -[MOShieldConfiguration encodeWithCoder:]
  -[MOShieldConfiguration primaryButtonLabel]
  -[MOShieldConfiguration secondaryButtonLabel]
  -[MOShieldConfiguration backgroundColorData]
  -[MOShieldConfiguration backgroundEffectData]
  -[MOShieldConfiguration primaryButtonColorData]
  -[MOShieldConfiguration initWithBackgroundColorData:backgroundEffectData:iconData:title:subtitle:primaryButtonLabel:primaryButtonColorData:secondaryButtonLabel:]


MOXPCRemoteObjectProxy : NSObject
  // class methods
  +[MOXPCRemoteObjectProxy proxyFromConnection:withRetryCount:proxyHandler:]
  +[MOXPCRemoteObjectProxy synchronousProxyFromConnection:withRetryCount:proxyHandler:]


MOSettingMetadata : NSObject
 @property  BOOL isPublic
 @property  id defaultValue

  // instance methods
  -[MOSettingMetadata defaultValue]
  -[MOSettingMetadata .cxx_destruct]
  -[MOSettingMetadata isPublic]
  -[MOSettingMetadata initWithDefaultValue:isPublic:]
  -[MOSettingMetadata persistableValueFromValue:]
  -[MOSettingMetadata valueFromPersistableValue:]
  -[MOSettingMetadata sanitizePersistableValue:]
  -[MOSettingMetadata combinePersistableValue:with:]


MOLogger : NSObject
  // class methods
  +[MOLogger store]
  +[MOLogger xpc]
  +[MOLogger effective]


MOEffectiveSafariSettings : NSObject
 @property  MOEffectiveString *cookiePolicy
 @property  MOEffectiveBool *denyAutoFill

  // instance methods
  -[MOEffectiveSafariSettings cookiePolicy]
  -[MOEffectiveSafariSettings denyAutoFill]


MOSettingsStore : NSObject
 @property  <MOSettingsReader> *reader
 @property  <MOSettingsWriter> *writer

  // class methods
  +[MOSettingsStore xpcConnection]
  +[MOSettingsStore loadSettingsAtURL:]
  +[MOSettingsStore saveSettings:toURL:]

  // instance methods
  -[MOSettingsStore reader]
  -[MOSettingsStore init]
  -[MOSettingsStore writer]


MOSettingsGroup : NSObject
 @property  <MOSettingsReader> *settingsReader
 @property  <MOSettingsWriter> *settingsWriter

  // class methods
  +[MOSettingsGroup groupName]

  // instance methods
  -[MOSettingsGroup setValue:forSetting:]
  -[MOSettingsGroup .cxx_destruct]
  -[MOSettingsGroup valueForSetting:]
  -[MOSettingsGroup _metadataForSetting:]
  -[MOSettingsGroup initWithReader:writer:]
  -[MOSettingsGroup settingsReader]
  -[MOSettingsGroup setSettingsReader:]
  -[MOSettingsGroup settingsWriter]
  -[MOSettingsGroup setSettingsWriter:]


MOEffectiveDateAndTimeSettings : NSObject
 @property  MOEffectiveBool *requireAutomaticDateAndTime

  // instance methods
  -[MOEffectiveDateAndTimeSettings requireAutomaticDateAndTime]


MOEffectiveCellularSettings : NSObject
 @property  MOEffectiveBool *lockAppCellularData
 @property  MOEffectiveBool *lockCellularPlan
 @property  MOEffectiveBool *lockESIM

  // instance methods
  -[MOEffectiveCellularSettings lockAppCellularData]
  -[MOEffectiveCellularSettings lockCellularPlan]
  -[MOEffectiveCellularSettings lockESIM]


MOEffectiveApplicationSettings : NSObject
 @property  MOEffectiveArray *blockedApplications
 @property  MOEffectiveBool *denyAppInstallation
 @property  MOEffectiveBool *denyAppRemoval
 @property  MOEffectiveArray *unremovableApplications

  // class methods
  +[MOEffectiveApplicationSettings xpcConnection]
  +[MOEffectiveApplicationSettings askToOverrideUnremovabilityOfApplication:teamIdentifier:completionHandler:]

  // instance methods
  -[MOEffectiveApplicationSettings denyAppInstallation]
  -[MOEffectiveApplicationSettings denyAppRemoval]
  -[MOEffectiveApplicationSettings unremovableApplications]
  -[MOEffectiveApplicationSettings blockedApplications]


MOApplication : NSObject
 @property  NSString *bundleIdentifier

  // instance methods
  -[MOApplication bundleIdentifier]
  -[MOApplication .cxx_destruct]
  -[MOApplication initWithBundleIdentifier:]


MOCategory : NSObject
 @property  NSString *identifier

  // instance methods
  -[MOCategory initWithIdentifier:]
  -[MOCategory .cxx_destruct]
  -[MOCategory identifier]


MOWebDomain : NSObject
 @property  NSString *domain

  // class methods
  +[MOWebDomain compareDomain:withDomainPattern:outExactMatch:]

  // instance methods
  -[MOWebDomain .cxx_destruct]
  -[MOWebDomain domain]
  -[MOWebDomain initWithDomain:]


MOCategoryShieldPolicy : NSObject
 @property  long long policy
 @property  NSArray *specificCategories
 @property  NSArray *excludedContent

  // instance methods
  -[MOCategoryShieldPolicy initWithPolicy:specificCategories:excludedContent:]
  -[MOCategoryShieldPolicy .cxx_destruct]
  -[MOCategoryShieldPolicy policy]
  -[MOCategoryShieldPolicy specificCategories]
  -[MOCategoryShieldPolicy excludedContent]


MOWebContentFilterPolicy : NSObject
 @property  NSArray *autoAllow
 @property  NSArray *neverAllow
 @property  NSArray *onlyAllow

  // instance methods
  -[MOWebContentFilterPolicy .cxx_destruct]
  -[MOWebContentFilterPolicy initWithAutoAllow:neverAllow:onlyAllow:]
  -[MOWebContentFilterPolicy autoAllow]
  -[MOWebContentFilterPolicy neverAllow]
  -[MOWebContentFilterPolicy onlyAllow]


MOEffectiveBool : NSObject
 @property  BOOL value
 @property  BOOL defaultValue

  // instance methods
  -[MOEffectiveBool defaultValue]
  -[MOEffectiveBool value]
  -[MOEffectiveBool initWithValue:defaultValue:]


MOEffectiveInteger : NSObject
 @property  long long value
 @property  long long defaultValue

  // instance methods
  -[MOEffectiveInteger defaultValue]
  -[MOEffectiveInteger value]
  -[MOEffectiveInteger initWithValue:defaultValue:]


MOEffectiveString : NSObject
 @property  NSString *value
 @property  NSString *defaultValue

  // instance methods
  -[MOEffectiveString defaultValue]
  -[MOEffectiveString .cxx_destruct]
  -[MOEffectiveString value]
  -[MOEffectiveString initWithValue:defaultValue:]


MOEffectiveArray : NSObject
 @property  NSArray *value
 @property  NSArray *defaultValue

  // instance methods
  -[MOEffectiveArray defaultValue]
  -[MOEffectiveArray .cxx_destruct]
  -[MOEffectiveArray value]
  -[MOEffectiveArray initWithValue:defaultValue:]


MOEffectiveOptionalApplication : NSObject
 @property  MOApplication *value
 @property  MOApplication *defaultValue

  // instance methods
  -[MOEffectiveOptionalApplication defaultValue]
  -[MOEffectiveOptionalApplication .cxx_destruct]
  -[MOEffectiveOptionalApplication value]
  -[MOEffectiveOptionalApplication initWithValue:defaultValue:]


MOEffectiveCategoryShieldPolicy : NSObject
 @property  MOCategoryShieldPolicy *value
 @property  MOCategoryShieldPolicy *defaultValue

  // instance methods
  -[MOEffectiveCategoryShieldPolicy defaultValue]
  -[MOEffectiveCategoryShieldPolicy .cxx_destruct]
  -[MOEffectiveCategoryShieldPolicy value]
  -[MOEffectiveCategoryShieldPolicy initWithValue:defaultValue:]


MOEffectiveWebContentFilterPolicy : NSObject
 @property  MOWebContentFilterPolicy *value
 @property  MOWebContentFilterPolicy *defaultValue

  // instance methods
  -[MOEffectiveWebContentFilterPolicy defaultValue]
  -[MOEffectiveWebContentFilterPolicy .cxx_destruct]
  -[MOEffectiveWebContentFilterPolicy value]
  -[MOEffectiveWebContentFilterPolicy initWithValue:defaultValue:]


MOEffectiveWebContentSettings : NSObject
 @property  MOEffectiveWebContentFilterPolicy *blockedByFilter

  // instance methods
  -[MOEffectiveWebContentSettings blockedByFilter]


MOStringSettingMetadata : MOSettingMetadata
 @property  long long combineOperator
 @property  NSDictionary *rankedAllowedValues

  // instance methods
  -[MOStringSettingMetadata .cxx_destruct]
  -[MOStringSettingMetadata persistableValueFromValue:]
  -[MOStringSettingMetadata valueFromPersistableValue:]
  -[MOStringSettingMetadata sanitizePersistableValue:]
  -[MOStringSettingMetadata combinePersistableValue:with:]
  -[MOStringSettingMetadata _combine:with:]
  -[MOStringSettingMetadata initWithDefaultString:combineOperator:rankedAllowedValues:isPublic:]
  -[MOStringSettingMetadata combineOperator]
  -[MOStringSettingMetadata rankedAllowedValues]


MOEffectiveSiriSettings : NSObject
 @property  MOEffectiveBool *denySiri

  // instance methods
  -[MOEffectiveSiriSettings denySiri]


MOLocalSettingsStore : MOSettingsStore <MOSettingsReader, MOSettingsWriter>
 @property  NSMutableDictionary *cachedPersistedValues
 @property  NSObject<OS_dispatch_queue> *syncQueue
 @property  BOOL isDebouncing
 @property  BOOL hasPendingRequest
 @property  NSObject<OS_os_transaction> *transaction

  // instance methods
  -[MOLocalSettingsStore transaction]
  -[MOLocalSettingsStore reader]
  -[MOLocalSettingsStore syncQueue]
  -[MOLocalSettingsStore .cxx_destruct]
  -[MOLocalSettingsStore setHasPendingRequest:]
  -[MOLocalSettingsStore init]
  -[MOLocalSettingsStore writer]
  -[MOLocalSettingsStore setTransaction:]
  -[MOLocalSettingsStore hasPendingRequest]
  -[MOLocalSettingsStore saveSettings]
  -[MOLocalSettingsStore valueForSetting:inGroup:]
  -[MOLocalSettingsStore setValue:forSetting:inGroup:]
  -[MOLocalSettingsStore removeValueForSetting:inGroup:]
  -[MOLocalSettingsStore updateEffectiveSettingsIfNecessary]
  -[MOLocalSettingsStore isDebouncing]
  -[MOLocalSettingsStore setIsDebouncing:]
  -[MOLocalSettingsStore updateEffectiveSettings]
  -[MOLocalSettingsStore cachedPersistedValues]
  -[MOLocalSettingsStore setCachedPersistedValues:]


MOManagedSettingsAgentConnection : NSObject
  // class methods
  +[MOManagedSettingsAgentConnection newInterface]
  +[MOManagedSettingsAgentConnection newConnection]


MOEffectiveMediaSettings : NSObject
 @property  MOEffectiveBool *denyBookstoreErotica
 @property  MOEffectiveBool *denyExplicitContent
 @property  MOEffectiveBool *denyMusicService
 @property  MOEffectiveInteger *maximumMovieRating
 @property  MOEffectiveInteger *maximumTVShowRating

  // instance methods
  -[MOEffectiveMediaSettings denyExplicitContent]
  -[MOEffectiveMediaSettings denyBookstoreErotica]
  -[MOEffectiveMediaSettings maximumTVShowRating]
  -[MOEffectiveMediaSettings maximumMovieRating]
  -[MOEffectiveMediaSettings denyMusicService]


01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSInvocation 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0200 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
