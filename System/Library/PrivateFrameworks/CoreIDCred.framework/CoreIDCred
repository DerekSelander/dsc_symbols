|| __DATA.__objc_data _OBJC_CLASS_$_DCCredentialCryptoKey
|| __DATA.__objc_data _OBJC_CLASS_$_DCCredentialElement
|| __DATA.__objc_data _OBJC_CLASS_$_DCCredentialOptions
|| __DATA.__objc_data _OBJC_CLASS_$_DCCredentialPayload
|| __DATA.__objc_data _OBJC_CLASS_$_DCCredentialProperties
|| __DATA.__objc_data _OBJC_CLASS_$_DCCredentialStore
|| __DATA.__objc_data _OBJC_CLASS_$_DCLegacySESlotInfo
|| __DATA.__objc_data _OBJC_CLASS_$_DCPresentmentProposal
|| __DATA.__objc_data _OBJC_CLASS_$_DCPresentmentRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DCPresentmentRequestedElement
|| __DATA.__objc_data _OBJC_CLASS_$_DCPresentmentSelection
|| __DATA.__objc_data _OBJC_CLASS_$_DCPresentmentSession
|| __DATA.__objc_data _OBJC_CLASS_$_DCPresentmentSessionOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_DCCredentialCryptoKey
|| __DATA.__objc_data _OBJC_METACLASS_$_DCCredentialElement
|| __DATA.__objc_data _OBJC_METACLASS_$_DCCredentialOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_DCCredentialPayload
|| __DATA.__objc_data _OBJC_METACLASS_$_DCCredentialProperties
|| __DATA.__objc_data _OBJC_METACLASS_$_DCCredentialStore
|| __DATA.__objc_data _OBJC_METACLASS_$_DCLegacySESlotInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_DCPresentmentProposal
|| __DATA.__objc_data _OBJC_METACLASS_$_DCPresentmentRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DCPresentmentRequestedElement
|| __DATA.__objc_data _OBJC_METACLASS_$_DCPresentmentSelection
|| __DATA.__objc_data _OBJC_METACLASS_$_DCPresentmentSession
|| __DATA.__objc_data _OBJC_METACLASS_$_DCPresentmentSessionOptions
|| __DATA_CONST.__const _DCBiometricStoreErrorDomain
|| __DATA_CONST.__const _DCCredentialStoreErrorDomain
|| __DATA_CONST.__const _DCPresentmentErrorDomain
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DCBiometricStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DCCredentialAuthACL
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DCCredentialAuthorizationToken
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DCCredentialNonce
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DCCredentialTrust
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DCBiometricStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DCCredentialAuthACL
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DCCredentialAuthorizationToken
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DCCredentialNonce
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DCCredentialTrust
|| __TEXT.__text _DCCredentialAuthACLTypeToString
|| __TEXT.__text _DCCredentialCryptoKeyTypeToString
|| __TEXT.__text _DCCredentialCryptoKeyUsageToString
|| __TEXT.__text _DCCredentialPayloadFormatToString
|| __TEXT.__text _DCCredentialPayloadProtectionPolicyToString
|| __TEXT.__text _DCCredentialPayloadProtectionTypeToString
|| __TEXT.__text _DCCredentialPresentmentAuthPolicyToString
|| __TEXT.__text _DCCredentialReaderAuthenticationPolicyToString
|| __TEXT.__text _DCCredentialStateToString
|| __TEXT.__text _DCPresentmentElementRetentionIntentToString
|| __TEXT.__text _DCPresentmentResponseStatusToString
|| __TEXT.__text _DCPresentmentSessionEncryptionModeToString
|| __TEXT.__text _DCPresentmentTransportKeySpecificationToString
|| __TEXT.__text _DCPresentmentTypeToString
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: ___CFConstantStringClassReference
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_CLASS_$_NSXPCListenerEndpoint
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_storeStrong
DCCredentialNonce : NSObject <NSSecureCoding>
 @property  NSData *credentialNonce

  // class methods
  +[DCCredentialNonce supportsSecureCoding]

  // instance methods
  -[DCCredentialNonce initWithCoder:]
  -[DCCredentialNonce .cxx_destruct]
  -[DCCredentialNonce encodeWithCoder:]
  -[DCCredentialNonce credentialNonce]
  -[DCCredentialNonce initWithCredentialNonce:]


DCCredentialAuthorizationToken : NSObject <NSSecureCoding>
 @property  NSData *credentialAuthorizationToken
 @property  NSString *credentialPairingID

  // class methods
  +[DCCredentialAuthorizationToken supportsSecureCoding]

  // instance methods
  -[DCCredentialAuthorizationToken initWithCoder:]
  -[DCCredentialAuthorizationToken .cxx_destruct]
  -[DCCredentialAuthorizationToken encodeWithCoder:]
  -[DCCredentialAuthorizationToken credentialAuthorizationToken]
  -[DCCredentialAuthorizationToken credentialPairingID]
  -[DCCredentialAuthorizationToken initWithCredentialAuthorizationToken:pairingID:]


DCCredentialTrust : NSObject <NSSecureCoding>
 @property  NSData *credentialBAACertificate
 @property  NSData *credentialKeyBlob
 @property  NSString *credentialPairingID
 @property  BOOL credentialAccessibilityEnabled

  // class methods
  +[DCCredentialTrust supportsSecureCoding]

  // instance methods
  -[DCCredentialTrust initWithCoder:]
  -[DCCredentialTrust .cxx_destruct]
  -[DCCredentialTrust encodeWithCoder:]
  -[DCCredentialTrust credentialPairingID]
  -[DCCredentialTrust credentialKeyBlob]
  -[DCCredentialTrust credentialBAACertificate]
  -[DCCredentialTrust credentialAccessibilityEnabled]
  -[DCCredentialTrust initWithCredentialKeyBlob:baaCertificate:pairingID:isAccessibilityEnabled:]


DCCredentialAuthACL : NSObject <NSSecureCoding>
 @property  NSData *aclData
 @property  unsigned long aclType

  // class methods
  +[DCCredentialAuthACL supportsSecureCoding]

  // instance methods
  -[DCCredentialAuthACL initWithCoder:]
  -[DCCredentialAuthACL .cxx_destruct]
  -[DCCredentialAuthACL aclType]
  -[DCCredentialAuthACL initWithData:type:]
  -[DCCredentialAuthACL encodeWithCoder:]
  -[DCCredentialAuthACL setAclData:]
  -[DCCredentialAuthACL setAclType:]
  -[DCCredentialAuthACL aclData]


DCBiometricStore : NSObject <DCBioBindingProtocol>
 @property  DCBiometricStoreClient *client
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DCBiometricStore .cxx_destruct]
  -[DCBiometricStore setClient:]
  -[DCBiometricStore prearmCredentialWithAuthorizationToken:completion:]
  -[DCBiometricStore init]
  -[DCBiometricStore client]
  -[DCBiometricStore establishPrearmTrust:completion:]
  -[DCBiometricStore nonceForAuthorizationTokenWithCompletion:]
  -[DCBiometricStore deleteGlobalAuthACLWithCompletion:]
  -[DCBiometricStore globalAuthACLWithCompletion:]
  -[DCBiometricStore globalAuthACLTemplateUUIDsWithCompletion:]
  -[DCBiometricStore revokeCredentialAuthorizationToken:]
  -[DCBiometricStore bioBindingUnboundACL:]
  -[DCBiometricStore passcodeBindingUnboundACL:]
  -[DCBiometricStore setGlobalAuthACL:ofType:completion:]
  -[DCBiometricStore setModifiedGlobalAuthACL:externalizedLAContext:completion:]
  -[DCBiometricStore generatePhoneTokenWithNonce:keyBlob:pairingID:completion:]
  -[DCBiometricStore generatePrearmTrustCertificateWithNonce:pairingID:completion:]


DCPresentmentClient : NSObject <DCPresentmentXPCProtocol>
 @property  NSXPCConnection *serverConnection
 @property  <DCPresentmentXPCProtocol> *remoteObjectProxy
 @property  DLXPCDisconnectHandler *disconnectionHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DCPresentmentClient serverConnection]
  -[DCPresentmentClient .cxx_destruct]
  -[DCPresentmentClient setRemoteObjectProxy:]
  -[DCPresentmentClient remoteObjectProxy]
  -[DCPresentmentClient init]
  -[DCPresentmentClient setServerConnection:]
  -[DCPresentmentClient dealloc]
  -[DCPresentmentClient invalidate]
  -[DCPresentmentClient setDisconnectionHandler:]
  -[DCPresentmentClient disconnectionHandler]
  -[DCPresentmentClient configureWithPartitions:presentmentType:options:completion:]
  -[DCPresentmentClient generateTransportKeyForSpecification:completion:]
  -[DCPresentmentClient interpretRequest:completion:]
  -[DCPresentmentClient buildResponseForSelection:completion:]
  -[DCPresentmentClient buildErrorResponseWithStatus:completion:]


DCCredentialStoreClient : NSObject <DCCredentialStoreXPCProtocol>
 @property  NSXPCConnection *serverConnection
 @property  <DCCredentialStoreXPCProtocol> *remoteObjectProxy
 @property  DLXPCDisconnectHandler *disconnectionHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DCCredentialStoreClient serverConnection]
  -[DCCredentialStoreClient .cxx_destruct]
  -[DCCredentialStoreClient setRemoteObjectProxy:]
  -[DCCredentialStoreClient remoteObjectProxy]
  -[DCCredentialStoreClient init]
  -[DCCredentialStoreClient credentialIdentifiersInPartitions:completion:]
  -[DCCredentialStoreClient setServerConnection:]
  -[DCCredentialStoreClient createCredentialInPartition:options:completion:]
  -[DCCredentialStoreClient deleteCredential:completion:]
  -[DCCredentialStoreClient dealloc]
  -[DCCredentialStoreClient invalidate]
  -[DCCredentialStoreClient propertiesOfCredential:completion:]
  -[DCCredentialStoreClient setDisconnectionHandler:]
  -[DCCredentialStoreClient disconnectionHandler]
  -[DCCredentialStoreClient payloadAuthACLForCredential:completion:]
  -[DCCredentialStoreClient elementsOfCredential:elementIdentifiers:authData:completion:]
  -[DCCredentialStoreClient generateKeySigningKeyForCredential:completion:]
  -[DCCredentialStoreClient generateDeviceEncryptionKeyForCredential:completion:]
  -[DCCredentialStoreClient generatePresentmentKeyForCredential:completion:]
  -[DCCredentialStoreClient configureWithPartitions:completion:]
  -[DCCredentialStoreClient authorizeRemoteKeySigningKeyWithCredential:remoteKey:completion:]
  -[DCCredentialStoreClient associateExternalPresentmentKeyWithCredential:publicKeyIdentifier:completion:]
  -[DCCredentialStoreClient credentialIdentifierForPublicKeyIdentifier:completion:]
  -[DCCredentialStoreClient replacePayloadOfCredential:withPayload:format:completion:]
  -[DCCredentialStoreClient setStateOfCredential:to:completion:]
  -[DCCredentialStoreClient checkCompletenessOfCredential:completion:]
  -[DCCredentialStoreClient payloadsOfCredential:completion:]
  -[DCCredentialStoreClient allElementsOfCredential:authData:completion:]
  -[DCCredentialStoreClient occupiedLegacySEKeySlotsWithCompletion:]
  -[DCCredentialStoreClient eraseLegacySEKeySlot:completion:]


DCBiometricStoreClient : NSObject <DCBiometricStoreXPCProtocol>
 @property  NSXPCConnection *serverConnection
 @property  <DCBiometricStoreXPCProtocol> *remoteObjectProxy
 @property  DLXPCDisconnectHandler *disconnectionHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DCBiometricStoreClient serverConnection]
  -[DCBiometricStoreClient .cxx_destruct]
  -[DCBiometricStoreClient setRemoteObjectProxy:]
  -[DCBiometricStoreClient remoteObjectProxy]
  -[DCBiometricStoreClient prearmCredentialWithAuthorizationToken:completion:]
  -[DCBiometricStoreClient init]
  -[DCBiometricStoreClient setServerConnection:]
  -[DCBiometricStoreClient dealloc]
  -[DCBiometricStoreClient establishPrearmTrust:completion:]
  -[DCBiometricStoreClient invalidate]
  -[DCBiometricStoreClient nonceForAuthorizationTokenWithCompletion:]
  -[DCBiometricStoreClient deleteGlobalAuthACLWithCompletion:]
  -[DCBiometricStoreClient setDisconnectionHandler:]
  -[DCBiometricStoreClient disconnectionHandler]
  -[DCBiometricStoreClient globalAuthACLWithCompletion:]
  -[DCBiometricStoreClient globalAuthACLTemplateUUIDsWithCompletion:]
  -[DCBiometricStoreClient revokeCredentialAuthorizationToken:]
  -[DCBiometricStoreClient bioBindingUnboundACL:]
  -[DCBiometricStoreClient passcodeBindingUnboundACL:]
  -[DCBiometricStoreClient setGlobalAuthACL:ofType:completion:]
  -[DCBiometricStoreClient setModifiedGlobalAuthACL:externalizedLAContext:completion:]
  -[DCBiometricStoreClient generatePhoneTokenWithNonce:keyBlob:pairingID:completion:]
  -[DCBiometricStoreClient generatePrearmTrustCertificateWithNonce:pairingID:completion:]


DCCredentialOptions : NSObject <NSSecureCoding>
 @property  long long deleteIncompleteCredentialAfterDays
 @property  long long deleteInactiveKeysAfterDays
 @property  unsigned long readerAuthenticationPolicy
 @property  unsigned long presentmentAuthPolicy
 @property  unsigned long payloadProtectionPolicy

  // class methods
  +[DCCredentialOptions supportsSecureCoding]

  // instance methods
  -[DCCredentialOptions initWithCoder:]
  -[DCCredentialOptions encodeWithCoder:]
  -[DCCredentialOptions payloadProtectionPolicy]
  -[DCCredentialOptions presentmentAuthPolicy]
  -[DCCredentialOptions deleteInactiveKeysAfterDays]
  -[DCCredentialOptions deleteIncompleteCredentialAfterDays]
  -[DCCredentialOptions readerAuthenticationPolicy]
  -[DCCredentialOptions setDeleteInactiveKeysAfterDays:]
  -[DCCredentialOptions setDeleteIncompleteCredentialAfterDays:]
  -[DCCredentialOptions setReaderAuthenticationPolicy:]
  -[DCCredentialOptions setPresentmentAuthPolicy:]
  -[DCCredentialOptions setPayloadProtectionPolicy:]


DCCredentialProperties : NSObject <NSSecureCoding>
 @property  NSString *credentialIdentifier
 @property  NSString *partition
 @property  unsigned long credentialState
 @property  DCCredentialOptions *options
 @property  NSDate *createdAt
 @property  NSDate *updatedAt
 @property  NSDate *payloadValidFrom
 @property  NSDate *payloadValidUntil
 @property  NSDictionary *keySigningKeys
 @property  NSDictionary *deviceEncryptionKeys
 @property  NSDictionary *presentmentKeys
 @property  BOOL hasUsablePresentmentAuthPolicy

  // class methods
  +[DCCredentialProperties supportsSecureCoding]

  // instance methods
  -[DCCredentialProperties setCreatedAt:]
  -[DCCredentialProperties createdAt]
  -[DCCredentialProperties initWithCoder:]
  -[DCCredentialProperties options]
  -[DCCredentialProperties setOptions:]
  -[DCCredentialProperties .cxx_destruct]
  -[DCCredentialProperties partition]
  -[DCCredentialProperties updatedAt]
  -[DCCredentialProperties credentialIdentifier]
  -[DCCredentialProperties setCredentialIdentifier:]
  -[DCCredentialProperties presentmentKeys]
  -[DCCredentialProperties credentialState]
  -[DCCredentialProperties setPartition:]
  -[DCCredentialProperties setUpdatedAt:]
  -[DCCredentialProperties setCredentialState:]
  -[DCCredentialProperties encodeWithCoder:]
  -[DCCredentialProperties hasUsablePresentmentAuthPolicy]
  -[DCCredentialProperties payloadValidFrom]
  -[DCCredentialProperties payloadValidUntil]
  -[DCCredentialProperties keySigningKeys]
  -[DCCredentialProperties deviceEncryptionKeys]
  -[DCCredentialProperties setPayloadValidFrom:]
  -[DCCredentialProperties setPayloadValidUntil:]
  -[DCCredentialProperties setKeySigningKeys:]
  -[DCCredentialProperties setDeviceEncryptionKeys:]
  -[DCCredentialProperties setPresentmentKeys:]
  -[DCCredentialProperties setHasUsablePresentmentAuthPolicy:]


DCCredentialCryptoKey : NSObject <NSSecureCoding>
 @property  NSString *identifier
 @property  NSData *publicKeyIdentifier
 @property  NSData *publicKeyCOSEKey
 @property  unsigned long keyType
 @property  unsigned long keyUsage
 @property  NSArray *attestation
 @property  NSData *casdAttestation
 @property  NSData *casdSignature
 @property  NSData *keyAuthorization
 @property  NSArray *kskAttestation

  // class methods
  +[DCCredentialCryptoKey supportsSecureCoding]

  // instance methods
  -[DCCredentialCryptoKey keyType]
  -[DCCredentialCryptoKey initWithCoder:]
  -[DCCredentialCryptoKey setAttestation:]
  -[DCCredentialCryptoKey .cxx_destruct]
  -[DCCredentialCryptoKey publicKeyIdentifier]
  -[DCCredentialCryptoKey identifier]
  -[DCCredentialCryptoKey setIdentifier:]
  -[DCCredentialCryptoKey keyUsage]
  -[DCCredentialCryptoKey attestation]
  -[DCCredentialCryptoKey encodeWithCoder:]
  -[DCCredentialCryptoKey setKeyType:]
  -[DCCredentialCryptoKey setPublicKeyIdentifier:]
  -[DCCredentialCryptoKey publicKeyCOSEKey]
  -[DCCredentialCryptoKey casdAttestation]
  -[DCCredentialCryptoKey casdSignature]
  -[DCCredentialCryptoKey keyAuthorization]
  -[DCCredentialCryptoKey kskAttestation]
  -[DCCredentialCryptoKey initWithIdentifier:publicKeyIdentifier:publicKeyCOSEKey:keyType:keyUsage:attestation:]
  -[DCCredentialCryptoKey initWithIdentifier:publicKeyIdentifier:publicKeyCOSEKey:keyType:keyUsage:attestation:keyAuthorization:kskAttestation:]
  -[DCCredentialCryptoKey initWithIdentifier:publicKeyIdentifier:publicKeyCOSEKey:keyType:keyUsage:casdSignature:casdAttestation:keyAuthorization:kskAttestation:]
  -[DCCredentialCryptoKey setPublicKeyCOSEKey:]
  -[DCCredentialCryptoKey setKeyUsage:]
  -[DCCredentialCryptoKey setCasdAttestation:]
  -[DCCredentialCryptoKey setCasdSignature:]
  -[DCCredentialCryptoKey setKeyAuthorization:]
  -[DCCredentialCryptoKey setKskAttestation:]


DCCredentialElement : NSObject <NSSecureCoding>
 @property  NSString *elementIdentifier
 @property  NSString *stringValue
 @property  NSData *dataValue
 @property  NSDate *dateValue
 @property  NSNumber *numberValue
 @property  NSArray *arrayValue
 @property  NSDictionary *dictionaryValue

  // class methods
  +[DCCredentialElement supportsSecureCoding]

  // instance methods
  -[DCCredentialElement stringValue]
  -[DCCredentialElement setDateValue:]
  -[DCCredentialElement initWithCoder:]
  -[DCCredentialElement setStringValue:]
  -[DCCredentialElement arrayValue]
  -[DCCredentialElement .cxx_destruct]
  -[DCCredentialElement setArrayValue:]
  -[DCCredentialElement dictionaryValue]
  -[DCCredentialElement numberValue]
  -[DCCredentialElement setDataValue:]
  -[DCCredentialElement elementIdentifier]
  -[DCCredentialElement dateValue]
  -[DCCredentialElement setDictionaryValue:]
  -[DCCredentialElement setNumberValue:]
  -[DCCredentialElement dataValue]
  -[DCCredentialElement encodeWithCoder:]
  -[DCCredentialElement initWithElementIdentifier:]
  -[DCCredentialElement initWithElementIdentifier:dataValue:]
  -[DCCredentialElement setElementIdentifier:]
  -[DCCredentialElement initWithElementIdentifier:stringValue:dataValue:dateValue:numberValue:arrayValue:dictionaryValue:]
  -[DCCredentialElement initWithElementIdentifier:stringValue:]
  -[DCCredentialElement initWithElementIdentifier:dateValue:]
  -[DCCredentialElement initWithElementIdentifier:numberValue:]
  -[DCCredentialElement initWithElementIdentifier:arrayValue:]
  -[DCCredentialElement initWithElementIdentifier:dictionaryValue:]


DCCredentialStore : NSObject
 @property  DCCredentialStoreClient *client
 @property  NSArray *partitions
 @property  BOOL hasBeenConfigured

  // instance methods
  -[DCCredentialStore .cxx_destruct]
  -[DCCredentialStore setClient:]
  -[DCCredentialStore credentialIdentifiersInPartitions:completion:]
  -[DCCredentialStore createCredentialInPartition:options:completion:]
  -[DCCredentialStore client]
  -[DCCredentialStore deleteCredential:completion:]
  -[DCCredentialStore propertiesOfCredential:completion:]
  -[DCCredentialStore initWithPartitions:]
  -[DCCredentialStore payloadAuthACLForCredential:completion:]
  -[DCCredentialStore elementsOfCredential:elementIdentifiers:authData:completion:]
  -[DCCredentialStore generateKeySigningKeyForCredential:completion:]
  -[DCCredentialStore generateDeviceEncryptionKeyForCredential:completion:]
  -[DCCredentialStore generatePresentmentKeyForCredential:completion:]
  -[DCCredentialStore elementsOfCredential:elementIdentifiers:completion:]
  -[DCCredentialStore authorizeRemoteKeySigningKeyWithCredential:remoteKey:completion:]
  -[DCCredentialStore associateExternalPresentmentKeyWithCredential:publicKeyIdentifier:completion:]
  -[DCCredentialStore credentialIdentifierForPublicKeyIdentifier:completion:]
  -[DCCredentialStore replacePayloadOfCredential:withPayload:format:completion:]
  -[DCCredentialStore setStateOfCredential:to:completion:]
  -[DCCredentialStore checkCompletenessOfCredential:completion:]
  -[DCCredentialStore payloadsOfCredential:completion:]
  -[DCCredentialStore allElementsOfCredential:authData:completion:]
  -[DCCredentialStore occupiedLegacySEKeySlotsWithCompletion:]
  -[DCCredentialStore eraseLegacySEKeySlot:completion:]
  -[DCCredentialStore setPartitions:]
  -[DCCredentialStore setHasBeenConfigured:]
  -[DCCredentialStore hasBeenConfigured]
  -[DCCredentialStore partitions]
  -[DCCredentialStore configureIfNeededWithContinuation:errorHandler:]
  -[DCCredentialStore credentialIdentifiers:]
  -[DCCredentialStore allElementsOfCredential:completion:]


DCCredentialPayload : NSObject <NSSecureCoding>
 @property  unsigned long format
 @property  unsigned long protectionType
 @property  NSString *docType
 @property  NSDate *createdAt
 @property  NSDate *updatedAt
 @property  NSDate *validFrom
 @property  NSDate *validUntil
 @property  NSData *payloadData

  // class methods
  +[DCCredentialPayload supportsSecureCoding]

  // instance methods
  -[DCCredentialPayload setCreatedAt:]
  -[DCCredentialPayload createdAt]
  -[DCCredentialPayload initWithCoder:]
  -[DCCredentialPayload .cxx_destruct]
  -[DCCredentialPayload setFormat:]
  -[DCCredentialPayload protectionType]
  -[DCCredentialPayload updatedAt]
  -[DCCredentialPayload payloadData]
  -[DCCredentialPayload setPayloadData:]
  -[DCCredentialPayload format]
  -[DCCredentialPayload docType]
  -[DCCredentialPayload setUpdatedAt:]
  -[DCCredentialPayload setProtectionType:]
  -[DCCredentialPayload validUntil]
  -[DCCredentialPayload encodeWithCoder:]
  -[DCCredentialPayload validFrom]
  -[DCCredentialPayload setDocType:]
  -[DCCredentialPayload setValidUntil:]
  -[DCCredentialPayload setValidFrom:]


DCLegacySESlotInfo : NSObject <NSSecureCoding>
 @property  long long seSlot
 @property  BOOL isMissing
 @property  NSString *partition
 @property  NSString *credentialIdentifier
 @property  NSString *presentmentKeyIdentifier

  // class methods
  +[DCLegacySESlotInfo supportsSecureCoding]

  // instance methods
  -[DCLegacySESlotInfo initWithCoder:]
  -[DCLegacySESlotInfo .cxx_destruct]
  -[DCLegacySESlotInfo partition]
  -[DCLegacySESlotInfo credentialIdentifier]
  -[DCLegacySESlotInfo setCredentialIdentifier:]
  -[DCLegacySESlotInfo setPartition:]
  -[DCLegacySESlotInfo encodeWithCoder:]
  -[DCLegacySESlotInfo isMissing]
  -[DCLegacySESlotInfo initWithSESlot:isMissing:partition:credentialIdentifier:presentmentKeyIdentifier:]
  -[DCLegacySESlotInfo seSlot]
  -[DCLegacySESlotInfo presentmentKeyIdentifier]
  -[DCLegacySESlotInfo setSeSlot:]
  -[DCLegacySESlotInfo setIsMissing:]
  -[DCLegacySESlotInfo setPresentmentKeyIdentifier:]
  -[DCLegacySESlotInfo initWithSESlot:isMissing:]


DCPresentmentSessionOptions : NSObject <NSSecureCoding>
 @property  unsigned long sessionEncryptionMode
 @property  unsigned long readerAuthenticationPolicy

  // class methods
  +[DCPresentmentSessionOptions supportsSecureCoding]

  // instance methods
  -[DCPresentmentSessionOptions initWithCoder:]
  -[DCPresentmentSessionOptions init]
  -[DCPresentmentSessionOptions encodeWithCoder:]
  -[DCPresentmentSessionOptions readerAuthenticationPolicy]
  -[DCPresentmentSessionOptions setReaderAuthenticationPolicy:]
  -[DCPresentmentSessionOptions initWithSessionEncryptionMode:readerAuthenticationPolicy:]
  -[DCPresentmentSessionOptions setSessionEncryptionMode:]
  -[DCPresentmentSessionOptions sessionEncryptionMode]
  -[DCPresentmentSessionOptions initWithSessionEncryptionMode:]


DCPresentmentRequest : NSObject <NSSecureCoding>
 @property  NSData *sessionEstablishment
 @property  NSData *sessionTranscript
 @property  NSData *sessionEncryptionIntermediateKeyMaterial
 @property  NSData *requiredPublicKeyIdentifier
 @property  NSXPCListenerEndpoint *seAccessEndpoint

  // class methods
  +[DCPresentmentRequest supportsSecureCoding]

  // instance methods
  -[DCPresentmentRequest initWithCoder:]
  -[DCPresentmentRequest .cxx_destruct]
  -[DCPresentmentRequest init]
  -[DCPresentmentRequest encodeWithCoder:]
  -[DCPresentmentRequest initWithSessionEstablishment:sessionTranscript:seAccessEndpoint:]
  -[DCPresentmentRequest setSessionEstablishment:]
  -[DCPresentmentRequest setSessionTranscript:]
  -[DCPresentmentRequest setSeAccessEndpoint:]
  -[DCPresentmentRequest sessionEstablishment]
  -[DCPresentmentRequest sessionTranscript]
  -[DCPresentmentRequest seAccessEndpoint]
  -[DCPresentmentRequest requiredPublicKeyIdentifier]
  -[DCPresentmentRequest sessionEncryptionIntermediateKeyMaterial]
  -[DCPresentmentRequest initWithSessionEstablishment:sessionTranscript:]
  -[DCPresentmentRequest setSessionEncryptionIntermediateKeyMaterial:]
  -[DCPresentmentRequest setRequiredPublicKeyIdentifier:]


DCPresentmentRequestedElement : NSObject <NSSecureCoding>
 @property  NSString *elementIdentifier
 @property  unsigned long intentToRetain

  // class methods
  +[DCPresentmentRequestedElement supportsSecureCoding]

  // instance methods
  -[DCPresentmentRequestedElement initWithCoder:]
  -[DCPresentmentRequestedElement .cxx_destruct]
  -[DCPresentmentRequestedElement elementIdentifier]
  -[DCPresentmentRequestedElement encodeWithCoder:]
  -[DCPresentmentRequestedElement setElementIdentifier:]
  -[DCPresentmentRequestedElement setIntentToRetain:]
  -[DCPresentmentRequestedElement intentToRetain]
  -[DCPresentmentRequestedElement initWithElementIdentifier:intentToRetain:]


DCPresentmentProposal : NSObject <NSSecureCoding>
 @property  NSString *credentialIdentifier
 @property  NSString *partition
 @property  NSString *docType
 @property  NSDictionary *elements
 @property  NSData *authACL
 @property  NSString *readerIdentifier
 @property  NSString *readerOrganization
 @property  NSString *readerOrganizationalUnit

  // class methods
  +[DCPresentmentProposal supportsSecureCoding]

  // instance methods
  -[DCPresentmentProposal initWithCoder:]
  -[DCPresentmentProposal elements]
  -[DCPresentmentProposal setElements:]
  -[DCPresentmentProposal .cxx_destruct]
  -[DCPresentmentProposal partition]
  -[DCPresentmentProposal credentialIdentifier]
  -[DCPresentmentProposal setCredentialIdentifier:]
  -[DCPresentmentProposal setPartition:]
  -[DCPresentmentProposal docType]
  -[DCPresentmentProposal readerIdentifier]
  -[DCPresentmentProposal setReaderIdentifier:]
  -[DCPresentmentProposal encodeWithCoder:]
  -[DCPresentmentProposal setDocType:]
  -[DCPresentmentProposal initWithCredentialIdentifier:partition:docType:elements:authACL:readerIdentifier:readerOrganization:readerOrganizationalUnit:]
  -[DCPresentmentProposal setAuthACL:]
  -[DCPresentmentProposal setReaderOrganization:]
  -[DCPresentmentProposal setReaderOrganizationalUnit:]
  -[DCPresentmentProposal authACL]
  -[DCPresentmentProposal readerOrganization]
  -[DCPresentmentProposal readerOrganizationalUnit]
  -[DCPresentmentProposal initWithCredentialIdentifier:partition:docType:elements:authACL:]


DCPresentmentSelection : NSObject <NSSecureCoding>
 @property  NSString *credentialIdentifier
 @property  NSDictionary *elementsToPresent
 @property  NSData *authData
 @property  NSXPCListenerEndpoint *seAccessEndpoint

  // class methods
  +[DCPresentmentSelection supportsSecureCoding]

  // instance methods
  -[DCPresentmentSelection initWithCoder:]
  -[DCPresentmentSelection .cxx_destruct]
  -[DCPresentmentSelection credentialIdentifier]
  -[DCPresentmentSelection setCredentialIdentifier:]
  -[DCPresentmentSelection encodeWithCoder:]
  -[DCPresentmentSelection authData]
  -[DCPresentmentSelection setSeAccessEndpoint:]
  -[DCPresentmentSelection seAccessEndpoint]
  -[DCPresentmentSelection setElementsToPresent:]
  -[DCPresentmentSelection setAuthData:]
  -[DCPresentmentSelection elementsToPresent]
  -[DCPresentmentSelection initWithCredentialIdentifier:elementsToPresent:authData:seAccessEndpoint:]


DCPresentmentSession : NSObject
 @property  DCPresentmentClient *client
 @property  NSArray *partitions
 @property  unsigned long presentmentType
 @property  DCPresentmentSessionOptions *options
 @property  BOOL hasBeenConfigured

  // instance methods
  -[DCPresentmentSession options]
  -[DCPresentmentSession setOptions:]
  -[DCPresentmentSession .cxx_destruct]
  -[DCPresentmentSession setClient:]
  -[DCPresentmentSession client]
  -[DCPresentmentSession generateTransportKeyForSpecification:completion:]
  -[DCPresentmentSession interpretRequest:completion:]
  -[DCPresentmentSession buildResponseForSelection:completion:]
  -[DCPresentmentSession buildErrorResponseWithStatus:completion:]
  -[DCPresentmentSession setPartitions:]
  -[DCPresentmentSession setHasBeenConfigured:]
  -[DCPresentmentSession hasBeenConfigured]
  -[DCPresentmentSession partitions]
  -[DCPresentmentSession configureIfNeededWithContinuation:errorHandler:]
  -[DCPresentmentSession initWithPartitions:presentmentType:options:]
  -[DCPresentmentSession presentmentType]
  -[DCPresentmentSession initWithPartitions:presentmentType:]
  -[DCPresentmentSession setPresentmentType:]


DLXPCDisconnectHandler : NSObject
 @property  NSString *name
 @property  NSMutableDictionary *disconnectCallbacks
 @property  NSMutableDictionary *disconnectResultCallbacks
 @property  NSMutableDictionary *disconnectOptionCallbacks
 @property  NSString *disconnectErrorDomain
 @property  long long disconnectErrorCode
 @property  NSObject<OS_os_log> *logger
 @property  BOOL isDisconnected

  // instance methods
  -[DLXPCDisconnectHandler logger]
  -[DLXPCDisconnectHandler isDisconnected]
  -[DLXPCDisconnectHandler name]
  -[DLXPCDisconnectHandler handleInterruption]
  -[DLXPCDisconnectHandler registerCallback:]
  -[DLXPCDisconnectHandler .cxx_destruct]
  -[DLXPCDisconnectHandler setName:]
  -[DLXPCDisconnectHandler initWithName:errorDomain:errorCode:logger:]
  -[DLXPCDisconnectHandler configureHandlersForConnection:]
  -[DLXPCDisconnectHandler registerResultCallback:]
  -[DLXPCDisconnectHandler unregisterResultCallback:]
  -[DLXPCDisconnectHandler createDaemonDisconnectedError]
  -[DLXPCDisconnectHandler setIsDisconnected:]
  -[DLXPCDisconnectHandler setDisconnectErrorDomain:]
  -[DLXPCDisconnectHandler setDisconnectErrorCode:]
  -[DLXPCDisconnectHandler setDisconnectCallbacks:]
  -[DLXPCDisconnectHandler setDisconnectResultCallbacks:]
  -[DLXPCDisconnectHandler setDisconnectOptionCallbacks:]
  -[DLXPCDisconnectHandler randomCallbackIdentifier]
  -[DLXPCDisconnectHandler disconnectCallbacks]
  -[DLXPCDisconnectHandler disconnectResultCallbacks]
  -[DLXPCDisconnectHandler disconnectOptionCallbacks]
  -[DLXPCDisconnectHandler disconnectErrorDomain]
  -[DLXPCDisconnectHandler disconnectErrorCode]
  -[DLXPCDisconnectHandler unregisterCallback:]
  -[DLXPCDisconnectHandler registerOptionResultCallback:]
  -[DLXPCDisconnectHandler unregisterOptionResultCallback:]


01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0200 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListenerEndpoint 
