|| __DATA.__objc_data _OBJC_CLASS_$_AXAssetUpdateMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_AXCharacterVoiceAssetPolicy
|| __DATA.__objc_data _OBJC_CLASS_$_AXElementVisionModelAssetPolicy
|| __DATA.__objc_data _OBJC_METACLASS_$_AXAssetUpdateMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_AXCharacterVoiceAssetPolicy
|| __DATA.__objc_data _OBJC_METACLASS_$_AXElementVisionModelAssetPolicy
|| __DATA_CONST.__const _kAXCharacterFaceDefaultsDomain
|| __DATA_CONST.__const _kAXImageCaptionModelAssetType
|| __DATA_CONST.__const _kAXUltronModelAssetType
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AXAsset
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AXAssetAssertionStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AXAssetController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AXAssetPolicy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AXAssetsService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AXImageCaptionModel
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AXImageCaptionModelAssetAssertion
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AXImageCaptionModelAssetPolicy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AXPhoenixAssetPolicy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AXUltronModelAssetPolicy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AXAsset
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AXAssetAssertionStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AXAssetController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AXAssetPolicy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AXAssetsService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AXImageCaptionModel
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AXImageCaptionModelAssetAssertion
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AXImageCaptionModelAssetPolicy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AXPhoenixAssetPolicy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AXUltronModelAssetPolicy
|| __TEXT.__const _AXAssetLoaderVersionNumber
|| __TEXT.__const _AXAssetLoaderVersionString
|| __TEXT.__const _kAXImageCaptionModelAssetMaximumCompatibilityVersion
|| __TEXT.__const _kAXImageCaptionModelAssetMinimumCompatibilityVersion
|| __TEXT.__text _AXAssetBundle
|| __TEXT.__text _AXAssetLocalizedString
|| __TEXT.__text _AXAssetMakeErrorForDownloadResult
|| __TEXT.__text _AXAssetMakeErrorForPurgeResult
|| __TEXT.__text _AXAssetMakeErrorForQueryResult
|| __TEXT.__text _AXAssetMakeError_
|| __TEXT.__text __AXAssetMakeError
|| __TEXT.__text __AXCreateAXAssetsServiceInterface
__ AXCoreUtilities: _AXLogAssetLoader
__ AXCoreUtilities: _OBJC_CLASS_$_AXDispatchTimer
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: ___CFConstantStringClassReference
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSRequestConcreteImplementation
__ Foundation: _NSTemporaryDirectory
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ SoftLinking: __sl_dlopen_audited
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_storeStrong
AXPhoenixAssetPolicy : AXAssetPolicy
  // instance methods
  -[AXPhoenixAssetPolicy assetType]
  -[AXPhoenixAssetPolicy launchActivityIdentifier]
  -[AXPhoenixAssetPolicy shouldCopyLocally]


AXImageCaptionModelAssetAssertion : NSObject /usr/lib/libSystem.B.dylib <AXAssetAssertion>
 @property  unsigned long assertionType
 @property  NSString *clientIdentifier
 @property  NSNumber *minimumCompatibilityVersion
 @property  NSNumber *maximumCompatibilityVersion
 @property  NSString *modelVersion
 @property  NSString *modelLanguage
 @property  NSString *modelStage
 @property  NSString *assetType
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AXImageCaptionModelAssetAssertion assertionWithPropertyListRepresentation:error:]
  +[AXImageCaptionModelAssetAssertion partitionAssertionsWithPropertyListRepresentations:intoVersionLockedAssertions:upgradableAssertions:]
  +[AXImageCaptionModelAssetAssertion assertionsWithPropertyListRepresentations:]

  // instance methods
  -[AXImageCaptionModelAssetAssertion setModelVersion:]
  -[AXImageCaptionModelAssetAssertion assetType]
  -[AXImageCaptionModelAssetAssertion modelVersion]
  -[AXImageCaptionModelAssetAssertion propertyListRepresentation]
  -[AXImageCaptionModelAssetAssertion clientIdentifier]
  -[AXImageCaptionModelAssetAssertion .cxx_destruct]
  -[AXImageCaptionModelAssetAssertion assertionType]
  -[AXImageCaptionModelAssetAssertion setClientIdentifier:]
  -[AXImageCaptionModelAssetAssertion setAssertionType:]
  -[AXImageCaptionModelAssetAssertion setMinimumCompatibilityVersion:]
  -[AXImageCaptionModelAssetAssertion setMaximumCompatibilityVersion:]
  -[AXImageCaptionModelAssetAssertion setModelStage:]
  -[AXImageCaptionModelAssetAssertion setModelLanguage:]
  -[AXImageCaptionModelAssetAssertion minimumCompatibilityVersion]
  -[AXImageCaptionModelAssetAssertion maximumCompatibilityVersion]
  -[AXImageCaptionModelAssetAssertion modelLanguage]
  -[AXImageCaptionModelAssetAssertion modelStage]


AXCharacterVoiceAssetPolicy : AXAssetPolicy
 @property  NSString *language

  // class methods
  +[AXCharacterVoiceAssetPolicy characterVoiceAssetPolicyWithLanguage:]

  // instance methods
  -[AXCharacterVoiceAssetPolicy assetType]
  -[AXCharacterVoiceAssetPolicy init]
  -[AXCharacterVoiceAssetPolicy setLanguage:]
  -[AXCharacterVoiceAssetPolicy .cxx_destruct]
  -[AXCharacterVoiceAssetPolicy language]
  -[AXCharacterVoiceAssetPolicy downloadOptionsForOperation:userInitiated:]
  -[AXCharacterVoiceAssetPolicy shouldDownloadAsset:withInstalledAssets:]
  -[AXCharacterVoiceAssetPolicy assetsToPurgeFromInstalledAssets:]


AXUltronModelAssetPolicy : AXAssetPolicy
  // instance methods
  -[AXUltronModelAssetPolicy assetType]
  -[AXUltronModelAssetPolicy launchActivityIdentifier]
  -[AXUltronModelAssetPolicy shouldCopyLocally]


AXAssetUpdateMonitor : NSObject /usr/lib/libSystem.B.dylib <AXAssetControllerObserver>
 @property  AXAssetController *assetController
 @property  AXAssetPolicy *assetPolicy
 @property  BOOL userInitiated
 @property  BOOL hasInProgressDownloads
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AXAssetUpdateMonitor assetMonitorWithPolicy:]
  +[AXAssetUpdateMonitor assetMonitorWithPolicy:qosClass:]
  +[AXAssetUpdateMonitor assetMonitorWithPolicy:qosClass:targetQueue:]

  // instance methods
  -[AXAssetUpdateMonitor assetPolicy]
  -[AXAssetUpdateMonitor removeUpdateObserver:]
  -[AXAssetUpdateMonitor .cxx_destruct]
  -[AXAssetUpdateMonitor stop]
  -[AXAssetUpdateMonitor setUserInitiated:]
  -[AXAssetUpdateMonitor addUpdateObserver:]
  -[AXAssetUpdateMonitor userInitiated]
  -[AXAssetUpdateMonitor assetController:didFinishRefreshingAssets:wasSuccessful:error:]
  -[AXAssetUpdateMonitor assetController:didFinishDownloadingAsset:wasSuccessful:error:hasRemainingDownloads:]
  -[AXAssetUpdateMonitor assetController]
  -[AXAssetUpdateMonitor setAssetController:]
  -[AXAssetUpdateMonitor _initWithAssetPolicy:qosClass:targetQueue:]
  -[AXAssetUpdateMonitor logInfo:]
  -[AXAssetUpdateMonitor hasInProgressDownloads]
  -[AXAssetUpdateMonitor _workerQueue_refreshAssetsAfterDelay:canRefreshCatalog:]
  -[AXAssetUpdateMonitor _performWithinLock:]
  -[AXAssetUpdateMonitor refreshAssetsAfterDelay:]
  -[AXAssetUpdateMonitor _purgeUnneededAssetsFromInstalledAssets:]
  -[AXAssetUpdateMonitor _updateCachedInstalledAssets:]


AXAssetAssertionStore : NSObject /usr/lib/libSystem.B.dylib
 @property  NSUserDefaults *defaults

  // class methods
  +[AXAssetAssertionStore store]

  // instance methods
  -[AXAssetAssertionStore defaults]
  -[AXAssetAssertionStore .cxx_destruct]
  -[AXAssetAssertionStore _init]
  -[AXAssetAssertionStore setDefaults:]
  -[AXAssetAssertionStore _performWithLock:]
  -[AXAssetAssertionStore _mutateAssertionsForAssetType:assertions:mutationBlock:]
  -[AXAssetAssertionStore _mutateAssetAssertions:]
  -[AXAssetAssertionStore requestAssertion:]
  -[AXAssetAssertionStore discardAssertion:]
  -[AXAssetAssertionStore discardAllAssertionsOfType:heldByClient:]
  -[AXAssetAssertionStore discardAllAssertionsOfType:]
  -[AXAssetAssertionStore heldAssertionsForAssetType:]


AXElementVisionModelAssetPolicy : AXAssetPolicy
  // instance methods
  -[AXElementVisionModelAssetPolicy assetType]
  -[AXElementVisionModelAssetPolicy launchActivityIdentifier]
  -[AXElementVisionModelAssetPolicy shouldDownloadAsset:withInstalledAssets:]


AXAssetPolicy : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *assetType
 @property  NSNumber *minSupportedFormatVersion
 @property  NSNumber *maxSupportedFormatVersion
 @property  double downloadResourceTimeout
 @property  double updateCatalogTimeout
 @property  double refreshRetryInterval
 @property  double downloadRetryInterval
 @property  BOOL shouldCopyLocally
 @property  NSString *launchActivityIdentifier
 @property  double updateInterval

  // class methods
  +[AXAssetPolicy policy]

  // instance methods
  -[AXAssetPolicy updateInterval]
  -[AXAssetPolicy assetType]
  -[AXAssetPolicy setUpdateInterval:]
  -[AXAssetPolicy minSupportedFormatVersion]
  -[AXAssetPolicy maxSupportedFormatVersion]
  -[AXAssetPolicy init]
  -[AXAssetPolicy .cxx_destruct]
  -[AXAssetPolicy isEqual:]
  -[AXAssetPolicy launchActivityIdentifier]
  -[AXAssetPolicy shouldCopyLocally]
  -[AXAssetPolicy downloadOptionsForOperation:userInitiated:]
  -[AXAssetPolicy shouldDownloadAsset:withInstalledAssets:]
  -[AXAssetPolicy assetsToPurgeFromInstalledAssets:]
  -[AXAssetPolicy refreshRetryInterval]
  -[AXAssetPolicy assetsToDownloadFromRefreshedAssets:]
  -[AXAssetPolicy downloadRetryInterval]
  -[AXAssetPolicy isAssetSupportedBasedOnMinMaxFormatVersion:]
  -[AXAssetPolicy isAssetContentVersion:greatherThanInstalledAssets:]
  -[AXAssetPolicy setDownloadResourceTimeout:]
  -[AXAssetPolicy setUpdateCatalogTimeout:]
  -[AXAssetPolicy setRefreshRetryInterval:]
  -[AXAssetPolicy setDownloadRetryInterval:]
  -[AXAssetPolicy setMinSupportedFormatVersion:]
  -[AXAssetPolicy setMaxSupportedFormatVersion:]
  -[AXAssetPolicy downloadResourceTimeout]
  -[AXAssetPolicy updateCatalogTimeout]
  -[AXAssetPolicy newAssetQuery]


AXAsset : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSString *characterVoiceLanguage
 @property  NSString *characterVoiceName
 @property  AXImageCaptionModel *imageCaptionModel
 @property  NSURL *originalURL
 @property  NSURL *localCopyURL
 @property  MAAsset *maAsset
 @property  BOOL isInstalled
 @property  BOOL isDownloading
 @property  NSString *assetId
 @property  NSString *assetType
 @property  unsigned long contentVersion
 @property  unsigned long compatibilityVersion
 @property  unsigned long formatVersion
 @property  NSURL *localURL
 @property  NSDictionary *properties
 @property  NSNumber *downloadSize
 @property  NSNumber *unarchivedFileSize

  // class methods
  +[AXAsset supportsSecureCoding]
  +[AXAsset newsestCompatibleImageCaptionModelAssetFromAssets:withStage:language:isInstalled:isDownloadable:]
  +[AXAsset assetsFromMAAssets:]
  +[AXAsset archivedAssets:error:]
  +[AXAsset unarchivedAssets:error:]
  +[AXAsset installedAssets:]
  +[AXAsset downloadableAssets:]

  // instance methods
  -[AXAsset originalURL]
  -[AXAsset assetType]
  -[AXAsset isInstalled]
  -[AXAsset assetId]
  -[AXAsset contentVersion]
  -[AXAsset localURL]
  -[AXAsset formatVersion]
  -[AXAsset .cxx_destruct]
  -[AXAsset downloadSize]
  -[AXAsset encodeWithCoder:]
  -[AXAsset maAsset]
  -[AXAsset compatibilityVersion]
  -[AXAsset isEqual:]
  -[AXAsset isDownloading]
  -[AXAsset properties]
  -[AXAsset initWithCoder:]
  -[AXAsset setOriginalURL:]
  -[AXAsset characterVoiceLanguage]
  -[AXAsset characterVoiceName]
  -[AXAsset initWithMAAsset:]
  -[AXAsset resetPropertiesFromMAAsset:]
  -[AXAsset assetStateIsInstalled:]
  -[AXAsset refreshMAAsset]
  -[AXAsset isEquivalentToMAAsset:]
  -[AXAsset unarchivedFileSize]
  -[AXAsset copyLocally]
  -[AXAsset localCopyURL]
  -[AXAsset setLocalCopyURL:]
  -[AXAsset imageCaptionModel]
  -[AXAsset assertionForVersionLockedImageCaptionModelAsset:]


AXImageCaptionModelAssetPolicy : AXAssetPolicy
  // class methods
  +[AXImageCaptionModelAssetPolicy assertionForNewsestCompatibleImageCaptionModelAssetWithStage:language:clientIdentifier:]

  // instance methods
  -[AXImageCaptionModelAssetPolicy assetType]
  -[AXImageCaptionModelAssetPolicy launchActivityIdentifier]
  -[AXImageCaptionModelAssetPolicy assetsToPurgeFromInstalledAssets:]
  -[AXImageCaptionModelAssetPolicy assetsToDownloadFromRefreshedAssets:]
  -[AXImageCaptionModelAssetPolicy _partitionAssets:intoValidAssets:invalidAssets:]


AXImageCaptionModel : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *name
 @property  NSString *version
 @property  NSString *stage
 @property  NSString *language

  // instance methods
  -[AXImageCaptionModel .cxx_destruct]
  -[AXImageCaptionModel name]
  -[AXImageCaptionModel stage]
  -[AXImageCaptionModel version]
  -[AXImageCaptionModel initWithModelProperties:]
  -[AXImageCaptionModel language]


AXAssetsService : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[AXAssetsService init]
  -[AXAssetsService xpcConnection]
  -[AXAssetsService dealloc]
  -[AXAssetsService .cxx_destruct]
  -[AXAssetsService _destroyXPCConnection]
  -[AXAssetsService _serviceProxy]
  -[AXAssetsService refreshAssetCatalogForPolicy:withOverrideTimeout:]
  -[AXAssetsService updateAssetForPolicy:]


AXAssetController : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_dispatch_queue> *mobileAssetQueue
 @property  AXAssetPolicy *assetPolicy
 @property  BOOL userInitiated
 @property  BOOL hasInProgressDownloads

  // class methods
  +[AXAssetController assetControllerWithPolicy:]
  +[AXAssetController assetControllerWithPolicy:qosClass:]

  // instance methods
  -[AXAssetController registerForNotifications]
  -[AXAssetController assetPolicy]
  -[AXAssetController .cxx_destruct]
  -[AXAssetController setUserInitiated:]
  -[AXAssetController userInitiated]
  -[AXAssetController removeObserver:]
  -[AXAssetController logDebug:]
  -[AXAssetController addObserver:]
  -[AXAssetController refreshAssetsByForceUpdatingCatalog:updatingCatalogIfNeeded:]
  -[AXAssetController logInfo:]
  -[AXAssetController hasInProgressDownloads]
  -[AXAssetController purgeAssets:]
  -[AXAssetController downloadAssets:successStartBlock:]
  -[AXAssetController _initWithAssetPolicy:qosClass:]
  -[AXAssetController _refreshQueue_refreshAssets:]
  -[AXAssetController refreshAssetsByForceUpdatingCatalog:updatingCatalogIfNeeded:catalogRefreshOverrideTimeout:]
  -[AXAssetController mobileAssetQueue]
  -[AXAssetController logError:]
  -[AXAssetController _updateCatalogWithOverrideTimeout:completion:]
  -[AXAssetController _queue_refreshAssets:]
  -[AXAssetController performWithinLock:]
  -[AXAssetController _queue_downloadAssets:successStartBlock:]
  -[AXAssetController _queue_purgeAssets:]
  -[AXAssetController _queue_updateDownloadPriorityIfNecessary]
  -[AXAssetController _handleAssetProgressUpdate:progressNotification:]
  -[AXAssetController performBlockOnAssetObservers:]
  -[AXAssetController addInProgressAsset:]
  -[AXAssetController removeInProgressAsset:]
  -[AXAssetController replaceCachedAssetsWithAssets:error:]
  -[AXAssetController _handleAssetDownloadStarted:]
  -[AXAssetController _handleAssetDownloadCompletion:downloadResult:]
  -[AXAssetController deregisterForNotifications]
  -[AXAssetController getCachedAvailableAssets:]
  -[AXAssetController getCachedDownloadedAssets:]


01 00 0100 /System/Library/PrivateFrameworks/AXCoreUtilities.framework/AXCoreUtilities: AXDispatchTimer 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0300 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
