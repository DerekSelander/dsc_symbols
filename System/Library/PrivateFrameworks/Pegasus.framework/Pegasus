|| __DATA_CONST.__const _PGPegasusErrorDomain
|| __DATA_CONST.__const _PGPictureInPictureProxyPictureInPictureActiveChangedNotification
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PGPictureInPictureApplication
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PGPictureInPictureController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PGPictureInPictureProxy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PGPictureInPictureViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PGPictureInPictureApplication
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PGPictureInPictureController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PGPictureInPictureProxy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PGPictureInPictureViewController
__ BackBoardServices: _BKSApplicationStateDisplayIDKey
__ BackBoardServices: _BKSTouchDeliveryPolicyServerGetProxyWithErrorHandler
__ BackBoardServices: _OBJC_CLASS_$_BKSAnimationFenceHandle
__ BackBoardServices: _OBJC_CLASS_$_BKSApplicationStateMonitor
__ BackBoardServices: _OBJC_CLASS_$_BKSProcessAssertion
__ BackBoardServices: _OBJC_CLASS_$_BKSTouchDeliveryPolicy
__ BackBoardServices: _OBJC_CLASS_$_BKSTouchDeliveryPolicyAssertion
__ BaseBoard: _BSDispatchMain
__ BaseBoard: _BSFloatGreaterThanFloat
__ CoreFoundation: _NSGenericException
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreGraphics: _CGAffineTransformEqualToTransform
__ CoreGraphics: _CGAffineTransformIdentity
__ CoreGraphics: _CGAffineTransformMakeRotation
__ CoreGraphics: _CGAffineTransformMakeScale
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectIntersection
__ CoreGraphics: _CGRectIsEmpty
__ CoreGraphics: _CGRectIsNull
__ CoreGraphics: _CGRectNull
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ Foundation: _NSClassFromString
__ Foundation: _NSStringFromClass
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSLayoutConstraint
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_CLASS_$_NSXPCListener
__ Foundation: __NSDictionaryOfVariableBindings
__ Foundation: __NSFullMethodName
__ FrontBoardServices: _OBJC_CLASS_$_FBSOpenApplicationOptions
__ FrontBoardServices: _OBJC_CLASS_$_FBSOpenApplicationService
__ QuartzCore: _CATransform3DGetAffineTransform
__ QuartzCore: _CATransform3DMakeAffineTransform
__ QuartzCore: _OBJC_CLASS_$_CABackdropLayer
__ QuartzCore: _OBJC_CLASS_$_CABasicAnimation
__ QuartzCore: _OBJC_CLASS_$_CAFilter
__ QuartzCore: _OBJC_CLASS_$_CATransaction
__ QuartzCore: _kCACornerCurveContinuous
__ QuartzCore: _kCAFilterColorBurnBlendMode
__ QuartzCore: _kCAFilterColorDodgeBlendMode
__ QuartzCore: _kCAFilterColorSaturate
__ QuartzCore: _kCAFilterDarkenSourceOver
__ QuartzCore: _kCAFilterGaussianBlur
__ QuartzCore: _kCAFilterPlusD
__ UIKit: _NSStringFromCGRect
__ UIKit: _NSStringFromCGSize
__ UIKit: _OBJC_CLASS_$_UIActivityIndicatorView
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIButton
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UITapGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_CLASS_$_UIWindow
__ UIKit: _OBJC_CLASS_$__UIBackdropView
__ UIKit: _OBJC_CLASS_$__UIHostedWindow
__ UIKit: _OBJC_CLASS_$__UIHostedWindowHostingHandle
__ UIKit: _OBJC_CLASS_$__UIRemoteView
__ UIKit: _OBJC_METACLASS_$_UIButton
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _OBJC_METACLASS_$__UIHostedWindow
__ UIKit: _OBJC_METACLASS_$__UIHostedWindowHostingHandle
__ UIKit: _UIApp
__ UIKit: _UIApplicationDidBecomeActiveNotification
__ UIKit: _UICeilToViewScale
__ UIKit: _UIGraphicsBeginImageContextWithOptions
__ UIKit: _UIGraphicsEndImageContext
__ UIKit: _UIGraphicsGetImageFromCurrentImageContext
__ UIKit: _UIRectCenteredIntegralRect
__ UIKit: _UIRectFill
__ UIKit: _UIRoundToViewScale
__ UIKit: _UISceneDidActivateNotification
__ UIKit: _UIViewNoIntrinsicMetric
__ UIKitServices: _UISOpenApplicationOptionKeySceneSessionPersistentIdentifier
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
PGPictureInPictureApplication : NSObject /usr/lib/libSystem.B.dylib
 @property  int processIdentifier
 @property  NSString *bundleIdentifier

  // class methods
  +[PGPictureInPictureApplication pictureInPictureApplicationWithProcessIdentifier:]

  // instance methods
  -[PGPictureInPictureApplication init]
  -[PGPictureInPictureApplication dealloc]
  -[PGPictureInPictureApplication .cxx_destruct]
  -[PGPictureInPictureApplication processIdentifier]
  -[PGPictureInPictureApplication bundleIdentifier]
  -[PGPictureInPictureApplication initWithProcessIdentifier:]


PGPictureInPictureController : NSObject /usr/lib/libSystem.B.dylib <NSXPCListenerDelegate, PGPictureInPictureRemoteObjectDelegate>
 @property  BOOL pictureInPictureActive
 @property  NSSet *pictureInPictureApplications
 @property  PGPictureInPictureApplication *activePictureInPictureApplication
 @property  BOOL isStartingStoppingOrCancellingPictureInPicture
 @property  BOOL isStoppingPictureInPictureForAlert
 @property  <PGPictureInPictureControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PGPictureInPictureController isPictureInPictureSupported]

  // instance methods
  -[PGPictureInPictureController init]
  -[PGPictureInPictureController dealloc]
  -[PGPictureInPictureController delegate]
  -[PGPictureInPictureController setDelegate:]
  -[PGPictureInPictureController .cxx_destruct]
  -[PGPictureInPictureController listener:shouldAcceptNewConnection:]
  -[PGPictureInPictureController isPictureInPictureActive]
  -[PGPictureInPictureController isStartingStoppingOrCancellingPictureInPicture]
  -[PGPictureInPictureController _pictureInPictureRemoteObjectIsFaceTime:]
  -[PGPictureInPictureController initialFrameForInteractivePictureInPictureAnimationEnteringBackgroundForApplication:sceneSessionPersistentIdentifier:]
  -[PGPictureInPictureController preferredContentSizeForInteractivePictureInPictureAnimationEnteringBackgroundForApplication:sceneSessionPersistentIdentifier:]
  -[PGPictureInPictureController shouldStartPictureInPictureForApplicationEnteringBackground:sceneSessionPersistentIdentifier:]
  -[PGPictureInPictureController startPictureInPictureForApplicationEnteringBackground:sceneSessionPersistentIdentifier:animated:completionHandler:]
  -[PGPictureInPictureController stopPictureInPictureForApplication:sceneSessionPersistentIdentifier:animated:completionHandler:]
  -[PGPictureInPictureController cancelPictureInPictureForApplication:sceneSessionPersistentIdentifier:]
  -[PGPictureInPictureController _remoteObjectThatShouldStartPictureInPictureEnteringBackgroundForPictureInPictureApplication:sceneSessionPersistentIdentifier:error:]
  -[PGPictureInPictureController _remoteObjectThatCanStopPictureInPictureApplication:sceneSessionPersistentIdentifier:error:]
  -[PGPictureInPictureController _remoteObjectThatCanCancelPictureInPictureApplication:sceneSessionPersistentIdentifier:error:]
  -[PGPictureInPictureController pictureInPictureInterruptionBegan]
  -[PGPictureInPictureController pictureInPictureInterruptionEnded]
  -[PGPictureInPictureController _remoteObjectsForPictureInPictureApplication:]
  -[PGPictureInPictureController _remoteObjectForPictureInPictureApplication:passingTest:error:]
  -[PGPictureInPictureController pictureInPictureRemoteObjectShouldAcceptSetupRequest:]
  -[PGPictureInPictureController pictureInPictureRemoteObjectShouldUpdateCancellationPolicyOnStart:]
  -[PGPictureInPictureController pictureInPictureRemoteObjectShouldCancelActivePictureInPictureOnStart:]
  -[PGPictureInPictureController pictureInPictureRemoteObject:didCreatePictureInPictureViewController:]
  -[PGPictureInPictureController pictureInPictureRemoteObject:willShowPictureInPictureViewController:]
  -[PGPictureInPictureController pictureInPictureRemoteObject:didShowPictureInPictureViewController:]
  -[PGPictureInPictureController pictureInPictureRemoteObject:willHidePictureInPictureViewController:]
  -[PGPictureInPictureController pictureInPictureRemoteObject:didHidePictureInPictureViewController:]
  -[PGPictureInPictureController pictureInPictureRemoteObject:willDestroyPictureInPictureViewController:]
  -[PGPictureInPictureController isStoppingPictureInPictureForAlert]
  -[PGPictureInPictureController initialFrameForInteractivePictureInPictureAnimationEnteringBackgroundForApplication:]
  -[PGPictureInPictureController preferredContentSizeForInteractivePictureInPictureAnimationEnteringBackgroundForApplication:]
  -[PGPictureInPictureController shouldStartPictureInPictureForApplicationEnteringBackground:]
  -[PGPictureInPictureController startPictureInPictureForApplicationEnteringBackground:animated:completionHandler:]
  -[PGPictureInPictureController stopPictureInPictureForApplication:animated:completionHandler:]
  -[PGPictureInPictureController cancelPictureInPictureForApplication:]
  -[PGPictureInPictureController pictureInPictureApplications]
  -[PGPictureInPictureController activePictureInPictureApplication]


__PGButton : UIButton /usr/lib/libMobileGestalt.dylib
 @property  long long buttonStyle

  // instance methods
  -[__PGButton initWithCoder:]
  -[__PGButton .cxx_destruct]
  -[__PGButton setBounds:]
  -[__PGButton initWithFrame:]
  -[__PGButton setHighlighted:]
  -[__PGButton setImage:forState:]
  -[__PGButton setBackgroundImage:forState:]
  -[__PGButton initWithButtonStyle:]
  -[__PGButton buttonStyle]
  -[__PGButton _updateHighlightImageView]


PGSetterThrottler : NSObject /usr/lib/libSystem.B.dylib
 @property  id value

  // instance methods
  -[PGSetterThrottler init]
  -[PGSetterThrottler dealloc]
  -[PGSetterThrottler .cxx_destruct]
  -[PGSetterThrottler value]
  -[PGSetterThrottler setValue:]
  -[PGSetterThrottler _setValue]
  -[PGSetterThrottler initWithBlock:usingQueue:]


PGHostedWindow : _UIHostedWindow /usr/lib/libMobileGestalt.dylib
 @property  PGHostedWindowHostingHandle *hostedWindowHostingHandle

  // instance methods
  -[PGHostedWindow dealloc]
  -[PGHostedWindow initWithFrame:]
  -[PGHostedWindow canBecomeFirstResponder]
  -[PGHostedWindow _canBecomeKeyWindow]
  -[PGHostedWindow hostedWindowHostingHandle]


PGHostedWindowHostingHandle : _UIHostedWindowHostingHandle /usr/lib/libMobileGestalt.dylib

PGPlaybackProgressIndicator : UIView /usr/lib/libMobileGestalt.dylib
 @property  PGPlaybackProgress *playbackProgress
 @property  NSArray *loadedTimeRanges

  // instance methods
  -[PGPlaybackProgressIndicator dealloc]
  -[PGPlaybackProgressIndicator .cxx_destruct]
  -[PGPlaybackProgressIndicator setBounds:]
  -[PGPlaybackProgressIndicator loadedTimeRanges]
  -[PGPlaybackProgressIndicator setLoadedTimeRanges:]
  -[PGPlaybackProgressIndicator intrinsicContentSize]
  -[PGPlaybackProgressIndicator initWithFrame:]
  -[PGPlaybackProgressIndicator playbackProgress]
  -[PGPlaybackProgressIndicator setPlaybackProgress:]
  -[PGPlaybackProgressIndicator _updatePlaybackProgressMaskViewMaskRanges]
  -[PGPlaybackProgressIndicator _updatePlaybackProgressTimer]
  -[PGPlaybackProgressIndicator _updateLoadedTimeRangesMaskViewMaskRanges]


_PGPlaybackProgressIndicatorRangesView : UIView /usr/lib/libMobileGestalt.dylib
 @property  UIColor *rangeColor
 @property  NSArray *ranges

  // instance methods
  -[_PGPlaybackProgressIndicatorRangesView dealloc]
  -[_PGPlaybackProgressIndicatorRangesView .cxx_destruct]
  -[_PGPlaybackProgressIndicatorRangesView initWithFrame:]
  -[_PGPlaybackProgressIndicatorRangesView drawRect:]
  -[_PGPlaybackProgressIndicatorRangesView setRangeColor:]
  -[_PGPlaybackProgressIndicatorRangesView setRanges:]
  -[_PGPlaybackProgressIndicatorRangesView ranges]
  -[_PGPlaybackProgressIndicatorRangesView rangeColor]


PGLayerHostView : UIView /usr/lib/libMobileGestalt.dylib
 @property  PGHostedWindowHostingHandle *hostedWindowHostingHandle
 @property  {CGAffineTransform=dddddd} layerHostTransform

  // instance methods
  -[PGLayerHostView dealloc]
  -[PGLayerHostView .cxx_destruct]
  -[PGLayerHostView initWithFrame:]
  -[PGLayerHostView didMoveToWindow]
  -[PGLayerHostView setHostedWindowHostingHandle:]
  -[PGLayerHostView hostedWindowHostingHandle]
  -[PGLayerHostView _manageSharingOfTouchesBetweenClientAndHostContext]
  -[PGLayerHostView layerHostTransform]
  -[PGLayerHostView setLayerHostTransform:]


_PGBundle : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[_PGBundle bundle]


PGChevronView : UIView /usr/lib/libMobileGestalt.dylib
 @property  long long state

  // instance methods
  -[PGChevronView dealloc]
  -[PGChevronView .cxx_destruct]
  -[PGChevronView state]
  -[PGChevronView setState:]
  -[PGChevronView intrinsicContentSize]
  -[PGChevronView initWithFrame:]
  -[PGChevronView setState:animated:]


PGPlaybackProgress : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  double anchorProgress
 @property  double anchorTimestamp
 @property  double rate
 @property  double currentProgress

  // class methods
  +[PGPlaybackProgress supportsSecureCoding]
  +[PGPlaybackProgress currentTimestamp]
  +[PGPlaybackProgress playbackProgressWithAnchorProgress:anchorTimestamp:rate:]

  // instance methods
  -[PGPlaybackProgress init]
  -[PGPlaybackProgress dealloc]
  -[PGPlaybackProgress isEqual:]
  -[PGPlaybackProgress encodeWithCoder:]
  -[PGPlaybackProgress initWithCoder:]
  -[PGPlaybackProgress currentProgress]
  -[PGPlaybackProgress rate]
  -[PGPlaybackProgress initWithAnchorProgress:anchorTimestamp:rate:]
  -[PGPlaybackProgress progressForTimestamp:]
  -[PGPlaybackProgress anchorProgress]
  -[PGPlaybackProgress anchorTimestamp]


PGPictureInPictureRemoteObject : NSObject /usr/lib/libSystem.B.dylib <PGPictureInPictureRemoteObjectInterface, PGPictureInPictureViewControllerDelegate>
 @property  NSXPCConnection *connection
 @property  NSObject<OS_dispatch_queue> *queue
 @property  PGPictureInPictureApplication *pictureInPictureApplication
 @property  <PGPictureInPictureRemoteObjectDelegate> *delegate
 @property  BOOL shouldStartPictureInPictureEnteringBackground
 @property  BOOL canStopPictureInPicture
 @property  BOOL canCancelPictureInPicture
 @property  BOOL isStartingStoppingOrCancellingPictureInPicture
 @property  unsigned long transitioningState
 @property  BOOL pictureInPicturePossible
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} initialLayerFrame
 @property  {CGSize=dd} preferredContentSize
 @property  NSString *sourceSceneSessionPersistentIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PGPictureInPictureRemoteObject init]
  -[PGPictureInPictureRemoteObject dealloc]
  -[PGPictureInPictureRemoteObject invalidate]
  -[PGPictureInPictureRemoteObject queue]
  -[PGPictureInPictureRemoteObject delegate]
  -[PGPictureInPictureRemoteObject setDelegate:]
  -[PGPictureInPictureRemoteObject .cxx_destruct]
  -[PGPictureInPictureRemoteObject cancel]
  -[PGPictureInPictureRemoteObject resume]
  -[PGPictureInPictureRemoteObject suspend]
  -[PGPictureInPictureRemoteObject connection]
  -[PGPictureInPictureRemoteObject initWithConnection:]
  -[PGPictureInPictureRemoteObject preferredContentSize]
  -[PGPictureInPictureRemoteObject isPictureInPicturePossible]
  -[PGPictureInPictureRemoteObject setPictureInPicturePossible:]
  -[PGPictureInPictureRemoteObject sourceSceneSessionPersistentIdentifier]
  -[PGPictureInPictureRemoteObject matchesSceneSessionIdentifier:]
  -[PGPictureInPictureRemoteObject isStartingStoppingOrCancellingPictureInPicture]
  -[PGPictureInPictureRemoteObject transitioningState]
  -[PGPictureInPictureRemoteObject initialLayerFrame]
  -[PGPictureInPictureRemoteObject startPictureInPictureEnteringBackgroundAnimated:withCompletionHandler:]
  -[PGPictureInPictureRemoteObject stopPictureInPictureAnimated:withCompletionHandler:]
  -[PGPictureInPictureRemoteObject pictureInPictureInterruptionBegan]
  -[PGPictureInPictureRemoteObject pictureInPictureInterruptionEnded]
  -[PGPictureInPictureRemoteObject pictureInPictureApplication]
  -[PGPictureInPictureRemoteObject shouldStartPictureInPictureEnteringBackground]
  -[PGPictureInPictureRemoteObject canStopPictureInPicture]
  -[PGPictureInPictureRemoteObject canCancelPictureInPicture]
  -[PGPictureInPictureRemoteObject initializePictureInPictureWithControlsStyle:preferredContentSize:completionHandler:]
  -[PGPictureInPictureRemoteObject setupStartAnimated:hostedWindowHostingHandle:sceneSessionPersistentIdentifier:preferredContentSize:initialInterfaceOrientation:initialLayerFrame:completionHandler:]
  -[PGPictureInPictureRemoteObject startPictureInPictureAnimated:completionHandler:]
  -[PGPictureInPictureRemoteObject updateInitialLayerFrameForInteractiveTransitionAnimationUponBackgrounding:withCompletionHandler:]
  -[PGPictureInPictureRemoteObject updateSourceSceneSessionPersistentIdentifierForInteractiveTransitionAnimationUponBackgrounding:withCompletionHandler:]
  -[PGPictureInPictureRemoteObject updatePreferredContentSize:withCompletionHandler:]
  -[PGPictureInPictureRemoteObject checkActivePictureInPictureCancellationPolicyWithCompletion:]
  -[PGPictureInPictureRemoteObject rotateContentContainer:withCompletionHandler:]
  -[PGPictureInPictureRemoteObject setupStopAnimated:activateApplicationIfNeeded:completionHandler:]
  -[PGPictureInPictureRemoteObject stopPictureInPictureAnimated:withFinalInterfaceOrientation:finalLayerFrame:completionHandler:]
  -[PGPictureInPictureRemoteObject cleanupWithCompletionHandler:]
  -[PGPictureInPictureRemoteObject setPictureInPictureShouldStartWhenEnteringBackground:completionHandler:]
  -[PGPictureInPictureRemoteObject setControlsStyle:animated:completionHandler:]
  -[PGPictureInPictureRemoteObject setShouldShowAlternateActionButtonImage:completionHandler:]
  -[PGPictureInPictureRemoteObject setShouldShowLoadingIndicator:completionHandler:]
  -[PGPictureInPictureRemoteObject setPlaybackProgress:completionHandler:]
  -[PGPictureInPictureRemoteObject setLoadedTimeRanges:completionHandler:]
  -[PGPictureInPictureRemoteObject _processAssertionForProcessIdentifier:]
  -[PGPictureInPictureRemoteObject _invalidateInterruptionBeganFinishTaskAssertion]
  -[PGPictureInPictureRemoteObject _finishTaskAssertionForProcessIdentifier:]
  -[PGPictureInPictureRemoteObject _tearDownAndNotifyClientAboutCancellation:]
  -[PGPictureInPictureRemoteObject pictureInPictureViewController:updateHostedWindowSize:animationType:initialSpringVelocity:]
  -[PGPictureInPictureRemoteObject pictureInPictureViewControllerHostedWindowSizeChangeBegan:]
  -[PGPictureInPictureRemoteObject pictureInPictureViewControllerHostedWindowSizeChangeEnded:]
  -[PGPictureInPictureRemoteObject pictureInPictureViewControllerStopButtonTapped:]
  -[PGPictureInPictureRemoteObject pictureInPictureViewControllerActionButtonTapped:]
  -[PGPictureInPictureRemoteObject pictureInPictureViewControllerCancelButtonTapped:]


PGPictureInPictureViewController : UIViewController /usr/lib/libMobileGestalt.dylib <PGPictureInPictureControlsViewControllerDelegate>
 @property  @? waitForUIFinalizationCompletionBlock
 @property  long long controlsStyle
 @property  PGHostedWindowHostingHandle *hostedWindowHostingHandle
 @property  BOOL showsAlternateActionButtonImage
 @property  BOOL showsLoadingIndicator
 @property  PGPlaybackProgress *playbackProgress
 @property  NSArray *loadedTimeRanges
 @property  <PGPictureInPictureViewControllerDelegate> *delegate
 @property  PGPictureInPictureApplication *application
 @property  <PGPictureInPictureViewControllerContentContainer> *contentContainer
 @property  BOOL canStartShowingChrome
 @property  UIView *contentContainerView
 @property  long long stashState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PGPictureInPictureViewController contentViewCornerRadius]
  +[PGPictureInPictureViewController animateViewWithAnimationType:initialSpringVelocity:animations:completion:]

  // instance methods
  -[PGPictureInPictureViewController dealloc]
  -[PGPictureInPictureViewController initWithCoder:]
  -[PGPictureInPictureViewController delegate]
  -[PGPictureInPictureViewController setDelegate:]
  -[PGPictureInPictureViewController .cxx_destruct]
  -[PGPictureInPictureViewController loadedTimeRanges]
  -[PGPictureInPictureViewController setLoadedTimeRanges:]
  -[PGPictureInPictureViewController loadView]
  -[PGPictureInPictureViewController initWithNibName:bundle:]
  -[PGPictureInPictureViewController preferredContentSize]
  -[PGPictureInPictureViewController setPreferredContentSize:]
  -[PGPictureInPictureViewController application]
  -[PGPictureInPictureViewController setHostedWindowHostingHandle:]
  -[PGPictureInPictureViewController hostedWindowHostingHandle]
  -[PGPictureInPictureViewController playbackProgress]
  -[PGPictureInPictureViewController setPlaybackProgress:]
  -[PGPictureInPictureViewController controlsStyle]
  -[PGPictureInPictureViewController setControlsStyle:]
  -[PGPictureInPictureViewController setShowsLoadingIndicator:]
  -[PGPictureInPictureViewController showsLoadingIndicator]
  -[PGPictureInPictureViewController setControlsStyle:animated:completionHandler:]
  -[PGPictureInPictureViewController hostedWindowSizeChangeBegan]
  -[PGPictureInPictureViewController hostedWindowSizeChangeEnded]
  -[PGPictureInPictureViewController performSuspendAnimationWithCompletionHandler:]
  -[PGPictureInPictureViewController performResumeAnimationWithCompletionHandler:]
  -[PGPictureInPictureViewController performStopAnimated:withFinalInterfaceOrientation:finalLayerFrame:completionHandler:]
  -[PGPictureInPictureViewController initWithApplication:controlsStyle:]
  -[PGPictureInPictureViewController setShowsAlternateActionButtonImage:]
  -[PGPictureInPictureViewController prepareStartAnimationWithInitialInterfaceOrientation:initialLayerFrame:completionHandler:]
  -[PGPictureInPictureViewController performStartAnimated:withCompletionHandler:]
  -[PGPictureInPictureViewController performRotateAnimationWithRotation:completionHandler:]
  -[PGPictureInPictureViewController prepareStopAnimationWithCompletionHandler:]
  -[PGPictureInPictureViewController setStashState:animated:]
  -[PGPictureInPictureViewController acquireInterfaceOrientationLock]
  -[PGPictureInPictureViewController relinquishInterfaceOrientationLock]
  -[PGPictureInPictureViewController showChrome:animated:]
  -[PGPictureInPictureViewController _handleTapGestureRecognizer:]
  -[PGPictureInPictureViewController stashState]
  -[PGPictureInPictureViewController _performStartAnimationWithCompletionHandler:]
  -[PGPictureInPictureViewController _performStopAnimationWithFinalInterfaceOrientation:finalLayerFrame:completionHandler:]
  -[PGPictureInPictureViewController _stopShowingControlsAnimated:]
  -[PGPictureInPictureViewController showsAlternateActionButtonImage]
  -[PGPictureInPictureViewController pictureInPictureControlsViewControllerStopButtonTapped:]
  -[PGPictureInPictureViewController pictureInPictureControlsViewControllerActionButtonTapped:]
  -[PGPictureInPictureViewController pictureInPictureControlsViewControllerCancelButtonTapped:]
  -[PGPictureInPictureViewController pictureInPictureControlsViewControllerShouldHandleTapGesture:]
  -[PGPictureInPictureViewController pictureInPictureControlsViewControllerShouldHandleDoubleTapGesture:]
  -[PGPictureInPictureViewController setStashState:]
  -[PGPictureInPictureViewController setContentContainer:]
  -[PGPictureInPictureViewController setCanStartShowingChrome:]
  -[PGPictureInPictureViewController updateHostedWindowSize:]
  -[PGPictureInPictureViewController updateLayerHostTransform:]
  -[PGPictureInPictureViewController contentContainerView]
  -[PGPictureInPictureViewController contentContainer]
  -[PGPictureInPictureViewController canStartShowingChrome]
  -[PGPictureInPictureViewController waitForUIFinalizationCompletionBlock]
  -[PGPictureInPictureViewController setWaitForUIFinalizationCompletionBlock:]


PGLoadingIndicatorView : UIView /usr/lib/libMobileGestalt.dylib
  // instance methods
  -[PGLoadingIndicatorView dealloc]
  -[PGLoadingIndicatorView .cxx_destruct]
  -[PGLoadingIndicatorView setHidden:]
  -[PGLoadingIndicatorView initWithFrame:]


PGBackdropView : __PGView
 @property  NSString *groupName
 @property  double gaussianBlurRadius
 @property  double saturationAmount
 @property  double scale

  // class methods
  +[PGBackdropView layerClass]

  // instance methods
  -[PGBackdropView dealloc]
  -[PGBackdropView scale]
  -[PGBackdropView setScale:]
  -[PGBackdropView groupName]
  -[PGBackdropView setGroupName:]
  -[PGBackdropView initWithFrame:]
  -[PGBackdropView setGaussianBlurRadius:]
  -[PGBackdropView setSaturationAmount:]
  -[PGBackdropView gaussianBlurRadius]
  -[PGBackdropView saturationAmount]


PGPictureInPictureProxy : NSObject /usr/lib/libSystem.B.dylib <PGPictureInPictureExportedInterface>
 @property  long long controlsStyle
 @property  UIViewController<PGPictureInPictureViewController> *viewController
 @property  <PGPictureInPictureProxyDelegate> *delegate
 @property  BOOL pictureInPicturePossible
 @property  BOOL pictureInPictureActive
 @property  BOOL pictureInPictureSuspended
 @property  BOOL pictureInPictureShouldStartWhenEnteringBackground
 @property  BOOL pictureInPictureWasStartedWhenEnteringBackground
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PGPictureInPictureProxy isPictureInPictureActive]
  +[PGPictureInPictureProxy isPictureInPictureSupported]
  +[PGPictureInPictureProxy _updatePictureInPictureActive:]
  +[PGPictureInPictureProxy pictureInPictureProxyWithControlsStyle:viewController:]

  // instance methods
  -[PGPictureInPictureProxy init]
  -[PGPictureInPictureProxy dealloc]
  -[PGPictureInPictureProxy delegate]
  -[PGPictureInPictureProxy setDelegate:]
  -[PGPictureInPictureProxy .cxx_destruct]
  -[PGPictureInPictureProxy observeValueForKeyPath:ofObject:change:context:]
  -[PGPictureInPictureProxy loadedTimeRanges]
  -[PGPictureInPictureProxy setLoadedTimeRanges:]
  -[PGPictureInPictureProxy viewController]
  -[PGPictureInPictureProxy isPictureInPictureActive]
  -[PGPictureInPictureProxy isPictureInPicturePossible]
  -[PGPictureInPictureProxy startPictureInPicture]
  -[PGPictureInPictureProxy pictureInPictureWasStartedWhenEnteringBackground]
  -[PGPictureInPictureProxy playbackRate]
  -[PGPictureInPictureProxy playbackProgress]
  -[PGPictureInPictureProxy controlsStyle]
  -[PGPictureInPictureProxy setControlsStyle:]
  -[PGPictureInPictureProxy stopPictureInPictureAndRestoreUserInterface:]
  -[PGPictureInPictureProxy preferredContentSizeDidChangeForViewController]
  -[PGPictureInPictureProxy setPlaybackProgress:playbackRate:]
  -[PGPictureInPictureProxy initWithControlsStyle:viewController:]
  -[PGPictureInPictureProxy setPictureInPictureShouldStartWhenEnteringBackground:]
  -[PGPictureInPictureProxy viewFrameForInteractiveTransitionAnimationWhenEnteringBackgroundDidChangeForViewController]
  -[PGPictureInPictureProxy isPictureInPictureSuspended]
  -[PGPictureInPictureProxy actionButtonTapped]
  -[PGPictureInPictureProxy pictureInPictureInterruptionBegan]
  -[PGPictureInPictureProxy pictureInPictureInterruptionEnded]
  -[PGPictureInPictureProxy rotateContentContainer:withCompletionHandler:]
  -[PGPictureInPictureProxy pictureInPictureStartRequestedAnimated:withCompletionHandler:]
  -[PGPictureInPictureProxy pictureInPictureStopRequestedAnimated:withCompletionHandler:]
  -[PGPictureInPictureProxy pictureInPictureCancelRequestedAnimated:withCompletionHandler:]
  -[PGPictureInPictureProxy updatePictureInPicturePossible:]
  -[PGPictureInPictureProxy pictureInPictureSuspended]
  -[PGPictureInPictureProxy pictureInPictureResumed]
  -[PGPictureInPictureProxy pictureInPictureCancelled]
  -[PGPictureInPictureProxy updateHostedWindowSize:animationType:initialSpringVelocity:synchronizationFence:]
  -[PGPictureInPictureProxy hostedWindowSizeChangeBegan]
  -[PGPictureInPictureProxy hostedWindowSizeChangeEnded]
  -[PGPictureInPictureProxy _stopObservingWindowSceneActivationState]
  -[PGPictureInPictureProxy _updateAutoPIPSettingsAndNotifyRemoteObjectIfNeeded]
  -[PGPictureInPictureProxy _viewFrameForTransitionAnimationAssumeApplicationActive:]
  -[PGPictureInPictureProxy _sceneSessionPersistentIdentifierForTransitionAnimationAssumeApplicationActive:]
  -[PGPictureInPictureProxy _startPictureInPictureAnimated:enteringBackground:withCompletionHandler:]
  -[PGPictureInPictureProxy _stopPictureInPictureAnimated:restoreUserInterface:withCompletionHandler:]
  -[PGPictureInPictureProxy setControlsStyle:animated:withCompletionHandler:]
  -[PGPictureInPictureProxy _manageStartAnimated:cancelActiveOnStart:competionHandler:]
  -[PGPictureInPictureProxy _updateCancellationPolicyWithCompletionHandler:]
  -[PGPictureInPictureProxy _didStartWithSuccess:animationType:completionHandler:]
  -[PGPictureInPictureProxy _actuallyStartAnimated:animationType:completionHandler:]
  -[PGPictureInPictureProxy _setupStart:animationType:initialLayerFrame:completionHandler:]
  -[PGPictureInPictureProxy _interfaceOrientationForTransitionAnimationAssumeApplicationActive:]
  -[PGPictureInPictureProxy _isViewControllerWindowSceneActive]
  -[PGPictureInPictureProxy _sourceScene]
  -[PGPictureInPictureProxy _executeDelegateCallbackBlock:assumeApplicationActive:]
  -[PGPictureInPictureProxy _expectedScene]
  -[PGPictureInPictureProxy _updateAutoPIPSettingsAndNotifyRemoteObject]
  -[PGPictureInPictureProxy windowSceneForInteractiveTransitionAnimationWhenEnteringBackgroundDidChangeForViewController]
  -[PGPictureInPictureProxy pictureInPictureShouldStartWhenEnteringBackground]


_PGPictureInPictureConnectionExportedObject : NSObject /usr/lib/libSystem.B.dylib <PGPictureInPictureExportedInterface>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_PGPictureInPictureConnectionExportedObject dealloc]
  -[_PGPictureInPictureConnectionExportedObject .cxx_destruct]
  -[_PGPictureInPictureConnectionExportedObject actionButtonTapped]
  -[_PGPictureInPictureConnectionExportedObject pictureInPictureInterruptionBegan]
  -[_PGPictureInPictureConnectionExportedObject pictureInPictureInterruptionEnded]
  -[_PGPictureInPictureConnectionExportedObject pictureInPictureStartRequestedAnimated:withCompletionHandler:]
  -[_PGPictureInPictureConnectionExportedObject pictureInPictureStopRequestedAnimated:withCompletionHandler:]
  -[_PGPictureInPictureConnectionExportedObject pictureInPictureCancelRequestedAnimated:withCompletionHandler:]
  -[_PGPictureInPictureConnectionExportedObject updatePictureInPicturePossible:]
  -[_PGPictureInPictureConnectionExportedObject pictureInPictureSuspended]
  -[_PGPictureInPictureConnectionExportedObject pictureInPictureResumed]
  -[_PGPictureInPictureConnectionExportedObject pictureInPictureCancelled]
  -[_PGPictureInPictureConnectionExportedObject updateHostedWindowSize:animationType:initialSpringVelocity:synchronizationFence:]
  -[_PGPictureInPictureConnectionExportedObject hostedWindowSizeChangeBegan]
  -[_PGPictureInPictureConnectionExportedObject hostedWindowSizeChangeEnded]
  -[_PGPictureInPictureConnectionExportedObject initWithPictureInPictureProxy:]


PGPictureInPictureControlsViewController : UIViewController /usr/lib/libMobileGestalt.dylib
 @property  long long controlsStyle
 @property  BOOL showsAlternateActionButtonImage
 @property  PGPlaybackProgress *playbackProgress
 @property  NSArray *loadedTimeRanges
 @property  <PGPictureInPictureControlsViewControllerDelegate> *delegate

  // instance methods
  -[PGPictureInPictureControlsViewController dealloc]
  -[PGPictureInPictureControlsViewController initWithCoder:]
  -[PGPictureInPictureControlsViewController delegate]
  -[PGPictureInPictureControlsViewController setDelegate:]
  -[PGPictureInPictureControlsViewController .cxx_destruct]
  -[PGPictureInPictureControlsViewController loadedTimeRanges]
  -[PGPictureInPictureControlsViewController setLoadedTimeRanges:]
  -[PGPictureInPictureControlsViewController loadView]
  -[PGPictureInPictureControlsViewController initWithNibName:bundle:]
  -[PGPictureInPictureControlsViewController viewWillLayoutSubviews]
  -[PGPictureInPictureControlsViewController setHidden:animated:]
  -[PGPictureInPictureControlsViewController _cancelButtonTapped:]
  -[PGPictureInPictureControlsViewController playbackProgress]
  -[PGPictureInPictureControlsViewController setPlaybackProgress:]
  -[PGPictureInPictureControlsViewController controlsStyle]
  -[PGPictureInPictureControlsViewController _handleDoubleTapGestureRecognizer:]
  -[PGPictureInPictureControlsViewController setShowsAlternateActionButtonImage:]
  -[PGPictureInPictureControlsViewController startShowingControlsAnimated:]
  -[PGPictureInPictureControlsViewController stopShowingControlsAnimated:]
  -[PGPictureInPictureControlsViewController initWithControlsStyle:]
  -[PGPictureInPictureControlsViewController showsAlternateActionButtonImage]
  -[PGPictureInPictureControlsViewController _updateControlsVisibilityIfNeeded]
  -[PGPictureInPictureControlsViewController _removeControlForUserInteractionObservation:]
  -[PGPictureInPictureControlsViewController _actionButtonImage]
  -[PGPictureInPictureControlsViewController _showControlsIfNeededAndHideIfPossibleAfterDelayIfPlaying]
  -[PGPictureInPictureControlsViewController _stopButtonTapped:]
  -[PGPictureInPictureControlsViewController _stopButtonBackgroundImage]
  -[PGPictureInPictureControlsViewController _stopButtonImage]
  -[PGPictureInPictureControlsViewController _actionButtonTapped:]
  -[PGPictureInPictureControlsViewController _actionButtonBackgroundImage]
  -[PGPictureInPictureControlsViewController _cancelButtonBackgroundImage]
  -[PGPictureInPictureControlsViewController _cancelButtonImage]
  -[PGPictureInPictureControlsViewController _handleSingleTapGestureRecognizer:]
  -[PGPictureInPictureControlsViewController _handleDoubleDoubleTapGestureRecognizer:]
  -[PGPictureInPictureControlsViewController _addControlForUserInteractionObservation:]
  -[PGPictureInPictureControlsViewController _manageControlsSize]
  -[PGPictureInPictureControlsViewController _setControlsVisibilityNeedsUpdate]
  -[PGPictureInPictureControlsViewController _buttonImageWithName:]
  -[PGPictureInPictureControlsViewController _hideControlsIfPossibleUntilFurtherUserInteraction]
  -[PGPictureInPictureControlsViewController _hideControlsIfPossible]
  -[PGPictureInPictureControlsViewController _showControlsIfNeededAndHideIfPossibleAfterDelayIfPlayingWithDelay:]
  -[PGPictureInPictureControlsViewController _updateControlsVisibility]
  -[PGPictureInPictureControlsViewController _showControlsIfNeeded]
  -[PGPictureInPictureControlsViewController _hideControlsIfPossibleAfterDelayIfPlaying]
  -[PGPictureInPictureControlsViewController _userInteractionObservationControlTouchDown:]
  -[PGPictureInPictureControlsViewController _userInteractionObservationControlTouchUp:]
  -[PGPictureInPictureControlsViewController _showControlsForTouchDown]
  -[PGPictureInPictureControlsViewController _hideControlsForTouchUp]
  -[PGPictureInPictureControlsViewController _toggleControlsVisibilityForUserInteraction]


PGStashedView : UIView /usr/lib/libMobileGestalt.dylib
 @property  BOOL stashed

  // instance methods
  -[PGStashedView dealloc]
  -[PGStashedView .cxx_destruct]
  -[PGStashedView initWithFrame:]
  -[PGStashedView setStashed:]
  -[PGStashedView isStashed]


__PGView : UIView /usr/lib/libMobileGestalt.dylib
 @property  NSArray *animatedLayerProperties

  // instance methods
  -[__PGView .cxx_destruct]
  -[__PGView _shouldAnimatePropertyWithKey:]
  -[__PGView setAnimatedLayerProperties:]
  -[__PGView animatedLayerProperties]


NSLayoutConstraint(PGAdditions)
	// class methods
	+[NSLayoutConstraint(PGAdditions) PG_constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:priority:]

UIView(PGAdditions)
	// class methods
	+[UIView(PGAdditions) PG_animateUsingDefaultTimingWithAnimations:completion:]
	+[UIView(PGAdditions) PG_animateUsingDefaultDampedSpringWithInitialSpringVelocity:animations:completion:]
	+[UIView(PGAdditions) PG_animateUsingDefaultTimingWithOptions:animations:completion:]
	+[UIView(PGAdditions) PG_performWithoutAnimation:]

	// instance methods
	-[UIView(PGAdditions) PG_setAllowsEdgeAntialiasing:]
	-[UIView(PGAdditions) PG_setAllowsGroupBlending:]
	-[UIView(PGAdditions) PG_setAnchorPoint:]
	-[UIView(PGAdditions) PG_setCornerRadius:]
	-[UIView(PGAdditions) PG_setHasRoundedCorners:animated:]
	-[UIView(PGAdditions) PG_cornerRadius]
	-[UIView(PGAdditions) PG_allowsEdgeAntialiasing]
	-[UIView(PGAdditions) PG_allowsGroupBlending]
	-[UIView(PGAdditions) PG_anchorPoint]
	-[UIView(PGAdditions) PG_compositingFilter]
	-[UIView(PGAdditions) PG_setCompositingFilter:]

NSXPCConnection(PGAdditions)
	// instance methods
	-[NSXPCConnection(PGAdditions) PG_remoteObjectProxyWithDebugMethodAndPointerProem:]
	-[NSXPCConnection(PGAdditions) PG_remoteObjectProxyWithDebugMethodAndPointerProem:errorHandler:]

01 00 0300 /System/Library/PrivateFrameworks/BackBoardServices.framework/BackBoardServices: BKSAnimationFenceHandle 
01 00 0300 /System/Library/PrivateFrameworks/BackBoardServices.framework/BackBoardServices: BKSApplicationStateMonitor 
01 00 0300 /System/Library/PrivateFrameworks/BackBoardServices.framework/BackBoardServices: BKSProcessAssertion 
01 00 0300 /System/Library/PrivateFrameworks/BackBoardServices.framework/BackBoardServices: BKSTouchDeliveryPolicy 
01 00 0300 /System/Library/PrivateFrameworks/BackBoardServices.framework/BackBoardServices: BKSTouchDeliveryPolicyAssertion 
01 00 0700 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CABackdropLayer 
01 00 0700 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CABasicAnimation 
01 00 0700 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAFilter 
01 00 0700 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransaction 
01 00 0600 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: FBSOpenApplicationOptions 
01 00 0600 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: FBSOpenApplicationService 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSLayoutConstraint 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0a00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListener 
01 00 0800 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivityIndicatorView 
01 00 0800 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 0800 /System/Library/Frameworks/UIKit.framework/UIKit: UIButton 
01 00 0800 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 0800 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 0800 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 0800 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 0800 /System/Library/Frameworks/UIKit.framework/UIKit: UITapGestureRecognizer 
01 00 0800 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 0800 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 0800 /System/Library/Frameworks/UIKit.framework/UIKit: UIWindow 
01 00 0800 /System/Library/Frameworks/UIKit.framework/UIKit: _UIBackdropView 
01 00 0800 /System/Library/Frameworks/UIKit.framework/UIKit: _UIHostedWindow 
01 00 0800 /System/Library/Frameworks/UIKit.framework/UIKit: _UIHostedWindowHostingHandle 
01 00 0800 /System/Library/Frameworks/UIKit.framework/UIKit: _UIRemoteView 
