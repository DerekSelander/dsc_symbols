|| __DATA.__objc_data _OBJC_CLASS_$_BCSBusinessItemIdentifier
|| __DATA.__objc_data _OBJC_CLASS_$_BCSBusinessLinkContentItem
|| __DATA.__objc_data _OBJC_CLASS_$_BCSBusinessLinkFetchMetric
|| __DATA.__objc_data _OBJC_CLASS_$_BCSBusinessLinkHashFetchMetric
|| __DATA.__objc_data _OBJC_CLASS_$_BCSBusinessLinkRegisteredMetric
|| __DATA.__objc_data _OBJC_CLASS_$_BCSCallToActionItem
|| __DATA.__objc_data _OBJC_CLASS_$_BCSChatSuggestFetchMetric
|| __DATA.__objc_data _OBJC_CLASS_$_BCSChatSuggestRegisteredMetric
|| __DATA.__objc_data _OBJC_CLASS_$_BCSCoalesceHelper
|| __DATA.__objc_data _OBJC_CLASS_$_BCSCoalesceObjectBloomFilterAndConfig
|| __DATA.__objc_data _OBJC_CLASS_$_BCSCoalesceObjectConfig
|| __DATA.__objc_data _OBJC_CLASS_$_BCSCoalesceObjectItems
|| __DATA.__objc_data _OBJC_CLASS_$_BCSCoalesceObjectShard
|| __DATA.__objc_data _OBJC_CLASS_$_BCSConfigPrefetchMetric
|| __DATA.__objc_data _OBJC_CLASS_$_BCSConfigRemoteFetch
|| __DATA.__objc_data _OBJC_CLASS_$_BCSConfigResolutionMetric
|| __DATA.__objc_data _OBJC_CLASS_$_BCSFlagMeasurement
|| __DATA.__objc_data _OBJC_CLASS_$_BCSHashService
|| __DATA.__objc_data _OBJC_CLASS_$_BCSItemResolutionMetric
|| __DATA.__objc_data _OBJC_CLASS_$_BCSLinkItem
|| __DATA.__objc_data _OBJC_CLASS_$_BCSLinkItemIdentifier
|| __DATA.__objc_data _OBJC_CLASS_$_BCSMeasurement
|| __DATA.__objc_data _OBJC_CLASS_$_BCSMeasurementFactory
|| __DATA.__objc_data _OBJC_CLASS_$_BCSMegashardPrefetchMetric
|| __DATA.__objc_data _OBJC_CLASS_$_BCSMetric
|| __DATA.__objc_data _OBJC_CLASS_$_BCSMetricFactory
|| __DATA.__objc_data _OBJC_CLASS_$_BCSOpenHours
|| __DATA.__objc_data _OBJC_CLASS_$_BCSOperationGroupFactory
|| __DATA.__objc_data _OBJC_CLASS_$_BCSPersistentBusinessItemObject
|| __DATA.__objc_data _OBJC_CLASS_$_BCSPhoneNumberFormatter
|| __DATA.__objc_data _OBJC_CLASS_$_BCSPhoneNumberNormalizer
|| __DATA.__objc_data _OBJC_CLASS_$_BCSRemoteFetch
|| __DATA.__objc_data _OBJC_CLASS_$_BCSShardIdentifier
|| __DATA.__objc_data _OBJC_CLASS_$_BCSShardResolutionMetric
|| __DATA.__objc_data _OBJC_CLASS_$_BCSTimingMeasurement
|| __DATA.__objc_data _OBJC_CLASS_$_BCSURLNormalizer
|| __DATA.__objc_data _OBJC_CLASS_$_BCSVisibilityItem
|| __DATA.__objc_data _OBJC_METACLASS_$_BCSBusinessItemIdentifier
|| __DATA.__objc_data _OBJC_METACLASS_$_BCSBusinessLinkContentItem
|| __DATA.__objc_data _OBJC_METACLASS_$_BCSBusinessLinkFetchMetric
|| __DATA.__objc_data _OBJC_METACLASS_$_BCSBusinessLinkHashFetchMetric
|| __DATA.__objc_data _OBJC_METACLASS_$_BCSBusinessLinkRegisteredMetric
|| __DATA.__objc_data _OBJC_METACLASS_$_BCSCallToActionItem
|| __DATA.__objc_data _OBJC_METACLASS_$_BCSChatSuggestFetchMetric
|| __DATA.__objc_data _OBJC_METACLASS_$_BCSChatSuggestRegisteredMetric
|| __DATA.__objc_data _OBJC_METACLASS_$_BCSCoalesceHelper
|| __DATA.__objc_data _OBJC_METACLASS_$_BCSCoalesceObjectBloomFilterAndConfig
|| __DATA.__objc_data _OBJC_METACLASS_$_BCSCoalesceObjectConfig
|| __DATA.__objc_data _OBJC_METACLASS_$_BCSCoalesceObjectItems
|| __DATA.__objc_data _OBJC_METACLASS_$_BCSCoalesceObjectShard
|| __DATA.__objc_data _OBJC_METACLASS_$_BCSConfigPrefetchMetric
|| __DATA.__objc_data _OBJC_METACLASS_$_BCSConfigRemoteFetch
|| __DATA.__objc_data _OBJC_METACLASS_$_BCSConfigResolutionMetric
|| __DATA.__objc_data _OBJC_METACLASS_$_BCSFlagMeasurement
|| __DATA.__objc_data _OBJC_METACLASS_$_BCSHashService
|| __DATA.__objc_data _OBJC_METACLASS_$_BCSItemResolutionMetric
|| __DATA.__objc_data _OBJC_METACLASS_$_BCSLinkItem
|| __DATA.__objc_data _OBJC_METACLASS_$_BCSLinkItemIdentifier
|| __DATA.__objc_data _OBJC_METACLASS_$_BCSMeasurement
|| __DATA.__objc_data _OBJC_METACLASS_$_BCSMeasurementFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_BCSMegashardPrefetchMetric
|| __DATA.__objc_data _OBJC_METACLASS_$_BCSMetric
|| __DATA.__objc_data _OBJC_METACLASS_$_BCSMetricFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_BCSOpenHours
|| __DATA.__objc_data _OBJC_METACLASS_$_BCSOperationGroupFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_BCSPersistentBusinessItemObject
|| __DATA.__objc_data _OBJC_METACLASS_$_BCSPhoneNumberFormatter
|| __DATA.__objc_data _OBJC_METACLASS_$_BCSPhoneNumberNormalizer
|| __DATA.__objc_data _OBJC_METACLASS_$_BCSRemoteFetch
|| __DATA.__objc_data _OBJC_METACLASS_$_BCSShardIdentifier
|| __DATA.__objc_data _OBJC_METACLASS_$_BCSShardResolutionMetric
|| __DATA.__objc_data _OBJC_METACLASS_$_BCSTimingMeasurement
|| __DATA.__objc_data _OBJC_METACLASS_$_BCSURLNormalizer
|| __DATA.__objc_data _OBJC_METACLASS_$_BCSVisibilityItem
|| __DATA_CONST.__const _ABSLoggingSubsystem
|| __DATA_CONST.__const _BCSCacheEntitlement
|| __DATA_CONST.__const _BCSPrefetchEntitlement
|| __DATA_CONST.__const _kBCBusinessChatMachServiceName
|| __DATA_CONST.__const _kBCBusinessChatServiceName
|| __DATA_CONST.__const _kBCBusinessChatViewServiceName
|| __DATA_CONST.__const _kBCChatSuggestRemoteViewController
|| __DATA_CONST.__const _kBCSBusinessItemKey
|| __DATA_CONST.__const _kBCSDefaultsChatSuggestCustomApiKey
|| __DATA_CONST.__const _kBCSDefaultsChatSuggestCustomContainerId
|| __DATA_CONST.__const _kBCSDefaultsChatSuggestCustomEnvironment
|| __DATA_CONST.__const _kBCSDefaultsChatSuggestCustomMessagesIdentifier
|| __DATA_CONST.__const _kBCSDefaultsChatSuggestICloudStagingMode
|| __DATA_CONST.__const _kBCSDefaultsChatSuggestSkipDiskCaching
|| __DATA_CONST.__const _kBCSDefaultsChatSuggestSkipEdgeCaching
|| __DATA_CONST.__const _kBCSDefaultsChatSuggestSkipInMemoryCaching
|| __DATA_CONST.__const _kBCSDefaultsLinkCustomApiKey
|| __DATA_CONST.__const _kBCSDefaultsLinkCustomContainerId
|| __DATA_CONST.__const _kBCSDefaultsLinkCustomEnvironment
|| __DATA_CONST.__const _kBCSDefaultsLinkICloudStagingMode
|| __DATA_CONST.__const _kBCSDefaultsLinkSkipDiskCaching
|| __DATA_CONST.__const _kBCSDefaultsLinkSkipEdgeCaching
|| __DATA_CONST.__const _kBCSOpenHoursDayOfWeekKey
|| __DATA_CONST.__const _kBCSOpenHoursFromKey
|| __DATA_CONST.__const _kBCSOpenHoursHoursRangesKey
|| __DATA_CONST.__const _kBCSOpenHoursTimeRangeKey
|| __DATA_CONST.__const _kBCSOpenHoursToKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCSBloomFilterAndConfigPrefetcher
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCSBloomFilterExtractor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCSBusinessItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCSBusinessItemMemoryCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCSBusinessItemPersistentStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCSBusinessQueryController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCSBusinessQueryService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCSCacheManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCSChatSuggestController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCSCloudKitQueryProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCSConfigItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCSConfigPrefetcher
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCSConfigResolver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCSFeatureFlagArbiter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCSICloudServerEnvironment
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCSIconController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCSItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCSItemCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCSItemResolver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCSLinkItemPersistentStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCSLocaleHelper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCSPersistentStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCSQueryChopper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCSQueryOperationFactory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCSRemoteFetchCloudKit
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCSShardItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCSShardItemPersistentStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCSShardResolver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BCSUserDefaults
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCSBloomFilterAndConfigPrefetcher
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCSBloomFilterExtractor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCSBusinessItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCSBusinessItemMemoryCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCSBusinessItemPersistentStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCSBusinessQueryController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCSBusinessQueryService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCSCacheManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCSChatSuggestController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCSCloudKitQueryProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCSConfigItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCSConfigPrefetcher
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCSConfigResolver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCSFeatureFlagArbiter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCSICloudServerEnvironment
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCSIconController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCSItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCSItemCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCSItemResolver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCSLinkItemPersistentStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCSLocaleHelper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCSPersistentStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCSQueryChopper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCSQueryOperationFactory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCSRemoteFetchCloudKit
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCSShardItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCSShardItemPersistentStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCSShardResolver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BCSUserDefaults
|| __TEXT.__const _kBCSHashServiceSHA256DigestLength
|| __TEXT.__const _kBCSOpenHoursSecondsInDay
|| __TEXT.__text _ABSLogCommon
|| __TEXT.__text _NSStringFromBCSType
__ BaseBoard: _BSAuditTokenTaskHasEntitlement
__ BaseBoard: _BSDispatchQueueCreateSerial
__ BaseBoard: _OBJC_CLASS_$_BSDescriptionBuilder
__ BaseBoard: _OBJC_CLASS_$_BSEqualsBuilder
__ BaseBoard: _OBJC_CLASS_$_BSHashBuilder
__ CloudKit: _CKContainerEnvironmentFromString
__ CloudKit: _CKContainerEnvironmentString
__ CloudKit: _CKCurrentUserDefaultName
__ CloudKit: _OBJC_CLASS_$_CKOperationGroup
__ CloudKit: _OBJC_CLASS_$_CKQuery
__ CloudKit: _OBJC_CLASS_$_CKQueryOperation
__ CloudKit: _OBJC_CLASS_$_CKRecordID
__ CloudKit: _OBJC_CLASS_$_CKRecordZoneID
__ CloudKit: _OBJC_CLASS_$_CKReference
__ CoreAnalytics: _AnalyticsSendEventLazy
__ CoreFoundation: _NSLocaleCountryCode
__ CoreFoundation: _NSLocaleIdentifier
__ CoreFoundation: _NSLocaleLanguageCode
__ CoreFoundation: _NSRangeException
__ CoreFoundation: _NSURLFileProtectionCompleteUntilFirstUserAuthentication
__ CoreFoundation: _NSURLFileProtectionKey
__ CoreFoundation: _NSURLIsDirectoryKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCache
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: _OBJC_METACLASS_$_NSUserDefaults
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CorePhoneNumbers: _PNCreateFormattedStringWithCountry
__ CoreTelephony: _OBJC_CLASS_$_CTTelephonyNetworkInfo
__ Foundation: _NSClassFromString
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSStringFromBOOL
__ Foundation: _NSStringFromClass
__ Foundation: _NSTemporaryDirectory
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHTTPURLResponse
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSLock
__ Foundation: _OBJC_CLASS_$_NSMutableCharacterSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSMutableURLRequest
__ Foundation: _OBJC_CLASS_$_NSNotification
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSScanner
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLRequest
__ Foundation: _OBJC_CLASS_$_NSURLSession
__ Foundation: _OBJC_CLASS_$_NSURLSessionConfiguration
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_METACLASS_$_NSError
__ IDS: _OBJC_CLASS_$_IDSIDQueryController
__ IDS: _OBJC_CLASS_$_IDSService
__ IMFoundation: _OBJC_CLASS_$_IMFileCopier
__ IMFoundation: _OBJC_CLASS_$_IMLockdownManager
__ ProactiveSupport: _OBJC_CLASS_$__PASBloomFilter
__ ProtocolBuffer: _OBJC_CLASS_$_PBCodable
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._bytes
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._error
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._length
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._pos
__ ProtocolBuffer: _OBJC_METACLASS_$_PBCodable
__ ProtocolBuffer: _PBDataWriterWriteBOOLField
__ ProtocolBuffer: _PBDataWriterWriteDataField
__ ProtocolBuffer: _PBDataWriterWriteDoubleField
__ ProtocolBuffer: _PBDataWriterWriteInt32Field
__ ProtocolBuffer: _PBDataWriterWriteInt64Field
__ ProtocolBuffer: _PBDataWriterWriteStringField
__ ProtocolBuffer: _PBDataWriterWriteSubmessage
__ ProtocolBuffer: _PBReaderPlaceMark
__ ProtocolBuffer: _PBReaderReadData
__ ProtocolBuffer: _PBReaderReadString
__ ProtocolBuffer: _PBReaderRecallMark
__ ProtocolBuffer: _PBReaderSkipValueWithTag
__ ProtocolBuffer: _PBRepeatedInt32Add
__ ProtocolBuffer: _PBRepeatedInt32Clear
__ ProtocolBuffer: _PBRepeatedInt32Copy
__ ProtocolBuffer: _PBRepeatedInt32Hash
__ ProtocolBuffer: _PBRepeatedInt32IsEqual
__ ProtocolBuffer: _PBRepeatedInt32Set
__ TelephonyUtilities: _TUHomeCountryCode
__ TelephonyUtilities: _TUNetworkCountryCode
__ libSystem.B.dylib: _CC_SHA256
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: __set_user_dir_suffix
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _fmod
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_signpost_id_generate
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _strtol
__ libSystem.B.dylib: _strtoull
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libsqlite3.dylib: _sqlite3_bind_blob
__ libsqlite3.dylib: _sqlite3_bind_double
__ libsqlite3.dylib: _sqlite3_bind_int
__ libsqlite3.dylib: _sqlite3_bind_int64
__ libsqlite3.dylib: _sqlite3_bind_text
__ libsqlite3.dylib: _sqlite3_close
__ libsqlite3.dylib: _sqlite3_column_blob
__ libsqlite3.dylib: _sqlite3_column_bytes
__ libsqlite3.dylib: _sqlite3_column_double
__ libsqlite3.dylib: _sqlite3_column_int
__ libsqlite3.dylib: _sqlite3_column_int64
__ libsqlite3.dylib: _sqlite3_column_text
__ libsqlite3.dylib: _sqlite3_errmsg
__ libsqlite3.dylib: _sqlite3_exec
__ libsqlite3.dylib: _sqlite3_finalize
__ libsqlite3.dylib: _sqlite3_open_v2
__ libsqlite3.dylib: _sqlite3_prepare_v2
__ libsqlite3.dylib: _sqlite3_step
__ libz.1.dylib: _inflate
__ libz.1.dylib: _inflateEnd
__ libz.1.dylib: _inflateInit2_
BCSConfigResolver : NSObject /usr/lib/libSystem.B.dylib <BCSConfigResolving>
 @property  <BCSConfigCaching> *configCache
 @property  <BCSConfigCacheSkipping> *configCacheSkipper
 @property  <BCSConfigRemoteFetching> *configRemoteFetcher
 @property  <BCSMetricFactoryProtocol> *metricFactory
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[BCSConfigResolver .cxx_destruct]
  -[BCSConfigResolver configRemoteFetcher]
  -[BCSConfigResolver configCache]
  -[BCSConfigResolver configCacheSkipper]
  -[BCSConfigResolver metricFactory]
  -[BCSConfigResolver configItemWithType:clientBundleID:metric:completion:]
  -[BCSConfigResolver initWithConfigCache:cacheSkipper:remoteFetcher:metricFactory:]
  -[BCSConfigResolver setConfigCache:]
  -[BCSConfigResolver setConfigCacheSkipper:]
  -[BCSConfigResolver setConfigRemoteFetcher:]
  -[BCSConfigResolver setMetricFactory:]


BCSVisibility : PBCodable /System/Library/Frameworks/CloudKit.framework/CloudKit <NSCopying>
 @property  BOOL hasLanguage
 @property  NSString *language
 @property  BOOL hasCountry
 @property  NSString *country
 @property  BOOL hasRatio
 @property  double ratio

  // instance methods
  -[BCSVisibility copyWithZone:]
  -[BCSVisibility country]
  -[BCSVisibility hasCountry]
  -[BCSVisibility hasLanguage]
  -[BCSVisibility setLanguage:]
  -[BCSVisibility .cxx_destruct]
  -[BCSVisibility ratio]
  -[BCSVisibility readFrom:]
  -[BCSVisibility writeTo:]
  -[BCSVisibility isEqual:]
  -[BCSVisibility copyTo:]
  -[BCSVisibility dictionaryRepresentation]
  -[BCSVisibility setRatio:]
  -[BCSVisibility mergeFrom:]
  -[BCSVisibility setCountry:]
  -[BCSVisibility language]
  -[BCSVisibility hasRatio]
  -[BCSVisibility setHasRatio:]


BCSOpenHours : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSDictionary *timeRanges
 @property  NSTimeZone *localTimeZone

  // class methods
  +[BCSOpenHours supportsSecureCoding]

  // instance methods
  -[BCSOpenHours copyWithZone:]
  -[BCSOpenHours .cxx_destruct]
  -[BCSOpenHours encodeWithCoder:]
  -[BCSOpenHours localTimeZone]
  -[BCSOpenHours initWithCoder:]
  -[BCSOpenHours timeRanges]
  -[BCSOpenHours initWithTimeRanges:timeZone:]
  -[BCSOpenHours isOpenAtDate:timeZone:]
  -[BCSOpenHours _weekdayOrdinalFromDate:timeZone:]
  -[BCSOpenHours _validTimeRange:]
  -[BCSOpenHours _totalSecondsInLocalTimeFromPreviousMidnightWithDate:timeZone:]
  -[BCSOpenHours _dateWhenOpenNextAfterDate:timeZone:]
  -[BCSOpenHours _totalSecondsInLocalTimeFromPreviousMidnightWithDate:]
  -[BCSOpenHours _convertDateToLocalTimeZoneWithDate:timeZone:]
  -[BCSOpenHours _weekdayStringFromWeekdayIndex:]
  -[BCSOpenHours isOpenAtDate:]
  -[BCSOpenHours dateWhenOpenNextAfterDate:]
  -[BCSOpenHours _weekdayOrdinalFromDate:]
  -[BCSOpenHours _weekdayIndexFromWeekdayString:]
  -[BCSOpenHours _convertDateToLocalTimeZoneWithDate:]
  -[BCSOpenHours initWithHoursMessages:timeZone:]
  -[BCSOpenHours initWithHoursPeriodMessage:timeZone:]
  -[BCSOpenHours initWithOpenHours:timeZone:]
  -[BCSOpenHours initWithJSONObj:timeZone:]


BCSRealTimeTimingSignposter : BCSRealTimeSignposter <BCSRealTimeTimingMeasurementHandler>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[BCSRealTimeTimingSignposter signposterForBCSType:]
  +[BCSRealTimeTimingSignposter signposterForBCSType:signpostIdentifier:]
  +[BCSRealTimeTimingSignposter signposterForShardIdentifier:]
  +[BCSRealTimeTimingSignposter signposterForItemIdentifier:]

  // instance methods
  -[BCSRealTimeTimingSignposter _handleCloudKitConfigFetch:]
  -[BCSRealTimeTimingSignposter _handleCloudKitShardFetch:]
  -[BCSRealTimeTimingSignposter _handleCloudKitItemFetch:]
  -[BCSRealTimeTimingSignposter _handleCloudKitMegashardFetch:]
  -[BCSRealTimeTimingSignposter _handleCloudKitConfigFetchAndDecode:]
  -[BCSRealTimeTimingSignposter _handleCloudKitShardFetchAndDecode:]
  -[BCSRealTimeTimingSignposter _handleCloudKitItemFetchAndDecode:]
  -[BCSRealTimeTimingSignposter _handleCloudKitMegashardFetchAndDecode:]
  -[BCSRealTimeTimingSignposter _handleConfigResolution:]
  -[BCSRealTimeTimingSignposter _handleShardResolution:]
  -[BCSRealTimeTimingSignposter _handleItemResolution:]
  -[BCSRealTimeTimingSignposter _handleItemFetch:]
  -[BCSRealTimeTimingSignposter _handleBusinessLinkChoppedFetch:]
  -[BCSRealTimeTimingSignposter _handleBusinessLinkHashFetch:]
  -[BCSRealTimeTimingSignposter _handleItemIsRegistered:]
  -[BCSRealTimeTimingSignposter timingMeasurementDidBegin:]
  -[BCSRealTimeTimingSignposter timingMeasurementDidEnd:]


BCSBloomFilterAndConfigPrefetcher : NSObject /usr/lib/libSystem.B.dylib
 @property  <BCSConfigCaching> *configCache
 @property  <BCSShardCacheQueryable> *shardCache
 @property  <BCSShardCacheSkipping> *shardCacheSkipper
 @property  <BCSBloomFilterAndConfigRemoteFetching> *bloomFilterAndConfigRemoteFetch
 @property  <BCSPrefetchTrigger> *prefetchTrigger
 @property  <BCSShardItemInstantiating> *shardInstantiator
 @property  <BCSFeatureFlagArbitrating> *featureFlagAribiter
 @property  <BCSUserDefaultsProviding> *userDefaults
 @property  <BCSMetricFactoryProtocol> *metricFactory
 @property  NSMutableSet *triggers

  // instance methods
  -[BCSBloomFilterAndConfigPrefetcher setUserDefaults:]
  -[BCSBloomFilterAndConfigPrefetcher userDefaults]
  -[BCSBloomFilterAndConfigPrefetcher .cxx_destruct]
  -[BCSBloomFilterAndConfigPrefetcher triggers]
  -[BCSBloomFilterAndConfigPrefetcher setTriggers:]
  -[BCSBloomFilterAndConfigPrefetcher configCache]
  -[BCSBloomFilterAndConfigPrefetcher metricFactory]
  -[BCSBloomFilterAndConfigPrefetcher setConfigCache:]
  -[BCSBloomFilterAndConfigPrefetcher setMetricFactory:]
  -[BCSBloomFilterAndConfigPrefetcher setShardCache:]
  -[BCSBloomFilterAndConfigPrefetcher setShardCacheSkipper:]
  -[BCSBloomFilterAndConfigPrefetcher setBloomFilterAndConfigRemoteFetch:]
  -[BCSBloomFilterAndConfigPrefetcher setShardInstantiator:]
  -[BCSBloomFilterAndConfigPrefetcher setFeatureFlagAribiter:]
  -[BCSBloomFilterAndConfigPrefetcher _prefetchBloomFilterAndConfigIfNecessaryWithXPCActivity:completion:]
  -[BCSBloomFilterAndConfigPrefetcher _hoursSinceLastSuccessfulPrefetchForType:]
  -[BCSBloomFilterAndConfigPrefetcher _notePrefetchForType:finishedSuccessfully:]
  -[BCSBloomFilterAndConfigPrefetcher bloomFilterAndConfigRemoteFetch]
  -[BCSBloomFilterAndConfigPrefetcher shardCache]
  -[BCSBloomFilterAndConfigPrefetcher shardInstantiator]
  -[BCSBloomFilterAndConfigPrefetcher _shouldPrefetchType:]
  -[BCSBloomFilterAndConfigPrefetcher featureFlagAribiter]
  -[BCSBloomFilterAndConfigPrefetcher shardCacheSkipper]
  -[BCSBloomFilterAndConfigPrefetcher initWithConfigCache:shardCache:shardCacheSkipper:shardInstantiator:featureFlagArbiter:businessLinkRemoteFetcher:userDefaults:metricFactory:]
  -[BCSBloomFilterAndConfigPrefetcher addPrefetchTrigger:]
  -[BCSBloomFilterAndConfigPrefetcher prefetchTrigger]
  -[BCSBloomFilterAndConfigPrefetcher setPrefetchTrigger:]


NBMetadataHelper : NSObject /usr/lib/libSystem.B.dylib
 @property  NSCache *metadataCache

  // class methods
  +[NBMetadataHelper jsonObjectFromZippedDataWithBytes:compressedLength:expandedLength:]
  +[NBMetadataHelper CN2CCodeMap]
  +[NBMetadataHelper phoneNumberDataMap]
  +[NBMetadataHelper CCode2CNMap]
  +[NBMetadataHelper regionCodeFromCountryCode:]
  +[NBMetadataHelper countryCodeFromRegionCode:]
  +[NBMetadataHelper hasValue:]

  // instance methods
  -[NBMetadataHelper init]
  -[NBMetadataHelper metadataCache]
  -[NBMetadataHelper .cxx_destruct]
  -[NBMetadataHelper setMetadataCache:]
  -[NBMetadataHelper getMetadataForRegion:]
  -[NBMetadataHelper getAllMetadata]
  -[NBMetadataHelper getMetadataForNonGeographicalRegion:]


BCSItemResolver : NSObject /usr/lib/libSystem.B.dylib <BCSItemResolving>
 @property  <BCSItemCaching> *itemCache
 @property  <BCSItemCacheSkipping> *itemCacheSkipper
 @property  <BCSItemRemoteFetching> *itemRemoteFetcher
 @property  <BCSMetricFactoryProtocol> *metricFactory
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[BCSItemResolver .cxx_destruct]
  -[BCSItemResolver metricFactory]
  -[BCSItemResolver setMetricFactory:]
  -[BCSItemResolver itemCacheSkipper]
  -[BCSItemResolver itemCache]
  -[BCSItemResolver _bucketRangeForItemIdentifier:bucketCount:]
  -[BCSItemResolver itemRemoteFetcher]
  -[BCSItemResolver _firstItemInBucket:matching:]
  -[BCSItemResolver cachedItemMatching:]
  -[BCSItemResolver itemMatching:config:clientBundleID:metric:completion:]
  -[BCSItemResolver initWithItemCache:cacheSkipper:remoteFetcher:metricFactory:]


BCSCoalesceHelper : NSObject /usr/lib/libSystem.B.dylib <BCSCoalesceHelperProtocol>
 @property  NSMutableDictionary *coalesceObjectPool
 @property  NSObject<OS_dispatch_queue> *coalesceHelperDispatchQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[BCSCoalesceHelper .cxx_destruct]
  -[BCSCoalesceHelper coalesceHelperDispatchQueue]
  -[BCSCoalesceHelper coalesceObjectPool]
  -[BCSCoalesceHelper _enqueueCoalesceObject:isDuplicateRequest:inCoalesceObjectPool:]
  -[BCSCoalesceHelper _dequeueCoalesceObjectsForCoalesceKey:inCoalesceObjectPool:]
  -[BCSCoalesceHelper enqueueCoalesceObject:isDuplicateRequest:]
  -[BCSCoalesceHelper dequeueCoalesceObjectsForCoalesceKey:]
  -[BCSCoalesceHelper initWithQOSClass:]


NBRegularExpressionCache : NSObject /usr/lib/libSystem.B.dylib
 @property  NSCache *cache

  // class methods
  +[NBRegularExpressionCache sharedInstance]

  // instance methods
  -[NBRegularExpressionCache setCache:]
  -[NBRegularExpressionCache init]
  -[NBRegularExpressionCache .cxx_destruct]
  -[NBRegularExpressionCache cache]
  -[NBRegularExpressionCache regularExpressionForPattern:error:]


BCSCoalesceObjectConfig : NSObject /usr/lib/libSystem.B.dylib <BCSCoalesceObjectProtocol>
 @property  @? configCompletionBlock
 @property  NSString *coalesceKey
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[BCSCoalesceObjectConfig .cxx_destruct]
  -[BCSCoalesceObjectConfig completionBlock]
  -[BCSCoalesceObjectConfig coalesceKey]
  -[BCSCoalesceObjectConfig configCompletionBlock]
  -[BCSCoalesceObjectConfig initWithCompletionBlock:coalesceKey:]


BCSCoalesceObjectBloomFilterAndConfig : NSObject /usr/lib/libSystem.B.dylib <BCSCoalesceObjectProtocol>
 @property  @? bloomFilterAndConfigCompletionBlock
 @property  NSString *coalesceKey
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[BCSCoalesceObjectBloomFilterAndConfig .cxx_destruct]
  -[BCSCoalesceObjectBloomFilterAndConfig completionBlock]
  -[BCSCoalesceObjectBloomFilterAndConfig coalesceKey]
  -[BCSCoalesceObjectBloomFilterAndConfig initWithCompletionBlock:coalesceKey:]
  -[BCSCoalesceObjectBloomFilterAndConfig bloomFilterAndConfigCompletionBlock]


BCSCoalesceObjectShard : NSObject /usr/lib/libSystem.B.dylib <BCSCoalesceObjectProtocol>
 @property  @? shardCompletionBlock
 @property  NSString *coalesceKey
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[BCSCoalesceObjectShard .cxx_destruct]
  -[BCSCoalesceObjectShard completionBlock]
  -[BCSCoalesceObjectShard coalesceKey]
  -[BCSCoalesceObjectShard initWithCompletionBlock:coalesceKey:]
  -[BCSCoalesceObjectShard shardCompletionBlock]


BCSCoalesceObjectItems : NSObject /usr/lib/libSystem.B.dylib <BCSCoalesceObjectProtocol>
 @property  @? itemsCompletionBlock
 @property  NSString *coalesceKey
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[BCSCoalesceObjectItems .cxx_destruct]
  -[BCSCoalesceObjectItems completionBlock]
  -[BCSCoalesceObjectItems coalesceKey]
  -[BCSCoalesceObjectItems initWithCompletionBlock:coalesceKey:]
  -[BCSCoalesceObjectItems itemsCompletionBlock]


BCSMetricFactory : NSObject /usr/lib/libSystem.B.dylib <BCSMetricFactoryProtocol>
 @property  NSArray *postProcessingMetricHandlers
 @property  <BCSMeasurementFactoryProtocol> *measurementFactory
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[BCSMetricFactory .cxx_destruct]
  -[BCSMetricFactory measurementFactory]
  -[BCSMetricFactory megashardPrefetchMetricForType:]
  -[BCSMetricFactory postProcessingMetricHandlers]
  -[BCSMetricFactory configResolutionMetricForConfigType:]
  -[BCSMetricFactory shardResolutionMetricForShardIdentifier:]
  -[BCSMetricFactory itemResolutionMetricForItemIdentifier:]
  -[BCSMetricFactory businessLinkRegisteredMetricForItemIdentifier:]
  -[BCSMetricFactory businessLinkFetchMetricForItemIdentifier:]
  -[BCSMetricFactory businessLinkHashFetchMetricForItemIdentifier:]
  -[BCSMetricFactory chatSuggestRegisteredMetricForItemIdentifier:]
  -[BCSMetricFactory chatSuggestFetchMetricForItemIdentifier:]
  -[BCSMetricFactory configPrefetchMetricForConfigType:]
  -[BCSMetricFactory initWithMeasurementFactory:]


BCSRealTimeSignposter : NSObject /usr/lib/libSystem.B.dylib
 @property  long long type
 @property  unsigned long signpostIdentifier

  // instance methods
  -[BCSRealTimeSignposter signpostIdentifier]
  -[BCSRealTimeSignposter type]
  -[BCSRealTimeSignposter _initWithType:signpostIdentifier:]


BCSBloomFilterExtractor : NSObject /usr/lib/libSystem.B.dylib <BCSBloomFilterExtractorProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[BCSBloomFilterExtractor extractShardsURLsFromBloomFilterURL:completion:]


BCSLinkItemPersistentStore : BCSPersistentStore <BCSItemCaching, BCSLinkItemCacheClearing>
  // class methods
  +[BCSLinkItemPersistentStore debugQueueName]

  // instance methods
  -[BCSLinkItemPersistentStore databasePath]
  -[BCSLinkItemPersistentStore schema]
  -[BCSLinkItemPersistentStore _deleteAllItems]
  -[BCSLinkItemPersistentStore init]
  -[BCSLinkItemPersistentStore schemaVersion]
  -[BCSLinkItemPersistentStore itemMatching:]
  -[BCSLinkItemPersistentStore deleteItemMatching:]
  -[BCSLinkItemPersistentStore updateItem:withItemIdentifier:]
  -[BCSLinkItemPersistentStore initWithSchemaVersion:]
  -[BCSLinkItemPersistentStore _linkItemMatching:]
  -[BCSLinkItemPersistentStore _updateLinkItem:withItemIdentifier:]
  -[BCSLinkItemPersistentStore _deleteLinkItemMatching:]
  -[BCSLinkItemPersistentStore _executeDeleteSQLQuery:]
  -[BCSLinkItemPersistentStore _executeFetchLinkItemSQLQuery:]
  -[BCSLinkItemPersistentStore _extractLinkItemFromStatement:]
  -[BCSLinkItemPersistentStore _insertLinkItem:withItemIdentifier:]
  -[BCSLinkItemPersistentStore deleteItemsOfType:]
  -[BCSLinkItemPersistentStore deleteExpiredItemsOfType:]
  -[BCSLinkItemPersistentStore deleteLinkItemsWithBundleID:]
  -[BCSLinkItemPersistentStore schemaVersionWillChangeForDatabase:fromSchemaVersion:toSchemaVersion:]


BCSPhoneNumberFormatter : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[BCSPhoneNumberFormatter formattedPhoneNumberForPhoneNumber:]


BCSCallToAction : PBCodable /System/Library/Frameworks/CloudKit.framework/CloudKit <NSCopying>
 @property  BOOL hasLanguage
 @property  NSString *language
 @property  BOOL hasTitle
 @property  NSString *title
 @property  BOOL hasSubtitle
 @property  NSString *subtitle
 @property  BOOL hasIsDefault
 @property  BOOL isDefault
 @property  BOOL hasBody
 @property  NSString *body

  // instance methods
  -[BCSCallToAction copyWithZone:]
  -[BCSCallToAction setSubtitle:]
  -[BCSCallToAction hasTitle]
  -[BCSCallToAction hasLanguage]
  -[BCSCallToAction hasBody]
  -[BCSCallToAction setLanguage:]
  -[BCSCallToAction .cxx_destruct]
  -[BCSCallToAction hasSubtitle]
  -[BCSCallToAction setBody:]
  -[BCSCallToAction setTitle:]
  -[BCSCallToAction setHasIsDefault:]
  -[BCSCallToAction hasIsDefault]
  -[BCSCallToAction title]
  -[BCSCallToAction body]
  -[BCSCallToAction readFrom:]
  -[BCSCallToAction writeTo:]
  -[BCSCallToAction isEqual:]
  -[BCSCallToAction subtitle]
  -[BCSCallToAction copyTo:]
  -[BCSCallToAction dictionaryRepresentation]
  -[BCSCallToAction isDefault]
  -[BCSCallToAction mergeFrom:]
  -[BCSCallToAction setIsDefault:]
  -[BCSCallToAction language]


BCSPersistentStore : NSObject /usr/lib/libSystem.B.dylib <BCSBatchable>
 @property  long long batchCount
 @property  NSObject<OS_dispatch_queue> *queue
 @property  ^{sqlite3=} openedDatabase
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[BCSPersistentStore debugQueueName]

  // instance methods
  -[BCSPersistentStore databasePath]
  -[BCSPersistentStore schema]
  -[BCSPersistentStore init]
  -[BCSPersistentStore dealloc]
  -[BCSPersistentStore .cxx_destruct]
  -[BCSPersistentStore setQueue:]
  -[BCSPersistentStore queue]
  -[BCSPersistentStore schemaVersion]
  -[BCSPersistentStore endBatch]
  -[BCSPersistentStore batchCount]
  -[BCSPersistentStore setBatchCount:]
  -[BCSPersistentStore _setDatabaseSchemaVersion:forDatabase:]
  -[BCSPersistentStore beginBatch]
  -[BCSPersistentStore openedDatabase]
  -[BCSPersistentStore schemaVersionWillChangeForDatabase:fromSchemaVersion:toSchemaVersion:]
  -[BCSPersistentStore _createDatabaseFileAtPath:]
  -[BCSPersistentStore _generateTableWithDatabase:]
  -[BCSPersistentStore _databaseSchemaVersionForDatabase:]
  -[BCSPersistentStore schemaVersionDidChangeForDatabase:fromSchemaVersion:toSchemaVersion:]
  -[BCSPersistentStore queue_openDatabaseIfNecessary]
  -[BCSPersistentStore queue_closeDatabase]
  -[BCSPersistentStore deleteDatabaseFile]


BCSUserDefaults : NSUserDefaults <BCSUserDefaultsProviding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[BCSUserDefaults sharedDefaults]


BCSBusinessItemMemoryCache : NSObject /usr/lib/libSystem.B.dylib <BCSItemCaching>
 @property  BCSBusinessItem *bizItemForLastFetchedIcon
 @property  NSData *lastFetchedBusinessItemIconData
 @property  BCSBusinessItem *lastFetchedBusinessItem

  // class methods
  +[BCSBusinessItemMemoryCache sharedCache]

  // instance methods
  -[BCSBusinessItemMemoryCache .cxx_destruct]
  -[BCSBusinessItemMemoryCache deleteCache]
  -[BCSBusinessItemMemoryCache itemMatching:]
  -[BCSBusinessItemMemoryCache deleteItemMatching:]
  -[BCSBusinessItemMemoryCache updateItem:withItemIdentifier:]
  -[BCSBusinessItemMemoryCache deleteItemsOfType:]
  -[BCSBusinessItemMemoryCache deleteExpiredItemsOfType:]
  -[BCSBusinessItemMemoryCache bizItemForLastFetchedIcon]
  -[BCSBusinessItemMemoryCache lastFetchedBusinessItemIconData]
  -[BCSBusinessItemMemoryCache setLastFetchedBusinessItem:]
  -[BCSBusinessItemMemoryCache setLastFetchedBusinessItemIconData:]
  -[BCSBusinessItemMemoryCache lastFetchedBusinessItem]
  -[BCSBusinessItemMemoryCache lastFetchedBusinessItemIconDataForBizItem:]
  -[BCSBusinessItemMemoryCache setLastFetchedBusinesIconData:withMatchingBusinessItem:]
  -[BCSBusinessItemMemoryCache setBizItemForLastFetchedIcon:]


BCSShardIdentifier : NSObject /usr/lib/libSystem.B.dylib <BCSShardItemIdentifying, NSCopying>
 @property  long long type
 @property  long long startIndex
 @property  long long shardCount
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[BCSShardIdentifier identifierWithType:startIndex:shardCount:]
  +[BCSShardIdentifier identifierFromShardIdentifying:]

  // instance methods
  -[BCSShardIdentifier copyWithZone:]
  -[BCSShardIdentifier startIndex]
  -[BCSShardIdentifier setStartIndex:]
  -[BCSShardIdentifier setType:]
  -[BCSShardIdentifier type]
  -[BCSShardIdentifier isEqual:]
  -[BCSShardIdentifier _initWithType:startIndex:shardCount:]
  -[BCSShardIdentifier shardCount]
  -[BCSShardIdentifier setShardCount:]


BCSBusinessQueryService : NSObject /usr/lib/libSystem.B.dylib
 @property  <BCSXPCDaemonConnectionProtocol> *connection
 @property  NSString *clientBundleIdentifier
 @property  NSDate *lastTimeoutDate
 @property  NSObject<OS_dispatch_queue> *serialDispatchQueue

  // instance methods
  -[BCSBusinessQueryService init]
  -[BCSBusinessQueryService clientBundleIdentifier]
  -[BCSBusinessQueryService .cxx_destruct]
  -[BCSBusinessQueryService serialDispatchQueue]
  -[BCSBusinessQueryService connection]
  -[BCSBusinessQueryService setSerialDispatchQueue:]
  -[BCSBusinessQueryService warmCacheIfNecessaryForPhoneNumbers:]
  -[BCSBusinessQueryService businessItemForPhoneNumber:isMessageable:isChatSuggestVisible:error:]
  -[BCSBusinessQueryService fetchLinkItemWithURL:completion:]
  -[BCSBusinessQueryService isBusinessRegisteredForURL:completion:]
  -[BCSBusinessQueryService fetchLinkItemWithHash:completion:]
  -[BCSBusinessQueryService clearCachesForLinkItemsAssociatedWithBundleID:completion:]
  -[BCSBusinessQueryService initWithConnection:clientBundleIdentifier:]
  -[BCSBusinessQueryService lastTimeoutDate]
  -[BCSBusinessQueryService _fetchBusinessItemWithDetailsForPhoneNumber:forClientBundleID:completion:]
  -[BCSBusinessQueryService setLastTimeoutDate:]
  -[BCSBusinessQueryService fetchLinkItemWithURL:chopURL:completion:]
  -[BCSBusinessQueryService isBusinessRegisteredForURL:chopURL:completion:]
  -[BCSBusinessQueryService clearCachesForType:completion:]
  -[BCSBusinessQueryService clearExpiredCachesForType:completion:]
  -[BCSBusinessQueryService _deleteInMemoryCache]
  -[BCSBusinessQueryService fetchBusinessItemWithPhoneNumber:completion:]
  -[BCSBusinessQueryService fetchBusinessItemWithDetailsForPhoneNumber:completion:]
  -[BCSBusinessQueryService fetchBusinessItemWithBizID:completion:]
  -[BCSBusinessQueryService fetchIsBusinessPhoneNumber:completion:]
  -[BCSBusinessQueryService fetchSquareIconDataForBusinessItem:completion:]
  -[BCSBusinessQueryService prefetchBloomFilterAndConfigCacheWithCompletion:]
  -[BCSBusinessQueryService prefetchConfigCacheWithCompletion:]


BCSBusinessLinkWrapper : PBCodable /System/Library/Frameworks/CloudKit.framework/CloudKit <NSCopying>
 @property  BOOL hasOrgId
 @property  NSString *orgId
 @property  BOOL hasMessage
 @property  BCSBusinessLinkMessage *message
 @property  BOOL hasModTime
 @property  long long modTime

  // instance methods
  -[BCSBusinessLinkWrapper copyWithZone:]
  -[BCSBusinessLinkWrapper message]
  -[BCSBusinessLinkWrapper orgId]
  -[BCSBusinessLinkWrapper setMessage:]
  -[BCSBusinessLinkWrapper .cxx_destruct]
  -[BCSBusinessLinkWrapper readFrom:]
  -[BCSBusinessLinkWrapper writeTo:]
  -[BCSBusinessLinkWrapper isEqual:]
  -[BCSBusinessLinkWrapper modTime]
  -[BCSBusinessLinkWrapper copyTo:]
  -[BCSBusinessLinkWrapper dictionaryRepresentation]
  -[BCSBusinessLinkWrapper hasMessage]
  -[BCSBusinessLinkWrapper mergeFrom:]
  -[BCSBusinessLinkWrapper setModTime:]
  -[BCSBusinessLinkWrapper setOrgId:]
  -[BCSBusinessLinkWrapper hasOrgId]
  -[BCSBusinessLinkWrapper setHasModTime:]
  -[BCSBusinessLinkWrapper hasModTime]


BCSShardItemPersistentStore : BCSPersistentStore <BCSShardCacheQueryable>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[BCSShardItemPersistentStore debugQueueName]

  // instance methods
  -[BCSShardItemPersistentStore databasePath]
  -[BCSShardItemPersistentStore schema]
  -[BCSShardItemPersistentStore init]
  -[BCSShardItemPersistentStore schemaVersion]
  -[BCSShardItemPersistentStore _databasePath]
  -[BCSShardItemPersistentStore deleteShardItemsOfType:]
  -[BCSShardItemPersistentStore updateShardItem:withShardIdentifier:]
  -[BCSShardItemPersistentStore countOfShardsOfType:]
  -[BCSShardItemPersistentStore countOfExpiredShardsOfType:]
  -[BCSShardItemPersistentStore initWithSchemaVersion:]
  -[BCSShardItemPersistentStore schemaVersionWillChangeForDatabase:fromSchemaVersion:toSchemaVersion:]
  -[BCSShardItemPersistentStore deleteShardItemMatching:]
  -[BCSShardItemPersistentStore _updateShardItem:withShardIdentifier:]
  -[BCSShardItemPersistentStore _executeFetchPersistentShardItemObjectSQLQuery:]
  -[BCSShardItemPersistentStore _extractShardItemFromStatement:]
  -[BCSShardItemPersistentStore _executeDeleteBusinessItemSQLQuery:]
  -[BCSShardItemPersistentStore _executeCountSQLQuery:]
  -[BCSShardItemPersistentStore shardItemMatching:]
  -[BCSShardItemPersistentStore deleteExpiredShardItemsOfType:]


NBAsYouTypeFormatter : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *currentOutput_
 @property  NSString *currentFormattingPattern_
 @property  NSString *defaultCountry_
 @property  NSString *nationalPrefixExtracted_
 @property  NSMutableString *formattingTemplate_
 @property  NSMutableString *accruedInput_
 @property  NSMutableString *prefixBeforeNationalNumber_
 @property  NSMutableString *accruedInputWithoutFormatting_
 @property  NSMutableString *nationalNumber_
 @property  NSRegularExpression *DIGIT_PATTERN_
 @property  NSRegularExpression *NATIONAL_PREFIX_SEPARATORS_PATTERN_
 @property  NSRegularExpression *CHARACTER_CLASS_PATTERN_
 @property  NSRegularExpression *STANDALONE_DIGIT_PATTERN_
 @property  NSRegularExpression *ELIGIBLE_FORMAT_PATTERN_
 @property  BOOL ableToFormat_
 @property  BOOL inputHasFormatting_
 @property  BOOL isCompleteNumber_
 @property  BOOL isExpectingCountryCallingCode_
 @property  BOOL shouldAddSpaceAfterNationalPrefix_
 @property  NBPhoneNumberUtil *phoneUtil_
 @property  unsigned long lastMatchPosition_
 @property  unsigned long originalPosition_
 @property  unsigned long positionToRemember_
 @property  NSMutableArray *possibleFormats_
 @property  NBPhoneMetaData *currentMetaData_
 @property  NBPhoneMetaData *defaultMetaData_
 @property  BOOL isSuccessfulFormatting

  // instance methods
  -[NBAsYouTypeFormatter clear]
  -[NBAsYouTypeFormatter init]
  -[NBAsYouTypeFormatter .cxx_destruct]
  -[NBAsYouTypeFormatter setCurrentOutput_:]
  -[NBAsYouTypeFormatter setFormattingTemplate_:]
  -[NBAsYouTypeFormatter setDIGIT_PATTERN_:]
  -[NBAsYouTypeFormatter setNATIONAL_PREFIX_SEPARATORS_PATTERN_:]
  -[NBAsYouTypeFormatter setCHARACTER_CLASS_PATTERN_:]
  -[NBAsYouTypeFormatter setSTANDALONE_DIGIT_PATTERN_:]
  -[NBAsYouTypeFormatter setELIGIBLE_FORMAT_PATTERN_:]
  -[NBAsYouTypeFormatter setCurrentFormattingPattern_:]
  -[NBAsYouTypeFormatter setAccruedInput_:]
  -[NBAsYouTypeFormatter setAccruedInputWithoutFormatting_:]
  -[NBAsYouTypeFormatter setAbleToFormat_:]
  -[NBAsYouTypeFormatter setInputHasFormatting_:]
  -[NBAsYouTypeFormatter setIsCompleteNumber_:]
  -[NBAsYouTypeFormatter setIsExpectingCountryCallingCode_:]
  -[NBAsYouTypeFormatter setLastMatchPosition_:]
  -[NBAsYouTypeFormatter setOriginalPosition_:]
  -[NBAsYouTypeFormatter setPositionToRemember_:]
  -[NBAsYouTypeFormatter setPrefixBeforeNationalNumber_:]
  -[NBAsYouTypeFormatter setShouldAddSpaceAfterNationalPrefix_:]
  -[NBAsYouTypeFormatter setNationalPrefixExtracted_:]
  -[NBAsYouTypeFormatter setNationalNumber_:]
  -[NBAsYouTypeFormatter setPossibleFormats_:]
  -[NBAsYouTypeFormatter initWithRegionCode:bundle:]
  -[NBAsYouTypeFormatter setPhoneUtil_:]
  -[NBAsYouTypeFormatter setDefaultCountry_:]
  -[NBAsYouTypeFormatter defaultCountry_]
  -[NBAsYouTypeFormatter getMetadataForRegion_:]
  -[NBAsYouTypeFormatter setCurrentMetaData_:]
  -[NBAsYouTypeFormatter currentMetaData_]
  -[NBAsYouTypeFormatter setDefaultMetaData_:]
  -[NBAsYouTypeFormatter phoneUtil_]
  -[NBAsYouTypeFormatter possibleFormats_]
  -[NBAsYouTypeFormatter currentFormattingPattern_]
  -[NBAsYouTypeFormatter createFormattingTemplate_:]
  -[NBAsYouTypeFormatter NATIONAL_PREFIX_SEPARATORS_PATTERN_]
  -[NBAsYouTypeFormatter isCompleteNumber_]
  -[NBAsYouTypeFormatter isFormatEligible_:]
  -[NBAsYouTypeFormatter narrowDownPossibleFormats_:]
  -[NBAsYouTypeFormatter ELIGIBLE_FORMAT_PATTERN_]
  -[NBAsYouTypeFormatter CHARACTER_CLASS_PATTERN_]
  -[NBAsYouTypeFormatter STANDALONE_DIGIT_PATTERN_]
  -[NBAsYouTypeFormatter formattingTemplate_]
  -[NBAsYouTypeFormatter getFormattingTemplate_:numberFormat:]
  -[NBAsYouTypeFormatter nationalNumber_]
  -[NBAsYouTypeFormatter accruedInput_]
  -[NBAsYouTypeFormatter accruedInputWithoutFormatting_]
  -[NBAsYouTypeFormatter prefixBeforeNationalNumber_]
  -[NBAsYouTypeFormatter defaultMetaData_]
  -[NBAsYouTypeFormatter inputDigitAndRememberPosition:]
  -[NBAsYouTypeFormatter inputDigit:]
  -[NBAsYouTypeFormatter currentOutput_]
  -[NBAsYouTypeFormatter inputDigitWithOptionToRememberPosition_:rememberPosition:]
  -[NBAsYouTypeFormatter isDigitOrLeadingPlusSign_:]
  -[NBAsYouTypeFormatter normalizeAndAccrueDigitsAndPlusSign_:rememberPosition:]
  -[NBAsYouTypeFormatter ableToFormat_]
  -[NBAsYouTypeFormatter inputHasFormatting_]
  -[NBAsYouTypeFormatter attemptToExtractIdd_]
  -[NBAsYouTypeFormatter attemptToExtractCountryCallingCode_]
  -[NBAsYouTypeFormatter attemptToChoosePatternWithPrefixExtracted_]
  -[NBAsYouTypeFormatter ableToExtractLongerNdd_]
  -[NBAsYouTypeFormatter removeNationalPrefixFromNationalNumber_]
  -[NBAsYouTypeFormatter attemptToChooseFormattingPattern_]
  -[NBAsYouTypeFormatter isExpectingCountryCallingCode_]
  -[NBAsYouTypeFormatter inputDigitHelper_:]
  -[NBAsYouTypeFormatter attemptToFormatAccruedDigits_]
  -[NBAsYouTypeFormatter maybeCreateNewTemplate_]
  -[NBAsYouTypeFormatter inputAccruedNationalNumber_]
  -[NBAsYouTypeFormatter appendNationalNumber_:]
  -[NBAsYouTypeFormatter nationalPrefixExtracted_]
  -[NBAsYouTypeFormatter shouldAddSpaceAfterNationalPrefix_]
  -[NBAsYouTypeFormatter originalPosition_]
  -[NBAsYouTypeFormatter positionToRemember_]
  -[NBAsYouTypeFormatter getAvailableFormats_:]
  -[NBAsYouTypeFormatter isNanpaNumberWithNationalPrefix_]
  -[NBAsYouTypeFormatter lastMatchPosition_]
  -[NBAsYouTypeFormatter initWithRegionCode:]
  -[NBAsYouTypeFormatter removeLastDigitAndRememberPosition]
  -[NBAsYouTypeFormatter removeLastDigit]
  -[NBAsYouTypeFormatter inputStringAndRememberPosition:]
  -[NBAsYouTypeFormatter inputString:]
  -[NBAsYouTypeFormatter getRememberedPosition]
  -[NBAsYouTypeFormatter isSuccessfulFormatting]
  -[NBAsYouTypeFormatter DIGIT_PATTERN_]


BCSProductionCloudServerRouteProvider : NSObject /usr/lib/libSystem.B.dylib <BCSCloudServerRouteProvider>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[BCSProductionCloudServerRouteProvider containerWithType:]
  -[BCSProductionCloudServerRouteProvider environmentWithType:]
  -[BCSProductionCloudServerRouteProvider apiKeyWithType:]
  -[BCSProductionCloudServerRouteProvider urlForLookupActionAPIWithType:]
  -[BCSProductionCloudServerRouteProvider urlForQueryActionAPIWithType:]


BCSICloudServerEnvironment : NSObject /usr/lib/libSystem.B.dylib <BSDescriptionProviding, BCSICloudServerEnvironmentProtocol>
 @property  <BCSUserDefaultsProviding> *userDefaults
 @property  BOOL isInternalInstall
 @property  BOOL isStagingMode
 @property  long long type
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *containerID
 @property  long long containerEnvironment
 @property  NSDictionary *additionalRequestHTTPHeaders

  // instance methods
  -[BCSICloudServerEnvironment additionalRequestHTTPHeaders]
  -[BCSICloudServerEnvironment isInternalInstall]
  -[BCSICloudServerEnvironment userDefaults]
  -[BCSICloudServerEnvironment containerID]
  -[BCSICloudServerEnvironment setType:]
  -[BCSICloudServerEnvironment .cxx_destruct]
  -[BCSICloudServerEnvironment succinctDescriptionBuilder]
  -[BCSICloudServerEnvironment type]
  -[BCSICloudServerEnvironment succinctDescription]
  -[BCSICloudServerEnvironment descriptionWithMultilinePrefix:]
  -[BCSICloudServerEnvironment descriptionBuilderWithMultilinePrefix:]
  -[BCSICloudServerEnvironment containerEnvironment]
  -[BCSICloudServerEnvironment _productionContainerID]
  -[BCSICloudServerEnvironment isStagingMode]
  -[BCSICloudServerEnvironment initWithUserDefaults:isInternalInstall:type:]


BCSShardItem : NSObject /usr/lib/libSystem.B.dylib <BCSShardItemProtocol, NSCopying, NSSecureCoding>
 @property  _PASBloomFilter *bloomFilter
 @property  NSString *bloomFilterString
 @property  long long type
 @property  long long startIndex
 @property  long long shardCount
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSDate *expirationDate
 @property  BOOL expired

  // class methods
  +[BCSShardItem supportsSecureCoding]

  // instance methods
  -[BCSShardItem copyWithZone:]
  -[BCSShardItem startIndex]
  -[BCSShardItem initWithURL:]
  -[BCSShardItem bloomFilter]
  -[BCSShardItem .cxx_destruct]
  -[BCSShardItem encodeWithCoder:]
  -[BCSShardItem isExpired]
  -[BCSShardItem type]
  -[BCSShardItem expirationDate]
  -[BCSShardItem initWithCoder:]
  -[BCSShardItem shardCount]
  -[BCSShardItem bloomFilterString]
  -[BCSShardItem initWithBloomFilterString:startIndex:shardCount:type:expirationDate:]
  -[BCSShardItem initWithBloomFilter:bloomFilterString:startIndex:shardCount:type:expirationDate:]
  -[BCSShardItem containsItemMatching:]
  -[BCSShardItem setBloomFilterString:]
  -[BCSShardItem initWithBusinessLinkShardItem:]
  -[BCSShardItem initWithJSONObj:type:]
  -[BCSShardItem initWithRecord:type:]


BCSCoreAnalyticsMetricHandler : NSObject /usr/lib/libSystem.B.dylib <BCSMetricHandler>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[BCSCoreAnalyticsMetricHandler handleSubmittedMetric:]


BCSBusinessItemPersistentStore : BCSPersistentStore
  // class methods
  +[BCSBusinessItemPersistentStore debugQueueName]

  // instance methods
  -[BCSBusinessItemPersistentStore databasePath]
  -[BCSBusinessItemPersistentStore schema]
  -[BCSBusinessItemPersistentStore schemaVersion]
  -[BCSBusinessItemPersistentStore _databasePath]
  -[BCSBusinessItemPersistentStore _executeDeleteBusinessItemSQLQuery:]
  -[BCSBusinessItemPersistentStore _insertOrReplaceBusinessItem:withTTL:]
  -[BCSBusinessItemPersistentStore deleteBusinessItem:]
  -[BCSBusinessItemPersistentStore _insertBusinessItem:withTTL:]
  -[BCSBusinessItemPersistentStore _updateToLastRetrievedDate:forBusinessItem:]
  -[BCSBusinessItemPersistentStore _executeFetchPersistentBusinessItemObjectSQLQuery:]
  -[BCSBusinessItemPersistentStore deleteBusinessItemWithBizID:]
  -[BCSBusinessItemPersistentStore deleteBusinessItemWithPhoneNumber:]
  -[BCSBusinessItemPersistentStore insertOrReplaceBusinessItem:withTTL:]
  -[BCSBusinessItemPersistentStore updateTTL:forBusinessItem:]
  -[BCSBusinessItemPersistentStore updateLastRetrievedDateForBusinessItem:]
  -[BCSBusinessItemPersistentStore fetchPersistentBusinessItemObjectWithBizID:]
  -[BCSBusinessItemPersistentStore fetchPersistentBusinessItemObjectWithPhoneNumber:]


BCSPersistentBusinessItemObject : NSObject /usr/lib/libSystem.B.dylib
 @property  BCSBusinessItem *businessItem
 @property  NSDate *TTLDate
 @property  NSDate *lastRetrievedDate

  // instance methods
  -[BCSPersistentBusinessItemObject .cxx_destruct]
  -[BCSPersistentBusinessItemObject TTLDate]
  -[BCSPersistentBusinessItemObject businessItem]
  -[BCSPersistentBusinessItemObject initWithBusinessItem:lastRetrievedDate:TTLDate:]
  -[BCSPersistentBusinessItemObject lastRetrievedDate]


BCSRealTimeFlagSignposter : BCSRealTimeSignposter <BCSRealTimeFlagMeasurementHandler>
 @property  long long signposterType
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[BCSRealTimeFlagSignposter signposterForBCSType:]
  +[BCSRealTimeFlagSignposter signposterForShardIdentifier:]
  +[BCSRealTimeFlagSignposter signposterForItemIdentifier:]

  // instance methods
  -[BCSRealTimeFlagSignposter signposterType]
  -[BCSRealTimeFlagSignposter _handleConfigCacheHitWithFlag:]
  -[BCSRealTimeFlagSignposter _handleShardCacheHitWithFlag:]
  -[BCSRealTimeFlagSignposter _handleItemCacheHitWithFlag:]
  -[BCSRealTimeFlagSignposter flagMeasurementDidChange:forMeasurement:]
  -[BCSRealTimeFlagSignposter setSignposterType:]


BCSXPCDaemonConnection : NSObject /usr/lib/libSystem.B.dylib <BCSXPCDaemonConnectionProtocol>
 @property  NSXPCConnection *connection
 @property  <BCSXPCDaemonProtocol> *remoteObjectProxy
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[BCSXPCDaemonConnection resume]
  -[BCSXPCDaemonConnection initWithMachServiceName:]
  -[BCSXPCDaemonConnection .cxx_destruct]
  -[BCSXPCDaemonConnection remoteObjectProxy]
  -[BCSXPCDaemonConnection connection]


BCSBusinessLinkShardItem : PBCodable /System/Library/Frameworks/CloudKit.framework/CloudKit <NSCopying>
 @property  BOOL hasIndex
 @property  long long index
 @property  BOOL hasCount
 @property  long long count
 @property  BOOL hasTtl
 @property  long long ttl
 @property  BOOL hasFilter
 @property  NSData *filter

  // instance methods
  -[BCSBusinessLinkShardItem copyWithZone:]
  -[BCSBusinessLinkShardItem setFilter:]
  -[BCSBusinessLinkShardItem index]
  -[BCSBusinessLinkShardItem setCount:]
  -[BCSBusinessLinkShardItem setIndex:]
  -[BCSBusinessLinkShardItem filter]
  -[BCSBusinessLinkShardItem setHasIndex:]
  -[BCSBusinessLinkShardItem .cxx_destruct]
  -[BCSBusinessLinkShardItem hasTtl]
  -[BCSBusinessLinkShardItem setTtl:]
  -[BCSBusinessLinkShardItem hasIndex]
  -[BCSBusinessLinkShardItem readFrom:]
  -[BCSBusinessLinkShardItem hasCount]
  -[BCSBusinessLinkShardItem writeTo:]
  -[BCSBusinessLinkShardItem setHasCount:]
  -[BCSBusinessLinkShardItem isEqual:]
  -[BCSBusinessLinkShardItem setHasTtl:]
  -[BCSBusinessLinkShardItem count]
  -[BCSBusinessLinkShardItem copyTo:]
  -[BCSBusinessLinkShardItem dictionaryRepresentation]
  -[BCSBusinessLinkShardItem ttl]
  -[BCSBusinessLinkShardItem mergeFrom:]
  -[BCSBusinessLinkShardItem hasFilter]


BCSBusinessQueryController : NSObject /usr/lib/libSystem.B.dylib <BCSLinkQueryChopperDelegate, BCSXPCDaemonProtocol>
 @property  <BCSIdentityServiceProtocol> *identityService
 @property  <BCSIconControllerProtocol> *iconController
 @property  <BCSCacheClearing> *cacheClearer
 @property  <BCSChatSuggestControllerProtocol> *chatSuggestController
 @property  <BCSItemResolving> *chatSuggestItemResolver
 @property  <BCSConfigResolving> *chatSuggestConfigResolver
 @property  <BCSShardResolving> *chatSuggestShardResolver
 @property  <BCSItemResolving> *linkItemResolver
 @property  <BCSConfigResolving> *linkConfigResolver
 @property  <BCSShardResolving> *linkShardResolver
 @property  <BCSPrefetchTrigger> *prefetchBloomFilterAndConfigTrigger
 @property  <BCSPrefetchTrigger> *prefetchConfigTrigger
 @property  <BCSEntitlementVerifying> *entitlementVerifier
 @property  <BCSQueryChopperProtocol> *queryChopper
 @property  NSObject<OS_dispatch_queue> *serialDispatchQueue
 @property  <BCSMetricFactoryProtocol> *metricFactory
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[BCSBusinessQueryController iconController]
  -[BCSBusinessQueryController .cxx_destruct]
  -[BCSBusinessQueryController setEntitlementVerifier:]
  -[BCSBusinessQueryController serialDispatchQueue]
  -[BCSBusinessQueryController entitlementVerifier]
  -[BCSBusinessQueryController setSerialDispatchQueue:]
  -[BCSBusinessQueryController clearCachesForLinkItemsAssociatedWithBundleID:completion:]
  -[BCSBusinessQueryController metricFactory]
  -[BCSBusinessQueryController warmCacheIfNecessaryForPhoneNumbers:forClientBundleID:]
  -[BCSBusinessQueryController fetchBusinessItemWithPhoneNumber:forClientBundleID:completion:]
  -[BCSBusinessQueryController fetchBusinessItemWithDetailsForPhoneNumber:forClientBundleID:completion:]
  -[BCSBusinessQueryController fetchBusinessItemWithBizID:forClientBundleID:completion:]
  -[BCSBusinessQueryController fetchIsBusinessPhoneNumber:forClientBundleID:completion:]
  -[BCSBusinessQueryController fetchSquareIconDataForBusinessItem:forClientBundleID:completion:]
  -[BCSBusinessQueryController fetchLinkItemModelWithURL:chopURL:forClientBundleID:completion:]
  -[BCSBusinessQueryController isBusinessRegisteredForURL:chopURL:forClientBundleID:completion:]
  -[BCSBusinessQueryController fetchLinkItemModelWithHash:forClientBundleID:completion:]
  -[BCSBusinessQueryController prefetchBloomFilterAndConfigsWithCompletion:]
  -[BCSBusinessQueryController prefetchConfigsWithCompletion:]
  -[BCSBusinessQueryController clearCachesForType:completion:]
  -[BCSBusinessQueryController clearExpiredCachesForType:completion:]
  -[BCSBusinessQueryController _deleteInMemoryCache]
  -[BCSBusinessQueryController initWithPrefetchBloomFilterAndConfigTrigger:prefetchConfigTrigger:entitlementVerifier:identityService:chatSuggestController:iconController:cacheClearer:chatSuggestConfigResolver:linkConfigResolver:chatSuggestShardResolver:linkShardResolver:chatSuggestItemResolver:linkItemResolver:queryChopper:metricFactory:]
  -[BCSBusinessQueryController chatSuggestController]
  -[BCSBusinessQueryController identityService]
  -[BCSBusinessQueryController _itemWithIdentifier:forClientBundleID:completion:]
  -[BCSBusinessQueryController queryChopper]
  -[BCSBusinessQueryController _isBusinessRegisteredWithItemIdentifier:forClientBundleID:completion:]
  -[BCSBusinessQueryController _itemResolverForType:]
  -[BCSBusinessQueryController _itemWithIdentifier:config:forClientBundleID:completion:]
  -[BCSBusinessQueryController _configForItemWithIdentifier:forClientBundleID:completion:]
  -[BCSBusinessQueryController _shardForItemWithIdentifier:configItem:forClientBundleID:completion:]
  -[BCSBusinessQueryController _configResolverForType:]
  -[BCSBusinessQueryController _shardStartIndexForItemIdentifier:shardCount:]
  -[BCSBusinessQueryController _shardResolverForType:]
  -[BCSBusinessQueryController prefetchBloomFilterAndConfigTrigger]
  -[BCSBusinessQueryController prefetchConfigTrigger]
  -[BCSBusinessQueryController cacheClearer]
  -[BCSBusinessQueryController chatSuggestConfigResolver]
  -[BCSBusinessQueryController linkConfigResolver]
  -[BCSBusinessQueryController chatSuggestShardResolver]
  -[BCSBusinessQueryController linkShardResolver]
  -[BCSBusinessQueryController chatSuggestItemResolver]
  -[BCSBusinessQueryController linkItemResolver]
  -[BCSBusinessQueryController initWithBloomFilterAndConfigPrefetcher:configPrefetcher:shardCache:cacheManager:chatSuggestRemoteFetcher:businessLinkRemoteFetcher:userDefaults:metricFactory:]
  -[BCSBusinessQueryController setIdentityService:]
  -[BCSBusinessQueryController setIconController:]
  -[BCSBusinessQueryController setCacheClearer:]
  -[BCSBusinessQueryController setChatSuggestController:]
  -[BCSBusinessQueryController setChatSuggestItemResolver:]
  -[BCSBusinessQueryController setChatSuggestConfigResolver:]
  -[BCSBusinessQueryController setChatSuggestShardResolver:]
  -[BCSBusinessQueryController setLinkItemResolver:]
  -[BCSBusinessQueryController setLinkConfigResolver:]
  -[BCSBusinessQueryController setLinkShardResolver:]
  -[BCSBusinessQueryController setPrefetchBloomFilterAndConfigTrigger:]
  -[BCSBusinessQueryController setPrefetchConfigTrigger:]
  -[BCSBusinessQueryController setQueryChopper:]


BCSItem : NSObject /usr/lib/libSystem.B.dylib <BCSItemIdentifying, BCSExpiring>
 @property  NSDate *expirationDate
 @property  NSObject *itemIdentifier
 @property  long long truncatedHash
 @property  long long type
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL expired

  // instance methods
  -[BCSItem itemIdentifier]
  -[BCSItem init]
  -[BCSItem setExpirationDate:]
  -[BCSItem .cxx_destruct]
  -[BCSItem isExpired]
  -[BCSItem type]
  -[BCSItem expirationDate]
  -[BCSItem truncatedHash]
  -[BCSItem matchesItemIdentifying:]


BCSItemRemoteFetch : BCSRemoteFetch <BCSItemRemoteFetching>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[BCSItemRemoteFetch fetchItemsWithBucketStartIndex:endIndex:type:forClientBundleID:completion:]
  -[BCSItemRemoteFetch fetchBusinessItemWithBizID:forClientBundleID:completion:]
  -[BCSItemRemoteFetch _fetchItemRequestWithStartIndex:endIndex:timeout:type:]


BCSLinkItemIdentifier : NSObject /usr/lib/libSystem.B.dylib <BCSItemIdentifying>
 @property  NSURL *url
 @property  NSString *fullHash
 @property  long long computedTruncatedHash
 @property  NSObject *itemIdentifier
 @property  long long truncatedHash
 @property  long long type
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[BCSLinkItemIdentifier identifierWithURL:]
  +[BCSLinkItemIdentifier identifierWithHash:]
  +[BCSLinkItemIdentifier identifierWithNormalizedURL:]

  // instance methods
  -[BCSLinkItemIdentifier itemIdentifier]
  -[BCSLinkItemIdentifier url]
  -[BCSLinkItemIdentifier .cxx_destruct]
  -[BCSLinkItemIdentifier succinctDescriptionBuilder]
  -[BCSLinkItemIdentifier setUrl:]
  -[BCSLinkItemIdentifier type]
  -[BCSLinkItemIdentifier succinctDescription]
  -[BCSLinkItemIdentifier descriptionWithMultilinePrefix:]
  -[BCSLinkItemIdentifier descriptionBuilderWithMultilinePrefix:]
  -[BCSLinkItemIdentifier fullHash]
  -[BCSLinkItemIdentifier truncatedHash]
  -[BCSLinkItemIdentifier matchesItemIdentifying:]
  -[BCSLinkItemIdentifier _initWithNormalizedURL:]
  -[BCSLinkItemIdentifier _initWithHash:]
  -[BCSLinkItemIdentifier _fullHashForNormalizedURL:]
  -[BCSLinkItemIdentifier _truncatedHashForNormalizedURL:]
  -[BCSLinkItemIdentifier _truncatedHashForHash:]
  -[BCSLinkItemIdentifier computedTruncatedHash]
  -[BCSLinkItemIdentifier setFullHash:]
  -[BCSLinkItemIdentifier setComputedTruncatedHash:]


BCSRemoteFetch : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[BCSRemoteFetch cloudServerRequestHelperForType:]
  +[BCSRemoteFetch createSessionForClientBundleID:]
  +[BCSRemoteFetch _completionPool]
  +[BCSRemoteFetch _requestDispatchQueue]

  // instance methods
  -[BCSRemoteFetch enqueueCompletionBlock:forRequest:isDuplicateRequest:]
  -[BCSRemoteFetch dequeueCompletionBlocksForRequest:]
  -[BCSRemoteFetch _hashForRequest:]
  -[BCSRemoteFetch _enqueueCompletionBlock:forRequestHash:inCompletionPool:isDuplicateRequest:]
  -[BCSRemoteFetch _dequeueCompletionBlocksForRequestHash:inCompletionPool:]


BCSIdentityService : NSObject /usr/lib/libSystem.B.dylib <BCSIdentityServiceProtocol>
 @property  NSObject<OS_dispatch_queue> *serialDispatchQueue
 @property  NSMutableDictionary *idStatusCompletionBlocks
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[BCSIdentityService sharedInstance]

  // instance methods
  -[BCSIdentityService loginID]
  -[BCSIdentityService .cxx_destruct]
  -[BCSIdentityService idStatusUpdatedForDestinations:service:]
  -[BCSIdentityService serialDispatchQueue]
  -[BCSIdentityService setSerialDispatchQueue:]
  -[BCSIdentityService refreshIDStatusForBizID:completion:]
  -[BCSIdentityService businessChatAccount]
  -[BCSIdentityService addIDSIDQueryControllerDelegate]
  -[BCSIdentityService idStatusCompletionBlocks]
  -[BCSIdentityService setIdStatusCompletionBlocks:]
  -[BCSIdentityService handleIDStatusCompletionBlocksForBizID:idStatus:]
  -[BCSIdentityService warmBusinessChatAccountCache]


BCSEntitlementVerifier : NSObject /usr/lib/libSystem.B.dylib <BCSEntitlementVerifying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[BCSEntitlementVerifier auditToken:hasEntitlement:]


BCSMeasurement : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[BCSMeasurement _init]


BCSFlagMeasurement : BCSMeasurement
 @property  BOOL flagWasSet
 @property  NSArray *realTimeMeasurementHandlers
 @property  long long flagMeasurementType
 @property  BOOL flag

  // class methods
  +[BCSFlagMeasurement newFlagMeasurement:withHandlers:]

  // instance methods
  -[BCSFlagMeasurement setFlag:]
  -[BCSFlagMeasurement .cxx_destruct]
  -[BCSFlagMeasurement flag]
  -[BCSFlagMeasurement _initWithType:handlers:]
  -[BCSFlagMeasurement flagWasSet]
  -[BCSFlagMeasurement setFlagWasSet:]
  -[BCSFlagMeasurement realTimeMeasurementHandlers]
  -[BCSFlagMeasurement flagMeasurementType]


BCSTimingMeasurement : BCSMeasurement
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  NSArray *realTimeMeasurementHandlers
 @property  long long timingMeasurementType
 @property  double duration

  // class methods
  +[BCSTimingMeasurement newTimingMeasurement:withHandlers:]

  // instance methods
  -[BCSTimingMeasurement setEndDate:]
  -[BCSTimingMeasurement startDate]
  -[BCSTimingMeasurement end]
  -[BCSTimingMeasurement .cxx_destruct]
  -[BCSTimingMeasurement begin]
  -[BCSTimingMeasurement endDate]
  -[BCSTimingMeasurement setStartDate:]
  -[BCSTimingMeasurement duration]
  -[BCSTimingMeasurement timingMeasurementType]
  -[BCSTimingMeasurement _initWithType:handlers:]
  -[BCSTimingMeasurement realTimeMeasurementHandlers]


NBPhoneMetaData : NSObject /usr/lib/libSystem.B.dylib
 @property  NBPhoneNumberDesc *generalDesc
 @property  NBPhoneNumberDesc *fixedLine
 @property  NBPhoneNumberDesc *mobile
 @property  NBPhoneNumberDesc *tollFree
 @property  NBPhoneNumberDesc *premiumRate
 @property  NBPhoneNumberDesc *sharedCost
 @property  NBPhoneNumberDesc *personalNumber
 @property  NBPhoneNumberDesc *voip
 @property  NBPhoneNumberDesc *pager
 @property  NBPhoneNumberDesc *uan
 @property  NBPhoneNumberDesc *emergency
 @property  NBPhoneNumberDesc *voicemail
 @property  NBPhoneNumberDesc *noInternationalDialling
 @property  NSString *codeID
 @property  NSNumber *countryCode
 @property  NSString *internationalPrefix
 @property  NSString *preferredInternationalPrefix
 @property  NSString *nationalPrefix
 @property  NSString *preferredExtnPrefix
 @property  NSString *nationalPrefixForParsing
 @property  NSString *nationalPrefixTransformRule
 @property  BOOL sameMobileAndFixedLinePattern
 @property  NSArray *numberFormats
 @property  NSArray *intlNumberFormats
 @property  BOOL mainCountryForCode
 @property  NSString *leadingDigits
 @property  BOOL leadingZeroPossible

  // instance methods
  -[NBPhoneMetaData setEmergency:]
  -[NBPhoneMetaData uan]
  -[NBPhoneMetaData init]
  -[NBPhoneMetaData emergency]
  -[NBPhoneMetaData voip]
  -[NBPhoneMetaData pager]
  -[NBPhoneMetaData .cxx_destruct]
  -[NBPhoneMetaData setVoicemail:]
  -[NBPhoneMetaData initWithEntry:]
  -[NBPhoneMetaData countryCode]
  -[NBPhoneMetaData mobile]
  -[NBPhoneMetaData codeID]
  -[NBPhoneMetaData setCountryCode:]
  -[NBPhoneMetaData setUan:]
  -[NBPhoneMetaData intlNumberFormats]
  -[NBPhoneMetaData numberFormats]
  -[NBPhoneMetaData nationalPrefix]
  -[NBPhoneMetaData nationalPrefixForParsing]
  -[NBPhoneMetaData internationalPrefix]
  -[NBPhoneMetaData numberFormatsFromEntry:]
  -[NBPhoneMetaData generalDesc]
  -[NBPhoneMetaData setGeneralDesc:]
  -[NBPhoneMetaData fixedLine]
  -[NBPhoneMetaData setFixedLine:]
  -[NBPhoneMetaData setMobile:]
  -[NBPhoneMetaData tollFree]
  -[NBPhoneMetaData setTollFree:]
  -[NBPhoneMetaData premiumRate]
  -[NBPhoneMetaData setPremiumRate:]
  -[NBPhoneMetaData sharedCost]
  -[NBPhoneMetaData setSharedCost:]
  -[NBPhoneMetaData personalNumber]
  -[NBPhoneMetaData setPersonalNumber:]
  -[NBPhoneMetaData setVoip:]
  -[NBPhoneMetaData setPager:]
  -[NBPhoneMetaData voicemail]
  -[NBPhoneMetaData noInternationalDialling]
  -[NBPhoneMetaData setNoInternationalDialling:]
  -[NBPhoneMetaData setCodeID:]
  -[NBPhoneMetaData setInternationalPrefix:]
  -[NBPhoneMetaData preferredInternationalPrefix]
  -[NBPhoneMetaData setPreferredInternationalPrefix:]
  -[NBPhoneMetaData setNationalPrefix:]
  -[NBPhoneMetaData preferredExtnPrefix]
  -[NBPhoneMetaData setPreferredExtnPrefix:]
  -[NBPhoneMetaData setNationalPrefixForParsing:]
  -[NBPhoneMetaData nationalPrefixTransformRule]
  -[NBPhoneMetaData setNationalPrefixTransformRule:]
  -[NBPhoneMetaData sameMobileAndFixedLinePattern]
  -[NBPhoneMetaData setSameMobileAndFixedLinePattern:]
  -[NBPhoneMetaData setNumberFormats:]
  -[NBPhoneMetaData setIntlNumberFormats:]
  -[NBPhoneMetaData mainCountryForCode]
  -[NBPhoneMetaData setMainCountryForCode:]
  -[NBPhoneMetaData leadingDigits]
  -[NBPhoneMetaData setLeadingDigits:]
  -[NBPhoneMetaData leadingZeroPossible]
  -[NBPhoneMetaData setLeadingZeroPossible:]


BCSPhoneNumberNormalizer : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[BCSPhoneNumberNormalizer normalizedPhoneNumberForPhoneNumber:]


BCSFeatureFlagArbiter : NSObject /usr/lib/libSystem.B.dylib <BCSFeatureFlagArbitrating>
 @property  BOOL dimSumEnabled

  // instance methods
  -[BCSFeatureFlagArbiter isDimSumEnabled]


BCSBusinessLinkMessage : PBCodable /System/Library/Frameworks/CloudKit.framework/CloudKit <NSCopying>
 @property  BOOL hasLink
 @property  NSString *link
 @property  BOOL hasBundleId
 @property  NSString *bundleId
 @property  BOOL hasHeroImage
 @property  NSString *heroImage
 @property  BOOL hasIconImage
 @property  NSString *iconImage
 @property  BOOL hasRedirectUrl
 @property  NSString *redirectUrl
 @property  NSMutableArray *businessLinkContents
 @property  BOOL hasAction
 @property  int action
 @property  BOOL hasIsPoweredBy
 @property  BOOL isPoweredBy
 @property  BOOL hasMuid
 @property  NSString *muid
 @property  NSMutableArray *categoryStyleAttributes

  // class methods
  +[BCSBusinessLinkMessage businessLinkContentsType]
  +[BCSBusinessLinkMessage categoryStyleAttributesType]

  // instance methods
  -[BCSBusinessLinkMessage muid]
  -[BCSBusinessLinkMessage copyWithZone:]
  -[BCSBusinessLinkMessage hasMuid]
  -[BCSBusinessLinkMessage setMuid:]
  -[BCSBusinessLinkMessage setBundleId:]
  -[BCSBusinessLinkMessage actionAsString:]
  -[BCSBusinessLinkMessage StringAsAction:]
  -[BCSBusinessLinkMessage link]
  -[BCSBusinessLinkMessage setLink:]
  -[BCSBusinessLinkMessage setAction:]
  -[BCSBusinessLinkMessage .cxx_destruct]
  -[BCSBusinessLinkMessage action]
  -[BCSBusinessLinkMessage iconImage]
  -[BCSBusinessLinkMessage hasIconImage]
  -[BCSBusinessLinkMessage heroImage]
  -[BCSBusinessLinkMessage hasAction]
  -[BCSBusinessLinkMessage readFrom:]
  -[BCSBusinessLinkMessage writeTo:]
  -[BCSBusinessLinkMessage isEqual:]
  -[BCSBusinessLinkMessage setHeroImage:]
  -[BCSBusinessLinkMessage copyTo:]
  -[BCSBusinessLinkMessage dictionaryRepresentation]
  -[BCSBusinessLinkMessage hasLink]
  -[BCSBusinessLinkMessage bundleId]
  -[BCSBusinessLinkMessage mergeFrom:]
  -[BCSBusinessLinkMessage setHasAction:]
  -[BCSBusinessLinkMessage hasBundleId]
  -[BCSBusinessLinkMessage setIconImage:]
  -[BCSBusinessLinkMessage isPoweredBy]
  -[BCSBusinessLinkMessage businessLinkContents]
  -[BCSBusinessLinkMessage categoryStyleAttributes]
  -[BCSBusinessLinkMessage redirectUrl]
  -[BCSBusinessLinkMessage hasIsPoweredBy]
  -[BCSBusinessLinkMessage addBusinessLinkContents:]
  -[BCSBusinessLinkMessage addCategoryStyleAttributes:]
  -[BCSBusinessLinkMessage setRedirectUrl:]
  -[BCSBusinessLinkMessage businessLinkContentsCount]
  -[BCSBusinessLinkMessage clearBusinessLinkContents]
  -[BCSBusinessLinkMessage businessLinkContentsAtIndex:]
  -[BCSBusinessLinkMessage categoryStyleAttributesCount]
  -[BCSBusinessLinkMessage clearCategoryStyleAttributes]
  -[BCSBusinessLinkMessage categoryStyleAttributesAtIndex:]
  -[BCSBusinessLinkMessage hasHeroImage]
  -[BCSBusinessLinkMessage hasRedirectUrl]
  -[BCSBusinessLinkMessage setIsPoweredBy:]
  -[BCSBusinessLinkMessage setHasIsPoweredBy:]
  -[BCSBusinessLinkMessage setBusinessLinkContents:]
  -[BCSBusinessLinkMessage setCategoryStyleAttributes:]


BCSHashService : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[BCSHashService isValidFullHash:]
  +[BCSHashService SHA256HashForInputString:]
  +[BCSHashService SHA256TruncatedHashForInputString:includedBytes:]
  +[BCSHashService truncatedHashForFullHash:includedBytes:]
  +[BCSHashService _SHA256DataForInputString:]
  +[BCSHashService _truncatedHashForFullHashData:includedBytes:]


BCSChatSuggestWrapper : PBCodable /System/Library/Frameworks/CloudKit.framework/CloudKit <NSCopying>
 @property  BOOL hasPhone
 @property  NSString *phone
 @property  BOOL hasMessage
 @property  BCSChatSuggestMessage *message

  // instance methods
  -[BCSChatSuggestWrapper copyWithZone:]
  -[BCSChatSuggestWrapper phone]
  -[BCSChatSuggestWrapper message]
  -[BCSChatSuggestWrapper setPhone:]
  -[BCSChatSuggestWrapper setMessage:]
  -[BCSChatSuggestWrapper .cxx_destruct]
  -[BCSChatSuggestWrapper readFrom:]
  -[BCSChatSuggestWrapper writeTo:]
  -[BCSChatSuggestWrapper isEqual:]
  -[BCSChatSuggestWrapper copyTo:]
  -[BCSChatSuggestWrapper dictionaryRepresentation]
  -[BCSChatSuggestWrapper hasPhone]
  -[BCSChatSuggestWrapper hasMessage]
  -[BCSChatSuggestWrapper mergeFrom:]


BCSTimeRangeMessage : PBCodable /System/Library/Frameworks/CloudKit.framework/CloudKit <NSCopying>
 @property  BOOL hasFrom
 @property  int from
 @property  BOOL hasTo
 @property  int to
 @property  BOOL hasAllDay
 @property  BOOL allDay

  // instance methods
  -[BCSTimeRangeMessage allDay]
  -[BCSTimeRangeMessage to]
  -[BCSTimeRangeMessage from]
  -[BCSTimeRangeMessage copyWithZone:]
  -[BCSTimeRangeMessage hasTo]
  -[BCSTimeRangeMessage setAllDay:]
  -[BCSTimeRangeMessage setTo:]
  -[BCSTimeRangeMessage setHasAllDay:]
  -[BCSTimeRangeMessage hasFrom]
  -[BCSTimeRangeMessage setFrom:]
  -[BCSTimeRangeMessage setHasFrom:]
  -[BCSTimeRangeMessage readFrom:]
  -[BCSTimeRangeMessage writeTo:]
  -[BCSTimeRangeMessage isEqual:]
  -[BCSTimeRangeMessage setHasTo:]
  -[BCSTimeRangeMessage copyTo:]
  -[BCSTimeRangeMessage hasAllDay]
  -[BCSTimeRangeMessage dictionaryRepresentation]
  -[BCSTimeRangeMessage mergeFrom:]


BCSError : NSError /usr/lib/libobjc.A.dylib
  // class methods
  +[BCSError errorWithError:]
  +[BCSError errorWithDomain:code:errorDescription:localizedDescription:]

  // instance methods
  -[BCSError errorDescription]
  -[BCSError initWithError:]
  -[BCSError localizedDescription]


BCSBusinessItemIdentifier : NSObject /usr/lib/libSystem.B.dylib <BCSItemIdentifying>
 @property  long long computedTruncatedHash
 @property  NSObject *itemIdentifier
 @property  long long truncatedHash
 @property  long long type
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[BCSBusinessItemIdentifier identifierWithPhoneNumber:]
  +[BCSBusinessItemIdentifier identifierWithBusinessItem:]

  // instance methods
  -[BCSBusinessItemIdentifier itemIdentifier]
  -[BCSBusinessItemIdentifier succinctDescriptionBuilder]
  -[BCSBusinessItemIdentifier type]
  -[BCSBusinessItemIdentifier succinctDescription]
  -[BCSBusinessItemIdentifier descriptionWithMultilinePrefix:]
  -[BCSBusinessItemIdentifier descriptionBuilderWithMultilinePrefix:]
  -[BCSBusinessItemIdentifier truncatedHash]
  -[BCSBusinessItemIdentifier matchesItemIdentifying:]
  -[BCSBusinessItemIdentifier computedTruncatedHash]
  -[BCSBusinessItemIdentifier setComputedTruncatedHash:]
  -[BCSBusinessItemIdentifier _initWithPhoneNumber:]
  -[BCSBusinessItemIdentifier _initWithBusinessItem:]
  -[BCSBusinessItemIdentifier _truncatedHashForPhoneNumber:]


NBPhoneNumberDesc : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *nationalNumberPattern
 @property  NSString *possibleNumberPattern
 @property  NSArray *possibleLength
 @property  NSArray *possibleLengthLocalOnly
 @property  NSString *exampleNumber
 @property  NSData *nationalNumberMatcherData
 @property  NSData *possibleNumberMatcherData

  // instance methods
  -[NBPhoneNumberDesc .cxx_destruct]
  -[NBPhoneNumberDesc initWithEntry:]
  -[NBPhoneNumberDesc nationalNumberPattern]
  -[NBPhoneNumberDesc possibleNumberPattern]
  -[NBPhoneNumberDesc possibleLength]
  -[NBPhoneNumberDesc possibleLengthLocalOnly]
  -[NBPhoneNumberDesc exampleNumber]
  -[NBPhoneNumberDesc nationalNumberMatcherData]
  -[NBPhoneNumberDesc possibleNumberMatcherData]


NBRegExMatcher : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[NBRegExMatcher matchNationalNumber:phoneNumberDesc:allowsPrefixMatch:]


BCSPathProvider : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[BCSPathProvider cachesPath]
  +[BCSPathProvider tempPath]
  +[BCSPathProvider _createBundleBasedDirectoryIfNecessary:]


BCSCategoryStyleAttribute : PBCodable /System/Library/Frameworks/CloudKit.framework/CloudKit <NSCopying>
 @property  BOOL hasKey
 @property  int key
 @property  BOOL hasValue
 @property  int value

  // instance methods
  -[BCSCategoryStyleAttribute copyWithZone:]
  -[BCSCategoryStyleAttribute hasValue]
  -[BCSCategoryStyleAttribute hasKey]
  -[BCSCategoryStyleAttribute setKey:]
  -[BCSCategoryStyleAttribute key]
  -[BCSCategoryStyleAttribute readFrom:]
  -[BCSCategoryStyleAttribute writeTo:]
  -[BCSCategoryStyleAttribute setValue:]
  -[BCSCategoryStyleAttribute isEqual:]
  -[BCSCategoryStyleAttribute value]
  -[BCSCategoryStyleAttribute copyTo:]
  -[BCSCategoryStyleAttribute dictionaryRepresentation]
  -[BCSCategoryStyleAttribute mergeFrom:]
  -[BCSCategoryStyleAttribute setHasValue:]
  -[BCSCategoryStyleAttribute setHasKey:]


BCSCloudServerRequestHelper : NSObject /usr/lib/libSystem.B.dylib
 @property  <BCSCloudServerRouteProvider> *cloudServerRouteProvider
 @property  <BCSCloudServerBodyProvider> *cloudServerBodyProvider

  // instance methods
  -[BCSCloudServerRequestHelper .cxx_destruct]
  -[BCSCloudServerRequestHelper businessItemRequestWithBizID:timeout:]
  -[BCSCloudServerRequestHelper itemRequestWithBucketStartIndex:endIndex:type:timeout:]
  -[BCSCloudServerRequestHelper initWithRouteProvider:bodyProvider:]
  -[BCSCloudServerRequestHelper baseBusinessItemJSONPostRequestWithTimeout:cloudServerRequestType:itemType:]
  -[BCSCloudServerRequestHelper cloudServerBodyProvider]
  -[BCSCloudServerRequestHelper _addEdgeCachingToRequest:requestType:itemType:requestIdentifier:]
  -[BCSCloudServerRequestHelper _edgeCacheItemRequestTypeForType:]
  -[BCSCloudServerRequestHelper _itemRecordTypeForType:]
  -[BCSCloudServerRequestHelper _configRecordTypeForType:]
  -[BCSCloudServerRequestHelper _edgeCacheBloomFilterRequestTypeForType:]
  -[BCSCloudServerRequestHelper _bloomFilterRecordTypeForType:]
  -[BCSCloudServerRequestHelper _skipEdgeCachingWithType:]
  -[BCSCloudServerRequestHelper cloudServerRouteProvider]
  -[BCSCloudServerRequestHelper configItemRequestWithType:timeout:]
  -[BCSCloudServerRequestHelper shardRequestForShardIdentifier:timeout:]
  -[BCSCloudServerRequestHelper _edgeCacheConfigRequestTypeForType:]
  -[BCSCloudServerRequestHelper setCloudServerRouteProvider:]
  -[BCSCloudServerRequestHelper setCloudServerBodyProvider:]


BCSQueryChopper : NSObject /usr/lib/libSystem.B.dylib <BCSQueryChopperProtocol>
 @property  NSObject<OS_dispatch_queue> *serialDispatchQueue
 @property  <BCSMetricFactoryProtocol> *metricFactory
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[BCSQueryChopper .cxx_destruct]
  -[BCSQueryChopper serialDispatchQueue]
  -[BCSQueryChopper metricFactory]
  -[BCSQueryChopper initWithMetricFactory:]
  -[BCSQueryChopper queryChopperDelegate:fetchLinkItemModelWithURL:forClientBundleID:metric:completion:]
  -[BCSQueryChopper queryChopperDelegate:isBusinessRegisteredForURL:forClientBundleID:metric:completion:]
  -[BCSQueryChopper _chopItemIdentifiersToFetchFromURL:]
  -[BCSQueryChopper _indexOfItemIdentifierInfo:inItemIdentifierInfos:]
  -[BCSQueryChopper _allHigherPriorityRemoteFetchesHaveCompletedWithLinkItemIdentifier:itemsFound:itemIdentifiersToFetch:]
  -[BCSQueryChopper _returnHighestPriorityLinkItemWithItemIdentifiersToFetch:fetchedItems:fetchedErrors:metric:completion:]
  -[BCSQueryChopper _removeLinkItemDuplicatesInOrderFromArray:]


BCSChoppedItemIdentifierInfo : NSObject /usr/lib/libSystem.B.dylib
 @property  BCSLinkItemIdentifier *itemIdentifier
 @property  long long chopID

  // class methods
  +[BCSChoppedItemIdentifierInfo newWithLinkItemIdentifier:chopID:]

  // instance methods
  -[BCSChoppedItemIdentifierInfo itemIdentifier]
  -[BCSChoppedItemIdentifierInfo .cxx_destruct]
  -[BCSChoppedItemIdentifierInfo chopID]
  -[BCSChoppedItemIdentifierInfo setItemIdentifier:]
  -[BCSChoppedItemIdentifierInfo setChopID:]


BCSOperationGroupFactory : NSObject /usr/lib/libSystem.B.dylib <BCSOperationGroupFactoryProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[BCSOperationGroupFactory makeOperationGroup]


BCSConfigPrefetcher : NSObject /usr/lib/libSystem.B.dylib
 @property  <BCSConfigCaching> *configCache
 @property  <BCSConfigCacheSkipping> *configCacheSkipper
 @property  <BCSFeatureFlagArbitrating> *featureFlagArbiter
 @property  <BCSConfigRemoteFetching> *chatSuggestConfigRemoteFetcher
 @property  <BCSConfigRemoteFetching> *businessLinkConfigRemoteFetcher
 @property  <BCSUserDefaultsProviding> *userDefaults
 @property  <BCSMetricFactoryProtocol> *metricFactory
 @property  NSMutableSet *triggers

  // instance methods
  -[BCSConfigPrefetcher setUserDefaults:]
  -[BCSConfigPrefetcher userDefaults]
  -[BCSConfigPrefetcher .cxx_destruct]
  -[BCSConfigPrefetcher triggers]
  -[BCSConfigPrefetcher setTriggers:]
  -[BCSConfigPrefetcher configCache]
  -[BCSConfigPrefetcher configCacheSkipper]
  -[BCSConfigPrefetcher metricFactory]
  -[BCSConfigPrefetcher setConfigCache:]
  -[BCSConfigPrefetcher setConfigCacheSkipper:]
  -[BCSConfigPrefetcher setMetricFactory:]
  -[BCSConfigPrefetcher _hoursSinceLastSuccessfulPrefetchForType:]
  -[BCSConfigPrefetcher _notePrefetchForType:finishedSuccessfully:]
  -[BCSConfigPrefetcher _shouldPrefetchType:]
  -[BCSConfigPrefetcher addPrefetchTrigger:]
  -[BCSConfigPrefetcher setFeatureFlagArbiter:]
  -[BCSConfigPrefetcher setChatSuggestConfigRemoteFetcher:]
  -[BCSConfigPrefetcher setBusinessLinkConfigRemoteFetcher:]
  -[BCSConfigPrefetcher _prefetchConfigsIfNecessaryWithXCPActivity:completion:]
  -[BCSConfigPrefetcher chatSuggestConfigRemoteFetcher]
  -[BCSConfigPrefetcher businessLinkConfigRemoteFetcher]
  -[BCSConfigPrefetcher initWithConfigCache:configCacheSkipper:featureFlagArbiter:chatSuggestConfigRemoteFetcher:businessLinkConfigRemoteFetcher:userDefaults:metricFactory:]
  -[BCSConfigPrefetcher featureFlagArbiter]


BCSCloudKitQueryProvider : NSObject /usr/lib/libSystem.B.dylib <BCSCloudKitQueryProviding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[BCSCloudKitQueryProvider queryForFetchBloomFilterAndConfigItemWithType:]
  -[BCSCloudKitQueryProvider queryForFetchShardIdentifier:]
  -[BCSCloudKitQueryProvider queryForFetchItemsWithStartIndex:endIndex:type:]


BCSItemCache : NSObject /usr/lib/libSystem.B.dylib <BCSItemCaching, BCSLinkItemCacheClearing, BCSBatchable>
 @property  BCSBusinessItemMemoryCache *chatSuggestItemStore
 @property  BCSLinkItemPersistentStore *linkItemStore
 @property  <BCSUserDefaultsProviding> *userDefaults
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[BCSItemCache setUserDefaults:]
  -[BCSItemCache userDefaults]
  -[BCSItemCache init]
  -[BCSItemCache .cxx_destruct]
  -[BCSItemCache endBatch]
  -[BCSItemCache beginBatch]
  -[BCSItemCache itemMatching:]
  -[BCSItemCache deleteItemMatching:]
  -[BCSItemCache updateItem:withItemIdentifier:]
  -[BCSItemCache deleteItemsOfType:]
  -[BCSItemCache deleteExpiredItemsOfType:]
  -[BCSItemCache deleteLinkItemsWithBundleID:]
  -[BCSItemCache chatSuggestItemStore]
  -[BCSItemCache linkItemStore]
  -[BCSItemCache setChatSuggestItemStore:]
  -[BCSItemCache setLinkItemStore:]


BCSLinkItem : BCSItem <BSDescriptionProviding, BCSLinkItemDescribing, BCSBusinessLinkContentItemDescribing, NSCopying>
 @property  NSURL *heroImageURL
 @property  NSURL *iconImageURL
 @property  NSString *cachedContentItemLanguage
 @property  BCSBusinessLinkContentItem *cachedContentItem
 @property  <BCSLocaleHelperProtocol> *localeHelper
 @property  BCSLinkItemModel *model
 @property  NSURL *linkURL
 @property  NSString *fullHash
 @property  NSString *bundleID
 @property  NSURL *redirectURL
 @property  long long action
 @property  BOOL isPoweredBy
 @property  NSString *language
 @property  NSString *subtitle
 @property  NSString *title
 @property  BCSBusinessLinkContentItem *businessLinkContentItem
 @property  NSDictionary *mapIconStyleAttributes
 @property  NSNumber *mapItemMUID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *heroImageURLString
 @property  NSString *iconImageURLString

  // class methods
  +[BCSLinkItem linkItemsFromLinkItemModels:]

  // instance methods
  -[BCSLinkItem copyWithZone:]
  -[BCSLinkItem itemIdentifier]
  -[BCSLinkItem linkURL]
  -[BCSLinkItem .cxx_destruct]
  -[BCSLinkItem action]
  -[BCSLinkItem iconImageURL]
  -[BCSLinkItem succinctDescriptionBuilder]
  -[BCSLinkItem title]
  -[BCSLinkItem type]
  -[BCSLinkItem succinctDescription]
  -[BCSLinkItem subtitle]
  -[BCSLinkItem redirectURL]
  -[BCSLinkItem model]
  -[BCSLinkItem descriptionWithMultilinePrefix:]
  -[BCSLinkItem bundleID]
  -[BCSLinkItem descriptionBuilderWithMultilinePrefix:]
  -[BCSLinkItem heroImageURL]
  -[BCSLinkItem language]
  -[BCSLinkItem isPoweredBy]
  -[BCSLinkItem heroImageURLForSpecifier:]
  -[BCSLinkItem fullHash]
  -[BCSLinkItem mapIconStyleAttributes]
  -[BCSLinkItem mapItemMUID]
  -[BCSLinkItem truncatedHash]
  -[BCSLinkItem matchesItemIdentifying:]
  -[BCSLinkItem initWithLinkItemModel:expirationDate:localeHelper:]
  -[BCSLinkItem heroImageURLString]
  -[BCSLinkItem iconImageURLString]
  -[BCSLinkItem initWithLinkItemModel:localeHelper:]
  -[BCSLinkItem localeHelper]
  -[BCSLinkItem cachedContentItemLanguage]
  -[BCSLinkItem cachedContentItem]
  -[BCSLinkItem _businessLinkContentItems]
  -[BCSLinkItem setCachedContentItem:]
  -[BCSLinkItem setCachedContentItemLanguage:]
  -[BCSLinkItem businessLinkContentItem]
  -[BCSLinkItem iconImageURLForSpecifier:]


BCSCallToActionItem : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSString *language
 @property  NSString *subtitle
 @property  NSString *title
 @property  NSString *body
 @property  BOOL isDefault

  // class methods
  +[BCSCallToActionItem supportsSecureCoding]

  // instance methods
  -[BCSCallToActionItem copyWithZone:]
  -[BCSCallToActionItem .cxx_destruct]
  -[BCSCallToActionItem encodeWithCoder:]
  -[BCSCallToActionItem title]
  -[BCSCallToActionItem body]
  -[BCSCallToActionItem subtitle]
  -[BCSCallToActionItem isDefault]
  -[BCSCallToActionItem initWithCoder:]
  -[BCSCallToActionItem language]
  -[BCSCallToActionItem initWithCallToAction:]
  -[BCSCallToActionItem initWithTitle:subtitle:language:body:isDefault:]


BCSBusinessLinkContentItemModel : NSObject /usr/lib/libSystem.B.dylib <BSDescriptionProviding, BCSBusinessLinkContentItemDescribing, NSCopying, NSSecureCoding>
 @property  BOOL isDefault
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *language
 @property  NSString *subtitle
 @property  NSString *title

  // class methods
  +[BCSBusinessLinkContentItemModel supportsSecureCoding]

  // instance methods
  -[BCSBusinessLinkContentItemModel copyWithZone:]
  -[BCSBusinessLinkContentItemModel .cxx_destruct]
  -[BCSBusinessLinkContentItemModel succinctDescriptionBuilder]
  -[BCSBusinessLinkContentItemModel encodeWithCoder:]
  -[BCSBusinessLinkContentItemModel title]
  -[BCSBusinessLinkContentItemModel succinctDescription]
  -[BCSBusinessLinkContentItemModel subtitle]
  -[BCSBusinessLinkContentItemModel isDefault]
  -[BCSBusinessLinkContentItemModel descriptionWithMultilinePrefix:]
  -[BCSBusinessLinkContentItemModel initWithCoder:]
  -[BCSBusinessLinkContentItemModel descriptionBuilderWithMultilinePrefix:]
  -[BCSBusinessLinkContentItemModel language]
  -[BCSBusinessLinkContentItemModel initWithBusinessLinkContent:]
  -[BCSBusinessLinkContentItemModel initWithTitle:subtitle:language:isDefault:]


BCSShardResolver : NSObject /usr/lib/libSystem.B.dylib <BCSShardResolving>
 @property  <BCSShardCaching> *shardCache
 @property  <BCSShardCacheSkipping> *shardCacheSkipper
 @property  <BCSShardRemoteFetching> *shardRemoteFetcher
 @property  <BCSMetricFactoryProtocol> *metricFactory
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[BCSShardResolver .cxx_destruct]
  -[BCSShardResolver metricFactory]
  -[BCSShardResolver shardCache]
  -[BCSShardResolver shardCacheSkipper]
  -[BCSShardResolver initWithShardCache:cacheSkipper:remoteFetcher:metricFactory:]
  -[BCSShardResolver shardItemMatching:clientBundleID:metric:completion:]
  -[BCSShardResolver shardRemoteFetcher]


NBPhoneNumber : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSCoding>
 @property  NSNumber *countryCode
 @property  NSNumber *nationalNumber
 @property  NSString *extension
 @property  BOOL italianLeadingZero
 @property  NSNumber *numberOfLeadingZeros
 @property  NSString *rawInput
 @property  NSNumber *countryCodeSource
 @property  NSString *preferredDomesticCarrierCode

  // instance methods
  -[NBPhoneNumber copyWithZone:]
  -[NBPhoneNumber extension]
  -[NBPhoneNumber init]
  -[NBPhoneNumber .cxx_destruct]
  -[NBPhoneNumber encodeWithCoder:]
  -[NBPhoneNumber countryCode]
  -[NBPhoneNumber isEqual:]
  -[NBPhoneNumber setExtension:]
  -[NBPhoneNumber setCountryCode:]
  -[NBPhoneNumber initWithCoder:]
  -[NBPhoneNumber setNationalNumber:]
  -[NBPhoneNumber setNumberOfLeadingZeros:]
  -[NBPhoneNumber setCountryCodeSource:]
  -[NBPhoneNumber countryCodeSource]
  -[NBPhoneNumber nationalNumber]
  -[NBPhoneNumber numberOfLeadingZeros]
  -[NBPhoneNumber italianLeadingZero]
  -[NBPhoneNumber setItalianLeadingZero:]
  -[NBPhoneNumber rawInput]
  -[NBPhoneNumber setRawInput:]
  -[NBPhoneNumber preferredDomesticCarrierCode]
  -[NBPhoneNumber setPreferredDomesticCarrierCode:]
  -[NBPhoneNumber clearCountryCodeSource]
  -[NBPhoneNumber getCountryCodeSourceOrDefault]


BCSLocaleHelper : NSObject /usr/lib/libSystem.B.dylib <BCSLocaleHelperProtocol>
 @property  NSLocale *currentLocale

  // instance methods
  -[BCSLocaleHelper currentLocale]


BCSBusinessItem : BCSItem <NSCopying, NSSecureCoding>
 @property  BCSOpenHours *messagingOpenHours
 @property  BCSOpenHours *callingOpenHours
 @property  BCSBusinessItemIdentifier *businessItemIdentifier
 @property  NSArray *visibilityItems
 @property  NSString *bizID
 @property  NSString *phoneNumber
 @property  NSString *name
 @property  long long phoneHash
 @property  NSURL *squareLogoURL
 @property  NSURL *wideLogoURL
 @property  unsigned long tintColor
 @property  unsigned long backgroundColor
 @property  NSArray *callToActions
 @property  BOOL isVerified
 @property  NSString *intentID
 @property  NSString *groupID
 @property  BOOL isAvailableForMessaging
 @property  NSDate *dateWhenMessagingAvailableNext
 @property  BOOL isAvailableForCalling
 @property  NSDate *dateWhenCallingAvailableNext

  // class methods
  +[BCSBusinessItem supportsSecureCoding]
  +[BCSBusinessItem businessItemsFromChatSuggestJSONObj:]
  +[BCSBusinessItem businessItemsFromChatSuggestMessageDictionary:]
  +[BCSBusinessItem businessItemsFromRecords:]

  // instance methods
  -[BCSBusinessItem copyWithZone:]
  -[BCSBusinessItem itemIdentifier]
  -[BCSBusinessItem phoneNumber]
  -[BCSBusinessItem tintColor]
  -[BCSBusinessItem bizID]
  -[BCSBusinessItem backgroundColor]
  -[BCSBusinessItem .cxx_destruct]
  -[BCSBusinessItem name]
  -[BCSBusinessItem encodeWithCoder:]
  -[BCSBusinessItem groupID]
  -[BCSBusinessItem type]
  -[BCSBusinessItem callToAction]
  -[BCSBusinessItem isVerified]
  -[BCSBusinessItem initWithCoder:]
  -[BCSBusinessItem truncatedHash]
  -[BCSBusinessItem matchesItemIdentifying:]
  -[BCSBusinessItem messagingOpenHours]
  -[BCSBusinessItem callingOpenHours]
  -[BCSBusinessItem callToActions]
  -[BCSBusinessItem visibilityItems]
  -[BCSBusinessItem phoneHash]
  -[BCSBusinessItem squareLogoURL]
  -[BCSBusinessItem wideLogoURL]
  -[BCSBusinessItem intentID]
  -[BCSBusinessItem initWithBizID:phoneNumber:name:phoneHash:squareLogoURL:wideLogoURL:tintColor:backgroundColor:callToActions:messagingOpenHours:callingOpenHours:isVerified:intentID:groupID:visibilityItems:]
  -[BCSBusinessItem _integerForHexString:]
  -[BCSBusinessItem initWithChatSuggestMessage:bucketID:]
  -[BCSBusinessItem _visibilityItemsDescription]
  -[BCSBusinessItem _isAvailableForMessagingAtDate:]
  -[BCSBusinessItem _dateWhenMessagingAvailableNextAfterDate:]
  -[BCSBusinessItem _isAvailableForCallingAtDate:]
  -[BCSBusinessItem _dateWhenCallingAvailableNextAfterDate:]
  -[BCSBusinessItem _businessItemIdentifier]
  -[BCSBusinessItem _callToActionForLanguage:]
  -[BCSBusinessItem isAvailableForMessaging]
  -[BCSBusinessItem dateWhenMessagingAvailableNext]
  -[BCSBusinessItem isAvailableForCalling]
  -[BCSBusinessItem dateWhenCallingAvailableNext]
  -[BCSBusinessItem _isChatSuggestVisibleForVisibilityItem:messagesIdentifier:bizID:]
  -[BCSBusinessItem _selectedVisibilityItemForLanguage:country:]
  -[BCSBusinessItem initWithJSONObj:]


BCSMegashard : NSObject /usr/lib/libSystem.B.dylib
 @property  BCSConfigItem *configItem
 @property  NSURL *bloomFilterURL

  // instance methods
  -[BCSMegashard .cxx_destruct]
  -[BCSMegashard initWithRecord:type:]
  -[BCSMegashard setConfigItem:]
  -[BCSMegashard setBloomFilterURL:]
  -[BCSMegashard configItem]
  -[BCSMegashard bloomFilterURL]


BCSMeasurementFactory : NSObject /usr/lib/libSystem.B.dylib <BCSMeasurementFactoryProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[BCSMeasurementFactory configCacheHitMeasurementForConfigType:]
  -[BCSMeasurementFactory itemCacheHitMeasurementForItemIdentifier:]
  -[BCSMeasurementFactory itemIsRegisteredTimingMeasurementForItemIdentifier:]
  -[BCSMeasurementFactory itemFetchTimingMeasurementForItemIdentifier:]
  -[BCSMeasurementFactory businessLinkFetchByHashTimingMeasurementForItemIdentifier:]
  -[BCSMeasurementFactory configResolutionTimingMeasurementForConfigType:]
  -[BCSMeasurementFactory shardResolutionTimingMeasurementForShardIdentifier:]
  -[BCSMeasurementFactory itemResolutionTimingMeasurementForItemIdentifier:]
  -[BCSMeasurementFactory businessLinkChoppedFetchTimingMeasurementForItemIdentifier:]
  -[BCSMeasurementFactory shardCacheHitMeasurementForShardIdentifier:]
  -[BCSMeasurementFactory configCloudKitFetchTimingMeasurementForType:identifier:]
  -[BCSMeasurementFactory shardCloudKitFetchTimingMeasurementForType:identifier:]
  -[BCSMeasurementFactory itemCloudKitFetchTimingMeasurementForType:identifier:]
  -[BCSMeasurementFactory megashardCloudKitFetchTimingMeasurementForType:identifier:]
  -[BCSMeasurementFactory configCloudKitFetchAndDecodeTimingMeasurementForType:identifier:]
  -[BCSMeasurementFactory shardCloudKitFetchAndDecodeTimingMeasurementForType:identifier:]
  -[BCSMeasurementFactory itemCloudKitFetchAndDecodeTimingMeasurementForType:identifier:]
  -[BCSMeasurementFactory megashardCloudKitFetchAndDecodeTimingMeasurementForType:identifier:]


BCSBusinessLinkContentItem : NSObject /usr/lib/libSystem.B.dylib <BCSBusinessLinkContentItemDescribing>
 @property  BCSBusinessLinkContentItemModel *businessLinkContentItemModel
 @property  BOOL isDefault
 @property  NSString *language
 @property  NSString *subtitle
 @property  NSString *title
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[BCSBusinessLinkContentItem .cxx_destruct]
  -[BCSBusinessLinkContentItem title]
  -[BCSBusinessLinkContentItem subtitle]
  -[BCSBusinessLinkContentItem isDefault]
  -[BCSBusinessLinkContentItem language]
  -[BCSBusinessLinkContentItem initWithBusinessLinkContentItemModel:]
  -[BCSBusinessLinkContentItem businessLinkContentItemModel]


BCSConfigItem : NSObject /usr/lib/libSystem.B.dylib <BCSExpiring, NSCopying, NSSecureCoding>
 @property  long long buckets
 @property  long long shards
 @property  NSNumber *itemTTL
 @property  NSDate *expirationDate
 @property  BOOL expired
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[BCSConfigItem supportsSecureCoding]
  +[BCSConfigItem keysRequestedForCloudKitFetch]

  // instance methods
  -[BCSConfigItem copyWithZone:]
  -[BCSConfigItem .cxx_destruct]
  -[BCSConfigItem buckets]
  -[BCSConfigItem encodeWithCoder:]
  -[BCSConfigItem isExpired]
  -[BCSConfigItem shards]
  -[BCSConfigItem initWithRecord:]
  -[BCSConfigItem expirationDate]
  -[BCSConfigItem itemTTL]
  -[BCSConfigItem initWithCoder:]
  -[BCSConfigItem initWithJSONObj:]
  -[BCSConfigItem initWithBuckets:shards:expirationDate:]
  -[BCSConfigItem _extractItemTTLFromConfigRecord:]
  -[BCSConfigItem initWithBuckets:shards:expirationDate:itemTTL:]


BCSBusinessLinkContent : PBCodable /System/Library/Frameworks/CloudKit.framework/CloudKit <NSCopying>
 @property  BOOL hasLanguage
 @property  NSString *language
 @property  BOOL hasTitle
 @property  NSString *title
 @property  BOOL hasSubtitle
 @property  NSString *subtitle
 @property  BOOL hasIsDefault
 @property  BOOL isDefault

  // instance methods
  -[BCSBusinessLinkContent copyWithZone:]
  -[BCSBusinessLinkContent setSubtitle:]
  -[BCSBusinessLinkContent hasTitle]
  -[BCSBusinessLinkContent hasLanguage]
  -[BCSBusinessLinkContent setLanguage:]
  -[BCSBusinessLinkContent .cxx_destruct]
  -[BCSBusinessLinkContent hasSubtitle]
  -[BCSBusinessLinkContent setTitle:]
  -[BCSBusinessLinkContent setHasIsDefault:]
  -[BCSBusinessLinkContent hasIsDefault]
  -[BCSBusinessLinkContent title]
  -[BCSBusinessLinkContent readFrom:]
  -[BCSBusinessLinkContent writeTo:]
  -[BCSBusinessLinkContent isEqual:]
  -[BCSBusinessLinkContent subtitle]
  -[BCSBusinessLinkContent copyTo:]
  -[BCSBusinessLinkContent dictionaryRepresentation]
  -[BCSBusinessLinkContent isDefault]
  -[BCSBusinessLinkContent mergeFrom:]
  -[BCSBusinessLinkContent setIsDefault:]
  -[BCSBusinessLinkContent language]


BCSManualPrefetchTrigger : NSObject /usr/lib/libSystem.B.dylib <BCSPrefetchTrigger>
 @property  @? prefetchBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[BCSManualPrefetchTrigger .cxx_destruct]
  -[BCSManualPrefetchTrigger schedulePrefetchBlock:]
  -[BCSManualPrefetchTrigger triggerPrefetchWithCompletion:]
  -[BCSManualPrefetchTrigger setPrefetchBlock:]
  -[BCSManualPrefetchTrigger prefetchBlock]


BCSHoursMessage : PBCodable /System/Library/Frameworks/CloudKit.framework/CloudKit <NSCopying>
 @property  unsigned long daysCount
 @property  ^i days
 @property  NSMutableArray *timeRanges

  // class methods
  +[BCSHoursMessage timeRangeType]

  // instance methods
  -[BCSHoursMessage days]
  -[BCSHoursMessage copyWithZone:]
  -[BCSHoursMessage dealloc]
  -[BCSHoursMessage addDay:]
  -[BCSHoursMessage .cxx_destruct]
  -[BCSHoursMessage timeRangeAtIndex:]
  -[BCSHoursMessage dayAtIndex:]
  -[BCSHoursMessage setTimeRanges:]
  -[BCSHoursMessage readFrom:]
  -[BCSHoursMessage addTimeRange:]
  -[BCSHoursMessage writeTo:]
  -[BCSHoursMessage isEqual:]
  -[BCSHoursMessage daysCount]
  -[BCSHoursMessage clearDays]
  -[BCSHoursMessage copyTo:]
  -[BCSHoursMessage dictionaryRepresentation]
  -[BCSHoursMessage mergeFrom:]
  -[BCSHoursMessage setDays:count:]
  -[BCSHoursMessage timeRangesCount]
  -[BCSHoursMessage clearTimeRanges]
  -[BCSHoursMessage daysAsString:]
  -[BCSHoursMessage StringAsDays:]
  -[BCSHoursMessage timeRanges]


BCSChatSuggestMessage : PBCodable /System/Library/Frameworks/CloudKit.framework/CloudKit <NSCopying>
 @property  BOOL hasPhoneHash
 @property  long long phoneHash
 @property  BOOL hasBizId
 @property  NSString *bizId
 @property  BOOL hasName
 @property  NSString *name
 @property  NSMutableArray *chatOpenHours
 @property  NSMutableArray *phoneOpenHours
 @property  BOOL hasTimeZone
 @property  NSString *timeZone
 @property  BOOL hasSquareLogoUrl
 @property  NSString *squareLogoUrl
 @property  BOOL hasWideLogoUrl
 @property  NSString *wideLogoUrl
 @property  BOOL hasBackgroundColor
 @property  NSString *backgroundColor
 @property  BOOL hasTintColor
 @property  NSString *tintColor
 @property  BOOL hasIsVerified
 @property  BOOL isVerified
 @property  NSMutableArray *callToActions
 @property  NSMutableArray *visibilities
 @property  BOOL hasIntentId
 @property  NSString *intentId
 @property  BOOL hasGroup
 @property  NSString *group

  // class methods
  +[BCSChatSuggestMessage chatOpenHoursType]
  +[BCSChatSuggestMessage phoneOpenHoursType]
  +[BCSChatSuggestMessage callToActionsType]
  +[BCSChatSuggestMessage visibilitiesType]

  // instance methods
  -[BCSChatSuggestMessage group]
  -[BCSChatSuggestMessage copyWithZone:]
  -[BCSChatSuggestMessage setBackgroundColor:]
  -[BCSChatSuggestMessage setTintColor:]
  -[BCSChatSuggestMessage timeZone]
  -[BCSChatSuggestMessage setGroup:]
  -[BCSChatSuggestMessage intentId]
  -[BCSChatSuggestMessage tintColor]
  -[BCSChatSuggestMessage setTimeZone:]
  -[BCSChatSuggestMessage hasName]
  -[BCSChatSuggestMessage backgroundColor]
  -[BCSChatSuggestMessage bizId]
  -[BCSChatSuggestMessage .cxx_destruct]
  -[BCSChatSuggestMessage name]
  -[BCSChatSuggestMessage setIsVerified:]
  -[BCSChatSuggestMessage setHasIsVerified:]
  -[BCSChatSuggestMessage hasIsVerified]
  -[BCSChatSuggestMessage hasGroup]
  -[BCSChatSuggestMessage hasBackgroundColor]
  -[BCSChatSuggestMessage readFrom:]
  -[BCSChatSuggestMessage hasIntentId]
  -[BCSChatSuggestMessage writeTo:]
  -[BCSChatSuggestMessage isEqual:]
  -[BCSChatSuggestMessage hasTintColor]
  -[BCSChatSuggestMessage copyTo:]
  -[BCSChatSuggestMessage dictionaryRepresentation]
  -[BCSChatSuggestMessage isVerified]
  -[BCSChatSuggestMessage mergeFrom:]
  -[BCSChatSuggestMessage setName:]
  -[BCSChatSuggestMessage setIntentId:]
  -[BCSChatSuggestMessage hasTimeZone]
  -[BCSChatSuggestMessage callToActions]
  -[BCSChatSuggestMessage phoneHash]
  -[BCSChatSuggestMessage chatOpenHours]
  -[BCSChatSuggestMessage phoneOpenHours]
  -[BCSChatSuggestMessage visibilities]
  -[BCSChatSuggestMessage squareLogoUrl]
  -[BCSChatSuggestMessage wideLogoUrl]
  -[BCSChatSuggestMessage addChatOpenHours:]
  -[BCSChatSuggestMessage addPhoneOpenHours:]
  -[BCSChatSuggestMessage addCallToActions:]
  -[BCSChatSuggestMessage addVisibilities:]
  -[BCSChatSuggestMessage setBizId:]
  -[BCSChatSuggestMessage chatOpenHoursCount]
  -[BCSChatSuggestMessage clearChatOpenHours]
  -[BCSChatSuggestMessage chatOpenHoursAtIndex:]
  -[BCSChatSuggestMessage phoneOpenHoursCount]
  -[BCSChatSuggestMessage clearPhoneOpenHours]
  -[BCSChatSuggestMessage phoneOpenHoursAtIndex:]
  -[BCSChatSuggestMessage setSquareLogoUrl:]
  -[BCSChatSuggestMessage setWideLogoUrl:]
  -[BCSChatSuggestMessage callToActionsCount]
  -[BCSChatSuggestMessage clearCallToActions]
  -[BCSChatSuggestMessage callToActionsAtIndex:]
  -[BCSChatSuggestMessage visibilitiesCount]
  -[BCSChatSuggestMessage clearVisibilities]
  -[BCSChatSuggestMessage visibilitiesAtIndex:]
  -[BCSChatSuggestMessage setPhoneHash:]
  -[BCSChatSuggestMessage setHasPhoneHash:]
  -[BCSChatSuggestMessage hasPhoneHash]
  -[BCSChatSuggestMessage hasBizId]
  -[BCSChatSuggestMessage hasSquareLogoUrl]
  -[BCSChatSuggestMessage hasWideLogoUrl]
  -[BCSChatSuggestMessage setChatOpenHours:]
  -[BCSChatSuggestMessage setPhoneOpenHours:]
  -[BCSChatSuggestMessage setCallToActions:]
  -[BCSChatSuggestMessage setVisibilities:]


BCSRemoteFetchCloudKit : NSObject /usr/lib/libSystem.B.dylib <BSDescriptionProviding, BCSConfigRemoteFetching, BCSShardRemoteFetching, BCSBloomFilterAndConfigRemoteFetching, BCSItemRemoteFetching, BCSShardItemInstantiating>
 @property  <BCSCloudKitDatabaseProtocol> *database
 @property  <BCSCloudKitQueryProviding> *queryProvider
 @property  <BCSQueryOperationFactoryProtocol> *queryOperationFactory
 @property  CKContainer *databaseContainer
 @property  <BCSICloudServerEnvironmentProtocol> *environment
 @property  <BCSCoalesceHelperProtocol> *coalesceHelper
 @property  <BCSBloomFilterExtractorProtocol> *bloomFilterExtractor
 @property  <BCSOperationGroupFactoryProtocol> *operationGroupFactory
 @property  <BCSMetricFactoryProtocol> *metricFactory
 @property  long long supportedType
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[BCSRemoteFetchCloudKit .cxx_destruct]
  -[BCSRemoteFetchCloudKit succinctDescriptionBuilder]
  -[BCSRemoteFetchCloudKit database]
  -[BCSRemoteFetchCloudKit succinctDescription]
  -[BCSRemoteFetchCloudKit environment]
  -[BCSRemoteFetchCloudKit descriptionWithMultilinePrefix:]
  -[BCSRemoteFetchCloudKit descriptionBuilderWithMultilinePrefix:]
  -[BCSRemoteFetchCloudKit fetchConfigItemWithType:clientBundleID:completion:]
  -[BCSRemoteFetchCloudKit metricFactory]
  -[BCSRemoteFetchCloudKit shardItemFromURL:]
  -[BCSRemoteFetchCloudKit fetchBloomFilterAndConfigItemWithType:clientBundleID:completion:]
  -[BCSRemoteFetchCloudKit fetchItemsWithBucketStartIndex:endIndex:type:forClientBundleID:completion:]
  -[BCSRemoteFetchCloudKit fetchConfigItemWithType:clientBundleID:xpcActivity:completion:]
  -[BCSRemoteFetchCloudKit fetchShardMatching:clientBundleID:completion:]
  -[BCSRemoteFetchCloudKit initWithEnvironment:database:databaseContainer:queryProvider:queryOperationFactory:coalesceHelper:bloomFilterExtractor:operationGroupFactory:metricFactory:]
  -[BCSRemoteFetchCloudKit coalesceHelper]
  -[BCSRemoteFetchCloudKit queryProvider]
  -[BCSRemoteFetchCloudKit _additionalHTTPHeadersForConfigFetchWithType:]
  -[BCSRemoteFetchCloudKit _queryOperationForQuery:clientBundleID:xpcActivity:requestSpecificAdditionalHTTPHeaders:type:singleFetchCompletion:]
  -[BCSRemoteFetchCloudKit _additionalHTTPHeadersForShardFetchWithType:]
  -[BCSRemoteFetchCloudKit fetchBloomFilterAndConfigItemWithType:clientBundleID:xpcActivity:completion:]
  -[BCSRemoteFetchCloudKit _additionalHTTPHeadersForConfigAndShardFetchWithType:]
  -[BCSRemoteFetchCloudKit bloomFilterExtractor]
  -[BCSRemoteFetchCloudKit _additionalHTTPHeadersForItemFetchWithType:]
  -[BCSRemoteFetchCloudKit _itemsFromCloudKitResults:forType:]
  -[BCSRemoteFetchCloudKit _queryOperationForQuery:clientBundleID:xpcActivity:requestSpecificAdditionalHTTPHeaders:type:multipleFetchCompletion:]
  -[BCSRemoteFetchCloudKit _configureOperationForQuery:clientBundleID:xpcActivity:requestSpecificAdditionalHTTPHeaders:type:]
  -[BCSRemoteFetchCloudKit _queryOperationForQuery:configurationBlock:singleFetchCompletion:]
  -[BCSRemoteFetchCloudKit _queryOperationForQuery:configurationBlock:multipleFetchCompletion:]
  -[BCSRemoteFetchCloudKit queryOperationFactory]
  -[BCSRemoteFetchCloudKit operationGroupFactory]
  -[BCSRemoteFetchCloudKit initWithEnvironment:database:databaseContainer:queryOperationFactory:coalesceHelper:bloomFilterExtractor:operationGroupFactory:metricFactory:]
  -[BCSRemoteFetchCloudKit supportedType]
  -[BCSRemoteFetchCloudKit databaseContainer]


BCSStagingCloudServerRouteProvider : NSObject /usr/lib/libSystem.B.dylib <BCSCloudServerRouteProvider>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[BCSStagingCloudServerRouteProvider containerWithType:]
  -[BCSStagingCloudServerRouteProvider environmentWithType:]
  -[BCSStagingCloudServerRouteProvider apiKeyWithType:]
  -[BCSStagingCloudServerRouteProvider urlForLookupActionAPIWithType:]
  -[BCSStagingCloudServerRouteProvider urlForQueryActionAPIWithType:]


NBPhoneNumberUtil : NSObject /usr/lib/libSystem.B.dylib
 @property  NSLock *entireStringCacheLock
 @property  NSMutableDictionary *entireStringRegexCache
 @property  NSLock *lockPatternCache
 @property  NSMutableDictionary *regexPatternCache
 @property  NSRegularExpression *CAPTURING_DIGIT_PATTERN
 @property  NSRegularExpression *VALID_ALPHA_PHONE_PATTERN
 @property  NBMetadataHelper *helper
 @property  NBRegExMatcher *matcher
 @property  CTTelephonyNetworkInfo *telephonyNetworkInfo
 @property  NSDictionary *DIGIT_MAPPINGS

  // class methods
  +[NBPhoneNumberUtil sharedInstance]
  +[NBPhoneNumberUtil initialize]

  // instance methods
  -[NBPhoneNumberUtil regularExpressionWithPattern:options:error:]
  -[NBPhoneNumberUtil init]
  -[NBPhoneNumberUtil matcher]
  -[NBPhoneNumberUtil .cxx_destruct]
  -[NBPhoneNumberUtil setHelper:]
  -[NBPhoneNumberUtil helper]
  -[NBPhoneNumberUtil setMatcher:]
  -[NBPhoneNumberUtil normalize:]
  -[NBPhoneNumberUtil getCountryCodeForRegion:]
  -[NBPhoneNumberUtil getRegionCodeForCountryCode:]
  -[NBPhoneNumberUtil formattingRuleHasFirstGroupOnly:]
  -[NBPhoneNumberUtil stringPositionByRegex:regex:]
  -[NBPhoneNumberUtil matchedStringByRegex:regex:]
  -[NBPhoneNumberUtil replaceStringByRegex:regex:withTemplate:]
  -[NBPhoneNumberUtil matchesByRegex:regex:]
  -[NBPhoneNumberUtil extractCountryCode:nationalNumber:]
  -[NBPhoneNumberUtil DIGIT_MAPPINGS]
  -[NBPhoneNumberUtil parse:defaultRegion:error:]
  -[NBPhoneNumberUtil format:numberFormat:error:]
  -[NBPhoneNumberUtil entireRegularExpressionWithPattern:options:error:]
  -[NBPhoneNumberUtil initRegularExpressionSet]
  -[NBPhoneNumberUtil initNormalizationMappings]
  -[NBPhoneNumberUtil matchesEntirely:string:]
  -[NBPhoneNumberUtil normalizeHelper:normalizationReplacements:removeNonMatches:]
  -[NBPhoneNumberUtil normalizeDigitsOnly:]
  -[NBPhoneNumberUtil stringByReplacingOccurrencesString:withMap:removeNonMatches:]
  -[NBPhoneNumberUtil getLengthOfGeographicalAreaCode:]
  -[NBPhoneNumberUtil getRegionCodeForNumber:]
  -[NBPhoneNumberUtil isNumberGeographical:]
  -[NBPhoneNumberUtil getLengthOfNationalDestinationCode:]
  -[NBPhoneNumberUtil format:numberFormat:]
  -[NBPhoneNumberUtil componentsSeparatedByRegex:regex:]
  -[NBPhoneNumberUtil getNumberType:]
  -[NBPhoneNumberUtil getNationalSignificantNumber:]
  -[NBPhoneNumberUtil prefixNumberWithCountryCallingCode:phoneNumberFormat:formattedNationalNumber:formattedExtension:]
  -[NBPhoneNumberUtil hasValidCountryCallingCode:]
  -[NBPhoneNumberUtil getMetadataForRegionOrCallingCode:regionCode:]
  -[NBPhoneNumberUtil maybeGetFormattedExtension:metadata:numberFormat:]
  -[NBPhoneNumberUtil formatNsn:metadata:phoneNumberFormat:carrierCode:]
  -[NBPhoneNumberUtil formatByPattern:numberFormat:userDefinedFormats:]
  -[NBPhoneNumberUtil chooseFormattingPatternForNumber:nationalNumber:]
  -[NBPhoneNumberUtil formatNsnUsingPattern:formattingPattern:numberFormat:carrierCode:]
  -[NBPhoneNumberUtil formatNationalNumberWithCarrierCode:carrierCode:]
  -[NBPhoneNumberUtil formatNumberForMobileDialing:regionCallingFrom:withFormatting:]
  -[NBPhoneNumberUtil formatNationalNumberWithPreferredCarrierCode:fallbackCarrierCode:]
  -[NBPhoneNumberUtil canBeInternationallyDialled:]
  -[NBPhoneNumberUtil formatOutOfCountryCallingNumber:regionCallingFrom:]
  -[NBPhoneNumberUtil isValidRegionCode:]
  -[NBPhoneNumberUtil isNANPACountry:]
  -[NBPhoneNumberUtil getCountryCodeForValidRegion:error:]
  -[NBPhoneNumberUtil formatInOriginalFormat:regionCallingFrom:]
  -[NBPhoneNumberUtil hasFormattingPatternForNumber:]
  -[NBPhoneNumberUtil getNddPrefixForRegion:stripNonDigits:]
  -[NBPhoneNumberUtil rawInputContainsNationalPrefix:nationalPrefix:regionCode:]
  -[NBPhoneNumberUtil isStartingStringByRegex:regex:]
  -[NBPhoneNumberUtil isValidNumber:]
  -[NBPhoneNumberUtil isLeadingZeroPossible:]
  -[NBPhoneNumberUtil formatOutOfCountryKeepingAlphaChars:regionCallingFrom:]
  -[NBPhoneNumberUtil indexOfStringByString:target:]
  -[NBPhoneNumberUtil replaceFirstStringByRegex:regex:withTemplate:]
  -[NBPhoneNumberUtil getExampleNumberForType:type:error:]
  -[NBPhoneNumberUtil getNumberDescByType:type:]
  -[NBPhoneNumberUtil getNumberTypeHelper:metadata:]
  -[NBPhoneNumberUtil isNumberMatchingDesc:numberDesc:]
  -[NBPhoneNumberUtil isValidNumberForRegion:regionCode:]
  -[NBPhoneNumberUtil getRegionCodeForNumberFromRegionList:regionCodes:]
  -[NBPhoneNumberUtil isViablePhoneNumber:]
  -[NBPhoneNumberUtil maybeStripExtension:]
  -[NBPhoneNumberUtil isPossibleNumber:]
  -[NBPhoneNumberUtil isPossibleNumberWithReason:]
  -[NBPhoneNumberUtil validateNumberLength:metadata:type:]
  -[NBPhoneNumberUtil descHasPossibleNumberData:]
  -[NBPhoneNumberUtil testNumberLength:desc:]
  -[NBPhoneNumberUtil maybeStripInternationalPrefixAndNormalize:possibleIddPrefix:]
  -[NBPhoneNumberUtil maybeStripNationalPrefixAndCarrierCode:metadata:carrierCode:]
  -[NBPhoneNumberUtil normalizeSB:]
  -[NBPhoneNumberUtil parsePrefixAsIdd:sourceString:]
  -[NBPhoneNumberUtil matchFirstByRegex:regex:]
  -[NBPhoneNumberUtil parseHelper:defaultRegion:keepRawInput:checkRegion:error:]
  -[NBPhoneNumberUtil errorWithObject:withDomain:]
  -[NBPhoneNumberUtil countryCodeByCarrier]
  -[NBPhoneNumberUtil telephonyNetworkInfo]
  -[NBPhoneNumberUtil buildNationalNumberForParsing:nationalNumber:]
  -[NBPhoneNumberUtil checkRegionForParsing:defaultRegion:]
  -[NBPhoneNumberUtil maybeExtractCountryCode:metadata:nationalNumber:keepRawInput:phoneNumber:error:]
  -[NBPhoneNumberUtil validateNumberLength:metadata:]
  -[NBPhoneNumberUtil setItalianLeadingZerosForPhoneNumber:phoneNumber:]
  -[NBPhoneNumberUtil extractPossibleNumber:]
  -[NBPhoneNumberUtil isNumberMatch:second:]
  -[NBPhoneNumberUtil isNationalNumberSuffixOfTheOther:second:]
  -[NBPhoneNumberUtil isAllDigits:]
  -[NBPhoneNumberUtil normalizeDiallableCharsOnly:]
  -[NBPhoneNumberUtil convertAlphaCharactersInNumber:]
  -[NBPhoneNumberUtil getLengthOfGeographicalAreaCode:error:]
  -[NBPhoneNumberUtil getLengthOfNationalDestinationCode:error:]
  -[NBPhoneNumberUtil getCountryMobileTokenFromCountryCode:]
  -[NBPhoneNumberUtil formatByPattern:numberFormat:userDefinedFormats:error:]
  -[NBPhoneNumberUtil formatNationalNumberWithCarrierCode:carrierCode:error:]
  -[NBPhoneNumberUtil formatNationalNumberWithPreferredCarrierCode:fallbackCarrierCode:error:]
  -[NBPhoneNumberUtil formatNumberForMobileDialing:regionCallingFrom:withFormatting:error:]
  -[NBPhoneNumberUtil formatOutOfCountryCallingNumber:regionCallingFrom:error:]
  -[NBPhoneNumberUtil formatInOriginalFormat:regionCallingFrom:error:]
  -[NBPhoneNumberUtil hasUnexpectedItalianLeadingZero:]
  -[NBPhoneNumberUtil formatOutOfCountryKeepingAlphaChars:regionCallingFrom:error:]
  -[NBPhoneNumberUtil getExampleNumber:error:]
  -[NBPhoneNumberUtil getExampleNumberForNonGeoEntity:error:]
  -[NBPhoneNumberUtil getRegionCodesForCountryCode:]
  -[NBPhoneNumberUtil isAlphaNumber:]
  -[NBPhoneNumberUtil isPossibleNumber:error:]
  -[NBPhoneNumberUtil isPossibleNumberWithReason:error:]
  -[NBPhoneNumberUtil isPossibleNumberString:regionDialingFrom:error:]
  -[NBPhoneNumberUtil truncateTooLongNumber:]
  -[NBPhoneNumberUtil getSupportedRegions]
  -[NBPhoneNumberUtil parseWithPhoneCarrierRegion:error:]
  -[NBPhoneNumberUtil parseAndKeepRawInput:defaultRegion:error:]
  -[NBPhoneNumberUtil isNumberMatch:second:error:]
  -[NBPhoneNumberUtil canBeInternationallyDialled:error:]
  -[NBPhoneNumberUtil entireStringCacheLock]
  -[NBPhoneNumberUtil setEntireStringCacheLock:]
  -[NBPhoneNumberUtil entireStringRegexCache]
  -[NBPhoneNumberUtil setEntireStringRegexCache:]
  -[NBPhoneNumberUtil lockPatternCache]
  -[NBPhoneNumberUtil setLockPatternCache:]
  -[NBPhoneNumberUtil regexPatternCache]
  -[NBPhoneNumberUtil setRegexPatternCache:]
  -[NBPhoneNumberUtil CAPTURING_DIGIT_PATTERN]
  -[NBPhoneNumberUtil setCAPTURING_DIGIT_PATTERN:]
  -[NBPhoneNumberUtil VALID_ALPHA_PHONE_PATTERN]
  -[NBPhoneNumberUtil setVALID_ALPHA_PHONE_PATTERN:]


BCSURLNormalizer : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[BCSURLNormalizer normalizedURLForURL:]
  +[BCSURLNormalizer _combinedURLFromScheme:host:password:path:query:port:user:fragment:]


BCSChatSuggestController : NSObject /usr/lib/libSystem.B.dylib <BCSChatSuggestControllerProtocol>
 @property  BCSBusinessItemPersistentStore *businessItemPersistentStore
 @property  <BCSItemRemoteFetching> *itemRemoteFetcher
 @property  <BCSUserDefaultsProviding> *userDefaults
 @property  <BCSIdentityServiceProtocol> *identityService
 @property  <BCSLocaleHelperProtocol> *localeHelper
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[BCSChatSuggestController userDefaults]
  -[BCSChatSuggestController .cxx_destruct]
  -[BCSChatSuggestController itemRemoteFetcher]
  -[BCSChatSuggestController initWithBusinessItemPersistentStore:itemRemoteFetcher:userDefaults:identityService:localeHelper:]
  -[BCSChatSuggestController chatSuggestVisibilityForBusinessItem:]
  -[BCSChatSuggestController identityService]
  -[BCSChatSuggestController fetchBusinessItemWithBizID:TTL:forClientBundleID:completion:]
  -[BCSChatSuggestController localeHelper]
  -[BCSChatSuggestController businessItemPersistentStore]
  -[BCSChatSuggestController _deleteBusinessItemIfExpiredWithBusinessItemObject:]
  -[BCSChatSuggestController _deleteBusinessItemFromPersistentStore]


BCSHoursPeriodMessage : PBCodable /System/Library/Frameworks/CloudKit.framework/CloudKit <NSCopying>
 @property  NSMutableArray *hours

  // class methods
  +[BCSHoursPeriodMessage hoursType]

  // instance methods
  -[BCSHoursPeriodMessage hours]
  -[BCSHoursPeriodMessage copyWithZone:]
  -[BCSHoursPeriodMessage .cxx_destruct]
  -[BCSHoursPeriodMessage hoursCount]
  -[BCSHoursPeriodMessage clearHours]
  -[BCSHoursPeriodMessage hoursAtIndex:]
  -[BCSHoursPeriodMessage readFrom:]
  -[BCSHoursPeriodMessage setHours:]
  -[BCSHoursPeriodMessage writeTo:]
  -[BCSHoursPeriodMessage isEqual:]
  -[BCSHoursPeriodMessage copyTo:]
  -[BCSHoursPeriodMessage dictionaryRepresentation]
  -[BCSHoursPeriodMessage mergeFrom:]
  -[BCSHoursPeriodMessage addHours:]


BCSIconRemoteFetch : BCSRemoteFetch
  // instance methods
  -[BCSIconRemoteFetch fetchSquareIconDataForURL:forClientBundleID:completion:]


BCSVisibilityItem : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSString *language
 @property  NSString *country
 @property  double ratio

  // class methods
  +[BCSVisibilityItem supportsSecureCoding]

  // instance methods
  -[BCSVisibilityItem copyWithZone:]
  -[BCSVisibilityItem country]
  -[BCSVisibilityItem .cxx_destruct]
  -[BCSVisibilityItem ratio]
  -[BCSVisibilityItem encodeWithCoder:]
  -[BCSVisibilityItem initWithCoder:]
  -[BCSVisibilityItem language]
  -[BCSVisibilityItem initWithVisibility:]
  -[BCSVisibilityItem initWithLanguage:country:ratio:]
  -[BCSVisibilityItem isVisibleForDSID:]


BCSLinkItemModel : NSObject /usr/lib/libSystem.B.dylib <BSDescriptionProviding, BCSLinkItemDescribing, BCSItemIdentifying, NSCopying, NSSecureCoding>
 @property  BCSLinkItemIdentifier *linkItemIdentifier
 @property  NSArray *businessLinkContentItemModels
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSURL *linkURL
 @property  NSString *fullHash
 @property  NSString *bundleID
 @property  NSString *heroImageURLString
 @property  NSString *iconImageURLString
 @property  NSURL *redirectURL
 @property  long long action
 @property  BOOL isPoweredBy
 @property  NSDictionary *mapIconStyleAttributes
 @property  NSNumber *mapItemMUID
 @property  NSObject *itemIdentifier
 @property  long long truncatedHash
 @property  long long type

  // class methods
  +[BCSLinkItemModel supportsSecureCoding]
  +[BCSLinkItemModel linkItemModelsFromLinkJSONObj:]
  +[BCSLinkItemModel linkItemModelsFromRecords:]

  // instance methods
  -[BCSLinkItemModel copyWithZone:]
  -[BCSLinkItemModel itemIdentifier]
  -[BCSLinkItemModel linkURL]
  -[BCSLinkItemModel .cxx_destruct]
  -[BCSLinkItemModel action]
  -[BCSLinkItemModel succinctDescriptionBuilder]
  -[BCSLinkItemModel encodeWithCoder:]
  -[BCSLinkItemModel type]
  -[BCSLinkItemModel succinctDescription]
  -[BCSLinkItemModel redirectURL]
  -[BCSLinkItemModel descriptionWithMultilinePrefix:]
  -[BCSLinkItemModel bundleID]
  -[BCSLinkItemModel initWithCoder:]
  -[BCSLinkItemModel descriptionBuilderWithMultilinePrefix:]
  -[BCSLinkItemModel isPoweredBy]
  -[BCSLinkItemModel fullHash]
  -[BCSLinkItemModel mapIconStyleAttributes]
  -[BCSLinkItemModel mapItemMUID]
  -[BCSLinkItemModel truncatedHash]
  -[BCSLinkItemModel matchesItemIdentifying:]
  -[BCSLinkItemModel initWithLinkURL:bundleID:heroImageURLString:iconImageURLString:redirectURL:action:mapIconStyleAttributes:mapItemMUID:businessLinkContentItemModels:isPoweredBy:]
  -[BCSLinkItemModel businessLinkContentItemModels]
  -[BCSLinkItemModel heroImageURLString]
  -[BCSLinkItemModel iconImageURLString]
  -[BCSLinkItemModel initWithLinkMessage:bucketID:]
  -[BCSLinkItemModel _linkItemIdentifier]
  -[BCSLinkItemModel setBusinessLinkContentItemModels:]


BCSQueryOperationFactory : NSObject /usr/lib/libSystem.B.dylib <BCSQueryOperationFactoryProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[BCSQueryOperationFactory makeQueryOperation]


NBNumberFormat : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *pattern
 @property  NSString *format
 @property  NSArray *leadingDigitsPatterns
 @property  NSString *nationalPrefixFormattingRule
 @property  BOOL nationalPrefixOptionalWhenFormatting
 @property  NSString *domesticCarrierCodeFormattingRule

  // instance methods
  -[NBNumberFormat setFormat:]
  -[NBNumberFormat copyWithZone:]
  -[NBNumberFormat format]
  -[NBNumberFormat pattern]
  -[NBNumberFormat .cxx_destruct]
  -[NBNumberFormat initWithEntry:]
  -[NBNumberFormat setPattern:]
  -[NBNumberFormat nationalPrefixFormattingRule]
  -[NBNumberFormat nationalPrefixOptionalWhenFormatting]
  -[NBNumberFormat leadingDigitsPatterns]
  -[NBNumberFormat setNationalPrefixFormattingRule:]
  -[NBNumberFormat domesticCarrierCodeFormattingRule]
  -[NBNumberFormat initWithPattern:withFormat:withLeadingDigitsPatterns:withNationalPrefixFormattingRule:whenFormatting:withDomesticCarrierCodeFormattingRule:]
  -[NBNumberFormat setLeadingDigitsPatterns:]
  -[NBNumberFormat setNationalPrefixOptionalWhenFormatting:]
  -[NBNumberFormat setDomesticCarrierCodeFormattingRule:]


BCSMetric : NSObject /usr/lib/libSystem.B.dylib
 @property  NSArray *postProcessingMetricHandlers
 @property  id context
 @property  long long metricType

  // instance methods
  -[BCSMetric context]
  -[BCSMetric .cxx_destruct]
  -[BCSMetric metricType]
  -[BCSMetric submitForPostProcessing]
  -[BCSMetric postProcessingMetricHandlers]
  -[BCSMetric _initWithType:context:postProcessingMetricHandlers:]


BCSConfigResolutionMetric : BCSMetric <BCSCoreAnalyticsEventDescribing, BCSConfigItemIdentifying, BCSResolutionMetricProtocol>
 @property  NSString *coreAnalyticsEventName
 @property  NSDictionary *coreAnalyticsPayload
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  long long type
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL errorEncountered
 @property  BCSTimingMeasurement *timingMeasurement
 @property  BCSFlagMeasurement *cacheHitMeasurement

  // class methods
  +[BCSConfigResolutionMetric metricForConfigType:postProcessingMetricHandlers:]

  // instance methods
  -[BCSConfigResolutionMetric .cxx_destruct]
  -[BCSConfigResolutionMetric type]
  -[BCSConfigResolutionMetric setCacheHitMeasurement:]
  -[BCSConfigResolutionMetric cacheHitMeasurement]
  -[BCSConfigResolutionMetric coreAnalyticsEventName]
  -[BCSConfigResolutionMetric coreAnalyticsPayload]
  -[BCSConfigResolutionMetric setTimingMeasurement:]
  -[BCSConfigResolutionMetric timingMeasurement]
  -[BCSConfigResolutionMetric setErrorEncountered:]
  -[BCSConfigResolutionMetric errorEncountered]


BCSShardResolutionMetric : BCSMetric <BCSCoreAnalyticsEventDescribing, BCSShardItemIdentifierProviding, BCSResolutionMetricProtocol>
 @property  NSString *coreAnalyticsEventName
 @property  NSDictionary *coreAnalyticsPayload
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <BCSShardItemIdentifying> *shardItemIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL errorEncountered
 @property  BCSTimingMeasurement *timingMeasurement
 @property  BCSFlagMeasurement *cacheHitMeasurement

  // class methods
  +[BCSShardResolutionMetric metricForShardIdentifier:postProcessingMetricHandlers:]

  // instance methods
  -[BCSShardResolutionMetric .cxx_destruct]
  -[BCSShardResolutionMetric setCacheHitMeasurement:]
  -[BCSShardResolutionMetric cacheHitMeasurement]
  -[BCSShardResolutionMetric coreAnalyticsEventName]
  -[BCSShardResolutionMetric coreAnalyticsPayload]
  -[BCSShardResolutionMetric setTimingMeasurement:]
  -[BCSShardResolutionMetric timingMeasurement]
  -[BCSShardResolutionMetric setErrorEncountered:]
  -[BCSShardResolutionMetric errorEncountered]
  -[BCSShardResolutionMetric shardItemIdentifier]


BCSItemResolutionMetric : BCSMetric <BCSCoreAnalyticsEventDescribing, BCSItemIdentifierProviding, BCSResolutionMetricProtocol>
 @property  NSString *coreAnalyticsEventName
 @property  NSDictionary *coreAnalyticsPayload
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <BCSItemIdentifying> *itemIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL errorEncountered
 @property  BCSTimingMeasurement *timingMeasurement
 @property  BCSFlagMeasurement *cacheHitMeasurement

  // class methods
  +[BCSItemResolutionMetric metricForItemIdentifier:postProcessingMetricHandlers:]

  // instance methods
  -[BCSItemResolutionMetric itemIdentifier]
  -[BCSItemResolutionMetric .cxx_destruct]
  -[BCSItemResolutionMetric setCacheHitMeasurement:]
  -[BCSItemResolutionMetric cacheHitMeasurement]
  -[BCSItemResolutionMetric coreAnalyticsEventName]
  -[BCSItemResolutionMetric coreAnalyticsPayload]
  -[BCSItemResolutionMetric setTimingMeasurement:]
  -[BCSItemResolutionMetric timingMeasurement]
  -[BCSItemResolutionMetric setErrorEncountered:]
  -[BCSItemResolutionMetric errorEncountered]


BCSBusinessLinkRegisteredMetric : BCSMetric <BCSCoreAnalyticsEventDescribing, BCSItemFetchMetricProtocol, BCSBusinessLinkChoppingMetric>
 @property  NSString *coreAnalyticsEventName
 @property  NSDictionary *coreAnalyticsPayload
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL errorEncountered
 @property  BCSTimingMeasurement *timingMeasurement
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL choppingEnabled
 @property  long long successfulChop

  // class methods
  +[BCSBusinessLinkRegisteredMetric metricWithPostProcessingMetricHandlers:]

  // instance methods
  -[BCSBusinessLinkRegisteredMetric .cxx_destruct]
  -[BCSBusinessLinkRegisteredMetric coreAnalyticsEventName]
  -[BCSBusinessLinkRegisteredMetric coreAnalyticsPayload]
  -[BCSBusinessLinkRegisteredMetric setTimingMeasurement:]
  -[BCSBusinessLinkRegisteredMetric timingMeasurement]
  -[BCSBusinessLinkRegisteredMetric setErrorEncountered:]
  -[BCSBusinessLinkRegisteredMetric setChoppingEnabled:]
  -[BCSBusinessLinkRegisteredMetric setSuccessfulChop:]
  -[BCSBusinessLinkRegisteredMetric errorEncountered]
  -[BCSBusinessLinkRegisteredMetric isChoppingEnabled]
  -[BCSBusinessLinkRegisteredMetric successfulChop]


BCSBusinessLinkFetchMetric : BCSMetric <BCSCoreAnalyticsEventDescribing, BCSItemFetchMetricProtocol, BCSBusinessLinkChoppingMetric>
 @property  NSString *coreAnalyticsEventName
 @property  NSDictionary *coreAnalyticsPayload
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL errorEncountered
 @property  BCSTimingMeasurement *timingMeasurement
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL choppingEnabled
 @property  long long successfulChop

  // class methods
  +[BCSBusinessLinkFetchMetric metricWithPostProcessingMetricHandlers:]

  // instance methods
  -[BCSBusinessLinkFetchMetric .cxx_destruct]
  -[BCSBusinessLinkFetchMetric coreAnalyticsEventName]
  -[BCSBusinessLinkFetchMetric coreAnalyticsPayload]
  -[BCSBusinessLinkFetchMetric setTimingMeasurement:]
  -[BCSBusinessLinkFetchMetric timingMeasurement]
  -[BCSBusinessLinkFetchMetric setErrorEncountered:]
  -[BCSBusinessLinkFetchMetric setChoppingEnabled:]
  -[BCSBusinessLinkFetchMetric setSuccessfulChop:]
  -[BCSBusinessLinkFetchMetric errorEncountered]
  -[BCSBusinessLinkFetchMetric isChoppingEnabled]
  -[BCSBusinessLinkFetchMetric successfulChop]


BCSBusinessLinkHashFetchMetric : BCSMetric <BCSCoreAnalyticsEventDescribing, BCSItemFetchMetricProtocol>
 @property  NSString *coreAnalyticsEventName
 @property  NSDictionary *coreAnalyticsPayload
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL errorEncountered
 @property  BCSTimingMeasurement *timingMeasurement
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[BCSBusinessLinkHashFetchMetric metricWithPostProcessingMetricHandlers:]

  // instance methods
  -[BCSBusinessLinkHashFetchMetric .cxx_destruct]
  -[BCSBusinessLinkHashFetchMetric coreAnalyticsEventName]
  -[BCSBusinessLinkHashFetchMetric coreAnalyticsPayload]
  -[BCSBusinessLinkHashFetchMetric setTimingMeasurement:]
  -[BCSBusinessLinkHashFetchMetric timingMeasurement]
  -[BCSBusinessLinkHashFetchMetric setErrorEncountered:]
  -[BCSBusinessLinkHashFetchMetric errorEncountered]


BCSChatSuggestRegisteredMetric : BCSMetric <BCSCoreAnalyticsEventDescribing, BCSItemFetchMetricProtocol>
 @property  NSString *coreAnalyticsEventName
 @property  NSDictionary *coreAnalyticsPayload
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL errorEncountered
 @property  BCSTimingMeasurement *timingMeasurement
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[BCSChatSuggestRegisteredMetric metricWithPostProcessingMetricHandlers:]

  // instance methods
  -[BCSChatSuggestRegisteredMetric .cxx_destruct]
  -[BCSChatSuggestRegisteredMetric coreAnalyticsEventName]
  -[BCSChatSuggestRegisteredMetric coreAnalyticsPayload]
  -[BCSChatSuggestRegisteredMetric setTimingMeasurement:]
  -[BCSChatSuggestRegisteredMetric timingMeasurement]
  -[BCSChatSuggestRegisteredMetric setErrorEncountered:]
  -[BCSChatSuggestRegisteredMetric errorEncountered]


BCSChatSuggestFetchMetric : BCSMetric <BCSCoreAnalyticsEventDescribing, BCSItemFetchMetricProtocol>
 @property  NSString *coreAnalyticsEventName
 @property  NSDictionary *coreAnalyticsPayload
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL errorEncountered
 @property  BCSTimingMeasurement *timingMeasurement
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[BCSChatSuggestFetchMetric metricWithPostProcessingMetricHandlers:]

  // instance methods
  -[BCSChatSuggestFetchMetric .cxx_destruct]
  -[BCSChatSuggestFetchMetric coreAnalyticsEventName]
  -[BCSChatSuggestFetchMetric coreAnalyticsPayload]
  -[BCSChatSuggestFetchMetric setTimingMeasurement:]
  -[BCSChatSuggestFetchMetric timingMeasurement]
  -[BCSChatSuggestFetchMetric setErrorEncountered:]
  -[BCSChatSuggestFetchMetric errorEncountered]


BCSConfigPrefetchMetric : BCSMetric <BCSCoreAnalyticsEventDescribing, BCSConfigItemIdentifying, BCSPrefetchMetricProtocol>
 @property  NSString *coreAnalyticsEventName
 @property  NSDictionary *coreAnalyticsPayload
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  long long type
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL successful
 @property  long long hoursSinceLastSuccessfulPrefetch

  // class methods
  +[BCSConfigPrefetchMetric metricForConfigType:postProcessingMetricHandlers:]

  // instance methods
  -[BCSConfigPrefetchMetric successful]
  -[BCSConfigPrefetchMetric setSuccessful:]
  -[BCSConfigPrefetchMetric type]
  -[BCSConfigPrefetchMetric setHoursSinceLastSuccessfulPrefetch:]
  -[BCSConfigPrefetchMetric coreAnalyticsEventName]
  -[BCSConfigPrefetchMetric coreAnalyticsPayload]
  -[BCSConfigPrefetchMetric hoursSinceLastSuccessfulPrefetch]


BCSMegashardPrefetchMetric : BCSMetric <BCSCoreAnalyticsEventDescribing, BCSPrefetchMetricProtocol>
 @property  NSString *coreAnalyticsEventName
 @property  NSDictionary *coreAnalyticsPayload
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  long long type
 @property  BOOL successful
 @property  long long hoursSinceLastSuccessfulPrefetch
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[BCSMegashardPrefetchMetric metricForMegashardType:postProcessingMetricHandlers:]

  // instance methods
  -[BCSMegashardPrefetchMetric successful]
  -[BCSMegashardPrefetchMetric setSuccessful:]
  -[BCSMegashardPrefetchMetric type]
  -[BCSMegashardPrefetchMetric setHoursSinceLastSuccessfulPrefetch:]
  -[BCSMegashardPrefetchMetric coreAnalyticsEventName]
  -[BCSMegashardPrefetchMetric coreAnalyticsPayload]
  -[BCSMegashardPrefetchMetric hoursSinceLastSuccessfulPrefetch]


BCSIconController : NSObject /usr/lib/libSystem.B.dylib <BCSIconControllerProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[BCSIconController fetchSquareIconDataForBusinessItem:forClientBundleID:completion:]


BCSCacheManager : NSObject /usr/lib/libSystem.B.dylib <BCSCacheClearing, BCSConfigCaching, BCSConfigCacheSkipping, BCSShardCacheQueryable, BCSShardCacheSkipping, BCSItemCaching, BCSItemCacheSkipping, BCSBatchable>
 @property  <BCSShardCacheQueryable> *shardCache
 @property  <BCSItemCaching><BCSLinkItemCacheClearing> *itemCache
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[BCSCacheManager .cxx_destruct]
  -[BCSCacheManager endBatch]
  -[BCSCacheManager clearCachesForLinkItemsAssociatedWithBundleID:completion:]
  -[BCSCacheManager updateConfigItem:withType:]
  -[BCSCacheManager shouldSkipCacheForConfigItemOfType:]
  -[BCSCacheManager configItemForType:]
  -[BCSCacheManager setShardCache:]
  -[BCSCacheManager shardCache]
  -[BCSCacheManager deleteShardItemsOfType:]
  -[BCSCacheManager beginBatch]
  -[BCSCacheManager updateShardItem:withShardIdentifier:]
  -[BCSCacheManager shouldSkipCacheForShardItemOfType:]
  -[BCSCacheManager countOfShardsOfType:]
  -[BCSCacheManager countOfExpiredShardsOfType:]
  -[BCSCacheManager shouldSkipCacheForItemOfType:]
  -[BCSCacheManager itemCache]
  -[BCSCacheManager itemMatching:]
  -[BCSCacheManager deleteItemMatching:]
  -[BCSCacheManager updateItem:withItemIdentifier:]
  -[BCSCacheManager deleteItemsOfType:]
  -[BCSCacheManager deleteExpiredItemsOfType:]
  -[BCSCacheManager clearCachesForType:completion:]
  -[BCSCacheManager clearExpiredCachesForType:completion:]
  -[BCSCacheManager deleteShardItemMatching:]
  -[BCSCacheManager shardItemMatching:]
  -[BCSCacheManager deleteExpiredShardItemsOfType:]
  -[BCSCacheManager setItemCache:]
  -[BCSCacheManager _clearExpiredCacheItemsForType:completion:]
  -[BCSCacheManager deleteConfigItemForType:]
  -[BCSCacheManager deleteExpiredConfigItemForType:]
  -[BCSCacheManager initWithShardCache:itemCache:]


BCSConfigRemoteFetch : BCSRemoteFetch <BCSConfigRemoteFetching, BCSShardRemoteFetching>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[BCSConfigRemoteFetch fetchConfigItemWithType:clientBundleID:completion:]
  -[BCSConfigRemoteFetch fetchConfigItemWithType:clientBundleID:xpcActivity:completion:]
  -[BCSConfigRemoteFetch fetchShardMatching:clientBundleID:completion:]
  -[BCSConfigRemoteFetch _configRequestForType:]
  -[BCSConfigRemoteFetch _bloomFilterRequestForShardMatching:timeout:]


BCSV1CloudServerBodyProvider : NSObject /usr/lib/libSystem.B.dylib <BCSCloudServerBodyProvider>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[BCSV1CloudServerBodyProvider bodyForBusinessItemRequestWithBizID:]
  -[BCSV1CloudServerBodyProvider bodyForItemRequestWithBucketStartIndex:endIndex:type:]
  -[BCSV1CloudServerBodyProvider bodyForConfigItemRequestWithType:]
  -[BCSV1CloudServerBodyProvider bodyForBloomFilterRequestWithStartIndex:shardCount:type:]
  -[BCSV1CloudServerBodyProvider bodyDictionaryForBusinessItemRequestWithBizID:]
  -[BCSV1CloudServerBodyProvider jsonDataForBodyDictionary:]
  -[BCSV1CloudServerBodyProvider bodyDictionaryForBusinessItemRequestWithBucketStartIndex:endIndex:type:]
  -[BCSV1CloudServerBodyProvider bodyDictionaryForConfigItemWithType:]
  -[BCSV1CloudServerBodyProvider bodyDictionaryForChatSuggestBloomFilterRequestWithStartIndex:shardCount:type:]


(NBAdditions)
	// instance methods
	-[(NBAdditions) nb_safeObjectAtIndex:class:]
	-[(NBAdditions) nb_safeStringAtIndex:]
	-[(NBAdditions) nb_safeNumberAtIndex:]
	-[(NBAdditions) nb_safeArrayAtIndex:]
	-[(NBAdditions) nb_safeDataAtIndex:]

_PASBloomFilter(BusinessChatService)
	// class methods
	+[_PASBloomFilter(BusinessChatService) bloomFilterWithData:]

	// instance methods
	-[_PASBloomFilter(BusinessChatService) initWithJSONObj:]
	-[_PASBloomFilter(BusinessChatService) _bloomFilterStringWithJSONObj:]

(BCSHexString)
	// class methods
	+[(BCSHexString) bcs_dataWithHexString:]

NSNotificationCenter(BCSError)
	// instance methods
	-[NSNotificationCenter(BCSError) postNotificationName:object:error:]

NSNotification(BCSError)
	// instance methods
	-[NSNotification(BCSError) error]

(BusinessChatService)
	// class methods
	+[(BusinessChatService) currentLanguage]
	+[(BusinessChatService) currentCountry]

	// instance methods
	-[(BusinessChatService) country]
	-[(BusinessChatService) language]

(BusinessChatService)
	// instance methods
	-[(BusinessChatService) isBusinessID]
	-[(BusinessChatService) bizIDWithoutPrefix]
	-[(BusinessChatService) prefixedBizID]
	-[(BusinessChatService) removeFilePrefix]
	-[(BusinessChatService) stringByRemovingOccurancesOfCharacter:fromPosition:]

(BusinessChatService)
	// class methods
	+[(BusinessChatService) bcs_templatedImageURLWithString:imageSpecifier:]

01 00 0500 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSDescriptionBuilder 
01 00 0500 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSEqualsBuilder 
01 00 0500 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSHashBuilder 
01 00 0900 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKOperationGroup 
01 00 0900 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKQuery 
01 00 0900 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKQueryOperation 
01 00 0900 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecordID 
01 00 0900 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecordZoneID 
01 00 0900 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKReference 
01 00 0400 /System/Library/Frameworks/CoreTelephony.framework/CoreTelephony: CTTelephonyNetworkInfo 
01 00 0b00 /System/Library/PrivateFrameworks/IDS.framework/IDS: IDSIDQueryController 
01 00 0b00 /System/Library/PrivateFrameworks/IDS.framework/IDS: IDSService 
01 00 0200 /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation: IMFileCopier 
01 00 0200 /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation: IMLockdownManager 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCache 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSHTTPURLResponse 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSLock 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableCharacterSet 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableURLRequest 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotification 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0e00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSScanner 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLRequest 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSession 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSessionConfiguration 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0800 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBCodable 
01 00 0a00 /System/Library/PrivateFrameworks/ProactiveSupport.framework/ProactiveSupport: _PASBloomFilter 
