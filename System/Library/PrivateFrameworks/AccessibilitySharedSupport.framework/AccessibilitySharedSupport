|| __DATA.__data _AXSSMotionTrackingDefaultJoystickModeMovementThreshold
|| __DATA.__data _AXSSMotionTrackingDefaultMode
|| __DATA.__data _AXSSMotionTrackingDefaultSensitivity
|| __DATA.__data _AXSSSwitchActionATVArrowDown
|| __DATA.__data _AXSSSwitchActionATVArrowLeft
|| __DATA.__data _AXSSSwitchActionATVArrowRight
|| __DATA.__data _AXSSSwitchActionATVArrowUp
|| __DATA.__data _AXSSSwitchActionATVHome
|| __DATA.__data _AXSSSwitchActionATVMenu
|| __DATA.__data _AXSSSwitchActionATVPlayPause
|| __DATA.__data _AXSSSwitchActionATVSelect
|| __DATA.__data _AXSSSwitchActionActivate
|| __DATA.__data _AXSSSwitchActionAppSwitcher
|| __DATA.__data _AXSSSwitchActionControlCenter
|| __DATA.__data _AXSSSwitchActionCustom
|| __DATA.__data _AXSSSwitchActionDictation
|| __DATA.__data _AXSSSwitchActionForceTouch
|| __DATA.__data _AXSSSwitchActionHome
|| __DATA.__data _AXSSSwitchActionMenu
|| __DATA.__data _AXSSSwitchActionMoveToNextItem
|| __DATA.__data _AXSSSwitchActionMoveToPreviousItem
|| __DATA.__data _AXSSSwitchActionNotificationCenter
|| __DATA.__data _AXSSSwitchActionRun
|| __DATA.__data _AXSSSwitchActionSelect
|| __DATA.__data _AXSSSwitchActionSiri
|| __DATA.__data _AXSSSwitchActionSiriShortcutsMenu
|| __DATA.__data _AXSSSwitchActionStop
|| __DATA.__data _AXSSSwitchActionTripleClick
|| __DATA.__data _AXSSSwitchActionVolumeDown
|| __DATA.__data _AXSSSwitchActionVolumeUp
|| __DATA.__objc_data _OBJC_CLASS_$_AXSSActionManager
|| __DATA.__objc_data _OBJC_CLASS_$_AXSSCloudKitHelper
|| __DATA.__objc_data _OBJC_CLASS_$_AXSSCloudKitHelperManagedObjectContext
|| __DATA.__objc_data _OBJC_CLASS_$_AXSSDialectMap
|| __DATA.__objc_data _OBJC_CLASS_$_AXSSEventManager
|| __DATA.__objc_data _OBJC_CLASS_$_AXSSInterDeviceCommunicator
|| __DATA.__objc_data _OBJC_CLASS_$_AXSSInterDeviceSearchResult
|| __DATA.__objc_data _OBJC_CLASS_$_AXSSInterDeviceSecurityHelper
|| __DATA.__objc_data _OBJC_CLASS_$_AXSSInterDeviceSwitchEvent
|| __DATA.__objc_data _OBJC_CLASS_$_AXSSKeyChord
|| __DATA.__objc_data _OBJC_CLASS_$_AXSSKeyboardCommand
|| __DATA.__objc_data _OBJC_CLASS_$_AXSSKeyboardCommandCategory
|| __DATA.__objc_data _OBJC_CLASS_$_AXSSKeyboardCommandInfo
|| __DATA.__objc_data _OBJC_CLASS_$_AXSSKeyboardCommandMap
|| __DATA.__objc_data _OBJC_CLASS_$_AXSSKeyboardEvent
|| __DATA.__objc_data _OBJC_CLASS_$_AXSSLanguageLoader
|| __DATA.__objc_data _OBJC_CLASS_$_AXSSLanguageManager
|| __DATA.__objc_data _OBJC_CLASS_$_AXSSLanguageMap
|| __DATA.__objc_data _OBJC_CLASS_$_AXSSLanguageTag
|| __DATA.__objc_data _OBJC_CLASS_$_AXSSLanguageTagger
|| __DATA.__objc_data _OBJC_CLASS_$_AXSSMotionTracker
|| __DATA.__objc_data _OBJC_CLASS_$_AXSSMotionTrackingCameraInput
|| __DATA.__objc_data _OBJC_CLASS_$_AXSSMotionTrackingExpressionConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_AXSSMotionTrackingHIDInput
|| __DATA.__objc_data _OBJC_CLASS_$_AXSSMotionTrackingInput
|| __DATA.__objc_data _OBJC_CLASS_$_AXSSMotionTrackingInputConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_AXSSMotionTrackingInputManager
|| __DATA.__objc_data _OBJC_CLASS_$_AXSSMotionTrackingState
|| __DATA.__objc_data _OBJC_CLASS_$_AXSSMotionTrackingUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_AXSSMotionTrackingVideoFileInput
|| __DATA.__objc_data _OBJC_CLASS_$_AXSSPronunciationSubstitution
|| __DATA.__objc_data _OBJC_CLASS_$_AXSSPunctuationEntry
|| __DATA.__objc_data _OBJC_CLASS_$_AXSSPunctuationGroup
|| __DATA.__objc_data _OBJC_CLASS_$_AXSSRateLimitingLogger
|| __DATA.__objc_data _OBJC_CLASS_$_AXSSSwitchControlSettings
|| __DATA.__objc_data _OBJC_CLASS_$_AXSSVoiceTagger
|| __DATA.__objc_data _OBJC_CLASS_$_AXSSWordDescriptionManager
|| __DATA.__objc_data _OBJC_CLASS_$_AXSS_PunctuationCloudDeletionCache
|| __DATA.__objc_data _OBJC_CLASS_$_AXSS_PunctuationContext
|| __DATA.__objc_data _OBJC_CLASS_$_AXSS_PunctuationEntry
|| __DATA.__objc_data _OBJC_CLASS_$_AXSS_PunctuationGroup
|| __DATA.__objc_data _OBJC_CLASS_$_VOBundle
|| __DATA.__objc_data _OBJC_CLASS_$_VOLanguage
|| __DATA.__objc_data _OBJC_CLASS_$_VOSubstitution
|| __DATA.__objc_data _OBJC_CLASS_$_VOVoice
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSSActionManager
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSSCloudKitHelper
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSSCloudKitHelperManagedObjectContext
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSSDialectMap
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSSEventManager
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSSInterDeviceCommunicator
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSSInterDeviceSearchResult
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSSInterDeviceSecurityHelper
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSSInterDeviceSwitchEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSSKeyChord
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSSKeyboardCommand
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSSKeyboardCommandCategory
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSSKeyboardCommandInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSSKeyboardCommandMap
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSSKeyboardEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSSLanguageLoader
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSSLanguageManager
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSSLanguageMap
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSSLanguageTag
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSSLanguageTagger
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSSMotionTracker
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSSMotionTrackingCameraInput
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSSMotionTrackingExpressionConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSSMotionTrackingHIDInput
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSSMotionTrackingInput
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSSMotionTrackingInputConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSSMotionTrackingInputManager
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSSMotionTrackingState
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSSMotionTrackingUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSSMotionTrackingVideoFileInput
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSSPronunciationSubstitution
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSSPunctuationEntry
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSSPunctuationGroup
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSSRateLimitingLogger
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSSSwitchControlSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSSVoiceTagger
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSSWordDescriptionManager
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSS_PunctuationCloudDeletionCache
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSS_PunctuationContext
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSS_PunctuationEntry
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSS_PunctuationGroup
|| __DATA.__objc_data _OBJC_METACLASS_$_VOBundle
|| __DATA.__objc_data _OBJC_METACLASS_$_VOLanguage
|| __DATA.__objc_data _OBJC_METACLASS_$_VOSubstitution
|| __DATA.__objc_data _OBJC_METACLASS_$_VOVoice
|| __DATA_CONST.__const _AXCloudKitErrorDomain
|| __DATA_CONST.__const _AXCloudKitFinishedSchemaCheckKey
|| __DATA_CONST.__const _AXMTBlendShapeBrowOuterUpLeft
|| __DATA_CONST.__const _AXMTBlendShapeBrowOuterUpRight
|| __DATA_CONST.__const _AXMTBlendShapeEyeBlinkLeft
|| __DATA_CONST.__const _AXMTBlendShapeEyeBlinkRight
|| __DATA_CONST.__const _AXMTBlendShapeJawOpen
|| __DATA_CONST.__const _AXMTBlendShapeMouthClose
|| __DATA_CONST.__const _AXMTBlendShapeMouthLeft
|| __DATA_CONST.__const _AXMTBlendShapeMouthPucker
|| __DATA_CONST.__const _AXMTBlendShapeMouthRight
|| __DATA_CONST.__const _AXMTBlendShapeMouthSmileLeft
|| __DATA_CONST.__const _AXMTBlendShapeMouthSmileRight
|| __DATA_CONST.__const _AXMTBlendShapeNoseSneerLeft
|| __DATA_CONST.__const _AXMTBlendShapeNoseSneerRight
|| __DATA_CONST.__const _AXMTBlendShapeTongueOut
|| __DATA_CONST.__const _AXSSDeviceTypeAppleTV
|| __DATA_CONST.__const _AXSSDeviceTypeMac
|| __DATA_CONST.__const _AXSSDeviceTypePad
|| __DATA_CONST.__const _AXSSDeviceTypePhone
|| __DATA_CONST.__const _AXSSKeyboardCommandIdentifier3DTouch
|| __DATA_CONST.__const _AXSSKeyboardCommandIdentifierActivateAccessibilityShortcut
|| __DATA_CONST.__const _AXSSKeyboardCommandIdentifierActivateSOS
|| __DATA_CONST.__const _AXSSKeyboardCommandIdentifierActivateSiri
|| __DATA_CONST.__const _AXSSKeyboardCommandIdentifierActivateTypeahead
|| __DATA_CONST.__const _AXSSKeyboardCommandIdentifierArmApplePay
|| __DATA_CONST.__const _AXSSKeyboardCommandIdentifierEnterContainer
|| __DATA_CONST.__const _AXSSKeyboardCommandIdentifierExitContainer
|| __DATA_CONST.__const _AXSSKeyboardCommandIdentifierGestures
|| __DATA_CONST.__const _AXSSKeyboardCommandIdentifierGoHome
|| __DATA_CONST.__const _AXSSKeyboardCommandIdentifierGoToFirstElement
|| __DATA_CONST.__const _AXSSKeyboardCommandIdentifierGoToLastElement
|| __DATA_CONST.__const _AXSSKeyboardCommandIdentifierGoToNextElement
|| __DATA_CONST.__const _AXSSKeyboardCommandIdentifierGoToNextSection
|| __DATA_CONST.__const _AXSSKeyboardCommandIdentifierGoToPreviousElement
|| __DATA_CONST.__const _AXSSKeyboardCommandIdentifierGoToPreviousSection
|| __DATA_CONST.__const _AXSSKeyboardCommandIdentifierHelp
|| __DATA_CONST.__const _AXSSKeyboardCommandIdentifierLockScreen
|| __DATA_CONST.__const _AXSSKeyboardCommandIdentifierMoveDown
|| __DATA_CONST.__const _AXSSKeyboardCommandIdentifierMoveInsideNext
|| __DATA_CONST.__const _AXSSKeyboardCommandIdentifierMoveInsidePrevious
|| __DATA_CONST.__const _AXSSKeyboardCommandIdentifierMoveLeft
|| __DATA_CONST.__const _AXSSKeyboardCommandIdentifierMoveRight
|| __DATA_CONST.__const _AXSSKeyboardCommandIdentifierMoveUp
|| __DATA_CONST.__const _AXSSKeyboardCommandIdentifierOpenContextualMenu
|| __DATA_CONST.__const _AXSSKeyboardCommandIdentifierPerformDefaultAction
|| __DATA_CONST.__const _AXSSKeyboardCommandIdentifierPerformEscape
|| __DATA_CONST.__const _AXSSKeyboardCommandIdentifierPerformSysdiagnose
|| __DATA_CONST.__const _AXSSKeyboardCommandIdentifierPinchIn
|| __DATA_CONST.__const _AXSSKeyboardCommandIdentifierPinchOut
|| __DATA_CONST.__const _AXSSKeyboardCommandIdentifierPressAndLift
|| __DATA_CONST.__const _AXSSKeyboardCommandIdentifierRebootDevice
|| __DATA_CONST.__const _AXSSKeyboardCommandIdentifierRotateDevice
|| __DATA_CONST.__const _AXSSKeyboardCommandIdentifierRotateLeft
|| __DATA_CONST.__const _AXSSKeyboardCommandIdentifierRotateRight
|| __DATA_CONST.__const _AXSSKeyboardCommandIdentifierShowAccessibilityActions
|| __DATA_CONST.__const _AXSSKeyboardCommandIdentifierSwipeDown
|| __DATA_CONST.__const _AXSSKeyboardCommandIdentifierSwipeLeft
|| __DATA_CONST.__const _AXSSKeyboardCommandIdentifierSwipeRight
|| __DATA_CONST.__const _AXSSKeyboardCommandIdentifierSwipeUp
|| __DATA_CONST.__const _AXSSKeyboardCommandIdentifierToggleAppLibrary
|| __DATA_CONST.__const _AXSSKeyboardCommandIdentifierToggleAppSwitcher
|| __DATA_CONST.__const _AXSSKeyboardCommandIdentifierToggleControlCenter
|| __DATA_CONST.__const _AXSSKeyboardCommandIdentifierToggleDock
|| __DATA_CONST.__const _AXSSKeyboardCommandIdentifierToggleMenuBar
|| __DATA_CONST.__const _AXSSKeyboardCommandIdentifierToggleNotificationCenter
|| __DATA_CONST.__const _AXSSKeyboardCommandIdentifierTogglePassthroughMode
|| __DATA_CONST.__const _AXSSKeyboardCommandIdentifierToggleQuickNote
|| __DATA_CONST.__const _AXSSKeyboardCommandIdentifierTwoFingerPressAndLift
|| __DATA_CONST.__const _AXSSKeyboardCommandIdentifierTwoFingerSwipeDown
|| __DATA_CONST.__const _AXSSKeyboardCommandIdentifierTwoFingerSwipeLeft
|| __DATA_CONST.__const _AXSSKeyboardCommandIdentifierTwoFingerSwipeRight
|| __DATA_CONST.__const _AXSSKeyboardCommandIdentifierTwoFingerSwipeUp
|| __DATA_CONST.__const _AXSSKeyboardCommandTypeStandard
|| __DATA_CONST.__const _AXSSMotionTrackingDaemonIdentifier
|| __DATA_CONST.__const _AXSSMotionTrackingErrorDomain
|| __DATA_CONST.__const _AXSSMotionTrackingPreferenceDomain
|| __DATA_CONST.__const _AXSSMotionTrackingVideoFileInputDistributedNotificationName
|| __DATA_CONST.__const _AXSSMotionTrackingVideoFileInputPreferenceKey
|| __DATA_CONST.__const _AXSSPunctuationCloudKitContainer
|| __DATA_CONST.__const _AXSSPunctuationCloudKitTopic
|| __DATA_CONST.__const _AXSSPunctuationCloudKitZone
|| __DATA_CONST.__const _AXSSPunctutionGroupFileExtension
|| __DATA_CONST.__const _AXSSSwitchControlCursorSizeLarge
|| __DATA_CONST.__const _AXSSSwitchControlCursorSizeMedium
|| __DATA_CONST.__const _AXSSSwitchControlCursorSizeSmall
|| __DATA_CONST.__const _AXSSSwitchControlPostActivationScanLocationCurrentItem
|| __DATA_CONST.__const _AXSSSwitchControlPostActivationScanLocationDefault
|| __DATA_CONST.__const _AXSSSwitchControlScanningStyleAuto
|| __DATA_CONST.__const _AXSSSwitchControlScanningStyleManual
|| __DATA_CONST.__const _AXSSSwitchControlScanningStyleSingleSwitchStep
|| __DATA_CONST.__const _AXSSSwitchControlTapBehaviorAlways
|| __DATA_CONST.__const _AXSSSwitchControlTapBehaviorAuto
|| __DATA_CONST.__const _AXSSSwitchControlTapBehaviorDefault
|| __DATA_CONST.__const _AXSSVoiceOverPunctuationCloudKitUpdateNotification
|| __DATA_CONST.__const _AXSSVoiceOverPunctuationGroupsChangedNotification
|| __DATA_CONST.__const _AXSSVoiceOverTextualContextConsole
|| __DATA_CONST.__const _AXSSVoiceOverTextualContextFileSystem
|| __DATA_CONST.__const _AXSSVoiceOverTextualContextMessaging
|| __DATA_CONST.__const _AXSSVoiceOverTextualContextNarrative
|| __DATA_CONST.__const _AXSSVoiceOverTextualContextSocialMedia
|| __DATA_CONST.__const _AXSSVoiceOverTextualContextSourceCode
|| __DATA_CONST.__const _AXSSVoiceOverTextualContextSpreadsheet
|| __DATA_CONST.__const _AXSSVoiceOverTextualContextWordProcessing
|| __DATA_DIRTY.__common _AXSSVoiceOverPunctuationGroupAll
|| __DATA_DIRTY.__common _AXSSVoiceOverPunctuationGroupNone
|| __DATA_DIRTY.__common _AXSSVoiceOverPunctuationGroupSome
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AXSSDatabaseManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AXSSPunctuationManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AXSSDatabaseManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AXSSPunctuationManager
|| __TEXT.__const _AXCloudKitMaxRecordDataBytes
|| __TEXT.__const _AXSSMotionTrackingInvalidPoint
|| __TEXT.__const _AXSSSwitchControlTimeIntervalNotApplicable
|| __TEXT.__text _AXSSAccessibilityDescriptionForSymbolName
|| __TEXT.__text _AXSSDeviceGetType
|| __TEXT.__text _AXSSHumanReadableDescriptionForMotionTrackingErrorCode
|| __TEXT.__text _AXSSHumanReadableDescriptionForMotionTrackingFacialExpression
|| __TEXT.__text _AXSSHumanReadableDescriptionForMotionTrackingFacialExpressionSensitivity
|| __TEXT.__text _AXSSHumanReadableDescriptionForMotionTrackingMode
|| __TEXT.__text _AXSSHumanReadableExplanationForMotionTrackingFacialExpression
|| __TEXT.__text _AXSSHumanReadableExplanationForMotionTrackingMode
|| __TEXT.__text _AXSSLanguageConvertToCanonicalForm
|| __TEXT.__text _AXSSLogForCategory
|| __TEXT.__text _AXSSVoiceOverAvailableTextualContextIdentifiers
|| __TEXT.__text _AXSSVoiceOverLocalizedNameForTextualContextIdentifier
|| __TEXT.__text ___AXSSCastAsClass
__ AXCoreUtilities: _AXLogCommon
__ AXCoreUtilities: _AXLogPunctuationStorage
__ AXCoreUtilities: _FKALogCommon
__ AXCoreUtilities: _OBJC_CLASS_$_AXDispatchTimer
__ ApplePushService: _APSConnectionOverrideNamedDelegatePort
__ ApplePushService: _APSEnvironmentProduction
__ ApplePushService: _OBJC_CLASS_$_APSConnection
__ CloudKit: _OBJC_CLASS_$_CKContainer
__ CloudKit: _OBJC_CLASS_$_CKFetchRecordZoneChangesConfiguration
__ CloudKit: _OBJC_CLASS_$_CKFetchRecordZoneChangesOperation
__ CloudKit: _OBJC_CLASS_$_CKModifyRecordZonesOperation
__ CloudKit: _OBJC_CLASS_$_CKModifyRecordsOperation
__ CloudKit: _OBJC_CLASS_$_CKModifySubscriptionsOperation
__ CloudKit: _OBJC_CLASS_$_CKNotification
__ CloudKit: _OBJC_CLASS_$_CKNotificationInfo
__ CloudKit: _OBJC_CLASS_$_CKRecord
__ CloudKit: _OBJC_CLASS_$_CKRecordID
__ CloudKit: _OBJC_CLASS_$_CKRecordZone
__ CloudKit: _OBJC_CLASS_$_CKRecordZoneSubscription
__ CloudKit: _OBJC_CLASS_$_CKServerChangeToken
__ CoreData: _NSDeletedObjectsKey
__ CoreData: _NSInferMappingModelAutomaticallyOption
__ CoreData: _NSInsertedObjectsKey
__ CoreData: _NSManagedObjectContextObjectsDidChangeNotification
__ CoreData: _NSMergeByPropertyObjectTrumpMergePolicy
__ CoreData: _NSMigratePersistentStoresAutomaticallyOption
__ CoreData: _NSPersistentHistoryTrackingKey
__ CoreData: _NSReadOnlyPersistentStoreOption
__ CoreData: _NSSQLiteStoreType
__ CoreData: _NSUpdatedObjectsKey
__ CoreData: _OBJC_CLASS_$_NSEntityDescription
__ CoreData: _OBJC_CLASS_$_NSFetchRequest
__ CoreData: _OBJC_CLASS_$_NSManagedObject
__ CoreData: _OBJC_CLASS_$_NSManagedObjectContext
__ CoreData: _OBJC_CLASS_$_NSManagedObjectModel
__ CoreData: _OBJC_CLASS_$_NSPersistentStoreCoordinator
__ CoreData: _OBJC_CLASS_$_NSPersistentStoreDescription
__ CoreData: _OBJC_METACLASS_$_NSManagedObject
__ CoreData: _OBJC_METACLASS_$_NSManagedObjectContext
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFAutorelease
__ CoreFoundation: _CFBooleanGetTypeID
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFLocaleCopyPreferredLanguages
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _CFRelease
__ CoreFoundation: _NSCurrentLocaleDidChangeNotification
__ CoreFoundation: _NSLocaleCountryCode
__ CoreFoundation: _NSLocaleLanguageCode
__ CoreFoundation: _NSStringTransformHiraganaToKatakana
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAllocatorDefault
__ CoreNLP: _NLLanguageIdentifierConsumeString
__ CoreNLP: _NLLanguageIdentifierCreate
__ CoreNLP: _NLLanguageIdentifierGetTopHypotheses
__ CoreNLP: _NLLanguageIdentifierRelease
__ CoreNLP: _NLLanguageIdentifierSetLanguageHints
__ CoreNLP: _NLTaggerCopyTagForCurrentToken
__ CoreNLP: _NLTaggerCreate
__ CoreNLP: _NLTaggerEnumerateTokens
__ CoreNLP: _NLTaggerSetString
__ CoreNLP: _NLTokenTypeWord
__ CoreNLP: _kNLTagSchemeLanguage
__ CoreNLP: _kNLTagSchemeScript
__ CoreNLP: _kNLTagSchemeTokenType
__ CoreServices: __AppleIDAuthenticationCopyAppleIDs
__ CoreServices: __AppleIDAuthenticationCopyCertificateInfo
__ CoreServices: __AppleIDCopySecIdentityForAppleIDAccount
__ Foundation: _NSClassFromString
__ Foundation: _NSEqualPoints
__ Foundation: _NSFileProtectionCompleteUntilFirstUserAuthentication
__ Foundation: _NSFileProtectionKey
__ Foundation: _NSIntersectionRange
__ Foundation: _NSKeyValueChangeNewKey
__ Foundation: _NSKeyValueChangeOldKey
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSLog
__ Foundation: _NSRequestConcreteImplementation
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromPoint
__ Foundation: _NSStringFromRange
__ Foundation: _NSStringFromSelector
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _NSUnionRange
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConstantFloatNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDataDetector
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSDistributedNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMutableAttributedString
__ Foundation: _OBJC_CLASS_$_NSMutableCharacterSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSScanner
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ IDS: _IDSCopyIDForDevice
__ IDS: _OBJC_CLASS_$_IDSService
__ IOKit: _IOIteratorIsValid
__ IOKit: _IOIteratorNext
__ IOKit: _IOIteratorReset
__ IOKit: _IOObjectConformsTo
__ IOKit: _IOObjectRelease
__ IOKit: _IORegistryEntryCreateCFProperties
__ IOKit: _IORegistryEntryCreateIterator
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ MobileKeyBag: _MKBGetDeviceLockState
__ MobileKeyBag: _kMobileKeyBagLockStatusNotifyToken
__ Security: _SecCopyErrorMessageString
__ Security: _SecIdentityCopyCertificate
__ Security: _SecPolicyCreateBasicX509
__ Security: _SecTrustCreateWithCertificates
__ Security: _SecTrustEvaluateWithError
__ Security: _SecTrustGetCertificateAtIndex
__ Security: _SecTrustGetCertificateCount
__ Sharing: _SFAppleIDCommonNameForCertificate
__ Sharing: _SFAppleIDVerifyCertificateChain
__ SoftLinking: __sl_dlopen
__ libAccessibility.dylib: _AXCPSharedResourcesDirectory
__ libAccessibility.dylib: _AXNSLocalizedStringForLocale
__ libAccessibility.dylib: __AXSKeyRepeatDelay
__ libAccessibility.dylib: __AXSMossdeepEnabled
__ libAccessibility.dylib: _kAXSBUserAuthenticationStateDidChangeNotification
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _MGGetSInt32Answer
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_transaction_create
__ libicucore.A.dylib: _uset_openPattern
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_allocWithZone
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
AXSSInterDeviceSecurityHelper : NSObject
  // instance methods
  -[AXSSInterDeviceSecurityHelper .cxx_destruct]
  -[AXSSInterDeviceSecurityHelper _certificateChain]
  -[AXSSInterDeviceSecurityHelper init]
  -[AXSSInterDeviceSecurityHelper dealloc]
  -[AXSSInterDeviceSecurityHelper _appleIDIdentity]
  -[AXSSInterDeviceSecurityHelper _appleIDsDidChange]
  -[AXSSInterDeviceSecurityHelper securityIdentity]
  -[AXSSInterDeviceSecurityHelper verifyCertificate:completion:]


AXSSPunctuationManager : AXSSDatabaseManager
 @property  BOOL cloudKitSync
 @property  BOOL cloudKitPushInSameProcess
 @property  NSArray *punctuationGroups

  // class methods
  +[AXSSPunctuationManager initialize]
  +[AXSSPunctuationManager setOverrideDatabasePath:]
  +[AXSSPunctuationManager overrideDatabasePath]
  +[AXSSPunctuationManager sharedDatabase]

  // instance methods
  -[AXSSPunctuationManager _filterAutoswitchContexts:punctuationGroupsForContexts:]
  -[AXSSPunctuationManager mostBasePunctuationGroupForGroup:]
  -[AXSSPunctuationManager updateEntry:]
  -[AXSSPunctuationManager _databaseDirectoryPath]
  -[AXSSPunctuationManager _saveIfPossible]
  -[AXSSPunctuationManager updatePunctuationGroup:fromCloudKit:]
  -[AXSSPunctuationManager removeAllRecordsForPurge]
  -[AXSSPunctuationManager _setupDatabase]
  -[AXSSPunctuationManager _initializeSystemGroups]
  -[AXSSPunctuationManager setCloudKitSync:]
  -[AXSSPunctuationManager removeEntry:]
  -[AXSSPunctuationManager .cxx_destruct]
  -[AXSSPunctuationManager _initializeCloudKitHelpers]
  -[AXSSPunctuationManager updateEntry:fromCloudKit:]
  -[AXSSPunctuationManager cloudKitSync]
  -[AXSSPunctuationManager cloudKitPushInSameProcess]
  -[AXSSPunctuationManager updatePunctuationGroup:]
  -[AXSSPunctuationManager _cloudKitUpdated:]
  -[AXSSPunctuationManager _databaseFilePath]
  -[AXSSPunctuationManager stringToRule:]
  -[AXSSPunctuationManager ruleToString:]
  -[AXSSPunctuationManager init]
  -[AXSSPunctuationManager _updateCloudKitHelpers]
  -[AXSSPunctuationManager allPunctuationGroup]
  -[AXSSPunctuationManager parentPunctuationGroup:]
  -[AXSSPunctuationManager isProtectedDataAvailable]
  -[AXSSPunctuationManager addCloudRecordToPurge:recordEntityType:]
  -[AXSSPunctuationManager userAuthChanged]
  -[AXSSPunctuationManager punctuationEntriesForGroupUUID:]
  -[AXSSPunctuationManager punctuationGroupsForContexts]
  -[AXSSPunctuationManager _punctuationGroupFromManagedObject:]
  -[AXSSPunctuationManager punctuationGroups]
  -[AXSSPunctuationManager removeCloudRecordForPurge:]
  -[AXSSPunctuationManager punctuationEntryObjectFromLocalObjects:]
  -[AXSSPunctuationManager punctuationEntryForUUID:]
  -[AXSSPunctuationManager importPunctuationGroup:]
  -[AXSSPunctuationManager cloudRecordsToPurge:]
  -[AXSSPunctuationManager nextDefaultGroupName]
  -[AXSSPunctuationManager isBasePunctuationGroup:]
  -[AXSSPunctuationManager removePunctuationGroup:]
  -[AXSSPunctuationManager somePunctuationGroup]
  -[AXSSPunctuationManager _punctuationGroupForEntry:]
  -[AXSSPunctuationManager nonePunctuationGroup]
  -[AXSSPunctuationManager _initializeDatabaseStartup]
  -[AXSSPunctuationManager _punctuationEntryFromManagedObject:]
  -[AXSSPunctuationManager setCloudKitPushInSameProcess:]
  -[AXSSPunctuationManager _managedObjectChanged:]
  -[AXSSPunctuationManager punctuationGroupForUUID:]


AXSSMotionTrackingVideoFileInputManager : NSObject
 @property  BOOL _monitoring
 @property  NSMutableArray *_videoFileInputNames
 @property  NSArray *videoFileInputNames
 @property  <AXSSMotionTrackingVideoFileInputManagerDelegate> *delegate

  // class methods
  +[AXSSMotionTrackingVideoFileInputManager allowVideoFileInput]

  // instance methods
  -[AXSSMotionTrackingVideoFileInputManager startMonitoring]
  -[AXSSMotionTrackingVideoFileInputManager stopMonitoring]
  -[AXSSMotionTrackingVideoFileInputManager .cxx_destruct]
  -[AXSSMotionTrackingVideoFileInputManager setDelegate:]
  -[AXSSMotionTrackingVideoFileInputManager init]
  -[AXSSMotionTrackingVideoFileInputManager _update]
  -[AXSSMotionTrackingVideoFileInputManager delegate]
  -[AXSSMotionTrackingVideoFileInputManager dealloc]
  -[AXSSMotionTrackingVideoFileInputManager _monitoring]
  -[AXSSMotionTrackingVideoFileInputManager set_monitoring:]
  -[AXSSMotionTrackingVideoFileInputManager _videoFileInputNamesChanged:]
  -[AXSSMotionTrackingVideoFileInputManager _videoFileInputNames]
  -[AXSSMotionTrackingVideoFileInputManager videoFileInputNames]
  -[AXSSMotionTrackingVideoFileInputManager set_videoFileInputNames:]


AXSSKeyChord : NSObject <NSSecureCoding, NSCopying>
 @property  NSArray *keys
 @property  NSString *displayValue
 @property  BOOL isFunctionKeyChord
 @property  BOOL containsModifier
 @property  BOOL isTextInputChord
 @property  BOOL isTextInputTabChord
 @property  BOOL isArrowKeyChord
 @property  BOOL isNull

  // class methods
  +[AXSSKeyChord supportsSecureCoding]
  +[AXSSKeyChord keyChordWithKeys:]
  +[AXSSKeyChord keyChordWithString:]
  +[AXSSKeyChord nullKeyChord]
  +[AXSSKeyChord keyFromKeyCode:unicodeCharacter:]

  // instance methods
  -[AXSSKeyChord keys]
  -[AXSSKeyChord initWithCoder:]
  -[AXSSKeyChord setKeys:]
  -[AXSSKeyChord .cxx_destruct]
  -[AXSSKeyChord isEqual:]
  -[AXSSKeyChord isNull]
  -[AXSSKeyChord displayValueWithStyle:isUSKeyboard:]
  -[AXSSKeyChord displayValue]
  -[AXSSKeyChord copyWithZone:]
  -[AXSSKeyChord encodeWithCoder:]
  -[AXSSKeyChord _initWithKeys:]
  -[AXSSKeyChord _normalizeKeys:]
  -[AXSSKeyChord isEqualToKeyChord:]
  -[AXSSKeyChord isTextInputTabChord]
  -[AXSSKeyChord isArrowKeyChord]
  -[AXSSKeyChord displayValueWithStyle:]
  -[AXSSKeyChord _displayValueWithSortedModifiers:isUSKeyboard:]
  -[AXSSKeyChord isFunctionKeyChord]
  -[AXSSKeyChord containsModifier]
  -[AXSSKeyChord isTextInputChord]


AXSSLanguageLoader : NSObject
  // class methods
  +[AXSSLanguageLoader _characterSetForRanges:]
  +[AXSSLanguageLoader loadLanguages]


AXSSKeyboardEvent : NSObject <NSCopying>
 @property  unsigned long keyCode
 @property  NSString *unicodeCharacter
 @property  NSString *backupUnicodeCharacter
 @property  BOOL isDownEvent
 @property  BOOL isRepeatEvent
 @property  BOOL isModifierChangedEvent
 @property  BOOL isCommandDown
 @property  BOOL isLeftCommandDown
 @property  BOOL isRightCommandDown
 @property  BOOL isOptionDown
 @property  BOOL isLeftOptionDown
 @property  BOOL isRightOptionDown
 @property  BOOL isControlDown
 @property  BOOL isLeftControlDown
 @property  BOOL isRightControlDown
 @property  BOOL isShiftDown
 @property  BOOL isLeftShiftDown
 @property  BOOL isRightShiftDown
 @property  BOOL isCapsLockDown
 @property  BOOL isFnDown
 @property  long long modifierMask
 @property  AXSSKeyChord *keyChord
 @property  AXSSKeyChord *backupKeyChord

  // instance methods
  -[AXSSKeyboardEvent .cxx_destruct]
  -[AXSSKeyboardEvent isDownEvent]
  -[AXSSKeyboardEvent isShiftDown]
  -[AXSSKeyboardEvent keyCode]
  -[AXSSKeyboardEvent setKeyCode:]
  -[AXSSKeyboardEvent copyWithZone:]
  -[AXSSKeyboardEvent unicodeCharacter]
  -[AXSSKeyboardEvent setUnicodeCharacter:]
  -[AXSSKeyboardEvent backupUnicodeCharacter]
  -[AXSSKeyboardEvent setBackupUnicodeCharacter:]
  -[AXSSKeyboardEvent setIsDownEvent:]
  -[AXSSKeyboardEvent isRepeatEvent]
  -[AXSSKeyboardEvent setIsRepeatEvent:]
  -[AXSSKeyboardEvent isModifierChangedEvent]
  -[AXSSKeyboardEvent setIsModifierChangedEvent:]
  -[AXSSKeyboardEvent isLeftCommandDown]
  -[AXSSKeyboardEvent setIsLeftCommandDown:]
  -[AXSSKeyboardEvent isRightCommandDown]
  -[AXSSKeyboardEvent setIsRightCommandDown:]
  -[AXSSKeyboardEvent isLeftOptionDown]
  -[AXSSKeyboardEvent setIsLeftOptionDown:]
  -[AXSSKeyboardEvent isRightOptionDown]
  -[AXSSKeyboardEvent setIsRightOptionDown:]
  -[AXSSKeyboardEvent isLeftShiftDown]
  -[AXSSKeyboardEvent setIsLeftShiftDown:]
  -[AXSSKeyboardEvent isRightShiftDown]
  -[AXSSKeyboardEvent setIsRightShiftDown:]
  -[AXSSKeyboardEvent isFnDown]
  -[AXSSKeyboardEvent setIsFnDown:]
  -[AXSSKeyboardEvent isCapsLockDown]
  -[AXSSKeyboardEvent setIsCapsLockDown:]
  -[AXSSKeyboardEvent isLeftControlDown]
  -[AXSSKeyboardEvent isRightControlDown]
  -[AXSSKeyboardEvent isCommandDown]
  -[AXSSKeyboardEvent isOptionDown]
  -[AXSSKeyboardEvent isControlDown]
  -[AXSSKeyboardEvent _keyChordForUnicodeCharacter:]
  -[AXSSKeyboardEvent modifierMask]
  -[AXSSKeyboardEvent keyChord]
  -[AXSSKeyboardEvent backupKeyChord]
  -[AXSSKeyboardEvent setIsLeftControlDown:]
  -[AXSSKeyboardEvent setIsRightControlDown:]


AXSSMotionTrackingInputConfiguration : NSObject <NSCopying, NSSecureCoding>
 @property  NSDictionary *plistDictionary
 @property  NSArray *orderedInputPreference
 @property  NSSet *allowedTrackingTypes
 @property  BOOL allowSeparateInputForExpressions
 @property  NSArray *orderedCameraInputPreference

  // class methods
  +[AXSSMotionTrackingInputConfiguration supportsSecureCoding]

  // instance methods
  -[AXSSMotionTrackingInputConfiguration initWithCoder:]
  -[AXSSMotionTrackingInputConfiguration initWithPlistDictionary:]
  -[AXSSMotionTrackingInputConfiguration .cxx_destruct]
  -[AXSSMotionTrackingInputConfiguration init]
  -[AXSSMotionTrackingInputConfiguration isEqual:]
  -[AXSSMotionTrackingInputConfiguration plistDictionary]
  -[AXSSMotionTrackingInputConfiguration copyWithZone:]
  -[AXSSMotionTrackingInputConfiguration encodeWithCoder:]
  -[AXSSMotionTrackingInputConfiguration orderedInputPreference]
  -[AXSSMotionTrackingInputConfiguration allowedTrackingTypes]
  -[AXSSMotionTrackingInputConfiguration allowSeparateInputForExpressions]
  -[AXSSMotionTrackingInputConfiguration isEqualToMotionTrackingInputConfiguration:]
  -[AXSSMotionTrackingInputConfiguration initWithOrderedInputPreference:allowedTrackingTypes:allowSeparateInputForExpressions:]
  -[AXSSMotionTrackingInputConfiguration orderedCameraInputPreference]
  -[AXSSMotionTrackingInputConfiguration supportsTrackingType:]
  -[AXSSMotionTrackingInputConfiguration setOrderedInputPreference:]
  -[AXSSMotionTrackingInputConfiguration setAllowedTrackingTypes:]
  -[AXSSMotionTrackingInputConfiguration setAllowSeparateInputForExpressions:]


AXSSMotionTrackingExpressionConfiguration : NSObject <NSCopying, NSSecureCoding>
 @property  NSMutableDictionary *_facialExpressionToSensitivity
 @property  NSDictionary *plistDictionary

  // class methods
  +[AXSSMotionTrackingExpressionConfiguration supportsSecureCoding]
  +[AXSSMotionTrackingExpressionConfiguration _defaultSensitivitiesForAllFacialExpressions]
  +[AXSSMotionTrackingExpressionConfiguration _minConfidenceExpressionStarted:usingExpressionConfiguration:]
  +[AXSSMotionTrackingExpressionConfiguration _jawOpenStartingWithValue:mouthClose:expressionConfiguration:]
  +[AXSSMotionTrackingExpressionConfiguration _facicalExpressionToSensitivityToValueMapping]
  +[AXSSMotionTrackingExpressionConfiguration defaultExpressionConfiguration]
  +[AXSSMotionTrackingExpressionConfiguration processIncomingExpressions:previousExpressions:expressionConfiguration:startExpressionsOutSet:endExpressionsOutSet:]

  // instance methods
  -[AXSSMotionTrackingExpressionConfiguration initWithCoder:]
  -[AXSSMotionTrackingExpressionConfiguration initWithPlistDictionary:]
  -[AXSSMotionTrackingExpressionConfiguration .cxx_destruct]
  -[AXSSMotionTrackingExpressionConfiguration init]
  -[AXSSMotionTrackingExpressionConfiguration isEqual:]
  -[AXSSMotionTrackingExpressionConfiguration plistDictionary]
  -[AXSSMotionTrackingExpressionConfiguration copyWithZone:]
  -[AXSSMotionTrackingExpressionConfiguration encodeWithCoder:]
  -[AXSSMotionTrackingExpressionConfiguration _facialExpressionToSensitivity]
  -[AXSSMotionTrackingExpressionConfiguration _safelySetSensitivity:forFacialExpression:inDictionary:]
  -[AXSSMotionTrackingExpressionConfiguration isEqualToMotionTrackingExpressionConfiguration:]
  -[AXSSMotionTrackingExpressionConfiguration sensitivityForFacialExpression:]
  -[AXSSMotionTrackingExpressionConfiguration setSensitivity:forFacialExpression:]
  -[AXSSMotionTrackingExpressionConfiguration set_facialExpressionToSensitivity:]


AXSSMotionTrackingInput : NSObject <NSSecureCoding, NSCopying>
 @property  NSString *name
 @property  NSString *uniqueIdentifier
 @property  NSDictionary *plistDictionary
 @property  BOOL isHIDDevice
 @property  BOOL isCamera
 @property  BOOL isVideoFile
 @property  BOOL supportsExpressions
 @property  BOOL supportsLookAtPoint
 @property  unsigned long trackingType

  // class methods
  +[AXSSMotionTrackingInput supportsSecureCoding]
  +[AXSSMotionTrackingInput motionTrackingInputFromPlistDictionary:]

  // instance methods
  -[AXSSMotionTrackingInput initWithCoder:]
  -[AXSSMotionTrackingInput initWithPlistDictionary:]
  -[AXSSMotionTrackingInput init]
  -[AXSSMotionTrackingInput isEqual:]
  -[AXSSMotionTrackingInput isCamera]
  -[AXSSMotionTrackingInput plistDictionary]
  -[AXSSMotionTrackingInput copyWithZone:]
  -[AXSSMotionTrackingInput encodeWithCoder:]
  -[AXSSMotionTrackingInput isVideoFile]
  -[AXSSMotionTrackingInput trackingType]
  -[AXSSMotionTrackingInput isEqualToMotionTrackingInput:]
  -[AXSSMotionTrackingInput isHIDDevice]
  -[AXSSMotionTrackingInput supportsExpressions]
  -[AXSSMotionTrackingInput supportsLookAtPoint]


AXSSMotionTrackingCameraInput : AXSSMotionTrackingInput
 @property  NSString *captureDeviceUniqueID
 @property  NSString *name
 @property  BOOL isBuiltIn

  // class methods
  +[AXSSMotionTrackingCameraInput supportsSecureCoding]
  +[AXSSMotionTrackingCameraInput captureDeviceForMotionTrackingInput:]
  +[AXSSMotionTrackingCameraInput motionTrackingCameraInputWithAVCaptureDevice:]

  // instance methods
  -[AXSSMotionTrackingCameraInput name]
  -[AXSSMotionTrackingCameraInput uniqueIdentifier]
  -[AXSSMotionTrackingCameraInput initWithCoder:]
  -[AXSSMotionTrackingCameraInput initWithPlistDictionary:]
  -[AXSSMotionTrackingCameraInput .cxx_destruct]
  -[AXSSMotionTrackingCameraInput setName:]
  -[AXSSMotionTrackingCameraInput isCamera]
  -[AXSSMotionTrackingCameraInput setIsBuiltIn:]
  -[AXSSMotionTrackingCameraInput plistDictionary]
  -[AXSSMotionTrackingCameraInput isBuiltIn]
  -[AXSSMotionTrackingCameraInput encodeWithCoder:]
  -[AXSSMotionTrackingCameraInput trackingType]
  -[AXSSMotionTrackingCameraInput supportsExpressions]
  -[AXSSMotionTrackingCameraInput captureDeviceUniqueID]
  -[AXSSMotionTrackingCameraInput initWithCaptureDeviceUniqueID:name:isBuiltIn:]
  -[AXSSMotionTrackingCameraInput setCaptureDeviceUniqueID:]


AXSSMotionTrackingHIDInput : AXSSMotionTrackingInput
 @property  NSString *deviceUniqueID
 @property  NSNumber *productID
 @property  NSNumber *vendorID
 @property  NSString *deviceName
 @property  BOOL mfiAuthenticated
 @property  NSDictionary *hidMatchingDictionary

  // class methods
  +[AXSSMotionTrackingHIDInput supportsSecureCoding]
  +[AXSSMotionTrackingHIDInput motionTrackingHIDInputWithDevice:]

  // instance methods
  -[AXSSMotionTrackingHIDInput name]
  -[AXSSMotionTrackingHIDInput uniqueIdentifier]
  -[AXSSMotionTrackingHIDInput initWithCoder:]
  -[AXSSMotionTrackingHIDInput setVendorID:]
  -[AXSSMotionTrackingHIDInput deviceName]
  -[AXSSMotionTrackingHIDInput setProductID:]
  -[AXSSMotionTrackingHIDInput initWithPlistDictionary:]
  -[AXSSMotionTrackingHIDInput .cxx_destruct]
  -[AXSSMotionTrackingHIDInput productID]
  -[AXSSMotionTrackingHIDInput vendorID]
  -[AXSSMotionTrackingHIDInput setDeviceName:]
  -[AXSSMotionTrackingHIDInput deviceUniqueID]
  -[AXSSMotionTrackingHIDInput setDeviceUniqueID:]
  -[AXSSMotionTrackingHIDInput plistDictionary]
  -[AXSSMotionTrackingHIDInput encodeWithCoder:]
  -[AXSSMotionTrackingHIDInput trackingType]
  -[AXSSMotionTrackingHIDInput isHIDDevice]
  -[AXSSMotionTrackingHIDInput supportsExpressions]
  -[AXSSMotionTrackingHIDInput initWithDeviceUniqueID:productID:vendorID:deviceName:mfiAuthenticated:]
  -[AXSSMotionTrackingHIDInput mfiAuthenticated]
  -[AXSSMotionTrackingHIDInput hidMatchingDictionary]
  -[AXSSMotionTrackingHIDInput setMfiAuthenticated:]


AXSSMotionTrackingVideoFileInput : AXSSMotionTrackingInput
 @property  NSString *_name
 @property  NSString *name

  // class methods
  +[AXSSMotionTrackingVideoFileInput supportsSecureCoding]
  +[AXSSMotionTrackingVideoFileInput videoFileInputWithName:]

  // instance methods
  -[AXSSMotionTrackingVideoFileInput name]
  -[AXSSMotionTrackingVideoFileInput uniqueIdentifier]
  -[AXSSMotionTrackingVideoFileInput initWithCoder:]
  -[AXSSMotionTrackingVideoFileInput initWithPlistDictionary:]
  -[AXSSMotionTrackingVideoFileInput .cxx_destruct]
  -[AXSSMotionTrackingVideoFileInput initWithName:]
  -[AXSSMotionTrackingVideoFileInput _name]
  -[AXSSMotionTrackingVideoFileInput plistDictionary]
  -[AXSSMotionTrackingVideoFileInput encodeWithCoder:]
  -[AXSSMotionTrackingVideoFileInput isVideoFile]
  -[AXSSMotionTrackingVideoFileInput trackingType]
  -[AXSSMotionTrackingVideoFileInput supportsExpressions]
  -[AXSSMotionTrackingVideoFileInput set_name:]


AXSSVoiceTagger : NSObject
  // class methods
  +[AXSSVoiceTagger _currentLineContentForTag:inTags:]
  +[AXSSVoiceTagger _primaryDialectForTag:inTags:]
  +[AXSSVoiceTagger voiceTagsForContent:preferredLangauge:]
  +[AXSSVoiceTagger markupVoiceTagForAttributedString:preferredLangauge:]


AXSSLanguageMap : NSObject
 @property  BOOL western
 @property  BOOL rtl
 @property  BOOL ambiguous
 @property  NSString *generalLanguageID
 @property  NSArray *alternateLanguageIDs
 @property  NSArray *dialects
 @property  NSArray *associatedAmbiguousLanguages
 @property  AXSSDialectMap *defaultDialect
 @property  AXSSDialectMap *userLocaleDialect

  // instance methods
  -[AXSSLanguageMap .cxx_destruct]
  -[AXSSLanguageMap isRTL]
  -[AXSSLanguageMap isAmbiguous]
  -[AXSSLanguageMap setRtl:]
  -[AXSSLanguageMap dialects]
  -[AXSSLanguageMap setWestern:]
  -[AXSSLanguageMap setAmbiguous:]
  -[AXSSLanguageMap setGeneralLanguageID:]
  -[AXSSLanguageMap setAlternateLanguageIDs:]
  -[AXSSLanguageMap setDialects:]
  -[AXSSLanguageMap setAssociatedAmbiguousLanguages:]
  -[AXSSLanguageMap generalLanguageID]
  -[AXSSLanguageMap defaultDialect]
  -[AXSSLanguageMap isWestern]
  -[AXSSLanguageMap alternateLanguageIDs]
  -[AXSSLanguageMap userLocaleDialect]
  -[AXSSLanguageMap initWithLanguageID:isWestern:isAmbiguous:isRTL:dialects:alternateLanguageIDs:associatedAmbiguousLanguages:]
  -[AXSSLanguageMap dialectWithLocaleIdentifier:]
  -[AXSSLanguageMap associatedAmbiguousLanguages]
  -[AXSSLanguageMap setDefaultDialect:]
  -[AXSSLanguageMap setUserLocaleDialect:]


AXSSKeyboardCommand : NSObject <NSSecureCoding, NSCopying>
 @property  NSString *type
 @property  NSString *standardCommandIdentifier
 @property  NSString *localizedName

  // class methods
  +[AXSSKeyboardCommand supportsSecureCoding]
  +[AXSSKeyboardCommand commandWithStandardCommandIdentifier:]

  // instance methods
  -[AXSSKeyboardCommand localizedName]
  -[AXSSKeyboardCommand initWithType:]
  -[AXSSKeyboardCommand initWithCoder:]
  -[AXSSKeyboardCommand .cxx_destruct]
  -[AXSSKeyboardCommand isEqual:]
  -[AXSSKeyboardCommand type]
  -[AXSSKeyboardCommand isEqualToCommand:]
  -[AXSSKeyboardCommand copyWithZone:]
  -[AXSSKeyboardCommand encodeWithCoder:]
  -[AXSSKeyboardCommand initWithStandardCommandIdentifier:]
  -[AXSSKeyboardCommand _initWithType:standardCommandIdentifier:]
  -[AXSSKeyboardCommand standardCommandIdentifier]


AXSSLanguageManager : NSObject
 @property  NSArray *languageMaps
 @property  NSLocale *userLocale
 @property  NSCharacterSet *commonCharacters
 @property  AXSSDialectMap *dialectForSystemLanguage
 @property  AXSSDialectMap *dialectForCurrentLocale
 @property  AXSSDialectMap *dialectForCurrentRegion
 @property  NSString *systemLanguageID
 @property  AXSSDialectMap *dialectForUserLocale

  // class methods
  +[AXSSLanguageManager shared]
  +[AXSSLanguageManager commonPunctuationCharacters]
  +[AXSSLanguageManager stringByReplacingFatWidthCharactersWithBasicCharacters:]

  // instance methods
  -[AXSSLanguageManager isStringComposedByCommonCharacters:]
  -[AXSSLanguageManager systemLanguageID]
  -[AXSSLanguageManager userLocale]
  -[AXSSLanguageManager .cxx_destruct]
  -[AXSSLanguageManager _preferredLanguage]
  -[AXSSLanguageManager setUserLocale:]
  -[AXSSLanguageManager _handleUserLocaleDidChange:]
  -[AXSSLanguageManager setCommonCharacters:]
  -[AXSSLanguageManager dialectForCurrentLocale]
  -[AXSSLanguageManager dialectForCurrentRegion]
  -[AXSSLanguageManager updateCachedDialects]
  -[AXSSLanguageManager commonCharacters]
  -[AXSSLanguageManager init]
  -[AXSSLanguageManager setDialectForSystemLanguage:]
  -[AXSSLanguageManager setDialectForCurrentLocale:]
  -[AXSSLanguageManager setDialectForCurrentRegion:]
  -[AXSSLanguageManager dialectForLanguageID:]
  -[AXSSLanguageManager isCharacterCommon:]
  -[AXSSLanguageManager dialectForUserLocale]
  -[AXSSLanguageManager dialectsThatCanSpeakCharacter:]
  -[AXSSLanguageManager dialectsThatCanSpeakString:]
  -[AXSSLanguageManager dialectThatCanSpeakCharacter:]
  -[AXSSLanguageManager dialectForSystemLanguage]
  -[AXSSLanguageManager languageMaps]
  -[AXSSLanguageManager dialectForSpeechSynthesisVoiceID:]
  -[AXSSLanguageManager setLanguageMaps:]


AXSSSwitchControlSettings : NSObject
 @property  NSArray *scanningStyles
 @property  NSArray *tapBehaviors
 @property  NSArray *cursorSizes
 @property  NSArray *postActivationScanLocations
 @property  double autoScanningInterval
 @property  double autoHideTimeout
 @property  double pauseOnFirstItemInterval
 @property  unsigned long numberOfScanLoops
 @property  double dwellDuration
 @property  double repeatActionInterval
 @property  double holdDuration
 @property  double ignoreRepeatDuration
 @property  BOOL soundEffectsEnabled
 @property  BOOL speechEnabled
 @property  double longPressDuration
 @property  double autoTapTimeout

  // instance methods
  -[AXSSSwitchControlSettings initWithDictionaryRepresentation:]
  -[AXSSSwitchControlSettings .cxx_destruct]
  -[AXSSSwitchControlSettings dictionaryRepresentation]
  -[AXSSSwitchControlSettings setSpeechEnabled:]
  -[AXSSSwitchControlSettings init]
  -[AXSSSwitchControlSettings speechEnabled]
  -[AXSSSwitchControlSettings scanningStyles]
  -[AXSSSwitchControlSettings tapBehaviors]
  -[AXSSSwitchControlSettings cursorSizes]
  -[AXSSSwitchControlSettings postActivationScanLocations]
  -[AXSSSwitchControlSettings autoScanningInterval]
  -[AXSSSwitchControlSettings autoHideTimeout]
  -[AXSSSwitchControlSettings pauseOnFirstItemInterval]
  -[AXSSSwitchControlSettings numberOfScanLoops]
  -[AXSSSwitchControlSettings dwellDuration]
  -[AXSSSwitchControlSettings repeatActionInterval]
  -[AXSSSwitchControlSettings holdDuration]
  -[AXSSSwitchControlSettings ignoreRepeatDuration]
  -[AXSSSwitchControlSettings soundEffectsEnabled]
  -[AXSSSwitchControlSettings longPressDuration]
  -[AXSSSwitchControlSettings autoTapTimeout]
  -[AXSSSwitchControlSettings setScanningStyles:]
  -[AXSSSwitchControlSettings setTapBehaviors:]
  -[AXSSSwitchControlSettings setCursorSizes:]
  -[AXSSSwitchControlSettings setPostActivationScanLocations:]
  -[AXSSSwitchControlSettings setAutoScanningInterval:]
  -[AXSSSwitchControlSettings setAutoHideTimeout:]
  -[AXSSSwitchControlSettings setPauseOnFirstItemInterval:]
  -[AXSSSwitchControlSettings setNumberOfScanLoops:]
  -[AXSSSwitchControlSettings setDwellDuration:]
  -[AXSSSwitchControlSettings setRepeatActionInterval:]
  -[AXSSSwitchControlSettings setHoldDuration:]
  -[AXSSSwitchControlSettings setIgnoreRepeatDuration:]
  -[AXSSSwitchControlSettings setSoundEffectsEnabled:]
  -[AXSSSwitchControlSettings setLongPressDuration:]
  -[AXSSSwitchControlSettings setAutoTapTimeout:]


AXSSInterDeviceSwitchEvent : NSObject
 @property  NSString *switchIdentifier
 @property  NSString *switchDisplayName
 @property  NSString *deviceIdentifier
 @property  NSArray *actions
 @property  NSArray *longPressActions
 @property  BOOL isDown

  // instance methods
  -[AXSSInterDeviceSwitchEvent setActions:]
  -[AXSSInterDeviceSwitchEvent initWithDictionaryRepresentation:]
  -[AXSSInterDeviceSwitchEvent .cxx_destruct]
  -[AXSSInterDeviceSwitchEvent dictionaryRepresentation]
  -[AXSSInterDeviceSwitchEvent actions]
  -[AXSSInterDeviceSwitchEvent isDown]
  -[AXSSInterDeviceSwitchEvent deviceIdentifier]
  -[AXSSInterDeviceSwitchEvent setDeviceIdentifier:]
  -[AXSSInterDeviceSwitchEvent initWithSwitchIdentifier:switchDisplayName:deviceIdentifier:actions:longPressActions:isDown:]
  -[AXSSInterDeviceSwitchEvent switchDisplayName]
  -[AXSSInterDeviceSwitchEvent setSwitchDisplayName:]
  -[AXSSInterDeviceSwitchEvent switchIdentifier]
  -[AXSSInterDeviceSwitchEvent setSwitchIdentifier:]
  -[AXSSInterDeviceSwitchEvent longPressActions]
  -[AXSSInterDeviceSwitchEvent initWithSwitchIdentifier:switchDisplayName:deviceIdentifier:actions:isDown:]
  -[AXSSInterDeviceSwitchEvent setLongPressActions:]
  -[AXSSInterDeviceSwitchEvent setIsDown:]


AXSSPronunciationSubstitution : NSObject
 @property  NSString *originalString
 @property  NSString *replacementString
 @property  NSString *phonemes
 @property  NSSet *languages
 @property  NSSet *voiceIds
 @property  BOOL active
 @property  BOOL ignoreCase
 @property  {_NSRange=QQ} replacementRange
 @property  BOOL appliesToAllApps
 @property  NSSet *bundleIdentifiers
 @property  BOOL isUserSubstitution

  // instance methods
  -[AXSSPronunciationSubstitution active]
  -[AXSSPronunciationSubstitution languages]
  -[AXSSPronunciationSubstitution .cxx_destruct]
  -[AXSSPronunciationSubstitution setLanguages:]
  -[AXSSPronunciationSubstitution setBundleIdentifiers:]
  -[AXSSPronunciationSubstitution replacementString]
  -[AXSSPronunciationSubstitution bundleIdentifiers]
  -[AXSSPronunciationSubstitution originalString]
  -[AXSSPronunciationSubstitution replacementRange]
  -[AXSSPronunciationSubstitution setReplacementRange:]
  -[AXSSPronunciationSubstitution setActive:]
  -[AXSSPronunciationSubstitution phonemes]
  -[AXSSPronunciationSubstitution voiceIds]
  -[AXSSPronunciationSubstitution setPhonemes:]
  -[AXSSPronunciationSubstitution setIgnoreCase:]
  -[AXSSPronunciationSubstitution setAppliesToAllApps:]
  -[AXSSPronunciationSubstitution setOriginalString:]
  -[AXSSPronunciationSubstitution setReplacementString:]
  -[AXSSPronunciationSubstitution setVoiceIds:]
  -[AXSSPronunciationSubstitution ignoreCase]
  -[AXSSPronunciationSubstitution appliesToAllApps]
  -[AXSSPronunciationSubstitution isUserSubstitution]
  -[AXSSPronunciationSubstitution setIsUserSubstitution:]
  -[AXSSPronunciationSubstitution isEqualToSubstitution:]


AXSSDialectMap : NSObject
 @property  NSLocale *locale
 @property  NSString *specificLanguageID
 @property  NSString *voiceName
 @property  NSString *voiceIdentifier
 @property  NSCharacterSet *speakableCharacters
 @property  NSCharacterSet *secondaryLanguageRange
 @property  AXSSLanguageMap *languageMap
 @property  NSString *regionID

  // instance methods
  -[AXSSDialectMap regionID]
  -[AXSSDialectMap setLocale:]
  -[AXSSDialectMap .cxx_destruct]
  -[AXSSDialectMap languageMap]
  -[AXSSDialectMap isEqual:]
  -[AXSSDialectMap locale]
  -[AXSSDialectMap setSpeakableCharacters:]
  -[AXSSDialectMap setSecondaryLanguageRange:]
  -[AXSSDialectMap setSpecificLanguageID:]
  -[AXSSDialectMap secondaryLanguageRange]
  -[AXSSDialectMap speakableCharacters]
  -[AXSSDialectMap canSpeakString:]
  -[AXSSDialectMap voiceIdentifier]
  -[AXSSDialectMap specificLanguageID]
  -[AXSSDialectMap setVoiceIdentifier:]
  -[AXSSDialectMap voiceName]
  -[AXSSDialectMap isDialectSecondaryForCharacter:]
  -[AXSSDialectMap canSpeakCharacter:]
  -[AXSSDialectMap setVoiceName:]
  -[AXSSDialectMap initWithLocale:voiceName:specificLanguageID:voiceIdentifier:speakableCharacters:secondaryLanguageRange:]


AXSSCloudData : NSObject
 @property  CKServerChangeToken *serverChangeToken
 @property  NSArray *recordsToUpdate
 @property  NSArray *recordIDsToDelete
 @property  NSObject<OS_os_transaction> *openTransaction

  // instance methods
  -[AXSSCloudData recordIDsToDelete]
  -[AXSSCloudData setRecordIDsToDelete:]
  -[AXSSCloudData .cxx_destruct]
  -[AXSSCloudData setServerChangeToken:]
  -[AXSSCloudData serverChangeToken]
  -[AXSSCloudData openTransaction]
  -[AXSSCloudData setOpenTransaction:]
  -[AXSSCloudData recordsToUpdate]
  -[AXSSCloudData setRecordsToUpdate:]


AXSSCloudKitHelperManagedObjectContext : NSManagedObjectContext

AXSSCloudKitHelper : NSObject <APSConnectionDelegate>
 @property  NSPersistentStore *observedStore
 @property  NSPersistentStoreCoordinator *observedCoordinator
 @property  NSManagedObjectContext *managedObjectContext
 @property  NSString *containerIdentifier
 @property  CKContainer *container
 @property  CKRecordZone *recordZone
 @property  CKRecordZoneSubscription *zoneSubscription
 @property  CKDatabase *database
 @property  NSObject<OS_dispatch_queue> *cloudkitQueue
 @property  NSObject<OS_dispatch_semaphore> *cloudKitQueueSemaphore
 @property  APSConnection *apsConnection
 @property  NSError *lastInitializationError
 @property  NSURL *largeBlobDirectoryURL
 @property  BOOL observeLocalDatabaseChanges
 @property  BOOL isProtectedDataAvailable
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AXSSCloudKitHelper managedObjectContext]
  -[AXSSCloudKitHelper recordType]
  -[AXSSCloudKitHelper connection:didReceivePublicToken:]
  -[AXSSCloudKitHelper apsConnection]
  -[AXSSCloudKitHelper connection:didReceiveToken:forTopic:identifier:]
  -[AXSSCloudKitHelper database]
  -[AXSSCloudKitHelper container]
  -[AXSSCloudKitHelper .cxx_destruct]
  -[AXSSCloudKitHelper recordZone]
  -[AXSSCloudKitHelper containerIdentifier]
  -[AXSSCloudKitHelper setIsProtectedDataAvailable:]
  -[AXSSCloudKitHelper beginWatchingForChanges]
  -[AXSSCloudKitHelper createCKRecordFromObject:]
  -[AXSSCloudKitHelper isProtectedDataAvailable]
  -[AXSSCloudKitHelper managedObjectContextDidSave:]
  -[AXSSCloudKitHelper _setContainer:]
  -[AXSSCloudKitHelper apsEnvironment]
  -[AXSSCloudKitHelper logMessage:]
  -[AXSSCloudKitHelper testRecordForSchemaCreation:]
  -[AXSSCloudKitHelper dealloc]
  -[AXSSCloudKitHelper managedObjectClass]
  -[AXSSCloudKitHelper retrieveLocalChangesForCloud:]
  -[AXSSCloudKitHelper zoneSubscription]
  -[AXSSCloudKitHelper processServerUpdateChanges:moc:recordNameToManagedObject:]
  -[AXSSCloudKitHelper clearRecordsForPurging:]
  -[AXSSCloudKitHelper connection:didReceiveMessageForTopic:userInfo:]
  -[AXSSCloudKitHelper setObserveLocalDatabaseChanges:]
  -[AXSSCloudKitHelper initWithContainerIdentifier:zoneName:]
  -[AXSSCloudKitHelper observeChangesForManagedContext:]
  -[AXSSCloudKitHelper _initializeCloudkitForObservedStore]
  -[AXSSCloudKitHelper openTransactionWithLabel:andExecuteWorkBlock:]
  -[AXSSCloudKitHelper _checkAccountStatus:]
  -[AXSSCloudKitHelper _createZoneIfNecessary:]
  -[AXSSCloudKitHelper _setupZoneSubscriptionIfNecessary:]
  -[AXSSCloudKitHelper _createSchemaIfNecessary:]
  -[AXSSCloudKitHelper _setupPushConnection:]
  -[AXSSCloudKitHelper fetchChangesAndUpdateObservedStore]
  -[AXSSCloudKitHelper zoneCreatedKey]
  -[AXSSCloudKitHelper zoneSubscriptionKey]
  -[AXSSCloudKitHelper observedStore]
  -[AXSSCloudKitHelper serverChangeTokenMetadataKey]
  -[AXSSCloudKitHelper processAccumulatedChangesForServerChangeToken:withAccumulatedUpdates:andDeletes:inTransaction:]
  -[AXSSCloudKitHelper _processAccumulatedQueueData]
  -[AXSSCloudKitHelper observedCoordinator]
  -[AXSSCloudKitHelper processLocalChangesAndPush]
  -[AXSSCloudKitHelper cloudKitPushTopic]
  -[AXSSCloudKitHelper shouldExportManagedObject:]
  -[AXSSCloudKitHelper _setObservedStore:observedCoordinator:]
  -[AXSSCloudKitHelper _setDatabase:]
  -[AXSSCloudKitHelper _setApsConnection:]
  -[AXSSCloudKitHelper cloudkitQueue]
  -[AXSSCloudKitHelper cloudKitQueueSemaphore]
  -[AXSSCloudKitHelper lastInitializationError]
  -[AXSSCloudKitHelper largeBlobDirectoryURL]
  -[AXSSCloudKitHelper observeLocalDatabaseChanges]


AXSSPunctuationGroupCloudKitHelper : AXSSCloudKitHelper
  // instance methods
  -[AXSSPunctuationGroupCloudKitHelper recordType]
  -[AXSSPunctuationGroupCloudKitHelper .cxx_destruct]
  -[AXSSPunctuationGroupCloudKitHelper createCKRecordFromGroup:]
  -[AXSSPunctuationGroupCloudKitHelper beginWatchingForChanges]
  -[AXSSPunctuationGroupCloudKitHelper createCKRecordFromObject:]
  -[AXSSPunctuationGroupCloudKitHelper apsEnvironment]
  -[AXSSPunctuationGroupCloudKitHelper punctuationGroupsChanged:]
  -[AXSSPunctuationGroupCloudKitHelper testRecordForSchemaCreation:]
  -[AXSSPunctuationGroupCloudKitHelper dealloc]
  -[AXSSPunctuationGroupCloudKitHelper managedObjectClass]
  -[AXSSPunctuationGroupCloudKitHelper retrieveLocalChangesForCloud:]
  -[AXSSPunctuationGroupCloudKitHelper processServerUpdateChanges:moc:recordNameToManagedObject:]
  -[AXSSPunctuationGroupCloudKitHelper clearRecordsForPurging:]


AXSSMotionTrackingState : NSObject <NSCopying, NSSecureCoding>
 @property  NSError *error
 @property  {CGPoint=dd} lookAtPoint
 @property  NSSet *expressions
 @property  NSString *debugString
 @property  BOOL hasFace

  // class methods
  +[AXSSMotionTrackingState supportsSecureCoding]

  // instance methods
  -[AXSSMotionTrackingState initWithCoder:]
  -[AXSSMotionTrackingState .cxx_destruct]
  -[AXSSMotionTrackingState init]
  -[AXSSMotionTrackingState hasFace]
  -[AXSSMotionTrackingState isEqual:]
  -[AXSSMotionTrackingState expressions]
  -[AXSSMotionTrackingState copyWithZone:]
  -[AXSSMotionTrackingState setError:]
  -[AXSSMotionTrackingState encodeWithCoder:]
  -[AXSSMotionTrackingState error]
  -[AXSSMotionTrackingState setExpressions:]
  -[AXSSMotionTrackingState debugString]
  -[AXSSMotionTrackingState setLookAtPoint:]
  -[AXSSMotionTrackingState lookAtPoint]


AXSSPunctuationGroup : NSObject
 @property  NSUUID *uuid
 @property  NSString *name
 @property  NSArray *entries
 @property  NSSet *autoSwitchContexts
 @property  NSUUID *basePunctuationUUID
 @property  unsigned short version
 @property  BOOL inCloud
 @property  NSString *ckChangeTag
 @property  NSDate *lastModifiedDate
 @property  NSDate *ckRecordProcessDate
 @property  BOOL inDatabase
 @property  BOOL isSystemPunctuationGroup
 @property  NSData *jsonRepresentation
 @property  NSDictionary *jsonDictionary

  // class methods
  +[AXSSPunctuationGroup punctuationGroupFromJSONRepresentation:]

  // instance methods
  -[AXSSPunctuationGroup name]
  -[AXSSPunctuationGroup setEntries:]
  -[AXSSPunctuationGroup setLastModifiedDate:]
  -[AXSSPunctuationGroup autoSwitchContexts]
  -[AXSSPunctuationGroup setCkChangeTag:]
  -[AXSSPunctuationGroup .cxx_destruct]
  -[AXSSPunctuationGroup setName:]
  -[AXSSPunctuationGroup isSystemPunctuationGroup]
  -[AXSSPunctuationGroup init]
  -[AXSSPunctuationGroup jsonRepresentation]
  -[AXSSPunctuationGroup jsonDictionary]
  -[AXSSPunctuationGroup setVersion:]
  -[AXSSPunctuationGroup isEqual:]
  -[AXSSPunctuationGroup ckChangeTag]
  -[AXSSPunctuationGroup entries]
  -[AXSSPunctuationGroup setCkRecordProcessDate:]
  -[AXSSPunctuationGroup setInDatabase:]
  -[AXSSPunctuationGroup inCloud]
  -[AXSSPunctuationGroup setBasePunctuationUUID:]
  -[AXSSPunctuationGroup uuid]
  -[AXSSPunctuationGroup ckRecordProcessDate]
  -[AXSSPunctuationGroup version]
  -[AXSSPunctuationGroup inDatabase]
  -[AXSSPunctuationGroup basePunctuationUUID]
  -[AXSSPunctuationGroup setInCloud:]
  -[AXSSPunctuationGroup setAutoSwitchContexts:]
  -[AXSSPunctuationGroup setUuid:]
  -[AXSSPunctuationGroup lastModifiedDate]


AXSSKeyboardCommandMap : NSObject <NSCopying, NSSecureCoding>
 @property  NSDictionary *keyChordsToCommands
 @property  NSDictionary *commandsToArraysOfKeyChords
 @property  NSDictionary *userDefinedCommandsToKeyChords
 @property  NSMutableDictionary *transientCommands
 @property  NSSet *availableCommands

  // class methods
  +[AXSSKeyboardCommandMap supportsSecureCoding]

  // instance methods
  -[AXSSKeyboardCommandMap initWithCoder:]
  -[AXSSKeyboardCommandMap .cxx_destruct]
  -[AXSSKeyboardCommandMap init]
  -[AXSSKeyboardCommandMap isEqual:]
  -[AXSSKeyboardCommandMap setAvailableCommands:]
  -[AXSSKeyboardCommandMap copyWithZone:]
  -[AXSSKeyboardCommandMap encodeWithCoder:]
  -[AXSSKeyboardCommandMap _initWithCommandsToKeyChordsDictionary:]
  -[AXSSKeyboardCommandMap _validateCommandsToKeyChords:]
  -[AXSSKeyboardCommandMap userDefinedCommandsToKeyChords]
  -[AXSSKeyboardCommandMap availableCommands]
  -[AXSSKeyboardCommandMap transientCommands]
  -[AXSSKeyboardCommandMap isEqualToCommandMap:]
  -[AXSSKeyboardCommandMap _isAvailableCommand:]
  -[AXSSKeyboardCommandMap _initializeDictionariesIfNeeded]
  -[AXSSKeyboardCommandMap keyChordsToCommands]
  -[AXSSKeyboardCommandMap commandsToArraysOfKeyChords]
  -[AXSSKeyboardCommandMap commandForKeyChord:]
  -[AXSSKeyboardCommandMap keyChordForCommand:]
  -[AXSSKeyboardCommandMap commandMapWithKeyChord:forCommand:]
  -[AXSSKeyboardCommandMap addCommandsForTransientKeyChords:]
  -[AXSSKeyboardCommandMap removeTransientKeyChordsForIdentifier:]


AXSSMotionTracker : NSObject <AXSSMotionTrackingDaemonDelegateProtocol>
 @property  <AXSSMotionTrackingDaemonProtocol> *_motionTrackingDaemon
 @property  NSXPCConnection *_motionTrackingDaemonConnection
 @property  BOOL _tracking
 @property  BOOL _hasBeenStarted
 @property  AXSSRateLimitingLogger *_loggingRateLimiter
 @property  BOOL debugOverlayEnabled
 @property  AXSSMotionTrackingState *state
 @property  BOOL tracking
 @property  <AXSSMotionTrackerDelegate> *delegate
 @property  unsigned long motionTrackingMode
 @property  double sensitivity
 @property  NSValue *lookAtPoint
 @property  AXSSMotionTrackingInputConfiguration *inputConfiguration
 @property  AXSSMotionTrackingExpressionConfiguration *expressionConfiguration
 @property  double joystickModeMovementThreshold

  // class methods
  +[AXSSMotionTracker supportedExpressions]
  +[AXSSMotionTracker supportedExpressionSensitivitiesAscending]

  // instance methods
  -[AXSSMotionTracker _tracking]
  -[AXSSMotionTracker .cxx_destruct]
  -[AXSSMotionTracker stop]
  -[AXSSMotionTracker setDelegate:]
  -[AXSSMotionTracker setState:]
  -[AXSSMotionTracker init]
  -[AXSSMotionTracker isTracking]
  -[AXSSMotionTracker state]
  -[AXSSMotionTracker sensitivity]
  -[AXSSMotionTracker delegate]
  -[AXSSMotionTracker start]
  -[AXSSMotionTracker dealloc]
  -[AXSSMotionTracker invalidate]
  -[AXSSMotionTracker _updateState:]
  -[AXSSMotionTracker setSensitivity:]
  -[AXSSMotionTracker setLookAtPoint:]
  -[AXSSMotionTracker lookAtPoint]
  -[AXSSMotionTracker _motionTrackingDaemonConnection]
  -[AXSSMotionTracker _hasBeenStarted]
  -[AXSSMotionTracker setMotionTrackingMode:]
  -[AXSSMotionTracker setInputConfiguration:]
  -[AXSSMotionTracker setExpressionConfiguration:]
  -[AXSSMotionTracker setJoystickModeMovementThreshold:]
  -[AXSSMotionTracker recalibrateFace]
  -[AXSSMotionTracker motionTrackingDaemonUpdatedState:]
  -[AXSSMotionTracker _motionTrackingDaemonWasInterruptedFromXPC]
  -[AXSSMotionTracker set_motionTrackingDaemonConnection:]
  -[AXSSMotionTracker _changeState:]
  -[AXSSMotionTracker _motionTrackingDaemon]
  -[AXSSMotionTracker motionTrackingMode]
  -[AXSSMotionTracker joystickModeMovementThreshold]
  -[AXSSMotionTracker inputConfiguration]
  -[AXSSMotionTracker expressionConfiguration]
  -[AXSSMotionTracker set_tracking:]
  -[AXSSMotionTracker debugOverlayEnabled]
  -[AXSSMotionTracker _loggingRateLimiter]
  -[AXSSMotionTracker setDebugOverlayEnabled:]
  -[AXSSMotionTracker set_hasBeenStarted:]
  -[AXSSMotionTracker set_loggingRateLimiter:]


AXSSMotionTrackingInputManager : NSObject <AXSSMotionTrackingCameraManagerDelegate, AXSSMotionTrackingVideoFileInputManagerDelegate, AXSSMotionTrackingHIDManagerDelegate>
 @property  BOOL _monitoring
 @property  AXSSMotionTrackingCameraManager *_cameraManager
 @property  NSMutableArray *_compatibleCameraInputs
 @property  NSMutableArray *_allCameraInputs
 @property  AXSSMotionTrackingHIDManager *_hidManager
 @property  NSMutableArray *_hidInputs
 @property  BOOL _supportsHIDInputs
 @property  AXSSMotionTrackingVideoFileInputManager *_videoFileInputManager
 @property  NSMutableArray *_videoFileInputs
 @property  AXSSMotionTrackingInput *inputToUse
 @property  NSMutableArray *_compatibleInputs
 @property  NSMutableArray *_allInputs
 @property  BOOL _supportsCameraInputs
 @property  AXSSMotionTrackingInputConfiguration *configuration
 @property  NSArray *compatibleInputs
 @property  NSArray *allInputs
 @property  <AXSSMotionTrackingInputManagerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AXSSMotionTrackingInputManager startMonitoring]
  -[AXSSMotionTrackingInputManager stopMonitoring]
  -[AXSSMotionTrackingInputManager configuration]
  -[AXSSMotionTrackingInputManager .cxx_destruct]
  -[AXSSMotionTrackingInputManager setDelegate:]
  -[AXSSMotionTrackingInputManager _cameraManager]
  -[AXSSMotionTrackingInputManager _hidManager]
  -[AXSSMotionTrackingInputManager initWithConfiguration:]
  -[AXSSMotionTrackingInputManager delegate]
  -[AXSSMotionTrackingInputManager _monitoring]
  -[AXSSMotionTrackingInputManager setConfiguration:]
  -[AXSSMotionTrackingInputManager set_monitoring:]
  -[AXSSMotionTrackingInputManager motionTrackingVideoFileInputManager:updatedVideoFileInputNames:]
  -[AXSSMotionTrackingInputManager _updateMonitoring]
  -[AXSSMotionTrackingInputManager _inputUpdated]
  -[AXSSMotionTrackingInputManager _videoFileInputManager]
  -[AXSSMotionTrackingInputManager _supportsCameraInputs]
  -[AXSSMotionTrackingInputManager _allCameraInputs]
  -[AXSSMotionTrackingInputManager _compatibleCameraInputs]
  -[AXSSMotionTrackingInputManager _videoFileInputs]
  -[AXSSMotionTrackingInputManager _supportsHIDInputs]
  -[AXSSMotionTrackingInputManager _hidInputs]
  -[AXSSMotionTrackingInputManager _compatibleInputs]
  -[AXSSMotionTrackingInputManager _allInputs]
  -[AXSSMotionTrackingInputManager _supportsMotionTrackingType:]
  -[AXSSMotionTrackingInputManager compatibleInputs]
  -[AXSSMotionTrackingInputManager allInputs]
  -[AXSSMotionTrackingInputManager setInputToUse:]
  -[AXSSMotionTrackingInputManager _compatibleCameraInputMatchingCaptureDeviceUniqueID:]
  -[AXSSMotionTrackingInputManager inputToUse]
  -[AXSSMotionTrackingInputManager motionTrackingCameraManager:updatedCompatibleCaptureDevices:]
  -[AXSSMotionTrackingInputManager motionTrackingHIDManager:updatedDevices:]
  -[AXSSMotionTrackingInputManager set_cameraManager:]
  -[AXSSMotionTrackingInputManager set_compatibleCameraInputs:]
  -[AXSSMotionTrackingInputManager set_allCameraInputs:]
  -[AXSSMotionTrackingInputManager set_hidManager:]
  -[AXSSMotionTrackingInputManager set_hidInputs:]
  -[AXSSMotionTrackingInputManager set_videoFileInputManager:]
  -[AXSSMotionTrackingInputManager set_videoFileInputs:]
  -[AXSSMotionTrackingInputManager set_compatibleInputs:]
  -[AXSSMotionTrackingInputManager set_allInputs:]


AXSSMotionTrackingUtilities : NSObject
  // class methods
  +[AXSSMotionTrackingUtilities axss_HIDDeviceIsMFiAuthenticated:]
  +[AXSSMotionTrackingUtilities _axss_iAPInterfaceExistsForHIDDeviceService:]
  +[AXSSMotionTrackingUtilities axss_xPositionElementMatchingDict]
  +[AXSSMotionTrackingUtilities axss_yPositionElementMatchingDict]
  +[AXSSMotionTrackingUtilities axss_statusElementMatchingDict]
  +[AXSSMotionTrackingUtilities axss_frequencyElementMatchingDict]


AXSSLanguageTag : NSObject
 @property  {_NSRange=QQ} taggedRange
 @property  NSString *taggedString
 @property  long long offsetToInitialLocation
 @property  NSString *content
 @property  AXSSDialectMap *dialect
 @property  BOOL createdFromNewline
 @property  NSMutableOrderedSet *predictedSecondaryDialects

  // instance methods
  -[AXSSLanguageTag content]
  -[AXSSLanguageTag .cxx_destruct]
  -[AXSSLanguageTag createdFromNewline]
  -[AXSSLanguageTag dialect]
  -[AXSSLanguageTag predictedSecondaryDialects]
  -[AXSSLanguageTag setPredictedSecondaryDialects:]
  -[AXSSLanguageTag addPredictedSecondaryDialects:]
  -[AXSSLanguageTag taggedRange]
  -[AXSSLanguageTag taggedString]
  -[AXSSLanguageTag initWithDialect:range:content:createdFromNewline:]
  -[AXSSLanguageTag offsetToInitialLocation]
  -[AXSSLanguageTag setOffsetToInitialLocation:]


AXSSPunctuationEntry : NSObject <NSCopying>
 @property  NSString *punctuation
 @property  NSString *replacement
 @property  long long rule
 @property  NSUUID *uuid
 @property  NSUUID *groupUUID
 @property  unsigned short version
 @property  BOOL inCloud
 @property  NSString *ckChangeTag
 @property  NSDate *lastModifiedDate
 @property  NSDate *ckRecordProcessDate
 @property  NSData *jsonRepresentation
 @property  NSDictionary *jsonDictionary

  // class methods
  +[AXSSPunctuationEntry punctuationEntryFromJSONDictionary:]
  +[AXSSPunctuationEntry punctuationEntryFromJSONRepresentation:]

  // instance methods
  -[AXSSPunctuationEntry setRule:]
  -[AXSSPunctuationEntry setLastModifiedDate:]
  -[AXSSPunctuationEntry setCkChangeTag:]
  -[AXSSPunctuationEntry setGroupUUID:]
  -[AXSSPunctuationEntry .cxx_destruct]
  -[AXSSPunctuationEntry init]
  -[AXSSPunctuationEntry jsonRepresentation]
  -[AXSSPunctuationEntry jsonDictionary]
  -[AXSSPunctuationEntry setVersion:]
  -[AXSSPunctuationEntry isEqual:]
  -[AXSSPunctuationEntry ckChangeTag]
  -[AXSSPunctuationEntry replacement]
  -[AXSSPunctuationEntry setCkRecordProcessDate:]
  -[AXSSPunctuationEntry inCloud]
  -[AXSSPunctuationEntry rule]
  -[AXSSPunctuationEntry uuid]
  -[AXSSPunctuationEntry ckRecordProcessDate]
  -[AXSSPunctuationEntry version]
  -[AXSSPunctuationEntry copyWithZone:]
  -[AXSSPunctuationEntry setInCloud:]
  -[AXSSPunctuationEntry groupUUID]
  -[AXSSPunctuationEntry setUuid:]
  -[AXSSPunctuationEntry lastModifiedDate]
  -[AXSSPunctuationEntry setReplacement:]
  -[AXSSPunctuationEntry punctuation]
  -[AXSSPunctuationEntry setPunctuation:]


AXSSWordDescriptionManager_zh : AXSSWordDescriptionManager
  // instance methods
  -[AXSSWordDescriptionManager_zh descriptionForCharacter:language:]
  -[AXSSWordDescriptionManager_zh descriptionForWord:]
  -[AXSSWordDescriptionManager_zh componentDescriptionForCharacter:]


AXSSLanguageTagger : NSObject
  // class methods
  +[AXSSLanguageTagger _allLangIDs]
  +[AXSSLanguageTagger langIDforLangCode:]
  +[AXSSLanguageTagger langCodeForlangId:]
  +[AXSSLanguageTagger _overrideLanguageDetection:]
  +[AXSSLanguageTagger languageTagsForContent:]
  +[AXSSLanguageTagger primaryLanguageForContent:]
  +[AXSSLanguageTagger _scriptTaggerForContent:]
  +[AXSSLanguageTagger _isNewline:]
  +[AXSSLanguageTagger _manuallyProcessContent:tokenRange:currentRange:]
  +[AXSSLanguageTagger _tagRange:document:tags:createdFromNewline:]
  +[AXSSLanguageTagger _createLanguageHintsForContent:]
  +[AXSSLanguageTagger _hypothesesForContent:withHints:guesses:]
  +[AXSSLanguageTagger _taggerForContent:tagScheme:]
  +[AXSSLanguageTagger _createTagForContent:tokenRange:document:createdFromNewline:]
  +[AXSSLanguageTagger _languageTagForDateIfNecessary:]
  +[AXSSLanguageTagger _dialectWithHighestProbability:]
  +[AXSSLanguageTagger _secondaryDialects:]
  +[AXSSLanguageTagger _systemLanguageProbabilityForContent:]
  +[AXSSLanguageTagger _createLanguageHintsEvenlyDistributedWithProbability:excludingHints:]
  +[AXSSLanguageTagger _tokenTaggerForContent:]
  +[AXSSLanguageTagger _extendRange:forContent:withRange:]
  +[AXSSLanguageTagger markupLanguageTagForAttributedString:]
  +[AXSSLanguageTagger _languageTaggerForContent:]


AXSSKeyboardCommandInfo : NSObject
 @property  BOOL handlesBothDownAndUp
 @property  @? handler
 @property  @? downHandler
 @property  @? upHandler

  // class methods
  +[AXSSKeyboardCommandInfo infoWithHandler:]
  +[AXSSKeyboardCommandInfo infoWithDownHandler:upHandler:]

  // instance methods
  -[AXSSKeyboardCommandInfo .cxx_destruct]
  -[AXSSKeyboardCommandInfo handler]
  -[AXSSKeyboardCommandInfo _initWithHandler:downHandler:upHandler:handlesBothDownAndUp:]
  -[AXSSKeyboardCommandInfo handlesBothDownAndUp]
  -[AXSSKeyboardCommandInfo downHandler]
  -[AXSSKeyboardCommandInfo upHandler]


AXSSRateLimitingLogger : NSObject
 @property  NSDate *_dateSinceLastLog
 @property  NSObject<OS_os_log> *categoryLog
 @property  double timeInterval
 @property  unsigned char logLevel

  // instance methods
  -[AXSSRateLimitingLogger timeInterval]
  -[AXSSRateLimitingLogger logLevel]
  -[AXSSRateLimitingLogger .cxx_destruct]
  -[AXSSRateLimitingLogger logString:]
  -[AXSSRateLimitingLogger initWithLogLevel:categoryLog:timeInterval:]
  -[AXSSRateLimitingLogger _dateSinceLastLog]
  -[AXSSRateLimitingLogger set_dateSinceLastLog:]
  -[AXSSRateLimitingLogger _logStringAtProperLevel:]
  -[AXSSRateLimitingLogger categoryLog]
  -[AXSSRateLimitingLogger setCategoryLog:]


AXSSMotionTrackingCameraManager : NSObject
 @property  BOOL _monitoring
 @property  NSMutableArray *_compatibleCaptureDevices
 @property  NSMutableArray *_allCaptureDevices
 @property  AVCaptureDeviceDiscoverySession *_captureDeviceDiscoverySession
 @property  NSArray *compatibleCaptureDevices
 @property  NSArray *allCaptureDevices
 @property  AVCaptureDevice *defaultCaptureDevice
 @property  <AXSSMotionTrackingCameraManagerDelegate> *delegate

  // class methods
  +[AXSSMotionTrackingCameraManager _sortedCaptureDevicesFromDevices:]

  // instance methods
  -[AXSSMotionTrackingCameraManager startMonitoring]
  -[AXSSMotionTrackingCameraManager stopMonitoring]
  -[AXSSMotionTrackingCameraManager .cxx_destruct]
  -[AXSSMotionTrackingCameraManager setDelegate:]
  -[AXSSMotionTrackingCameraManager init]
  -[AXSSMotionTrackingCameraManager delegate]
  -[AXSSMotionTrackingCameraManager dealloc]
  -[AXSSMotionTrackingCameraManager _monitoring]
  -[AXSSMotionTrackingCameraManager observeValueForKeyPath:ofObject:change:context:]
  -[AXSSMotionTrackingCameraManager set_monitoring:]
  -[AXSSMotionTrackingCameraManager allCaptureDevices]
  -[AXSSMotionTrackingCameraManager compatibleCaptureDevices]
  -[AXSSMotionTrackingCameraManager defaultCaptureDevice]
  -[AXSSMotionTrackingCameraManager _captureDeviceDiscoverySession]
  -[AXSSMotionTrackingCameraManager _captureDeviceConnected:]
  -[AXSSMotionTrackingCameraManager _captureDeviceDisconnected:]
  -[AXSSMotionTrackingCameraManager _startDiscoverySession]
  -[AXSSMotionTrackingCameraManager _captureDeviceUpdated]
  -[AXSSMotionTrackingCameraManager _stopDiscoverySession]
  -[AXSSMotionTrackingCameraManager _compatibleCaptureDevices]
  -[AXSSMotionTrackingCameraManager _allCaptureDevices]
  -[AXSSMotionTrackingCameraManager _allCaptureDevicesChanged:]
  -[AXSSMotionTrackingCameraManager set_captureDeviceDiscoverySession:]
  -[AXSSMotionTrackingCameraManager _resetDiscoverySession]
  -[AXSSMotionTrackingCameraManager set_compatibleCaptureDevices:]
  -[AXSSMotionTrackingCameraManager set_allCaptureDevices:]


AXSSWordDescriptionManager : NSObject
 @property  NSManagedObjectContext *managedObjectContext
 @property  NSPersistentStoreCoordinator *persistentStoreCoordinator
 @property  NSManagedObjectModel *managedObjectModel
 @property  NSString *languageDialectCode

  // class methods
  +[AXSSWordDescriptionManager sharedInstance]

  // instance methods
  -[AXSSWordDescriptionManager managedObjectModel]
  -[AXSSWordDescriptionManager managedObjectContext]
  -[AXSSWordDescriptionManager persistentStoreCoordinator]
  -[AXSSWordDescriptionManager .cxx_destruct]
  -[AXSSWordDescriptionManager languageCode]
  -[AXSSWordDescriptionManager descriptionOfWord:forLanguage:]
  -[AXSSWordDescriptionManager languageDialectCode]
  -[AXSSWordDescriptionManager descriptionForWord:]
  -[AXSSWordDescriptionManager setLanguageDialectCode:]


AXSSPunctuationEntryCloudKitHelper : AXSSCloudKitHelper
  // instance methods
  -[AXSSPunctuationEntryCloudKitHelper recordType]
  -[AXSSPunctuationEntryCloudKitHelper createCKRecordFromEntry:]
  -[AXSSPunctuationEntryCloudKitHelper .cxx_destruct]
  -[AXSSPunctuationEntryCloudKitHelper punctuationGroupChanged:]
  -[AXSSPunctuationEntryCloudKitHelper beginWatchingForChanges]
  -[AXSSPunctuationEntryCloudKitHelper createCKRecordFromObject:]
  -[AXSSPunctuationEntryCloudKitHelper apsEnvironment]
  -[AXSSPunctuationEntryCloudKitHelper testRecordForSchemaCreation:]
  -[AXSSPunctuationEntryCloudKitHelper dealloc]
  -[AXSSPunctuationEntryCloudKitHelper managedObjectClass]
  -[AXSSPunctuationEntryCloudKitHelper retrieveLocalChangesForCloud:]
  -[AXSSPunctuationEntryCloudKitHelper processServerUpdateChanges:moc:recordNameToManagedObject:]
  -[AXSSPunctuationEntryCloudKitHelper _processPunctuationEntryFromCKRecord:]
  -[AXSSPunctuationEntryCloudKitHelper clearRecordsForPurging:]


AXSSEventManager : NSObject
 @property  NSDictionary *_commandInfos
 @property  BOOL _tabKeyPressed
 @property  BOOL _performedActionWhileTabComboPressed
 @property  double _lastTabPressTime
 @property  AXSSKeyboardCommandInfo *_lastDownAndUpCommandInfo
 @property  double minimumDelayUntilRepeat
 @property  AXSSActionManager *actionManager
 @property  unsigned long searchType
 @property  AXSSKeyboardCommandMap *commandMap
 @property  <AXSSKeyFilterDelegate> *filterDelegate
 @property  BOOL shouldSuppressCommands
 @property  BOOL passthroughModeEnabled

  // instance methods
  -[AXSSEventManager setSearchType:]
  -[AXSSEventManager searchType]
  -[AXSSEventManager _tabKeyPressed]
  -[AXSSEventManager .cxx_destruct]
  -[AXSSEventManager initWithActionManager:]
  -[AXSSEventManager setActionManager:]
  -[AXSSEventManager actionManager]
  -[AXSSEventManager setCommandMap:]
  -[AXSSEventManager filterDelegate]
  -[AXSSEventManager commandMap]
  -[AXSSEventManager processKeyboardEvent:]
  -[AXSSEventManager initWithActionManager:commandMap:]
  -[AXSSEventManager shouldCaptureEvent:]
  -[AXSSEventManager handleFKAEvent:]
  -[AXSSEventManager _handleCommand:event:]
  -[AXSSEventManager shouldSuppressCommands]
  -[AXSSEventManager set_lastDownAndUpCommandInfo:]
  -[AXSSEventManager _lastDownAndUpCommandInfo]
  -[AXSSEventManager isPassthroughModeEnabled]
  -[AXSSEventManager _handleTabEvent:]
  -[AXSSEventManager _handleTabComboEvent:]
  -[AXSSEventManager _handleEvent:forCaptureOnly:]
  -[AXSSEventManager _commandInfos]
  -[AXSSEventManager set_lastTabPressTime:]
  -[AXSSEventManager set_tabKeyPressed:]
  -[AXSSEventManager _performedActionWhileTabComboPressed]
  -[AXSSEventManager _lastTabPressTime]
  -[AXSSEventManager minimumDelayUntilRepeat]
  -[AXSSEventManager _handleTabRepeatOrUpWithCommand:]
  -[AXSSEventManager set_performedActionWhileTabComboPressed:]
  -[AXSSEventManager _tabbedKeyChordForKeyChord:]
  -[AXSSEventManager _performDownActionForCommand:info:]
  -[AXSSEventManager processKeyboardCommand:]
  -[AXSSEventManager setFilterDelegate:]
  -[AXSSEventManager setShouldSuppressCommands:]
  -[AXSSEventManager setPassthroughModeEnabled:]
  -[AXSSEventManager setMinimumDelayUntilRepeat:]


AXSSWordDescriptionManager_ja : AXSSWordDescriptionManager
  // instance methods
  -[AXSSWordDescriptionManager_ja descriptionForWord:]
  -[AXSSWordDescriptionManager_ja _convertString:ifNeededForHiragana:]


AXSSMotionTrackingHIDManager : NSObject
 @property  BOOL _monitoring
 @property  NSObject<OS_dispatch_queue> *_hidManagerDispatchQueue
 @property  HIDManager *_hidManager
 @property  NSMutableArray *_devices
 @property  NSArray *devices
 @property  <AXSSMotionTrackingHIDManagerDelegate> *delegate

  // instance methods
  -[AXSSMotionTrackingHIDManager startMonitoring]
  -[AXSSMotionTrackingHIDManager _devices]
  -[AXSSMotionTrackingHIDManager stopMonitoring]
  -[AXSSMotionTrackingHIDManager devices]
  -[AXSSMotionTrackingHIDManager .cxx_destruct]
  -[AXSSMotionTrackingHIDManager setDelegate:]
  -[AXSSMotionTrackingHIDManager init]
  -[AXSSMotionTrackingHIDManager _hidManager]
  -[AXSSMotionTrackingHIDManager delegate]
  -[AXSSMotionTrackingHIDManager dealloc]
  -[AXSSMotionTrackingHIDManager _monitoring]
  -[AXSSMotionTrackingHIDManager set_monitoring:]
  -[AXSSMotionTrackingHIDManager set_hidManager:]
  -[AXSSMotionTrackingHIDManager _hidManagerDispatchQueue]
  -[AXSSMotionTrackingHIDManager _deviceNotification:added:]
  -[AXSSMotionTrackingHIDManager set_hidManagerDispatchQueue:]
  -[AXSSMotionTrackingHIDManager set_devices:]


AXSSActionManager : NSObject
  // instance methods
  -[AXSSActionManager toggleAppLibrary]
  -[AXSSActionManager moveUp]
  -[AXSSActionManager isInteractive]
  -[AXSSActionManager press]
  -[AXSSActionManager toggleDock]
  -[AXSSActionManager endSwipe]
  -[AXSSActionManager moveLeft]
  -[AXSSActionManager moveDown]
  -[AXSSActionManager performDefaultAction]
  -[AXSSActionManager moveRight]
  -[AXSSActionManager toggleNotificationCenter]
  -[AXSSActionManager lockScreen]
  -[AXSSActionManager armApplePay]
  -[AXSSActionManager rebootDevice]
  -[AXSSActionManager goHome]
  -[AXSSActionManager toggleQuickNote]
  -[AXSSActionManager lift]
  -[AXSSActionManager handleCommand:]
  -[AXSSActionManager willPerformStandardCommandWithIdentifier:]
  -[AXSSActionManager goToNextElementOfType:]
  -[AXSSActionManager didPerformStandardCommandWithIdentifier:]
  -[AXSSActionManager goToPreviousElementOfType:]
  -[AXSSActionManager enterContainer]
  -[AXSSActionManager exitContainer]
  -[AXSSActionManager goToNextSection]
  -[AXSSActionManager goToPreviousSection]
  -[AXSSActionManager activateSiri]
  -[AXSSActionManager goToFirstElement]
  -[AXSSActionManager beginSwipeLeft]
  -[AXSSActionManager beginTwoFingerSwipeLeft]
  -[AXSSActionManager beginRotateLeft]
  -[AXSSActionManager endRotate]
  -[AXSSActionManager goToLastElement]
  -[AXSSActionManager beginSwipeRight]
  -[AXSSActionManager beginTwoFingerSwipeRight]
  -[AXSSActionManager beginRotateRight]
  -[AXSSActionManager beginSwipeUp]
  -[AXSSActionManager beginTwoFingerSwipeUp]
  -[AXSSActionManager beginPinchOut]
  -[AXSSActionManager endPinch]
  -[AXSSActionManager moveInsideNext]
  -[AXSSActionManager moveInsidePrevious]
  -[AXSSActionManager beginSwipeDown]
  -[AXSSActionManager beginTwoFingerSwipeDown]
  -[AXSSActionManager beginPinchIn]
  -[AXSSActionManager twoFingerPress]
  -[AXSSActionManager twoFingerLift]
  -[AXSSActionManager openContextualMenu]
  -[AXSSActionManager showAccessibilityActions]
  -[AXSSActionManager toggleAppSwitcher]
  -[AXSSActionManager activateAccessibilityShortcut]
  -[AXSSActionManager toggleControlCenter]
  -[AXSSActionManager performEscape]
  -[AXSSActionManager performSysdiagnose]
  -[AXSSActionManager rotateDevice]
  -[AXSSActionManager toggleMenuBar]
  -[AXSSActionManager activateSOS]
  -[AXSSActionManager activateTypeahead]
  -[AXSSActionManager togglePassthroughMode]
  -[AXSSActionManager toggleGesturesMode]
  -[AXSSActionManager toggleHelp]
  -[AXSSActionManager begin3DTouch]
  -[AXSSActionManager end3DTouch]
  -[AXSSActionManager didSuppressCommand:]
  -[AXSSActionManager endTwoFingerSwipe]


AXSSInterDeviceSearchResult : NSObject
 @property  MCPeerID *peerID
 @property  NSString *deviceType
 @property  NSString *name

  // class methods
  +[AXSSInterDeviceSearchResult searchResultWithPeerID:deviceType:]

  // instance methods
  -[AXSSInterDeviceSearchResult peerID]
  -[AXSSInterDeviceSearchResult setPeerID:]
  -[AXSSInterDeviceSearchResult name]
  -[AXSSInterDeviceSearchResult deviceType]
  -[AXSSInterDeviceSearchResult .cxx_destruct]
  -[AXSSInterDeviceSearchResult isEqual:]
  -[AXSSInterDeviceSearchResult setDeviceType:]
  -[AXSSInterDeviceSearchResult initWithPeerID:deviceType:]


AXSSInterDeviceCommunicator : NSObject <IDSServiceDelegate, MCSessionDelegate, MCNearbyServiceBrowserDelegate, MCNearbyServiceAdvertiserDelegate>
 @property  IDSService *service
 @property  long long state
 @property  MCPeerID *localPeerID
 @property  MCSession *session
 @property  MCNearbyServiceBrowser *browser
 @property  MCNearbyServiceAdvertiser *advertiser
 @property  NSMutableArray *availableDevices
 @property  NSMutableDictionary *deviceTypesByPeerID
 @property  MCPeerID *receiver
 @property  MCPeerID *forwarder
 @property  unsigned long switchEventIndex
 @property  NSTimer *dummyPacketTimer
 @property  unsigned long numberOfBurstPacketsRemaining
 @property  AXSSInterDeviceSecurityHelper *securityHelper
 @property  <AXSSInterDeviceConnectionListener> *connectionListener
 @property  <AXSSInterDeviceActionReceiver> *actionReceiver
 @property  <AXSSInterDeviceSearchObserver> *searchObserver
 @property  BOOL isReceivingSwitchEvents
 @property  BOOL isForwardingSwitchEvents
 @property  BOOL isSearching
 @property  BOOL isIdle
 @property  BOOL canSearch
 @property  NSArray *searchResults
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AXSSInterDeviceCommunicator service:account:incomingMessage:fromID:context:]
  -[AXSSInterDeviceCommunicator search]
  -[AXSSInterDeviceCommunicator setReceiver:]
  -[AXSSInterDeviceCommunicator service:account:identifier:didSendWithSuccess:error:]
  -[AXSSInterDeviceCommunicator setBrowser:]
  -[AXSSInterDeviceCommunicator advertiser]
  -[AXSSInterDeviceCommunicator service:devicesChanged:]
  -[AXSSInterDeviceCommunicator isIdle]
  -[AXSSInterDeviceCommunicator connectionListener]
  -[AXSSInterDeviceCommunicator setAdvertiser:]
  -[AXSSInterDeviceCommunicator advertiser:didReceiveInvitationFromPeer:withContext:invitationHandler:]
  -[AXSSInterDeviceCommunicator .cxx_destruct]
  -[AXSSInterDeviceCommunicator browser]
  -[AXSSInterDeviceCommunicator stop]
  -[AXSSInterDeviceCommunicator session:didReceiveData:fromPeer:]
  -[AXSSInterDeviceCommunicator setState:]
  -[AXSSInterDeviceCommunicator setSession:]
  -[AXSSInterDeviceCommunicator session:didFinishReceivingResourceWithName:fromPeer:atURL:withError:]
  -[AXSSInterDeviceCommunicator init]
  -[AXSSInterDeviceCommunicator session:peer:didChangeState:]
  -[AXSSInterDeviceCommunicator isSearching]
  -[AXSSInterDeviceCommunicator _tearDownSession]
  -[AXSSInterDeviceCommunicator session:didStartReceivingResourceWithName:fromPeer:withProgress:]
  -[AXSSInterDeviceCommunicator state]
  -[AXSSInterDeviceCommunicator service]
  -[AXSSInterDeviceCommunicator availableDevices]
  -[AXSSInterDeviceCommunicator _stateDescription]
  -[AXSSInterDeviceCommunicator searchResults]
  -[AXSSInterDeviceCommunicator dealloc]
  -[AXSSInterDeviceCommunicator setConnectionListener:]
  -[AXSSInterDeviceCommunicator receiver]
  -[AXSSInterDeviceCommunicator session]
  -[AXSSInterDeviceCommunicator session:didReceiveStream:withName:fromPeer:]
  -[AXSSInterDeviceCommunicator browser:didNotStartBrowsingForPeers:]
  -[AXSSInterDeviceCommunicator browser:foundPeer:withDiscoveryInfo:]
  -[AXSSInterDeviceCommunicator browser:lostPeer:]
  -[AXSSInterDeviceCommunicator session:didReceiveCertificate:fromPeer:certificateHandler:]
  -[AXSSInterDeviceCommunicator advertiser:didNotStartAdvertisingPeer:]
  -[AXSSInterDeviceCommunicator _tearDownConnectivity]
  -[AXSSInterDeviceCommunicator _stringForState:]
  -[AXSSInterDeviceCommunicator setSwitchEventIndex:]
  -[AXSSInterDeviceCommunicator dummyPacketTimer]
  -[AXSSInterDeviceCommunicator setNumberOfBurstPacketsRemaining:]
  -[AXSSInterDeviceCommunicator _sendDummyPacket]
  -[AXSSInterDeviceCommunicator setDummyPacketTimer:]
  -[AXSSInterDeviceCommunicator _tearDownBrowser]
  -[AXSSInterDeviceCommunicator _tearDownAdvertiser]
  -[AXSSInterDeviceCommunicator setForwarder:]
  -[AXSSInterDeviceCommunicator securityHelper]
  -[AXSSInterDeviceCommunicator localPeerID]
  -[AXSSInterDeviceCommunicator _broadcastICloudMessage:]
  -[AXSSInterDeviceCommunicator _cancelAdvertising]
  -[AXSSInterDeviceCommunicator _messageForSelection:settings:]
  -[AXSSInterDeviceCommunicator switchEventIndex]
  -[AXSSInterDeviceCommunicator _messageForSwitchEvent:index:]
  -[AXSSInterDeviceCommunicator _sendDataToReceiver:]
  -[AXSSInterDeviceCommunicator numberOfBurstPacketsRemaining]
  -[AXSSInterDeviceCommunicator _advertise]
  -[AXSSInterDeviceCommunicator actionReceiver]
  -[AXSSInterDeviceCommunicator forwarder]
  -[AXSSInterDeviceCommunicator searchObserver]
  -[AXSSInterDeviceCommunicator _handleSwitchEventMessageWithPayload:fromPeer:]
  -[AXSSInterDeviceCommunicator _handleSelectionMessageWithPayload:]
  -[AXSSInterDeviceCommunicator _handleHighlightMessage]
  -[AXSSInterDeviceCommunicator _handlePerformSysdiagnoseMessage]
  -[AXSSInterDeviceCommunicator deviceTypesByPeerID]
  -[AXSSInterDeviceCommunicator _removePeerFromAvailableDevices:]
  -[AXSSInterDeviceCommunicator _handleTimeoutAsPotentialReceiver]
  -[AXSSInterDeviceCommunicator _setUpSessionIfNecessary]
  -[AXSSInterDeviceCommunicator isReceivingSwitchEvents]
  -[AXSSInterDeviceCommunicator isForwardingSwitchEvents]
  -[AXSSInterDeviceCommunicator canSearch]
  -[AXSSInterDeviceCommunicator highlightSearchResult:]
  -[AXSSInterDeviceCommunicator selectSearchResult:settings:]
  -[AXSSInterDeviceCommunicator forwardSwitchEvent:]
  -[AXSSInterDeviceCommunicator performSysdiagnoseOnReceiver]
  -[AXSSInterDeviceCommunicator setActionReceiver:]
  -[AXSSInterDeviceCommunicator setSearchObserver:]
  -[AXSSInterDeviceCommunicator setAvailableDevices:]
  -[AXSSInterDeviceCommunicator setDeviceTypesByPeerID:]
  -[AXSSInterDeviceCommunicator setSecurityHelper:]


AXSSDatabaseManager : NSObject
 @property  BOOL canSave
 @property  NSManagedObjectContext *managedObjectContext

  // class methods
  +[AXSSDatabaseManager sharedDatabase]

  // instance methods
  -[AXSSDatabaseManager managedObjectContext]
  -[AXSSDatabaseManager setManagedObjectContext:]
  -[AXSSDatabaseManager canSave]
  -[AXSSDatabaseManager .cxx_destruct]
  -[AXSSDatabaseManager init]
  -[AXSSDatabaseManager userAuthChanged]
  -[AXSSDatabaseManager dealloc]
  -[AXSSDatabaseManager cloudObjectFromLocalObjects:withTable:andObjectID:]


AXSSKeyboardCommandCategory : NSObject
 @property  NSArray *commands
 @property  NSString *localizedName

  // class methods
  +[AXSSKeyboardCommandCategory allCategoriesForAvailableCommands:]
  +[AXSSKeyboardCommandCategory _basicCommandsFromAvailableCommands:]
  +[AXSSKeyboardCommandCategory _movementCommandsFromAvailableCommands:]
  +[AXSSKeyboardCommandCategory _interactionCommandsFromAvailableCommands:]
  +[AXSSKeyboardCommandCategory _deviceCommandsFromAvailableCommands:]
  +[AXSSKeyboardCommandCategory _gesturesCommandsFromAvailableCommands:]
  +[AXSSKeyboardCommandCategory _categoryWithCommands:availableCommands:localizedName:]
  +[AXSSKeyboardCommandCategory _categoryWithCommandIdentifiers:availableCommands:localizedName:]

  // instance methods
  -[AXSSKeyboardCommandCategory localizedName]
  -[AXSSKeyboardCommandCategory commands]
  -[AXSSKeyboardCommandCategory .cxx_destruct]
  -[AXSSKeyboardCommandCategory initWithCommands:localizedName:]


VOBundle : NSManagedObject
 @property  NSString *bundleID
 @property  NSString *ckRecordID
 @property  NSData *ckRecordSystemFields
 @property  VOSubstitution *iOSSubstitution
 @property  VOSubstitution *macOSSubstitution

  // class methods
  +[VOBundle fetchRequest]


VOLanguage : NSManagedObject
 @property  NSString *ckRecordID
 @property  NSData *ckRecordSystemFields
 @property  NSString *languageID
 @property  VOSubstitution *substitution

  // class methods
  +[VOLanguage fetchRequest]


VOSubstitution : NSManagedObject
 @property  BOOL appliesToAllApps
 @property  NSString *ckRecordID
 @property  NSData *ckRecordSystemFields
 @property  BOOL ignoreCase
 @property  BOOL isActive
 @property  BOOL isUserSubstitution
 @property  NSString *originalString
 @property  NSString *phonemes
 @property  long long replacementLength
 @property  long long replacementLocation
 @property  NSString *replacementString
 @property  short version
 @property  NSSet *iOSBundles
 @property  NSSet *languages
 @property  NSSet *macOSBundles
 @property  NSSet *voices

  // class methods
  +[VOSubstitution fetchRequest]


VOVoice : NSManagedObject
 @property  NSString *ckRecordID
 @property  NSData *ckRecordSystemFields
 @property  NSString *voiceID
 @property  VOSubstitution *substitution

  // class methods
  +[VOVoice fetchRequest]


AXSS_PunctuationCloudDeletionCache : NSManagedObject
 @property  NSString *entityType
 @property  NSUUID *uuid

  // class methods
  +[AXSS_PunctuationCloudDeletionCache fetchRequest]


AXSS_PunctuationContext : NSManagedObject
 @property  NSString *contextIdentifier
 @property  AXSS_PunctuationGroup *group

  // class methods
  +[AXSS_PunctuationContext fetchRequest]


AXSS_PunctuationEntry : NSManagedObject
 @property  NSString *ckChangeTag
 @property  NSDate *ckRecordProcessDate
 @property  NSUUID *groupUUID
 @property  BOOL inCloud
 @property  NSDate *lastModifiedDate
 @property  NSString *punctuation
 @property  NSString *replacement
 @property  NSString *rule
 @property  NSUUID *uuid
 @property  short version

  // class methods
  +[AXSS_PunctuationEntry fetchRequest]


AXSS_PunctuationGroup : NSManagedObject
 @property  NSUUID *basePunctuationUUID
 @property  NSString *ckChangeTag
 @property  NSDate *ckRecordProcessDate
 @property  BOOL inCloud
 @property  NSDate *lastModifiedDate
 @property  NSString *name
 @property  NSUUID *uuid
 @property  short version
 @property  NSSet *autoSwitchContexts

  // class methods
  +[AXSS_PunctuationGroup fetchRequest]


(AXSSKeyChordExtras)
	// class methods
	+[(AXSSKeyChordExtras) _ideographSet]
	+[(AXSSKeyChordExtras) _characterSetWithPattern:]
	+[(AXSSKeyChordExtras) _japaneseLetterSet]

	// instance methods
	-[(AXSSKeyChordExtras) _isOnlyIdeographs]
	-[(AXSSKeyChordExtras) axss_keyChordKeyDisplayValueForUSKeyboard:]
	-[(AXSSKeyChordExtras) axss_stringByTrimmingToLength:encoding:]
	-[(AXSSKeyChordExtras) _isJapanesePhrase]

(ClassChecking)
	// instance methods
	-[(ClassChecking) axssDecodeObjectOfClass:forKey:]
	-[(ClassChecking) axssDecodeBoolForKey:]
	-[(ClassChecking) axssDecodeArrayOfClass:forKey:]

CKRecord(AXCloudKitHelperAdditions)
	// instance methods
	-[CKRecord(AXCloudKitHelperAdditions) setRule:]
	-[CKRecord(AXCloudKitHelperAdditions) name]
	-[CKRecord(AXCloudKitHelperAdditions) setEntries:]
	-[CKRecord(AXCloudKitHelperAdditions) setGroupUUID:]
	-[CKRecord(AXCloudKitHelperAdditions) setName:]
	-[CKRecord(AXCloudKitHelperAdditions) setVersion:]
	-[CKRecord(AXCloudKitHelperAdditions) entries]
	-[CKRecord(AXCloudKitHelperAdditions) replacement]
	-[CKRecord(AXCloudKitHelperAdditions) rule]
	-[CKRecord(AXCloudKitHelperAdditions) uuid]
	-[CKRecord(AXCloudKitHelperAdditions) version]
	-[CKRecord(AXCloudKitHelperAdditions) groupUUID]
	-[CKRecord(AXCloudKitHelperAdditions) setUuid:]
	-[CKRecord(AXCloudKitHelperAdditions) setReplacement:]
	-[CKRecord(AXCloudKitHelperAdditions) punctuation]
	-[CKRecord(AXCloudKitHelperAdditions) setPunctuation:]
	-[CKRecord(AXCloudKitHelperAdditions) setBasePunctuationGroup:]
	-[CKRecord(AXCloudKitHelperAdditions) basePunctuationGroup]

(AXSSDatabaseManager)
	// instance methods
	-[(AXSSDatabaseManager) ax_makeObjectsRespondToSelector:]

01 00 0c00 /System/Library/PrivateFrameworks/ApplePushService.framework/ApplePushService: APSConnection 
01 00 0b00 /System/Library/PrivateFrameworks/AXCoreUtilities.framework/AXCoreUtilities: AXDispatchTimer 
01 00 0d00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKContainer 
01 00 0d00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchRecordZoneChangesConfiguration 
01 00 0d00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchRecordZoneChangesOperation 
01 00 0d00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKModifyRecordZonesOperation 
01 00 0d00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKModifyRecordsOperation 
01 00 0d00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKModifySubscriptionsOperation 
01 00 0d00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKNotification 
01 00 0d00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKNotificationInfo 
01 00 0d00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecord 
01 00 0d00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecordID 
01 00 0d00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecordZone 
01 00 0d00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecordZoneSubscription 
01 00 0d00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKServerChangeToken 
01 00 1000 /System/Library/PrivateFrameworks/IDS.framework/IDS: IDSService 
01 00 0600 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantFloatNumber 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSDataDetector 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSDistributedNotificationCenter 
01 00 0e00 /System/Library/Frameworks/CoreData.framework/CoreData: NSEntityDescription 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0e00 /System/Library/Frameworks/CoreData.framework/CoreData: NSFetchRequest 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0e00 /System/Library/Frameworks/CoreData.framework/CoreData: NSManagedObject 
01 00 0e00 /System/Library/Frameworks/CoreData.framework/CoreData: NSManagedObjectContext 
01 00 0e00 /System/Library/Frameworks/CoreData.framework/CoreData: NSManagedObjectModel 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableAttributedString 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableCharacterSet 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1200 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOrderedSet 
01 00 0e00 /System/Library/Frameworks/CoreData.framework/CoreData: NSPersistentStoreCoordinator 
01 00 0e00 /System/Library/Frameworks/CoreData.framework/CoreData: NSPersistentStoreDescription 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSScanner 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
