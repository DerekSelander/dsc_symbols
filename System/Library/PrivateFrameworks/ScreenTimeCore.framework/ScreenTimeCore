|| __DATA.__objc_data _OBJC_CLASS_$_RMCategoryLimitUsageChange
|| __DATA.__objc_data _OBJC_CLASS_$_RMRemoteManagementScreenTimeAskForMoreRequest
|| __DATA.__objc_data _OBJC_CLASS_$_RMRemoteManagementScreenTimeDisabled
|| __DATA.__objc_data _OBJC_CLASS_$_RMRemoteManagementScreenTimeDowntimeEnabled
|| __DATA.__objc_data _OBJC_CLASS_$_RMRemoteManagementScreenTimeEnabled
|| __DATA.__objc_data _OBJC_CLASS_$_RMRemoteManagementScreenTimeFamilySetup
|| __DATA.__objc_data _OBJC_CLASS_$_RMRemoteManagementScreenTimeLimitDelete
|| __DATA.__objc_data _OBJC_CLASS_$_RMRemoteManagementScreenTimeLimitIgnore
|| __DATA.__objc_data _OBJC_CLASS_$_RMRemoteManagementScreenTimeLimitUsageChange
|| __DATA.__objc_data _OBJC_CLASS_$_RMRemoteManagementScreenTimeNumberOfLimits
|| __DATA.__objc_data _OBJC_CLASS_$_RMRemoteManagementScreenTimeReportingEnabled
|| __DATA.__objc_data _OBJC_CLASS_$_RMRemoteManagementScreenTimeState
|| __DATA.__objc_data _OBJC_CLASS_$_RMRemoteManagementScreenTimeViewUsage
|| __DATA.__objc_data _OBJC_CLASS_$_STAdminPersistenceController
|| __DATA.__objc_data _OBJC_CLASS_$_STAppInfo
|| __DATA.__objc_data _OBJC_CLASS_$_STAppLimitWarningUserNotificationContext
|| __DATA.__objc_data _OBJC_CLASS_$_STAskForTimeApplicationResource
|| __DATA.__objc_data _OBJC_CLASS_$_STAskForTimeApprovedResponseReceivedUserNotificationContext
|| __DATA.__objc_data _OBJC_CLASS_$_STAskForTimeCategoryResource
|| __DATA.__objc_data _OBJC_CLASS_$_STAskForTimeClient
|| __DATA.__objc_data _OBJC_CLASS_$_STAskForTimeNotApprovedResponseReceivedUserNotificationContext
|| __DATA.__objc_data _OBJC_CLASS_$_STAskForTimeRequest
|| __DATA.__objc_data _OBJC_CLASS_$_STAskForTimeRequestReceivedUserNotificationContext
|| __DATA.__objc_data _OBJC_CLASS_$_STAskForTimeResource
|| __DATA.__objc_data _OBJC_CLASS_$_STAskForTimeResponse
|| __DATA.__objc_data _OBJC_CLASS_$_STAskForTimeWebsiteResource
|| __DATA.__objc_data _OBJC_CLASS_$_STAskToManageContactsApprovedResponseReceivedUserNotificationContext
|| __DATA.__objc_data _OBJC_CLASS_$_STAskToManageContactsNotApprovedResponseReceivedUserNotificationContext
|| __DATA.__objc_data _OBJC_CLASS_$_STAskToManageContactsRequestReceivedUserNotificationContext
|| __DATA.__objc_data _OBJC_CLASS_$_STBlueprintScheduleCustomDayItem
|| __DATA.__objc_data _OBJC_CLASS_$_STBlueprintScheduleRepresentation
|| __DATA.__objc_data _OBJC_CLASS_$_STBlueprintScheduleSimpleItem
|| __DATA.__objc_data _OBJC_CLASS_$_STBlueprintUsageLimitScheduleCustomDayItem
|| __DATA.__objc_data _OBJC_CLASS_$_STBlueprintUsageLimitScheduleRepresentation
|| __DATA.__objc_data _OBJC_CLASS_$_STBlueprintUsageLimitScheduleSimpleItem
|| __DATA.__objc_data _OBJC_CLASS_$_STConfigurationSchedule
|| __DATA.__objc_data _OBJC_CLASS_$_STConfigurationScheduleDay
|| __DATA.__objc_data _OBJC_CLASS_$_STDeviceDowntimeUserNotificationContext
|| __DATA.__objc_data _OBJC_CLASS_$_STDowntimeWarningUserNotificationContext
|| __DATA.__objc_data _OBJC_CLASS_$_STFamilyMember
|| __DATA.__objc_data _OBJC_CLASS_$_STFetchResultsRequest
|| __DATA.__objc_data _OBJC_CLASS_$_STGroupFetchedResultsController
|| __DATA.__objc_data _OBJC_CLASS_$_STManagementStateObserver
|| __DATA.__objc_data _OBJC_CLASS_$_STOpaquePasscode
|| __DATA.__objc_data _OBJC_CLASS_$_STPINController
|| __DATA.__objc_data _OBJC_CLASS_$_STReconciler
|| __DATA.__objc_data _OBJC_CLASS_$_STScreenTimeCoreBundle
|| __DATA.__objc_data _OBJC_CLASS_$_STScreenTimeEnabledUserNotificationContext
|| __DATA.__objc_data _OBJC_CLASS_$_STSetupClient
|| __DATA.__objc_data _OBJC_CLASS_$_STSetupConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_STUnifiedTransportPayloadDestination
|| __DATA.__objc_data _OBJC_CLASS_$_STUnique
|| __DATA.__objc_data _OBJC_CLASS_$_STUsageDetailItem
|| __DATA.__objc_data _OBJC_CLASS_$_STUsageReporter
|| __DATA.__objc_data _OBJC_CLASS_$_STUsageTrustIdentifier
|| __DATA.__objc_data _OBJC_CLASS_$_STUserID
|| __DATA.__objc_data _OBJC_CLASS_$_STVersionVector
|| __DATA.__objc_data _OBJC_CLASS_$_STWebUsageController
|| __DATA.__objc_data _OBJC_CLASS_$_STWeeklyReportUserNotificationContext
|| __DATA.__objc_data _OBJC_CLASS_$_STXPCRemoteObjectProxy
|| __DATA.__objc_data _OBJC_METACLASS_$_RMCategoryLimitUsageChange
|| __DATA.__objc_data _OBJC_METACLASS_$_RMRemoteManagementScreenTimeAskForMoreRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_RMRemoteManagementScreenTimeDisabled
|| __DATA.__objc_data _OBJC_METACLASS_$_RMRemoteManagementScreenTimeDowntimeEnabled
|| __DATA.__objc_data _OBJC_METACLASS_$_RMRemoteManagementScreenTimeEnabled
|| __DATA.__objc_data _OBJC_METACLASS_$_RMRemoteManagementScreenTimeFamilySetup
|| __DATA.__objc_data _OBJC_METACLASS_$_RMRemoteManagementScreenTimeLimitDelete
|| __DATA.__objc_data _OBJC_METACLASS_$_RMRemoteManagementScreenTimeLimitIgnore
|| __DATA.__objc_data _OBJC_METACLASS_$_RMRemoteManagementScreenTimeLimitUsageChange
|| __DATA.__objc_data _OBJC_METACLASS_$_RMRemoteManagementScreenTimeNumberOfLimits
|| __DATA.__objc_data _OBJC_METACLASS_$_RMRemoteManagementScreenTimeReportingEnabled
|| __DATA.__objc_data _OBJC_METACLASS_$_RMRemoteManagementScreenTimeState
|| __DATA.__objc_data _OBJC_METACLASS_$_RMRemoteManagementScreenTimeViewUsage
|| __DATA.__objc_data _OBJC_METACLASS_$_STAdminPersistenceController
|| __DATA.__objc_data _OBJC_METACLASS_$_STAppInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_STAppLimitWarningUserNotificationContext
|| __DATA.__objc_data _OBJC_METACLASS_$_STAskForTimeApplicationResource
|| __DATA.__objc_data _OBJC_METACLASS_$_STAskForTimeApprovedResponseReceivedUserNotificationContext
|| __DATA.__objc_data _OBJC_METACLASS_$_STAskForTimeCategoryResource
|| __DATA.__objc_data _OBJC_METACLASS_$_STAskForTimeClient
|| __DATA.__objc_data _OBJC_METACLASS_$_STAskForTimeNotApprovedResponseReceivedUserNotificationContext
|| __DATA.__objc_data _OBJC_METACLASS_$_STAskForTimeRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_STAskForTimeRequestReceivedUserNotificationContext
|| __DATA.__objc_data _OBJC_METACLASS_$_STAskForTimeResource
|| __DATA.__objc_data _OBJC_METACLASS_$_STAskForTimeResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_STAskForTimeWebsiteResource
|| __DATA.__objc_data _OBJC_METACLASS_$_STAskToManageContactsApprovedResponseReceivedUserNotificationContext
|| __DATA.__objc_data _OBJC_METACLASS_$_STAskToManageContactsNotApprovedResponseReceivedUserNotificationContext
|| __DATA.__objc_data _OBJC_METACLASS_$_STAskToManageContactsRequestReceivedUserNotificationContext
|| __DATA.__objc_data _OBJC_METACLASS_$_STBlueprintScheduleCustomDayItem
|| __DATA.__objc_data _OBJC_METACLASS_$_STBlueprintScheduleRepresentation
|| __DATA.__objc_data _OBJC_METACLASS_$_STBlueprintScheduleSimpleItem
|| __DATA.__objc_data _OBJC_METACLASS_$_STBlueprintUsageLimitScheduleCustomDayItem
|| __DATA.__objc_data _OBJC_METACLASS_$_STBlueprintUsageLimitScheduleRepresentation
|| __DATA.__objc_data _OBJC_METACLASS_$_STBlueprintUsageLimitScheduleSimpleItem
|| __DATA.__objc_data _OBJC_METACLASS_$_STConfigurationSchedule
|| __DATA.__objc_data _OBJC_METACLASS_$_STConfigurationScheduleDay
|| __DATA.__objc_data _OBJC_METACLASS_$_STDeviceDowntimeUserNotificationContext
|| __DATA.__objc_data _OBJC_METACLASS_$_STDowntimeWarningUserNotificationContext
|| __DATA.__objc_data _OBJC_METACLASS_$_STFamilyMember
|| __DATA.__objc_data _OBJC_METACLASS_$_STFetchResultsRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_STGroupFetchedResultsController
|| __DATA.__objc_data _OBJC_METACLASS_$_STManagementStateObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_STOpaquePasscode
|| __DATA.__objc_data _OBJC_METACLASS_$_STPINController
|| __DATA.__objc_data _OBJC_METACLASS_$_STReconciler
|| __DATA.__objc_data _OBJC_METACLASS_$_STScreenTimeCoreBundle
|| __DATA.__objc_data _OBJC_METACLASS_$_STScreenTimeEnabledUserNotificationContext
|| __DATA.__objc_data _OBJC_METACLASS_$_STSetupClient
|| __DATA.__objc_data _OBJC_METACLASS_$_STSetupConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_STUnifiedTransportPayloadDestination
|| __DATA.__objc_data _OBJC_METACLASS_$_STUnique
|| __DATA.__objc_data _OBJC_METACLASS_$_STUsageDetailItem
|| __DATA.__objc_data _OBJC_METACLASS_$_STUsageReporter
|| __DATA.__objc_data _OBJC_METACLASS_$_STUsageTrustIdentifier
|| __DATA.__objc_data _OBJC_METACLASS_$_STUserID
|| __DATA.__objc_data _OBJC_METACLASS_$_STVersionVector
|| __DATA.__objc_data _OBJC_METACLASS_$_STWebUsageController
|| __DATA.__objc_data _OBJC_METACLASS_$_STWeeklyReportUserNotificationContext
|| __DATA.__objc_data _OBJC_METACLASS_$_STXPCRemoteObjectProxy
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMCategoryLimitUsageChange._changeInUsage
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMCategoryLimitUsageChange._daysSinceCreationDate
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMCategoryLimitUsageChange._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMCategoryLimitUsageChange._limitType
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMCategoryLimitUsageChange._limitedCategory
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMCategoryLimitUsageChange._noCreationDate
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMRemoteManagementScreenTimeAskForMoreRequest._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMRemoteManagementScreenTimeAskForMoreRequest._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMRemoteManagementScreenTimeDisabled._daysBeforeDisable
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMRemoteManagementScreenTimeDisabled._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMRemoteManagementScreenTimeDisabled._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMRemoteManagementScreenTimeDowntimeEnabled._enabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMRemoteManagementScreenTimeDowntimeEnabled._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMRemoteManagementScreenTimeDowntimeEnabled._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMRemoteManagementScreenTimeEnabled._enabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMRemoteManagementScreenTimeEnabled._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMRemoteManagementScreenTimeEnabled._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMRemoteManagementScreenTimeFamilySetup._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMRemoteManagementScreenTimeFamilySetup._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMRemoteManagementScreenTimeLimitDelete._familyMemberType
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMRemoteManagementScreenTimeLimitDelete._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMRemoteManagementScreenTimeLimitDelete._hasPasscode
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMRemoteManagementScreenTimeLimitDelete._isManaged
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMRemoteManagementScreenTimeLimitDelete._isManaging
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMRemoteManagementScreenTimeLimitDelete._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMRemoteManagementScreenTimeLimitIgnore._familyMemberType
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMRemoteManagementScreenTimeLimitIgnore._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMRemoteManagementScreenTimeLimitIgnore._hasPasscode
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMRemoteManagementScreenTimeLimitIgnore._isManaged
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMRemoteManagementScreenTimeLimitIgnore._isManaging
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMRemoteManagementScreenTimeLimitIgnore._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMRemoteManagementScreenTimeLimitUsageChange._categoryLimits
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMRemoteManagementScreenTimeLimitUsageChange._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMRemoteManagementScreenTimeLimitUsageChange._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMRemoteManagementScreenTimeNumberOfLimits._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMRemoteManagementScreenTimeNumberOfLimits._numberOfAppLimits
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMRemoteManagementScreenTimeNumberOfLimits._numberOfCategoryLimits
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMRemoteManagementScreenTimeNumberOfLimits._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMRemoteManagementScreenTimeReportingEnabled._enabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMRemoteManagementScreenTimeReportingEnabled._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMRemoteManagementScreenTimeReportingEnabled._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMRemoteManagementScreenTimeState._alwaysAllowedAppsCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMRemoteManagementScreenTimeState._contentPrivacyRestrictionsEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMRemoteManagementScreenTimeState._customDowntimeEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMRemoteManagementScreenTimeState._daysSinceCreationDates
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMRemoteManagementScreenTimeState._daysWithScreenTimeEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMRemoteManagementScreenTimeState._downtimeEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMRemoteManagementScreenTimeState._familyMemberType
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMRemoteManagementScreenTimeState._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMRemoteManagementScreenTimeState._hasPasscode
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMRemoteManagementScreenTimeState._isManaged
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMRemoteManagementScreenTimeState._isManaging
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMRemoteManagementScreenTimeState._limitedCategories
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMRemoteManagementScreenTimeState._numberOfLimits
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMRemoteManagementScreenTimeState._screenTimeEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMRemoteManagementScreenTimeState._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMRemoteManagementScreenTimeViewUsage._daysSinceLastView
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMRemoteManagementScreenTimeViewUsage._familyMemberType
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMRemoteManagementScreenTimeViewUsage._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMRemoteManagementScreenTimeViewUsage._hasPasscode
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMRemoteManagementScreenTimeViewUsage._isManaged
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMRemoteManagementScreenTimeViewUsage._remoteUser
|| __DATA.__objc_ivar _OBJC_IVAR_$_RMRemoteManagementScreenTimeViewUsage._timestamp
|| __DATA_CONST.__const _STActivationIdentifierDowntime
|| __DATA_CONST.__const _STActivationIdentifierUsageLimit
|| __DATA_CONST.__const _STAskForTimeMessageReceivedNotification
|| __DATA_CONST.__const _STAskMachServiceName
|| __DATA_CONST.__const _STBlueprintConfigurationBaseIdentifier
|| __DATA_CONST.__const _STBlueprintConfigurationTypeAccountSettings
|| __DATA_CONST.__const _STBlueprintConfigurationTypeApplicationSettings
|| __DATA_CONST.__const _STBlueprintConfigurationTypeApplicationStore
|| __DATA_CONST.__const _STBlueprintConfigurationTypeCustomRestriction
|| __DATA_CONST.__const _STBlueprintConfigurationTypeLegacyAppRestrictions
|| __DATA_CONST.__const _STBlueprintConfigurationTypeLegacyAppRestrictionsBlacklistedBundleIDsKey
|| __DATA_CONST.__const _STBlueprintConfigurationTypeMCFeature
|| __DATA_CONST.__const _STBlueprintConfigurationTypeMediaSettings
|| __DATA_CONST.__const _STBlueprintConfigurationTypeNetworkCellularSettings
|| __DATA_CONST.__const _STBlueprintConfigurationTypePasscodeSettings
|| __DATA_CONST.__const _STBlueprintConfigurationTypeSUSBCapability
|| __DATA_CONST.__const _STBlueprintConfigurationTypeSystemAirDrop
|| __DATA_CONST.__const _STBlueprintConfigurationTypeSystemCamera
|| __DATA_CONST.__const _STBlueprintConfigurationTypeSystemCarPlay
|| __DATA_CONST.__const _STBlueprintConfigurationTypeSystemDoNotDisturb
|| __DATA_CONST.__const _STBlueprintConfigurationTypeSystemGameCenter
|| __DATA_CONST.__const _STBlueprintConfigurationTypeSystemICloud
|| __DATA_CONST.__const _STBlueprintConfigurationTypeSystemMusic
|| __DATA_CONST.__const _STBlueprintConfigurationTypeSystemRatings
|| __DATA_CONST.__const _STBlueprintConfigurationTypeSystemSiri
|| __DATA_CONST.__const _STBlueprintConfigurationTypeSystemTVProvider
|| __DATA_CONST.__const _STBlueprintConfigurationTypeSystemWebContentFilterBasic
|| __DATA_CONST.__const _STBlueprintTypeAlwaysAllowedApps
|| __DATA_CONST.__const _STBlueprintTypeDowntime
|| __DATA_CONST.__const _STBlueprintTypeManagedUser
|| __DATA_CONST.__const _STBlueprintTypeRestrictions
|| __DATA_CONST.__const _STBlueprintTypeUsageLimit
|| __DATA_CONST.__const _STBlueprintTypeUsageLimitOverride
|| __DATA_CONST.__const _STBlueprintUsageLimitItemTypeApp
|| __DATA_CONST.__const _STBlueprintUsageLimitItemTypeCategory
|| __DATA_CONST.__const _STBlueprintUsageLimitItemTypeWebDomain
|| __DATA_CONST.__const _STCommunicationPolicyWarningNotification
|| __DATA_CONST.__const _STCompassAppBundleID
|| __DATA_CONST.__const _STConfigurationIdentifierDowntime
|| __DATA_CONST.__const _STConfigurationIdentifierUsageLimit
|| __DATA_CONST.__const _STConversationUnknownHandle
|| __DATA_CONST.__const _STEntitlementScreenTimePrivate
|| __DATA_CONST.__const _STErrorDomain
|| __DATA_CONST.__const _STErrorKeyNumberOfPINAuthenticationAttempts
|| __DATA_CONST.__const _STErrorKeyPINTimeoutDate
|| __DATA_CONST.__const _STFaceTimeAppBundleID
|| __DATA_CONST.__const _STFamilyDataSourceKey
|| __DATA_CONST.__const _STFamilyMemberTypeAdult
|| __DATA_CONST.__const _STFamilyMemberTypeChild
|| __DATA_CONST.__const _STFamilyMemberTypeTeen
|| __DATA_CONST.__const _STFamilyMemberTypeUnknown
|| __DATA_CONST.__const _STFamilyMembersKey
|| __DATA_CONST.__const _STHealthAppBundleID
|| __DATA_CONST.__const _STMachServiceEntitlementSetup
|| __DATA_CONST.__const _STMachServiceNameContacts
|| __DATA_CONST.__const _STMachServiceNameScreenTimePrivate
|| __DATA_CONST.__const _STMachServiceNameSetup
|| __DATA_CONST.__const _STMailAppBundleID
|| __DATA_CONST.__const _STManagementStateStateDidChange
|| __DATA_CONST.__const _STNotificationActionIdentifierApproveDay
|| __DATA_CONST.__const _STNotificationActionIdentifierApproveFifteen
|| __DATA_CONST.__const _STNotificationActionIdentifierApproveHour
|| __DATA_CONST.__const _STNotificationActionIdentifierApproveManagement
|| __DATA_CONST.__const _STNotificationActionIdentifierDontApprove
|| __DATA_CONST.__const _STNotificationActionIdentifierDontApproveManagement
|| __DATA_CONST.__const _STNotificationCategoryAskForTime
|| __DATA_CONST.__const _STNotificationCategoryManageContacts
|| __DATA_CONST.__const _STNotificationCenterIdentifierSocial
|| __DATA_CONST.__const _STNotificationCenterIdentifierSystem
|| __DATA_CONST.__const _STNotificationCenterIdentifierWallet
|| __DATA_CONST.__const _STNotificationCenterIdentifierWeb
|| __DATA_CONST.__const _STNotificationKeyAppInfo
|| __DATA_CONST.__const _STNotificationKeyTimeoutEndDate
|| __DATA_CONST.__const _STOneMoreMinuteBlueprintIdentifierPrefix
|| __DATA_CONST.__const _STOrganizationIdentifierFamily
|| __DATA_CONST.__const _STOrganizationIdentifierPersonal
|| __DATA_CONST.__const _STOrganizationIdentifierScreenTime
|| __DATA_CONST.__const _STPINTimeoutDidBeginNotification
|| __DATA_CONST.__const _STPINTimeoutDidEndNotification
|| __DATA_CONST.__const _STPassbookAppBundleID
|| __DATA_CONST.__const _STPersistenceConfigurationNameCloud
|| __DATA_CONST.__const _STPersistenceConfigurationNameLocal
|| __DATA_CONST.__const _STPersistenceXPCStoreServiceName
|| __DATA_CONST.__const _STPhoneAppBundleID
|| __DATA_CONST.__const _STPrefsURLComponentFragmentDay
|| __DATA_CONST.__const _STPrefsURLComponentFragmentWeek
|| __DATA_CONST.__const _STPrefsURLComponentPathScreenTimeRoot
|| __DATA_CONST.__const _STPrefsURLComponentPathScreenTimeSummary
|| __DATA_CONST.__const _STPrefsURLComponentScheme
|| __DATA_CONST.__const _STRemoteAlertConfigurationContextKeyPasscodeMode
|| __DATA_CONST.__const _STRestrictionsBaseIdentifier
|| __DATA_CONST.__const _STSBCapabilitiesKey
|| __DATA_CONST.__const _STSBDomain
|| __DATA_CONST.__const _STSBRestrictionsEnabledKey
|| __DATA_CONST.__const _STSafariAppBundleID
|| __DATA_CONST.__const _STScreenTimeDowntimeNotificationBundleIdentifier
|| __DATA_CONST.__const _STScreenTimeEnabledNotificationBundleIdentifier
|| __DATA_CONST.__const _STScreenTimeNotificationsBundleIdentifier
|| __DATA_CONST.__const _STSettingsDidChangeNotification
|| __DATA_CONST.__const _STToolMachServiceName
|| __DATA_CONST.__const _STUnifiedTransportPayloadDestinationTypeDevice
|| __DATA_CONST.__const _STUnifiedTransportPayloadDestinationTypePairedDevice
|| __DATA_CONST.__const _STUnifiedTransportPayloadDestinationTypeUser
|| __DATA_CONST.__const _STUniqueTransactionAuthorName
|| __DATA_CONST.__const _STUsageDetailAllAppsAndCategoriesIdentifier
|| __DATA_CONST.__const _STUsageDetailAllAppsIdentifier
|| __DATA_CONST.__const _STUsageDetailAllCategoriesIdentifier
|| __DATA_CONST.__const _STUsageDetailMostUsedWebsitesIdentifier
|| __DATA_CONST.__const _STUsageReporterDidChangeContentNotification
|| __DATA_CONST.__const _STUserNotificationAskForTimeKeyRequestIdentifier
|| __DATA_CONST.__const _STUserNotificationAskForTimeKeyTimeApproved
|| __DATA_CONST.__const _STUserNotificationAskForTimeResponseReceivedApprove
|| __DATA_CONST.__const _STUserNotificationAskForTimeResponseReceivedDontApprove
|| __DATA_CONST.__const _STUserNotificationAskToManageContactsResponseReceivedApprove
|| __DATA_CONST.__const _STUserNotificationAskToManageContactsResponseReceivedDontApprove
|| __DATA_CONST.__const _STUserNotificationWeeklyReportCategoryIdentifier
|| __DATA_CONST.__const _STUserNotificationWeeklyReportPrimaryActionIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_STAppInfoCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_STAskForTimeRequestResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_STBlueprint
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_STBlueprintConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_STBlueprintSchedule
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_STBlueprintUsageLimit
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_STConversation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_STConversationContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_STCoreDevice
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_STCoreOrganization
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_STCoreOrganizationSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_STCoreTransportPayload
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_STCoreUser
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_STDailySchedule
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_STDowntime
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_STFamily
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_STFamilyOrganization
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_STFamilyOrganizationSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_STInstalledApp
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_STLocalOrganization
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_STLocations
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_STLog
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_STManagementState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_STPersistenceConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_STPersistenceController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_STScreenTimeAgentPrivateConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_STScreenTimeSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_STTestSyncableObject
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_STTestSyncableSubObject
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_STUniquedManagedObject
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_STUsage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_STUsageBlock
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_STUsageCategory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_STUsageCountedItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_STUsageRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_STUsageTimedItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_STUserDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_STUserDeviceState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_STiCloudOrganization
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_STAppInfoCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_STAskForTimeRequestResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_STBlueprint
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_STBlueprintConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_STBlueprintSchedule
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_STBlueprintUsageLimit
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_STConversation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_STConversationContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_STCoreDevice
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_STCoreOrganization
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_STCoreOrganizationSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_STCoreTransportPayload
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_STCoreUser
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_STDailySchedule
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_STDowntime
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_STFamily
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_STFamilyOrganization
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_STFamilyOrganizationSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_STInstalledApp
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_STLocalOrganization
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_STLocations
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_STLog
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_STManagementState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_STPersistenceConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_STPersistenceController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_STScreenTimeAgentPrivateConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_STScreenTimeSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_STTestSyncableObject
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_STTestSyncableSubObject
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_STUniquedManagedObject
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_STUsage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_STUsageBlock
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_STUsageCategory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_STUsageCountedItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_STUsageRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_STUsageTimedItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_STUserDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_STUserDeviceState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_STiCloudOrganization
|| __TEXT.__const _STDefaultNotificationTimeInterval
|| __TEXT.__text _RMCategoryLimitUsageChangeReadFrom
|| __TEXT.__text _RMRemoteManagementScreenTimeAskForMoreRequestReadFrom
|| __TEXT.__text _RMRemoteManagementScreenTimeDisabledReadFrom
|| __TEXT.__text _RMRemoteManagementScreenTimeDowntimeEnabledReadFrom
|| __TEXT.__text _RMRemoteManagementScreenTimeEnabledReadFrom
|| __TEXT.__text _RMRemoteManagementScreenTimeFamilySetupReadFrom
|| __TEXT.__text _RMRemoteManagementScreenTimeLimitDeleteReadFrom
|| __TEXT.__text _RMRemoteManagementScreenTimeLimitIgnoreReadFrom
|| __TEXT.__text _RMRemoteManagementScreenTimeLimitUsageChangeReadFrom
|| __TEXT.__text _RMRemoteManagementScreenTimeNumberOfLimitsReadFrom
|| __TEXT.__text _RMRemoteManagementScreenTimeReportingEnabledReadFrom
|| __TEXT.__text _RMRemoteManagementScreenTimeStateReadFrom
|| __TEXT.__text _RMRemoteManagementScreenTimeViewUsageReadFrom
|| __TEXT.__text _STAvailableCategoriesExcludingSystemCategories
|| __TEXT.__text _STAvailableVersion1CategoriesExcludingSystemCategories
|| __TEXT.__text _STCategoryNameWithIdentifier
|| __TEXT.__text _STCopyURIForUserDSIDWithDeviceUUID
|| __TEXT.__text _STDisableLocalRestrictions
|| __TEXT.__text _STGetDeviceName
|| __TEXT.__text _STGetDeviceUUID
|| __TEXT.__text _STSortedCategoriesForUsageLimits
|| __TEXT.__text _STXPCSafeErrorFromCoreDataError
__ Accounts: _OBJC_CLASS_$_ACAccountStore
__ BackBoardServices: _BKSDisplayBrightnessGetCurrent
__ Categories: _CTCategoryIdentifierEntertainment
__ Categories: _CTCategoryIdentifierGames
__ Categories: _CTCategoryIdentifierOther
__ Categories: _CTCategoryIdentifierShoppingAndFood
__ Categories: _CTCategoryIdentifierSocialNetworking
__ Categories: _CTCategoryIdentifierSystemBlockable
__ Categories: _CTCategoryIdentifierSystemHidden
__ Categories: _CTCategoryIdentifierSystemUnblockable
__ Categories: _CTCategoryIdentifierTravel
__ Categories: _CTCategoryIdentifierUtilities
__ Categories: _OBJC_CLASS_$_CTCategories
__ Categories: _OBJC_CLASS_$_CTCategory
__ CloudKit: _OBJC_CLASS_$_CKContainer
__ ConfigurationEngineModel: _CEMPolicyAppDeclaration_Mode_ask
__ ConfigurationEngineModel: _CEMPolicyAppDeclaration_Mode_override
__ ConfigurationEngineModel: _CEMPolicyAppDeclaration_Mode_warn
__ ConfigurationEngineModel: _CEMPolicyCategoryDeclaration_Mode_ask
__ ConfigurationEngineModel: _CEMPolicyCategoryDeclaration_Mode_warn
__ ConfigurationEngineModel: _CEMPolicyWebSiteDeclaration_Mode_ask
__ ConfigurationEngineModel: _CEMPolicyWebSiteDeclaration_Mode_warn
__ ConfigurationEngineModel: _CEMPolicyiCloudAccountDeclaration_Mode_disallowed
__ ConfigurationEngineModel: _CEMPredicateBudget_Monitor_apps
__ ConfigurationEngineModel: _CEMPredicateBudget_Monitor_categories
__ ConfigurationEngineModel: _CEMPredicateBudget_Monitor_webSites
__ ConfigurationEngineModel: _OBJC_CLASS_$_CEMAccountSettingsDeclaration
__ ConfigurationEngineModel: _OBJC_CLASS_$_CEMActivationSimpleDeclaration
__ ConfigurationEngineModel: _OBJC_CLASS_$_CEMApplicationSettingsDeclaration
__ ConfigurationEngineModel: _OBJC_CLASS_$_CEMApplicationStoreDeclaration
__ ConfigurationEngineModel: _OBJC_CLASS_$_CEMConfigurationBase
__ ConfigurationEngineModel: _OBJC_CLASS_$_CEMLegacyRestrictionsAppsDeclaration
__ ConfigurationEngineModel: _OBJC_CLASS_$_CEMMediaSettingsDeclaration
__ ConfigurationEngineModel: _OBJC_CLASS_$_CEMNetworkCellularSettingsDeclaration
__ ConfigurationEngineModel: _OBJC_CLASS_$_CEMPasscodeSettingsDeclaration
__ ConfigurationEngineModel: _OBJC_CLASS_$_CEMPolicyAppDeclaration
__ ConfigurationEngineModel: _OBJC_CLASS_$_CEMPolicyCategoryDeclaration
__ ConfigurationEngineModel: _OBJC_CLASS_$_CEMPolicyWebSiteDeclaration
__ ConfigurationEngineModel: _OBJC_CLASS_$_CEMPolicyiCloudAccountDeclaration
__ ConfigurationEngineModel: _OBJC_CLASS_$_CEMPredicateAll
__ ConfigurationEngineModel: _OBJC_CLASS_$_CEMPredicateAny
__ ConfigurationEngineModel: _OBJC_CLASS_$_CEMPredicateBudget
__ ConfigurationEngineModel: _OBJC_CLASS_$_CEMPredicateBudget_TimeBudgetItem
__ ConfigurationEngineModel: _OBJC_CLASS_$_CEMPredicateCompositeBudget
__ ConfigurationEngineModel: _OBJC_CLASS_$_CEMPredicateCompositeBudget_Monitors
__ ConfigurationEngineModel: _OBJC_CLASS_$_CEMPredicateCompositeBudget_TimeBudgetItem
__ ConfigurationEngineModel: _OBJC_CLASS_$_CEMPredicateFalse
__ ConfigurationEngineModel: _OBJC_CLASS_$_CEMPredicateNot
__ ConfigurationEngineModel: _OBJC_CLASS_$_CEMPredicateOneTime
__ ConfigurationEngineModel: _OBJC_CLASS_$_CEMPredicateWeeklyTimeRange
__ ConfigurationEngineModel: _OBJC_CLASS_$_CEMPredicateiCloudAccount
__ ConfigurationEngineModel: _OBJC_CLASS_$_CEMSystemAirdropDeclaration
__ ConfigurationEngineModel: _OBJC_CLASS_$_CEMSystemBasicWebContentFilterDeclaration
__ ConfigurationEngineModel: _OBJC_CLASS_$_CEMSystemBasicWebContentFilterDeclaration_SiteWhiteListItem
__ ConfigurationEngineModel: _OBJC_CLASS_$_CEMSystemCameraDeclaration
__ ConfigurationEngineModel: _OBJC_CLASS_$_CEMSystemCarPlayDeclaration
__ ConfigurationEngineModel: _OBJC_CLASS_$_CEMSystemDateAndTimeDeclaration
__ ConfigurationEngineModel: _OBJC_CLASS_$_CEMSystemDoNotDisturbDeclaration
__ ConfigurationEngineModel: _OBJC_CLASS_$_CEMSystemGameCenterDeclaration
__ ConfigurationEngineModel: _OBJC_CLASS_$_CEMSystemMusicDeclaration
__ ConfigurationEngineModel: _OBJC_CLASS_$_CEMSystemRatingsDeclaration
__ ConfigurationEngineModel: _OBJC_CLASS_$_CEMSystemSiriDeclaration
__ ConfigurationEngineModel: _OBJC_CLASS_$_CEMSystemTVProviderDeclaration
__ Contacts: _CNContactEmailAddressesKey
__ Contacts: _CNContactIdentifierKey
__ Contacts: _CNContactPhoneNumbersKey
__ Contacts: _CNContactStoreDidChangeNotification
__ Contacts: _CNDowntimeWhitelistDidChangeNotification
__ Contacts: _OBJC_CLASS_$_CNContact
__ Contacts: _OBJC_CLASS_$_CNContactFetchRequest
__ Contacts: _OBJC_CLASS_$_CNContactStore
__ Contacts: _OBJC_CLASS_$_CNContainer
__ Contacts: _OBJC_CLASS_$_CNDowntimeWhitelist
__ Contacts: _OBJC_CLASS_$_CNSaveRequest
__ CoreData: _NSAddedPersistentStoresKey
__ CoreData: _NSInMemoryStoreType
__ CoreData: _NSMergeByPropertyObjectTrumpMergePolicy
__ CoreData: _NSPersistentHistoryTrackingKey
__ CoreData: _NSPersistentStoreCoordinatorResourceBundlesForMigration
__ CoreData: _NSPersistentStoreCoordinatorStoresDidChangeNotification
__ CoreData: _NSPersistentStoreRemoteChangeNotification
__ CoreData: _NSPersistentStoreRemoteChangeNotificationOptionKey
__ CoreData: _NSRemotePersistentStoreDidChangeNotification
__ CoreData: _NSRemovedPersistentStoresKey
__ CoreData: _NSStoreUUIDKey
__ CoreData: _NSUUIDChangedPersistentStoresKey
__ CoreData: _NSXPCStoreDaemonizeKey
__ CoreData: _NSXPCStorePostUpdateNotificationsKey
__ CoreData: _NSXPCStoreServiceNameKey
__ CoreData: _NSXPCStoreType
__ CoreData: _OBJC_CLASS_$_NSFetchRequest
__ CoreData: _OBJC_CLASS_$_NSFetchedResultsController
__ CoreData: _OBJC_CLASS_$_NSManagedObject
__ CoreData: _OBJC_CLASS_$_NSManagedObjectContext
__ CoreData: _OBJC_CLASS_$_NSManagedObjectModel
__ CoreData: _OBJC_CLASS_$_NSPersistentContainer
__ CoreData: _OBJC_CLASS_$_NSPersistentHistoryChangeRequest
__ CoreData: _OBJC_CLASS_$_NSPersistentHistoryToken
__ CoreData: _OBJC_CLASS_$_NSPersistentStoreDescription
__ CoreData: _OBJC_METACLASS_$_NSManagedObject
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesSetAppValue
__ CoreFoundation: _NSCalendarIdentifierGregorian
__ CoreFoundation: _NSRangeException
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCache
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDateComponents
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreServices: _LSSystemApplicationType
__ CoreServices: _OBJC_CLASS_$_LSApplicationRecord
__ DeviceManagement: _DMFEmergencyModeChangedNotification
__ DeviceManagement: _OBJC_CLASS_$_DMFApplicationPolicyMonitor
__ DeviceManagement: _OBJC_CLASS_$_DMFCommunicationPolicyMonitor
__ DeviceManagement: _OBJC_CLASS_$_DMFEmergencyModeMonitor
__ FamilyCircle: _FAMemberFlagScreenTime
__ FamilyCircle: _OBJC_CLASS_$_FAFamilyMember
__ FamilyCircle: _OBJC_CLASS_$_FAFetchFamilyPhotoRequest
__ FamilyCircle: _OBJC_CLASS_$_FAUpdateFamilyMemberFlagRequest
__ Foundation: _NSClassFromString
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSFullUserName
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedRecoverySuggestionErrorKey
__ Foundation: _NSRequestConcreteImplementation
__ Foundation: _NSStringFromClass
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSCompoundPredicate
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateComponentsFormatter
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSDateIntervalFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSISO8601DateFormatter
__ Foundation: _OBJC_CLASS_$_NSIndexSet
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPersonNameComponents
__ Foundation: _OBJC_CLASS_$_NSPersonNameComponentsFormatter
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSURLCache
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLQueryItem
__ Foundation: _OBJC_CLASS_$_NSURLRequest
__ Foundation: _OBJC_CLASS_$_NSURLSession
__ Foundation: _OBJC_CLASS_$_NSURLSessionConfiguration
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ ProtocolBuffer: _OBJC_CLASS_$_PBCodable
__ ProtocolBuffer: _OBJC_CLASS_$_PBRequest
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._bytes
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._error
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._length
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._pos
__ ProtocolBuffer: _OBJC_METACLASS_$_PBCodable
__ ProtocolBuffer: _OBJC_METACLASS_$_PBRequest
__ ProtocolBuffer: _PBDataWriterWriteBOOLField
__ ProtocolBuffer: _PBDataWriterWriteInt64Field
__ ProtocolBuffer: _PBDataWriterWriteStringField
__ ProtocolBuffer: _PBDataWriterWriteSubmessage
__ ProtocolBuffer: _PBDataWriterWriteUint64Field
__ ProtocolBuffer: _PBReaderPlaceMark
__ ProtocolBuffer: _PBReaderReadString
__ ProtocolBuffer: _PBReaderRecallMark
__ ProtocolBuffer: _PBReaderSkipValueWithTag
__ ProtocolBuffer: _PBRepeatedUInt64Add
__ ProtocolBuffer: _PBRepeatedUInt64Clear
__ ProtocolBuffer: _PBRepeatedUInt64Copy
__ ProtocolBuffer: _PBRepeatedUInt64Hash
__ ProtocolBuffer: _PBRepeatedUInt64IsEqual
__ ProtocolBuffer: _PBRepeatedUInt64NSArray
__ ProtocolBuffer: _PBRepeatedUInt64Set
__ UserNotifications: _OBJC_CLASS_$_UNMutableNotificationContent
__ UserNotifications: _OBJC_CLASS_$_UNNotificationAttachment
__ UserNotifications: _OBJC_CLASS_$_UNNotificationSound
__ UserNotifications: _UNNotificationAttachmentOptionsHiddenFromDefaultExpandedViewKey
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: _csr_check
__ libSystem.B.dylib: _dispatch_activate
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_post
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_signpost_id_generate
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
RMCategoryLimitUsageChange : PBCodable /System/Library/Frameworks/UserNotifications.framework/UserNotifications <NSCopying>
 @property  BOOL hasLimitedCategory
 @property  NSString *limitedCategory
 @property  BOOL hasDaysSinceCreationDate
 @property  unsigned long daysSinceCreationDate
 @property  BOOL hasChangeInUsage
 @property  long long changeInUsage
 @property  BOOL hasLimitType
 @property  NSString *limitType
 @property  BOOL hasNoCreationDate
 @property  BOOL noCreationDate

  // instance methods
  -[RMCategoryLimitUsageChange copyWithZone:]
  -[RMCategoryLimitUsageChange .cxx_destruct]
  -[RMCategoryLimitUsageChange readFrom:]
  -[RMCategoryLimitUsageChange writeTo:]
  -[RMCategoryLimitUsageChange isEqual:]
  -[RMCategoryLimitUsageChange copyTo:]
  -[RMCategoryLimitUsageChange dictionaryRepresentation]
  -[RMCategoryLimitUsageChange mergeFrom:]
  -[RMCategoryLimitUsageChange setLimitedCategory:]
  -[RMCategoryLimitUsageChange setLimitType:]
  -[RMCategoryLimitUsageChange hasLimitedCategory]
  -[RMCategoryLimitUsageChange setDaysSinceCreationDate:]
  -[RMCategoryLimitUsageChange setHasDaysSinceCreationDate:]
  -[RMCategoryLimitUsageChange hasDaysSinceCreationDate]
  -[RMCategoryLimitUsageChange setChangeInUsage:]
  -[RMCategoryLimitUsageChange setHasChangeInUsage:]
  -[RMCategoryLimitUsageChange hasChangeInUsage]
  -[RMCategoryLimitUsageChange hasLimitType]
  -[RMCategoryLimitUsageChange setNoCreationDate:]
  -[RMCategoryLimitUsageChange setHasNoCreationDate:]
  -[RMCategoryLimitUsageChange hasNoCreationDate]
  -[RMCategoryLimitUsageChange limitedCategory]
  -[RMCategoryLimitUsageChange daysSinceCreationDate]
  -[RMCategoryLimitUsageChange changeInUsage]
  -[RMCategoryLimitUsageChange limitType]
  -[RMCategoryLimitUsageChange noCreationDate]


RMRemoteManagementScreenTimeAskForMoreRequest : PBRequest /System/Library/Frameworks/UserNotifications.framework/UserNotifications <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp

  // instance methods
  -[RMRemoteManagementScreenTimeAskForMoreRequest copyWithZone:]
  -[RMRemoteManagementScreenTimeAskForMoreRequest timestamp]
  -[RMRemoteManagementScreenTimeAskForMoreRequest setTimestamp:]
  -[RMRemoteManagementScreenTimeAskForMoreRequest setHasTimestamp:]
  -[RMRemoteManagementScreenTimeAskForMoreRequest readFrom:]
  -[RMRemoteManagementScreenTimeAskForMoreRequest writeTo:]
  -[RMRemoteManagementScreenTimeAskForMoreRequest isEqual:]
  -[RMRemoteManagementScreenTimeAskForMoreRequest copyTo:]
  -[RMRemoteManagementScreenTimeAskForMoreRequest dictionaryRepresentation]
  -[RMRemoteManagementScreenTimeAskForMoreRequest mergeFrom:]
  -[RMRemoteManagementScreenTimeAskForMoreRequest hasTimestamp]


RMRemoteManagementScreenTimeDisabled : PBCodable /System/Library/Frameworks/UserNotifications.framework/UserNotifications <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasDaysBeforeDisable
 @property  unsigned long daysBeforeDisable

  // instance methods
  -[RMRemoteManagementScreenTimeDisabled copyWithZone:]
  -[RMRemoteManagementScreenTimeDisabled timestamp]
  -[RMRemoteManagementScreenTimeDisabled setTimestamp:]
  -[RMRemoteManagementScreenTimeDisabled setHasTimestamp:]
  -[RMRemoteManagementScreenTimeDisabled readFrom:]
  -[RMRemoteManagementScreenTimeDisabled writeTo:]
  -[RMRemoteManagementScreenTimeDisabled isEqual:]
  -[RMRemoteManagementScreenTimeDisabled copyTo:]
  -[RMRemoteManagementScreenTimeDisabled dictionaryRepresentation]
  -[RMRemoteManagementScreenTimeDisabled mergeFrom:]
  -[RMRemoteManagementScreenTimeDisabled hasTimestamp]
  -[RMRemoteManagementScreenTimeDisabled setDaysBeforeDisable:]
  -[RMRemoteManagementScreenTimeDisabled setHasDaysBeforeDisable:]
  -[RMRemoteManagementScreenTimeDisabled hasDaysBeforeDisable]
  -[RMRemoteManagementScreenTimeDisabled daysBeforeDisable]


RMRemoteManagementScreenTimeDowntimeEnabled : PBCodable /System/Library/Frameworks/UserNotifications.framework/UserNotifications <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasEnabled
 @property  BOOL enabled

  // instance methods
  -[RMRemoteManagementScreenTimeDowntimeEnabled copyWithZone:]
  -[RMRemoteManagementScreenTimeDowntimeEnabled enabled]
  -[RMRemoteManagementScreenTimeDowntimeEnabled timestamp]
  -[RMRemoteManagementScreenTimeDowntimeEnabled setHasEnabled:]
  -[RMRemoteManagementScreenTimeDowntimeEnabled hasEnabled]
  -[RMRemoteManagementScreenTimeDowntimeEnabled setTimestamp:]
  -[RMRemoteManagementScreenTimeDowntimeEnabled setHasTimestamp:]
  -[RMRemoteManagementScreenTimeDowntimeEnabled readFrom:]
  -[RMRemoteManagementScreenTimeDowntimeEnabled writeTo:]
  -[RMRemoteManagementScreenTimeDowntimeEnabled isEqual:]
  -[RMRemoteManagementScreenTimeDowntimeEnabled setEnabled:]
  -[RMRemoteManagementScreenTimeDowntimeEnabled copyTo:]
  -[RMRemoteManagementScreenTimeDowntimeEnabled dictionaryRepresentation]
  -[RMRemoteManagementScreenTimeDowntimeEnabled mergeFrom:]
  -[RMRemoteManagementScreenTimeDowntimeEnabled hasTimestamp]


RMRemoteManagementScreenTimeEnabled : PBCodable /System/Library/Frameworks/UserNotifications.framework/UserNotifications <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasEnabled
 @property  BOOL enabled

  // instance methods
  -[RMRemoteManagementScreenTimeEnabled copyWithZone:]
  -[RMRemoteManagementScreenTimeEnabled enabled]
  -[RMRemoteManagementScreenTimeEnabled timestamp]
  -[RMRemoteManagementScreenTimeEnabled setHasEnabled:]
  -[RMRemoteManagementScreenTimeEnabled hasEnabled]
  -[RMRemoteManagementScreenTimeEnabled setTimestamp:]
  -[RMRemoteManagementScreenTimeEnabled setHasTimestamp:]
  -[RMRemoteManagementScreenTimeEnabled readFrom:]
  -[RMRemoteManagementScreenTimeEnabled writeTo:]
  -[RMRemoteManagementScreenTimeEnabled isEqual:]
  -[RMRemoteManagementScreenTimeEnabled setEnabled:]
  -[RMRemoteManagementScreenTimeEnabled copyTo:]
  -[RMRemoteManagementScreenTimeEnabled dictionaryRepresentation]
  -[RMRemoteManagementScreenTimeEnabled mergeFrom:]
  -[RMRemoteManagementScreenTimeEnabled hasTimestamp]


RMRemoteManagementScreenTimeFamilySetup : PBCodable /System/Library/Frameworks/UserNotifications.framework/UserNotifications <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp

  // instance methods
  -[RMRemoteManagementScreenTimeFamilySetup copyWithZone:]
  -[RMRemoteManagementScreenTimeFamilySetup timestamp]
  -[RMRemoteManagementScreenTimeFamilySetup setTimestamp:]
  -[RMRemoteManagementScreenTimeFamilySetup setHasTimestamp:]
  -[RMRemoteManagementScreenTimeFamilySetup readFrom:]
  -[RMRemoteManagementScreenTimeFamilySetup writeTo:]
  -[RMRemoteManagementScreenTimeFamilySetup isEqual:]
  -[RMRemoteManagementScreenTimeFamilySetup copyTo:]
  -[RMRemoteManagementScreenTimeFamilySetup dictionaryRepresentation]
  -[RMRemoteManagementScreenTimeFamilySetup mergeFrom:]
  -[RMRemoteManagementScreenTimeFamilySetup hasTimestamp]


RMRemoteManagementScreenTimeLimitDelete : PBCodable /System/Library/Frameworks/UserNotifications.framework/UserNotifications <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasFamilyMemberType
 @property  NSString *familyMemberType
 @property  BOOL hasIsManaged
 @property  BOOL isManaged
 @property  BOOL hasIsManaging
 @property  BOOL isManaging
 @property  BOOL hasHasPasscode
 @property  BOOL hasPasscode

  // instance methods
  -[RMRemoteManagementScreenTimeLimitDelete setIsManaged:]
  -[RMRemoteManagementScreenTimeLimitDelete isManaged]
  -[RMRemoteManagementScreenTimeLimitDelete copyWithZone:]
  -[RMRemoteManagementScreenTimeLimitDelete .cxx_destruct]
  -[RMRemoteManagementScreenTimeLimitDelete timestamp]
  -[RMRemoteManagementScreenTimeLimitDelete setTimestamp:]
  -[RMRemoteManagementScreenTimeLimitDelete isManaging]
  -[RMRemoteManagementScreenTimeLimitDelete setHasTimestamp:]
  -[RMRemoteManagementScreenTimeLimitDelete readFrom:]
  -[RMRemoteManagementScreenTimeLimitDelete writeTo:]
  -[RMRemoteManagementScreenTimeLimitDelete isEqual:]
  -[RMRemoteManagementScreenTimeLimitDelete copyTo:]
  -[RMRemoteManagementScreenTimeLimitDelete dictionaryRepresentation]
  -[RMRemoteManagementScreenTimeLimitDelete mergeFrom:]
  -[RMRemoteManagementScreenTimeLimitDelete hasTimestamp]
  -[RMRemoteManagementScreenTimeLimitDelete hasPasscode]
  -[RMRemoteManagementScreenTimeLimitDelete setFamilyMemberType:]
  -[RMRemoteManagementScreenTimeLimitDelete hasFamilyMemberType]
  -[RMRemoteManagementScreenTimeLimitDelete setHasIsManaged:]
  -[RMRemoteManagementScreenTimeLimitDelete hasIsManaged]
  -[RMRemoteManagementScreenTimeLimitDelete setIsManaging:]
  -[RMRemoteManagementScreenTimeLimitDelete setHasIsManaging:]
  -[RMRemoteManagementScreenTimeLimitDelete hasIsManaging]
  -[RMRemoteManagementScreenTimeLimitDelete setHasPasscode:]
  -[RMRemoteManagementScreenTimeLimitDelete setHasHasPasscode:]
  -[RMRemoteManagementScreenTimeLimitDelete hasHasPasscode]
  -[RMRemoteManagementScreenTimeLimitDelete familyMemberType]


RMRemoteManagementScreenTimeLimitIgnore : PBCodable /System/Library/Frameworks/UserNotifications.framework/UserNotifications <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasFamilyMemberType
 @property  NSString *familyMemberType
 @property  BOOL hasIsManaged
 @property  BOOL isManaged
 @property  BOOL hasIsManaging
 @property  BOOL isManaging
 @property  BOOL hasHasPasscode
 @property  BOOL hasPasscode

  // instance methods
  -[RMRemoteManagementScreenTimeLimitIgnore setIsManaged:]
  -[RMRemoteManagementScreenTimeLimitIgnore isManaged]
  -[RMRemoteManagementScreenTimeLimitIgnore copyWithZone:]
  -[RMRemoteManagementScreenTimeLimitIgnore .cxx_destruct]
  -[RMRemoteManagementScreenTimeLimitIgnore timestamp]
  -[RMRemoteManagementScreenTimeLimitIgnore setTimestamp:]
  -[RMRemoteManagementScreenTimeLimitIgnore isManaging]
  -[RMRemoteManagementScreenTimeLimitIgnore setHasTimestamp:]
  -[RMRemoteManagementScreenTimeLimitIgnore readFrom:]
  -[RMRemoteManagementScreenTimeLimitIgnore writeTo:]
  -[RMRemoteManagementScreenTimeLimitIgnore isEqual:]
  -[RMRemoteManagementScreenTimeLimitIgnore copyTo:]
  -[RMRemoteManagementScreenTimeLimitIgnore dictionaryRepresentation]
  -[RMRemoteManagementScreenTimeLimitIgnore mergeFrom:]
  -[RMRemoteManagementScreenTimeLimitIgnore hasTimestamp]
  -[RMRemoteManagementScreenTimeLimitIgnore hasPasscode]
  -[RMRemoteManagementScreenTimeLimitIgnore setFamilyMemberType:]
  -[RMRemoteManagementScreenTimeLimitIgnore hasFamilyMemberType]
  -[RMRemoteManagementScreenTimeLimitIgnore setHasIsManaged:]
  -[RMRemoteManagementScreenTimeLimitIgnore hasIsManaged]
  -[RMRemoteManagementScreenTimeLimitIgnore setIsManaging:]
  -[RMRemoteManagementScreenTimeLimitIgnore setHasIsManaging:]
  -[RMRemoteManagementScreenTimeLimitIgnore hasIsManaging]
  -[RMRemoteManagementScreenTimeLimitIgnore setHasPasscode:]
  -[RMRemoteManagementScreenTimeLimitIgnore setHasHasPasscode:]
  -[RMRemoteManagementScreenTimeLimitIgnore hasHasPasscode]
  -[RMRemoteManagementScreenTimeLimitIgnore familyMemberType]


RMRemoteManagementScreenTimeLimitUsageChange : PBCodable /System/Library/Frameworks/UserNotifications.framework/UserNotifications <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  NSMutableArray *categoryLimits

  // class methods
  +[RMRemoteManagementScreenTimeLimitUsageChange categoryLimitType]

  // instance methods
  -[RMRemoteManagementScreenTimeLimitUsageChange copyWithZone:]
  -[RMRemoteManagementScreenTimeLimitUsageChange .cxx_destruct]
  -[RMRemoteManagementScreenTimeLimitUsageChange timestamp]
  -[RMRemoteManagementScreenTimeLimitUsageChange setTimestamp:]
  -[RMRemoteManagementScreenTimeLimitUsageChange setHasTimestamp:]
  -[RMRemoteManagementScreenTimeLimitUsageChange readFrom:]
  -[RMRemoteManagementScreenTimeLimitUsageChange writeTo:]
  -[RMRemoteManagementScreenTimeLimitUsageChange isEqual:]
  -[RMRemoteManagementScreenTimeLimitUsageChange copyTo:]
  -[RMRemoteManagementScreenTimeLimitUsageChange dictionaryRepresentation]
  -[RMRemoteManagementScreenTimeLimitUsageChange mergeFrom:]
  -[RMRemoteManagementScreenTimeLimitUsageChange hasTimestamp]
  -[RMRemoteManagementScreenTimeLimitUsageChange addCategoryLimit:]
  -[RMRemoteManagementScreenTimeLimitUsageChange categoryLimitsCount]
  -[RMRemoteManagementScreenTimeLimitUsageChange clearCategoryLimits]
  -[RMRemoteManagementScreenTimeLimitUsageChange categoryLimitAtIndex:]
  -[RMRemoteManagementScreenTimeLimitUsageChange categoryLimits]
  -[RMRemoteManagementScreenTimeLimitUsageChange setCategoryLimits:]


RMRemoteManagementScreenTimeNumberOfLimits : PBCodable /System/Library/Frameworks/UserNotifications.framework/UserNotifications <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasNumberOfAppLimits
 @property  unsigned long numberOfAppLimits
 @property  BOOL hasNumberOfCategoryLimits
 @property  unsigned long numberOfCategoryLimits

  // instance methods
  -[RMRemoteManagementScreenTimeNumberOfLimits copyWithZone:]
  -[RMRemoteManagementScreenTimeNumberOfLimits timestamp]
  -[RMRemoteManagementScreenTimeNumberOfLimits setTimestamp:]
  -[RMRemoteManagementScreenTimeNumberOfLimits setHasTimestamp:]
  -[RMRemoteManagementScreenTimeNumberOfLimits readFrom:]
  -[RMRemoteManagementScreenTimeNumberOfLimits writeTo:]
  -[RMRemoteManagementScreenTimeNumberOfLimits isEqual:]
  -[RMRemoteManagementScreenTimeNumberOfLimits copyTo:]
  -[RMRemoteManagementScreenTimeNumberOfLimits dictionaryRepresentation]
  -[RMRemoteManagementScreenTimeNumberOfLimits mergeFrom:]
  -[RMRemoteManagementScreenTimeNumberOfLimits hasTimestamp]
  -[RMRemoteManagementScreenTimeNumberOfLimits setNumberOfAppLimits:]
  -[RMRemoteManagementScreenTimeNumberOfLimits setHasNumberOfAppLimits:]
  -[RMRemoteManagementScreenTimeNumberOfLimits hasNumberOfAppLimits]
  -[RMRemoteManagementScreenTimeNumberOfLimits setNumberOfCategoryLimits:]
  -[RMRemoteManagementScreenTimeNumberOfLimits setHasNumberOfCategoryLimits:]
  -[RMRemoteManagementScreenTimeNumberOfLimits hasNumberOfCategoryLimits]
  -[RMRemoteManagementScreenTimeNumberOfLimits numberOfAppLimits]
  -[RMRemoteManagementScreenTimeNumberOfLimits numberOfCategoryLimits]


RMRemoteManagementScreenTimeReportingEnabled : PBCodable /System/Library/Frameworks/UserNotifications.framework/UserNotifications <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasEnabled
 @property  BOOL enabled

  // instance methods
  -[RMRemoteManagementScreenTimeReportingEnabled copyWithZone:]
  -[RMRemoteManagementScreenTimeReportingEnabled enabled]
  -[RMRemoteManagementScreenTimeReportingEnabled timestamp]
  -[RMRemoteManagementScreenTimeReportingEnabled setHasEnabled:]
  -[RMRemoteManagementScreenTimeReportingEnabled hasEnabled]
  -[RMRemoteManagementScreenTimeReportingEnabled setTimestamp:]
  -[RMRemoteManagementScreenTimeReportingEnabled setHasTimestamp:]
  -[RMRemoteManagementScreenTimeReportingEnabled readFrom:]
  -[RMRemoteManagementScreenTimeReportingEnabled writeTo:]
  -[RMRemoteManagementScreenTimeReportingEnabled isEqual:]
  -[RMRemoteManagementScreenTimeReportingEnabled setEnabled:]
  -[RMRemoteManagementScreenTimeReportingEnabled copyTo:]
  -[RMRemoteManagementScreenTimeReportingEnabled dictionaryRepresentation]
  -[RMRemoteManagementScreenTimeReportingEnabled mergeFrom:]
  -[RMRemoteManagementScreenTimeReportingEnabled hasTimestamp]


RMRemoteManagementScreenTimeState : PBCodable /System/Library/Frameworks/UserNotifications.framework/UserNotifications <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasScreenTimeEnabled
 @property  BOOL screenTimeEnabled
 @property  BOOL hasDaysWithScreenTimeEnabled
 @property  unsigned long daysWithScreenTimeEnabled
 @property  BOOL hasFamilyMemberType
 @property  NSString *familyMemberType
 @property  BOOL hasIsManaged
 @property  BOOL isManaged
 @property  BOOL hasIsManaging
 @property  BOOL isManaging
 @property  BOOL hasHasPasscode
 @property  BOOL hasPasscode
 @property  BOOL hasDowntimeEnabled
 @property  BOOL downtimeEnabled
 @property  BOOL hasCustomDowntimeEnabled
 @property  BOOL customDowntimeEnabled
 @property  BOOL hasNumberOfLimits
 @property  unsigned long numberOfLimits
 @property  NSMutableArray *limitedCategories
 @property  unsigned long daysSinceCreationDatesCount
 @property  ^Q daysSinceCreationDates
 @property  BOOL hasAlwaysAllowedAppsCount
 @property  unsigned long alwaysAllowedAppsCount
 @property  BOOL hasContentPrivacyRestrictionsEnabled
 @property  BOOL contentPrivacyRestrictionsEnabled

  // class methods
  +[RMRemoteManagementScreenTimeState limitedCategoriesType]

  // instance methods
  -[RMRemoteManagementScreenTimeState setScreenTimeEnabled:]
  -[RMRemoteManagementScreenTimeState setIsManaged:]
  -[RMRemoteManagementScreenTimeState isManaged]
  -[RMRemoteManagementScreenTimeState copyWithZone:]
  -[RMRemoteManagementScreenTimeState dealloc]
  -[RMRemoteManagementScreenTimeState .cxx_destruct]
  -[RMRemoteManagementScreenTimeState timestamp]
  -[RMRemoteManagementScreenTimeState setTimestamp:]
  -[RMRemoteManagementScreenTimeState isManaging]
  -[RMRemoteManagementScreenTimeState setHasTimestamp:]
  -[RMRemoteManagementScreenTimeState screenTimeEnabled]
  -[RMRemoteManagementScreenTimeState readFrom:]
  -[RMRemoteManagementScreenTimeState setHasScreenTimeEnabled:]
  -[RMRemoteManagementScreenTimeState hasScreenTimeEnabled]
  -[RMRemoteManagementScreenTimeState writeTo:]
  -[RMRemoteManagementScreenTimeState isEqual:]
  -[RMRemoteManagementScreenTimeState copyTo:]
  -[RMRemoteManagementScreenTimeState dictionaryRepresentation]
  -[RMRemoteManagementScreenTimeState mergeFrom:]
  -[RMRemoteManagementScreenTimeState hasTimestamp]
  -[RMRemoteManagementScreenTimeState hasPasscode]
  -[RMRemoteManagementScreenTimeState setFamilyMemberType:]
  -[RMRemoteManagementScreenTimeState hasFamilyMemberType]
  -[RMRemoteManagementScreenTimeState setHasIsManaged:]
  -[RMRemoteManagementScreenTimeState hasIsManaged]
  -[RMRemoteManagementScreenTimeState setIsManaging:]
  -[RMRemoteManagementScreenTimeState setHasIsManaging:]
  -[RMRemoteManagementScreenTimeState hasIsManaging]
  -[RMRemoteManagementScreenTimeState setHasPasscode:]
  -[RMRemoteManagementScreenTimeState setHasHasPasscode:]
  -[RMRemoteManagementScreenTimeState hasHasPasscode]
  -[RMRemoteManagementScreenTimeState familyMemberType]
  -[RMRemoteManagementScreenTimeState addLimitedCategories:]
  -[RMRemoteManagementScreenTimeState limitedCategoriesCount]
  -[RMRemoteManagementScreenTimeState clearLimitedCategories]
  -[RMRemoteManagementScreenTimeState limitedCategoriesAtIndex:]
  -[RMRemoteManagementScreenTimeState daysSinceCreationDatesCount]
  -[RMRemoteManagementScreenTimeState clearDaysSinceCreationDates]
  -[RMRemoteManagementScreenTimeState daysSinceCreationDateAtIndex:]
  -[RMRemoteManagementScreenTimeState addDaysSinceCreationDate:]
  -[RMRemoteManagementScreenTimeState setDaysWithScreenTimeEnabled:]
  -[RMRemoteManagementScreenTimeState setHasDaysWithScreenTimeEnabled:]
  -[RMRemoteManagementScreenTimeState hasDaysWithScreenTimeEnabled]
  -[RMRemoteManagementScreenTimeState setDowntimeEnabled:]
  -[RMRemoteManagementScreenTimeState setHasDowntimeEnabled:]
  -[RMRemoteManagementScreenTimeState hasDowntimeEnabled]
  -[RMRemoteManagementScreenTimeState setCustomDowntimeEnabled:]
  -[RMRemoteManagementScreenTimeState setHasCustomDowntimeEnabled:]
  -[RMRemoteManagementScreenTimeState hasCustomDowntimeEnabled]
  -[RMRemoteManagementScreenTimeState setNumberOfLimits:]
  -[RMRemoteManagementScreenTimeState setHasNumberOfLimits:]
  -[RMRemoteManagementScreenTimeState hasNumberOfLimits]
  -[RMRemoteManagementScreenTimeState daysSinceCreationDates]
  -[RMRemoteManagementScreenTimeState setDaysSinceCreationDates:count:]
  -[RMRemoteManagementScreenTimeState setAlwaysAllowedAppsCount:]
  -[RMRemoteManagementScreenTimeState setHasAlwaysAllowedAppsCount:]
  -[RMRemoteManagementScreenTimeState hasAlwaysAllowedAppsCount]
  -[RMRemoteManagementScreenTimeState setContentPrivacyRestrictionsEnabled:]
  -[RMRemoteManagementScreenTimeState setHasContentPrivacyRestrictionsEnabled:]
  -[RMRemoteManagementScreenTimeState hasContentPrivacyRestrictionsEnabled]
  -[RMRemoteManagementScreenTimeState daysWithScreenTimeEnabled]
  -[RMRemoteManagementScreenTimeState downtimeEnabled]
  -[RMRemoteManagementScreenTimeState customDowntimeEnabled]
  -[RMRemoteManagementScreenTimeState numberOfLimits]
  -[RMRemoteManagementScreenTimeState limitedCategories]
  -[RMRemoteManagementScreenTimeState setLimitedCategories:]
  -[RMRemoteManagementScreenTimeState alwaysAllowedAppsCount]
  -[RMRemoteManagementScreenTimeState contentPrivacyRestrictionsEnabled]


RMRemoteManagementScreenTimeViewUsage : PBCodable /System/Library/Frameworks/UserNotifications.framework/UserNotifications <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasFamilyMemberType
 @property  NSString *familyMemberType
 @property  BOOL hasIsManaged
 @property  BOOL isManaged
 @property  BOOL hasHasPasscode
 @property  BOOL hasPasscode
 @property  BOOL hasRemoteUser
 @property  BOOL remoteUser
 @property  BOOL hasDaysSinceLastView
 @property  unsigned long daysSinceLastView

  // instance methods
  -[RMRemoteManagementScreenTimeViewUsage setIsManaged:]
  -[RMRemoteManagementScreenTimeViewUsage isManaged]
  -[RMRemoteManagementScreenTimeViewUsage copyWithZone:]
  -[RMRemoteManagementScreenTimeViewUsage .cxx_destruct]
  -[RMRemoteManagementScreenTimeViewUsage timestamp]
  -[RMRemoteManagementScreenTimeViewUsage setTimestamp:]
  -[RMRemoteManagementScreenTimeViewUsage setHasTimestamp:]
  -[RMRemoteManagementScreenTimeViewUsage readFrom:]
  -[RMRemoteManagementScreenTimeViewUsage setRemoteUser:]
  -[RMRemoteManagementScreenTimeViewUsage writeTo:]
  -[RMRemoteManagementScreenTimeViewUsage isEqual:]
  -[RMRemoteManagementScreenTimeViewUsage copyTo:]
  -[RMRemoteManagementScreenTimeViewUsage dictionaryRepresentation]
  -[RMRemoteManagementScreenTimeViewUsage mergeFrom:]
  -[RMRemoteManagementScreenTimeViewUsage hasTimestamp]
  -[RMRemoteManagementScreenTimeViewUsage hasPasscode]
  -[RMRemoteManagementScreenTimeViewUsage setFamilyMemberType:]
  -[RMRemoteManagementScreenTimeViewUsage hasFamilyMemberType]
  -[RMRemoteManagementScreenTimeViewUsage setHasIsManaged:]
  -[RMRemoteManagementScreenTimeViewUsage hasIsManaged]
  -[RMRemoteManagementScreenTimeViewUsage setHasPasscode:]
  -[RMRemoteManagementScreenTimeViewUsage setHasHasPasscode:]
  -[RMRemoteManagementScreenTimeViewUsage hasHasPasscode]
  -[RMRemoteManagementScreenTimeViewUsage familyMemberType]
  -[RMRemoteManagementScreenTimeViewUsage setHasRemoteUser:]
  -[RMRemoteManagementScreenTimeViewUsage hasRemoteUser]
  -[RMRemoteManagementScreenTimeViewUsage setDaysSinceLastView:]
  -[RMRemoteManagementScreenTimeViewUsage setHasDaysSinceLastView:]
  -[RMRemoteManagementScreenTimeViewUsage hasDaysSinceLastView]
  -[RMRemoteManagementScreenTimeViewUsage remoteUser]
  -[RMRemoteManagementScreenTimeViewUsage daysSinceLastView]


STAdminPersistenceController : STPersistenceController
  // class methods
  +[STAdminPersistenceController sharedController]

  // instance methods
  -[STAdminPersistenceController init]
  -[STAdminPersistenceController newBackgroundContext]


STAppInfo : NSObject /usr/lib/libSystem.B.dylib
 @property  long long source
 @property  NSString *bundleIdentifier
 @property  NSString *displayName
 @property  short platform
 @property  NSString *developerName
 @property  NSString *ratingLabel
 @property  NSURL *localURL
 @property  NSURL *artworkURL
 @property  NSData *artworkData

  // instance methods
  -[STAppInfo artworkURL]
  -[STAppInfo setArtworkURL:]
  -[STAppInfo localURL]
  -[STAppInfo setSource:]
  -[STAppInfo source]
  -[STAppInfo .cxx_destruct]
  -[STAppInfo setRatingLabel:]
  -[STAppInfo artworkData]
  -[STAppInfo developerName]
  -[STAppInfo setLocalURL:]
  -[STAppInfo setDeveloperName:]
  -[STAppInfo setBundleIdentifier:]
  -[STAppInfo setArtworkData:]
  -[STAppInfo setDisplayName:]
  -[STAppInfo ratingLabel]
  -[STAppInfo platform]
  -[STAppInfo bundleIdentifier]
  -[STAppInfo setPlatform:]
  -[STAppInfo displayName]


STAppInfoCache : NSObject /usr/lib/libSystem.B.dylib
 @property  NSCache *appInfoByBundleIdentifier
 @property  NSObject<OS_dispatch_queue> *lookupQueue
 @property  NSURLSession *urlSession
 @property  NSMutableSet *bundleIdentifiersWithPendingRequests
 @property  NSOperationQueue *completionHandlerQueue
 @property  NSPersistentContainer *persistentContainer

  // class methods
  +[STAppInfoCache sharedCache]

  // instance methods
  -[STAppInfoCache persistentContainer]
  -[STAppInfoCache urlSession]
  -[STAppInfoCache appInfoForBundleIdentifier:]
  -[STAppInfoCache _preloadedAppInfoWithBundleIdentifier:]
  -[STAppInfoCache init]
  -[STAppInfoCache _handleiTunesResponseForBundleIdentifiers:response:data:error:completionHandler:]
  -[STAppInfoCache _fetchAppInfoFromLaunchServicesWithBundleIdentifier:]
  -[STAppInfoCache _fetchAppStoreInfoAndNotifyWithBundleIdentifiers:timeoutInterval:completionHandler:]
  -[STAppInfoCache appInfoByBundleIdentifier]
  -[STAppInfoCache completionHandlerQueue]
  -[STAppInfoCache dealloc]
  -[STAppInfoCache fetchAppInfoForBundleIdentifier:completionHandler:]
  -[STAppInfoCache .cxx_destruct]
  -[STAppInfoCache _appInfoForBundleIdentifier:]
  -[STAppInfoCache _placeholderAppInfoWithBundleIdentifier:]
  -[STAppInfoCache lookupQueue]
  -[STAppInfoCache setPersistentContainer:]
  -[STAppInfoCache _localAppNameForBundleIdentifier:]
  -[STAppInfoCache bundleIdentifiersWithPendingRequests]
  -[STAppInfoCache _finishedFetchingAppInfoByBundleIdentifier:]
  -[STAppInfoCache fetchAppInfoForBundleIdentifiers:completionHandler:]
  -[STAppInfoCache _fetchAppStoreInfoAndNotifyWithBundleIdentifiers:]
  -[STAppInfoCache appInfoForBundleIdentifier:localOnly:]
  -[STAppInfoCache _fetchSyncedInstalledAppInfoForBundleIdentifier:]
  -[STAppInfoCache removeObserver:bundleIdentifier:]
  -[STAppInfoCache addObserver:selector:bundleIdentifier:]


STAppLimitWarningUserNotificationContext : STUserNotificationContext
  // class methods
  +[STAppLimitWarningUserNotificationContext supportsSecureCoding]

  // instance methods
  -[STAppLimitWarningUserNotificationContext customizeNotificationContent:withCompletionBlock:]
  -[STAppLimitWarningUserNotificationContext setLimitDisplayName:timeLeft:]


STAskForTimeApprovedResponseReceivedUserNotificationContext : STUserNotificationContext
 @property  NSString *parentName
 @property  NSString *requestedResourceName
 @property  double amountGranted

  // class methods
  +[STAskForTimeApprovedResponseReceivedUserNotificationContext supportsSecureCoding]

  // instance methods
  -[STAskForTimeApprovedResponseReceivedUserNotificationContext .cxx_destruct]
  -[STAskForTimeApprovedResponseReceivedUserNotificationContext encodeWithCoder:]
  -[STAskForTimeApprovedResponseReceivedUserNotificationContext initWithCoder:]
  -[STAskForTimeApprovedResponseReceivedUserNotificationContext customizeNotificationContent:withCompletionBlock:]
  -[STAskForTimeApprovedResponseReceivedUserNotificationContext amountGranted]
  -[STAskForTimeApprovedResponseReceivedUserNotificationContext parentName]
  -[STAskForTimeApprovedResponseReceivedUserNotificationContext requestedResourceName]
  -[STAskForTimeApprovedResponseReceivedUserNotificationContext initWithAskForTimeRequestIdentifier:parentName:requestedResourceName:amountGranted:]
  -[STAskForTimeApprovedResponseReceivedUserNotificationContext setParentName:]
  -[STAskForTimeApprovedResponseReceivedUserNotificationContext setRequestedResourceName:]
  -[STAskForTimeApprovedResponseReceivedUserNotificationContext setAmountGranted:]


STAskForTimeClient : NSObject /usr/lib/libSystem.B.dylib <STAskForTimeInterface>
 @property  NSXPCConnection *xpcConnection
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[STAskForTimeClient init]
  -[STAskForTimeClient xpcConnection]
  -[STAskForTimeClient dealloc]
  -[STAskForTimeClient .cxx_destruct]
  -[STAskForTimeClient sendAskForTimeRequest:completionHandler:]
  -[STAskForTimeClient approveExceptionForRequest:completionHandler:]
  -[STAskForTimeClient fetchLastResponseForRequestedResourceIdentifier:usageType:withCompletionHandler:]
  -[STAskForTimeClient handleAnswer:requestIdentifier:timeApproved:completionHandler:]
  -[STAskForTimeClient _asynchronousProxyWithHandler:]
  -[STAskForTimeClient _synchronousProxyWithHandler:]


STAskForTimeNotApprovedResponseReceivedUserNotificationContext : STUserNotificationContext
 @property  NSString *parentName
 @property  NSString *requestedResourceName

  // class methods
  +[STAskForTimeNotApprovedResponseReceivedUserNotificationContext supportsSecureCoding]

  // instance methods
  -[STAskForTimeNotApprovedResponseReceivedUserNotificationContext .cxx_destruct]
  -[STAskForTimeNotApprovedResponseReceivedUserNotificationContext encodeWithCoder:]
  -[STAskForTimeNotApprovedResponseReceivedUserNotificationContext initWithCoder:]
  -[STAskForTimeNotApprovedResponseReceivedUserNotificationContext customizeNotificationContent:withCompletionBlock:]
  -[STAskForTimeNotApprovedResponseReceivedUserNotificationContext parentName]
  -[STAskForTimeNotApprovedResponseReceivedUserNotificationContext requestedResourceName]
  -[STAskForTimeNotApprovedResponseReceivedUserNotificationContext setParentName:]
  -[STAskForTimeNotApprovedResponseReceivedUserNotificationContext setRequestedResourceName:]
  -[STAskForTimeNotApprovedResponseReceivedUserNotificationContext initWithAskForTimeRequestIdentifier:parentName:requestedResourceName:]


STAskForTimeRequest : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  BOOL oneMoreMinute
 @property  NSString *resourceDisplayName
 @property  NSNumber *timeRequested
 @property  NSDate *timeStamp
 @property  NSDictionary *payload
 @property  long long usageType
 @property  NSString *requestedResourceIdentifier
 @property  NSUUID *requestIdentifier
 @property  NSNumber *requestingUserDSID
 @property  NSString *requestingUserDisplayName

  // class methods
  +[STAskForTimeRequest supportsSecureCoding]

  // instance methods
  -[STAskForTimeRequest setRequestIdentifier:]
  -[STAskForTimeRequest payload]
  -[STAskForTimeRequest requestIdentifier]
  -[STAskForTimeRequest usageType]
  -[STAskForTimeRequest .cxx_destruct]
  -[STAskForTimeRequest timeStamp]
  -[STAskForTimeRequest encodeWithCoder:]
  -[STAskForTimeRequest setTimeStamp:]
  -[STAskForTimeRequest initWithCoder:]
  -[STAskForTimeRequest initWithPayload:]
  -[STAskForTimeRequest initWithUsageType:requestedResourceIdentifier:]
  -[STAskForTimeRequest requestedResourceIdentifier]
  -[STAskForTimeRequest resourceDisplayName]
  -[STAskForTimeRequest timeRequested]
  -[STAskForTimeRequest oneMoreMinute]
  -[STAskForTimeRequest requestingUserDSID]
  -[STAskForTimeRequest requestingUserDisplayName]
  -[STAskForTimeRequest setOneMoreMinute:]
  -[STAskForTimeRequest setResourceDisplayName:]
  -[STAskForTimeRequest setTimeRequested:]
  -[STAskForTimeRequest setRequestingUserDSID:]
  -[STAskForTimeRequest setRequestingUserDisplayName:]


STAskForTimeRequestReceivedUserNotificationContext : STUserNotificationContext
 @property  NSString *childName
 @property  NSNumber *childDSID

  // class methods
  +[STAskForTimeRequestReceivedUserNotificationContext supportsSecureCoding]

  // instance methods
  -[STAskForTimeRequestReceivedUserNotificationContext .cxx_destruct]
  -[STAskForTimeRequestReceivedUserNotificationContext encodeWithCoder:]
  -[STAskForTimeRequestReceivedUserNotificationContext initWithCoder:]
  -[STAskForTimeRequestReceivedUserNotificationContext customizeNotificationContent:withCompletionBlock:]
  -[STAskForTimeRequestReceivedUserNotificationContext initWithAskForTimeRequestIdentifier:childName:childDSID:requestedResourceName:]
  -[STAskForTimeRequestReceivedUserNotificationContext childDSID]
  -[STAskForTimeRequestReceivedUserNotificationContext _fetchAndWriteFamilyPhotoURLIfNeeded:]
  -[STAskForTimeRequestReceivedUserNotificationContext initWithAskForTimeRequestIdentifier:familyMember:requestedResourceName:]
  -[STAskForTimeRequestReceivedUserNotificationContext childName]
  -[STAskForTimeRequestReceivedUserNotificationContext setChildName:]
  -[STAskForTimeRequestReceivedUserNotificationContext setChildDSID:]


STAskForTimeRequestResponse : NSManagedObject /System/Library/Frameworks/CoreServices.framework/CoreServices
 @property  NSUUID *identifier
 @property  NSNumber *timeRequested
 @property  long long usageType
 @property  NSDate *expirationDate
 @property  NSString *requestedApplicationBundleIdentifier
 @property  NSString *requestedCategoryIdentifier
 @property  NSString *requestedWebDomain
 @property  STCoreUser *requestingUser
 @property  NSDate *requestTimeStamp
 @property  NSNumber *amountGranted
 @property  NSNumber *answer
 @property  NSDate *responseTimeStamp
 @property  STCoreUser *respondingUser
 @property  STFamilyOrganization *familyOrganization

  // class methods
  +[STAskForTimeRequestResponse _fetchPredicateForAskForTimeRequest:requestingUserDSID:]
  +[STAskForTimeRequestResponse upsertAskForTimeRequest:fromUser:inContext:error:]

  // instance methods
  -[STAskForTimeRequestResponse awakeFromInsert]


STAskForTimeResource : NSObject /usr/lib/libSystem.B.dylib
 @property  STAskForTimeClient *askForTimeClient
 @property  STAskForTimeRequest *request
 @property  int notificationToken
 @property  @? changeHandler

  // instance methods
  -[STAskForTimeResource notificationToken]
  -[STAskForTimeResource changeHandler]
  -[STAskForTimeResource dealloc]
  -[STAskForTimeResource .cxx_destruct]
  -[STAskForTimeResource request]
  -[STAskForTimeResource checkRequestForAdditionalTimeWithResponseHandler:]
  -[STAskForTimeResource askForTimeClient]
  -[STAskForTimeResource _approveExceptionForRequest:withCompletionHandler:]
  -[STAskForTimeResource initWithResourceIdentifier:resourceDisplayName:usageType:changeHandler:]
  -[STAskForTimeResource requestAdditionalTime:completionHandler:]
  -[STAskForTimeResource approveAdditionalTime:completionHandler:]
  -[STAskForTimeResource approveOneMoreMinuteWithCompletionHandler:]
  -[STAskForTimeResource cancelOutstandingRequestsWithCompletion:]
  -[STAskForTimeResource setAskForTimeClient:]


STAskForTimeApplicationResource : STAskForTimeResource
  // instance methods
  -[STAskForTimeApplicationResource initWithBundleIdentifier:changeHandler:]


STAskForTimeWebsiteResource : STAskForTimeResource
  // instance methods
  -[STAskForTimeWebsiteResource initWithWebsiteDomain:changeHandler:]


STAskForTimeCategoryResource : STAskForTimeResource
  // instance methods
  -[STAskForTimeCategoryResource initWithCategoryIdentifier:changeHandler:]


STAskForTimeResponse : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSUUID *associatedRequestIdentifier
 @property  long long answer
 @property  NSNumber *respondingUserDSID
 @property  NSNumber *amountGranted
 @property  NSDate *timeStamp
 @property  NSDictionary *payload

  // class methods
  +[STAskForTimeResponse supportsSecureCoding]

  // instance methods
  -[STAskForTimeResponse answer]
  -[STAskForTimeResponse payload]
  -[STAskForTimeResponse init]
  -[STAskForTimeResponse setAnswer:]
  -[STAskForTimeResponse .cxx_destruct]
  -[STAskForTimeResponse timeStamp]
  -[STAskForTimeResponse encodeWithCoder:]
  -[STAskForTimeResponse setTimeStamp:]
  -[STAskForTimeResponse initWithCoder:]
  -[STAskForTimeResponse initWithPayload:]
  -[STAskForTimeResponse amountGranted]
  -[STAskForTimeResponse setAmountGranted:]
  -[STAskForTimeResponse associatedRequestIdentifier]
  -[STAskForTimeResponse respondingUserDSID]
  -[STAskForTimeResponse setAssociatedRequestIdentifier:]
  -[STAskForTimeResponse setRespondingUserDSID:]


STAskToManageContactsApprovedResponseReceivedUserNotificationContext : STUserNotificationContext
 @property  NSString *childName

  // class methods
  +[STAskToManageContactsApprovedResponseReceivedUserNotificationContext supportsSecureCoding]

  // instance methods
  -[STAskToManageContactsApprovedResponseReceivedUserNotificationContext .cxx_destruct]
  -[STAskToManageContactsApprovedResponseReceivedUserNotificationContext encodeWithCoder:]
  -[STAskToManageContactsApprovedResponseReceivedUserNotificationContext initWithCoder:]
  -[STAskToManageContactsApprovedResponseReceivedUserNotificationContext customizeNotificationContent:withCompletionBlock:]
  -[STAskToManageContactsApprovedResponseReceivedUserNotificationContext childName]
  -[STAskToManageContactsApprovedResponseReceivedUserNotificationContext setChildName:]
  -[STAskToManageContactsApprovedResponseReceivedUserNotificationContext initWithChildName:]


STAskToManageContactsNotApprovedResponseReceivedUserNotificationContext : STUserNotificationContext
 @property  NSString *childName

  // class methods
  +[STAskToManageContactsNotApprovedResponseReceivedUserNotificationContext supportsSecureCoding]

  // instance methods
  -[STAskToManageContactsNotApprovedResponseReceivedUserNotificationContext .cxx_destruct]
  -[STAskToManageContactsNotApprovedResponseReceivedUserNotificationContext encodeWithCoder:]
  -[STAskToManageContactsNotApprovedResponseReceivedUserNotificationContext initWithCoder:]
  -[STAskToManageContactsNotApprovedResponseReceivedUserNotificationContext customizeNotificationContent:withCompletionBlock:]
  -[STAskToManageContactsNotApprovedResponseReceivedUserNotificationContext childName]
  -[STAskToManageContactsNotApprovedResponseReceivedUserNotificationContext setChildName:]
  -[STAskToManageContactsNotApprovedResponseReceivedUserNotificationContext initWithChildName:]


STAskToManageContactsRequestReceivedUserNotificationContext : STUserNotificationContext
  // instance methods
  -[STAskToManageContactsRequestReceivedUserNotificationContext init]
  -[STAskToManageContactsRequestReceivedUserNotificationContext customizeNotificationContent:withCompletionBlock:]


STBlueprint : STUniquedManagedObject <STSerializableMappedObject, STUniquelySerializableManagedObject, STVersionVectorable>
 @property  BOOL downtimeEnabled
 @property  NSString *downtimeScheduleText
 @property  BOOL usageLimitEnabled
 @property  NSString *limitDisplayName
 @property  NSString *limitScheduleText
 @property  BOOL isTombstoned
 @property  BOOL invertUsageLimit
 @property  NSString *identifier
 @property  NSDate *creationDate
 @property  NSString *type
 @property  BOOL enabled
 @property  BOOL limitEnabled
 @property  NSDate *expiration
 @property  NSDate *minimumInstallationDate
 @property  NSSet *users
 @property  STBlueprintSchedule *schedule
 @property  STBlueprintUsageLimit *usageLimit
 @property  NSSet *configurations
 @property  STCoreOrganization *organization
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSData *versionVector
 @property  BOOL isDirty

  // class methods
  +[STBlueprint fetchRequestMatchingBlueprintsForUserWithDSID:ofType:fromOrganization:]
  +[STBlueprint customScheduleTimeRangeWithLocale:startTimeComponents:endTimeComponents:]
  +[STBlueprint fetchDisplayNameForUsageLimitWithCategoryIdentifiers:bundleIdentifiers:webDomains:completionHandler:]
  +[STBlueprint saveDowntimeForUser:startTime:endTime:scheduleByWeekdayIndex:enabled:behaviorType:error:]
  +[STBlueprint fetchRequestMatchingOrphanedBlueprints]
  +[STBlueprint fetchResultsRequestsForChangesToBlueprintsForUserWithDSID:]
  +[STBlueprint displayNameForUsageLimitWithCategoryIdentifiers:bundleIdentifiers:webDomains:]
  +[STBlueprint fetchRequestMatchingExpiredBlueprints]
  +[STBlueprint keyPathsForValuesAffectingLimitDisplayName]
  +[STBlueprint fetchRequestMatchingBlueprintsForUserWithDSID:fromOrganization:]
  +[STBlueprint _fetchRequestMatchingBlueprintsForUserWithDSID:]
  +[STBlueprint defaultEndTime]
  +[STBlueprint scheduleTextWithLocale:weekdayScheduleComparator:scheduleTimeGetter:]
  +[STBlueprint simpleScheduleTimeRangeWithStartTimeComponents:endTimeComponents:]
  +[STBlueprint saveManagedUserBlueprintForUser:error:]
  +[STBlueprint fetchOrCreateWithDictionaryRepresentation:inContext:error:]
  +[STBlueprint _createDisplayNameWithItemNames:itemCount:completionHandler:]
  +[STBlueprint _getDisplayNameAndAddCategories:toItemNames:remainingItems:]
  +[STBlueprint defaultStartTime]
  +[STBlueprint fetchRequestMatchingBlueprintsForUserWithDSID:ofType:withIdentifier:fromOrganization:]
  +[STBlueprint _addWebDomains:toItemNames:remainingItems:totalCount:completionHandler:]
  +[STBlueprint keyPathsForValuesAffectingLimitScheduleText]
  +[STBlueprint fetchRequestMatchingUnexpiredOneMoreMinuteBlueprints]
  +[STBlueprint saveAlwaysAllowListForUser:withBundleIDs:error:]
  +[STBlueprint saveUsageLimitWithIdentifier:user:bundleIdentifiers:webDomains:categoryIdentifiers:dailyBudgetLimit:budgetLimitByWeekday:enabled:behaviorType:error:]
  +[STBlueprint defaultAlwaysAllowBundleIDs]
  +[STBlueprint serializableClassName]
  +[STBlueprint deleteUsageLimitWithIdentifier:user:managedObjectContext:error:]
  +[STBlueprint fetchResultsRequestsForChangesToBlueprints]
  +[STBlueprint deleteManagedUserBlueprintForUser:error:]
  +[STBlueprint keyPathsForValuesAffectingDowntimeScheduleText]
  +[STBlueprint fetchRequestMatchingBlueprintsForUserWithDSID:ofType:]
  +[STBlueprint blueprintIdentifierForUser:]
  +[STBlueprint createBlueprintWithType:user:]

  // instance methods
  -[STBlueprint tombstone]
  -[STBlueprint didChangeValueForKey:]
  -[STBlueprint computeUniqueIdentifier]
  -[STBlueprint permitWebFilterURL:pageTitle:error:]
  -[STBlueprint updateWithDictionaryRepresentation:]
  -[STBlueprint dictionaryRepresentation]
  -[STBlueprint setDowntimeEnabled:]
  -[STBlueprint declarationsWithError:]
  -[STBlueprint migrateToVersion2CategoriesIfNeeded]
  -[STBlueprint setStartTime:endTime:]
  -[STBlueprint setStartTime:endTime:forDay:]
  -[STBlueprint isDowntimeEnabled]
  -[STBlueprint disableDowntimeForDay:]
  -[STBlueprint downtimeScheduleText]
  -[STBlueprint _webFilterBlacklistStringsForURL:]
  -[STBlueprint isUsageLimitEnabled]
  -[STBlueprint setUsageLimitEnabled:]
  -[STBlueprint limitDisplayName]
  -[STBlueprint limitScheduleText]


STBlueprintConfiguration : NSManagedObject /System/Library/Frameworks/CoreServices.framework/CoreServices <STSyncableSubObject, STUniquelySerializableManagedObject>
 @property  NSString *identifier
 @property  NSString *type
 @property  NSData *payloadPlist
 @property  STBlueprint *blueprint
 @property  <STSerializableManagedObject> *syncableRootObject
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[STBlueprintConfiguration cemConfigurationIdentifierWithType:forUser:]
  +[STBlueprintConfiguration blueprintConfigurationTypeForDeclaration:]
  +[STBlueprintConfiguration fetchOrCreateWithDictionaryRepresentation:inContext:error:]
  +[STBlueprintConfiguration fetchRequestMatchingBlueprintsForUserWithDSID:ofType:]
  +[STBlueprintConfiguration cemDeclarationClassForConfigurationType:]

  // instance methods
  -[STBlueprintConfiguration syncableRootObject]
  -[STBlueprintConfiguration updateWithDictionaryRepresentation:]
  -[STBlueprintConfiguration dictionaryRepresentation]
  -[STBlueprintConfiguration cemConfiguration]
  -[STBlueprintConfiguration setCemConfiguration:]


STBlueprintScheduleSimpleItem : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  NSDateComponents *startTime
 @property  NSDateComponents *endTime

  // instance methods
  -[STBlueprintScheduleSimpleItem endTime]
  -[STBlueprintScheduleSimpleItem copyWithZone:]
  -[STBlueprintScheduleSimpleItem setEndTime:]
  -[STBlueprintScheduleSimpleItem setStartTime:]
  -[STBlueprintScheduleSimpleItem .cxx_destruct]
  -[STBlueprintScheduleSimpleItem startTime]


STBlueprintScheduleCustomDayItem : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  NSDateComponents *startTime
 @property  NSDateComponents *endTime
 @property  unsigned long day

  // instance methods
  -[STBlueprintScheduleCustomDayItem endTime]
  -[STBlueprintScheduleCustomDayItem copyWithZone:]
  -[STBlueprintScheduleCustomDayItem setEndTime:]
  -[STBlueprintScheduleCustomDayItem setStartTime:]
  -[STBlueprintScheduleCustomDayItem day]
  -[STBlueprintScheduleCustomDayItem setDay:]
  -[STBlueprintScheduleCustomDayItem .cxx_destruct]
  -[STBlueprintScheduleCustomDayItem startTime]


STBlueprintScheduleRepresentation : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  STBlueprintScheduleSimpleItem *simpleSchedule
 @property  NSArray *customScheduleItems

  // instance methods
  -[STBlueprintScheduleRepresentation copyWithZone:]
  -[STBlueprintScheduleRepresentation .cxx_destruct]
  -[STBlueprintScheduleRepresentation customScheduleItems]
  -[STBlueprintScheduleRepresentation simpleSchedule]
  -[STBlueprintScheduleRepresentation setSimpleSchedule:]
  -[STBlueprintScheduleRepresentation setCustomScheduleItems:]


STBlueprintSchedule : NSManagedObject /System/Library/Frameworks/CoreServices.framework/CoreServices <STSerializableManagedObject, STSyncableSubObject>
 @property  NSDate *day0Start
 @property  NSDate *day1Start
 @property  NSDate *day2Start
 @property  NSDate *day3Start
 @property  NSDate *day4Start
 @property  NSDate *day5Start
 @property  NSDate *day6Start
 @property  NSDate *day0End
 @property  NSDate *day1End
 @property  NSDate *day2End
 @property  NSDate *day3End
 @property  NSDate *day4End
 @property  NSDate *day5End
 @property  NSDate *day6End
 @property  STBlueprint *blueprint
 @property  NSString *calendarIdentifier
 @property  NSNumber *notificationTimeInterval
 @property  STBlueprintScheduleRepresentation *scheduleRepresentation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <STSerializableManagedObject> *syncableRootObject

  // class methods
  +[STBlueprintSchedule startDateKeyPaths]
  +[STBlueprintSchedule keyPathsForValuesAffectingScheduleRepresentation]
  +[STBlueprintSchedule endDateKeyPaths]

  // instance methods
  -[STBlueprintSchedule syncableRootObject]
  -[STBlueprintSchedule updateWithDictionaryRepresentation:]
  -[STBlueprintSchedule dictionaryRepresentation]
  -[STBlueprintSchedule scheduleRepresentation]
  -[STBlueprintSchedule setStartTime:endTime:]
  -[STBlueprintSchedule setStartTime:endTime:forDay:]
  -[STBlueprintSchedule setScheduleRepresentation:]


STBlueprintUsageLimitScheduleSimpleItem : NSObject /usr/lib/libSystem.B.dylib
 @property  double budgetLimit

  // instance methods
  -[STBlueprintUsageLimitScheduleSimpleItem budgetLimit]
  -[STBlueprintUsageLimitScheduleSimpleItem setBudgetLimit:]


STBlueprintUsageLimitScheduleCustomDayItem : NSObject /usr/lib/libSystem.B.dylib
 @property  double budgetLimit
 @property  unsigned long day

  // instance methods
  -[STBlueprintUsageLimitScheduleCustomDayItem day]
  -[STBlueprintUsageLimitScheduleCustomDayItem setDay:]
  -[STBlueprintUsageLimitScheduleCustomDayItem budgetLimit]
  -[STBlueprintUsageLimitScheduleCustomDayItem setBudgetLimit:]


STBlueprintUsageLimitScheduleRepresentation : NSObject /usr/lib/libSystem.B.dylib
 @property  STBlueprintUsageLimitScheduleSimpleItem *simpleSchedule
 @property  NSArray *customScheduleItems

  // instance methods
  -[STBlueprintUsageLimitScheduleRepresentation .cxx_destruct]
  -[STBlueprintUsageLimitScheduleRepresentation customScheduleItems]
  -[STBlueprintUsageLimitScheduleRepresentation simpleSchedule]
  -[STBlueprintUsageLimitScheduleRepresentation setSimpleSchedule:]
  -[STBlueprintUsageLimitScheduleRepresentation setCustomScheduleItems:]


STBlueprintUsageLimit : NSManagedObject /System/Library/Frameworks/CoreServices.framework/CoreServices <STSerializableManagedObject, STSyncableSubObject>
 @property  double day0Limit
 @property  double day1Limit
 @property  double day2Limit
 @property  double day3Limit
 @property  double day4Limit
 @property  double day5Limit
 @property  double day6Limit
 @property  STBlueprint *blueprint
 @property  NSArray *applicationIdentifiers
 @property  NSArray *categoryIdentifiersVersion2
 @property  NSArray *websiteIdentifiers
 @property  NSNumber *notificationTimeInterval
 @property  STBlueprintUsageLimitScheduleRepresentation *budgetLimitScheduleRepresentation
 @property  NSString *usageItemType
 @property  NSArray *itemIdentifiers
 @property  NSArray *categoryIdentifiers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <STSerializableManagedObject> *syncableRootObject

  // class methods
  +[STBlueprintUsageLimit limitKeyPaths]
  +[STBlueprintUsageLimit keyPathsForValuesAffectingBudgetLimitScheduleRepresentation]

  // instance methods
  -[STBlueprintUsageLimit awakeFromFetch]
  -[STBlueprintUsageLimit syncableRootObject]
  -[STBlueprintUsageLimit setItemIdentifiers:]
  -[STBlueprintUsageLimit updateWithDictionaryRepresentation:]
  -[STBlueprintUsageLimit setCategoryIdentifiers:]
  -[STBlueprintUsageLimit dictionaryRepresentation]
  -[STBlueprintUsageLimit setUsageItemType:]
  -[STBlueprintUsageLimit budgetLimitScheduleRepresentation]
  -[STBlueprintUsageLimit setCategoryIdentifiersVersion2:]
  -[STBlueprintUsageLimit setApplicationIdentifiers:]
  -[STBlueprintUsageLimit setWebsiteIdentifiers:]
  -[STBlueprintUsageLimit setBudgetLimit:forDay:]
  -[STBlueprintUsageLimit setBudgetLimit:]
  -[STBlueprintUsageLimit _usageLimitDidChangeFromOldApplicationIdentifiers:oldCategoryIdentifiers:oldCategoryIdentifiersVersion2:oldWebDomains:oldItemIdentifiers:oldItemType:toNewApplicationIdentifiers:newCategoryIdentifiers:newCategoryIdentifiersVersion2:newWebDomains:newItemIdentifiers:newItemType:]
  -[STBlueprintUsageLimit setBudgetLimitScheduleRepresentation:]


STCloudApp : NSManagedObject /System/Library/Frameworks/CoreServices.framework/CoreServices

STCloudCategory : NSManagedObject /System/Library/Frameworks/CoreServices.framework/CoreServices

STCloudConfiguration : NSManagedObject /System/Library/Frameworks/CoreServices.framework/CoreServices

STCloudDevice : NSManagedObject /System/Library/Frameworks/CoreServices.framework/CoreServices

STCloudOrganization : NSManagedObject /System/Library/Frameworks/CoreServices.framework/CoreServices

STCloudUsageDeviceIdentifier : NSManagedObject /System/Library/Frameworks/CoreServices.framework/CoreServices

STCloudUser : NSManagedObject /System/Library/Frameworks/CoreServices.framework/CoreServices

STCloudUserDevicePair : NSManagedObject /System/Library/Frameworks/CoreServices.framework/CoreServices

STCloudActivation : STUniquedManagedObject <STReconcilableObject, STSerializableManagedObject>
 @property  long long activationType
 @property  NSData *activationPlist
 @property  NSString *ckRecordID
 @property  NSData *ckRecordSystemFields
 @property  NSString *identifier
 @property  NSUUID *sortKey
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[STCloudActivation reconcileWithManagedObjectContext:andUpdateLosers:error:]

  // instance methods
  -[STCloudActivation didChangeValueForKey:]
  -[STCloudActivation computeUniqueIdentifier]
  -[STCloudActivation updateWithDictionaryRepresentation:]
  -[STCloudActivation dictionaryRepresentation]


STConfigurationScheduleDay : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSDateComponents *startTime
 @property  NSDateComponents *endTime
 @property  unsigned long weekday

  // class methods
  +[STConfigurationScheduleDay supportsSecureCoding]

  // instance methods
  -[STConfigurationScheduleDay weekday]
  -[STConfigurationScheduleDay endTime]
  -[STConfigurationScheduleDay copyWithZone:]
  -[STConfigurationScheduleDay .cxx_destruct]
  -[STConfigurationScheduleDay encodeWithCoder:]
  -[STConfigurationScheduleDay isEqual:]
  -[STConfigurationScheduleDay initWithCoder:]
  -[STConfigurationScheduleDay startTime]
  -[STConfigurationScheduleDay initWithStartTime:endTime:weekday:]
  -[STConfigurationScheduleDay isEqualToConfigurationScheduleDay:]


STConfigurationSchedule : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  BOOL allDaysTheSame
 @property  NSDictionary *scheduleDaysByWeekdayIndex

  // class methods
  +[STConfigurationSchedule supportsSecureCoding]

  // instance methods
  -[STConfigurationSchedule copyWithZone:]
  -[STConfigurationSchedule .cxx_destruct]
  -[STConfigurationSchedule encodeWithCoder:]
  -[STConfigurationSchedule isEqual:]
  -[STConfigurationSchedule initWithCoder:]
  -[STConfigurationSchedule initWithScheduleDays:]
  -[STConfigurationSchedule scheduleDaysByWeekdayIndex]
  -[STConfigurationSchedule isEqualToConfigurationSchedule:]
  -[STConfigurationSchedule initWithRepeatedScheduleDay:]
  -[STConfigurationSchedule allDaysTheSame]
  -[STConfigurationSchedule setAllDaysTheSame:]


STConversationContext : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL allowedByScreenTime
 @property  NSDictionary *allowedByContactsHandle
 @property  BOOL applicationCurrentlyLimited
 @property  BOOL shouldBeAllowedByScreenTimeWhenLimited
 @property  BOOL shouldBeAllowedDuringGeneralScreenTime
 @property  NSDictionary *contactsByHandle
 @property  NSArray *whitelistedHandles
 @property  unsigned long currentApplicationState
 @property  BOOL emergencyModeEnabled

  // instance methods
  -[STConversationContext setApplicationCurrentlyLimited:]
  -[STConversationContext allowedByScreenTime]
  -[STConversationContext applicationCurrentlyLimited]
  -[STConversationContext whitelistedHandles]
  -[STConversationContext init]
  -[STConversationContext contactsByHandle]
  -[STConversationContext setShouldBeAllowedByScreenTimeWhenLimited:]
  -[STConversationContext setContactsByHandle:]
  -[STConversationContext emergencyModeEnabled]
  -[STConversationContext .cxx_destruct]
  -[STConversationContext updateShouldBeAllowedDuringGeneralScreenTime:shouldBeAllowedByScreenTimeWhenLimited:currentApplicationState:emergencyModeEnabled:]
  -[STConversationContext setWhitelistedHandles:]
  -[STConversationContext setAllowedByContactsHandle:]
  -[STConversationContext currentApplicationState]
  -[STConversationContext setEmergencyModeEnabled:]
  -[STConversationContext allowedByContactsHandle]
  -[STConversationContext setAllowedByScreenTime:]
  -[STConversationContext shouldBeAllowedDuringGeneralScreenTime]
  -[STConversationContext setShouldBeAllowedDuringGeneralScreenTime:]
  -[STConversationContext shouldBeAllowedByScreenTimeWhenLimited]
  -[STConversationContext setCurrentApplicationState:]
  -[STConversationContext updateForThirdPartyApplicationState:]


STConversation : NSObject /usr/lib/libSystem.B.dylib
 @property  CNContactStore *contactStore
 @property  CNDowntimeWhitelist *whitelist
 @property  STManagementState *managementState
 @property  DMFCommunicationPolicyMonitor *communicationPolicyMonitor
 @property  DMFApplicationPolicyMonitor *thirdPartyApplicationPolicyMonitor
 @property  NSString *bundleIdentifier
 @property  BOOL isThirdPartyBundleIdentifier
 @property  long long generalScreenTimePolicy
 @property  long long whileLimitedPolicy
 @property  unsigned long currentApplicationState
 @property  long long currentThirdPartyApplicationState
 @property  DMFEmergencyModeMonitor *emergencyModeMonitor
 @property  BOOL emergencyModeEnabled
 @property  BOOL didFetchInitialScreenTimePolicyState
 @property  BOOL didFetchInitialApplicationState
 @property  BOOL didFetchInitialEmergencyModeState
 @property  BOOL didFetchInitialThirdPartyApplicationState
 @property  int policyNotifyToken
 @property  int emergencyModeNotifyToken
 @property  STConversation *me
 @property  @? conversationCompletionHandler

  // class methods
  +[STConversation requestConversationWithBundleIdentifier:completionHandler:]

  // instance methods
  -[STConversation me]
  -[STConversation initWithBundleIdentifier:]
  -[STConversation _contactsByHandle:error:]
  -[STConversation initSynchronouslyWithBundleIdentifier:]
  -[STConversation whileLimitedPolicy]
  -[STConversation _screenTimePolicyDidChange]
  -[STConversation callCompletionHandlerIfNeededWithThirdPartyConversation:error:]
  -[STConversation conversationCompletionHandler]
  -[STConversation setDidFetchInitialThirdPartyApplicationState:]
  -[STConversation emergencyModeMonitor]
  -[STConversation _stConversationCommonInitWithThirdPartyBundleIdentifier:completionHandler:]
  -[STConversation setCurrentThirdPartyApplicationState:]
  -[STConversation thirdPartyApplicationPolicyMonitor]
  -[STConversation setDidFetchInitialScreenTimePolicyState:]
  -[STConversation setCommunicationPolicyMonitor:]
  -[STConversation callCompletionHandlerIfNeededWithConversation:error:]
  -[STConversation contactStore]
  -[STConversation didFetchInitialThirdPartyApplicationState]
  -[STConversation dealloc]
  -[STConversation managementState]
  -[STConversation emergencyModeEnabled]
  -[STConversation .cxx_destruct]
  -[STConversation emergencyModeNotifyToken]
  -[STConversation currentApplicationState]
  -[STConversation policyNotifyToken]
  -[STConversation initWithThirdPartyBundleIdentifier:completionHandler:]
  -[STConversation setWhileLimitedPolicy:]
  -[STConversation initWithBundleIdentifier:contactStore:completionHandler:]
  -[STConversation setEmergencyModeEnabled:]
  -[STConversation _shouldGeneralScreenTimeAllowHandles:context:]
  -[STConversation setThirdPartyApplicationPolicyMonitor:]
  -[STConversation _updateAllThirdPartyContexts]
  -[STConversation setManagementState:]
  -[STConversation initSynchronouslyWithThirdPartyBundleIdentifier:]
  -[STConversation setEmergencyModeMonitor:]
  -[STConversation setDidFetchInitialApplicationState:]
  -[STConversation didFetchInitialEmergencyModeState]
  -[STConversation isThirdPartyBundleIdentifier]
  -[STConversation _updateContext:forHandles:updateGeneral:updateLimited:updateCurrentApplicationState:updateAllowedByContactsHandle:refreshContacts:refreshWhitelist:updateEmergencyMode:]
  -[STConversation _updateThirdPartyContext:forHandles:]
  -[STConversation _currentApplicationStateDidChange]
  -[STConversation didFetchInitialApplicationState]
  -[STConversation _filteredArrayForKnownHandlesInArray:]
  -[STConversation _populateThirdPartyAllowedContactsByHandlesForContactHandles:context:]
  -[STConversation _populateAllowedContactsByHandlesForContactHandles:context:]
  -[STConversation _currentThirdPartyApplicationStateDidChange]
  -[STConversation initWithBundleIdentifier:contactStore:]
  -[STConversation currentThirdPartyApplicationState]
  -[STConversation _emergencyModeDidChange]
  -[STConversation _stConversationCommonInitSetupObservationOfStateChanges]
  -[STConversation allowableByContactsHandles:]
  -[STConversation _updateAllContextsForNewWhileLimitedPolicyOrWhitelist]
  -[STConversation _updateAllContextsUpdateGeneral:updateLimited:updateCurrentApplicationState:updateAllowedByContactsHandle:refreshContacts:refreshWhitelist:updateEmergencyMode:]
  -[STConversation generalScreenTimePolicy]
  -[STConversation communicationPolicyMonitor]
  -[STConversation bundleIdentifier]
  -[STConversation _contactStoreDidChange]
  -[STConversation setDidFetchInitialEmergencyModeState:]
  -[STConversation setGeneralScreenTimePolicy:]
  -[STConversation setConversationCompletionHandler:]
  -[STConversation _stConversationCommonInitWithBundleIdentifier:contactStore:completionHandler:]
  -[STConversation setCurrentApplicationState:]
  -[STConversation _doesContainAtLeastOneContactInHandles:contactsByHandle:]
  -[STConversation didFetchInitialScreenTimePolicyState]
  -[STConversation _shouldWhileLimitedAllowHandles:context:]
  -[STConversation whitelist]
  -[STConversation setMe:]


STCoreDevice : NSManagedObject /System/Library/Frameworks/CoreServices.framework/CoreServices <STSyncableSubObject>
 @property  NSSet *userDeviceAddresses
 @property  NSString *identifier
 @property  NSString *name
 @property  short platform
 @property  STUserDeviceState *localUserDeviceState
 @property  NSSet *userDeviceStates
 @property  NSSet *usages
 @property  <STSerializableManagedObject> *syncableRootObject
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[STCoreDevice fetchOrCreateLocalDeviceInContext:error:]
  +[STCoreDevice fetchOrCreateDeviceWithIdentifier:inContext:error:]
  +[STCoreDevice fetchDeviceWithIdentifier:inContext:error:]
  +[STCoreDevice fetchRequestForOrphanedDevices]

  // instance methods
  -[STCoreDevice syncableRootObject]


STCoreOrganization : NSManagedObject /System/Library/Frameworks/CoreServices.framework/CoreServices
 @property  NSSet *enqueuedPayloads
 @property  NSSet *pendingPayloads
 @property  NSSet *recentPayloads
 @property  NSSet *blueprints

  // class methods
  +[STCoreOrganization internalClassForSerializableClassName:]


STLocalOrganization : STCoreOrganization <STSerializableMappedObject>
 @property  STLocalOrganizationSettings *settings
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[STLocalOrganization serializableClassName]
  +[STLocalOrganization fetchOrCreateLocalOrganizationWithContext:error:]


STiCloudOrganization : STCoreOrganization <STSerializableMappedObject>
 @property  STiCloudOrganizationSettings *settings
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[STiCloudOrganization serializableClassName]
  +[STiCloudOrganization fetchOrCreateiCloudOrganizationWithContext:error:]


STFamilyOrganization : STCoreOrganization <STSerializableMappedObject>
 @property  NSSet *settings
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[STFamilyOrganization serializableClassName]
  +[STFamilyOrganization fetchOrCreateFamilyOrganizationWithContext:error:]


STCoreOrganizationSettings : STUniquedManagedObject <STUniquelySerializableManagedObject>
 @property  STCoreUser *user
 @property  NSString *passcode
 @property  BOOL allLimitsEnabled
 @property  long long communicationPolicy
 @property  long long communicationWhileLimitedPolicy
 @property  long long contactManagementState
 @property  BOOL needsToSetPasscode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[STCoreOrganizationSettings fetchOrCreateWithDictionaryRepresentation:inContext:error:]
  +[STCoreOrganizationSettings fetchResultsRequestsForChangesToOrganizationSettingsForUserWithDSID:]

  // instance methods
  -[STCoreOrganizationSettings redactedDescription]
  -[STCoreOrganizationSettings updateWithDictionaryRepresentation:]
  -[STCoreOrganizationSettings dictionaryRepresentation]
  -[STCoreOrganizationSettings _changeAppLimitsFromAskToWarn:]


STLocalOrganizationSettings : STCoreOrganizationSettings
 @property  STLocalOrganization *organization
 @property  NSString *recoveryAltDSID

  // instance methods
  -[STLocalOrganizationSettings updateWithDictionaryRepresentation:]
  -[STLocalOrganizationSettings dictionaryRepresentation]
  -[STLocalOrganizationSettings setPasscode:]


STiCloudOrganizationSettings : STCoreOrganizationSettings <STSerializableMappedObject>
 @property  STiCloudOrganization *organization
 @property  NSString *recoveryAltDSID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[STiCloudOrganizationSettings serializableClassName]

  // instance methods
  -[STiCloudOrganizationSettings computeUniqueIdentifier]
  -[STiCloudOrganizationSettings updateWithDictionaryRepresentation:]
  -[STiCloudOrganizationSettings dictionaryRepresentation]
  -[STiCloudOrganizationSettings setPasscode:]


STFamilyOrganizationSettings : STCoreOrganizationSettings <STSerializableMappedObject, STVersionVectorable>
 @property  BOOL isManaged
 @property  BOOL shareWebUsage
 @property  STFamilyOrganization *organization
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSData *versionVector
 @property  BOOL isDirty

  // class methods
  +[STFamilyOrganizationSettings serializableClassName]

  // instance methods
  -[STFamilyOrganizationSettings redactedDescription]
  -[STFamilyOrganizationSettings setIsManaged:]
  -[STFamilyOrganizationSettings didChangeValueForKey:]
  -[STFamilyOrganizationSettings computeUniqueIdentifier]
  -[STFamilyOrganizationSettings updateWithDictionaryRepresentation:]
  -[STFamilyOrganizationSettings dictionaryRepresentation]
  -[STFamilyOrganizationSettings setPasscode:]


STCoreTransportPayload : NSManagedObject /System/Library/Frameworks/CoreServices.framework/CoreServices
 @property  NSString *identifier
 @property  NSString *type
 @property  STCoreOrganization *sourceOrganizationEnqueued
 @property  STCoreOrganization *sourceOrganizationPending
 @property  STCoreOrganization *sourceOrganizationRecent
 @property  NSArray *destinations
 @property  NSData *payloadData

  // class methods
  +[STCoreTransportPayload fetchRequestForPayloadsOfType:]
  +[STCoreTransportPayload fetchLastTransportPayloadInContext:ofType:error:]
  +[STCoreTransportPayload fetchTransportPayloadContext:withIdentifier:error:]

  // instance methods
  -[STCoreTransportPayload setDestinations:]
  -[STCoreTransportPayload destinations]


STCoreUser : NSManagedObject /System/Library/Frameworks/CoreServices.framework/CoreServices
 @property  BOOL screenTimeEnabled
 @property  BOOL syncingEnabled
 @property  BOOL allLimitsEnabled
 @property  NSString *localizedFullName
 @property  STCoreOrganization *managingOrganization
 @property  BOOL canSetUpFamily
 @property  BOOL managed
 @property  BOOL managing
 @property  BOOL shareWebUsage
 @property  NSString *effectivePasscode
 @property  NSString *effectiveRecoveryAltDSID
 @property  BOOL needsToSetPasscode
 @property  NSString *organizationIdentifier
 @property  long long communicationPolicy
 @property  long long communicationWhileLimitedPolicy
 @property  BOOL contactsEditable
 @property  BOOL screenTimeEnabled
 @property  BOOL syncingEnabled
 @property  BOOL allLimitsEnabled
 @property  BOOL shareWebUsage
 @property  NSString *effectivePasscode
 @property  NSString *effectiveRecoveryAltDSID
 @property  long long communicationPolicy
 @property  long long communicationWhileLimitedPolicy
 @property  long long contactManagementState
 @property  BOOL contactsEditable
 @property  BOOL unmodeledParticipatesInSharedLedger
 @property  STCoreOrganizationSettings *unmodeledManagingOrganizationSettings
 @property  NSString *alwaysAllowActivationIdentifier
 @property  NSString *alwaysAllowConfigurationIdentifier
 @property  NSString *managedUserActivationIdentifier
 @property  NSString *iCloudLogoutConfigurationIdentifier
 @property  NSString *automaticDateTimeConfigurationIdentifier
 @property  NSString *phoneticGivenName
 @property  NSString *phoneticFamilyName
 @property  BOOL isFamilyOrganizer
 @property  STLocalOrganizationSettings *localSettings
 @property  STiCloudOrganizationSettings *cloudSettings
 @property  STFamilyOrganizationSettings *familySettings
 @property  NSSet *userDeviceAddresses
 @property  NSNumber *dsid
 @property  NSString *altDSID
 @property  NSString *givenName
 @property  NSString *familyName
 @property  NSString *familyMemberType
 @property  BOOL isParent
 @property  STUserDeviceState *localUserDeviceState
 @property  NSSet *userDeviceStates
 @property  NSSet *usages
 @property  long long passcodeEntryAttemptCount
 @property  NSDate *passcodeEntryTimeoutEndDate
 @property  long long passcodeRecoveryAttemptCount
 @property  BOOL supportsEncryption
 @property  NSString *appleID
 @property  NSSet *blueprints

  // class methods
  +[STCoreUser keyPathsForValuesAffectingSyncingEnabled]
  +[STCoreUser fetchRequestMatchingLocalUser]
  +[STCoreUser keyPathsForValuesAffectingShareWebUsage]
  +[STCoreUser keyPathsForValuesAffectingCommunicationPolicy]
  +[STCoreUser keyPathsForValuesAffectingNeedsToSetPasscode]
  +[STCoreUser keyPathsForValuesAffectingContactManagementState]
  +[STCoreUser keyPathsForValuesAffectingCanSetUpFamily]
  +[STCoreUser keyPathsForValuesAffectingAllLimitsEnabled]
  +[STCoreUser fetchUserWithDSID:inContext:error:]
  +[STCoreUser fetchRequestForFamilyMembers]
  +[STCoreUser fetchRequestForUsersWithDSID:]
  +[STCoreUser fetchLocalUserInContext:error:]
  +[STCoreUser keyPathsForValuesAffectingCommunicationWhileLimitedPolicy]
  +[STCoreUser keyPathsForValuesAffectingScreenTimeEnabled]
  +[STCoreUser keyPathsForValuesAffectingManaging]
  +[STCoreUser keyPathsForValuesAffectingEffectivePasscode]
  +[STCoreUser keyPathsForValuesAffectingLocalizedFullName]
  +[STCoreUser keyPathsForValuesAffectingEffectiveRecoveryAltDSID]
  +[STCoreUser fetchRequestMatchingAppleID:]
  +[STCoreUser fetchUserWithAppleID:inContext:error:]
  +[STCoreUser keyPathsForValuesAffectingManaged]

  // instance methods
  -[STCoreUser setScreenTimeEnabled:]
  -[STCoreUser setSyncingEnabled:]
  -[STCoreUser isManaged]
  -[STCoreUser didChangeValueForKey:]
  -[STCoreUser setCommunicationPolicy:]
  -[STCoreUser organizationIdentifier]
  -[STCoreUser unmodeledParticipatesInSharedLedger]
  -[STCoreUser unmodeledManagingOrganizationSettings]
  -[STCoreUser needsToSetPasscode]
  -[STCoreUser contactManagementState]
  -[STCoreUser effectiveRecoveryAltDSID]
  -[STCoreUser setEffectivePasscode:]
  -[STCoreUser shareWebUsage]
  -[STCoreUser isManaging]
  -[STCoreUser updateWithDescription:]
  -[STCoreUser canSetUpFamily]
  -[STCoreUser _contactStoreForUser]
  -[STCoreUser setCommunicationWhileLimitedPolicy:]
  -[STCoreUser screenTimeEnabled]
  -[STCoreUser alwaysAllowActivationIdentifier]
  -[STCoreUser setShareWebUsage:]
  -[STCoreUser notifyServerOfScreenTimeEnabled:]
  -[STCoreUser setAllLimitsEnabled:]
  -[STCoreUser alwaysAllowConfigurationIdentifier]
  -[STCoreUser managedUserActivationIdentifier]
  -[STCoreUser allLimitsEnabled]
  -[STCoreUser contactsEditable]
  -[STCoreUser managingOrganization]
  -[STCoreUser _primaryContainerInContactStore:withError:]
  -[STCoreUser setContactManagementState:]
  -[STCoreUser localizedFullName]
  -[STCoreUser setContactsEditable:]
  -[STCoreUser syncingEnabled]
  -[STCoreUser iCloudLogoutConfigurationIdentifier]
  -[STCoreUser setEffectiveRecoveryAltDSID:]
  -[STCoreUser automaticDateTimeConfigurationIdentifier]
  -[STCoreUser communicationWhileLimitedPolicy]
  -[STCoreUser effectivePasscode]
  -[STCoreUser communicationPolicy]


STDailySchedule : NSManagedObject /System/Library/Frameworks/CoreServices.framework/CoreServices
 @property  long long weekday
 @property  long long startHour
 @property  long long startMinute
 @property  long long endHour
 @property  long long endMinute
 @property  STDowntime *downtime


STDeviceDowntimeUserNotificationContext : STUserNotificationContext
 @property  NSString *localizedUserNotificationBodyKey

  // class methods
  +[STDeviceDowntimeUserNotificationContext supportsSecureCoding]

  // instance methods
  -[STDeviceDowntimeUserNotificationContext init]
  -[STDeviceDowntimeUserNotificationContext destinations]
  -[STDeviceDowntimeUserNotificationContext .cxx_destruct]
  -[STDeviceDowntimeUserNotificationContext encodeWithCoder:]
  -[STDeviceDowntimeUserNotificationContext initWithCoder:]
  -[STDeviceDowntimeUserNotificationContext customizeNotificationContent:withCompletionBlock:]
  -[STDeviceDowntimeUserNotificationContext setEndDateComponents:referenceDate:locale:]
  -[STDeviceDowntimeUserNotificationContext setLocalizedUserNotificationBodyKey:]
  -[STDeviceDowntimeUserNotificationContext localizedUserNotificationBodyKey]
  -[STDeviceDowntimeUserNotificationContext setEndDateComponents:referenceDate:]
  -[STDeviceDowntimeUserNotificationContext notificationBundleIdentifier]


STDowntime : NSManagedObject /System/Library/Frameworks/CoreServices.framework/CoreServices
 @property  NSString *calendarIdentifier
 @property  BOOL enabled
 @property  BOOL canAskForMoreTime
 @property  NSSet *schedule

  // instance methods
  -[STDowntime setStartHour:startMinute:endHour:endMinute:]


STDowntimeWarningUserNotificationContext : STUserNotificationContext
  // class methods
  +[STDowntimeWarningUserNotificationContext supportsSecureCoding]

  // instance methods
  -[STDowntimeWarningUserNotificationContext init]
  -[STDowntimeWarningUserNotificationContext initWithCoder:]
  -[STDowntimeWarningUserNotificationContext customizeNotificationContent:withCompletionBlock:]
  -[STDowntimeWarningUserNotificationContext setTimeLeft:]


STFamilyMember : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL isMe
 @property  BOOL isParent
 @property  BOOL isOrganizer
 @property  NSNumber *DSID
 @property  NSString *altDSID
 @property  NSString *appleID
 @property  NSString *memberType
 @property  NSString *firstName
 @property  NSString *lastName

  // instance methods
  -[STFamilyMember lastName]
  -[STFamilyMember isMe]
  -[STFamilyMember altDSID]
  -[STFamilyMember DSID]
  -[STFamilyMember appleID]
  -[STFamilyMember setIsMe:]
  -[STFamilyMember setIsOrganizer:]
  -[STFamilyMember firstName]
  -[STFamilyMember .cxx_destruct]
  -[STFamilyMember isParent]
  -[STFamilyMember memberType]
  -[STFamilyMember isOrganizer]
  -[STFamilyMember setIsParent:]
  -[STFamilyMember initWithDSID:altDSID:appleID:memberType:firstName:lastName:isMe:isParent:isOrganizer:]


STFamily : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  NSString *dataSource
 @property  NSArray *members
 @property  STFamilyMember *me

  // instance methods
  -[STFamily me]
  -[STFamily copyWithZone:]
  -[STFamily setDataSource:]
  -[STFamily .cxx_destruct]
  -[STFamily members]
  -[STFamily dataSource]
  -[STFamily initWithFamilyCircle:]
  -[STFamily setMembers:]
  -[STFamily dictionaryRepresentation]
  -[STFamily setMe:]
  -[STFamily initWithMembers:]


STFetchResultsRequest : NSObject /usr/lib/libSystem.B.dylib
 @property  NSFetchRequest *fetchRequest

  // class methods
  +[STFetchResultsRequest requestWithFetchRequest:]

  // instance methods
  -[STFetchResultsRequest fetchRequest]
  -[STFetchResultsRequest initWithEntity:]
  -[STFetchResultsRequest initWithEntity:predicate:sortDescriptors:]
  -[STFetchResultsRequest .cxx_destruct]
  -[STFetchResultsRequest initWithFetchRequest:]
  -[STFetchResultsRequest initWithEntity:predicate:]


STGroupFetchedResultsController : NSObject /usr/lib/libSystem.B.dylib <NSFetchedResultsControllerDelegate>
 @property  NSFetchedResultsController *resultsController
 @property  NSArray *resultsControllers
 @property  NSArray *resultsRequests
 @property  unsigned long changeCounter
 @property  <STGroupFetchedResultsControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[STGroupFetchedResultsController setResultsControllers:]
  -[STGroupFetchedResultsController .cxx_destruct]
  -[STGroupFetchedResultsController resultsController]
  -[STGroupFetchedResultsController controllerDidChangeContent:]
  -[STGroupFetchedResultsController controller:didChangeObject:atIndexPath:forChangeType:newIndexPath:]
  -[STGroupFetchedResultsController resultsRequests]
  -[STGroupFetchedResultsController setChangeCounter:]
  -[STGroupFetchedResultsController changeCounter]
  -[STGroupFetchedResultsController setResultsRequests:]
  -[STGroupFetchedResultsController resultsControllers]
  -[STGroupFetchedResultsController setDelegate:]
  -[STGroupFetchedResultsController _evaluateCounter]
  -[STGroupFetchedResultsController delegate]
  -[STGroupFetchedResultsController initWithContext:resultsRequests:]
  -[STGroupFetchedResultsController setResultsController:]
  -[STGroupFetchedResultsController controllerWillChangeContent:]
  -[STGroupFetchedResultsController initWithResultsRequests:cacheName:managedObjectContext:]


STHistoryAnalyzer : NSObject /usr/lib/libSystem.B.dylib
 @property  NSPersistentHistoryToken *finalToken

  // instance methods
  -[STHistoryAnalyzer .cxx_destruct]
  -[STHistoryAnalyzer _isChangeInteresting:]
  -[STHistoryAnalyzer deltasForStore:inManagedObjectContext:sinceToken:ignoreAuthor:finalToken:error:]
  -[STHistoryAnalyzer finalToken]


STDelta : NSObject /usr/lib/libSystem.B.dylib
 @property  NSDictionary *dictionary
 @property  NSString *uniqueIdentifier
 @property  long long changeType

  // instance methods
  -[STDelta deleted]
  -[STDelta initWithUniqueIdentifier:]
  -[STDelta .cxx_destruct]
  -[STDelta setDictionary:]
  -[STDelta dictionary]
  -[STDelta uniqueIdentifier]
  -[STDelta changeType]
  -[STDelta changedWithDictionary:]


STInstalledApp : STUniquedManagedObject <STSerializableMappedObject, STUniquelySerializableManagedObject>
 @property  NSString *bundleIdentifier
 @property  STUserDeviceState *userDeviceState
 @property  BOOL installedLocally
 @property  NSString *displayName
 @property  NSData *iconData
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[STInstalledApp fetchOrCreateWithDictionaryRepresentation:inContext:error:]
  +[STInstalledApp serializableClassName]
  +[STInstalledApp bundleIdentifiersInstalledForDSID:inContext:error:]

  // instance methods
  -[STInstalledApp didChangeValueForKey:]
  -[STInstalledApp computeUniqueIdentifier]
  -[STInstalledApp updateWithDictionaryRepresentation:]
  -[STInstalledApp dictionaryRepresentation]
  -[STInstalledApp setUserDeviceState:]


STLocations : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[STLocations familyPhotosCacheDirectory]
  +[STLocations applicationSupportDirectory]
  +[STLocations cachesDirectory]
  +[STLocations persistentStoreDirectory]


STLog : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[STLog awd]
  +[STLog ask]
  +[STLog reactorTool]
  +[STLog persistence]
  +[STLog utility]
  +[STLog daemon]
  +[STLog familyCirclePrimitives]
  +[STLog payload]
  +[STLog promise]
  +[STLog coreDataTransformer]
  +[STLog familyScreenTimeManager]
  +[STLog reactorCore]
  +[STLog organizationControllerConfigurationAdapter]
  +[STLog deviceState]
  +[STLog personal]
  +[STLog family]
  +[STLog transaction]
  +[STLog logCategories]
  +[STLog appInfo]
  +[STLog pinController]
  +[STLog coreDataConfigurationStore]
  +[STLog conversation]
  +[STLog usage]
  +[STLog idsMessageTransport]
  +[STLog transportServiceMessageLedger]
  +[STLog test]
  +[STLog appMonitor]
  +[STLog cloudkit]
  +[STLog remoteViewService]
  +[STLog accountState]
  +[STLog messageTrackingTransportService]
  +[STLog coreDataObserver]
  +[STLog backgroundActivity]
  +[STLog blueprint]
  +[STLog reactorDirectiveProcessor]
  +[STLog screenTimeOrganizationController]
  +[STLog mirroring]
  +[STLog fileBackedKeyValueStore]
  +[STLog restrictionsMigrator]
  +[STLog oneMoreMinuteManager]
  +[STLog screentime]
  +[STLog conduit]
  +[STLog idsTransportMessageAddressMap]
  +[STLog familyInformationProvider]
  +[STLog checkpoint]
  +[STLog idsTransportPrimitives]
  +[STLog familyCommunicationService]
  +[STLog tool]
  +[STLog idsTransport]
  +[STLog familyMemberGenesisStateStore]
  +[STLog payloadQueue]
  +[STLog userNotifications]
  +[STLog payloadManager]
  +[STLog pinService]
  +[STLog contactStorePrimitives]
  +[STLog xpcServiceProvider]
  +[STLog managementStateObserver]
  +[STLog idsTransportMessageIdentifierMap]
  +[STLog passcodeProviderService]
  +[STLog reactor]
  +[STLog requestManager]
  +[STLog versionVector]
  +[STLog messageTrackingTransportEnvoy]
  +[STLog setupClient]
  +[STLog familySettingsManager]
  +[STLog apns]


STManagementState : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL cachedShouldRequestMoreTime
 @property  BOOL cachedIsRestrictionsPasscodeSet
 @property  NSXPCConnection *connection
 @property  BOOL contactsEditable
 @property  BOOL needsToSetRestrictionsPasscode
 @property  BOOL isRestrictionsPasscodeSet
 @property  BOOL shouldRequestMoreTime

  // instance methods
  -[STManagementState performMigrationFromMCXSettings:error:]
  -[STManagementState isRestrictionsPasscodeSet:]
  -[STManagementState init]
  -[STManagementState shouldRequestMoreTime:]
  -[STManagementState shouldAllowOneMoreMinuteForBundleIdentifier:error:]
  -[STManagementState isExplicitContentRestricted:]
  -[STManagementState dealloc]
  -[STManagementState .cxx_destruct]
  -[STManagementState setCachedIsRestrictionsPasscodeSet:]
  -[STManagementState contactManagementStateForDSID:completionHandler:]
  -[STManagementState setScreenTimeEnabled:error:]
  -[STManagementState setConnection:]
  -[STManagementState permitWebFilterURL:pageTitle:error:]
  -[STManagementState communicationPoliciesWithError:]
  -[STManagementState communicationPoliciesForDSID:withCompletionHandler:]
  -[STManagementState setManageContactsEnabled:forDSID:completionHandler:]
  -[STManagementState primaryiCloudCardDAVAccountIdentifierWithError:]
  -[STManagementState shouldAllowOneMoreMinuteForCategoryIdentifier:error:]
  -[STManagementState setCachedShouldRequestMoreTime:]
  -[STManagementState communicationPoliciesWithCompletionHandler:]
  -[STManagementState contactsEditable]
  -[STManagementState setScreenTimeSyncingEnabled:completionHandler:]
  -[STManagementState isRestrictionsPasscodeSet]
  -[STManagementState clearRestrictionsPasscodeWithError:]
  -[STManagementState cachedIsRestrictionsPasscodeSet]
  -[STManagementState screenTimeStateWithCompletionHandler:]
  -[STManagementState requestToManageContactsForDSID:completionHandler:]
  -[STManagementState connection]
  -[STManagementState cachedShouldRequestMoreTime]
  -[STManagementState needsToSetRestrictionsPasscode]
  -[STManagementState setScreenTimeEnabled:completionHandler:]
  -[STManagementState shouldAllowOneMoreMinuteForWebDomain:error:]
  -[STManagementState shouldRequestMoreTime]
  -[STManagementState enableScreenTimeForDSID:error:]
  -[STManagementState screenTimeSyncStateWithCompletionHandler:]


STManagementStateObserver : NSObject /usr/lib/libSystem.B.dylib
 @property  NSNumber *dsid
 @property  STManagementState *managementState
 @property  long long contactManagementState
 @property  STManagementStateObserver *me
 @property  NSObject<OS_dispatch_queue> *screenTimeSettingsChangeQueue
 @property  int screenTimeSettingsChangeNotifyToken

  // class methods
  +[STManagementStateObserver createObserverWithDSID:completionHandler:]

  // instance methods
  -[STManagementStateObserver me]
  -[STManagementStateObserver dsid]
  -[STManagementStateObserver dealloc]
  -[STManagementStateObserver managementState]
  -[STManagementStateObserver .cxx_destruct]
  -[STManagementStateObserver contactManagementState]
  -[STManagementStateObserver setManagementState:]
  -[STManagementStateObserver setContactManagementState:]
  -[STManagementStateObserver setMe:]
  -[STManagementStateObserver _screenTimeSettingsDidChange]
  -[STManagementStateObserver _initWithDSID:]
  -[STManagementStateObserver screenTimeSettingsChangeQueue]
  -[STManagementStateObserver screenTimeSettingsChangeNotifyToken]


STUnique : NSObject /usr/lib/libSystem.B.dylib
 @property  <STPersistenceControllerProtocol> *persistenceController

  // class methods
  +[STUnique localToCloudMapping]
  +[STUnique _internalClassForSerializableClassName:]
  +[STUnique cloudToLocalMapping]
  +[STUnique mirroredEntityNames]

  // instance methods
  -[STUnique .cxx_destruct]
  -[STUnique setPersistenceController:]
  -[STUnique persistenceController]
  -[STUnique historyTokenForAuthor:fromStore:]
  -[STUnique addHistoryToken:forAuthor:toMetadataForStore:error:]
  -[STUnique newResolveConflictsBetweenLocalDeltas:cloudDeltas:]
  -[STUnique initWithPersistenceController:]
  -[STUnique areLocalChangesInterestingWithError:]
  -[STUnique migrateWithError:]
  -[STUnique resolveConflictsBetweenLocalDeltas:cloudDeltas:]


STMigrationContext : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[STMigrationContext init]
  -[STMigrationContext .cxx_destruct]
  -[STMigrationContext initializeCachesWithManagedObjectContext:withCloudStore:andLocalStore:error:]
  -[STMigrationContext deleteLocalObjectWithUniqueIdentifier:managedObjectContext:error:]
  -[STMigrationContext deleteCloudObjectWithUniqueIdentifier:managedObjectContext:error:]
  -[STMigrationContext updateCloudObjectWithUniqueIdentifier:dictionary:managedObjectContext:error:]


STOpaquePasscode : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSString *passcode

  // class methods
  +[STOpaquePasscode supportsSecureCoding]

  // instance methods
  -[STOpaquePasscode copyWithZone:]
  -[STOpaquePasscode passcode]
  -[STOpaquePasscode .cxx_destruct]
  -[STOpaquePasscode encodeWithCoder:]
  -[STOpaquePasscode isEqual:]
  -[STOpaquePasscode initWithCoder:]
  -[STOpaquePasscode initWithPasscode:]
  -[STOpaquePasscode isEqualToOpaquePasscode:]


STPersistenceConfiguration : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[STPersistenceConfiguration getLocalPersistentXPCStoreDescription]
  +[STPersistenceConfiguration localPersistentXPCStoreDescription]
  +[STPersistenceConfiguration managedObjectModel]
  +[STPersistenceConfiguration managedObjectModelURL]
  +[STPersistenceConfiguration persistentStoreDescriptionForConfigurationName:type:]
  +[STPersistenceConfiguration persistentStoreURLForConfigurationName:]


STPersistenceController : NSObject /usr/lib/libSystem.B.dylib <STPersistenceControllerProtocol>
 @property  NSMutableDictionary *lastPersistentHistoryTokenByStoreIdentifier
 @property  NSPersistentContainer *persistentContainer
 @property  NSObject<OS_dispatch_queue> *coreDataQueue
 @property  NSManagedObjectContext *viewContext
 @property  BOOL hasStoreLoaded
 @property  NSPersistentStore *localStore
 @property  NSPersistentStore *cloudStore
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[STPersistenceController persistentContainer]
  -[STPersistenceController init]
  -[STPersistenceController .cxx_destruct]
  -[STPersistenceController viewContext]
  -[STPersistenceController setPersistentContainer:]
  -[STPersistenceController performBackgroundTask:]
  -[STPersistenceController newBackgroundContext]
  -[STPersistenceController cloudStore]
  -[STPersistenceController localStore]
  -[STPersistenceController _remotePersistentStoreDidChange:]
  -[STPersistenceController _persistentStoreCoordinatorStoresDidChange:]
  -[STPersistenceController initWithPersistentContainer:]
  -[STPersistenceController coreDataQueue]
  -[STPersistenceController performBackgroundTaskAndWait:]
  -[STPersistenceController _logAboutMissingStoreName:]
  -[STPersistenceController lastPersistentHistoryTokenByStoreIdentifier]
  -[STPersistenceController persistentHistoryTokenForStore:]
  -[STPersistenceController savePersistentHistoryToken:forStore:]
  -[STPersistenceController localPersistentStoreMetadataValueForKey:]
  -[STPersistenceController setLocalPersistentStoreValue:forKey:]
  -[STPersistenceController hasStoreLoaded]
  -[STPersistenceController descriptionForPersistentStore:]
  -[STPersistenceController setCoreDataQueue:]


STPINController : NSObject /usr/lib/libSystem.B.dylib
 @property  STCoreUser *user
 @property  NSObject<OS_dispatch_source> *backoffTimer
 @property  NSDate *timeoutEndDate
 @property  BOOL canRecoveryAuthenticate

  // class methods
  +[STPINController pinLength]

  // instance methods
  -[STPINController user]
  -[STPINController .cxx_destruct]
  -[STPINController backoffTimer]
  -[STPINController initWithUser:]
  -[STPINController canRecoveryAuthenticate]
  -[STPINController _beginTimeoutUntilDate:]
  -[STPINController timeoutEndDate]
  -[STPINController _setNewPIN:currentPIN:recoveryAppleIDPrompt:completionHandler:]
  -[STPINController _isPINValid:]
  -[STPINController _setPasscode:recoveryAppleID:forUser:error:]
  -[STPINController _saveChangesForUser:error:]
  -[STPINController _authenticateWithPIN:forUser:allowPasscodeRecovery:error:]
  -[STPINController authenticateWithPIN:allowPasscodeRecovery:completionHandler:]
  -[STPINController _timeoutEndDateForAttemptNumber:]
  -[STPINController setTimeoutEndDate:]
  -[STPINController setBackoffTimer:]
  -[STPINController setPIN:withRecoveryAppleIDPrompt:completionHandler:]
  -[STPINController updatePIN:toPIN:withRecoveryAppleIDPrompt:completionHandler:]
  -[STPINController removePIN:completionHandler:]
  -[STPINController authenticateWithPIN:error:]
  -[STPINController authenticateWithPIN:completionHandler:]


STReconciler : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[STReconciler reconcileWithManagedObjectContext:completion:]


STScreenTimeAgentPrivateConnection : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[STScreenTimeAgentPrivateConnection newContactsServiceInterface]
  +[STScreenTimeAgentPrivateConnection newContactsServiceConnection]
  +[STScreenTimeAgentPrivateConnection newConnection]
  +[STScreenTimeAgentPrivateConnection newInterface]


STScreenTimeCoreBundle : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[STScreenTimeCoreBundle bundle]


STScreenTimeEnabledUserNotificationContext : STUserNotificationContext
  // class methods
  +[STScreenTimeEnabledUserNotificationContext supportsSecureCoding]

  // instance methods
  -[STScreenTimeEnabledUserNotificationContext init]
  -[STScreenTimeEnabledUserNotificationContext initWithCoder:]
  -[STScreenTimeEnabledUserNotificationContext customizeNotificationContent:withCompletionBlock:]
  -[STScreenTimeEnabledUserNotificationContext notificationBundleIdentifier]


STScreenTimeSettings : NSManagedObject /System/Library/Frameworks/CoreServices.framework/CoreServices
 @property  BOOL screenTimeEnabled
 @property  BOOL cloudSyncEnabled

  // class methods
  +[STScreenTimeSettings fetchScreenTimeSettingsInContext:error:]


STSetupClient : NSObject /usr/lib/libSystem.B.dylib
 @property  NSXPCConnection *connection

  // class methods
  +[STSetupClient _newConnection]

  // instance methods
  -[STSetupClient init]
  -[STSetupClient dealloc]
  -[STSetupClient .cxx_destruct]
  -[STSetupClient connection]
  -[STSetupClient currentConfigurationForUser:error:]
  -[STSetupClient applyUpdatedConfiguration:error:]
  -[STSetupClient passcodeCollectedFromUserWithError:]


STSetupConfiguration : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  BOOL userHasContacts
 @property  STUserID *associatedUser
 @property  long long screenTimeState
 @property  NSSet *availableScreenTimeStates
 @property  STOpaquePasscode *passcode
 @property  long long contactManagementState
 @property  NSSet *availableContactManagementStates

  // class methods
  +[STSetupConfiguration supportsSecureCoding]
  +[STSetupConfiguration _isContactManagementStateValid:pairedWithUserHasContacts:]

  // instance methods
  -[STSetupConfiguration copyWithZone:]
  -[STSetupConfiguration passcode]
  -[STSetupConfiguration .cxx_destruct]
  -[STSetupConfiguration contactManagementState]
  -[STSetupConfiguration encodeWithCoder:]
  -[STSetupConfiguration isEqual:]
  -[STSetupConfiguration initWithCoder:]
  -[STSetupConfiguration _initWithUser:screenTimeState:passcode:contactManagementState:userHasContacts:]
  -[STSetupConfiguration associatedUser]
  -[STSetupConfiguration screenTimeState]
  -[STSetupConfiguration availableScreenTimeStates]
  -[STSetupConfiguration _descriptionForScreenTimeStates:]
  -[STSetupConfiguration availableContactManagementStates]
  -[STSetupConfiguration _descriptionForContactManagementStates:]
  -[STSetupConfiguration userHasContacts]
  -[STSetupConfiguration isEqualToSetupConfiguration:]
  -[STSetupConfiguration initWithUser:screenTimeState:passcode:contactManagementState:userHasContacts:error:]
  -[STSetupConfiguration configurationWithUpdatedScreenTimeState:error:]
  -[STSetupConfiguration configurationWithUpdatedContactManagementState:error:]
  -[STSetupConfiguration configurationWithUpdatedPasscode:]


STTestSyncableObject : STUniquedManagedObject <STSerializableMappedObject, STUniquelySerializableManagedObject>
 @property  BOOL enabled
 @property  NSString *identifier
 @property  NSSet *subobjects
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[STTestSyncableObject fetchOrCreateWithDictionaryRepresentation:inContext:error:]
  +[STTestSyncableObject serializableClassName]

  // instance methods
  -[STTestSyncableObject didChangeValueForKey:]
  -[STTestSyncableObject computeUniqueIdentifier]
  -[STTestSyncableObject updateWithDictionaryRepresentation:]
  -[STTestSyncableObject dictionaryRepresentation]


STTestSyncableSubObject : NSManagedObject /System/Library/Frameworks/CoreServices.framework/CoreServices <STSyncableSubObject>
 @property  BOOL active
 @property  NSString *identifier
 @property  STTestSyncableObject *root
 @property  <STSerializableManagedObject> *syncableRootObject
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[STTestSyncableSubObject syncableRootObject]


STUnifiedTransportPayloadDestination : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding, STSerializableManagedObject>
 @property  NSString *address
 @property  NSString *type
 @property  unsigned long state
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[STUnifiedTransportPayloadDestination supportsSecureCoding]

  // instance methods
  -[STUnifiedTransportPayloadDestination copyWithZone:]
  -[STUnifiedTransportPayloadDestination address]
  -[STUnifiedTransportPayloadDestination setState:]
  -[STUnifiedTransportPayloadDestination .cxx_destruct]
  -[STUnifiedTransportPayloadDestination initWithDSID:]
  -[STUnifiedTransportPayloadDestination encodeWithCoder:]
  -[STUnifiedTransportPayloadDestination updateWithDictionaryRepresentation:]
  -[STUnifiedTransportPayloadDestination type]
  -[STUnifiedTransportPayloadDestination isEqual:]
  -[STUnifiedTransportPayloadDestination dictionaryRepresentation]
  -[STUnifiedTransportPayloadDestination state]
  -[STUnifiedTransportPayloadDestination initWithCoder:]
  -[STUnifiedTransportPayloadDestination initWithAddress:type:]
  -[STUnifiedTransportPayloadDestination initWithAddress:type:state:]


STUniquedManagedObject : NSManagedObject /System/Library/Frameworks/CoreServices.framework/CoreServices
 @property  NSString *uniqueIdentifier
 @property  NSUUID *sortKey

  // instance methods
  -[STUniquedManagedObject awakeFromInsert]
  -[STUniquedManagedObject computeUniqueIdentifier]
  -[STUniquedManagedObject dictionaryRepresentation]
  -[STUniquedManagedObject updateUniqueIdentifier]


STUniquedManagedObjectDelta : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableSet *updatedProperties
 @property  NSString *uniqueIdentifier
 @property  long long changeType

  // instance methods
  -[STUniquedManagedObjectDelta deleted]
  -[STUniquedManagedObjectDelta initWithUniqueIdentifier:]
  -[STUniquedManagedObjectDelta inserted]
  -[STUniquedManagedObjectDelta updatedProperties]
  -[STUniquedManagedObjectDelta .cxx_destruct]
  -[STUniquedManagedObjectDelta uniqueIdentifier]
  -[STUniquedManagedObjectDelta changeType]
  -[STUniquedManagedObjectDelta setUpdatedProperties:]
  -[STUniquedManagedObjectDelta removePropertyWithName:]
  -[STUniquedManagedObjectDelta updatedWithProperties:]


STUsage : NSManagedObject /System/Library/Frameworks/CoreServices.framework/CoreServices
 @property  NSDate *lastEventDate
 @property  NSSet *blocks
 @property  NSDate *lastUpdatedDate
 @property  STCoreDevice *device
 @property  STCoreUser *user

  // class methods
  +[STUsage fetchRequestMatchingUser:device:]


STUsageBlock : NSManagedObject /System/Library/Frameworks/CoreServices.framework/CoreServices
 @property  NSDate *lastEventDate
 @property  NSDate *longestSessionStartDate
 @property  NSDate *longestSessionEndDate
 @property  long long screenTimeInSeconds
 @property  NSDate *startDate
 @property  long long durationInMinutes
 @property  NSDate *firstPickupDate
 @property  long long numberOfPickupsWithoutApplicationUsage
 @property  NSSet *categories
 @property  NSSet *countedItems
 @property  STUsage *usage

  // class methods
  +[STUsageBlock usageCountedItemsForUsageBlocks:]
  +[STUsageBlock fetchRequestMatchingUsage:dateInterval:]
  +[STUsageBlock totalScreenTimeForUsageBlocks:]
  +[STUsageBlock totalPickupsForUsageBlocks:]
  +[STUsageBlock totalNotificationsForUsageBlocks:]
  +[STUsageBlock usageCategoriesForUsageBlocks:]


STUsageCategory : NSManagedObject /System/Library/Frameworks/CoreServices.framework/CoreServices
 @property  NSString *identifier
 @property  long long totalTimeInSeconds
 @property  NSSet *timedItems
 @property  STUsageBlock *block

  // class methods
  +[STUsageCategory categoryItemsExcludingSystemCategories:]
  +[STUsageCategory applicationAndWebItemsExcludingSystemHiddenApplications:]


STUsageCountedItem : NSManagedObject /System/Library/Frameworks/CoreServices.framework/CoreServices
 @property  NSString *bundleIdentifier
 @property  long long numberOfPickups
 @property  long long numberOfNotifications
 @property  BOOL usageTrusted
 @property  STUsageBlock *block

  // class methods
  +[STUsageCountedItem notificationItemsExcludingSystemHiddenApplications:]
  +[STUsageCountedItem pickupItemsExcludingSystemHiddenApplications:]


STUsageDetailItem : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *identifier
 @property  BOOL isAllAppsOrCategories
 @property  long long type
 @property  float quantity
 @property  float sortQuantity
 @property  BOOL usageTrusted

  // class methods
  +[STUsageDetailItem keyPathsForValuesAffectingIsAllAppsOrCategories]
  +[STUsageDetailItem keyPathsForValuesAffectingSortQuantity]

  // instance methods
  -[STUsageDetailItem setQuantity:]
  -[STUsageDetailItem setType:]
  -[STUsageDetailItem .cxx_destruct]
  -[STUsageDetailItem quantity]
  -[STUsageDetailItem identifier]
  -[STUsageDetailItem type]
  -[STUsageDetailItem initWithType:identifier:]
  -[STUsageDetailItem isEqual:]
  -[STUsageDetailItem initWithType:identifier:usageTrusted:]
  -[STUsageDetailItem usageTrusted]
  -[STUsageDetailItem isAllAppsOrCategories]
  -[STUsageDetailItem sortQuantity]


STUsageReporter : NSObject /usr/lib/libSystem.B.dylib <NSFetchedResultsControllerDelegate>
 @property  NSDateInterval *dateInterval
 @property  NSNumber *userDSID
 @property  NSFetchedResultsController *fetchedResultsController
 @property  NSFetchedResultsController *installedAppsController
 @property  NSSet *installedBundleIdentifiers
 @property  double totalScreenTime
 @property  long long totalPickups
 @property  long long totalNotifications
 @property  BOOL includeTotalUsageDetailItem
 @property  NSArray *categoryUsage
 @property  NSArray *applicationAndWebUsage
 @property  NSArray *pickups
 @property  NSArray *notifications
 @property  NSDate *firstPickup
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[STUsageReporter keyPathsForValuesAffectingNotifications]

  // instance methods
  -[STUsageReporter dateInterval]
  -[STUsageReporter .cxx_destruct]
  -[STUsageReporter userDSID]
  -[STUsageReporter controllerDidChangeContent:]
  -[STUsageReporter fetchedResultsController]
  -[STUsageReporter pickups]
  -[STUsageReporter notifications]
  -[STUsageReporter _categoryUsageWithoutAllUsageItem]
  -[STUsageReporter includeTotalUsageDetailItem]
  -[STUsageReporter totalScreenTime]
  -[STUsageReporter installedBundleIdentifiers]
  -[STUsageReporter _updateInstalledBundleIdentifiers]
  -[STUsageReporter totalNotifications]
  -[STUsageReporter totalPickups]
  -[STUsageReporter _enumerateUsageBlocksWithUnitGranularity:block:]
  -[STUsageReporter _ratiosForCategory:perCalendarUnit:useTotalScreenTime:]
  -[STUsageReporter _firstPickupFromUsageBlocks:]
  -[STUsageReporter installedAppsController]
  -[STUsageReporter setInstalledBundleIdentifiers:]
  -[STUsageReporter initWithUsage:dateInterval:]
  -[STUsageReporter generateReport:]
  -[STUsageReporter categoryUsage]
  -[STUsageReporter applicationAndWebUsage]
  -[STUsageReporter screenTimeUsagePerCalendarUnit:]
  -[STUsageReporter categoryRatiosPerCalendarUnit:numberOfCategories:]
  -[STUsageReporter ratiosForCategory:perCalendarUnit:]
  -[STUsageReporter ratiosForApplication:perCalendarUnit:]
  -[STUsageReporter ratiosForWebDomain:perCalendarUnit:]
  -[STUsageReporter pickupsPerCalendarUnit:]
  -[STUsageReporter pickupRatiosForApplication:perCalendarUnit:]
  -[STUsageReporter firstPickup]
  -[STUsageReporter firstPickupOfIntervalWithMostPickups:perCalendarUnit:]
  -[STUsageReporter notificationsPerCalendarUnit:]
  -[STUsageReporter notificationRatiosForApplication:perCalendarUnit:]
  -[STUsageReporter setIncludeTotalUsageDetailItem:]
  -[STUsageReporter setInstalledAppsController:]


STUsageRequest : NSManagedObject /System/Library/Frameworks/CoreServices.framework/CoreServices
 @property  NSDate *acknowledgedDate
 @property  NSNumber *forUserDSID
 @property  NSDate *requestedDate
 @property  BOOL isBackgroundTask

  // class methods
  +[STUsageRequest fetchOrCreateUsageRequestForUser:inContext:error:]
  +[STUsageRequest fetchOrCreateUsageRequestForLocalUserInContext:error:]
  +[STUsageRequest fetchOrCreateUsageRequestForRemoteUserWithDSID:inContext:error:]
  +[STUsageRequest fetchRequestForLocalUsageRequests]
  +[STUsageRequest fetchRequestForUsageRequestsThatAreForRemoteUsers]
  +[STUsageRequest fetchOrCreateUsageRequestForUserWithDSID:inContext:error:]


STUsageTimedItem : NSManagedObject /System/Library/Frameworks/CoreServices.framework/CoreServices
 @property  NSString *bundleIdentifier
 @property  NSString *domain
 @property  long long totalTimeInSeconds
 @property  BOOL usageTrusted
 @property  STUsageCategory *category


STUsageTrustIdentifier : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSString *identifier
 @property  BOOL usageTrusted

  // class methods
  +[STUsageTrustIdentifier supportsSecureCoding]

  // instance methods
  -[STUsageTrustIdentifier copyWithZone:]
  -[STUsageTrustIdentifier .cxx_destruct]
  -[STUsageTrustIdentifier encodeWithCoder:]
  -[STUsageTrustIdentifier identifier]
  -[STUsageTrustIdentifier isEqual:]
  -[STUsageTrustIdentifier initWithCoder:]
  -[STUsageTrustIdentifier usageTrusted]
  -[STUsageTrustIdentifier initWithIdentifier:usageTrusted:]
  -[STUsageTrustIdentifier _stUsageTrustIdentifierCommonInitWithIdentifier:usageTrusted:]


STUserDescription : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *givenName
 @property  NSString *familyName
 @property  NSNumber *userDSID
 @property  NSString *userAltDSID

  // class methods
  +[STUserDescription currentUser]
  +[STUserDescription currentUserWithCompletion:]

  // instance methods
  -[STUserDescription userAltDSID]
  -[STUserDescription familyName]
  -[STUserDescription initWithGivenName:familyName:userDSID:userAltDSID:]
  -[STUserDescription givenName]
  -[STUserDescription .cxx_destruct]
  -[STUserDescription userDSID]


STUserDeviceAddress : NSManagedObject /System/Library/Frameworks/CoreServices.framework/CoreServices
 @property  NSString *idsURI
 @property  STCoreUser *user
 @property  STCoreDevice *device

  // class methods
  +[STUserDeviceAddress fetchOrCreateUserDeviceAddressWithUser:device:context:error:]


STUserDeviceState : STUniquedManagedObject <STSerializableMappedObject, STUniquelySerializableManagedObject>
 @property  BOOL screenTimeEnabled
 @property  BOOL cloudSyncEnabled
 @property  BOOL managementEnabled
 @property  NSString *passcodeOwner
 @property  NSString *coreDuetIdentifier
 @property  NSData *capabilitiesPlist
 @property  NSData *deviceInfoPlist
 @property  STCoreUser *localUser
 @property  STCoreDevice *localDevice
 @property  STCoreUser *user
 @property  STCoreDevice *device
 @property  NSSet *installedApps
 @property  NSDate *lastFamilyCheckinDate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[STUserDeviceState fetchRequestMatchingLocalUserDeviceState]
  +[STUserDeviceState fetchOrCreateWithDictionaryRepresentation:inContext:error:]
  +[STUserDeviceState fetchLocalUserDeviceStateInContext:error:]
  +[STUserDeviceState fetchOrCreateLocalUserDeviceStateInContext:error:]
  +[STUserDeviceState serializableClassName]

  // instance methods
  -[STUserDeviceState didChangeValueForKey:]
  -[STUserDeviceState computeUniqueIdentifier]
  -[STUserDeviceState updateWithDictionaryRepresentation:]
  -[STUserDeviceState dictionaryRepresentation]


STUserID : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSNumber *dsid

  // class methods
  +[STUserID supportsSecureCoding]

  // instance methods
  -[STUserID dsid]
  -[STUserID copyWithZone:]
  -[STUserID .cxx_destruct]
  -[STUserID initWithDSID:]
  -[STUserID encodeWithCoder:]
  -[STUserID isEqual:]
  -[STUserID initWithCoder:]
  -[STUserID isEqualToUserID:]


STUserNotificationContext : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSNumber *destinations
 @property  NSString *notificationBundleIdentifier
 @property  NSString *identifier
 @property  NSArray *localizedUserNotificationBodyArguments
 @property  UNNotificationTrigger *trigger

  // class methods
  +[STUserNotificationContext supportsSecureCoding]

  // instance methods
  -[STUserNotificationContext init]
  -[STUserNotificationContext destinations]
  -[STUserNotificationContext .cxx_destruct]
  -[STUserNotificationContext initWithIdentifier:]
  -[STUserNotificationContext setIdentifier:]
  -[STUserNotificationContext encodeWithCoder:]
  -[STUserNotificationContext identifier]
  -[STUserNotificationContext setTrigger:]
  -[STUserNotificationContext trigger]
  -[STUserNotificationContext initWithCoder:]
  -[STUserNotificationContext setLocalizedUserNotificationBodyArguments:]
  -[STUserNotificationContext localizedUserNotificationBodyArguments]
  -[STUserNotificationContext customizeNotificationContent:withCompletionBlock:]
  -[STUserNotificationContext notificationBundleIdentifier]
  -[STUserNotificationContext notificationContentWithCompletionBlock:]


STVersionVector : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  NSMutableDictionary *nodeByIdentifier
 @property  NSString *editorIdentifier
 @property  NSArray *nodes
 @property  NSData *dataRepresentation

  // instance methods
  -[STVersionVector copyWithZone:]
  -[STVersionVector init]
  -[STVersionVector initWithNode:]
  -[STVersionVector .cxx_destruct]
  -[STVersionVector initWithDataRepresentation:]
  -[STVersionVector dataRepresentation]
  -[STVersionVector join:]
  -[STVersionVector nodes]
  -[STVersionVector evaluateCausality:]
  -[STVersionVector setEditorIdentifier:]
  -[STVersionVector editorIdentifier]
  -[STVersionVector nodeByIdentifier]
  -[STVersionVector incrementNodeWithIdentifier:]
  -[STVersionVector precedesVersionVector:]
  -[STVersionVector isConcurrentWithVersionVector:]
  -[STVersionVector isEqualToVersionVector:]
  -[STVersionVector setNodeByIdentifier:]


STVersionVectorNode : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  unsigned long count
 @property  NSString *identifier
 @property  NSDictionary *dictionaryRepresentation

  // class methods
  +[STVersionVectorNode supportsSecureCoding]

  // instance methods
  -[STVersionVectorNode copyWithZone:]
  -[STVersionVectorNode initWithDictionaryRepresentation:]
  -[STVersionVectorNode setCount:]
  -[STVersionVectorNode isEqualToNode:]
  -[STVersionVectorNode compare:]
  -[STVersionVectorNode .cxx_destruct]
  -[STVersionVectorNode initWithIdentifier:]
  -[STVersionVectorNode encodeWithCoder:]
  -[STVersionVectorNode identifier]
  -[STVersionVectorNode increment]
  -[STVersionVectorNode isEqual:]
  -[STVersionVectorNode count]
  -[STVersionVectorNode join:]
  -[STVersionVectorNode dictionaryRepresentation]
  -[STVersionVectorNode initWithCoder:]


STWebUsageController : NSObject /usr/lib/libSystem.B.dylib
 @property  NSXPCConnection *xpcConnection

  // instance methods
  -[STWebUsageController deleteAllWebHistoryForApplication:completionHandler:]
  -[STWebUsageController deleteWebHistoryDuringInterval:application:completionHandler:]
  -[STWebUsageController init]
  -[STWebUsageController deleteWebHistoryForURL:application:completionHandler:]
  -[STWebUsageController xpcConnection]
  -[STWebUsageController dealloc]
  -[STWebUsageController .cxx_destruct]
  -[STWebUsageController _asynchronousProxyWithHandler:]
  -[STWebUsageController deleteWebHistoryForDomain:application:completionHandler:]


STWeeklyReportUserNotificationContext : STUserNotificationContext
 @property  NSString *notificationBodyKey
 @property  double deltaScreenTimeUsage
 @property  NSNumber *totalUsage
 @property  NSData *weeklyReportData

  // class methods
  +[STWeeklyReportUserNotificationContext supportsSecureCoding]

  // instance methods
  -[STWeeklyReportUserNotificationContext init]
  -[STWeeklyReportUserNotificationContext .cxx_destruct]
  -[STWeeklyReportUserNotificationContext encodeWithCoder:]
  -[STWeeklyReportUserNotificationContext initWithCoder:]
  -[STWeeklyReportUserNotificationContext customizeNotificationContent:withCompletionBlock:]
  -[STWeeklyReportUserNotificationContext setDeltaScreenTimeUsage:]
  -[STWeeklyReportUserNotificationContext setTotalUsage:]
  -[STWeeklyReportUserNotificationContext notificationBodyKey]
  -[STWeeklyReportUserNotificationContext weeklyReportData]
  -[STWeeklyReportUserNotificationContext setDeltaScreenTimeUsage:totalUsage:]
  -[STWeeklyReportUserNotificationContext setWeeklyReportData:]
  -[STWeeklyReportUserNotificationContext deltaScreenTimeUsage]
  -[STWeeklyReportUserNotificationContext totalUsage]
  -[STWeeklyReportUserNotificationContext setNotificationBodyKey:]


STXPCRemoteObjectProxy : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[STXPCRemoteObjectProxy _proxyFromConnection:withRetryCount:proxyHandler:]
  +[STXPCRemoteObjectProxy _synchronousProxyFromConnection:withRetryCount:proxyHandler:]
  +[STXPCRemoteObjectProxy proxyFromConnection:proxyHandler:]
  +[STXPCRemoteObjectProxy synchronousProxyFromConnection:proxyHandler:]


CKContainer(ScreenTimeCore)
	// class methods
	+[CKContainer(ScreenTimeCore) remotemanagement_mirroringContainerIdentifier]
	+[CKContainer(ScreenTimeCore) remotemanagement_mirroringContainer]

01 00 0500 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountStore 
01 00 0800 /System/Library/PrivateFrameworks/ConfigurationEngineModel.framework/ConfigurationEngineModel: CEMAccountSettingsDeclaration 
01 00 0800 /System/Library/PrivateFrameworks/ConfigurationEngineModel.framework/ConfigurationEngineModel: CEMActivationSimpleDeclaration 
01 00 0800 /System/Library/PrivateFrameworks/ConfigurationEngineModel.framework/ConfigurationEngineModel: CEMApplicationSettingsDeclaration 
01 00 0800 /System/Library/PrivateFrameworks/ConfigurationEngineModel.framework/ConfigurationEngineModel: CEMApplicationStoreDeclaration 
01 00 0800 /System/Library/PrivateFrameworks/ConfigurationEngineModel.framework/ConfigurationEngineModel: CEMConfigurationBase 
01 00 0800 /System/Library/PrivateFrameworks/ConfigurationEngineModel.framework/ConfigurationEngineModel: CEMLegacyRestrictionsAppsDeclaration 
01 00 0800 /System/Library/PrivateFrameworks/ConfigurationEngineModel.framework/ConfigurationEngineModel: CEMMediaSettingsDeclaration 
01 00 0800 /System/Library/PrivateFrameworks/ConfigurationEngineModel.framework/ConfigurationEngineModel: CEMNetworkCellularSettingsDeclaration 
01 00 0800 /System/Library/PrivateFrameworks/ConfigurationEngineModel.framework/ConfigurationEngineModel: CEMPasscodeSettingsDeclaration 
01 00 0800 /System/Library/PrivateFrameworks/ConfigurationEngineModel.framework/ConfigurationEngineModel: CEMPolicyAppDeclaration 
01 00 0800 /System/Library/PrivateFrameworks/ConfigurationEngineModel.framework/ConfigurationEngineModel: CEMPolicyCategoryDeclaration 
01 00 0800 /System/Library/PrivateFrameworks/ConfigurationEngineModel.framework/ConfigurationEngineModel: CEMPolicyWebSiteDeclaration 
01 00 0800 /System/Library/PrivateFrameworks/ConfigurationEngineModel.framework/ConfigurationEngineModel: CEMPolicyiCloudAccountDeclaration 
01 00 0800 /System/Library/PrivateFrameworks/ConfigurationEngineModel.framework/ConfigurationEngineModel: CEMPredicateAll 
01 00 0800 /System/Library/PrivateFrameworks/ConfigurationEngineModel.framework/ConfigurationEngineModel: CEMPredicateAny 
01 00 0800 /System/Library/PrivateFrameworks/ConfigurationEngineModel.framework/ConfigurationEngineModel: CEMPredicateBudget 
01 00 0800 /System/Library/PrivateFrameworks/ConfigurationEngineModel.framework/ConfigurationEngineModel: CEMPredicateBudget_TimeBudgetItem 
01 00 0800 /System/Library/PrivateFrameworks/ConfigurationEngineModel.framework/ConfigurationEngineModel: CEMPredicateCompositeBudget 
01 00 0800 /System/Library/PrivateFrameworks/ConfigurationEngineModel.framework/ConfigurationEngineModel: CEMPredicateCompositeBudget_Monitors 
01 00 0800 /System/Library/PrivateFrameworks/ConfigurationEngineModel.framework/ConfigurationEngineModel: CEMPredicateCompositeBudget_TimeBudgetItem 
01 00 0800 /System/Library/PrivateFrameworks/ConfigurationEngineModel.framework/ConfigurationEngineModel: CEMPredicateFalse 
01 00 0800 /System/Library/PrivateFrameworks/ConfigurationEngineModel.framework/ConfigurationEngineModel: CEMPredicateNot 
01 00 0800 /System/Library/PrivateFrameworks/ConfigurationEngineModel.framework/ConfigurationEngineModel: CEMPredicateOneTime 
01 00 0800 /System/Library/PrivateFrameworks/ConfigurationEngineModel.framework/ConfigurationEngineModel: CEMPredicateWeeklyTimeRange 
01 00 0800 /System/Library/PrivateFrameworks/ConfigurationEngineModel.framework/ConfigurationEngineModel: CEMPredicateiCloudAccount 
01 00 0800 /System/Library/PrivateFrameworks/ConfigurationEngineModel.framework/ConfigurationEngineModel: CEMSystemAirdropDeclaration 
01 00 0800 /System/Library/PrivateFrameworks/ConfigurationEngineModel.framework/ConfigurationEngineModel: CEMSystemBasicWebContentFilterDeclaration 
01 00 0800 /System/Library/PrivateFrameworks/ConfigurationEngineModel.framework/ConfigurationEngineModel: CEMSystemBasicWebContentFilterDeclaration_SiteWhiteListItem 
01 00 0800 /System/Library/PrivateFrameworks/ConfigurationEngineModel.framework/ConfigurationEngineModel: CEMSystemCameraDeclaration 
01 00 0800 /System/Library/PrivateFrameworks/ConfigurationEngineModel.framework/ConfigurationEngineModel: CEMSystemCarPlayDeclaration 
01 00 0800 /System/Library/PrivateFrameworks/ConfigurationEngineModel.framework/ConfigurationEngineModel: CEMSystemDateAndTimeDeclaration 
01 00 0800 /System/Library/PrivateFrameworks/ConfigurationEngineModel.framework/ConfigurationEngineModel: CEMSystemDoNotDisturbDeclaration 
01 00 0800 /System/Library/PrivateFrameworks/ConfigurationEngineModel.framework/ConfigurationEngineModel: CEMSystemGameCenterDeclaration 
01 00 0800 /System/Library/PrivateFrameworks/ConfigurationEngineModel.framework/ConfigurationEngineModel: CEMSystemMusicDeclaration 
01 00 0800 /System/Library/PrivateFrameworks/ConfigurationEngineModel.framework/ConfigurationEngineModel: CEMSystemRatingsDeclaration 
01 00 0800 /System/Library/PrivateFrameworks/ConfigurationEngineModel.framework/ConfigurationEngineModel: CEMSystemSiriDeclaration 
01 00 0800 /System/Library/PrivateFrameworks/ConfigurationEngineModel.framework/ConfigurationEngineModel: CEMSystemTVProviderDeclaration 
01 00 0700 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKContainer 
01 00 0900 /System/Library/Frameworks/Contacts.framework/Contacts: CNContact 
01 00 0900 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactFetchRequest 
01 00 0900 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactStore 
01 00 0900 /System/Library/Frameworks/Contacts.framework/Contacts: CNContainer 
01 00 0900 /System/Library/Frameworks/Contacts.framework/Contacts: CNDowntimeWhitelist 
01 00 0900 /System/Library/Frameworks/Contacts.framework/Contacts: CNSaveRequest 
01 00 0600 /System/Library/PrivateFrameworks/Categories.framework/Categories: CTCategories 
01 00 0600 /System/Library/PrivateFrameworks/Categories.framework/Categories: CTCategory 
01 00 0c00 /System/Library/PrivateFrameworks/DeviceManagement.framework/DeviceManagement: DMFApplicationPolicyMonitor 
01 00 0c00 /System/Library/PrivateFrameworks/DeviceManagement.framework/DeviceManagement: DMFCommunicationPolicyMonitor 
01 00 0c00 /System/Library/PrivateFrameworks/DeviceManagement.framework/DeviceManagement: DMFEmergencyModeMonitor 
01 00 0d00 /System/Library/PrivateFrameworks/FamilyCircle.framework/FamilyCircle: FAFamilyMember 
01 00 0d00 /System/Library/PrivateFrameworks/FamilyCircle.framework/FamilyCircle: FAFetchFamilyPhotoRequest 
01 00 0d00 /System/Library/PrivateFrameworks/FamilyCircle.framework/FamilyCircle: FAUpdateFamilyMemberFlagRequest 
01 00 0b00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationRecord 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCache 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSCompoundPredicate 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDateComponents 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateComponentsFormatter 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateIntervalFormatter 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0a00 /System/Library/Frameworks/CoreData.framework/CoreData: NSFetchRequest 
01 00 0a00 /System/Library/Frameworks/CoreData.framework/CoreData: NSFetchedResultsController 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSISO8601DateFormatter 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexSet 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0a00 /System/Library/Frameworks/CoreData.framework/CoreData: NSManagedObject 
01 00 0a00 /System/Library/Frameworks/CoreData.framework/CoreData: NSManagedObjectContext 
01 00 0a00 /System/Library/Frameworks/CoreData.framework/CoreData: NSManagedObjectModel 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 1100 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 0a00 /System/Library/Frameworks/CoreData.framework/CoreData: NSPersistentContainer 
01 00 0a00 /System/Library/Frameworks/CoreData.framework/CoreData: NSPersistentHistoryChangeRequest 
01 00 0a00 /System/Library/Frameworks/CoreData.framework/CoreData: NSPersistentHistoryToken 
01 00 0a00 /System/Library/Frameworks/CoreData.framework/CoreData: NSPersistentStoreDescription 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSPersonNameComponents 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSPersonNameComponentsFormatter 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLCache 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLQueryItem 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLRequest 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSession 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSessionConfiguration 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0e00 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBCodable 
01 00 0e00 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBRequest 
01 00 0f00 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNMutableNotificationContent 
01 00 0f00 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNNotificationAttachment 
01 00 0f00 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNNotificationSound 
