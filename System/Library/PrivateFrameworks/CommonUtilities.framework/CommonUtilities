|| __DATA.__common _cut_log_group_generation
|| __DATA.__objc_data _OBJC_CLASS_$_CUTAsyncReducer
|| __DATA.__objc_data _OBJC_CLASS_$_CUTAsyncReducerState
|| __DATA.__objc_data _OBJC_CLASS_$_CUTCheckpointInstant
|| __DATA.__objc_data _OBJC_CLASS_$_CUTFileCopier
|| __DATA.__objc_data _OBJC_CLASS_$_CUTNetworkInterfaceListener
|| __DATA.__objc_data _OBJC_CLASS_$_CUTPowerAssertion
|| __DATA.__objc_data _OBJC_CLASS_$_CUTPromise
|| __DATA.__objc_data _OBJC_CLASS_$_CUTPromiseSeal
|| __DATA.__objc_data _OBJC_CLASS_$_CUTReachability
|| __DATA.__objc_data _OBJC_CLASS_$_CUTReporting
|| __DATA.__objc_data _OBJC_CLASS_$_CUTUnsafePromise
|| __DATA.__objc_data _OBJC_CLASS_$_CUTUnsafePromiseSeal
|| __DATA.__objc_data _OBJC_METACLASS_$_CUTAsyncReducer
|| __DATA.__objc_data _OBJC_METACLASS_$_CUTAsyncReducerState
|| __DATA.__objc_data _OBJC_METACLASS_$_CUTCheckpointInstant
|| __DATA.__objc_data _OBJC_METACLASS_$_CUTDeferredTaskQueue
|| __DATA.__objc_data _OBJC_METACLASS_$_CUTFileCopier
|| __DATA.__objc_data _OBJC_METACLASS_$_CUTNetworkInterfaceListener
|| __DATA.__objc_data _OBJC_METACLASS_$_CUTPowerAssertion
|| __DATA.__objc_data _OBJC_METACLASS_$_CUTPromise
|| __DATA.__objc_data _OBJC_METACLASS_$_CUTPromiseSeal
|| __DATA.__objc_data _OBJC_METACLASS_$_CUTReporting
|| __DATA.__objc_data _OBJC_METACLASS_$_CUTUnsafePromise
|| __DATA.__objc_data _OBJC_METACLASS_$_CUTUnsafePromiseSeal
|| __DATA.__objc_ivar _OBJC_IVAR_$_CUTCheckpoint._frozen
|| __DATA.__objc_ivar _OBJC_IVAR_$_CUTNetworkInterfaceListener._IPv4Addresses
|| __DATA.__objc_ivar _OBJC_IVAR_$_CUTNetworkInterfaceListener._IPv6Addresses
|| __DATA.__objc_ivar _OBJC_IVAR_$_CUTNetworkInterfaceListener._cellState
|| __DATA.__objc_ivar _OBJC_IVAR_$_CUTNetworkInterfaceListener._delegateMap
|| __DATA.__objc_ivar _OBJC_IVAR_$_CUTNetworkInterfaceListener._delegateQueue
|| __DATA.__objc_ivar _OBJC_IVAR_$_CUTNetworkInterfaceListener._dynamicStore
|| __DATA.__objc_ivar _OBJC_IVAR_$_CUTNetworkInterfaceListener._wifiState
|| __DATA.__objc_ivar _OBJC_IVAR_$_CUTPowerAssertion._internal
|| __DATA.__objc_ivar _OBJC_IVAR_$_CUTResult._inError
|| __DATA.__objc_ivar _OBJC_IVAR_$_CUTResult._inValue
|| __DATA.__objc_ivar _OBJC_IVAR_$_CUTResult._state
|| __DATA_CONST.__const _CUTReportingErrorDomain
|| __DATA_CONST.__const _CUTWiFiManagerMaxMeasurementErrorKey
|| __DATA_CONST.__const _CUTWiFiManagerPMDurationKey
|| __DATA_CONST.__const _CUTWiFiManagerSSIDKey
|| __DATA_CONST.__const _CUTWiFiManagerTotalDurationKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CUTCheckpoint
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CUTCheckpointRange
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CUTCheckpointSignpost
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CUTCheckpointTrace
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CUTDeferredTaskQueue
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CUTPowerMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CUTResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CUTTelephonyManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CUTWeakReference
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CUTWiFiManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CUTCheckpoint
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CUTCheckpointRange
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CUTCheckpointSignpost
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CUTCheckpointTrace
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CUTPowerMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CUTReachability
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CUTResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CUTTelephonyManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CUTWeakReference
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CUTWiFiManager
|| __TEXT.__const _CUTReportingBatchingIntervalDefault
|| __TEXT.__text _CUTAuditTokenTaskHasEntitlement
|| __TEXT.__text _CUTCreateDictionaryFromXPCObject
|| __TEXT.__text _CUTCreateXPCObjectFromDictionary
|| __TEXT.__text _CUTDataForPropertyList
|| __TEXT.__text _CUTGetMainBundle
|| __TEXT.__text _CUTGetMainBundleIdentifier
|| __TEXT.__text _CUTGetXPCBoolFromDictionary
|| __TEXT.__text _CUTGetXPCConnectionContext
|| __TEXT.__text _CUTGetXPCDataFromDictionary
|| __TEXT.__text _CUTGetXPCDoubleFromDictionary
|| __TEXT.__text _CUTGetXPCIntFromDictionary
|| __TEXT.__text _CUTGetXPCStringFromDictionary
|| __TEXT.__text _CUTInsertBoolsToXPCDictionary
|| __TEXT.__text _CUTInsertDatasToXPCDictionary
|| __TEXT.__text _CUTInsertDoublesToXPCDictionary
|| __TEXT.__text _CUTInsertIntsToXPCDictionary
|| __TEXT.__text _CUTInsertNSStringsToXPCDictionary
|| __TEXT.__text _CUTIsInternalInstall
|| __TEXT.__text _CUTMapObjectProperties
|| __TEXT.__text _CUTProcessNameForPid
|| __TEXT.__text _CUTPropertyListFromNSData
|| __TEXT.__text _CUTSafeArrayOfStrings
|| __TEXT.__text _CUTSetXPCConnectionContext
|| __TEXT.__text _CUTTemporaryPath
|| __TEXT.__text _CUTWeakLinkClass
|| __TEXT.__text _CUTWeakLinkSymbol
|| __TEXT.__text _CUTXPCAlert
|| __TEXT.__text _CUTXPCAlertv
|| __TEXT.__text _CUTXPCConfigureConnection
|| __TEXT.__text _CUTXPCConnectionSetEventHandlers
|| __TEXT.__text _CUTXPCCreateConnectionForService
|| __TEXT.__text _CUTXPCCreateConnectionForServiceWithQueue
|| __TEXT.__text _CUTXPCCreateServerConnection
|| __TEXT.__text _cut_arc_os_release
|| __TEXT.__text _cut_backtrace
|| __TEXT.__text _cut_non_arc_os_release
__ Bom: _BOMCopierCancelCopy
__ Bom: _BOMCopierCopyWithOptions
__ Bom: _BOMCopierFree
__ Bom: _BOMCopierNew
__ Bom: _BOMCopierSetCopyFileStartedHandler
__ Bom: _BOMCopierSetFatalErrorHandler
__ Bom: _BOMCopierSetFatalFileErrorHandler
__ Bom: _BOMCopierSetFileConflictErrorHandler
__ Bom: _BOMCopierSetFileErrorHandler
__ Bom: _BOMCopierSetUserData
__ Bom: _BOMCopierUserData
__ CoreFoundation: _CFArrayAppendValue
__ CoreFoundation: _CFArrayCreateMutable
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFBooleanGetTypeID
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFBundleGetIdentifier
__ CoreFoundation: _CFBundleGetMainBundle
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionaryGetTypeID
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFEqual
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFNumberCreate
__ CoreFoundation: _CFNumberGetValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFRunLoopAddSource
__ CoreFoundation: _CFRunLoopContainsSource
__ CoreFoundation: _CFRunLoopGetCurrent
__ CoreFoundation: _CFRunLoopGetMain
__ CoreFoundation: _CFRunLoopRemoveSource
__ CoreFoundation: _CFRunLoopRun
__ CoreFoundation: _CFRunLoopSourceCreate
__ CoreFoundation: _CFRunLoopSourceInvalidate
__ CoreFoundation: _CFRunLoopWakeUp
__ CoreFoundation: _CFStringCreateWithBytes
__ CoreFoundation: _CFStringGetBytes
__ CoreFoundation: _CFStringGetCStringPtr
__ CoreFoundation: _CFStringGetLength
__ CoreFoundation: _CFUUIDCreate
__ CoreFoundation: _CFUUIDCreateString
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: __CFXPCCreateCFObjectFromXPCMessage
__ CoreFoundation: __CFXPCCreateXPCMessageWithCFObject
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFAllocatorSystemDefault
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFRunLoopDefaultMode
__ CoreFoundation: _kCFTypeArrayCallBacks
__ CoreTelephony: __CTServerConnectionCreateWithIdentifier
__ CoreTelephony: __CTServerConnectionDormancySuspendAssertionCreate
__ Foundation: _NSClassFromString
__ Foundation: _NSDebugDescriptionErrorKey
__ Foundation: _NSLog
__ Foundation: _NSTemporaryDirectory
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSRecursiveLock
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ IOKit: _IOAllowPowerChange
__ IOKit: _IODeregisterForSystemPower
__ IOKit: _IONotificationPortCreate
__ IOKit: _IONotificationPortDestroy
__ IOKit: _IONotificationPortGetRunLoopSource
__ IOKit: _IONotificationPortSetDispatchQueue
__ IOKit: _IOObjectRelease
__ IOKit: _IOPMAssertionCreateWithDescription
__ IOKit: _IOPMAssertionCreateWithName
__ IOKit: _IOPMAssertionRelease
__ IOKit: _IORegisterForSystemPower
__ IOKit: _IORegistryEntryCreateCFProperty
__ IOKit: _IOServiceAddInterestNotification
__ IOKit: _IOServiceClose
__ IOKit: _IOServiceGetMatchingService
__ IOKit: _IOServiceMatching
__ IOKit: _kIOMasterPortDefault
__ MobileWiFi: _WiFiDeviceClientCopyCurrentNetwork
__ MobileWiFi: _WiFiDeviceClientCopyCurrentNetworkAsync
__ MobileWiFi: _WiFiDeviceClientCopyProperty
__ MobileWiFi: _WiFiDeviceClientRegisterDeviceAvailableCallback
__ MobileWiFi: _WiFiDeviceClientRegisterExtendedLinkCallback
__ MobileWiFi: _WiFiDeviceClientRegisterPowerCallback
__ MobileWiFi: _WiFiManagerClientCopyDevices
__ MobileWiFi: _WiFiManagerClientCopyEnabledNetworks
__ MobileWiFi: _WiFiManagerClientCopyProperty
__ MobileWiFi: _WiFiManagerClientCreate
__ MobileWiFi: _WiFiManagerClientGetAskToJoinState
__ MobileWiFi: _WiFiManagerClientGetMISState
__ MobileWiFi: _WiFiManagerClientGetPower
__ MobileWiFi: _WiFiManagerClientGetType
__ MobileWiFi: _WiFiManagerClientGetWoWCapability
__ MobileWiFi: _WiFiManagerClientRegisterDeviceAttachmentCallback
__ MobileWiFi: _WiFiManagerClientRegisterNotificationCallback
__ MobileWiFi: _WiFiManagerClientScheduleWithRunLoop
__ MobileWiFi: _WiFiManagerClientSetAssociationMode
__ MobileWiFi: _WiFiManagerClientSetType
__ MobileWiFi: _WiFiManagerClientSetWoWState
__ MobileWiFi: _WiFiNetworkGetSSID
__ MobileWiFi: _WiFiNetworkIsCaptive
__ MobileWiFi: _kWiFiScaledRSSIKey
__ MobileWiFi: _kWiFiScaledRateKey
__ MobileWiFi: _kWiFiStrengthKey
__ Security: _SecTaskCopyValueForEntitlement
__ Security: _SecTaskCreateWithAuditToken
__ SystemConfiguration: _SCDynamicStoreCopyMultiple
__ SystemConfiguration: _SCDynamicStoreCopyValue
__ SystemConfiguration: _SCDynamicStoreCreate
__ SystemConfiguration: _SCDynamicStoreKeyCreateNetworkGlobalEntity
__ SystemConfiguration: _SCDynamicStoreKeyCreateNetworkInterfaceEntity
__ SystemConfiguration: _SCDynamicStoreKeyCreateNetworkServiceEntity
__ SystemConfiguration: _SCDynamicStoreSetDispatchQueue
__ SystemConfiguration: _SCDynamicStoreSetNotificationKeys
__ SystemConfiguration: _SCNetworkReachabilityCreateWithAddress
__ SystemConfiguration: _SCNetworkReachabilityCreateWithName
__ SystemConfiguration: _SCNetworkReachabilityGetFlags
__ SystemConfiguration: _kSCCompAnyRegex
__ SystemConfiguration: _kSCDynamicStoreDomainState
__ SystemConfiguration: _kSCDynamicStorePropNetPrimaryInterface
__ SystemConfiguration: _kSCDynamicStorePropNetPrimaryService
__ SystemConfiguration: _kSCEntNetCommCenter
__ SystemConfiguration: _kSCEntNetIPv4
__ SystemConfiguration: _kSCEntNetIPv6
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __xpc_error_connection_interrupted
__ libSystem.B.dylib: __xpc_error_connection_invalid
__ libSystem.B.dylib: __xpc_error_key_description
__ libSystem.B.dylib: __xpc_error_termination_imminent
__ libSystem.B.dylib: __xpc_type_connection
__ libSystem.B.dylib: __xpc_type_dictionary
__ libSystem.B.dylib: __xpc_type_error
__ libSystem.B.dylib: _backtrace
__ libSystem.B.dylib: _backtrace_symbols
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_block_cancel
__ libSystem.B.dylib: _dispatch_block_create
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlclose
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _exit
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memset
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _proc_name
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _xpc_connection_create
__ libSystem.B.dylib: _xpc_connection_create_mach_service
__ libSystem.B.dylib: _xpc_connection_get_context
__ libSystem.B.dylib: _xpc_connection_get_name
__ libSystem.B.dylib: _xpc_connection_resume
__ libSystem.B.dylib: _xpc_connection_send_message
__ libSystem.B.dylib: _xpc_connection_set_context
__ libSystem.B.dylib: _xpc_connection_set_event_handler
__ libSystem.B.dylib: _xpc_connection_set_target_queue
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_get_bool
__ libSystem.B.dylib: _xpc_dictionary_get_data
__ libSystem.B.dylib: _xpc_dictionary_get_double
__ libSystem.B.dylib: _xpc_dictionary_get_int64
__ libSystem.B.dylib: _xpc_dictionary_get_string
__ libSystem.B.dylib: _xpc_dictionary_set_bool
__ libSystem.B.dylib: _xpc_dictionary_set_data
__ libSystem.B.dylib: _xpc_dictionary_set_double
__ libSystem.B.dylib: _xpc_dictionary_set_int64
__ libSystem.B.dylib: _xpc_dictionary_set_string
__ libSystem.B.dylib: _xpc_get_type
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _class_copyPropertyList
__ libobjc.A.dylib: _class_getInstanceVariable
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_moveWeak
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _object_getIvar
__ libobjc.A.dylib: _property_copyAttributeValue
__ libobjc.A.dylib: _property_getName
CUTDeferredTaskQueue : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_dispatch_queue> *queue
 @property  @? originalBlock
 @property  NSMutableArray *pendingDispatchBlocks
 @property  NSNumber *capacity

  // instance methods
  -[CUTDeferredTaskQueue queue]
  -[CUTDeferredTaskQueue .cxx_destruct]
  -[CUTDeferredTaskQueue capacity]
  -[CUTDeferredTaskQueue initWithNumberCapacity:queue:block:]
  -[CUTDeferredTaskQueue pendingDispatchBlocks]
  -[CUTDeferredTaskQueue originalBlock]
  -[CUTDeferredTaskQueue initWithCapacity:queue:block:]
  -[CUTDeferredTaskQueue initWithQueue:block:]
  -[CUTDeferredTaskQueue enqueueExecutionWithTarget:afterDelay:]
  -[CUTDeferredTaskQueue cancelPendingExecutions]


CUTCheckpoint : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, NSCopying>
 @property  NSString *name
 @property  NSString *uniqueIdentifier
 @property  BOOL assertsUseAfterFreeze
 @property  BOOL shouldLogTouches

  // class methods
  +[CUTCheckpoint supportsSecureCoding]
  +[CUTCheckpoint _whitelistedClasses]
  +[CUTCheckpoint _reportDateFormatter]

  // instance methods
  -[CUTCheckpoint isEqual:]
  -[CUTCheckpoint name]
  -[CUTCheckpoint copyWithZone:]
  -[CUTCheckpoint encodeWithCoder:]
  -[CUTCheckpoint initWithCoder:]
  -[CUTCheckpoint freeze]
  -[CUTCheckpoint .cxx_destruct]
  -[CUTCheckpoint uniqueIdentifier]
  -[CUTCheckpoint initWithName:uniqueIdentifier:]
  -[CUTCheckpoint _assertNotFrozen]
  -[CUTCheckpoint isFrozen]
  -[CUTCheckpoint _freeze]
  -[CUTCheckpoint assertsUseAfterFreeze]
  -[CUTCheckpoint _appendReportToMutableString:indentation:paddedNameLength:]
  -[CUTCheckpoint _reportName]
  -[CUTCheckpoint _reportStartDate]
  -[CUTCheckpoint _reportEndDate]
  -[CUTCheckpoint _reportMetadata]
  -[CUTCheckpoint _freezeBacktrace]
  -[CUTCheckpoint report]
  -[CUTCheckpoint setAssertsUseAfterFreeze:]
  -[CUTCheckpoint shouldLogTouches]
  -[CUTCheckpoint setShouldLogTouches:]


CUTCheckpointSignpost : CUTCheckpoint <NSSecureCoding>
 @property  NSObject<OS_os_log> *log
 @property  long long scope
 @property  unsigned long signpostID

  // instance methods
  -[CUTCheckpointSignpost .cxx_destruct]
  -[CUTCheckpointSignpost log]
  -[CUTCheckpointSignpost scope]
  -[CUTCheckpointSignpost initWithName:uniqueIdentifier:]
  -[CUTCheckpointSignpost _verifyMatchingName:]
  -[CUTCheckpointSignpost setLog:]
  -[CUTCheckpointSignpost signpostID]
  -[CUTCheckpointSignpost setSignpostID:]
  -[CUTCheckpointSignpost setScope:]


CUTCheckpointInstant : CUTCheckpointSignpost
 @property  NSDate *date

  // instance methods
  -[CUTCheckpointInstant .cxx_destruct]
  -[CUTCheckpointInstant date]
  -[CUTCheckpointInstant setDate:]
  -[CUTCheckpointInstant initWithName:uniqueIdentifier:]
  -[CUTCheckpointInstant _reportStartDate]
  -[CUTCheckpointInstant _reportEndDate]
  -[CUTCheckpointInstant initWithDate:name:uniqueIdentifier:]
  -[CUTCheckpointInstant _touchDate]
  -[CUTCheckpointInstant mergeWithCheckpoint:]


CUTCheckpointRange : CUTCheckpointSignpost
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  BOOL ordered

  // instance methods
  -[CUTCheckpointRange .cxx_destruct]
  -[CUTCheckpointRange startDate]
  -[CUTCheckpointRange endDate]
  -[CUTCheckpointRange setStartDate:]
  -[CUTCheckpointRange setEndDate:]
  -[CUTCheckpointRange initWithName:uniqueIdentifier:]
  -[CUTCheckpointRange _reportStartDate]
  -[CUTCheckpointRange _reportEndDate]
  -[CUTCheckpointRange mergeWithCheckpoint:]
  -[CUTCheckpointRange initWithStartDate:endDate:name:uniqueIdentifier:]
  -[CUTCheckpointRange _touchStartDate]
  -[CUTCheckpointRange _touchEndDate]
  -[CUTCheckpointRange isOrdered]
  -[CUTCheckpointRange setOrdered:]


CUTCheckpointTrace : CUTCheckpointRange
 @property  NSMutableArray *mutableCheckpoints

  // instance methods
  -[CUTCheckpointTrace freeze]
  -[CUTCheckpointTrace .cxx_destruct]
  -[CUTCheckpointTrace _appendReportToMutableString:indentation:paddedNameLength:]
  -[CUTCheckpointTrace setAssertsUseAfterFreeze:]
  -[CUTCheckpointTrace initWithStartDate:endDate:name:uniqueIdentifier:]
  -[CUTCheckpointTrace mutableCheckpoints]
  -[CUTCheckpointTrace checkpoints]
  -[CUTCheckpointTrace instantCheckpointWithName:extraIdentifier:]
  -[CUTCheckpointTrace _identifierWithExtraIdentifier:]
  -[CUTCheckpointTrace appendCheckpoint:]
  -[CUTCheckpointTrace rangeCheckpointWithName:extraIdentifier:]
  -[CUTCheckpointTrace instantCheckpointWithName:]
  -[CUTCheckpointTrace rangeCheckpointWithName:]
  -[CUTCheckpointTrace setMutableCheckpoints:]


CUTAsyncReducer : NSObject /usr/lib/libSystem.B.dylib
 @property  NSArray *input
 @property  CUTResult *result
 @property  @? completionBlock
 @property  @? reducerBlock

  // instance methods
  -[CUTAsyncReducer .cxx_destruct]
  -[CUTAsyncReducer completionBlock]
  -[CUTAsyncReducer setCompletionBlock:]
  -[CUTAsyncReducer result]
  -[CUTAsyncReducer input]
  -[CUTAsyncReducer setResult:]
  -[CUTAsyncReducer reducerBlock]
  -[CUTAsyncReducer _completeWithResult:]
  -[CUTAsyncReducer _reduceWithPending:visited:currentResult:completion:]
  -[CUTAsyncReducer setReducerBlock:]
  -[CUTAsyncReducer initWithInput:initialValue:]
  -[CUTAsyncReducer reduceWithCompletion:]
  -[CUTAsyncReducer setInput:]


CUTAsyncReducerState : NSObject /usr/lib/libSystem.B.dylib
 @property  NSArray *visitedItems
 @property  NSArray *pendingItems
 @property  id currentItem
 @property  CUTResult *currentResult
 @property  @? cancelBlock
 @property  @? continueBlock
 @property  @? stopBlock

  // instance methods
  -[CUTAsyncReducerState .cxx_destruct]
  -[CUTAsyncReducerState setVisitedItems:]
  -[CUTAsyncReducerState setPendingItems:]
  -[CUTAsyncReducerState setCurrentItem:]
  -[CUTAsyncReducerState setCurrentResult:]
  -[CUTAsyncReducerState setCancelBlock:]
  -[CUTAsyncReducerState setStopBlock:]
  -[CUTAsyncReducerState setContinueBlock:]
  -[CUTAsyncReducerState continueBlock]
  -[CUTAsyncReducerState cancelBlock]
  -[CUTAsyncReducerState stopBlock]
  -[CUTAsyncReducerState continueWithResult:]
  -[CUTAsyncReducerState cancelWithError:]
  -[CUTAsyncReducerState stopWithResult:]
  -[CUTAsyncReducerState visitedItems]
  -[CUTAsyncReducerState pendingItems]
  -[CUTAsyncReducerState currentItem]
  -[CUTAsyncReducerState currentResult]


CUTWeakReference : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CUTWeakReference weakRefWithObject:]

  // instance methods
  -[CUTWeakReference isEqual:]
  -[CUTWeakReference object]
  -[CUTWeakReference initWithObject:]
  -[CUTWeakReference .cxx_destruct]
  -[CUTWeakReference internal]


_CUTWeakReference : NSObject /usr/lib/libSystem.B.dylib
 @property  id object
 @property  unsigned long objectAddress

  // instance methods
  -[_CUTWeakReference object]
  -[_CUTWeakReference setObject:]
  -[_CUTWeakReference .cxx_destruct]
  -[_CUTWeakReference setObjectAddress:]
  -[_CUTWeakReference objectAddress]


_CUTUnsafePromise : CUTUnsafePromise
 @property  BOOL done
 @property  CUTResult *result
 @property  NSMutableArray *resultBlocks

  // instance methods
  -[_CUTUnsafePromise init]
  -[_CUTUnsafePromise .cxx_destruct]
  -[_CUTUnsafePromise result]
  -[_CUTUnsafePromise setResult:]
  -[_CUTUnsafePromise done]
  -[_CUTUnsafePromise setDone:]
  -[_CUTUnsafePromise initWithResult:]
  -[_CUTUnsafePromise _fulfillWithResult:]
  -[_CUTUnsafePromise registerResultBlock:]
  -[_CUTUnsafePromise resultBlocks]
  -[_CUTUnsafePromise setResultBlocks:]


CUTNetworkInterfaceListener : NSObject /usr/lib/libSystem.B.dylib
 @property  int wifiState
 @property  int cellState
 @property  NSSet *IPv6Addresses
 @property  NSSet *IPv4Addresses

  // class methods
  +[CUTNetworkInterfaceListener sharedInstance]

  // instance methods
  -[CUTNetworkInterfaceListener init]
  -[CUTNetworkInterfaceListener dealloc]
  -[CUTNetworkInterfaceListener allocWithZone:]
  -[CUTNetworkInterfaceListener copyWithZone:]
  -[CUTNetworkInterfaceListener .cxx_destruct]
  -[CUTNetworkInterfaceListener _notifyDelegatesOfAddressChange:isIPv6:]
  -[CUTNetworkInterfaceListener _notifyDelegatesOfCellChange:]
  -[CUTNetworkInterfaceListener _notifyDelegatesOfWifiChange:]
  -[CUTNetworkInterfaceListener _handleNetworkChange:]
  -[CUTNetworkInterfaceListener addDelegate:]
  -[CUTNetworkInterfaceListener removeDelegate:]
  -[CUTNetworkInterfaceListener wifiState]
  -[CUTNetworkInterfaceListener cellState]
  -[CUTNetworkInterfaceListener IPv6Addresses]
  -[CUTNetworkInterfaceListener IPv4Addresses]


_CUTPowerAssertion : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[_CUTPowerAssertion .cxx_destruct]


CUTPowerAssertion : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[CUTPowerAssertion dealloc]
  -[CUTPowerAssertion .cxx_destruct]
  -[CUTPowerAssertion initWithIdentifier:]
  -[CUTPowerAssertion initWithIdentifier:timeout:]


CUTLog : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CUTLog power]
  +[CUTLog network]
  +[CUTLog weakLink]
  +[CUTLog checkpointTraceThread]
  +[CUTLog checkpointTraceProcess]
  +[CUTLog checkpointTraceSystem]
  +[CUTLog utilities]
  +[CUTLog fileCopier]
  +[CUTLog xpc]


_CUTPromise : CUTPromise
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSObject<OS_dispatch_group> *group
 @property  BOOL done
 @property  CUTResult *result

  // instance methods
  -[_CUTPromise setQueue:]
  -[_CUTPromise queue]
  -[_CUTPromise .cxx_destruct]
  -[_CUTPromise setGroup:]
  -[_CUTPromise initWithQueue:]
  -[_CUTPromise result]
  -[_CUTPromise setResult:]
  -[_CUTPromise group]
  -[_CUTPromise done]
  -[_CUTPromise setDone:]
  -[_CUTPromise _fulfillWithResult:]
  -[_CUTPromise registerResultBlock:]


_CUTStaticPromise : CUTPromise
 @property  CUTResult *result

  // instance methods
  -[_CUTStaticPromise .cxx_destruct]
  -[_CUTStaticPromise result]
  -[_CUTStaticPromise setResult:]
  -[_CUTStaticPromise initWithResult:]
  -[_CUTStaticPromise registerResultBlock:]


_CUTLockingPromise : CUTPromise
 @property  NSRecursiveLock *lock
 @property  BOOL done
 @property  CUTResult *result
 @property  NSMutableArray *resultBlocks

  // instance methods
  -[_CUTLockingPromise init]
  -[_CUTLockingPromise lock]
  -[_CUTLockingPromise .cxx_destruct]
  -[_CUTLockingPromise result]
  -[_CUTLockingPromise setResult:]
  -[_CUTLockingPromise done]
  -[_CUTLockingPromise setDone:]
  -[_CUTLockingPromise _fulfillWithResult:]
  -[_CUTLockingPromise registerResultBlock:]
  -[_CUTLockingPromise resultBlocks]
  -[_CUTLockingPromise setResultBlocks:]
  -[_CUTLockingPromise setLock:]


CUTResult : NSObject /usr/lib/libSystem.B.dylib
 @property  NSError *inError
 @property  id inValue
 @property  long long state
 @property  NSError *error
 @property  id value

  // instance methods
  -[CUTResult .cxx_destruct]
  -[CUTResult error]
  -[CUTResult value]
  -[CUTResult state]
  -[CUTResult initWithError:]
  -[CUTResult initWithSuccess:]
  -[CUTResult initWithState:value:error:]
  -[CUTResult inError]
  -[CUTResult setInError:]
  -[CUTResult inValue]
  -[CUTResult setInValue:]


CUTReporting : NSObject /usr/lib/libSystem.B.dylib
 @property  CUTPromise *promise
 @property  {os_unfair_lock_s=I} promiseLock

  // class methods
  +[CUTReporting _rtcReportingSession]
  +[CUTReporting reportingSession]
  +[CUTReporting startRTCReportingSessionWithCompletion:]
  +[CUTReporting RTCSessionPromiseWithBatchingInterval:]

  // instance methods
  -[CUTReporting init]
  -[CUTReporting .cxx_destruct]
  -[CUTReporting _RTCSessionPromiseWithBatchingInterval:]
  -[CUTReporting promise]
  -[CUTReporting _beginPromiseTimeoutWithInterval:]
  -[CUTReporting _startConfigurationOfSession:withPromiseSeal:]
  -[CUTReporting _failSeal:withError:]
  -[CUTReporting _fullfillSeal:withSession:]
  -[CUTReporting setPromise:]
  -[CUTReporting promiseLock]


CUTTelephonyManager : NSObject /usr/lib/libSystem.B.dylib
 @property  ^{__CTServerConnection=} _serverConnection
 @property  ^v _suspendDormancyAssertion
 @property  BOOL registered
 @property  NSRecursiveLock *lock
 @property  NSMutableSet *disableFastDormancyTokens
 @property  BOOL disableFastDormancy

  // class methods
  +[CUTTelephonyManager sharedInstance]

  // instance methods
  -[CUTTelephonyManager init]
  -[CUTTelephonyManager dealloc]
  -[CUTTelephonyManager lock]
  -[CUTTelephonyManager .cxx_destruct]
  -[CUTTelephonyManager _serverConnection]
  -[CUTTelephonyManager registered]
  -[CUTTelephonyManager setLock:]
  -[CUTTelephonyManager _adjustFastDormancyTokens]
  -[CUTTelephonyManager disableFastDormancy]
  -[CUTTelephonyManager _setFastDormancySuspended:]
  -[CUTTelephonyManager __adjustFastDormancyTokens]
  -[CUTTelephonyManager addFastDormancyDisableToken:]
  -[CUTTelephonyManager removeFastDormancyDisableToken:]
  -[CUTTelephonyManager disableFastDormancyTokens]
  -[CUTTelephonyManager setDisableFastDormancyTokens:]
  -[CUTTelephonyManager setRegistered:]
  -[CUTTelephonyManager _suspendDormancyAssertion]
  -[CUTTelephonyManager set_suspendDormancyAssertion:]
  -[CUTTelephonyManager set_serverConnection:]


CUTReachability : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CUTReachability reachabilityWithAddress:]
  +[CUTReachability reachabilityWithHostName:]
  +[CUTReachability reachabilityForInternetConnection]
  +[CUTReachability reachabilityForLocalWiFi]

  // instance methods
  -[CUTReachability dealloc]
  -[CUTReachability localWiFiStatusForFlags:]
  -[CUTReachability networkStatusForFlags:]
  -[CUTReachability connectionRequired]
  -[CUTReachability currentReachabilityStatus]


CUTWiFiManager : NSObject /usr/lib/libSystem.B.dylib
 @property  NSRecursiveLock *lock
 @property  NSThread *wifiThread
 @property  NSRunLoop *wifiRunLoop
 @property  ^{__CFRunLoopSource=} runLoopSource
 @property  ^v wifiManager
 @property  ^v wifiDevice
 @property  ^v currentNetwork
 @property  ^v dynamicStore
 @property  int linkToken
 @property  NSHashTable *delegateMap
 @property  NSHashTable *wowClients
 @property  NSDictionary *lastWiFiPowerInfo
 @property  NSMutableSet *wiFiAutoAssociationTokens
 @property  NSObject<OS_dispatch_queue> *incomingCallbacksQueue
 @property  BOOL isPrimaryCellularCached
 @property  BOOL isWiFiEnabled
 @property  BOOL isWiFiAssociated
 @property  BOOL isWiFiCaptive
 @property  BOOL isHostingWiFiHotSpot
 @property  BOOL isWoWSupported
 @property  BOOL isWoWEnabled
 @property  BOOL willTryToSearchForWiFiNetwork
 @property  BOOL willTryToAutoAssociateWiFiNetwork
 @property  NSNumber *wiFiSignalStrength
 @property  NSNumber *wiFiScaledRSSI
 @property  NSNumber *wiFiScaledRate
 @property  NSString *currentSSID
 @property  BOOL autoAssociateWiFiAsForegroundClient
 @property  BOOL autoAssociateWiFi

  // class methods
  +[CUTWiFiManager sharedInstance]

  // instance methods
  -[CUTWiFiManager init]
  -[CUTWiFiManager dealloc]
  -[CUTWiFiManager lock]
  -[CUTWiFiManager .cxx_destruct]
  -[CUTWiFiManager isWiFiEnabled]
  -[CUTWiFiManager addDelegate:]
  -[CUTWiFiManager removeDelegate:]
  -[CUTWiFiManager setLock:]
  -[CUTWiFiManager _setupWifiNotifications]
  -[CUTWiFiManager _createDynamicStore]
  -[CUTWiFiManager _updateIsWiFiAssociatedAsync:]
  -[CUTWiFiManager _threadedMain]
  -[CUTWiFiManager _updateInitialWiFiState]
  -[CUTWiFiManager _performBackgroundInit]
  -[CUTWiFiManager _adjustWiFiAutoAssociation]
  -[CUTWiFiManager _handlePotentialDeviceChange:]
  -[CUTWiFiManager _adjustWoWState]
  -[CUTWiFiManager _performDeviceBlock:useCache:]
  -[CUTWiFiManager _adjustWiFiAutoAssociationLocked]
  -[CUTWiFiManager _ssidFromNetwork:]
  -[CUTWiFiManager _performCurrentNetworkBlock:withDevice:async:]
  -[CUTWiFiManager setCurrentNetwork:]
  -[CUTWiFiManager _performDeviceBlock:]
  -[CUTWiFiManager _performCurrentNetworkBlock:withDevice:]
  -[CUTWiFiManager _updateIsWiFiEnabled]
  -[CUTWiFiManager currentWiFiNetworkPowerUsageWithCompletion:]
  -[CUTWiFiManager isWiFiAssociated]
  -[CUTWiFiManager _wifiMeasurementErrorForInterval:]
  -[CUTWiFiManager _performCurrentNetworkBlock:]
  -[CUTWiFiManager _isPrimaryCellular]
  -[CUTWiFiManager autoAssociateWiFi]
  -[CUTWiFiManager autoAssociateWiFiAsForegroundClient]
  -[CUTWiFiManager addWoWClient:]
  -[CUTWiFiManager removeWoWClient:]
  -[CUTWiFiManager hasWoWClient:]
  -[CUTWiFiManager isHostingWiFiHotSpot]
  -[CUTWiFiManager willTryToAutoAssociateWiFiNetwork]
  -[CUTWiFiManager willTryToSearchForWiFiNetwork]
  -[CUTWiFiManager wiFiSignalStrength]
  -[CUTWiFiManager wiFiScaledRSSI]
  -[CUTWiFiManager wiFiScaledRate]
  -[CUTWiFiManager _handleDevicePowerCallback]
  -[CUTWiFiManager _handleDeviceAttachedCallback]
  -[CUTWiFiManager _setCurrentNetwork:]
  -[CUTWiFiManager _performPowerReading]
  -[CUTWiFiManager currentSSID]
  -[CUTWiFiManager isWiFiCaptive]
  -[CUTWiFiManager hasWiFiAutoAssociationClientToken:]
  -[CUTWiFiManager addWiFiAutoAssociationClientToken:]
  -[CUTWiFiManager removeWiFiAutoAssociationClientToken:]
  -[CUTWiFiManager showNetworkOptions]
  -[CUTWiFiManager isWoWEnabled]
  -[CUTWiFiManager setAutoAssociateWiFiAsForegroundClient:]
  -[CUTWiFiManager isWoWSupported]
  -[CUTWiFiManager wiFiAutoAssociationTokens]
  -[CUTWiFiManager setWiFiAutoAssociationTokens:]
  -[CUTWiFiManager delegateMap]
  -[CUTWiFiManager setDelegateMap:]
  -[CUTWiFiManager wowClients]
  -[CUTWiFiManager setWowClients:]
  -[CUTWiFiManager currentNetwork]
  -[CUTWiFiManager linkToken]
  -[CUTWiFiManager setLinkToken:]
  -[CUTWiFiManager wifiManager]
  -[CUTWiFiManager setWifiManager:]
  -[CUTWiFiManager wifiDevice]
  -[CUTWiFiManager setWifiDevice:]
  -[CUTWiFiManager dynamicStore]
  -[CUTWiFiManager setDynamicStore:]
  -[CUTWiFiManager lastWiFiPowerInfo]
  -[CUTWiFiManager setLastWiFiPowerInfo:]
  -[CUTWiFiManager wifiThread]
  -[CUTWiFiManager setWifiThread:]
  -[CUTWiFiManager runLoopSource]
  -[CUTWiFiManager setRunLoopSource:]
  -[CUTWiFiManager wifiRunLoop]
  -[CUTWiFiManager setWifiRunLoop:]
  -[CUTWiFiManager incomingCallbacksQueue]
  -[CUTWiFiManager setIncomingCallbacksQueue:]
  -[CUTWiFiManager isPrimaryCellularCached]
  -[CUTWiFiManager setIsPrimaryCellularCached:]


CUTUnsafePromise : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CUTUnsafePromise failedPromiseWithError:]
  +[CUTUnsafePromise fulfilledPromiseWithValue:]
  +[CUTUnsafePromise all:]

  // instance methods
  -[CUTUnsafePromise _init]
  -[CUTUnsafePromise registerResultBlock:]
  -[CUTUnsafePromise then:]


CUTUnsafePromiseSeal : NSObject /usr/lib/libSystem.B.dylib
 @property  CUTUnsafePromise *promise

  // instance methods
  -[CUTUnsafePromiseSeal init]
  -[CUTUnsafePromiseSeal .cxx_destruct]
  -[CUTUnsafePromiseSeal failWithError:]
  -[CUTUnsafePromiseSeal promise]
  -[CUTUnsafePromiseSeal fulfillWithValue:]
  -[CUTUnsafePromiseSeal setPromise:]


CUTPromise : CUTUnsafePromise
  // class methods
  +[CUTPromise failedPromiseWithError:]
  +[CUTPromise fulfilledPromiseWithValue:]
  +[CUTPromise all:]

  // instance methods
  -[CUTPromise registerResultBlock:]
  -[CUTPromise then:]


CUTPromiseSeal : NSObject /usr/lib/libSystem.B.dylib
 @property  CUTPromise *promise

  // instance methods
  -[CUTPromiseSeal .cxx_destruct]
  -[CUTPromiseSeal failWithError:]
  -[CUTPromiseSeal initWithQueue:]
  -[CUTPromiseSeal promise]
  -[CUTPromiseSeal fulfillWithValue:]
  -[CUTPromiseSeal setPromise:]


CUTFileCopier : NSObject /usr/lib/libSystem.B.dylib
 @property  ^v _BOMCopier
 @property  BOOL inProgress
 @property  unsigned int operation
 @property  <CUTFileCopierDelegate> *delegate
 @property  NSURL *inputURL
 @property  NSURL *outputURL
 @property  id identifier
 @property  BOOL wasCancelled
 @property  BOOL didErrorOccur

  // instance methods
  -[CUTFileCopier dealloc]
  -[CUTFileCopier delegate]
  -[CUTFileCopier setDelegate:]
  -[CUTFileCopier .cxx_destruct]
  -[CUTFileCopier identifier]
  -[CUTFileCopier cancel]
  -[CUTFileCopier operation]
  -[CUTFileCopier setOperation:]
  -[CUTFileCopier start]
  -[CUTFileCopier cleanup]
  -[CUTFileCopier _fillOutputURLFromInputURL]
  -[CUTFileCopier inputURL]
  -[CUTFileCopier _temporaryCopierPath]
  -[CUTFileCopier _worker_doCopy]
  -[CUTFileCopier outputURL]
  -[CUTFileCopier _main_copierFinishedWithResult:]
  -[CUTFileCopier initWithInputURL:outputURL:identifier:operation:delegate:]
  -[CUTFileCopier wasCancelled]
  -[CUTFileCopier didErrorOccur]
  -[CUTFileCopier inProgress]
  -[CUTFileCopier setInProgress:]
  -[CUTFileCopier _BOMCopier]
  -[CUTFileCopier set_BOMCopier:]


_CUTPowerMonitor : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[_CUTPowerMonitor .cxx_destruct]


CUTPowerMonitor : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL isExternalPowerConnected
 @property  double batteryPercentRemaining

  // class methods
  +[CUTPowerMonitor sharedInstance]

  // instance methods
  -[CUTPowerMonitor dealloc]
  -[CUTPowerMonitor .cxx_destruct]
  -[CUTPowerMonitor _init]
  -[CUTPowerMonitor addDelegate:]
  -[CUTPowerMonitor removeDelegate:]
  -[CUTPowerMonitor _initIOService]
  -[CUTPowerMonitor updateBatteryLevelWithBatteryEntry:]
  -[CUTPowerMonitor _updateBatteryConnectedStateWithBatteryEntry:]
  -[CUTPowerMonitor _handlePowerChangedNotificationWithMessageType:notificationID:]
  -[CUTPowerMonitor updateBatteryConnectedStateWithBatteryEntry:]
  -[CUTPowerMonitor isExternalPowerConnected]
  -[CUTPowerMonitor batteryPercentRemaining]


NSString(CUTAdditions)
	// class methods
	+[NSString(CUTAdditions) cutStringGUID]

	// instance methods
	-[NSString(CUTAdditions) cutStringByResolvingAndStandardizingPath]

NSArray(CUTAdditions)
	// instance methods
	-[NSArray(CUTAdditions) cutFirstObject]

NSFileManager(CUTAdditions)
	// instance methods
	-[NSFileManager(CUTAdditions) _cutIsPathOnMissingVolume:]
	-[NSFileManager(CUTAdditions) cutCreateUniqueDirectoryWithName:atPath:ofType:]
	-[NSFileManager(CUTAdditions) cutUniqueFilename:atPath:ofType:]
	-[NSFileManager(CUTAdditions) cutRandomTemporaryPathWithFileName:]

NSData(CUTAdditions)
	// instance methods
	-[NSData(CUTAdditions) _CUTDecompressData]
	-[NSData(CUTAdditions) _CUTStringFromBaseData]
	-[NSData(CUTAdditions) _CUTOptionallyDecompressData]
	-[NSData(CUTAdditions) _CUTCopyGzippedData]

01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 0900 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSRecursiveLock 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
