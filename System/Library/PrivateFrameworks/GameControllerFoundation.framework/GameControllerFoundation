|| __DATA.__objc_data _OBJC_CLASS_$_GCConfigurationAssetManagementServiceConnection
|| __DATA.__objc_data _OBJC_CLASS_$_GCConfigurationAssetManagementServiceXPCProxy
|| __DATA.__objc_data _OBJC_CLASS_$_GCGenericDeviceDataAddExpressionModel
|| __DATA.__objc_data _OBJC_CLASS_$_GCGenericDeviceDataAddExpressionModelBuilder
|| __DATA.__objc_data _OBJC_CLASS_$_GCGenericDeviceDataBitTestExpressionModel
|| __DATA.__objc_data _OBJC_CLASS_$_GCGenericDeviceDataBitTestExpressionModelBuilder
|| __DATA.__objc_data _OBJC_CLASS_$_GCGenericDeviceDataClampExpressionModel
|| __DATA.__objc_data _OBJC_CLASS_$_GCGenericDeviceDataClampExpressionModelBuilder
|| __DATA.__objc_data _OBJC_CLASS_$_GCGenericDeviceDataConstantExpressionModel
|| __DATA.__objc_data _OBJC_CLASS_$_GCGenericDeviceDataConstantExpressionModelBuilder
|| __DATA.__objc_data _OBJC_CLASS_$_GCGenericDeviceDataInputElementAttributeExpressionModel
|| __DATA.__objc_data _OBJC_CLASS_$_GCGenericDeviceDataInputElementAttributeExpressionModelBuilder
|| __DATA.__objc_data _OBJC_CLASS_$_GCGenericDeviceDataInputElementValueExpressionModel
|| __DATA.__objc_data _OBJC_CLASS_$_GCGenericDeviceDataInputElementValueExpressionModelBuilder
|| __DATA.__objc_data _OBJC_CLASS_$_GCGenericDeviceDataInterpolateExpressionModel
|| __DATA.__objc_data _OBJC_CLASS_$_GCGenericDeviceDataInterpolateExpressionModelBuilder
|| __DATA.__objc_data _OBJC_CLASS_$_GCGenericDeviceDataMultiplyExpressionModel
|| __DATA.__objc_data _OBJC_CLASS_$_GCGenericDeviceDataMultiplyExpressionModelBuilder
|| __DATA.__objc_data _OBJC_CLASS_$_GCGenericDeviceDataProcessorExpressionModel
|| __DATA.__objc_data _OBJC_CLASS_$_GCGenericDeviceDataProcessorExpressionModelBuilder
|| __DATA.__objc_data _OBJC_CLASS_$_GCGenericDeviceDataSDLHatFunctionExpressionModel
|| __DATA.__objc_data _OBJC_CLASS_$_GCGenericDeviceDataSDLHatFunctionExpressionModelBuilder
|| __DATA.__objc_data _OBJC_CLASS_$_GCGenericDeviceDriverModel
|| __DATA.__objc_data _OBJC_CLASS_$_GCGenericDeviceDriverModelBuilder
|| __DATA.__objc_data _OBJC_CLASS_$_GCGenericDeviceElementModel
|| __DATA.__objc_data _OBJC_CLASS_$_GCGenericDeviceElementModelBuilder
|| __DATA.__objc_data _OBJC_CLASS_$_GCGenericDeviceInputEventDriverModel
|| __DATA.__objc_data _OBJC_CLASS_$_GCGenericDeviceInputEventDriverModelBuilder
|| __DATA.__objc_data _OBJC_CLASS_$_GCGenericDeviceInputGamepadEventFieldModel
|| __DATA.__objc_data _OBJC_CLASS_$_GCGenericDeviceInputGamepadEventFieldModelBuilder
|| __DATA.__objc_data _OBJC_CLASS_$_GCGenericDeviceModel
|| __DATA.__objc_data _OBJC_CLASS_$_GCGenericDeviceModelBuilder
|| __DATA.__objc_data _OBJC_CLASS_$_GCGenericDevicePhysicalInputButtonModel
|| __DATA.__objc_data _OBJC_CLASS_$_GCGenericDevicePhysicalInputButtonModelBuilder
|| __DATA.__objc_data _OBJC_CLASS_$_GCGenericDevicePhysicalInputDpadModel
|| __DATA.__objc_data _OBJC_CLASS_$_GCGenericDevicePhysicalInputDpadModelBuilder
|| __DATA.__objc_data _OBJC_CLASS_$_GCGenericDevicePhysicalInputElementModel
|| __DATA.__objc_data _OBJC_CLASS_$_GCGenericDevicePhysicalInputElementModelBuilder
|| __DATA.__objc_data _OBJC_CLASS_$_GCGenericDevicePhysicalInputModel
|| __DATA.__objc_data _OBJC_CLASS_$_GCGenericDevicePhysicalInputModelBuilder
|| __DATA.__objc_data _OBJC_CLASS_$_GCHIDDevice
|| __DATA.__objc_data _OBJC_CLASS_$_GCHIDDeviceInput
|| __DATA.__objc_data _OBJC_CLASS_$_GCHIDDeviceSnapshot
|| __DATA.__objc_data _OBJC_CLASS_$_GCHIDElementSnapshot
|| __DATA.__objc_data _OBJC_CLASS_$_GCHIDInputElement
|| __DATA.__objc_data _OBJC_CLASS_$_GCHIDKernelDeviceSnapshot
|| __DATA.__objc_data _OBJC_CLASS_$_GCHIDUserDeviceSnapshot
|| __DATA.__objc_data _OBJC_CLASS_$__GCDeviceConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$__GCGenericPhysicalDevicePending
|| __DATA.__objc_data _OBJC_CLASS_$__GCHIDServiceInfo
|| __DATA.__objc_data _OBJC_CLASS_$__GCLogitechRacingWheelDeviceManager
|| __DATA.__objc_data _OBJC_CLASS_$__GCMutableDeviceConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_GCConfigurationAssetManagementServiceConnection
|| __DATA.__objc_data _OBJC_METACLASS_$_GCConfigurationAssetManagementServiceXPCProxy
|| __DATA.__objc_data _OBJC_METACLASS_$_GCGenericDeviceDataAddExpressionModel
|| __DATA.__objc_data _OBJC_METACLASS_$_GCGenericDeviceDataAddExpressionModelBuilder
|| __DATA.__objc_data _OBJC_METACLASS_$_GCGenericDeviceDataBitTestExpressionModel
|| __DATA.__objc_data _OBJC_METACLASS_$_GCGenericDeviceDataBitTestExpressionModelBuilder
|| __DATA.__objc_data _OBJC_METACLASS_$_GCGenericDeviceDataClampExpressionModel
|| __DATA.__objc_data _OBJC_METACLASS_$_GCGenericDeviceDataClampExpressionModelBuilder
|| __DATA.__objc_data _OBJC_METACLASS_$_GCGenericDeviceDataConstantExpressionModel
|| __DATA.__objc_data _OBJC_METACLASS_$_GCGenericDeviceDataConstantExpressionModelBuilder
|| __DATA.__objc_data _OBJC_METACLASS_$_GCGenericDeviceDataInputElementAttributeExpressionModel
|| __DATA.__objc_data _OBJC_METACLASS_$_GCGenericDeviceDataInputElementAttributeExpressionModelBuilder
|| __DATA.__objc_data _OBJC_METACLASS_$_GCGenericDeviceDataInputElementValueExpressionModel
|| __DATA.__objc_data _OBJC_METACLASS_$_GCGenericDeviceDataInputElementValueExpressionModelBuilder
|| __DATA.__objc_data _OBJC_METACLASS_$_GCGenericDeviceDataInterpolateExpressionModel
|| __DATA.__objc_data _OBJC_METACLASS_$_GCGenericDeviceDataInterpolateExpressionModelBuilder
|| __DATA.__objc_data _OBJC_METACLASS_$_GCGenericDeviceDataMultiplyExpressionModel
|| __DATA.__objc_data _OBJC_METACLASS_$_GCGenericDeviceDataMultiplyExpressionModelBuilder
|| __DATA.__objc_data _OBJC_METACLASS_$_GCGenericDeviceDataProcessorExpressionModel
|| __DATA.__objc_data _OBJC_METACLASS_$_GCGenericDeviceDataProcessorExpressionModelBuilder
|| __DATA.__objc_data _OBJC_METACLASS_$_GCGenericDeviceDataSDLHatFunctionExpressionModel
|| __DATA.__objc_data _OBJC_METACLASS_$_GCGenericDeviceDataSDLHatFunctionExpressionModelBuilder
|| __DATA.__objc_data _OBJC_METACLASS_$_GCGenericDeviceDriverModel
|| __DATA.__objc_data _OBJC_METACLASS_$_GCGenericDeviceDriverModelBuilder
|| __DATA.__objc_data _OBJC_METACLASS_$_GCGenericDeviceElementModel
|| __DATA.__objc_data _OBJC_METACLASS_$_GCGenericDeviceElementModelBuilder
|| __DATA.__objc_data _OBJC_METACLASS_$_GCGenericDeviceInputEventDriverModel
|| __DATA.__objc_data _OBJC_METACLASS_$_GCGenericDeviceInputEventDriverModelBuilder
|| __DATA.__objc_data _OBJC_METACLASS_$_GCGenericDeviceInputGamepadEventFieldModel
|| __DATA.__objc_data _OBJC_METACLASS_$_GCGenericDeviceInputGamepadEventFieldModelBuilder
|| __DATA.__objc_data _OBJC_METACLASS_$_GCGenericDeviceModel
|| __DATA.__objc_data _OBJC_METACLASS_$_GCGenericDeviceModelBuilder
|| __DATA.__objc_data _OBJC_METACLASS_$_GCGenericDevicePhysicalInputButtonModel
|| __DATA.__objc_data _OBJC_METACLASS_$_GCGenericDevicePhysicalInputButtonModelBuilder
|| __DATA.__objc_data _OBJC_METACLASS_$_GCGenericDevicePhysicalInputDpadModel
|| __DATA.__objc_data _OBJC_METACLASS_$_GCGenericDevicePhysicalInputDpadModelBuilder
|| __DATA.__objc_data _OBJC_METACLASS_$_GCGenericDevicePhysicalInputElementModel
|| __DATA.__objc_data _OBJC_METACLASS_$_GCGenericDevicePhysicalInputElementModelBuilder
|| __DATA.__objc_data _OBJC_METACLASS_$_GCGenericDevicePhysicalInputModel
|| __DATA.__objc_data _OBJC_METACLASS_$_GCGenericDevicePhysicalInputModelBuilder
|| __DATA.__objc_data _OBJC_METACLASS_$_GCHIDDevice
|| __DATA.__objc_data _OBJC_METACLASS_$_GCHIDDeviceInput
|| __DATA.__objc_data _OBJC_METACLASS_$_GCHIDDeviceSnapshot
|| __DATA.__objc_data _OBJC_METACLASS_$_GCHIDElementSnapshot
|| __DATA.__objc_data _OBJC_METACLASS_$_GCHIDInputElement
|| __DATA.__objc_data _OBJC_METACLASS_$_GCHIDKernelDeviceSnapshot
|| __DATA.__objc_data _OBJC_METACLASS_$_GCHIDUserDeviceSnapshot
|| __DATA.__objc_data _OBJC_METACLASS_$__GCDeviceConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$__GCGenericPhysicalDevicePending
|| __DATA.__objc_data _OBJC_METACLASS_$__GCHIDServiceInfo
|| __DATA.__objc_data _OBJC_METACLASS_$__GCLogitechRacingWheelDeviceManager
|| __DATA.__objc_data _OBJC_METACLASS_$__GCMutableDeviceConfiguration
|| __DATA.__objc_ivar _OBJC_IVAR_$__GCHIDServiceInfo._inputData
|| __DATA_CONST.__const _GCConfigurationBundleSourceBundlesDidChangeNotification
|| __DATA_CONST.__const _GCCurrentConsoleUserDidChangeNotification
|| __DATA_CONST.__const _GCCurrentConsoleUserDidChangeNotificationUserIdentifierKey
|| __DATA_CONST.__const _GCCurrentConsoleUserDidChangeNotificationUserKey
|| __DATA_CONST.__const _GCFailingKeyPathErrorKey
|| __DATA_CONST.__const _GCGenericDeviceErrorDomain
|| __DATA_CONST.__const _GCIPCErrorDomain
|| __DATA_CONST.__const _GCIPCPeerIdentifierErrorKey
|| __DATA_CONST.__const _GCIPCServiceNameErrorKey
|| __DATA_CONST.__const _GCModelErrorDomain
|| __DATA_CONST.__const _GCPhysicalDeviceProbeScoreHighPriority
|| __DATA_CONST.__const _GCPhysicalDeviceProbeScoreLowPriority
|| __DATA_CONST.__const _GCPhysicalDeviceProbeScoreMediumPriority
|| __DATA_CONST.__const _GCPhysicalDeviceProbeScoreNoMatch
|| __DATA_CONST.__const _GCPhysicalDeviceProbeScoreVeryHighPriority
|| __DATA_CONST.__const _GCPhysicalDeviceProbeScoreVeryLowPriority
|| __DATA_CONST.__const _GCServiceErrorDomain
|| __DATA_CONST.__const _GCServiceNameErrorKey
|| __DATA_CONST.__const _GC_NSCollectionErrorDomain
|| __DATA_CONST.__const _GC_NSCollectionErrorElementClassKey
|| __DATA_CONST.__const _GC_NSCollectionErrorExpectedClassKey
|| __DATA_CONST.__const _GC_NSCollectionErrorExpectedClassesKey
|| __DATA_CONST.__const _GC_NSCollectionErrorIndexClassKey
|| __DATA_CONST.__const _GC_NSCollectionErrorIndexKey
|| __DATA_CONST.__const _GC_NSExceptionErrorCodeKey
|| __DATA_CONST.__const _GC_NSExceptionErrorDomain
|| __DATA_CONST.__const _GC_NSExceptionErrorDomainKey
|| __DATA_CONST.__const _GC_NSInvalidCollectionException
|| __DATA_CONST.__const _GC_NSURLAssetKey
|| __DATA_CONST.__const _GC_NSUnhandledErrorException
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GCConfigXPCService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GCConfigXPCServiceClientConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GCConfigXPCServiceConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GCConfigXPCServiceServiceConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GCConfigurationBundleFileSystemSource
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GCDaemon
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GCFuture
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GCIPCRemoteConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GCIPCRemoteIncomingConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GCIPCRemoteOutgoingConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GCOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GCPromise
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GCVersion
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__GCDeviceConfigurationEvaluator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__GCGenericDeviceManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GCConfigXPCService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GCConfigXPCServiceClientConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GCConfigXPCServiceConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GCConfigXPCServiceServiceConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GCConfigurationBundleFileSystemSource
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GCDaemon
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GCFuture
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GCIPCRemoteConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GCIPCRemoteIncomingConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GCIPCRemoteOutgoingConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GCOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GCPromise
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GCVersion
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__GCDeviceConfigurationEvaluator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__GCGenericDeviceManager
|| __TEXT.__text _GCConfigXPCServiceClientInterface
|| __TEXT.__text _GCConfigXPCServiceInterface
|| __TEXT.__text _GCGenericDeviceDriverConfigurationServiceClientInterface
|| __TEXT.__text _GCGenericDeviceDriverConfigurationServiceServerInterface
|| __TEXT.__text _GCHIDDeviceAttributeKeys
|| __TEXT.__text _GCHIDDeviceAttributesPredicateFromMatchingDictionary
|| __TEXT.__text _GCHIDElementAttributeKeys
|| __TEXT.__text _GCLookupDispatchWorkloop
|| __TEXT.__text _GCLookupService
|| __TEXT.__text _GCLookupSetFallbackProvider
|| __TEXT.__text _NSStringFromGCHIDElementUsageType
|| __TEXT.__text __GCFConvertStringToLocalizedString
|| __TEXT.__text __gc_log_device
|| __TEXT.__text __gc_log_device_configuration
|| __TEXT.__text __gc_log_hid
|| __TEXT.__text __gc_log_hid_input
|| __TEXT.__text __gc_log_ipc
|| __TEXT.__text _gc_log_create_device
|| __TEXT.__text _gc_log_create_hid
|| __TEXT.__text _gc_log_create_ipc
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFNumberGetTypeID
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFSetCreateMutable
__ CoreFoundation: _CFUUIDGetConstantUUIDWithBytes
__ CoreFoundation: _CFUUIDGetUUIDBytes
__ CoreFoundation: _NSCurrentLocaleDidChangeNotification
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSEnumerator
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: _OBJC_METACLASS_$_NSEnumerator
__ CoreFoundation: __CFBundleCopyBundleURLForExecutableURL
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFAllocatorSystemDefault
__ CoreFoundation: _kCFBundleIdentifierKey
__ CoreFoundation: _kCFBundleVersionKey
__ CoreFoundation: _kCFTypeSetCallBacks
__ Foundation: _NSClassFromString
__ Foundation: _NSFilePathErrorKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromProtocol
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSComparisonPredicate
__ Foundation: _OBJC_CLASS_$_NSCompoundPredicate
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSExpression
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_METACLASS_$_NSBundle
__ IOKit: _IOConnectSetCFProperty
__ IOKit: _IOCreatePlugInInterfaceForService
__ IOKit: _IOHIDDeviceClose
__ IOKit: _IOHIDDeviceCopyMatchingElements
__ IOKit: _IOHIDDeviceCreate
__ IOKit: _IOHIDDeviceGetProperty
__ IOKit: _IOHIDDeviceGetService
__ IOKit: _IOHIDDeviceGetValue
__ IOKit: _IOHIDDeviceOpen
__ IOKit: _IOHIDDeviceSetReport
__ IOKit: _IOHIDElementGetChildren
__ IOKit: _IOHIDElementGetCollectionType
__ IOKit: _IOHIDElementGetCookie
__ IOKit: _IOHIDElementGetDevice
__ IOKit: _IOHIDElementGetLogicalMax
__ IOKit: _IOHIDElementGetLogicalMin
__ IOKit: _IOHIDElementGetName
__ IOKit: _IOHIDElementGetPhysicalMax
__ IOKit: _IOHIDElementGetPhysicalMin
__ IOKit: _IOHIDElementGetProperty
__ IOKit: _IOHIDElementGetReportCount
__ IOKit: _IOHIDElementGetType
__ IOKit: _IOHIDElementGetTypeID
__ IOKit: _IOHIDElementGetUsage
__ IOKit: _IOHIDElementGetUsagePage
__ IOKit: _IOHIDElementHasNullState
__ IOKit: _IOHIDElementHasPreferredState
__ IOKit: _IOHIDElementIsArray
__ IOKit: _IOHIDElementIsNonLinear
__ IOKit: _IOHIDElementIsRelative
__ IOKit: _IOHIDElementIsWrapping
__ IOKit: _IOHIDElementSetProperty
__ IOKit: _IOHIDQueueActivate
__ IOKit: _IOHIDQueueAddElement
__ IOKit: _IOHIDQueueCancel
__ IOKit: _IOHIDQueueCopyNextValue
__ IOKit: _IOHIDQueueCreate
__ IOKit: _IOHIDQueueGetDevice
__ IOKit: _IOHIDQueueRegisterValueAvailableCallback
__ IOKit: _IOHIDQueueRemoveElement
__ IOKit: _IOHIDQueueSetCancelHandler
__ IOKit: _IOHIDQueueSetDispatchQueue
__ IOKit: _IOHIDQueueStart
__ IOKit: _IOHIDQueueStop
__ IOKit: _IOHIDServiceClientCopyProperty
__ IOKit: _IOHIDServiceClientGetRegistryID
__ IOKit: _IOHIDValueGetBytePtr
__ IOKit: _IOHIDValueGetElement
__ IOKit: _IOHIDValueGetIntegerValue
__ IOKit: _IOHIDValueGetLength
__ IOKit: _IOHIDValueGetScaledValue
__ IOKit: _IOHIDValueGetTimeStamp
__ IOKit: _IOIteratorIsValid
__ IOKit: _IOIteratorNext
__ IOKit: _IOIteratorReset
__ IOKit: _IONotificationPortCreate
__ IOKit: _IONotificationPortDestroy
__ IOKit: _IONotificationPortSetDispatchQueue
__ IOKit: _IOObjectRelease
__ IOKit: _IORegistryEntryCreateCFProperty
__ IOKit: _IORegistryEntryGetName
__ IOKit: _IORegistryEntryGetRegistryEntryID
__ IOKit: _IOServiceAddMatchingNotification
__ IOKit: _IOServiceClose
__ IOKit: _IOServiceMatching
__ IOKit: _IOServiceOpen
__ IOKit: _OBJC_CLASS_$_HIDDevice
__ IOKit: _OBJC_CLASS_$_HIDElement
__ IOKit: _OBJC_METACLASS_$_HIDDevice
__ IOKit: __IOHIDElementGetFlags
__ IOKit: __IOHIDElementGetLength
__ IOKit: __IOHIDElementGetValue
__ IOKit: __IOHIDQueueCopyElements
__ IOKit: _kIOMainPortDefault
__ Security: _SecTaskCopyValueForEntitlement
__ Security: _SecTaskCreateWithAuditToken
__ libSystem.B.dylib: _XPC_ACTIVITY_CHECK_IN
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___memcpy_chk
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_source_type_data_or
__ libSystem.B.dylib: __os_activity_create
__ libSystem.B.dylib: __os_activity_current
__ libSystem.B.dylib: __os_assert_log
__ libSystem.B.dylib: __os_crash
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _dispatch_activate
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_async_and_wait
__ libSystem.B.dylib: _dispatch_block_create
__ libSystem.B.dylib: _dispatch_block_create_with_qos_class
__ libSystem.B.dylib: _dispatch_block_create_with_voucher
__ libSystem.B.dylib: _dispatch_block_create_with_voucher_and_qos_class
__ libSystem.B.dylib: _dispatch_block_perform
__ libSystem.B.dylib: _dispatch_get_current_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_initially_inactive
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_queue_create_with_target$V2
__ libSystem.B.dylib: _dispatch_queue_get_qos_class
__ libSystem.B.dylib: _dispatch_queue_set_label_nocopy
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_merge_data
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_workloop_copy_current
__ libSystem.B.dylib: _dispatch_workloop_create
__ libSystem.B.dylib: _dispatch_workloop_create_inactive
__ libSystem.B.dylib: _dladdr
__ libSystem.B.dylib: _dyld_image_header_containing_address
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _kdebug_trace
__ libSystem.B.dylib: _mach_task_self_
__ libSystem.B.dylib: _os_activity_scope_enter
__ libSystem.B.dylib: _os_activity_scope_leave
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_lock_with_options
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _os_variant_has_internal_diagnostics
__ libSystem.B.dylib: _proc_pidpath_audittoken
__ libSystem.B.dylib: _pthread_get_qos_class_np
__ libSystem.B.dylib: _pthread_getspecific
__ libSystem.B.dylib: _pthread_key_create
__ libSystem.B.dylib: _pthread_self
__ libSystem.B.dylib: _pthread_setspecific
__ libSystem.B.dylib: _voucher_copy
__ libSystem.B.dylib: _xpc_activity_add_eligibility_changed_handler
__ libSystem.B.dylib: _xpc_activity_get_state
__ libSystem.B.dylib: _xpc_activity_register
__ libSystem.B.dylib: _xpc_activity_remove_eligibility_changed_handler
__ libSystem.B.dylib: _xpc_activity_set_completion_status
__ libSystem.B.dylib: _xpc_activity_set_state
__ libSystem.B.dylib: _xpc_activity_should_defer
__ libSystem.B.dylib: _xpc_bool_create
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_set_string
__ libSystem.B.dylib: _xpc_uint64_create
__ libc++.1.dylib: __ZSt9terminatev
__ libc++.1.dylib: ___cxa_begin_catch
__ libc++.1.dylib: ___gxx_personality_v0
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_CLASS_$_Protocol
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x3
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x27
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x6
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_retain_x9
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _object_isClass
__ libobjc.A.dylib: _object_setClass
__ libobjc.A.dylib: _protocol_getName
__ libobjc.A.dylib: _sel_getName
GCGenericDeviceDataBitTestExpressionModel : GCGenericDeviceDataProcessorExpressionModel
 @property  GCGenericDeviceDataProcessorExpressionModel *inputExpression
 @property  GCGenericDeviceDataProcessorExpressionModel *maskExpression
 @property  GCGenericDeviceDataProcessorExpressionModel *trueExpression
 @property  GCGenericDeviceDataProcessorExpressionModel *falseExpression
 @property  BOOL partialMatch

  // class methods
  +[GCGenericDeviceDataBitTestExpressionModel supportsSecureCoding]

  // instance methods
  -[GCGenericDeviceDataBitTestExpressionModel encodeWithCoder:]
  -[GCGenericDeviceDataBitTestExpressionModel .cxx_destruct]
  -[GCGenericDeviceDataBitTestExpressionModel redactedDescription]
  -[GCGenericDeviceDataBitTestExpressionModel isEqual:]
  -[GCGenericDeviceDataBitTestExpressionModel initWithCoder:]
  -[GCGenericDeviceDataBitTestExpressionModel trueExpression]
  -[GCGenericDeviceDataBitTestExpressionModel falseExpression]
  -[GCGenericDeviceDataBitTestExpressionModel inputExpression]
  -[GCGenericDeviceDataBitTestExpressionModel maskExpression]
  -[GCGenericDeviceDataBitTestExpressionModel partialMatch]


GCGenericDeviceDataBitTestExpressionModelBuilder : GCGenericDeviceDataProcessorExpressionModelBuilder
 @property  GCGenericDeviceDataProcessorExpressionModel *inputExpression
 @property  GCGenericDeviceDataProcessorExpressionModel *maskExpression
 @property  GCGenericDeviceDataProcessorExpressionModel *trueExpression
 @property  GCGenericDeviceDataProcessorExpressionModel *falseExpression
 @property  BOOL partialMatch

  // class methods
  +[GCGenericDeviceDataBitTestExpressionModelBuilder modelClass]

  // instance methods
  -[GCGenericDeviceDataBitTestExpressionModelBuilder reset]
  -[GCGenericDeviceDataBitTestExpressionModelBuilder build]
  -[GCGenericDeviceDataBitTestExpressionModelBuilder .cxx_destruct]
  -[GCGenericDeviceDataBitTestExpressionModelBuilder trueExpression]
  -[GCGenericDeviceDataBitTestExpressionModelBuilder falseExpression]
  -[GCGenericDeviceDataBitTestExpressionModelBuilder initWithDictionaryRepresentation:error:]
  -[GCGenericDeviceDataBitTestExpressionModelBuilder inputExpression]
  -[GCGenericDeviceDataBitTestExpressionModelBuilder maskExpression]
  -[GCGenericDeviceDataBitTestExpressionModelBuilder partialMatch]
  -[GCGenericDeviceDataBitTestExpressionModelBuilder initializeWithModel:]
  -[GCGenericDeviceDataBitTestExpressionModelBuilder setInputExpression:]
  -[GCGenericDeviceDataBitTestExpressionModelBuilder setMaskExpression:]
  -[GCGenericDeviceDataBitTestExpressionModelBuilder setTrueExpression:]
  -[GCGenericDeviceDataBitTestExpressionModelBuilder setFalseExpression:]
  -[GCGenericDeviceDataBitTestExpressionModelBuilder setPartialMatch:]


GCGenericDeviceDataMultiplyExpressionModel : GCGenericDeviceDataProcessorExpressionModel
 @property  GCGenericDeviceDataProcessorExpressionModel *leftExpression
 @property  GCGenericDeviceDataProcessorExpressionModel *rightExpression

  // class methods
  +[GCGenericDeviceDataMultiplyExpressionModel supportsSecureCoding]

  // instance methods
  -[GCGenericDeviceDataMultiplyExpressionModel encodeWithCoder:]
  -[GCGenericDeviceDataMultiplyExpressionModel .cxx_destruct]
  -[GCGenericDeviceDataMultiplyExpressionModel redactedDescription]
  -[GCGenericDeviceDataMultiplyExpressionModel isEqual:]
  -[GCGenericDeviceDataMultiplyExpressionModel initWithCoder:]
  -[GCGenericDeviceDataMultiplyExpressionModel leftExpression]
  -[GCGenericDeviceDataMultiplyExpressionModel rightExpression]


GCGenericDeviceDataMultiplyExpressionModelBuilder : GCGenericDeviceDataProcessorExpressionModelBuilder
 @property  GCGenericDeviceDataProcessorExpressionModel *leftExpression
 @property  GCGenericDeviceDataProcessorExpressionModel *rightExpression

  // class methods
  +[GCGenericDeviceDataMultiplyExpressionModelBuilder modelClass]

  // instance methods
  -[GCGenericDeviceDataMultiplyExpressionModelBuilder reset]
  -[GCGenericDeviceDataMultiplyExpressionModelBuilder build]
  -[GCGenericDeviceDataMultiplyExpressionModelBuilder .cxx_destruct]
  -[GCGenericDeviceDataMultiplyExpressionModelBuilder leftExpression]
  -[GCGenericDeviceDataMultiplyExpressionModelBuilder rightExpression]
  -[GCGenericDeviceDataMultiplyExpressionModelBuilder initWithDictionaryRepresentation:error:]
  -[GCGenericDeviceDataMultiplyExpressionModelBuilder initializeWithModel:]
  -[GCGenericDeviceDataMultiplyExpressionModelBuilder setLeftExpression:]
  -[GCGenericDeviceDataMultiplyExpressionModelBuilder setRightExpression:]


GCGenericDevicePhysicalInputElementModel : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *identifier
 @property  NSString *name
 @property  NSNumber *analog
 @property  NSString *localizedNameKey
 @property  NSString *symbolName

  // class methods
  +[GCGenericDevicePhysicalInputElementModel supportsSecureCoding]
  +[GCGenericDevicePhysicalInputElementModel modelWithDictionaryRepresentation:error:]

  // instance methods
  -[GCGenericDevicePhysicalInputElementModel identifier]
  -[GCGenericDevicePhysicalInputElementModel encodeWithCoder:]
  -[GCGenericDevicePhysicalInputElementModel .cxx_destruct]
  -[GCGenericDevicePhysicalInputElementModel symbolName]
  -[GCGenericDevicePhysicalInputElementModel copyWithZone:]
  -[GCGenericDevicePhysicalInputElementModel name]
  -[GCGenericDevicePhysicalInputElementModel redactedDescription]
  -[GCGenericDevicePhysicalInputElementModel isEqual:]
  -[GCGenericDevicePhysicalInputElementModel init]
  -[GCGenericDevicePhysicalInputElementModel initWithCoder:]
  -[GCGenericDevicePhysicalInputElementModel isAnalog]
  -[GCGenericDevicePhysicalInputElementModel localizedNameKey]


GCGenericDevicePhysicalInputElementModelBuilder : NSObject
 @property  NSString *identifier
 @property  NSString *name
 @property  NSNumber *analog
 @property  NSString *localizedNameKey
 @property  NSString *symbolName

  // class methods
  +[GCGenericDevicePhysicalInputElementModelBuilder modelClass]

  // instance methods
  -[GCGenericDevicePhysicalInputElementModelBuilder identifier]
  -[GCGenericDevicePhysicalInputElementModelBuilder reset]
  -[GCGenericDevicePhysicalInputElementModelBuilder build]
  -[GCGenericDevicePhysicalInputElementModelBuilder .cxx_destruct]
  -[GCGenericDevicePhysicalInputElementModelBuilder setIdentifier:]
  -[GCGenericDevicePhysicalInputElementModelBuilder setName:]
  -[GCGenericDevicePhysicalInputElementModelBuilder symbolName]
  -[GCGenericDevicePhysicalInputElementModelBuilder name]
  -[GCGenericDevicePhysicalInputElementModelBuilder setSymbolName:]
  -[GCGenericDevicePhysicalInputElementModelBuilder isEqual:]
  -[GCGenericDevicePhysicalInputElementModelBuilder init]
  -[GCGenericDevicePhysicalInputElementModelBuilder initWithDictionaryRepresentation:error:]
  -[GCGenericDevicePhysicalInputElementModelBuilder isAnalog]
  -[GCGenericDevicePhysicalInputElementModelBuilder localizedNameKey]
  -[GCGenericDevicePhysicalInputElementModelBuilder initializeWithModel:]
  -[GCGenericDevicePhysicalInputElementModelBuilder setAnalog:]
  -[GCGenericDevicePhysicalInputElementModelBuilder setLocalizedNameKey:]


GCDaemon : NSObject <NSObject>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[GCDaemon createRootWorkloop]

  // instance methods
  -[GCDaemon .cxx_destruct]
  -[GCDaemon init]
  -[GCDaemon serviceFor:client:]


GCGenericDeviceDataProcessorExpressionModel : NSObject <NSCopying, NSSecureCoding>
  // class methods
  +[GCGenericDeviceDataProcessorExpressionModel supportsSecureCoding]
  +[GCGenericDeviceDataProcessorExpressionModel modelWithDictionaryRepresentation:error:]

  // instance methods
  -[GCGenericDeviceDataProcessorExpressionModel encodeWithCoder:]
  -[GCGenericDeviceDataProcessorExpressionModel copyWithZone:]
  -[GCGenericDeviceDataProcessorExpressionModel isEqual:]
  -[GCGenericDeviceDataProcessorExpressionModel init]
  -[GCGenericDeviceDataProcessorExpressionModel initWithCoder:]


GCGenericDeviceDataProcessorExpressionModelBuilder : NSObject
  // class methods
  +[GCGenericDeviceDataProcessorExpressionModelBuilder modelClass]

  // instance methods
  -[GCGenericDeviceDataProcessorExpressionModelBuilder reset]
  -[GCGenericDeviceDataProcessorExpressionModelBuilder build]
  -[GCGenericDeviceDataProcessorExpressionModelBuilder isEqual:]
  -[GCGenericDeviceDataProcessorExpressionModelBuilder init]
  -[GCGenericDeviceDataProcessorExpressionModelBuilder initWithDictionaryRepresentation:error:]
  -[GCGenericDeviceDataProcessorExpressionModelBuilder initializeWithModel:]


GCGenericDeviceDataAddExpressionModel : GCGenericDeviceDataProcessorExpressionModel
 @property  GCGenericDeviceDataProcessorExpressionModel *leftExpression
 @property  GCGenericDeviceDataProcessorExpressionModel *rightExpression

  // class methods
  +[GCGenericDeviceDataAddExpressionModel supportsSecureCoding]

  // instance methods
  -[GCGenericDeviceDataAddExpressionModel encodeWithCoder:]
  -[GCGenericDeviceDataAddExpressionModel .cxx_destruct]
  -[GCGenericDeviceDataAddExpressionModel redactedDescription]
  -[GCGenericDeviceDataAddExpressionModel isEqual:]
  -[GCGenericDeviceDataAddExpressionModel initWithCoder:]
  -[GCGenericDeviceDataAddExpressionModel leftExpression]
  -[GCGenericDeviceDataAddExpressionModel rightExpression]


GCGenericDeviceDataAddExpressionModelBuilder : GCGenericDeviceDataProcessorExpressionModelBuilder
 @property  GCGenericDeviceDataProcessorExpressionModel *leftExpression
 @property  GCGenericDeviceDataProcessorExpressionModel *rightExpression

  // class methods
  +[GCGenericDeviceDataAddExpressionModelBuilder modelClass]

  // instance methods
  -[GCGenericDeviceDataAddExpressionModelBuilder reset]
  -[GCGenericDeviceDataAddExpressionModelBuilder build]
  -[GCGenericDeviceDataAddExpressionModelBuilder .cxx_destruct]
  -[GCGenericDeviceDataAddExpressionModelBuilder leftExpression]
  -[GCGenericDeviceDataAddExpressionModelBuilder rightExpression]
  -[GCGenericDeviceDataAddExpressionModelBuilder initWithDictionaryRepresentation:error:]
  -[GCGenericDeviceDataAddExpressionModelBuilder initializeWithModel:]
  -[GCGenericDeviceDataAddExpressionModelBuilder setLeftExpression:]
  -[GCGenericDeviceDataAddExpressionModelBuilder setRightExpression:]


GCConfigurationBundleFileSystemSource : NSObject <GCConfigurationBundleFileSystemSource>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GCConfigurationBundleFileSystemSource .cxx_destruct]
  -[GCConfigurationBundleFileSystemSource init]
  -[GCConfigurationBundleFileSystemSource configurationBundleURLsForType:]


GCHIDInputElement : NSObject
 @property  HIDElement *element
 @property  ^{__IOHIDValue=} value

  // instance methods
  -[GCHIDInputElement element]
  -[GCHIDInputElement dealloc]
  -[GCHIDInputElement .cxx_destruct]
  -[GCHIDInputElement value]
  -[GCHIDInputElement isEqual:]
  -[GCHIDInputElement init]
  -[GCHIDInputElement initWithElement:]
  -[GCHIDInputElement scaledValue:]
  -[GCHIDInputElement addValueChangedHandler:]
  -[GCHIDInputElement addScaled:valueChangedHandler:]
  -[GCHIDInputElement registerValueChangedHandler:]
  -[GCHIDInputElement registerScaled:valueChangedHandler:]


GCGenericDeviceInputEventDriverModel : NSObject <NSCopying, NSSecureCoding>
 @property  NSSet *gamepadEventFields

  // class methods
  +[GCGenericDeviceInputEventDriverModel supportsSecureCoding]
  +[GCGenericDeviceInputEventDriverModel modelWithDictionaryRepresentation:error:]

  // instance methods
  -[GCGenericDeviceInputEventDriverModel encodeWithCoder:]
  -[GCGenericDeviceInputEventDriverModel .cxx_destruct]
  -[GCGenericDeviceInputEventDriverModel copyWithZone:]
  -[GCGenericDeviceInputEventDriverModel isEqual:]
  -[GCGenericDeviceInputEventDriverModel init]
  -[GCGenericDeviceInputEventDriverModel initWithCoder:]
  -[GCGenericDeviceInputEventDriverModel gamepadEventFields]


GCGenericDeviceInputEventDriverModelBuilder : NSObject
 @property  NSSet *gamepadEventFields

  // class methods
  +[GCGenericDeviceInputEventDriverModelBuilder modelClass]

  // instance methods
  -[GCGenericDeviceInputEventDriverModelBuilder reset]
  -[GCGenericDeviceInputEventDriverModelBuilder build]
  -[GCGenericDeviceInputEventDriverModelBuilder .cxx_destruct]
  -[GCGenericDeviceInputEventDriverModelBuilder isEqual:]
  -[GCGenericDeviceInputEventDriverModelBuilder init]
  -[GCGenericDeviceInputEventDriverModelBuilder initializeWithModel:]
  -[GCGenericDeviceInputEventDriverModelBuilder gamepadEventFields]
  -[GCGenericDeviceInputEventDriverModelBuilder setGamepadEventFields:]


_GCDeviceConfigurationEvaluator : NSObject
 @property  NSSet *configurationsIN
 @property  NSDictionary *deviceManagersIN
 @property  NSDictionary *physicalDevicesIN
 @property  NSSet *viableConfigurationsOUT
 @property  NSDictionary *deviceOwnersOUT

  // instance methods
  -[_GCDeviceConfigurationEvaluator deviceOwnersOUT]
  -[_GCDeviceConfigurationEvaluator physicalDevicesIN]
  -[_GCDeviceConfigurationEvaluator setPhysicalDevicesIN:]
  -[_GCDeviceConfigurationEvaluator evaluate]
  -[_GCDeviceConfigurationEvaluator .cxx_destruct]
  -[_GCDeviceConfigurationEvaluator viableConfigurations:deviceOwners:]
  -[_GCDeviceConfigurationEvaluator deviceManagersIN]
  -[_GCDeviceConfigurationEvaluator setConfigurationsIN:]
  -[_GCDeviceConfigurationEvaluator configurationsIN]
  -[_GCDeviceConfigurationEvaluator viableConfigurationsOUT]
  -[_GCDeviceConfigurationEvaluator setDeviceManagersIN:]


_GCDeviceDBPersonality : NSObject <NSCopying>
 @property  GCVersion *compatibilityVersion
 @property  NSPredicate *ioMatchingPredicate
 @property  GCGenericDeviceModel *model

  // instance methods
  -[_GCDeviceDBPersonality model]
  -[_GCDeviceDBPersonality initWithURL:error:]
  -[_GCDeviceDBPersonality initWithDictionary:error:]
  -[_GCDeviceDBPersonality .cxx_destruct]
  -[_GCDeviceDBPersonality compatibilityVersion]
  -[_GCDeviceDBPersonality copyWithZone:]
  -[_GCDeviceDBPersonality init]
  -[_GCDeviceDBPersonality ioMatchingPredicate]


_GCGenericDeviceManager : NSObject <_GCPhysicalDeviceManager>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <_GCPhysicalDeviceRegistry> *deviceRegistry
 @property  <NSObject><NSCopying><NSSecureCoding> *identifier

  // instance methods
  -[_GCGenericDeviceManager relinquishHIDService:]
  -[_GCGenericDeviceManager identifier]
  -[_GCGenericDeviceManager deviceRegistry]
  -[_GCGenericDeviceManager dealloc]
  -[_GCGenericDeviceManager .cxx_destruct]
  -[_GCGenericDeviceManager acceptDriverConnection:forHIDService:]
  -[_GCGenericDeviceManager matchHIDService:]
  -[_GCGenericDeviceManager _onqueue_registerDefaultConfigurationForDevice:]
  -[_GCGenericDeviceManager claimHIDService:]
  -[_GCGenericDeviceManager acceptFilterConnection:forHIDService:]
  -[_GCGenericDeviceManager setDeviceRegistry:]
  -[_GCGenericDeviceManager init]
  -[_GCGenericDeviceManager serviceFor:client:]
  -[_GCGenericDeviceManager _onioqueue_setupHIDMatching]


_GCConfigurationDataManager : NSObject <NSObject>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_GCConfigurationDataManager initWithProvider:]
  -[_GCConfigurationDataManager .cxx_destruct]
  -[_GCConfigurationDataManager init]
  -[_GCConfigurationDataManager serviceFor:client:]
  -[_GCConfigurationDataManager configurationBundleLocatorForType:]


_GCDeviceDriverServiceConnection : NSObject
 @property  BOOL invalid

  // class methods
  +[_GCDeviceDriverServiceConnection serviceProtocol]
  +[_GCDeviceDriverServiceConnection connectionToServiceInDriver:withClient:]

  // instance methods
  -[_GCDeviceDriverServiceConnection isInvalid]
  -[_GCDeviceDriverServiceConnection .cxx_destruct]
  -[_GCDeviceDriverServiceConnection addInvalidationHandler:]
  -[_GCDeviceDriverServiceConnection scheduleSendBarrierBlock:]
  -[_GCDeviceDriverServiceConnection initWithDriverConnection:serviceVendor:]
  -[_GCDeviceDriverServiceConnection serviceVendorRequestWithLabel:handler:]
  -[_GCDeviceDriverServiceConnection serviceVendorRequestWithHandler:]


_GCConfigurationBundle : NSBundle <NSCopying>
 @property  NSString *identifier
 @property  GCVersion *version
 @property  NSString *configurationType
 @property  GCVersion *compatibilityVersion

  // instance methods
  -[_GCConfigurationBundle identifier]
  -[_GCConfigurationBundle initWithPath:]
  -[_GCConfigurationBundle configurationType]
  -[_GCConfigurationBundle .cxx_destruct]
  -[_GCConfigurationBundle initWithPath:error:]
  -[_GCConfigurationBundle version]
  -[_GCConfigurationBundle compatibilityVersion]
  -[_GCConfigurationBundle copyWithZone:]
  -[_GCConfigurationBundle redactedDescription]
  -[_GCConfigurationBundle init]


GCGenericDeviceDataSDLHatFunctionExpressionModel : GCGenericDeviceDataProcessorExpressionModel
 @property  GCGenericDeviceDataProcessorExpressionModel *inputExpression
 @property  GCGenericDeviceDataProcessorExpressionModel *inputMinExpression
 @property  GCGenericDeviceDataProcessorExpressionModel *inputMaxExpression
 @property  GCGenericDeviceDataProcessorExpressionModel *maskExpression
 @property  GCGenericDeviceDataProcessorExpressionModel *trueExpression
 @property  GCGenericDeviceDataProcessorExpressionModel *falseExpression

  // class methods
  +[GCGenericDeviceDataSDLHatFunctionExpressionModel supportsSecureCoding]

  // instance methods
  -[GCGenericDeviceDataSDLHatFunctionExpressionModel encodeWithCoder:]
  -[GCGenericDeviceDataSDLHatFunctionExpressionModel .cxx_destruct]
  -[GCGenericDeviceDataSDLHatFunctionExpressionModel redactedDescription]
  -[GCGenericDeviceDataSDLHatFunctionExpressionModel isEqual:]
  -[GCGenericDeviceDataSDLHatFunctionExpressionModel initWithCoder:]
  -[GCGenericDeviceDataSDLHatFunctionExpressionModel trueExpression]
  -[GCGenericDeviceDataSDLHatFunctionExpressionModel falseExpression]
  -[GCGenericDeviceDataSDLHatFunctionExpressionModel inputExpression]
  -[GCGenericDeviceDataSDLHatFunctionExpressionModel maskExpression]
  -[GCGenericDeviceDataSDLHatFunctionExpressionModel inputMinExpression]
  -[GCGenericDeviceDataSDLHatFunctionExpressionModel inputMaxExpression]


GCGenericDeviceDataSDLHatFunctionExpressionModelBuilder : GCGenericDeviceDataProcessorExpressionModelBuilder
 @property  GCGenericDeviceDataProcessorExpressionModel *inputExpression
 @property  GCGenericDeviceDataProcessorExpressionModel *inputMinExpression
 @property  GCGenericDeviceDataProcessorExpressionModel *inputMaxExpression
 @property  GCGenericDeviceDataProcessorExpressionModel *maskExpression
 @property  GCGenericDeviceDataProcessorExpressionModel *trueExpression
 @property  GCGenericDeviceDataProcessorExpressionModel *falseExpression

  // class methods
  +[GCGenericDeviceDataSDLHatFunctionExpressionModelBuilder modelClass]

  // instance methods
  -[GCGenericDeviceDataSDLHatFunctionExpressionModelBuilder reset]
  -[GCGenericDeviceDataSDLHatFunctionExpressionModelBuilder build]
  -[GCGenericDeviceDataSDLHatFunctionExpressionModelBuilder .cxx_destruct]
  -[GCGenericDeviceDataSDLHatFunctionExpressionModelBuilder trueExpression]
  -[GCGenericDeviceDataSDLHatFunctionExpressionModelBuilder falseExpression]
  -[GCGenericDeviceDataSDLHatFunctionExpressionModelBuilder initWithDictionaryRepresentation:error:]
  -[GCGenericDeviceDataSDLHatFunctionExpressionModelBuilder inputExpression]
  -[GCGenericDeviceDataSDLHatFunctionExpressionModelBuilder maskExpression]
  -[GCGenericDeviceDataSDLHatFunctionExpressionModelBuilder initializeWithModel:]
  -[GCGenericDeviceDataSDLHatFunctionExpressionModelBuilder setInputExpression:]
  -[GCGenericDeviceDataSDLHatFunctionExpressionModelBuilder setMaskExpression:]
  -[GCGenericDeviceDataSDLHatFunctionExpressionModelBuilder setTrueExpression:]
  -[GCGenericDeviceDataSDLHatFunctionExpressionModelBuilder setFalseExpression:]
  -[GCGenericDeviceDataSDLHatFunctionExpressionModelBuilder inputMinExpression]
  -[GCGenericDeviceDataSDLHatFunctionExpressionModelBuilder inputMaxExpression]
  -[GCGenericDeviceDataSDLHatFunctionExpressionModelBuilder setInputMinExpression:]
  -[GCGenericDeviceDataSDLHatFunctionExpressionModelBuilder setInputMaxExpression:]


GCHIDElementSnapshot : NSObject <GCHIDElementAttributes, NSSecureCoding>
 @property  long long usageType
 @property  long long usageTypeIndex
 @property  unsigned int elementCookie
 @property  int type
 @property  int collectionType
 @property  long long usage
 @property  long long usagePage
 @property  long long min
 @property  long long max
 @property  long long scaledMin
 @property  long long scaledMax
 @property  long long size
 @property  long long reportSize
 @property  unsigned int reportCount
 @property  long long reportID
 @property  unsigned char isArray
 @property  unsigned char isRelative
 @property  unsigned char isWrapping
 @property  unsigned char isNonLinear
 @property  unsigned char hasPreferredState
 @property  unsigned char hasNullState
 @property  unsigned int flags
 @property  long long unit
 @property  long long unitExponent
 @property  NSString *name

  // class methods
  +[GCHIDElementSnapshot supportsSecureCoding]

  // instance methods
  -[GCHIDElementSnapshot min]
  -[GCHIDElementSnapshot usage]
  -[GCHIDElementSnapshot collectionType]
  -[GCHIDElementSnapshot usagePage]
  -[GCHIDElementSnapshot elementCookie]
  -[GCHIDElementSnapshot reportID]
  -[GCHIDElementSnapshot encodeWithCoder:]
  -[GCHIDElementSnapshot type]
  -[GCHIDElementSnapshot unit]
  -[GCHIDElementSnapshot valueForKey:]
  -[GCHIDElementSnapshot usageType]
  -[GCHIDElementSnapshot .cxx_destruct]
  -[GCHIDElementSnapshot flags]
  -[GCHIDElementSnapshot unitExponent]
  -[GCHIDElementSnapshot size]
  -[GCHIDElementSnapshot max]
  -[GCHIDElementSnapshot name]
  -[GCHIDElementSnapshot isRelative]
  -[GCHIDElementSnapshot init]
  -[GCHIDElementSnapshot initWithCoder:]
  -[GCHIDElementSnapshot isArray]
  -[GCHIDElementSnapshot reportSize]
  -[GCHIDElementSnapshot valueForElementKey:]
  -[GCHIDElementSnapshot usageTypeIndex]
  -[GCHIDElementSnapshot scaledMin]
  -[GCHIDElementSnapshot scaledMax]
  -[GCHIDElementSnapshot reportCount]
  -[GCHIDElementSnapshot isWrapping]
  -[GCHIDElementSnapshot isNonLinear]
  -[GCHIDElementSnapshot hasPreferredState]
  -[GCHIDElementSnapshot hasNullState]
  -[GCHIDElementSnapshot initWithHIDElement:]


GCGenericDeviceModel : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *productCategory
 @property  NSString *productName
 @property  GCGenericDeviceDriverModel *driver
 @property  GCGenericDevicePhysicalInputModel *physicalInput

  // class methods
  +[GCGenericDeviceModel supportsSecureCoding]
  +[GCGenericDeviceModel modelWithDictionaryRepresentation:error:]

  // instance methods
  -[GCGenericDeviceModel encodeWithCoder:]
  -[GCGenericDeviceModel productName]
  -[GCGenericDeviceModel .cxx_destruct]
  -[GCGenericDeviceModel driver]
  -[GCGenericDeviceModel copyWithZone:]
  -[GCGenericDeviceModel isEqual:]
  -[GCGenericDeviceModel init]
  -[GCGenericDeviceModel initWithCoder:]
  -[GCGenericDeviceModel productCategory]
  -[GCGenericDeviceModel physicalInput]


GCGenericDeviceModelBuilder : NSObject
 @property  NSString *productCategory
 @property  NSString *productName
 @property  GCGenericDeviceDriverModel *driver
 @property  GCGenericDevicePhysicalInputModel *physicalInput

  // class methods
  +[GCGenericDeviceModelBuilder modelClass]

  // instance methods
  -[GCGenericDeviceModelBuilder reset]
  -[GCGenericDeviceModelBuilder build]
  -[GCGenericDeviceModelBuilder productName]
  -[GCGenericDeviceModelBuilder .cxx_destruct]
  -[GCGenericDeviceModelBuilder setProductName:]
  -[GCGenericDeviceModelBuilder driver]
  -[GCGenericDeviceModelBuilder setDriver:]
  -[GCGenericDeviceModelBuilder isEqual:]
  -[GCGenericDeviceModelBuilder init]
  -[GCGenericDeviceModelBuilder productCategory]
  -[GCGenericDeviceModelBuilder setProductCategory:]
  -[GCGenericDeviceModelBuilder initializeWithModel:]
  -[GCGenericDeviceModelBuilder physicalInput]
  -[GCGenericDeviceModelBuilder setPhysicalInput:]


GCGenericDeviceElementModel : NSObject <NSCopying, NSSecureCoding>
 @property  unsigned int elementCookie
 @property  NSPredicate *predicate
 @property  NSString *identifier
 @property  long long calibrationMin
 @property  long long calibrationMax

  // class methods
  +[GCGenericDeviceElementModel supportsSecureCoding]
  +[GCGenericDeviceElementModel modelWithDictionaryRepresentation:error:]

  // instance methods
  -[GCGenericDeviceElementModel identifier]
  -[GCGenericDeviceElementModel elementCookie]
  -[GCGenericDeviceElementModel encodeWithCoder:]
  -[GCGenericDeviceElementModel predicate]
  -[GCGenericDeviceElementModel .cxx_destruct]
  -[GCGenericDeviceElementModel copyWithZone:]
  -[GCGenericDeviceElementModel redactedDescription]
  -[GCGenericDeviceElementModel isEqual:]
  -[GCGenericDeviceElementModel init]
  -[GCGenericDeviceElementModel initWithCoder:]
  -[GCGenericDeviceElementModel setElementCookie:]
  -[GCGenericDeviceElementModel calibrationMin]
  -[GCGenericDeviceElementModel calibrationMax]


GCGenericDeviceElementModelBuilder : NSObject
 @property  NSPredicate *predicate
 @property  NSString *identifier
 @property  long long calibrationMin
 @property  long long calibrationMax

  // class methods
  +[GCGenericDeviceElementModelBuilder modelClass]

  // instance methods
  -[GCGenericDeviceElementModelBuilder setPredicate:]
  -[GCGenericDeviceElementModelBuilder identifier]
  -[GCGenericDeviceElementModelBuilder reset]
  -[GCGenericDeviceElementModelBuilder build]
  -[GCGenericDeviceElementModelBuilder predicate]
  -[GCGenericDeviceElementModelBuilder .cxx_destruct]
  -[GCGenericDeviceElementModelBuilder setIdentifier:]
  -[GCGenericDeviceElementModelBuilder init]
  -[GCGenericDeviceElementModelBuilder initializeWithModel:]
  -[GCGenericDeviceElementModelBuilder calibrationMin]
  -[GCGenericDeviceElementModelBuilder calibrationMax]
  -[GCGenericDeviceElementModelBuilder setCalibrationMin:]
  -[GCGenericDeviceElementModelBuilder setCalibrationMax:]


GCIPCRemoteIncomingConnection : GCIPCRemoteConnection <GCIPCIncomingConnection>
 @property  BOOL invalid
 @property  {?=[8I]} peerAuditToken
 @property  int peerAuditSessionIdentifier
 @property  int peerProcessIdentifier
 @property  unsigned int peerEffectiveUserIdentifier
 @property  unsigned int peerEffectiveGroupIdentifier
 @property  NSString *peerBundleIdentifier

  // class methods
  +[GCIPCRemoteIncomingConnection sharedConnectionWorkloop]

  // instance methods
  -[GCIPCRemoteIncomingConnection initWithConnection:]
  -[GCIPCRemoteIncomingConnection remoteProxyWithErrorHandler:]
  -[GCIPCRemoteIncomingConnection synchronousRemoteProxyWithErrorHandler:]
  -[GCIPCRemoteIncomingConnection remoteProxy]


GCGenericDeviceDataInputElementValueExpressionModel : GCGenericDeviceDataProcessorExpressionModel
 @property  NSString *elementIdentifier
 @property  long long scaleType

  // class methods
  +[GCGenericDeviceDataInputElementValueExpressionModel supportsSecureCoding]

  // instance methods
  -[GCGenericDeviceDataInputElementValueExpressionModel encodeWithCoder:]
  -[GCGenericDeviceDataInputElementValueExpressionModel elementIdentifier]
  -[GCGenericDeviceDataInputElementValueExpressionModel .cxx_destruct]
  -[GCGenericDeviceDataInputElementValueExpressionModel redactedDescription]
  -[GCGenericDeviceDataInputElementValueExpressionModel isEqual:]
  -[GCGenericDeviceDataInputElementValueExpressionModel initWithCoder:]
  -[GCGenericDeviceDataInputElementValueExpressionModel scaleType]


GCGenericDeviceDataInputElementValueExpressionModelBuilder : GCGenericDeviceDataProcessorExpressionModelBuilder
 @property  NSString *elementIdentifier
 @property  long long scaleType

  // class methods
  +[GCGenericDeviceDataInputElementValueExpressionModelBuilder modelClass]

  // instance methods
  -[GCGenericDeviceDataInputElementValueExpressionModelBuilder reset]
  -[GCGenericDeviceDataInputElementValueExpressionModelBuilder build]
  -[GCGenericDeviceDataInputElementValueExpressionModelBuilder elementIdentifier]
  -[GCGenericDeviceDataInputElementValueExpressionModelBuilder .cxx_destruct]
  -[GCGenericDeviceDataInputElementValueExpressionModelBuilder initWithDictionaryRepresentation:error:]
  -[GCGenericDeviceDataInputElementValueExpressionModelBuilder setElementIdentifier:]
  -[GCGenericDeviceDataInputElementValueExpressionModelBuilder scaleType]
  -[GCGenericDeviceDataInputElementValueExpressionModelBuilder setScaleType:]
  -[GCGenericDeviceDataInputElementValueExpressionModelBuilder initializeWithModel:]


GCConfigurationAssetXPCProxy : NSObject <GCConfigurationAsset, NSSecureCoding>
 @property  NSString *assetId
 @property  NSString *assetState
 @property  GCVersion *compatibilityVersion
 @property  GCVersion *contentVersion
 @property  long long contentRevision
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[GCConfigurationAssetXPCProxy supportsSecureCoding]

  // instance methods
  -[GCConfigurationAssetXPCProxy initWithAsset:]
  -[GCConfigurationAssetXPCProxy contentVersion]
  -[GCConfigurationAssetXPCProxy assetId]
  -[GCConfigurationAssetXPCProxy encodeWithCoder:]
  -[GCConfigurationAssetXPCProxy .cxx_destruct]
  -[GCConfigurationAssetXPCProxy compatibilityVersion]
  -[GCConfigurationAssetXPCProxy init]
  -[GCConfigurationAssetXPCProxy initWithCoder:]
  -[GCConfigurationAssetXPCProxy assetState]
  -[GCConfigurationAssetXPCProxy contentRevision]


GCConfigurationAssetManagementServiceXPCProxy : NSObject <GCConfigurationAssetManagementServiceXPCInterface>
  // instance methods
  -[GCConfigurationAssetManagementServiceXPCProxy initWithService:]
  -[GCConfigurationAssetManagementServiceXPCProxy .cxx_destruct]
  -[GCConfigurationAssetManagementServiceXPCProxy init]
  -[GCConfigurationAssetManagementServiceXPCProxy assetsWithReply:]
  -[GCConfigurationAssetManagementServiceXPCProxy currentAsset:withReply:]
  -[GCConfigurationAssetManagementServiceXPCProxy lastUpdateDateWithReply:]
  -[GCConfigurationAssetManagementServiceXPCProxy checkForNewAssets:forceCatalogRefresh:reply:]


GCConfigurationAssetManagementServiceConnection : GCConfigXPCServiceServiceConnection <GCConfigurationAssetManagementService>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[GCConfigurationAssetManagementServiceConnection serviceProtocol]

  // instance methods
  -[GCConfigurationAssetManagementServiceConnection assets]
  -[GCConfigurationAssetManagementServiceConnection lastUpdateDate]
  -[GCConfigurationAssetManagementServiceConnection currentAsset:]
  -[GCConfigurationAssetManagementServiceConnection checkForNewAssets:forceCatalogRefresh:completion:]


_GCConfigurationBundleLocator : NSObject
 @property  NSString *configurationType

  // instance methods
  -[_GCConfigurationBundleLocator configurationType]
  -[_GCConfigurationBundleLocator dealloc]
  -[_GCConfigurationBundleLocator .cxx_destruct]
  -[_GCConfigurationBundleLocator init]
  -[_GCConfigurationBundleLocator _filesystemDidChange:]
  -[_GCConfigurationBundleLocator _assetDidChange:]
  -[_GCConfigurationBundleLocator initWithConfigurationType:provider:]
  -[_GCConfigurationBundleLocator fetchBundles]


GCGenericDeviceDataClampExpressionModel : GCGenericDeviceDataProcessorExpressionModel
 @property  GCGenericDeviceDataProcessorExpressionModel *inputExpression
 @property  GCGenericDeviceDataProcessorExpressionModel *minExpression
 @property  GCGenericDeviceDataProcessorExpressionModel *maxExpression

  // class methods
  +[GCGenericDeviceDataClampExpressionModel supportsSecureCoding]

  // instance methods
  -[GCGenericDeviceDataClampExpressionModel encodeWithCoder:]
  -[GCGenericDeviceDataClampExpressionModel .cxx_destruct]
  -[GCGenericDeviceDataClampExpressionModel redactedDescription]
  -[GCGenericDeviceDataClampExpressionModel isEqual:]
  -[GCGenericDeviceDataClampExpressionModel initWithCoder:]
  -[GCGenericDeviceDataClampExpressionModel inputExpression]
  -[GCGenericDeviceDataClampExpressionModel minExpression]
  -[GCGenericDeviceDataClampExpressionModel maxExpression]


GCGenericDeviceDataClampExpressionModelBuilder : GCGenericDeviceDataProcessorExpressionModelBuilder
 @property  GCGenericDeviceDataProcessorExpressionModel *inputExpression
 @property  GCGenericDeviceDataProcessorExpressionModel *minExpression
 @property  GCGenericDeviceDataProcessorExpressionModel *maxExpression

  // class methods
  +[GCGenericDeviceDataClampExpressionModelBuilder modelClass]

  // instance methods
  -[GCGenericDeviceDataClampExpressionModelBuilder reset]
  -[GCGenericDeviceDataClampExpressionModelBuilder build]
  -[GCGenericDeviceDataClampExpressionModelBuilder .cxx_destruct]
  -[GCGenericDeviceDataClampExpressionModelBuilder initWithDictionaryRepresentation:error:]
  -[GCGenericDeviceDataClampExpressionModelBuilder inputExpression]
  -[GCGenericDeviceDataClampExpressionModelBuilder initializeWithModel:]
  -[GCGenericDeviceDataClampExpressionModelBuilder setInputExpression:]
  -[GCGenericDeviceDataClampExpressionModelBuilder minExpression]
  -[GCGenericDeviceDataClampExpressionModelBuilder maxExpression]
  -[GCGenericDeviceDataClampExpressionModelBuilder setMinExpression:]
  -[GCGenericDeviceDataClampExpressionModelBuilder setMaxExpression:]


GCIPCRemoteOutgoingConnection : GCIPCRemoteConnection <GCIPCOutgoingConnection>
 @property  BOOL invalid
 @property  {?=[8I]} peerAuditToken
 @property  int peerAuditSessionIdentifier
 @property  int peerProcessIdentifier
 @property  unsigned int peerEffectiveUserIdentifier
 @property  unsigned int peerEffectiveGroupIdentifier
 @property  NSString *peerBundleIdentifier

  // class methods
  +[GCIPCRemoteOutgoingConnection sharedConnectionWorkloop]

  // instance methods
  -[GCIPCRemoteOutgoingConnection initWithConnection:]
  -[GCIPCRemoteOutgoingConnection remoteProxyWithErrorHandler:]
  -[GCIPCRemoteOutgoingConnection synchronousRemoteProxyWithErrorHandler:]
  -[GCIPCRemoteOutgoingConnection remoteProxy]
  -[GCIPCRemoteOutgoingConnection redactedDescription]


_GCDeviceOnDiskDB : NSObject
 @property  NSArray *configurationBundles

  // instance methods
  -[_GCDeviceOnDiskDB .cxx_destruct]
  -[_GCDeviceOnDiskDB init]
  -[_GCDeviceOnDiskDB initWithBundles:]
  -[_GCDeviceOnDiskDB bestModelMatchingDevice:]
  -[_GCDeviceOnDiskDB configurationBundles]


GCGenericDeviceDataConstantExpressionModel : GCGenericDeviceDataProcessorExpressionModel
 @property  double value

  // class methods
  +[GCGenericDeviceDataConstantExpressionModel supportsSecureCoding]

  // instance methods
  -[GCGenericDeviceDataConstantExpressionModel encodeWithCoder:]
  -[GCGenericDeviceDataConstantExpressionModel value]
  -[GCGenericDeviceDataConstantExpressionModel redactedDescription]
  -[GCGenericDeviceDataConstantExpressionModel isEqual:]
  -[GCGenericDeviceDataConstantExpressionModel initWithCoder:]


GCGenericDeviceDataConstantExpressionModelBuilder : GCGenericDeviceDataProcessorExpressionModelBuilder
 @property  double value

  // class methods
  +[GCGenericDeviceDataConstantExpressionModelBuilder modelClass]

  // instance methods
  -[GCGenericDeviceDataConstantExpressionModelBuilder reset]
  -[GCGenericDeviceDataConstantExpressionModelBuilder build]
  -[GCGenericDeviceDataConstantExpressionModelBuilder setValue:]
  -[GCGenericDeviceDataConstantExpressionModelBuilder value]
  -[GCGenericDeviceDataConstantExpressionModelBuilder initWithDictionaryRepresentation:error:]
  -[GCGenericDeviceDataConstantExpressionModelBuilder initializeWithModel:]


GCHIDDeviceSnapshot : NSObject <GCHIDDeviceAttributes, NSSecureCoding>
 @property  NSString *transport
 @property  NSNumber *vendorID
 @property  NSNumber *productID
 @property  NSNumber *versionNumber
 @property  NSString *manufacturer
 @property  NSString *product

  // class methods
  +[GCHIDDeviceSnapshot supportsSecureCoding]

  // instance methods
  -[GCHIDDeviceSnapshot versionNumber]
  -[GCHIDDeviceSnapshot transport]
  -[GCHIDDeviceSnapshot vendorID]
  -[GCHIDDeviceSnapshot productID]
  -[GCHIDDeviceSnapshot encodeWithCoder:]
  -[GCHIDDeviceSnapshot valueForKey:]
  -[GCHIDDeviceSnapshot .cxx_destruct]
  -[GCHIDDeviceSnapshot manufacturer]
  -[GCHIDDeviceSnapshot initWithCoder:]
  -[GCHIDDeviceSnapshot product]
  -[GCHIDDeviceSnapshot valueForHIDDeviceKey:]


GCHIDKernelDeviceSnapshot : GCHIDDeviceSnapshot
  // class methods
  +[GCHIDKernelDeviceSnapshot supportsSecureCoding]

  // instance methods
  -[GCHIDKernelDeviceSnapshot initWithService:]
  -[GCHIDKernelDeviceSnapshot init]


GCHIDUserDeviceSnapshot : GCHIDDeviceSnapshot
 @property  NSArray *elements

  // class methods
  +[GCHIDUserDeviceSnapshot supportsSecureCoding]

  // instance methods
  -[GCHIDUserDeviceSnapshot elements]
  -[GCHIDUserDeviceSnapshot encodeWithCoder:]
  -[GCHIDUserDeviceSnapshot .cxx_destruct]
  -[GCHIDUserDeviceSnapshot init]
  -[GCHIDUserDeviceSnapshot initWithCoder:]
  -[GCHIDUserDeviceSnapshot initWithHIDDevice:]


GCHIDDevice : HIDDevice <GCHIDDeviceAttributes>
 @property  NSString *transport
 @property  NSNumber *vendorID
 @property  NSNumber *productID
 @property  NSNumber *versionNumber
 @property  NSString *manufacturer
 @property  NSString *product

  // instance methods
  -[GCHIDDevice versionNumber]
  -[GCHIDDevice transport]
  -[GCHIDDevice vendorID]
  -[GCHIDDevice productID]
  -[GCHIDDevice initWithService:]
  -[GCHIDDevice valueForKey:]
  -[GCHIDDevice manufacturer]
  -[GCHIDDevice init]
  -[GCHIDDevice product]
  -[GCHIDDevice valueForHIDDeviceKey:]


_GCGenericDeviceDBServiceConnection : GCConfigXPCServiceServiceConnection <_GCGenericDeviceDBService>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_GCGenericDeviceDBServiceConnection serviceProtocol]

  // instance methods
  -[_GCGenericDeviceDBServiceConnection hasModelForDevice:]
  -[_GCGenericDeviceDBServiceConnection preparedModelForDevice:]


GCGenericDevicePhysicalInputDpadModel : GCGenericDevicePhysicalInputElementModel
 @property  long long sourceUpExtendedEventFieldIndex
 @property  long long sourceDownExtendedEventFieldIndex
 @property  long long sourceLeftExtendedEventFieldIndex
 @property  long long sourceRightExtendedEventFieldIndex

  // class methods
  +[GCGenericDevicePhysicalInputDpadModel supportsSecureCoding]

  // instance methods
  -[GCGenericDevicePhysicalInputDpadModel encodeWithCoder:]
  -[GCGenericDevicePhysicalInputDpadModel isEqual:]
  -[GCGenericDevicePhysicalInputDpadModel initWithCoder:]
  -[GCGenericDevicePhysicalInputDpadModel sourceUpExtendedEventFieldIndex]
  -[GCGenericDevicePhysicalInputDpadModel sourceDownExtendedEventFieldIndex]
  -[GCGenericDevicePhysicalInputDpadModel sourceLeftExtendedEventFieldIndex]
  -[GCGenericDevicePhysicalInputDpadModel sourceRightExtendedEventFieldIndex]


GCGenericDevicePhysicalInputDpadModelBuilder : GCGenericDevicePhysicalInputElementModelBuilder
 @property  long long sourceUpExtendedEventFieldIndex
 @property  long long sourceDownExtendedEventFieldIndex
 @property  long long sourceLeftExtendedEventFieldIndex
 @property  long long sourceRightExtendedEventFieldIndex

  // class methods
  +[GCGenericDevicePhysicalInputDpadModelBuilder modelClass]

  // instance methods
  -[GCGenericDevicePhysicalInputDpadModelBuilder reset]
  -[GCGenericDevicePhysicalInputDpadModelBuilder build]
  -[GCGenericDevicePhysicalInputDpadModelBuilder initWithDictionaryRepresentation:error:]
  -[GCGenericDevicePhysicalInputDpadModelBuilder initializeWithModel:]
  -[GCGenericDevicePhysicalInputDpadModelBuilder sourceUpExtendedEventFieldIndex]
  -[GCGenericDevicePhysicalInputDpadModelBuilder sourceDownExtendedEventFieldIndex]
  -[GCGenericDevicePhysicalInputDpadModelBuilder sourceLeftExtendedEventFieldIndex]
  -[GCGenericDevicePhysicalInputDpadModelBuilder sourceRightExtendedEventFieldIndex]
  -[GCGenericDevicePhysicalInputDpadModelBuilder setSourceUpExtendedEventFieldIndex:]
  -[GCGenericDevicePhysicalInputDpadModelBuilder setSourceDownExtendedEventFieldIndex:]
  -[GCGenericDevicePhysicalInputDpadModelBuilder setSourceLeftExtendedEventFieldIndex:]
  -[GCGenericDevicePhysicalInputDpadModelBuilder setSourceRightExtendedEventFieldIndex:]


GCGenericDeviceDataInputElementAttributeExpressionModel : GCGenericDeviceDataProcessorExpressionModel
 @property  NSString *elementIdentifier
 @property  NSString *attribute

  // class methods
  +[GCGenericDeviceDataInputElementAttributeExpressionModel supportsSecureCoding]

  // instance methods
  -[GCGenericDeviceDataInputElementAttributeExpressionModel encodeWithCoder:]
  -[GCGenericDeviceDataInputElementAttributeExpressionModel elementIdentifier]
  -[GCGenericDeviceDataInputElementAttributeExpressionModel .cxx_destruct]
  -[GCGenericDeviceDataInputElementAttributeExpressionModel attribute]
  -[GCGenericDeviceDataInputElementAttributeExpressionModel redactedDescription]
  -[GCGenericDeviceDataInputElementAttributeExpressionModel isEqual:]
  -[GCGenericDeviceDataInputElementAttributeExpressionModel initWithCoder:]


GCGenericDeviceDataInputElementAttributeExpressionModelBuilder : GCGenericDeviceDataProcessorExpressionModelBuilder
 @property  NSString *elementIdentifier
 @property  NSString *attribute

  // class methods
  +[GCGenericDeviceDataInputElementAttributeExpressionModelBuilder modelClass]

  // instance methods
  -[GCGenericDeviceDataInputElementAttributeExpressionModelBuilder reset]
  -[GCGenericDeviceDataInputElementAttributeExpressionModelBuilder build]
  -[GCGenericDeviceDataInputElementAttributeExpressionModelBuilder elementIdentifier]
  -[GCGenericDeviceDataInputElementAttributeExpressionModelBuilder .cxx_destruct]
  -[GCGenericDeviceDataInputElementAttributeExpressionModelBuilder setAttribute:]
  -[GCGenericDeviceDataInputElementAttributeExpressionModelBuilder attribute]
  -[GCGenericDeviceDataInputElementAttributeExpressionModelBuilder initWithDictionaryRepresentation:error:]
  -[GCGenericDeviceDataInputElementAttributeExpressionModelBuilder setElementIdentifier:]
  -[GCGenericDeviceDataInputElementAttributeExpressionModelBuilder initializeWithModel:]


GCConfigXPCServiceServiceConnection : NSObject
 @property  BOOL invalid

  // class methods
  +[GCConfigXPCServiceServiceConnection serviceProtocol]
  +[GCConfigXPCServiceServiceConnection connection:withClient:]

  // instance methods
  -[GCConfigXPCServiceServiceConnection isInvalid]
  -[GCConfigXPCServiceServiceConnection .cxx_destruct]
  -[GCConfigXPCServiceServiceConnection addInvalidationHandler:]
  -[GCConfigXPCServiceServiceConnection scheduleSendBarrierBlock:]
  -[GCConfigXPCServiceServiceConnection serviceVendorRequestWithLabel:handler:]
  -[GCConfigXPCServiceServiceConnection serviceVendorRequestWithHandler:]
  -[GCConfigXPCServiceServiceConnection initWithConnection:serviceVendor:]


_GCDisposable : NSObject
  // instance methods
  -[_GCDisposable initWithCleanupHandler:]
  -[_GCDisposable dealloc]
  -[_GCDisposable .cxx_destruct]


GCHIDDeviceInput : NSObject
 @property  ^{__IOHIDDevice=} deviceRef
 @property  BOOL suspended
 @property  NSSet *elements

  // instance methods
  -[GCHIDDeviceInput activate]
  -[GCHIDDeviceInput deviceRef]
  -[GCHIDDeviceInput setCancelHandler:]
  -[GCHIDDeviceInput elements]
  -[GCHIDDeviceInput isSuspended]
  -[GCHIDDeviceInput dealloc]
  -[GCHIDDeviceInput .cxx_destruct]
  -[GCHIDDeviceInput setDispatchQueue:]
  -[GCHIDDeviceInput setInputElementMatching:]
  -[GCHIDDeviceInput setSuspended:]
  -[GCHIDDeviceInput cancel]
  -[GCHIDDeviceInput init]
  -[GCHIDDeviceInput setBatchInputElementHandler:]
  -[GCHIDDeviceInput initWithHIDDevice:]
  -[GCHIDDeviceInput initWithIOHIDDevice:]
  -[GCHIDDeviceInput setInputElements:]


_GCLogitechRacingWheelDeviceManager : NSObject <_GCDeviceManager>
 @property  <NSObject><NSCopying><NSSecureCoding> *identifier
 @property  <_GCDeviceRegistry> *deviceRegistry
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_GCLogitechRacingWheelDeviceManager identifier]
  -[_GCLogitechRacingWheelDeviceManager deviceRegistry]
  -[_GCLogitechRacingWheelDeviceManager dealloc]
  -[_GCLogitechRacingWheelDeviceManager .cxx_destruct]
  -[_GCLogitechRacingWheelDeviceManager setDeviceRegistry:]
  -[_GCLogitechRacingWheelDeviceManager init]


_GCDeviceConfiguration : NSObject <NSCopying, NSMutableCopying, NSSecureCoding>
 @property  NSDictionary *attributes
 @property  <NSObject><NSCopying><NSSecureCoding> *identifier
 @property  unsigned long priority
 @property  BOOL transient
 @property  <NSObject><NSCopying><NSSecureCoding> *deviceIdentifier
 @property  NSArray *deviceDependencies
 @property  <NSObject><NSCopying><NSSecureCoding> *deviceBuilderIdentifier

  // class methods
  +[_GCDeviceConfiguration supportsSecureCoding]
  +[_GCDeviceConfiguration configurationWithIdentifier:priority:deviceIdentifier:deviceDependencies:deviceBuilder:]

  // instance methods
  -[_GCDeviceConfiguration isTransient]
  -[_GCDeviceConfiguration identifier]
  -[_GCDeviceConfiguration deviceIdentifier]
  -[_GCDeviceConfiguration attributes]
  -[_GCDeviceConfiguration isEqualToConfiguration:]
  -[_GCDeviceConfiguration encodeWithCoder:]
  -[_GCDeviceConfiguration .cxx_destruct]
  -[_GCDeviceConfiguration copyWithZone:]
  -[_GCDeviceConfiguration priority]
  -[_GCDeviceConfiguration redactedDescription]
  -[_GCDeviceConfiguration mutableCopyWithZone:]
  -[_GCDeviceConfiguration isEqual:]
  -[_GCDeviceConfiguration init]
  -[_GCDeviceConfiguration initWithCoder:]
  -[_GCDeviceConfiguration valueForAttribute:]
  -[_GCDeviceConfiguration _initWithIdentifier:attributes:]
  -[_GCDeviceConfiguration deviceDependencies]
  -[_GCDeviceConfiguration deviceBuilderIdentifier]


_GCMutableDeviceConfiguration : _GCDeviceConfiguration
 @property  <NSObject><NSCopying><NSSecureCoding> *identifier
 @property  unsigned long priority
 @property  BOOL transient
 @property  <NSObject><NSCopying><NSSecureCoding> *deviceIdentifier
 @property  NSArray *deviceDependencies
 @property  <NSObject><NSCopying><NSSecureCoding> *deviceBuilderIdentifier

  // instance methods
  -[_GCMutableDeviceConfiguration setDeviceIdentifier:]
  -[_GCMutableDeviceConfiguration setPriority:]
  -[_GCMutableDeviceConfiguration setTransient:]
  -[_GCMutableDeviceConfiguration setIdentifier:]
  -[_GCMutableDeviceConfiguration copyWithZone:]
  -[_GCMutableDeviceConfiguration mutableCopyWithZone:]
  -[_GCMutableDeviceConfiguration _initWithIdentifier:attributes:]
  -[_GCMutableDeviceConfiguration setValue:forAttribute:]
  -[_GCMutableDeviceConfiguration setDeviceDependencies:]
  -[_GCMutableDeviceConfiguration setDeviceBuilderIdentifier:]


GCConfigXPCServiceClientConnection : GCIPCRemoteIncomingConnection
 @property  <GCConfigXPCServiceInterface> *server

  // instance methods
  -[GCConfigXPCServiceClientConnection initWithConnection:]
  -[GCConfigXPCServiceClientConnection server]
  -[GCConfigXPCServiceClientConnection setServer:]


GCConfigXPCServiceConnection : GCIPCRemoteOutgoingConnection
 @property  <GCConfigXPCServiceClientInterface> *client

  // instance methods
  -[GCConfigXPCServiceConnection setClient:]
  -[GCConfigXPCServiceConnection client]
  -[GCConfigXPCServiceConnection connectToService:withClient:]
  -[GCConfigXPCServiceConnection init]


_GCDeviceDBBundleDevice : NSObject
 @property  NSString *identifier
 @property  NSPredicate *ioMatchingPredicate

  // instance methods
  -[_GCDeviceDBBundleDevice identifier]
  -[_GCDeviceDBBundleDevice .cxx_destruct]
  -[_GCDeviceDBBundleDevice personalities]
  -[_GCDeviceDBBundleDevice init]
  -[_GCDeviceDBBundleDevice ioMatchingPredicate]
  -[_GCDeviceDBBundleDevice initWithBundle:dictionary:error:]


_GCDeviceDBBundleDevicePersonalitiesEnumerator : NSEnumerator
  // instance methods
  -[_GCDeviceDBBundleDevicePersonalitiesEnumerator .cxx_destruct]
  -[_GCDeviceDBBundleDevicePersonalitiesEnumerator nextObject]
  -[_GCDeviceDBBundleDevicePersonalitiesEnumerator initWithBundle:personalityPaths:]


GCConfigXPCService : NSObject <GCConfigXPCServiceInterface, NSObject>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GCConfigXPCService .cxx_destruct]
  -[GCConfigXPCService init]
  -[GCConfigXPCService serviceFor:client:]
  -[GCConfigXPCService connectToAssetManagementServiceWithClient:reply:]
  -[GCConfigXPCService connectToGenericDeviceDBServiceWithClient:reply:]


_GCGenericDeviceDriverConfigurationServiceConnection : _GCDeviceDriverServiceConnection
  // class methods
  +[_GCGenericDeviceDriverConfigurationServiceConnection serviceProtocol]

  // instance methods
  -[_GCGenericDeviceDriverConfigurationServiceConnection applyConfiguration:]
  -[_GCGenericDeviceDriverConfigurationServiceConnection fetchDeviceSnapshot]


GCGenericDevicePhysicalInputButtonModel : GCGenericDevicePhysicalInputElementModel
 @property  long long sourceExtendedEventFieldIndex

  // class methods
  +[GCGenericDevicePhysicalInputButtonModel supportsSecureCoding]

  // instance methods
  -[GCGenericDevicePhysicalInputButtonModel encodeWithCoder:]
  -[GCGenericDevicePhysicalInputButtonModel isEqual:]
  -[GCGenericDevicePhysicalInputButtonModel initWithCoder:]
  -[GCGenericDevicePhysicalInputButtonModel sourceExtendedEventFieldIndex]


GCGenericDevicePhysicalInputButtonModelBuilder : GCGenericDevicePhysicalInputElementModelBuilder
 @property  long long sourceExtendedEventFieldIndex

  // class methods
  +[GCGenericDevicePhysicalInputButtonModelBuilder modelClass]

  // instance methods
  -[GCGenericDevicePhysicalInputButtonModelBuilder reset]
  -[GCGenericDevicePhysicalInputButtonModelBuilder build]
  -[GCGenericDevicePhysicalInputButtonModelBuilder initWithDictionaryRepresentation:error:]
  -[GCGenericDevicePhysicalInputButtonModelBuilder initializeWithModel:]
  -[GCGenericDevicePhysicalInputButtonModelBuilder sourceExtendedEventFieldIndex]
  -[GCGenericDevicePhysicalInputButtonModelBuilder setSourceExtendedEventFieldIndex:]


GCFuture : NSObject
 @property  NSString *label

  // class methods
  +[GCFuture allocWithZone:]
  +[GCFuture alloc]
  +[GCFuture futureWithError:]
  +[GCFuture futureWithResult:]
  +[GCFuture futureWithBlock:]
  +[GCFuture futureWithOptions:block:]
  +[GCFuture futureWithLabel:block:]
  +[GCFuture futureWithLabel:onQueue:block:]
  +[GCFuture futureOnQueue:withBlock:]
  +[GCFuture futureOnQueue:withOptions:block:]
  +[GCFuture cancelledFuture]

  // instance methods
  -[GCFuture isFinished]
  -[GCFuture error]
  -[GCFuture initWithResult:]
  -[GCFuture dealloc]
  -[GCFuture setLabel:]
  -[GCFuture .cxx_destruct]
  -[GCFuture initWithError:]
  -[GCFuture result]
  -[GCFuture waitUntilFinished]
  -[GCFuture label]
  -[GCFuture redactedDescription]
  -[GCFuture cancel]
  -[GCFuture init]
  -[GCFuture initCancelled]
  -[GCFuture initOnQueue:withOptions:block:]
  -[GCFuture initOnQueue:withBlock:]
  -[GCFuture _creatorFrame]
  -[GCFuture _checkFinished:]
  -[GCFuture _setState:result:error:]
  -[GCFuture _observeFinishOnQueue:withOptions:qosClass:relativePriority:block:]
  -[GCFuture observeFinishOnQueue:withOptions:qosClass:relativePriority:block:]
  -[GCFuture observeFinishOnQueue:withOptions:block:]
  -[GCFuture observeFinishOnQueue:withBlock:]
  -[GCFuture observeFinishWithOptions:block:]
  -[GCFuture observeFinish:]
  -[GCFuture observeSuccess:]
  -[GCFuture observeSuccessOnQueue:withBlock:]
  -[GCFuture observeFailure:]
  -[GCFuture observeCancellation:]
  -[GCFuture resultIfFinished]
  -[GCFuture waitForResult:error:]
  -[GCFuture _thenRequiringState:onQueue:withOptions:qosClass:relativePriority:label:block:]
  -[GCFuture _thenSynchronouslyRequiringState:onQueue:withOptions:qosClass:relativePriority:label:block:]
  -[GCFuture thenOnQueue:withOptions:qosClass:relativePriority:label:block:]
  -[GCFuture thenWith:]
  -[GCFuture thenWithResult:]
  -[GCFuture thenOnQueue:with:]
  -[GCFuture thenOnQueue:withResult:]
  -[GCFuture thenSynchronouslyOnQueue:withOptions:qosClass:relativePriority:label:block:]
  -[GCFuture thenSynchronouslyOnQueue:with:]
  -[GCFuture thenSynchronouslyWith:]
  -[GCFuture thenSynchronouslyWithResult:]


_GCPlaceholderFuture : GCFuture

_GCStaticFuture : GCFuture

_GCAsyncFuture : GCFuture
  // instance methods
  -[_GCAsyncFuture .cxx_construct]
  -[_GCAsyncFuture .cxx_destruct]
  -[_GCAsyncFuture _creatorFrame]
  -[_GCAsyncFuture _checkFinished:]
  -[_GCAsyncFuture _setState:result:error:]
  -[_GCAsyncFuture _observeFinishOnQueue:withOptions:qosClass:relativePriority:block:]


GCOperation : GCFuture
 @property  @? asyncBlock
 @property  @? syncBlock

  // class methods
  +[GCOperation allocWithZone:]
  +[GCOperation alloc]

  // instance methods
  -[GCOperation activate]
  -[GCOperation .cxx_construct]
  -[GCOperation initWithResult:]
  -[GCOperation setLabel:]
  -[GCOperation .cxx_destruct]
  -[GCOperation initWithError:]
  -[GCOperation asyncBlock]
  -[GCOperation setAsyncBlock:]
  -[GCOperation initCancelled]
  -[GCOperation initOnQueue:withOptions:block:]
  -[GCOperation initOnQueue:withBlock:]
  -[GCOperation _creatorFrame]
  -[GCOperation _checkFinished:]
  -[GCOperation _setState:result:error:]
  -[GCOperation _observeFinishOnQueue:withOptions:qosClass:relativePriority:block:]
  -[GCOperation _thenSynchronouslyRequiringState:onQueue:withOptions:qosClass:relativePriority:label:block:]
  -[GCOperation initOnQueue:withOptions:]
  -[GCOperation setSyncBlock:]
  -[GCOperation startAsynchronously]
  -[GCOperation syncBlock]


GCPromise : NSObject
 @property  BOOL cancelled

  // instance methods
  -[GCPromise failWithError:]
  -[GCPromise future]
  -[GCPromise dealloc]
  -[GCPromise .cxx_destruct]
  -[GCPromise redactedDescription]
  -[GCPromise isCancelled]
  -[GCPromise cancel]
  -[GCPromise init]
  -[GCPromise succeedWithResult:]


GCGenericDeviceDriverModel : NSObject <NSCopying, NSSecureCoding>
 @property  NSSet *elements
 @property  GCGenericDeviceInputEventDriverModel *input

  // class methods
  +[GCGenericDeviceDriverModel supportsSecureCoding]
  +[GCGenericDeviceDriverModel modelWithDictionaryRepresentation:error:]

  // instance methods
  -[GCGenericDeviceDriverModel input]
  -[GCGenericDeviceDriverModel elements]
  -[GCGenericDeviceDriverModel encodeWithCoder:]
  -[GCGenericDeviceDriverModel .cxx_destruct]
  -[GCGenericDeviceDriverModel copyWithZone:]
  -[GCGenericDeviceDriverModel isEqual:]
  -[GCGenericDeviceDriverModel init]
  -[GCGenericDeviceDriverModel initWithCoder:]


GCGenericDeviceDriverModelBuilder : NSObject
 @property  NSSet *elements
 @property  GCGenericDeviceInputEventDriverModel *input

  // class methods
  +[GCGenericDeviceDriverModelBuilder modelClass]

  // instance methods
  -[GCGenericDeviceDriverModelBuilder input]
  -[GCGenericDeviceDriverModelBuilder setElements:]
  -[GCGenericDeviceDriverModelBuilder elements]
  -[GCGenericDeviceDriverModelBuilder reset]
  -[GCGenericDeviceDriverModelBuilder build]
  -[GCGenericDeviceDriverModelBuilder .cxx_destruct]
  -[GCGenericDeviceDriverModelBuilder setInput:]
  -[GCGenericDeviceDriverModelBuilder isEqual:]
  -[GCGenericDeviceDriverModelBuilder init]
  -[GCGenericDeviceDriverModelBuilder initializeWithModel:]


GCGenericDeviceDataInterpolateExpressionModel : GCGenericDeviceDataProcessorExpressionModel
 @property  GCGenericDeviceDataProcessorExpressionModel *inputExpression
 @property  GCGenericDeviceDataProcessorExpressionModel *inputMinExpression
 @property  GCGenericDeviceDataProcessorExpressionModel *inputMaxExpression
 @property  GCGenericDeviceDataProcessorExpressionModel *outputMinExpression
 @property  GCGenericDeviceDataProcessorExpressionModel *outputMaxExpression

  // class methods
  +[GCGenericDeviceDataInterpolateExpressionModel supportsSecureCoding]

  // instance methods
  -[GCGenericDeviceDataInterpolateExpressionModel encodeWithCoder:]
  -[GCGenericDeviceDataInterpolateExpressionModel .cxx_destruct]
  -[GCGenericDeviceDataInterpolateExpressionModel redactedDescription]
  -[GCGenericDeviceDataInterpolateExpressionModel isEqual:]
  -[GCGenericDeviceDataInterpolateExpressionModel initWithCoder:]
  -[GCGenericDeviceDataInterpolateExpressionModel inputExpression]
  -[GCGenericDeviceDataInterpolateExpressionModel inputMinExpression]
  -[GCGenericDeviceDataInterpolateExpressionModel inputMaxExpression]
  -[GCGenericDeviceDataInterpolateExpressionModel outputMinExpression]
  -[GCGenericDeviceDataInterpolateExpressionModel outputMaxExpression]


GCGenericDeviceDataInterpolateExpressionModelBuilder : GCGenericDeviceDataProcessorExpressionModelBuilder
 @property  GCGenericDeviceDataProcessorExpressionModel *inputExpression
 @property  GCGenericDeviceDataProcessorExpressionModel *inputMinExpression
 @property  GCGenericDeviceDataProcessorExpressionModel *inputMaxExpression
 @property  GCGenericDeviceDataProcessorExpressionModel *outputMinExpression
 @property  GCGenericDeviceDataProcessorExpressionModel *outputMaxExpression

  // class methods
  +[GCGenericDeviceDataInterpolateExpressionModelBuilder modelClass]

  // instance methods
  -[GCGenericDeviceDataInterpolateExpressionModelBuilder reset]
  -[GCGenericDeviceDataInterpolateExpressionModelBuilder build]
  -[GCGenericDeviceDataInterpolateExpressionModelBuilder .cxx_destruct]
  -[GCGenericDeviceDataInterpolateExpressionModelBuilder initWithDictionaryRepresentation:error:]
  -[GCGenericDeviceDataInterpolateExpressionModelBuilder inputExpression]
  -[GCGenericDeviceDataInterpolateExpressionModelBuilder initializeWithModel:]
  -[GCGenericDeviceDataInterpolateExpressionModelBuilder setInputExpression:]
  -[GCGenericDeviceDataInterpolateExpressionModelBuilder inputMinExpression]
  -[GCGenericDeviceDataInterpolateExpressionModelBuilder inputMaxExpression]
  -[GCGenericDeviceDataInterpolateExpressionModelBuilder setInputMinExpression:]
  -[GCGenericDeviceDataInterpolateExpressionModelBuilder setInputMaxExpression:]
  -[GCGenericDeviceDataInterpolateExpressionModelBuilder outputMinExpression]
  -[GCGenericDeviceDataInterpolateExpressionModelBuilder outputMaxExpression]
  -[GCGenericDeviceDataInterpolateExpressionModelBuilder setOutputMinExpression:]
  -[GCGenericDeviceDataInterpolateExpressionModelBuilder setOutputMaxExpression:]


GCGenericDevicePhysicalInputModel : NSObject <NSCopying, NSSecureCoding>
 @property  NSSet *elements

  // class methods
  +[GCGenericDevicePhysicalInputModel supportsSecureCoding]
  +[GCGenericDevicePhysicalInputModel modelWithDictionaryRepresentation:error:]

  // instance methods
  -[GCGenericDevicePhysicalInputModel elements]
  -[GCGenericDevicePhysicalInputModel encodeWithCoder:]
  -[GCGenericDevicePhysicalInputModel .cxx_destruct]
  -[GCGenericDevicePhysicalInputModel copyWithZone:]
  -[GCGenericDevicePhysicalInputModel redactedDescription]
  -[GCGenericDevicePhysicalInputModel isEqual:]
  -[GCGenericDevicePhysicalInputModel init]
  -[GCGenericDevicePhysicalInputModel initWithCoder:]


GCGenericDevicePhysicalInputModelBuilder : NSObject
 @property  NSSet *elements

  // class methods
  +[GCGenericDevicePhysicalInputModelBuilder modelClass]

  // instance methods
  -[GCGenericDevicePhysicalInputModelBuilder setElements:]
  -[GCGenericDevicePhysicalInputModelBuilder elements]
  -[GCGenericDevicePhysicalInputModelBuilder reset]
  -[GCGenericDevicePhysicalInputModelBuilder build]
  -[GCGenericDevicePhysicalInputModelBuilder .cxx_destruct]
  -[GCGenericDevicePhysicalInputModelBuilder isEqual:]
  -[GCGenericDevicePhysicalInputModelBuilder init]
  -[GCGenericDevicePhysicalInputModelBuilder initializeWithModel:]


_GCHIDServiceInfo : NSObject <NSCopying>
 @property  ^{__IOHIDServiceClient=} service
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSNumber *registryID

  // instance methods
  -[_GCHIDServiceInfo registryID]
  -[_GCHIDServiceInfo initWithService:queue:]
  -[_GCHIDServiceInfo dealloc]
  -[_GCHIDServiceInfo .cxx_destruct]
  -[_GCHIDServiceInfo service]
  -[_GCHIDServiceInfo copyWithZone:]
  -[_GCHIDServiceInfo queue]
  -[_GCHIDServiceInfo redactedDescription]
  -[_GCHIDServiceInfo isEqual:]
  -[_GCHIDServiceInfo init]
  -[_GCHIDServiceInfo isEqualToHIDServiceInfo:]


GCVersion : NSObject <NSCopying, NSSecureCoding>
 @property  unsigned long major
 @property  unsigned long minor
 @property  unsigned long patch

  // class methods
  +[GCVersion supportsSecureCoding]
  +[GCVersion currentSourceVersion]

  // instance methods
  -[GCVersion encodeWithCoder:]
  -[GCVersion compare:]
  -[GCVersion minor]
  -[GCVersion major]
  -[GCVersion initWithString:]
  -[GCVersion isEqualTo:]
  -[GCVersion copyWithZone:]
  -[GCVersion redactedDescription]
  -[GCVersion isGreaterThanOrEqualTo:]
  -[GCVersion isEqual:]
  -[GCVersion init]
  -[GCVersion initWithCoder:]
  -[GCVersion patch]
  -[GCVersion isGreaterThan:]
  -[GCVersion isLessThan:]
  -[GCVersion isLessThanOrEqualTo:]
  -[GCVersion initWithMajor:minor:patch:]
  -[GCVersion isEqualToSourceVersion:]
  -[GCVersion isGreaterThanSourceVersion:]
  -[GCVersion isGreaterThanOrEqualToSourceVersion:]
  -[GCVersion isLessThanSourceVersion:]
  -[GCVersion isLessThanOrEqualToSourceVersion:]


GCGenericDeviceInputGamepadEventFieldModel : NSObject <NSCopying, NSSecureCoding>
 @property  long long extendedIndex
 @property  GCGenericDeviceDataProcessorExpressionModel *sourceExpression

  // class methods
  +[GCGenericDeviceInputGamepadEventFieldModel supportsSecureCoding]
  +[GCGenericDeviceInputGamepadEventFieldModel modelWithDictionaryRepresentation:error:]

  // instance methods
  -[GCGenericDeviceInputGamepadEventFieldModel encodeWithCoder:]
  -[GCGenericDeviceInputGamepadEventFieldModel .cxx_destruct]
  -[GCGenericDeviceInputGamepadEventFieldModel copyWithZone:]
  -[GCGenericDeviceInputGamepadEventFieldModel redactedDescription]
  -[GCGenericDeviceInputGamepadEventFieldModel isEqual:]
  -[GCGenericDeviceInputGamepadEventFieldModel init]
  -[GCGenericDeviceInputGamepadEventFieldModel initWithCoder:]
  -[GCGenericDeviceInputGamepadEventFieldModel sourceExpression]
  -[GCGenericDeviceInputGamepadEventFieldModel extendedIndex]


GCGenericDeviceInputGamepadEventFieldModelBuilder : NSObject
 @property  long long extendedIndex
 @property  GCGenericDeviceDataProcessorExpressionModel *sourceExpression

  // class methods
  +[GCGenericDeviceInputGamepadEventFieldModelBuilder modelClass]

  // instance methods
  -[GCGenericDeviceInputGamepadEventFieldModelBuilder reset]
  -[GCGenericDeviceInputGamepadEventFieldModelBuilder build]
  -[GCGenericDeviceInputGamepadEventFieldModelBuilder .cxx_destruct]
  -[GCGenericDeviceInputGamepadEventFieldModelBuilder isEqual:]
  -[GCGenericDeviceInputGamepadEventFieldModelBuilder init]
  -[GCGenericDeviceInputGamepadEventFieldModelBuilder sourceExpression]
  -[GCGenericDeviceInputGamepadEventFieldModelBuilder setSourceExpression:]
  -[GCGenericDeviceInputGamepadEventFieldModelBuilder initializeWithModel:]
  -[GCGenericDeviceInputGamepadEventFieldModelBuilder extendedIndex]
  -[GCGenericDeviceInputGamepadEventFieldModelBuilder setExtendedIndex:]


_GCGenericPhysicalDevicePending : NSObject <GCGenericDeviceDriverConfigurationServiceClientInterface>
 @property  GCFuture *device
 @property  _GCHIDServiceInfo *serviceInfo
 @property  _GCGenericDeviceManager *manager
 @property  <_GCDeviceDriverConnection> *driverConnection
 @property  <_GCDeviceDriverConnection> *filterConnection

  // instance methods
  -[_GCGenericPhysicalDevicePending dealloc]
  -[_GCGenericPhysicalDevicePending .cxx_destruct]
  -[_GCGenericPhysicalDevicePending device]
  -[_GCGenericPhysicalDevicePending manager]
  -[_GCGenericPhysicalDevicePending init]
  -[_GCGenericPhysicalDevicePending serviceInfo]
  -[_GCGenericPhysicalDevicePending setFilterConnection:]
  -[_GCGenericPhysicalDevicePending setDriverConnection:]
  -[_GCGenericPhysicalDevicePending initWithHIDService:manager:]
  -[_GCGenericPhysicalDevicePending driverConnection]
  -[_GCGenericPhysicalDevicePending setDriverConnection:invalidatingPrevious:]
  -[_GCGenericPhysicalDevicePending filterConnection]
  -[_GCGenericPhysicalDevicePending setFilterConnection:invalidatingPrevious:]
  -[_GCGenericPhysicalDevicePending _onqueue_createDeviceWithModel:service:]


_GCDeviceDBBundle : NSObject
 @property  NSString *identifier
 @property  GCVersion *version
 @property  NSArray *devices

  // instance methods
  -[_GCDeviceDBBundle identifier]
  -[_GCDeviceDBBundle devices]
  -[_GCDeviceDBBundle .cxx_destruct]
  -[_GCDeviceDBBundle version]
  -[_GCDeviceDBBundle redactedDescription]
  -[_GCDeviceDBBundle initWithBundle:error:]


GCIPCRemoteConnection : NSObject <GCIPCConnection>
 @property  NSXPCConnection *connection
 @property  NSArray *interruptionHandlers
 @property  NSArray *invalidationHandlers
 @property  NSObject<OS_os_log> *log
 @property  BOOL invalid
 @property  {?=[8I]} peerAuditToken
 @property  int peerAuditSessionIdentifier
 @property  int peerProcessIdentifier
 @property  unsigned int peerEffectiveUserIdentifier
 @property  unsigned int peerEffectiveGroupIdentifier
 @property  NSString *peerBundleIdentifier

  // instance methods
  -[GCIPCRemoteConnection initWithConnection:]
  -[GCIPCRemoteConnection remoteProxyWithErrorHandler:]
  -[GCIPCRemoteConnection suspend]
  -[GCIPCRemoteConnection setInvalidationHandlers:]
  -[GCIPCRemoteConnection isInvalid]
  -[GCIPCRemoteConnection interruptionHandlers]
  -[GCIPCRemoteConnection .cxx_destruct]
  -[GCIPCRemoteConnection resume]
  -[GCIPCRemoteConnection connection]
  -[GCIPCRemoteConnection synchronousRemoteProxyWithErrorHandler:]
  -[GCIPCRemoteConnection log]
  -[GCIPCRemoteConnection invalidationHandlers]
  -[GCIPCRemoteConnection remoteProxy]
  -[GCIPCRemoteConnection invalidate]
  -[GCIPCRemoteConnection redactedDescription]
  -[GCIPCRemoteConnection addInterruptionHandler:]
  -[GCIPCRemoteConnection isEqual:]
  -[GCIPCRemoteConnection addInvalidationHandler:]
  -[GCIPCRemoteConnection init]
  -[GCIPCRemoteConnection setConnection:]
  -[GCIPCRemoteConnection scheduleSendBarrierBlock:]
  -[GCIPCRemoteConnection peerValueForEntitlement:]
  -[GCIPCRemoteConnection peerAuditToken]
  -[GCIPCRemoteConnection peerAuditSessionIdentifier]
  -[GCIPCRemoteConnection peerProcessIdentifier]
  -[GCIPCRemoteConnection peerEffectiveUserIdentifier]
  -[GCIPCRemoteConnection peerEffectiveGroupIdentifier]
  -[GCIPCRemoteConnection peerBundleIdentifier]
  -[GCIPCRemoteConnection isEqualToConnection:]
  -[GCIPCRemoteConnection setInterruptionHandlers:]


_GCGenericDeviceDB : NSObject <_GCGenericDeviceDBServiceXPCInterface, _GCGenericDeviceDBService>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_GCGenericDeviceDB initWithProvider:]
  -[_GCGenericDeviceDB dealloc]
  -[_GCGenericDeviceDB .cxx_destruct]
  -[_GCGenericDeviceDB init]
  -[_GCGenericDeviceDB hasModelForDevice:]
  -[_GCGenericDeviceDB preparedModelForDevice:]
  -[_GCGenericDeviceDB configurationBundles]
  -[_GCGenericDeviceDB hasModelForDevice:reply:]
  -[_GCGenericDeviceDB preparedModelForDevice:reply:]
  -[_GCGenericDeviceDB _configurationBundlesDidChange:]
  -[_GCGenericDeviceDB _onqueue_updateConfigurationBundles]
  -[_GCGenericDeviceDB modelForDevice:]
  -[_GCGenericDeviceDB preparedModelForDevice:error:]


(GC)
	// instance methods
	-[(GC) gc_objectForKey:ofClass:]
	-[(GC) gc_objectForKey:ofClass:error:]
	-[(GC) gc_requiredObjectForKey:ofClass:]
	-[(GC) gc_requiredObjectForKey:ofClass:error:]
	-[(GC) gc_enumerateKeysAndObjectsUsingBlock:]
	-[(GC) gc_dictionaryByRemovingObjectsForKeys:]

NSException(GC)
	// class methods
	+[NSException(GC) gc_exceptionWithName:error:]
	+[NSException(GC) gc_exceptionWithError:]

	// instance methods
	-[NSException(GC) gc_error]

NSError(GCIPCErrorDomain)
	// class methods
	+[NSError(GCIPCErrorDomain) gc_IPCError:userInfo:]

	// instance methods
	-[NSError(GCIPCErrorDomain) gc_failingKeyPath]

HIDElement(Snapshot)
	// instance methods
	-[HIDElement(Snapshot) min]
	-[HIDElement(Snapshot) collectionType]
	-[HIDElement(Snapshot) elementCookie]
	-[HIDElement(Snapshot) debugDescription]
	-[HIDElement(Snapshot) valueForKey:]
	-[HIDElement(Snapshot) usageType]
	-[HIDElement(Snapshot) flags]
	-[HIDElement(Snapshot) valueRef]
	-[HIDElement(Snapshot) size]
	-[HIDElement(Snapshot) max]
	-[HIDElement(Snapshot) setName:]
	-[HIDElement(Snapshot) name]
	-[HIDElement(Snapshot) isRelative]
	-[HIDElement(Snapshot) isArray]
	-[HIDElement(Snapshot) valueForElementKey:]
	-[HIDElement(Snapshot) usageTypeIndex]
	-[HIDElement(Snapshot) scaledMin]
	-[HIDElement(Snapshot) scaledMax]
	-[HIDElement(Snapshot) reportCount]
	-[HIDElement(Snapshot) isWrapping]
	-[HIDElement(Snapshot) isNonLinear]
	-[HIDElement(Snapshot) hasPreferredState]
	-[HIDElement(Snapshot) hasNullState]
	-[HIDElement(Snapshot) gc_snapshot]
	-[HIDElement(Snapshot) calibrationMin]
	-[HIDElement(Snapshot) calibrationMax]
	-[HIDElement(Snapshot) setCalibrationMin:]
	-[HIDElement(Snapshot) setCalibrationMax:]

(GC)
	// instance methods
	-[(GC) gc_requiredObjectAtIndex:ofClass:]
	-[(GC) gc_requiredObjectAtIndex:ofClass:error:]
	-[(GC) gc_reversedArray]
	-[(GC) gc_arrayByTransformingElementsWithOptions:usingBlock:]
	-[(GC) gc_arrayByTransformingElementsUsingBlock:]
	-[(GC) gc_enumerateObjectsWithOptions:usingBlock:]
	-[(GC) gc_enumerateObjectsUsingBlock:]

<DEREK BUG Categories!>(GC)
	// instance methods
	-[<DEREK BUG Categories!>(GC) gc_transformElementsWithOptions:usingBlock:]
	-[<DEREK BUG Categories!>(GC) gc_transformElementsUsingBlock:]

(GC)
	// instance methods
	-[(GC) gc_setByRemovingObjectsFromSet:]

<DEREK BUG Categories!>(GC)
	// instance methods
	-[<DEREK BUG Categories!>(GC) gc_removeObjectsInArray:]

NSUserDefaults(GC)
HIDDevice(Snapshot)
	// instance methods
	-[HIDDevice(Snapshot) gc_snapshot]

01 00 0100 /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit: HIDDevice 
01 00 0100 /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit: HIDElement 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSComparisonPredicate 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSCompoundPredicate 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSEnumerator 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSExpression 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0400 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0400 /usr/lib/libobjc.A.dylib: Protocol 
