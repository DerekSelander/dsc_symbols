|| __DATA.__const_weak __ZTVN7AMSCore11IDeviceInfoE
|| __DATA.__const_weak __ZTVN7AMSCore11IHTTPCookieE
|| __DATA.__const_weak __ZTVN7AMSCore11TaskOptionsE
|| __DATA.__const_weak __ZTVN7AMSCore12IHTTPRequestE
|| __DATA.__const_weak __ZTVN7AMSCore13IDataProviderE
|| __DATA.__const_weak __ZTVN7AMSCore13IHTTPProviderE
|| __DATA.__const_weak __ZTVN7AMSCore13IHTTPResponseE
|| __DATA.__const_weak __ZTVN7AMSCore13IMediaAccountE
|| __DATA.__const_weak __ZTVN7AMSCore14IBagDataSourceE
|| __DATA.__const_weak __ZTVN7AMSCore14IiCloudAccountE
|| __DATA.__const_weak __ZTVN7AMSCore16ILoggingProviderE
|| __DATA.__const_weak __ZTVN7AMSCore17AccountPropertiesE
|| __DATA.__const_weak __ZTVN7AMSCore19BagFrozenDataSourceE
|| __DATA.__const_weak __ZTVN7AMSCore20BagFailingDataSourceE
|| __DATA.__const_weak __ZTVN7AMSCore21EncodeHTTPRequestTaskE
|| __DATA.__const_weak __ZTVN7AMSCore22ExecuteHTTPRequestTaskE
|| __DATA.__const_weak __ZTVN7AMSCore24EncodeHTTPRequestOptionsE
|| __DATA.__const_weak __ZTVN7AMSCore24ExecuteHTTPRequestResultE
|| __DATA.__const_weak __ZTVN7AMSCore25ExecuteHTTPRequestOptionsE
|| __DATA.__const_weak __ZTVN7AMSCore3BagE
|| __DATA.__const_weak __ZTVN7AMSCore5ErrorE
|| __DATA.__const_weak __ZTVN7AMSCore6IErrorE
|| __DATA.__const_weak __ZTVN7AMSCore7OptionsE
|| __DATA.__data _AMSAccountFlagAgeVerificationExpiration
|| __DATA.__data _AMSAccountFlagAutoPlay
|| __DATA.__data _AMSAccountFlagCanUseAppClips
|| __DATA.__data _AMSAccountFlagHasAgreedToAppClipTerms
|| __DATA.__data _AMSAccountFlagHasAgreedToTerms
|| __DATA.__data _AMSAccountFlagHasFamilySharingEnabled
|| __DATA.__data _AMSAccountFlagHasiCloudFamily
|| __DATA.__data _AMSAccountFlagIsDisabledAccount
|| __DATA.__data _AMSAccountFlagIsInBadCredit
|| __DATA.__data _AMSAccountFlagIsInRestrictedRegion
|| __DATA.__data _AMSAccountFlagIsManagedAccount
|| __DATA.__data _AMSAccountFlagIsRestrictedAccount
|| __DATA.__data _AMSAccountFlagPersonalization
|| __DATA.__data _AMSAccountFlagRetailDemo
|| __DATA.__data _AMSAccountFlagUnderThirteen
|| __DATA.__data _AMSAccountGrandSlamTokenIdentifierMultiUser
|| __DATA.__data _AMSAccountGrandSlamTokenIdentifierSettings
|| __DATA.__data _AMSAccountMediaTypeAppStore
|| __DATA.__data _AMSAccountMediaTypeAppStoreBeta
|| __DATA.__data _AMSAccountMediaTypeAppStoreSandbox
|| __DATA.__data _AMSAccountMediaTypeBooks
|| __DATA.__data _AMSAccountMediaTypeMusic
|| __DATA.__data _AMSAccountMediaTypePodcasts
|| __DATA.__data _AMSAccountMediaTypeProduction
|| __DATA.__data _AMSAccountMediaTypeTV
|| __DATA.__data _AMSAccountMediaTypeiTunes
|| __DATA.__data _AMSAccountMediaTypeiTunesU
|| __DATA.__data _AMSAppearanceFontSizeKey
|| __DATA.__data _AMSAppearanceFontSystemDesignKey
|| __DATA.__data _AMSAppearanceFontTextStyleKey
|| __DATA.__data _AMSAppearanceFontWeightKey
|| __DATA.__data _AMSDeviceOfferFollowUpIdentifierAppleMusic
|| __DATA.__data _AMSDeviceOfferFollowUpIdentifierAppleMusicAndiCloud
|| __DATA.__data _AMSDeviceOfferFollowUpIdentifieriCloud
|| __DATA.__data _AMSDeviceOfferIdentifierAppleCare
|| __DATA.__data _AMSDeviceOfferIdentifierAppleMusic
|| __DATA.__data _AMSDeviceOfferIdentifierTV
|| __DATA.__data _AMSDeviceOfferIdentifieriCloud
|| __DATA.__data __ZGVZN7AMSCore16ILoggingProvider12getBagConfigEvE6config
|| __DATA.__data __ZGVZN7AMSCore16ILoggingProvider19getNetworkingConfigEvE6config
|| __DATA.__data __ZZN7AMSCore16ILoggingProvider12getBagConfigEvE6config
|| __DATA.__data __ZZN7AMSCore16ILoggingProvider19getNetworkingConfigEvE6config
|| __DATA.__objc_data _OBJC_CLASS_$_AMSAgeVerificationPresentationResult
|| __DATA.__objc_data _OBJC_CLASS_$_AMSAgeVerificationRequiredResult
|| __DATA.__objc_data _OBJC_CLASS_$_AMSAgeVerificationTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSAttestation
|| __DATA.__objc_data _OBJC_CLASS_$_AMSAuthKitUpdateResult
|| __DATA.__objc_data _OBJC_CLASS_$_AMSAuthKitUpdateTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSAuthenticateOptions
|| __DATA.__objc_data _OBJC_CLASS_$_AMSAuthenticateTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSAuthorizeMachineTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSAutomaticDownloadKindsFetchTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSAutomaticDownloadKindsResult
|| __DATA.__objc_data _OBJC_CLASS_$_AMSAutomaticDownloadKindsSetTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSBiometricsDisableTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSBiometricsSecurityService
|| __DATA.__objc_data _OBJC_CLASS_$_AMSBiometricsSignatureRequest
|| __DATA.__objc_data _OBJC_CLASS_$_AMSBiometricsSignatureResult
|| __DATA.__objc_data _OBJC_CLASS_$_AMSBiometricsSignatureTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSBiometricsTokenUpdateTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSBuyParams
|| __DATA.__objc_data _OBJC_CLASS_$_AMSCampaignAttributionResult
|| __DATA.__objc_data _OBJC_CLASS_$_AMSCampaignAttributionTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSCardAuthorizationTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSCardEnrollment
|| __DATA.__objc_data _OBJC_CLASS_$_AMSCardEnrollmentEligibilityTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSCardEnrollmentPaymentSessionTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSCardEnrollmentVerificationTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSCardMetadataRegistrationResult
|| __DATA.__objc_data _OBJC_CLASS_$_AMSCardRegistrationResult
|| __DATA.__objc_data _OBJC_CLASS_$_AMSCardRegistrationTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSCarrierLinkParams
|| __DATA.__objc_data _OBJC_CLASS_$_AMSCarrierLinkResult
|| __DATA.__objc_data _OBJC_CLASS_$_AMSCarrierLinkTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSCarrierOfferRegistrationTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSClipMediaTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSCommandLineDialogTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSContentInfo
|| __DATA.__objc_data _OBJC_CLASS_$_AMSContentRating
|| __DATA.__objc_data _OBJC_CLASS_$_AMSCookieDatabase
|| __DATA.__objc_data _OBJC_CLASS_$_AMSDaemonConnectionInterface
|| __DATA.__objc_data _OBJC_CLASS_$_AMSDataMigrator
|| __DATA.__objc_data _OBJC_CLASS_$_AMSDataMigratorOptions
|| __DATA.__objc_data _OBJC_CLASS_$_AMSDelegateAuthenticateRequest
|| __DATA.__objc_data _OBJC_CLASS_$_AMSDelegateAuthenticateResult
|| __DATA.__objc_data _OBJC_CLASS_$_AMSDelegatePurchaseRequest
|| __DATA.__objc_data _OBJC_CLASS_$_AMSDelegatePurchaseResult
|| __DATA.__objc_data _OBJC_CLASS_$_AMSDeviceMessenger
|| __DATA.__objc_data _OBJC_CLASS_$_AMSDeviceMessengerFilter
|| __DATA.__objc_data _OBJC_CLASS_$_AMSDeviceOffer
|| __DATA.__objc_data _OBJC_CLASS_$_AMSDeviceOfferRegistrationGroup
|| __DATA.__objc_data _OBJC_CLASS_$_AMSDeviceOfferRegistrationItem
|| __DATA.__objc_data _OBJC_CLASS_$_AMSDeviceOfferRegistrationTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSDialog
|| __DATA.__objc_data _OBJC_CLASS_$_AMSDialogAction
|| __DATA.__objc_data _OBJC_CLASS_$_AMSDialogButton
|| __DATA.__objc_data _OBJC_CLASS_$_AMSDialogTextField
|| __DATA.__objc_data _OBJC_CLASS_$_AMSEngagementExtensionConnection
|| __DATA.__objc_data _OBJC_CLASS_$_AMSEngagementMessageAction
|| __DATA.__objc_data _OBJC_CLASS_$_AMSEngagementMessageEvent
|| __DATA.__objc_data _OBJC_CLASS_$_AMSEngagementMessageEventResponse
|| __DATA.__objc_data _OBJC_CLASS_$_AMSEngagementMessageEventServiceResponse
|| __DATA.__objc_data _OBJC_CLASS_$_AMSEngagementMessageRequest
|| __DATA.__objc_data _OBJC_CLASS_$_AMSEngagementPlacementInfo
|| __DATA.__objc_data _OBJC_CLASS_$_AMSFDSOptions
|| __DATA.__objc_data _OBJC_CLASS_$_AMSFDSRequest
|| __DATA.__objc_data _OBJC_CLASS_$_AMSFDSResult
|| __DATA.__objc_data _OBJC_CLASS_$_AMSFailingMockBagBuilder
|| __DATA.__objc_data _OBJC_CLASS_$_AMSFamilyAccountPair
|| __DATA.__objc_data _OBJC_CLASS_$_AMSFamilyContentDeletionEvent
|| __DATA.__objc_data _OBJC_CLASS_$_AMSFamilyInfoLookupResult
|| __DATA.__objc_data _OBJC_CLASS_$_AMSFamilyInfoLookupTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSFamilyMember
|| __DATA.__objc_data _OBJC_CLASS_$_AMSFeatureFlag
|| __DATA.__objc_data _OBJC_CLASS_$_AMSFeatureFlagController
|| __DATA.__objc_data _OBJC_CLASS_$_AMSFeatureFlagGroup
|| __DATA.__objc_data _OBJC_CLASS_$_AMSFeatureFlagITFE
|| __DATA.__objc_data _OBJC_CLASS_$_AMSFeatureFlagRemote
|| __DATA.__objc_data _OBJC_CLASS_$_AMSFeatureFlagTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSFollowUp
|| __DATA.__objc_data _OBJC_CLASS_$_AMSFollowUpAction
|| __DATA.__objc_data _OBJC_CLASS_$_AMSFollowUpItem
|| __DATA.__objc_data _OBJC_CLASS_$_AMSFraudReportResponse
|| __DATA.__objc_data _OBJC_CLASS_$_AMSHandleDialogResultTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSKeybag
|| __DATA.__objc_data _OBJC_CLASS_$_AMSKeychain
|| __DATA.__objc_data _OBJC_CLASS_$_AMSKeychainOptions
|| __DATA.__objc_data _OBJC_CLASS_$_AMSLocalizations
|| __DATA.__objc_data _OBJC_CLASS_$_AMSLookupItem
|| __DATA.__objc_data _OBJC_CLASS_$_AMSLookupItemArtwork
|| __DATA.__objc_data _OBJC_CLASS_$_AMSLookupItemArtworkColor
|| __DATA.__objc_data _OBJC_CLASS_$_AMSLookupItemOffer
|| __DATA.__objc_data _OBJC_CLASS_$_AMSLookupResult
|| __DATA.__objc_data _OBJC_CLASS_$_AMSMarketingItem
|| __DATA.__objc_data _OBJC_CLASS_$_AMSMarketingItemAction
|| __DATA.__objc_data _OBJC_CLASS_$_AMSMarketingItemActionComponent
|| __DATA.__objc_data _OBJC_CLASS_$_AMSMarketingItemParser
|| __DATA.__objc_data _OBJC_CLASS_$_AMSMarketingItemTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSMediaArtwork
|| __DATA.__objc_data _OBJC_CLASS_$_AMSMediaResponseDecoder
|| __DATA.__objc_data _OBJC_CLASS_$_AMSMediaResult
|| __DATA.__objc_data _OBJC_CLASS_$_AMSMediaVideo
|| __DATA.__objc_data _OBJC_CLASS_$_AMSMercuryCacheFetchTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSMescalAccountPrimeSession
|| __DATA.__objc_data _OBJC_CLASS_$_AMSMetricsClientIdentifier
|| __DATA.__objc_data _OBJC_CLASS_$_AMSMetricsIdentifier
|| __DATA.__objc_data _OBJC_CLASS_$_AMSMetricsIdentifierCloudDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_AMSMetricsIdentifierKey
|| __DATA.__objc_data _OBJC_CLASS_$_AMSMetricsIdentifierStore
|| __DATA.__objc_data _OBJC_CLASS_$_AMSMockBagBuilder
|| __DATA.__objc_data _OBJC_CLASS_$_AMSMockPurchaseQueue
|| __DATA.__objc_data _OBJC_CLASS_$_AMSMockURLOverride
|| __DATA.__objc_data _OBJC_CLASS_$_AMSMockURLResponse
|| __DATA.__objc_data _OBJC_CLASS_$_AMSMultiUserService
|| __DATA.__objc_data _OBJC_CLASS_$_AMSNetworkConstraints
|| __DATA.__objc_data _OBJC_CLASS_$_AMSNotificationSettingsItem
|| __DATA.__objc_data _OBJC_CLASS_$_AMSNotificationSettingsResult
|| __DATA.__objc_data _OBJC_CLASS_$_AMSNotificationSettingsSection
|| __DATA.__objc_data _OBJC_CLASS_$_AMSNotificationSettingsTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSODIAdditionalAttributes
|| __DATA.__objc_data _OBJC_CLASS_$_AMSODIAssessment
|| __DATA.__objc_data _OBJC_CLASS_$_AMSODISession
|| __DATA.__objc_data _OBJC_CLASS_$_AMSOpenURL
|| __DATA.__objc_data _OBJC_CLASS_$_AMSOperation
|| __DATA.__objc_data _OBJC_CLASS_$_AMSOptional
|| __DATA.__objc_data _OBJC_CLASS_$_AMSPair
|| __DATA.__objc_data _OBJC_CLASS_$_AMSPaymentSetupFeatureVerification
|| __DATA.__objc_data _OBJC_CLASS_$_AMSPurchase
|| __DATA.__objc_data _OBJC_CLASS_$_AMSPurchaseQueueConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_AMSPurchaseResult
|| __DATA.__objc_data _OBJC_CLASS_$_AMSPurchaseSIWA
|| __DATA.__objc_data _OBJC_CLASS_$_AMSPurchaseSIWAAuthorizationResult
|| __DATA.__objc_data _OBJC_CLASS_$_AMSPurchaseSIWAResult
|| __DATA.__objc_data _OBJC_CLASS_$_AMSPurchaseSIWATask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSPurchaseTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSPushNotificationService
|| __DATA.__objc_data _OBJC_CLASS_$_AMSPushPayload
|| __DATA.__objc_data _OBJC_CLASS_$_AMSRatingSystem
|| __DATA.__objc_data _OBJC_CLASS_$_AMSRatingsProviderResult
|| __DATA.__objc_data _OBJC_CLASS_$_AMSRatingsProviderTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSRatingsStoreFront
|| __DATA.__objc_data _OBJC_CLASS_$_AMSRatingsStorefrontResult
|| __DATA.__objc_data _OBJC_CLASS_$_AMSRatingsStorefrontTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSRemoteNotification
|| __DATA.__objc_data _OBJC_CLASS_$_AMSRenewAccountCredentialsFollowUpItem
|| __DATA.__objc_data _OBJC_CLASS_$_AMSRestrictions
|| __DATA.__objc_data _OBJC_CLASS_$_AMSServerDataCacheService
|| __DATA.__objc_data _OBJC_CLASS_$_AMSSetDemoAccountTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSSharedStoreReview
|| __DATA.__objc_data _OBJC_CLASS_$_AMSSignInContext
|| __DATA.__objc_data _OBJC_CLASS_$_AMSSignOutTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSSnapshotBag
|| __DATA.__objc_data _OBJC_CLASS_$_AMSSnapshotBagBuilder
|| __DATA.__objc_data _OBJC_CLASS_$_AMSStreamHTTPArchiveEntryController
|| __DATA.__objc_data _OBJC_CLASS_$_AMSSubscriptionBag
|| __DATA.__objc_data _OBJC_CLASS_$_AMSSubscriptionEntitlement
|| __DATA.__objc_data _OBJC_CLASS_$_AMSSubscriptionEntitlementsResult
|| __DATA.__objc_data _OBJC_CLASS_$_AMSSubscriptionEntitlementsTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSSyncPasswordSettingsResult
|| __DATA.__objc_data _OBJC_CLASS_$_AMSSyncPasswordSettingsTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSSystemAlertDialogTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSSystemEngagementTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSURLSecurityPolicy
|| __DATA.__objc_data _OBJC_CLASS_$_AMSUniqueExecutionQueue
|| __DATA.__objc_data _OBJC_CLASS_$_AMSUniversalLinks
|| __DATA.__objc_data _OBJC_CLASS_$_AMSUniversalLinksUpdateResult
|| __DATA.__objc_data _OBJC_CLASS_$_AMSUserNotification
|| __DATA.__objc_data _OBJC_CLASS_$_AMSUserNotificationAction
|| __DATA.__objc_data _OBJC_CLASS_$_AMSUserNotificationAuthorizationOptions
|| __DATA.__objc_data _OBJC_CLASS_$_AMSUserNotificationAuthorizationResult
|| __DATA.__objc_data _OBJC_CLASS_$_AMSUserNotificationAuthorizationTask
|| __DATA.__objc_data _OBJC_CLASS_$_AMSUserNotificationCenter
|| __DATA.__objc_data _OBJC_CLASS_$_AMSUserNotificationMetricsEvent
|| __DATA.__objc_data _OBJC_CLASS_$_AMSXDDevice
|| __DATA.__objc_data _OBJC_CLASS_$_AMSXDMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSAgeVerificationPresentationResult
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSAgeVerificationRequiredResult
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSAgeVerificationTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSAttestation
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSAuthKitUpdateResult
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSAuthKitUpdateTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSAuthenticateOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSAuthenticateTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSAuthorizeMachineTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSAutomaticDownloadKindsFetchTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSAutomaticDownloadKindsResult
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSAutomaticDownloadKindsSetTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSBiometricsDisableTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSBiometricsSecurityService
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSBiometricsSignatureRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSBiometricsSignatureResult
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSBiometricsSignatureTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSBiometricsTokenUpdateTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSBuyParams
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSCampaignAttributionResult
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSCampaignAttributionTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSCardAuthorizationTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSCardEnrollment
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSCardEnrollmentEligibilityTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSCardEnrollmentPaymentSessionTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSCardEnrollmentVerificationTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSCardMetadataRegistrationResult
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSCardRegistrationResult
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSCardRegistrationTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSCarrierLinkParams
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSCarrierLinkResult
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSCarrierLinkTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSCarrierOfferRegistrationTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSClipMediaTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSCommandLineDialogTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSContentInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSContentRating
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSCookieDatabase
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSDaemonConnectionInterface
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSDataMigrator
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSDataMigratorOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSDelegateAuthenticateRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSDelegateAuthenticateResult
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSDelegatePurchaseRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSDelegatePurchaseResult
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSDeviceMessenger
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSDeviceMessengerFilter
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSDeviceOffer
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSDeviceOfferRegistrationGroup
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSDeviceOfferRegistrationItem
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSDeviceOfferRegistrationTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSDialog
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSDialogAction
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSDialogButton
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSDialogTextField
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSEngagementExtensionConnection
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSEngagementMessageAction
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSEngagementMessageEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSEngagementMessageEventResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSEngagementMessageEventServiceResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSEngagementMessageRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSEngagementPlacementInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSFDSOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSFDSRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSFDSResult
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSFailingMockBagBuilder
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSFamilyAccountPair
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSFamilyContentDeletionEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSFamilyInfoLookupResult
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSFamilyInfoLookupTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSFamilyMember
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSFeatureFlag
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSFeatureFlagController
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSFeatureFlagGroup
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSFeatureFlagITFE
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSFeatureFlagRemote
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSFeatureFlagTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSFollowUp
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSFollowUpAction
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSFollowUpItem
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSFraudReportResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSHandleDialogResultTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSKeybag
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSKeychain
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSKeychainOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSLocalizations
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSLookupItem
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSLookupItemArtwork
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSLookupItemArtworkColor
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSLookupItemOffer
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSLookupResult
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSMarketingItem
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSMarketingItemAction
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSMarketingItemActionComponent
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSMarketingItemParser
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSMarketingItemTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSMediaArtwork
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSMediaResponseDecoder
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSMediaResult
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSMediaVideo
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSMercuryCacheFetchTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSMescalAccountPrimeSession
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSMetricsClientIdentifier
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSMetricsIdentifier
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSMetricsIdentifierCloudDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSMetricsIdentifierKey
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSMetricsIdentifierStore
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSMockBagBuilder
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSMockPurchaseQueue
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSMockURLOverride
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSMockURLResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSMultiUserService
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSMutableLazyPromise
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSNetworkConstraints
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSNotificationSettingsItem
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSNotificationSettingsResult
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSNotificationSettingsSection
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSNotificationSettingsTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSODIAdditionalAttributes
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSODIAssessment
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSODISession
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSOpenURL
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSOptional
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSPair
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSPaymentSetupFeatureVerification
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSPurchase
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSPurchaseQueueConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSPurchaseResult
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSPurchaseSIWA
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSPurchaseSIWAAuthorizationResult
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSPurchaseSIWAResult
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSPurchaseSIWATask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSPurchaseTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSPushNotificationService
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSPushPayload
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSRatingSystem
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSRatingsProviderResult
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSRatingsProviderTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSRatingsStoreFront
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSRatingsStorefrontResult
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSRatingsStorefrontTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSRemoteNotification
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSRenewAccountCredentialsFollowUpItem
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSRestrictions
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSServerDataCacheService
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSSetDemoAccountTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSSharedStoreReview
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSSignInContext
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSSignOutTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSSnapshotBag
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSSnapshotBagBuilder
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSStreamHTTPArchiveEntryController
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSSubscriptionBag
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSSubscriptionEntitlement
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSSubscriptionEntitlementsResult
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSSubscriptionEntitlementsTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSSyncPasswordSettingsResult
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSSyncPasswordSettingsTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSSystemAlertDialogTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSSystemEngagementTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSURLSecurityPolicy
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSUniqueExecutionQueue
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSUniversalLinks
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSUniversalLinksUpdateResult
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSUserNotification
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSUserNotificationAction
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSUserNotificationAuthorizationOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSUserNotificationAuthorizationResult
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSUserNotificationAuthorizationTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSUserNotificationCenter
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSUserNotificationMetricsEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSXDDevice
|| __DATA.__objc_data _OBJC_METACLASS_$_AMSXDMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$_AMSPurchaseQueue._session
|| __DATA.__objc_ivar _OBJC_IVAR_$_AMSURLSession._configuration
|| __DATA.__objc_ivar _OBJC_IVAR_$_AMSURLSession._delegateProxy
|| __DATA.__objc_ivar _OBJC_IVAR_$_AMSURLSession._delegateQueue
|| __DATA.__objc_ivar _OBJC_IVAR_$_AMSURLSession._protocolHandler
|| __DATA.__objc_ivar _OBJC_IVAR_$_AMSURLSession._responseDecoder
|| __DATA.__objc_ivar _OBJC_IVAR_$_AMSURLSession._session
|| __DATA_CONST.__const _AMSAccountCookiesChangedNotificationName
|| __DATA_CONST.__const _AMSAuthenticateErrorDialogKey
|| __DATA_CONST.__const _AMSAuthenticateOptionsCreateAccountQueryParamsKey
|| __DATA_CONST.__const _AMSAuthenticateOptionsForceSyncToPairedWatchKey
|| __DATA_CONST.__const _AMSAuthenticateOptionsLogKeyKey
|| __DATA_CONST.__const _AMSAuthenticateOptionsUserAgentKey
|| __DATA_CONST.__const _AMSAuthenticateRequestUserInfoKeyServerPayload
|| __DATA_CONST.__const _AMSBagChangedNotification
|| __DATA_CONST.__const _AMSBagChangedNotificationUserInfoChangedKeys
|| __DATA_CONST.__const _AMSBagChangedNotificationUserInfoProfile
|| __DATA_CONST.__const _AMSBagChangedNotificationUserInfoProfileVersion
|| __DATA_CONST.__const _AMSBagInvalidatedNotification
|| __DATA_CONST.__const _AMSBagKeyManageAccountURL
|| __DATA_CONST.__const _AMSBagKeyPaymentInformationURL
|| __DATA_CONST.__const _AMSBagKeyPurchaseHistoryURL
|| __DATA_CONST.__const _AMSBagKeyShowSubscriptionsURL
|| __DATA_CONST.__const _AMSBuyParamPropertyAffiliateId
|| __DATA_CONST.__const _AMSBuyParamPropertyAppExtVrsId
|| __DATA_CONST.__const _AMSBuyParamPropertyAsn
|| __DATA_CONST.__const _AMSBuyParamPropertyBundleId
|| __DATA_CONST.__const _AMSBuyParamPropertyBundleVersion
|| __DATA_CONST.__const _AMSBuyParamPropertyBuyType
|| __DATA_CONST.__const _AMSBuyParamPropertyClientCorrelationKey
|| __DATA_CONST.__const _AMSBuyParamPropertyDeviceFraudScore
|| __DATA_CONST.__const _AMSBuyParamPropertyDeviceFraudScoreV2
|| __DATA_CONST.__const _AMSBuyParamPropertyDisableTouchId
|| __DATA_CONST.__const _AMSBuyParamPropertyDsid
|| __DATA_CONST.__const _AMSBuyParamPropertyExistingExternalVersionId
|| __DATA_CONST.__const _AMSBuyParamPropertyExternalVersionId
|| __DATA_CONST.__const _AMSBuyParamPropertyGUID
|| __DATA_CONST.__const _AMSBuyParamPropertyHasBeenAuthedForBuy
|| __DATA_CONST.__const _AMSBuyParamPropertyHasConfirmedPaymentSheet
|| __DATA_CONST.__const _AMSBuyParamPropertyICloudBackupEnabled
|| __DATA_CONST.__const _AMSBuyParamPropertyInstalledSoftwareRating
|| __DATA_CONST.__const _AMSBuyParamPropertyIsBackground
|| __DATA_CONST.__const _AMSBuyParamPropertyItemId
|| __DATA_CONST.__const _AMSBuyParamPropertyKbsync
|| __DATA_CONST.__const _AMSBuyParamPropertyOwnerDsid
|| __DATA_CONST.__const _AMSBuyParamPropertyPaymentObject
|| __DATA_CONST.__const _AMSBuyParamPropertyPaymentServicesURL
|| __DATA_CONST.__const _AMSBuyParamPropertyPricingParameters
|| __DATA_CONST.__const _AMSBuyParamPropertyRequestType
|| __DATA_CONST.__const _AMSBuyParamPropertySerialNumber
|| __DATA_CONST.__const _AMSBuyParamPropertySinfData
|| __DATA_CONST.__const _AMSBuyParamPropertySoftwareExternalVersionId
|| __DATA_CONST.__const _AMSBuyParamPropertyVendorID
|| __DATA_CONST.__const _AMSDemoAccountIdentifier
|| __DATA_CONST.__const _AMSDeviceOffersChangedNotification
|| __DATA_CONST.__const _AMSDialogRequestUserInfoKeyServerPayload
|| __DATA_CONST.__const _AMSDialogResultDismissIdentifier
|| __DATA_CONST.__const _AMSDividerKey
|| __DATA_CONST.__const _AMSEngagementServiceName
|| __DATA_CONST.__const _AMSEngagementUserInfoKeyBuyParams
|| __DATA_CONST.__const _AMSErrorDomain
|| __DATA_CONST.__const _AMSErrorUserInfoKeyAnisetteErrorCode
|| __DATA_CONST.__const _AMSErrorUserInfoKeyContentType
|| __DATA_CONST.__const _AMSErrorUserInfoKeyCryptoErrorCode
|| __DATA_CONST.__const _AMSErrorUserInfoKeyEngagementPresented
|| __DATA_CONST.__const _AMSErrorUserInfoKeyServerAllowed
|| __DATA_CONST.__const _AMSErrorUserInfoKeyServerErrorCode
|| __DATA_CONST.__const _AMSErrorUserInfoKeyServerPayload
|| __DATA_CONST.__const _AMSErrorUserInfoKeyStatusCode
|| __DATA_CONST.__const _AMSErrorUserInfoKeyURL
|| __DATA_CONST.__const _AMSFamilyContentDeletionNotification
|| __DATA_CONST.__const _AMSFeatureFlagRemoteDomain
|| __DATA_CONST.__const _AMSFollowUpClientIdentifier
|| __DATA_CONST.__const _AMSFollowUpIdentifierRenewCredentials
|| __DATA_CONST.__const _AMSFollowUpItemUserInfoMetrics
|| __DATA_CONST.__const _AMSFollowUpItemUserInfoPriority
|| __DATA_CONST.__const _AMSHTTPHeaderABPayload
|| __DATA_CONST.__const _AMSHTTPHeaderAPSDeliveryType
|| __DATA_CONST.__const _AMSHTTPHeaderAbsintheAction
|| __DATA_CONST.__const _AMSHTTPHeaderAbsintheSignature
|| __DATA_CONST.__const _AMSHTTPHeaderAbsintheSrv
|| __DATA_CONST.__const _AMSHTTPHeaderAccept
|| __DATA_CONST.__const _AMSHTTPHeaderAcceptLanguage
|| __DATA_CONST.__const _AMSHTTPHeaderAltDSID
|| __DATA_CONST.__const _AMSHTTPHeaderAppleTimingApp
|| __DATA_CONST.__const _AMSHTTPHeaderApplicationSite
|| __DATA_CONST.__const _AMSHTTPHeaderAuthorization
|| __DATA_CONST.__const _AMSHTTPHeaderBuyProductWillRequireATB
|| __DATA_CONST.__const _AMSHTTPHeaderCacheControl
|| __DATA_CONST.__const _AMSHTTPHeaderCachePolicy
|| __DATA_CONST.__const _AMSHTTPHeaderCanaryIdentifier
|| __DATA_CONST.__const _AMSHTTPHeaderClientApplication
|| __DATA_CONST.__const _AMSHTTPHeaderClientVersions
|| __DATA_CONST.__const _AMSHTTPHeaderConnectionType
|| __DATA_CONST.__const _AMSHTTPHeaderContentEncoding
|| __DATA_CONST.__const _AMSHTTPHeaderContentLength
|| __DATA_CONST.__const _AMSHTTPHeaderContentType
|| __DATA_CONST.__const _AMSHTTPHeaderCookie
|| __DATA_CONST.__const _AMSHTTPHeaderCorrelationId
|| __DATA_CONST.__const _AMSHTTPHeaderDSID
|| __DATA_CONST.__const _AMSHTTPHeaderDate
|| __DATA_CONST.__const _AMSHTTPHeaderDelegateAuthChallenge
|| __DATA_CONST.__const _AMSHTTPHeaderDelegateAuthToken
|| __DATA_CONST.__const _AMSHTTPHeaderEdgeNodeCacheStatus
|| __DATA_CONST.__const _AMSHTTPHeaderExpires
|| __DATA_CONST.__const _AMSHTTPHeaderGSToken
|| __DATA_CONST.__const _AMSHTTPHeaderGSTokenIdentifier
|| __DATA_CONST.__const _AMSHTTPHeaderGuid
|| __DATA_CONST.__const _AMSHTTPHeaderIgnoreAccountConversion
|| __DATA_CONST.__const _AMSHTTPHeaderIssuingProcess
|| __DATA_CONST.__const _AMSHTTPHeaderLocation
|| __DATA_CONST.__const _AMSHTTPHeaderMMeClientInfo
|| __DATA_CONST.__const _AMSHTTPHeaderMMeDeviceId
|| __DATA_CONST.__const _AMSHTTPHeaderPartnerHeader
|| __DATA_CONST.__const _AMSHTTPHeaderPurchaseUUIDHeader
|| __DATA_CONST.__const _AMSHTTPHeaderRequestingProcess
|| __DATA_CONST.__const _AMSHTTPHeaderRestrictions
|| __DATA_CONST.__const _AMSHTTPHeaderSetBuyProductWillRequireATB
|| __DATA_CONST.__const _AMSHTTPHeaderSetCookie
|| __DATA_CONST.__const _AMSHTTPHeaderSetGlobalCookie
|| __DATA_CONST.__const _AMSHTTPHeaderSetStoreFront
|| __DATA_CONST.__const _AMSHTTPHeaderSetUserCookies
|| __DATA_CONST.__const _AMSHTTPHeaderStoreFront
|| __DATA_CONST.__const _AMSHTTPHeaderTimezoneOffset
|| __DATA_CONST.__const _AMSHTTPHeaderTouchIDAction
|| __DATA_CONST.__const _AMSHTTPHeaderTouchIDChallenge
|| __DATA_CONST.__const _AMSHTTPHeaderTouchIDPublicKey
|| __DATA_CONST.__const _AMSHTTPHeaderTouchIDPublicKeyIdentifier
|| __DATA_CONST.__const _AMSHTTPHeaderTouchIDSignature
|| __DATA_CONST.__const _AMSHTTPHeaderTouchIDSignatureVersion
|| __DATA_CONST.__const _AMSHTTPHeaderTouchIDState
|| __DATA_CONST.__const _AMSHTTPHeaderUserAgent
|| __DATA_CONST.__const _AMSHTTPHeaderWT
|| __DATA_CONST.__const _AMSHTTPHeaderXAppleAMD
|| __DATA_CONST.__const _AMSHTTPHeaderXAppleAMDAction
|| __DATA_CONST.__const _AMSHTTPHeaderXAppleAMDData
|| __DATA_CONST.__const _AMSHTTPHeaderXAppleAMDM
|| __DATA_CONST.__const _AMSHTTPHeaderXAppleActionSignature
|| __DATA_CONST.__const _AMSHTTPHeaderXAppleAllowAuthTypes
|| __DATA_CONST.__const _AMSHTTPHeaderXAppleAuthServices
|| __DATA_CONST.__const _AMSHTTPHeaderXAppleMD
|| __DATA_CONST.__const _AMSHTTPHeaderXAppleMDAction
|| __DATA_CONST.__const _AMSHTTPHeaderXAppleMDData
|| __DATA_CONST.__const _AMSHTTPHeaderXAppleMDM
|| __DATA_CONST.__const _AMSHTTPHeaderXFSRAnonymousId
|| __DATA_CONST.__const _AMSHTTPHeaderXFSRCallback
|| __DATA_CONST.__const _AMSHTTPHeaderXFSRData
|| __DATA_CONST.__const _AMSHTTPHeaderXFSRKeyId
|| __DATA_CONST.__const _AMSHTTPHeaderXFSRNameSpace
|| __DATA_CONST.__const _AMSHTTPHeaderXFSRSignature
|| __DATA_CONST.__const _AMSHTTPHeaderXFSRToken
|| __DATA_CONST.__const _AMSHTTPHeaderXFSRTransactionId
|| __DATA_CONST.__const _AMSHTTPHeaderXGroupDSIDs
|| __DATA_CONST.__const _AMSHTTPHeaderXToken
|| __DATA_CONST.__const _AMSHTTPHeaderXXDC
|| __DATA_CONST.__const _AMSHTTPHeaderiCloudDSID
|| __DATA_CONST.__const _AMSLastConnectionReportChangedNotification
|| __DATA_CONST.__const _AMSLocalAccountIdentifier
|| __DATA_CONST.__const _AMSLogSubsystemAppleMediaServices
|| __DATA_CONST.__const _AMSLookupItemArtworkColorKindBackground
|| __DATA_CONST.__const _AMSLookupItemArtworkColorKindText1
|| __DATA_CONST.__const _AMSLookupItemArtworkColorKindText2
|| __DATA_CONST.__const _AMSLookupItemArtworkColorKindText3
|| __DATA_CONST.__const _AMSLookupItemArtworkColorKindText4
|| __DATA_CONST.__const _AMSLookupItemArtworkCropStyleBoundedBox
|| __DATA_CONST.__const _AMSLookupItemArtworkCropStyleConstrainedHeight
|| __DATA_CONST.__const _AMSLookupItemArtworkCropStyleConstrainedWidth
|| __DATA_CONST.__const _AMSLookupItemArtworkCropStyleFCCrop270
|| __DATA_CONST.__const _AMSLookupItemArtworkCropStyleFCCrop44
|| __DATA_CONST.__const _AMSLookupItemArtworkCropStyleSourceSize
|| __DATA_CONST.__const _AMSLookupItemArtworkCropStyleSpecificRectangle
|| __DATA_CONST.__const _AMSLookupItemArtworkCropStyleSquareCenterCrop
|| __DATA_CONST.__const _AMSLookupItemArtworkFormatJPG
|| __DATA_CONST.__const _AMSLookupItemArtworkFormatPNG
|| __DATA_CONST.__const _AMSLookupItemOfferSubscriptionTypePodcast
|| __DATA_CONST.__const _AMSLookupItemOfferTextTypeDownloaded
|| __DATA_CONST.__const _AMSLookupItemOfferTextTypeDownloading
|| __DATA_CONST.__const _AMSLookupItemOfferTextTypeLong
|| __DATA_CONST.__const _AMSLookupItemOfferTextTypeMedium
|| __DATA_CONST.__const _AMSLookupItemOfferTextTypeShort
|| __DATA_CONST.__const _AMSLookupKeyProfileExternalVersionId
|| __DATA_CONST.__const _AMSLookupKeyProfileLockup
|| __DATA_CONST.__const _AMSLookupKeyProfilePlay
|| __DATA_CONST.__const _AMSLookupKeyProfilePlaylistProduct
|| __DATA_CONST.__const _AMSLookupKeyProfileProduct
|| __DATA_CONST.__const _AMSLookupKeyProfileURL
|| __DATA_CONST.__const _AMSLookupPropertyAdvisories
|| __DATA_CONST.__const _AMSLookupPropertyArtistName
|| __DATA_CONST.__const _AMSLookupPropertyArtistURL
|| __DATA_CONST.__const _AMSLookupPropertyArtwork
|| __DATA_CONST.__const _AMSLookupPropertyBundleIdentifier
|| __DATA_CONST.__const _AMSLookupPropertyContentRating
|| __DATA_CONST.__const _AMSLookupPropertyContentRatingName
|| __DATA_CONST.__const _AMSLookupPropertyCopyright
|| __DATA_CONST.__const _AMSLookupPropertyDescription
|| __DATA_CONST.__const _AMSLookupPropertyDescriptionStandard
|| __DATA_CONST.__const _AMSLookupPropertyDisplayName
|| __DATA_CONST.__const _AMSLookupPropertyGenreNames
|| __DATA_CONST.__const _AMSLookupPropertyHasInAppPurchases
|| __DATA_CONST.__const _AMSLookupPropertyIsAuthenticated
|| __DATA_CONST.__const _AMSLookupPropertyIsGameCenter
|| __DATA_CONST.__const _AMSLookupPropertyIsPOIBased
|| __DATA_CONST.__const _AMSLookupPropertyItemIdentifier
|| __DATA_CONST.__const _AMSLookupPropertyKind
|| __DATA_CONST.__const _AMSLookupPropertyLicenseAgreementURL
|| __DATA_CONST.__const _AMSLookupPropertyName
|| __DATA_CONST.__const _AMSLookupPropertyNewsstandArtwork
|| __DATA_CONST.__const _AMSLookupPropertyOfferName
|| __DATA_CONST.__const _AMSLookupPropertyOffers
|| __DATA_CONST.__const _AMSLookupPropertyPrivacyPolicyURL
|| __DATA_CONST.__const _AMSLookupPropertyProductURL
|| __DATA_CONST.__const _AMSLookupPropertyReleaseDate
|| __DATA_CONST.__const _AMSLookupPropertyRequiredCapabilities
|| __DATA_CONST.__const _AMSLookupPropertyRequirementsDescription
|| __DATA_CONST.__const _AMSLookupPropertyResults
|| __DATA_CONST.__const _AMSLookupPropertyScreenshotTypeIPad
|| __DATA_CONST.__const _AMSLookupPropertyScreenshotTypeIPhone
|| __DATA_CONST.__const _AMSLookupPropertyScreenshotTypeIPhone5
|| __DATA_CONST.__const _AMSLookupPropertyScreenshots
|| __DATA_CONST.__const _AMSLookupPropertyShortProductURL
|| __DATA_CONST.__const _AMSLookupPropertySoftwareInfo
|| __DATA_CONST.__const _AMSLookupPropertyStandardNotes
|| __DATA_CONST.__const _AMSLookupPropertyStatus
|| __DATA_CONST.__const _AMSLookupPropertyStoreNotes
|| __DATA_CONST.__const _AMSLookupPropertySupportURL
|| __DATA_CONST.__const _AMSLookupPropertyUserRatingCount
|| __DATA_CONST.__const _AMSLookupPropertyUserRatingCountCurrentVersion
|| __DATA_CONST.__const _AMSLookupPropertyUserRatingInfo
|| __DATA_CONST.__const _AMSLookupPropertyUserRatingValue
|| __DATA_CONST.__const _AMSLookupPropertyUserRatingValueCurrentVersion
|| __DATA_CONST.__const _AMSMarketingItemActionTypeBuy
|| __DATA_CONST.__const _AMSMarketingItemActionTypeLink
|| __DATA_CONST.__const _AMSMediaArtworkColorKindBackground
|| __DATA_CONST.__const _AMSMediaArtworkColorKindText1
|| __DATA_CONST.__const _AMSMediaArtworkColorKindText2
|| __DATA_CONST.__const _AMSMediaArtworkColorKindText3
|| __DATA_CONST.__const _AMSMediaArtworkColorKindText4
|| __DATA_CONST.__const _AMSMediaArtworkCropStyleBoundedBox
|| __DATA_CONST.__const _AMSMediaArtworkCropStyleConstrainedHeight
|| __DATA_CONST.__const _AMSMediaArtworkCropStyleConstrainedWidth
|| __DATA_CONST.__const _AMSMediaArtworkCropStyleFCCrop270
|| __DATA_CONST.__const _AMSMediaArtworkCropStyleFCCrop44
|| __DATA_CONST.__const _AMSMediaArtworkCropStyleIconMask
|| __DATA_CONST.__const _AMSMediaArtworkCropStyleSourceSize
|| __DATA_CONST.__const _AMSMediaArtworkCropStyleSpecificRectangle
|| __DATA_CONST.__const _AMSMediaArtworkCropStyleSquareCenterCrop
|| __DATA_CONST.__const _AMSMediaArtworkFormatHEIC
|| __DATA_CONST.__const _AMSMediaArtworkFormatJPG
|| __DATA_CONST.__const _AMSMediaArtworkFormatPNG
|| __DATA_CONST.__const _AMSMediaTaskFilterAppex
|| __DATA_CONST.__const _AMSMediaTaskFilterBundleId
|| __DATA_CONST.__const _AMSMediaTaskFilterDeviceProtocol
|| __DATA_CONST.__const _AMSMediaTaskFilterExtension
|| __DATA_CONST.__const _AMSMediaTaskFilterIdentity
|| __DATA_CONST.__const _AMSMediaTaskFilterIsbn
|| __DATA_CONST.__const _AMSMediaTaskFilterIsrc
|| __DATA_CONST.__const _AMSMediaTaskFilterScheme
|| __DATA_CONST.__const _AMSMediaTaskFilterUti
|| __DATA_CONST.__const _AMSMediaTaskPlatformAppleTV
|| __DATA_CONST.__const _AMSMediaTaskPlatformAppleWatch
|| __DATA_CONST.__const _AMSMediaTaskPlatformHomePod
|| __DATA_CONST.__const _AMSMediaTaskPlatformMac
|| __DATA_CONST.__const _AMSMediaTaskPlatformiPad
|| __DATA_CONST.__const _AMSMediaTaskPlatformiPhone
|| __DATA_CONST.__const _AMSMetricsEventTypeAccount
|| __DATA_CONST.__const _AMSMetricsEventTypeAppInstall
|| __DATA_CONST.__const _AMSMetricsEventTypeClick
|| __DATA_CONST.__const _AMSMetricsEventTypeDialog
|| __DATA_CONST.__const _AMSMetricsEventTypeEnter
|| __DATA_CONST.__const _AMSMetricsEventTypeExit
|| __DATA_CONST.__const _AMSMetricsEventTypeImpressions
|| __DATA_CONST.__const _AMSMetricsEventTypeLoadURL
|| __DATA_CONST.__const _AMSMetricsEventTypeLog
|| __DATA_CONST.__const _AMSMetricsEventTypeMedia
|| __DATA_CONST.__const _AMSMetricsEventTypePage
|| __DATA_CONST.__const _AMSMetricsEventTypePurchase
|| __DATA_CONST.__const _AMSMetricsEventTypeSearch
|| __DATA_CONST.__const _AMSNetworkQualityInquiryInterfaceCellular
|| __DATA_CONST.__const _AMSNetworkQualityInquiryInterfaceEthernet
|| __DATA_CONST.__const _AMSNetworkQualityInquiryInterfaceWiFi
|| __DATA_CONST.__const _AMSNetworkQualityInquiryReportKeyDataStalls
|| __DATA_CONST.__const _AMSNetworkQualityInquiryReportKeyInterface
|| __DATA_CONST.__const _AMSNetworkQualityInquiryReportKeyKnownGood
|| __DATA_CONST.__const _AMSNetworkQualityInquiryReportKeyLQM
|| __DATA_CONST.__const _AMSNetworkQualityInquiryReportKeyLastReportedRxSignalStrength
|| __DATA_CONST.__const _AMSNetworkQualityInquiryReportKeyLinkQuality
|| __DATA_CONST.__const _AMSNetworkQualityInquiryReportKeyLoadedLQM
|| __DATA_CONST.__const _AMSNetworkQualityInquiryReportKeyLowInternetDL
|| __DATA_CONST.__const _AMSNetworkQualityInquiryReportKeyLowInternetUL
|| __DATA_CONST.__const _AMSNetworkQualityInquiryReportKeyRadioTechnology
|| __DATA_CONST.__const _AMSNetworkTypeCellular
|| __DATA_CONST.__const _AMSNetworkTypeNone
|| __DATA_CONST.__const _AMSNetworkTypeWiFi
|| __DATA_CONST.__const _AMSODISessionIdentifierApplicationCreate
|| __DATA_CONST.__const _AMSODISessionIdentifierApplicationSubmit
|| __DATA_CONST.__const _AMSPinCodeKey
|| __DATA_CONST.__const _AMSPinCodeSubtitleKey
|| __DATA_CONST.__const _AMSPinCodeTitleKey
|| __DATA_CONST.__const _AMSPinCodeUrlKey
|| __DATA_CONST.__const _AMSPinCodeUrlSubtitleKey
|| __DATA_CONST.__const _AMSPushActionTypeAlertNotification
|| __DATA_CONST.__const _AMSPushActionTypeBadging
|| __DATA_CONST.__const _AMSPushActionTypeEngagement
|| __DATA_CONST.__const _AMSPushActionTypeFetchDataCache
|| __DATA_CONST.__const _AMSPushActionTypeFollowUp
|| __DATA_CONST.__const _AMSPushActionTypeGenericNotification
|| __DATA_CONST.__const _AMSPushActionTypeRichNotification
|| __DATA_CONST.__const _AMSPushPayloadKeyActionType
|| __DATA_CONST.__const _AMSQRCodeSubtitleKey
|| __DATA_CONST.__const _AMSQRCodeTitleKey
|| __DATA_CONST.__const _AMSQRCodeUrlKey
|| __DATA_CONST.__const _AMSQueryParameterKeyCacheBuster
|| __DATA_CONST.__const _AMSQueryParameterKeyDelegateAuthChallenge
|| __DATA_CONST.__const _AMSQueryParameterKeyDelegateAuthUserAgent
|| __DATA_CONST.__const _AMSQueryParameterKeyGUID
|| __DATA_CONST.__const _AMSServerDataCacheServiceName
|| __DATA_CONST.__const _AMSServerErrorDomain
|| __DATA_CONST.__const _AMSSnapshotBagExpiredValueAccessedNotification
|| __DATA_CONST.__const _AMSStorageDatabaseDefaultDomain
|| __DATA_CONST.__const _AMSSubscriptionEntitlementsProductMusic
|| __DATA_CONST.__const _AMSSubscriptionEntitlementsProductMusicMatch
|| __DATA_CONST.__const _AMSSystemEngagementTaskRemoteServiceName
|| __DATA_CONST.__const _AMSTreatmentStoreServiceName
|| __DATA_CONST.__const _AMSUniversalLinksServiceName
|| __DATA_CONST.__const __ZTIN7AMSCore11IDeviceInfoE
|| __DATA_CONST.__const __ZTIN7AMSCore11IHTTPCookieE
|| __DATA_CONST.__const __ZTIN7AMSCore11TaskOptionsE
|| __DATA_CONST.__const __ZTIN7AMSCore12IHTTPRequestE
|| __DATA_CONST.__const __ZTIN7AMSCore13IDataProviderE
|| __DATA_CONST.__const __ZTIN7AMSCore13IHTTPProviderE
|| __DATA_CONST.__const __ZTIN7AMSCore13IHTTPResponseE
|| __DATA_CONST.__const __ZTIN7AMSCore13IMediaAccountE
|| __DATA_CONST.__const __ZTIN7AMSCore14IBagDataSourceE
|| __DATA_CONST.__const __ZTIN7AMSCore14IiCloudAccountE
|| __DATA_CONST.__const __ZTIN7AMSCore16IAccountProviderE
|| __DATA_CONST.__const __ZTIN7AMSCore16ILoggingProviderE
|| __DATA_CONST.__const __ZTIN7AMSCore17AccountPropertiesE
|| __DATA_CONST.__const __ZTIN7AMSCore19BagFrozenDataSourceE
|| __DATA_CONST.__const __ZTIN7AMSCore19IHTTPCookieProviderE
|| __DATA_CONST.__const __ZTIN7AMSCore20BagFailingDataSourceE
|| __DATA_CONST.__const __ZTIN7AMSCore21EncodeHTTPRequestTaskE
|| __DATA_CONST.__const __ZTIN7AMSCore22ExecuteHTTPRequestTaskE
|| __DATA_CONST.__const __ZTIN7AMSCore23EncodeHTTPRequestResultE
|| __DATA_CONST.__const __ZTIN7AMSCore24EncodeHTTPRequestOptionsE
|| __DATA_CONST.__const __ZTIN7AMSCore24ExecuteHTTPRequestResultE
|| __DATA_CONST.__const __ZTIN7AMSCore25ExecuteHTTPRequestOptionsE
|| __DATA_CONST.__const __ZTIN7AMSCore3AnyE
|| __DATA_CONST.__const __ZTIN7AMSCore3BagE
|| __DATA_CONST.__const __ZTIN7AMSCore5ErrorE
|| __DATA_CONST.__const __ZTIN7AMSCore6IErrorE
|| __DATA_CONST.__const __ZTIN7AMSCore7OptionsE
|| __DATA_CONST.__const __ZTVN7AMSCore16IAccountProviderE
|| __DATA_CONST.__const __ZTVN7AMSCore19IHTTPCookieProviderE
|| __DATA_CONST.__const __ZTVN7AMSCore23EncodeHTTPRequestResultE
|| __DATA_CONST.__const __ZTVN7AMSCore3AnyE
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSAbsinthe
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSAcknowledgePrivacyTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSAuthenticateRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSAuthenticateResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSBag
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSBagKeySet
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSBagValue
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSBinaryPromise
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSBiometrics
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSCookieStorage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSDefaults
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSDelegateAuthenticateTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSDelegatePurchaseTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSDevice
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSDialogRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSDialogResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSEngagement
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSEngagementClientData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSEngagementDestination
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSEngagementEnqueueRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSEngagementEnqueueResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSEngagementPushEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSEngagementRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSEngagementResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSEngagementSyncRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSEngagementSyncResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSEphemeralDefaults
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSFraudReport
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSHTTPArchive
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSHTTPArchiveController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSHTTPArchiveTaskInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSLRUCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSLazyPromise
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSLogConfig
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSLookup
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSMediaProtocolHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSMediaRequestEncoder
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSMediaTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSMediaToken
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSMediaTokenService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSMescal
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSMetrics
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSMetricsEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSMetricsLoadURLContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSMetricsLoadURLEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSMutableBagKeySet
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSMutableBinaryPromise
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSMutableLazyPromise
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSMutableLogConfig
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSMutablePromise
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSNetworkQualityInquiry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSObservable
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSObserver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSProcessInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSPromise
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSPromiseResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSPurchaseQueue
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSPushConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSPushHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSStorage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSStorageDatabase
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSThreadSafeObject
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSTreatment
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSTreatmentStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSURLAction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSURLParser
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSURLProtocolHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSURLRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSURLRequestEncoder
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSURLResponseDecoder
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSURLResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSURLSession
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSUnitTests
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AMSUserAgent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSAbsinthe
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSAcknowledgePrivacyTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSAuthenticateRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSAuthenticateResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSBag
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSBagKeySet
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSBagValue
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSBinaryPromise
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSBiometrics
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSCookieStorage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSDefaults
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSDelegateAuthenticateTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSDelegatePurchaseTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSDevice
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSDialogRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSDialogResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSEngagement
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSEngagementClientData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSEngagementDestination
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSEngagementEnqueueRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSEngagementEnqueueResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSEngagementPushEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSEngagementRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSEngagementResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSEngagementSyncRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSEngagementSyncResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSEphemeralDefaults
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSFraudReport
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSHTTPArchive
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSHTTPArchiveController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSHTTPArchiveTaskInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSLRUCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSLazyPromise
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSLogConfig
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSLookup
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSMediaProtocolHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSMediaRequestEncoder
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSMediaTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSMediaToken
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSMediaTokenService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSMescal
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSMetrics
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSMetricsEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSMetricsLoadURLContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSMetricsLoadURLEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSMutableBagKeySet
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSMutableBinaryPromise
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSMutableLogConfig
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSMutablePromise
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSNetworkQualityInquiry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSObservable
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSObserver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSProcessInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSPromise
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSPromiseResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSPurchaseQueue
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSPushConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSPushHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSStorage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSStorageDatabase
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSThreadSafeObject
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSTreatment
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSTreatmentStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSURLAction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSURLParser
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSURLProtocolHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSURLRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSURLRequestEncoder
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSURLResponseDecoder
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSURLResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSURLSession
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSUnitTests
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AMSUserAgent
|| __TEXT.__const _AMSEngagementEnqueueDefaultTimeout
|| __TEXT.__const _AMSEngagementSyncDefaultTimeout
|| __TEXT.__const _AMSEphemeralDefaultsHARLoggingItemLimitDisabled
|| __TEXT.__const _AMSLookupMaximumBatchSize
|| __TEXT.__const _AMSSizeLimitDisabled
|| __TEXT.__const _AMSSizeLimitNoLimit
|| __TEXT.__const __ZNSt3__19__any_imp17__unique_typeinfoINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE4__idE
|| __TEXT.__const __ZNSt3__19__any_imp17__unique_typeinfoINS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN7AMSCore3AnyENS_4lessIS8_EENS6_INS_4pairIKS8_SA_EEEEEEE4__idE
|| __TEXT.__const __ZNSt3__19__any_imp17__unique_typeinfoINS_6chrono10time_pointINS2_12system_clockENS2_8durationIxNS_5ratioILl1ELl1000000EEEEEEEE4__idE
|| __TEXT.__const __ZNSt3__19__any_imp17__unique_typeinfoINS_6vectorIN7AMSCore3AnyENS_9allocatorIS4_EEEEE4__idE
|| __TEXT.__const __ZNSt3__19__any_imp17__unique_typeinfoIPKcE4__idE
|| __TEXT.__const __ZNSt3__19__any_imp17__unique_typeinfoIbE4__idE
|| __TEXT.__const __ZNSt3__19__any_imp17__unique_typeinfoIdE4__idE
|| __TEXT.__const __ZNSt3__19__any_imp17__unique_typeinfoIiE4__idE
|| __TEXT.__const __ZTSN7AMSCore11IDeviceInfoE
|| __TEXT.__const __ZTSN7AMSCore11IHTTPCookieE
|| __TEXT.__const __ZTSN7AMSCore11TaskOptionsE
|| __TEXT.__const __ZTSN7AMSCore12IHTTPRequestE
|| __TEXT.__const __ZTSN7AMSCore13IDataProviderE
|| __TEXT.__const __ZTSN7AMSCore13IHTTPProviderE
|| __TEXT.__const __ZTSN7AMSCore13IHTTPResponseE
|| __TEXT.__const __ZTSN7AMSCore13IMediaAccountE
|| __TEXT.__const __ZTSN7AMSCore14IBagDataSourceE
|| __TEXT.__const __ZTSN7AMSCore14IiCloudAccountE
|| __TEXT.__const __ZTSN7AMSCore16IAccountProviderE
|| __TEXT.__const __ZTSN7AMSCore16ILoggingProviderE
|| __TEXT.__const __ZTSN7AMSCore17AccountPropertiesE
|| __TEXT.__const __ZTSN7AMSCore19BagFrozenDataSourceE
|| __TEXT.__const __ZTSN7AMSCore19IHTTPCookieProviderE
|| __TEXT.__const __ZTSN7AMSCore20BagFailingDataSourceE
|| __TEXT.__const __ZTSN7AMSCore21EncodeHTTPRequestTaskE
|| __TEXT.__const __ZTSN7AMSCore22ExecuteHTTPRequestTaskE
|| __TEXT.__const __ZTSN7AMSCore23EncodeHTTPRequestResultE
|| __TEXT.__const __ZTSN7AMSCore24EncodeHTTPRequestOptionsE
|| __TEXT.__const __ZTSN7AMSCore24ExecuteHTTPRequestResultE
|| __TEXT.__const __ZTSN7AMSCore25ExecuteHTTPRequestOptionsE
|| __TEXT.__const __ZTSN7AMSCore3AnyE
|| __TEXT.__const __ZTSN7AMSCore3BagE
|| __TEXT.__const __ZTSN7AMSCore5ErrorE
|| __TEXT.__const __ZTSN7AMSCore6IErrorE
|| __TEXT.__const __ZTSN7AMSCore7OptionsE
|| __TEXT.__text _AMSCustomError
|| __TEXT.__text _AMSDefaultsNewFeaturesEnabled
|| __TEXT.__text _AMSError
|| __TEXT.__text _AMSErrorIsEqual
|| __TEXT.__text _AMSErrorWithFormat
|| __TEXT.__text _AMSErrorWithMultipleUnderlyingErrors
|| __TEXT.__text _AMSGenerateLogCorrelationKey
|| __TEXT.__text _AMSHashIfNeeded
|| __TEXT.__text _AMSHashIfNeededNonnull
|| __TEXT.__text _AMSLogKey
|| __TEXT.__text _AMSLogableError
|| __TEXT.__text _AMSLogableURL
|| __TEXT.__text _AMSLogableURLRequest
|| __TEXT.__text _AMSSetLogKey
|| __TEXT.__text _AMSSetLogKeyIfNeeded
|| __TEXT.__text _NSStringFromBagValueType
|| __TEXT.__text __ZN7AMSCore11IDeviceInfo14getPlatformWebEv
|| __TEXT.__text __ZN7AMSCore11IDeviceInfo15isApplePlatformERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
|| __TEXT.__text __ZN7AMSCore11IDeviceInfo17isWindowsPlatformERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
|| __TEXT.__text __ZN7AMSCore11IDeviceInfo20getPlatformApple_iOSEv
|| __TEXT.__text __ZN7AMSCore11IDeviceInfo21getPlatformApple_tvOSEv
|| __TEXT.__text __ZN7AMSCore11IDeviceInfo21getPlatformWindows_32Ev
|| __TEXT.__text __ZN7AMSCore11IDeviceInfo21getPlatformWindows_64Ev
|| __TEXT.__text __ZN7AMSCore11IDeviceInfo22getPlatformApple_macOSEv
|| __TEXT.__text __ZN7AMSCore11IDeviceInfo24getPlatformApple_watchOSEv
|| __TEXT.__text __ZN7AMSCore11TaskOptions10setRunModeENS0_7RunModeE
|| __TEXT.__text __ZN7AMSCore11TaskOptions10setTimeoutENSt3__18optionalINS1_6chrono8durationIxNS1_5ratioILl1ELl1000EEEEEEE
|| __TEXT.__text __ZN7AMSCore11TaskOptionsC1ENS_7OptionsE
|| __TEXT.__text __ZN7AMSCore11TaskOptionsC2ENS_7OptionsE
|| __TEXT.__text __ZN7AMSCore12IHTTPRequest6setURLERKNS_4IURLE
|| __TEXT.__text __ZN7AMSCore12IHTTPRequest7setBodyERKNS_5IDataE
|| __TEXT.__text __ZN7AMSCore13IDataProvider12updateValuesERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_ONS1_8functionIFvRNS1_3mapIS7_NS_3AnyENS1_4lessIS7_EENS5_INS1_4pairIS8_SC_EEEEEEEEE
|| __TEXT.__text __ZN7AMSCore13IDataProvider12updateValuesERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_ONS1_8functionIFvRNS1_6vectorINS_3AnyENS5_ISC_EEEEEEE
|| __TEXT.__text __ZN7AMSCore13IDataProvider8getValueERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_
|| __TEXT.__text __ZN7AMSCore13IDataProvider8setValueERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_NS1_8optionalINS_3AnyEEE
|| __TEXT.__text __ZN7AMSCore13IHTTPResponse6setURLERKNS_4IURLE
|| __TEXT.__text __ZN7AMSCore13IHTTPResponse7setBodyERKNS_5IDataE
|| __TEXT.__text __ZN7AMSCore13IMediaAccount21getClientIdentifierTVEv
|| __TEXT.__text __ZN7AMSCore13IMediaAccount24getClientIdentifierBooksEv
|| __TEXT.__text __ZN7AMSCore13IMediaAccount24getClientIdentifierMusicEv
|| __TEXT.__text __ZN7AMSCore13IMediaAccount27getClientIdentifierAppStoreEv
|| __TEXT.__text __ZN7AMSCore13IMediaAccount27getClientIdentifierPodcastsEv
|| __TEXT.__text __ZN7AMSCore13IMediaAccount31getClientIdentifierAppStoreBetaEv
|| __TEXT.__text __ZN7AMSCore13IMediaAccount34getClientIdentifierAppStoreSandboxEv
|| __TEXT.__text __ZN7AMSCore14IBagDataSource15setDefaultValueENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_8optionalINS_3AnyEEE
|| __TEXT.__text __ZN7AMSCore14IBagDataSourceC2ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_NS_7OptionsE
|| __TEXT.__text __ZN7AMSCore14getErrorDomainEv
|| __TEXT.__text __ZN7AMSCore14toHashedStringERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE
|| __TEXT.__text __ZN7AMSCore16IAccountProvider15getMediaAccountERKNS_15AccountIdentityE
|| __TEXT.__text __ZN7AMSCore16ILoggingProvider14getCurrentKeysEv
|| __TEXT.__text __ZN7AMSCore16ILoggingProvider6popKeyEv
|| __TEXT.__text __ZN7AMSCore16ILoggingProvider6redactERKNS_9ILoggableE
|| __TEXT.__text __ZN7AMSCore16ILoggingProvider6redactERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
|| __TEXT.__text __ZN7AMSCore16ILoggingProvider7logInfoERKNS0_6ConfigERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE
|| __TEXT.__text __ZN7AMSCore16ILoggingProvider7logInfoERKNS0_6ConfigESt16initializer_listINSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEE
|| __TEXT.__text __ZN7AMSCore16ILoggingProvider7pushKeyENSt3__18optionalINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEE
|| __TEXT.__text __ZN7AMSCore16ILoggingProvider8logDebugERKNS0_6ConfigERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE
|| __TEXT.__text __ZN7AMSCore16ILoggingProvider8logDebugERKNS0_6ConfigESt16initializer_listINSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEE
|| __TEXT.__text __ZN7AMSCore16ILoggingProvider8logErrorERKNS0_6ConfigERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE
|| __TEXT.__text __ZN7AMSCore16ILoggingProvider8logErrorERKNS0_6ConfigESt16initializer_listINSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEE
|| __TEXT.__text __ZN7AMSCore16ILoggingProvider9createKeyEv
|| __TEXT.__text __ZN7AMSCore16ILoggingProvider9logNormalERKNS0_6ConfigERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE
|| __TEXT.__text __ZN7AMSCore16ILoggingProvider9logNormalERKNS0_6ConfigESt16initializer_listINSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEE
|| __TEXT.__text __ZN7AMSCore16ILoggingProvider9resetKeysENSt3__18optionalINS1_6vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS7_IS9_EEEEEE
|| __TEXT.__text __ZN7AMSCore17AccountProperties11setIntValueERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_8optionalIiEE
|| __TEXT.__text __ZN7AMSCore17AccountProperties11setMapValueERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_8optionalINS1_3mapIS7_NS_3AnyENS1_4lessIS7_EENS5_INS1_4pairIS8_SC_EEEEEEEE
|| __TEXT.__text __ZN7AMSCore17AccountProperties12setBoolValueERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_8optionalIbEE
|| __TEXT.__text __ZN7AMSCore17AccountProperties14setDoubleValueERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_8optionalIdEE
|| __TEXT.__text __ZN7AMSCore17AccountProperties14setVectorValueERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_8optionalINS1_6vectorINS_3AnyENS5_ISC_EEEEEE
|| __TEXT.__text __ZN7AMSCore19BagFrozenDataSource11getIsLoadedEv
|| __TEXT.__text __ZN7AMSCore19BagFrozenDataSource23registerChangedObserverENSt3__110shared_ptrINS_9IObserverIJNS1_13unordered_setINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_4hashISA_EENS1_8equal_toISA_EENS8_ISA_EEEEEEEEE
|| __TEXT.__text __ZN7AMSCore19BagFrozenDataSource25unregisterChangedObserverENSt3__110shared_ptrINS_9IObserverIJNS1_13unordered_setINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_4hashISA_EENS1_8equal_toISA_EENS8_ISA_EEEEEEEEE
|| __TEXT.__text __ZN7AMSCore19BagFrozenDataSource27registerInvalidatedObserverENSt3__110shared_ptrINS_9IObserverIJEEEEE
|| __TEXT.__text __ZN7AMSCore19BagFrozenDataSource29unregisterInvalidatedObserverENSt3__110shared_ptrINS_9IObserverIJEEEEE
|| __TEXT.__text __ZN7AMSCore19BagFrozenDataSource4loadEONSt3__18functionIFvRKNS1_3mapINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_3AnyENS1_4lessIS9_EENS7_INS1_4pairIKS9_SA_EEEEEERKNS1_8optionalINS_5ErrorEEEEEE
|| __TEXT.__text __ZN7AMSCore19BagFrozenDataSourceC1ENS0_7ContextENS_7OptionsE
|| __TEXT.__text __ZN7AMSCore19BagFrozenDataSourceC2ENS0_7ContextENS_7OptionsE
|| __TEXT.__text __ZN7AMSCore19IHTTPCookieProvider15parseDateStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
|| __TEXT.__text __ZN7AMSCore19IHTTPCookieProvider17parseCookieStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_S7_
|| __TEXT.__text __ZN7AMSCore20BagFailingDataSource11getIsLoadedEv
|| __TEXT.__text __ZN7AMSCore20BagFailingDataSource23registerChangedObserverENSt3__110shared_ptrINS_9IObserverIJNS1_13unordered_setINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_4hashISA_EENS1_8equal_toISA_EENS8_ISA_EEEEEEEEE
|| __TEXT.__text __ZN7AMSCore20BagFailingDataSource25unregisterChangedObserverENSt3__110shared_ptrINS_9IObserverIJNS1_13unordered_setINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_4hashISA_EENS1_8equal_toISA_EENS8_ISA_EEEEEEEEE
|| __TEXT.__text __ZN7AMSCore20BagFailingDataSource27registerInvalidatedObserverENSt3__110shared_ptrINS_9IObserverIJEEEEE
|| __TEXT.__text __ZN7AMSCore20BagFailingDataSource29unregisterInvalidatedObserverENSt3__110shared_ptrINS_9IObserverIJEEEEE
|| __TEXT.__text __ZN7AMSCore20BagFailingDataSource4loadEONSt3__18functionIFvRKNS1_3mapINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_3AnyENS1_4lessIS9_EENS7_INS1_4pairIKS9_SA_EEEEEERKNS1_8optionalINS_5ErrorEEEEEE
|| __TEXT.__text __ZN7AMSCore20BagFailingDataSource8setDelayENSt3__16chrono8durationIxNS1_5ratioILl1ELl1000EEEEE
|| __TEXT.__text __ZN7AMSCore20BagFailingDataSourceC1ENS0_7ContextENS_7OptionsE
|| __TEXT.__text __ZN7AMSCore20BagFailingDataSourceC2ENS0_7ContextENS_7OptionsE
|| __TEXT.__text __ZN7AMSCore21EncodeHTTPRequestTask10getAccountERKNS_24EncodeHTTPRequestOptionsE
|| __TEXT.__text __ZN7AMSCore21EncodeHTTPRequestTask10setCookiesERNS_12IHTTPRequestERKNS_13IMediaAccountERKNS_24EncodeHTTPRequestOptionsE
|| __TEXT.__text __ZN7AMSCore21EncodeHTTPRequestTask13setDeviceGUIDERNS_12IHTTPRequestERKNS_24EncodeHTTPRequestOptionsE
|| __TEXT.__text __ZN7AMSCore21EncodeHTTPRequestTask13setParametersERNS_12IHTTPRequestERKNS_24EncodeHTTPRequestOptionsE
|| __TEXT.__text __ZN7AMSCore21EncodeHTTPRequestTask13setStorefrontERNS_12IHTTPRequestERKNS_13IMediaAccountERKNS_24EncodeHTTPRequestOptionsE
|| __TEXT.__text __ZN7AMSCore21EncodeHTTPRequestTask14setIdentifiersERNS_12IHTTPRequestERKNS_13IMediaAccountERKNS_24EncodeHTTPRequestOptionsE
|| __TEXT.__text __ZN7AMSCore21EncodeHTTPRequestTask20setClientIdentifiersERNS_12IHTTPRequestERKNS_24EncodeHTTPRequestOptionsE
|| __TEXT.__text __ZN7AMSCore21EncodeHTTPRequestTask7performEv
|| __TEXT.__text __ZN7AMSCore21EncodeHTTPRequestTaskC1ENS_24EncodeHTTPRequestOptionsE
|| __TEXT.__text __ZN7AMSCore21EncodeHTTPRequestTaskC2ENS_24EncodeHTTPRequestOptionsE
|| __TEXT.__text __ZN7AMSCore22ExecuteHTTPRequestTask22processSetCookieHeaderERKNS_13IHTTPResponseERKNS_13IMediaAccountERKNS_7OptionsE
|| __TEXT.__text __ZN7AMSCore22ExecuteHTTPRequestTask26processSetStorefrontHeaderERKNS_13IHTTPResponseERNS_13IMediaAccountERKNS_25ExecuteHTTPRequestOptionsE
|| __TEXT.__text __ZN7AMSCore22ExecuteHTTPRequestTask28processContentEncodingHeaderERNS_13IHTTPResponseERKNS_25ExecuteHTTPRequestOptionsE
|| __TEXT.__text __ZN7AMSCore22ExecuteHTTPRequestTask7performEv
|| __TEXT.__text __ZN7AMSCore22ExecuteHTTPRequestTaskC1ENS_23EncodeHTTPRequestResultENS_25ExecuteHTTPRequestOptionsE
|| __TEXT.__text __ZN7AMSCore22ExecuteHTTPRequestTaskC1ENS_6FutureIJNS_23EncodeHTTPRequestResultEEEENS_25ExecuteHTTPRequestOptionsE
|| __TEXT.__text __ZN7AMSCore22ExecuteHTTPRequestTaskC2ENS_23EncodeHTTPRequestResultENS_25ExecuteHTTPRequestOptionsE
|| __TEXT.__text __ZN7AMSCore22ExecuteHTTPRequestTaskC2ENS_6FutureIJNS_23EncodeHTTPRequestResultEEEENS_25ExecuteHTTPRequestOptionsE
|| __TEXT.__text __ZN7AMSCore23EncodeHTTPRequestResultC1ENS0_7ContextE
|| __TEXT.__text __ZN7AMSCore23EncodeHTTPRequestResultC1ERKS0_
|| __TEXT.__text __ZN7AMSCore23EncodeHTTPRequestResultC2ENS0_7ContextE
|| __TEXT.__text __ZN7AMSCore23EncodeHTTPRequestResultC2ERKS0_
|| __TEXT.__text __ZN7AMSCore23EncodeHTTPRequestResultaSERKS0_
|| __TEXT.__text __ZN7AMSCore24EncodeHTTPRequestOptions10setAccountEONSt3__110unique_ptrINS_13IMediaAccountENS1_14default_deleteIS3_EEEE
|| __TEXT.__text __ZN7AMSCore24EncodeHTTPRequestOptions10setAccountERKNS_13IMediaAccountE
|| __TEXT.__text __ZN7AMSCore24EncodeHTTPRequestOptions12setParameterERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_8optionalIS7_EE
|| __TEXT.__text __ZN7AMSCore24EncodeHTTPRequestOptions13setHTTPHeaderERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_8optionalIS7_EE
|| __TEXT.__text __ZN7AMSCore24EncodeHTTPRequestOptions21setParametersEncodingENS_5IData8EncodingE
|| __TEXT.__text __ZN7AMSCore24EncodeHTTPRequestOptions23setAlwaysSendDeviceGuidEb
|| __TEXT.__text __ZN7AMSCore24EncodeHTTPRequestOptions6setBagENSt3__18optionalINS_3BagEEE
|| __TEXT.__text __ZN7AMSCore24EncodeHTTPRequestOptions9setMethodENS_11IHTTPMethodE
|| __TEXT.__text __ZN7AMSCore24EncodeHTTPRequestOptionsC1ENS_6FutureIJNSt3__110unique_ptrINS_4IURLENS2_14default_deleteIS4_EEEEEEENS_7OptionsE
|| __TEXT.__text __ZN7AMSCore24EncodeHTTPRequestOptionsC1EONSt3__110unique_ptrINS_4IURLENS1_14default_deleteIS3_EEEENS_7OptionsE
|| __TEXT.__text __ZN7AMSCore24EncodeHTTPRequestOptionsC1ERKNS_4IURLENS_7OptionsE
|| __TEXT.__text __ZN7AMSCore24EncodeHTTPRequestOptionsC2ENS_6FutureIJNSt3__110unique_ptrINS_4IURLENS2_14default_deleteIS4_EEEEEEENS_7OptionsE
|| __TEXT.__text __ZN7AMSCore24EncodeHTTPRequestOptionsC2EONSt3__110unique_ptrINS_4IURLENS1_14default_deleteIS3_EEEENS_7OptionsE
|| __TEXT.__text __ZN7AMSCore24EncodeHTTPRequestOptionsC2ERKNS_4IURLENS_7OptionsE
|| __TEXT.__text __ZN7AMSCore24ExecuteHTTPRequestResultC1EONSt3__110unique_ptrINS_13IHTTPResponseENS1_14default_deleteIS3_EEEE
|| __TEXT.__text __ZN7AMSCore24ExecuteHTTPRequestResultC1ERKNS_13IHTTPResponseE
|| __TEXT.__text __ZN7AMSCore24ExecuteHTTPRequestResultC1ERKS0_
|| __TEXT.__text __ZN7AMSCore24ExecuteHTTPRequestResultC2EONSt3__110unique_ptrINS_13IHTTPResponseENS1_14default_deleteIS3_EEEE
|| __TEXT.__text __ZN7AMSCore24ExecuteHTTPRequestResultC2ERKNS_13IHTTPResponseE
|| __TEXT.__text __ZN7AMSCore24ExecuteHTTPRequestResultC2ERKS0_
|| __TEXT.__text __ZN7AMSCore24ExecuteHTTPRequestResultaSERKS0_
|| __TEXT.__text __ZN7AMSCore25ExecuteHTTPRequestOptions28setIgnoreSetStorefrontHeaderEb
|| __TEXT.__text __ZN7AMSCore25ExecuteHTTPRequestOptionsC1ENS_7OptionsE
|| __TEXT.__text __ZN7AMSCore25ExecuteHTTPRequestOptionsC1ERKS0_
|| __TEXT.__text __ZN7AMSCore25ExecuteHTTPRequestOptionsC2ENS_7OptionsE
|| __TEXT.__text __ZN7AMSCore25ExecuteHTTPRequestOptionsC2ERKS0_
|| __TEXT.__text __ZN7AMSCore3Any12typeToStringENS0_4TypeE
|| __TEXT.__text __ZN7AMSCore3AnyC1ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
|| __TEXT.__text __ZN7AMSCore3AnyC1ENSt3__13mapINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES0_NS1_4lessIS8_EENS6_INS1_4pairIKS8_S0_EEEEEE
|| __TEXT.__text __ZN7AMSCore3AnyC1ENSt3__16chrono10time_pointINS2_12system_clockENS2_8durationIxNS1_5ratioILl1ELl1000000EEEEEEE
|| __TEXT.__text __ZN7AMSCore3AnyC1ENSt3__16vectorIS0_NS1_9allocatorIS0_EEEE
|| __TEXT.__text __ZN7AMSCore3AnyC1EPKc
|| __TEXT.__text __ZN7AMSCore3AnyC1Eb
|| __TEXT.__text __ZN7AMSCore3AnyC1Ed
|| __TEXT.__text __ZN7AMSCore3AnyC1Ei
|| __TEXT.__text __ZN7AMSCore3AnyC1Ev
|| __TEXT.__text __ZN7AMSCore3AnyC2ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
|| __TEXT.__text __ZN7AMSCore3AnyC2ENSt3__13mapINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES0_NS1_4lessIS8_EENS6_INS1_4pairIKS8_S0_EEEEEE
|| __TEXT.__text __ZN7AMSCore3AnyC2ENSt3__16chrono10time_pointINS2_12system_clockENS2_8durationIxNS1_5ratioILl1ELl1000000EEEEEEE
|| __TEXT.__text __ZN7AMSCore3AnyC2ENSt3__16vectorIS0_NS1_9allocatorIS0_EEEE
|| __TEXT.__text __ZN7AMSCore3AnyC2EPKc
|| __TEXT.__text __ZN7AMSCore3AnyC2Eb
|| __TEXT.__text __ZN7AMSCore3AnyC2Ed
|| __TEXT.__text __ZN7AMSCore3AnyC2Ei
|| __TEXT.__text __ZN7AMSCore3AnyC2Ev
|| __TEXT.__text __ZN7AMSCore3Bag11getIsLoadedEv
|| __TEXT.__text __ZN7AMSCore3Bag12getFrozenBagEv
|| __TEXT.__text __ZN7AMSCore3Bag15setDefaultValueENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_8optionalINS_3AnyEEE
|| __TEXT.__text __ZN7AMSCore3Bag23registerChangedObserverENSt3__110shared_ptrINS_9IObserverIJNS1_13unordered_setINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_4hashISA_EENS1_8equal_toISA_EENS8_ISA_EEEEEEEEE
|| __TEXT.__text __ZN7AMSCore3Bag25unregisterChangedObserverENSt3__110shared_ptrINS_9IObserverIJNS1_13unordered_setINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_4hashISA_EENS1_8equal_toISA_EENS8_ISA_EEEEEEEEE
|| __TEXT.__text __ZN7AMSCore3Bag27registerInvalidatedObserverENSt3__110shared_ptrINS_9IObserverIJEEEEE
|| __TEXT.__text __ZN7AMSCore3Bag29unregisterInvalidatedObserverENSt3__110shared_ptrINS_9IObserverIJEEEEE
|| __TEXT.__text __ZN7AMSCore3Bag8getValueERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
|| __TEXT.__text __ZN7AMSCore3BagC1ENSt3__110shared_ptrINS_14IBagDataSourceEEE
|| __TEXT.__text __ZN7AMSCore3BagC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_NS_7OptionsE
|| __TEXT.__text __ZN7AMSCore3BagC2ENSt3__110shared_ptrINS_14IBagDataSourceEEE
|| __TEXT.__text __ZN7AMSCore3BagC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_NS_7OptionsE
|| __TEXT.__text __ZN7AMSCore5ErrorC1ENS_9ErrorCodeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE
|| __TEXT.__text __ZN7AMSCore5ErrorC1ENS_9ErrorCodeERKSt16initializer_listINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEE
|| __TEXT.__text __ZN7AMSCore5ErrorC1ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiRKSt16initializer_listIS7_E
|| __TEXT.__text __ZN7AMSCore5ErrorC1ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiS7_
|| __TEXT.__text __ZN7AMSCore5ErrorC1EONSt3__110unique_ptrINS_6IErrorENS1_14default_deleteIS3_EEEE
|| __TEXT.__text __ZN7AMSCore5ErrorC1ERKS0_
|| __TEXT.__text __ZN7AMSCore5ErrorC2ENS_9ErrorCodeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE
|| __TEXT.__text __ZN7AMSCore5ErrorC2ENS_9ErrorCodeERKSt16initializer_listINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEE
|| __TEXT.__text __ZN7AMSCore5ErrorC2ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiRKSt16initializer_listIS7_E
|| __TEXT.__text __ZN7AMSCore5ErrorC2ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiS7_
|| __TEXT.__text __ZN7AMSCore5ErrorC2EONSt3__110unique_ptrINS_6IErrorENS1_14default_deleteIS3_EEEE
|| __TEXT.__text __ZN7AMSCore5ErrorC2ERKS0_
|| __TEXT.__text __ZN7AMSCore5ErroraSERKS0_
|| __TEXT.__text __ZN7AMSCore7Options13setBundleInfoENSt3__110shared_ptrINS_11IBundleInfoEEE
|| __TEXT.__text __ZN7AMSCore7Options13setDeviceInfoENSt3__110shared_ptrINS_11IDeviceInfoEEE
|| __TEXT.__text __ZN7AMSCore7Options15setDataProviderENSt3__110shared_ptrINS_13IDataProviderEEE
|| __TEXT.__text __ZN7AMSCore7Options15setHTTPProviderENSt3__110shared_ptrINS_13IHTTPProviderEEE
|| __TEXT.__text __ZN7AMSCore7Options18setAccountProviderENSt3__110shared_ptrINS_16IAccountProviderEEE
|| __TEXT.__text __ZN7AMSCore7Options18setLoggingProviderENSt3__110shared_ptrINS_16ILoggingProviderEEE
|| __TEXT.__text __ZN7AMSCore7Options19setFairPlayProviderENSt3__110shared_ptrINS_17IFairPlayProviderEEE
|| __TEXT.__text __ZN7AMSCore7Options21setSchedulingProviderENSt3__110shared_ptrINS_19ISchedulingProviderEEE
|| __TEXT.__text __ZN7AMSCore7Options21setSecureDataProviderENSt3__110shared_ptrINS_19ISecureDataProviderEEE
|| __TEXT.__text __ZN7AMSCore8BagValue8getValueERKNSt3__13mapINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_3AnyENS1_4lessIS8_EENS6_INS1_4pairIKS8_S9_EEEEEERSD_
|| __TEXT.__text __ZN7AMSCore8BagValueC1ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10shared_ptrINS_14IBagDataSourceEEE
|| __TEXT.__text __ZN7AMSCore8BagValueC2ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10shared_ptrINS_14IBagDataSourceEEE
|| __TEXT.__text __ZN7AMSCore9UserAgent18addOSInfoComponentERKNS_7OptionsERNSt3__16vectorINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS9_ISB_EEEE
|| __TEXT.__text __ZN7AMSCore9UserAgent18addSuffixComponentERKNS_7OptionsERNSt3__16vectorINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS9_ISB_EEEE
|| __TEXT.__text __ZN7AMSCore9UserAgent21addBuildInfoComponentERKNS_7OptionsERNSt3__16vectorINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS9_ISB_EEEE
|| __TEXT.__text __ZN7AMSCore9UserAgent22addClientInfoComponentERKNS_7OptionsERNSt3__16vectorINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS9_ISB_EEEE
|| __TEXT.__text __ZN7AMSCore9UserAgent22addWebKitInfoComponentERKNS_7OptionsERNSt3__16vectorINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS9_ISB_EEEE
|| __TEXT.__text __ZN7AMSCore9UserAgent23addAccountInfoComponentERKNS_7OptionsERNSt3__16vectorINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS9_ISB_EEEE
|| __TEXT.__text __ZN7AMSCore9UserAgent24addFairPlayInfoComponentERKNS_7OptionsERNSt3__16vectorINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS9_ISB_EEEE
|| __TEXT.__text __ZN7AMSCore9UserAgent24addHardwareInfoComponentERKNS_7OptionsERNSt3__16vectorINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS9_ISB_EEEE
|| __TEXT.__text __ZN7AMSCore9UserAgent25addFrameworkInfoComponentERKNS_7OptionsERNSt3__16vectorINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS9_ISB_EEEE
|| __TEXT.__text __ZN7AMSCore9UserAgent7compileEv
|| __TEXT.__text __ZN7AMSCore9UserAgentC1ENS_7OptionsE
|| __TEXT.__text __ZN7AMSCore9UserAgentC2ENS_7OptionsE
|| __TEXT.__text __ZN7AMSCore9isSandboxERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE
|| __TEXT.__text __ZN7AMSCoreeqERKNS_13IMediaAccountERKNS_15AccountIdentityE
|| __TEXT.__text __ZN7AMSCoreeqERKNS_13IMediaAccountES2_
|| __TEXT.__text __ZN7AMSCoreeqERKNS_3AnyERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE
|| __TEXT.__text __ZN7AMSCoreeqERKNS_3AnyES2_
|| __TEXT.__text __ZN7AMSCoreeqERKNS_3AnyEb
|| __TEXT.__text __ZN7AMSCoreeqERKNS_5ErrorENS_9ErrorCodeE
|| __TEXT.__text __ZN7AMSCoreeqERKNS_5ErrorES2_
|| __TEXT.__text __ZN7AMSCoreneERKNS_3AnyES2_
|| __TEXT.__text __ZN7AMSCoreneERKNS_5ErrorENS_9ErrorCodeE
|| __TEXT.__text __ZN7AMSCoreneERKNS_5ErrorES2_
|| __TEXT.__text __ZNK7AMSCore11IDeviceInfo15getHardwareTypeEv
|| __TEXT.__text __ZNK7AMSCore11IDeviceInfo16getWebKitVersionEv
|| __TEXT.__text __ZNK7AMSCore11IDeviceInfo19getHardwarePlatformEv
|| __TEXT.__text __ZNK7AMSCore11IDeviceInfo7getGUIDEv
|| __TEXT.__text __ZNK7AMSCore11IDeviceInfo7getNameEv
|| __TEXT.__text __ZNK7AMSCore11IHTTPCookie14getDescriptionEbi
|| __TEXT.__text __ZNK7AMSCore11TaskOptions10getRunModeEv
|| __TEXT.__text __ZNK7AMSCore11TaskOptions10getTimeoutEv
|| __TEXT.__text __ZNK7AMSCore13IHTTPProvider13createRequestEv
|| __TEXT.__text __ZNK7AMSCore13IHTTPProvider9createURLENSt3__18optionalINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEE
|| __TEXT.__text __ZNK7AMSCore13IHTTPResponse9getHeaderERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
|| __TEXT.__text __ZNK7AMSCore13IMediaAccount14getDescriptionEbi
|| __TEXT.__text __ZNK7AMSCore14IBagDataSource10getOptionsEv
|| __TEXT.__text __ZNK7AMSCore14IBagDataSource10getProfileEv
|| __TEXT.__text __ZNK7AMSCore14IBagDataSource12getIsExpiredEv
|| __TEXT.__text __ZNK7AMSCore14IBagDataSource15getDefaultValueERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
|| __TEXT.__text __ZNK7AMSCore14IBagDataSource17getProfileVersionEv
|| __TEXT.__text __ZNK7AMSCore14IiCloudAccount14getDescriptionEbi
|| __TEXT.__text __ZNK7AMSCore16ILoggingProvider19getShouldRedactLogsEv
|| __TEXT.__text __ZNK7AMSCore17AccountProperties11getIntValueERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
|| __TEXT.__text __ZNK7AMSCore17AccountProperties11getMapValueERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
|| __TEXT.__text __ZNK7AMSCore17AccountProperties12getBoolValueERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
|| __TEXT.__text __ZNK7AMSCore17AccountProperties14getDescriptionEbi
|| __TEXT.__text __ZNK7AMSCore17AccountProperties14getDoubleValueERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
|| __TEXT.__text __ZNK7AMSCore17AccountProperties14getVectorValueERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
|| __TEXT.__text __ZNK7AMSCore17AccountProperties5cloneEv
|| __TEXT.__text __ZNK7AMSCore19BagFrozenDataSource10getAccountEv
|| __TEXT.__text __ZNK7AMSCore19BagFrozenDataSource22getExpirationTimePointEv
|| __TEXT.__text __ZNK7AMSCore19BagFrozenDataSource9createURLENSt3__18optionalINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEE
|| __TEXT.__text __ZNK7AMSCore19IHTTPCookieProvider10getCookiesERKNS_12IHTTPRequestE
|| __TEXT.__text __ZNK7AMSCore19IHTTPCookieProvider10getCookiesERKNS_4IURLE
|| __TEXT.__text __ZNK7AMSCore19IHTTPCookieProvider22getRequestHeaderFieldsERKNSt3__16vectorINS1_10unique_ptrINS_11IHTTPCookieENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEE
|| __TEXT.__text __ZNK7AMSCore19IHTTPCookieProvider25parseResponseHeaderFieldsERKNSt3__13mapINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES8_NS1_4lessIS8_EENS6_INS1_4pairIKS8_S8_EEEEEERKNS_4IURLE
|| __TEXT.__text __ZNK7AMSCore20BagFailingDataSource10getAccountEv
|| __TEXT.__text __ZNK7AMSCore20BagFailingDataSource22getExpirationTimePointEv
|| __TEXT.__text __ZNK7AMSCore20BagFailingDataSource8getDelayEv
|| __TEXT.__text __ZNK7AMSCore20BagFailingDataSource9createURLENSt3__18optionalINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEE
|| __TEXT.__text __ZNK7AMSCore23EncodeHTTPRequestResult10getAccountEv
|| __TEXT.__text __ZNK7AMSCore23EncodeHTTPRequestResult10getOptionsEv
|| __TEXT.__text __ZNK7AMSCore23EncodeHTTPRequestResult10getRequestEv
|| __TEXT.__text __ZNK7AMSCore24EncodeHTTPRequestOptions10getAccountEv
|| __TEXT.__text __ZNK7AMSCore24EncodeHTTPRequestOptions13getParametersEv
|| __TEXT.__text __ZNK7AMSCore24EncodeHTTPRequestOptions14getHTTPHeadersEv
|| __TEXT.__text __ZNK7AMSCore24EncodeHTTPRequestOptions21getParametersEncodingEv
|| __TEXT.__text __ZNK7AMSCore24EncodeHTTPRequestOptions23getAlwaysSendDeviceGuidEv
|| __TEXT.__text __ZNK7AMSCore24EncodeHTTPRequestOptions6getBagEv
|| __TEXT.__text __ZNK7AMSCore24EncodeHTTPRequestOptions6getURLEv
|| __TEXT.__text __ZNK7AMSCore24EncodeHTTPRequestOptions9getMethodEv
|| __TEXT.__text __ZNK7AMSCore24ExecuteHTTPRequestResult11getResponseEv
|| __TEXT.__text __ZNK7AMSCore25ExecuteHTTPRequestOptions28getIgnoreSetStorefrontHeaderEv
|| __TEXT.__text __ZNK7AMSCore3Any11getIntValueEv
|| __TEXT.__text __ZNK7AMSCore3Any11getMapValueEv
|| __TEXT.__text __ZNK7AMSCore3Any12getBoolValueEv
|| __TEXT.__text __ZNK7AMSCore3Any12getTimePointEv
|| __TEXT.__text __ZNK7AMSCore3Any14getDescriptionEbi
|| __TEXT.__text __ZNK7AMSCore3Any14getDoubleValueEv
|| __TEXT.__text __ZNK7AMSCore3Any14getStringValueEv
|| __TEXT.__text __ZNK7AMSCore3Any14getVectorValueEv
|| __TEXT.__text __ZNK7AMSCore3Bag10getProfileEv
|| __TEXT.__text __ZNK7AMSCore3Bag12getIsExpiredEv
|| __TEXT.__text __ZNK7AMSCore3Bag15getDefaultValueERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
|| __TEXT.__text __ZNK7AMSCore3Bag17getProfileVersionEv
|| __TEXT.__text __ZNK7AMSCore3Bag22getExpirationTimePointEv
|| __TEXT.__text __ZNK7AMSCore5Error10getMessageEv
|| __TEXT.__text __ZNK7AMSCore5Error5cloneEv
|| __TEXT.__text __ZNK7AMSCore5Error6getImpEv
|| __TEXT.__text __ZNK7AMSCore5Error7getCodeEv
|| __TEXT.__text __ZNK7AMSCore5Error9getDomainEv
|| __TEXT.__text __ZNK7AMSCore6IError14getDescriptionEbi
|| __TEXT.__text __ZNK7AMSCore6IError4whatEv
|| __TEXT.__text __ZNK7AMSCore7Options13getBundleInfoEv
|| __TEXT.__text __ZNK7AMSCore7Options13getDeviceInfoEv
|| __TEXT.__text __ZNK7AMSCore7Options15getDataProviderEv
|| __TEXT.__text __ZNK7AMSCore7Options15getHTTPProviderEv
|| __TEXT.__text __ZNK7AMSCore7Options18getAccountProviderEv
|| __TEXT.__text __ZNK7AMSCore7Options18getLoggingProviderEv
|| __TEXT.__text __ZNK7AMSCore7Options19getFairPlayProviderEv
|| __TEXT.__text __ZNK7AMSCore7Options21getSchedulingProviderEv
|| __TEXT.__text __ZNK7AMSCore7Options21getSecureDataProviderEv
|| __TEXT.__text __ZNK7AMSCore8BagValue11getIntValueEv
|| __TEXT.__text __ZNK7AMSCore8BagValue11getMapValueEv
|| __TEXT.__text __ZNK7AMSCore8BagValue11getURLValueENSt3__110unique_ptrINS_13IMediaAccountENS1_14default_deleteIS3_EEEE
|| __TEXT.__text __ZNK7AMSCore8BagValue11getURLValueERKNS_13IMediaAccountE
|| __TEXT.__text __ZNK7AMSCore8BagValue11getURLValueEv
|| __TEXT.__text __ZNK7AMSCore8BagValue12getBoolValueEv
|| __TEXT.__text __ZNK7AMSCore8BagValue14getDoubleValueEv
|| __TEXT.__text __ZNK7AMSCore8BagValue14getStringValueEv
|| __TEXT.__text __ZNK7AMSCore8BagValue14getVectorValueEv
|| __TEXT.__text __ZNK7AMSCore8BagValue6getKeyEv
|| __TEXT.__text __ZNK7AMSCore8BagValue8getValueEv
|| __TEXT.__text __ZThn8_NK7AMSCore6IError14getDescriptionEbi
__ Accounts: _ACAccountIdentifierKey
__ Accounts: _ACAccountPropertyPersonaIdentifier
__ Accounts: _ACAccountStoreDidChangeNotification
__ Accounts: _ACAccountTypeIdentifierAppleAccount
__ Accounts: _ACAccountTypeIdentifierIDMS
__ Accounts: _ACAccountTypeIdentifierIdentityServices
__ Accounts: _ACAccountTypeIdentifierKey
__ Accounts: _ACAccountTypeIdentifieriTunesStore
__ Accounts: _ACAccountTypeIdentifieriTunesStoreSandbox
__ Accounts: _ACDAccountStoreDidChangeNotification
__ Accounts: _ACErrorDomain
__ Accounts: _ACRawPasswordKey
__ Accounts: _OBJC_CLASS_$_ACAccount
__ Accounts: _OBJC_CLASS_$_ACAccountCredential
__ Accounts: _OBJC_CLASS_$_ACAccountStore
__ Accounts: _kACVerifyCredentialsShouldSaveKey
__ Accounts: _kAccountDataclassBackup
__ AppSupport: _CPSharedResourcesDirectory
__ AssertionServices: _BKSProcessAssertionSetExpirationHandler
__ AssertionServices: _OBJC_CLASS_$_BKSProcessAssertion
__ AssertionServices: _OBJC_METACLASS_$_BKSProcessAssertion
__ AuthKit: _AKAppleIDAuthenticationErrorDomain
__ AuthKit: _AKAuthenticationAlternateDSIDKey
__ AuthKit: _AKAuthenticationDSIDKey
__ AuthKit: _AKAuthenticationDidPerformInteractiveAuth
__ AuthKit: _AKAuthenticationIDMSTokenKey
__ AuthKit: _AKAuthenticationPasswordKey
__ AuthKit: _AKAuthenticationRawPasswordKey
__ AuthKit: _AKAuthenticationUsernameKey
__ AuthKit: _AKAuthorizationScopeEmail
__ AuthKit: _AKAuthorizationScopeFullName
__ AuthKit: _OBJC_CLASS_$_AKAccountManager
__ AuthKit: _OBJC_CLASS_$_AKAppleIDAuthenticationContext
__ AuthKit: _OBJC_CLASS_$_AKAppleIDAuthenticationController
__ AuthKit: _OBJC_CLASS_$_AKAppleIDSession
__ AuthKit: _OBJC_CLASS_$_AKAuthorization
__ AuthKit: _OBJC_CLASS_$_AKAuthorizationController
__ AuthKit: _OBJC_CLASS_$_AKAuthorizationRequest
__ AuthKit: _OBJC_CLASS_$_AKCredentialRequestContext
__ AuthKit: _OBJC_CLASS_$_AKDevice
__ AuthKit: _OBJC_CLASS_$_AKProxiedClientContext
__ AuthKit: _OBJC_CLASS_$_AKUsernameFormatter
__ CFNetwork: _CFURLResponseCopyPeerAddress
__ CFNetwork: _NSHTTPCookieComment
__ CFNetwork: _NSHTTPCookieCommentURL
__ CFNetwork: _NSHTTPCookieDiscard
__ CFNetwork: _NSHTTPCookieDomain
__ CFNetwork: _NSHTTPCookieExpires
__ CFNetwork: _NSHTTPCookieMaximumAge
__ CFNetwork: _NSHTTPCookieName
__ CFNetwork: _NSHTTPCookieOriginURL
__ CFNetwork: _NSHTTPCookiePath
__ CFNetwork: _NSHTTPCookiePort
__ CFNetwork: _NSHTTPCookieSameSitePolicy
__ CFNetwork: _NSHTTPCookieSecure
__ CFNetwork: _NSHTTPCookieValue
__ CFNetwork: _NSHTTPCookieVersion
__ CFNetwork: _NSURLAuthenticationMethodServerTrust
__ CFNetwork: _OBJC_CLASS_$_NSHTTPCookie
__ CFNetwork: _OBJC_CLASS_$_NSHTTPURLResponse
__ CFNetwork: _OBJC_CLASS_$_NSMutableURLRequest
__ CFNetwork: _OBJC_CLASS_$_NSURLCache
__ CFNetwork: _OBJC_CLASS_$_NSURLCredential
__ CFNetwork: _OBJC_CLASS_$_NSURLProtocol
__ CFNetwork: _OBJC_CLASS_$_NSURLRequest
__ CFNetwork: _OBJC_CLASS_$_NSURLResponse
__ CFNetwork: _OBJC_CLASS_$_NSURLSession
__ CFNetwork: _OBJC_CLASS_$_NSURLSessionConfiguration
__ CFNetwork: _OBJC_CLASS_$_NSURLSessionTaskMetrics
__ CFNetwork: _OBJC_METACLASS_$_NSMutableURLRequest
__ CFNetwork: _OBJC_METACLASS_$_NSURLProtocol
__ CFNetwork: _kCFErrorDomainCFNetwork
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFArrayAppendValue
__ CoreFoundation: _CFArrayCreateMutable
__ CoreFoundation: _CFAttributedStringCreate
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFBundleCopyBundleURL
__ CoreFoundation: _CFBundleGetInfoDictionary
__ CoreFoundation: _CFBundleGetMainBundle
__ CoreFoundation: _CFDataCreate
__ CoreFoundation: _CFDataCreateMutable
__ CoreFoundation: _CFDataGetBytePtr
__ CoreFoundation: _CFDataGetBytes
__ CoreFoundation: _CFDataGetLength
__ CoreFoundation: _CFDataGetTypeID
__ CoreFoundation: _CFDictionaryAddValue
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterGetDistributedCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFNumberGetType
__ CoreFoundation: _CFNumberGetTypeID
__ CoreFoundation: _CFNumberGetValue
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesCopyKeyList
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFPreferencesGetAppIntegerValue
__ CoreFoundation: _CFPreferencesSetAppValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFStringCompare
__ CoreFoundation: _CFStringCreateWithCString
__ CoreFoundation: _CFStringGetCString
__ CoreFoundation: _CFStringGetCStringPtr
__ CoreFoundation: _CFStringGetCharactersPtr
__ CoreFoundation: _CFStringGetFastestEncoding
__ CoreFoundation: _CFStringGetLength
__ CoreFoundation: _CFStringGetSystemEncoding
__ CoreFoundation: _CFStringGetTypeID
__ CoreFoundation: _CFURLCreateFromFileSystemRepresentation
__ CoreFoundation: _CFURLSetResourcePropertyForKey
__ CoreFoundation: _CFUUIDCreate
__ CoreFoundation: _CFUUIDGetUUIDBytes
__ CoreFoundation: _CFUserNotificationCancel
__ CoreFoundation: _CFUserNotificationCreate
__ CoreFoundation: _CFUserNotificationGetResponseDictionary
__ CoreFoundation: _CFUserNotificationReceiveResponse
__ CoreFoundation: _NSCalendarIdentifierGregorian
__ CoreFoundation: _NSGenericException
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSURLIsExcludedFromBackupKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCache
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDateComponents
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSInvocation
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMethodSignature
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSOutputStream
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_METACLASS_$_NSMutableSet
__ CoreFoundation: __CFCopySystemVersionDictionary
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: __kCFBundleDisplayNameKey
__ CoreFoundation: __kCFBundleShortVersionStringKey
__ CoreFoundation: __kCFSystemVersionProductVersionKey
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanFalse
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFBundleIdentifierKey
__ CoreFoundation: _kCFBundleVersionKey
__ CoreFoundation: _kCFPreferencesAnyHost
__ CoreFoundation: _kCFPreferencesCurrentHost
__ CoreFoundation: _kCFPreferencesCurrentUser
__ CoreFoundation: _kCFTypeArrayCallBacks
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ CoreFoundation: _kCFURLIsExcludedFromBackupKey
__ CoreFoundation: _kCFUserNotificationAlertHeaderKey
__ CoreFoundation: _kCFUserNotificationAlertMessageKey
__ CoreFoundation: _kCFUserNotificationAlertTopMostKey
__ CoreFoundation: _kCFUserNotificationAlternateButtonTitleKey
__ CoreFoundation: _kCFUserNotificationDefaultButtonTitleKey
__ CoreFoundation: _kCFUserNotificationOtherButtonTitleKey
__ CoreFoundation: _kCFUserNotificationTextFieldValuesKey
__ CoreGraphics: _CGBitmapContextCreate
__ CoreGraphics: _CGBitmapContextCreateImage
__ CoreGraphics: _CGColorCreate
__ CoreGraphics: _CGColorRelease
__ CoreGraphics: _CGColorSpaceCreateDeviceGray
__ CoreGraphics: _CGColorSpaceCreateDeviceRGB
__ CoreGraphics: _CGColorSpaceGetModel
__ CoreGraphics: _CGColorSpaceRelease
__ CoreGraphics: _CGContextAddLineToPoint
__ CoreGraphics: _CGContextAddPath
__ CoreGraphics: _CGContextBeginPath
__ CoreGraphics: _CGContextClearRect
__ CoreGraphics: _CGContextClip
__ CoreGraphics: _CGContextDrawImage
__ CoreGraphics: _CGContextDrawPath
__ CoreGraphics: _CGContextFillPath
__ CoreGraphics: _CGContextFillRect
__ CoreGraphics: _CGContextMoveToPoint
__ CoreGraphics: _CGContextRelease
__ CoreGraphics: _CGContextSetFillColorWithColor
__ CoreGraphics: _CGContextSetInterpolationQuality
__ CoreGraphics: _CGContextSetLineWidth
__ CoreGraphics: _CGContextSetRGBFillColor
__ CoreGraphics: _CGContextSetRGBStrokeColor
__ CoreGraphics: _CGContextSetShouldAntialias
__ CoreGraphics: _CGContextSetStrokeColorWithColor
__ CoreGraphics: _CGContextSetTextPosition
__ CoreGraphics: _CGContextStrokePath
__ CoreGraphics: _CGDataProviderCreateWithCFData
__ CoreGraphics: _CGImageCreateCopy
__ CoreGraphics: _CGImageCreateWithJPEGDataProvider
__ CoreGraphics: _CGImageCreateWithMask
__ CoreGraphics: _CGImageCreateWithPNGDataProvider
__ CoreGraphics: _CGImageGetBitsPerComponent
__ CoreGraphics: _CGImageGetBitsPerPixel
__ CoreGraphics: _CGImageGetBytesPerRow
__ CoreGraphics: _CGImageGetColorSpace
__ CoreGraphics: _CGImageGetDataProvider
__ CoreGraphics: _CGImageGetHeight
__ CoreGraphics: _CGImageGetWidth
__ CoreGraphics: _CGImageMaskCreate
__ CoreGraphics: _CGImageRelease
__ CoreGraphics: _CGPathAddArcToPoint
__ CoreGraphics: _CGPathAddLineToPoint
__ CoreGraphics: _CGPathAddQuadCurveToPoint
__ CoreGraphics: _CGPathCreateCopy
__ CoreGraphics: _CGPathCreateMutable
__ CoreGraphics: _CGPathCreateMutableCopy
__ CoreGraphics: _CGPathCreateWithRoundedRect
__ CoreGraphics: _CGPathMoveToPoint
__ CoreGraphics: _CGPathRelease
__ CoreGraphics: _CGRectInset
__ CoreServices: _OBJC_CLASS_$_LSAppLink
__ CoreServices: _OBJC_CLASS_$_LSApplicationWorkspace
__ CoreServices: _OBJC_CLASS_$_LSBundleRecord
__ CoreServices: _OBJC_CLASS_$__LSOpenConfiguration
__ CoreSymbolication: _CSArchitectureIs64Bit
__ CoreSymbolication: _CSIsNull
__ CoreSymbolication: _CSSourceInfoGetFilename
__ CoreSymbolication: _CSSourceInfoGetLineNumber
__ CoreSymbolication: _CSSymbolGetName
__ CoreSymbolication: _CSSymbolGetRange
__ CoreSymbolication: _CSSymbolOwnerGetName
__ CoreSymbolication: _CSSymbolOwnerGetSourceInfoWithAddress
__ CoreSymbolication: _CSSymbolicatorCreateWithTaskFlagsAndNotification
__ CoreSymbolication: _CSSymbolicatorGetArchitecture
__ CoreSymbolication: _CSSymbolicatorGetSymbolOwnerWithAddressAtTime
__ CoreSymbolication: _CSSymbolicatorGetSymbolWithAddressAtTime
__ CoreTelephony: _OBJC_CLASS_$_CTTelephonyNetworkInfo
__ CoreTelephony: _OBJC_CLASS_$_CoreTelephonyClient
__ CoreText: _CTFontCreateUIFontForLanguage
__ CoreText: _CTFontCreateWithName
__ CoreText: _CTFramesetterCreateWithAttributedString
__ CoreText: _CTFramesetterSuggestFrameSizeWithConstraints
__ CoreText: _CTLineCreateWithAttributedString
__ CoreText: _CTLineDraw
__ CoreText: _kCTFontAttributeName
__ CoreText: _kCTForegroundColorAttributeName
__ CrashReporterSupport: _OSAWriteLogForSubmission
__ CryptoTokenKit: _TKErrorDomain
__ FeatureFlagsSupport: _OBJC_CLASS_$_FFConfiguration
__ FeatureFlagsSupport: _OBJC_CLASS_$_FFFeatureAttribute
__ Foundation: _NSClassFromString
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSLog
__ Foundation: _NSMultipleUnderlyingErrorsKey
__ Foundation: _NSSearchPathForDirectoriesInDomains
__ Foundation: _NSSelectorFromString
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSTemporaryDirectory
__ Foundation: _NSURLErrorDomain
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSCoder
__ Foundation: _OBJC_CLASS_$_NSConditionLock
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSDecimalNumber
__ Foundation: _OBJC_CLASS_$_NSDistributedNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileCoordinator
__ Foundation: _OBJC_CLASS_$_NSFileHandle
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSISO8601DateFormatter
__ Foundation: _OBJC_CLASS_$_NSIndexSet
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSLock
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableAttributedString
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSOperation
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSOrderedCollectionDifference
__ Foundation: _OBJC_CLASS_$_NSPersonNameComponents
__ Foundation: _OBJC_CLASS_$_NSPersonNameComponentsFormatter
__ Foundation: _OBJC_CLASS_$_NSPointerArray
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSScanner
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLQueryItem
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_CLASS_$_NSXPCListener
__ Foundation: _OBJC_METACLASS_$_NSOperation
__ FrontBoardServices: _FBSOpenApplicationOptionKeyLaunchOrigin
__ FrontBoardServices: _FBSOpenApplicationOptionKeyPromptUnlockDevice
__ FrontBoardServices: _FBSOpenApplicationOptionKeyUnlockDevice
__ FrontBoardServices: _OBJC_CLASS_$_BSAuditToken
__ FrontBoardServices: _OBJC_CLASS_$_BSProcessHandle
__ FrontBoardServices: _OBJC_CLASS_$_FBSDisplayLayoutMonitor
__ FrontBoardServices: _OBJC_CLASS_$_FBSDisplayLayoutMonitorConfiguration
__ IDS: _OBJC_CLASS_$_IDSPhoneCertificateVendor
__ IOKit: _IOConnectCallMethod
__ IOKit: _IOConnectCallStructMethod
__ IOKit: _IOIteratorNext
__ IOKit: _IOMasterPort
__ IOKit: _IOObjectRelease
__ IOKit: _IORegistryEntryFromPath
__ IOKit: _IOServiceClose
__ IOKit: _IOServiceGetMatchingService
__ IOKit: _IOServiceGetMatchingServices
__ IOKit: _IOServiceMatching
__ IOKit: _IOServiceOpen
__ IOKit: _kIOMasterPortDefault
__ ImageIO: _CGImageDestinationAddImage
__ ImageIO: _CGImageDestinationCreateWithData
__ ImageIO: _CGImageDestinationFinalize
__ ImageIO: _CGImageSourceCreateImageAtIndex
__ ImageIO: _CGImageSourceCreateWithURL
__ ImageIO: _CGImageSourceGetCount
__ LocalAuthentication: _LAErrorDomain
__ LocalAuthentication: _OBJC_CLASS_$_LAContext
__ ManagedConfiguration: _MCFeatureAccountModificationAllowed
__ ManagedConfiguration: _MCFeatureBookstoreEroticaAllowed
__ ManagedConfiguration: _MCFeatureExplicitContentAllowed
__ ManagedConfiguration: _MCFeatureITunesStorePasswordEntryForced
__ ManagedConfiguration: _MCFeatureInAppPurchasesAllowed
__ ManagedConfiguration: _MCFeatureMaximumAppsRating
__ ManagedConfiguration: _MCFeatureMaximumMoviesRating
__ ManagedConfiguration: _MCFeatureMaximumTVShowsRating
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ MobileActivation: _MAECopyActivationRecordWithError
__ Network: _OBJC_CLASS_$_NWInterface
__ ProtocolBuffer: _OBJC_CLASS_$_PBCodable
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._bytes
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._error
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._length
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._pos
__ ProtocolBuffer: _OBJC_METACLASS_$_PBCodable
__ ProtocolBuffer: _PBDataWriterWriteDataField
__ ProtocolBuffer: _PBDataWriterWriteStringField
__ ProtocolBuffer: _PBReaderReadData
__ ProtocolBuffer: _PBReaderReadString
__ ProtocolBuffer: _PBReaderSkipValueWithTag
__ RunningBoardServices: _OBJC_CLASS_$_RBSProcessHandle
__ Security: _SecAccessControlCreateWithFlags
__ Security: _SecAccessControlGetConstraints
__ Security: _SecAccessControlGetTypeID
__ Security: _SecAccessControlSetConstraints
__ Security: _SecCertificateCopyData
__ Security: _SecCertificateCopyKey
__ Security: _SecCertificateCreateWithData
__ Security: _SecItemAdd
__ Security: _SecItemCopyMatching
__ Security: _SecItemDelete
__ Security: _SecItemUpdate
__ Security: _SecKeyCopyAttributes
__ Security: _SecKeyCopyExternalRepresentation
__ Security: _SecKeyCopyPublicKey
__ Security: _SecKeyCopySystemKey
__ Security: _SecKeyCreateAttestation
__ Security: _SecKeyCreateSignature
__ Security: _SecKeyGeneratePair
__ Security: _SecTaskCopyValueForEntitlement
__ Security: _SecTaskCreateFromSelf
__ Security: _SecTrustCopyInfo
__ Security: _SecTrustEvaluateWithError
__ Security: _SecTrustGetCertificateAtIndex
__ Security: _SecTrustGetCertificateCount
__ Security: _SecTrustSetAnchorCertificates
__ Security: _kSecAttrAccessControl
__ Security: _kSecAttrAccessGroup
__ Security: _kSecAttrAccessible
__ Security: _kSecAttrAccessibleAfterFirstUnlock
__ Security: _kSecAttrAccessibleAfterFirstUnlockThisDeviceOnly
__ Security: _kSecAttrAccessibleWhenUnlockedThisDeviceOnly
__ Security: _kSecAttrAccount
__ Security: _kSecAttrApplicationLabel
__ Security: _kSecAttrIsPermanent
__ Security: _kSecAttrKeyClass
__ Security: _kSecAttrKeyClassPrivate
__ Security: _kSecAttrKeyClassSymmetric
__ Security: _kSecAttrKeySizeInBits
__ Security: _kSecAttrKeyType
__ Security: _kSecAttrKeyTypeECSECPrimeRandom
__ Security: _kSecAttrLabel
__ Security: _kSecAttrService
__ Security: _kSecAttrTokenID
__ Security: _kSecAttrTokenIDSecureEnclave
__ Security: _kSecClass
__ Security: _kSecClassCertificate
__ Security: _kSecClassGenericPassword
__ Security: _kSecClassKey
__ Security: _kSecKeyAlgorithmECDSASignatureDigestX962SHA256
__ Security: _kSecKeyAlgorithmECDSASignatureMessageX962SHA256
__ Security: _kSecPolicyNameAppleAMPService
__ Security: _kSecPrivateKeyAttrs
__ Security: _kSecReturnData
__ Security: _kSecReturnRef
__ Security: _kSecTrustInfoExtendedValidationKey
__ Security: _kSecUseAuthenticationContext
__ Security: _kSecUseDataProtectionKeychain
__ Security: _kSecUseOperationPrompt
__ Security: _kSecValueData
__ Security: _kSecValueRef
__ SoftLinking: __sl_dlopen
__ SpringBoardServices: _OBJC_CLASS_$_SBSMutableUserNotificationTextFieldDefinition
__ SpringBoardServices: _OBJC_CLASS_$_SBSRemoteAlertActivationContext
__ SpringBoardServices: _OBJC_CLASS_$_SBSRemoteAlertConfigurationContext
__ SpringBoardServices: _OBJC_CLASS_$_SBSRemoteAlertDefinition
__ SpringBoardServices: _OBJC_CLASS_$_SBSRemoteAlertHandle
__ SpringBoardServices: _OBJC_CLASS_$_SBSRemoteAlertPresentationTarget
__ SpringBoardServices: _SBSGetScreenLockStatus
__ SpringBoardServices: _SBSRequestPasscodeUnlockUI
__ SpringBoardServices: _SBSUserNotificationTextFieldDefinitionsKey
__ SpringBoardServices: _SBUserNotificationAllowMenuButtonDismissal
__ SpringBoardServices: _SBUserNotificationButtonTagForUnlockActionKey
__ SpringBoardServices: _SBUserNotificationDefaultButtonTag
__ SpringBoardServices: _SBUserNotificationDismissOnLock
__ SpringBoardServices: _SBUserNotificationDisplayActionButtonOnLockScreen
__ SpringBoardServices: _SBUserNotificationDontDismissOnUnlock
__ SpringBoardServices: _SBUserNotificationForcesModalAlertAppearance
__ SpringBoardServices: _SBUserNotificationPendInSetupIfNotAllowedKey
__ SymptomPresentationFeed: _OBJC_CLASS_$_NWNetworkOfInterestManager
__ UniformTypeIdentifiers: _UTTypePNG
__ UserManagement: _OBJC_CLASS_$_UMUserManager
__ UserNotifications: _OBJC_CLASS_$_UNCalendarNotificationTrigger
__ UserNotifications: _OBJC_CLASS_$_UNMutableNotificationContent
__ UserNotifications: _OBJC_CLASS_$_UNNotificationAction
__ UserNotifications: _OBJC_CLASS_$_UNNotificationActionIcon
__ UserNotifications: _OBJC_CLASS_$_UNNotificationAttachment
__ UserNotifications: _OBJC_CLASS_$_UNNotificationRequest
__ UserNotifications: _OBJC_CLASS_$_UNUserNotificationCenter
__ UserNotifications: _UNNotificationDefaultActionIdentifier
__ UserNotifications: _UNNotificationDismissActionIdentifier
__ UserNotifications: _UNNotificationInterruptionLevelDefault
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGCopyAnswerWithError
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _MGGetFloat32Answer
__ libMobileGestalt.dylib: _MGGetSInt32Answer
__ libMobileGestalt.dylib: _MGGetSInt64Answer
__ libSystem.B.dylib: _CCCryptorGCMOneshotDecrypt
__ libSystem.B.dylib: _CCCryptorGCMOneshotEncrypt
__ libSystem.B.dylib: _CCRandomGenerateBytes
__ libSystem.B.dylib: _CC_SHA1
__ libSystem.B.dylib: _CC_SHA256
__ libSystem.B.dylib: _CC_SHA512
__ libSystem.B.dylib: _NDR_record
__ libSystem.B.dylib: _SANDBOX_CHECK_NO_REPORT
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___cxa_atexit
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___progname
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___tolower
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __dispatch_source_type_memorypressure
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _arc4random_uniform
__ libSystem.B.dylib: _asprintf
__ libSystem.B.dylib: _atexit
__ libSystem.B.dylib: _bootstrap_look_up
__ libSystem.B.dylib: _bootstrap_port
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _container_system_group_path_for_identifier
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_assert_queue_not$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_barrier_async
__ libSystem.B.dylib: _dispatch_barrier_sync
__ libSystem.B.dylib: _dispatch_block_cancel
__ libSystem.B.dylib: _dispatch_block_create
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_get_specific
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_queue_create_with_target$V2
__ libSystem.B.dylib: _dispatch_queue_set_specific
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_get_data
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _drand48
__ libSystem.B.dylib: _exp2
__ libSystem.B.dylib: _fclose
__ libSystem.B.dylib: _fcntl
__ libSystem.B.dylib: _fopen
__ libSystem.B.dylib: _fread
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _freeifaddrs
__ libSystem.B.dylib: _fseek
__ libSystem.B.dylib: _ftell
__ libSystem.B.dylib: _ftruncate
__ libSystem.B.dylib: _getifaddrs
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _getpwuid
__ libSystem.B.dylib: _gettimeofday
__ libSystem.B.dylib: _getuid
__ libSystem.B.dylib: _inet_ntoa
__ libSystem.B.dylib: _inet_ntop
__ libSystem.B.dylib: _localtime
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _mach_msg
__ libSystem.B.dylib: _mach_msg_destroy
__ libSystem.B.dylib: _mach_port_deallocate
__ libSystem.B.dylib: _mach_task_self_
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memchr
__ libSystem.B.dylib: _memcmp
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _memset
__ libSystem.B.dylib: _memset_s
__ libSystem.B.dylib: _mig_dealloc_reply_port
__ libSystem.B.dylib: _mig_get_reply_port
__ libSystem.B.dylib: _mig_put_reply_port
__ libSystem.B.dylib: _mkdir
__ libSystem.B.dylib: _mktime
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_check
__ libSystem.B.dylib: _notify_register_check
__ libSystem.B.dylib: _open
__ libSystem.B.dylib: _open_dprotected_np
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_transaction_create
__ libSystem.B.dylib: _os_unfair_lock_assert_not_owner
__ libSystem.B.dylib: _os_unfair_lock_assert_owner
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_lock_with_options
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _os_unfair_recursive_lock_lock_with_options
__ libSystem.B.dylib: _os_unfair_recursive_lock_unlock
__ libSystem.B.dylib: _os_variant_has_internal_content
__ libSystem.B.dylib: _printf
__ libSystem.B.dylib: _pthread_create
__ libSystem.B.dylib: _pthread_once
__ libSystem.B.dylib: _pthread_rwlock_destroy
__ libSystem.B.dylib: _pthread_rwlock_init
__ libSystem.B.dylib: _pthread_rwlock_rdlock
__ libSystem.B.dylib: _pthread_rwlock_unlock
__ libSystem.B.dylib: _pthread_rwlock_wrlock
__ libSystem.B.dylib: _pthread_self
__ libSystem.B.dylib: _pthread_setspecific
__ libSystem.B.dylib: _realloc
__ libSystem.B.dylib: _sandbox_check
__ libSystem.B.dylib: _scanf
__ libSystem.B.dylib: _srand48
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _strftime
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _strtoul
__ libSystem.B.dylib: _syslog
__ libSystem.B.dylib: _tcgetattr
__ libSystem.B.dylib: _tcsetattr
__ libSystem.B.dylib: _umask
__ libSystem.B.dylib: _usleep
__ libSystem.B.dylib: _vm_allocate
__ libSystem.B.dylib: _vm_deallocate
__ libSystem.B.dylib: _voucher_mach_msg_set
__ libSystem.B.dylib: _write
__ libc++.1.dylib: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm
__ libc++.1.dylib: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm
__ libc++.1.dylib: __ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv
__ libc++.1.dylib: __ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info
__ libc++.1.dylib: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNKSt3__123__match_any_but_newlineIcE6__execERNS_7__stateIcEE
__ libc++.1.dylib: __ZNKSt3__16locale4nameEv
__ libc++.1.dylib: __ZNKSt3__16locale9use_facetERNS0_2idE
__ libc++.1.dylib: __ZNKSt3__18ios_base6getlocEv
__ libc++.1.dylib: __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_
__ libc++.1.dylib: __ZNKSt9exception4whatEv
__ libc++.1.dylib: __ZNSt11logic_errorC2EPKc
__ libc++.1.dylib: __ZNSt11logic_errorC2ERKS_
__ libc++.1.dylib: __ZNSt12length_errorD1Ev
__ libc++.1.dylib: __ZNSt13exception_ptrC1ERKS_
__ libc++.1.dylib: __ZNSt13exception_ptrD1Ev
__ libc++.1.dylib: __ZNSt19bad_optional_accessD1Ev
__ libc++.1.dylib: __ZNSt3__111__call_onceERVmPvPFvS2_E
__ libc++.1.dylib: __ZNSt3__111regex_errorC1ENS_15regex_constants10error_typeE
__ libc++.1.dylib: __ZNSt3__111regex_errorD1Ev
__ libc++.1.dylib: __ZNSt3__112__next_primeEm
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5eraseEmm
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7replaceEmmPKc
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7replaceEmmPKcm
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSEc
__ libc++.1.dylib: __ZNSt3__112future_errorC1ENS_10error_codeE
__ libc++.1.dylib: __ZNSt3__112future_errorD1Ev
__ libc++.1.dylib: __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEE6sentryC1ERS3_b
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEy
__ libc++.1.dylib: __ZNSt3__113random_deviceC1ERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE
__ libc++.1.dylib: __ZNSt3__113random_deviceD1Ev
__ libc++.1.dylib: __ZNSt3__113random_deviceclEv
__ libc++.1.dylib: __ZNSt3__114__shared_countD2Ev
__ libc++.1.dylib: __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt3__115__get_classnameEPKcb
__ libc++.1.dylib: __ZNSt3__115__thread_structC1Ev
__ libc++.1.dylib: __ZNSt3__115__thread_structD1Ev
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE
__ libc++.1.dylib: __ZNSt3__115future_categoryEv
__ libc++.1.dylib: __ZNSt3__115recursive_mutex4lockEv
__ libc++.1.dylib: __ZNSt3__115recursive_mutex6unlockEv
__ libc++.1.dylib: __ZNSt3__115recursive_mutexC1Ev
__ libc++.1.dylib: __ZNSt3__115recursive_mutexD1Ev
__ libc++.1.dylib: __ZNSt3__117__assoc_sub_state10__sub_waitERNS_11unique_lockINS_5mutexEEE
__ libc++.1.dylib: __ZNSt3__117__assoc_sub_state13set_exceptionESt13exception_ptr
__ libc++.1.dylib: __ZNSt3__117__assoc_sub_state9__executeEv
__ libc++.1.dylib: __ZNSt3__118condition_variable10notify_allEv
__ libc++.1.dylib: __ZNSt3__118condition_variable10notify_oneEv
__ libc++.1.dylib: __ZNSt3__118condition_variable15__do_timed_waitERNS_11unique_lockINS_5mutexEEENS_6chrono10time_pointINS5_12system_clockENS5_8durationIxNS_5ratioILl1ELl1000000000EEEEEEE
__ libc++.1.dylib: __ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE
__ libc++.1.dylib: __ZNSt3__118condition_variableD1Ev
__ libc++.1.dylib: __ZNSt3__119__shared_mutex_base11lock_sharedEv
__ libc++.1.dylib: __ZNSt3__119__shared_mutex_base13unlock_sharedEv
__ libc++.1.dylib: __ZNSt3__119__shared_mutex_base4lockEv
__ libc++.1.dylib: __ZNSt3__119__shared_mutex_base6unlockEv
__ libc++.1.dylib: __ZNSt3__119__shared_mutex_baseC1Ev
__ libc++.1.dylib: __ZNSt3__119__shared_weak_count14__release_weakEv
__ libc++.1.dylib: __ZNSt3__119__shared_weak_countD2Ev
__ libc++.1.dylib: __ZNSt3__119__thread_local_dataEv
__ libc++.1.dylib: __ZNSt3__120__get_collation_nameEPKc
__ libc++.1.dylib: __ZNSt3__120__throw_system_errorEiPKc
__ libc++.1.dylib: __ZNSt3__14coutE
__ libc++.1.dylib: __ZNSt3__14stoiERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPmi
__ libc++.1.dylib: __ZNSt3__15ctypeIcE2idE
__ libc++.1.dylib: __ZNSt3__15mutex4lockEv
__ libc++.1.dylib: __ZNSt3__15mutex6unlockEv
__ libc++.1.dylib: __ZNSt3__15mutexD1Ev
__ libc++.1.dylib: __ZNSt3__16chrono12steady_clock3nowEv
__ libc++.1.dylib: __ZNSt3__16chrono12system_clock11from_time_tEl
__ libc++.1.dylib: __ZNSt3__16chrono12system_clock3nowEv
__ libc++.1.dylib: __ZNSt3__16chrono12system_clock9to_time_tERKNS0_10time_pointIS1_NS0_8durationIxNS_5ratioILl1ELl1000000EEEEEEE
__ libc++.1.dylib: __ZNSt3__16localeC1ERKS0_
__ libc++.1.dylib: __ZNSt3__16localeC1Ev
__ libc++.1.dylib: __ZNSt3__16localeD1Ev
__ libc++.1.dylib: __ZNSt3__16thread20hardware_concurrencyEv
__ libc++.1.dylib: __ZNSt3__16thread4joinEv
__ libc++.1.dylib: __ZNSt3__16threadD1Ev
__ libc++.1.dylib: __ZNSt3__17collateIcE2idE
__ libc++.1.dylib: __ZNSt3__17promiseIvE13set_exceptionESt13exception_ptr
__ libc++.1.dylib: __ZNSt3__17promiseIvE9set_valueEv
__ libc++.1.dylib: __ZNSt3__17promiseIvEC1Ev
__ libc++.1.dylib: __ZNSt3__17promiseIvED1Ev
__ libc++.1.dylib: __ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv
__ libc++.1.dylib: __ZNSt3__18ios_base4initEPv
__ libc++.1.dylib: __ZNSt3__18ios_base5clearEj
__ libc++.1.dylib: __ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE2idE
__ libc++.1.dylib: __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt3__19to_stringEd
__ libc++.1.dylib: __ZNSt3__19to_stringEi
__ libc++.1.dylib: __ZNSt3__19to_stringEj
__ libc++.1.dylib: __ZNSt3__19to_stringEm
__ libc++.1.dylib: __ZNSt3__19to_stringEy
__ libc++.1.dylib: __ZNSt8bad_castC2Ev
__ libc++.1.dylib: __ZNSt8bad_castD2Ev
__ libc++.1.dylib: __ZNSt9exceptionD2Ev
__ libc++.1.dylib: __ZSt17current_exceptionv
__ libc++.1.dylib: __ZSt17rethrow_exceptionSt13exception_ptr
__ libc++.1.dylib: __ZSt9terminatev
__ libc++.1.dylib: __ZTINSt3__111regex_errorE
__ libc++.1.dylib: __ZTINSt3__112future_errorE
__ libc++.1.dylib: __ZTINSt3__117__assoc_sub_stateE
__ libc++.1.dylib: __ZTINSt3__119__shared_weak_countE
__ libc++.1.dylib: __ZTIPKc
__ libc++.1.dylib: __ZTISt12bad_any_cast
__ libc++.1.dylib: __ZTISt12length_error
__ libc++.1.dylib: __ZTISt12out_of_range
__ libc++.1.dylib: __ZTISt19bad_optional_access
__ libc++.1.dylib: __ZTISt9exception
__ libc++.1.dylib: __ZTIb
__ libc++.1.dylib: __ZTId
__ libc++.1.dylib: __ZTIi
__ libc++.1.dylib: __ZTIv
__ libc++.1.dylib: __ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
__ libc++.1.dylib: __ZTVN10__cxxabiv117__class_type_infoE
__ libc++.1.dylib: __ZTVN10__cxxabiv120__si_class_type_infoE
__ libc++.1.dylib: __ZTVN10__cxxabiv121__vmi_class_type_infoE
__ libc++.1.dylib: __ZTVNSt3__112future_errorE
__ libc++.1.dylib: __ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE
__ libc++.1.dylib: __ZTVNSt3__117__assoc_sub_stateE
__ libc++.1.dylib: __ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
__ libc++.1.dylib: __ZTVSt12bad_any_cast
__ libc++.1.dylib: __ZTVSt12length_error
__ libc++.1.dylib: __ZTVSt19bad_optional_access
__ libc++.1.dylib: __ZdlPv
__ libc++.1.dylib: __Znwm
__ libc++.1.dylib: ___cxa_allocate_exception
__ libc++.1.dylib: ___cxa_bad_cast
__ libc++.1.dylib: ___cxa_begin_catch
__ libc++.1.dylib: ___cxa_end_catch
__ libc++.1.dylib: ___cxa_free_exception
__ libc++.1.dylib: ___cxa_guard_abort
__ libc++.1.dylib: ___cxa_guard_acquire
__ libc++.1.dylib: ___cxa_guard_release
__ libc++.1.dylib: ___cxa_pure_virtual
__ libc++.1.dylib: ___cxa_rethrow
__ libc++.1.dylib: ___cxa_throw
__ libc++.1.dylib: ___dynamic_cast
__ libc++.1.dylib: ___gxx_personality_v0
__ libnetwork.dylib: __nw_data_transfer_report_all_paths
__ libnetwork.dylib: _nw_data_transfer_report_get_path_count
__ libnetwork.dylib: _nw_data_transfer_report_get_path_radio_type
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _class_addMethod
__ libobjc.A.dylib: _class_addProtocol
__ libobjc.A.dylib: _imp_implementationWithBlock
__ libobjc.A.dylib: _imp_removeBlock
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_allocateClassPair
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyCppObjectAtomic
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_disposeClassPair
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getMetaClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_moveWeak
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_registerClassPair
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _object_getClassName
__ libobjc.A.dylib: _protocol_getMethodDescription
__ libresolv.9.dylib: _res_9_getservers
__ libresolv.9.dylib: _res_9_ndestroy
__ libresolv.9.dylib: _res_9_ninit
__ libsqlite3.dylib: _sqlite3_bind_blob
__ libsqlite3.dylib: _sqlite3_bind_double
__ libsqlite3.dylib: _sqlite3_bind_int
__ libsqlite3.dylib: _sqlite3_bind_int64
__ libsqlite3.dylib: _sqlite3_bind_null
__ libsqlite3.dylib: _sqlite3_bind_text
__ libsqlite3.dylib: _sqlite3_bind_text16
__ libsqlite3.dylib: _sqlite3_changes
__ libsqlite3.dylib: _sqlite3_clear_bindings
__ libsqlite3.dylib: _sqlite3_close
__ libsqlite3.dylib: _sqlite3_column_blob
__ libsqlite3.dylib: _sqlite3_column_bytes
__ libsqlite3.dylib: _sqlite3_column_count
__ libsqlite3.dylib: _sqlite3_column_double
__ libsqlite3.dylib: _sqlite3_column_int
__ libsqlite3.dylib: _sqlite3_column_int64
__ libsqlite3.dylib: _sqlite3_column_name
__ libsqlite3.dylib: _sqlite3_column_text
__ libsqlite3.dylib: _sqlite3_column_type
__ libsqlite3.dylib: _sqlite3_errcode
__ libsqlite3.dylib: _sqlite3_errmsg
__ libsqlite3.dylib: _sqlite3_exec
__ libsqlite3.dylib: _sqlite3_extended_result_codes
__ libsqlite3.dylib: _sqlite3_file_control
__ libsqlite3.dylib: _sqlite3_finalize
__ libsqlite3.dylib: _sqlite3_next_stmt
__ libsqlite3.dylib: _sqlite3_open_v2
__ libsqlite3.dylib: _sqlite3_prepare_v2
__ libsqlite3.dylib: _sqlite3_reset
__ libsqlite3.dylib: _sqlite3_sql
__ libsqlite3.dylib: _sqlite3_step
__ libsqlite3.dylib: _sqlite3_stmt_readonly
__ libz.1.dylib: _deflate
__ libz.1.dylib: _deflateEnd
__ libz.1.dylib: _deflateInit2_
__ libz.1.dylib: _inflate
__ libz.1.dylib: _inflateEnd
__ libz.1.dylib: _inflateInit2_
AMSAbsinthe : NSObject <AMSBagConsumer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSAbsinthe bagKeySet]
  +[AMSAbsinthe bagSubProfileVersion]
  +[AMSAbsinthe bagSubProfile]
  +[AMSAbsinthe _dataToSignFromRequest:bagDefinition:]
  +[AMSAbsinthe headersForRequest:buyParams:bag:]
  +[AMSAbsinthe handleResponse:bag:]
  +[AMSAbsinthe _signingDataFromRequest:buyParams:bag:completion:]
  +[AMSAbsinthe createBagForSubProfile]


AMSAbsintheSignature : NSObject
 @property  NSString *signature
 @property  NSString *servKey

  // instance methods
  -[AMSAbsintheSignature setSignature:]
  -[AMSAbsintheSignature servKey]
  -[AMSAbsintheSignature .cxx_destruct]
  -[AMSAbsintheSignature signature]
  -[AMSAbsintheSignature setServKey:]


AMSAbsintheSession : NSObject
 @property  ^{PSCSessionInternal_=} sessionRef
 @property  NSString *servKey

  // class methods
  +[AMSAbsintheSession defaultSession]

  // instance methods
  -[AMSAbsintheSession sessionRef]
  -[AMSAbsintheSession servKey]
  -[AMSAbsintheSession setSessionRef:]
  -[AMSAbsintheSession clearSession]
  -[AMSAbsintheSession signData:bag:error:]
  -[AMSAbsintheSession verifyData:bag:error:]
  -[AMSAbsintheSession _prepareContextWithBag:error:]
  -[AMSAbsintheSession .cxx_destruct]
  -[AMSAbsintheSession init]
  -[AMSAbsintheSession setServKey:]


AMSAccountsChangedObservable : NSObject
 @property  AMSObservable *observable
 @property  NSObject<OS_dispatch_queue> *notificationsQueue
 @property  ACAccount *account
 @property  NSString *accountTypeIdentifier

  // class methods
  +[AMSAccountsChangedObservable sharedInstance]
  +[AMSAccountsChangedObservable createdObservables]
  +[AMSAccountsChangedObservable sharedLocalAccountInstance]
  +[AMSAccountsChangedObservable _processChangedAccount:]
  +[AMSAccountsChangedObservable createdObservablesAccessQueue]

  // instance methods
  -[AMSAccountsChangedObservable _accountStoreDidChange:]
  -[AMSAccountsChangedObservable account]
  -[AMSAccountsChangedObservable accountTypeIdentifier]
  -[AMSAccountsChangedObservable .cxx_destruct]
  -[AMSAccountsChangedObservable initWithAccount:]
  -[AMSAccountsChangedObservable notificationsQueue]
  -[AMSAccountsChangedObservable observable]
  -[AMSAccountsChangedObservable unsubscribe:]
  -[AMSAccountsChangedObservable initWithAccountTypeIdentifier:]
  -[AMSAccountsChangedObservable _initWithAccount:accountTypeIdentifier:]
  -[AMSAccountsChangedObservable _processChangedAccount:]
  -[AMSAccountsChangedObservable _shouldNotifyObserversForChangedAccount:]
  -[AMSAccountsChangedObservable dealloc]
  -[AMSAccountsChangedObservable setObservable:]
  -[AMSAccountsChangedObservable subscribe:]
  -[AMSAccountsChangedObservable setNotificationsQueue:]


AMSAccountsChangedResult : NSObject <AMSHashable>
 @property  ACAccount *account
 @property  NSString *hashedDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSAccountsChangedResult account]
  -[AMSAccountsChangedResult .cxx_destruct]
  -[AMSAccountsChangedResult initWithAccount:]
  -[AMSAccountsChangedResult hashedDescription]


AMSAccountStoreCache : NSObject
  // class methods
  +[AMSAccountStoreCache accountStoreForMediaType:]
  +[AMSAccountStoreCache mediaTypeForAccountStore:]
  +[AMSAccountStoreCache _resetAccountStoreCache]
  +[AMSAccountStoreCache cache]
  +[AMSAccountStoreCache cacheAccessQueue]


AMSAcknowledgePrivacyTask : AMSTask
 @property  NSSet *privacyIdentifiers
 @property  ACAccount *account

  // class methods
  +[AMSAcknowledgePrivacyTask hasPreviouslyAcknowledgedPrivacyIdentifier:]
  +[AMSAcknowledgePrivacyTask _storePrivacyIdentifiers]
  +[AMSAcknowledgePrivacyTask _appleIDPrivacyIdentifier]
  +[AMSAcknowledgePrivacyTask _contentVersionForPrivacyIdentifier:]
  +[AMSAcknowledgePrivacyTask _appleMusicAppPrivacyIdentifier]
  +[AMSAcknowledgePrivacyTask _accountStoreForPrivacyIdentifier:]
  +[AMSAcknowledgePrivacyTask acknowledgementNeededForPrivacyIdentifier:]
  +[AMSAcknowledgePrivacyTask acknowledgementNeededForPrivacyIdentifier:account:]
  +[AMSAcknowledgePrivacyTask _valueForPreviouslyAcknowledgedPrivacyIdentifier:account:]
  +[AMSAcknowledgePrivacyTask hasPreviouslyAcknowledgedPrivacyIdentifier:minimumVersion:]
  +[AMSAcknowledgePrivacyTask hasRejectedPrivacyIdentifier:]
  +[AMSAcknowledgePrivacyTask hasPreviouslyAcknowledgedPrivacyIdentifier:account:minimumVersion:]
  +[AMSAcknowledgePrivacyTask _appleTVAppPrivacyIdentifier]
  +[AMSAcknowledgePrivacyTask hasPreviouslyAcknowledgedPrivacyIdentifier:account:]
  +[AMSAcknowledgePrivacyTask _multiplexPrivacyIdentifier:contentVersion:]
  +[AMSAcknowledgePrivacyTask _appleArcadePrivacyIdentifier]

  // instance methods
  -[AMSAcknowledgePrivacyTask setAccount:]
  -[AMSAcknowledgePrivacyTask account]
  -[AMSAcknowledgePrivacyTask rejectPrivacy]
  -[AMSAcknowledgePrivacyTask privacyIdentifiers]
  -[AMSAcknowledgePrivacyTask initWithPrivacyIdentifier:account:]
  -[AMSAcknowledgePrivacyTask acknowledgePrivacy]
  -[AMSAcknowledgePrivacyTask initWithPrivacyIdentifiers:account:]
  -[AMSAcknowledgePrivacyTask _updatePrivacyWithAcknowledgementVersions:]
  -[AMSAcknowledgePrivacyTask initWithPrivacyIdentifier:]
  -[AMSAcknowledgePrivacyTask initWithPrivacyIdentifiers:]
  -[AMSAcknowledgePrivacyTask setPrivacyIdentifiers:]
  -[AMSAcknowledgePrivacyTask .cxx_destruct]


AMSAgeVerificationPresentationResult : NSObject
 @property  unsigned long successType

  // instance methods
  -[AMSAgeVerificationPresentationResult setSuccessType:]
  -[AMSAgeVerificationPresentationResult successType]


AMSAgeVerificationRequiredResult : NSObject
 @property  BOOL isVerificationRequired
 @property  unsigned long requiredType

  // instance methods
  -[AMSAgeVerificationRequiredResult initWithRequiredType:]
  -[AMSAgeVerificationRequiredResult isVerificationRequired]
  -[AMSAgeVerificationRequiredResult setIsVerificationRequired:]
  -[AMSAgeVerificationRequiredResult setRequiredType:]
  -[AMSAgeVerificationRequiredResult requiredType]


AMSAgeVerificationTask : AMSTask <AMSBagConsumer>
 @property  AMSQRCodeDialogTask *task
 @property  ACAccount *account
 @property  <AMSBagProtocol> *bag
 @property  NSDictionary *options
 @property  NSString *pincode
 @property  <AMSRequestPresentationDelegate> *presentationDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSAgeVerificationTask bagKeySet]
  +[AMSAgeVerificationTask bagSubProfileVersion]
  +[AMSAgeVerificationTask bagSubProfile]
  +[AMSAgeVerificationTask _errorCheckWithAccount:bag:]
  +[AMSAgeVerificationTask _thirtyDaysInTheFutureFrom:]
  +[AMSAgeVerificationTask _isTimestamp:validAsOf:]
  +[AMSAgeVerificationTask _isVerificationNeededForExpiration:ageVerificationEnabled:at:futureMoment:]
  +[AMSAgeVerificationTask _isAgeVerificationNeededForExpiration:at:]
  +[AMSAgeVerificationTask _momentOfExpiryFrom:]
  +[AMSAgeVerificationTask createBagForSubProfile]

  // instance methods
  -[AMSAgeVerificationTask account]
  -[AMSAgeVerificationTask options]
  -[AMSAgeVerificationTask pincode]
  -[AMSAgeVerificationTask setOptions:]
  -[AMSAgeVerificationTask _performTaskForAccount:withBag:]
  -[AMSAgeVerificationTask _handleAccountStoreDidChangeNotification:]
  -[AMSAgeVerificationTask _handleAccountStoreDidChangeNotification:at:]
  -[AMSAgeVerificationTask _stopObservingAccountStoreChanges]
  -[AMSAgeVerificationTask .cxx_destruct]
  -[AMSAgeVerificationTask initWithAccount:bag:options:presentationDelegate:]
  -[AMSAgeVerificationTask isVerificationNeeded]
  -[AMSAgeVerificationTask performTask]
  -[AMSAgeVerificationTask _startObservingAccountStoreChanges]
  -[AMSAgeVerificationTask bag]
  -[AMSAgeVerificationTask setTask:]
  -[AMSAgeVerificationTask presentationDelegate]
  -[AMSAgeVerificationTask task]
  -[AMSAgeVerificationTask setPincode:]


AMSAnisette : NSObject <AMSBagConsumer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSAnisette bagKeySet]
  +[AMSAnisette bagSubProfileVersion]
  +[AMSAnisette bagSubProfile]
  +[AMSAnisette _accountIDForType:account:]
  +[AMSAnisette handleResponse:account:type:bag:]
  +[AMSAnisette _shouldRetryAfterError:]
  +[AMSAnisette _provisionMachineWithActionData:type:account:bag:]
  +[AMSAnisette handleResponse:type:bag:account:]
  +[AMSAnisette _eraseProvisioningForType:account:]
  +[AMSAnisette _handleActionName:actionData:account:type:bag:]
  +[AMSAnisette headersForRequest:account:type:bag:]
  +[AMSAnisette _headersForRequest:account:type:]
  +[AMSAnisette _bagDomainExistsForURL:type:bag:completion:]
  +[AMSAnisette createBagForSubProfile]
  +[AMSAnisette _syncMachineWithActionData:type:account:bag:]


AMSAnisetteProvisionTask : AMSTask
 @property  ACAccount *account
 @property  <AMSBagProtocol> *bag
 @property  NSData *data
 @property  long long type

  // instance methods
  -[AMSAnisetteProvisionTask account]
  -[AMSAnisetteProvisionTask .cxx_destruct]
  -[AMSAnisetteProvisionTask initWithData:type:account:bag:]
  -[AMSAnisetteProvisionTask performProvisioning]
  -[AMSAnisetteProvisionTask _startProvisioningWithOutputSessionID:error:]
  -[AMSAnisetteProvisionTask _createFinishProvisioningRequestWithClientData:error:]
  -[AMSAnisetteProvisionTask _processFinishProvisioningResult:sessionID:error:]
  -[AMSAnisetteProvisionTask bag]
  -[AMSAnisetteProvisionTask data]
  -[AMSAnisetteProvisionTask type]


AMSAnisetteSyncTask : AMSTask
 @property  ACAccount *account
 @property  <AMSBagProtocol> *bag
 @property  NSData *data
 @property  long long type

  // instance methods
  -[AMSAnisetteSyncTask account]
  -[AMSAnisetteSyncTask .cxx_destruct]
  -[AMSAnisetteSyncTask initWithData:type:account:bag:]
  -[AMSAnisetteSyncTask bag]
  -[AMSAnisetteSyncTask data]
  -[AMSAnisetteSyncTask type]
  -[AMSAnisetteSyncTask performSync]


AMSAppleCardSilentEnrollment : NSObject <AMSBagConsumer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSAppleCardSilentEnrollment bagKeySet]
  +[AMSAppleCardSilentEnrollment bagSubProfileVersion]
  +[AMSAppleCardSilentEnrollment bagSubProfile]
  +[AMSAppleCardSilentEnrollment headersForAccount:]
  +[AMSAppleCardSilentEnrollment gsTokenForAccount:error:]
  +[AMSAppleCardSilentEnrollment createBagForSubProfile]


AMSAppleCardSilentEnrollmentProtocolHandler : AMSURLProtocolHandler <NSURLSessionDelegate, AMSURLProtocolDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSAppleCardSilentEnrollmentProtocolHandler AMSURLSession:task:handleAuthenticateRequest:completion:]
  -[AMSAppleCardSilentEnrollmentProtocolHandler reconfigureNewRequest:originalTask:redirect:error:]


AMSApplePayClassic : NSObject <AMSBagConsumer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSApplePayClassic bagKeySet]
  +[AMSApplePayClassic bagSubProfileVersion]
  +[AMSApplePayClassic bagSubProfile]
  +[AMSApplePayClassic createBagForSubProfile]


AMSAttestation : NSObject
  // class methods
  +[AMSAttestation attestationWithOptions:error:]
  +[AMSAttestation _generateCertificateChainStringsForOptions:error:]
  +[AMSAttestation _attestationPListWithStyle:primaryAttestation:extendedAttestation:error:]
  +[AMSAttestation attestationHTTPBodyDataWithStyle:regenerateKeys:error:]
  +[AMSAttestation clearAttestationWithAccount:options:error:]


AMSAuthenticateOptions : NSObject <NSCopying, NSSecureCoding>
 @property  unsigned long allowPasswordGeneration
 @property  BOOL allowSecondaryCredentialSource
 @property  NSString *companionDeviceClientInfo
 @property  NSString *companionDeviceUDID
 @property  BOOL demoAccountSetup
 @property  BOOL ephemeral
 @property  long long serviceType
 @property  BOOL remoteProxyAuthentication
 @property  NSString *serviceIdentifier
 @property  BOOL allowServerDialogs
 @property  unsigned long authenticationType
 @property  NSString *appProvidedContext
 @property  NSDictionary *appProvidedData
 @property  NSString *cancelButtonString
 @property  BOOL canMakeAccountActive
 @property  NSDictionary *createAccountQueryParams
 @property  AMSProcessInfo *clientInfo
 @property  unsigned long credentialSource
 @property  NSString *debugReason
 @property  NSString *defaultButtonString
 @property  BOOL enableAccountCreation
 @property  NSDictionary *HTTPHeaders
 @property  NSURL *iconBundleURL
 @property  BOOL ignoreAccountConversion
 @property  BOOL forceSyncToPairedWatch
 @property  NSString *logKey
 @property  NSString *promptTitle
 @property  NSString *proxyAppBundleID
 @property  NSString *proxyAppName
 @property  NSString *reason
 @property  NSString *userAgent
 @property  NSString *userAgentSuffix
 @property  BOOL usernameEditable

  // class methods
  +[AMSAuthenticateOptions supportsSecureCoding]

  // instance methods
  -[AMSAuthenticateOptions setMediaType:]
  -[AMSAuthenticateOptions setUserAgent:]
  -[AMSAuthenticateOptions setAuthenticationType:]
  -[AMSAuthenticateOptions initWithCoder:]
  -[AMSAuthenticateOptions setServiceIdentifier:]
  -[AMSAuthenticateOptions ephemeral]
  -[AMSAuthenticateOptions serviceIdentifier]
  -[AMSAuthenticateOptions logKey]
  -[AMSAuthenticateOptions setServiceType:]
  -[AMSAuthenticateOptions setClientInfo:]
  -[AMSAuthenticateOptions appProvidedData]
  -[AMSAuthenticateOptions .cxx_destruct]
  -[AMSAuthenticateOptions promptTitle]
  -[AMSAuthenticateOptions allowServerDialogs]
  -[AMSAuthenticateOptions setPresentingViewController:]
  -[AMSAuthenticateOptions iconBundleURL]
  -[AMSAuthenticateOptions allowSecondaryCredentialSource]
  -[AMSAuthenticateOptions debugReason]
  -[AMSAuthenticateOptions allowPasswordGeneration]
  -[AMSAuthenticateOptions canMakeAccountActive]
  -[AMSAuthenticateOptions credentialSource]
  -[AMSAuthenticateOptions enableAccountCreation]
  -[AMSAuthenticateOptions cancelButtonString]
  -[AMSAuthenticateOptions ignoreAccountConversion]
  -[AMSAuthenticateOptions isRemoteProxyAuthentication]
  -[AMSAuthenticateOptions companionDeviceClientInfo]
  -[AMSAuthenticateOptions companionDeviceUDID]
  -[AMSAuthenticateOptions createAccountQueryParams]
  -[AMSAuthenticateOptions defaultButtonString]
  -[AMSAuthenticateOptions setAuthKitData:]
  -[AMSAuthenticateOptions forceSyncToPairedWatch]
  -[AMSAuthenticateOptions setAppProvidedData:]
  -[AMSAuthenticateOptions optionsDictionaryForRemoteProxyAuthentication]
  -[AMSAuthenticateOptions setAllowServerDialogs:]
  -[AMSAuthenticateOptions setEphemeral:]
  -[AMSAuthenticateOptions setCancelButtonString:]
  -[AMSAuthenticateOptions setCanMakeAccountActive:]
  -[AMSAuthenticateOptions setCreateAccountQueryParams:]
  -[AMSAuthenticateOptions setCredentialSource:]
  -[AMSAuthenticateOptions setDebugReason:]
  -[AMSAuthenticateOptions setDefaultButtonString:]
  -[AMSAuthenticateOptions setIconBundleURL:]
  -[AMSAuthenticateOptions setEnableAccountCreation:]
  -[AMSAuthenticateOptions setIgnoreAccountConversion:]
  -[AMSAuthenticateOptions setForceSyncToPairedWatch:]
  -[AMSAuthenticateOptions usernameEditable]
  -[AMSAuthenticateOptions setUsernameEditable:]
  -[AMSAuthenticateOptions setAllowPasswordGeneration:]
  -[AMSAuthenticateOptions setAllowSecondaryCredentialSource:]
  -[AMSAuthenticateOptions setCompanionDeviceClientInfo:]
  -[AMSAuthenticateOptions setCompanionDeviceUDID:]
  -[AMSAuthenticateOptions isDemoAccountSetup]
  -[AMSAuthenticateOptions setDemoAccountSetup:]
  -[AMSAuthenticateOptions setUserAgentSuffix:]
  -[AMSAuthenticateOptions clientInfo]
  -[AMSAuthenticateOptions proxyAppName]
  -[AMSAuthenticateOptions userAgent]
  -[AMSAuthenticateOptions initWithOptionsDictionary:]
  -[AMSAuthenticateOptions setPromptTitle:]
  -[AMSAuthenticateOptions setProxyAppBundleID:]
  -[AMSAuthenticateOptions presentingViewController]
  -[AMSAuthenticateOptions init]
  -[AMSAuthenticateOptions setProxyAppName:]
  -[AMSAuthenticateOptions appProvidedContext]
  -[AMSAuthenticateOptions isEqual:]
  -[AMSAuthenticateOptions authenticationType]
  -[AMSAuthenticateOptions optionsDictionary]
  -[AMSAuthenticateOptions HTTPHeaders]
  -[AMSAuthenticateOptions setHTTPHeaders:]
  -[AMSAuthenticateOptions reason]
  -[AMSAuthenticateOptions setAppProvidedContext:]
  -[AMSAuthenticateOptions mediaType]
  -[AMSAuthenticateOptions setReason:]
  -[AMSAuthenticateOptions setLogKey:]
  -[AMSAuthenticateOptions authKitData]
  -[AMSAuthenticateOptions copyWithZone:]
  -[AMSAuthenticateOptions userAgentSuffix]
  -[AMSAuthenticateOptions proxyAppBundleID]
  -[AMSAuthenticateOptions encodeWithCoder:]
  -[AMSAuthenticateOptions serviceType]


AMSAuthenticateRequest : NSObject <NSSecureCoding>
 @property  ACAccount *account
 @property  NSString *logKey
 @property  AMSAuthenticateOptions *options
 @property  NSDictionary *userInfo

  // class methods
  +[AMSAuthenticateRequest supportsSecureCoding]

  // instance methods
  -[AMSAuthenticateRequest setUserInfo:]
  -[AMSAuthenticateRequest setAccount:]
  -[AMSAuthenticateRequest initWithCoder:]
  -[AMSAuthenticateRequest account]
  -[AMSAuthenticateRequest logKey]
  -[AMSAuthenticateRequest options]
  -[AMSAuthenticateRequest setOptions:]
  -[AMSAuthenticateRequest .cxx_destruct]
  -[AMSAuthenticateRequest initWithAccount:options:]
  -[AMSAuthenticateRequest initWithDSID:altDSID:username:options:]
  -[AMSAuthenticateRequest userInfo]
  -[AMSAuthenticateRequest setLogKey:]
  -[AMSAuthenticateRequest encodeWithCoder:]


AMSAuthenticateResult : NSObject <NSSecureCoding>
 @property  AMSAuthKitUpdateResult *authKitUpdateResult
 @property  ACAccount *account
 @property  NSDictionary *authenticationResults
 @property  NSDictionary *serverResponse

  // class methods
  +[AMSAuthenticateResult supportsSecureCoding]

  // instance methods
  -[AMSAuthenticateResult initWithCoder:]
  -[AMSAuthenticateResult account]
  -[AMSAuthenticateResult .cxx_destruct]
  -[AMSAuthenticateResult serverResponse]
  -[AMSAuthenticateResult authKitUpdateResult]
  -[AMSAuthenticateResult setAuthKitUpdateResult:]
  -[AMSAuthenticateResult initWithAccount:]
  -[AMSAuthenticateResult authenticationResults]
  -[AMSAuthenticateResult encodeWithCoder:]


AMSAuthenticateTask : AMSTask <AMSBagConsumer>
 @property  NSDictionary *initialAuthenticationResults
 @property  <AMSBagProtocol> *bag
 @property  <AMSAuthenticateTaskDelegate> *delegate
 @property  AMSAuthenticateOptions *options
 @property  NSString *password
 @property  NSString *multiUserToken
 @property  NSString *rawPassword
 @property  NSString *altDSID
 @property  NSNumber *DSID
 @property  NSUUID *homeIdentifier
 @property  NSUUID *homeUserIdentifier
 @property  NSString *username
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSAuthenticateTask bagKeySet]
  +[AMSAuthenticateTask bagSubProfileVersion]
  +[AMSAuthenticateTask bagSubProfile]
  +[AMSAuthenticateTask _createFallbackBag]
  +[AMSAuthenticateTask _loadCreateAppleIDwithClientInfo:bag:error:]
  +[AMSAuthenticateTask _updateAccountPasswordUsingSecondaryAccounts:]
  +[AMSAuthenticateTask createBagForSubProfile]

  // instance methods
  -[AMSAuthenticateTask setAltDSID:]
  -[AMSAuthenticateTask setRawPassword:]
  -[AMSAuthenticateTask setDSID:]
  -[AMSAuthenticateTask rawPassword]
  -[AMSAuthenticateTask DSID]
  -[AMSAuthenticateTask homeIdentifier]
  -[AMSAuthenticateTask homeID]
  -[AMSAuthenticateTask altDSID]
  -[AMSAuthenticateTask password]
  -[AMSAuthenticateTask initWithRequest:]
  -[AMSAuthenticateTask options]
  -[AMSAuthenticateTask .cxx_destruct]
  -[AMSAuthenticateTask performAuthentication]
  -[AMSAuthenticateTask bag]
  -[AMSAuthenticateTask _runDialogRequest:]
  -[AMSAuthenticateTask initWithAccount:options:]
  -[AMSAuthenticateTask initWithAccount:options:bag:]
  -[AMSAuthenticateTask initialAuthenticationResults]
  -[AMSAuthenticateTask _accountForAuthenticationWithError:]
  -[AMSAuthenticateTask _runCreateAccountDialogWithError:]
  -[AMSAuthenticateTask _attemptMultiUserTokenAuthenticationForAccount:error:]
  -[AMSAuthenticateTask _sanitizeError:]
  -[AMSAuthenticateTask _attemptPasswordReuseAuthenticationForAccount:error:]
  -[AMSAuthenticateTask _handleDialogFromError:]
  -[AMSAuthenticateTask _createAuthKitUpdateTaskForAccount:]
  -[AMSAuthenticateTask _performAuthenticationUsingAccount:credentialSource:error:]
  -[AMSAuthenticateTask _postFollowUpForFailedAuthenticationWithAccount:]
  -[AMSAuthenticateTask _accountStoreForAuthentication]
  -[AMSAuthenticateTask _updateAccountWithProvidedInformation:]
  -[AMSAuthenticateTask setHomeIdentifier:]
  -[AMSAuthenticateTask multiUserToken]
  -[AMSAuthenticateTask initWithAuthenticationResults:options:]
  -[AMSAuthenticateTask setMultiUserToken:]
  -[AMSAuthenticateTask homeUserIdentifier]
  -[AMSAuthenticateTask setHomeUserIdentifier:]
  -[AMSAuthenticateTask setDelegate:]
  -[AMSAuthenticateTask username]
  -[AMSAuthenticateTask init]
  -[AMSAuthenticateTask initWithRequest:bag:]
  -[AMSAuthenticateTask setHomeID:]
  -[AMSAuthenticateTask delegate]
  -[AMSAuthenticateTask setUsername:]
  -[AMSAuthenticateTask setPassword:]
  -[AMSAuthenticateTask setBag:]


AMSAuthKitUpdateResult : NSObject <NSSecureCoding>
 @property  ACAccount *account
 @property  NSDictionary *authenticationResults
 @property  unsigned long credentialSource

  // class methods
  +[AMSAuthKitUpdateResult supportsSecureCoding]
  +[AMSAuthKitUpdateResult _createUpdatedAccount:usingAuthenticationResults:options:]

  // instance methods
  -[AMSAuthKitUpdateResult initWithCoder:]
  -[AMSAuthKitUpdateResult account]
  -[AMSAuthKitUpdateResult .cxx_destruct]
  -[AMSAuthKitUpdateResult credentialSource]
  -[AMSAuthKitUpdateResult initWithAccount:authenticationResults:options:]
  -[AMSAuthKitUpdateResult initWithAccount:authenticationResults:credentialSource:options:]
  -[AMSAuthKitUpdateResult authenticationResults]
  -[AMSAuthKitUpdateResult encodeWithCoder:]


AMSAuthKitUpdateTask : AMSTask <AKAppleIDAuthenticationDelegate>
 @property  <AMSAuthKitUpdateTaskDelegate> *delegate
 @property  ACAccount *account
 @property  AMSAuthenticateOptions *options
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSAuthKitUpdateTask _updateAccountRawPasswordUsingSecondaryAccounts:]

  // instance methods
  -[AMSAuthKitUpdateTask authenticationController:shouldContinueWithAuthenticationResults:error:forContext:]
  -[AMSAuthKitUpdateTask account]
  -[AMSAuthKitUpdateTask options]
  -[AMSAuthKitUpdateTask .cxx_destruct]
  -[AMSAuthKitUpdateTask performAuthKitUpdate]
  -[AMSAuthKitUpdateTask initWithAccount:options:]
  -[AMSAuthKitUpdateTask setDelegate:]
  -[AMSAuthKitUpdateTask _configureAuthKitContext:]
  -[AMSAuthKitUpdateTask _createAuthKitContext]
  -[AMSAuthKitUpdateTask _createAuthKitController]
  -[AMSAuthKitUpdateTask _logPromptSummaryForResults:context:]
  -[AMSAuthKitUpdateTask _canPresentBackgroundPrompt]
  -[AMSAuthKitUpdateTask _configureClientInfoForContext:]
  -[AMSAuthKitUpdateTask _configureCompanionDeviceForContext:]
  -[AMSAuthKitUpdateTask _configureIdentifiersForContext:]
  -[AMSAuthKitUpdateTask _configureProxyIdentifiersForContext:]
  -[AMSAuthKitUpdateTask _configureStringsForContext:]
  -[AMSAuthKitUpdateTask _authenticationType]
  -[AMSAuthKitUpdateTask delegate]


AMSAuthorizeMachineProtocolHandler : AMSURLProtocolHandler
 @property  @? reconfigureRequestHandler

  // instance methods
  -[AMSAuthorizeMachineProtocolHandler .cxx_destruct]
  -[AMSAuthorizeMachineProtocolHandler reconfigureRequestHandler]
  -[AMSAuthorizeMachineProtocolHandler reconfigureNewRequest:originalTask:redirect:error:]
  -[AMSAuthorizeMachineProtocolHandler setReconfigureRequestHandler:]


AMSAuthorizeMachineTask : AMSTask <NSURLSessionDelegate, AMSURLProtocolDelegate, AMSBagConsumer>
 @property  AMSAuthenticateRequest *authenticateRequest
 @property  BOOL deauthorize
 @property  AMSURLSession *session
 @property  ACAccount *validAccount
 @property  unsigned long authorizeReason
 @property  <AMSBagProtocol> *bag
 @property  AMSProcessInfo *clientInfo
 @property  NSNumber *familyMemberAccountDSID
 @property  NSString *logKey
 @property  <AMSRequestPresentationDelegate> *presentationDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSAuthorizeMachineTask bagKeySet]
  +[AMSAuthorizeMachineTask bagSubProfileVersion]
  +[AMSAuthorizeMachineTask bagSubProfile]
  +[AMSAuthorizeMachineTask createBagForSubProfile]

  // instance methods
  -[AMSAuthorizeMachineTask AMSURLSession:task:handleDialogRequest:completion:]
  -[AMSAuthorizeMachineTask AMSURLSession:task:handleAuthenticateRequest:completion:]
  -[AMSAuthorizeMachineTask account]
  -[AMSAuthorizeMachineTask logKey]
  -[AMSAuthorizeMachineTask setClientInfo:]
  -[AMSAuthorizeMachineTask AMSURLSession:task:handleEngagementRequest:completion:]
  -[AMSAuthorizeMachineTask .cxx_destruct]
  -[AMSAuthorizeMachineTask bag]
  -[AMSAuthorizeMachineTask clientInfo]
  -[AMSAuthorizeMachineTask validAccount]
  -[AMSAuthorizeMachineTask isDeauthorize]
  -[AMSAuthorizeMachineTask setSession:]
  -[AMSAuthorizeMachineTask _authenticate]
  -[AMSAuthorizeMachineTask _buildRequest]
  -[AMSAuthorizeMachineTask _buildRequestTask]
  -[AMSAuthorizeMachineTask initWithAccount:authorizeReason:bag:]
  -[AMSAuthorizeMachineTask _performAuthorization]
  -[AMSAuthorizeMachineTask _checkRequestThrottle]
  -[AMSAuthorizeMachineTask authorizeReason]
  -[AMSAuthorizeMachineTask _buildRequestParametersWithError:]
  -[AMSAuthorizeMachineTask familyMemberAccountDSID]
  -[AMSAuthorizeMachineTask authenticateRequest]
  -[AMSAuthorizeMachineTask _keybagSyncStringForAccount:withTransactionType:error:]
  -[AMSAuthorizeMachineTask setValidAccount:]
  -[AMSAuthorizeMachineTask initWithUsername:authorizeReason:bag:presentationDelegate:]
  -[AMSAuthorizeMachineTask performDeauthorization]
  -[AMSAuthorizeMachineTask performAuthorization]
  -[AMSAuthorizeMachineTask setAuthorizeReason:]
  -[AMSAuthorizeMachineTask setFamilyMemberAccountDSID:]
  -[AMSAuthorizeMachineTask setAuthenticateRequest:]
  -[AMSAuthorizeMachineTask setDeauthorize:]
  -[AMSAuthorizeMachineTask presentationDelegate]
  -[AMSAuthorizeMachineTask setLogKey:]
  -[AMSAuthorizeMachineTask session]
  -[AMSAuthorizeMachineTask setPresentationDelegate:]


AMSAutomaticDownloadKindsFetchTask : AMSTask <AMSBagConsumer>
 @property  ACAccount *account
 @property  <AMSBagProtocol> *bag
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSAutomaticDownloadKindsFetchTask bagKeySet]
  +[AMSAutomaticDownloadKindsFetchTask bagSubProfileVersion]
  +[AMSAutomaticDownloadKindsFetchTask bagSubProfile]
  +[AMSAutomaticDownloadKindsFetchTask createBagForSubProfile]

  // instance methods
  -[AMSAutomaticDownloadKindsFetchTask account]
  -[AMSAutomaticDownloadKindsFetchTask .cxx_destruct]
  -[AMSAutomaticDownloadKindsFetchTask bag]
  -[AMSAutomaticDownloadKindsFetchTask initWithAccount:bag:]
  -[AMSAutomaticDownloadKindsFetchTask perform]


AMSAutomaticDownloadKindsResult : NSObject
 @property  ACAccount *account
 @property  NSArray *enabledMediaKinds

  // instance methods
  -[AMSAutomaticDownloadKindsResult account]
  -[AMSAutomaticDownloadKindsResult .cxx_destruct]
  -[AMSAutomaticDownloadKindsResult initWithAccount:andEnabledMediaKinds:]
  -[AMSAutomaticDownloadKindsResult enabledMediaKinds]


AMSAutomaticDownloadKindsSetTask : AMSTask <NSURLSessionDelegate, AMSURLProtocolDelegate, AMSBagConsumer>
 @property  AMSURLSession *session
 @property  ACAccount *account
 @property  <AMSBagProtocol> *bag
 @property  AMSProcessInfo *clientInfo
 @property  NSArray *enabledMediaKinds
 @property  <AMSRequestPresentationDelegate> *presentationDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSAutomaticDownloadKindsSetTask bagKeySet]
  +[AMSAutomaticDownloadKindsSetTask bagSubProfileVersion]
  +[AMSAutomaticDownloadKindsSetTask bagSubProfile]
  +[AMSAutomaticDownloadKindsSetTask createBagForSubProfile]

  // instance methods
  -[AMSAutomaticDownloadKindsSetTask AMSURLSession:task:handleDialogRequest:completion:]
  -[AMSAutomaticDownloadKindsSetTask AMSURLSession:task:handleAuthenticateRequest:completion:]
  -[AMSAutomaticDownloadKindsSetTask account]
  -[AMSAutomaticDownloadKindsSetTask setClientInfo:]
  -[AMSAutomaticDownloadKindsSetTask .cxx_destruct]
  -[AMSAutomaticDownloadKindsSetTask bag]
  -[AMSAutomaticDownloadKindsSetTask clientInfo]
  -[AMSAutomaticDownloadKindsSetTask setSession:]
  -[AMSAutomaticDownloadKindsSetTask enabledMediaKinds]
  -[AMSAutomaticDownloadKindsSetTask initWithEnabledMediaKinds:account:bag:presentationDelegate:]
  -[AMSAutomaticDownloadKindsSetTask initWithEnabledMediaKinds:account:bag:]
  -[AMSAutomaticDownloadKindsSetTask presentationDelegate]
  -[AMSAutomaticDownloadKindsSetTask perform]
  -[AMSAutomaticDownloadKindsSetTask session]


AMSBag : NSObject <AMSBagProtocol>
 @property  <AMSBagDataSourceProtocol> *dataSource
 @property  AMSProcessInfo *processInfo
 @property  {optional<AMSCore::Bag>=(?=c{Bag=^^?{shared_ptr<AMSCore::IBagDataSource>=^{IBagDataSource}^{__shared_weak_count}}})B} underlyingBag
 @property  NSString *descriptionExtended
 @property  BOOL expired
 @property  NSDate *expirationDate
 @property  NSString *profile
 @property  NSString *profileVersion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSBag bagForProfile:profileVersion:]
  +[AMSBag bagCache]
  +[AMSBag bagCacheAccessQueue]
  +[AMSBag bagForProfile:profileVersion:processInfo:]
  +[AMSBag _resetBagCache]

  // instance methods
  -[AMSBag processInfo]
  -[AMSBag initWithDataSource:]
  -[AMSBag setUnderlyingBag:]
  -[AMSBag setDataSource:]
  -[AMSBag .cxx_construct]
  -[AMSBag descriptionExtended]
  -[AMSBag .cxx_destruct]
  -[AMSBag isExpired]
  -[AMSBag boolForKey:]
  -[AMSBag URLForKey:account:]
  -[AMSBag isLoaded]
  -[AMSBag integerForKey:]
  -[AMSBag underlyingBag]
  -[AMSBag dataSource]
  -[AMSBag setProcessInfo:]
  -[AMSBag initWithBag:processInfo:]
  -[AMSBag _temporaryDictionary]
  -[AMSBag profileVersion]
  -[AMSBag stringForKey:]
  -[AMSBag arrayForKey:]
  -[AMSBag URLForKey:]
  -[AMSBag profile]
  -[AMSBag doubleForKey:]
  -[AMSBag createSnapshotWithCompletion:]
  -[AMSBag expirationDate]
  -[AMSBag setDefaultValue:forKey:]
  -[AMSBag dictionaryForKey:]


AMSBagFrozenDataSource : NSObject <AMSBagDataSourceProtocol, NSCopying, NSSecureCoding>
 @property  ACAccount *account
 @property  NSDictionary *data
 @property  NSDictionary *defaultValues
 @property  NSDate *expirationDate
 @property  BOOL loaded
 @property  AMSProcessInfo *processInfo
 @property  NSString *profile
 @property  NSString *profileVersion
 @property  NSString *descriptionExtended
 @property  @? dataSourceChangedHandler
 @property  @? dataSourceDataInvalidatedHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSBagFrozenDataSource supportsSecureCoding]

  // instance methods
  -[AMSBagFrozenDataSource processInfo]
  -[AMSBagFrozenDataSource defaultValueForKey:]
  -[AMSBagFrozenDataSource initWithCoder:]
  -[AMSBagFrozenDataSource account]
  -[AMSBagFrozenDataSource .cxx_destruct]
  -[AMSBagFrozenDataSource isLoaded]
  -[AMSBagFrozenDataSource valueForURLVariable:account:]
  -[AMSBagFrozenDataSource data]
  -[AMSBagFrozenDataSource profileVersion]
  -[AMSBagFrozenDataSource defaultValues]
  -[AMSBagFrozenDataSource profile]
  -[AMSBagFrozenDataSource loadWithCompletion:]
  -[AMSBagFrozenDataSource copyWithZone:]
  -[AMSBagFrozenDataSource _initWithProfile:profileVersion:data:expirationDate:account:processInfo:defaultValues:]
  -[AMSBagFrozenDataSource expirationDate]
  -[AMSBagFrozenDataSource setDefaultValue:forKey:]
  -[AMSBagFrozenDataSource encodeWithCoder:]


AMSBagFrozenDataSourceBuilder : NSObject
 @property  ACAccount *account
 @property  NSDictionary *data
 @property  NSDictionary *defaultValues
 @property  NSDate *expirationDate
 @property  NSString *profile
 @property  NSString *profileVersion
 @property  AMSProcessInfo *processInfo

  // instance methods
  -[AMSBagFrozenDataSourceBuilder processInfo]
  -[AMSBagFrozenDataSourceBuilder setProfile:]
  -[AMSBagFrozenDataSourceBuilder setAccount:]
  -[AMSBagFrozenDataSourceBuilder account]
  -[AMSBagFrozenDataSourceBuilder .cxx_destruct]
  -[AMSBagFrozenDataSourceBuilder initWithFrozenDataSource:]
  -[AMSBagFrozenDataSourceBuilder createFrozenBag]
  -[AMSBagFrozenDataSourceBuilder data]
  -[AMSBagFrozenDataSourceBuilder setExpirationDate:]
  -[AMSBagFrozenDataSourceBuilder setProcessInfo:]
  -[AMSBagFrozenDataSourceBuilder setDefaultValues:]
  -[AMSBagFrozenDataSourceBuilder profileVersion]
  -[AMSBagFrozenDataSourceBuilder defaultValues]
  -[AMSBagFrozenDataSourceBuilder createFrozenDataSource]
  -[AMSBagFrozenDataSourceBuilder profile]
  -[AMSBagFrozenDataSourceBuilder setData:]
  -[AMSBagFrozenDataSourceBuilder expirationDate]
  -[AMSBagFrozenDataSourceBuilder setProfileVersion:]


AMSBagKeySet : NSObject <NSCopying, NSMutableCopying, NSSecureCoding>
 @property  NSMutableDictionary *defaultValues

  // class methods
  +[AMSBagKeySet supportsSecureCoding]
  +[AMSBagKeySet defaultValueForKey:profile:profileVersion:]
  +[AMSBagKeySet registerBagKeySet:forProfile:profileVersion:]
  +[AMSBagKeySet defaultValues]

  // instance methods
  -[AMSBagKeySet initWithCoder:]
  -[AMSBagKeySet .cxx_destruct]
  -[AMSBagKeySet init]
  -[AMSBagKeySet setDefaultValues:]
  -[AMSBagKeySet defaultValues]
  -[AMSBagKeySet mutableCopyWithZone:]
  -[AMSBagKeySet copyWithZone:]
  -[AMSBagKeySet encodeWithCoder:]


AMSMutableBagKeySet : AMSBagKeySet
  // instance methods
  -[AMSMutableBagKeySet addBagKey:valueType:]
  -[AMSMutableBagKeySet unionBagKeySet:]
  -[AMSMutableBagKeySet addBagKey:valueType:defaultValue:]


AMSBagNetworkDataSource : NSObject <AMSBagDataSourceProtocol>
 @property  AMSObserver *accountsChangedObserver
 @property  AMSBagNetworkTaskResult *cachedResult
 @property  {os_unfair_recursive_lock_s={os_unfair_lock_s=I}I} cachedDataAccessLock
 @property  NSString *cachedStorefront
 @property  NSObject<OS_dispatch_queue> *completionQueue
 @property  AMSBagNetworkTask *currentLoadTask
 @property  NSMutableDictionary *defaultValues
 @property  NSError *activeFailure
 @property  NSDate *activeFailureExpiration
 @property  NSObject<OS_dispatch_queue> *processAccountStoreDidChangeNotificationQueue
 @property  NSDate *expirationDate
 @property  BOOL loaded
 @property  AMSProcessInfo *processInfo
 @property  NSString *profile
 @property  NSString *profileVersion
 @property  NSString *descriptionExtended
 @property  @? dataSourceChangedHandler
 @property  @? dataSourceDataInvalidatedHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSBagNetworkDataSource valueForURLVariable:account:clientInfo:]
  +[AMSBagNetworkDataSource _shouldProcessChangedAccount:forMediaType:]
  +[AMSBagNetworkDataSource _isDataDictionary:equalToDataDictionary:]

  // instance methods
  -[AMSBagNetworkDataSource processInfo]
  -[AMSBagNetworkDataSource defaultValueForKey:]
  -[AMSBagNetworkDataSource completionQueue]
  -[AMSBagNetworkDataSource _updateCachedResult:]
  -[AMSBagNetworkDataSource setActiveFailure:]
  -[AMSBagNetworkDataSource initWithProfile:profileVersion:processInfo:]
  -[AMSBagNetworkDataSource setDataSourceChangedHandler:]
  -[AMSBagNetworkDataSource setProcessAccountStoreDidChangeNotificationQueue:]
  -[AMSBagNetworkDataSource activeFailureExpiration]
  -[AMSBagNetworkDataSource cachedStorefront]
  -[AMSBagNetworkDataSource descriptionExtended]
  -[AMSBagNetworkDataSource setDataSourceDataInvalidatedHandler:]
  -[AMSBagNetworkDataSource .cxx_destruct]
  -[AMSBagNetworkDataSource setCompletionQueue:]
  -[AMSBagNetworkDataSource setAccountsChangedObserver:]
  -[AMSBagNetworkDataSource accountsChangedObserver]
  -[AMSBagNetworkDataSource _accountStoreDidChange]
  -[AMSBagNetworkDataSource isLoaded]
  -[AMSBagNetworkDataSource valueForURLVariable:account:]
  -[AMSBagNetworkDataSource cachedDataAccessLock]
  -[AMSBagNetworkDataSource currentLoadTask]
  -[AMSBagNetworkDataSource setDefaultValues:]
  -[AMSBagNetworkDataSource profileVersion]
  -[AMSBagNetworkDataSource _fetchBag]
  -[AMSBagNetworkDataSource setCachedStorefront:]
  -[AMSBagNetworkDataSource defaultValues]
  -[AMSBagNetworkDataSource processAccountStoreDidChangeNotificationQueue]
  -[AMSBagNetworkDataSource profile]
  -[AMSBagNetworkDataSource dataSourceDataInvalidatedHandler]
  -[AMSBagNetworkDataSource loadWithCompletion:]
  -[AMSBagNetworkDataSource _invalidateCacheNotification:]
  -[AMSBagNetworkDataSource cachedResult]
  -[AMSBagNetworkDataSource setCurrentLoadTask:]
  -[AMSBagNetworkDataSource activeFailure]
  -[AMSBagNetworkDataSource dealloc]
  -[AMSBagNetworkDataSource setCachedResult:]
  -[AMSBagNetworkDataSource expirationDate]
  -[AMSBagNetworkDataSource setDefaultValue:forKey:]
  -[AMSBagNetworkDataSource dataSourceChangedHandler]


AMSBagNetworkTaskResult : NSObject
 @property  NSDictionary *data
 @property  NSDate *expirationDate
 @property  BOOL expired
 @property  NSString *storefront

  // instance methods
  -[AMSBagNetworkTaskResult .cxx_destruct]
  -[AMSBagNetworkTaskResult expired]
  -[AMSBagNetworkTaskResult data]
  -[AMSBagNetworkTaskResult setExpirationDate:]
  -[AMSBagNetworkTaskResult initWithData:]
  -[AMSBagNetworkTaskResult setData:]
  -[AMSBagNetworkTaskResult setStorefront:]
  -[AMSBagNetworkTaskResult expirationDate]
  -[AMSBagNetworkTaskResult storefront]


AMSBagNetworkTask : AMSTask <NSURLSessionTaskDelegate, AMSURLProtocolDelegate>
 @property  AMSURLSession *URLSession
 @property  NSString *logKey
 @property  AMSProcessInfo *clientInfo
 @property  NSString *profile
 @property  NSString *profileVersion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSBagNetworkTask _setURLCookieNames:forProfile:]
  +[AMSBagNetworkTask bagAccountForAccountMediaType:]
  +[AMSBagNetworkTask bagStorefrontForAccountMediaType:]
  +[AMSBagNetworkTask _defaultURLCookieNames]
  +[AMSBagNetworkTask _URLCookieNamesForProfile:]
  +[AMSBagNetworkTask _deviceString]
  +[AMSBagNetworkTask _setStorefrontFromURLResponse:bagData:]
  +[AMSBagNetworkTask _OSBuildTypeString]
  +[AMSBagNetworkTask bagAccountPromiseForAccountMediaType:]
  +[AMSBagNetworkTask bagStorefrontPromiseForAccountMediaType:]
  +[AMSBagNetworkTask _shouldReloadDataForOriginalCookies:newCookies:]

  // instance methods
  -[AMSBagNetworkTask URLSession]
  -[AMSBagNetworkTask setProfile:]
  -[AMSBagNetworkTask _cookiesForNames:]
  -[AMSBagNetworkTask URLSession:dataTask:didReceiveResponse:completionHandler:]
  -[AMSBagNetworkTask logKey]
  -[AMSBagNetworkTask setClientInfo:]
  -[AMSBagNetworkTask .cxx_destruct]
  -[AMSBagNetworkTask clientInfo]
  -[AMSBagNetworkTask _shouldRetryForResult:cookieNames:urlCookies:newStorefront:]
  -[AMSBagNetworkTask profileVersion]
  -[AMSBagNetworkTask _createRequestWithCookieNames:storefront:]
  -[AMSBagNetworkTask profile]
  -[AMSBagNetworkTask setURLSession:]
  -[AMSBagNetworkTask initWithClientInfo:profile:profileVersion:]
  -[AMSBagNetworkTask setLogKey:]
  -[AMSBagNetworkTask _updateStorefrontSuffixIfNecessaryWithBagData:]
  -[AMSBagNetworkTask performFetch]
  -[AMSBagNetworkTask setProfileVersion:]


AMSBagURLParser : NSObject
  // class methods
  +[AMSBagURLParser _rangeOfTemplateInURLString:]
  +[AMSBagURLParser _firstVariableInTemplate:includeTags:]
  +[AMSBagURLParser _rangeofSubstringWithOpeningTag:closingTag:inString:]
  +[AMSBagURLParser URLBySubstitutingVariablesInURLString:usingBlock:]


AMSBagValue : NSObject
 @property  ACAccount *account
 @property  <AMSBagDataSourceProtocol> *dataSource
 @property  NSString *key
 @property  NSArray *transformBlocks
 @property  unsigned long valueType
 @property  {optional<AMSCore::Bag>=(?=c{Bag=^^?{shared_ptr<AMSCore::IBagDataSource>=^{IBagDataSource}^{__shared_weak_count}}})B} bag
 @property  BOOL loaded

  // class methods
  +[AMSBagValue globalBagValueStorage]
  +[AMSBagValue _value:isKindOfValueType:]
  +[AMSBagValue _valueFromDictionary:forBagKey:]
  +[AMSBagValue frozenBagValueWithKey:value:valueType:]
  +[AMSBagValue failingBagValueWithKey:valueType:error:]
  +[AMSBagValue bagValueWithKey:valueType:valuePromise:]
  +[AMSBagValue _NSErrorFromError:]

  // instance methods
  -[AMSBagValue setValueType:]
  -[AMSBagValue setAccount:]
  -[AMSBagValue setKey:]
  -[AMSBagValue account]
  -[AMSBagValue setDataSource:]
  -[AMSBagValue .cxx_construct]
  -[AMSBagValue .cxx_destruct]
  -[AMSBagValue valueType]
  -[AMSBagValue bag]
  -[AMSBagValue isLoaded]
  -[AMSBagValue dataSource]
  -[AMSBagValue initWithBag:key:valueType:account:]
  -[AMSBagValue initWithDataSource:key:valueType:]
  -[AMSBagValue initWithDataSource:key:valueType:account:]
  -[AMSBagValue _processedDefaultValue:]
  -[AMSBagValue transformBlocks]
  -[AMSBagValue setTransformBlocks:]
  -[AMSBagValue _applyTransformsToValue:index:completion:]
  -[AMSBagValue transformWithBlock:]
  -[AMSBagValue _handleFailureWithError:completion:]
  -[AMSBagValue _handleSuccessWithValue:isDefault:completion:]
  -[AMSBagValue valuePromise]
  -[AMSBagValue valueWithCompletion:]
  -[AMSBagValue key]
  -[AMSBagValue setBag:]
  -[AMSBagValue valueWithError:]


AMSBinaryPromise : NSObject
 @property  AMSMutablePromise *backingPromise

  // class methods
  +[AMSBinaryPromise _globalPromiseStorage]
  +[AMSBinaryPromise promiseWithPromise:]
  +[AMSBinaryPromise promiseWithError:]
  +[AMSBinaryPromise promiseWithSuccess]
  +[AMSBinaryPromise promiseWithAny:]
  +[AMSBinaryPromise promiseWithFlattenedPromises:]
  +[AMSBinaryPromise promiseWithAll:]
  +[AMSBinaryPromise _globalPromiseStorageAccessQueue]

  // instance methods
  -[AMSBinaryPromise resultWithError:]
  -[AMSBinaryPromise addSuccessBlock:]
  -[AMSBinaryPromise waitUntilFinishedWithTimeout:]
  -[AMSBinaryPromise thenWithBlock:]
  -[AMSBinaryPromise completionHandlerAdapter]
  -[AMSBinaryPromise waitUntilFinished]
  -[AMSBinaryPromise resultWithTimeout:error:]
  -[AMSBinaryPromise catchWithBlock:]
  -[AMSBinaryPromise .cxx_destruct]
  -[AMSBinaryPromise _removeFromGlobalPromiseStorage]
  -[AMSBinaryPromise backingPromise]
  -[AMSBinaryPromise init]
  -[AMSBinaryPromise cancel]
  -[AMSBinaryPromise finishWithSuccess:error:]
  -[AMSBinaryPromise setBackingPromise:]
  -[AMSBinaryPromise addErrorBlock:]
  -[AMSBinaryPromise continueWithBlock:]
  -[AMSBinaryPromise finishWithPromise:]
  -[AMSBinaryPromise addFinishBlock:]
  -[AMSBinaryPromise finishWithError:]
  -[AMSBinaryPromise finishWithSuccess]
  -[AMSBinaryPromise promiseAdapter]


AMSBiometrics : NSObject
  // class methods
  +[AMSBiometrics setState:forAccount:]
  +[AMSBiometrics identityMap]
  +[AMSBiometrics isIdentityMapValid]
  +[AMSBiometrics deleteKeysWithError:]
  +[AMSBiometrics ACLVersionForConstraints:]
  +[AMSBiometrics ACLVersionForAccessControl:]
  +[AMSBiometrics isActionSupported:withConstraints:]
  +[AMSBiometrics stateForAccount:]
  +[AMSBiometrics minimumACLVersionForAction:]
  +[AMSBiometrics _deleteKeysWithOptions:error:]
  +[AMSBiometrics signChallenge:withAccount:clientInfo:options:]
  +[AMSBiometrics _stateHeaderValueForAccount:]
  +[AMSBiometrics setDeviceState:]
  +[AMSBiometrics disableForAccount:]
  +[AMSBiometrics _shouldAddBiometricHeader]
  +[AMSBiometrics ACLVersionForAccount:options:error:]
  +[AMSBiometrics handleResponse:session:taskInfo:]
  +[AMSBiometrics headersWithAccount:options:signatureResult:]
  +[AMSBiometrics isActionSupported:withAccessControl:]
  +[AMSBiometrics isAvailableForAccount:]
  +[AMSBiometrics resumptionHeadersFromRequest:]
  +[AMSBiometrics saveIdentityMap]
  +[AMSBiometrics deviceState]
  +[AMSBiometrics type]


AMSBiometricsDisableTask : AMSTask
 @property  ACAccount *account

  // instance methods
  -[AMSBiometricsDisableTask account]
  -[AMSBiometricsDisableTask .cxx_destruct]
  -[AMSBiometricsDisableTask initWithAccount:]
  -[AMSBiometricsDisableTask perform]


AMSBiometricsIdentityMapChangeTask : AMSTask
 @property  ACAccount *account
 @property  AMSURLSession *session
 @property  NSURLSessionTask *task

  // instance methods
  -[AMSBiometricsIdentityMapChangeTask setAccount:]
  -[AMSBiometricsIdentityMapChangeTask account]
  -[AMSBiometricsIdentityMapChangeTask .cxx_destruct]
  -[AMSBiometricsIdentityMapChangeTask setSession:]
  -[AMSBiometricsIdentityMapChangeTask initWithAccount:session:task:]
  -[AMSBiometricsIdentityMapChangeTask setTask:]
  -[AMSBiometricsIdentityMapChangeTask perform]
  -[AMSBiometricsIdentityMapChangeTask task]
  -[AMSBiometricsIdentityMapChangeTask session]


AMSBiometricsMigrator : NSObject
  // class methods
  +[AMSBiometricsMigrator migrateBiometricStateWithOptions:]


AMSBiometricsPresentationProxy : NSObject <AMSRequestPresentationDelegate>
 @property  AMSURLSession *session
 @property  NSURLSessionTask *task
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSBiometricsPresentationProxy .cxx_destruct]
  -[AMSBiometricsPresentationProxy handleAuthenticateRequest:completion:]
  -[AMSBiometricsPresentationProxy handleDialogRequest:completion:]
  -[AMSBiometricsPresentationProxy initWithSession:task:]
  -[AMSBiometricsPresentationProxy task]
  -[AMSBiometricsPresentationProxy session]


AMSBiometricsSecurityService : NSObject
  // class methods
  +[AMSBiometricsSecurityService isIdentityMapValid]
  +[AMSBiometricsSecurityService isAvailableForAccount:]
  +[AMSBiometricsSecurityService saveIdentityMap]


AMSBiometricsSignatureRequest : NSObject <NSSecureCoding>
 @property  ACAccount *account
 @property  <AMSBagProtocol> *bag
 @property  NSString *challenge
 @property  AMSProcessInfo *clientInfo
 @property  BOOL dualAction
 @property  AMSKeychainOptions *keychainOptions
 @property  ^{__SecAccessControl=} localAuthAccessControlRef
 @property  LAContext *localAuthContext
 @property  NSDictionary *localAuthOptions

  // class methods
  +[AMSBiometricsSignatureRequest biometricsSignatureRequestForURLResponse:account:session:task:clientInfo:options:error:]
  +[AMSBiometricsSignatureRequest supportsSecureCoding]

  // instance methods
  -[AMSBiometricsSignatureRequest keychainOptions]
  -[AMSBiometricsSignatureRequest initWithCoder:]
  -[AMSBiometricsSignatureRequest account]
  -[AMSBiometricsSignatureRequest .cxx_destruct]
  -[AMSBiometricsSignatureRequest bag]
  -[AMSBiometricsSignatureRequest clientInfo]
  -[AMSBiometricsSignatureRequest isDualAction]
  -[AMSBiometricsSignatureRequest initWithAccount:clientInfo:challenge:options:error:]
  -[AMSBiometricsSignatureRequest setDualAction:]
  -[AMSBiometricsSignatureRequest _localAuthOptions]
  -[AMSBiometricsSignatureRequest localAuthContext]
  -[AMSBiometricsSignatureRequest localAuthAccessControlRef]
  -[AMSBiometricsSignatureRequest setLocalAuthAccessControlRef:]
  -[AMSBiometricsSignatureRequest localAuthOptions]
  -[AMSBiometricsSignatureRequest challenge]
  -[AMSBiometricsSignatureRequest dealloc]
  -[AMSBiometricsSignatureRequest setBag:]
  -[AMSBiometricsSignatureRequest encodeWithCoder:]


AMSBiometricsSignatureResult : NSObject <NSSecureCoding>
 @property  AMSBiometricsSignatureRequest *originalRequest
 @property  NSString *signature

  // class methods
  +[AMSBiometricsSignatureResult supportsSecureCoding]

  // instance methods
  -[AMSBiometricsSignatureResult initWithCoder:]
  -[AMSBiometricsSignatureResult setSignature:]
  -[AMSBiometricsSignatureResult setOriginalRequest:]
  -[AMSBiometricsSignatureResult .cxx_destruct]
  -[AMSBiometricsSignatureResult signature]
  -[AMSBiometricsSignatureResult originalRequest]
  -[AMSBiometricsSignatureResult encodeWithCoder:]


AMSBiometricsSignatureTask : AMSTask
 @property  AMSBiometricsSignatureRequest *request

  // instance methods
  -[AMSBiometricsSignatureTask initWithRequest:]
  -[AMSBiometricsSignatureTask .cxx_destruct]
  -[AMSBiometricsSignatureTask performSignature]
  -[AMSBiometricsSignatureTask _performSignatureInProcess]
  -[AMSBiometricsSignatureTask _performSignatureOutOfProcess]
  -[AMSBiometricsSignatureTask _performCardEnrollmentCheck:]
  -[AMSBiometricsSignatureTask request]


AMSBiometricsTokenUpdateTask : AMSTask <AMSBagConsumer>
 @property  <AMSBagProtocol> *bag
 @property  AMSURLSession *session
 @property  BOOL shouldPromptUser
 @property  ACAccount *account
 @property  NSDictionary *additionalDialogMetrics
 @property  AMSProcessInfo *clientInfo
 @property  <AMSRequestPresentationDelegate> *presentationDelegate
 @property  BOOL shouldGenerateKeysOnly
 @property  BOOL shouldRequestConfirmation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSBiometricsTokenUpdateTask bagKeySet]
  +[AMSBiometricsTokenUpdateTask bagSubProfileVersion]
  +[AMSBiometricsTokenUpdateTask bagSubProfile]

  // instance methods
  -[AMSBiometricsTokenUpdateTask account]
  -[AMSBiometricsTokenUpdateTask setClientInfo:]
  -[AMSBiometricsTokenUpdateTask .cxx_destruct]
  -[AMSBiometricsTokenUpdateTask bag]
  -[AMSBiometricsTokenUpdateTask clientInfo]
  -[AMSBiometricsTokenUpdateTask initWithAccount:]
  -[AMSBiometricsTokenUpdateTask setSession:]
  -[AMSBiometricsTokenUpdateTask handleAuthenticateRequest:completion:]
  -[AMSBiometricsTokenUpdateTask handleDialogRequest:completion:]
  -[AMSBiometricsTokenUpdateTask initWithAccount:bag:]
  -[AMSBiometricsTokenUpdateTask setAdditionalDialogMetrics:]
  -[AMSBiometricsTokenUpdateTask setShouldRequestConfirmation:]
  -[AMSBiometricsTokenUpdateTask performUpdate]
  -[AMSBiometricsTokenUpdateTask _sendRequestToDaemon]
  -[AMSBiometricsTokenUpdateTask shouldPromptUser]
  -[AMSBiometricsTokenUpdateTask additionalDialogMetrics]
  -[AMSBiometricsTokenUpdateTask shouldGenerateKeysOnly]
  -[AMSBiometricsTokenUpdateTask shouldRequestConfirmation]
  -[AMSBiometricsTokenUpdateTask setShouldGenerateKeysOnly:]
  -[AMSBiometricsTokenUpdateTask setShouldPromptUser:]
  -[AMSBiometricsTokenUpdateTask presentationDelegate]
  -[AMSBiometricsTokenUpdateTask session]
  -[AMSBiometricsTokenUpdateTask setPresentationDelegate:]


AMSBridgedBagValue : AMSFrozenBagValue
 @property  AMSPromise *valuePromise

  // instance methods
  -[AMSBridgedBagValue .cxx_destruct]
  -[AMSBridgedBagValue valuePromise]
  -[AMSBridgedBagValue setValuePromise:]
  -[AMSBridgedBagValue initWithKey:valueType:valuePromise:]
  -[AMSBridgedBagValue valueWithCompletion:]


AMSBuyParams : NSObject <NSCopying, NSSecureCoding>
 @property  NSDictionary *normalizedDictionary
 @property  double price
 @property  NSDictionary *dictionary

  // class methods
  +[AMSBuyParams supportsSecureCoding]
  +[AMSBuyParams buyParamsWithString:]

  // instance methods
  -[AMSBuyParams stringValue]
  -[AMSBuyParams clear]
  -[AMSBuyParams containsKey:]
  -[AMSBuyParams initWithCoder:]
  -[AMSBuyParams objectForKeyedSubscript:]
  -[AMSBuyParams .cxx_destruct]
  -[AMSBuyParams setProperty:forKey:]
  -[AMSBuyParams setParameter:forKey:]
  -[AMSBuyParams dictionary]
  -[AMSBuyParams setObject:forKeyedSubscript:]
  -[AMSBuyParams init]
  -[AMSBuyParams price]
  -[AMSBuyParams initWithString:]
  -[AMSBuyParams _parseBuyParams:]
  -[AMSBuyParams _normalizedDictionary]
  -[AMSBuyParams normalizedDictionary]
  -[AMSBuyParams requestDataWithError:]
  -[AMSBuyParams propertyForKey:]
  -[AMSBuyParams copyWithZone:]
  -[AMSBuyParams encodeWithCoder:]
  -[AMSBuyParams parameterForKey:]


AMSCampaignAttributionResult : NSObject
 @property  NSURL *redirectURL

  // instance methods
  -[AMSCampaignAttributionResult redirectURL]
  -[AMSCampaignAttributionResult .cxx_destruct]
  -[AMSCampaignAttributionResult initWithURL:]


AMSCampaignAttributionTask : AMSTask <AMSBagConsumer>
 @property  AMSURLSession *URLSession
 @property  ACAccount *account
 @property  <AMSBagProtocol> *bag
 @property  AMSProcessInfo *clientInfo
 @property  NSArray *additionalQueryItems
 @property  NSURL *URL
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSCampaignAttributionTask bagKeySet]
  +[AMSCampaignAttributionTask bagSubProfileVersion]
  +[AMSCampaignAttributionTask bagSubProfile]
  +[AMSCampaignAttributionTask createBagForSubProfile]

  // instance methods
  -[AMSCampaignAttributionTask URLSession]
  -[AMSCampaignAttributionTask setAccount:]
  -[AMSCampaignAttributionTask account]
  -[AMSCampaignAttributionTask setClientInfo:]
  -[AMSCampaignAttributionTask .cxx_destruct]
  -[AMSCampaignAttributionTask bag]
  -[AMSCampaignAttributionTask clientInfo]
  -[AMSCampaignAttributionTask initWithURL:bag:URLSession:]
  -[AMSCampaignAttributionTask _validateAllowlist:error:]
  -[AMSCampaignAttributionTask _retrieveProcessRedirectInfoWithError:]
  -[AMSCampaignAttributionTask _parseAllowedQueryParamsFromInfo:error:]
  -[AMSCampaignAttributionTask _parseEndpointURLFromInfo:error:]
  -[AMSCampaignAttributionTask _processRedirectWithEndpointURL:error:]
  -[AMSCampaignAttributionTask _parseRedirectURLFromResult:error:]
  -[AMSCampaignAttributionTask _parseCookiesFromResult:]
  -[AMSCampaignAttributionTask _setAccountCookies:]
  -[AMSCampaignAttributionTask _queryItemNames]
  -[AMSCampaignAttributionTask _buildProcessRedirectURLWithEndpointURL:error:]
  -[AMSCampaignAttributionTask initWithURL:bag:]
  -[AMSCampaignAttributionTask _encodeRequestForURL:error:]
  -[AMSCampaignAttributionTask _processRedirectWithRequest:error:]
  -[AMSCampaignAttributionTask additionalQueryItems]
  -[AMSCampaignAttributionTask setAdditionalQueryItems:]
  -[AMSCampaignAttributionTask URL]
  -[AMSCampaignAttributionTask perform]


AMSCardAuthorizationTask : AMSTask <PKPaymentAuthorizationControllerDelegate, PKPaymentAuthorizationControllerPrivateDelegate>
 @property  AMSBinaryPromise *authorizationPromise
 @property  PKPayment *payment
 @property  BOOL didBiometricsLockout
 @property  BOOL didCancelHomeButton
 @property  NSMutableArray *userActions
 @property  long long confirmationStyle
 @property  NSString *countryCode
 @property  NSString *currencyCode
 @property  AMSMetricsEvent *metricsEvent
 @property  NSString *passSerialNumber
 @property  NSString *passTypeIdentifier
 @property  NSDictionary *paymentSession
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSCardAuthorizationTask setCountryCode:]
  -[AMSCardAuthorizationTask countryCode]
  -[AMSCardAuthorizationTask payment]
  -[AMSCardAuthorizationTask .cxx_destruct]
  -[AMSCardAuthorizationTask currencyCode]
  -[AMSCardAuthorizationTask setPayment:]
  -[AMSCardAuthorizationTask userActions]
  -[AMSCardAuthorizationTask _metricsPost]
  -[AMSCardAuthorizationTask metricsEvent]
  -[AMSCardAuthorizationTask setPassTypeIdentifier:]
  -[AMSCardAuthorizationTask paymentSession]
  -[AMSCardAuthorizationTask confirmationStyle]
  -[AMSCardAuthorizationTask setConfirmationStyle:]
  -[AMSCardAuthorizationTask passSerialNumber]
  -[AMSCardAuthorizationTask setPassSerialNumber:]
  -[AMSCardAuthorizationTask _presentPaymentRequest:]
  -[AMSCardAuthorizationTask authorizationPromise]
  -[AMSCardAuthorizationTask setAuthorizationPromise:]
  -[AMSCardAuthorizationTask _metricsTimestamp]
  -[AMSCardAuthorizationTask didBiometricsLockout]
  -[AMSCardAuthorizationTask _metricsUserActionDictionary]
  -[AMSCardAuthorizationTask setDidBiometricsLockout:]
  -[AMSCardAuthorizationTask setDidCancelHomeButton:]
  -[AMSCardAuthorizationTask paymentAuthorizationControllerDidFinish:]
  -[AMSCardAuthorizationTask paymentAuthorizationController:didAuthorizePayment:handler:]
  -[AMSCardAuthorizationTask didCancelHomeButton]
  -[AMSCardAuthorizationTask setUserActions:]
  -[AMSCardAuthorizationTask setMetricsEvent:]
  -[AMSCardAuthorizationTask performCardAuthorization]
  -[AMSCardAuthorizationTask paymentAuthorizationController:didEncounterAuthorizationEvent:]
  -[AMSCardAuthorizationTask paymentAuthorizationController:willFinishWithError:]
  -[AMSCardAuthorizationTask initWithPaymentSession:]
  -[AMSCardAuthorizationTask passTypeIdentifier]
  -[AMSCardAuthorizationTask setCurrencyCode:]


AMSCardAutoEnrollment : NSObject <AMSBagConsumer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSCardAutoEnrollment bagKeySet]
  +[AMSCardAutoEnrollment bagSubProfileVersion]
  +[AMSCardAutoEnrollment bagSubProfile]
  +[AMSCardAutoEnrollment createBagForSubProfile]


AMSCardEnrollment : NSObject
  // class methods
  +[AMSCardEnrollment shouldUseApplePayClassicWithBag:]
  +[AMSCardEnrollment shouldUseAutoEnrollmentWithBag:]
  +[AMSCardEnrollment paymentServicesMerchantURL]
  +[AMSCardEnrollment _currentIdentifier]
  +[AMSCardEnrollment _paymentServicesMerchantURLPromise]
  +[AMSCardEnrollment updateAutoEnrollmentIdentifier]
  +[AMSCardEnrollment shouldAttemptApplePayClassicWithBag:accessControlRef:]
  +[AMSCardEnrollment shouldAttemptAutoEnrollmentWithBag:accessControlRef:]
  +[AMSCardEnrollment clearAutoEnrollmentIdentifier]
  +[AMSCardEnrollment shouldAttemptApplePayClassicWithCountryCode:paymentNetworks:accessControlRef:]
  +[AMSCardEnrollment shouldAttemptAutoEnrollmentWithCountryCode:]
  +[AMSCardEnrollment _cardEligibilityStatusForCountryCode:]
  +[AMSCardEnrollment _shouldAttemptApplePayWithCountryCode:paymentNetworks:]
  +[AMSCardEnrollment shouldAttemptAutoEnrollment]
  +[AMSCardEnrollment beginCardEnrollmentAttemptWithBag:account:]
  +[AMSCardEnrollment finishCardEnrollmentAttemptWithBag:buyParams:purchaseResult:]
  +[AMSCardEnrollment shouldUseAutoEnrollmentWithPercentage:sessionDuration:]


AMSCardEnrollmentEligibilityTask : AMSTask
 @property  <AMSBagProtocol> *bag
 @property  NSString *countryCode

  // instance methods
  -[AMSCardEnrollmentEligibilityTask countryCode]
  -[AMSCardEnrollmentEligibilityTask .cxx_destruct]
  -[AMSCardEnrollmentEligibilityTask bag]
  -[AMSCardEnrollmentEligibilityTask initWithBag:]
  -[AMSCardEnrollmentEligibilityTask init]
  -[AMSCardEnrollmentEligibilityTask initWithCountryCode:]
  -[AMSCardEnrollmentEligibilityTask initWithBag:countryCode:]
  -[AMSCardEnrollmentEligibilityTask performCanWriteBillingInfoQueryWithPassTypeIdentifier:serialNumber:]
  -[AMSCardEnrollmentEligibilityTask _cardTypeForPassTypeIdentifier:serialNumber:]
  -[AMSCardEnrollmentEligibilityTask _performSilentEnrollmentCheckWithRequest:]
  -[AMSCardEnrollmentEligibilityTask canWriteBillingInfoWithPassTypeIdentifier:serialNumber:completion:]
  -[AMSCardEnrollmentEligibilityTask setBag:]


AMSCardEnrollmentPaymentSessionService : NSObject
  // class methods
  +[AMSCardEnrollmentPaymentSessionService performSilentEnrollmentWithRequest:logKey:]


AMSCardEnrollmentPaymentSessionTask : AMSTask
  // class methods
  +[AMSCardEnrollmentPaymentSessionTask performPaymentSessionEnrollmentWithBag:]
  +[AMSCardEnrollmentPaymentSessionTask _paymentServiceURLStringForMerchantURL:]
  +[AMSCardEnrollmentPaymentSessionTask paymentSessionWithBag:completion:]
  +[AMSCardEnrollmentPaymentSessionTask _performSilentEnrollmentPaymentSessionWithContext:]


AMSCardEnrollmentVerificationTask : AMSTask
  // class methods
  +[AMSCardEnrollmentVerificationTask verifyPayment:isDefault:bag:completion:]
  +[AMSCardEnrollmentVerificationTask verifyPayment:isDefault:completion:]
  +[AMSCardEnrollmentVerificationTask _performSilentEnrollmentPaymentSessionWithContext:]
  +[AMSCardEnrollmentVerificationTask performPaymentVerificationForPayment:isDefault:]
  +[AMSCardEnrollmentVerificationTask performPaymentVerificationForPayment:isDefault:bag:]


AMSCardMetadataRegistrationResult : NSObject
 @property  NSString *cardArtwork
 @property  long long cardType
 @property  NSString *descriptionLong
 @property  NSString *descriptionShort
 @property  long long paymentNetwork
 @property  NSString *serialNumber
 @property  NSString *suffix
 @property  NSDictionary *dictionary

  // instance methods
  -[AMSCardMetadataRegistrationResult serialNumber]
  -[AMSCardMetadataRegistrationResult cardType]
  -[AMSCardMetadataRegistrationResult setSerialNumber:]
  -[AMSCardMetadataRegistrationResult initWithCardArtwork:cardType:descriptionLong:descriptionShort:paymentNetwork:serialNumber:suffix:]
  -[AMSCardMetadataRegistrationResult suffix]
  -[AMSCardMetadataRegistrationResult .cxx_destruct]
  -[AMSCardMetadataRegistrationResult dictionary]
  -[AMSCardMetadataRegistrationResult init]
  -[AMSCardMetadataRegistrationResult setSuffix:]
  -[AMSCardMetadataRegistrationResult descriptionLong]
  -[AMSCardMetadataRegistrationResult setDictionary:]
  -[AMSCardMetadataRegistrationResult setDescriptionLong:]
  -[AMSCardMetadataRegistrationResult descriptionShort]
  -[AMSCardMetadataRegistrationResult setPaymentNetwork:]
  -[AMSCardMetadataRegistrationResult setCardArtwork:]
  -[AMSCardMetadataRegistrationResult paymentNetwork]
  -[AMSCardMetadataRegistrationResult setDescriptionShort:]
  -[AMSCardMetadataRegistrationResult setCardType:]
  -[AMSCardMetadataRegistrationResult cardArtwork]


AMSCardRegistrationResult : NSObject
 @property  NSData *cardData
 @property  NSURL *brokerURL
 @property  NSURL *paymentServicesURL

  // instance methods
  -[AMSCardRegistrationResult brokerURL]
  -[AMSCardRegistrationResult paymentServicesURL]
  -[AMSCardRegistrationResult .cxx_destruct]
  -[AMSCardRegistrationResult cardData]
  -[AMSCardRegistrationResult initWithCardRegistrationResponse:]


AMSCardRegistrationTask : AMSTask
 @property  NSString *countryCode
 @property  NSString *merchantIdentifier

  // instance methods
  -[AMSCardRegistrationTask setCountryCode:]
  -[AMSCardRegistrationTask countryCode]
  -[AMSCardRegistrationTask .cxx_destruct]
  -[AMSCardRegistrationTask _performCardRegistration]
  -[AMSCardRegistrationTask merchantIdentifier]
  -[AMSCardRegistrationTask initWithCountryCode:merchantIdentifier:]
  -[AMSCardRegistrationTask performCardRegistration]
  -[AMSCardRegistrationTask setMerchantIdentifier:]


AMSCarrierLinkParams : NSObject
 @property  NSDictionary *fields
 @property  NSString *adamId
 @property  NSString *linkParamsString

  // class methods
  +[AMSCarrierLinkParams _queryDictionaryFromString:]

  // instance methods
  -[AMSCarrierLinkParams setFields:]
  -[AMSCarrierLinkParams adamId]
  -[AMSCarrierLinkParams fields]
  -[AMSCarrierLinkParams .cxx_destruct]
  -[AMSCarrierLinkParams initWithString:]
  -[AMSCarrierLinkParams linkParamsString]


AMSCarrierLinkResult : NSObject
 @property  NSError *error
 @property  NSDictionary *response
 @property  NSNumber *statusCode
 @property  NSString *channelCustomerId
 @property  AMSCarrierLinkParams *linkParams
 @property  NSString *productCode

  // instance methods
  -[AMSCarrierLinkResult .cxx_destruct]
  -[AMSCarrierLinkResult linkParams]
  -[AMSCarrierLinkResult productCode]
  -[AMSCarrierLinkResult initWithResponse:linkParams:]
  -[AMSCarrierLinkResult channelCustomerId]
  -[AMSCarrierLinkResult response]
  -[AMSCarrierLinkResult statusCode]
  -[AMSCarrierLinkResult error]


AMSCarrierLinkTask : AMSTask <AMSURLProtocolDelegate, NSURLSessionDelegate, AMSBagConsumer>
 @property  ACAccount *account
 @property  AMSEngagement *engagementHandler
 @property  NSString *guid
 @property  AMSMetrics *metrics
 @property  NSString *msisdn
 @property  AMSURLRequestEncoder *requestEncoder
 @property  AMSURLSession *urlSession
 @property  AMSPromise *pacTokenPromise
 @property  NSDictionary *additionalLinkingParameters
 @property  <AMSBagProtocol> *bag
 @property  AMSProcessInfo *clientInfo
 @property  <AMSCarrierLinkTaskDelegate> *delegate
 @property  AMSCarrierLinkParams *linkParams
 @property  NSDictionary *metricsOverlay
 @property  NSString *productCode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSCarrierLinkTask bagKeySet]
  +[AMSCarrierLinkTask bagSubProfileVersion]
  +[AMSCarrierLinkTask bagSubProfile]
  +[AMSCarrierLinkTask createBagForSubProfile]

  // instance methods
  -[AMSCarrierLinkTask AMSURLSession:task:handleDialogRequest:completion:]
  -[AMSCarrierLinkTask AMSURLSession:task:handleAuthenticateRequest:completion:]
  -[AMSCarrierLinkTask initWithAccount:bag:engagementHandler:guid:linkParams:metrics:msisdn:pacTokenPromise:productCode:requestEncoder:urlSession:]
  -[AMSCarrierLinkTask setAccount:]
  -[AMSCarrierLinkTask requestEncoder]
  -[AMSCarrierLinkTask account]
  -[AMSCarrierLinkTask msisdn]
  -[AMSCarrierLinkTask guid]
  -[AMSCarrierLinkTask setClientInfo:]
  -[AMSCarrierLinkTask AMSURLSession:task:handleEngagementRequest:completion:]
  -[AMSCarrierLinkTask .cxx_destruct]
  -[AMSCarrierLinkTask bag]
  -[AMSCarrierLinkTask _pacToken]
  -[AMSCarrierLinkTask clientInfo]
  -[AMSCarrierLinkTask setDelegate:]
  -[AMSCarrierLinkTask urlSession]
  -[AMSCarrierLinkTask linkParams]
  -[AMSCarrierLinkTask metricsOverlay]
  -[AMSCarrierLinkTask productCode]
  -[AMSCarrierLinkTask _linkParameters]
  -[AMSCarrierLinkTask _performLinkingWithValidations]
  -[AMSCarrierLinkTask pacTokenPromise]
  -[AMSCarrierLinkTask _metricsEventFromCarrierLinkResult:error:]
  -[AMSCarrierLinkTask _recordEngagementMetricsEvent:]
  -[AMSCarrierLinkTask additionalLinkingParameters]
  -[AMSCarrierLinkTask _promptForAccount]
  -[AMSCarrierLinkTask _performLinking]
  -[AMSCarrierLinkTask _linkURLRequest]
  -[AMSCarrierLinkTask _resultDecodingURLResult:]
  -[AMSCarrierLinkTask _linkFailureFromResult:]
  -[AMSCarrierLinkTask _performDelegateAuthenticationWithRequest:completion:]
  -[AMSCarrierLinkTask engagementHandler]
  -[AMSCarrierLinkTask initWithAccount:bag:linkParams:productCode:]
  -[AMSCarrierLinkTask _delegateHandleEngagementRequest:completion:]
  -[AMSCarrierLinkTask setAdditionalLinkingParameters:]
  -[AMSCarrierLinkTask setMetricsOverlay:]
  -[AMSCarrierLinkTask metrics]
  -[AMSCarrierLinkTask perform]
  -[AMSCarrierLinkTask delegate]


AMSCarrierMSISDNProvider : NSObject <AMSCarrierMSISDNProviding>
 @property  NSString *msisdn
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSCarrierMSISDNProvider msisdn]


AMSCarrierOfferRegistrationTask : AMSTask <AMSBagConsumer>
 @property  NSArray *carriers
 @property  AMSURLRequestEncoder *checkOfferRequestEncoder
 @property  NSString *deviceGUID
 @property  NSString *msisdn
 @property  AMSURLRequestEncoder *registrationRequestEncoder
 @property  AMSURLSession *urlSession
 @property  AMSPromise *pacTokenPromise
 @property  ACAccount *account
 @property  <AMSBagProtocol> *bag
 @property  AMSProcessInfo *clientInfo
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSCarrierOfferRegistrationTask bagKeySet]
  +[AMSCarrierOfferRegistrationTask bagSubProfileVersion]
  +[AMSCarrierOfferRegistrationTask bagSubProfile]
  +[AMSCarrierOfferRegistrationTask invalidParameterError:]
  +[AMSCarrierOfferRegistrationTask pollingIntervalFromBag:]
  +[AMSCarrierOfferRegistrationTask createBagForSubProfile]

  // instance methods
  -[AMSCarrierOfferRegistrationTask account]
  -[AMSCarrierOfferRegistrationTask msisdn]
  -[AMSCarrierOfferRegistrationTask setClientInfo:]
  -[AMSCarrierOfferRegistrationTask .cxx_destruct]
  -[AMSCarrierOfferRegistrationTask bag]
  -[AMSCarrierOfferRegistrationTask _pacToken]
  -[AMSCarrierOfferRegistrationTask clientInfo]
  -[AMSCarrierOfferRegistrationTask initWithAccount:bag:carriers:checkOfferRequestEncoder:deviceGUID:msisdn:pacTokenPromise:registrationRequestEncoder:urlSession:]
  -[AMSCarrierOfferRegistrationTask carriers]
  -[AMSCarrierOfferRegistrationTask initWithAccount:bag:]
  -[AMSCarrierOfferRegistrationTask urlSession]
  -[AMSCarrierOfferRegistrationTask deviceGUID]
  -[AMSCarrierOfferRegistrationTask _hasOffers]
  -[AMSCarrierOfferRegistrationTask pacTokenPromise]
  -[AMSCarrierOfferRegistrationTask _performRegistrationFlow]
  -[AMSCarrierOfferRegistrationTask _includesAllowedCarrier]
  -[AMSCarrierOfferRegistrationTask _registerCarrierOffersToAccount]
  -[AMSCarrierOfferRegistrationTask checkOfferRequestEncoder]
  -[AMSCarrierOfferRegistrationTask _checkOffersBody]
  -[AMSCarrierOfferRegistrationTask _checkOffersRequest]
  -[AMSCarrierOfferRegistrationTask _parseCheckOffersResult:]
  -[AMSCarrierOfferRegistrationTask _registrationRequest]
  -[AMSCarrierOfferRegistrationTask registrationRequestEncoder]
  -[AMSCarrierOfferRegistrationTask _registrationBody]
  -[AMSCarrierOfferRegistrationTask initWithAccount:bag:carriers:deviceGUID:msisdn:]
  -[AMSCarrierOfferRegistrationTask perform]


AMSCircularBuffer : NSObject
 @property  NSObject<OS_dispatch_queue> *accessQueue
 @property  unsigned long currentIndex
 @property  NSMutableArray *buffer
 @property  NSArray *allObjects
 @property  unsigned long count
 @property  unsigned long maxSize

  // class methods
  +[AMSCircularBuffer _rearrangeObjects:forCurrentIndex:]

  // instance methods
  -[AMSCircularBuffer maxSize]
  -[AMSCircularBuffer setAccessQueue:]
  -[AMSCircularBuffer initWithMaxSize:]
  -[AMSCircularBuffer accessQueue]
  -[AMSCircularBuffer addObject:]
  -[AMSCircularBuffer .cxx_destruct]
  -[AMSCircularBuffer count]
  -[AMSCircularBuffer setMaxSize:]
  -[AMSCircularBuffer init]
  -[AMSCircularBuffer setBuffer:]
  -[AMSCircularBuffer flush]
  -[AMSCircularBuffer _flush]
  -[AMSCircularBuffer setCurrentIndex:]
  -[AMSCircularBuffer allObjects]
  -[AMSCircularBuffer currentIndex]
  -[AMSCircularBuffer buffer]


AMSClientCertificateTask : AMSTask
 @property  NSObject<OS_dispatch_queue> *dispatchQueue
 @property  AMSKeychainOptions *options

  // instance methods
  -[AMSClientCertificateTask options]
  -[AMSClientCertificateTask setOptions:]
  -[AMSClientCertificateTask .cxx_destruct]
  -[AMSClientCertificateTask performClientCertChainRequest]
  -[AMSClientCertificateTask initWithOptions:]
  -[AMSClientCertificateTask dispatchQueue]
  -[AMSClientCertificateTask _baaOptionsWithOptions:error:]
  -[AMSClientCertificateTask setDispatchQueue:]


AMSClipMediaTask : AMSTask <AMSBagConsumer>
 @property  <AMSBagProtocol> *bag
 @property  NSString *bundleID
 @property  NSString *clientID
 @property  AMSProcessInfo *clientInfo
 @property  NSNumber *externalVersionID
 @property  NSURL *URL
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSClipMediaTask bagKeySet]
  +[AMSClipMediaTask bagSubProfileVersion]
  +[AMSClipMediaTask bagSubProfile]
  +[AMSClipMediaTask createBagForSubProfile]

  // instance methods
  -[AMSClipMediaTask bundleID]
  -[AMSClipMediaTask setURL:]
  -[AMSClipMediaTask setClientInfo:]
  -[AMSClipMediaTask .cxx_destruct]
  -[AMSClipMediaTask bag]
  -[AMSClipMediaTask clientInfo]
  -[AMSClipMediaTask setClientID:]
  -[AMSClipMediaTask setBundleID:]
  -[AMSClipMediaTask URL]
  -[AMSClipMediaTask externalVersionID]
  -[AMSClipMediaTask _performJourneysLookup]
  -[AMSClipMediaTask _performNetworkLookup]
  -[AMSClipMediaTask _componentsPromise]
  -[AMSClipMediaTask setExternalVersionID:]
  -[AMSClipMediaTask initWithClientID:bundleID:URL:bag:]
  -[AMSClipMediaTask perform]
  -[AMSClipMediaTask setBag:]
  -[AMSClipMediaTask clientID]


AMSClipMediaURLBuilder : NSObject
 @property  <AMSBagProtocol> *bag
 @property  NSString *bundleID
 @property  NSNumber *externalVersionID

  // instance methods
  -[AMSClipMediaURLBuilder bundleID]
  -[AMSClipMediaURLBuilder .cxx_destruct]
  -[AMSClipMediaURLBuilder bag]
  -[AMSClipMediaURLBuilder _queryPromise]
  -[AMSClipMediaURLBuilder setBundleID:]
  -[AMSClipMediaURLBuilder externalVersionID]
  -[AMSClipMediaURLBuilder initWithBundleID:bag:]
  -[AMSClipMediaURLBuilder setExternalVersionID:]
  -[AMSClipMediaURLBuilder _devicePlatform]
  -[AMSClipMediaURLBuilder setBag:]
  -[AMSClipMediaURLBuilder _hostPromise]
  -[AMSClipMediaURLBuilder _pathPromise]
  -[AMSClipMediaURLBuilder build]


AMSCommandLineDialogTask : AMSTask
 @property  AMSDialogRequest *request
 @property  double maximumDialogWidth
 @property  double minimumDialogWidth
 @property  double dialogPadding
 @property  long long automaticButtonSelection

  // instance methods
  -[AMSCommandLineDialogTask present]
  -[AMSCommandLineDialogTask initWithRequest:]
  -[AMSCommandLineDialogTask .cxx_destruct]
  -[AMSCommandLineDialogTask request]
  -[AMSCommandLineDialogTask dialogPadding]
  -[AMSCommandLineDialogTask _printMessage:]
  -[AMSCommandLineDialogTask minimumDialogWidth]
  -[AMSCommandLineDialogTask maximumDialogWidth]
  -[AMSCommandLineDialogTask _createHorizontolLineWithWidth:]
  -[AMSCommandLineDialogTask _createText:width:centered:omitLeftPipe:]
  -[AMSCommandLineDialogTask _createTextfieldWithTextfield:width:]
  -[AMSCommandLineDialogTask _createLinesFromText:width:]
  -[AMSCommandLineDialogTask setDialogPadding:]
  -[AMSCommandLineDialogTask _gatherTextfieldInput]
  -[AMSCommandLineDialogTask automaticButtonSelection]
  -[AMSCommandLineDialogTask _gatherButtonInput]
  -[AMSCommandLineDialogTask _getUserInput]
  -[AMSCommandLineDialogTask setMaximumDialogWidth:]
  -[AMSCommandLineDialogTask setMinimumDialogWidth:]
  -[AMSCommandLineDialogTask setAutomaticButtonSelection:]


AMSCommerceMigrator : NSObject
  // class methods
  +[AMSCommerceMigrator migrateCommerceAccountsWithOptions:]


AMSCommerceService : NSObject
  // class methods
  +[AMSCommerceService sharedConnectionAccessQueue]
  +[AMSCommerceService proxyObjectAsync]
  +[AMSCommerceService sharedConnection]
  +[AMSCommerceService setSharedConnection:]
  +[AMSCommerceService proxyObject]
  +[AMSCommerceService _createXPCConnection]


AMSContentInfo : NSObject <NSSecureCoding>
 @property  NSString *cacheKey
 @property  NSDate *created
 @property  NSDate *expires
 @property  NSString *path
 @property  NSString *version

  // class methods
  +[AMSContentInfo supportsSecureCoding]

  // instance methods
  -[AMSContentInfo initWithCoder:]
  -[AMSContentInfo setPath:]
  -[AMSContentInfo cacheKey]
  -[AMSContentInfo setExpires:]
  -[AMSContentInfo .cxx_destruct]
  -[AMSContentInfo setCacheKey:]
  -[AMSContentInfo setVersion:]
  -[AMSContentInfo setCreated:]
  -[AMSContentInfo expires]
  -[AMSContentInfo path]
  -[AMSContentInfo version]
  -[AMSContentInfo created]
  -[AMSContentInfo encodeWithCoder:]


AMSContentRating : NSObject
 @property  NSString *contentRatingID
 @property  NSURL *imageURL
 @property  NSString *kind
 @property  NSString *label
 @property  NSString *name
 @property  NSString *ratingDescription
 @property  NSNumber *value

  // class methods
  +[AMSContentRating contentRatingWithDictionary:]

  // instance methods
  -[AMSContentRating label]
  -[AMSContentRating name]
  -[AMSContentRating imageURL]
  -[AMSContentRating .cxx_destruct]
  -[AMSContentRating contentRatingID]
  -[AMSContentRating ratingDescription]
  -[AMSContentRating value]
  -[AMSContentRating initWithDictionary:]
  -[AMSContentRating kind]


AMSContractBagShim : NSObject <AMSBagProtocol>
 @property  NSObject *bagContract
 @property  BOOL expired
 @property  NSDate *expirationDate
 @property  NSString *profile
 @property  NSString *profileVersion
 @property  AMSProcessInfo *processInfo
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSContractBagShim _callSelector:onBagContract:]

  // instance methods
  -[AMSContractBagShim initWithBagContract:]
  -[AMSContractBagShim bagContract]
  -[AMSContractBagShim setBagContract:]
  -[AMSContractBagShim .cxx_destruct]
  -[AMSContractBagShim isExpired]
  -[AMSContractBagShim boolForKey:]
  -[AMSContractBagShim isLoaded]
  -[AMSContractBagShim integerForKey:]
  -[AMSContractBagShim profileVersion]
  -[AMSContractBagShim stringForKey:]
  -[AMSContractBagShim arrayForKey:]
  -[AMSContractBagShim URLForKey:]
  -[AMSContractBagShim profile]
  -[AMSContractBagShim doubleForKey:]
  -[AMSContractBagShim _selectorForBagKey:]
  -[AMSContractBagShim _bagValueForBagKey:bagValueType:]
  -[AMSContractBagShim createSnapshotWithCompletion:]
  -[AMSContractBagShim expirationDate]
  -[AMSContractBagShim dictionaryForKey:]


AMSCookieDatabase : NSObject <AMSSQLiteConnectionDelegate>
 @property  AMSSQLiteConnection *connection
 @property  NSNumber *dsid
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSCookieDatabase _dataVaultPathForDSID:]
  +[AMSCookieDatabase _databasePathForDSID:]
  +[AMSCookieDatabase cookieDatabaseForDSID:error:]

  // instance methods
  -[AMSCookieDatabase dsid]
  -[AMSCookieDatabase connectionNeedsResetForCorruption:]
  -[AMSCookieDatabase .cxx_destruct]
  -[AMSCookieDatabase connection]
  -[AMSCookieDatabase _executeStatement:columns:forCookieProperties:error:]
  -[AMSCookieDatabase _bindCookieProperties:column:position:using:]
  -[AMSCookieDatabase initWithConnection:dsid:]
  -[AMSCookieDatabase _cookieDictionaryForCursor:]
  -[AMSCookieDatabase _addCookieProperties:error:]
  -[AMSCookieDatabase _removeCookieProperties:error:]
  -[AMSCookieDatabase cookiePropertiesWithError:]
  -[AMSCookieDatabase updateCookiesWithCookiePropertiesToAdd:cookiePropertiesToRemove:error:]
  -[AMSCookieDatabase close]
  -[AMSCookieDatabase dealloc]


AMSCookieDatabaseSchema : NSObject
  // class methods
  +[AMSCookieDatabaseSchema createOrUpdateSchemaUsingConnection:]
  +[AMSCookieDatabaseSchema migrateVersion0to1WithMigration:]


AMSCookieService : NSObject <AMSCookieServiceInterface>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSCookieService sharedService]

  // instance methods
  -[AMSCookieService _inMemoryStorage]
  -[AMSCookieService getCookiesForAccount:withCompletion:]
  -[AMSCookieService updateCookiesWithCookiesToAdd:cookiesToRemove:forAccount:withCompletion:]
  -[AMSCookieService cookiePromiseForAccount:]


AMSCookieStorage : NSObject
  // class methods
  +[AMSCookieStorage isFeatureEnabled]
  +[AMSCookieStorage cookiesForAccount:error:]
  +[AMSCookieStorage updateCookiesWithCookiesToAdd:cookiesToRemove:forAccount:error:]


AMSConnectionDelegateProxy : NSObject
 @property  id delegate

  // class methods
  +[AMSConnectionDelegateProxy proxyWithDelegate:]

  // instance methods
  -[AMSConnectionDelegateProxy methodSignatureForSelector:]
  -[AMSConnectionDelegateProxy .cxx_destruct]
  -[AMSConnectionDelegateProxy setDelegate:]
  -[AMSConnectionDelegateProxy delegate]
  -[AMSConnectionDelegateProxy forwardInvocation:]


AMSDaemonConnection : NSObject <AMSDServiceBrokerProtocol>
 @property  NSXPCConnection *sharedConnection
 @property  NSObject<OS_dispatch_queue> *sharedConnectionAccessQueue
 @property  NSMutableSet *activePromises
 @property  NSMutableArray *interruptionHandlers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSDaemonConnection pushNotificationService]
  -[AMSDaemonConnection securityServiceProxyWithDelegate:]
  -[AMSDaemonConnection _connectionProxyForAsync:accessBlock:]
  -[AMSDaemonConnection sharedConnectionAccessQueue]
  -[AMSDaemonConnection activePromises]
  -[AMSDaemonConnection _checkOutPromise:]
  -[AMSDaemonConnection .cxx_destruct]
  -[AMSDaemonConnection sharedConnection]
  -[AMSDaemonConnection fraudReportServiceProxy]
  -[AMSDaemonConnection init]
  -[AMSDaemonConnection _checkInPromise:]
  -[AMSDaemonConnection interruptionHandlers]
  -[AMSDaemonConnection callService:then:]
  -[AMSDaemonConnection setSharedConnection:]
  -[AMSDaemonConnection _handleInvalidation]
  -[AMSDaemonConnection deviceMessengerProxyWithDelegate:]
  -[AMSDaemonConnection purchaseServiceProxy]
  -[AMSDaemonConnection _handleInterruption]
  -[AMSDaemonConnection dealloc]
  -[AMSDaemonConnection addInterruptionHandler:]
  -[AMSDaemonConnection cookieServiceProxy]


AMSDaemonConnectionInterface : NSObject
  // class methods
  +[AMSDaemonConnectionInterface interface]
  +[AMSDaemonConnectionInterface _deviceMessengerClientInterface]
  +[AMSDaemonConnectionInterface _cookieServiceInterface]
  +[AMSDaemonConnectionInterface _deviceMessengerServiceInterface]
  +[AMSDaemonConnectionInterface _fraudReportServiceInterface]
  +[AMSDaemonConnectionInterface _purchaseServiceInterface]
  +[AMSDaemonConnectionInterface _securityClientInterface]
  +[AMSDaemonConnectionInterface _securityServiceInterface]
  +[AMSDaemonConnectionInterface _configureURLPresentationDelegateClasses:]
  +[AMSDaemonConnectionInterface _setUpSecurityInterfaceApplePayClassic:]
  +[AMSDaemonConnectionInterface _setUpSecurityInterfaceBiometricSelectors:]
  +[AMSDaemonConnectionInterface _setUpSecurityInterfaceHandleResponseSelector:]
  +[AMSDaemonConnectionInterface _setUpSecurityInterfaceSignedHeadersSelector:]
  +[AMSDaemonConnectionInterface _setUpSecurityInterfaceSilentEnrollmentSelector:]


AMSData : NSObject
  // class methods
  +[AMSData decompressedDataWithGzippedData:]
  +[AMSData _dataEncodingFromResponse:]
  +[AMSData objectWithData:encoding:error:]
  +[AMSData objectWithData:response:error:]
  +[AMSData dataEncodingFromContentType:]
  +[AMSData compressedGzippedDataWithData:]
  +[AMSData dataWithObject:encoding:error:]


AMSDatabaseHelper : NSObject
  // class methods
  +[AMSDatabaseHelper databaseFolderNameForType:]
  +[AMSDatabaseHelper databasePathForDataVaultPath:type:]
  +[AMSDatabaseHelper removeDatabaseForDataVaultPath:]
  +[AMSDatabaseHelper _databaseNameForType:]
  +[AMSDatabaseHelper _dataVaultURLForDataVaultPath:]
  +[AMSDatabaseHelper _addSkipBackupAttribute:forURL:]
  +[AMSDatabaseHelper _cachesURLForCachePath:]
  +[AMSDatabaseHelper removeDatabaseForCachePath:]
  +[AMSDatabaseHelper databasePathForCachePath:type:]
  +[AMSDatabaseHelper _applyProtectionClassForDirectoryAtURL:]


AMSDataMigrator : NSObject
  // class methods
  +[AMSDataMigrator performMigrationWithOptions:]


AMSDataMigratorOptions : NSObject
 @property  NSString *currentBuildVersion
 @property  NSArray *optionsArray
 @property  NSString *previousBuildVersion
 @property  unsigned long scenario

  // class methods
  +[AMSDataMigratorOptions _stringFromOptionsArray:atIndex:]

  // instance methods
  -[AMSDataMigratorOptions currentBuildVersion]
  -[AMSDataMigratorOptions .cxx_destruct]
  -[AMSDataMigratorOptions scenario]
  -[AMSDataMigratorOptions setPreviousBuildVersion:]
  -[AMSDataMigratorOptions init]
  -[AMSDataMigratorOptions setCurrentBuildVersion:]
  -[AMSDataMigratorOptions initWithOptionsArray:]
  -[AMSDataMigratorOptions optionsArray]
  -[AMSDataMigratorOptions previousBuildVersion]
  -[AMSDataMigratorOptions setScenario:]


AMSDefaults : NSObject
  // class methods
  +[AMSDefaults _setBool:forKey:]
  +[AMSDefaults setQAMode:]
  +[AMSDefaults enableRemoteSecuritySigning]
  +[AMSDefaults _integerForKey:defaultValue:domain:]
  +[AMSDefaults _setInteger:forKey:]
  +[AMSDefaults _integerForKey:defaultValue:]
  +[AMSDefaults shouldSampleWithPercentageValue:sessionDurationValue:identifier:completion:]
  +[AMSDefaults _setBool:forKey:domain:]
  +[AMSDefaults _valueForKey:]
  +[AMSDefaults cardEnrollmentSilent]
  +[AMSDefaults setAllowUpsellEnrollmentForAppliedAccounts:]
  +[AMSDefaults setDidSetUpServerDataCache:]
  +[AMSDefaults _setValue:forKey:]
  +[AMSDefaults setEnableRemoteSecuritySigning:]
  +[AMSDefaults ss_ignoreServerTrustEvaluation]
  +[AMSDefaults enableCameraRedeem]
  +[AMSDefaults setShowSpyglassPurchases:]
  +[AMSDefaults perfomedDeviceOfferSetup]
  +[AMSDefaults setAlwaysSendGUID:]
  +[AMSDefaults setMescalCertExpiration:]
  +[AMSDefaults setCardEnrollmentManual:]
  +[AMSDefaults disableHARLogging]
  +[AMSDefaults setStorefrontSuffixes:]
  +[AMSDefaults cardEnrollmentUpsell]
  +[AMSDefaults bagURLCookies]
  +[AMSDefaults didRetrieveTVOffers]
  +[AMSDefaults setDeviceBiometricIdentities:]
  +[AMSDefaults setDidRetrieveTVOffers:]
  +[AMSDefaults migratedToNewCookieStorage]
  +[AMSDefaults alwaysSendGUID]
  +[AMSDefaults pushEnvironment]
  +[AMSDefaults setCardEnrollmentAutomatic:]
  +[AMSDefaults useNewCookieStorage]
  +[AMSDefaults setPerfomedDeviceOfferSetup:]
  +[AMSDefaults multiUserContainerID]
  +[AMSDefaults forceEngagementPurchaseSuccess]
  +[AMSDefaults setTreatmentOverrides:]
  +[AMSDefaults disablePrivacyAcknowledgement]
  +[AMSDefaults setMigratedDeviceOffersForWatch:]
  +[AMSDefaults migratedDeviceOffers]
  +[AMSDefaults setPushEnvironment:]
  +[AMSDefaults devMode]
  +[AMSDefaults setSharedStoreReviewMetrics:forProcess:]
  +[AMSDefaults setForceEngagementPurchaseSuccess:]
  +[AMSDefaults setForceLoadUrlMetrics:]
  +[AMSDefaults setMetricsTimingWindowStartTime:]
  +[AMSDefaults setIncludeFullResponseInHARLogging:]
  +[AMSDefaults demoAccount]
  +[AMSDefaults setDefaultPaymentPassIdentifier:]
  +[AMSDefaults setEnablePurchaseQueue:]
  +[AMSDefaults forceLoadUrlMetrics]
  +[AMSDefaults lastCarrierOfferRegistrationDate]
  +[AMSDefaults setMediaTokens:]
  +[AMSDefaults acknowledgePrivacyOverride]
  +[AMSDefaults setMarketingItemOverrides:]
  +[AMSDefaults setAlwaysSendCacheBuster:]
  +[AMSDefaults setDevMode:]
  +[AMSDefaults _allKeysForDomain:]
  +[AMSDefaults setIncludeFullRequestInHARLogging:]
  +[AMSDefaults cardEnrollmentManual]
  +[AMSDefaults showSpyglassPurchases]
  +[AMSDefaults disableStubbedMarketingItems]
  +[AMSDefaults deviceOfferEligibility]
  +[AMSDefaults setStreamHARToDisk:]
  +[AMSDefaults allKeys]
  +[AMSDefaults treatmentOverrides]
  +[AMSDefaults setApplePayClassic:]
  +[AMSDefaults allowDuplicateAccounts]
  +[AMSDefaults cardEnrollmentAutomatic]
  +[AMSDefaults deviceBiometricIdentities]
  +[AMSDefaults setDisablePrivacyAcknowledgement:]
  +[AMSDefaults deviceOffersSerialNumber]
  +[AMSDefaults sharedDatabaseChangeToken]
  +[AMSDefaults showSandboxAccountUI]
  +[AMSDefaults setEnableCameraRedeem:]
  +[AMSDefaults marketingItemOverrides]
  +[AMSDefaults setSourceOverrides:]
  +[AMSDefaults metricsCanaryIdentifier]
  +[AMSDefaults streamHARToDisk]
  +[AMSDefaults enablePurchaseQueue]
  +[AMSDefaults bagOverrideIgnoredKeys]
  +[AMSDefaults setCardEnrollmentSilent:]
  +[AMSDefaults setLogHARData:]
  +[AMSDefaults logHARData]
  +[AMSDefaults shouldSampleWithPercentage:sessionDuration:identifier:]
  +[AMSDefaults QAMode]
  +[AMSDefaults lastMigratedBuildVersion]
  +[AMSDefaults metricsTimingWindowStartTime]
  +[AMSDefaults migratedDeviceOffersForWatch]
  +[AMSDefaults includeFullResponseInHARLogging]
  +[AMSDefaults bagOverrides]
  +[AMSDefaults sourceOverrides]
  +[AMSDefaults setDeviceRegistrationBlacklist:]
  +[AMSDefaults sharedStoreReviewMetricsForProcess:]
  +[AMSDefaults alwaysSendCacheBuster]
  +[AMSDefaults setDemoAccount:]
  +[AMSDefaults setLastMigratedBuildVersion:]
  +[AMSDefaults deviceBiometricsState]
  +[AMSDefaults setAllowDuplicateAccounts:]
  +[AMSDefaults setDisableHARLogging:]
  +[AMSDefaults setDidRetrieveDeviceOffersEligibility:]
  +[AMSDefaults didSetUpServerDataCache]
  +[AMSDefaults setBagURLCookies:]
  +[AMSDefaults defaultPaymentPassIdentifier]
  +[AMSDefaults didRetrieveDeviceOffersEligibility]
  +[AMSDefaults authenticationStarted]
  +[AMSDefaults setAcknowledgePrivacyOverride:]
  +[AMSDefaults _cleanupSampleSessions]
  +[AMSDefaults mescalCertExpiration]
  +[AMSDefaults setMetricsCanaryIdentifier:]
  +[AMSDefaults setAutomationMode:]
  +[AMSDefaults mediaTokens]
  +[AMSDefaults setSharedDatabaseChangeToken:]
  +[AMSDefaults reversePushEnabled]
  +[AMSDefaults setCardEnrollmentUpsell:]
  +[AMSDefaults setMigratedToNewCookieStorage:]
  +[AMSDefaults harURLFilters]
  +[AMSDefaults deviceRegistrationBlacklist]
  +[AMSDefaults setMediaTokenOverride:]
  +[AMSDefaults setDidRetrieveDeviceOffers:]
  +[AMSDefaults _setValue:forKey:domain:]
  +[AMSDefaults deviceGroups]
  +[AMSDefaults useNewAccountStore]
  +[AMSDefaults setIgnoreServerTrustEvaluation:]
  +[AMSDefaults setMigratedStorageToDefaultsForNonAMSInternal:]
  +[AMSDefaults _resultFromSampleSession:isActive:]
  +[AMSDefaults setBagOverrideIgnoredKeys:]
  +[AMSDefaults ignoreServerTrustEvaluation]
  +[AMSDefaults setDeviceBiometricsState:]
  +[AMSDefaults _boolForKey:defaultValue:domain:]
  +[AMSDefaults setDeviceOfferEligibility:]
  +[AMSDefaults setMigratedDeviceOffers:]
  +[AMSDefaults setJourneysURLOverrides:]
  +[AMSDefaults setLastCarrierOfferRegistrationDate:]
  +[AMSDefaults mediaTokenOverride]
  +[AMSDefaults allowUpsellEnrollmentForAppliedAccounts]
  +[AMSDefaults storefrontSuffixes]
  +[AMSDefaults setDeviceGroups:]
  +[AMSDefaults setHarURLFilters:]
  +[AMSDefaults migratedPrivacyAcknowledgements]
  +[AMSDefaults setBagOverrides:]
  +[AMSDefaults setReversePushEnabled:]
  +[AMSDefaults applePayClassic]
  +[AMSDefaults journeysURLOverrides]
  +[AMSDefaults _valueForKey:domain:]
  +[AMSDefaults setShowSandboxAccountUI:]
  +[AMSDefaults updateBadgeIdsForBundle:block:]
  +[AMSDefaults setMigratedPrivacyAcknowledgements:]
  +[AMSDefaults automationMode]
  +[AMSDefaults didRetrieveDeviceOffers]
  +[AMSDefaults includeFullRequestInHARLogging]
  +[AMSDefaults journeysURLOverride]
  +[AMSDefaults setDisableStubbedMarketingItems:]
  +[AMSDefaults setJourneysURLOverride:]
  +[AMSDefaults _boolForKey:defaultValue:]
  +[AMSDefaults setAuthenticationStarted:]
  +[AMSDefaults migratedStorageToDefaultsForNonAMSInternal]
  +[AMSDefaults _randomDouble]


AMSDelegateAuthenticateRequest : NSObject <NSSecureCoding>
 @property  NSString *challenge
 @property  NSString *userAgent

  // class methods
  +[AMSDelegateAuthenticateRequest supportsSecureCoding]
  +[AMSDelegateAuthenticateRequest preferredUserAgent]

  // instance methods
  -[AMSDelegateAuthenticateRequest setUserAgent:]
  -[AMSDelegateAuthenticateRequest initWithCoder:]
  -[AMSDelegateAuthenticateRequest .cxx_destruct]
  -[AMSDelegateAuthenticateRequest userAgent]
  -[AMSDelegateAuthenticateRequest initWithChallenge:userAgent:]
  -[AMSDelegateAuthenticateRequest challenge]
  -[AMSDelegateAuthenticateRequest setChallenge:]
  -[AMSDelegateAuthenticateRequest encodeWithCoder:]


AMSDelegateAuthenticateResult : NSObject <NSSecureCoding>
 @property  AMSDelegateAuthenticateRequest *request
 @property  NSDictionary *serverResponse
 @property  NSString *token

  // class methods
  +[AMSDelegateAuthenticateResult supportsSecureCoding]

  // instance methods
  -[AMSDelegateAuthenticateResult initWithCoder:]
  -[AMSDelegateAuthenticateResult .cxx_destruct]
  -[AMSDelegateAuthenticateResult serverResponse]
  -[AMSDelegateAuthenticateResult request]
  -[AMSDelegateAuthenticateResult token]
  -[AMSDelegateAuthenticateResult initWithServerResponse:]
  -[AMSDelegateAuthenticateResult encodeWithCoder:]


AMSDelegateAuthenticateTask : AMSTask <AMSURLProtocolDelegate, NSURLSessionDelegate, AMSBagConsumer>
 @property  ACAccount *account
 @property  AMSURLSession *session
 @property  <AMSBagProtocol> *bag
 @property  NSDictionary *formData
 @property  AMSDelegateAuthenticateRequest *request
 @property  AMSBiometricsSignatureResult *signatureResult
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSDelegateAuthenticateTask bagKeySet]
  +[AMSDelegateAuthenticateTask bagSubProfileVersion]
  +[AMSDelegateAuthenticateTask bagSubProfile]
  +[AMSDelegateAuthenticateTask createBagForSubProfile]

  // instance methods
  -[AMSDelegateAuthenticateTask setAccount:]
  -[AMSDelegateAuthenticateTask account]
  -[AMSDelegateAuthenticateTask .cxx_destruct]
  -[AMSDelegateAuthenticateTask bag]
  -[AMSDelegateAuthenticateTask formData]
  -[AMSDelegateAuthenticateTask request]
  -[AMSDelegateAuthenticateTask signatureResult]
  -[AMSDelegateAuthenticateTask setFormData:]
  -[AMSDelegateAuthenticateTask initWithBag:account:]
  -[AMSDelegateAuthenticateTask setSignatureResult:]
  -[AMSDelegateAuthenticateTask _performDelegateAuthenticationWithError:]
  -[AMSDelegateAuthenticateTask _encodedURLRequestWithError:]
  -[AMSDelegateAuthenticateTask initWithDelegateAuthenticateRequest:bag:account:]
  -[AMSDelegateAuthenticateTask performDelegateAuthentication]
  -[AMSDelegateAuthenticateTask _init]
  -[AMSDelegateAuthenticateTask session]


AMSDelegatePaymentSheetRequest : AMSPaymentSheetRequest
 @property  PKPaymentRequest *paymentRequest

  // instance methods
  -[AMSDelegatePaymentSheetRequest .cxx_destruct]
  -[AMSDelegatePaymentSheetRequest paymentRequest]
  -[AMSDelegatePaymentSheetRequest setPaymentRequest:]


AMSDelegatePaymentSheetTask : AMSPaymentSheetTask
 @property  AMSPromise *paymentSheetPromise
 @property  AMSDelegatePaymentSheetRequest *request

  // instance methods
  -[AMSDelegatePaymentSheetTask setRequest:]
  -[AMSDelegatePaymentSheetTask .cxx_destruct]
  -[AMSDelegatePaymentSheetTask request]
  -[AMSDelegatePaymentSheetTask initWithRequest:bag:]
  -[AMSDelegatePaymentSheetTask perform]


AMSDelegatePurchaseRequest : AMSDelegateAuthenticateRequest <NSSecureCoding>
 @property  NSString *deviceName
 @property  AMSPurchaseResult *purchaseResult

  // class methods
  +[AMSDelegatePurchaseRequest supportsSecureCoding]

  // instance methods
  -[AMSDelegatePurchaseRequest initWithCoder:]
  -[AMSDelegatePurchaseRequest deviceName]
  -[AMSDelegatePurchaseRequest .cxx_destruct]
  -[AMSDelegatePurchaseRequest setDeviceName:]
  -[AMSDelegatePurchaseRequest setPurchaseResult:]
  -[AMSDelegatePurchaseRequest purchaseResult]
  -[AMSDelegatePurchaseRequest initWithPurchaseResult:challenge:userAgent:]
  -[AMSDelegatePurchaseRequest encodeWithCoder:]


AMSDelegatePurchaseResult : AMSDelegateAuthenticateResult <NSSecureCoding>
 @property  AMSDelegatePurchaseRequest *request

  // class methods
  +[AMSDelegatePurchaseResult supportsSecureCoding]

  // instance methods
  -[AMSDelegatePurchaseResult setRequest:]
  -[AMSDelegatePurchaseResult initWithCoder:]
  -[AMSDelegatePurchaseResult .cxx_destruct]
  -[AMSDelegatePurchaseResult request]
  -[AMSDelegatePurchaseResult encodeWithCoder:]


AMSDelegatePurchaseTask : AMSDelegateAuthenticateTask
 @property  AMSBiometricsSignatureRequest *biometricsRequest
 @property  AMSURLResult *delegateAuthResult
 @property  AMSURLTaskInfo *delegateAuthTaskInfo
 @property  AMSPaymentSheetResult *paymentSheetResult
 @property  AMSDelegatePaymentSheetTask *paymentSheetTask
 @property  AMSDelegatePurchaseRequest *request

  // instance methods
  -[AMSDelegatePurchaseTask AMSURLSession:task:handleAuthenticateRequest:completion:]
  -[AMSDelegatePurchaseTask .cxx_destruct]
  -[AMSDelegatePurchaseTask request]
  -[AMSDelegatePurchaseTask cancel]
  -[AMSDelegatePurchaseTask paymentSheetTask]
  -[AMSDelegatePurchaseTask setDelegateAuthTaskInfo:]
  -[AMSDelegatePurchaseTask setDelegateAuthResult:]
  -[AMSDelegatePurchaseTask _parseFormDataFromResult:]
  -[AMSDelegatePurchaseTask paymentSheetResult]
  -[AMSDelegatePurchaseTask _parseBiometricsSignatureRequestFromTask:]
  -[AMSDelegatePurchaseTask _performAuthenticateTaskWithPaymentSheet]
  -[AMSDelegatePurchaseTask setBiometricsRequest:]
  -[AMSDelegatePurchaseTask biometricsRequest]
  -[AMSDelegatePurchaseTask _performPaymentSheetTask]
  -[AMSDelegatePurchaseTask setPaymentSheetResult:]
  -[AMSDelegatePurchaseTask _performAuthenticateTaskWithPaymentSheetResult:]
  -[AMSDelegatePurchaseTask delegateAuthTaskInfo]
  -[AMSDelegatePurchaseTask delegateAuthResult]
  -[AMSDelegatePurchaseTask setPaymentSheetTask:]
  -[AMSDelegatePurchaseTask initWithDelegatePurchaseRequest:bag:account:]
  -[AMSDelegatePurchaseTask performDelegatePurchase]


AMSDeprecatedBagContract : NSObject <AMSDeviceOfferBagContract, AMSMetricsBagContract, AMSMescalBagContract, AMSLookupBagContract>
 @property  <AMSBagProtocol> *bag
 @property  AMSBagValue *appleMusicDeviceOfferDeepLink
 @property  AMSBagValue *iCloudDeviceOfferDeepLink
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  AMSBagValue *metricsURL
 @property  AMSBagValue *metricsDictionary
 @property  AMSBagValue *metricsUrl
 @property  AMSBagValue *apsEnabledPatterns
 @property  AMSBagValue *apsSamplingPercent
 @property  AMSBagValue *apsAllowedProductTypes
 @property  AMSBagValue *guidRegexes
 @property  AMSBagValue *guidSchemes
 @property  <AMSMescalBagContract> *mescalContract
 @property  AMSBagValue *storefrontSuffix
 @property  AMSBagValue *TLSSamplingPercentage
 @property  AMSBagValue *TLSSamplingSessionDuration
 @property  AMSBagValue *TFOSamplingPercentage
 @property  AMSBagValue *TFOSamplingSessionDuration
 @property  AMSBagValue *trustedDomains
 @property  <AMSMetricsBagContract> *metricsContract
 @property  AMSBagValue *mescalCertificateURL
 @property  AMSBagValue *mescalSetupURL
 @property  AMSBagValue *mescalPrimingURL
 @property  AMSBagValue *mescalSignedActions
 @property  AMSBagValue *mescalSignSapRequests
 @property  AMSBagValue *mescalSignSapResponses
 @property  AMSBagValue *personalizedLookupURL
 @property  AMSBagValue *unpersonalizedLookupURL

  // instance methods
  -[AMSDeprecatedBagContract metricsDictionary]
  -[AMSDeprecatedBagContract storefrontSuffix]
  -[AMSDeprecatedBagContract TFOSamplingPercentage]
  -[AMSDeprecatedBagContract .cxx_destruct]
  -[AMSDeprecatedBagContract metricsContract]
  -[AMSDeprecatedBagContract bag]
  -[AMSDeprecatedBagContract initWithBag:]
  -[AMSDeprecatedBagContract mescalSetupURL]
  -[AMSDeprecatedBagContract TFOSamplingSessionDuration]
  -[AMSDeprecatedBagContract mescalSignSapResponses]
  -[AMSDeprecatedBagContract personalizedLookupURL]
  -[AMSDeprecatedBagContract unpersonalizedLookupURL]
  -[AMSDeprecatedBagContract mescalSignSapRequests]
  -[AMSDeprecatedBagContract mescalContract]
  -[AMSDeprecatedBagContract TLSSamplingPercentage]
  -[AMSDeprecatedBagContract apsSamplingPercent]
  -[AMSDeprecatedBagContract guidRegexes]
  -[AMSDeprecatedBagContract mescalCertificateURL]
  -[AMSDeprecatedBagContract metricsURL]
  -[AMSDeprecatedBagContract guidSchemes]
  -[AMSDeprecatedBagContract iCloudDeviceOfferDeepLink]
  -[AMSDeprecatedBagContract apsAllowedProductTypes]
  -[AMSDeprecatedBagContract mescalSignedActions]
  -[AMSDeprecatedBagContract metricsUrl]
  -[AMSDeprecatedBagContract setBag:]
  -[AMSDeprecatedBagContract TLSSamplingSessionDuration]
  -[AMSDeprecatedBagContract appleMusicDeviceOfferDeepLink]
  -[AMSDeprecatedBagContract trustedDomains]
  -[AMSDeprecatedBagContract apsEnabledPatterns]


AMSDevice : NSObject <AMSBagConsumer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSDevice bagKeySet]
  +[AMSDevice productVersion]
  +[AMSDevice bagSubProfileVersion]
  +[AMSDevice bagSubProfile]
  +[AMSDevice deviceIsiPhone]
  +[AMSDevice deviceIsiPad]
  +[AMSDevice screenHeight]
  +[AMSDevice serialNumber]
  +[AMSDevice isGift]
  +[AMSDevice screenWidth]
  +[AMSDevice screenScale]
  +[AMSDevice startListeningForDeviceLanguageChangeWithBagContract:]
  +[AMSDevice buildVersion]
  +[AMSDevice saveDeviceOffers:]
  +[AMSDevice compatibleProductType]
  +[AMSDevice name]
  +[AMSDevice expressedIntent]
  +[AMSDevice deviceIsBundle]
  +[AMSDevice thinnedAppVariantId]
  +[AMSDevice deviceOffers]
  +[AMSDevice _setRawDeviceOffers:offersStore:]
  +[AMSDevice registerCompanionWithSerialNumber:bag:]
  +[AMSDevice deviceIsAudioAccessory]
  +[AMSDevice isSecureElementAvailable]
  +[AMSDevice isRunningInStoreDemoMode]
  +[AMSDevice _followUpItemWithIdentifier:account:priority:bag:]
  +[AMSDevice tearDownAllDeviceOfferFollowUpsForAccount:logKey:]
  +[AMSDevice deviceName]
  +[AMSDevice _performAuth]
  +[AMSDevice setDeviceOffersCheckEncodingForRequestParameters:]
  +[AMSDevice deviceIsAppleTVSimulator]
  +[AMSDevice deviceIsiPod]
  +[AMSDevice saveDeviceOfferEligibility:]
  +[AMSDevice _removeDeviceOfferRegistrationItem:fromDeviceOfferStore:]
  +[AMSDevice deviceOffersForType:]
  +[AMSDevice language]
  +[AMSDevice stopListeningForDeviceLanguageChange]
  +[AMSDevice deviceIsSeedBuild]
  +[AMSDevice operatingSystem]
  +[AMSDevice deviceIsiPodSimulator]
  +[AMSDevice postDeviceOfferFollowUpWithIdentifier:account:priority:bag:logKey:]
  +[AMSDevice postAllDeviceOfferFollowUpsForAccount:priority:bagContract:logKey:]
  +[AMSDevice _dataForNVRAMKey:]
  +[AMSDevice clearRegistrationBlacklist]
  +[AMSDevice phoneNumber]
  +[AMSDevice productType]
  +[AMSDevice postAllDeviceOfferFollowUpsForAccount:priority:bag:logKey:]
  +[AMSDevice deviceGUID]
  +[AMSDevice deviceIsiPhoneSimulator]
  +[AMSDevice _systemVersionDictionary]
  +[AMSDevice _telephonyClient]
  +[AMSDevice removeDeviceOfferWithIdentifier:account:bagContract:logKey:]
  +[AMSDevice deviceIsInternalBuild]
  +[AMSDevice uniqueDeviceId]
  +[AMSDevice deviceIsAppleWatch]
  +[AMSDevice deviceIsAppleWatchSimulator]
  +[AMSDevice saveDeviceOffersForAccount:response:logKey:]
  +[AMSDevice localIPAddress]
  +[AMSDevice registrationBlacklist]
  +[AMSDevice hardwarePlatform]
  +[AMSDevice setBiometricState:]
  +[AMSDevice _voicePreferredPhoneNumberContextWithClient:]
  +[AMSDevice macAddressData]
  +[AMSDevice deviceOffersContainType:]
  +[AMSDevice deviceIsMac]
  +[AMSDevice deviceIsiPadSimulator]
  +[AMSDevice deviceIsAppleTV]
  +[AMSDevice _shouldPostOffersUpdatedNotification:oldOffers:]
  +[AMSDevice shouldPresentSetupOffersForAccount:issues:]
  +[AMSDevice carrierNames]
  +[AMSDevice cachedRegistrationGroups]
  +[AMSDevice isEligibleForOffers]
  +[AMSDevice removeDeviceOfferWithIdentifier:account:bag:logKey:]
  +[AMSDevice createBagForSubProfile]
  +[AMSDevice _activePhoneNumberContexts]
  +[AMSDevice removeDeviceOfferRegistrationItem:]
  +[AMSDevice MLBSerialNumber]
  +[AMSDevice registerCompanionWithSerialNumber:]
  +[AMSDevice _setDeviceEligibilityKeepingExistingDeviceOffers:offersStore:]
  +[AMSDevice voicePreferredPACToken]
  +[AMSDevice postDeviceOfferFollowUpWithIdentifier:account:priority:bagContract:logKey:]
  +[AMSDevice biometricState]
  +[AMSDevice _notificationIdFromFollowUpId:account:]
  +[AMSDevice tearDownDeviceOfferFollowUpWithIdentifier:account:logKey:]
  +[AMSDevice voicePreferredPhoneNumberContextInfo]
  +[AMSDevice macAddress]
  +[AMSDevice shouldPresentSetupOffersForAccount:]
  +[AMSDevice ROMAddress]


AMSBAAKeychainItems : NSObject
 @property  NSData *BAACert
 @property  ^{__SecKey=} BIKKeyRef
 @property  NSData *IntermediateRootCert

  // instance methods
  -[AMSBAAKeychainItems BAACert]
  -[AMSBAAKeychainItems .cxx_destruct]
  -[AMSBAAKeychainItems BIKKeyRef]
  -[AMSBAAKeychainItems setBAACert:]
  -[AMSBAAKeychainItems IntermediateRootCert]
  -[AMSBAAKeychainItems setBIKKeyRef:]
  -[AMSBAAKeychainItems setIntermediateRootCert:]


AMSDeviceIdentityCertificateTask : AMSTask
 @property  <AMSBagProtocol> *bag
 @property  NSObject<OS_dispatch_queue> *requestQueue

  // instance methods
  -[AMSDeviceIdentityCertificateTask requestQueue]
  -[AMSDeviceIdentityCertificateTask .cxx_destruct]
  -[AMSDeviceIdentityCertificateTask bag]
  -[AMSDeviceIdentityCertificateTask initWithBag:]
  -[AMSDeviceIdentityCertificateTask performDeviceIdentityRequestForAbsinthe]
  -[AMSDeviceIdentityCertificateTask performDeviceIdentityRequestWithBaaOptions:ttlBagKey:logInformation:]
  -[AMSDeviceIdentityCertificateTask performDeviceIdentityRequestForFraudReport]
  -[AMSDeviceIdentityCertificateTask setBag:]
  -[AMSDeviceIdentityCertificateTask setRequestQueue:]


AMSDeviceUpdateHandlerInfo : NSObject
 @property  AMSDeviceMessengerFilter *filter
 @property  @? block

  // instance methods
  -[AMSDeviceUpdateHandlerInfo setBlock:]
  -[AMSDeviceUpdateHandlerInfo setFilter:]
  -[AMSDeviceUpdateHandlerInfo .cxx_destruct]
  -[AMSDeviceUpdateHandlerInfo filter]
  -[AMSDeviceUpdateHandlerInfo block]


AMSDeviceMessenger : NSObject <AMSDeviceMessengerClientInterface>
 @property  AMSDaemonConnection *connection
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSMutableArray *updateHandlers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSDeviceMessenger setUpdateHandlers:]
  -[AMSDeviceMessenger .cxx_destruct]
  -[AMSDeviceMessenger updateHandlers]
  -[AMSDeviceMessenger setConnection:]
  -[AMSDeviceMessenger init]
  -[AMSDeviceMessenger setQueue:]
  -[AMSDeviceMessenger connection]
  -[AMSDeviceMessenger deviceMessengerDidReceiveMessage:]
  -[AMSDeviceMessenger deviceMessengerDidReceiveReply:]
  -[AMSDeviceMessenger deviceMessengerDidClearMessage:]
  -[AMSDeviceMessenger deviceMessengerDidUpdateDevices]
  -[AMSDeviceMessenger clearDialog:]
  -[AMSDeviceMessenger queue]
  -[AMSDeviceMessenger _getProxyObject]
  -[AMSDeviceMessenger _identifierFromDialogRequest:]
  -[AMSDeviceMessenger _sendDelegateUpdateForMessage:]
  -[AMSDeviceMessenger dialogsWithFilter:]
  -[AMSDeviceMessenger addUpdateHandlerForType:filter:handler:]
  -[AMSDeviceMessenger sendDialog:account:]


AMSDeviceMessengerFilter : NSObject
 @property  long long messageType
 @property  ACAccount *account
 @property  long long deviceType

  // instance methods
  -[AMSDeviceMessengerFilter setMessageType:]
  -[AMSDeviceMessengerFilter messageType]
  -[AMSDeviceMessengerFilter setAccount:]
  -[AMSDeviceMessengerFilter deviceType]
  -[AMSDeviceMessengerFilter account]
  -[AMSDeviceMessengerFilter .cxx_destruct]
  -[AMSDeviceMessengerFilter setDeviceType:]
  -[AMSDeviceMessengerFilter matchesMessage:]


AMSDeviceOffer : NSObject <AMSBagConsumer>
 @property  NSNumber *adamId
 @property  NSString *description
 @property  BOOL downgrading
 @property  NSString *offerIdentifier
 @property  unsigned long offerType
 @property  NSSet *serialNumbers
 @property  BOOL subscribed
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *debugDescription

  // class methods
  +[AMSDeviceOffer bagSubProfileVersion]
  +[AMSDeviceOffer bagSubProfile]
  +[AMSDeviceOffer offersSetFromArray:]
  +[AMSDeviceOffer createBagForSubProfile]

  // instance methods
  -[AMSDeviceOffer isSubscribed]
  -[AMSDeviceOffer adamId]
  -[AMSDeviceOffer setAdamId:]
  -[AMSDeviceOffer .cxx_destruct]
  -[AMSDeviceOffer isEqual:]
  -[AMSDeviceOffer serialNumbers]
  -[AMSDeviceOffer setSubscribed:]
  -[AMSDeviceOffer initWithDictionary:]
  -[AMSDeviceOffer isDowngrading]
  -[AMSDeviceOffer offerIdentifier]
  -[AMSDeviceOffer initWithOfferIdentifier:]
  -[AMSDeviceOffer setDowngrading:]
  -[AMSDeviceOffer setOfferIdentifier:]
  -[AMSDeviceOffer offerType]
  -[AMSDeviceOffer setDescription:]


AMSDeviceOfferEligibilityTask : NSObject
 @property  <AMSBagProtocol> *bag
 @property  NSString *deviceGUID
 @property  AMSURLSession *urlSession
 @property  NSString *masterSerialNumber

  // instance methods
  -[AMSDeviceOfferEligibilityTask .cxx_destruct]
  -[AMSDeviceOfferEligibilityTask bag]
  -[AMSDeviceOfferEligibilityTask urlSession]
  -[AMSDeviceOfferEligibilityTask deviceGUID]
  -[AMSDeviceOfferEligibilityTask setUrlSession:]
  -[AMSDeviceOfferEligibilityTask _eligibilityRequest]
  -[AMSDeviceOfferEligibilityTask _deviceEligibilityEncoderWithBag:clientInfo:]
  -[AMSDeviceOfferEligibilityTask _deviceEligibilityRequestParametersWithGroups:]
  -[AMSDeviceOfferEligibilityTask _offersDecodedFromResult:]
  -[AMSDeviceOfferEligibilityTask masterSerialNumber]
  -[AMSDeviceOfferEligibilityTask _accountEligibilityEncoderWithBag:account:clientInfo:]
  -[AMSDeviceOfferEligibilityTask _accountEligibilityRequestParametersWithIdentifiers:]
  -[AMSDeviceOfferEligibilityTask initWithBag:deviceGUID:masterSerialNumber:urlSession:]
  -[AMSDeviceOfferEligibilityTask performAnonymousDeviceEligibility:clientInfo:]
  -[AMSDeviceOfferEligibilityTask performAccountEligibility:forOffers:clientInfo:]
  -[AMSDeviceOfferEligibilityTask setBag:]


AMSDeviceOfferMigrator : NSObject
  // class methods
  +[AMSDeviceOfferMigrator migrateDeviceOffersWithOptions:]


AMSDeviceOfferRegistrationGroup : NSObject <AMSStorageDatabasePersistable>
 @property  NSArray *registrationItems
 @property  unsigned long validationOptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSDeviceOfferRegistrationGroup .cxx_destruct]
  -[AMSDeviceOfferRegistrationGroup isEqual:]
  -[AMSDeviceOfferRegistrationGroup registrationItems]
  -[AMSDeviceOfferRegistrationGroup initWithDatabaseEntry:]
  -[AMSDeviceOfferRegistrationGroup serializeToDictionary]
  -[AMSDeviceOfferRegistrationGroup setValidationOptions:]
  -[AMSDeviceOfferRegistrationGroup _initWithRegistrationItems:validationOptions:]
  -[AMSDeviceOfferRegistrationGroup validationOptions]
  -[AMSDeviceOfferRegistrationGroup isEqualToRegistrationGroup:]
  -[AMSDeviceOfferRegistrationGroup _serialsMatchSerialsFromGroup:]
  -[AMSDeviceOfferRegistrationGroup initWithRegistrationItems:]
  -[AMSDeviceOfferRegistrationGroup isModifiedVersionOfGroup:]


AMSDeviceOfferRegistrationItem : NSObject <AMSStorageDatabasePersistable>
 @property  NSString *model
 @property  NSString *serialNumber
 @property  NSData *validationData
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSDeviceOfferRegistrationItem serialNumber]
  -[AMSDeviceOfferRegistrationItem .cxx_destruct]
  -[AMSDeviceOfferRegistrationItem isEqual:]
  -[AMSDeviceOfferRegistrationItem model]
  -[AMSDeviceOfferRegistrationItem validationData]
  -[AMSDeviceOfferRegistrationItem initWithDatabaseEntry:]
  -[AMSDeviceOfferRegistrationItem serializeToDictionary]
  -[AMSDeviceOfferRegistrationItem initWithSerialNumber:model:validationData:]
  -[AMSDeviceOfferRegistrationItem isEqualToRegistrationItem:]


AMSDeviceOfferRegistrationPrivacyValidator : NSObject
 @property  ACAccount *account

  // class methods
  +[AMSDeviceOfferRegistrationPrivacyValidator _privacyVersionMap]
  +[AMSDeviceOfferRegistrationPrivacyValidator _masterEligibilityPrivacyOptionsIdentifiers]
  +[AMSDeviceOfferRegistrationPrivacyValidator _identifiersForValidationOptions:]
  +[AMSDeviceOfferRegistrationPrivacyValidator _isPrivacyAcknowledgementForIdentifiers:satisfiedOnAccount:]
  +[AMSDeviceOfferRegistrationPrivacyValidator _minimumAcknowledgementVersionForIdentifier:]
  +[AMSDeviceOfferRegistrationPrivacyValidator _isPrivacyAcknowledgementForIdentifier:satisfiedOnAccount:]

  // instance methods
  -[AMSDeviceOfferRegistrationPrivacyValidator account]
  -[AMSDeviceOfferRegistrationPrivacyValidator .cxx_destruct]
  -[AMSDeviceOfferRegistrationPrivacyValidator initWithAccount:]
  -[AMSDeviceOfferRegistrationPrivacyValidator canMasterDevicePerformRegistration]
  -[AMSDeviceOfferRegistrationPrivacyValidator isPrivacyRequirementMetForOptions:]


AMSDeviceOfferRegistrationTask : AMSTask <AMSBagConsumer>
 @property  ACAccount *account
 @property  <AMSBagProtocol> *bag
 @property  AMSDeviceOfferEligibilityTask *eligibilityTask
 @property  NSString *deviceGUID
 @property  NSString *masterSerialNumber
 @property  <AMSDeviceOffersTracking> *deviceOffersStore
 @property  AMSDeviceOfferRegistrationPrivacyValidator *privacyValidator
 @property  AMSURLSession *urlSession
 @property  BOOL ignoreRegistrationBlacklist
 @property  BOOL lightweightCheckOnly
 @property  AMSProcessInfo *clientInfo
 @property  NSSet *offerIdentifiers
 @property  NSArray *registrationGroups
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSDeviceOfferRegistrationTask bagKeySet]
  +[AMSDeviceOfferRegistrationTask bagSubProfileVersion]
  +[AMSDeviceOfferRegistrationTask bagSubProfile]
  +[AMSDeviceOfferRegistrationTask createBagForSubProfile]

  // instance methods
  -[AMSDeviceOfferRegistrationTask initWithAccount:bag:deviceGUID:deviceOffersStore:eligibilityTask:masterSerialNumber:privacyValidator:urlSession:]
  -[AMSDeviceOfferRegistrationTask setAccount:]
  -[AMSDeviceOfferRegistrationTask account]
  -[AMSDeviceOfferRegistrationTask setClientInfo:]
  -[AMSDeviceOfferRegistrationTask .cxx_destruct]
  -[AMSDeviceOfferRegistrationTask bag]
  -[AMSDeviceOfferRegistrationTask clientInfo]
  -[AMSDeviceOfferRegistrationTask initWithAccount:bag:]
  -[AMSDeviceOfferRegistrationTask urlSession]
  -[AMSDeviceOfferRegistrationTask deviceGUID]
  -[AMSDeviceOfferRegistrationTask setUrlSession:]
  -[AMSDeviceOfferRegistrationTask perform]
  -[AMSDeviceOfferRegistrationTask _offersDecodedFromResult:]
  -[AMSDeviceOfferRegistrationTask masterSerialNumber]
  -[AMSDeviceOfferRegistrationTask setLightweightCheckOnly:]
  -[AMSDeviceOfferRegistrationTask _isRegistrationAllowed]
  -[AMSDeviceOfferRegistrationTask registrationGroups]
  -[AMSDeviceOfferRegistrationTask _isDeviceGroupRegistrationAllowed]
  -[AMSDeviceOfferRegistrationTask privacyValidator]
  -[AMSDeviceOfferRegistrationTask lightweightCheckOnly]
  -[AMSDeviceOfferRegistrationTask _performLightweightRequestWithAccount:]
  -[AMSDeviceOfferRegistrationTask _performRegistrationRequestWithAccount:]
  -[AMSDeviceOfferRegistrationTask _lightweightDeviceOffersURL]
  -[AMSDeviceOfferRegistrationTask _registrationRequestEncoderWithAccount:]
  -[AMSDeviceOfferRegistrationTask _urlRequestWithBagURL:]
  -[AMSDeviceOfferRegistrationTask _latestDeviceGroups]
  -[AMSDeviceOfferRegistrationTask _sanitizedResultPromise:]
  -[AMSDeviceOfferRegistrationTask _handleRegistrationResult:]
  -[AMSDeviceOfferRegistrationTask _filteredRegistrationGroups:]
  -[AMSDeviceOfferRegistrationTask deviceOffersStore]
  -[AMSDeviceOfferRegistrationTask _serialNumberBlacklist]
  -[AMSDeviceOfferRegistrationTask _eligibilityQualifiedRegistrationGroupsWithAccount:pendingRegistrationGroups:]
  -[AMSDeviceOfferRegistrationTask _companionSerialNumbers]
  -[AMSDeviceOfferRegistrationTask ignoreRegistrationBlacklist]
  -[AMSDeviceOfferRegistrationTask _deviceOffersURL]
  -[AMSDeviceOfferRegistrationTask _registrationEndpointPOSTParametersWithRegistrationGroups:companionSerialNumbers:]
  -[AMSDeviceOfferRegistrationTask _registrationEndpointPOSTDeviceGroupsBody:]
  -[AMSDeviceOfferRegistrationTask _registrationEndpointPOSTCompanionBodyWithDeviceGroups:companionSerialNumbers:]
  -[AMSDeviceOfferRegistrationTask offerIdentifiers]
  -[AMSDeviceOfferRegistrationTask eligibilityTask]
  -[AMSDeviceOfferRegistrationTask _isEligibilityCallsAllowed]
  -[AMSDeviceOfferRegistrationTask _accountEligibleSerialsFromDeviceOffers:accountOffers:]
  -[AMSDeviceOfferRegistrationTask _registrationGroupsFrom:matching:]
  -[AMSDeviceOfferRegistrationTask _updateWithDeviceOffers:]
  -[AMSDeviceOfferRegistrationTask _bucketedOffers:]
  -[AMSDeviceOfferRegistrationTask _latestOffersWithFetchedDeviceOffers:offersStore:]
  -[AMSDeviceOfferRegistrationTask setOfferIdentifiers:]
  -[AMSDeviceOfferRegistrationTask setRegistrationGroups:]
  -[AMSDeviceOfferRegistrationTask setIgnoreRegistrationBlacklist:]
  -[AMSDeviceOfferRegistrationTask setBag:]


AMSDeviceOffersStore : NSObject <AMSDeviceOffersTracking>
 @property  NSArray *cachedRegistrationGroups
 @property  NSArray *companionSerialNumbers
 @property  NSDictionary *deviceOfferEligibility
 @property  NSArray *deviceOffers
 @property  NSArray *deviceRegistrationBlacklist
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSDeviceOffersStore splitGroups:byItem:]
  +[AMSDeviceOffersStore serialsFromGroups:]
  +[AMSDeviceOffersStore serialsBySubtractingAGroups:fromBGroups:]

  // instance methods
  -[AMSDeviceOffersStore deviceOffers]
  -[AMSDeviceOffersStore deviceOfferEligibility]
  -[AMSDeviceOffersStore setDeviceRegistrationBlacklist:]
  -[AMSDeviceOffersStore deviceRegistrationBlacklist]
  -[AMSDeviceOffersStore setDeviceOffers:]
  -[AMSDeviceOffersStore removeCachedRegistrationItem:]
  -[AMSDeviceOffersStore setCachedRegistrationGroups:]
  -[AMSDeviceOffersStore setDeviceOfferEligibility:]
  -[AMSDeviceOffersStore companionSerialNumbers]
  -[AMSDeviceOffersStore _dbSetNullableValue:forKey:error:]
  -[AMSDeviceOffersStore cachedRegistrationGroups]


AMSDialog : NSObject
 @property  NSArray *buttons
 @property  @? completionHandler
 @property  NSImage *icon
 @property  NSString *message
 @property  long long selectedButtonIndex
 @property  long long style
 @property  NSArray *textFields
 @property  NSString *title

  // class methods
  +[AMSDialog dialogWithTitle:message:style:]
  +[AMSDialog dialogWithTitle:message:]

  // instance methods
  -[AMSDialog present]
  -[AMSDialog icon]
  -[AMSDialog setTitle:]
  -[AMSDialog setButtons:]
  -[AMSDialog .cxx_destruct]
  -[AMSDialog setStyle:]
  -[AMSDialog setMessage:]
  -[AMSDialog setIcon:]
  -[AMSDialog message]
  -[AMSDialog setCompletionHandler:]
  -[AMSDialog textFields]
  -[AMSDialog title]
  -[AMSDialog addButton:]
  -[AMSDialog addTextField:]
  -[AMSDialog setTextFields:]
  -[AMSDialog completionHandler]
  -[AMSDialog initWithTitle:message:style:]
  -[AMSDialog presentFromViewController:]
  -[AMSDialog presentSheetFromWindow:]
  -[AMSDialog presentSystemDialog]
  -[AMSDialog selectedButtonIndex]
  -[AMSDialog setSelectedButtonIndex:]
  -[AMSDialog style]
  -[AMSDialog buttons]


AMSDialogAction : NSObject <NSSecureCoding, NSCopying>
 @property  BOOL ams_commerceUIURL
 @property  long long ams_actionType
 @property  NSString *ams_buyParams
 @property  NSDictionary *ams_buttonDictionary
 @property  NSDictionary *ams_metricsDictionary
 @property  NSURL *ams_rawURL
 @property  BOOL ams_resolvedInterruption
 @property  BOOL ams_shouldRetry
 @property  NSString *ams_subtarget
 @property  BOOL ams_tidContinue
 @property  long long ams_URLType
 @property  NSURL *deepLink
 @property  NSString *identifier
 @property  BOOL inferLinkDestination
 @property  AMSMetricsEvent *metricsEvent
 @property  NSURLRequest *request
 @property  long long style
 @property  AMSDialogRequest *dialogRequest
 @property  NSString *title
 @property  NSURL *iconURL
 @property  NSMutableDictionary *userInfo
 @property  BOOL shouldRetry

  // class methods
  +[AMSDialogAction supportsSecureCoding]
  +[AMSDialogAction actionWithTitle:identifier:]
  +[AMSDialogAction actionWithTitle:style:]
  +[AMSDialogAction actionWithTitle:]

  // instance methods
  -[AMSDialogAction setRequest:]
  -[AMSDialogAction setUserInfo:]
  -[AMSDialogAction iconURL]
  -[AMSDialogAction initWithCoder:]
  -[AMSDialogAction setTitle:]
  -[AMSDialogAction setIconURL:]
  -[AMSDialogAction ams_actionType]
  -[AMSDialogAction ams_subtarget]
  -[AMSDialogAction ams_setRawURL:]
  -[AMSDialogAction ams_setButtonDictionary:]
  -[AMSDialogAction ams_buttonDictionary]
  -[AMSDialogAction ams_setActionType:]
  -[AMSDialogAction ams_commerceUIURL]
  -[AMSDialogAction ams_metricsDictionary]
  -[AMSDialogAction ams_resolvedInterruption]
  -[AMSDialogAction ams_setBuyParams:]
  -[AMSDialogAction ams_setCommerceUIURL:]
  -[AMSDialogAction ams_setMetricsDictionary:]
  -[AMSDialogAction ams_setSubtarget:]
  -[AMSDialogAction ams_setResolvedInterruption:]
  -[AMSDialogAction ams_setShouldRetry:]
  -[AMSDialogAction ams_setTidContinue:]
  -[AMSDialogAction ams_setURLType:]
  -[AMSDialogAction ams_shouldRetry]
  -[AMSDialogAction ams_tidContinue]
  -[AMSDialogAction .cxx_destruct]
  -[AMSDialogAction setStyle:]
  -[AMSDialogAction deepLink]
  -[AMSDialogAction init]
  -[AMSDialogAction metricsEvent]
  -[AMSDialogAction request]
  -[AMSDialogAction identifier]
  -[AMSDialogAction setMetricsEvent:]
  -[AMSDialogAction title]
  -[AMSDialogAction ams_rawURL]
  -[AMSDialogAction setIdentifier:]
  -[AMSDialogAction userInfo]
  -[AMSDialogAction dialogRequest]
  -[AMSDialogAction ams_URLType]
  -[AMSDialogAction setDeepLink:]
  -[AMSDialogAction copyWithZone:]
  -[AMSDialogAction inferLinkDestination]
  -[AMSDialogAction setDialogRequest:]
  -[AMSDialogAction setInferLinkDestination:]
  -[AMSDialogAction style]
  -[AMSDialogAction ams_buyParams]
  -[AMSDialogAction shouldRetry]
  -[AMSDialogAction encodeWithCoder:]
  -[AMSDialogAction setShouldRetry:]


AMSDialogButton : NSObject
 @property  @? handler
 @property  long long style
 @property  NSString *title

  // class methods
  +[AMSDialogButton buttonWithTitle:handler:]
  +[AMSDialogButton buttonWithTitle:style:handler:]

  // instance methods
  -[AMSDialogButton setTitle:]
  -[AMSDialogButton .cxx_destruct]
  -[AMSDialogButton setStyle:]
  -[AMSDialogButton title]
  -[AMSDialogButton setHandler:]
  -[AMSDialogButton initWithTitle:style:handler:]
  -[AMSDialogButton style]
  -[AMSDialogButton handler]


AMSDialogRequest : NSObject <NSSecureCoding, NSCopying>
 @property  BOOL allowsNativeWatchCancelPlacement
 @property  NSDictionary *appearanceInfo
 @property  NSArray *buttonActions
 @property  AMSDialogAction *cancelAction
 @property  AMSDialogAction *defaultAction
 @property  NSURL *iconBundleURL
 @property  NSURL *iconURL
 @property  NSString *identifier
 @property  NSString *logKey
 @property  NSString *message
 @property  AMSMetricsEvent *metricsEvent
 @property  BOOL preventsCancelButtonStyle
 @property  long long style
 @property  NSArray *textFields
 @property  NSString *title
 @property  NSDictionary *userInfo

  // class methods
  +[AMSDialogRequest requestWithTitle:message:]
  +[AMSDialogRequest supportsSecureCoding]

  // instance methods
  -[AMSDialogRequest cancelAction]
  -[AMSDialogRequest defaultAction]
  -[AMSDialogRequest setUserInfo:]
  -[AMSDialogRequest iconURL]
  -[AMSDialogRequest initWithCoder:]
  -[AMSDialogRequest setTitle:]
  -[AMSDialogRequest logKey]
  -[AMSDialogRequest setIconURL:]
  -[AMSDialogRequest setDefaultAction:]
  -[AMSDialogRequest .cxx_destruct]
  -[AMSDialogRequest iconBundleURL]
  -[AMSDialogRequest setStyle:]
  -[AMSDialogRequest setIconBundleURL:]
  -[AMSDialogRequest setMessage:]
  -[AMSDialogRequest addButtonAction:]
  -[AMSDialogRequest initWithError:]
  -[AMSDialogRequest setCancelAction:]
  -[AMSDialogRequest initWithTitle:message:]
  -[AMSDialogRequest init]
  -[AMSDialogRequest metricsEvent]
  -[AMSDialogRequest identifier]
  -[AMSDialogRequest setMetricsEvent:]
  -[AMSDialogRequest message]
  -[AMSDialogRequest textFields]
  -[AMSDialogRequest title]
  -[AMSDialogRequest buttonActions]
  -[AMSDialogRequest setIdentifier:]
  -[AMSDialogRequest userInfo]
  -[AMSDialogRequest addTextField:]
  -[AMSDialogRequest setTextFields:]
  -[AMSDialogRequest setLogKey:]
  -[AMSDialogRequest copyWithZone:]
  -[AMSDialogRequest replaceAction:]
  -[AMSDialogRequest appearanceInfo]
  -[AMSDialogRequest preventsCancelButtonStyle]
  -[AMSDialogRequest setPreventsCancelButtonStyle:]
  -[AMSDialogRequest initWithTitle:message:appearanceInfo:]
  -[AMSDialogRequest locateActionWithIdentifier:]
  -[AMSDialogRequest allowsNativeWatchCancelPlacement]
  -[AMSDialogRequest setAllowsNativeWatchCancelPlacement:]
  -[AMSDialogRequest setButtonActions:]
  -[AMSDialogRequest style]
  -[AMSDialogRequest encodeWithCoder:]


AMSDialogResult : NSObject <NSSecureCoding>
 @property  AMSDialogRequest *originalRequest
 @property  NSString *selectedActionIdentifier
 @property  NSArray *textfieldValues
 @property  NSMutableDictionary *userInfo

  // class methods
  +[AMSDialogResult supportsSecureCoding]

  // instance methods
  -[AMSDialogResult setUserInfo:]
  -[AMSDialogResult initWithCoder:]
  -[AMSDialogResult .cxx_destruct]
  -[AMSDialogResult selectedActionIdentifier]
  -[AMSDialogResult initWithOriginalRequest:selectedActionIdentifier:]
  -[AMSDialogResult setTextfieldValues:]
  -[AMSDialogResult originalRequest]
  -[AMSDialogResult userInfo]
  -[AMSDialogResult textfieldValues]
  -[AMSDialogResult setSelectedActionIdentifier:]
  -[AMSDialogResult encodeWithCoder:]


AMSDialogTextField : NSObject <NSSecureCoding>
 @property  long long keyboardType
 @property  NSString *placeholder
 @property  BOOL secure
 @property  long long tag
 @property  NSString *text

  // class methods
  +[AMSDialogTextField supportsSecureCoding]
  +[AMSDialogTextField textFieldWithPlaceholder:secure:]

  // instance methods
  -[AMSDialogTextField secure]
  -[AMSDialogTextField keyboardType]
  -[AMSDialogTextField setKeyboardType:]
  -[AMSDialogTextField setText:]
  -[AMSDialogTextField initWithCoder:]
  -[AMSDialogTextField placeholder]
  -[AMSDialogTextField setTag:]
  -[AMSDialogTextField tag]
  -[AMSDialogTextField setSecure:]
  -[AMSDialogTextField .cxx_destruct]
  -[AMSDialogTextField setPlaceholder:]
  -[AMSDialogTextField text]
  -[AMSDialogTextField encodeWithCoder:]


AMSDoubleLinkedList : NSObject
 @property  NSString *listIdentifier
 @property  NSArray *allNodes
 @property  unsigned long count
 @property  AMSDoubleLinkedListNode *head
 @property  AMSDoubleLinkedListNode *tail

  // instance methods
  -[AMSDoubleLinkedList appendObject:]
  -[AMSDoubleLinkedList head]
  -[AMSDoubleLinkedList listIdentifier]
  -[AMSDoubleLinkedList tail]
  -[AMSDoubleLinkedList setTail:]
  -[AMSDoubleLinkedList appendNode:]
  -[AMSDoubleLinkedList setHead:]
  -[AMSDoubleLinkedList insertNode:]
  -[AMSDoubleLinkedList .cxx_destruct]
  -[AMSDoubleLinkedList count]
  -[AMSDoubleLinkedList setListIdentifier:]
  -[AMSDoubleLinkedList removeAllNodes]
  -[AMSDoubleLinkedList insertObject:]
  -[AMSDoubleLinkedList init]
  -[AMSDoubleLinkedList removeNode:]
  -[AMSDoubleLinkedList allNodes]


AMSDoubleLinkedListNode : NSObject
 @property  NSString *listIdentifier
 @property  AMSDoubleLinkedListNode *previous
 @property  id object
 @property  AMSDoubleLinkedListNode *next

  // instance methods
  -[AMSDoubleLinkedListNode setNext:]
  -[AMSDoubleLinkedListNode setPrevious:]
  -[AMSDoubleLinkedListNode listIdentifier]
  -[AMSDoubleLinkedListNode previous]
  -[AMSDoubleLinkedListNode next]
  -[AMSDoubleLinkedListNode initWithObject:]
  -[AMSDoubleLinkedListNode .cxx_destruct]
  -[AMSDoubleLinkedListNode setListIdentifier:]
  -[AMSDoubleLinkedListNode init]
  -[AMSDoubleLinkedListNode object]
  -[AMSDoubleLinkedListNode setObject:]


AMSEngagement : NSObject
 @property  NSMapTable *observerInfo
 @property  NSMutableSet *runningPromises
 @property  AMSEngagementConnection *connection

  // class methods
  +[AMSEngagement notificationCenter]
  +[AMSEngagement _connection]
  +[AMSEngagement _notifyQueue]
  +[AMSEngagement _engagementQueue]

  // instance methods
  -[AMSEngagement sync]
  -[AMSEngagement _scheduleSyncIfNeeded:]
  -[AMSEngagement addObserver:placement:serviceType:]
  -[AMSEngagement enqueueEvent:]
  -[AMSEngagement observerInfo]
  -[AMSEngagement enqueueData:]
  -[AMSEngagement _manageRunningPromise:]
  -[AMSEngagement .cxx_destruct]
  -[AMSEngagement syncMetricsIdentifiers]
  -[AMSEngagement enqueueMessageEvent:]
  -[AMSEngagement _parseActions:]
  -[AMSEngagement handlePushEvent:]
  -[AMSEngagement init]
  -[AMSEngagement connection]
  -[AMSEngagement setRunningPromises:]
  -[AMSEngagement _pushEventReceieved:]
  -[AMSEngagement handleDialogResult:]
  -[AMSEngagement _connectionErrorNotification]
  -[AMSEngagement _createCombinedLogKey]
  -[AMSEngagement removeObserver:placement:serviceType:]
  -[AMSEngagement treatmentStoreService]
  -[AMSEngagement contentInfoForApp:cacheKey:version:]
  -[AMSEngagement _removeRunningPromise:]
  -[AMSEngagement dealloc]
  -[AMSEngagement _handleServiceResponse:]
  -[AMSEngagement runningPromises]
  -[AMSEngagement _failAllRunningPromisesWithError:]
  -[AMSEngagement setObserverInfo:]
  -[AMSEngagement _observeNotifications]


AMSEngagementAppData : NSObject
 @property  NSArray *cachedResponses
 @property  NSArray *eventFilters
 @property  NSString *identifier

  // instance methods
  -[AMSEngagementAppData .cxx_destruct]
  -[AMSEngagementAppData identifier]
  -[AMSEngagementAppData exportObject]
  -[AMSEngagementAppData cachedResponses]
  -[AMSEngagementAppData setCachedResponses:]
  -[AMSEngagementAppData setEventFilters:]
  -[AMSEngagementAppData initWithIdentifier:cacheObject:]
  -[AMSEngagementAppData eventFilters]


AMSEngagementAppEventFilterModel : NSObject
 @property  NSDictionary *definition
 @property  BOOL allowsResponse

  // class methods
  +[AMSEngagementAppEventFilterModel matchEvent:toFilter:]

  // instance methods
  -[AMSEngagementAppEventFilterModel definition]
  -[AMSEngagementAppEventFilterModel .cxx_destruct]
  -[AMSEngagementAppEventFilterModel init]
  -[AMSEngagementAppEventFilterModel allowsResponse]
  -[AMSEngagementAppEventFilterModel exportObject]
  -[AMSEngagementAppEventFilterModel initWithCacheObject:]
  -[AMSEngagementAppEventFilterModel matchesEvent:]
  -[AMSEngagementAppEventFilterModel initWithDefinition:]
  -[AMSEngagementAppEventFilterModel initWithFilter:allowsResponse:]


AMSEngagementAppResponseModel : NSObject
 @property  NSDictionary *definition
 @property  NSString *cacheKey
 @property  NSDate *created
 @property  NSDictionary *responseData

  // class methods
  +[AMSEngagementAppResponseModel _shouldEvictDefinition:created:]

  // instance methods
  -[AMSEngagementAppResponseModel definition]
  -[AMSEngagementAppResponseModel cacheKey]
  -[AMSEngagementAppResponseModel .cxx_destruct]
  -[AMSEngagementAppResponseModel responseData]
  -[AMSEngagementAppResponseModel exportObject]
  -[AMSEngagementAppResponseModel initWithCacheObject:]
  -[AMSEngagementAppResponseModel matchesEvent:]
  -[AMSEngagementAppResponseModel initWithData:cacheInfo:]
  -[AMSEngagementAppResponseModel created]


AMSEngagementClientData : NSObject
 @property  NSMutableDictionary *apps
 @property  NSString *lastSyncedBuild

  // class methods
  +[AMSEngagementClientData _fetchClientData]
  +[AMSEngagementClientData loadFromDisk]
  +[AMSEngagementClientData _sharedQueue]
  +[AMSEngagementClientData _assertEngagementd]
  +[AMSEngagementClientData _isDaemon]
  +[AMSEngagementClientData _registerNotifications]

  // instance methods
  -[AMSEngagementClientData setApps:]
  -[AMSEngagementClientData apps]
  -[AMSEngagementClientData cachedResponseDataForEvent:]
  -[AMSEngagementClientData .cxx_destruct]
  -[AMSEngagementClientData setLastSyncedBuild:]
  -[AMSEngagementClientData lastSyncedBuild]
  -[AMSEngagementClientData _cleanUpApps]
  -[AMSEngagementClientData setAllowedEvents:appIdentifier:]
  -[AMSEngagementClientData addCachedResponseData:cacheInfo:appIdentifier:]
  -[AMSEngagementClientData destinationsForEvent:]
  -[AMSEngagementClientData saveToDisk]
  -[AMSEngagementClientData initWithCacheObject:]


AMSEngagementConnection : NSObject <AMSEngagementClientProtocol>
 @property  NSXPCConnection *connection
 @property  NSNotificationCenter *notificationCenter
 @property  NSObject<OS_dispatch_queue> *queue
 @property  <AMSEngagementServiceProtocol> *proxy
 @property  @? errorHandler

  // instance methods
  -[AMSEngagementConnection notificationCenter]
  -[AMSEngagementConnection setNotificationCenter:]
  -[AMSEngagementConnection _makeExportedClientConnectionInterface]
  -[AMSEngagementConnection .cxx_destruct]
  -[AMSEngagementConnection handlePushedEvent:]
  -[AMSEngagementConnection setConnection:]
  -[AMSEngagementConnection setErrorHandler:]
  -[AMSEngagementConnection _newRemoteConnection]
  -[AMSEngagementConnection proxy]
  -[AMSEngagementConnection connection]
  -[AMSEngagementConnection initWithNotificationCenter:]
  -[AMSEngagementConnection treatmentsDidSyncronize]
  -[AMSEngagementConnection errorHandler]
  -[AMSEngagementConnection queue]
  -[AMSEngagementConnection setProxy:]
  -[AMSEngagementConnection dealloc]
  -[AMSEngagementConnection _removeRemoteConnection]
  -[AMSEngagementConnection _makeRemoteConnectionInterface]


AMSEngagementDestination : NSObject <NSSecureCoding>
 @property  NSString *identifier
 @property  BOOL allowsResponse

  // class methods
  +[AMSEngagementDestination supportsSecureCoding]

  // instance methods
  -[AMSEngagementDestination initWithCoder:]
  -[AMSEngagementDestination initWithIdentifier:]
  -[AMSEngagementDestination .cxx_destruct]
  -[AMSEngagementDestination identifier]
  -[AMSEngagementDestination setIdentifier:]
  -[AMSEngagementDestination allowsResponse]
  -[AMSEngagementDestination setAllowsResponse:]
  -[AMSEngagementDestination encodeWithCoder:]


AMSEngagementEnqueueRequest : NSObject <NSSecureCoding>
 @property  AMSProcessInfo *clientInfo
 @property  NSArray *destinations
 @property  NSArray *events
 @property  NSString *logKey
 @property  double timeout

  // class methods
  +[AMSEngagementEnqueueRequest supportsSecureCoding]
  +[AMSEngagementEnqueueRequest archiveClasses]

  // instance methods
  -[AMSEngagementEnqueueRequest events]
  -[AMSEngagementEnqueueRequest initWithCoder:]
  -[AMSEngagementEnqueueRequest logKey]
  -[AMSEngagementEnqueueRequest setDestinations:]
  -[AMSEngagementEnqueueRequest setClientInfo:]
  -[AMSEngagementEnqueueRequest .cxx_destruct]
  -[AMSEngagementEnqueueRequest clientInfo]
  -[AMSEngagementEnqueueRequest setTimeout:]
  -[AMSEngagementEnqueueRequest destinations]
  -[AMSEngagementEnqueueRequest timeout]
  -[AMSEngagementEnqueueRequest setLogKey:]
  -[AMSEngagementEnqueueRequest setEvents:]
  -[AMSEngagementEnqueueRequest encodeWithCoder:]


AMSEngagementEnqueueResult : NSObject <NSSecureCoding>
 @property  NSDictionary *data
 @property  NSArray *actions
 @property  AMSEngagementRequest *request

  // class methods
  +[AMSEngagementEnqueueResult supportsSecureCoding]
  +[AMSEngagementEnqueueResult archiveClasses]

  // instance methods
  -[AMSEngagementEnqueueResult setRequest:]
  -[AMSEngagementEnqueueResult setActions:]
  -[AMSEngagementEnqueueResult initWithCoder:]
  -[AMSEngagementEnqueueResult .cxx_destruct]
  -[AMSEngagementEnqueueResult actions]
  -[AMSEngagementEnqueueResult data]
  -[AMSEngagementEnqueueResult request]
  -[AMSEngagementEnqueueResult setData:]
  -[AMSEngagementEnqueueResult encodeWithCoder:]


AMSEngagementExtensionConnection : NSObject <_EXPrincipalAdapting>
 @property  id principalObject
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSEngagementExtensionConnection principalObject]
  -[AMSEngagementExtensionConnection .cxx_destruct]
  -[AMSEngagementExtensionConnection performRequestWithObject:completion:]
  -[AMSEngagementExtensionConnection shouldAcceptXPCConnection:]
  -[AMSEngagementExtensionConnection initWithPrincipalObject:]


AMSEngagementMessageAction : NSObject
 @property  NSURL *deepLink
 @property  NSURL *iconURL
 @property  AMSMetricsEvent *metricsEvent
 @property  long long style
 @property  NSString *title

  // instance methods
  -[AMSEngagementMessageAction iconURL]
  -[AMSEngagementMessageAction setTitle:]
  -[AMSEngagementMessageAction setIconURL:]
  -[AMSEngagementMessageAction .cxx_destruct]
  -[AMSEngagementMessageAction setStyle:]
  -[AMSEngagementMessageAction deepLink]
  -[AMSEngagementMessageAction metricsEvent]
  -[AMSEngagementMessageAction setMetricsEvent:]
  -[AMSEngagementMessageAction title]
  -[AMSEngagementMessageAction setDeepLink:]
  -[AMSEngagementMessageAction initWithJSObject:]
  -[AMSEngagementMessageAction style]


AMSEngagementMessageEvent : NSObject <AMSEngagementEvent>
 @property  NSArray *placementInfo
 @property  NSString *serviceType
 @property  NSDictionary *data
 @property  NSDictionary *engagementData
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSEngagementMessageEvent setServiceType:]
  -[AMSEngagementMessageEvent .cxx_destruct]
  -[AMSEngagementMessageEvent data]
  -[AMSEngagementMessageEvent setData:]
  -[AMSEngagementMessageEvent placementInfo]
  -[AMSEngagementMessageEvent engagementData]
  -[AMSEngagementMessageEvent initWithServiceType:placementInfo:]
  -[AMSEngagementMessageEvent initWithServiceType:placements:]
  -[AMSEngagementMessageEvent setPlacementInfo:]
  -[AMSEngagementMessageEvent serviceType]


AMSEngagementMessageEventResponse : AMSEngagementEnqueueResult
 @property  NSArray *messageActions

  // instance methods
  -[AMSEngagementMessageEventResponse _processActions:]
  -[AMSEngagementMessageEventResponse messageActions]
  -[AMSEngagementMessageEventResponse .cxx_destruct]
  -[AMSEngagementMessageEventResponse initWithEnqueueResult:]


AMSEngagementMessageEventServiceResponse : NSObject
 @property  AMSEngagementRequest *engagementRequest
 @property  AMSEngagementMessageRequest *fullScreenMessageRequest
 @property  NSDictionary *placements
 @property  NSString *serviceType
 @property  NSDictionary *placementRequests
 @property  AMSDialogRequest *dialogRequest

  // instance methods
  -[AMSEngagementMessageEventServiceResponse setServiceType:]
  -[AMSEngagementMessageEventServiceResponse .cxx_destruct]
  -[AMSEngagementMessageEventServiceResponse placements]
  -[AMSEngagementMessageEventServiceResponse setPlacements:]
  -[AMSEngagementMessageEventServiceResponse dialogRequest]
  -[AMSEngagementMessageEventServiceResponse setDialogRequest:]
  -[AMSEngagementMessageEventServiceResponse initWithJSObject:]
  -[AMSEngagementMessageEventServiceResponse engagementRequest]
  -[AMSEngagementMessageEventServiceResponse fullScreenMessageRequest]
  -[AMSEngagementMessageEventServiceResponse placementRequests]
  -[AMSEngagementMessageEventServiceResponse _placementWithDictionary:]
  -[AMSEngagementMessageEventServiceResponse _placementRequestsWithDictionary:]
  -[AMSEngagementMessageEventServiceResponse setEngagementRequest:]
  -[AMSEngagementMessageEventServiceResponse setFullScreenMessageRequest:]
  -[AMSEngagementMessageEventServiceResponse setPlacementRequests:]
  -[AMSEngagementMessageEventServiceResponse serviceType]


AMSEngagementMessageRequest : NSObject
 @property  NSArray *actions
 @property  NSDictionary *appearanceInfo
 @property  AMSEngagementMessageAction *defaultAction
 @property  AMSEngagementRequest *engagementRequest
 @property  NSURL *iconURL
 @property  AMSMetricsEvent *metricsEvent
 @property  long long presentationAction
 @property  long long style
 @property  NSString *subtitle
 @property  NSString *title

  // instance methods
  -[AMSEngagementMessageRequest setActions:]
  -[AMSEngagementMessageRequest defaultAction]
  -[AMSEngagementMessageRequest iconURL]
  -[AMSEngagementMessageRequest setTitle:]
  -[AMSEngagementMessageRequest setIconURL:]
  -[AMSEngagementMessageRequest setDefaultAction:]
  -[AMSEngagementMessageRequest .cxx_destruct]
  -[AMSEngagementMessageRequest setStyle:]
  -[AMSEngagementMessageRequest setSubtitle:]
  -[AMSEngagementMessageRequest actions]
  -[AMSEngagementMessageRequest metricsEvent]
  -[AMSEngagementMessageRequest setMetricsEvent:]
  -[AMSEngagementMessageRequest subtitle]
  -[AMSEngagementMessageRequest title]
  -[AMSEngagementMessageRequest appearanceInfo]
  -[AMSEngagementMessageRequest initWithJSObject:]
  -[AMSEngagementMessageRequest engagementRequest]
  -[AMSEngagementMessageRequest makeDialogRequest]
  -[AMSEngagementMessageRequest presentationAction]
  -[AMSEngagementMessageRequest setEngagementRequest:]
  -[AMSEngagementMessageRequest setAppearanceInfo:]
  -[AMSEngagementMessageRequest _actionForMessageAction:]
  -[AMSEngagementMessageRequest style]
  -[AMSEngagementMessageRequest setPresentationAction:]


AMSEngagementMigrator : NSObject
  // class methods
  +[AMSEngagementMigrator migrateEngagementWithOptions:]


AMSEngagementObserverInfo : NSObject
 @property  NSMutableSet *underlyingPlacements
 @property  NSMutableSet *underlyingServiceTypes
 @property  NSSet *placements
 @property  NSSet *serviceTypes

  // instance methods
  -[AMSEngagementObserverInfo .cxx_destruct]
  -[AMSEngagementObserverInfo init]
  -[AMSEngagementObserverInfo placements]
  -[AMSEngagementObserverInfo serviceTypes]
  -[AMSEngagementObserverInfo addPlacement:]
  -[AMSEngagementObserverInfo addServiceType:]
  -[AMSEngagementObserverInfo removePlacement:]
  -[AMSEngagementObserverInfo removeServiceType:]
  -[AMSEngagementObserverInfo underlyingPlacements]
  -[AMSEngagementObserverInfo underlyingServiceTypes]
  -[AMSEngagementObserverInfo setUnderlyingPlacements:]
  -[AMSEngagementObserverInfo setUnderlyingServiceTypes:]


AMSEngagementPlacementInfo : NSObject
 @property  NSDictionary *context
 @property  NSString *placement

  // instance methods
  -[AMSEngagementPlacementInfo placement]
  -[AMSEngagementPlacementInfo .cxx_destruct]
  -[AMSEngagementPlacementInfo makeRawDictionary]
  -[AMSEngagementPlacementInfo initWithPlacement:context:]
  -[AMSEngagementPlacementInfo context]


AMSEngagementPushEvent : NSObject <NSSecureCoding>
 @property  NSDictionary *data
 @property  NSArray *actions
 @property  AMSEngagementRequest *request

  // class methods
  +[AMSEngagementPushEvent supportsSecureCoding]
  +[AMSEngagementPushEvent archiveClasses]

  // instance methods
  -[AMSEngagementPushEvent setRequest:]
  -[AMSEngagementPushEvent setActions:]
  -[AMSEngagementPushEvent initWithCoder:]
  -[AMSEngagementPushEvent .cxx_destruct]
  -[AMSEngagementPushEvent actions]
  -[AMSEngagementPushEvent data]
  -[AMSEngagementPushEvent request]
  -[AMSEngagementPushEvent setData:]
  -[AMSEngagementPushEvent encodeWithCoder:]


AMSEngagementRequest : NSObject <NSSecureCoding>
 @property  ACAccount *account
 @property  NSDictionary *clientData
 @property  NSString *logKey
 @property  BOOL failOnDismiss
 @property  NSDictionary *metricsOverlay
 @property  NSURL *originatingURL
 @property  long long presentationStyle
 @property  NSURL *URL
 @property  BOOL silentlyCheckURL
 @property  long long destinationStyle

  // class methods
  +[AMSEngagementRequest supportsSecureCoding]
  +[AMSEngagementRequest engagementRequestWithDictionary:]

  // instance methods
  -[AMSEngagementRequest setAccount:]
  -[AMSEngagementRequest initWithCoder:]
  -[AMSEngagementRequest account]
  -[AMSEngagementRequest presentationStyle]
  -[AMSEngagementRequest logKey]
  -[AMSEngagementRequest setClientData:]
  -[AMSEngagementRequest setPresentationStyle:]
  -[AMSEngagementRequest setURL:]
  -[AMSEngagementRequest .cxx_destruct]
  -[AMSEngagementRequest clientData]
  -[AMSEngagementRequest init]
  -[AMSEngagementRequest metricsOverlay]
  -[AMSEngagementRequest setMetricsOverlay:]
  -[AMSEngagementRequest URL]
  -[AMSEngagementRequest setLogKey:]
  -[AMSEngagementRequest failOnDismiss]
  -[AMSEngagementRequest destinationStyle]
  -[AMSEngagementRequest _accountFromDictionary:]
  -[AMSEngagementRequest originatingURL]
  -[AMSEngagementRequest silentlyCheckURL]
  -[AMSEngagementRequest setFailOnDismiss:]
  -[AMSEngagementRequest setDestinationStyle:]
  -[AMSEngagementRequest initWithRequestDictionary:]
  -[AMSEngagementRequest _engagementPresentationStyleFromDictionary:]
  -[AMSEngagementRequest setOriginatingURL:]
  -[AMSEngagementRequest setSilentlyCheckURL:]
  -[AMSEngagementRequest encodeWithCoder:]


AMSEngagementResult : NSObject <NSSecureCoding>
 @property  NSString *ams_buyParams
 @property  NSDictionary *userInfo

  // class methods
  +[AMSEngagementResult supportsSecureCoding]
  +[AMSEngagementResult _updatedBodyFromValue:request:]

  // instance methods
  -[AMSEngagementResult setUserInfo:]
  -[AMSEngagementResult initWithCoder:]
  -[AMSEngagementResult .cxx_destruct]
  -[AMSEngagementResult userInfo]
  -[AMSEngagementResult ams_buyParams]
  -[AMSEngagementResult ams_requestActionFromRequest:]
  -[AMSEngagementResult encodeWithCoder:]


AMSEngagementSyncRequest : NSObject <NSSecureCoding>
 @property  NSDictionary *context
 @property  NSArray *destinations
 @property  NSString *logKey
 @property  double timeout

  // class methods
  +[AMSEngagementSyncRequest supportsSecureCoding]
  +[AMSEngagementSyncRequest archiveClasses]

  // instance methods
  -[AMSEngagementSyncRequest initWithCoder:]
  -[AMSEngagementSyncRequest logKey]
  -[AMSEngagementSyncRequest setDestinations:]
  -[AMSEngagementSyncRequest .cxx_destruct]
  -[AMSEngagementSyncRequest setTimeout:]
  -[AMSEngagementSyncRequest destinations]
  -[AMSEngagementSyncRequest timeout]
  -[AMSEngagementSyncRequest setContext:]
  -[AMSEngagementSyncRequest setLogKey:]
  -[AMSEngagementSyncRequest encodeWithCoder:]
  -[AMSEngagementSyncRequest context]


AMSEngagementSyncResult : NSObject <NSSecureCoding>
 @property  NSArray *actions

  // class methods
  +[AMSEngagementSyncResult supportsSecureCoding]
  +[AMSEngagementSyncResult archiveClasses]

  // instance methods
  -[AMSEngagementSyncResult setActions:]
  -[AMSEngagementSyncResult initWithCoder:]
  -[AMSEngagementSyncResult .cxx_destruct]
  -[AMSEngagementSyncResult actions]
  -[AMSEngagementSyncResult encodeWithCoder:]


AMSEphemeralDefaults : NSObject
  // class methods
  +[AMSEphemeralDefaults _accessDataStoreUsingBlock:]
  +[AMSEphemeralDefaults preferEphemeralImageLoader]
  +[AMSEphemeralDefaults setBagKeyRegistrationEnabled:]
  +[AMSEphemeralDefaults setProcessAssertionsEnabled:]
  +[AMSEphemeralDefaults setPreferEphemeralURLSessions:]
  +[AMSEphemeralDefaults processAssertionsEnabled]
  +[AMSEphemeralDefaults HARLoggingEnabled]
  +[AMSEphemeralDefaults setHARLoggingEnabled:]
  +[AMSEphemeralDefaults _setProperty:forKey:]
  +[AMSEphemeralDefaults setPreferEphemeralImageLoader:]
  +[AMSEphemeralDefaults _propertyForKey:defaultValue:expectedType:]
  +[AMSEphemeralDefaults HARLoggingItemLimit]
  +[AMSEphemeralDefaults setSuppressEngagement:]
  +[AMSEphemeralDefaults bagKeyRegistrationEnabled]
  +[AMSEphemeralDefaults suppressEngagement]
  +[AMSEphemeralDefaults preferEphemeralURLSessions]
  +[AMSEphemeralDefaults setHARLoggingItemLimit:]
  +[AMSEphemeralDefaults purchaseAccountFallback]
  +[AMSEphemeralDefaults setPurchaseAccountFallback:]


AMSFailingBagValue : AMSFrozenBagValue
 @property  NSError *error

  // instance methods
  -[AMSFailingBagValue .cxx_destruct]
  -[AMSFailingBagValue initWithKey:valueType:error:]
  -[AMSFailingBagValue valueWithCompletion:]
  -[AMSFailingBagValue setError:]
  -[AMSFailingBagValue error]


AMSFairPlayContext : NSObject
 @property  unsigned int contextID

  // instance methods
  -[AMSFairPlayContext setContextID:]
  -[AMSFairPlayContext contextID]
  -[AMSFairPlayContext init]
  -[AMSFairPlayContext dealloc]
  -[AMSFairPlayContext fairplayContextIDWithError:]
  -[AMSFairPlayContext destroyContext]


AMSFamilyContentDeletionEvent : NSObject
  // class methods
  +[AMSFamilyContentDeletionEvent _notificationPayloadWithAccountPairs:]
  +[AMSFamilyContentDeletionEvent postDistributedNotificationWithAccountPairs:]


AMSFamilyAccountPair : NSObject
 @property  unsigned long downloaderAccountID
 @property  unsigned long familyID
 @property  unsigned long purchaserAccountID

  // instance methods
  -[AMSFamilyAccountPair familyID]
  -[AMSFamilyAccountPair downloaderAccountID]
  -[AMSFamilyAccountPair purchaserAccountID]
  -[AMSFamilyAccountPair initWithDownloaderAccountID:purchaserAccountID:familyID:]


AMSFamilyInfoLookupResult : NSObject
 @property  NSDictionary *dictionaryRepresentation
 @property  BOOL cached
 @property  NSArray *familyMembers
 @property  NSNumber *headOfHouseholdICloudDSID
 @property  BOOL headOfHouseholdSharingPayment

  // class methods
  +[AMSFamilyInfoLookupResult _familyMembersFromDictionaryRepresentation:]

  // instance methods
  -[AMSFamilyInfoLookupResult familyMembers]
  -[AMSFamilyInfoLookupResult .cxx_destruct]
  -[AMSFamilyInfoLookupResult dictionaryRepresentation]
  -[AMSFamilyInfoLookupResult isCached]
  -[AMSFamilyInfoLookupResult headOfHouseholdICloudDSID]
  -[AMSFamilyInfoLookupResult isHeadOfHouseholdSharingPayment]
  -[AMSFamilyInfoLookupResult initWithDictionaryRepresentation:cached:]


AMSFamilyInfoLookupTask : AMSTask <AMSBagConsumer>
 @property  ACAccount *account
 @property  <AMSBagProtocol> *bag
 @property  NSString *logKey
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSFamilyInfoLookupTask bagKeySet]
  +[AMSFamilyInfoLookupTask bagSubProfileVersion]
  +[AMSFamilyInfoLookupTask bagSubProfile]
  +[AMSFamilyInfoLookupTask createBagForSubProfile]
  +[AMSFamilyInfoLookupTask _processURLResult:]

  // instance methods
  -[AMSFamilyInfoLookupTask initWithBagContract:]
  -[AMSFamilyInfoLookupTask account]
  -[AMSFamilyInfoLookupTask logKey]
  -[AMSFamilyInfoLookupTask .cxx_destruct]
  -[AMSFamilyInfoLookupTask bag]
  -[AMSFamilyInfoLookupTask initWithBag:]
  -[AMSFamilyInfoLookupTask initWithAccount:bag:]
  -[AMSFamilyInfoLookupTask setLogKey:]
  -[AMSFamilyInfoLookupTask _performFamilyInfoRequestForAccount:error:]
  -[AMSFamilyInfoLookupTask _pathForCachedFamilyInfoLookupResult]
  -[AMSFamilyInfoLookupTask _cachedFamilyInfoLookupResultForAccount:]
  -[AMSFamilyInfoLookupTask _cacheFamilyInfoLookupResult:forAccount:]
  -[AMSFamilyInfoLookupTask _currentCachedFamilyInfo]
  -[AMSFamilyInfoLookupTask performFamilyInfoLookup]


AMSFamilyMember : NSObject
 @property  BOOL currentSignedInUser
 @property  NSDictionary *dictionaryRepresentation
 @property  BOOL askToBuyEnabled
 @property  NSString *firstName
 @property  NSNumber *iCloudDSID
 @property  NSString *iCloudUsername
 @property  NSNumber *iTunesDSID
 @property  NSString *iTunesUsername
 @property  NSString *lastName
 @property  BOOL sharingPurchases

  // instance methods
  -[AMSFamilyMember firstName]
  -[AMSFamilyMember lastName]
  -[AMSFamilyMember initWithDictionaryRepresentation:]
  -[AMSFamilyMember .cxx_destruct]
  -[AMSFamilyMember dictionaryRepresentation]
  -[AMSFamilyMember iTunesDSID]
  -[AMSFamilyMember iCloudDSID]
  -[AMSFamilyMember setCurrentSignedInUser:]
  -[AMSFamilyMember isCurrentSignedInUser]
  -[AMSFamilyMember iCloudUsername]
  -[AMSFamilyMember isAskToBuyEnabled]
  -[AMSFamilyMember iTunesUsername]
  -[AMSFamilyMember isSharingPurchases]


AMSFDSOptions : NSObject <NSCopying, NSSecureCoding>
 @property  unsigned long action
 @property  NSString *bundleIdentifier

  // class methods
  +[AMSFDSOptions supportsSecureCoding]

  // instance methods
  -[AMSFDSOptions initWithCoder:]
  -[AMSFDSOptions bundleIdentifier]
  -[AMSFDSOptions .cxx_destruct]
  -[AMSFDSOptions setBundleIdentifier:]
  -[AMSFDSOptions setAction:]
  -[AMSFDSOptions action]
  -[AMSFDSOptions copyWithZone:]
  -[AMSFDSOptions encodeWithCoder:]


AMSFDSRequest : NSObject <NSCopying, NSSecureCoding>
 @property  ACAccount *account
 @property  NSString *logKey
 @property  AMSFDSOptions *options
 @property  NSNumber *purchaseIdentifier

  // class methods
  +[AMSFDSRequest supportsSecureCoding]

  // instance methods
  -[AMSFDSRequest initWithCoder:]
  -[AMSFDSRequest account]
  -[AMSFDSRequest logKey]
  -[AMSFDSRequest options]
  -[AMSFDSRequest .cxx_destruct]
  -[AMSFDSRequest setLogKey:]
  -[AMSFDSRequest copyWithZone:]
  -[AMSFDSRequest purchaseIdentifier]
  -[AMSFDSRequest initWithPurchaseIdentifier:account:options:]
  -[AMSFDSRequest encodeWithCoder:]


AMSFDSResult : NSObject <NSCopying, NSSecureCoding>
 @property  unsigned long action
 @property  NSString *value

  // class methods
  +[AMSFDSResult supportsSecureCoding]

  // instance methods
  -[AMSFDSResult initWithCoder:]
  -[AMSFDSResult .cxx_destruct]
  -[AMSFDSResult action]
  -[AMSFDSResult value]
  -[AMSFDSResult copyWithZone:]
  -[AMSFDSResult initWithValue:action:]
  -[AMSFDSResult encodeWithCoder:]


AMSFDSService : NSObject
  // class methods
  +[AMSFDSService cacheFDS:forPurchaseInfo:]
  +[AMSFDSService cachedFDSForPurchaseInfo:]
  +[AMSFDSService didConsumeFDSForPurchaseInfo:]
  +[AMSFDSService generateFDSWithRequest:]


AMSFeatureEnabler : NSObject
  // class methods
  +[AMSFeatureEnabler clear]
  +[AMSFeatureEnabler cookie]
  +[AMSFeatureEnabler _fetchEnabledFeatures]


AMSFeatureFlag : NSObject
 @property  BOOL codeComplete
 @property  NSString *ITFE
 @property  BOOL testable
 @property  BOOL hidden
 @property  NSString *associatedGroup
 @property  BOOL defaultEnabled
 @property  long long developmentPhase
 @property  BOOL enabled
 @property  NSString *feature
 @property  NSDictionary *flagData
 @property  NSString *displayName
 @property  NSString *domain
 @property  NSString *featureDescription
 @property  NSString *flagGroup
 @property  NSArray *itfes
 @property  BOOL userEnabled
 @property  BOOL remote

  // class methods
  +[AMSFeatureFlag flagForFeature:domain:searchDirectory:]
  +[AMSFeatureFlag flagForFeature:domain:]
  +[AMSFeatureFlag enableFlagForFeature:domain:error:]
  +[AMSFeatureFlag disableFlagForFeature:domain:error:]
  +[AMSFeatureFlag allFlagGroups]
  +[AMSFeatureFlag flagGroupWithName:]
  +[AMSFeatureFlag enableFlagGroup:error:]
  +[AMSFeatureFlag disableFlagGroup:error:]

  // instance methods
  -[AMSFeatureFlag setUserEnabled:]
  -[AMSFeatureFlag ITFE]
  -[AMSFeatureFlag displayName]
  -[AMSFeatureFlag itfes]
  -[AMSFeatureFlag setDomain:]
  -[AMSFeatureFlag .cxx_destruct]
  -[AMSFeatureFlag isHidden]
  -[AMSFeatureFlag domain]
  -[AMSFeatureFlag hasITFEs]
  -[AMSFeatureFlag flagData]
  -[AMSFeatureFlag setITFE:]
  -[AMSFeatureFlag setItfes:]
  -[AMSFeatureFlag flagGroup]
  -[AMSFeatureFlag setDisplayName:]
  -[AMSFeatureFlag groupType]
  -[AMSFeatureFlag isRemote]
  -[AMSFeatureFlag isEnabled]
  -[AMSFeatureFlag isTestable]
  -[AMSFeatureFlag feature]
  -[AMSFeatureFlag setFeature:]
  -[AMSFeatureFlag setEnabled:]
  -[AMSFeatureFlag setFlagData:]
  -[AMSFeatureFlag _enableITFEs]
  -[AMSFeatureFlag setTestable:]
  -[AMSFeatureFlag itfesFromString:mutableFeatures:profileFeatures:]
  -[AMSFeatureFlag setAssociatedGroup:]
  -[AMSFeatureFlag setFeatureDescription:]
  -[AMSFeatureFlag setFlagGroup:]
  -[AMSFeatureFlag _updateDevelopmentPhase]
  -[AMSFeatureFlag _updateInternalEnabledState]
  -[AMSFeatureFlag activateITFEs]
  -[AMSFeatureFlag _activateFlag]
  -[AMSFeatureFlag _updateUserEnabled:]
  -[AMSFeatureFlag setDefaultEnabled:]
  -[AMSFeatureFlag _developmentPhaseFromGroupType:]
  -[AMSFeatureFlag setDevelopmentPhase:]
  -[AMSFeatureFlag isDefaultEnabled]
  -[AMSFeatureFlag _disableITFEs]
  -[AMSFeatureFlag associatedGroup]
  -[AMSFeatureFlag isUserEnabled]
  -[AMSFeatureFlag developmentPhase]
  -[AMSFeatureFlag featureDescription]
  -[AMSFeatureFlag initWithFlagData:mutableFeatures:profileFeatures:feature:domain:]
  -[AMSFeatureFlag hasITFEWithName:]
  -[AMSFeatureFlag setHidden:]
  -[AMSFeatureFlag isCodeComplete]
  -[AMSFeatureFlag setCodeComplete:]


AMSFeatureFlagController : NSObject
  // class methods
  +[AMSFeatureFlagController verifyFlags]
  +[AMSFeatureFlagController toggleFlags:enabled:]


AMSFeatureFlagGroup : NSObject
 @property  NSMutableArray *mutableFlags
 @property  NSString *name
 @property  NSArray *flags

  // class methods
  +[AMSFeatureFlagGroup allFlagGroupsIncludingHidden:searchDirectory:]
  +[AMSFeatureFlagGroup allFlagGroups]
  +[AMSFeatureFlagGroup fetchFlagGroupWithName:]
  +[AMSFeatureFlagGroup enableFlagGroupWithName:error:]
  +[AMSFeatureFlagGroup disableFlagGroupWithName:error:]
  +[AMSFeatureFlagGroup allFlagGroupsIncludingHidden:]
  +[AMSFeatureFlagGroup flagGroupWithName:includingHidden:]
  +[AMSFeatureFlagGroup groupsFromDomainData:domain:mutableFeatures:profileFeatures:includesHidden:]
  +[AMSFeatureFlagGroup _normalizedFlagGroupsFromFlagGroups:]
  +[AMSFeatureFlagGroup setFlagGroupWithName:enabled:error:]
  +[AMSFeatureFlagGroup groupsFromDomainData:domain:]
  +[AMSFeatureFlagGroup resetAllFlagGroups]

  // instance methods
  -[AMSFeatureFlagGroup name]
  -[AMSFeatureFlagGroup setFlagsForDevelopmentPhase:enabled:]
  -[AMSFeatureFlagGroup _testableFlags]
  -[AMSFeatureFlagGroup _developmentFlags]
  -[AMSFeatureFlagGroup _completedFlags]
  -[AMSFeatureFlagGroup _groupKeyForType:]
  -[AMSFeatureFlagGroup flagsForType:]
  -[AMSFeatureFlagGroup isGroupTypeEnabled:]
  -[AMSFeatureFlagGroup initWithName:domain:]
  -[AMSFeatureFlagGroup testableFlags]
  -[AMSFeatureFlagGroup developmentFlags]
  -[AMSFeatureFlagGroup completedFlags]
  -[AMSFeatureFlagGroup setGroupType:enabled:]
  -[AMSFeatureFlagGroup activateFlagsIfNeededForType:]
  -[AMSFeatureFlagGroup .cxx_destruct]
  -[AMSFeatureFlagGroup setName:]
  -[AMSFeatureFlagGroup initWithName:]
  -[AMSFeatureFlagGroup allITFEs]
  -[AMSFeatureFlagGroup reset]
  -[AMSFeatureFlagGroup flags]
  -[AMSFeatureFlagGroup appendFlag:]
  -[AMSFeatureFlagGroup mutableFlags]
  -[AMSFeatureFlagGroup activateITFEs]
  -[AMSFeatureFlagGroup activateFlagsIfNeededForDevelopmentPhase:]
  -[AMSFeatureFlagGroup setMutableFlags:]
  -[AMSFeatureFlagGroup isDevelopmentPhaseEnabled:]
  -[AMSFeatureFlagGroup flagsForDevelopmentPhase:]
  -[AMSFeatureFlagGroup fetchAllGroupKeys]
  -[AMSFeatureFlagGroup _groupKeyForDevelopmentPhase:]


AMSFeatureFlagITFE : NSObject
 @property  BOOL enabled
 @property  BOOL readonly
 @property  NSString *value

  // class methods
  +[AMSFeatureFlagITFE _mutableITFEs]
  +[AMSFeatureFlagITFE setMutableFeatureName:toValue:]
  +[AMSFeatureFlagITFE _isITFEValueCustom:]
  +[AMSFeatureFlagITFE fetchCustomFeatures]
  +[AMSFeatureFlagITFE _remoteGroupITFEs]
  +[AMSFeatureFlagITFE _flagGroupITFEs]
  +[AMSFeatureFlagITFE removeOrphanITFEValues:]
  +[AMSFeatureFlagITFE _concreteITFEs]
  +[AMSFeatureFlagITFE resetFeatures]
  +[AMSFeatureFlagITFE _profileITFEs]
  +[AMSFeatureFlagITFE verifyOrphansForGroups:]
  +[AMSFeatureFlagITFE _customITFEs]
  +[AMSFeatureFlagITFE fetchMutableFeatures]
  +[AMSFeatureFlagITFE fetchProfileFeatures]
  +[AMSFeatureFlagITFE verifyOrphans]

  // instance methods
  -[AMSFeatureFlagITFE isReadonly]
  -[AMSFeatureFlagITFE toggle:]
  -[AMSFeatureFlagITFE .cxx_destruct]
  -[AMSFeatureFlagITFE isEqual:]
  -[AMSFeatureFlagITFE setValue:]
  -[AMSFeatureFlagITFE isEnabled]
  -[AMSFeatureFlagITFE value]
  -[AMSFeatureFlagITFE setEnabled:]
  -[AMSFeatureFlagITFE setReadonly:]
  -[AMSFeatureFlagITFE initWithValue:isEnabled:isMutable:]


AMSFeatureFlagRemote : AMSFeatureFlag
  // class methods
  +[AMSFeatureFlagRemote fetchRemoteFlagState]

  // instance methods
  -[AMSFeatureFlagRemote _preferencesKey]
  -[AMSFeatureFlagRemote isRemote]
  -[AMSFeatureFlagRemote _updateDevelopmentPhase]
  -[AMSFeatureFlagRemote _updateInternalEnabledState]
  -[AMSFeatureFlagRemote _activateFlag]
  -[AMSFeatureFlagRemote _developmentPhase]


AMSFeatureFlagTask : AMSTask <AMSBagConsumer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSFeatureFlagTask bagSubProfileVersion]
  +[AMSFeatureFlagTask clearCache]
  +[AMSFeatureFlagTask bagSubProfile]
  +[AMSFeatureFlagTask _cachePath]
  +[AMSFeatureFlagTask cachedRemoteGroups]
  +[AMSFeatureFlagTask _cacheResponse:error:]
  +[AMSFeatureFlagTask _handleDeletedITFEsFromResponse:]
  +[AMSFeatureFlagTask lastFetchedDate]
  +[AMSFeatureFlagTask _cacheDirectory]
  +[AMSFeatureFlagTask createBagForSubProfile]

  // instance methods
  -[AMSFeatureFlagTask _updateRemoteFeatureFlags]
  -[AMSFeatureFlagTask perform]


AMSOpenActionResult : NSObject
 @property  AMSURLAction *action
 @property  BOOL engagementPresented
 @property  BOOL interruptionResult

  // instance methods
  -[AMSOpenActionResult engagementPresented]
  -[AMSOpenActionResult setEngagementPresented:]
  -[AMSOpenActionResult interruptionResult]
  -[AMSOpenActionResult setInterruptionResult:]
  -[AMSOpenActionResult .cxx_destruct]
  -[AMSOpenActionResult setAction:]
  -[AMSOpenActionResult action]


AMSFinanceActionResponse : NSObject <AMSFinancePerformable>
 @property  ACAccount *account
 @property  NSString *creditString
 @property  long long kind
 @property  BOOL shouldRetry
 @property  AMSURLTaskInfo *taskInfo
 @property  BOOL tidContinue
 @property  NSURL *URL
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSFinanceActionResponse _presentEngagementForURL:taskInfo:]
  +[AMSFinanceActionResponse _deepLinkForURL:taskInfo:gotoType:isAccountURL:tidContinue:]
  +[AMSFinanceActionResponse handleExternalGotoURL:]
  +[AMSFinanceActionResponse _isModernURL:taskInfo:]
  +[AMSFinanceActionResponse handleGotoURL:taskInfo:gotoType:accountURL:tidContinue:retryOnSuccess:]
  +[AMSFinanceActionResponse _bodyObjectFromRequest:]
  +[AMSFinanceActionResponse _URLForCommerceUIFromURL:taskInfo:tidContinue:]
  +[AMSFinanceActionResponse actionWithActionDictionary:taskInfo:]
  +[AMSFinanceActionResponse actionWithUpdatedCreditString:account:taskInfo:]

  // instance methods
  -[AMSFinanceActionResponse setTaskInfo:]
  -[AMSFinanceActionResponse setAccount:]
  -[AMSFinanceActionResponse account]
  -[AMSFinanceActionResponse tidContinue]
  -[AMSFinanceActionResponse creditString]
  -[AMSFinanceActionResponse initWithTaskInfo:]
  -[AMSFinanceActionResponse setTidContinue:]
  -[AMSFinanceActionResponse setCreditString:]
  -[AMSFinanceActionResponse _performOpenStandardURL]
  -[AMSFinanceActionResponse _handleGotoAction]
  -[AMSFinanceActionResponse _performCreditDisplayUpdate]
  -[AMSFinanceActionResponse _performGotoURL]
  -[AMSFinanceActionResponse performWithTaskInfo:]
  -[AMSFinanceActionResponse setURL:]
  -[AMSFinanceActionResponse .cxx_destruct]
  -[AMSFinanceActionResponse setKind:]
  -[AMSFinanceActionResponse URL]
  -[AMSFinanceActionResponse kind]
  -[AMSFinanceActionResponse shouldRetry]
  -[AMSFinanceActionResponse setShouldRetry:]
  -[AMSFinanceActionResponse taskInfo]


AMSFinanceAuthenticateResponse : NSObject <AMSFinancePerformable>
 @property  NSDictionary *dialogDictionary
 @property  AMSFinanceDialogResponse *dialogResponse
 @property  AMSAuthenticateRequest *authenticateRequest
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSFinanceAuthenticateResponse authenticationTypeForResponse:responseDictionary:]
  +[AMSFinanceAuthenticateResponse _presentAuthRequest:taskInfo:]
  +[AMSFinanceAuthenticateResponse _serviceIdentifierForResponse:taskInfo:]
  +[AMSFinanceAuthenticateResponse _authenticateRequestWithAuthType:taskInfo:dialogResponse:serviceIdentifier:]
  +[AMSFinanceAuthenticateResponse _performAuthRequest:actionResult:redirectURL:taskInfo:]
  +[AMSFinanceAuthenticateResponse _handleDialogFromAuthError:taskInfo:]
  +[AMSFinanceAuthenticateResponse _updateTaskWithAuthedAccount:taskInfo:]
  +[AMSFinanceAuthenticateResponse _updateTaskWithLastCredentialSource:taskInfo:]
  +[AMSFinanceAuthenticateResponse performAuthFromResponse:taskInfo:]

  // instance methods
  -[AMSFinanceAuthenticateResponse performWithTaskInfo:]
  -[AMSFinanceAuthenticateResponse dialogResponse]
  -[AMSFinanceAuthenticateResponse _locateActionableButtonUsingDialogResponse:]
  -[AMSFinanceAuthenticateResponse dialogDictionary]
  -[AMSFinanceAuthenticateResponse initWithResponseDictionary:taskInfo:]
  -[AMSFinanceAuthenticateResponse setDialogDictionary:]
  -[AMSFinanceAuthenticateResponse .cxx_destruct]
  -[AMSFinanceAuthenticateResponse authenticateRequest]


AMSFinanceDelegateAuthenticateChallengeResponse : NSObject <AMSFinancePerformable>
 @property  NSDictionary *responseDictionary
 @property  AMSURLTaskInfo *taskInfo
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSFinanceDelegateAuthenticateChallengeResponse isDelegateAuthChallengeForTaskInfo:]

  // instance methods
  -[AMSFinanceDelegateAuthenticateChallengeResponse setTaskInfo:]
  -[AMSFinanceDelegateAuthenticateChallengeResponse responseDictionary]
  -[AMSFinanceDelegateAuthenticateChallengeResponse performWithTaskInfo:]
  -[AMSFinanceDelegateAuthenticateChallengeResponse initWithResponseDictionary:taskInfo:]
  -[AMSFinanceDelegateAuthenticateChallengeResponse .cxx_destruct]
  -[AMSFinanceDelegateAuthenticateChallengeResponse setResponseDictionary:]
  -[AMSFinanceDelegateAuthenticateChallengeResponse taskInfo]


AMSFinanceDialogResponse : NSObject <AMSFinancePerformable>
 @property  BOOL containsCommerceUIURL
 @property  NSDictionary *dialogDictionary
 @property  long long kind
 @property  NSDictionary *responseDictionary
 @property  AMSURLTaskInfo *taskInfo
 @property  AMSDialogRequest *dialogRequest
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSFinanceDialogResponse handleDialogResult:taskInfo:]
  +[AMSFinanceDialogResponse performFinanceDialog:taskInfo:]
  +[AMSFinanceDialogResponse _credentialSource:satisfiesAuthenticationType:]
  +[AMSFinanceDialogResponse _serviceActionFromButton:taskInfo:]
  +[AMSFinanceDialogResponse _handleAskPermissionRequestWithURL:account:]
  +[AMSFinanceDialogResponse _shouldSendOverIDS:taskInfo:]
  +[AMSFinanceDialogResponse _presentIDSDialog:taskInfo:]
  +[AMSFinanceDialogResponse _presentDialog:taskInfo:]
  +[AMSFinanceDialogResponse dialogKindForTaskInfo:withResponseDictionary:]

  // instance methods
  -[AMSFinanceDialogResponse setTaskInfo:]
  -[AMSFinanceDialogResponse responseDictionary]
  -[AMSFinanceDialogResponse performWithTaskInfo:]
  -[AMSFinanceDialogResponse initWithResponseDictionary:kind:taskInfo:]
  -[AMSFinanceDialogResponse dialogDictionary]
  -[AMSFinanceDialogResponse _createDialogRequest]
  -[AMSFinanceDialogResponse _actionTypeFromButtonDictionary:]
  -[AMSFinanceDialogResponse _isCommerceUIURL:actionType:URLType:]
  -[AMSFinanceDialogResponse _enrichedMetricsDictionaryWithFinanceDictionary:]
  -[AMSFinanceDialogResponse _createRequestButtonsFromDialogDictionary:]
  -[AMSFinanceDialogResponse _createActionFromButtonDictionary:title:]
  -[AMSFinanceDialogResponse containsCommerceUIURL]
  -[AMSFinanceDialogResponse .cxx_destruct]
  -[AMSFinanceDialogResponse setKind:]
  -[AMSFinanceDialogResponse kind]
  -[AMSFinanceDialogResponse dialogRequest]
  -[AMSFinanceDialogResponse taskInfo]


AMSFinancePaymentSheetResponse : NSObject <AMSFinancePerformable>
 @property  AMSFinanceAuthenticateResponse *authenticateResponse
 @property  NSDictionary *metricsDictionary
 @property  AMSPaymentSheetRequest *paymentSheetRequest
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSFinancePaymentSheetResponse _createRequestFromDictionary:confirmationOnly:delegateAuthenticationRequired:biometricSignatureRequired:authenticateResponse:taskInfo:]
  +[AMSFinancePaymentSheetResponse _createMerchantSessionFromDictionary:]
  +[AMSFinancePaymentSheetResponse _attributedStringForAttributedDictionary:account:]
  +[AMSFinancePaymentSheetResponse _attributedStringForAttributedArray:account:]
  +[AMSFinancePaymentSheetResponse _salableIconForString:]
  +[AMSFinancePaymentSheetResponse _attributedStringForStringArray:useGrey:account:shouldUppercase:]
  +[AMSFinancePaymentSheetResponse _confirmationTitleForString:]
  +[AMSFinancePaymentSheetResponse _greyAttributedStringForAttributedString:range:]
  +[AMSFinancePaymentSheetResponse _payeeInferredFromEnumeratedTitle:]
  +[AMSFinancePaymentSheetResponse _attributedListDictionaryForValues:account:]
  +[AMSFinancePaymentSheetResponse _flexListDictionaryForValues:account:shouldUppercaseText:]
  +[AMSFinancePaymentSheetResponse _payeeForRequestorValue:]
  +[AMSFinancePaymentSheetResponse _attributedStringForSalableInfoStringArray:account:shouldUppercase:]

  // instance methods
  -[AMSFinancePaymentSheetResponse initWithResponseDictionary:confirmationOnly:delegateAuthenticationRequired:biometricSignatureRequired:taskInfo:]
  -[AMSFinancePaymentSheetResponse metricsDictionary]
  -[AMSFinancePaymentSheetResponse performWithTaskInfo:]
  -[AMSFinancePaymentSheetResponse _enrichedMetricsDictionaryWithFinanceDictionary:]
  -[AMSFinancePaymentSheetResponse authenticateResponse]
  -[AMSFinancePaymentSheetResponse .cxx_destruct]
  -[AMSFinancePaymentSheetResponse paymentSheetRequest]


AMSFinanceResponse : NSObject
 @property  AMSFinanceAuthenticateResponse *cachedAuthenticateResponse
 @property  AMSFinanceDialogResponse *cachedDialogResponse
 @property  AMSFinancePaymentSheetResponse *cachedPaymentSheetResponse
 @property  long long dialogKind
 @property  NSDictionary *responseDictionary
 @property  AMSURLTaskInfo *taskInfo
 @property  ACAccount *account
 @property  NSArray *actions
 @property  NSArray *pingURLs
 @property  NSError *serverError
 @property  BOOL supportedProtocolVersion
 @property  NSURL *versionMismatchURL

  // class methods
  +[AMSFinanceResponse valueForProtocolKey:inResponse:]

  // instance methods
  -[AMSFinanceResponse pingURLs]
  -[AMSFinanceResponse supportedProtocolVersion]
  -[AMSFinanceResponse serverError]
  -[AMSFinanceResponse setTaskInfo:]
  -[AMSFinanceResponse _performerForAuthenticate]
  -[AMSFinanceResponse _performerForPaymentSheetWithDelegateAuthentication:]
  -[AMSFinanceResponse _performerForDialog]
  -[AMSFinanceResponse cachedAuthenticateResponse]
  -[AMSFinanceResponse account]
  -[AMSFinanceResponse responseDictionary]
  -[AMSFinanceResponse .cxx_destruct]
  -[AMSFinanceResponse dialogKind]
  -[AMSFinanceResponse actions]
  -[AMSFinanceResponse cachedDialogResponse]
  -[AMSFinanceResponse setCachedDialogResponse:]
  -[AMSFinanceResponse _performerForCreditDisplay]
  -[AMSFinanceResponse setCachedAuthenticateResponse:]
  -[AMSFinanceResponse setResponseDictionary:]
  -[AMSFinanceResponse initWithTaskInfo:decodedObject:]
  -[AMSFinanceResponse cachedPaymentSheetResponse]
  -[AMSFinanceResponse versionMismatchURL]
  -[AMSFinanceResponse _performerForActionDictionary]
  -[AMSFinanceResponse _valueForProtocolKey:]
  -[AMSFinanceResponse setCachedPaymentSheetResponse:]
  -[AMSFinanceResponse taskInfo]


AMSFinanceVerifyPurchaseResponse : NSObject <AMSFinancePerformable>
 @property  AMSDialogRequest *dialogRequest
 @property  NSDictionary *responseDictionary
 @property  AMSURLTaskInfo *taskInfo
 @property  long long verifyType
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSFinanceVerifyPurchaseResponse isVerifyPurchasePayload:]
  +[AMSFinanceVerifyPurchaseResponse _verifyTypeFromPayload:]
  +[AMSFinanceVerifyPurchaseResponse _dialogRequestForCVVFromPayload:verifyType:]
  +[AMSFinanceVerifyPurchaseResponse _dialogRequestForCarrierFromPayload:verifyType:]

  // instance methods
  -[AMSFinanceVerifyPurchaseResponse setTaskInfo:]
  -[AMSFinanceVerifyPurchaseResponse responseDictionary]
  -[AMSFinanceVerifyPurchaseResponse performWithTaskInfo:]
  -[AMSFinanceVerifyPurchaseResponse verifyType]
  -[AMSFinanceVerifyPurchaseResponse .cxx_destruct]
  -[AMSFinanceVerifyPurchaseResponse initWithPayload:taskInfo:]
  -[AMSFinanceVerifyPurchaseResponse setVerifyType:]
  -[AMSFinanceVerifyPurchaseResponse _runCarrierNewCodeWithError:]
  -[AMSFinanceVerifyPurchaseResponse _handleCVVDialogResult:shouldReattempt:]
  -[AMSFinanceVerifyPurchaseResponse _handleCarrierDialogResult:shouldReattempt:]
  -[AMSFinanceVerifyPurchaseResponse _runCarrierVerifyCode:error:]
  -[AMSFinanceVerifyPurchaseResponse _runCVVRequestForCode:error:]
  -[AMSFinanceVerifyPurchaseResponse setResponseDictionary:]
  -[AMSFinanceVerifyPurchaseResponse dialogRequest]
  -[AMSFinanceVerifyPurchaseResponse setDialogRequest:]
  -[AMSFinanceVerifyPurchaseResponse taskInfo]


AMSFollowUp : NSObject
 @property  FLFollowUpController *followUpController
 @property  NSObject<OS_dispatch_queue> *followUpQueue

  // instance methods
  -[AMSFollowUp postFollowUpItem:]
  -[AMSFollowUp .cxx_destruct]
  -[AMSFollowUp followUpQueue]
  -[AMSFollowUp clearFollowUpWithBackingIdentifier:]
  -[AMSFollowUp clearFollowUpWithIdentifier:account:]
  -[AMSFollowUp _pendingFollowUpWithBackingIdentifier:error:]
  -[AMSFollowUp setFollowUpQueue:]
  -[AMSFollowUp pendingFollowUpsForAccount:]
  -[AMSFollowUp pendingFollowUpWithIdentifier:account:]
  -[AMSFollowUp init]
  -[AMSFollowUp setFollowUpController:]
  -[AMSFollowUp followUpController]
  -[AMSFollowUp pendingFollowUps]
  -[AMSFollowUp clearFollowUpItem:]


AMSFollowUpAction : NSObject
 @property  NSString *backingIdentifier
 @property  NSObject<OS_dispatch_queue> *internalQueue
 @property  NSObject<OS_dispatch_queue> *actionQueue
 @property  NSString *identifier
 @property  NSString *label
 @property  NSString *logKey
 @property  AMSMetricsEvent *metricsEvent
 @property  NSString *parentIdentifier
 @property  NSString *preferredClient
 @property  NSURLRequest *request
 @property  BOOL requiresFollowUpUI
 @property  BOOL shouldClear
 @property  NSURL *url
 @property  NSMutableDictionary *userInfo

  // instance methods
  -[AMSFollowUpAction setRequest:]
  -[AMSFollowUpAction label]
  -[AMSFollowUpAction setUserInfo:]
  -[AMSFollowUpAction setInternalQueue:]
  -[AMSFollowUpAction initWithLabel:]
  -[AMSFollowUpAction logKey]
  -[AMSFollowUpAction url]
  -[AMSFollowUpAction .cxx_destruct]
  -[AMSFollowUpAction backingIdentifier]
  -[AMSFollowUpAction initWithAction:parentIdentifier:]
  -[AMSFollowUpAction _setUserInfoProperty:forKey:]
  -[AMSFollowUpAction requiresFollowUpUI]
  -[AMSFollowUpAction performActionsWithBag:account:]
  -[AMSFollowUpAction initWithItem:action:]
  -[AMSFollowUpAction preferredClient]
  -[AMSFollowUpAction setRequiresFollowUpUI:]
  -[AMSFollowUpAction setShouldClear:]
  -[AMSFollowUpAction generateAction]
  -[AMSFollowUpAction postMetricsWithBag:]
  -[AMSFollowUpAction performActionsWithContract:account:]
  -[AMSFollowUpAction postMetricsWithBagContract:]
  -[AMSFollowUpAction setBackingIdentifier:]
  -[AMSFollowUpAction setActionQueue:]
  -[AMSFollowUpAction setUrl:]
  -[AMSFollowUpAction metricsEvent]
  -[AMSFollowUpAction request]
  -[AMSFollowUpAction identifier]
  -[AMSFollowUpAction setMetricsEvent:]
  -[AMSFollowUpAction internalQueue]
  -[AMSFollowUpAction parentIdentifier]
  -[AMSFollowUpAction setIdentifier:]
  -[AMSFollowUpAction setParentIdentifier:]
  -[AMSFollowUpAction initWithLabel:parentIdentifier:]
  -[AMSFollowUpAction setPreferredClient:]
  -[AMSFollowUpAction userInfo]
  -[AMSFollowUpAction setLogKey:]
  -[AMSFollowUpAction actionQueue]
  -[AMSFollowUpAction shouldClear]
  -[AMSFollowUpAction setLabel:]
  -[AMSFollowUpAction initWithAction:]


AMSFollowUpItem : NSObject
 @property  NSObject<OS_dispatch_queue> *internalQueue
 @property  NSObject<OS_dispatch_queue> *metricsQueue
 @property  ACAccount *account
 @property  NSArray *actions
 @property  BOOL active
 @property  NSString *backingIdentifier
 @property  NSString *bundleIconName
 @property  BOOL disableGrouping
 @property  long long displayStyle
 @property  NSDate *expirationDate
 @property  NSString *footer
 @property  NSString *groupIdentifier
 @property  BOOL hardwareOffer
 @property  NSString *identifier
 @property  NSString *informativeText
 @property  NSString *logKey
 @property  AMSMetricsEvent *metricsEvent
 @property  long long priority
 @property  BOOL shouldPostNotification
 @property  NSString *title
 @property  NSMutableDictionary *userInfo

  // class methods
  +[AMSFollowUpItem backingIdentifierForIdentifier:account:]
  +[AMSFollowUpItem componentsFromBackingIdentifier:]

  // instance methods
  -[AMSFollowUpItem setMetricsQueue:]
  -[AMSFollowUpItem setActions:]
  -[AMSFollowUpItem metricsQueue]
  -[AMSFollowUpItem setUserInfo:]
  -[AMSFollowUpItem footer]
  -[AMSFollowUpItem setInternalQueue:]
  -[AMSFollowUpItem setAccount:]
  -[AMSFollowUpItem setFooter:]
  -[AMSFollowUpItem account]
  -[AMSFollowUpItem setTitle:]
  -[AMSFollowUpItem logKey]
  -[AMSFollowUpItem active]
  -[AMSFollowUpItem displayStyle]
  -[AMSFollowUpItem .cxx_destruct]
  -[AMSFollowUpItem backingIdentifier]
  -[AMSFollowUpItem initWithFollowUpItem:]
  -[AMSFollowUpItem shouldOverwriteItem:]
  -[AMSFollowUpItem groupIdentifier]
  -[AMSFollowUpItem postMetricsWithBag:]
  -[AMSFollowUpItem postMetricsWithBagContract:]
  -[AMSFollowUpItem disableGrouping]
  -[AMSFollowUpItem isHardwareOffer]
  -[AMSFollowUpItem shouldPostNotification]
  -[AMSFollowUpItem setHardwareOffer:]
  -[AMSFollowUpItem setDisableGrouping:]
  -[AMSFollowUpItem actions]
  -[AMSFollowUpItem setExpirationDate:]
  -[AMSFollowUpItem setPriority:]
  -[AMSFollowUpItem setBundleIconName:]
  -[AMSFollowUpItem metricsEvent]
  -[AMSFollowUpItem identifier]
  -[AMSFollowUpItem setMetricsEvent:]
  -[AMSFollowUpItem title]
  -[AMSFollowUpItem priority]
  -[AMSFollowUpItem internalQueue]
  -[AMSFollowUpItem setIdentifier:]
  -[AMSFollowUpItem initWithIdentifier:account:priority:]
  -[AMSFollowUpItem setShouldPostNotification:]
  -[AMSFollowUpItem userInfo]
  -[AMSFollowUpItem bundleIconName]
  -[AMSFollowUpItem informativeText]
  -[AMSFollowUpItem setLogKey:]
  -[AMSFollowUpItem setInformativeText:]
  -[AMSFollowUpItem expirationDate]
  -[AMSFollowUpItem generateItem]
  -[AMSFollowUpItem setDisplayStyle:]


AMSFollowUpMetricsEvent : AMSMetricsEvent
  // class methods
  +[AMSFollowUpMetricsEvent eventFromMetricsDictionary:]


AMSFraudReport : NSObject <AMSBagConsumer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSFraudReport bagKeySet]
  +[AMSFraudReport bagSubProfileVersion]
  +[AMSFraudReport bagSubProfile]
  +[AMSFraudReport initialize]
  +[AMSFraudReport _handleCallbackFraudReportResponse:account:bag:]
  +[AMSFraudReport _containsFraudReportHeaders:]
  +[AMSFraudReport _containsCallbackFraudReportHeaders:]
  +[AMSFraudReport isFeatureSupported]
  +[AMSFraudReport _signatureForRequest:signingKeyRef:]
  +[AMSFraudReport _handleFraudReportResponse:account:bag:]
  +[AMSFraudReport handleResponse:account:bag:]
  +[AMSFraudReport _isCallbackFraudReportStatusCode:]
  +[AMSFraudReport addDeviceIdentityCertificateAndSignatureToRequest:parameters:bag:]
  +[AMSFraudReport _performCallbackWithURL:headers:bag:]
  +[AMSFraudReport createBagForSubProfile]
  +[AMSFraudReport _isFraudReportStatusCode:]


AMSFraudReportResponse : NSObject <NSSecureCoding>
 @property  NSString *nameSpace
 @property  long long reportedScore
 @property  long long newScore
 @property  NSString *proof
 @property  NSString *evaluatedElement
 @property  NSString *finalizedElement
 @property  NSString *keyID

  // class methods
  +[AMSFraudReportResponse supportsSecureCoding]

  // instance methods
  -[AMSFraudReportResponse proof]
  -[AMSFraudReportResponse initWithCoder:]
  -[AMSFraudReportResponse newScore]
  -[AMSFraudReportResponse .cxx_destruct]
  -[AMSFraudReportResponse setProof:]
  -[AMSFraudReportResponse reportedScore]
  -[AMSFraudReportResponse finalizedElement]
  -[AMSFraudReportResponse initWithDictionary:keyID:]
  -[AMSFraudReportResponse evaluatedElement]
  -[AMSFraudReportResponse initWithURLResult:keyID:]
  -[AMSFraudReportResponse setReportedScore:]
  -[AMSFraudReportResponse setEvaluatedElement:]
  -[AMSFraudReportResponse setFinalizedElement:]
  -[AMSFraudReportResponse setKeyID:]
  -[AMSFraudReportResponse nameSpace]
  -[AMSFraudReportResponse keyID]
  -[AMSFraudReportResponse setNewScore:]
  -[AMSFraudReportResponse encodeWithCoder:]
  -[AMSFraudReportResponse setNameSpace:]


AMSFraudReportTask : AMSTask
  // class methods
  +[AMSFraudReportTask performFraudReportRefreshWithAccount:transactionID:nameSpace:fsrData:keyID:]


AMSFrozenBagValue : AMSBagValue
 @property  <AMSBagDataSourceProtocol> *dataSource

  // instance methods
  -[AMSFrozenBagValue setDataSource:]
  -[AMSFrozenBagValue .cxx_destruct]
  -[AMSFrozenBagValue dataSource]
  -[AMSFrozenBagValue initWithKey:value:valueType:]


AMSGenerateFDSTask : AMSTask
 @property  AMSFDSRequest *request
 @property  ACAccount *account
 @property  unsigned long action
 @property  <AMSBagProtocol> *bag
 @property  BOOL deviceSupportsAFDSValues
 @property  BOOL deviceSupportsAFDSValuesV2
 @property  NSString *logKey
 @property  NSNumber *purchaseIdentifier

  // class methods
  +[AMSGenerateFDSTask deviceSupportsAFDSV2WithBag:logKey:]

  // instance methods
  -[AMSGenerateFDSTask account]
  -[AMSGenerateFDSTask logKey]
  -[AMSGenerateFDSTask initWithPurchaseInfo:bag:]
  -[AMSGenerateFDSTask runTask]
  -[AMSGenerateFDSTask .cxx_destruct]
  -[AMSGenerateFDSTask bag]
  -[AMSGenerateFDSTask deviceSupportsAFDSValues]
  -[AMSGenerateFDSTask deviceSupportsAFDSValuesV2]
  -[AMSGenerateFDSTask action]
  -[AMSGenerateFDSTask request]
  -[AMSGenerateFDSTask initWithRequest:bag:]
  -[AMSGenerateFDSTask purchaseIdentifier]


AMSHandleDialogResultTask : AMSTask
 @property  ACAccount *account
 @property  <AMSBagProtocol> *bag
 @property  AMSProcessInfo *clientInfo
 @property  NSString *proxyBundleId
 @property  AMSDialogRequest *request
 @property  AMSDialogResult *result
 @property  NSError *error

  // instance methods
  -[AMSHandleDialogResultTask setAccount:]
  -[AMSHandleDialogResultTask account]
  -[AMSHandleDialogResultTask setClientInfo:]
  -[AMSHandleDialogResultTask setProxyBundleId:]
  -[AMSHandleDialogResultTask .cxx_destruct]
  -[AMSHandleDialogResultTask bag]
  -[AMSHandleDialogResultTask clientInfo]
  -[AMSHandleDialogResultTask initWithResult:bag:]
  -[AMSHandleDialogResultTask proxyBundleId]
  -[AMSHandleDialogResultTask initWithRequest:result:error:bag:]
  -[AMSHandleDialogResultTask result]
  -[AMSHandleDialogResultTask request]
  -[AMSHandleDialogResultTask perform]
  -[AMSHandleDialogResultTask error]


AMSHTTPArchive : NSObject <NSSecureCoding>
 @property  NSData *backingJSONData
 @property  BOOL compressed
 @property  NSData *JSONData
 @property  NSString *urlString

  // class methods
  +[AMSHTTPArchive merge:]
  +[AMSHTTPArchive directory]
  +[AMSHTTPArchive ams_generateResponseDictionaryForMetrics:responseData:]
  +[AMSHTTPArchive supportsSecureCoding]
  +[AMSHTTPArchive ams_generateContentDictionaryForResponse:responseData:]
  +[AMSHTTPArchive _createJSONObjectForEntries:]
  +[AMSHTTPArchive ams_dateFormatterForTimeZone:]
  +[AMSHTTPArchive removeHTTPArchiveFilesOlderThanDate:]
  +[AMSHTTPArchive merge:withEstimatedFileSizeLimit:]
  +[AMSHTTPArchive ams_generateRequestDictionaryForMetrics:requestData:]
  +[AMSHTTPArchive _createJSONObjectForTaskMetrics:requestData:responseData:]
  +[AMSHTTPArchive _timeIntervalFromFilename:]
  +[AMSHTTPArchive ams_generateCommentsStringForMetrics:]
  +[AMSHTTPArchive ams_generateHeadersArrayForHTTPHeaders:]

  // instance methods
  -[AMSHTTPArchive urlString]
  -[AMSHTTPArchive setUrlString:]
  -[AMSHTTPArchive initWithCoder:]
  -[AMSHTTPArchive initWithHTTPArchiveTaskInfo:]
  -[AMSHTTPArchive initWithMetrics:requestData:responseData:]
  -[AMSHTTPArchive .cxx_destruct]
  -[AMSHTTPArchive isCompressed]
  -[AMSHTTPArchive writeToDiskWithError:compressed:]
  -[AMSHTTPArchive JSONData]
  -[AMSHTTPArchive setCompressed:]
  -[AMSHTTPArchive logHARData]
  -[AMSHTTPArchive backingJSONData]
  -[AMSHTTPArchive setBackingJSONData:]
  -[AMSHTTPArchive writeToDiskWithError:compressed:appendCombined:]
  -[AMSHTTPArchive initWithJSONObject:]
  -[AMSHTTPArchive encodeWithCoder:]


AMSHTTPArchiveController : NSObject
  // class methods
  +[AMSHTTPArchiveController initialize]
  +[AMSHTTPArchiveController _disabled]
  +[AMSHTTPArchiveController addHTTPArchive:]
  +[AMSHTTPArchiveController _harURLFilters]
  +[AMSHTTPArchiveController harURLFilters]
  +[AMSHTTPArchiveController setMaxBufferSizeOverride:]
  +[AMSHTTPArchiveController maxBufferSizeOverride]
  +[AMSHTTPArchiveController isRemoveDisabled]
  +[AMSHTTPArchiveController setRemoveDisabled:]
  +[AMSHTTPArchiveController _updateHarFileFilters]
  +[AMSHTTPArchiveController _shouldAddRequest:]


AMSHTTPArchiveService : NSObject
 @property  NSXPCConnection *connection
 @property  @? errorHandler
 @property  NSObject<OS_dispatch_queue> *queue

  // class methods
  +[AMSHTTPArchiveService recordTrafficWithTaskInfo:]
  +[AMSHTTPArchiveService _sharedProxy]

  // instance methods
  -[AMSHTTPArchiveService .cxx_destruct]
  -[AMSHTTPArchiveService _createRemoteConnection]
  -[AMSHTTPArchiveService setConnection:]
  -[AMSHTTPArchiveService init]
  -[AMSHTTPArchiveService setErrorHandler:]
  -[AMSHTTPArchiveService setQueue:]
  -[AMSHTTPArchiveService connection]
  -[AMSHTTPArchiveService errorHandler]
  -[AMSHTTPArchiveService queue]
  -[AMSHTTPArchiveService dealloc]
  -[AMSHTTPArchiveService _createProxy]
  -[AMSHTTPArchiveService _removeRemoteConnection]


AMSHTTPArchiveTaskInfo : NSObject <NSSecureCoding>
 @property  NSURLSessionTaskMetrics *metrics
 @property  NSData *HTTPBody
 @property  NSData *responseData

  // class methods
  +[AMSHTTPArchiveTaskInfo supportsSecureCoding]

  // instance methods
  -[AMSHTTPArchiveTaskInfo initWithCoder:]
  -[AMSHTTPArchiveTaskInfo .cxx_destruct]
  -[AMSHTTPArchiveTaskInfo initWithURLTaskInfo:]
  -[AMSHTTPArchiveTaskInfo HTTPBody]
  -[AMSHTTPArchiveTaskInfo responseData]
  -[AMSHTTPArchiveTaskInfo metrics]
  -[AMSHTTPArchiveTaskInfo encodeWithCoder:]


AMSInlineDelegate : NSObject
 @property  NSMutableSet *implementations
 @property  Protocol *protocol

  // instance methods
  -[AMSInlineDelegate .cxx_destruct]
  -[AMSInlineDelegate _initWithProtocol:]
  -[AMSInlineDelegate _implementMethodWithSelector:isRequired:isInstance:block:]
  -[AMSInlineDelegate implementations]
  -[AMSInlineDelegate implementOptionalClassMethodWithSelector:block:]
  -[AMSInlineDelegate implementRequiredClassMethodWithSelector:block:]
  -[AMSInlineDelegate implementRequiredInstanceMethodWithSelector:block:]
  -[AMSInlineDelegate setImplementations:]
  -[AMSInlineDelegate initWithProtocol:]
  -[AMSInlineDelegate setProtocol:]
  -[AMSInlineDelegate implementOptionalInstanceMethodWithSelector:block:]
  -[AMSInlineDelegate dealloc]
  -[AMSInlineDelegate protocol]


AMSBKSProcessAssertion : BKSProcessAssertion
 @property  unsigned long ams_assertionCount

  // instance methods
  -[AMSBKSProcessAssertion ams_assertionCount]
  -[AMSBKSProcessAssertion setAms_assertionCount:]


AMSKeepAlive : NSObject
 @property  NSString *name
 @property  long long style

  // class methods
  +[AMSKeepAlive keepAliveWithName:]
  +[AMSKeepAlive keepAliveWithName:style:]
  +[AMSKeepAlive _handleAssertionExpiration]
  +[AMSKeepAlive keepAliveWithFormat:]
  +[AMSKeepAlive _accessAssertionCache:]
  +[AMSKeepAlive keepAliveWithName:style:block:]

  // instance methods
  -[AMSKeepAlive name]
  -[AMSKeepAlive _takeProcessAssertion]
  -[AMSKeepAlive .cxx_destruct]
  -[AMSKeepAlive _removeOSTransaction]
  -[AMSKeepAlive _removeProcessAssertion]
  -[AMSKeepAlive _startLogTimer]
  -[AMSKeepAlive initWithName:]
  -[AMSKeepAlive _assertionName]
  -[AMSKeepAlive _takeOSTransaction]
  -[AMSKeepAlive dealloc]
  -[AMSKeepAlive invalidate]
  -[AMSKeepAlive style]
  -[AMSKeepAlive _cacheKey]
  -[AMSKeepAlive initWithName:style:]


AMSKeybag : NSObject
 @property  NSObject<OS_dispatch_queue> *dispatchQueue
 @property  AMSFairPlayContext *fairPlayContext

  // class methods
  +[AMSKeybag sharedInstance]

  // instance methods
  -[AMSKeybag .cxx_destruct]
  -[AMSKeybag importKeybagWithData:error:]
  -[AMSKeybag keybagSyncDataWithAccountID:transactionType:error:]
  -[AMSKeybag fairPlayContext]
  -[AMSKeybag resetContext]
  -[AMSKeybag fairplayContextWithError:]
  -[AMSKeybag importKeybagData:outError:]
  -[AMSKeybag importDiversityBagWithData:error:]
  -[AMSKeybag keybagSyncData:transactionType:outError:]
  -[AMSKeybag kybsyncData:transationType:error:]
  -[AMSKeybag setFairPlayContext:]
  -[AMSKeybag init]
  -[AMSKeybag dispatchQueue]
  -[AMSKeybag setDispatchQueue:]


AMSKeychain : NSObject
  // class methods
  +[AMSKeychain stashResumptionHeaders:]
  +[AMSKeychain deleteKeyPairWithOptions:error:]
  +[AMSKeychain legacyAttestationForOptions:error:]
  +[AMSKeychain deleteCertificateChainWithOptions:error:]
  +[AMSKeychain certificateChainStringsForOptions:error:]
  +[AMSKeychain keychainLabelForOptions:]
  +[AMSKeychain certificateKeychainLabelsForOptions:]
  +[AMSKeychain _certificatePrivateKeyLabelForOptions:]
  +[AMSKeychain _ssKeychainLabelForAccount:options:]
  +[AMSKeychain copyPrivateKeyWithContext:options:error:]
  +[AMSKeychain _generateLegacyKeypairForOptions:error:]
  +[AMSKeychain _copyLegacyPublicKeyForOptions:error:]
  +[AMSKeychain _ssCertificateKeychainLabelForAccount:options:]
  +[AMSKeychain _resumptionHeadersQuery]
  +[AMSKeychain _deleteResumptionHeaders]
  +[AMSKeychain _legacyAttestationForOptions:error:]
  +[AMSKeychain _primaryConstraintsWithOptions:]
  +[AMSKeychain _primaryConstraints]
  +[AMSKeychain _extendedConstraintsWithOptions:]
  +[AMSKeychain _primaryConstraintsForMac]
  +[AMSKeychain resumptionHeaders]
  +[AMSKeychain _primaryConstraintsForWatch]
  +[AMSKeychain _copyLegacyPrivateKeyForOptions:error:]
  +[AMSKeychain copyPublicKeyForOptions:error:]
  +[AMSKeychain performForwardKeyMigrationForDSID:forceMigration:]
  +[AMSKeychain copyAccessControlRefWithAccount:options:error:]
  +[AMSKeychain copyPublicKeyForAccount:options:error:]
  +[AMSKeychain createAccessControlRefWithOptions:error:]
  +[AMSKeychain copyPrivateKeyWithContext:account:options:error:]
  +[AMSKeychain copyCertificatePrivateKeyWithContext:account:options:error:]
  +[AMSKeychain storePrimaryCert:intermediateCert:privateKey:options:error:]


AMSKeychainOptions : NSObject <NSCopying>
 @property  NSString *clientCertLabel
 @property  NSString *intermediateCertLabel
 @property  NSString *label
 @property  unsigned long purpose
 @property  BOOL regenerateKeys
 @property  unsigned long style
 @property  BOOL authenticationFallbackVisible
 @property  BOOL displayAuthenticationReason
 @property  NSString *prompt

  // class methods
  +[AMSKeychainOptions preferredAttestationStyle]

  // instance methods
  -[AMSKeychainOptions setPrompt:]
  -[AMSKeychainOptions purpose]
  -[AMSKeychainOptions setPurpose:]
  -[AMSKeychainOptions label]
  -[AMSKeychainOptions regenerateKeys]
  -[AMSKeychainOptions .cxx_destruct]
  -[AMSKeychainOptions setRegenerateKeys:]
  -[AMSKeychainOptions setStyle:]
  -[AMSKeychainOptions initWithOptionsDictionary:]
  -[AMSKeychainOptions prompt]
  -[AMSKeychainOptions clientCertLabel]
  -[AMSKeychainOptions intermediateCertLabel]
  -[AMSKeychainOptions _compareString:withString:]
  -[AMSKeychainOptions setClientCertLabel:]
  -[AMSKeychainOptions setIntermediateCertLabel:]
  -[AMSKeychainOptions setAuthenticationFallbackVisible:]
  -[AMSKeychainOptions setDisplayAuthenticationReason:]
  -[AMSKeychainOptions init]
  -[AMSKeychainOptions isEqual:]
  -[AMSKeychainOptions displayAuthenticationReason]
  -[AMSKeychainOptions authenticationFallbackVisible]
  -[AMSKeychainOptions optionsDictionary]
  -[AMSKeychainOptions setLabel:]
  -[AMSKeychainOptions copyWithZone:]
  -[AMSKeychainOptions style]


AMSLazyPromise : AMSPromise
 @property  NSLock *lock
 @property  @? block
 @property  BOOL executedBlock
 @property  double timeout

  // instance methods
  -[AMSLazyPromise resultWithError:]
  -[AMSLazyPromise setBlock:]
  -[AMSLazyPromise addSuccessBlock:]
  -[AMSLazyPromise resultWithTimeout:error:]
  -[AMSLazyPromise .cxx_destruct]
  -[AMSLazyPromise executedBlock]
  -[AMSLazyPromise setTimeout:]
  -[AMSLazyPromise resultBeforeDate:error:]
  -[AMSLazyPromise _runBlock]
  -[AMSLazyPromise initWithBlock:]
  -[AMSLazyPromise timeout]
  -[AMSLazyPromise setLock:]
  -[AMSLazyPromise addErrorBlock:]
  -[AMSLazyPromise setExecutedBlock:]
  -[AMSLazyPromise lock]
  -[AMSLazyPromise initWithTimeout:block:]
  -[AMSLazyPromise addFinishBlock:]
  -[AMSLazyPromise block]


AMSLocalizations : NSObject
  // class methods
  +[AMSLocalizations localizedStringForKey:bundle:table:bag:]
  +[AMSLocalizations localizedStringForKey:bundle:table:languageCode:]


AMSLogConfig : NSObject <NSCopying, NSMutableCopying>
 @property  NSObject<OS_os_log> *backingOSLogObject
 @property  NSObject<OS_dispatch_queue> *propertyAccessQueue
 @property  NSString *category
 @property  NSString *subsystem
 @property  BOOL debugLogsEnabled
 @property  NSObject<OS_os_log> *OSLogObject

  // class methods
  +[AMSLogConfig sharedConfigOversize]
  +[AMSLogConfig sharedPrivacyConfig]
  +[AMSLogConfig sharedConfig]
  +[AMSLogConfig sharedAccountsNotificationPluginConfig]
  +[AMSLogConfig sharedAnisetteConfig]
  +[AMSLogConfig sharedAttestationConfig]
  +[AMSLogConfig sharedBagConfig]
  +[AMSLogConfig sharedKeychainConfig]
  +[AMSLogConfig sharedFollowUpConfig]
  +[AMSLogConfig sharedBagCacheConfig]
  +[AMSLogConfig sharedAccountsStorefrontConfig]
  +[AMSLogConfig sharedAccountsConfig]
  +[AMSLogConfig sharedMarketingItemConfig]
  +[AMSLogConfig sharedPromiseConfig]
  +[AMSLogConfig sharedMediaConfig]
  +[AMSLogConfig sharedDataMigrationConfig]
  +[AMSLogConfig sharedAccountsOversizeConfig]
  +[AMSLogConfig sharedAccountsCookiesConfig]
  +[AMSLogConfig sharedMediaServiceOwnerConfig]
  +[AMSLogConfig sharedRatingsProviderConfig]
  +[AMSLogConfig sharedAccountsMigrationConfig]
  +[AMSLogConfig sharedServerDataCacheConfig]
  +[AMSLogConfig sharedAccountsMultiUserConfig]
  +[AMSLogConfig _createLogConfigWithSubsystem:category:]
  +[AMSLogConfig sharedPushNotificationConfig]
  +[AMSLogConfig sharedAccountsLogoutConfig]
  +[AMSLogConfig sharedUserNotificationConfig]
  +[AMSLogConfig sharedAccountsSyncPluginConfig]
  +[AMSLogConfig sharedAccountsDaemonConfig]
  +[AMSLogConfig sharedPurchaseConfig]
  +[AMSLogConfig _debugLogsEnabled:]
  +[AMSLogConfig _createLogConfigWithBaseConfig:subystem:category:]
  +[AMSLogConfig sharedAccountsAuthenticationPluginConfig]
  +[AMSLogConfig sharedDeviceOffersConfig]
  +[AMSLogConfig sharedAccountsMigrationConfigOversize]

  // instance methods
  -[AMSLogConfig propertyAccessQueue]
  -[AMSLogConfig setSubsystem:]
  -[AMSLogConfig setPropertyAccessQueue:]
  -[AMSLogConfig backingOSLogObject]
  -[AMSLogConfig OSLogObject]
  -[AMSLogConfig setBackingOSLogObject:]
  -[AMSLogConfig debugLogsEnabled]
  -[AMSLogConfig .cxx_destruct]
  -[AMSLogConfig subsystem]
  -[AMSLogConfig init]
  -[AMSLogConfig isEqual:]
  -[AMSLogConfig mutableCopyWithZone:]
  -[AMSLogConfig category]
  -[AMSLogConfig copyWithZone:]
  -[AMSLogConfig setCategory:]


AMSMutableLogConfig : AMSLogConfig <NSCopying>
 @property  NSString *category
 @property  NSString *subsystem


AMSLookupDecoder : NSObject <AMSResponseDecoding>
  // instance methods
  -[AMSLookupDecoder resultFromResult:error:]


AMSLookup : AMSTask <AMSBagConsumer>
 @property  <AMSBagProtocol> *bag
 @property  NSString *caller
 @property  AMSProcessInfo *clientInfo
 @property  NSString *imageProfile
 @property  NSString *keyProfile
 @property  NSString *platform
 @property  long long signatureType
 @property  long long version
 @property  NSString *language
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSLookup bagKeySet]
  +[AMSLookup bagSubProfileVersion]
  +[AMSLookup bagSubProfile]
  +[AMSLookup createBagForSubProfile]

  // instance methods
  -[AMSLookup keyProfile]
  -[AMSLookup initWithBagContract:]
  -[AMSLookup setPlatform:]
  -[AMSLookup setLanguage:]
  -[AMSLookup platform]
  -[AMSLookup _compileQueryParametersWithBundleIds:itemIds:]
  -[AMSLookup setClientInfo:]
  -[AMSLookup setSignatureType:]
  -[AMSLookup .cxx_destruct]
  -[AMSLookup language]
  -[AMSLookup _addJSSignatureToRequest:]
  -[AMSLookup setImageProfile:]
  -[AMSLookup bag]
  -[AMSLookup clientInfo]
  -[AMSLookup setContract:]
  -[AMSLookup setVersion:]
  -[AMSLookup setKeyProfile:]
  -[AMSLookup setCaller:]
  -[AMSLookup contract]
  -[AMSLookup version]
  -[AMSLookup signatureType]
  -[AMSLookup setBag:]
  -[AMSLookup performLookupWithBundleIdentifiers:itemIdentifiers:]
  -[AMSLookup imageProfile]
  -[AMSLookup initWithBag:caller:keyProfile:]
  -[AMSLookup initWithBagContract:caller:keyProfile:]
  -[AMSLookup caller]


AMSLookupItem : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *artistName
 @property  NSArray *artwork
 @property  NSString *bundleIdentifier
 @property  NSArray *categoryNames
 @property  NSString *displayName
 @property  NSString *itemKind
 @property  NSNumber *iTunesStoreIdentifier
 @property  NSString *offerName
 @property  NSArray *offers
 @property  BOOL POIBased
 @property  NSURL *productPageURL
 @property  long long numberOfUserRatings
 @property  float userRating
 @property  long long numberOfUserRatingsForCurrentVersion
 @property  float userRatingForCurrentVersion
 @property  NSDictionary *itemDictionary

  // class methods
  +[AMSLookupItem supportsSecureCoding]

  // instance methods
  -[AMSLookupItem artwork]
  -[AMSLookupItem displayName]
  -[AMSLookupItem artistName]
  -[AMSLookupItem offers]
  -[AMSLookupItem initWithCoder:]
  -[AMSLookupItem iTunesStoreIdentifier]
  -[AMSLookupItem bundleIdentifier]
  -[AMSLookupItem .cxx_destruct]
  -[AMSLookupItem offerName]
  -[AMSLookupItem isPOIBased]
  -[AMSLookupItem categoryNames]
  -[AMSLookupItem numberOfUserRatings]
  -[AMSLookupItem numberOfUserRatingsForCurrentVersion]
  -[AMSLookupItem productPageURL]
  -[AMSLookupItem userRatingForCurrentVersion]
  -[AMSLookupItem itemDictionary]
  -[AMSLookupItem itemKind]
  -[AMSLookupItem initWithLookupDictionary:]
  -[AMSLookupItem userRating]
  -[AMSLookupItem copyWithZone:]
  -[AMSLookupItem encodeWithCoder:]


AMSLookupItemArtworkColor : NSObject
 @property  double alpha
 @property  double blue
 @property  double green
 @property  double red

  // instance methods
  -[AMSLookupItemArtworkColor green]
  -[AMSLookupItemArtworkColor red]
  -[AMSLookupItemArtworkColor blue]
  -[AMSLookupItemArtworkColor setGreen:]
  -[AMSLookupItemArtworkColor setAlpha:]
  -[AMSLookupItemArtworkColor setBlue:]
  -[AMSLookupItemArtworkColor alpha]
  -[AMSLookupItemArtworkColor setRed:]


AMSLookupItemArtwork : NSObject
 @property  NSDictionary *artworkDictionary
 @property  double height
 @property  NSString *URLString
 @property  double width

  // instance methods
  -[AMSLookupItemArtwork width]
  -[AMSLookupItemArtwork .cxx_destruct]
  -[AMSLookupItemArtwork URLString]
  -[AMSLookupItemArtwork artworkDictionary]
  -[AMSLookupItemArtwork initWithArtworkDictionary:]
  -[AMSLookupItemArtwork URLWithHeight:width:cropStyle:format:]
  -[AMSLookupItemArtwork height]
  -[AMSLookupItemArtwork colorWithKind:]


AMSLookupItemOffer : NSObject
 @property  NSString *buyParameters
 @property  NSString *formattedPrice
 @property  NSDictionary *lookupDictionary
 @property  NSString *offerType
 @property  NSNumber *price
 @property  NSString *subscriptionType

  // instance methods
  -[AMSLookupItemOffer subscriptionType]
  -[AMSLookupItemOffer actionTextForType:]
  -[AMSLookupItemOffer .cxx_destruct]
  -[AMSLookupItemOffer lookupDictionary]
  -[AMSLookupItemOffer formattedPrice]
  -[AMSLookupItemOffer price]
  -[AMSLookupItemOffer initWithLookupDictionary:]
  -[AMSLookupItemOffer offerType]
  -[AMSLookupItemOffer buyParameters]


AMSLookupResult : AMSURLResult
 @property  NSDate *expirationDate
 @property  NSArray *allItems

  // instance methods
  -[AMSLookupResult appStoreURLWithReason:initialIndex:]
  -[AMSLookupResult valueForProperty:]
  -[AMSLookupResult .cxx_destruct]
  -[AMSLookupResult setExpirationDate:]
  -[AMSLookupResult allItems]
  -[AMSLookupResult initWithResult:dictionary:]
  -[AMSLookupResult _enumerateItemsWithBlock:]
  -[AMSLookupResult itemForKey:]
  -[AMSLookupResult expirationDate]


AMSLRUCache : NSObject
 @property  NSObject<OS_dispatch_queue> *accessQueue
 @property  NSMutableDictionary *backingDictionary
 @property  AMSDoubleLinkedList *backingList
 @property  unsigned long count
 @property  unsigned long maxSize

  // instance methods
  -[AMSLRUCache objectForKey:]
  -[AMSLRUCache maxSize]
  -[AMSLRUCache setAccessQueue:]
  -[AMSLRUCache removeAllObjects]
  -[AMSLRUCache backingDictionary]
  -[AMSLRUCache setBackingDictionary:]
  -[AMSLRUCache initWithMaxSize:]
  -[AMSLRUCache _removeObjectForKey:]
  -[AMSLRUCache backingList]
  -[AMSLRUCache setObject:forKey:]
  -[AMSLRUCache accessQueue]
  -[AMSLRUCache allObjectsAndKeys]
  -[AMSLRUCache .cxx_destruct]
  -[AMSLRUCache count]
  -[AMSLRUCache setBackingList:]
  -[AMSLRUCache init]
  -[AMSLRUCache _addObject:forKey:]
  -[AMSLRUCache _count]
  -[AMSLRUCache objectForKey:withCreationBlock:]


AMSLRUCacheItem : AMSDoubleLinkedListNode
 @property  <NSCopying> *key

  // instance methods
  -[AMSLRUCacheItem setKey:]
  -[AMSLRUCacheItem .cxx_destruct]
  -[AMSLRUCacheItem initWithKey:object:]
  -[AMSLRUCacheItem key]


AMSMappedBundleInfo : NSObject
 @property  NSString *bundleIdentifier
 @property  NSString *clientName
 @property  NSString *clientVersion
 @property  NSString *scheme
 @property  NSString *secureScheme
 @property  NSString *accountMediaType

  // class methods
  +[AMSMappedBundleInfo currentBundleInfo]
  +[AMSMappedBundleInfo bundleInfoForProcessInfo:]
  +[AMSMappedBundleInfo accountMediaTypeInfoForProcessInfo:]
  +[AMSMappedBundleInfo _clientVersionFromProcessInfo:clientName:]
  +[AMSMappedBundleInfo _clientNameFromProcessInfo:]
  +[AMSMappedBundleInfo _accountMediaTypeForClientName:bundleID:]
  +[AMSMappedBundleInfo bundleInfoForMobileAppStoreWithProcessInfo:]

  // instance methods
  -[AMSMappedBundleInfo clientVersion]
  -[AMSMappedBundleInfo bundleIdentifier]
  -[AMSMappedBundleInfo .cxx_destruct]
  -[AMSMappedBundleInfo setBundleIdentifier:]
  -[AMSMappedBundleInfo setSecureScheme:]
  -[AMSMappedBundleInfo scheme]
  -[AMSMappedBundleInfo secureScheme]
  -[AMSMappedBundleInfo setScheme:]
  -[AMSMappedBundleInfo setAccountMediaType:]
  -[AMSMappedBundleInfo setClientName:]
  -[AMSMappedBundleInfo setClientVersion:]
  -[AMSMappedBundleInfo _initWithClient:processInfo:]
  -[AMSMappedBundleInfo accountMediaType]
  -[AMSMappedBundleInfo clientName]


AMSMarketingItem : NSObject
 @property  NSDictionary *artworkDictionary
 @property  NSString *badge
 @property  NSString *campaignID
 @property  NSString *itemID
 @property  NSArray *itemActions
 @property  NSDictionary *rawValues
 @property  NSArray *relatedContent
 @property  NSString *serviceType
 @property  NSString *subtitle
 @property  NSString *templateID
 @property  NSString *title
 @property  NSString *type
 @property  NSString *URLString
 @property  NSArray *videos

  // instance methods
  -[AMSMarketingItem video]
  -[AMSMarketingItem campaignID]
  -[AMSMarketingItem tagline]
  -[AMSMarketingItem .cxx_destruct]
  -[AMSMarketingItem itemID]
  -[AMSMarketingItem URLString]
  -[AMSMarketingItem artworkDictionary]
  -[AMSMarketingItem abSettings]
  -[AMSMarketingItem videos]
  -[AMSMarketingItem subtitle]
  -[AMSMarketingItem renderingAttributes]
  -[AMSMarketingItem title]
  -[AMSMarketingItem templateID]
  -[AMSMarketingItem initWithDictionary:]
  -[AMSMarketingItem type]
  -[AMSMarketingItem rawValues]
  -[AMSMarketingItem badge]
  -[AMSMarketingItem endDate]
  -[AMSMarketingItem itemActions]
  -[AMSMarketingItem relatedContent]
  -[AMSMarketingItem serviceType]


AMSMarketingItemAction : NSObject
 @property  NSDictionary *rawValues
 @property  AMSBuyParams *buyParams
 @property  NSString *callToActionLabel
 @property  NSString *disclaimerText
 @property  BOOL isDefault
 @property  BOOL isFamily
 @property  BOOL isRecommended
 @property  NSString *offerID
 @property  NSNumber *price
 @property  NSString *priceForDisplay
 @property  NSNumber *priceDiff
 @property  NSString *priceDiffForDisplay
 @property  NSString *valuePropDetail
 @property  NSString *valuePropInfo
 @property  NSArray *serviceComponents
 @property  NSString *type
 @property  NSURL *url

  // instance methods
  -[AMSMarketingItemAction name]
  -[AMSMarketingItemAction callToActionLabel]
  -[AMSMarketingItemAction url]
  -[AMSMarketingItemAction buyParams]
  -[AMSMarketingItemAction offerID]
  -[AMSMarketingItemAction inAppID]
  -[AMSMarketingItemAction isFamily]
  -[AMSMarketingItemAction .cxx_destruct]
  -[AMSMarketingItemAction isYearly]
  -[AMSMarketingItemAction priceDiff]
  -[AMSMarketingItemAction disclaimerText]
  -[AMSMarketingItemAction _servicesData]
  -[AMSMarketingItemAction isRecommended]
  -[AMSMarketingItemAction _serviceNames]
  -[AMSMarketingItemAction _serviceComponentsFromMap:withNames:]
  -[AMSMarketingItemAction priceString]
  -[AMSMarketingItemAction priceDiffForDisplay]
  -[AMSMarketingItemAction priceForDisplay]
  -[AMSMarketingItemAction serviceComponents]
  -[AMSMarketingItemAction valuePropDetail]
  -[AMSMarketingItemAction valuePropInfo]
  -[AMSMarketingItemAction freeTrialPeriod]
  -[AMSMarketingItemAction introOfferPeriod]
  -[AMSMarketingItemAction introOfferPrice]
  -[AMSMarketingItemAction introOfferPriceForDisplay]
  -[AMSMarketingItemAction priceFormatted]
  -[AMSMarketingItemAction recurringSubscriptionPeriod]
  -[AMSMarketingItemAction setRawValues:]
  -[AMSMarketingItemAction price]
  -[AMSMarketingItemAction isDefault]
  -[AMSMarketingItemAction initWithDictionary:]
  -[AMSMarketingItemAction type]
  -[AMSMarketingItemAction rawValues]
  -[AMSMarketingItemAction dismissLabel]


AMSMarketingItemActionComponent : NSObject
 @property  NSURL *artworkURL
 @property  NSString *description
 @property  NSDictionary *rawValues

  // instance methods
  -[AMSMarketingItemActionComponent artworkURL]
  -[AMSMarketingItemActionComponent .cxx_destruct]
  -[AMSMarketingItemActionComponent initWithDictionary:]
  -[AMSMarketingItemActionComponent rawValues]


AMSMarketingItemParser : NSObject
  // class methods
  +[AMSMarketingItemParser selectionFromRawMarketingItems:serviceType:placement:]
  +[AMSMarketingItemParser selectionFromMarketingItems:]
  +[AMSMarketingItemParser selectionFromRawMarketingItems:]
  +[AMSMarketingItemParser _rawMarketingItemSelectionFromRawMarketingItems:serviceType:placement:engagementService:]


AMSMarketingItemStub : NSObject
  // class methods
  +[AMSMarketingItemStub stubForServiceType:placement:]


AMSMarketingItemTask : AMSTask <AMSBagConsumer>
 @property  ACAccount *account
 @property  <AMSBagProtocol> *bag
 @property  NSDictionary *contextInfo
 @property  NSString *clientIdentifier
 @property  AMSProcessInfo *clientInfo
 @property  NSString *clientVersion
 @property  BOOL hydrateRelatedContent
 @property  NSString *logKey
 @property  NSString *offerHints
 @property  NSString *placement
 @property  NSString *serviceType
 @property  BOOL includeMediaAssets
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSMarketingItemTask bagKeySet]
  +[AMSMarketingItemTask bagSubProfileVersion]
  +[AMSMarketingItemTask bagSubProfile]
  +[AMSMarketingItemTask createBagForSubProfile]

  // instance methods
  -[AMSMarketingItemTask placement]
  -[AMSMarketingItemTask clientVersion]
  -[AMSMarketingItemTask setAccount:]
  -[AMSMarketingItemTask account]
  -[AMSMarketingItemTask logKey]
  -[AMSMarketingItemTask setClientInfo:]
  -[AMSMarketingItemTask .cxx_destruct]
  -[AMSMarketingItemTask bag]
  -[AMSMarketingItemTask clientInfo]
  -[AMSMarketingItemTask offerHints]
  -[AMSMarketingItemTask setContextInfo:]
  -[AMSMarketingItemTask hydrateRelatedContent]
  -[AMSMarketingItemTask _fetchItemsFromURL:]
  -[AMSMarketingItemTask initWithBag:clientIdentifier:clientVersion:placement:serviceType:]
  -[AMSMarketingItemTask setOfferHints:]
  -[AMSMarketingItemTask _processMediaResultFromPromise:]
  -[AMSMarketingItemTask includeMediaAssets]
  -[AMSMarketingItemTask initWithAccount:bag:clientIdentifier:clientVersion:placement:serviceType:]
  -[AMSMarketingItemTask performWithFetchOnly]
  -[AMSMarketingItemTask setHydrateRelatedContent:]
  -[AMSMarketingItemTask setIncludeMediaAssets:]
  -[AMSMarketingItemTask clientIdentifier]
  -[AMSMarketingItemTask perform]
  -[AMSMarketingItemTask setLogKey:]
  -[AMSMarketingItemTask _fetchItems]
  -[AMSMarketingItemTask contextInfo]
  -[AMSMarketingItemTask serviceType]


AMSMarketingItemTaskURLBuilder : NSObject <AMSBagConsumer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSMarketingItemTaskURLBuilder bagKeySet]
  +[AMSMarketingItemTaskURLBuilder bagSubProfileVersion]
  +[AMSMarketingItemTaskURLBuilder bagSubProfile]

  // instance methods
  -[AMSMarketingItemTaskURLBuilder urlWithServiceType:placement:bag:hydrateRelatedContents:offerHints:additionalParameters:]
  -[AMSMarketingItemTaskURLBuilder _realmOverridesFromBag:]
  -[AMSMarketingItemTaskURLBuilder _formattedURLPathWithBag:]
  -[AMSMarketingItemTaskURLBuilder _languageTagFromBag:fallback:]
  -[AMSMarketingItemTaskURLBuilder _stringForKey:fromBag:]
  -[AMSMarketingItemTaskURLBuilder _urlPathFromBag:]
  -[AMSMarketingItemTaskURLBuilder _countryCodeFromBag:]
  -[AMSMarketingItemTaskURLBuilder _additionalQueryItems]


AMSMediaArtwork : NSObject
 @property  NSDictionary *artworkDictionary
 @property  {CGSize=dd} artworkSize

  // instance methods
  -[AMSMediaArtwork width]
  -[AMSMediaArtwork URLWithSize:cropStyle:format:quality:]
  -[AMSMediaArtwork .cxx_destruct]
  -[AMSMediaArtwork URLString]
  -[AMSMediaArtwork artworkDictionary]
  -[AMSMediaArtwork URLWithSize:cropStyle:format:]
  -[AMSMediaArtwork _qualityForFormat:]
  -[AMSMediaArtwork height]
  -[AMSMediaArtwork initWithDictionary:]
  -[AMSMediaArtwork URLWithSize:]
  -[AMSMediaArtwork colorWithKind:]
  -[AMSMediaArtwork artworkSize]


AMSMediaProtocolHandler : AMSURLProtocolHandler
 @property  <AMSMediaTokenServiceProtocol> *tokenService

  // instance methods
  -[AMSMediaProtocolHandler handleResponse:task:]
  -[AMSMediaProtocolHandler initWithTokenService:]
  -[AMSMediaProtocolHandler tokenService]
  -[AMSMediaProtocolHandler .cxx_destruct]
  -[AMSMediaProtocolHandler reconfigureNewRequest:originalTask:redirect:error:]


AMSMediaRequestEncoder : NSObject <AMSBagConsumer, AMSRequestEncoding>
 @property  AMSURLRequestEncoder *requestEncoder
 @property  BOOL disableAccountMediaTypeComponent
 @property  BOOL URLKnownToBeTrusted
 @property  ACAccount *account
 @property  <AMSBagProtocol> *bag
 @property  AMSProcessInfo *clientInfo
 @property  BOOL disableResponseDecoding
 @property  NSString *gsTokenIdentifier
 @property  NSString *logKey
 @property  <AMSResponseDecoding> *responseDecoder
 @property  <AMSMediaTokenServiceProtocol> *tokenService
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSMediaRequestEncoder bagSubProfileVersion]
  +[AMSMediaRequestEncoder bagSubProfile]
  +[AMSMediaRequestEncoder createBagForSubProfile]

  // instance methods
  -[AMSMediaRequestEncoder gsTokenIdentifier]
  -[AMSMediaRequestEncoder responseDecoder]
  -[AMSMediaRequestEncoder requestByEncodingRequest:parameters:]
  -[AMSMediaRequestEncoder setDisableAccountMediaTypeComponent:]
  -[AMSMediaRequestEncoder disableResponseDecoding]
  -[AMSMediaRequestEncoder setURLKnownToBeTrusted:]
  -[AMSMediaRequestEncoder URLKnownToBeTrusted]
  -[AMSMediaRequestEncoder disableAccountMediaTypeComponent]
  -[AMSMediaRequestEncoder setAccount:]
  -[AMSMediaRequestEncoder tokenService]
  -[AMSMediaRequestEncoder setGsTokenIdentifier:]
  -[AMSMediaRequestEncoder requestEncoder]
  -[AMSMediaRequestEncoder account]
  -[AMSMediaRequestEncoder initWithTokenService:bag:]
  -[AMSMediaRequestEncoder setDisableResponseDecoding:]
  -[AMSMediaRequestEncoder setResponseDecoder:]
  -[AMSMediaRequestEncoder requestWithURL:]
  -[AMSMediaRequestEncoder logKey]
  -[AMSMediaRequestEncoder setClientInfo:]
  -[AMSMediaRequestEncoder .cxx_destruct]
  -[AMSMediaRequestEncoder bag]
  -[AMSMediaRequestEncoder clientInfo]
  -[AMSMediaRequestEncoder requestWithComponents:]
  -[AMSMediaRequestEncoder setLogKey:]


AMSMediaResponseDecoder : NSObject <AMSResponseDecoding>
  // instance methods
  -[AMSMediaResponseDecoder resultFromResult:error:]


AMSMediaResult : AMSURLResult
 @property  NSDictionary *responseDictionary
 @property  NSArray *responseDataItems

  // instance methods
  -[AMSMediaResult responseDictionary]
  -[AMSMediaResult initWithResult:]
  -[AMSMediaResult .cxx_destruct]
  -[AMSMediaResult responseDataItems]


AMSMediaSharedProperties : NSObject
 @property  AMSURLSession *session
 @property  <AMSMediaTokenServiceProtocol> *tokenService

  // class methods
  +[AMSMediaSharedProperties accessQueue]
  +[AMSMediaSharedProperties propertiesForMarketingItemTask:]
  +[AMSMediaSharedProperties _propertiesForClientIdentifier:account:bag:clientInfo:URLKnownToBeTrusted:]
  +[AMSMediaSharedProperties sharedPropertiesMapTable]
  +[AMSMediaSharedProperties propertiesForMediaTask:]
  +[AMSMediaSharedProperties propertiesForRatingsTask:]
  +[AMSMediaSharedProperties propertiesForMercuryCacheFetchTask:]
  +[AMSMediaSharedProperties propertiesForStorefrontsTask:]

  // instance methods
  -[AMSMediaSharedProperties tokenService]
  -[AMSMediaSharedProperties .cxx_destruct]
  -[AMSMediaSharedProperties _initWithClientIdentifier:account:bag:clientInfo:URLKnownToBeTrusted:]
  -[AMSMediaSharedProperties dealloc]
  -[AMSMediaSharedProperties session]


AMSMediaTask : AMSTask <AMSBagConsumer>
 @property  BOOL URLKnownToBeTrusted
 @property  ACAccount *account
 @property  NSArray *additionalPlatforms
 @property  NSDictionary *additionalQueryParams
 @property  <AMSBagProtocol> *bag
 @property  NSArray *bundleIdentifiers
 @property  BOOL charts
 @property  NSString *clientIdentifier
 @property  AMSProcessInfo *clientInfo
 @property  NSString *clientVersion
 @property  NSDictionary *filters
 @property  NSArray *includedResultKeys
 @property  NSArray *itemIdentifiers
 @property  NSString *logKey
 @property  NSString *searchTerm
 @property  long long type
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSMediaTask bagKeySet]
  +[AMSMediaTask bagSubProfileVersion]
  +[AMSMediaTask bagSubProfile]
  +[AMSMediaTask createBagForSubProfile]

  // instance methods
  -[AMSMediaTask setFilters:]
  -[AMSMediaTask clientVersion]
  -[AMSMediaTask itemIdentifiers]
  -[AMSMediaTask setURLKnownToBeTrusted:]
  -[AMSMediaTask URLKnownToBeTrusted]
  -[AMSMediaTask setAccount:]
  -[AMSMediaTask account]
  -[AMSMediaTask charts]
  -[AMSMediaTask logKey]
  -[AMSMediaTask filters]
  -[AMSMediaTask setClientInfo:]
  -[AMSMediaTask .cxx_destruct]
  -[AMSMediaTask bag]
  -[AMSMediaTask clientInfo]
  -[AMSMediaTask setSearchTerm:]
  -[AMSMediaTask searchTerm]
  -[AMSMediaTask additionalPlatforms]
  -[AMSMediaTask setAdditionalPlatforms:]
  -[AMSMediaTask additionalQueryParams]
  -[AMSMediaTask setAdditionalQueryParams:]
  -[AMSMediaTask setBundleIdentifiers:]
  -[AMSMediaTask includedResultKeys]
  -[AMSMediaTask setIncludedResultKeys:]
  -[AMSMediaTask initWithType:clientIdentifier:clientVersion:bag:]
  -[AMSMediaTask setItemIdentifiers:]
  -[AMSMediaTask bundleIdentifiers]
  -[AMSMediaTask clientIdentifier]
  -[AMSMediaTask perform]
  -[AMSMediaTask setCharts:]
  -[AMSMediaTask type]
  -[AMSMediaTask setLogKey:]


AMSMediaTaskTypeConfig : NSObject
 @property  NSString *hostBagKey
 @property  BOOL includePlatform
 @property  NSString *realm
 @property  long long type
 @property  NSString *typeString

  // class methods
  +[AMSMediaTaskTypeConfig configForType:]

  // instance methods
  -[AMSMediaTaskTypeConfig typeString]
  -[AMSMediaTaskTypeConfig .cxx_destruct]
  -[AMSMediaTaskTypeConfig includePlatform]
  -[AMSMediaTaskTypeConfig initWithType:typeString:hostBagKey:realm:includePlatform:]
  -[AMSMediaTaskTypeConfig hostBagKey]
  -[AMSMediaTaskTypeConfig type]
  -[AMSMediaTaskTypeConfig realm]


AMSMediaTaskURLBuilder : NSObject
 @property  NSArray *additionalPlatforms
 @property  NSDictionary *additionalQueryParams
 @property  <AMSBagProtocol> *bag
 @property  NSArray *bundleIdentifiers
 @property  BOOL charts
 @property  NSString *clientVersion
 @property  AMSMediaTaskTypeConfig *config
 @property  NSDictionary *filters
 @property  NSArray *includedResultKeys
 @property  NSArray *itemIdentifiers
 @property  NSString *logKey
 @property  NSString *searchTerm

  // instance methods
  -[AMSMediaTaskURLBuilder setFilters:]
  -[AMSMediaTaskURLBuilder clientVersion]
  -[AMSMediaTaskURLBuilder itemIdentifiers]
  -[AMSMediaTaskURLBuilder charts]
  -[AMSMediaTaskURLBuilder logKey]
  -[AMSMediaTaskURLBuilder filters]
  -[AMSMediaTaskURLBuilder .cxx_destruct]
  -[AMSMediaTaskURLBuilder bag]
  -[AMSMediaTaskURLBuilder setSearchTerm:]
  -[AMSMediaTaskURLBuilder searchTerm]
  -[AMSMediaTaskURLBuilder initWithConfig:clientVersion:bag:]
  -[AMSMediaTaskURLBuilder additionalPlatforms]
  -[AMSMediaTaskURLBuilder setAdditionalPlatforms:]
  -[AMSMediaTaskURLBuilder additionalQueryParams]
  -[AMSMediaTaskURLBuilder setAdditionalQueryParams:]
  -[AMSMediaTaskURLBuilder setBundleIdentifiers:]
  -[AMSMediaTaskURLBuilder includedResultKeys]
  -[AMSMediaTaskURLBuilder setIncludedResultKeys:]
  -[AMSMediaTaskURLBuilder _verifyConfiguration]
  -[AMSMediaTaskURLBuilder config]
  -[AMSMediaTaskURLBuilder _languagePromise]
  -[AMSMediaTaskURLBuilder _queryItemsWithLanguage:]
  -[AMSMediaTaskURLBuilder _addBundleIdentifiers:]
  -[AMSMediaTaskURLBuilder _addItemIdentifiers:]
  -[AMSMediaTaskURLBuilder _addSearchTerm:]
  -[AMSMediaTaskURLBuilder setItemIdentifiers:]
  -[AMSMediaTaskURLBuilder bundleIdentifiers]
  -[AMSMediaTaskURLBuilder _devicePlatform]
  -[AMSMediaTaskURLBuilder setCharts:]
  -[AMSMediaTaskURLBuilder setLogKey:]
  -[AMSMediaTaskURLBuilder _addCharts:]
  -[AMSMediaTaskURLBuilder _hostPromise]
  -[AMSMediaTaskURLBuilder _pathPromise]
  -[AMSMediaTaskURLBuilder build]


AMSMediaToken : NSObject <NSCopying, NSSecureCoding>
 @property  NSDate *expirationDate
 @property  double lifetime
 @property  NSString *tokenString
 @property  BOOL valid

  // class methods
  +[AMSMediaToken supportsSecureCoding]

  // instance methods
  -[AMSMediaToken invalidCopy]
  -[AMSMediaToken willExpireWithin:]
  -[AMSMediaToken initWithCoder:]
  -[AMSMediaToken percentageOfLifetimeRemaining]
  -[AMSMediaToken isValid]
  -[AMSMediaToken .cxx_destruct]
  -[AMSMediaToken isExpired]
  -[AMSMediaToken lifetime]
  -[AMSMediaToken initWithString:expirationDate:lifetime:]
  -[AMSMediaToken isEqual:]
  -[AMSMediaToken initWithString:expirationDate:lifetime:valid:]
  -[AMSMediaToken tokenString]
  -[AMSMediaToken copyWithZone:]
  -[AMSMediaToken expirationDate]
  -[AMSMediaToken encodeWithCoder:]


AMSMediaTokenService : NSObject <AMSBagConsumer, AMSMediaTokenServiceProtocol>
 @property  AMSMediaToken *cachedMediaToken
 @property  AMSMediaTokenServiceThrottler *throttler
 @property  NSObject<OS_dispatch_queue> *tokenFetchQueue
 @property  AMSMediaTokenServiceStore *tokenStore
 @property  BOOL enabled
 @property  double refreshPercentage
 @property  double refreshTime
 @property  BOOL URLKnownToBeTrusted
 @property  ACAccount *account
 @property  <AMSBagProtocol> *bag
 @property  long long clientType
 @property  NSString *clientIdentifier
 @property  AMSProcessInfo *clientInfo
 @property  NSString *keychainAccessGroup
 @property  AMSURLSession *session
 @property  NSString *clientVersion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSMediaTokenService bagKeySet]
  +[AMSMediaTokenService bagSubProfileVersion]
  +[AMSMediaTokenService bagSubProfile]
  +[AMSMediaTokenService createBagForSubProfile]

  // instance methods
  -[AMSMediaTokenService setClientType:]
  -[AMSMediaTokenService clientVersion]
  -[AMSMediaTokenService clientType]
  -[AMSMediaTokenService setURLKnownToBeTrusted:]
  -[AMSMediaTokenService initWithClientIdentifier:clientVersion:bag:]
  -[AMSMediaTokenService URLKnownToBeTrusted]
  -[AMSMediaTokenService setAccount:]
  -[AMSMediaTokenService _fetchToken]
  -[AMSMediaTokenService account]
  -[AMSMediaTokenService setClientInfo:]
  -[AMSMediaTokenService .cxx_destruct]
  -[AMSMediaTokenService throttler]
  -[AMSMediaTokenService initWithClientIdentifier:keychainAccessGroup:bag:]
  -[AMSMediaTokenService bag]
  -[AMSMediaTokenService tokenStore]
  -[AMSMediaTokenService clientInfo]
  -[AMSMediaTokenService _shouldRefreshMediaToken:]
  -[AMSMediaTokenService _shouldReturnMediaToken:]
  -[AMSMediaTokenService setSession:]
  -[AMSMediaTokenService setKeychainAccessGroup:]
  -[AMSMediaTokenService setCachedMediaToken:]
  -[AMSMediaTokenService refreshPercentage]
  -[AMSMediaTokenService _fetchBagProperties]
  -[AMSMediaTokenService cachedMediaToken]
  -[AMSMediaTokenService clientIdentifier]
  -[AMSMediaTokenService keychainAccessGroup]
  -[AMSMediaTokenService isEnabled]
  -[AMSMediaTokenService refreshTime]
  -[AMSMediaTokenService setRefreshPercentage:]
  -[AMSMediaTokenService invalidateMediaToken]
  -[AMSMediaTokenService _tokenRequestWithError:]
  -[AMSMediaTokenService setBag:]
  -[AMSMediaTokenService setRefreshTime:]
  -[AMSMediaTokenService initWithClientIdentifier:bag:]
  -[AMSMediaTokenService fetchMediaToken]
  -[AMSMediaTokenService setEnabled:]
  -[AMSMediaTokenService _refreshMediaTokenIfNeeded:]
  -[AMSMediaTokenService tokenFetchQueue]
  -[AMSMediaTokenService session]


AMSMediaTokenServiceDeserializer : NSObject
  // class methods
  +[AMSMediaTokenServiceDeserializer _deserializeMediaTokenDictionary:]
  +[AMSMediaTokenServiceDeserializer _correctPayload:]
  +[AMSMediaTokenServiceDeserializer mediaTokenFromDictionary:error:]


AMSMediaTokenServiceKeychainStore : NSObject
 @property  NSString *clientIdentifier
 @property  NSString *keychainAccessGroup

  // instance methods
  -[AMSMediaTokenServiceKeychainStore .cxx_destruct]
  -[AMSMediaTokenServiceKeychainStore storeToken:]
  -[AMSMediaTokenServiceKeychainStore _removeTokenFromKeychain]
  -[AMSMediaTokenServiceKeychainStore retrieveToken]
  -[AMSMediaTokenServiceKeychainStore _copyKeychainQuery]
  -[AMSMediaTokenServiceKeychainStore setKeychainAccessGroup:]
  -[AMSMediaTokenServiceKeychainStore clientIdentifier]
  -[AMSMediaTokenServiceKeychainStore keychainAccessGroup]
  -[AMSMediaTokenServiceKeychainStore initWithClientIdentifier:keychainAccessGroup:]


AMSMediaTokenServiceStore : NSObject
 @property  NSObject<OS_dispatch_queue> *accessQueue
 @property  AMSMediaToken *memoryMediaToken
 @property  AMSMediaTokenServiceKeychainStore *keychainStore
 @property  AMSMediaTokenServiceUserDefaultsStore *userDefaultsStore
 @property  NSString *clientIdentifier
 @property  NSString *keychainAccessGroup

  // instance methods
  -[AMSMediaTokenServiceStore _mediaTokenChanged]
  -[AMSMediaTokenServiceStore accessQueue]
  -[AMSMediaTokenServiceStore .cxx_destruct]
  -[AMSMediaTokenServiceStore storeToken:]
  -[AMSMediaTokenServiceStore memoryMediaToken]
  -[AMSMediaTokenServiceStore setUserDefaultsStore:]
  -[AMSMediaTokenServiceStore _teardownKeychainNotifications]
  -[AMSMediaTokenServiceStore setKeychainStore:]
  -[AMSMediaTokenServiceStore retrieveToken]
  -[AMSMediaTokenServiceStore keychainStore]
  -[AMSMediaTokenServiceStore setKeychainAccessGroup:]
  -[AMSMediaTokenServiceStore _keychainAccessGroup]
  -[AMSMediaTokenServiceStore clientIdentifier]
  -[AMSMediaTokenServiceStore keychainAccessGroup]
  -[AMSMediaTokenServiceStore userDefaultsStore]
  -[AMSMediaTokenServiceStore setMemoryMediaToken:]
  -[AMSMediaTokenServiceStore initWithClientIdentifier:keychainAccessGroup:]
  -[AMSMediaTokenServiceStore _postMediaTokenChangedNotification]
  -[AMSMediaTokenServiceStore _setupKeychainNotifications]
  -[AMSMediaTokenServiceStore _hasAppleGroupEnabled]
  -[AMSMediaTokenServiceStore _mediaTokenChangedNotificationName]
  -[AMSMediaTokenServiceStore dealloc]


AMSMediaTokenServiceThrottler : NSObject
 @property  unsigned long attemptNumber
 @property  NSDate *throttleDate
 @property  double baseSleepInterval
 @property  double maxSleepInterval

  // instance methods
  -[AMSMediaTokenServiceThrottler throttleDate]
  -[AMSMediaTokenServiceThrottler setThrottleDate:]
  -[AMSMediaTokenServiceThrottler maxSleepInterval]
  -[AMSMediaTokenServiceThrottler .cxx_destruct]
  -[AMSMediaTokenServiceThrottler throttle]
  -[AMSMediaTokenServiceThrottler shouldThrottle]
  -[AMSMediaTokenServiceThrottler initWithBaseSleepInterval:maxSleepInterval:]
  -[AMSMediaTokenServiceThrottler attemptNumber]
  -[AMSMediaTokenServiceThrottler setAttemptNumber:]
  -[AMSMediaTokenServiceThrottler setMaxSleepInterval:]
  -[AMSMediaTokenServiceThrottler reset]
  -[AMSMediaTokenServiceThrottler setBaseSleepInterval:]
  -[AMSMediaTokenServiceThrottler baseSleepInterval]
  -[AMSMediaTokenServiceThrottler _calculateThrottleInterval]


AMSMediaTokenServiceUserDefaultsStore : NSObject
 @property  NSString *clientIdentifier

  // instance methods
  -[AMSMediaTokenServiceUserDefaultsStore .cxx_destruct]
  -[AMSMediaTokenServiceUserDefaultsStore storeToken:]
  -[AMSMediaTokenServiceUserDefaultsStore retrieveToken]
  -[AMSMediaTokenServiceUserDefaultsStore clientIdentifier]
  -[AMSMediaTokenServiceUserDefaultsStore initWithClientIdentifier:]


AMSMediaURLBuilderUtility : NSObject
  // class methods
  +[AMSMediaURLBuilderUtility devicePlatform]


AMSMediaVideo : NSObject
 @property  NSURL *URL
 @property  NSDictionary *videoDictionary

  // instance methods
  -[AMSMediaVideo name]
  -[AMSMediaVideo .cxx_destruct]
  -[AMSMediaVideo videoDictionary]
  -[AMSMediaVideo URL]
  -[AMSMediaVideo initWithDictionary:]


AMSMemoryPressure : NSObject
  // class methods
  +[AMSMemoryPressure initialize]
  +[AMSMemoryPressure _memoryPressureStatusForMemoryPressure:]
  +[AMSMemoryPressure observable]
  +[AMSMemoryPressure unsubscribe:]
  +[AMSMemoryPressure subscribe:]
  +[AMSMemoryPressure lastKnownStatus]


AMSMercuryCacheFetchTask : AMSTask <AMSBagConsumer>
 @property  ACAccount *account
 @property  <AMSBagProtocol> *bag
 @property  NSSet *cacheTypeIDs
 @property  NSString *clientIdentifier
 @property  AMSProcessInfo *clientInfo
 @property  NSString *clientVersion
 @property  NSString *logKey
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSMercuryCacheFetchTask bagSubProfileVersion]
  +[AMSMercuryCacheFetchTask bagSubProfile]
  +[AMSMercuryCacheFetchTask sharedPropertiesFromTask:]
  +[AMSMercuryCacheFetchTask requestEncoderWithSharedProperties:task:]
  +[AMSMercuryCacheFetchTask createBagForSubProfile]

  // instance methods
  -[AMSMercuryCacheFetchTask clientVersion]
  -[AMSMercuryCacheFetchTask account]
  -[AMSMercuryCacheFetchTask logKey]
  -[AMSMercuryCacheFetchTask setClientInfo:]
  -[AMSMercuryCacheFetchTask .cxx_destruct]
  -[AMSMercuryCacheFetchTask bag]
  -[AMSMercuryCacheFetchTask clientInfo]
  -[AMSMercuryCacheFetchTask cacheTypeIDs]
  -[AMSMercuryCacheFetchTask _updateEndpointURLRequestWithError:]
  -[AMSMercuryCacheFetchTask initWithAccount:bag:cacheTypeIDs:clientIdentifier:clientVersion:]
  -[AMSMercuryCacheFetchTask clientIdentifier]
  -[AMSMercuryCacheFetchTask perform]
  -[AMSMercuryCacheFetchTask setLogKey:]


AMSMescal : NSObject <AMSBagConsumer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSMescal bagKeySet]
  +[AMSMescal bagSubProfileVersion]
  +[AMSMescal bagSubProfile]
  +[AMSMescal _signedActionDataFromRequest:policy:]
  +[AMSMescal signatureFromData:type:bagContract:logKey:error:]
  +[AMSMescal signatureUsingRequest:type:bagContract:logKey:error:]
  +[AMSMescal signatureFromData:type:bag:error:]
  +[AMSMescal _matchSignedActions:withURL:error:]
  +[AMSMescal verifyTask:data:type:bag:error:]
  +[AMSMescal primeTheConnectionWithContract:error:]
  +[AMSMescal primeTheConnectionWithContract:logKey:error:]
  +[AMSMescal signatureUsingRequest:type:bag:error:]
  +[AMSMescal signatureFromData:type:bagContract:error:]
  +[AMSMescal shouldReprimeConnectionWithResult:]
  +[AMSMescal verifyTask:data:type:bagContract:error:]
  +[AMSMescal verifyTask:data:type:bagContract:logKey:error:]
  +[AMSMescal signatureUsingRequest:type:bagContract:error:]
  +[AMSMescal primeTheConnectionWithBag:error:]
  +[AMSMescal _DAAPActionsForURLBagActions:]
  +[AMSMescal _matchSignSapURL:bagDictionary:error:]
  +[AMSMescal createBagForSubProfile]


AMSMescalAccountPrimeSession : NSObject
 @property  <AMSBagProtocol> *bag
 @property  AMSMescalSession *session

  // instance methods
  -[AMSMescalAccountPrimeSession .cxx_destruct]
  -[AMSMescalAccountPrimeSession bag]
  -[AMSMescalAccountPrimeSession initWithBag:]
  -[AMSMescalAccountPrimeSession setSession:]
  -[AMSMescalAccountPrimeSession signData:]
  -[AMSMescalAccountPrimeSession verifyPrimeSignature:]
  -[AMSMescalAccountPrimeSession primeSignatureForData:]
  -[AMSMescalAccountPrimeSession setBag:]
  -[AMSMescalAccountPrimeSession session]


AMSMescalFairPlay : NSObject
 @property  BOOL complete

  // instance methods
  -[AMSMescalFairPlay signData:error:]
  -[AMSMescalFairPlay exchangeData:error:]
  -[AMSMescalFairPlay initWithMescalType:error:]
  -[AMSMescalFairPlay _dataWithFairPlayBytes:length:]
  -[AMSMescalFairPlay verifySignature:forData:error:]
  -[AMSMescalFairPlay isComplete]
  -[AMSMescalFairPlay verifyPrimeSignature:error:]
  -[AMSMescalFairPlay _teardownSession]
  -[AMSMescalFairPlay dealloc]
  -[AMSMescalFairPlay primingSignatureForData:error:]


AMSMescalSession : NSObject
  // class methods
  +[AMSMescalSession defaultSession]
  +[AMSMescalSession primeSession]
  +[AMSMescalSession sessionWithType:]

  // instance methods
  -[AMSMescalSession initWithType:]
  -[AMSMescalSession signData:bag:error:]
  -[AMSMescalSession .cxx_destruct]
  -[AMSMescalSession _cachedCertPath]
  -[AMSMescalSession _cachedCertData]
  -[AMSMescalSession verifyData:withSignature:bag:error:]
  -[AMSMescalSession primeSignatureForData:bag:error:]
  -[AMSMescalSession _establishContextWithBag:error:]
  -[AMSMescalSession _shouldRetryFairPlayForError:]
  -[AMSMescalSession _verifyEntitlements]
  -[AMSMescalSession _cacheCertData:expiration:]
  -[AMSMescalSession _loadCertificateDataWithBag:error:]
  -[AMSMescalSession _postExchangeData:bag:error:]
  -[AMSMescalSession _resetSession]
  -[AMSMescalSession verifyPrimeSignature:error:]


AMSMetrics : NSObject <AMSBagConsumer>
 @property  NSObject<OS_dispatch_queue> *completionQueue
 @property  <AMSMetricsFlushStrategy> *currentFlushStrategy
 @property  AMSMetricsDatabaseDataSource *databaseSource
 @property  long long destination
 @property  NSObject<OS_dispatch_queue> *engagementQueue
 @property  BOOL flushingDisabled
 @property  BOOL flushOnForeground
 @property  @? flushIntervalBlock
 @property  NSDate *flushIntervalStartTime
 @property  NSObject<OS_dispatch_queue> *flushQueue
 @property  <AMSMetricsBagContract> *bagContract
 @property  <AMSBagProtocol> *bag
 @property  NSString *containerId
 @property  long long eventCount
 @property  BOOL flushTimerEnabled
 @property  long long maxBatchSize
 @property  long long maxRequestCount
 @property  BOOL monitorsLifecycleEvents
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSMetrics bagKeySet]
  +[AMSMetrics bagSubProfileVersion]
  +[AMSMetrics bagSubProfile]
  +[AMSMetrics sharedTimerQueue]
  +[AMSMetrics recordAppAnalyticsForEvent:bugType:]
  +[AMSMetrics flushDelayEnabled]
  +[AMSMetrics timeIntervalFromServerTime:]
  +[AMSMetrics setFlushTimerEnabled:]
  +[AMSMetrics serverTimeFromDate:]
  +[AMSMetrics appAnalyticsAllowed]
  +[AMSMetrics disableBackgroundMetrics]
  +[AMSMetrics diagnosticsSubmissionAllowed]
  +[AMSMetrics flushTimerEnabled]
  +[AMSMetrics setDisableBackgroundMetrics:]
  +[AMSMetrics createBagForSubProfile]
  +[AMSMetrics setFlushDelayEnabled:]
  +[AMSMetrics internalInstanceUsingBag:]
  +[AMSMetrics serverTimeFromTimeInterval:]

  // instance methods
  -[AMSMetrics bagContract]
  -[AMSMetrics setBagContract:]
  -[AMSMetrics setDatabaseSource:]
  -[AMSMetrics completionQueue]
  -[AMSMetrics _scheduledFlushAllowedForStyle:]
  -[AMSMetrics monitorsLifecycleEvents]
  -[AMSMetrics enqueueEvent:]
  -[AMSMetrics setDestination:]
  -[AMSMetrics enqueueEvents:]
  -[AMSMetrics _enqueueFigaroEvents:]
  -[AMSMetrics engagementQueue]
  -[AMSMetrics .cxx_destruct]
  -[AMSMetrics setCompletionQueue:]
  -[AMSMetrics setFlushingDisabled:]
  -[AMSMetrics bag]
  -[AMSMetrics flushEvents:]
  -[AMSMetrics setFlushIntervalStartTime:]
  -[AMSMetrics _determineFlushStrategyWithDataSource:topic:]
  -[AMSMetrics destination]
  -[AMSMetrics setMonitorsLifecycleEvents:]
  -[AMSMetrics flushQueue]
  -[AMSMetrics setMaxRequestCount:]
  -[AMSMetrics flush]
  -[AMSMetrics setFlushTimerEnabled:]
  -[AMSMetrics eventCount]
  -[AMSMetrics _applicationWillEnterForeground]
  -[AMSMetrics setFlushOnForeground:]
  -[AMSMetrics setEngagementQueue:]
  -[AMSMetrics flushOnForeground]
  -[AMSMetrics _flushTimerEnabledChanged]
  -[AMSMetrics setMaxBatchSize:]
  -[AMSMetrics maxRequestCount]
  -[AMSMetrics setCurrentFlushStrategy:]
  -[AMSMetrics flushTopic:]
  -[AMSMetrics _beginFlushIntervalWithStyle:events:]
  -[AMSMetrics cancel]
  -[AMSMetrics enqueueAsyncEvents:]
  -[AMSMetrics maxBatchSize]
  -[AMSMetrics containerId]
  -[AMSMetrics _flushIntervalInvalidate]
  -[AMSMetrics flushIntervalBlock]
  -[AMSMetrics databaseSource]
  -[AMSMetrics initWithContainerID:bag:]
  -[AMSMetrics currentFlushStrategy]
  -[AMSMetrics flushTimerEnabled]
  -[AMSMetrics flushingDisabled]
  -[AMSMetrics dealloc]
  -[AMSMetrics setBag:]
  -[AMSMetrics _handleFlushIntervalWithStyle:]
  -[AMSMetrics _flushIntervalForEvents:]
  -[AMSMetrics setFlushQueue:]
  -[AMSMetrics flushIntervalStartTime]
  -[AMSMetrics initWithContainerId:bagContract:]
  -[AMSMetrics setFlushIntervalBlock:]
  -[AMSMetrics dropEvents]
  -[AMSMetrics _flushDataSource:topic:]


AMSMetricsClientIdentifier : AMSMetricsIdentifier

AMSMetricsDatabase : NSObject <AMSSQLiteConnectionDelegate>
 @property  AMSSQLiteConnection *connection
 @property  NSObject<OS_dispatch_queue> *internalQueue
 @property  long long keepAliveCount
 @property  NSString *containerId
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSMetricsDatabase sharedDatabaseWithContainerId:]

  // instance methods
  -[AMSMetricsDatabase _cachePath]
  -[AMSMetricsDatabase countAllEventsWithLockKey:error:]
  -[AMSMetricsDatabase setInternalQueue:]
  -[AMSMetricsDatabase _performTransaction:]
  -[AMSMetricsDatabase setContainerId:]
  -[AMSMetricsDatabase connectionNeedsResetForCorruption:]
  -[AMSMetricsDatabase dropAllEventsWithLockKey:error:]
  -[AMSMetricsDatabase removeIdentifiersForAccount:error:]
  -[AMSMetricsDatabase .cxx_destruct]
  -[AMSMetricsDatabase unlockAllEventsWithKey:error:]
  -[AMSMetricsDatabase setConnection:]
  -[AMSMetricsDatabase identifierStoreForKey:updateMaybe:error:]
  -[AMSMetricsDatabase clearIdentifierSyncStateWithError:]
  -[AMSMetricsDatabase keepAliveCount]
  -[AMSMetricsDatabase connection]
  -[AMSMetricsDatabase unlockEvents:error:]
  -[AMSMetricsDatabase enumerateUnsyncedIdentifiersUsingBlock:error:]
  -[AMSMetricsDatabase insertEvents:error:]
  -[AMSMetricsDatabase removeCrossDeviceIdentifiersWithError:]
  -[AMSMetricsDatabase containerId]
  -[AMSMetricsDatabase internalQueue]
  -[AMSMetricsDatabase permanentlyRemoveIdentifierForKey:error:]
  -[AMSMetricsDatabase enumerateUnsyncedIdentifierStoresUsingBlock:error:]
  -[AMSMetricsDatabase dropEvents:error:]
  -[AMSMetricsDatabase close]
  -[AMSMetricsDatabase _lockedById]
  -[AMSMetricsDatabase dealloc]
  -[AMSMetricsDatabase lockAllEventsWithError:]
  -[AMSMetricsDatabase identifierForKey:updateMaybe:error:]
  -[AMSMetricsDatabase enumerateEventsWithTopic:lockKey:objectBlock:]
  -[AMSMetricsDatabase setKeepAliveCount:]
  -[AMSMetricsDatabase cleanupInvalidIdentifiersWithError:]
  -[AMSMetricsDatabase initWithContainerId:]


AMSMetricsDatabaseDataSource : NSObject <AMSMetricsDataSource>
 @property  AMSMetricsDatabase *database
 @property  NSString *currentLockKey
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSString *containerIdentifier
 @property  long long eventCount

  // instance methods
  -[AMSMetricsDatabaseDataSource database]
  -[AMSMetricsDatabaseDataSource enqueueEvents:]
  -[AMSMetricsDatabaseDataSource currentLockKey]
  -[AMSMetricsDatabaseDataSource .cxx_destruct]
  -[AMSMetricsDatabaseDataSource removeAllEvents]
  -[AMSMetricsDatabaseDataSource willStartBatchingWithLogKey:error:]
  -[AMSMetricsDatabaseDataSource containerIdentifier]
  -[AMSMetricsDatabaseDataSource skipEvents:error:]
  -[AMSMetricsDatabaseDataSource setCurrentLockKey:]
  -[AMSMetricsDatabaseDataSource eventCount]
  -[AMSMetricsDatabaseDataSource setQueue:]
  -[AMSMetricsDatabaseDataSource removeEvents:error:]
  -[AMSMetricsDatabaseDataSource enumerateSortedEventsForTopic:block:]
  -[AMSMetricsDatabaseDataSource initWithContainerIdentifier:]
  -[AMSMetricsDatabaseDataSource cancel]
  -[AMSMetricsDatabaseDataSource queue]
  -[AMSMetricsDatabaseDataSource didFinishBatching]
  -[AMSMetricsDatabaseDataSource dealloc]


AMSMetricsDatabaseSchema : NSObject
  // class methods
  +[AMSMetricsDatabaseSchema createOrUpdateSchemaUsingConnection:]
  +[AMSMetricsDatabaseSchema migrateVersion1to2WithMigration:]
  +[AMSMetricsDatabaseSchema migrateVersion2to3WithMigration:]
  +[AMSMetricsDatabaseSchema migrateVersion3to4WithMigration:]
  +[AMSMetricsDatabaseSchema migrateVersion4to5WithMigration:]
  +[AMSMetricsDatabaseSchema migrateVersion0to1WithMigration:]


AMSMetricsEvent : NSObject <NSCopying, AMSEngagementEvent>
 @property  NSObject<OS_dispatch_queue> *internalQueue
 @property  NSString *clientEventID
 @property  NSDictionary *databaseEventBody
 @property  NSNumber *databasePID
 @property  BOOL engagementEvent
 @property  BOOL checkDiagnosticsAndUsageSetting
 @property  NSString *diagnosticsSubmissionBugType
 @property  NSDictionary *dictionaryForPosting
 @property  BOOL preventSampling
 @property  NSMutableDictionary *underlyingDictionary
 @property  ACAccount *account
 @property  BOOL anonymous
 @property  NSString *app
 @property  NSString *appVersion
 @property  NSNumber *baseVersion
 @property  NSString *canaryIdentifier
 @property  NSString *clientIdentifier
 @property  NSNumber *eventTime
 @property  NSString *eventType
 @property  NSNumber *eventVersion
 @property  NSString *osVersion
 @property  BOOL suppressEngagement
 @property  NSNumber *timezoneOffset
 @property  NSString *topic
 @property  NSDictionary *data
 @property  NSDictionary *engagementData
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSMetricsEvent metricsAuthenticationAttemptDictionaryForAuthKitError:]
  +[AMSMetricsEvent _topicFromAuthenticationContext:]
  +[AMSMetricsEvent _buyParamsStringFromAuthenticationContext:]
  +[AMSMetricsEvent _buyParamsFromString:]
  +[AMSMetricsEvent createEventFromAuthenticationContext:error:]
  +[AMSMetricsEvent _isValidJSONProperty:]
  +[AMSMetricsEvent sanitizedObject:]

  // instance methods
  -[AMSMetricsEvent isAnonymous]
  -[AMSMetricsEvent app]
  -[AMSMetricsEvent setOsVersion:]
  -[AMSMetricsEvent eventTime]
  -[AMSMetricsEvent osVersion]
  -[AMSMetricsEvent setAccount:]
  -[AMSMetricsEvent appVersion]
  -[AMSMetricsEvent account]
  -[AMSMetricsEvent underlyingDictionary]
  -[AMSMetricsEvent setApp:]
  -[AMSMetricsEvent .cxx_destruct]
  -[AMSMetricsEvent baseVersion]
  -[AMSMetricsEvent setCanaryIdentifier:]
  -[AMSMetricsEvent setBaseVersion:]
  -[AMSMetricsEvent setAppVersion:]
  -[AMSMetricsEvent addPropertiesWithDictionary:]
  -[AMSMetricsEvent initWithTopic:]
  -[AMSMetricsEvent setTimezoneOffset:]
  -[AMSMetricsEvent data]
  -[AMSMetricsEvent canaryIdentifier]
  -[AMSMetricsEvent setProperty:forBodyKey:]
  -[AMSMetricsEvent setEventTime:]
  -[AMSMetricsEvent clientEventID]
  -[AMSMetricsEvent setClientEventID:]
  -[AMSMetricsEvent diagnosticsSubmissionBugType]
  -[AMSMetricsEvent topic]
  -[AMSMetricsEvent checkDiagnosticsAndUsageSetting]
  -[AMSMetricsEvent eventVersion]
  -[AMSMetricsEvent initWithDatabaseEventBody:]
  -[AMSMetricsEvent setDatabasePID:]
  -[AMSMetricsEvent databaseEventBody]
  -[AMSMetricsEvent preventSampling]
  -[AMSMetricsEvent setEventVersion:]
  -[AMSMetricsEvent _setProperty:forBodyKey:clientOnly:]
  -[AMSMetricsEvent propertyForBodyKey:]
  -[AMSMetricsEvent setPreventSampling:]
  -[AMSMetricsEvent _propertyForBodyKey:clientOnly:]
  -[AMSMetricsEvent setCheckDiagnosticsAndUsageSetting:]
  -[AMSMetricsEvent setDiagnosticsSubmissionBugType:]
  -[AMSMetricsEvent addClientIdentifier:]
  -[AMSMetricsEvent removePropertiesForKeys:]
  -[AMSMetricsEvent clientIdentifier]
  -[AMSMetricsEvent setTopic:]
  -[AMSMetricsEvent initForEngagement]
  -[AMSMetricsEvent dictionaryForPosting]
  -[AMSMetricsEvent internalQueue]
  -[AMSMetricsEvent setData:]
  -[AMSMetricsEvent eventType]
  -[AMSMetricsEvent timezoneOffset]
  -[AMSMetricsEvent setAnonymous:]
  -[AMSMetricsEvent setSuppressEngagement:]
  -[AMSMetricsEvent suppressEngagement]
  -[AMSMetricsEvent databasePID]
  -[AMSMetricsEvent copyWithZone:]
  -[AMSMetricsEvent initWithUnderlyingDictionary:]
  -[AMSMetricsEvent engagementEvent]
  -[AMSMetricsEvent engagementData]
  -[AMSMetricsEvent setEventType:]
  -[AMSMetricsEvent setClientIdentifier:]


AMSMetricsFigaroBagConfguration : NSObject
 @property  NSDictionary *metricsDictionary
 @property  NSArray *overrides
 @property  AMSMetricsFigaroEventModifier *defaultModifier
 @property  NSObject<OS_dispatch_queue> *queue

  // class methods
  +[AMSMetricsFigaroBagConfguration configurationWithBag:error:]

  // instance methods
  -[AMSMetricsFigaroBagConfguration metricsDictionary]
  -[AMSMetricsFigaroBagConfguration modifierForEvent:]
  -[AMSMetricsFigaroBagConfguration overrides]
  -[AMSMetricsFigaroBagConfguration .cxx_destruct]
  -[AMSMetricsFigaroBagConfguration queue]
  -[AMSMetricsFigaroBagConfguration defaultModifier]
  -[AMSMetricsFigaroBagConfguration _generateModifiersIfNeeded]
  -[AMSMetricsFigaroBagConfguration initWithMetricsDictionary:]
  -[AMSMetricsFigaroBagConfguration prepareForFlush]


AMSMetricsFigaroEventModifier : NSObject
 @property  NSDictionary *fieldFilters
 @property  NSDictionary *metricsDictionary
 @property  NSDictionary *overrideDictionary
 @property  NSString *sampleSessionKey
 @property  double flushInterval

  // instance methods
  -[AMSMetricsFigaroEventModifier _overridePropertyForKey:]
  -[AMSMetricsFigaroEventModifier _shouldSampleEvent:]
  -[AMSMetricsFigaroEventModifier _createSampleSessionKey]
  -[AMSMetricsFigaroEventModifier metricsDictionary]
  -[AMSMetricsFigaroEventModifier shouldDropEvent:]
  -[AMSMetricsFigaroEventModifier .cxx_destruct]
  -[AMSMetricsFigaroEventModifier overrideDictionary]
  -[AMSMetricsFigaroEventModifier sampleSessionKey]
  -[AMSMetricsFigaroEventModifier fieldFiltersMatchEvent:]
  -[AMSMetricsFigaroEventModifier prepareEvent:]
  -[AMSMetricsFigaroEventModifier _encodedExperimentDataForTopic:]
  -[AMSMetricsFigaroEventModifier _fieldFiltersFromOverrides:]
  -[AMSMetricsFigaroEventModifier flushInterval]
  -[AMSMetricsFigaroEventModifier shouldSkipEvent:]
  -[AMSMetricsFigaroEventModifier initWithMetricsDictionary:overrideDictionary:]
  -[AMSMetricsFigaroEventModifier reportingURLForEvent:]
  -[AMSMetricsFigaroEventModifier fieldFilters]


AMSMetricsBatch : NSObject
 @property  ACAccount *account
 @property  BOOL anonymous
 @property  NSString *canaryIdentifier
 @property  BOOL containsLoadURL
 @property  NSArray *droppedEvents
 @property  NSArray *eventDictionaries
 @property  NSArray *events
 @property  NSURL *reportURL
 @property  NSArray *skippedEvents

  // instance methods
  -[AMSMetricsBatch events]
  -[AMSMetricsBatch setAccount:]
  -[AMSMetricsBatch account]
  -[AMSMetricsBatch .cxx_destruct]
  -[AMSMetricsBatch setCanaryIdentifier:]
  -[AMSMetricsBatch containsLoadURL]
  -[AMSMetricsBatch canaryIdentifier]
  -[AMSMetricsBatch reportURL]
  -[AMSMetricsBatch setEventDictionaries:]
  -[AMSMetricsBatch droppedEvents]
  -[AMSMetricsBatch anonymous]
  -[AMSMetricsBatch setContainsLoadURL:]
  -[AMSMetricsBatch setAnonymous:]
  -[AMSMetricsBatch eventDictionaries]
  -[AMSMetricsBatch setEvents:]
  -[AMSMetricsBatch setReportURL:]
  -[AMSMetricsBatch setDroppedEvents:]
  -[AMSMetricsBatch skippedEvents]
  -[AMSMetricsBatch setSkippedEvents:]


AMSMetricsFigaroFlushTask : AMSTask <AMSMetricsFlushStrategy>
 @property  AMSPromise *currentCancellablePromise
 @property  int requestCount
 @property  AMSURLSession *URLSession
 @property  <AMSBagProtocol> *bag
 @property  <AMSMetricsDataSource> *dataSource
 @property  long long maxRequestCount
 @property  long long maxBatchSize
 @property  NSString *topic
 @property  BOOL cancelled

  // instance methods
  -[AMSMetricsFigaroFlushTask URLSession]
  -[AMSMetricsFigaroFlushTask requestCount]
  -[AMSMetricsFigaroFlushTask cancelled]
  -[AMSMetricsFigaroFlushTask performFlush]
  -[AMSMetricsFigaroFlushTask setDataSource:]
  -[AMSMetricsFigaroFlushTask setRequestCount:]
  -[AMSMetricsFigaroFlushTask _postBatch:error:]
  -[AMSMetricsFigaroFlushTask .cxx_destruct]
  -[AMSMetricsFigaroFlushTask bag]
  -[AMSMetricsFigaroFlushTask dataSource]
  -[AMSMetricsFigaroFlushTask setMaxRequestCount:]
  -[AMSMetricsFigaroFlushTask currentCancellablePromise]
  -[AMSMetricsFigaroFlushTask topic]
  -[AMSMetricsFigaroFlushTask setCurrentCancellablePromise:]
  -[AMSMetricsFigaroFlushTask _mescalSignatureWithBodyData:error:]
  -[AMSMetricsFigaroFlushTask setTopic:]
  -[AMSMetricsFigaroFlushTask setMaxBatchSize:]
  -[AMSMetricsFigaroFlushTask maxRequestCount]
  -[AMSMetricsFigaroFlushTask initWithDataSource:bag:]
  -[AMSMetricsFigaroFlushTask cancel]
  -[AMSMetricsFigaroFlushTask maxBatchSize]
  -[AMSMetricsFigaroFlushTask _shouldClearEventsDespiteError:result:]
  -[AMSMetricsFigaroFlushTask setBag:]
  -[AMSMetricsFigaroFlushTask _nextBatchWithConfig:error:]


AMSMetricsIdentifier : NSObject
 @property  ACAccount *account
 @property  AMSProcessInfo *clientInfo
 @property  NSString *domain
 @property  double duration

  // class methods
  +[AMSMetricsIdentifier clientIdKey]
  +[AMSMetricsIdentifier cleanupIdentifiers]
  +[AMSMetricsIdentifier removeIdentifiersForAccount:]

  // instance methods
  -[AMSMetricsIdentifier generateIdentifier]
  -[AMSMetricsIdentifier setAccount:]
  -[AMSMetricsIdentifier account]
  -[AMSMetricsIdentifier setDomain:]
  -[AMSMetricsIdentifier setClientInfo:]
  -[AMSMetricsIdentifier .cxx_destruct]
  -[AMSMetricsIdentifier setDuration:]
  -[AMSMetricsIdentifier clientInfo]
  -[AMSMetricsIdentifier domain]
  -[AMSMetricsIdentifier init]
  -[AMSMetricsIdentifier generateEventFields]
  -[AMSMetricsIdentifier duration]


AMSMetricsIdentifierCloudDataSource : NSObject
 @property  <AMSMetricsIdentifierCloudDataSourceDelegate> *delegate

  // class methods
  +[AMSMetricsIdentifierCloudDataSource clearSyncState]
  +[AMSMetricsIdentifierCloudDataSource cleanupIdentifiers]
  +[AMSMetricsIdentifierCloudDataSource _sharedQueue]
  +[AMSMetricsIdentifierCloudDataSource removeAllRecords]
  +[AMSMetricsIdentifierCloudDataSource _database]

  // instance methods
  -[AMSMetricsIdentifierCloudDataSource .cxx_destruct]
  -[AMSMetricsIdentifierCloudDataSource setDelegate:]
  -[AMSMetricsIdentifierCloudDataSource removeRecordWithIdentifier:]
  -[AMSMetricsIdentifierCloudDataSource _createRecordForIdentifier:]
  -[AMSMetricsIdentifierCloudDataSource _createRecordForIdentifierStore:]
  -[AMSMetricsIdentifierCloudDataSource _parseRecord:error:]
  -[AMSMetricsIdentifierCloudDataSource fetchModifiedRecordsWithCompletion:]
  -[AMSMetricsIdentifierCloudDataSource saveRecord:isServerRecord:]
  -[AMSMetricsIdentifierCloudDataSource delegate]


AMSMetricsIdentifierInfo : NSObject
 @property  BOOL crossDeviceSync
 @property  NSString *idKey
 @property  NSString *name
 @property  NSString *storeUUID
 @property  NSString *value
 @property  NSDate *expires
 @property  BOOL deleted
 @property  NSDate *lastSync
 @property  NSDate *modified

  // instance methods
  -[AMSMetricsIdentifierInfo crossDeviceSync]
  -[AMSMetricsIdentifierInfo name]
  -[AMSMetricsIdentifierInfo syncStateFieldName]
  -[AMSMetricsIdentifierInfo setLastSync:]
  -[AMSMetricsIdentifierInfo setExpires:]
  -[AMSMetricsIdentifierInfo setIdKey:]
  -[AMSMetricsIdentifierInfo .cxx_destruct]
  -[AMSMetricsIdentifierInfo setModified:]
  -[AMSMetricsIdentifierInfo deleted]
  -[AMSMetricsIdentifierInfo setName:]
  -[AMSMetricsIdentifierInfo lastSync]
  -[AMSMetricsIdentifierInfo idKey]
  -[AMSMetricsIdentifierInfo setValue:]
  -[AMSMetricsIdentifierInfo modified]
  -[AMSMetricsIdentifierInfo expires]
  -[AMSMetricsIdentifierInfo value]
  -[AMSMetricsIdentifierInfo populateDictionary:]
  -[AMSMetricsIdentifierInfo setStoreUUID:]
  -[AMSMetricsIdentifierInfo storeUUID]
  -[AMSMetricsIdentifierInfo setCrossDeviceSync:]
  -[AMSMetricsIdentifierInfo setDeleted:]


AMSMetricsIdentifierKey : NSObject
 @property  BOOL crossDeviceSync
 @property  NSString *name

  // class methods
  +[AMSMetricsIdentifierKey keyWithName:crossDeviceSync:]

  // instance methods
  -[AMSMetricsIdentifierKey crossDeviceSync]
  -[AMSMetricsIdentifierKey name]
  -[AMSMetricsIdentifierKey .cxx_destruct]
  -[AMSMetricsIdentifierKey setName:]
  -[AMSMetricsIdentifierKey setCrossDeviceSync:]


AMSMetricsIdentifierStore : NSObject
 @property  ACAccount *account
 @property  AMSProcessInfo *clientInfo
 @property  NSString *domain
 @property  double resetInterval

  // class methods
  +[AMSMetricsIdentifierStore cleanupIdentifiers]
  +[AMSMetricsIdentifierStore removeIdentifiersForAccount:]
  +[AMSMetricsIdentifierStore _accountIdentifierForAccount:]
  +[AMSMetricsIdentifierStore identifierStoreWithAccount:bagNamespace:bag:]
  +[AMSMetricsIdentifierStore _sharedQueue]
  +[AMSMetricsIdentifierStore _database]
  +[AMSMetricsIdentifierStore _sync]

  // instance methods
  -[AMSMetricsIdentifierStore setAccount:]
  -[AMSMetricsIdentifierStore _identifierInfoForKey:storeInfo:period:inDatabase:date:setValue:needsToSync:error:]
  -[AMSMetricsIdentifierStore account]
  -[AMSMetricsIdentifierStore setDomain:]
  -[AMSMetricsIdentifierStore setClientInfo:]
  -[AMSMetricsIdentifierStore identifierForKey:]
  -[AMSMetricsIdentifierStore .cxx_destruct]
  -[AMSMetricsIdentifierStore resetInterval]
  -[AMSMetricsIdentifierStore clientInfo]
  -[AMSMetricsIdentifierStore domain]
  -[AMSMetricsIdentifierStore _generateStoreKey]
  -[AMSMetricsIdentifierStore _generateFutureIdentifiersIfNeededForKeys:storeInfo:afterPeriod:inDatabase:date:]
  -[AMSMetricsIdentifierStore _identifiersForKeys:currentDate:]
  -[AMSMetricsIdentifierStore setIdentifier:forKey:]
  -[AMSMetricsIdentifierStore reset]
  -[AMSMetricsIdentifierStore _generateIdentifierKey:storeInfo:period:]
  -[AMSMetricsIdentifierStore _identifierStoreInfoForKeys:inDatabase:date:needsToSync:error:]
  -[AMSMetricsIdentifierStore setResetInterval:]
  -[AMSMetricsIdentifierStore generateEventFieldsForKeys:]


AMSMetricsIdentifierStoreInfo : NSObject
 @property  NSString *account
 @property  BOOL crossDeviceSync
 @property  double resetInterval
 @property  NSDate *started
 @property  NSString *storeKey
 @property  NSString *storeUUID
 @property  BOOL deleted
 @property  NSDate *lastSync
 @property  NSDate *modified

  // instance methods
  -[AMSMetricsIdentifierStoreInfo crossDeviceSync]
  -[AMSMetricsIdentifierStoreInfo setStarted:]
  -[AMSMetricsIdentifierStoreInfo setAccount:]
  -[AMSMetricsIdentifierStoreInfo setLastSync:]
  -[AMSMetricsIdentifierStoreInfo account]
  -[AMSMetricsIdentifierStoreInfo started]
  -[AMSMetricsIdentifierStoreInfo .cxx_destruct]
  -[AMSMetricsIdentifierStoreInfo resetInterval]
  -[AMSMetricsIdentifierStoreInfo setModified:]
  -[AMSMetricsIdentifierStoreInfo deleted]
  -[AMSMetricsIdentifierStoreInfo setStoreKey:]
  -[AMSMetricsIdentifierStoreInfo lastSync]
  -[AMSMetricsIdentifierStoreInfo modified]
  -[AMSMetricsIdentifierStoreInfo setStoreUUID:]
  -[AMSMetricsIdentifierStoreInfo storeUUID]
  -[AMSMetricsIdentifierStoreInfo setResetInterval:]
  -[AMSMetricsIdentifierStoreInfo setCrossDeviceSync:]
  -[AMSMetricsIdentifierStoreInfo storeKey]
  -[AMSMetricsIdentifierStoreInfo setDeleted:]


AMSMetricsLoadURLContext : NSObject
 @property  NSDictionary *decodedResponseBody
 @property  AMSURLRequestProperties *properties
 @property  <AMSBagProtocol> *bag
 @property  NSError *error
 @property  AMSProcessInfo *processInfo
 @property  NSData *responseBody
 @property  NSURLSession *session
 @property  NSURLSessionTask *task
 @property  NSURLSessionTaskMetrics *taskMetrics

  // instance methods
  -[AMSMetricsLoadURLContext processInfo]
  -[AMSMetricsLoadURLContext bagContract]
  -[AMSMetricsLoadURLContext setBagContract:]
  -[AMSMetricsLoadURLContext setDecodedResponseBody:]
  -[AMSMetricsLoadURLContext .cxx_destruct]
  -[AMSMetricsLoadURLContext bag]
  -[AMSMetricsLoadURLContext taskMetrics]
  -[AMSMetricsLoadURLContext setResponseBody:]
  -[AMSMetricsLoadURLContext properties]
  -[AMSMetricsLoadURLContext setSession:]
  -[AMSMetricsLoadURLContext setProcessInfo:]
  -[AMSMetricsLoadURLContext decodedResponseBody]
  -[AMSMetricsLoadURLContext responseBody]
  -[AMSMetricsLoadURLContext setProperties:]
  -[AMSMetricsLoadURLContext setTask:]
  -[AMSMetricsLoadURLContext initWithTaskInfo:serverPayload:]
  -[AMSMetricsLoadURLContext setTaskMetrics:]
  -[AMSMetricsLoadURLContext task]
  -[AMSMetricsLoadURLContext setBag:]
  -[AMSMetricsLoadURLContext initWithTask:metrics:]
  -[AMSMetricsLoadURLContext session]
  -[AMSMetricsLoadURLContext setError:]
  -[AMSMetricsLoadURLContext error]


AMSMetricsLoadURLEvent : AMSMetricsEvent
 @property  NSString *appleTimingApp
 @property  BOOL apsRelayAttempted
 @property  BOOL apsRelayDidFallback
 @property  BOOL apsRelaySucceeded
 @property  NSString *cellularDataBearerTechnology
 @property  NSString *clientCorrelationKey
 @property  NSString *clientError
 @property  double connectionEndTime
 @property  NSString *connectionInterface
 @property  BOOL connectionReused
 @property  unsigned long connectionStartNStatRXBytes
 @property  unsigned long connectionStartNStatTXBytes
 @property  unsigned long connectionStopNStatRXBytes
 @property  unsigned long connectionStopNStatTXBytes
 @property  double connectionStartTime
 @property  NSString *connectionType
 @property  double domainLookupEndTime
 @property  double domainLookupStartTime
 @property  NSString *DNSServers
 @property  NSString *edgeNodeCacheStatus
 @property  NSString *environmentDataCenter
 @property  double fetchStartTime
 @property  BOOL cachedResponse
 @property  NSArray *networkQualityReports
 @property  NSString *originalApp
 @property  NSString *radioType
 @property  NSString *radioTechnology
 @property  unsigned long redirectCount
 @property  double redirectEndTime
 @property  double redirectStartTime
 @property  unsigned long requestMessageSize
 @property  double requestStartTime
 @property  NSString *requestURL
 @property  NSString *resolvedIPAddress
 @property  NSString *responseDate
 @property  double responseEndTime
 @property  unsigned long responseMessageSize
 @property  double responseStartTime
 @property  double secureConnectionStartTime
 @property  long long statusCode
 @property  NSString *TIDState
 @property  BOOL TFOEnabled
 @property  BOOL TLSSessionTickets
 @property  NSString *wt
 @property  double xpSessionDuration
 @property  BOOL xpSamplingForced
 @property  double xpSamplingPercentageUsers
 @property  double xpSamplingPercentageCachedResponses
 @property  NSString *xxdc

  // class methods
  +[AMSMetricsLoadURLEvent _timingDataMetricToServerTimeInterval:]
  +[AMSMetricsLoadURLEvent _radioTypeStringValueFromRadioType:]
  +[AMSMetricsLoadURLEvent _metricsDictionaryFromConfig:]
  +[AMSMetricsLoadURLEvent _resolvedIPAddressFromTask:]
  +[AMSMetricsLoadURLEvent _DNSServerIPAddresses]
  +[AMSMetricsLoadURLEvent shouldCollectMetricsForContext:]
  +[AMSMetricsLoadURLEvent _fetchNetworkQualityReports]
  +[AMSMetricsLoadURLEvent _randomDouble]

  // instance methods
  -[AMSMetricsLoadURLEvent xxdc]
  -[AMSMetricsLoadURLEvent wt]
  -[AMSMetricsLoadURLEvent responseMessageSize]
  -[AMSMetricsLoadURLEvent appleTimingApp]
  -[AMSMetricsLoadURLEvent setRadioTechnology:]
  -[AMSMetricsLoadURLEvent domainLookupStartTime]
  -[AMSMetricsLoadURLEvent edgeNodeCacheStatus]
  -[AMSMetricsLoadURLEvent responseDate]
  -[AMSMetricsLoadURLEvent domainLookupEndTime]
  -[AMSMetricsLoadURLEvent responseStartTime]
  -[AMSMetricsLoadURLEvent connectionReused]
  -[AMSMetricsLoadURLEvent radioType]
  -[AMSMetricsLoadURLEvent setConnectionReused:]
  -[AMSMetricsLoadURLEvent responseEndTime]
  -[AMSMetricsLoadURLEvent setResponseStartTime:]
  -[AMSMetricsLoadURLEvent fetchStartTime]
  -[AMSMetricsLoadURLEvent radioTechnology]
  -[AMSMetricsLoadURLEvent connectionType]
  -[AMSMetricsLoadURLEvent setDomainLookupEndTime:]
  -[AMSMetricsLoadURLEvent setXpSessionDuration:]
  -[AMSMetricsLoadURLEvent setOriginalApp:]
  -[AMSMetricsLoadURLEvent setFetchStartTime:]
  -[AMSMetricsLoadURLEvent setEnvironmentDataCenter:]
  -[AMSMetricsLoadURLEvent xpSamplingPercentageCachedResponses]
  -[AMSMetricsLoadURLEvent resolvedIPAddress]
  -[AMSMetricsLoadURLEvent setConnectionType:]
  -[AMSMetricsLoadURLEvent environmentDataCenter]
  -[AMSMetricsLoadURLEvent setDomainLookupStartTime:]
  -[AMSMetricsLoadURLEvent connectionStopNStatTXBytes]
  -[AMSMetricsLoadURLEvent setEdgeNodeCacheStatus:]
  -[AMSMetricsLoadURLEvent connectionStartNStatTXBytes]
  -[AMSMetricsLoadURLEvent setXpSamplingPercentageCachedResponses:]
  -[AMSMetricsLoadURLEvent connectionEndTime]
  -[AMSMetricsLoadURLEvent setXxdc:]
  -[AMSMetricsLoadURLEvent setResponseMessageSize:]
  -[AMSMetricsLoadURLEvent setNetworkQualityReports:]
  -[AMSMetricsLoadURLEvent requestMessageSize]
  -[AMSMetricsLoadURLEvent setApsRelayDidFallback:]
  -[AMSMetricsLoadURLEvent setRequestStartTime:]
  -[AMSMetricsLoadURLEvent setCellularDataBearerTechnology:]
  -[AMSMetricsLoadURLEvent originalApp]
  -[AMSMetricsLoadURLEvent setRadioType:]
  -[AMSMetricsLoadURLEvent cachedResponse]
  -[AMSMetricsLoadURLEvent setConnectionEndTime:]
  -[AMSMetricsLoadURLEvent secureConnectionStartTime]
  -[AMSMetricsLoadURLEvent clientError]
  -[AMSMetricsLoadURLEvent apsRelayAttempted]
  -[AMSMetricsLoadURLEvent connectionStartNStatRXBytes]
  -[AMSMetricsLoadURLEvent xpSamplingForced]
  -[AMSMetricsLoadURLEvent initWithContext:]
  -[AMSMetricsLoadURLEvent xpSamplingPercentageUsers]
  -[AMSMetricsLoadURLEvent setResolvedIPAddress:]
  -[AMSMetricsLoadURLEvent redirectCount]
  -[AMSMetricsLoadURLEvent setConnectionStopNStatRXBytes:]
  -[AMSMetricsLoadURLEvent setConnectionInterface:]
  -[AMSMetricsLoadURLEvent setTLSSessionTickets:]
  -[AMSMetricsLoadURLEvent setStatusCode:]
  -[AMSMetricsLoadURLEvent setCachedResponse:]
  -[AMSMetricsLoadURLEvent apsRelaySucceeded]
  -[AMSMetricsLoadURLEvent redirectEndTime]
  -[AMSMetricsLoadURLEvent setConnectionStartNStatRXBytes:]
  -[AMSMetricsLoadURLEvent setResponseEndTime:]
  -[AMSMetricsLoadURLEvent setRedirectCount:]
  -[AMSMetricsLoadURLEvent setApsRelayAttempted:]
  -[AMSMetricsLoadURLEvent setXpSamplingForced:]
  -[AMSMetricsLoadURLEvent TLSSessionTickets]
  -[AMSMetricsLoadURLEvent setApsRelaySucceeded:]
  -[AMSMetricsLoadURLEvent connectionInterface]
  -[AMSMetricsLoadURLEvent apsRelayDidFallback]
  -[AMSMetricsLoadURLEvent DNSServers]
  -[AMSMetricsLoadURLEvent setTFOEnabled:]
  -[AMSMetricsLoadURLEvent networkQualityReports]
  -[AMSMetricsLoadURLEvent clientCorrelationKey]
  -[AMSMetricsLoadURLEvent setRedirectEndTime:]
  -[AMSMetricsLoadURLEvent setDNSServers:]
  -[AMSMetricsLoadURLEvent xpSessionDuration]
  -[AMSMetricsLoadURLEvent statusCode]
  -[AMSMetricsLoadURLEvent setResponseDate:]
  -[AMSMetricsLoadURLEvent setConnectionStartNStatTXBytes:]
  -[AMSMetricsLoadURLEvent setRedirectStartTime:]
  -[AMSMetricsLoadURLEvent redirectStartTime]
  -[AMSMetricsLoadURLEvent requestURL]
  -[AMSMetricsLoadURLEvent _prepareEventWithContext:]
  -[AMSMetricsLoadURLEvent setConnectionStopNStatTXBytes:]
  -[AMSMetricsLoadURLEvent setRequestMessageSize:]
  -[AMSMetricsLoadURLEvent connectionStartTime]
  -[AMSMetricsLoadURLEvent setSecureConnectionStartTime:]
  -[AMSMetricsLoadURLEvent setXpSamplingPercentageUsers:]
  -[AMSMetricsLoadURLEvent setWt:]
  -[AMSMetricsLoadURLEvent requestStartTime]
  -[AMSMetricsLoadURLEvent setRequestURL:]
  -[AMSMetricsLoadURLEvent TIDState]
  -[AMSMetricsLoadURLEvent setTIDState:]
  -[AMSMetricsLoadURLEvent setConnectionStartTime:]
  -[AMSMetricsLoadURLEvent connectionStopNStatRXBytes]
  -[AMSMetricsLoadURLEvent TFOEnabled]
  -[AMSMetricsLoadURLEvent setClientError:]
  -[AMSMetricsLoadURLEvent cellularDataBearerTechnology]
  -[AMSMetricsLoadURLEvent setAppleTimingApp:]
  -[AMSMetricsLoadURLEvent setClientCorrelationKey:]


AMSMetricsMemoryDataSource : NSObject <AMSMetricsDataSource>
 @property  NSMutableDictionary *batches

  // class methods
  +[AMSMetricsMemoryDataSource batchesFromEvents:]

  // instance methods
  -[AMSMetricsMemoryDataSource batches]
  -[AMSMetricsMemoryDataSource .cxx_destruct]
  -[AMSMetricsMemoryDataSource willStartBatchingWithLogKey:error:]
  -[AMSMetricsMemoryDataSource skipEvents:error:]
  -[AMSMetricsMemoryDataSource removeEvents:error:]
  -[AMSMetricsMemoryDataSource initWithEvents:]
  -[AMSMetricsMemoryDataSource enumerateSortedEventsForTopic:block:]
  -[AMSMetricsMemoryDataSource setBatches:]
  -[AMSMetricsMemoryDataSource cancel]
  -[AMSMetricsMemoryDataSource didFinishBatching]


AMSMockBagBuilder : NSObject
 @property  NSMutableDictionary *data
 @property  NSDate *expirationDate
 @property  NSString *profile
 @property  NSString *profileVersion

  // instance methods
  -[AMSMockBagBuilder setProfile:]
  -[AMSMockBagBuilder .cxx_destruct]
  -[AMSMockBagBuilder data]
  -[AMSMockBagBuilder setExpirationDate:]
  -[AMSMockBagBuilder init]
  -[AMSMockBagBuilder profileVersion]
  -[AMSMockBagBuilder createMockBag]
  -[AMSMockBagBuilder addBagKey:value:valueType:]
  -[AMSMockBagBuilder profile]
  -[AMSMockBagBuilder initWithData:]
  -[AMSMockBagBuilder setData:]
  -[AMSMockBagBuilder unionBagKeySet:]
  -[AMSMockBagBuilder expirationDate]
  -[AMSMockBagBuilder setProfileVersion:]


AMSFailingMockBagBuilder : AMSMockBagBuilder
 @property  double delay
 @property  NSError *error

  // instance methods
  -[AMSFailingMockBagBuilder delay]
  -[AMSFailingMockBagBuilder setDelay:]
  -[AMSFailingMockBagBuilder .cxx_destruct]
  -[AMSFailingMockBagBuilder createMockBag]
  -[AMSFailingMockBagBuilder setError:]
  -[AMSFailingMockBagBuilder error]


AMSBagFailingDataSource : NSObject <AMSBagDataSourceProtocol>
 @property  double delay
 @property  NSError *error
 @property  NSString *profile
 @property  NSString *profileVersion
 @property  NSDate *expirationDate
 @property  BOOL loaded
 @property  AMSProcessInfo *processInfo
 @property  NSString *descriptionExtended
 @property  @? dataSourceChangedHandler
 @property  @? dataSourceDataInvalidatedHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSBagFailingDataSource processInfo]
  -[AMSBagFailingDataSource setProfile:]
  -[AMSBagFailingDataSource defaultValueForKey:]
  -[AMSBagFailingDataSource delay]
  -[AMSBagFailingDataSource setDelay:]
  -[AMSBagFailingDataSource .cxx_destruct]
  -[AMSBagFailingDataSource isLoaded]
  -[AMSBagFailingDataSource valueForURLVariable:account:]
  -[AMSBagFailingDataSource profileVersion]
  -[AMSBagFailingDataSource initWithProfile:profileVersion:error:delay:]
  -[AMSBagFailingDataSource profile]
  -[AMSBagFailingDataSource loadWithCompletion:]
  -[AMSBagFailingDataSource expirationDate]
  -[AMSBagFailingDataSource setError:]
  -[AMSBagFailingDataSource setDefaultValue:forKey:]
  -[AMSBagFailingDataSource error]
  -[AMSBagFailingDataSource setProfileVersion:]


AMSMockNetworkProxy : NSURLProtocol
 @property  AMSMockURLOverride *currentOverride

  // class methods
  +[AMSMockNetworkProxy clearOverrides]
  +[AMSMockNetworkProxy addOverride:]
  +[AMSMockNetworkProxy canonicalRequestForRequest:]
  +[AMSMockNetworkProxy removeOverride:]
  +[AMSMockNetworkProxy _executedOverrides]
  +[AMSMockNetworkProxy _removeOverride:]
  +[AMSMockNetworkProxy registeredOverrides]
  +[AMSMockNetworkProxy executedOverrides]
  +[AMSMockNetworkProxy _removeAllOverrides]
  +[AMSMockNetworkProxy _overrides]
  +[AMSMockNetworkProxy _sync:]
  +[AMSMockNetworkProxy canInitWithRequest:]

  // instance methods
  -[AMSMockNetworkProxy stopLoading]
  -[AMSMockNetworkProxy .cxx_destruct]
  -[AMSMockNetworkProxy sendResponse:]
  -[AMSMockNetworkProxy setCurrentOverride:]
  -[AMSMockNetworkProxy finishWithData:]
  -[AMSMockNetworkProxy currentOverride]
  -[AMSMockNetworkProxy performRedirectFromResponse:]
  -[AMSMockNetworkProxy startLoading]
  -[AMSMockNetworkProxy finishWithError:]


AMSMockPurchaseQueue : AMSPurchaseQueue
 @property  AMSMockURLOverride *mockURLOverride

  // instance methods
  -[AMSMockPurchaseQueue .cxx_destruct]
  -[AMSMockPurchaseQueue mockURLOverride]
  -[AMSMockPurchaseQueue initWithConfiguration:mockURLOverride:]
  -[AMSMockPurchaseQueue setMockURLOverride:]
  -[AMSMockPurchaseQueue dealloc]


AMSMockURLOverride : NSObject <NSCopying>
 @property  NSMutableArray *comparators
 @property  AMSObservable *executedObservable
 @property  AMSMockURLResponse *response

  // class methods
  +[AMSMockURLOverride overrideWithHost:usingResponse:]
  +[AMSMockURLOverride overrideWithPathComponent:usingResponse:]
  +[AMSMockURLOverride overrideWithURLRegex:usingResponse:]

  // instance methods
  -[AMSMockURLOverride .cxx_destruct]
  -[AMSMockURLOverride init]
  -[AMSMockURLOverride shouldOverrideURLRequest:]
  -[AMSMockURLOverride executedObservable]
  -[AMSMockURLOverride withURLMatchingHost:]
  -[AMSMockURLOverride withURLQueryItems:]
  -[AMSMockURLOverride withURLContainingPath:]
  -[AMSMockURLOverride withURLRegexValidation:]
  -[AMSMockURLOverride _withURLMatchingHost:containingPath:queryItems:]
  -[AMSMockURLOverride withHTTPBodyValidation:encoding:]
  -[AMSMockURLOverride withResponse:]
  -[AMSMockURLOverride setExecutedObservable:]
  -[AMSMockURLOverride setComparators:]
  -[AMSMockURLOverride response]
  -[AMSMockURLOverride copyWithZone:]
  -[AMSMockURLOverride comparators]
  -[AMSMockURLOverride setResponse:]


AMSMockURLRequestComparator : NSObject <AMSURLRequestComparator>
 @property  @? criteriaBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSMockURLRequestComparator .cxx_destruct]
  -[AMSMockURLRequestComparator shouldOverrideURLRequest:]
  -[AMSMockURLRequestComparator initWithCriteriaBlock:]
  -[AMSMockURLRequestComparator criteriaBlock]
  -[AMSMockURLRequestComparator setCriteriaBlock:]


AMSMockURLResponse : NSObject
 @property  NSMutableArray *responseHandlerBlocks
 @property  NSURLSessionTask *runningTask
 @property  NSError *error
 @property  unsigned long statusCode
 @property  NSDictionary *headers
 @property  NSData *body
 @property  BOOL performActualRequest
 @property  NSURLRequest *originalRequest

  // class methods
  +[AMSMockURLResponse responseFromActualResponse]
  +[AMSMockURLResponse responseWithStatus:headers:body:]
  +[AMSMockURLResponse responseWithHARFile:]
  +[AMSMockURLResponse responseWithError:]

  // instance methods
  -[AMSMockURLResponse body]
  -[AMSMockURLResponse .cxx_destruct]
  -[AMSMockURLResponse init]
  -[AMSMockURLResponse setHeaders:]
  -[AMSMockURLResponse handleReceivedRequest:]
  -[AMSMockURLResponse stopRunningTasks]
  -[AMSMockURLResponse runningTask]
  -[AMSMockURLResponse setPerformActualRequest:]
  -[AMSMockURLResponse performActualRequest]
  -[AMSMockURLResponse responseHandlerBlocks]
  -[AMSMockURLResponse addResponseHandler:]
  -[AMSMockURLResponse setResponseHandlerBlocks:]
  -[AMSMockURLResponse setStatusCode:]
  -[AMSMockURLResponse headers]
  -[AMSMockURLResponse originalRequest]
  -[AMSMockURLResponse setBody:]
  -[AMSMockURLResponse statusCode]
  -[AMSMockURLResponse setRunningTask:]
  -[AMSMockURLResponse setError:]
  -[AMSMockURLResponse error]


AMSMockURLSession : AMSURLSession
  // instance methods
  -[AMSMockURLSession initWithConfiguration:delegate:delegateQueue:]


AMSMultiUserService : NSObject <AMSMachService>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSMultiUserService machServiceName]
  +[AMSMultiUserService sharedConnectionAccessQueue]
  +[AMSMultiUserService proxyObjectAsync]
  +[AMSMultiUserService sharedConnection]
  +[AMSMultiUserService serviceInterface]
  +[AMSMultiUserService setSharedConnection:]
  +[AMSMultiUserService proxyObject]
  +[AMSMultiUserService isConnectionEntitled:]
  +[AMSMultiUserService _createXPCConnection]


AMSMutableBinaryPromise : AMSBinaryPromise
  // class methods
  +[AMSMutableBinaryPromise finishPromise:withSuccess:]
  +[AMSMutableBinaryPromise finishPromise:withError:]
  +[AMSMutableBinaryPromise cancelPromise:]
  +[AMSMutableBinaryPromise finishPromise:withPromise:]
  +[AMSMutableBinaryPromise finishPromise:withSuccess:error:]

  // instance methods
  -[AMSMutableBinaryPromise cancel]
  -[AMSMutableBinaryPromise finishWithSuccess:error:]
  -[AMSMutableBinaryPromise finishWithPromise:]
  -[AMSMutableBinaryPromise finishWithError:]
  -[AMSMutableBinaryPromise finishWithSuccess]


AMSMutableLazyPromise : AMSLazyPromise
  // instance methods
  -[AMSMutableLazyPromise finishWithResult:error:]
  -[AMSMutableLazyPromise finishWithResult:]
  -[AMSMutableLazyPromise initWithBlock:]
  -[AMSMutableLazyPromise cancel]
  -[AMSMutableLazyPromise finishWithPromise:]
  -[AMSMutableLazyPromise initWithTimeout:block:]
  -[AMSMutableLazyPromise finishWithError:]


AMSMutablePromise : AMSPromise
  // class methods
  +[AMSMutablePromise promiseWithAll:timeout:]
  +[AMSMutablePromise startTimeoutForPromise:timeout:]
  +[AMSMutablePromise finishPromise:withError:]
  +[AMSMutablePromise cancelPromise:]
  +[AMSMutablePromise finishPromise:withPromise:]
  +[AMSMutablePromise promiseWithAny:]
  +[AMSMutablePromise promiseWithFlattenedPromises:]
  +[AMSMutablePromise finishPromise:withResult:]
  +[AMSMutablePromise finishPromise:withResult:error:]
  +[AMSMutablePromise _finishPromise:withResult:error:logDuplicateFinishes:]
  +[AMSMutablePromise promiseWithAll:]
  +[AMSMutablePromise promiseWithAny:timeout:]

  // instance methods
  -[AMSMutablePromise thenWithBlock:]
  -[AMSMutablePromise finishWithResult:error:]
  -[AMSMutablePromise finishWithResult:]
  -[AMSMutablePromise catchWithBlock:]
  -[AMSMutablePromise initWithTimeout:]
  -[AMSMutablePromise startTimeout:]
  -[AMSMutablePromise promiseWithTimeout:]
  -[AMSMutablePromise finishWithPromiseResult:]
  -[AMSMutablePromise _finishWithResult:error:logDuplicateFinishes:]
  -[AMSMutablePromise cancel]
  -[AMSMutablePromise continueWithBlock:]
  -[AMSMutablePromise finishWithPromise:]
  -[AMSMutablePromise finishWithError:]


AMSMutableSet : NSMutableSet
 @property  @? hashBlock

  // class methods
  +[AMSMutableSet setWithHashBlock:]

  // instance methods
  -[AMSMutableSet containsObject:]
  -[AMSMutableSet member:]
  -[AMSMutableSet anyObject]
  -[AMSMutableSet addObjectsFromArray:]
  -[AMSMutableSet addObject:]
  -[AMSMutableSet .cxx_destruct]
  -[AMSMutableSet count]
  -[AMSMutableSet hashBlock]
  -[AMSMutableSet setHashBlock:]
  -[AMSMutableSet initWithHashBlock:]
  -[AMSMutableSet _allObjectsFromBackingSet]
  -[AMSMutableSet allObjects]
  -[AMSMutableSet objectEnumerator]


AMSNetworkConstraints : NSObject <AMSBagConsumer>
 @property  NSMutableDictionary *sizeLimits
 @property  BOOL anyNetworkTypeEnabled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSNetworkConstraints bagKeySet]
  +[AMSNetworkConstraints bagSubProfileVersion]
  +[AMSNetworkConstraints bagSubProfile]
  +[AMSNetworkConstraints _networkConstraintsForMediaType:withArray:]
  +[AMSNetworkConstraints networkConstraintsForMediaType:withBag:]
  +[AMSNetworkConstraints createBagForSubProfile]

  // instance methods
  -[AMSNetworkConstraints hasSizeLimitForNetworkType:]
  -[AMSNetworkConstraints _setSizeLimit:forNetworkType:]
  -[AMSNetworkConstraints .cxx_destruct]
  -[AMSNetworkConstraints _sizeLimitForNetworkType:]
  -[AMSNetworkConstraints init]
  -[AMSNetworkConstraints isEqual:]
  -[AMSNetworkConstraints isAnyNetworkTypeEnabled]
  -[AMSNetworkConstraints sizeLimits]
  -[AMSNetworkConstraints setSizeLimits:]
  -[AMSNetworkConstraints _initWithStoreConstraintDictionary:]
  -[AMSNetworkConstraints sizeLimitForNetworkType:]
  -[AMSNetworkConstraints _disableAllNetworkTypes]
  -[AMSNetworkConstraints isEqualToConstraints:]


AMSNetworkQualityInquiry : NSObject <NWNetworkOfInterestManagerDelegate>
 @property  NWNetworkOfInterestManager *manager
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSMutableSet *knownNetworks
 @property  NSMutableArray *knownNetworksReadyHandlers

  // class methods
  +[AMSNetworkQualityInquiry isEntitled]
  +[AMSNetworkQualityInquiry sharedInstance]
  +[AMSNetworkQualityInquiry lastConnectionReport]
  +[AMSNetworkQualityInquiry reportForTask:fromReports:]
  +[AMSNetworkQualityInquiry updateLastConnectionReportWithTask:]

  // instance methods
  -[AMSNetworkQualityInquiry areKnownNetworksReady]
  -[AMSNetworkQualityInquiry .cxx_destruct]
  -[AMSNetworkQualityInquiry drainKnownNetworksReadyHandlers]
  -[AMSNetworkQualityInquiry performWhenKnownNetworksReady:]
  -[AMSNetworkQualityInquiry didStartTrackingNOI:]
  -[AMSNetworkQualityInquiry init]
  -[AMSNetworkQualityInquiry investigateNetworks]
  -[AMSNetworkQualityInquiry setKnownNetworksReadyHandlers:]
  -[AMSNetworkQualityInquiry manager]
  -[AMSNetworkQualityInquiry knownNetworksReadyHandlers]
  -[AMSNetworkQualityInquiry queue]
  -[AMSNetworkQualityInquiry dealloc]
  -[AMSNetworkQualityInquiry didStopTrackingAllNOIs:]
  -[AMSNetworkQualityInquiry knownNetworks]
  -[AMSNetworkQualityInquiry didStopTrackingNOI:]


AMSNotificationSettingsItem : NSObject
 @property  NSDictionary *dictionaryRepresentation
 @property  NSString *desc
 @property  BOOL enabled
 @property  NSString *identifier
 @property  NSString *title
 @property  BOOL userChanged

  // instance methods
  -[AMSNotificationSettingsItem initWithDictionaryRepresentation:]
  -[AMSNotificationSettingsItem .cxx_destruct]
  -[AMSNotificationSettingsItem dictionaryRepresentation]
  -[AMSNotificationSettingsItem identifier]
  -[AMSNotificationSettingsItem userChanged]
  -[AMSNotificationSettingsItem setUserChanged:]
  -[AMSNotificationSettingsItem initWithTitle:description:identifier:enabled:]
  -[AMSNotificationSettingsItem isEnabled]
  -[AMSNotificationSettingsItem title]
  -[AMSNotificationSettingsItem desc]
  -[AMSNotificationSettingsItem setEnabled:]


AMSNotificationSettingsResult : NSObject
 @property  NSArray *sections

  // class methods
  +[AMSNotificationSettingsResult _sectionsFromDictionaryRepresentation:]

  // instance methods
  -[AMSNotificationSettingsResult sections]
  -[AMSNotificationSettingsResult initWithDictionaryRepresentation:]
  -[AMSNotificationSettingsResult .cxx_destruct]


AMSNotificationSettingsSection : NSObject
 @property  NSDictionary *dictionaryRepresentation
 @property  NSString *footer
 @property  NSString *identifier
 @property  NSArray *items
 @property  NSString *title

  // instance methods
  -[AMSNotificationSettingsSection footer]
  -[AMSNotificationSettingsSection initWithDictionaryRepresentation:]
  -[AMSNotificationSettingsSection items]
  -[AMSNotificationSettingsSection .cxx_destruct]
  -[AMSNotificationSettingsSection dictionaryRepresentation]
  -[AMSNotificationSettingsSection identifier]
  -[AMSNotificationSettingsSection initWithTitle:footer:items:]
  -[AMSNotificationSettingsSection title]


AMSNotificationSettingsTask : AMSTask <AMSBagConsumer>
 @property  ACAccount *account
 @property  <AMSBagProtocol> *bag
 @property  AMSProcessInfo *clientInfo
 @property  NSString *identifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSNotificationSettingsTask bagKeySet]
  +[AMSNotificationSettingsTask bagSubProfileVersion]
  +[AMSNotificationSettingsTask bagSubProfile]

  // instance methods
  -[AMSNotificationSettingsTask updateSettings:]
  -[AMSNotificationSettingsTask setAccount:]
  -[AMSNotificationSettingsTask account]
  -[AMSNotificationSettingsTask setClientInfo:]
  -[AMSNotificationSettingsTask .cxx_destruct]
  -[AMSNotificationSettingsTask bag]
  -[AMSNotificationSettingsTask clientInfo]
  -[AMSNotificationSettingsTask identifier]
  -[AMSNotificationSettingsTask fetchAllSettings]
  -[AMSNotificationSettingsTask _generateParametersForItems:]
  -[AMSNotificationSettingsTask initWithIdentifier:account:bag:]
  -[AMSNotificationSettingsTask fetchSettingForIdentifier:]
  -[AMSNotificationSettingsTask fetchSettingsForSections:]
  -[AMSNotificationSettingsTask setBag:]


_AMSKeyValueObservable : AMSObservable
 @property  NSObject *context
 @property  NSString *keyPath
 @property  NSObject *object

  // instance methods
  -[_AMSKeyValueObservable initWithObject:keyPath:options:]
  -[_AMSKeyValueObservable .cxx_destruct]
  -[_AMSKeyValueObservable setKeyPath:]
  -[_AMSKeyValueObservable keyPath]
  -[_AMSKeyValueObservable sendCompletion]
  -[_AMSKeyValueObservable object]
  -[_AMSKeyValueObservable cancel]
  -[_AMSKeyValueObservable setContext:]
  -[_AMSKeyValueObservable setObject:]
  -[_AMSKeyValueObservable observeValueForKeyPath:ofObject:change:context:]
  -[_AMSKeyValueObservable context]


_AMSNotificationObservable : AMSObservable
  // instance methods
  -[_AMSNotificationObservable sendCompletion]
  -[_AMSNotificationObservable _receivedNotification:]
  -[_AMSNotificationObservable cancel]
  -[_AMSNotificationObservable initWithNotification:object:]


AMSObservable : NSObject
 @property  unsigned long behavior
 @property  NSError *failureError
 @property  NSString *logKey
 @property  NSMutableArray *observers
 @property  NSMutableArray *queuedResults
 @property  NSObject<OS_dispatch_queue> *sendMessageQueue
 @property  NSConditionLock *stateLock
 @property  BOOL cancelled
 @property  BOOL complete

  // instance methods
  -[AMSObservable subscribeWithResultBlock:]
  -[AMSObservable initWithObject:keyPath:options:]
  -[AMSObservable setQueuedResults:]
  -[AMSObservable failureError]
  -[AMSObservable logKey]
  -[AMSObservable initWithObserver:behavior:]
  -[AMSObservable sendFailure:]
  -[AMSObservable .cxx_destruct]
  -[AMSObservable initWithObservers:]
  -[AMSObservable initWithObserver:]
  -[AMSObservable isCancelled]
  -[AMSObservable setObservers:]
  -[AMSObservable init]
  -[AMSObservable _isComplete]
  -[AMSObservable behavior]
  -[AMSObservable setStateLock:]
  -[AMSObservable unsubscribe:]
  -[AMSObservable stateLock]
  -[AMSObservable sendCompletion]
  -[AMSObservable sendMessageQueue]
  -[AMSObservable cancel]
  -[AMSObservable initWithObservers:behavior:]
  -[AMSObservable unsubscribeAll]
  -[AMSObservable sendResult:]
  -[AMSObservable queuedResults]
  -[AMSObservable observers]
  -[AMSObservable isComplete]
  -[AMSObservable setLogKey:]
  -[AMSObservable setSendMessageQueue:]
  -[AMSObservable initWithNotification:object:]
  -[AMSObservable subscribe:]
  -[AMSObservable setFailureError:]


AMSObserver : NSObject
 @property  @? completionBlock
 @property  @? failureBlock
 @property  @? resultBlock

  // instance methods
  -[AMSObserver .cxx_destruct]
  -[AMSObserver setFailureBlock:]
  -[AMSObserver initWithResultBlock:completionBlock:failureBlock:]
  -[AMSObserver _sendResult:usingQueue:]
  -[AMSObserver resultBlock]
  -[AMSObserver _sendCompletionUsingQueue:]
  -[AMSObserver _sendFailure:usingQueue:]
  -[AMSObserver setResultBlock:]
  -[AMSObserver completionBlock]
  -[AMSObserver setCompletionBlock:]
  -[AMSObserver failureBlock]
  -[AMSObserver initWithResultBlock:]


AMSODIAdditionalAttributes : NSObject <NSCopying, NSSecureCoding>
 @property  NSDictionary *attributes

  // class methods
  +[AMSODIAdditionalAttributes supportsSecureCoding]

  // instance methods
  -[AMSODIAdditionalAttributes initWithCoder:]
  -[AMSODIAdditionalAttributes .cxx_destruct]
  -[AMSODIAdditionalAttributes setAttributes:]
  -[AMSODIAdditionalAttributes attributes]
  -[AMSODIAdditionalAttributes copyWithZone:]
  -[AMSODIAdditionalAttributes encodeWithCoder:]
  -[AMSODIAdditionalAttributes initWithAttributes:]


AMSODIAssessment : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *stringValue

  // class methods
  +[AMSODIAssessment supportsSecureCoding]

  // instance methods
  -[AMSODIAssessment stringValue]
  -[AMSODIAssessment initWithCoder:]
  -[AMSODIAssessment .cxx_destruct]
  -[AMSODIAssessment initWithStringValue:]
  -[AMSODIAssessment copyWithZone:]
  -[AMSODIAssessment encodeWithCoder:]


AMSODISession : NSObject
 @property  <AMSBagProtocol> *bag
 @property  NSLock *lock
 @property  unsigned long accountType
 @property  NSString *bundleIdentifier
 @property  NSString *cacheIdentifier
 @property  NSString *sessionIdentifier

  // class methods
  +[AMSODISession shouldUseODIWithBag:]
  +[AMSODISession provideFeedbackOnPayloadOutcome:cacheIdentifier:bag:]

  // instance methods
  -[AMSODISession accountType]
  -[AMSODISession bundleIdentifier]
  -[AMSODISession .cxx_destruct]
  -[AMSODISession setCacheIdentifier:]
  -[AMSODISession bag]
  -[AMSODISession sessionIdentifier]
  -[AMSODISession cacheIdentifier]
  -[AMSODISession getAssessment]
  -[AMSODISession initWithSessionIdentifier:accountType:bundleIdentifier:bag:]
  -[AMSODISession _createODISession]
  -[AMSODISession initWithSessionIdentifier:accountType:bag:]
  -[AMSODISession updateWithAttributes:]
  -[AMSODISession setLock:]
  -[AMSODISession setBag:]
  -[AMSODISession lock]


URLTarget : NSObject
 @property  NSString *bundleID
 @property  long long defaultIndex
 @property  NSString *normalScheme
 @property  NSString *secureScheme

  // class methods
  +[URLTarget targetWithBundle:scheme:secureScheme:]

  // instance methods
  -[URLTarget bundleID]
  -[URLTarget .cxx_destruct]
  -[URLTarget setSecureScheme:]
  -[URLTarget secureScheme]
  -[URLTarget setBundleID:]
  -[URLTarget setDefaultIndex:]
  -[URLTarget initWithBundle:scheme:secureScheme:]
  -[URLTarget setNormalScheme:]
  -[URLTarget defaultIndex]
  -[URLTarget normalScheme]


AMSOpenURL : NSObject
 @property  NSMutableSet *attemptedTargets
 @property  NSURL *URL
 @property  AMSProcessInfo *clientInfo
 @property  <AMSBagProtocol> *bag

  // class methods
  +[AMSOpenURL openStandardURL:]
  +[AMSOpenURL openURL:clientInfo:bag:]
  +[AMSOpenURL _openURL:inApp:]
  +[AMSOpenURL _openModeForStandardURL:inApp:withLinks:]
  +[AMSOpenURL _openURLWithLaunchServices:]
  +[AMSOpenURL _modifiedURLFromURL:bundleInfo:]
  +[AMSOpenURL _shouldOpenStandardURL:inApp:withLinks:]
  +[AMSOpenURL openURL:account:preferredClient:]

  // instance methods
  -[AMSOpenURL setClientInfo:]
  -[AMSOpenURL .cxx_destruct]
  -[AMSOpenURL bag]
  -[AMSOpenURL clientInfo]
  -[AMSOpenURL initWithURL:clientInfo:bag:]
  -[AMSOpenURL setAttemptedTargets:]
  -[AMSOpenURL _openURL:bundleInfo:]
  -[AMSOpenURL _shouldOpenURL:]
  -[AMSOpenURL attemptedTargets]
  -[AMSOpenURL URL]
  -[AMSOpenURL setBag:]
  -[AMSOpenURL _performOpen]


AMSOperation : NSOperation
 @property  AMSOperation *parentOperation
 @property  AMSBinaryPromise *promise
 @property  BOOL success
 @property  NSError *error

  // instance methods
  -[AMSOperation setSuccess:]
  -[AMSOperation unlock]
  -[AMSOperation success]
  -[AMSOperation main]
  -[AMSOperation .cxx_destruct]
  -[AMSOperation isCancelled]
  -[AMSOperation init]
  -[AMSOperation runSubOperation:onQueue:]
  -[AMSOperation setParentOperation:]
  -[AMSOperation runSubOperation:]
  -[AMSOperation parentOperation]
  -[AMSOperation cancel]
  -[AMSOperation lock]
  -[AMSOperation promise]
  -[AMSOperation run]
  -[AMSOperation setError:]
  -[AMSOperation error]


AMSOptional : NSObject
 @property  id value

  // class methods
  +[AMSOptional optionalWithNil]
  +[AMSOptional optionalWithValue:]

  // instance methods
  -[AMSOptional .cxx_destruct]
  -[AMSOptional init]
  -[AMSOptional initWithValue:]
  -[AMSOptional value]


AMSPACTokenTask : AMSTask
 @property  NSString *simLabelID
 @property  NSData *signingData

  // class methods
  +[AMSPACTokenTask tokenForSimLabelID:withQueue:signingData:]
  +[AMSPACTokenTask signatureForSimLabelID:fromSignatures:]
  +[AMSPACTokenTask signatureMapFromServerSignatures:]

  // instance methods
  -[AMSPACTokenTask .cxx_destruct]
  -[AMSPACTokenTask simLabelID]
  -[AMSPACTokenTask signingData]
  -[AMSPACTokenTask setSigningData:]
  -[AMSPACTokenTask perform]
  -[AMSPACTokenTask initWithSimLabelID:]


AMSPair : NSObject
 @property  id first
 @property  id second

  // instance methods
  -[AMSPair first]
  -[AMSPair second]
  -[AMSPair .cxx_destruct]
  -[AMSPair initWithFirst:second:]


AMSPaymentSetupFeatureVerification : NSObject
 @property  NSString *identifier

  // instance methods
  -[AMSPaymentSetupFeatureVerification initWithIdentifier:]
  -[AMSPaymentSetupFeatureVerification .cxx_destruct]
  -[AMSPaymentSetupFeatureVerification identifier]
  -[AMSPaymentSetupFeatureVerification performPaymentSetupFeatureLookup]
  -[AMSPaymentSetupFeatureVerification isPaymentSetupFeatureSupportedWithError:]
  -[AMSPaymentSetupFeatureVerification setIdentifier:]


AMSPaymentSheetMetricsEvent : AMSMetricsEvent
  // class methods
  +[AMSPaymentSheetMetricsEvent _timestamp]
  +[AMSPaymentSheetMetricsEvent dictionaryForBiometricMatchState:didBiometricsLockout:biometricsType:]
  +[AMSPaymentSheetMetricsEvent dictionaryForCancellationEvent:didBiometricsLockout:]
  +[AMSPaymentSheetMetricsEvent dictionaryForUserAction:didBiometricsLockout:]

  // instance methods
  -[AMSPaymentSheetMetricsEvent addBiometricsState:]
  -[AMSPaymentSheetMetricsEvent addUserActions:]
  -[AMSPaymentSheetMetricsEvent addBiometricMatchState:]
  -[AMSPaymentSheetMetricsEvent addClientMetadataForPaymentSheetRequest:]
  -[AMSPaymentSheetMetricsEvent addClientMetadataForPurchaseInfo:metricsDictionary:]
  -[AMSPaymentSheetMetricsEvent addDualActionSuccess:]


AMSPaymentSheetPriceSectionItem : NSObject
 @property  NSString *label
 @property  NSString *price

  // instance methods
  -[AMSPaymentSheetPriceSectionItem label]
  -[AMSPaymentSheetPriceSectionItem setPrice:]
  -[AMSPaymentSheetPriceSectionItem .cxx_destruct]
  -[AMSPaymentSheetPriceSectionItem price]
  -[AMSPaymentSheetPriceSectionItem setLabel:]


AMSPaymentSheetRatingImage : NSObject
 @property  NSString *localAssetName
 @property  long long ratingType
 @property  BOOL serverSupplied
 @property  BOOL tint
 @property  NSString *URLString
 @property  NSString *value

  // instance methods
  -[AMSPaymentSheetRatingImage .cxx_destruct]
  -[AMSPaymentSheetRatingImage URLString]
  -[AMSPaymentSheetRatingImage initWithURLString:]
  -[AMSPaymentSheetRatingImage ratingType]
  -[AMSPaymentSheetRatingImage _ratingTypeForType:]
  -[AMSPaymentSheetRatingImage isServerSupplied]
  -[AMSPaymentSheetRatingImage localAssetName]
  -[AMSPaymentSheetRatingImage value]
  -[AMSPaymentSheetRatingImage initWithDictionary:]
  -[AMSPaymentSheetRatingImage tint]


AMSPaymentSheetAssetCache : NSObject
  // instance methods
  -[AMSPaymentSheetAssetCache init]
  -[AMSPaymentSheetAssetCache retainAsset:]
  -[AMSPaymentSheetAssetCache dealloc]


AMSPaymentSheetRequest : NSObject
 @property  unsigned long ams_confirmationStyle
 @property  unsigned long ams_paymentRequestorType
 @property  BOOL isDelegateAuthentication
 @property  NSDictionary *responseDictionary
 @property  ACAccount *account
 @property  NSString *accountHeader
 @property  BOOL applePayClassic
 @property  NSArray *attributedList
 @property  AMSBiometricsSignatureRequest *biometricsRequest
 @property  long long confirmationTitle
 @property  NSString *currencyCode
 @property  NSString *countryCode
 @property  NSString *delegateAuthenticateChallenge
 @property  NSString *displayPrice
 @property  NSString *explanation
 @property  NSArray *flexList
 @property  NSArray *inlineImages
 @property  NSString *logKey
 @property  NSDictionary *merchantSession
 @property  NSString *message
 @property  long long payee
 @property  NSString *paymentSession
 @property  NSString *paymentSummary
 @property  NSArray *preSheetDialog
 @property  NSNumber *price
 @property  NSArray *priceSectionItems
 @property  NSString *ratingHeader
 @property  NSString *ratingValue
 @property  BOOL requiresAuthorization
 @property  BOOL requiresDelegateAuthentication
 @property  long long salableIcon
 @property  NSURL *salableIconURL
 @property  NSArray *salableInfo
 @property  NSAttributedString *salableInfoLabel
 @property  BOOL shouldUppercaseText
 @property  NSString *storeName
 @property  NSString *title
 @property  long long titleType
 @property  NSString *userAgent

  // class methods
  +[AMSPaymentSheetRequest attributedStringByRemovingPlaceholderTagsFromAttributedString:]

  // instance methods
  -[AMSPaymentSheetRequest requiresAuthorization]
  -[AMSPaymentSheetRequest setCountryCode:]
  -[AMSPaymentSheetRequest payee]
  -[AMSPaymentSheetRequest setUserAgent:]
  -[AMSPaymentSheetRequest setAccount:]
  -[AMSPaymentSheetRequest account]
  -[AMSPaymentSheetRequest responseDictionary]
  -[AMSPaymentSheetRequest explanation]
  -[AMSPaymentSheetRequest setTitle:]
  -[AMSPaymentSheetRequest logKey]
  -[AMSPaymentSheetRequest displayPrice]
  -[AMSPaymentSheetRequest countryCode]
  -[AMSPaymentSheetRequest ratingHeader]
  -[AMSPaymentSheetRequest setFlexList:]
  -[AMSPaymentSheetRequest setPrice:]
  -[AMSPaymentSheetRequest setPayee:]
  -[AMSPaymentSheetRequest paymentSummary]
  -[AMSPaymentSheetRequest ratingValue]
  -[AMSPaymentSheetRequest titleType]
  -[AMSPaymentSheetRequest accountHeader]
  -[AMSPaymentSheetRequest setRequiresAuthorization:]
  -[AMSPaymentSheetRequest .cxx_destruct]
  -[AMSPaymentSheetRequest setSalableIcon:]
  -[AMSPaymentSheetRequest setAccountHeader:]
  -[AMSPaymentSheetRequest setRatingValue:]
  -[AMSPaymentSheetRequest setShouldUppercaseText:]
  -[AMSPaymentSheetRequest setDisplayPrice:]
  -[AMSPaymentSheetRequest setIsDelegateAuthentication:]
  -[AMSPaymentSheetRequest shouldUppercaseText]
  -[AMSPaymentSheetRequest setPriceSectionItems:]
  -[AMSPaymentSheetRequest setSalableIconURL:]
  -[AMSPaymentSheetRequest setRatingHeader:]
  -[AMSPaymentSheetRequest setConfirmationTitle:]
  -[AMSPaymentSheetRequest setPaymentSummary:]
  -[AMSPaymentSheetRequest setPreSheetDialog:]
  -[AMSPaymentSheetRequest setSalableInfo:]
  -[AMSPaymentSheetRequest setSalableInfoLabel:]
  -[AMSPaymentSheetRequest setInlineImages:]
  -[AMSPaymentSheetRequest setAttributedList:]
  -[AMSPaymentSheetRequest setMessage:]
  -[AMSPaymentSheetRequest currencyCode]
  -[AMSPaymentSheetRequest setExplanation:]
  -[AMSPaymentSheetRequest userAgent]
  -[AMSPaymentSheetRequest flexList]
  -[AMSPaymentSheetRequest setApplePayClassic:]
  -[AMSPaymentSheetRequest setStoreName:]
  -[AMSPaymentSheetRequest init]
  -[AMSPaymentSheetRequest price]
  -[AMSPaymentSheetRequest setMerchantSession:]
  -[AMSPaymentSheetRequest paymentSession]
  -[AMSPaymentSheetRequest message]
  -[AMSPaymentSheetRequest salableInfoLabel]
  -[AMSPaymentSheetRequest title]
  -[AMSPaymentSheetRequest confirmationTitle]
  -[AMSPaymentSheetRequest priceSectionItems]
  -[AMSPaymentSheetRequest attributedList]
  -[AMSPaymentSheetRequest preSheetDialog]
  -[AMSPaymentSheetRequest salableIconURL]
  -[AMSPaymentSheetRequest _summaryItemsForAttributedList:assetCache:bag:]
  -[AMSPaymentSheetRequest _countImagePlaceholderTags:]
  -[AMSPaymentSheetRequest _contentItemsForFlexibleList:assetCache:bag:]
  -[AMSPaymentSheetRequest isDelegateAuthentication]
  -[AMSPaymentSheetRequest _createImageRefWithURL:adornmentStyle:bag:]
  -[AMSPaymentSheetRequest _createImageMaskRefWithSize:andPath:]
  -[AMSPaymentSheetRequest _createRatingImageWithStringValue:assetScale:]
  -[AMSPaymentSheetRequest _createImageForResourceName:outAssetScale:]
  -[AMSPaymentSheetRequest ams_createContentItemForAccount]
  -[AMSPaymentSheetRequest _replaceImagePlaceholderTagWithImageData:tag:data:scale:tint:]
  -[AMSPaymentSheetRequest _createImageRefForImageURL:outAssetScale:]
  -[AMSPaymentSheetRequest ams_createContentItemForDeviceName:]
  -[AMSPaymentSheetRequest _createImageRefForImageSource:screenScale:outAssetScale:]
  -[AMSPaymentSheetRequest _imageTypeForURL:]
  -[AMSPaymentSheetRequest _createBorderPathForAdornmentStyle:iconWidth:iconHeight:]
  -[AMSPaymentSheetRequest ams_confirmationStyle]
  -[AMSPaymentSheetRequest _createDefaultImageWithImageRef:size:borderPath:]
  -[AMSPaymentSheetRequest ams_createSummaryItems]
  -[AMSPaymentSheetRequest _createMaskedImageRefForImageRef:withPathRef:andAdornmentStyle:]
  -[AMSPaymentSheetRequest isApplePayClassic]
  -[AMSPaymentSheetRequest _createRGBImageRefForGreyScaleImageRef:width:height:]
  -[AMSPaymentSheetRequest ams_paymentRequestorType]
  -[AMSPaymentSheetRequest ams_createSummaryItemsForAttributedListWithAssetCache:bag:]
  -[AMSPaymentSheetRequest setTitleType:]
  -[AMSPaymentSheetRequest ams_createContentItemsForFlexibleListWithAssetCache:bag:]
  -[AMSPaymentSheetRequest ams_createContentItemsForPreScreenDialogWithAssetCache:bag:]
  -[AMSPaymentSheetRequest setPaymentSession:]
  -[AMSPaymentSheetRequest ams_createContentItemForRating]
  -[AMSPaymentSheetRequest delegateAuthenticateChallenge]
  -[AMSPaymentSheetRequest merchantSession]
  -[AMSPaymentSheetRequest ams_createContentItemForSalableInfoWithAssetCache:bag:]
  -[AMSPaymentSheetRequest requiresDelegateAuthentication]
  -[AMSPaymentSheetRequest setResponseDictionary:]
  -[AMSPaymentSheetRequest setBiometricsRequest:]
  -[AMSPaymentSheetRequest biometricsRequest]
  -[AMSPaymentSheetRequest setDelegateAuthenticateChallenge:]
  -[AMSPaymentSheetRequest setLogKey:]
  -[AMSPaymentSheetRequest salableInfo]
  -[AMSPaymentSheetRequest storeName]
  -[AMSPaymentSheetRequest salableIcon]
  -[AMSPaymentSheetRequest setCurrencyCode:]
  -[AMSPaymentSheetRequest inlineImages]


AMSPaymentSheetResult : NSObject
 @property  NSString *delegateAuthenticateToken
 @property  NSString *passwordEquivalentToken
 @property  NSString *paymentToken
 @property  AMSBiometricsSignatureResult *signatureResult

  // instance methods
  -[AMSPaymentSheetResult setPasswordEquivalentToken:]
  -[AMSPaymentSheetResult .cxx_destruct]
  -[AMSPaymentSheetResult delegateAuthenticateToken]
  -[AMSPaymentSheetResult passwordEquivalentToken]
  -[AMSPaymentSheetResult setPaymentToken:]
  -[AMSPaymentSheetResult setDelegateAuthenticateToken:]
  -[AMSPaymentSheetResult signatureResult]
  -[AMSPaymentSheetResult setSignatureResult:]
  -[AMSPaymentSheetResult paymentToken]


_PaymentSheetState : NSObject
 @property  NSError *error
 @property  BOOL didAuthorizePayment
 @property  BOOL didBiometricsLockout
 @property  unsigned long cancellationType
 @property  BOOL didPresent
 @property  NSString *passwordEquivalentToken
 @property  NSString *paymentToken
 @property  AMSBiometricsSignatureResult *signatureResult

  // instance methods
  -[_PaymentSheetState setPasswordEquivalentToken:]
  -[_PaymentSheetState didPresent]
  -[_PaymentSheetState .cxx_destruct]
  -[_PaymentSheetState passwordEquivalentToken]
  -[_PaymentSheetState init]
  -[_PaymentSheetState didBiometricsLockout]
  -[_PaymentSheetState setDidBiometricsLockout:]
  -[_PaymentSheetState setPaymentToken:]
  -[_PaymentSheetState setCancellationType:]
  -[_PaymentSheetState cancellationType]
  -[_PaymentSheetState setDidAuthorizePayment:]
  -[_PaymentSheetState didAuthorizePayment]
  -[_PaymentSheetState setDidPresent:]
  -[_PaymentSheetState signatureResult]
  -[_PaymentSheetState setSignatureResult:]
  -[_PaymentSheetState paymentToken]
  -[_PaymentSheetState setError:]
  -[_PaymentSheetState error]


AMSPaymentSheetTask : AMSTask <PKPaymentAuthorizationControllerDelegate, PKPaymentAuthorizationControllerPrivateDelegate>
 @property  AMSPaymentSheetAssetCache *assetCache
 @property  AKAppleIDAuthenticationContext *authenticationContext
 @property  PKPaymentAuthorizationController *paymentAuthorizationController
 @property  AMSPromise *paymentSheetPromise
 @property  AMSFinancePaymentSheetResponse *paymentSheetResponse
 @property  NSObject<OS_dispatch_queue> *presentationQueue
 @property  AMSPaymentSheetRequest *request
 @property  _PaymentSheetState *state
 @property  NSMutableArray *userActions
 @property  <AMSBagProtocol> *bag
 @property  NSDictionary *metricsDictionary
 @property  AMSPurchaseInfo *purchaseInfo
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSPaymentSheetTask _shouldCompanionAuthFallbackToPasswordForError:]

  // instance methods
  -[AMSPaymentSheetTask metricsDictionary]
  -[AMSPaymentSheetTask setMetricsDictionary:]
  -[AMSPaymentSheetTask .cxx_destruct]
  -[AMSPaymentSheetTask assetCache]
  -[AMSPaymentSheetTask setAuthenticationContext:]
  -[AMSPaymentSheetTask bag]
  -[AMSPaymentSheetTask setState:]
  -[AMSPaymentSheetTask userActions]
  -[AMSPaymentSheetTask _metricsEvent]
  -[AMSPaymentSheetTask request]
  -[AMSPaymentSheetTask paymentAuthorizationControllerDidFinish:]
  -[AMSPaymentSheetTask paymentAuthorizationController:didAuthorizePayment:handler:]
  -[AMSPaymentSheetTask setUserActions:]
  -[AMSPaymentSheetTask paymentAuthorizationController:didEncounterAuthorizationEvent:]
  -[AMSPaymentSheetTask paymentAuthorizationController:willFinishWithError:]
  -[AMSPaymentSheetTask setPurchaseInfo:]
  -[AMSPaymentSheetTask state]
  -[AMSPaymentSheetTask initWithRequest:bag:]
  -[AMSPaymentSheetTask setAssetCache:]
  -[AMSPaymentSheetTask cancel]
  -[AMSPaymentSheetTask perform]
  -[AMSPaymentSheetTask paymentAuthorizationController]
  -[AMSPaymentSheetTask _dismissPaymentAuthorizationController:]
  -[AMSPaymentSheetTask _presentCompanionAuthenticationSheetWithPaymentRequest:purchaseResult:error:]
  -[AMSPaymentSheetTask setPaymentAuthorizationController:]
  -[AMSPaymentSheetTask presentationQueue]
  -[AMSPaymentSheetTask _challengeSigningDelay]
  -[AMSPaymentSheetTask paymentSheetResponse]
  -[AMSPaymentSheetTask setPresentationQueue:]
  -[AMSPaymentSheetTask _paymentRequest]
  -[AMSPaymentSheetTask setPaymentSheetPromise:]
  -[AMSPaymentSheetTask _presentPaymentSheetWithPaymentRequest:error:]
  -[AMSPaymentSheetTask paymentSheetPromise]
  -[AMSPaymentSheetTask purchaseInfo]
  -[AMSPaymentSheetTask setBag:]
  -[AMSPaymentSheetTask authenticationContext]


AMSPhoneNumberContextInfo : NSObject
 @property  BOOL isVoicePreferred
 @property  NSString *phoneNumber
 @property  NSString *simLabel
 @property  NSUUID *uuid

  // instance methods
  -[AMSPhoneNumberContextInfo .cxx_destruct]
  -[AMSPhoneNumberContextInfo simLabel]
  -[AMSPhoneNumberContextInfo phoneNumber]
  -[AMSPhoneNumberContextInfo isVoicePreferred]
  -[AMSPhoneNumberContextInfo uuid]
  -[AMSPhoneNumberContextInfo initWithPhoneNumber:simLabel:uuid:isVoicePreferred:]


AMSPrivacyAcknowledgementMigrator : NSObject
  // class methods
  +[AMSPrivacyAcknowledgementMigrator migratePrivacyAcknowledgementsWithOptions:]


AMSProcessInfo : NSObject <NSCopying, NSSecureCoding>
 @property  BOOL accountsDaemon
 @property  AMSMappedBundleInfo *mappedBundleInfo
 @property  NSString *accountMediaType
 @property  NSData *auditTokenData
 @property  NSString *bundleIdentifier
 @property  NSURL *bundleURL
 @property  NSString *clientVersion
 @property  NSString *executableName
 @property  NSString *localizedName
 @property  NSString *partnerHeader
 @property  NSString *proxyAppBundleID
 @property  NSString *treatmentNamespace
 @property  NSString *userAgentSuffix

  // class methods
  +[AMSProcessInfo defaultMediaTypeAccessQueue]
  +[AMSProcessInfo _bundleRecordForIdentifier:]
  +[AMSProcessInfo _bundleForIdentifier:record:]
  +[AMSProcessInfo supportsSecureCoding]
  +[AMSProcessInfo _cacheProcessInfo:]
  +[AMSProcessInfo _currentProcessBundleIdentifier]
  +[AMSProcessInfo setDefaultMediaTypeForCurrentProcess:]
  +[AMSProcessInfo valueForEntitlement:]
  +[AMSProcessInfo copyPropertiesFrom:to:]
  +[AMSProcessInfo currentProcess]
  +[AMSProcessInfo _cachedProcessInfoForIdentifier:]
  +[AMSProcessInfo isBuddyRunning]
  +[AMSProcessInfo boolForMachLookupAccess:]
  +[AMSProcessInfo boolForEntitlement:]
  +[AMSProcessInfo defaultMediaTypeForCurrentProcess]
  +[AMSProcessInfo _accessProcessInfoCache:]
  +[AMSProcessInfo stringForEntitlement:]
  +[AMSProcessInfo hasAMSEntitlement]

  // instance methods
  -[AMSProcessInfo setAuditTokenData:]
  -[AMSProcessInfo localizedName]
  -[AMSProcessInfo auditTokenData]
  -[AMSProcessInfo clientVersion]
  -[AMSProcessInfo isAccountsDaemon]
  -[AMSProcessInfo initWithCoder:]
  -[AMSProcessInfo setLocalizedName:]
  -[AMSProcessInfo bundleIdentifier]
  -[AMSProcessInfo partnerHeader]
  -[AMSProcessInfo generateConfiguration]
  -[AMSProcessInfo .cxx_destruct]
  -[AMSProcessInfo setUserAgentSuffix:]
  -[AMSProcessInfo setExecutableName:]
  -[AMSProcessInfo setBundleIdentifier:]
  -[AMSProcessInfo setProxyAppBundleID:]
  -[AMSProcessInfo bundleURL]
  -[AMSProcessInfo init]
  -[AMSProcessInfo isEqual:]
  -[AMSProcessInfo generateConfigurationFromBag:]
  -[AMSProcessInfo setPartnerHeader:]
  -[AMSProcessInfo initWithBundleIdentifier:]
  -[AMSProcessInfo setAccountMediaType:]
  -[AMSProcessInfo mappedBundleInfo]
  -[AMSProcessInfo executableName]
  -[AMSProcessInfo generateConfigurationFromBagContract:]
  -[AMSProcessInfo setClientVersion:]
  -[AMSProcessInfo setBundleURL:]
  -[AMSProcessInfo copyWithZone:]
  -[AMSProcessInfo userAgentSuffix]
  -[AMSProcessInfo accountMediaType]
  -[AMSProcessInfo setTreatmentNamespace:]
  -[AMSProcessInfo treatmentNamespace]
  -[AMSProcessInfo proxyAppBundleID]
  -[AMSProcessInfo encodeWithCoder:]


AMSPromise : NSObject
 @property  AMSPromiseCompletionBlocks *completionBlocks
 @property  AMSPromiseResult *promiseResult
 @property  NSConditionLock *stateLock
 @property  {Promise<PromiseResult>=^^?{shared_ptr<AMSCore::Future<PromiseResult>::FutureImp>=^{FutureImp}^{__shared_weak_count}}} backingPromise
 @property  BOOL cancelled
 @property  BOOL finished
 @property  BOOL timedOut

  // class methods
  +[AMSPromise _enumeratePromises:startingAt:block:]
  +[AMSPromise _globalPromiseStorage]
  +[AMSPromise _configureFlattenedPromise:withPromises:results:previousError:currentPromiseIndex:]
  +[AMSPromise promiseWithResult:]
  +[AMSPromise promiseWithAll:timeout:]
  +[AMSPromise promiseWithError:]
  +[AMSPromise promiseWithPromiseResult:]
  +[AMSPromise _errorIsTimeOutError:]
  +[AMSPromise promiseWithAny:]
  +[AMSPromise promiseWithFlattenedPromises:]
  +[AMSPromise promiseFinishedWithDefaultErrorOrResult:]
  +[AMSPromise _errorIsCanceledError:]
  +[AMSPromise promiseWithAll:]
  +[AMSPromise _globalPromiseStorageAccessQueue]
  +[AMSPromise promiseWithAny:timeout:]

  // instance methods
  -[AMSPromise resultWithError:]
  -[AMSPromise completionBlocks]
  -[AMSPromise addSuccessBlock:]
  -[AMSPromise waitUntilFinishedWithTimeout:]
  -[AMSPromise thenWithBlock:]
  -[AMSPromise errorOnlyCompletionHandlerAdapter]
  -[AMSPromise completionHandlerAdapter]
  -[AMSPromise isTimedOut]
  -[AMSPromise waitUntilFinished]
  -[AMSPromise isFinished]
  -[AMSPromise finishWithResult:error:]
  -[AMSPromise _isFinished]
  -[AMSPromise setCompletionBlocks:]
  -[AMSPromise finishWithResult:]
  -[AMSPromise resultWithTimeout:error:]
  -[AMSPromise catchWithBlock:]
  -[AMSPromise .cxx_construct]
  -[AMSPromise promiseResult]
  -[AMSPromise .cxx_destruct]
  -[AMSPromise nilValueCompletionHandlerAdapter]
  -[AMSPromise initWithTimeout:]
  -[AMSPromise isCancelled]
  -[AMSPromise backingPromise]
  -[AMSPromise binaryPromiseAdapter]
  -[AMSPromise resultBeforeDate:error:]
  -[AMSPromise init]
  -[AMSPromise boolCompletionHandlerAdapter]
  -[AMSPromise setStateLock:]
  -[AMSPromise setPromiseResult:]
  -[AMSPromise promiseWithTimeout:]
  -[AMSPromise stateLock]
  -[AMSPromise finishWithPromiseResult:]
  -[AMSPromise mutablePromiseAdapter]
  -[AMSPromise cancel]
  -[AMSPromise setBackingPromise:]
  -[AMSPromise addErrorBlock:]
  -[AMSPromise continueWithBlock:]
  -[AMSPromise finishWithPromise:]
  -[AMSPromise _addBlock:orCallWithResult:]
  -[AMSPromise addFinishBlock:]
  -[AMSPromise finishWithError:]


AMSPromiseCompletionBlocks : NSObject
  // instance methods
  -[AMSPromiseCompletionBlocks addSuccessBlock:]
  -[AMSPromiseCompletionBlocks callErrorBlock:withPromiseResult:]
  -[AMSPromiseCompletionBlocks addCompletionBlock:]
  -[AMSPromiseCompletionBlocks .cxx_destruct]
  -[AMSPromiseCompletionBlocks init]
  -[AMSPromiseCompletionBlocks callSuccessBlock:withPromiseResult:]
  -[AMSPromiseCompletionBlocks flushCompletionBlocksWithPromiseResult:]
  -[AMSPromiseCompletionBlocks addErrorBlock:]
  -[AMSPromiseCompletionBlocks callCompletionBlock:withPromiseResult:]


AMSPromiseResult : NSObject
 @property  NSError *error
 @property  id result

  // instance methods
  -[AMSPromiseResult .cxx_destruct]
  -[AMSPromiseResult result]
  -[AMSPromiseResult setResult:]
  -[AMSPromiseResult initWithResult:error:]
  -[AMSPromiseResult setError:]
  -[AMSPromiseResult error]


AMSPurchaseBatch : NSObject
 @property  BOOL isComplete
 @property  NSLock *lock
 @property  AMSLazyPromise *promise
 @property  NSMutableArray *purchases
 @property  NSMutableDictionary *purchaseMap
 @property  NSMutableArray *results

  // instance methods
  -[AMSPurchaseBatch results]
  -[AMSPurchaseBatch .cxx_destruct]
  -[AMSPurchaseBatch purchases]
  -[AMSPurchaseBatch setLock:]
  -[AMSPurchaseBatch purchaseMap]
  -[AMSPurchaseBatch nextPurchase]
  -[AMSPurchaseBatch initWithPurchases:weakPromise:]
  -[AMSPurchaseBatch purchaseForPurchaseId:]
  -[AMSPurchaseBatch finishPurchase:withError:]
  -[AMSPurchaseBatch finishPurchase:withResult:]
  -[AMSPurchaseBatch isComplete]
  -[AMSPurchaseBatch setIsComplete:]
  -[AMSPurchaseBatch lock]
  -[AMSPurchaseBatch promise]


AMSPurchase : NSObject <NSCopying, NSSecureCoding>
 @property  ACAccount *account
 @property  NSDictionary *additionalHeaders
 @property  AMSBuyParams *buyParams
 @property  NSString *clientCorrelationKey
 @property  AMSProcessInfo *clientInfo
 @property  BOOL ignoreRequirePasswordRestriction
 @property  NSString *logUUID
 @property  NSNumber *ownerAccountId
 @property  NSDictionary *metricsOverlay
 @property  long long purchaseType
 @property  BOOL redownload
 @property  BOOL requiresAccount
 @property  NSString *storefront
 @property  NSNumber *uniqueIdentifier
 @property  BOOL userInitiated
 @property  BOOL useJSONContentType
 @property  NSNumber *accountId
 @property  NSString *callerBundleId
 @property  NSString *clientId

  // class methods
  +[AMSPurchase supportsSecureCoding]
  +[AMSPurchase defaultAuthenticationContextForRequest:]

  // instance methods
  -[AMSPurchase setUserInitiated:]
  -[AMSPurchase setAccount:]
  -[AMSPurchase _generateIdentifier]
  -[AMSPurchase uniqueIdentifier]
  -[AMSPurchase initWithCoder:]
  -[AMSPurchase account]
  -[AMSPurchase buyParams]
  -[AMSPurchase setLogUUID:]
  -[AMSPurchase setClientInfo:]
  -[AMSPurchase .cxx_destruct]
  -[AMSPurchase logUUID]
  -[AMSPurchase clientInfo]
  -[AMSPurchase setAccountId:]
  -[AMSPurchase clientId]
  -[AMSPurchase metricsOverlay]
  -[AMSPurchase setMetricsOverlay:]
  -[AMSPurchase purchaseType]
  -[AMSPurchase additionalHeaders]
  -[AMSPurchase callerBundleId]
  -[AMSPurchase ignoreRequirePasswordRestriction]
  -[AMSPurchase ownerAccountId]
  -[AMSPurchase requiresAccount]
  -[AMSPurchase useJSONContentType]
  -[AMSPurchase initWithPurchaseType:buyParams:]
  -[AMSPurchase setOwnerAccountId:]
  -[AMSPurchase setAdditionalHeaders:]
  -[AMSPurchase setIgnoreRequirePasswordRestriction:]
  -[AMSPurchase setRequiresAccount:]
  -[AMSPurchase setUseJSONContentType:]
  -[AMSPurchase setCallerBundleId:]
  -[AMSPurchase clientCorrelationKey]
  -[AMSPurchase setStorefront:]
  -[AMSPurchase authenticationContextForRequest:]
  -[AMSPurchase copyWithZone:]
  -[AMSPurchase isRedownload]
  -[AMSPurchase setClientId:]
  -[AMSPurchase encodeWithCoder:]
  -[AMSPurchase accountId]
  -[AMSPurchase isUserInitiated]
  -[AMSPurchase storefront]


AMSPurchaseBagConsumer : NSObject <AMSBagConsumer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSPurchaseBagConsumer bagKeySet]
  +[AMSPurchaseBagConsumer bagSubProfileVersion]
  +[AMSPurchaseBagConsumer bagSubProfile]
  +[AMSPurchaseBagConsumer createBagForSubProfile]


AMSPurchaseInfo : NSObject
 @property  ACAccount *account
 @property  AMSPurchaseTask *activePurchaseTask
 @property  NSMutableDictionary *additionalHeaders
 @property  BOOL addKBSync
 @property  AMSBuyParams *buyParams
 @property  NSString *clientCorrelationKey
 @property  AMSProcessInfo *clientInfo
 @property  <AMSPurchaseDelegate> *delegate
 @property  NSDictionary *dialog
 @property  NSString *dialogId
 @property  BOOL hasBeenAuthedForBuy
 @property  BOOL hasRetriedOriginalOwnerAccount
 @property  NSDictionary *idmsTokens
 @property  LAContext *localAuthContext
 @property  NSURL *paymentServicesURL
 @property  NSString *paymentToken
 @property  AMSPurchase *purchase

  // instance methods
  -[AMSPurchaseInfo dialogId]
  -[AMSPurchaseInfo setAccount:]
  -[AMSPurchaseInfo account]
  -[AMSPurchaseInfo dialog]
  -[AMSPurchaseInfo paymentServicesURL]
  -[AMSPurchaseInfo buyParams]
  -[AMSPurchaseInfo activePurchaseTask]
  -[AMSPurchaseInfo .cxx_destruct]
  -[AMSPurchaseInfo clientInfo]
  -[AMSPurchaseInfo setDelegate:]
  -[AMSPurchaseInfo purchase]
  -[AMSPurchaseInfo localAuthContext]
  -[AMSPurchaseInfo addKBSync]
  -[AMSPurchaseInfo setPaymentToken:]
  -[AMSPurchaseInfo idmsTokens]
  -[AMSPurchaseInfo setIdmsTokens:]
  -[AMSPurchaseInfo setLocalAuthContext:]
  -[AMSPurchaseInfo setDialog:]
  -[AMSPurchaseInfo setAddKBSync:]
  -[AMSPurchaseInfo additionalHeaders]
  -[AMSPurchaseInfo setAdditionalHeaders:]
  -[AMSPurchaseInfo delegate]
  -[AMSPurchaseInfo initWithPurchase:]
  -[AMSPurchaseInfo _purchaseStringForType:]
  -[AMSPurchaseInfo setActivePurchaseTask:]
  -[AMSPurchaseInfo setBuyParams:]
  -[AMSPurchaseInfo hasBeenAuthedForBuy]
  -[AMSPurchaseInfo setHasBeenAuthedForBuy:]
  -[AMSPurchaseInfo setPaymentServicesURL:]
  -[AMSPurchaseInfo hasRetriedOriginalOwnerAccount]
  -[AMSPurchaseInfo setHasRetriedOriginalOwnerAccount:]
  -[AMSPurchaseInfo clientCorrelationKey]
  -[AMSPurchaseInfo setDialogId:]
  -[AMSPurchaseInfo paymentToken]


AMSPurchaseProtocolHandler : AMSURLProtocolHandler <NSURLSessionDelegate, AMSURLProtocolDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSPurchaseProtocolHandler reversePushSamplingPercentageForTask:]

  // instance methods
  -[AMSPurchaseProtocolHandler AMSURLSession:task:handleDialogRequest:completion:]
  -[AMSPurchaseProtocolHandler handleCompletionWithTask:metrics:decodedObject:]
  -[AMSPurchaseProtocolHandler AMSURLSession:task:handleAuthenticateRequest:completion:]
  -[AMSPurchaseProtocolHandler AMSURLSession:task:handleEngagementRequest:completion:]
  -[AMSPurchaseProtocolHandler _updateSubscriptionStatusFromBody:account:]
  -[AMSPurchaseProtocolHandler setSession:]
  -[AMSPurchaseProtocolHandler _updatePasswordSettingWithBuyParams:account:]
  -[AMSPurchaseProtocolHandler _syncDiversityBagFromResponse:purchaseInfo:]
  -[AMSPurchaseProtocolHandler reconfigureNewRequest:originalTask:redirect:error:]
  -[AMSPurchaseProtocolHandler _shouldRetryForFailureAction:response:task:decodedObject:responseDictionary:]
  -[AMSPurchaseProtocolHandler _syncKeybagFromResponse:purchaseInfo:]
  -[AMSPurchaseProtocolHandler _determineUpdatedBuyParamsFromResponse:urlAction:selectedAction:purchaseInfo:]


AMSPurchaseQueue : NSObject <AMSPurchaseDelegate, AMSBagConsumer>
 @property  NSMutableArray *batches
 @property  AMSPurchaseQueueConfiguration *config
 @property  NSMutableSet *preAuthenticatedDSIDs
 @property  NSObject<OS_dispatch_queue> *dispatchQueue
 @property  BOOL isSuspeneded
 @property  NSLock *lock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSPurchaseQueue bagKeySet]
  +[AMSPurchaseQueue bagSubProfileVersion]
  +[AMSPurchaseQueue bagSubProfile]
  +[AMSPurchaseQueue createBagForSubProfile]

  // instance methods
  -[AMSPurchaseQueue batches]
  -[AMSPurchaseQueue .cxx_destruct]
  -[AMSPurchaseQueue config]
  -[AMSPurchaseQueue setBatches:]
  -[AMSPurchaseQueue dispatchQueue]
  -[AMSPurchaseQueue initWithConfiguration:]
  -[AMSPurchaseQueue setLock:]
  -[AMSPurchaseQueue _handleNextPurchase]
  -[AMSPurchaseQueue setIsSuspeneded:]
  -[AMSPurchaseQueue isSuspeneded]
  -[AMSPurchaseQueue _processPurchase:]
  -[AMSPurchaseQueue purchase:handleDialogRequest:completion:]
  -[AMSPurchaseQueue purchase:handleAuthenticateRequest:completion:]
  -[AMSPurchaseQueue purchase:handleEngagementRequest:completion:]
  -[AMSPurchaseQueue preAuthenticatedDSIDs]
  -[AMSPurchaseQueue _performPreauthenticateForPurchaseTask:]
  -[AMSPurchaseQueue setPreAuthenticatedDSIDs:]
  -[AMSPurchaseQueue enquePurchases:]
  -[AMSPurchaseQueue setSuspended:logUUID:]
  -[AMSPurchaseQueue lock]
  -[AMSPurchaseQueue setConfig:]
  -[AMSPurchaseQueue setDispatchQueue:]


AMSPurchaseQueueConfiguration : NSObject
 @property  <AMSBagProtocol> *bag
 @property  <AMSPurchaseResponseProtocol> *delegate

  // instance methods
  -[AMSPurchaseQueueConfiguration .cxx_destruct]
  -[AMSPurchaseQueueConfiguration bag]
  -[AMSPurchaseQueueConfiguration initWithBag:]
  -[AMSPurchaseQueueConfiguration setDelegate:]
  -[AMSPurchaseQueueConfiguration delegate]


AMSPurchaseRequestEncoder : AMSURLRequestEncoder
 @property  AMSPurchaseInfo *purchaseInfo
 @property  NSObject<OS_dispatch_queue> *purchaseRequestQueue

  // class methods
  +[AMSPurchaseRequestEncoder configureRequest:purchaseInfo:bag:error:]
  +[AMSPurchaseRequestEncoder _anisetteTypeFromAccount:]
  +[AMSPurchaseRequestEncoder _parametersFromPurchaseInfo:error:]

  // instance methods
  -[AMSPurchaseRequestEncoder _bagURLKeysForPurchaseType:prefix:]
  -[AMSPurchaseRequestEncoder initWithPurchaseInfo:bag:]
  -[AMSPurchaseRequestEncoder _bagURLWithError:]
  -[AMSPurchaseRequestEncoder .cxx_destruct]
  -[AMSPurchaseRequestEncoder bag]
  -[AMSPurchaseRequestEncoder encodeRequest]
  -[AMSPurchaseRequestEncoder purchaseRequestQueue]
  -[AMSPurchaseRequestEncoder initWithPurchaseInfo:]
  -[AMSPurchaseRequestEncoder _bagURLKeys]
  -[AMSPurchaseRequestEncoder _buyProductURLKeysForProductType:prefix:]
  -[AMSPurchaseRequestEncoder setPurchaseRequestQueue:]
  -[AMSPurchaseRequestEncoder purchaseInfo]
  -[AMSPurchaseRequestEncoder setBag:]


AMSPurchaseResult : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *correlationID
 @property  NSError *error
 @property  AMSPurchase *purchase
 @property  NSDictionary *responseDictionary

  // class methods
  +[AMSPurchaseResult supportsSecureCoding]

  // instance methods
  -[AMSPurchaseResult initWithCoder:]
  -[AMSPurchaseResult responseDictionary]
  -[AMSPurchaseResult .cxx_destruct]
  -[AMSPurchaseResult purchase]
  -[AMSPurchaseResult isEqual:]
  -[AMSPurchaseResult setResponseDictionary:]
  -[AMSPurchaseResult correlationID]
  -[AMSPurchaseResult isEqualToPurchaseResult:]
  -[AMSPurchaseResult setCorrelationID:]
  -[AMSPurchaseResult copyWithZone:]
  -[AMSPurchaseResult setPurchase:]
  -[AMSPurchaseResult setError:]
  -[AMSPurchaseResult encodeWithCoder:]
  -[AMSPurchaseResult error]


AMSPurchaseSIWA : AMSPurchase <NSCopying, NSSecureCoding>
 @property  AKAppleIDAuthenticationContext *authenticationContext
 @property  NSString *bundleID
 @property  NSString *serviceID
 @property  NSString *teamID

  // class methods
  +[AMSPurchaseSIWA supportsSecureCoding]

  // instance methods
  -[AMSPurchaseSIWA teamID]
  -[AMSPurchaseSIWA bundleID]
  -[AMSPurchaseSIWA initWithCoder:]
  -[AMSPurchaseSIWA appProvidedData]
  -[AMSPurchaseSIWA .cxx_destruct]
  -[AMSPurchaseSIWA setServiceID:]
  -[AMSPurchaseSIWA setAuthenticationContext:]
  -[AMSPurchaseSIWA serviceID]
  -[AMSPurchaseSIWA setBundleID:]
  -[AMSPurchaseSIWA initWithPurchaseType:buyParams:]
  -[AMSPurchaseSIWA authenticationContextForRequest:]
  -[AMSPurchaseSIWA copyWithZone:]
  -[AMSPurchaseSIWA authenticationContext]
  -[AMSPurchaseSIWA encodeWithCoder:]
  -[AMSPurchaseSIWA setTeamID:]


AMSPurchaseSIWAAuthorizationResult : NSObject <NSCopying, NSSecureCoding>
 @property  AKAuthorization *authorization
 @property  NSError *error
 @property  <AKCredential> *authorizationCredential

  // class methods
  +[AMSPurchaseSIWAAuthorizationResult supportsSecureCoding]

  // instance methods
  -[AMSPurchaseSIWAAuthorizationResult setAuthorization:]
  -[AMSPurchaseSIWAAuthorizationResult initWithCoder:]
  -[AMSPurchaseSIWAAuthorizationResult .cxx_destruct]
  -[AMSPurchaseSIWAAuthorizationResult isEqual:]
  -[AMSPurchaseSIWAAuthorizationResult authorization]
  -[AMSPurchaseSIWAAuthorizationResult isEqualToPurchaseSIWAAuthorizationResult:]
  -[AMSPurchaseSIWAAuthorizationResult initWithAuthorization:error:]
  -[AMSPurchaseSIWAAuthorizationResult authorizationCredential]
  -[AMSPurchaseSIWAAuthorizationResult copyWithZone:]
  -[AMSPurchaseSIWAAuthorizationResult setError:]
  -[AMSPurchaseSIWAAuthorizationResult encodeWithCoder:]
  -[AMSPurchaseSIWAAuthorizationResult error]


AMSPurchaseSIWAResult : NSObject <NSCopying, NSSecureCoding>
 @property  AMSPurchaseResult *purchaseResult
 @property  AMSPurchaseSIWAAuthorizationResult *authorizationResult

  // class methods
  +[AMSPurchaseSIWAResult supportsSecureCoding]

  // instance methods
  -[AMSPurchaseSIWAResult initWithCoder:]
  -[AMSPurchaseSIWAResult .cxx_destruct]
  -[AMSPurchaseSIWAResult isEqual:]
  -[AMSPurchaseSIWAResult purchaseResult]
  -[AMSPurchaseSIWAResult authorizationResult]
  -[AMSPurchaseSIWAResult isEqualToPurchaseSIWAResult:]
  -[AMSPurchaseSIWAResult initWithPurchaseResult:authorizationResult:]
  -[AMSPurchaseSIWAResult copyWithZone:]
  -[AMSPurchaseSIWAResult encodeWithCoder:]


AMSPurchaseSIWATask : AMSPurchaseTask
 @property  AMSPurchaseSIWA *purchaseSIWA
 @property  AKCredentialRequestContext *requestContext
 @property  NSUUID *continuationRequestIdentifier
 @property  NSError *siwaError
 @property  BOOL purchaseRequiresAuthorization
 @property  AKAuthorization *authorization

  // instance methods
  -[AMSPurchaseSIWATask setAuthorization:]
  -[AMSPurchaseSIWATask performPreActionRequestForTaskInfo:requiresAuthorization:error:]
  -[AMSPurchaseSIWATask .cxx_destruct]
  -[AMSPurchaseSIWATask authorization]
  -[AMSPurchaseSIWATask siwaError]
  -[AMSPurchaseSIWATask requestContext]
  -[AMSPurchaseSIWATask setRequestContext:]
  -[AMSPurchaseSIWATask _cancelAuthorization]
  -[AMSPurchaseSIWATask purchaseSIWA]
  -[AMSPurchaseSIWATask _willRequireAskToBuyForTaskInfo:]
  -[AMSPurchaseSIWATask setSiwaError:]
  -[AMSPurchaseSIWATask _beginAuthorization]
  -[AMSPurchaseSIWATask setPurchaseSIWA:]
  -[AMSPurchaseSIWATask _beginAuthorizationWasPerformed]
  -[AMSPurchaseSIWATask setPurchaseRequiresAuthorization:]
  -[AMSPurchaseSIWATask _siwaDidCommence]
  -[AMSPurchaseSIWATask performPreauthenticate]
  -[AMSPurchaseSIWATask preauthenticateOptions]
  -[AMSPurchaseSIWATask purchaseRequiresAuthorization]
  -[AMSPurchaseSIWATask _continueAuthorization]
  -[AMSPurchaseSIWATask newAuthorizationController]
  -[AMSPurchaseSIWATask setContinuationRequestIdentifier:]
  -[AMSPurchaseSIWATask _updateRequestContextWithPurchaseInfo:]
  -[AMSPurchaseSIWATask continuationRequestIdentifier]
  -[AMSPurchaseSIWATask initWithPurchaseSIWA:bag:]
  -[AMSPurchaseSIWATask performPurchaseSIWA]


AMSPurchaseTask : AMSTask <NSURLSessionDelegate, AMSURLProtocolDelegate, AMSAuthenticateTaskDelegate, AMSBagConsumer>
 @property  <AMSBagProtocol> *bag
 @property  AMSPurchaseInfo *purchaseInfo
 @property  AMSURLSession *session
 @property  <AMSPurchaseDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSPurchaseTask bagKeySet]
  +[AMSPurchaseTask bagSubProfileVersion]
  +[AMSPurchaseTask bagSubProfile]
  +[AMSPurchaseTask shouldPreauthenticatePurchaseWithInfo:]
  +[AMSPurchaseTask createBagForSubProfile]

  // instance methods
  -[AMSPurchaseTask performPreActionRequestForTaskInfo:requiresAuthorization:error:]
  -[AMSPurchaseTask .cxx_destruct]
  -[AMSPurchaseTask bag]
  -[AMSPurchaseTask _runDialogRequest:]
  -[AMSPurchaseTask authenticateTask:handleDialogRequest:completion:]
  -[AMSPurchaseTask setDelegate:]
  -[AMSPurchaseTask setPurchaseInfo:]
  -[AMSPurchaseTask _promptForAccount]
  -[AMSPurchaseTask delegate]
  -[AMSPurchaseTask initWithPurchase:bag:]
  -[AMSPurchaseTask performPurchase]
  -[AMSPurchaseTask performPreauthenticate]
  -[AMSPurchaseTask preauthenticateOptions]
  -[AMSPurchaseTask purchaseInfo]
  -[AMSPurchaseTask _regenerateFDSWithInfo:bag:action:]
  -[AMSPurchaseTask generateFDSWithInfo:bag:]
  -[AMSPurchaseTask _shouldAttemptCardEnrollment]
  -[AMSPurchaseTask _performPurchaseWithError:]
  -[AMSPurchaseTask _recordEngagementEventWithInfo:result:error:]
  -[AMSPurchaseTask _runAuthenticateRequest:]
  -[AMSPurchaseTask setBag:]
  -[AMSPurchaseTask session]


AMSPushConfiguration : NSObject
 @property  <AMSPushHandlerDelegate> *delegate
 @property  NSString *userNotificationExtensionId
 @property  NSSet *enabledActionTypes

  // instance methods
  -[AMSPushConfiguration .cxx_destruct]
  -[AMSPushConfiguration enabledActionTypes]
  -[AMSPushConfiguration setDelegate:]
  -[AMSPushConfiguration setUserNotificationExtensionId:]
  -[AMSPushConfiguration delegate]
  -[AMSPushConfiguration initWithEnabledActionTypes:]
  -[AMSPushConfiguration userNotificationExtensionId]
  -[AMSPushConfiguration setEnabledActionTypes:]


AMSPushHandler : NSObject
 @property  NSDictionary *enabledParsables
 @property  <AMSPushHandlerContract> *bagContract
 @property  <AMSBagProtocol> *bag
 @property  <AMSPushHandlerDelegate> *delegate
 @property  AMSPushConfiguration *configuration

  // instance methods
  -[AMSPushHandler bagContract]
  -[AMSPushHandler configuration]
  -[AMSPushHandler shouldHandleNotification:]
  -[AMSPushHandler .cxx_destruct]
  -[AMSPushHandler handleNotification:]
  -[AMSPushHandler bag]
  -[AMSPushHandler enabledParsables]
  -[AMSPushHandler setDelegate:]
  -[AMSPushHandler initWithConfiguration:bag:]
  -[AMSPushHandler delegate]
  -[AMSPushHandler initWithConfiguration:bagContract:]


AMSPushNotificationService : NSObject
  // class methods
  +[AMSPushNotificationService registerTokensIfNeeded]


AMSPushParsableBadging : NSObject <AMSPushParsable>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSPushParsableBadging shouldSkipAccountCheck]
  +[AMSPushParsableBadging handleNotificationPayload:config:bag:]


AMSPushParsableEngagementEvent : NSObject <AMSPushParsable>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSPushParsableEngagementEvent shouldSkipAccountCheck]
  +[AMSPushParsableEngagementEvent handleNotificationPayload:config:bag:]


AMSPushParsableFollowUp : NSObject <AMSPushParsable, AMSUserNotificationIntentDelegate, AMSBagConsumer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSPushParsableFollowUp bagSubProfileVersion]
  +[AMSPushParsableFollowUp bagSubProfile]
  +[AMSPushParsableFollowUp shouldSkipAccountCheck]
  +[AMSPushParsableFollowUp handleNotificationPayload:config:bag:]
  +[AMSPushParsableFollowUp isDeviceOfferNotification:]
  +[AMSPushParsableFollowUp removeDeviceOfferWithPayload:logKey:bag:]
  +[AMSPushParsableFollowUp _shouldAllowFollowUp:bag:]
  +[AMSPushParsableFollowUp _shouldClearFollowUpFromPayload:]
  +[AMSPushParsableFollowUp _performClearWithPayload:]
  +[AMSPushParsableFollowUp _performPostWithPayload:bag:]
  +[AMSPushParsableFollowUp _createFollowUpItemFromNotification:]
  +[AMSPushParsableFollowUp _createFollowUpItemFromPayload:]
  +[AMSPushParsableFollowUp sharedISO8601DateFormatter]
  +[AMSPushParsableFollowUp userNotification:selectedButtonAction:bag:]
  +[AMSPushParsableFollowUp _createNotificationFromFollowUpItem:]
  +[AMSPushParsableFollowUp createBagForSubProfile]


AMSPushParsableGenericNotification : NSObject <AMSPushParsable>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSPushParsableGenericNotification handleNotificationPayload:config:bag:]
  +[AMSPushParsableGenericNotification _shouldPresentAlertForPayload:]
  +[AMSPushParsableGenericNotification _generateDialogRequestFromPayload:config:]
  +[AMSPushParsableGenericNotification _generateNotificationFromPayload:config:]


AMSPushParsableRichNotification : NSObject <AMSPushParsable, AMSUserNotificationIntentDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSPushParsableRichNotification shouldSkipAccountCheck]
  +[AMSPushParsableRichNotification handleNotificationPayload:config:bag:]
  +[AMSPushParsableRichNotification userNotification:selectedButtonAction:bag:]


AMSPushPayload : NSObject
 @property  ACAccount *account
 @property  NSNumber *accountIdentifier
 @property  NSString *actionType
 @property  long long alertType
 @property  NSDictionary *aps
 @property  NSString *clientIdentifier
 @property  NSString *logKey
 @property  NSDictionary *payload
 @property  long long priority
 @property  NSString *URLString

  // class methods
  +[AMSPushPayload actionTypeFromPayload:]

  // instance methods
  -[AMSPushPayload alertType]
  -[AMSPushPayload aps]
  -[AMSPushPayload account]
  -[AMSPushPayload payload]
  -[AMSPushPayload logKey]
  -[AMSPushPayload objectForKeyedSubscript:]
  -[AMSPushPayload .cxx_destruct]
  -[AMSPushPayload URLString]
  -[AMSPushPayload actionType]
  -[AMSPushPayload clientIdentifier]
  -[AMSPushPayload accountIdentifier]
  -[AMSPushPayload priority]
  -[AMSPushPayload initWithPayload:]


AMSQRCodeDialogTask : AMSSystemAlertDialogTask
  // instance methods
  -[AMSQRCodeDialogTask _createNoteDictionaryWithKeys:buttonActions:outOptions:]


AMSRatingsCache : NSObject
 @property  unsigned long mediaType
 @property  NSString *storeFront

  // instance methods
  -[AMSRatingsCache storeFront]
  -[AMSRatingsCache .cxx_destruct]
  -[AMSRatingsCache initWithMediaType:]
  -[AMSRatingsCache cachePath]
  -[AMSRatingsCache cacheTitle]
  -[AMSRatingsCache mediaType]
  -[AMSRatingsCache clearCacheIfNeeded]
  -[AMSRatingsCache addCacheData:]
  -[AMSRatingsCache _hasCachedData]
  -[AMSRatingsCache initWithMediaType:storeFront:]
  -[AMSRatingsCache cacheDirectory]
  -[AMSRatingsCache getCacheData]


AMSRatingsProviderResult : NSObject
 @property  NSArray *ratingsStoreFronts

  // instance methods
  -[AMSRatingsProviderResult .cxx_destruct]
  -[AMSRatingsProviderResult ratingsStoreFronts]
  -[AMSRatingsProviderResult initWithDictionaries:mediaType:andStoreFront:]
  -[AMSRatingsProviderResult _mapRatingsDictionaries:withMediaType:andStoreFront:]
  -[AMSRatingsProviderResult _ratingInfoMediaTypeForTaskMediaType:]
  -[AMSRatingsProviderResult initWithURLResult:mediaType:andStoreFront:]
  -[AMSRatingsProviderResult initWithData:mediaType:andStoreFront:]


AMSRatingsProviderTask : AMSTask <AMSBagConsumer>
 @property  unsigned long mediaType
 @property  NSString *storeFront
 @property  <AMSBagProtocol> *bag
 @property  NSString *clientIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSRatingsProviderTask bagKeySet]
  +[AMSRatingsProviderTask bagSubProfileVersion]
  +[AMSRatingsProviderTask bagSubProfile]
  +[AMSRatingsProviderTask ratingWithValue:mediaType:storeFront:clientIdentifier:bag:]
  +[AMSRatingsProviderTask createBagForSubProfile]

  // instance methods
  -[AMSRatingsProviderTask storeFront]
  -[AMSRatingsProviderTask .cxx_destruct]
  -[AMSRatingsProviderTask performTask]
  -[AMSRatingsProviderTask bag]
  -[AMSRatingsProviderTask clientIdentifier]
  -[AMSRatingsProviderTask mediaType]
  -[AMSRatingsProviderTask _urlForMediaType:]
  -[AMSRatingsProviderTask resultWithCachedData:]
  -[AMSRatingsProviderTask _commonQueryItems]
  -[AMSRatingsProviderTask initWithMediaType:storeFront:clientIdentifier:bag:]
  -[AMSRatingsProviderTask _appQueryItems]
  -[AMSRatingsProviderTask initWithMediaType:clientIdentifier:bag:]


AMSRatingsStoreFront : NSObject
 @property  NSString *defaultLanguage
 @property  unsigned long mediaType
 @property  NSString *name
 @property  NSArray *ratingSystems
 @property  NSString *storeFront
 @property  NSString *storeFrontID
 @property  NSArray *supportedLanguages

  // class methods
  +[AMSRatingsStoreFront storeFrontWithDictionary:mediaType:andStoreFront:]
  +[AMSRatingsStoreFront storeFrontWithDictionary:mediaType:]

  // instance methods
  -[AMSRatingsStoreFront storeFront]
  -[AMSRatingsStoreFront name]
  -[AMSRatingsStoreFront .cxx_destruct]
  -[AMSRatingsStoreFront defaultLanguage]
  -[AMSRatingsStoreFront supportedLanguages]
  -[AMSRatingsStoreFront mediaType]
  -[AMSRatingsStoreFront ratingSystems]
  -[AMSRatingsStoreFront storeFrontID]
  -[AMSRatingsStoreFront initWithDictionary:mediaType:andStoreFront:]
  -[AMSRatingsStoreFront initWithDictionary:mediaType:]


AMSRatingsStorefrontResult : NSObject
 @property  NSArray *ratingsStoreFronts

  // instance methods
  -[AMSRatingsStorefrontResult .cxx_destruct]
  -[AMSRatingsStorefrontResult ratingsStoreFronts]
  -[AMSRatingsStorefrontResult _ratingInfoMediaTypeForTaskMediaType:]
  -[AMSRatingsStorefrontResult initWithDictionaries:mediaType:]
  -[AMSRatingsStorefrontResult _mapRatingsDictionaries:withMediaType:]
  -[AMSRatingsStorefrontResult initWithURLResult:mediaType:]
  -[AMSRatingsStorefrontResult initWithData:mediaType:]


AMSRatingsStorefrontTask : AMSTask <AMSBagConsumer>
 @property  unsigned long mediaType
 @property  <AMSBagProtocol> *bag
 @property  NSString *clientIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSRatingsStorefrontTask bagKeySet]
  +[AMSRatingsStorefrontTask bagSubProfileVersion]
  +[AMSRatingsStorefrontTask bagSubProfile]
  +[AMSRatingsStorefrontTask createBagForSubProfile]

  // instance methods
  -[AMSRatingsStorefrontTask .cxx_destruct]
  -[AMSRatingsStorefrontTask performTask]
  -[AMSRatingsStorefrontTask bag]
  -[AMSRatingsStorefrontTask clientIdentifier]
  -[AMSRatingsStorefrontTask mediaType]
  -[AMSRatingsStorefrontTask _urlForMediaType:]
  -[AMSRatingsStorefrontTask initWithMediaType:clientIdentifier:bag:]


AMSRatingSystem : NSObject
 @property  NSString *kind
 @property  NSString *label
 @property  NSArray *contentRatings
 @property  NSString *ratingSystemID
 @property  NSArray *types

  // class methods
  +[AMSRatingSystem ratingSystemWithDictionary:]

  // instance methods
  -[AMSRatingSystem label]
  -[AMSRatingSystem types]
  -[AMSRatingSystem .cxx_destruct]
  -[AMSRatingSystem initWithDictionary:]
  -[AMSRatingSystem kind]
  -[AMSRatingSystem contentRatings]
  -[AMSRatingSystem ratingSystemID]


AMSRemoteNotification : NSObject
  // class methods
  +[AMSRemoteNotification shouldHandleNotification:]
  +[AMSRemoteNotification handleNotification:]
  +[AMSRemoteNotification _sharedPushHandler]


AMSRenewAccountCredentialsFollowUpItem : AMSFollowUpItem
  // class methods
  +[AMSRenewAccountCredentialsFollowUpItem clear]

  // instance methods
  -[AMSRenewAccountCredentialsFollowUpItem backingIdentifier]
  -[AMSRenewAccountCredentialsFollowUpItem initWithAccount:bag:]


AMSRestrictions : NSObject
  // class methods
  +[AMSRestrictions allowActiveAccountModifications]
  +[AMSRestrictions requirePasswordImmediately]
  +[AMSRestrictions eroticaAllowed]
  +[AMSRestrictions maximumMediaRank]
  +[AMSRestrictions _featureNameForMediaType:]
  +[AMSRestrictions allowAccountModifications]
  +[AMSRestrictions explicitContentAllowed]
  +[AMSRestrictions inAppPurchaseAllowed]
  +[AMSRestrictions isParentalControlEnabled]
  +[AMSRestrictions onDeviceDiagnosticsAllowed]
  +[AMSRestrictions rankForMediaType:]


AMSSandboxAccountMigrator : NSObject
  // class methods
  +[AMSSandboxAccountMigrator migrateSandboxAccountsWithOptions:]


AMSServerDataCacheMigrator : NSObject
  // class methods
  +[AMSServerDataCacheMigrator migrateDataCacheWithOptions:]


AMSServerDataCacheService : NSObject
 @property  NSXPCConnection *connection
 @property  NSObject<OS_dispatch_queue> *queue

  // class methods
  +[AMSServerDataCacheService _serverDataCacheFeatureEnabled]

  // instance methods
  -[AMSServerDataCacheService proxyWithErrorHandler:]
  -[AMSServerDataCacheService .cxx_destruct]
  -[AMSServerDataCacheService setConnection:]
  -[AMSServerDataCacheService init]
  -[AMSServerDataCacheService _newRemoteConnection]
  -[AMSServerDataCacheService setQueue:]
  -[AMSServerDataCacheService connection]
  -[AMSServerDataCacheService queue]
  -[AMSServerDataCacheService dealloc]
  -[AMSServerDataCacheService setUpCacheForAccountDSID:]
  -[AMSServerDataCacheService setUpCacheForAccount:]
  -[AMSServerDataCacheService tearDownCacheForAccountDSID:]
  -[AMSServerDataCacheService granularNotificationSettingsForAccountDSID:bundleID:networkPolicy:]
  -[AMSServerDataCacheService dataForAccountDSID:cacheTypeID:networkPolicy:]
  -[AMSServerDataCacheService updateCacheForAccountDSID:withCachePayload:]
  -[AMSServerDataCacheService updateCacheForAccountDSID:withCacheTypeIDs:]
  -[AMSServerDataCacheService _removeRemoteConnection]
  -[AMSServerDataCacheService _makeRemoteConnectionInterface]


AMSSetDemoAccountTask : AMSTask
 @property  AMSProcessInfo *clientInfo
 @property  NSString *password
 @property  NSString *username

  // instance methods
  -[AMSSetDemoAccountTask password]
  -[AMSSetDemoAccountTask setClientInfo:]
  -[AMSSetDemoAccountTask .cxx_destruct]
  -[AMSSetDemoAccountTask performTask]
  -[AMSSetDemoAccountTask clientInfo]
  -[AMSSetDemoAccountTask username]
  -[AMSSetDemoAccountTask initWithUsername:password:]
  -[AMSSetDemoAccountTask setUsername:]
  -[AMSSetDemoAccountTask setPassword:]


AMSSetItem : NSObject
 @property  id object
 @property  NSString *hashKey

  // class methods
  +[AMSSetItem setItemWithObject:hashKey:]

  // instance methods
  -[AMSSetItem hashKey]
  -[AMSSetItem .cxx_destruct]
  -[AMSSetItem isEqual:]
  -[AMSSetItem object]
  -[AMSSetItem initWithObject:hashKey:]


AMSSharedStoreReview : NSObject <AMSBagConsumer>
 @property  NSObject<OS_dispatch_queue> *sharedStoreReviewQueue
 @property  <AMSBagProtocol> *bag
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSSharedStoreReview bagKeySet]
  +[AMSSharedStoreReview bagSubProfileVersion]
  +[AMSSharedStoreReview bagSubProfile]
  +[AMSSharedStoreReview _storeReviewMetrics]
  +[AMSSharedStoreReview _applicationDidForegroundWithCurrentTime:storeReviewMetrics:sessionInterval:]
  +[AMSSharedStoreReview _logDidAttemptPromptReviewWithStoreReviewMetrics:currentTime:]
  +[AMSSharedStoreReview _shouldPromptReviewForStoreReviewMetrics:sessionCount:]
  +[AMSSharedStoreReview _persistStoreReviewMetrics:]
  +[AMSSharedStoreReview _shouldLogNewSessionWithLastLoggedTimeStamp:currentTime:sessionInterval:]
  +[AMSSharedStoreReview _logNewSessionWithStoreReviewMetrics:currentTime:]
  +[AMSSharedStoreReview createBagForSubProfile]

  // instance methods
  -[AMSSharedStoreReview .cxx_destruct]
  -[AMSSharedStoreReview bag]
  -[AMSSharedStoreReview initWithBag:]
  -[AMSSharedStoreReview isEnabled]
  -[AMSSharedStoreReview sharedStoreReviewQueue]
  -[AMSSharedStoreReview isReviewEnabled]
  -[AMSSharedStoreReview shouldAttemptReview]
  -[AMSSharedStoreReview setBag:]
  -[AMSSharedStoreReview applicationDidForeground]
  -[AMSSharedStoreReview didAttemptPromptReview]
  -[AMSSharedStoreReview shouldAttemptPromptReview]


AMSSignInContext : NSObject <AMSHashable>
 @property  BOOL canMakeAccountActive
 @property  NSString *debugReason
 @property  BOOL ignoreAccountConversion
 @property  BOOL skipAuthentication
 @property  NSString *hashedDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSSignInContext .cxx_destruct]
  -[AMSSignInContext debugReason]
  -[AMSSignInContext canMakeAccountActive]
  -[AMSSignInContext ignoreAccountConversion]
  -[AMSSignInContext setCanMakeAccountActive:]
  -[AMSSignInContext setDebugReason:]
  -[AMSSignInContext setIgnoreAccountConversion:]
  -[AMSSignInContext init]
  -[AMSSignInContext skipAuthentication]
  -[AMSSignInContext setSkipAuthentication:]
  -[AMSSignInContext hashedDescription]


AMSSigningSecurityService : NSObject
 @property  <AMSDServiceBrokerProtocol> *serviceBroker

  // instance methods
  -[AMSSigningSecurityService signatureForRequest:]
  -[AMSSigningSecurityService .cxx_destruct]
  -[AMSSigningSecurityService init]
  -[AMSSigningSecurityService _headersForRequest:buyParams:bag:securityServicePromise:onDenied:]
  -[AMSSigningSecurityService serviceBroker]
  -[AMSSigningSecurityService _handleSecurityServicePromise:onConnected:onDenied:onError:]
  -[AMSSigningSecurityService headersForRequest:buyParams:bag:]
  -[AMSSigningSecurityService initWithServiceBroker:]
  -[AMSSigningSecurityService handleResponse:bag:]
  -[AMSSigningSecurityService _defaultSecurityServiceWithDelegate:]
  -[AMSSigningSecurityService _handleResponse:bag:securityServicePromise:onDenied:]


AMSSignOutTask : AMSTask
 @property  NSArray *accounts

  // class methods
  +[AMSSignOutTask _signOutOfAccount:]

  // instance methods
  -[AMSSignOutTask accounts]
  -[AMSSignOutTask .cxx_destruct]
  -[AMSSignOutTask performTask]
  -[AMSSignOutTask setAccounts:]
  -[AMSSignOutTask initWithAccounts:]


AMSSimulatedCrash : NSObject
  // class methods
  +[AMSSimulatedCrash throwSimulatedCrashWithFormat:]


AMSSnapshotBag : NSObject <NSSecureCoding, AMSBagProtocol>
 @property  AMSBagFrozenDataSource *dataSource
 @property  {optional<AMSCore::Bag>=(?=c{Bag=^^?{shared_ptr<AMSCore::IBagDataSource>=^{IBagDataSource}^{__shared_weak_count}}})B} underlyingBag
 @property  NSDate *creationDate
 @property  BOOL expired
 @property  NSDate *expirationDate
 @property  NSString *profile
 @property  NSString *profileVersion
 @property  AMSProcessInfo *processInfo
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSSnapshotBag supportsSecureCoding]

  // instance methods
  -[AMSSnapshotBag _initWithDataSource:]
  -[AMSSnapshotBag compile]
  -[AMSSnapshotBag setUnderlyingBag:]
  -[AMSSnapshotBag initWithCoder:]
  -[AMSSnapshotBag setDataSource:]
  -[AMSSnapshotBag .cxx_construct]
  -[AMSSnapshotBag .cxx_destruct]
  -[AMSSnapshotBag isExpired]
  -[AMSSnapshotBag boolForKey:]
  -[AMSSnapshotBag URLForKey:account:]
  -[AMSSnapshotBag initWithBag:]
  -[AMSSnapshotBag isLoaded]
  -[AMSSnapshotBag integerForKey:]
  -[AMSSnapshotBag underlyingBag]
  -[AMSSnapshotBag dataSource]
  -[AMSSnapshotBag init]
  -[AMSSnapshotBag profileVersion]
  -[AMSSnapshotBag stringForKey:]
  -[AMSSnapshotBag arrayForKey:]
  -[AMSSnapshotBag URLForKey:]
  -[AMSSnapshotBag profile]
  -[AMSSnapshotBag initWithData:]
  -[AMSSnapshotBag doubleForKey:]
  -[AMSSnapshotBag creationDate]
  -[AMSSnapshotBag createSnapshotWithCompletion:]
  -[AMSSnapshotBag _initWithSnapshotBag:]
  -[AMSSnapshotBag expirationDate]
  -[AMSSnapshotBag encodeWithCoder:]
  -[AMSSnapshotBag dictionaryForKey:]


AMSSnapshotBagBuilder : NSObject
 @property  NSDictionary *data
 @property  NSDictionary *defaultValues
 @property  NSDate *expirationDate
 @property  AMSProcessInfo *processInfo
 @property  NSString *profile
 @property  NSString *profileVersion

  // instance methods
  -[AMSSnapshotBagBuilder processInfo]
  -[AMSSnapshotBagBuilder setProfile:]
  -[AMSSnapshotBagBuilder .cxx_destruct]
  -[AMSSnapshotBagBuilder data]
  -[AMSSnapshotBagBuilder setExpirationDate:]
  -[AMSSnapshotBagBuilder buildWithError:]
  -[AMSSnapshotBagBuilder setProcessInfo:]
  -[AMSSnapshotBagBuilder setDefaultValues:]
  -[AMSSnapshotBagBuilder profileVersion]
  -[AMSSnapshotBagBuilder defaultValues]
  -[AMSSnapshotBagBuilder profile]
  -[AMSSnapshotBagBuilder setData:]
  -[AMSSnapshotBagBuilder expirationDate]
  -[AMSSnapshotBagBuilder setProfileVersion:]


AMSSQLiteConnection : NSObject
 @property  NSError *currentError
 @property  AMSSQLiteConnectionOptions *options
 @property  <AMSSQLiteConnectionDelegate> *delegate
 @property  long long lastChangeCount

  // instance methods
  -[AMSSQLiteConnection finalizePreparedStatement:error:]
  -[AMSSQLiteConnection _prepareStatement:error:]
  -[AMSSQLiteConnection performTransaction:]
  -[AMSSQLiteConnection _performResetAfterCorruptionError]
  -[AMSSQLiteConnection _executeWithError:usingBlock:]
  -[AMSSQLiteConnection _verifiedStatementForSQL:error:]
  -[AMSSQLiteConnection options]
  -[AMSSQLiteConnection _close]
  -[AMSSQLiteConnection truncate]
  -[AMSSQLiteConnection .cxx_destruct]
  -[AMSSQLiteConnection initWithOptions:]
  -[AMSSQLiteConnection _statementForPreparedStatement:error:]
  -[AMSSQLiteConnection _openAndAllowRetry:]
  -[AMSSQLiteConnection setDelegate:]
  -[AMSSQLiteConnection _finalizeAllStatements]
  -[AMSSQLiteConnection _flushAfterTransactionBlocks]
  -[AMSSQLiteConnection executePreparedStatement:error:bindings:]
  -[AMSSQLiteConnection executePreparedStatement:error:]
  -[AMSSQLiteConnection _verifiedStatementForPreparedStatement:error:]
  -[AMSSQLiteConnection executeStatement:error:bindings:]
  -[AMSSQLiteConnection lastChangeCount]
  -[AMSSQLiteConnection executeWithError:usingBlock:]
  -[AMSSQLiteConnection currentError]
  -[AMSSQLiteConnection executeStatement:error:]
  -[AMSSQLiteConnection _open]
  -[AMSSQLiteConnection _resetAfterIOError]
  -[AMSSQLiteConnection delegate]
  -[AMSSQLiteConnection executeQuery:withResults:]
  -[AMSSQLiteConnection executePreparedQuery:withResults:]
  -[AMSSQLiteConnection close]
  -[AMSSQLiteConnection dealloc]
  -[AMSSQLiteConnection _executeStatement:error:]
  -[AMSSQLiteConnection open]
  -[AMSSQLiteConnection dispatchAfterTransaction:]
  -[AMSSQLiteConnection prepareStatement:error:]
  -[AMSSQLiteConnection _resetAfterCorruptionError]


AMSSQLiteConnectionOptions : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *databasePath
 @property  long long cacheSize
 @property  NSString *protectionType
 @property  BOOL readOnly

  // class methods
  +[AMSSQLiteConnectionOptions supportsSecureCoding]

  // instance methods
  -[AMSSQLiteConnectionOptions cacheSize]
  -[AMSSQLiteConnectionOptions setCacheSize:]
  -[AMSSQLiteConnectionOptions databasePath]
  -[AMSSQLiteConnectionOptions initWithCoder:]
  -[AMSSQLiteConnectionOptions .cxx_destruct]
  -[AMSSQLiteConnectionOptions setReadOnly:]
  -[AMSSQLiteConnectionOptions protectionType]
  -[AMSSQLiteConnectionOptions setDatabasePath:]
  -[AMSSQLiteConnectionOptions isReadOnly]
  -[AMSSQLiteConnectionOptions setProtectionType:]
  -[AMSSQLiteConnectionOptions initWithDatabasePath:]
  -[AMSSQLiteConnectionOptions copyWithZone:]
  -[AMSSQLiteConnectionOptions setCacheSizeWithNumberOfKilobytes:]
  -[AMSSQLiteConnectionOptions applyToDatabase:]
  -[AMSSQLiteConnectionOptions setCacheSizeWithNumberOfDatabasePages:]
  -[AMSSQLiteConnectionOptions encodeWithCoder:]


AMSSQLiteCursor : NSObject
 @property  long long numberOfColumns

  // instance methods
  -[AMSSQLiteCursor dataForColumnName:]
  -[AMSSQLiteCursor intForColumnIndex:]
  -[AMSSQLiteCursor intForColumnName:]
  -[AMSSQLiteCursor initWithStatement:]
  -[AMSSQLiteCursor int64ForColumnIndex:]
  -[AMSSQLiteCursor stringForColumnIndex:]
  -[AMSSQLiteCursor numberForColumnIndex:]
  -[AMSSQLiteCursor doubleForColumnIndex:]
  -[AMSSQLiteCursor stringForColumnName:]
  -[AMSSQLiteCursor numberOfColumns]
  -[AMSSQLiteCursor doubleForColumnName:]
  -[AMSSQLiteCursor numberForColumnName:]
  -[AMSSQLiteCursor dataForColumnIndex:]
  -[AMSSQLiteCursor dateForColumnIndex:]
  -[AMSSQLiteCursor dateForColumnName:]
  -[AMSSQLiteCursor URLForColumnIndex:]
  -[AMSSQLiteCursor .cxx_destruct]
  -[AMSSQLiteCursor int64ForColumnName:]
  -[AMSSQLiteCursor _columnTypeForColumnIndex:]
  -[AMSSQLiteCursor columnIndexForColumnName:]
  -[AMSSQLiteCursor URLForColumnName:]


AMSSQLiteEntity : NSObject <AMSSQLiteEntity>
 @property  AMSSQLiteConnection *connection
 @property  long long persistentID
 @property  BOOL existsInDatabase
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSSQLiteEntity databaseTable]
  +[AMSSQLiteEntity memoryEntityClass]
  +[AMSSQLiteEntity disambiguatedSQLForProperty:]
  +[AMSSQLiteEntity _insertValues:intoTable:withPersistentID:onConnection:]
  +[AMSSQLiteEntity joinClauseForProperty:]
  +[AMSSQLiteEntity foreignDatabaseTablesToDelete]
  +[AMSSQLiteEntity foreignKeyColumnForTable:]
  +[AMSSQLiteEntity foreignDatabaseTableForProperty:]
  +[AMSSQLiteEntity foreignDatabaseColumnForProperty:]
  +[AMSSQLiteEntity queryOnConnection:predicate:]
  +[AMSSQLiteEntity _aggregateValueForProperty:function:predicate:onConnection:]
  +[AMSSQLiteEntity queryOnConnection:predicate:orderingProperties:]
  +[AMSSQLiteEntity anyOnConnection:predicate:]
  +[AMSSQLiteEntity countForProperty:predicate:onConnection:]
  +[AMSSQLiteEntity maxValueForProperty:predicate:onConnection:]
  +[AMSSQLiteEntity minValueForProperty:predicate:onConnection:]

  // instance methods
  -[AMSSQLiteEntity objectForKeyedSubscript:]
  -[AMSSQLiteEntity valueForProperty:]
  -[AMSSQLiteEntity setValue:forProperty:]
  -[AMSSQLiteEntity .cxx_destruct]
  -[AMSSQLiteEntity persistentID]
  -[AMSSQLiteEntity setObject:forKeyedSubscript:]
  -[AMSSQLiteEntity connection]
  -[AMSSQLiteEntity _copyTableClusteredValuesWithValues:]
  -[AMSSQLiteEntity initWithPersistentID:onConnection:]
  -[AMSSQLiteEntity _deleteRowFromTable:usingColumn:]
  -[AMSSQLiteEntity setValuesWithDictionary:]
  -[AMSSQLiteEntity getValuesForProperties:]
  -[AMSSQLiteEntity deleteFromDatabase]
  -[AMSSQLiteEntity initWithPropertyValues:onConnection:]
  -[AMSSQLiteEntity existsInDatabase]


AMSSQLiteMemoryEntity : NSObject <NSCopying>
 @property  long long databaseID
 @property  NSDictionary *propertyValues
 @property  NSDictionary *externalPropertyValues

  // class methods
  +[AMSSQLiteMemoryEntity databaseEntityClass]
  +[AMSSQLiteMemoryEntity defaultProperties]
  +[AMSSQLiteMemoryEntity queryOnConnection:predicate:]
  +[AMSSQLiteMemoryEntity queryOnConnection:predicate:orderingProperties:]
  +[AMSSQLiteMemoryEntity anyOnConnection:predicate:]

  // instance methods
  -[AMSSQLiteMemoryEntity valueForProperty:]
  -[AMSSQLiteMemoryEntity setValue:forProperty:]
  -[AMSSQLiteMemoryEntity .cxx_destruct]
  -[AMSSQLiteMemoryEntity init]
  -[AMSSQLiteMemoryEntity isEqual:]
  -[AMSSQLiteMemoryEntity databaseID]
  -[AMSSQLiteMemoryEntity copyWithZone:]
  -[AMSSQLiteMemoryEntity propertyValues]
  -[AMSSQLiteMemoryEntity setValuesWithDictionary:]
  -[AMSSQLiteMemoryEntity setDatabaseID:]
  -[AMSSQLiteMemoryEntity reloadFromDatabaseEntity:properties:]
  -[AMSSQLiteMemoryEntity setValues:forProperties:count:]
  -[AMSSQLiteMemoryEntity setValues:forExternalProperties:count:]
  -[AMSSQLiteMemoryEntity externalPropertyValues]
  -[AMSSQLiteMemoryEntity initWithDatabaseEntity:properties:]
  -[AMSSQLiteMemoryEntity setExternalValuesWithDictionary:]
  -[AMSSQLiteMemoryEntity setValue:forExternalProperty:]
  -[AMSSQLiteMemoryEntity valueForExternalProperty:]


AMSSQLitePredicate : NSObject <NSCopying>
  // instance methods
  -[AMSSQLitePredicate SQLForEntityClass:]
  -[AMSSQLitePredicate SQLJoinClausesForEntityClass:]
  -[AMSSQLitePredicate isEqual:]
  -[AMSSQLitePredicate copyWithZone:]
  -[AMSSQLitePredicate applyBinding:atIndex:]


AMSSQLitePropertyPredicate : AMSSQLitePredicate <NSCopying>
 @property  NSString *property

  // instance methods
  -[AMSSQLitePropertyPredicate property]
  -[AMSSQLitePropertyPredicate .cxx_destruct]
  -[AMSSQLitePropertyPredicate SQLJoinClausesForEntityClass:]
  -[AMSSQLitePropertyPredicate isEqual:]
  -[AMSSQLitePropertyPredicate copyWithZone:]


AMSSQLiteComparisonPredicate : AMSSQLitePropertyPredicate <NSCopying>
 @property  long long comparisonType
 @property  id value

  // class methods
  +[AMSSQLiteComparisonPredicate predicateWithProperty:equalToLongLong:]
  +[AMSSQLiteComparisonPredicate predicateWithProperty:value:comparisonType:]
  +[AMSSQLiteComparisonPredicate predicateWithProperty:equalToValue:]

  // instance methods
  -[AMSSQLiteComparisonPredicate _comparisonTypeString]
  -[AMSSQLiteComparisonPredicate SQLForEntityClass:]
  -[AMSSQLiteComparisonPredicate .cxx_destruct]
  -[AMSSQLiteComparisonPredicate isEqual:]
  -[AMSSQLiteComparisonPredicate value]
  -[AMSSQLiteComparisonPredicate copyWithZone:]
  -[AMSSQLiteComparisonPredicate applyBinding:atIndex:]
  -[AMSSQLiteComparisonPredicate comparisonType]


AMSSQLiteContainsPredicate : AMSSQLitePropertyPredicate <NSCopying>
 @property  BOOL negative
 @property  AMSSQLiteQuery *query
 @property  NSString *queryProperty
 @property  NSArray *values

  // class methods
  +[AMSSQLiteContainsPredicate containsPredicateWithProperty:query:queryProperty:]
  +[AMSSQLiteContainsPredicate doesNotContainPredicateWithProperty:values:]
  +[AMSSQLiteContainsPredicate containsPredicateWithProperty:values:]

  // instance methods
  -[AMSSQLiteContainsPredicate values]
  -[AMSSQLiteContainsPredicate SQLForEntityClass:]
  -[AMSSQLiteContainsPredicate query]
  -[AMSSQLiteContainsPredicate .cxx_destruct]
  -[AMSSQLiteContainsPredicate isEqual:]
  -[AMSSQLiteContainsPredicate isNegative]
  -[AMSSQLiteContainsPredicate queryProperty]
  -[AMSSQLiteContainsPredicate copyWithZone:]
  -[AMSSQLiteContainsPredicate applyBinding:atIndex:]


AMSSQLiteNullPredicate : AMSSQLitePropertyPredicate <NSCopying>
 @property  BOOL matchesNull

  // class methods
  +[AMSSQLiteNullPredicate isNotNullPredicateWithProperty:]
  +[AMSSQLiteNullPredicate isNullPredicateWithProperty:]

  // instance methods
  -[AMSSQLiteNullPredicate matchesNull]
  -[AMSSQLiteNullPredicate SQLForEntityClass:]
  -[AMSSQLiteNullPredicate isEqual:]
  -[AMSSQLiteNullPredicate copyWithZone:]


AMSSQLiteCompoundPredicate : AMSSQLitePredicate <NSCopying>
 @property  NSArray *predicates

  // class methods
  +[AMSSQLiteCompoundPredicate predicateMatchingAllPredicates:]
  +[AMSSQLiteCompoundPredicate predicateWithProperty:values:comparisonType:]
  +[AMSSQLiteCompoundPredicate predicateMatchingAnyPredicates:]

  // instance methods
  -[AMSSQLiteCompoundPredicate predicates]
  -[AMSSQLiteCompoundPredicate SQLForEntityClass:]
  -[AMSSQLiteCompoundPredicate .cxx_destruct]
  -[AMSSQLiteCompoundPredicate SQLJoinClausesForEntityClass:]
  -[AMSSQLiteCompoundPredicate isEqual:]
  -[AMSSQLiteCompoundPredicate copyWithZone:]
  -[AMSSQLiteCompoundPredicate applyBinding:atIndex:]


AMSSQLitePreparedStatement : NSObject
 @property  r^v connectionPointer
 @property  NSString *SQL

  // instance methods
  -[AMSSQLitePreparedStatement SQL]
  -[AMSSQLitePreparedStatement .cxx_destruct]
  -[AMSSQLitePreparedStatement connectionPointer]
  -[AMSSQLitePreparedStatement initWithConnection:SQL:]


AMSSQLiteQuery : NSObject
 @property  AMSSQLiteConnection *connection
 @property  AMSSQLiteQueryDescriptor *queryDescriptor
 @property  long long countOfEntities

  // instance methods
  -[AMSSQLiteQuery enumeratePersistentIDsUsingBlock:]
  -[AMSSQLiteQuery .cxx_destruct]
  -[AMSSQLiteQuery enumeratePersistentIDsAndProperties:usingBlock:]
  -[AMSSQLiteQuery connection]
  -[AMSSQLiteQuery queryDescriptor]
  -[AMSSQLiteQuery countOfEntities]
  -[AMSSQLiteQuery applyBinding:atIndex:]
  -[AMSSQLiteQuery copySelectSQLWithProperties:]
  -[AMSSQLiteQuery copyEntityIdentifiers]
  -[AMSSQLiteQuery enumerateMemoryEntitiesWithProperties:usingBlock:]
  -[AMSSQLiteQuery _newSelectSQLWithProperties:]
  -[AMSSQLiteQuery initOnConnection:descriptor:]
  -[AMSSQLiteQuery createTemporaryTableWithName:properties:]
  -[AMSSQLiteQuery deleteAllEntities]
  -[AMSSQLiteQuery enumerateMemoryEntitiesUsingBlock:]


AMSSQLiteQueryDescriptor : NSObject <NSCopying>
 @property  Class entityClass
 @property  Class memoryEntityClass
 @property  long long limitCount
 @property  NSString *orderingClause
 @property  NSArray *orderingDirections
 @property  NSArray *orderingProperties
 @property  BOOL returnsDistinctEntities
 @property  AMSSQLitePredicate *predicate

  // instance methods
  -[AMSSQLiteQueryDescriptor limitCount]
  -[AMSSQLiteQueryDescriptor setLimitCount:]
  -[AMSSQLiteQueryDescriptor returnsDistinctEntities]
  -[AMSSQLiteQueryDescriptor entityClass]
  -[AMSSQLiteQueryDescriptor setEntityClass:]
  -[AMSSQLiteQueryDescriptor setReturnsDistinctEntities:]
  -[AMSSQLiteQueryDescriptor setPredicate:]
  -[AMSSQLiteQueryDescriptor orderingClause]
  -[AMSSQLiteQueryDescriptor predicate]
  -[AMSSQLiteQueryDescriptor memoryEntityClass]
  -[AMSSQLiteQueryDescriptor setOrderingClause:]
  -[AMSSQLiteQueryDescriptor .cxx_destruct]
  -[AMSSQLiteQueryDescriptor setOrderingProperties:]
  -[AMSSQLiteQueryDescriptor orderingProperties]
  -[AMSSQLiteQueryDescriptor orderingDirections]
  -[AMSSQLiteQueryDescriptor setOrderingDirections:]
  -[AMSSQLiteQueryDescriptor setMemoryEntityClass:]
  -[AMSSQLiteQueryDescriptor copyWithZone:]
  -[AMSSQLiteQueryDescriptor _newSelectSQLWithProperties:columns:]


AMSSQLiteQueryResults : NSObject <AMSSQLiteBinding>
 @property  long long firstInt64Value
 @property  NSNumber *firstNumberValue
 @property  BOOL hasRows
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSSQLiteQueryResults initWithStatement:]
  -[AMSSQLiteQueryResults bindArray:atPosition:]
  -[AMSSQLiteQueryResults bindData:atPosition:]
  -[AMSSQLiteQueryResults bindInt:atPosition:]
  -[AMSSQLiteQueryResults bindFloat:atPosition:]
  -[AMSSQLiteQueryResults bindNullAtPosition:]
  -[AMSSQLiteQueryResults clearBindings]
  -[AMSSQLiteQueryResults .cxx_destruct]
  -[AMSSQLiteQueryResults firstInt64Value]
  -[AMSSQLiteQueryResults hasRows]
  -[AMSSQLiteQueryResults bindNullableString:atPosition:]
  -[AMSSQLiteQueryResults bindInt64:atPosition:]
  -[AMSSQLiteQueryResults bindURL:atPosition:]
  -[AMSSQLiteQueryResults bindStringCopy:atPosition:]
  -[AMSSQLiteQueryResults bindString:atPosition:]
  -[AMSSQLiteQueryResults bindDictionary:atPosition:]
  -[AMSSQLiteQueryResults bindDataCopy:atPosition:]
  -[AMSSQLiteQueryResults bindDate:atPosition:]
  -[AMSSQLiteQueryResults bindNumber:atPosition:]
  -[AMSSQLiteQueryResults bindDouble:atPosition:]
  -[AMSSQLiteQueryResults firstNumberValue]
  -[AMSSQLiteQueryResults enumerateRowsUsingBlock:]


AMSSQLiteSchema : NSObject
 @property  long long currentUserVersion

  // instance methods
  -[AMSSQLiteSchema tableExists:]
  -[AMSSQLiteSchema .cxx_destruct]
  -[AMSSQLiteSchema initWithConnection:]
  -[AMSSQLiteSchema column:existsInTable:]
  -[AMSSQLiteSchema migrateToVersion:usingBlock:]
  -[AMSSQLiteSchema currentUserVersion]
  -[AMSSQLiteSchema _setUserVersion:]


AMSSQLiteSchemaMigration : NSObject
 @property  NSError *error
 @property  BOOL success

  // instance methods
  -[AMSSQLiteSchemaMigration success]
  -[AMSSQLiteSchemaMigration .cxx_destruct]
  -[AMSSQLiteSchemaMigration initWithConnection:]
  -[AMSSQLiteSchemaMigration executeOptionalStatement:]
  -[AMSSQLiteSchemaMigration executeOptionalStatement:bindings:]
  -[AMSSQLiteSchemaMigration _executeStatement:canFailMigration:bindings:]
  -[AMSSQLiteSchemaMigration executeStatement:bindings:]
  -[AMSSQLiteSchemaMigration error]
  -[AMSSQLiteSchemaMigration executeStatement:]


AMSSQLiteStatement : NSObject <AMSSQLiteBinding>
 @property  AMSSQLiteConnection *connection
 @property  ^{sqlite3_stmt=} sqlite3_stmt
 @property  NSDictionary *columnIndexByName
 @property  BOOL readOnly
 @property  NSString *SQL
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSSQLiteStatement step]
  -[AMSSQLiteStatement SQL]
  -[AMSSQLiteStatement bindArray:atPosition:]
  -[AMSSQLiteStatement bindData:atPosition:]
  -[AMSSQLiteStatement bindInt:atPosition:]
  -[AMSSQLiteStatement bindFloat:atPosition:]
  -[AMSSQLiteStatement bindNullAtPosition:]
  -[AMSSQLiteStatement clearBindings]
  -[AMSSQLiteStatement .cxx_destruct]
  -[AMSSQLiteStatement initWithStatement:onConnection:]
  -[AMSSQLiteStatement columnIndexByName]
  -[AMSSQLiteStatement bindNullableString:atPosition:]
  -[AMSSQLiteStatement bindInt64:atPosition:]
  -[AMSSQLiteStatement bindURL:atPosition:]
  -[AMSSQLiteStatement connection]
  -[AMSSQLiteStatement isReadOnly]
  -[AMSSQLiteStatement bindStringCopy:atPosition:]
  -[AMSSQLiteStatement reset]
  -[AMSSQLiteStatement finalizeStatement]
  -[AMSSQLiteStatement bindString:atPosition:]
  -[AMSSQLiteStatement sqlite3_stmt]
  -[AMSSQLiteStatement bindDictionary:atPosition:]
  -[AMSSQLiteStatement bindDataCopy:atPosition:]
  -[AMSSQLiteStatement bindDate:atPosition:]
  -[AMSSQLiteStatement bindNumber:atPosition:]
  -[AMSSQLiteStatement bindDouble:atPosition:]


AMSStorage : NSObject
  // class methods
  +[AMSStorage _setBool:forKey:]
  +[AMSStorage _integerForKey:defaultValue:domain:]
  +[AMSStorage _setInteger:forKey:]
  +[AMSStorage _integerForKey:defaultValue:]
  +[AMSStorage _setBool:forKey:domain:]
  +[AMSStorage _valueForKey:]
  +[AMSStorage _setValue:forKey:]
  +[AMSStorage _setIntegerWithDatabase:forKey:domain:error:]
  +[AMSStorage bagURLCookies]
  +[AMSStorage _setIntegerWithCFPreferences:forKey:domain:]
  +[AMSStorage setSharedStoreReviewMetrics:forProcess:]
  +[AMSStorage _boolFromDatabaseForKey:defaultValue:domain:error:]
  +[AMSStorage deviceOfferEligibility]
  +[AMSStorage _setValueWithDatabase:forKey:domain:error:]
  +[AMSStorage _allKeysWithDomain:]
  +[AMSStorage _setValueWithCFPreferences:forKey:domain:]
  +[AMSStorage sharedStoreReviewMetricsForProcess:]
  +[AMSStorage _valueFromCFPreferencesForKey:domain:]
  +[AMSStorage setBagURLCookies:]
  +[AMSStorage _migrateIntegerToDatabase:forKey:domain:]
  +[AMSStorage _integerFromCFPreferencesForKey:defaultValue:domain:]
  +[AMSStorage _setValue:forKey:domain:]
  +[AMSStorage _migrateBoolToDatabase:forKey:domain:]
  +[AMSStorage _boolForKey:defaultValue:domain:]
  +[AMSStorage setDeviceOfferEligibility:]
  +[AMSStorage _valueFromDatabaseForKey:domain:error:]
  +[AMSStorage _setBoolWithDatabase:forKey:domain:error:]
  +[AMSStorage _setBoolWithCFPreferences:forKey:domain:]
  +[AMSStorage _migrateValueToDatabase:forKey:domain:]
  +[AMSStorage _valueForKey:domain:]
  +[AMSStorage _boolFromCFPreferencesForKey:defaultValue:domain:]
  +[AMSStorage _boolForKey:defaultValue:]
  +[AMSStorage _integerFromDatabaseForKey:defaultValue:domain:error:]
  +[AMSStorage _setInteger:forKey:domain:]


AMSStorageDatabase : NSObject <AMSSQLiteConnectionDelegate>
 @property  AMSSQLiteConnection *connection
 @property  NSObject<OS_dispatch_queue> *internalQueue
 @property  long long keepAliveCount
 @property  NSString *domain
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSStorageDatabase sharedDatabaseWithDomain:]
  +[AMSStorageDatabase isFeatureSupported]

  // instance methods
  -[AMSStorageDatabase _cachePath]
  -[AMSStorageDatabase setDouble:forKey:error:]
  -[AMSStorageDatabase _convertToDataWithValue:valueType:error:]
  -[AMSStorageDatabase setInternalQueue:]
  -[AMSStorageDatabase _performTransaction:]
  -[AMSStorageDatabase _dataForPlistValue:error:]
  -[AMSStorageDatabase setDomain:]
  -[AMSStorageDatabase connectionNeedsResetForCorruption:]
  -[AMSStorageDatabase integerForKey:error:]
  -[AMSStorageDatabase .cxx_destruct]
  -[AMSStorageDatabase setValue:forKey:error:]
  -[AMSStorageDatabase domain]
  -[AMSStorageDatabase valueForKey:error:]
  -[AMSStorageDatabase setConnection:]
  -[AMSStorageDatabase setBoolean:forKey:error:]
  -[AMSStorageDatabase doubleForKey:error:]
  -[AMSStorageDatabase _convertToValueWithData:valueType:error:]
  -[AMSStorageDatabase keepAliveCount]
  -[AMSStorageDatabase connection]
  -[AMSStorageDatabase sizeWithError:]
  -[AMSStorageDatabase _plistValueForData:error:]
  -[AMSStorageDatabase deleteForKey:error:]
  -[AMSStorageDatabase allKeyValuesWithError:]
  -[AMSStorageDatabase _setValueData:valueType:forKey:error:]
  -[AMSStorageDatabase internalQueue]
  -[AMSStorageDatabase booleanForKey:error:]
  -[AMSStorageDatabase allKeysForDomain:withError:]
  -[AMSStorageDatabase initWithDomain:]
  -[AMSStorageDatabase close]
  -[AMSStorageDatabase dealloc]
  -[AMSStorageDatabase _allKeysPrefixedByDomainWithError:]
  -[AMSStorageDatabase setInteger:forKey:error:]
  -[AMSStorageDatabase _valueTypeForValue:]
  -[AMSStorageDatabase setKeepAliveCount:]


AMSStorageDatabaseSchema : NSObject
  // class methods
  +[AMSStorageDatabaseSchema createOrUpdateSchemaUsingConnection:]
  +[AMSStorageDatabaseSchema migrateVersion0to1WithMigration:]


AMSStorageDataMigrator : NSObject
  // class methods
  +[AMSStorageDataMigrator migrateStorageToDefaultsForNonAMSInternal:]
  +[AMSStorageDataMigrator _migrateDeviceOfferEligibilityWithDatabase:]
  +[AMSStorageDataMigrator _migrateSharedStoreReviewWithDatabase:]


AMSStreamHTTPArchiveEntry : NSObject <NSSecureCoding>
 @property  NSArray *entries
 @property  NSString *urlString

  // class methods
  +[AMSStreamHTTPArchiveEntry supportsSecureCoding]
  +[AMSStreamHTTPArchiveEntry _createEntriesForTaskMetrics:requestData:responseData:]

  // instance methods
  -[AMSStreamHTTPArchiveEntry urlString]
  -[AMSStreamHTTPArchiveEntry setUrlString:]
  -[AMSStreamHTTPArchiveEntry setEntries:]
  -[AMSStreamHTTPArchiveEntry initWithCoder:]
  -[AMSStreamHTTPArchiveEntry initWithHTTPArchiveTaskInfo:]
  -[AMSStreamHTTPArchiveEntry .cxx_destruct]
  -[AMSStreamHTTPArchiveEntry entries]
  -[AMSStreamHTTPArchiveEntry initWithEntries:]
  -[AMSStreamHTTPArchiveEntry encodeWithCoder:]


AMSStreamHTTPArchiveEntryController : NSObject
  // class methods
  +[AMSStreamHTTPArchiveEntryController initialize]
  +[AMSStreamHTTPArchiveEntryController _headerData]
  +[AMSStreamHTTPArchiveEntryController _footerData]
  +[AMSStreamHTTPArchiveEntryController _performCombiningFiles:toStream:]
  +[AMSStreamHTTPArchiveEntryController _updateMaxBufferSize]
  +[AMSStreamHTTPArchiveEntryController _streamToDiskWithEntries:]
  +[AMSStreamHTTPArchiveEntryController _shouldWriteEntryDirectlyToDiskForURLString:]
  +[AMSStreamHTTPArchiveEntryController _harFileURLsInPath:]
  +[AMSStreamHTTPArchiveEntryController _periodicCleanup]
  +[AMSStreamHTTPArchiveEntryController _createNewFileWithError:outputDirectory:forCombining:]
  +[AMSStreamHTTPArchiveEntryController _writeHeaderToStream:]
  +[AMSStreamHTTPArchiveEntryController _writeFooterToStream:]
  +[AMSStreamHTTPArchiveEntryController _writeEntries:toStream:]
  +[AMSStreamHTTPArchiveEntryController _writeData:enumeratingBytesToStream:]
  +[AMSStreamHTTPArchiveEntryController ams_streamEntriesToDisk]
  +[AMSStreamHTTPArchiveEntryController ams_addEntriesForTaskInfo:]
  +[AMSStreamHTTPArchiveEntryController ams_combineEntriesForPath:]
  +[AMSStreamHTTPArchiveEntryController buffer]


AMSSubscriptionBag : NSObject
 @property  AMSFairPlayContext *fairPlayContext

  // class methods
  +[AMSSubscriptionBag sharedInstance]

  // instance methods
  -[AMSSubscriptionBag _generateSubscriptionBagRequestWithAccountIdentifier:transactionType:machineIDData:returningSubscriptionBagData:error:]
  -[AMSSubscriptionBag .cxx_destruct]
  -[AMSSubscriptionBag fairPlayContext]
  -[AMSSubscriptionBag init]
  -[AMSSubscriptionBag subscriptionBagSyncDataForAccount:]


AMSSubscriptionEntitlement : NSObject
 @property  BOOL autoRenewEnabled
 @property  NSNumber *chargeStoreFrontID
 @property  NSDate *expiration
 @property  NSNumber *entitlementSourceAdamId
 @property  BOOL familySubscription
 @property  NSNumber *featureAccessTypeId
 @property  BOOL freeTrialEligible
 @property  NSNumber *freeTrialPeriodId
 @property  NSNumber *inAppAdamId
 @property  NSString *inAppVersion
 @property  double initialPurchaseTimestamp
 @property  NSString *offerId
 @property  unsigned long period
 @property  NSString *poolType
 @property  NSNumber *promoScenarioId
 @property  BOOL purchaser
 @property  NSDate *renewDate
 @property  double serviceBeginsTimestamp
 @property  unsigned int source
 @property  NSDate *startDate
 @property  unsigned int status
 @property  NSNumber *subscriptionBundleId
 @property  NSString *vendorAdHocOfferId
 @property  NSString *vendorId
 @property  long long carrierErrorCode
 @property  NSString *carrierOperatorName
 @property  NSString *carrierPhoneNumber
 @property  NSString *carrierSessionId
 @property  unsigned int carrierStatus

  // instance methods
  -[AMSSubscriptionEntitlement period]
  -[AMSSubscriptionEntitlement vendorId]
  -[AMSSubscriptionEntitlement setVendorId:]
  -[AMSSubscriptionEntitlement purchaser]
  -[AMSSubscriptionEntitlement .cxx_destruct]
  -[AMSSubscriptionEntitlement expiration]
  -[AMSSubscriptionEntitlement setStartDate:]
  -[AMSSubscriptionEntitlement offerId]
  -[AMSSubscriptionEntitlement poolType]
  -[AMSSubscriptionEntitlement renewDate]
  -[AMSSubscriptionEntitlement status]
  -[AMSSubscriptionEntitlement setSource:]
  -[AMSSubscriptionEntitlement setPeriod:]
  -[AMSSubscriptionEntitlement setStatus:]
  -[AMSSubscriptionEntitlement setOfferId:]
  -[AMSSubscriptionEntitlement startDate]
  -[AMSSubscriptionEntitlement setFamilySubscription:]
  -[AMSSubscriptionEntitlement setPurchaser:]
  -[AMSSubscriptionEntitlement carrierStatus]
  -[AMSSubscriptionEntitlement setRenewDate:]
  -[AMSSubscriptionEntitlement inAppAdamId]
  -[AMSSubscriptionEntitlement inAppVersion]
  -[AMSSubscriptionEntitlement setPoolType:]
  -[AMSSubscriptionEntitlement exportObject]
  -[AMSSubscriptionEntitlement promoScenarioId]
  -[AMSSubscriptionEntitlement autoRenewEnabled]
  -[AMSSubscriptionEntitlement chargeStoreFrontID]
  -[AMSSubscriptionEntitlement entitlementSourceAdamId]
  -[AMSSubscriptionEntitlement familySubscription]
  -[AMSSubscriptionEntitlement featureAccessTypeId]
  -[AMSSubscriptionEntitlement freeTrialEligible]
  -[AMSSubscriptionEntitlement freeTrialPeriodId]
  -[AMSSubscriptionEntitlement initialPurchaseTimestamp]
  -[AMSSubscriptionEntitlement serviceBeginsTimestamp]
  -[AMSSubscriptionEntitlement subscriptionBundleId]
  -[AMSSubscriptionEntitlement vendorAdHocOfferId]
  -[AMSSubscriptionEntitlement carrierErrorCode]
  -[AMSSubscriptionEntitlement carrierOperatorName]
  -[AMSSubscriptionEntitlement carrierPhoneNumber]
  -[AMSSubscriptionEntitlement carrierSessionId]
  -[AMSSubscriptionEntitlement setAutoRenewEnabled:]
  -[AMSSubscriptionEntitlement setChargeStoreFrontID:]
  -[AMSSubscriptionEntitlement setExpiration:]
  -[AMSSubscriptionEntitlement setEntitlementSourceAdamId:]
  -[AMSSubscriptionEntitlement setFeatureAccessTypeId:]
  -[AMSSubscriptionEntitlement setInAppAdamId:]
  -[AMSSubscriptionEntitlement setFreeTrialEligible:]
  -[AMSSubscriptionEntitlement setFreeTrialPeriodId:]
  -[AMSSubscriptionEntitlement setInAppVersion:]
  -[AMSSubscriptionEntitlement setPromoScenarioId:]
  -[AMSSubscriptionEntitlement setInitialPurchaseTimestamp:]
  -[AMSSubscriptionEntitlement setServiceBeginsTimestamp:]
  -[AMSSubscriptionEntitlement setSubscriptionBundleId:]
  -[AMSSubscriptionEntitlement setVendorAdHocOfferId:]
  -[AMSSubscriptionEntitlement setCarrierErrorCode:]
  -[AMSSubscriptionEntitlement setCarrierOperatorName:]
  -[AMSSubscriptionEntitlement setCarrierPhoneNumber:]
  -[AMSSubscriptionEntitlement setCarrierSessionId:]
  -[AMSSubscriptionEntitlement setCarrierStatus:]
  -[AMSSubscriptionEntitlement source]


AMSSubscriptionEntitlementsResult : NSObject
 @property  NSNumber *appAdamId
 @property  NSNumber *appVersion
 @property  NSDictionary *entitlements
 @property  NSDictionary *serverResponse

  // instance methods
  -[AMSSubscriptionEntitlementsResult setEntitlements:]
  -[AMSSubscriptionEntitlementsResult appVersion]
  -[AMSSubscriptionEntitlementsResult .cxx_destruct]
  -[AMSSubscriptionEntitlementsResult serverResponse]
  -[AMSSubscriptionEntitlementsResult setAppVersion:]
  -[AMSSubscriptionEntitlementsResult entitlements]
  -[AMSSubscriptionEntitlementsResult appAdamId]
  -[AMSSubscriptionEntitlementsResult exportObject]
  -[AMSSubscriptionEntitlementsResult setAppAdamId:]
  -[AMSSubscriptionEntitlementsResult setServerResponse:]


AMSSubscriptionEntitlementsTask : AMSTask
 @property  long long cachePolicy
 @property  BOOL extendedCarrierCheck
 @property  long long mediaType

  // class methods
  +[AMSSubscriptionEntitlementsTask updateCacheForMediaType:account:data:]
  +[AMSSubscriptionEntitlementsTask _segmentForMediaType:error:]

  // instance methods
  -[AMSSubscriptionEntitlementsTask setMediaType:]
  -[AMSSubscriptionEntitlementsTask _shouldIgnoreRemoteData]
  -[AMSSubscriptionEntitlementsTask setCachePolicy:]
  -[AMSSubscriptionEntitlementsTask cachePolicy]
  -[AMSSubscriptionEntitlementsTask extendedCarrierCheck]
  -[AMSSubscriptionEntitlementsTask _fetchEntitlementsFromIC]
  -[AMSSubscriptionEntitlementsTask initWithMediaType:]
  -[AMSSubscriptionEntitlementsTask _shouldIgnoreCaches]
  -[AMSSubscriptionEntitlementsTask _resultFromASDEntitlements:]
  -[AMSSubscriptionEntitlementsTask _reloadASDSubscriptionForSegment:controller:]
  -[AMSSubscriptionEntitlementsTask performExternalLookup]
  -[AMSSubscriptionEntitlementsTask _resultFromICResponse:]
  -[AMSSubscriptionEntitlementsTask _fetchEntitlementsFromASD]
  -[AMSSubscriptionEntitlementsTask mediaType]
  -[AMSSubscriptionEntitlementsTask _queryCachedASDSubscriptionForSegment:controller:reloadIfNeeded:]
  -[AMSSubscriptionEntitlementsTask setExtendedCarrierCheck:]


AMSSyncPasswordSettingsResult : NSObject

AMSSyncPasswordSettingsTask : AMSTask <AMSURLProtocolDelegate, AMSBagConsumer>
 @property  ACAccount *account
 @property  <AMSBagProtocol> *bag
 @property  AMSProcessInfo *clientInfo
 @property  <NSURLSessionDelegate><AMSURLProtocolDelegate> *delegate
 @property  unsigned long freeSetting
 @property  unsigned long paidSetting
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSSyncPasswordSettingsTask bagKeySet]
  +[AMSSyncPasswordSettingsTask bagSubProfileVersion]
  +[AMSSyncPasswordSettingsTask bagSubProfile]
  +[AMSSyncPasswordSettingsTask freePasswordSettingFromServerValue:]
  +[AMSSyncPasswordSettingsTask paidPasswordSettingFromServerValue:]
  +[AMSSyncPasswordSettingsTask serverValueForPaidPasswordSetting:]
  +[AMSSyncPasswordSettingsTask serverValueForFreePasswordSetting:]
  +[AMSSyncPasswordSettingsTask createBagForSubProfile]

  // instance methods
  -[AMSSyncPasswordSettingsTask account]
  -[AMSSyncPasswordSettingsTask setClientInfo:]
  -[AMSSyncPasswordSettingsTask .cxx_destruct]
  -[AMSSyncPasswordSettingsTask bag]
  -[AMSSyncPasswordSettingsTask clientInfo]
  -[AMSSyncPasswordSettingsTask delegate]
  -[AMSSyncPasswordSettingsTask performSync]
  -[AMSSyncPasswordSettingsTask freeSetting]
  -[AMSSyncPasswordSettingsTask paidSetting]
  -[AMSSyncPasswordSettingsTask initWithAccount:freeSetting:paidSetting:delegate:bag:]


AMSSystemAlertDialogTask : AMSTask
 @property  AMSDialogResult *autoDismissResult
 @property  long long defaultButtonIndex
 @property  BOOL dismissOnHomeButton
 @property  BOOL dismissOnLock
 @property  BOOL shouldDismissAfterUnlock
 @property  BOOL shouldDisplayAsTopMost
 @property  BOOL shouldPendInSetupIfNotAllowed
 @property  BOOL displaysOnLockscreen
 @property  long long unlockActionButtonIndex
 @property  ^{__CFUserNotification=} userNotification
 @property  BOOL isDialogDismissalEnabled
 @property  AMSDialogRequest *request

  // instance methods
  -[AMSSystemAlertDialogTask present]
  -[AMSSystemAlertDialogTask initWithRequest:]
  -[AMSSystemAlertDialogTask .cxx_destruct]
  -[AMSSystemAlertDialogTask _dismiss]
  -[AMSSystemAlertDialogTask userNotification]
  -[AMSSystemAlertDialogTask request]
  -[AMSSystemAlertDialogTask defaultButtonIndex]
  -[AMSSystemAlertDialogTask setDefaultButtonIndex:]
  -[AMSSystemAlertDialogTask dismissOnLock]
  -[AMSSystemAlertDialogTask setUserNotification:]
  -[AMSSystemAlertDialogTask _createNoteDictionaryWithKeys:buttonActions:outOptions:]
  -[AMSSystemAlertDialogTask _reorderButtonActions]
  -[AMSSystemAlertDialogTask dismissOnHomeButton]
  -[AMSSystemAlertDialogTask _showNotificationFromDictionary:options:]
  -[AMSSystemAlertDialogTask isDialogDismissalEnabled]
  -[AMSSystemAlertDialogTask autoDismissResult]
  -[AMSSystemAlertDialogTask _handleResponseForNote:buttonActions:keys:]
  -[AMSSystemAlertDialogTask setAutoDismissResult:]
  -[AMSSystemAlertDialogTask _keyboardTypeFor:]
  -[AMSSystemAlertDialogTask _defaultButtonIndexForActions:]
  -[AMSSystemAlertDialogTask unlockActionButtonIndex]
  -[AMSSystemAlertDialogTask displaysOnLockscreen]
  -[AMSSystemAlertDialogTask shouldDisplayAsTopMost]
  -[AMSSystemAlertDialogTask shouldDismissAfterUnlock]
  -[AMSSystemAlertDialogTask shouldPendInSetupIfNotAllowed]
  -[AMSSystemAlertDialogTask setDismissOnHomeButton:]
  -[AMSSystemAlertDialogTask setDismissOnLock:]
  -[AMSSystemAlertDialogTask setShouldDismissAfterUnlock:]
  -[AMSSystemAlertDialogTask setShouldDisplayAsTopMost:]
  -[AMSSystemAlertDialogTask setShouldPendInSetupIfNotAllowed:]
  -[AMSSystemAlertDialogTask setDisplaysOnLockscreen:]
  -[AMSSystemAlertDialogTask setUnlockActionButtonIndex:]
  -[AMSSystemAlertDialogTask setIsDialogDismissalEnabled:]


AMSSystemEngagementTask : AMSTask <AMSSystemEngagementTaskClientInterface, NSXPCListenerDelegate, SBSRemoteAlertHandleObserver, AMSBagConsumer>
 @property  NSObject<OS_dispatch_group> *dispatchGroup
 @property  FBSDisplayLayoutMonitor *displayLayoutMonitor
 @property  NSError *error
 @property  RBSProcessHandle *processHandle
 @property  SBSRemoteAlertHandle *remoteAlertHandle
 @property  NSXPCListener *remoteListener
 @property  AMSEngagementResult *result
 @property  NSXPCConnection *underlyingRemoteConnection
 @property  <AMSBagProtocol> *bag
 @property  AMSProcessInfo *clientInfo
 @property  AMSEngagementRequest *request
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSSystemEngagementTask bagKeySet]
  +[AMSSystemEngagementTask bagSubProfileVersion]
  +[AMSSystemEngagementTask bagSubProfile]
  +[AMSSystemEngagementTask createBagForSubProfile]

  // instance methods
  -[AMSSystemEngagementTask remoteAlertHandle:didInvalidateWithError:]
  -[AMSSystemEngagementTask remoteAlertHandleDidActivate:]
  -[AMSSystemEngagementTask present]
  -[AMSSystemEngagementTask setRemoteAlertHandle:]
  -[AMSSystemEngagementTask remoteAlertHandle]
  -[AMSSystemEngagementTask remoteAlertHandleDidDeactivate:]
  -[AMSSystemEngagementTask initWithRequest:]
  -[AMSSystemEngagementTask processHandle]
  -[AMSSystemEngagementTask setClientInfo:]
  -[AMSSystemEngagementTask .cxx_destruct]
  -[AMSSystemEngagementTask bag]
  -[AMSSystemEngagementTask clientInfo]
  -[AMSSystemEngagementTask setDispatchGroup:]
  -[AMSSystemEngagementTask result]
  -[AMSSystemEngagementTask request]
  -[AMSSystemEngagementTask initWithRequest:bag:]
  -[AMSSystemEngagementTask setResult:]
  -[AMSSystemEngagementTask setDisplayLayoutMonitor:]
  -[AMSSystemEngagementTask dispatchGroup]
  -[AMSSystemEngagementTask remoteListener]
  -[AMSSystemEngagementTask setBag:]
  -[AMSSystemEngagementTask listener:shouldAcceptNewConnection:]
  -[AMSSystemEngagementTask setError:]
  -[AMSSystemEngagementTask displayLayoutMonitor]
  -[AMSSystemEngagementTask setProcessHandle:]
  -[AMSSystemEngagementTask error]
  -[AMSSystemEngagementTask _unlockDeviceIfNeeded]
  -[AMSSystemEngagementTask _activateIfWithError:]
  -[AMSSystemEngagementTask _invalidateRemoteAlert]
  -[AMSSystemEngagementTask _finishTaskWithResult:error:]
  -[AMSSystemEngagementTask engagementTaskDidFinishWithResult:error:completion:]
  -[AMSSystemEngagementTask setUnderlyingRemoteConnection:]
  -[AMSSystemEngagementTask initializeClientToViewServiceConnection]
  -[AMSSystemEngagementTask _snapshotBagDataPromise]
  -[AMSSystemEngagementTask _listenForAppForegroundWithHandle:]
  -[AMSSystemEngagementTask underlyingRemoteConnection]
  -[AMSSystemEngagementTask setRemoteListener:]


AMSTask : NSObject
 @property  NSObject<OS_dispatch_queue> *performTaskQueue
 @property  AMSPromise *promise
 @property  NSObject<OS_dispatch_queue> *promiseAccessQueue
 @property  BOOL cancelled
 @property  BOOL finished
 @property  BOOL running
 @property  long long runMode

  // class methods
  +[AMSTask taskCache]
  +[AMSTask taskCacheAccessQueue]

  // instance methods
  -[AMSTask isFinished]
  -[AMSTask performBinaryTaskWithBlock:]
  -[AMSTask .cxx_destruct]
  -[AMSTask isRunning]
  -[AMSTask performTaskWithBlock:]
  -[AMSTask performTaskWithPromiseBlock:]
  -[AMSTask isCancelled]
  -[AMSTask init]
  -[AMSTask setPromise:]
  -[AMSTask cancel]
  -[AMSTask runMode]
  -[AMSTask setRunMode:]
  -[AMSTask promise]
  -[AMSTask performTaskQueue]
  -[AMSTask promiseAccessQueue]
  -[AMSTask setPerformTaskQueue:]
  -[AMSTask setPromiseAccessQueue:]


AMSThreadSafeDictionary : NSObject
 @property  AMSThreadSafeObject *backingDictionary
 @property  NSArray *allKeys
 @property  NSArray *allValues

  // instance methods
  -[AMSThreadSafeDictionary objectForKey:]
  -[AMSThreadSafeDictionary removeAllObjects]
  -[AMSThreadSafeDictionary backingDictionary]
  -[AMSThreadSafeDictionary setBackingDictionary:]
  -[AMSThreadSafeDictionary setObject:forKey:]
  -[AMSThreadSafeDictionary objectForKeyedSubscript:]
  -[AMSThreadSafeDictionary allValues]
  -[AMSThreadSafeDictionary .cxx_destruct]
  -[AMSThreadSafeDictionary removeObjectForKey:]
  -[AMSThreadSafeDictionary allKeys]
  -[AMSThreadSafeDictionary setObject:forKeyedSubscript:]
  -[AMSThreadSafeDictionary init]


AMSThreadSafeObject : NSObject
 @property  {os_unfair_lock_s=I} lock
 @property  id underlyingObject

  // instance methods
  -[AMSThreadSafeObject initWithObject:]
  -[AMSThreadSafeObject .cxx_destruct]
  -[AMSThreadSafeObject setUnderlyingObject:]
  -[AMSThreadSafeObject init]
  -[AMSThreadSafeObject read:]
  -[AMSThreadSafeObject object]
  -[AMSThreadSafeObject underlyingObject]
  -[AMSThreadSafeObject lock]
  -[AMSThreadSafeObject accessAndSetObjectWithBlock:]
  -[AMSThreadSafeObject readWrite:]
  -[AMSThreadSafeObject setObject:]


AMSThreadSafeSet : NSObject
 @property  AMSThreadSafeObject *backingSet
 @property  NSArray *allObjects
 @property  unsigned long count

  // instance methods
  -[AMSThreadSafeSet removeObject:]
  -[AMSThreadSafeSet addObject:]
  -[AMSThreadSafeSet .cxx_destruct]
  -[AMSThreadSafeSet count]
  -[AMSThreadSafeSet backingSet]
  -[AMSThreadSafeSet init]
  -[AMSThreadSafeSet setBackingSet:]
  -[AMSThreadSafeSet allObjects]


AMSTreatment : NSObject <NSSecureCoding>
 @property  NSDate *endDate
 @property  NSString *identifier
 @property  NSDate *startDate

  // class methods
  +[AMSTreatment supportsSecureCoding]

  // instance methods
  -[AMSTreatment initWithCoder:]
  -[AMSTreatment .cxx_destruct]
  -[AMSTreatment isEqual:]
  -[AMSTreatment identifier]
  -[AMSTreatment startDate]
  -[AMSTreatment endDate]
  -[AMSTreatment encodeWithCoder:]
  -[AMSTreatment initWithEndDate:identifier:startDate:]


AMSTreatmentStore : NSObject
 @property  AMSLRUCache *areasCache
 @property  AMSLRUCache *treatmentsCache

  // class methods
  +[AMSTreatmentStore defaultTreatmentStore]
  +[AMSTreatmentStore attemptConnectionInTests]
  +[AMSTreatmentStore setAttemptConnectionInTests:]

  // instance methods
  -[AMSTreatmentStore .cxx_destruct]
  -[AMSTreatmentStore init]
  -[AMSTreatmentStore areasForTopics:]
  -[AMSTreatmentStore experimentDataForAreas:]
  -[AMSTreatmentStore areasCache]
  -[AMSTreatmentStore dealloc]
  -[AMSTreatmentStore _treatmentsDidSyncronize:]
  -[AMSTreatmentStore treatmentsCache]
  -[AMSTreatmentStore _cachedAreasForNamespace:]
  -[AMSTreatmentStore _treatmentStoreService]
  -[AMSTreatmentStore _cacheAreas:forNamespace:]
  -[AMSTreatmentStore _cachedAreasForTopic:]
  -[AMSTreatmentStore _cacheAreas:forTopic:]
  -[AMSTreatmentStore treatmentsForAreas:]
  -[AMSTreatmentStore _cachedTreatmentForArea:]
  -[AMSTreatmentStore _cacheTreatment:forArea:]
  -[AMSTreatmentStore areasForNamespaces:]
  -[AMSTreatmentStore synchronizeTreatments]
  -[AMSTreatmentStore treatmentsPayloadForAreas:]


AMSUniqueExecutionQueue : NSObject
 @property  @? block
 @property  NSObject<OS_dispatch_queue> *completionCallbacksQueue
 @property  NSObject<OS_dispatch_queue> *executeBlockQueue
 @property  AMSPromise *executionPromise
 @property  NSObject<OS_dispatch_queue> *executionPromiseAccessQueue

  // instance methods
  -[AMSUniqueExecutionQueue setBlock:]
  -[AMSUniqueExecutionQueue _beginExecutingBlockWithPromise:]
  -[AMSUniqueExecutionQueue setExecutionPromise:]
  -[AMSUniqueExecutionQueue setCompletionCallbacksQueue:]
  -[AMSUniqueExecutionQueue addCompletionBlockForSubsequentExecution:]
  -[AMSUniqueExecutionQueue setExecuteBlockQueue:]
  -[AMSUniqueExecutionQueue addCompletionBlock:]
  -[AMSUniqueExecutionQueue .cxx_destruct]
  -[AMSUniqueExecutionQueue initWithBlock:]
  -[AMSUniqueExecutionQueue block]
  -[AMSUniqueExecutionQueue executionPromise]
  -[AMSUniqueExecutionQueue executeBlockQueue]
  -[AMSUniqueExecutionQueue executionPromiseAccessQueue]
  -[AMSUniqueExecutionQueue _createExecutionPromise]
  -[AMSUniqueExecutionQueue completionCallbacksQueue]


AMSUnitTests : NSObject
  // class methods
  +[AMSUnitTests setEncryptionKey:forDataProtectionClass:]
  +[AMSUnitTests encryptionKeyForDataProtectionClass:]
  +[AMSUnitTests _encryptionKeys]
  +[AMSUnitTests isRunningUnitTests]
  +[AMSUnitTests _sync:]


AMSUniversalLinks : NSObject
 @property  AMSUniversalLinksConnection *connection

  // class methods
  +[AMSUniversalLinks _connection]
  +[AMSUniversalLinks update]
  +[AMSUniversalLinks _privateQueue]

  // instance methods
  -[AMSUniversalLinks updateUniversalLinks]
  -[AMSUniversalLinks .cxx_destruct]
  -[AMSUniversalLinks setConnection:]
  -[AMSUniversalLinks init]
  -[AMSUniversalLinks connection]


AMSUniversalLinksConnection : NSObject
 @property  NSXPCConnection *connection
 @property  NSObject<OS_dispatch_queue> *queue
 @property  <AMSUniversalLinksServiceProtocol> *proxy

  // instance methods
  -[AMSUniversalLinksConnection .cxx_destruct]
  -[AMSUniversalLinksConnection setConnection:]
  -[AMSUniversalLinksConnection init]
  -[AMSUniversalLinksConnection _newRemoteConnection]
  -[AMSUniversalLinksConnection proxy]
  -[AMSUniversalLinksConnection setQueue:]
  -[AMSUniversalLinksConnection connection]
  -[AMSUniversalLinksConnection queue]
  -[AMSUniversalLinksConnection dealloc]
  -[AMSUniversalLinksConnection _removeRemoteConnection]
  -[AMSUniversalLinksConnection _makeRemoteConnectionInterface]


AMSUniversalLinksUpdateResult : NSObject <NSSecureCoding>
 @property  BOOL success

  // class methods
  +[AMSUniversalLinksUpdateResult supportsSecureCoding]
  +[AMSUniversalLinksUpdateResult archiveClasses]

  // instance methods
  -[AMSUniversalLinksUpdateResult setSuccess:]
  -[AMSUniversalLinksUpdateResult success]
  -[AMSUniversalLinksUpdateResult initWithCoder:]
  -[AMSUniversalLinksUpdateResult encodeWithCoder:]


AMSUNUserNotificationStrategy : NSObject <AMSUserNotificationStrategy>
  // class methods
  +[AMSUNUserNotificationStrategy _centerForBundleId:]
  +[AMSUNUserNotificationStrategy _activeNotificationsWithCenterBundleId:]
  +[AMSUNUserNotificationStrategy _badgeBundleId:increment:error:]
  +[AMSUNUserNotificationStrategy _postNotification:bag:centerBundleId:]
  +[AMSUNUserNotificationStrategy _removeNotification:centerBundleId:]
  +[AMSUNUserNotificationStrategy _removeNotificationWithIdentifier:centerBundleId:logKey:scheduledOnly:]


AMSURLDelegateProxy : NSObject
 @property  AMSURLSession *session
 @property  id delegate

  // instance methods
  -[AMSURLDelegateProxy methodSignatureForSelector:]
  -[AMSURLDelegateProxy .cxx_destruct]
  -[AMSURLDelegateProxy setDelegate:]
  -[AMSURLDelegateProxy forwardingTargetForSelector:]
  -[AMSURLDelegateProxy respondsToSelector:]
  -[AMSURLDelegateProxy initWithSession:delegate:]
  -[AMSURLDelegateProxy delegate]
  -[AMSURLDelegateProxy invalidate]
  -[AMSURLDelegateProxy session]
  -[AMSURLDelegateProxy forwardInvocation:]


AMSURLAction : NSObject <NSSecureCoding>
 @property  AMSAuthenticateResult *authenticateResult
 @property  AMSDialogResult *dialogResult
 @property  NSDictionary *updatedHeaders
 @property  NSData *updatedBody
 @property  NSString *updatedMethod
 @property  long long actionType
 @property  NSString *updatedBuyParams
 @property  NSError *error
 @property  NSString *reason
 @property  NSURL *redirectURL
 @property  NSString *retryIdentifier

  // class methods
  +[AMSURLAction actionWithError:]
  +[AMSURLAction supportsSecureCoding]
  +[AMSURLAction retryAction]
  +[AMSURLAction redirectActionWithURL:]
  +[AMSURLAction proceedAction]

  // instance methods
  -[AMSURLAction redirectURL]
  -[AMSURLAction initWithType:]
  -[AMSURLAction initWithCoder:]
  -[AMSURLAction updatedHeaders]
  -[AMSURLAction dialogResult]
  -[AMSURLAction updatedBuyParams]
  -[AMSURLAction .cxx_destruct]
  -[AMSURLAction authenticateResult]
  -[AMSURLAction updatedMethod]
  -[AMSURLAction setUpdatedMethod:]
  -[AMSURLAction actionType]
  -[AMSURLAction setDialogResult:]
  -[AMSURLAction reason]
  -[AMSURLAction setAuthenticateResult:]
  -[AMSURLAction setUpdatedHeaders:]
  -[AMSURLAction setUpdatedBuyParams:]
  -[AMSURLAction setReason:]
  -[AMSURLAction setUpdatedBody:]
  -[AMSURLAction retryIdentifier]
  -[AMSURLAction updatedBody]
  -[AMSURLAction initWithType:error:reason:redirectURL:]
  -[AMSURLAction setRetryIdentifier:]
  -[AMSURLAction encodeWithCoder:]
  -[AMSURLAction error]


AMSURLParser : NSObject <AMSBagConsumer>
 @property  <AMSBagProtocol> *bag
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSURLParser bagKeySet]
  +[AMSURLParser bagSubProfileVersion]
  +[AMSURLParser bagSubProfile]
  +[AMSURLParser createBagForSubProfile]

  // instance methods
  -[AMSURLParser initWithBagContract:]
  -[AMSURLParser bagContract]
  -[AMSURLParser _commerceUIArrayForKey:]
  -[AMSURLParser _matchURL:toPatterns:]
  -[AMSURLParser _defaultWebAllowedForURL:]
  -[AMSURLParser _dynamicUIAllowedForURL:]
  -[AMSURLParser _legacyWebAllowedForURL:]
  -[AMSURLParser _waitForPromises:block:]
  -[AMSURLParser typeForCommerceUIURL:]
  -[AMSURLParser isCommerceUIURL:]
  -[AMSURLParser .cxx_destruct]
  -[AMSURLParser bag]
  -[AMSURLParser initWithBag:]
  -[AMSURLParser typeForURL:]
  -[AMSURLParser setBag:]
  -[AMSURLParser _correctURL:]


AMSURLProtocolHandler : NSObject <AMSURLHandling>
 @property  NSObject<OS_dispatch_queue> *responsePingQueue
 @property  NSObject<OS_dispatch_queue> *metricsQueue
 @property  AMSSigningSecurityService *signingService
 @property  AMSURLSession *session
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSURLProtocolHandler reversePushSamplingPercentageForTask:]
  +[AMSURLProtocolHandler _randomDouble]

  // instance methods
  -[AMSURLProtocolHandler _URLIsTrustedFromRequest:bag:]
  -[AMSURLProtocolHandler setResponsePingQueue:]
  -[AMSURLProtocolHandler handleResponse:task:]
  -[AMSURLProtocolHandler _setResponseCookiesFromResponse:taskInfo:]
  -[AMSURLProtocolHandler setMetricsQueue:]
  -[AMSURLProtocolHandler handleCompletionWithTask:metrics:decodedObject:]
  -[AMSURLProtocolHandler _pingURL:session:bag:]
  -[AMSURLProtocolHandler reportMetricsForContext:]
  -[AMSURLProtocolHandler _shouldEnableReversePushForTask:]
  -[AMSURLProtocolHandler decodeData:task:error:]
  -[AMSURLProtocolHandler didCreateTask:fromRequest:error:]
  -[AMSURLProtocolHandler signingService]
  -[AMSURLProtocolHandler metricsQueue]
  -[AMSURLProtocolHandler responsePingQueue]
  -[AMSURLProtocolHandler .cxx_destruct]
  -[AMSURLProtocolHandler setSession:]
  -[AMSURLProtocolHandler init]
  -[AMSURLProtocolHandler reconfigureNewRequest:originalTask:redirect:error:]
  -[AMSURLProtocolHandler session]


AMSURLRequest : NSMutableURLRequest <NSCopying, NSMutableCopying>
 @property  AMSURLRequestProperties *properties

  // class methods
  +[AMSURLRequest logableDescriptionForRequest:]

  // instance methods
  -[AMSURLRequest initWithRequest:]
  -[AMSURLRequest .cxx_destruct]
  -[AMSURLRequest initWithURL:cachePolicy:timeoutInterval:]
  -[AMSURLRequest properties]
  -[AMSURLRequest setProperties:]
  -[AMSURLRequest initWithRequest:properties:]
  -[AMSURLRequest initWithRequest:bag:]
  -[AMSURLRequest mutableCopyWithZone:]
  -[AMSURLRequest copyWithZone:]
  -[AMSURLRequest _initWithCFURLRequest:]


AMSURLRequestEncoder : NSObject <AMSBagConsumer, AMSRequestEncoding>
 @property  NSObject<OS_dispatch_queue> *internalQueue
 @property  {os_unfair_recursive_lock_s={os_unfair_lock_s=I}I} propertiesLock
 @property  long long encodeCount
 @property  AMSSigningSecurityService *signingService
 @property  NSURLSessionTask *parentTask
 @property  ACAccount *account
 @property  NSDictionary *additionalMetrics
 @property  long long anisetteType
 @property  <AMSBagProtocol> *bag
 @property  AMSProcessInfo *clientInfo
 @property  BOOL compressRequestBody
 @property  BOOL disableResponseDecoding
 @property  long long dialogOptions
 @property  BOOL enableRemoteSecuritySigning
 @property  NSArray *groupRequestAccounts
 @property  NSString *gsTokenIdentifier
 @property  BOOL includeClientVersions
 @property  AMSKeychainOptions *keychainOptions
 @property  NSString *logUUID
 @property  long long mescalType
 @property  long long requestEncoding
 @property  <AMSResponseDecoding> *responseDecoder
 @property  BOOL shouldSetCookiesFromResponse
 @property  BOOL shouldSetStorefrontFromResponse
 @property  BOOL urlKnownToBeTrusted
 @property  <AMSURLBagContract> *bagContract
 @property  long long dataEncoding
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSURLRequestEncoder bagKeySet]
  +[AMSURLRequestEncoder bagSubProfileVersion]
  +[AMSURLRequestEncoder bagSubProfile]
  +[AMSURLRequestEncoder createBagForSubProfile]

  // instance methods
  -[AMSURLRequestEncoder gsTokenIdentifier]
  -[AMSURLRequestEncoder mescalType]
  -[AMSURLRequestEncoder setCompressRequestBody:]
  -[AMSURLRequestEncoder dialogOptions]
  -[AMSURLRequestEncoder enableRemoteSecuritySigning]
  -[AMSURLRequestEncoder _addSecuritySigningHeadersToRequest:buyParams:bag:]
  -[AMSURLRequestEncoder requestWithMethod:bagURL:headers:parameters:]
  -[AMSURLRequestEncoder requestWithMethod:URL:parameters:error:]
  -[AMSURLRequestEncoder requestWithMethod:URLString:error:]
  -[AMSURLRequestEncoder setMescalType:]
  -[AMSURLRequestEncoder dataEncoding]
  -[AMSURLRequestEncoder responseDecoder]
  -[AMSURLRequestEncoder _methodStringFromMethod:]
  -[AMSURLRequestEncoder setGroupRequestAccounts:]
  -[AMSURLRequestEncoder includeClientVersions]
  -[AMSURLRequestEncoder setDataEncoding:]
  -[AMSURLRequestEncoder _personalizeKeychainOptionsForAccount:]
  -[AMSURLRequestEncoder setEnableRemoteSecuritySigning:]
  -[AMSURLRequestEncoder requestByEncodingRequest:parameters:error:]
  -[AMSURLRequestEncoder shouldSetCookiesFromResponse]
  -[AMSURLRequestEncoder encodeCount]
  -[AMSURLRequestEncoder additionalMetrics]
  -[AMSURLRequestEncoder keychainOptions]
  -[AMSURLRequestEncoder requestByEncodingRequest:parameters:]
  -[AMSURLRequestEncoder setParentTask:]
  -[AMSURLRequestEncoder setEncodeCount:]
  -[AMSURLRequestEncoder disableResponseDecoding]
  -[AMSURLRequestEncoder requestWithMethod:URL:error:]
  -[AMSURLRequestEncoder compressRequestBody]
  -[AMSURLRequestEncoder requestWithMethod:URLString:parameters:error:]
  -[AMSURLRequestEncoder setKeychainOptions:]
  -[AMSURLRequestEncoder propertiesLock]
  -[AMSURLRequestEncoder initWithBagContract:]
  -[AMSURLRequestEncoder groupRequestAccounts]
  -[AMSURLRequestEncoder bagContract]
  -[AMSURLRequestEncoder setBagContract:]
  -[AMSURLRequestEncoder anisetteType]
  -[AMSURLRequestEncoder setShouldSetStorefrontFromResponse:]
  -[AMSURLRequestEncoder signingService]
  -[AMSURLRequestEncoder setIncludeClientVersions:]
  -[AMSURLRequestEncoder requestWithMethod:URL:parameters:]
  -[AMSURLRequestEncoder setShouldSetCookiesFromResponse:]
  -[AMSURLRequestEncoder requestEncoding]
  -[AMSURLRequestEncoder parentTask]
  -[AMSURLRequestEncoder setRequestEncoding:]
  -[AMSURLRequestEncoder setAdditionalMetrics:]
  -[AMSURLRequestEncoder setDialogOptions:]
  -[AMSURLRequestEncoder setInternalQueue:]
  -[AMSURLRequestEncoder setAnisetteType:]
  -[AMSURLRequestEncoder shouldSetStorefrontFromResponse]
  -[AMSURLRequestEncoder requestWithMethod:bagURL:parameters:error:]
  -[AMSURLRequestEncoder requestWithMethod:bagURL:parameters:]
  -[AMSURLRequestEncoder setAccount:]
  -[AMSURLRequestEncoder setGsTokenIdentifier:]
  -[AMSURLRequestEncoder account]
  -[AMSURLRequestEncoder setDisableResponseDecoding:]
  -[AMSURLRequestEncoder setResponseDecoder:]
  -[AMSURLRequestEncoder setUrlKnownToBeTrusted:]
  -[AMSURLRequestEncoder setLogUUID:]
  -[AMSURLRequestEncoder requestWithMethod:URL:headers:parameters:]
  -[AMSURLRequestEncoder setClientInfo:]
  -[AMSURLRequestEncoder .cxx_destruct]
  -[AMSURLRequestEncoder logUUID]
  -[AMSURLRequestEncoder bag]
  -[AMSURLRequestEncoder clientInfo]
  -[AMSURLRequestEncoder initWithBag:]
  -[AMSURLRequestEncoder urlKnownToBeTrusted]
  -[AMSURLRequestEncoder init]
  -[AMSURLRequestEncoder internalQueue]
  -[AMSURLRequestEncoder setBag:]
  -[AMSURLRequestEncoder requestWithMethod:bagURL:error:]


AMSURLRequestProperties : NSObject <NSCopying>
 @property  ACAccount *account
 @property  NSDictionary *additionalMetrics
 @property  long long anisetteType
 @property  <AMSBagProtocol> *bag
 @property  AMSProcessInfo *clientInfo
 @property  long long dialogOptions
 @property  BOOL disableBiometricsResponseHandling
 @property  BOOL disableLoadURLMetrics
 @property  BOOL disableResponseDecoding
 @property  NSString *gsTokenIdentifier
 @property  AMSKeychainOptions *keychainOptions
 @property  BOOL knownToBeTrusted
 @property  NSString *logUUID
 @property  long long maxRetryCount
 @property  long long mescalType
 @property  AMSPurchaseInfo *purchaseInfo
 @property  BOOL remoteSecuritySigningEnabled
 @property  <AMSResponseDecoding> *responseDecoder
 @property  long long reversePushType
 @property  BOOL shouldSetCookiesFromResponse
 @property  BOOL shouldSetStorefrontFromResponse
 @property  NSMutableDictionary *userInfo

  // instance methods
  -[AMSURLRequestProperties gsTokenIdentifier]
  -[AMSURLRequestProperties mescalType]
  -[AMSURLRequestProperties dialogOptions]
  -[AMSURLRequestProperties setMescalType:]
  -[AMSURLRequestProperties responseDecoder]
  -[AMSURLRequestProperties maxRetryCount]
  -[AMSURLRequestProperties shouldSetCookiesFromResponse]
  -[AMSURLRequestProperties additionalMetrics]
  -[AMSURLRequestProperties keychainOptions]
  -[AMSURLRequestProperties setMaxRetryCount:]
  -[AMSURLRequestProperties disableResponseDecoding]
  -[AMSURLRequestProperties setKeychainOptions:]
  -[AMSURLRequestProperties anisetteType]
  -[AMSURLRequestProperties setShouldSetStorefrontFromResponse:]
  -[AMSURLRequestProperties setUserInfo:]
  -[AMSURLRequestProperties setShouldSetCookiesFromResponse:]
  -[AMSURLRequestProperties setAdditionalMetrics:]
  -[AMSURLRequestProperties setDialogOptions:]
  -[AMSURLRequestProperties setAnisetteType:]
  -[AMSURLRequestProperties shouldSetStorefrontFromResponse]
  -[AMSURLRequestProperties setAccount:]
  -[AMSURLRequestProperties setGsTokenIdentifier:]
  -[AMSURLRequestProperties account]
  -[AMSURLRequestProperties setDisableResponseDecoding:]
  -[AMSURLRequestProperties setResponseDecoder:]
  -[AMSURLRequestProperties setLogUUID:]
  -[AMSURLRequestProperties setClientInfo:]
  -[AMSURLRequestProperties remoteSecuritySigningEnabled]
  -[AMSURLRequestProperties .cxx_destruct]
  -[AMSURLRequestProperties logUUID]
  -[AMSURLRequestProperties bag]
  -[AMSURLRequestProperties clientInfo]
  -[AMSURLRequestProperties init]
  -[AMSURLRequestProperties setDisableLoadURLMetrics:]
  -[AMSURLRequestProperties disableLoadURLMetrics]
  -[AMSURLRequestProperties disableBiometricsResponseHandling]
  -[AMSURLRequestProperties setDisableBiometricsResponseHandling:]
  -[AMSURLRequestProperties knownToBeTrusted]
  -[AMSURLRequestProperties setPurchaseInfo:]
  -[AMSURLRequestProperties setKnownToBeTrusted:]
  -[AMSURLRequestProperties setRemoteSecuritySigningEnabled:]
  -[AMSURLRequestProperties userInfo]
  -[AMSURLRequestProperties purchaseInfo]
  -[AMSURLRequestProperties setBag:]
  -[AMSURLRequestProperties copyWithZone:]
  -[AMSURLRequestProperties reversePushType]
  -[AMSURLRequestProperties setReversePushType:]


AMSURLResponseDecoder : NSObject <AMSResponseDecoding>
 @property  NSIndexSet *allowedStatusCodes
 @property  NSSet *allowedContentTypes

  // instance methods
  -[AMSURLResponseDecoder allowedContentTypes]
  -[AMSURLResponseDecoder resultFromResult:error:]
  -[AMSURLResponseDecoder .cxx_destruct]
  -[AMSURLResponseDecoder allowedStatusCodes]
  -[AMSURLResponseDecoder init]
  -[AMSURLResponseDecoder setAllowedStatusCodes:]
  -[AMSURLResponseDecoder setAllowedContentTypes:]


AMSURLResult : NSObject
 @property  NSData *data
 @property  NSString *logUUID
 @property  NSURLSessionTaskMetrics *taskMetrics
 @property  NSURLResponse *response
 @property  NSURLSessionTask *task
 @property  id object
 @property  NSString *responseCorrelationId
 @property  long long responseStatusCode
 @property  NSDictionary *responseHeaders

  // instance methods
  -[AMSURLResult initWithTaskInfo:object:]
  -[AMSURLResult responseHeaders]
  -[AMSURLResult initWithResult:]
  -[AMSURLResult responseCorrelationId]
  -[AMSURLResult setLogUUID:]
  -[AMSURLResult .cxx_destruct]
  -[AMSURLResult logUUID]
  -[AMSURLResult taskMetrics]
  -[AMSURLResult data]
  -[AMSURLResult initWithTask:response:data:object:]
  -[AMSURLResult setTask:]
  -[AMSURLResult object]
  -[AMSURLResult response]
  -[AMSURLResult responseStatusCode]
  -[AMSURLResult task]
  -[AMSURLResult setData:]
  -[AMSURLResult setObject:]
  -[AMSURLResult setResponse:]


AMSURLSecurityPolicy : NSObject
 @property  long long trustMode
 @property  NSSet *pinnedCertificates

  // class methods
  +[AMSURLSecurityPolicy defaultPolicy]

  // instance methods
  -[AMSURLSecurityPolicy setTrustMode:]
  -[AMSURLSecurityPolicy trustMode]
  -[AMSURLSecurityPolicy initWithTrustMode:]
  -[AMSURLSecurityPolicy initWithTrustMode:pinnedCertificated:]
  -[AMSURLSecurityPolicy _evaluateExtendedValidationWithTrust:forTask:]
  -[AMSURLSecurityPolicy _evaluatePinnedCertificatesWithTrust:forTask:]
  -[AMSURLSecurityPolicy _shouldSkipValidation]
  -[AMSURLSecurityPolicy pinnedCertificates]
  -[AMSURLSecurityPolicy evaluateTrust:forTask:]
  -[AMSURLSecurityPolicy setPinnedCertificates:]
  -[AMSURLSecurityPolicy .cxx_destruct]


AMSURLSession : NSObject <NSURLSessionDelegate, NSURLSessionTaskDelegate, NSURLSessionDataDelegate>
 @property  AMSURLDelegateProxy *delegateProxy
 @property  BOOL invalidated
 @property  AMSURLSecurityPolicy *securityPolicy
 @property  NSURLSessionConfiguration *configuration
 @property  <NSURLSessionDelegate><AMSURLProtocolDelegate> *delegate
 @property  NSOperationQueue *delegateQueue
 @property  <AMSURLHandling> *protocolHandler
 @property  <AMSRequestEncoding> *requestEncoder
 @property  <AMSResponseDecoding> *responseDecoder
 @property  NSURLSession *session
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSURLSession imageSession]
  +[AMSURLSession defaultSession]
  +[AMSURLSession sharedAuthKitSession]

  // instance methods
  -[AMSURLSession responseDecoder]
  -[AMSURLSession setProtocolHandler:]
  -[AMSURLSession delegateQueue]
  -[AMSURLSession requestEncoder]
  -[AMSURLSession URLSession:dataTask:didReceiveResponse:completionHandler:]
  -[AMSURLSession setResponseDecoder:]
  -[AMSURLSession finishTasksAndInvalidate]
  -[AMSURLSession URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:]
  -[AMSURLSession configuration]
  -[AMSURLSession .cxx_destruct]
  -[AMSURLSession dataTaskWithRequest:completionHandler:]
  -[AMSURLSession URLSession:task:didFinishCollectingMetrics:]
  -[AMSURLSession setDelegate:]
  -[AMSURLSession dataTaskPromiseWithRequest:]
  -[AMSURLSession invalidateAndCancel]
  -[AMSURLSession setDelegateProxy:]
  -[AMSURLSession init]
  -[AMSURLSession URLSession:dataTask:didReceiveData:]
  -[AMSURLSession initWithConfiguration:delegate:delegateQueue:]
  -[AMSURLSession dataTaskWithRequest:]
  -[AMSURLSession _formatError:task:decodedObject:]
  -[AMSURLSession setInvalidated:]
  -[AMSURLSession _prepareRequest:properties:error:]
  -[AMSURLSession URLSession:task:didCompleteWithError:]
  -[AMSURLSession setSecurityPolicy:]
  -[AMSURLSession delegateProxy]
  -[AMSURLSession setRequestEncoder:]
  -[AMSURLSession dataTaskPromiseWithRequestPromise:]
  -[AMSURLSession _createSharedDataForTask:properties:completionHandler:]
  -[AMSURLSession initWithConfiguration:]
  -[AMSURLSession protocolHandler]
  -[AMSURLSession delegate]
  -[AMSURLSession _retryTask:action:error:]
  -[AMSURLSession _completeTask:decodedObject:error:]
  -[AMSURLSession dealloc]
  -[AMSURLSession invalidated]
  -[AMSURLSession securityPolicy]
  -[AMSURLSession session]
  -[AMSURLSession URLSession:task:didReceiveChallenge:completionHandler:]
  -[AMSURLSession _handleURLAction:task:error:]


AMSURLTaskInfo : NSObject
 @property  {os_unfair_recursive_lock_s={os_unfair_lock_s=I}I} taskLock
 @property  NSObject<OS_dispatch_queue> *taskQueue
 @property  @? completionBlock
 @property  NSData *data
 @property  NSError *error
 @property  NSURLSessionTaskMetrics *metrics
 @property  unsigned long previousAuthorizationCredentialSource
 @property  AMSURLRequestProperties *properties
 @property  AMSURLAction *receivedAction
 @property  NSURLResponse *response
 @property  long long retryCount
 @property  NSSet *retryIdentifiers
 @property  AMSURLSession *session
 @property  NSURLSessionTask *task

  // class methods
  +[AMSURLTaskInfo removeTaskInfoForTask:]
  +[AMSURLTaskInfo sharedTaskStore]
  +[AMSURLTaskInfo sharedTaskQueue]
  +[AMSURLTaskInfo taskInfoForTask:]
  +[AMSURLTaskInfo createTaskInfoForTask:]

  // instance methods
  -[AMSURLTaskInfo setReceivedAction:]
  -[AMSURLTaskInfo initWithTask:]
  -[AMSURLTaskInfo .cxx_destruct]
  -[AMSURLTaskInfo createMetricsContextForDecodedObject:]
  -[AMSURLTaskInfo properties]
  -[AMSURLTaskInfo taskLock]
  -[AMSURLTaskInfo data]
  -[AMSURLTaskInfo setSession:]
  -[AMSURLTaskInfo taskQueue]
  -[AMSURLTaskInfo assertHasExclusiveAccess]
  -[AMSURLTaskInfo retryIdentifiers]
  -[AMSURLTaskInfo setMetrics:]
  -[AMSURLTaskInfo performSyncBlockWithExclusiveAccess:]
  -[AMSURLTaskInfo setProperties:]
  -[AMSURLTaskInfo performSyncBlock:]
  -[AMSURLTaskInfo appendData:]
  -[AMSURLTaskInfo response]
  -[AMSURLTaskInfo assertIsOnPrivateQueue]
  -[AMSURLTaskInfo metrics]
  -[AMSURLTaskInfo task]
  -[AMSURLTaskInfo previousAuthorizationCredentialSource]
  -[AMSURLTaskInfo migrateFromTaskInfo:]
  -[AMSURLTaskInfo completionBlock]
  -[AMSURLTaskInfo setRetryCount:]
  -[AMSURLTaskInfo addRetryIdentifier:]
  -[AMSURLTaskInfo retryCount]
  -[AMSURLTaskInfo setCompletionBlock:]
  -[AMSURLTaskInfo setPreviousAuthorizationCredentialSource:]
  -[AMSURLTaskInfo session]
  -[AMSURLTaskInfo performAsyncBlock:]
  -[AMSURLTaskInfo setError:]
  -[AMSURLTaskInfo error]
  -[AMSURLTaskInfo receivedAction]
  -[AMSURLTaskInfo setResponse:]


AMSCoreOptionsBox : NSObject
 @property  {Options=^^?{shared_ptr<AMSCore::Options::OptionsImp>=^{OptionsImp}^{__shared_weak_count}}} options

  // instance methods
  -[AMSCoreOptionsBox options]
  -[AMSCoreOptionsBox .cxx_construct]
  -[AMSCoreOptionsBox setOptions:]
  -[AMSCoreOptionsBox .cxx_destruct]
  -[AMSCoreOptionsBox initWithProcessInfo:]


AMSUserAgent : NSObject
 @property  AMSMappedBundleInfo *bundleInfo
 @property  AMSProcessInfo *processInfo
 @property  AMSCoreOptionsBox *optionsBox
 @property  NSString *clientName
 @property  NSString *clientVersion

  // class methods
  +[AMSUserAgent _sharedCache]
  +[AMSUserAgent cachedUserAgentForBundleIdentifier:]
  +[AMSUserAgent cacheUserAgent:forBundleIdentifier:]
  +[AMSUserAgent userAgentForProcessInfo:]

  // instance methods
  -[AMSUserAgent processInfo]
  -[AMSUserAgent bundleInfo]
  -[AMSUserAgent clientVersion]
  -[AMSUserAgent compile]
  -[AMSUserAgent _compileAndShouldCache:]
  -[AMSUserAgent _userAgentSuffix]
  -[AMSUserAgent _iOSComponentClientInfo]
  -[AMSUserAgent .cxx_destruct]
  -[AMSUserAgent _iOSComponentHardwarePlatform]
  -[AMSUserAgent initWithProcessInfo:]
  -[AMSUserAgent _sharedComponentFairPlayDeviceType]
  -[AMSUserAgent _iOSComponentBuildVersion]
  -[AMSUserAgent optionsBox]
  -[AMSUserAgent _sharedComponentParentheticalWithFairPlayDeviceType:]
  -[AMSUserAgent _iOSComponentProductVersion]
  -[AMSUserAgent _sharedComponentParentheticalWithFairPlayDeviceType:productType:]
  -[AMSUserAgent setClientName:]
  -[AMSUserAgent setClientVersion:]
  -[AMSUserAgent _sharedComponentFrameworkVersion]
  -[AMSUserAgent _iOSComponentDeviceModel]
  -[AMSUserAgent clientName]


AMSUserNotification : NSObject <AMSBagConsumer>
 @property  BOOL anonymizeMetrics
 @property  long long intent
 @property  NSString *categoryIdentifier
 @property  BOOL shouldSuppressDefaultAction
 @property  NSString *threadIdentifier
 @property  ACAccount *account
 @property  NSURL *artworkUrl
 @property  NSURL *videoUrl
 @property  NSArray *buttonActions
 @property  NSString *centerBundleIdentifier
 @property  AMSUserNotificationAction *defaultAction
 @property  BOOL explicitContent
 @property  NSString *identifier
 @property  NSString *informativeText
 @property  NSString *logKey
 @property  NSDictionary *metricsEvent
 @property  NSDate *scheduledTime
 @property  NSSet *subsections
 @property  NSString *subtitle
 @property  NSString *title
 @property  NSMutableDictionary *userInfo
 @property  unsigned long interruptionLevel
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AMSUserNotification bagKeySet]
  +[AMSUserNotification bagSubProfileVersion]
  +[AMSUserNotification bagSubProfile]
  +[AMSUserNotification handleServiceExtensionNotificationRequest:bag:withContentHandler:]
  +[AMSUserNotification _serverFriendlyFormatter]
  +[AMSUserNotification _identifierFromPayload:]
  +[AMSUserNotification shouldHandleNotificationResponse:]
  +[AMSUserNotification _canParseNotificationWithIdentifier:userInfo:]
  +[AMSUserNotification openAppUsingBundleIdentifier:]
  +[AMSUserNotification explicitEnabledForCenterBundleID:]
  +[AMSUserNotification _cachedImagePathForIdentifier:assetURL:]
  +[AMSUserNotification _downloadAssetAtUrl:withIdentifier:logKey:bag:]
  +[AMSUserNotification handleNotificationResponse:bag:]
  +[AMSUserNotification handleNotificationResponse:bagContract:]
  +[AMSUserNotification notificationCenter:didChangeSettings:bag:]
  +[AMSUserNotification notificationCenter:openSettingsForNotification:bag:]
  +[AMSUserNotification shouldHandleServiceExtensionNotificationRequest:]
  +[AMSUserNotification shouldDeleteNotificationForPayload:outIdentifier:scheduledOnly:]
  +[AMSUserNotification notificationWithPayload:andConfig:]
  +[AMSUserNotification createBagForSubProfile]

  // instance methods
  -[AMSUserNotification setInterruptionLevel:]
  -[AMSUserNotification setCategoryIdentifier:]
  -[AMSUserNotification defaultAction]
  -[AMSUserNotification setThreadIdentifier:]
  -[AMSUserNotification setUserInfo:]
  -[AMSUserNotification setAccount:]
  -[AMSUserNotification account]
  -[AMSUserNotification createUNNotificationContent]
  -[AMSUserNotification createUNNotificationRequestFromContent:]
  -[AMSUserNotification artworkUrl]
  -[AMSUserNotification setTitle:]
  -[AMSUserNotification logKey]
  -[AMSUserNotification videoUrl]
  -[AMSUserNotification setDefaultAction:]
  -[AMSUserNotification setArtworkUrl:]
  -[AMSUserNotification setVideoUrl:]
  -[AMSUserNotification scheduledTime]
  -[AMSUserNotification initWithTitle:]
  -[AMSUserNotification anonymizeMetrics]
  -[AMSUserNotification _generatePayloadWithBase:]
  -[AMSUserNotification shouldSuppressDefaultAction]
  -[AMSUserNotification determineSelectedActionFromResponse:error:]
  -[AMSUserNotification handleSelectedButton:bag:]
  -[AMSUserNotification centerBundleIdentifier]
  -[AMSUserNotification explicitContent]
  -[AMSUserNotification .cxx_destruct]
  -[AMSUserNotification initWithNSUserNotification:]
  -[AMSUserNotification handleSelectedButton:bagContract:]
  -[AMSUserNotification createNSUserNotification]
  -[AMSUserNotification createUNNotificationActions]
  -[AMSUserNotification setExplicitContent:]
  -[AMSUserNotification setScheduledTime:]
  -[AMSUserNotification setSubsections:]
  -[AMSUserNotification setAnonymizeMetrics:]
  -[AMSUserNotification addButtonAction:]
  -[AMSUserNotification setSubtitle:]
  -[AMSUserNotification interruptionLevel]
  -[AMSUserNotification setShouldSuppressDefaultAction:]
  -[AMSUserNotification init]
  -[AMSUserNotification metricsEvent]
  -[AMSUserNotification identifier]
  -[AMSUserNotification categoryIdentifier]
  -[AMSUserNotification setMetricsEvent:]
  -[AMSUserNotification subtitle]
  -[AMSUserNotification title]
  -[AMSUserNotification buttonActions]
  -[AMSUserNotification threadIdentifier]
  -[AMSUserNotification setIdentifier:]
  -[AMSUserNotification intent]
  -[AMSUserNotification setIntent:]
  -[AMSUserNotification userInfo]
  -[AMSUserNotification informativeText]
  -[AMSUserNotification initWithTitle:intent:]
  -[AMSUserNotification setLogKey:]
  -[AMSUserNotification setCenterBundleIdentifier:]
  -[AMSUserNotification initWithPayload:andConfig:]
  -[AMSUserNotification subsections]
  -[AMSUserNotification setInformativeText:]
  -[AMSUserNotification initWithUNNotification:]
  -[AMSUserNotification setButtonActions:]


AMSUserNotificationAction : NSObject
 @property  unsigned long un_ActionOptions
 @property  NSString *identifier
 @property  NSURL *defaultURL
 @property  NSString *title
 @property  NSURLRequest *request
 @property  NSString *systemImageName
 @property  AMSMetricsEvent *metricsEvent
 @property  NSDictionary *userInfo
 @property  long long style

  // instance methods
  -[AMSUserNotificationAction setRequest:]
  -[AMSUserNotificationAction setUserInfo:]
  -[AMSUserNotificationAction setTitle:]
  -[AMSUserNotificationAction initWithTitle:style:]
  -[AMSUserNotificationAction initWithTitle:]
  -[AMSUserNotificationAction un_ActionOptions]
  -[AMSUserNotificationAction .cxx_destruct]
  -[AMSUserNotificationAction initWithUserInfoAction:]
  -[AMSUserNotificationAction generateUserInfoAction]
  -[AMSUserNotificationAction setStyle:]
  -[AMSUserNotificationAction systemImageName]
  -[AMSUserNotificationAction init]
  -[AMSUserNotificationAction metricsEvent]
  -[AMSUserNotificationAction request]
  -[AMSUserNotificationAction identifier]
  -[AMSUserNotificationAction setMetricsEvent:]
  -[AMSUserNotificationAction setSystemImageName:]
  -[AMSUserNotificationAction title]
  -[AMSUserNotificationAction setIdentifier:]
  -[AMSUserNotificationAction userInfo]
  -[AMSUserNotificationAction setDefaultURL:]
  -[AMSUserNotificationAction defaultURL]
  -[AMSUserNotificationAction style]


AMSUserNotificationAuthorizationOptions : NSObject <NSCopying, NSSecureCoding>
 @property  unsigned long authorizationOptions
 @property  NSDictionary *metricsOverlay
 @property  BOOL userInitiated

  // class methods
  +[AMSUserNotificationAuthorizationOptions supportsSecureCoding]

  // instance methods
  -[AMSUserNotificationAuthorizationOptions authorizationOptions]
  -[AMSUserNotificationAuthorizationOptions setUserInitiated:]
  -[AMSUserNotificationAuthorizationOptions initWithCoder:]
  -[AMSUserNotificationAuthorizationOptions .cxx_destruct]
  -[AMSUserNotificationAuthorizationOptions userInitiated]
  -[AMSUserNotificationAuthorizationOptions initWithOptionsDictionary:]
  -[AMSUserNotificationAuthorizationOptions init]
  -[AMSUserNotificationAuthorizationOptions isEqual:]
  -[AMSUserNotificationAuthorizationOptions optionsDictionary]
  -[AMSUserNotificationAuthorizationOptions setAuthorizationOptions:]
  -[AMSUserNotificationAuthorizationOptions metricsOverlay]
  -[AMSUserNotificationAuthorizationOptions setMetricsOverlay:]
  -[AMSUserNotificationAuthorizationOptions copyWithZone:]
  -[AMSUserNotificationAuthorizationOptions encodeWithCoder:]


AMSUserNotificationAuthorizationResult : NSObject <NSSecureCoding>
 @property  long long authorizationStatus
 @property  AMSEngagementRequest *request

  // class methods
  +[AMSUserNotificationAuthorizationResult supportsSecureCoding]

  // instance methods
  -[AMSUserNotificationAuthorizationResult setRequest:]
  -[AMSUserNotificationAuthorizationResult initWithCoder:]
  -[AMSUserNotificationAuthorizationResult setAuthorizationStatus:]
  -[AMSUserNotificationAuthorizationResult authorizationStatus]
  -[AMSUserNotificationAuthorizationResult .cxx_destruct]
  -[AMSUserNotificationAuthorizationResult request]
  -[AMSUserNotificationAuthorizationResult encodeWithCoder:]


AMSUserNotificationAuthorizationTask : AMSTask
 @property  UNUserNotificationCenter *notificationCenter
 @property  NSString *bundleIdentifier
 @property  <AMSUserNotificationAuthorizationDelegate> *delegate
 @property  AMSUserNotificationAuthorizationOptions *options

  // class methods
  +[AMSUserNotificationAuthorizationTask recordEngagementEventWithBundleIdentifier:options:]
  +[AMSUserNotificationAuthorizationTask _findEngagementRequestInResponse:]
  +[AMSUserNotificationAuthorizationTask engagementRequestForFullSheet]

  // instance methods
  -[AMSUserNotificationAuthorizationTask notificationCenter]
  -[AMSUserNotificationAuthorizationTask setNotificationCenter:]
  -[AMSUserNotificationAuthorizationTask bundleIdentifier]
  -[AMSUserNotificationAuthorizationTask options]
  -[AMSUserNotificationAuthorizationTask setOptions:]
  -[AMSUserNotificationAuthorizationTask .cxx_destruct]
  -[AMSUserNotificationAuthorizationTask _startEngagementAuthorizationWithResult:]
  -[AMSUserNotificationAuthorizationTask initWithBundleIdentifier:options:]
  -[AMSUserNotificationAuthorizationTask _presentDialogForUserInitiatedWithCompletion]
  -[AMSUserNotificationAuthorizationTask setDelegate:]
  -[AMSUserNotificationAuthorizationTask delegate]
  -[AMSUserNotificationAuthorizationTask requestAuthorization]


AMSUserNotificationCenter : NSObject
 @property  <AMSUserNotificationStrategy> *strategy

  // class methods
  +[AMSUserNotificationCenter _determineStrategyForBundleId:]
  +[AMSUserNotificationCenter activeNotificationsWithCenterBundleId:]
  +[AMSUserNotificationCenter removeNotification:centerBundleId:]
  +[AMSUserNotificationCenter badgeBundleId:badgeId:enabled:error:]
  +[AMSUserNotificationCenter postNotification:bag:centerBundleId:]
  +[AMSUserNotificationCenter removeNotificationWithIdentifier:centerBundleId:logKey:scheduledOnly:]

  // instance methods
  -[AMSUserNotificationCenter strategy]
  -[AMSUserNotificationCenter .cxx_destruct]


AMSUserNotificationMetricsEvent : AMSMetricsEvent
 @property  NSString *displayScheduledTime
 @property  NSString *errorDescription
 @property  BOOL postedSuccessfully

  // class methods
  +[AMSUserNotificationMetricsEvent _centerForBundleId:]
  +[AMSUserNotificationMetricsEvent eventFromMetricsDictionary:centerBundleId:]
  +[AMSUserNotificationMetricsEvent eventForPostedNotification:]
  +[AMSUserNotificationMetricsEvent eventForSettingsChangedWithSettings:bundleID:account:]
  +[AMSUserNotificationMetricsEvent _stringFromInteruptionLevel:]
  +[AMSUserNotificationMetricsEvent eventFromNotificationCenterSettings:centerBundleId:]
  +[AMSUserNotificationMetricsEvent eventForContentEngagementWithNotification:]
  +[AMSUserNotificationMetricsEvent eventForVideoPlaybackForNotification:]
  +[AMSUserNotificationMetricsEvent eventForSettingsChangedWithSettings:bundleID:]
  +[AMSUserNotificationMetricsEvent eventForBadgingForMetricsDictionary:bundleID:]

  // instance methods
  -[AMSUserNotificationMetricsEvent errorDescription]
  -[AMSUserNotificationMetricsEvent setDisplayScheduledTime:]
  -[AMSUserNotificationMetricsEvent postedSuccessfully]
  -[AMSUserNotificationMetricsEvent setPostedSuccessfully:]
  -[AMSUserNotificationMetricsEvent initWithTopic:settings:notificationSettingsForTopic:centerBundleId:]
  -[AMSUserNotificationMetricsEvent _stringFromNotificationSetting:]
  -[AMSUserNotificationMetricsEvent displayScheduledTime]
  -[AMSUserNotificationMetricsEvent setErrorDescription:]
  -[AMSUserNotificationMetricsEvent _createDisplayCriteriaFromSettings:]


AMSVersionComparator : NSObject
  // class methods
  +[AMSVersionComparator isVersionSupported:requiredVersion:]
  +[AMSVersionComparator _sanitizedVersionStringForVersionString:]


AMSXDDevice : NSObject <NSSecureCoding>
 @property  NSDictionary *JSONDictionary
 @property  NSString *identifier
 @property  long long type

  // class methods
  +[AMSXDDevice supportsSecureCoding]
  +[AMSXDDevice activePairedDevices]
  +[AMSXDDevice deviceFromIdentifier:]
  +[AMSXDDevice allPairedDevices]

  // instance methods
  -[AMSXDDevice initWithCoder:]
  -[AMSXDDevice setType:]
  -[AMSXDDevice .cxx_destruct]
  -[AMSXDDevice initWithDeviceID:type:]
  -[AMSXDDevice initWithJSONDictionary:]
  -[AMSXDDevice JSONDictionary]
  -[AMSXDDevice identifier]
  -[AMSXDDevice type]
  -[AMSXDDevice encodeWithCoder:]


AMSXDMessage : NSObject <NSSecureCoding, NSCopying>
 @property  NSString *objectClassName
 @property  BOOL isReply
 @property  NSString *messageID
 @property  NSDate *receiptDate
 @property  NSDictionary *JSONDictionary
 @property  AMSXDDevice *destination
 @property  double expirationInterval
 @property  NSString *identifier
 @property  BOOL expired
 @property  NSString *logKey
 @property  <NSObject><NSSecureCoding> *object
 @property  AMSXDDevice *origin
 @property  long long purpose

  // class methods
  +[AMSXDMessage supportsSecureCoding]
  +[AMSXDMessage _allowedClassesForDecoding]
  +[AMSXDMessage _allowedClassNamesForDecoding]
  +[AMSXDMessage messageFromProtoMessage:]

  // instance methods
  -[AMSXDMessage expirationInterval]
  -[AMSXDMessage purpose]
  -[AMSXDMessage setPurpose:]
  -[AMSXDMessage initWithCoder:]
  -[AMSXDMessage setDestination:]
  -[AMSXDMessage origin]
  -[AMSXDMessage logKey]
  -[AMSXDMessage setOrigin:]
  -[AMSXDMessage messageID]
  -[AMSXDMessage .cxx_destruct]
  -[AMSXDMessage isExpired]
  -[AMSXDMessage createProtoMessage]
  -[AMSXDMessage initWithJSONDictionary:]
  -[AMSXDMessage setMessageID:]
  -[AMSXDMessage objectClassName]
  -[AMSXDMessage setObjectClassName:]
  -[AMSXDMessage setReceiptDate:]
  -[AMSXDMessage destination]
  -[AMSXDMessage setIsReply:]
  -[AMSXDMessage setExpirationInterval:]
  -[AMSXDMessage JSONDictionary]
  -[AMSXDMessage identifier]
  -[AMSXDMessage isReply]
  -[AMSXDMessage object]
  -[AMSXDMessage setIdentifier:]
  -[AMSXDMessage initWithIdentifier:destination:purpose:object:]
  -[AMSXDMessage setLogKey:]
  -[AMSXDMessage receiptDate]
  -[AMSXDMessage copyWithZone:]
  -[AMSXDMessage setObject:]
  -[AMSXDMessage encodeWithCoder:]


AMSXDProtoMessage : PBCodable <NSCopying>
 @property  NSData *messageData
 @property  BOOL hasLogKey
 @property  NSString *logKey

  // instance methods
  -[AMSXDProtoMessage messageData]
  -[AMSXDProtoMessage mergeFrom:]
  -[AMSXDProtoMessage logKey]
  -[AMSXDProtoMessage setMessageData:]
  -[AMSXDProtoMessage .cxx_destruct]
  -[AMSXDProtoMessage hasLogKey]
  -[AMSXDProtoMessage dictionaryRepresentation]
  -[AMSXDProtoMessage writeTo:]
  -[AMSXDProtoMessage isEqual:]
  -[AMSXDProtoMessage copyTo:]
  -[AMSXDProtoMessage readFrom:]
  -[AMSXDProtoMessage setLogKey:]
  -[AMSXDProtoMessage copyWithZone:]


AMSCURLSessionDelegate : NSObject <NSURLSessionDelegate, NSURLSessionTaskDelegate, NSURLSessionDataDelegate>
 @property  ^v provider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AMSCURLSessionDelegate setProvider:]
  -[AMSCURLSessionDelegate initWithProvider:]
  -[AMSCURLSessionDelegate URLSession:dataTask:didReceiveData:]
  -[AMSCURLSessionDelegate URLSession:task:didCompleteWithError:]
  -[AMSCURLSessionDelegate provider]


ACAccount(AppleMediaServices)
	// class methods
	+[ACAccount(AppleMediaServices) _getSetCookiesForResponse:]
	+[ACAccount(AppleMediaServices) _defaultValueForAccountFlag:]
	+[ACAccount(AppleMediaServices) _isAccountFlagValue:validForAccountFlag:]
	+[ACAccount(AppleMediaServices) _isAccountFlagWritable:]
	+[ACAccount(AppleMediaServices) _getSetGlobalCookiesForResponse:]

	// instance methods
	-[ACAccount(AppleMediaServices) ams_allStorefronts]
	-[ACAccount(AppleMediaServices) ams_biometricsState]
	-[ACAccount(AppleMediaServices) ams_lastAuthenticationCredentialSource]
	-[ACAccount(AppleMediaServices) ams_setLastAuthenticationCredentialSource:]
	-[ACAccount(AppleMediaServices) ams_setBiometricsState:]
	-[ACAccount(AppleMediaServices) ams_setDemoAccount:]
	-[ACAccount(AppleMediaServices) ams_migrateCookiePropertiesWithError:]
	-[ACAccount(AppleMediaServices) ams_DSID]
	-[ACAccount(AppleMediaServices) ams_isHSA2]
	-[ACAccount(AppleMediaServices) ams_delta:]
	-[ACAccount(AppleMediaServices) ams_homeID]
	-[ACAccount(AppleMediaServices) ams_altDSID]
	-[ACAccount(AppleMediaServices) ams_cookies]
	-[ACAccount(AppleMediaServices) hashedDescription]
	-[ACAccount(AppleMediaServices) ams_lastName]
	-[ACAccount(AppleMediaServices) ams_fullName]
	-[ACAccount(AppleMediaServices) ams_password]
	-[ACAccount(AppleMediaServices) ams_setDSID:]
	-[ACAccount(AppleMediaServices) ams_isIDMSAccount]
	-[ACAccount(AppleMediaServices) _ams_cookieProperties]
	-[ACAccount(AppleMediaServices) _accountPropertyForKey:dataProtectionClass:expectedClasses:error:]
	-[ACAccount(AppleMediaServices) _accountPropertyForKey:expectedClass:]
	-[ACAccount(AppleMediaServices) ams_dataMigrationStoragePath]
	-[ACAccount(AppleMediaServices) _archivedCookiesAtPath:]
	-[ACAccount(AppleMediaServices) ams_isiCloudAccount]
	-[ACAccount(AppleMediaServices) ams_isSandboxAccount]
	-[ACAccount(AppleMediaServices) ams_isiTunesAccount]
	-[ACAccount(AppleMediaServices) _setAccountProperty:forKey:expectedClass:]
	-[ACAccount(AppleMediaServices) ams_firstName]
	-[ACAccount(AppleMediaServices) ams_securityLevel]
	-[ACAccount(AppleMediaServices) ams_isDemoAccount]
	-[ACAccount(AppleMediaServices) ams_setInUse:]
	-[ACAccount(AppleMediaServices) _setAccountProperty:forKey:dataProtectionClass:expectedClass:]
	-[ACAccount(AppleMediaServices) ams_isLocalAccount]
	-[ACAccount(AppleMediaServices) ams_setStorefront:forMediaType:]
	-[ACAccount(AppleMediaServices) ams_storefrontForMediaType:]
	-[ACAccount(AppleMediaServices) ams_accountFlags]
	-[ACAccount(AppleMediaServices) ams_setAccountFlags:]
	-[ACAccount(AppleMediaServices) ams_privacyAcknowledgement]
	-[ACAccount(AppleMediaServices) _hashedStorefront]
	-[ACAccount(AppleMediaServices) ams_addCookies:error:]
	-[ACAccount(AppleMediaServices) ams_removeCookies:]
	-[ACAccount(AppleMediaServices) _updateCookiesWithCookiesToAdd:cookiesToRemove:error:]
	-[ACAccount(AppleMediaServices) ams_addCookiesForResponse:]
	-[ACAccount(AppleMediaServices) ams_addCookiesForResponse:error:]
	-[ACAccount(AppleMediaServices) ams_addCookies:]
	-[ACAccount(AppleMediaServices) ams_addGlobalCookiesForResponse:]
	-[ACAccount(AppleMediaServices) ams_removeAllCookiesWithError:]
	-[ACAccount(AppleMediaServices) ams_removeCookies:error:]
	-[ACAccount(AppleMediaServices) ams_removeCookiesMatchingProperties:error:]
	-[ACAccount(AppleMediaServices) _cookiesMatchingProperties:]
	-[ACAccount(AppleMediaServices) _hashedIdentifiers]
	-[ACAccount(AppleMediaServices) _hashedMultiUserIdentifiers]
	-[ACAccount(AppleMediaServices) _hashedActiveState]
	-[ACAccount(AppleMediaServices) _accountPropertyForKey:expectedClassContainedInArray:]
	-[ACAccount(AppleMediaServices) ams_storefront]
	-[ACAccount(AppleMediaServices) ams_creditsString]
	-[ACAccount(AppleMediaServices) _ams_setCookieProperties:]
	-[ACAccount(AppleMediaServices) _archivedCookieDataAtPath:error:]
	-[ACAccount(AppleMediaServices) ams_homeIdentifier]
	-[ACAccount(AppleMediaServices) ams_homeUserIdentifiers]
	-[ACAccount(AppleMediaServices) ams_isiCloudFamily]
	-[ACAccount(AppleMediaServices) ams_setHomeIdentifier:]
	-[ACAccount(AppleMediaServices) ams_addHomeUserIdentifier:]
	-[ACAccount(AppleMediaServices) ams_removeHomeUserIdentifier:]
	-[ACAccount(AppleMediaServices) ams_setAccountFlagValue:forAccountFlag:]
	-[ACAccount(AppleMediaServices) ams_accountFlagValueForAccountFlag:]
	-[ACAccount(AppleMediaServices) ams_automaticDownloadKinds]
	-[ACAccount(AppleMediaServices) ams_didAgreeToTerms]
	-[ACAccount(AppleMediaServices) ams_disableAccountFlagsSync]
	-[ACAccount(AppleMediaServices) ams_disablePrivacyAcknowledgementSync]
	-[ACAccount(AppleMediaServices) ams_freePasswordPromptSetting]
	-[ACAccount(AppleMediaServices) ams_setFreePasswordPromptSetting:]
	-[ACAccount(AppleMediaServices) ams_isInGoodStanding]
	-[ACAccount(AppleMediaServices) ams_isManagedAppleID]
	-[ACAccount(AppleMediaServices) ams_isValidPayment]
	-[ACAccount(AppleMediaServices) ams_lastAuthenticationServerResponse]
	-[ACAccount(AppleMediaServices) ams_requiresAuthKitUpdate]
	-[ACAccount(AppleMediaServices) ams_mergedPrivacyAcknowledgement]
	-[ACAccount(AppleMediaServices) ams_paidPasswordPromptSetting]
	-[ACAccount(AppleMediaServices) ams_setAltDSID:]
	-[ACAccount(AppleMediaServices) ams_setPaidPasswordPromptSetting:]
	-[ACAccount(AppleMediaServices) ams_pushRegistrationThrottleMap]
	-[ACAccount(AppleMediaServices) ams_rawPassword]
	-[ACAccount(AppleMediaServices) ams_registerSuccessCriteria]
	-[ACAccount(AppleMediaServices) ams_setAgreedToTerms:]
	-[ACAccount(AppleMediaServices) ams_setCreditsString:]
	-[ACAccount(AppleMediaServices) ams_setDisableAccountFlagsSync:]
	-[ACAccount(AppleMediaServices) ams_setDisablePrivacyAcknowledgementSync:]
	-[ACAccount(AppleMediaServices) ams_setFirstName:]
	-[ACAccount(AppleMediaServices) ams_setiCloudFamily:]
	-[ACAccount(AppleMediaServices) ams_setInGoodStanding:]
	-[ACAccount(AppleMediaServices) ams_setLastName:]
	-[ACAccount(AppleMediaServices) ams_setManagedAppleID:]
	-[ACAccount(AppleMediaServices) ams_setMergedPrivacyAcknowledgement:]
	-[ACAccount(AppleMediaServices) ams_setPassword:]
	-[ACAccount(AppleMediaServices) ams_setPushRegistrationThrottleMap:]
	-[ACAccount(AppleMediaServices) ams_setRawPassword:]
	-[ACAccount(AppleMediaServices) ams_setServerResponse:]
	-[ACAccount(AppleMediaServices) ams_setRegisterSuccessCriteria:]
	-[ACAccount(AppleMediaServices) ams_setStorefront:]
	-[ACAccount(AppleMediaServices) ams_setValidPayment:]
	-[ACAccount(AppleMediaServices) ams_encryptAccountFlags]
	-[ACAccount(AppleMediaServices) ams_isActiveForMediaType:]
	-[ACAccount(AppleMediaServices) ams_isDuplicate:]
	-[ACAccount(AppleMediaServices) ams_homeUserID]
	-[ACAccount(AppleMediaServices) ams_mergePrivacyAcknowledgement:]
	-[ACAccount(AppleMediaServices) ams_setActive:forMediaType:]
	-[ACAccount(AppleMediaServices) ams_cookiesForURL:]
	-[ACAccount(AppleMediaServices) ams_addCookiesForResult:]
	-[ACAccount(AppleMediaServices) ams_addGlobalCookiesForResult:]
	-[ACAccount(AppleMediaServices) ams_removeAllCookies]
	-[ACAccount(AppleMediaServices) ams_removeCookiesMatchingProperties:]
	-[ACAccount(AppleMediaServices) ams_postAccountFlagsWithBagContract:]
	-[ACAccount(AppleMediaServices) _ams_migrateCookieProperties:intoCookies:error:]
	-[ACAccount(AppleMediaServices) ams_secureToken]
	-[ACAccount(AppleMediaServices) ams_setHomeID:]
	-[ACAccount(AppleMediaServices) ams_setHomeUserID:]
	-[ACAccount(AppleMediaServices) ams_isPrivateListeningEnabled]
	-[ACAccount(AppleMediaServices) ams_isPrivateListeningEnabledForHomeUserIdentifier:]
	-[ACAccount(AppleMediaServices) ams_setValue:forAccountFlag:]
	-[ACAccount(AppleMediaServices) ams_setPrivateListeningEnabled:forHomeUserIdentifier:]
	-[ACAccount(AppleMediaServices) ams_valueForAccountFlag:]

ACAccountStore(AppleMediaServices)
	// class methods
	+[ACAccountStore(AppleMediaServices) ams_sharedAccountStoreForMediaType:]
	+[ACAccountStore(AppleMediaServices) ams_accountTypeIdentifierForMediaType:]
	+[ACAccountStore(AppleMediaServices) _secureTokenForIdentifier:]
	+[ACAccountStore(AppleMediaServices) ams_sharedAccountStoreForClient:]
	+[ACAccountStore(AppleMediaServices) ams_sharedAccountStoreForProcessInfo:]
	+[ACAccountStore(AppleMediaServices) ams_sharedAccountStore]

	// instance methods
	-[ACAccountStore(AppleMediaServices) _saveAccount:verifyCredentials:]
	-[ACAccountStore(AppleMediaServices) ams_saveAccount:]
	-[ACAccountStore(AppleMediaServices) ams_activeiCloudAccount]
	-[ACAccountStore(AppleMediaServices) ams_activeiTunesAccount]
	-[ACAccountStore(AppleMediaServices) ams_iTunesAccountWithAltDSID:DSID:username:]
	-[ACAccountStore(AppleMediaServices) ams_iTunesAccounts]
	-[ACAccountStore(AppleMediaServices) ams_localiTunesAccountForAccountMediaType:]
	-[ACAccountStore(AppleMediaServices) _ams_accountsWithAccountTypeIdentifier:options:error:]
	-[ACAccountStore(AppleMediaServices) ams_activeiTunesAccountForMediaType:]
	-[ACAccountStore(AppleMediaServices) ams_iTunesAccountsForMediaType:]
	-[ACAccountStore(AppleMediaServices) ams_iTunesAccountWithAltDSID:DSID:username:forMediaType:]
	-[ACAccountStore(AppleMediaServices) ams_localiTunesAccount]
	-[ACAccountStore(AppleMediaServices) _correspondingAccountWithAccountTypeIdentifier:forAccount:]
	-[ACAccountStore(AppleMediaServices) ams_iTunesAccountWithAltDSID:]
	-[ACAccountStore(AppleMediaServices) ams_iTunesAccountWithDSID:]
	-[ACAccountStore(AppleMediaServices) ams_iTunesAccountWithUsername:]
	-[ACAccountStore(AppleMediaServices) _ams_fetchAccountsWithAccountTypeIdentifier:options:]
	-[ACAccountStore(AppleMediaServices) _accountTypeForMediaType:]
	-[ACAccountStore(AppleMediaServices) ams_localiTunesAccountForAccountType:]
	-[ACAccountStore(AppleMediaServices) _fetchLocaliTunesAccountForAccountType:]
	-[ACAccountStore(AppleMediaServices) _createLocaliTunesAccountForAccountType:]
	-[ACAccountStore(AppleMediaServices) ams_saveAccount:withOptions:]
	-[ACAccountStore(AppleMediaServices) ams_iTunesAccountForAccount:]
	-[ACAccountStore(AppleMediaServices) ams_isAccountNew:]
	-[ACAccountStore(AppleMediaServices) ams_alliTunesAccounts]
	-[ACAccountStore(AppleMediaServices) _addUserCookiesForResponse:account:error:]
	-[ACAccountStore(AppleMediaServices) _addGlobalCookiesForResponse:error:]
	-[ACAccountStore(AppleMediaServices) ams_addCookiesForResponse:account:error:]
	-[ACAccountStore(AppleMediaServices) ams_mediaAccountForHomeWithIdentifier:]
	-[ACAccountStore(AppleMediaServices) _ams_fetchAccountTypeWithAccountTypeIdenfitier:]
	-[ACAccountStore(AppleMediaServices) _iTunesAccountsForAccountType:]
	-[ACAccountStore(AppleMediaServices) ams_accountWithAltDSID:DSID:username:accountTypeIdentifier:]
	-[ACAccountStore(AppleMediaServices) ams_iTunesAccountForHomeWithIdentifier:error:]
	-[ACAccountStore(AppleMediaServices) ams_iTunesAccountWithHomeUserID:]
	-[ACAccountStore(AppleMediaServices) ams_iTunesAccountsWithHomeUserIdentifiers]
	-[ACAccountStore(AppleMediaServices) ams_iTunesAccountWithHomeUserIdentifier:]
	-[ACAccountStore(AppleMediaServices) ams_isActiveAccountCombined]
	-[ACAccountStore(AppleMediaServices) ams_fetchLocaliTunesAccount]
	-[ACAccountStore(AppleMediaServices) ams_IDSAccountForAccount:]
	-[ACAccountStore(AppleMediaServices) ams_fetchGrandSlamTokenForAccount:withIdentifier:error:]
	-[ACAccountStore(AppleMediaServices) ams_iTunesSandboxAccounts]
	-[ACAccountStore(AppleMediaServices) ams_iCloudAccountForAccount:]
	-[ACAccountStore(AppleMediaServices) ams_iTunesAccountWithAltDSID:forMediaType:]
	-[ACAccountStore(AppleMediaServices) ams_iTunesAccountWithDSID:forMediaType:]
	-[ACAccountStore(AppleMediaServices) ams_addCookiesForResult:account:error:]
	-[ACAccountStore(AppleMediaServices) ams_iTunesAccountWithUsername:forMediaType:]
	-[ACAccountStore(AppleMediaServices) ams_iTunesAccountsForMediaTypes:]
	-[ACAccountStore(AppleMediaServices) ams_setiTunesAccount:forHomeWithIdentifier:]
	-[ACAccountStore(AppleMediaServices) ams_setSecureToken:forAccount:error:]
	-[ACAccountStore(AppleMediaServices) ams_addCookiesForResponse:request:account:error:]
	-[ACAccountStore(AppleMediaServices) ams_iTunesAccountsWithHomeUserID]
	-[ACAccountStore(AppleMediaServices) ams_iTunesAccountForHomeWithIdentifier:]
	-[ACAccountStore(AppleMediaServices) ams_iTunesAccountWithHomeID:]
	-[ACAccountStore(AppleMediaServices) _ams_accountWithIdentifier:error:]
	-[ACAccountStore(AppleMediaServices) _ams_accountTypeWithAccountTypeIdentifier:error:]
	-[ACAccountStore(AppleMediaServices) _ams_accountsWithAccountType:options:error:]
	-[ACAccountStore(AppleMediaServices) _ams_localiTunesAccount]
	-[ACAccountStore(AppleMediaServices) _ams_fetchAccountsWithAccountType:options:]
	-[ACAccountStore(AppleMediaServices) _ams_fetchAccountWithIdentifier:]
	-[ACAccountStore(AppleMediaServices) ams_IDMSAccountForAccount:]
	-[ACAccountStore(AppleMediaServices) ams_removeCookiesMatchingProperties:error:]
	-[ACAccountStore(AppleMediaServices) ams_mediaType]
	-[ACAccountStore(AppleMediaServices) ams_saveAccount:verifyCredentials:]
	-[ACAccountStore(AppleMediaServices) ams_secureTokenForAccount:]
	-[ACAccountStore(AppleMediaServices) ams_cookiesForURL:]
	-[ACAccountStore(AppleMediaServices) ams_demoAccount]

NSFileManager(AppleMediaServices)
	// class methods
	+[NSFileManager(AppleMediaServices) ams_ensureDirectoryExists:]

(AppleMediaServices)
	// class methods
	+[(AppleMediaServices) ams_enumerateObjectsForArrays:usingBlock:]
	+[(AppleMediaServices) ams_arrayWithItem:count:]

	// instance methods
	-[(AppleMediaServices) ams_mapWithTransform:]
	-[(AppleMediaServices) ams_sanitizedForSecureCoding]
	-[(AppleMediaServices) ams_nonEmptyComponentsJoinedByString:]
	-[(AppleMediaServices) ams_objectAtIndex:]
	-[(AppleMediaServices) ams_invertedDictionaryUsingTransformIgnoresNil:]
	-[(AppleMediaServices) ams_arrayByRemovingObjectsFromArray:]
	-[(AppleMediaServices) ams_invertedDictionaryUsingTransform:]
	-[(AppleMediaServices) ams_anyWithTest:]
	-[(AppleMediaServices) ams_dictionaryUsingTransform:]
	-[(AppleMediaServices) ams_allWithTest:]
	-[(AppleMediaServices) hashedDescription]
	-[(AppleMediaServices) ams_mapWithTransformIgnoresNil:]
	-[(AppleMediaServices) ams_filterUsingTest:]
	-[(AppleMediaServices) ams_firstObjectPassingTest:]

NSBundle(AppleMediaServices)
	// class methods
	+[NSBundle(AppleMediaServices) ams_MusicBundle]
	+[NSBundle(AppleMediaServices) ams_AppleMediaServicesBundle]

NSCoder(AppleMediaServices)
	// instance methods
	-[NSCoder(AppleMediaServices) ams_decodeJSONArrayForKey:]
	-[NSCoder(AppleMediaServices) _ams_decodeJSONObjectForKey:error:]
	-[NSCoder(AppleMediaServices) _ams_decodePropertyListObjectForKey:error:]
	-[NSCoder(AppleMediaServices) _ams_encodeJSONObject:forKey:error:]
	-[NSCoder(AppleMediaServices) ams_decodePropertyListArrayForKey:]
	-[NSCoder(AppleMediaServices) _ams_encodePropertyListObject:forKey:format:error:]
	-[NSCoder(AppleMediaServices) ams_encodeJSONArray:forKey:]
	-[NSCoder(AppleMediaServices) ams_encodePropertyListArray:format:forKey:]
	-[NSCoder(AppleMediaServices) ams_encodeJSONDictionary:forKey:]
	-[NSCoder(AppleMediaServices) ams_decodeJSONDictionaryForKey:]
	-[NSCoder(AppleMediaServices) ams_decodePropertyListDictionaryForKey:]
	-[NSCoder(AppleMediaServices) ams_encodePropertyListDictionary:format:forKey:]

(AppleMediaServices)
	// class methods
	+[(AppleMediaServices) _AESKeyForDataProtectionClass:error:]
	+[(AppleMediaServices) _generateInitializationVectorDataWithError:]
	+[(AppleMediaServices) _labelForDataProtectionClass:]
	+[(AppleMediaServices) _accessibleAttributeForDataProtectionClass:]
	+[(AppleMediaServices) ams_generateEncryptionKey]

	// instance methods
	-[(AppleMediaServices) _compressGZIP]
	-[(AppleMediaServices) _compressLZMA]
	-[(AppleMediaServices) ams_decompressWithAlgorithm:]
	-[(AppleMediaServices) _decompressGZIP]
	-[(AppleMediaServices) _decompressLZMA]
	-[(AppleMediaServices) ams_decryptUsingKey:initializationVectorData:tagData:error:]
	-[(AppleMediaServices) ams_nvramDescription]
	-[(AppleMediaServices) ams_encryptDataUsingKey:error:]
	-[(AppleMediaServices) ams_hexAddressDescription]
	-[(AppleMediaServices) ams_compressedData]
	-[(AppleMediaServices) ams_decompressedData]
	-[(AppleMediaServices) ams_compressWithAlgorithm:]
	-[(AppleMediaServices) ams_SHA1]
	-[(AppleMediaServices) ams_decryptUsingDataProtectionClass:initializationVectorData:tagData:error:]
	-[(AppleMediaServices) ams_encryptDataUsingDataProtectionClass:error:]

(AppleMediaServices_EncryptionResult)
	// class methods
	+[(AppleMediaServices_EncryptionResult) ams_dictionaryWithEncryptionResult:]

	// instance methods
	-[(AppleMediaServices_EncryptionResult) ams_mapWithTransform:]
	-[(AppleMediaServices_EncryptionResult) ams_sanitizedForSecureCoding]
	-[(AppleMediaServices_EncryptionResult) ams_objectForKey:defaultValue:]
	-[(AppleMediaServices_EncryptionResult) ams_firstKeyObjectPassingTest:]
	-[(AppleMediaServices_EncryptionResult) ams_componentsJoinedByString:]
	-[(AppleMediaServices_EncryptionResult) ams_firstKeyPassingTest:]
	-[(AppleMediaServices_EncryptionResult) ams_dictionaryRemovingKeys:]
	-[(AppleMediaServices_EncryptionResult) ams_dictionaryByAddingEntriesFromDictionary:]
	-[(AppleMediaServices_EncryptionResult) ams_objectForCaseInsensitiveKey:]
	-[(AppleMediaServices_EncryptionResult) hashedDescription]
	-[(AppleMediaServices_EncryptionResult) ams_filterUsingTest:]
	-[(AppleMediaServices_EncryptionResult) ams_encryptionResult]
	-[(AppleMediaServices_EncryptionResult) ams_firstObjectPassingTest:]
	-[(AppleMediaServices_EncryptionResult) ams_arrayUsingTransform:]

(AppleMediaServices)
	// class methods
	+[(AppleMediaServices) ams_momentInUTCGregorianAtYear:month:day:hour:minute:second:]

(AppleMediaServices)
	// class methods
	+[(AppleMediaServices) serverFriendlyFormatter]

(AppleMediaServices)
	// instance methods
	-[(AppleMediaServices) ams_hasDomain:code:]
	-[(AppleMediaServices) ams_title]
	-[(AppleMediaServices) ams_sanitizedForSecureCoding]
	-[(AppleMediaServices) ams_errorWithUnderlyingError:]
	-[(AppleMediaServices) ams_errorByAddingToMultipleUnderlyingErrors:]
	-[(AppleMediaServices) ams_underlyingErrorWithDomain:code:]
	-[(AppleMediaServices) ams_underlyingError]
	-[(AppleMediaServices) _ams_firstUnderlyingErrorPassingTest:]
	-[(AppleMediaServices) ams_errorByCombiningWithUnderlyingError:]
	-[(AppleMediaServices) ams_errorWithMultipleUnderlyingErrors:]
	-[(AppleMediaServices) ams_underlyingErrorWithDomain:]
	-[(AppleMediaServices) ams_errorByAddingUnderlyingError:]
	-[(AppleMediaServices) ams_errorByAddingUserInfo:]
	-[(AppleMediaServices) ams_message]
	-[(AppleMediaServices) ams_recursiveHasDomain:code:]
	-[(AppleMediaServices) ams_multipleUnderlyingErrors]
	-[(AppleMediaServices) ams_hasDomain:]
	-[(AppleMediaServices) ams_isUserCancelledError]
	-[(AppleMediaServices) ams_isTimeoutError]

NSHTTPCookie(AMSSecureCoding)
	// class methods
	+[NSHTTPCookie(AMSSecureCoding) supportsSecureCoding]
	+[NSHTTPCookie(AMSSecureCoding) classesForPropertyCoding]
	+[NSHTTPCookie(AMSSecureCoding) ams_dataByArchivingPropertiesOfCookies:error:]
	+[NSHTTPCookie(AMSSecureCoding) ams_propertiesForCookies:]
	+[NSHTTPCookie(AMSSecureCoding) ams_cookiesByMergingProperties:intoProperties:]
	+[NSHTTPCookie(AMSSecureCoding) ams_cookiesForProperties:]
	+[NSHTTPCookie(AMSSecureCoding) ams_cookieByMarkingCookieAsDeleted:]
	+[NSHTTPCookie(AMSSecureCoding) ams_cookiesByUnarchivingPropertyData:error:]

	// instance methods
	-[NSHTTPCookie(AMSSecureCoding) initWithCoder:]
	-[NSHTTPCookie(AMSSecureCoding) ams_isEqualToCookie:]
	-[NSHTTPCookie(AMSSecureCoding) ams_isCookieValidForBag]
	-[NSHTTPCookie(AMSSecureCoding) hashedDescription]
	-[NSHTTPCookie(AMSSecureCoding) ams_isExpired]
	-[NSHTTPCookie(AMSSecureCoding) ams_isDeleted]
	-[NSHTTPCookie(AMSSecureCoding) ams_isEquivalent:]
	-[NSHTTPCookie(AMSSecureCoding) encodeWithCoder:]

NSHTTPURLResponse(AMSAnisette)
	// instance methods
	-[NSHTTPURLResponse(AMSAnisette) _anisetteType]
	-[NSHTTPURLResponse(AMSAnisette) ams_actionDataV1]
	-[NSHTTPURLResponse(AMSAnisette) ams_actionNameV1_5]
	-[NSHTTPURLResponse(AMSAnisette) ams_actionNameV1]
	-[NSHTTPURLResponse(AMSAnisette) ams_actionDataV1_5]
	-[NSHTTPURLResponse(AMSAnisette) ams_actionName]
	-[NSHTTPURLResponse(AMSAnisette) ams_fsrTransactionID]
	-[NSHTTPURLResponse(AMSAnisette) ams_actionData]
	-[NSHTTPURLResponse(AMSAnisette) ams_fsrNameSpace]
	-[NSHTTPURLResponse(AMSAnisette) ams_fsrAnonymousID]
	-[NSHTTPURLResponse(AMSAnisette) ams_fsrCallbackUrl]
	-[NSHTTPURLResponse(AMSAnisette) ams_fsrData]
	-[NSHTTPURLResponse(AMSAnisette) ams_fsrKeyID]

<DEREK BUG Categories!>(AppleMediaServices)
	// instance methods
	-[<DEREK BUG Categories!>(AppleMediaServices) ams_addNullableObject:]
	-[<DEREK BUG Categories!>(AppleMediaServices) ams_removeObjectsPassingTest:]
	-[<DEREK BUG Categories!>(AppleMediaServices) ams_addObjectsFromNullableArray:]

<DEREK BUG Categories!>(AppleMediaServices)
	// instance methods
	-[<DEREK BUG Categories!>(AppleMediaServices) ams_setNullableObject:forKey:]

<DEREK BUG Categories!>(AppleMediaServices)
	// instance methods
	-[<DEREK BUG Categories!>(AppleMediaServices) ams_appendNullableString:]

(AppleMediaServices)
	// instance methods
	-[(AppleMediaServices) ams_generateDescriptionWithSubObjects:]

NSOrderedCollectionDifference(AppleMediaServices)
	// instance methods
	-[NSOrderedCollectionDifference(AppleMediaServices) ams_insertedObjects]
	-[NSOrderedCollectionDifference(AppleMediaServices) ams_removedObjects]

(AppleMediaServices)
	// class methods
	+[(AppleMediaServices) ams_JSONClasses]
	+[(AppleMediaServices) ams_PLISTClasses]

	// instance methods
	-[(AppleMediaServices) ams_mapWithTransform:]
	-[(AppleMediaServices) ams_nonEmptyComponentsJoinedByString:]
	-[(AppleMediaServices) ams_filterUsingTest:]
	-[(AppleMediaServices) ams_firstObjectPassingTest:]

(AppleMediaServices)
	// class methods
	+[(AppleMediaServices) _replaceMarkupForMutableAttributedString:markupType:]
	+[(AppleMediaServices) _replaceBreakingSpaceMarkupForMutableAttributedString:]

	// instance methods
	-[(AppleMediaServices) ams_caseInsensitiveEquals:]
	-[(AppleMediaServices) ams_replacingPatternWithUsername:]
	-[(AppleMediaServices) ams_replacingMarkupUsingAccount:shouldUppercase:]
	-[(AppleMediaServices) ams_matchesRegex:]
	-[(AppleMediaServices) ams_stringByRemovingCharactersInSet:]

NSThread(AppleMediaServices)
	// class methods
	+[NSThread(AppleMediaServices) ams_symbolicatedCallStackSymbols]

(AppleMediaServices)
	// class methods
	+[(AppleMediaServices) ams_dynamicUIDirectory]
	+[(AppleMediaServices) ams_unescapedStringForString:]
	+[(AppleMediaServices) _isAppendWithUnmodifiedParametersFeatureFlagEnabled]
	+[(AppleMediaServices) ams_cachesDirectory]
	+[(AppleMediaServices) ams_dataVaultDirectory]
	+[(AppleMediaServices) ams_engagementDirectory]
	+[(AppleMediaServices) ams_realHomeDirectory]

	// instance methods
	-[(AppleMediaServices) ams_URLByReplacingSchemeWithScheme:]
	-[(AppleMediaServices) ams_URLBySortingQueryParameters]
	-[(AppleMediaServices) ams_URLByReplaceingQueryParameters:]
	-[(AppleMediaServices) ams_URLByAppendingQueryParameter:name:]
	-[(AppleMediaServices) ams_parameters]
	-[(AppleMediaServices) ams_URLByReplaceingQueryParameters:withEncodedParameters:]
	-[(AppleMediaServices) ams_unmodifiedParameters]
	-[(AppleMediaServices) ams_URLQueryAllowedCharacterSet]
	-[(AppleMediaServices) _ams_URLWithSortedParameters:]
	-[(AppleMediaServices) ams_schemeSwizzledURL]
	-[(AppleMediaServices) _sortedQueryStringFromParameters:]
	-[(AppleMediaServices) ams_valueForQueryParameter:]
	-[(AppleMediaServices) ams_URLByAppendingQueryParameters:]
	-[(AppleMediaServices) ams_URLByDeletingTrailingSlash]

NSURLQueryItem(AppleMediaServices)
	// class methods
	+[NSURLQueryItem(AppleMediaServices) queryItemsFromDictionary:]

NSURLRequest(AMSMockURLRequest)
	// instance methods
	-[NSURLRequest(AMSMockURLRequest) body]
	-[NSURLRequest(AMSMockURLRequest) ams_valueForHTTPHeader:]
	-[NSURLRequest(AMSMockURLRequest) ams_requestIsBagLoad]
	-[NSURLRequest(AMSMockURLRequest) ams_cookies]

NSMutableURLRequest(AppleMediaServices)
	// instance methods
	-[NSMutableURLRequest(AppleMediaServices) ams_addCookiesForAccount:clientInfo:bag:]
	-[NSMutableURLRequest(AppleMediaServices) ams_addIdentifierHeadersForAccount:]
	-[NSMutableURLRequest(AppleMediaServices) ams_addAbsintheHeadersWithBuyParams:bag:]
	-[NSMutableURLRequest(AppleMediaServices) ams_addAbsintheHeaderRemotelyWithBuyParams:bag:signingService:]
	-[NSMutableURLRequest(AppleMediaServices) ams_addMescalHeaderWithType:bag:logKey:]
	-[NSMutableURLRequest(AppleMediaServices) ams_removeAnisetteHeaders]
	-[NSMutableURLRequest(AppleMediaServices) ams_addAnisetteHeadersForAccount:type:bag:]
	-[NSMutableURLRequest(AppleMediaServices) ams_addGSTokenForAccount:identifier:]
	-[NSMutableURLRequest(AppleMediaServices) ams_addAuthKitHeaders]
	-[NSMutableURLRequest(AppleMediaServices) ams_addPrimaryiCloudIdentifierHeader]
	-[NSMutableURLRequest(AppleMediaServices) ams_addABPayloadHeaderForTreatmentNamespace:]
	-[NSMutableURLRequest(AppleMediaServices) ams_addAcceptLanguageHeader]
	-[NSMutableURLRequest(AppleMediaServices) ams_addCacheBusterParameter]
	-[NSMutableURLRequest(AppleMediaServices) ams_addCachePolicyHeader]
	-[NSMutableURLRequest(AppleMediaServices) ams_addClientIdentifierHeaderForClient:]
	-[NSMutableURLRequest(AppleMediaServices) ams_addClientVersionsForClient:]
	-[NSMutableURLRequest(AppleMediaServices) ams_addConnectionTypeHeader]
	-[NSMutableURLRequest(AppleMediaServices) ams_addGUIDParameterUsingBag:]
	-[NSMutableURLRequest(AppleMediaServices) ams_addIssuingProcessHeader]
	-[NSMutableURLRequest(AppleMediaServices) ams_addRequestingProcessWithClient:]
	-[NSMutableURLRequest(AppleMediaServices) ams_addTimezoneOffsetHeader]
	-[NSMutableURLRequest(AppleMediaServices) ams_addUserAgentHeaderFromClient:]
	-[NSMutableURLRequest(AppleMediaServices) ams_addXGroupDSIDsWithPrimaryAccount:andGroupAccounts:]
	-[NSMutableURLRequest(AppleMediaServices) ams_addBiometricsHeadersForAccount:options:]
	-[NSMutableURLRequest(AppleMediaServices) ams_addSilentEnrollmentHeadersForAccount:]
	-[NSMutableURLRequest(AppleMediaServices) ams_setBodyParameters:encoding:compressBody:error:]
	-[NSMutableURLRequest(AppleMediaServices) _ams_replaceCookies:]
	-[NSMutableURLRequest(AppleMediaServices) _syncAddHeadersFromPromise:error:]
	-[NSMutableURLRequest(AppleMediaServices) _ams_addCookies:]
	-[NSMutableURLRequest(AppleMediaServices) _addAbsintheHeadersFromPromise:]
	-[NSMutableURLRequest(AppleMediaServices) _ams_separateCookies:]
	-[NSMutableURLRequest(AppleMediaServices) ams_addContentTypeHeaderForEncoding:]
	-[NSMutableURLRequest(AppleMediaServices) ams_addContentLengthHeaderForData:]
	-[NSMutableURLRequest(AppleMediaServices) ams_addAuthorizationHeaderForAccount:]
	-[NSMutableURLRequest(AppleMediaServices) ams_addStoreFrontHeaderForAccount:client:withBag:]
	-[NSMutableURLRequest(AppleMediaServices) ams_addHeaders:]
	-[NSMutableURLRequest(AppleMediaServices) ams_addXTokenHeaderWithAccount:]
	-[NSMutableURLRequest(AppleMediaServices) ams_addRequestTimestampHeader]

NSURLResponse(AppleMediaServices)
	// instance methods
	-[NSURLResponse(AppleMediaServices) ams_statusCode]
	-[NSURLResponse(AppleMediaServices) ams_headers]
	-[NSURLResponse(AppleMediaServices) ams_valueForHTTPHeader:]
	-[NSURLResponse(AppleMediaServices) _getCacheControlMaxAge:]
	-[NSURLResponse(AppleMediaServices) ams_expirationInterval]

NSURLSessionConfiguration(AppleMediaServices)
	// class methods
	+[NSURLSessionConfiguration(AppleMediaServices) ams_imageConfiguration]
	+[NSURLSessionConfiguration(AppleMediaServices) _URLBagCache]
	+[NSURLSessionConfiguration(AppleMediaServices) ams_configurationWithClientInfo:bag:]
	+[NSURLSessionConfiguration(AppleMediaServices) ams_configurationWithProcessInfo:bag:]

	// instance methods
	-[NSURLSessionConfiguration(AppleMediaServices) ams_configureWithClientInfo:bag:]
	-[NSURLSessionConfiguration(AppleMediaServices) ams_configureWithProcessInfo:bag:]

NSUUID(AppleMediaServices)
	// instance methods
	-[NSUUID(AppleMediaServices) ams_base62String]

01 00 0500 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccount 
01 00 0500 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountCredential 
01 00 0500 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountStore 
01 00 0800 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAccountManager 
01 00 0800 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAppleIDAuthenticationContext 
01 00 0800 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAppleIDAuthenticationController 
01 00 0800 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAppleIDSession 
01 00 0800 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAuthorization 
01 00 0800 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAuthorizationController 
01 00 0800 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAuthorizationRequest 
01 00 0800 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKCredentialRequestContext 
01 00 0800 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKDevice 
01 00 0800 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKProxiedClientContext 
01 00 0800 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKUsernameFormatter 
01 00 0700 /System/Library/PrivateFrameworks/AssertionServices.framework/AssertionServices: BKSProcessAssertion 
01 00 1200 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: BSAuditToken 
01 00 1200 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: BSProcessHandle 
01 00 0d00 /System/Library/Frameworks/CoreTelephony.framework/CoreTelephony: CTTelephonyNetworkInfo 
01 00 0d00 /System/Library/Frameworks/CoreTelephony.framework/CoreTelephony: CoreTelephonyClient 
01 00 1200 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: FBSDisplayLayoutMonitor 
01 00 1200 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: FBSDisplayLayoutMonitorConfiguration 
01 00 1100 /System/Library/PrivateFrameworks/FeatureFlagsSupport.framework/FeatureFlagsSupport: FFConfiguration 
01 00 1100 /System/Library/PrivateFrameworks/FeatureFlagsSupport.framework/FeatureFlagsSupport: FFFeatureAttribute 
01 00 1300 /System/Library/PrivateFrameworks/IDS.framework/IDS: IDSPhoneCertificateVendor 
01 00 1a00 /System/Library/Frameworks/LocalAuthentication.framework/LocalAuthentication: LAContext 
01 00 0b00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSAppLink 
01 00 0b00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationWorkspace 
01 00 0b00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSBundleRecord 
01 00 1b00 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 2700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 2300 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 2300 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 2700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCache 
01 00 2700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 2300 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 2300 /System/Library/Frameworks/Foundation.framework/Foundation: NSCoder 
01 00 2300 /System/Library/Frameworks/Foundation.framework/Foundation: NSConditionLock 
01 00 2700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 2700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 2300 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 2300 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 2700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 2700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 2700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDateComponents 
01 00 2300 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 2300 /System/Library/Frameworks/Foundation.framework/Foundation: NSDecimalNumber 
01 00 2700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 2300 /System/Library/Frameworks/Foundation.framework/Foundation: NSDistributedNotificationCenter 
01 00 2300 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 2700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 2300 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileCoordinator 
01 00 2300 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileHandle 
01 00 2300 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0900 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSHTTPCookie 
01 00 0900 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSHTTPURLResponse 
01 00 2300 /System/Library/Frameworks/Foundation.framework/Foundation: NSISO8601DateFormatter 
01 00 2300 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexSet 
01 00 2700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSInvocation 
01 00 2300 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 2300 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 2300 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 2700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 2300 /System/Library/Frameworks/Foundation.framework/Foundation: NSLock 
01 00 2300 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 2700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMethodSignature 
01 00 2700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 2300 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableAttributedString 
01 00 2700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 2700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 2300 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 2700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 2700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 2300 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0900 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSMutableURLRequest 
01 00 2300 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 2700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 2300 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 2300 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 2400 /usr/lib/libobjc.A.dylib: NSObject 
01 00 2300 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperation 
01 00 2300 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 2300 /System/Library/Frameworks/Foundation.framework/Foundation: NSOrderedCollectionDifference 
01 00 2700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOutputStream 
01 00 2300 /System/Library/Frameworks/Foundation.framework/Foundation: NSPersonNameComponents 
01 00 2300 /System/Library/Frameworks/Foundation.framework/Foundation: NSPersonNameComponentsFormatter 
01 00 2300 /System/Library/Frameworks/Foundation.framework/Foundation: NSPointerArray 
01 00 2300 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 2300 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 2300 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 2300 /System/Library/Frameworks/Foundation.framework/Foundation: NSScanner 
01 00 2700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 2300 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 2300 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 2300 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 2700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 2700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0900 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLCache 
01 00 2300 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 0900 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLCredential 
01 00 0900 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLProtocol 
01 00 2300 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLQueryItem 
01 00 0900 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLRequest 
01 00 0900 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLResponse 
01 00 0900 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLSession 
01 00 0900 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLSessionConfiguration 
01 00 0900 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLSessionTaskMetrics 
01 00 2300 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 2700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 2300 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 2300 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 2300 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 2300 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListener 
01 00 1c00 /System/Library/Frameworks/Network.framework/Network: NWInterface 
01 00 0300 /System/Library/PrivateFrameworks/Symptoms.framework/Frameworks/SymptomPresentationFeed.framework/SymptomPresentationFeed: NWNetworkOfInterestManager 
01 00 1d00 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBCodable 
01 00 1e00 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSProcessHandle 
01 00 2000 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSMutableUserNotificationTextFieldDefinition 
01 00 2000 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSRemoteAlertActivationContext 
01 00 2000 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSRemoteAlertConfigurationContext 
01 00 2000 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSRemoteAlertDefinition 
01 00 2000 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSRemoteAlertHandle 
01 00 2000 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSRemoteAlertPresentationTarget 
01 00 0100 /System/Library/PrivateFrameworks/UserManagement.framework/UserManagement: UMUserManager 
01 00 2200 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNCalendarNotificationTrigger 
01 00 2200 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNMutableNotificationContent 
01 00 2200 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNNotificationAction 
01 00 2200 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNNotificationActionIcon 
01 00 2200 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNNotificationAttachment 
01 00 2200 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNNotificationRequest 
01 00 2200 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNUserNotificationCenter 
01 00 0b00 /System/Library/Frameworks/CoreServices.framework/CoreServices: _LSOpenConfiguration 
